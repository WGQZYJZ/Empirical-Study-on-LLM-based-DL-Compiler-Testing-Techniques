==========mod==========
#[version = "0.0.5"]
def @func_8443() -> (Tensor[(16, 16, 11), float64],) {
  %0 = @func_5914() /* ty=Tensor[(16, 16, 11), float64] */;
  (%0,)
}

def @func_5930() -> Tensor[(16, 16, 11), float64] {
  @func_2676() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_2552(%var_2547: Tensor[(1, 13, 1), float32]) -> Tensor[(1, 13, 1), float32] {
  %1 = cast(%var_2547, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
  cosh(%1) /* ty=Tensor[(1, 13, 1), float32] */
}

def @func_2296() -> Tensor[(16, 16, 11), float64] {
  %2 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %2.0
}

def @func_836(%var_821: Tensor[(14, 10, 3), uint32], %var_822: Tensor[(14, 10, 3), uint32], %var_832: Tensor[(280), float32]) -> (Tensor[(14, 10, 3), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %3 = cast(%var_822, dtype="uint32") /* ty=Tensor[(14, 10, 3), uint32] */;
  %4 = shape_of(%var_821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%var_821, dtype="uint32") /* ty=Tensor[(14, 10, 3), uint32] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %7 = cast(%var_832, dtype="float32") /* ty=Tensor[(280), float32] */;
  %8 = reshape(%7, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %9 = @func_672(%8) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */;
  %10 = subtract(%5, %6) /* ty=Tensor[(14, 10, 3), uint32] */;
  %11 = %9.0;
  (%10, %11, %var_832)
}

def @func_1302() -> (Tensor[(16, 16, 11), float64],) {
  %12 = @func_953() /* ty=Tensor[(16, 16, 11), float64] */;
  (%12,)
}

def @func_5436(%var_5422: Tensor[(3, 11, 16), float32]) -> (Tensor[(3, 11, 16), float32], Tensor[(3, 11, 16), float32]) {
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 11, 16), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %14 = shape_of(%var_5422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%var_5422, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %17 = cast(%var_5422, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %18 = floor_divide(%15, %16) /* ty=Tensor[(3, 11, 16), float32] */;
  %19 = erf(%17) /* ty=Tensor[(3, 11, 16), float32] */;
  (%18, %19)
}

def @func_3548() -> Tensor[(16, 16, 11), float32] {
  %20 = @func_2235() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %20.0
}

def @func_5315(%var_5301: Tensor[(40), uint32], %var_5303: Tensor[(160), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(40), uint32], Tensor[(440), uint32], Tensor[(160), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %21 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %22 = cast(%var_5301, dtype="uint32") /* ty=Tensor[(40), uint32] */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(440), uint32] */, dtype="uint32") /* ty=Tensor[(440), uint32] */;
  %24 = cast(%var_5303, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %25 = reshape(%22, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint32] */;
  %26 = reshape(%23, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), uint32] */;
  %27 = reshape(%24, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), uint32] */;
  %28 = @func_4348(%25, %26, %27) /* ty=(Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %30 = reshape(%29, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %31 = @func_3619(%30) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(70, 4), uint64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %32 = @func_3851() /* ty=Tensor[(16, 16, 11), float64] */;
  %33 = %21.0;
  %34 = %28.1;
  %35 = %31.1;
  (%32, %33, %34, %var_5301, meta[relay.Constant][1] /* ty=Tensor[(440), uint32] */, %var_5303, %35, meta[relay.Constant][2] /* ty=Tensor[(280), float32] */)
}

def @func_3619(%var_3575: Tensor[(70, 4), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(70, 4), uint64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %36 = cast(%var_3575, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %37 = reshape(%36, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %38 = @func_672(%37) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */;
  %39 = cast(%var_3575, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %40 = reshape(%39, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %41 = @func_1782(%40) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %42 = %41.2;
  %43 = cast(%42, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %44 = shape_of(%var_3575, dtype="int32") /* ty=Tensor[(2), int32] */;
  %45 = cast(%var_3575, dtype="uint64") /* ty=Tensor[(70, 4), uint64] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %47 = @func_2296() /* ty=Tensor[(16, 16, 11), float64] */;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %49 = cast(%var_3575, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %50 = reshape(%48, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %51 = reshape(%49, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %52 = @func_313(%50, %51) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
  %53 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  %54 = %38.1;
  %55 = logical_xor(%45, %46) /* ty=Tensor[(70, 4), uint64] */;
  %56 = %52.1;
  (%53, %54, %55, %47, %56)
}

def @func_2895(%var_2884: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(225), int64], Tensor[(440), uint8]) {
  %57 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %58 = cast(%var_2884, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %59 = cast(%var_2884, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %60 = reshape(%58, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %61 = reshape(%59, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %62 = @func_1246(%60, %61) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) */;
  %63 = %62.3;
  %64 = cast(%63, dtype="bool") /* ty=Tensor[(10, 28), bool] */;
  %65 = shape_of(%var_2884, dtype="int32") /* ty=Tensor[(2), int32] */;
  %66 = cast(%var_2884, dtype="bool") /* ty=Tensor[(10, 28), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(440), uint8] */, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %69 = reshape(%68, newshape=[440]) /* ty=Tensor[(440), uint8] */;
  %70 = @func_2445(%69) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(440), uint8], Tensor[(225), int64], Tensor[(1, 15, 15), bool], Tensor[(16, 16, 11), float64]) */;
  %71 = %57.0;
  %72 = greater(%66, %67) /* ty=Tensor[(10, 28), bool] */;
  %73 = %70.3;
  (%71, %72, %73, meta[relay.Constant][3] /* ty=Tensor[(440), uint8] */)
}

def @func_4655(%var_4620: Tensor[(8, 16, 4), bool], %var_4621: Tensor[(8, 16, 4), bool], %var_4639: Tensor[(280), float32]) -> (Tensor[(8, 16, 4), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %74 = cast(%var_4621, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
  %75 = shape_of(%var_4620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%var_4620, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = cast(%var_4639, dtype="float32") /* ty=Tensor[(280), float32] */;
  %79 = reshape(%78, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %80 = @func_672(%79) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */;
  %81 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %82 = logical_or(%76, %77) /* ty=Tensor[(8, 16, 4), bool] */;
  %83 = %80.2;
  %84 = %81.1;
  (%82, %83, %var_4639, %84)
}

def @func_7872(%var_7846: Tensor[(7, 8, 1), float32]) -> Tensor[(7, 8, ?), float64] {
  %85 = cast(%var_7846, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %86 = sigmoid(%85) /* ty=Tensor[(7, 8, 1), float32] */;
  %87 = cast(%var_7846, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %91 = divide(%89, %90) /* ty=Tensor[(7, 8, ?), float64] */;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(7, 8, ?), float64] */;
  acos(%92) /* ty=Tensor[(7, 8, ?), float64] */
}

def @func_2993(%var_2960: Tensor[(2, 7, 7), uint32]) -> (Tensor[(2, 7, 7), uint32], Tensor[(2, 7, 7), float32]) {
  %93 = cast(%var_2960, dtype="uint32") /* ty=Tensor[(2, 7, 7), uint32] */;
  %94 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(2, 7, 7), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 7, 7), uint32] */, dtype="uint32") /* ty=Tensor[(2, 7, 7), uint32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %97 = cast(%var_2960, dtype="float32") /* ty=Tensor[(2, 7, 7), float32] */;
  %98 = bitwise_xor(%95, %96) /* ty=Tensor[(2, 7, 7), uint32] */;
  %99 = log2(%97) /* ty=Tensor[(2, 7, 7), float32] */;
  (%98, %99)
}

def @func_7814(%var_7812: Tensor[(480), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(210, 2), uint32], Tensor[(480), float32]) {
  %100 = cast(%var_7812, dtype="float32") /* ty=Tensor[(480), float32] */;
  %101 = reshape(%100, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %102 = @func_3163(%101) /* ty=(Tensor[(10, 8, 6), float64], Tensor[(210, 2), uint32], Tensor[(10, 8, 6), bool]) */;
  %103 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
  %104 = %102.1;
  (%103, %104, %var_7812)
}

def @func_5209() -> (Tensor[(16, 16, 11), float64],) {
  %105 = @func_3210() /* ty=Tensor[(16, 16, 11), float64] */;
  (%105,)
}

def @func_2235() -> (Tensor[(16, 16, 11), float32],) {
  %106 = @func_1302() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %107 = %106.0;
  %108 = cast(%107, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %109 = log2(%108) /* ty=Tensor[(16, 16, 11), float32] */;
  (%109,)
}

def @func_1293(%var_1282: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), uint16], Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32]) {
  %110 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %111 = %110.0;
  %112 = cast(%var_1282, dtype="uint16") /* ty=Tensor[(16, 16, 11), uint16] */;
  %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%111, dtype="uint16") /* ty=Tensor[(16, 16, 11), uint16] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %116 = cast(meta[relay.Constant][5] /* ty=Tensor[(60), int16] */, dtype="int16") /* ty=Tensor[(60), int16] */;
  %117 = cast(meta[relay.Constant][6] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %118 = reshape(%116, newshape=[60]) /* ty=Tensor[(60), int16] */;
  %119 = reshape(%117, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %120 = @func_1022(%118, %119) /* ty=(Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */;
  %121 = multiply(%114, %115) /* ty=Tensor[(16, 16, 11), uint16] */;
  %122 = %120.2;
  (%121, %122, meta[relay.Constant][5] /* ty=Tensor[(60), int16] */, meta[relay.Constant][6] /* ty=Tensor[(280), float32] */)
}

def @func_1818(%var_1801: Tensor[(420), uint32]) -> (Tensor[(4, 12, 2), float64], Tensor[(16, 16, 11), float64], Tensor[(420), uint32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %123 = cast(%var_1801, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %124 = cast(%var_1801, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %126 = reshape(%123, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), uint32] */;
  %127 = reshape(%124, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), uint32] */;
  %128 = reshape(%125, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %129 = @func_836(%126, %127, %128) /* ty=(Tensor[(14, 10, 3), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %130 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %131 = @func_1205() /* ty=Tensor[(4, 12, 2), float64] */;
  %132 = %129.1;
  %133 = %130.0;
  (%131, %132, %var_1801, meta[relay.Constant][7] /* ty=Tensor[(280), float32] */, %133)
}

def @func_8609() -> (Tensor[(16, 16, 11), float64],) {
  %134 = @func_7415() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */;
  %135 = %134.0;
  (%135,)
}

def @func_2519() -> (Tensor[(16, 16, 11), float64],) {
  %136 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  (%136,)
}

def @func_1498() -> Tensor[(16, 16, 11), float64] {
  %137 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %137.2
}

def @func_4422(%var_4418: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(440), uint8], Tensor[(280), float32]) {
  %138 = @func_3673() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %139 = cast(%var_4418, dtype="float32") /* ty=Tensor[(280), float32] */;
  %140 = reshape(%139, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %141 = @func_2895(%140) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(225), int64], Tensor[(440), uint8]) */;
  %142 = %138.0;
  %143 = %141.3;
  (%142, %143, %var_4418)
}

def @func_5621(%var_5585: Tensor[(14, 16, 7), float32], %var_5592: Tensor[(2816), float64]) -> (Tensor[(280), float32], Tensor[(2816), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(14, 16, 7), float32], Tensor[(16, 16, 11), float32]) {
  %144 = cast(%var_5592, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %145 = reshape(%144, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %146 = @func_1293(%145) /* ty=(Tensor[(16, 16, 11), uint16], Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32]) */;
  %147 = %146.1;
  %148 = cast(%147, dtype="float32") /* ty=Tensor[(280), float32] */;
  %149 = reshape(%148, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %150 = @func_2895(%149) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(225), int64], Tensor[(440), uint8]) */;
  %151 = cast(%var_5585, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
  %152 = acosh(%151) /* ty=Tensor[(14, 16, 7), float32] */;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
  %154 = @func_3958() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %155 = @func_2296() /* ty=Tensor[(16, 16, 11), float64] */;
  %156 = %150.1;
  %157 = sqrt(%153) /* ty=Tensor[(14, 16, 7), float32] */;
  %158 = %154.0;
  (%147, %var_5592, %155, %156, %157, %158)
}

def @func_7964() -> Tensor[(16, 16, 11), float64] {
  %159 = @func_3341() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */;
  %159.1
}

def @func_4071() -> (Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) {
  %160 = cast(meta[relay.Constant][8] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %161 = reshape(%160, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %162 = @func_1613(%161) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(140, 2), float32]) */;
  %163 = @func_1966() /* ty=Tensor[(16, 16, 11), float64] */;
  %164 = %162.3;
  (%163, %164, meta[relay.Constant][8] /* ty=Tensor[(280), float32] */)
}

def @func_3792(%var_3785: Tensor[(7, 5, 4), float32]) -> Tensor[(7, 5, 4), float32] {
  %165 = cast(%var_3785, dtype="float32") /* ty=Tensor[(7, 5, 4), float32] */;
  cos(%165) /* ty=Tensor[(7, 5, 4), float32] */
}

def @func_3673() -> (Tensor[(16, 16, 11), float64],) {
  %166 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %167 = %166.0;
  (%167,)
}

def @func_8118(%var_8114: Tensor[(14, 5, 4), float32]) -> Tensor[(14, 5, 4), float32] {
  %168 = cast(%var_8114, dtype="float32") /* ty=Tensor[(14, 5, 4), float32] */;
  atanh(%168) /* ty=Tensor[(14, 5, 4), float32] */
}

def @func_9232() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  %169 = @func_7016() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %170 = @func_7016() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %171 = %169.0;
  %172 = %170.1;
  (%171, %172)
}

def @func_1966() -> Tensor[(16, 16, 11), float64] {
  @func_1498() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_2044() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %173 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %174 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %175 = %173.0;
  %176 = %174.0;
  (%175, %176)
}

def @func_4212(%var_4182: Tensor[(5, 14, 4), float32], %var_4183: Tensor[(5, 14, 4), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(5, 14, 4), float64], Tensor[(16, 16, 11), float64]) {
  %177 = cast(%var_4182, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %178 = cast(%var_4182, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %179 = reshape(%177, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %180 = reshape(%178, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %181 = @func_1246(%179, %180) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) */;
  %182 = cast(%var_4183, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %183 = shape_of(%var_4182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_4182, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %186 = divide(%184, %185) /* ty=Tensor[(5, 14, 4), float32] */;
  %187 = cast(%186, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
  %188 = %181.0;
  %189 = asinh(%187) /* ty=Tensor[(5, 14, 4), float64] */;
  %190 = @func_953() /* ty=Tensor[(16, 16, 11), float64] */;
  (%188, %189, %190)
}

def @func_3958() -> (Tensor[(16, 16, 11), float32],) {
  %191 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %192 = %191.0;
  (%192,)
}

def @func_7665() -> (Tensor[(16, 16, 11), float64],) {
  %193 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %194 = %193.0;
  (%194,)
}

def @func_7371() -> (Tensor[(280), float32], uint16) {
  %195 = @func_2138() /* ty=(Tensor[(280), float32],) */;
  %196 = @func_6744() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], uint16, Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64]) */;
  %197 = %195.0;
  %198 = %196.3;
  (%197, %198)
}

def @func_1104() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %199 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %200 = cast(meta[relay.Constant][9] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %201 = reshape(%200, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %202 = @func_672(%201) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */;
  %203 = %199.0;
  %204 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  %205 = %202.0;
  (%203, %204, %205, meta[relay.Constant][9] /* ty=Tensor[(280), float32] */)
}

def @func_5652() -> Tensor[(16, 16, 11), float64] {
  %206 = @func_2455() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %206.0
}

def @func_1246(%var_1212: Tensor[(10, 28), float32], %var_1226: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) {
  %207 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %208 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 60), int16] */, dtype="int16") /* ty=Tensor[(1, 60), int16] */;
  %209 = cast(%var_1212, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %210 = reshape(%208, newshape=[60]) /* ty=Tensor[(60), int16] */;
  %211 = reshape(%209, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %212 = @func_1022(%210, %211) /* ty=(Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */;
  %213 = cast(%var_1226, dtype="bool") /* ty=Tensor[(10, 28), bool] */;
  %214 = shape_of(%var_1212, dtype="int32") /* ty=Tensor[(2), int32] */;
  %215 = cast(%var_1212, dtype="bool") /* ty=Tensor[(10, 28), bool] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %217 = logical_or(%215, %216) /* ty=Tensor[(10, 28), bool] */;
  %218 = cast(%var_1212, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(2), int32] */;
  %220 = cast(%217, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %222 = %207.0;
  %223 = %212.3;
  %224 = floor_divide(%220, %221) /* ty=Tensor[(10, 28), float32] */;
  (%222, %223, meta[relay.Constant][10] /* ty=Tensor[(1, 60), int16] */, %224)
}

def @func_6808(%var_6762: Tensor[(1, 1, 16), float64], %var_6776: Tensor[(528), float32]) -> (Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) {
  %225 = cast(%var_6776, dtype="float32") /* ty=Tensor[(528), float32] */;
  %226 = reshape(%225, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %227 = @func_5436(%226) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(3, 11, 16), float32]) */;
  %228 = cast(%var_6762, dtype="float64") /* ty=Tensor[(1, 1, 16), float64] */;
  %229 = log2(%228) /* ty=Tensor[(1, 1, 16), float64] */;
  %230 = cast(%var_6762, dtype="float64") /* ty=Tensor[(1, 1, 16), float64] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%229, dtype="float64") /* ty=Tensor[(1, 1, 16), float64] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %234 = %227.0;
  %235 = minimum(%232, %233) /* ty=Tensor[(?, ?, 16), float64] */;
  (%234, %var_6776, %235)
}

def @func_6325(%var_6289: Tensor[(9, 5, 14), float64]) -> (Tensor[(9, 5, 14), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) {
  %236 = cast(%var_6289, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
  %237 = acosh(%236) /* ty=Tensor[(9, 5, 14), float64] */;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
  %239 = cast(meta[relay.Constant][11] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %240 = reshape(%239, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), float32] */;
  %241 = log10(%238) /* ty=Tensor[(9, 5, 14), float64] */;
  %242 = @func_3792(%240) /* ty=Tensor[(7, 5, 4), float32] */;
  (%241, %242, meta[relay.Constant][11] /* ty=Tensor[(140), float32] */)
}

def @func_7233(%var_7222: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), float64]) {
  %243 = cast(%var_7222, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %244 = reshape(%243, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %245 = @func_3619(%244) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(70, 4), uint64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %246 = cast(%var_7222, dtype="float64") /* ty=Tensor[(10, 28), float64] */;
  %247 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %248 = %245.3;
  %249 = erf(%246) /* ty=Tensor[(10, 28), float64] */;
  (%247, %248, %249)
}

def @func_478() -> (Tensor[(16, 16, 11), float64],) {
  %250 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %251 = %250.0;
  (%251,)
}

def @func_672(%var_645: Tensor[(5, 56), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) {
  %252 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %253 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %254 = %252.0;
  %255 = cast(%254, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %256 = cast(%var_645, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
  %257 = reshape(%255, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %258 = reshape(%256, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %259 = @func_313(%257, %258) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
  %260 = %253.0;
  %261 = %259.0;
  (%254, %260, %261, %var_645)
}

def @func_2106(%var_2098: int64, %var_2099: Tensor[(1, 15, 15), int64]) -> (Tensor[(1, 15, 15), int64],) {
  %262 = cast(%var_2098, dtype="int64") /* ty=int64 */;
  %263 = cast(%var_2099, dtype="int64") /* ty=Tensor[(1, 15, 15), int64] */;
  %264 = maximum(%262, %263) /* ty=Tensor[(1, 15, 15), int64] */;
  (%264,)
}

def @func_3437(%var_3425: Tensor[(3, 11, 5), float32], %var_3426: Tensor[(3, 11, 5), float32], %var_3431: Tensor[(3, 11, 5), float32]) -> (Tensor[(3, 11, 5), float32], Tensor[(3, 11, 5), uint64]) {
  %265 = cast(%var_3426, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
  %266 = shape_of(%var_3425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%var_3425, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %269 = cast(%var_3431, dtype="uint64") /* ty=Tensor[(3, 11, 5), uint64] */;
  %270 = shape_of(%var_3425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_3425, dtype="uint64") /* ty=Tensor[(3, 11, 5), uint64] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %273 = floor_divide(%267, %268) /* ty=Tensor[(3, 11, 5), float32] */;
  %274 = multiply(%271, %272) /* ty=Tensor[(3, 11, 5), uint64] */;
  (%273, %274)
}

def @func_4358() -> Tensor[(16, 16, 11), float64] {
  %275 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %275.0
}

def @func_7613() -> (Tensor[(14, 11, 3), float32],) {
  %276 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 3), float32] */;
  %277 = sinh(%276) /* ty=Tensor[(14, 11, 3), float32] */;
  (%277,)
}

def @func_7991() -> Tensor[(16, 16, 11), float64] {
  @func_953() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7549(%var_7536: Tensor[(90), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64], Tensor[(3, 2, 15), float32], Tensor[(90), float32], Tensor[(98), uint32]) {
  %278 = cast(%var_7536, dtype="float32") /* ty=Tensor[(90), float32] */;
  %279 = cast(meta[relay.Constant][13] /* ty=Tensor[(98), uint32] */, dtype="uint32") /* ty=Tensor[(98), uint32] */;
  %280 = reshape(%278, newshape=[3, 2, 15]) /* ty=Tensor[(3, 2, 15), float32] */;
  %281 = reshape(%279, newshape=[98]) /* ty=Tensor[(98), uint32] */;
  %282 = @func_3771(%280, %281) /* ty=(Tensor[(3, 2, 15), float32], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) */;
  %283 = @func_5652() /* ty=Tensor[(16, 16, 11), float64] */;
  %284 = @func_1205() /* ty=Tensor[(4, 12, 2), float64] */;
  %285 = %282.0;
  (%283, %284, %285, %var_7536, meta[relay.Constant][13] /* ty=Tensor[(98), uint32] */)
}

def @func_9549() -> Tensor[(16, 16, 11), float64] {
  %286 = @func_8609() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %286.0
}

def @func_9867(%var_9849: Tensor[(13, 15, 9), float64], %var_9861: Tensor[(280), float32]) -> (Tensor[(13, 15, 9), float64], Tensor[(10, 28), float64], Tensor[(280), float32]) {
  %287 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %288 = shape_of(%var_9849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%var_9849, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %291 = cast(%var_9861, dtype="float32") /* ty=Tensor[(280), float32] */;
  %292 = reshape(%291, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %293 = @func_7233(%292) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), float64]) */;
  %294 = maximum(%289, %290) /* ty=Tensor[(13, 15, 9), float64] */;
  %295 = %293.2;
  (%294, %295, %var_9861)
}

def @func_2445(%var_2401: Tensor[(440), uint8]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(440), uint8], Tensor[(225), int64], Tensor[(1, 15, 15), bool], Tensor[(16, 16, 11), float64]) {
  %296 = cast(%var_2401, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %297 = cast(%var_2401, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %298 = reshape(%296, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %299 = reshape(%297, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %300 = @func_1329(%298, %299) /* ty=(Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) */;
  %301 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %302 = cast(meta[relay.Constant][15] /* ty=Tensor[(225), int64] */, dtype="int64") /* ty=Tensor[(225), int64] */;
  %303 = reshape(%301, newshape=[]) /* ty=int64 */;
  %304 = reshape(%302, newshape=[1, 15, 15]) /* ty=Tensor[(1, 15, 15), int64] */;
  %305 = @func_2106(%303, %304) /* ty=(Tensor[(1, 15, 15), int64],) */;
  %306 = %305.0;
  %307 = cast(10 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %308 = cast(%306, dtype="bool") /* ty=Tensor[(1, 15, 15), bool] */;
  %309 = @func_1302() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %310 = @func_953() /* ty=Tensor[(16, 16, 11), float64] */;
  %311 = %300.3;
  %312 = equal(%307, %308) /* ty=Tensor[(1, 15, 15), bool] */;
  %313 = %309.0;
  (%310, %311, %var_2401, meta[relay.Constant][15] /* ty=Tensor[(225), int64] */, %312, %313)
}

def @func_9477() -> Tensor[(16, 16, 11), float64] {
  @func_953() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_2138() -> (Tensor[(280), float32],) {
  %314 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %315 = %314.3;
  (%315,)
}

def @func_7016() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %316 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %317 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %318 = @func_5652() /* ty=Tensor[(16, 16, 11), float64] */;
  %319 = %316.0;
  %320 = %317.0;
  (%318, %319, %320)
}

def @func_3911(%var_3886: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %321 = @func_2455() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %322 = %321.0;
  %323 = cast(%var_3886, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %324 = shape_of(%322, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%322, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %327 = cast(%var_3886, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %328 = shape_of(%322, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%322, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %331 = less(%325, %326) /* ty=Tensor[(16, 16, 11), bool] */;
  %332 = power(%329, %330) /* ty=Tensor[(16, 16, 11), float64] */;
  %333 = @func_2497() /* ty=Tensor[(280), float32] */;
  (%331, %332, %333)
}

def @func_1072() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %334 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %335 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  %336 = %334.0;
  (%335, %336)
}

def @func_8576(%var_8568: Tensor[(4, 12), uint16]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 4, 3), float32], Tensor[(4, 12), uint16]) {
  %337 = @func_5679() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %338 = cast(%var_8568, dtype="uint16") /* ty=Tensor[(4, 12), uint16] */;
  %339 = cast(%var_8568, dtype="uint16") /* ty=Tensor[(4, 12), uint16] */;
  %340 = cast(%var_8568, dtype="uint16") /* ty=Tensor[(4, 12), uint16] */;
  %341 = reshape(%338, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), uint16] */;
  %342 = reshape(%339, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), uint16] */;
  %343 = reshape(%340, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), uint16] */;
  %344 = @func_5876(%341, %342, %343) /* ty=(Tensor[(4, 4, 3), float32],) */;
  %345 = %337.0;
  %346 = %344.0;
  (%345, %346, %var_8568)
}

def @func_8248(%var_8201: Tensor[(16), float64]) -> (Tensor[(16, 16, 11), float32], Tensor[(3, 11, 16), float32], Tensor[(16), float64], Tensor[(1, 528), float32], Tensor[(105, 1), float32]) {
  %347 = @func_5033() /* ty=(Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) */;
  %348 = %347.3;
  %349 = cast(%348, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %350 = cast(%var_8201, dtype="float64") /* ty=Tensor[(16), float64] */;
  %351 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 528), float32] */, dtype="float32") /* ty=Tensor[(1, 528), float32] */;
  %352 = reshape(%350, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
  %353 = reshape(%351, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %354 = @func_6808(%352, %353) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */;
  %355 = @func_8060() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(5, 7, 3), uint64], Tensor[(16, 16, 11), float64], Tensor[(9, 5, 14), float64], Tensor[(630), float64], Tensor[(105, 1), float32]) */;
  %356 = cosh(%349) /* ty=Tensor[(16, 16, 11), float32] */;
  %357 = %354.0;
  %358 = %355.5;
  (%356, %357, %var_8201, meta[relay.Constant][16] /* ty=Tensor[(1, 528), float32] */, %358)
}

def @func_1550() -> (Tensor[(16, 16, 11), float64],) {
  %359 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %360 = %359.0;
  (%360,)
}

def @func_2085(%var_2079: int8) -> Tensor[(13, 5, 9), int8] {
  %361 = cast(%var_2079, dtype="int8") /* ty=int8 */;
  %362 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 5, 9), int8] */, dtype="int8") /* ty=Tensor[(13, 5, 9), int8] */;
  bitwise_or(%361, %362) /* ty=Tensor[(13, 5, 9), int8] */
}

def @func_9748(%var_9706: Tensor[(12, 6, 3), float64], %var_9744: Tensor[(1, 60), int16], %var_9745: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(12, 6, 3), float32], Tensor[(280), float32], Tensor[(1, 60), int16], Tensor[(280), float32]) {
  %363 = @func_7665() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %364 = cast(%var_9706, dtype="float64") /* ty=Tensor[(12, 6, 3), float64] */;
  %365 = sigmoid(%364) /* ty=Tensor[(12, 6, 3), float64] */;
  %366 = cast(%var_9706, dtype="float32") /* ty=Tensor[(12, 6, 3), float32] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="float32") /* ty=Tensor[(12, 6, 3), float32] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %370 = cast(%var_9744, dtype="int16") /* ty=Tensor[(1, 60), int16] */;
  %371 = cast(%var_9745, dtype="float32") /* ty=Tensor[(280), float32] */;
  %372 = reshape(%370, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int16] */;
  %373 = reshape(%371, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %374 = @func_415(%372, %373) /* ty=(Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %375 = %363.0;
  %376 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
  %377 = power(%368, %369) /* ty=Tensor[(12, 6, 3), float32] */;
  %378 = %374.2;
  (%375, %376, %377, %378, %var_9744, %var_9745)
}

def @func_5385(%var_5338: Tensor[(2, 3, 11), float64], %var_5365: Tensor[(1800), float32], %var_5366: Tensor[(280), float32]) -> (Tensor[(2, 3, 11), int32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(280), float32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %379 = cast(%var_5338, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %380 = atanh(%379) /* ty=Tensor[(2, 3, 11), float64] */;
  %381 = cast(%380, dtype="int32") /* ty=Tensor[(2, 3, 11), int32] */;
  %382 = shape_of(%var_5338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%var_5338, dtype="int32") /* ty=Tensor[(2, 3, 11), int32] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %385 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %386 = cast(%var_5365, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %387 = cast(%var_5366, dtype="float32") /* ty=Tensor[(280), float32] */;
  %388 = reshape(%386, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float32] */;
  %389 = reshape(%387, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %390 = @func_581(%388, %389) /* ty=(Tensor[(12, 15, 10), float32], Tensor[(12, 15, 10), float32], Tensor[(16, 16, 11), float64], Tensor[(2816), float64], Tensor[(280), float32]) */;
  %391 = @func_1912() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %392 = maximum(%383, %384) /* ty=Tensor[(2, 3, 11), int32] */;
  %393 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  %394 = %385.0;
  %395 = %390.0;
  %396 = %391.3;
  %397 = @func_3422() /* ty=Tensor[(16, 16, 11), float64] */;
  %398 = @func_1751() /* ty=Tensor[(16, 16, 11), float64] */;
  (%392, %393, %394, %395, %var_5365, %var_5366, %396, %397, %398)
}

def @func_3163(%var_3130: Tensor[(10, 8, 6), float32]) -> (Tensor[(10, 8, 6), float64], Tensor[(210, 2), uint32], Tensor[(10, 8, 6), bool]) {
  %399 = cast(%var_3130, dtype="float64") /* ty=Tensor[(10, 8, 6), float64] */;
  %400 = @func_1912() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %401 = cast(%var_3130, dtype="float32") /* ty=Tensor[(10, 8, 6), float32] */;
  %402 = cos(%401) /* ty=Tensor[(10, 8, 6), float32] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(10, 8, 6), float64] */;
  %404 = log(%403) /* ty=Tensor[(10, 8, 6), float64] */;
  %405 = cast(%402, dtype="bool") /* ty=Tensor[(10, 8, 6), bool] */;
  %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%404, dtype="bool") /* ty=Tensor[(10, 8, 6), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %409 = atanh(%399) /* ty=Tensor[(10, 8, 6), float64] */;
  %410 = %400.2;
  %411 = logical_or(%407, %408) /* ty=Tensor[(10, 8, 6), bool] */;
  (%409, %410, %411)
}

def @func_5997(%var_5988: Tensor[(1, 40), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(1, 40), uint32], Tensor[(440), uint32], Tensor[(160), uint32]) {
  %412 = cast(%var_5988, dtype="uint32") /* ty=Tensor[(1, 40), uint32] */;
  %413 = cast(meta[relay.Constant][18] /* ty=Tensor[(440), uint32] */, dtype="uint32") /* ty=Tensor[(440), uint32] */;
  %414 = cast(meta[relay.Constant][19] /* ty=Tensor[(160), uint32] */, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %415 = reshape(%412, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint32] */;
  %416 = reshape(%413, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), uint32] */;
  %417 = reshape(%414, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), uint32] */;
  %418 = @func_4348(%415, %416, %417) /* ty=(Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) */;
  %419 = @func_3826() /* ty=Tensor[(16, 16, 11), float64] */;
  %420 = %418.1;
  (%419, %420, %var_5988, meta[relay.Constant][18] /* ty=Tensor[(440), uint32] */, meta[relay.Constant][19] /* ty=Tensor[(160), uint32] */)
}

def @func_6596() -> Tensor[(16, 16, 11), float64] {
  @func_3782() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_313(%var_281: Tensor[(16, 16, 11), float64], %var_299: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) {
  %421 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %422 = %421.0;
  %423 = cast(%var_281, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %424 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%422, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %427 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %428 = cast(%var_299, dtype="float32") /* ty=Tensor[(280), float32] */;
  %429 = reshape(%428, newshape=[7, 4, 10]) /* ty=Tensor[(7, 4, 10), float32] */;
  %430 = @func_50(%429) /* ty=(Tensor[(7, 4, 10), float32],) */;
  %431 = %430.0;
  %432 = cast(%431, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
  %433 = cast(%var_299, dtype="float32") /* ty=Tensor[(280), float32] */;
  %434 = reshape(%433, newshape=[7, 4, 10]) /* ty=Tensor[(7, 4, 10), float32] */;
  %435 = @func_50(%434) /* ty=(Tensor[(7, 4, 10), float32],) */;
  %436 = mod(%425, %426) /* ty=Tensor[(16, 16, 11), float64] */;
  %437 = %427.0;
  %438 = atan(%432) /* ty=Tensor[(7, 4, 10), float32] */;
  %439 = %435.0;
  (%436, %var_299, %437, %438, %439)
}

def @func_9175(%var_9151: Tensor[(7, 4, 2), float64], %var_9171: Tensor[(280), float32]) -> (Tensor[(7, 4, 2), float64], Tensor[(1, 13, 1), float32], Tensor[(13), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %440 = cast(%var_9151, dtype="float64") /* ty=Tensor[(7, 4, 2), float64] */;
  %441 = cast(meta[relay.Constant][20] /* ty=Tensor[(13), float32] */, dtype="float32") /* ty=Tensor[(13), float32] */;
  %442 = reshape(%441, newshape=[1, 13, 1]) /* ty=Tensor[(1, 13, 1), float32] */;
  %443 = cast(%var_9171, dtype="float32") /* ty=Tensor[(280), float32] */;
  %444 = reshape(%443, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %445 = @func_1613(%444) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(140, 2), float32]) */;
  %446 = cosh(%440) /* ty=Tensor[(7, 4, 2), float64] */;
  %447 = @func_2552(%442) /* ty=Tensor[(1, 13, 1), float32] */;
  %448 = @func_6450() /* ty=Tensor[(16, 16, 11), float64] */;
  %449 = %445.1;
  (%446, %447, meta[relay.Constant][20] /* ty=Tensor[(13), float32] */, %448, %449, %var_9171)
}

def @main(%var_9913: Tensor[(15, 1, 10), int32], %var_9914: Tensor[(15, 6, 10), int32]) -> Tensor[(15, 6, 10), float32] {
  %450 = cast(%var_9913, dtype="int32") /* ty=Tensor[(15, 1, 10), int32] */;
  %451 = cast(%var_9914, dtype="int32") /* ty=Tensor[(15, 6, 10), int32] */;
  %452 = logical_xor(%450, %451) /* ty=Tensor[(15, 6, 10), int32] */;
  %453 = cast(%452, dtype="float32") /* ty=Tensor[(15, 6, 10), float32] */;
  acosh(%453) /* ty=Tensor[(15, 6, 10), float32] */
}

def @func_8688(%var_8674: Tensor[(3, 16, 12), uint8], %var_8675: Tensor[(3, 16, 12), uint8]) -> (Tensor[(3, 16, 12), uint8], Tensor[(16, 16, 11), float64]) {
  %454 = cast(%var_8675, dtype="uint8") /* ty=Tensor[(3, 16, 12), uint8] */;
  %455 = shape_of(%var_8674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%var_8674, dtype="uint8") /* ty=Tensor[(3, 16, 12), uint8] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %458 = left_shift(%456, %457) /* ty=Tensor[(3, 16, 12), uint8] */;
  %459 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
  (%458, %459)
}

def @func_8785(%var_8783: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(5, 14, 4), float64], Tensor[(280), float32]) {
  %460 = @func_5182() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %461 = cast(%var_8783, dtype="float32") /* ty=Tensor[(280), float32] */;
  %462 = cast(%var_8783, dtype="float32") /* ty=Tensor[(280), float32] */;
  %463 = reshape(%461, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %464 = reshape(%462, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %465 = @func_4212(%463, %464) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(5, 14, 4), float64], Tensor[(16, 16, 11), float64]) */;
  %466 = @func_3548() /* ty=Tensor[(16, 16, 11), float32] */;
  %467 = %460.0;
  %468 = %465.1;
  (%466, %467, %468, %var_8783)
}

def @func_1022(%var_1000: Tensor[(60), int16], %var_1001: Tensor[(280), float32]) -> (Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %469 = cast(%var_1000, dtype="int16") /* ty=Tensor[(60), int16] */;
  %470 = cast(%var_1001, dtype="float32") /* ty=Tensor[(280), float32] */;
  %471 = reshape(%469, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int16] */;
  %472 = reshape(%470, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %473 = @func_415(%471, %472) /* ty=(Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %474 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %475 = %474.0;
  %476 = cast(%475, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %477 = atanh(%476) /* ty=Tensor[(16, 16, 11), float32] */;
  %478 = cast(%475, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %479 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%477, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %482 = floor_divide(%480, %481) /* ty=Tensor[(16, 16, 11), float32] */;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %484 = %473.2;
  %485 = acos(%483) /* ty=Tensor[(16, 16, 11), float64] */;
  (%484, %var_1000, %var_1001, %485)
}

def @func_267() -> (Tensor[(16, 16, 11), float64],) {
  %486 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %487 = %486.0;
  (%487,)
}

def @func_8859() -> Tensor[(16, 16, 11), float64] {
  %488 = @func_1912() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %488.6
}

def @func_2379() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %489 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %490 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
  %491 = %489.0;
  (%490, %491)
}

def @func_5679() -> (Tensor[(16, 16, 11), float64],) {
  %492 = @func_3422() /* ty=Tensor[(16, 16, 11), float64] */;
  (%492,)
}

def @func_9592(%var_9572: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(280), float32]) {
  %493 = @func_7665() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %494 = cast(%var_9572, dtype="float32") /* ty=Tensor[(280), float32] */;
  %495 = reshape(%494, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %496 = @func_8785(%495) /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(5, 14, 4), float64], Tensor[(280), float32]) */;
  %497 = %493.0;
  %498 = %496.0;
  (%497, %498, %var_9572)
}

def @func_4776(%var_4754: Tensor[(9, 4, 1), uint8]) -> (Tensor[(9, 4, 16), uint8],) {
  %499 = cast(%var_4754, dtype="uint8") /* ty=Tensor[(9, 4, 1), uint8] */;
  %500 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 4, 16), uint8] */, dtype="uint8") /* ty=Tensor[(9, 4, 16), uint8] */;
  %501 = subtract(%499, %500) /* ty=Tensor[(9, 4, 16), uint8] */;
  (%501,)
}

def @func_8156() -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %502 = @func_3958() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %503 = %502.0;
  %504 = @func_2923() /* ty=Tensor[(16, 16, 11), float64] */;
  (%503, %504)
}

def @func_7415() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  %505 = @func_5679() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %506 = @func_3958() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %507 = %506.0;
  %508 = cast(%507, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %509 = %505.0;
  %510 = rsqrt(%508) /* ty=Tensor[(16, 16, 11), float32] */;
  (%509, %510)
}

def @func_2497() -> Tensor[(280), float32] {
  %511 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %511.3
}

def @func_9427(%var_9420: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], uint16, uint16, Tensor[(14, 5, 4), float32], Tensor[(280), float32]) {
  %512 = @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %513 = cast(meta[relay.Constant][22] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %514 = reshape(%513, newshape=[]) /* ty=uint16 */;
  %515 = @func_4120(%514) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(1, 4, 10), uint16], uint16) */;
  %516 = cast(%var_9420, dtype="float32") /* ty=Tensor[(280), float32] */;
  %517 = reshape(%516, newshape=[14, 5, 4]) /* ty=Tensor[(14, 5, 4), float32] */;
  %518 = %512.0;
  %519 = %515.2;
  %520 = @func_8118(%517) /* ty=Tensor[(14, 5, 4), float32] */;
  (%518, %519, meta[relay.Constant][22] /* ty=uint16 */, %520, %var_9420)
}

def @func_7921() -> (Tensor[(16, 16, 11), float64], Tensor[(528), float32], Tensor[(16), float64], Tensor[(528), float32], Tensor[(16, 16, 11), float32]) {
  %521 = cast(meta[relay.Constant][23] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %522 = cast(meta[relay.Constant][24] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %523 = reshape(%521, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
  %524 = reshape(%522, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %525 = @func_6808(%523, %524) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */;
  %526 = @func_2235() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %527 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
  %528 = %525.1;
  %529 = %526.0;
  (%527, %528, meta[relay.Constant][23] /* ty=Tensor[(16), float64] */, meta[relay.Constant][24] /* ty=Tensor[(528), float32] */, %529)
}

def @func_6396() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %530 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %531 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %532 = %530.0;
  %533 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
  (%531, %532, %533)
}

def @func_2835() -> Tensor[(16, 16, 11), float64] {
  @func_1184() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_859() -> Tensor[(16, 16, 11), float64] {
  %534 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %534.0
}

def @func_8715(%var_8712: Tensor[(528), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(3, 11, 16), float32], Tensor[(16), float64], Tensor[(528), float32]) {
  %535 = @func_4703() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %536 = cast(meta[relay.Constant][25] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %537 = cast(%var_8712, dtype="float32") /* ty=Tensor[(528), float32] */;
  %538 = reshape(%536, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
  %539 = reshape(%537, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %540 = @func_6808(%538, %539) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */;
  %541 = %535.0;
  %542 = %540.0;
  (%541, %542, meta[relay.Constant][25] /* ty=Tensor[(16), float64] */, %var_8712)
}

def @func_6656(%var_6610: Tensor[(16, 16, 11), float32]) -> (Tensor[(16, 16, 11), bool],) {
  %543 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %544 = %543.0;
  %545 = cast(%var_6610, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%544, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %549 = logical_and(%547, %548) /* ty=Tensor[(16, 16, 11), bool] */;
  (%549,)
}

def @func_1205() -> Tensor[(4, 12, 2), float64] {
  %550 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(4, 12, 2), float64] */;
  atan(%550) /* ty=Tensor[(4, 12, 2), float64] */
}

def @func_3714() -> Tensor[(16, 16, 11), float64] {
  @func_859() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_3851() -> Tensor[(16, 16, 11), float64] {
  @func_1424() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_6124() -> Tensor[(16, 16, 11), float64] {
  @func_3422() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7744() -> (Tensor[(14, 11, 4), uint64],) {
  %551 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 11, 4), uint64] */, dtype="uint64") /* ty=Tensor[(14, 11, 4), uint64] */;
  %552 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(14, 11, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 11, 4), uint64] */, dtype="uint64") /* ty=Tensor[(14, 11, 4), uint64] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %555 = minimum(%553, %554) /* ty=Tensor[(14, 11, 4), uint64] */;
  (%555,)
}

def @func_2455() -> (Tensor[(16, 16, 11), float64],) {
  %556 = @func_1966() /* ty=Tensor[(16, 16, 11), float64] */;
  (%556,)
}

def @func_8848() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %557 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %558 = @func_4703() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %559 = @func_3851() /* ty=Tensor[(16, 16, 11), float64] */;
  %560 = %557.1;
  %561 = %558.0;
  (%559, %560, %561)
}

def @func_9104(%var_9097: Tensor[(10, 4, 16), float32]) -> (Tensor[(10, 4, 16), float32],) {
  %562 = cast(%var_9097, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %563 = rsqrt(%562) /* ty=Tensor[(10, 4, 16), float32] */;
  (%563,)
}

def @func_1329(%var_1313: Tensor[(8, 5, 11), uint8], %var_1314: Tensor[(8, 5, 11), uint8]) -> (Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) {
  %564 = cast(%var_1314, dtype="uint8") /* ty=Tensor[(8, 5, 11), uint8] */;
  %565 = shape_of(%var_1313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%var_1313, dtype="uint8") /* ty=Tensor[(8, 5, 11), uint8] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %568 = cast(meta[relay.Constant][29] /* ty=Tensor[(60), int16] */, dtype="int16") /* ty=Tensor[(60), int16] */;
  %569 = cast(meta[relay.Constant][30] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %570 = reshape(%568, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int16] */;
  %571 = reshape(%569, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %572 = @func_415(%570, %571) /* ty=(Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %573 = bitwise_xor(%566, %567) /* ty=Tensor[(8, 5, 11), uint8] */;
  %574 = %572.0;
  (%573, %574, meta[relay.Constant][29] /* ty=Tensor[(60), int16] */, meta[relay.Constant][30] /* ty=Tensor[(280), float32] */)
}

def @func_1176() -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %575 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %576 = %575.0;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %578 = cast(%576, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %579 = exp(%577) /* ty=Tensor[(16, 16, 11), float32] */;
  %580 = sinh(%578) /* ty=Tensor[(16, 16, 11), float64] */;
  (%579, %580)
}

def @func_1424() -> Tensor[(16, 16, 11), float64] {
  %581 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %581.0
}

def @func_6282() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(280), float32]) {
  %582 = @func_1302() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %583 = @func_5182() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %584 = @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %585 = %582.0;
  %586 = %583.0;
  %587 = %584.2;
  (%585, %586, %587)
}

def @func_50(%var_41: Tensor[(7, 4, 10), float32]) -> (Tensor[(7, 4, 10), float32],) {
  %588 = cast(%var_41, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
  %589 = atanh(%588) /* ty=Tensor[(7, 4, 10), float32] */;
  (%589,)
}

def @func_953() -> Tensor[(16, 16, 11), float64] {
  %590 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %590.0
}

def @func_4316() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %591 = @func_1184() /* ty=Tensor[(16, 16, 11), float64] */;
  %592 = @func_3548() /* ty=Tensor[(16, 16, 11), float32] */;
  %593 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  (%591, %592, %593)
}

def @func_6450() -> Tensor[(16, 16, 11), float64] {
  %594 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %594.1
}

def @func_550() -> (Tensor[(16, 16, 11), float64],) {
  %595 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %596 = %595.0;
  (%596,)
}

def @func_6218() -> Tensor[(16, 16, 11), float64] {
  @func_1498() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_5229(%var_5223: Tensor[(16, 16, 11), uint16]) -> (Tensor[(16, 16, 11), bool],) {
  %597 = @func_5033() /* ty=(Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) */;
  %598 = %597.3;
  %599 = cast(%var_5223, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%598, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %603 = equal(%601, %602) /* ty=Tensor[(16, 16, 11), bool] */;
  (%603,)
}

def @func_1751() -> Tensor[(16, 16, 11), float64] {
  %604 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %604.1
}

def @func_2676() -> Tensor[(16, 16, 11), float64] {
  %605 = @func_2519() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %605.0
}

def @func_3341() -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) {
  %606 = @func_1751() /* ty=Tensor[(16, 16, 11), float64] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %608 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %609 = %608.0;
  %610 = cast(%609, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %611 = cast(meta[relay.Constant][31] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %612 = reshape(%610, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %613 = reshape(%611, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %614 = @func_313(%612, %613) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
  %615 = cast(%606, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %616 = reshape(%615, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %617 = @func_2614(%616) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */;
  %618 = log(%607) /* ty=Tensor[(16, 16, 11), float32] */;
  %619 = %614.3;
  %620 = %617.0;
  %621 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
  (%618, %609, %619, meta[relay.Constant][31] /* ty=Tensor[(280), float32] */, %620, %621)
}

def @func_5876(%var_5846: Tensor[(4, 4, 3), uint16], %var_5847: Tensor[(4, 4, 3), uint16], %var_5861: Tensor[(4, 4, 3), uint16]) -> (Tensor[(4, 4, 3), float32],) {
  %622 = cast(%var_5847, dtype="uint16") /* ty=Tensor[(4, 4, 3), uint16] */;
  %623 = shape_of(%var_5846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_5846, dtype="uint16") /* ty=Tensor[(4, 4, 3), uint16] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %626 = logical_xor(%624, %625) /* ty=Tensor[(4, 4, 3), uint16] */;
  %627 = cast(%var_5861, dtype="float32") /* ty=Tensor[(4, 4, 3), float32] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="float32") /* ty=Tensor[(4, 4, 3), float32] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %631 = multiply(%629, %630) /* ty=Tensor[(4, 4, 3), float32] */;
  (%631,)
}

def @func_3210() -> Tensor[(16, 16, 11), float64] {
  @func_2676() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_8995(%var_8965: Tensor[(90), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(48), uint16], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(90), float32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %632 = @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %633 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %635 = reshape(%634, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %636 = @func_3911(%635) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %637 = cast(meta[relay.Constant][32] /* ty=Tensor[(48), uint16] */, dtype="uint16") /* ty=Tensor[(48), uint16] */;
  %638 = reshape(%637, newshape=[4, 12]) /* ty=Tensor[(4, 12), uint16] */;
  %639 = @func_8576(%638) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(4, 4, 3), float32], Tensor[(4, 12), uint16]) */;
  %640 = @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %641 = cast(%var_8965, dtype="float32") /* ty=Tensor[(90), float32] */;
  %642 = reshape(%641, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %643 = @func_7549(%642) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64], Tensor[(3, 2, 15), float32], Tensor[(90), float32], Tensor[(98), uint32]) */;
  %644 = @func_7371() /* ty=(Tensor[(280), float32], uint16) */;
  %645 = %632.2;
  %646 = @func_2497() /* ty=Tensor[(280), float32] */;
  %647 = %636.2;
  %648 = %639.0;
  %649 = %640.0;
  %650 = %643.0;
  %651 = %644.0;
  %652 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
  (%633, %645, %646, %647, %648, meta[relay.Constant][32] /* ty=Tensor[(48), uint16] */, %649, %650, %var_8965, %651, %652)
}

def @func_8408() -> (Tensor[(280), float32],) {
  %653 = @func_2497() /* ty=Tensor[(280), float32] */;
  (%653,)
}

def @func_4934(%var_4878: Tensor[(40), uint32], %var_4879: Tensor[(440, 1), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(140), float32], Tensor[(11, 8, 5), uint32], Tensor[(40), uint32], Tensor[(440, 160), int64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %654 = cast(meta[relay.Constant][33] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %655 = reshape(%654, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %656 = @func_4516(%655) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) */;
  %657 = cast(%var_4878, dtype="uint32") /* ty=Tensor[(40), uint32] */;
  %658 = cast(%var_4879, dtype="uint32") /* ty=Tensor[(440, 1), uint32] */;
  %659 = cast(meta[relay.Constant][34] /* ty=Tensor[(160), uint32] */, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %660 = reshape(%657, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint32] */;
  %661 = reshape(%658, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), uint32] */;
  %662 = reshape(%659, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), uint32] */;
  %663 = @func_4348(%660, %661, %662) /* ty=(Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) */;
  %664 = cast(meta[relay.Constant][34] /* ty=Tensor[(160), uint32] */, dtype="int64") /* ty=Tensor[(160), int64] */;
  %665 = cast(%var_4879, dtype="int64") /* ty=Tensor[(440, 1), int64] */;
  %666 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %667 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %668 = %656.2;
  %669 = %663.0;
  %670 = add(%664, %665) /* ty=Tensor[(440, 160), int64] */;
  %671 = %666.0;
  %672 = @func_3210() /* ty=Tensor[(16, 16, 11), float64] */;
  (%667, %668, meta[relay.Constant][33] /* ty=Tensor[(140), float32] */, %669, %var_4878, %670, %671, %672)
}

def @func_8060() -> (Tensor[(16, 16, 11), float64], Tensor[(5, 7, 3), uint64], Tensor[(16, 16, 11), float64], Tensor[(9, 5, 14), float64], Tensor[(630), float64], Tensor[(105, 1), float32]) {
  %673 = cast(meta[relay.Constant][35] /* ty=Tensor[(105, 1), uint64] */, dtype="uint64") /* ty=Tensor[(105, 1), uint64] */;
  %674 = reshape(%673, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), uint64] */;
  %675 = @func_6970(%674) /* ty=(Tensor[(5, 7, 3), uint64],) */;
  %676 = cast(meta[relay.Constant][36] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %677 = reshape(%676, newshape=[9, 5, 14]) /* ty=Tensor[(9, 5, 14), float64] */;
  %678 = @func_6325(%677) /* ty=(Tensor[(9, 5, 14), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) */;
  %679 = cast(meta[relay.Constant][35] /* ty=Tensor[(105, 1), uint64] */, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
  %680 = sinh(%679) /* ty=Tensor[(105, 1), float32] */;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
  %682 = @func_3851() /* ty=Tensor[(16, 16, 11), float64] */;
  %683 = %675.0;
  %684 = @func_1966() /* ty=Tensor[(16, 16, 11), float64] */;
  %685 = %678.0;
  %686 = log(%681) /* ty=Tensor[(105, 1), float32] */;
  (%682, %683, %684, %685, meta[relay.Constant][36] /* ty=Tensor[(630), float64] */, %686)
}

def @func_7052(%var_7032: Tensor[(15, 4, 5), float32], %var_7033: Tensor[(15, 4, 5), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(15, 4, 5), int8]) {
  %687 = cast(%var_7033, dtype="bool") /* ty=Tensor[(15, 4, 5), bool] */;
  %688 = shape_of(%var_7032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%var_7032, dtype="bool") /* ty=Tensor[(15, 4, 5), bool] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %691 = not_equal(%689, %690) /* ty=Tensor[(15, 4, 5), bool] */;
  %692 = cast(%691, dtype="int8") /* ty=Tensor[(15, 4, 5), int8] */;
  %693 = shape_of(%var_7032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%var_7032, dtype="int8") /* ty=Tensor[(15, 4, 5), int8] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %696 = @func_6450() /* ty=Tensor[(16, 16, 11), float64] */;
  %697 = left_shift(%694, %695) /* ty=Tensor[(15, 4, 5), int8] */;
  (%696, %697)
}

def @func_4744(%var_4722: Tensor[(16, 16, 11), float64]) -> Tensor[(16, 16, 11), bool] {
  %698 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %699 = %698.1;
  %700 = cast(%var_4722, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%702, %703) /* ty=Tensor[(16, 16, 11), bool] */
}

def @func_9634() -> (Tensor[(2, 2, 2), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %704 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 2, 2), float32] */;
  %705 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %706 = atanh(%704) /* ty=Tensor[(2, 2, 2), float32] */;
  %707 = @func_2296() /* ty=Tensor[(16, 16, 11), float64] */;
  %708 = %705.0;
  (%706, %707, %708)
}

def @func_9775(%var_9767: Tensor[(56), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(7, 8, ?), float64], Tensor[(56), float32]) {
  %709 = cast(%var_9767, dtype="float32") /* ty=Tensor[(56), float32] */;
  %710 = reshape(%709, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float32] */;
  %711 = @func_6218() /* ty=Tensor[(16, 16, 11), float64] */;
  %712 = @func_7872(%710) /* ty=Tensor[(7, 8, ?), float64] */;
  (%711, %712, %var_9767)
}

def @func_8372() -> (Tensor[(16, 16, 11), float64],) {
  %713 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %714 = %713.0;
  (%714,)
}

def @func_239() -> (Tensor[(16, 16, 11), float64],) {
  %715 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 16, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %716 = acosh(%715) /* ty=Tensor[(16, 16, 11), float64] */;
  (%716,)
}

def @func_1782(%var_1780: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %717 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %718 = cast(%717, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %719 = sin(%718) /* ty=Tensor[(16, 16, 11), float64] */;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %721 = cast(%var_1780, dtype="float32") /* ty=Tensor[(280), float32] */;
  %722 = reshape(%720, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %723 = reshape(%721, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %724 = @func_313(%722, %723) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
  %725 = %724.0;
  (%719, %725, %var_1780)
}

def @func_8519(%var_8501: uint16) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(11, 4, 12), uint64], Tensor[(8, 66), uint64], Tensor[(3, 11, 16), float32], Tensor[(98), uint32], uint16, Tensor[(16, 16, 11), float64]) {
  %726 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 66), uint64] */, dtype="uint64") /* ty=Tensor[(8, 66), uint64] */;
  %727 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 66), uint64] */, dtype="uint64") /* ty=Tensor[(8, 66), uint64] */;
  %728 = reshape(%726, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), uint64] */;
  %729 = reshape(%727, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), uint64] */;
  %730 = @func_7888(%728, %729) /* ty=Tensor[(11, 4, 12), uint64] */;
  %731 = cast(%730, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %732 = reshape(%731, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %733 = @func_5436(%732) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(3, 11, 16), float32]) */;
  %734 = cast(%var_8501, dtype="uint16") /* ty=uint16 */;
  %735 = reshape(%734, newshape=[]) /* ty=uint16 */;
  %736 = @func_3377(%735) /* ty=(Tensor[(1, 4, 10), uint16], Tensor[(16, 16, 11), float64], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) */;
  %737 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %738 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
  %739 = @func_3826() /* ty=Tensor[(16, 16, 11), float64] */;
  %740 = %733.1;
  %741 = %736.3;
  %742 = %737.0;
  (%738, %739, %730, meta[relay.Constant][39] /* ty=Tensor[(8, 66), uint64] */, %740, %741, %var_8501, %742)
}

def @func_5914() -> Tensor[(16, 16, 11), float64] {
  @func_1424() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7285(%var_7282: Tensor[(12, 8, 8), float32]) -> Tensor[(12, 8, 8), float32] {
  %743 = cast(%var_7282, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  acosh(%743) /* ty=Tensor[(12, 8, 8), float32] */
}

def @func_8080() -> Tensor[(16, 16, 11), float64] {
  %744 = @func_5902() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %744.0
}

def @func_3826() -> Tensor[(16, 16, 11), float64] {
  %745 = @func_3673() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %745.0
}

def @func_4516(%var_4508: Tensor[(140), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) {
  %746 = @func_3782() /* ty=Tensor[(16, 16, 11), float64] */;
  %747 = cast(%746, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %748 = reshape(%747, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %749 = @func_2614(%748) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */;
  %750 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %751 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %752 = cast(%var_4508, dtype="float32") /* ty=Tensor[(140), float32] */;
  %753 = reshape(%752, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), float32] */;
  %754 = @func_3851() /* ty=Tensor[(16, 16, 11), float64] */;
  %755 = %749.0;
  %756 = %750.0;
  %757 = %751.0;
  %758 = @func_3714() /* ty=Tensor[(16, 16, 11), float64] */;
  %759 = @func_3792(%753) /* ty=Tensor[(7, 5, 4), float32] */;
  (%746, %754, %755, %756, %757, %758, %759, %var_4508)
}

def @func_6744() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], uint16, Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64]) {
  %760 = @func_5571() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */;
  %761 = cast(meta[relay.Constant][40] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %762 = reshape(%761, newshape=[]) /* ty=uint16 */;
  %763 = @func_4120(%762) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(1, 4, 10), uint16], uint16) */;
  %764 = @func_2235() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %765 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %766 = @func_3422() /* ty=Tensor[(16, 16, 11), float64] */;
  %767 = %760.0;
  %768 = %763.0;
  %769 = %764.0;
  %770 = %765.0;
  %771 = @func_1205() /* ty=Tensor[(4, 12, 2), float64] */;
  (%766, %767, %768, meta[relay.Constant][40] /* ty=uint16 */, %769, %770, %771)
}

def @func_5571() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  %772 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %773 = %772.1;
  %774 = cast(%773, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %775 = cos(%774) /* ty=Tensor[(16, 16, 11), float64] */;
  %776 = cast(%775, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %777 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  %778 = sqrt(%776) /* ty=Tensor[(16, 16, 11), float32] */;
  (%777, %778)
}

def @func_1912() -> (Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %779 = @func_953() /* ty=Tensor[(16, 16, 11), float64] */;
  %780 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %781 = %780.0;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %783 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%779, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %786 = cast(meta[relay.Constant][41] /* ty=Tensor[(210, 2), uint32] */, dtype="uint32") /* ty=Tensor[(210, 2), uint32] */;
  %787 = reshape(%786, newshape=[420]) /* ty=Tensor[(420), uint32] */;
  %788 = @func_1818(%787) /* ty=(Tensor[(4, 12, 2), float64], Tensor[(16, 16, 11), float64], Tensor[(420), uint32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */;
  %789 = @func_1184() /* ty=Tensor[(16, 16, 11), float64] */;
  %790 = cast(%779, dtype="uint32") /* ty=Tensor[(16, 16, 11), uint32] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="uint32") /* ty=Tensor[(16, 16, 11), uint32] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %794 = cast(%779, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %795 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %796 = floor_mod(%784, %785) /* ty=Tensor[(16, 16, 11), float32] */;
  %797 = %788.0;
  %798 = bitwise_xor(%792, %793) /* ty=Tensor[(16, 16, 11), uint32] */;
  %799 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
  %800 = log10(%794) /* ty=Tensor[(16, 16, 11), float64] */;
  %801 = %795.0;
  (%796, %797, meta[relay.Constant][41] /* ty=Tensor[(210, 2), uint32] */, %798, %799, %800, %801)
}

def @func_1613(%var_1610: Tensor[(140, 2), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(140, 2), float32]) {
  %802 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %803 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %804 = cast(%var_1610, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %805 = reshape(%804, newshape=[7, 4, 10]) /* ty=Tensor[(7, 4, 10), float32] */;
  %806 = @func_50(%805) /* ty=(Tensor[(7, 4, 10), float32],) */;
  %807 = %802.0;
  %808 = %803.1;
  %809 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
  %810 = %806.0;
  (%807, %808, %809, %810, %var_1610)
}

def @func_1184() -> Tensor[(16, 16, 11), float64] {
  %811 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %811.1
}

def @func_415(%var_400: Tensor[(1, 10, 6), int16], %var_408: Tensor[(280), float32]) -> (Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) {
  %812 = cast(%var_400, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
  %813 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 10, 6), int16] */, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
  %814 = cast(%var_408, dtype="float32") /* ty=Tensor[(280), float32] */;
  %815 = reshape(%814, newshape=[7, 4, 10]) /* ty=Tensor[(7, 4, 10), float32] */;
  %816 = @func_50(%815) /* ty=(Tensor[(7, 4, 10), float32],) */;
  %817 = less_equal(%812, %813) /* ty=Tensor[(15, 10, 6), bool] */;
  %818 = %816.0;
  (%817, %818, %var_408)
}

def @func_3565() -> (Tensor[(16, 16, 11), float64],) {
  %819 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  (%819,)
}

def @func_2614(%var_2576: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) {
  %820 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %821 = cast(%var_2576, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%820, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %825 = less_equal(%823, %824) /* ty=Tensor[(16, 16, 11), bool] */;
  %826 = @func_1751() /* ty=Tensor[(16, 16, 11), float64] */;
  (%825, %826)
}

def @func_3771(%var_3764: Tensor[(3, 2, 15), float32], %var_3769: Tensor[(98), uint32]) -> (Tensor[(3, 2, 15), float32], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) {
  %827 = cast(%var_3764, dtype="float32") /* ty=Tensor[(3, 2, 15), float32] */;
  %828 = cast(%var_3769, dtype="uint32") /* ty=Tensor[(98), uint32] */;
  %829 = reshape(%828, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), uint32] */;
  %830 = @func_2993(%829) /* ty=(Tensor[(2, 7, 7), uint32], Tensor[(2, 7, 7), float32]) */;
  %831 = atan(%827) /* ty=Tensor[(3, 2, 15), float32] */;
  %832 = %830.1;
  (%831, %832, %var_3769)
}

def @func_3422() -> Tensor[(16, 16, 11), float64] {
  @func_1184() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_2923() -> Tensor[(16, 16, 11), float64] {
  %833 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %833.0
}

def @func_9292() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %834 = @func_9232() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */;
  %835 = @func_5182() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %836 = @func_5914() /* ty=Tensor[(16, 16, 11), float64] */;
  %837 = %834.1;
  %838 = %835.0;
  %839 = @func_7964() /* ty=Tensor[(16, 16, 11), float64] */;
  (%836, %837, %838, %839)
}

def @func_5902() -> (Tensor[(16, 16, 11), float64],) {
  %840 = @func_5735() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %841 = %840.0;
  (%841,)
}

def @func_8541() -> (Tensor[(280), float32],) {
  %842 = @func_2138() /* ty=(Tensor[(280), float32],) */;
  %843 = %842.0;
  (%843,)
}

def @func_7720() -> (Tensor[(16, 16, 11), float64],) {
  %844 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %845 = %844.0;
  (%845,)
}

def @func_3377(%var_3354: uint16) -> (Tensor[(1, 4, 10), uint16], Tensor[(16, 16, 11), float64], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) {
  %846 = cast(%var_3354, dtype="uint16") /* ty=uint16 */;
  %847 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 4, 10), uint16] */, dtype="uint16") /* ty=Tensor[(1, 4, 10), uint16] */;
  %848 = cast(meta[relay.Constant][44] /* ty=Tensor[(98), uint32] */, dtype="uint32") /* ty=Tensor[(98), uint32] */;
  %849 = reshape(%848, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), uint32] */;
  %850 = @func_2993(%849) /* ty=(Tensor[(2, 7, 7), uint32], Tensor[(2, 7, 7), float32]) */;
  %851 = subtract(%846, %847) /* ty=Tensor[(1, 4, 10), uint16] */;
  %852 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
  %853 = %850.1;
  (%851, %852, %853, meta[relay.Constant][44] /* ty=Tensor[(98), uint32] */)
}

def @func_9360() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float64]) {
  %854 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %855 = cast(%854, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %856 = reshape(%855, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %857 = @func_2614(%856) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */;
  %858 = %857.1;
  %859 = cast(%858, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %860 = reshape(%859, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %861 = @func_3911(%860) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %862 = %861.2;
  %863 = cast(%862, dtype="float64") /* ty=Tensor[(280), float64] */;
  %864 = sqrt(%863) /* ty=Tensor[(280), float64] */;
  (%854, %858, %864)
}

def @func_9697(%var_9664: Tensor[(16, 1, 14), float64], %var_9665: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 14), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  %865 = cast(%var_9664, dtype="float64") /* ty=Tensor[(16, 1, 14), float64] */;
  %866 = cast(%var_9665, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %867 = mod(%865, %866) /* ty=Tensor[(16, 16, 14), float64] */;
  %868 = cast(%var_9665, dtype="float32") /* ty=Tensor[(16, 16, 14), float32] */;
  %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%867, dtype="float32") /* ty=Tensor[(16, 16, 14), float32] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %872 = @func_1912() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %873 = @func_6218() /* ty=Tensor[(16, 16, 11), float64] */;
  %874 = divide(%870, %871) /* ty=Tensor[(16, 16, 14), float32] */;
  %875 = %872.6;
  %876 = @func_3548() /* ty=Tensor[(16, 16, 11), float32] */;
  (%873, %874, %875, %876)
}

def @func_3782() -> Tensor[(16, 16, 11), float64] {
  @func_2296() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7489(%var_7440: Tensor[(528), float32], %var_7482: Tensor[(480), float32]) -> (Tensor[(16, 16, 11), float32], Tensor[(?, ?, 16), float64], Tensor[(1, 16), float64], Tensor[(528), float32], Tensor[(10, 8, 6), bool], Tensor[(480), float32]) {
  %877 = @func_7016() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %878 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
  %879 = cast(%var_7440, dtype="float32") /* ty=Tensor[(528), float32] */;
  %880 = reshape(%878, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
  %881 = reshape(%879, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %882 = @func_6808(%880, %881) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */;
  %883 = cast(%var_7482, dtype="float32") /* ty=Tensor[(480), float32] */;
  %884 = reshape(%883, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %885 = @func_3163(%884) /* ty=(Tensor[(10, 8, 6), float64], Tensor[(210, 2), uint32], Tensor[(10, 8, 6), bool]) */;
  %886 = %877.1;
  %887 = %882.2;
  %888 = %885.2;
  (%886, %887, meta[relay.Constant][45] /* ty=Tensor[(1, 16), float64] */, %var_7440, %888, %var_7482)
}

def @func_6509() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %889 = @func_5033() /* ty=(Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) */;
  %890 = @func_2379() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %891 = %889.1;
  %892 = %890.1;
  (%891, %892)
}

def @func_2782() -> (Tensor[(16, 16, 11), float64], Tensor[(60), int16], Tensor[(10, 44), int8]) {
  %893 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 44), uint8] */, dtype="uint8") /* ty=Tensor[(10, 44), uint8] */;
  %894 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 44), uint8] */, dtype="uint8") /* ty=Tensor[(10, 44), uint8] */;
  %895 = reshape(%893, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %896 = reshape(%894, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %897 = @func_1329(%895, %896) /* ty=(Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) */;
  %898 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 44), uint8] */, dtype="float32") /* ty=Tensor[(10, 44), float32] */;
  %899 = acos(%898) /* ty=Tensor[(10, 44), float32] */;
  %900 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 44), uint8] */, dtype="int8") /* ty=Tensor[(10, 44), int8] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(2), int32] */;
  %902 = cast(%899, dtype="int8") /* ty=Tensor[(10, 44), int8] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %904 = @func_1184() /* ty=Tensor[(16, 16, 11), float64] */;
  %905 = %897.2;
  %906 = right_shift(%902, %903) /* ty=Tensor[(10, 44), int8] */;
  (%904, %905, %906)
}

def @func_6876() -> (Tensor[(16, 16, 11), float64], Tensor[(15, 10, 6), bool], Tensor[(10, 44), uint8], Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %907 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 44), uint8] */, dtype="uint8") /* ty=Tensor[(10, 44), uint8] */;
  %908 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 44), uint8] */, dtype="uint8") /* ty=Tensor[(10, 44), uint8] */;
  %909 = reshape(%907, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %910 = reshape(%908, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %911 = @func_1329(%909, %910) /* ty=(Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) */;
  %912 = cast(meta[relay.Constant][48] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %913 = cast(meta[relay.Constant][48] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %914 = reshape(%912, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %915 = reshape(%913, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %916 = @func_1246(%914, %915) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) */;
  %917 = @func_1184() /* ty=Tensor[(16, 16, 11), float64] */;
  %918 = %911.1;
  %919 = %916.0;
  %920 = @func_1966() /* ty=Tensor[(16, 16, 11), float64] */;
  (%917, %918, meta[relay.Constant][47] /* ty=Tensor[(10, 44), uint8] */, %919, meta[relay.Constant][48] /* ty=Tensor[(280), float32] */, %920)
}

def @func_9072() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %921 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
  %922 = @func_3714() /* ty=Tensor[(16, 16, 11), float64] */;
  (%921, %922)
}

def @func_5182() -> (Tensor[(16, 16, 11), float32],) {
  %923 = @func_3958() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %924 = %923.0;
  (%924,)
}

def @func_6970(%var_6965: Tensor[(5, 7, 3), uint64]) -> (Tensor[(5, 7, 3), uint64],) {
  %925 = cast(%var_6965, dtype="uint64") /* ty=Tensor[(5, 7, 3), uint64] */;
  %926 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(5, 7, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 7, 3), uint64] */, dtype="uint64") /* ty=Tensor[(5, 7, 3), uint64] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %929 = multiply(%927, %928) /* ty=Tensor[(5, 7, 3), uint64] */;
  (%929,)
}

def @func_3498(%var_3462: uint32, %var_3463: Tensor[(12, 11, 8), uint32], %var_3477: Tensor[(54), int64]) -> (Tensor[(12, 11, 8), uint32], Tensor[(6, 9, 1), int64], Tensor[(54), int64]) {
  %930 = cast(%var_3462, dtype="uint32") /* ty=uint32 */;
  %931 = cast(%var_3463, dtype="uint32") /* ty=Tensor[(12, 11, 8), uint32] */;
  %932 = cast(%var_3462, dtype="int64") /* ty=int64 */;
  %933 = cast(%var_3477, dtype="int64") /* ty=Tensor[(54), int64] */;
  %934 = reshape(%932, newshape=[]) /* ty=int64 */;
  %935 = reshape(%933, newshape=[6, 9, 1]) /* ty=Tensor[(6, 9, 1), int64] */;
  %936 = @func_814(%934, %935) /* ty=(Tensor[(6, 9, 1), int64],) */;
  %937 = left_shift(%930, %931) /* ty=Tensor[(12, 11, 8), uint32] */;
  %938 = %936.0;
  (%937, %938, %var_3477)
}

def @func_5516(%var_5513: Tensor[(40), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(40), uint32], Tensor[(160, 1), uint32]) {
  %939 = @func_5209() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %940 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %941 = cast(%var_5513, dtype="uint32") /* ty=Tensor[(40), uint32] */;
  %942 = cast(meta[relay.Constant][50] /* ty=Tensor[(160, 1), uint32] */, dtype="uint32") /* ty=Tensor[(160, 1), uint32] */;
  %943 = reshape(%941, newshape=[40]) /* ty=Tensor[(40), uint32] */;
  %944 = reshape(%942, newshape=[160]) /* ty=Tensor[(160), uint32] */;
  %945 = @func_5315(%943, %944) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(40), uint32], Tensor[(440), uint32], Tensor[(160), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %946 = %939.0;
  %947 = %940.0;
  %948 = %945.1;
  (%946, %947, %948, %var_5513, meta[relay.Constant][50] /* ty=Tensor[(160, 1), uint32] */)
}

def @func_8351() -> Tensor[(16, 16, 11), float64] {
  %949 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %949.1
}

def @func_4120(%var_4103: uint16) -> (Tensor[(16, 16, 11), float64], Tensor[(1, 4, 10), uint16], uint16) {
  %950 = cast(%var_4103, dtype="uint16") /* ty=uint16 */;
  %951 = reshape(%950, newshape=[]) /* ty=uint16 */;
  %952 = @func_3377(%951) /* ty=(Tensor[(1, 4, 10), uint16], Tensor[(16, 16, 11), float64], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) */;
  %953 = @func_3714() /* ty=Tensor[(16, 16, 11), float64] */;
  %954 = %952.0;
  (%953, %954, %var_4103)
}

def @func_7888(%var_7882: Tensor[(11, 4, 12), uint64], %var_7883: Tensor[(11, 4, 12), uint64]) -> Tensor[(11, 4, 12), uint64] {
  %955 = cast(%var_7883, dtype="uint64") /* ty=Tensor[(11, 4, 12), uint64] */;
  %956 = shape_of(%var_7882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%var_7882, dtype="uint64") /* ty=Tensor[(11, 4, 12), uint64] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%957, %958) /* ty=Tensor[(11, 4, 12), uint64] */
}

def @func_8342() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %959 = @func_5209() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %960 = @func_6218() /* ty=Tensor[(16, 16, 11), float64] */;
  %961 = %959.0;
  %962 = @func_2497() /* ty=Tensor[(280), float32] */;
  (%960, %961, %962)
}

def @func_581(%var_562: Tensor[(12, 15, 10), float32], %var_572: Tensor[(280), float32]) -> (Tensor[(12, 15, 10), float32], Tensor[(12, 15, 10), float32], Tensor[(16, 16, 11), float64], Tensor[(2816), float64], Tensor[(280), float32]) {
  %963 = cast(%var_562, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
  %964 = cast(%var_562, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
  %965 = cast(meta[relay.Constant][51] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %966 = cast(%var_572, dtype="float32") /* ty=Tensor[(280), float32] */;
  %967 = reshape(%965, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %968 = reshape(%966, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %969 = @func_313(%967, %968) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
  %970 = cosh(%963) /* ty=Tensor[(12, 15, 10), float32] */;
  %971 = rsqrt(%964) /* ty=Tensor[(12, 15, 10), float32] */;
  %972 = %969.0;
  (%970, %971, %972, meta[relay.Constant][51] /* ty=Tensor[(2816), float64] */, %var_572)
}

def @func_9835() -> Tensor[(16, 16, 11), float64] {
  %973 = @func_3565() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %973.0
}

def @func_9660() -> Tensor[(16, 16, 11), float32] {
  @func_3548() /* ty=Tensor[(16, 16, 11), float32] */
}

def @func_5033() -> (Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) {
  %974 = @func_3714() /* ty=Tensor[(16, 16, 11), float64] */;
  %975 = cast(%974, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %976 = reshape(%975, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %977 = @func_1293(%976) /* ty=(Tensor[(16, 16, 11), uint16], Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32]) */;
  %978 = @func_4316() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %979 = @func_2497() /* ty=Tensor[(280), float32] */;
  %980 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
  %981 = %977.0;
  %982 = %978.0;
  (%979, %980, %974, %981, %982)
}

def @func_814(%var_807: int64, %var_808: Tensor[(6, 9, 1), int64]) -> (Tensor[(6, 9, 1), int64],) {
  %983 = cast(%var_807, dtype="int64") /* ty=int64 */;
  %984 = cast(%var_808, dtype="int64") /* ty=Tensor[(6, 9, 1), int64] */;
  %985 = maximum(%983, %984) /* ty=Tensor[(6, 9, 1), int64] */;
  (%985,)
}

def @func_4703() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %986 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %987 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
  %988 = %986.0;
  (%987, %988)
}

def @func_4348(%var_4328: Tensor[(1, 8, 5), uint32], %var_4329: Tensor[(11, 8, 5), uint32], %var_4343: Tensor[(4, 8, 5), uint32]) -> (Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) {
  %989 = cast(%var_4328, dtype="uint32") /* ty=Tensor[(1, 8, 5), uint32] */;
  %990 = cast(%var_4329, dtype="uint32") /* ty=Tensor[(11, 8, 5), uint32] */;
  %991 = cast(%var_4328, dtype="uint64") /* ty=Tensor[(1, 8, 5), uint64] */;
  %992 = cast(%var_4343, dtype="uint64") /* ty=Tensor[(4, 8, 5), uint64] */;
  %993 = maximum(%989, %990) /* ty=Tensor[(11, 8, 5), uint32] */;
  %994 = add(%991, %992) /* ty=Tensor[(4, 8, 5), uint64] */;
  (%993, %994)
}

def @func_5735() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %995 = @func_5679() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %996 = @func_4703() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %997 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
  %998 = %995.0;
  %999 = %996.0;
  (%997, %998, %999)
}

def @func_8278() -> (Tensor[(16, 16, 11), float64],) {
  %1000 = @func_3826() /* ty=Tensor[(16, 16, 11), float64] */;
  (%1000,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9701(%var_9699: Tensor[(16, 1, 14), float64], %var_9700: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 14), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  @func_9697(%var_9699, %var_9700) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 14), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */
}

def @func_6970(%var_6965: Tensor[(5, 7, 3), uint64]) -> (Tensor[(5, 7, 3), uint64],) {
  %0 = cast(%var_6965, dtype="uint64") /* ty=Tensor[(5, 7, 3), uint64] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(5, 7, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 7, 3), uint64] */, dtype="uint64") /* ty=Tensor[(5, 7, 3), uint64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %4 = multiply(%2, %3) /* ty=Tensor[(5, 7, 3), uint64] */;
  (%4,)
}

def @func_836(%var_821: Tensor[(14, 10, 3), uint32], %var_822: Tensor[(14, 10, 3), uint32], %var_832: Tensor[(280), float32]) -> (Tensor[(14, 10, 3), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %5 = cast(%var_822, dtype="uint32") /* ty=Tensor[(14, 10, 3), uint32] */;
  %6 = shape_of(%var_821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_821, dtype="uint32") /* ty=Tensor[(14, 10, 3), uint32] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %9 = cast(%var_832, dtype="float32") /* ty=Tensor[(280), float32] */;
  %10 = reshape(%9, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %11 = @func_672(%10) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */;
  %12 = subtract(%7, %8) /* ty=Tensor[(14, 10, 3), uint32] */;
  %13 = %11.0;
  (%12, %13, %var_832)
}

def @func_6328(%var_6326: Tensor[(9, 5, 14), float64]) -> (Tensor[(9, 5, 14), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) {
  @func_6325(%var_6326) /* ty=(Tensor[(9, 5, 14), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) */
}

def @func_9777(%var_9776: Tensor[(56), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(7, 8, ?), float64], Tensor[(56), float32]) {
  %18 = fn (%var_9767: Tensor[(56), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(7, 8, ?), float64], Tensor[(56), float32]) {
    %14 = cast(%var_9767, dtype="float32") /* ty=Tensor[(56), float32] */;
    %15 = reshape(%14, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float32] */;
    %16 = @func_6218() /* ty=Tensor[(16, 16, 11), float64] */;
    %17 = @func_7872(%15) /* ty=Tensor[(7, 8, ?), float64] */;
    (%16, %17, %var_9767)
  };
  %18(%var_9776) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 8, ?), float64], Tensor[(56), float32]) */
}

def @func_9836() -> Tensor[(16, 16, 11), float64] {
  %20 = fn () -> Tensor[(16, 16, 11), float64] {
    %19 = @func_3565() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %19.0
  };
  %20() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_3548() -> Tensor[(16, 16, 11), float32] {
  %21 = @func_2235() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %21.0
}

def @func_5318(%var_5316: Tensor[(40), uint32], %var_5317: Tensor[(160), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(40), uint32], Tensor[(440), uint32], Tensor[(160), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %37 = fn (%var_5301: Tensor[(40), uint32], %var_5303: Tensor[(160), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(40), uint32], Tensor[(440), uint32], Tensor[(160), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
    %22 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %23 = cast(%var_5301, dtype="uint32") /* ty=Tensor[(40), uint32] */;
    %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(440), uint32] */, dtype="uint32") /* ty=Tensor[(440), uint32] */;
    %25 = cast(%var_5303, dtype="uint32") /* ty=Tensor[(160), uint32] */;
    %26 = reshape(%23, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint32] */;
    %27 = reshape(%24, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), uint32] */;
    %28 = reshape(%25, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), uint32] */;
    %29 = @func_4348(%26, %27, %28) /* ty=(Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) */;
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %31 = reshape(%30, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
    %32 = @func_3619(%31) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(70, 4), uint64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
    %33 = @func_3851() /* ty=Tensor[(16, 16, 11), float64] */;
    %34 = %22.0;
    %35 = %29.1;
    %36 = %32.1;
    (%33, %34, %35, %var_5301, meta[relay.Constant][1] /* ty=Tensor[(440), uint32] */, %var_5303, %36, meta[relay.Constant][2] /* ty=Tensor[(280), float32] */)
  };
  %37(%var_5316, %var_5317) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(40), uint32], Tensor[(440), uint32], Tensor[(160), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */
}

def @func_9594(%var_9593: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(280), float32]) {
  %44 = fn (%var_9572: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(280), float32]) {
    %38 = @func_7665() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %39 = cast(%var_9572, dtype="float32") /* ty=Tensor[(280), float32] */;
    %40 = reshape(%39, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %41 = @func_8785(%40) /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(5, 14, 4), float64], Tensor[(280), float32]) */;
    %42 = %38.0;
    %43 = %41.0;
    (%42, %43, %var_9572)
  };
  %44(%var_9593) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(280), float32]) */
}

def @func_1207() -> Tensor[(4, 12, 2), float64] {
  @func_1205() /* ty=Tensor[(4, 12, 2), float64] */
}

def @func_861() -> Tensor[(16, 16, 11), float64] {
  @func_859() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_3673() -> (Tensor[(16, 16, 11), float64],) {
  %45 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %46 = %45.0;
  (%46,)
}

def @func_8062() -> (Tensor[(16, 16, 11), float64], Tensor[(5, 7, 3), uint64], Tensor[(16, 16, 11), float64], Tensor[(9, 5, 14), float64], Tensor[(630), float64], Tensor[(105, 1), float32]) {
  @func_8060() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(5, 7, 3), uint64], Tensor[(16, 16, 11), float64], Tensor[(9, 5, 14), float64], Tensor[(630), float64], Tensor[(105, 1), float32]) */
}

def @func_1782(%var_1780: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %47 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %49 = sin(%48) /* ty=Tensor[(16, 16, 11), float64] */;
  %50 = cast(%49, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %51 = cast(%var_1780, dtype="float32") /* ty=Tensor[(280), float32] */;
  %52 = reshape(%50, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %53 = reshape(%51, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %54 = @func_313(%52, %53) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
  %55 = %54.0;
  (%49, %55, %var_1780)
}

def @func_5902() -> (Tensor[(16, 16, 11), float64],) {
  %56 = @func_5735() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %57 = %56.0;
  (%57,)
}

def @func_8279() -> (Tensor[(16, 16, 11), float64],) {
  %59 = fn () -> (Tensor[(16, 16, 11), float64],) {
    %58 = @func_3826() /* ty=Tensor[(16, 16, 11), float64] */;
    (%58,)
  };
  %59() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_7875(%var_7873: Tensor[(7, 8, 1), float32]) -> Tensor[(7, 8, ?), float64] {
  @func_7872(%var_7873) /* ty=Tensor[(7, 8, ?), float64] */
}

def @func_268() -> (Tensor[(16, 16, 11), float64],) {
  %62 = fn () -> (Tensor[(16, 16, 11), float64],) {
    %60 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %61 = %60.0;
    (%61,)
  };
  %62() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_3163(%var_3130: Tensor[(10, 8, 6), float32]) -> (Tensor[(10, 8, 6), float64], Tensor[(210, 2), uint32], Tensor[(10, 8, 6), bool]) {
  %63 = cast(%var_3130, dtype="float64") /* ty=Tensor[(10, 8, 6), float64] */;
  %64 = @func_1912() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %65 = cast(%var_3130, dtype="float32") /* ty=Tensor[(10, 8, 6), float32] */;
  %66 = cos(%65) /* ty=Tensor[(10, 8, 6), float32] */;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(10, 8, 6), float64] */;
  %68 = log(%67) /* ty=Tensor[(10, 8, 6), float64] */;
  %69 = cast(%66, dtype="bool") /* ty=Tensor[(10, 8, 6), bool] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%68, dtype="bool") /* ty=Tensor[(10, 8, 6), bool] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %73 = atanh(%63) /* ty=Tensor[(10, 8, 6), float64] */;
  %74 = %64.2;
  %75 = logical_or(%71, %72) /* ty=Tensor[(10, 8, 6), bool] */;
  (%73, %74, %75)
}

def @func_1105() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %83 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
    %76 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %78 = reshape(%77, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
    %79 = @func_672(%78) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */;
    %80 = %76.0;
    %81 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
    %82 = %79.0;
    (%80, %81, %82, meta[relay.Constant][3] /* ty=Tensor[(280), float32] */)
  };
  %83() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */
}

def @func_9477() -> Tensor[(16, 16, 11), float64] {
  @func_953() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_2498() -> Tensor[(280), float32] {
  %85 = fn () -> Tensor[(280), float32] {
    %84 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
    %84.3
  };
  %85() /* ty=Tensor[(280), float32] */
}

def @func_3621(%var_3620: Tensor[(70, 4), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(70, 4), uint64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %107 = fn (%var_3575: Tensor[(70, 4), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(70, 4), uint64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
    %86 = cast(%var_3575, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
    %87 = reshape(%86, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
    %88 = @func_672(%87) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */;
    %89 = cast(%var_3575, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
    %90 = reshape(%89, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %91 = @func_1782(%90) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
    %92 = %91.2;
    %93 = cast(%92, dtype="uint64") /* ty=Tensor[(280), uint64] */;
    %94 = shape_of(%var_3575, dtype="int32") /* ty=Tensor[(2), int32] */;
    %95 = cast(%var_3575, dtype="uint64") /* ty=Tensor[(70, 4), uint64] */;
    %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %97 = @func_2296() /* ty=Tensor[(16, 16, 11), float64] */;
    %98 = cast(%97, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %99 = cast(%var_3575, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
    %100 = reshape(%98, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
    %101 = reshape(%99, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %102 = @func_313(%100, %101) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
    %103 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
    %104 = %88.1;
    %105 = logical_xor(%95, %96) /* ty=Tensor[(70, 4), uint64] */;
    %106 = %102.1;
    (%103, %104, %105, %97, %106)
  };
  %107(%var_3620) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(70, 4), uint64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */
}

def @func_4073() -> (Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) {
  @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */
}

def @func_1185() -> Tensor[(16, 16, 11), float64] {
  %109 = fn () -> Tensor[(16, 16, 11), float64] {
    %108 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %108.1
  };
  %109() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_6658(%var_6657: Tensor[(16, 16, 11), float32]) -> (Tensor[(16, 16, 11), bool],) {
  %117 = fn (%var_6610: Tensor[(16, 16, 11), float32]) -> (Tensor[(16, 16, 11), bool],) {
    %110 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
    %111 = %110.0;
    %112 = cast(%var_6610, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
    %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(3), int32] */;
    %114 = cast(%111, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
    %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %116 = logical_and(%114, %115) /* ty=Tensor[(16, 16, 11), bool] */;
    (%116,)
  };
  %117(%var_6657) /* ty=(Tensor[(16, 16, 11), bool],) */
}

def @func_1249(%var_1247: Tensor[(10, 28), float32], %var_1248: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) {
  %136 = fn (%var_1212: Tensor[(10, 28), float32], %var_1226: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) {
    %118 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %119 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 60), int16] */, dtype="int16") /* ty=Tensor[(1, 60), int16] */;
    %120 = cast(%var_1212, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
    %121 = reshape(%119, newshape=[60]) /* ty=Tensor[(60), int16] */;
    %122 = reshape(%120, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %123 = @func_1022(%121, %122) /* ty=(Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */;
    %124 = cast(%var_1226, dtype="bool") /* ty=Tensor[(10, 28), bool] */;
    %125 = shape_of(%var_1212, dtype="int32") /* ty=Tensor[(2), int32] */;
    %126 = cast(%var_1212, dtype="bool") /* ty=Tensor[(10, 28), bool] */;
    %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %128 = logical_or(%126, %127) /* ty=Tensor[(10, 28), bool] */;
    %129 = cast(%var_1212, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
    %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(2), int32] */;
    %131 = cast(%128, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %133 = %118.0;
    %134 = %123.3;
    %135 = floor_divide(%131, %132) /* ty=Tensor[(10, 28), float32] */;
    (%133, %134, meta[relay.Constant][4] /* ty=Tensor[(1, 60), int16] */, %135)
  };
  %136(%var_1247, %var_1248) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) */
}

def @func_2298() -> Tensor[(16, 16, 11), float64] {
  @func_2296() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_418(%var_416: Tensor[(1, 10, 6), int16], %var_417: Tensor[(280), float32]) -> (Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) {
  %144 = fn (%var_400: Tensor[(1, 10, 6), int16], %var_408: Tensor[(280), float32]) -> (Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) {
    %137 = cast(%var_400, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
    %138 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 10, 6), int16] */, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
    %139 = cast(%var_408, dtype="float32") /* ty=Tensor[(280), float32] */;
    %140 = reshape(%139, newshape=[7, 4, 10]) /* ty=Tensor[(7, 4, 10), float32] */;
    %141 = @func_50(%140) /* ty=(Tensor[(7, 4, 10), float32],) */;
    %142 = less_equal(%137, %138) /* ty=Tensor[(15, 10, 6), bool] */;
    %143 = %141.0;
    (%142, %143, %var_408)
  };
  %144(%var_416, %var_417) /* ty=(Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */
}

def @func_5389(%var_5386: Tensor[(2, 3, 11), float64], %var_5387: Tensor[(1800), float32], %var_5388: Tensor[(280), float32]) -> (Tensor[(2, 3, 11), int32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(280), float32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %165 = fn (%var_5338: Tensor[(2, 3, 11), float64], %var_5365: Tensor[(1800), float32], %var_5366: Tensor[(280), float32]) -> (Tensor[(2, 3, 11), int32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(280), float32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %145 = cast(%var_5338, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
    %146 = atanh(%145) /* ty=Tensor[(2, 3, 11), float64] */;
    %147 = cast(%146, dtype="int32") /* ty=Tensor[(2, 3, 11), int32] */;
    %148 = shape_of(%var_5338, dtype="int32") /* ty=Tensor[(3), int32] */;
    %149 = cast(%var_5338, dtype="int32") /* ty=Tensor[(2, 3, 11), int32] */;
    %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %151 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %152 = cast(%var_5365, dtype="float32") /* ty=Tensor[(1800), float32] */;
    %153 = cast(%var_5366, dtype="float32") /* ty=Tensor[(280), float32] */;
    %154 = reshape(%152, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float32] */;
    %155 = reshape(%153, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %156 = @func_581(%154, %155) /* ty=(Tensor[(12, 15, 10), float32], Tensor[(12, 15, 10), float32], Tensor[(16, 16, 11), float64], Tensor[(2816), float64], Tensor[(280), float32]) */;
    %157 = @func_1912() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %158 = maximum(%149, %150) /* ty=Tensor[(2, 3, 11), int32] */;
    %159 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
    %160 = %151.0;
    %161 = %156.0;
    %162 = %157.3;
    %163 = @func_3422() /* ty=Tensor[(16, 16, 11), float64] */;
    %164 = @func_1751() /* ty=Tensor[(16, 16, 11), float64] */;
    (%158, %159, %160, %161, %var_5365, %var_5366, %162, %163, %164)
  };
  %165(%var_5386, %var_5387, %var_5388) /* ty=(Tensor[(2, 3, 11), int32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(280), float32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_8060() -> (Tensor[(16, 16, 11), float64], Tensor[(5, 7, 3), uint64], Tensor[(16, 16, 11), float64], Tensor[(9, 5, 14), float64], Tensor[(630), float64], Tensor[(105, 1), float32]) {
  %166 = cast(meta[relay.Constant][6] /* ty=Tensor[(105, 1), uint64] */, dtype="uint64") /* ty=Tensor[(105, 1), uint64] */;
  %167 = reshape(%166, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), uint64] */;
  %168 = @func_6970(%167) /* ty=(Tensor[(5, 7, 3), uint64],) */;
  %169 = cast(meta[relay.Constant][7] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %170 = reshape(%169, newshape=[9, 5, 14]) /* ty=Tensor[(9, 5, 14), float64] */;
  %171 = @func_6325(%170) /* ty=(Tensor[(9, 5, 14), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) */;
  %172 = cast(meta[relay.Constant][6] /* ty=Tensor[(105, 1), uint64] */, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
  %173 = sinh(%172) /* ty=Tensor[(105, 1), float32] */;
  %174 = cast(%173, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
  %175 = @func_3851() /* ty=Tensor[(16, 16, 11), float64] */;
  %176 = %168.0;
  %177 = @func_1966() /* ty=Tensor[(16, 16, 11), float64] */;
  %178 = %171.0;
  %179 = log(%174) /* ty=Tensor[(105, 1), float32] */;
  (%175, %176, %177, %178, meta[relay.Constant][7] /* ty=Tensor[(630), float64] */, %179)
}

def @func_5904() -> (Tensor[(16, 16, 11), float64],) {
  @func_5902() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_8543() -> (Tensor[(280), float32],) {
  @func_8541() /* ty=(Tensor[(280), float32],) */
}

def @func_5516(%var_5513: Tensor[(40), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(40), uint32], Tensor[(160, 1), uint32]) {
  %180 = @func_5209() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %181 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %182 = cast(%var_5513, dtype="uint32") /* ty=Tensor[(40), uint32] */;
  %183 = cast(meta[relay.Constant][8] /* ty=Tensor[(160, 1), uint32] */, dtype="uint32") /* ty=Tensor[(160, 1), uint32] */;
  %184 = reshape(%182, newshape=[40]) /* ty=Tensor[(40), uint32] */;
  %185 = reshape(%183, newshape=[160]) /* ty=Tensor[(160), uint32] */;
  %186 = @func_5315(%184, %185) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(40), uint32], Tensor[(440), uint32], Tensor[(160), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %187 = %180.0;
  %188 = %181.0;
  %189 = %186.1;
  (%187, %188, %189, %var_5513, meta[relay.Constant][8] /* ty=Tensor[(160, 1), uint32] */)
}

def @func_6876() -> (Tensor[(16, 16, 11), float64], Tensor[(15, 10, 6), bool], Tensor[(10, 44), uint8], Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %190 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 44), uint8] */, dtype="uint8") /* ty=Tensor[(10, 44), uint8] */;
  %191 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 44), uint8] */, dtype="uint8") /* ty=Tensor[(10, 44), uint8] */;
  %192 = reshape(%190, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %193 = reshape(%191, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %194 = @func_1329(%192, %193) /* ty=(Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) */;
  %195 = cast(meta[relay.Constant][10] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %196 = cast(meta[relay.Constant][10] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %197 = reshape(%195, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %198 = reshape(%196, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %199 = @func_1246(%197, %198) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) */;
  %200 = @func_1184() /* ty=Tensor[(16, 16, 11), float64] */;
  %201 = %194.1;
  %202 = %199.0;
  %203 = @func_1966() /* ty=Tensor[(16, 16, 11), float64] */;
  (%200, %201, meta[relay.Constant][9] /* ty=Tensor[(10, 44), uint8] */, %202, meta[relay.Constant][10] /* ty=Tensor[(280), float32] */, %203)
}

def @func_4516(%var_4508: Tensor[(140), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) {
  %204 = @func_3782() /* ty=Tensor[(16, 16, 11), float64] */;
  %205 = cast(%204, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %206 = reshape(%205, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %207 = @func_2614(%206) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */;
  %208 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %209 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %210 = cast(%var_4508, dtype="float32") /* ty=Tensor[(140), float32] */;
  %211 = reshape(%210, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), float32] */;
  %212 = @func_3851() /* ty=Tensor[(16, 16, 11), float64] */;
  %213 = %207.0;
  %214 = %208.0;
  %215 = %209.0;
  %216 = @func_3714() /* ty=Tensor[(16, 16, 11), float64] */;
  %217 = @func_3792(%211) /* ty=Tensor[(7, 5, 4), float32] */;
  (%204, %212, %213, %214, %215, %216, %217, %var_4508)
}

def @func_7888(%var_7882: Tensor[(11, 4, 12), uint64], %var_7883: Tensor[(11, 4, 12), uint64]) -> Tensor[(11, 4, 12), uint64] {
  %218 = cast(%var_7883, dtype="uint64") /* ty=Tensor[(11, 4, 12), uint64] */;
  %219 = shape_of(%var_7882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%var_7882, dtype="uint64") /* ty=Tensor[(11, 4, 12), uint64] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%220, %221) /* ty=Tensor[(11, 4, 12), uint64] */
}

def @func_2924() -> Tensor[(16, 16, 11), float64] {
  %223 = fn () -> Tensor[(16, 16, 11), float64] {
    %222 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %222.0
  };
  %223() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7372() -> (Tensor[(280), float32], uint16) {
  %228 = fn () -> (Tensor[(280), float32], uint16) {
    %224 = @func_2138() /* ty=(Tensor[(280), float32],) */;
    %225 = @func_6744() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], uint16, Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64]) */;
    %226 = %224.0;
    %227 = %225.3;
    (%226, %227)
  };
  %228() /* ty=(Tensor[(280), float32], uint16) */
}

def @func_4212(%var_4182: Tensor[(5, 14, 4), float32], %var_4183: Tensor[(5, 14, 4), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(5, 14, 4), float64], Tensor[(16, 16, 11), float64]) {
  %229 = cast(%var_4182, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %230 = cast(%var_4182, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %231 = reshape(%229, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %232 = reshape(%230, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %233 = @func_1246(%231, %232) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) */;
  %234 = cast(%var_4183, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %235 = shape_of(%var_4182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_4182, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %238 = divide(%236, %237) /* ty=Tensor[(5, 14, 4), float32] */;
  %239 = cast(%238, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
  %240 = %233.0;
  %241 = asinh(%239) /* ty=Tensor[(5, 14, 4), float64] */;
  %242 = @func_953() /* ty=Tensor[(16, 16, 11), float64] */;
  (%240, %241, %242)
}

def @func_7991() -> Tensor[(16, 16, 11), float64] {
  @func_953() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_5035() -> (Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) {
  @func_5033() /* ty=(Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) */
}

def @func_5997(%var_5988: Tensor[(1, 40), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(1, 40), uint32], Tensor[(440), uint32], Tensor[(160), uint32]) {
  %243 = cast(%var_5988, dtype="uint32") /* ty=Tensor[(1, 40), uint32] */;
  %244 = cast(meta[relay.Constant][11] /* ty=Tensor[(440), uint32] */, dtype="uint32") /* ty=Tensor[(440), uint32] */;
  %245 = cast(meta[relay.Constant][12] /* ty=Tensor[(160), uint32] */, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %246 = reshape(%243, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint32] */;
  %247 = reshape(%244, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), uint32] */;
  %248 = reshape(%245, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), uint32] */;
  %249 = @func_4348(%246, %247, %248) /* ty=(Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) */;
  %250 = @func_3826() /* ty=Tensor[(16, 16, 11), float64] */;
  %251 = %249.1;
  (%250, %251, %var_5988, meta[relay.Constant][11] /* ty=Tensor[(440), uint32] */, meta[relay.Constant][12] /* ty=Tensor[(160), uint32] */)
}

def @func_7964() -> Tensor[(16, 16, 11), float64] {
  %252 = @func_3341() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */;
  %252.1
}

def @func_1296(%var_1294: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), uint16], Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32]) {
  @func_1293(%var_1294) /* ty=(Tensor[(16, 16, 11), uint16], Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32]) */
}

def @func_2554(%var_2553: Tensor[(1, 13, 1), float32]) -> Tensor[(1, 13, 1), float32] {
  %254 = fn (%var_2547: Tensor[(1, 13, 1), float32]) -> Tensor[(1, 13, 1), float32] {
    %253 = cast(%var_2547, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
    cosh(%253) /* ty=Tensor[(1, 13, 1), float32] */
  };
  %254(%var_2553) /* ty=Tensor[(1, 13, 1), float32] */
}

def @func_2783() -> (Tensor[(16, 16, 11), float64], Tensor[(60), int16], Tensor[(10, 44), int8]) {
  %269 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(60), int16], Tensor[(10, 44), int8]) {
    %255 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 44), uint8] */, dtype="uint8") /* ty=Tensor[(10, 44), uint8] */;
    %256 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 44), uint8] */, dtype="uint8") /* ty=Tensor[(10, 44), uint8] */;
    %257 = reshape(%255, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
    %258 = reshape(%256, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
    %259 = @func_1329(%257, %258) /* ty=(Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) */;
    %260 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 44), uint8] */, dtype="float32") /* ty=Tensor[(10, 44), float32] */;
    %261 = acos(%260) /* ty=Tensor[(10, 44), float32] */;
    %262 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 44), uint8] */, dtype="int8") /* ty=Tensor[(10, 44), int8] */;
    %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(2), int32] */;
    %264 = cast(%261, dtype="int8") /* ty=Tensor[(10, 44), int8] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %266 = @func_1184() /* ty=Tensor[(16, 16, 11), float64] */;
    %267 = %259.2;
    %268 = right_shift(%264, %265) /* ty=Tensor[(10, 44), int8] */;
    (%266, %267, %268)
  };
  %269() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(60), int16], Tensor[(10, 44), int8]) */
}

def @func_2087(%var_2086: int8) -> Tensor[(13, 5, 9), int8] {
  %272 = fn (%var_2079: int8) -> Tensor[(13, 5, 9), int8] {
    %270 = cast(%var_2079, dtype="int8") /* ty=int8 */;
    %271 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 5, 9), int8] */, dtype="int8") /* ty=Tensor[(13, 5, 9), int8] */;
    bitwise_or(%270, %271) /* ty=Tensor[(13, 5, 9), int8] */
  };
  %272(%var_2086) /* ty=Tensor[(13, 5, 9), int8] */
}

def @func_3211() -> Tensor[(16, 16, 11), float64] {
  %273 = fn () -> Tensor[(16, 16, 11), float64] {
    @func_2676() /* ty=Tensor[(16, 16, 11), float64] */
  };
  %273() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7285(%var_7282: Tensor[(12, 8, 8), float32]) -> Tensor[(12, 8, 8), float32] {
  %274 = cast(%var_7282, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  acosh(%274) /* ty=Tensor[(12, 8, 8), float32] */
}

def @func_3852() -> Tensor[(16, 16, 11), float64] {
  %275 = fn () -> Tensor[(16, 16, 11), float64] {
    @func_1424() /* ty=Tensor[(16, 16, 11), float64] */
  };
  %275() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_859() -> Tensor[(16, 16, 11), float64] {
  %276 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %276.0
}

def @func_2678() -> Tensor[(16, 16, 11), float64] {
  @func_2676() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_1426() -> Tensor[(16, 16, 11), float64] {
  @func_1424() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_6126() -> Tensor[(16, 16, 11), float64] {
  @func_6124() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_3498(%var_3462: uint32, %var_3463: Tensor[(12, 11, 8), uint32], %var_3477: Tensor[(54), int64]) -> (Tensor[(12, 11, 8), uint32], Tensor[(6, 9, 1), int64], Tensor[(54), int64]) {
  %277 = cast(%var_3462, dtype="uint32") /* ty=uint32 */;
  %278 = cast(%var_3463, dtype="uint32") /* ty=Tensor[(12, 11, 8), uint32] */;
  %279 = cast(%var_3462, dtype="int64") /* ty=int64 */;
  %280 = cast(%var_3477, dtype="int64") /* ty=Tensor[(54), int64] */;
  %281 = reshape(%279, newshape=[]) /* ty=int64 */;
  %282 = reshape(%280, newshape=[6, 9, 1]) /* ty=Tensor[(6, 9, 1), int64] */;
  %283 = @func_814(%281, %282) /* ty=(Tensor[(6, 9, 1), int64],) */;
  %284 = left_shift(%277, %278) /* ty=Tensor[(12, 11, 8), uint32] */;
  %285 = %283.0;
  (%284, %285, %var_3477)
}

def @func_4660(%var_4657: Tensor[(8, 16, 4), bool], %var_4658: Tensor[(8, 16, 4), bool], %var_4659: Tensor[(280), float32]) -> (Tensor[(8, 16, 4), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  @func_4655(%var_4657, %var_4658, %var_4659) /* ty=(Tensor[(8, 16, 4), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_3166(%var_3164: Tensor[(10, 8, 6), float32]) -> (Tensor[(10, 8, 6), float64], Tensor[(210, 2), uint32], Tensor[(10, 8, 6), bool]) {
  @func_3163(%var_3164) /* ty=(Tensor[(10, 8, 6), float64], Tensor[(210, 2), uint32], Tensor[(10, 8, 6), bool]) */
}

def @func_5232(%var_5230: Tensor[(16, 16, 11), uint16]) -> (Tensor[(16, 16, 11), bool],) {
  @func_5229(%var_5230) /* ty=(Tensor[(16, 16, 11), bool],) */
}

def @func_5033() -> (Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) {
  %286 = @func_3714() /* ty=Tensor[(16, 16, 11), float64] */;
  %287 = cast(%286, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %288 = reshape(%287, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %289 = @func_1293(%288) /* ty=(Tensor[(16, 16, 11), uint16], Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32]) */;
  %290 = @func_4316() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %291 = @func_2497() /* ty=Tensor[(280), float32] */;
  %292 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
  %293 = %289.0;
  %294 = %290.0;
  (%291, %292, %286, %293, %294)
}

def @func_1821(%var_1819: Tensor[(420), uint32]) -> (Tensor[(4, 12, 2), float64], Tensor[(16, 16, 11), float64], Tensor[(420), uint32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  @func_1818(%var_1819) /* ty=(Tensor[(4, 12, 2), float64], Tensor[(16, 16, 11), float64], Tensor[(420), uint32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_480() -> (Tensor[(16, 16, 11), float64],) {
  @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_3441(%var_3438: Tensor[(3, 11, 5), float32], %var_3439: Tensor[(3, 11, 5), float32], %var_3440: Tensor[(3, 11, 5), float32]) -> (Tensor[(3, 11, 5), float32], Tensor[(3, 11, 5), uint64]) {
  %305 = fn (%var_3425: Tensor[(3, 11, 5), float32], %var_3426: Tensor[(3, 11, 5), float32], %var_3431: Tensor[(3, 11, 5), float32]) -> (Tensor[(3, 11, 5), float32], Tensor[(3, 11, 5), uint64]) {
    %295 = cast(%var_3426, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
    %296 = shape_of(%var_3425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %297 = cast(%var_3425, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
    %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %299 = cast(%var_3431, dtype="uint64") /* ty=Tensor[(3, 11, 5), uint64] */;
    %300 = shape_of(%var_3425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %301 = cast(%var_3425, dtype="uint64") /* ty=Tensor[(3, 11, 5), uint64] */;
    %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %303 = floor_divide(%297, %298) /* ty=Tensor[(3, 11, 5), float32] */;
    %304 = multiply(%301, %302) /* ty=Tensor[(3, 11, 5), uint64] */;
    (%303, %304)
  };
  %305(%var_3438, %var_3439, %var_3440) /* ty=(Tensor[(3, 11, 5), float32], Tensor[(3, 11, 5), uint64]) */
}

def @func_3550() -> Tensor[(16, 16, 11), float32] {
  @func_3548() /* ty=Tensor[(16, 16, 11), float32] */
}

def @func_5519(%var_5517: Tensor[(40), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(40), uint32], Tensor[(160, 1), uint32]) {
  @func_5516(%var_5517) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(40), uint32], Tensor[(160, 1), uint32]) */
}

def @func_3913(%var_3912: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %319 = fn (%var_3886: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
    %306 = @func_2455() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %307 = %306.0;
    %308 = cast(%var_3886, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
    %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%307, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %312 = cast(%var_3886, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %313 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %314 = cast(%307, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %316 = less(%310, %311) /* ty=Tensor[(16, 16, 11), bool] */;
    %317 = power(%314, %315) /* ty=Tensor[(16, 16, 11), float64] */;
    %318 = @func_2497() /* ty=Tensor[(280), float32] */;
    (%316, %317, %318)
  };
  %319(%var_3912) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */
}

def @func_1332(%var_1330: Tensor[(8, 5, 11), uint8], %var_1331: Tensor[(8, 5, 11), uint8]) -> (Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) {
  %331 = fn (%var_1313: Tensor[(8, 5, 11), uint8], %var_1314: Tensor[(8, 5, 11), uint8]) -> (Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) {
    %320 = cast(%var_1314, dtype="uint8") /* ty=Tensor[(8, 5, 11), uint8] */;
    %321 = shape_of(%var_1313, dtype="int32") /* ty=Tensor[(3), int32] */;
    %322 = cast(%var_1313, dtype="uint8") /* ty=Tensor[(8, 5, 11), uint8] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %324 = cast(meta[relay.Constant][15] /* ty=Tensor[(60), int16] */, dtype="int16") /* ty=Tensor[(60), int16] */;
    %325 = cast(meta[relay.Constant][16] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %326 = reshape(%324, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int16] */;
    %327 = reshape(%325, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %328 = @func_415(%326, %327) /* ty=(Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
    %329 = bitwise_xor(%322, %323) /* ty=Tensor[(8, 5, 11), uint8] */;
    %330 = %328.0;
    (%329, %330, meta[relay.Constant][15] /* ty=Tensor[(60), int16] */, meta[relay.Constant][16] /* ty=Tensor[(280), float32] */)
  };
  %331(%var_1330, %var_1331) /* ty=(Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) */
}

def @func_672(%var_645: Tensor[(5, 56), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) {
  %332 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %333 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %334 = %332.0;
  %335 = cast(%334, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %336 = cast(%var_645, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
  %337 = reshape(%335, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %338 = reshape(%336, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %339 = @func_313(%337, %338) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
  %340 = %333.0;
  %341 = %339.0;
  (%334, %340, %341, %var_645)
}

def @func_6218() -> Tensor[(16, 16, 11), float64] {
  @func_1498() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7416() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  %348 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
    %342 = @func_5679() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %343 = @func_3958() /* ty=(Tensor[(16, 16, 11), float32],) */;
    %344 = %343.0;
    %345 = cast(%344, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
    %346 = %342.0;
    %347 = rsqrt(%345) /* ty=Tensor[(16, 16, 11), float32] */;
    (%346, %347)
  };
  %348() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */
}

def @func_5736() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %354 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %349 = @func_5679() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %350 = @func_4703() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %351 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
    %352 = %349.0;
    %353 = %350.0;
    (%351, %352, %353)
  };
  %354() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_9294() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  @func_9292() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_2676() -> Tensor[(16, 16, 11), float64] {
  %355 = @func_2519() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %355.0
}

def @func_3795(%var_3793: Tensor[(7, 5, 4), float32]) -> Tensor[(7, 5, 4), float32] {
  @func_3792(%var_3793) /* ty=Tensor[(7, 5, 4), float32] */
}

def @func_3827() -> Tensor[(16, 16, 11), float64] {
  %357 = fn () -> Tensor[(16, 16, 11), float64] {
    %356 = @func_3673() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %356.0
  };
  %357() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_9104(%var_9097: Tensor[(10, 4, 16), float32]) -> (Tensor[(10, 4, 16), float32],) {
  %358 = cast(%var_9097, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %359 = rsqrt(%358) /* ty=Tensor[(10, 4, 16), float32] */;
  (%359,)
}

def @func_7018() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  @func_7016() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_7016() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %360 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %361 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %362 = @func_5652() /* ty=Tensor[(16, 16, 11), float64] */;
  %363 = %360.0;
  %364 = %361.0;
  (%362, %363, %364)
}

def @func_5573() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  @func_5571() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */
}

def @func_550() -> (Tensor[(16, 16, 11), float64],) {
  %365 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %366 = %365.0;
  (%366,)
}

def @func_2109(%var_2107: int64, %var_2108: Tensor[(1, 15, 15), int64]) -> (Tensor[(1, 15, 15), int64],) {
  %370 = fn (%var_2098: int64, %var_2099: Tensor[(1, 15, 15), int64]) -> (Tensor[(1, 15, 15), int64],) {
    %367 = cast(%var_2098, dtype="int64") /* ty=int64 */;
    %368 = cast(%var_2099, dtype="int64") /* ty=Tensor[(1, 15, 15), int64] */;
    %369 = maximum(%367, %368) /* ty=Tensor[(1, 15, 15), int64] */;
    (%369,)
  };
  %370(%var_2107, %var_2108) /* ty=(Tensor[(1, 15, 15), int64],) */
}

def @func_2045() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %375 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %371 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %372 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %373 = %371.0;
    %374 = %372.0;
    (%373, %374)
  };
  %375() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_3567() -> (Tensor[(16, 16, 11), float64],) {
  @func_3565() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_5931() -> Tensor[(16, 16, 11), float64] {
  %376 = fn () -> Tensor[(16, 16, 11), float64] {
    @func_2676() /* ty=Tensor[(16, 16, 11), float64] */
  };
  %376() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_9870(%var_9868: Tensor[(13, 15, 9), float64], %var_9869: Tensor[(280), float32]) -> (Tensor[(13, 15, 9), float64], Tensor[(10, 28), float64], Tensor[(280), float32]) {
  %386 = fn (%var_9849: Tensor[(13, 15, 9), float64], %var_9861: Tensor[(280), float32]) -> (Tensor[(13, 15, 9), float64], Tensor[(10, 28), float64], Tensor[(280), float32]) {
    %377 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %378 = shape_of(%var_9849, dtype="int32") /* ty=Tensor[(3), int32] */;
    %379 = cast(%var_9849, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %381 = cast(%var_9861, dtype="float32") /* ty=Tensor[(280), float32] */;
    %382 = reshape(%381, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
    %383 = @func_7233(%382) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), float64]) */;
    %384 = maximum(%379, %380) /* ty=Tensor[(13, 15, 9), float64] */;
    %385 = %383.2;
    (%384, %385, %var_9861)
  };
  %386(%var_9868, %var_9869) /* ty=(Tensor[(13, 15, 9), float64], Tensor[(10, 28), float64], Tensor[(280), float32]) */
}

def @func_7551(%var_7550: Tensor[(90), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64], Tensor[(3, 2, 15), float32], Tensor[(90), float32], Tensor[(98), uint32]) {
  %395 = fn (%var_7536: Tensor[(90), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64], Tensor[(3, 2, 15), float32], Tensor[(90), float32], Tensor[(98), uint32]) {
    %387 = cast(%var_7536, dtype="float32") /* ty=Tensor[(90), float32] */;
    %388 = cast(meta[relay.Constant][18] /* ty=Tensor[(98), uint32] */, dtype="uint32") /* ty=Tensor[(98), uint32] */;
    %389 = reshape(%387, newshape=[3, 2, 15]) /* ty=Tensor[(3, 2, 15), float32] */;
    %390 = reshape(%388, newshape=[98]) /* ty=Tensor[(98), uint32] */;
    %391 = @func_3771(%389, %390) /* ty=(Tensor[(3, 2, 15), float32], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) */;
    %392 = @func_5652() /* ty=Tensor[(16, 16, 11), float64] */;
    %393 = @func_1205() /* ty=Tensor[(4, 12, 2), float64] */;
    %394 = %391.0;
    (%392, %393, %394, %var_7536, meta[relay.Constant][18] /* ty=Tensor[(98), uint32] */)
  };
  %395(%var_7550) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64], Tensor[(3, 2, 15), float32], Tensor[(90), float32], Tensor[(98), uint32]) */
}

def @func_4705() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  @func_4703() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_3792(%var_3785: Tensor[(7, 5, 4), float32]) -> Tensor[(7, 5, 4), float32] {
  %396 = cast(%var_3785, dtype="float32") /* ty=Tensor[(7, 5, 4), float32] */;
  cos(%396) /* ty=Tensor[(7, 5, 4), float32] */
}

def @func_4353(%var_4350: Tensor[(1, 8, 5), uint32], %var_4351: Tensor[(11, 8, 5), uint32], %var_4352: Tensor[(4, 8, 5), uint32]) -> (Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) {
  @func_4348(%var_4350, %var_4351, %var_4352) /* ty=(Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) */
}

def @func_817(%var_815: int64, %var_816: Tensor[(6, 9, 1), int64]) -> (Tensor[(6, 9, 1), int64],) {
  %400 = fn (%var_807: int64, %var_808: Tensor[(6, 9, 1), int64]) -> (Tensor[(6, 9, 1), int64],) {
    %397 = cast(%var_807, dtype="int64") /* ty=int64 */;
    %398 = cast(%var_808, dtype="int64") /* ty=Tensor[(6, 9, 1), int64] */;
    %399 = maximum(%397, %398) /* ty=Tensor[(6, 9, 1), int64] */;
    (%399,)
  };
  %400(%var_815, %var_816) /* ty=(Tensor[(6, 9, 1), int64],) */
}

def @func_5624(%var_5622: Tensor[(14, 16, 7), float32], %var_5623: Tensor[(2816), float64]) -> (Tensor[(280), float32], Tensor[(2816), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(14, 16, 7), float32], Tensor[(16, 16, 11), float32]) {
  %416 = fn (%var_5585: Tensor[(14, 16, 7), float32], %var_5592: Tensor[(2816), float64]) -> (Tensor[(280), float32], Tensor[(2816), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(14, 16, 7), float32], Tensor[(16, 16, 11), float32]) {
    %401 = cast(%var_5592, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %402 = reshape(%401, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
    %403 = @func_1293(%402) /* ty=(Tensor[(16, 16, 11), uint16], Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32]) */;
    %404 = %403.1;
    %405 = cast(%404, dtype="float32") /* ty=Tensor[(280), float32] */;
    %406 = reshape(%405, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
    %407 = @func_2895(%406) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(225), int64], Tensor[(440), uint8]) */;
    %408 = cast(%var_5585, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
    %409 = acosh(%408) /* ty=Tensor[(14, 16, 7), float32] */;
    %410 = cast(%409, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
    %411 = @func_3958() /* ty=(Tensor[(16, 16, 11), float32],) */;
    %412 = @func_2296() /* ty=Tensor[(16, 16, 11), float64] */;
    %413 = %407.1;
    %414 = sqrt(%410) /* ty=Tensor[(14, 16, 7), float32] */;
    %415 = %411.0;
    (%404, %var_5592, %412, %413, %414, %415)
  };
  %416(%var_5622, %var_5623) /* ty=(Tensor[(280), float32], Tensor[(2816), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(14, 16, 7), float32], Tensor[(16, 16, 11), float32]) */
}

def @func_7817(%var_7815: Tensor[(480), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(210, 2), uint32], Tensor[(480), float32]) {
  @func_7814(%var_7815) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(210, 2), uint32], Tensor[(480), float32]) */
}

def @func_7921() -> (Tensor[(16, 16, 11), float64], Tensor[(528), float32], Tensor[(16), float64], Tensor[(528), float32], Tensor[(16, 16, 11), float32]) {
  %417 = cast(meta[relay.Constant][19] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %418 = cast(meta[relay.Constant][20] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %419 = reshape(%417, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
  %420 = reshape(%418, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %421 = @func_6808(%419, %420) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */;
  %422 = @func_2235() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %423 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
  %424 = %421.1;
  %425 = %422.0;
  (%423, %424, meta[relay.Constant][19] /* ty=Tensor[(16), float64] */, meta[relay.Constant][20] /* ty=Tensor[(528), float32] */, %425)
}

def @func_7993() -> Tensor[(16, 16, 11), float64] {
  @func_7991() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7288(%var_7286: Tensor[(12, 8, 8), float32]) -> Tensor[(12, 8, 8), float32] {
  @func_7285(%var_7286) /* ty=Tensor[(12, 8, 8), float32] */
}

def @func_8344() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  @func_8342() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */
}

def @func_3782() -> Tensor[(16, 16, 11), float64] {
  @func_2296() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_9361() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float64]) {
  %437 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float64]) {
    %426 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
    %427 = cast(%426, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %428 = reshape(%427, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
    %429 = @func_2614(%428) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */;
    %430 = %429.1;
    %431 = cast(%430, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %432 = reshape(%431, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
    %433 = @func_3911(%432) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
    %434 = %433.2;
    %435 = cast(%434, dtype="float64") /* ty=Tensor[(280), float64] */;
    %436 = sqrt(%435) /* ty=Tensor[(280), float64] */;
    (%426, %430, %436)
  };
  %437() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float64]) */
}

def @func_6397() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %442 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %438 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %439 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
    %440 = %438.0;
    %441 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
    (%439, %440, %441)
  };
  %442() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_1785(%var_1783: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  @func_1782(%var_1783) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */
}

def @func_7055(%var_7053: Tensor[(15, 4, 5), float32], %var_7054: Tensor[(15, 4, 5), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(15, 4, 5), int8]) {
  %454 = fn (%var_7032: Tensor[(15, 4, 5), float32], %var_7033: Tensor[(15, 4, 5), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(15, 4, 5), int8]) {
    %443 = cast(%var_7033, dtype="bool") /* ty=Tensor[(15, 4, 5), bool] */;
    %444 = shape_of(%var_7032, dtype="int32") /* ty=Tensor[(3), int32] */;
    %445 = cast(%var_7032, dtype="bool") /* ty=Tensor[(15, 4, 5), bool] */;
    %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %447 = not_equal(%445, %446) /* ty=Tensor[(15, 4, 5), bool] */;
    %448 = cast(%447, dtype="int8") /* ty=Tensor[(15, 4, 5), int8] */;
    %449 = shape_of(%var_7032, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%var_7032, dtype="int8") /* ty=Tensor[(15, 4, 5), int8] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %452 = @func_6450() /* ty=Tensor[(16, 16, 11), float64] */;
    %453 = left_shift(%450, %451) /* ty=Tensor[(15, 4, 5), int8] */;
    (%452, %453)
  };
  %454(%var_7053, %var_7054) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(15, 4, 5), int8]) */
}

def @func_3959() -> (Tensor[(16, 16, 11), float32],) {
  %457 = fn () -> (Tensor[(16, 16, 11), float32],) {
    %455 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
    %456 = %455.0;
    (%456,)
  };
  %457() /* ty=(Tensor[(16, 16, 11), float32],) */
}

def @func_584(%var_582: Tensor[(12, 15, 10), float32], %var_583: Tensor[(280), float32]) -> (Tensor[(12, 15, 10), float32], Tensor[(12, 15, 10), float32], Tensor[(16, 16, 11), float64], Tensor[(2816), float64], Tensor[(280), float32]) {
  %468 = fn (%var_562: Tensor[(12, 15, 10), float32], %var_572: Tensor[(280), float32]) -> (Tensor[(12, 15, 10), float32], Tensor[(12, 15, 10), float32], Tensor[(16, 16, 11), float64], Tensor[(2816), float64], Tensor[(280), float32]) {
    %458 = cast(%var_562, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
    %459 = cast(%var_562, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
    %460 = cast(meta[relay.Constant][21] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %461 = cast(%var_572, dtype="float32") /* ty=Tensor[(280), float32] */;
    %462 = reshape(%460, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
    %463 = reshape(%461, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %464 = @func_313(%462, %463) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
    %465 = cosh(%458) /* ty=Tensor[(12, 15, 10), float32] */;
    %466 = rsqrt(%459) /* ty=Tensor[(12, 15, 10), float32] */;
    %467 = %464.0;
    (%465, %466, %467, meta[relay.Constant][21] /* ty=Tensor[(2816), float64] */, %var_572)
  };
  %468(%var_582, %var_583) /* ty=(Tensor[(12, 15, 10), float32], Tensor[(12, 15, 10), float32], Tensor[(16, 16, 11), float64], Tensor[(2816), float64], Tensor[(280), float32]) */
}

def @func_1302() -> (Tensor[(16, 16, 11), float64],) {
  %469 = @func_953() /* ty=Tensor[(16, 16, 11), float64] */;
  (%469,)
}

def @func_52(%var_51: Tensor[(7, 4, 10), float32]) -> (Tensor[(7, 4, 10), float32],) {
  %472 = fn (%var_41: Tensor[(7, 4, 10), float32]) -> (Tensor[(7, 4, 10), float32],) {
    %470 = cast(%var_41, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
    %471 = atanh(%470) /* ty=Tensor[(7, 4, 10), float32] */;
    (%471,)
  };
  %472(%var_51) /* ty=(Tensor[(7, 4, 10), float32],) */
}

def @func_2519() -> (Tensor[(16, 16, 11), float64],) {
  %473 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  (%473,)
}

def @func_3424() -> Tensor[(16, 16, 11), float64] {
  @func_3422() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_5438(%var_5437: Tensor[(3, 11, 16), float32]) -> (Tensor[(3, 11, 16), float32], Tensor[(3, 11, 16), float32]) {
  %481 = fn (%var_5422: Tensor[(3, 11, 16), float32]) -> (Tensor[(3, 11, 16), float32], Tensor[(3, 11, 16), float32]) {
    %474 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 11, 16), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
    %475 = shape_of(%var_5422, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%var_5422, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %478 = cast(%var_5422, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
    %479 = floor_divide(%476, %477) /* ty=Tensor[(3, 11, 16), float32] */;
    %480 = erf(%478) /* ty=Tensor[(3, 11, 16), float32] */;
    (%479, %480)
  };
  %481(%var_5437) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(3, 11, 16), float32]) */
}

def @func_2455() -> (Tensor[(16, 16, 11), float64],) {
  %482 = @func_1966() /* ty=Tensor[(16, 16, 11), float64] */;
  (%482,)
}

def @func_3771(%var_3764: Tensor[(3, 2, 15), float32], %var_3769: Tensor[(98), uint32]) -> (Tensor[(3, 2, 15), float32], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) {
  %483 = cast(%var_3764, dtype="float32") /* ty=Tensor[(3, 2, 15), float32] */;
  %484 = cast(%var_3769, dtype="uint32") /* ty=Tensor[(98), uint32] */;
  %485 = reshape(%484, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), uint32] */;
  %486 = @func_2993(%485) /* ty=(Tensor[(2, 7, 7), uint32], Tensor[(2, 7, 7), float32]) */;
  %487 = atan(%483) /* ty=Tensor[(3, 2, 15), float32] */;
  %488 = %486.1;
  (%487, %488, %var_3769)
}

def @func_1913() -> (Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %512 = fn () -> (Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %489 = @func_953() /* ty=Tensor[(16, 16, 11), float64] */;
    %490 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
    %491 = %490.0;
    %492 = cast(%491, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
    %493 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
    %494 = cast(%489, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
    %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %496 = cast(meta[relay.Constant][23] /* ty=Tensor[(210, 2), uint32] */, dtype="uint32") /* ty=Tensor[(210, 2), uint32] */;
    %497 = reshape(%496, newshape=[420]) /* ty=Tensor[(420), uint32] */;
    %498 = @func_1818(%497) /* ty=(Tensor[(4, 12, 2), float64], Tensor[(16, 16, 11), float64], Tensor[(420), uint32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */;
    %499 = @func_1184() /* ty=Tensor[(16, 16, 11), float64] */;
    %500 = cast(%489, dtype="uint32") /* ty=Tensor[(16, 16, 11), uint32] */;
    %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
    %502 = cast(%499, dtype="uint32") /* ty=Tensor[(16, 16, 11), uint32] */;
    %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %504 = cast(%489, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %505 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %506 = floor_mod(%494, %495) /* ty=Tensor[(16, 16, 11), float32] */;
    %507 = %498.0;
    %508 = bitwise_xor(%502, %503) /* ty=Tensor[(16, 16, 11), uint32] */;
    %509 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
    %510 = log10(%504) /* ty=Tensor[(16, 16, 11), float64] */;
    %511 = %505.0;
    (%506, %507, meta[relay.Constant][23] /* ty=Tensor[(210, 2), uint32] */, %508, %509, %510, %511)
  };
  %512() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_9427(%var_9420: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], uint16, uint16, Tensor[(14, 5, 4), float32], Tensor[(280), float32]) {
  %513 = @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %514 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %515 = reshape(%514, newshape=[]) /* ty=uint16 */;
  %516 = @func_4120(%515) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(1, 4, 10), uint16], uint16) */;
  %517 = cast(%var_9420, dtype="float32") /* ty=Tensor[(280), float32] */;
  %518 = reshape(%517, newshape=[14, 5, 4]) /* ty=Tensor[(14, 5, 4), float32] */;
  %519 = %513.0;
  %520 = %516.2;
  %521 = @func_8118(%518) /* ty=Tensor[(14, 5, 4), float32] */;
  (%519, %520, meta[relay.Constant][24] /* ty=uint16 */, %521, %var_9420)
}

def @func_1293(%var_1282: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), uint16], Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32]) {
  %522 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %523 = %522.0;
  %524 = cast(%var_1282, dtype="uint16") /* ty=Tensor[(16, 16, 11), uint16] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%523, dtype="uint16") /* ty=Tensor[(16, 16, 11), uint16] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %528 = cast(meta[relay.Constant][25] /* ty=Tensor[(60), int16] */, dtype="int16") /* ty=Tensor[(60), int16] */;
  %529 = cast(meta[relay.Constant][26] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %530 = reshape(%528, newshape=[60]) /* ty=Tensor[(60), int16] */;
  %531 = reshape(%529, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %532 = @func_1022(%530, %531) /* ty=(Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */;
  %533 = multiply(%526, %527) /* ty=Tensor[(16, 16, 11), uint16] */;
  %534 = %532.2;
  (%533, %534, meta[relay.Constant][25] /* ty=Tensor[(60), int16] */, meta[relay.Constant][26] /* ty=Tensor[(280), float32] */)
}

def @func_478() -> (Tensor[(16, 16, 11), float64],) {
  %535 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %536 = %535.0;
  (%536,)
}

def @func_2521() -> (Tensor[(16, 16, 11), float64],) {
  @func_2519() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_4744(%var_4722: Tensor[(16, 16, 11), float64]) -> Tensor[(16, 16, 11), bool] {
  %537 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %538 = %537.1;
  %539 = cast(%var_4722, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%538, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%541, %542) /* ty=Tensor[(16, 16, 11), bool] */
}

def @func_4071() -> (Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) {
  %543 = cast(meta[relay.Constant][27] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %544 = reshape(%543, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %545 = @func_1613(%544) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(140, 2), float32]) */;
  %546 = @func_1966() /* ty=Tensor[(16, 16, 11), float64] */;
  %547 = %545.3;
  (%546, %547, meta[relay.Constant][27] /* ty=Tensor[(280), float32] */)
}

def @func_4348(%var_4328: Tensor[(1, 8, 5), uint32], %var_4329: Tensor[(11, 8, 5), uint32], %var_4343: Tensor[(4, 8, 5), uint32]) -> (Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) {
  %548 = cast(%var_4328, dtype="uint32") /* ty=Tensor[(1, 8, 5), uint32] */;
  %549 = cast(%var_4329, dtype="uint32") /* ty=Tensor[(11, 8, 5), uint32] */;
  %550 = cast(%var_4328, dtype="uint64") /* ty=Tensor[(1, 8, 5), uint64] */;
  %551 = cast(%var_4343, dtype="uint64") /* ty=Tensor[(4, 8, 5), uint64] */;
  %552 = maximum(%548, %549) /* ty=Tensor[(11, 8, 5), uint32] */;
  %553 = add(%550, %551) /* ty=Tensor[(4, 8, 5), uint64] */;
  (%552, %553)
}

def @func_8860() -> Tensor[(16, 16, 11), float64] {
  %555 = fn () -> Tensor[(16, 16, 11), float64] {
    %554 = @func_1912() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %554.6
  };
  %555() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_6597() -> Tensor[(16, 16, 11), float64] {
  %556 = fn () -> Tensor[(16, 16, 11), float64] {
    @func_3782() /* ty=Tensor[(16, 16, 11), float64] */
  };
  %556() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7966() -> Tensor[(16, 16, 11), float64] {
  @func_7964() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_9635() -> (Tensor[(2, 2, 2), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %562 = fn () -> (Tensor[(2, 2, 2), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %557 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 2, 2), float32] */;
    %558 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %559 = atanh(%557) /* ty=Tensor[(2, 2, 2), float32] */;
    %560 = @func_2296() /* ty=Tensor[(16, 16, 11), float64] */;
    %561 = %558.0;
    (%559, %560, %561)
  };
  %562() /* ty=(Tensor[(2, 2, 2), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_2445(%var_2401: Tensor[(440), uint8]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(440), uint8], Tensor[(225), int64], Tensor[(1, 15, 15), bool], Tensor[(16, 16, 11), float64]) {
  %563 = cast(%var_2401, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %564 = cast(%var_2401, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %565 = reshape(%563, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %566 = reshape(%564, newshape=[8, 5, 11]) /* ty=Tensor[(8, 5, 11), uint8] */;
  %567 = @func_1329(%565, %566) /* ty=(Tensor[(8, 5, 11), uint8], Tensor[(15, 10, 6), bool], Tensor[(60), int16], Tensor[(280), float32]) */;
  %568 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %569 = cast(meta[relay.Constant][29] /* ty=Tensor[(225), int64] */, dtype="int64") /* ty=Tensor[(225), int64] */;
  %570 = reshape(%568, newshape=[]) /* ty=int64 */;
  %571 = reshape(%569, newshape=[1, 15, 15]) /* ty=Tensor[(1, 15, 15), int64] */;
  %572 = @func_2106(%570, %571) /* ty=(Tensor[(1, 15, 15), int64],) */;
  %573 = %572.0;
  %574 = cast(10 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %575 = cast(%573, dtype="bool") /* ty=Tensor[(1, 15, 15), bool] */;
  %576 = @func_1302() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %577 = @func_953() /* ty=Tensor[(16, 16, 11), float64] */;
  %578 = %567.3;
  %579 = equal(%574, %575) /* ty=Tensor[(1, 15, 15), bool] */;
  %580 = %576.0;
  (%577, %578, %var_2401, meta[relay.Constant][29] /* ty=Tensor[(225), int64] */, %579, %580)
}

def @func_5211() -> (Tensor[(16, 16, 11), float64],) {
  @func_5209() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_5182() -> (Tensor[(16, 16, 11), float32],) {
  %581 = @func_3958() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %582 = %581.0;
  (%582,)
}

def @func_5880(%var_5877: Tensor[(4, 4, 3), uint16], %var_5878: Tensor[(4, 4, 3), uint16], %var_5879: Tensor[(4, 4, 3), uint16]) -> (Tensor[(4, 4, 3), float32],) {
  %593 = fn (%var_5846: Tensor[(4, 4, 3), uint16], %var_5847: Tensor[(4, 4, 3), uint16], %var_5861: Tensor[(4, 4, 3), uint16]) -> (Tensor[(4, 4, 3), float32],) {
    %583 = cast(%var_5847, dtype="uint16") /* ty=Tensor[(4, 4, 3), uint16] */;
    %584 = shape_of(%var_5846, dtype="int32") /* ty=Tensor[(3), int32] */;
    %585 = cast(%var_5846, dtype="uint16") /* ty=Tensor[(4, 4, 3), uint16] */;
    %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %587 = logical_xor(%585, %586) /* ty=Tensor[(4, 4, 3), uint16] */;
    %588 = cast(%var_5861, dtype="float32") /* ty=Tensor[(4, 4, 3), float32] */;
    %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
    %590 = cast(%587, dtype="float32") /* ty=Tensor[(4, 4, 3), float32] */;
    %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %592 = multiply(%590, %591) /* ty=Tensor[(4, 4, 3), float32] */;
    (%592,)
  };
  %593(%var_5877, %var_5878, %var_5879) /* ty=(Tensor[(4, 4, 3), float32],) */
}

def @func_954() -> Tensor[(16, 16, 11), float64] {
  %595 = fn () -> Tensor[(16, 16, 11), float64] {
    %594 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %594.0
  };
  %595() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_1178() -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_2616(%var_2615: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) {
  %603 = fn (%var_2576: Tensor[(16, 16, 11), float64]) -> (Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) {
    %596 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
    %597 = cast(%var_2576, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
    %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%596, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %601 = less_equal(%599, %600) /* ty=Tensor[(16, 16, 11), bool] */;
    %602 = @func_1751() /* ty=Tensor[(16, 16, 11), float64] */;
    (%601, %602)
  };
  %603(%var_2615) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */
}

def @func_6283() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(280), float32]) {
  %610 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(280), float32]) {
    %604 = @func_1302() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %605 = @func_5182() /* ty=(Tensor[(16, 16, 11), float32],) */;
    %606 = @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
    %607 = %604.0;
    %608 = %605.0;
    %609 = %606.2;
    (%607, %608, %609)
  };
  %610() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(280), float32]) */
}

def @func_6878() -> (Tensor[(16, 16, 11), float64], Tensor[(15, 10, 6), bool], Tensor[(10, 44), uint8], Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  @func_6876() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(15, 10, 6), bool], Tensor[(10, 44), uint8], Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_8541() -> (Tensor[(280), float32],) {
  %611 = @func_2138() /* ty=(Tensor[(280), float32],) */;
  %612 = %611.0;
  (%612,)
}

def @func_3565() -> (Tensor[(16, 16, 11), float64],) {
  %613 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  (%613,)
}

def @func_7745() -> (Tensor[(14, 11, 4), uint64],) {
  %619 = fn () -> (Tensor[(14, 11, 4), uint64],) {
    %614 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 11, 4), uint64] */, dtype="uint64") /* ty=Tensor[(14, 11, 4), uint64] */;
    %615 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(14, 11, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %616 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 11, 4), uint64] */, dtype="uint64") /* ty=Tensor[(14, 11, 4), uint64] */;
    %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %618 = minimum(%616, %617) /* ty=Tensor[(14, 11, 4), uint64] */;
    (%618,)
  };
  %619() /* ty=(Tensor[(14, 11, 4), uint64],) */
}

def @func_2895(%var_2884: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(225), int64], Tensor[(440), uint8]) {
  %620 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %621 = cast(%var_2884, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %622 = cast(%var_2884, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %623 = reshape(%621, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %624 = reshape(%622, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
  %625 = @func_1246(%623, %624) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(1, 60), int16], Tensor[(10, 28), float32]) */;
  %626 = %625.3;
  %627 = cast(%626, dtype="bool") /* ty=Tensor[(10, 28), bool] */;
  %628 = shape_of(%var_2884, dtype="int32") /* ty=Tensor[(2), int32] */;
  %629 = cast(%var_2884, dtype="bool") /* ty=Tensor[(10, 28), bool] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %631 = cast(meta[relay.Constant][32] /* ty=Tensor[(440), uint8] */, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %632 = reshape(%631, newshape=[440]) /* ty=Tensor[(440), uint8] */;
  %633 = @func_2445(%632) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(440), uint8], Tensor[(225), int64], Tensor[(1, 15, 15), bool], Tensor[(16, 16, 11), float64]) */;
  %634 = %620.0;
  %635 = greater(%629, %630) /* ty=Tensor[(10, 28), bool] */;
  %636 = %633.3;
  (%634, %635, %636, meta[relay.Constant][32] /* ty=Tensor[(440), uint8] */)
}

def @func_8120(%var_8119: Tensor[(14, 5, 4), float32]) -> Tensor[(14, 5, 4), float32] {
  %638 = fn (%var_8114: Tensor[(14, 5, 4), float32]) -> Tensor[(14, 5, 4), float32] {
    %637 = cast(%var_8114, dtype="float32") /* ty=Tensor[(14, 5, 4), float32] */;
    atanh(%637) /* ty=Tensor[(14, 5, 4), float32] */
  };
  %638(%var_8119) /* ty=Tensor[(14, 5, 4), float32] */
}

def @main(%var_9913: Tensor[(15, 1, 10), int32], %var_9914: Tensor[(15, 6, 10), int32]) -> Tensor[(15, 6, 10), float32] {
  %639 = cast(%var_9913, dtype="int32") /* ty=Tensor[(15, 1, 10), int32] */;
  %640 = cast(%var_9914, dtype="int32") /* ty=Tensor[(15, 6, 10), int32] */;
  %641 = logical_xor(%639, %640) /* ty=Tensor[(15, 6, 10), int32] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(15, 6, 10), float32] */;
  acosh(%642) /* ty=Tensor[(15, 6, 10), float32] */
}

def @func_4358() -> Tensor[(16, 16, 11), float64] {
  %643 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %643.0
}

def @func_241() -> (Tensor[(16, 16, 11), float64],) {
  @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_316(%var_314: Tensor[(16, 16, 11), float64], %var_315: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) {
  %663 = fn (%var_281: Tensor[(16, 16, 11), float64], %var_299: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) {
    %644 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %645 = %644.0;
    %646 = cast(%var_281, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
    %648 = cast(%645, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %650 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %651 = cast(%var_299, dtype="float32") /* ty=Tensor[(280), float32] */;
    %652 = reshape(%651, newshape=[7, 4, 10]) /* ty=Tensor[(7, 4, 10), float32] */;
    %653 = @func_50(%652) /* ty=(Tensor[(7, 4, 10), float32],) */;
    %654 = %653.0;
    %655 = cast(%654, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
    %656 = cast(%var_299, dtype="float32") /* ty=Tensor[(280), float32] */;
    %657 = reshape(%656, newshape=[7, 4, 10]) /* ty=Tensor[(7, 4, 10), float32] */;
    %658 = @func_50(%657) /* ty=(Tensor[(7, 4, 10), float32],) */;
    %659 = mod(%648, %649) /* ty=Tensor[(16, 16, 11), float64] */;
    %660 = %650.0;
    %661 = atan(%655) /* ty=Tensor[(7, 4, 10), float32] */;
    %662 = %658.0;
    (%659, %var_299, %660, %661, %662)
  };
  %663(%var_314, %var_315) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */
}

def @func_239() -> (Tensor[(16, 16, 11), float64],) {
  %664 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 16, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %665 = acosh(%664) /* ty=Tensor[(16, 16, 11), float64] */;
  (%665,)
}

def @func_2836() -> Tensor[(16, 16, 11), float64] {
  %666 = fn () -> Tensor[(16, 16, 11), float64] {
    @func_1184() /* ty=Tensor[(16, 16, 11), float64] */
  };
  %666() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_9178(%var_9176: Tensor[(7, 4, 2), float64], %var_9177: Tensor[(280), float32]) -> (Tensor[(7, 4, 2), float64], Tensor[(1, 13, 1), float32], Tensor[(13), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %677 = fn (%var_9151: Tensor[(7, 4, 2), float64], %var_9171: Tensor[(280), float32]) -> (Tensor[(7, 4, 2), float64], Tensor[(1, 13, 1), float32], Tensor[(13), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
    %667 = cast(%var_9151, dtype="float64") /* ty=Tensor[(7, 4, 2), float64] */;
    %668 = cast(meta[relay.Constant][34] /* ty=Tensor[(13), float32] */, dtype="float32") /* ty=Tensor[(13), float32] */;
    %669 = reshape(%668, newshape=[1, 13, 1]) /* ty=Tensor[(1, 13, 1), float32] */;
    %670 = cast(%var_9171, dtype="float32") /* ty=Tensor[(280), float32] */;
    %671 = reshape(%670, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
    %672 = @func_1613(%671) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(140, 2), float32]) */;
    %673 = cosh(%667) /* ty=Tensor[(7, 4, 2), float64] */;
    %674 = @func_2552(%669) /* ty=Tensor[(1, 13, 1), float32] */;
    %675 = @func_6450() /* ty=Tensor[(16, 16, 11), float64] */;
    %676 = %672.1;
    (%673, %674, meta[relay.Constant][34] /* ty=Tensor[(13), float32] */, %675, %676, %var_9171)
  };
  %677(%var_9176, %var_9177) /* ty=(Tensor[(7, 4, 2), float64], Tensor[(1, 13, 1), float32], Tensor[(13), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */
}

def @func_4747(%var_4745: Tensor[(16, 16, 11), float64]) -> Tensor[(16, 16, 11), bool] {
  @func_4744(%var_4745) /* ty=Tensor[(16, 16, 11), bool] */
}

def @func_1424() -> Tensor[(16, 16, 11), float64] {
  %678 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %678.0
}

def @func_7666() -> (Tensor[(16, 16, 11), float64],) {
  %681 = fn () -> (Tensor[(16, 16, 11), float64],) {
    %679 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %680 = %679.0;
    (%680,)
  };
  %681() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_3503(%var_3500: uint32, %var_3501: Tensor[(12, 11, 8), uint32], %var_3502: Tensor[(54), int64]) -> (Tensor[(12, 11, 8), uint32], Tensor[(6, 9, 1), int64], Tensor[(54), int64]) {
  @func_3498(%var_3500, %var_3501, %var_3502) /* ty=(Tensor[(12, 11, 8), uint32], Tensor[(6, 9, 1), int64], Tensor[(54), int64]) */
}

def @func_1613(%var_1610: Tensor[(140, 2), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(140, 2), float32]) {
  %682 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %683 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %684 = cast(%var_1610, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %685 = reshape(%684, newshape=[7, 4, 10]) /* ty=Tensor[(7, 4, 10), float32] */;
  %686 = @func_50(%685) /* ty=(Tensor[(7, 4, 10), float32],) */;
  %687 = %682.0;
  %688 = %683.1;
  %689 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
  %690 = %686.0;
  (%687, %688, %689, %690, %var_1610)
}

def @func_8787(%var_8786: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(5, 14, 4), float64], Tensor[(280), float32]) {
  %700 = fn (%var_8783: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(5, 14, 4), float64], Tensor[(280), float32]) {
    %691 = @func_5182() /* ty=(Tensor[(16, 16, 11), float32],) */;
    %692 = cast(%var_8783, dtype="float32") /* ty=Tensor[(280), float32] */;
    %693 = cast(%var_8783, dtype="float32") /* ty=Tensor[(280), float32] */;
    %694 = reshape(%692, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
    %695 = reshape(%693, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
    %696 = @func_4212(%694, %695) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(5, 14, 4), float64], Tensor[(16, 16, 11), float64]) */;
    %697 = @func_3548() /* ty=Tensor[(16, 16, 11), float32] */;
    %698 = %691.0;
    %699 = %696.1;
    (%697, %698, %699, %var_8783)
  };
  %700(%var_8786) /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(5, 14, 4), float64], Tensor[(280), float32]) */
}

def @func_1072() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %701 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %702 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  %703 = %701.0;
  (%702, %703)
}

def @func_9073() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %706 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %704 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
    %705 = @func_3714() /* ty=Tensor[(16, 16, 11), float64] */;
    (%704, %705)
  };
  %706() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_2448(%var_2446: Tensor[(440), uint8]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(440), uint8], Tensor[(225), int64], Tensor[(1, 15, 15), bool], Tensor[(16, 16, 11), float64]) {
  @func_2445(%var_2446) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(440), uint8], Tensor[(225), int64], Tensor[(1, 15, 15), bool], Tensor[(16, 16, 11), float64]) */
}

def @func_2457() -> (Tensor[(16, 16, 11), float64],) {
  @func_2455() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_8081() -> Tensor[(16, 16, 11), float64] {
  %708 = fn () -> Tensor[(16, 16, 11), float64] {
    %707 = @func_5902() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %707.0
  };
  %708() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_8157() -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %712 = fn () -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
    %709 = @func_3958() /* ty=(Tensor[(16, 16, 11), float32],) */;
    %710 = %709.0;
    %711 = @func_2923() /* ty=Tensor[(16, 16, 11), float64] */;
    (%710, %711)
  };
  %712() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_8373() -> (Tensor[(16, 16, 11), float64],) {
  %715 = fn () -> (Tensor[(16, 16, 11), float64],) {
    %713 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %714 = %713.0;
    (%714,)
  };
  %715() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_4703() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %716 = @func_267() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %717 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
  %718 = %716.0;
  (%717, %718)
}

def @func_8578(%var_8577: Tensor[(4, 12), uint16]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 4, 3), float32], Tensor[(4, 12), uint16]) {
  %729 = fn (%var_8568: Tensor[(4, 12), uint16]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 4, 3), float32], Tensor[(4, 12), uint16]) {
    %719 = @func_5679() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %720 = cast(%var_8568, dtype="uint16") /* ty=Tensor[(4, 12), uint16] */;
    %721 = cast(%var_8568, dtype="uint16") /* ty=Tensor[(4, 12), uint16] */;
    %722 = cast(%var_8568, dtype="uint16") /* ty=Tensor[(4, 12), uint16] */;
    %723 = reshape(%720, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), uint16] */;
    %724 = reshape(%721, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), uint16] */;
    %725 = reshape(%722, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), uint16] */;
    %726 = @func_5876(%723, %724, %725) /* ty=(Tensor[(4, 4, 3), float32],) */;
    %727 = %719.0;
    %728 = %726.0;
    (%727, %728, %var_8568)
  };
  %729(%var_8577) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(4, 4, 3), float32], Tensor[(4, 12), uint16]) */
}

def @func_9697(%var_9664: Tensor[(16, 1, 14), float64], %var_9665: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 14), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  %730 = cast(%var_9664, dtype="float64") /* ty=Tensor[(16, 1, 14), float64] */;
  %731 = cast(%var_9665, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %732 = mod(%730, %731) /* ty=Tensor[(16, 16, 14), float64] */;
  %733 = cast(%var_9665, dtype="float32") /* ty=Tensor[(16, 16, 14), float32] */;
  %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%732, dtype="float32") /* ty=Tensor[(16, 16, 14), float32] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %737 = @func_1912() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(4, 12, 2), float64], Tensor[(210, 2), uint32], Tensor[(16, 16, 11), uint32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %738 = @func_6218() /* ty=Tensor[(16, 16, 11), float64] */;
  %739 = divide(%735, %736) /* ty=Tensor[(16, 16, 14), float32] */;
  %740 = %737.6;
  %741 = @func_3548() /* ty=Tensor[(16, 16, 11), float32] */;
  (%738, %739, %740, %741)
}

def @func_2139() -> (Tensor[(280), float32],) {
  %744 = fn () -> (Tensor[(280), float32],) {
    %742 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
    %743 = %742.3;
    (%743,)
  };
  %744() /* ty=(Tensor[(280), float32],) */
}

def @func_8248(%var_8201: Tensor[(16), float64]) -> (Tensor[(16, 16, 11), float32], Tensor[(3, 11, 16), float32], Tensor[(16), float64], Tensor[(1, 528), float32], Tensor[(105, 1), float32]) {
  %745 = @func_5033() /* ty=(Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) */;
  %746 = %745.3;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %748 = cast(%var_8201, dtype="float64") /* ty=Tensor[(16), float64] */;
  %749 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 528), float32] */, dtype="float32") /* ty=Tensor[(1, 528), float32] */;
  %750 = reshape(%748, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
  %751 = reshape(%749, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %752 = @func_6808(%750, %751) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */;
  %753 = @func_8060() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(5, 7, 3), uint64], Tensor[(16, 16, 11), float64], Tensor[(9, 5, 14), float64], Tensor[(630), float64], Tensor[(105, 1), float32]) */;
  %754 = cosh(%747) /* ty=Tensor[(16, 16, 11), float32] */;
  %755 = %752.0;
  %756 = %753.5;
  (%754, %755, %var_8201, meta[relay.Constant][35] /* ty=Tensor[(1, 528), float32] */, %756)
}

def @func_1304() -> (Tensor[(16, 16, 11), float64],) {
  @func_1302() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_4216(%var_4214: Tensor[(5, 14, 4), float32], %var_4215: Tensor[(5, 14, 4), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(5, 14, 4), float64], Tensor[(16, 16, 11), float64]) {
  @func_4212(%var_4214, %var_4215) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(5, 14, 4), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_7892(%var_7890: Tensor[(11, 4, 12), uint64], %var_7891: Tensor[(11, 4, 12), uint64]) -> Tensor[(11, 4, 12), uint64] {
  @func_7888(%var_7890, %var_7891) /* ty=Tensor[(11, 4, 12), uint64] */
}

def @func_5184() -> (Tensor[(16, 16, 11), float32],) {
  @func_5182() /* ty=(Tensor[(16, 16, 11), float32],) */
}

def @func_6745() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], uint16, Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64]) {
  %769 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], uint16, Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64]) {
    %757 = @func_5571() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */;
    %758 = cast(meta[relay.Constant][36] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %759 = reshape(%758, newshape=[]) /* ty=uint16 */;
    %760 = @func_4120(%759) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(1, 4, 10), uint16], uint16) */;
    %761 = @func_2235() /* ty=(Tensor[(16, 16, 11), float32],) */;
    %762 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %763 = @func_3422() /* ty=Tensor[(16, 16, 11), float64] */;
    %764 = %757.0;
    %765 = %760.0;
    %766 = %761.0;
    %767 = %762.0;
    %768 = @func_1205() /* ty=Tensor[(4, 12, 2), float64] */;
    (%763, %764, %765, meta[relay.Constant][36] /* ty=uint16 */, %766, %767, %768)
  };
  %769() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], uint16, Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64]) */
}

def @func_7923() -> (Tensor[(16, 16, 11), float64], Tensor[(528), float32], Tensor[(16), float64], Tensor[(528), float32], Tensor[(16, 16, 11), float32]) {
  @func_7921() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(528), float32], Tensor[(16), float64], Tensor[(528), float32], Tensor[(16, 16, 11), float32]) */
}

def @func_8717(%var_8716: Tensor[(528), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(3, 11, 16), float32], Tensor[(16), float64], Tensor[(528), float32]) {
  %778 = fn (%var_8712: Tensor[(528), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(3, 11, 16), float32], Tensor[(16), float64], Tensor[(528), float32]) {
    %770 = @func_4703() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %771 = cast(meta[relay.Constant][37] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %772 = cast(%var_8712, dtype="float32") /* ty=Tensor[(528), float32] */;
    %773 = reshape(%771, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
    %774 = reshape(%772, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %775 = @func_6808(%773, %774) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */;
    %776 = %770.0;
    %777 = %775.0;
    (%776, %777, meta[relay.Constant][37] /* ty=Tensor[(16), float64] */, %var_8712)
  };
  %778(%var_8716) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(3, 11, 16), float32], Tensor[(16), float64], Tensor[(528), float32]) */
}

def @func_9232() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  %779 = @func_7016() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %780 = @func_7016() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
  %781 = %779.0;
  %782 = %780.1;
  (%781, %782)
}

def @func_2296() -> Tensor[(16, 16, 11), float64] {
  %783 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %783.0
}

def @func_7721() -> (Tensor[(16, 16, 11), float64],) {
  %786 = fn () -> (Tensor[(16, 16, 11), float64],) {
    %784 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %785 = %784.0;
    (%785,)
  };
  %786() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_4317() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %790 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
    %787 = @func_1184() /* ty=Tensor[(16, 16, 11), float64] */;
    %788 = @func_3548() /* ty=Tensor[(16, 16, 11), float32] */;
    %789 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
    (%787, %788, %789)
  };
  %790() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_8342() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  %791 = @func_5209() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %792 = @func_6218() /* ty=Tensor[(16, 16, 11), float64] */;
  %793 = %791.0;
  %794 = @func_2497() /* ty=Tensor[(280), float32] */;
  (%792, %793, %794)
}

def @func_5229(%var_5223: Tensor[(16, 16, 11), uint16]) -> (Tensor[(16, 16, 11), bool],) {
  %795 = @func_5033() /* ty=(Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) */;
  %796 = %795.3;
  %797 = cast(%var_5223, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %801 = equal(%799, %800) /* ty=Tensor[(16, 16, 11), bool] */;
  (%801,)
}

def @func_1967() -> Tensor[(16, 16, 11), float64] {
  %802 = fn () -> Tensor[(16, 16, 11), float64] {
    @func_1498() /* ty=Tensor[(16, 16, 11), float64] */
  };
  %802() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_6812(%var_6810: Tensor[(1, 1, 16), float64], %var_6811: Tensor[(528), float32]) -> (Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) {
  @func_6808(%var_6810, %var_6811) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */
}

def @func_1753() -> Tensor[(16, 16, 11), float64] {
  @func_1751() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_6325(%var_6289: Tensor[(9, 5, 14), float64]) -> (Tensor[(9, 5, 14), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) {
  %803 = cast(%var_6289, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
  %804 = acosh(%803) /* ty=Tensor[(9, 5, 14), float64] */;
  %805 = cast(%804, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
  %806 = cast(meta[relay.Constant][38] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %807 = reshape(%806, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), float32] */;
  %808 = log10(%805) /* ty=Tensor[(9, 5, 14), float64] */;
  %809 = @func_3792(%807) /* ty=Tensor[(7, 5, 4), float32] */;
  (%808, %809, meta[relay.Constant][38] /* ty=Tensor[(140), float32] */)
}

def @func_1551() -> (Tensor[(16, 16, 11), float64],) {
  %812 = fn () -> (Tensor[(16, 16, 11), float64],) {
    %810 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %811 = %810.0;
    (%811,)
  };
  %812() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_8995(%var_8965: Tensor[(90), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(48), uint16], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(90), float32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %813 = @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %814 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
  %815 = cast(%814, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %816 = reshape(%815, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
  %817 = @func_3911(%816) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %818 = cast(meta[relay.Constant][39] /* ty=Tensor[(48), uint16] */, dtype="uint16") /* ty=Tensor[(48), uint16] */;
  %819 = reshape(%818, newshape=[4, 12]) /* ty=Tensor[(4, 12), uint16] */;
  %820 = @func_8576(%819) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(4, 4, 3), float32], Tensor[(4, 12), uint16]) */;
  %821 = @func_4071() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
  %822 = cast(%var_8965, dtype="float32") /* ty=Tensor[(90), float32] */;
  %823 = reshape(%822, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %824 = @func_7549(%823) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(4, 12, 2), float64], Tensor[(3, 2, 15), float32], Tensor[(90), float32], Tensor[(98), uint32]) */;
  %825 = @func_7371() /* ty=(Tensor[(280), float32], uint16) */;
  %826 = %813.2;
  %827 = @func_2497() /* ty=Tensor[(280), float32] */;
  %828 = %817.2;
  %829 = %820.0;
  %830 = %821.0;
  %831 = %824.0;
  %832 = %825.0;
  %833 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
  (%814, %826, %827, %828, %829, meta[relay.Constant][39] /* ty=Tensor[(48), uint16] */, %830, %831, %var_8965, %832, %833)
}

def @func_1176() -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %834 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %835 = %834.0;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %837 = cast(%835, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %838 = exp(%836) /* ty=Tensor[(16, 16, 11), float32] */;
  %839 = sinh(%837) /* ty=Tensor[(16, 16, 11), float64] */;
  (%838, %839)
}

def @func_5681() -> (Tensor[(16, 16, 11), float64],) {
  @func_5679() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_4120(%var_4103: uint16) -> (Tensor[(16, 16, 11), float64], Tensor[(1, 4, 10), uint16], uint16) {
  %840 = cast(%var_4103, dtype="uint16") /* ty=uint16 */;
  %841 = reshape(%840, newshape=[]) /* ty=uint16 */;
  %842 = @func_3377(%841) /* ty=(Tensor[(1, 4, 10), uint16], Tensor[(16, 16, 11), float64], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) */;
  %843 = @func_3714() /* ty=Tensor[(16, 16, 11), float64] */;
  %844 = %842.0;
  (%843, %844, %var_4103)
}

def @func_6451() -> Tensor[(16, 16, 11), float64] {
  %846 = fn () -> Tensor[(16, 16, 11), float64] {
    %845 = @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %845.1
  };
  %846() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_841(%var_838: Tensor[(14, 10, 3), uint32], %var_839: Tensor[(14, 10, 3), uint32], %var_840: Tensor[(280), float32]) -> (Tensor[(14, 10, 3), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) {
  @func_836(%var_838, %var_839, %var_840) /* ty=(Tensor[(14, 10, 3), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */
}

def @func_5209() -> (Tensor[(16, 16, 11), float64],) {
  %847 = @func_3210() /* ty=Tensor[(16, 16, 11), float64] */;
  (%847,)
}

def @func_7872(%var_7846: Tensor[(7, 8, 1), float32]) -> Tensor[(7, 8, ?), float64] {
  %848 = cast(%var_7846, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %849 = sigmoid(%848) /* ty=Tensor[(7, 8, 1), float32] */;
  %850 = cast(%var_7846, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%849, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %854 = divide(%852, %853) /* ty=Tensor[(7, 8, ?), float64] */;
  %855 = cast(%854, dtype="float64") /* ty=Tensor[(7, 8, ?), float64] */;
  acos(%855) /* ty=Tensor[(7, 8, ?), float64] */
}

def @func_9234() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  @func_9232() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */
}

def @func_9661() -> Tensor[(16, 16, 11), float32] {
  %856 = fn () -> Tensor[(16, 16, 11), float32] {
    @func_3548() /* ty=Tensor[(16, 16, 11), float32] */
  };
  %856() /* ty=Tensor[(16, 16, 11), float32] */
}

def @func_8352() -> Tensor[(16, 16, 11), float64] {
  %858 = fn () -> Tensor[(16, 16, 11), float64] {
    %857 = @func_1176() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
    %857.1
  };
  %858() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_1025(%var_1023: Tensor[(60), int16], %var_1024: Tensor[(280), float32]) -> (Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %876 = fn (%var_1000: Tensor[(60), int16], %var_1001: Tensor[(280), float32]) -> (Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
    %859 = cast(%var_1000, dtype="int16") /* ty=Tensor[(60), int16] */;
    %860 = cast(%var_1001, dtype="float32") /* ty=Tensor[(280), float32] */;
    %861 = reshape(%859, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int16] */;
    %862 = reshape(%860, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %863 = @func_415(%861, %862) /* ty=(Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
    %864 = @func_478() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %865 = %864.0;
    %866 = cast(%865, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
    %867 = atanh(%866) /* ty=Tensor[(16, 16, 11), float32] */;
    %868 = cast(%865, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
    %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
    %870 = cast(%867, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
    %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %872 = floor_divide(%870, %871) /* ty=Tensor[(16, 16, 11), float32] */;
    %873 = cast(%872, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %874 = %863.2;
    %875 = acos(%873) /* ty=Tensor[(16, 16, 11), float64] */;
    (%874, %var_1000, %var_1001, %875)
  };
  %876(%var_1023, %var_1024) /* ty=(Tensor[(280), float32], Tensor[(60), int16], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_9479() -> Tensor[(16, 16, 11), float64] {
  @func_9477() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_2235() -> (Tensor[(16, 16, 11), float32],) {
  %877 = @func_1302() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %878 = %877.0;
  %879 = cast(%878, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %880 = log2(%879) /* ty=Tensor[(16, 16, 11), float32] */;
  (%880,)
}

def @func_9107(%var_9105: Tensor[(10, 4, 16), float32]) -> (Tensor[(10, 4, 16), float32],) {
  @func_9104(%var_9105) /* ty=(Tensor[(10, 4, 16), float32],) */
}

def @func_9550() -> Tensor[(16, 16, 11), float64] {
  %882 = fn () -> Tensor[(16, 16, 11), float64] {
    %881 = @func_8609() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %881.0
  };
  %882() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_4937(%var_4935: Tensor[(40), uint32], %var_4936: Tensor[(440, 1), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(140), float32], Tensor[(11, 8, 5), uint32], Tensor[(40), uint32], Tensor[(440, 160), int64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %902 = fn (%var_4878: Tensor[(40), uint32], %var_4879: Tensor[(440, 1), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(140), float32], Tensor[(11, 8, 5), uint32], Tensor[(40), uint32], Tensor[(440, 160), int64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %883 = cast(meta[relay.Constant][40] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %884 = reshape(%883, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %885 = @func_4516(%884) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) */;
    %886 = cast(%var_4878, dtype="uint32") /* ty=Tensor[(40), uint32] */;
    %887 = cast(%var_4879, dtype="uint32") /* ty=Tensor[(440, 1), uint32] */;
    %888 = cast(meta[relay.Constant][41] /* ty=Tensor[(160), uint32] */, dtype="uint32") /* ty=Tensor[(160), uint32] */;
    %889 = reshape(%886, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint32] */;
    %890 = reshape(%887, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), uint32] */;
    %891 = reshape(%888, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), uint32] */;
    %892 = @func_4348(%889, %890, %891) /* ty=(Tensor[(11, 8, 5), uint32], Tensor[(4, 8, 5), uint64]) */;
    %893 = cast(meta[relay.Constant][41] /* ty=Tensor[(160), uint32] */, dtype="int64") /* ty=Tensor[(160), int64] */;
    %894 = cast(%var_4879, dtype="int64") /* ty=Tensor[(440, 1), int64] */;
    %895 = @func_1550() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %896 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
    %897 = %885.2;
    %898 = %892.0;
    %899 = add(%893, %894) /* ty=Tensor[(440, 160), int64] */;
    %900 = %895.0;
    %901 = @func_3210() /* ty=Tensor[(16, 16, 11), float64] */;
    (%896, %897, meta[relay.Constant][40] /* ty=Tensor[(140), float32] */, %898, %var_4878, %899, %900, %901)
  };
  %902(%var_4935, %var_4936) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(140), float32], Tensor[(11, 8, 5), uint32], Tensor[(40), uint32], Tensor[(440, 160), int64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_1616(%var_1614: Tensor[(140, 2), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(140, 2), float32]) {
  @func_1613(%var_1614) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(140, 2), float32]) */
}

def @func_1074() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  @func_1072() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_1751() -> Tensor[(16, 16, 11), float64] {
  %903 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %903.1
}

def @func_5915() -> Tensor[(16, 16, 11), float64] {
  %904 = fn () -> Tensor[(16, 16, 11), float64] {
    @func_1424() /* ty=Tensor[(16, 16, 11), float64] */
  };
  %904() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_9752(%var_9749: Tensor[(12, 6, 3), float64], %var_9750: Tensor[(1, 60), int16], %var_9751: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(12, 6, 3), float32], Tensor[(280), float32], Tensor[(1, 60), int16], Tensor[(280), float32]) {
  %921 = fn (%var_9706: Tensor[(12, 6, 3), float64], %var_9744: Tensor[(1, 60), int16], %var_9745: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(12, 6, 3), float32], Tensor[(280), float32], Tensor[(1, 60), int16], Tensor[(280), float32]) {
    %905 = @func_7665() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %906 = cast(%var_9706, dtype="float64") /* ty=Tensor[(12, 6, 3), float64] */;
    %907 = sigmoid(%906) /* ty=Tensor[(12, 6, 3), float64] */;
    %908 = cast(%var_9706, dtype="float32") /* ty=Tensor[(12, 6, 3), float32] */;
    %909 = shape_of(%907, dtype="int32") /* ty=Tensor[(3), int32] */;
    %910 = cast(%907, dtype="float32") /* ty=Tensor[(12, 6, 3), float32] */;
    %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %912 = cast(%var_9744, dtype="int16") /* ty=Tensor[(1, 60), int16] */;
    %913 = cast(%var_9745, dtype="float32") /* ty=Tensor[(280), float32] */;
    %914 = reshape(%912, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int16] */;
    %915 = reshape(%913, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %916 = @func_415(%914, %915) /* ty=(Tensor[(15, 10, 6), bool], Tensor[(7, 4, 10), float32], Tensor[(280), float32]) */;
    %917 = %905.0;
    %918 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
    %919 = power(%910, %911) /* ty=Tensor[(12, 6, 3), float32] */;
    %920 = %916.2;
    (%917, %918, %919, %920, %var_9744, %var_9745)
  };
  %921(%var_9749, %var_9750, %var_9751) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(12, 6, 3), float32], Tensor[(280), float32], Tensor[(1, 60), int16], Tensor[(280), float32]) */
}

def @func_3775(%var_3773: Tensor[(3, 2, 15), float32], %var_3774: Tensor[(98), uint32]) -> (Tensor[(3, 2, 15), float32], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) {
  @func_3771(%var_3773, %var_3774) /* ty=(Tensor[(3, 2, 15), float32], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) */
}

def @func_8691(%var_8689: Tensor[(3, 16, 12), uint8], %var_8690: Tensor[(3, 16, 12), uint8]) -> (Tensor[(3, 16, 12), uint8], Tensor[(16, 16, 11), float64]) {
  %928 = fn (%var_8674: Tensor[(3, 16, 12), uint8], %var_8675: Tensor[(3, 16, 12), uint8]) -> (Tensor[(3, 16, 12), uint8], Tensor[(16, 16, 11), float64]) {
    %922 = cast(%var_8675, dtype="uint8") /* ty=Tensor[(3, 16, 12), uint8] */;
    %923 = shape_of(%var_8674, dtype="int32") /* ty=Tensor[(3), int32] */;
    %924 = cast(%var_8674, dtype="uint8") /* ty=Tensor[(3, 16, 12), uint8] */;
    %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %926 = left_shift(%924, %925) /* ty=Tensor[(3, 16, 12), uint8] */;
    %927 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
    (%926, %927)
  };
  %928(%var_8689, %var_8690) /* ty=(Tensor[(3, 16, 12), uint8], Tensor[(16, 16, 11), float64]) */
}

def @func_8998(%var_8996: Tensor[(90), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(48), uint16], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(90), float32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  @func_8995(%var_8996) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(48), uint16], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(90), float32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) */
}

def @func_3715() -> Tensor[(16, 16, 11), float64] {
  %929 = fn () -> Tensor[(16, 16, 11), float64] {
    @func_859() /* ty=Tensor[(16, 16, 11), float64] */
  };
  %929() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_4778(%var_4777: Tensor[(9, 4, 1), uint8]) -> (Tensor[(9, 4, 16), uint8],) {
  %933 = fn (%var_4754: Tensor[(9, 4, 1), uint8]) -> (Tensor[(9, 4, 16), uint8],) {
    %930 = cast(%var_4754, dtype="uint8") /* ty=Tensor[(9, 4, 1), uint8] */;
    %931 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 4, 16), uint8] */, dtype="uint8") /* ty=Tensor[(9, 4, 16), uint8] */;
    %932 = subtract(%930, %931) /* ty=Tensor[(9, 4, 16), uint8] */;
    (%932,)
  };
  %933(%var_4777) /* ty=(Tensor[(9, 4, 16), uint8],) */
}

def @func_2995(%var_2994: Tensor[(2, 7, 7), uint32]) -> (Tensor[(2, 7, 7), uint32], Tensor[(2, 7, 7), float32]) {
  %941 = fn (%var_2960: Tensor[(2, 7, 7), uint32]) -> (Tensor[(2, 7, 7), uint32], Tensor[(2, 7, 7), float32]) {
    %934 = cast(%var_2960, dtype="uint32") /* ty=Tensor[(2, 7, 7), uint32] */;
    %935 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(2, 7, 7), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %936 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 7, 7), uint32] */, dtype="uint32") /* ty=Tensor[(2, 7, 7), uint32] */;
    %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %938 = cast(%var_2960, dtype="float32") /* ty=Tensor[(2, 7, 7), float32] */;
    %939 = bitwise_xor(%936, %937) /* ty=Tensor[(2, 7, 7), uint32] */;
    %940 = log2(%938) /* ty=Tensor[(2, 7, 7), float32] */;
    (%939, %940)
  };
  %941(%var_2994) /* ty=(Tensor[(2, 7, 7), uint32], Tensor[(2, 7, 7), float32]) */
}

def @func_5571() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) {
  %942 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
  %943 = %942.1;
  %944 = cast(%943, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %945 = cos(%944) /* ty=Tensor[(16, 16, 11), float64] */;
  %946 = cast(%945, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
  %947 = @func_859() /* ty=Tensor[(16, 16, 11), float64] */;
  %948 = sqrt(%946) /* ty=Tensor[(16, 16, 11), float32] */;
  (%947, %948)
}

def @func_3342() -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) {
  %965 = fn () -> (Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) {
    %949 = @func_1751() /* ty=Tensor[(16, 16, 11), float64] */;
    %950 = cast(%949, dtype="float32") /* ty=Tensor[(16, 16, 11), float32] */;
    %951 = @func_239() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %952 = %951.0;
    %953 = cast(%952, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %954 = cast(meta[relay.Constant][44] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %955 = reshape(%953, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
    %956 = reshape(%954, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %957 = @func_313(%955, %956) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(7, 4, 10), float32]) */;
    %958 = cast(%949, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %959 = reshape(%958, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), float64] */;
    %960 = @func_2614(%959) /* ty=(Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */;
    %961 = log(%950) /* ty=Tensor[(16, 16, 11), float32] */;
    %962 = %957.3;
    %963 = %960.0;
    %964 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
    (%961, %952, %962, meta[relay.Constant][44] /* ty=Tensor[(280), float32] */, %963, %964)
  };
  %965() /* ty=(Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64], Tensor[(7, 4, 10), float32], Tensor[(280), float32], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64]) */
}

def @func_7492(%var_7490: Tensor[(528), float32], %var_7491: Tensor[(480), float32]) -> (Tensor[(16, 16, 11), float32], Tensor[(?, ?, 16), float64], Tensor[(1, 16), float64], Tensor[(528), float32], Tensor[(10, 8, 6), bool], Tensor[(480), float32]) {
  %978 = fn (%var_7440: Tensor[(528), float32], %var_7482: Tensor[(480), float32]) -> (Tensor[(16, 16, 11), float32], Tensor[(?, ?, 16), float64], Tensor[(1, 16), float64], Tensor[(528), float32], Tensor[(10, 8, 6), bool], Tensor[(480), float32]) {
    %966 = @func_7016() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) */;
    %967 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
    %968 = cast(%var_7440, dtype="float32") /* ty=Tensor[(528), float32] */;
    %969 = reshape(%967, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
    %970 = reshape(%968, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %971 = @func_6808(%969, %970) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) */;
    %972 = cast(%var_7482, dtype="float32") /* ty=Tensor[(480), float32] */;
    %973 = reshape(%972, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
    %974 = @func_3163(%973) /* ty=(Tensor[(10, 8, 6), float64], Tensor[(210, 2), uint32], Tensor[(10, 8, 6), bool]) */;
    %975 = %966.1;
    %976 = %971.2;
    %977 = %974.2;
    (%975, %976, meta[relay.Constant][45] /* ty=Tensor[(1, 16), float64] */, %var_7440, %977, %var_7482)
  };
  %978(%var_7490, %var_7491) /* ty=(Tensor[(16, 16, 11), float32], Tensor[(?, ?, 16), float64], Tensor[(1, 16), float64], Tensor[(528), float32], Tensor[(10, 8, 6), bool], Tensor[(480), float32]) */
}

def @func_2380() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %982 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %979 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %980 = @func_1498() /* ty=Tensor[(16, 16, 11), float64] */;
    %981 = %979.0;
    (%980, %981)
  };
  %982() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_1205() -> Tensor[(4, 12, 2), float64] {
  %983 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(4, 12, 2), float64] */;
  atan(%983) /* ty=Tensor[(4, 12, 2), float64] */
}

def @func_6000(%var_5998: Tensor[(1, 40), uint32]) -> (Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(1, 40), uint32], Tensor[(440), uint32], Tensor[(160), uint32]) {
  @func_5997(%var_5998) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(4, 8, 5), uint64], Tensor[(1, 40), uint32], Tensor[(440), uint32], Tensor[(160), uint32]) */
}

def @func_8519(%var_8501: uint16) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(11, 4, 12), uint64], Tensor[(8, 66), uint64], Tensor[(3, 11, 16), float32], Tensor[(98), uint32], uint16, Tensor[(16, 16, 11), float64]) {
  %984 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 66), uint64] */, dtype="uint64") /* ty=Tensor[(8, 66), uint64] */;
  %985 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 66), uint64] */, dtype="uint64") /* ty=Tensor[(8, 66), uint64] */;
  %986 = reshape(%984, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), uint64] */;
  %987 = reshape(%985, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), uint64] */;
  %988 = @func_7888(%986, %987) /* ty=Tensor[(11, 4, 12), uint64] */;
  %989 = cast(%988, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %990 = reshape(%989, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %991 = @func_5436(%990) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(3, 11, 16), float32]) */;
  %992 = cast(%var_8501, dtype="uint16") /* ty=uint16 */;
  %993 = reshape(%992, newshape=[]) /* ty=uint16 */;
  %994 = @func_3377(%993) /* ty=(Tensor[(1, 4, 10), uint16], Tensor[(16, 16, 11), float64], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) */;
  %995 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %996 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
  %997 = @func_3826() /* ty=Tensor[(16, 16, 11), float64] */;
  %998 = %991.1;
  %999 = %994.3;
  %1000 = %995.0;
  (%996, %997, %988, meta[relay.Constant][47] /* ty=Tensor[(8, 66), uint64] */, %998, %999, %var_8501, %1000)
}

def @func_552() -> (Tensor[(16, 16, 11), float64],) {
  @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_4519(%var_4517: Tensor[(140), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) {
  @func_4516(%var_4517) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), bool], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(7, 5, 4), float32], Tensor[(140), float32]) */
}

def @func_4424(%var_4423: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(440), uint8], Tensor[(280), float32]) {
  %1007 = fn (%var_4418: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(440), uint8], Tensor[(280), float32]) {
    %1001 = @func_3673() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %1002 = cast(%var_4418, dtype="float32") /* ty=Tensor[(280), float32] */;
    %1003 = reshape(%1002, newshape=[10, 28]) /* ty=Tensor[(10, 28), float32] */;
    %1004 = @func_2895(%1003) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(225), int64], Tensor[(440), uint8]) */;
    %1005 = %1001.0;
    %1006 = %1004.3;
    (%1005, %1006, %var_4418)
  };
  %1007(%var_4423) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(440), uint8], Tensor[(280), float32]) */
}

def @func_4360() -> Tensor[(16, 16, 11), float64] {
  @func_4358() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_3422() -> Tensor[(16, 16, 11), float64] {
  @func_1184() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_8609() -> (Tensor[(16, 16, 11), float64],) {
  %1008 = @func_7415() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */;
  %1009 = %1008.0;
  (%1009,)
}

def @func_6124() -> Tensor[(16, 16, 11), float64] {
  @func_3422() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_7814(%var_7812: Tensor[(480), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(210, 2), uint32], Tensor[(480), float32]) {
  %1010 = cast(%var_7812, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1011 = reshape(%1010, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %1012 = @func_3163(%1011) /* ty=(Tensor[(10, 8, 6), float64], Tensor[(210, 2), uint32], Tensor[(10, 8, 6), bool]) */;
  %1013 = @func_2835() /* ty=Tensor[(16, 16, 11), float64] */;
  %1014 = %1012.1;
  (%1013, %1014, %var_7812)
}

def @func_6510() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %1019 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %1015 = @func_5033() /* ty=(Tensor[(280), float32], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), uint16], Tensor[(16, 16, 11), float64]) */;
    %1016 = @func_2379() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %1017 = %1015.1;
    %1018 = %1016.1;
    (%1017, %1018)
  };
  %1019() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_2237() -> (Tensor[(16, 16, 11), float32],) {
  @func_2235() /* ty=(Tensor[(16, 16, 11), float32],) */
}

def @func_1818(%var_1801: Tensor[(420), uint32]) -> (Tensor[(4, 12, 2), float64], Tensor[(16, 16, 11), float64], Tensor[(420), uint32], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %1020 = cast(%var_1801, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %1021 = cast(%var_1801, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %1022 = cast(meta[relay.Constant][48] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1023 = reshape(%1020, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), uint32] */;
  %1024 = reshape(%1021, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), uint32] */;
  %1025 = reshape(%1022, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %1026 = @func_836(%1023, %1024, %1025) /* ty=(Tensor[(14, 10, 3), uint32], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %1027 = @func_550() /* ty=(Tensor[(16, 16, 11), float64],) */;
  %1028 = @func_1205() /* ty=Tensor[(4, 12, 2), float64] */;
  %1029 = %1026.1;
  %1030 = %1027.0;
  (%1028, %1029, %var_1801, meta[relay.Constant][48] /* ty=Tensor[(280), float32] */, %1030)
}

def @func_2898(%var_2896: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(225), int64], Tensor[(440), uint8]) {
  @func_2895(%var_2896) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(10, 28), bool], Tensor[(225), int64], Tensor[(440), uint8]) */
}

def @func_7614() -> (Tensor[(14, 11, 3), float32],) {
  %1033 = fn () -> (Tensor[(14, 11, 3), float32],) {
    %1031 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 3), float32] */;
    %1032 = sinh(%1031) /* ty=Tensor[(14, 11, 3), float32] */;
    (%1032,)
  };
  %1033() /* ty=(Tensor[(14, 11, 3), float32],) */
}

def @func_675(%var_673: Tensor[(5, 56), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) {
  @func_672(%var_673) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */
}

def @func_9292() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float32], Tensor[(16, 16, 11), float64]) {
  %1034 = @func_9232() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float32]) */;
  %1035 = @func_5182() /* ty=(Tensor[(16, 16, 11), float32],) */;
  %1036 = @func_5914() /* ty=Tensor[(16, 16, 11), float64] */;
  %1037 = %1034.1;
  %1038 = %1035.0;
  %1039 = @func_7964() /* ty=Tensor[(16, 16, 11), float64] */;
  (%1036, %1037, %1038, %1039)
}

def @func_4655(%var_4620: Tensor[(8, 16, 4), bool], %var_4621: Tensor[(8, 16, 4), bool], %var_4639: Tensor[(280), float32]) -> (Tensor[(8, 16, 4), bool], Tensor[(16, 16, 11), float64], Tensor[(280), float32], Tensor[(16, 16, 11), float64]) {
  %1040 = cast(%var_4621, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
  %1041 = shape_of(%var_4620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%var_4620, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1044 = cast(%var_4639, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1045 = reshape(%1044, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %1046 = @func_672(%1045) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(5, 56), float32]) */;
  %1047 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
  %1048 = logical_or(%1042, %1043) /* ty=Tensor[(8, 16, 4), bool] */;
  %1049 = %1046.2;
  %1050 = %1047.1;
  (%1048, %1049, %var_4639, %1050)
}

def @func_3784() -> Tensor[(16, 16, 11), float64] {
  @func_3782() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_3379(%var_3378: uint16) -> (Tensor[(1, 4, 10), uint16], Tensor[(16, 16, 11), float64], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) {
  %1059 = fn (%var_3354: uint16) -> (Tensor[(1, 4, 10), uint16], Tensor[(16, 16, 11), float64], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) {
    %1051 = cast(%var_3354, dtype="uint16") /* ty=uint16 */;
    %1052 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 4, 10), uint16] */, dtype="uint16") /* ty=Tensor[(1, 4, 10), uint16] */;
    %1053 = cast(meta[relay.Constant][51] /* ty=Tensor[(98), uint32] */, dtype="uint32") /* ty=Tensor[(98), uint32] */;
    %1054 = reshape(%1053, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), uint32] */;
    %1055 = @func_2993(%1054) /* ty=(Tensor[(2, 7, 7), uint32], Tensor[(2, 7, 7), float32]) */;
    %1056 = subtract(%1051, %1052) /* ty=Tensor[(1, 4, 10), uint16] */;
    %1057 = @func_2676() /* ty=Tensor[(16, 16, 11), float64] */;
    %1058 = %1055.1;
    (%1056, %1057, %1058, meta[relay.Constant][51] /* ty=Tensor[(98), uint32] */)
  };
  %1059(%var_3378) /* ty=(Tensor[(1, 4, 10), uint16], Tensor[(16, 16, 11), float64], Tensor[(2, 7, 7), float32], Tensor[(98), uint32]) */
}

def @func_1499() -> Tensor[(16, 16, 11), float64] {
  %1061 = fn () -> Tensor[(16, 16, 11), float64] {
    %1060 = @func_1104() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
    %1060.2
  };
  %1061() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_8849() -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
  %1067 = fn () -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) {
    %1062 = @func_2044() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %1063 = @func_4703() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */;
    %1064 = @func_3851() /* ty=Tensor[(16, 16, 11), float64] */;
    %1065 = %1062.1;
    %1066 = %1063.0;
    (%1064, %1065, %1066)
  };
  %1067() /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64]) */
}

def @func_7235(%var_7234: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), float64]) {
  %1075 = fn (%var_7222: Tensor[(10, 28), float32]) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), float64]) {
    %1068 = cast(%var_7222, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
    %1069 = reshape(%1068, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
    %1070 = @func_3619(%1069) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(70, 4), uint64], Tensor[(16, 16, 11), float64], Tensor[(280), float32]) */;
    %1071 = cast(%var_7222, dtype="float64") /* ty=Tensor[(10, 28), float64] */;
    %1072 = @func_1424() /* ty=Tensor[(16, 16, 11), float64] */;
    %1073 = %1070.3;
    %1074 = erf(%1071) /* ty=Tensor[(10, 28), float64] */;
    (%1072, %1073, %1074)
  };
  %1075(%var_7234) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(10, 28), float64]) */
}

def @func_6973(%var_6971: Tensor[(5, 7, 3), uint64]) -> (Tensor[(5, 7, 3), uint64],) {
  @func_6970(%var_6971) /* ty=(Tensor[(5, 7, 3), uint64],) */
}

def @func_6808(%var_6762: Tensor[(1, 1, 16), float64], %var_6776: Tensor[(528), float32]) -> (Tensor[(3, 11, 16), float32], Tensor[(528), float32], Tensor[(?, ?, 16), float64]) {
  %1076 = cast(%var_6776, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1077 = reshape(%1076, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1078 = @func_5436(%1077) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(3, 11, 16), float32]) */;
  %1079 = cast(%var_6762, dtype="float64") /* ty=Tensor[(1, 1, 16), float64] */;
  %1080 = log2(%1079) /* ty=Tensor[(1, 1, 16), float64] */;
  %1081 = cast(%var_6762, dtype="float64") /* ty=Tensor[(1, 1, 16), float64] */;
  %1082 = shape_of(%1080, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1083 = cast(%1080, dtype="float64") /* ty=Tensor[(1, 1, 16), float64] */;
  %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1085 = %1078.0;
  %1086 = minimum(%1083, %1084) /* ty=Tensor[(?, ?, 16), float64] */;
  (%1085, %var_6776, %1086)
}

def @func_8522(%var_8520: uint16) -> (Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(11, 4, 12), uint64], Tensor[(8, 66), uint64], Tensor[(3, 11, 16), float32], Tensor[(98), uint32], uint16, Tensor[(16, 16, 11), float64]) {
  @func_8519(%var_8520) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(16, 16, 11), float64], Tensor[(11, 4, 12), uint64], Tensor[(8, 66), uint64], Tensor[(3, 11, 16), float32], Tensor[(98), uint32], uint16, Tensor[(16, 16, 11), float64]) */
}

def @func_8251(%var_8249: Tensor[(16), float64]) -> (Tensor[(16, 16, 11), float32], Tensor[(3, 11, 16), float32], Tensor[(16), float64], Tensor[(1, 528), float32], Tensor[(105, 1), float32]) {
  @func_8248(%var_8249) /* ty=(Tensor[(16, 16, 11), float32], Tensor[(3, 11, 16), float32], Tensor[(16), float64], Tensor[(1, 528), float32], Tensor[(105, 1), float32]) */
}

def @func_8444() -> (Tensor[(16, 16, 11), float64],) {
  %1088 = fn () -> (Tensor[(16, 16, 11), float64],) {
    %1087 = @func_5914() /* ty=Tensor[(16, 16, 11), float64] */;
    (%1087,)
  };
  %1088() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_6220() -> Tensor[(16, 16, 11), float64] {
  @func_6218() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_3675() -> (Tensor[(16, 16, 11), float64],) {
  @func_3673() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_8611() -> (Tensor[(16, 16, 11), float64],) {
  @func_8609() /* ty=(Tensor[(16, 16, 11), float64],) */
}

def @func_5653() -> Tensor[(16, 16, 11), float64] {
  %1090 = fn () -> Tensor[(16, 16, 11), float64] {
    %1089 = @func_2455() /* ty=(Tensor[(16, 16, 11), float64],) */;
    %1089.0
  };
  %1090() /* ty=Tensor[(16, 16, 11), float64] */
}

def @func_5679() -> (Tensor[(16, 16, 11), float64],) {
  %1091 = @func_3422() /* ty=Tensor[(16, 16, 11), float64] */;
  (%1091,)
}

def @func_9430(%var_9428: Tensor[(280), float32]) -> (Tensor[(16, 16, 11), float64], uint16, uint16, Tensor[(14, 5, 4), float32], Tensor[(280), float32]) {
  @func_9427(%var_9428) /* ty=(Tensor[(16, 16, 11), float64], uint16, uint16, Tensor[(14, 5, 4), float32], Tensor[(280), float32]) */
}

def @func_4123(%var_4121: uint16) -> (Tensor[(16, 16, 11), float64], Tensor[(1, 4, 10), uint16], uint16) {
  @func_4120(%var_4121) /* ty=(Tensor[(16, 16, 11), float64], Tensor[(1, 4, 10), uint16], uint16) */
}

def @func_8409() -> (Tensor[(280), float32],) {
  %1093 = fn () -> (Tensor[(280), float32],) {
    %1092 = @func_2497() /* ty=Tensor[(280), float32] */;
    (%1092,)
  };
  %1093() /* ty=(Tensor[(280), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen373/build/output.py:3457: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen373/build/output.py", line 3462, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(900) tvmgen_default_fused_logical_xor_cast_acosh_kernel0(float* __restrict__ T_acosh, int* __restrict__ placeholder, int* __restrict__ placeholder1) {
  T_acosh[(((int)threadIdx.x))] = acoshf(((float)(placeholder[((((((int)threadIdx.x) / 60) * 10) + (((int)threadIdx.x) % 10)))] ^ placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


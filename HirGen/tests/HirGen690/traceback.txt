==========mod==========
#[version = "0.0.5"]
def @func_5581(%var_5525: Tensor[(588), float32], %var_5536: Tensor[(1, 784), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(588), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(?, 784), bool], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(14, 8, 3), float64]) {
  %0 = cast(%var_5525, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1 = reshape(%0, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %2 = @func_2035(%1) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %6 = reshape(%3, newshape=[3, 126]) /* ty=Tensor[(3, 126), float64] */;
  %7 = reshape(%4, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %8 = reshape(%5, newshape=[3, 126]) /* ty=Tensor[(3, 126), float64] */;
  %9 = @func_2449(%6, %7, %8) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], Tensor[(3, 126), int64], Tensor[(10, 12, 15), float32]) */;
  %10 = cast(%var_5536, dtype="int64") /* ty=Tensor[(1, 784), int64] */;
  %11 = cast(%var_5536, dtype="int64") /* ty=Tensor[(1, 784), int64] */;
  %12 = reshape(%10, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int64] */;
  %13 = reshape(%11, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int64] */;
  %14 = @func_5100(%12, %13) /* ty=(Tensor[(8, 7, 14), int64], Tensor[(10, 12, 15), float32]) */;
  %15 = %14.0;
  %16 = cast(%15, dtype="bool") /* ty=Tensor[(8, 7, 14), bool] */;
  %17 = shape_of(%var_5536, dtype="int32") /* ty=Tensor[(2), int32] */;
  %18 = cast(%var_5536, dtype="bool") /* ty=Tensor[(1, 784), bool] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %20 = @func_4662() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %21 = @func_2489() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %22 = cast(%15, dtype="float64") /* ty=Tensor[(8, 7, 14), float64] */;
  %23 = %9.2;
  %24 = cast(%23, dtype="float64") /* ty=Tensor[(336), float64] */;
  %25 = reshape(%24, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %26 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %27 = %2.1;
  %28 = not_equal(%18, %19) /* ty=Tensor[(?, 784), bool] */;
  %29 = %20.1;
  %30 = %21.0;
  %31 = asin(%22) /* ty=Tensor[(8, 7, 14), float64] */;
  %32 = @func_333(%25) /* ty=Tensor[(14, 8, 3), float64] */;
  (%26, %27, %var_5525, %23, meta[relay.Constant][0] /* ty=Tensor[(378), float64] */, meta[relay.Constant][1] /* ty=Tensor[(336), float64] */, %28, %29, %30, %31, %32)
}

def @func_18201(%var_18174: Tensor[(392, 2), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(1, 1, 11), float32], Tensor[(11), float32], Tensor[(10, 12, 15), uint64], Tensor[(6, 14, 7), float64], Tensor[(588, 1), float32], Tensor[(392, 2), int64]) {
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(11), float32] */, dtype="float32") /* ty=Tensor[(11), float32] */;
  %34 = reshape(%33, newshape=[1, 1, 11]) /* ty=Tensor[(1, 1, 11), float32] */;
  %35 = @func_7027(%34) /* ty=(Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) */;
  %36 = cast(meta[relay.Constant][3] /* ty=Tensor[(588, 1), float32] */, dtype="float32") /* ty=Tensor[(588, 1), float32] */;
  %37 = cast(%var_18174, dtype="int64") /* ty=Tensor[(392, 2), int64] */;
  %38 = reshape(%36, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %39 = reshape(%37, newshape=[1, 784]) /* ty=Tensor[(1, 784), int64] */;
  %40 = @func_5581(%38, %39) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(588), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(?, 784), bool], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(14, 8, 3), float64]) */;
  %41 = @func_17511() /* ty=Tensor[(10, 12, 15), float32] */;
  %42 = %35.0;
  %43 = @func_13718() /* ty=Tensor[(10, 12, 15), uint64] */;
  %44 = %40.1;
  (%41, %42, meta[relay.Constant][2] /* ty=Tensor[(11), float32] */, %43, %44, meta[relay.Constant][3] /* ty=Tensor[(588, 1), float32] */, %var_18174)
}

def @func_20130() -> Tensor[(10, 12, 15), float32] {
  %45 = @func_5053() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %45.0
}

def @func_3717() -> Tensor[(10, 12, 15), float32] {
  @func_1887() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_18683() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %46 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %47 = @func_17533() /* ty=Tensor[(10, 12, 15), float32] */;
  %48 = %46.0;
  (%47, %48)
}

def @func_14388() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) {
  %49 = @func_11783() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %50 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %51 = @func_9285() /* ty=(Tensor[(588), float32],) */;
  %52 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
  %53 = %49.0;
  %54 = %50.0;
  %55 = %51.0;
  (%52, %53, %54, %55)
}

def @func_10151() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %56 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %57 = %56.3;
  %58 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
  (%57, %58)
}

def @func_15916() -> (Tensor[(336), float64],) {
  %59 = @func_13672() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %60 = %59.2;
  (%60,)
}

def @func_1887() -> Tensor[(10, 12, 15), float32] {
  %61 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %61.0
}

def @func_6106() -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(910), int64], Tensor[(10, 12, 15), float32]) {
  %62 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %63 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %64 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %66 = reshape(%65, newshape=[7, 13, 10]) /* ty=Tensor[(7, 13, 10), int64] */;
  %67 = @func_5259(%66) /* ty=(Tensor[(7, 13, 10), int64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %68 = @func_4276() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %69 = %62.0;
  %70 = %63.2;
  %71 = %64.0;
  %72 = %67.5;
  %73 = %68.0;
  (%69, %70, %71, %72, meta[relay.Constant][4] /* ty=Tensor[(910), int64] */, %73)
}

def @func_6464() -> (Tensor[(336), float64], uint8) {
  %74 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %75 = @func_6106() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(910), int64], Tensor[(10, 12, 15), float32]) */;
  %76 = %74.0;
  %77 = %75.0;
  (%76, %77)
}

def @func_20970(%var_20965: Tensor[(1, 3, 3), uint8]) -> Tensor[(1, 3, 3), int64] {
  %78 = @func_10355() /* ty=uint8 */;
  %79 = cast(%78, dtype="int64") /* ty=int64 */;
  %80 = cast(%var_20965, dtype="int64") /* ty=Tensor[(1, 3, 3), int64] */;
  left_shift(%79, %80) /* ty=Tensor[(1, 3, 3), int64] */
}

def @func_9882() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %81 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %82 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  (%81, %82)
}

def @func_12588(%var_12586: Tensor[(378), float64]) -> (Tensor[(336), float64], Tensor[(10, 12, 15), float64], Tensor[(336), float64], Tensor[(378), float64]) {
  %83 = @func_6724() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %84 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %85 = cast(%var_12586, dtype="float64") /* ty=Tensor[(378), float64] */;
  %86 = %83.0;
  %87 = cast(%86, dtype="float64") /* ty=Tensor[(336), float64] */;
  %88 = reshape(%85, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %89 = reshape(%87, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %90 = @func_1612(%88, %89) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %91 = %84.0;
  %92 = %90.3;
  (%86, %91, %92, %var_12586)
}

def @func_8731() -> Tensor[(10, 12, 15), float32] {
  %93 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %93.0
}

def @func_20463() -> Tensor[(10, 12, 15), float32] {
  %94 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %94.2
}

def @func_11556() -> Tensor[(10, 12, 15), float32] {
  %95 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %95.2
}

def @func_3999(%var_3973: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), int16]) {
  %96 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %97 = @func_2950() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */;
  %98 = %97.2;
  %99 = cast(%var_3973, dtype="int16") /* ty=Tensor[(378), int16] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(1), int32] */;
  %101 = cast(%98, dtype="int16") /* ty=Tensor[(378), int16] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?), int16] */;
  %103 = %96.2;
  %104 = right_shift(%101, %102) /* ty=Tensor[(378), int16] */;
  (%103, %104)
}

def @func_19764() -> (Tensor[(10, 12, 15), float64],) {
  %105 = @func_13278() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) */;
  %106 = %105.1;
  (%106,)
}

def @func_16567() -> Tensor[(336), float64] {
  %107 = @func_3930() /* ty=(Tensor[(336), float64],) */;
  %107.0
}

def @func_6766() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %108 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %109 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %110 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %111 = %108.0;
  %112 = %109.0;
  %113 = %110.1;
  (%111, %112, %113)
}

def @func_9409() -> Tensor[(10, 12, 15), float32] {
  %114 = @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %114.1
}

def @func_12199() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %115 = @func_11576() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %116 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %117 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %118 = %115.0;
  %119 = %116.0;
  %120 = %117.0;
  %121 = @func_11556() /* ty=Tensor[(10, 12, 15), float32] */;
  (%118, %119, %120, %121)
}

def @func_20093(%var_20053: Tensor[(1, 13, 12), float64], %var_20062: Tensor[(11), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(1, 1, 11), float32], Tensor[(11), float32], Tensor[(15, 10, 3), float64], Tensor[(5, 13, 12), bool]) {
  %122 = @func_10797() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %123 = cast(%var_20062, dtype="float32") /* ty=Tensor[(11), float32] */;
  %124 = reshape(%123, newshape=[1, 1, 11]) /* ty=Tensor[(1, 1, 11), float32] */;
  %125 = @func_7027(%124) /* ty=(Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) */;
  %126 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %127 = cast(%var_20053, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
  %128 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(1, 13, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %131 = minimum(%129, %130) /* ty=Tensor[(?, 13, 12), float64] */;
  %132 = cast(%131, dtype="bool") /* ty=Tensor[(?, 13, 12), bool] */;
  %133 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 13, 12), float64] */, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
  %134 = %122.0;
  %135 = %125.0;
  %136 = %126.0;
  %137 = greater(%132, %133) /* ty=Tensor[(5, 13, 12), bool] */;
  (%134, %135, %var_20062, %136, %137)
}

def @func_13380(%var_13374: Tensor[(3, 5, 2), float32]) -> (Tensor[(3, 5, 2), float32],) {
  %138 = cast(%var_13374, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %139 = sin(%138) /* ty=Tensor[(3, 5, 2), float32] */;
  (%139,)
}

def @func_11984() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %140 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %141 = @func_8436() /* ty=Tensor[(10, 12, 15), float32] */;
  %142 = %140.0;
  (%141, %142)
}

def @func_2914() -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %143 = @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */;
  %144 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %145 = %143.2;
  %146 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  %147 = %144.0;
  (%145, %146, %147)
}

def @func_19615() -> (Tensor[(10, 12, 15), float32],) {
  %148 = @func_3717() /* ty=Tensor[(10, 12, 15), float32] */;
  (%148,)
}

def @func_6867() -> Tensor[(10, 12, 15), float32] {
  @func_1637() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_2950() -> (Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) {
  %149 = @func_2679() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) */;
  %150 = cast(meta[relay.Constant][7] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %151 = cast(meta[relay.Constant][8] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %152 = reshape(%150, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %153 = reshape(%151, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %154 = @func_1612(%152, %153) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %155 = %149.0;
  %156 = %154.9;
  (%155, %156, meta[relay.Constant][7] /* ty=Tensor[(378), float64] */, meta[relay.Constant][8] /* ty=Tensor[(336), float64] */)
}

def @func_4537() -> (Tensor[(336), float64], Tensor[(336), float64]) {
  %157 = @func_3766() /* ty=(Tensor[(336), float64],) */;
  %158 = @func_3035() /* ty=Tensor[(336), float64] */;
  %159 = %157.0;
  (%158, %159)
}

def @func_14447() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %160 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  %161 = @func_3536() /* ty=Tensor[(10, 12, 15), float32] */;
  (%160, %161)
}

def @func_15072() -> (Tensor[(10, 12, 15), float32],) {
  %162 = @func_5053() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %163 = %162.0;
  (%163,)
}

def @func_11198() -> (uint8, Tensor[(10, 12, 15), float32]) {
  %164 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %165 = %164.0;
  %166 = @func_3295() /* ty=Tensor[(10, 12, 15), float32] */;
  (%165, %166)
}

def @func_19640(%var_19634: uint8) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8], uint8, Tensor[(189), uint8]) {
  %167 = @func_6766() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %168 = @func_8277() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %169 = cast(%var_19634, dtype="uint8") /* ty=uint8 */;
  %170 = cast(meta[relay.Constant][9] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %171 = reshape(%169, newshape=[]) /* ty=uint8 */;
  %172 = reshape(%170, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %173 = @func_3083(%171, %172) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189), uint8]) */;
  %174 = %167.1;
  %175 = %168.0;
  %176 = %173.4;
  (%174, %175, %176, %var_19634, meta[relay.Constant][9] /* ty=Tensor[(189), uint8] */)
}

def @func_11783() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %177 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %178 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %179 = %177.1;
  %180 = %178.0;
  (%179, %180)
}

def @func_1226(%var_1218: uint8, %var_1219: Tensor[(7, 9, 3), uint8]) -> (Tensor[(7, 9, 3), uint8],) {
  %181 = cast(%var_1218, dtype="uint8") /* ty=uint8 */;
  %182 = cast(%var_1219, dtype="uint8") /* ty=Tensor[(7, 9, 3), uint8] */;
  %183 = logical_xor(%181, %182) /* ty=Tensor[(7, 9, 3), uint8] */;
  (%183,)
}

def @func_18367() -> Tensor[(336), float64] {
  %184 = @func_3766() /* ty=(Tensor[(336), float64],) */;
  %184.0
}

def @func_20356() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %185 = @func_7148() /* ty=(Tensor[(10, 12, 15), float32], uint8) */;
  %186 = @func_8061() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %187 = %185.0;
  %188 = %186.0;
  (%187, %188)
}

def @func_4550() -> Tensor[(10, 12, 15), float32] {
  @func_4067() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_20948() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %189 = @func_15247() /* ty=Tensor[(10, 12, 15), float32] */;
  %190 = @func_15026() /* ty=Tensor[(10, 12, 15), float32] */;
  (%189, %190)
}

def @func_16715(%var_16710: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(189, 1), uint8]) {
  %191 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %192 = @func_6464() /* ty=(Tensor[(336), float64], uint8) */;
  %193 = cast(%var_16710, dtype="uint8") /* ty=Tensor[(189, 1), uint8] */;
  %194 = reshape(%193, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
  %195 = @func_4847(%194) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(189, 1), uint8]) */;
  %196 = %191.0;
  %197 = %192.1;
  %198 = %195.0;
  (%196, %197, %198, %var_16710)
}

def @func_9687() -> (Tensor[(10, 12, 15), float32],) {
  %199 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  (%199,)
}

def @func_18696() -> Tensor[(336), float64] {
  %200 = @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %200.1
}

def @func_13698() -> (Tensor[(14, 8, 3), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %201 = @func_2950() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */;
  %202 = @func_6975() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) */;
  %203 = %201.1;
  %204 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %205 = %202.1;
  (%203, %204, %205)
}

def @func_3671() -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %206 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %207 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %208 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %209 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %210 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %211 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %212 = %206.0;
  %213 = %207.0;
  %214 = %208.2;
  %215 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %216 = %209.0;
  %217 = %210.0;
  %218 = %211.0;
  (%212, %213, %214, %215, %216, %217, %218)
}

def @func_1412() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %219 = cast(meta[relay.Constant][10] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %220 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 12, 15), uint64] */, dtype="uint64") /* ty=Tensor[(10, 12, 15), uint64] */;
  %221 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 12, 15), uint64] */, dtype="float32") /* ty=Tensor[(10, 12, 15), float32] */;
  %222 = cast(meta[relay.Constant][10] /* ty=uint64 */, dtype="float32") /* ty=float32 */;
  %223 = right_shift(%219, %220) /* ty=Tensor[(10, 12, 15), uint64] */;
  %224 = floor_mod(%221, %222) /* ty=Tensor[(10, 12, 15), float32] */;
  (%223, %224)
}

def @func_20284() -> Tensor[(10, 12, 15), float32] {
  %225 = @func_12473() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %225.0
}

def @func_7818() -> (Tensor[(10, 12, 15), float32],) {
  %226 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %227 = %226.0;
  (%227,)
}

def @func_5183() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %228 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %229 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %230 = %228.0;
  %231 = %229.0;
  (%230, %231)
}

def @func_15544() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %232 = @func_3472() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %233 = @func_3421() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %234 = @func_12267() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %235 = %232.0;
  %236 = %233.1;
  %237 = %234.0;
  (%235, %236, %237)
}

def @func_6876() -> Tensor[(10, 12, 15), float32] {
  %238 = @func_3762() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %238.0
}

def @func_17123(%var_17101: Tensor[(12, 12, 1), float64]) -> (Tensor[(12, 12, 1), float64], Tensor[(10, 12, 15), float32]) {
  %239 = cast(%var_17101, dtype="float64") /* ty=Tensor[(12, 12, 1), float64] */;
  %240 = erf(%239) /* ty=Tensor[(12, 12, 1), float64] */;
  %241 = cast(%240, dtype="float64") /* ty=Tensor[(12, 12, 1), float64] */;
  %242 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %243 = tan(%241) /* ty=Tensor[(12, 12, 1), float64] */;
  %244 = %242.0;
  (%243, %244)
}

def @func_1612(%var_1558: Tensor[(378), float64], %var_1563: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) {
  %245 = cast(%var_1558, dtype="float64") /* ty=Tensor[(378), float64] */;
  %246 = reshape(%245, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), float64] */;
  %247 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %248 = cast(meta[relay.Constant][13] /* ty=Tensor[(21, 9), uint8] */, dtype="uint8") /* ty=Tensor[(21, 9), uint8] */;
  %249 = reshape(%247, newshape=[]) /* ty=uint8 */;
  %250 = reshape(%248, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
  %251 = @func_1226(%249, %250) /* ty=(Tensor[(7, 9, 3), uint8],) */;
  %252 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %253 = cast(%var_1558, dtype="float64") /* ty=Tensor[(378), float64] */;
  %254 = reshape(%253, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), float64] */;
  %255 = cast(%var_1563, dtype="float64") /* ty=Tensor[(336), float64] */;
  %256 = reshape(%255, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %257 = @func_333(%256) /* ty=Tensor[(14, 8, 3), float64] */;
  %258 = cast(%257, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
  %259 = asin(%258) /* ty=Tensor[(14, 8, 3), float64] */;
  %260 = cast(%259, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
  %261 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
  %262 = @func_170(%246) /* ty=Tensor[(9, 7, 6), float64] */;
  %263 = %251.0;
  %264 = %252.1;
  %265 = @func_170(%254) /* ty=Tensor[(9, 7, 6), float64] */;
  %266 = rsqrt(%260) /* ty=Tensor[(14, 8, 3), float64] */;
  (%261, %262, %var_1558, %var_1563, %263, meta[relay.Constant][12] /* ty=uint8 */, meta[relay.Constant][13] /* ty=Tensor[(21, 9), uint8] */, %264, %265, %266)
}

def @func_17511() -> Tensor[(10, 12, 15), float32] {
  %267 = @func_7818() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %267.0
}

def @func_1720() -> (Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) {
  %268 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(10, 12, 15), float64] */;
  %270 = cast(meta[relay.Constant][14] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %271 = cast(meta[relay.Constant][15] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %272 = reshape(%270, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %273 = reshape(%271, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %274 = @func_1612(%272, %273) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %275 = erf(%269) /* ty=Tensor[(10, 12, 15), float64] */;
  %276 = %274.5;
  (%275, %276, meta[relay.Constant][14] /* ty=Tensor[(378), float64] */, meta[relay.Constant][15] /* ty=Tensor[(336), float64] */)
}

def @func_19520(%var_19496: Tensor[(8, 13, 14), float32], %var_19515: Tensor[(15, 10, 3), float64]) -> (Tensor[(8, 13, 14), float32], Tensor[(168), int16], Tensor[(15, 10, 3), int16]) {
  %277 = cast(%var_19496, dtype="float32") /* ty=Tensor[(8, 13, 14), float32] */;
  %278 = cast(meta[relay.Constant][16] /* ty=Tensor[(168), int16] */, dtype="int16") /* ty=Tensor[(168), int16] */;
  %279 = reshape(%278, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int16] */;
  %280 = @func_6319(%279) /* ty=(Tensor[(4, 6, 7), int16], Tensor[(15, 10, 3), float64]) */;
  %281 = %280.1;
  %282 = cast(%var_19515, dtype="int16") /* ty=Tensor[(15, 10, 3), int16] */;
  %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%281, dtype="int16") /* ty=Tensor[(15, 10, 3), int16] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %286 = atanh(%277) /* ty=Tensor[(8, 13, 14), float32] */;
  %287 = right_shift(%284, %285) /* ty=Tensor[(15, 10, 3), int16] */;
  (%286, meta[relay.Constant][16] /* ty=Tensor[(168), int16] */, %287)
}

def @func_7657() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %288 = @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %289 = @func_6229() /* ty=Tensor[(10, 12, 15), uint64] */;
  %290 = %288.0;
  (%289, %290)
}

def @func_16353() -> (Tensor[(14, 14, 3), float64],) {
  %291 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 14, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 3), float32] */;
  %292 = tan(%291) /* ty=Tensor[(14, 14, 3), float32] */;
  %293 = cast(%292, dtype="float64") /* ty=Tensor[(14, 14, 3), float64] */;
  %294 = cosh(%293) /* ty=Tensor[(14, 14, 3), float64] */;
  (%294,)
}

def @func_12613() -> uint8 {
  @func_10355() /* ty=uint8 */
}

def @func_17419() -> Tensor[(10, 12, 15), uint64] {
  @func_13718() /* ty=Tensor[(10, 12, 15), uint64] */
}

def @func_17624() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %295 = @func_7915() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %296 = @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %297 = @func_6724() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %298 = %295.1;
  %299 = @func_6201() /* ty=Tensor[(10, 12, 15), float32] */;
  %300 = %296.0;
  %301 = %297.1;
  (%298, %299, %300, %301)
}

def @func_14015() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %302 = @func_11984() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %303 = @func_3238() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %304 = %302.1;
  %305 = %303.0;
  (%304, %305)
}

def @func_2195() -> (Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) {
  %306 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %307 = %306.1;
  %308 = cast(%307, dtype="float64") /* ty=Tensor[(10, 12, 15), float64] */;
  %309 = cast(meta[relay.Constant][18] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %310 = cast(meta[relay.Constant][19] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %311 = reshape(%309, newshape=[]) /* ty=uint8 */;
  %312 = reshape(%310, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
  %313 = @func_1932(%311, %312) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) */;
  %314 = acosh(%308) /* ty=Tensor[(10, 12, 15), float64] */;
  %315 = %313.3;
  (%314, %315, meta[relay.Constant][18] /* ty=uint8 */, meta[relay.Constant][19] /* ty=Tensor[(189), uint8] */)
}

def @func_13718() -> Tensor[(10, 12, 15), uint64] {
  %316 = @func_11719() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(99), float32]) */;
  %316.0
}

def @func_16470() -> (Tensor[(10, 12, 15), float32],) {
  %317 = @func_4776() /* ty=Tensor[(10, 12, 15), float32] */;
  (%317,)
}

def @func_19123(%var_19116: Tensor[(42, 4), int16]) -> (Tensor[(10, 12, 15), float32], Tensor[(4, 6, 7), int16], Tensor[(42, 4), int16]) {
  %318 = @func_6011() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %319 = cast(%var_19116, dtype="int16") /* ty=Tensor[(42, 4), int16] */;
  %320 = reshape(%319, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int16] */;
  %321 = @func_6319(%320) /* ty=(Tensor[(4, 6, 7), int16], Tensor[(15, 10, 3), float64]) */;
  %322 = %318.2;
  %323 = %321.0;
  (%322, %323, %var_19116)
}

def @func_7611(%var_7602: Tensor[(378), float64], %var_7603: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) {
  %324 = @func_5946() /* ty=Tensor[(10, 12, 15), float32] */;
  %325 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
  %326 = cast(%325, dtype="bool") /* ty=Tensor[(10, 12, 15), bool] */;
  %327 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%324, dtype="bool") /* ty=Tensor[(10, 12, 15), bool] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %330 = cast(%var_7602, dtype="float64") /* ty=Tensor[(378), float64] */;
  %331 = cast(%var_7603, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %332 = reshape(%330, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %333 = reshape(%331, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %334 = @func_4940(%332, %333) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
  %335 = not_equal(%328, %329) /* ty=Tensor[(10, 12, 15), bool] */;
  %336 = %334.1;
  %337 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
  (%335, %336, %var_7602, %var_7603, %337)
}

def @func_20040() -> Tensor[(10, 12, 15), float32] {
  %338 = @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %338.0
}

def @func_14002() -> uint8 {
  @func_10597() /* ty=uint8 */
}

def @func_13108() -> Tensor[(10, 12, 15), float32] {
  %339 = @func_9128() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %339.0
}

def @func_5053() -> (Tensor[(10, 12, 15), float32],) {
  %340 = @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %341 = %340.0;
  (%341,)
}

def @func_2290() -> (Tensor[(10, 12, 15), float32],) {
  %342 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %343 = %342.0;
  (%343,)
}

def @func_10496(%var_10477: Tensor[(11), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(11), float32]) {
  %344 = @func_7379() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %345 = cast(%var_10477, dtype="float32") /* ty=Tensor[(11), float32] */;
  %346 = reshape(%345, newshape=[1, 1, 11]) /* ty=Tensor[(1, 1, 11), float32] */;
  %347 = @func_7027(%346) /* ty=(Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) */;
  %348 = %344.0;
  %349 = %347.1;
  (%348, %349, %var_10477)
}

def @func_1689() -> (Tensor[(10, 12, 15), float32],) {
  %350 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %351 = %350.1;
  (%351,)
}

def @func_16808() -> (Tensor[(336), float64], Tensor[(14, 8, 3), float64]) {
  %352 = @func_15916() /* ty=(Tensor[(336), float64],) */;
  %353 = %352.0;
  %354 = cast(%353, dtype="float64") /* ty=Tensor[(336), float64] */;
  %355 = reshape(%354, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %356 = @func_333(%355) /* ty=Tensor[(14, 8, 3), float64] */;
  (%353, %356)
}

def @func_6996() -> (Tensor[(10, 12, 15), float32],) {
  %357 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  (%357,)
}

def @func_7176(%var_7159: Tensor[(378), float64], %var_7160: Tensor[(336, 1), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64]) {
  %358 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %359 = cast(%var_7159, dtype="float64") /* ty=Tensor[(378), float64] */;
  %360 = cast(%var_7160, dtype="float64") /* ty=Tensor[(336, 1), float64] */;
  %361 = reshape(%359, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %362 = reshape(%360, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %363 = @func_1612(%361, %362) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %364 = cast(%var_7160, dtype="uint64") /* ty=Tensor[(336, 1), uint64] */;
  %365 = cast(%var_7159, dtype="uint64") /* ty=Tensor[(378), uint64] */;
  %366 = %358.1;
  %367 = %363.7;
  %368 = add(%364, %365) /* ty=Tensor[(336, 378), uint64] */;
  (%366, %367, %368)
}

def @func_21231() -> Tensor[(10, 12, 15), float32] {
  %369 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %369.1
}

def @func_8784(%var_8749: Tensor[(1, 378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(1, 378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
  %370 = cast(%var_8749, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
  %371 = reshape(%370, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %372 = @func_4423(%371) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */;
  %373 = %372.1;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(378), float64] */;
  %375 = cast(meta[relay.Constant][20] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %376 = reshape(%374, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %377 = reshape(%375, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %378 = @func_7611(%376, %377) /* ty=(Tensor[(10, 12, 15), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) */;
  %379 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  %380 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
  %381 = %378.1;
  (%379, %373, %var_8749, %380, %381, meta[relay.Constant][20] /* ty=Tensor[(189), uint8] */)
}

def @func_11269() -> (Tensor[(10, 12, 15), float32],) {
  %382 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %383 = %382.0;
  (%383,)
}

def @func_7249() -> (Tensor[(10, 12, 15), float32],) {
  %384 = @func_2489() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %385 = %384.0;
  (%385,)
}

def @func_5946() -> Tensor[(10, 12, 15), float32] {
  @func_3295() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_19260() -> (Tensor[(10, 12, 15), float32], uint8) {
  %386 = @func_6106() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(910), int64], Tensor[(10, 12, 15), float32]) */;
  %387 = @func_18215() /* ty=(uint8,) */;
  %388 = %386.2;
  %389 = %387.0;
  (%388, %389)
}

def @func_20744() -> (Tensor[(10, 12, 15), float32],) {
  %390 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  (%390,)
}

def @func_2581() -> Tensor[(10, 12, 15), float32] {
  @func_1887() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_6011() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %391 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %392 = @func_2679() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) */;
  %393 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %394 = %391.0;
  %395 = %392.0;
  %396 = %393.1;
  (%394, %395, %396)
}

def @func_6596() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) {
  %397 = @func_3766() /* ty=(Tensor[(336), float64],) */;
  %398 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %399 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %400 = %397.0;
  %401 = %398.2;
  %402 = %399.0;
  (%400, %401, %402)
}

def @func_1932(%var_1918: uint8, %var_1919: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) {
  %403 = cast(%var_1918, dtype="uint8") /* ty=uint8 */;
  %404 = cast(%var_1919, dtype="uint8") /* ty=Tensor[(189, 1), uint8] */;
  %405 = reshape(%403, newshape=[]) /* ty=uint8 */;
  %406 = reshape(%404, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
  %407 = @func_1226(%405, %406) /* ty=(Tensor[(7, 9, 3), uint8],) */;
  %408 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
  %409 = %407.0;
  (%408, %409, %var_1918, %var_1919)
}

def @func_11058() -> Tensor[(15, 9, 16), bool] {
  %410 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 9, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %411 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(15, 9, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 9, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%412, %413) /* ty=Tensor[(15, 9, 16), bool] */
}

def @func_7567() -> Tensor[(10, 12, 15), float32] {
  @func_1887() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_2035(%var_1987: Tensor[(6, 14, 7), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) {
  %414 = cast(%var_1987, dtype="float32") /* ty=Tensor[(6, 14, 7), float32] */;
  %415 = log10(%414) /* ty=Tensor[(6, 14, 7), float32] */;
  %416 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %417 = %416.1;
  %418 = cast(%415, dtype="float64") /* ty=Tensor[(6, 14, 7), float64] */;
  %419 = cast(%417, dtype="float64") /* ty=float64 */;
  %420 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %421 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  %422 = floor_divide(%418, %419) /* ty=Tensor[(6, 14, 7), float64] */;
  %423 = %420.1;
  (%421, %422, %423)
}

def @func_9847() -> Tensor[(15, 10, 3), float64] {
  %424 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %425 = %424.0;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  log(%426) /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_8025(%var_7981: Tensor[(378), float64], %var_7982: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(189), uint8]) {
  %427 = @func_7222() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %428 = cast(%var_7981, dtype="float64") /* ty=Tensor[(378), float64] */;
  %429 = cast(%var_7982, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %430 = reshape(%428, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %431 = reshape(%429, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %432 = @func_7611(%430, %431) /* ty=(Tensor[(10, 12, 15), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) */;
  %433 = @func_2950() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */;
  %434 = cast(%var_7982, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %435 = reshape(%434, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %436 = @func_3374(%435) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, uint8, Tensor[(189), uint8]) */;
  %437 = %427.0;
  %438 = %432.4;
  %439 = @func_6201() /* ty=Tensor[(10, 12, 15), float32] */;
  %440 = %433.1;
  %441 = %436.4;
  (%437, %438, %var_7981, %var_7982, %439, %440, %441)
}

def @func_4724() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32]) {
  %442 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %443 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %444 = @func_2258() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %445 = %442.0;
  %446 = %443.0;
  %447 = %444.0;
  (%445, %446, %447)
}

def @func_4662() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %448 = @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %449 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
  %450 = %448.1;
  (%449, %450)
}

def @func_15287() -> (Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) {
  %451 = @func_11058() /* ty=Tensor[(15, 9, 16), bool] */;
  %452 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  (%451, %452)
}

def @func_7306() -> Tensor[(10, 12, 15), float32] {
  %453 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %453.0
}

def @func_15685() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %454 = @func_10151() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %455 = @func_11248() /* ty=Tensor[(10, 12, 15), float32] */;
  %456 = @func_10291() /* ty=Tensor[(10, 12, 15), float32] */;
  %457 = %454.0;
  (%455, %456, %457)
}

def @func_9990() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
  %458 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %459 = @func_8394() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) */;
  %460 = @func_8359() /* ty=Tensor[(10, 12, 15), float32] */;
  %461 = %458.0;
  %462 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  %463 = %459.4;
  (%460, %461, %462, %463)
}

def @func_7232() -> Tensor[(10, 12, 15), float32] {
  @func_3717() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10251() -> (Tensor[(784), int64], Tensor[(10, 12, 15), float32]) {
  %464 = @func_7064() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */;
  %465 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %466 = %464.3;
  %467 = %465.0;
  (%466, %467)
}

def @func_12149(%var_12124: bool, %var_12125: Tensor[(12, 4, 6), bool], %var_12134: Tensor[(378), float64]) -> (Tensor[(12, 4, 6), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8]) {
  %468 = cast(%var_12124, dtype="bool") /* ty=bool */;
  %469 = cast(%var_12125, dtype="bool") /* ty=Tensor[(12, 4, 6), bool] */;
  %470 = cast(%var_12134, dtype="float64") /* ty=Tensor[(378), float64] */;
  %471 = cast(meta[relay.Constant][23] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %472 = reshape(%470, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %473 = reshape(%471, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %474 = @func_4940(%472, %473) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
  %475 = logical_and(%468, %469) /* ty=Tensor[(12, 4, 6), bool] */;
  %476 = %474.2;
  (%475, %476, %var_12134, meta[relay.Constant][23] /* ty=Tensor[(189), uint8] */)
}

def @func_12321() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %477 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %478 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %479 = %477.0;
  %480 = %478.0;
  %481 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  (%479, %480, %481)
}

def @func_19385() -> (Tensor[(10, 12, 15), float32],) {
  %482 = @func_15072() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %483 = %482.0;
  (%483,)
}

def @func_8522(%var_8499: float64, %var_8500: Tensor[(2, 1, 16), float64]) -> (Tensor[(2, 1, 16), bool], Tensor[(2, ?, 16), uint64]) {
  %484 = cast(%var_8500, dtype="bool") /* ty=Tensor[(2, 1, 16), bool] */;
  %485 = cast(%var_8499, dtype="bool") /* ty=bool */;
  %486 = cast(%var_8499, dtype="bool") /* ty=bool */;
  %487 = cast(%var_8500, dtype="bool") /* ty=Tensor[(2, 1, 16), bool] */;
  %488 = greater_equal(%486, %487) /* ty=Tensor[(2, 1, 16), bool] */;
  %489 = cast(%488, dtype="float64") /* ty=Tensor[(2, 1, 16), float64] */;
  %490 = atanh(%489) /* ty=Tensor[(2, 1, 16), float64] */;
  %491 = cast(%488, dtype="uint64") /* ty=Tensor[(2, 1, 16), uint64] */;
  %492 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%490, dtype="uint64") /* ty=Tensor[(2, 1, 16), uint64] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %495 = not_equal(%484, %485) /* ty=Tensor[(2, 1, 16), bool] */;
  %496 = subtract(%493, %494) /* ty=Tensor[(2, ?, 16), uint64] */;
  (%495, %496)
}

def @func_17326() -> uint8 {
  @func_10597() /* ty=uint8 */
}

def @func_21679() -> (Tensor[(2, 10, 12), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %497 = @func_15857() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %498 = @func_10161() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %499 = %497.0;
  %500 = %498.0;
  %501 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
  (%499, %500, %501)
}

def @func_13425() -> Tensor[(10, 12, 15), float32] {
  @func_11248() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_18720() -> (Tensor[(10, 12, 15), float32],) {
  %502 = @func_9727() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %503 = %502.0;
  (%503,)
}

def @func_17746() -> (Tensor[(336), float64],) {
  %504 = @func_3766() /* ty=(Tensor[(336), float64],) */;
  %505 = %504.0;
  (%505,)
}

def @func_2986() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) {
  %506 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %507 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %508 = cast(meta[relay.Constant][24] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %509 = reshape(%508, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %510 = @func_2035(%509) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) */;
  %511 = %506.3;
  %512 = %507.1;
  %513 = %510.2;
  (%511, %512, %513, meta[relay.Constant][24] /* ty=Tensor[(588), float32] */)
}

def @func_3035() -> Tensor[(336), float64] {
  %514 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %514.3
}

def @func_10577(%var_10542: Tensor[(189), uint8], %var_10553: Tensor[(189), uint8], %var_10566: Tensor[(378, 1), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(189), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(378, 1), float64], Tensor[(10, 12, 15), float32]) {
  %515 = @func_6996() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %516 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %517 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %518 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %519 = cast(%var_10542, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %520 = reshape(%519, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
  %521 = @func_4847(%520) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(189, 1), uint8]) */;
  %522 = @func_9990() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
  %523 = cast(%var_10553, dtype="bool") /* ty=Tensor[(189), bool] */;
  %524 = shape_of(%var_10542, dtype="int32") /* ty=Tensor[(1), int32] */;
  %525 = cast(%var_10542, dtype="bool") /* ty=Tensor[(189), bool] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?), bool] */;
  %527 = @func_10058() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %528 = cast(%var_10566, dtype="float64") /* ty=Tensor[(378, 1), float64] */;
  %529 = reshape(%528, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %530 = @func_8936(%529) /* ty=(Tensor[(16, 12, 12), uint16], Tensor[(336), float64], Tensor[(378), float64]) */;
  %531 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %532 = %515.0;
  %533 = %516.0;
  %534 = %517.1;
  %535 = %518.0;
  %536 = %521.1;
  %537 = %522.1;
  %538 = less(%525, %526) /* ty=Tensor[(189), bool] */;
  %539 = %527.0;
  %540 = %530.2;
  %541 = %531.1;
  (%532, %533, %534, %535, %536, %537, %538, %539, %540, %var_10566, %541)
}

def @func_18961() -> (Tensor[(336), float64], Tensor[(784), int64]) {
  %542 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %543 = @func_15156() /* ty=(Tensor[(784), int64],) */;
  %544 = %542.0;
  %545 = %543.0;
  (%544, %545)
}

def @func_4153() -> (Tensor[(10, 12, 15), float32],) {
  %546 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  (%546,)
}

def @func_16877() -> uint8 {
  @func_14002() /* ty=uint8 */
}

def @func_11418(%var_11392: Tensor[(42, 9), float64], %var_11397: Tensor[(15, 9, 16), bool]) -> (Tensor[(336), float64], Tensor[(336), float64], Tensor[(1, 378), float64], Tensor[(42, 9), float64], Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) {
  %547 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %548 = cast(%var_11392, dtype="float64") /* ty=Tensor[(42, 9), float64] */;
  %549 = reshape(%548, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
  %550 = @func_8784(%549) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(1, 378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
  %551 = @func_11058() /* ty=Tensor[(15, 9, 16), bool] */;
  %552 = cast(%var_11397, dtype="float64") /* ty=Tensor[(15, 9, 16), float64] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="float64") /* ty=Tensor[(15, 9, 16), float64] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %556 = @func_4276() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %557 = @func_3035() /* ty=Tensor[(336), float64] */;
  %558 = %547.0;
  %559 = %550.2;
  %560 = power(%554, %555) /* ty=Tensor[(15, 9, 16), float64] */;
  %561 = %556.0;
  (%557, %558, %559, %var_11392, %560, %561)
}

def @func_21810() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %562 = @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %563 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  %564 = %562.1;
  (%563, %564)
}

def @func_4688() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %565 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %566 = @func_2258() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %567 = @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %568 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %569 = %565.0;
  %570 = %566.0;
  %571 = %567.1;
  %572 = %568.0;
  (%569, %570, %571, %572)
}

def @func_7064() -> (Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) {
  %573 = cast(meta[relay.Constant][25] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %574 = cast(meta[relay.Constant][26] /* ty=Tensor[(784), int64] */, dtype="int64") /* ty=Tensor[(784), int64] */;
  %575 = reshape(%573, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %576 = reshape(%574, newshape=[1, 784]) /* ty=Tensor[(1, 784), int64] */;
  %577 = @func_5581(%575, %576) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(588), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(?, 784), bool], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(14, 8, 3), float64]) */;
  %578 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  %579 = %577.9;
  (%578, %579, meta[relay.Constant][25] /* ty=Tensor[(588), float32] */, meta[relay.Constant][26] /* ty=Tensor[(784), int64] */)
}

def @func_16561() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8) {
  %580 = @func_11719() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(99), float32]) */;
  %581 = @func_16076() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %582 = @func_13278() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) */;
  %583 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  %584 = %580.0;
  %585 = @func_7567() /* ty=Tensor[(10, 12, 15), float32] */;
  %586 = @func_13766() /* ty=Tensor[(10, 12, 15), float32] */;
  %587 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
  %588 = %581.0;
  %589 = %582.2;
  (%583, %584, %585, %586, %587, %588, %589)
}

def @func_11914() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %590 = @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %591 = %590.0;
  %592 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  (%591, %592)
}

def @func_2449(%var_2410: Tensor[(3, 126), float64], %var_2411: Tensor[(336), float64], %var_2415: Tensor[(3, 126), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], Tensor[(3, 126), int64], Tensor[(10, 12, 15), float32]) {
  %593 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %594 = cast(%var_2410, dtype="float64") /* ty=Tensor[(3, 126), float64] */;
  %595 = cast(%var_2411, dtype="float64") /* ty=Tensor[(336), float64] */;
  %596 = reshape(%594, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %597 = reshape(%595, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %598 = @func_1612(%596, %597) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %599 = cast(meta[relay.Constant][27] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %600 = %598.6;
  %601 = cast(%600, dtype="uint8") /* ty=Tensor[(21, 9), uint8] */;
  %602 = reshape(%599, newshape=[]) /* ty=uint8 */;
  %603 = reshape(%601, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
  %604 = @func_1226(%602, %603) /* ty=(Tensor[(7, 9, 3), uint8],) */;
  %605 = cast(%var_2415, dtype="bool") /* ty=Tensor[(3, 126), bool] */;
  %606 = shape_of(%var_2410, dtype="int32") /* ty=Tensor[(2), int32] */;
  %607 = cast(%var_2410, dtype="bool") /* ty=Tensor[(3, 126), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %609 = logical_and(%607, %608) /* ty=Tensor[(3, 126), bool] */;
  %610 = cast(%609, dtype="int64") /* ty=Tensor[(3, 126), int64] */;
  %611 = cast(meta[relay.Constant][27] /* ty=uint8 */, dtype="int64") /* ty=int64 */;
  %612 = %593.0;
  %613 = %604.0;
  %614 = left_shift(%610, %611) /* ty=Tensor[(3, 126), int64] */;
  %615 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  (%612, %600, %var_2411, %613, %614, %615)
}

def @func_21455() -> (Tensor[(10, 12, 15), float32],) {
  %616 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %617 = %616.2;
  (%617,)
}

def @func_4776() -> Tensor[(10, 12, 15), float32] {
  %618 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %618.0
}

def @func_10291() -> Tensor[(10, 12, 15), float32] {
  @func_3536() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_6975() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) {
  %619 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %620 = @func_2489() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %621 = %619.0;
  %622 = %620.1;
  (%621, %622)
}

def @func_2150() -> (Tensor[(10, 12, 15), float32],) {
  %623 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %624 = %623.1;
  (%624,)
}

def @func_18540() -> Tensor[(10, 12, 15), float32] {
  %625 = @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %625.0
}

def @func_6201() -> Tensor[(10, 12, 15), float32] {
  %626 = @func_5053() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %626.0
}

def @func_3374(%var_3370: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, uint8, Tensor[(189), uint8]) {
  %627 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %628 = %627.1;
  %629 = cast(%628, dtype="float32") /* ty=Tensor[(10, 12, 15), float32] */;
  %630 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %631 = cast(%var_3370, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %632 = reshape(%630, newshape=[]) /* ty=uint8 */;
  %633 = reshape(%631, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %634 = @func_3083(%632, %633) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189), uint8]) */;
  %635 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  %636 = exp(%629) /* ty=Tensor[(10, 12, 15), float32] */;
  %637 = %634.3;
  (%635, %636, %637, meta[relay.Constant][28] /* ty=uint8 */, %var_3370)
}

def @func_13766() -> Tensor[(10, 12, 15), float32] {
  %638 = @func_10151() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %638.0
}

def @func_9376(%var_9323: Tensor[(378, 1), float64], %var_9324: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(378, 189), int64], Tensor[(10, 12, 15), float32]) {
  %639 = @func_6766() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %640 = cast(%var_9323, dtype="float64") /* ty=Tensor[(378, 1), float64] */;
  %641 = cast(%var_9324, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %642 = reshape(%640, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %643 = reshape(%641, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %644 = @func_8025(%642, %643) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(189), uint8]) */;
  %645 = @func_8061() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %646 = cast(%var_9323, dtype="int64") /* ty=Tensor[(378, 1), int64] */;
  %647 = cast(%var_9324, dtype="int64") /* ty=Tensor[(189), int64] */;
  %648 = @func_4662() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %649 = %639.0;
  %650 = %644.2;
  %651 = %645.0;
  %652 = subtract(%646, %647) /* ty=Tensor[(378, 189), int64] */;
  %653 = %648.0;
  (%649, %650, %651, %652, %653)
}

def @func_3181() -> (Tensor[(10, 12, 15), float32],) {
  %654 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  (%654,)
}

def @func_16931() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %655 = @func_15842() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %656 = @func_15003() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %657 = %655.0;
  %658 = %656.0;
  (%657, %658)
}

def @func_14203(%var_14178: Tensor[(99), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32], Tensor[(1, 9, 11), float32], Tensor[(99), float32], Tensor[(336), float64], Tensor[(1, 378), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %659 = @func_11015() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %660 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 378), float64] */, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
  %661 = reshape(%660, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %662 = @func_12588(%661) /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float64], Tensor[(336), float64], Tensor[(378), float64]) */;
  %663 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 378), float64] */, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
  %664 = reshape(%663, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
  %665 = @func_8784(%664) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(1, 378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
  %666 = cast(%var_14178, dtype="float32") /* ty=Tensor[(99), float32] */;
  %667 = reshape(%666, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), float32] */;
  %668 = @func_11642(%667) /* ty=(Tensor[(1, 9, 11), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %669 = @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %670 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 378), float64] */, dtype="float32") /* ty=Tensor[(1, 378), float32] */;
  %671 = %659.0;
  %672 = %662.1;
  %673 = %665.4;
  %674 = %668.0;
  %675 = %669.1;
  %676 = acos(%670) /* ty=Tensor[(1, 378), float32] */;
  %677 = @func_3295() /* ty=Tensor[(10, 12, 15), float32] */;
  %678 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  (%671, %672, %673, %674, %var_14178, %675, %676, %677, %678)
}

def @func_19139(%var_19128: Tensor[(8, 11, 15), float32], %var_19129: Tensor[(8, 11, 15), float32]) -> Tensor[(8, 11, 15), float32] {
  %679 = cast(%var_19129, dtype="float32") /* ty=Tensor[(8, 11, 15), float32] */;
  %680 = shape_of(%var_19128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_19128, dtype="float32") /* ty=Tensor[(8, 11, 15), float32] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%681, %682) /* ty=Tensor[(8, 11, 15), float32] */
}

def @func_8061() -> (Tensor[(10, 12, 15), float32],) {
  %683 = @func_6996() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %684 = %683.0;
  (%684,)
}

def @func_8936(%var_8932: Tensor[(378), float64]) -> (Tensor[(16, 12, 12), uint16], Tensor[(336), float64], Tensor[(378), float64]) {
  %685 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 12, 12), uint16] */, dtype="uint16") /* ty=Tensor[(16, 12, 12), uint16] */;
  %686 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(16, 12, 12), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 12, 12), uint16] */, dtype="uint16") /* ty=Tensor[(16, 12, 12), uint16] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %689 = cast(%var_8932, dtype="float64") /* ty=Tensor[(378), float64] */;
  %690 = reshape(%689, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %691 = @func_4423(%690) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */;
  %692 = add(%687, %688) /* ty=Tensor[(16, 12, 12), uint16] */;
  %693 = %691.0;
  (%692, %693, %var_8932)
}

def @func_12267() -> (Tensor[(10, 12, 15), float32],) {
  %694 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %695 = %694.1;
  (%695,)
}

def @func_3295() -> Tensor[(10, 12, 15), float32] {
  %696 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %696.0
}

def @func_14108() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %697 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %698 = @func_11248() /* ty=Tensor[(10, 12, 15), float32] */;
  %699 = %697.0;
  (%698, %699)
}

def @func_20867() -> Tensor[(10, 12, 15), float32] {
  @func_20130() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_11015() -> (Tensor[(10, 12, 15), float32],) {
  %700 = @func_8731() /* ty=Tensor[(10, 12, 15), float32] */;
  (%700,)
}

def @func_7098() -> (Tensor[(10, 12, 15), float32],) {
  %701 = @func_6011() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %702 = %701.0;
  (%702,)
}

def @func_11806() -> Tensor[(10, 12, 15), float32] {
  @func_4550() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_19734() -> Tensor[(10, 12, 15), float32] {
  %703 = @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %703.1
}

def @func_4423(%var_4413: Tensor[(378), float64]) -> (Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) {
  %704 = @func_3930() /* ty=(Tensor[(336), float64],) */;
  %705 = cast(%var_4413, dtype="float64") /* ty=Tensor[(378), float64] */;
  %706 = reshape(%705, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %707 = @func_3999(%706) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), int16]) */;
  %708 = %707.1;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(378), float32] */;
  %710 = %704.0;
  %711 = acosh(%709) /* ty=Tensor[(378), float32] */;
  (%710, %var_4413, %711)
}

def @func_20921() -> Tensor[(10, 12, 15), float32] {
  %712 = @func_5962() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %712.0
}

def @func_10238() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %713 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %714 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %715 = @func_6229() /* ty=Tensor[(10, 12, 15), uint64] */;
  %716 = %713.0;
  %717 = %714.0;
  (%715, %716, %717)
}

def @func_7915() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %718 = @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %719 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %720 = @func_5183() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %721 = %718.0;
  %722 = %719.0;
  %723 = @func_5499() /* ty=Tensor[(10, 12, 15), float32] */;
  %724 = %720.1;
  (%721, %722, %723, %724)
}

def @func_2489() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %725 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %726 = %725.0;
  %727 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  (%726, %727)
}

def @func_13672() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %728 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %729 = @func_11914() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %730 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %731 = %728.0;
  %732 = %729.0;
  %733 = %730.3;
  (%731, %732, %733)
}

def @func_13035() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %734 = @func_12473() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %735 = @func_6876() /* ty=Tensor[(10, 12, 15), float32] */;
  %736 = %734.1;
  (%735, %736)
}

def @func_6561() -> (Tensor[(10, 12, 15), float32],) {
  %737 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %738 = %737.1;
  (%738,)
}

def @func_16944() -> Tensor[(4, 15, 13), float64] {
  %739 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 15, 13), float64] */, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  sigmoid(%739) /* ty=Tensor[(4, 15, 13), float64] */
}

def @func_13488() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %740 = @func_5962() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %741 = @func_8173() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %742 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %743 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %744 = %740.1;
  %745 = %741.0;
  %746 = %742.0;
  %747 = %743.0;
  (%744, %745, %746, %747)
}

def @func_21069() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %748 = @func_9687() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %749 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %750 = @func_14358() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %751 = @func_19609() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %752 = @func_2950() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */;
  %753 = @func_7114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %754 = %748.0;
  %755 = %749.0;
  %756 = %750.0;
  %757 = %751.1;
  %758 = %752.3;
  %759 = %753.0;
  (%754, %755, %756, %757, %758, %759)
}

def @func_4940(%var_4912: Tensor[(378), float64], %var_4934: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
  %760 = @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %761 = cast(%var_4912, dtype="float64") /* ty=Tensor[(378), float64] */;
  %762 = cast(meta[relay.Constant][33] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %763 = cast(%var_4912, dtype="float64") /* ty=Tensor[(378), float64] */;
  %764 = reshape(%761, newshape=[3, 126]) /* ty=Tensor[(3, 126), float64] */;
  %765 = reshape(%762, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %766 = reshape(%763, newshape=[3, 126]) /* ty=Tensor[(3, 126), float64] */;
  %767 = @func_2449(%764, %765, %766) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], Tensor[(3, 126), int64], Tensor[(10, 12, 15), float32]) */;
  %768 = @func_4662() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %769 = cast(%var_4934, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %770 = reshape(%769, newshape=[21, 9]) /* ty=Tensor[(21, 9), uint8] */;
  %771 = @func_2336(%770) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */;
  %772 = %760.0;
  %773 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  %774 = %767.5;
  %775 = %768.0;
  %776 = %771.4;
  (%772, %773, %774, %var_4912, meta[relay.Constant][33] /* ty=Tensor[(336), float64] */, %775, %776, %var_4934)
}

def @func_20428(%var_20395: Tensor[(9, 6, 9), float64]) -> (Tensor[(9, 6, 9), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  %777 = cast(%var_20395, dtype="float64") /* ty=Tensor[(9, 6, 9), float64] */;
  %778 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %779 = @func_16739() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %780 = cast(meta[relay.Constant][34] /* ty=Tensor[(784), int64] */, dtype="int64") /* ty=Tensor[(784), int64] */;
  %781 = reshape(%780, newshape=[784]) /* ty=Tensor[(784), int64] */;
  %782 = @func_12552(%781) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) */;
  %783 = log2(%777) /* ty=Tensor[(9, 6, 9), float64] */;
  %784 = %778.0;
  %785 = %779.1;
  %786 = @func_16877() /* ty=uint8 */;
  %787 = %782.4;
  (%783, %784, %785, %786, %787, meta[relay.Constant][34] /* ty=Tensor[(784), int64] */)
}

def @func_10797() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %788 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %789 = %788.0;
  %790 = @func_6201() /* ty=Tensor[(10, 12, 15), float32] */;
  (%789, %790)
}

def @func_10945() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  %791 = @func_7064() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */;
  %792 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  %793 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
  %794 = %791.3;
  (%792, %793, %794)
}

def @func_19849(%var_19827: Tensor[(13, 12, 10), bool]) -> (Tensor[(13, 12, 10), bool], Tensor[(13, 12, 10), float32], Tensor[(336), float64]) {
  %795 = cast(%var_19827, dtype="bool") /* ty=Tensor[(13, 12, 10), bool] */;
  %796 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(13, 12, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 12, 10), bool] */, dtype="bool") /* ty=Tensor[(13, 12, 10), bool] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %799 = cast(%var_19827, dtype="float32") /* ty=Tensor[(13, 12, 10), float32] */;
  %800 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %801 = logical_and(%797, %798) /* ty=Tensor[(13, 12, 10), bool] */;
  %802 = asinh(%799) /* ty=Tensor[(13, 12, 10), float32] */;
  %803 = %800.0;
  (%801, %802, %803)
}

def @func_15857() -> (Tensor[(2, 10, 12), float32],) {
  %804 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  %805 = sigmoid(%804) /* ty=Tensor[(2, 10, 12), float32] */;
  (%805,)
}

def @func_11890(%var_11881: Tensor[(378), float64], %var_11882: Tensor[(2160), bool]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(2160), bool]) {
  %806 = cast(%var_11881, dtype="float64") /* ty=Tensor[(378), float64] */;
  %807 = cast(%var_11882, dtype="bool") /* ty=Tensor[(2160), bool] */;
  %808 = reshape(%806, newshape=[42, 9]) /* ty=Tensor[(42, 9), float64] */;
  %809 = reshape(%807, newshape=[15, 9, 16]) /* ty=Tensor[(15, 9, 16), bool] */;
  %810 = @func_11418(%808, %809) /* ty=(Tensor[(336), float64], Tensor[(336), float64], Tensor[(1, 378), float64], Tensor[(42, 9), float64], Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) */;
  %811 = @func_3717() /* ty=Tensor[(10, 12, 15), float32] */;
  %812 = @func_3536() /* ty=Tensor[(10, 12, 15), float32] */;
  %813 = %810.1;
  (%811, %812, %813, %var_11881, %var_11882)
}

def @func_9745() -> Tensor[(10, 12, 15), float32] {
  %814 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %814.0
}

def @func_13156() -> (Tensor[(15, 9, 16), float64],) {
  %815 = @func_11058() /* ty=Tensor[(15, 9, 16), bool] */;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(15, 9, 16), float64] */;
  %817 = log(%816) /* ty=Tensor[(15, 9, 16), float64] */;
  (%817,)
}

def @func_7114() -> (Tensor[(10, 12, 15), float32],) {
  %818 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %819 = %818.0;
  (%819,)
}

def @func_2258() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %820 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %821 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %822 = %820.0;
  %823 = %821.0;
  (%822, %823)
}

def @func_8568() -> Tensor[(10, 12, 15), float32] {
  %824 = @func_7818() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %824.0
}

def @func_20590() -> (Tensor[(10, 12, 15), float32], Tensor[(2, 10, 12), float32]) {
  %825 = @func_15857() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %826 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  %827 = %825.0;
  (%826, %827)
}

def @func_16739() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %828 = @func_4079() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %829 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %830 = %828.0;
  %831 = %829.0;
  (%830, %831)
}

def @func_10114() -> (Tensor[(10, 12, 15), float32],) {
  %832 = @func_6996() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %833 = %832.0;
  (%833,)
}

def @func_3536() -> Tensor[(10, 12, 15), float32] {
  @func_2581() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_6846() -> Tensor[(10, 12, 15), float32] {
  %834 = @func_2679() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) */;
  %834.3
}

def @func_17984() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(14, 16, 2), int64], Tensor[(224, 2), float32], Tensor[(10, 12, 15), float32]) {
  %835 = @func_7287() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %836 = cast(meta[relay.Constant][37] /* ty=Tensor[(224, 2), float32] */, dtype="float32") /* ty=Tensor[(224, 2), float32] */;
  %837 = cast(meta[relay.Constant][37] /* ty=Tensor[(224, 2), float32] */, dtype="float32") /* ty=Tensor[(224, 2), float32] */;
  %838 = cast(meta[relay.Constant][37] /* ty=Tensor[(224, 2), float32] */, dtype="float32") /* ty=Tensor[(224, 2), float32] */;
  %839 = reshape(%836, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %840 = reshape(%837, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %841 = reshape(%838, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %842 = @func_13789(%839, %840, %841) /* ty=(Tensor[(14, 16, 2), float32], Tensor[(14, 16, 2), int64]) */;
  %843 = @func_8309() /* ty=Tensor[(10, 12, 15), float32] */;
  %844 = %835.0;
  %845 = @func_15247() /* ty=Tensor[(10, 12, 15), float32] */;
  %846 = %842.1;
  %847 = @func_7567() /* ty=Tensor[(10, 12, 15), float32] */;
  (%843, %844, %845, %846, meta[relay.Constant][37] /* ty=Tensor[(224, 2), float32] */, %847)
}

def @func_21528() -> (Tensor[(336), float64],) {
  %848 = @func_18696() /* ty=Tensor[(336), float64] */;
  (%848,)
}

def @func_10058() -> (Tensor[(10, 12, 15), float32],) {
  %849 = @func_4724() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32]) */;
  %850 = %849.2;
  (%850,)
}

def @func_18789() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %851 = @func_18720() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %852 = @func_9727() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %853 = %851.0;
  %854 = %852.0;
  (%853, %854)
}

def @func_8866(%var_8864: Tensor[(8, 98), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 98), int64]) {
  %855 = @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %856 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %857 = cast(%var_8864, dtype="int64") /* ty=Tensor[(8, 98), int64] */;
  %858 = cast(%var_8864, dtype="int64") /* ty=Tensor[(8, 98), int64] */;
  %859 = reshape(%857, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int64] */;
  %860 = reshape(%858, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int64] */;
  %861 = @func_5100(%859, %860) /* ty=(Tensor[(8, 7, 14), int64], Tensor[(10, 12, 15), float32]) */;
  %862 = %855.0;
  %863 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  %864 = %856.0;
  %865 = %861.1;
  (%862, %863, %864, %865, %var_8864)
}

def @func_10683() -> (Tensor[(15, 10, 3), float32], Tensor[(10, 12, 15), float32]) {
  %866 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %867 = %866.0;
  %868 = cast(%867, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %869 = sinh(%868) /* ty=Tensor[(15, 10, 3), float32] */;
  %870 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%869, %870)
}

def @func_8394() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) {
  %871 = @func_3421() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %872 = @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */;
  %873 = cast(meta[relay.Constant][38] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %874 = cast(meta[relay.Constant][39] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %875 = %871.1;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(10, 12, 15), float32] */;
  %877 = cast(meta[relay.Constant][40] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %878 = reshape(%873, newshape=[]) /* ty=uint8 */;
  %879 = reshape(%874, newshape=[1, 189]) /* ty=Tensor[(1, 189), uint8] */;
  %880 = reshape(%876, newshape=[10, 12, 15]) /* ty=Tensor[(10, 12, 15), float32] */;
  %881 = reshape(%877, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %882 = @func_3894(%878, %879, %880, %881) /* ty=(Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(?, 189), bool], Tensor[(10, 12, 15), uint64], Tensor[(14, 8, 3), float64], Tensor[(336), float64], Tensor[(588), float32]) */;
  %883 = %872.0;
  %884 = %882.1;
  (%875, %883, %884, meta[relay.Constant][38] /* ty=uint8 */, meta[relay.Constant][39] /* ty=Tensor[(189), uint8] */, meta[relay.Constant][40] /* ty=Tensor[(336), float64] */)
}

def @func_18215() -> (uint8,) {
  %885 = @func_13278() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) */;
  %886 = %885.3;
  (%886,)
}

def @func_17346() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %887 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %888 = @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %889 = %887.1;
  %890 = %888.1;
  (%889, %890)
}

def @func_18342(%var_18329: Tensor[(13, 13, 4), float32]) -> (Tensor[(13, 13, 4), float32], Tensor[(10, 12, 15), float32]) {
  %891 = cast(%var_18329, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
  %892 = @func_7793() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %893 = rsqrt(%891) /* ty=Tensor[(13, 13, 4), float32] */;
  %894 = %892.0;
  (%893, %894)
}

def @func_13740(%var_13730: float64, %var_13731: Tensor[(1, 16, 2), float64]) -> Tensor[(?, 16, 2), uint16] {
  %895 = cast(%var_13730, dtype="float64") /* ty=float64 */;
  %896 = cast(%var_13731, dtype="float64") /* ty=Tensor[(1, 16, 2), float64] */;
  %897 = add(%895, %896) /* ty=Tensor[(1, 16, 2), float64] */;
  %898 = cast(%var_13731, dtype="uint16") /* ty=Tensor[(1, 16, 2), uint16] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="uint16") /* ty=Tensor[(1, 16, 2), uint16] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%900, %901) /* ty=Tensor[(?, 16, 2), uint16] */
}

def @func_5858(%var_5816: Tensor[(16, 13, 2), int32], %var_5817: Tensor[(16, 13, 2), int32], %var_5850: Tensor[(189), uint8]) -> (Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], uint8, uint8, Tensor[(189), uint8]) {
  %902 = cast(%var_5817, dtype="bool") /* ty=Tensor[(16, 13, 2), bool] */;
  %903 = shape_of(%var_5816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%var_5816, dtype="bool") /* ty=Tensor[(16, 13, 2), bool] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %906 = cast(%var_5817, dtype="float32") /* ty=Tensor[(16, 13, 2), float32] */;
  %907 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %908 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %909 = cast(meta[relay.Constant][41] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %910 = cast(%var_5850, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %911 = reshape(%909, newshape=[]) /* ty=uint8 */;
  %912 = reshape(%910, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
  %913 = @func_1932(%911, %912) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) */;
  %914 = greater(%904, %905) /* ty=Tensor[(16, 13, 2), bool] */;
  %915 = sqrt(%906) /* ty=Tensor[(16, 13, 2), float32] */;
  %916 = %907.0;
  %917 = %908.0;
  %918 = %913.2;
  (%914, %915, %916, %917, %918, meta[relay.Constant][41] /* ty=uint8 */, %var_5850)
}

def @func_8277() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %919 = @func_5962() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %920 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %921 = %919.1;
  %922 = %920.0;
  (%921, %922)
}

def @func_3421() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %923 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %924 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %925 = %923.2;
  %926 = %924.1;
  (%925, %926)
}

def @func_5259(%var_5224: Tensor[(7, 13, 10), int64]) -> (Tensor[(7, 13, 10), int64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %927 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %928 = cast(%var_5224, dtype="int64") /* ty=Tensor[(7, 13, 10), int64] */;
  %929 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %930 = @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %931 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %932 = left_shift(%927, %928) /* ty=Tensor[(7, 13, 10), int64] */;
  %933 = %929.0;
  %934 = %930.0;
  %935 = %931.0;
  %936 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  %937 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%932, %933, %934, %935, %936, %937)
}

def @func_10896() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %938 = @func_7222() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %939 = @func_7657() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %940 = %938.0;
  %941 = @func_3717() /* ty=Tensor[(10, 12, 15), float32] */;
  %942 = %939.0;
  %943 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%940, %941, %942, %943)
}

def @func_15811() -> Tensor[(14, 8, 3), float64] {
  %944 = @func_13698() /* ty=(Tensor[(14, 8, 3), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %944.0
}

def @func_7482() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %945 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %946 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
  (%945, %946)
}

def @func_16064(%var_16005: Tensor[(15, 11, 13), float64]) -> (Tensor[(15, 11, 13), int64], Tensor[(15, 10, 3), float64]) {
  %947 = cast(%var_16005, dtype="float64") /* ty=Tensor[(15, 11, 13), float64] */;
  %948 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(15, 11, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 13), float64] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %951 = add(%949, %950) /* ty=Tensor[(15, 11, 13), float64] */;
  %952 = cast(%var_16005, dtype="int64") /* ty=Tensor[(15, 11, 13), int64] */;
  %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%951, dtype="int64") /* ty=Tensor[(15, 11, 13), int64] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %956 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %957 = left_shift(%954, %955) /* ty=Tensor[(15, 11, 13), int64] */;
  %958 = %956.2;
  (%957, %958)
}

def @func_11248() -> Tensor[(10, 12, 15), float32] {
  %959 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %959.0
}

def @func_15637(%var_15611: Tensor[(1980), uint32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(11, 12, 15), uint32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(1980), float64]) {
  %960 = cast(%var_15611, dtype="uint32") /* ty=Tensor[(1980), uint32] */;
  %961 = cast(%var_15611, dtype="uint32") /* ty=Tensor[(1980), uint32] */;
  %962 = reshape(%960, newshape=[11, 12, 15]) /* ty=Tensor[(11, 12, 15), uint32] */;
  %963 = reshape(%961, newshape=[11, 12, 15]) /* ty=Tensor[(11, 12, 15), uint32] */;
  %964 = @func_6500(%962, %963) /* ty=(Tensor[(11, 12, 15), uint32],) */;
  %965 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %966 = @func_14388() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %967 = cast(%var_15611, dtype="float64") /* ty=Tensor[(1980), float64] */;
  %968 = @func_14793() /* ty=Tensor[(10, 12, 15), float32] */;
  %969 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  %970 = %964.0;
  %971 = %965.0;
  %972 = %966.3;
  %973 = rsqrt(%967) /* ty=Tensor[(1980), float64] */;
  (%968, %969, %970, %971, %972, %973)
}

def @func_10355() -> uint8 {
  %974 = @func_8394() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) */;
  %974.3
}

def @func_10161() -> (Tensor[(10, 12, 15), float32],) {
  %975 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %976 = %975.0;
  (%976,)
}

def @func_4079() -> (Tensor[(10, 12, 15), float32],) {
  %977 = @func_3238() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %978 = %977.0;
  (%978,)
}

def @func_6578() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %979 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %980 = @func_3472() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %981 = %979.1;
  %982 = %980.0;
  (%981, %982)
}

def @func_7538(%var_7511: Tensor[(10, 13, 12), int64], %var_7512: Tensor[(10, 13, 12), int64]) -> (Tensor[(10, 13, 12), int64], Tensor[(10, 13, 12), float32], Tensor[(10, 12, 15), float32]) {
  %983 = cast(%var_7512, dtype="int64") /* ty=Tensor[(10, 13, 12), int64] */;
  %984 = shape_of(%var_7511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %985 = cast(%var_7511, dtype="int64") /* ty=Tensor[(10, 13, 12), int64] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %987 = cast(%var_7512, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
  %988 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %989 = maximum(%985, %986) /* ty=Tensor[(10, 13, 12), int64] */;
  %990 = acosh(%987) /* ty=Tensor[(10, 13, 12), float32] */;
  %991 = %988.0;
  (%989, %990, %991)
}

def @func_10726() -> Tensor[(10, 12, 15), float32] {
  @func_7232() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_2724() -> Tensor[(10, 12, 15), float32] {
  %992 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %992.0
}

def @func_20258(%var_20242: Tensor[(1716), uint8], %var_20243: Tensor[(378, 1), float64]) -> (Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32], Tensor[(11, 13, 12), float64], Tensor[(1716), uint8], Tensor[(378, 1), float64]) {
  %993 = @func_17836() /* ty=(uint8, Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) */;
  %994 = cast(%var_20242, dtype="uint8") /* ty=Tensor[(1716), uint8] */;
  %995 = cast(%var_20242, dtype="uint16") /* ty=Tensor[(1716), uint16] */;
  %996 = cast(%var_20243, dtype="float64") /* ty=Tensor[(378, 1), float64] */;
  %997 = reshape(%994, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), uint8] */;
  %998 = reshape(%995, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), uint16] */;
  %999 = reshape(%996, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1000 = @func_3156(%997, %998, %999) /* ty=(Tensor[(11, 13, 12), uint32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(11, 13, 12), float64]) */;
  %1001 = %993.1;
  %1002 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  %1003 = %1000.3;
  (%1001, %1002, %1003, %var_20242, %var_20243)
}

def @func_13789(%var_13774: Tensor[(14, 16, 2), float32], %var_13775: Tensor[(14, 16, 2), float32], %var_13782: Tensor[(14, 16, 2), float32]) -> (Tensor[(14, 16, 2), float32], Tensor[(14, 16, 2), int64]) {
  %1004 = cast(%var_13775, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
  %1005 = shape_of(%var_13774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1006 = cast(%var_13774, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
  %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1008 = cast(%var_13782, dtype="int64") /* ty=Tensor[(14, 16, 2), int64] */;
  %1009 = shape_of(%var_13775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%var_13775, dtype="int64") /* ty=Tensor[(14, 16, 2), int64] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1012 = minimum(%1006, %1007) /* ty=Tensor[(14, 16, 2), float32] */;
  %1013 = bitwise_or(%1010, %1011) /* ty=Tensor[(14, 16, 2), int64] */;
  (%1012, %1013)
}

def @func_20853() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64]) {
  %1014 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1015 = @func_19764() /* ty=(Tensor[(10, 12, 15), float64],) */;
  %1016 = %1014.0;
  %1017 = %1015.0;
  (%1016, %1017)
}

def @func_7148() -> (Tensor[(10, 12, 15), float32], uint8) {
  %1018 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1019 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1020 = %1018.0;
  %1021 = %1019.0;
  (%1020, %1021)
}

def @func_6319(%var_6306: Tensor[(4, 6, 7), int16]) -> (Tensor[(4, 6, 7), int16], Tensor[(15, 10, 3), float64]) {
  %1022 = cast(%var_6306, dtype="int16") /* ty=Tensor[(4, 6, 7), int16] */;
  %1023 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(4, 6, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 6, 7), int16] */, dtype="int16") /* ty=Tensor[(4, 6, 7), int16] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1026 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1027 = add(%1024, %1025) /* ty=Tensor[(4, 6, 7), int16] */;
  %1028 = %1026.0;
  (%1027, %1028)
}

def @func_9575(%var_9516: Tensor[(1, 7, 5), float32], %var_9517: Tensor[(15, 7, 5), float32], %var_9556: Tensor[(378), float64]) -> (Tensor[(15, 7, 5), bool], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64]) {
  %1029 = cast(%var_9516, dtype="bool") /* ty=Tensor[(1, 7, 5), bool] */;
  %1030 = cast(%var_9517, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %1031 = @func_4079() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1032 = cast(%var_9556, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1033 = reshape(%1032, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1034 = @func_4423(%1033) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */;
  %1035 = less(%1029, %1030) /* ty=Tensor[(15, 7, 5), bool] */;
  %1036 = %1031.0;
  %1037 = %1034.0;
  (%1035, %1036, %1037, %var_9556)
}

def @func_14419(%var_14400: Tensor[(5, 15, 9), float64], %var_14410: Tensor[(99), float32]) -> (Tensor[(5, 15, 9), float64], Tensor[(99), float32], Tensor[(99), float32]) {
  %1038 = cast(%var_14400, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %1039 = cast(%var_14410, dtype="float32") /* ty=Tensor[(99), float32] */;
  %1040 = reshape(%1039, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %1041 = @func_14203(%1040) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32], Tensor[(1, 9, 11), float32], Tensor[(99), float32], Tensor[(336), float64], Tensor[(1, 378), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1042 = sin(%1038) /* ty=Tensor[(5, 15, 9), float64] */;
  %1043 = %1041.4;
  (%1042, %1043, %var_14410)
}

def @func_19755(%var_19745: Tensor[(3, 1, 10), uint8]) -> (Tensor[(3, 1, 10), uint8], Tensor[(3, 1, 10), bool]) {
  %1044 = cast(meta[relay.Constant][44] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1045 = cast(%var_19745, dtype="uint8") /* ty=Tensor[(3, 1, 10), uint8] */;
  %1046 = cast(meta[relay.Constant][44] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %1047 = cast(%var_19745, dtype="bool") /* ty=Tensor[(3, 1, 10), bool] */;
  %1048 = bitwise_or(%1044, %1045) /* ty=Tensor[(3, 1, 10), uint8] */;
  %1049 = less_equal(%1046, %1047) /* ty=Tensor[(3, 1, 10), bool] */;
  (%1048, %1049)
}

def @func_6229() -> Tensor[(10, 12, 15), uint64] {
  %1050 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1050.5
}

def @func_21298() -> (Tensor[(10, 12, 15), float32],) {
  %1051 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1052 = %1051.0;
  (%1052,)
}

def @func_2850() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1053 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1054 = %1053.0;
  %1055 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1054, %1055)
}

def @func_3156(%var_3112: Tensor[(11, 13, 12), uint8], %var_3123: Tensor[(11, 13, 12), uint16], %var_3129: Tensor[(378), float64]) -> (Tensor[(11, 13, 12), uint32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(11, 13, 12), float64]) {
  %1056 = @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */;
  %1057 = %1056.2;
  %1058 = cast(%1057, dtype="uint16") /* ty=uint16 */;
  %1059 = cast(%var_3112, dtype="uint16") /* ty=Tensor[(11, 13, 12), uint16] */;
  %1060 = minimum(%1058, %1059) /* ty=Tensor[(11, 13, 12), uint16] */;
  %1061 = cast(%var_3123, dtype="uint32") /* ty=Tensor[(11, 13, 12), uint32] */;
  %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%1060, dtype="uint32") /* ty=Tensor[(11, 13, 12), uint32] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1065 = cast(%var_3129, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1066 = reshape(%1065, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), float64] */;
  %1067 = cast(%1060, dtype="float64") /* ty=Tensor[(11, 13, 12), float64] */;
  %1068 = maximum(%1063, %1064) /* ty=Tensor[(11, 13, 12), uint32] */;
  %1069 = @func_170(%1066) /* ty=Tensor[(9, 7, 6), float64] */;
  %1070 = acos(%1067) /* ty=Tensor[(11, 13, 12), float64] */;
  (%1068, %1069, %var_3129, %1070)
}

def @func_11576() -> (Tensor[(10, 12, 15), float32],) {
  %1071 = @func_10797() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1072 = %1071.1;
  (%1072,)
}

def @func_19494() -> (uint8,) {
  %1073 = @func_13211() /* ty=(Tensor[(10, 12, 15), float32], uint8) */;
  %1074 = %1073.1;
  (%1074,)
}

def @func_20511(%var_20489: Tensor[(5, 9, 5), float64]) -> (Tensor[(5, 9, 5), float64], Tensor[(5, 9, 5), float64]) {
  %1075 = cast(%var_20489, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
  %1076 = cast(%var_20489, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
  %1077 = log(%1075) /* ty=Tensor[(5, 9, 5), float64] */;
  %1078 = atanh(%1076) /* ty=Tensor[(5, 9, 5), float64] */;
  (%1077, %1078)
}

def @func_10597() -> uint8 {
  %1079 = @func_6464() /* ty=(Tensor[(336), float64], uint8) */;
  %1079.1
}

def @func_19018() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %1080 = @func_3421() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1081 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
  %1082 = %1080.0;
  %1083 = @func_18367() /* ty=Tensor[(336), float64] */;
  (%1081, %1082, %1083)
}

def @func_7379() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1084 = @func_6766() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1085 = @func_7114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1086 = %1084.0;
  %1087 = %1085.0;
  (%1086, %1087)
}

def @func_21256() -> Tensor[(10, 12, 15), float32] {
  @func_10291() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10629() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1088 = @func_10161() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1089 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1090 = @func_6846() /* ty=Tensor[(10, 12, 15), float32] */;
  %1091 = %1088.0;
  %1092 = %1089.0;
  (%1090, %1091, %1092)
}

def @func_7793() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1093 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1094 = %1093.0;
  %1095 = @func_7567() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1094, %1095)
}

def @func_11325() -> Tensor[(10, 12, 15), float32] {
  %1096 = @func_8394() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) */;
  %1096.0
}

def @func_17445() -> Tensor[(10, 12, 15), float32] {
  %1097 = @func_8173() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1097.1
}

def @func_2211() -> (Tensor[(336), float64],) {
  %1098 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %1099 = %1098.3;
  (%1099,)
}

def @func_12738() -> Tensor[(10, 12, 15), float32] {
  %1100 = @func_11015() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1100.0
}

def @func_7768() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1101 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1102 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1103 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %1104 = %1101.0;
  %1105 = @func_6876() /* ty=Tensor[(10, 12, 15), float32] */;
  %1106 = %1102.0;
  %1107 = %1103.1;
  (%1104, %1105, %1106, %1107)
}

def @func_3766() -> (Tensor[(336), float64],) {
  %1108 = @func_3035() /* ty=Tensor[(336), float64] */;
  (%1108,)
}

def @func_19957() -> (uint8, uint8) {
  %1109 = @func_7148() /* ty=(Tensor[(10, 12, 15), float32], uint8) */;
  %1110 = @func_16877() /* ty=uint8 */;
  %1111 = %1109.1;
  (%1110, %1111)
}

def @func_8541(%var_8527: Tensor[(12, 8, 5), uint32], %var_8528: Tensor[(12, 8, 5), uint32]) -> (Tensor[(12, 8, 5), bool], Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) {
  %1112 = cast(%var_8528, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
  %1113 = shape_of(%var_8527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1114 = cast(%var_8527, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1116 = cast(meta[relay.Constant][45] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1117 = reshape(%1116, newshape=[21, 9]) /* ty=Tensor[(21, 9), uint8] */;
  %1118 = @func_2336(%1117) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */;
  %1119 = @func_3472() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1120 = greater_equal(%1114, %1115) /* ty=Tensor[(12, 8, 5), bool] */;
  %1121 = %1118.4;
  %1122 = %1119.0;
  (%1120, %1121, meta[relay.Constant][45] /* ty=Tensor[(189), uint8] */, %1122)
}

def @func_21770(%var_21766: Tensor[(416), int32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(16, 13, 2), uint16], Tensor[(416), int32], Tensor[(189), uint8]) {
  %1123 = @func_14970() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1124 = @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1125 = cast(%var_21766, dtype="int32") /* ty=Tensor[(416), int32] */;
  %1126 = cast(meta[relay.Constant][46] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1127 = reshape(%1125, newshape=[416]) /* ty=Tensor[(416), int32] */;
  %1128 = reshape(%1126, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %1129 = @func_12874(%1127, %1128) /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(16, 13, 2), uint16]) */;
  %1130 = %1123.1;
  %1131 = %1124.0;
  %1132 = @func_16567() /* ty=Tensor[(336), float64] */;
  %1133 = %1129.3;
  (%1130, %1131, %1132, %1133, %var_21766, meta[relay.Constant][46] /* ty=Tensor[(189), uint8] */)
}

def @func_15247() -> Tensor[(10, 12, 15), float32] {
  @func_6876() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_5499() -> Tensor[(10, 12, 15), float32] {
  @func_4550() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_19246() -> (Tensor[(10, 12, 15), float32],) {
  %1134 = @func_7222() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1135 = %1134.0;
  (%1135,)
}

def @func_8719() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1136 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  %1137 = @func_3536() /* ty=Tensor[(10, 12, 15), float32] */;
  %1138 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1136, %1137, %1138)
}

def @func_5411(%var_5375: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(336), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %1139 = cast(meta[relay.Constant][47] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1140 = cast(%var_5375, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1141 = reshape(%1139, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1142 = reshape(%1140, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %1143 = @func_1612(%1141, %1142) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %1144 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1145 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %1146 = @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %1147 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  %1148 = %1143.9;
  %1149 = %1144.0;
  %1150 = %1145.0;
  %1151 = %1146.1;
  (%1147, %1148, meta[relay.Constant][47] /* ty=Tensor[(378), float64] */, %var_5375, %1149, %1150, %1151)
}

def @func_12045() -> (Tensor[(10, 12, 15), float32],) {
  %1152 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1153 = %1152.0;
  (%1153,)
}

def @func_10740() -> (Tensor[(10, 12, 15), float32],) {
  %1154 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1155 = %1154.0;
  (%1155,)
}

def @func_19609() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1156 = @func_17214() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1157 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1158 = %1156.0;
  %1159 = %1157.0;
  %1160 = @func_17533() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1158, %1159, %1160)
}

def @func_8173() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1161 = @func_3762() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1162 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  %1163 = %1161.0;
  (%1162, %1163)
}

def @func_13211() -> (Tensor[(10, 12, 15), float32], uint8) {
  %1164 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1165 = %1164.0;
  %1166 = @func_10597() /* ty=uint8 */;
  (%1165, %1166)
}

def @func_17495() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1167 = @func_7482() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1168 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  %1169 = %1167.1;
  (%1168, %1169)
}

def @func_21109() -> (Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  %1170 = @func_12321() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %1171 = @func_10251() /* ty=(Tensor[(784), int64], Tensor[(10, 12, 15), float32]) */;
  %1172 = %1170.2;
  %1173 = %1171.0;
  (%1172, %1173)
}

def @func_7027(%var_7007: Tensor[(1, 1, 11), float32]) -> (Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) {
  %1174 = cast(%var_7007, dtype="float32") /* ty=Tensor[(1, 1, 11), float32] */;
  %1175 = @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %1176 = cos(%1174) /* ty=Tensor[(1, 1, 11), float32] */;
  %1177 = %1175.1;
  (%1176, %1177)
}

def @func_1637() -> Tensor[(10, 12, 15), float32] {
  @func_1495() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10367() -> (Tensor[(784), int64],) {
  %1178 = @func_10251() /* ty=(Tensor[(784), int64], Tensor[(10, 12, 15), float32]) */;
  %1179 = %1178.0;
  (%1179,)
}

def @func_9087() -> (Tensor[(10, 12, 15), float32],) {
  %1180 = @func_8719() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1181 = %1180.1;
  (%1181,)
}

def @func_12874(%var_12791: Tensor[(416), int32], %var_12792: Tensor[(189), uint8]) -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(16, 13, 2), uint16]) {
  %1182 = @func_11198() /* ty=(uint8, Tensor[(10, 12, 15), float32]) */;
  %1183 = cast(%var_12791, dtype="int32") /* ty=Tensor[(416), int32] */;
  %1184 = cast(%var_12791, dtype="int32") /* ty=Tensor[(416), int32] */;
  %1185 = cast(%var_12792, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1186 = reshape(%1183, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), int32] */;
  %1187 = reshape(%1184, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), int32] */;
  %1188 = reshape(%1185, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %1189 = @func_5858(%1186, %1187, %1188) /* ty=(Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], uint8, uint8, Tensor[(189), uint8]) */;
  %1190 = %1189.0;
  %1191 = cast(%1190, dtype="float32") /* ty=Tensor[(16, 13, 2), float32] */;
  %1192 = erf(%1191) /* ty=Tensor[(16, 13, 2), float32] */;
  %1193 = cast(%1192, dtype="float64") /* ty=Tensor[(16, 13, 2), float64] */;
  %1194 = sin(%1193) /* ty=Tensor[(16, 13, 2), float64] */;
  %1195 = cast(%var_12791, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %1196 = shape_of(%1194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1197 = cast(%1194, dtype="uint16") /* ty=Tensor[(16, 13, 2), uint16] */;
  %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1199 = %1182.0;
  %1200 = @func_11248() /* ty=Tensor[(10, 12, 15), float32] */;
  %1201 = bitwise_xor(%1197, %1198) /* ty=Tensor[(16, 13, 2), uint16] */;
  (%1199, %1200, %var_12792, %1201)
}

def @func_13948(%var_13943: Tensor[(9, 6, 1), float32]) -> Tensor[(9, 6, 1), float32] {
  %1202 = cast(%var_13943, dtype="float32") /* ty=Tensor[(9, 6, 1), float32] */;
  cos(%1202) /* ty=Tensor[(9, 6, 1), float32] */
}

def @func_9657() -> (Tensor[(10, 12, 15), float32], Tensor[(14), float32], Tensor[(14, 1, 336), bool]) {
  %1203 = @func_4662() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %1204 = %1203.1;
  %1205 = cast(meta[relay.Constant][48] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1206 = reshape(%1205, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), float32] */;
  %1207 = @func_7316(%1206) /* ty=Tensor[(14, 1, 1), float32] */;
  %1208 = cast(%1204, dtype="bool") /* ty=Tensor[(336), bool] */;
  %1209 = cast(%1207, dtype="bool") /* ty=Tensor[(14, 1, 1), bool] */;
  %1210 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
  %1211 = logical_or(%1208, %1209) /* ty=Tensor[(14, 1, 336), bool] */;
  (%1210, meta[relay.Constant][48] /* ty=Tensor[(14), float32] */, %1211)
}

def @func_14606() -> Tensor[(10, 12, 15), float32] {
  %1212 = @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1212.1
}

def @func_333(%var_329: Tensor[(14, 8, 3), float64]) -> Tensor[(14, 8, 3), float64] {
  %1213 = cast(%var_329, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
  tan(%1213) /* ty=Tensor[(14, 8, 3), float64] */
}

def @func_20707() -> Tensor[(2, 10, 12), float32] {
  %1214 = @func_15857() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %1214.0
}

def @func_13402() -> (Tensor[(588), float32],) {
  %1215 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %1216 = %1215.3;
  (%1216,)
}

def @func_2679() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) {
  %1217 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1218 = cast(meta[relay.Constant][49] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1219 = reshape(%1218, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %1220 = @func_2035(%1219) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) */;
  %1221 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1222 = @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */;
  %1223 = %1222.2;
  %1224 = cast(%1223, dtype="int64") /* ty=int64 */;
  %1225 = cast(meta[relay.Constant][50] /* ty=Tensor[(4, 2, 15), uint8] */, dtype="int64") /* ty=Tensor[(4, 2, 15), int64] */;
  %1226 = %1217.0;
  %1227 = %1220.0;
  %1228 = %1221.1;
  %1229 = maximum(%1224, %1225) /* ty=Tensor[(4, 2, 15), int64] */;
  (%1226, %1227, meta[relay.Constant][49] /* ty=Tensor[(588), float32] */, %1228, %1229)
}

def @func_3930() -> (Tensor[(336), float64],) {
  %1230 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %1231 = %1230.0;
  (%1231,)
}

def @func_14793() -> Tensor[(10, 12, 15), float32] {
  %1232 = @func_7287() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1232.0
}

def @func_20647() -> Tensor[(10, 12, 15), float32] {
  %1233 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1233.0
}

def @func_6500(%var_6482: Tensor[(11, 12, 15), uint32], %var_6483: Tensor[(11, 12, 15), uint32]) -> (Tensor[(11, 12, 15), uint32],) {
  %1234 = cast(%var_6483, dtype="uint32") /* ty=Tensor[(11, 12, 15), uint32] */;
  %1235 = shape_of(%var_6482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1236 = cast(%var_6482, dtype="uint32") /* ty=Tensor[(11, 12, 15), uint32] */;
  %1237 = dyn.reshape(%1234, %1235, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1238 = logical_xor(%1236, %1237) /* ty=Tensor[(11, 12, 15), uint32] */;
  (%1238,)
}

def @func_15315() -> Tensor[(10, 12, 15), float32] {
  @func_6867() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_3083(%var_3072: uint8, %var_3073: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189), uint8]) {
  %1239 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1240 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1241 = cast(%var_3072, dtype="uint8") /* ty=uint8 */;
  %1242 = cast(%var_3073, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1243 = reshape(%1241, newshape=[]) /* ty=uint8 */;
  %1244 = reshape(%1242, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
  %1245 = @func_1226(%1243, %1244) /* ty=(Tensor[(7, 9, 3), uint8],) */;
  %1246 = %1239.0;
  %1247 = %1240.0;
  %1248 = %1245.0;
  (%1246, %1247, %1248, %var_3072, %var_3073)
}

def @func_4492() -> (Tensor[(15, 10, 3), float64],) {
  %1249 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %1250 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(15, 10, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1251 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %1252 = dyn.reshape(%1249, %1250, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1253 = power(%1251, %1252) /* ty=Tensor[(15, 10, 3), float64] */;
  (%1253,)
}

def @func_18031() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1254 = @func_10629() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1255 = @func_9128() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1256 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1257 = %1254.0;
  %1258 = %1255.0;
  %1259 = %1256.0;
  (%1257, %1258, %1259)
}

def @func_4067() -> Tensor[(10, 12, 15), float32] {
  @func_1495() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_7287() -> (Tensor[(10, 12, 15), float32],) {
  %1260 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1261 = %1260.0;
  (%1261,)
}

def @func_13816() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1262 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1263 = @func_12907() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1264 = %1262.1;
  %1265 = %1263.0;
  (%1264, %1265)
}

def @func_18885() -> (Tensor[(10, 12, 15), float32],) {
  %1266 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1267 = %1266.0;
  (%1267,)
}

def @func_4276() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1268 = @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1269 = %1268.0;
  %1270 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1269, %1270)
}

def @func_13883() -> (Tensor[(10, 12, 15), float32], Tensor[(14, 1, 336), bool], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %1271 = @func_10896() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1272 = @func_9657() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14), float32], Tensor[(14, 1, 336), bool]) */;
  %1273 = @func_9727() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1274 = @func_3766() /* ty=(Tensor[(336), float64],) */;
  %1275 = %1271.3;
  %1276 = %1272.2;
  %1277 = @func_6201() /* ty=Tensor[(10, 12, 15), float32] */;
  %1278 = %1273.1;
  %1279 = %1274.0;
  (%1275, %1276, %1277, %1278, %1279)
}

def @func_3218() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1280 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1281 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1282 = %1280.0;
  %1283 = %1281.0;
  %1284 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1282, %1283, %1284)
}

def @func_3238() -> (Tensor[(10, 12, 15), float32],) {
  %1285 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1286 = %1285.0;
  (%1286,)
}

def @func_3738() -> Tensor[(10, 12, 15), float32] {
  %1287 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %1287.1
}

def @func_7316(%var_7308: Tensor[(14, 1, 1), float32]) -> Tensor[(14, 1, 1), float32] {
  %1288 = cast(%var_7308, dtype="float32") /* ty=Tensor[(14, 1, 1), float32] */;
  sin(%1288) /* ty=Tensor[(14, 1, 1), float32] */
}

def @func_14290(%var_14288: Tensor[(336), float64]) -> (Tensor[(784), int64], Tensor[(14, 8, 3), float64], Tensor[(336), float64]) {
  %1289 = @func_7064() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */;
  %1290 = cast(%var_14288, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1291 = reshape(%1290, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %1292 = %1289.3;
  %1293 = @func_333(%1291) /* ty=Tensor[(14, 8, 3), float64] */;
  (%1292, %1293, %var_14288)
}

def @func_9219() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %1294 = @func_3930() /* ty=(Tensor[(336), float64],) */;
  %1295 = @func_9128() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1296 = @func_8309() /* ty=Tensor[(10, 12, 15), float32] */;
  %1297 = %1294.0;
  %1298 = %1295.0;
  (%1296, %1297, %1298)
}

def @func_10038() -> (Tensor[(10, 12, 15), float32],) {
  %1299 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1300 = %1299.0;
  (%1300,)
}

def @func_5662() -> Tensor[(10, 12, 15), float32] {
  %1301 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1301.0
}

def @func_9116(%var_9099: Tensor[(16, 13, 2), uint8], %var_9100: Tensor[(16, 13, 2), uint8]) -> Tensor[(16, 13, 2), uint8] {
  %1302 = cast(%var_9100, dtype="uint8") /* ty=Tensor[(16, 13, 2), uint8] */;
  %1303 = shape_of(%var_9099, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1304 = cast(%var_9099, dtype="uint8") /* ty=Tensor[(16, 13, 2), uint8] */;
  %1305 = dyn.reshape(%1302, %1303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%1304, %1305) /* ty=Tensor[(16, 13, 2), uint8] */
}

def @func_17771() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1306 = @func_13488() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %1307 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %1308 = %1306.1;
  %1309 = %1307.1;
  (%1308, %1309)
}

def @func_17779(%var_17774: uint64, %var_17775: Tensor[(1, 8, 5), uint64]) -> Tensor[(1, 8, 5), uint64] {
  %1310 = cast(%var_17774, dtype="uint64") /* ty=uint64 */;
  %1311 = cast(%var_17775, dtype="uint64") /* ty=Tensor[(1, 8, 5), uint64] */;
  bitwise_xor(%1310, %1311) /* ty=Tensor[(1, 8, 5), uint64] */
}

def @func_7222() -> (Tensor[(10, 12, 15), float32],) {
  %1312 = @func_6138() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1313 = %1312.0;
  (%1313,)
}

def @func_15156() -> (Tensor[(784), int64],) {
  %1314 = @func_10251() /* ty=(Tensor[(784), int64], Tensor[(10, 12, 15), float32]) */;
  %1315 = %1314.0;
  %1316 = cast(meta[relay.Constant][53] /* ty=Tensor[(784), int64] */, dtype="int64") /* ty=Tensor[(784), int64] */;
  %1317 = shape_of(%1315, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1318 = cast(%1315, dtype="int64") /* ty=Tensor[(784), int64] */;
  %1319 = dyn.reshape(%1316, %1317, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1320 = add(%1318, %1319) /* ty=Tensor[(784), int64] */;
  (%1320,)
}

def @func_18254() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1321 = @func_8719() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1322 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1323 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1324 = %1321.1;
  %1325 = %1322.0;
  %1326 = %1323.2;
  (%1324, %1325, %1326)
}

def @func_9038(%var_9030: Tensor[(1, 7, 10), bool]) -> (Tensor[(1, 7, 10), bool],) {
  %1327 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1328 = cast(%var_9030, dtype="bool") /* ty=Tensor[(1, 7, 10), bool] */;
  %1329 = logical_or(%1327, %1328) /* ty=Tensor[(1, 7, 10), bool] */;
  (%1329,)
}

def @func_17726() -> Tensor[(10, 12, 15), float32] {
  %1330 = @func_9990() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
  %1330.2
}

def @func_19909() -> (Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) {
  %1331 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1332 = @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1333 = @func_8731() /* ty=Tensor[(10, 12, 15), float32] */;
  %1334 = %1331.0;
  %1335 = %1332.0;
  (%1333, %1334, %1335)
}

def @func_3472() -> (Tensor[(10, 12, 15), float32],) {
  %1336 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1337 = %1336.1;
  (%1337,)
}

def @func_8309() -> Tensor[(10, 12, 15), float32] {
  %1338 = @func_8061() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1338.0
}

def @func_8359() -> Tensor[(10, 12, 15), float32] {
  %1339 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1339.0
}

def @func_2336(%var_2324: Tensor[(21, 9), uint8]) -> (Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) {
  %1340 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(14, 9, 1), float32] */;
  %1341 = cast(meta[relay.Constant][55] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1342 = cast(%var_2324, dtype="uint8") /* ty=Tensor[(21, 9), uint8] */;
  %1343 = reshape(%1341, newshape=[]) /* ty=uint8 */;
  %1344 = reshape(%1342, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
  %1345 = @func_1226(%1343, %1344) /* ty=(Tensor[(7, 9, 3), uint8],) */;
  %1346 = sqrt(%1340) /* ty=Tensor[(14, 9, 1), float32] */;
  %1347 = %1345.0;
  %1348 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1346, %1347, meta[relay.Constant][55] /* ty=uint8 */, %var_2324, %1348)
}

def @func_11642(%var_11616: Tensor[(1, 9, 11), float32]) -> (Tensor[(1, 9, 11), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1349 = cast(%var_11616, dtype="float32") /* ty=Tensor[(1, 9, 11), float32] */;
  %1350 = acos(%1349) /* ty=Tensor[(1, 9, 11), float32] */;
  %1351 = @func_8309() /* ty=Tensor[(10, 12, 15), float32] */;
  %1352 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1350, %1351, %1352)
}

def @func_14877() -> Tensor[(10, 12, 15), float32] {
  %1353 = @func_7793() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1353.0
}

def @func_9128() -> (Tensor[(10, 12, 15), float32],) {
  %1354 = @func_6846() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1354,)
}

def @func_6724() -> (Tensor[(336), float64], Tensor[(336), float64]) {
  %1355 = @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %1356 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1357 = %1355.0;
  %1358 = %1356.0;
  (%1357, %1358)
}

def @func_5962() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1359 = @func_2489() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1360 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1361 = %1359.0;
  %1362 = %1360.1;
  (%1361, %1362)
}

def @func_18312() -> (Tensor[(10, 12, 15), float32],) {
  %1363 = @func_11248() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1363,)
}

def @func_16839() -> (Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) {
  %1364 = @func_13156() /* ty=(Tensor[(15, 9, 16), float64],) */;
  %1365 = %1364.0;
  %1366 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1365, %1366)
}

def @func_2370() -> (Tensor[(10, 12, 15), float32],) {
  %1367 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1368 = %1367.0;
  (%1368,)
}

def @func_10187(%var_10180: Tensor[(14, 13, 336), bool]) -> (Tensor[(10, 12, 15), float32], Tensor[(14, 13, 336), bool]) {
  %1369 = @func_9657() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14), float32], Tensor[(14, 1, 336), bool]) */;
  %1370 = %1369.2;
  %1371 = cast(%1370, dtype="bool") /* ty=Tensor[(14, 1, 336), bool] */;
  %1372 = cast(%var_10180, dtype="bool") /* ty=Tensor[(14, 13, 336), bool] */;
  %1373 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
  %1374 = less(%1371, %1372) /* ty=Tensor[(14, 13, 336), bool] */;
  (%1373, %1374)
}

def @func_3762() -> (Tensor[(10, 12, 15), float32],) {
  %1375 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1376 = %1375.0;
  (%1376,)
}

def @func_3894(%var_3785: uint8, %var_3786: Tensor[(1, 189), uint8], %var_3822: Tensor[(10, 12, 15), float32], %var_3873: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(?, 189), bool], Tensor[(10, 12, 15), uint64], Tensor[(14, 8, 3), float64], Tensor[(336), float64], Tensor[(588), float32]) {
  %1377 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1378 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1379 = cast(%var_3785, dtype="uint8") /* ty=uint8 */;
  %1380 = cast(%var_3786, dtype="uint8") /* ty=Tensor[(1, 189), uint8] */;
  %1381 = reshape(%1379, newshape=[]) /* ty=uint8 */;
  %1382 = reshape(%1380, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
  %1383 = @func_1226(%1381, %1382) /* ty=(Tensor[(7, 9, 3), uint8],) */;
  %1384 = %1383.0;
  %1385 = cast(%1384, dtype="bool") /* ty=Tensor[(7, 9, 3), bool] */;
  %1386 = shape_of(%var_3786, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1387 = cast(%var_3786, dtype="bool") /* ty=Tensor[(1, 189), bool] */;
  %1388 = dyn.reshape(%1385, %1386, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1389 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1390 = %1389.0;
  %1391 = cast(%var_3822, dtype="uint64") /* ty=Tensor[(10, 12, 15), uint64] */;
  %1392 = shape_of(%1390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1393 = cast(%1390, dtype="uint64") /* ty=Tensor[(10, 12, 15), uint64] */;
  %1394 = dyn.reshape(%1391, %1392, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1395 = cast(%var_3873, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1396 = reshape(%1395, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %1397 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %1398 = %1377.0;
  %1399 = %1378.0;
  %1400 = greater_equal(%1387, %1388) /* ty=Tensor[(?, 189), bool] */;
  %1401 = left_shift(%1393, %1394) /* ty=Tensor[(10, 12, 15), uint64] */;
  %1402 = @func_333(%1396) /* ty=Tensor[(14, 8, 3), float64] */;
  %1403 = %1397.3;
  (%1398, %var_3785, %1399, %1400, %1401, %1402, %var_3873, %1403)
}

def @func_17358() -> Tensor[(588), float32] {
  %1404 = @func_13402() /* ty=(Tensor[(588), float32],) */;
  %1404.0
}

def @func_17836() -> (uint8, Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) {
  %1405 = @func_14447() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1406 = @func_14002() /* ty=uint8 */;
  %1407 = @func_11058() /* ty=Tensor[(15, 9, 16), bool] */;
  %1408 = %1405.1;
  (%1406, %1407, %1408)
}

def @func_18438(%var_18435: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], Tensor[(189), uint8]) {
  %1409 = @func_9727() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1410 = @func_7222() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1411 = @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1412 = cast(%var_18435, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1413 = reshape(%1412, newshape=[21, 9]) /* ty=Tensor[(21, 9), uint8] */;
  %1414 = @func_2336(%1413) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */;
  %1415 = %1409.1;
  %1416 = %1410.0;
  %1417 = %1411.0;
  %1418 = %1414.1;
  (%1415, %1416, %1417, %1418, %var_18435)
}

def @func_6138() -> (Tensor[(10, 12, 15), float32],) {
  %1419 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1419,)
}

def @func_15026() -> Tensor[(10, 12, 15), float32] {
  @func_14793() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_9285() -> (Tensor[(588), float32],) {
  %1420 = @func_7064() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */;
  %1421 = %1420.2;
  (%1421,)
}

def @func_15962() -> (Tensor[(10, 12, 15), float32],) {
  %1422 = @func_10945() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) */;
  %1423 = %1422.1;
  (%1423,)
}

def @func_2758() -> (Tensor[(10, 12, 15), float32],) {
  %1424 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1425 = %1424.0;
  (%1425,)
}

def @func_18867() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1426 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1427 = %1426.0;
  %1428 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1427, %1428)
}

def @func_170(%var_143: Tensor[(9, 7, 6), float64]) -> Tensor[(9, 7, 6), float64] {
  %1429 = cast(%var_143, dtype="float64") /* ty=Tensor[(9, 7, 6), float64] */;
  %1430 = sqrt(%1429) /* ty=Tensor[(9, 7, 6), float64] */;
  %1431 = cast(%1430, dtype="float32") /* ty=Tensor[(9, 7, 6), float32] */;
  %1432 = erf(%1431) /* ty=Tensor[(9, 7, 6), float32] */;
  %1433 = cast(%1432, dtype="float64") /* ty=Tensor[(9, 7, 6), float64] */;
  acosh(%1433) /* ty=Tensor[(9, 7, 6), float64] */
}

def @func_19057() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1434 = @func_12045() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1435 = %1434.0;
  %1436 = @func_8568() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1435, %1436)
}

def @func_17287(%var_17281: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(378), float64]) {
  %1437 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1438 = @func_16561() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8) */;
  %1439 = @func_11783() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1440 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1441 = cast(%var_17281, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1442 = reshape(%1441, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1443 = @func_3999(%1442) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), int16]) */;
  %1444 = %1437.2;
  %1445 = %1438.2;
  %1446 = %1439.1;
  %1447 = %1440.0;
  %1448 = %1443.0;
  (%1444, %1445, %1446, %1447, %1448, %var_17281)
}

def @func_17761() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %1449 = @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %1450 = @func_11015() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1451 = %1449.1;
  %1452 = %1450.0;
  %1453 = @func_3035() /* ty=Tensor[(336), float64] */;
  (%1451, %1452, %1453)
}

def @func_17011() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1454 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1455 = @func_10058() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1456 = %1454.0;
  %1457 = %1455.0;
  (%1456, %1457)
}

def @func_16076() -> (Tensor[(10, 12, 15), float32],) {
  %1458 = @func_14358() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1459 = %1458.0;
  (%1459,)
}

def @func_14358() -> (Tensor[(10, 12, 15), float32],) {
  %1460 = @func_12473() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1461 = %1460.2;
  (%1461,)
}

def @func_12473() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1462 = @func_4079() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1463 = @func_10896() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1464 = @func_4724() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32]) */;
  %1465 = %1462.0;
  %1466 = %1463.0;
  %1467 = %1464.2;
  (%1465, %1466, %1467)
}

def @main(%var_21836: Tensor[(12, 2), float32]) -> (Tensor[(12, 2), float32],) {
  %1468 = cast(%var_21836, dtype="float32") /* ty=Tensor[(12, 2), float32] */;
  %1469 = rsqrt(%1468) /* ty=Tensor[(12, 2), float32] */;
  (%1469,)
}

def @func_11719() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(99), float32]) {
  %1470 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1471 = cast(meta[relay.Constant][56] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %1472 = reshape(%1471, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), float32] */;
  %1473 = @func_11642(%1472) /* ty=(Tensor[(1, 9, 11), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1474 = %1470.0;
  %1475 = %1473.2;
  (%1474, %1475, meta[relay.Constant][56] /* ty=Tensor[(99), float32] */)
}

def @func_15842() -> (Tensor[(10, 12, 15), float32],) {
  %1476 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1477 = %1476.0;
  (%1477,)
}

def @func_5100(%var_5075: Tensor[(8, 7, 14), int64], %var_5076: Tensor[(8, 7, 14), int64]) -> (Tensor[(8, 7, 14), int64], Tensor[(10, 12, 15), float32]) {
  %1478 = cast(%var_5076, dtype="int64") /* ty=Tensor[(8, 7, 14), int64] */;
  %1479 = shape_of(%var_5075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1480 = cast(%var_5075, dtype="int64") /* ty=Tensor[(8, 7, 14), int64] */;
  %1481 = dyn.reshape(%1478, %1479, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1482 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1483 = bitwise_or(%1480, %1481) /* ty=Tensor[(8, 7, 14), int64] */;
  %1484 = %1482.1;
  (%1483, %1484)
}

def @func_14716() -> (Tensor[(10, 12, 15), float32],) {
  %1485 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1486 = %1485.0;
  (%1486,)
}

def @func_20827() -> (Tensor[(10, 12, 15), float32],) {
  %1487 = @func_16637() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1487,)
}

def @func_2110() -> (Tensor[(10, 12, 15), float32],) {
  %1488 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1488,)
}

def @func_14970() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1489 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1490 = @func_8984() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1491 = %1489.0;
  %1492 = %1490.2;
  %1493 = @func_8568() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1491, %1492, %1493)
}

def @func_13278() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) {
  %1494 = @func_10038() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1495 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1496 = %1495.0;
  %1497 = cast(%1496, dtype="float64") /* ty=Tensor[(10, 12, 15), float64] */;
  %1498 = cast(meta[relay.Constant][57] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1499 = cast(meta[relay.Constant][58] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1500 = reshape(%1498, newshape=[]) /* ty=uint8 */;
  %1501 = reshape(%1499, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
  %1502 = @func_1932(%1500, %1501) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) */;
  %1503 = %1494.0;
  %1504 = sinh(%1497) /* ty=Tensor[(10, 12, 15), float64] */;
  %1505 = %1502.2;
  (%1503, %1504, %1505, meta[relay.Constant][57] /* ty=uint8 */, meta[relay.Constant][58] /* ty=Tensor[(189), uint8] */)
}

def @func_11203() -> (Tensor[(10, 12, 15), float32],) {
  %1506 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1507 = %1506.0;
  (%1507,)
}

def @func_12552(%var_12543: Tensor[(784), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  %1508 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1509 = cast(meta[relay.Constant][59] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1510 = reshape(%1509, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1511 = @func_4423(%1510) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */;
  %1512 = @func_10683() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(10, 12, 15), float32]) */;
  %1513 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1514 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1515 = cast(%var_12543, dtype="int64") /* ty=Tensor[(784), int64] */;
  %1516 = reshape(%1515, newshape=[8, 98]) /* ty=Tensor[(8, 98), int64] */;
  %1517 = @func_8866(%1516) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 98), int64]) */;
  %1518 = %1508.0;
  %1519 = %1511.0;
  %1520 = %1512.1;
  %1521 = %1513.0;
  %1522 = %1514.0;
  %1523 = %1517.1;
  (%1518, %1519, meta[relay.Constant][59] /* ty=Tensor[(378), float64] */, %1520, %1521, %1522, %1523, %var_12543)
}

def @func_17214() -> (Tensor[(10, 12, 15), float32],) {
  %1524 = @func_11806() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1524,)
}

def @func_17533() -> Tensor[(10, 12, 15), float32] {
  %1525 = @func_3762() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1525.0
}

def @func_1495() -> Tensor[(10, 12, 15), float32] {
  %1526 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1526.1
}

def @func_4031() -> Tensor[(10, 12, 15), float32] {
  %1527 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1527.0
}

def @func_18067(%var_18064: float64, %var_18065: Tensor[(32), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(?, 16, 2), uint16], float64, Tensor[(32), float64]) {
  %1528 = cast(%var_18064, dtype="float64") /* ty=float64 */;
  %1529 = cast(%var_18065, dtype="float64") /* ty=Tensor[(32), float64] */;
  %1530 = reshape(%1528, newshape=[]) /* ty=float64 */;
  %1531 = reshape(%1529, newshape=[1, 16, 2]) /* ty=Tensor[(1, 16, 2), float64] */;
  %1532 = @func_8359() /* ty=Tensor[(10, 12, 15), float32] */;
  %1533 = @func_13740(%1530, %1531) /* ty=Tensor[(?, 16, 2), uint16] */;
  (%1532, %1533, %var_18064, %var_18065)
}

def @func_16310() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1534 = @func_9409() /* ty=Tensor[(10, 12, 15), float32] */;
  %1535 = @func_14606() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1534, %1535)
}

def @func_16637() -> Tensor[(10, 12, 15), float32] {
  %1536 = @func_3238() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1536.0
}

def @func_21317() -> Tensor[(10, 12, 15), uint64] {
  %1537 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1537.0
}

def @func_4638() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %1538 = @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %1539 = %1538.1;
  %1540 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1539, %1540)
}

def @func_2097() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1541 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  %1542 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1541, %1542)
}

def @func_16138() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1543 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1544 = @func_14447() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1545 = %1543.0;
  %1546 = %1544.1;
  %1547 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1545, %1546, %1547)
}

def @func_5314() -> (Tensor[(10, 12, 15), float32],) {
  %1548 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1549 = %1548.0;
  (%1549,)
}

def @func_10971() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1550 = @func_8731() /* ty=Tensor[(10, 12, 15), float32] */;
  %1551 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1550, %1551)
}

def @func_12377(%var_12372: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64], Tensor[(378), float64], Tensor[(336), float64]) {
  %1552 = @func_6011() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1553 = cast(%var_12372, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1554 = cast(meta[relay.Constant][60] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1555 = reshape(%1553, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1556 = reshape(%1554, newshape=[336, 1]) /* ty=Tensor[(336, 1), float64] */;
  %1557 = @func_7176(%1555, %1556) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64]) */;
  %1558 = %1552.1;
  %1559 = %1557.2;
  (%1558, %1559, %var_12372, meta[relay.Constant][60] /* ty=Tensor[(336), float64] */)
}

def @func_15773(%var_15757: Tensor[(1, 3, 12), float32]) -> (Tensor[(1, 3, 12), float32],) {
  %1560 = cast(%var_15757, dtype="float32") /* ty=Tensor[(1, 3, 12), float32] */;
  %1561 = rsqrt(%1560) /* ty=Tensor[(1, 3, 12), float32] */;
  (%1561,)
}

def @func_14763() -> (Tensor[(588), float32], Tensor[(10, 12, 15), float32]) {
  %1562 = @func_13402() /* ty=(Tensor[(588), float32],) */;
  %1563 = %1562.0;
  %1564 = @func_10726() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1563, %1564)
}

def @func_3046(%var_3040: Tensor[(8, 7, 2), int16]) -> (Tensor[(8, 7, 2), int16],) {
  %1565 = cast(%var_3040, dtype="int16") /* ty=Tensor[(8, 7, 2), int16] */;
  %1566 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(8, 7, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1567 = cast(meta[relay.Constant][61] /* ty=Tensor[(8, 7, 2), int16] */, dtype="int16") /* ty=Tensor[(8, 7, 2), int16] */;
  %1568 = dyn.reshape(%1565, %1566, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1569 = minimum(%1567, %1568) /* ty=Tensor[(8, 7, 2), int16] */;
  (%1569,)
}

def @func_11104() -> (Tensor[(10, 12, 15), float32],) {
  %1570 = @func_6846() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1570,)
}

def @func_8984() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1571 = @func_3472() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1572 = @func_7482() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1573 = %1571.0;
  %1574 = %1572.0;
  %1575 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1573, %1574, %1575)
}

def @func_15003() -> (Tensor[(10, 12, 15), float32],) {
  %1576 = @func_3295() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1576,)
}

def @func_12907() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1577 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1578 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  %1579 = %1577.0;
  (%1578, %1579)
}

def @func_4847(%var_4844: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(189, 1), uint8]) {
  %1580 = cast(%var_4844, dtype="uint8") /* ty=Tensor[(189, 1), uint8] */;
  %1581 = reshape(%1580, newshape=[21, 9]) /* ty=Tensor[(21, 9), uint8] */;
  %1582 = @func_2336(%1581) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */;
  %1583 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  %1584 = %1582.3;
  (%1583, %1584, %var_4844)
}

def @func_8436() -> Tensor[(10, 12, 15), float32] {
  %1585 = @func_7793() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1585.1
}

def @func_9727() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1586 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1587 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1588 = %1586.0;
  %1589 = %1587.0;
  (%1588, %1589)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13720() -> Tensor[(10, 12, 15), uint64] {
  @func_13718() /* ty=Tensor[(10, 12, 15), uint64] */
}

def @func_4001(%var_4000: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), int16]) {
  %9 = fn (%var_3973: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), int16]) {
    %0 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
    %1 = @func_2950() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */;
    %2 = %1.2;
    %3 = cast(%var_3973, dtype="int16") /* ty=Tensor[(378), int16] */;
    %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(1), int32] */;
    %5 = cast(%2, dtype="int16") /* ty=Tensor[(378), int16] */;
    %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?), int16] */;
    %7 = %0.2;
    %8 = right_shift(%5, %6) /* ty=Tensor[(378), int16] */;
    (%7, %8)
  };
  %9(%var_4000) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), int16]) */
}

def @func_7542(%var_7540: Tensor[(10, 13, 12), int64], %var_7541: Tensor[(10, 13, 12), int64]) -> (Tensor[(10, 13, 12), int64], Tensor[(10, 13, 12), float32], Tensor[(10, 12, 15), float32]) {
  @func_7538(%var_7540, %var_7541) /* ty=(Tensor[(10, 13, 12), int64], Tensor[(10, 13, 12), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_14293(%var_14291: Tensor[(336), float64]) -> (Tensor[(784), int64], Tensor[(14, 8, 3), float64], Tensor[(336), float64]) {
  @func_14290(%var_14291) /* ty=(Tensor[(784), int64], Tensor[(14, 8, 3), float64], Tensor[(336), float64]) */
}

def @func_5664() -> Tensor[(10, 12, 15), float32] {
  @func_5662() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_17421() -> Tensor[(10, 12, 15), uint64] {
  @func_17419() /* ty=Tensor[(10, 12, 15), uint64] */
}

def @func_11578() -> (Tensor[(10, 12, 15), float32],) {
  @func_11576() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_9285() -> (Tensor[(588), float32],) {
  %10 = @func_7064() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */;
  %11 = %10.2;
  (%11,)
}

def @func_20262(%var_20260: Tensor[(1716), uint8], %var_20261: Tensor[(378, 1), float64]) -> (Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32], Tensor[(11, 13, 12), float64], Tensor[(1716), uint8], Tensor[(378, 1), float64]) {
  @func_20258(%var_20260, %var_20261) /* ty=(Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32], Tensor[(11, 13, 12), float64], Tensor[(1716), uint8], Tensor[(378, 1), float64]) */
}

def @func_2291() -> (Tensor[(10, 12, 15), float32],) {
  %14 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %12 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %13 = %12.0;
    (%13,)
  };
  %14() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_8719() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %15 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  %16 = @func_3536() /* ty=Tensor[(10, 12, 15), float32] */;
  %17 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  (%15, %16, %17)
}

def @func_19642(%var_19641: uint8) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8], uint8, Tensor[(189), uint8]) {
  %28 = fn (%var_19634: uint8) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8], uint8, Tensor[(189), uint8]) {
    %18 = @func_6766() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %19 = @func_8277() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %20 = cast(%var_19634, dtype="uint8") /* ty=uint8 */;
    %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %22 = reshape(%20, newshape=[]) /* ty=uint8 */;
    %23 = reshape(%21, newshape=[189]) /* ty=Tensor[(189), uint8] */;
    %24 = @func_3083(%22, %23) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189), uint8]) */;
    %25 = %18.1;
    %26 = %19.0;
    %27 = %24.4;
    (%25, %26, %27, %var_19634, meta[relay.Constant][0] /* ty=Tensor[(189), uint8] */)
  };
  %28(%var_19641) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8], uint8, Tensor[(189), uint8]) */
}

def @func_10060() -> (Tensor[(10, 12, 15), float32],) {
  @func_10058() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_20707() -> Tensor[(2, 10, 12), float32] {
  %29 = @func_15857() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %29.0
}

def @func_4153() -> (Tensor[(10, 12, 15), float32],) {
  %30 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  (%30,)
}

def @func_1230(%var_1228: uint8, %var_1229: Tensor[(7, 9, 3), uint8]) -> (Tensor[(7, 9, 3), uint8],) {
  @func_1226(%var_1228, %var_1229) /* ty=(Tensor[(7, 9, 3), uint8],) */
}

def @func_3183() -> (Tensor[(10, 12, 15), float32],) {
  @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_9040(%var_9039: Tensor[(1, 7, 10), bool]) -> (Tensor[(1, 7, 10), bool],) {
  %34 = fn (%var_9030: Tensor[(1, 7, 10), bool]) -> (Tensor[(1, 7, 10), bool],) {
    %31 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %32 = cast(%var_9030, dtype="bool") /* ty=Tensor[(1, 7, 10), bool] */;
    %33 = logical_or(%31, %32) /* ty=Tensor[(1, 7, 10), bool] */;
    (%33,)
  };
  %34(%var_9039) /* ty=(Tensor[(1, 7, 10), bool],) */
}

def @func_16839() -> (Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) {
  %35 = @func_13156() /* ty=(Tensor[(15, 9, 16), float64],) */;
  %36 = %35.0;
  %37 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  (%36, %37)
}

def @func_16140() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_16138() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_8786(%var_8785: Tensor[(1, 378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(1, 378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
  %50 = fn (%var_8749: Tensor[(1, 378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(1, 378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
    %38 = cast(%var_8749, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
    %39 = reshape(%38, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %40 = @func_4423(%39) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */;
    %41 = %40.1;
    %42 = cast(%41, dtype="float64") /* ty=Tensor[(378), float64] */;
    %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %44 = reshape(%42, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %45 = reshape(%43, newshape=[189]) /* ty=Tensor[(189), uint8] */;
    %46 = @func_7611(%44, %45) /* ty=(Tensor[(10, 12, 15), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) */;
    %47 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
    %48 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
    %49 = %46.1;
    (%47, %41, %var_8749, %48, %49, meta[relay.Constant][1] /* ty=Tensor[(189), uint8] */)
  };
  %50(%var_8785) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(1, 378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */
}

def @func_13951(%var_13949: Tensor[(9, 6, 1), float32]) -> Tensor[(9, 6, 1), float32] {
  @func_13948(%var_13949) /* ty=Tensor[(9, 6, 1), float32] */
}

def @func_10683() -> (Tensor[(15, 10, 3), float32], Tensor[(10, 12, 15), float32]) {
  %51 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %52 = %51.0;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %54 = sinh(%53) /* ty=Tensor[(15, 10, 3), float32] */;
  %55 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%54, %55)
}

def @func_3219() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %61 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %56 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %57 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %58 = %56.0;
    %59 = %57.0;
    %60 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
    (%58, %59, %60)
  };
  %61() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_11248() -> Tensor[(10, 12, 15), float32] {
  %62 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %62.0
}

def @func_18254() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %63 = @func_8719() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %64 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %65 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %66 = %63.1;
  %67 = %64.0;
  %68 = %65.2;
  (%66, %67, %68)
}

def @func_17328() -> uint8 {
  @func_17326() /* ty=uint8 */
}

def @func_17495() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %69 = @func_7482() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %70 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  %71 = %69.1;
  (%70, %71)
}

def @func_18868() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %75 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %72 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %73 = %72.0;
    %74 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
    (%73, %74)
  };
  %75() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_15288() -> (Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) {
  %78 = fn () -> (Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) {
    %76 = @func_11058() /* ty=Tensor[(15, 9, 16), bool] */;
    %77 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
    (%76, %77)
  };
  %78() /* ty=(Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) */
}

def @func_11200() -> (uint8, Tensor[(10, 12, 15), float32]) {
  @func_11198() /* ty=(uint8, Tensor[(10, 12, 15), float32]) */
}

def @func_20093(%var_20053: Tensor[(1, 13, 12), float64], %var_20062: Tensor[(11), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(1, 1, 11), float32], Tensor[(11), float32], Tensor[(15, 10, 3), float64], Tensor[(5, 13, 12), bool]) {
  %79 = @func_10797() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %80 = cast(%var_20062, dtype="float32") /* ty=Tensor[(11), float32] */;
  %81 = reshape(%80, newshape=[1, 1, 11]) /* ty=Tensor[(1, 1, 11), float32] */;
  %82 = @func_7027(%81) /* ty=(Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) */;
  %83 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %84 = cast(%var_20053, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
  %85 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(1, 13, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %88 = minimum(%86, %87) /* ty=Tensor[(?, 13, 12), float64] */;
  %89 = cast(%88, dtype="bool") /* ty=Tensor[(?, 13, 12), bool] */;
  %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 13, 12), float64] */, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
  %91 = %79.0;
  %92 = %82.0;
  %93 = %83.0;
  %94 = greater(%89, %90) /* ty=Tensor[(5, 13, 12), bool] */;
  (%91, %92, %var_20062, %93, %94)
}

def @func_19765() -> (Tensor[(10, 12, 15), float64],) {
  %97 = fn () -> (Tensor[(10, 12, 15), float64],) {
    %95 = @func_13278() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) */;
    %96 = %95.1;
    (%96,)
  };
  %97() /* ty=(Tensor[(10, 12, 15), float64],) */
}

def @func_10581(%var_10578: Tensor[(189), uint8], %var_10579: Tensor[(189), uint8], %var_10580: Tensor[(378, 1), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(189), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(378, 1), float64], Tensor[(10, 12, 15), float32]) {
  %125 = fn (%var_10542: Tensor[(189), uint8], %var_10553: Tensor[(189), uint8], %var_10566: Tensor[(378, 1), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(189), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(378, 1), float64], Tensor[(10, 12, 15), float32]) {
    %98 = @func_6996() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %99 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %100 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %101 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %102 = cast(%var_10542, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %103 = reshape(%102, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
    %104 = @func_4847(%103) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(189, 1), uint8]) */;
    %105 = @func_9990() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
    %106 = cast(%var_10553, dtype="bool") /* ty=Tensor[(189), bool] */;
    %107 = shape_of(%var_10542, dtype="int32") /* ty=Tensor[(1), int32] */;
    %108 = cast(%var_10542, dtype="bool") /* ty=Tensor[(189), bool] */;
    %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?), bool] */;
    %110 = @func_10058() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %111 = cast(%var_10566, dtype="float64") /* ty=Tensor[(378, 1), float64] */;
    %112 = reshape(%111, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %113 = @func_8936(%112) /* ty=(Tensor[(16, 12, 12), uint16], Tensor[(336), float64], Tensor[(378), float64]) */;
    %114 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %115 = %98.0;
    %116 = %99.0;
    %117 = %100.1;
    %118 = %101.0;
    %119 = %104.1;
    %120 = %105.1;
    %121 = less(%108, %109) /* ty=Tensor[(189), bool] */;
    %122 = %110.0;
    %123 = %113.2;
    %124 = %114.1;
    (%115, %116, %117, %118, %119, %120, %121, %122, %123, %var_10566, %124)
  };
  %125(%var_10578, %var_10579, %var_10580) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(189), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(378, 1), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_11060() -> Tensor[(15, 9, 16), bool] {
  @func_11058() /* ty=Tensor[(15, 9, 16), bool] */
}

def @func_17214() -> (Tensor[(10, 12, 15), float32],) {
  %126 = @func_11806() /* ty=Tensor[(10, 12, 15), float32] */;
  (%126,)
}

def @func_7658() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %130 = fn () -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
    %127 = @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %128 = @func_6229() /* ty=Tensor[(10, 12, 15), uint64] */;
    %129 = %127.0;
    (%128, %129)
  };
  %130() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */
}

def @func_16931() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %131 = @func_15842() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %132 = @func_15003() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %133 = %131.0;
  %134 = %132.0;
  (%133, %134)
}

def @func_2449(%var_2410: Tensor[(3, 126), float64], %var_2411: Tensor[(336), float64], %var_2415: Tensor[(3, 126), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], Tensor[(3, 126), int64], Tensor[(10, 12, 15), float32]) {
  %135 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %136 = cast(%var_2410, dtype="float64") /* ty=Tensor[(3, 126), float64] */;
  %137 = cast(%var_2411, dtype="float64") /* ty=Tensor[(336), float64] */;
  %138 = reshape(%136, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %139 = reshape(%137, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %140 = @func_1612(%138, %139) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %141 = cast(meta[relay.Constant][4] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %142 = %140.6;
  %143 = cast(%142, dtype="uint8") /* ty=Tensor[(21, 9), uint8] */;
  %144 = reshape(%141, newshape=[]) /* ty=uint8 */;
  %145 = reshape(%143, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
  %146 = @func_1226(%144, %145) /* ty=(Tensor[(7, 9, 3), uint8],) */;
  %147 = cast(%var_2415, dtype="bool") /* ty=Tensor[(3, 126), bool] */;
  %148 = shape_of(%var_2410, dtype="int32") /* ty=Tensor[(2), int32] */;
  %149 = cast(%var_2410, dtype="bool") /* ty=Tensor[(3, 126), bool] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %151 = logical_and(%149, %150) /* ty=Tensor[(3, 126), bool] */;
  %152 = cast(%151, dtype="int64") /* ty=Tensor[(3, 126), int64] */;
  %153 = cast(meta[relay.Constant][4] /* ty=uint8 */, dtype="int64") /* ty=int64 */;
  %154 = %135.0;
  %155 = %146.0;
  %156 = left_shift(%152, %153) /* ty=Tensor[(3, 126), int64] */;
  %157 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  (%154, %142, %var_2411, %155, %156, %157)
}

def @func_17763() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  @func_17761() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_19260() -> (Tensor[(10, 12, 15), float32], uint8) {
  %158 = @func_6106() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(910), int64], Tensor[(10, 12, 15), float32]) */;
  %159 = @func_18215() /* ty=(uint8,) */;
  %160 = %158.2;
  %161 = %159.0;
  (%160, %161)
}

def @func_4690() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_7381() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_7379() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_16563() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8) {
  @func_16561() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8) */
}

def @func_17289(%var_17288: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(378), float64]) {
  %174 = fn (%var_17281: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(378), float64]) {
    %162 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %163 = @func_16561() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8) */;
    %164 = @func_11783() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %165 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %166 = cast(%var_17281, dtype="float64") /* ty=Tensor[(378), float64] */;
    %167 = reshape(%166, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %168 = @func_3999(%167) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), int16]) */;
    %169 = %162.2;
    %170 = %163.2;
    %171 = %164.1;
    %172 = %165.0;
    %173 = %168.0;
    (%169, %170, %171, %172, %173, %var_17281)
  };
  %174(%var_17288) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(378), float64]) */
}

def @func_9990() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
  %175 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %176 = @func_8394() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) */;
  %177 = @func_8359() /* ty=Tensor[(10, 12, 15), float32] */;
  %178 = %175.0;
  %179 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  %180 = %176.4;
  (%177, %178, %179, %180)
}

def @func_7251() -> (Tensor[(10, 12, 15), float32],) {
  @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_2988() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) {
  @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */
}

def @func_11642(%var_11616: Tensor[(1, 9, 11), float32]) -> (Tensor[(1, 9, 11), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %181 = cast(%var_11616, dtype="float32") /* ty=Tensor[(1, 9, 11), float32] */;
  %182 = acos(%181) /* ty=Tensor[(1, 9, 11), float32] */;
  %183 = @func_8309() /* ty=Tensor[(10, 12, 15), float32] */;
  %184 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  (%182, %183, %184)
}

def @func_7223() -> (Tensor[(10, 12, 15), float32],) {
  %187 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %185 = @func_6138() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %186 = %185.0;
    (%186,)
  };
  %187() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_10058() -> (Tensor[(10, 12, 15), float32],) {
  %188 = @func_4724() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32]) */;
  %189 = %188.2;
  (%189,)
}

def @func_6465() -> (Tensor[(336), float64], uint8) {
  %194 = fn () -> (Tensor[(336), float64], uint8) {
    %190 = @func_2211() /* ty=(Tensor[(336), float64],) */;
    %191 = @func_6106() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(910), int64], Tensor[(10, 12, 15), float32]) */;
    %192 = %190.0;
    %193 = %191.0;
    (%192, %193)
  };
  %194() /* ty=(Tensor[(336), float64], uint8) */
}

def @func_15640(%var_15638: Tensor[(1980), uint32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(11, 12, 15), uint32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(1980), float64]) {
  @func_15637(%var_15638) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(11, 12, 15), uint32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(1980), float64]) */
}

def @func_11890(%var_11881: Tensor[(378), float64], %var_11882: Tensor[(2160), bool]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(2160), bool]) {
  %195 = cast(%var_11881, dtype="float64") /* ty=Tensor[(378), float64] */;
  %196 = cast(%var_11882, dtype="bool") /* ty=Tensor[(2160), bool] */;
  %197 = reshape(%195, newshape=[42, 9]) /* ty=Tensor[(42, 9), float64] */;
  %198 = reshape(%196, newshape=[15, 9, 16]) /* ty=Tensor[(15, 9, 16), bool] */;
  %199 = @func_11418(%197, %198) /* ty=(Tensor[(336), float64], Tensor[(336), float64], Tensor[(1, 378), float64], Tensor[(42, 9), float64], Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) */;
  %200 = @func_3717() /* ty=Tensor[(10, 12, 15), float32] */;
  %201 = @func_3536() /* ty=Tensor[(10, 12, 15), float32] */;
  %202 = %199.1;
  (%200, %201, %202, %var_11881, %var_11882)
}

def @func_13816() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %203 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %204 = @func_12907() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %205 = %203.1;
  %206 = %204.0;
  (%205, %206)
}

def @func_19126(%var_19124: Tensor[(42, 4), int16]) -> (Tensor[(10, 12, 15), float32], Tensor[(4, 6, 7), int16], Tensor[(42, 4), int16]) {
  @func_19123(%var_19124) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(4, 6, 7), int16], Tensor[(42, 4), int16]) */
}

def @func_7769() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %214 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %207 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %208 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %209 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
    %210 = %207.0;
    %211 = @func_6876() /* ty=Tensor[(10, 12, 15), float32] */;
    %212 = %208.0;
    %213 = %209.1;
    (%210, %211, %212, %213)
  };
  %214() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_15686() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %219 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %215 = @func_10151() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %216 = @func_11248() /* ty=Tensor[(10, 12, 15), float32] */;
    %217 = @func_10291() /* ty=Tensor[(10, 12, 15), float32] */;
    %218 = %215.0;
    (%216, %217, %218)
  };
  %219() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_6579() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %224 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %220 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %221 = @func_3472() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %222 = %220.1;
    %223 = %221.0;
    (%222, %223)
  };
  %224() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_19262() -> (Tensor[(10, 12, 15), float32], uint8) {
  @func_19260() /* ty=(Tensor[(10, 12, 15), float32], uint8) */
}

def @func_8029(%var_8027: Tensor[(378), float64], %var_8028: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(189), uint8]) {
  @func_8025(%var_8027, %var_8028) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(189), uint8]) */
}

def @func_20132() -> Tensor[(10, 12, 15), float32] {
  @func_20130() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_7307() -> Tensor[(10, 12, 15), float32] {
  %226 = fn () -> Tensor[(10, 12, 15), float32] {
    %225 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %225.0
  };
  %226() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_18886() -> (Tensor[(10, 12, 15), float32],) {
  %229 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %227 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %228 = %227.0;
    (%228,)
  };
  %229() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_19911() -> (Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) {
  @func_19909() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_20428(%var_20395: Tensor[(9, 6, 9), float64]) -> (Tensor[(9, 6, 9), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  %230 = cast(%var_20395, dtype="float64") /* ty=Tensor[(9, 6, 9), float64] */;
  %231 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %232 = @func_16739() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %233 = cast(meta[relay.Constant][5] /* ty=Tensor[(784), int64] */, dtype="int64") /* ty=Tensor[(784), int64] */;
  %234 = reshape(%233, newshape=[784]) /* ty=Tensor[(784), int64] */;
  %235 = @func_12552(%234) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) */;
  %236 = log2(%230) /* ty=Tensor[(9, 6, 9), float64] */;
  %237 = %231.0;
  %238 = %232.1;
  %239 = @func_16877() /* ty=uint8 */;
  %240 = %235.4;
  (%236, %237, %238, %239, %240, meta[relay.Constant][5] /* ty=Tensor[(784), int64] */)
}

def @func_8278() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %245 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %241 = @func_5962() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %242 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %243 = %241.1;
    %244 = %242.0;
    (%243, %244)
  };
  %245() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_2151() -> (Tensor[(10, 12, 15), float32],) {
  %248 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %246 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %247 = %246.1;
    (%247,)
  };
  %248() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_4724() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32]) {
  %249 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %250 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %251 = @func_2258() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %252 = %249.0;
  %253 = %250.0;
  %254 = %251.0;
  (%252, %253, %254)
}

def @func_6140() -> (Tensor[(10, 12, 15), float32],) {
  @func_6138() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_6319(%var_6306: Tensor[(4, 6, 7), int16]) -> (Tensor[(4, 6, 7), int16], Tensor[(15, 10, 3), float64]) {
  %255 = cast(%var_6306, dtype="int16") /* ty=Tensor[(4, 6, 7), int16] */;
  %256 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(4, 6, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 6, 7), int16] */, dtype="int16") /* ty=Tensor[(4, 6, 7), int16] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %259 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %260 = add(%257, %258) /* ty=Tensor[(4, 6, 7), int16] */;
  %261 = %259.0;
  (%260, %261)
}

def @func_3899(%var_3895: uint8, %var_3896: Tensor[(1, 189), uint8], %var_3897: Tensor[(10, 12, 15), float32], %var_3898: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(?, 189), bool], Tensor[(10, 12, 15), uint64], Tensor[(14, 8, 3), float64], Tensor[(336), float64], Tensor[(588), float32]) {
  %289 = fn (%var_3785: uint8, %var_3786: Tensor[(1, 189), uint8], %var_3822: Tensor[(10, 12, 15), float32], %var_3873: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(?, 189), bool], Tensor[(10, 12, 15), uint64], Tensor[(14, 8, 3), float64], Tensor[(336), float64], Tensor[(588), float32]) {
    %262 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %263 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %264 = cast(%var_3785, dtype="uint8") /* ty=uint8 */;
    %265 = cast(%var_3786, dtype="uint8") /* ty=Tensor[(1, 189), uint8] */;
    %266 = reshape(%264, newshape=[]) /* ty=uint8 */;
    %267 = reshape(%265, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
    %268 = @func_1226(%266, %267) /* ty=(Tensor[(7, 9, 3), uint8],) */;
    %269 = %268.0;
    %270 = cast(%269, dtype="bool") /* ty=Tensor[(7, 9, 3), bool] */;
    %271 = shape_of(%var_3786, dtype="int32") /* ty=Tensor[(2), int32] */;
    %272 = cast(%var_3786, dtype="bool") /* ty=Tensor[(1, 189), bool] */;
    %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %274 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %275 = %274.0;
    %276 = cast(%var_3822, dtype="uint64") /* ty=Tensor[(10, 12, 15), uint64] */;
    %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %278 = cast(%275, dtype="uint64") /* ty=Tensor[(10, 12, 15), uint64] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %280 = cast(%var_3873, dtype="float64") /* ty=Tensor[(336), float64] */;
    %281 = reshape(%280, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
    %282 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
    %283 = %262.0;
    %284 = %263.0;
    %285 = greater_equal(%272, %273) /* ty=Tensor[(?, 189), bool] */;
    %286 = left_shift(%278, %279) /* ty=Tensor[(10, 12, 15), uint64] */;
    %287 = @func_333(%281) /* ty=Tensor[(14, 8, 3), float64] */;
    %288 = %282.3;
    (%283, %var_3785, %284, %285, %286, %287, %var_3873, %288)
  };
  %289(%var_3895, %var_3896, %var_3897, %var_3898) /* ty=(Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(?, 189), bool], Tensor[(10, 12, 15), uint64], Tensor[(14, 8, 3), float64], Tensor[(336), float64], Tensor[(588), float32]) */
}

def @func_14359() -> (Tensor[(10, 12, 15), float32],) {
  %292 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %290 = @func_12473() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %291 = %290.2;
    (%291,)
  };
  %292() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_4031() -> Tensor[(10, 12, 15), float32] {
  %293 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %293.0
}

def @func_17986() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(14, 16, 2), int64], Tensor[(224, 2), float32], Tensor[(10, 12, 15), float32]) {
  @func_17984() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(14, 16, 2), int64], Tensor[(224, 2), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_19495() -> (uint8,) {
  %296 = fn () -> (uint8,) {
    %294 = @func_13211() /* ty=(Tensor[(10, 12, 15), float32], uint8) */;
    %295 = %294.1;
    (%295,)
  };
  %296() /* ty=(uint8,) */
}

def @func_19909() -> (Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) {
  %297 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %298 = @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %299 = @func_8731() /* ty=Tensor[(10, 12, 15), float32] */;
  %300 = %297.0;
  %301 = %298.0;
  (%299, %300, %301)
}

def @func_10727() -> Tensor[(10, 12, 15), float32] {
  %302 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_7232() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %302() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_5411(%var_5375: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(336), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %303 = cast(meta[relay.Constant][7] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %304 = cast(%var_5375, dtype="float64") /* ty=Tensor[(336), float64] */;
  %305 = reshape(%303, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %306 = reshape(%304, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %307 = @func_1612(%305, %306) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %308 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %309 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %310 = @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %311 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  %312 = %307.9;
  %313 = %308.0;
  %314 = %309.0;
  %315 = %310.1;
  (%311, %312, meta[relay.Constant][7] /* ty=Tensor[(378), float64] */, %var_5375, %313, %314, %315)
}

def @func_12379(%var_12378: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64], Tensor[(378), float64], Tensor[(336), float64]) {
  %324 = fn (%var_12372: Tensor[(378), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64], Tensor[(378), float64], Tensor[(336), float64]) {
    %316 = @func_6011() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %317 = cast(%var_12372, dtype="float64") /* ty=Tensor[(378), float64] */;
    %318 = cast(meta[relay.Constant][8] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %319 = reshape(%317, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %320 = reshape(%318, newshape=[336, 1]) /* ty=Tensor[(336, 1), float64] */;
    %321 = @func_7176(%319, %320) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64]) */;
    %322 = %316.1;
    %323 = %321.2;
    (%322, %323, %var_12372, meta[relay.Constant][8] /* ty=Tensor[(336), float64] */)
  };
  %324(%var_12378) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64], Tensor[(378), float64], Tensor[(336), float64]) */
}

def @func_2212() -> (Tensor[(336), float64],) {
  %327 = fn () -> (Tensor[(336), float64],) {
    %325 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
    %326 = %325.3;
    (%326,)
  };
  %327() /* ty=(Tensor[(336), float64],) */
}

def @func_3239() -> (Tensor[(10, 12, 15), float32],) {
  %330 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %328 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %329 = %328.0;
    (%329,)
  };
  %330() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_4640() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_10369() -> (Tensor[(784), int64],) {
  @func_10367() /* ty=(Tensor[(784), int64],) */
}

def @func_5962() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %331 = @func_2489() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %332 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %333 = %331.0;
  %334 = %332.1;
  (%333, %334)
}

def @func_4081() -> (Tensor[(10, 12, 15), float32],) {
  @func_4079() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_3537() -> Tensor[(10, 12, 15), float32] {
  %335 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_2581() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %335() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_18962() -> (Tensor[(336), float64], Tensor[(784), int64]) {
  %340 = fn () -> (Tensor[(336), float64], Tensor[(784), int64]) {
    %336 = @func_2211() /* ty=(Tensor[(336), float64],) */;
    %337 = @func_15156() /* ty=(Tensor[(784), int64],) */;
    %338 = %336.0;
    %339 = %337.0;
    (%338, %339)
  };
  %340() /* ty=(Tensor[(336), float64], Tensor[(784), int64]) */
}

def @func_8544(%var_8542: Tensor[(12, 8, 5), uint32], %var_8543: Tensor[(12, 8, 5), uint32]) -> (Tensor[(12, 8, 5), bool], Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) {
  %352 = fn (%var_8527: Tensor[(12, 8, 5), uint32], %var_8528: Tensor[(12, 8, 5), uint32]) -> (Tensor[(12, 8, 5), bool], Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) {
    %341 = cast(%var_8528, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
    %342 = shape_of(%var_8527, dtype="int32") /* ty=Tensor[(3), int32] */;
    %343 = cast(%var_8527, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
    %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %345 = cast(meta[relay.Constant][9] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %346 = reshape(%345, newshape=[21, 9]) /* ty=Tensor[(21, 9), uint8] */;
    %347 = @func_2336(%346) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */;
    %348 = @func_3472() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %349 = greater_equal(%343, %344) /* ty=Tensor[(12, 8, 5), bool] */;
    %350 = %347.4;
    %351 = %348.0;
    (%349, %350, meta[relay.Constant][9] /* ty=Tensor[(189), uint8] */, %351)
  };
  %352(%var_8542, %var_8543) /* ty=(Tensor[(12, 8, 5), bool], Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) */
}

def @func_17779(%var_17774: uint64, %var_17775: Tensor[(1, 8, 5), uint64]) -> Tensor[(1, 8, 5), uint64] {
  %353 = cast(%var_17774, dtype="uint64") /* ty=uint64 */;
  %354 = cast(%var_17775, dtype="uint64") /* ty=Tensor[(1, 8, 5), uint64] */;
  bitwise_xor(%353, %354) /* ty=Tensor[(1, 8, 5), uint64] */
}

def @func_2583() -> Tensor[(10, 12, 15), float32] {
  @func_2581() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_18032() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %361 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %355 = @func_10629() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %356 = @func_9128() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %357 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %358 = %355.0;
    %359 = %356.0;
    %360 = %357.0;
    (%358, %359, %360)
  };
  %361() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_10898() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  @func_10896() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */
}

def @func_13672() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %362 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %363 = @func_11914() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %364 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %365 = %362.0;
  %366 = %363.0;
  %367 = %364.3;
  (%365, %366, %367)
}

def @func_1615(%var_1613: Tensor[(378), float64], %var_1614: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) {
  %390 = fn (%var_1558: Tensor[(378), float64], %var_1563: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) {
    %368 = cast(%var_1558, dtype="float64") /* ty=Tensor[(378), float64] */;
    %369 = reshape(%368, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), float64] */;
    %370 = cast(meta[relay.Constant][10] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %371 = cast(meta[relay.Constant][11] /* ty=Tensor[(21, 9), uint8] */, dtype="uint8") /* ty=Tensor[(21, 9), uint8] */;
    %372 = reshape(%370, newshape=[]) /* ty=uint8 */;
    %373 = reshape(%371, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
    %374 = @func_1226(%372, %373) /* ty=(Tensor[(7, 9, 3), uint8],) */;
    %375 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %376 = cast(%var_1558, dtype="float64") /* ty=Tensor[(378), float64] */;
    %377 = reshape(%376, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), float64] */;
    %378 = cast(%var_1563, dtype="float64") /* ty=Tensor[(336), float64] */;
    %379 = reshape(%378, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
    %380 = @func_333(%379) /* ty=Tensor[(14, 8, 3), float64] */;
    %381 = cast(%380, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
    %382 = asin(%381) /* ty=Tensor[(14, 8, 3), float64] */;
    %383 = cast(%382, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
    %384 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
    %385 = @func_170(%369) /* ty=Tensor[(9, 7, 6), float64] */;
    %386 = %374.0;
    %387 = %375.1;
    %388 = @func_170(%377) /* ty=Tensor[(9, 7, 6), float64] */;
    %389 = rsqrt(%383) /* ty=Tensor[(14, 8, 3), float64] */;
    (%384, %385, %var_1558, %var_1563, %386, meta[relay.Constant][10] /* ty=uint8 */, meta[relay.Constant][11] /* ty=Tensor[(21, 9), uint8] */, %387, %388, %389)
  };
  %390(%var_1613, %var_1614) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */
}

def @func_5259(%var_5224: Tensor[(7, 13, 10), int64]) -> (Tensor[(7, 13, 10), int64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %391 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %392 = cast(%var_5224, dtype="int64") /* ty=Tensor[(7, 13, 10), int64] */;
  %393 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %394 = @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %395 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %396 = left_shift(%391, %392) /* ty=Tensor[(7, 13, 10), int64] */;
  %397 = %393.0;
  %398 = %394.0;
  %399 = %395.0;
  %400 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  %401 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%396, %397, %398, %399, %400, %401)
}

def @func_19851(%var_19850: Tensor[(13, 12, 10), bool]) -> (Tensor[(13, 12, 10), bool], Tensor[(13, 12, 10), float32], Tensor[(336), float64]) {
  %411 = fn (%var_19827: Tensor[(13, 12, 10), bool]) -> (Tensor[(13, 12, 10), bool], Tensor[(13, 12, 10), float32], Tensor[(336), float64]) {
    %402 = cast(%var_19827, dtype="bool") /* ty=Tensor[(13, 12, 10), bool] */;
    %403 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(13, 12, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %404 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 12, 10), bool] */, dtype="bool") /* ty=Tensor[(13, 12, 10), bool] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %406 = cast(%var_19827, dtype="float32") /* ty=Tensor[(13, 12, 10), float32] */;
    %407 = @func_2211() /* ty=(Tensor[(336), float64],) */;
    %408 = logical_and(%404, %405) /* ty=Tensor[(13, 12, 10), bool] */;
    %409 = asinh(%406) /* ty=Tensor[(13, 12, 10), float32] */;
    %410 = %407.0;
    (%408, %409, %410)
  };
  %411(%var_19850) /* ty=(Tensor[(13, 12, 10), bool], Tensor[(13, 12, 10), float32], Tensor[(336), float64]) */
}

def @func_16841() -> (Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) {
  @func_16839() /* ty=(Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_12591(%var_12589: Tensor[(378), float64]) -> (Tensor[(336), float64], Tensor[(10, 12, 15), float64], Tensor[(336), float64], Tensor[(378), float64]) {
  @func_12588(%var_12589) /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float64], Tensor[(336), float64], Tensor[(378), float64]) */
}

def @func_21071() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  @func_21069() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_6596() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) {
  %412 = @func_3766() /* ty=(Tensor[(336), float64],) */;
  %413 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %414 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %415 = %412.0;
  %416 = %413.2;
  %417 = %414.0;
  (%415, %416, %417)
}

def @func_4425(%var_4424: Tensor[(378), float64]) -> (Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) {
  %426 = fn (%var_4413: Tensor[(378), float64]) -> (Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) {
    %418 = @func_3930() /* ty=(Tensor[(336), float64],) */;
    %419 = cast(%var_4413, dtype="float64") /* ty=Tensor[(378), float64] */;
    %420 = reshape(%419, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %421 = @func_3999(%420) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), int16]) */;
    %422 = %421.1;
    %423 = cast(%422, dtype="float32") /* ty=Tensor[(378), float32] */;
    %424 = %418.0;
    %425 = acosh(%423) /* ty=Tensor[(378), float32] */;
    (%424, %var_4413, %425)
  };
  %426(%var_4424) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */
}

def @func_8868(%var_8867: Tensor[(8, 98), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 98), int64]) {
  %438 = fn (%var_8864: Tensor[(8, 98), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 98), int64]) {
    %427 = @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %428 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
    %429 = cast(%var_8864, dtype="int64") /* ty=Tensor[(8, 98), int64] */;
    %430 = cast(%var_8864, dtype="int64") /* ty=Tensor[(8, 98), int64] */;
    %431 = reshape(%429, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int64] */;
    %432 = reshape(%430, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int64] */;
    %433 = @func_5100(%431, %432) /* ty=(Tensor[(8, 7, 14), int64], Tensor[(10, 12, 15), float32]) */;
    %434 = %427.0;
    %435 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
    %436 = %428.0;
    %437 = %433.1;
    (%434, %435, %436, %437, %var_8864)
  };
  %438(%var_8867) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 98), int64]) */
}

def @func_12154(%var_12151: bool, %var_12152: Tensor[(12, 4, 6), bool], %var_12153: Tensor[(378), float64]) -> (Tensor[(12, 4, 6), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8]) {
  @func_12149(%var_12151, %var_12152, %var_12153) /* ty=(Tensor[(12, 4, 6), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8]) */
}

def @func_15962() -> (Tensor[(10, 12, 15), float32],) {
  %439 = @func_10945() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) */;
  %440 = %439.1;
  (%440,)
}

def @func_16879() -> uint8 {
  @func_16877() /* ty=uint8 */
}

def @func_1889() -> Tensor[(10, 12, 15), float32] {
  @func_1887() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_11250() -> Tensor[(10, 12, 15), float32] {
  @func_11248() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10741() -> (Tensor[(10, 12, 15), float32],) {
  %443 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %441 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %442 = %441.0;
    (%442,)
  };
  %443() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_8721() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_8719() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_10040() -> (Tensor[(10, 12, 15), float32],) {
  @func_10038() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_18368() -> Tensor[(336), float64] {
  %445 = fn () -> Tensor[(336), float64] {
    %444 = @func_3766() /* ty=(Tensor[(336), float64],) */;
    %444.0
  };
  %445() /* ty=Tensor[(336), float64] */
}

def @func_9848() -> Tensor[(15, 10, 3), float64] {
  %449 = fn () -> Tensor[(15, 10, 3), float64] {
    %446 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
    %447 = %446.0;
    %448 = cast(%447, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    log(%448) /* ty=Tensor[(15, 10, 3), float64] */
  };
  %449() /* ty=Tensor[(15, 10, 3), float64] */
}

def @func_14290(%var_14288: Tensor[(336), float64]) -> (Tensor[(784), int64], Tensor[(14, 8, 3), float64], Tensor[(336), float64]) {
  %450 = @func_7064() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */;
  %451 = cast(%var_14288, dtype="float64") /* ty=Tensor[(336), float64] */;
  %452 = reshape(%451, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %453 = %450.3;
  %454 = @func_333(%452) /* ty=Tensor[(14, 8, 3), float64] */;
  (%453, %454, %var_14288)
}

def @func_6847() -> Tensor[(10, 12, 15), float32] {
  %456 = fn () -> Tensor[(10, 12, 15), float32] {
    %455 = @func_2679() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) */;
    %455.3
  };
  %456() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_18203(%var_18202: Tensor[(392, 2), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(1, 1, 11), float32], Tensor[(11), float32], Tensor[(10, 12, 15), uint64], Tensor[(6, 14, 7), float64], Tensor[(588, 1), float32], Tensor[(392, 2), int64]) {
  %469 = fn (%var_18174: Tensor[(392, 2), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(1, 1, 11), float32], Tensor[(11), float32], Tensor[(10, 12, 15), uint64], Tensor[(6, 14, 7), float64], Tensor[(588, 1), float32], Tensor[(392, 2), int64]) {
    %457 = cast(meta[relay.Constant][13] /* ty=Tensor[(11), float32] */, dtype="float32") /* ty=Tensor[(11), float32] */;
    %458 = reshape(%457, newshape=[1, 1, 11]) /* ty=Tensor[(1, 1, 11), float32] */;
    %459 = @func_7027(%458) /* ty=(Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) */;
    %460 = cast(meta[relay.Constant][14] /* ty=Tensor[(588, 1), float32] */, dtype="float32") /* ty=Tensor[(588, 1), float32] */;
    %461 = cast(%var_18174, dtype="int64") /* ty=Tensor[(392, 2), int64] */;
    %462 = reshape(%460, newshape=[588]) /* ty=Tensor[(588), float32] */;
    %463 = reshape(%461, newshape=[1, 784]) /* ty=Tensor[(1, 784), int64] */;
    %464 = @func_5581(%462, %463) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(588), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(?, 784), bool], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(14, 8, 3), float64]) */;
    %465 = @func_17511() /* ty=Tensor[(10, 12, 15), float32] */;
    %466 = %459.0;
    %467 = @func_13718() /* ty=Tensor[(10, 12, 15), uint64] */;
    %468 = %464.1;
    (%465, %466, meta[relay.Constant][13] /* ty=Tensor[(11), float32] */, %467, %468, meta[relay.Constant][14] /* ty=Tensor[(588, 1), float32] */, %var_18174)
  };
  %469(%var_18202) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(1, 1, 11), float32], Tensor[(11), float32], Tensor[(10, 12, 15), uint64], Tensor[(6, 14, 7), float64], Tensor[(588, 1), float32], Tensor[(392, 2), int64]) */
}

def @func_6997() -> (Tensor[(10, 12, 15), float32],) {
  %471 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %470 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
    (%470,)
  };
  %471() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_14970() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %472 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %473 = @func_8984() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %474 = %472.0;
  %475 = %473.2;
  %476 = @func_8568() /* ty=Tensor[(10, 12, 15), float32] */;
  (%474, %475, %476)
}

def @func_10162() -> (Tensor[(10, 12, 15), float32],) {
  %479 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %477 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %478 = %477.0;
    (%478,)
  };
  %479() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_19523(%var_19521: Tensor[(8, 13, 14), float32], %var_19522: Tensor[(15, 10, 3), float64]) -> (Tensor[(8, 13, 14), float32], Tensor[(168), int16], Tensor[(15, 10, 3), int16]) {
  %491 = fn (%var_19496: Tensor[(8, 13, 14), float32], %var_19515: Tensor[(15, 10, 3), float64]) -> (Tensor[(8, 13, 14), float32], Tensor[(168), int16], Tensor[(15, 10, 3), int16]) {
    %480 = cast(%var_19496, dtype="float32") /* ty=Tensor[(8, 13, 14), float32] */;
    %481 = cast(meta[relay.Constant][15] /* ty=Tensor[(168), int16] */, dtype="int16") /* ty=Tensor[(168), int16] */;
    %482 = reshape(%481, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int16] */;
    %483 = @func_6319(%482) /* ty=(Tensor[(4, 6, 7), int16], Tensor[(15, 10, 3), float64]) */;
    %484 = %483.1;
    %485 = cast(%var_19515, dtype="int16") /* ty=Tensor[(15, 10, 3), int16] */;
    %486 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
    %487 = cast(%484, dtype="int16") /* ty=Tensor[(15, 10, 3), int16] */;
    %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %489 = atanh(%480) /* ty=Tensor[(8, 13, 14), float32] */;
    %490 = right_shift(%487, %488) /* ty=Tensor[(15, 10, 3), int16] */;
    (%489, meta[relay.Constant][15] /* ty=Tensor[(168), int16] */, %490)
  };
  %491(%var_19521, %var_19522) /* ty=(Tensor[(8, 13, 14), float32], Tensor[(168), int16], Tensor[(15, 10, 3), int16]) */
}

def @func_16945() -> Tensor[(4, 15, 13), float64] {
  %493 = fn () -> Tensor[(4, 15, 13), float64] {
    %492 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 15, 13), float64] */, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
    sigmoid(%492) /* ty=Tensor[(4, 15, 13), float64] */
  };
  %493() /* ty=Tensor[(4, 15, 13), float64] */
}

def @func_1721() -> (Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) {
  %503 = fn () -> (Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) {
    %494 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
    %495 = cast(%494, dtype="float64") /* ty=Tensor[(10, 12, 15), float64] */;
    %496 = cast(meta[relay.Constant][17] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %497 = cast(meta[relay.Constant][18] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %498 = reshape(%496, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %499 = reshape(%497, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %500 = @func_1612(%498, %499) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
    %501 = erf(%495) /* ty=Tensor[(10, 12, 15), float64] */;
    %502 = %500.5;
    (%501, %502, meta[relay.Constant][17] /* ty=Tensor[(378), float64] */, meta[relay.Constant][18] /* ty=Tensor[(336), float64] */)
  };
  %503() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */
}

def @func_17013() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_17011() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_1414() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */
}

def @func_15545() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %510 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %504 = @func_3472() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %505 = @func_3421() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %506 = @func_12267() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %507 = %504.0;
    %508 = %505.1;
    %509 = %506.0;
    (%507, %508, %509)
  };
  %510() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_13109() -> Tensor[(10, 12, 15), float32] {
  %512 = fn () -> Tensor[(10, 12, 15), float32] {
    %511 = @func_9128() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %511.0
  };
  %512() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_9882() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %513 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %514 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  (%513, %514)
}

def @func_16471() -> (Tensor[(10, 12, 15), float32],) {
  %516 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %515 = @func_4776() /* ty=Tensor[(10, 12, 15), float32] */;
    (%515,)
  };
  %516() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_20648() -> Tensor[(10, 12, 15), float32] {
  %518 = fn () -> Tensor[(10, 12, 15), float32] {
    %517 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %517.0
  };
  %518() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_3297() -> Tensor[(10, 12, 15), float32] {
  @func_3295() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_12738() -> Tensor[(10, 12, 15), float32] {
  %519 = @func_11015() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %519.0
}

def @func_3932() -> (Tensor[(336), float64],) {
  @func_3930() /* ty=(Tensor[(336), float64],) */
}

def @func_1496() -> Tensor[(10, 12, 15), float32] {
  %521 = fn () -> Tensor[(10, 12, 15), float32] {
    %520 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %520.1
  };
  %521() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_18790() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %526 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %522 = @func_18720() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %523 = @func_9727() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %524 = %522.0;
    %525 = %523.0;
    (%524, %525)
  };
  %526() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_14108() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %527 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %528 = @func_11248() /* ty=Tensor[(10, 12, 15), float32] */;
  %529 = %527.0;
  (%528, %529)
}

def @func_14016() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %534 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %530 = @func_11984() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %531 = @func_3238() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %532 = %530.1;
    %533 = %531.0;
    (%532, %533)
  };
  %534() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_8525(%var_8523: float64, %var_8524: Tensor[(2, 1, 16), float64]) -> (Tensor[(2, 1, 16), bool], Tensor[(2, ?, 16), uint64]) {
  %548 = fn (%var_8499: float64, %var_8500: Tensor[(2, 1, 16), float64]) -> (Tensor[(2, 1, 16), bool], Tensor[(2, ?, 16), uint64]) {
    %535 = cast(%var_8500, dtype="bool") /* ty=Tensor[(2, 1, 16), bool] */;
    %536 = cast(%var_8499, dtype="bool") /* ty=bool */;
    %537 = cast(%var_8499, dtype="bool") /* ty=bool */;
    %538 = cast(%var_8500, dtype="bool") /* ty=Tensor[(2, 1, 16), bool] */;
    %539 = greater_equal(%537, %538) /* ty=Tensor[(2, 1, 16), bool] */;
    %540 = cast(%539, dtype="float64") /* ty=Tensor[(2, 1, 16), float64] */;
    %541 = atanh(%540) /* ty=Tensor[(2, 1, 16), float64] */;
    %542 = cast(%539, dtype="uint64") /* ty=Tensor[(2, 1, 16), uint64] */;
    %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %544 = cast(%541, dtype="uint64") /* ty=Tensor[(2, 1, 16), uint64] */;
    %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %546 = not_equal(%535, %536) /* ty=Tensor[(2, 1, 16), bool] */;
    %547 = subtract(%544, %545) /* ty=Tensor[(2, ?, 16), uint64] */;
    (%546, %547)
  };
  %548(%var_8523, %var_8524) /* ty=(Tensor[(2, 1, 16), bool], Tensor[(2, ?, 16), uint64]) */
}

def @func_6012() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %555 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %549 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %550 = @func_2679() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) */;
    %551 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %552 = %549.0;
    %553 = %550.0;
    %554 = %551.1;
    (%552, %553, %554)
  };
  %555() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_4537() -> (Tensor[(336), float64], Tensor[(336), float64]) {
  %556 = @func_3766() /* ty=(Tensor[(336), float64],) */;
  %557 = @func_3035() /* ty=Tensor[(336), float64] */;
  %558 = %556.0;
  (%557, %558)
}

def @func_2099() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_14110() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_4155() -> (Tensor[(10, 12, 15), float32],) {
  @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_12473() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %559 = @func_4079() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %560 = @func_10896() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %561 = @func_4724() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32]) */;
  %562 = %559.0;
  %563 = %560.0;
  %564 = %561.2;
  (%562, %563, %564)
}

def @func_9120(%var_9118: Tensor[(16, 13, 2), uint8], %var_9119: Tensor[(16, 13, 2), uint8]) -> Tensor[(16, 13, 2), uint8] {
  @func_9116(%var_9118, %var_9119) /* ty=Tensor[(16, 13, 2), uint8] */
}

def @func_17984() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(14, 16, 2), int64], Tensor[(224, 2), float32], Tensor[(10, 12, 15), float32]) {
  %565 = @func_7287() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %566 = cast(meta[relay.Constant][19] /* ty=Tensor[(224, 2), float32] */, dtype="float32") /* ty=Tensor[(224, 2), float32] */;
  %567 = cast(meta[relay.Constant][19] /* ty=Tensor[(224, 2), float32] */, dtype="float32") /* ty=Tensor[(224, 2), float32] */;
  %568 = cast(meta[relay.Constant][19] /* ty=Tensor[(224, 2), float32] */, dtype="float32") /* ty=Tensor[(224, 2), float32] */;
  %569 = reshape(%566, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %570 = reshape(%567, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %571 = reshape(%568, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %572 = @func_13789(%569, %570, %571) /* ty=(Tensor[(14, 16, 2), float32], Tensor[(14, 16, 2), int64]) */;
  %573 = @func_8309() /* ty=Tensor[(10, 12, 15), float32] */;
  %574 = %565.0;
  %575 = @func_15247() /* ty=Tensor[(10, 12, 15), float32] */;
  %576 = %572.1;
  %577 = @func_7567() /* ty=Tensor[(10, 12, 15), float32] */;
  (%573, %574, %575, %576, meta[relay.Constant][19] /* ty=Tensor[(224, 2), float32] */, %577)
}

def @func_17761() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %578 = @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %579 = @func_11015() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %580 = %578.1;
  %581 = %579.0;
  %582 = @func_3035() /* ty=Tensor[(336), float64] */;
  (%580, %581, %582)
}

def @func_2097() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %583 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  %584 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  (%583, %584)
}

def @func_2724() -> Tensor[(10, 12, 15), float32] {
  %585 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %585.0
}

def @func_2195() -> (Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) {
  %586 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %587 = %586.1;
  %588 = cast(%587, dtype="float64") /* ty=Tensor[(10, 12, 15), float64] */;
  %589 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %590 = cast(meta[relay.Constant][21] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %591 = reshape(%589, newshape=[]) /* ty=uint8 */;
  %592 = reshape(%590, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
  %593 = @func_1932(%591, %592) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) */;
  %594 = acosh(%588) /* ty=Tensor[(10, 12, 15), float64] */;
  %595 = %593.3;
  (%594, %595, meta[relay.Constant][20] /* ty=uint8 */, meta[relay.Constant][21] /* ty=Tensor[(189), uint8] */)
}

def @func_1226(%var_1218: uint8, %var_1219: Tensor[(7, 9, 3), uint8]) -> (Tensor[(7, 9, 3), uint8],) {
  %596 = cast(%var_1218, dtype="uint8") /* ty=uint8 */;
  %597 = cast(%var_1219, dtype="uint8") /* ty=Tensor[(7, 9, 3), uint8] */;
  %598 = logical_xor(%596, %597) /* ty=Tensor[(7, 9, 3), uint8] */;
  (%598,)
}

def @func_18684() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %602 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %599 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %600 = @func_17533() /* ty=Tensor[(10, 12, 15), float32] */;
    %601 = %599.0;
    (%600, %601)
  };
  %602() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_10599() -> uint8 {
  @func_10597() /* ty=uint8 */
}

def @func_17011() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %603 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %604 = @func_10058() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %605 = %603.0;
  %606 = %604.0;
  (%605, %606)
}

def @func_9746() -> Tensor[(10, 12, 15), float32] {
  %608 = fn () -> Tensor[(10, 12, 15), float32] {
    %607 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %607.0
  };
  %608() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_13674() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  @func_13672() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_4552() -> Tensor[(10, 12, 15), float32] {
  @func_4550() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_12321() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %609 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %610 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %611 = %609.0;
  %612 = %610.0;
  %613 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  (%611, %612, %613)
}

def @func_5858(%var_5816: Tensor[(16, 13, 2), int32], %var_5817: Tensor[(16, 13, 2), int32], %var_5850: Tensor[(189), uint8]) -> (Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], uint8, uint8, Tensor[(189), uint8]) {
  %614 = cast(%var_5817, dtype="bool") /* ty=Tensor[(16, 13, 2), bool] */;
  %615 = shape_of(%var_5816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_5816, dtype="bool") /* ty=Tensor[(16, 13, 2), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %618 = cast(%var_5817, dtype="float32") /* ty=Tensor[(16, 13, 2), float32] */;
  %619 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %620 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %621 = cast(meta[relay.Constant][22] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %622 = cast(%var_5850, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %623 = reshape(%621, newshape=[]) /* ty=uint8 */;
  %624 = reshape(%622, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
  %625 = @func_1932(%623, %624) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) */;
  %626 = greater(%616, %617) /* ty=Tensor[(16, 13, 2), bool] */;
  %627 = sqrt(%618) /* ty=Tensor[(16, 13, 2), float32] */;
  %628 = %619.0;
  %629 = %620.0;
  %630 = %625.2;
  (%626, %627, %628, %629, %630, meta[relay.Constant][22] /* ty=uint8 */, %var_5850)
}

def @func_14763() -> (Tensor[(588), float32], Tensor[(10, 12, 15), float32]) {
  %631 = @func_13402() /* ty=(Tensor[(588), float32],) */;
  %632 = %631.0;
  %633 = @func_10726() /* ty=Tensor[(10, 12, 15), float32] */;
  (%632, %633)
}

def @func_7917() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_7915() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_4850(%var_4848: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(189, 1), uint8]) {
  @func_4847(%var_4848) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(189, 1), uint8]) */
}

def @func_6201() -> Tensor[(10, 12, 15), float32] {
  %634 = @func_5053() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %634.0
}

def @func_13402() -> (Tensor[(588), float32],) {
  %635 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %636 = %635.3;
  (%636,)
}

def @func_2581() -> Tensor[(10, 12, 15), float32] {
  @func_1887() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_14002() -> uint8 {
  @func_10597() /* ty=uint8 */
}

def @func_20973(%var_20971: Tensor[(1, 3, 3), uint8]) -> Tensor[(1, 3, 3), int64] {
  @func_20970(%var_20971) /* ty=Tensor[(1, 3, 3), int64] */
}

def @func_17346() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %637 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %638 = @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %639 = %637.1;
  %640 = %638.1;
  (%639, %640)
}

def @func_11205() -> (Tensor[(10, 12, 15), float32],) {
  @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_15248() -> Tensor[(10, 12, 15), float32] {
  %641 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_6876() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %641() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_17747() -> (Tensor[(336), float64],) {
  %644 = fn () -> (Tensor[(336), float64],) {
    %642 = @func_3766() /* ty=(Tensor[(336), float64],) */;
    %643 = %642.0;
    (%643,)
  };
  %644() /* ty=(Tensor[(336), float64],) */
}

def @func_2111() -> (Tensor[(10, 12, 15), float32],) {
  %646 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %645 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
    (%645,)
  };
  %646() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_6322(%var_6320: Tensor[(4, 6, 7), int16]) -> (Tensor[(4, 6, 7), int16], Tensor[(15, 10, 3), float64]) {
  @func_6319(%var_6320) /* ty=(Tensor[(4, 6, 7), int16], Tensor[(15, 10, 3), float64]) */
}

def @func_9687() -> (Tensor[(10, 12, 15), float32],) {
  %647 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  (%647,)
}

def @func_12200() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %655 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %648 = @func_11576() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %649 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %650 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %651 = %648.0;
    %652 = %649.0;
    %653 = %650.0;
    %654 = @func_11556() /* ty=Tensor[(10, 12, 15), float32] */;
    (%651, %652, %653, %654)
  };
  %655() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_21299() -> (Tensor[(10, 12, 15), float32],) {
  %658 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %656 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %657 = %656.0;
    (%657,)
  };
  %658() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_17771() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %659 = @func_13488() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %660 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %661 = %659.1;
  %662 = %660.1;
  (%661, %662)
}

def @func_4776() -> Tensor[(10, 12, 15), float32] {
  %663 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %663.0
}

def @func_20130() -> Tensor[(10, 12, 15), float32] {
  %664 = @func_5053() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %664.0
}

def @func_13035() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %665 = @func_12473() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %666 = @func_6876() /* ty=Tensor[(10, 12, 15), float32] */;
  %667 = %665.1;
  (%666, %667)
}

def @func_13404() -> (Tensor[(588), float32],) {
  @func_13402() /* ty=(Tensor[(588), float32],) */
}

def @func_15074() -> (Tensor[(10, 12, 15), float32],) {
  @func_15072() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_1887() -> Tensor[(10, 12, 15), float32] {
  %668 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %668.0
}

def @func_7100() -> (Tensor[(10, 12, 15), float32],) {
  @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_2759() -> (Tensor[(10, 12, 15), float32],) {
  %671 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %669 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %670 = %669.0;
    (%670,)
  };
  %671() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_10038() -> (Tensor[(10, 12, 15), float32],) {
  %672 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %673 = %672.0;
  (%673,)
}

def @func_12740() -> Tensor[(10, 12, 15), float32] {
  @func_12738() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_2038(%var_2036: Tensor[(6, 14, 7), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) {
  @func_2035(%var_2036) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_12588(%var_12586: Tensor[(378), float64]) -> (Tensor[(336), float64], Tensor[(10, 12, 15), float64], Tensor[(336), float64], Tensor[(378), float64]) {
  %674 = @func_6724() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %675 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %676 = cast(%var_12586, dtype="float64") /* ty=Tensor[(378), float64] */;
  %677 = %674.0;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(336), float64] */;
  %679 = reshape(%676, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %680 = reshape(%678, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %681 = @func_1612(%679, %680) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
  %682 = %675.0;
  %683 = %681.3;
  (%677, %682, %683, %var_12586)
}

def @func_7249() -> (Tensor[(10, 12, 15), float32],) {
  %684 = @func_2489() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %685 = %684.0;
  (%685,)
}

def @func_5184() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %690 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %686 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %687 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %688 = %686.0;
    %689 = %687.0;
    (%688, %689)
  };
  %690() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_16561() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8) {
  %691 = @func_11719() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(99), float32]) */;
  %692 = @func_16076() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %693 = @func_13278() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) */;
  %694 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  %695 = %691.0;
  %696 = @func_7567() /* ty=Tensor[(10, 12, 15), float32] */;
  %697 = @func_13766() /* ty=Tensor[(10, 12, 15), float32] */;
  %698 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
  %699 = %692.0;
  %700 = %693.2;
  (%694, %695, %696, %697, %698, %699, %700)
}

def @func_20591() -> (Tensor[(10, 12, 15), float32], Tensor[(2, 10, 12), float32]) {
  %704 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(2, 10, 12), float32]) {
    %701 = @func_15857() /* ty=(Tensor[(2, 10, 12), float32],) */;
    %702 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
    %703 = %701.0;
    (%702, %703)
  };
  %704() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(2, 10, 12), float32]) */
}

def @func_16353() -> (Tensor[(14, 14, 3), float64],) {
  %705 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 14, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 3), float32] */;
  %706 = tan(%705) /* ty=Tensor[(14, 14, 3), float32] */;
  %707 = cast(%706, dtype="float64") /* ty=Tensor[(14, 14, 3), float64] */;
  %708 = cosh(%707) /* ty=Tensor[(14, 14, 3), float64] */;
  (%708,)
}

def @func_9130() -> (Tensor[(10, 12, 15), float32],) {
  @func_9128() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_7065() -> (Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) {
  %716 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) {
    %709 = cast(meta[relay.Constant][24] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %710 = cast(meta[relay.Constant][25] /* ty=Tensor[(784), int64] */, dtype="int64") /* ty=Tensor[(784), int64] */;
    %711 = reshape(%709, newshape=[588]) /* ty=Tensor[(588), float32] */;
    %712 = reshape(%710, newshape=[1, 784]) /* ty=Tensor[(1, 784), int64] */;
    %713 = @func_5581(%711, %712) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(588), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(?, 784), bool], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(14, 8, 3), float64]) */;
    %714 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
    %715 = %713.9;
    (%714, %715, meta[relay.Constant][24] /* ty=Tensor[(588), float32] */, meta[relay.Constant][25] /* ty=Tensor[(784), int64] */)
  };
  %716() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */
}

def @func_14390() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) {
  @func_14388() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */
}

def @func_21529() -> (Tensor[(336), float64],) {
  %718 = fn () -> (Tensor[(336), float64],) {
    %717 = @func_18696() /* ty=Tensor[(336), float64] */;
    (%717,)
  };
  %718() /* ty=(Tensor[(336), float64],) */
}

def @func_6868() -> Tensor[(10, 12, 15), float32] {
  %719 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_1637() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %719() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_20950() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_20948() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_5104(%var_5102: Tensor[(8, 7, 14), int64], %var_5103: Tensor[(8, 7, 14), int64]) -> (Tensor[(8, 7, 14), int64], Tensor[(10, 12, 15), float32]) {
  @func_5100(%var_5102, %var_5103) /* ty=(Tensor[(8, 7, 14), int64], Tensor[(10, 12, 15), float32]) */
}

def @func_13380(%var_13374: Tensor[(3, 5, 2), float32]) -> (Tensor[(3, 5, 2), float32],) {
  %720 = cast(%var_13374, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %721 = sin(%720) /* ty=Tensor[(3, 5, 2), float32] */;
  (%721,)
}

def @func_12475() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_12473() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_4033() -> Tensor[(10, 12, 15), float32] {
  @func_4031() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10291() -> Tensor[(10, 12, 15), float32] {
  @func_3536() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10293() -> Tensor[(10, 12, 15), float32] {
  @func_10291() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_6138() -> (Tensor[(10, 12, 15), float32],) {
  %722 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  (%722,)
}

def @func_10896() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %723 = @func_7222() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %724 = @func_7657() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %725 = %723.0;
  %726 = @func_3717() /* ty=Tensor[(10, 12, 15), float32] */;
  %727 = %724.0;
  %728 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
  (%725, %726, %727, %728)
}

def @func_11269() -> (Tensor[(10, 12, 15), float32],) {
  %729 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %730 = %729.0;
  (%730,)
}

def @func_19735() -> Tensor[(10, 12, 15), float32] {
  %732 = fn () -> Tensor[(10, 12, 15), float32] {
    %731 = @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %731.1
  };
  %732() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_13793(%var_13790: Tensor[(14, 16, 2), float32], %var_13791: Tensor[(14, 16, 2), float32], %var_13792: Tensor[(14, 16, 2), float32]) -> (Tensor[(14, 16, 2), float32], Tensor[(14, 16, 2), int64]) {
  %743 = fn (%var_13774: Tensor[(14, 16, 2), float32], %var_13775: Tensor[(14, 16, 2), float32], %var_13782: Tensor[(14, 16, 2), float32]) -> (Tensor[(14, 16, 2), float32], Tensor[(14, 16, 2), int64]) {
    %733 = cast(%var_13775, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
    %734 = shape_of(%var_13774, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%var_13774, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %737 = cast(%var_13782, dtype="int64") /* ty=Tensor[(14, 16, 2), int64] */;
    %738 = shape_of(%var_13775, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%var_13775, dtype="int64") /* ty=Tensor[(14, 16, 2), int64] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %741 = minimum(%735, %736) /* ty=Tensor[(14, 16, 2), float32] */;
    %742 = bitwise_or(%739, %740) /* ty=Tensor[(14, 16, 2), int64] */;
    (%741, %742)
  };
  %743(%var_13790, %var_13791, %var_13792) /* ty=(Tensor[(14, 16, 2), float32], Tensor[(14, 16, 2), int64]) */
}

def @func_18441(%var_18439: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], Tensor[(189), uint8]) {
  @func_18438(%var_18439) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], Tensor[(189), uint8]) */
}

def @func_8310() -> Tensor[(10, 12, 15), float32] {
  %745 = fn () -> Tensor[(10, 12, 15), float32] {
    %744 = @func_8061() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %744.0
  };
  %745() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_13884() -> (Tensor[(10, 12, 15), float32], Tensor[(14, 1, 336), bool], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %755 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(14, 1, 336), bool], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
    %746 = @func_10896() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %747 = @func_9657() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14), float32], Tensor[(14, 1, 336), bool]) */;
    %748 = @func_9727() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %749 = @func_3766() /* ty=(Tensor[(336), float64],) */;
    %750 = %746.3;
    %751 = %747.2;
    %752 = @func_6201() /* ty=Tensor[(10, 12, 15), float32] */;
    %753 = %748.1;
    %754 = %749.0;
    (%750, %751, %752, %753, %754)
  };
  %755() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 1, 336), bool], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_2197() -> (Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) {
  @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */
}

def @func_19247() -> (Tensor[(10, 12, 15), float32],) {
  %758 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %756 = @func_7222() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %757 = %756.0;
    (%757,)
  };
  %758() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_4778() -> Tensor[(10, 12, 15), float32] {
  @func_4776() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_9992() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
  @func_9990() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */
}

def @func_11806() -> Tensor[(10, 12, 15), float32] {
  @func_4550() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_12554(%var_12553: Tensor[(784), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  %775 = fn (%var_12543: Tensor[(784), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
    %759 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %760 = cast(meta[relay.Constant][26] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %761 = reshape(%760, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %762 = @func_4423(%761) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */;
    %763 = @func_10683() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(10, 12, 15), float32]) */;
    %764 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %765 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %766 = cast(%var_12543, dtype="int64") /* ty=Tensor[(784), int64] */;
    %767 = reshape(%766, newshape=[8, 98]) /* ty=Tensor[(8, 98), int64] */;
    %768 = @func_8866(%767) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 98), int64]) */;
    %769 = %759.0;
    %770 = %762.0;
    %771 = %763.1;
    %772 = %764.0;
    %773 = %765.0;
    %774 = %768.1;
    (%769, %770, meta[relay.Constant][26] /* ty=Tensor[(378), float64] */, %771, %772, %773, %774, %var_12543)
  };
  %775(%var_12553) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) */
}

def @func_20948() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %776 = @func_15247() /* ty=Tensor[(10, 12, 15), float32] */;
  %777 = @func_15026() /* ty=Tensor[(10, 12, 15), float32] */;
  (%776, %777)
}

def @func_8732() -> Tensor[(10, 12, 15), float32] {
  %779 = fn () -> Tensor[(10, 12, 15), float32] {
    %778 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %778.0
  };
  %779() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_16718(%var_16716: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(189, 1), uint8]) {
  @func_16715(%var_16716) /* ty=(Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(189, 1), uint8]) */
}

def @func_20854() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64]) {
  %784 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64]) {
    %780 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %781 = @func_19764() /* ty=(Tensor[(10, 12, 15), float64],) */;
    %782 = %780.0;
    %783 = %781.0;
    (%782, %783)
  };
  %784() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64]) */
}

def @func_20097(%var_20095: Tensor[(1, 13, 12), float64], %var_20096: Tensor[(11), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(1, 1, 11), float32], Tensor[(11), float32], Tensor[(15, 10, 3), float64], Tensor[(5, 13, 12), bool]) {
  @func_20093(%var_20095, %var_20096) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(1, 1, 11), float32], Tensor[(11), float32], Tensor[(15, 10, 3), float64], Tensor[(5, 13, 12), bool]) */
}

def @func_3421() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %785 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %786 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %787 = %785.2;
  %788 = %786.1;
  (%787, %788)
}

def @func_6229() -> Tensor[(10, 12, 15), uint64] {
  %789 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %789.5
}

def @func_18698() -> Tensor[(336), float64] {
  @func_18696() /* ty=Tensor[(336), float64] */
}

def @func_18070(%var_18068: float64, %var_18069: Tensor[(32), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(?, 16, 2), uint16], float64, Tensor[(32), float64]) {
  %796 = fn (%var_18064: float64, %var_18065: Tensor[(32), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(?, 16, 2), uint16], float64, Tensor[(32), float64]) {
    %790 = cast(%var_18064, dtype="float64") /* ty=float64 */;
    %791 = cast(%var_18065, dtype="float64") /* ty=Tensor[(32), float64] */;
    %792 = reshape(%790, newshape=[]) /* ty=float64 */;
    %793 = reshape(%791, newshape=[1, 16, 2]) /* ty=Tensor[(1, 16, 2), float64] */;
    %794 = @func_8359() /* ty=Tensor[(10, 12, 15), float32] */;
    %795 = @func_13740(%792, %793) /* ty=Tensor[(?, 16, 2), uint16] */;
    (%794, %795, %var_18064, %var_18065)
  };
  %796(%var_18068, %var_18069) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(?, 16, 2), uint16], float64, Tensor[(32), float64]) */
}

def @func_17534() -> Tensor[(10, 12, 15), float32] {
  %798 = fn () -> Tensor[(10, 12, 15), float32] {
    %797 = @func_3762() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %797.0
  };
  %798() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_19058() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %802 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %799 = @func_12045() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %800 = %799.0;
    %801 = @func_8568() /* ty=Tensor[(10, 12, 15), float32] */;
    (%800, %801)
  };
  %802() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_20923() -> Tensor[(10, 12, 15), float32] {
  @func_20921() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_20513(%var_20512: Tensor[(5, 9, 5), float64]) -> (Tensor[(5, 9, 5), float64], Tensor[(5, 9, 5), float64]) {
  %807 = fn (%var_20489: Tensor[(5, 9, 5), float64]) -> (Tensor[(5, 9, 5), float64], Tensor[(5, 9, 5), float64]) {
    %803 = cast(%var_20489, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
    %804 = cast(%var_20489, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
    %805 = log(%803) /* ty=Tensor[(5, 9, 5), float64] */;
    %806 = atanh(%804) /* ty=Tensor[(5, 9, 5), float64] */;
    (%805, %806)
  };
  %807(%var_20512) /* ty=(Tensor[(5, 9, 5), float64], Tensor[(5, 9, 5), float64]) */
}

def @func_21456() -> (Tensor[(10, 12, 15), float32],) {
  %810 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %808 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %809 = %808.2;
    (%809,)
  };
  %810() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_13156() -> (Tensor[(15, 9, 16), float64],) {
  %811 = @func_11058() /* ty=Tensor[(15, 9, 16), bool] */;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(15, 9, 16), float64] */;
  %813 = log(%812) /* ty=Tensor[(15, 9, 16), float64] */;
  (%813,)
}

def @func_20357() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %818 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %814 = @func_7148() /* ty=(Tensor[(10, 12, 15), float32], uint8) */;
    %815 = @func_8061() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %816 = %814.0;
    %817 = %815.0;
    (%816, %817)
  };
  %818() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_4638() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %819 = @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %820 = %819.1;
  %821 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  (%820, %821)
}

def @func_2035(%var_1987: Tensor[(6, 14, 7), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) {
  %822 = cast(%var_1987, dtype="float32") /* ty=Tensor[(6, 14, 7), float32] */;
  %823 = log10(%822) /* ty=Tensor[(6, 14, 7), float32] */;
  %824 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %825 = %824.1;
  %826 = cast(%823, dtype="float64") /* ty=Tensor[(6, 14, 7), float64] */;
  %827 = cast(%825, dtype="float64") /* ty=float64 */;
  %828 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %829 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  %830 = floor_divide(%826, %827) /* ty=Tensor[(6, 14, 7), float64] */;
  %831 = %828.1;
  (%829, %830, %831)
}

def @func_20970(%var_20965: Tensor[(1, 3, 3), uint8]) -> Tensor[(1, 3, 3), int64] {
  %832 = @func_10355() /* ty=uint8 */;
  %833 = cast(%832, dtype="int64") /* ty=int64 */;
  %834 = cast(%var_20965, dtype="int64") /* ty=Tensor[(1, 3, 3), int64] */;
  left_shift(%833, %834) /* ty=Tensor[(1, 3, 3), int64] */
}

def @func_12614() -> uint8 {
  %835 = fn () -> uint8 {
    @func_10355() /* ty=uint8 */
  };
  %835() /* ty=uint8 */
}

def @func_4278() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_4276() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_3036() -> Tensor[(336), float64] {
  %837 = fn () -> Tensor[(336), float64] {
    %836 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
    %836.3
  };
  %837() /* ty=Tensor[(336), float64] */
}

def @func_2258() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %838 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %839 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %840 = %838.0;
  %841 = %839.0;
  (%840, %841)
}

def @func_5964() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_5962() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_15317() -> Tensor[(10, 12, 15), float32] {
  @func_15315() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_2680() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) {
  %855 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) {
    %842 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %843 = cast(meta[relay.Constant][27] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %844 = reshape(%843, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
    %845 = @func_2035(%844) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) */;
    %846 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %847 = @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */;
    %848 = %847.2;
    %849 = cast(%848, dtype="int64") /* ty=int64 */;
    %850 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 2, 15), uint8] */, dtype="int64") /* ty=Tensor[(4, 2, 15), int64] */;
    %851 = %842.0;
    %852 = %845.0;
    %853 = %846.1;
    %854 = maximum(%849, %850) /* ty=Tensor[(4, 2, 15), int64] */;
    (%851, %852, meta[relay.Constant][27] /* ty=Tensor[(588), float32] */, %853, %854)
  };
  %855() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) */
}

def @func_1935(%var_1933: uint8, %var_1934: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) {
  %863 = fn (%var_1918: uint8, %var_1919: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) {
    %856 = cast(%var_1918, dtype="uint8") /* ty=uint8 */;
    %857 = cast(%var_1919, dtype="uint8") /* ty=Tensor[(189, 1), uint8] */;
    %858 = reshape(%856, newshape=[]) /* ty=uint8 */;
    %859 = reshape(%857, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
    %860 = @func_1226(%858, %859) /* ty=(Tensor[(7, 9, 3), uint8],) */;
    %861 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
    %862 = %860.0;
    (%861, %862, %var_1918, %var_1919)
  };
  %863(%var_1933, %var_1934) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) */
}

def @func_20869() -> Tensor[(10, 12, 15), float32] {
  @func_20867() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_17445() -> Tensor[(10, 12, 15), float32] {
  %864 = @func_8173() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %864.1
}

def @func_20465() -> Tensor[(10, 12, 15), float32] {
  @func_20463() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10114() -> (Tensor[(10, 12, 15), float32],) {
  %865 = @func_6996() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %866 = %865.0;
  (%866,)
}

def @func_17447() -> Tensor[(10, 12, 15), float32] {
  @func_17445() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_15843() -> (Tensor[(10, 12, 15), float32],) {
  %869 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %867 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %868 = %867.0;
    (%868,)
  };
  %869() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_16933() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_16931() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_21233() -> Tensor[(10, 12, 15), float32] {
  @func_21231() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_14205(%var_14204: Tensor[(99), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32], Tensor[(1, 9, 11), float32], Tensor[(99), float32], Tensor[(336), float64], Tensor[(1, 378), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %890 = fn (%var_14178: Tensor[(99), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32], Tensor[(1, 9, 11), float32], Tensor[(99), float32], Tensor[(336), float64], Tensor[(1, 378), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %870 = @func_11015() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %871 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 378), float64] */, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
    %872 = reshape(%871, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %873 = @func_12588(%872) /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float64], Tensor[(336), float64], Tensor[(378), float64]) */;
    %874 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 378), float64] */, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
    %875 = reshape(%874, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
    %876 = @func_8784(%875) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(1, 378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
    %877 = cast(%var_14178, dtype="float32") /* ty=Tensor[(99), float32] */;
    %878 = reshape(%877, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), float32] */;
    %879 = @func_11642(%878) /* ty=(Tensor[(1, 9, 11), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %880 = @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
    %881 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 378), float64] */, dtype="float32") /* ty=Tensor[(1, 378), float32] */;
    %882 = %870.0;
    %883 = %873.1;
    %884 = %876.4;
    %885 = %879.0;
    %886 = %880.1;
    %887 = acos(%881) /* ty=Tensor[(1, 378), float32] */;
    %888 = @func_3295() /* ty=Tensor[(10, 12, 15), float32] */;
    %889 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
    (%882, %883, %884, %885, %var_14178, %886, %887, %888, %889)
  };
  %890(%var_14204) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32], Tensor[(1, 9, 11), float32], Tensor[(99), float32], Tensor[(336), float64], Tensor[(1, 378), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_20921() -> Tensor[(10, 12, 15), float32] {
  %891 = @func_5962() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %891.0
}

def @func_5581(%var_5525: Tensor[(588), float32], %var_5536: Tensor[(1, 784), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(588), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(?, 784), bool], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(14, 8, 3), float64]) {
  %892 = cast(%var_5525, dtype="float32") /* ty=Tensor[(588), float32] */;
  %893 = reshape(%892, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %894 = @func_2035(%893) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) */;
  %895 = cast(meta[relay.Constant][30] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %896 = cast(meta[relay.Constant][31] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %897 = cast(meta[relay.Constant][30] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %898 = reshape(%895, newshape=[3, 126]) /* ty=Tensor[(3, 126), float64] */;
  %899 = reshape(%896, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %900 = reshape(%897, newshape=[3, 126]) /* ty=Tensor[(3, 126), float64] */;
  %901 = @func_2449(%898, %899, %900) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], Tensor[(3, 126), int64], Tensor[(10, 12, 15), float32]) */;
  %902 = cast(%var_5536, dtype="int64") /* ty=Tensor[(1, 784), int64] */;
  %903 = cast(%var_5536, dtype="int64") /* ty=Tensor[(1, 784), int64] */;
  %904 = reshape(%902, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int64] */;
  %905 = reshape(%903, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int64] */;
  %906 = @func_5100(%904, %905) /* ty=(Tensor[(8, 7, 14), int64], Tensor[(10, 12, 15), float32]) */;
  %907 = %906.0;
  %908 = cast(%907, dtype="bool") /* ty=Tensor[(8, 7, 14), bool] */;
  %909 = shape_of(%var_5536, dtype="int32") /* ty=Tensor[(2), int32] */;
  %910 = cast(%var_5536, dtype="bool") /* ty=Tensor[(1, 784), bool] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %912 = @func_4662() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %913 = @func_2489() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %914 = cast(%907, dtype="float64") /* ty=Tensor[(8, 7, 14), float64] */;
  %915 = %901.2;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(336), float64] */;
  %917 = reshape(%916, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %918 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %919 = %894.1;
  %920 = not_equal(%910, %911) /* ty=Tensor[(?, 784), bool] */;
  %921 = %912.1;
  %922 = %913.0;
  %923 = asin(%914) /* ty=Tensor[(8, 7, 14), float64] */;
  %924 = @func_333(%917) /* ty=Tensor[(14, 8, 3), float64] */;
  (%918, %919, %var_5525, %915, meta[relay.Constant][30] /* ty=Tensor[(378), float64] */, meta[relay.Constant][31] /* ty=Tensor[(336), float64] */, %920, %921, %922, %923, %924)
}

def @func_7029(%var_7028: Tensor[(1, 1, 11), float32]) -> (Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) {
  %929 = fn (%var_7007: Tensor[(1, 1, 11), float32]) -> (Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) {
    %925 = cast(%var_7007, dtype="float32") /* ty=Tensor[(1, 1, 11), float32] */;
    %926 = @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
    %927 = cos(%925) /* ty=Tensor[(1, 1, 11), float32] */;
    %928 = %926.1;
    (%927, %928)
  };
  %929(%var_7028) /* ty=(Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_9088() -> (Tensor[(10, 12, 15), float32],) {
  %932 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %930 = @func_8719() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %931 = %930.1;
    (%931,)
  };
  %932() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_11808() -> Tensor[(10, 12, 15), float32] {
  @func_11806() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_4688() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %933 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %934 = @func_2258() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %935 = @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
  %936 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %937 = %933.0;
  %938 = %934.0;
  %939 = %935.1;
  %940 = %936.0;
  (%937, %938, %939, %940)
}

def @func_8360() -> Tensor[(10, 12, 15), float32] {
  %942 = fn () -> Tensor[(10, 12, 15), float32] {
    %941 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %941.0
  };
  %942() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_13037() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_13035() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_18541() -> Tensor[(10, 12, 15), float32] {
  %944 = fn () -> Tensor[(10, 12, 15), float32] {
    %943 = @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %943.0
  };
  %944() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_6724() -> (Tensor[(336), float64], Tensor[(336), float64]) {
  %945 = @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %946 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %947 = %945.0;
  %948 = %946.0;
  (%947, %948)
}

def @func_5585(%var_5583: Tensor[(588), float32], %var_5584: Tensor[(1, 784), int64]) -> (Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(588), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(?, 784), bool], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(14, 8, 3), float64]) {
  @func_5581(%var_5583, %var_5584) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(588), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(?, 784), bool], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(14, 8, 3), float64]) */
}

def @func_10356() -> uint8 {
  %950 = fn () -> uint8 {
    %949 = @func_8394() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) */;
    %949.3
  };
  %950() /* ty=uint8 */
}

def @func_15072() -> (Tensor[(10, 12, 15), float32],) {
  %951 = @func_5053() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %952 = %951.0;
  (%952,)
}

def @func_3087(%var_3085: uint8, %var_3086: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189), uint8]) {
  @func_3083(%var_3085, %var_3086) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189), uint8]) */
}

def @func_11015() -> (Tensor[(10, 12, 15), float32],) {
  %953 = @func_8731() /* ty=Tensor[(10, 12, 15), float32] */;
  (%953,)
}

def @func_6503(%var_6501: Tensor[(11, 12, 15), uint32], %var_6502: Tensor[(11, 12, 15), uint32]) -> (Tensor[(11, 12, 15), uint32],) {
  %959 = fn (%var_6482: Tensor[(11, 12, 15), uint32], %var_6483: Tensor[(11, 12, 15), uint32]) -> (Tensor[(11, 12, 15), uint32],) {
    %954 = cast(%var_6483, dtype="uint32") /* ty=Tensor[(11, 12, 15), uint32] */;
    %955 = shape_of(%var_6482, dtype="int32") /* ty=Tensor[(3), int32] */;
    %956 = cast(%var_6482, dtype="uint32") /* ty=Tensor[(11, 12, 15), uint32] */;
    %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %958 = logical_xor(%956, %957) /* ty=Tensor[(11, 12, 15), uint32] */;
    (%958,)
  };
  %959(%var_6501, %var_6502) /* ty=(Tensor[(11, 12, 15), uint32],) */
}

def @func_4663() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %963 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
    %960 = @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
    %961 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
    %962 = %960.1;
    (%961, %962)
  };
  %963() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_4493() -> (Tensor[(15, 10, 3), float64],) {
  %969 = fn () -> (Tensor[(15, 10, 3), float64],) {
    %964 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %965 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(15, 10, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %966 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %968 = power(%966, %967) /* ty=Tensor[(15, 10, 3), float64] */;
    (%968,)
  };
  %969() /* ty=(Tensor[(15, 10, 3), float64],) */
}

def @func_10945() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  %970 = @func_7064() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */;
  %971 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
  %972 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
  %973 = %970.3;
  (%971, %972, %973)
}

def @func_7098() -> (Tensor[(10, 12, 15), float32],) {
  %974 = @func_6011() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %975 = %974.0;
  (%975,)
}

def @func_7318(%var_7317: Tensor[(14, 1, 1), float32]) -> Tensor[(14, 1, 1), float32] {
  %977 = fn (%var_7308: Tensor[(14, 1, 1), float32]) -> Tensor[(14, 1, 1), float32] {
    %976 = cast(%var_7308, dtype="float32") /* ty=Tensor[(14, 1, 1), float32] */;
    sin(%976) /* ty=Tensor[(14, 1, 1), float32] */
  };
  %977(%var_7317) /* ty=Tensor[(14, 1, 1), float32] */
}

def @func_9579(%var_9576: Tensor[(1, 7, 5), float32], %var_9577: Tensor[(15, 7, 5), float32], %var_9578: Tensor[(378), float64]) -> (Tensor[(15, 7, 5), bool], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64]) {
  %987 = fn (%var_9516: Tensor[(1, 7, 5), float32], %var_9517: Tensor[(15, 7, 5), float32], %var_9556: Tensor[(378), float64]) -> (Tensor[(15, 7, 5), bool], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64]) {
    %978 = cast(%var_9516, dtype="bool") /* ty=Tensor[(1, 7, 5), bool] */;
    %979 = cast(%var_9517, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
    %980 = @func_4079() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %981 = cast(%var_9556, dtype="float64") /* ty=Tensor[(378), float64] */;
    %982 = reshape(%981, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %983 = @func_4423(%982) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */;
    %984 = less(%978, %979) /* ty=Tensor[(15, 7, 5), bool] */;
    %985 = %980.0;
    %986 = %983.0;
    (%984, %985, %986, %var_9556)
  };
  %987(%var_9576, %var_9577, %var_9578) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64]) */
}

def @func_13489() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %996 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
    %988 = @func_5962() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %989 = @func_8173() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %990 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
    %991 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %992 = %988.1;
    %993 = %989.0;
    %994 = %990.0;
    %995 = %991.0;
    (%992, %993, %994, %995)
  };
  %996() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_20041() -> Tensor[(10, 12, 15), float32] {
  %998 = fn () -> Tensor[(10, 12, 15), float32] {
    %997 = @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %997.0
  };
  %998() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_3673() -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */
}

def @func_12323() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  @func_12321() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_8569() -> Tensor[(10, 12, 15), float32] {
  %1000 = fn () -> Tensor[(10, 12, 15), float32] {
    %999 = @func_7818() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %999.0
  };
  %1000() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_19142(%var_19140: Tensor[(8, 11, 15), float32], %var_19141: Tensor[(8, 11, 15), float32]) -> Tensor[(8, 11, 15), float32] {
  %1005 = fn (%var_19128: Tensor[(8, 11, 15), float32], %var_19129: Tensor[(8, 11, 15), float32]) -> Tensor[(8, 11, 15), float32] {
    %1001 = cast(%var_19129, dtype="float32") /* ty=Tensor[(8, 11, 15), float32] */;
    %1002 = shape_of(%var_19128, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1003 = cast(%var_19128, dtype="float32") /* ty=Tensor[(8, 11, 15), float32] */;
    %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%1003, %1004) /* ty=Tensor[(8, 11, 15), float32] */
  };
  %1005(%var_19140, %var_19141) /* ty=Tensor[(8, 11, 15), float32] */
}

def @func_9221() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  @func_9219() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_12908() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1009 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1006 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1007 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
    %1008 = %1006.0;
    (%1007, %1008)
  };
  %1009() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_2915() -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1015 = fn () -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1010 = @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */;
    %1011 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1012 = %1010.2;
    %1013 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
    %1014 = %1011.0;
    (%1012, %1013, %1014)
  };
  %1015() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_4943(%var_4941: Tensor[(378), float64], %var_4942: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
  %1033 = fn (%var_4912: Tensor[(378), float64], %var_4934: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) {
    %1016 = @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1017 = cast(%var_4912, dtype="float64") /* ty=Tensor[(378), float64] */;
    %1018 = cast(meta[relay.Constant][34] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %1019 = cast(%var_4912, dtype="float64") /* ty=Tensor[(378), float64] */;
    %1020 = reshape(%1017, newshape=[3, 126]) /* ty=Tensor[(3, 126), float64] */;
    %1021 = reshape(%1018, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %1022 = reshape(%1019, newshape=[3, 126]) /* ty=Tensor[(3, 126), float64] */;
    %1023 = @func_2449(%1020, %1021, %1022) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], Tensor[(3, 126), int64], Tensor[(10, 12, 15), float32]) */;
    %1024 = @func_4662() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
    %1025 = cast(%var_4934, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %1026 = reshape(%1025, newshape=[21, 9]) /* ty=Tensor[(21, 9), uint8] */;
    %1027 = @func_2336(%1026) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */;
    %1028 = %1016.0;
    %1029 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
    %1030 = %1023.5;
    %1031 = %1024.0;
    %1032 = %1027.4;
    (%1028, %1029, %1030, %var_4912, meta[relay.Constant][34] /* ty=Tensor[(336), float64] */, %1031, %1032, %var_4934)
  };
  %1033(%var_4941, %var_4942) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */
}

def @func_3930() -> (Tensor[(336), float64],) {
  %1034 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %1035 = %1034.0;
  (%1035,)
}

def @func_3423() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_3421() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_4726() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32]) {
  @func_4724() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_1689() -> (Tensor[(10, 12, 15), float32],) {
  %1036 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1037 = %1036.1;
  (%1037,)
}

def @func_11105() -> (Tensor[(10, 12, 15), float32],) {
  %1039 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1038 = @func_6846() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_14972() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_14970() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_20285() -> Tensor[(10, 12, 15), float32] {
  %1041 = fn () -> Tensor[(10, 12, 15), float32] {
    %1040 = @func_12473() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1040.0
  };
  %1041() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_16310() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1042 = @func_9409() /* ty=Tensor[(10, 12, 15), float32] */;
  %1043 = @func_14606() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1042, %1043)
}

def @func_17773() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_17771() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_14004() -> uint8 {
  @func_14002() /* ty=uint8 */
}

def @func_3181() -> (Tensor[(10, 12, 15), float32],) {
  %1044 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1044,)
}

def @func_3719() -> Tensor[(10, 12, 15), float32] {
  @func_3717() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_3083(%var_3072: uint8, %var_3073: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189), uint8]) {
  %1045 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1046 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1047 = cast(%var_3072, dtype="uint8") /* ty=uint8 */;
  %1048 = cast(%var_3073, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1049 = reshape(%1047, newshape=[]) /* ty=uint8 */;
  %1050 = reshape(%1048, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
  %1051 = @func_1226(%1049, %1050) /* ty=(Tensor[(7, 9, 3), uint8],) */;
  %1052 = %1045.0;
  %1053 = %1046.0;
  %1054 = %1051.0;
  (%1052, %1053, %1054, %var_3072, %var_3073)
}

def @func_2370() -> (Tensor[(10, 12, 15), float32],) {
  %1055 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1056 = %1055.0;
  (%1056,)
}

def @func_3763() -> (Tensor[(10, 12, 15), float32],) {
  %1059 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1057 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1058 = %1057.0;
    (%1058,)
  };
  %1059() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_2490() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1063 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1060 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1061 = %1060.0;
    %1062 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1061, %1062)
  };
  %1063() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_17419() -> Tensor[(10, 12, 15), uint64] {
  @func_13718() /* ty=Tensor[(10, 12, 15), uint64] */
}

def @func_7915() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1064 = @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1065 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1066 = @func_5183() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1067 = %1064.0;
  %1068 = %1065.0;
  %1069 = @func_5499() /* ty=Tensor[(10, 12, 15), float32] */;
  %1070 = %1066.1;
  (%1067, %1068, %1069, %1070)
}

def @func_15637(%var_15611: Tensor[(1980), uint32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(11, 12, 15), uint32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(1980), float64]) {
  %1071 = cast(%var_15611, dtype="uint32") /* ty=Tensor[(1980), uint32] */;
  %1072 = cast(%var_15611, dtype="uint32") /* ty=Tensor[(1980), uint32] */;
  %1073 = reshape(%1071, newshape=[11, 12, 15]) /* ty=Tensor[(11, 12, 15), uint32] */;
  %1074 = reshape(%1072, newshape=[11, 12, 15]) /* ty=Tensor[(11, 12, 15), uint32] */;
  %1075 = @func_6500(%1073, %1074) /* ty=(Tensor[(11, 12, 15), uint32],) */;
  %1076 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1077 = @func_14388() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %1078 = cast(%var_15611, dtype="float64") /* ty=Tensor[(1980), float64] */;
  %1079 = @func_14793() /* ty=Tensor[(10, 12, 15), float32] */;
  %1080 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
  %1081 = %1075.0;
  %1082 = %1076.0;
  %1083 = %1077.3;
  %1084 = rsqrt(%1078) /* ty=Tensor[(1980), float64] */;
  (%1079, %1080, %1081, %1082, %1083, %1084)
}

def @func_5863(%var_5860: Tensor[(16, 13, 2), int32], %var_5861: Tensor[(16, 13, 2), int32], %var_5862: Tensor[(189), uint8]) -> (Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], uint8, uint8, Tensor[(189), uint8]) {
  @func_5858(%var_5860, %var_5861, %var_5862) /* ty=(Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], uint8, uint8, Tensor[(189), uint8]) */
}

def @func_16739() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1085 = @func_4079() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1086 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1087 = %1085.0;
  %1088 = %1086.0;
  (%1087, %1088)
}

def @func_17348() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  @func_17346() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_19123(%var_19116: Tensor[(42, 4), int16]) -> (Tensor[(10, 12, 15), float32], Tensor[(4, 6, 7), int16], Tensor[(42, 4), int16]) {
  %1089 = @func_6011() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1090 = cast(%var_19116, dtype="int16") /* ty=Tensor[(42, 4), int16] */;
  %1091 = reshape(%1090, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int16] */;
  %1092 = @func_6319(%1091) /* ty=(Tensor[(4, 6, 7), int16], Tensor[(15, 10, 3), float64]) */;
  %1093 = %1089.2;
  %1094 = %1092.0;
  (%1093, %1094, %var_19116)
}

def @func_13948(%var_13943: Tensor[(9, 6, 1), float32]) -> Tensor[(9, 6, 1), float32] {
  %1095 = cast(%var_13943, dtype="float32") /* ty=Tensor[(9, 6, 1), float32] */;
  cos(%1095) /* ty=Tensor[(9, 6, 1), float32] */
}

def @func_5316() -> (Tensor[(10, 12, 15), float32],) {
  @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_4276() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1096 = @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1097 = %1096.0;
  %1098 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1097, %1098)
}

def @func_18438(%var_18435: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], Tensor[(189), uint8]) {
  %1099 = @func_9727() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1100 = @func_7222() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1101 = @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1102 = cast(%var_18435, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1103 = reshape(%1102, newshape=[21, 9]) /* ty=Tensor[(21, 9), uint8] */;
  %1104 = @func_2336(%1103) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */;
  %1105 = %1099.1;
  %1106 = %1100.0;
  %1107 = %1101.0;
  %1108 = %1104.1;
  (%1105, %1106, %1107, %1108, %var_18435)
}

def @func_2372() -> (Tensor[(10, 12, 15), float32],) {
  @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_16064(%var_16005: Tensor[(15, 11, 13), float64]) -> (Tensor[(15, 11, 13), int64], Tensor[(15, 10, 3), float64]) {
  %1109 = cast(%var_16005, dtype="float64") /* ty=Tensor[(15, 11, 13), float64] */;
  %1110 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(15, 11, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1111 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 13), float64] */;
  %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1113 = add(%1111, %1112) /* ty=Tensor[(15, 11, 13), float64] */;
  %1114 = cast(%var_16005, dtype="int64") /* ty=Tensor[(15, 11, 13), int64] */;
  %1115 = shape_of(%1113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1116 = cast(%1113, dtype="int64") /* ty=Tensor[(15, 11, 13), int64] */;
  %1117 = dyn.reshape(%1114, %1115, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1118 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
  %1119 = left_shift(%1116, %1117) /* ty=Tensor[(15, 11, 13), int64] */;
  %1120 = %1118.2;
  (%1119, %1120)
}

def @func_14448() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1123 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1121 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
    %1122 = @func_3536() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1121, %1122)
  };
  %1123() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_16637() -> Tensor[(10, 12, 15), float32] {
  %1124 = @func_3238() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1124.0
}

def @func_11271() -> (Tensor[(10, 12, 15), float32],) {
  @func_11269() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_14606() -> Tensor[(10, 12, 15), float32] {
  %1125 = @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1125.1
}

def @func_15158() -> (Tensor[(784), int64],) {
  @func_15156() /* ty=(Tensor[(784), int64],) */
}

def @func_4539() -> (Tensor[(336), float64], Tensor[(336), float64]) {
  @func_4537() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */
}

def @func_12047() -> (Tensor[(10, 12, 15), float32],) {
  @func_12045() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_14717() -> (Tensor[(10, 12, 15), float32],) {
  %1128 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1126 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1127 = %1126.0;
    (%1127,)
  };
  %1128() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_3717() -> Tensor[(10, 12, 15), float32] {
  @func_1887() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_18345(%var_18343: Tensor[(13, 13, 4), float32]) -> (Tensor[(13, 13, 4), float32], Tensor[(10, 12, 15), float32]) {
  @func_18342(%var_18343) /* ty=(Tensor[(13, 13, 4), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_15156() -> (Tensor[(784), int64],) {
  %1129 = @func_10251() /* ty=(Tensor[(784), int64], Tensor[(10, 12, 15), float32]) */;
  %1130 = %1129.0;
  %1131 = cast(meta[relay.Constant][36] /* ty=Tensor[(784), int64] */, dtype="int64") /* ty=Tensor[(784), int64] */;
  %1132 = shape_of(%1130, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1133 = cast(%1130, dtype="int64") /* ty=Tensor[(784), int64] */;
  %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1135 = add(%1133, %1134) /* ty=Tensor[(784), int64] */;
  (%1135,)
}

def @func_8025(%var_7981: Tensor[(378), float64], %var_7982: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(189), uint8]) {
  %1136 = @func_7222() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1137 = cast(%var_7981, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1138 = cast(%var_7982, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1139 = reshape(%1137, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1140 = reshape(%1138, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %1141 = @func_7611(%1139, %1140) /* ty=(Tensor[(10, 12, 15), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) */;
  %1142 = @func_2950() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */;
  %1143 = cast(%var_7982, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1144 = reshape(%1143, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %1145 = @func_3374(%1144) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, uint8, Tensor[(189), uint8]) */;
  %1146 = %1136.0;
  %1147 = %1141.4;
  %1148 = @func_6201() /* ty=Tensor[(10, 12, 15), float32] */;
  %1149 = %1142.1;
  %1150 = %1145.4;
  (%1146, %1147, %var_7981, %var_7982, %1148, %1149, %1150)
}

def @func_2726() -> Tensor[(10, 12, 15), float32] {
  @func_2724() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_2260() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_2258() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_19757(%var_19756: Tensor[(3, 1, 10), uint8]) -> (Tensor[(3, 1, 10), uint8], Tensor[(3, 1, 10), bool]) {
  %1157 = fn (%var_19745: Tensor[(3, 1, 10), uint8]) -> (Tensor[(3, 1, 10), uint8], Tensor[(3, 1, 10), bool]) {
    %1151 = cast(meta[relay.Constant][37] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1152 = cast(%var_19745, dtype="uint8") /* ty=Tensor[(3, 1, 10), uint8] */;
    %1153 = cast(meta[relay.Constant][37] /* ty=uint8 */, dtype="bool") /* ty=bool */;
    %1154 = cast(%var_19745, dtype="bool") /* ty=Tensor[(3, 1, 10), bool] */;
    %1155 = bitwise_or(%1151, %1152) /* ty=Tensor[(3, 1, 10), uint8] */;
    %1156 = less_equal(%1153, %1154) /* ty=Tensor[(3, 1, 10), bool] */;
    (%1155, %1156)
  };
  %1157(%var_19756) /* ty=(Tensor[(3, 1, 10), uint8], Tensor[(3, 1, 10), bool]) */
}

def @func_12045() -> (Tensor[(10, 12, 15), float32],) {
  %1158 = @func_11203() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1159 = %1158.0;
  (%1159,)
}

def @func_9376(%var_9323: Tensor[(378, 1), float64], %var_9324: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(378, 189), int64], Tensor[(10, 12, 15), float32]) {
  %1160 = @func_6766() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1161 = cast(%var_9323, dtype="float64") /* ty=Tensor[(378, 1), float64] */;
  %1162 = cast(%var_9324, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1163 = reshape(%1161, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1164 = reshape(%1162, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %1165 = @func_8025(%1163, %1164) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(189), uint8]) */;
  %1166 = @func_8061() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1167 = cast(%var_9323, dtype="int64") /* ty=Tensor[(378, 1), int64] */;
  %1168 = cast(%var_9324, dtype="int64") /* ty=Tensor[(189), int64] */;
  %1169 = @func_4662() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %1170 = %1160.0;
  %1171 = %1165.2;
  %1172 = %1166.0;
  %1173 = subtract(%1167, %1168) /* ty=Tensor[(378, 189), int64] */;
  %1174 = %1169.0;
  (%1170, %1171, %1172, %1173, %1174)
}

def @func_11645(%var_11643: Tensor[(1, 9, 11), float32]) -> (Tensor[(1, 9, 11), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_11642(%var_11643) /* ty=(Tensor[(1, 9, 11), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_11326() -> Tensor[(10, 12, 15), float32] {
  %1176 = fn () -> Tensor[(10, 12, 15), float32] {
    %1175 = @func_8394() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) */;
    %1175.0
  };
  %1176() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_3048(%var_3047: Tensor[(8, 7, 2), int16]) -> (Tensor[(8, 7, 2), int16],) {
  %1182 = fn (%var_3040: Tensor[(8, 7, 2), int16]) -> (Tensor[(8, 7, 2), int16],) {
    %1177 = cast(%var_3040, dtype="int16") /* ty=Tensor[(8, 7, 2), int16] */;
    %1178 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(8, 7, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1179 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 7, 2), int16] */, dtype="int16") /* ty=Tensor[(8, 7, 2), int16] */;
    %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1181 = minimum(%1179, %1180) /* ty=Tensor[(8, 7, 2), int16] */;
    (%1181,)
  };
  %1182(%var_3047) /* ty=(Tensor[(8, 7, 2), int16],) */
}

def @func_13158() -> (Tensor[(15, 9, 16), float64],) {
  @func_13156() /* ty=(Tensor[(15, 9, 16), float64],) */
}

def @func_1638() -> Tensor[(10, 12, 15), float32] {
  %1183 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_1495() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %1183() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_5414(%var_5412: Tensor[(336), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(336), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  @func_5411(%var_5412) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(336), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_11915() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1187 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1184 = @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1185 = %1184.0;
    %1186 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1185, %1186)
  };
  %1187() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_16741() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_16739() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_18696() -> Tensor[(336), float64] {
  %1188 = @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
  %1188.1
}

def @func_21231() -> Tensor[(10, 12, 15), float32] {
  %1189 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1189.1
}

def @func_17783(%var_17781: uint64, %var_17782: Tensor[(1, 8, 5), uint64]) -> Tensor[(1, 8, 5), uint64] {
  @func_17779(%var_17781, %var_17782) /* ty=Tensor[(1, 8, 5), uint64] */
}

def @func_15003() -> (Tensor[(10, 12, 15), float32],) {
  %1190 = @func_3295() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1190,)
}

def @func_11576() -> (Tensor[(10, 12, 15), float32],) {
  %1191 = @func_10797() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1192 = %1191.1;
  (%1192,)
}

def @func_6726() -> (Tensor[(336), float64], Tensor[(336), float64]) {
  @func_6724() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */
}

def @func_3767() -> (Tensor[(336), float64],) {
  %1194 = fn () -> (Tensor[(336), float64],) {
    %1193 = @func_3035() /* ty=Tensor[(336), float64] */;
    (%1193,)
  };
  %1194() /* ty=(Tensor[(336), float64],) */
}

def @func_9219() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %1195 = @func_3930() /* ty=(Tensor[(336), float64],) */;
  %1196 = @func_9128() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1197 = @func_8309() /* ty=Tensor[(10, 12, 15), float32] */;
  %1198 = %1195.0;
  %1199 = %1196.0;
  (%1197, %1198, %1199)
}

def @func_5662() -> Tensor[(10, 12, 15), float32] {
  %1200 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1200.0
}

def @func_13212() -> (Tensor[(10, 12, 15), float32], uint8) {
  %1204 = fn () -> (Tensor[(10, 12, 15), float32], uint8) {
    %1201 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1202 = %1201.0;
    %1203 = @func_10597() /* ty=uint8 */;
    (%1202, %1203)
  };
  %1204() /* ty=(Tensor[(10, 12, 15), float32], uint8) */
}

def @func_19958() -> (uint8, uint8) {
  %1208 = fn () -> (uint8, uint8) {
    %1205 = @func_7148() /* ty=(Tensor[(10, 12, 15), float32], uint8) */;
    %1206 = @func_16877() /* ty=uint8 */;
    %1207 = %1205.1;
    (%1206, %1207)
  };
  %1208() /* ty=(uint8, uint8) */
}

def @func_12149(%var_12124: bool, %var_12125: Tensor[(12, 4, 6), bool], %var_12134: Tensor[(378), float64]) -> (Tensor[(12, 4, 6), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8]) {
  %1209 = cast(%var_12124, dtype="bool") /* ty=bool */;
  %1210 = cast(%var_12125, dtype="bool") /* ty=Tensor[(12, 4, 6), bool] */;
  %1211 = cast(%var_12134, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1212 = cast(meta[relay.Constant][39] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
  %1213 = reshape(%1211, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1214 = reshape(%1212, newshape=[189]) /* ty=Tensor[(189), uint8] */;
  %1215 = @func_4940(%1213, %1214) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
  %1216 = logical_and(%1209, %1210) /* ty=Tensor[(12, 4, 6), bool] */;
  %1217 = %1215.2;
  (%1216, %1217, %var_12134, meta[relay.Constant][39] /* ty=Tensor[(189), uint8] */)
}

def @func_17359() -> Tensor[(588), float32] {
  %1219 = fn () -> Tensor[(588), float32] {
    %1218 = @func_13402() /* ty=(Tensor[(588), float32],) */;
    %1218.0
  };
  %1219() /* ty=Tensor[(588), float32] */
}

def @func_7179(%var_7177: Tensor[(378), float64], %var_7178: Tensor[(336, 1), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64]) {
  %1231 = fn (%var_7159: Tensor[(378), float64], %var_7160: Tensor[(336, 1), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64]) {
    %1220 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1221 = cast(%var_7159, dtype="float64") /* ty=Tensor[(378), float64] */;
    %1222 = cast(%var_7160, dtype="float64") /* ty=Tensor[(336, 1), float64] */;
    %1223 = reshape(%1221, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %1224 = reshape(%1222, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %1225 = @func_1612(%1223, %1224) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
    %1226 = cast(%var_7160, dtype="uint64") /* ty=Tensor[(336, 1), uint64] */;
    %1227 = cast(%var_7159, dtype="uint64") /* ty=Tensor[(378), uint64] */;
    %1228 = %1220.1;
    %1229 = %1225.7;
    %1230 = add(%1226, %1227) /* ty=Tensor[(336, 378), uint64] */;
    (%1228, %1229, %1230)
  };
  %1231(%var_7177, %var_7178) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336, 378), uint64]) */
}

def @func_16355() -> (Tensor[(14, 14, 3), float64],) {
  @func_16353() /* ty=(Tensor[(14, 14, 3), float64],) */
}

def @func_7538(%var_7511: Tensor[(10, 13, 12), int64], %var_7512: Tensor[(10, 13, 12), int64]) -> (Tensor[(10, 13, 12), int64], Tensor[(10, 13, 12), float32], Tensor[(10, 12, 15), float32]) {
  %1232 = cast(%var_7512, dtype="int64") /* ty=Tensor[(10, 13, 12), int64] */;
  %1233 = shape_of(%var_7511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1234 = cast(%var_7511, dtype="int64") /* ty=Tensor[(10, 13, 12), int64] */;
  %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1236 = cast(%var_7512, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
  %1237 = @func_3181() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1238 = maximum(%1234, %1235) /* ty=Tensor[(10, 13, 12), int64] */;
  %1239 = acosh(%1236) /* ty=Tensor[(10, 13, 12), float32] */;
  %1240 = %1237.0;
  (%1238, %1239, %1240)
}

def @func_21069() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) {
  %1241 = @func_9687() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1242 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1243 = @func_14358() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1244 = @func_19609() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1245 = @func_2950() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */;
  %1246 = @func_7114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1247 = %1241.0;
  %1248 = %1242.0;
  %1249 = %1243.0;
  %1250 = %1244.1;
  %1251 = %1245.3;
  %1252 = %1246.0;
  (%1247, %1248, %1249, %1250, %1251, %1252)
}

def @func_6975() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) {
  %1253 = @func_4492() /* ty=(Tensor[(15, 10, 3), float64],) */;
  %1254 = @func_2489() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1255 = %1253.0;
  %1256 = %1254.1;
  (%1255, %1256)
}

def @func_10798() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1260 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1257 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1258 = %1257.0;
    %1259 = @func_6201() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1258, %1259)
  };
  %1260() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_7568() -> Tensor[(10, 12, 15), float32] {
  %1261 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_1887() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %1261() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_9658() -> (Tensor[(10, 12, 15), float32], Tensor[(14), float32], Tensor[(14, 1, 336), bool]) {
  %1271 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(14), float32], Tensor[(14, 1, 336), bool]) {
    %1262 = @func_4662() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
    %1263 = %1262.1;
    %1264 = cast(meta[relay.Constant][40] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %1265 = reshape(%1264, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), float32] */;
    %1266 = @func_7316(%1265) /* ty=Tensor[(14, 1, 1), float32] */;
    %1267 = cast(%1263, dtype="bool") /* ty=Tensor[(336), bool] */;
    %1268 = cast(%1266, dtype="bool") /* ty=Tensor[(14, 1, 1), bool] */;
    %1269 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
    %1270 = logical_or(%1267, %1268) /* ty=Tensor[(14, 1, 336), bool] */;
    (%1269, meta[relay.Constant][40] /* ty=Tensor[(14), float32] */, %1270)
  };
  %1271() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14), float32], Tensor[(14, 1, 336), bool]) */
}

def @func_18313() -> (Tensor[(10, 12, 15), float32],) {
  %1273 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1272 = @func_11248() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1272,)
  };
  %1273() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_3295() -> Tensor[(10, 12, 15), float32] {
  %1274 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1274.0
}

def @func_18721() -> (Tensor[(10, 12, 15), float32],) {
  %1277 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1275 = @func_9727() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1276 = %1275.0;
    (%1276,)
  };
  %1277() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_14388() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) {
  %1278 = @func_11783() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1279 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1280 = @func_9285() /* ty=(Tensor[(588), float32],) */;
  %1281 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
  %1282 = %1278.0;
  %1283 = %1279.0;
  %1284 = %1280.0;
  (%1281, %1282, %1283, %1284)
}

def @func_21110() -> (Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  %1289 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
    %1285 = @func_12321() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
    %1286 = @func_10251() /* ty=(Tensor[(784), int64], Tensor[(10, 12, 15), float32]) */;
    %1287 = %1285.2;
    %1288 = %1286.0;
    (%1287, %1288)
  };
  %1289() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(784), int64]) */
}

def @func_18216() -> (uint8,) {
  %1292 = fn () -> (uint8,) {
    %1290 = @func_13278() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) */;
    %1291 = %1290.3;
    (%1291,)
  };
  %1292() /* ty=(uint8,) */
}

def @func_14878() -> Tensor[(10, 12, 15), float32] {
  %1294 = fn () -> Tensor[(10, 12, 15), float32] {
    %1293 = @func_7793() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1293.0
  };
  %1294() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_20829() -> (Tensor[(10, 12, 15), float32],) {
  @func_20827() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_7794() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1298 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1295 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1296 = %1295.0;
    %1297 = @func_7567() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1296, %1297)
  };
  %1298() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_7287() -> (Tensor[(10, 12, 15), float32],) {
  %1299 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1300 = %1299.0;
  (%1300,)
}

def @func_15812() -> Tensor[(14, 8, 3), float64] {
  %1302 = fn () -> Tensor[(14, 8, 3), float64] {
    %1301 = @func_13698() /* ty=(Tensor[(14, 8, 3), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1301.0
  };
  %1302() /* ty=Tensor[(14, 8, 3), float64] */
}

def @func_16138() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1303 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1304 = @func_14447() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1305 = %1303.0;
  %1306 = %1304.1;
  %1307 = @func_3738() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1305, %1306, %1307)
}

def @func_3160(%var_3157: Tensor[(11, 13, 12), uint8], %var_3158: Tensor[(11, 13, 12), uint16], %var_3159: Tensor[(378), float64]) -> (Tensor[(11, 13, 12), uint32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(11, 13, 12), float64]) {
  %1323 = fn (%var_3112: Tensor[(11, 13, 12), uint8], %var_3123: Tensor[(11, 13, 12), uint16], %var_3129: Tensor[(378), float64]) -> (Tensor[(11, 13, 12), uint32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(11, 13, 12), float64]) {
    %1308 = @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */;
    %1309 = %1308.2;
    %1310 = cast(%1309, dtype="uint16") /* ty=uint16 */;
    %1311 = cast(%var_3112, dtype="uint16") /* ty=Tensor[(11, 13, 12), uint16] */;
    %1312 = minimum(%1310, %1311) /* ty=Tensor[(11, 13, 12), uint16] */;
    %1313 = cast(%var_3123, dtype="uint32") /* ty=Tensor[(11, 13, 12), uint32] */;
    %1314 = shape_of(%1312, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1315 = cast(%1312, dtype="uint32") /* ty=Tensor[(11, 13, 12), uint32] */;
    %1316 = dyn.reshape(%1313, %1314, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1317 = cast(%var_3129, dtype="float64") /* ty=Tensor[(378), float64] */;
    %1318 = reshape(%1317, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), float64] */;
    %1319 = cast(%1312, dtype="float64") /* ty=Tensor[(11, 13, 12), float64] */;
    %1320 = maximum(%1315, %1316) /* ty=Tensor[(11, 13, 12), uint32] */;
    %1321 = @func_170(%1318) /* ty=Tensor[(9, 7, 6), float64] */;
    %1322 = acos(%1319) /* ty=Tensor[(11, 13, 12), float64] */;
    (%1320, %1321, %var_3129, %1322)
  };
  %1323(%var_3157, %var_3158, %var_3159) /* ty=(Tensor[(11, 13, 12), uint32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(11, 13, 12), float64]) */
}

def @func_16877() -> uint8 {
  @func_14002() /* ty=uint8 */
}

def @func_335(%var_334: Tensor[(14, 8, 3), float64]) -> Tensor[(14, 8, 3), float64] {
  %1325 = fn (%var_329: Tensor[(14, 8, 3), float64]) -> Tensor[(14, 8, 3), float64] {
    %1324 = cast(%var_329, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
    tan(%1324) /* ty=Tensor[(14, 8, 3), float64] */
  };
  %1325(%var_334) /* ty=Tensor[(14, 8, 3), float64] */
}

def @func_8986() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_8984() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_11198() -> (uint8, Tensor[(10, 12, 15), float32]) {
  %1326 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1327 = %1326.0;
  %1328 = @func_3295() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1327, %1328)
}

def @func_5054() -> (Tensor[(10, 12, 15), float32],) {
  %1331 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1329 = @func_4153() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1330 = %1329.0;
    (%1330,)
  };
  %1331() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_11557() -> Tensor[(10, 12, 15), float32] {
  %1333 = fn () -> Tensor[(10, 12, 15), float32] {
    %1332 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1332.2
  };
  %1333() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_11894(%var_11892: Tensor[(378), float64], %var_11893: Tensor[(2160), bool]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(2160), bool]) {
  @func_11890(%var_11892, %var_11893) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(378), float64], Tensor[(2160), bool]) */
}

def @func_3376(%var_3375: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, uint8, Tensor[(189), uint8]) {
  %1345 = fn (%var_3370: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, uint8, Tensor[(189), uint8]) {
    %1334 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
    %1335 = %1334.1;
    %1336 = cast(%1335, dtype="float32") /* ty=Tensor[(10, 12, 15), float32] */;
    %1337 = cast(meta[relay.Constant][41] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1338 = cast(%var_3370, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %1339 = reshape(%1337, newshape=[]) /* ty=uint8 */;
    %1340 = reshape(%1338, newshape=[189]) /* ty=Tensor[(189), uint8] */;
    %1341 = @func_3083(%1339, %1340) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189), uint8]) */;
    %1342 = @func_1887() /* ty=Tensor[(10, 12, 15), float32] */;
    %1343 = exp(%1336) /* ty=Tensor[(10, 12, 15), float32] */;
    %1344 = %1341.3;
    (%1342, %1343, %1344, meta[relay.Constant][41] /* ty=uint8 */, %var_3370)
  };
  %1345(%var_3375) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, uint8, Tensor[(189), uint8]) */
}

def @func_7115() -> (Tensor[(10, 12, 15), float32],) {
  %1348 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1346 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1347 = %1346.0;
    (%1347,)
  };
  %1348() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_14793() -> Tensor[(10, 12, 15), float32] {
  %1349 = @func_7287() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1349.0
}

def @func_5262(%var_5260: Tensor[(7, 13, 10), int64]) -> (Tensor[(7, 13, 10), int64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_5259(%var_5260) /* ty=(Tensor[(7, 13, 10), int64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_11203() -> (Tensor[(10, 12, 15), float32],) {
  %1350 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1351 = %1350.0;
  (%1351,)
}

def @func_13718() -> Tensor[(10, 12, 15), uint64] {
  %1352 = @func_11719() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(99), float32]) */;
  %1352.0
}

def @func_10189(%var_10188: Tensor[(14, 13, 336), bool]) -> (Tensor[(10, 12, 15), float32], Tensor[(14, 13, 336), bool]) {
  %1359 = fn (%var_10180: Tensor[(14, 13, 336), bool]) -> (Tensor[(10, 12, 15), float32], Tensor[(14, 13, 336), bool]) {
    %1353 = @func_9657() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14), float32], Tensor[(14, 1, 336), bool]) */;
    %1354 = %1353.2;
    %1355 = cast(%1354, dtype="bool") /* ty=Tensor[(14, 1, 336), bool] */;
    %1356 = cast(%var_10180, dtype="bool") /* ty=Tensor[(14, 13, 336), bool] */;
    %1357 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
    %1358 = less(%1355, %1356) /* ty=Tensor[(14, 13, 336), bool] */;
    (%1357, %1358)
  };
  %1359(%var_10188) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 13, 336), bool]) */
}

def @func_11784() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1364 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1360 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1361 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1362 = %1360.1;
    %1363 = %1361.0;
    (%1362, %1363)
  };
  %1364() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_16715(%var_16710: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(189, 1), uint8]) {
  %1365 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1366 = @func_6464() /* ty=(Tensor[(336), float64], uint8) */;
  %1367 = cast(%var_16710, dtype="uint8") /* ty=Tensor[(189, 1), uint8] */;
  %1368 = reshape(%1367, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
  %1369 = @func_4847(%1368) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(189, 1), uint8]) */;
  %1370 = %1365.0;
  %1371 = %1366.1;
  %1372 = %1369.0;
  (%1370, %1371, %1372, %var_16710)
}

def @func_4847(%var_4844: Tensor[(189, 1), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(189, 1), uint8]) {
  %1373 = cast(%var_4844, dtype="uint8") /* ty=Tensor[(189, 1), uint8] */;
  %1374 = reshape(%1373, newshape=[21, 9]) /* ty=Tensor[(21, 9), uint8] */;
  %1375 = @func_2336(%1374) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */;
  %1376 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  %1377 = %1375.3;
  (%1376, %1377, %var_4844)
}

def @func_10238() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %1378 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1379 = @func_7249() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1380 = @func_6229() /* ty=Tensor[(10, 12, 15), uint64] */;
  %1381 = %1378.0;
  %1382 = %1379.0;
  (%1380, %1381, %1382)
}

def @func_15858() -> (Tensor[(2, 10, 12), float32],) {
  %1385 = fn () -> (Tensor[(2, 10, 12), float32],) {
    %1383 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
    %1384 = sigmoid(%1383) /* ty=Tensor[(2, 10, 12), float32] */;
    (%1384,)
  };
  %1385() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_20827() -> (Tensor[(10, 12, 15), float32],) {
  %1386 = @func_16637() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1386,)
}

def @func_10498(%var_10497: Tensor[(11), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(11), float32]) {
  %1393 = fn (%var_10477: Tensor[(11), float32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(11), float32]) {
    %1387 = @func_7379() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1388 = cast(%var_10477, dtype="float32") /* ty=Tensor[(11), float32] */;
    %1389 = reshape(%1388, newshape=[1, 1, 11]) /* ty=Tensor[(1, 1, 11), float32] */;
    %1390 = @func_7027(%1389) /* ty=(Tensor[(1, 1, 11), float32], Tensor[(10, 12, 15), float32]) */;
    %1391 = %1387.0;
    %1392 = %1390.1;
    (%1391, %1392, %var_10477)
  };
  %1393(%var_10497) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(11), float32]) */
}

def @func_14419(%var_14400: Tensor[(5, 15, 9), float64], %var_14410: Tensor[(99), float32]) -> (Tensor[(5, 15, 9), float64], Tensor[(99), float32], Tensor[(99), float32]) {
  %1394 = cast(%var_14400, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %1395 = cast(%var_14410, dtype="float32") /* ty=Tensor[(99), float32] */;
  %1396 = reshape(%1395, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %1397 = @func_14203(%1396) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], Tensor[(10, 12, 15), float32], Tensor[(1, 9, 11), float32], Tensor[(99), float32], Tensor[(336), float64], Tensor[(1, 378), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1398 = sin(%1394) /* ty=Tensor[(5, 15, 9), float64] */;
  %1399 = %1397.4;
  (%1398, %1399, %var_14410)
}

def @func_21772(%var_21771: Tensor[(416), int32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(16, 13, 2), uint16], Tensor[(416), int32], Tensor[(189), uint8]) {
  %1411 = fn (%var_21766: Tensor[(416), int32]) -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(16, 13, 2), uint16], Tensor[(416), int32], Tensor[(189), uint8]) {
    %1400 = @func_14970() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1401 = @func_7098() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1402 = cast(%var_21766, dtype="int32") /* ty=Tensor[(416), int32] */;
    %1403 = cast(meta[relay.Constant][43] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %1404 = reshape(%1402, newshape=[416]) /* ty=Tensor[(416), int32] */;
    %1405 = reshape(%1403, newshape=[189]) /* ty=Tensor[(189), uint8] */;
    %1406 = @func_12874(%1404, %1405) /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(16, 13, 2), uint16]) */;
    %1407 = %1400.1;
    %1408 = %1401.0;
    %1409 = @func_16567() /* ty=Tensor[(336), float64] */;
    %1410 = %1406.3;
    (%1407, %1408, %1409, %1410, %var_21766, meta[relay.Constant][43] /* ty=Tensor[(189), uint8] */)
  };
  %1411(%var_21771) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(16, 13, 2), uint16], Tensor[(416), int32], Tensor[(189), uint8]) */
}

def @func_10631() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_10629() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_10240() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  @func_10238() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */
}

def @func_15964() -> (Tensor[(10, 12, 15), float32],) {
  @func_15962() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_19616() -> (Tensor[(10, 12, 15), float32],) {
  %1413 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1412 = @func_3717() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1412,)
  };
  %1413() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_9128() -> (Tensor[(10, 12, 15), float32],) {
  %1414 = @func_6846() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1414,)
}

def @func_14765() -> (Tensor[(588), float32], Tensor[(10, 12, 15), float32]) {
  @func_14763() /* ty=(Tensor[(588), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_6231() -> Tensor[(10, 12, 15), uint64] {
  @func_6229() /* ty=Tensor[(10, 12, 15), uint64] */
}

def @func_16567() -> Tensor[(336), float64] {
  %1415 = @func_3930() /* ty=(Tensor[(336), float64],) */;
  %1415.0
}

def @func_10947() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  @func_10945() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(784), int64]) */
}

def @func_8174() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1419 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1416 = @func_3762() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1417 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
    %1418 = %1416.0;
    (%1417, %1418)
  };
  %1419() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_15775(%var_15774: Tensor[(1, 3, 12), float32]) -> (Tensor[(1, 3, 12), float32],) {
  %1422 = fn (%var_15757: Tensor[(1, 3, 12), float32]) -> (Tensor[(1, 3, 12), float32],) {
    %1420 = cast(%var_15757, dtype="float32") /* ty=Tensor[(1, 3, 12), float32] */;
    %1421 = rsqrt(%1420) /* ty=Tensor[(1, 3, 12), float32] */;
    (%1421,)
  };
  %1422(%var_15774) /* ty=(Tensor[(1, 3, 12), float32],) */
}

def @func_17123(%var_17101: Tensor[(12, 12, 1), float64]) -> (Tensor[(12, 12, 1), float64], Tensor[(10, 12, 15), float32]) {
  %1423 = cast(%var_17101, dtype="float64") /* ty=Tensor[(12, 12, 1), float64] */;
  %1424 = erf(%1423) /* ty=Tensor[(12, 12, 1), float64] */;
  %1425 = cast(%1424, dtype="float64") /* ty=Tensor[(12, 12, 1), float64] */;
  %1426 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1427 = tan(%1425) /* ty=Tensor[(12, 12, 1), float64] */;
  %1428 = %1426.0;
  (%1427, %1428)
}

def @func_10597() -> uint8 {
  %1429 = @func_6464() /* ty=(Tensor[(336), float64], uint8) */;
  %1429.1
}

def @func_6598() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) {
  @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */
}

def @func_8984() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1430 = @func_3472() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1431 = @func_7482() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1432 = %1430.0;
  %1433 = %1431.0;
  %1434 = @func_4067() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1432, %1433, %1434)
}

def @func_9728() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1439 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1435 = @func_2150() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1436 = @func_6561() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1437 = %1435.0;
    %1438 = %1436.0;
    (%1437, %1438)
  };
  %1439() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_11058() -> Tensor[(15, 9, 16), bool] {
  %1440 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 9, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %1441 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(15, 9, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1442 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 9, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %1443 = dyn.reshape(%1440, %1441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1442, %1443) /* ty=Tensor[(15, 9, 16), bool] */
}

def @func_5501() -> Tensor[(10, 12, 15), float32] {
  @func_5499() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_9884() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_9882() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_13383(%var_13381: Tensor[(3, 5, 2), float32]) -> (Tensor[(3, 5, 2), float32],) {
  @func_13380(%var_13381) /* ty=(Tensor[(3, 5, 2), float32],) */
}

def @func_13698() -> (Tensor[(14, 8, 3), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1444 = @func_2950() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */;
  %1445 = @func_6975() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) */;
  %1446 = %1444.1;
  %1447 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %1448 = %1445.1;
  (%1446, %1447, %1448)
}

def @func_20463() -> Tensor[(10, 12, 15), float32] {
  %1449 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1449.2
}

def @func_19385() -> (Tensor[(10, 12, 15), float32],) {
  %1450 = @func_15072() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1451 = %1450.0;
  (%1451,)
}

def @func_10153() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_10151() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_8437() -> Tensor[(10, 12, 15), float32] {
  %1453 = fn () -> Tensor[(10, 12, 15), float32] {
    %1452 = @func_7793() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1452.1
  };
  %1453() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10252() -> (Tensor[(784), int64], Tensor[(10, 12, 15), float32]) {
  %1458 = fn () -> (Tensor[(784), int64], Tensor[(10, 12, 15), float32]) {
    %1454 = @func_7064() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(8, 7, 14), float64], Tensor[(588), float32], Tensor[(784), int64]) */;
    %1455 = @func_2097() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1456 = %1454.3;
    %1457 = %1455.0;
    (%1456, %1457)
  };
  %1458() /* ty=(Tensor[(784), int64], Tensor[(10, 12, 15), float32]) */
}

def @func_15005() -> (Tensor[(10, 12, 15), float32],) {
  @func_15003() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_17126(%var_17124: Tensor[(12, 12, 1), float64]) -> (Tensor[(12, 12, 1), float64], Tensor[(10, 12, 15), float32]) {
  @func_17123(%var_17124) /* ty=(Tensor[(12, 12, 1), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_20258(%var_20242: Tensor[(1716), uint8], %var_20243: Tensor[(378, 1), float64]) -> (Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32], Tensor[(11, 13, 12), float64], Tensor[(1716), uint8], Tensor[(378, 1), float64]) {
  %1459 = @func_17836() /* ty=(uint8, Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) */;
  %1460 = cast(%var_20242, dtype="uint8") /* ty=Tensor[(1716), uint8] */;
  %1461 = cast(%var_20242, dtype="uint16") /* ty=Tensor[(1716), uint16] */;
  %1462 = cast(%var_20243, dtype="float64") /* ty=Tensor[(378, 1), float64] */;
  %1463 = reshape(%1460, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), uint8] */;
  %1464 = reshape(%1461, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), uint16] */;
  %1465 = reshape(%1462, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %1466 = @func_3156(%1463, %1464, %1465) /* ty=(Tensor[(11, 13, 12), uint32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(11, 13, 12), float64]) */;
  %1467 = %1459.1;
  %1468 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  %1469 = %1466.3;
  (%1467, %1468, %1469, %var_20242, %var_20243)
}

def @func_13818() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_13816() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_13279() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) {
  %1482 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) {
    %1470 = @func_10038() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1471 = @func_11104() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1472 = %1471.0;
    %1473 = cast(%1472, dtype="float64") /* ty=Tensor[(10, 12, 15), float64] */;
    %1474 = cast(meta[relay.Constant][46] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1475 = cast(meta[relay.Constant][47] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %1476 = reshape(%1474, newshape=[]) /* ty=uint8 */;
    %1477 = reshape(%1475, newshape=[189, 1]) /* ty=Tensor[(189, 1), uint8] */;
    %1478 = @func_1932(%1476, %1477) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(189, 1), uint8]) */;
    %1479 = %1470.0;
    %1480 = sinh(%1473) /* ty=Tensor[(10, 12, 15), float64] */;
    %1481 = %1478.2;
    (%1479, %1480, %1481, meta[relay.Constant][46] /* ty=uint8 */, meta[relay.Constant][47] /* ty=Tensor[(189), uint8] */)
  };
  %1482() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8]) */
}

def @func_7149() -> (Tensor[(10, 12, 15), float32], uint8) {
  %1487 = fn () -> (Tensor[(10, 12, 15), float32], uint8) {
    %1483 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1484 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1485 = %1483.0;
    %1486 = %1484.0;
    (%1485, %1486)
  };
  %1487() /* ty=(Tensor[(10, 12, 15), float32], uint8) */
}

def @func_5499() -> Tensor[(10, 12, 15), float32] {
  @func_4550() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_13700() -> (Tensor[(14, 8, 3), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_13698() /* ty=(Tensor[(14, 8, 3), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_2986() -> (Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) {
  %1488 = @func_1720() /* ty=(Tensor[(10, 12, 15), float64], uint8, Tensor[(378), float64], Tensor[(336), float64]) */;
  %1489 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1490 = cast(meta[relay.Constant][48] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1491 = reshape(%1490, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %1492 = @func_2035(%1491) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(6, 14, 7), float64], Tensor[(10, 12, 15), float32]) */;
  %1493 = %1488.3;
  %1494 = %1489.1;
  %1495 = %1492.2;
  (%1493, %1494, %1495, meta[relay.Constant][48] /* ty=Tensor[(588), float32] */)
}

def @func_7819() -> (Tensor[(10, 12, 15), float32],) {
  %1498 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1496 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1497 = %1496.0;
    (%1497,)
  };
  %1498() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_17624() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %1499 = @func_7915() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1500 = @func_5314() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1501 = @func_6724() /* ty=(Tensor[(336), float64], Tensor[(336), float64]) */;
  %1502 = %1499.1;
  %1503 = @func_6201() /* ty=Tensor[(10, 12, 15), float32] */;
  %1504 = %1500.0;
  %1505 = %1501.1;
  (%1502, %1503, %1504, %1505)
}

def @func_17216() -> (Tensor[(10, 12, 15), float32],) {
  @func_17214() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_7379() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1506 = @func_6766() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1507 = @func_7114() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1508 = %1506.0;
  %1509 = %1507.0;
  (%1508, %1509)
}

def @func_3473() -> (Tensor[(10, 12, 15), float32],) {
  %1512 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1510 = @func_2850() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1511 = %1510.1;
    (%1511,)
  };
  %1512() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_9116(%var_9099: Tensor[(16, 13, 2), uint8], %var_9100: Tensor[(16, 13, 2), uint8]) -> Tensor[(16, 13, 2), uint8] {
  %1513 = cast(%var_9100, dtype="uint8") /* ty=Tensor[(16, 13, 2), uint8] */;
  %1514 = shape_of(%var_9099, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1515 = cast(%var_9099, dtype="uint8") /* ty=Tensor[(16, 13, 2), uint8] */;
  %1516 = dyn.reshape(%1513, %1514, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%1515, %1516) /* ty=Tensor[(16, 13, 2), uint8] */
}

def @func_6877() -> Tensor[(10, 12, 15), float32] {
  %1518 = fn () -> Tensor[(10, 12, 15), float32] {
    %1517 = @func_3762() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1517.0
  };
  %1518() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_13767() -> Tensor[(10, 12, 15), float32] {
  %1520 = fn () -> Tensor[(10, 12, 15), float32] {
    %1519 = @func_10151() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1519.0
  };
  %1520() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_9689() -> (Tensor[(10, 12, 15), float32],) {
  @func_9687() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_15027() -> Tensor[(10, 12, 15), float32] {
  %1521 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_14793() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %1521() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_17512() -> Tensor[(10, 12, 15), float32] {
  %1523 = fn () -> Tensor[(10, 12, 15), float32] {
    %1522 = @func_7818() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1522.0
  };
  %1523() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10116() -> (Tensor[(10, 12, 15), float32],) {
  @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_12877(%var_12875: Tensor[(416), int32], %var_12876: Tensor[(189), uint8]) -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(16, 13, 2), uint16]) {
  %1544 = fn (%var_12791: Tensor[(416), int32], %var_12792: Tensor[(189), uint8]) -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(16, 13, 2), uint16]) {
    %1524 = @func_11198() /* ty=(uint8, Tensor[(10, 12, 15), float32]) */;
    %1525 = cast(%var_12791, dtype="int32") /* ty=Tensor[(416), int32] */;
    %1526 = cast(%var_12791, dtype="int32") /* ty=Tensor[(416), int32] */;
    %1527 = cast(%var_12792, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %1528 = reshape(%1525, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), int32] */;
    %1529 = reshape(%1526, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), int32] */;
    %1530 = reshape(%1527, newshape=[189]) /* ty=Tensor[(189), uint8] */;
    %1531 = @func_5858(%1528, %1529, %1530) /* ty=(Tensor[(16, 13, 2), bool], Tensor[(16, 13, 2), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], uint8, uint8, Tensor[(189), uint8]) */;
    %1532 = %1531.0;
    %1533 = cast(%1532, dtype="float32") /* ty=Tensor[(16, 13, 2), float32] */;
    %1534 = erf(%1533) /* ty=Tensor[(16, 13, 2), float32] */;
    %1535 = cast(%1534, dtype="float64") /* ty=Tensor[(16, 13, 2), float64] */;
    %1536 = sin(%1535) /* ty=Tensor[(16, 13, 2), float64] */;
    %1537 = cast(%var_12791, dtype="uint16") /* ty=Tensor[(416), uint16] */;
    %1538 = shape_of(%1536, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1539 = cast(%1536, dtype="uint16") /* ty=Tensor[(16, 13, 2), uint16] */;
    %1540 = dyn.reshape(%1537, %1538, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1541 = %1524.0;
    %1542 = @func_11248() /* ty=Tensor[(10, 12, 15), float32] */;
    %1543 = bitwise_xor(%1539, %1540) /* ty=Tensor[(16, 13, 2), uint16] */;
    (%1541, %1542, %var_12792, %1543)
  };
  %1544(%var_12875, %var_12876) /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(189), uint8], Tensor[(16, 13, 2), uint16]) */
}

def @func_17626() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  @func_17624() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_21811() -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %1548 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
    %1545 = @func_14108() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
    %1546 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
    %1547 = %1545.1;
    (%1546, %1547)
  };
  %1548() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_2851() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1552 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1549 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1550 = %1549.0;
    %1551 = @func_2724() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1550, %1551)
  };
  %1552() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_172(%var_171: Tensor[(9, 7, 6), float64]) -> Tensor[(9, 7, 6), float64] {
  %1558 = fn (%var_143: Tensor[(9, 7, 6), float64]) -> Tensor[(9, 7, 6), float64] {
    %1553 = cast(%var_143, dtype="float64") /* ty=Tensor[(9, 7, 6), float64] */;
    %1554 = sqrt(%1553) /* ty=Tensor[(9, 7, 6), float64] */;
    %1555 = cast(%1554, dtype="float32") /* ty=Tensor[(9, 7, 6), float32] */;
    %1556 = erf(%1555) /* ty=Tensor[(9, 7, 6), float32] */;
    %1557 = cast(%1556, dtype="float64") /* ty=Tensor[(9, 7, 6), float64] */;
    acosh(%1557) /* ty=Tensor[(9, 7, 6), float64] */
  };
  %1558(%var_171) /* ty=Tensor[(9, 7, 6), float64] */
}

def @func_11017() -> (Tensor[(10, 12, 15), float32],) {
  @func_11015() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_6107() -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(910), int64], Tensor[(10, 12, 15), float32]) {
  %1571 = fn () -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(910), int64], Tensor[(10, 12, 15), float32]) {
    %1559 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %1560 = @func_3218() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1561 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1562 = cast(meta[relay.Constant][49] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %1563 = reshape(%1562, newshape=[7, 13, 10]) /* ty=Tensor[(7, 13, 10), int64] */;
    %1564 = @func_5259(%1563) /* ty=(Tensor[(7, 13, 10), int64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1565 = @func_4276() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1566 = %1559.0;
    %1567 = %1560.2;
    %1568 = %1561.0;
    %1569 = %1564.5;
    %1570 = %1565.0;
    (%1566, %1567, %1568, %1569, meta[relay.Constant][49] /* ty=Tensor[(910), int64] */, %1570)
  };
  %1571() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(910), int64], Tensor[(10, 12, 15), float32]) */
}

def @func_18256() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_18254() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_17497() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_17495() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_4550() -> Tensor[(10, 12, 15), float32] {
  @func_4067() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_7614(%var_7612: Tensor[(378), float64], %var_7613: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) {
  %1586 = fn (%var_7602: Tensor[(378), float64], %var_7603: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) {
    %1572 = @func_5946() /* ty=Tensor[(10, 12, 15), float32] */;
    %1573 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
    %1574 = cast(%1573, dtype="bool") /* ty=Tensor[(10, 12, 15), bool] */;
    %1575 = shape_of(%1572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1576 = cast(%1572, dtype="bool") /* ty=Tensor[(10, 12, 15), bool] */;
    %1577 = dyn.reshape(%1574, %1575, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1578 = cast(%var_7602, dtype="float64") /* ty=Tensor[(378), float64] */;
    %1579 = cast(%var_7603, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %1580 = reshape(%1578, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %1581 = reshape(%1579, newshape=[189]) /* ty=Tensor[(189), uint8] */;
    %1582 = @func_4940(%1580, %1581) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
    %1583 = not_equal(%1576, %1577) /* ty=Tensor[(10, 12, 15), bool] */;
    %1584 = %1582.1;
    %1585 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1583, %1584, %var_7602, %var_7603, %1585)
  };
  %1586(%var_7612, %var_7613) /* ty=(Tensor[(10, 12, 15), bool], Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(189), uint8], Tensor[(10, 12, 15), float32]) */
}

def @func_21680() -> (Tensor[(2, 10, 12), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1592 = fn () -> (Tensor[(2, 10, 12), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1587 = @func_15857() /* ty=(Tensor[(2, 10, 12), float32],) */;
    %1588 = @func_10161() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1589 = %1587.0;
    %1590 = %1588.0;
    %1591 = @func_7232() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1589, %1590, %1591)
  };
  %1592() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_16639() -> Tensor[(10, 12, 15), float32] {
  @func_16637() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_14795() -> Tensor[(10, 12, 15), float32] {
  @func_14793() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_8938(%var_8937: Tensor[(378), float64]) -> (Tensor[(16, 12, 12), uint16], Tensor[(336), float64], Tensor[(378), float64]) {
  %1602 = fn (%var_8932: Tensor[(378), float64]) -> (Tensor[(16, 12, 12), uint16], Tensor[(336), float64], Tensor[(378), float64]) {
    %1593 = cast(meta[relay.Constant][51] /* ty=Tensor[(16, 12, 12), uint16] */, dtype="uint16") /* ty=Tensor[(16, 12, 12), uint16] */;
    %1594 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(16, 12, 12), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1595 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 12, 12), uint16] */, dtype="uint16") /* ty=Tensor[(16, 12, 12), uint16] */;
    %1596 = dyn.reshape(%1593, %1594, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1597 = cast(%var_8932, dtype="float64") /* ty=Tensor[(378), float64] */;
    %1598 = reshape(%1597, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %1599 = @func_4423(%1598) /* ty=(Tensor[(336), float64], Tensor[(378), float64], Tensor[(378), float32]) */;
    %1600 = add(%1595, %1596) /* ty=Tensor[(16, 12, 12), uint16] */;
    %1601 = %1599.0;
    (%1600, %1601, %var_8932)
  };
  %1602(%var_8937) /* ty=(Tensor[(16, 12, 12), uint16], Tensor[(336), float64], Tensor[(378), float64]) */
}

def @func_7233() -> Tensor[(10, 12, 15), float32] {
  %1603 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_3717() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %1603() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_7483() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1606 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1604 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
    %1605 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1604, %1605)
  };
  %1606() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_10971() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1607 = @func_8731() /* ty=Tensor[(10, 12, 15), float32] */;
  %1608 = @func_4031() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1607, %1608)
}

def @func_15917() -> (Tensor[(336), float64],) {
  %1611 = fn () -> (Tensor[(336), float64],) {
    %1609 = @func_13672() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */;
    %1610 = %1609.2;
    (%1610,)
  };
  %1611() /* ty=(Tensor[(336), float64],) */
}

def @main(%var_21836: Tensor[(12, 2), float32]) -> (Tensor[(12, 2), float32],) {
  %1612 = cast(%var_21836, dtype="float32") /* ty=Tensor[(12, 2), float32] */;
  %1613 = rsqrt(%1612) /* ty=Tensor[(12, 2), float32] */;
  (%1613,)
}

def @func_2338(%var_2337: Tensor[(21, 9), uint8]) -> (Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) {
  %1623 = fn (%var_2324: Tensor[(21, 9), uint8]) -> (Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) {
    %1614 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(14, 9, 1), float32] */;
    %1615 = cast(meta[relay.Constant][53] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1616 = cast(%var_2324, dtype="uint8") /* ty=Tensor[(21, 9), uint8] */;
    %1617 = reshape(%1615, newshape=[]) /* ty=uint8 */;
    %1618 = reshape(%1616, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), uint8] */;
    %1619 = @func_1226(%1617, %1618) /* ty=(Tensor[(7, 9, 3), uint8],) */;
    %1620 = sqrt(%1614) /* ty=Tensor[(14, 9, 1), float32] */;
    %1621 = %1619.0;
    %1622 = @func_1637() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1620, %1621, meta[relay.Constant][53] /* ty=uint8 */, %var_2324, %1622)
  };
  %1623(%var_2337) /* ty=(Tensor[(14, 9, 1), float32], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32]) */
}

def @func_3738() -> Tensor[(10, 12, 15), float32] {
  %1624 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %1624.1
}

def @func_6767() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1631 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1625 = @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1626 = @func_2110() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1627 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
    %1628 = %1625.0;
    %1629 = %1626.0;
    %1630 = %1627.1;
    (%1628, %1629, %1630)
  };
  %1631() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_9410() -> Tensor[(10, 12, 15), float32] {
  %1633 = fn () -> Tensor[(10, 12, 15), float32] {
    %1632 = @func_4638() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32]) */;
    %1632.1
  };
  %1633() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_21257() -> Tensor[(10, 12, 15), float32] {
  %1634 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_10291() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %1634() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_3671() -> (uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %1635 = @func_2914() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1636 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1637 = @func_2986() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32]) */;
  %1638 = @func_2211() /* ty=(Tensor[(336), float64],) */;
  %1639 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1640 = @func_2758() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1641 = %1635.0;
  %1642 = %1636.0;
  %1643 = %1637.2;
  %1644 = @func_2581() /* ty=Tensor[(10, 12, 15), float32] */;
  %1645 = %1638.0;
  %1646 = %1639.0;
  %1647 = %1640.0;
  (%1641, %1642, %1643, %1644, %1645, %1646, %1647)
}

def @func_14608() -> Tensor[(10, 12, 15), float32] {
  @func_14606() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_20431(%var_20429: Tensor[(9, 6, 9), float64]) -> (Tensor[(9, 6, 9), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(784), int64]) {
  @func_20428(%var_20429) /* ty=(Tensor[(9, 6, 9), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(784), int64]) */
}

def @func_10367() -> (Tensor[(784), int64],) {
  %1648 = @func_10251() /* ty=(Tensor[(784), int64], Tensor[(10, 12, 15), float32]) */;
  %1649 = %1648.0;
  (%1649,)
}

def @func_13426() -> Tensor[(10, 12, 15), float32] {
  %1650 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_11248() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %1650() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_21318() -> Tensor[(10, 12, 15), uint64] {
  %1652 = fn () -> Tensor[(10, 12, 15), uint64] {
    %1651 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %1651.0
  };
  %1652() /* ty=Tensor[(10, 12, 15), uint64] */
}

def @func_19387() -> (Tensor[(10, 12, 15), float32],) {
  @func_19385() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_15315() -> Tensor[(10, 12, 15), float32] {
  @func_6867() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_2454(%var_2451: Tensor[(3, 126), float64], %var_2452: Tensor[(336), float64], %var_2453: Tensor[(3, 126), float64]) -> (Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], Tensor[(3, 126), int64], Tensor[(10, 12, 15), float32]) {
  @func_2449(%var_2451, %var_2452, %var_2453) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(21, 9), uint8], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], Tensor[(3, 126), int64], Tensor[(10, 12, 15), float32]) */
}

def @func_1691() -> (Tensor[(10, 12, 15), float32],) {
  @func_1689() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_5314() -> (Tensor[(10, 12, 15), float32],) {
  %1653 = @func_2370() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1654 = %1653.0;
  (%1654,)
}

def @func_11720() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(99), float32]) {
  %1661 = fn () -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(99), float32]) {
    %1655 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
    %1656 = cast(meta[relay.Constant][54] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
    %1657 = reshape(%1656, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), float32] */;
    %1658 = @func_11642(%1657) /* ty=(Tensor[(1, 9, 11), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1659 = %1655.0;
    %1660 = %1658.2;
    (%1659, %1660, meta[relay.Constant][54] /* ty=Tensor[(99), float32] */)
  };
  %1661() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32], Tensor[(99), float32]) */
}

def @func_6562() -> (Tensor[(10, 12, 15), float32],) {
  %1664 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1662 = @func_4688() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1663 = %1662.1;
    (%1663,)
  };
  %1664() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_4079() -> (Tensor[(10, 12, 15), float32],) {
  %1665 = @func_3238() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1666 = %1665.0;
  (%1666,)
}

def @func_7289() -> (Tensor[(10, 12, 15), float32],) {
  @func_7287() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_1412() -> (Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) {
  %1667 = cast(meta[relay.Constant][55] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1668 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 12, 15), uint64] */, dtype="uint64") /* ty=Tensor[(10, 12, 15), uint64] */;
  %1669 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 12, 15), uint64] */, dtype="float32") /* ty=Tensor[(10, 12, 15), float32] */;
  %1670 = cast(meta[relay.Constant][55] /* ty=uint64 */, dtype="float32") /* ty=float32 */;
  %1671 = right_shift(%1667, %1668) /* ty=Tensor[(10, 12, 15), uint64] */;
  %1672 = floor_mod(%1669, %1670) /* ty=Tensor[(10, 12, 15), float32] */;
  (%1671, %1672)
}

def @func_4068() -> Tensor[(10, 12, 15), float32] {
  %1673 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_1495() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %1673() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_17837() -> (uint8, Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) {
  %1678 = fn () -> (uint8, Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) {
    %1674 = @func_14447() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1675 = @func_14002() /* ty=uint8 */;
    %1676 = @func_11058() /* ty=Tensor[(15, 9, 16), bool] */;
    %1677 = %1674.1;
    (%1675, %1676, %1677)
  };
  %1678() /* ty=(uint8, Tensor[(15, 9, 16), bool], Tensor[(10, 12, 15), float32]) */
}

def @func_3740() -> Tensor[(10, 12, 15), float32] {
  @func_3738() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_20709() -> Tensor[(2, 10, 12), float32] {
  @func_20707() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_19019() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
  %1683 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) {
    %1679 = @func_3421() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1680 = @func_1495() /* ty=Tensor[(10, 12, 15), float32] */;
    %1681 = %1679.0;
    %1682 = @func_18367() /* ty=Tensor[(336), float64] */;
    (%1680, %1681, %1682)
  };
  %1683() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64]) */
}

def @func_20746() -> (Tensor[(10, 12, 15), float32],) {
  @func_20744() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_20867() -> Tensor[(10, 12, 15), float32] {
  @func_20130() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_10973() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_10971() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_20744() -> (Tensor[(10, 12, 15), float32],) {
  %1684 = @func_4550() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1684,)
}

def @func_16077() -> (Tensor[(10, 12, 15), float32],) {
  %1687 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1685 = @func_14358() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1686 = %1685.0;
    (%1686,)
  };
  %1687() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_13743(%var_13741: float64, %var_13742: Tensor[(1, 16, 2), float64]) -> Tensor[(?, 16, 2), uint16] {
  %1695 = fn (%var_13730: float64, %var_13731: Tensor[(1, 16, 2), float64]) -> Tensor[(?, 16, 2), uint16] {
    %1688 = cast(%var_13730, dtype="float64") /* ty=float64 */;
    %1689 = cast(%var_13731, dtype="float64") /* ty=Tensor[(1, 16, 2), float64] */;
    %1690 = add(%1688, %1689) /* ty=Tensor[(1, 16, 2), float64] */;
    %1691 = cast(%var_13731, dtype="uint16") /* ty=Tensor[(1, 16, 2), uint16] */;
    %1692 = shape_of(%1690, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1693 = cast(%1690, dtype="uint16") /* ty=Tensor[(1, 16, 2), uint16] */;
    %1694 = dyn.reshape(%1691, %1692, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_and(%1693, %1694) /* ty=Tensor[(?, 16, 2), uint16] */
  };
  %1695(%var_13741, %var_13742) /* ty=Tensor[(?, 16, 2), uint16] */
}

def @func_6203() -> Tensor[(10, 12, 15), float32] {
  @func_6201() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_16569() -> Tensor[(336), float64] {
  @func_16567() /* ty=Tensor[(336), float64] */
}

def @func_6977() -> (Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) {
  @func_6975() /* ty=(Tensor[(15, 10, 3), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_11985() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1699 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1696 = @func_10114() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1697 = @func_8436() /* ty=Tensor[(10, 12, 15), float32] */;
    %1698 = %1696.0;
    (%1697, %1698)
  };
  %1699() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_8395() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) {
  %1714 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) {
    %1700 = @func_3421() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1701 = @func_2195() /* ty=(Tensor[(10, 12, 15), float64], Tensor[(189, 1), uint8], uint8, Tensor[(189), uint8]) */;
    %1702 = cast(meta[relay.Constant][57] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1703 = cast(meta[relay.Constant][58] /* ty=Tensor[(189), uint8] */, dtype="uint8") /* ty=Tensor[(189), uint8] */;
    %1704 = %1700.1;
    %1705 = cast(%1704, dtype="float32") /* ty=Tensor[(10, 12, 15), float32] */;
    %1706 = cast(meta[relay.Constant][59] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %1707 = reshape(%1702, newshape=[]) /* ty=uint8 */;
    %1708 = reshape(%1703, newshape=[1, 189]) /* ty=Tensor[(1, 189), uint8] */;
    %1709 = reshape(%1705, newshape=[10, 12, 15]) /* ty=Tensor[(10, 12, 15), float32] */;
    %1710 = reshape(%1706, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %1711 = @func_3894(%1707, %1708, %1709, %1710) /* ty=(Tensor[(10, 12, 15), float32], uint8, Tensor[(10, 12, 15), float32], Tensor[(?, 189), bool], Tensor[(10, 12, 15), uint64], Tensor[(14, 8, 3), float64], Tensor[(336), float64], Tensor[(588), float32]) */;
    %1712 = %1701.0;
    %1713 = %1711.1;
    (%1704, %1712, %1713, meta[relay.Constant][57] /* ty=uint8 */, meta[relay.Constant][58] /* ty=Tensor[(189), uint8] */, meta[relay.Constant][59] /* ty=Tensor[(336), float64] */)
  };
  %1714() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float64], uint8, uint8, Tensor[(189), uint8], Tensor[(336), float64]) */
}

def @func_9287() -> (Tensor[(588), float32],) {
  @func_9285() /* ty=(Tensor[(588), float32],) */
}

def @func_10685() -> (Tensor[(15, 10, 3), float32], Tensor[(10, 12, 15), float32]) {
  @func_10683() /* ty=(Tensor[(15, 10, 3), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_16312() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  @func_16310() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_16067(%var_16065: Tensor[(15, 11, 13), float64]) -> (Tensor[(15, 11, 13), int64], Tensor[(15, 10, 3), float64]) {
  @func_16064(%var_16065) /* ty=(Tensor[(15, 11, 13), int64], Tensor[(15, 10, 3), float64]) */
}

def @func_17727() -> Tensor[(10, 12, 15), float32] {
  %1716 = fn () -> Tensor[(10, 12, 15), float32] {
    %1715 = @func_9990() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
    %1715.2
  };
  %1716() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_2951() -> (Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) {
  %1725 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) {
    %1717 = @func_2679() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(588), float32], Tensor[(10, 12, 15), float32], Tensor[(4, 2, 15), int64]) */;
    %1718 = cast(meta[relay.Constant][60] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %1719 = cast(meta[relay.Constant][61] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %1720 = reshape(%1718, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %1721 = reshape(%1719, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %1722 = @func_1612(%1720, %1721) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(378), float64], Tensor[(336), float64], Tensor[(7, 9, 3), uint8], uint8, Tensor[(21, 9), uint8], Tensor[(10, 12, 15), float32], Tensor[(9, 7, 6), float64], Tensor[(14, 8, 3), float64]) */;
    %1723 = %1717.0;
    %1724 = %1722.9;
    (%1723, %1724, meta[relay.Constant][60] /* ty=Tensor[(378), float64] */, meta[relay.Constant][61] /* ty=Tensor[(336), float64] */)
  };
  %1725() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(378), float64], Tensor[(336), float64]) */
}

def @func_18342(%var_18329: Tensor[(13, 13, 4), float32]) -> (Tensor[(13, 13, 4), float32], Tensor[(10, 12, 15), float32]) {
  %1726 = cast(%var_18329, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
  %1727 = @func_7793() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
  %1728 = rsqrt(%1726) /* ty=Tensor[(13, 13, 4), float32] */;
  %1729 = %1727.0;
  (%1728, %1729)
}

def @func_10151() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1730 = @func_3671() /* ty=(uint8, Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(336), float64], Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1731 = %1730.3;
  %1732 = @func_5662() /* ty=Tensor[(10, 12, 15), float32] */;
  (%1731, %1732)
}

def @func_5100(%var_5075: Tensor[(8, 7, 14), int64], %var_5076: Tensor[(8, 7, 14), int64]) -> (Tensor[(8, 7, 14), int64], Tensor[(10, 12, 15), float32]) {
  %1733 = cast(%var_5076, dtype="int64") /* ty=Tensor[(8, 7, 14), int64] */;
  %1734 = shape_of(%var_5075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1735 = cast(%var_5075, dtype="int64") /* ty=Tensor[(8, 7, 14), int64] */;
  %1736 = dyn.reshape(%1733, %1734, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1737 = @func_1412() /* ty=(Tensor[(10, 12, 15), uint64], Tensor[(10, 12, 15), float32]) */;
  %1738 = bitwise_or(%1735, %1736) /* ty=Tensor[(8, 7, 14), int64] */;
  %1739 = %1737.1;
  (%1738, %1739)
}

def @func_5947() -> Tensor[(10, 12, 15), float32] {
  %1740 = fn () -> Tensor[(10, 12, 15), float32] {
    @func_3295() /* ty=Tensor[(10, 12, 15), float32] */
  };
  %1740() /* ty=Tensor[(10, 12, 15), float32] */
}

def @func_19610() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1746 = fn () -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
    %1741 = @func_17214() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1742 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1743 = %1741.0;
    %1744 = %1742.0;
    %1745 = @func_17533() /* ty=Tensor[(10, 12, 15), float32] */;
    (%1743, %1744, %1745)
  };
  %1746() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */
}

def @func_10629() -> (Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) {
  %1747 = @func_10161() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1748 = @func_2290() /* ty=(Tensor[(10, 12, 15), float32],) */;
  %1749 = @func_6846() /* ty=Tensor[(10, 12, 15), float32] */;
  %1750 = %1747.0;
  %1751 = %1748.0;
  (%1749, %1750, %1751)
}

def @func_14423(%var_14421: Tensor[(5, 15, 9), float64], %var_14422: Tensor[(99), float32]) -> (Tensor[(5, 15, 9), float64], Tensor[(99), float32], Tensor[(99), float32]) {
  @func_14419(%var_14421, %var_14422) /* ty=(Tensor[(5, 15, 9), float64], Tensor[(99), float32], Tensor[(99), float32]) */
}

def @func_8062() -> (Tensor[(10, 12, 15), float32],) {
  %1754 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1752 = @func_6996() /* ty=(Tensor[(10, 12, 15), float32],) */;
    %1753 = %1752.0;
    (%1753,)
  };
  %1754() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_17326() -> uint8 {
  @func_10597() /* ty=uint8 */
}

def @func_9380(%var_9378: Tensor[(378, 1), float64], %var_9379: Tensor[(189), uint8]) -> (Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(378, 189), int64], Tensor[(10, 12, 15), float32]) {
  @func_9376(%var_9378, %var_9379) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(10, 12, 15), float32], Tensor[(378, 189), int64], Tensor[(10, 12, 15), float32]) */
}

def @func_12268() -> (Tensor[(10, 12, 15), float32],) {
  %1757 = fn () -> (Tensor[(10, 12, 15), float32],) {
    %1755 = @func_6578() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1756 = %1755.1;
    (%1756,)
  };
  %1757() /* ty=(Tensor[(10, 12, 15), float32],) */
}

def @func_11421(%var_11419: Tensor[(42, 9), float64], %var_11420: Tensor[(15, 9, 16), bool]) -> (Tensor[(336), float64], Tensor[(336), float64], Tensor[(1, 378), float64], Tensor[(42, 9), float64], Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) {
  %1773 = fn (%var_11392: Tensor[(42, 9), float64], %var_11397: Tensor[(15, 9, 16), bool]) -> (Tensor[(336), float64], Tensor[(336), float64], Tensor[(1, 378), float64], Tensor[(42, 9), float64], Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) {
    %1758 = @func_6596() /* ty=(Tensor[(336), float64], Tensor[(10, 12, 15), float32], Tensor[(15, 10, 3), float64]) */;
    %1759 = cast(%var_11392, dtype="float64") /* ty=Tensor[(42, 9), float64] */;
    %1760 = reshape(%1759, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
    %1761 = @func_8784(%1760) /* ty=(Tensor[(10, 12, 15), float32], Tensor[(378), float64], Tensor[(1, 378), float64], Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32], Tensor[(189), uint8]) */;
    %1762 = @func_11058() /* ty=Tensor[(15, 9, 16), bool] */;
    %1763 = cast(%var_11397, dtype="float64") /* ty=Tensor[(15, 9, 16), float64] */;
    %1764 = shape_of(%1762, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1765 = cast(%1762, dtype="float64") /* ty=Tensor[(15, 9, 16), float64] */;
    %1766 = dyn.reshape(%1763, %1764, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1767 = @func_4276() /* ty=(Tensor[(10, 12, 15), float32], Tensor[(10, 12, 15), float32]) */;
    %1768 = @func_3035() /* ty=Tensor[(336), float64] */;
    %1769 = %1758.0;
    %1770 = %1761.2;
    %1771 = power(%1765, %1766) /* ty=Tensor[(15, 9, 16), float64] */;
    %1772 = %1767.0;
    (%1768, %1769, %1770, %var_11392, %1771, %1772)
  };
  %1773(%var_11419, %var_11420) /* ty=(Tensor[(336), float64], Tensor[(336), float64], Tensor[(1, 378), float64], Tensor[(42, 9), float64], Tensor[(15, 9, 16), float64], Tensor[(10, 12, 15), float32]) */
}

def @func_16809() -> (Tensor[(336), float64], Tensor[(14, 8, 3), float64]) {
  %1779 = fn () -> (Tensor[(336), float64], Tensor[(14, 8, 3), float64]) {
    %1774 = @func_15916() /* ty=(Tensor[(336), float64],) */;
    %1775 = %1774.0;
    %1776 = cast(%1775, dtype="float64") /* ty=Tensor[(336), float64] */;
    %1777 = reshape(%1776, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
    %1778 = @func_333(%1777) /* ty=Tensor[(14, 8, 3), float64] */;
    (%1775, %1778)
  };
  %1779() /* ty=(Tensor[(336), float64], Tensor[(14, 8, 3), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen690/build/output.py:6924: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen690/build/output.py", line 6929, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(24) tvmgen_default_fused_rsqrt_kernel0(float* __restrict__ tensor, float* __restrict__ placeholder) {
  tensor[(((int)threadIdx.x))] = (1.000000e+00f / sqrtf(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


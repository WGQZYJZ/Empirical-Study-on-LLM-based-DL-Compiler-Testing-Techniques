import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_209 = relay.var("var_209", dtype = "int16", shape = (5, 13, 5))#candidate|209|(5, 13, 5)|var|int16
var_210 = relay.var("var_210", dtype = "int16", shape = (5, 13, 5))#candidate|210|(5, 13, 5)|var|int16
bop_211 = relay.maximum(var_209.astype('int16'), relay.reshape(var_210.astype('int16'), relay.shape_of(var_209))) # shape=(5, 13, 5)
bop_233 = relay.multiply(var_210.astype('int8'), relay.reshape(bop_211.astype('int8'), relay.shape_of(var_210))) # shape=(5, 13, 5)
uop_236 = relay.sin(bop_211.astype('float32')) # shape=(5, 13, 5)
uop_241 = relay.sqrt(uop_236.astype('float64')) # shape=(5, 13, 5)
output = relay.Tuple([bop_233,uop_241,])
output2 = relay.Tuple([bop_233,uop_241,])
func_250 = relay.Function([var_209,var_210,], output)
mod['func_250'] = func_250
mod = relay.transform.InferType()(mod)
mutated_mod['func_250'] = func_250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_250_call = mutated_mod.get_global_var('func_250')
var_252 = relay.var("var_252", dtype = "int16", shape = (5, 13, 5))#candidate|252|(5, 13, 5)|var|int16
var_253 = relay.var("var_253", dtype = "int16", shape = (5, 13, 5))#candidate|253|(5, 13, 5)|var|int16
call_251 = func_250_call(var_252,var_253,)
output = call_251
func_254 = relay.Function([var_252,var_253,], output)
mutated_mod['func_254'] = func_254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_312 = relay.var("var_312", dtype = "float32", shape = (1, 16, 7))#candidate|312|(1, 16, 7)|var|float32
var_313 = relay.var("var_313", dtype = "float32", shape = (4, 16, 7))#candidate|313|(4, 16, 7)|var|float32
bop_314 = relay.floor_divide(var_312.astype('float32'), var_313.astype('float32')) # shape=(4, 16, 7)
output = bop_314
output2 = bop_314
func_322 = relay.Function([var_312,var_313,], output)
mod['func_322'] = func_322
mod = relay.transform.InferType()(mod)
var_323 = relay.var("var_323", dtype = "float32", shape = (1, 16, 7))#candidate|323|(1, 16, 7)|var|float32
var_324 = relay.var("var_324", dtype = "float32", shape = (4, 16, 7))#candidate|324|(4, 16, 7)|var|float32
output = func_322(var_323,var_324,)
func_325 = relay.Function([var_323,var_324,], output)
mutated_mod['func_325'] = func_325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_399 = relay.var("var_399", dtype = "int8", shape = ())#candidate|399|()|var|int8
var_400 = relay.var("var_400", dtype = "int8", shape = (7, 8, 13))#candidate|400|(7, 8, 13)|var|int8
bop_401 = relay.multiply(var_399.astype('int8'), var_400.astype('int8')) # shape=(7, 8, 13)
func_322_call = mod.get_global_var('func_322')
func_325_call = mutated_mod.get_global_var('func_325')
var_405 = relay.var("var_405", dtype = "float32", shape = (112,))#candidate|405|(112,)|var|float32
var_406 = relay.var("var_406", dtype = "float32", shape = (448,))#candidate|406|(448,)|var|float32
call_404 = func_322_call(relay.reshape(var_405.astype('float32'), [1, 16, 7]), relay.reshape(var_406.astype('float32'), [4, 16, 7]), )
call_407 = func_322_call(relay.reshape(var_405.astype('float32'), [1, 16, 7]), relay.reshape(var_406.astype('float32'), [4, 16, 7]), )
output = relay.Tuple([bop_401,call_404,var_405,var_406,])
output2 = relay.Tuple([bop_401,call_407,var_405,var_406,])
func_412 = relay.Function([var_399,var_400,var_405,var_406,], output)
mod['func_412'] = func_412
mod = relay.transform.InferType()(mod)
var_413 = relay.var("var_413", dtype = "int8", shape = ())#candidate|413|()|var|int8
var_414 = relay.var("var_414", dtype = "int8", shape = (7, 8, 13))#candidate|414|(7, 8, 13)|var|int8
var_415 = relay.var("var_415", dtype = "float32", shape = (112,))#candidate|415|(112,)|var|float32
var_416 = relay.var("var_416", dtype = "float32", shape = (448,))#candidate|416|(448,)|var|float32
output = func_412(var_413,var_414,var_415,var_416,)
func_417 = relay.Function([var_413,var_414,var_415,var_416,], output)
mutated_mod['func_417'] = func_417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_998 = relay.var("var_998", dtype = "float32", shape = (16, 13, 10))#candidate|998|(16, 13, 10)|var|float32
uop_999 = relay.acos(var_998.astype('float32')) # shape=(16, 13, 10)
uop_1005 = relay.asin(uop_999.astype('float32')) # shape=(16, 13, 10)
bop_1009 = relay.bitwise_xor(uop_1005.astype('uint64'), relay.reshape(var_998.astype('uint64'), relay.shape_of(uop_1005))) # shape=(16, 13, 10)
output = bop_1009
output2 = bop_1009
func_1013 = relay.Function([var_998,], output)
mod['func_1013'] = func_1013
mod = relay.transform.InferType()(mod)
var_1014 = relay.var("var_1014", dtype = "float32", shape = (16, 13, 10))#candidate|1014|(16, 13, 10)|var|float32
output = func_1013(var_1014)
func_1015 = relay.Function([var_1014], output)
mutated_mod['func_1015'] = func_1015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1027 = relay.var("var_1027", dtype = "float64", shape = (2, 1, 13))#candidate|1027|(2, 1, 13)|var|float64
uop_1028 = relay.asinh(var_1027.astype('float64')) # shape=(2, 1, 13)
bop_1030 = relay.subtract(uop_1028.astype('float64'), relay.reshape(var_1027.astype('float64'), relay.shape_of(uop_1028))) # shape=(2, 1, 13)
func_250_call = mod.get_global_var('func_250')
func_254_call = mutated_mod.get_global_var('func_254')
const_1039 = relay.const([[4],[5],[-7],[1],[-4],[10],[4],[-7],[4],[-6],[9],[-2],[1],[4],[-5],[-2],[-8],[-6],[9],[-9],[-4],[7],[4],[3],[-9],[2],[10],[-7],[-7],[-2],[-5],[-1],[1],[-10],[-5],[-1],[5],[-8],[-5],[-10],[1],[-10],[-6],[-9],[10],[-5],[-6],[-10],[6],[-5],[-8],[-1],[-8],[5],[-2],[-6],[6],[2],[-5],[-7],[4],[9],[-2],[7],[8],[8],[-2],[-10],[-10],[4],[9],[4],[7],[7],[9],[-8],[10],[5],[6],[-8],[5],[2],[-7],[-10],[9],[-10],[3],[4],[-2],[-4],[7],[-5],[9],[8],[3],[-4],[4],[-8],[2],[1],[-1],[10],[4],[5],[-6],[-6],[1],[1],[5],[-9],[-7],[-9],[-1],[-3],[6],[-6],[4],[-10],[-1],[4],[-4],[-2],[4],[-6],[5],[7],[10],[-3],[4],[8],[2],[4],[10],[-6],[-9],[-8],[-3],[-7],[-6],[-7],[-10],[-2],[-2],[-3],[-3],[-4],[-5],[-4],[-4],[-5],[5],[3],[4],[6],[-5],[-10],[9],[7],[-7],[8],[3],[8],[2],[-2],[4],[-7],[-9],[-6],[4],[-4],[7],[4],[-7],[9],[-3],[-5],[-9],[-4],[-7],[-5],[-2],[-2],[5],[-7],[-2],[-8],[6],[-8],[6],[7],[4],[-6],[7],[6],[-6],[6],[5],[10],[-6],[1],[-7],[-10],[4],[6],[-5],[9],[-4],[-4],[7],[-4],[-1],[1],[-8],[8],[-10],[-5],[-9],[-2],[3],[10],[10],[9],[4],[-5],[-3],[4],[-9],[2],[9],[-5],[-10],[-8],[5],[1],[-9],[-8],[-10],[-2],[-10],[7],[-6],[-9],[-9],[-4],[2],[7],[-10],[-10],[-8],[-3],[-2],[5],[5],[10],[4],[1],[10],[7],[-1],[-8],[-10],[7],[-2],[3],[8],[7],[6],[-3],[1],[8],[-1],[-7],[9],[10],[5],[-4],[-5],[-3],[8],[6],[-3],[-7],[7],[1],[5],[3],[-10],[-9],[-4],[-10],[-1],[2],[-7],[-2],[2],[-2],[-5],[3],[3],[7],[-5],[6],[-1],[-4],[-7],[4],[9],[3],[-10],[1],[-5],[6],[-6],[-1],[2],[6],[10],[-3],[-10],[6],[9],[5],[-5],[-4],[-3]], dtype = "int16")#candidate|1039|(325, 1)|const|int16
call_1038 = relay.TupleGetItem(func_250_call(relay.reshape(const_1039.astype('int16'), [5, 13, 5]), relay.reshape(const_1039.astype('int16'), [5, 13, 5]), ), 0)
call_1040 = relay.TupleGetItem(func_254_call(relay.reshape(const_1039.astype('int16'), [5, 13, 5]), relay.reshape(const_1039.astype('int16'), [5, 13, 5]), ), 0)
output = relay.Tuple([bop_1030,call_1038,const_1039,])
output2 = relay.Tuple([bop_1030,call_1040,const_1039,])
func_1046 = relay.Function([var_1027,], output)
mod['func_1046'] = func_1046
mod = relay.transform.InferType()(mod)
var_1047 = relay.var("var_1047", dtype = "float64", shape = (2, 1, 13))#candidate|1047|(2, 1, 13)|var|float64
output = func_1046(var_1047)
func_1048 = relay.Function([var_1047], output)
mutated_mod['func_1048'] = func_1048
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1310 = relay.const([[[-1,1,-2,-5,1],[-7,8,-3,-4,-7],[2,-10,-2,5,3],[1,3,-1,9,3],[-4,6,-10,-8,-3],[-3,-1,-9,7,4]],[[10,-3,-9,9,10],[9,4,-8,4,1],[3,4,9,4,-5],[-6,-6,-1,1,5],[2,7,-1,10,-1],[3,-7,9,-8,1]],[[-3,-2,4,-4,-3],[-10,4,1,-2,-1],[6,-8,-10,-8,-2],[-6,6,4,1,-6],[-8,9,4,9,5],[-1,-3,1,-6,4]],[[7,-2,7,-4,-5],[-3,9,-7,2,-8],[-6,-7,8,4,6],[-3,-9,-8,1,5],[2,-9,9,-1,3],[-7,8,10,1,-1]],[[2,-2,7,7,9],[3,1,-2,1,-3],[-5,-3,-6,1,7],[-6,4,-9,-5,-10],[-2,8,7,4,-3],[2,9,1,10,-3]],[[-3,-5,-5,9,-3],[-6,2,-8,4,-6],[-1,7,4,5,9],[1,7,1,2,-3],[9,-10,5,-1,-4],[-10,-5,-4,4,-5]],[[9,6,-1,7,-7],[8,2,-8,-8,8],[3,-6,4,9,1],[-10,1,-4,5,8],[2,9,-4,2,3],[3,-9,-6,10,10]],[[3,-2,8,-7,-9],[-6,-10,8,-9,7],[2,9,8,-4,-3],[2,6,8,-1,-8],[1,5,8,-5,-4],[10,2,-7,5,9]],[[-8,3,4,-8,8],[7,-2,1,6,9],[-6,-5,-6,-9,6],[8,10,7,-5,-10],[3,-4,-10,4,-1],[-7,2,5,4,9]],[[-3,-3,-10,-6,-5],[10,4,4,-1,3],[3,-8,9,3,9],[-5,-10,-7,1,7],[-10,6,3,1,10],[3,-1,8,-6,7]],[[-4,-8,-3,9,8],[9,-3,3,5,-1],[9,8,-6,-2,-9],[6,1,10,-8,-7],[-4,-4,1,4,-5],[-3,-10,-4,9,-9]]], dtype = "int32")#candidate|1310|(11, 6, 5)|const|int32
var_1311 = relay.var("var_1311", dtype = "int32", shape = (11, 6, 5))#candidate|1311|(11, 6, 5)|var|int32
bop_1312 = relay.bitwise_and(const_1310.astype('int32'), relay.reshape(var_1311.astype('int32'), relay.shape_of(const_1310))) # shape=(11, 6, 5)
func_322_call = mod.get_global_var('func_322')
func_325_call = mutated_mod.get_global_var('func_325')
const_1327 = relay.const([-1.021784,-8.388146,-1.033546,1.908844,1.457325,-0.461121,-6.114015,-5.836048,-0.649252,-8.930559,-8.598983,-6.709374,0.518221,5.459402,-1.699494,2.783105,1.491338,-2.916938,5.015017,-5.892858,6.034930,9.903094,9.819680,8.736174,-5.783865,5.559842,1.506995,-8.217588,5.959726,-7.772630,-3.314566,-6.007971,3.841703,-9.866038,1.847596,5.227725,7.794420,-3.843131,5.469239,-9.606693,0.369879,-2.314665,-3.043558,-1.753484,0.117207,4.224439,-8.082895,4.844127,-7.618196,8.517897,-3.081167,6.509535,9.268513,-4.059314,7.915553,8.006226,-6.178659,9.388018,-8.158355,-6.471072,-7.744781,4.210501,-9.205538,-8.528069,-6.755839,-5.383834,0.996263,9.884996,0.045545,9.361732,-4.969250,-7.768725,-7.841944,3.043593,0.098410,-1.933664,3.365141,-3.059593,-2.072752,3.914892,-5.859933,2.531700,8.470632,3.642974,7.824484,3.487787,6.983200,-1.775007,0.657670,-0.330812,-5.087923,1.192321,-1.230561,0.302247,-5.600766,-2.237497,-3.669920,-1.398669,-6.569952,-0.808585,-5.845360,0.060451,1.827241,-5.010115,-1.291868,5.788804,0.895676,-2.229537,9.225840,4.639995,-5.096997,-4.982046], dtype = "float32")#candidate|1327|(112,)|const|float32
const_1328 = relay.const([-5.323171,1.679122,-1.648517,-5.870018,0.416832,3.280946,8.707829,-2.627923,4.428381,9.098034,-1.311251,-4.933073,-0.348475,2.149738,-5.623740,9.891554,-2.087046,0.783123,2.706914,3.479877,-5.874749,-2.238025,9.621585,4.899668,-8.710033,0.564962,6.748554,2.592752,2.615954,4.977280,2.726416,-4.129443,-1.420751,-6.784854,-1.824800,-7.421844,-9.980960,-2.108292,6.413167,-8.371752,-9.138518,-3.438416,-0.225721,7.959404,-5.091203,2.524411,4.564715,1.804465,4.594333,-8.810622,4.059092,3.347303,6.381693,-2.667396,4.908330,-0.396051,-8.833749,2.659657,2.129640,-5.512866,4.950070,1.340100,-3.080817,-2.938294,-6.153276,4.025512,5.043418,-7.060866,-1.435249,8.164932,9.687506,-6.875870,-4.905486,-4.975050,-1.595809,5.627537,-6.989744,5.294141,-1.722534,3.849268,-5.461912,-8.979440,6.395219,-9.362078,9.055474,4.397601,-7.878346,1.210454,8.589697,-1.990006,-4.041661,0.240195,-0.896818,9.824061,1.256853,4.459200,8.198343,3.377648,-1.729096,0.820775,-7.360138,1.322521,-5.684703,3.173829,-7.617836,2.126796,-5.884259,-0.382095,6.783995,1.956174,-0.999391,-2.787447,-3.482002,-9.498651,-2.262393,8.861965,-9.878044,1.915984,8.996250,-7.414426,-4.804826,-4.871256,-4.494930,0.100831,3.167625,-1.637096,1.393000,9.093371,1.693840,4.887743,4.137517,-3.993529,1.646567,-6.819823,-6.719426,-2.705345,4.559590,4.499601,6.277680,6.140594,9.655287,-1.031988,2.853371,6.016012,6.775892,-5.883475,2.938368,-7.854659,-0.414774,3.547079,9.534070,3.850509,-7.704709,7.919869,9.717315,-8.181771,-6.082317,5.376674,8.484960,-6.306322,9.876563,9.973105,8.759998,1.333016,6.800277,7.805679,4.291664,7.942004,1.653263,5.121584,5.583498,-3.265218,1.131939,2.729451,-4.219684,2.984384,-3.789837,-5.420848,4.082810,6.423178,-1.128113,9.140586,2.522591,7.854625,4.002356,0.552352,4.597264,6.319069,-2.113086,6.542796,-0.771523,-7.675422,5.737995,4.641053,4.100500,9.384390,8.355571,1.768500,7.197625,9.937422,3.360062,-6.988859,-6.597142,4.508687,-6.529236,8.694482,-9.166064,-8.488128,-3.267489,-1.574860,-3.849405,0.267362,-5.750255,8.274115,-2.859576,0.811365,5.698641,-5.812841,5.605965,-6.534158,-1.475700,-4.853977,-8.930916,-2.677157,-7.273142,-7.652077,3.146061,-2.901931,-0.897300,3.487925,9.198460,-0.654516,-0.180306,-4.717711,5.853732,-8.008044,6.737144,-4.126506,6.187717,-2.523688,2.513581,-7.152415,3.140529,-8.301049,-0.517014,-0.040657,-4.629380,8.291795,1.217624,-6.158383,-8.944146,-5.438696,-8.494264,6.965858,3.860796,4.242066,-7.849633,6.723380,7.990198,1.760543,-8.099075,8.128625,6.539344,1.841234,-5.321684,9.389355,-4.149679,-6.642864,-0.450671,-5.903767,-8.404212,-0.073505,-5.417604,-6.257696,3.855126,9.185903,2.531574,4.405415,8.502372,3.944341,-8.550068,8.298169,-6.542760,8.134502,8.001952,-0.047424,-6.768215,6.391634,3.669275,-2.602435,5.262511,-9.297484,-6.277058,5.243815,-7.272913,3.364994,3.967478,-8.267914,3.441209,-7.031127,1.041901,-4.712494,5.931614,-0.753708,0.734930,-8.859302,9.274670,6.450716,-3.840435,9.829138,5.503885,8.456586,8.362679,-1.003378,-4.880447,-1.364824,5.390668,7.937707,-6.485660,7.590889,-4.031354,-1.192979,-8.119194,9.276389,3.647064,-3.027101,1.466572,0.122556,3.737093,2.417803,6.001251,2.813569,-6.120363,2.735840,3.740378,-8.919696,-2.961447,4.640150,-0.568881,7.814825,3.447613,-1.077885,-6.863838,-5.874680,4.843541,5.737784,8.510054,-0.144576,7.945563,-7.434748,-7.600987,-9.364504,6.041748,-4.603496,-0.813176,2.502422,1.305907,-7.894852,-6.269305,1.643085,9.312913,-5.741164,5.869243,-3.634238,-6.372489,5.594117,-6.223662,-2.770780,7.434101,1.215597,-0.461306,-9.912676,4.402230,3.440337,5.117545,4.883205,7.169266,5.583488,-5.528608,0.270409,-3.535789,-8.913453,-0.384072,-9.300252,3.896233,7.340772,1.821713,3.416857,9.144869,-7.410310,9.693881,2.278659,9.043917,0.659138,-9.841191,-7.432706,-1.111848,8.266927,0.091410,-8.774828,-6.534085,4.169709,0.979655,-6.772411,8.575761,5.408862,-7.986510,-0.594572,3.656348,-5.754923,-8.048678,-0.792874,4.876375,-8.420288,-4.942422,2.761380,-8.547146,-0.561303,2.767906,-9.987201,9.287430,1.378756,-9.424107,5.259843,9.301924,-2.443191,-5.146300,-0.024508,-1.792346,3.913501,-3.221579,5.771741,1.765123,-0.171991,-6.558510,8.488390,6.762945,-3.173799,-1.351693,6.982343,6.642696,-8.291459,3.126885,2.141129,2.294716,-6.204314,8.834483,-7.405384], dtype = "float32")#candidate|1328|(448,)|const|float32
call_1326 = func_322_call(relay.reshape(const_1327.astype('float32'), [1, 16, 7]), relay.reshape(const_1328.astype('float32'), [4, 16, 7]), )
call_1329 = func_322_call(relay.reshape(const_1327.astype('float32'), [1, 16, 7]), relay.reshape(const_1328.astype('float32'), [4, 16, 7]), )
const_1334 = relay.const([[[-6,3,4,3,1],[7,10,-5,9,-4],[5,-10,6,7,5],[9,6,1,-9,5],[8,3,1,8,6],[-1,-1,10,-2,9]],[[-2,-9,10,8,6],[1,-7,-1,4,10],[-5,-1,-1,4,-9],[-1,9,7,9,1],[3,9,-8,-10,-10],[-2,-1,-1,-5,6]],[[-8,-5,6,-8,-9],[8,1,-2,8,3],[2,4,10,6,2],[9,8,9,-6,-6],[-4,-7,-4,5,-2],[-3,-4,8,4,-9]],[[-7,-8,-4,8,2],[7,10,2,-4,7],[7,-2,7,-5,5],[9,6,-6,2,10],[-8,1,-2,4,-4],[-2,3,2,-6,-4]],[[2,-3,-1,-1,-3],[-9,10,10,7,-8],[9,9,-3,-3,-7],[10,-10,-10,-3,4],[-1,-8,-4,-3,-4],[-9,-10,-4,-9,-2]],[[4,6,6,-5,-6],[-7,-3,-10,-5,10],[-3,-4,-9,-3,-7],[-5,-10,5,10,7],[10,-4,10,9,-6],[-7,-8,-1,-9,-5]],[[1,7,4,9,3],[-9,1,3,-7,9],[3,-4,8,8,-2],[-4,-7,-4,5,3],[9,-1,5,-2,-10],[10,8,4,9,-3]],[[-9,4,2,-4,-3],[-6,-1,5,-5,-8],[9,-6,-2,-4,4],[-4,6,8,-7,-4],[-1,7,9,8,10],[-7,-6,9,-5,2]],[[10,-4,-5,-4,-5],[7,1,8,5,-2],[-3,-7,3,-8,-8],[-10,6,5,-4,-6],[-7,7,-4,-6,2],[-7,8,-6,1,-1]],[[-6,-7,5,-6,9],[10,-4,4,3,-10],[-1,-1,-2,-1,-5],[-1,-5,5,-8,-1],[-4,5,-7,5,-2],[-6,-1,-1,6,-5]],[[-8,1,-5,-3,7],[2,-4,-9,-7,-2],[9,-1,5,-5,-7],[1,7,9,8,6],[8,9,6,-5,-2],[3,5,4,-7,-8]]], dtype = "int32")#candidate|1334|(11, 6, 5)|const|int32
bop_1335 = relay.less(bop_1312.astype('bool'), relay.reshape(const_1334.astype('bool'), relay.shape_of(bop_1312))) # shape=(11, 6, 5)
uop_1343 = relay.exp(const_1310.astype('float32')) # shape=(11, 6, 5)
func_1013_call = mod.get_global_var('func_1013')
func_1015_call = mutated_mod.get_global_var('func_1015')
const_1363 = relay.const([-1.031616,7.420189,-4.600830,-8.174120,-7.228725,7.598579,0.383629,-1.278863,3.246373,-2.554226,-6.246374,0.064941,-2.413034,4.622153,9.470984,8.580692,-3.657157,0.259028,9.413423,-1.213077,4.434529,1.405766,-0.729915,-0.896057,-6.005171,-1.931541,4.638087,-6.293919,9.781846,8.143279,-3.955962,0.703472,-8.204232,-9.418036,-7.074307,8.739960,-3.275992,-2.584330,-7.596470,4.940732,-0.168745,-3.254280,2.313809,0.541344,-1.029707,-0.838485,6.596939,9.192156,-7.259867,1.453185,7.047143,-2.981084,9.623956,-4.406399,-3.590512,-3.285184,3.979665,-6.980625,4.077551,-7.636247,0.969585,2.252715,-0.081038,-6.252619,-9.013603,7.808811,-5.424401,0.720408,7.724959,1.904080,5.290739,-4.629574,-4.516762,-7.119131,-4.513710,3.035767,7.741097,-6.033095,-7.850234,-7.216453,-8.924925,-2.614036,8.312544,-1.956065,3.709216,-6.469235,3.193355,1.381611,-6.251759,1.196132,-8.046242,-7.118001,1.398010,2.936075,8.580666,-4.036400,-8.574907,-7.196611,1.178856,-7.967664,-1.315365,7.524849,9.382011,-0.895096,-8.781059,-1.020122,-7.305808,-8.789921,3.191169,0.821202,3.706269,-7.801716,-6.918143,-4.044345,4.603399,-6.951000,3.426696,1.371442,2.479284,-5.138031,5.944080,-8.419902,1.835443,-1.236886,1.513256,0.471099,8.461070,-5.295685,-8.734529,4.899991,9.152115,-3.685973,-9.681694,4.230730,5.353008,6.859600,-6.218286,-9.355271,4.606482,-4.368844,6.876877,2.766948,5.321427,-5.894061,-9.818899,8.976970,-3.526039,2.849520,1.785838,-6.587573,-9.593944,4.198641,1.107732,6.008488,-3.657560,4.425668,4.346773,4.348964,-3.748885,8.124156,9.016791,-3.388918,-0.100492,-5.656185,-4.572583,-8.939415,9.863886,7.898007,0.892825,8.393750,-1.424646,0.097885,5.136276,-6.564472,9.297140,6.745662,-0.051867,-4.208259,7.841365,-0.703221,6.905339,-7.003126,5.868425,4.061735,-2.419635,-4.895839,-0.694113,3.943977,-4.405286,9.662645,7.085935,9.426720,5.948049,-0.094662,-6.839025,-1.444903,0.400182,-2.025507,6.466913,9.788653,-8.322933,-4.061698,-7.183936,3.444652,-7.336931,-2.459650,4.116746,6.121576,0.989120,6.991333,4.473484,4.618771,-9.747826,6.169785,8.736096,-2.374118,-8.930344,-3.958047,-6.369165,-4.073755,2.151904,-9.122302,-6.302702,0.367594,1.818192,7.222593,-7.735927,0.614818,6.554139,-3.377032,8.530835,-9.483305,-2.771780,-4.648373,-9.290187,5.904432,4.801865,-0.784724,5.319632,1.016403,-6.744645,3.600340,8.251248,-2.386631,1.116194,-8.367715,4.952121,6.987366,5.788514,-2.101804,-0.843718,5.089520,2.309144,9.448903,0.128796,0.295075,2.489811,7.504310,0.378691,2.024343,-7.934012,0.567581,1.243055,2.827727,1.136612,-3.592421,4.552952,1.219071,-3.577724,-9.346364,-8.858950,4.746668,-1.948604,-1.075042,-6.107971,9.357955,1.582296,-4.174411,4.109113,-0.258242,4.919419,-8.784872,-7.567967,3.653703,-7.369415,8.376993,2.023559,-7.326006,3.605097,9.216997,3.021639,-7.978625,-2.221222,0.709351,4.001413,-8.538044,-9.730525,8.586999,-7.710437,5.693679,-8.476542,2.345964,-9.926296,-8.237287,1.878593,1.657131,-1.893080,6.664273,6.281336,-1.028454,-0.177986,5.504194,2.999815,-8.369990,-7.895564,-7.068475,-6.890256,-3.613511,5.505732,-0.470725,1.431186,7.983486,4.265772,-3.557870,5.608916,4.341314,3.343490,2.793573,-3.929521,-2.556841,5.944507,5.784755,2.907880,-4.647925,-2.311327,3.573866,5.029075,7.656898,0.108079,6.761764,-5.733364,9.309273,9.182782,-8.212178,-6.137359,-9.856847,0.158868,5.367125,-5.282682,-1.354510,-5.371554,-5.144994,-3.873992,-2.268718,0.654855,7.389879,1.679385,0.035687,3.647584,-4.076795,-5.236667,2.664489,-8.930701,-4.344530,3.897087,-3.453982,-7.881925,3.594658,-4.564235,0.499556,1.018083,-5.357163,0.508110,0.138971,7.489835,-8.489178,6.625537,-3.765892,-9.012082,-6.543748,3.123541,2.561402,9.614066,-3.754990,-6.770521,4.003533,-3.007727,-7.511648,4.104489,-6.669370,6.596680,-9.815600,5.269723,3.677804,-2.593809,5.201256,-6.841619,1.459286,4.349853,4.982982,0.070301,7.881963,-5.372193,2.595879,9.967438,4.097344,-6.025965,3.682192,-4.799248,5.195975,-7.194038,-4.321979,5.972584,-6.518662,7.612365,6.779949,-5.443894,3.207062,-9.283234,-1.816924,-7.213276,6.923120,-7.581529,-9.110888,4.165099,0.093788,-6.010343,-7.391862,2.757196,-1.594846,-4.103264,-8.354141,-4.187283,-3.380577,-6.645159,4.604827,-1.938606,-2.036633,3.087907,1.343891,-1.777665,0.790947,-4.172858,6.834754,-6.671068,-6.020897,1.018776,-4.666460,-2.250044,-5.606273,7.294137,-0.611159,-7.076344,-5.355120,6.501628,-0.613963,-1.900982,7.981296,7.735090,6.639068,-6.237816,7.536851,-9.390279,-7.521900,-7.962359,4.502990,-9.050789,1.914646,-4.410624,-4.496150,3.158651,-5.792195,-3.816714,-3.255062,-7.850740,-9.988404,6.854271,-8.174623,4.256963,8.087756,0.093566,8.915569,-2.431214,3.116874,4.197094,-5.012495,-0.630268,-9.614900,-1.067425,2.040171,-7.046837,-1.762631,1.928259,1.045289,8.259111,-4.031400,-0.188463,-1.808714,-1.238464,4.648385,2.290238,-2.816162,-7.556407,2.757415,4.884528,1.711870,-4.821488,6.303189,-3.894724,-6.200631,6.415431,6.388006,-4.013026,-4.826439,9.764152,-9.764666,-7.747922,-8.499870,-9.866168,4.103428,-6.610954,9.703508,-7.381145,-1.954656,-5.104250,-5.468976,9.600499,7.493149,0.279568,-9.526913,5.670023,-6.796207,6.244666,3.064817,-8.116542,0.423889,9.292173,4.123241,-5.028443,7.981688,-4.298150,-2.096715,8.347535,7.469096,-5.792312,9.599549,0.470412,8.275011,-2.216067,-3.500010,1.242381,-2.256096,-6.250078,7.260943,4.842020,3.595485,-2.134668,-6.833420,5.238785,9.656850,0.971225,-9.762618,-8.078181,-5.172417,-8.799807,6.417081,-7.807848,-1.597430,6.374736,9.922667,-0.970706,-2.009780,8.950096,-2.657433,-5.125341,-9.999016,-9.055746,-5.876672,-4.408614,-3.832996,8.620872,-6.014810,4.541048,9.266171,-8.443654,9.425989,6.677527,-0.565206,-4.113008,-4.322659,-8.311725,6.719683,5.160462,9.420613,-8.641904,-7.728463,3.315291,9.307972,5.363341,6.092663,-0.439080,9.110364,-8.148004,-7.475747,-3.496855,2.910815,6.263609,-7.061675,5.591286,-7.920977,7.158535,2.271013,6.955674,0.702596,5.488220,6.150954,7.513736,-5.337627,-0.291541,4.499556,1.114654,1.951333,0.887458,8.749842,4.111160,-4.707159,-0.535643,0.565422,-3.763183,-8.662067,5.826490,7.961389,-7.123466,-6.848003,-5.939117,-0.155625,-9.438879,-1.920262,6.909773,-5.817934,1.103511,7.981004,3.938053,-1.050454,5.361768,4.139643,-6.943834,6.633969,-8.848737,5.109685,7.321661,-0.575282,7.422847,5.806576,-1.811282,0.003948,-2.085294,9.814066,1.591492,-3.138469,8.810043,0.273582,-5.853754,-0.164664,-6.010220,-8.812116,2.384610,6.601942,2.962599,5.418366,5.908403,-9.387439,4.585922,0.630524,0.173861,8.656197,3.837898,-8.394127,-5.256648,0.954405,-3.701816,-5.762039,-0.018038,-9.838013,8.808762,-1.714925,-9.425582,-3.013489,-8.581458,-8.079325,3.821611,-9.205737,-3.816681,0.582582,-0.079329,0.170462,-8.274188,-6.122232,5.230781,-9.147976,9.906294,9.701400,1.439835,1.225015,1.726051,4.634108,-5.958815,-1.003629,-4.529196,1.847641,-3.627695,5.305696,-8.460500,3.898325,-2.771623,-6.449036,-1.909942,9.169836,-0.189594,-3.717630,-7.423728,-8.030657,1.804304,2.394053,-7.600659,-6.393965,6.893747,0.938211,-3.732692,-4.204699,4.794351,-8.735038,-2.252567,3.297499,-9.492469,0.697726,-5.671737,3.890970,-0.325099,5.580262,1.074071,3.088335,-2.571704,0.765879,3.546678,0.213045,-7.889852,9.775354,-0.725405,0.341139,-5.146793,2.580063,7.265526,-2.106211,-3.578875,-7.053610,-5.595134,-8.031028,1.711152,7.640102,3.562027,0.766910,-1.898861,0.994032,9.421728,1.733542,9.784723,-8.656105,-5.872208,-3.306741,4.615539,-3.896001,-6.788752,-7.511596,-8.071483,-7.040812,-4.074380,-4.770594,-1.739071,8.291423,-4.023418,0.710646,-8.419439,-1.317736,6.621034,6.750981,-2.127452,-9.199850,-4.034762,-3.263826,-4.996358,2.118450,-3.937332,3.897503,5.676353,-0.496685,7.033413,0.179208,-4.764511,-0.378341,-6.987830,-5.220568,-7.715145,4.906047,4.592539,6.597672,-7.948432,-7.592219,-3.050190,-1.198838,8.469131,-9.948342,-4.278739,-4.833256,9.304259,-2.052982,-5.944843,-0.813404,3.341226,5.665413,2.865635,-7.631736,4.717262,-1.282634,-3.618516,1.571828,-7.727677,7.659098,7.115553,5.981231,-0.302341,-4.893327,-2.518936,8.341486,-9.767978,-8.508627,-5.819295,-4.217391,8.917376,1.688698,5.939443,5.144557,-1.738582,-6.706321,-9.160140,7.669995,-4.675845,7.866239,-2.851619,-3.301576,-5.476342,4.527008,-8.504931,-7.472147,-1.394925,3.105484,8.508464,0.936694,0.404038,7.210139,9.205252,3.521036,9.636482,-8.860401,4.569028,-1.268895,9.391683,-0.123700,2.284992,-3.295676,4.220104,2.262369,-8.708740,-4.945487,2.057431,-1.767584,-3.762727,-1.182436,-7.537098,-7.363373,4.224522,6.164008,-3.163881,-0.139349,7.551037,3.114924,1.638218,9.908794,-5.822308,8.886421,5.589063,-8.837186,2.223085,4.695840,-5.879615,-3.657435,2.418103,-0.381090,5.936159,0.566349,7.054446,0.175025,-1.586017,7.488927,6.592355,-8.037202,-1.349615,-5.708128,1.801581,3.404275,4.077917,1.742015,-4.393915,-9.644331,4.792249,-4.007161,5.095750,2.720692,-1.455344,-7.376878,6.689636,-7.392163,6.232342,-5.303584,4.906484,-8.570004,6.538504,6.852276,-3.611739,2.604451,0.835748,-2.797989,-9.658259,-4.964158,-4.648593,-5.025658,5.904599,3.906170,2.720783,8.351537,-3.761798,-8.645506,-7.005449,1.643067,4.381206,-6.468031,-2.604665,3.735550,-9.257937,5.794662,-0.170075,-2.549780,-0.194833,5.336176,5.019668,-9.621801,-8.990970,7.496625,-8.558119,6.390183,-8.366965,1.509218,5.740666,2.020215,-2.729265,-3.527055,-9.119230,1.811318,1.877627,-9.349916,0.451271,-2.306589,9.512621,-5.262960,-7.643277,-7.473058,5.164744,8.099771,-3.229447,-8.104957,8.715979,-5.776447,-9.886645,-7.755286,-8.846634,-2.208108,-6.029629,9.990390,3.149342,3.170377,-5.240973,-9.344979,3.987645,-0.490165,-5.526798,2.303502,4.911777,4.178933,9.208518,6.130048,-9.114430,7.842235,-9.345937,5.413342,9.995656,7.365558,-2.790506,7.094589,7.226360,0.065596,2.416142,1.164816,-2.396544,-7.734188,5.384060,1.257213,5.170820,-2.190568,-6.537740,8.629647,-1.233286,7.523277,-9.928751,9.119176,-8.316253,5.178490,1.504954,-5.309456,7.983660,8.759440,2.358121,8.160339,3.568938,-3.248316,6.238820,1.459905,7.609980,-2.029184,-1.948829,5.320464,-9.087593,-3.306306,-7.529238,-1.883651,6.938371,-2.877909,-3.350974,0.285055,0.001920,3.104612,-8.664117,-7.762055,4.014220,7.701409,-8.589791,-1.989674,-7.074029,-5.765765,-3.244138,-5.705105,-9.535147,-0.556620,-9.016752,4.555034,0.172063,-0.315601,6.277499,0.673794,6.912996,-1.704563,-2.384151,2.868992,3.137192,4.503824,-6.367589,3.502085,-4.168754,7.112257,-1.401314,-3.926899,-4.071059,9.843323,6.543968,-5.033851,1.728190,2.431923,-3.107645,-1.222389,-2.195440,9.166954,-2.378067,-7.029534,-7.393057,9.443681,-0.652392,-9.869651,0.774133,-5.572292,8.421446,2.698086,-4.609875,-6.403541,1.666822,-7.341794,-6.136246,-9.466005,2.166251,9.710401,1.688100,-3.454862,-2.591640,-2.580231,-3.317600,-9.499411,2.497449,-0.977688,-8.864116,-5.639881,-6.617529,-9.953154,-2.398680,0.688532,2.734927,8.096740,9.971822,-5.575169,1.358536,7.273402,6.925334,4.014072,-2.807733,-6.509692,-3.130182,-2.527166,-8.117561,9.582058,-4.157740,-5.970157,5.538823,-4.844912,4.171504,-4.951585,1.546262,-6.161501,8.839844,7.657578,6.501568,6.440877,0.228698,-8.177061,-8.484189,-8.821694,-7.018468,-5.696149,5.108606,3.956159,7.383305,7.387835,6.361245,6.813354,9.803929,-9.041758,4.116205,-8.054098,-2.006107,-2.359437,-3.433661,5.898043,1.669232,-7.598746,-0.276492,0.838711,9.728618,-9.110279,-7.943171,1.521856,-3.387626,-6.962924,5.695357,-6.117938,-0.553088,-5.355986,-0.377114,6.034385,4.864323,-7.089708,8.407844,2.906995,-9.197882,-4.074707,-0.851153,-7.597337,5.952579,-5.705859,5.818094,-2.230315,1.763718,-5.297642,-3.319651,3.172264,6.577223,9.142288,9.371684,3.303511,-4.305488,-7.856377,9.449647,-7.286909,8.123443,-9.542336,4.081547,-0.746164,2.875315,-8.137471,1.534837,-4.985526,1.096732,1.800788,-9.339664,-8.123524,-6.919163,9.042435,3.620575,0.093820,-7.975991,7.192604,-1.351710,-4.025768,-5.485461,-9.936394,-9.473887,-5.142553,-8.041914,-9.391569,-1.537856,-2.218049,5.367827,7.204865,5.636182,-8.896794,-5.018021,4.748395,5.304676,-5.003488,5.656802,1.783740,7.718076,6.453890,-4.866068,4.998425,1.995242,8.773826,0.154294,0.183105,1.458130,7.852312,-0.389685,1.325769,-3.920072,6.086112,-3.825735,-7.989090,9.024719,0.509905,3.237846,-0.621294,-6.212206,-4.822145,-8.488153,-6.229399,6.941131,7.826869,4.372683,3.959054,4.015307,4.777168,-1.373110,7.022147,7.072155,1.320753,7.938412,5.313389,3.646891,-5.223171,-9.941746,-3.661945,-3.229122,2.155544,-1.272871,0.940553,5.450351,8.883698,-1.399602,8.979073,1.505587,9.208511,9.950919,7.219759,-9.600204,-2.141068,-5.641433,-2.741901,1.704976,-7.567104,-9.943813,5.913350,-9.574505,5.830840,6.095774,6.861494,4.085927,-7.571455,2.031569,-7.298590,8.768356,-0.247413,7.456034,-2.671926,-0.468328,-8.132506,-8.001083,7.723919,-6.873860,-9.942267,8.483053,-3.072932,-7.931495,4.167761,-8.906523,8.359140,4.837399,-4.278015,-9.727209,6.446354,7.057663,4.679289,9.312850,3.542555,-2.478613,9.324310,7.974319,-0.040989,-2.732892,4.832224,7.974367,-0.541136,3.498275,8.400689,5.241129,-1.533910,-9.001292,9.437018,-7.666309,6.611234,-8.327163,6.466812,9.829418,8.483772,9.425823,-0.675801,0.496162,5.886431,9.382014,-3.800283,5.686430,-6.443809,-5.138743,3.821860,-2.380111,7.450938,-1.754808,-4.370808,9.266442,9.963294,-1.164743,4.168958,5.540330,-8.622184,-5.653227,4.502848,-5.637096,3.724826,7.118463,1.037928,-1.372179,-1.131336,2.466973,-1.085571,-9.426408,-1.610243,8.581366,-5.976531,-7.143082,-7.716820,5.280812,5.267834,6.934305,4.655210,2.976653,-3.437989,7.046936,-1.044791,2.818890,5.156933,2.613285,-3.111409,-4.031665,2.724547,-1.302695,3.675105,2.722624,4.240763,4.227257,-5.010077,1.266484,-6.888894,7.064456,-8.274782,6.123549,7.133984,6.322944,-9.569720,-9.106583,-8.184908,5.432016,8.596776,-9.331495,1.766968,0.612730,8.190344,-2.155523,6.698443,-7.892874,-7.836348,-0.242275,-4.162198,4.128603,2.776085,-0.276096,-6.552570,2.517047,5.476100,-1.010766,6.420835,-9.191487,3.488321,4.042685,-0.109312,-6.043170,5.907918,-2.213886,-8.366722,-1.689621,-2.443991,2.847914,-0.480021,-4.517186,6.656799,-0.302790,-6.697211,4.792311,4.181060,-5.143125,-8.741423,-4.612960,5.406815,-2.134399,9.982106,5.623350,6.860358,-1.570189,9.975514,3.515160,-0.579542,-9.966421,-6.814344,-8.992432,-6.971180,-9.541939,9.435490,-3.464516,7.313669,-7.365946,-3.841242,-1.995988,-4.312285,5.352369,9.163555,-7.642510,2.285149,-7.948423,-9.750603,7.286894,-6.478278,-6.700991,6.558510,-6.542113,2.260419,2.928203,6.964425,3.578580,-2.039887,6.341738,-5.408026,4.408790,-2.785420,5.508109,-7.368565,5.368257,-0.846495,-4.705792,2.570432,1.258141,2.585062,-1.389781,-5.632561,1.121813,-2.311126,2.163756,-5.553882,-1.411066,-2.301594,-2.522850,1.596158,7.387650,0.030785,0.502829,4.483331,8.602540,9.165373,8.629620,3.472576,-8.666195,0.163531,-1.973621,2.208377,7.563378,8.669438,-9.189456,7.779104,-8.217600,-9.312082,2.795709,-5.334697,-1.454980,-7.737659,-1.608443,-2.309944,-6.059230,-2.634998,-7.729063,7.926765,2.524058,5.109445,0.657690,-2.798350,8.823950,7.506603,-4.275857,0.437606,4.029264,-5.848346,3.422480,5.228966,-3.124332,5.467035,5.588562,-7.176405,0.047201,-0.059234,0.479676,-0.185347,4.051643,6.501689,-9.464560,9.541656,2.635858,1.683872,-5.310727,-9.406547,-6.605673,3.150770,-6.712909,-2.774599,9.762132,3.317722,4.197009,2.216686,3.642552,-3.572468,4.753081,-5.611999,1.230729,-8.957758,-3.630474,7.716874,-5.562507,-7.752178,-0.402510,-4.974337,5.225255,-0.264782,6.289932,-7.696698,7.352279,-0.717860,-6.178227,9.754135,-0.109234,1.375814,-7.408630,9.154499,-9.413353,7.257715,0.551880,-4.529369,0.378818,5.951306,8.766788,-5.791948,8.742958,8.287512,7.709668,0.065324,-8.246843,-7.684623,0.175609,4.751165,2.024537,6.585251,-3.894458,5.197743,-2.428345,9.736384,-4.424567,-3.667761,-6.479360,1.799076,-0.866034,-0.906734,-3.993810,7.618471,-7.387261,2.554684,-8.403535,-0.104709,-9.768901,-8.131644,2.737236,-4.469861,3.701363,1.069208,4.947078,1.798808,5.292771,-2.192661,-7.771293,-1.301289,0.649358,-0.634846,-1.705827,-7.987921,5.334637,5.346780,-0.867742,-2.716074,9.806977,-2.874234,2.706234,-6.604435,1.308759,-9.789306,2.837982,-5.961723,-2.001624,-7.268453,-4.505973,0.438265,2.444294,-7.892703,4.513208,-7.211890,-3.582316,9.997422,-9.280881,-1.724285,-8.567791,-5.701651,0.086611,-2.779877,0.665688,-0.169476,-8.015778,7.621126,8.745395,2.777172,9.573374,6.444840,-2.092537,0.020864,-2.429335,-0.105602,-5.779402,-1.516380,-4.789376,4.967658,3.759866,1.168697,0.182622,-0.606732,-6.933545,3.472032,1.891224,4.067394,8.233745,-4.895602,-9.254294,9.668592,5.583504,1.407904,-4.804308,-0.003698,-8.559120,1.900097,-4.235297,-3.607335,-6.175701,-7.224097,-5.787945,6.651776,-0.784797,-6.230178,5.307593,3.673070,8.970773,-1.319807,8.563341,-9.970578,-2.920423,-6.574251,6.145702,9.419050,-1.833080,4.525228,0.259701,4.798042,-2.736645,-6.997698,5.166950,5.281357,-9.945111,-3.039655,-4.280547,-7.398980,5.428693,6.820962,0.278651,-5.969363,2.545515,1.673721,-0.050063,-6.402247,-9.954628,-8.379076,9.566814,-0.707223,4.607509,6.965778,4.508574,-6.742180,-1.170785,7.184274,-0.054584,-1.967997,1.536873,-9.107352,-8.469655,9.665604,-4.873442,-7.091983,4.419426,0.958692,7.255177,-4.020298,-9.475355,9.798848,-0.243720,2.130129,-7.116674,-4.407909,3.441038,-2.953478,-4.628506,-1.300751,5.145217,-4.240836,2.056169,-0.731084,-0.032329,-3.836798,3.474475,-7.533138,-6.985337,2.841632,7.358836,8.763041,-4.783749,-1.671722,3.547202,5.774664,0.235147,6.379909,-6.259080,0.273312,-4.872013,9.661089,-6.856189,0.886920,9.071475,7.135623,7.347095,4.124457,-2.776819,-3.653639,-7.435501,5.570055,9.894349,8.646870,-9.406808,-0.353805,-4.421808,-8.888671,9.829843,8.783474,-0.587673,5.995658,4.532267,-7.614526,-7.948203,5.056537,-0.694313,-1.178208,6.911378,2.582497,9.019746,-5.733203,-9.089374,-6.974410,1.683634,-0.184549,-2.626004,6.900453,9.952786,-3.601554,-9.952838,-8.585082,-7.065936,-9.343433,-7.595417,2.488844,6.303827,4.828623,-6.832867,-4.979556,-4.091513,-4.465085,-2.518242,-7.058477,2.091218,-0.096776,6.609731,-4.892994,8.452678,5.608005,7.449925,8.006394,2.027118,-9.410166,-8.911276,9.378641,3.356351,-5.179650,9.199568,8.321744,0.677619,-7.208736,8.861904,-6.501253,2.035098,-1.109746,-2.617484,8.584782,9.609042,8.293054,-0.235732,-2.550400,-5.195863,-8.372708,9.474229,-7.565532,8.872542,9.318953,-7.903194,0.649512,-4.121640,-4.984517,-6.977017,-7.900223,1.048078,0.299783,-2.259635,5.132308,-1.721203,-6.663888,-6.093732,-8.012338,6.454881,-8.623877,8.299499,1.232833,2.504035,-8.810733,2.277576,9.500819,9.603687,7.024657,-0.769218,-7.101089,-0.105294,5.253420,-2.720064,-1.334919,6.070178,0.256568,-2.408574,-0.354285,-7.805132,7.907675,0.016859,-5.924160,-8.084639,-0.971343,-0.929155,6.552527,0.163373,5.606906,9.753818,7.619233,-4.227536,0.458708,0.347202,9.824038,7.882600,-9.128974,2.529203,6.405485,-5.142797,5.748437,-8.193404,5.789144,1.795453,4.316534,-6.090134,3.968517,4.063461,8.595103,1.394840,-1.738633,-2.627965,2.487060,2.515079,4.621251,1.544255,7.510338,0.609822,7.573930,1.466024,2.622905,-9.455758,6.266711,-4.208669,-6.857182,3.310026,-5.859777,6.127402,7.943912,-1.801847,-6.709421,2.561484,7.654862,-8.073257,4.303270,-9.333588,5.563098,-1.051556,-1.841838,-7.968431,-0.482507,-7.756979,4.602819,-6.030740,-8.350739,6.771591,-2.737097,-8.996301,5.804231,8.005123,1.234542,-9.025559,-9.038618,2.411833,8.252757,4.125957,8.847191,-9.170708,-0.671320,2.548370,7.116506,0.752906,-9.044858,3.528997,6.847444,-7.762224,-8.618320,5.483059,2.369439,-4.264478,-6.021403,-3.090734,9.661195,-0.030770,-2.397382,-0.332738,-9.791462,6.469162,-9.411983,1.372608,5.100163,-8.070600,-2.232452,-6.985327,-2.503537,-4.532283,2.505835,-6.436380,0.648776,-8.801275,-2.141956,0.250602,-5.209262,5.323008,6.880173,-5.357356,9.394027,5.343534,2.610871,8.504209,-4.171064,-6.192586,2.097391,-8.172036,-9.828439,-6.456338,2.246228,2.875667,-2.422039,-0.907123,2.754969,8.293762,1.806261,-8.648858,-2.985473,-4.725374,2.823861,-2.818584,0.672910,4.685340,1.914179,8.673261,0.693735], dtype = "float32")#candidate|1363|(2080,)|const|float32
call_1362 = func_1013_call(relay.reshape(const_1363.astype('float32'), [16, 13, 10]))
call_1364 = func_1013_call(relay.reshape(const_1363.astype('float32'), [16, 13, 10]))
func_412_call = mod.get_global_var('func_412')
func_417_call = mutated_mod.get_global_var('func_417')
var_1370 = relay.var("var_1370", dtype = "int8", shape = ())#candidate|1370|()|var|int8
var_1371 = relay.var("var_1371", dtype = "int8", shape = (728,))#candidate|1371|(728,)|var|int8
call_1369 = relay.TupleGetItem(func_412_call(relay.reshape(var_1370.astype('int8'), []), relay.reshape(var_1371.astype('int8'), [7, 8, 13]), relay.reshape(const_1327.astype('float32'), [112,]), relay.reshape(call_1326.astype('float32'), [448,]), ), 1)
call_1372 = relay.TupleGetItem(func_417_call(relay.reshape(var_1370.astype('int8'), []), relay.reshape(var_1371.astype('int8'), [7, 8, 13]), relay.reshape(const_1327.astype('float32'), [112,]), relay.reshape(call_1326.astype('float32'), [448,]), ), 1)
func_1046_call = mod.get_global_var('func_1046')
func_1048_call = mutated_mod.get_global_var('func_1048')
var_1374 = relay.var("var_1374", dtype = "float64", shape = (26,))#candidate|1374|(26,)|var|float64
call_1373 = relay.TupleGetItem(func_1046_call(relay.reshape(var_1374.astype('float64'), [2, 1, 13])), 0)
call_1375 = relay.TupleGetItem(func_1048_call(relay.reshape(var_1374.astype('float64'), [2, 1, 13])), 0)
uop_1376 = relay.sin(uop_1343.astype('float64')) # shape=(11, 6, 5)
uop_1379 = relay.sinh(call_1326.astype('float32')) # shape=(4, 16, 7)
uop_1381 = relay.sinh(call_1329.astype('float32')) # shape=(4, 16, 7)
bop_1387 = relay.add(uop_1376.astype('uint32'), relay.reshape(bop_1335.astype('uint32'), relay.shape_of(uop_1376))) # shape=(11, 6, 5)
func_1013_call = mod.get_global_var('func_1013')
func_1015_call = mutated_mod.get_global_var('func_1015')
call_1394 = func_1013_call(relay.reshape(const_1363.astype('float32'), [16, 13, 10]))
call_1395 = func_1013_call(relay.reshape(const_1363.astype('float32'), [16, 13, 10]))
output = relay.Tuple([const_1327,const_1328,call_1362,const_1363,call_1369,var_1370,var_1371,call_1373,var_1374,uop_1379,bop_1387,call_1394,])
output2 = relay.Tuple([const_1327,const_1328,call_1364,const_1363,call_1372,var_1370,var_1371,call_1375,var_1374,uop_1381,bop_1387,call_1395,])
func_1398 = relay.Function([var_1311,var_1370,var_1371,var_1374,], output)
mod['func_1398'] = func_1398
mod = relay.transform.InferType()(mod)
mutated_mod['func_1398'] = func_1398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1398_call = mutated_mod.get_global_var('func_1398')
var_1400 = relay.var("var_1400", dtype = "int32", shape = (11, 6, 5))#candidate|1400|(11, 6, 5)|var|int32
var_1401 = relay.var("var_1401", dtype = "int8", shape = ())#candidate|1401|()|var|int8
var_1402 = relay.var("var_1402", dtype = "int8", shape = (728,))#candidate|1402|(728,)|var|int8
var_1403 = relay.var("var_1403", dtype = "float64", shape = (26,))#candidate|1403|(26,)|var|float64
call_1399 = func_1398_call(var_1400,var_1401,var_1402,var_1403,)
output = call_1399
func_1404 = relay.Function([var_1400,var_1401,var_1402,var_1403,], output)
mutated_mod['func_1404'] = func_1404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1417 = relay.var("var_1417", dtype = "float32", shape = (10, 10, 12))#candidate|1417|(10, 10, 12)|var|float32
uop_1418 = relay.atanh(var_1417.astype('float32')) # shape=(10, 10, 12)
uop_1425 = relay.rsqrt(uop_1418.astype('float32')) # shape=(10, 10, 12)
output = relay.Tuple([uop_1425,])
output2 = relay.Tuple([uop_1425,])
func_1431 = relay.Function([var_1417,], output)
mod['func_1431'] = func_1431
mod = relay.transform.InferType()(mod)
mutated_mod['func_1431'] = func_1431
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1432 = relay.var("var_1432", dtype = "float32", shape = (10, 10, 12))#candidate|1432|(10, 10, 12)|var|float32
func_1431_call = mutated_mod.get_global_var('func_1431')
call_1433 = func_1431_call(var_1432)
output = call_1433
func_1434 = relay.Function([var_1432], output)
mutated_mod['func_1434'] = func_1434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1705 = relay.var("var_1705", dtype = "int16", shape = (1, 15, 5))#candidate|1705|(1, 15, 5)|var|int16
var_1706 = relay.var("var_1706", dtype = "int16", shape = (7, 15, 5))#candidate|1706|(7, 15, 5)|var|int16
bop_1707 = relay.logical_xor(var_1705.astype('int16'), var_1706.astype('int16')) # shape=(7, 15, 5)
uop_1719 = relay.erf(bop_1707.astype('float64')) # shape=(7, 15, 5)
func_1046_call = mod.get_global_var('func_1046')
func_1048_call = mutated_mod.get_global_var('func_1048')
const_1722 = relay.const([[-6.183798,-3.303778,9.603589,-0.135408,-2.691768,7.932939,4.522667,-3.697659,-8.299251,-1.384156,-2.055822,7.601241,-6.550372,1.729679,-2.347812,-6.555393,7.687509,7.472888,-3.063418,0.634967,3.907700,-9.649869,-7.695165,8.617994,-9.184421,4.251275]], dtype = "float64")#candidate|1722|(1, 26)|const|float64
call_1721 = relay.TupleGetItem(func_1046_call(relay.reshape(const_1722.astype('float64'), [2, 1, 13])), 2)
call_1723 = relay.TupleGetItem(func_1048_call(relay.reshape(const_1722.astype('float64'), [2, 1, 13])), 2)
uop_1726 = relay.asin(uop_1719.astype('float32')) # shape=(7, 15, 5)
output = relay.Tuple([call_1721,const_1722,uop_1726,])
output2 = relay.Tuple([call_1723,const_1722,uop_1726,])
func_1733 = relay.Function([var_1705,var_1706,], output)
mod['func_1733'] = func_1733
mod = relay.transform.InferType()(mod)
mutated_mod['func_1733'] = func_1733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1733_call = mutated_mod.get_global_var('func_1733')
var_1735 = relay.var("var_1735", dtype = "int16", shape = (1, 15, 5))#candidate|1735|(1, 15, 5)|var|int16
var_1736 = relay.var("var_1736", dtype = "int16", shape = (7, 15, 5))#candidate|1736|(7, 15, 5)|var|int16
call_1734 = func_1733_call(var_1735,var_1736,)
output = call_1734
func_1737 = relay.Function([var_1735,var_1736,], output)
mutated_mod['func_1737'] = func_1737
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1982 = relay.const(-8, dtype = "uint64")#candidate|1982|()|const|uint64
var_1983 = relay.var("var_1983", dtype = "uint64", shape = (8, 11, 1))#candidate|1983|(8, 11, 1)|var|uint64
bop_1984 = relay.bitwise_or(const_1982.astype('uint64'), var_1983.astype('uint64')) # shape=(8, 11, 1)
func_1733_call = mod.get_global_var('func_1733')
func_1737_call = mutated_mod.get_global_var('func_1737')
var_1990 = relay.var("var_1990", dtype = "int16", shape = (75, 1))#candidate|1990|(75, 1)|var|int16
const_1991 = relay.const([6,-10,-8,8,7,6,-9,-3,1,-9,7,9,-1,-6,-2,2,4,8,4,-9,7,-2,-6,5,10,8,-8,-5,-10,5,2,9,-3,8,-4,-8,-2,-7,7,6,6,7,3,-2,-4,2,-8,2,9,-9,-8,-1,-7,-9,-2,4,-10,-1,-2,5,-2,2,9,1,7,-8,7,7,10,10,2,-10,-4,7,-4,4,1,-5,-1,6,-4,-2,4,7,-7,3,-3,-6,-4,3,-7,-3,2,-7,-2,-2,7,-1,5,-4,7,4,2,6,-2,1,7,-8,-2,3,-7,-2,3,5,3,2,7,-9,5,5,4,9,-10,2,1,7,2,-2,5,3,-7,6,-1,4,-10,-5,7,-8,10,-10,-7,9,-6,-6,-10,-7,-4,-4,-9,10,9,6,9,2,3,-10,-7,-2,2,6,-7,-9,-7,5,-1,-7,-4,6,-4,5,-10,-10,4,2,9,7,10,-6,-9,4,10,2,-2,-7,7,-8,7,-6,9,8,-5,-6,1,1,-5,-1,6,-8,2,-7,-9,7,-2,-8,10,-2,9,9,10,-9,7,-1,-3,-1,6,3,-4,3,3,10,-5,6,10,5,5,4,-4,-5,4,2,-8,9,-7,-2,2,-4,4,-3,7,-4,-4,6,-5,-6,1,-3,7,10,2,4,4,3,10,-4,-5,-1,9,6,-8,-5,2,-7,7,3,-9,-3,7,-3,-1,-3,-5,5,2,10,-6,1,10,-7,5,-6,6,-9,7,-7,-1,7,7,-2,5,-8,-6,7,5,4,-3,-6,2,-10,-1,9,1,10,8,-4,-5,-2,-1,6,4,-8,10,5,-3,-1,6,-8,6,3,-1,6,1,-8,10,8,6,2,4,-10,-4,3,2,7,1,-1,8,8,-9,2,10,3,10,2,5,-10,4,1,7,2,-9,-10,-4,8,7,-1,10,5,-1,3,-10,5,10,-7,-3,5,-6,8,-5,1,6,1,6,-7,4,3,5,-5,1,2,-5,-5,-3,-8,9,2,-1,-3,-10,6,-10,-5,4,-10,4,-8,-10,-7,-5,-5,4,2,-2,-2,5,4,4,10,1,-4,3,-5,2,8,-9,-4,10,-8,-10,5,-10,-3,-2,4,-5,10,10,-3,-9,2,3,1,-1,-8,-1,8,-5,6,4,-1,-10,-6,-6,3,-9,-3,2,-8,5,5,10,-9,-6,10,-7,-10,-10,5,7,-3,-4,1,-2,-8,4,5,1,-6,-9,1,-5,-10,9,-5,3,5,4,-3,4,3,5,9,-2,-4,-1,-4,6,-3,9,-3,6,2,-5,-8,6,-4,-1,-8,-8,-3,-7,-5,-3,10,-8,6,3,8,3,-5,-7,-2,2,1,-2,8,1,10,6,6,3,10,2,-3,5,-5,-9], dtype = "int16")#candidate|1991|(525,)|const|int16
call_1989 = relay.TupleGetItem(func_1733_call(relay.reshape(var_1990.astype('int16'), [1, 15, 5]), relay.reshape(const_1991.astype('int16'), [7, 15, 5]), ), 2)
call_1992 = relay.TupleGetItem(func_1737_call(relay.reshape(var_1990.astype('int16'), [1, 15, 5]), relay.reshape(const_1991.astype('int16'), [7, 15, 5]), ), 2)
output = relay.Tuple([bop_1984,call_1989,var_1990,const_1991,])
output2 = relay.Tuple([bop_1984,call_1992,var_1990,const_1991,])
func_2001 = relay.Function([var_1983,var_1990,], output)
mod['func_2001'] = func_2001
mod = relay.transform.InferType()(mod)
mutated_mod['func_2001'] = func_2001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2001_call = mutated_mod.get_global_var('func_2001')
var_2003 = relay.var("var_2003", dtype = "uint64", shape = (8, 11, 1))#candidate|2003|(8, 11, 1)|var|uint64
var_2004 = relay.var("var_2004", dtype = "int16", shape = (75, 1))#candidate|2004|(75, 1)|var|int16
call_2002 = func_2001_call(var_2003,var_2004,)
output = call_2002
func_2005 = relay.Function([var_2003,var_2004,], output)
mutated_mod['func_2005'] = func_2005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2327 = relay.var("var_2327", dtype = "float32", shape = (6, 12, 5))#candidate|2327|(6, 12, 5)|var|float32
uop_2328 = relay.cosh(var_2327.astype('float32')) # shape=(6, 12, 5)
bop_2330 = relay.greater_equal(var_2327.astype('bool'), relay.reshape(uop_2328.astype('bool'), relay.shape_of(var_2327))) # shape=(6, 12, 5)
bop_2333 = relay.bitwise_and(uop_2328.astype('uint8'), relay.reshape(var_2327.astype('uint8'), relay.shape_of(uop_2328))) # shape=(6, 12, 5)
bop_2336 = relay.equal(var_2327.astype('bool'), relay.reshape(uop_2328.astype('bool'), relay.shape_of(var_2327))) # shape=(6, 12, 5)
output = relay.Tuple([bop_2330,bop_2333,bop_2336,])
output2 = relay.Tuple([bop_2330,bop_2333,bop_2336,])
func_2342 = relay.Function([var_2327,], output)
mod['func_2342'] = func_2342
mod = relay.transform.InferType()(mod)
mutated_mod['func_2342'] = func_2342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2343 = relay.var("var_2343", dtype = "float32", shape = (6, 12, 5))#candidate|2343|(6, 12, 5)|var|float32
func_2342_call = mutated_mod.get_global_var('func_2342')
call_2344 = func_2342_call(var_2343)
output = call_2344
func_2345 = relay.Function([var_2343], output)
mutated_mod['func_2345'] = func_2345
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2652 = relay.var("var_2652", dtype = "float32", shape = (15, 10, 4))#candidate|2652|(15, 10, 4)|var|float32
uop_2653 = relay.acosh(var_2652.astype('float32')) # shape=(15, 10, 4)
output = uop_2653
output2 = uop_2653
func_2662 = relay.Function([var_2652,], output)
mod['func_2662'] = func_2662
mod = relay.transform.InferType()(mod)
mutated_mod['func_2662'] = func_2662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2663 = relay.var("var_2663", dtype = "float32", shape = (15, 10, 4))#candidate|2663|(15, 10, 4)|var|float32
func_2662_call = mutated_mod.get_global_var('func_2662')
call_2664 = func_2662_call(var_2663)
output = call_2664
func_2665 = relay.Function([var_2663], output)
mutated_mod['func_2665'] = func_2665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2810 = relay.var("var_2810", dtype = "float64", shape = (8, 1, 6))#candidate|2810|(8, 1, 6)|var|float64
uop_2811 = relay.asin(var_2810.astype('float64')) # shape=(8, 1, 6)
bop_2815 = relay.subtract(var_2810.astype('float64'), relay.reshape(uop_2811.astype('float64'), relay.shape_of(var_2810))) # shape=(8, 1, 6)
func_2662_call = mod.get_global_var('func_2662')
func_2665_call = mutated_mod.get_global_var('func_2665')
var_2825 = relay.var("var_2825", dtype = "float32", shape = (6, 100))#candidate|2825|(6, 100)|var|float32
call_2824 = func_2662_call(relay.reshape(var_2825.astype('float32'), [15, 10, 4]))
call_2826 = func_2662_call(relay.reshape(var_2825.astype('float32'), [15, 10, 4]))
bop_2827 = relay.add(var_2825.astype('float32'), relay.reshape(call_2824.astype('float32'), relay.shape_of(var_2825))) # shape=(6, 100)
bop_2830 = relay.add(var_2825.astype('float32'), relay.reshape(call_2826.astype('float32'), relay.shape_of(var_2825))) # shape=(6, 100)
output = relay.Tuple([bop_2815,bop_2827,])
output2 = relay.Tuple([bop_2815,bop_2830,])
func_2831 = relay.Function([var_2810,var_2825,], output)
mod['func_2831'] = func_2831
mod = relay.transform.InferType()(mod)
mutated_mod['func_2831'] = func_2831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mutated_mod.get_global_var('func_2831')
var_2833 = relay.var("var_2833", dtype = "float64", shape = (8, 1, 6))#candidate|2833|(8, 1, 6)|var|float64
var_2834 = relay.var("var_2834", dtype = "float32", shape = (6, 100))#candidate|2834|(6, 100)|var|float32
call_2832 = func_2831_call(var_2833,var_2834,)
output = call_2832
func_2835 = relay.Function([var_2833,var_2834,], output)
mutated_mod['func_2835'] = func_2835
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2972 = relay.var("var_2972", dtype = "int32", shape = (4, 2, 14))#candidate|2972|(4, 2, 14)|var|int32
const_2973 = relay.const([[[1,2,-9,3,-8,10,-3,7,-6,4,-1,6,3,4],[-5,9,-4,-7,5,-4,6,5,10,-1,-8,-8,3,-6]],[[8,-6,-8,2,-7,6,8,-7,4,8,-1,-2,4,-7],[4,3,-3,4,5,7,4,4,-3,-10,10,-1,-5,-1]],[[5,-5,-1,-8,9,-10,-9,-4,2,6,-8,2,-2,-10],[-10,-7,-9,1,-3,8,4,-4,-7,-5,-10,-4,-5,8]],[[-3,-6,9,7,6,-10,8,8,-8,-2,-5,-3,8,-3],[6,-2,-10,-10,-4,7,-5,-8,6,5,-10,-10,6,10]]], dtype = "int32")#candidate|2973|(4, 2, 14)|const|int32
bop_2974 = relay.add(var_2972.astype('int32'), relay.reshape(const_2973.astype('int32'), relay.shape_of(var_2972))) # shape=(4, 2, 14)
func_1013_call = mod.get_global_var('func_1013')
func_1015_call = mutated_mod.get_global_var('func_1015')
const_2983 = relay.const([0.720773,-0.140652,-3.399636,3.764230,-1.218860,-8.152781,-9.734125,-6.646968,-1.062374,9.779721,-2.181897,-5.800159,-7.118669,-6.971147,-1.138940,1.509527,5.709128,3.668549,-7.604932,2.785863,-9.543352,-3.575877,-7.358839,-2.340599,-0.438997,3.116510,0.206085,5.493855,-0.792561,-2.137489,-2.012299,-6.229987,4.595817,7.604070,-2.095622,-7.578248,-3.097101,-8.006222,-7.614801,5.780913,-3.886581,2.680111,-3.157643,3.279674,-5.901959,-9.495403,3.600452,-3.798125,-4.529306,-4.753986,-4.440193,-5.332942,-8.951270,-5.292489,1.141064,5.205743,-3.481704,-0.197573,-7.964193,8.187552,1.807675,4.291401,2.780271,2.122141,6.709591,-0.098964,3.904042,0.560469,8.657068,-7.968126,9.938994,-9.892619,-1.058276,5.548039,0.550829,9.689180,-3.428367,2.671117,-3.280232,8.452431,8.170991,8.628848,-1.901292,-4.311804,-7.039808,3.221527,-5.455711,3.980702,-5.690319,6.600754,-8.048183,-9.642366,3.024122,-9.904702,-6.003796,-1.584573,7.496724,-0.601948,-2.498745,-3.152115,5.253830,-6.912301,4.587150,-4.112467,-5.004699,7.486020,-3.952328,4.137894,-6.243263,5.170774,-7.130245,-3.955810,-3.133066,0.401715,8.123573,7.729707,3.870305,-2.113507,-2.034482,-5.876152,9.218064,6.135251,6.685285,0.555919,-1.220689,2.153043,-6.455420,-2.808874,-5.184154,6.897079,6.870858,2.239138,8.081178,-3.035629,-0.848305,-9.817918,-0.944233,-1.880605,4.244220,5.867261,-4.102107,-9.272367,-9.547582,5.647069,-2.718828,-8.429539,-5.388661,8.095983,-6.207963,5.560854,-5.004268,-6.469298,4.379799,7.375418,-5.953529,-9.446866,2.189015,-8.526370,2.773201,-5.382551,-6.221040,-3.959187,-2.068960,-0.616663,5.251221,-8.143252,-1.260828,-2.392048,3.967269,-3.536540,6.079260,-1.952234,1.012604,-1.513710,4.209954,-7.285572,-4.948342,-2.627953,-0.353157,5.597009,-3.554161,-4.374577,-9.430363,-9.806406,-7.825316,0.015399,2.222534,-1.422261,-9.341326,1.034459,9.793597,-5.038496,-2.838200,5.191196,1.093467,-4.525778,-9.554586,-9.781143,-9.014816,-7.558823,0.735892,-8.534021,7.638589,8.075230,4.665913,4.849876,6.645523,-0.663446,-0.040983,-3.014272,-4.080628,6.899430,4.737848,1.604289,-9.394603,-1.754147,-1.149183,-6.918704,0.584751,6.851104,8.163090,-0.318342,-0.944045,-0.823088,-6.583358,4.638295,-2.916857,1.742089,-1.910394,7.661933,-6.837489,5.168763,-7.316077,-0.883178,8.039079,-2.225897,7.592247,7.895949,-7.670595,-6.774689,2.285217,8.373169,9.798778,2.894397,-4.299830,-5.248108,7.554700,5.082223,-1.493745,7.412995,3.880672,-0.056630,-1.412939,4.393935,9.334870,7.378785,1.053905,-5.777259,6.439875,-2.945477,-9.526162,-8.822271,-7.153850,4.010715,-4.601879,2.122980,1.749666,-9.955070,7.442340,-8.822592,7.391407,5.455118,-4.568534,3.237581,-3.255223,7.115076,4.722488,-4.973475,8.366780,-3.379158,-5.040620,-6.361746,0.385661,-4.696966,-8.430937,4.661139,-4.099657,-9.056699,4.138305,1.959326,9.085155,-1.933626,-2.633836,5.040057,2.666359,8.117842,9.435689,8.326042,-1.171657,4.608374,-8.182550,9.909083,-4.625684,4.521822,1.226817,1.560719,-0.504969,8.168997,-2.983631,-9.469829,-6.523812,9.959788,5.107696,-5.156674,-5.820096,-9.028056,1.675499,-5.143591,6.311890,9.615198,-5.909061,-7.079492,-0.946510,9.588132,-3.609076,-0.772814,-0.167505,-7.772785,-9.414481,8.948121,-5.400442,7.809723,7.124557,8.711232,-3.525419,-0.420842,0.451300,0.543707,-1.980729,-1.197627,-5.912673,-3.129385,0.763668,9.560408,1.626564,-9.964079,-9.122051,4.623846,8.338604,6.927461,2.071419,-8.697909,-3.698426,2.726139,4.091905,8.277039,-8.418947,-2.966121,-3.092964,-8.852084,-2.589401,1.995204,-1.160565,8.859858,-8.721321,0.994116,-7.337288,-3.302940,3.497676,3.680992,-6.013400,7.200294,-7.339569,-6.281833,8.710252,0.744530,9.466957,-6.770692,2.188465,-9.832564,-5.569337,-0.601548,4.727019,0.971972,-3.440314,9.811358,7.106147,2.925341,-3.111635,-5.177469,-4.030218,-6.374922,0.609946,-6.373458,-7.347089,-7.459507,-4.386841,3.771963,3.320821,3.140679,6.187999,-8.550485,0.178848,5.416494,8.568193,1.428336,0.915434,-5.631233,-1.285474,2.354386,2.513470,-4.672376,-7.931580,2.374366,-1.078185,3.797555,-5.915242,4.638578,-0.665857,8.179547,-6.373340,9.498614,-7.009327,-9.530909,-7.036969,0.364065,6.540774,-0.974085,0.744941,-2.431126,-8.654803,-8.563990,0.550765,-9.229414,-1.649552,-5.886554,-7.373202,-5.677548,9.074300,1.820659,-2.618308,3.397296,-8.073997,-3.704313,1.412523,-8.779110,-0.558131,-0.024113,-7.081643,1.397437,5.538257,7.639513,-8.085849,-4.132450,5.238831,6.469233,9.913672,0.651510,-7.697993,8.567822,-7.890872,4.886191,-9.821543,8.702225,-5.204589,5.787277,-6.353494,7.906535,-7.037870,-6.710248,-7.748695,-4.431380,-3.301920,9.567101,3.477168,-6.817744,-4.664161,-9.640888,-2.579628,7.104648,3.399672,-5.978675,-8.778313,-0.608465,8.468565,-1.609830,-8.723712,1.516829,-1.638371,-0.441090,-5.143826,-2.776665,-0.724401,1.900437,-8.269657,-1.237202,-5.461305,7.202068,-1.128611,4.738278,-0.658403,3.266315,-2.533827,8.725546,-3.584819,-4.467774,-6.765879,3.762566,-9.604594,1.598939,-8.251800,-8.469198,-0.588787,9.382927,1.656256,2.790687,-7.315778,-1.385846,9.098271,3.805383,8.787172,-8.893315,-7.783253,2.588158,6.789283,6.924576,-7.579915,-2.825260,2.461324,8.540171,-7.292525,-2.729085,-4.538496,-8.858946,-0.609728,4.974925,6.030572,-1.477498,6.694920,-7.778854,-8.299824,-4.104808,8.268590,-2.551892,-8.071178,6.706549,-5.169979,5.187254,8.098083,-1.918491,-4.847850,9.318304,-9.068709,4.772972,3.234125,-0.905674,-9.190183,-5.337164,1.375586,-1.110301,2.076218,-1.268416,-5.593143,-4.916312,8.556930,0.778699,-8.392905,-9.401270,-6.328372,-6.571765,6.398693,-2.861049,-8.225318,-9.045212,8.417799,1.390879,-6.888674,-9.255591,-4.729739,-2.533892,7.667354,6.903603,2.252640,-5.091606,7.333285,9.932488,6.043717,-6.207899,9.076815,2.734055,-7.308089,6.839391,4.563758,4.551473,-1.610722,1.734927,5.414274,1.220091,-7.372633,4.143367,-2.686917,7.627692,-2.862947,1.417200,-2.752174,-8.140120,-9.484951,6.085059,1.940181,2.759517,6.349664,9.387374,2.399142,5.888633,2.142198,2.861029,8.501539,4.972901,2.980466,7.169470,-3.000806,-7.375584,2.372401,-4.489105,-5.931759,-4.044330,-8.194820,-8.953302,-1.951790,-0.604973,-1.504533,-6.710554,-4.952974,6.018384,-3.396856,7.493560,-9.459995,2.391128,5.526554,-6.984870,9.065098,1.604539,1.085938,7.667383,4.489099,9.994296,-9.998180,-3.555468,9.641595,-5.553243,-5.869087,-6.258342,1.960768,3.820071,0.645346,-7.130199,-1.424269,2.420519,0.592196,-5.632540,-4.291097,2.932150,7.255677,8.395018,5.315447,-4.787133,7.382676,9.880093,8.584894,5.894775,-4.043891,8.826275,-7.665803,-2.390971,-4.667783,-9.524554,-2.046309,8.478068,6.764746,6.605349,-7.867976,3.755804,-9.697098,-8.634935,5.949655,0.169508,0.633380,-4.517983,9.469265,4.666833,6.619417,-7.633172,3.144081,4.854260,-5.828450,-6.805008,9.690375,-0.450376,-6.451798,7.360576,-4.515720,7.999989,6.485131,9.459525,1.143597,-1.849457,3.688913,-2.602080,-6.975589,5.061708,-3.969332,4.184377,4.707186,-2.887186,-1.669337,3.889132,-0.753761,-2.205987,4.808018,-3.064582,1.503201,0.966255,8.774635,0.567785,-5.823502,-5.394317,-5.210392,-7.309350,6.438893,3.900269,-0.229667,-1.861183,-4.236890,-4.135880,5.939724,-2.873726,-0.542863,4.074146,8.937373,8.367451,4.099738,9.201473,-7.140087,-6.672385,-5.503906,3.559407,-0.553099,0.899565,5.512727,-9.956388,-8.174045,5.125003,1.648508,-2.129871,4.325593,-0.888544,4.610384,7.798894,9.945833,2.064831,6.687326,-2.545223,-4.125429,-6.155269,1.185303,-8.784692,3.100201,-5.056855,-2.469503,-5.271638,5.623359,1.669399,-6.025841,-5.219444,-1.004153,5.578346,-9.022541,5.923105,7.165739,-6.029488,6.351265,-6.351795,-9.536080,7.364933,1.152035,1.630920,-4.823078,0.660009,3.099769,-7.651569,0.757639,7.913276,4.564230,-9.331468,0.064476,6.731594,-6.444225,1.142183,5.695581,9.618308,-1.298292,0.009225,5.545775,5.148759,-9.223429,-3.112416,2.722283,1.040757,7.102778,1.957495,6.668639,5.228985,-9.041981,-4.640102,5.840800,-7.759501,-9.772706,-6.932321,-0.090247,-5.437715,9.908154,-2.839662,4.080953,4.813800,-7.465586,3.466269,4.358204,1.342447,1.870074,1.543813,9.326539,2.268768,4.549016,-5.508715,0.248468,-5.744036,7.513296,-5.729529,6.150004,3.044966,-9.392749,3.426405,9.141993,-0.879155,-7.215587,3.939980,7.030117,-0.233470,-4.972423,9.244438,6.157688,-3.002869,-3.498572,5.182406,-1.580752,4.925027,5.655899,8.899759,0.865984,-0.099745,8.640569,-0.839377,-7.156701,-6.766868,0.582697,-9.958387,2.534188,0.480736,4.404038,2.614016,-2.308961,0.611447,1.632960,-4.291776,-3.395183,7.455824,0.392418,-7.650458,-1.919921,-1.481519,-7.358986,-6.764885,-4.969960,-4.820776,2.692629,1.235051,-9.430878,0.336798,3.718688,7.991397,-4.284826,-6.566723,-0.219962,5.152991,4.789624,-5.747309,4.621851,9.156457,-8.309798,9.969004,-3.935308,0.792092,0.401127,-0.574796,8.746761,-4.531801,-7.681699,6.892445,-9.111966,9.925941,-6.091693,2.051080,1.439134,3.314657,-7.074622,2.784847,-0.382417,-6.376053,2.782557,-9.081571,-7.041109,4.424326,6.265251,6.655615,7.784789,4.757345,-1.597636,6.053944,-1.051361,3.600852,-5.254246,4.211242,-8.571482,-8.436765,-4.596044,-4.774659,-7.355312,-9.691647,-4.460829,5.036905,-5.083505,3.142069,7.924507,-0.918263,-3.412941,3.586562,-4.994834,4.310325,-7.375668,7.605929,-1.215169,5.306296,2.263000,1.574246,4.690731,7.769228,7.810564,-2.062247,-9.006797,-0.426393,-6.592481,0.896518,-0.963574,3.706776,-3.035899,-6.590572,-1.970737,3.041797,2.352947,4.285784,6.540981,-1.043135,-9.538683,-3.627201,-1.344740,3.885248,-4.057107,0.808017,4.362802,0.460754,3.891532,-9.492978,3.221327,5.615491,-2.206395,5.245239,-6.139519,1.701231,-2.078488,8.451007,-3.607496,7.875971,8.837957,-0.064585,-9.524990,-4.249884,2.977840,8.574112,9.384400,6.194346,-2.274735,1.446169,-9.675417,7.180615,-3.590948,7.448436,0.042468,4.588280,-7.609735,0.038410,8.750458,-9.253331,-9.497246,9.831614,8.740327,-2.197657,7.270452,-6.489034,-6.572926,-3.937247,-6.756004,5.620077,8.228001,-8.764874,-3.686358,-2.611330,4.152233,-7.164565,-0.622341,6.329759,-5.687263,6.033490,-6.253732,-6.317285,5.046621,9.125855,-4.943186,6.052016,-4.548251,1.294613,7.569180,-7.089670,8.271902,8.095387,3.665928,5.751689,-3.777569,3.097476,-5.788231,7.487827,6.056893,0.939803,9.136180,2.456598,-7.967747,5.256078,-8.955226,-0.378175,-6.927380,2.129044,1.198869,-0.990888,-0.649314,-9.228917,4.507303,-9.235648,-5.529437,-2.136078,9.236091,6.284360,5.328916,7.823748,8.151058,1.025908,4.940920,9.439313,8.418860,-8.405044,8.807391,-4.715243,-3.014011,2.669055,-3.242121,5.254915,3.552694,5.075423,4.336889,-5.751563,-6.097198,-3.791056,5.858090,-8.911917,0.843743,-6.136376,6.728186,7.288075,2.131418,1.193148,0.002778,3.161204,2.206813,4.130607,-6.098082,3.275528,4.320710,-4.476261,4.306458,1.508017,-8.801118,-3.963137,-4.818379,1.544303,-3.844443,5.436906,1.089556,3.958077,6.237446,5.825221,-9.482630,-2.297852,3.290497,-0.089328,-0.879682,4.814174,0.024721,-8.769327,-1.245437,-6.361956,-5.202094,-3.974264,-8.598704,2.525029,-0.701650,8.784851,6.728225,-3.483857,6.886646,-4.710021,-6.598996,-0.629112,1.567311,9.462462,-3.657316,-9.937397,0.624350,2.803047,-4.591906,4.644504,1.471972,-3.093831,-1.917818,1.399504,6.194298,1.977062,-5.474178,-9.551551,3.419400,2.741383,4.570041,-2.192259,-0.103763,-4.854942,-3.063475,6.051379,2.454995,5.416302,-9.800013,8.712394,-7.304983,5.982405,-1.067704,-8.005489,9.207410,6.040739,6.375691,3.329468,7.896401,6.084128,4.415130,-9.335795,-5.923561,-2.925954,-5.814082,-8.489762,8.570793,8.890803,8.236523,4.040842,1.034303,2.978293,-3.265551,-7.686150,6.911364,-7.342305,-6.276985,0.444062,-0.711397,2.706952,3.538721,7.562785,0.050812,-7.755352,-8.583042,3.251080,-9.463118,-0.132213,5.681716,1.002427,-0.457973,3.806297,-2.681380,1.584827,0.369266,3.316057,9.623717,0.787827,-8.529630,9.644439,8.687982,-7.921523,-0.250126,-3.360733,-5.128605,-7.733177,5.707847,5.677607,-0.230576,-5.104086,-8.578015,-7.000311,-0.673351,-9.972478,8.640905,7.464984,0.636625,-6.661301,3.442244,9.121866,-4.949055,-9.435511,-6.531531,5.639159,6.863450,-9.536705,-5.777067,5.214521,-0.312072,5.002509,3.071170,-2.551980,-6.974331,-5.302085,5.658779,1.552619,3.303271,-1.285090,-9.241150,-5.583685,4.883436,5.591973,7.396642,4.088278,-6.111967,4.933903,2.202460,-4.505979,9.205568,2.448183,3.024947,-5.071333,6.161817,-7.824563,9.240198,9.740043,0.792190,-1.833050,9.287370,-2.171568,-8.100961,2.463313,0.510247,7.116124,5.488399,2.326564,-9.911956,5.050332,-0.783423,7.777634,8.980956,1.838702,8.021948,0.895761,2.237979,-1.987783,-1.617426,6.371750,-3.957243,-0.377983,-5.022290,-1.284535,0.066938,-7.071539,6.010084,7.382623,-8.743091,4.902397,-6.267863,-9.912632,-3.762959,4.413416,-3.339912,-2.445177,-8.159245,-7.968521,-8.001454,7.609507,1.570964,-0.874991,3.292284,5.082530,-0.941843,3.660643,2.240559,-2.665120,-7.774200,-4.316466,-8.253887,5.832702,1.762858,8.449811,-7.964590,-5.855826,-8.553322,-6.690605,-0.869242,3.740863,-7.885251,-5.281854,-2.771782,8.933468,-7.098912,-2.998447,-4.866440,1.396637,7.580086,-6.911306,5.739138,9.510313,0.332728,8.073615,1.535220,-8.716134,8.357306,-8.110866,1.373907,2.977614,7.124709,-9.802919,0.419077,-3.045150,7.243800,6.517349,7.224808,-1.480164,-7.206533,-9.421642,3.101147,-9.014970,8.399391,-3.164016,-5.758476,9.051244,8.927281,-5.867637,2.578282,-5.551540,7.937183,-3.559661,-9.227629,5.785904,-4.755054,8.591563,-5.787890,2.191607,-1.539433,-4.950199,6.639549,-1.792827,4.319684,1.085189,3.908646,0.731001,9.738996,1.299776,1.723440,0.221846,9.742001,1.023394,-8.198032,7.157663,-9.143116,0.696946,1.914402,4.168942,-3.227394,-1.138228,-6.425415,-3.003539,6.836510,0.334829,-2.110539,-2.632988,9.376641,4.887163,-9.969943,-1.363111,-8.440312,-8.918886,-6.653422,8.735582,5.625926,-3.028294,6.697711,1.674295,1.398397,1.844517,4.174137,4.190713,1.647854,-5.599966,8.739716,8.781046,3.683018,-4.719677,2.192367,-6.441007,2.680764,-8.801400,-2.594772,3.624936,-6.904973,6.860903,-0.509300,1.002730,-7.754058,-1.244632,-0.096219,9.191799,6.281044,4.334334,1.023893,8.185224,9.682327,-6.408446,-0.311590,5.023467,-9.499329,-3.957766,6.791214,8.907437,-9.111138,7.228382,4.475760,-1.745565,-8.911496,6.923631,1.702675,-4.092305,-7.593518,-0.506670,-8.922248,6.718683,9.407132,-0.574404,6.087151,-6.090247,3.642675,5.091456,-3.733295,9.761382,4.846059,6.287271,-3.383736,7.695583,-8.222756,9.096813,0.231233,2.735381,-0.621817,3.278008,6.447328,1.254103,-6.626231,1.882087,-2.616624,8.149236,0.631079,9.963123,7.635708,-4.742374,-8.895262,-9.103232,0.412612,-3.654938,8.284636,1.959243,7.039498,1.269558,7.519148,7.942481,-8.878892,-1.016360,1.848774,4.035110,-9.118676,-0.665389,1.732461,4.649663,-8.791827,-8.950038,2.678273,6.791771,0.879676,-1.166009,9.452134,-1.157183,5.913426,-0.131066,-3.764322,3.872334,2.330715,-4.376565,-3.621097,9.985682,5.531869,4.658138,-2.710920,-6.195200,0.650603,-6.989647,-7.790021,-1.346644,7.191126,-0.202948,-9.025753,3.952390,0.522765,-5.019956,2.777600,-3.217685,-0.152253,8.786414,-9.699147,-6.819319,1.452445,3.539825,8.809409,1.422714,-1.245657,7.040108,7.214535,-5.469734,-6.358623,-3.888103,8.291253,-9.949712,-5.241311,-1.341139,6.426347,3.707340,1.107690,-2.218264,-7.699352,-8.005713,1.517057,-4.255263,-4.381312,4.759290,2.348303,-1.459741,4.875900,-2.401973,-3.979911,-6.178188,5.145971,-6.722799,-2.836935,-9.485080,-6.844974,9.298121,-5.565520,-2.488411,3.546702,3.692082,-9.970844,3.219975,-6.628594,7.882496,-1.550285,2.931739,8.962680,-8.467616,-0.397346,2.617524,5.999561,0.442702,-2.360835,-1.926679,5.501064,-0.457629,5.572205,9.267230,-9.862176,5.752032,8.454099,-6.919802,-8.236707,-2.096467,6.830243,-5.448023,3.687750,-9.953901,3.293861,7.764603,-8.524514,-9.230421,4.828459,-7.012849,0.349877,-1.715314,-4.952001,7.531350,3.515325,5.383512,7.890330,-5.498383,9.952736,-0.843601,2.169150,-3.602335,-3.381634,-1.442151,-5.947742,2.008201,-3.994082,-5.969794,-3.692158,3.062594,-0.509315,8.130590,-6.710633,-6.266332,-6.192883,9.415376,-0.695952,-7.567357,-9.340613,-1.622539,2.628145,-1.787245,8.372375,-7.102657,1.491491,0.506106,-7.831008,0.523092,-9.337901,1.514174,4.987122,7.967513,-7.827656,-1.580724,-3.572594,7.370934,-8.090725,6.432198,8.919929,9.845337,2.781138,-0.990440,6.112451,0.042054,4.800316,2.819285,6.831340,-9.269372,-1.741365,-6.856377,3.474881,-7.027617,-3.950717,6.172792,4.213313,-0.785857,1.383112,-0.821376,-0.242451,5.017036,-6.257527,-7.370608,0.873735,2.330151,4.772787,-1.616489,-5.440590,-5.444830,-8.752819,-6.025237,5.162044,-3.082946,7.432103,1.313124,-0.674621,0.010620,8.039737,-2.502798,-1.451521,-3.612809,-7.073684,-6.377290,6.478122,3.777993,-4.236043,1.390086,-2.746187,-5.384552,5.932103,8.455857,-4.260581,-0.549188,8.694936,-9.977842,7.029662,9.262259,1.207795,-1.310936,7.017322,-7.538046,5.048751,6.926957,-2.309060,7.578488,9.720677,9.521395,9.932162,-7.391438,8.731318,-1.853720,8.942509,-4.520486,7.485529,-4.163780,-2.313332,-1.573416,-6.328604,5.027705,3.697434,-4.423647,0.713531,3.523291,-7.695702,3.107193,-9.666653,-6.233297,-1.105783,9.771418,1.380341,-4.345142,-9.941835,2.224145,-9.526876,9.965817,0.578724,-7.548149,-2.574125,9.117167,8.313063,-5.578254,-1.728815,-2.076945,3.926193,-6.017979,9.671776,-2.918853,6.085049,-3.908045,-3.486448,7.658640,-9.490314,-4.349767,6.199625,5.605415,6.379189,5.893360,-9.568476,-3.204371,2.845375,-4.109951,7.107292,-6.348340,-6.717778,-4.423463,7.501313,-3.245257,5.379432,-1.951094,-7.232384,-5.839960,0.220539,7.316484,5.742191,9.858196,-2.163565,9.629083,-6.676443,-3.380068,-0.520438,4.575431,-8.690880,9.733968,-7.618852,5.644173,0.946040,-6.248933,8.877528,-8.702570,3.582316,7.287684,3.059251,9.321033,-2.117307,-1.256781,-3.419867,-5.954349,4.925019,4.042771,8.404651,-1.188206,-4.955303,1.709141,-9.056804,-3.310997,2.183537,3.074348,-2.574096,-6.711184,-9.325609,6.986073,-5.473623,-5.387318,-7.522544,-8.461715,-3.151468,-6.700371,0.494868,-3.270181,-1.206016,-2.577882,-5.133068,-0.583080,-4.884314,0.866540,-1.357606,-1.211522,8.832820,-1.611244,-3.605419,2.365513,-6.828206,6.737445,-4.216599,6.483940,-4.362824,-2.481811,-9.462753,3.204605,-5.398463,2.730944,5.478853,9.795848,-6.912223,-2.223152,-8.926182,3.187543,-4.867564,4.743689,-9.872113,6.627368,-3.437143,0.918343,-2.228301,7.213467,-4.723152,9.087863,-0.041691,-2.652231,8.650188,7.119238,-4.603390,-8.460410,8.786294,1.153906,-4.133702,-1.297138,9.135319,9.033389,-5.083139,-9.546271,-8.445672,2.946429,-8.999326,7.384855,-7.083282,-1.210913,-6.619788,9.071482,-1.964467,7.257450,6.498202,9.166256,-4.948329,9.184053,6.872556,1.193648,4.183752,7.401369,-4.807104,3.581194,9.024766,7.783789,-4.821711,-7.368669,-3.533026,-8.312224,1.984498,-0.675648,-9.958518,4.156408,0.314537,0.367745,5.074013,-1.096980,-3.162510,-0.089056,1.382414,2.511346,5.772402,-9.652445,2.548065,4.866340,-9.452760,-1.758709,9.554581,5.400107,-4.848903,-8.700322,0.116391,8.480288,-3.837728,4.123371,-7.488844,-3.363761,-2.834455,7.123836,8.157913,4.694020,-0.616435,-5.049456,1.635158,-3.869677,0.968476,0.913263,5.587811,-3.883492,-9.401184,-1.187182,-4.646590,-4.927367,6.738902,-8.759120,2.401083,2.738394,-9.855442,3.981727,5.698513,2.411498,-3.567421,1.409609,-0.583719,-1.981781,5.485250,2.659975,0.128269,9.893396,1.722548,8.518693,3.649414,-4.849887,-5.648203,0.130222,1.977156,-0.695729,2.557776,3.424224,3.240253,-6.654608,-7.107600,-5.491032,-2.678864,8.773221,-4.730267,-5.436511,1.158537,7.421712,-1.158755,4.344977,8.834929,-4.583826,8.530332,-0.462303,9.944550,1.749790,-0.501662,3.353355,4.043852,-3.219796,0.433508,4.112601,9.731823,-1.778556,4.293201,4.698932,-5.183397,9.702167,-2.398263,-1.887207,7.680395,8.401605,-3.298358,-5.635967,3.645957,7.031928,1.366161,4.166509,4.360352,-5.419317,6.762583,1.140774,8.947528,3.228838,4.882511,0.480304,-9.939466,-9.976758,9.861859,-0.720359,-3.227071,3.572434,1.363547,-6.009167,3.515864,9.002402,4.361263,-3.137419,-9.190677,-8.705064,4.007907,-6.246784,-7.989441,-7.213102,9.274363,9.266487,-0.009975,9.953179,5.695587,-0.889314,-1.381527,-8.108021,4.295977,1.241198], dtype = "float32")#candidate|2983|(2080,)|const|float32
call_2982 = func_1013_call(relay.reshape(const_2983.astype('float32'), [16, 13, 10]))
call_2984 = func_1013_call(relay.reshape(const_2983.astype('float32'), [16, 13, 10]))
func_2831_call = mod.get_global_var('func_2831')
func_2835_call = mutated_mod.get_global_var('func_2835')
const_2989 = relay.const([5.338181,2.310456,4.372547,7.452947,-9.998204,-0.904253,1.689841,7.650950,-1.879860,5.157191,-2.263292,-9.412461,5.092051,4.910894,-8.050691,-5.094281,7.937350,-2.731846,-4.705211,8.186727,-1.891011,0.192592,8.445085,-0.095453,-7.270951,1.012509,4.169410,7.948308,8.836081,-4.245478,4.266958,-8.845147,-2.674940,1.516831,-8.620657,3.224817,4.842674,-4.072900,3.615496,-8.908089,-6.000486,8.017512,-4.828373,8.318018,4.838748,6.407422,-5.589816,8.827132], dtype = "float64")#candidate|2989|(48,)|const|float64
var_2990 = relay.var("var_2990", dtype = "float32", shape = (600,))#candidate|2990|(600,)|var|float32
call_2988 = relay.TupleGetItem(func_2831_call(relay.reshape(const_2989.astype('float64'), [8, 1, 6]), relay.reshape(var_2990.astype('float32'), [6, 100]), ), 0)
call_2991 = relay.TupleGetItem(func_2835_call(relay.reshape(const_2989.astype('float64'), [8, 1, 6]), relay.reshape(var_2990.astype('float32'), [6, 100]), ), 0)
output = relay.Tuple([bop_2974,call_2982,const_2983,call_2988,const_2989,var_2990,])
output2 = relay.Tuple([bop_2974,call_2984,const_2983,call_2991,const_2989,var_2990,])
func_2996 = relay.Function([var_2972,var_2990,], output)
mod['func_2996'] = func_2996
mod = relay.transform.InferType()(mod)
var_2997 = relay.var("var_2997", dtype = "int32", shape = (4, 2, 14))#candidate|2997|(4, 2, 14)|var|int32
var_2998 = relay.var("var_2998", dtype = "float32", shape = (600,))#candidate|2998|(600,)|var|float32
output = func_2996(var_2997,var_2998,)
func_2999 = relay.Function([var_2997,var_2998,], output)
mutated_mod['func_2999'] = func_2999
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3261 = relay.const([[[-2,-1,-6],[-9,2,1],[-6,1,-3],[6,8,-4],[1,7,6],[1,5,-1],[4,6,-1],[10,-1,-9],[-9,-10,-7],[7,8,9],[6,-1,3],[3,-4,-5],[-10,-4,-7],[-5,8,-5]],[[-10,10,8],[3,1,-6],[8,6,-8],[8,-8,-9],[7,-1,-9],[-7,1,-10],[-1,3,-9],[-10,8,-8],[9,-4,-10],[1,-5,2],[1,7,-1],[10,-10,-5],[4,3,-1],[6,-10,-6]],[[3,10,2],[-4,-1,4],[7,-3,-9],[-3,4,-4],[-8,-5,-1],[9,-8,4],[8,2,8],[-3,-2,-2],[-7,-3,-1],[-7,7,7],[3,-4,4],[-1,-5,-4],[-9,-7,-7],[1,2,-4]],[[2,3,-3],[9,-8,-7],[8,-5,-10],[-5,-9,-7],[1,-8,-3],[7,-6,-3],[3,-7,5],[-3,1,-8],[-10,8,-5],[-6,5,1],[-8,1,1],[5,8,-6],[7,7,-9],[8,8,-9]],[[-5,1,-8],[-7,-1,2],[-6,5,-10],[-8,10,6],[-10,9,2],[-5,10,8],[6,-4,-6],[8,-5,6],[6,4,-9],[5,5,-1],[9,-6,10],[9,-9,-5],[-1,-5,-10],[4,4,9]],[[-6,-5,8],[10,10,8],[-9,-9,2],[-3,9,-9],[-8,-4,-3],[-6,-9,10],[6,7,-5],[7,-2,2],[10,-6,3],[1,-10,-4],[10,-2,10],[6,-3,2],[-8,1,5],[3,-9,8]],[[4,-3,-4],[7,-8,3],[-2,-6,4],[10,8,1],[7,3,-2],[-7,-2,-3],[9,2,-1],[-9,-6,8],[4,-3,1],[8,-9,-1],[-1,9,9],[10,2,-7],[-7,-5,-1],[4,-1,8]],[[2,-10,-4],[-1,-9,8],[2,8,-8],[-8,3,-9],[-6,-10,9],[-1,-3,-1],[1,-1,4],[-10,7,-2],[-5,1,4],[4,2,-9],[1,3,8],[-10,8,9],[1,10,-9],[3,3,-4]],[[4,10,-2],[-9,8,7],[-8,7,6],[-7,5,-5],[2,-8,1],[-3,-10,3],[10,6,-3],[-6,-10,6],[6,5,5],[-8,5,9],[10,3,4],[5,-5,4],[2,1,-2],[9,2,-3]],[[-1,1,9],[-4,-5,10],[-10,-5,-3],[-6,-10,8],[4,2,-1],[-5,6,-8],[10,-3,-8],[4,9,4],[-10,-9,-7],[-4,6,9],[3,-8,9],[-3,10,2],[10,-8,5],[10,-4,8]]], dtype = "int8")#candidate|3261|(10, 14, 3)|const|int8
var_3262 = relay.var("var_3262", dtype = "int8", shape = (10, 14, 3))#candidate|3262|(10, 14, 3)|var|int8
bop_3263 = relay.equal(const_3261.astype('bool'), relay.reshape(var_3262.astype('bool'), relay.shape_of(const_3261))) # shape=(10, 14, 3)
output = bop_3263
output2 = bop_3263
func_3271 = relay.Function([var_3262,], output)
mod['func_3271'] = func_3271
mod = relay.transform.InferType()(mod)
mutated_mod['func_3271'] = func_3271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3272 = relay.var("var_3272", dtype = "int8", shape = (10, 14, 3))#candidate|3272|(10, 14, 3)|var|int8
func_3271_call = mutated_mod.get_global_var('func_3271')
call_3273 = func_3271_call(var_3272)
output = call_3273
func_3274 = relay.Function([var_3272], output)
mutated_mod['func_3274'] = func_3274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3629 = relay.var("var_3629", dtype = "float32", shape = (5, 11, 15))#candidate|3629|(5, 11, 15)|var|float32
uop_3630 = relay.log(var_3629.astype('float32')) # shape=(5, 11, 15)
func_1046_call = mod.get_global_var('func_1046')
func_1048_call = mutated_mod.get_global_var('func_1048')
const_3647 = relay.const([[-0.257738,-3.131539],[-4.862603,7.728694],[7.140098,-9.005761],[-0.524782,4.932112],[-1.743277,6.993879],[4.257994,-5.728863],[-9.213754,-7.621028],[5.168950,6.942985],[-0.836655,-5.289393],[8.609586,3.795832],[0.751937,-5.042607],[-2.148583,-7.768355],[-6.805644,-8.746925]], dtype = "float64")#candidate|3647|(13, 2)|const|float64
call_3646 = relay.TupleGetItem(func_1046_call(relay.reshape(const_3647.astype('float64'), [2, 1, 13])), 0)
call_3648 = relay.TupleGetItem(func_1048_call(relay.reshape(const_3647.astype('float64'), [2, 1, 13])), 0)
output = relay.Tuple([uop_3630,call_3646,const_3647,])
output2 = relay.Tuple([uop_3630,call_3648,const_3647,])
func_3650 = relay.Function([var_3629,], output)
mod['func_3650'] = func_3650
mod = relay.transform.InferType()(mod)
var_3651 = relay.var("var_3651", dtype = "float32", shape = (5, 11, 15))#candidate|3651|(5, 11, 15)|var|float32
output = func_3650(var_3651)
func_3652 = relay.Function([var_3651], output)
mutated_mod['func_3652'] = func_3652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3788 = relay.var("var_3788", dtype = "float32", shape = (9, 10, 4))#candidate|3788|(9, 10, 4)|var|float32
uop_3789 = relay.erf(var_3788.astype('float32')) # shape=(9, 10, 4)
output = uop_3789
output2 = uop_3789
func_3793 = relay.Function([var_3788,], output)
mod['func_3793'] = func_3793
mod = relay.transform.InferType()(mod)
mutated_mod['func_3793'] = func_3793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3794 = relay.var("var_3794", dtype = "float32", shape = (9, 10, 4))#candidate|3794|(9, 10, 4)|var|float32
func_3793_call = mutated_mod.get_global_var('func_3793')
call_3795 = func_3793_call(var_3794)
output = call_3795
func_3796 = relay.Function([var_3794], output)
mutated_mod['func_3796'] = func_3796
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4131 = relay.const([[[True,False,True,False,True,True,False,False],[True,True,True,False,False,False,False,False],[False,True,True,False,True,False,False,False],[False,True,True,True,False,True,True,True],[True,False,True,False,True,True,False,True],[False,True,True,True,False,True,True,False],[False,False,False,True,False,False,True,True],[True,True,False,True,False,True,False,True],[False,True,True,True,False,True,False,True],[False,True,False,False,False,True,False,False],[True,False,False,False,False,True,True,True],[False,True,False,False,False,False,True,False]],[[True,False,False,False,True,False,True,False],[False,True,False,False,False,True,True,True],[True,True,True,False,False,False,True,True],[True,False,True,False,False,True,False,False],[True,False,False,True,True,True,True,True],[False,True,True,False,False,False,True,False],[True,True,False,False,True,True,True,True],[True,False,True,False,True,True,False,True],[False,False,False,True,True,True,False,True],[False,True,True,True,False,False,True,True],[True,True,True,True,False,False,False,False],[True,True,False,False,False,False,True,False]],[[False,True,True,True,False,True,False,True],[True,True,False,True,True,True,False,True],[False,False,False,False,False,False,False,True],[True,False,False,True,False,True,False,False],[True,True,True,True,True,True,False,False],[False,False,True,False,True,True,True,True],[True,True,False,False,True,False,True,False],[True,True,True,True,True,True,False,False],[True,True,True,False,True,False,False,True],[False,True,True,False,False,False,True,False],[True,True,False,False,False,True,False,True],[True,False,False,False,True,False,False,False]],[[False,True,False,True,True,False,False,False],[True,False,False,False,False,True,False,False],[True,False,False,True,True,True,False,False],[True,False,False,False,True,False,True,True],[False,True,False,True,False,False,True,True],[False,True,True,True,True,True,True,False],[True,True,True,True,False,True,True,True],[True,False,False,False,False,True,True,False],[False,True,False,False,False,True,False,False],[True,True,True,False,True,False,False,False],[False,True,True,False,False,True,False,True],[True,False,False,True,True,True,False,True]],[[True,False,False,True,True,False,True,False],[True,True,False,False,True,False,True,True],[True,False,False,True,True,False,True,False],[False,True,False,True,False,False,False,True],[False,False,False,True,False,False,False,False],[True,False,False,False,True,True,False,False],[False,False,False,True,False,True,False,False],[False,False,True,False,False,True,False,False],[False,False,True,False,False,True,False,True],[False,True,False,True,False,False,True,False],[False,True,False,False,False,False,False,False],[False,True,True,False,False,True,False,False]],[[True,True,True,False,True,True,True,True],[False,True,False,True,True,True,True,True],[True,True,True,True,True,True,False,True],[False,True,True,True,False,True,True,True],[True,False,True,False,False,True,True,False],[False,True,True,False,False,True,True,True],[False,True,True,False,False,True,True,True],[False,True,False,False,False,True,True,True],[False,True,True,False,False,False,False,False],[True,False,False,False,True,False,True,True],[True,False,True,True,True,True,False,True],[False,False,True,False,False,True,False,False]],[[False,True,False,False,False,False,False,True],[False,True,True,True,True,True,True,False],[True,False,True,True,True,False,False,True],[False,False,False,False,True,False,False,True],[True,False,True,True,True,True,True,True],[False,False,True,True,True,False,True,True],[False,True,False,False,True,False,True,True],[False,True,False,True,True,False,False,True],[True,True,False,False,True,True,True,True],[False,False,True,True,False,False,False,True],[True,False,True,False,True,False,False,True],[False,False,True,True,False,True,False,True]],[[True,True,True,False,False,True,True,False],[True,False,False,False,True,False,True,False],[True,False,True,False,False,True,True,False],[True,False,False,True,False,False,True,True],[True,False,True,False,True,False,False,True],[True,False,True,False,True,False,False,False],[False,True,False,False,False,True,True,True],[False,True,True,False,True,False,True,True],[False,False,True,False,False,True,True,True],[False,False,True,True,False,False,True,False],[True,True,False,False,False,True,True,False],[False,False,False,False,False,True,True,True]],[[True,False,True,False,True,False,True,True],[False,True,False,False,True,True,False,False],[False,False,False,True,False,False,True,False],[False,False,False,True,True,True,False,True],[True,True,True,True,True,False,False,True],[True,True,True,False,False,True,True,True],[True,True,False,True,True,True,False,False],[True,False,True,True,False,True,False,True],[False,True,False,True,True,True,False,True],[False,True,True,False,False,False,True,True],[False,True,True,True,True,True,True,False],[True,False,True,True,True,True,True,True]]], dtype = "bool")#candidate|4131|(9, 12, 8)|const|bool
const_4132 = relay.const([[[True,False,False,False,False,True,False,True],[False,True,True,True,False,True,True,False],[False,False,True,True,False,True,False,False],[True,False,False,False,True,True,True,False],[False,True,True,False,False,True,False,False],[False,True,True,True,False,False,True,False],[True,False,True,True,True,False,True,False],[False,True,True,True,True,False,True,True],[True,False,True,True,False,True,True,False],[True,True,True,True,True,False,False,False],[False,True,True,False,True,True,False,True],[False,True,False,True,True,False,False,False]],[[False,False,True,False,True,True,True,False],[False,False,False,True,True,False,False,True],[True,True,True,True,False,False,False,True],[True,True,False,True,True,True,True,True],[True,True,False,False,False,True,True,False],[True,True,True,False,True,True,False,False],[True,True,True,True,True,False,False,True],[True,True,False,False,False,True,True,True],[False,True,True,False,False,False,False,False],[True,False,False,False,True,False,True,False],[False,False,False,True,False,False,False,True],[True,False,True,True,False,True,False,False]],[[False,False,True,True,False,True,True,False],[True,True,False,True,False,True,True,False],[False,True,True,False,False,False,False,True],[False,True,True,False,False,True,True,True],[True,False,False,False,True,True,False,True],[False,False,False,False,False,True,False,False],[True,False,False,True,False,False,False,False],[False,True,True,False,True,False,True,False],[False,True,False,True,False,False,False,True],[True,False,True,True,False,False,True,True],[False,True,False,False,False,False,False,False],[False,True,False,True,True,False,True,True]],[[True,False,True,False,False,True,True,True],[False,False,False,False,False,True,True,False],[True,True,False,True,True,True,True,True],[False,True,False,False,True,False,True,True],[False,False,True,False,False,False,False,False],[False,False,False,True,False,True,True,True],[False,False,False,True,True,True,True,True],[False,True,True,False,True,True,True,True],[True,False,False,True,False,False,True,False],[False,True,True,False,False,True,True,False],[True,True,False,False,False,True,True,True],[False,True,True,False,False,False,True,True]],[[False,True,True,False,True,False,False,False],[False,False,False,False,True,False,True,False],[True,True,False,False,False,True,True,False],[False,False,False,False,False,False,False,False],[True,True,False,True,True,False,True,True],[False,True,False,True,True,True,True,True],[False,True,True,False,True,False,False,True],[False,True,False,False,True,False,False,False],[True,False,True,False,False,False,False,True],[False,False,False,True,True,False,False,True],[True,True,True,False,True,True,False,True],[False,False,True,True,False,True,False,True]],[[True,True,True,False,False,True,True,False],[True,True,True,False,True,False,True,True],[True,False,True,True,False,True,False,False],[True,False,False,True,True,False,False,True],[True,False,True,True,True,False,True,True],[True,True,True,True,True,True,False,False],[True,True,True,True,True,False,False,False],[False,False,False,True,False,False,False,True],[False,True,True,False,True,False,True,True],[True,False,False,False,True,False,True,True],[True,False,False,False,False,False,True,False],[False,True,False,False,True,False,False,False]],[[False,True,False,True,True,True,False,True],[True,False,True,True,False,False,False,False],[True,False,False,True,True,True,False,True],[False,False,False,False,False,False,False,False],[True,False,False,False,True,False,True,False],[True,True,True,True,True,True,True,False],[False,False,False,True,True,False,False,False],[False,False,False,False,False,False,True,True],[False,True,False,True,True,True,True,False],[False,True,False,False,False,True,False,False],[True,False,True,True,False,False,True,False],[False,True,True,True,True,False,False,True]],[[True,False,False,False,False,True,True,False],[False,True,False,True,False,True,True,False],[True,True,True,False,True,False,False,True],[True,True,False,False,True,True,True,False],[True,True,True,True,False,False,False,True],[True,False,False,True,True,True,True,True],[False,False,True,True,False,True,True,True],[True,True,True,False,False,False,True,False],[True,False,True,False,False,True,True,True],[False,True,False,True,False,False,False,True],[False,True,False,True,True,True,False,False],[True,False,False,True,False,True,True,False]],[[True,True,False,True,False,True,False,False],[False,True,False,False,True,False,True,True],[False,False,False,True,True,True,True,False],[True,True,False,True,True,True,True,False],[False,True,False,True,False,False,True,False],[True,True,True,False,False,False,False,False],[False,False,True,False,True,False,False,False],[True,False,False,False,False,True,True,False],[True,True,True,True,True,True,False,True],[False,True,True,False,True,True,False,False],[False,True,False,True,True,False,False,True],[True,False,True,True,True,False,True,False]]], dtype = "bool")#candidate|4132|(9, 12, 8)|const|bool
bop_4133 = relay.logical_or(const_4131.astype('bool'), relay.reshape(const_4132.astype('bool'), relay.shape_of(const_4131))) # shape=(9, 12, 8)
func_1013_call = mod.get_global_var('func_1013')
func_1015_call = mutated_mod.get_global_var('func_1015')
const_4148 = relay.const([[6.796651,-2.556383,-0.119582,-4.685302,-6.331953,2.366687,-4.578843,8.797247,6.841292,-5.170754,6.967885,8.896342,7.171881,-2.430144,9.340589,-0.465840,2.761195,9.539463,3.967888,-7.589235,-8.394911,1.775452,-1.653342,-3.557461,-1.133256,-4.035264,-8.405570,5.503425,-5.924954,1.384590,-3.948689,-9.929517,6.017664,2.220647,3.127199,-9.438050,2.628892,-9.760756,-7.109939,-8.401184,4.235029,9.521043,-4.374517,-6.888584,-7.906079,-6.918415,0.829080,-5.918009,-3.750294,1.710057,-7.943326,-5.379250,-9.164279,3.566822,8.437262,3.191930,-6.547679,1.700083,7.482808,-0.665248,2.000058,-2.137759,3.965763,6.117060,-2.294779,-9.725883,-2.862715,7.157663,9.751568,-9.732600,-6.326808,-4.609317,-6.335331,8.327419,9.456169,7.546890,-5.692562,9.666519,7.621825,9.966682,9.433293,-4.810468,-7.898264,-8.322010,-2.557188,9.164315,-3.876909,-5.857664,2.071822,-9.287841,3.777482,0.255056,7.436347,8.022766,-7.862454,4.790036,-7.347329,2.291762,1.686325,4.991165,-0.770563,-3.733902,-0.427751,6.909355,-4.231104,-0.241587,-0.074697,7.078463,-8.669932,-1.846893,0.103743,-2.771871,7.012614,5.071939,-8.099890,-7.544427,5.082621,9.523788,3.791647,0.468029,8.204324,1.872837,0.502163,7.190971,-3.571564,-9.695742,6.349500,4.474543,5.985822,1.550111,0.195017,-7.081480,-7.726957,-9.593627,1.746242,7.248013,9.325020,-2.889587,4.548342,-9.598397,1.470207,-0.699999,-7.753465,6.270944,-1.073209,6.355984,-5.353129,-2.692317,0.944310,3.975102,-0.485573,0.572590,8.690279,-5.690275,-9.682970,-3.183471,-8.773998,-4.135412,1.677511,-0.144263,3.216940,4.624501,5.089794,-9.835347,1.742913,0.493700,9.444149,7.004261,-7.548263,2.349594,4.178013,-2.849440,-2.138453,-1.512829,-7.707472,1.985527,-4.597622,-1.587037,-7.666682,-5.876228,-9.585250,1.867316,9.153263,-4.971558,5.011231,-6.170304,-2.628118,-5.447551,2.130186,-6.961545,9.168819,6.545966,-5.216330,1.569602,8.218994,-6.488353,-4.072814,7.721711,5.738869,6.859872,7.638187,2.687617,5.113131,4.417363,-5.980934,-9.776632,5.898030,4.663441,8.625962,7.079213,-9.182197,-4.176341,6.555444,-2.283278,-2.611342,1.373396,2.565795,5.802776,-0.235229,-3.012928,-2.806272,-3.577202,-1.969650,2.555748,7.017330,-6.524320,0.522469,-3.512398,-5.456583,1.249919,-0.455557,2.337528,9.942530,-1.968344,3.225424,-2.266789,-2.894046,7.946507,-5.381226,-0.257097,3.798425,6.537176,-8.847851,-6.264911,6.630582,8.212301,-9.697479,7.840549,5.117191,-2.863013,-4.859949,-8.202333,3.444628,-0.597279,-8.322888,6.804981,0.212727,-1.288989,-9.307914,8.009637,-9.097926,-0.577722,6.799529,-2.301733,6.521008,2.698678,2.081309,-8.308505,6.228094,-1.147045,-8.926227,-2.267583,4.228792,4.670316,3.229596,9.692952,2.706592,-3.796189,4.053916,5.581804,6.370040,6.459196,-2.361076,-4.989036,-3.482668,9.256237,-1.499051,-7.541077,5.544423,-9.492597,-0.176608,-8.863394,9.982371,-5.880852,-6.504888,4.959566,-6.254597,-1.039791,1.037020,4.374334,-5.073858,-7.075637,-7.280353,-9.747402,-1.885565,-6.798111,-3.849895,-6.253030,4.645582,-0.139996,-8.062042,-5.261850,-9.224457,2.579320,2.581629,9.524771,9.840213,-1.169762,3.259868,6.589541,3.538019,-1.261050,2.492356,8.931331,-6.181745,-6.995482,-3.237192,8.027202,6.764409,-4.723213,4.092247,-4.421467,5.904511,-6.281722,9.305415,-1.324850,7.648694,-2.027220,0.119614,-7.962766,-4.797054,-0.356008,6.434378,2.921097,-6.986659,4.600294,-7.560704,-1.412157,-2.572976,-6.369471,4.494454,7.163827,0.352075,0.028049,1.852484,-9.548170,-8.575363,-6.415216,8.393510,-5.931409,2.827088,2.466111,-3.489000,2.125487,2.766573,-8.885531,-7.233414,3.009961,-6.717471,-7.795944,-7.126454,7.189855,3.444734,-1.964044,8.640347,-3.267654,-3.957013,-4.217273,-2.000843,-2.422615,7.646383,-9.984810,-0.621212,-0.067855,-3.577146,-5.360152,6.803425,9.535314,-1.365480,9.882887,-5.828147,-2.266823,-9.851687,3.233725,8.024165,-6.084221,7.557398,-3.255050,-3.480057,-7.351512,-5.365021,-1.961031,-4.017407,-4.525683,7.520726,-0.204378,-7.358192,7.008737,-1.841213,7.071473,-0.670030,-3.667153,-7.517429,8.888904,8.469410,8.207367,-6.429755,-3.754480,1.764889,2.066830,-5.652499,-4.122315,2.548517,9.305504,5.489735,1.281048,-9.381906,5.006644,-4.536868,-8.608077,-9.997701,7.572582,6.946615,2.317608,9.512682,0.878592,-3.220214,-1.845458,0.016032,7.122891,-1.452303,-0.293551,0.246309,8.757462,-9.356723,0.848122,2.784701,-0.357508,-1.301236,9.581193,-6.875081,-4.360302,-0.414410,-7.932756,-7.687619,-4.650045,-8.615384,-1.895172,-0.256552,-4.894130,9.198001,6.165015,-4.720684,0.192534,6.663221,-4.554111,5.625483,3.809968,4.092469,-0.692161,0.211782,-8.417437,2.095451,2.440786,-6.391919,6.626093,-4.949592,-2.299489,-6.883281,9.587619,-3.005791,2.797610,-6.064273,-5.815789,1.305684,-2.390936,5.267859,-8.780957,1.176971,1.115458,2.060118,0.771448,6.835408,2.623209,6.152325,-6.749456,-9.606310,1.309966,-5.003192,6.687672,-8.921709,-6.032472,-5.832547,8.871887,8.065433,-7.985763,1.378650,-0.759510,3.198781,-5.683041,-7.467360,2.046217,-6.396981,-2.805387,-7.726540,-5.402764,6.224030,-5.877531,-8.431873,6.867075,-7.187641,-7.980720,8.930061,3.951752,-6.677606,4.764877,-4.940127,-1.407116,7.001126,5.224203,-5.848892,2.625637,-4.705640,2.329372,2.682709,-5.185306,-4.065662,1.062384,0.734290,0.309213,-1.898158,4.471865,2.925818,2.246364,-5.592946,-4.599412,5.329828,-4.522782,7.210061,-9.596795,-0.973883,2.026432,9.722108,-2.744825,5.361116,9.326813,-7.070304,-6.533817,-2.512332,-1.338601,-4.388997,8.737774,-9.647999,5.048334,4.833139,-5.928141,2.931144,0.538238,-9.584951,9.785313,2.233933,7.920707,0.048169,0.232687,-8.339384,-4.093995,-3.109435,-1.087289,5.892861,-8.795962,1.700605,-4.772335,-0.313769,3.888396,0.963348,-2.865162,9.223754,-8.665421,2.185763,-5.970665,-2.319233,-2.114124,-5.192198,7.499443,7.629778,0.575004,6.419640,5.864671,4.596408,-8.996894,4.111468,6.133140,9.011639,-2.059665,3.886430,-9.664477,4.430508,-7.515116,7.527887,-7.389390,1.145878,3.582678,4.758781,0.783256,5.406497,-5.856409,-1.593783,-6.342656,5.408678,1.707900,3.580602,-8.483610,-2.759286,8.924123,2.260823,-7.529684,7.915358,1.207326,-0.858341,2.732635,-3.545624,8.865653,4.130683,-5.569050,-8.410733,5.769332,0.509037,-5.142962,-3.194522,3.117789,8.934229,-1.716450,1.460337,-0.548570,-4.326464,-0.920202,6.403201,-3.143226,9.324185,0.539155,-8.766195,7.270360,6.242138,9.419683,1.353077,3.647323,2.020350,8.946926,8.794306,-3.511007,4.599722,-1.527942,-8.154928,7.037484,-9.543494,4.470441,1.025175,-0.422661,3.491560,-6.220615,4.565644,2.420628,-5.775719,1.730471,-9.027290,9.606121,-4.400919,-4.178531,-9.408882,-1.959334,0.179853,8.815264,4.474895,6.132558,-8.784428,0.497790,8.946472,-0.160398,-1.143670,5.647301,9.619485,-8.082605,-9.562401,2.265014,5.788874,8.486413,6.720043,6.705556,9.557517,7.091519,6.932638,7.097898,-0.451282,-5.028422,1.419724,0.974523,-6.510821,8.724366,8.937505,-6.370122,-2.742309,6.571541,-2.818352,-6.457067,7.950040,0.598136,8.626699,9.644002,-7.001754,-9.277914,3.584579,9.608438,1.563623,-6.918837,6.983554,8.946035,9.365056,1.919035,-1.772560,0.311974,-7.991860,-8.632730,7.825965,4.653634,9.047262,3.592267,2.458673,-0.458770,7.637955,4.009522,9.404431,6.666209,4.224814,6.933943,-4.876069,7.553005,9.709024,-8.985386,6.630665,0.101642,9.194587,2.512643,8.958776,-3.411928,1.254072,4.092736,-4.692932,0.256295,0.785739,5.192151,5.255010,-0.380097,-6.146207,0.037510,-5.034040,-1.544274,8.884975,1.974269,-8.343358,-0.752040,3.024623,-8.066218,-9.939809,-1.088131,-7.109925,9.679479,-6.921142,0.036534,6.003754,1.635957,7.127854,8.618207,3.130043,2.743330,-5.001710,4.264428,4.728986,-3.799966,9.441653,5.047448,-4.298383,7.686517,6.534470,-9.639019,7.110635,-8.215593,9.427822,-7.860035,-1.454162,-4.674453,1.513501,2.549735,-7.098532,-1.409137,-7.125020,6.277311,-4.234586,4.820482,1.101343,-6.116568,5.627700,0.342200,8.096616,-6.530916,3.696660,-3.869643,-5.254086,7.742988,5.522208,5.398334,-7.094874,4.792176,5.357684,-5.083121,-2.258605,-9.573614,3.103811,-0.771273,7.202676,4.802142,-8.312255,1.352839,0.475655,8.652831,-5.467514,-9.559303,8.576677,0.385522,-3.644327,-5.572493,1.984644,7.475750,-9.120707,9.105962,-5.857860,8.351990,-4.647046,4.436770,5.459901,2.272747,3.693222,-9.622561,2.605851,-7.561159,9.203521,-9.966537,2.456815,-9.593716,6.796845,3.816714,-1.770193,-0.911773,2.206149,-3.207890,-0.839352,-9.077402,8.814067,4.169135,-4.993091,-8.654264,-7.488056,-6.205349,-8.099953,8.475876,-2.639983,8.497276,2.958204,-6.681262,-8.091698,-0.863503,-4.408301,-6.093400,9.422779,-9.862559,9.904004,-9.729718,3.046390,0.730254,5.743485,0.624527,8.131370,-7.012506,5.758106,6.492975,7.694519,-7.743016,-8.371891,9.999330,-6.168331,-4.530070,-1.117995,7.991190,4.092094,-8.317772,-2.621193,7.423617,-7.678997,-5.377301,-0.364134,5.155764,2.340350,0.806158,4.831548,-1.911480,-0.873228,2.251213,1.154311,-8.106014,-6.894208,2.116596,-8.376076,-2.358446,-0.990268,-7.610231,9.407146,-5.229139,-3.948368,-1.466608,-4.280485,1.085279,7.097239,0.147159,-1.905175,-8.144168,-7.370741,5.790925,-2.387499,-9.434538,-6.510856,4.511843,-3.124622,0.492653,0.941588,-6.884415,-7.350024,-6.184301,0.288841,-6.291425,0.660785,-9.109602,-5.110880,-6.543496,7.595228,9.971409,-7.264271,6.418962,-5.684558,1.776626,6.371882,2.734789,4.937334,7.075083,0.433436,-3.080165,-6.270195,3.346767,-5.561645,3.838463,-7.886618,-6.574111,7.088743,2.457323,-1.241959,6.299179,0.892965,9.317803,-8.643592,3.855653,-3.638334,-7.759768,-7.819210,7.984547,-7.222928,-4.981186,5.403803,4.346176,9.516085,-5.690104,8.993816,2.746219,-7.686479,4.269200,4.345273,-1.508481,2.666908,1.419182,-4.693657,-6.492215,1.353530,0.986143,8.868235,-9.807759,-0.709541,-8.732577,-6.828401,-8.908227,-2.638201,-1.556178,-7.044694,7.374286,0.039783,8.597780,0.921445,-4.546243,-4.682660,8.269596,-9.485404,-6.671605,-2.844107,-6.474920,-6.628480,3.700732,0.244367,3.656399,4.379717,7.290777,3.879356,-6.425410,-0.707403,6.203259,6.371751,1.341848,-0.244603,-6.449151,-8.333950,-9.767343,9.398106,-5.683168,3.856389,-3.726291],[-2.514549,8.806135,-7.344088,3.326240,0.776695,9.096590,9.394611,-2.754126,8.190536,3.174216,-5.498811,-8.970243,1.112418,-9.142488,-3.640592,0.527189,-8.951585,-1.226081,7.578654,7.782870,2.987007,6.868871,8.328005,-7.075241,-6.665935,0.070868,1.255177,-8.919913,-7.097662,4.223271,2.125050,9.755644,-9.344490,-4.860909,4.601048,-9.208060,-5.061968,-6.732104,8.761861,-7.640092,-9.846190,-7.575946,-4.548727,-4.714731,1.024297,5.981109,5.146859,-6.499383,1.746019,8.365234,4.711141,5.438427,0.754543,5.677833,-7.696955,-6.822215,6.864840,4.990485,0.578477,-1.064697,8.775226,8.692205,5.383722,-1.388832,-6.261633,3.996379,4.575764,1.166719,-1.641722,-2.221204,5.192086,4.352351,5.731455,-5.976644,0.492553,-6.849952,-8.682898,2.806446,4.411888,-6.163482,5.982027,0.106782,-0.842761,9.815395,-3.952127,-8.453315,-9.586276,-1.377503,-9.616766,-8.001489,-3.574730,-0.128782,-5.799267,-7.811736,-0.713343,2.061397,-2.546304,-8.918796,8.169864,-8.396652,9.996048,9.360146,-7.162144,-1.139068,-3.162043,-6.987805,6.765657,-1.434902,-7.984799,7.799003,4.868289,-2.565564,-0.356709,5.753425,-3.392160,9.212381,-7.632167,2.623522,-8.546390,7.052424,-1.300041,8.442735,-9.375282,5.006736,-0.727723,3.787707,2.637998,-2.887298,4.307183,-6.270674,0.737251,5.221955,-0.869733,-4.270309,-6.553357,-1.856213,-8.280398,-9.079520,8.980002,8.620721,3.276403,8.584176,4.039515,-3.831006,9.267685,-8.970307,-1.814375,-0.075132,8.611079,9.363400,-6.018899,-6.914613,-8.383011,-5.957447,9.538446,6.860863,-0.689529,0.318076,-2.541967,-2.992116,-7.068903,-9.650454,7.979321,-3.077024,-5.332511,-5.024892,1.629582,4.923784,-4.936588,7.886914,9.782255,-6.160462,2.499724,6.618879,3.806297,-6.967735,1.863959,-2.803089,1.304678,4.299051,-4.336032,9.259709,-8.728460,2.603903,-2.569595,-2.756559,-5.155039,8.152416,7.494315,4.561566,0.123406,-1.271208,8.436480,7.990116,8.941147,-0.962101,-9.503869,0.387323,-9.343936,6.545159,1.925153,-0.809378,-6.487715,-4.372652,0.960399,-4.294062,1.149315,4.439749,3.352251,4.698108,8.884341,8.043565,9.623907,-5.639706,9.274489,-9.515326,-5.183320,-4.289628,0.788918,-0.872273,3.408490,9.741765,8.895629,5.678582,5.682328,-8.200584,-3.292535,-4.436804,-6.958777,1.473867,8.602671,0.001565,-2.779102,-7.782846,-1.208400,-3.135738,-7.626824,-7.645254,-4.349100,-4.946186,-9.989251,-5.463358,-9.166198,0.992967,-1.941199,4.414516,-0.083484,7.530206,-0.657844,-0.874212,-4.888102,-5.623363,-1.764091,-6.994780,-1.947220,-2.013692,8.570190,7.737157,-3.768551,5.599316,4.886243,-1.199072,1.180733,6.814141,8.890491,-6.319178,-2.095580,-6.576196,3.945843,-1.137704,-1.127082,-0.673537,4.087691,8.415244,-1.442564,-4.765365,9.197139,-5.395235,-3.928916,4.409993,0.713717,4.311618,-0.071861,6.345235,1.606209,-1.859047,-9.041004,1.556578,-3.162560,9.354221,4.444612,1.541988,-6.249487,5.378461,3.273904,9.167671,-7.015249,-3.539609,-6.629791,-4.470468,0.829361,6.148210,-0.067024,-6.945745,-5.450520,4.966055,7.068375,-8.594225,-1.432348,5.741833,-1.598588,9.718649,4.607907,-4.428622,6.069604,5.741857,4.358408,-2.658244,-9.127147,-1.408913,1.148930,-1.750685,-5.058535,-3.006163,6.684310,-1.801608,-2.240936,-6.571585,-4.792657,-1.092729,-8.733589,-6.249776,-6.712995,8.615785,8.846192,8.874299,0.109106,-3.950027,2.122647,9.136469,-5.246648,-0.945464,0.980102,-7.500870,2.439905,8.702417,5.278490,3.297231,-8.168700,-7.779796,5.107385,-1.167482,0.729419,-6.139098,-1.896441,0.219861,-2.835070,7.672124,8.259268,3.773033,-8.174352,-5.485159,-3.212664,-0.951942,-5.048770,5.567801,-1.332748,-1.403088,-7.653108,-8.068547,-8.903575,3.737027,-0.084641,-1.571176,-1.298954,-7.221818,-7.503929,-3.000650,0.531302,-8.965965,4.797797,8.417242,2.203845,-6.111989,-4.122851,-5.609998,-5.996944,7.771568,9.972296,-3.000447,7.493228,-0.997643,0.038519,6.848794,3.739669,-6.942193,3.356905,5.090503,-8.962493,-4.639829,-5.320779,7.713586,-7.157347,0.537170,8.527760,0.540554,1.255163,-8.560583,9.505108,8.475947,4.308376,2.519474,2.772817,-9.421882,-1.474273,-6.253319,8.921015,-7.932734,3.415284,8.243853,3.679469,0.842678,2.278804,-1.303295,6.775556,5.260568,8.999355,4.958406,6.116759,-8.077402,-8.223258,5.473031,1.619508,9.123692,9.844852,3.785794,-5.315572,7.650100,-8.872813,-2.528946,7.123469,3.364616,-1.663120,7.996503,-1.588284,-9.641298,4.756400,-4.227890,6.792493,2.982616,0.968737,2.575366,2.921435,7.855441,-4.459360,-7.827624,4.642642,0.702956,-5.396600,-0.707397,-0.965362,-9.947171,-8.521986,-5.241276,-3.266188,-7.766906,-9.426496,0.909462,4.852943,-8.581712,-0.178477,1.135919,-0.827039,-0.312990,-5.369975,8.781575,2.466410,-8.345774,-4.764187,8.772398,-6.887102,-6.501743,6.196653,-2.263580,-9.048346,2.049032,8.198966,7.923262,0.925154,7.727923,-1.121371,-1.841198,-4.606745,9.598478,-7.742157,5.462902,-0.051109,6.585747,-9.240323,-0.102486,-5.065821,3.783736,8.606818,2.054303,-0.251290,-7.560260,3.177864,-7.181050,3.160597,4.482925,-2.493330,-9.334011,-4.372441,6.903618,3.420747,-2.118741,0.399147,-3.907332,-0.781002,1.726668,-0.159145,2.873716,-5.092241,8.715813,6.819311,7.409525,5.370224,-6.480856,-2.453905,-5.374281,-6.042993,5.550463,1.670144,-5.842094,-6.089999,-9.223932,8.044045,-2.268950,-4.635974,7.714198,-7.117636,6.741637,-2.316615,-6.685892,0.513874,-2.856666,8.360586,5.837649,7.281681,-8.746664,9.394314,-8.665210,-7.979379,0.780392,-6.362450,-3.946015,7.009789,1.523518,9.865592,-4.942863,-5.282876,-1.930519,3.647029,-3.438439,3.301373,-8.301572,-5.625076,8.076317,1.699208,8.178801,3.330927,0.656447,3.749992,-6.030551,-2.171700,-2.549153,-6.684254,-9.874533,-4.310218,-3.699611,8.283343,1.867752,-9.116581,-8.436724,6.281840,4.012427,4.354172,7.538780,7.802207,5.107499,4.004606,2.303870,1.941409,6.084399,-1.298285,2.039418,-4.228223,6.771812,-1.587284,-6.641570,4.559181,-4.721351,-6.973412,-4.535290,-4.609413,1.957503,2.127538,0.277142,-1.792539,-5.390066,-7.225517,-0.920312,-4.062574,9.550090,9.104018,-7.121768,-2.305040,6.721918,4.726836,-9.266888,-8.083460,5.828137,-1.570618,-4.642754,4.570268,-5.458138,-0.110150,-0.966954,-3.354703,7.303301,7.205885,4.933856,5.196368,7.209599,-2.461028,-5.188618,5.654217,-5.224181,-7.905320,2.180123,4.399232,8.362146,-2.371379,4.482481,-3.182415,9.806661,-6.560074,5.812741,2.009932,-6.558556,-0.746055,-7.020772,-7.452468,-8.782742,7.129513,-7.661179,2.458058,1.656642,1.460316,-3.516768,7.669982,-8.320766,-3.699408,7.868346,-6.227247,5.619258,-8.046935,-0.288391,-4.954087,5.558739,-5.509615,6.066547,-8.521202,-6.369654,1.473968,8.528802,-2.037549,-8.724373,0.819370,-7.443271,-2.772808,-7.248849,-8.756683,6.188253,4.163987,-1.509978,1.124040,8.717595,-8.375356,4.007569,3.607104,8.508790,-2.312893,-1.480682,3.593859,4.818264,6.393315,3.898376,8.909023,-6.583783,8.629700,-7.243758,-5.095494,-9.924743,0.672562,-4.968956,-4.951478,-0.306919,-2.100797,-1.212531,-4.514541,4.079231,-8.720182,9.038584,4.145070,-6.153346,-0.173936,4.199388,8.506280,-6.562554,-6.463801,8.652619,-8.055603,5.631979,-5.615907,-3.787597,-7.013667,-3.810889,-0.058637,-3.413821,-1.098732,6.646236,3.762658,3.526790,-6.675699,-1.698505,9.224264,-9.737733,3.453041,-3.227553,7.977775,-2.271474,-9.540278,-2.564165,-8.435700,-4.616498,-1.156652,-7.534172,7.359649,-3.390780,7.249438,-0.422191,-8.504932,-9.723564,-1.348548,4.313916,5.657297,7.384003,9.757356,3.198055,-8.364517,-8.818033,2.282012,3.547172,-0.588252,-1.685884,-7.617105,-6.758617,7.336977,-2.563267,9.213801,-1.519418,-7.827214,-2.269538,1.817530,7.129499,-8.339322,-2.095557,-8.941421,-2.857522,6.342341,-1.837487,2.548760,-7.546433,6.752699,-3.858789,9.963581,-2.820553,3.653277,8.975291,-3.587455,-2.105784,-6.345818,-2.342603,-4.884095,4.047744,0.240803,0.230328,0.894165,-9.583085,5.954855,9.732308,9.710179,-5.059335,0.673398,4.894930,-6.804947,-5.836461,6.327304,-1.350695,6.755561,4.836365,3.318593,1.120246,8.594392,-2.012533,-3.449087,0.814084,1.293599,-4.086814,2.421298,-5.223171,-8.910868,-7.458804,0.731317,1.247897,-0.388938,2.600633,-0.371154,-9.826620,-3.915309,-6.650086,7.205599,-1.386338,6.534636,0.139287,5.030327,-1.222022,-9.761219,0.182840,9.114992,-8.455481,5.207222,-4.757048,-5.319262,5.990019,4.616168,9.902975,2.611761,6.253074,9.988241,7.063356,-6.237837,-9.429999,-0.180743,-5.653604,-8.057624,-8.293082,-8.103061,1.679528,4.499069,-4.191236,-4.357833,8.999406,6.463249,-9.465708,0.185207,5.079112,-5.191539,-9.437654,5.447462,-9.058589,7.470626,-2.146596,4.444714,-7.765263,-5.415782,2.268946,5.183895,3.780290,9.667042,0.598743,7.590814,-7.200135,-3.836934,1.128089,0.922592,0.915621,-8.803579,5.766022,-7.529800,-0.076620,-8.664617,7.531803,5.714397,-2.538659,6.075072,9.285919,7.507998,-9.862573,8.771484,1.972925,7.192800,5.109607,-4.986930,-6.198653,1.499622,-1.254982,-4.776980,8.262093,-8.142349,0.826939,4.462827,-2.933978,-3.829549,-2.762481,-0.406673,4.653931,-1.287874,5.795184,2.849149,1.794864,3.264064,-1.655476,-0.477744,6.341338,6.393106,-9.364767,6.976826,9.070822,5.599414,7.259699,-1.850050,2.993436,-2.780761,2.756067,-0.565593,-1.064713,-2.051700,-8.034564,-8.860313,5.243178,-2.663166,-9.488315,3.400636,0.884180,8.073627,-0.296792,9.868095,-1.841151,6.908948,9.622568,5.661572,0.698601,-6.443276,-5.234026,2.334586,5.206501,2.951931,8.200351,4.655108,3.176592,-7.176718,-8.421114,8.064752,3.223194,1.329325,6.735246,-5.578704,-5.995381,-5.460999,1.934732,2.216889,7.855988,-0.789536,2.653792,6.733947,-1.090009,-8.654283,-9.657076,7.843152,-7.885562,-7.410327,4.428316,-4.404324,-7.188347,-9.383837,-1.051726,-3.591624,-2.932001,4.089755,-9.223074,-8.723134,-5.206981,-7.931179,6.055378,-0.680554,-4.590111,3.686098,4.332526,2.503285,-0.476738,0.364835,6.531156,-4.292247,-7.365857,4.190816,-4.593955,6.440145,3.104670,2.243082,1.291460,-3.840394,6.605863,-7.297648,-1.335354,-7.943156,6.179845,2.393416,4.316291,2.864186,6.514373,-8.905982,-7.586664,-1.106118,0.049466,-0.467106,8.433056,-3.810629,-0.894034,5.789664,7.493875,4.751712,1.516609,4.853676,-2.752063,-4.888207,-2.719325,-9.990048,-9.674204]], dtype = "float32")#candidate|4148|(2, 1040)|const|float32
call_4147 = func_1013_call(relay.reshape(const_4148.astype('float32'), [16, 13, 10]))
call_4149 = func_1013_call(relay.reshape(const_4148.astype('float32'), [16, 13, 10]))
output = relay.Tuple([bop_4133,call_4147,const_4148,])
output2 = relay.Tuple([bop_4133,call_4149,const_4148,])
func_4151 = relay.Function([], output)
mod['func_4151'] = func_4151
mod = relay.transform.InferType()(mod)
output = func_4151()
func_4152 = relay.Function([], output)
mutated_mod['func_4152'] = func_4152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_4163 = relay.TupleGetItem(func_4151_call(), 0)
call_4164 = relay.TupleGetItem(func_4152_call(), 0)
uop_4165 = relay.sigmoid(call_4163.astype('float64')) # shape=(9, 12, 8)
uop_4167 = relay.sigmoid(call_4164.astype('float64')) # shape=(9, 12, 8)
output = uop_4165
output2 = uop_4167
func_4170 = relay.Function([], output)
mod['func_4170'] = func_4170
mod = relay.transform.InferType()(mod)
mutated_mod['func_4170'] = func_4170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4170_call = mutated_mod.get_global_var('func_4170')
call_4171 = func_4170_call()
output = call_4171
func_4172 = relay.Function([], output)
mutated_mod['func_4172'] = func_4172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4170_call = mod.get_global_var('func_4170')
func_4172_call = mutated_mod.get_global_var('func_4172')
call_4191 = func_4170_call()
call_4192 = func_4170_call()
output = call_4191
output2 = call_4192
func_4202 = relay.Function([], output)
mod['func_4202'] = func_4202
mod = relay.transform.InferType()(mod)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4202_call = mutated_mod.get_global_var('func_4202')
call_4203 = func_4202_call()
output = call_4203
func_4204 = relay.Function([], output)
mutated_mod['func_4204'] = func_4204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_4205 = relay.TupleGetItem(func_4151_call(), 0)
call_4206 = relay.TupleGetItem(func_4152_call(), 0)
uop_4210 = relay.atan(call_4205.astype('float32')) # shape=(9, 12, 8)
uop_4212 = relay.atan(call_4206.astype('float32')) # shape=(9, 12, 8)
func_4202_call = mod.get_global_var('func_4202')
func_4204_call = mutated_mod.get_global_var('func_4204')
call_4221 = func_4202_call()
call_4222 = func_4202_call()
output = relay.Tuple([uop_4210,call_4221,])
output2 = relay.Tuple([uop_4212,call_4222,])
func_4228 = relay.Function([], output)
mod['func_4228'] = func_4228
mod = relay.transform.InferType()(mod)
mutated_mod['func_4228'] = func_4228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4228_call = mutated_mod.get_global_var('func_4228')
call_4229 = func_4228_call()
output = call_4229
func_4230 = relay.Function([], output)
mutated_mod['func_4230'] = func_4230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4202_call = mod.get_global_var('func_4202')
func_4204_call = mutated_mod.get_global_var('func_4204')
call_4264 = func_4202_call()
call_4265 = func_4202_call()
func_3650_call = mod.get_global_var('func_3650')
func_3652_call = mutated_mod.get_global_var('func_3652')
const_4267 = relay.const([-7.651527,2.138138,-4.735202,1.429866,5.196361,7.541919,-4.789765,0.211130,6.199571,2.767213,7.142806,-1.074234,-9.272474,-5.984785,-8.320234,9.146320,6.577396,-8.987731,4.361204,-1.566017,2.589857,-4.085515,-6.347960,-0.904687,0.639816,-3.060433,5.615835,8.149193,6.295626,1.824009,9.185427,-1.462797,-3.376921,8.668530,5.554689,-8.220017,5.528815,-8.378404,-1.508865,1.956276,9.629759,-1.999366,-7.367273,-9.089951,9.769120,-2.402832,-1.989928,-2.876721,7.406044,-5.750900,4.474137,3.008411,0.906034,-5.648632,-5.235522,1.511298,-6.520987,2.875394,-4.059469,-9.262638,7.273346,-0.564911,4.740972,-5.316454,-0.134131,7.069979,6.442793,4.082135,9.200908,-6.418044,6.337990,3.776023,4.171630,4.167835,-9.511100,-2.565782,-7.594256,-1.983409,3.948750,-5.538933,4.993489,9.475881,-7.823357,-7.056048,-0.971902,-3.304103,-5.047576,3.351602,-5.309408,3.502847,-6.716001,-9.178483,4.293383,5.990991,-3.424574,-3.386129,2.624916,-4.044956,-9.113035,3.614445,-7.405376,7.098709,5.479985,-7.090170,0.669384,0.511197,9.721074,-5.224774,-8.953572,5.927414,6.726060,-0.674857,0.755789,-8.798200,0.379923,9.419360,2.151525,7.863117,9.746443,-8.557671,8.536077,8.835219,-5.259044,1.144443,3.923288,1.183090,9.601905,4.456983,-4.209970,-3.695227,-4.052593,1.438085,-2.577974,-5.174820,2.825083,-1.300744,-2.668892,9.155534,8.170291,0.562304,-4.139465,7.661637,5.415826,-2.115500,6.510926,4.600717,-6.520118,5.410129,1.408172,6.976376,0.545507,-7.416437,1.176429,-1.335576,-8.774872,9.208110,-6.391257,-2.297399,4.595891,9.125834,-1.770426,-4.050181,-8.110479,3.398284,-1.155094,-4.567453,1.200482,3.814466,-3.364775,8.479551,-4.802942,0.554525,-2.721712,-8.130999,2.227011,-3.810679,-8.060554,-4.435574,-4.581593,4.135344,-3.446902,-1.903131,-2.415333,-2.989540,0.919405,7.066255,-8.009274,-6.300633,0.043308,7.557926,1.694111,-1.534308,-3.312500,-5.213466,-8.014516,2.603620,8.751853,-7.526152,-0.743312,-8.595172,0.077850,1.798858,7.149466,-0.330791,-7.605198,7.922319,3.037430,4.535747,-8.174741,-9.110464,7.462920,-4.226404,-5.574899,-2.986443,5.007581,-9.750822,2.683242,8.823950,-1.026153,9.036087,1.640506,-1.907765,-5.155005,-5.378222,4.874784,9.046124,9.870162,5.050284,1.955860,-5.285658,-4.928663,4.880282,-8.915954,-7.892946,-7.888291,4.554264,-4.252321,-8.113119,3.273124,-1.249786,9.639149,-3.811327,1.992943,-8.485663,6.511971,1.107053,-4.717789,8.347569,0.419583,5.143094,4.259200,9.036802,-8.581929,-6.409559,2.950019,-6.680647,6.145861,1.468154,-1.299472,9.564052,-2.358116,9.824339,6.418341,6.250797,1.235220,-3.353336,3.037953,-0.111881,0.678242,6.490631,1.896054,9.134598,-4.753812,2.441311,4.118448,4.401420,-4.575781,-5.842499,3.444111,-2.192540,-0.537707,-3.888250,1.686734,4.791590,0.581287,6.408046,-4.756269,9.995184,6.083537,1.768759,2.149942,-2.785063,4.424348,4.649821,-0.077504,3.786015,-9.837533,-6.217279,1.939035,-2.109741,-2.790835,5.133950,7.910110,-8.619188,-0.119114,2.542248,-6.595316,3.520730,-2.815556,-0.986675,-2.019462,9.951837,8.352843,-7.021237,1.407022,-7.610052,-3.233872,-1.189856,-2.414551,-7.089396,-8.147119,6.432342,0.124815,-8.171725,6.619226,-5.941683,3.784057,7.660567,5.682301,4.376801,-7.817223,7.265474,2.983975,-4.788885,-0.404287,-2.018803,-6.377469,3.103414,-8.110232,1.366346,-4.114188,-0.710388,3.748189,1.859318,7.311231,5.079117,-5.067404,5.863176,-8.680076,4.403992,-8.769067,9.880738,3.168893,0.067026,0.592185,-8.002142,-1.683923,3.129053,-2.351739,3.839399,2.502224,7.180184,4.470831,7.725799,5.364779,-9.584909,3.062842,-5.341643,-6.780758,-8.233358,3.563687,6.368724,0.527249,3.640738,2.613991,-1.070269,-5.453724,-0.221090,-1.994004,6.678431,5.535995,5.469582,-2.296170,9.327338,2.989340,-2.697477,-9.316016,5.600937,-2.820082,5.822994,9.569294,-3.958232,-0.907216,8.516202,-2.769202,-7.522723,-5.479561,-5.426853,1.706028,8.787785,-7.837784,0.151248,8.721667,-0.694693,-8.959109,-6.521915,4.824466,4.954969,6.659376,-6.423977,4.198919,5.078063,2.968657,-0.973261,-6.059757,9.832879,6.597976,3.328076,5.906558,-3.146993,-5.789839,8.041070,2.226669,8.707212,5.929029,6.629171,-3.302972,-3.251385,-5.784702,-5.380855,-6.342444,9.024525,2.253556,1.643535,1.138373,-6.052161,-7.847070,9.851232,-8.133557,-6.336137,3.086784,-7.140166,2.844100,7.388416,-5.809599,-2.016699,5.576271,-0.361524,-5.269124,-5.683020,-7.567861,8.592263,-8.792501,-5.053585,3.493267,2.636929,-9.494723,-7.542858,-6.572369,-5.402588,-0.629419,-0.366579,-6.867008,-2.104732,-8.054741,-1.210625,6.734844,4.949238,2.863424,-6.734445,-2.863384,1.620783,5.954500,-1.361655,0.752978,-8.632813,7.471949,7.606108,-1.188526,8.589478,-5.051142,4.364317,7.995083,-5.209121,-6.847924,-9.611192,-2.755774,-8.937458,0.884290,3.971384,8.935853,-1.724941,-6.216919,-7.778141,2.889086,0.502114,-7.201844,5.252749,3.069989,-8.106068,-5.351800,4.043882,-6.160637,1.936190,-4.132435,-1.246469,-1.263112,8.338638,-5.037989,3.911686,3.314595,-8.547754,8.017930,6.187642,2.727058,1.028130,-0.237284,-7.914668,-8.388641,3.681300,-7.954699,-3.854408,-2.462428,-6.789927,5.057764,3.278010,-5.487444,-6.603625,8.611884,8.008215,5.954716,4.619286,8.750982,-3.184903,6.951314,-8.224213,7.106649,-1.880590,-4.871023,6.133409,0.444175,-4.036052,-6.146809,8.012720,5.320764,-5.084707,6.266430,-1.981293,4.557304,-8.693519,-8.685994,-1.536938,4.826964,-3.877018,4.954716,-0.365715,-7.053660,2.865031,8.002641,-1.682285,8.968744,-8.620299,-1.152777,0.627950,6.033140,-4.870127,-3.218585,-8.908701,-8.964785,-1.362171,-3.654593,-0.542075,3.213168,0.913802,-7.678510,7.998153,-6.021612,6.029650,3.729120,-9.081449,-2.141515,-4.195430,4.920593,4.484762,9.758133,-3.189654,-8.079820,-6.490783,-5.356292,-4.011315,-9.360792,-4.447158,8.117546,9.993165,-7.596702,-3.303631,3.058315,6.877319,5.270876,-3.017289,-0.934503,-6.011818,7.114837,4.315334,-3.373997,-0.639645,1.533623,6.496625,-2.069847,8.187645,-5.606934,-9.380021,5.758285,-8.288708,-5.498383,8.502811,2.794611,1.980170,4.096001,-1.095924,-8.322215,-4.267000,3.350761,1.240767,-9.314158,-8.191219,-9.695819,-8.042040,1.688215,-5.148956,8.380958,-0.086697,6.780672,6.725474,-0.529233,-6.857720,2.731982,0.788996,-6.797817,-2.999929,2.720522,7.837498,0.928470,8.076206,-9.333706,-3.449321,-5.543767,1.442500,-0.626442,-2.991480,-3.973346,-0.688128,6.379220,3.707132,-2.618199,-5.457173,-6.573645,4.282768,-6.114545,-2.735926,-2.808938,-2.219872,-7.387119,-0.272523,0.192249,8.144097,5.739061,2.604501,8.664433,-1.136278,-2.593079,-8.257890,-4.587275,1.980822,-5.961068,8.848153,-7.914259,6.155907,9.333689,-6.009400,-4.295092,2.820916,1.197740,-5.502031,1.650004,-8.789852,-3.586630,-8.879728,-1.755789,9.101900,-0.088546,1.526796,-4.149022,9.190777,-7.600348,-7.372354,0.472008,-8.283736,-5.514781,-4.741864,4.080716,-3.236242,0.885659,-8.313543,-1.055411,-6.954991,-9.932396,9.620720,9.910930,2.836542,-2.550876,-9.601180,0.671851,-1.527446,-8.002073,6.556251,0.688492,1.504808,-3.369688,-0.671296,8.773259,4.479268,-9.306755,-8.162211,5.907960,3.648857,-5.882847,-0.186878,-1.110953,8.058174,7.451122,-0.842203,-7.605640,7.124392,5.244385,5.526281,-2.529263,1.659411,-5.807498,-2.954150,2.326539,0.759424,-2.004113,8.729397,0.843510,7.104267,9.129123,6.034917,4.854938,-9.120427,7.626245,3.908541,5.939559,-9.063630,-5.781045,3.121245,3.837591,2.158089,-7.743085,-6.853235,-4.515654,-5.787355,-3.413775,2.512869,-0.247655,-4.510476,-0.740785,-1.886373,-6.698665,2.115902,5.820505,-1.760017,7.643107,-4.895574,-8.836558,8.508739,-9.243061,-1.673507,-0.691692,-2.258867,-3.935679,-3.312354,-2.004229,-6.918720,6.745653,-3.263375,-6.559608,9.742804,-2.539040,-7.863987,1.598813,5.082200,5.655441,-7.234113,-8.100093,7.332699,6.239622,5.017196,-6.126610,1.517289,5.284737,-1.708113,-9.207559,8.365075,-7.962717,-2.398208,-5.242324,7.396224,2.449766,9.338632,4.885748,-3.342511,-5.063476,-1.800921,8.466146,-2.336909,7.695344,0.495607,7.458924,3.601023,-0.043364,8.595915,2.425956,-6.832034,-4.035043], dtype = "float32")#candidate|4267|(825,)|const|float32
call_4266 = relay.TupleGetItem(func_3650_call(relay.reshape(const_4267.astype('float32'), [5, 11, 15])), 1)
call_4268 = relay.TupleGetItem(func_3652_call(relay.reshape(const_4267.astype('float32'), [5, 11, 15])), 1)
var_4272 = relay.var("var_4272", dtype = "float32", shape = (825,))#candidate|4272|(825,)|var|float32
bop_4273 = relay.left_shift(const_4267.astype('uint32'), relay.reshape(var_4272.astype('uint32'), relay.shape_of(const_4267))) # shape=(825,)
var_4288 = relay.var("var_4288", dtype = "float64", shape = (2, 11, 13))#candidate|4288|(2, 11, 13)|var|float64
bop_4289 = relay.maximum(call_4266.astype('uint16'), var_4288.astype('uint16')) # shape=(2, 11, 13)
bop_4292 = relay.maximum(call_4268.astype('uint16'), var_4288.astype('uint16')) # shape=(2, 11, 13)
output = relay.Tuple([call_4264,bop_4273,bop_4289,])
output2 = relay.Tuple([call_4265,bop_4273,bop_4292,])
func_4297 = relay.Function([var_4272,var_4288,], output)
mod['func_4297'] = func_4297
mod = relay.transform.InferType()(mod)
var_4298 = relay.var("var_4298", dtype = "float32", shape = (825,))#candidate|4298|(825,)|var|float32
var_4299 = relay.var("var_4299", dtype = "float64", shape = (2, 11, 13))#candidate|4299|(2, 11, 13)|var|float64
output = func_4297(var_4298,var_4299,)
func_4300 = relay.Function([var_4298,var_4299,], output)
mutated_mod['func_4300'] = func_4300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_4377 = relay.TupleGetItem(func_4151_call(), 1)
call_4378 = relay.TupleGetItem(func_4152_call(), 1)
output = call_4377
output2 = call_4378
func_4382 = relay.Function([], output)
mod['func_4382'] = func_4382
mod = relay.transform.InferType()(mod)
output = func_4382()
func_4383 = relay.Function([], output)
mutated_mod['func_4383'] = func_4383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4170_call = mod.get_global_var('func_4170')
func_4172_call = mutated_mod.get_global_var('func_4172')
call_4412 = func_4170_call()
call_4413 = func_4170_call()
var_4422 = relay.var("var_4422", dtype = "float64", shape = (9, 12, 8))#candidate|4422|(9, 12, 8)|var|float64
bop_4423 = relay.floor_divide(call_4412.astype('float32'), relay.reshape(var_4422.astype('float32'), relay.shape_of(call_4412))) # shape=(9, 12, 8)
bop_4426 = relay.floor_divide(call_4413.astype('float32'), relay.reshape(var_4422.astype('float32'), relay.shape_of(call_4413))) # shape=(9, 12, 8)
output = relay.Tuple([bop_4423,])
output2 = relay.Tuple([bop_4426,])
func_4437 = relay.Function([var_4422,], output)
mod['func_4437'] = func_4437
mod = relay.transform.InferType()(mod)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4438 = relay.var("var_4438", dtype = "float64", shape = (9, 12, 8))#candidate|4438|(9, 12, 8)|var|float64
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4439 = func_4437_call(var_4438)
output = call_4439
func_4440 = relay.Function([var_4438], output)
mutated_mod['func_4440'] = func_4440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_4478 = relay.TupleGetItem(func_4151_call(), 1)
call_4479 = relay.TupleGetItem(func_4152_call(), 1)
output = relay.Tuple([call_4478,])
output2 = relay.Tuple([call_4479,])
func_4485 = relay.Function([], output)
mod['func_4485'] = func_4485
mod = relay.transform.InferType()(mod)
output = func_4485()
func_4486 = relay.Function([], output)
mutated_mod['func_4486'] = func_4486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4496 = relay.var("var_4496", dtype = "float64", shape = (12, 13, 8))#candidate|4496|(12, 13, 8)|var|float64
uop_4497 = relay.exp(var_4496.astype('float64')) # shape=(12, 13, 8)
bop_4508 = relay.divide(uop_4497.astype('float32'), relay.reshape(var_4496.astype('float32'), relay.shape_of(uop_4497))) # shape=(12, 13, 8)
output = bop_4508
output2 = bop_4508
func_4511 = relay.Function([var_4496,], output)
mod['func_4511'] = func_4511
mod = relay.transform.InferType()(mod)
mutated_mod['func_4511'] = func_4511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4512 = relay.var("var_4512", dtype = "float64", shape = (12, 13, 8))#candidate|4512|(12, 13, 8)|var|float64
func_4511_call = mutated_mod.get_global_var('func_4511')
call_4513 = func_4511_call(var_4512)
output = call_4513
func_4514 = relay.Function([var_4512], output)
mutated_mod['func_4514'] = func_4514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4170_call = mod.get_global_var('func_4170')
func_4172_call = mutated_mod.get_global_var('func_4172')
call_4526 = func_4170_call()
call_4527 = func_4170_call()
var_4531 = relay.var("var_4531", dtype = "float64", shape = (9, 12, 8))#candidate|4531|(9, 12, 8)|var|float64
bop_4532 = relay.less(call_4526.astype('bool'), relay.reshape(var_4531.astype('bool'), relay.shape_of(call_4526))) # shape=(9, 12, 8)
bop_4535 = relay.less(call_4527.astype('bool'), relay.reshape(var_4531.astype('bool'), relay.shape_of(call_4527))) # shape=(9, 12, 8)
output = bop_4532
output2 = bop_4535
func_4536 = relay.Function([var_4531,], output)
mod['func_4536'] = func_4536
mod = relay.transform.InferType()(mod)
var_4537 = relay.var("var_4537", dtype = "float64", shape = (9, 12, 8))#candidate|4537|(9, 12, 8)|var|float64
output = func_4536(var_4537)
func_4538 = relay.Function([var_4537], output)
mutated_mod['func_4538'] = func_4538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4228_call = mod.get_global_var('func_4228')
func_4230_call = mutated_mod.get_global_var('func_4230')
call_4542 = relay.TupleGetItem(func_4228_call(), 1)
call_4543 = relay.TupleGetItem(func_4230_call(), 1)
var_4544 = relay.var("var_4544", dtype = "float64", shape = (9, 12, 8))#candidate|4544|(9, 12, 8)|var|float64
bop_4545 = relay.right_shift(call_4542.astype('uint32'), relay.reshape(var_4544.astype('uint32'), relay.shape_of(call_4542))) # shape=(9, 12, 8)
bop_4548 = relay.right_shift(call_4543.astype('uint32'), relay.reshape(var_4544.astype('uint32'), relay.shape_of(call_4543))) # shape=(9, 12, 8)
output = bop_4545
output2 = bop_4548
func_4554 = relay.Function([var_4544,], output)
mod['func_4554'] = func_4554
mod = relay.transform.InferType()(mod)
var_4555 = relay.var("var_4555", dtype = "float64", shape = (9, 12, 8))#candidate|4555|(9, 12, 8)|var|float64
output = func_4554(var_4555)
func_4556 = relay.Function([var_4555], output)
mutated_mod['func_4556'] = func_4556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4202_call = mod.get_global_var('func_4202')
func_4204_call = mutated_mod.get_global_var('func_4204')
call_4625 = func_4202_call()
call_4626 = func_4202_call()
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_4637 = relay.TupleGetItem(func_4485_call(), 0)
call_4638 = relay.TupleGetItem(func_4486_call(), 0)
output = relay.Tuple([call_4625,call_4637,])
output2 = relay.Tuple([call_4626,call_4638,])
func_4646 = relay.Function([], output)
mod['func_4646'] = func_4646
mod = relay.transform.InferType()(mod)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4646_call = mutated_mod.get_global_var('func_4646')
call_4647 = func_4646_call()
output = call_4647
func_4648 = relay.Function([], output)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4382_call = mod.get_global_var('func_4382')
func_4383_call = mutated_mod.get_global_var('func_4383')
call_4663 = func_4382_call()
call_4664 = func_4382_call()
uop_4669 = relay.cosh(call_4663.astype('float32')) # shape=(16, 13, 10)
uop_4671 = relay.cosh(call_4664.astype('float32')) # shape=(16, 13, 10)
uop_4672 = relay.exp(uop_4669.astype('float64')) # shape=(16, 13, 10)
uop_4674 = relay.exp(uop_4671.astype('float64')) # shape=(16, 13, 10)
var_4675 = relay.var("var_4675", dtype = "float32", shape = (16, 13, 10))#candidate|4675|(16, 13, 10)|var|float32
bop_4676 = relay.greater_equal(uop_4669.astype('bool'), relay.reshape(var_4675.astype('bool'), relay.shape_of(uop_4669))) # shape=(16, 13, 10)
bop_4679 = relay.greater_equal(uop_4671.astype('bool'), relay.reshape(var_4675.astype('bool'), relay.shape_of(uop_4671))) # shape=(16, 13, 10)
func_4536_call = mod.get_global_var('func_4536')
func_4538_call = mutated_mod.get_global_var('func_4538')
var_4712 = relay.var("var_4712", dtype = "float64", shape = (864,))#candidate|4712|(864,)|var|float64
call_4711 = func_4536_call(relay.reshape(var_4712.astype('float64'), [9, 12, 8]))
call_4713 = func_4536_call(relay.reshape(var_4712.astype('float64'), [9, 12, 8]))
uop_4715 = relay.log2(var_4712.astype('float64')) # shape=(864,)
output = relay.Tuple([uop_4672,bop_4676,call_4711,uop_4715,])
output2 = relay.Tuple([uop_4674,bop_4679,call_4713,uop_4715,])
func_4719 = relay.Function([var_4675,var_4712,], output)
mod['func_4719'] = func_4719
mod = relay.transform.InferType()(mod)
var_4720 = relay.var("var_4720", dtype = "float32", shape = (16, 13, 10))#candidate|4720|(16, 13, 10)|var|float32
var_4721 = relay.var("var_4721", dtype = "float64", shape = (864,))#candidate|4721|(864,)|var|float64
output = func_4719(var_4720,var_4721,)
func_4722 = relay.Function([var_4720,var_4721,], output)
mutated_mod['func_4722'] = func_4722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4382_call = mod.get_global_var('func_4382')
func_4383_call = mutated_mod.get_global_var('func_4383')
call_4733 = func_4382_call()
call_4734 = func_4382_call()
output = call_4733
output2 = call_4734
func_4743 = relay.Function([], output)
mod['func_4743'] = func_4743
mod = relay.transform.InferType()(mod)
mutated_mod['func_4743'] = func_4743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4743_call = mutated_mod.get_global_var('func_4743')
call_4744 = func_4743_call()
output = call_4744
func_4745 = relay.Function([], output)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4800 = relay.const([[[3,7],[-4,-8],[-8,7],[-10,-4],[7,2],[-3,-1]],[[8,1],[-7,1],[5,-5],[-9,-10],[-8,2],[-4,-1]],[[-6,-8],[-5,10],[-3,5],[6,-1],[5,9],[-8,3]],[[-10,4],[-1,-2],[-1,-6],[9,2],[-10,3],[4,-6]],[[7,5],[6,1],[-2,9],[1,-2],[2,-1],[-7,5]],[[9,-3],[10,-3],[7,-2],[7,9],[10,5],[-9,-6]],[[-9,4],[-9,3],[-4,2],[-8,-3],[-5,7],[10,-5]],[[6,-4],[9,8],[8,-3],[-2,4],[5,-2],[-2,-7]],[[9,1],[2,2],[6,-2],[5,-4],[-5,-9],[-5,5]],[[-8,4],[-1,9],[5,-1],[-5,-6],[8,-9],[-10,-7]],[[2,-2],[-10,9],[-5,10],[-4,-7],[-8,-7],[-3,6]],[[-10,8],[10,7],[-3,8],[-7,1],[-8,7],[7,-10]],[[-4,10],[9,-3],[-2,1],[6,1],[8,-1],[6,6]],[[-1,7],[-8,-5],[-3,4],[-2,3],[7,6],[-3,-3]],[[8,-7],[-5,10],[7,-8],[-4,1],[-7,-1],[3,-4]]], dtype = "int16")#candidate|4800|(15, 6, 2)|const|int16
var_4801 = relay.var("var_4801", dtype = "int16", shape = (15, 6, 2))#candidate|4801|(15, 6, 2)|var|int16
bop_4802 = relay.bitwise_or(const_4800.astype('int16'), relay.reshape(var_4801.astype('int16'), relay.shape_of(const_4800))) # shape=(15, 6, 2)
uop_4819 = relay.asin(var_4801.astype('float64')) # shape=(15, 6, 2)
var_4825 = relay.var("var_4825", dtype = "int16", shape = (15, 6, 2))#candidate|4825|(15, 6, 2)|var|int16
bop_4826 = relay.logical_or(var_4801.astype('bool'), relay.reshape(var_4825.astype('bool'), relay.shape_of(var_4801))) # shape=(15, 6, 2)
uop_4829 = relay.atanh(uop_4819.astype('float32')) # shape=(15, 6, 2)
func_1046_call = mod.get_global_var('func_1046')
func_1048_call = mutated_mod.get_global_var('func_1048')
var_4835 = relay.var("var_4835", dtype = "float64", shape = (1, 26))#candidate|4835|(1, 26)|var|float64
call_4834 = relay.TupleGetItem(func_1046_call(relay.reshape(var_4835.astype('float64'), [2, 1, 13])), 0)
call_4836 = relay.TupleGetItem(func_1048_call(relay.reshape(var_4835.astype('float64'), [2, 1, 13])), 0)
uop_4844 = relay.asinh(uop_4829.astype('float32')) # shape=(15, 6, 2)
var_4847 = relay.var("var_4847", dtype = "float32", shape = (15, 6, 2))#candidate|4847|(15, 6, 2)|var|float32
bop_4848 = relay.less(uop_4829.astype('bool'), relay.reshape(var_4847.astype('bool'), relay.shape_of(uop_4829))) # shape=(15, 6, 2)
func_4743_call = mod.get_global_var('func_4743')
func_4745_call = mutated_mod.get_global_var('func_4745')
call_4853 = func_4743_call()
call_4854 = func_4743_call()
func_4511_call = mod.get_global_var('func_4511')
func_4514_call = mutated_mod.get_global_var('func_4514')
var_4861 = relay.var("var_4861", dtype = "float64", shape = (1248,))#candidate|4861|(1248,)|var|float64
call_4860 = func_4511_call(relay.reshape(var_4861.astype('float64'), [12, 13, 8]))
call_4862 = func_4511_call(relay.reshape(var_4861.astype('float64'), [12, 13, 8]))
output = relay.Tuple([bop_4802,bop_4826,call_4834,var_4835,uop_4844,bop_4848,call_4853,call_4860,var_4861,])
output2 = relay.Tuple([bop_4802,bop_4826,call_4836,var_4835,uop_4844,bop_4848,call_4854,call_4862,var_4861,])
func_4864 = relay.Function([var_4801,var_4825,var_4835,var_4847,var_4861,], output)
mod['func_4864'] = func_4864
mod = relay.transform.InferType()(mod)
mutated_mod['func_4864'] = func_4864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mutated_mod.get_global_var('func_4864')
var_4866 = relay.var("var_4866", dtype = "int16", shape = (15, 6, 2))#candidate|4866|(15, 6, 2)|var|int16
var_4867 = relay.var("var_4867", dtype = "int16", shape = (15, 6, 2))#candidate|4867|(15, 6, 2)|var|int16
var_4868 = relay.var("var_4868", dtype = "float64", shape = (1, 26))#candidate|4868|(1, 26)|var|float64
var_4869 = relay.var("var_4869", dtype = "float32", shape = (15, 6, 2))#candidate|4869|(15, 6, 2)|var|float32
var_4870 = relay.var("var_4870", dtype = "float64", shape = (1248,))#candidate|4870|(1248,)|var|float64
call_4865 = func_4864_call(var_4866,var_4867,var_4868,var_4869,var_4870,)
output = call_4865
func_4871 = relay.Function([var_4866,var_4867,var_4868,var_4869,var_4870,], output)
mutated_mod['func_4871'] = func_4871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4743_call = mod.get_global_var('func_4743')
func_4745_call = mutated_mod.get_global_var('func_4745')
call_4879 = func_4743_call()
call_4880 = func_4743_call()
output = call_4879
output2 = call_4880
func_4897 = relay.Function([], output)
mod['func_4897'] = func_4897
mod = relay.transform.InferType()(mod)
mutated_mod['func_4897'] = func_4897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4897_call = mutated_mod.get_global_var('func_4897')
call_4898 = func_4897_call()
output = call_4898
func_4899 = relay.Function([], output)
mutated_mod['func_4899'] = func_4899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4959 = relay.var("var_4959", dtype = "int8", shape = (4, 8, 6))#candidate|4959|(4, 8, 6)|var|int8
const_4960 = relay.const([[[-5,-5,-10,7,1,-1],[-4,5,-1,4,10,-8],[3,-1,-6,-10,-9,-3],[9,-6,-5,3,-7,-9],[9,-6,3,1,-9,-2],[9,7,6,-8,2,-5],[-1,6,1,6,-9,10],[-6,1,-7,2,4,5]],[[-9,-4,5,8,2,-3],[9,2,4,3,6,7],[6,9,-9,9,7,1],[-7,-9,-2,1,-4,1],[-6,7,-8,-5,-6,-4],[1,4,-9,2,-5,4],[-5,-1,9,-6,6,-6],[10,1,-6,-10,8,-4]],[[1,4,9,3,4,-5],[-6,7,8,8,-5,-3],[-4,9,-9,1,-3,7],[-3,-7,4,10,-5,-2],[10,-1,9,-9,9,4],[-3,9,10,-9,6,-1],[-8,-8,10,5,10,-7],[10,-3,-6,-8,-4,6]],[[-2,-8,-10,9,-2,2],[7,-1,5,-9,6,5],[-8,2,9,5,-4,2],[-4,2,7,7,3,-4],[-8,3,-2,-7,-1,-2],[8,6,2,3,-8,-1],[1,1,-6,4,8,7],[8,-2,-2,1,-4,9]]], dtype = "int8")#candidate|4960|(4, 8, 6)|const|int8
bop_4961 = relay.bitwise_and(var_4959.astype('int8'), relay.reshape(const_4960.astype('int8'), relay.shape_of(var_4959))) # shape=(4, 8, 6)
bop_4969 = relay.minimum(const_4960.astype('uint32'), relay.reshape(var_4959.astype('uint32'), relay.shape_of(const_4960))) # shape=(4, 8, 6)
func_4437_call = mod.get_global_var('func_4437')
func_4440_call = mutated_mod.get_global_var('func_4440')
var_4981 = relay.var("var_4981", dtype = "float64", shape = (864,))#candidate|4981|(864,)|var|float64
call_4980 = relay.TupleGetItem(func_4437_call(relay.reshape(var_4981.astype('float64'), [9, 12, 8])), 0)
call_4982 = relay.TupleGetItem(func_4440_call(relay.reshape(var_4981.astype('float64'), [9, 12, 8])), 0)
bop_4983 = relay.floor_divide(bop_4961.astype('float32'), relay.reshape(const_4960.astype('float32'), relay.shape_of(bop_4961))) # shape=(4, 8, 6)
func_322_call = mod.get_global_var('func_322')
func_325_call = mutated_mod.get_global_var('func_325')
var_4988 = relay.var("var_4988", dtype = "float32", shape = (112,))#candidate|4988|(112,)|var|float32
const_4989 = relay.const([-2.496622,-7.799985,-8.904514,6.410139,5.327930,-4.867661,7.658172,4.525617,-0.521765,4.279818,-7.456411,5.020263,-5.488891,8.195155,-8.393122,-8.345200,-3.844963,-8.473905,-1.329057,-6.067740,0.196767,6.901904,-8.049288,9.319747,-6.124971,-8.271177,4.691363,-7.539662,4.073464,1.401889,-0.276544,8.332234,-9.710342,6.242144,3.847471,-4.183226,8.690194,4.886843,-7.222854,-8.737821,5.103022,7.367049,9.778576,-5.226262,-2.581212,-8.995414,-0.291156,6.817053,3.067320,8.191790,-6.459271,0.561602,6.891812,8.052262,-5.715055,3.130646,-4.146922,-4.723618,-1.798730,-1.089696,-2.261914,4.972540,-9.114456,8.953954,7.424340,-5.362208,-6.411103,8.254870,-2.740955,-2.856330,8.532384,1.807767,-3.054544,2.918175,-7.432138,7.519401,-7.399499,9.741536,5.524805,5.221738,4.803589,-9.937472,3.324694,-2.272686,-4.773959,-4.716799,-4.143817,5.317916,8.431903,1.209771,8.340600,-1.622475,2.466662,-5.069379,-8.504711,4.754190,-0.796521,-8.116131,-6.152717,1.693716,2.656778,-4.957701,6.500591,-2.326045,-5.398638,7.757451,1.510152,0.545367,0.707873,0.494454,7.327429,-2.783604,9.591873,-2.273085,9.756427,-8.599236,9.492871,-7.190601,6.528005,-8.912647,-1.417524,9.658587,5.033959,-1.467248,-5.120387,2.301495,-1.853918,7.373595,-5.968582,0.137614,-9.706376,-4.478692,-3.989556,-4.586546,8.896500,8.249330,-4.515529,3.160242,-0.900985,8.244972,-9.522230,-1.487141,-0.747496,-5.058074,9.535067,-6.379574,6.034033,-5.504224,2.243521,4.646485,7.160893,-2.878372,4.641028,0.788202,5.626895,1.621610,8.848933,-9.420919,8.716269,-3.341474,3.139646,-6.369979,4.815703,-6.669034,-6.037083,-6.004918,5.751214,4.958299,-4.882997,-9.054891,1.279426,4.701714,6.711397,-1.169350,-9.255531,-5.109590,1.091742,5.191600,2.885934,5.432612,5.179165,1.961201,-0.923803,-0.121683,3.115156,-5.400700,-4.031699,-7.365369,-7.847808,-7.340496,6.288829,-2.495592,-3.193108,-7.511667,3.141354,7.333717,1.976970,0.477965,4.306606,-8.407063,-2.031986,-9.187392,0.872951,6.340462,1.729931,-1.088741,-5.793220,-8.199371,-2.596619,-5.019834,-2.200860,6.513607,-4.986822,-7.998421,-7.666283,-2.674157,9.673515,3.964615,4.745755,-8.707041,-5.932414,-8.036195,8.736174,0.942988,5.962926,-1.899778,7.393508,0.861743,-8.776147,-3.025307,-8.493865,-7.949636,6.609654,-6.803807,-5.044996,8.314856,-3.109532,9.495844,-5.612075,9.238183,-7.211354,-7.026945,2.873039,1.003000,7.386877,-6.197029,-1.852814,1.412695,-3.343643,2.056295,1.619692,-4.469129,-7.599527,3.276483,-4.549182,-1.987768,-5.588733,6.682594,-7.006766,-4.599558,-5.842377,4.596552,8.668295,-5.306674,6.171652,-9.548931,-5.060315,-6.892052,-2.297651,-6.321236,-9.815608,6.839542,0.487411,0.325887,2.279659,2.222571,-8.975866,-1.344344,3.926149,-1.856112,-1.972664,5.524173,8.437283,3.072948,-0.799699,-5.340826,-5.491260,6.423442,-1.614666,6.553646,-3.990994,8.471968,-5.129602,-2.485401,-5.072592,-6.837135,8.656718,-2.038807,3.497246,-2.679296,0.270028,-0.736018,-0.718706,7.049351,-5.092923,-9.199111,3.406728,-7.826804,-3.477121,7.543373,0.595620,1.711811,-2.261479,2.790763,-6.591829,9.766048,-8.437955,8.038085,9.500382,-3.771940,-2.819925,2.048787,-1.000433,7.328712,-8.877700,-4.156570,-9.950648,3.930113,9.369410,-8.234316,-5.092983,1.069427,1.917120,-2.483515,5.364272,3.893727,7.912557,9.890723,-8.163880,-9.163691,1.263610,-5.795379,8.739032,-4.384508,-9.829042,-5.681347,-6.430765,3.735537,-9.920057,7.520602,-8.434036,9.024560,9.063968,-0.402397,7.429459,-4.775860,9.157467,-9.619769,-1.533385,6.744239,8.904567,-2.453384,9.022008,-0.073472,2.019816,7.603170,-7.462630,2.593626,6.784727,7.130916,0.919711,1.903227,-2.045292,6.861276,2.561603,4.158572,-2.548457,-5.199911,7.629258,3.331689,-0.035843,9.775022,-3.764580,-4.390912,-7.309801,-5.001289,-6.236705,-5.324917,-9.028110,0.402876,-0.186435,-8.452723,-1.717661,-4.331043,2.044656,-7.720401,-5.533052,-4.457054,5.189797,-4.885440,-9.210196,9.894986,-3.491479,7.434662,5.304775,-4.745548,1.418995,-8.538700,-1.433518,-7.427867,-7.339798,8.763617,-3.459406,8.424381,2.447306,0.213197,4.451181,-7.520090,-0.824343,-6.719042,-5.025215,0.867696,3.799428,-3.404450,-9.041048,-9.679696,5.674566,1.553857,8.084409,7.650960,-0.389899,9.639795,4.583880,0.320473,1.916592,3.004066,0.654776,-4.778653,-1.353577,-9.077401,5.163319,-4.070909,-3.777533,-5.900860,-4.628896,-6.663417,-4.814882,-7.656972], dtype = "float32")#candidate|4989|(448,)|const|float32
call_4987 = func_322_call(relay.reshape(var_4988.astype('float32'), [1, 16, 7]), relay.reshape(const_4989.astype('float32'), [4, 16, 7]), )
call_4990 = func_322_call(relay.reshape(var_4988.astype('float32'), [1, 16, 7]), relay.reshape(const_4989.astype('float32'), [4, 16, 7]), )
uop_4993 = relay.atanh(call_4980.astype('float64')) # shape=(9, 12, 8)
uop_4995 = relay.atanh(call_4982.astype('float64')) # shape=(9, 12, 8)
uop_5011 = relay.log(uop_4993.astype('float64')) # shape=(9, 12, 8)
uop_5013 = relay.log(uop_4995.astype('float64')) # shape=(9, 12, 8)
func_2831_call = mod.get_global_var('func_2831')
func_2835_call = mutated_mod.get_global_var('func_2835')
const_5020 = relay.const([[9.214093,4.760782,-2.251753,3.658134,7.539202,5.543333,-8.525810,-8.821741,6.250819,-7.171269,2.830991,-9.094588],[-9.444719,-1.175143,-7.691816,0.455835,9.454366,-7.008634,9.646325,8.255280,-4.590580,9.914650,-1.286102,-1.882746],[3.119872,8.939819,-8.577579,4.835475,9.660476,1.639340,7.260230,2.475938,-2.537323,0.898497,-5.829815,-8.546559],[7.209124,8.320180,-5.147083,6.485202,-1.819212,-3.866268,-5.910560,-2.675951,-6.247330,4.506684,-0.722989,-4.263664]], dtype = "float64")#candidate|5020|(4, 12)|const|float64
const_5021 = relay.const([-2.904953,-4.647916,0.465081,3.280603,7.845111,2.091411,6.413112,-6.097468,8.810790,-4.702689,7.016520,-2.463306,-4.671269,-1.911623,-4.654933,8.139958,7.917415,-0.626969,2.975722,-3.878559,-2.569640,5.918371,-8.215771,2.576950,-5.163786,8.454034,-0.274075,6.905449,-2.907008,-7.744531,2.409202,-2.015943,5.677285,-6.662260,-7.992200,5.093318,-8.097762,8.768682,3.332717,3.896119,-3.819684,0.536517,-4.237808,8.807019,-3.229589,3.004781,-3.554045,-6.419688,-3.937089,-7.684396,-3.221672,9.714675,-8.321097,2.146736,9.081751,4.854405,7.207069,-2.050190,-9.186843,-7.568731,4.249478,-9.098998,6.313643,3.829192,5.662264,9.881064,-4.898572,7.720987,4.329479,-8.600724,4.091598,-1.420298,-5.998473,-9.273470,-7.853818,2.840924,-3.830475,2.117637,-7.162238,3.129774,9.439612,3.039738,7.053483,-2.471272,6.129929,0.975384,5.455580,8.805182,8.278146,-9.535555,8.282839,3.299788,9.057341,1.991452,-4.760567,-0.747242,7.440188,8.695240,-9.121624,0.382133,-8.266950,-1.668296,-5.789159,2.929970,1.955837,-3.400379,8.353075,-2.031777,-2.363716,-5.549347,-9.082399,-2.056788,0.650615,-3.475861,-6.333438,5.330679,-7.603807,-3.628637,-6.608207,-4.446287,2.897625,-5.849641,9.885129,6.407546,-0.700418,-1.653330,-9.431987,1.589074,-0.294914,4.286054,7.304443,8.309006,-6.401698,0.435423,1.982328,-5.831182,-5.121534,3.166051,9.187509,2.092442,-3.044701,-4.203125,7.880479,-6.687926,4.274351,-9.150797,2.355925,4.196897,7.133161,-9.905223,-5.657265,9.618337,6.072167,-1.895917,9.516456,-0.234768,1.626554,1.087430,-9.265893,-8.534059,1.210095,4.323692,-4.012597,2.751157,3.004469,-2.856019,-8.066381,-4.744719,-3.796837,8.078837,-9.650142,-6.989869,-9.336725,-0.720613,1.179593,0.251297,6.929165,8.676229,2.205667,3.816762,-5.778472,-5.677304,9.344981,-3.845127,-4.481098,-0.560307,-5.241673,-4.556638,-3.111676,4.290495,-1.655733,-2.218810,5.181538,1.328281,-5.469332,8.710300,0.058181,-8.358917,-0.395009,-6.836399,-9.424458,-3.639708,6.344392,9.731826,3.022262,-3.022503,9.457015,-8.940210,-2.230452,8.570548,-0.286436,-8.355194,2.396665,2.958824,5.125198,-3.132103,-3.560877,-3.689605,7.226678,7.051196,2.193134,-3.617999,-9.454691,3.858672,8.662278,-0.742079,-7.774815,6.569940,9.975798,6.919355,-4.070300,-7.968712,-7.880621,9.390248,-1.339980,4.158948,-2.202918,4.164179,-1.173377,5.546234,5.439438,4.554401,-9.809230,5.110646,6.543892,1.523700,-2.800286,-2.135972,-8.207613,1.665449,-8.581033,-9.131636,-4.763671,-9.881679,8.910383,-6.918015,1.231040,-9.076862,-2.635900,1.154074,-6.879847,-9.882594,-5.254431,-1.160716,-3.391908,8.360816,-7.393385,9.861516,7.537659,9.043938,9.923881,-9.013876,4.201545,7.153313,-3.650098,-4.335519,7.668213,-2.779664,2.347021,-2.236567,-7.761405,0.220163,-8.614441,7.021529,-6.812832,-4.575458,9.374594,-0.675394,0.869378,-6.331103,-1.389949,-1.968050,3.983448,0.995627,6.190559,-0.198079,3.123774,-5.569305,-2.797716,-9.633428,-5.735645,8.044072,8.408281,7.191311,2.441806,-3.141924,-9.007458,6.255250,8.974976,-4.408024,-3.812803,-2.159167,-5.955091,8.512190,1.023517,2.171921,-2.735760,6.438027,-0.712732,-6.219940,-3.181791,0.998218,-5.034065,8.740981,3.721394,-3.779220,-3.538488,-2.204981,-4.841032,-9.116792,3.137500,5.255416,-6.035418,3.967023,2.822395,-9.742010,-0.130106,-3.411112,-4.528761,9.902789,-8.370932,4.805601,-0.668006,2.286281,-4.035080,-6.985046,-6.878302,7.565864,-6.423718,7.164307,7.875096,-0.812995,-8.532266,-9.822072,-2.959740,-2.937477,7.986855,2.840222,3.630640,-6.389059,-4.219992,3.378196,0.208567,4.283469,3.902012,1.422778,-4.346443,8.723396,1.354216,7.144716,3.302534,-0.539008,-7.597582,-9.645672,-7.437891,4.564918,-2.835198,1.685917,8.278013,2.761915,-8.757187,6.962722,-6.966734,4.829681,-0.882629,2.969402,-9.038226,2.349782,-2.324210,0.064326,-1.398999,6.128268,6.119282,-3.658174,-2.909506,-4.011876,9.658232,4.827473,-5.862196,1.909621,-1.829212,-7.595707,-2.981451,1.590828,1.739665,3.391300,6.520655,-9.428553,-9.300922,4.411332,9.412084,8.624735,-5.304510,-2.593282,4.662689,4.094339,4.785554,-9.836660,4.010420,-5.578569,-1.197986,8.261274,-5.968934,8.182998,-7.677686,9.638609,-3.626165,-1.334169,-9.914284,7.788640,-4.553316,5.021850,-2.451666,3.361747,4.711858,-2.213255,-2.110248,9.456760,-6.732648,4.594536,1.263372,-0.872718,6.587186,-4.934891,1.280366,6.266499,5.261277,4.738462,-7.749259,2.289390,-1.312566,-1.428577,6.467564,-6.444914,-0.020726,1.040404,-2.901401,0.122774,-7.434884,0.003313,3.232463,-1.203747,1.728686,-2.058262,-8.342603,5.595280,4.683895,1.994339,1.766408,-7.545040,0.672485,-2.044361,3.243093,4.117307,0.331400,-0.959060,7.191147,5.119228,-2.352007,0.238823,-3.641544,-8.266871,-0.259436,-8.832457,8.652412,9.453298,-0.471877,-9.266784,0.752054,-9.811204,7.632296,9.744311,8.396836,2.560889,-9.883424,-3.124750,-4.348110,-9.099426,6.487833,-4.533282,-4.221913,6.588275,5.084215,-1.069503,-8.720327,-6.699098,3.269443,-0.781102,-6.827752,8.473196,-7.158661,5.920787,-7.251032,2.719166,4.600743,-8.981323,7.850979,-7.585281,2.728180,1.744759,6.056195,3.990253,8.592750,1.034497,-1.464349,-7.177091,9.474135,3.120629,-9.464332,5.021426,-9.416382,0.982063,5.772606,8.636765,-0.828379,-2.541869,-2.121312,6.059564,-3.589138,5.245741,0.824382,8.016248,-1.418686,-2.038063,-5.952387,-9.214683,8.492549,-4.852906,7.760027,8.021856,0.488908,-5.305433,-1.957415,4.022087,-6.932538,5.285648,0.328161,-8.356131,3.280900,-3.704525,-7.145773,-6.921179,-0.283795,4.447320,-2.861911,0.341642,-2.758453,1.426988,0.758191,1.104145,-4.160735,2.754065,-4.632687,5.551760,-9.030630,6.017245,-5.772074,-5.497098,-3.021006,-7.852159,7.921413,-2.680700,2.702683,-8.146774,9.571567,6.826848,-1.947853,7.710167,-5.475005,-5.913875,-5.996557,-5.369585,4.196711,1.166985,-2.671697,9.397718,3.191898,3.898203,7.666465,-9.921172], dtype = "float32")#candidate|5021|(600,)|const|float32
call_5019 = relay.TupleGetItem(func_2831_call(relay.reshape(const_5020.astype('float64'), [8, 1, 6]), relay.reshape(const_5021.astype('float32'), [6, 100]), ), 0)
call_5022 = relay.TupleGetItem(func_2835_call(relay.reshape(const_5020.astype('float64'), [8, 1, 6]), relay.reshape(const_5021.astype('float32'), [6, 100]), ), 0)
output = relay.Tuple([bop_4969,var_4981,bop_4983,call_4987,var_4988,const_4989,uop_5011,call_5019,const_5020,const_5021,])
output2 = relay.Tuple([bop_4969,var_4981,bop_4983,call_4990,var_4988,const_4989,uop_5013,call_5022,const_5020,const_5021,])
func_5033 = relay.Function([var_4959,var_4981,var_4988,], output)
mod['func_5033'] = func_5033
mod = relay.transform.InferType()(mod)
mutated_mod['func_5033'] = func_5033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5033_call = mutated_mod.get_global_var('func_5033')
var_5035 = relay.var("var_5035", dtype = "int8", shape = (4, 8, 6))#candidate|5035|(4, 8, 6)|var|int8
var_5036 = relay.var("var_5036", dtype = "float64", shape = (864,))#candidate|5036|(864,)|var|float64
var_5037 = relay.var("var_5037", dtype = "float32", shape = (112,))#candidate|5037|(112,)|var|float32
call_5034 = func_5033_call(var_5035,var_5036,var_5037,)
output = call_5034
func_5038 = relay.Function([var_5035,var_5036,var_5037,], output)
mutated_mod['func_5038'] = func_5038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4382_call = mod.get_global_var('func_4382')
func_4383_call = mutated_mod.get_global_var('func_4383')
call_5052 = func_4382_call()
call_5053 = func_4382_call()
var_5064 = relay.var("var_5064", dtype = "uint64", shape = (16, 13, 10))#candidate|5064|(16, 13, 10)|var|uint64
bop_5065 = relay.greater(call_5052.astype('bool'), relay.reshape(var_5064.astype('bool'), relay.shape_of(call_5052))) # shape=(16, 13, 10)
bop_5068 = relay.greater(call_5053.astype('bool'), relay.reshape(var_5064.astype('bool'), relay.shape_of(call_5053))) # shape=(16, 13, 10)
func_1733_call = mod.get_global_var('func_1733')
func_1737_call = mutated_mod.get_global_var('func_1737')
var_5076 = relay.var("var_5076", dtype = "int16", shape = (75,))#candidate|5076|(75,)|var|int16
var_5077 = relay.var("var_5077", dtype = "int16", shape = (5, 105))#candidate|5077|(5, 105)|var|int16
call_5075 = relay.TupleGetItem(func_1733_call(relay.reshape(var_5076.astype('int16'), [1, 15, 5]), relay.reshape(var_5077.astype('int16'), [7, 15, 5]), ), 1)
call_5078 = relay.TupleGetItem(func_1737_call(relay.reshape(var_5076.astype('int16'), [1, 15, 5]), relay.reshape(var_5077.astype('int16'), [7, 15, 5]), ), 1)
output = relay.Tuple([bop_5065,call_5075,var_5076,var_5077,])
output2 = relay.Tuple([bop_5068,call_5078,var_5076,var_5077,])
func_5082 = relay.Function([var_5064,var_5076,var_5077,], output)
mod['func_5082'] = func_5082
mod = relay.transform.InferType()(mod)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mutated_mod.get_global_var('func_5082')
var_5084 = relay.var("var_5084", dtype = "uint64", shape = (16, 13, 10))#candidate|5084|(16, 13, 10)|var|uint64
var_5085 = relay.var("var_5085", dtype = "int16", shape = (75,))#candidate|5085|(75,)|var|int16
var_5086 = relay.var("var_5086", dtype = "int16", shape = (5, 105))#candidate|5086|(5, 105)|var|int16
call_5083 = func_5082_call(var_5084,var_5085,var_5086,)
output = call_5083
func_5087 = relay.Function([var_5084,var_5085,var_5086,], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4897_call = mod.get_global_var('func_4897')
func_4899_call = mutated_mod.get_global_var('func_4899')
call_5089 = func_4897_call()
call_5090 = func_4897_call()
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_5091 = relay.TupleGetItem(func_4151_call(), 1)
call_5092 = relay.TupleGetItem(func_4152_call(), 1)
func_3793_call = mod.get_global_var('func_3793')
func_3796_call = mutated_mod.get_global_var('func_3796')
const_5095 = relay.const([-9.804445,-8.701459,-2.465927,-5.374524,-9.707691,-5.538812,9.387574,-7.522853,-6.697445,-2.844401,6.251326,2.072747,9.251384,4.992795,1.336450,7.751096,-8.045793,-5.911811,8.356080,-8.371921,5.280392,-4.928429,-9.435168,4.511747,6.591607,-5.943943,4.544206,2.234470,-7.178815,2.590525,1.825730,1.442099,-2.096237,-2.607373,2.940872,5.142814,8.429126,5.108186,6.591455,-7.201321,-0.551153,1.184051,-8.690952,-5.545821,2.831544,-5.702649,7.933580,-6.169856,-7.930332,1.513138,6.892377,-0.403024,-8.598807,8.632041,-5.014618,-9.949607,-4.535143,-9.241497,-0.331296,2.860020,1.216868,-7.520457,-9.191410,-6.144247,7.165244,-3.656636,2.227400,7.416417,-8.683782,8.432355,-7.975412,8.316743,5.029985,6.289613,-0.327565,2.771757,3.416727,-3.798828,3.862009,-8.108533,-1.168650,8.036949,3.406848,-9.261278,5.800150,-6.943546,1.986710,2.586721,-5.936924,6.533529,7.187712,-0.167544,-8.232276,-5.652136,4.427469,4.074236,0.653537,5.407456,7.621456,-3.895582,8.022635,1.301490,-4.955103,7.030380,3.796106,-2.036100,-3.354860,7.747429,9.261469,-0.360429,-1.255951,7.307675,-7.212880,-2.728446,-8.349171,6.462018,-4.892248,-8.108948,2.399745,7.233033,-4.938759,1.341452,-5.383944,-1.758213,9.438570,-6.123145,-2.550770,2.659343,5.965986,-0.668356,3.892232,0.564428,-5.818777,-1.123023,-8.281777,7.771364,4.446120,7.726123,9.646077,-5.650562,-8.702823,5.263350,-3.793688,4.704477,-0.445278,4.915898,2.756870,9.171624,-0.814644,9.446081,9.774541,-1.017947,-7.925260,-9.264351,1.762142,-1.534885,-2.330224,-0.191983,-2.477455,-0.875707,4.181329,-6.435272,-4.923051,5.255680,-9.167245,9.108261,1.902349,-7.602277,5.035449,5.404123,5.570846,-5.366668,5.429851,-0.149423,2.868417,8.549320,-1.203506,3.509720,5.830083,-2.817939,-1.511924,-0.063244,5.459744,3.828629,0.168026,2.268512,-9.485321,-0.381834,-7.822018,8.591225,8.149101,-4.940267,8.257362,9.209506,-7.729629,-8.599836,1.747716,-5.118756,8.819696,-7.601352,2.107294,-7.207321,0.137601,5.524713,8.044967,6.204166,8.964011,5.362695,-5.084539,-2.241513,-9.646819,8.021070,4.413651,-3.440217,6.983962,4.535471,-8.914019,-6.583235,5.568687,6.497701,-9.395411,4.452663,-6.275125,-4.031416,1.495132,-7.041809,0.992913,-9.609736,9.890632,-4.935387,5.033412,3.826842,1.381057,6.015479,-4.775019,4.456371,-2.657586,-3.599190,4.861711,0.786854,1.413032,-1.089606,9.072825,9.393744,3.473263,6.277576,-4.074970,-7.381531,-2.903457,-3.436500,-8.101297,6.478946,-7.043490,-9.208423,8.278434,2.583461,7.126861,0.744674,-6.828596,9.700149,-1.944375,-9.654003,-4.883334,-4.491727,-8.546821,2.327792,2.474388,8.517288,-5.695179,7.861204,2.828122,4.311034,0.420573,4.239716,6.862438,7.405678,2.410087,-4.884786,9.211473,-1.400638,0.713154,-0.594059,4.877124,3.977104,7.067297,1.180758,5.920379,7.407443,3.963492,-5.962547,-3.418768,8.301084,9.360963,3.279523,-2.885633,-4.142370,9.488402,-4.108803,6.624970,-1.030290,6.765758,8.033252,-1.646406,1.574893,-9.283642,7.938836,0.864151,-7.979342,-8.034194,9.140481,-4.097647,5.321896,8.529138,-4.481667,9.010244,4.183957,-7.546910,4.335002,-5.024720,-5.897015,-9.207123,0.179054,-1.418842,-5.163079,3.802971,-9.264821,4.288639,3.018876,8.249112,9.042937,-0.381312,4.927270,-6.239088,-7.635913,7.375056,6.621790,-1.986876,-6.292238,-3.358773,5.998137,-9.382510,5.528832,5.471810,-2.640063,-0.837789,2.723051,8.684160,1.197973,6.866990,-4.044728,5.753265,-1.811958,-2.100120,-2.462219,1.931965,-0.021489,1.045752,-2.220703,-4.928015,-5.662716], dtype = "float32")#candidate|5095|(360,)|const|float32
call_5094 = func_3793_call(relay.reshape(const_5095.astype('float32'), [9, 10, 4]))
call_5096 = func_3793_call(relay.reshape(const_5095.astype('float32'), [9, 10, 4]))
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_5105 = relay.TupleGetItem(func_4151_call(), 2)
call_5106 = relay.TupleGetItem(func_4152_call(), 2)
output = relay.Tuple([call_5089,call_5091,call_5094,const_5095,call_5105,])
output2 = relay.Tuple([call_5090,call_5092,call_5096,const_5095,call_5106,])
func_5110 = relay.Function([], output)
mod['func_5110'] = func_5110
mod = relay.transform.InferType()(mod)
output = func_5110()
func_5111 = relay.Function([], output)
mutated_mod['func_5111'] = func_5111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5110_call = mod.get_global_var('func_5110')
func_5111_call = mutated_mod.get_global_var('func_5111')
call_5305 = relay.TupleGetItem(func_5110_call(), 3)
call_5306 = relay.TupleGetItem(func_5111_call(), 3)
func_2831_call = mod.get_global_var('func_2831')
func_2835_call = mutated_mod.get_global_var('func_2835')
const_5312 = relay.const([[3.153741,7.467420,-4.514981,-6.979040,8.852672,-4.665036,-9.492202,-2.968715,-5.307269,3.922674,4.132264,-2.684262,5.452153,-1.654760,1.436413,8.765399,8.317453,0.323716,-6.059432,-4.755580,-3.170916,0.852328,0.284555,-2.922101,9.858729,6.462272,7.824051,-6.832676,-2.288083,-9.573904,-4.296442,-4.682160,-2.602891,2.734254,0.980843,4.532453,2.886934,0.544839,-9.941287,-7.215795,8.112832,-7.918620,5.727843,-7.053274,1.567791,9.389277,-2.576831,9.475575]], dtype = "float64")#candidate|5312|(1, 48)|const|float64
var_5313 = relay.var("var_5313", dtype = "float32", shape = (600, 1))#candidate|5313|(600, 1)|var|float32
call_5311 = relay.TupleGetItem(func_2831_call(relay.reshape(const_5312.astype('float64'), [8, 1, 6]), relay.reshape(var_5313.astype('float32'), [6, 100]), ), 1)
call_5314 = relay.TupleGetItem(func_2835_call(relay.reshape(const_5312.astype('float64'), [8, 1, 6]), relay.reshape(var_5313.astype('float32'), [6, 100]), ), 1)
bop_5315 = relay.maximum(var_5313.astype('float32'), relay.reshape(call_5311.astype('float32'), relay.shape_of(var_5313))) # shape=(600, 1)
bop_5318 = relay.maximum(var_5313.astype('float32'), relay.reshape(call_5314.astype('float32'), relay.shape_of(var_5313))) # shape=(600, 1)
uop_5321 = relay.rsqrt(const_5312.astype('float32')) # shape=(1, 48)
const_5331 = relay.const([[-3.233981,-5.171492,3.039918,-1.701572,3.180778,-3.158988,2.422576,2.948681,0.144748],[-6.970539,5.998388,-7.316626,2.825683,-9.871198,2.665868,7.074481,3.245761,6.983267],[-3.505731,-8.924686,5.287788,5.578070,8.336379,7.935531,7.866236,-0.272815,-2.347828],[4.937296,-6.493002,-9.108560,9.098029,2.595574,-0.132595,-0.809283,-0.260484,-6.788237],[1.865184,-3.406003,-4.717475,3.413245,4.086071,4.681931,5.451205,8.308024,-3.235602],[6.408026,3.709946,-3.379754,-1.375765,-3.998385,8.945278,-6.615631,-9.545781,-0.772935],[-0.107499,-6.099289,9.867966,2.518091,0.256878,-9.648956,-3.638398,7.170452,-0.724408],[1.264896,-2.547722,-2.737897,-2.765936,-4.241061,9.987499,-2.171065,7.694124,-0.366518],[-4.523894,5.071137,-4.654659,8.328754,7.942232,6.473385,6.886699,-1.869181,-8.745942],[2.200166,0.673554,-7.301543,-4.042548,-8.343726,1.162337,6.829552,-0.583753,3.956037],[-2.742983,-0.484212,-1.310693,-6.576122,-5.105694,2.755859,4.491404,-7.041441,1.651904],[1.941702,6.498990,5.311143,-7.821360,-1.646062,4.267325,-0.613363,-2.733410,4.940695],[-8.119144,-5.783207,5.228622,5.518989,0.291799,6.170517,-5.596905,-8.404329,1.555532],[6.407203,-1.567101,-5.763362,2.245882,-3.952132,1.449257,-4.511994,3.261367,8.380399],[0.692598,7.921980,-1.124804,4.836013,1.590545,-5.264692,9.829612,2.132186,4.159305],[9.828372,-6.844993,-2.207648,3.923654,6.812758,-0.079937,3.459360,3.356364,-2.972268],[-0.936979,5.640957,9.468122,-3.470999,1.253134,1.530511,0.204540,7.434978,-1.394147],[-4.237173,5.311704,-0.582582,-7.124582,2.058728,-1.765195,0.218852,9.941456,-5.602003],[-8.697022,9.643373,-5.409890,-6.808739,4.078642,3.586830,9.552243,1.296475,5.005804],[-8.248095,-5.965695,-8.947975,9.111867,9.361049,-7.724709,-1.027251,-8.638775,-3.023421],[-8.486296,-0.699968,-5.384974,0.362248,8.583892,-6.906706,-6.393060,-6.321492,-1.543798],[4.956301,-5.743638,-5.630192,-3.337965,4.885724,-0.621968,-5.161908,-5.387755,-6.300147],[-4.549800,8.293452,2.556943,9.724390,-6.442527,-6.732959,-7.600211,6.443032,-9.273848],[3.423514,-9.327784,1.402608,-1.577931,8.775007,-6.947174,1.121340,9.245082,1.108982],[2.164447,-8.674234,-4.818368,-6.088406,-5.494306,-6.354181,-2.424917,2.665400,-3.309614],[4.704439,-9.866155,-4.639351,3.627595,-5.470538,-5.349991,0.938908,-5.483774,5.877843],[-0.783426,5.205237,4.840895,9.359220,6.884832,-5.363128,3.050559,-0.592584,-3.159457],[-3.835581,-8.765568,-2.547243,-1.818948,-1.498155,4.450341,-6.507249,-2.769772,-9.977654],[9.777216,8.341599,4.194004,-4.610679,3.503240,-2.204531,6.873332,7.097176,7.061139],[-2.545082,2.921454,-6.038179,5.259447,-7.029236,-5.019228,0.913038,-2.106378,-2.122152],[9.670810,-2.609728,0.265104,-9.951785,-0.087334,1.442436,-5.582507,6.065313,-4.321911],[-9.077932,-9.087005,4.268295,-4.075857,-4.756038,6.779709,-1.033233,-5.478841,-9.298955],[3.361885,-1.271768,-3.078790,-9.793821,-7.211376,0.156135,3.428179,-9.120773,-0.164992],[3.053504,-3.066119,-2.282554,-5.464408,-5.468785,5.849836,8.193093,-3.351580,-1.908189],[1.073514,7.641927,5.913032,-0.114507,-2.318293,-7.346329,2.473928,2.741368,-5.906252],[6.835831,-0.305256,5.755232,-8.007550,7.142106,-5.553497,-2.101931,-3.266649,1.059891],[-2.277880,-0.212233,-2.241360,7.987974,-7.131328,-9.476034,-1.642300,-6.567470,5.359824],[0.303491,-8.085082,-9.513744,-1.879838,-8.902414,-5.285611,-3.013683,9.114968,-4.627604],[-5.345880,2.606785,-8.660729,4.592832,-5.011419,-1.516606,3.746054,6.348600,-5.161379],[-8.278079,-5.535688,1.901853,6.139575,8.392249,-7.878578,-6.323857,-5.392977,-8.040632],[9.571715,0.357131,8.431540,-2.378962,1.303792,-1.749064,4.088622,1.640471,1.246587],[0.393097,-3.937785,4.440725,-1.130763,5.256386,-4.354589,0.872662,0.310768,9.238175],[-9.727128,9.187221,7.214246,0.685434,6.078427,7.077883,1.237696,0.481717,1.084506],[4.619536,-3.388314,-7.948002,-6.426006,3.922941,5.920698,-9.056429,-7.821270,8.436226],[4.456581,-1.901264,7.407923,0.208983,-6.274061,4.788032,2.575786,8.279778,0.744514],[-6.258813,-2.570542,-2.741716,-9.988473,4.305716,-3.721037,3.679780,-9.060487,-5.239289],[7.397374,-6.957176,-9.432455,3.193148,-2.998772,-2.762526,2.026655,9.461906,-0.066617],[6.081042,-2.010651,7.226956,0.048424,-3.778330,-1.835431,-1.117727,-1.395319,-0.279012],[-1.218469,6.486988,-9.621897,-5.811859,-3.994362,3.619862,8.688715,-1.712039,-3.299412],[1.527597,-8.598892,2.177540,-9.273441,-3.550199,-9.064514,-4.085604,-6.489369,-5.430005],[6.432269,-4.449112,-2.767580,-6.432069,-3.931012,-5.232261,-4.011676,6.330066,2.101690],[2.039466,-1.360436,7.165620,-7.612307,8.919239,8.424408,-4.327636,-2.456537,-4.285002],[-4.610060,3.765295,4.301216,9.466513,7.700489,-5.041325,7.041544,-0.393691,6.842041],[2.660863,9.444246,3.599393,-8.863897,0.428142,-3.824530,0.391912,-7.772308,-2.969374],[-9.787685,9.690749,-1.180981,3.259758,-7.275007,3.060347,1.525843,6.308929,6.914862],[6.835321,-5.987047,-0.625964,-7.619631,-0.681177,-0.866814,4.990805,-4.678751,-2.509554],[-5.886405,3.317566,-6.112102,4.908788,2.189685,-9.598171,1.416529,-2.247444,8.301406],[-8.128195,-6.087359,-1.311826,6.374476,-6.016299,5.615517,-6.856617,-9.500358,-7.437788],[-0.511198,-2.397309,-2.848600,-8.068975,-2.314436,-5.961966,-2.130353,0.326136,2.887659],[8.130830,3.021182,-2.989230,7.219880,5.703305,-5.530626,-6.307217,2.752946,-0.109423],[7.355937,7.361743,2.134458,6.468530,-5.679814,4.604356,2.517878,2.744845,-6.141831],[7.226303,-0.461782,7.152259,-7.633207,-4.353377,-0.038515,3.720697,5.920641,6.954857],[-5.102474,-8.911820,8.392107,-0.309309,7.302265,-4.371944,-6.416144,3.848292,-0.648321],[2.686797,-6.290146,-0.059843,4.947054,-8.825760,-0.222390,0.076623,2.473676,1.497770],[8.546614,7.253036,3.931773,-0.825991,4.018580,2.311088,-6.687348,-2.419080,-1.283418],[4.150855,-4.272772,-4.081424,8.490826,-9.146958,-0.037503,-0.281015,4.267942,-9.261578],[5.414181,-4.782022,-2.773308,-6.789417,0.887461,6.099070,1.332308,0.745548,-0.739062],[-2.987731,4.249664,-9.608424,-0.015083,-3.068180,-0.992707,3.337809,0.940844,-8.451877],[6.024098,5.012153,3.570869,-1.975808,5.786717,9.502922,0.259378,-8.817594,-0.504304],[-8.746132,0.942926,-7.397348,6.746603,7.424448,-2.064457,-1.760080,-1.402796,-2.843068],[-9.013099,-2.782989,-6.400939,-8.622624,7.213667,-3.175465,5.894076,-3.786302,8.983878],[6.465665,-5.736429,-3.744810,-5.987407,-6.001288,-2.937552,8.752161,4.533162,-3.389453],[1.140648,-2.491039,3.565551,-4.311587,9.906973,6.940599,2.828138,-1.945152,1.296685],[-4.647733,3.793351,-9.549290,9.245680,5.788761,3.033906,-6.732984,-5.994731,2.026513],[-9.282088,-3.691905,8.535678,-7.879269,-8.829758,-3.486969,5.797270,-0.367738,-1.151415],[-4.908387,-4.027029,-4.324754,-5.146637,-8.158305,5.286830,-3.370048,5.823818,-4.683313],[2.424066,3.688198,4.839753,8.589867,3.691701,4.497452,8.139036,4.178632,0.636466],[6.874319,7.753062,-6.759544,-1.258392,-5.707910,-5.021303,-0.684298,7.488060,3.685141],[7.305266,-7.936052,-1.902513,-5.616312,7.244557,2.530566,-1.443033,-0.059117,-8.874870],[-6.775594,-3.570182,-7.049632,6.335708,-4.095606,9.600767,3.536226,-9.020618,8.118569],[-6.441569,-3.703478,0.143288,-6.988724,5.841658,4.331383,-3.385203,-6.210284,-0.025517],[5.438058,9.607907,0.867013,3.176966,1.020471,-1.565486,2.378841,4.539543,-5.357434],[4.833742,-4.146287,-2.846196,7.002321,7.803558,5.257110,-1.609221,-7.010810,-2.732895],[-4.366931,-7.560054,1.334575,-9.248349,8.893894,2.590627,5.749378,4.978920,9.262303],[8.879926,-6.770654,-7.501512,4.965429,-9.765319,-4.555453,4.992253,-4.504935,-8.611799],[-5.240794,-8.083191,-2.622553,1.783591,7.036018,7.686730,-1.439875,0.116798,-4.496510],[-3.391577,-4.227371,4.178788,9.612737,-8.866866,-6.856462,-2.814870,1.562449,7.013154],[-1.848593,3.042919,2.243959,-9.209595,-6.124986,-8.978034,4.673492,-5.124752,2.252573],[-1.594144,-0.816769,-1.678789,9.188688,4.017771,-3.618041,9.175977,6.280478,-4.939165],[1.090651,1.319892,-1.551566,-7.659314,-1.630399,0.006436,-0.443074,3.314891,-0.731074],[-0.074390,-9.161142,1.215668,-4.740854,0.046091,3.406644,-8.434603,-7.479434,-6.516267],[3.930106,-2.395396,6.934026,8.772853,4.132756,-9.783177,-6.833192,9.839433,-2.022585],[2.447218,8.147493,1.496707,-6.742111,-6.094414,0.407288,1.878850,1.332685,-7.165446],[-3.874984,0.288694,-2.422598,5.323932,-7.128129,7.295284,2.713297,7.803377,9.012887],[-7.120592,-1.252438,-2.348050,2.264712,-9.619227,5.168617,-6.423233,-9.775487,0.085659],[3.417604,5.724409,-5.330546,8.052927,-3.910754,-7.576001,4.544048,5.368002,4.537352],[1.436356,-6.686694,-3.743475,-5.052304,1.158919,-6.644291,-8.219405,1.296125,1.970297],[-0.260176,-3.407952,1.976843,9.221065,9.232299,-0.566320,-7.678518,2.615529,8.363095],[7.507538,-4.516969,-6.020619,1.255073,5.246773,-1.756258,-1.571722,5.119053,4.151273],[-4.412301,6.508499,-7.032867,-5.851021,3.950963,2.356305,3.706440,-6.070299,2.885528],[-3.703847,0.600440,0.269529,-5.992565,8.901451,-3.629380,-5.343613,3.894324,-2.503455],[5.839168,-3.760007,6.079569,5.946876,-4.249140,-2.718416,-3.631464,7.387088,-9.187104],[-7.727612,-0.842232,-9.086628,-9.100399,6.598812,-1.120621,0.688803,2.977066,-4.531720],[9.901786,1.273122,-1.376540,0.253484,6.388023,-2.939509,-8.575521,-8.568001,-4.474936],[6.482774,-4.195792,-7.003093,4.200532,-7.500511,-5.981765,7.815324,0.113417,1.969294],[-3.259821,-5.429207,2.683877,-9.226334,4.930341,8.263943,7.943142,7.393203,5.729958],[4.745725,0.823012,5.689773,-0.938481,-1.950796,-7.030105,8.632694,-6.614794,-7.896756],[5.667033,3.508596,8.574310,-6.096398,-9.290392,-2.282365,-4.637294,-4.646136,-0.588754],[6.322832,-5.522695,-7.975269,3.982140,0.090641,0.970721,-6.463042,-2.904895,-8.751982],[-7.367021,3.490919,-5.622233,-0.740129,2.548661,-7.813013,3.997357,-1.031176,2.072101],[-8.465449,5.510111,4.424264,4.066126,4.208468,3.674319,4.309166,-9.166349,-6.054920],[1.567668,3.825216,5.279342,-1.106268,3.020611,-8.318596,1.867439,-5.498431,1.880625],[1.135816,7.066445,-6.565217,-2.826927,-6.643300,-0.760861,2.862128,0.149397,-7.965345],[4.558064,5.453680,-1.689910,1.688775,-5.506928,-6.043496,1.037196,-2.378463,-5.514210],[-5.805486,0.151129,6.893621,7.501658,9.685813,-3.938137,-7.617510,-0.615900,-7.493892],[8.026850,-6.464501,3.477189,8.122587,-1.238772,7.779752,2.237202,-8.696301,-6.802597],[-6.295274,-9.678554,6.992563,-2.409925,-0.398067,7.248720,2.743225,9.833861,9.139142],[-0.780134,9.888339,-3.867130,8.401189,-8.004027,-7.530700,6.523938,7.461384,-5.905779],[-7.245546,-7.669679,3.600161,-6.878549,-4.460174,-5.464088,-1.815383,6.793629,-1.671343],[8.154684,2.694885,6.661735,-4.850331,-3.811069,-4.847492,-0.759808,8.281580,-2.090923],[0.905880,3.483669,-4.556916,6.094377,-2.850634,-4.443934,-5.417182,-0.523113,-5.487408],[-9.285269,1.051264,-8.678736,7.725827,-9.553588,6.028807,-4.961471,7.450920,-1.526079],[3.073627,5.373138,-8.716662,-6.154572,4.226468,-8.244729,-0.038392,-3.187295,-0.475320],[-9.127508,-9.469147,-2.485945,8.180458,-5.315938,3.015537,-3.808621,-3.749920,-8.243595],[1.891586,6.816171,-4.312503,-9.077058,-2.099734,-4.690358,7.194442,0.335539,6.592927],[1.902128,-2.735482,-9.220121,9.488781,-8.200243,-1.740333,-7.405419,-5.332530,-6.833260],[-4.746816,2.442745,2.769254,9.833181,-4.741784,-2.466197,-3.793578,-3.051525,9.324906],[-8.202730,7.299734,-7.928521,-9.526390,-5.281392,8.717535,0.780448,5.868040,-4.045229],[-1.312241,-8.077282,-7.531571,-0.019810,-1.828952,8.981420,4.285693,-3.617923,1.221298],[-2.517258,-5.473999,-1.109255,7.612712,5.321209,-1.767987,-2.873734,0.029628,-0.887307],[5.974164,-1.698866,2.663366,-6.931025,-5.114981,-4.592947,5.800398,2.816014,2.145798],[4.598957,8.164024,1.284920,8.868347,-5.793967,-6.059510,-2.109533,8.215560,-8.684569],[2.128956,-5.233290,5.988641,0.864943,5.070140,-4.156469,-5.907667,-8.116306,-9.582157],[1.104308,5.485797,-7.513746,-6.846073,4.581068,-4.650347,0.849702,-5.556251,3.509665],[-0.790035,0.220799,9.066327,-6.660131,6.495535,4.979301,-1.985009,6.888119,-4.952877],[-3.650262,6.248313,-6.119755,3.249564,6.140497,5.082818,6.555156,6.545747,-9.529150],[0.078730,-3.860017,1.683487,-0.486814,-2.833608,0.092738,-8.945736,-3.664027,7.027915],[1.461900,-5.898449,9.677920,0.900096,7.659992,4.977999,0.655700,-0.241222,1.886825],[2.220807,3.596480,-0.717779,-1.890477,-0.408250,-5.496140,4.518220,-9.553757,-7.748267],[-7.076534,6.432647,-0.994215,7.355228,9.882622,5.659843,8.026406,-5.758322,-6.064918],[3.158562,9.261576,3.339901,1.845423,3.765271,-2.781093,3.407602,3.821789,-0.889859],[9.620114,3.730682,4.672679,-4.530530,8.407724,-6.904987,1.370803,-4.411770,2.198368],[-2.229018,4.556241,1.933381,9.835519,-5.939607,0.822392,-2.312180,-3.283736,1.475964],[-8.932510,-0.990842,-1.262778,4.392479,-9.334312,2.926926,-1.891844,-9.354747,5.050367],[5.462194,2.438979,-5.788241,4.730593,2.708111,-8.844043,6.399939,-3.641010,0.267751],[-0.388365,-7.215742,-3.546589,6.689442,1.204508,-8.992877,4.482181,3.481678,9.681309],[2.953443,-9.129918,-2.899075,7.785625,0.285873,5.400978,-8.594123,-4.765155,-0.200151],[-2.534879,0.991581,-5.076774,4.516502,5.841299,-9.454394,-7.921018,2.811406,-7.529774],[9.066813,-7.115588,-6.096044,9.811676,6.081692,1.784059,1.215582,7.812410,-6.746104],[-2.143528,5.237797,-0.002892,2.141316,8.752819,-8.721181,-5.898635,6.663149,-6.426647],[1.175647,9.365948,8.857226,-7.000567,-7.391865,8.354212,3.530762,-5.988316,-5.468932],[-1.654733,2.301677,-3.763486,-8.891839,-1.432332,6.434163,6.113380,-5.684367,-0.140172],[1.287171,-7.804213,-4.542489,-1.362640,-2.625640,6.979922,-6.928467,-6.538649,5.104839],[9.298967,8.768475,-0.814338,-4.213714,5.111568,-9.004644,3.134483,6.137796,0.638840],[5.147792,7.227691,6.770416,-6.439983,0.900530,1.254368,-2.389442,-5.295104,-0.655368],[-2.594509,-9.284186,-2.205092,7.623816,-6.316940,1.074245,9.544988,-7.497432,-6.796606],[1.873848,7.726608,6.471458,5.766025,5.531260,-0.921736,-6.986724,-6.450091,-5.917459],[0.647023,-4.353980,-2.935532,-7.308093,2.694783,8.098012,-8.377075,-5.400010,9.666903],[-2.630173,5.555802,-0.862604,-9.939520,7.373190,4.110362,4.481606,3.119828,-9.359718],[3.669752,8.014533,2.613749,4.791836,7.817824,5.108018,0.052123,-7.454856,9.548564],[-2.129292,1.548882,5.552909,-3.970293,-1.901348,-3.486467,8.438306,9.195423,-7.667061],[6.708735,-2.547019,-0.938064,8.624406,0.105093,-2.261906,-7.411332,-1.123356,-8.395078],[-0.948583,-2.910137,6.540482,-7.438376,1.504365,5.890297,-5.858728,9.698065,-7.808484],[6.056955,9.000554,3.396048,5.887719,4.185648,0.476200,7.465824,-6.644533,-3.726767],[5.187879,-8.616308,-5.669721,-9.463713,2.021364,0.324244,2.861950,8.995103,-0.224032],[8.273221,7.204695,1.862920,-9.151172,-8.363719,5.787767,-4.228203,9.473428,7.764730],[0.158832,2.315358,9.212589,-4.111608,6.683354,6.749629,-1.153991,5.122214,4.966014],[-8.223173,-6.768600,-1.462465,-4.760752,-0.598319,-3.207411,0.397622,8.768713,-7.387428],[-2.015657,-3.268464,-6.260180,0.755938,-9.068875,-1.751425,0.765265,3.772381,-8.183366],[9.605794,6.874128,-4.532046,0.555330,2.452441,-1.165466,4.066550,-1.675593,-2.623177],[-2.770063,4.531810,2.880967,-7.836546,-6.912901,-8.899830,-5.874929,0.486950,5.981799],[7.780403,-2.048360,9.672883,-8.871214,8.480550,-9.760996,8.175288,7.965194,6.587109],[2.507977,2.863017,-3.599661,-0.540765,-7.115599,-4.764580,4.842517,-8.126489,-9.141425],[9.634919,4.633813,2.619805,-4.293985,-5.462289,5.282761,-8.379738,2.608152,-9.277884],[8.552472,-6.007611,4.483271,2.758525,-7.215167,-7.793150,-8.435661,7.862900,-7.691622],[3.219504,-5.372405,-0.633142,-9.740911,-2.226681,-6.062480,4.615485,5.040484,3.039911],[-4.760846,2.104406,1.348502,4.867853,2.239026,6.831841,8.492828,4.140258,-4.431862],[8.130466,-1.359226,-1.566448,-2.249121,2.273169,-4.299171,-9.493758,2.622204,4.136781],[0.629809,-8.850837,-9.244973,-2.554851,2.063436,0.002412,8.635645,-6.610398,-4.278684],[3.792744,-7.295799,-9.583040,8.143040,0.144911,-8.491945,5.866032,2.622200,1.208085],[5.454442,7.050361,1.721627,-8.354859,7.611161,-2.448253,-7.908738,-7.706316,-7.298374],[3.864318,-3.951158,0.928541,5.241692,-1.985406,-3.391748,-1.007178,-6.348387,-2.909292],[-3.298536,-9.636331,9.302735,9.452821,-5.439582,-2.090204,-3.232274,4.887561,-4.653590],[-8.235586,8.617610,-3.417251,-4.584381,-6.228741,-8.970173,-3.751199,1.812559,-1.745455],[4.658070,-1.929679,-9.443301,7.226560,-8.976125,0.286705,1.224280,9.165425,-2.395491],[-5.965371,-9.296347,8.189427,-5.113370,-9.141908,9.363550,-2.089135,-2.278306,-0.055215],[-5.910350,-7.090619,-5.791187,0.448974,4.284959,8.350340,4.172041,-3.973699,-7.558267],[-2.086729,0.748294,-5.227189,-2.711910,9.710576,-2.618267,8.129599,9.747775,8.999368],[5.107766,1.663308,9.907664,-2.373198,2.799774,1.310754,7.587860,-8.526379,-3.643891],[9.912295,3.860684,6.583466,-5.419569,-8.060691,-2.284785,-6.762381,2.886635,-9.041994],[-5.353168,8.826064,7.703951,7.164742,-1.838048,8.872965,-2.690584,9.513350,-0.588269],[2.713875,2.528468,-8.373678,-9.790812,9.783325,9.661896,-2.097199,6.690179,4.677330],[-4.842200,9.793891,-7.478915,7.922073,1.074011,-5.911387,-8.868995,-8.618263,-7.085766],[7.168583,4.610832,-0.953397,7.275436,-6.174901,-7.598605,9.734449,-6.563839,2.458510],[-9.317179,-1.252706,-4.861114,9.391038,-0.095092,-1.782821,-5.045938,1.403559,6.881822],[-7.438836,6.718461,1.072050,-0.570996,-6.295281,3.943042,5.706885,4.935946,9.395650],[1.784422,-4.596416,-2.177911,-5.153936,-5.307639,7.070034,7.219086,-1.803362,-2.792105],[-8.756585,9.821846,-5.358778,-7.531211,-9.872995,0.722712,8.757835,-2.626245,-3.352539],[2.085518,8.766612,6.058793,6.786382,7.511736,0.665483,2.020623,-2.787917,-1.182366],[7.559829,9.599701,-2.078730,8.889915,1.524412,9.049588,-1.050836,-6.699091,7.247665],[-9.211700,-2.972111,-2.705855,-9.005956,3.601306,-1.433999,9.918189,-8.445760,0.078688],[7.463726,3.505047,-1.887859,-7.408883,8.964158,0.569715,-0.674679,2.344213,2.089439],[-6.379256,8.699662,-9.540247,-4.741478,0.092161,-1.306042,8.875383,5.914784,-6.041134],[-7.434011,-2.204118,1.588655,-6.828070,-2.545784,-6.660600,6.494204,2.211034,-0.193440],[0.586098,1.748665,-6.577570,8.489689,8.572147,-6.649191,2.386965,-8.224283,-2.517030],[9.460046,-6.618772,-3.198321,3.889921,7.839174,-9.251762,-7.577175,-4.522632,-8.115208],[-1.769347,4.992142,-1.804451,3.703946,-0.059048,6.816388,-7.334669,2.182419,-3.486448],[5.300794,5.947664,-1.160910,6.593540,5.676144,-6.493321,-3.380724,-8.768583,-3.740563],[1.134655,-8.402411,-4.092208,-7.333558,-5.398855,9.740987,2.351772,-2.105384,1.012819],[-6.060613,4.019904,3.038039,4.975277,-1.625146,3.233667,-7.471273,1.618158,-8.400548],[-1.710667,-0.755436,-8.667532,-5.575700,-9.897732,-4.553718,4.553157,-6.219812,1.860481],[7.524911,3.995880,-9.357046,-2.490415,6.105121,3.950265,2.319949,-8.530877,-8.072641],[3.928393,-8.409189,4.209870,-7.777205,8.078756,1.663225,-5.616962,4.358943,4.372711],[-7.532386,-6.632680,6.466304,3.258167,-7.799366,-2.466843,-7.115616,9.379609,0.534096],[8.361018,7.417211,2.381723,2.819708,9.019176,9.665311,-7.009621,4.642764,-6.452154],[-8.765018,4.798795,4.252626,7.483417,-4.959331,8.226957,7.834893,8.431826,2.588587],[-3.545961,-7.144710,-0.608667,-7.276273,7.438139,6.833212,-2.001222,2.211542,-8.560654],[5.153471,-4.088977,-6.943155,6.580371,-3.230289,5.946041,7.446507,8.455382,8.125594],[-2.606835,-5.866392,3.452582,4.204037,-3.666822,-9.716522,1.143296,-0.762343,6.353541],[7.647515,3.979064,7.157501,-2.891754,-6.435628,-6.240428,3.434391,6.246158,-1.251770],[0.688843,-7.769151,-0.464274,5.071929,-6.206445,3.999051,-7.995391,-8.658486,-1.711305],[-4.888286,5.637562,-4.389729,7.231598,-5.050877,-7.168291,9.652891,-3.067732,7.839205],[-4.065369,-9.397120,-3.025755,-6.569268,5.653167,-0.747379,-9.877081,-6.630965,5.393545],[8.590848,-1.223637,5.877915,-4.588065,-8.423314,-6.678521,4.122346,-0.326193,2.651897],[2.329964,-6.078989,7.942706,5.186805,2.261042,3.924498,-5.637666,7.524300,-8.239611],[1.447457,-5.526536,5.666104,9.030845,7.634904,-0.573532,1.919622,6.380902,-1.686004],[-0.875732,-8.803205,9.317194,8.504803,3.465769,-6.696171,5.134779,-3.312070,-1.085979],[5.929761,1.604758,5.455284,0.757860,1.485740,-2.302732,6.795211,0.143062,3.963503],[5.719422,6.797302,6.469083,-7.149833,9.680697,-3.087626,-8.307629,-1.135636,6.214608],[-4.455399,-4.893922,8.660073,8.797823,4.624677,-5.314997,-3.478378,7.443290,-9.549528],[0.292215,-1.489296,-3.908401,-6.407393,-8.578232,-2.859853,3.166385,-8.122838,-1.935295],[-7.630448,6.591429,8.906067,-3.158146,1.184335,5.849697,6.768385,4.102520,7.913888],[-8.584268,-6.409411,-9.625085,-3.481213,0.212375,3.478613,-4.664231,-0.483618,-4.104850],[-0.218563,0.853699,-4.748189,9.353200,3.058366,6.505670,-5.861634,0.619205,-5.578161],[7.298807,9.534299,-1.221238,9.734660,-5.191993,-7.498173,9.500576,-7.294225,-6.431403],[3.276077,-7.792213,-5.073378,9.000738,7.236653,-7.035216,4.524040,6.946212,-4.027322],[3.118076,-5.981883,8.948055,-1.467858,9.037439,0.829498,-1.405414,-0.420546,-6.949955],[-9.343477,1.939977,-7.691220,-6.471823,-8.179029,-7.953398,4.992850,-1.392419,6.122061],[-8.097343,-0.597136,-0.748746,8.049843,-3.414796,1.724280,5.765805,-6.013067,-6.527160],[-3.107855,-1.320798,-0.001322,1.499387,3.345196,7.850777,-3.978876,-6.646485,-0.925417],[-8.821310,0.849924,3.322499,3.312834,8.896029,0.715644,-9.761758,-8.562128,-2.424784],[7.820309,-3.567861,2.233744,-4.051489,7.798544,-3.559159,5.682779,4.954227,9.760563],[-8.839056,7.297059,5.966470,1.983759,-2.345580,-9.114412,-1.954954,1.781841,-6.210738],[-5.695734,-9.391361,-9.231565,2.675066,4.275666,-9.515368,2.351989,-5.360975,-5.345933],[-4.073881,0.247063,2.159839,1.201178,-6.265214,-4.500155,-0.586791,7.296811,-3.219815],[4.882892,8.257892,1.965941,-4.045102,-9.724813,6.861093,-2.676942,-7.306896,5.282477],[4.352166,0.069885,2.278679,1.487089,8.894980,-0.753667,-6.082878,4.908365,-0.146379],[4.668548,-8.244344,7.488745,6.837261,8.859925,-2.324047,6.148593,9.902736,7.210831],[6.795497,-3.427928,4.896072,-0.276165,5.120877,7.088236,-8.082910,-9.298596,0.948605],[0.195240,8.204912,-6.203048,1.756694,3.743498,1.320606,5.732027,4.763503,9.645450],[-1.586447,-7.184427,6.955535,0.669203,0.771562,-9.590954,-1.033760,1.286958,-4.811930],[5.555114,2.164944,9.283332,2.330914,9.928900,-5.721843,8.408554,6.686791,-8.465165],[1.720351,-7.224095,7.351976,8.627228,-2.909239,7.893435,1.408887,-5.299514,-1.751297],[7.395281,-9.556430,-7.252391,6.462343,3.795339,-9.393028,4.505534,-2.060177,-7.779355],[9.810969,1.766973,-4.385850,-1.046757,1.023293,-3.270024,-8.940925,8.276190,3.867204],[-2.482425,8.445623,2.948526,4.642593,6.449513,-4.695194,-1.157566,-7.011656,-2.361968],[-4.268938,-7.844009,2.404707,7.625612,-9.332758,6.263530,5.047164,-9.601968,8.826325],[-6.660310,-7.601980,-3.819012,3.123916,-9.836841,-0.411592,-5.217739,-9.294189,-3.134677],[0.207659,2.862440,-2.389884,7.521269,-8.850133,-1.266247,2.045301,5.393844,9.525959],[1.221797,-1.458315,-7.911414,-4.615929,3.109085,1.653966,-6.962645,-1.127623,-6.918056],[-6.292366,-9.039693,6.368607,9.669814,8.650144,-0.968054,-2.075757,3.336307,-6.395356],[-1.221684,-3.236932,7.538310,9.667261,-0.924641,0.719633,5.406294,6.100155,4.915022],[-9.209276,3.956015,5.554668,-8.850424,7.002858,-3.685445,7.467887,-4.163623,-3.270040],[8.076411,-0.319448,0.067994,-1.818689,4.125293,-6.987128,-9.004445,9.231264,-8.416550],[-3.716076,1.903162,-9.833618,8.302696,-3.292385,9.980444,1.801093,-8.638022,9.767842],[8.533074,-6.453664,5.611227,5.486707,-2.234536,3.375656,5.812953,3.432481,-9.686104],[-6.407063,-0.649922,3.486540,-2.135610,-8.584292,-4.237586,-6.616275,-4.173497,1.914726],[-0.311508,0.492936,2.523492,8.908250,-5.397968,7.833616,6.546594,-6.121825,-3.310128],[1.282514,-5.310679,-6.725648,2.404899,6.155230,9.826386,3.215962,7.220102,-4.349388],[-8.335464,-1.273246,0.681375,0.259285,2.060942,-8.108174,6.676936,-9.642032,1.594487],[4.497407,-1.197057,-7.372663,4.563508,7.777283,5.295402,8.345888,3.009185,-7.804877],[-4.079215,4.526324,-9.184723,6.075106,-9.833309,4.144887,-3.381600,-4.582347,5.158628],[0.687763,4.159883,-1.619070,-4.876560,-4.546789,3.164257,-6.062698,-0.484890,4.514351],[7.502277,-0.017817,3.452735,-4.416294,-4.127064,-8.419139,8.609959,-4.378925,-9.994823],[7.260525,5.956174,-5.293289,3.766140,-2.172009,9.674287,-5.197668,-3.568385,-1.930359],[-6.769886,-5.204632,3.551041,9.819749,-5.537503,4.066272,-6.984632,5.550017,-3.489371],[-1.984887,4.664349,3.695631,-1.059025,4.857996,0.556655,-1.203283,-0.260529,-7.895068],[5.910026,8.705149,-3.805002,-7.256514,6.464962,-1.874152,-7.024318,6.196689,4.248487],[-8.217161,-5.710171,-3.691886,2.323652,-9.187986,7.489909,9.239475,-5.793619,-1.174298],[-9.892306,9.215456,4.076186,9.079493,-3.657617,1.573539,-0.546964,7.860212,3.214161],[-3.231377,3.079179,3.935177,8.853312,4.573631,6.064340,-3.875336,1.322444,1.686739],[1.013530,-0.818780,-0.385014,6.448624,2.320178,3.633046,0.311197,9.935679,-5.052719],[5.969966,6.346985,7.746976,6.755395,-9.279842,6.898855,8.171599,5.446355,-5.769900],[3.877068,-1.747000,4.121611,2.196320,1.475296,6.536853,7.709673,7.868863,7.810440],[5.497511,8.683042,8.122266,-3.473110,7.896554,-8.155591,3.113113,-6.026692,-2.569943],[0.040003,-6.351756,-4.793828,8.786935,-8.175811,9.973725,9.538200,-6.255409,-6.486860],[-8.439695,-7.645903,-4.014496,6.615976,-4.524269,7.103006,6.665616,6.466229,9.624307],[2.952930,7.177497,-3.799205,-1.197900,-3.877450,-7.845406,-2.554067,5.466259,-3.107496],[-2.618419,4.642359,4.056934,2.459433,3.254973,-6.506365,9.673069,5.775377,-4.157956],[0.690136,-3.280593,9.607239,-5.117189,6.236069,3.581613,-7.207981,9.329247,-6.799783],[-9.324346,-3.966921,-5.693225,5.243849,-1.819281,3.258629,-1.004099,0.841945,-2.294636],[2.426691,8.383381,-2.759424,-6.125754,-1.940298,-0.098228,7.892739,-1.442339,-2.483650],[-0.410159,-6.048926,3.175494,0.302607,-1.103606,-7.034825,-6.351868,-9.620765,-6.585356],[-4.110199,2.578069,-5.730323,0.400902,-5.924970,9.538795,4.086483,-0.723177,6.378745],[0.870396,0.679012,0.620779,-0.713655,2.936211,9.137935,0.715441,0.924968,-3.468432],[-6.798654,3.087554,-4.187108,2.481558,-7.471786,0.136566,7.349468,1.365757,4.421101],[-0.698005,-7.466442,-2.981553,0.332870,1.365764,-4.669045,5.477603,4.712827,1.919561],[3.951790,4.510290,7.073747,6.435573,5.128374,4.887556,-9.273721,-0.235863,-4.753571],[-3.890160,-3.523636,-5.138996,-1.384096,7.889485,-0.842028,5.043199,-9.775115,0.517755],[5.698412,-4.403243,7.560173,1.718023,-1.743960,-1.754123,-3.468566,-2.884759,-4.853310],[6.833871,-6.545748,4.689531,-3.271994,4.453107,3.268299,-0.856962,5.362822,-2.148400],[-7.231876,-9.513770,4.124039,0.140068,-8.178960,7.817102,-0.459831,6.009318,2.236964],[3.917211,2.502802,-7.859020,-3.121188,3.321650,-5.684746,-7.165667,-9.592140,1.383550],[-7.395817,9.512438,-4.113743,7.555360,-8.379172,-2.431970,4.699004,9.526823,-6.753121],[-2.133718,-3.275568,-8.652929,6.093882,1.069787,-5.815630,5.139606,-0.507265,5.016455],[7.867809,1.380331,8.747825,-2.070015,-6.583721,8.453552,4.656949,6.185121,8.803756],[-8.308611,-7.193322,-8.826394,-1.367942,0.052440,8.394516,-8.753859,-7.280452,-5.517692],[1.890187,-1.568243,-0.901312,-8.740797,8.610445,0.402677,4.491118,6.572244,2.884893],[-0.193119,-5.561799,-7.353037,-1.087578,-0.834239,9.202421,-6.220702,5.976255,-1.704864],[-9.102975,-4.768765,-7.466595,2.925918,7.912037,2.840588,-8.689771,2.275258,-7.186538],[-1.060904,-4.006725,3.542282,2.854177,-5.032872,-7.687796,-1.674227,7.296577,1.134880],[-9.528298,7.875424,0.803969,4.396759,7.180092,-9.283575,-2.515822,-7.301721,-5.882887],[-7.603127,-7.919671,-2.996091,7.426194,4.367096,7.131288,-2.712983,6.261039,-9.992984],[1.247090,1.615187,-9.637341,-6.111488,-8.521631,6.866172,-7.457348,6.681141,-7.103022],[3.565986,-8.572204,-4.315712,1.161939,-3.093539,-9.250316,-8.743558,-2.138798,-4.467882],[9.733392,8.967569,-6.271504,-4.793287,2.771261,5.081498,-2.014923,8.812879,6.450516],[-0.245188,1.748031,-2.899754,9.666860,7.660403,-2.874196,-9.323477,-1.242449,0.231471],[-2.021534,1.607419,5.331168,0.521390,1.465755,6.748530,-6.799783,-9.120837,-2.196252],[-2.862350,5.777060,5.626774,4.036817,7.898009,9.152814,-0.070992,0.426302,8.044002],[-2.457541,-8.568207,-3.278656,4.468029,2.033181,-4.631348,-5.296066,-7.688631,-5.151284],[6.264305,1.421376,7.546441,0.204040,6.082215,5.227746,-4.977084,7.120386,3.652104],[-3.210833,8.045182,-3.954457,1.270172,-0.677462,-8.260255,8.117165,-2.304694,3.465749],[4.134347,-7.525549,2.339023,-9.975909,8.023909,-0.407157,2.118145,7.072239,-1.470143],[-4.065225,-8.396584,8.910380,0.453867,-8.654271,-5.439389,6.344963,2.839775,-4.576949],[8.971930,-0.541990,-2.850157,2.508609,6.018608,-6.119949,3.668444,3.199084,0.635747],[-3.987219,0.196229,4.394958,-9.818732,8.094360,-4.991610,-9.879440,-7.265316,-6.602708],[0.746601,-7.343389,5.303727,8.619789,5.184569,-6.933111,9.886310,3.830280,-6.597900],[-7.485510,5.637754,-4.774995,5.049658,1.652715,1.710591,1.340016,-4.439859,5.947649],[-9.651196,-6.221503,6.126492,1.770141,8.771098,7.401797,8.160803,6.810797,6.006931],[-6.204950,-9.430047,4.921050,6.558884,8.030918,-0.989268,2.294870,0.499048,8.058074],[9.208088,2.657984,7.374639,-6.031810,1.259209,-0.561930,2.933739,1.405843,-2.978549],[1.288119,1.528924,1.635426,3.934341,1.644906,-4.643305,7.683963,9.766898,4.027706],[3.489119,5.106263,0.991212,1.792598,-7.675593,-1.554879,8.709185,-2.449956,-8.640182],[6.388554,2.362461,-7.115886,6.143243,1.496082,1.168371,2.902832,-3.957288,0.483432],[-9.297356,-8.280715,7.568249,-9.698900,-8.109668,-9.339420,-6.457044,-2.665512,-0.766836],[-7.707824,-9.349248,-5.488877,-0.974433,-7.512835,-2.723142,-5.497750,-1.154427,2.506704],[2.287610,4.247104,-6.715859,8.110005,2.287575,-4.362890,-9.876709,2.176556,-8.030635],[-9.538619,4.792640,8.839076,-8.934311,8.166422,-0.719407,8.043856,-5.379020,9.516131],[-4.500419,4.976073,-4.466166,9.262858,-3.338647,3.230131,-5.503180,9.158790,-3.824151],[3.444025,-2.786514,-0.045809,3.088253,8.573440,-9.546273,-2.106805,8.331779,-6.900700],[-7.823070,-1.584254,-1.444718,1.453513,-8.814839,-5.595597,-0.554245,7.393793,-3.889088],[4.157616,9.446675,1.244862,-6.755660,-5.654202,-8.939918,5.830532,-6.901471,7.717921],[-7.560872,1.003220,-9.081233,0.771915,0.318555,4.974196,-5.157435,6.164788,1.291775],[5.453739,4.774543,3.723626,-8.162760,-5.658512,1.167161,4.190352,-2.132630,-9.463280],[3.299337,6.915964,-5.788278,-0.693335,-7.114013,0.944431,3.648856,1.297751,-1.434088],[-6.427442,5.562909,-5.610922,-6.632797,-7.552575,-9.955180,3.215055,9.463734,9.608331],[-3.707653,-9.960340,8.115891,-9.670517,5.395416,6.129512,0.420207,-4.911234,-9.745602],[6.234504,2.474746,-7.725386,-6.982085,8.169091,-7.817057,4.752363,-8.225315,8.865622],[4.481152,-1.976545,2.049471,2.262541,6.778089,-0.348416,-3.386717,9.936518,9.155291],[7.541347,4.090845,9.807952,6.762710,-4.428080,5.352617,-8.036550,-1.751466,3.426925],[-7.795274,-0.451108,-4.949050,-5.298528,-7.338424,-5.595912,6.214005,7.843967,-9.601522],[-4.375384,2.934290,-1.600566,9.796888,-5.219553,6.327716,4.025885,-5.521942,-0.609259],[-3.403815,9.769489,-3.321493,1.683756,8.183619,-8.538735,0.738991,-7.632476,-0.901150],[9.805443,5.536737,8.434989,3.416003,-7.814877,-8.583856,8.651301,4.713733,1.542451],[-6.695435,5.143577,4.738873,-6.620830,3.491228,3.360860,5.772458,8.849536,-7.649822],[7.205642,3.779045,4.253452,-0.603514,6.872620,0.797943,7.189532,9.477038,-2.706060],[5.782732,0.209275,7.287115,-4.948197,-7.769002,2.339675,-9.342072,-9.605685,-1.058495],[5.214966,-3.146066,2.061749,7.636436,-4.915538,5.054411,3.003424,0.069428,6.785154],[7.532775,6.420929,6.879178,8.847153,7.904011,-2.516665,1.899185,9.554645,-9.622061],[-7.437521,9.992079,-8.575384,3.632278,6.447584,-3.689432,5.518132,-2.976198,0.321251],[6.854616,2.328323,5.316182,-4.994538,7.443074,-4.955270,-7.851120,5.297861,3.633787],[7.088308,0.361720,1.594724,4.018949,-9.520710,4.809240,-9.109531,-7.732706,-5.826740],[6.403553,-8.055995,-9.351814,-9.546203,8.303890,-7.096378,8.059865,0.559304,0.002646],[-6.507207,7.326819,-5.441386,6.103958,0.801640,2.041529,8.206475,3.000441,7.786893],[-1.380518,-1.904549,-7.213329,5.434777,-5.489410,-7.622529,1.289419,8.438634,8.674096],[-7.875510,-9.298443,-2.279756,3.502882,-2.123661,-1.053103,-7.175062,9.336787,-9.038952],[3.358710,6.149049,6.267857,6.329711,-1.617322,5.636396,5.895163,-4.823985,-0.224159],[4.427038,-3.866565,-7.082186,6.235599,-6.428851,6.768859,-0.209402,-7.302473,4.867615],[-5.352602,-0.927935,1.061799,-0.330827,0.004156,-6.291393,-7.780633,5.650925,8.427246],[4.979633,-2.732949,9.865845,-6.397088,9.970974,8.639157,-1.202576,1.864569,-1.879730],[7.174334,0.160889,-7.947264,-1.839242,1.899015,7.520339,1.158693,-8.864423,-5.320410],[1.592380,6.946482,1.428123,4.372302,-8.474012,9.149661,5.676724,-6.788427,9.780259],[-8.553585,5.085348,-3.124269,-5.255200,9.590036,0.470943,-4.599659,-9.183049,9.852218],[-2.279000,-0.896038,-5.292263,-5.505704,-6.459247,-2.084102,1.194093,1.295713,3.146942],[0.260411,7.763648,-2.049057,6.755996,2.319900,-6.492758,7.743812,-6.571845,-8.704457],[4.434068,-3.690959,4.133652,-5.955961,-7.519486,9.730125,0.444581,7.079830,0.071637],[8.267622,3.935934,-2.607464,-4.821126,-2.522451,6.087175,2.908862,0.709098,-1.011168],[-4.003377,0.237548,-3.943640,-9.332681,-3.764836,-4.080826,7.439966,-2.894146,0.983857],[7.060188,-7.274007,-4.457310,-2.948027,7.359156,2.233507,-3.784785,-0.887893,-3.265060],[-2.538241,-5.643558,1.299731,-1.122064,-0.282969,1.242816,1.479348,4.340383,-6.719003],[-7.497295,3.869605,9.660015,0.109571,5.006222,2.224829,5.526938,-4.614069,-7.214386],[-8.998533,0.729194,7.023554,-3.985744,6.487287,9.948274,0.373879,-4.100568,2.978024],[-1.730192,2.952658,-6.801566,9.271446,-1.258035,4.618669,4.962951,0.505329,-6.750494],[1.720448,1.262348,8.822835,6.063712,-5.928912,5.639191,3.867312,3.292441,9.100043],[8.994740,0.840063,3.132811,4.671793,-1.071285,4.400610,3.654809,-0.431152,0.474549],[9.966605,-0.523694,-1.516358,1.397425,2.129445,-3.514408,-3.722074,-1.300557,8.662331],[-9.672335,-7.462994,9.345688,-5.712946,7.071573,8.792084,-0.389841,6.470508,0.192241],[-1.355712,8.522712,7.151578,8.316268,3.003314,2.734510,7.497644,6.046441,-4.008177],[6.788988,-1.786925,1.762144,8.121670,-0.792216,2.221929,-5.808957,6.006452,2.055123],[6.925095,-1.073551,-5.269638,4.723575,-5.664800,-7.764198,7.424610,9.795812,-7.670060],[3.188203,-8.534061,-8.048839,9.996028,4.146975,-3.206701,0.421037,2.508084,-7.210150],[4.091738,6.065146,8.751461,3.968324,5.772450,-7.997226,0.087889,1.471320,5.351832],[9.695751,-3.672534,5.417967,-6.823079,-4.644862,0.821833,7.151208,-4.604072,-3.084881],[-1.725545,-1.325740,-6.666249,2.269046,6.818716,4.271732,-3.004489,0.055546,3.752480],[2.500769,-2.381304,-5.209311,0.813499,-0.863761,-9.073830,0.593887,-9.363206,0.244306],[-3.212483,1.410928,4.230381,-8.062534,3.552002,6.660507,2.075927,-5.068138,-3.623240],[7.113671,0.903615,-9.578851,-1.558595,-9.266747,7.813922,4.914409,6.912033,4.004773],[4.935434,-5.831448,-7.107971,7.998339,0.710283,3.617203,-5.831956,3.467181,-2.742692],[-1.613386,2.027757,-5.189855,-0.062590,-6.489041,-1.712861,-8.736517,5.634509,-6.037674],[-3.712904,7.167269,-4.867462,-7.980964,8.137025,-7.574655,8.182653,-3.654008,4.649968],[5.736709,-4.176398,2.788226,-2.111645,-6.240869,4.818635,2.885415,5.459104,2.542691],[7.715700,-1.885985,0.079478,-5.917566,8.612379,2.804388,1.545105,-6.543962,-2.969311],[-7.467305,-3.396618,-2.098904,-6.446819,1.733212,6.012230,1.495047,-1.468483,2.281997],[-2.947684,-7.752825,4.534997,-0.374714,2.879478,-2.778178,7.456787,-6.559317,-4.457193],[4.435774,-5.469265,-3.780881,0.399392,-5.749918,9.377636,1.955906,5.807942,-9.771437],[9.806371,-8.685385,8.050013,-3.522750,0.455842,-8.751144,2.222786,-6.062120,8.693894],[1.351984,-5.398840,-7.767278,-8.497434,5.019249,-5.063179,-1.975184,5.655612,-3.594461],[3.975160,2.570096,6.155505,-4.477147,1.911328,-8.472088,5.325319,0.303766,1.901442],[-0.641591,2.676614,6.269516,2.991112,7.046572,-3.641474,5.663749,-2.783428,6.346994],[7.435747,-9.183602,-9.140736,1.415598,0.325743,-4.791911,-4.125103,-2.501065,-5.637764],[1.358138,2.961856,-1.234016,-7.565120,6.567313,-9.408548,-5.321661,0.273339,-2.572809],[9.259294,2.975478,-2.112068,6.123850,-3.603974,-8.541060,-1.138989,-0.197573,-3.872179],[9.499054,7.762250,1.990918,0.116937,8.469590,8.384390,2.031571,8.973302,2.515001],[-5.849987,-0.770755,-5.658561,3.565448,0.789552,-7.021679,1.828318,-2.933831,-4.019039],[-5.592632,-1.334988,-1.779692,-2.177180,-2.812786,2.169861,9.106452,1.584556,-5.340332],[6.149661,-1.458118,-1.866993,-5.665216,-3.532133,-7.463166,4.717746,6.044091,-7.656978],[2.473956,7.267377,-9.189982,1.859219,-0.195025,9.871539,-3.534280,-6.241989,5.429527],[5.426842,-2.522560,3.179835,-2.518002,-8.678760,-5.782028,-2.691435,2.239598,1.494569],[-0.381486,0.889632,6.757861,8.502001,5.655196,-7.125246,-3.723319,4.388666,-4.236412],[2.547896,5.984220,-8.149610,-6.262863,5.182178,-7.333292,7.804954,2.112096,0.257532],[-2.737664,-4.334673,-8.658296,-4.358724,-2.665474,-9.314722,-4.598433,3.585689,8.284698],[9.056314,-9.007396,3.730774,-7.963701,3.463288,7.845552,-7.134879,-8.439175,-0.509479],[-4.920398,3.269162,-3.210538,2.352105,-8.590867,-9.595575,-2.975125,8.868822,-8.713904],[4.826567,-2.816587,-6.662041,0.372960,0.230750,7.428824,-5.020821,-6.746142,-9.357365],[9.877494,-8.677988,-5.614709,9.511001,-1.512365,-9.836659,0.247173,3.945038,-0.601430],[-4.711532,8.116899,5.008963,2.403062,-1.067618,-3.241140,-6.462178,-2.996511,1.811358],[2.842017,4.316734,6.138551,-2.713378,9.111481,-6.835586,9.738583,5.320480,-9.625408],[3.721833,-9.094955,-4.911754,-0.974486,4.695538,5.624772,4.976863,5.582394,-3.067834],[-6.425927,-2.177009,3.191776,-2.851114,6.799422,3.597190,-1.538554,8.378343,-6.624636],[3.282057,-9.055295,4.491229,7.429481,-9.813585,9.898887,-0.643000,7.311335,0.478168],[2.385590,6.716759,2.687735,7.255669,0.740852,-6.820322,-1.923871,-7.819143,-9.526627],[-4.321903,-5.565333,1.729108,9.446770,-1.033725,-4.805362,0.180603,1.518653,-3.933944],[0.842635,-6.447820,-5.292097,-4.681839,9.684719,1.535434,-4.025548,3.536227,-5.164684],[-9.852684,-6.217643,-2.963407,-7.569790,6.028779,-4.636043,-7.956674,0.615008,-5.299275],[-8.901490,-7.269782,5.832743,6.228845,3.005966,-8.080717,8.526986,6.922135,1.725720],[-5.488245,-3.532924,8.306590,5.272261,-7.655990,9.598156,-5.621686,-7.100748,0.098162],[-8.429330,1.438441,3.193215,7.805555,7.519422,4.165064,-9.473996,-3.962948,3.032325],[4.289139,-0.642989,2.296495,-7.139141,7.005793,-1.565136,-8.923351,6.574003,-1.565846],[-2.048065,-2.199250,-9.617707,-4.805158,6.964105,4.225281,4.562493,-7.896673,6.377413],[1.039659,3.596492,-4.998472,1.895068,9.706651,-5.338613,6.528674,4.456506,-6.446012],[6.579311,3.931575,-8.142188,7.177336,7.714722,2.824035,1.260132,3.507920,9.366742],[-7.472801,-2.696958,7.831066,4.288273,8.217704,-7.156149,1.168722,4.810742,3.133043],[1.177858,0.439798,-1.852735,4.240821,1.296263,-8.681905,-1.129733,7.706977,-8.693743],[-6.142332,4.957473,1.300461,3.977885,-2.578544,6.211690,-6.109198,-5.512555,6.503883],[-4.352981,7.534498,5.256623,-5.914149,-7.956176,9.532520,5.492900,1.092488,4.143551],[-9.879756,0.960770,1.089339,-7.584000,1.327214,9.225081,4.274119,-3.431624,7.880321],[2.089959,0.686278,1.134732,-0.857892,-0.331666,-5.696923,-5.860509,3.679361,8.114929],[-3.410805,-9.543958,-4.678428,9.779916,-2.444766,-7.885221,9.737588,3.983400,-4.650781],[8.399294,0.488388,-0.309686,-3.326259,1.293067,-3.548134,-6.715026,-2.833440,-2.942718],[7.913529,4.476441,3.200914,0.820005,2.618656,-4.269954,-7.997620,-2.333847,8.290562],[6.682802,-4.010359,3.894150,6.067650,7.929404,1.825108,-3.108353,5.503071,-5.646892],[-1.507653,-6.368913,-9.204391,7.691360,-3.547954,2.909183,-8.574677,7.368855,1.294781],[4.694772,2.743835,-1.914659,-6.950152,1.634278,-8.041797,1.365956,1.150671,-7.224447],[-6.237691,-5.309291,-9.960529,-0.129433,-6.656174,1.486587,8.514252,-5.145171,5.784711],[1.139783,-8.998540,-1.327442,-1.154569,8.191961,9.179790,2.216173,3.746102,-1.045822],[5.967733,-8.760831,9.940978,2.480499,-4.999367,0.808573,3.932832,0.514830,9.816063],[-4.224700,2.475351,1.668521,-3.149308,-9.326827,2.244293,9.316184,-3.007530,-2.819809],[9.244593,-0.442974,-2.319317,3.277482,-5.240052,5.537869,-3.958478,0.028990,8.475767],[-1.268831,7.791826,7.536154,-4.742450,-2.213424,-8.750660,-3.065945,-8.909044,8.983366],[-4.506509,-4.183257,2.638210,-1.117192,-3.074037,-0.215148,-7.727696,8.036271,6.610304],[-5.391463,9.688530,-5.555975,-7.385272,7.511734,0.781807,9.799916,5.945392,-7.053812],[8.950265,4.009192,-4.963135,1.906959,-6.971218,9.672657,5.035168,3.154135,-4.235180],[-6.853930,-6.228265,0.626872,-9.872478,3.207294,7.612674,-9.071201,-4.843686,-6.479986],[1.770680,-3.626925,-1.070002,-4.398633,9.030263,-7.768907,9.302210,-9.808235,-1.052926],[-0.114239,-8.994674,-6.016680,9.774778,-8.804301,-5.561900,4.794570,-8.795599,-5.229861],[2.144341,-5.375454,-1.231071,-5.211821,5.383568,-3.272272,-2.208537,-9.394890,-4.166050],[-2.681670,-4.573076,-0.087764,9.542042,-8.102207,4.869491,-8.700491,5.767897,2.418638],[6.767503,-1.054589,7.438865,-2.204716,6.780506,-9.296307,-4.366416,3.789645,-4.855906],[1.333798,9.101213,7.224400,-5.706911,8.121257,0.926462,-0.002210,-5.780969,1.649848],[8.105176,-7.888768,7.602319,-0.766477,5.730148,-6.300809,6.909315,-5.460174,5.848958],[1.015332,4.604593,-3.860275,-1.965890,-1.134136,8.285342,-0.839868,4.953908,5.806911],[4.874997,-1.672751,8.634796,-3.126187,7.401906,-3.051139,0.963439,-1.043416,-7.388181],[2.732471,0.290971,-5.318977,4.011931,4.620189,5.354707,0.853311,6.393694,2.539232],[-7.421108,0.371856,-7.161775,1.862079,-2.995801,9.269909,-2.315963,2.526990,-9.169702],[-9.411060,-4.245340,-5.042166,-8.046607,-7.463026,-0.247554,-6.904407,-5.676686,-4.016992],[6.177029,-0.517180,7.560949,6.686323,-4.995623,-5.180184,-1.402317,-5.902681,-1.386967],[-5.266146,2.583754,-2.292350,-3.842417,-4.316511,0.751394,-2.290764,-6.737630,-6.119093],[-8.782385,3.374100,-1.451928,5.779605,-0.934998,5.723186,-7.479255,7.163479,-6.137479],[3.008645,3.062495,6.279177,-6.136829,5.540536,-2.301868,4.495518,1.674265,5.329125],[-3.021235,-6.534533,4.107963,1.901841,0.653837,1.711620,2.276793,3.551006,-6.888394],[7.809366,-1.082830,-6.571990,-9.100079,4.066370,-8.044090,8.045697,9.245083,-1.149720],[7.581955,-1.526816,-5.518944,-0.381921,0.228379,-8.183943,6.517226,-8.421216,2.254868],[-7.314628,-1.141951,5.321111,9.931236,3.672488,6.957536,8.223100,-8.527779,7.717185],[3.816854,-0.555384,8.262119,-5.358030,-6.403259,-7.413466,6.862997,2.055365,-1.564387],[2.275725,2.548349,-1.263888,-8.576909,8.913181,-1.442545,3.025425,-9.366807,-5.266300],[8.063197,-9.857506,4.884252,6.188567,-4.365546,6.458652,2.122081,-0.741157,1.976828],[8.685535,-3.947514,-4.686422,-2.643623,-1.729435,8.073093,-5.180358,1.940320,-6.074680],[-0.552316,-5.121044,-0.909875,9.072965,-7.597950,-7.061134,1.015669,1.661191,-8.524903],[-5.166860,1.885096,-1.699594,7.568998,3.663887,0.972744,5.032460,0.307809,-4.734521],[6.051660,-5.694702,8.573492,-2.026441,-4.425757,-6.525197,4.329226,6.929993,8.390656],[-0.858992,6.505574,-8.146845,1.945296,-7.177660,6.528554,4.911573,-2.523730,-8.904149],[-2.878791,-7.190905,-2.466307,-7.088821,8.077708,-8.408521,5.512004,7.174592,9.141161],[8.408662,-8.924324,4.075262,5.208702,-9.592290,-4.119422,7.012172,8.161181,-3.502215],[7.231609,-5.057271,-6.939801,8.344433,8.609899,-0.234998,-8.835461,2.728277,0.195853],[-8.379433,7.696411,1.370282,7.748509,9.780956,-5.528029,-8.673250,-8.978182,7.199997],[-2.725715,-6.916715,7.048680,-3.924596,-3.018299,-2.318552,-0.418246,-7.026899,-5.196743],[-4.821591,8.485449,-1.634107,6.245903,8.941675,7.234565,-5.430409,1.428651,0.272636],[-9.033841,7.085471,-9.392435,-1.403004,-0.167120,-9.582798,-8.754188,8.193672,-5.475413],[-4.099843,-2.931014,5.416831,-6.582606,6.302753,-2.915084,-0.284751,-3.751645,-0.328722],[-0.080058,-0.635047,2.072721,7.513113,3.344813,0.118511,-1.582459,2.813698,0.144390],[8.473376,-2.764859,-8.844239,8.135476,1.114345,-9.637397,-2.816187,7.817951,1.461793],[-2.830169,-7.078761,4.051672,7.920021,1.987645,2.297177,-2.456691,-0.364970,5.612396],[6.505273,-4.929816,3.733507,-7.634125,4.748467,-6.566320,3.578212,2.575887,-3.163215],[1.482734,-2.160472,-9.106978,-6.310215,-7.651564,9.351891,7.781253,4.458017,-2.222775],[-3.347213,-1.131759,-1.359892,-7.294193,6.254300,9.349722,3.760608,-9.712583,-1.187037],[1.950052,8.281550,0.475346,9.468063,7.122834,-9.882870,2.318715,8.698873,-8.418014],[-8.088542,4.197358,-9.670478,4.668199,2.742094,-3.232721,-5.632163,-5.371692,7.898194],[6.439575,-8.936263,2.411055,-0.817777,6.806885,9.839006,5.894659,8.826205,3.835711],[7.070636,8.684391,-7.751383,-4.784575,1.449527,-9.665055,8.799985,9.286419,9.225099],[-6.873399,-8.986257,4.919741,-0.046030,0.864091,2.454184,0.082669,-1.927845,5.836745],[-3.799488,5.799889,8.245118,5.924451,2.330143,-3.499171,4.195782,-1.766159,5.320329],[2.900025,-4.650762,2.224626,-9.250465,0.770074,9.550404,4.226337,-9.182459,1.660555],[2.066972,-3.480561,7.313945,2.088535,-3.808873,-5.545066,7.712948,7.354755,9.347801],[7.765281,0.176554,-2.911670,8.106152,3.026569,-7.820672,6.154410,8.628190,9.304350],[4.771927,2.472515,-0.361769,8.217009,-7.185611,-8.007809,8.469061,3.523378,-0.932530],[1.835284,8.180983,4.374882,0.721355,7.727372,2.655555,8.717346,1.423522,-1.787433],[8.141571,9.132106,-4.352522,6.829921,6.209690,-1.621701,-0.328440,-0.239236,-4.618427],[5.321083,-1.852911,-8.856142,9.191203,-5.262985,7.452321,0.894670,-0.674801,-0.877763],[-2.908517,-7.807738,-0.048165,2.715907,-4.795797,-2.434826,5.499402,-9.887800,3.176630],[6.768436,4.137308,7.934313,-4.529069,1.539360,-3.425044,7.903360,7.529735,-9.637063],[1.054571,-0.900823,3.518867,-2.049649,-2.002627,7.241643,-5.916794,7.805200,-2.997482],[-1.763872,8.064873,-2.064085,3.029743,-1.706439,3.861116,-9.715126,-3.974087,7.377419],[0.048222,-7.172658,-9.267128,6.151494,3.317527,-6.754790,-2.653947,-7.391957,-8.175656],[7.443296,3.026926,-2.866543,-3.643645,2.575192,8.574883,6.334029,-4.475155,0.837049],[5.234402,8.810400,3.897984,-8.826547,-7.173657,9.744520,6.836697,-7.705656,-2.128360],[-4.506723,4.142896,9.233396,-4.834613,-7.015860,-4.174537,5.722390,-2.216479,-9.433882],[2.692654,9.630635,-8.723509,-2.182496,4.436020,-1.613365,-4.896112,3.423210,-3.973785],[-6.484023,7.727847,7.933477,-7.569070,5.781143,-2.552524,-8.700596,-0.759388,8.069718],[-1.992140,0.925849,0.568759,4.593159,-8.939226,4.401429,5.047540,1.821783,-2.438600],[4.997371,8.109787,-5.967197,-4.327833,7.963160,-3.750074,2.079526,7.013037,6.383041],[-7.070633,-7.264390,2.529354,8.861730,0.094068,6.104076,-2.498666,1.068929,8.083847],[4.867558,-7.068015,-7.050846,5.625327,-2.741325,-4.955351,7.733040,-9.516267,1.919484],[-0.693768,3.644449,9.695262,4.255128,3.824734,-1.091625,-5.128273,-8.837721,-5.561884],[-2.961536,2.103921,-0.203430,-2.977557,-8.400729,3.302655,-0.089435,3.623921,-2.622081],[-9.493740,-6.191286,-2.983369,-6.339973,-1.250183,1.286452,1.494892,-2.943457,-1.674290],[7.755852,0.740119,-2.998330,6.094108,-1.211127,-4.009715,-1.065261,-4.950917,-8.993569],[6.313877,-5.566192,8.281423,-0.414907,9.063229,9.969350,-3.884253,-0.812524,3.239828],[-1.939883,2.070651,4.514773,5.301552,-7.203528,-5.600219,-2.605949,7.271220,5.456789],[5.556197,1.513924,-9.148189,-1.712905,8.192618,-0.834101,5.340880,-1.209621,2.309841],[-5.724707,3.293495,7.219501,0.370301,6.079906,-0.297141,-6.222952,-7.953834,-6.518116],[-4.290533,6.711092,9.153529,-9.493292,2.624684,2.899476,-8.685526,5.289195,-3.349885],[4.224801,8.766850,-0.723515,0.412612,7.452809,-7.471051,6.761898,-2.458469,2.679097],[-9.779743,6.180297,-0.245782,4.884443,-4.343144,-9.096243,5.360356,3.821149,-1.701180],[-3.731716,-7.625055,4.302478,6.867677,2.358857,-2.976950,3.496927,8.988561,-3.957985],[5.015351,-7.628232,-9.944147,-2.462207,1.444172,-5.225557,3.013147,1.410063,-0.800231],[-5.009792,8.633447,-5.804544,-9.022060,9.488188,-9.503491,8.134179,9.527152,2.005634],[-0.610649,5.101327,9.787441,5.399194,-0.413529,-9.040791,-2.257073,-9.214985,6.737980],[5.806893,-0.843448,4.742174,-8.365520,-2.895974,-4.754135,7.461185,8.048228,-0.652225],[9.357308,3.970389,4.968696,-6.786408,-6.929199,3.621735,0.210048,-7.245724,8.291244],[-7.138558,-2.697500,3.984239,5.042673,-0.361834,4.627464,9.130052,-5.288908,-7.808187],[7.420565,9.270925,8.840807,4.355832,6.219609,-7.891396,2.121051,-4.872444,1.173376],[-2.129679,5.444052,5.143930,-3.959777,6.554446,8.578655,-0.703301,-3.605090,7.766308],[-8.337456,9.466040,-3.956781,3.742069,-8.080008,2.949794,8.571801,-6.588687,-4.697822],[-4.296251,3.405748,-4.955020,8.322425,1.628060,-8.968278,-5.933639,6.826889,7.957342],[7.885529,7.021274,-7.467197,-5.608497,-5.441568,-8.708798,-5.481113,4.109173,-9.231921],[6.137448,-8.753896,-5.092675,3.781420,-6.664706,-3.416708,-7.203231,-4.678112,5.681352],[-2.662705,-9.976777,7.372513,-3.355158,1.216230,7.728241,6.960467,-8.429529,2.330075],[-7.184568,1.924492,2.573342,-7.242534,2.383644,9.137205,-4.330180,-1.806423,-7.425630],[1.237016,-3.727613,5.980591,4.268086,-3.074063,-1.525412,-6.830997,-1.017252,6.827298],[3.079158,5.997037,-2.922954,6.669720,-4.916251,-9.820197,3.151754,9.390893,-3.015385],[5.062688,0.864178,6.312825,1.617201,0.447772,2.981457,9.225155,-6.153881,-6.049729],[1.867166,2.393911,2.412567,4.302377,-8.423733,-2.093127,2.939499,-5.333999,2.187320],[-6.343492,6.408972,-8.043603,6.758204,3.667776,-0.272008,-9.455001,1.765278,-9.114314],[7.266027,-3.556266,-6.326562,1.770168,-0.404574,4.359859,8.155437,7.922598,7.710769],[-4.234033,0.590410,-9.082429,7.469928,-1.534808,9.081230,4.542443,-7.398287,-2.944544],[8.168489,-0.473457,8.484234,3.270447,8.756154,1.008042,1.124520,1.647929,0.456152],[-6.548844,7.536466,9.520104,4.900574,4.091950,-1.112918,0.925910,2.640371,-6.704139],[5.157795,-9.892211,-0.983265,9.677326,8.723066,-1.065964,-2.757527,5.282619,4.119304],[-6.828302,5.051504,-7.524749,1.389105,5.060904,5.719443,3.048453,-9.302572,-1.428982],[1.802604,-5.632370,-1.539002,8.379237,1.293350,-2.677697,-1.096751,-0.502214,0.483892],[6.599592,-5.212320,1.468225,-1.930973,-9.511435,-0.452362,1.868313,-4.969391,-1.178845],[0.241477,1.577276,-4.053166,9.285829,8.360737,7.467441,8.726329,8.481408,8.884769],[1.525344,-1.668302,-1.565570,-4.182088,-6.597487,5.564480,-2.079241,5.241170,-9.439101],[5.864821,-1.317117,5.353885,0.571160,-2.134277,-7.765036,-9.499994,-6.773215,8.984994],[5.227067,-5.437568,-2.154267,2.470230,-4.446643,-6.408098,-2.856849,5.476235,-7.480302],[-3.500878,3.229108,1.752158,0.002346,6.098816,-3.918293,-1.894031,0.902203,0.945356],[3.166483,-9.281337,2.285006,-6.943422,-2.143756,-5.251630,-5.827079,8.544825,-1.311446],[5.457119,-9.758768,9.637893,4.729462,-0.648946,-7.113806,-4.755315,-0.727950,-3.659474],[1.768937,-2.706151,-8.482115,6.670675,4.503611,-0.169145,0.510448,9.295828,-8.457266],[-9.395405,7.292945,-9.221433,-7.567048,4.466990,7.943285,4.555324,-0.820786,8.112753],[-5.853445,0.506647,0.030000,4.517497,9.199601,-9.204353,8.935846,3.825210,4.678282],[5.623045,-2.639221,8.325667,-3.108076,-7.168817,-4.188570,4.010548,-3.159749,-5.316509],[-6.715900,-0.887100,7.626808,9.838405,5.502968,2.687692,0.525863,1.019568,9.593403],[0.717174,7.655588,-7.753881,5.913984,-8.641557,-1.351121,6.868395,8.044071,-8.370116],[-0.285898,6.028249,-1.337139,5.259505,8.806179,5.728142,9.117204,-8.039144,-4.014170],[-7.515855,-0.729404,-3.503730,2.990680,0.119576,3.063851,1.994887,-2.383603,-0.427328],[8.929609,-8.140883,-6.180914,4.721339,-9.484874,-1.405275,-9.325669,5.076101,6.157191],[0.646598,4.409020,1.075452,-5.786068,8.477298,-5.901659,2.685062,0.249344,-3.942482],[8.020210,2.954157,-3.467074,1.087401,-2.824525,5.213998,-2.178124,-3.830421,-6.047265],[-7.416391,1.315532,2.730700,8.193829,0.195333,-1.393238,-3.487888,-2.190399,7.140173],[5.556725,6.538685,0.568512,-8.432964,-9.428081,-8.248537,-0.473702,4.471390,-5.752866],[1.975385,-4.621982,-7.194585,5.034940,-9.567942,-6.239265,-2.580892,-5.348352,5.224361],[-3.978614,7.155212,-9.037195,2.951032,2.152202,-9.299038,2.227537,3.404310,6.864073],[-5.232871,7.963939,-1.425794,4.690976,3.406212,-6.132994,1.206623,-0.794850,8.552998],[-1.973379,-2.597184,-1.737738,8.852535,-2.989588,2.372944,-3.704485,-5.011332,-5.835496],[1.039186,0.142756,-8.754168,0.607333,3.726245,-6.715432,1.219832,5.229390,-2.192829],[-7.801628,-2.380380,1.649801,-0.174298,8.332573,0.917760,0.112969,5.590453,1.789113],[7.352925,-3.972105,7.737908,3.796665,1.666121,-7.428252,-4.793593,-7.543383,8.993035],[-1.776029,6.198957,5.781541,-8.570027,-8.214744,4.782608,7.712154,-2.721572,2.361237],[-8.067644,-3.494019,-8.487091,-8.745620,-8.013228,1.178796,-5.258262,2.160259,1.002525]], dtype = "float32")#candidate|5331|(600, 9)|const|float32
bop_5332 = relay.less(bop_5315.astype('bool'), const_5331.astype('bool')) # shape=(600, 9)
bop_5335 = relay.less(bop_5318.astype('bool'), const_5331.astype('bool')) # shape=(600, 9)
output = relay.Tuple([call_5305,uop_5321,bop_5332,])
output2 = relay.Tuple([call_5306,uop_5321,bop_5335,])
func_5343 = relay.Function([var_5313,], output)
mod['func_5343'] = func_5343
mod = relay.transform.InferType()(mod)
var_5344 = relay.var("var_5344", dtype = "float32", shape = (600, 1))#candidate|5344|(600, 1)|var|float32
output = func_5343(var_5344)
func_5345 = relay.Function([var_5344], output)
mutated_mod['func_5345'] = func_5345
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5562 = relay.const([[[7.544196,3.143545,-9.665489,1.640027,-9.040970,9.077310,3.184024],[3.742107,-8.526781,-5.401801,7.769758,-7.663369,5.038417,-7.799009],[6.565803,-5.877331,-1.684989,-2.699844,-3.888439,7.453612,0.056714],[8.155938,9.370019,-2.446620,-1.561519,5.085364,-8.375913,-8.310651],[-9.276441,-3.588599,-1.254432,-9.958002,6.154655,-5.960568,9.475876],[-8.965393,-9.182717,5.673046,-8.357219,2.595984,-1.562587,0.993193]],[[4.335962,-9.489277,-0.443094,1.232131,2.201819,-0.684778,-3.426128],[7.532065,-1.685271,-0.045740,1.103823,8.484003,-5.580375,-7.888161],[3.294795,6.385259,7.282229,-7.877227,-1.424745,2.395485,0.050569],[-0.973769,-2.601028,6.225893,3.316089,6.302335,6.050097,0.630131],[-2.226558,7.958669,9.207165,-4.153315,-1.719329,-1.446638,-9.426920],[7.614465,1.516386,4.970420,6.573297,0.821850,1.208429,0.558892]],[[1.264526,-0.772116,-3.489530,2.148726,-7.007254,6.127843,-3.618579],[6.917405,0.315055,-9.777280,1.967925,-3.705304,4.305369,0.954429],[-2.389971,9.213633,0.655277,2.873027,8.339122,3.715335,-5.998481],[5.571717,3.795592,2.878329,1.476363,9.246300,-8.758536,8.957718],[5.058929,-3.086267,5.098203,7.164156,5.700069,-3.516114,1.294389],[-1.725367,-4.143100,-1.540931,-0.731329,-6.618934,-0.016117,-2.340276]],[[2.492236,-4.345607,0.732282,7.633857,-9.494329,5.400089,0.361239],[8.684383,-3.225599,3.243911,8.800337,-3.633117,4.294488,7.445939],[-4.273562,-7.226512,9.294230,1.916725,6.277978,8.172366,7.588203],[8.145083,-1.835013,-8.713971,-7.422545,-5.416873,1.130635,-9.148298],[4.861580,-7.103537,2.190512,-0.528678,4.008013,8.966385,-2.456770],[9.853936,-8.407696,-1.964000,8.999431,7.783169,-2.040462,4.498518]],[[-6.823036,5.022937,8.200778,7.423135,-3.820724,5.007912,5.060434],[5.584921,7.431056,-3.561723,8.286862,-9.814123,7.658411,2.029416],[5.458663,5.587251,-5.294751,-9.619021,3.471211,-0.915896,0.224886],[8.896096,2.840656,-3.607597,1.719551,-4.579606,0.290420,5.148324],[-8.929005,4.816166,5.500081,9.931982,1.952154,1.987747,4.011451],[-1.731625,0.480227,-9.615236,-3.097583,6.659666,0.476738,6.774271]],[[7.497633,8.274983,1.181004,3.777468,2.760096,-4.846479,-1.991394],[6.082895,7.667115,-0.684476,-9.483300,3.755405,0.998491,-0.875267],[-8.873540,-8.493950,6.667840,9.571513,-4.133064,2.923812,5.631121],[-5.853464,-9.034388,-8.788739,9.760699,-3.024568,9.253281,6.585665],[6.981352,7.888463,2.751576,2.672556,6.126120,5.054575,3.246476],[3.387022,-6.959799,3.359746,-3.908349,-8.211262,-6.734353,6.635490]],[[9.336297,4.118199,-1.216149,-7.603003,-5.084266,-2.876823,0.138874],[9.669202,5.901506,7.406375,-4.623016,-6.028839,-5.226636,-8.693699],[5.369241,-0.713268,-9.055284,6.566429,-1.913211,-9.843825,7.844087],[-7.366736,-9.544049,-7.656819,1.636015,3.906850,-1.501013,-4.501017],[7.549465,0.979657,-6.699690,5.155440,9.115982,1.651734,-0.770479],[-1.893613,4.397994,-3.017561,-3.383417,1.274709,7.732579,4.717904]],[[-5.822371,-7.479916,6.110938,-4.746772,-3.823683,-3.988731,6.835996],[9.721608,-6.201638,8.106816,2.734962,4.089092,-3.389164,9.763530],[-9.379835,0.634841,-8.927502,-5.050276,-6.799108,1.010123,-4.527627],[-5.879740,5.660058,4.359037,-3.418353,7.436128,6.082159,8.903777],[5.439677,8.402753,-4.162115,-6.093593,-3.978889,-3.182267,-6.106081],[9.713199,9.039988,-1.604159,-6.681629,-2.990950,-1.603562,-8.425065]],[[4.722654,-9.602543,-6.771025,-3.754236,-3.524043,3.607971,6.532414],[0.961399,3.741477,-3.566137,8.541516,5.226947,-7.503301,-1.395580],[-0.251992,-3.373086,-6.617128,-5.495415,-6.579334,4.709402,-3.452325],[-2.342300,-1.402023,4.212810,-5.519743,1.967006,-5.638302,6.361363],[-9.544981,9.005033,-8.478597,-8.628772,-9.454157,8.457254,5.911821],[-3.397174,1.082632,4.510276,-3.543539,7.014616,-9.285339,-5.766891]],[[-6.962916,-9.470527,8.944343,0.287196,8.973312,0.552584,-8.408858],[9.447440,0.755143,2.244156,-8.293896,7.705853,2.081556,8.054684],[9.052795,-3.574135,-7.899387,-7.392540,1.210200,2.474724,-4.774305],[-8.484116,-6.700442,-3.531131,7.925381,-8.195962,8.394571,2.471250],[7.502250,-9.316622,-7.712239,-3.592604,6.355133,0.139254,-6.217185],[-1.413295,5.402599,5.067677,-3.547571,8.517674,-6.061957,0.258292]]], dtype = "float32")#candidate|5562|(10, 6, 7)|const|float32
uop_5563 = relay.acos(const_5562.astype('float32')) # shape=(10, 6, 7)
output = relay.Tuple([uop_5563,])
output2 = relay.Tuple([uop_5563,])
func_5567 = relay.Function([], output)
mod['func_5567'] = func_5567
mod = relay.transform.InferType()(mod)
mutated_mod['func_5567'] = func_5567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5567_call = mutated_mod.get_global_var('func_5567')
call_5568 = func_5567_call()
output = call_5568
func_5569 = relay.Function([], output)
mutated_mod['func_5569'] = func_5569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5567_call = mod.get_global_var('func_5567')
func_5569_call = mutated_mod.get_global_var('func_5569')
call_5685 = relay.TupleGetItem(func_5567_call(), 0)
call_5686 = relay.TupleGetItem(func_5569_call(), 0)
output = relay.Tuple([call_5685,])
output2 = relay.Tuple([call_5686,])
func_5690 = relay.Function([], output)
mod['func_5690'] = func_5690
mod = relay.transform.InferType()(mod)
mutated_mod['func_5690'] = func_5690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5690_call = mutated_mod.get_global_var('func_5690')
call_5691 = func_5690_call()
output = call_5691
func_5692 = relay.Function([], output)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5817 = relay.var("var_5817", dtype = "float64", shape = ())#candidate|5817|()|var|float64
var_5818 = relay.var("var_5818", dtype = "float64", shape = (1, 16, 4))#candidate|5818|(1, 16, 4)|var|float64
bop_5819 = relay.multiply(var_5817.astype('float64'), var_5818.astype('float64')) # shape=(1, 16, 4)
func_4897_call = mod.get_global_var('func_4897')
func_4899_call = mutated_mod.get_global_var('func_4899')
call_5840 = func_4897_call()
call_5841 = func_4897_call()
func_4297_call = mod.get_global_var('func_4297')
func_4300_call = mutated_mod.get_global_var('func_4300')
var_5854 = relay.var("var_5854", dtype = "float32", shape = (825,))#candidate|5854|(825,)|var|float32
const_5855 = relay.const([4.493294,-8.775547,-4.673962,5.453020,4.662041,0.900834,-6.211717,-2.525611,-8.694332,9.765828,8.451406,-6.340797,4.038203,-2.832574,3.001708,2.924306,-7.592771,2.444998,4.914547,6.954734,5.766252,7.059872,1.451282,-0.899315,-7.434055,5.952136,6.250959,8.304808,6.029255,2.869313,-5.439173,4.429357,-2.022588,9.342833,-7.616247,7.106082,1.508557,0.059373,-6.978927,-6.805567,-3.724731,-3.540057,-6.411644,-3.790059,7.476260,-0.676804,3.405824,9.190947,-6.112525,3.790822,0.968994,-1.568481,3.654561,1.764294,-4.183317,-9.164918,9.414334,-7.911465,-1.579614,0.269026,5.324654,9.455332,-2.208912,-9.013201,3.467296,4.883330,-3.198438,6.523968,3.664470,0.162994,1.109088,-3.237372,5.549706,-2.060847,-7.110634,5.986445,3.852641,-5.727753,6.685614,-8.219738,-5.432096,-5.906810,-5.975955,-6.733272,-0.565525,5.872148,3.288397,7.299658,-0.230263,-6.233910,5.732555,-8.341135,8.207464,-8.762602,-3.965479,9.683632,-1.738254,7.573467,-3.522254,5.102868,-5.544001,-2.393141,-4.690340,-3.856279,5.837174,9.278007,-5.248168,8.144623,-7.419914,4.206701,-6.977870,4.826553,-3.976104,1.671344,-1.980398,6.109565,9.700794,-5.654792,2.895710,3.809929,-6.456388,-4.154864,-2.767270,-4.694008,6.125244,9.795318,-7.791275,2.183379,-2.730773,6.915050,9.938526,9.685943,-7.109204,-2.476502,-5.388879,-6.680279,4.339692,6.323561,-5.289310,-6.459232,0.611489,-4.216746,6.062555,-3.767854,-3.714713,-8.777911,9.907148,7.636116,-0.219051,5.069147,4.669251,2.312773,-7.164735,-2.296831,-0.766513,9.316395,4.135994,6.390597,9.264889,-8.402823,-8.193612,6.190669,-0.897201,3.260836,-4.623450,3.928785,9.903534,-9.498035,8.020485,-3.719949,-8.036617,-3.608811,6.844850,-0.727300,4.478852,8.415591,0.140626,1.196514,6.720918,-8.050816,-9.548756,1.701185,-4.366819,2.470624,-7.027739,7.769542,8.372050,-7.001031,-1.866768,6.272671,4.352547,8.947115,1.031691,-8.387144,0.070013,8.689485,-4.817730,0.458008,-1.725363,4.283878,0.178118,8.165839,-9.701960,4.199121,-7.170985,-3.669176,5.708352,3.337361,3.653555,2.942737,-4.203612,-1.898227,7.656840,-7.275663,-0.261008,7.452492,-1.503827,1.556127,-9.778214,2.810490,0.941094,8.252749,3.467501,-1.555266,-1.773051,-9.362819,-0.424622,-1.233670,-6.452117,5.487047,-2.712646,-9.506502,-3.066184,0.018805,5.840888,1.131403,-3.293678,8.287314,5.202157,-3.997166,-1.059247,1.877788,8.691566,-3.327109,-3.761517,4.807207,-6.456110,7.477040,3.346933,-5.316034,-0.909438,6.642383,-5.548374,-5.402137,-7.266789,1.164044,3.205552,7.455818,-3.046133,0.070932,-5.604845,8.320541,-9.099382,5.224286,8.995705,-4.672902,2.446019,5.323155,8.044520,-8.583022,-7.754083,-4.843194,-8.943198,5.199384,7.663231,6.321595,0.386748,1.322778,6.682743,2.255204,-7.777303,-3.425331,5.216672,5.062857,-7.503477,6.292703], dtype = "float64")#candidate|5855|(286,)|const|float64
call_5853 = relay.TupleGetItem(func_4297_call(relay.reshape(var_5854.astype('float32'), [825,]), relay.reshape(const_5855.astype('float64'), [2, 11, 13]), ), 0)
call_5856 = relay.TupleGetItem(func_4300_call(relay.reshape(var_5854.astype('float32'), [825,]), relay.reshape(const_5855.astype('float64'), [2, 11, 13]), ), 0)
output = relay.Tuple([bop_5819,call_5840,call_5853,var_5854,const_5855,])
output2 = relay.Tuple([bop_5819,call_5841,call_5856,var_5854,const_5855,])
func_5871 = relay.Function([var_5817,var_5818,var_5854,], output)
mod['func_5871'] = func_5871
mod = relay.transform.InferType()(mod)
mutated_mod['func_5871'] = func_5871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5871_call = mutated_mod.get_global_var('func_5871')
var_5873 = relay.var("var_5873", dtype = "float64", shape = ())#candidate|5873|()|var|float64
var_5874 = relay.var("var_5874", dtype = "float64", shape = (1, 16, 4))#candidate|5874|(1, 16, 4)|var|float64
var_5875 = relay.var("var_5875", dtype = "float32", shape = (825,))#candidate|5875|(825,)|var|float32
call_5872 = func_5871_call(var_5873,var_5874,var_5875,)
output = call_5872
func_5876 = relay.Function([var_5873,var_5874,var_5875,], output)
mutated_mod['func_5876'] = func_5876
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5940 = relay.const([[[9,3,-7,3,-1,5,7,10,7,-10,5,-6,8,9,5],[-1,4,-2,-9,5,3,5,-5,-1,-4,-5,4,2,-3,3],[5,-4,10,-1,10,-8,-8,-6,-8,7,-6,3,-4,-2,-3],[4,-1,-8,4,-9,-7,-1,1,-10,-2,5,1,-10,2,-3],[6,-5,-8,9,2,8,8,6,7,-10,-5,9,-10,5,10],[7,7,-5,4,-7,-4,8,6,-1,2,-4,-6,-4,-1,-10],[-7,6,-10,-7,7,-3,-2,-4,6,3,-9,-4,-1,5,5],[2,-4,-6,-1,9,8,10,-4,10,2,-6,2,7,-8,5],[10,7,-6,-8,-5,-5,-10,5,-9,-4,10,-3,-1,8,-5],[-3,10,6,-3,3,1,3,10,5,-2,-10,8,7,-4,-7],[7,3,-1,3,3,-4,-3,6,-4,3,-10,8,-8,5,1],[-10,-5,-6,-4,-2,7,1,-2,3,10,2,3,-7,-7,3],[-6,6,8,8,5,8,6,1,-8,6,4,-9,-7,8,-9],[-10,5,-4,10,-4,-2,6,-2,9,-3,2,-10,4,7,1],[-2,1,-9,-10,-9,-3,-7,-2,-7,-2,6,8,5,3,-4]],[[8,-5,3,5,2,-8,-8,5,-5,-1,-3,-1,2,4,5],[-10,-4,-3,-9,-2,4,-8,-6,-2,-5,10,-1,10,-4,-9],[-2,4,-1,5,-5,1,-7,-2,1,-6,1,8,-8,5,5],[-2,2,3,5,3,4,-1,-4,6,9,6,9,-1,-2,-10],[10,-4,-10,-6,-6,6,7,-1,-2,-8,10,-2,6,7,-10],[7,-10,2,7,-6,-1,4,-10,8,-3,-5,-8,5,10,4],[-10,-2,1,10,-4,-2,9,-10,3,4,-4,-1,4,8,8],[6,2,-6,-1,-2,3,9,-10,-4,9,-8,-5,-3,5,-4],[3,10,-7,-10,-3,3,-6,9,-3,10,-10,-5,9,5,1],[-6,-1,-2,3,9,6,-3,6,10,-6,3,1,1,6,-4],[9,-3,-6,-1,9,-4,-3,5,8,3,6,-10,-4,6,8],[8,10,10,-6,-5,-2,-8,-8,6,-10,10,7,-2,-2,2],[8,7,-1,4,-9,-2,1,-6,5,-7,-3,3,-8,2,5],[9,-5,-1,-7,-4,7,-5,-8,-7,5,9,10,9,-9,7],[-4,-5,-7,5,-3,-8,7,-9,6,-7,10,8,-8,-8,-5]],[[-10,5,8,-4,-8,2,-7,1,1,2,6,-5,-1,-9,-1],[6,-5,-9,-5,-6,9,-10,6,-2,9,-6,-3,-9,-6,-3],[-5,10,-2,-5,-1,-1,-8,7,-2,-2,1,8,-2,8,7],[7,-2,4,-6,-10,-9,-7,4,2,3,9,-3,-1,3,-3],[3,-2,8,9,-4,-3,2,9,-6,-3,2,-4,-8,10,-4],[-2,6,2,-10,10,-9,-5,2,6,3,-8,1,2,9,-3],[-8,2,8,5,-4,-2,-7,4,10,-9,1,-2,1,4,-9],[-5,-1,-8,-10,7,-10,-6,5,-8,2,-2,7,7,-9,10],[-9,2,1,-7,4,6,2,-1,-2,3,-8,-8,8,-5,-8],[4,9,5,7,2,7,-5,9,-5,-9,-6,-3,4,-2,8],[-3,7,-10,3,-8,9,2,-4,4,-6,10,-9,-8,4,-3],[10,-9,-7,1,6,-4,5,-1,-1,-10,9,8,-5,-3,8],[5,2,-7,1,-9,-5,4,-3,9,-1,10,1,7,6,-6],[6,2,-3,6,-7,3,-10,-2,-1,6,1,9,3,9,6],[4,5,9,-5,2,-10,3,-1,4,7,-3,5,2,7,-7]],[[-7,4,-5,1,-8,3,9,9,-3,1,2,-10,-5,-2,6],[-7,8,-6,-4,6,-10,-1,9,9,10,3,4,-8,-8,1],[-10,8,10,5,-10,8,-2,-7,7,-2,-5,-1,-10,6,-9],[-5,-5,-1,6,-9,-8,6,-5,2,8,9,1,-10,8,3],[5,8,-1,-5,6,-3,2,-6,-2,-9,4,-4,9,-8,-2],[-6,-8,-8,-3,6,-10,4,10,-9,8,-5,-7,7,-4,4],[-5,4,-5,4,7,9,-1,-9,3,-7,7,3,-2,-1,5],[-6,-6,-6,5,10,10,-9,-4,-5,-8,8,-4,-1,-9,-7],[-8,7,-3,6,2,10,-7,6,7,6,4,3,5,6,-4],[10,-6,-5,-1,7,-7,9,5,-3,5,-10,-3,8,-4,-4],[9,-2,1,6,-8,-7,-9,1,10,-10,5,-5,-2,-8,9],[-7,-6,-3,-8,-10,1,3,4,6,10,-2,-8,3,1,-8],[-3,-9,6,5,1,2,3,-4,1,-4,5,-4,-2,-3,-8],[3,8,10,4,-7,3,6,7,4,9,-7,-1,-9,7,7],[-5,-7,-2,6,-4,-2,-4,-2,8,7,3,6,-4,-8,9]]], dtype = "int32")#candidate|5940|(4, 15, 15)|const|int32
var_5941 = relay.var("var_5941", dtype = "int32", shape = (4, 15, 15))#candidate|5941|(4, 15, 15)|var|int32
bop_5942 = relay.bitwise_and(const_5940.astype('int32'), relay.reshape(var_5941.astype('int32'), relay.shape_of(const_5940))) # shape=(4, 15, 15)
output = relay.Tuple([bop_5942,])
output2 = relay.Tuple([bop_5942,])
func_5949 = relay.Function([var_5941,], output)
mod['func_5949'] = func_5949
mod = relay.transform.InferType()(mod)
var_5950 = relay.var("var_5950", dtype = "int32", shape = (4, 15, 15))#candidate|5950|(4, 15, 15)|var|int32
output = func_5949(var_5950)
func_5951 = relay.Function([var_5950], output)
mutated_mod['func_5951'] = func_5951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5953 = relay.var("var_5953", dtype = "float32", shape = (3, 11, 6))#candidate|5953|(3, 11, 6)|var|float32
uop_5954 = relay.asinh(var_5953.astype('float32')) # shape=(3, 11, 6)
func_4382_call = mod.get_global_var('func_4382')
func_4383_call = mutated_mod.get_global_var('func_4383')
call_5957 = func_4382_call()
call_5958 = func_4382_call()
output = relay.Tuple([uop_5954,call_5957,])
output2 = relay.Tuple([uop_5954,call_5958,])
func_5968 = relay.Function([var_5953,], output)
mod['func_5968'] = func_5968
mod = relay.transform.InferType()(mod)
mutated_mod['func_5968'] = func_5968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5969 = relay.var("var_5969", dtype = "float32", shape = (3, 11, 6))#candidate|5969|(3, 11, 6)|var|float32
func_5968_call = mutated_mod.get_global_var('func_5968')
call_5970 = func_5968_call(var_5969)
output = call_5970
func_5971 = relay.Function([var_5969], output)
mutated_mod['func_5971'] = func_5971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5690_call = mod.get_global_var('func_5690')
func_5692_call = mutated_mod.get_global_var('func_5692')
call_6042 = relay.TupleGetItem(func_5690_call(), 0)
call_6043 = relay.TupleGetItem(func_5692_call(), 0)
var_6048 = relay.var("var_6048", dtype = "float32", shape = (10, 6, 7))#candidate|6048|(10, 6, 7)|var|float32
bop_6049 = relay.not_equal(call_6042.astype('bool'), relay.reshape(var_6048.astype('bool'), relay.shape_of(call_6042))) # shape=(10, 6, 7)
bop_6052 = relay.not_equal(call_6043.astype('bool'), relay.reshape(var_6048.astype('bool'), relay.shape_of(call_6043))) # shape=(10, 6, 7)
var_6056 = relay.var("var_6056", dtype = "bool", shape = (10, 6, 7))#candidate|6056|(10, 6, 7)|var|bool
bop_6057 = relay.subtract(bop_6049.astype('int16'), relay.reshape(var_6056.astype('int16'), relay.shape_of(bop_6049))) # shape=(10, 6, 7)
bop_6060 = relay.subtract(bop_6052.astype('int16'), relay.reshape(var_6056.astype('int16'), relay.shape_of(bop_6052))) # shape=(10, 6, 7)
output = bop_6057
output2 = bop_6060
func_6079 = relay.Function([var_6048,var_6056,], output)
mod['func_6079'] = func_6079
mod = relay.transform.InferType()(mod)
var_6080 = relay.var("var_6080", dtype = "float32", shape = (10, 6, 7))#candidate|6080|(10, 6, 7)|var|float32
var_6081 = relay.var("var_6081", dtype = "bool", shape = (10, 6, 7))#candidate|6081|(10, 6, 7)|var|bool
output = func_6079(var_6080,var_6081,)
func_6082 = relay.Function([var_6080,var_6081,], output)
mutated_mod['func_6082'] = func_6082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_6098 = relay.TupleGetItem(func_4151_call(), 0)
call_6099 = relay.TupleGetItem(func_4152_call(), 0)
func_5033_call = mod.get_global_var('func_5033')
func_5038_call = mutated_mod.get_global_var('func_5038')
var_6115 = relay.var("var_6115", dtype = "int8", shape = (192,))#candidate|6115|(192,)|var|int8
var_6116 = relay.var("var_6116", dtype = "float32", shape = (112,))#candidate|6116|(112,)|var|float32
call_6114 = relay.TupleGetItem(func_5033_call(relay.reshape(var_6115.astype('int8'), [4, 8, 6]), relay.reshape(call_6098.astype('float64'), [864,]), relay.reshape(var_6116.astype('float32'), [112,]), ), 1)
call_6117 = relay.TupleGetItem(func_5038_call(relay.reshape(var_6115.astype('int8'), [4, 8, 6]), relay.reshape(call_6098.astype('float64'), [864,]), relay.reshape(var_6116.astype('float32'), [112,]), ), 1)
uop_6130 = relay.rsqrt(call_6098.astype('float64')) # shape=(9, 12, 8)
uop_6132 = relay.rsqrt(call_6099.astype('float64')) # shape=(9, 12, 8)
func_2001_call = mod.get_global_var('func_2001')
func_2005_call = mutated_mod.get_global_var('func_2005')
var_6134 = relay.var("var_6134", dtype = "uint64", shape = (22, 4))#candidate|6134|(22, 4)|var|uint64
var_6135 = relay.var("var_6135", dtype = "int16", shape = (75,))#candidate|6135|(75,)|var|int16
call_6133 = relay.TupleGetItem(func_2001_call(relay.reshape(var_6134.astype('uint64'), [8, 11, 1]), relay.reshape(var_6135.astype('int16'), [75, 1]), ), 0)
call_6136 = relay.TupleGetItem(func_2005_call(relay.reshape(var_6134.astype('uint64'), [8, 11, 1]), relay.reshape(var_6135.astype('int16'), [75, 1]), ), 0)
output = relay.Tuple([call_6114,var_6115,var_6116,uop_6130,call_6133,var_6134,var_6135,])
output2 = relay.Tuple([call_6117,var_6115,var_6116,uop_6132,call_6136,var_6134,var_6135,])
func_6148 = relay.Function([var_6115,var_6116,var_6134,var_6135,], output)
mod['func_6148'] = func_6148
mod = relay.transform.InferType()(mod)
var_6149 = relay.var("var_6149", dtype = "int8", shape = (192,))#candidate|6149|(192,)|var|int8
var_6150 = relay.var("var_6150", dtype = "float32", shape = (112,))#candidate|6150|(112,)|var|float32
var_6151 = relay.var("var_6151", dtype = "uint64", shape = (22, 4))#candidate|6151|(22, 4)|var|uint64
var_6152 = relay.var("var_6152", dtype = "int16", shape = (75,))#candidate|6152|(75,)|var|int16
output = func_6148(var_6149,var_6150,var_6151,var_6152,)
func_6153 = relay.Function([var_6149,var_6150,var_6151,var_6152,], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_6183 = relay.TupleGetItem(func_4485_call(), 0)
call_6184 = relay.TupleGetItem(func_4486_call(), 0)
output = call_6183
output2 = call_6184
func_6190 = relay.Function([], output)
mod['func_6190'] = func_6190
mod = relay.transform.InferType()(mod)
mutated_mod['func_6190'] = func_6190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6190_call = mutated_mod.get_global_var('func_6190')
call_6191 = func_6190_call()
output = call_6191
func_6192 = relay.Function([], output)
mutated_mod['func_6192'] = func_6192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4743_call = mod.get_global_var('func_4743')
func_4745_call = mutated_mod.get_global_var('func_4745')
call_6248 = func_4743_call()
call_6249 = func_4743_call()
output = call_6248
output2 = call_6249
func_6250 = relay.Function([], output)
mod['func_6250'] = func_6250
mod = relay.transform.InferType()(mod)
output = func_6250()
func_6251 = relay.Function([], output)
mutated_mod['func_6251'] = func_6251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6190_call = mod.get_global_var('func_6190')
func_6192_call = mutated_mod.get_global_var('func_6192')
call_6290 = func_6190_call()
call_6291 = func_6190_call()
func_4437_call = mod.get_global_var('func_4437')
func_4440_call = mutated_mod.get_global_var('func_4440')
const_6317 = relay.const([8.268389,6.269770,-4.217076,-8.980760,3.753003,7.263956,-5.502317,9.395860,-1.766983,-6.198403,9.470281,-1.217771,7.090162,-4.346406,-6.541676,-3.462143,4.942404,2.478930,-0.446797,-3.619859,-8.592239,5.498867,-3.092867,-3.672156,5.857482,-3.352572,5.327937,-5.941326,2.843056,8.733819,8.321596,4.977789,7.125882,-7.557461,-1.449910,9.046316,1.165660,2.715604,-1.494443,-8.581031,-9.808285,-9.634501,-1.725931,1.256754,9.241671,0.664317,-5.562378,8.287922,-4.296651,-6.900022,6.573151,2.869547,-8.612707,-0.826582,-1.109018,-9.106514,5.558090,-6.365653,5.655382,3.919324,-9.066652,-1.241543,-7.280446,7.292152,1.269492,9.950793,0.386676,1.876922,-1.623191,-3.484779,7.909940,4.751307,3.041248,-4.933740,9.448528,-1.774547,-9.068319,0.151138,-6.150263,9.495145,-5.761418,-4.358744,5.153784,1.266821,1.471766,-1.299529,2.256525,5.420571,4.610881,5.794202,-4.279171,2.759987,-3.531293,5.092697,8.689568,8.032547,2.241197,7.304594,1.815911,-1.456053,9.582893,9.640678,5.812026,5.417604,-3.260606,9.929972,-6.474385,-1.149412,7.109118,-6.905604,-8.375559,-4.331534,1.263810,8.134480,5.941463,-2.698793,-2.151684,2.539734,-1.499784,5.352499,9.268652,8.491101,4.365406,6.736683,4.441923,2.327701,6.268799,-0.048904,2.150380,7.941613,1.895599,1.364139,-9.675008,2.252969,-2.985160,0.683514,-3.209055,4.739583,-2.499203,-7.016395,-7.814298,-3.079048,-4.499545,0.195613,-0.658822,-2.230148,-8.166242,5.749501,-3.536600,5.249057,3.430240,-0.982841,-8.320256,1.041121,-7.023503,-7.351418,2.908630,-0.944901,0.051007,-9.896862,5.166046,-1.747900,-3.532960,-2.704315,-5.496814,8.789864,-9.400218,6.972412,-3.356414,-5.764123,3.201798,7.090299,2.505216,-2.758030,6.231585,-6.229367,2.553972,-2.338599,-9.087147,-6.058394,2.387166,6.999961,1.194943,-2.369358,6.785192,1.230740,9.571637,-6.037480,-7.311154,-7.460060,3.641156,-2.199982,3.138105,-5.389369,0.344840,-0.569250,5.747712,6.276536,9.141792,-4.221800,-6.129529,6.224252,-6.136361,-3.549442,-6.116103,9.141164,6.675089,-9.727859,-4.727311,-7.794924,0.335732,-3.054244,-6.244502,4.146358,5.113782,2.230227,0.465531,-9.144253,-1.789827,7.123112,3.945105,-0.291423,-0.523701,6.179859,4.164702,0.297526,-5.292817,6.961548,8.030363,-4.474773,-1.117388,-7.564235,-9.310044,-1.799030,6.041312,9.524508,-5.564674,1.881776,-9.788300,0.217385,-3.654850,-8.151667,0.080969,-2.946085,4.321632,9.640922,-1.863358,0.395491,-8.208435,0.873082,2.661199,-2.563544,-8.524930,0.886198,-6.721552,-0.353329,5.718510,-5.121869,5.854656,2.176170,3.174804,-3.758691,-2.440920,2.055342,1.263726,-9.106455,8.233692,-1.959906,-8.428971,1.957680,3.918737,7.728474,-7.562293,5.530392,-2.187900,-9.065111,3.029232,5.807585,7.163557,4.421288,4.979599,2.106285,-2.211668,-0.008242,5.623549,-0.126236,-0.482187,0.530265,5.460659,-6.458153,5.735706,5.356213,5.651087,-4.988185,9.733767,-6.511978,4.218134,-4.721090,9.023030,-8.552158,-6.390426,7.015949,5.626231,0.354144,7.253819,-1.227222,2.908300,-9.225733,8.646949,3.937690,-9.418877,5.619534,9.623723,5.051063,8.666103,-0.867794,-3.318336,-1.910703,-7.262377,-1.403757,0.957407,0.950477,0.833899,0.613846,-6.330706,7.493366,-0.936500,1.960736,-8.468651,4.265035,-7.882434,7.404091,8.235953,-4.184960,-1.554577,-0.814247,-1.728671,-2.657191,4.575302,-5.187138,-8.044796,-2.633227,-1.719188,-1.002733,-5.552283,-6.787141,1.404167,-3.395134,5.953104,8.543686,8.771338,2.765169,2.186787,8.308217,-9.380070,-7.738922,-5.195288,4.026027,-6.065124,3.782167,9.172145,-0.045663,-2.044084,-8.909093,8.869332,2.480745,0.355011,-8.744666,-3.338377,2.835851,5.478563,7.180225,-0.506755,9.447727,-7.375996,6.658393,-5.886257,9.719534,-2.316458,1.002574,9.781816,9.843372,8.444812,1.573640,1.139314,-9.976061,-4.477228,-7.714033,4.908580,-5.175968,7.311534,9.252994,3.364096,-1.589665,-8.796615,3.171953,-9.355500,-1.594014,0.905248,6.528688,-3.292180,9.841247,8.089142,5.015979,9.973496,-8.470667,-6.653382,1.427070,-0.789229,8.669831,4.226279,-5.486693,7.497549,0.797373,-8.936573,-1.255891,4.860697,-8.324662,3.966581,7.928453,8.026312,7.003312,4.459732,0.081667,-5.747320,5.544917,3.626034,9.405741,-3.837800,9.850118,5.434018,-5.895294,-0.385638,5.067941,-4.225022,-5.547670,7.456799,2.242449,-5.074431,-0.511411,-7.388365,-8.631404,-3.105195,-3.533429,8.251192,8.158349,6.890613,1.922492,-1.708765,-2.208280,5.871233,-8.335161,-3.042331,5.875513,-3.391375,-2.077903,8.372536,9.985795,-3.843458,5.543796,2.778902,2.310602,-6.866263,-9.434635,4.283127,5.039625,-1.640753,7.433967,-8.274689,2.192926,4.118285,0.570330,9.371051,-8.611299,-6.606037,6.899718,-6.478476,8.345101,4.799752,-0.628958,-7.735647,8.339315,0.399225,3.766963,8.707940,2.541760,-0.221849,-2.480400,4.390316,-9.231750,-5.426319,4.537970,-7.930610,2.121774,2.268922,-2.304767,5.799459,-5.962465,6.871581,-4.413794,-4.262895,9.048740,-9.339180,-0.079508,-8.518432,-5.601046,-3.674770,1.263018,-8.669447,-6.250069,-9.451753,9.279828,-2.134563,2.562122,1.205601,1.393665,2.765138,0.761823,-8.418101,1.352282,-9.443089,8.544100,1.842681,8.371023,6.920768,8.437019,-1.897172,0.680453,-6.433439,-2.770883,2.613106,-4.797718,-4.245234,-1.902118,2.719676,5.513892,6.089875,8.247419,-2.516026,-6.174054,-3.561056,5.146281,-0.967653,-9.227750,6.490038,4.264643,-7.193419,2.762706,2.385186,7.715382,1.507143,-2.846895,7.543520,-3.027211,-9.743535,3.183234,-5.951469,7.525028,1.326535,-1.082169,8.208575,6.701918,3.812155,-8.036261,2.740803,5.159017,1.348789,6.945792,7.853089,-4.756476,7.318947,2.025775,-0.968724,-8.970356,-1.881103,0.949498,-7.727276,8.707092,5.976264,-7.096683,6.041955,-1.013286,7.006519,4.724813,5.510950,-9.533119,0.517366,-8.293812,5.080571,8.510974,4.685434,6.095058,-8.057692,8.086122,-9.727640,-0.323272,-5.048462,-9.007875,-1.445871,-8.504924,0.035026,-9.846272,-4.033151,3.794934,-2.909565,8.218272,5.680355,9.920575,4.989315,7.887035,4.448160,2.366550,-8.686710,5.885706,2.442223,-3.503057,2.687171,7.293559,-2.525243,8.001745,-5.555720,-6.546346,8.988321,0.008506,7.150043,-5.868425,-6.028962,-7.736575,-4.279814,2.413892,3.833981,-7.619696,5.716798,1.787220,-3.992869,-3.897989,5.189456,-9.470337,-9.768889,-6.964950,5.902919,-1.358247,-3.765854,-6.364666,2.505700,7.355159,-1.745898,0.623076,5.053498,5.826873,8.208467,-3.619168,-2.641163,4.210062,-4.793564,-7.308769,-3.732675,0.922366,7.342370,3.692118,-0.696124,-0.602212,7.836877,-6.119831,-9.286608,-3.441034,7.960666,-9.735152,-7.982992,-8.463105,9.851764,-9.258666,-8.486071,9.388657,1.347740,-4.173857,1.138503,-4.940370,-4.595259,1.336164,-3.524396,-2.387671,3.394802,-5.170645,-5.970809,-3.765429,1.513762,2.139864,4.137743,-0.818502,-7.703339,-4.589021,5.912240,-5.973349,8.876392,-0.885308,7.438404,5.363463,3.902038,-4.289594,-1.233155,-9.842367,8.966223,0.952474,-1.625753,-8.779361,-8.270192,-5.990219,9.889374,5.401057,-9.825440,5.722130,-3.195322,-2.775497,-0.548254,3.633663,-8.449124,-9.037564,-4.764520,-2.929985,1.188171,8.803936,1.815910,9.848216,-2.627786,9.757546,-6.567642,-7.145246,7.800181,7.666032,-7.145940,-5.209078,-7.813046,-1.045300,9.475406,3.836626,1.704697,-5.709348,-3.319622,-4.449783,9.090375,0.538299,-1.237995,-2.674781,4.740279,8.409392,2.331245,-7.818027,-0.055742,-0.128880,5.018232,7.333469,-1.846127,4.464274,9.539617,6.385113,5.616127,1.100080,-2.964371,9.087267,6.473333,8.430815,-3.644592,-8.257374,5.845886,-0.943610,-5.092481,6.398861,-2.839948,5.044991,-8.991310,-6.917337,1.499187,1.926296,8.047742,9.280530,8.570745,4.221616,-2.941213,4.605264,-0.612558,-6.036051,6.525766,9.643621,-2.480384,8.043279,5.715879,-7.052483,7.803462,2.881763,-5.975184,7.701394,8.730619,-7.761117,-9.204940,6.559467,7.982705,4.102162,-3.085504,-1.161635,5.101085,2.295023,2.337851,-8.265956,-4.033444,-3.439397,-9.842031,-7.202689,-3.664943,-5.012167,-7.563757,-2.326482,2.881231,-5.370241,-5.181320,4.754452,2.886594,0.778079,-0.023083,0.836385,1.283913,-7.543051,-5.685852,5.363206,0.748224,1.987431,-1.119330,4.262999,-9.980777,8.620603,9.473737,-0.462496,0.709739,4.014690,3.850342,-0.876170,-8.164172,0.616516,-0.228983,-8.529290,-2.493145,8.763042,0.510693,-1.628179,0.678616,-3.179931,-6.720396,2.327586,-7.288271,-4.658059,6.247433,-6.733523,0.506387,-3.722043,0.471775,6.487588,8.065338,-3.638181,7.702447,-5.221281,-5.796148,4.574479,8.447510,-8.610410], dtype = "float64")#candidate|6317|(864,)|const|float64
call_6316 = relay.TupleGetItem(func_4437_call(relay.reshape(const_6317.astype('float64'), [9, 12, 8])), 0)
call_6318 = relay.TupleGetItem(func_4440_call(relay.reshape(const_6317.astype('float64'), [9, 12, 8])), 0)
func_3271_call = mod.get_global_var('func_3271')
func_3274_call = mutated_mod.get_global_var('func_3274')
const_6324 = relay.const([3,4,4,10,6,10,5,1,-9,-2,8,7,8,-6,-5,4,3,-8,3,-10,3,1,3,3,10,-3,1,-8,6,-3,-4,-9,-6,-6,6,-10,-6,-8,10,-3,7,3,-5,-7,2,2,-9,-5,-7,-6,6,3,-6,5,2,-8,-3,7,1,-9,-5,1,1,1,-8,10,-10,8,-3,3,10,-4,-4,10,-6,10,-1,5,10,9,-10,2,1,-7,-4,2,2,6,9,-1,7,8,4,-10,-9,2,8,-3,-5,-5,-3,-2,5,10,6,-2,-5,-2,4,-5,1,-4,3,-9,-10,-7,3,7,-9,-5,10,-9,8,6,-5,4,-10,6,8,2,-2,-8,-8,7,1,2,9,-8,3,8,-7,-6,3,-4,7,-8,5,-6,-10,-8,-6,4,-2,-2,-6,-4,5,4,10,-10,4,-8,3,-9,8,5,8,9,2,6,4,-5,-10,8,6,8,7,8,9,-6,-7,-3,2,6,5,-6,-3,-9,-9,-2,-8,-7,-4,6,4,-4,-3,-7,-9,1,-6,5,5,2,-5,-2,-3,-8,6,4,-4,-3,5,3,5,-10,-8,-2,-10,-8,-9,8,9,-2,-9,-7,3,1,-7,4,8,-5,-8,1,9,5,-2,-1,8,-8,-8,-2,-4,-2,1,5,7,-8,-4,3,10,5,-10,5,-10,6,9,-2,5,3,8,-5,-7,10,-10,7,10,4,-8,9,-1,5,-5,2,-1,-3,-3,1,-9,-3,5,-1,-4,6,-3,2,-10,-5,-6,-2,-1,3,3,-6,-7,3,1,-7,-10,-6,10,6,-5,-4,7,-7,2,4,3,2,-9,2,-1,-4,5,-6,10,-4,5,7,7,10,-1,9,-4,-6,5,2,10,-9,-10,10,6,-4,-6,-3,-4,-4,-5,2,1,-4,-7,-2,-4,4,5,3,-1,-2,-9,-10,6,-9,5,2,-9,-2,-5,-5,-7,-3,2,4,3,10,1,-5,2,-1,5,-4,-2,-1,1,5,3,-10,6,-10,-10,-2,-8,9,3,10,-3,-2,-9,9,-9,9,4,10,-3,-8,-9,-3,7,1,-10,-8,3,8,-5,5,-3,7,-4,-7,7,10,-8,-5,5,-7,-6,9,-6,-3], dtype = "int8")#candidate|6324|(420,)|const|int8
call_6323 = func_3271_call(relay.reshape(const_6324.astype('int8'), [10, 14, 3]))
call_6325 = func_3271_call(relay.reshape(const_6324.astype('int8'), [10, 14, 3]))
output = relay.Tuple([call_6290,call_6316,const_6317,call_6323,const_6324,])
output2 = relay.Tuple([call_6291,call_6318,const_6317,call_6325,const_6324,])
func_6332 = relay.Function([], output)
mod['func_6332'] = func_6332
mod = relay.transform.InferType()(mod)
mutated_mod['func_6332'] = func_6332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6332_call = mutated_mod.get_global_var('func_6332')
call_6333 = func_6332_call()
output = call_6333
func_6334 = relay.Function([], output)
mutated_mod['func_6334'] = func_6334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5567_call = mod.get_global_var('func_5567')
func_5569_call = mutated_mod.get_global_var('func_5569')
call_6335 = relay.TupleGetItem(func_5567_call(), 0)
call_6336 = relay.TupleGetItem(func_5569_call(), 0)
output = relay.Tuple([call_6335,])
output2 = relay.Tuple([call_6336,])
func_6350 = relay.Function([], output)
mod['func_6350'] = func_6350
mod = relay.transform.InferType()(mod)
mutated_mod['func_6350'] = func_6350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6350_call = mutated_mod.get_global_var('func_6350')
call_6351 = func_6350_call()
output = call_6351
func_6352 = relay.Function([], output)
mutated_mod['func_6352'] = func_6352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6355 = relay.var("var_6355", dtype = "float32", shape = ())#candidate|6355|()|var|float32
var_6356 = relay.var("var_6356", dtype = "float32", shape = (1, 8, 7))#candidate|6356|(1, 8, 7)|var|float32
bop_6357 = relay.divide(var_6355.astype('float32'), var_6356.astype('float32')) # shape=(1, 8, 7)
uop_6361 = relay.acos(bop_6357.astype('float32')) # shape=(1, 8, 7)
output = uop_6361
output2 = uop_6361
func_6364 = relay.Function([var_6355,var_6356,], output)
mod['func_6364'] = func_6364
mod = relay.transform.InferType()(mod)
var_6365 = relay.var("var_6365", dtype = "float32", shape = ())#candidate|6365|()|var|float32
var_6366 = relay.var("var_6366", dtype = "float32", shape = (1, 8, 7))#candidate|6366|(1, 8, 7)|var|float32
output = func_6364(var_6365,var_6366,)
func_6367 = relay.Function([var_6365,var_6366,], output)
mutated_mod['func_6367'] = func_6367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6250_call = mod.get_global_var('func_6250')
func_6251_call = mutated_mod.get_global_var('func_6251')
call_6385 = func_6250_call()
call_6386 = func_6250_call()
func_3793_call = mod.get_global_var('func_3793')
func_3796_call = mutated_mod.get_global_var('func_3796')
const_6400 = relay.const([8.810020,5.189551,6.120066,-6.792479,2.265478,-2.130404,-1.898597,-9.029345,2.707796,-7.717185,7.964640,1.131019,8.343109,1.487364,4.492158,-1.416147,-0.045266,2.798302,-7.715915,-3.816169,1.741435,-9.181807,5.473531,-1.003197,3.328918,1.922327,-9.712116,2.217121,-3.537648,6.062522,-9.864773,-7.407197,7.715806,6.005249,7.725860,8.267643,-8.748725,-7.061256,7.553420,-5.374172,7.932938,4.733914,7.773364,6.985503,9.328630,0.252639,-0.206923,2.551419,5.939760,2.361432,-5.465210,0.211546,5.191886,8.979169,6.345560,3.651305,2.033034,-7.925038,-7.730144,-5.461522,-7.452997,1.448823,9.643343,1.745419,7.402173,0.365689,4.409310,7.780897,-6.240833,2.120663,-8.296376,8.817214,3.701549,-6.523692,1.257409,-1.608935,4.424438,6.331847,-4.340917,8.973147,1.862864,1.896812,-8.952683,3.855411,3.977354,-7.740710,-2.265080,3.433447,3.987887,0.129790,-7.511169,5.650903,3.501439,-5.624858,1.689024,-7.425722,-2.953489,3.582777,-1.284686,-1.543868,-8.336846,0.287384,-9.604193,-2.657221,8.238055,-6.719838,1.217872,4.023948,-6.169467,-2.312148,4.846538,3.841569,9.036417,-3.128173,2.708407,8.867184,6.367970,-6.020924,-3.894198,-0.303929,-0.815908,9.791510,-5.508582,9.652499,5.696008,-1.428866,-2.143979,-2.578104,-1.998235,8.633366,7.257142,5.239884,7.110622,-7.687256,3.357316,6.551083,-2.209420,7.527294,9.463797,4.638911,8.934183,-8.156266,2.972615,2.898172,3.078456,-5.791203,5.033191,-0.355215,9.132981,-5.513132,8.737459,1.218873,8.693075,-1.473158,6.994172,1.144671,6.362892,-7.316779,-7.829083,-4.064851,-3.895003,4.710673,4.543568,-6.355004,-2.318221,9.597667,9.292972,8.187996,9.567343,7.115009,-4.596928,1.073024,-5.589017,-6.042680,0.269165,6.652765,7.684526,-1.307444,-7.442930,-7.558077,1.183283,-7.245587,-5.648774,1.513768,6.603313,-5.935133,1.590397,4.173899,2.195841,0.209931,-1.562039,-7.568162,5.746497,-1.508217,2.881057,-0.090396,-5.102613,3.554593,0.554321,7.261872,-2.806905,-7.224863,4.149701,8.711014,1.668950,-8.341064,9.243565,-4.853876,1.938511,-4.863379,9.041365,1.745654,8.122095,-0.791262,-9.197285,1.489606,0.594885,-1.672545,4.451339,5.963749,-4.755886,0.356041,-7.857578,-7.232884,-1.476740,-7.317991,-4.272684,-4.895638,5.855160,-3.823708,-6.412965,-8.360951,4.236320,-8.091711,-4.969319,6.643454,2.063439,0.091805,-7.667196,0.936330,-2.042902,-0.340566,-5.915811,5.472064,8.827520,1.149198,9.119421,6.191201,-0.349261,-5.892768,6.647470,-6.675033,-8.996956,-8.781724,7.013183,9.556599,-5.860293,-2.679996,-1.938746,-1.907881,1.587367,4.328185,0.042637,2.277055,3.994395,-1.655220,-6.865492,3.122280,-3.889106,7.871923,-1.201044,-8.233077,8.642052,9.446528,-7.855407,1.975022,4.692606,-9.301895,-7.580018,-1.648313,9.309195,-6.673718,9.596211,-2.365962,-2.108413,-8.520029,4.808397,4.113826,2.811679,-0.251748,-5.280733,-2.404891,4.414983,-7.806179,-3.405256,6.124443,0.841929,6.530800,3.501384,9.182194,-0.047457,-7.690492,-5.864062,-4.455514,-4.463246,7.156392,-0.974170,-1.554097,-9.937670,5.698045,-3.230266,6.560227,3.328946,-5.076376,-0.968409,-0.404878,5.413054,-5.972316,-9.224658,-3.919619,-5.113702,5.378812,8.046715,-1.930890,-9.777900,-8.688883,-2.493305,-7.551841,6.320903,-5.965829,-9.501656,-6.274722,-4.664806,0.100131,1.276326,5.002718,2.183017,-4.058368,7.610202,5.695302,9.869631,-1.316171,9.964031,3.791646,7.897808,-4.329175,-2.510963,-0.202070,-6.004297,2.035305,7.096088,4.070591,7.979814,3.432521,-5.964673,-2.953433,-6.030676,7.891543,6.538336,-5.475816], dtype = "float32")#candidate|6400|(360,)|const|float32
call_6399 = func_3793_call(relay.reshape(const_6400.astype('float32'), [9, 10, 4]))
call_6401 = func_3793_call(relay.reshape(const_6400.astype('float32'), [9, 10, 4]))
func_2831_call = mod.get_global_var('func_2831')
func_2835_call = mutated_mod.get_global_var('func_2835')
var_6409 = relay.var("var_6409", dtype = "float64", shape = (48,))#candidate|6409|(48,)|var|float64
const_6410 = relay.const([[9.629649,4.276095,1.962441,8.792341,-4.032145,8.589885,-9.932437,-3.924512,-4.629771,6.436636,-4.630723,8.289465,-3.507681,-8.774784,1.051010,1.226555,-9.378283,-4.736945,0.701649,9.439577,3.805819,2.365734,-3.548259,5.575999,-4.855744,5.447029,-0.674311,8.675159,9.291342,5.199671,3.913972,-0.859566,-0.287458,4.780435,-1.671747,5.347252,-7.063392,8.295008,-3.430819,1.407464,9.028250,-3.797643,-9.548764,-4.770899,7.776954,-6.530259,-1.114042,5.380951,8.044594,0.477852,6.920046,-6.742891,1.103391,6.274173,-2.070614,-1.512456,7.014322,0.015994,-4.940784,-4.845177,-4.859794,8.288721,4.494070,7.922261,7.749553,-2.456321,5.914678,-1.507167,6.490200,-6.630313,1.567310,2.543642,6.022406,-0.496675,0.112500,-5.867629,2.496298,-7.867337,-0.621863,-5.860748,-5.964127,-3.874679,1.989133,-6.394655,-3.568460,-9.830643,-1.923375,9.589943,-7.027400,2.770706,-9.139205,7.056119,6.355468,-5.914444,6.477748,-5.887461,3.015156,6.852563,5.751327,4.248567,2.236146,5.571030,-7.617238,9.520741,-1.703142,-6.237821,-1.708587,8.015406,3.671863,4.804481,-1.073127,9.549329,3.877998,-0.650208,-6.771482,-9.180708,9.875629,4.108643,-5.371700,-0.921226,-3.129753,0.673441,1.566866,-0.426230,-5.530646,0.966900,6.393366,5.196382,-3.856243,-0.937451,8.929435,-7.890462,-8.208765,-4.543947,-0.382128,-6.460068,4.851839,-8.699416,-8.472512,-2.844537,-0.667892,3.687698,-4.385375,-0.112414,-6.150237,1.998227,-6.863149,-4.615040,-5.122189,5.864586,6.269628,8.326882,-9.111504,2.438645,-3.487303,7.977146,-9.721980,8.725256,3.999217,6.397610,-0.832448,-9.722987,-8.894477,7.889575,7.226534,9.972084,-1.976555,-2.649985,-4.375813,0.233251,4.367461,-5.785895,3.384276,-1.665026,0.903386,-5.394497,-0.553331,-7.160556,2.756693,2.237226,1.287804,-7.021642,6.504004,-0.210762,-9.534734,7.545794,-9.784843,1.863851,8.796156,7.786303,9.032952,-5.126846,-1.022528,-6.762199,-2.666430,-6.478575,4.924078,-8.581783,0.969308,-0.731896,-6.731733,7.304670,8.392493,1.876309,-9.743697,-3.303461,-0.727796,-0.783857,8.641082,2.524785,-6.004233,0.328526,-8.483561,2.867324,-1.013905,7.607217,0.487074,-6.784579,-4.179149,5.881869,-7.202424,-7.913506,-3.902213,7.987098,-1.098312,7.264331,-6.623820,-1.146216,-7.078759,7.828889,6.429849,-5.017055,6.802896,-5.970579,-3.514052,5.942445,2.264992,0.541105,-8.377852,2.843723,3.524698,0.119039,-3.313525,-2.123700,8.630674,6.320006,2.562405,8.514328,-8.365950,-1.272362,5.311172,9.808797,1.500505,-2.249455,2.089466,-5.586783,3.212544,9.748265,1.872925,-8.692779,9.128157,-0.371144,7.102689,5.277988,0.415729,-6.941334,4.992047,9.612676,8.132046,-0.512438,6.710864,2.912945,8.450710,-2.930501,8.472418,0.961555,3.947598,9.244769,-8.424499,-3.443069,-4.970910,-5.197095,4.561745,-4.773811,-3.286620,7.246715,-7.534829,-9.672053,3.212319,-7.541703,9.984133,0.680253,1.990910,-0.985535,-3.898560,4.522656,2.760526,-7.914306,8.180982,4.778128],[-6.010133,-9.003989,-1.400895,-3.226979,3.416972,-6.159643,-1.647852,0.264854,-4.706177,3.038828,0.173314,3.966554,8.677214,7.095607,-3.116574,-5.093091,2.321945,1.081175,9.138179,-6.704365,9.295284,2.243290,-4.159384,4.019617,-1.291481,0.378311,-8.217973,2.988106,9.632575,-9.229450,2.968881,-3.950076,8.562617,-2.898357,9.861809,-1.840448,2.850404,-4.791367,-9.183576,-5.127446,0.233571,-4.116887,-6.407487,2.969701,-6.895885,-5.696813,-5.902183,4.850499,-2.776966,-5.290466,-0.171456,-2.704227,-7.109766,0.400739,9.423712,-2.221082,-8.625672,-5.731575,-5.398836,-3.985405,5.536046,-0.037046,3.967466,-8.674882,-9.982251,6.819589,7.988044,-6.995409,-2.983865,-2.102369,-8.611933,-2.859872,-9.380136,7.133488,-5.597939,0.293113,-8.287458,6.724515,7.624614,-1.684008,-2.485099,-6.698432,4.570743,-0.403919,2.228760,1.519118,4.975182,-1.928217,-6.065366,-1.259472,7.191597,9.459460,3.498856,1.067276,-0.779137,-0.363198,1.675275,-4.318077,-2.204689,-6.183361,2.596631,9.768391,-2.674555,-7.950263,5.365810,5.989585,1.534664,5.800828,-9.055232,8.006667,-8.798486,4.336083,0.278939,-4.250528,-7.234845,7.071632,4.791432,-9.227459,-6.214313,-0.457524,8.179468,-8.704100,-1.129664,-2.903107,-7.805318,1.600594,7.769700,-0.120325,-7.855095,-3.547423,1.995361,8.933193,-9.314554,-8.654089,-4.923332,9.647972,2.489755,-9.720867,5.674883,-8.505647,1.793457,-0.630846,-3.653754,9.693612,2.231347,-8.687844,4.339242,6.112559,5.429749,-7.978979,2.139082,-0.772843,8.819707,-1.111461,7.673740,-2.874835,0.595837,8.967936,9.282334,-8.866268,2.336767,2.451345,-4.051974,-7.302044,1.879538,-3.289549,-8.593909,8.398466,0.899411,-9.514246,-7.468034,8.787496,7.448475,0.919732,9.600120,-1.916189,-8.926245,2.358450,-6.506905,1.756217,-7.609104,-7.675777,-2.640647,-0.440947,-4.346651,-0.597710,3.761219,-5.380391,-5.506902,4.174531,8.445385,-5.128138,-6.535531,9.918133,-0.092944,-1.545375,-0.838560,5.505480,-9.207708,-7.215635,7.581982,5.868252,0.070272,8.798556,0.790471,1.214090,-6.741447,1.234306,-1.787149,-1.742521,4.751314,7.210090,7.824764,-5.567957,9.321932,-9.928141,7.584823,1.416077,9.372052,-0.156110,-2.342971,-3.862904,-1.788259,6.835985,-9.372467,8.032295,-0.425650,3.775586,8.293412,6.615177,-6.045181,2.840418,1.333651,-3.217253,-4.518461,7.130348,3.304526,2.915285,2.156270,-3.228071,-9.297558,8.302933,-5.149441,6.254560,-1.704303,-3.948488,-5.564918,-6.488067,4.862759,2.532646,-7.130412,-6.863030,-5.378346,3.212338,-0.773265,3.358655,1.709787,7.377785,0.164582,2.736644,6.809062,-0.312034,-2.841075,3.781713,-1.099006,2.768363,5.157931,-4.281393,5.238526,-9.273573,6.644519,1.531157,-4.562010,-0.843718,2.528138,-5.198030,-7.443409,-5.551314,1.202970,-9.339403,-7.350491,-1.770158,7.391740,0.803910,-3.519110,-1.303168,4.194378,-6.086735,-9.766016,0.591932,5.867587,-9.721898,5.786107,-7.245681,-0.393561,-6.880389,-8.378823,-1.749468,1.431143,-7.442686]], dtype = "float32")#candidate|6410|(2, 300)|const|float32
call_6408 = relay.TupleGetItem(func_2831_call(relay.reshape(var_6409.astype('float64'), [8, 1, 6]), relay.reshape(const_6410.astype('float32'), [6, 100]), ), 1)
call_6411 = relay.TupleGetItem(func_2835_call(relay.reshape(var_6409.astype('float64'), [8, 1, 6]), relay.reshape(const_6410.astype('float32'), [6, 100]), ), 1)
output = relay.Tuple([call_6385,call_6399,const_6400,call_6408,var_6409,const_6410,])
output2 = relay.Tuple([call_6386,call_6401,const_6400,call_6411,var_6409,const_6410,])
func_6415 = relay.Function([var_6409,], output)
mod['func_6415'] = func_6415
mod = relay.transform.InferType()(mod)
var_6416 = relay.var("var_6416", dtype = "float64", shape = (48,))#candidate|6416|(48,)|var|float64
output = func_6415(var_6416)
func_6417 = relay.Function([var_6416], output)
mutated_mod['func_6417'] = func_6417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4228_call = mod.get_global_var('func_4228')
func_4230_call = mutated_mod.get_global_var('func_4230')
call_6465 = relay.TupleGetItem(func_4228_call(), 1)
call_6466 = relay.TupleGetItem(func_4230_call(), 1)
uop_6469 = relay.acos(call_6465.astype('float32')) # shape=(9, 12, 8)
uop_6471 = relay.acos(call_6466.astype('float32')) # shape=(9, 12, 8)
func_6079_call = mod.get_global_var('func_6079')
func_6082_call = mutated_mod.get_global_var('func_6082')
var_6493 = relay.var("var_6493", dtype = "float32", shape = (210, 2))#candidate|6493|(210, 2)|var|float32
call_6492 = func_6079_call(relay.reshape(var_6493.astype('float32'), [10, 6, 7]), relay.reshape(var_6493.astype('bool'), [10, 6, 7]), )
call_6494 = func_6079_call(relay.reshape(var_6493.astype('float32'), [10, 6, 7]), relay.reshape(var_6493.astype('bool'), [10, 6, 7]), )
output = relay.Tuple([uop_6469,call_6492,var_6493,])
output2 = relay.Tuple([uop_6471,call_6494,var_6493,])
func_6512 = relay.Function([var_6493,], output)
mod['func_6512'] = func_6512
mod = relay.transform.InferType()(mod)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6513 = relay.var("var_6513", dtype = "float32", shape = (210, 2))#candidate|6513|(210, 2)|var|float32
func_6512_call = mutated_mod.get_global_var('func_6512')
call_6514 = func_6512_call(var_6513)
output = call_6514
func_6515 = relay.Function([var_6513], output)
mutated_mod['func_6515'] = func_6515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4897_call = mod.get_global_var('func_4897')
func_4899_call = mutated_mod.get_global_var('func_4899')
call_6623 = func_4897_call()
call_6624 = func_4897_call()
func_6190_call = mod.get_global_var('func_6190')
func_6192_call = mutated_mod.get_global_var('func_6192')
call_6625 = func_6190_call()
call_6626 = func_6190_call()
bop_6633 = relay.logical_xor(call_6625.astype('uint32'), relay.reshape(call_6623.astype('uint32'), relay.shape_of(call_6625))) # shape=(16, 13, 10)
bop_6636 = relay.logical_xor(call_6626.astype('uint32'), relay.reshape(call_6624.astype('uint32'), relay.shape_of(call_6626))) # shape=(16, 13, 10)
func_250_call = mod.get_global_var('func_250')
func_254_call = mutated_mod.get_global_var('func_254')
var_6653 = relay.var("var_6653", dtype = "int16", shape = (325,))#candidate|6653|(325,)|var|int16
call_6652 = relay.TupleGetItem(func_250_call(relay.reshape(var_6653.astype('int16'), [5, 13, 5]), relay.reshape(var_6653.astype('int16'), [5, 13, 5]), ), 1)
call_6654 = relay.TupleGetItem(func_254_call(relay.reshape(var_6653.astype('int16'), [5, 13, 5]), relay.reshape(var_6653.astype('int16'), [5, 13, 5]), ), 1)
uop_6656 = relay.sin(call_6625.astype('float32')) # shape=(16, 13, 10)
uop_6658 = relay.sin(call_6626.astype('float32')) # shape=(16, 13, 10)
output = relay.Tuple([bop_6633,call_6652,var_6653,uop_6656,])
output2 = relay.Tuple([bop_6636,call_6654,var_6653,uop_6658,])
func_6660 = relay.Function([var_6653,], output)
mod['func_6660'] = func_6660
mod = relay.transform.InferType()(mod)
var_6661 = relay.var("var_6661", dtype = "int16", shape = (325,))#candidate|6661|(325,)|var|int16
output = func_6660(var_6661)
func_6662 = relay.Function([var_6661], output)
mutated_mod['func_6662'] = func_6662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_6671 = relay.TupleGetItem(func_4485_call(), 0)
call_6672 = relay.TupleGetItem(func_4486_call(), 0)
func_4511_call = mod.get_global_var('func_4511')
func_4514_call = mutated_mod.get_global_var('func_4514')
const_6686 = relay.const([2.966774,-4.082073,-6.034579,-6.829969,-8.375035,-2.549079,3.849581,-3.470789,6.256512,5.971826,1.720317,-6.569467,4.399633,0.224068,5.646673,8.763031,-8.130411,-8.585320,-4.002315,2.015620,-4.654853,-7.375649,-8.942071,-4.297777,-3.932450,-4.779689,4.900543,2.778394,1.913346,6.648455,-1.613583,0.696213,-7.663268,2.167027,-5.731211,6.055096,-9.644397,4.219347,5.479373,8.460023,0.510094,8.630869,-0.163642,6.081987,2.861116,-5.374700,7.866971,-7.535280,3.499354,-8.125011,-7.799141,-7.640093,-7.201398,8.451248,4.449254,1.707138,0.773469,9.721282,9.095773,9.179163,3.272555,-4.957012,7.779882,4.904137,2.860500,8.637791,0.176241,-1.611599,7.469291,5.764545,-6.998744,3.391532,4.912362,-3.107570,8.344953,7.286472,1.774098,7.300788,-9.186999,-7.071400,8.245171,1.740045,7.863528,-9.194877,-7.120262,-5.550059,-4.673693,-3.470640,-1.640538,-7.853169,-8.125141,8.741894,-8.917230,-7.645091,8.159070,-3.547792,-6.651138,9.291185,9.183111,-2.966620,-7.452887,3.952099,-5.111601,-0.481390,-2.935431,-6.547450,0.106422,-8.246053,3.254993,-4.987868,5.007657,2.574264,3.586928,-7.000880,-3.910007,-0.137974,3.937907,5.572398,1.678645,-2.261481,-1.842437,-4.283709,-9.195998,5.157011,9.077957,-5.895665,-5.001274,1.436903,6.581384,1.738704,-1.647114,-7.131496,9.229291,-6.850435,8.146398,-0.792073,6.366072,7.686065,0.867960,9.581697,3.327807,-8.812457,8.079617,0.843006,5.410123,-5.830078,-6.082140,0.287057,-8.584108,-1.862871,-6.590387,-5.458095,0.194401,-4.873972,-1.435048,9.408770,8.925815,-1.126376,7.781244,2.554361,-8.260388,6.076869,-4.186768,-4.096062,-2.623424,3.129068,7.238291,-7.228238,1.414864,5.139953,5.384341,7.875407,-3.333956,8.988055,1.994047,-4.142224,7.148503,-6.312274,-2.054577,-8.961618,7.977078,-6.885826,9.855765,6.217816,0.596387,6.263283,-7.272007,4.681268,-9.942577,-6.893015,-1.382329,5.219665,-5.851581,4.632131,-2.874636,6.523898,8.898815,-4.424481,5.319603,-6.470540,-6.808752,0.802875,-2.739350,-7.059788,8.350385,5.213562,0.229165,9.508568,-7.217552,4.034422,7.094810,2.341213,-6.461023,7.300378,2.824609,-0.814518,7.626582,-5.836348,-2.240862,-1.005470,-1.160767,3.164427,-5.565868,6.103507,-2.626517,8.493587,-8.241989,-1.174797,-4.573220,-0.865620,2.954242,-3.919514,-8.597519,7.443488,8.521554,-6.487240,2.387704,1.112920,6.069072,-4.206563,4.412139,5.682885,-4.384242,-3.224618,6.927463,6.616898,3.586023,-2.725374,-9.086247,4.365896,6.981006,0.750575,1.471916,8.267993,-5.077025,-5.183204,6.375240,1.484491,-6.362476,7.278841,-5.425312,-9.558165,-5.376779,8.384994,-5.124060,-6.753256,-2.827383,-1.419167,-1.891522,-9.929434,-6.841175,6.792366,-5.439592,9.357730,-2.106111,7.419486,0.097939,5.019404,-3.998196,3.007567,4.868763,-5.369948,9.344059,5.569392,-9.903065,-5.773637,4.040594,2.426530,-6.944778,-8.352817,5.938856,1.031425,1.398243,-1.149113,2.079726,7.803203,4.779907,0.662133,-5.568299,-6.075629,-7.998122,0.177383,-2.614759,-1.656344,-3.929643,-2.455209,-2.376670,-2.101478,-1.330389,7.838437,-9.634114,-0.682238,-6.779116,7.832991,-6.054112,-1.306846,-6.511519,-5.970777,-9.648349,-6.323229,0.388483,-5.931266,-0.897284,-8.246253,5.548060,5.983245,-2.419305,8.182742,8.139625,0.650699,-7.274901,-4.739577,-6.328441,-7.649723,6.864525,3.260864,6.175490,-1.635929,-4.193269,-5.346123,-2.763869,-4.197601,8.366567,-8.773933,-7.737750,-3.389772,8.966039,4.122364,-9.821498,-1.716446,-7.306942,-3.790030,3.407390,-9.276226,0.530187,6.146998,-9.926251,-9.225575,4.198690,-3.024301,9.019970,-4.877440,5.179458,-0.690523,2.336781,-1.885681,-5.296529,2.157249,1.334987,6.773840,-0.381616,6.991887,-7.545065,-4.438684,-9.219500,7.677217,-8.690534,-9.362192,-9.516880,3.109199,3.634961,4.114182,-0.472966,8.855985,-3.684022,8.116299,1.668615,1.787001,-1.707886,2.694081,-0.553756,-1.839954,-0.339042,8.516517,5.333179,0.025595,-5.652867,-3.963825,3.340161,-0.092388,6.821753,5.559654,-4.997522,-2.917026,-4.011986,7.644589,8.080893,3.290375,-9.001602,-7.243319,3.848254,-4.589612,-4.025209,7.589960,-4.897459,-3.824755,0.100935,-8.542511,-6.413306,-0.550286,-3.681808,-6.209252,-8.988892,-6.399628,-2.159114,-2.758746,-8.108025,5.815222,-9.668270,-1.431387,-9.034454,-1.285480,-3.420575,-8.107361,5.800694,-4.548322,-3.030083,5.111142,-9.309480,-5.230906,-6.382760,9.247918,8.965463,-5.309993,8.649117,9.813168,7.929866,2.271353,-9.656768,-4.526950,-2.397965,-7.424151,2.102364,3.663957,4.569561,-7.312083,8.236044,-0.931671,-2.866094,-6.864744,8.210911,-3.993674,6.799439,1.285859,7.473280,3.613679,-3.134097,-6.347247,-5.632274,7.330687,7.947771,1.217690,6.484041,-6.467127,-7.015614,1.661410,-9.443551,-1.709917,1.865586,9.993027,-9.181006,2.467073,-9.941382,-5.275959,9.168794,-1.223704,-2.373223,2.525043,7.675588,8.497953,-7.799040,-1.099930,-1.722819,-1.754710,-1.588917,-9.728834,6.490617,6.277696,-7.667537,-2.131405,4.121858,-8.466641,-0.680076,-6.473373,7.901617,-4.588579,-0.507605,-3.329139,3.117214,6.791722,8.639627,-1.335538,9.941304,-1.826296,-3.773780,4.498945,-4.334300,2.994494,-0.262302,-7.113050,3.929806,8.866803,2.067331,5.292716,0.049549,-3.199973,-3.280992,4.327212,-0.325031,1.045150,-1.173144,5.949919,2.392993,0.225863,-3.206283,6.727990,-1.723552,4.877160,1.989692,0.013782,1.883057,5.719325,-3.275946,4.426075,-1.688899,0.697521,-1.979125,3.354009,1.143468,7.170970,7.132303,-7.740725,9.002670,9.587826,-3.319882,7.064147,6.804235,3.337113,3.645748,-0.801965,-6.207738,-8.998663,-9.951606,-8.168576,2.930921,7.009209,-0.847624,-7.816679,-8.173254,-8.728385,-0.113175,-5.740106,-0.653088,-5.014308,6.816470,-8.425839,-2.929709,-8.050687,-1.094716,8.811919,-9.398331,-5.209117,-4.439347,-7.179939,0.919495,7.391194,7.804561,9.509835,9.471671,1.521549,-9.102192,-6.178322,5.361011,-8.526800,9.023321,4.069041,-5.860944,9.026939,-0.210577,7.422186,-2.872125,-9.488389,8.910377,-1.507067,0.603858,9.509810,9.989732,-0.213400,-6.692481,-7.812044,-7.939254,0.770468,-3.237653,2.160648,-7.792130,-0.862457,9.674646,-6.110750,-0.972146,-1.528164,3.851081,6.381725,4.072077,0.868925,-6.109571,-0.455350,0.093091,-0.964728,-4.511027,-3.506155,-6.441723,9.048445,4.858936,-2.475161,-6.425939,7.694318,-9.207052,-7.300131,4.612557,8.104189,-6.211118,-8.556891,6.059531,6.182488,2.351573,2.282943,-6.165124,6.180595,-0.711006,3.445324,-4.316803,-6.877000,3.808192,7.401093,-7.853420,4.501881,-1.911112,-9.606843,-3.108434,0.238657,-2.565103,5.061931,9.117359,-5.586923,5.906917,9.894669,3.706929,-4.347758,-2.412567,3.729446,0.203442,6.045154,-4.929436,2.779250,8.801797,-2.638146,7.563115,-6.497279,2.005112,6.213520,-3.516045,-3.538800,-2.855889,3.527628,-5.092246,-3.964294,9.170806,2.868366,1.232109,-6.910675,1.056992,-2.305546,-3.436318,-6.073314,-7.617773,-9.384344,-8.082630,-5.877948,-7.449306,1.001289,-1.426186,-7.954854,-2.209847,2.599766,-4.967051,-4.056874,2.608187,1.131812,-1.433476,3.236002,3.340398,7.797054,-3.625018,-1.907084,2.976023,-2.735018,3.239896,2.065830,-1.083527,-5.164979,-5.897947,8.642912,4.378960,-2.960650,-4.590907,-5.985925,3.668527,3.756025,0.047621,-8.198552,8.892042,-9.147046,7.810660,-1.178290,4.213096,0.973768,-3.322575,1.572014,8.903881,2.184322,9.639955,7.373644,0.093711,-3.616488,-4.011846,-3.396047,0.179493,5.176720,-1.093265,1.291175,-1.030208,-2.112843,0.619940,-7.480417,8.632878,-1.826030,-6.859626,4.656270,-7.847657,-4.734769,3.635677,-5.614803,-6.058454,6.917761,-8.579474,-8.992116,3.159595,7.200072,-9.307617,9.248764,7.971588,-8.615625,7.812925,6.232403,2.854483,2.804421,-4.636988,-1.722464,9.059554,-7.733235,-5.736999,-5.806920,2.883495,-9.227308,6.806325,1.971513,9.583824,-1.532072,4.856918,-3.988595,-2.343810,2.264221,8.368316,6.017834,-4.681467,-2.669188,-8.522851,-6.274819,-4.257721,1.447937,6.093404,-2.739330,-4.261002,9.832683,9.850410,-5.387628,2.245345,-0.112268,9.023776,4.835599,7.477329,-4.451880,-5.182928,7.381158,2.567230,3.360276,5.952627,7.374611,-5.766721,-1.394293,-1.698191,5.158984,-4.209347,5.160667,4.127581,0.922960,-8.721859,-5.055544,6.700082,-2.678530,-8.283332,4.071386,3.553379,5.078985,2.052434,7.855643,7.759607,-0.317649,4.415994,5.657785,-5.058059,2.881632,5.499611,-8.477357,-8.298667,5.332196,-6.833690,-6.436184,-4.079572,9.485838,1.395132,8.319651,-0.990595,0.749409,7.390734,-4.880853,2.893881,2.866717,-7.960223,5.674215,-6.632595,9.614985,1.956947,-8.566879,-3.918779,-1.473037,8.997172,-5.678835,7.864718,1.369539,-9.924316,-5.547857,8.296836,-5.660969,0.815578,-6.887727,7.860131,-0.227947,-1.356543,-4.144898,7.681331,-8.517981,-7.057138,-6.378385,-3.312130,5.040435,3.897828,0.157379,0.868189,-7.187573,7.597277,-0.628781,3.244582,-6.114458,1.301577,-4.523422,5.462567,0.515482,9.292039,9.567659,6.820121,-5.052878,-8.945657,-4.036578,-5.129184,6.918112,6.853263,-6.818564,-7.403443,-1.182795,2.967171,-2.963886,-8.761352,-1.143601,3.279667,7.760599,-2.401403,-9.397159,5.137854,-5.472412,2.394844,-7.341779,1.339337,2.125090,2.845091,-8.120932,-3.053702,3.842645,-2.356906,-7.640912,3.494910,7.720733,-1.540377,-7.321841,-0.869493,3.348856,-5.466397,-3.066694,-7.080244,-3.044592,-7.666626,-9.519911,0.804328,0.743107,4.119633,-8.359237,5.946648,9.147936,6.396376,-6.328227,-9.667792,8.445306,0.067006,0.214365,-2.330171,8.248690,-2.386896,7.023044,2.355112,3.095417,2.002270,2.725746,8.944806,-0.921142,-6.111826,-3.090728,-1.029794,-6.463499,-4.108566,4.633467,6.204754,7.859800,-3.006237,4.765879,7.413137,-9.889999,-6.033792,4.933555,-9.511926,-7.854510,-3.714045,-6.319001,4.632669,-6.236092,-1.024086,-7.993500,-0.241868,9.737939,-3.301727,-8.153820,5.648980,-8.112345,-3.330425,-2.324039,0.940435,-4.810359,2.138031,-5.787131,4.389778,-3.567882,-5.368154,6.288820,-4.373531,9.672318,6.400989,-6.019173,3.931266,2.514365,2.518946,-3.586000,-8.844972,-4.479081,6.946350,-7.438199,-1.624019,-3.416051,4.720187,3.252582,-3.884263,6.696782,0.130264,8.130776,-7.401356,-1.414371,-2.691285,6.130861,0.425203,-7.507717,-0.520420,3.247818,-1.300301,-1.014881,1.048774,0.496999,-2.832413,-0.178330,2.962329,-9.168431,-7.971143,2.017980,-4.531050,2.697958,-7.738871,-5.112971,2.416535,8.418544,-8.956051,6.315540,-3.543156,8.598234,3.319545,-7.719753,5.183791,1.358609,6.275923,-8.551960,8.895337,-6.841191,-6.043623,-7.091796,-3.942055,2.914070,7.592323,4.361428,9.346148,8.591124,-0.506241,0.223135,-1.191735,2.018855,0.322609,4.837588,0.460264,7.753325,5.459310,1.017670,8.203174,-2.358261,-2.886965,-9.051536,-9.740172,-8.664581,2.620207,3.502662,-0.360644,-4.440004,-6.296634,-5.580136,6.795162,5.617049,-5.578371,-6.569180,9.094068,-8.295402,-8.595476,-2.771369,-9.709318,5.709519,-5.482880,-1.212271,2.499636,5.844948,-8.646677,-5.669949,9.994706,-3.763493,-8.968068,4.600685,5.846108,6.262339,2.537381,5.666598,7.191614,8.845825,5.852636,-9.418496,-0.723694,-1.443904,-7.268970,-8.793798,5.037794,4.611416,-4.801157,0.059130,-8.650728,1.601312,-3.051788,-2.918887,-5.882065,-1.706891,7.237249,-5.922036,-0.726097,-1.313555,6.122537,-9.119539,-5.194394,4.061194,-4.611809,-3.906996,4.413167,-3.896249,-9.081149,9.911211,9.636238,-7.820887,6.879402,-0.100104,-5.683542,-6.764260,-2.168203,-5.479004,-7.357762,2.900692,-1.137135,7.032142,1.518911,-7.901591,-7.853609,-7.573324,5.160254,-9.967157,-6.035977,-8.380359,-5.376688,-0.926142,9.854183,0.618904,-8.777035,-2.138085,-7.308915,6.399975,-6.904744,-1.814833,0.512329,-8.007893,3.737404,0.966873,9.703270,-0.365400,-1.414627,-7.757959,6.028334,3.062555,-3.499979,2.322645,-1.232151,9.372552,-2.746820,1.821345,-7.232906,-6.360891,5.692129,7.975025,8.910959,-6.790760,6.595667,2.563730,-7.540661,-6.442849,-1.678222,1.464504,-3.403649,1.229435,-1.250523,5.601413,-4.094013,0.278237,2.557758,8.831344,-8.552988,6.383835,-4.142983,3.102620,7.808737,-1.928561,4.309051,-3.409826,-6.381192,-6.541193,4.698333,9.433701,5.283971,5.689618,-9.714689,9.781328,-5.768773,-2.793566,1.961281,4.311071,4.122980,-6.120167,7.177341,3.445792,1.491350,1.604343,8.569073,-7.993259,6.278174,6.737359,-4.354271,-9.925917,6.457598,-2.880887,-6.437441,-7.234093,8.827814,-8.053366], dtype = "float64")#candidate|6686|(1248,)|const|float64
call_6685 = func_4511_call(relay.reshape(const_6686.astype('float64'), [12, 13, 8]))
call_6687 = func_4511_call(relay.reshape(const_6686.astype('float64'), [12, 13, 8]))
uop_6701 = relay.cos(const_6686.astype('float32')) # shape=(1248,)
output = relay.Tuple([call_6671,call_6685,uop_6701,])
output2 = relay.Tuple([call_6672,call_6687,uop_6701,])
func_6712 = relay.Function([], output)
mod['func_6712'] = func_6712
mod = relay.transform.InferType()(mod)
mutated_mod['func_6712'] = func_6712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6712_call = mutated_mod.get_global_var('func_6712')
call_6713 = func_6712_call()
output = call_6713
func_6714 = relay.Function([], output)
mutated_mod['func_6714'] = func_6714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6190_call = mod.get_global_var('func_6190')
func_6192_call = mutated_mod.get_global_var('func_6192')
call_6807 = func_6190_call()
call_6808 = func_6190_call()
output = call_6807
output2 = call_6808
func_6813 = relay.Function([], output)
mod['func_6813'] = func_6813
mod = relay.transform.InferType()(mod)
mutated_mod['func_6813'] = func_6813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6813_call = mutated_mod.get_global_var('func_6813')
call_6814 = func_6813_call()
output = call_6814
func_6815 = relay.Function([], output)
mutated_mod['func_6815'] = func_6815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6350_call = mod.get_global_var('func_6350')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_6832 = relay.TupleGetItem(func_6350_call(), 0)
call_6833 = relay.TupleGetItem(func_6352_call(), 0)
func_2996_call = mod.get_global_var('func_2996')
func_2999_call = mutated_mod.get_global_var('func_2999')
var_6835 = relay.var("var_6835", dtype = "int32", shape = (112,))#candidate|6835|(112,)|var|int32
var_6836 = relay.var("var_6836", dtype = "float32", shape = (600,))#candidate|6836|(600,)|var|float32
call_6834 = relay.TupleGetItem(func_2996_call(relay.reshape(var_6835.astype('int32'), [4, 2, 14]), relay.reshape(var_6836.astype('float32'), [600,]), ), 1)
call_6837 = relay.TupleGetItem(func_2999_call(relay.reshape(var_6835.astype('int32'), [4, 2, 14]), relay.reshape(var_6836.astype('float32'), [600,]), ), 1)
var_6840 = relay.var("var_6840", dtype = "float32", shape = (10, 6, 7))#candidate|6840|(10, 6, 7)|var|float32
bop_6841 = relay.greater_equal(call_6832.astype('bool'), relay.reshape(var_6840.astype('bool'), relay.shape_of(call_6832))) # shape=(10, 6, 7)
bop_6844 = relay.greater_equal(call_6833.astype('bool'), relay.reshape(var_6840.astype('bool'), relay.shape_of(call_6833))) # shape=(10, 6, 7)
output = relay.Tuple([call_6834,var_6835,var_6836,bop_6841,])
output2 = relay.Tuple([call_6837,var_6835,var_6836,bop_6844,])
func_6845 = relay.Function([var_6835,var_6836,var_6840,], output)
mod['func_6845'] = func_6845
mod = relay.transform.InferType()(mod)
mutated_mod['func_6845'] = func_6845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6845_call = mutated_mod.get_global_var('func_6845')
var_6847 = relay.var("var_6847", dtype = "int32", shape = (112,))#candidate|6847|(112,)|var|int32
var_6848 = relay.var("var_6848", dtype = "float32", shape = (600,))#candidate|6848|(600,)|var|float32
var_6849 = relay.var("var_6849", dtype = "float32", shape = (10, 6, 7))#candidate|6849|(10, 6, 7)|var|float32
call_6846 = func_6845_call(var_6847,var_6848,var_6849,)
output = call_6846
func_6850 = relay.Function([var_6847,var_6848,var_6849,], output)
mutated_mod['func_6850'] = func_6850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6876 = relay.var("var_6876", dtype = "float64", shape = (15, 5, 16))#candidate|6876|(15, 5, 16)|var|float64
uop_6877 = relay.acos(var_6876.astype('float64')) # shape=(15, 5, 16)
uop_6890 = relay.rsqrt(uop_6877.astype('float32')) # shape=(15, 5, 16)
uop_6900 = relay.atanh(var_6876.astype('float32')) # shape=(15, 5, 16)
func_5968_call = mod.get_global_var('func_5968')
func_5971_call = mutated_mod.get_global_var('func_5971')
var_6909 = relay.var("var_6909", dtype = "float32", shape = (198,))#candidate|6909|(198,)|var|float32
call_6908 = relay.TupleGetItem(func_5968_call(relay.reshape(var_6909.astype('float32'), [3, 11, 6])), 1)
call_6910 = relay.TupleGetItem(func_5971_call(relay.reshape(var_6909.astype('float32'), [3, 11, 6])), 1)
func_250_call = mod.get_global_var('func_250')
func_254_call = mutated_mod.get_global_var('func_254')
const_6912 = relay.const([-6,3,10,8,8,7,9,-8,2,-8,-10,-2,-3,-5,-3,-4,-9,-9,-3,-7,2,-10,-7,-9,-10,-2,3,-5,4,-9,-6,6,-1,6,-3,-4,-8,6,-3,-8,4,-5,6,7,10,7,-8,1,1,3,2,-10,2,-6,3,-1,-6,5,-6,1,8,-4,-10,-6,-4,-4,-6,5,-10,-4,6,9,-4,3,-9,-8,2,-3,-8,-3,8,7,2,2,6,7,5,-6,-2,-1,-5,10,-2,10,-2,2,-2,3,-2,8,-5,10,10,-9,6,7,-8,9,-10,9,3,3,10,-1,-3,8,3,7,5,10,-3,-1,2,2,8,-5,3,-6,5,5,6,7,-3,-7,-10,10,-3,-6,-2,8,-8,-10,-4,5,-4,9,-4,-3,3,-7,-6,6,-9,-6,-1,-10,-1,1,9,-5,6,4,4,-9,9,10,5,7,-10,-7,-1,-1,7,8,-10,10,-10,-6,-4,-9,-4,-8,-7,-5,2,-10,-8,5,-5,-1,7,8,6,10,-10,-2,-2,-5,9,-9,-1,2,-10,-5,2,-9,-7,-6,3,-4,-7,-1,-9,9,6,9,-7,-7,9,-3,7,-8,2,-9,10,-10,-8,-9,7,4,-5,1,3,-10,-1,3,-6,-2,5,-3,-3,-3,6,-9,-9,6,-8,-8,6,-5,-3,-5,-9,9,-8,-10,-7,-5,4,-6,1,-9,-3,-1,-6,-6,-5,8,-7,8,9,-10,1,-1,-1,10,-3,2,7,-2,10,-2,10,8,8,5,-2,-8,-10,9,-8,-5,9,4,1,-1,-8,7,-4,3,1,-3,-3,-7,10,6,5,8,1,2,-9,-6,-5,-3,7,2,6,-2,-6,3,5,3,-5,5,-2], dtype = "int16")#candidate|6912|(325,)|const|int16
call_6911 = relay.TupleGetItem(func_250_call(relay.reshape(const_6912.astype('int16'), [5, 13, 5]), relay.reshape(const_6912.astype('int16'), [5, 13, 5]), ), 1)
call_6913 = relay.TupleGetItem(func_254_call(relay.reshape(const_6912.astype('int16'), [5, 13, 5]), relay.reshape(const_6912.astype('int16'), [5, 13, 5]), ), 1)
func_6512_call = mod.get_global_var('func_6512')
func_6515_call = mutated_mod.get_global_var('func_6515')
var_6917 = relay.var("var_6917", dtype = "float32", shape = (10, 42))#candidate|6917|(10, 42)|var|float32
call_6916 = relay.TupleGetItem(func_6512_call(relay.reshape(var_6917.astype('float32'), [210, 2])), 1)
call_6918 = relay.TupleGetItem(func_6515_call(relay.reshape(var_6917.astype('float32'), [210, 2])), 1)
func_6512_call = mod.get_global_var('func_6512')
func_6515_call = mutated_mod.get_global_var('func_6515')
call_6923 = relay.TupleGetItem(func_6512_call(relay.reshape(call_6916.astype('float32'), [210, 2])), 0)
call_6924 = relay.TupleGetItem(func_6515_call(relay.reshape(call_6916.astype('float32'), [210, 2])), 0)
func_6415_call = mod.get_global_var('func_6415')
func_6417_call = mutated_mod.get_global_var('func_6417')
const_6927 = relay.const([-0.024555,-1.343046,2.165090,-6.214897,-4.795163,-7.854633,-4.154271,2.855999,7.849097,2.972761,3.488007,-9.629780,2.567343,-8.433150,-1.154643,6.424152,0.692753,-7.825928,-0.701203,1.570351,-8.893454,5.202286,2.878338,1.650544,-1.121590,-0.642558,-0.082829,0.736411,9.508607,-3.184789,-4.439549,5.251372,6.294749,-8.845149,-8.006860,7.498567,1.642187,-2.829003,3.479515,-8.338067,-1.736764,0.813460,8.196250,-1.609434,-7.092208,-8.628464,-3.558010,8.102944], dtype = "float64")#candidate|6927|(48,)|const|float64
call_6926 = relay.TupleGetItem(func_6415_call(relay.reshape(const_6927.astype('float64'), [48,])), 3)
call_6928 = relay.TupleGetItem(func_6417_call(relay.reshape(const_6927.astype('float64'), [48,])), 3)
const_6929 = relay.const([[[6.127511,2.238040,-3.452790,-1.488423,7.220745,-8.214884,-0.806226,-0.563907,-9.101355,-1.066049,6.754382,-8.704953,-9.339239,-7.247675,4.407220,-9.339463],[8.677900,-4.485760,1.414793,5.580041,6.331453,-0.982323,-9.444369,-3.237391,-0.335853,0.800453,7.623451,-1.056365,0.829701,-7.119859,-1.423735,-4.185454],[4.978127,6.927436,1.390925,3.121236,9.643852,-1.915235,0.077230,-1.194651,-5.354605,0.849759,1.528571,8.439779,-0.628318,8.957975,0.150022,-1.879555],[-9.671594,0.421650,-6.141936,-5.986192,-9.400947,-5.408954,-1.669285,-6.344893,-1.736849,-5.668462,6.607634,6.962121,-6.538226,7.559008,-3.357857,-8.387035],[7.090783,-5.383428,-3.157788,1.949724,-2.911954,-4.898094,2.933395,0.621066,6.531320,0.165854,3.396614,-9.321197,-8.093099,4.410738,-9.523257,1.675863]],[[5.556351,0.584661,8.301821,4.092899,-4.766602,-7.909272,-6.232839,-7.055566,1.134364,-2.245446,-0.602626,-4.913009,-7.690771,0.215840,0.987353,0.836955],[-1.672528,9.331062,2.502187,5.212747,-0.098391,0.743921,8.715210,-4.626439,-8.844621,-9.907092,-5.864237,9.463518,-0.384345,6.286572,5.851954,3.027924],[8.100033,4.005823,9.119059,9.850424,-5.621648,-6.747558,-2.902326,9.136814,7.168659,9.980817,-6.657352,2.609134,1.796314,5.713878,9.730764,-5.176937],[0.010984,0.642659,0.099051,-4.057120,-9.825933,3.373770,-7.665781,1.934526,-2.610800,6.086998,9.945655,-4.486121,8.362274,8.768957,-8.644898,1.743189],[-2.773810,-3.046938,7.396127,0.346214,7.720331,-1.504938,1.308927,9.598004,-0.948190,8.678998,5.475493,-7.363282,0.082462,4.238874,-2.117823,3.695242]],[[-3.610019,-4.049019,-1.220610,7.776289,-2.898209,0.102789,3.368774,-9.455108,5.194578,7.067723,5.144360,0.403583,8.428128,-1.992291,-1.919256,-7.635868],[7.424742,-7.697477,0.965438,4.716449,-0.567693,7.587057,5.166543,5.998451,1.205029,-7.458405,2.359360,9.060824,-1.752808,-5.664150,1.526560,5.234920],[7.916181,0.480197,4.860901,-0.318399,9.909812,3.500761,5.605158,-7.775429,1.631892,1.194023,-9.156833,-7.225996,-9.420502,5.257315,9.837494,-3.757458],[4.701033,8.357594,-6.174707,-1.795070,-0.836023,2.581507,-3.148094,-2.048749,-6.315532,-6.009661,8.050882,1.587349,6.564955,6.549551,-8.862258,4.360665],[9.097296,-9.637209,8.294046,-6.001185,5.128585,8.540976,1.873406,4.252619,-9.580858,-8.570008,-7.133093,2.570191,2.225994,0.918945,6.518107,9.040922]],[[9.010646,-0.254374,-6.171207,-3.195199,-1.423597,5.322223,-7.995758,6.227480,0.697499,-6.547562,-3.572172,7.224529,-6.645669,5.461813,-9.392913,3.242449],[-5.459947,-2.400798,-7.298287,-2.591943,-2.257359,-0.918601,6.092918,8.894303,4.755137,-3.945435,-5.295503,6.468242,-9.142196,-9.620141,0.379292,9.630174],[0.010795,-8.062232,-4.186585,9.077776,1.505898,9.614826,4.851916,9.407544,-1.538059,-1.889297,6.278010,-0.693673,-6.213719,-2.429168,-9.747074,-5.215996],[1.321894,7.362942,4.319367,3.993706,-9.749336,0.535711,6.827051,-9.748942,1.470868,-7.004132,3.007314,-9.485942,9.913005,4.402482,-2.632625,-2.692112],[2.335741,-5.527296,-4.925587,9.763833,-7.135880,-7.740426,8.521190,-5.100417,-9.312945,9.955286,6.158496,1.839945,3.832401,-2.120825,-8.334393,3.700590]],[[-1.275036,2.437563,7.254972,2.459894,1.836650,-2.647030,-0.811248,9.325950,7.241049,-1.022777,1.621935,-3.069473,6.784187,-8.355509,2.203412,2.787862],[1.448277,-1.974953,4.386855,8.070734,3.608231,0.321948,-6.633795,-7.000763,4.033318,-1.369822,7.774144,0.492710,6.367398,-9.563228,-9.269574,-6.250223],[-9.148857,-3.369396,-3.217934,2.387789,3.444464,7.539285,1.313165,-9.574916,4.279763,6.401881,3.717036,0.623931,8.559536,4.937982,6.330579,4.170158],[-0.524444,5.193346,4.027354,-9.745292,3.084809,-1.949205,-1.435964,6.266831,1.613889,-6.304395,-0.383235,8.857071,3.992488,6.305286,-2.227730,9.128634],[-7.347661,7.607340,6.096778,0.013608,-1.642148,9.164686,-1.881794,-3.764513,-3.732045,-8.740203,-8.881441,-2.395511,-3.231577,-5.872390,-0.366361,2.536969]],[[-3.055311,7.430859,-7.070022,-8.557934,-7.298008,8.151609,-2.100908,3.132539,-2.373900,2.977147,9.350332,6.221150,5.855964,8.410473,1.232479,2.070614],[7.904792,0.483785,6.884958,-5.356519,2.354584,-9.325849,0.631410,-3.950820,2.856076,-3.464642,0.434344,-3.632338,6.251098,6.626011,-6.295924,-4.654196],[5.597650,8.769227,9.654636,-6.754002,-8.174128,2.962057,-0.512489,6.819237,5.998787,4.170330,7.510169,-5.692352,0.598905,0.098230,-3.118321,8.141583],[3.967710,-6.227184,9.973971,-4.122265,2.754085,5.862642,9.403689,1.419096,6.106400,-2.598434,-3.414514,1.513754,-6.633846,9.652244,0.059842,-9.857834],[9.214582,0.389007,3.669564,-1.753801,0.346653,9.190725,5.454449,-8.908737,9.157921,9.245287,1.820594,2.978221,-0.196961,-3.271111,6.000434,-3.054766]],[[3.172177,4.502480,4.402837,7.101439,-5.573021,-1.034012,5.336689,-8.152730,7.802940,-0.282952,-6.680394,-8.482519,-6.828901,-9.127384,0.170756,-0.415469],[6.372411,8.005436,-3.988584,1.701361,1.154321,-4.894580,-4.072545,3.770619,-3.242843,-6.915808,1.981125,9.506468,6.187215,-5.871408,6.158571,3.517358],[-4.986437,9.217121,1.331231,4.845388,-6.647888,5.119782,-3.001924,-5.691986,-6.028566,-4.839593,9.996751,5.086438,8.438530,0.563017,1.961940,3.046523],[-0.095454,-8.670362,-2.721087,-4.094264,8.056916,2.899343,4.312375,-9.497073,4.042546,8.567507,1.344566,8.083142,-9.711319,7.113390,-9.963851,-8.275008],[2.267081,-6.831664,-7.218123,0.430884,2.903969,-7.665119,-5.979918,-2.419915,9.070346,0.546172,0.592153,2.449181,7.170255,0.447990,-6.605886,-0.370861]],[[-1.711077,5.429964,-9.287425,-3.639774,4.479082,-4.804902,6.012235,2.326919,-8.237896,7.723227,-3.069025,-5.395122,6.746751,3.541390,7.977000,-7.766842],[-4.721636,-3.048310,-7.683636,-7.830723,5.308451,3.799359,-3.880191,3.043145,6.799129,-0.069375,-7.815278,-1.163628,-5.960415,5.571356,5.005237,8.334369],[6.119174,-2.586671,-3.998647,0.152873,3.721354,-7.346377,-7.337466,5.996805,3.803700,6.087405,-2.817565,7.760410,0.553288,-7.095881,-3.520455,-3.520843],[1.349417,7.560996,-9.646034,-0.307219,-2.386299,5.885848,-9.589245,-3.432258,-9.922717,3.251150,5.276488,8.013843,8.348810,-4.425021,9.098053,0.889002],[8.412900,-2.453625,-4.870339,-6.477776,6.519657,6.851355,-0.132316,5.608353,1.011470,1.355588,-7.445166,4.740297,-2.236980,8.481680,-0.610882,-2.090761]],[[-5.529917,5.040633,6.416810,9.320046,9.364898,0.098051,-0.258353,-2.926513,2.189975,0.704617,-9.722172,-3.450715,-8.091904,-9.876869,-2.398803,-7.403085],[5.966746,8.337266,7.741695,-1.921019,2.104367,-7.170217,-7.726265,4.979105,-5.437130,6.667994,6.903233,3.587238,-1.077451,0.271750,9.839208,2.071390],[3.475456,9.958315,5.061085,-3.652589,6.713023,-0.641989,8.060099,-0.849991,-3.714909,8.764125,6.132152,4.874091,-2.687124,-4.705616,8.342266,0.895153],[8.477466,8.301805,-5.295530,1.662510,4.840088,8.651920,-3.106862,-2.766344,-6.984551,-9.344917,0.390711,5.504591,-1.747116,8.488454,6.705408,4.803900],[6.450938,4.458968,-5.923922,-2.508268,-6.821973,-4.940939,0.126788,-4.969581,-4.714703,4.829249,-8.076849,-7.726594,-2.896307,-6.477185,-9.438275,-4.671331]],[[1.662507,2.482460,8.661878,5.641985,3.227372,-7.134940,-5.618917,-8.796353,9.443664,-6.088422,-8.112512,3.214550,-0.244836,-6.803987,5.059201,7.556700],[-4.218301,-4.937422,-1.900728,-9.660251,5.976382,-7.666729,3.183574,5.133287,-3.216203,-3.838689,-6.976151,1.445336,-5.512996,2.684376,4.198702,-6.888830],[9.773447,4.396117,-5.289710,9.086419,-4.294325,1.105527,7.949441,-2.299326,2.880704,-0.933272,-5.658274,-7.802969,-7.478220,-6.900787,-6.112592,8.389307],[3.145337,8.965173,-5.816745,-9.034583,-2.757198,-6.193739,-7.487612,7.222706,-8.564703,7.514375,-5.889847,6.456597,8.727800,-2.597344,-4.916220,3.338541],[-2.045325,5.939316,3.353266,6.158363,7.179872,1.489294,-9.411503,5.222704,4.308562,-5.897998,4.706041,-7.376025,2.757775,-6.194558,-7.964173,-5.619215]],[[4.313871,-2.729572,8.183785,-7.478699,0.222598,-0.152566,7.034278,-7.452514,-8.784801,-6.455032,-2.771244,-4.539526,3.659477,7.234778,-6.811167,-5.312892],[0.815188,-0.910261,-6.625621,-8.596562,0.412547,5.179183,-6.028707,5.168862,-2.079720,-9.703918,-0.027061,6.725314,-8.873782,0.167557,-5.011298,-6.667082],[-6.912345,-5.997184,2.945469,7.820770,6.669800,4.630061,-3.109196,-8.623801,-3.819318,-9.750593,7.766623,-6.382032,-8.748346,-2.953478,1.813244,7.293398],[6.226830,-6.338085,-7.143545,4.259931,8.823580,1.562839,8.919266,-7.604132,6.361739,-8.601224,-7.229268,-4.404433,5.780648,7.020632,9.776083,-0.146306],[-7.767851,5.767795,-5.451530,-8.723144,-5.930942,-1.824306,7.606488,7.231855,8.635721,6.132079,7.363892,-7.504930,-9.494632,2.552859,-2.158164,7.683458]],[[3.966418,4.020896,7.653055,0.771131,-4.297636,-3.778305,-6.979749,-4.204330,9.086490,-5.040646,6.930030,9.685198,-0.602571,1.258686,9.254695,-0.471898],[1.205719,-2.515543,2.253756,-1.135795,3.003431,-0.417191,1.836500,9.268492,-8.078493,1.897303,2.645533,-4.629603,4.721360,-7.657286,-4.335400,3.069747],[4.217254,-9.609419,2.568655,-5.254237,3.135657,4.347903,8.913051,-9.077880,-2.683842,5.577753,-7.958991,9.081272,0.691584,-0.932131,-1.088039,1.124905],[-7.260635,7.392210,1.929112,-1.859057,-1.279993,5.515189,5.427034,7.840864,4.652959,3.978972,-6.518558,5.617436,-0.622482,9.622294,-5.702917,-2.196451],[5.215584,-2.438223,0.398343,9.148514,-2.969329,2.191161,-2.156499,1.429508,1.998097,-0.270339,-4.593708,3.250624,3.104593,6.357454,-9.519520,-9.376611]],[[1.020642,-3.842438,-6.988883,-4.264512,-9.564918,-6.988570,5.917308,-1.299175,-4.663093,-1.000393,-3.727158,5.915881,6.234523,9.530856,0.358984,6.429031],[0.960675,1.304322,9.646798,-9.482211,-7.547721,4.141070,8.639137,-2.956580,-6.606080,-6.413532,1.093861,-5.106025,-4.167968,-6.025712,-3.703649,7.713475],[0.176837,5.032438,-9.317544,-8.870203,-9.251614,-5.415604,1.200457,9.907062,-9.191683,-7.344398,3.464867,-1.646220,7.355496,5.808489,-5.594190,9.692897],[-6.630217,-2.871320,-5.676264,6.756902,-5.931154,-6.795903,-5.682128,4.506694,5.645414,-9.332739,2.775509,9.867786,1.597286,-9.466998,9.720514,4.369904],[-5.544873,-0.753551,-4.039421,9.791914,-1.737169,-2.618286,1.386407,8.198875,-4.460976,8.472503,-8.467295,-5.158829,-1.223153,8.480004,-9.281204,4.867984]],[[-7.672530,1.364739,2.794266,-2.180635,9.812256,-7.607635,-0.360432,4.595240,-2.655625,-0.850929,3.739257,-0.312292,3.976301,9.346555,1.547978,-7.383469],[7.345725,-9.403419,-7.861234,-9.668524,-2.407968,-1.251234,-7.048469,8.523838,9.695075,0.900742,-7.058187,-9.305799,4.331581,8.700633,-1.648830,-8.163866],[6.177254,-8.688748,9.463459,8.974866,7.120860,5.292579,-9.427671,-8.605288,-8.481343,-5.414049,-8.494677,0.202090,7.842458,-4.512283,-5.951363,4.429118],[1.102677,-8.286015,-0.002020,-5.381958,0.416273,3.377405,-4.187909,7.056560,4.387255,4.125223,-8.057975,0.763364,7.022188,5.816539,-3.211288,-0.723621],[-2.121745,3.498358,-8.750606,6.428609,2.917209,7.077835,-8.609485,-6.509700,6.215241,2.458505,-9.174577,0.672340,-6.402466,-1.080610,5.848361,0.228786]],[[1.821517,-4.768884,-1.703385,3.439094,-4.339106,-1.141818,-2.846529,-6.663936,-1.902503,0.608383,-5.028631,8.302355,-8.278778,5.820950,-9.156945,9.139387],[2.296846,9.624356,4.241290,8.962137,-4.513416,1.999508,8.871725,-0.691583,6.987190,-4.687727,-3.033603,8.784726,0.739123,-0.815182,4.683809,3.226738],[3.801157,-4.470252,-3.271795,-1.068844,0.668738,7.243305,0.844869,0.952337,2.596678,-6.820643,1.896352,-1.831495,-7.855826,-8.136774,1.145013,6.749706],[-0.493876,8.718218,8.247461,1.525333,2.900142,1.376123,-6.498597,-0.859177,3.418324,6.141536,-6.865553,6.818821,-2.074857,-8.247347,-7.229201,-9.086765],[5.917190,6.938315,2.125608,-1.192528,9.534510,4.906192,-4.008103,3.204369,-0.834842,-4.776503,3.214482,-6.707912,8.875558,3.630243,-4.841452,-8.126844]]], dtype = "float64")#candidate|6929|(15, 5, 16)|const|float64
bop_6930 = relay.mod(uop_6877.astype('float32'), relay.reshape(const_6929.astype('float32'), relay.shape_of(uop_6877))) # shape=(15, 5, 16)
func_4511_call = mod.get_global_var('func_4511')
func_4514_call = mutated_mod.get_global_var('func_4514')
var_6959 = relay.var("var_6959", dtype = "float64", shape = (1248,))#candidate|6959|(1248,)|var|float64
call_6958 = func_4511_call(relay.reshape(var_6959.astype('float64'), [12, 13, 8]))
call_6960 = func_4511_call(relay.reshape(var_6959.astype('float64'), [12, 13, 8]))
output = relay.Tuple([uop_6890,uop_6900,call_6908,var_6909,call_6911,const_6912,call_6916,var_6917,call_6923,call_6926,const_6927,bop_6930,call_6958,var_6959,])
output2 = relay.Tuple([uop_6890,uop_6900,call_6910,var_6909,call_6913,const_6912,call_6918,var_6917,call_6924,call_6928,const_6927,bop_6930,call_6960,var_6959,])
func_6964 = relay.Function([var_6876,var_6909,var_6917,var_6959,], output)
mod['func_6964'] = func_6964
mod = relay.transform.InferType()(mod)
var_6965 = relay.var("var_6965", dtype = "float64", shape = (15, 5, 16))#candidate|6965|(15, 5, 16)|var|float64
var_6966 = relay.var("var_6966", dtype = "float32", shape = (198,))#candidate|6966|(198,)|var|float32
var_6967 = relay.var("var_6967", dtype = "float32", shape = (10, 42))#candidate|6967|(10, 42)|var|float32
var_6968 = relay.var("var_6968", dtype = "float64", shape = (1248,))#candidate|6968|(1248,)|var|float64
output = func_6964(var_6965,var_6966,var_6967,var_6968,)
func_6969 = relay.Function([var_6965,var_6966,var_6967,var_6968,], output)
mutated_mod['func_6969'] = func_6969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6250_call = mod.get_global_var('func_6250')
func_6251_call = mutated_mod.get_global_var('func_6251')
call_7020 = func_6250_call()
call_7021 = func_6250_call()
output = relay.Tuple([call_7020,])
output2 = relay.Tuple([call_7021,])
func_7050 = relay.Function([], output)
mod['func_7050'] = func_7050
mod = relay.transform.InferType()(mod)
mutated_mod['func_7050'] = func_7050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7050_call = mutated_mod.get_global_var('func_7050')
call_7051 = func_7050_call()
output = call_7051
func_7052 = relay.Function([], output)
mutated_mod['func_7052'] = func_7052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4382_call = mod.get_global_var('func_4382')
func_4383_call = mutated_mod.get_global_var('func_4383')
call_7083 = func_4382_call()
call_7084 = func_4382_call()
var_7088 = relay.var("var_7088", dtype = "uint64", shape = (16, 13, 10))#candidate|7088|(16, 13, 10)|var|uint64
bop_7089 = relay.not_equal(call_7083.astype('bool'), relay.reshape(var_7088.astype('bool'), relay.shape_of(call_7083))) # shape=(16, 13, 10)
bop_7092 = relay.not_equal(call_7084.astype('bool'), relay.reshape(var_7088.astype('bool'), relay.shape_of(call_7084))) # shape=(16, 13, 10)
func_4437_call = mod.get_global_var('func_4437')
func_4440_call = mutated_mod.get_global_var('func_4440')
const_7094 = relay.const([-7.590382,-7.929019,-9.008680,-9.495319,7.847701,9.403360,-2.081838,0.436392,8.736433,7.777859,-7.718391,6.281323,9.632758,2.935616,-3.292713,-6.292803,-6.372095,-5.882123,2.879013,7.722666,-3.653843,-1.204052,5.835781,9.919540,-8.623581,4.914172,6.979097,-8.043957,0.995379,1.495975,-8.977043,-1.255257,3.717455,6.001816,-8.233422,7.276709,-7.439432,2.996320,3.277091,-0.282575,-0.767255,-0.376961,4.326789,-7.328266,7.609410,-8.975852,5.092195,-3.407951,3.692537,1.402878,7.536194,-2.655713,6.227950,5.483706,-6.597026,-9.102226,1.376428,-9.581375,1.417110,-9.651746,9.740725,-7.761049,9.080010,8.079181,2.664140,-7.679653,1.373536,-5.792141,7.485593,3.329593,6.235229,-1.631526,1.022829,4.466286,5.772637,5.260019,-8.407047,0.581293,-8.870531,-6.356857,4.887354,-0.884212,5.447719,2.454133,-4.272111,5.795326,-1.132202,1.141313,-0.808465,-9.431881,-1.254720,-5.833311,-9.955469,-8.756589,-9.225029,-4.440775,-0.121596,-0.476372,6.653498,-1.617302,6.076768,6.269809,6.574118,2.742542,-7.593459,5.556770,9.443596,9.810994,2.850147,-5.152846,6.611669,9.336964,-5.790080,5.979965,-3.022308,0.315083,9.299550,0.399789,8.657088,4.199715,3.259965,-7.748862,-0.304836,-5.463244,-3.416203,-5.903655,5.991703,7.564849,8.005005,1.908083,-4.349879,1.135537,5.826971,-4.731973,6.983706,-8.890285,-8.497122,0.645405,3.428048,-6.911761,6.615602,9.970176,-1.710335,-5.596510,3.774419,3.391018,-7.343790,-1.472071,-8.205876,5.561618,-7.410907,-3.382524,-0.628657,1.831563,1.703125,0.356066,-6.657196,6.452276,5.722761,1.100050,4.235169,-1.103146,0.307615,0.779243,8.510154,-3.647586,6.205109,-8.687615,-8.799980,5.126699,7.692542,-3.424012,7.438455,0.585900,0.706256,4.188764,2.042570,0.987009,-1.213552,-8.698691,6.725569,8.443251,8.574822,-9.447541,-4.534334,2.231199,8.697650,3.538754,2.310782,2.549255,1.490694,5.938022,4.333263,-7.907231,-8.733488,9.318741,3.039948,-2.551334,5.390403,-0.598095,-0.764142,2.339774,-3.089020,-7.398818,2.906547,-8.803851,-8.117238,-4.862112,-1.723951,-1.370523,7.342171,-1.135820,-6.015791,-5.900393,-2.019722,6.487018,-5.028670,-9.627748,-7.735774,6.870598,-7.151497,-3.361847,0.516952,-9.488452,5.578183,-5.589336,5.024929,4.604858,5.998245,3.334187,4.978584,-0.333485,4.680600,-1.274583,9.055520,-4.253477,5.288429,2.243767,9.648402,2.801298,-6.332992,4.510295,-2.500923,1.798497,-4.886998,7.575042,-3.777947,-3.453197,-1.325069,5.049124,-7.091914,-5.532808,-4.584246,-2.411683,2.699971,6.387956,-9.137802,0.881093,0.612421,-0.409845,3.729423,8.358196,-4.566495,-3.589079,-6.962186,-3.696084,2.140477,9.625959,-1.142285,6.510672,3.759412,5.514596,0.156239,-0.490484,-6.970891,7.563102,9.173783,3.654044,-7.999263,-1.402259,1.005554,0.151386,7.413202,-6.128856,-5.010530,-8.412427,-2.042312,7.723773,-3.854788,3.187372,2.478491,3.954791,6.467962,-9.294054,-4.491253,9.526122,0.340965,-5.482071,1.964461,0.038074,-3.865334,1.427944,2.938170,-2.386457,-8.298059,-9.050068,-5.437472,-3.408908,-0.255814,5.526977,-1.883994,-8.741803,3.035930,-0.618454,-1.911552,0.392335,7.034364,4.163263,4.496962,0.705301,2.261734,2.909510,7.783112,-0.291620,-9.211651,-8.148022,-7.266453,9.655828,3.097209,-9.739339,7.343498,-2.210993,-6.500966,0.839255,5.630278,1.952032,1.009035,4.944989,2.432019,-1.400200,6.746701,-5.658099,-2.430775,-5.942659,8.233115,0.149534,-9.391455,-1.388490,8.226600,-8.904285,-8.132748,-5.948625,4.763824,-9.234866,6.907167,-7.867448,6.874235,-4.246699,-1.145834,2.095453,4.735701,-5.071915,-3.772909,-5.635310,9.745391,-6.830601,-7.452871,9.842393,-9.280331,-9.395753,-6.012323,7.810872,3.117333,1.233081,-5.337835,-7.576403,1.026973,1.573525,7.340606,-6.057383,-1.400789,-2.106716,0.809875,-5.238283,3.662938,4.876254,-7.172708,9.610791,-4.083237,0.736358,5.854719,-6.794392,3.673340,-8.983029,5.184576,9.805771,5.648289,-4.534070,3.407404,3.508138,-3.214836,-7.955864,2.078970,-7.318567,2.021634,-8.880784,1.342689,0.473955,-6.190366,8.576731,-2.830968,3.154639,-7.523850,-0.017753,1.606032,-5.992446,-7.210402,-9.093295,-9.722023,0.091712,-1.512691,-4.247271,-5.313311,-4.013518,2.280714,-4.190188,-9.217854,-0.658699,-8.962551,-7.036579,-3.276956,3.055543,-0.481562,-8.866378,-4.215380,-6.492848,2.783298,6.766566,-6.947838,-9.776238,9.070115,-5.509235,-7.475817,2.896354,7.410439,-7.661810,-7.080846,2.997441,6.302195,-8.967658,7.687373,2.957492,4.054443,3.514834,-5.834608,-9.117865,-9.250792,-8.921970,7.720720,2.255085,0.376215,-9.348536,3.035232,-9.316546,7.137480,7.611018,1.444890,5.247742,1.797217,0.966956,-6.764124,5.465784,-7.981057,7.746125,4.148499,-3.372327,0.995915,8.559263,-0.388446,8.443327,-4.705327,8.153220,1.083501,-8.308733,1.709648,1.682635,4.401740,-3.253784,-7.807650,8.754268,7.967025,-9.116585,-5.771530,2.799007,-8.969618,-4.404156,3.252699,-2.329006,-7.836615,7.112903,-4.952098,9.737125,-6.194729,8.686218,-9.195172,-5.504342,1.051218,-8.520666,-0.586604,-5.635323,-7.434942,5.370932,-2.657747,0.449832,6.182673,-8.034932,3.548633,1.796415,-4.238998,-6.689754,-2.635821,-7.015721,3.851233,6.205770,-1.808076,-5.871763,2.656218,0.041797,-3.096381,-7.509508,8.387292,7.173945,8.774861,-4.978996,-0.064756,-3.305240,-3.861058,-1.361486,3.874683,4.261392,7.375480,-3.445965,-9.355769,7.213309,-0.102212,-5.534832,-4.106179,-5.335526,-7.843294,0.582397,6.927753,8.007547,-1.788562,-9.691577,-5.730583,-1.608603,4.228727,-5.067761,-3.335284,-2.046375,6.978120,-8.964454,5.853294,2.260212,-6.333637,-6.875991,-1.496774,4.362543,3.691675,-8.433609,1.561756,9.202159,-9.098040,-8.557158,6.861012,1.658141,7.859214,0.854004,5.434887,1.250721,0.112444,2.025837,5.403685,2.165006,-0.722516,-3.599917,-9.355309,0.397071,0.166302,2.741570,-9.394304,-8.119580,-6.001787,-0.133708,-3.186447,4.158337,9.875317,-0.654303,4.530717,0.333275,1.903034,-6.827054,-1.756932,-4.516452,4.670104,-4.179868,4.634708,-0.391363,-7.524847,5.012173,-9.211888,3.232143,7.942543,-9.893747,6.713216,3.001507,-8.002419,-7.163050,0.293001,-9.278255,-1.623701,-1.704351,0.129678,8.991898,-4.465100,8.774996,-9.340721,-7.115366,-1.732853,-8.155317,1.095471,-4.710371,3.203865,-5.302866,-3.791066,-6.297762,5.296315,-9.358568,1.077512,5.148592,-3.177897,-2.118997,3.576562,-4.523015,0.703130,7.088992,-5.551397,-4.039164,-9.572260,-1.009069,-3.838384,9.771068,-1.020811,-0.690352,7.088112,7.701322,-0.396319,-1.817863,-2.445971,6.940656,-8.102928,-6.909155,8.558989,-8.846891,1.642800,-9.427707,6.718227,-4.317873,7.757174,8.952949,-7.225208,-5.573132,-7.762650,-9.090300,0.793076,2.362122,-3.237865,4.022358,-0.004123,8.852319,-0.277521,6.365054,2.984856,6.484631,1.809267,6.943743,4.784077,-9.724372,8.857784,5.289471,2.802948,-4.297918,-3.775758,6.796293,4.631112,0.596280,-9.871678,-5.021517,-0.606441,-8.187671,-5.031288,5.812397,6.920785,-5.129671,-6.205291,6.284758,-7.902873,1.503914,2.513548,2.061825,9.190391,6.954368,-2.534022,9.073581,3.584614,-2.403269,6.723051,-1.292975,2.199996,7.756115,-2.366239,1.405671,-0.876554,4.692528,9.330838,6.318905,9.762583,-0.655963,-8.441019,-7.927512,3.484783,3.423480,-3.754897,2.121743,-8.222092,1.832941,-9.355202,2.604539,1.702029,-7.362073,-5.134445,2.992364,-3.001581,5.794454,0.692849,2.900516,-7.600246,-4.139024,-0.179809,-4.765153,-1.041193,0.353360,5.696880,-0.391816,6.259299,6.458338,-7.665636,-2.575263,9.470518,9.736932,6.340278,9.472640,5.779239,2.069121,-6.366992,0.566975,9.069341,1.201409,3.801032,-1.585369,-0.259095,-7.214273,-4.850474,-6.459130,-4.297140,2.345528,-0.087160,3.707527,-9.176898,5.905981,5.916020,8.328513,6.813985,1.727103,-6.203622,7.850299,0.245967,5.491289,-7.293864,9.523825,2.039299,3.074448,-2.627022,-7.681617,4.131031,7.965556,-8.827920,6.575353,6.123379,-5.690740,-0.075834,-4.579980,-4.047586,-5.531522,3.258325,1.407472,-2.927513,-4.367519,-4.558791,9.172320,-5.475588,-4.802479,1.083739,-7.954363,-0.932176,2.051654,4.128261,-8.022805,6.524887,-3.396657,6.201353,-8.224070,-3.744985,-5.329399,8.071798,-4.230521,-9.678241,-6.375937,8.775634,-4.947030,2.606175,-2.108648,3.298720,-6.264587,7.412827,-9.325218,8.240750,-9.658771,3.323219,-2.980938,-6.278025,6.447154,9.898417,7.025131,-0.764749,-4.115886,6.220757,-4.360149,2.212857,2.802136,-6.488717,6.291848,-2.681205,6.097994,-9.975840,-6.415280,8.027765,0.313654,1.459390,8.284608,-9.935733,-5.359268,-0.884449,4.182685], dtype = "float64")#candidate|7094|(864,)|const|float64
call_7093 = relay.TupleGetItem(func_4437_call(relay.reshape(const_7094.astype('float64'), [9, 12, 8])), 0)
call_7095 = relay.TupleGetItem(func_4440_call(relay.reshape(const_7094.astype('float64'), [9, 12, 8])), 0)
func_6332_call = mod.get_global_var('func_6332')
func_6334_call = mutated_mod.get_global_var('func_6334')
call_7101 = relay.TupleGetItem(func_6332_call(), 4)
call_7102 = relay.TupleGetItem(func_6334_call(), 4)
output = relay.Tuple([bop_7089,call_7093,const_7094,call_7101,])
output2 = relay.Tuple([bop_7092,call_7095,const_7094,call_7102,])
func_7103 = relay.Function([var_7088,], output)
mod['func_7103'] = func_7103
mod = relay.transform.InferType()(mod)
var_7104 = relay.var("var_7104", dtype = "uint64", shape = (16, 13, 10))#candidate|7104|(16, 13, 10)|var|uint64
output = func_7103(var_7104)
func_7105 = relay.Function([var_7104], output)
mutated_mod['func_7105'] = func_7105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6813_call = mod.get_global_var('func_6813')
func_6815_call = mutated_mod.get_global_var('func_6815')
call_7107 = func_6813_call()
call_7108 = func_6813_call()
func_7103_call = mod.get_global_var('func_7103')
func_7105_call = mutated_mod.get_global_var('func_7105')
call_7111 = relay.TupleGetItem(func_7103_call(relay.reshape(call_7107.astype('uint64'), [16, 13, 10])), 2)
call_7112 = relay.TupleGetItem(func_7105_call(relay.reshape(call_7107.astype('uint64'), [16, 13, 10])), 2)
func_4897_call = mod.get_global_var('func_4897')
func_4899_call = mutated_mod.get_global_var('func_4899')
call_7115 = func_4897_call()
call_7116 = func_4897_call()
func_2831_call = mod.get_global_var('func_2831')
func_2835_call = mutated_mod.get_global_var('func_2835')
const_7121 = relay.const([0.382906,8.338633,-7.221575,1.477183,3.140489,-2.199016,9.196250,4.285519,6.945559,7.658443,-6.234412,-6.661900,0.755830,-0.850183,6.974531,0.788854,6.577262,7.491582,6.754449,-4.504844,7.223700,4.360665,6.318473,3.151781,-9.614473,1.686943,0.601474,-7.659430,-5.813633,7.747392,-8.153680,-5.715576,0.219157,3.189297,-6.460345,0.501364,-2.504576,-9.155875,5.850605,-0.003004,8.802298,-9.171500,9.243133,3.851022,6.444189,1.834695,-0.429461,-4.383533], dtype = "float64")#candidate|7121|(48,)|const|float64
const_7122 = relay.const([4.577841,8.664335,-5.775154,4.450319,-8.304578,7.830184,6.469427,-2.676252,-3.382842,-8.771195,-7.864328,9.116570,6.173484,-4.444554,1.090490,-5.522727,-9.414458,-6.914243,-0.976339,6.964012,-2.151960,-0.800224,-7.858161,-3.650625,-6.871857,1.552447,2.777258,8.408603,-8.819110,8.105926,2.579432,-7.058770,-5.679786,-8.759466,-4.354875,7.488170,1.031177,4.171642,-9.083076,-7.834717,-1.816607,9.774569,2.997299,7.556887,-1.421778,4.200322,-6.965190,6.184726,7.760727,5.428573,9.835897,-1.772661,-8.928889,0.207737,2.989236,-3.081261,1.332585,8.440956,-4.036368,-0.616825,-0.577034,-5.843149,5.601989,5.778120,-6.084196,-8.370132,7.277620,-8.360112,-7.167357,-3.189054,3.600142,-5.254529,-4.798753,2.231848,-4.496546,0.373955,-1.853394,2.818659,2.443963,-0.088275,-4.197746,-2.405959,1.731990,9.780692,-4.059117,9.833450,-9.118758,-1.818802,-8.396073,-9.250228,5.331618,4.170282,9.109960,5.661038,3.319348,-0.705536,-6.920926,3.942638,5.115409,-5.530062,-9.466453,-6.673093,2.556581,6.391567,-5.935053,-3.042710,0.942929,9.358802,-9.437675,5.560129,-3.191724,9.773087,-6.697927,-5.692845,-9.815278,5.679905,9.797513,7.440894,-9.318224,-2.389944,-2.829607,-4.546059,-9.879979,0.987811,-0.478969,-2.408158,-0.206487,-1.885005,-9.458631,7.769100,4.022564,2.643240,-6.541700,2.451938,5.701057,3.645755,-1.448114,8.135651,-2.720708,1.375928,0.548884,4.020639,-8.525995,2.416375,2.986823,4.611640,6.733073,1.583205,4.878048,0.275060,-9.922104,0.029095,-3.112819,4.183397,3.778097,-3.813572,-1.818027,-4.623359,6.479627,5.339768,-0.099129,4.328854,1.671154,0.207958,4.126251,3.423635,-2.792722,-5.400466,5.334456,8.728901,-9.187274,8.990277,6.578588,7.271319,5.985253,9.171480,9.596027,-0.008982,5.297820,-2.652667,-9.200249,-1.916582,-0.108459,4.257601,-5.032066,-8.236144,-5.069324,0.050918,4.552510,-0.904213,3.676691,9.127949,-2.138152,1.523469,6.977246,-5.541513,4.453495,-5.936967,6.452586,3.440165,-5.425121,7.556513,-9.088327,1.909196,1.872267,-9.752685,1.911708,-8.536465,6.763995,-4.737996,9.877483,-7.893592,9.340191,-6.463164,5.793121,7.138791,0.205152,-5.494203,5.365374,0.806377,-1.820647,-1.284083,8.923967,0.284799,-1.880818,-7.822580,4.410626,4.749770,7.684816,1.786935,9.547795,7.090395,4.379698,-4.595267,7.696184,-8.466428,-6.576619,8.904801,7.933126,-4.750523,-1.570685,3.063081,-8.299463,4.428219,-5.953985,-0.359163,4.586441,-5.392530,9.852000,8.970865,-0.480960,-0.435004,-9.744318,2.118549,3.272776,-3.353706,-4.130121,6.979178,-5.510166,-4.841074,4.468925,-6.391008,-3.271258,-0.183006,-8.974766,-2.090679,0.945909,2.903170,7.727529,2.484130,-9.534855,-9.375025,4.607859,9.256595,-2.963285,-2.142283,-2.416252,-8.697008,0.618499,6.003518,0.181466,-5.639677,-1.089137,-0.282478,-8.648848,-7.847191,2.780718,7.648750,-9.596322,-3.941269,3.567791,4.853402,-0.207815,-6.534745,-0.640965,2.062614,-2.739086,-9.554381,7.374364,-5.288622,-8.499952,-3.459973,2.357974,-8.827830,5.934852,9.774354,1.612555,-7.816009,-2.460039,8.338134,-3.615058,-7.491592,-7.935917,-3.730886,-8.394365,-3.286454,1.892635,-3.428546,-9.434959,1.497337,-7.295050,-2.362708,1.111600,8.939012,-5.580617,-6.319922,6.618931,9.571319,4.767557,3.787996,-1.650771,-9.497381,-7.234012,-7.673736,5.761441,-4.533982,-6.887542,4.317805,-9.455703,-7.016609,4.210689,8.975713,5.775153,-3.130263,-5.974326,-1.657758,8.608902,1.746571,-8.979727,9.114289,9.093240,0.197981,-0.878844,4.563501,5.003228,3.164383,-8.923850,6.974871,6.636796,-5.497408,0.600325,-8.928644,6.650118,-4.614546,-9.442209,2.004290,-9.893307,1.100848,7.164284,6.111247,-7.310072,5.445824,1.722982,4.129238,-3.488143,1.549266,-7.319922,8.701782,5.001347,4.425157,0.315796,9.170382,2.842914,-8.916021,8.836308,9.574464,2.745995,-1.102599,4.929385,9.849775,7.404846,6.386494,6.602435,4.611774,2.501689,-9.252281,3.615254,-5.956698,-8.823708,8.584003,-6.530885,-5.110697,6.988432,-0.222434,-4.038042,-5.651764,-3.613775,7.192076,-1.956380,-8.890412,-2.876344,-9.023706,-6.295567,-8.054623,-5.791570,-3.233508,8.333527,-2.088228,5.018715,7.157549,-1.427519,2.426383,-0.714426,-2.068499,2.813889,-2.741134,5.220276,4.297136,8.231272,7.043976,0.289764,-4.224221,-4.387100,8.501162,5.577555,6.154832,2.865599,1.607756,7.224955,-1.741003,-3.231254,-5.540636,-2.467275,-5.769092,-3.500227,5.797408,2.702483,-2.287154,-7.418796,-4.120974,-7.014419,4.263915,-7.994751,3.011029,3.575400,1.706351,-1.322654,3.795976,3.027894,-3.097551,3.128365,-6.655694,7.845945,-2.550922,-3.833928,-7.772925,-4.044888,-1.567322,-9.381172,7.462148,-2.221285,3.512566,-7.210025,4.480872,-4.018324,4.633370,5.742148,2.913096,-4.429449,-6.950878,-1.453295,-7.272852,-7.896858,1.861076,-1.244641,-3.653573,5.198689,-6.506173,6.772383,-3.161779,8.881019,0.080585,4.555929,-3.144409,3.984535,-9.568486,9.897459,-1.092266,-0.320271,-4.176205,-5.908110,1.167650,-9.378587,-5.336489,8.748581,-1.030991,-5.411606,9.744358,-1.454718,-6.974270,-9.343466,6.852656,2.584740,1.531766,9.136186,-2.951880,6.326634,-9.006136,7.307790,9.086623,3.738891,-7.465826,5.848041,2.525294,5.939981,6.687776,-4.832007,4.829762,1.298084,8.993587,-1.848948,-8.866385,6.316711,3.831803,5.745808,4.402037,-6.348834,2.012708,6.606076,9.400785,-5.264372,-5.257594,5.784419,-2.331344,6.753467,-5.620577,3.202886,5.042486,9.178982,-6.715704,5.449658,9.219880,8.875058,1.900675,2.872705,1.172465,-9.093875,-0.213670,4.014640,-9.613104,6.651037,-4.234101,0.536096,1.916198,-7.427535,-2.166025,-3.997517,-8.755342,-0.141817,-2.017545,-0.042673,4.127930,-3.592418,3.764023,-5.831517,-3.611244,-6.585768,-6.220780,-8.050642,-5.733251,7.071086,-9.935283,-5.706274,3.680102,-7.735360,-6.192687,7.015761,6.285014,0.127902,3.902114,-2.592730,4.322991,-8.543452,9.702767,-8.920612,-4.036052,-0.528376,6.662362,4.112167,1.834855], dtype = "float32")#candidate|7122|(600,)|const|float32
call_7120 = relay.TupleGetItem(func_2831_call(relay.reshape(const_7121.astype('float64'), [8, 1, 6]), relay.reshape(const_7122.astype('float32'), [6, 100]), ), 1)
call_7123 = relay.TupleGetItem(func_2835_call(relay.reshape(const_7121.astype('float64'), [8, 1, 6]), relay.reshape(const_7122.astype('float32'), [6, 100]), ), 1)
func_4511_call = mod.get_global_var('func_4511')
func_4514_call = mutated_mod.get_global_var('func_4514')
const_7129 = relay.const([-7.983026,2.303002,9.647142,-9.088538,-9.126535,-6.832024,4.975365,-7.150958,-1.969363,8.771929,-2.655668,7.835075,4.242369,-8.900133,0.493573,-0.800647,-3.647080,6.249029,-0.419830,-2.569845,8.221996,3.500766,-0.225535,3.886760,7.351349,9.402097,5.719710,8.855203,-2.309474,8.764833,8.275085,3.044136,9.856671,3.826254,-2.880870,4.323482,-9.657225,-9.902051,-2.277516,5.082391,-3.264555,5.973164,-2.047246,-1.693724,2.376729,-3.589830,4.809075,-1.661179,-5.791157,5.537891,1.616144,-9.625706,2.709366,-9.232525,7.843434,8.460950,-6.141982,1.004352,4.723029,-8.995028,1.849202,-0.670804,-6.222429,4.591814,-4.803808,-0.927102,9.382539,-6.320843,8.026315,2.640063,-6.625672,1.619742,8.058288,8.370694,-4.268974,3.754056,-8.772348,3.548459,-8.226995,-9.568648,8.004788,3.372880,3.479210,3.879446,-7.692091,0.383437,-5.343668,-7.456224,0.252873,-3.399927,2.141861,3.076352,9.711171,-7.758200,-4.746461,2.643248,9.484592,-8.683265,-2.366434,-8.285407,-5.863819,0.326441,-5.142753,1.294464,-9.175423,6.828602,9.105071,9.410986,4.582127,7.434264,-9.812204,9.765707,1.236770,1.704327,-5.495054,-5.270068,2.869873,5.890315,0.476356,-9.268476,-4.601618,3.188372,-7.662944,3.541954,8.388544,4.888194,3.694766,5.061738,7.025161,-8.479070,-8.993667,-8.111085,-1.154897,9.758121,-1.843482,2.875653,-1.338274,2.265589,-5.473121,-8.003599,4.451958,8.772733,6.078036,7.739597,7.496103,-6.821033,-7.967414,-4.433200,-8.077948,5.173404,5.741403,5.302666,6.195249,-5.059173,1.862796,8.267497,6.651630,6.148544,-2.005806,0.323363,-6.792373,3.056958,-8.264316,-1.388050,-6.242027,-0.850370,-7.768412,8.077232,-1.234176,1.312953,-1.908208,-8.983622,-0.115727,-8.537935,-0.752650,-8.412650,4.024129,8.163978,1.492690,-2.529278,1.724343,1.753122,7.583694,-3.706049,0.660551,8.953121,-0.692390,5.727470,-9.107421,4.162659,7.784955,7.559275,-2.478486,-8.449650,-7.665512,7.544311,3.910593,-3.907372,5.205828,-3.587444,-8.092048,-0.223599,5.317289,0.605415,-0.615904,-5.129903,9.566104,-6.146749,5.162173,6.377533,-1.280493,2.530254,-5.435051,-8.433184,-5.748988,-8.333831,-5.665758,-7.655340,-7.405346,3.190607,-6.197755,-5.051857,-5.359925,9.286840,6.147199,0.581257,0.614832,-8.945940,-3.039182,9.950352,6.205661,-7.012557,9.889125,-5.581240,-9.461880,-0.530608,8.691445,-4.635287,2.954577,9.760621,0.859912,-8.997987,-1.927865,-1.133316,2.638886,9.893824,1.398531,5.946139,-0.456128,-2.974234,2.292588,-6.291169,8.013289,-5.167432,-6.484444,1.711281,1.314494,4.979022,-0.348736,-3.372834,3.118375,1.781512,8.306028,6.316299,-9.070809,6.077397,-9.515809,-9.122844,-2.368229,3.776551,5.368254,-0.463709,-7.980401,-4.754925,5.610028,2.253926,-3.751024,6.354809,7.011429,-5.174438,-5.683207,6.024127,6.164763,-6.035515,3.856455,-3.434092,5.117140,7.527219,-7.708505,-2.170042,-1.905471,7.349122,-5.787018,5.437876,2.745330,8.114881,7.244715,7.778502,0.242944,-3.815226,1.021112,9.075714,-4.924437,-9.524560,-5.816789,-3.121007,-9.965691,8.032399,9.960236,-0.785314,-5.697330,-5.938255,3.787556,-1.797213,-2.574793,9.425828,-8.909073,-5.699852,5.997952,1.183331,7.307393,-7.588167,5.619770,0.810679,-7.035103,-9.086155,9.587668,-1.194920,-7.652038,3.223979,-6.533394,-8.230211,2.833850,4.661757,9.686889,-1.448052,-4.592872,3.960212,4.849171,-8.610643,-0.502198,-9.338786,-5.197656,-3.338922,-6.828496,4.005444,-0.815715,6.976028,-8.007809,-6.350327,2.776521,-9.141834,-2.017060,-8.795970,-4.984140,2.105216,1.309798,8.286750,4.924707,-7.012262,9.242763,-5.187194,9.938011,-6.727065,-5.830428,6.329643,2.362082,8.922336,6.653723,8.126616,2.366443,7.655118,9.017983,-5.207314,-2.698019,-3.613770,-0.963913,-6.152816,-8.386014,0.618344,6.728547,-6.425405,-9.855916,-1.345506,5.379702,-1.686921,6.220575,1.528312,-5.902103,5.662132,-2.561138,-7.450149,-0.721656,-7.572143,4.606936,2.362596,2.667791,-0.493310,6.476608,2.150278,-4.198930,7.066895,1.454588,-7.100997,-3.267005,9.571457,8.058593,4.292610,-4.414181,-9.047287,5.667800,-1.019010,-7.581368,9.366606,-7.920458,-9.567437,-7.848826,-3.319258,5.877896,9.762831,-4.185879,-2.912703,-9.628314,9.281012,-7.922151,7.875712,2.766461,-6.752290,-2.294181,0.606706,-0.928258,6.649691,-9.894073,1.384723,4.586936,1.621010,0.586070,1.720171,-3.985850,-0.534095,5.777240,-4.498656,1.513580,-3.234691,-0.526190,-2.708705,8.692148,1.519903,7.651321,9.860610,8.737405,-1.505136,8.877354,2.407202,-8.954949,-8.366529,4.610340,-6.680085,5.504239,-0.374204,4.854219,-5.220968,-7.153457,-2.278501,-9.803129,-9.802067,-8.879475,-8.638787,0.326198,0.214114,6.829166,4.358457,1.233918,-8.318006,-7.730827,-1.496524,0.615409,-3.396091,0.173922,-1.596784,3.359182,4.615453,2.991999,9.103384,4.285203,7.978742,-5.991695,7.260633,-6.555740,-5.581989,-8.291210,-6.038555,2.645322,-6.055168,9.929004,2.564769,7.401815,1.237132,-1.060351,9.911937,9.834840,2.800246,4.961934,9.753808,-1.365810,-6.874308,9.588827,-7.086319,-1.118497,3.960097,9.264998,-6.675645,4.942432,-3.093610,-3.613502,-8.086210,-2.651048,8.379180,-1.337732,9.742835,-2.167912,-3.918572,0.197016,-1.719170,0.737276,2.942938,-9.879603,6.422337,4.262443,-3.968551,-4.543315,-0.321770,-2.795070,-2.097605,-9.884715,0.207751,-0.710447,-2.538095,-6.661177,0.854277,-9.353857,8.272655,-4.513317,0.553365,-6.133962,7.447694,-6.754159,9.095179,5.268756,7.402332,7.878534,-7.730331,-3.649147,7.357522,0.858456,-1.360861,-2.578259,5.111637,1.572957,-8.553967,-9.746926,-8.857547,5.817940,1.820444,8.666608,2.303660,9.233373,-3.540259,-0.324457,-7.410997,-9.984778,-7.877350,-6.461652,9.851108,-6.974820,7.557694,9.851394,5.290396,6.765239,8.647779,1.196684,-8.514399,-8.480015,5.989051,-0.539230,9.893053,-4.315866,5.637922,2.957506,-7.939717,2.543151,-9.982325,8.726906,1.451721,-3.495068,-9.895579,1.992736,-3.213829,1.862420,8.419315,3.358181,7.953456,-0.058514,7.042129,9.471575,8.892841,6.908289,-8.045805,9.505215,-3.028465,-6.860187,1.828722,9.685131,-7.566364,1.755826,-1.770022,-6.066104,1.978424,1.025417,-0.302636,-4.907495,4.109429,5.148993,6.097184,1.048962,-8.215323,-5.531571,-3.136026,7.828396,-1.643638,-5.127054,4.318861,-8.724887,6.902890,3.069747,1.186580,9.368053,-7.810864,-0.439787,2.198257,5.220416,9.074152,3.807867,9.186033,-5.189583,-5.999473,-4.521684,5.362724,-3.018406,-5.536221,-2.855148,4.028406,-3.517679,-8.724778,9.658283,2.884399,1.739602,-7.700175,-5.569200,1.389970,-8.591220,5.998026,-4.967205,0.892140,0.453565,-2.709073,0.607699,5.191577,3.811683,-8.256491,7.394791,7.656712,4.837212,0.616480,7.296310,-4.933328,-2.404649,9.166771,6.351310,3.502994,-3.791148,-2.682760,-8.490048,-6.832793,-3.639415,-7.248011,-2.537512,-6.124331,-4.078352,6.746866,0.203744,9.264832,3.539991,-4.468738,5.186231,4.118269,9.663857,-4.579460,4.422045,-7.145557,3.327197,1.879281,-2.298895,2.714106,2.385242,3.827358,0.025662,6.995183,4.041891,7.689871,9.923224,-2.511575,-9.423382,-3.887731,1.972364,7.841015,-8.768795,-3.160292,0.920585,0.164794,-1.530225,6.299368,9.417217,-8.104601,-5.015643,3.211310,-8.472194,-4.468470,-5.380435,-3.527755,0.925525,7.338357,-4.306742,1.107379,4.977969,6.573130,3.463170,4.558965,8.708732,9.434031,6.568585,7.488237,-7.166194,6.461180,8.959773,8.901819,2.305417,-6.549032,-4.664112,2.036539,-2.704504,-9.736580,2.099540,-0.597134,8.062624,-8.666730,-8.126042,6.351348,-4.746610,-2.783103,-6.154911,-5.867532,-7.323508,-7.038090,-2.902088,-1.706700,-2.668558,-9.659889,9.042526,-9.176881,-6.844833,2.696561,-7.310385,-9.807270,7.735907,-5.144930,-4.267882,-3.277717,7.150423,8.149285,-9.200055,-3.279010,-8.363354,0.208109,5.923146,5.439388,-2.818620,5.848514,0.322901,5.794220,-7.380580,-8.103363,1.841421,4.987576,2.172242,-5.811272,-9.406850,-7.821961,-1.722830,-0.384230,0.426847,3.249221,0.854146,9.329932,-9.270879,9.111493,-2.527326,7.410978,-5.192376,6.996093,-8.179564,-0.008980,-4.189593,2.539126,-0.095018,9.599214,6.639549,2.981905,6.101475,1.009270,-7.244135,-0.601634,0.685475,-0.964822,-5.058539,7.307508,9.106470,8.927426,4.871399,-6.312722,4.694801,2.495150,3.012961,7.539480,6.410922,-0.678831,7.774549,8.222677,9.904361,6.417738,3.515910,-7.317425,-7.387845,-9.956552,-5.630388,5.311168,-2.095434,0.011219,1.386995,-0.262627,5.388184,-3.741844,7.695467,5.526148,4.712887,-3.978045,-8.165398,-5.212468,9.828494,-5.604922,3.685720,2.050661,-6.273024,5.472286,0.437776,6.828915,8.202250,7.011271,2.066783,1.306034,0.794543,1.149869,-1.969577,-2.611563,-4.223076,2.987101,-4.083041,-5.261803,5.940725,3.162767,9.006793,-8.879562,-5.286067,-9.797126,-5.031060,1.642973,3.799087,4.102563,-4.196399,0.198348,-4.752438,-8.910388,6.667745,-3.838831,3.855451,1.565572,-4.902481,0.822587,-3.576231,-7.311669,7.723049,-4.217086,-7.026435,-0.137026,-0.798055,6.443804,-5.658192,6.314767,-1.318887,2.541349,7.309462,5.314567,-7.306864,3.826202,-1.227233,4.826788,5.064085,-3.751599,-1.847651,-3.080150,1.827357,9.480984,7.629990,8.581510,-2.992940,9.141374,-5.530337,0.047171,9.742745,4.443603,-4.375246,1.649201,-6.705711,6.482680,-4.294838,3.632492,-8.448950,-6.371132,-6.852669,3.338523,-5.318576,-9.377150,8.850407,0.897336,-5.490393,-0.506538,4.937837,-8.000469,-8.068235,-8.325146,0.506392,-2.493370,7.743987,-7.746464,-8.331530,-5.672103,-1.377995,6.577642,0.011481,6.665018,4.071733,-9.886697,9.471218,1.314141,6.844076,1.514747,3.259375,-6.540408,-7.096321,-2.201189,-2.396619,5.892001,-3.986762,1.086184,7.857120,6.305727,-3.995869,3.628227,9.904319,9.479731,8.869678,3.966776,-5.774589,7.739612,-5.071062,-6.606028,-2.923917,-4.070718,-0.928902,-6.065382,-8.057557,8.782958,-3.649260,-8.517161,5.785381,-6.385019,-0.075444,8.437044,0.703379,4.813531,8.165909,-7.537265,9.961809,-5.549476,-7.678415,9.287300,-7.137471,-0.299468,-0.937482,-3.691245,-9.488337,-5.488283,2.558104,-1.242036,-9.928041,-0.102748,1.023796,6.332494,4.125309,-4.539639,0.082727,-3.827447,-9.546245,-3.990266,-5.767145,-2.495423,0.455975,8.104471,6.077308,7.540822,-8.885670,0.971571,-0.292663,-3.102324,-2.369715,-1.665596,0.973029,7.923574,7.884389,-8.954130,3.984246,-1.466840,3.822903,8.546605,2.553806,-0.303627,-1.691369,9.343947,-6.000393,8.033616,1.874096,-0.931017,-6.991312,-9.982700,5.652697,4.262476,-7.488643,1.044777,-2.819737,-3.886802,6.563272,3.055995,-6.917561,6.268259,-5.306248,4.633114,-9.350424,-6.794217,6.328530,-6.512756,8.546142,7.437034,9.800462,8.042666,7.042202,-2.049811,-0.328450,4.266894,-7.526171,-9.822907,1.593896,-0.121112,2.932398,-9.731127,-6.879601,-1.223822,7.549856,4.996270,-5.550694,-6.093846,-5.042150,6.847339,-0.379038,6.954723,6.160732,6.274850,4.362861,-2.064084,6.018987,1.501682,9.399135,9.263325,-5.098941,6.900920,-3.536004,-4.490823,-4.356136,0.519161,-6.942369,-5.798183,-3.098408,-2.016607,0.049860,2.944960,-1.800347,-3.695017,-2.508155,-2.748050,-1.891509,9.054239,9.754566,1.177305,4.378315,-0.946575,8.777880,4.442600,-2.904066,0.388857,-7.758502,-9.836365,-6.507203,-0.827820,8.659985,7.586136,4.611337,-4.058992,-8.184035,-1.064830,-5.002060,-3.068452,1.142411,-8.470091,4.326261,-8.039474,-8.877754,-5.247915,3.909404,8.933830,7.193296,2.217954,3.434426,5.426767,7.455821,-7.323201,-9.184533,-6.658618,-8.596291,-6.411050,-3.683335,-8.718501,1.829859,4.137737,3.504584,6.832549,2.986202,7.203055,-6.408497,5.334234,4.609534,-8.304081,-5.109787,2.229095,3.689010,-5.179572,-3.389240,-2.187901,-0.242347,6.976698,-9.073368,-8.439250,4.028658,-6.247165,8.445209,0.191845,6.738720,-3.933794,-1.077437,4.484798,0.576566,-7.584622,-1.402180,-1.589872,-4.143791,-1.440072,-7.915483,6.142390,3.536007,-7.459893,1.661685,9.239921,4.109337,-7.217786,3.168584,5.695485,5.168818,3.446374,-5.116878,-5.176332,3.548511,1.706902,-7.065638,8.296512,-5.019332,-4.404857,2.151916,0.526988,8.375052,5.690109,8.049490,-5.153486,-7.359241,-6.722121,9.318060,9.868723,5.608855,-3.675694,0.109058,5.532131,9.963084,2.976826,2.939319,0.130125,-2.825151,-6.857426,3.962594,2.455896,-7.691740,-6.621340,-6.490169,-8.069763,-9.790643,9.909586,-8.258707,-2.026140,-4.502519,-1.406535,-1.942291,4.696501], dtype = "float64")#candidate|7129|(1248,)|const|float64
call_7128 = func_4511_call(relay.reshape(const_7129.astype('float64'), [12, 13, 8]))
call_7130 = func_4511_call(relay.reshape(const_7129.astype('float64'), [12, 13, 8]))
output = relay.Tuple([call_7107,call_7111,call_7115,call_7120,const_7121,const_7122,call_7128,const_7129,])
output2 = relay.Tuple([call_7108,call_7112,call_7116,call_7123,const_7121,const_7122,call_7130,const_7129,])
func_7158 = relay.Function([], output)
mod['func_7158'] = func_7158
mod = relay.transform.InferType()(mod)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7158_call = mutated_mod.get_global_var('func_7158')
call_7159 = func_7158_call()
output = call_7159
func_7160 = relay.Function([], output)
mutated_mod['func_7160'] = func_7160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4646_call = mod.get_global_var('func_4646')
func_4648_call = mutated_mod.get_global_var('func_4648')
call_7166 = relay.TupleGetItem(func_4646_call(), 0)
call_7167 = relay.TupleGetItem(func_4648_call(), 0)
var_7168 = relay.var("var_7168", dtype = "float64", shape = (9, 12, 8))#candidate|7168|(9, 12, 8)|var|float64
bop_7169 = relay.bitwise_xor(call_7166.astype('int64'), relay.reshape(var_7168.astype('int64'), relay.shape_of(call_7166))) # shape=(9, 12, 8)
bop_7172 = relay.bitwise_xor(call_7167.astype('int64'), relay.reshape(var_7168.astype('int64'), relay.shape_of(call_7167))) # shape=(9, 12, 8)
output = relay.Tuple([bop_7169,])
output2 = relay.Tuple([bop_7172,])
func_7175 = relay.Function([var_7168,], output)
mod['func_7175'] = func_7175
mod = relay.transform.InferType()(mod)
var_7176 = relay.var("var_7176", dtype = "float64", shape = (9, 12, 8))#candidate|7176|(9, 12, 8)|var|float64
output = func_7175(var_7176)
func_7177 = relay.Function([var_7176], output)
mutated_mod['func_7177'] = func_7177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7050_call = mod.get_global_var('func_7050')
func_7052_call = mutated_mod.get_global_var('func_7052')
call_7222 = relay.TupleGetItem(func_7050_call(), 0)
call_7223 = relay.TupleGetItem(func_7052_call(), 0)
var_7232 = relay.var("var_7232", dtype = "uint64", shape = (16, 13, 10))#candidate|7232|(16, 13, 10)|var|uint64
bop_7233 = relay.less_equal(call_7222.astype('bool'), relay.reshape(var_7232.astype('bool'), relay.shape_of(call_7222))) # shape=(16, 13, 10)
bop_7236 = relay.less_equal(call_7223.astype('bool'), relay.reshape(var_7232.astype('bool'), relay.shape_of(call_7223))) # shape=(16, 13, 10)
func_6250_call = mod.get_global_var('func_6250')
func_6251_call = mutated_mod.get_global_var('func_6251')
call_7239 = func_6250_call()
call_7240 = func_6250_call()
uop_7246 = relay.cos(call_7222.astype('float32')) # shape=(16, 13, 10)
uop_7248 = relay.cos(call_7223.astype('float32')) # shape=(16, 13, 10)
output = relay.Tuple([bop_7233,call_7239,uop_7246,])
output2 = relay.Tuple([bop_7236,call_7240,uop_7248,])
func_7251 = relay.Function([var_7232,], output)
mod['func_7251'] = func_7251
mod = relay.transform.InferType()(mod)
var_7252 = relay.var("var_7252", dtype = "uint64", shape = (16, 13, 10))#candidate|7252|(16, 13, 10)|var|uint64
output = func_7251(var_7252)
func_7253 = relay.Function([var_7252], output)
mutated_mod['func_7253'] = func_7253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6712_call = mod.get_global_var('func_6712')
func_6714_call = mutated_mod.get_global_var('func_6714')
call_7255 = relay.TupleGetItem(func_6712_call(), 2)
call_7256 = relay.TupleGetItem(func_6714_call(), 2)
func_322_call = mod.get_global_var('func_322')
func_325_call = mutated_mod.get_global_var('func_325')
const_7260 = relay.const([[4.858454,8.615039,0.140174,7.180483,-5.712917,8.952101,-3.317073,3.657866,0.786563,5.142235,2.142913,1.113039,-2.522626,-0.991025,-3.956334,-1.884816,3.454879,4.797831,-7.140288,1.933659,-6.055017,5.900478,-8.988746,-7.506839,-1.257338,4.549246,0.507009,-0.704927,7.071376,-9.523110,-8.960898,9.728956,1.190186,-7.256771,-6.546003,-2.883499,9.417136,2.725648,-4.795063,8.673107,-4.207937,7.851908,-3.074201,1.650652,-8.562441,5.839272,-7.364865,-1.257468,5.897409,-9.593113,-2.594777,-1.019131,-3.876326,1.261845,-8.198157,-5.145964,2.643998,-8.808588,6.737349,6.690718,-7.803685,-4.959788,-0.775120,-8.843074,-3.421581,6.291131,2.424243,-0.047892,9.933637,-0.275604,-8.909571,-5.827529,-1.470067,8.986138,5.675120,3.259067,5.752505,-7.894063,-8.374564,-2.808494,2.207142,-2.722177,1.565592,2.364128,-6.137140,-0.258572,-8.947297,5.858688,-6.396824,-6.291136,5.360915,6.378082,2.951043,-5.122189,-7.334388,-7.578565,-3.217079,-5.825234,7.301335,1.597113,1.069313,8.925157,-1.004967,0.009384,5.752451,-9.597422,4.223598,-3.710522,-2.715123,8.391177,8.974099,-1.543727]], dtype = "float32")#candidate|7260|(1, 112)|const|float32
var_7261 = relay.var("var_7261", dtype = "float32", shape = (448,))#candidate|7261|(448,)|var|float32
call_7259 = func_322_call(relay.reshape(const_7260.astype('float32'), [1, 16, 7]), relay.reshape(var_7261.astype('float32'), [4, 16, 7]), )
call_7262 = func_322_call(relay.reshape(const_7260.astype('float32'), [1, 16, 7]), relay.reshape(var_7261.astype('float32'), [4, 16, 7]), )
var_7264 = relay.var("var_7264", dtype = "float32", shape = (5, 112))#candidate|7264|(5, 112)|var|float32
bop_7265 = relay.floor_mod(const_7260.astype('float32'), var_7264.astype('float32')) # shape=(5, 112)
output = relay.Tuple([call_7255,call_7259,var_7261,bop_7265,])
output2 = relay.Tuple([call_7256,call_7262,var_7261,bop_7265,])
func_7272 = relay.Function([var_7261,var_7264,], output)
mod['func_7272'] = func_7272
mod = relay.transform.InferType()(mod)
var_7273 = relay.var("var_7273", dtype = "float32", shape = (448,))#candidate|7273|(448,)|var|float32
var_7274 = relay.var("var_7274", dtype = "float32", shape = (5, 112))#candidate|7274|(5, 112)|var|float32
output = func_7272(var_7273,var_7274,)
func_7275 = relay.Function([var_7273,var_7274,], output)
mutated_mod['func_7275'] = func_7275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7290 = relay.var("var_7290", dtype = "uint32", shape = (10, 13, 1))#candidate|7290|(10, 13, 1)|var|uint32
const_7291 = relay.const([[[-3,10,-7,-7,2,4,-8,8,-10,9,9,4,8,-1,-5,4],[2,-4,-2,3,-3,-8,3,-10,8,-4,1,-10,-1,7,2,6],[5,10,10,-1,-10,2,6,8,-5,10,10,4,3,-9,-3,6],[6,-5,-9,7,-7,5,-5,7,3,6,7,7,3,4,1,-4],[-6,-3,-9,-6,-3,10,-2,-10,6,8,-7,-5,3,6,7,-10],[1,10,6,-6,5,-7,-5,-3,2,-6,8,-1,9,4,-9,1],[-8,10,6,-2,-4,-9,-5,-1,6,8,-9,5,-8,5,3,-7],[-8,-6,-3,-7,-7,-7,1,-1,-7,2,-2,5,-4,-5,-10,-10],[9,3,4,2,-10,-8,-9,9,10,2,-6,9,-1,9,-9,8],[-6,-2,2,-4,3,3,-10,7,-4,3,-8,-10,-9,8,9,-5],[-8,-5,-3,5,10,-7,10,2,3,-4,8,-9,6,-6,-5,9],[-10,-8,-5,8,-10,-8,8,-4,5,-1,-3,-3,-8,-3,-10,10],[9,4,10,-9,-8,3,-9,5,7,9,6,9,1,-9,-6,-4]],[[9,-7,1,-1,5,4,-1,7,7,-9,10,-7,2,3,-8,-3],[6,-8,-7,7,-3,5,-2,-3,10,1,10,2,-5,9,3,-10],[1,-7,9,10,7,-7,10,7,1,-2,8,-2,1,4,-5,-3],[4,-7,-4,-4,-4,9,2,4,5,-6,-1,6,4,-6,-6,-5],[8,3,1,-10,-2,-9,-6,2,10,-4,8,1,-10,1,5,-8],[10,-3,-1,-5,4,9,-8,1,9,-9,5,-3,8,-3,-1,-5],[2,-1,-5,-8,-10,-8,8,-6,-5,7,6,5,3,-8,6,-5],[-3,1,-3,-6,-6,3,4,-2,-6,-6,-9,8,-6,-6,10,-1],[8,-9,-1,-7,-9,-2,2,9,4,-2,-6,-5,-7,-5,10,9],[7,10,5,6,8,5,5,7,1,2,-10,-8,-8,3,8,-8],[2,-5,-5,-8,-3,2,9,7,1,-7,-8,7,9,-4,3,-4],[-9,-9,1,1,2,-2,-5,3,8,-6,-7,2,4,-3,-7,-2],[-5,5,8,-10,9,3,10,-9,-6,-5,-7,-8,-3,8,7,6]],[[-10,-6,7,1,5,-10,-8,3,6,-8,7,6,7,7,5,-4],[6,-5,5,7,-10,6,9,-3,-9,10,4,-5,-1,5,-8,4],[8,-5,7,-6,10,-4,-3,-4,9,10,9,6,-8,9,-9,-9],[2,1,-7,-6,-1,8,9,-6,-5,2,2,5,9,7,6,-7],[2,-8,7,8,6,1,5,6,6,5,7,9,3,-4,-1,-7],[-8,-4,1,-2,7,2,3,-3,7,-6,-7,8,8,-8,2,-4],[2,-7,9,10,5,9,2,-6,7,3,4,3,-5,2,10,-2],[-5,5,-10,-1,1,-4,1,3,-9,-1,10,-6,-9,-6,6,1],[-7,-7,-3,4,10,8,8,-7,-10,2,4,-6,-6,-2,-10,-6],[-9,-8,3,10,-9,-3,2,4,2,-5,-3,1,-5,4,4,-4],[2,9,3,-9,10,1,-5,5,2,6,-10,5,-8,1,-8,8],[9,7,7,-4,1,-8,-10,-4,4,8,-6,9,3,-9,7,2],[5,7,5,-10,7,-3,-2,1,-8,9,-5,10,-10,-8,-6,-4]],[[8,-4,5,9,1,-10,10,10,4,4,10,7,10,-9,-6,7],[6,-8,5,-2,-1,1,8,1,-3,-9,-6,-2,-2,3,6,1],[-1,-3,-6,3,9,-1,9,7,7,-2,-4,1,7,-3,4,-7],[5,-1,4,10,-2,-10,-5,1,-7,-4,1,-9,9,-3,8,-10],[-9,5,9,-9,-8,-1,8,-4,-9,7,4,-8,10,8,3,-2],[-8,-8,-2,-7,-5,-5,2,-7,-8,1,-8,6,2,7,-9,8],[6,4,10,-10,2,8,-5,-3,9,6,2,-7,-6,-10,3,-4],[-3,-9,-2,7,-4,-7,2,-1,-3,8,9,-10,10,-1,7,2],[-6,2,-1,3,8,4,10,-8,-4,-10,2,9,-1,6,6,9],[-10,1,2,7,-5,-9,-8,-10,5,-7,-2,-10,-5,-3,6,-2],[-3,-8,-10,-6,-9,10,1,-2,-1,-3,3,6,-2,8,10,-4],[6,9,-10,9,-7,-7,-10,-5,5,-6,5,-8,-2,5,-8,-7],[3,-10,-1,2,-9,-10,-7,-2,5,3,-9,-7,7,2,-2,-10]],[[7,10,1,9,3,1,-4,-6,-10,-1,2,-9,-1,-6,4,-10],[8,-10,-5,8,-10,-2,3,-5,9,-1,5,1,5,-1,-5,-9],[-4,-1,9,9,-10,4,-8,-8,9,9,-1,2,-10,-4,-5,-8],[-3,-9,10,-4,8,-6,8,-7,-3,-1,-9,-2,-7,3,-1,-2],[-2,9,-1,-6,10,7,-6,-7,1,7,2,-10,-8,-2,6,3],[6,-1,4,4,-9,-4,-7,6,-8,9,-4,8,4,1,5,-7],[8,6,3,-8,2,7,-4,7,-10,3,-7,-4,-2,-10,-10,7],[-5,2,4,-10,3,-6,-2,10,-1,-6,7,-9,6,5,6,-2],[7,-7,-5,5,-6,-6,6,-2,10,-7,-7,-5,6,9,-5,3],[6,-1,8,-8,9,-7,-9,-3,-7,7,7,-9,5,6,-8,10],[-2,-2,6,-7,3,1,-2,-2,-5,3,2,-6,9,-6,3,-10],[6,-5,3,9,-7,7,-5,6,-9,-9,-2,-7,-8,-9,-9,-8],[-2,-7,-7,10,-9,1,7,1,8,-8,-6,3,-8,-7,-1,9]],[[-9,8,-7,10,-5,-7,2,-10,-9,-3,3,-10,-8,5,-3,-3],[-5,10,9,-7,5,-9,-3,9,5,-6,10,9,-5,7,9,4],[-1,5,6,-4,-5,10,-2,-9,-1,-5,-10,-8,9,5,-7,3],[3,10,1,4,7,-5,3,5,-8,4,7,5,9,-5,10,8],[7,7,-2,-5,5,7,3,-1,-4,-8,-10,8,-4,-8,2,-2],[-4,10,-9,6,-4,-3,6,-5,10,-3,8,-2,4,-1,-7,-9],[1,8,4,-6,-6,-3,-3,-3,4,3,-7,6,-4,10,-9,2],[-10,-2,4,-3,4,-5,6,10,-5,-6,8,4,1,3,4,-10],[8,9,9,-6,-7,8,8,5,-10,6,3,2,-5,-5,-2,5],[6,-4,3,-8,1,-6,-5,-4,2,-5,-1,10,-3,9,10,7],[-8,-3,-3,3,-8,-4,-10,9,10,10,2,9,4,3,2,2],[-3,10,7,-9,-4,9,1,7,-4,1,6,-1,8,4,4,-7],[-2,-10,-2,-5,1,-2,2,2,-6,-1,-4,3,-6,9,5,-6]],[[7,-8,-6,7,5,-10,9,-2,-4,9,7,10,-1,3,9,4],[7,4,5,3,-1,8,4,6,4,5,-9,3,6,-7,7,-8],[5,10,-5,1,-5,-5,8,-6,-9,2,-8,10,-2,8,10,6],[9,-7,-10,-10,7,5,-9,10,3,-7,-6,4,6,9,-9,-3],[-4,3,-1,10,-8,-7,-5,-8,6,7,2,4,-5,-6,-10,3],[1,10,10,-4,-5,7,6,6,1,-8,9,3,-6,8,-7,-2],[10,-2,9,9,5,-4,3,4,5,1,5,8,4,-7,-9,-1],[10,9,7,5,-6,-4,-9,5,2,8,1,-9,3,5,-5,-3],[10,-6,10,1,-10,-6,-5,3,-8,-5,8,-3,-9,7,7,-1],[-1,-3,10,-8,-1,7,5,3,2,2,1,-3,8,-6,-1,1],[8,3,-10,-6,5,-6,5,4,1,-7,5,-5,-1,7,2,4],[-4,7,9,-4,9,5,-3,-9,-6,7,8,4,4,1,-1,-5],[-3,-8,6,-7,4,-6,2,3,6,1,3,5,-9,3,-3,-3]],[[-1,-9,3,-1,-9,-7,-4,8,10,4,-7,1,5,-5,4,-5],[9,1,1,2,-9,-10,9,3,-1,3,3,-3,-9,9,6,-10],[9,8,3,1,-9,7,2,7,6,-1,-5,-9,3,-2,3,4],[5,-3,4,-2,-8,-10,8,4,-9,-5,9,3,-2,-1,-6,7],[8,10,6,4,-1,-4,4,-3,3,9,1,-6,-6,-10,-9,-6],[10,9,-9,10,7,-9,2,-4,-1,8,7,-7,-10,-7,-7,-8],[-10,1,-7,-7,4,5,-9,2,-4,-2,-6,-3,-7,5,-5,10],[-7,-5,3,1,10,-5,5,-1,-2,9,3,4,4,5,-2,5],[8,-6,-1,-10,4,-2,-5,-9,5,2,-10,7,6,1,8,9],[-5,-7,-3,7,-2,-8,1,3,3,-3,4,5,3,9,-4,-7],[7,-5,-1,-10,1,-2,-3,-6,10,9,9,-7,-4,4,-7,6],[5,4,4,-10,2,-5,7,-1,-3,5,8,6,8,-9,3,9],[-7,-5,-9,-3,-9,5,-4,-6,-1,-2,-3,-1,10,-6,-7,10]],[[-1,2,2,-10,6,10,2,-8,7,1,8,-2,4,-1,6,5],[-6,5,2,2,1,-1,-8,-7,9,-8,2,7,-8,6,-8,9],[-8,6,4,-2,-10,9,2,-4,1,-9,-1,-8,-3,-3,7,-6],[10,7,-2,8,-9,-9,-10,1,-6,-6,-5,6,-3,8,10,-5],[8,4,-8,-1,9,8,-4,3,-7,4,7,9,-8,-8,-3,-1],[-6,10,-9,-2,10,10,-9,1,-3,-10,-5,-10,8,-1,2,3],[-9,1,1,-8,3,4,-2,2,9,6,2,9,4,2,-4,-4],[-7,2,-8,10,8,-7,-8,6,2,-3,9,-6,-2,9,-3,-10],[9,10,-4,-3,2,-5,-9,-8,-4,-5,3,-8,-10,-2,1,7],[3,9,6,2,-10,-10,9,-9,-9,7,-6,6,1,2,9,4],[-5,-1,-5,-10,-9,5,10,-2,8,10,4,1,5,9,-1,8],[-8,-8,4,-7,10,-3,-7,9,2,-9,-9,-4,-2,-10,8,10],[1,-8,-7,9,8,-8,-7,-10,10,7,-10,6,4,4,6,-7]],[[-1,1,1,-5,-2,-3,4,7,-3,-5,-3,-4,7,-8,-3,1],[9,3,-1,-8,5,-1,-7,3,3,2,9,5,-7,10,-10,-5],[2,-9,-8,8,-10,-2,-7,6,3,10,-7,9,-9,-3,9,-6],[-8,5,-1,9,2,-8,-10,-1,-4,6,-5,5,-1,3,-6,2],[5,10,-8,9,2,-1,4,5,4,-1,-6,4,-3,-9,5,1],[-7,-8,-9,9,4,6,-3,-6,-4,-5,-3,10,-6,-5,10,-3],[-8,-6,-5,2,4,-7,-9,-3,2,-3,-8,3,2,7,5,-1],[-10,-1,9,-4,9,1,8,3,3,-7,1,-7,7,6,-5,-4],[-1,9,6,4,-9,-5,8,-9,6,-2,-5,1,-4,-5,-2,-5],[3,5,-9,9,4,5,4,1,-1,8,-1,-9,5,-5,4,-2],[-3,-8,-5,-10,-1,-9,10,-4,2,-6,-10,-1,10,2,7,1],[-2,-4,-6,-6,-3,1,-6,4,-6,4,-7,8,2,-1,7,-8],[-3,-8,9,7,10,5,2,7,-10,-3,-7,-4,3,7,-7,1]]], dtype = "uint32")#candidate|7291|(10, 13, 16)|const|uint32
bop_7292 = relay.maximum(var_7290.astype('uint32'), const_7291.astype('uint32')) # shape=(10, 13, 16)
output = bop_7292
output2 = bop_7292
func_7296 = relay.Function([var_7290,], output)
mod['func_7296'] = func_7296
mod = relay.transform.InferType()(mod)
var_7297 = relay.var("var_7297", dtype = "uint32", shape = (10, 13, 1))#candidate|7297|(10, 13, 1)|var|uint32
output = func_7296(var_7297)
func_7298 = relay.Function([var_7297], output)
mutated_mod['func_7298'] = func_7298
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7305 = relay.const([[[0.706178,3.732847,-0.360366,-9.175285,9.099854,0.720487],[2.624589,1.600548,-9.532226,5.339962,3.454658,5.290787],[-5.876386,-2.145344,5.119194,3.109876,-1.114903,-5.236424],[8.357518,9.589485,-7.276444,-3.939967,5.345842,-4.734034],[3.547220,-1.217966,4.003484,9.349488,-9.490127,-5.781412],[-6.363204,-5.530908,-7.246081,4.917953,0.986040,8.097877],[2.684380,-1.791119,5.665751,-4.922923,-2.900746,4.614000],[-1.804604,1.467641,-2.132701,-7.236163,-9.983796,-0.626292],[-2.839725,-9.352595,-2.290793,3.715104,3.809733,4.583829],[-5.903006,4.544877,-9.009532,-9.833413,9.394869,2.714487],[-1.213696,-6.529021,-1.121403,3.124751,5.910371,-0.050427]],[[5.598633,3.837249,9.891531,4.764306,3.654451,9.501285],[8.373628,-0.756714,2.310494,4.244151,-0.910036,-8.521746],[-4.393513,2.913705,6.086841,1.522249,3.121564,2.145756],[0.699631,9.282941,7.232374,-9.044561,-9.616923,-2.007525],[-2.147729,0.695134,0.475320,0.497699,-0.794511,0.271846],[4.051702,-1.986657,-0.161997,8.953366,0.084209,-8.188213],[1.307699,6.839195,0.892097,-0.639542,2.695080,-2.728519],[4.351771,-2.992588,-5.105662,-1.639294,5.115360,3.627190],[-7.872879,3.674449,7.780488,4.615571,0.143261,-0.776721],[-4.424607,-0.326034,5.074250,-8.393092,9.795889,-3.346235],[0.392640,3.797778,1.037843,-7.347160,1.485881,1.359936]],[[9.815182,-3.796509,-4.918817,5.421378,6.054009,-6.413735],[7.896499,6.658003,-4.258395,-0.987541,-8.403072,-9.484927],[-4.343158,-5.178549,-7.512842,-9.576149,-6.174426,-3.612393],[-9.774294,6.743466,-7.698060,-7.650879,-7.324340,-4.086089],[5.450770,-5.032936,-6.938038,7.228250,1.358496,-7.133419],[-6.078704,4.696719,5.897039,6.245319,-2.389172,2.481884],[-5.105319,-3.918646,-7.573136,4.298959,1.751383,7.403435],[-6.508314,1.663614,-2.916212,-0.194580,-4.911931,9.237807],[3.010037,4.801526,1.423238,-3.343723,-3.429630,1.179799],[8.694569,-7.388818,-2.827032,-3.059455,1.580486,0.914359],[-2.447713,-1.600961,7.308718,-4.348697,-7.123910,-7.807156]],[[0.714221,5.387650,5.004695,-4.749496,-0.548497,-2.291934],[-4.790808,1.927639,-9.019267,-3.058745,-7.171152,3.607174],[-5.424280,5.934513,-6.798302,3.824360,-0.945239,8.611011],[1.945920,9.784187,4.749217,-1.272543,-3.151809,7.991253],[-2.166512,3.730658,-6.150723,1.074106,5.430217,4.144539],[-7.167000,9.691443,9.816193,9.288762,-5.283062,-3.072769],[-8.886245,7.225052,3.578018,8.828993,-7.504584,-3.717795],[0.346033,-1.925913,-3.315788,-6.279185,-7.307281,-5.461761],[7.613884,-7.491409,-3.981478,2.386404,9.223058,8.674257],[0.654191,6.480807,-0.991304,-5.212000,5.818853,-2.741436],[-1.962746,-8.031757,-7.359409,-3.351158,-9.345834,7.642570]],[[-9.362586,9.246762,1.067430,-7.052361,1.195881,6.631256],[3.464199,-7.062819,-9.187680,1.275538,1.690975,4.689003],[-0.550331,0.433011,-8.672554,0.411147,6.161139,-2.436294],[9.012083,7.323969,-5.987901,-5.794954,-1.318683,-4.728640],[4.448698,5.628774,-9.387125,-5.440339,5.892622,5.331378],[-8.938456,-7.324670,-8.837541,7.294243,0.741064,-5.390168],[0.136474,2.327127,1.684861,-9.346005,5.508009,-2.396124],[-4.388348,-4.008880,-1.626252,4.885792,-5.224548,3.235333],[-2.269821,7.202096,3.480463,-3.829014,-3.075704,5.493749],[6.046320,3.724156,4.812531,-4.237149,-4.091782,3.409683],[0.113912,-3.940421,-4.614940,-5.676076,-1.830382,-8.200494]],[[8.765341,-3.674099,1.523412,-3.963650,2.373498,3.517590],[4.932839,-2.860547,4.879238,-0.789626,-4.101620,-0.403899],[-3.760733,2.554245,-4.516853,7.378674,-7.150634,-4.880439],[9.440994,5.039024,-4.528449,3.839287,-9.758941,3.375210],[-6.154828,-8.194066,-0.452351,3.246592,7.295660,7.130601],[8.373385,-9.999090,-6.548775,9.359510,4.994016,-1.282450],[6.174891,9.984649,5.738643,5.712402,-9.823167,-2.526327],[6.207394,-3.120556,8.843001,-5.038986,-8.111571,-3.666989],[8.756015,-2.878996,-0.180162,-2.679948,-5.386221,-9.414998],[6.464687,5.011446,7.802031,-1.301977,-8.306357,-4.416010],[6.552718,-0.895953,2.942718,-3.822719,-2.130280,7.674282]],[[-8.289613,-8.413686,3.369616,-4.318505,9.084176,-3.536583],[-6.206122,8.628371,8.152150,-7.133630,-1.957959,-0.667906],[3.450563,2.120711,6.183397,2.882347,-6.922542,5.581873],[-2.160521,-1.871173,5.306623,-6.317364,-5.158124,-7.638622],[5.049150,-1.914876,0.991936,9.167078,1.561466,-6.461282],[5.599545,-2.932026,-9.024622,2.873143,-3.905661,-2.175801],[0.623589,0.872952,-6.259052,6.940969,-7.952898,8.901877],[4.145902,-0.711749,6.322864,5.140569,-3.719508,7.882835],[7.206283,2.457460,-7.652276,-4.074820,7.952306,1.007495],[1.229099,0.170467,-2.056744,-1.631954,-9.509625,3.470226],[1.734230,-9.892382,-0.445163,-2.977584,8.566662,5.938329]]], dtype = "float64")#candidate|7305|(7, 11, 6)|const|float64
uop_7306 = relay.cosh(const_7305.astype('float64')) # shape=(7, 11, 6)
bop_7309 = relay.floor_divide(const_7305.astype('float64'), relay.reshape(uop_7306.astype('float64'), relay.shape_of(const_7305))) # shape=(7, 11, 6)
bop_7315 = relay.logical_and(const_7305.astype('bool'), relay.reshape(uop_7306.astype('bool'), relay.shape_of(const_7305))) # shape=(7, 11, 6)
uop_7326 = relay.exp(const_7305.astype('float64')) # shape=(7, 11, 6)
func_5949_call = mod.get_global_var('func_5949')
func_5951_call = mutated_mod.get_global_var('func_5951')
var_7332 = relay.var("var_7332", dtype = "int32", shape = (18, 50))#candidate|7332|(18, 50)|var|int32
call_7331 = relay.TupleGetItem(func_5949_call(relay.reshape(var_7332.astype('int32'), [4, 15, 15])), 0)
call_7333 = relay.TupleGetItem(func_5951_call(relay.reshape(var_7332.astype('int32'), [4, 15, 15])), 0)
uop_7341 = relay.sigmoid(bop_7315.astype('float64')) # shape=(7, 11, 6)
var_7356 = relay.var("var_7356", dtype = "float64", shape = (7, 11, 6))#candidate|7356|(7, 11, 6)|var|float64
bop_7357 = relay.left_shift(uop_7341.astype('int32'), relay.reshape(var_7356.astype('int32'), relay.shape_of(uop_7341))) # shape=(7, 11, 6)
bop_7360 = relay.mod(uop_7341.astype('float64'), relay.reshape(bop_7357.astype('float64'), relay.shape_of(uop_7341))) # shape=(7, 11, 6)
func_1733_call = mod.get_global_var('func_1733')
func_1737_call = mutated_mod.get_global_var('func_1737')
const_7390 = relay.const([2,-5,-2,6,10,-3,-1,-7,-6,1,3,8,-10,9,8,9,-3,-9,-7,-6,2,9,8,6,1,4,7,-1,4,8,-1,4,-9,-8,-7,-5,-8,2,-8,-10,8,-2,7,-3,-7,-4,5,-2,-2,-3,9,-10,10,-2,10,9,7,4,-9,6,-7,-4,-2,-9,1,5,-7,4,7,-10,-2,-9,-2,-5,-2], dtype = "int16")#candidate|7390|(75,)|const|int16
const_7391 = relay.const([-3,3,9,10,-3,-9,-10,-2,1,-7,2,-1,1,-7,7,3,-7,5,-10,8,-10,8,10,-10,-1,-3,5,9,-10,-10,-10,-6,1,5,-8,7,-9,-9,-4,-1,10,-9,-10,2,5,-10,8,4,-9,3,5,7,-4,5,7,-6,-2,1,-3,5,-6,-5,-10,4,-1,7,6,9,10,9,-10,4,1,-5,10,-4,-2,3,-1,1,3,-7,-4,10,-2,1,5,3,3,-10,-5,-1,5,-9,10,-8,2,3,-4,9,-1,8,-8,-2,7,7,-8,9,2,-8,1,-7,-5,-8,1,-7,-8,2,3,10,-8,4,-5,9,-2,-2,-7,6,7,-1,9,-5,-2,-6,3,-7,-1,8,3,-5,-6,-7,-6,-5,7,5,3,-5,-9,9,5,4,4,-3,-3,1,-5,-2,-1,4,-2,-4,-9,9,-7,1,-2,-1,-10,3,-3,3,-3,1,-2,2,5,9,2,-3,4,-3,10,-5,8,-4,-4,-3,9,-3,-10,-7,8,9,3,2,-6,8,-1,-6,2,-2,-6,5,10,8,-10,2,-2,9,3,-7,-6,-6,-9,-6,4,-7,-4,8,8,-1,-3,-8,4,-2,-9,-7,-5,2,7,3,5,-2,2,-2,-7,1,-7,-7,-6,-9,10,-10,1,9,9,9,-3,4,2,10,-10,-9,9,10,-5,-8,7,9,9,7,-1,-1,-9,2,2,1,2,-1,-6,-6,-1,5,4,7,-4,-1,-3,9,-9,5,10,5,8,5,-6,4,-7,7,-4,5,9,3,2,5,-1,-5,6,5,8,7,-10,3,-1,9,5,3,1,7,8,-5,10,-9,1,-10,5,3,8,3,8,-7,5,6,-8,9,5,-2,-3,-1,9,3,9,-1,4,8,-7,5,-7,-10,-6,-8,3,5,-4,-2,8,-9,3,-5,4,-1,8,-3,-6,7,-1,2,8,-2,4,7,9,-8,-4,9,6,-8,-5,9,-3,-5,3,10,5,-6,-6,-10,9,-7,-2,-10,6,3,9,3,10,6,-5,7,-8,8,7,9,7,8,2,-10,-6,-10,-6,-8,-10,10,-1,-5,3,5,3,-6,9,2,2,10,4,4,2,6,4,-9,-6,-6,-10,-9,-4,-3,-6,6,6,5,-5,-2,1,-3,6,2,8,3,10,1,4,8,-1,-10,-10,9,-6,-4,-8,1,-9,-8,-4,5,2,1,3,7,-6,3,2,3,10,6,-4,-4,2,10,-2,4,-4,-9,4,3,1,-8,-7,-4,6,-4,6,3,-9,-8,9,-4,-4,-8,-7,2,6,-4,9,-9,-7,-7,-3,1,-3,-5,-10,5,-4,-6,-5,-10,6,-1,3,2,-5,10,-9,-1,1,-7,7,-5,-5,1,-9,1,6,-2,4], dtype = "int16")#candidate|7391|(525,)|const|int16
call_7389 = relay.TupleGetItem(func_1733_call(relay.reshape(const_7390.astype('int16'), [1, 15, 5]), relay.reshape(const_7391.astype('int16'), [7, 15, 5]), ), 1)
call_7392 = relay.TupleGetItem(func_1737_call(relay.reshape(const_7390.astype('int16'), [1, 15, 5]), relay.reshape(const_7391.astype('int16'), [7, 15, 5]), ), 1)
func_1733_call = mod.get_global_var('func_1733')
func_1737_call = mutated_mod.get_global_var('func_1737')
call_7403 = relay.TupleGetItem(func_1733_call(relay.reshape(const_7390.astype('int16'), [1, 15, 5]), relay.reshape(const_7391.astype('int16'), [7, 15, 5]), ), 2)
call_7404 = relay.TupleGetItem(func_1737_call(relay.reshape(const_7390.astype('int16'), [1, 15, 5]), relay.reshape(const_7391.astype('int16'), [7, 15, 5]), ), 2)
output = relay.Tuple([bop_7309,uop_7326,call_7331,var_7332,bop_7360,call_7389,const_7390,const_7391,call_7403,])
output2 = relay.Tuple([bop_7309,uop_7326,call_7333,var_7332,bop_7360,call_7392,const_7390,const_7391,call_7404,])
func_7408 = relay.Function([var_7332,var_7356,], output)
mod['func_7408'] = func_7408
mod = relay.transform.InferType()(mod)
mutated_mod['func_7408'] = func_7408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7408_call = mutated_mod.get_global_var('func_7408')
var_7410 = relay.var("var_7410", dtype = "int32", shape = (18, 50))#candidate|7410|(18, 50)|var|int32
var_7411 = relay.var("var_7411", dtype = "float64", shape = (7, 11, 6))#candidate|7411|(7, 11, 6)|var|float64
call_7409 = func_7408_call(var_7410,var_7411,)
output = call_7409
func_7412 = relay.Function([var_7410,var_7411,], output)
mutated_mod['func_7412'] = func_7412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7457 = relay.var("var_7457", dtype = "float64", shape = (12, 2, 1))#candidate|7457|(12, 2, 1)|var|float64
uop_7458 = relay.atan(var_7457.astype('float64')) # shape=(12, 2, 1)
output = uop_7458
output2 = uop_7458
func_7461 = relay.Function([var_7457,], output)
mod['func_7461'] = func_7461
mod = relay.transform.InferType()(mod)
var_7462 = relay.var("var_7462", dtype = "float64", shape = (12, 2, 1))#candidate|7462|(12, 2, 1)|var|float64
output = func_7461(var_7462)
func_7463 = relay.Function([var_7462], output)
mutated_mod['func_7463'] = func_7463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_7470 = relay.TupleGetItem(func_4485_call(), 0)
call_7471 = relay.TupleGetItem(func_4486_call(), 0)
output = call_7470
output2 = call_7471
func_7475 = relay.Function([], output)
mod['func_7475'] = func_7475
mod = relay.transform.InferType()(mod)
mutated_mod['func_7475'] = func_7475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7475_call = mutated_mod.get_global_var('func_7475')
call_7476 = func_7475_call()
output = call_7476
func_7477 = relay.Function([], output)
mutated_mod['func_7477'] = func_7477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5110_call = mod.get_global_var('func_5110')
func_5111_call = mutated_mod.get_global_var('func_5111')
call_7478 = relay.TupleGetItem(func_5110_call(), 1)
call_7479 = relay.TupleGetItem(func_5111_call(), 1)
func_7103_call = mod.get_global_var('func_7103')
func_7105_call = mutated_mod.get_global_var('func_7105')
call_7480 = relay.TupleGetItem(func_7103_call(relay.reshape(call_7478.astype('uint64'), [16, 13, 10])), 0)
call_7481 = relay.TupleGetItem(func_7105_call(relay.reshape(call_7478.astype('uint64'), [16, 13, 10])), 0)
output = relay.Tuple([call_7478,call_7480,])
output2 = relay.Tuple([call_7479,call_7481,])
func_7483 = relay.Function([], output)
mod['func_7483'] = func_7483
mod = relay.transform.InferType()(mod)
output = func_7483()
func_7484 = relay.Function([], output)
mutated_mod['func_7484'] = func_7484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5567_call = mod.get_global_var('func_5567')
func_5569_call = mutated_mod.get_global_var('func_5569')
call_7521 = relay.TupleGetItem(func_5567_call(), 0)
call_7522 = relay.TupleGetItem(func_5569_call(), 0)
func_3271_call = mod.get_global_var('func_3271')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_7527 = func_3271_call(relay.reshape(call_7521.astype('int8'), [10, 14, 3]))
call_7528 = func_3271_call(relay.reshape(call_7521.astype('int8'), [10, 14, 3]))
func_4437_call = mod.get_global_var('func_4437')
func_4440_call = mutated_mod.get_global_var('func_4440')
const_7530 = relay.const([-3.676257,-1.016133,-6.265976,5.590324,-8.823454,-3.915829,8.663474,-1.866627,1.867292,-7.403588,7.128147,-2.891724,-9.594690,-7.740109,5.942525,-5.337783,8.073220,-8.309129,-1.542568,6.323326,-2.070477,7.981879,8.707438,-7.542242,7.306656,8.050669,1.950988,1.601363,6.263181,6.112009,7.822667,-0.429878,0.250436,-0.139015,-0.025266,-4.446220,-7.909312,-9.830252,-1.526589,-8.441627,4.494074,-6.525010,0.562181,-4.096921,0.963579,-5.927308,-6.068150,-3.372594,9.477128,0.204424,-9.587294,-1.545135,8.303638,-2.231211,7.665386,1.259965,5.154481,5.957642,-3.039819,0.796063,6.096641,-3.733423,-8.308640,4.811729,-7.497541,-5.972813,6.834590,2.953643,5.234163,-3.736880,-6.548870,-8.889713,6.000023,-8.900535,3.551192,-9.672079,3.735906,-5.566894,1.224982,2.693382,-4.526873,-2.725492,-2.205932,7.795109,6.492477,-7.105727,4.088176,6.446904,-8.252906,-1.954764,4.108746,2.914685,-5.165890,3.396268,4.355702,5.158744,-7.696734,0.044207,3.044967,-7.316534,-1.086105,-6.431324,3.184224,7.271332,3.882428,-0.132196,-8.292681,-1.715763,4.751004,-7.385799,-9.969037,8.047548,6.069314,-9.386025,0.492369,6.353968,1.822084,8.913328,-5.177896,4.414653,4.891798,-2.665106,9.741702,-1.449767,-7.560737,5.531491,-6.568149,9.116300,-0.600789,-0.798335,0.673864,7.496498,0.021395,8.244307,7.454796,7.203097,-3.092016,-2.256247,-1.339796,5.254102,7.642163,-9.212448,5.519008,8.077890,7.773121,6.397956,-1.705694,2.785234,9.004348,6.498972,7.704003,1.103949,-5.652263,1.592483,-5.937030,-5.387710,-0.758031,6.068154,-5.755428,7.993787,-2.882890,-2.043584,8.131204,-7.380113,5.020316,-1.482828,0.979712,-8.838020,3.536784,-4.254090,-6.999460,-7.318959,2.161584,-3.738597,-4.069861,1.549614,-5.420795,9.475992,-0.829670,6.576430,3.490294,-9.178007,7.634792,7.177875,6.283159,7.530665,-7.674149,-7.533260,2.017339,2.894107,-9.469032,8.895948,2.952049,-0.147906,-5.039827,1.278794,1.466308,-7.302640,-7.029619,-5.639414,-4.296313,-2.213829,6.917328,-0.873016,6.104685,-8.146712,8.678579,9.065612,4.543296,-0.784886,2.596573,9.122561,1.760400,6.107713,9.098251,9.540374,8.446673,-8.719396,-9.975298,-7.939858,8.723784,2.991381,-5.685895,2.981051,1.361927,9.953871,9.174290,4.739550,1.841358,-6.099195,-4.545788,-2.423317,8.294019,-0.752286,4.219928,-7.520557,-8.713460,4.506841,-2.790875,-9.770411,-2.480474,-9.304035,-3.552240,3.583196,-3.482439,1.525219,1.820560,3.082555,-6.259634,4.073812,-7.320276,-8.325077,4.965403,5.718887,-4.571523,8.720117,1.447159,-6.058577,-9.425151,4.564135,-1.729571,1.422252,-1.757005,-9.091260,4.142681,8.119516,6.096775,-2.030996,3.516417,-6.084602,7.260622,8.800448,5.273137,-5.354955,5.495744,2.728052,-1.264818,0.152241,4.402523,-4.880008,4.907442,-1.980144,6.089325,-7.961397,-7.315962,7.024541,-0.004961,-8.882096,-7.140070,5.269965,4.648520,9.015942,-7.977479,-4.515388,7.804832,-8.319208,-9.884486,5.370707,5.264200,1.694094,8.593469,7.946878,7.559919,2.768545,-7.169274,3.926877,1.938531,-3.210779,2.737231,3.360895,8.668964,-8.892424,-2.966646,2.429345,7.282851,8.212022,8.426659,-9.045035,1.417372,5.635311,0.895743,7.308596,3.331523,-2.401381,-7.945425,3.727506,3.868311,-6.942621,-9.329698,8.922814,-8.764979,-2.811954,3.020435,-3.814080,-7.104652,-6.509431,-1.761656,2.265637,8.312923,-7.101372,6.626059,4.529150,7.945261,4.225505,-6.125382,9.883892,9.814951,-8.965561,7.257300,4.598964,-9.652485,8.390043,7.914613,7.251008,-5.539151,4.379209,4.352370,-2.744338,-7.230792,-0.756555,-5.612222,1.838737,5.242740,-0.604959,-6.791892,4.489279,2.668236,5.341160,6.464945,-9.933242,-7.897125,3.929016,-7.985289,5.110437,8.858665,2.923685,2.551427,-7.037263,0.475981,1.600761,-2.232054,-2.867537,1.078313,2.447398,-9.442192,-5.901624,7.324044,8.530588,3.615722,-2.670483,-6.493867,-6.539496,-7.008913,2.261272,8.740314,4.293768,4.933942,-2.255275,5.193636,0.728700,2.283989,-3.461783,9.091074,-9.859814,-8.466483,-6.413771,0.694997,2.350080,0.817051,3.418665,7.596050,-2.327530,-8.642037,-6.356870,-5.621748,-1.026144,0.108665,-0.753721,-4.936116,-3.126886,2.376628,8.456510,9.248884,-8.471967,1.419354,-0.998288,-1.456870,9.443410,8.407034,-9.006340,9.207453,8.891475,-0.859762,-4.799274,-8.510710,9.749031,7.038396,-0.191231,7.671979,4.123265,-2.961159,-0.487027,-6.424573,-4.482539,8.469153,-7.877734,1.965713,3.351535,6.715749,-1.043943,-1.751219,-2.931643,-8.075217,1.552587,7.448061,9.441518,-7.030262,9.969465,7.384655,-8.457484,-1.447279,-4.843852,-3.827324,9.913320,6.606791,9.432287,-7.032989,7.406202,6.882278,-2.584835,7.650772,-1.241459,0.174874,-1.683002,4.476058,7.194879,1.691199,7.490884,-4.767036,-2.193077,-3.369940,8.154632,5.399191,-6.218377,4.335840,2.343284,-9.922971,-9.866651,3.146619,-0.218163,3.831032,9.356591,3.398189,-6.164112,1.161121,5.539442,2.758500,-3.175727,3.515947,1.466082,-6.064679,0.213534,-1.865130,-8.110807,7.196363,1.644293,7.125570,4.718282,4.620002,-1.872457,-5.149609,1.963198,-9.749954,-9.069593,-6.427793,6.620330,6.860222,1.857081,-9.277146,4.202026,-6.117849,6.351281,0.589421,7.550766,-9.263509,-3.057846,9.591096,-2.471489,9.969076,-4.075339,-8.056497,-3.054916,-2.148082,-0.736330,-6.848923,-7.257824,-7.973717,-6.171363,9.157673,-1.971700,2.259364,-6.456380,-0.428919,-9.744393,-5.626330,1.387567,-4.379423,-9.013758,7.514883,-5.559239,-6.917353,1.017767,-0.036811,5.282630,9.941174,5.522910,-1.281607,8.936481,5.417325,-0.193019,-2.617201,-2.945387,-5.412152,-3.061042,3.898617,2.320953,1.539153,-0.980734,-5.958520,0.121010,-2.077009,-1.320351,3.921578,0.207998,4.072262,-0.950815,-2.549871,9.443866,2.948669,-5.490158,-7.719930,-8.732070,-3.965140,0.772645,-4.255290,-0.225336,8.247070,8.240619,8.493959,8.265687,2.516870,-3.654986,5.207052,-0.860469,1.565748,9.257812,-9.794214,-7.117203,6.737690,5.073520,-8.112286,-9.726451,-4.391588,-8.131275,-4.018815,-2.585552,4.125049,7.339959,-3.690562,7.675841,1.618635,5.545792,6.849863,-5.288641,0.705149,-7.222508,-8.671203,-1.360737,8.845820,-5.542640,-5.465158,2.603264,0.815898,-1.804788,-8.015563,-4.764192,5.661185,4.800553,7.061036,0.657605,9.790145,-1.619308,-5.627086,-3.488024,-0.800891,6.116353,3.910931,-6.288956,-9.122042,7.543744,8.832222,-5.579909,8.083581,5.781002,2.033450,-9.708031,-2.691040,-2.021692,0.294055,-1.888195,6.367974,-3.128944,-1.633418,-9.584255,-9.947640,6.189813,0.816665,-5.083694,6.024438,8.497014,-7.868949,8.608480,-3.084893,0.329517,-5.877039,8.898063,3.540831,7.741317,0.872249,-7.432005,1.302281,0.899771,3.489426,0.874603,1.411931,-6.586441,-6.587239,-0.602352,3.406764,-1.342067,-1.498265,-8.004433,-2.263300,7.109861,7.394178,8.799932,-0.292769,3.395620,-9.841473,-4.128618,6.655811,2.791429,1.314531,-1.980790,9.865418,-0.475154,2.664851,9.557962,-9.747716,6.310737,7.629405,-2.848723,2.261448,3.630270,5.841478,7.952479,-2.780444,-1.741961,-2.196322,3.311026,-2.954128,7.997793,-5.582202,2.404671,-7.300625,-5.705444,5.583554,8.064901,-5.551890,-0.687436,-9.478730,-5.639873,-4.744536,-5.214266,2.249182,-6.742633,-8.736316,5.670068,-3.048273,7.345636,4.174365,-0.198158,6.828370,8.077290,7.644781,0.297746,1.811162,-4.992035,-9.675270,4.809096,-1.107302,7.056112,1.951311,3.524718,5.108622,-1.679635,-5.222225,7.180483,-9.356516,2.857804,-7.169705,-3.457241,-1.534552,2.819064,6.745324,7.980629,-3.508267,-0.565924,3.220523,-0.463046,6.006473,-6.534341,1.672465,8.270398,-0.333321,2.098163,9.765868,0.997471,2.511845,-8.920197,9.867935,-1.619065,3.988144,3.865592,8.880011,7.954289,0.058232,-5.380537,-6.441986,-7.171658,1.846218,3.358249,5.846863,-3.796126,-5.349313,-2.627738,-4.849792,5.179298,6.229647,3.253840,-8.924292,3.355320,-9.499940,9.462000,2.371882,6.671178,1.141495,9.720080,7.172724,8.325526,5.869546,8.550580,8.901425,7.387149,-4.931328,6.958274,2.013236,-3.048376,-1.801209,-6.535534,2.538905,-2.583529,9.265462,-6.097945,-8.416520,-1.759736,3.697548,9.998745,-6.632295,3.984391,0.433561,-7.494848,-9.392247,-0.653327,-0.590098,-2.039767,9.065290,-4.520111,5.552254,7.482163,2.669921,9.887895,-1.812087,1.524883,0.949426,4.996103,2.487951,7.827405,-5.262298,-3.714514,9.704971,-2.167780,-2.019674,9.768904,7.026432,6.830164,-9.729240,7.632475,6.754890,0.929720,-8.514590,-8.758652,-4.726491,6.096384,0.414260,5.259168,-6.578528,1.920909,0.255624,-3.652308,-9.620686,5.933923,-8.188263,3.495160], dtype = "float64")#candidate|7530|(864,)|const|float64
call_7529 = relay.TupleGetItem(func_4437_call(relay.reshape(const_7530.astype('float64'), [9, 12, 8])), 0)
call_7531 = relay.TupleGetItem(func_4440_call(relay.reshape(const_7530.astype('float64'), [9, 12, 8])), 0)
output = relay.Tuple([call_7521,call_7527,call_7529,const_7530,])
output2 = relay.Tuple([call_7522,call_7528,call_7531,const_7530,])
func_7535 = relay.Function([], output)
mod['func_7535'] = func_7535
mod = relay.transform.InferType()(mod)
mutated_mod['func_7535'] = func_7535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7535_call = mutated_mod.get_global_var('func_7535')
call_7536 = func_7535_call()
output = call_7536
func_7537 = relay.Function([], output)
mutated_mod['func_7537'] = func_7537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4646_call = mod.get_global_var('func_4646')
func_4648_call = mutated_mod.get_global_var('func_4648')
call_7560 = relay.TupleGetItem(func_4646_call(), 0)
call_7561 = relay.TupleGetItem(func_4648_call(), 0)
var_7583 = relay.var("var_7583", dtype = "float64", shape = (9, 12, 8))#candidate|7583|(9, 12, 8)|var|float64
bop_7584 = relay.greater_equal(call_7560.astype('bool'), relay.reshape(var_7583.astype('bool'), relay.shape_of(call_7560))) # shape=(9, 12, 8)
bop_7587 = relay.greater_equal(call_7561.astype('bool'), relay.reshape(var_7583.astype('bool'), relay.shape_of(call_7561))) # shape=(9, 12, 8)
output = relay.Tuple([bop_7584,])
output2 = relay.Tuple([bop_7587,])
func_7590 = relay.Function([var_7583,], output)
mod['func_7590'] = func_7590
mod = relay.transform.InferType()(mod)
mutated_mod['func_7590'] = func_7590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7591 = relay.var("var_7591", dtype = "float64", shape = (9, 12, 8))#candidate|7591|(9, 12, 8)|var|float64
func_7590_call = mutated_mod.get_global_var('func_7590')
call_7592 = func_7590_call(var_7591)
output = call_7592
func_7593 = relay.Function([var_7591], output)
mutated_mod['func_7593'] = func_7593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7158_call = mod.get_global_var('func_7158')
func_7160_call = mutated_mod.get_global_var('func_7160')
call_7595 = relay.TupleGetItem(func_7158_call(), 1)
call_7596 = relay.TupleGetItem(func_7160_call(), 1)
output = relay.Tuple([call_7595,])
output2 = relay.Tuple([call_7596,])
func_7604 = relay.Function([], output)
mod['func_7604'] = func_7604
mod = relay.transform.InferType()(mod)
mutated_mod['func_7604'] = func_7604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7604_call = mutated_mod.get_global_var('func_7604')
call_7605 = func_7604_call()
output = call_7605
func_7606 = relay.Function([], output)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7483_call = mod.get_global_var('func_7483')
func_7484_call = mutated_mod.get_global_var('func_7484')
call_7642 = relay.TupleGetItem(func_7483_call(), 1)
call_7643 = relay.TupleGetItem(func_7484_call(), 1)
func_7251_call = mod.get_global_var('func_7251')
func_7253_call = mutated_mod.get_global_var('func_7253')
call_7644 = relay.TupleGetItem(func_7251_call(relay.reshape(call_7642.astype('uint64'), [16, 13, 10])), 0)
call_7645 = relay.TupleGetItem(func_7253_call(relay.reshape(call_7642.astype('uint64'), [16, 13, 10])), 0)
output = relay.Tuple([call_7642,call_7644,])
output2 = relay.Tuple([call_7643,call_7645,])
func_7652 = relay.Function([], output)
mod['func_7652'] = func_7652
mod = relay.transform.InferType()(mod)
mutated_mod['func_7652'] = func_7652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7652_call = mutated_mod.get_global_var('func_7652')
call_7653 = func_7652_call()
output = call_7653
func_7654 = relay.Function([], output)
mutated_mod['func_7654'] = func_7654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_7715 = relay.TupleGetItem(func_4151_call(), 1)
call_7716 = relay.TupleGetItem(func_4152_call(), 1)
func_4864_call = mod.get_global_var('func_4864')
func_4871_call = mutated_mod.get_global_var('func_4871')
const_7735 = relay.const([-1,6,10,-2,-10,-5,9,6,-6,-7,9,2,1,8,-7,9,3,3,-3,-10,-4,-7,3,-9,10,-1,10,-2,-5,2,9,-1,-7,6,1,-4,-3,10,-4,-6,6,3,1,4,-6,-9,8,-7,-4,6,1,10,8,-9,-8,-7,2,-8,-3,-10,-1,-4,-9,-5,-6,-6,-10,8,-6,-2,-1,7,-7,10,-1,1,-9,2,-7,-9,-7,-9,-3,9,-5,-2,-8,-2,7,-6,-2,10,-3,-9,1,-5,-5,7,1,-5,-7,-5,-7,-9,-10,-3,-4,-6,-7,-9,-5,9,9,7,-2,-8,-1,-3,1,5,8,6,2,1,6,-10,-4,-10,4,3,-10,-4,-6,-3,8,-10,5,8,-7,1,-9,-2,-9,-6,-10,9,-1,-4,8,6,5,-4,-2,-10,-3,10,-1,5,-7,-10,-1,8,2,9,-9,-7,10,5,-4,-9,-5,9,5,3,-6,-10,4,8,-2,-7], dtype = "int16")#candidate|7735|(180,)|const|int16
const_7736 = relay.const([2.775985,5.471439,9.326538,1.103274,-0.584601,-9.528070,7.227226,-5.817298,-2.166174,7.465271,-7.660586,-9.841063,5.967895,-4.450650,-6.897150,-7.908315,5.086770,-5.510754,9.841951,-0.430446,4.123511,-6.056028,8.536139,1.453862,0.436738,0.901744], dtype = "float64")#candidate|7736|(26,)|const|float64
var_7737 = relay.var("var_7737", dtype = "float64", shape = (1248,))#candidate|7737|(1248,)|var|float64
call_7734 = relay.TupleGetItem(func_4864_call(relay.reshape(const_7735.astype('int16'), [15, 6, 2]), relay.reshape(const_7735.astype('int16'), [15, 6, 2]), relay.reshape(const_7736.astype('float64'), [1, 26]), relay.reshape(const_7735.astype('float32'), [15, 6, 2]), relay.reshape(var_7737.astype('float64'), [1248,]), ), 6)
call_7738 = relay.TupleGetItem(func_4871_call(relay.reshape(const_7735.astype('int16'), [15, 6, 2]), relay.reshape(const_7735.astype('int16'), [15, 6, 2]), relay.reshape(const_7736.astype('float64'), [1, 26]), relay.reshape(const_7735.astype('float32'), [15, 6, 2]), relay.reshape(var_7737.astype('float64'), [1248,]), ), 6)
func_5110_call = mod.get_global_var('func_5110')
func_5111_call = mutated_mod.get_global_var('func_5111')
call_7764 = relay.TupleGetItem(func_5110_call(), 1)
call_7765 = relay.TupleGetItem(func_5111_call(), 1)
func_5871_call = mod.get_global_var('func_5871')
func_5876_call = mutated_mod.get_global_var('func_5876')
var_7778 = relay.var("var_7778", dtype = "float64", shape = ())#candidate|7778|()|var|float64
var_7779 = relay.var("var_7779", dtype = "float64", shape = (64,))#candidate|7779|(64,)|var|float64
const_7780 = relay.const([-8.889844,-3.181781,-6.333162,8.745652,3.861529,9.290188,3.269627,-5.835465,-9.881201,5.985346,9.097309,6.342075,-6.225700,-7.323001,5.909005,0.515635,6.750434,-5.879132,-8.987082,7.962092,-4.999938,-7.937350,8.436080,-3.513008,-5.421321,1.693296,-1.074328,2.898662,2.361423,-0.991928,0.164750,-5.619007,7.391190,-8.940595,-2.573349,-8.587231,-7.498895,-7.942434,9.778283,9.855550,2.075982,7.147111,-0.828915,-2.050953,-3.759185,-8.532466,-6.436678,-9.851918,6.967703,8.248183,3.757962,-8.346444,-2.947571,0.397978,-0.993856,8.345223,-9.189935,3.364062,0.917239,-1.330737,-4.368499,3.336040,4.407717,6.115850,-1.858388,-3.299913,-6.112100,2.028741,-4.108318,-1.567566,-5.203816,-7.446778,-8.746028,6.722371,7.192009,9.483657,-6.767632,-4.770738,-7.345161,-3.502545,7.471685,-6.714718,4.864641,-8.014675,9.094720,-0.515432,8.973792,-0.542652,-1.432222,6.513383,0.478807,-6.466527,-0.749904,6.415778,-7.816155,6.548599,-3.901613,1.376857,-0.070114,3.492664,-1.153320,0.807621,-6.727084,7.875983,7.190576,-2.381390,9.700427,-3.573730,-3.301115,-7.510396,9.359042,-9.446383,-3.972013,6.923835,5.986581,-7.809420,7.503404,0.396350,6.145193,-0.234367,-8.251772,4.784911,1.164095,2.011173,5.165911,-3.279555,7.240874,-9.374033,-1.678766,-2.052320,3.369800,3.651156,-9.186308,-2.692774,8.842548,-9.038299,-1.864631,1.883031,4.158237,9.637990,2.961974,6.091535,-3.708226,-1.232996,-9.546248,-6.054160,7.347353,-3.538104,1.606904,9.922530,4.949620,-1.675614,3.436412,-3.599102,-0.242506,1.236424,8.250331,-9.673988,-1.363539,9.306388,-1.326878,-7.952585,9.905906,9.377062,-5.572178,-8.059157,1.443193,7.238309,-2.338080,5.432546,5.034543,-2.753710,-4.937361,-6.986098,4.812311,2.646978,9.473637,3.785889,-0.184891,5.081870,1.701983,-8.286414,-0.923032,5.572196,3.725728,4.439654,3.549602,-1.252709,7.145175,5.493536,-3.165252,-5.792650,-9.782452,-4.053196,-7.318839,4.114887,5.675868,-4.269810,7.300696,5.157943,5.200681,4.776656,-6.218402,-6.030668,-0.047062,9.458774,-1.750579,1.384484,8.726198,8.557187,9.776471,-0.800191,-5.327942,0.652476,-3.490099,6.763426,1.538587,0.291765,-7.837815,0.667625,3.869719,2.241297,-9.016227,-0.537641,-1.500642,-5.607538,7.061648,7.973418,4.688081,1.047069,0.870380,4.528204,-3.419179,-7.314244,-5.688900,3.084447,-3.912938,7.898014,6.246138,4.920392,8.625332,-4.032180,-0.925116,7.228245,-3.050786,1.678590,8.653828,-9.663792,1.313069,-9.986553,7.868408,8.101618,-9.346658,-1.033769,6.362271,2.859057,9.949724,3.486614,0.585991,-8.707966,2.724634,0.203709,-1.851095,-2.575096,9.918932,-6.883884,1.831492,-0.962873,-7.250167,1.384988,-8.062905,1.193085,-0.315788,3.556209,3.925971,0.687436,-4.914159,2.817043,5.929835,-1.562655,-7.881290,6.331951,9.026992,3.483543,-5.020113,9.978887,9.916135,9.982199,8.272868,-1.319558,-6.735377,2.116850,-3.561156,0.037953,1.609013,-4.071273,-7.456652,7.027818,-3.788237,-1.739654,6.534265,7.670860,-5.611397,8.047579,-9.231716,-3.143711,9.936902,9.614762,-9.559952,5.353585,-5.935861,0.482292,0.856875,-8.262193,1.829570,4.128338,-0.766094,8.159157,9.119593,-5.127152,-2.743250,-1.207806,0.376198,-8.882803,-8.026191,6.993221,6.450107,-0.569214,6.595241,-2.915367,7.518630,8.627361,7.609155,-8.873343,0.797096,-1.244686,7.321982,-5.153864,-3.850419,-0.745983,-4.235108,2.793514,-8.521027,4.225221,6.108864,-8.335856,0.647663,-1.697556,-6.302046,1.486476,-2.106173,-7.639356,-1.960683,-0.609566,1.971990,5.431300,-2.892467,5.411554,-3.278707,-3.071973,2.957192,-6.047824,-4.305435,1.344974,3.621733,8.394545,-9.859157,4.012234,-4.658835,1.008183,-8.898108,6.702557,4.512016,7.246105,2.642903,2.093938,-3.419314,2.275570,4.412056,-7.985125,8.172971,-1.579403,7.282258,-0.878904,3.368217,7.545625,7.983478,-4.604171,5.459317,-9.669341,1.392602,9.117671,-9.656463,-1.887587,3.483862,-2.068145,-1.057066,-4.203424,7.704372,8.697752,-9.748047,-7.061783,-6.969261,7.067472,9.125665,-0.217940,3.088052,-3.218848,5.810329,8.325874,1.076033,4.145162,-9.346874,7.554823,9.274994,-8.607102,0.678361,7.821541,9.563230,-2.946898,-4.547963,2.613969,-8.155060,5.551060,2.409029,5.084579,1.092090,-9.691151,-5.499171,9.817544,8.331560,-2.952292,-6.833381,-9.415231,-7.081214,-1.848083,7.056609,-9.894513,-4.387607,5.005927,0.985575,-6.498228,-0.981061,-8.141012,9.723235,-9.735115,-5.134780,5.385207,-3.352800,-0.684609,-6.462586,7.517811,7.794859,-2.317918,-8.396941,6.819597,-6.395697,-1.654058,-4.549574,3.296986,-4.767740,-4.320236,-2.344973,5.012853,1.265781,7.631382,4.857811,-3.439297,8.445747,-2.428340,-3.190985,0.881993,6.726838,4.036028,-7.682303,0.374333,-7.220545,3.252137,-8.802004,5.584089,4.811403,2.809519,-7.653549,4.458689,-1.660467,5.459698,1.761632,4.085177,-4.732227,-7.078714,-3.065832,0.830200,-9.150780,8.370653,7.700963,-8.421134,-0.602851,3.858537,7.754153,-7.065252,-8.890072,6.974029,-4.349272,1.776681,1.489029,0.648066,7.780132,0.416508,-3.472019,-4.136447,5.383452,-2.792274,6.695193,-6.656630,-6.859579,-5.411651,-8.631863,-2.757214,2.113901,8.492749,8.194253,-2.591713,7.300809,-8.719782,-2.872808,-3.287643,-6.232643,8.281298,-7.434138,-4.248406,-8.564893,-1.707734,-1.128190,1.612175,-6.983049,9.849096,-7.514782,-0.426118,6.571292,2.194470,-3.425889,6.789026,-9.554127,-2.798698,5.965856,4.645277,4.853238,-9.145355,-6.912968,6.444364,6.671295,-9.319508,-0.355296,7.037306,-4.940688,-8.694586,-7.218489,4.861791,-0.819967,-9.511915,-7.595578,-0.283065,0.017548,-4.045326,-0.931791,-8.372011,-0.376957,3.589238,7.080764,-4.110642,9.004223,-7.793329,-9.459059,-2.484649,6.963626,-8.028502,-7.905650,-9.115674,-2.222871,1.331618,-2.463222,-5.235725,6.868620,-0.459376,-4.096466,-9.251552,4.002158,-4.906599,-5.175967,-3.461682,0.150125,6.193996,8.956692,5.538601,-0.021404,4.527491,-1.649444,5.243301,4.129705,-7.501510,-2.781389,-5.194887,-7.137446,-3.720666,7.325792,-9.970449,4.879723,6.706883,1.875848,-0.114999,7.626196,0.423866,0.445998,4.308604,-7.374351,6.661884,-6.291175,-7.428672,-7.677831,9.690906,8.026309,-2.244905,-3.323559,-1.129857,-6.766329,7.816615,-7.548219,3.183352,-2.260414,-5.819466,-8.262643,9.491267,3.171339,9.192454,-9.825282,-5.870294,2.091937,3.975913,-7.483186,9.185465,-1.053242,-6.968632,6.891066,3.748888,8.032832,-2.066859,5.562613,-3.019099,6.974530,-4.574682,7.409475,-2.367110,5.499146,-8.798817,3.527531,-8.943975,-3.529595,-8.660617,-6.854182,0.101318,7.248464,0.276288,-2.640623,-3.148837,-2.681215,1.149270,9.733966,-4.024576,5.537272,-5.882853,-4.955798,6.155133,0.845359,4.898202,6.739113,8.513679,-9.561932,1.890914,4.577167,4.865578,-7.749218,5.703525,-4.416662,-2.648175,-5.359682,-4.593815,3.172157,5.232541,1.185936,-7.837933,-8.370326,5.047625,-3.756766,9.579350,-2.411911,3.384644,5.433261,-9.243986,-4.728899,-2.513692,6.047744,-9.471701,-5.301382,-5.496681,-5.219939,-4.339951,-6.899779,9.795971,-5.316020,-2.855113,3.635174,2.319676,-7.781153,-8.361084,-1.349856,1.522249,0.138218,-0.889856,-6.753323,8.726484,9.066415,3.065281,-7.001604,-2.990850,8.019659,3.566835,5.764385,9.093017,0.157445,-5.783172,-4.793500,5.711820,5.352189,0.675650,-2.413390,-2.678549,-8.837720,-1.472242,5.286814,8.274068,8.312318,1.906550,8.410268,3.165615,1.074716,-0.511820,6.123922,7.596060,9.797827,-7.337994,-4.293048,3.663923,-3.754197,8.875785,8.252794,-0.512047,3.970783,0.117568,7.320699,8.882371,-2.673698,-4.868010,-8.686063,2.205839,1.817275,6.036396,-5.001134,-7.710588,-7.526428,-6.038458,7.136068,0.708323,8.245285,5.422678,4.044909,8.099730,6.200244,2.986544,2.115296,9.549962,6.187119,-3.571135,-6.878129,-8.410850,-8.374311,-5.997837,-7.783749,3.273240,-8.987428,-1.794086,1.550894,5.153759,5.153105,-2.344772,4.671264,8.621583,8.712930,6.180274,4.623692,-9.979994,-2.776147,9.512164,-4.807705,-8.642239,8.829205,-5.236107,-9.048340,6.335079,3.633260,3.497213,-7.689618,9.045886,-5.013002,1.181063,-6.483613,-0.945852,-8.878647,5.662911,-2.020215,2.501291,-6.383252,-0.111757,0.375333,2.994431,-2.043341], dtype = "float32")#candidate|7780|(825,)|const|float32
call_7777 = relay.TupleGetItem(func_5871_call(relay.reshape(var_7778.astype('float64'), []), relay.reshape(var_7779.astype('float64'), [1, 16, 4]), relay.reshape(const_7780.astype('float32'), [825,]), ), 2)
call_7781 = relay.TupleGetItem(func_5876_call(relay.reshape(var_7778.astype('float64'), []), relay.reshape(var_7779.astype('float64'), [1, 16, 4]), relay.reshape(const_7780.astype('float32'), [825,]), ), 2)
func_6712_call = mod.get_global_var('func_6712')
func_6714_call = mutated_mod.get_global_var('func_6714')
call_7787 = relay.TupleGetItem(func_6712_call(), 2)
call_7788 = relay.TupleGetItem(func_6714_call(), 2)
func_7050_call = mod.get_global_var('func_7050')
func_7052_call = mutated_mod.get_global_var('func_7052')
call_7795 = relay.TupleGetItem(func_7050_call(), 0)
call_7796 = relay.TupleGetItem(func_7052_call(), 0)
func_6415_call = mod.get_global_var('func_6415')
func_6417_call = mutated_mod.get_global_var('func_6417')
const_7798 = relay.const([7.932291,-4.391638,2.653860,2.342248,-1.869493,-0.808948,9.448592,4.428700,1.600418,-7.759120,-3.719212,4.339881,-6.483713,4.131025,5.730853,4.410786,5.137915,9.064750,-6.070203,1.715246,9.608648,-9.456562,-1.075270,0.881535,-2.707446,1.462142,-2.392933,-4.688183,-6.226378,-6.134698,1.021947,-7.112688,-2.524367,1.898542,-8.115327,9.614662,-2.324037,2.733556,6.609342,-9.381880,-4.960676,0.622794,6.674913,3.230001,1.453074,2.238951,8.571008,6.684110], dtype = "float64")#candidate|7798|(48,)|const|float64
call_7797 = relay.TupleGetItem(func_6415_call(relay.reshape(const_7798.astype('float64'), [48,])), 1)
call_7799 = relay.TupleGetItem(func_6417_call(relay.reshape(const_7798.astype('float64'), [48,])), 1)
func_5082_call = mod.get_global_var('func_5082')
func_5087_call = mutated_mod.get_global_var('func_5087')
var_7801 = relay.var("var_7801", dtype = "int16", shape = (75,))#candidate|7801|(75,)|var|int16
var_7802 = relay.var("var_7802", dtype = "int16", shape = (525,))#candidate|7802|(525,)|var|int16
call_7800 = relay.TupleGetItem(func_5082_call(relay.reshape(call_7795.astype('uint64'), [16, 13, 10]), relay.reshape(var_7801.astype('int16'), [75,]), relay.reshape(var_7802.astype('int16'), [5, 105]), ), 0)
call_7803 = relay.TupleGetItem(func_5087_call(relay.reshape(call_7795.astype('uint64'), [16, 13, 10]), relay.reshape(var_7801.astype('int16'), [75,]), relay.reshape(var_7802.astype('int16'), [5, 105]), ), 0)
uop_7815 = relay.atanh(call_7800.astype('float64')) # shape=(16, 13, 10)
uop_7817 = relay.atanh(call_7803.astype('float64')) # shape=(16, 13, 10)
func_3793_call = mod.get_global_var('func_3793')
func_3796_call = mutated_mod.get_global_var('func_3796')
call_7832 = func_3793_call(relay.reshape(call_7797.astype('float32'), [9, 10, 4]))
call_7833 = func_3793_call(relay.reshape(call_7797.astype('float32'), [9, 10, 4]))
bop_7837 = relay.power(uop_7815.astype('float32'), relay.reshape(call_7715.astype('float32'), relay.shape_of(uop_7815))) # shape=(16, 13, 10)
bop_7840 = relay.power(uop_7817.astype('float32'), relay.reshape(call_7716.astype('float32'), relay.shape_of(uop_7817))) # shape=(16, 13, 10)
func_2001_call = mod.get_global_var('func_2001')
func_2005_call = mutated_mod.get_global_var('func_2005')
const_7843 = relay.const([8,9,10,-2,-10,-10,-5,1,3,1,9,-5,5,6,-10,1,-4,-7,-10,5,-1,-9,9,4,-5,-8,-3,5,8,1,-4,-7,5,-5,3,5,5,10,3,-6,7,3,6,9,1,3,2,-6,-3,2,-10,-10,10,-7,-2,-3,6,2,-4,-7,8,-10,9,7,-6,-10,5,-9,9,-2,-10,3,-1,-7,5,1,3,6,-7,6,4,-10,-7,6,7,-9,2,-3], dtype = "uint64")#candidate|7843|(88,)|const|uint64
call_7842 = relay.TupleGetItem(func_2001_call(relay.reshape(const_7843.astype('uint64'), [8, 11, 1]), relay.reshape(var_7801.astype('int16'), [75, 1]), ), 3)
call_7844 = relay.TupleGetItem(func_2005_call(relay.reshape(const_7843.astype('uint64'), [8, 11, 1]), relay.reshape(var_7801.astype('int16'), [75, 1]), ), 3)
func_4202_call = mod.get_global_var('func_4202')
func_4204_call = mutated_mod.get_global_var('func_4204')
call_7862 = func_4202_call()
call_7863 = func_4202_call()
bop_7880 = relay.not_equal(var_7802.astype('bool'), relay.reshape(call_7842.astype('bool'), relay.shape_of(var_7802))) # shape=(525,)
bop_7883 = relay.not_equal(var_7802.astype('bool'), relay.reshape(call_7844.astype('bool'), relay.shape_of(var_7802))) # shape=(525,)
output = relay.Tuple([call_7734,const_7735,const_7736,var_7737,call_7764,call_7777,var_7778,var_7779,const_7780,call_7787,call_7795,call_7797,const_7798,var_7801,call_7832,bop_7837,const_7843,call_7862,bop_7880,])
output2 = relay.Tuple([call_7738,const_7735,const_7736,var_7737,call_7765,call_7781,var_7778,var_7779,const_7780,call_7788,call_7796,call_7799,const_7798,var_7801,call_7833,bop_7840,const_7843,call_7863,bop_7883,])
F = relay.Function([var_7737,var_7778,var_7779,var_7801,var_7802,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7737,var_7778,var_7779,var_7801,var_7802,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

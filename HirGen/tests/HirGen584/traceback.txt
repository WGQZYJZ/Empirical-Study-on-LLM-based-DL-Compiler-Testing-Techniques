==========mod==========
#[version = "0.0.5"]
def @func_9438(%var_9430: Tensor[(728), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(990), float64], Tensor[(990), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) {
  %0 = @func_5858() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %1 = @func_1872() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %2 = @func_6546() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %4 = reshape(%3, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %5 = @func_7578(%4) /* ty=(Tensor[(15, 11, 6), bool], Tensor[(990), float64], Tensor[(15, ?, 16), uint8]) */;
  %6 = @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %7 = cast(%var_9430, dtype="float64") /* ty=Tensor[(728), float64] */;
  %8 = reshape(%7, newshape=[728]) /* ty=Tensor[(728), float64] */;
  %9 = @func_4805(%8) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) */;
  %10 = %0.0;
  %11 = %1.3;
  %12 = %2.0;
  %13 = %5.1;
  %14 = %6.1;
  %15 = @func_9149() /* ty=Tensor[(15, 1, 16), float64] */;
  %16 = %9.2;
  (%10, %11, %12, %13, meta[relay.Constant][0] /* ty=Tensor[(990), float64] */, %14, %15, %16, %var_9430)
}

def @func_6486() -> Tensor[(15, ?, 16), bool] {
  %17 = @func_5745() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %17.0
}

def @func_1561() -> (Tensor[(15, 1, 16), float64],) {
  %18 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%18,)
}

def @func_1683() -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
  %19 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %20 = %19.1;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %22 = cos(%21) /* ty=Tensor[(15, 1, 16), float32] */;
  %23 = cast(%22, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %24 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%20, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = cast(%22, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %28 = sinh(%27) /* ty=Tensor[(15, 1, 16), float32] */;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %30 = less_equal(%25, %26) /* ty=Tensor[(15, ?, 16), bool] */;
  %31 = acos(%29) /* ty=Tensor[(15, 1, 16), float64] */;
  (%30, %31)
}

def @func_3313() -> Tensor[(15, 1, 16), float64] {
  %32 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %32.0
}

def @func_2156() -> (Tensor[(15, 1, 16), float64],) {
  %33 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %34 = %33.0;
  (%34,)
}

def @func_3650() -> Tensor[(15, ?, 16), bool] {
  %35 = @func_2223() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %36 = %35.0;
  %37 = @func_1585() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %38 = %37.0;
  %39 = cast(%38, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %40 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%36, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%41, %42) /* ty=Tensor[(15, ?, 16), bool] */
}

def @func_3835(%var_3801: Tensor[(11, 5, 3), int8], %var_3819: Tensor[(15, 11, 16), float64]) -> (Tensor[(11, 5, 3), int8], Tensor[(15, 11, 16), bool]) {
  %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 5, 3), int8] */, dtype="int8") /* ty=Tensor[(11, 5, 3), int8] */;
  %44 = shape_of(%var_3801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%var_3801, dtype="int8") /* ty=Tensor[(11, 5, 3), int8] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %47 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %48 = %47.1;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %50 = cast(%var_3819, dtype="float32") /* ty=Tensor[(15, 11, 16), float32] */;
  %51 = floor_mod(%49, %50) /* ty=Tensor[(15, 11, 16), float32] */;
  %52 = cast(%var_3819, dtype="bool") /* ty=Tensor[(15, 11, 16), bool] */;
  %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%51, dtype="bool") /* ty=Tensor[(15, 11, 16), bool] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %56 = bitwise_or(%45, %46) /* ty=Tensor[(11, 5, 3), int8] */;
  %57 = less(%54, %55) /* ty=Tensor[(15, 11, 16), bool] */;
  (%56, %57)
}

def @func_7017() -> (Tensor[(15, ?, 16), bool],) {
  %58 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %59 = %58.0;
  (%59,)
}

def @func_5370(%var_5303: Tensor[(16, 6), float32], %var_5313: Tensor[(180, 2), float32], %var_5323: Tensor[(3840), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(96), float32], Tensor[(16, 6), float32], Tensor[(3840), uint64], Tensor[(180, 2), bool]) {
  %60 = cast(%var_5303, dtype="float32") /* ty=Tensor[(16, 6), float32] */;
  %61 = reshape(%60, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %62 = @func_4083(%61) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) */;
  %63 = cast(%var_5323, dtype="uint64") /* ty=Tensor[(3840), uint64] */;
  %64 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(3840), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %65 = cast(meta[relay.Constant][2] /* ty=Tensor[(3840), float64] */, dtype="uint64") /* ty=Tensor[(3840), uint64] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %67 = cast(%var_5313, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
  %68 = cast(meta[relay.Constant][2] /* ty=Tensor[(3840), float64] */, dtype="float64") /* ty=Tensor[(3840), float64] */;
  %69 = reshape(%67, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %70 = reshape(%68, newshape=[3840]) /* ty=Tensor[(3840), float64] */;
  %71 = @func_4839(%69, %70) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(360), float32], Tensor[(3840), float64]) */;
  %72 = %71.2;
  %73 = cast(%72, dtype="bool") /* ty=Tensor[(360), bool] */;
  %74 = shape_of(%var_5313, dtype="int32") /* ty=Tensor[(2), int32] */;
  %75 = cast(%var_5313, dtype="bool") /* ty=Tensor[(180, 2), bool] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %77 = @func_5197() /* ty=Tensor[(15, 1, 16), float64] */;
  %78 = %62.2;
  %79 = right_shift(%65, %66) /* ty=Tensor[(3840), uint64] */;
  %80 = greater_equal(%75, %76) /* ty=Tensor[(180, 2), bool] */;
  (%77, %78, %var_5303, %79, %80)
}

def @func_3230(%var_3198: Tensor[(15, 8, 16), float64], %var_3216: Tensor[(360), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 8, 16), int16], Tensor[(2, 12, 15), float32], Tensor[(360), float32], Tensor[(15, 1, 16), float64]) {
  %81 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %82 = @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %83 = %82.0;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %85 = cast(%var_3198, dtype="float32") /* ty=Tensor[(15, 8, 16), float32] */;
  %86 = floor_mod(%84, %85) /* ty=Tensor[(15, 8, 16), float32] */;
  %87 = cast(%var_3198, dtype="int16") /* ty=Tensor[(15, 8, 16), int16] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="int16") /* ty=Tensor[(15, 8, 16), int16] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %91 = cast(%var_3216, dtype="float32") /* ty=Tensor[(360), float32] */;
  %92 = reshape(%91, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), float32] */;
  %93 = @func_2177(%92) /* ty=(Tensor[(2, 12, 15), float32],) */;
  %94 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %95 = %81.0;
  %96 = left_shift(%89, %90) /* ty=Tensor[(15, 8, 16), int16] */;
  %97 = %93.0;
  %98 = %94.0;
  (%95, %96, %97, %var_3216, %98)
}

def @func_8747(%var_8725: Tensor[(13, 12, 8), float64], %var_8732: Tensor[(13, 12, 8), float64]) -> (Tensor[(13, 12, 8), float64], Tensor[(13, 12, 8), float32], Tensor[(15, ?, 16), bool]) {
  %99 = cast(%var_8725, dtype="float64") /* ty=Tensor[(13, 12, 8), float64] */;
  %100 = cast(%var_8732, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %101 = shape_of(%var_8725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%var_8725, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %104 = @func_5670() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %105 = atan(%99) /* ty=Tensor[(13, 12, 8), float64] */;
  %106 = power(%102, %103) /* ty=Tensor[(13, 12, 8), float32] */;
  %107 = %104.0;
  (%105, %106, %107)
}

def @func_8049() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %108 = @func_4708() /* ty=(Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %109 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
  %110 = %108.1;
  (%109, %110)
}

def @func_9511() -> (Tensor[(15, 1, 16), float64],) {
  %111 = @func_5512() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %112 = %111.0;
  (%112,)
}

def @func_1470() -> Tensor[(15, 1, 16), float64] {
  @func_1417() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_2006() -> (Tensor[(15, 1, 16), float64],) {
  %113 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %114 = %113.2;
  (%114,)
}

def @func_4060(%var_3997: Tensor[(2640), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(9, 5, 6), float32], Tensor[(270), float32], Tensor[(2640), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), float32]) {
  %115 = cast(meta[relay.Constant][3] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %116 = reshape(%115, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), float32] */;
  %117 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %118 = cast(%var_3997, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %119 = reshape(%118, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %120 = @func_3026(%119) /* ty=(Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) */;
  %121 = %120.1;
  %122 = cast(%121, dtype="float32") /* ty=Tensor[(15, 11, 16), float32] */;
  %123 = acos(%122) /* ty=Tensor[(15, 11, 16), float32] */;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %125 = cast(%123, dtype="float32") /* ty=Tensor[(15, 11, 16), float32] */;
  %126 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  %127 = @func_2979(%116) /* ty=Tensor[(9, 5, 6), float32] */;
  %128 = @func_2953() /* ty=Tensor[(15, ?, 16), bool] */;
  %129 = %117.0;
  %130 = rsqrt(%124) /* ty=Tensor[(15, 11, 16), float64] */;
  %131 = atanh(%125) /* ty=Tensor[(15, 11, 16), float32] */;
  (%126, %127, meta[relay.Constant][3] /* ty=Tensor[(270), float32] */, %var_3997, %128, %129, %130, %131)
}

def @func_9149() -> Tensor[(15, 1, 16), float64] {
  %132 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %132.0
}

def @func_2223() -> (Tensor[(15, 1, 16), float64],) {
  %133 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%133,)
}

def @main(%var_9845: Tensor[(396), float64]) -> (Tensor[(3, 11, 12), float64], Tensor[(396), float64], Tensor[(15, 11, 16), int64]) {
  %134 = cast(%var_9845, dtype="float64") /* ty=Tensor[(396), float64] */;
  %135 = reshape(%134, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %136 = @func_7690(%135) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 11, 12), float64], Tensor[(3, 11, 12), float32]) */;
  %137 = @func_4685() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %138 = %137.0;
  %139 = cast(%138, dtype="int64") /* ty=Tensor[(15, 1, 16), int64] */;
  %140 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 11, 16), float64] */, dtype="int64") /* ty=Tensor[(15, 11, 16), int64] */;
  %141 = %136.1;
  %142 = subtract(%139, %140) /* ty=Tensor[(15, 11, 16), int64] */;
  (%141, %var_9845, %142)
}

def @func_3060() -> Tensor[(15, 1, 16), float64] {
  %143 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %143.0
}

def @func_7465() -> (Tensor[(15, ?, 16), bool],) {
  %144 = @func_6486() /* ty=Tensor[(15, ?, 16), bool] */;
  (%144,)
}

def @func_2510(%var_2504: Tensor[(12, 12, 16), float64]) -> Tensor[(12, 12, 16), float64] {
  %145 = cast(%var_2504, dtype="float64") /* ty=Tensor[(12, 12, 16), float64] */;
  asinh(%145) /* ty=Tensor[(12, 12, 16), float64] */
}

def @func_4783() -> (Tensor[(15, ?, 16), bool],) {
  %146 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %147 = %146.0;
  (%147,)
}

def @func_7807(%var_7785: Tensor[(300, 12), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(300, 12), float64]) {
  %148 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %149 = @func_6139() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %150 = @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %151 = cast(%var_7785, dtype="float64") /* ty=Tensor[(300, 12), float64] */;
  %152 = reshape(%151, newshape=[15, 15, 16]) /* ty=Tensor[(15, 15, 16), float64] */;
  %153 = @func_1195(%152) /* ty=(Tensor[(15, 15, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %154 = @func_6255() /* ty=Tensor[(15, 1, 16), float64] */;
  %155 = @func_4895() /* ty=Tensor[(15, ?, 16), bool] */;
  %156 = %148.0;
  %157 = %149.3;
  %158 = %150.0;
  %159 = %153.2;
  (%154, %155, %156, %157, %158, %159, %var_7785)
}

def @func_8008(%var_8001: Tensor[(15, 7, 16), float64]) -> (Tensor[(15, 7, 16), uint8],) {
  %160 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %161 = %160.0;
  %162 = cast(%161, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %163 = cast(%var_8001, dtype="uint8") /* ty=Tensor[(15, 7, 16), uint8] */;
  %164 = bitwise_or(%162, %163) /* ty=Tensor[(15, 7, 16), uint8] */;
  (%164,)
}

def @func_4685() -> (Tensor[(15, 1, 16), float64],) {
  %165 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %166 = %165.0;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %168 = erf(%167) /* ty=Tensor[(15, 1, 16), float64] */;
  (%168,)
}

def @func_7324() -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), uint8], Tensor[(15, 1, 16), float64]) {
  %169 = @func_6139() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %170 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %171 = %170.1;
  %172 = @func_2006() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %173 = %172.0;
  %174 = cast(%173, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %175 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%171, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %178 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %179 = %169.0;
  %180 = minimum(%176, %177) /* ty=Tensor[(15, ?, 16), uint8] */;
  %181 = %178.0;
  (%179, %180, %181)
}

def @func_8795() -> (Tensor[(15, 1, 16), float64],) {
  %182 = @func_6255() /* ty=Tensor[(15, 1, 16), float64] */;
  (%182,)
}

def @func_1159() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %183 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %184 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %185 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %186 = %183.1;
  %187 = %184.1;
  %188 = %185.1;
  (%186, %187, %188)
}

def @func_3153(%var_3125: Tensor[(2304), float64]) -> (Tensor[(8, 14, 7), float32], Tensor[(15, 1, 16), float64], Tensor[(12, 12, 16), float64], Tensor[(2304), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %189 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 7), float32] */;
  %190 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %191 = cast(%var_3125, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %192 = reshape(%191, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float64] */;
  %193 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %194 = @func_2593() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %195 = sinh(%189) /* ty=Tensor[(8, 14, 7), float32] */;
  %196 = %190.0;
  %197 = @func_2510(%192) /* ty=Tensor[(12, 12, 16), float64] */;
  %198 = %193.0;
  %199 = %194.1;
  (%195, %196, %197, %var_3125, %198, %199)
}

def @func_8409(%var_8354: uint64, %var_8355: Tensor[(3, 9, 4), uint64], %var_8362: Tensor[(3, 9, 4), bool]) -> (Tensor[(3, 9, 4), int64], Tensor[(15, 1, 16), float64]) {
  %200 = cast(%var_8354, dtype="bool") /* ty=bool */;
  %201 = cast(%var_8355, dtype="bool") /* ty=Tensor[(3, 9, 4), bool] */;
  %202 = greater(%200, %201) /* ty=Tensor[(3, 9, 4), bool] */;
  %203 = cast(%var_8362, dtype="int64") /* ty=Tensor[(3, 9, 4), int64] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%202, dtype="int64") /* ty=Tensor[(3, 9, 4), int64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %207 = logical_xor(%205, %206) /* ty=Tensor[(3, 9, 4), int64] */;
  %208 = @func_6845() /* ty=Tensor[(15, 1, 16), float64] */;
  (%207, %208)
}

def @func_5119(%var_5084: Tensor[(96), float32], %var_5105: Tensor[(360), float32]) -> (Tensor[(15, ?, 16), bool], Tensor[(12, 1, 8), float32], Tensor[(96), float32], Tensor[(15, ?, 16), bool], Tensor[(360), float32], Tensor[(1920), float64], Tensor[(360), float32]) {
  %209 = cast(%var_5084, dtype="float32") /* ty=Tensor[(96), float32] */;
  %210 = reshape(%209, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %211 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %212 = cast(meta[relay.Constant][6] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %213 = cast(%var_5105, dtype="float32") /* ty=Tensor[(360), float32] */;
  %214 = reshape(%212, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float64] */;
  %215 = reshape(%213, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %216 = @func_3230(%214, %215) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 8, 16), int16], Tensor[(2, 12, 15), float32], Tensor[(360), float32], Tensor[(15, 1, 16), float64]) */;
  %217 = @func_4895() /* ty=Tensor[(15, ?, 16), bool] */;
  %218 = @func_3105(%210) /* ty=Tensor[(12, 1, 8), float32] */;
  %219 = %211.0;
  %220 = %216.3;
  (%217, %218, %var_5084, %219, %220, meta[relay.Constant][6] /* ty=Tensor[(1920), float64] */, %var_5105)
}

def @func_9252() -> (Tensor[(15, ?, 16), bool],) {
  %221 = @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %222 = %221.0;
  (%222,)
}

def @func_3959() -> Tensor[(15, 1, 16), float64] {
  %223 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %223.2
}

def @func_6695() -> (Tensor[(15, 1, 16), float64],) {
  %224 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %225 = %224.0;
  (%225,)
}

def @func_1235(%var_1218: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) {
  %226 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %227 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %228 = %227.1;
  %229 = cast(%var_1218, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %233 = less(%231, %232) /* ty=Tensor[(15, ?, 16), bool] */;
  %234 = cast(%var_1218, dtype="int8") /* ty=Tensor[(15, 1, 16), int8] */;
  %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%233, dtype="int8") /* ty=Tensor[(15, ?, 16), int8] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %238 = %226.1;
  %239 = bitwise_and(%236, %237) /* ty=Tensor[(15, ?, 16), int8] */;
  (%238, %239)
}

def @func_3026(%var_2989: Tensor[(15, 11, 16), float64]) -> (Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) {
  %240 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %241 = %240.0;
  %242 = cast(%241, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %243 = cast(%var_2989, dtype="uint16") /* ty=Tensor[(15, 11, 16), uint16] */;
  %244 = minimum(%242, %243) /* ty=Tensor[(15, 11, 16), uint16] */;
  %245 = cast(%244, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %246 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %247 = %246.0;
  %248 = cast(%247, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %249 = cast(%var_2989, dtype="bool") /* ty=Tensor[(15, 11, 16), bool] */;
  %250 = log(%245) /* ty=Tensor[(15, 11, 16), float64] */;
  %251 = logical_and(%248, %249) /* ty=Tensor[(15, 11, 16), bool] */;
  (%250, %251)
}

def @func_2426(%var_2315: Tensor[(360), float32], %var_2368: Tensor[(15, 16, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(15, ?, 16), bool]) {
  %252 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %253 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %254 = @func_2006() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %255 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %256 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %257 = cast(%var_2315, dtype="float32") /* ty=Tensor[(360), float32] */;
  %258 = reshape(%257, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), float32] */;
  %259 = @func_2177(%258) /* ty=(Tensor[(2, 12, 15), float32],) */;
  %260 = %259.0;
  %261 = cast(%var_2315, dtype="float64") /* ty=Tensor[(360), float64] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%260, dtype="float64") /* ty=Tensor[(2, 12, 15), float64] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %265 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %266 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %267 = cast(%266, dtype="uint64") /* ty=Tensor[(15, 1, 16), uint64] */;
  %268 = cast(%var_2368, dtype="uint64") /* ty=Tensor[(15, 16, 16), uint64] */;
  %269 = bitwise_xor(%267, %268) /* ty=Tensor[(15, 16, 16), uint64] */;
  %270 = cast(%269, dtype="float32") /* ty=Tensor[(15, 16, 16), float32] */;
  %271 = acos(%270) /* ty=Tensor[(15, 16, 16), float32] */;
  %272 = @func_2076() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %273 = %272.0;
  %274 = cast(%271, dtype="uint16") /* ty=Tensor[(15, 16, 16), uint16] */;
  %275 = cast(%273, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %276 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %277 = %252.1;
  %278 = %253.1;
  %279 = %254.0;
  %280 = %255.0;
  %281 = %256.1;
  %282 = floor_divide(%263, %264) /* ty=Tensor[(2, 12, 15), float64] */;
  %283 = %265.0;
  %284 = bitwise_and(%274, %275) /* ty=Tensor[(15, 16, 16), uint16] */;
  %285 = %276.0;
  (%277, %278, %279, %280, %281, %282, %283, %284, %285)
}

def @func_9676() -> (Tensor[(15, 1, 16), float64],) {
  %286 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
  (%286,)
}

def @func_1707() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %287 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %288 = cast(%287, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %289 = reshape(%288, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %290 = @func_1235(%289) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) */;
  %291 = %290.0;
  (%287, %291)
}

def @func_5970(%var_5942: Tensor[(96), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) {
  %292 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %293 = cast(%var_5942, dtype="float32") /* ty=Tensor[(96), float32] */;
  %294 = reshape(%293, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %295 = %292.0;
  %296 = @func_3105(%294) /* ty=Tensor[(12, 1, 8), float32] */;
  (%295, %296, %var_5942)
}

def @func_4083(%var_4074: Tensor[(96), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) {
  %297 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %298 = cast(%var_4074, dtype="float32") /* ty=Tensor[(96), float32] */;
  %299 = reshape(%298, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %300 = %297.2;
  %301 = @func_3105(%299) /* ty=Tensor[(12, 1, 8), float32] */;
  (%300, %301, %var_4074)
}

def @func_8521() -> (Tensor[(10, 10, 9), float32],) {
  %302 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(10, 10, 9), float32] */;
  %303 = log(%302) /* ty=Tensor[(10, 10, 9), float32] */;
  (%303,)
}

def @func_4107() -> (Tensor[(15, ?, 16), bool],) {
  %304 = @func_2953() /* ty=Tensor[(15, ?, 16), bool] */;
  (%304,)
}

def @func_7393() -> (Tensor[(15, 1, 16), float64],) {
  %305 = @func_6674() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64]) */;
  %306 = %305.0;
  (%306,)
}

def @func_3678(%var_3655: Tensor[(8, 7, 13), float64], %var_3656: Tensor[(8, 7, 13), float64]) -> (Tensor[(8, 7, 13), bool],) {
  %307 = cast(%var_3656, dtype="bool") /* ty=Tensor[(8, 7, 13), bool] */;
  %308 = shape_of(%var_3655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%var_3655, dtype="bool") /* ty=Tensor[(8, 7, 13), bool] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %311 = less(%309, %310) /* ty=Tensor[(8, 7, 13), bool] */;
  (%311,)
}

def @func_1650() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %312 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %313 = %312.0;
  %314 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%313, %314)
}

def @func_4438(%var_4427: Tensor[(15, 3, 16), bool]) -> (Tensor[(15, 3, 16), float32], Tensor[(15, ?, 16), bool]) {
  %315 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(15, ?, 16), float32] */;
  %318 = cast(%var_4427, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
  %319 = floor_mod(%317, %318) /* ty=Tensor[(15, 3, 16), float32] */;
  %320 = @func_2953() /* ty=Tensor[(15, ?, 16), bool] */;
  (%319, %320)
}

def @func_6227() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %321 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %322 = @func_2034() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %323 = %321.0;
  %324 = %322.2;
  (%323, %324)
}

def @func_2632() -> (Tensor[(15, 1, 16), float64],) {
  %325 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %326 = %325.0;
  (%326,)
}

def @func_3366() -> (Tensor[(3, 6, 16), float64],) {
  %327 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 6, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %328 = log10(%327) /* ty=Tensor[(3, 6, 16), float64] */;
  (%328,)
}

def @func_7106() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(728), float64]) {
  %329 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %330 = cast(meta[relay.Constant][9] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %331 = reshape(%330, newshape=[728]) /* ty=Tensor[(728), float64] */;
  %332 = @func_4805(%331) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) */;
  %333 = @func_3959() /* ty=Tensor[(15, 1, 16), float64] */;
  %334 = %329.0;
  %335 = %332.0;
  (%333, %334, %335, meta[relay.Constant][9] /* ty=Tensor[(728), float64] */)
}

def @func_9335(%var_9314: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), float32], Tensor[(15, 1, 16), float64]) {
  %336 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %337 = %336.0;
  %338 = cast(%337, dtype="uint64") /* ty=Tensor[(15, 1, 16), uint64] */;
  %339 = cast(%var_9314, dtype="uint64") /* ty=Tensor[(15, 6, 16), uint64] */;
  %340 = logical_xor(%338, %339) /* ty=Tensor[(15, 6, 16), uint64] */;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(15, 6, 16), float32] */;
  %342 = @func_2223() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %343 = rsqrt(%341) /* ty=Tensor[(15, 6, 16), float32] */;
  %344 = %342.0;
  (%343, %344)
}

def @func_2034() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %345 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %346 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %347 = cast(%346, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %348 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %349 = %345.0;
  %350 = log(%347) /* ty=Tensor[(15, 1, 16), float64] */;
  %351 = %348.1;
  (%349, %350, %351)
}

def @func_6660() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %352 = @func_5512() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %353 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %354 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %355 = %352.1;
  %356 = %353.0;
  %357 = %354.1;
  (%355, %356, %357)
}

def @func_8251(%var_8201: Tensor[(1, 72), uint64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 72), float32]) {
  %358 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %359 = cast(%var_8201, dtype="uint64") /* ty=Tensor[(1, 72), uint64] */;
  %360 = reshape(%359, newshape=[3, 3, 8]) /* ty=Tensor[(3, 3, 8), uint64] */;
  %361 = @func_3292(%360) /* ty=(Tensor[(3, 3, 8), uint64], Tensor[(15, 1, 16), float64]) */;
  %362 = cast(%var_8201, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %363 = %358.0;
  %364 = %361.1;
  %365 = exp(%362) /* ty=Tensor[(1, 72), float32] */;
  (%363, %364, %365)
}

def @func_7901(%var_7863: Tensor[(2640), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64], Tensor[(2640), float64], Tensor[(15, 1, 16), float64], Tensor[(10, 6, 6), bool]) {
  %366 = cast(%var_7863, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %367 = reshape(%366, newshape=[132, 20]) /* ty=Tensor[(132, 20), float64] */;
  %368 = @func_4752(%367) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64]) */;
  %369 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 6, 6), int64] */, dtype="int64") /* ty=Tensor[(10, 6, 6), int64] */;
  %370 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(10, 6, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 6, 6), int64] */, dtype="int64") /* ty=Tensor[(10, 6, 6), int64] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %373 = subtract(%371, %372) /* ty=Tensor[(10, 6, 6), int64] */;
  %374 = cast(%373, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
  %375 = cos(%374) /* ty=Tensor[(10, 6, 6), float32] */;
  %376 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 6, 6), int64] */, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%375, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %380 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %381 = %368.1;
  %382 = @func_6845() /* ty=Tensor[(15, 1, 16), float64] */;
  %383 = less(%378, %379) /* ty=Tensor[(10, 6, 6), bool] */;
  (%380, %381, %var_7863, %382, %383)
}

def @func_2593() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %384 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %385 = cast(%384, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %386 = @func_1524() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %387 = log2(%385) /* ty=Tensor[(15, 1, 16), float64] */;
  %388 = %386.0;
  (%387, %388)
}

def @func_3105(%var_3088: Tensor[(12, 1, 8), float32]) -> Tensor[(12, 1, 8), float32] {
  %389 = cast(%var_3088, dtype="float32") /* ty=Tensor[(12, 1, 8), float32] */;
  tan(%389) /* ty=Tensor[(12, 1, 8), float32] */
}

def @func_8136(%var_8093: Tensor[(15, 13, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 13, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
  %390 = @func_8049() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %391 = @func_2034() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %392 = @func_7334() /* ty=Tensor[(15, 1, 16), float64] */;
  %393 = cast(%392, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %394 = cast(%var_8093, dtype="bool") /* ty=Tensor[(15, 13, 16), bool] */;
  %395 = @func_1872() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %396 = @func_2593() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %397 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %398 = %390.0;
  %399 = %391.1;
  %400 = equal(%393, %394) /* ty=Tensor[(15, 13, 16), bool] */;
  %401 = %395.3;
  %402 = %396.0;
  %403 = %397.0;
  (%398, %399, %400, %401, %402, %403)
}

def @func_6845() -> Tensor[(15, 1, 16), float64] {
  @func_1470() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_5464(%var_5457: Tensor[(15, 11, 6), float64], %var_5458: Tensor[(15, 11, 6), float64]) -> Tensor[(15, 11, 6), bool] {
  %404 = cast(%var_5458, dtype="bool") /* ty=Tensor[(15, 11, 6), bool] */;
  %405 = shape_of(%var_5457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%var_5457, dtype="bool") /* ty=Tensor[(15, 11, 6), bool] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%406, %407) /* ty=Tensor[(15, 11, 6), bool] */
}

def @func_6196(%var_6174: Tensor[(15, 1, 16), float64], %var_6181: Tensor[(1920), float64]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(15, 1, 16), float64]) {
  %408 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %409 = %408.0;
  %410 = cast(%var_6174, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %414 = cast(%var_6181, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %415 = reshape(%414, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %416 = @func_4997(%415) /* ty=(Tensor[(3, 6, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(360, 1), float64]) */;
  %417 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %418 = logical_and(%412, %413) /* ty=Tensor[(15, ?, 16), bool] */;
  %419 = %416.1;
  %420 = %417.0;
  (%418, %419, %var_6181, %420)
}

def @func_2902() -> (Tensor[(15, ?, 16), bool],) {
  %421 = @func_2699() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %422 = %421.0;
  %423 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %424 = %423.0;
  %425 = cast(%424, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %426 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%422, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %429 = equal(%427, %428) /* ty=Tensor[(15, ?, 16), bool] */;
  (%429,)
}

def @func_3462() -> (Tensor[(15, 1, 16), float64],) {
  %430 = @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %431 = %430.0;
  (%431,)
}

def @func_6836() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %432 = @func_5538() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) */;
  %433 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %434 = %432.1;
  %435 = %433.1;
  (%434, %435)
}

def @func_7334() -> Tensor[(15, 1, 16), float64] {
  %436 = @func_6139() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %436.3
}

def @func_4708() -> (Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64]) {
  %437 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %438 = @func_3606() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %439 = %437.0;
  %440 = %438.2;
  (%439, %440)
}

def @func_3606() -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
  %441 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %442 = @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %443 = @func_3462() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %444 = %441.0;
  %445 = %442.0;
  %446 = %443.0;
  (%444, %445, %446)
}

def @func_2177(%var_2173: Tensor[(2, 12, 15), float32]) -> (Tensor[(2, 12, 15), float32],) {
  %447 = cast(%var_2173, dtype="float32") /* ty=Tensor[(2, 12, 15), float32] */;
  %448 = asinh(%447) /* ty=Tensor[(2, 12, 15), float32] */;
  (%448,)
}

def @func_3354() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %449 = @func_2593() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %450 = @func_1274() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %451 = %449.0;
  %452 = %450.0;
  (%451, %452)
}

def @func_3047() -> Tensor[(15, 1, 16), float64] {
  %453 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %453.0
}

def @func_7690(%var_7633: Tensor[(396), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 11, 12), float64], Tensor[(3, 11, 12), float32]) {
  %454 = cast(%var_7633, dtype="float64") /* ty=Tensor[(396), float64] */;
  %455 = reshape(%454, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float64] */;
  %456 = @func_3242(%455) /* ty=Tensor[(3, 11, 12), float64] */;
  %457 = cast(%var_7633, dtype="float64") /* ty=Tensor[(396), float64] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="float64") /* ty=Tensor[(3, 11, 12), float64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %461 = cast(%456, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
  %462 = @func_6255() /* ty=Tensor[(15, 1, 16), float64] */;
  %463 = divide(%459, %460) /* ty=Tensor[(3, 11, 12), float64] */;
  %464 = exp(%461) /* ty=Tensor[(3, 11, 12), float32] */;
  (%462, %463, %464)
}

def @func_4805(%var_4803: Tensor[(728), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) {
  %465 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %466 = cast(%var_4803, dtype="float64") /* ty=Tensor[(728), float64] */;
  %467 = cast(%var_4803, dtype="float64") /* ty=Tensor[(728), float64] */;
  %468 = reshape(%466, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float64] */;
  %469 = reshape(%467, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float64] */;
  %470 = @func_3678(%468, %469) /* ty=(Tensor[(8, 7, 13), bool],) */;
  %471 = @func_3496() /* ty=Tensor[(15, 1, 16), float64] */;
  %472 = %465.0;
  %473 = %470.0;
  (%471, %472, %473, %var_4803)
}

def @func_1872() -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %474 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %475 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %476 = @func_1524() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %477 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %478 = %474.0;
  %479 = %475.1;
  %480 = %476.0;
  %481 = %477.0;
  (%478, %479, %480, %481)
}

def @func_7156() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %482 = @func_2593() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %483 = %482.1;
  %484 = @func_3047() /* ty=Tensor[(15, 1, 16), float64] */;
  %485 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%483, %484, %485)
}

def @func_4597() -> Tensor[(15, 1, 16), float64] {
  %486 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %486.0
}

def @func_2869() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
  %487 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %488 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %489 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %490 = %489.0;
  %491 = cast(%490, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %492 = exp(%491) /* ty=Tensor[(15, 1, 16), float64] */;
  %493 = cast(%490, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%492, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %497 = %487.1;
  %498 = %488.1;
  %499 = not_equal(%495, %496) /* ty=Tensor[(15, ?, 16), bool] */;
  (%497, %498, %499)
}

def @func_4198(%var_4190: Tensor[(15, 12, 16), float64]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, 12, 16), bool]) {
  %500 = @func_3354() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %501 = %500.1;
  %502 = cast(%501, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %503 = cast(%var_4190, dtype="bool") /* ty=Tensor[(15, 12, 16), bool] */;
  %504 = @func_2953() /* ty=Tensor[(15, ?, 16), bool] */;
  %505 = less_equal(%502, %503) /* ty=Tensor[(15, 12, 16), bool] */;
  (%504, %505)
}

def @func_8717(%var_8609: Tensor[(288), float64], %var_8661: Tensor[(15, 7, 16), bool], %var_8678: Tensor[(700), float64], %var_8711: Tensor[(72), uint64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(288), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 7, 16), float32], Tensor[(15, 1, 16), float64], Tensor[(700), float64], Tensor[(15, 7, 16), float32], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(72), uint64], Tensor[(15, ?, 16), bool]) {
  %506 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %507 = cast(%var_8609, dtype="float64") /* ty=Tensor[(288), float64] */;
  %508 = reshape(%507, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float64] */;
  %509 = @func_6933(%508) /* ty=(Tensor[(3, 6, 16), float64],) */;
  %510 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %511 = @func_1872() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %512 = @func_4895() /* ty=Tensor[(15, ?, 16), bool] */;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(15, ?, 16), float32] */;
  %514 = cast(%var_8661, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %515 = subtract(%513, %514) /* ty=Tensor[(15, 7, 16), float32] */;
  %516 = cast(%515, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %517 = cast(%var_8678, dtype="float64") /* ty=Tensor[(700), float64] */;
  %518 = reshape(%517, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), float64] */;
  %519 = @func_5583(%518) /* ty=(Tensor[(14, 5, 10), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %520 = cast(%515, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %521 = @func_5858() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %522 = @func_6424() /* ty=(Tensor[(15, 4, 16), bool], Tensor[(15, ?, 16), int8], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), float64]) */;
  %523 = cast(%var_8711, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %524 = reshape(%523, newshape=[1, 72]) /* ty=Tensor[(1, 72), uint64] */;
  %525 = @func_8251(%524) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 72), float32]) */;
  %526 = @func_7017() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %527 = %506.0;
  %528 = %509.0;
  %529 = %510.0;
  %530 = %511.0;
  %531 = asin(%516) /* ty=Tensor[(15, 7, 16), float32] */;
  %532 = %519.1;
  %533 = sigmoid(%520) /* ty=Tensor[(15, 7, 16), float32] */;
  %534 = %521.0;
  %535 = %522.0;
  %536 = %525.1;
  %537 = %526.0;
  (%527, %528, %var_8609, %529, %530, %531, %532, %var_8678, %533, %534, %535, %536, %var_8711, %537)
}

def @func_5858() -> (Tensor[(15, 1, 16), float64],) {
  %538 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
  (%538,)
}

def @func_3292(%var_3280: Tensor[(3, 3, 8), uint64]) -> (Tensor[(3, 3, 8), uint64], Tensor[(15, 1, 16), float64]) {
  %539 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 8), uint64] */, dtype="uint64") /* ty=Tensor[(3, 3, 8), uint64] */;
  %540 = shape_of(%var_3280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%var_3280, dtype="uint64") /* ty=Tensor[(3, 3, 8), uint64] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %543 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %544 = bitwise_and(%541, %542) /* ty=Tensor[(3, 3, 8), uint64] */;
  %545 = %543.2;
  (%544, %545)
}

def @func_3872(%var_3855: Tensor[(7, 3, 4), float32], %var_3856: Tensor[(7, 3, 4), float32]) -> (Tensor[(7, 3, 4), float64], Tensor[(15, 1, 16), float64]) {
  %546 = cast(%var_3856, dtype="bool") /* ty=Tensor[(7, 3, 4), bool] */;
  %547 = shape_of(%var_3855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%var_3855, dtype="bool") /* ty=Tensor[(7, 3, 4), bool] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %550 = equal(%548, %549) /* ty=Tensor[(7, 3, 4), bool] */;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(7, 3, 4), float64] */;
  %552 = @func_2869() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) */;
  %553 = exp(%551) /* ty=Tensor[(7, 3, 4), float64] */;
  %554 = %552.0;
  (%553, %554)
}

def @func_6139() -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %555 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %556 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 60), bool] */, dtype="bool") /* ty=Tensor[(12, 60), bool] */;
  %557 = reshape(%556, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), bool] */;
  %558 = @func_4438(%557) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(15, ?, 16), bool]) */;
  %559 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %560 = @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %561 = %555.0;
  %562 = %558.1;
  %563 = %559.0;
  %564 = %560.0;
  %565 = @func_3313() /* ty=Tensor[(15, 1, 16), float64] */;
  (%561, %562, meta[relay.Constant][13] /* ty=Tensor[(12, 60), bool] */, %563, %564, %565)
}

def @func_7578(%var_7567: Tensor[(990), float64]) -> (Tensor[(15, 11, 6), bool], Tensor[(990), float64], Tensor[(15, ?, 16), uint8]) {
  %566 = cast(%var_7567, dtype="float64") /* ty=Tensor[(990), float64] */;
  %567 = cast(%var_7567, dtype="float64") /* ty=Tensor[(990), float64] */;
  %568 = reshape(%566, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), float64] */;
  %569 = reshape(%567, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), float64] */;
  %570 = @func_1524() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %571 = %570.0;
  %572 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %573 = %572.1;
  %574 = cast(%573, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %575 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%571, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %578 = @func_5464(%568, %569) /* ty=Tensor[(15, 11, 6), bool] */;
  %579 = maximum(%576, %577) /* ty=Tensor[(15, ?, 16), uint8] */;
  (%578, %var_7567, %579)
}

def @func_3496() -> Tensor[(15, 1, 16), float64] {
  %580 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %580.0
}

def @func_4604() -> Tensor[(15, 1, 16), float64] {
  %581 = @func_1585() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %581.0
}

def @func_6546() -> (Tensor[(15, 1, 16), float64],) {
  %582 = @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %583 = %582.0;
  (%583,)
}

def @func_8975() -> (Tensor[(15, ?, 16), float32],) {
  %584 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %585 = %584.0;
  %586 = @func_5858() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %587 = %586.0;
  %588 = cast(%587, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %589 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%585, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %592 = floor_mod(%590, %591) /* ty=Tensor[(15, ?, 16), float32] */;
  (%592,)
}

def @func_5777(%var_5772: Tensor[(15, 4, 16), float64]) -> Tensor[(15, 4, 16), int64] {
  %593 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %594 = cast(%593, dtype="int64") /* ty=Tensor[(15, 1, 16), int64] */;
  %595 = cast(%var_5772, dtype="int64") /* ty=Tensor[(15, 4, 16), int64] */;
  subtract(%594, %595) /* ty=Tensor[(15, 4, 16), int64] */
}

def @func_2788() -> (Tensor[(15, 1, 16), float64],) {
  %596 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %597 = %596.0;
  (%597,)
}

def @func_4951() -> (Tensor[(15, ?, 16), bool],) {
  %598 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %599 = %598.0;
  (%599,)
}

def @func_2979(%var_2969: Tensor[(9, 5, 6), float32]) -> Tensor[(9, 5, 6), float32] {
  %600 = cast(%var_2969, dtype="float32") /* ty=Tensor[(9, 5, 6), float32] */;
  %601 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(9, 5, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 5, 6), float32] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%602, %603) /* ty=Tensor[(9, 5, 6), float32] */
}

def @func_6042(%var_5995: Tensor[(2, 14, 12), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(2, 14, 12), uint32]) {
  %604 = cast(%var_5995, dtype="float32") /* ty=Tensor[(2, 14, 12), float32] */;
  %605 = atan(%604) /* ty=Tensor[(2, 14, 12), float32] */;
  %606 = cast(%var_5995, dtype="float64") /* ty=Tensor[(2, 14, 12), float64] */;
  %607 = cosh(%606) /* ty=Tensor[(2, 14, 12), float64] */;
  %608 = cast(%607, dtype="uint32") /* ty=Tensor[(2, 14, 12), uint32] */;
  %609 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%605, dtype="uint32") /* ty=Tensor[(2, 14, 12), uint32] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %612 = @func_4604() /* ty=Tensor[(15, 1, 16), float64] */;
  %613 = right_shift(%610, %611) /* ty=Tensor[(2, 14, 12), uint32] */;
  (%612, %613)
}

def @func_4752(%var_4741: Tensor[(132, 20), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64]) {
  %614 = @func_4685() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %615 = cast(%var_4741, dtype="float64") /* ty=Tensor[(132, 20), float64] */;
  %616 = reshape(%615, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %617 = @func_3026(%616) /* ty=(Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) */;
  %618 = %617.0;
  %619 = cast(%618, dtype="uint64") /* ty=Tensor[(15, 11, 16), uint64] */;
  %620 = shape_of(%var_4741, dtype="int32") /* ty=Tensor[(2), int32] */;
  %621 = cast(%var_4741, dtype="uint64") /* ty=Tensor[(132, 20), uint64] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %623 = %614.0;
  %624 = bitwise_or(%621, %622) /* ty=Tensor[(132, 20), uint64] */;
  (%623, %624)
}

def @func_6355() -> Tensor[(15, 1, 16), float64] {
  %625 = @func_1274() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %625.0
}

def @func_1417() -> Tensor[(15, 1, 16), float64] {
  %626 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %626.0
}

def @func_5583(%var_5565: Tensor[(14, 5, 10), float64]) -> (Tensor[(14, 5, 10), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %627 = cast(%var_5565, dtype="float64") /* ty=Tensor[(14, 5, 10), float64] */;
  %628 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %629 = @func_3462() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %630 = log2(%627) /* ty=Tensor[(14, 5, 10), float64] */;
  %631 = %628.0;
  %632 = %629.0;
  (%630, %631, %632)
}

def @func_6621() -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(16, 6), float32]) {
  %633 = @func_5858() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %634 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 6), float32] */;
  %635 = reshape(%634, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %636 = %633.0;
  %637 = @func_3105(%635) /* ty=Tensor[(12, 1, 8), float32] */;
  (%636, %637, meta[relay.Constant][15] /* ty=Tensor[(16, 6), float32] */)
}

def @func_1195(%var_1180: Tensor[(15, 15, 16), float64]) -> (Tensor[(15, 15, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %638 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %639 = %638.1;
  %640 = cast(%639, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %641 = cast(%var_1180, dtype="bool") /* ty=Tensor[(15, 15, 16), bool] */;
  %642 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %643 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %644 = greater(%640, %641) /* ty=Tensor[(15, 15, 16), bool] */;
  %645 = %642.2;
  %646 = %643.0;
  (%644, %645, %646)
}

def @func_6458(%var_6446: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), int16], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
  %647 = @func_4604() /* ty=Tensor[(15, 1, 16), float64] */;
  %648 = cast(%647, dtype="int16") /* ty=Tensor[(15, 1, 16), int16] */;
  %649 = cast(%var_6446, dtype="int16") /* ty=Tensor[(15, 6, 16), int16] */;
  %650 = @func_4951() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %651 = left_shift(%648, %649) /* ty=Tensor[(15, 6, 16), int16] */;
  %652 = %650.0;
  %653 = @func_3496() /* ty=Tensor[(15, 1, 16), float64] */;
  (%651, %652, %653)
}

def @func_1608() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %654 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %655 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %656 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %657 = %654.0;
  %658 = %655.0;
  %659 = %656.0;
  (%657, %658, %659)
}

def @func_9731(%var_9715: Tensor[(4, 9, 3), float64]) -> (Tensor[(4, 9, 3), float64],) {
  %660 = cast(%var_9715, dtype="float64") /* ty=Tensor[(4, 9, 3), float64] */;
  %661 = sigmoid(%660) /* ty=Tensor[(4, 9, 3), float64] */;
  (%661,)
}

def @func_1381() -> (Tensor[(15, 1, 16), float64],) {
  %662 = @func_1274() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %663 = %662.2;
  (%663,)
}

def @func_6255() -> Tensor[(15, 1, 16), float64] {
  %664 = @func_5824() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), float64]) */;
  %664.0
}

def @func_9622() -> (Tensor[(15, 16, 16), float64], Tensor[(2400), float64], Tensor[(15, 16, 16), float32], Tensor[(15, ?, 16), bool], Tensor[(2640), float64], Tensor[(2640), float64], Tensor[(15, ?, 16), uint8], Tensor[(990), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 10, 16), float64], Tensor[(15, 11, 16), bool], Tensor[(165), int8], Tensor[(15, 11, 16), bool], Tensor[(10, 10, 9), float32]) {
  %665 = @func_6845() /* ty=Tensor[(15, 1, 16), float64] */;
  %666 = cast(%665, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %667 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 16, 16), float64] */, dtype="bool") /* ty=Tensor[(15, 16, 16), bool] */;
  %668 = logical_or(%666, %667) /* ty=Tensor[(15, 16, 16), bool] */;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(15, 16, 16), float64] */;
  %670 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 16, 16), float64] */, dtype="float32") /* ty=Tensor[(15, 16, 16), float32] */;
  %671 = @func_9252() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %672 = cast(meta[relay.Constant][18] /* ty=Tensor[(2640), float64] */, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %673 = reshape(%672, newshape=[2640]) /* ty=Tensor[(2640), float64] */;
  %674 = @func_7901(%673) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64], Tensor[(2640), float64], Tensor[(15, 1, 16), float64], Tensor[(10, 6, 6), bool]) */;
  %675 = cast(meta[relay.Constant][19] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %676 = reshape(%675, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %677 = @func_7578(%676) /* ty=(Tensor[(15, 11, 6), bool], Tensor[(990), float64], Tensor[(15, ?, 16), uint8]) */;
  %678 = cast(meta[relay.Constant][17] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %679 = reshape(%678, newshape=[15, 10, 16]) /* ty=Tensor[(15, 10, 16), float64] */;
  %680 = @func_7050(%679) /* ty=Tensor[(15, 10, 16), float32] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %682 = cast(meta[relay.Constant][20] /* ty=Tensor[(165), int8] */, dtype="int8") /* ty=Tensor[(165), int8] */;
  %683 = cast(meta[relay.Constant][18] /* ty=Tensor[(2640), float64] */, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %684 = reshape(%682, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), int8] */;
  %685 = reshape(%683, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %686 = @func_3835(%684, %685) /* ty=(Tensor[(11, 5, 3), int8], Tensor[(15, 11, 16), bool]) */;
  %687 = cast(meta[relay.Constant][20] /* ty=Tensor[(165), int8] */, dtype="int8") /* ty=Tensor[(165), int8] */;
  %688 = %686.1;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %690 = reshape(%687, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), int8] */;
  %691 = reshape(%689, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %692 = @func_3835(%690, %691) /* ty=(Tensor[(11, 5, 3), int8], Tensor[(15, 11, 16), bool]) */;
  %693 = @func_8521() /* ty=(Tensor[(10, 10, 9), float32],) */;
  %694 = asin(%669) /* ty=Tensor[(15, 16, 16), float64] */;
  %695 = rsqrt(%670) /* ty=Tensor[(15, 16, 16), float32] */;
  %696 = %671.0;
  %697 = %674.2;
  %698 = %677.2;
  %699 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %700 = asinh(%681) /* ty=Tensor[(15, 10, 16), float64] */;
  %701 = %692.1;
  %702 = %693.0;
  (%694, meta[relay.Constant][17] /* ty=Tensor[(2400), float64] */, %695, %696, %697, meta[relay.Constant][18] /* ty=Tensor[(2640), float64] */, %698, meta[relay.Constant][19] /* ty=Tensor[(990), float64] */, %699, %700, %688, meta[relay.Constant][20] /* ty=Tensor[(165), int8] */, %701, %702)
}

def @func_5670() -> (Tensor[(15, ?, 16), bool],) {
  %703 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %704 = %703.0;
  (%704,)
}

def @func_8596() -> Tensor[(8, 12, 12), float32] {
  %705 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 12, 12), float32] */;
  %706 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(8, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 12, 12), float32] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%707, %708) /* ty=Tensor[(8, 12, 12), float32] */
}

def @func_7956(%var_7944: Tensor[(4, 1, 15), float64], %var_7953: Tensor[(2, 1320), float64]) -> (Tensor[(4, 1, 15), float64], Tensor[(15, 11, 16), float64], Tensor[(2, 1320), float64]) {
  %709 = cast(%var_7944, dtype="float64") /* ty=Tensor[(4, 1, 15), float64] */;
  %710 = cast(%var_7953, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
  %711 = reshape(%710, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %712 = @func_3026(%711) /* ty=(Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) */;
  %713 = sinh(%709) /* ty=Tensor[(4, 1, 15), float64] */;
  %714 = %712.0;
  (%713, %714, %var_7953)
}

def @func_4997(%var_4989: Tensor[(1920), float64]) -> (Tensor[(3, 6, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(360, 1), float64]) {
  %715 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %716 = @func_4951() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %717 = cast(%var_4989, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %718 = reshape(%717, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %719 = @func_3555(%718) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1920), float64], Tensor[(360, 1), float32]) */;
  %720 = %719.3;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %722 = %715.0;
  %723 = %716.0;
  %724 = acosh(%721) /* ty=Tensor[(360, 1), float64] */;
  (%722, %723, %var_4989, %724)
}

def @func_3242(%var_3236: Tensor[(3, 11, 12), float64]) -> Tensor[(3, 11, 12), float64] {
  %725 = cast(-1.98481f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %726 = cast(%var_3236, dtype="float64") /* ty=Tensor[(3, 11, 12), float64] */;
  power(%725, %726) /* ty=Tensor[(3, 11, 12), float64] */
}

def @func_8888() -> Tensor[(15, 1, 16), float64] {
  @func_3047() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_4544() -> (Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), int64], Tensor[(15, 1, 16), float32]) {
  %727 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %728 = %727.0;
  %729 = @func_2223() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %730 = %729.0;
  %731 = cast(%730, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %732 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%728, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %735 = @func_3533() /* ty=Tensor[(3, 6, 16), float64] */;
  %736 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 6, 16), float64] */, dtype="int64") /* ty=Tensor[(3, 6, 16), int64] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="int64") /* ty=Tensor[(3, 6, 16), int64] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %740 = cast(%728, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %741 = logical_or(%733, %734) /* ty=Tensor[(15, ?, 16), bool] */;
  %742 = left_shift(%738, %739) /* ty=Tensor[(3, 6, 16), int64] */;
  %743 = cosh(%740) /* ty=Tensor[(15, 1, 16), float32] */;
  (%741, %742, %743)
}

def @func_6674() -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64]) {
  %744 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %745 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %746 = %744.0;
  %747 = %745.0;
  (%746, %747)
}

def @func_5745() -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %748 = @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %749 = @func_2223() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %750 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %751 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %752 = %748.0;
  %753 = %749.0;
  %754 = %750.0;
  %755 = %751.0;
  (%752, %753, %754, %755)
}

def @func_5512() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %756 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %757 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %758 = %756.0;
  %759 = %757.0;
  (%758, %759)
}

def @func_8547(%var_8541: Tensor[(15, 7, 16), float64]) -> (Tensor[(15, 7, 16), float32],) {
  %760 = @func_7106() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(728), float64]) */;
  %761 = %760.1;
  %762 = cast(%761, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %763 = cast(%var_8541, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %764 = divide(%762, %763) /* ty=Tensor[(15, 7, 16), float32] */;
  (%764,)
}

def @func_4839(%var_4830: Tensor[(360), float32], %var_4831: Tensor[(3840), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(360), float32], Tensor[(3840), float64]) {
  %765 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %766 = cast(%var_4830, dtype="float32") /* ty=Tensor[(360), float32] */;
  %767 = cast(%var_4831, dtype="float64") /* ty=Tensor[(3840), float64] */;
  %768 = reshape(%766, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %769 = reshape(%767, newshape=[15, 16, 16]) /* ty=Tensor[(15, 16, 16), float64] */;
  %770 = @func_2426(%768, %769) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(15, ?, 16), bool]) */;
  %771 = %765.0;
  %772 = %770.7;
  (%771, %772, %var_4830, %var_4831)
}

def @func_9361() -> (Tensor[(15, ?, 16), bool],) {
  %773 = @func_3650() /* ty=Tensor[(15, ?, 16), bool] */;
  (%773,)
}

def @func_2765() -> (Tensor[(15, 1, 16), float64],) {
  %774 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %775 = %774.0;
  (%775,)
}

def @func_2699() -> (Tensor[(15, 1, 16), float64],) {
  %776 = @func_2076() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %777 = %776.0;
  (%777,)
}

def @func_3533() -> Tensor[(3, 6, 16), float64] {
  %778 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %778.0
}

def @func_5036(%var_5020: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, ?, 16), uint16], Tensor[(15, 1, 16), float64]) {
  %779 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %780 = %779.0;
  %781 = cast(%var_5020, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%780, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %785 = @func_4685() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %786 = bitwise_xor(%783, %784) /* ty=Tensor[(15, ?, 16), uint16] */;
  %787 = %785.0;
  (%786, %787)
}

def @func_7239() -> (Tensor[(15, 15, 16), uint16], Tensor[(15, 11, 6), bool], Tensor[(10, 99), float64], Tensor[(15, 1, 16), float64]) {
  %788 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %789 = cast(%788, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %790 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 15, 16), float64] */, dtype="uint16") /* ty=Tensor[(15, 15, 16), uint16] */;
  %791 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 99), float64] */, dtype="float64") /* ty=Tensor[(10, 99), float64] */;
  %792 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 99), float64] */, dtype="float64") /* ty=Tensor[(10, 99), float64] */;
  %793 = reshape(%791, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), float64] */;
  %794 = reshape(%792, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), float64] */;
  %795 = @func_6660() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %796 = bitwise_and(%789, %790) /* ty=Tensor[(15, 15, 16), uint16] */;
  %797 = @func_5464(%793, %794) /* ty=Tensor[(15, 11, 6), bool] */;
  %798 = %795.2;
  (%796, %797, meta[relay.Constant][25] /* ty=Tensor[(10, 99), float64] */, %798)
}

def @func_4895() -> Tensor[(15, ?, 16), bool] {
  %799 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %799.0
}

def @func_2076() -> (Tensor[(15, 1, 16), float64],) {
  %800 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %801 = %800.0;
  (%801,)
}

def @func_2953() -> Tensor[(15, ?, 16), bool] {
  %802 = @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %802.0
}

def @func_6998() -> Tensor[(15, ?, 16), bool] {
  %803 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %803.0
}

def @func_8279() -> (Tensor[(3, 6, 16), float64],) {
  %804 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %805 = %804.0;
  (%805,)
}

def @func_9762(%var_9740: Tensor[(15, 5, 16), float64]) -> (Tensor[(15, 5, 16), bool], Tensor[(15, 5, 16), int64], Tensor[(15, 1, 16), float64]) {
  %806 = @func_7393() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %807 = %806.0;
  %808 = cast(%807, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %809 = cast(%var_9740, dtype="bool") /* ty=Tensor[(15, 5, 16), bool] */;
  %810 = cast(%807, dtype="int64") /* ty=Tensor[(15, 1, 16), int64] */;
  %811 = cast(%var_9740, dtype="int64") /* ty=Tensor[(15, 5, 16), int64] */;
  %812 = less_equal(%808, %809) /* ty=Tensor[(15, 5, 16), bool] */;
  %813 = bitwise_and(%810, %811) /* ty=Tensor[(15, 5, 16), int64] */;
  %814 = @func_6355() /* ty=Tensor[(15, 1, 16), float64] */;
  (%812, %813, %814)
}

def @func_5197() -> Tensor[(15, 1, 16), float64] {
  %815 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %815.2
}

def @func_6424() -> (Tensor[(15, 4, 16), bool], Tensor[(15, ?, 16), int8], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), float64]) {
  %816 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %817 = %816.0;
  %818 = cast(%817, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %819 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 4, 16), float64] */, dtype="bool") /* ty=Tensor[(15, 4, 16), bool] */;
  %820 = cast(%817, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %821 = reshape(%820, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %822 = @func_1235(%821) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) */;
  %823 = @func_4951() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %824 = @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %825 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 4, 16), float64] */;
  %826 = less_equal(%818, %819) /* ty=Tensor[(15, 4, 16), bool] */;
  %827 = %822.1;
  %828 = %823.0;
  %829 = %824.0;
  %830 = erf(%825) /* ty=Tensor[(15, 4, 16), float64] */;
  (%826, %827, %828, %829, %830)
}

def @func_6764(%var_6747: Tensor[(1, 700), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 700), float64], Tensor[(15, 1, 16), float64]) {
  %831 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %832 = cast(%var_6747, dtype="float64") /* ty=Tensor[(1, 700), float64] */;
  %833 = reshape(%832, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), float64] */;
  %834 = @func_5583(%833) /* ty=(Tensor[(14, 5, 10), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %835 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %836 = %831.1;
  %837 = %834.2;
  %838 = %835.0;
  (%836, %837, %var_6747, %838)
}

def @func_5538() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
  %839 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %840 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %841 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %842 = %839.0;
  %843 = %840.0;
  %844 = %841.0;
  (%842, %843, %844)
}

def @func_6933(%var_6891: Tensor[(3, 6, 16), float64]) -> (Tensor[(3, 6, 16), float64],) {
  %845 = @func_4708() /* ty=(Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %846 = %845.0;
  %847 = cast(%var_6891, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%846, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %851 = divide(%849, %850) /* ty=Tensor[(3, 6, 16), float64] */;
  (%851,)
}

def @func_5250() -> Tensor[(15, 1, 16), float64] {
  %852 = @func_1872() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %852.3
}

def @func_7050(%var_7029: Tensor[(15, 10, 16), float64]) -> Tensor[(15, 10, 16), float32] {
  %853 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %854 = %853.1;
  %855 = cast(%854, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %856 = cast(%var_7029, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %857 = divide(%855, %856) /* ty=Tensor[(15, 10, 16), float64] */;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  exp(%858) /* ty=Tensor[(15, 10, 16), float32] */
}

def @func_9813() -> Tensor[(15, 1, 16), float64] {
  %859 = @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %859.1
}

def @func_3555(%var_3551: Tensor[(1920), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1920), float64], Tensor[(360, 1), float32]) {
  %860 = cast(%var_3551, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %861 = cast(meta[relay.Constant][27] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
  %862 = reshape(%860, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float64] */;
  %863 = reshape(%861, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %864 = @func_3230(%862, %863) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 8, 16), int16], Tensor[(2, 12, 15), float32], Tensor[(360), float32], Tensor[(15, 1, 16), float64]) */;
  %865 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
  %866 = %864.0;
  (%865, %866, %var_3551, meta[relay.Constant][27] /* ty=Tensor[(360, 1), float32] */)
}

def @func_8176(%var_8171: Tensor[(1440), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1440), float64]) {
  %867 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %868 = @func_5824() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), float64]) */;
  %869 = cast(%var_8171, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %870 = reshape(%869, newshape=[15, 6, 16]) /* ty=Tensor[(15, 6, 16), float64] */;
  %871 = @func_6458(%870) /* ty=(Tensor[(15, 6, 16), int16], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %872 = %867.0;
  %873 = %868.2;
  %874 = %871.2;
  (%872, %873, %874, %var_8171)
}

def @func_9196() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %875 = @func_4685() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %876 = @func_6695() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %877 = %875.0;
  %878 = %876.0;
  (%877, %878)
}

def @func_9207() -> (Tensor[(15, 1, 16), float64],) {
  %879 = @func_8484() /* ty=Tensor[(15, 1, 16), float64] */;
  (%879,)
}

def @func_4154() -> (Tensor[(15, 1, 16), float64],) {
  %880 = @func_1524() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %881 = %880.0;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %883 = acosh(%882) /* ty=Tensor[(15, 1, 16), float64] */;
  (%883,)
}

def @func_1109() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %884 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %885 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %886 = asin(%884) /* ty=Tensor[(15, 1, 16), float64] */;
  %887 = tan(%885) /* ty=Tensor[(15, 1, 16), float64] */;
  (%886, %887)
}

def @func_8484() -> Tensor[(15, 1, 16), float64] {
  %888 = @func_7393() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %888.0
}

def @func_1524() -> (Tensor[(15, 1, 16), float64],) {
  %889 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %890 = %889.2;
  %891 = cast(%890, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %892 = atanh(%891) /* ty=Tensor[(15, 1, 16), float64] */;
  (%892,)
}

def @func_1274() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %893 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %894 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %895 = %893.2;
  %896 = cast(%895, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %897 = reshape(%896, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %898 = @func_1235(%897) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) */;
  %899 = %894.2;
  %900 = %898.0;
  (%895, %899, %900)
}

def @func_7529(%var_7500: Tensor[(36, 10), float32]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(36, 10), float32], Tensor[(960, 4), float64]) {
  %901 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %902 = cast(%var_7500, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
  %903 = cast(meta[relay.Constant][29] /* ty=Tensor[(960, 4), float64] */, dtype="float64") /* ty=Tensor[(960, 4), float64] */;
  %904 = reshape(%902, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %905 = reshape(%903, newshape=[15, 16, 16]) /* ty=Tensor[(15, 16, 16), float64] */;
  %906 = @func_2426(%904, %905) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(15, ?, 16), bool]) */;
  %907 = %901.0;
  %908 = @func_3959() /* ty=Tensor[(15, 1, 16), float64] */;
  %909 = %906.5;
  (%907, %908, %909, %var_7500, meta[relay.Constant][29] /* ty=Tensor[(960, 4), float64] */)
}

def @func_1585() -> (Tensor[(15, 1, 16), float64],) {
  %910 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%910,)
}

def @func_5824() -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), float64]) {
  %911 = @func_4951() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %912 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %913 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
  %914 = %911.0;
  %915 = %912.0;
  (%913, %914, %915)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1238(%var_1236: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) {
  @func_1235(%var_1236) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) */
}

def @func_8176(%var_8171: Tensor[(1440), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1440), float64]) {
  %0 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %1 = @func_5824() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), float64]) */;
  %2 = cast(%var_8171, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %3 = reshape(%2, newshape=[15, 6, 16]) /* ty=Tensor[(15, 6, 16), float64] */;
  %4 = @func_6458(%3) /* ty=(Tensor[(15, 6, 16), int16], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %5 = %0.0;
  %6 = %1.2;
  %7 = %4.2;
  (%5, %6, %7, %var_8171)
}

def @func_8597() -> Tensor[(8, 12, 12), float32] {
  %12 = fn () -> Tensor[(8, 12, 12), float32] {
    %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 12, 12), float32] */;
    %9 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 12, 12), float32] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%10, %11) /* ty=Tensor[(8, 12, 12), float32] */
  };
  %12() /* ty=Tensor[(8, 12, 12), float32] */
}

def @func_9734(%var_9732: Tensor[(4, 9, 3), float64]) -> (Tensor[(4, 9, 3), float64],) {
  @func_9731(%var_9732) /* ty=(Tensor[(4, 9, 3), float64],) */
}

def @func_7156() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %13 = @func_2593() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %14 = %13.1;
  %15 = @func_3047() /* ty=Tensor[(15, 1, 16), float64] */;
  %16 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%14, %15, %16)
}

def @func_9622() -> (Tensor[(15, 16, 16), float64], Tensor[(2400), float64], Tensor[(15, 16, 16), float32], Tensor[(15, ?, 16), bool], Tensor[(2640), float64], Tensor[(2640), float64], Tensor[(15, ?, 16), uint8], Tensor[(990), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 10, 16), float64], Tensor[(15, 11, 16), bool], Tensor[(165), int8], Tensor[(15, 11, 16), bool], Tensor[(10, 10, 9), float32]) {
  %17 = @func_6845() /* ty=Tensor[(15, 1, 16), float64] */;
  %18 = cast(%17, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 16, 16), float64] */, dtype="bool") /* ty=Tensor[(15, 16, 16), bool] */;
  %20 = logical_or(%18, %19) /* ty=Tensor[(15, 16, 16), bool] */;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(15, 16, 16), float64] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 16, 16), float64] */, dtype="float32") /* ty=Tensor[(15, 16, 16), float32] */;
  %23 = @func_9252() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %24 = cast(meta[relay.Constant][4] /* ty=Tensor[(2640), float64] */, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %25 = reshape(%24, newshape=[2640]) /* ty=Tensor[(2640), float64] */;
  %26 = @func_7901(%25) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64], Tensor[(2640), float64], Tensor[(15, 1, 16), float64], Tensor[(10, 6, 6), bool]) */;
  %27 = cast(meta[relay.Constant][5] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %28 = reshape(%27, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %29 = @func_7578(%28) /* ty=(Tensor[(15, 11, 6), bool], Tensor[(990), float64], Tensor[(15, ?, 16), uint8]) */;
  %30 = cast(meta[relay.Constant][3] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %31 = reshape(%30, newshape=[15, 10, 16]) /* ty=Tensor[(15, 10, 16), float64] */;
  %32 = @func_7050(%31) /* ty=Tensor[(15, 10, 16), float32] */;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %34 = cast(meta[relay.Constant][6] /* ty=Tensor[(165), int8] */, dtype="int8") /* ty=Tensor[(165), int8] */;
  %35 = cast(meta[relay.Constant][4] /* ty=Tensor[(2640), float64] */, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %36 = reshape(%34, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), int8] */;
  %37 = reshape(%35, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %38 = @func_3835(%36, %37) /* ty=(Tensor[(11, 5, 3), int8], Tensor[(15, 11, 16), bool]) */;
  %39 = cast(meta[relay.Constant][6] /* ty=Tensor[(165), int8] */, dtype="int8") /* ty=Tensor[(165), int8] */;
  %40 = %38.1;
  %41 = cast(%40, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %42 = reshape(%39, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), int8] */;
  %43 = reshape(%41, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %44 = @func_3835(%42, %43) /* ty=(Tensor[(11, 5, 3), int8], Tensor[(15, 11, 16), bool]) */;
  %45 = @func_8521() /* ty=(Tensor[(10, 10, 9), float32],) */;
  %46 = asin(%21) /* ty=Tensor[(15, 16, 16), float64] */;
  %47 = rsqrt(%22) /* ty=Tensor[(15, 16, 16), float32] */;
  %48 = %23.0;
  %49 = %26.2;
  %50 = %29.2;
  %51 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %52 = asinh(%33) /* ty=Tensor[(15, 10, 16), float64] */;
  %53 = %44.1;
  %54 = %45.0;
  (%46, meta[relay.Constant][3] /* ty=Tensor[(2400), float64] */, %47, %48, %49, meta[relay.Constant][4] /* ty=Tensor[(2640), float64] */, %50, meta[relay.Constant][5] /* ty=Tensor[(990), float64] */, %51, %52, %40, meta[relay.Constant][6] /* ty=Tensor[(165), int8] */, %53, %54)
}

def @func_2077() -> (Tensor[(15, 1, 16), float64],) {
  %57 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %55 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %56 = %55.0;
    (%56,)
  };
  %57() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_8049() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %58 = @func_4708() /* ty=(Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %59 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
  %60 = %58.1;
  (%59, %60)
}

def @func_3607() -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
  %67 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
    %61 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %62 = @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %63 = @func_3462() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %64 = %61.0;
    %65 = %62.0;
    %66 = %63.0;
    (%64, %65, %66)
  };
  %67() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */
}

def @func_4155() -> (Tensor[(15, 1, 16), float64],) {
  %72 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %68 = @func_1524() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %69 = %68.0;
    %70 = cast(%69, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %71 = acosh(%70) /* ty=Tensor[(15, 1, 16), float64] */;
    (%71,)
  };
  %72() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_2871() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
  @func_2869() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) */
}

def @func_3682(%var_3680: Tensor[(8, 7, 13), float64], %var_3681: Tensor[(8, 7, 13), float64]) -> (Tensor[(8, 7, 13), bool],) {
  @func_3678(%var_3680, %var_3681) /* ty=(Tensor[(8, 7, 13), bool],) */
}

def @func_1587() -> (Tensor[(15, 1, 16), float64],) {
  @func_1585() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_3959() -> Tensor[(15, 1, 16), float64] {
  %73 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %73.2
}

def @main(%var_9845: Tensor[(396), float64]) -> (Tensor[(3, 11, 12), float64], Tensor[(396), float64], Tensor[(15, 11, 16), int64]) {
  %74 = cast(%var_9845, dtype="float64") /* ty=Tensor[(396), float64] */;
  %75 = reshape(%74, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %76 = @func_7692(%75) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 11, 12), float64], Tensor[(3, 11, 12), float32]) */;
  %77 = @func_4687() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %78 = %77.0;
  %79 = cast(%78, dtype="int64") /* ty=Tensor[(15, 1, 16), int64] */;
  %80 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 11, 16), float64] */, dtype="int64") /* ty=Tensor[(15, 11, 16), int64] */;
  %81 = %76.1;
  %82 = subtract(%79, %80) /* ty=Tensor[(15, 11, 16), int64] */;
  (%81, %var_9845, %82)
}

def @func_3105(%var_3088: Tensor[(12, 1, 8), float32]) -> Tensor[(12, 1, 8), float32] {
  %83 = cast(%var_3088, dtype="float32") /* ty=Tensor[(12, 1, 8), float32] */;
  tan(%83) /* ty=Tensor[(12, 1, 8), float32] */
}

def @func_2035() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %91 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %84 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %85 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
    %86 = cast(%85, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %87 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %88 = %84.0;
    %89 = log(%86) /* ty=Tensor[(15, 1, 16), float64] */;
    %90 = %87.1;
    (%88, %89, %90)
  };
  %91() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_6999() -> Tensor[(15, ?, 16), bool] {
  %93 = fn () -> Tensor[(15, ?, 16), bool] {
    %92 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %92.0
  };
  %93() /* ty=Tensor[(15, ?, 16), bool] */
}

def @func_9814() -> Tensor[(15, 1, 16), float64] {
  %95 = fn () -> Tensor[(15, 1, 16), float64] {
    %94 = @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %94.1
  };
  %95() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_3651() -> Tensor[(15, ?, 16), bool] {
  %104 = fn () -> Tensor[(15, ?, 16), bool] {
    %96 = @func_2223() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %97 = %96.0;
    %98 = @func_1585() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %99 = %98.0;
    %100 = cast(%99, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %101 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(%97, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%102, %103) /* ty=Tensor[(15, ?, 16), bool] */
  };
  %104() /* ty=Tensor[(15, ?, 16), bool] */
}

def @func_7809(%var_7808: Tensor[(300, 12), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(300, 12), float64]) {
  %117 = fn (%var_7785: Tensor[(300, 12), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(300, 12), float64]) {
    %105 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %106 = @func_6139() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %107 = @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %108 = cast(%var_7785, dtype="float64") /* ty=Tensor[(300, 12), float64] */;
    %109 = reshape(%108, newshape=[15, 15, 16]) /* ty=Tensor[(15, 15, 16), float64] */;
    %110 = @func_1195(%109) /* ty=(Tensor[(15, 15, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %111 = @func_6255() /* ty=Tensor[(15, 1, 16), float64] */;
    %112 = @func_4895() /* ty=Tensor[(15, ?, 16), bool] */;
    %113 = %105.0;
    %114 = %106.3;
    %115 = %107.0;
    %116 = %110.2;
    (%111, %112, %113, %114, %115, %116, %var_7785)
  };
  %117(%var_7808) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(300, 12), float64]) */
}

def @func_4685() -> (Tensor[(15, 1, 16), float64],) {
  %118 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %119 = %118.0;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %121 = erf(%120) /* ty=Tensor[(15, 1, 16), float64] */;
  (%121,)
}

def @func_2634() -> (Tensor[(15, 1, 16), float64],) {
  @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_3876(%var_3874: Tensor[(7, 3, 4), float32], %var_3875: Tensor[(7, 3, 4), float32]) -> (Tensor[(7, 3, 4), float64], Tensor[(15, 1, 16), float64]) {
  @func_3872(%var_3874, %var_3875) /* ty=(Tensor[(7, 3, 4), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_6766(%var_6765: Tensor[(1, 700), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 700), float64], Tensor[(15, 1, 16), float64]) {
  %130 = fn (%var_6747: Tensor[(1, 700), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 700), float64], Tensor[(15, 1, 16), float64]) {
    %122 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %123 = cast(%var_6747, dtype="float64") /* ty=Tensor[(1, 700), float64] */;
    %124 = reshape(%123, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), float64] */;
    %125 = @func_5583(%124) /* ty=(Tensor[(14, 5, 10), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %126 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %127 = %122.1;
    %128 = %125.2;
    %129 = %126.0;
    (%127, %128, %var_6747, %129)
  };
  %130(%var_6765) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 700), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_1650() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %131 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %132 = %131.0;
  %133 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%132, %133)
}

def @func_9624() -> (Tensor[(15, 16, 16), float64], Tensor[(2400), float64], Tensor[(15, 16, 16), float32], Tensor[(15, ?, 16), bool], Tensor[(2640), float64], Tensor[(2640), float64], Tensor[(15, ?, 16), uint8], Tensor[(990), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 10, 16), float64], Tensor[(15, 11, 16), bool], Tensor[(165), int8], Tensor[(15, 11, 16), bool], Tensor[(10, 10, 9), float32]) {
  @func_9622() /* ty=(Tensor[(15, 16, 16), float64], Tensor[(2400), float64], Tensor[(15, 16, 16), float32], Tensor[(15, ?, 16), bool], Tensor[(2640), float64], Tensor[(2640), float64], Tensor[(15, ?, 16), uint8], Tensor[(990), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 10, 16), float64], Tensor[(15, 11, 16), bool], Tensor[(165), int8], Tensor[(15, 11, 16), bool], Tensor[(10, 10, 9), float32]) */
}

def @func_3062() -> Tensor[(15, 1, 16), float64] {
  @func_3060() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_1561() -> (Tensor[(15, 1, 16), float64],) {
  %134 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%134,)
}

def @func_3292(%var_3280: Tensor[(3, 3, 8), uint64]) -> (Tensor[(3, 3, 8), uint64], Tensor[(15, 1, 16), float64]) {
  %135 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 3, 8), uint64] */, dtype="uint64") /* ty=Tensor[(3, 3, 8), uint64] */;
  %136 = shape_of(%var_3280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%var_3280, dtype="uint64") /* ty=Tensor[(3, 3, 8), uint64] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %139 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %140 = bitwise_and(%137, %138) /* ty=Tensor[(3, 3, 8), uint64] */;
  %141 = %139.2;
  (%140, %141)
}

def @func_5672() -> (Tensor[(15, ?, 16), bool],) {
  @func_5670() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_6486() -> Tensor[(15, ?, 16), bool] {
  %142 = @func_5745() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %142.0
}

def @func_1235(%var_1218: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) {
  %143 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %144 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %145 = %144.1;
  %146 = cast(%var_1218, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%145, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %150 = less(%148, %149) /* ty=Tensor[(15, ?, 16), bool] */;
  %151 = cast(%var_1218, dtype="int8") /* ty=Tensor[(15, 1, 16), int8] */;
  %152 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%150, dtype="int8") /* ty=Tensor[(15, ?, 16), int8] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %155 = %143.1;
  %156 = bitwise_and(%153, %154) /* ty=Tensor[(15, ?, 16), int8] */;
  (%155, %156)
}

def @func_6227() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %157 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %158 = @func_2034() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %159 = %157.0;
  %160 = %158.2;
  (%159, %160)
}

def @func_7050(%var_7029: Tensor[(15, 10, 16), float64]) -> Tensor[(15, 10, 16), float32] {
  %161 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %162 = %161.1;
  %163 = cast(%162, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %164 = cast(%var_7029, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %165 = divide(%163, %164) /* ty=Tensor[(15, 10, 16), float64] */;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  exp(%166) /* ty=Tensor[(15, 10, 16), float32] */
}

def @func_4896() -> Tensor[(15, ?, 16), bool] {
  %168 = fn () -> Tensor[(15, ?, 16), bool] {
    %167 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %167.0
  };
  %168() /* ty=Tensor[(15, ?, 16), bool] */
}

def @func_8976() -> (Tensor[(15, ?, 16), float32],) {
  %178 = fn () -> (Tensor[(15, ?, 16), float32],) {
    %169 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %170 = %169.0;
    %171 = @func_5858() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %172 = %171.0;
    %173 = cast(%172, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
    %174 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
    %175 = cast(%170, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
    %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %177 = floor_mod(%175, %176) /* ty=Tensor[(15, ?, 16), float32] */;
    (%177,)
  };
  %178() /* ty=(Tensor[(15, ?, 16), float32],) */
}

def @func_3153(%var_3125: Tensor[(2304), float64]) -> (Tensor[(8, 14, 7), float32], Tensor[(15, 1, 16), float64], Tensor[(12, 12, 16), float64], Tensor[(2304), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 7), float32] */;
  %180 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %181 = cast(%var_3125, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %182 = reshape(%181, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float64] */;
  %183 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %184 = @func_2593() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %185 = sinh(%179) /* ty=Tensor[(8, 14, 7), float32] */;
  %186 = %180.0;
  %187 = @func_2510(%182) /* ty=Tensor[(12, 12, 16), float64] */;
  %188 = %183.0;
  %189 = %184.1;
  (%185, %186, %187, %var_3125, %188, %189)
}

def @func_4083(%var_4074: Tensor[(96), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) {
  %190 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %191 = cast(%var_4074, dtype="float32") /* ty=Tensor[(96), float32] */;
  %192 = reshape(%191, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %193 = %190.2;
  %194 = @func_3105(%192) /* ty=Tensor[(12, 1, 8), float32] */;
  (%193, %194, %var_4074)
}

def @func_8051() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_8049() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_8486() -> Tensor[(15, 1, 16), float64] {
  @func_8484() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_6674() -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64]) {
  %195 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %196 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %197 = %195.0;
  %198 = %196.0;
  (%197, %198)
}

def @func_8281() -> (Tensor[(3, 6, 16), float64],) {
  @func_8279() /* ty=(Tensor[(3, 6, 16), float64],) */
}

def @func_9198() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_9196() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_9676() -> (Tensor[(15, 1, 16), float64],) {
  %199 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
  (%199,)
}

def @func_5039(%var_5037: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, ?, 16), uint16], Tensor[(15, 1, 16), float64]) {
  @func_5036(%var_5037) /* ty=(Tensor[(15, ?, 16), uint16], Tensor[(15, 1, 16), float64]) */
}

def @func_5122(%var_5120: Tensor[(96), float32], %var_5121: Tensor[(360), float32]) -> (Tensor[(15, ?, 16), bool], Tensor[(12, 1, 8), float32], Tensor[(96), float32], Tensor[(15, ?, 16), bool], Tensor[(360), float32], Tensor[(1920), float64], Tensor[(360), float32]) {
  %212 = fn (%var_5084: Tensor[(96), float32], %var_5105: Tensor[(360), float32]) -> (Tensor[(15, ?, 16), bool], Tensor[(12, 1, 8), float32], Tensor[(96), float32], Tensor[(15, ?, 16), bool], Tensor[(360), float32], Tensor[(1920), float64], Tensor[(360), float32]) {
    %200 = cast(%var_5084, dtype="float32") /* ty=Tensor[(96), float32] */;
    %201 = reshape(%200, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
    %202 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %203 = cast(meta[relay.Constant][10] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %204 = cast(%var_5105, dtype="float32") /* ty=Tensor[(360), float32] */;
    %205 = reshape(%203, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float64] */;
    %206 = reshape(%204, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %207 = @func_3230(%205, %206) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 8, 16), int16], Tensor[(2, 12, 15), float32], Tensor[(360), float32], Tensor[(15, 1, 16), float64]) */;
    %208 = @func_4895() /* ty=Tensor[(15, ?, 16), bool] */;
    %209 = @func_3105(%201) /* ty=Tensor[(12, 1, 8), float32] */;
    %210 = %202.0;
    %211 = %207.3;
    (%208, %209, %var_5084, %210, %211, meta[relay.Constant][10] /* ty=Tensor[(1920), float64] */, %var_5105)
  };
  %212(%var_5120, %var_5121) /* ty=(Tensor[(15, ?, 16), bool], Tensor[(12, 1, 8), float32], Tensor[(96), float32], Tensor[(15, ?, 16), bool], Tensor[(360), float32], Tensor[(1920), float64], Tensor[(360), float32]) */
}

def @func_3314() -> Tensor[(15, 1, 16), float64] {
  %214 = fn () -> Tensor[(15, 1, 16), float64] {
    %213 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %213.0
  };
  %214() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_5538() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
  %215 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %216 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %217 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %218 = %215.0;
  %219 = %216.0;
  %220 = %217.0;
  (%218, %219, %220)
}

def @func_5670() -> (Tensor[(15, ?, 16), bool],) {
  %221 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %222 = %221.0;
  (%222,)
}

def @func_2156() -> (Tensor[(15, 1, 16), float64],) {
  %223 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %224 = %223.0;
  (%224,)
}

def @func_3244(%var_3243: Tensor[(3, 11, 12), float64]) -> Tensor[(3, 11, 12), float64] {
  %227 = fn (%var_3236: Tensor[(3, 11, 12), float64]) -> Tensor[(3, 11, 12), float64] {
    %225 = cast(-1.98481f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %226 = cast(%var_3236, dtype="float64") /* ty=Tensor[(3, 11, 12), float64] */;
    power(%225, %226) /* ty=Tensor[(3, 11, 12), float64] */
  };
  %227(%var_3243) /* ty=Tensor[(3, 11, 12), float64] */
}

def @func_4063(%var_4061: Tensor[(2640), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(9, 5, 6), float32], Tensor[(270), float32], Tensor[(2640), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), float32]) {
  @func_4060(%var_4061) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(9, 5, 6), float32], Tensor[(270), float32], Tensor[(2640), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), float32]) */
}

def @func_4544() -> (Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), int64], Tensor[(15, 1, 16), float32]) {
  %228 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %229 = %228.0;
  %230 = @func_2223() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %231 = %230.0;
  %232 = cast(%231, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %233 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%229, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %236 = @func_3533() /* ty=Tensor[(3, 6, 16), float64] */;
  %237 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 6, 16), float64] */, dtype="int64") /* ty=Tensor[(3, 6, 16), int64] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%236, dtype="int64") /* ty=Tensor[(3, 6, 16), int64] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %241 = cast(%229, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %242 = logical_or(%234, %235) /* ty=Tensor[(15, ?, 16), bool] */;
  %243 = left_shift(%239, %240) /* ty=Tensor[(3, 6, 16), int64] */;
  %244 = cosh(%241) /* ty=Tensor[(15, 1, 16), float32] */;
  (%242, %243, %244)
}

def @func_1275() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %253 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %245 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %246 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %247 = %245.2;
    %248 = cast(%247, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %249 = reshape(%248, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
    %250 = @func_1235(%249) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) */;
    %251 = %246.2;
    %252 = %250.0;
    (%247, %251, %252)
  };
  %253() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_2006() -> (Tensor[(15, 1, 16), float64],) {
  %254 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %255 = %254.2;
  (%255,)
}

def @func_8251(%var_8201: Tensor[(1, 72), uint64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 72), float32]) {
  %256 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %257 = cast(%var_8201, dtype="uint64") /* ty=Tensor[(1, 72), uint64] */;
  %258 = reshape(%257, newshape=[3, 3, 8]) /* ty=Tensor[(3, 3, 8), uint64] */;
  %259 = @func_3292(%258) /* ty=(Tensor[(3, 3, 8), uint64], Tensor[(15, 1, 16), float64]) */;
  %260 = cast(%var_8201, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %261 = %256.0;
  %262 = %259.1;
  %263 = exp(%260) /* ty=Tensor[(1, 72), float32] */;
  (%261, %262, %263)
}

def @func_8008(%var_8001: Tensor[(15, 7, 16), float64]) -> (Tensor[(15, 7, 16), uint8],) {
  %264 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %265 = %264.0;
  %266 = cast(%265, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %267 = cast(%var_8001, dtype="uint8") /* ty=Tensor[(15, 7, 16), uint8] */;
  %268 = bitwise_or(%266, %267) /* ty=Tensor[(15, 7, 16), uint8] */;
  (%268,)
}

def @func_1652() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_1684() -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
  %282 = fn () -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
    %269 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %270 = %269.1;
    %271 = cast(%270, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
    %272 = cos(%271) /* ty=Tensor[(15, 1, 16), float32] */;
    %273 = cast(%272, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %274 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
    %275 = cast(%270, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %277 = cast(%272, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
    %278 = sinh(%277) /* ty=Tensor[(15, 1, 16), float32] */;
    %279 = cast(%278, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %280 = less_equal(%275, %276) /* ty=Tensor[(15, ?, 16), bool] */;
    %281 = acos(%279) /* ty=Tensor[(15, 1, 16), float64] */;
    (%280, %281)
  };
  %282() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */
}

def @func_9338(%var_9336: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), float32], Tensor[(15, 1, 16), float64]) {
  @func_9335(%var_9336) /* ty=(Tensor[(15, 6, 16), float32], Tensor[(15, 1, 16), float64]) */
}

def @func_1382() -> (Tensor[(15, 1, 16), float64],) {
  %285 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %283 = @func_1274() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %284 = %283.2;
    (%284,)
  };
  %285() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_9511() -> (Tensor[(15, 1, 16), float64],) {
  %286 = @func_5512() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %287 = %286.0;
  (%287,)
}

def @func_8795() -> (Tensor[(15, 1, 16), float64],) {
  %288 = @func_6255() /* ty=Tensor[(15, 1, 16), float64] */;
  (%288,)
}

def @func_3462() -> (Tensor[(15, 1, 16), float64],) {
  %289 = @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %290 = %289.0;
  (%290,)
}

def @func_9209() -> (Tensor[(15, 1, 16), float64],) {
  @func_9207() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_4060(%var_3997: Tensor[(2640), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(9, 5, 6), float32], Tensor[(270), float32], Tensor[(2640), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), float32]) {
  %291 = cast(meta[relay.Constant][12] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %292 = reshape(%291, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), float32] */;
  %293 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %294 = cast(%var_3997, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %295 = reshape(%294, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %296 = @func_3026(%295) /* ty=(Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) */;
  %297 = %296.1;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(15, 11, 16), float32] */;
  %299 = acos(%298) /* ty=Tensor[(15, 11, 16), float32] */;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %301 = cast(%299, dtype="float32") /* ty=Tensor[(15, 11, 16), float32] */;
  %302 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  %303 = @func_2979(%292) /* ty=Tensor[(9, 5, 6), float32] */;
  %304 = @func_2953() /* ty=Tensor[(15, ?, 16), bool] */;
  %305 = %293.0;
  %306 = rsqrt(%300) /* ty=Tensor[(15, 11, 16), float64] */;
  %307 = atanh(%301) /* ty=Tensor[(15, 11, 16), float32] */;
  (%302, %303, meta[relay.Constant][12] /* ty=Tensor[(270), float32] */, %var_3997, %304, %305, %306, %307)
}

def @func_2512(%var_2511: Tensor[(12, 12, 16), float64]) -> Tensor[(12, 12, 16), float64] {
  %309 = fn (%var_2504: Tensor[(12, 12, 16), float64]) -> Tensor[(12, 12, 16), float64] {
    %308 = cast(%var_2504, dtype="float64") /* ty=Tensor[(12, 12, 16), float64] */;
    asinh(%308) /* ty=Tensor[(12, 12, 16), float64] */
  };
  %309(%var_2511) /* ty=Tensor[(12, 12, 16), float64] */
}

def @func_8409(%var_8354: uint64, %var_8355: Tensor[(3, 9, 4), uint64], %var_8362: Tensor[(3, 9, 4), bool]) -> (Tensor[(3, 9, 4), int64], Tensor[(15, 1, 16), float64]) {
  %310 = cast(%var_8354, dtype="bool") /* ty=bool */;
  %311 = cast(%var_8355, dtype="bool") /* ty=Tensor[(3, 9, 4), bool] */;
  %312 = greater(%310, %311) /* ty=Tensor[(3, 9, 4), bool] */;
  %313 = cast(%var_8362, dtype="int64") /* ty=Tensor[(3, 9, 4), int64] */;
  %314 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%312, dtype="int64") /* ty=Tensor[(3, 9, 4), int64] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %317 = logical_xor(%315, %316) /* ty=Tensor[(3, 9, 4), int64] */;
  %318 = @func_6845() /* ty=Tensor[(15, 1, 16), float64] */;
  (%317, %318)
}

def @func_3108(%var_3106: Tensor[(12, 1, 8), float32]) -> Tensor[(12, 1, 8), float32] {
  @func_3105(%var_3106) /* ty=Tensor[(12, 1, 8), float32] */
}

def @func_2699() -> (Tensor[(15, 1, 16), float64],) {
  %319 = @func_2076() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %320 = %319.0;
  (%320,)
}

def @func_3026(%var_2989: Tensor[(15, 11, 16), float64]) -> (Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) {
  %321 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %322 = %321.0;
  %323 = cast(%322, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %324 = cast(%var_2989, dtype="uint16") /* ty=Tensor[(15, 11, 16), uint16] */;
  %325 = minimum(%323, %324) /* ty=Tensor[(15, 11, 16), uint16] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %327 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %328 = %327.0;
  %329 = cast(%328, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %330 = cast(%var_2989, dtype="bool") /* ty=Tensor[(15, 11, 16), bool] */;
  %331 = log(%326) /* ty=Tensor[(15, 11, 16), float64] */;
  %332 = logical_and(%329, %330) /* ty=Tensor[(15, 11, 16), bool] */;
  (%331, %332)
}

def @func_6488() -> Tensor[(15, ?, 16), bool] {
  @func_6486() /* ty=Tensor[(15, ?, 16), bool] */
}

def @func_6199(%var_6197: Tensor[(15, 1, 16), float64], %var_6198: Tensor[(1920), float64]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(15, 1, 16), float64]) {
  %346 = fn (%var_6174: Tensor[(15, 1, 16), float64], %var_6181: Tensor[(1920), float64]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(15, 1, 16), float64]) {
    %333 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %334 = %333.0;
    %335 = cast(%var_6174, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(%334, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %339 = cast(%var_6181, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %340 = reshape(%339, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %341 = @func_4997(%340) /* ty=(Tensor[(3, 6, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(360, 1), float64]) */;
    %342 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %343 = logical_and(%337, %338) /* ty=Tensor[(15, ?, 16), bool] */;
    %344 = %341.1;
    %345 = %342.0;
    (%343, %344, %var_6181, %345)
  };
  %346(%var_6197, %var_6198) /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_8797() -> (Tensor[(15, 1, 16), float64],) {
  @func_8795() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_1585() -> (Tensor[(15, 1, 16), float64],) {
  %347 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
  (%347,)
}

def @func_5777(%var_5772: Tensor[(15, 4, 16), float64]) -> Tensor[(15, 4, 16), int64] {
  %348 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %349 = cast(%348, dtype="int64") /* ty=Tensor[(15, 1, 16), int64] */;
  %350 = cast(%var_5772, dtype="int64") /* ty=Tensor[(15, 4, 16), int64] */;
  subtract(%349, %350) /* ty=Tensor[(15, 4, 16), int64] */
}

def @func_9441(%var_9439: Tensor[(728), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(990), float64], Tensor[(990), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) {
  @func_9438(%var_9439) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(990), float64], Tensor[(990), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) */
}

def @func_2701() -> (Tensor[(15, 1, 16), float64],) {
  @func_2699() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_2955() -> Tensor[(15, ?, 16), bool] {
  @func_2953() /* ty=Tensor[(15, ?, 16), bool] */
}

def @func_4598() -> Tensor[(15, 1, 16), float64] {
  %352 = fn () -> Tensor[(15, 1, 16), float64] {
    %351 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %351.0
  };
  %352() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_3498() -> Tensor[(15, 1, 16), float64] {
  @func_3496() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_9731(%var_9715: Tensor[(4, 9, 3), float64]) -> (Tensor[(4, 9, 3), float64],) {
  %353 = cast(%var_9715, dtype="float64") /* ty=Tensor[(4, 9, 3), float64] */;
  %354 = sigmoid(%353) /* ty=Tensor[(4, 9, 3), float64] */;
  (%354,)
}

def @func_4842(%var_4840: Tensor[(360), float32], %var_4841: Tensor[(3840), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(360), float32], Tensor[(3840), float64]) {
  %363 = fn (%var_4830: Tensor[(360), float32], %var_4831: Tensor[(3840), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(360), float32], Tensor[(3840), float64]) {
    %355 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %356 = cast(%var_4830, dtype="float32") /* ty=Tensor[(360), float32] */;
    %357 = cast(%var_4831, dtype="float64") /* ty=Tensor[(3840), float64] */;
    %358 = reshape(%356, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %359 = reshape(%357, newshape=[15, 16, 16]) /* ty=Tensor[(15, 16, 16), float64] */;
    %360 = @func_2426(%358, %359) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(15, ?, 16), bool]) */;
    %361 = %355.0;
    %362 = %360.7;
    (%361, %362, %var_4830, %var_4831)
  };
  %363(%var_4840, %var_4841) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(360), float32], Tensor[(3840), float64]) */
}

def @func_7531(%var_7530: Tensor[(36, 10), float32]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(36, 10), float32], Tensor[(960, 4), float64]) {
  %373 = fn (%var_7500: Tensor[(36, 10), float32]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(36, 10), float32], Tensor[(960, 4), float64]) {
    %364 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %365 = cast(%var_7500, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
    %366 = cast(meta[relay.Constant][13] /* ty=Tensor[(960, 4), float64] */, dtype="float64") /* ty=Tensor[(960, 4), float64] */;
    %367 = reshape(%365, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %368 = reshape(%366, newshape=[15, 16, 16]) /* ty=Tensor[(15, 16, 16), float64] */;
    %369 = @func_2426(%367, %368) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(15, ?, 16), bool]) */;
    %370 = %364.0;
    %371 = @func_3959() /* ty=Tensor[(15, 1, 16), float64] */;
    %372 = %369.5;
    (%370, %371, %372, %var_7500, meta[relay.Constant][13] /* ty=Tensor[(960, 4), float64] */)
  };
  %373(%var_7530) /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(36, 10), float32], Tensor[(960, 4), float64]) */
}

def @func_7580(%var_7579: Tensor[(990), float64]) -> (Tensor[(15, 11, 6), bool], Tensor[(990), float64], Tensor[(15, ?, 16), uint8]) {
  %388 = fn (%var_7567: Tensor[(990), float64]) -> (Tensor[(15, 11, 6), bool], Tensor[(990), float64], Tensor[(15, ?, 16), uint8]) {
    %374 = cast(%var_7567, dtype="float64") /* ty=Tensor[(990), float64] */;
    %375 = cast(%var_7567, dtype="float64") /* ty=Tensor[(990), float64] */;
    %376 = reshape(%374, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), float64] */;
    %377 = reshape(%375, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), float64] */;
    %378 = @func_1524() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %379 = %378.0;
    %380 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %381 = %380.1;
    %382 = cast(%381, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
    %383 = shape_of(%379, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(%379, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %386 = @func_5464(%376, %377) /* ty=Tensor[(15, 11, 6), bool] */;
    %387 = maximum(%384, %385) /* ty=Tensor[(15, ?, 16), uint8] */;
    (%386, %var_7567, %387)
  };
  %388(%var_7579) /* ty=(Tensor[(15, 11, 6), bool], Tensor[(990), float64], Tensor[(15, ?, 16), uint8]) */
}

def @func_3048() -> Tensor[(15, 1, 16), float64] {
  %390 = fn () -> Tensor[(15, 1, 16), float64] {
    %389 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %389.0
  };
  %390() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_7395() -> (Tensor[(15, 1, 16), float64],) {
  @func_7393() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_1707() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %391 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
  %392 = cast(%391, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %393 = reshape(%392, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %394 = @func_1235(%393) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) */;
  %395 = %394.0;
  (%391, %395)
}

def @func_1873() -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %404 = fn () -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %396 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
    %397 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %398 = @func_1524() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %399 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %400 = %396.0;
    %401 = %397.1;
    %402 = %398.0;
    %403 = %399.0;
    (%400, %401, %402, %403)
  };
  %404() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_2429(%var_2427: Tensor[(360), float32], %var_2428: Tensor[(15, 16, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(15, ?, 16), bool]) {
  %439 = fn (%var_2315: Tensor[(360), float32], %var_2368: Tensor[(15, 16, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(15, ?, 16), bool]) {
    %405 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
    %406 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %407 = @func_2006() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %408 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %409 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %410 = cast(%var_2315, dtype="float32") /* ty=Tensor[(360), float32] */;
    %411 = reshape(%410, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), float32] */;
    %412 = @func_2177(%411) /* ty=(Tensor[(2, 12, 15), float32],) */;
    %413 = %412.0;
    %414 = cast(%var_2315, dtype="float64") /* ty=Tensor[(360), float64] */;
    %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
    %416 = cast(%413, dtype="float64") /* ty=Tensor[(2, 12, 15), float64] */;
    %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %418 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %419 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
    %420 = cast(%419, dtype="uint64") /* ty=Tensor[(15, 1, 16), uint64] */;
    %421 = cast(%var_2368, dtype="uint64") /* ty=Tensor[(15, 16, 16), uint64] */;
    %422 = bitwise_xor(%420, %421) /* ty=Tensor[(15, 16, 16), uint64] */;
    %423 = cast(%422, dtype="float32") /* ty=Tensor[(15, 16, 16), float32] */;
    %424 = acos(%423) /* ty=Tensor[(15, 16, 16), float32] */;
    %425 = @func_2076() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %426 = %425.0;
    %427 = cast(%424, dtype="uint16") /* ty=Tensor[(15, 16, 16), uint16] */;
    %428 = cast(%426, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
    %429 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
    %430 = %405.1;
    %431 = %406.1;
    %432 = %407.0;
    %433 = %408.0;
    %434 = %409.1;
    %435 = floor_divide(%416, %417) /* ty=Tensor[(2, 12, 15), float64] */;
    %436 = %418.0;
    %437 = bitwise_and(%427, %428) /* ty=Tensor[(15, 16, 16), uint16] */;
    %438 = %429.0;
    (%430, %431, %432, %433, %434, %435, %436, %437, %438)
  };
  %439(%var_2427, %var_2428) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(2, 12, 15), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(15, ?, 16), bool]) */
}

def @func_5199() -> Tensor[(15, 1, 16), float64] {
  @func_5197() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_3366() -> (Tensor[(3, 6, 16), float64],) {
  %440 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 6, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %441 = log10(%440) /* ty=Tensor[(3, 6, 16), float64] */;
  (%441,)
}

def @func_3233(%var_3231: Tensor[(15, 8, 16), float64], %var_3232: Tensor[(360), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 8, 16), int16], Tensor[(2, 12, 15), float32], Tensor[(360), float32], Tensor[(15, 1, 16), float64]) {
  %460 = fn (%var_3198: Tensor[(15, 8, 16), float64], %var_3216: Tensor[(360), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 8, 16), int16], Tensor[(2, 12, 15), float32], Tensor[(360), float32], Tensor[(15, 1, 16), float64]) {
    %442 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %443 = @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %444 = %443.0;
    %445 = cast(%444, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
    %446 = cast(%var_3198, dtype="float32") /* ty=Tensor[(15, 8, 16), float32] */;
    %447 = floor_mod(%445, %446) /* ty=Tensor[(15, 8, 16), float32] */;
    %448 = cast(%var_3198, dtype="int16") /* ty=Tensor[(15, 8, 16), int16] */;
    %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%447, dtype="int16") /* ty=Tensor[(15, 8, 16), int16] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %452 = cast(%var_3216, dtype="float32") /* ty=Tensor[(360), float32] */;
    %453 = reshape(%452, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), float32] */;
    %454 = @func_2177(%453) /* ty=(Tensor[(2, 12, 15), float32],) */;
    %455 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %456 = %442.0;
    %457 = left_shift(%450, %451) /* ty=Tensor[(15, 8, 16), int16] */;
    %458 = %454.0;
    %459 = %455.0;
    (%456, %457, %458, %var_3216, %459)
  };
  %460(%var_3231, %var_3232) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 8, 16), int16], Tensor[(2, 12, 15), float32], Tensor[(360), float32], Tensor[(15, 1, 16), float64]) */
}

def @func_9513() -> (Tensor[(15, 1, 16), float64],) {
  @func_9511() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_7324() -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), uint8], Tensor[(15, 1, 16), float64]) {
  %461 = @func_6139() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %462 = @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %463 = %462.1;
  %464 = @func_2006() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %467 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%463, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %470 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %471 = %461.0;
  %472 = minimum(%468, %469) /* ty=Tensor[(15, ?, 16), uint8] */;
  %473 = %470.0;
  (%471, %472, %473)
}

def @func_1609() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %480 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %474 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %475 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %476 = @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %477 = %474.0;
    %478 = %475.0;
    %479 = %476.0;
    (%477, %478, %479)
  };
  %480() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_1197(%var_1196: Tensor[(15, 15, 16), float64]) -> (Tensor[(15, 15, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %490 = fn (%var_1180: Tensor[(15, 15, 16), float64]) -> (Tensor[(15, 15, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %481 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %482 = %481.1;
    %483 = cast(%482, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %484 = cast(%var_1180, dtype="bool") /* ty=Tensor[(15, 15, 16), bool] */;
    %485 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %486 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %487 = greater(%483, %484) /* ty=Tensor[(15, 15, 16), bool] */;
    %488 = %485.2;
    %489 = %486.0;
    (%487, %488, %489)
  };
  %490(%var_1196) /* ty=(Tensor[(15, 15, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_6660() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %491 = @func_5512() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %492 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %493 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %494 = %491.1;
  %495 = %492.0;
  %496 = %493.1;
  (%494, %495, %496)
}

def @func_7465() -> (Tensor[(15, ?, 16), bool],) {
  %497 = @func_6486() /* ty=Tensor[(15, ?, 16), bool] */;
  (%497,)
}

def @func_6357() -> Tensor[(15, 1, 16), float64] {
  @func_6355() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_5583(%var_5565: Tensor[(14, 5, 10), float64]) -> (Tensor[(14, 5, 10), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %498 = cast(%var_5565, dtype="float64") /* ty=Tensor[(14, 5, 10), float64] */;
  %499 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %500 = @func_3462() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %501 = log2(%498) /* ty=Tensor[(14, 5, 10), float64] */;
  %502 = %499.0;
  %503 = %500.0;
  (%501, %502, %503)
}

def @func_6460(%var_6459: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), int16], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
  %511 = fn (%var_6446: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), int16], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) {
    %504 = @func_4604() /* ty=Tensor[(15, 1, 16), float64] */;
    %505 = cast(%504, dtype="int16") /* ty=Tensor[(15, 1, 16), int16] */;
    %506 = cast(%var_6446, dtype="int16") /* ty=Tensor[(15, 6, 16), int16] */;
    %507 = @func_4951() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %508 = left_shift(%505, %506) /* ty=Tensor[(15, 6, 16), int16] */;
    %509 = %507.0;
    %510 = @func_3496() /* ty=Tensor[(15, 1, 16), float64] */;
    (%508, %509, %510)
  };
  %511(%var_6459) /* ty=(Tensor[(15, 6, 16), int16], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */
}

def @func_7467() -> (Tensor[(15, ?, 16), bool],) {
  @func_7465() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_8889() -> Tensor[(15, 1, 16), float64] {
  %512 = fn () -> Tensor[(15, 1, 16), float64] {
    @func_3047() /* ty=Tensor[(15, 1, 16), float64] */
  };
  %512() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_3060() -> Tensor[(15, 1, 16), float64] {
  %513 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %513.0
}

def @func_1525() -> (Tensor[(15, 1, 16), float64],) {
  %518 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %514 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %515 = %514.2;
    %516 = cast(%515, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %517 = atanh(%516) /* ty=Tensor[(15, 1, 16), float64] */;
    (%517,)
  };
  %518() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_3356() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_3354() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_2869() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
  %519 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %520 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %521 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %522 = %521.0;
  %523 = cast(%522, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %524 = exp(%523) /* ty=Tensor[(15, 1, 16), float64] */;
  %525 = cast(%522, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%524, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %529 = %519.1;
  %530 = %520.1;
  %531 = not_equal(%527, %528) /* ty=Tensor[(15, ?, 16), bool] */;
  (%529, %530, %531)
}

def @func_5970(%var_5942: Tensor[(96), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) {
  %532 = @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %533 = cast(%var_5942, dtype="float32") /* ty=Tensor[(96), float32] */;
  %534 = reshape(%533, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %535 = %532.0;
  %536 = @func_3105(%534) /* ty=Tensor[(12, 1, 8), float32] */;
  (%535, %536, %var_5942)
}

def @func_1160() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %543 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %537 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %538 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %539 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %540 = %537.1;
    %541 = %538.1;
    %542 = %539.1;
    (%540, %541, %542)
  };
  %543() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_1418() -> Tensor[(15, 1, 16), float64] {
  %545 = fn () -> Tensor[(15, 1, 16), float64] {
    %544 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %544.0
  };
  %545() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_6936(%var_6934: Tensor[(3, 6, 16), float64]) -> (Tensor[(3, 6, 16), float64],) {
  @func_6933(%var_6934) /* ty=(Tensor[(3, 6, 16), float64],) */
}

def @func_6547() -> (Tensor[(15, 1, 16), float64],) {
  %548 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %546 = @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %547 = %546.0;
    (%547,)
  };
  %548() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_4783() -> (Tensor[(15, ?, 16), bool],) {
  %549 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %550 = %549.0;
  (%550,)
}

def @func_8138(%var_8137: Tensor[(15, 13, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 13, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
  %565 = fn (%var_8093: Tensor[(15, 13, 16), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 13, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
    %551 = @func_8049() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %552 = @func_2034() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %553 = @func_7334() /* ty=Tensor[(15, 1, 16), float64] */;
    %554 = cast(%553, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %555 = cast(%var_8093, dtype="bool") /* ty=Tensor[(15, 13, 16), bool] */;
    %556 = @func_1872() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %557 = @func_2593() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %558 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %559 = %551.0;
    %560 = %552.1;
    %561 = equal(%554, %555) /* ty=Tensor[(15, 13, 16), bool] */;
    %562 = %556.3;
    %563 = %557.0;
    %564 = %558.0;
    (%559, %560, %561, %562, %563, %564)
  };
  %565(%var_8137) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 13, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) */
}

def @func_3354() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %566 = @func_2593() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %567 = @func_1274() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %568 = %566.0;
  %569 = %567.0;
  (%568, %569)
}

def @func_5859() -> (Tensor[(15, 1, 16), float64],) {
  %571 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %570 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
    (%570,)
  };
  %571() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_6695() -> (Tensor[(15, 1, 16), float64],) {
  %572 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %573 = %572.0;
  (%573,)
}

def @func_7107() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(728), float64]) {
  %581 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(728), float64]) {
    %574 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %575 = cast(meta[relay.Constant][15] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
    %576 = reshape(%575, newshape=[728]) /* ty=Tensor[(728), float64] */;
    %577 = @func_4805(%576) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) */;
    %578 = @func_3959() /* ty=Tensor[(15, 1, 16), float64] */;
    %579 = %574.0;
    %580 = %577.0;
    (%578, %579, %580, meta[relay.Constant][15] /* ty=Tensor[(728), float64] */)
  };
  %581() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(728), float64]) */
}

def @func_9149() -> Tensor[(15, 1, 16), float64] {
  %582 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %582.0
}

def @func_8522() -> (Tensor[(10, 10, 9), float32],) {
  %585 = fn () -> (Tensor[(10, 10, 9), float32],) {
    %583 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(10, 10, 9), float32] */;
    %584 = log(%583) /* ty=Tensor[(10, 10, 9), float32] */;
    (%584,)
  };
  %585() /* ty=(Tensor[(10, 10, 9), float32],) */
}

def @func_2902() -> (Tensor[(15, ?, 16), bool],) {
  %586 = @func_2699() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %587 = %586.0;
  %588 = @func_2788() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %589 = %588.0;
  %590 = cast(%589, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %591 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%587, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %594 = equal(%592, %593) /* ty=Tensor[(15, ?, 16), bool] */;
  (%594,)
}

def @func_2177(%var_2173: Tensor[(2, 12, 15), float32]) -> (Tensor[(2, 12, 15), float32],) {
  %595 = cast(%var_2173, dtype="float32") /* ty=Tensor[(2, 12, 15), float32] */;
  %596 = asinh(%595) /* ty=Tensor[(2, 12, 15), float32] */;
  (%596,)
}

def @func_7903(%var_7902: Tensor[(2640), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64], Tensor[(2640), float64], Tensor[(15, 1, 16), float64], Tensor[(10, 6, 6), bool]) {
  %615 = fn (%var_7863: Tensor[(2640), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64], Tensor[(2640), float64], Tensor[(15, 1, 16), float64], Tensor[(10, 6, 6), bool]) {
    %597 = cast(%var_7863, dtype="float64") /* ty=Tensor[(2640), float64] */;
    %598 = reshape(%597, newshape=[132, 20]) /* ty=Tensor[(132, 20), float64] */;
    %599 = @func_4752(%598) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64]) */;
    %600 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 6, 6), int64] */, dtype="int64") /* ty=Tensor[(10, 6, 6), int64] */;
    %601 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(10, 6, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %602 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 6, 6), int64] */, dtype="int64") /* ty=Tensor[(10, 6, 6), int64] */;
    %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %604 = subtract(%602, %603) /* ty=Tensor[(10, 6, 6), int64] */;
    %605 = cast(%604, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
    %606 = cos(%605) /* ty=Tensor[(10, 6, 6), float32] */;
    %607 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 6, 6), int64] */, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
    %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %609 = cast(%606, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
    %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %611 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
    %612 = %599.1;
    %613 = @func_6845() /* ty=Tensor[(15, 1, 16), float64] */;
    %614 = less(%609, %610) /* ty=Tensor[(10, 6, 6), bool] */;
    (%611, %612, %var_7863, %613, %614)
  };
  %615(%var_7902) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64], Tensor[(2640), float64], Tensor[(15, 1, 16), float64], Tensor[(10, 6, 6), bool]) */
}

def @func_9765(%var_9763: Tensor[(15, 5, 16), float64]) -> (Tensor[(15, 5, 16), bool], Tensor[(15, 5, 16), int64], Tensor[(15, 1, 16), float64]) {
  @func_9762(%var_9763) /* ty=(Tensor[(15, 5, 16), bool], Tensor[(15, 5, 16), int64], Tensor[(15, 1, 16), float64]) */
}

def @func_9253() -> (Tensor[(15, ?, 16), bool],) {
  %618 = fn () -> (Tensor[(15, ?, 16), bool],) {
    %616 = @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %617 = %616.0;
    (%617,)
  };
  %618() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_6837() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %623 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %619 = @func_5538() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) */;
    %620 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %621 = %619.1;
    %622 = %620.1;
    (%621, %622)
  };
  %623() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_4952() -> (Tensor[(15, ?, 16), bool],) {
  %626 = fn () -> (Tensor[(15, ?, 16), bool],) {
    %624 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %625 = %624.0;
    (%625,)
  };
  %626() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_8750(%var_8748: Tensor[(13, 12, 8), float64], %var_8749: Tensor[(13, 12, 8), float64]) -> (Tensor[(13, 12, 8), float64], Tensor[(13, 12, 8), float32], Tensor[(15, ?, 16), bool]) {
  %636 = fn (%var_8725: Tensor[(13, 12, 8), float64], %var_8732: Tensor[(13, 12, 8), float64]) -> (Tensor[(13, 12, 8), float64], Tensor[(13, 12, 8), float32], Tensor[(15, ?, 16), bool]) {
    %627 = cast(%var_8725, dtype="float64") /* ty=Tensor[(13, 12, 8), float64] */;
    %628 = cast(%var_8732, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
    %629 = shape_of(%var_8725, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%var_8725, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %632 = @func_5670() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %633 = atan(%627) /* ty=Tensor[(13, 12, 8), float64] */;
    %634 = power(%630, %631) /* ty=Tensor[(13, 12, 8), float32] */;
    %635 = %632.0;
    (%633, %634, %635)
  };
  %636(%var_8748, %var_8749) /* ty=(Tensor[(13, 12, 8), float64], Tensor[(13, 12, 8), float32], Tensor[(15, ?, 16), bool]) */
}

def @func_7959(%var_7957: Tensor[(4, 1, 15), float64], %var_7958: Tensor[(2, 1320), float64]) -> (Tensor[(4, 1, 15), float64], Tensor[(15, 11, 16), float64], Tensor[(2, 1320), float64]) {
  %643 = fn (%var_7944: Tensor[(4, 1, 15), float64], %var_7953: Tensor[(2, 1320), float64]) -> (Tensor[(4, 1, 15), float64], Tensor[(15, 11, 16), float64], Tensor[(2, 1320), float64]) {
    %637 = cast(%var_7944, dtype="float64") /* ty=Tensor[(4, 1, 15), float64] */;
    %638 = cast(%var_7953, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
    %639 = reshape(%638, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
    %640 = @func_3026(%639) /* ty=(Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) */;
    %641 = sinh(%637) /* ty=Tensor[(4, 1, 15), float64] */;
    %642 = %640.0;
    (%641, %642, %var_7953)
  };
  %643(%var_7957, %var_7958) /* ty=(Tensor[(4, 1, 15), float64], Tensor[(15, 11, 16), float64], Tensor[(2, 1320), float64]) */
}

def @func_9438(%var_9430: Tensor[(728), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(990), float64], Tensor[(990), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) {
  %644 = @func_5858() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %645 = @func_1872() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %646 = @func_6546() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %647 = cast(meta[relay.Constant][19] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %648 = reshape(%647, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %649 = @func_7578(%648) /* ty=(Tensor[(15, 11, 6), bool], Tensor[(990), float64], Tensor[(15, ?, 16), uint8]) */;
  %650 = @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %651 = cast(%var_9430, dtype="float64") /* ty=Tensor[(728), float64] */;
  %652 = reshape(%651, newshape=[728]) /* ty=Tensor[(728), float64] */;
  %653 = @func_4805(%652) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) */;
  %654 = %644.0;
  %655 = %645.3;
  %656 = %646.0;
  %657 = %649.1;
  %658 = %650.1;
  %659 = @func_9149() /* ty=Tensor[(15, 1, 16), float64] */;
  %660 = %653.2;
  (%654, %655, %656, %657, meta[relay.Constant][19] /* ty=Tensor[(990), float64] */, %658, %659, %660, %var_9430)
}

def @func_5780(%var_5778: Tensor[(15, 4, 16), float64]) -> Tensor[(15, 4, 16), int64] {
  @func_5777(%var_5778) /* ty=Tensor[(15, 4, 16), int64] */
}

def @func_8179(%var_8177: Tensor[(1440), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1440), float64]) {
  @func_8176(%var_8177) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1440), float64]) */
}

def @func_9207() -> (Tensor[(15, 1, 16), float64],) {
  %661 = @func_8484() /* ty=Tensor[(15, 1, 16), float64] */;
  (%661,)
}

def @func_8414(%var_8411: uint64, %var_8412: Tensor[(3, 9, 4), uint64], %var_8413: Tensor[(3, 9, 4), bool]) -> (Tensor[(3, 9, 4), int64], Tensor[(15, 1, 16), float64]) {
  @func_8409(%var_8411, %var_8412, %var_8413) /* ty=(Tensor[(3, 9, 4), int64], Tensor[(15, 1, 16), float64]) */
}

def @func_5197() -> Tensor[(15, 1, 16), float64] {
  %662 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %662.2
}

def @func_8279() -> (Tensor[(3, 6, 16), float64],) {
  %663 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %664 = %663.0;
  (%664,)
}

def @func_7053(%var_7051: Tensor[(15, 10, 16), float64]) -> Tensor[(15, 10, 16), float32] {
  @func_7050(%var_7051) /* ty=Tensor[(15, 10, 16), float32] */
}

def @func_9196() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %665 = @func_4685() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %666 = @func_6695() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %667 = %665.0;
  %668 = %666.0;
  (%667, %668)
}

def @func_1563() -> (Tensor[(15, 1, 16), float64],) {
  @func_1561() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_4999(%var_4998: Tensor[(1920), float64]) -> (Tensor[(3, 6, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(360, 1), float64]) {
  %679 = fn (%var_4989: Tensor[(1920), float64]) -> (Tensor[(3, 6, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(360, 1), float64]) {
    %669 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
    %670 = @func_4951() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %671 = cast(%var_4989, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %672 = reshape(%671, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %673 = @func_3555(%672) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1920), float64], Tensor[(360, 1), float32]) */;
    %674 = %673.3;
    %675 = cast(%674, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
    %676 = %669.0;
    %677 = %670.0;
    %678 = acosh(%675) /* ty=Tensor[(360, 1), float64] */;
    (%676, %677, %var_4989, %678)
  };
  %679(%var_4998) /* ty=(Tensor[(3, 6, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(1920), float64], Tensor[(360, 1), float64]) */
}

def @func_3496() -> Tensor[(15, 1, 16), float64] {
  %680 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %680.0
}

def @func_5464(%var_5457: Tensor[(15, 11, 6), float64], %var_5458: Tensor[(15, 11, 6), float64]) -> Tensor[(15, 11, 6), bool] {
  %681 = cast(%var_5458, dtype="bool") /* ty=Tensor[(15, 11, 6), bool] */;
  %682 = shape_of(%var_5457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%var_5457, dtype="bool") /* ty=Tensor[(15, 11, 6), bool] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%683, %684) /* ty=Tensor[(15, 11, 6), bool] */
}

def @func_2008() -> (Tensor[(15, 1, 16), float64],) {
  @func_2006() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_6426() -> (Tensor[(15, 4, 16), bool], Tensor[(15, ?, 16), int8], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), float64]) {
  @func_6424() /* ty=(Tensor[(15, 4, 16), bool], Tensor[(15, ?, 16), int8], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), float64]) */
}

def @func_2904() -> (Tensor[(15, ?, 16), bool],) {
  @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_3535() -> Tensor[(3, 6, 16), float64] {
  @func_3533() /* ty=Tensor[(3, 6, 16), float64] */
}

def @func_5826() -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), float64]) {
  @func_5824() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), float64]) */
}

def @func_3368() -> (Tensor[(3, 6, 16), float64],) {
  @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */
}

def @func_4108() -> (Tensor[(15, ?, 16), bool],) {
  %686 = fn () -> (Tensor[(15, ?, 16), bool],) {
    %685 = @func_2953() /* ty=Tensor[(15, ?, 16), bool] */;
    (%685,)
  };
  %686() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_7240() -> (Tensor[(15, 15, 16), uint16], Tensor[(15, 11, 6), bool], Tensor[(10, 99), float64], Tensor[(15, 1, 16), float64]) {
  %698 = fn () -> (Tensor[(15, 15, 16), uint16], Tensor[(15, 11, 6), bool], Tensor[(10, 99), float64], Tensor[(15, 1, 16), float64]) {
    %687 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
    %688 = cast(%687, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
    %689 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 15, 16), float64] */, dtype="uint16") /* ty=Tensor[(15, 15, 16), uint16] */;
    %690 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 99), float64] */, dtype="float64") /* ty=Tensor[(10, 99), float64] */;
    %691 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 99), float64] */, dtype="float64") /* ty=Tensor[(10, 99), float64] */;
    %692 = reshape(%690, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), float64] */;
    %693 = reshape(%691, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), float64] */;
    %694 = @func_6660() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %695 = bitwise_and(%688, %689) /* ty=Tensor[(15, 15, 16), uint16] */;
    %696 = @func_5464(%692, %693) /* ty=Tensor[(15, 11, 6), bool] */;
    %697 = %694.2;
    (%695, %696, meta[relay.Constant][21] /* ty=Tensor[(10, 99), float64] */, %697)
  };
  %698() /* ty=(Tensor[(15, 15, 16), uint16], Tensor[(15, 11, 6), bool], Tensor[(10, 99), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_4606() -> Tensor[(15, 1, 16), float64] {
  @func_4604() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_1709() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_1707() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_5540() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) {
  @func_5538() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) */
}

def @func_7326() -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), uint8], Tensor[(15, 1, 16), float64]) {
  @func_7324() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), uint8], Tensor[(15, 1, 16), float64]) */
}

def @func_4546() -> (Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), int64], Tensor[(15, 1, 16), float32]) {
  @func_4544() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), int64], Tensor[(15, 1, 16), float32]) */
}

def @func_2953() -> Tensor[(15, ?, 16), bool] {
  %699 = @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %699.0
}

def @func_3872(%var_3855: Tensor[(7, 3, 4), float32], %var_3856: Tensor[(7, 3, 4), float32]) -> (Tensor[(7, 3, 4), float64], Tensor[(15, 1, 16), float64]) {
  %700 = cast(%var_3856, dtype="bool") /* ty=Tensor[(7, 3, 4), bool] */;
  %701 = shape_of(%var_3855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%var_3855, dtype="bool") /* ty=Tensor[(7, 3, 4), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %704 = equal(%702, %703) /* ty=Tensor[(7, 3, 4), bool] */;
  %705 = cast(%704, dtype="float64") /* ty=Tensor[(7, 3, 4), float64] */;
  %706 = @func_2869() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool]) */;
  %707 = exp(%705) /* ty=Tensor[(7, 3, 4), float64] */;
  %708 = %706.0;
  (%707, %708)
}

def @func_3838(%var_3836: Tensor[(11, 5, 3), int8], %var_3837: Tensor[(15, 11, 16), float64]) -> (Tensor[(11, 5, 3), int8], Tensor[(15, 11, 16), bool]) {
  %724 = fn (%var_3801: Tensor[(11, 5, 3), int8], %var_3819: Tensor[(15, 11, 16), float64]) -> (Tensor[(11, 5, 3), int8], Tensor[(15, 11, 16), bool]) {
    %709 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 5, 3), int8] */, dtype="int8") /* ty=Tensor[(11, 5, 3), int8] */;
    %710 = shape_of(%var_3801, dtype="int32") /* ty=Tensor[(3), int32] */;
    %711 = cast(%var_3801, dtype="int8") /* ty=Tensor[(11, 5, 3), int8] */;
    %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %713 = @func_1683() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
    %714 = %713.1;
    %715 = cast(%714, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
    %716 = cast(%var_3819, dtype="float32") /* ty=Tensor[(15, 11, 16), float32] */;
    %717 = floor_mod(%715, %716) /* ty=Tensor[(15, 11, 16), float32] */;
    %718 = cast(%var_3819, dtype="bool") /* ty=Tensor[(15, 11, 16), bool] */;
    %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%717, dtype="bool") /* ty=Tensor[(15, 11, 16), bool] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %722 = bitwise_or(%711, %712) /* ty=Tensor[(11, 5, 3), int8] */;
    %723 = less(%720, %721) /* ty=Tensor[(15, 11, 16), bool] */;
    (%722, %723)
  };
  %724(%var_3836, %var_3837) /* ty=(Tensor[(11, 5, 3), int8], Tensor[(15, 11, 16), bool]) */
}

def @func_9335(%var_9314: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), float32], Tensor[(15, 1, 16), float64]) {
  %725 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %726 = %725.0;
  %727 = cast(%726, dtype="uint64") /* ty=Tensor[(15, 1, 16), uint64] */;
  %728 = cast(%var_9314, dtype="uint64") /* ty=Tensor[(15, 6, 16), uint64] */;
  %729 = logical_xor(%727, %728) /* ty=Tensor[(15, 6, 16), uint64] */;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(15, 6, 16), float32] */;
  %731 = @func_2223() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %732 = rsqrt(%730) /* ty=Tensor[(15, 6, 16), float32] */;
  %733 = %731.0;
  (%732, %733)
}

def @func_1471() -> Tensor[(15, 1, 16), float64] {
  %734 = fn () -> Tensor[(15, 1, 16), float64] {
    @func_1417() /* ty=Tensor[(15, 1, 16), float64] */
  };
  %734() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_6697() -> (Tensor[(15, 1, 16), float64],) {
  @func_6695() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_9151() -> Tensor[(15, 1, 16), float64] {
  @func_9149() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_4709() -> (Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64]) {
  %739 = fn () -> (Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64]) {
    %735 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
    %736 = @func_3606() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64]) */;
    %737 = %735.0;
    %738 = %736.2;
    (%737, %738)
  };
  %739() /* ty=(Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_2158() -> (Tensor[(15, 1, 16), float64],) {
  @func_2156() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_8723(%var_8719: Tensor[(288), float64], %var_8720: Tensor[(15, 7, 16), bool], %var_8721: Tensor[(700), float64], %var_8722: Tensor[(72), uint64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(288), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 7, 16), float32], Tensor[(15, 1, 16), float64], Tensor[(700), float64], Tensor[(15, 7, 16), float32], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(72), uint64], Tensor[(15, ?, 16), bool]) {
  @func_8717(%var_8719, %var_8720, %var_8721, %var_8722) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(288), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 7, 16), float32], Tensor[(15, 1, 16), float64], Tensor[(700), float64], Tensor[(15, 7, 16), float32], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(72), uint64], Tensor[(15, ?, 16), bool]) */
}

def @func_5973(%var_5971: Tensor[(96), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) {
  @func_5970(%var_5971) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) */
}

def @func_9762(%var_9740: Tensor[(15, 5, 16), float64]) -> (Tensor[(15, 5, 16), bool], Tensor[(15, 5, 16), int64], Tensor[(15, 1, 16), float64]) {
  %740 = @func_7393() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %741 = %740.0;
  %742 = cast(%741, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %743 = cast(%var_9740, dtype="bool") /* ty=Tensor[(15, 5, 16), bool] */;
  %744 = cast(%741, dtype="int64") /* ty=Tensor[(15, 1, 16), int64] */;
  %745 = cast(%var_9740, dtype="int64") /* ty=Tensor[(15, 5, 16), int64] */;
  %746 = less_equal(%742, %743) /* ty=Tensor[(15, 5, 16), bool] */;
  %747 = bitwise_and(%744, %745) /* ty=Tensor[(15, 5, 16), int64] */;
  %748 = @func_6355() /* ty=Tensor[(15, 1, 16), float64] */;
  (%746, %747, %748)
}

def @func_4086(%var_4084: Tensor[(96), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) {
  @func_4083(%var_4084) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) */
}

def @func_2982(%var_2980: Tensor[(9, 5, 6), float32]) -> Tensor[(9, 5, 6), float32] {
  @func_2979(%var_2980) /* ty=Tensor[(9, 5, 6), float32] */
}

def @func_8254(%var_8252: Tensor[(1, 72), uint64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 72), float32]) {
  @func_8251(%var_8252) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 72), float32]) */
}

def @func_3533() -> Tensor[(3, 6, 16), float64] {
  %749 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %749.0
}

def @func_3295(%var_3293: Tensor[(3, 3, 8), uint64]) -> (Tensor[(3, 3, 8), uint64], Tensor[(15, 1, 16), float64]) {
  @func_3292(%var_3293) /* ty=(Tensor[(3, 3, 8), uint64], Tensor[(15, 1, 16), float64]) */
}

def @func_6846() -> Tensor[(15, 1, 16), float64] {
  %750 = fn () -> Tensor[(15, 1, 16), float64] {
    @func_1470() /* ty=Tensor[(15, 1, 16), float64] */
  };
  %750() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_8484() -> Tensor[(15, 1, 16), float64] {
  %751 = @func_7393() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %751.0
}

def @func_6933(%var_6891: Tensor[(3, 6, 16), float64]) -> (Tensor[(3, 6, 16), float64],) {
  %752 = @func_4708() /* ty=(Tensor[(3, 6, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %753 = %752.0;
  %754 = cast(%var_6891, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%753, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %758 = divide(%756, %757) /* ty=Tensor[(3, 6, 16), float64] */;
  (%758,)
}

def @func_5824() -> (Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), float64]) {
  %759 = @func_4951() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %760 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
  %761 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
  %762 = %759.0;
  %763 = %760.0;
  (%761, %762, %763)
}

def @func_1110() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %768 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %764 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %765 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %766 = asin(%764) /* ty=Tensor[(15, 1, 16), float64] */;
    %767 = tan(%765) /* ty=Tensor[(15, 1, 16), float64] */;
    (%766, %767)
  };
  %768() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_5586(%var_5584: Tensor[(14, 5, 10), float64]) -> (Tensor[(14, 5, 10), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_5583(%var_5584) /* ty=(Tensor[(14, 5, 10), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_9362() -> (Tensor[(15, ?, 16), bool],) {
  %770 = fn () -> (Tensor[(15, ?, 16), bool],) {
    %769 = @func_3650() /* ty=Tensor[(15, ?, 16), bool] */;
    (%769,)
  };
  %770() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_6256() -> Tensor[(15, 1, 16), float64] {
  %772 = fn () -> Tensor[(15, 1, 16), float64] {
    %771 = @func_5824() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(3, 6, 16), float64]) */;
    %771.0
  };
  %772() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_2594() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %778 = fn () -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %773 = @func_1417() /* ty=Tensor[(15, 1, 16), float64] */;
    %774 = cast(%773, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %775 = @func_1524() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %776 = log2(%774) /* ty=Tensor[(15, 1, 16), float64] */;
    %777 = %775.0;
    (%776, %777)
  };
  %778() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_7336() -> Tensor[(15, 1, 16), float64] {
  @func_7334() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_6621() -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(16, 6), float32]) {
  %779 = @func_5858() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %780 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 6), float32] */;
  %781 = reshape(%780, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %782 = %779.0;
  %783 = @func_3105(%781) /* ty=Tensor[(12, 1, 8), float32] */;
  (%782, %783, meta[relay.Constant][24] /* ty=Tensor[(16, 6), float32] */)
}

def @func_4200(%var_4199: Tensor[(15, 12, 16), float64]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, 12, 16), bool]) {
  %790 = fn (%var_4190: Tensor[(15, 12, 16), float64]) -> (Tensor[(15, ?, 16), bool], Tensor[(15, 12, 16), bool]) {
    %784 = @func_3354() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %785 = %784.1;
    %786 = cast(%785, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %787 = cast(%var_4190, dtype="bool") /* ty=Tensor[(15, 12, 16), bool] */;
    %788 = @func_2953() /* ty=Tensor[(15, ?, 16), bool] */;
    %789 = less_equal(%786, %787) /* ty=Tensor[(15, 12, 16), bool] */;
    (%788, %789)
  };
  %790(%var_4199) /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 12, 16), bool]) */
}

def @func_2766() -> (Tensor[(15, 1, 16), float64],) {
  %793 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %791 = @func_1159() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %792 = %791.0;
    (%792,)
  };
  %793() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_5512() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %794 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %795 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %796 = %794.0;
  %797 = %795.0;
  (%796, %797)
}

def @func_7018() -> (Tensor[(15, ?, 16), bool],) {
  %800 = fn () -> (Tensor[(15, ?, 16), bool],) {
    %798 = @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %799 = %798.0;
    (%799,)
  };
  %800() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_6623() -> (Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(16, 6), float32]) {
  @func_6621() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(16, 6), float32]) */
}

def @func_5745() -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %801 = @func_2902() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %802 = @func_2223() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %803 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %804 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %805 = %801.0;
  %806 = %802.0;
  %807 = %803.0;
  %808 = %804.0;
  (%805, %806, %807, %808)
}

def @func_4807(%var_4806: Tensor[(728), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) {
  %818 = fn (%var_4803: Tensor[(728), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) {
    %809 = @func_3366() /* ty=(Tensor[(3, 6, 16), float64],) */;
    %810 = cast(%var_4803, dtype="float64") /* ty=Tensor[(728), float64] */;
    %811 = cast(%var_4803, dtype="float64") /* ty=Tensor[(728), float64] */;
    %812 = reshape(%810, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float64] */;
    %813 = reshape(%811, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float64] */;
    %814 = @func_3678(%812, %813) /* ty=(Tensor[(8, 7, 13), bool],) */;
    %815 = @func_3496() /* ty=Tensor[(15, 1, 16), float64] */;
    %816 = %809.0;
    %817 = %814.0;
    (%815, %816, %817, %var_4803)
  };
  %818(%var_4806) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(8, 7, 13), bool], Tensor[(728), float64]) */
}

def @func_2632() -> (Tensor[(15, 1, 16), float64],) {
  %819 = @func_1381() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %820 = %819.0;
  (%820,)
}

def @func_5468(%var_5466: Tensor[(15, 11, 6), float64], %var_5467: Tensor[(15, 11, 6), float64]) -> Tensor[(15, 11, 6), bool] {
  @func_5464(%var_5466, %var_5467) /* ty=Tensor[(15, 11, 6), bool] */
}

def @func_4687() -> (Tensor[(15, 1, 16), float64],) {
  @func_4685() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_5514() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_5512() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_6229() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_3961() -> Tensor[(15, 1, 16), float64] {
  @func_3959() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_2224() -> (Tensor[(15, 1, 16), float64],) {
  %822 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %821 = @func_1470() /* ty=Tensor[(15, 1, 16), float64] */;
    (%821,)
  };
  %822() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_7334() -> Tensor[(15, 1, 16), float64] {
  %823 = @func_6139() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %823.3
}

def @func_3557(%var_3556: Tensor[(1920), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1920), float64], Tensor[(360, 1), float32]) {
  %831 = fn (%var_3551: Tensor[(1920), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1920), float64], Tensor[(360, 1), float32]) {
    %824 = cast(%var_3551, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %825 = cast(meta[relay.Constant][25] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
    %826 = reshape(%824, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float64] */;
    %827 = reshape(%825, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %828 = @func_3230(%826, %827) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 8, 16), int16], Tensor[(2, 12, 15), float32], Tensor[(360), float32], Tensor[(15, 1, 16), float64]) */;
    %829 = @func_3060() /* ty=Tensor[(15, 1, 16), float64] */;
    %830 = %828.0;
    (%829, %830, %var_3551, meta[relay.Constant][25] /* ty=Tensor[(360, 1), float32] */)
  };
  %831(%var_3556) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1920), float64], Tensor[(360, 1), float32]) */
}

def @func_8549(%var_8548: Tensor[(15, 7, 16), float64]) -> (Tensor[(15, 7, 16), float32],) {
  %837 = fn (%var_8541: Tensor[(15, 7, 16), float64]) -> (Tensor[(15, 7, 16), float32],) {
    %832 = @func_7106() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(728), float64]) */;
    %833 = %832.1;
    %834 = cast(%833, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
    %835 = cast(%var_8541, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
    %836 = divide(%834, %835) /* ty=Tensor[(15, 7, 16), float32] */;
    (%836,)
  };
  %837(%var_8548) /* ty=(Tensor[(15, 7, 16), float32],) */
}

def @func_4604() -> Tensor[(15, 1, 16), float64] {
  %838 = @func_1585() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %838.0
}

def @func_4441(%var_4439: Tensor[(15, 3, 16), bool]) -> (Tensor[(15, 3, 16), float32], Tensor[(15, ?, 16), bool]) {
  @func_4438(%var_4439) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(15, ?, 16), bool]) */
}

def @func_7692(%var_7691: Tensor[(396), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 11, 12), float64], Tensor[(3, 11, 12), float32]) {
  %850 = fn (%var_7633: Tensor[(396), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 11, 12), float64], Tensor[(3, 11, 12), float32]) {
    %839 = cast(%var_7633, dtype="float64") /* ty=Tensor[(396), float64] */;
    %840 = reshape(%839, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float64] */;
    %841 = @func_3242(%840) /* ty=Tensor[(3, 11, 12), float64] */;
    %842 = cast(%var_7633, dtype="float64") /* ty=Tensor[(396), float64] */;
    %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
    %844 = cast(%841, dtype="float64") /* ty=Tensor[(3, 11, 12), float64] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %846 = cast(%841, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
    %847 = @func_6255() /* ty=Tensor[(15, 1, 16), float64] */;
    %848 = divide(%844, %845) /* ty=Tensor[(3, 11, 12), float64] */;
    %849 = exp(%846) /* ty=Tensor[(3, 11, 12), float32] */;
    (%847, %848, %849)
  };
  %850(%var_7691) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 11, 12), float64], Tensor[(3, 11, 12), float32]) */
}

def @func_2789() -> (Tensor[(15, 1, 16), float64],) {
  %853 = fn () -> (Tensor[(15, 1, 16), float64],) {
    %851 = @func_1608() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %852 = %851.0;
    (%852,)
  };
  %853() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_8717(%var_8609: Tensor[(288), float64], %var_8661: Tensor[(15, 7, 16), bool], %var_8678: Tensor[(700), float64], %var_8711: Tensor[(72), uint64]) -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64], Tensor[(288), float64], Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), bool], Tensor[(15, 7, 16), float32], Tensor[(15, 1, 16), float64], Tensor[(700), float64], Tensor[(15, 7, 16), float32], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(72), uint64], Tensor[(15, ?, 16), bool]) {
  %854 = @func_2765() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %855 = cast(%var_8609, dtype="float64") /* ty=Tensor[(288), float64] */;
  %856 = reshape(%855, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float64] */;
  %857 = @func_6933(%856) /* ty=(Tensor[(3, 6, 16), float64],) */;
  %858 = @func_1650() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %859 = @func_1872() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %860 = @func_4895() /* ty=Tensor[(15, ?, 16), bool] */;
  %861 = cast(%860, dtype="float32") /* ty=Tensor[(15, ?, 16), float32] */;
  %862 = cast(%var_8661, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %863 = subtract(%861, %862) /* ty=Tensor[(15, 7, 16), float32] */;
  %864 = cast(%863, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %865 = cast(%var_8678, dtype="float64") /* ty=Tensor[(700), float64] */;
  %866 = reshape(%865, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), float64] */;
  %867 = @func_5583(%866) /* ty=(Tensor[(14, 5, 10), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %868 = cast(%863, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %869 = @func_5858() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %870 = @func_6424() /* ty=(Tensor[(15, 4, 16), bool], Tensor[(15, ?, 16), int8], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), float64]) */;
  %871 = cast(%var_8711, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %872 = reshape(%871, newshape=[1, 72]) /* ty=Tensor[(1, 72), uint64] */;
  %873 = @func_8251(%872) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(1, 72), float32]) */;
  %874 = @func_7017() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %875 = %854.0;
  %876 = %857.0;
  %877 = %858.0;
  %878 = %859.0;
  %879 = asin(%864) /* ty=Tensor[(15, 7, 16), float32] */;
  %880 = %867.1;
  %881 = sigmoid(%868) /* ty=Tensor[(15, 7, 16), float32] */;
  %882 = %869.0;
  %883 = %870.0;
  %884 = %873.1;
  %885 = %874.0;
  (%875, %876, %var_8609, %877, %878, %879, %880, %var_8678, %881, %882, %883, %884, %var_8711, %885)
}

def @func_6044(%var_6043: Tensor[(2, 14, 12), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(2, 14, 12), uint32]) {
  %896 = fn (%var_5995: Tensor[(2, 14, 12), float32]) -> (Tensor[(15, 1, 16), float64], Tensor[(2, 14, 12), uint32]) {
    %886 = cast(%var_5995, dtype="float32") /* ty=Tensor[(2, 14, 12), float32] */;
    %887 = atan(%886) /* ty=Tensor[(2, 14, 12), float32] */;
    %888 = cast(%var_5995, dtype="float64") /* ty=Tensor[(2, 14, 12), float64] */;
    %889 = cosh(%888) /* ty=Tensor[(2, 14, 12), float64] */;
    %890 = cast(%889, dtype="uint32") /* ty=Tensor[(2, 14, 12), uint32] */;
    %891 = shape_of(%887, dtype="int32") /* ty=Tensor[(3), int32] */;
    %892 = cast(%887, dtype="uint32") /* ty=Tensor[(2, 14, 12), uint32] */;
    %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %894 = @func_4604() /* ty=Tensor[(15, 1, 16), float64] */;
    %895 = right_shift(%892, %893) /* ty=Tensor[(2, 14, 12), uint32] */;
    (%894, %895)
  };
  %896(%var_6043) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(2, 14, 12), uint32]) */
}

def @func_3029(%var_3027: Tensor[(15, 11, 16), float64]) -> (Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) {
  @func_3026(%var_3027) /* ty=(Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) */
}

def @func_5036(%var_5020: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, ?, 16), uint16], Tensor[(15, 1, 16), float64]) {
  %897 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %898 = %897.0;
  %899 = cast(%var_5020, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%898, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %903 = @func_4685() /* ty=(Tensor[(15, 1, 16), float64],) */;
  %904 = bitwise_xor(%901, %902) /* ty=Tensor[(15, ?, 16), uint16] */;
  %905 = %903.0;
  (%904, %905)
}

def @func_5747() -> (Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_5745() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_6140() -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  %917 = fn () -> (Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
    %906 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
    %907 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 60), bool] */, dtype="bool") /* ty=Tensor[(12, 60), bool] */;
    %908 = reshape(%907, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), bool] */;
    %909 = @func_4438(%908) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(15, ?, 16), bool]) */;
    %910 = @func_4154() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %911 = @func_2632() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %912 = %906.0;
    %913 = %909.1;
    %914 = %910.0;
    %915 = %911.0;
    %916 = @func_3313() /* ty=Tensor[(15, 1, 16), float64] */;
    (%912, %913, meta[relay.Constant][26] /* ty=Tensor[(12, 60), bool] */, %914, %915, %916)
  };
  %917() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, ?, 16), bool], Tensor[(12, 60), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_3678(%var_3655: Tensor[(8, 7, 13), float64], %var_3656: Tensor[(8, 7, 13), float64]) -> (Tensor[(8, 7, 13), bool],) {
  %918 = cast(%var_3656, dtype="bool") /* ty=Tensor[(8, 7, 13), bool] */;
  %919 = shape_of(%var_3655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%var_3655, dtype="bool") /* ty=Tensor[(8, 7, 13), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = less(%920, %921) /* ty=Tensor[(8, 7, 13), bool] */;
  (%922,)
}

def @func_9678() -> (Tensor[(15, 1, 16), float64],) {
  @func_9676() /* ty=(Tensor[(15, 1, 16), float64],) */
}

def @func_6355() -> Tensor[(15, 1, 16), float64] {
  %923 = @func_1274() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %923.0
}

def @func_3156(%var_3154: Tensor[(2304), float64]) -> (Tensor[(8, 14, 7), float32], Tensor[(15, 1, 16), float64], Tensor[(12, 12, 16), float64], Tensor[(2304), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_3153(%var_3154) /* ty=(Tensor[(8, 14, 7), float32], Tensor[(15, 1, 16), float64], Tensor[(12, 12, 16), float64], Tensor[(2304), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_6676() -> (Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64]) {
  @func_6674() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64]) */
}

def @func_6662() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_6660() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_5374(%var_5371: Tensor[(16, 6), float32], %var_5372: Tensor[(180, 2), float32], %var_5373: Tensor[(3840), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(96), float32], Tensor[(16, 6), float32], Tensor[(3840), uint64], Tensor[(180, 2), bool]) {
  %945 = fn (%var_5303: Tensor[(16, 6), float32], %var_5313: Tensor[(180, 2), float32], %var_5323: Tensor[(3840), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(96), float32], Tensor[(16, 6), float32], Tensor[(3840), uint64], Tensor[(180, 2), bool]) {
    %924 = cast(%var_5303, dtype="float32") /* ty=Tensor[(16, 6), float32] */;
    %925 = reshape(%924, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %926 = @func_4083(%925) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(12, 1, 8), float32], Tensor[(96), float32]) */;
    %927 = cast(%var_5323, dtype="uint64") /* ty=Tensor[(3840), uint64] */;
    %928 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(3840), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %929 = cast(meta[relay.Constant][27] /* ty=Tensor[(3840), float64] */, dtype="uint64") /* ty=Tensor[(3840), uint64] */;
    %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %931 = cast(%var_5313, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
    %932 = cast(meta[relay.Constant][27] /* ty=Tensor[(3840), float64] */, dtype="float64") /* ty=Tensor[(3840), float64] */;
    %933 = reshape(%931, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %934 = reshape(%932, newshape=[3840]) /* ty=Tensor[(3840), float64] */;
    %935 = @func_4839(%933, %934) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 16, 16), uint16], Tensor[(360), float32], Tensor[(3840), float64]) */;
    %936 = %935.2;
    %937 = cast(%936, dtype="bool") /* ty=Tensor[(360), bool] */;
    %938 = shape_of(%var_5313, dtype="int32") /* ty=Tensor[(2), int32] */;
    %939 = cast(%var_5313, dtype="bool") /* ty=Tensor[(180, 2), bool] */;
    %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %941 = @func_5197() /* ty=Tensor[(15, 1, 16), float64] */;
    %942 = %926.2;
    %943 = right_shift(%929, %930) /* ty=Tensor[(3840), uint64] */;
    %944 = greater_equal(%939, %940) /* ty=Tensor[(180, 2), bool] */;
    (%941, %942, %var_5303, %943, %944)
  };
  %945(%var_5371, %var_5372, %var_5373) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(96), float32], Tensor[(16, 6), float32], Tensor[(3840), uint64], Tensor[(180, 2), bool]) */
}

def @func_2180(%var_2178: Tensor[(2, 12, 15), float32]) -> (Tensor[(2, 12, 15), float32],) {
  @func_2177(%var_2178) /* ty=(Tensor[(2, 12, 15), float32],) */
}

def @func_4438(%var_4427: Tensor[(15, 3, 16), bool]) -> (Tensor[(15, 3, 16), float32], Tensor[(15, ?, 16), bool]) {
  %946 = @func_4107() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %947 = %946.0;
  %948 = cast(%947, dtype="float32") /* ty=Tensor[(15, ?, 16), float32] */;
  %949 = cast(%var_4427, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
  %950 = floor_mod(%948, %949) /* ty=Tensor[(15, 3, 16), float32] */;
  %951 = @func_2953() /* ty=Tensor[(15, ?, 16), bool] */;
  (%950, %951)
}

def @func_4754(%var_4753: Tensor[(132, 20), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64]) {
  %963 = fn (%var_4741: Tensor[(132, 20), float64]) -> (Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64]) {
    %952 = @func_4685() /* ty=(Tensor[(15, 1, 16), float64],) */;
    %953 = cast(%var_4741, dtype="float64") /* ty=Tensor[(132, 20), float64] */;
    %954 = reshape(%953, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
    %955 = @func_3026(%954) /* ty=(Tensor[(15, 11, 16), float64], Tensor[(15, 11, 16), bool]) */;
    %956 = %955.0;
    %957 = cast(%956, dtype="uint64") /* ty=Tensor[(15, 11, 16), uint64] */;
    %958 = shape_of(%var_4741, dtype="int32") /* ty=Tensor[(2), int32] */;
    %959 = cast(%var_4741, dtype="uint64") /* ty=Tensor[(132, 20), uint64] */;
    %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %961 = %952.0;
    %962 = bitwise_or(%959, %960) /* ty=Tensor[(132, 20), uint64] */;
    (%961, %962)
  };
  %963(%var_4753) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(132, 20), uint64]) */
}

def @func_4785() -> (Tensor[(15, ?, 16), bool],) {
  @func_4783() /* ty=(Tensor[(15, ?, 16), bool],) */
}

def @func_6424() -> (Tensor[(15, 4, 16), bool], Tensor[(15, ?, 16), int8], Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 4, 16), float64]) {
  %964 = @func_1109() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %965 = %964.0;
  %966 = cast(%965, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %967 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 4, 16), float64] */, dtype="bool") /* ty=Tensor[(15, 4, 16), bool] */;
  %968 = cast(%965, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %969 = reshape(%968, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %970 = @func_1235(%969) /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, ?, 16), int8]) */;
  %971 = @func_4951() /* ty=(Tensor[(15, ?, 16), bool],) */;
  %972 = @func_6227() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
  %973 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 4, 16), float64] */;
  %974 = less_equal(%966, %967) /* ty=Tensor[(15, 4, 16), bool] */;
  %975 = %970.1;
  %976 = %971.0;
  %977 = %972.0;
  %978 = erf(%973) /* ty=Tensor[(15, 4, 16), float64] */;
  (%974, %975, %976, %977, %978)
}

def @func_5251() -> Tensor[(15, 1, 16), float64] {
  %980 = fn () -> Tensor[(15, 1, 16), float64] {
    %979 = @func_1872() /* ty=(Tensor[(15, ?, 16), bool], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */;
    %979.3
  };
  %980() /* ty=Tensor[(15, 1, 16), float64] */
}

def @func_7393() -> (Tensor[(15, 1, 16), float64],) {
  %981 = @func_6674() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(3, 6, 16), float64]) */;
  %982 = %981.0;
  (%982,)
}

def @func_2979(%var_2969: Tensor[(9, 5, 6), float32]) -> Tensor[(9, 5, 6), float32] {
  %983 = cast(%var_2969, dtype="float32") /* ty=Tensor[(9, 5, 6), float32] */;
  %984 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(9, 5, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %985 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 5, 6), float32] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%985, %986) /* ty=Tensor[(9, 5, 6), float32] */
}

def @func_7158() -> (Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) {
  @func_7156() /* ty=(Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64], Tensor[(15, 1, 16), float64]) */
}

def @func_8011(%var_8009: Tensor[(15, 7, 16), float64]) -> (Tensor[(15, 7, 16), uint8],) {
  @func_8008(%var_8009) /* ty=(Tensor[(15, 7, 16), uint8],) */
}

def @func_3464() -> (Tensor[(15, 1, 16), float64],) {
  @func_3462() /* ty=(Tensor[(15, 1, 16), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_359 = relay.var("var_359", dtype = "uint16", shape = (9, 9, 4))#candidate|359|(9, 9, 4)|var|uint16
var_360 = relay.var("var_360", dtype = "uint16", shape = (9, 9, 4))#candidate|360|(9, 9, 4)|var|uint16
bop_361 = relay.bitwise_xor(var_359.astype('uint16'), relay.reshape(var_360.astype('uint16'), relay.shape_of(var_359))) # shape=(9, 9, 4)
output = bop_361
output2 = bop_361
func_377 = relay.Function([var_359,var_360,], output)
mod['func_377'] = func_377
mod = relay.transform.InferType()(mod)
mutated_mod['func_377'] = func_377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_377_call = mutated_mod.get_global_var('func_377')
var_379 = relay.var("var_379", dtype = "uint16", shape = (9, 9, 4))#candidate|379|(9, 9, 4)|var|uint16
var_380 = relay.var("var_380", dtype = "uint16", shape = (9, 9, 4))#candidate|380|(9, 9, 4)|var|uint16
call_378 = func_377_call(var_379,var_380,)
output = call_378
func_381 = relay.Function([var_379,var_380,], output)
mutated_mod['func_381'] = func_381
mutated_mod = relay.transform.InferType()(mutated_mod)
const_399 = relay.const([[[-4.978363,6.199649,0.251969,1.817501,8.436304,1.810416,-6.846448,3.328451,4.951876,-9.720603,-1.191982,4.125972,9.379148,2.799683,2.420959,-4.230316],[-7.386822,-0.511165,-4.034091,-5.243698,-5.926007,-7.205383,-9.016904,8.022184,4.048377,9.587648,-8.530626,-8.492183,-4.958306,-0.690534,-6.946781,3.014497],[-0.925162,-6.234349,3.763587,-8.590746,4.746315,8.036144,-3.577784,5.971649,-5.484006,9.376852,8.605019,-1.917139,5.913679,-8.480523,-1.223415,-5.157392],[4.977467,4.993915,-6.479173,-3.486799,-2.069869,2.960103,-8.160575,-1.647426,-9.881773,-3.566231,6.371634,7.794375,9.215445,6.051687,-2.470366,-8.480909],[-9.575618,-1.208353,5.955861,-3.929090,-3.111783,-5.191030,7.886594,4.554854,9.940137,9.884978,8.995221,2.294734,-2.526801,-2.009716,2.926213,-6.388955],[-0.654728,-5.841979,-6.795071,6.515247,-2.248156,4.666548,-5.409754,2.211271,-7.220728,-1.550856,-6.314558,-6.199481,-6.981165,6.812898,3.736747,-1.211007],[-6.370844,4.232562,2.605068,-5.749285,6.009797,5.446661,-8.526972,9.512986,-1.742638,-8.642075,6.856787,0.362168,7.894130,4.059529,2.546925,-5.134977],[-9.090585,-8.916049,-9.141977,-6.727107,-1.374824,0.009823,-2.239081,-6.710629,9.773854,1.816189,6.638528,-4.356537,7.374845,-0.841927,8.269818,8.700394],[-2.340242,-8.015699,-6.253575,-0.456187,-1.510968,3.342311,-7.360934,5.319122,3.227613,4.356779,-5.657138,5.529354,1.042338,-1.135728,0.715775,0.685354],[9.968745,-1.525916,-3.278719,-5.823532,6.404329,5.828404,2.694403,6.453281,-1.045253,-6.621330,-1.360165,-7.972645,9.812657,4.476837,-6.600699,-4.037612]],[[-2.657374,1.730975,-1.971795,3.957804,-4.884495,5.801177,-1.853860,-0.307028,1.629782,8.788536,-5.846153,-3.750078,-7.394435,-4.216648,-6.652309,-3.921744],[-7.580482,5.758494,0.390379,-1.677307,7.699203,-2.146211,-9.909945,-2.881650,6.868850,0.953398,-1.011003,3.673818,4.460936,9.338282,-3.424918,-7.912665],[-1.626781,4.569109,7.825462,6.593127,-2.760746,-8.331916,-5.095958,-9.138406,-5.185934,9.029648,0.767211,9.667645,5.956064,-3.024201,-0.138486,-1.433958],[-2.905977,-6.793157,0.404520,4.463990,0.891924,-1.533009,-0.412968,6.581209,-0.775014,3.352006,9.364406,7.812241,-2.956054,6.500611,-5.865622,5.837518],[2.603678,-1.743081,3.568854,-5.645819,7.460020,-2.419743,-3.346133,-0.363487,-7.410364,-5.085051,-8.844146,-0.299590,-0.668845,8.914860,4.021934,8.941766],[0.522696,3.166696,1.122665,8.196745,-3.578852,1.615799,-3.494180,-6.604545,5.615292,-4.660604,-2.275447,-1.843040,-3.043403,5.623244,-0.248203,8.779067],[5.091903,-7.695966,-4.551469,4.585626,8.659081,0.138018,2.401624,5.651512,9.300854,-8.452510,-7.541724,-6.079166,4.590378,0.913124,-6.522335,8.075317],[0.603580,4.928264,1.207352,8.715255,4.774275,-7.699664,-5.849722,7.412342,-2.307311,1.495489,8.996925,6.160326,8.927129,-4.718935,6.194548,1.498587],[-1.272829,6.866327,-5.624109,-7.732864,2.544212,-5.774892,-9.020072,0.726630,7.359086,-9.738836,-2.485077,4.967151,-1.617352,-4.411934,4.203917,-6.597947],[-5.110622,-6.201644,-4.104066,-3.757493,6.403505,4.959200,-0.438490,-4.781556,8.245541,-1.382452,3.102052,-2.060739,-7.872226,8.495098,-0.054388,0.327479]],[[5.151943,0.081134,-2.310233,-2.650705,-4.762524,-4.340479,-0.410304,6.032493,7.742526,-8.072777,9.371266,-9.137834,3.046654,-4.936029,2.670884,-6.596360],[3.965940,2.967985,7.236198,6.117494,1.811113,-0.256986,4.454173,-0.091693,-4.779145,0.437296,0.197121,6.565805,1.434429,-2.632018,6.815459,-7.734689],[8.043450,-5.221792,5.444747,-8.388170,7.279747,-4.104511,-7.090105,7.021789,1.447256,1.316192,-9.845701,1.767594,-8.066278,8.107513,-0.156917,-1.553364],[3.021030,-4.208470,-2.439299,6.615905,-3.320027,-3.152001,-7.051568,1.880073,-0.480678,-6.657039,1.769103,9.912646,-0.546170,5.963611,-6.666208,-8.165180],[-3.034165,-1.357427,6.068633,8.283224,5.701680,3.902735,0.564082,-6.081804,7.075236,8.471038,-2.071525,-5.069841,2.438911,-9.717895,4.676771,9.955813],[4.406037,-7.693162,7.829341,-9.013528,-3.160758,3.102229,-9.218541,5.111255,-0.524169,-3.700464,0.791990,7.131872,-2.958720,-0.027997,-5.831600,-9.464503],[9.604240,4.047375,-6.548605,-3.828496,3.594121,-3.859464,5.864149,1.034953,-0.940235,-4.483193,-8.702756,-1.068004,8.201768,-2.689844,-9.436374,-3.878466],[9.113009,7.136283,2.801162,-7.471696,6.934271,7.589489,3.691038,-3.810826,-1.024446,4.502887,5.212132,-4.209405,8.910274,-9.770121,7.973577,4.729824],[-0.510935,-2.671395,-0.819099,-9.389950,9.401561,-0.917571,-8.204812,1.834460,-8.192480,5.613888,-2.628088,-5.138224,-4.285798,-5.764777,0.177188,7.511920],[-2.842863,-7.706353,-4.196332,-6.623762,-2.053482,-4.093822,8.486821,3.250891,0.151508,1.655506,-2.331580,7.126451,0.241900,-7.999445,5.801209,-7.514693]],[[2.417453,1.963003,-9.148122,-1.133772,-8.517552,4.694336,-0.088984,5.965923,-0.967017,5.058487,1.942162,9.682531,-3.695805,4.242154,5.643091,8.915771],[-8.363700,9.241460,-0.214927,3.381591,-7.529099,4.573666,-3.684150,-4.831548,1.899051,5.515728,-7.016518,1.237977,7.687800,5.142313,9.091340,1.584757],[0.868924,-3.149816,-9.821030,-5.214976,-2.613542,9.476124,1.856780,3.576213,-7.081509,2.492686,-2.104166,1.224067,1.496008,-4.434002,-0.974405,5.306796],[-5.653001,4.036194,8.597730,-5.805861,1.147956,-4.312409,9.125498,-2.740206,9.648759,5.644197,-6.320214,4.748474,9.308401,-0.414425,6.455338,4.890832],[7.441441,6.480989,-3.426405,5.651422,4.541772,-7.593528,3.707248,-0.763718,-5.879033,-5.187255,5.198725,6.034402,-0.733132,-2.320193,4.683545,7.661187],[-5.435581,3.598802,-3.158347,2.300047,7.203107,8.702362,-1.167235,8.212895,4.022127,8.493041,9.995680,1.407589,7.186708,1.224303,5.113825,3.587408],[6.836267,-9.360908,9.482080,-2.819485,-7.803850,-0.450763,1.410299,2.911007,4.055893,7.586714,8.390051,-1.356459,-4.559288,0.438945,5.141967,-0.302933],[-2.056323,-0.444379,-1.364000,-1.970799,-9.157311,9.933105,-4.608785,-6.296429,2.306553,-7.107028,-3.881908,3.464756,-7.007563,-0.302697,-5.224194,3.502954],[-8.217951,-0.181966,-6.661353,3.413858,9.067005,-0.904361,0.637126,-7.987246,7.111391,-2.472952,4.237520,-4.810408,-2.184497,2.849404,4.708595,2.017454],[3.796968,-8.846019,-2.223906,-1.171438,-2.697019,1.651788,-2.186777,2.433076,-4.361101,0.712856,1.215700,-1.528856,5.250161,-4.622554,-4.801033,-7.479883]]], dtype = "float32")#candidate|399|(4, 10, 16)|const|float32
uop_400 = relay.log2(const_399.astype('float32')) # shape=(4, 10, 16)
output = relay.Tuple([uop_400,])
output2 = relay.Tuple([uop_400,])
func_404 = relay.Function([], output)
mod['func_404'] = func_404
mod = relay.transform.InferType()(mod)
mutated_mod['func_404'] = func_404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_404_call = mutated_mod.get_global_var('func_404')
call_405 = func_404_call()
output = call_405
func_406 = relay.Function([], output)
mutated_mod['func_406'] = func_406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_404_call = mod.get_global_var('func_404')
func_406_call = mutated_mod.get_global_var('func_406')
call_412 = relay.TupleGetItem(func_404_call(), 0)
call_413 = relay.TupleGetItem(func_406_call(), 0)
func_377_call = mod.get_global_var('func_377')
func_381_call = mutated_mod.get_global_var('func_381')
const_441 = relay.const([[10],[2],[3],[10],[5],[4],[4],[8],[-7],[-5],[-9],[-8],[-9],[10],[-10],[-8],[-4],[10],[8],[-7],[5],[-6],[9],[9],[6],[2],[2],[-4],[4],[-4],[8],[-7],[-4],[-10],[-10],[-5],[10],[-2],[-7],[8],[6],[1],[-2],[6],[10],[-2],[-3],[1],[-9],[-10],[-7],[2],[10],[8],[-6],[3],[8],[7],[-10],[8],[4],[-6],[-1],[4],[9],[-9],[-1],[-6],[6],[10],[-2],[-3],[6],[10],[4],[4],[10],[-6],[-1],[2],[-6],[-6],[1],[-10],[8],[8],[-3],[-10],[-10],[7],[-2],[5],[4],[-2],[-4],[5],[-7],[-9],[-5],[-5],[8],[-4],[-6],[-2],[-9],[-2],[9],[-3],[-9],[-8],[-1],[-2],[-5],[7],[9],[6],[-7],[8],[7],[10],[8],[-6],[-9],[10],[4],[-2],[-2],[-3],[7],[-9],[-4],[-4],[5],[2],[2],[9],[2],[-9],[-4],[1],[-8],[5],[7],[-6],[-10],[1],[-2],[-4],[-8],[9],[6],[2],[-3],[3],[9],[-7],[4],[6],[4],[8],[-9],[-9],[-3],[-7],[7],[1],[-4],[-5],[3],[6],[9],[8],[7],[-7],[-5],[6],[-3],[4],[6],[-6],[-7],[-8],[1],[10],[9],[-5],[-1],[-4],[-4],[1],[7],[3],[2],[7],[-9],[3],[-10],[-7],[-4],[5],[2],[4],[3],[-4],[-2],[-8],[4],[-10],[-1],[6],[-7],[-7],[10],[10],[-10],[-1],[-8],[-8],[4],[10],[8],[-4],[9],[9],[-10],[1],[-4],[6],[2],[-1],[-4],[-7],[-7],[3],[-8],[9],[1],[8],[-9],[2],[-2],[7],[-3],[3],[3],[-10],[-6],[1],[-3],[-7],[7],[4],[-1],[-8],[9],[-10],[-6],[8],[-1],[7],[-7],[-5],[5],[8],[-10],[6],[1],[7],[-2],[2],[6],[-4],[-8],[2],[-7],[5],[5],[5],[-6],[7],[-8],[-5],[-2],[-2],[-7],[8],[6],[-6],[8],[4],[-6],[-7],[1],[-10],[-7],[-6],[9],[-5],[-4],[-7],[-1],[6],[9],[-10],[1],[-2],[6],[-7],[-5],[5],[3],[8],[-5],[-3],[10],[-1],[7],[8],[3],[-2],[-5],[1],[-8],[-8]], dtype = "uint16")#candidate|441|(324, 1)|const|uint16
call_440 = func_377_call(relay.reshape(const_441.astype('uint16'), [9, 9, 4]), relay.reshape(const_441.astype('uint16'), [9, 9, 4]), )
call_442 = func_377_call(relay.reshape(const_441.astype('uint16'), [9, 9, 4]), relay.reshape(const_441.astype('uint16'), [9, 9, 4]), )
output = relay.Tuple([call_412,call_440,const_441,])
output2 = relay.Tuple([call_413,call_442,const_441,])
func_445 = relay.Function([], output)
mod['func_445'] = func_445
mod = relay.transform.InferType()(mod)
output = func_445()
func_446 = relay.Function([], output)
mutated_mod['func_446'] = func_446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_472 = relay.var("var_472", dtype = "float64", shape = (9, 8, 2))#candidate|472|(9, 8, 2)|var|float64
uop_473 = relay.sin(var_472.astype('float64')) # shape=(9, 8, 2)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_491 = relay.TupleGetItem(func_445_call(), 1)
call_492 = relay.TupleGetItem(func_446_call(), 1)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_493 = relay.TupleGetItem(func_445_call(), 2)
call_494 = relay.TupleGetItem(func_446_call(), 2)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_496 = relay.TupleGetItem(func_445_call(), 1)
call_497 = relay.TupleGetItem(func_446_call(), 1)
output = relay.Tuple([uop_473,call_491,call_493,call_496,])
output2 = relay.Tuple([uop_473,call_492,call_494,call_497,])
func_501 = relay.Function([var_472,], output)
mod['func_501'] = func_501
mod = relay.transform.InferType()(mod)
var_502 = relay.var("var_502", dtype = "float64", shape = (9, 8, 2))#candidate|502|(9, 8, 2)|var|float64
output = func_501(var_502)
func_503 = relay.Function([var_502], output)
mutated_mod['func_503'] = func_503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_404_call = mod.get_global_var('func_404')
func_406_call = mutated_mod.get_global_var('func_406')
call_533 = relay.TupleGetItem(func_404_call(), 0)
call_534 = relay.TupleGetItem(func_406_call(), 0)
func_404_call = mod.get_global_var('func_404')
func_406_call = mutated_mod.get_global_var('func_406')
call_535 = relay.TupleGetItem(func_404_call(), 0)
call_536 = relay.TupleGetItem(func_406_call(), 0)
uop_543 = relay.atan(call_533.astype('float32')) # shape=(4, 10, 16)
uop_545 = relay.atan(call_534.astype('float32')) # shape=(4, 10, 16)
output = relay.Tuple([call_535,uop_543,])
output2 = relay.Tuple([call_536,uop_545,])
func_551 = relay.Function([], output)
mod['func_551'] = func_551
mod = relay.transform.InferType()(mod)
output = func_551()
func_552 = relay.Function([], output)
mutated_mod['func_552'] = func_552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_559 = relay.TupleGetItem(func_445_call(), 2)
call_560 = relay.TupleGetItem(func_446_call(), 2)
func_377_call = mod.get_global_var('func_377')
func_381_call = mutated_mod.get_global_var('func_381')
call_572 = func_377_call(relay.reshape(call_559.astype('uint16'), [9, 9, 4]), relay.reshape(call_559.astype('uint16'), [9, 9, 4]), )
call_573 = func_377_call(relay.reshape(call_559.astype('uint16'), [9, 9, 4]), relay.reshape(call_559.astype('uint16'), [9, 9, 4]), )
uop_576 = relay.sin(call_572.astype('float32')) # shape=(9, 9, 4)
uop_578 = relay.sin(call_573.astype('float32')) # shape=(9, 9, 4)
func_404_call = mod.get_global_var('func_404')
func_406_call = mutated_mod.get_global_var('func_406')
call_583 = relay.TupleGetItem(func_404_call(), 0)
call_584 = relay.TupleGetItem(func_406_call(), 0)
func_551_call = mod.get_global_var('func_551')
func_552_call = mutated_mod.get_global_var('func_552')
call_602 = relay.TupleGetItem(func_551_call(), 0)
call_603 = relay.TupleGetItem(func_552_call(), 0)
output = relay.Tuple([call_559,uop_576,call_583,call_602,])
output2 = relay.Tuple([call_560,uop_578,call_584,call_603,])
func_606 = relay.Function([], output)
mod['func_606'] = func_606
mod = relay.transform.InferType()(mod)
output = func_606()
func_607 = relay.Function([], output)
mutated_mod['func_607'] = func_607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_616 = relay.TupleGetItem(func_445_call(), 1)
call_617 = relay.TupleGetItem(func_446_call(), 1)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
var_623 = relay.var("var_623", dtype = "float64", shape = (144,))#candidate|623|(144,)|var|float64
call_622 = relay.TupleGetItem(func_501_call(relay.reshape(var_623.astype('float64'), [9, 8, 2])), 0)
call_624 = relay.TupleGetItem(func_503_call(relay.reshape(var_623.astype('float64'), [9, 8, 2])), 0)
output = relay.Tuple([call_616,call_622,var_623,])
output2 = relay.Tuple([call_617,call_624,var_623,])
func_628 = relay.Function([var_623,], output)
mod['func_628'] = func_628
mod = relay.transform.InferType()(mod)
var_629 = relay.var("var_629", dtype = "float64", shape = (144,))#candidate|629|(144,)|var|float64
output = func_628(var_629)
func_630 = relay.Function([var_629], output)
mutated_mod['func_630'] = func_630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_634 = relay.TupleGetItem(func_606_call(), 1)
call_635 = relay.TupleGetItem(func_607_call(), 1)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_659 = relay.TupleGetItem(func_606_call(), 1)
call_660 = relay.TupleGetItem(func_607_call(), 1)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_663 = relay.TupleGetItem(func_606_call(), 2)
call_664 = relay.TupleGetItem(func_607_call(), 2)
output = relay.Tuple([call_634,call_659,call_663,])
output2 = relay.Tuple([call_635,call_660,call_664,])
func_670 = relay.Function([], output)
mod['func_670'] = func_670
mod = relay.transform.InferType()(mod)
mutated_mod['func_670'] = func_670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_670_call = mutated_mod.get_global_var('func_670')
call_671 = func_670_call()
output = call_671
func_672 = relay.Function([], output)
mutated_mod['func_672'] = func_672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_404_call = mod.get_global_var('func_404')
func_406_call = mutated_mod.get_global_var('func_406')
call_748 = relay.TupleGetItem(func_404_call(), 0)
call_749 = relay.TupleGetItem(func_406_call(), 0)
const_759 = relay.const([[[-6.024166,8.178177,-0.552613,-6.443705,-9.701265,8.918982,5.992728,2.459139,-7.823806,9.293315,-9.301399,8.686432,0.169789,3.825121,-4.210878,3.194616],[7.046699,-1.653562,2.459974,4.299780,0.004809,4.632662,0.916759,3.167480,-0.732915,-6.857645,6.619028,6.154636,-1.793940,4.074524,-4.100591,3.607612],[9.623314,2.917368,-9.524730,5.339002,9.957330,-8.970878,9.829856,-2.277771,-3.407338,-6.942168,-2.893577,5.035121,0.163393,7.476740,4.791004,7.484320],[-8.431447,9.072167,2.750078,-9.845016,7.377196,5.210467,9.645698,-4.795656,-6.129504,9.663946,5.223699,6.022435,2.966869,-5.723537,6.465801,-6.670207],[-1.740615,-1.549622,-6.498828,-7.295829,4.852970,-5.915053,6.466918,-5.598250,2.058206,-7.663912,-0.598634,0.709283,-9.347023,8.125863,4.423279,2.012552],[2.823071,7.644338,5.426192,-9.440867,0.288178,9.038455,4.981112,-2.404376,2.431279,8.689994,-2.084744,7.843475,-2.360245,-4.790424,-7.082187,2.213889],[0.158297,7.317879,-8.967256,2.235376,-9.735040,-3.507947,9.780624,6.302596,5.348897,-0.976248,7.453390,-3.014465,-3.105334,-8.816312,5.953478,8.742554],[-4.531101,9.682694,-2.689430,9.471793,6.841467,-0.818871,-9.245366,8.360072,8.987283,-6.271786,9.892165,-5.986765,0.163702,8.375488,4.691984,-8.671135],[7.312312,-6.999586,-5.059686,6.054113,-3.022180,-1.556012,9.822810,-9.002664,-7.817068,3.911565,-0.119925,0.672845,-8.254514,-7.958130,0.819647,-9.102972],[-0.061650,-0.483439,-5.623283,-6.940051,-5.523277,9.158636,-4.864449,-0.877835,-2.181873,-7.841638,9.547334,2.204443,-1.416826,8.391849,-8.807270,2.722556]],[[0.903575,4.824421,2.955510,-4.307986,4.248094,9.462823,1.269558,-0.606807,5.758879,-0.894154,-1.517271,5.496524,2.428863,8.882915,-0.201417,-3.356763],[-5.177270,1.068744,2.097922,7.754066,6.116910,-1.572279,-5.428240,3.579755,-8.937879,0.189305,1.176065,8.917647,6.324635,-7.734328,1.330365,8.291589],[-9.422680,5.238260,-7.283313,-7.491262,9.041204,7.837078,5.770221,-5.284270,-4.484732,1.247342,-8.008742,6.988808,7.402277,4.671279,-0.038997,-4.404172],[3.628070,2.492870,9.009311,5.272179,-6.115365,-1.150357,9.777669,4.933522,-2.127162,3.964823,-8.158394,1.871163,-3.803639,-9.603840,9.082570,-9.777181],[0.086869,1.754590,9.044941,4.731964,7.512897,-6.531538,-0.159926,-2.611281,-1.050771,8.734363,-0.306880,-0.850073,2.683629,-0.997993,2.039566,5.180272],[-4.069321,1.956171,-2.623346,8.191252,5.702458,-2.358296,-3.905415,-5.696512,5.523772,2.918835,-1.209815,-6.613600,-9.223244,0.093404,3.160178,-6.720680],[4.177292,-7.864262,9.509502,1.679860,8.168251,-4.583397,-6.737039,-0.702510,2.571971,-9.126136,6.596980,3.098556,5.380261,5.114931,-6.075871,-3.866132],[-0.980706,8.136200,-3.623707,-0.117278,-5.380816,4.138005,6.071429,-9.288608,2.866963,0.874258,-3.434923,5.575884,8.929072,-6.928844,-5.041847,8.017025],[2.642547,-0.998340,0.423048,0.579698,-2.859342,-1.377185,-4.735744,-7.661522,1.096736,-5.125635,-0.022823,2.136156,9.232515,0.102535,-0.064702,-1.415175],[5.020835,-7.024079,2.458769,9.262843,-6.625349,9.028037,-1.865228,5.481932,9.731300,0.980311,5.171435,4.190449,7.156083,-2.444622,9.909806,7.189238]],[[-9.153059,4.305251,-5.387656,6.624537,2.906937,3.039702,-7.669162,1.082776,9.365318,9.263225,-9.162961,2.035749,-2.190367,9.585154,-4.433031,-2.718993],[-9.682516,-3.940495,-5.853527,-1.689017,-4.892825,-0.423239,-0.454088,8.525813,-4.942216,-6.279134,8.622595,-8.670929,1.456161,-6.576442,1.358709,-6.556664],[-3.625350,-5.429738,-8.693035,-3.729718,-0.479999,6.930310,0.023288,-9.312106,-8.516534,-5.594874,-4.569562,1.320326,-0.289670,0.079279,-7.864521,-6.955752],[-7.207155,-8.040746,1.599707,-3.782654,6.075509,-3.750568,-6.614113,-4.367750,2.782998,-9.725187,-2.545322,4.707488,9.383686,-8.487093,2.031017,3.265561],[9.349494,-2.245502,-1.195156,-9.288174,5.726567,-4.827960,-5.610794,-2.854852,6.624283,6.558738,-0.393886,9.587256,-0.857496,3.221984,-9.964968,0.264643],[-9.709632,-1.844085,-7.517851,-1.889224,3.535835,2.580050,-7.856169,9.297919,1.583280,8.734758,7.946658,2.737006,-5.238495,7.414797,9.449168,-8.345069],[4.725723,2.428621,7.862232,2.532936,-1.814890,-7.186726,-5.040047,0.616199,3.353607,1.622872,4.008332,-6.715815,1.629812,-4.042990,-5.861692,6.003497],[5.884283,-4.130053,-5.324245,4.094493,-9.716166,6.037866,6.125589,-1.365639,4.215204,3.343716,9.303652,-4.252777,-4.795857,5.740825,5.980289,-0.811421],[2.893912,-4.060568,-5.981418,8.038168,4.157581,4.171115,2.021863,8.238091,3.970308,4.499521,-8.419906,4.351330,-3.481593,-8.043407,5.112979,-2.969338],[3.562363,1.929314,-3.720009,-0.957456,6.016806,-2.680323,-1.451029,-8.176377,-5.044561,-3.599881,5.110239,6.666337,-1.067447,-6.887581,-0.705340,1.740925]],[[8.479314,8.486538,4.906304,1.305612,9.519520,4.273263,-8.564073,3.211414,0.174322,9.556217,-6.723018,-4.910664,-6.044207,-7.781398,1.416548,-3.154359],[-8.428663,-8.178858,-5.049631,6.980902,1.976917,1.435952,-0.970192,-5.014386,-1.632891,-7.775886,5.225405,8.638479,8.055774,-1.550133,6.147096,7.412441],[5.553911,2.734922,-0.981499,4.925693,6.941921,3.775836,-3.150298,1.559304,4.648669,4.056385,-9.251511,7.453478,-2.946959,-9.487205,-5.711998,-9.690771],[1.855934,5.186686,-2.230591,0.864401,4.436208,5.489174,0.476455,-6.021012,-1.383456,4.603392,3.309900,3.097625,-9.171024,8.495388,7.087276,-9.754292],[-8.253337,-7.716016,0.609193,-4.626505,-9.611386,-3.067295,9.355594,0.803863,-8.384963,-4.784031,5.668784,5.547185,-4.163567,-1.027220,-7.426199,-1.592837],[2.560008,3.760355,8.362540,7.714283,6.359717,1.914698,3.125635,7.743935,1.407938,3.508794,7.022978,-9.126290,1.269295,8.935230,-1.837907,-0.166311],[7.887537,-3.137897,-1.280099,-6.805774,6.237214,-7.053818,-4.174760,-7.608869,9.823576,-1.859955,-5.867016,-1.790923,-9.766922,-8.576356,-7.218220,-6.264196],[-2.258520,-2.541180,-4.832183,0.502332,-7.872985,-0.320451,4.873770,-9.957480,-7.714491,7.582739,5.010611,1.122043,2.386237,-1.658836,-0.945838,0.507437],[6.889635,9.609119,8.291064,2.999553,-2.649419,-9.863621,-5.645446,3.705923,-6.277320,-5.305126,-4.594464,4.252997,9.853341,4.864551,-0.828977,-4.809085],[-1.306304,0.645502,-9.542529,8.755934,6.053945,-3.772289,-1.941305,-6.743789,-5.419996,9.864609,-4.050981,8.431656,-5.478347,-5.064604,6.077000,9.853842]]], dtype = "float32")#candidate|759|(4, 10, 16)|const|float32
bop_760 = relay.subtract(call_748.astype('int32'), relay.reshape(const_759.astype('int32'), relay.shape_of(call_748))) # shape=(4, 10, 16)
bop_763 = relay.subtract(call_749.astype('int32'), relay.reshape(const_759.astype('int32'), relay.shape_of(call_749))) # shape=(4, 10, 16)
uop_767 = relay.log(const_759.astype('float64')) # shape=(4, 10, 16)
output = relay.Tuple([bop_760,uop_767,])
output2 = relay.Tuple([bop_763,uop_767,])
func_769 = relay.Function([], output)
mod['func_769'] = func_769
mod = relay.transform.InferType()(mod)
output = func_769()
func_770 = relay.Function([], output)
mutated_mod['func_770'] = func_770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_862 = relay.TupleGetItem(func_606_call(), 1)
call_863 = relay.TupleGetItem(func_607_call(), 1)
output = relay.Tuple([call_862,])
output2 = relay.Tuple([call_863,])
func_871 = relay.Function([], output)
mod['func_871'] = func_871
mod = relay.transform.InferType()(mod)
mutated_mod['func_871'] = func_871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mutated_mod.get_global_var('func_871')
call_872 = func_871_call()
output = call_872
func_873 = relay.Function([], output)
mutated_mod['func_873'] = func_873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_885 = relay.TupleGetItem(func_871_call(), 0)
call_886 = relay.TupleGetItem(func_873_call(), 0)
output = relay.Tuple([call_885,])
output2 = relay.Tuple([call_886,])
func_893 = relay.Function([], output)
mod['func_893'] = func_893
mod = relay.transform.InferType()(mod)
output = func_893()
func_894 = relay.Function([], output)
mutated_mod['func_894'] = func_894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_914 = relay.TupleGetItem(func_606_call(), 2)
call_915 = relay.TupleGetItem(func_607_call(), 2)
var_948 = relay.var("var_948", dtype = "float32", shape = (4, 10, 16))#candidate|948|(4, 10, 16)|var|float32
bop_949 = relay.less_equal(call_914.astype('bool'), relay.reshape(var_948.astype('bool'), relay.shape_of(call_914))) # shape=(4, 10, 16)
bop_952 = relay.less_equal(call_915.astype('bool'), relay.reshape(var_948.astype('bool'), relay.shape_of(call_915))) # shape=(4, 10, 16)
uop_974 = relay.cosh(call_914.astype('float64')) # shape=(4, 10, 16)
uop_976 = relay.cosh(call_915.astype('float64')) # shape=(4, 10, 16)
bop_979 = relay.bitwise_xor(uop_974.astype('int8'), relay.reshape(bop_949.astype('int8'), relay.shape_of(uop_974))) # shape=(4, 10, 16)
bop_982 = relay.bitwise_xor(uop_976.astype('int8'), relay.reshape(bop_952.astype('int8'), relay.shape_of(uop_976))) # shape=(4, 10, 16)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_994 = relay.TupleGetItem(func_871_call(), 0)
call_995 = relay.TupleGetItem(func_873_call(), 0)
func_670_call = mod.get_global_var('func_670')
func_672_call = mutated_mod.get_global_var('func_672')
call_1001 = relay.TupleGetItem(func_670_call(), 1)
call_1002 = relay.TupleGetItem(func_672_call(), 1)
output = relay.Tuple([bop_979,call_994,call_1001,])
output2 = relay.Tuple([bop_982,call_995,call_1002,])
func_1012 = relay.Function([var_948,], output)
mod['func_1012'] = func_1012
mod = relay.transform.InferType()(mod)
mutated_mod['func_1012'] = func_1012
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1013 = relay.var("var_1013", dtype = "float32", shape = (4, 10, 16))#candidate|1013|(4, 10, 16)|var|float32
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1014 = func_1012_call(var_1013)
output = call_1014
func_1015 = relay.Function([var_1013], output)
mutated_mod['func_1015'] = func_1015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_670_call = mod.get_global_var('func_670')
func_672_call = mutated_mod.get_global_var('func_672')
call_1089 = relay.TupleGetItem(func_670_call(), 1)
call_1090 = relay.TupleGetItem(func_672_call(), 1)
output = relay.Tuple([call_1089,])
output2 = relay.Tuple([call_1090,])
func_1095 = relay.Function([], output)
mod['func_1095'] = func_1095
mod = relay.transform.InferType()(mod)
mutated_mod['func_1095'] = func_1095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1095_call = mutated_mod.get_global_var('func_1095')
call_1096 = func_1095_call()
output = call_1096
func_1097 = relay.Function([], output)
mutated_mod['func_1097'] = func_1097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_1144 = relay.TupleGetItem(func_445_call(), 2)
call_1145 = relay.TupleGetItem(func_446_call(), 2)
uop_1157 = relay.tan(call_1144.astype('float32')) # shape=(324, 1)
uop_1159 = relay.tan(call_1145.astype('float32')) # shape=(324, 1)
uop_1160 = relay.asinh(uop_1157.astype('float64')) # shape=(324, 1)
uop_1162 = relay.asinh(uop_1159.astype('float64')) # shape=(324, 1)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_1177 = relay.TupleGetItem(func_445_call(), 2)
call_1178 = relay.TupleGetItem(func_446_call(), 2)
func_1012_call = mod.get_global_var('func_1012')
func_1015_call = mutated_mod.get_global_var('func_1015')
const_1192 = relay.const([9.819632,-0.037059,1.717254,-0.036690,7.195011,-0.198688,-0.933181,-1.673377,4.165222,-3.903907,7.020117,9.159271,-5.065168,-2.050335,7.074029,9.401521,-0.778442,0.425937,5.164941,8.905881,1.698343,7.776724,5.413497,-3.210351,8.762549,-1.369061,1.206386,-3.480442,-0.207294,3.140478,3.830564,-5.029807,9.416509,4.111817,4.393220,7.200579,-0.908172,-2.399692,-2.862936,0.813419,2.197074,8.363274,9.178282,-5.558373,-9.671179,1.666389,0.098329,1.093044,4.685044,1.160178,7.334731,0.906705,1.091540,-1.005189,-7.806426,8.267221,9.403982,9.546603,-6.925976,-5.091786,1.938043,6.623083,8.341485,3.981236,9.415370,-4.573326,8.690357,9.372072,3.746658,8.674933,6.206331,-7.740350,2.355391,3.339373,6.461282,-3.443407,2.290070,3.835435,-8.016534,6.269281,1.534411,-9.991995,1.294193,0.489323,6.940614,-6.720654,4.989294,-4.049713,-6.316505,3.326635,4.364420,0.849068,5.793155,-2.606002,3.424274,8.731081,9.170336,-7.277547,0.118571,8.601139,-9.898659,6.575000,-7.900227,-5.230995,4.563976,3.170179,3.038807,4.172347,0.536825,-4.374487,2.830360,-0.688477,1.744565,2.868693,-9.349369,-9.469493,9.843244,4.844312,9.690872,-6.193193,2.524169,6.400122,-2.572518,0.202176,-9.973246,4.583119,0.171151,-2.409934,-4.129873,-0.347459,4.330847,1.846501,-0.137521,-8.946603,-6.634584,8.659883,-8.810239,-9.235688,0.281226,7.240730,8.532689,-4.176132,-5.905201,7.018548,-4.259507,1.480616,-5.667054,-4.839755,7.434450,-6.675681,-9.487364,3.660518,7.864338,2.678939,6.222869,-1.673996,0.620559,-4.586908,-2.565301,-6.114119,9.105526,-5.474542,-7.690456,-1.270001,8.872568,6.118734,-0.788920,7.813965,-1.202852,7.647106,6.563905,-8.954166,-1.632533,-8.876969,0.185507,6.643802,-6.266024,-4.464416,0.294156,3.811777,-7.284924,-6.261349,7.556152,-1.080887,-9.330008,-5.922539,8.851032,1.890082,9.990670,-3.941828,-2.266245,4.489480,2.894352,-1.188509,-9.627316,-1.508017,-8.472055,-7.663678,-4.893732,-1.201052,-5.130653,-2.157472,2.751842,2.553899,7.643631,3.833425,1.893411,-4.994516,1.623404,1.745675,-0.004841,-6.098909,-2.929630,6.327479,0.503064,-2.872285,-7.549697,1.282888,-1.916260,-8.898648,2.287872,2.401773,-4.874487,1.369806,-7.609613,8.544892,-1.293018,-0.730186,-4.068054,4.633503,8.619072,5.308588,-8.064716,2.296799,7.144807,-3.098022,-2.289299,-8.624605,-0.160569,-1.870285,-2.352839,8.266294,7.217668,-9.950519,0.665437,5.865062,9.100969,-1.803676,9.268819,-2.565133,5.580030,3.738761,-7.193035,-9.949092,-9.857570,-6.670710,7.459982,6.384102,2.655582,-2.469749,-3.124249,3.117901,9.550848,4.812495,8.454304,1.055554,2.751869,-7.290518,-0.527056,-9.574731,6.274360,-2.016449,-0.539599,2.124017,6.933845,3.020641,4.615134,6.332967,-5.854970,-8.184068,-7.753785,3.832510,-8.430044,1.870800,-1.325048,3.053613,-1.357283,-3.816655,-8.929237,-2.306900,-6.001578,4.708391,-0.302844,-9.269089,4.422803,2.955957,-9.513049,1.644000,-7.471865,-1.542720,-3.285285,6.995781,2.047647,-3.954137,5.066278,6.540833,-5.833950,-9.652997,1.309595,1.157684,3.327407,-8.268481,1.249433,-2.858386,-2.735378,9.919228,9.513244,-8.664440,-8.661366,-8.387587,4.123102,1.140267,-7.382433,7.231613,-8.508920,-0.307917,0.819514,-9.312423,5.010133,-8.184996,2.970951,-5.287535,-9.654901,3.772361,5.746977,7.199106,8.064524,-8.609490,-7.130420,2.055203,8.260683,-1.509536,-1.409769,6.454078,4.197611,3.130275,4.438643,5.912636,-9.524270,2.427106,-7.586672,1.799285,0.027444,0.444225,6.911201,9.575090,9.050703,0.224454,-4.008096,7.707175,-9.112604,-1.147314,-0.469380,-6.562280,-8.588531,0.817584,-8.448846,-8.503963,-2.121859,6.300287,-9.062153,-8.161800,-1.500604,6.590819,5.272028,-3.803911,5.146953,1.435244,6.687909,7.423005,8.971715,-7.954201,7.018475,-7.399695,7.552274,9.581327,-1.897116,1.698041,5.842939,5.634196,0.946813,-1.084096,-2.416954,-9.750856,3.445451,7.782695,-8.237790,-7.919438,-5.934608,-6.821567,-6.139522,2.869007,7.817873,8.200242,0.109940,6.076906,8.686649,5.557411,-2.572619,6.537237,5.017346,-7.986498,-4.469015,0.205081,0.707035,-1.564613,8.947374,-3.343894,-9.800866,5.880453,-1.670272,-3.097551,5.685410,8.308485,-5.588295,9.458570,2.780149,4.392930,3.889167,-4.838760,-1.569745,-9.016197,-0.476647,7.517291,6.363960,-0.973400,3.337935,4.136591,5.213323,-3.981105,8.959886,1.155723,-0.230473,-6.268795,-4.689240,-6.470820,-4.189121,-0.346539,-8.282472,6.816038,5.253748,5.696489,6.927638,3.454314,-2.904805,-9.676341,0.214673,-5.603829,-6.440593,2.587579,-2.146966,-6.950554,5.597069,1.294945,-8.168564,4.365905,9.007826,-3.597644,4.738211,9.175868,-3.462820,8.824954,3.069311,1.816202,-9.978256,-5.654400,-5.461292,9.655123,-0.102376,4.682783,-2.504178,-9.520803,-9.596914,-6.016711,-9.817076,9.238573,5.967831,-9.271651,-1.017341,-5.551122,5.385289,0.632576,2.064506,4.056930,-1.737786,-0.853345,5.824799,-6.932160,-8.685971,6.698419,-7.523090,3.445042,9.316291,-0.271949,2.670369,-7.111143,-0.780702,-8.626397,1.228366,2.246761,6.241725,-0.967320,-3.817403,-0.035256,9.351827,5.287133,-2.798708,7.183447,-7.719007,5.062345,-0.491134,-0.440367,-7.779971,6.508347,-6.885917,2.539445,-1.180068,-4.084948,-0.513846,6.694131,-2.122631,2.950857,7.923022,-3.817969,-8.412218,9.229245,-2.513180,0.459578,7.593087,-7.517653,6.069751,1.785691,2.129659,-4.063639,-2.378372,1.668403,-8.916818,7.615823,0.017446,-3.076614,6.172188,-8.580019,0.664978,-9.760843,-8.709711,9.875958,-2.408842,-8.635189,-0.509406,6.255691,-8.506162,-6.231074,2.340674,0.399689,0.426153,9.321006,8.651748,-2.304708,0.573877,8.056921,0.614957,-4.384771,6.027312,7.348310,3.298733,-9.080901,2.079053,0.634941,-8.905309,3.479681,-3.060548,0.507657,2.108905,-1.960125,-4.592936,-0.728105,-3.488583,-5.387184,0.496424,-0.743402,-0.977136,0.758858,8.517240,5.134561,2.224366,2.162996,3.622255,8.545812,3.404252,3.590271,-3.224715,0.722451,-0.236748,-6.050754,-3.623247,5.961621,-5.213967,-9.508850,2.531435,0.052142,5.430560,-5.880650,3.073954,9.029582,0.944795,7.445778,-0.240068,7.857432,-1.867151,3.761126,-8.380337,8.955388,9.072372,-2.030434,2.296810,7.041779,-6.273917,4.739958,1.589376,-6.770909,-7.112895,-2.354046,0.972965,2.031292,-6.419369,-9.159795,6.350231,0.260245,4.973196,6.714689], dtype = "float32")#candidate|1192|(640,)|const|float32
call_1191 = relay.TupleGetItem(func_1012_call(relay.reshape(const_1192.astype('float32'), [4, 10, 16])), 0)
call_1193 = relay.TupleGetItem(func_1015_call(relay.reshape(const_1192.astype('float32'), [4, 10, 16])), 0)
bop_1195 = relay.logical_or(uop_1157.astype('bool'), relay.reshape(call_1144.astype('bool'), relay.shape_of(uop_1157))) # shape=(324, 1)
bop_1198 = relay.logical_or(uop_1159.astype('bool'), relay.reshape(call_1145.astype('bool'), relay.shape_of(uop_1159))) # shape=(324, 1)
uop_1203 = relay.atanh(uop_1160.astype('float32')) # shape=(324, 1)
uop_1205 = relay.atanh(uop_1162.astype('float32')) # shape=(324, 1)
output = relay.Tuple([call_1177,call_1191,const_1192,bop_1195,uop_1203,])
output2 = relay.Tuple([call_1178,call_1193,const_1192,bop_1198,uop_1205,])
func_1207 = relay.Function([], output)
mod['func_1207'] = func_1207
mod = relay.transform.InferType()(mod)
mutated_mod['func_1207'] = func_1207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1207_call = mutated_mod.get_global_var('func_1207')
call_1208 = func_1207_call()
output = call_1208
func_1209 = relay.Function([], output)
mutated_mod['func_1209'] = func_1209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1218 = relay.var("var_1218", dtype = "float32", shape = (11, 12, 3))#candidate|1218|(11, 12, 3)|var|float32
uop_1219 = relay.asin(var_1218.astype('float32')) # shape=(11, 12, 3)
output = relay.Tuple([uop_1219,])
output2 = relay.Tuple([uop_1219,])
func_1240 = relay.Function([var_1218,], output)
mod['func_1240'] = func_1240
mod = relay.transform.InferType()(mod)
var_1241 = relay.var("var_1241", dtype = "float32", shape = (11, 12, 3))#candidate|1241|(11, 12, 3)|var|float32
output = func_1240(var_1241)
func_1242 = relay.Function([var_1241], output)
mutated_mod['func_1242'] = func_1242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_1269 = relay.TupleGetItem(func_606_call(), 0)
call_1270 = relay.TupleGetItem(func_607_call(), 0)
var_1275 = relay.var("var_1275", dtype = "uint16", shape = (324, 15))#candidate|1275|(324, 15)|var|uint16
bop_1276 = relay.floor_divide(call_1269.astype('float64'), var_1275.astype('float64')) # shape=(324, 15)
bop_1279 = relay.floor_divide(call_1270.astype('float64'), var_1275.astype('float64')) # shape=(324, 15)
func_1012_call = mod.get_global_var('func_1012')
func_1015_call = mutated_mod.get_global_var('func_1015')
const_1284 = relay.const([-9.562052,-9.576142,7.208231,-1.526962,-4.954350,7.563188,-6.618428,2.734904,6.632154,-5.104638,-9.678327,2.845006,-4.186533,-1.918750,1.582058,3.292067,7.151470,-9.712885,8.170273,0.098239,-5.693406,-0.385101,-2.566991,-6.377282,4.016429,9.675489,5.489512,1.160324,-6.052904,-3.869724,6.277029,0.724510,0.805534,0.558723,7.145651,-5.469727,-2.488671,-7.174840,-1.929275,-9.348883,1.477507,5.656850,-3.640631,-9.678908,-5.269358,-9.574686,-9.801044,4.261118,-6.315968,4.247373,0.651275,0.664722,-7.474077,-7.230486,-2.158926,-3.220976,8.214989,-4.257925,-4.532198,-8.972602,6.109856,-0.254521,6.211683,5.295153,8.944817,7.214685,-5.526588,-3.727197,-0.723388,9.359205,5.245673,-9.639785,-2.654220,-2.181423,-9.059697,2.432056,-0.682512,3.422022,5.709947,7.908775,3.569304,-9.905078,9.628501,-8.776679,1.759174,-4.871673,9.758722,0.062199,6.084388,-1.042047,8.735712,-5.336492,-8.029107,6.046887,-6.625424,-8.631715,6.932652,-4.323461,5.912629,-3.582091,-5.891652,0.189019,2.669630,3.943249,-0.861485,-8.255521,-3.181976,7.814739,5.168806,-1.803512,3.977200,6.234942,5.339990,9.285756,2.472610,-1.600854,-2.156692,1.173345,-9.550741,6.064965,2.189951,-1.477973,-9.561809,-6.464102,-9.142817,1.257145,1.558658,-6.921047,-2.579956,2.382588,6.619726,-1.212792,1.119279,-5.361690,-6.234391,-0.949430,8.379012,5.449681,1.017651,8.662657,7.895112,6.668352,-1.132393,3.589116,-9.571490,-5.314448,-6.560328,3.108430,-1.288426,-2.222628,5.126142,-2.468771,7.221973,-6.819841,8.980468,5.235249,5.356318,0.712445,-7.955056,-5.438191,7.615506,3.809913,6.886897,4.070348,-0.492592,3.790268,4.532743,-4.028672,4.580860,0.952542,0.701145,3.313011,1.461963,-7.556589,-9.120488,-5.320317,3.970482,6.131918,0.726218,-7.063159,-0.791481,4.407639,-3.934530,2.785300,4.653220,-6.255334,7.195223,3.949795,1.825466,-1.047344,-7.560410,3.373927,-2.384686,4.142475,-0.364260,1.445081,6.694796,-2.457523,0.542081,1.762938,-0.650384,3.348010,-0.408403,-0.779263,-0.265886,5.966718,-8.283212,-2.956059,6.050765,-3.712681,4.542781,4.453083,-9.224425,-9.760371,8.204144,-0.855827,-4.569257,3.407741,-5.964992,-2.298606,-9.924543,-6.477556,-8.851187,-3.715385,-2.322987,7.788625,-0.286297,-3.318529,-8.008324,-3.929795,-4.808873,6.106415,-6.554665,9.421035,5.139862,4.070829,0.443728,-2.548465,-3.193899,-2.023733,1.098828,1.761429,-1.826471,-6.747821,-6.535271,-0.395050,-8.468863,1.683400,-6.920479,8.599146,-2.574656,0.006773,-4.169906,-0.486067,-4.766084,1.471704,-2.895562,-9.085621,-1.381399,-1.503446,5.912906,-9.559869,-5.310349,0.599822,-6.507857,-8.860586,4.548371,1.642338,1.280001,3.462480,-8.129945,7.258447,2.204930,6.361364,1.622454,-2.401886,-5.424741,-1.067511,1.381878,2.227534,-9.313384,-3.613080,5.272736,-9.856249,0.547008,4.793114,-4.814996,0.211040,-0.298031,-2.500943,-8.695967,-3.782026,6.697582,2.092555,-7.126165,-1.350973,3.916108,4.057783,-2.414609,4.775767,0.675688,1.996390,-3.599403,8.653357,1.292067,-5.699024,-8.914582,-6.135196,2.010695,-4.804525,-3.262300,-5.943705,-7.263113,7.342342,9.945799,-6.717431,5.630504,4.413159,-0.091647,-4.523842,-6.532434,9.775167,7.645882,-0.704889,-4.080180,9.155069,7.583372,-7.428735,9.022961,2.235656,-8.660740,7.046332,9.787424,3.554058,4.028655,-5.888456,-2.390879,-9.091483,1.531899,-9.604833,-0.504120,5.115777,-5.533111,6.032272,1.169596,-3.734214,-3.569222,5.993001,-1.845378,-5.221462,-3.253778,1.668596,-4.915054,-6.496404,-0.391563,0.786528,-2.249322,6.016921,-1.896343,-5.674782,7.429724,-3.431207,-2.860291,2.094745,-2.484891,-9.013838,-3.617038,-2.330637,-1.371333,3.313864,1.732654,3.154517,2.032146,-1.146917,2.797182,4.424064,-2.206423,-5.999104,1.395273,5.890219,7.289202,-4.570437,-6.558499,6.467929,3.595371,9.986297,9.226473,9.397365,0.389713,4.928818,-2.910709,0.397793,-5.553027,-4.223162,-4.084468,9.538385,6.544519,8.161958,-3.694220,-9.454754,7.148505,0.421189,-9.301582,0.895195,-3.177135,-1.851134,2.427770,1.549546,-2.596090,7.954400,-3.720882,-1.703670,-4.607570,1.532377,-5.318198,6.949414,8.803797,5.135960,4.903350,-6.865355,4.661859,-0.562782,-5.650896,-6.836724,6.501821,5.772026,-7.213382,-5.160456,-9.123225,-7.963856,4.730939,-4.037428,-0.359040,8.502340,2.135735,3.130175,-2.437285,4.437706,-0.221607,3.162567,-8.684574,5.932845,8.194636,5.141351,1.057734,-0.587662,0.147521,0.874691,-3.144500,6.366375,-0.902589,-4.869038,9.687021,-0.182787,0.046704,7.750204,-1.035533,3.347119,-3.530130,1.140072,-1.782568,0.742980,8.969053,9.496726,6.093734,2.367848,6.377479,-3.093037,0.959874,-4.847777,1.359029,-3.194920,-3.089890,8.071023,4.701182,-0.083305,-1.004793,0.494558,1.747790,-7.421755,-3.417379,-2.657097,9.783213,-3.326447,3.001962,-8.046642,-4.981849,1.854842,-1.349342,-0.184349,5.604465,3.999286,-6.352233,4.154339,7.348532,-8.039208,2.145580,0.194072,0.088617,-6.148855,6.352590,1.038840,9.887498,-1.991917,2.589820,4.128247,-0.568366,1.052783,-0.598928,-4.840415,-9.318204,7.600815,0.348603,-8.588385,-0.988160,-3.275242,3.370479,4.654226,-1.295925,-5.869186,-8.732067,-6.263213,-8.577935,3.680060,9.733298,-4.537265,-1.621186,7.200333,9.465938,7.676994,-6.937261,2.885922,1.154670,7.344387,-5.405518,-4.474706,7.005611,2.975572,-2.276269,-6.326296,-2.459529,1.691878,-7.933451,1.253313,-7.774521,9.829347,-3.141190,0.608677,-2.194473,7.803008,-5.504181,8.782747,-1.002185,-2.045989,-6.808778,-6.908070,7.272776,3.382811,9.350620,6.821156,9.808188,-8.676863,3.145058,-3.429684,-0.418602,0.038545,7.151147,4.466584,4.477448,-4.641390,-8.531786,3.772050,-4.648979,-8.316800,9.488692,8.996232,-9.490260,-5.647954,6.312818,7.895436,-8.676698,5.368303,-2.424789,7.163499,-2.997014,8.693948,0.514520,-3.938571,9.703610,9.633736,4.421271,-7.596126,-2.857474,5.575494,0.899249,-2.270373,1.537231,5.033780,-4.865676,-8.539255,-5.637052,5.347815,-7.261976,0.991323,-7.674450,-0.221754,9.230435,-9.981894,7.670420,-1.270677,-8.181629,-9.234827,-9.949978,1.935710,-3.635261,0.451532,0.293408,-5.062242,-8.897165,-0.821299,-2.563849,-3.575879,2.089074,-0.645248,5.289664,5.231581,8.110213,4.005809,4.705005,-8.005292,-5.068207,-7.025610,-2.768457,1.845665,-7.437053,-1.972359,-1.319275,-9.636493,5.661399,-3.695144], dtype = "float32")#candidate|1284|(640,)|const|float32
call_1283 = relay.TupleGetItem(func_1012_call(relay.reshape(const_1284.astype('float32'), [4, 10, 16])), 1)
call_1285 = relay.TupleGetItem(func_1015_call(relay.reshape(const_1284.astype('float32'), [4, 10, 16])), 1)
var_1291 = relay.var("var_1291", dtype = "float32", shape = (9, 9, 4))#candidate|1291|(9, 9, 4)|var|float32
bop_1292 = relay.divide(call_1283.astype('float32'), relay.reshape(var_1291.astype('float32'), relay.shape_of(call_1283))) # shape=(9, 9, 4)
bop_1295 = relay.divide(call_1285.astype('float32'), relay.reshape(var_1291.astype('float32'), relay.shape_of(call_1285))) # shape=(9, 9, 4)
uop_1305 = relay.rsqrt(var_1291.astype('float64')) # shape=(9, 9, 4)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_1314 = relay.TupleGetItem(func_445_call(), 2)
call_1315 = relay.TupleGetItem(func_446_call(), 2)
output = relay.Tuple([bop_1276,const_1284,bop_1292,uop_1305,call_1314,])
output2 = relay.Tuple([bop_1279,const_1284,bop_1295,uop_1305,call_1315,])
func_1317 = relay.Function([var_1275,var_1291,], output)
mod['func_1317'] = func_1317
mod = relay.transform.InferType()(mod)
mutated_mod['func_1317'] = func_1317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1317_call = mutated_mod.get_global_var('func_1317')
var_1319 = relay.var("var_1319", dtype = "uint16", shape = (324, 15))#candidate|1319|(324, 15)|var|uint16
var_1320 = relay.var("var_1320", dtype = "float32", shape = (9, 9, 4))#candidate|1320|(9, 9, 4)|var|float32
call_1318 = func_1317_call(var_1319,var_1320,)
output = call_1318
func_1321 = relay.Function([var_1319,var_1320,], output)
mutated_mod['func_1321'] = func_1321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_1337 = relay.TupleGetItem(func_445_call(), 2)
call_1338 = relay.TupleGetItem(func_446_call(), 2)
output = relay.Tuple([call_1337,])
output2 = relay.Tuple([call_1338,])
func_1344 = relay.Function([], output)
mod['func_1344'] = func_1344
mod = relay.transform.InferType()(mod)
output = func_1344()
func_1345 = relay.Function([], output)
mutated_mod['func_1345'] = func_1345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_1408 = relay.TupleGetItem(func_606_call(), 2)
call_1409 = relay.TupleGetItem(func_607_call(), 2)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_1422 = relay.TupleGetItem(func_871_call(), 0)
call_1423 = relay.TupleGetItem(func_873_call(), 0)
output = relay.Tuple([call_1408,call_1422,])
output2 = relay.Tuple([call_1409,call_1423,])
func_1434 = relay.Function([], output)
mod['func_1434'] = func_1434
mod = relay.transform.InferType()(mod)
output = func_1434()
func_1435 = relay.Function([], output)
mutated_mod['func_1435'] = func_1435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_1454 = relay.TupleGetItem(func_1344_call(), 0)
call_1455 = relay.TupleGetItem(func_1345_call(), 0)
output = call_1454
output2 = call_1455
func_1485 = relay.Function([], output)
mod['func_1485'] = func_1485
mod = relay.transform.InferType()(mod)
mutated_mod['func_1485'] = func_1485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1485_call = mutated_mod.get_global_var('func_1485')
call_1486 = func_1485_call()
output = call_1486
func_1487 = relay.Function([], output)
mutated_mod['func_1487'] = func_1487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_1571 = relay.TupleGetItem(func_606_call(), 1)
call_1572 = relay.TupleGetItem(func_607_call(), 1)
output = relay.Tuple([call_1571,])
output2 = relay.Tuple([call_1572,])
func_1582 = relay.Function([], output)
mod['func_1582'] = func_1582
mod = relay.transform.InferType()(mod)
output = func_1582()
func_1583 = relay.Function([], output)
mutated_mod['func_1583'] = func_1583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1485_call = mod.get_global_var('func_1485')
func_1487_call = mutated_mod.get_global_var('func_1487')
call_1608 = func_1485_call()
call_1609 = func_1485_call()
output = relay.Tuple([call_1608,])
output2 = relay.Tuple([call_1609,])
func_1614 = relay.Function([], output)
mod['func_1614'] = func_1614
mod = relay.transform.InferType()(mod)
output = func_1614()
func_1615 = relay.Function([], output)
mutated_mod['func_1615'] = func_1615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_1633 = relay.TupleGetItem(func_769_call(), 1)
call_1634 = relay.TupleGetItem(func_770_call(), 1)
output = relay.Tuple([call_1633,])
output2 = relay.Tuple([call_1634,])
func_1637 = relay.Function([], output)
mod['func_1637'] = func_1637
mod = relay.transform.InferType()(mod)
output = func_1637()
func_1638 = relay.Function([], output)
mutated_mod['func_1638'] = func_1638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_1657 = relay.TupleGetItem(func_606_call(), 2)
call_1658 = relay.TupleGetItem(func_607_call(), 2)
func_1240_call = mod.get_global_var('func_1240')
func_1242_call = mutated_mod.get_global_var('func_1242')
var_1675 = relay.var("var_1675", dtype = "float32", shape = (396,))#candidate|1675|(396,)|var|float32
call_1674 = relay.TupleGetItem(func_1240_call(relay.reshape(var_1675.astype('float32'), [11, 12, 3])), 0)
call_1676 = relay.TupleGetItem(func_1242_call(relay.reshape(var_1675.astype('float32'), [11, 12, 3])), 0)
func_1485_call = mod.get_global_var('func_1485')
func_1487_call = mutated_mod.get_global_var('func_1487')
call_1704 = func_1485_call()
call_1705 = func_1485_call()
func_628_call = mod.get_global_var('func_628')
func_630_call = mutated_mod.get_global_var('func_630')
const_1719 = relay.const([-7.363671,-4.459545,7.558915,-6.123221,6.841478,2.707236,-8.696289,7.661738,-2.124299,-7.824235,-9.883803,9.852942,1.908361,-7.687397,7.706005,-2.838918,0.898448,-0.553309,-2.529672,0.736259,-5.978539,-3.644277,-7.994096,-9.000775,-7.148005,-7.743633,4.593126,-4.472682,8.950361,2.870415,6.871392,-7.220325,5.322570,-2.180716,0.587064,3.289161,-6.329065,-6.096919,1.059920,9.181808,6.431785,-0.198825,0.952669,9.145367,0.035777,7.830582,3.132164,4.767050,-1.001330,-1.304463,6.488925,7.896643,1.824038,5.248396,-8.090868,-0.279585,-8.059325,-1.143741,7.540494,-7.593738,5.737651,-8.217953,5.783663,8.305632,5.549785,3.662919,4.910863,-0.745793,-7.439060,2.042010,-5.032210,-2.661570,-7.252956,-0.454649,-6.489708,-5.384272,-2.585901,-6.509827,2.407438,0.609595,-3.566890,9.755159,1.541116,-6.613260,1.438938,-0.012870,-4.613763,-6.443840,-3.475258,-4.039254,8.526653,-6.576594,5.092928,2.087867,-3.487068,6.003875,5.810202,-1.729116,-1.217093,-1.515167,-0.739325,5.362831,2.987437,7.921755,-2.812822,3.978068,-3.233108,2.628727,-0.196932,-0.473811,3.084018,6.140004,9.855869,5.127881,8.591454,7.965735,1.154824,-1.422707,6.288091,-0.232443,9.521686,5.473305,0.042857,-6.156859,-3.673062,-7.922245,-9.340853,-1.069898,5.825783,-3.126628,-6.707292,-4.697455,-6.416560,-9.338620,-7.488575,-7.669783,-0.330356,9.683740,-4.970215,-6.884671,4.614832,8.134741,-5.751800,6.281178], dtype = "float64")#candidate|1719|(144,)|const|float64
call_1718 = relay.TupleGetItem(func_628_call(relay.reshape(const_1719.astype('float64'), [144,])), 2)
call_1720 = relay.TupleGetItem(func_630_call(relay.reshape(const_1719.astype('float64'), [144,])), 2)
output = relay.Tuple([call_1657,call_1674,var_1675,call_1704,call_1718,const_1719,])
output2 = relay.Tuple([call_1658,call_1676,var_1675,call_1705,call_1720,const_1719,])
func_1728 = relay.Function([var_1675,], output)
mod['func_1728'] = func_1728
mod = relay.transform.InferType()(mod)
var_1729 = relay.var("var_1729", dtype = "float32", shape = (396,))#candidate|1729|(396,)|var|float32
output = func_1728(var_1729)
func_1730 = relay.Function([var_1729], output)
mutated_mod['func_1730'] = func_1730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1795 = relay.var("var_1795", dtype = "float64", shape = (10, 8, 13))#candidate|1795|(10, 8, 13)|var|float64
uop_1796 = relay.rsqrt(var_1795.astype('float64')) # shape=(10, 8, 13)
output = relay.Tuple([uop_1796,])
output2 = relay.Tuple([uop_1796,])
func_1809 = relay.Function([var_1795,], output)
mod['func_1809'] = func_1809
mod = relay.transform.InferType()(mod)
var_1810 = relay.var("var_1810", dtype = "float64", shape = (10, 8, 13))#candidate|1810|(10, 8, 13)|var|float64
output = func_1809(var_1810)
func_1811 = relay.Function([var_1810], output)
mutated_mod['func_1811'] = func_1811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_1880 = relay.TupleGetItem(func_1434_call(), 0)
call_1881 = relay.TupleGetItem(func_1435_call(), 0)
uop_1902 = relay.acos(call_1880.astype('float64')) # shape=(4, 10, 16)
uop_1904 = relay.acos(call_1881.astype('float64')) # shape=(4, 10, 16)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_1912 = relay.TupleGetItem(func_606_call(), 0)
call_1913 = relay.TupleGetItem(func_607_call(), 0)
output = relay.Tuple([uop_1902,call_1912,])
output2 = relay.Tuple([uop_1904,call_1913,])
func_1916 = relay.Function([], output)
mod['func_1916'] = func_1916
mod = relay.transform.InferType()(mod)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mutated_mod.get_global_var('func_1916')
call_1917 = func_1916_call()
output = call_1917
func_1918 = relay.Function([], output)
mutated_mod['func_1918'] = func_1918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2055 = relay.var("var_2055", dtype = "float64", shape = (7, 11, 1))#candidate|2055|(7, 11, 1)|var|float64
uop_2056 = relay.asinh(var_2055.astype('float64')) # shape=(7, 11, 1)
func_1728_call = mod.get_global_var('func_1728')
func_1730_call = mutated_mod.get_global_var('func_1730')
const_2059 = relay.const([[-8.068883,3.790700,-7.584446,-9.254412,-4.915456,8.077386,-7.911159,-2.792317,6.856792,-4.589565,6.885763,-1.504917,9.216396,2.386686,8.583909,1.725759,2.737583,9.201766,0.952483,-8.005261,1.946682,5.970281,-7.862848,7.294646,-1.796413,-6.123691,4.411558,-7.115551,-9.427890,-2.901346,4.089805,2.696956,-5.404240,-2.959890,1.676830,9.589374,-7.544923,-9.120923,1.290901,0.118874,9.917415,3.605151,-1.958656,7.999314,-3.775356,-7.897097,3.501294,-5.056245,-0.630317,-9.290501,1.171898,8.408217,-0.598436,6.622959,3.572515,7.021908,-5.482349,5.143879,7.709024,6.387395,8.222667,5.221307,-8.940230,-5.109224,-7.319793,-0.765252],[6.401706,-9.564788,8.916075,3.427420,-4.197469,9.864544,7.581789,9.487965,-2.168628,-0.214745,-9.600616,-4.049536,9.948039,8.833040,9.351259,-9.412157,7.484520,9.179332,-5.499301,-4.231245,1.986344,6.726886,-2.093666,1.860390,9.005450,-3.940900,3.470978,-2.240827,-0.345030,9.189579,0.450031,-0.030091,-3.640971,0.897807,-0.681972,1.867397,-4.340203,-8.506852,2.783240,3.303087,-8.450937,-5.479240,-5.023268,-2.055681,-7.722198,7.325447,7.799693,2.178759,1.708657,-5.458179,-4.654173,1.125877,-5.385316,1.407610,-7.033053,7.656521,3.730170,-6.856683,-8.640679,-9.971802,-2.482401,8.156801,6.630931,1.447705,9.694065,-0.364735],[4.478789,-7.854035,0.589888,0.649085,-9.913486,-6.104548,-6.046531,-5.505783,-7.416950,-0.470349,-1.272940,-7.094207,-1.509166,-8.601237,-8.264888,8.291101,-5.054201,1.954709,7.741884,5.668297,9.116681,2.687590,0.540204,3.477124,-0.422477,-8.477379,3.647560,-1.605606,9.458125,6.528363,7.725864,4.428675,2.299063,-2.643629,-7.362204,-7.088906,9.357658,7.580629,6.846525,-9.576431,-2.069779,-6.042766,-6.135167,0.781967,5.590109,6.089408,5.739756,6.776166,1.504700,-0.816202,6.037761,-5.305221,-4.863532,3.098819,-3.476111,-6.556767,7.894437,-2.382406,3.871415,7.890887,-4.534010,-5.885832,0.757736,-3.139266,5.183897,-4.125680],[-3.894365,9.712787,8.782762,-6.896636,5.050530,-6.802656,-9.238498,-4.062591,4.673609,-7.721653,-2.217116,6.291382,-7.320797,-8.227954,-0.100537,0.704660,0.070862,-4.399079,6.189077,-0.513558,4.467320,2.154152,9.299874,6.068087,7.126226,1.840569,-1.867365,-6.819416,-6.843328,-8.369561,4.594150,1.906697,5.856125,9.535154,2.745117,4.863095,0.514807,-9.293455,-6.271926,2.383826,6.443935,5.058329,2.171578,9.350191,-0.346241,8.958816,3.448892,4.528707,-0.655656,8.827693,-6.862588,-9.361543,-8.844776,3.890258,-6.843084,-0.860944,5.292445,-4.331642,1.056739,-4.989741,6.306552,-6.890346,4.207232,7.912070,-4.420113,9.749945],[9.250683,-4.882781,-1.232564,-6.782652,-2.351664,-0.532576,-1.206061,6.509766,-8.486221,-6.007784,0.120534,-9.305628,-3.458870,-4.951811,7.082882,2.354122,9.485248,-1.266296,5.838530,-5.597623,0.181115,5.204073,9.538048,-2.465201,1.022512,-4.310860,3.511688,7.680624,-6.333207,-4.267438,9.115305,8.874546,-2.105858,-8.546248,-8.398292,4.890991,2.165811,-4.108213,5.112562,0.169103,4.121530,7.605095,-8.567895,-2.312301,-7.071239,-7.710002,-1.031313,-8.923870,0.868518,0.241682,-9.132659,-8.259615,6.215256,-6.794461,7.236208,0.168223,1.947818,9.466834,7.898222,0.140307,-5.725127,5.840829,3.001513,8.406196,-2.996555,-8.793773],[-0.210182,2.295616,2.404855,-4.846693,0.173493,5.878108,1.466596,-0.286271,-8.649189,-5.269217,-1.435248,-5.982150,-0.776855,-5.226086,-4.653707,4.952912,7.294392,-7.942619,-7.503868,5.860922,4.905755,4.946432,5.337950,9.435151,4.327133,4.366300,-0.914837,8.607295,1.529310,6.654434,-9.620951,-4.587561,5.151953,1.809416,-8.981379,3.086118,8.336832,-9.036089,0.317611,9.959329,5.419607,-0.754888,-9.971876,-6.088049,4.969343,7.701894,-5.478895,-5.357630,-3.875926,-8.687734,-1.669991,-8.002253,-7.531337,6.792474,8.792871,-9.374835,3.644235,-9.468657,-4.767932,2.114792,-0.735786,3.531387,6.850928,9.510198,9.128680,-7.942237]], dtype = "float32")#candidate|2059|(6, 66)|const|float32
call_2058 = relay.TupleGetItem(func_1728_call(relay.reshape(const_2059.astype('float32'), [396,])), 0)
call_2060 = relay.TupleGetItem(func_1730_call(relay.reshape(const_2059.astype('float32'), [396,])), 0)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2061 = relay.TupleGetItem(func_1434_call(), 0)
call_2062 = relay.TupleGetItem(func_1435_call(), 0)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_2070 = relay.TupleGetItem(func_769_call(), 1)
call_2071 = relay.TupleGetItem(func_770_call(), 1)
output = relay.Tuple([uop_2056,call_2058,const_2059,call_2061,call_2070,])
output2 = relay.Tuple([uop_2056,call_2060,const_2059,call_2062,call_2071,])
func_2075 = relay.Function([var_2055,], output)
mod['func_2075'] = func_2075
mod = relay.transform.InferType()(mod)
mutated_mod['func_2075'] = func_2075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2076 = relay.var("var_2076", dtype = "float64", shape = (7, 11, 1))#candidate|2076|(7, 11, 1)|var|float64
func_2075_call = mutated_mod.get_global_var('func_2075')
call_2077 = func_2075_call(var_2076)
output = call_2077
func_2078 = relay.Function([var_2076], output)
mutated_mod['func_2078'] = func_2078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_2080 = relay.TupleGetItem(func_445_call(), 0)
call_2081 = relay.TupleGetItem(func_446_call(), 0)
output = relay.Tuple([call_2080,])
output2 = relay.Tuple([call_2081,])
func_2095 = relay.Function([], output)
mod['func_2095'] = func_2095
mod = relay.transform.InferType()(mod)
output = func_2095()
func_2096 = relay.Function([], output)
mutated_mod['func_2096'] = func_2096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1207_call = mod.get_global_var('func_1207')
func_1209_call = mutated_mod.get_global_var('func_1209')
call_2117 = relay.TupleGetItem(func_1207_call(), 2)
call_2118 = relay.TupleGetItem(func_1209_call(), 2)
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
var_2125 = relay.var("var_2125", dtype = "uint16", shape = (4860,))#candidate|2125|(4860,)|var|uint16
var_2126 = relay.var("var_2126", dtype = "float32", shape = (324,))#candidate|2126|(324,)|var|float32
call_2124 = relay.TupleGetItem(func_1317_call(relay.reshape(var_2125.astype('uint16'), [324, 15]), relay.reshape(var_2126.astype('float32'), [9, 9, 4]), ), 4)
call_2127 = relay.TupleGetItem(func_1321_call(relay.reshape(var_2125.astype('uint16'), [324, 15]), relay.reshape(var_2126.astype('float32'), [9, 9, 4]), ), 4)
output = relay.Tuple([call_2117,call_2124,var_2125,var_2126,])
output2 = relay.Tuple([call_2118,call_2127,var_2125,var_2126,])
func_2137 = relay.Function([var_2125,var_2126,], output)
mod['func_2137'] = func_2137
mod = relay.transform.InferType()(mod)
mutated_mod['func_2137'] = func_2137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2137_call = mutated_mod.get_global_var('func_2137')
var_2139 = relay.var("var_2139", dtype = "uint16", shape = (4860,))#candidate|2139|(4860,)|var|uint16
var_2140 = relay.var("var_2140", dtype = "float32", shape = (324,))#candidate|2140|(324,)|var|float32
call_2138 = func_2137_call(var_2139,var_2140,)
output = call_2138
func_2141 = relay.Function([var_2139,var_2140,], output)
mutated_mod['func_2141'] = func_2141
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2250 = relay.var("var_2250", dtype = "int64", shape = ())#candidate|2250|()|var|int64
var_2251 = relay.var("var_2251", dtype = "int64", shape = (7, 8, 1))#candidate|2251|(7, 8, 1)|var|int64
bop_2252 = relay.add(var_2250.astype('int64'), var_2251.astype('int64')) # shape=(7, 8, 1)
bop_2265 = relay.logical_xor(var_2250.astype('int16'), var_2251.astype('int16')) # shape=(7, 8, 1)
bop_2268 = relay.maximum(bop_2265.astype('int64'), relay.reshape(var_2251.astype('int64'), relay.shape_of(bop_2265))) # shape=(7, 8, 1)
uop_2276 = relay.sin(bop_2268.astype('float64')) # shape=(7, 8, 1)
bop_2305 = relay.greater_equal(uop_2276.astype('bool'), relay.reshape(bop_2265.astype('bool'), relay.shape_of(uop_2276))) # shape=(7, 8, 1)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_2314 = relay.TupleGetItem(func_1344_call(), 0)
call_2315 = relay.TupleGetItem(func_1345_call(), 0)
bop_2316 = relay.left_shift(bop_2305.astype('uint16'), relay.reshape(bop_2252.astype('uint16'), relay.shape_of(bop_2305))) # shape=(7, 8, 1)
func_1582_call = mod.get_global_var('func_1582')
func_1583_call = mutated_mod.get_global_var('func_1583')
call_2330 = relay.TupleGetItem(func_1582_call(), 0)
call_2331 = relay.TupleGetItem(func_1583_call(), 0)
uop_2338 = relay.asinh(bop_2268.astype('float32')) # shape=(7, 8, 1)
var_2340 = relay.var("var_2340", dtype = "float64", shape = (7, 8, 16))#candidate|2340|(7, 8, 16)|var|float64
bop_2341 = relay.add(uop_2276.astype('uint32'), var_2340.astype('uint32')) # shape=(7, 8, 16)
output = relay.Tuple([call_2314,bop_2316,call_2330,uop_2338,bop_2341,])
output2 = relay.Tuple([call_2315,bop_2316,call_2331,uop_2338,bop_2341,])
func_2354 = relay.Function([var_2250,var_2251,var_2340,], output)
mod['func_2354'] = func_2354
mod = relay.transform.InferType()(mod)
var_2355 = relay.var("var_2355", dtype = "int64", shape = ())#candidate|2355|()|var|int64
var_2356 = relay.var("var_2356", dtype = "int64", shape = (7, 8, 1))#candidate|2356|(7, 8, 1)|var|int64
var_2357 = relay.var("var_2357", dtype = "float64", shape = (7, 8, 16))#candidate|2357|(7, 8, 16)|var|float64
output = func_2354(var_2355,var_2356,var_2357,)
func_2358 = relay.Function([var_2355,var_2356,var_2357,], output)
mutated_mod['func_2358'] = func_2358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_2365 = relay.TupleGetItem(func_1344_call(), 0)
call_2366 = relay.TupleGetItem(func_1345_call(), 0)
output = call_2365
output2 = call_2366
func_2367 = relay.Function([], output)
mod['func_2367'] = func_2367
mod = relay.transform.InferType()(mod)
output = func_2367()
func_2368 = relay.Function([], output)
mutated_mod['func_2368'] = func_2368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2367_call = mod.get_global_var('func_2367')
func_2368_call = mutated_mod.get_global_var('func_2368')
call_2438 = func_2367_call()
call_2439 = func_2367_call()
uop_2445 = relay.atan(call_2438.astype('float32')) # shape=(324, 1)
uop_2447 = relay.atan(call_2439.astype('float32')) # shape=(324, 1)
func_1095_call = mod.get_global_var('func_1095')
func_1097_call = mutated_mod.get_global_var('func_1097')
call_2448 = relay.TupleGetItem(func_1095_call(), 0)
call_2449 = relay.TupleGetItem(func_1097_call(), 0)
output = relay.Tuple([uop_2445,call_2448,])
output2 = relay.Tuple([uop_2447,call_2449,])
func_2454 = relay.Function([], output)
mod['func_2454'] = func_2454
mod = relay.transform.InferType()(mod)
output = func_2454()
func_2455 = relay.Function([], output)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2475 = relay.const([[[7.397730,3.128748,9.534332]],[[-3.715898,-3.727201,-0.078699]],[[7.516142,-0.025929,-8.467155]],[[-0.703268,3.016175,8.465220]],[[2.748794,-0.519347,-9.205459]]], dtype = "float32")#candidate|2475|(5, 1, 3)|const|float32
uop_2476 = relay.acosh(const_2475.astype('float32')) # shape=(5, 1, 3)
bop_2493 = relay.floor_mod(uop_2476.astype('float64'), relay.reshape(const_2475.astype('float64'), relay.shape_of(uop_2476))) # shape=(5, 1, 3)
uop_2499 = relay.cos(const_2475.astype('float64')) # shape=(5, 1, 3)
bop_2505 = relay.bitwise_and(uop_2476.astype('int64'), relay.reshape(const_2475.astype('int64'), relay.shape_of(uop_2476))) # shape=(5, 1, 3)
output = relay.Tuple([bop_2493,uop_2499,bop_2505,])
output2 = relay.Tuple([bop_2493,uop_2499,bop_2505,])
func_2512 = relay.Function([], output)
mod['func_2512'] = func_2512
mod = relay.transform.InferType()(mod)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2512_call = mutated_mod.get_global_var('func_2512')
call_2513 = func_2512_call()
output = call_2513
func_2514 = relay.Function([], output)
mutated_mod['func_2514'] = func_2514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1637_call = mod.get_global_var('func_1637')
func_1638_call = mutated_mod.get_global_var('func_1638')
call_2553 = relay.TupleGetItem(func_1637_call(), 0)
call_2554 = relay.TupleGetItem(func_1638_call(), 0)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_2555 = relay.TupleGetItem(func_445_call(), 0)
call_2556 = relay.TupleGetItem(func_446_call(), 0)
output = relay.Tuple([call_2553,call_2555,])
output2 = relay.Tuple([call_2554,call_2556,])
func_2560 = relay.Function([], output)
mod['func_2560'] = func_2560
mod = relay.transform.InferType()(mod)
output = func_2560()
func_2561 = relay.Function([], output)
mutated_mod['func_2561'] = func_2561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2560_call = mod.get_global_var('func_2560')
func_2561_call = mutated_mod.get_global_var('func_2561')
call_2663 = relay.TupleGetItem(func_2560_call(), 0)
call_2664 = relay.TupleGetItem(func_2561_call(), 0)
func_404_call = mod.get_global_var('func_404')
func_406_call = mutated_mod.get_global_var('func_406')
call_2673 = relay.TupleGetItem(func_404_call(), 0)
call_2674 = relay.TupleGetItem(func_406_call(), 0)
output = relay.Tuple([call_2663,call_2673,])
output2 = relay.Tuple([call_2664,call_2674,])
func_2675 = relay.Function([], output)
mod['func_2675'] = func_2675
mod = relay.transform.InferType()(mod)
output = func_2675()
func_2676 = relay.Function([], output)
mutated_mod['func_2676'] = func_2676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2698 = relay.var("var_2698", dtype = "float32", shape = (5, 2, 2))#candidate|2698|(5, 2, 2)|var|float32
uop_2699 = relay.cos(var_2698.astype('float32')) # shape=(5, 2, 2)
bop_2720 = relay.equal(var_2698.astype('bool'), relay.reshape(uop_2699.astype('bool'), relay.shape_of(var_2698))) # shape=(5, 2, 2)
func_670_call = mod.get_global_var('func_670')
func_672_call = mutated_mod.get_global_var('func_672')
call_2724 = relay.TupleGetItem(func_670_call(), 2)
call_2725 = relay.TupleGetItem(func_672_call(), 2)
func_2137_call = mod.get_global_var('func_2137')
func_2141_call = mutated_mod.get_global_var('func_2141')
const_2730 = relay.const([-6,4,7,8,-6,9,8,9,-1,-4,1,-10,9,-6,-2,-5,-8,-4,4,8,9,-3,-3,-3,-3,1,4,-1,-1,1,8,2,6,2,-5,3,-10,-3,9,7,-4,7,10,-2,-7,-4,9,-8,1,-7,2,2,-6,-3,10,6,10,3,-3,3,-10,-2,5,5,2,2,-2,4,-9,3,-10,-5,-6,10,-5,-9,2,-3,-3,-2,-10,1,-9,2,-5,-9,-5,5,3,1,10,3,3,-8,-2,-3,5,6,2,-3,-2,2,-7,9,2,-9,1,-4,-8,1,1,4,-10,9,6,-9,-4,-6,-5,2,6,-10,5,-9,6,-3,-4,4,-9,7,7,-6,4,4,8,9,-9,-10,2,-7,1,-7,9,10,6,-3,-3,6,10,9,7,-1,6,3,3,10,8,-3,-1,-4,2,2,6,-3,9,2,9,-4,-7,4,-5,-7,2,-1,-3,-1,-4,-8,-2,-5,-2,-7,-2,-7,8,-2,6,9,7,2,-6,-3,-8,9,4,9,2,-9,10,7,7,-2,-7,4,2,-4,-1,-9,9,-8,-5,-9,6,-3,-5,-4,-10,-7,7,10,9,10,-10,10,-8,-2,-7,9,-10,10,3,-8,-10,9,-6,9,-1,-5,7,-10,-6,-7,3,6,8,-7,-10,5,9,1,3,1,8,-4,-3,-1,7,2,4,3,6,5,6,9,-4,-3,10,-2,1,-5,-2,-3,-6,1,5,-2,-6,8,-8,9,5,10,5,-6,-10,9,9,3,7,3,-9,-4,3,9,8,3,10,-1,-7,-1,7,-9,4,-2,-7,4,10,-3,9,-4,1,-2,-3,8,-1,-7,1,-5,-1,7,-1,-5,10,-6,7,-7,9,1,-4,2,-8,-4,-8,-3,5,8,-4,9,-9,4,-2,6,2,-3,-6,4,7,-2,-8,-5,-8,10,-4,-3,-1,10,-8,7,6,8,7,6,1,-9,7,-3,7,-5,4,5,-7,-1,3,-6,-9,1,-10,2,-6,-2,4,-8,-1,-3,2,-2,-3,5,2,5,10,9,-4,1,1,3,-1,8,5,-8,-7,8,-3,8,-6,9,10,8,-9,5,4,-7,8,-8,-7,10,9,6,2,-7,6,6,4,-1,3,-4,4,4,9,7,-10,-1,-4,1,2,6,-6,5,6,-4,2,8,9,7,5,5,-10,6,-7,2,7,-9,-8,-2,2,5,-3,-9,-4,2,10,-7,-6,-4,10,-2,2,7,-10,6,6,-6,-2,-1,1,8,-1,-10,5,-1,10,1,7,-1,8,8,9,-3,9,9,-7,1,-1,-6,7,-3,-3,8,-4,-6,8,-6,-8,-10,-3,8,8,-10,2,-7,-5,3,-7,-7,-2,5,7,-9,-10,-1,-7,-5,-8,-6,-4,9,-7,9,-5,-5,9,7,1,10,-4,-8,-2,8,9,2,10,5,4,-1,10,6,-8,-3,8,4,-6,2,5,-8,5,10,-1,-3,8,-4,2,8,-2,10,-6,-9,-5,10,3,8,10,-5,4,-6,4,3,-7,-7,-1,8,-1,10,9,10,10,2,-6,8,5,-2,-3,8,-5,-8,3,-4,4,4,3,-5,-10,2,-4,-7,6,1,-4,9,3,6,5,10,-3,3,8,9,-7,-5,-3,1,2,9,8,-5,-9,-6,-10,-6,-3,-7,8,-1,8,5,8,3,7,-8,-1,-7,4,5,-2,-5,9,-7,1,-10,-4,2,-1,4,6,5,4,6,-7,-4,-1,5,-4,-6,10,3,1,8,2,-1,3,-6,10,-7,-4,-8,-9,-4,7,7,6,-1,-7,10,-10,-10,1,-10,-7,-7,-9,7,-10,-2,-10,4,10,4,6,-9,-9,9,-2,-8,-9,3,2,5,-10,8,-5,8,8,3,8,-2,10,4,2,2,-10,9,-4,3,1,-5,-4,2,-5,-7,8,7,-1,-9,-6,6,7,-8,-10,-6,-2,9,-2,-1,-7,-9,10,-2,-10,5,3,9,-7,-2,8,9,-9,-10,-9,-9,1,-1,5,-3,-4,10,-10,-9,8,5,9,7,-10,8,-8,-6,-6,-10,-10,-7,-1,-4,-10,1,4,5,10,1,1,-1,-10,-9,-6,9,-4,-2,7,-10,-9,-4,-7,-6,3,6,1,-2,-6,7,-4,10,5,4,8,-7,-5,9,2,-6,5,6,3,6,2,3,-2,-3,7,-8,-1,1,8,7,-5,4,7,7,9,-1,-9,-7,9,9,-9,-10,-4,6,3,1,-6,-10,-4,-5,10,-3,10,9,10,-5,5,-1,8,-10,-1,-1,-7,-4,-5,3,6,-4,6,8,-5,6,10,-8,5,1,10,-4,10,5,8,-3,-4,1,-4,5,-1,7,8,-2,-5,8,-3,-2,10,-8,-7,-3,10,2,-2,-1,-10,4,6,-1,-7,8,-1,2,-2,-2,-3,-2,8,7,1,-2,-6,8,-2,-7,-8,-10,-9,-2,7,2,8,3,7,5,7,8,-4,9,7,-7,-3,4,1,3,-2,8,-6,-8,-2,-3,-2,4,9,-2,-9,9,-7,-4,-3,-6,9,-6,6,9,9,-9,-3,7,-10,8,9,1,-4,-4,-1,1,4,-8,5,10,-1,5,6,8,2,-5,-3,6,-3,-4,1,-6,-7,5,4,-6,-6,9,-2,6,-2,4,7,-3,-10,-7,-4,-4,-9,-3,-6,-6,-9,-4,1,-6,3,8,-9,2,-10,10,4,-7,7,-6,10,-7,8,-3,-3,1,8,-10,2,8,-3,-8,-4,-9,-6,4,-6,6,-4,2,7,-5,-5,-3,9,9,-4,8,-1,-9,-4,2,5,4,6,-9,1,7,1,3,5,-1,-6,-7,5,-3,-2,-9,-2,8,-10,8,-1,9,8,1,3,-10,-10,-7,4,4,-4,3,-7,-3,-8,-10,9,2,-1,-9,-6,3,-8,2,10,-8,-8,-2,1,-4,10,9,-5,-5,5,-9,4,6,-2,-4,4,-1,-4,-9,-10,-4,-9,10,-4,-8,-10,8,1,-8,4,-9,3,-3,3,-1,-7,7,-8,9,3,-10,6,-9,-6,4,-8,-8,-3,7,3,2,5,-3,6,8,1,2,-8,6,7,-1,5,5,10,-5,-4,-10,-6,-5,-7,10,8,7,5,9,-5,9,2,7,8,5,-1,-2,-2,-7,-7,-8,3,5,1,1,6,6,-6,2,-9,7,-3,-4,5,5,2,-8,-1,4,7,-7,-5,-1,-10,-4,-9,8,9,9,5,5,9,2,-8,-9,-2,-8,-1,-10,3,9,-7,5,9,10,-10,-3,10,-9,4,3,-6,6,1,8,2,-5,-4,-6,6,7,3,-5,5,-1,-3,4,-7,-9,-8,2,6,-10,-8,1,4,-10,-8,-10,-10,-2,7,-4,-8,-3,-10,6,-4,4,5,-8,5,-6,4,6,10,6,-5,2,-3,-10,1,9,-4,-9,-10,8,4,8,1,-1,1,-8,8,-10,6,4,-7,5,9,10,1,-5,-1,5,7,3,-3,-2,1,-4,3,-4,-2,-2,3,10,-10,-10,-10,-5,9,4,-10,-7,-10,10,10,6,5,2,-1,-1,-9,-4,-6,-7,6,8,-2,9,-5,-7,-4,-6,-2,6,-3,6,10,3,8,10,3,-2,-5,9,1,-5,-1,-2,1,8,-5,-6,-4,-10,8,8,7,10,-2,-2,-5,8,9,-10,-7,2,3,-8,6,-1,5,-10,1,4,7,8,4,9,-5,-4,9,6,-6,3,10,8,5,-10,8,-2,2,8,-8,-9,-9,-5,9,-2,-6,4,-9,3,-10,10,1,-4,6,8,10,6,8,-8,3,-1,5,6,10,5,4,-10,9,-7,6,8,-3,-9,-6,-8,-7,7,-6,5,2,-6,7,-3,-1,-1,8,-7,4,1,-3,8,-8,3,9,10,7,-10,-3,1,7,-3,3,-3,-5,10,3,-7,4,7,-7,-5,-2,-9,1,-2,-5,-3,-4,7,1,9,-5,9,8,3,2,2,-2,-10,2,-1,-7,-5,-1,2,2,-7,10,8,-1,-1,-6,6,3,-1,8,-2,-6,-9,1,-8,5,-2,3,-10,9,-7,6,3,9,-6,7,5,-7,8,-6,-1,-4,-3,-2,-1,-6,-6,-2,-2,4,-2,-8,-2,-9,-2,-7,-7,7,7,-5,-10,9,-3,-4,3,-3,-7,-2,-5,-9,8,-2,-8,5,8,-6,-10,2,-5,8,-2,-1,-3,8,-5,-5,-7,-8,-3,10,4,8,10,-9,6,-1,2,9,-6,-3,6,-4,4,7,8,9,-5,9,-10,-10,-10,7,6,7,-3,-5,-6,-3,2,10,-9,-3,7,-2,2,3,5,-2,-6,-3,9,9,6,8,3,-9,6,-1,-5,1,-6,-7,-6,2,-10,-10,-2,4,4,5,9,-2,-7,9,-7,-7,-7,-4,7,-5,-10,6,6,9,4,-7,-9,10,-5,7,-1,5,-1,9,4,7,-8,5,4,4,-7,3,-2,-1,3,-9,4,-2,-2,5,2,-9,4,4,7,8,-1,-1,7,9,1,6,-9,-10,-7,8,-8,2,2,-2,6,-4,-2,-9,6,10,-4,-3,-3,8,10,1,-3,-2,1,-8,3,-5,9,-5,-1,-2,-9,2,10,4,-3,7,-8,-5,-2,-9,4,-1,7,8,1,7,-7,-4,6,-6,-4,9,4,2,-6,1,4,-3,-10,-1,2,-2,6,5,-5,2,-6,1,4,5,6,-10,-10,3,3,-10,3,-4,-2,-2,-2,6,5,9,5,-9,-10,3,-9,9,-4,9,-4,8,-3,-3,-5,6,-10,-9,-9,-8,-7,-8,-9,10,-9,-1,-1,-7,7,3,10,-2,-2,-5,-1,-9,-4,-5,-7,4,-4,-7,4,-3,-5,-5,-6,5,-1,-1,3,-1,9,10,2,2,-1,-5,4,-7,4,7,-10,10,-5,6,-10,-7,-4,5,-2,-4,-7,-7,-6,-3,8,-2,2,-2,10,-7,4,9,10,3,-2,-7,7,1,10,-6,2,9,-8,1,2,10,1,-5,5,4,-7,6,5,-7,-9,-5,1,-5,8,8,-3,5,8,-4,8,-2,-9,8,6,-10,8,-10,-1,9,2,-7,-6,8,10,6,-1,2,-7,-5,6,1,-1,5,3,-9,-1,-9,-9,-10,-10,7,-5,3,-7,-6,-6,-7,6,-10,5,-6,-8,-1,4,5,8,-9,-1,4,3,-3,6,9,-1,3,-8,2,5,-4,5,-5,3,5,-6,-4,-10,1,6,-8,-7,-4,-9,5,-10,-1,10,9,9,7,-2,8,7,-7,-7,1,3,3,2,4,-6,-8,-2,-10,-10,10,-8,-3,8,-8,-5,1,4,10,9,-9,-10,1,-3,-4,-8,6,-3,-2,1,7,9,-3,-1,9,6,7,5,7,9,-3,-6,-6,10,-1,8,-6,-6,-9,2,9,6,-4,-3,10,-2,2,4,8,-4,6,9,-8,-2,3,7,-2,9,-5,-6,-8,-10,6,-6,9,-5,3,-8,8,10,-4,5,-9,3,-9,-8,5,7,1,6,-5,-4,3,-9,-2,4,5,3,6,-9,4,1,-3,-1,-2,-4,-7,5,-8,3,-3,-7,8,4,7,8,1,1,8,8,-8,-6,9,-7,6,-9,8,-9,8,-10,-7,6,-10,1,6,9,-4,-1,8,1,7,-5,8,3,9,10,-4,5,-1,1,8,5,8,-6,-3,2,-9,-7,3,2,3,-10,-6,8,-3,-9,2,-4,10,-9,-9,3,10,-4,1,-6,7,9,1,5,10,-7,-5,-5,1,8,-6,7,-2,-8,-6,-7,-10,-8,-8,5,4,4,-2,-6,4,-2,-6,4,-9,-3,7,-8,8,8,-9,-8,4,6,-1,-9,-8,-5,10,-2,-4,-4,7,-9,-1,3,-1,-7,-10,-3,7,6,-4,8,10,3,-7,6,2,-8,-4,5,9,2,-2,10,8,-5,-9,-8,-4,-5,-9,-4,-10,-6,-3,-10,10,2,1,-3,2,-3,10,-9,2,5,9,-6,4,-3,-10,7,-7,4,-5,-8,5,-5,3,-9,-2,-10,-6,9,-8,-4,5,10,4,-1,3,3,3,2,4,2,-8,6,-1,-5,-7,-7,4,-6,3,7,-9,5,10,9,-1,-1,-7,6,-4,-5,9,5,1,-2,-1,2,9,3,7,7,-4,10,7,-7,4,-2,-6,-6,8,-5,7,8,-7,7,-2,-3,-3,8,-8,9,-9,-4,-9,3,-8,-4,-8,-1,3,10,-2,-4,7,-3,6,-4,6,-9,-10,-10,-3,-5,1,7,-6,1,-1,3,6,-10,1,-7,-3,1,3,4,-8,-8,-5,-2,3,10,-10,-1,-10,-9,4,-7,-6,-2,10,4,5,8,8,-2,5,6,-5,-2,-7,-6,-8,-10,1,-3,8,-10,1,4,8,-2,-7,10,3,-5,-4,-1,-3,-7,5,-5,7,-7,-1,-10,8,-4,10,5,6,4,-2,-4,-10,-9,-1,7,10,-8,8,4,10,8,-1,-3,-4,9,-6,1,4,-8,-4,4,-2,9,-2,5,-10,-2,-8,2,-6,6,-1,-5,-6,-1,9,-8,-10,2,-1,-4,9,-4,4,7,-6,-9,1,-4,-8,-1,2,9,-8,4,5,-10,7,-1,1,-9,2,-6,4,2,-4,-9,2,-8,9,10,1,8,8,-9,7,6,7,-2,1,-3,7,-3,9,1,-5,-2,5,-6,-9,-9,-4,6,6,-4,-4,-4,-8,1,-10,5,-7,4,9,2,7,-4,8,-6,-10,3,-7,4,-6,3,1,-3,-9,8,-9,5,2,8,-1,-6,5,4,8,7,5,2,-10,-2,-2,-8,-1,-6,4,4,-8,-6,-10,5,10,-4,2,9,-10,2,3,10,2,-6,-2,4,1,-5,2,-10,1,-5,9,8,7,9,1,4,7,-2,10,-9,5,3,5,8,-7,-1,-9,6,-9,7,-6,3,-3,-2,-10,6,-6,-1,-10,5,3,2,4,-9,-2,-3,9,2,3,-5,-7,-6,-7,2,-7,-5,-4,2,6,3,10,-8,3,9,6,-9,-4,-5,-2,-10,-5,-9,3,-9,5,-9,-9,1,9,-10,-3,-7,1,-8,9,4,-3,5,8,-5,7,7,-10,-9,-10,3,7,-2,2,-3,-10,-6,-2,8,-6,-3,6,-8,8,-5,-6,4,8,2,-8,2,-4,8,1,5,1,-8,-8,5,-6,6,9,-7,-8,9,-6,3,-9,-5,8,-8,10,6,-4,3,1,4,-1,-9,10,6,-8,7,9,10,3,-6,3,10,5,9,-5,8,-4,7,-4,1,2,-9,-1,10,-6,7,-10,-9,2,-3,-1,-3,7,-8,-6,2,8,-1,-10,-2,-7,8,-8,2,-4,-7,7,9,-3,-4,-9,-7,10,5,6,8,8,1,-4,-6,-10,-3,-4,-1,-3,-5,3,-9,-7,5,-2,9,1,-6,2,3,-6,7,3,8,-2,10,3,10,-6,7,10,-7,-3,7,-8,5,9,5,-9,7,4,-7,-9,-10,4,2,-1,-6,-4,8,-3,8,-5,3,-4,5,10,-6,1,-3,-3,-8,3,-9,-6,1,-1,9,-9,-2,-5,-2,1,5,6,-6,2,-1,9,-4,-6,4,1,5,-8,-5,-2,-7,7,-6,9,-9,-7,5,-2,-2,-1,6,-10,2,-6,8,-3,4,8,-10,1,7,2,5,-1,2,3,-4,1,-8,4,-8,2,9,-1,6,-10,1,5,8,4,7,-2,-8,-8,1,-4,-3,10,-8,-10,-2,-7,6,2,7,-6,3,5,2,-10,7,3,-2,-1,5,-5,2,1,-4,-2,8,3,-9,-3,-2,-5,8,-1,2,-9,1,-3,5,-3,-6,10,-4,-5,3,-5,4,-6,-7,-1,6,3,5,2,-1,-1,-1,-2,5,-9,9,3,-1,4,-5,4,-6,-9,-4,-10,-8,-1,1,-4,-3,3,7,3,-5,6,1,-1,1,-9,3,-10,-10,7,-4,-8,-6,-7,8,-2,7,5,10,-7,8,-5,-5,1,6,7,-1,-7,5,-1,-5,10,-1,-2,-10,1,6,8,-3,-7,7,10,-8,-6,-2,9,-7,9,-3,8,-9,1,7,9,8,-10,9,-4,7,-3,4,4,1,9,4,7,-6,-1,10,4,5,5,-4,-2,-1,-9,8,-8,9,-1,5,-8,-6,8,8,-6,-8,8,1,2,-6,-7,-8,-3,4,-10,2,4,9,-8,3,-2,6,-2,2,9,7,-4,4,-2,1,-9,-1,5,-4,7,-6,8,-8,8,-6,-10,4,-10,1,-7,5,9,9,-4,-6,10,-7,-1,1,-5,-8,-2,8,1,5,2,-5,3,-5,-5,-7,3,5,9,5,3,-10,6,-8,-7,-8,-10,-2,-7,2,-9,8,3,8,-7,7,-6,6,4,10,6,2,1,1,-10,9,-9,3,-10,5,4,9,10,-2,1,6,4,-5,4,2,-8,5,-9,1,-7,-9,8,-1,-5,-3,-6,4,-8,4,5,-6,-10,10,9,-3,8,7,1,-4,-10,-5,-7,8,-7,9,-2,-5,-6,-4,-8,1,-8,-4,6,-5,7,5,-8,1,-7,9,5,-2,3,-8,-10,9,-9,6,4,-4,-1,5,3,-9,6,2,6,-4,9,-9,3,6,4,-9,-1,-7,3,-6,-2,1,-4,1,4,-6,7,1,-7,4,-8,10,-6,-4,1,-7,4,10,8,8,7,6,-1,-6,3,10,2,1,-6,-7,6,1,2,9,-3,4,1,5,-9,10,10,-5,9,10,-2,6,1,-9,-9,2,5,3,8,-8,1,-8,10,-5,1,6,-4,-3,-10,-9,1,10,-9,-2,2,-3,9,-4,-7,10,4,-1,-8,5,-7,6,6,-5,-10,-2,-10,3,-6,-8,6,1,6,10,6,-4,10,2,8,10,6,-2,5,-6,4,6,-4,2,8,-3,-9,-9,7,-4,-9,-6,-4,-3,-4,4,5,-8,8,8,-5,-2,8,-3,1,1,-2,6,5,-9,-8,-5,-2,3,-4,-5,10,3,-9,4,-6,9,-1,-5,6,-3,6,9,-2,9,-1,-7,4,-10,8,2,-8,1,-7,8,-10,-10,-1,-6,1,-1,2,7,7,10,1,7,-4,-3,-5,-6,1,3,5,9,7,-10,7,6,7,9,-5,-9,7,1,2,10,1,7,3,4,5,10,3,8,-9,6,-5,4,-7,-7,10,4,1,9,-7,-5,-9,4,8,-10,9,2,2,-8,-10,-10,2,-6,-5,-8,-8,-5,-7,-6,3,3,-3,5,-10,-4,8,3,-10,-3,-3,-7,2,-9,3,6,-3,-7,4,10,5,-6,-2,4,-7,-4,6,3,-3,8,10,-9,3,-7,-10,-10,-3,-9,-5,-4,8,5,9,-3,-2,8,7,5,5,-4,9,9,8,8,1,-6,-1,-4,-10,-3,-9,4,-10,3,-1,10,1,-3,-7,4,2,-4,2,-3,4,7,-9,-9,-2,-4,-1,2,-4,-3,-7,-7,-9,-1,-1,-7,2,-8,7,-10,10,-1,-10,5,1,5,6,-4,-2,-8,-9,8,9,2,3,-4,-10,6,-9,4,-8,7,-8,1,-7,-5,-3,8,8,7,-6,6,7,3,-4,7,5,-6,-6,5,5,8,2,2,-9,-3,2,-8,3,5,8,9,-8,6,-1,5,-10,6,2,2,-6,4,-6,7,6,7,5,-7,3,7,6,-4,7,-8,9,-10,-7,-5,7,-2,-3,6,7,5,9,-7,-3,1,10,-9,-1,6,-3,1,-10,-4,-2,-4,-6,-2,-10,9,-10,5,4,-1,-5,5,5,-10,6,1,-4,10,4,4,1,-7,-6,2,-8,-6,-7,1,-4,-10,-4,-2,-8,8,-4,-5,-6,7,7,-5,-10,10,-2,3,1,-10,-4,3,5,-3,-4,6,-3,5,10,-6,10,10,-6,-10,6,-2,-10,-4,6,6,8,-1,6,-2,7,9,-4,9,-3,9,-7,-4,5,4,7,-5,-3,-5,-4,7,7,-7,8,2,-3,5,-1,-8,6,2,-1,8,1,3,2,-7,8,9,1,9,4,5,2,-4,3,-4,10,8,-9,9,5,-10,1,10,3,-6,-1,2,4,4,9,2,1,-3,5,10,9,2,1,1,-9,-1,-10,6,9,1,-7,1,5,8,5,9,-10,-3,-2,5,1,-6,10,-5,1,1,9,7,4,-5,3,-5,4,6,-2,9,-8,4,-6,-7,3,8,7,-7,1,4,-7,-7,-4,-8,3,-10,2,-8,-3,9,2,1,1,4,1,5,4,-8,6,-7,-3,9,2,-6,-2,-2,-2,-8,2,-6,10,10,5,4,-2,-2,9,2,9,-6,-3,-9,-3,10,9,-8,-7,-2,-6,4,9,-5,-7,10,5,1,8,2,5,9,-8,-2,7,7,-2,5,9,2,7,4,-9,9,-4,-9,5,-4,6,5,-4,9,5,9,-4,-2,2,4,-2,9,5,7,-5,-10,9,-6,-2,-8,9,-1,-8,-3,-10,2,-9,7,8,-4,7,5,3,-8,6,-2,-5,9,7,-6,10,-8,-8,5,-1,10,-4,3,-6,-2,8,1,-6,-1,-2,-1,-4,1,6,-9,-4,-2,-5,8,7,-6,-4,10,-7,5,7,-4,-5,-6,-1,-7,-5,-7,-5,2,7,-6,-4,2,-7,-3,-5,7,3,10,-8,1,7,2,5,1,-1,-2,5,-8,-3,7,9,-9,-5,6,-5,5,-7,3,10,-3,-2,5,8,-10,-6,10,-8,6,7,9,1,5,2,9,3,2,-6,3,-2,-5,-9,-2,4,-2,-3,7,4,3,10,-7,-3,-6,-8,5,1,6,6,9,-9,-3,2,6,1,-2,-1,-4,10,5,1,5,9,4,-1,-7,3,-1,-9,-1,-6,3,-3,-2,-7,10,7,9,-7,3,-5,-8,-2,3,8,4,-10,1,-2,-8,-10,-8,-4,-4,2,-10,-10,7,-1,-3,-6,-5,4,10,9,-6,6,7,-10,2,-2,1,5,2,-10,-5,4,3,-3,5,-10,-2,-6,8,-2,10,-5,6,8,-5,4,5,9,-7,2,6,-4,10,-7,-8,1,3,-10,7,8,8,-2,-10,-2,7,1,-8,2,-7,-8,-10,-6,6,-3,-5,5,-2,8,-9,-3,6,10,10,-4,2,3,-3,-8,-4,4,-3,5,-7,1,5,2,7,5,-5,4,1,3,6,-4,4,2,-6,-7,1,-9,-4,-10,-3,8,-4,-7,-2,10,2,10,2,7,10,1,4,10,10,-8,-4,3,9,-2,10,8,-8,2,-2,-9,3,-6,9,4,5,-2,-8,-5,-7,-9,3,-3,-8,2,-3,2,3,2,3,1,8,5,10,-3,10,-4,-1,-5,-1,7,-10,-8,7,4,6,6,-1,-9,2,6,6,-7,8,-6,-9,-2,3,3,-2,10,6,-3,8,6,8,3,5,-2,10,-3,-10,9,5,-3,-2,-4,-8,3,-10,5,-4,-1,6,1,9,6,-7,5,10,-8,1,-1,8,5,5,-6,-10,-8,-10,4,-3,1,7,1,-3,10,-10,3,4,-7,-1,10,10,8,6,-1,2,8,-7,-5,-9,-4,-5,-8,8,10,10,9,-7,-2,-8,-10,5,10,-9,2,-1,9,-5,4,4,-1,3,8,8,3,-5,8,2,-1,6,-1,10,-10,-8,-8,-8,9,-10,1,9,6,8,-1,4,3,7,-5,-5,2,9,6,-9,-9,1,7,-6,3,6,4,8,-2,-5,-2,3,-4,3,10,-4,-1,10,7,10,10,4,8,3,-8,6,-9,-3,-3,-2,10,-1,4,-8,7,-1,-4,1,10,9,-2,-6,-5,-3,-7,1,-10,-10,-6,-5,6,10,-4,1,4,-10,6,7,-6,2,-5,3,-7,-2,-3,6,5,-9,-4,3,-10,-6,8,10,4,-9,6,6,9,4,7,9,-5,-2,-1,-9,-7,-9,-8,1,2,-1,-6,-10,7,4,6,-7,-6,-10,-6,-7,-3,8,-7,3,2,8,3,2,-5,-5,4,10,10,6,-8,-9,-9,-2,7,-6,9,7,-5,1,7,-9,-7,10,10,3,9,10,-10,-6,6,-8,-7,7,5,-2,-4,-3,1,-8,1,10,5,10,10,6,10,-1,8,9,-5,-8,-3,10,6,4,1,-7,-1,4,3,-9,4,9,9,-7,-10,-3,-6,6,1,9,-3,-8,3,10,-2,8,9,7,-7,2,9,-2,-10,-7,10,3,-10,2,5,-9,10,-2,-7,7,-3,-3,6,-7,6,7,10,1,-3,5,-2,-6,2,-1,8,4,9,-6,-3,-9,-9,-6,8,-10,8,-10,10,5,5,2,6,-5,-1,7,-3,4,-3,-2,-8,2,6,8,-8,-7,-1,-6,-2,1,3,-9,4,-10,-6,8,5,-9,1,-6,-2,-4,1,-9,5,10,8,6,-5,-9,-1,2,-6,-4,8,-8,4,-3,-5,1,4,8,9,2,-2,-4,7,-6,4,-1,-3,-3,2,3,-10,-7,-4,-4,1,-8,8,-6,5,-9,-4,-3,1,4,-4,3,9,-8,-7,7,-10,-2,4,-7,-2,10,-9,4,9,-3,5,6,-8,-9,9,-4,1,-9,-8,4,3,7,-6,-1,-1,9,10,1,2,-2,6,-9,-6,1,-5,3,10,-9,4,-3,-4,-10,10,4,-3,-10,-4,5,-7,3,3,9,7,10,-8,6,-7,-8,-10,-8,9,-2,-7,1,3,-6,-10,-10,3,-8,-4,4,-1,-2,-3,3,-8,-4,-2,-1,-9,-3,-3,7,2,-10,-10,-2,5,1,4,-1,-9,-9,10,-7,-10,1,3,1,3,-6,6,-3,1,10,-6,-10,-5,-7,1,-5,4,6,4,-5,-9,-10,-10,-7,-5,-8,7,9,9,9,9,10,-10,3,4,-10,10,9,1,2], dtype = "uint16")#candidate|2730|(4860,)|const|uint16
var_2731 = relay.var("var_2731", dtype = "float32", shape = (324,))#candidate|2731|(324,)|var|float32
call_2729 = relay.TupleGetItem(func_2137_call(relay.reshape(const_2730.astype('uint16'), [4860,]), relay.reshape(var_2731.astype('float32'), [324,]), ), 3)
call_2732 = relay.TupleGetItem(func_2141_call(relay.reshape(const_2730.astype('uint16'), [4860,]), relay.reshape(var_2731.astype('float32'), [324,]), ), 3)
output = relay.Tuple([bop_2720,call_2724,call_2729,const_2730,var_2731,])
output2 = relay.Tuple([bop_2720,call_2725,call_2732,const_2730,var_2731,])
func_2757 = relay.Function([var_2698,var_2731,], output)
mod['func_2757'] = func_2757
mod = relay.transform.InferType()(mod)
var_2758 = relay.var("var_2758", dtype = "float32", shape = (5, 2, 2))#candidate|2758|(5, 2, 2)|var|float32
var_2759 = relay.var("var_2759", dtype = "float32", shape = (324,))#candidate|2759|(324,)|var|float32
output = func_2757(var_2758,var_2759,)
func_2760 = relay.Function([var_2758,var_2759,], output)
mutated_mod['func_2760'] = func_2760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2512_call = mod.get_global_var('func_2512')
func_2514_call = mutated_mod.get_global_var('func_2514')
call_2812 = relay.TupleGetItem(func_2512_call(), 2)
call_2813 = relay.TupleGetItem(func_2514_call(), 2)
output = call_2812
output2 = call_2813
func_2814 = relay.Function([], output)
mod['func_2814'] = func_2814
mod = relay.transform.InferType()(mod)
output = func_2814()
func_2815 = relay.Function([], output)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_551_call = mod.get_global_var('func_551')
func_552_call = mutated_mod.get_global_var('func_552')
call_2816 = relay.TupleGetItem(func_551_call(), 1)
call_2817 = relay.TupleGetItem(func_552_call(), 1)
output = call_2816
output2 = call_2817
func_2826 = relay.Function([], output)
mod['func_2826'] = func_2826
mod = relay.transform.InferType()(mod)
mutated_mod['func_2826'] = func_2826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mutated_mod.get_global_var('func_2826')
call_2827 = func_2826_call()
output = call_2827
func_2828 = relay.Function([], output)
mutated_mod['func_2828'] = func_2828
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2841 = relay.const([[[-10,5,2,5,-6,8,3,-3,-6,5,-9,10],[-9,4,-6,8,-1,-5,10,3,-7,7,6,8],[-3,7,-1,2,9,-8,10,2,-10,6,-9,7],[7,-5,-8,-7,7,-2,5,2,10,9,-7,-3],[8,-6,-8,4,-1,-10,-1,7,-5,10,-5,-3],[10,6,3,-4,-1,-9,-5,6,-1,4,-5,1],[2,-9,-2,1,-6,-1,8,-1,8,-2,2,-9],[-4,4,4,9,-7,-2,-3,-4,9,8,-1,-10],[9,-1,10,6,3,-5,-7,2,7,4,-6,-8],[4,-6,-5,5,10,8,8,-6,-4,-7,-9,5],[-4,5,9,-6,-9,9,1,-1,10,1,-1,-8]],[[-9,-6,-7,-4,1,-2,3,1,-10,-10,-6,2],[-10,3,-1,8,9,8,-4,6,2,-4,-6,8],[7,9,-9,-9,-5,10,-7,-5,2,-2,-8,4],[4,6,4,8,-2,-7,7,1,2,7,2,6],[7,-2,4,-8,3,10,8,1,4,-4,-3,2],[-6,5,-1,2,6,-7,-8,-1,-9,-8,-9,-10],[6,4,6,-7,5,10,2,5,4,2,-7,2],[-6,-4,1,9,-7,-9,9,7,7,-9,7,-8],[-8,-2,-3,-2,9,5,-1,7,7,2,1,9],[7,6,-4,5,-5,8,5,9,5,4,-8,7],[-1,1,-10,-10,10,1,4,-7,-6,9,4,-5]],[[-9,6,-2,-3,4,4,6,-1,4,4,1,-7],[6,-6,3,1,2,9,2,8,-8,8,-8,2],[-2,-8,-8,7,10,-6,7,-4,7,-5,-9,-3],[-5,3,-1,-5,-1,-5,9,-7,-9,1,10,-7],[3,6,-4,9,3,3,6,6,-1,10,-6,9],[10,3,7,9,-1,2,-5,5,10,1,-5,5],[9,-8,-10,2,8,2,-3,-7,-5,10,-7,-9],[2,-5,6,-7,-3,1,3,-3,-9,8,7,6],[4,3,10,10,-1,-3,3,3,-4,-9,-10,-7],[9,-10,-1,-10,2,-8,-5,-8,-3,3,-10,2],[-3,-10,5,-1,-3,3,-5,2,-6,2,9,8]],[[-1,-6,9,5,-8,4,-10,-10,-4,-10,-5,6],[1,5,-8,-1,-7,-1,6,-6,-9,-10,3,-6],[4,-6,6,-4,-4,8,3,-2,-6,-7,-7,9],[-3,-6,10,5,-8,4,-7,-3,-9,-2,2,-3],[6,-3,2,10,-10,4,-10,5,-4,-4,-9,-1],[-9,1,6,10,-5,-7,-4,4,3,5,1,-3],[-2,5,5,-2,-8,6,8,-7,10,1,1,9],[5,9,-7,-8,-9,-10,10,9,-4,3,-4,6],[6,-9,3,1,5,4,2,10,-7,-6,-2,-7],[1,-10,-2,-10,-6,-5,8,-8,8,4,4,-9],[-4,-9,9,5,-6,4,3,-8,2,9,1,-4]],[[9,-9,2,5,-5,2,-2,4,2,-8,2,4],[-1,-6,8,3,8,10,2,-5,4,8,4,4],[2,1,-9,-1,-5,5,7,-1,-2,6,-10,8],[8,-10,2,8,-9,9,1,-10,-7,2,-5,-10],[5,10,6,-9,-7,-9,-4,-2,-6,-1,-9,3],[-8,-1,-7,-1,-6,8,-10,-8,-10,6,4,7],[9,6,10,5,4,2,-6,4,5,-5,2,4],[2,6,-9,5,4,5,1,-4,5,-6,1,2],[3,3,-3,-9,-6,-1,9,-1,7,9,-8,-1],[-10,-2,7,9,3,7,-6,1,1,-6,-9,-3],[5,-4,-4,-5,-2,-7,3,2,5,-2,-6,-4]],[[-6,-9,-9,1,6,-8,10,7,2,-2,-8,-9],[-6,6,3,-10,10,3,-6,5,10,4,-7,-4],[3,-4,-2,5,-5,9,3,-8,-3,-4,9,-10],[-5,1,-5,2,10,-10,10,-8,8,-4,9,6],[7,10,1,7,4,7,10,7,7,10,-5,-2],[-6,-6,2,-6,3,-7,5,10,9,-7,9,8],[-3,3,7,-5,-6,9,-4,-9,2,-3,9,6],[-3,6,9,9,-2,-4,-10,3,9,-3,10,9],[-7,9,-8,-3,-10,-6,-5,-2,9,-8,-2,-6],[7,-3,-1,-9,7,-4,4,7,-8,-2,-7,-4],[10,-7,4,-5,-3,8,-3,2,-6,6,-6,4]],[[3,1,-10,-8,6,5,9,3,-8,-7,9,-10],[8,4,8,-9,4,3,-2,6,-8,-10,-1,-2],[3,10,9,-4,8,10,-6,7,9,-5,4,-1],[-2,-3,3,2,3,5,-1,-8,8,5,8,-7],[-3,-10,-6,1,-1,1,-8,-9,4,-4,6,6],[-9,-10,-2,-4,9,-3,-6,-3,9,-2,-8,7],[-6,8,2,-5,-2,9,-2,-10,8,8,-8,-2],[6,3,4,7,-10,3,-9,-4,-3,-7,-8,8],[10,2,8,4,-8,9,8,6,-10,-1,-5,-2],[-8,5,-5,5,-10,3,3,-3,6,-4,7,2],[9,8,8,2,6,3,-2,-7,7,2,9,2]],[[-7,-10,8,-6,5,1,-4,9,-2,-1,3,9],[-10,-4,6,6,4,-2,8,-9,9,-6,3,-3],[10,-9,4,6,7,-2,-6,8,4,2,7,-7],[-1,9,10,7,8,4,-4,-5,-10,7,5,8],[5,-3,1,-9,5,-6,-2,7,-1,-3,5,9],[6,3,-1,-3,3,1,10,-8,-9,-1,9,2],[-3,6,-2,-3,-1,10,-9,10,-2,6,10,6],[6,10,-7,7,7,8,-8,-6,9,-3,-2,8],[4,4,6,3,9,-9,-8,-8,10,2,9,9],[7,-4,-2,1,-6,10,-8,4,-8,6,9,-1],[-2,-7,3,8,-5,-7,5,-3,-6,3,-7,1]],[[-1,-3,3,-9,7,9,-9,9,9,3,3,-7],[2,-3,8,-6,1,9,-3,2,-4,9,-7,-9],[4,4,-9,-8,-2,10,5,9,5,-3,-6,-8],[5,6,-8,8,-7,9,3,9,-8,-5,4,8],[-2,10,5,10,7,-10,1,7,10,7,1,9],[4,-2,-10,10,3,-1,7,-8,9,1,8,1],[-2,-3,2,-4,-8,5,-9,9,4,-8,-3,-7],[-4,4,6,10,-4,3,-5,-4,-5,8,-5,-6],[6,10,-10,-4,5,8,5,-1,1,7,-3,10],[2,-2,4,6,1,3,-2,10,7,1,6,-3],[8,-6,2,10,3,-3,-1,-8,6,8,8,-7]],[[5,-9,2,9,-1,-2,8,-9,4,-7,4,9],[-9,-7,-2,2,-4,8,2,-5,-2,-5,9,-3],[-9,-9,-6,-2,5,1,-4,7,-5,-6,-4,-7],[-10,-1,10,3,2,2,-2,4,2,7,10,7],[-10,-2,4,5,4,4,-7,3,8,-1,8,8],[-3,-7,10,8,-7,-6,-10,6,6,7,-6,5],[6,4,1,3,8,7,-5,8,5,-4,7,-8],[9,-8,-6,1,-1,5,9,-6,-1,7,-7,-8],[10,-5,2,-2,1,-8,-3,8,-5,5,-2,-3],[3,-6,6,1,6,3,-1,8,4,-8,4,10],[8,5,6,2,-9,-8,-4,1,6,7,8,9]],[[1,9,-3,9,4,-3,4,-10,4,10,-8,8],[-4,1,-10,3,10,-9,1,-6,1,-7,-5,-2],[6,8,2,6,-1,-9,1,-4,-4,-4,2,1],[-9,10,7,2,-3,-5,-6,-2,-2,-10,3,-2],[9,-3,5,-6,-4,8,-10,3,3,-10,-1,-8],[1,3,-3,10,-2,5,-9,-4,1,4,-6,-7],[-5,10,7,-8,-5,4,-8,10,-7,9,-7,-9],[-9,-10,-10,-4,3,-2,1,1,-2,3,-9,-10],[-7,-2,-4,-3,-4,7,-7,10,6,-10,-1,-2],[6,-3,-8,1,3,-2,-8,1,-7,7,-1,3],[8,-2,-6,2,-10,9,9,5,-5,1,1,5]]], dtype = "int8")#candidate|2841|(11, 11, 12)|const|int8
var_2842 = relay.var("var_2842", dtype = "int8", shape = (11, 11, 12))#candidate|2842|(11, 11, 12)|var|int8
bop_2843 = relay.not_equal(const_2841.astype('bool'), relay.reshape(var_2842.astype('bool'), relay.shape_of(const_2841))) # shape=(11, 11, 12)
func_1728_call = mod.get_global_var('func_1728')
func_1730_call = mutated_mod.get_global_var('func_1730')
var_2848 = relay.var("var_2848", dtype = "float32", shape = (396,))#candidate|2848|(396,)|var|float32
call_2847 = relay.TupleGetItem(func_1728_call(relay.reshape(var_2848.astype('float32'), [396,])), 3)
call_2849 = relay.TupleGetItem(func_1730_call(relay.reshape(var_2848.astype('float32'), [396,])), 3)
var_2856 = relay.var("var_2856", dtype = "float32", shape = (396,))#candidate|2856|(396,)|var|float32
bop_2857 = relay.bitwise_and(var_2848.astype('uint32'), relay.reshape(var_2856.astype('uint32'), relay.shape_of(var_2848))) # shape=(396,)
bop_2867 = relay.mod(var_2842.astype('float32'), relay.reshape(bop_2843.astype('float32'), relay.shape_of(var_2842))) # shape=(11, 11, 12)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2880 = relay.TupleGetItem(func_1434_call(), 1)
call_2881 = relay.TupleGetItem(func_1435_call(), 1)
uop_2888 = relay.acosh(const_2841.astype('float64')) # shape=(11, 11, 12)
output = relay.Tuple([call_2847,bop_2857,bop_2867,call_2880,uop_2888,])
output2 = relay.Tuple([call_2849,bop_2857,bop_2867,call_2881,uop_2888,])
func_2894 = relay.Function([var_2842,var_2848,var_2856,], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
var_2895 = relay.var("var_2895", dtype = "int8", shape = (11, 11, 12))#candidate|2895|(11, 11, 12)|var|int8
var_2896 = relay.var("var_2896", dtype = "float32", shape = (396,))#candidate|2896|(396,)|var|float32
var_2897 = relay.var("var_2897", dtype = "float32", shape = (396,))#candidate|2897|(396,)|var|float32
output = func_2894(var_2895,var_2896,var_2897,)
func_2898 = relay.Function([var_2895,var_2896,var_2897,], output)
mutated_mod['func_2898'] = func_2898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3002 = relay.var("var_3002", dtype = "float32", shape = (10, 7, 11))#candidate|3002|(10, 7, 11)|var|float32
var_3003 = relay.var("var_3003", dtype = "float32", shape = (10, 7, 11))#candidate|3003|(10, 7, 11)|var|float32
bop_3004 = relay.mod(var_3002.astype('float32'), relay.reshape(var_3003.astype('float32'), relay.shape_of(var_3002))) # shape=(10, 7, 11)
bop_3007 = relay.greater_equal(var_3003.astype('bool'), relay.reshape(var_3002.astype('bool'), relay.shape_of(var_3003))) # shape=(10, 7, 11)
var_3020 = relay.var("var_3020", dtype = "float32", shape = (10, 7, 11))#candidate|3020|(10, 7, 11)|var|float32
bop_3021 = relay.bitwise_or(var_3002.astype('uint32'), relay.reshape(var_3020.astype('uint32'), relay.shape_of(var_3002))) # shape=(10, 7, 11)
func_2560_call = mod.get_global_var('func_2560')
func_2561_call = mutated_mod.get_global_var('func_2561')
call_3031 = relay.TupleGetItem(func_2560_call(), 1)
call_3032 = relay.TupleGetItem(func_2561_call(), 1)
func_2814_call = mod.get_global_var('func_2814')
func_2815_call = mutated_mod.get_global_var('func_2815')
call_3037 = func_2814_call()
call_3038 = func_2814_call()
output = relay.Tuple([bop_3004,bop_3007,bop_3021,call_3031,call_3037,])
output2 = relay.Tuple([bop_3004,bop_3007,bop_3021,call_3032,call_3038,])
func_3048 = relay.Function([var_3002,var_3003,var_3020,], output)
mod['func_3048'] = func_3048
mod = relay.transform.InferType()(mod)
mutated_mod['func_3048'] = func_3048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3048_call = mutated_mod.get_global_var('func_3048')
var_3050 = relay.var("var_3050", dtype = "float32", shape = (10, 7, 11))#candidate|3050|(10, 7, 11)|var|float32
var_3051 = relay.var("var_3051", dtype = "float32", shape = (10, 7, 11))#candidate|3051|(10, 7, 11)|var|float32
var_3052 = relay.var("var_3052", dtype = "float32", shape = (10, 7, 11))#candidate|3052|(10, 7, 11)|var|float32
call_3049 = func_3048_call(var_3050,var_3051,var_3052,)
output = call_3049
func_3053 = relay.Function([var_3050,var_3051,var_3052,], output)
mutated_mod['func_3053'] = func_3053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_670_call = mod.get_global_var('func_670')
func_672_call = mutated_mod.get_global_var('func_672')
call_3155 = relay.TupleGetItem(func_670_call(), 1)
call_3156 = relay.TupleGetItem(func_672_call(), 1)
output = relay.Tuple([call_3155,])
output2 = relay.Tuple([call_3156,])
func_3157 = relay.Function([], output)
mod['func_3157'] = func_3157
mod = relay.transform.InferType()(mod)
mutated_mod['func_3157'] = func_3157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3158 = func_3157_call()
output = call_3158
func_3159 = relay.Function([], output)
mutated_mod['func_3159'] = func_3159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_3259 = relay.TupleGetItem(func_1916_call(), 0)
call_3260 = relay.TupleGetItem(func_1918_call(), 0)
uop_3262 = relay.exp(call_3259.astype('float32')) # shape=(4, 10, 16)
uop_3264 = relay.exp(call_3260.astype('float32')) # shape=(4, 10, 16)
output = relay.Tuple([uop_3262,])
output2 = relay.Tuple([uop_3264,])
func_3266 = relay.Function([], output)
mod['func_3266'] = func_3266
mod = relay.transform.InferType()(mod)
output = func_3266()
func_3267 = relay.Function([], output)
mutated_mod['func_3267'] = func_3267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3330 = relay.var("var_3330", dtype = "uint64", shape = (16, 14, 14))#candidate|3330|(16, 14, 14)|var|uint64
var_3331 = relay.var("var_3331", dtype = "uint64", shape = (16, 14, 14))#candidate|3331|(16, 14, 14)|var|uint64
bop_3332 = relay.multiply(var_3330.astype('uint64'), relay.reshape(var_3331.astype('uint64'), relay.shape_of(var_3330))) # shape=(16, 14, 14)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_3337 = relay.TupleGetItem(func_2675_call(), 0)
call_3338 = relay.TupleGetItem(func_2676_call(), 0)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_3348 = relay.TupleGetItem(func_3266_call(), 0)
call_3349 = relay.TupleGetItem(func_3267_call(), 0)
output = relay.Tuple([bop_3332,call_3337,call_3348,])
output2 = relay.Tuple([bop_3332,call_3338,call_3349,])
func_3352 = relay.Function([var_3330,var_3331,], output)
mod['func_3352'] = func_3352
mod = relay.transform.InferType()(mod)
var_3353 = relay.var("var_3353", dtype = "uint64", shape = (16, 14, 14))#candidate|3353|(16, 14, 14)|var|uint64
var_3354 = relay.var("var_3354", dtype = "uint64", shape = (16, 14, 14))#candidate|3354|(16, 14, 14)|var|uint64
output = func_3352(var_3353,var_3354,)
func_3355 = relay.Function([var_3353,var_3354,], output)
mutated_mod['func_3355'] = func_3355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1207_call = mod.get_global_var('func_1207')
func_1209_call = mutated_mod.get_global_var('func_1209')
call_3367 = relay.TupleGetItem(func_1207_call(), 2)
call_3368 = relay.TupleGetItem(func_1209_call(), 2)
func_1207_call = mod.get_global_var('func_1207')
func_1209_call = mutated_mod.get_global_var('func_1209')
call_3373 = relay.TupleGetItem(func_1207_call(), 2)
call_3374 = relay.TupleGetItem(func_1209_call(), 2)
output = relay.Tuple([call_3367,call_3373,])
output2 = relay.Tuple([call_3368,call_3374,])
func_3382 = relay.Function([], output)
mod['func_3382'] = func_3382
mod = relay.transform.InferType()(mod)
mutated_mod['func_3382'] = func_3382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3382_call = mutated_mod.get_global_var('func_3382')
call_3383 = func_3382_call()
output = call_3383
func_3384 = relay.Function([], output)
mutated_mod['func_3384'] = func_3384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2814_call = mod.get_global_var('func_2814')
func_2815_call = mutated_mod.get_global_var('func_2815')
call_3472 = func_2814_call()
call_3473 = func_2814_call()
var_3474 = relay.var("var_3474", dtype = "int64", shape = (5, 1, 3))#candidate|3474|(5, 1, 3)|var|int64
bop_3475 = relay.add(call_3472.astype('int32'), relay.reshape(var_3474.astype('int32'), relay.shape_of(call_3472))) # shape=(5, 1, 3)
bop_3478 = relay.add(call_3473.astype('int32'), relay.reshape(var_3474.astype('int32'), relay.shape_of(call_3473))) # shape=(5, 1, 3)
output = bop_3475
output2 = bop_3478
func_3482 = relay.Function([var_3474,], output)
mod['func_3482'] = func_3482
mod = relay.transform.InferType()(mod)
mutated_mod['func_3482'] = func_3482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3483 = relay.var("var_3483", dtype = "int64", shape = (5, 1, 3))#candidate|3483|(5, 1, 3)|var|int64
func_3482_call = mutated_mod.get_global_var('func_3482')
call_3484 = func_3482_call(var_3483)
output = call_3484
func_3485 = relay.Function([var_3483], output)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_3506 = relay.TupleGetItem(func_3266_call(), 0)
call_3507 = relay.TupleGetItem(func_3267_call(), 0)
output = call_3506
output2 = call_3507
func_3515 = relay.Function([], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
mutated_mod['func_3515'] = func_3515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mutated_mod.get_global_var('func_3515')
call_3516 = func_3515_call()
output = call_3516
func_3517 = relay.Function([], output)
mutated_mod['func_3517'] = func_3517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_3535 = relay.TupleGetItem(func_1916_call(), 1)
call_3536 = relay.TupleGetItem(func_1918_call(), 1)
output = relay.Tuple([call_3535,])
output2 = relay.Tuple([call_3536,])
func_3538 = relay.Function([], output)
mod['func_3538'] = func_3538
mod = relay.transform.InferType()(mod)
mutated_mod['func_3538'] = func_3538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mutated_mod.get_global_var('func_3538')
call_3539 = func_3538_call()
output = call_3539
func_3540 = relay.Function([], output)
mutated_mod['func_3540'] = func_3540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_3547 = relay.TupleGetItem(func_769_call(), 0)
call_3548 = relay.TupleGetItem(func_770_call(), 0)
func_1809_call = mod.get_global_var('func_1809')
func_1811_call = mutated_mod.get_global_var('func_1811')
var_3573 = relay.var("var_3573", dtype = "float64", shape = (1040,))#candidate|3573|(1040,)|var|float64
call_3572 = relay.TupleGetItem(func_1809_call(relay.reshape(var_3573.astype('float64'), [10, 8, 13])), 0)
call_3574 = relay.TupleGetItem(func_1811_call(relay.reshape(var_3573.astype('float64'), [10, 8, 13])), 0)
const_3577 = relay.const([-7.035587,-0.593507,-7.795983,-0.617409,-3.593469,5.402494,-3.158260,-2.359158,-8.341252,-9.784025,4.956154,0.840613,1.571501,9.222708,-6.704998,-6.229686,-4.200338,-9.606947,-7.564772,6.009467,3.784847,8.825291,0.753119,-1.373077,3.510402,-2.606865,-1.616366,-2.494248,1.286410,9.974189,3.125249,5.773945,1.642318,-6.997528,-6.640651,-9.108292,-1.047866,3.967657,-6.829414,6.309193,-5.561660,-7.819329,4.367486,-8.218057,-7.877786,5.189013,-2.835027,7.211690,-1.687164,9.589019,-3.553215,-2.557846,4.550292,-6.042476,1.819149,-0.506845,3.397038,0.981338,4.949558,-8.007421,6.858298,9.189754,-5.654354,4.041537,-1.140593,0.056367,3.724822,8.759849,8.734589,-2.793259,5.703202,-7.075371,5.505491,-4.336096,1.448456,-6.714975,-2.920469,-0.950457,4.144032,9.548717,-1.562925,-6.240959,-1.922681,9.925387,2.009169,2.275122,-3.332434,-2.950051,7.764772,-7.820783,5.914781,4.808142,3.643035,-0.901420,-5.412653,-0.015815,-4.593990,-4.977285,1.100028,-7.433522,1.227552,3.771522,7.540126,3.425559,-7.935273,1.404910,-5.794279,9.556106,0.313694,-4.380346,0.301798,-9.168488,9.285776,7.806846,-1.828921,-6.705374,8.264185,6.519485,5.332031,9.153460,5.751249,4.339429,7.341246,3.329130,-9.938889,-6.843589,-0.699980,7.565458,0.875184,-1.561858,-8.212424,8.051833,9.344286,-2.765690,8.212055,-6.475572,-5.899624,0.295697,7.810101,-6.546995,-2.863548,9.216511,-5.389011,7.927729,3.227226,5.084274,-3.935357,2.591956,-5.893583,-1.899485,1.832939,-3.243923,-6.351934,-5.303920,-8.970218,5.675081,2.223991,9.614234,0.596309,-7.632325,6.689858,-1.402711,-1.852129,2.829623,1.434540,4.724306,-9.512617,-5.072717,4.153603,-2.222366,-5.183390,-6.067074,2.905272,7.129227,-7.760739,5.935029,8.296442,0.989284,-6.323807,-5.620290,-6.295139,-2.511609,8.992264,7.469665,2.072986,-7.202392,0.378584,-7.741639,6.153832,7.892296,2.969386,3.564055,-5.917600,-5.070894,7.899923,-2.623169,-0.321545,-0.775842,-9.989507,-7.276767,-0.415679,7.097810,-9.407128,-7.687189,6.547470,8.720253,-7.599537,2.629536,-3.241879,3.595648,1.597473,8.164765,4.737701,1.353902,-9.109136,1.922351,5.005063,-5.590107,-3.939414,1.299417,0.566673,-8.720880,5.755474,-7.915407,-2.198972,6.185071,-0.931366,8.294225,-1.651389,0.563743,2.998356,4.274443,4.678794,-9.038920,-9.589472,4.392472,-2.999701,-4.243477,3.615397,7.021941,-0.674944,4.473887,-0.460348,-6.176562,-2.100819,7.421261,1.161209,-0.468205,-3.256742,-9.158780,-4.891618,-3.359999,-7.119747,-6.982687,-1.859694,3.906955,-3.169646,4.803699,7.133056,8.716850,9.881643,8.095773,-7.769040,3.697718,-1.339214,9.571491,6.174285,-8.908566,-0.509166,7.600693,-4.950661,-1.302438,-7.693994,4.396012,5.276013,0.547628,1.236332,2.574188,-6.274052,9.216840,4.029532,3.165236,-4.197675,-4.632214,-9.207200,0.784742,-4.435622,9.100336,2.155506,-4.849993,3.771899,8.924128,7.595999,-2.008126,6.924095,-9.452704,3.791238,8.233399,8.547801,-6.872799,-0.265505,7.406515,5.127551,9.827341,7.315151,-4.176430,2.751410,-9.822015,-3.237753,-5.607674,-6.168792,-6.489712,-2.685301,0.606113,0.980202,0.576433,-5.918969,-0.203561,6.746284,-7.119595,-0.199860,1.599378,2.506950,-8.053992,6.506907,5.980638,6.446989,6.600951,-3.097864,-4.024772,-0.902038,0.921338,-4.236130,4.597283,7.102365,-7.756404,-5.581151,4.309508,4.180354,5.664916,-5.580319,-9.835880,9.289050,9.853339,7.035261,8.713399,8.360180,-0.669777,2.827360,1.808011,0.991687,-4.759635,5.682827,3.881865,1.723421,1.119522,-1.556061,8.821059,9.437645,9.009250,-6.208986,9.970690,8.449781,2.087412,2.276215,7.196419,4.798712,-1.755740,8.698416,3.366644,-5.118962,-1.426781,0.258593,-7.610775,-3.609882,4.832794,0.497940,-0.343540,-7.189987,6.118551,-4.260377,-4.249988,-2.723483,-8.186338,0.763027,-3.105857,7.588988,-6.276757,-3.927887,9.129020,-3.101603,-4.440921,6.707795,-9.957595,-3.749088,0.451847,-9.867554,-2.504528,-7.694273,-1.325359,9.103527,-2.072215,8.671966,5.649745,1.938959,-9.224945,9.258774,5.361793,8.296190,-8.681004,4.821862,-3.313292,4.707728,-4.587446,6.617943,1.149088,8.094011,7.464729,-1.246556,4.028069,-6.382540,9.313890,-5.710511,-9.941870,-7.522943,4.402562,2.204406,5.327911,2.122710,-7.449003,-0.448125,0.136821,2.354783,-1.906766,7.724956,-8.701471,5.521029,9.619780,-6.548786,1.258559,-0.414341,1.578311,-1.866520,-3.169287,-8.674386,8.099682,9.370141,1.133668,7.559370,-5.849650,7.957225,-7.721297,8.310069,-0.176918,-7.498520,-8.640259,-0.729197,-4.339318,1.401406,-4.206040,3.510623,-4.675740,-4.812949,-1.041756,-6.661353,-0.588489,4.603958,-1.251166,-7.422219,-2.232782,3.289879,6.426491,-6.301431,-1.286869,2.046507,-4.513735,-8.315203,6.103952,-3.124001,6.072918,-9.748934,-8.952062,-2.085944,-0.187668,8.997222,4.578559,-2.956860,-0.786519,-8.748949,-4.127324,-1.666191,9.669211,8.296041,1.293214,-9.527335,-7.422494,6.055429,-6.893172,-8.458122,-9.770925,2.262749,-7.137527,9.794035,6.762497,9.787646,3.968401,-0.936529,7.158919,1.253417,5.795827,7.636987,-3.609419,-4.435126,-9.380977,-1.091779,-6.060494,0.795091,2.271262,9.474819,-0.184197,-4.778339,-8.946194,-4.797115,-4.231138,5.025257,5.669280,-6.132074,0.445780,-8.634119,4.631046,-5.768990,6.674791,-9.461746,-1.315053,3.572901,-6.289676,-2.830511,-8.049591,-1.055261,-4.329509,-4.557093,-9.851103,-9.112057,1.048427,-5.863788,8.631954,-9.939431,-0.181998,4.543683,-3.768573,2.837673,-7.064001,-8.007931,9.530970,2.708118,-4.762631,8.931519,-1.377343,-6.605637,8.109330,-4.820610,2.663589,8.402157,6.515834,6.559969,6.817943,4.148146,-2.456763,-6.716602,-9.957282,-3.885919,8.114805,-2.009922,1.493934,7.390431,4.297191,8.353761,-7.544008,-6.543303,8.363430,7.739411,-1.227633,-6.389332,-7.863347,-3.156839,-8.929607,9.902905,0.151573,-0.486093,-6.996085,4.888760,5.606625,2.774486,6.721297,-9.141904,3.345684,6.135291,-4.859079,-6.720756,-6.219101,7.332990,6.288772,-3.412653,-6.153399,6.611870,-7.899331,-4.779425,5.961517,8.093789,7.949603,7.352003,1.801179,3.559789,-6.955563,4.167761,-0.152743,-8.752685,9.469708,-1.611667,0.382689,5.615557,-4.725995,7.083588,2.930570,-6.434996,-5.278356,7.354958,-0.934328,7.922818,-1.591642,6.903540,-4.103679,8.559434,-9.761402,2.349408,2.659044,4.001893,3.496538,-3.690575,0.770668,9.859709,-9.580738,-4.350728,7.365103,-7.147252,-0.381374,0.981506,4.203723,-9.819957,-7.378075,8.246695,-7.916420,-6.554665,4.437810,-4.882134,9.253461,3.128056,-8.093269,4.511615,5.117254,-8.382326,3.305849,-3.604607,-0.156917,0.943886,4.267431,-7.301266,6.336696,4.877529,5.423272,-3.578253,8.109734,3.497106,1.866316,-3.579918,-9.394710,-7.755390,-3.569298,-3.220872,1.430946,8.711391,-3.629103,2.762061,-2.472045,-7.116383,-8.774138,1.257344,-8.601114,-2.618025,8.672752,0.180028,7.935164,7.214698,-0.271510,-5.234185,4.882253,-4.486315,5.539089,-1.971653,-6.449990,-5.808449,3.172225,4.414748,-8.871885,3.490125,-9.394415,1.080793,-1.324375,2.623862,-2.780175,-9.522117,2.768132,9.700185,-0.358588,1.699003,-2.934297,-6.856084,3.563776,-3.140495,0.433055,2.212194,-5.636726,1.657171,0.190232,3.587054,-0.550472,-7.052544,0.389081,-8.581513,9.814806,-7.746135,1.906936,9.356658,-8.030768,-3.771052,8.521619,2.013784,-6.636494,-1.025194,1.277361,3.127205,1.194009,-2.870340,9.113876,1.934462,-1.566654,5.435804,-9.280977,-2.752939,-6.363841,-6.893281,-2.256666,0.794666,-3.525461,-2.261172,0.702692,3.150234,3.997864,7.732760,-4.707092,3.122663,7.703742,1.622840,4.872498,-0.356926,-5.560828,2.401975,7.363181,-8.067924,-6.734714,0.394258,-2.479776,1.068033,-7.587062,1.093526,1.459501,5.512278,6.059054,-0.025567,-3.244681,-6.156603,9.076051,8.071518,-0.131904,-1.138504,2.991050,-0.610022,-5.662981,9.035438,5.587930,8.382268,-0.384901,3.165663,7.010564,-1.185477,-9.781129,8.353196,6.664836,-5.755303,-5.693557,-5.329294,0.214448,3.545055,-1.581117,-9.372154,8.055199,-0.577932,2.658935,3.702138,6.527286,-0.564995,-5.238808,9.437161,9.746101,0.213531,-8.869082,9.171285,6.794018,2.457507,4.638315,3.822289,-4.155601,-1.716449,2.351093,-9.410517,-9.186725,-9.721903,-7.874117,-0.714425,-2.137077,4.830745,9.468594,-7.680393,-5.139804,6.697072,6.039525,-3.725730,-5.280244,6.295356,4.016926,0.611370,7.450397,-1.462856,6.591611,2.622988,4.186674,6.926207,8.535890,2.688755,6.412007,9.176161,9.607842,-0.608762,8.298551,3.198090,-1.875595,-4.051351,-5.744931,4.799640,4.758789,1.266820,-9.950259,7.243309,-0.506542,5.174360,9.703523,3.417207,-2.302686,7.343176,6.777913,-6.545687,3.169865,0.104947,-4.807299,7.217447,9.864379,-7.908905,9.881806,1.715939,-3.670198,-4.571385,-8.997209,-3.361182,0.625829,-0.219159,-9.182187,-1.411293,2.696729,9.610319,5.601561,1.950503,-4.673241,-2.547039,4.153087,0.164416,-2.006788,-1.825362,3.250571,7.267204,-9.064001,-8.509106,9.556500,-6.918168,-1.243449,-7.500128,-7.453532,5.216958,0.064548,8.372232,1.968666,-5.760786,-7.577931,-2.692460,1.642089,-0.664767,7.876041,-6.611856,-5.803536,9.528025,-6.968231,-1.466648,8.168176,4.296679,4.568074,-3.897451,-8.714057,-1.428421,8.163251,-9.928713,-5.889093,-7.043767,4.119172,-3.233930,9.369716,2.953502,8.987509,-0.189871,3.807208,3.299652,-4.136278,6.466005,-0.234337,2.073929,2.836008,-4.149728,9.756816,4.913040,0.729242,-0.594942,-9.671712,2.688775,2.098170,-7.543713,3.352447,4.796993,1.226190,-7.633725,-4.282036,7.385793,-2.055551,6.696126,-0.181568,-0.483080,8.576850,-9.907207,-4.065683,1.599784,-3.060679,-1.104491,-9.602846,6.762371,6.207280,5.831476,-6.167117,1.123901,4.171335,-5.617927,8.266299,9.521419,0.828468,-5.443937,5.617204,7.644132,-8.991577,-6.289999,2.852714,-2.608412,4.168168,-0.452309,0.217144,-5.056912,-6.423210,-2.615426,-7.467085,-0.007564,-9.770239,9.260165,2.028029,0.620460,4.244154,-3.576286,0.074188,3.919433,-6.550400,-3.067001,6.685794,-2.709863,7.002190,2.895857,7.054823,2.090997,3.499029,6.259111,3.829461,-1.092906,-2.840174,2.626684,5.514678,1.899450,-9.657407,1.925442,-4.566361,-2.688272,5.441371,0.995353,3.008389,-7.135398,-7.730798,7.068612,-0.139390,-2.969775,-7.099055,-2.174664,-0.797798,-7.040580,-5.239272,-9.908203,3.756090,-5.760164,-2.717002], dtype = "float64")#candidate|3577|(1040,)|const|float64
bop_3578 = relay.floor_divide(var_3573.astype('float64'), relay.reshape(const_3577.astype('float64'), relay.shape_of(var_3573))) # shape=(1040,)
var_3583 = relay.var("var_3583", dtype = "float64", shape = (10, 8, 13))#candidate|3583|(10, 8, 13)|var|float64
bop_3584 = relay.logical_and(call_3572.astype('bool'), relay.reshape(var_3583.astype('bool'), relay.shape_of(call_3572))) # shape=(10, 8, 13)
bop_3587 = relay.logical_and(call_3574.astype('bool'), relay.reshape(var_3583.astype('bool'), relay.shape_of(call_3574))) # shape=(10, 8, 13)
func_2354_call = mod.get_global_var('func_2354')
func_2358_call = mutated_mod.get_global_var('func_2358')
const_3597 = relay.const(1, dtype = "int64")#candidate|3597|()|const|int64
const_3598 = relay.const([5,10,9,-8,1,10,-2,2,-9,9,-10,-2,7,7,5,3,-3,3,-6,8,-7,-3,-7,9,5,7,-4,-6,-8,10,-3,5,-5,2,3,9,6,9,7,1,-3,-9,7,10,8,-9,3,1,-6,7,10,-9,10,-4,-3,8], dtype = "int64")#candidate|3598|(56,)|const|int64
const_3599 = relay.const([1.017863,-0.332483,9.128523,-5.911251,-5.867793,-1.543580,-5.035957,-6.891319,-8.456755,-7.915236,-0.008043,-2.374784,0.139960,-6.274573,0.785250,6.033673,-6.218828,-8.032566,-6.155314,-7.435557,0.447835,8.428277,3.826978,-2.031744,-3.744740,4.462143,-7.421481,6.862473,-0.372016,-7.939559,4.118504,-0.075189,6.783648,3.062884,3.813289,-4.748245,8.774763,-5.918138,2.164363,-3.586918,-7.716078,1.139243,1.332962,-3.841858,-6.436495,8.370319,-6.513232,0.775688,-9.167806,0.588047,-9.151996,1.397226,5.882400,-5.877109,-9.658823,-2.742458,7.760429,4.738278,6.559575,-0.295090,9.705302,0.211953,3.165070,1.665568,-5.044881,9.425372,5.143308,-1.991161,-2.664108,8.853144,0.862864,0.098999,6.710119,8.222651,-9.291983,-7.806991,4.755711,-6.218609,-0.974823,-6.585740,-1.042471,-5.568304,-9.238293,5.112986,3.635697,-7.797716,-7.332885,2.423850,-6.086382,-9.786566,-4.177411,-9.757681,0.533982,-4.201646,3.316784,-8.249557,-4.826236,6.088734,3.276893,-5.286079,7.189907,9.680435,-3.936340,-5.076238,8.705476,-2.284952,2.651417,5.522991,6.507773,5.375694,-7.739935,-2.159378,-8.107759,-6.624633,-5.317214,-0.089897,1.259797,-6.346641,1.392495,-2.527552,5.399342,-9.552398,-8.509085,0.253802,-7.919481,-1.179819,-4.810651,1.954669,-4.193520,-3.223690,-5.794693,-3.997583,-5.380519,-0.740685,3.234344,-4.609943,8.325210,-3.014753,-1.069382,4.194096,-0.185719,-2.076249,-8.874606,4.127611,3.047784,-2.701864,-5.342470,7.125332,2.307997,-6.813324,-0.618904,9.704979,-2.664630,3.772719,-7.973233,6.162590,-1.188997,2.363733,9.592154,0.205191,3.705860,3.596209,0.642181,-1.886004,-7.001444,4.562617,-5.042853,-4.781934,-5.453471,4.068050,-2.476783,8.438573,-0.030741,0.723430,4.638446,-4.232984,-3.153956,0.936180,-6.238772,-6.023594,-6.214867,-8.730441,6.477704,9.667800,-5.409033,-7.440850,2.230365,-6.682506,-3.692035,-3.868938,-8.271804,-1.023273,-7.355136,-0.924274,-6.571154,2.101402,0.460718,8.181693,-0.263190,-3.908350,3.448720,3.648579,7.961355,9.376226,5.767500,8.440899,-5.197459,7.973398,2.195691,-2.351801,-4.249183,3.240755,8.089100,-4.837404,3.158080,-5.408845,6.434205,-4.762674,2.902610,4.499472,6.049455,3.794958,-7.422718,-0.288533,-8.114743,8.226541,-1.323676,-4.222389,9.694499,2.130249,-1.211313,-2.754455,4.533493,-2.791559,-3.409828,1.906415,-0.433604,2.319173,1.884016,1.701493,-1.439196,7.715852,9.056642,-5.701674,-4.759488,6.016921,-9.994269,5.843674,-5.877705,-2.302261,0.569460,-0.357597,-3.410082,-5.895302,2.198313,-5.019714,5.043581,-3.387623,0.704152,9.220794,-4.716931,-5.969415,-9.976769,-4.857159,3.347746,0.740684,5.431202,3.512928,-3.398414,2.304942,1.125977,6.614536,4.043343,7.136512,0.225778,9.857603,1.588379,-8.160122,7.180898,2.384295,7.448531,8.569026,-3.703597,9.801449,-6.363268,9.465579,-7.861016,-0.755670,-9.020090,-5.008778,0.082017,-8.626655,-6.725420,-3.255610,4.908568,-3.064737,8.802234,5.606077,-3.183651,-6.832555,-3.062273,-7.111548,-7.384294,-2.709773,-7.727187,-1.017425,-2.142917,4.378429,3.904525,-1.647985,3.273134,-6.472327,-3.395276,-3.012006,-7.390877,-4.834428,-4.366650,0.731744,3.906821,-7.648098,-8.855822,5.677176,0.128479,2.953558,0.463779,2.339166,9.374795,4.701985,-6.526443,-1.135437,-8.027447,5.874987,-7.981486,4.805716,-6.981845,0.326948,6.030373,-5.431545,5.332909,7.985342,8.201788,3.960373,-0.570449,6.102732,5.879451,5.293883,-4.324325,-5.621320,5.232883,-7.230357,2.739904,4.535310,2.735716,0.228026,4.253321,5.538354,-8.882820,7.825358,4.174185,0.359208,2.158015,-8.018798,5.949644,-4.359508,-9.827493,-0.534540,-0.165096,-5.730685,1.871507,5.084698,5.080729,-1.633955,9.836413,-3.101782,-4.782781,4.693390,2.098943,5.059913,9.169384,4.546796,-7.093537,4.786204,9.947601,-4.802869,-7.204636,-8.561179,-8.173529,4.246052,-1.296232,-1.639970,2.692677,-7.591457,7.180823,5.769053,7.126685,1.514786,-1.601185,1.998158,-0.349225,8.137896,7.506806,-1.730920,-2.236743,0.209651,-6.162258,2.906140,-2.422385,-1.630650,7.458819,-5.735101,-7.614030,-1.745718,-8.148083,2.485676,-8.443491,8.229881,-3.393671,4.350057,3.484499,8.022710,5.419477,6.884493,5.035561,8.251905,2.129256,6.442597,1.825338,1.921881,7.545122,6.635446,6.102206,4.977768,-7.547063,-0.262367,-5.584412,0.773907,-1.513212,6.473301,-3.872829,-8.834963,-6.364667,-6.836008,9.074658,9.313672,-4.439551,-5.809549,-9.924202,9.002068,5.070418,-4.082659,6.411342,4.797899,2.266192,5.339183,9.013964,7.493607,-9.356422,-4.629573,6.737812,-2.172834,-1.095066,0.167118,5.755972,9.742844,-0.045513,-8.359142,-7.064571,9.459206,-8.807997,4.658167,-6.538801,8.862665,-5.266147,0.051266,9.737387,1.124258,-5.799770,-8.796363,4.724194,-8.335626,-2.468664,-5.381364,-5.084812,-4.291183,-8.399342,9.695282,-6.895925,0.294494,-4.321528,8.203808,9.963397,1.125564,0.615629,1.880668,4.709664,3.518357,-7.676887,-4.312355,4.676170,9.013035,8.955962,5.502239,1.188297,-3.237304,5.964488,2.298302,4.374439,-8.044463,5.620460,9.162815,-4.146056,-9.133841,-2.603301,0.300607,1.771303,-2.467154,1.714362,-4.943622,-8.659996,-5.089092,-7.535083,-6.855274,-2.643978,9.415755,-6.761442,7.892889,1.285838,2.257924,-5.196277,4.414904,4.845458,-2.481583,1.670694,1.431874,-6.052099,4.396185,-1.516914,-1.419033,7.927331,-6.980317,-7.194363,-0.884527,6.321287,-0.104805,-7.427498,2.951123,4.931572,7.501878,-1.201459,-2.494786,-4.182350,-0.492325,-4.957867,-6.889955,-6.372129,3.857728,-3.352493,-1.993262,-6.869116,9.036219,-3.272251,-2.376458,1.122329,8.396159,0.395339,-5.458080,1.608311,-8.063542,9.100806,7.717727,5.067032,-3.223285,-9.654746,4.183411,3.685707,-6.271788,8.760312,9.830870,-0.266906,-8.187581,3.405973,4.510143,4.883201,-5.701496,-4.278903,-2.200950,-4.285673,3.435783,2.407556,5.242236,-2.072731,4.276406,2.653585,-9.592840,9.268609,8.419251,5.448636,0.058661,-5.761102,2.181737,-2.995842,-7.344420,-7.683984,0.595637,-3.256746,3.700296,-6.365921,-9.742626,2.104819,8.875981,7.070844,7.951853,-3.273177,-6.335994,-6.456451,1.389987,1.665856,-4.715590,-9.319491,-9.207319,-4.870593,8.132407,-3.624301,-9.412650,-3.072914,-5.680250,-9.684832,-5.939073,-7.416146,2.444848,-8.357492,7.508331,-2.585189,4.651754,-5.405093,2.477776,7.925354,2.131158,-8.156676,-5.914995,-1.026464,8.453298,-2.152085,3.436698,-5.002731,-7.213409,4.217196,-3.278360,0.334430,-2.895558,8.920016,-0.911285,-1.531532,-6.367580,-9.984120,4.558883,6.980923,5.996240,-6.218535,6.740753,-1.179615,1.316410,8.349530,8.225331,-3.890041,-8.957826,-4.169779,-3.690841,6.997842,0.535383,5.942347,-1.910799,5.449513,4.311738,-7.930833,-8.547246,-8.881068,-6.228015,-8.668503,-5.889915,-0.841549,-9.136379,4.250647,4.935947,-2.583013,-9.370531,-2.966349,-2.827376,0.707080,0.077205,-5.836427,-0.217679,-9.202516,4.026456,-3.487369,3.933999,-9.123618,6.538174,-8.018653,-3.871958,-1.350126,1.221416,3.952998,-5.268631,7.143721,-2.006469,-2.014805,-9.734169,-6.943644,9.085321,3.052985,2.268950,-6.513831,1.058102,5.993731,2.912691,1.062264,-8.423237,2.284265,7.414532,2.474961,-3.367539,-2.836978,-6.199475,-8.975082,1.073889,-2.371000,-2.257988,-3.879682,2.516822,4.368228,7.755411,9.404673,-0.526457,-6.350419,6.657106,4.144573,4.919156,-9.215451,-0.904637,1.018992,-4.004585,-3.543058,7.390730,0.871282,9.883030,2.113361,6.903460,-1.086108,0.492512,6.053781,-9.419199,2.390421,-2.942773,9.874038,-4.497145,-4.626815,-4.708435,5.957004,3.315023,1.165050,-3.292379,4.026958,0.856571,9.899034,6.963748,-6.679623,2.937392,1.140269,5.019404,1.384451,-2.185318,4.953613,-3.215252,-4.556775,8.584103,-6.996573,-7.794743,6.144738,-5.048798,2.548789,2.469355,8.950904,5.201395,-3.092419,-3.866665,-3.556171,6.564155,4.962564,1.820621,-2.439192,6.322397,-1.740015,-4.682813,-5.779212,-8.605430,-9.290403,7.210040,-5.076414,8.867182,5.812201,-3.084274,-9.953419,9.021959,-7.072998,4.885445,8.535393,3.730831,-4.210140,8.491282,-4.345228,-0.034422,6.399048,5.409861,-8.073252,-7.674996,-4.122392,-9.805542,7.979451,-1.380146,-7.900931,-4.963648,5.574243,0.078455,8.858648,-9.035505,-3.861806,4.669480,-7.913547,7.795767,9.907259,-5.318539,8.841692,-7.289382,7.507002,-0.225958,-3.407128,7.125153,-8.250275,7.763949,-3.469640,-4.571357,4.018687,-1.369508,-1.070876,-1.814572,-0.059424,0.534902,9.338154,-3.078979,-1.797892,-0.279012,5.217292,-3.712600,-5.658064,5.439378,9.065948,7.990336,6.476682,-7.721126,-2.822084,6.842814,-9.212741,-7.204105,-9.413493,-7.467379,9.908924,6.048665,-7.313309,-6.025621,-7.954845,1.982435,2.490227,-6.317594,2.249744,-6.858151,6.955600,-0.384438,-9.728813,-5.683324,7.016755,-4.225963,1.210770,2.742339,8.862100,6.981380,9.316079,-2.181936,4.803858,-9.668464,1.816509,-1.649885,-3.662998,-5.478095,6.442979,-4.778817], dtype = "float64")#candidate|3599|(896,)|const|float64
call_3596 = relay.TupleGetItem(func_2354_call(relay.reshape(const_3597.astype('int64'), []), relay.reshape(const_3598.astype('int64'), [7, 8, 1]), relay.reshape(const_3599.astype('float64'), [7, 8, 16]), ), 0)
call_3600 = relay.TupleGetItem(func_2358_call(relay.reshape(const_3597.astype('int64'), []), relay.reshape(const_3598.astype('int64'), [7, 8, 1]), relay.reshape(const_3599.astype('float64'), [7, 8, 16]), ), 0)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_3608 = relay.TupleGetItem(func_2675_call(), 0)
call_3609 = relay.TupleGetItem(func_2676_call(), 0)
func_404_call = mod.get_global_var('func_404')
func_406_call = mutated_mod.get_global_var('func_406')
call_3610 = relay.TupleGetItem(func_404_call(), 0)
call_3611 = relay.TupleGetItem(func_406_call(), 0)
output = relay.Tuple([call_3547,bop_3578,bop_3584,call_3596,const_3597,const_3598,const_3599,call_3608,call_3610,])
output2 = relay.Tuple([call_3548,bop_3578,bop_3587,call_3600,const_3597,const_3598,const_3599,call_3609,call_3611,])
func_3615 = relay.Function([var_3573,var_3583,], output)
mod['func_3615'] = func_3615
mod = relay.transform.InferType()(mod)
mutated_mod['func_3615'] = func_3615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3615_call = mutated_mod.get_global_var('func_3615')
var_3617 = relay.var("var_3617", dtype = "float64", shape = (1040,))#candidate|3617|(1040,)|var|float64
var_3618 = relay.var("var_3618", dtype = "float64", shape = (10, 8, 13))#candidate|3618|(10, 8, 13)|var|float64
call_3616 = func_3615_call(var_3617,var_3618,)
output = call_3616
func_3619 = relay.Function([var_3617,var_3618,], output)
mutated_mod['func_3619'] = func_3619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1095_call = mod.get_global_var('func_1095')
func_1097_call = mutated_mod.get_global_var('func_1097')
call_3668 = relay.TupleGetItem(func_1095_call(), 0)
call_3669 = relay.TupleGetItem(func_1097_call(), 0)
var_3684 = relay.var("var_3684", dtype = "float32", shape = (9, 9, 4))#candidate|3684|(9, 9, 4)|var|float32
bop_3685 = relay.logical_xor(call_3668.astype('int16'), relay.reshape(var_3684.astype('int16'), relay.shape_of(call_3668))) # shape=(9, 9, 4)
bop_3688 = relay.logical_xor(call_3669.astype('int16'), relay.reshape(var_3684.astype('int16'), relay.shape_of(call_3669))) # shape=(9, 9, 4)
uop_3689 = relay.sinh(bop_3685.astype('float32')) # shape=(9, 9, 4)
uop_3691 = relay.sinh(bop_3688.astype('float32')) # shape=(9, 9, 4)
output = relay.Tuple([uop_3689,])
output2 = relay.Tuple([uop_3691,])
func_3704 = relay.Function([var_3684,], output)
mod['func_3704'] = func_3704
mod = relay.transform.InferType()(mod)
mutated_mod['func_3704'] = func_3704
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3705 = relay.var("var_3705", dtype = "float32", shape = (9, 9, 4))#candidate|3705|(9, 9, 4)|var|float32
func_3704_call = mutated_mod.get_global_var('func_3704')
call_3706 = func_3704_call(var_3705)
output = call_3706
func_3707 = relay.Function([var_3705], output)
mutated_mod['func_3707'] = func_3707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_3740 = relay.TupleGetItem(func_871_call(), 0)
call_3741 = relay.TupleGetItem(func_873_call(), 0)
output = relay.Tuple([call_3740,])
output2 = relay.Tuple([call_3741,])
func_3777 = relay.Function([], output)
mod['func_3777'] = func_3777
mod = relay.transform.InferType()(mod)
mutated_mod['func_3777'] = func_3777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3777_call = mutated_mod.get_global_var('func_3777')
call_3778 = func_3777_call()
output = call_3778
func_3779 = relay.Function([], output)
mutated_mod['func_3779'] = func_3779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_3804 = func_3515_call()
call_3805 = func_3515_call()
const_3806 = relay.const([[[1.942397,6.837011,0.067115,5.204269,5.560675,-5.918576,2.807289,-7.437873,5.147848,5.819659,7.660413,-4.921284,7.430206,-6.712742,-5.663078,0.867790],[-3.917610,-6.924708,2.085916,1.082841,5.576024,4.821041,-0.228091,2.582743,2.590007,-6.188131,4.334668,1.907743,9.870278,3.750417,-5.417759,6.182663],[-4.887002,-1.231799,-3.002660,-5.854359,1.491340,-1.196411,1.256393,3.698567,-6.782745,8.250498,2.384454,6.660191,-2.153574,-0.786267,8.601624,4.376211],[0.914028,-8.147409,-0.402208,2.175603,-7.281337,3.894818,1.507554,-8.846459,-3.807867,-6.638641,-4.997736,-4.499571,-9.969997,5.586352,-5.584259,5.822444],[-5.852500,5.521000,-9.116391,1.571853,-3.204993,-0.344283,1.300764,-7.297672,2.231071,3.745577,-8.579307,-5.579183,-0.418736,-2.082923,3.724009,-5.584140],[5.443052,-6.049229,-9.306006,-1.576678,-4.406054,5.963845,6.089758,1.440143,-7.724873,5.032904,-6.414830,3.892853,2.857189,9.451700,-7.329526,3.275703],[-1.010465,8.035883,3.182437,6.359865,8.357088,9.030027,-2.608519,7.494127,-2.317466,1.347387,-1.230916,5.114210,5.020897,-3.617956,0.238474,3.397654],[9.274567,-8.990436,3.342363,-7.842467,-4.144644,2.484349,-1.875591,2.766266,2.313426,8.512709,-1.615636,-0.191486,-7.025641,6.742163,-9.776953,6.201930],[6.198722,-7.343090,3.311469,9.367476,-5.158223,1.588159,2.724159,3.071981,3.586591,1.341564,-5.842210,7.872121,-8.278805,-1.013376,-6.288601,3.203590],[8.188564,-9.788224,-4.416075,7.438775,-2.786591,-4.372947,1.662157,2.140168,-8.593867,-9.562305,-8.156060,9.506963,-8.490457,1.502203,5.449509,0.408252]],[[-6.700976,-3.328159,6.979421,9.381016,-4.638956,-6.971617,-3.845252,-9.932937,-9.769864,6.437143,2.990573,0.996264,-4.298441,-4.274558,4.798386,-7.942027],[9.359972,0.641315,-4.873108,-7.452590,-2.478782,5.862666,-7.733449,6.985997,-9.370379,1.440689,-5.339023,-8.292860,2.043713,-0.893357,-2.898615,-1.383878],[5.989049,-2.235751,3.027275,-6.817455,8.781714,-9.460289,-1.408487,-3.020224,-0.625643,-7.803921,0.229179,4.220894,9.650325,1.853634,-9.324901,6.612011],[4.626643,-0.051789,-6.599693,-2.627958,-9.278017,-5.314440,0.486888,5.062403,-0.914039,-8.104746,-2.714814,0.176581,7.789768,2.905706,-4.604266,-4.807519],[0.901572,-0.334963,8.177838,3.806128,8.868265,-5.679777,3.921456,-5.027798,3.235643,1.016519,-9.831087,3.883922,6.349431,-6.342194,1.544161,-9.619178],[0.043055,2.650621,0.998157,-1.589842,-4.589010,3.021209,-5.223497,5.854169,-6.908496,-7.941854,3.284903,1.330629,-6.033398,8.858951,-0.482517,-0.124586],[-0.632243,-3.632490,8.223571,4.407569,-2.656459,7.074678,-5.119855,-9.676302,3.678583,-5.006806,1.834190,4.360116,9.794125,6.713252,-9.088618,9.069062],[7.472352,5.421552,-8.756022,-0.648702,6.201666,5.209621,4.399240,5.697986,-9.199118,6.796480,4.950236,-5.285964,3.123665,-4.126542,9.790066,6.963086],[0.680758,9.497217,9.069143,-2.135974,8.974937,-2.100025,-5.164484,4.751376,4.096863,-8.641766,-2.328087,2.528626,-5.940018,0.377321,2.065453,1.417487],[1.993710,-4.677461,-0.547756,-0.611894,2.874963,-7.631946,-6.692199,-5.495027,4.614914,-6.385550,8.119117,1.125164,2.075705,-6.094380,0.579590,0.088606]],[[-2.903624,3.474435,0.795924,3.862667,3.369960,-7.745838,9.364559,3.152049,6.284136,-3.117674,-4.896635,-4.272661,9.350389,-6.956395,-5.314370,6.091475],[-1.572733,-2.579460,-7.899786,-2.372369,8.962163,9.218244,8.559375,6.738140,-4.094058,-3.643508,-8.228099,-1.896521,8.120894,-0.206660,5.604859,-1.269922],[3.567768,4.013819,-3.664358,9.724156,-4.273411,2.066735,1.498497,-8.634049,-0.818954,-8.586978,6.129349,-6.159079,-7.561038,2.131449,2.912483,0.930214],[-8.742760,-5.047072,-0.123291,-2.251141,4.459887,-1.551576,0.644332,-7.779704,7.696683,-7.866972,-3.374785,6.338480,3.537027,-5.239167,0.211095,3.945264],[-8.076519,-5.815595,2.367368,4.815880,-0.874912,-9.703060,-0.150967,-2.258861,7.129051,-0.159355,9.345572,-4.063710,-9.428720,7.953272,-5.062802,7.502970],[3.002876,9.205596,1.935982,8.856456,8.624048,8.068472,-4.463604,0.980724,-7.005388,0.242921,-4.830186,-4.606497,-8.029202,-3.444287,8.254446,7.262948],[0.316015,7.527126,0.897776,0.741593,-1.458678,-4.672507,-6.878140,9.988371,-2.698060,-9.081903,-1.851271,7.877741,7.432523,-1.223981,-8.592905,5.395853],[-6.898320,-2.182067,4.028744,-0.970197,-3.932224,-8.406884,3.275476,4.811342,1.299739,-0.147470,-7.910528,-8.683128,1.246041,-2.822515,1.247139,3.091006],[4.431450,4.095744,0.174198,-8.126255,4.409236,-7.167962,-6.017254,-7.924302,-8.955100,-6.128059,-7.196417,-5.104981,0.031073,7.797161,-4.113496,-5.986929],[-0.089191,-5.686933,-6.925257,6.033434,2.399781,-0.174816,7.090457,3.375641,7.900367,6.677406,6.263703,9.384315,-7.062625,3.937985,1.650229,-2.523339]],[[0.307117,-1.787892,-2.335975,2.866750,4.255726,4.590693,-1.367961,-1.098009,-1.294140,-6.577143,4.965093,-4.611552,-2.253024,-7.766621,-8.405445,-7.798506],[6.361822,1.062777,-3.376566,-0.287093,-9.483995,8.727237,-5.943608,-7.597839,6.635454,-5.903509,-9.672647,-8.389723,-6.382909,-9.504241,-1.358460,1.449944],[4.536924,6.837892,2.610879,-0.993762,4.996410,7.197475,9.145724,2.898149,-3.129864,-7.260589,-1.367430,3.574705,6.433347,8.516800,-8.472844,-3.487020],[6.965231,-9.915366,3.290838,-7.539684,-3.219763,-2.427004,9.987726,-0.085013,-1.610351,-3.626143,3.778012,7.528321,-7.793963,-8.447640,6.798347,-8.172737],[-9.882093,-1.555987,2.860509,0.668900,-1.957926,-4.957323,7.513079,3.791366,3.016113,-3.280286,9.385045,5.016231,0.063832,7.624206,-0.688237,3.977745],[-9.956380,-3.167143,8.339262,7.817743,-0.592730,1.203128,-7.882926,0.439675,2.435943,-7.452558,2.796115,-5.211818,-1.651012,-6.485990,8.950652,9.860778],[0.739219,-7.951331,2.479681,-0.793187,0.144223,5.320456,-9.587965,4.868397,7.058247,-2.791808,3.718887,4.080581,-6.401858,4.822202,4.996693,9.762536],[-0.224354,4.709787,5.912969,1.321154,-6.248624,-2.715951,4.860979,-6.932608,-1.885194,-0.053055,9.752661,2.016746,6.424327,1.927911,4.277259,8.575871],[-5.912022,-2.573709,-1.158425,-7.994356,-0.568016,2.609522,-1.538562,-8.366407,-9.591443,3.151524,-2.759556,-0.081320,1.274834,6.594127,-2.516059,-8.596320],[1.719607,6.716326,3.293201,-7.192909,-2.806173,4.686547,5.967775,2.329213,-5.761890,5.514393,2.278470,-7.398819,-5.802711,-1.865236,-1.269117,9.965096]]], dtype = "float32")#candidate|3806|(4, 10, 16)|const|float32
bop_3807 = relay.bitwise_or(call_3804.astype('int8'), relay.reshape(const_3806.astype('int8'), relay.shape_of(call_3804))) # shape=(4, 10, 16)
bop_3810 = relay.bitwise_or(call_3805.astype('int8'), relay.reshape(const_3806.astype('int8'), relay.shape_of(call_3805))) # shape=(4, 10, 16)
output = bop_3807
output2 = bop_3810
func_3818 = relay.Function([], output)
mod['func_3818'] = func_3818
mod = relay.transform.InferType()(mod)
output = func_3818()
func_3819 = relay.Function([], output)
mutated_mod['func_3819'] = func_3819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1582_call = mod.get_global_var('func_1582')
func_1583_call = mutated_mod.get_global_var('func_1583')
call_3868 = relay.TupleGetItem(func_1582_call(), 0)
call_3869 = relay.TupleGetItem(func_1583_call(), 0)
output = relay.Tuple([call_3868,])
output2 = relay.Tuple([call_3869,])
func_3874 = relay.Function([], output)
mod['func_3874'] = func_3874
mod = relay.transform.InferType()(mod)
output = func_3874()
func_3875 = relay.Function([], output)
mutated_mod['func_3875'] = func_3875
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4023 = relay.const([[[True,True,False,True,False,False,False,False,False,True,False,True,True,True,False],[False,False,False,False,False,False,False,True,False,True,True,True,False,True,False],[False,False,True,False,True,True,False,True,True,False,False,False,True,False,True],[False,False,True,False,True,True,False,True,False,False,True,False,False,True,True],[False,False,True,True,False,False,False,True,False,False,True,False,False,True,False],[True,True,True,False,True,False,True,True,True,True,True,False,True,True,False],[False,True,False,True,False,False,False,True,True,False,True,True,False,True,False],[True,False,True,False,False,False,False,True,True,True,False,False,False,False,False],[False,False,True,False,False,False,False,False,True,False,False,False,True,False,True],[True,True,True,False,True,True,False,True,False,True,True,False,True,True,False],[True,True,True,True,True,True,True,True,True,False,True,True,False,False,True],[True,True,True,False,True,False,True,True,False,True,False,True,True,False,False],[False,True,True,True,False,False,False,True,True,True,True,True,False,True,True],[True,False,True,False,False,False,True,True,False,True,False,False,False,False,False]],[[False,False,False,True,True,False,True,True,False,False,False,True,True,False,True],[True,True,True,False,False,False,False,True,True,False,False,False,True,False,False],[True,False,False,True,True,True,False,False,False,False,False,False,True,False,False],[False,True,True,False,True,True,False,True,False,True,False,False,True,True,False],[True,False,False,True,False,True,False,False,True,False,False,False,False,True,False],[False,False,True,False,False,False,True,False,True,False,True,True,False,True,False],[True,False,True,True,False,True,True,False,True,False,True,True,False,True,False],[False,False,False,True,False,False,True,True,False,True,True,False,False,False,True],[True,True,True,False,False,True,True,True,False,False,False,True,True,False,False],[True,True,False,False,False,False,False,False,False,True,True,True,True,True,True],[False,False,False,True,False,True,True,True,False,True,True,False,False,False,True],[False,False,False,True,False,False,True,False,False,True,True,True,True,False,True],[False,False,True,True,False,False,False,True,True,False,False,True,True,False,True],[False,False,True,False,True,True,False,True,False,True,False,True,False,True,False]],[[True,False,False,True,True,False,True,True,True,False,True,True,True,False,True],[True,False,False,False,False,True,False,True,False,False,False,True,True,False,False],[True,False,False,False,True,True,False,False,False,False,False,False,True,False,False],[True,True,True,True,True,True,False,True,False,True,True,False,False,True,True],[False,False,True,True,False,False,False,True,False,True,True,False,True,False,False],[True,True,True,False,False,True,False,True,False,False,False,False,True,False,True],[False,False,True,True,True,False,True,False,True,True,True,False,True,False,False],[False,True,False,True,False,False,False,False,True,True,False,True,True,True,True],[False,True,False,True,False,True,True,True,True,False,False,False,False,False,False],[True,False,False,True,True,False,True,False,False,True,True,False,False,False,False],[False,False,True,False,True,False,True,True,True,True,True,False,True,False,False],[False,True,False,False,False,True,False,True,True,False,False,False,False,True,False],[False,True,False,False,True,False,False,False,True,True,True,False,True,True,False],[True,True,True,True,True,True,True,True,True,False,True,True,True,True,False]],[[True,False,True,False,False,False,False,False,True,True,True,False,True,True,True],[False,False,False,True,False,True,True,True,False,False,True,True,True,False,True],[False,False,True,True,False,True,False,False,True,True,True,False,True,False,True],[True,False,False,True,False,False,True,True,True,True,True,False,True,False,True],[False,False,True,True,False,True,False,False,True,True,True,False,True,False,False],[True,True,True,True,True,True,True,False,False,False,True,True,False,False,True],[True,False,False,False,True,False,True,True,False,False,False,True,False,False,True],[True,True,True,False,False,False,True,True,False,True,True,True,False,True,False],[True,True,False,True,True,False,True,True,True,True,True,False,False,False,False],[False,True,True,True,True,True,True,False,False,True,True,True,False,True,False],[False,False,True,True,False,True,True,True,False,False,True,True,False,True,True],[False,True,False,True,False,True,False,True,True,False,False,False,True,True,True],[False,True,False,True,False,False,False,True,True,False,False,False,False,False,False],[True,True,True,False,False,False,True,True,True,True,True,False,True,True,True]],[[True,True,False,True,False,True,True,True,False,False,True,False,True,True,True],[True,True,False,False,True,False,False,False,True,False,True,True,False,True,False],[True,False,True,True,True,True,False,False,False,True,False,False,True,True,True],[False,False,False,False,True,True,True,True,False,False,True,True,True,True,False],[True,False,False,False,False,True,False,False,True,False,True,False,False,True,True],[False,True,False,False,False,True,False,True,False,False,True,False,True,True,True],[False,False,False,False,True,False,False,True,False,True,True,False,True,False,True],[True,False,False,True,False,False,False,False,True,False,False,True,False,False,False],[False,False,False,False,False,True,False,False,False,False,False,False,False,True,False],[True,False,False,False,True,False,False,True,True,False,False,True,True,False,True],[True,False,True,True,False,False,True,False,False,True,True,False,True,True,False],[True,True,False,True,True,False,False,True,True,True,True,True,False,False,False],[False,True,False,True,True,True,True,False,True,False,True,False,False,True,False],[False,False,True,True,False,False,True,False,True,False,True,True,False,True,True]],[[False,True,True,False,True,False,True,False,False,True,False,True,True,True,False],[True,True,True,False,False,True,False,True,True,False,False,False,True,False,True],[False,False,True,True,False,False,True,False,False,True,True,True,True,False,False],[True,False,True,False,False,False,True,True,True,False,True,True,False,False,True],[False,False,True,True,False,False,True,True,False,True,True,True,False,False,True],[False,True,True,False,False,False,False,True,True,True,False,False,True,False,False],[False,False,False,False,True,False,False,False,False,False,False,True,True,False,True],[False,True,False,False,True,False,False,True,False,True,False,False,True,True,False],[True,False,True,True,False,False,False,False,True,False,False,True,True,True,True],[False,True,False,False,True,True,True,True,False,True,False,True,True,True,False],[True,False,False,False,False,False,True,False,False,False,False,False,True,True,True],[False,True,True,True,True,False,False,False,False,True,True,False,False,False,False],[False,False,False,True,False,False,True,True,False,False,True,False,False,False,True],[False,True,False,True,False,False,True,False,False,True,True,False,False,True,False]],[[False,False,False,False,True,True,True,False,False,True,False,False,False,True,False],[True,True,True,False,False,True,False,True,False,False,True,True,False,True,True],[True,True,True,True,True,False,False,False,False,True,False,True,True,False,False],[True,True,True,True,True,True,False,True,False,False,False,True,False,False,False],[True,True,True,False,True,True,False,True,True,False,False,True,True,True,True],[True,True,True,False,False,False,True,False,False,False,True,False,True,True,False],[False,False,False,True,False,True,False,False,False,False,False,True,True,False,False],[True,True,True,False,False,True,False,True,False,False,True,True,False,True,False],[True,True,False,True,False,False,False,True,False,False,True,False,True,False,False],[False,True,False,True,True,False,True,False,True,True,False,True,False,True,False],[False,False,True,False,True,True,False,True,False,False,True,True,False,True,False],[True,True,True,True,False,True,True,True,True,False,False,True,True,False,False],[True,False,False,False,False,True,False,False,False,False,False,False,False,True,True],[False,False,False,True,True,False,False,False,False,True,False,False,True,False,True]],[[True,True,True,False,False,False,True,False,False,False,False,True,False,False,False],[True,False,False,True,False,True,True,False,True,True,False,True,False,True,True],[True,False,True,False,False,True,False,False,True,True,False,True,False,False,False],[False,True,False,False,False,False,True,True,True,False,True,True,True,True,False],[True,False,False,False,False,True,True,True,True,False,False,True,True,False,True],[True,False,False,False,False,False,False,True,True,True,True,False,False,False,True],[False,True,True,True,True,False,False,False,True,True,False,True,False,False,True],[True,True,True,True,True,True,True,False,False,False,True,True,True,False,True],[False,False,True,False,True,False,False,True,True,True,False,True,False,False,True],[True,True,True,False,False,False,True,True,False,True,False,False,False,True,False],[True,True,False,False,True,False,True,True,True,False,False,False,True,False,False],[True,True,False,False,True,False,False,False,False,True,True,False,True,True,True],[True,True,False,True,True,False,True,False,True,True,False,False,True,False,False],[True,True,False,True,True,True,False,True,False,False,False,True,False,True,True]],[[True,False,False,True,False,True,True,True,False,True,False,False,True,True,False],[True,True,True,True,False,False,True,False,False,True,False,False,False,False,False],[True,True,False,True,True,False,True,False,False,True,True,False,True,False,False],[False,False,True,True,True,True,False,False,False,False,True,False,False,False,True],[False,True,False,True,True,True,True,False,False,True,True,True,False,False,False],[False,False,False,True,False,True,False,False,False,False,False,True,True,False,True],[False,True,True,False,False,False,False,True,False,False,True,True,True,True,True],[True,True,False,True,False,False,True,False,False,True,True,False,False,False,False],[False,False,True,True,False,True,True,False,True,True,False,False,False,False,True],[True,True,False,True,True,False,True,False,False,True,True,True,True,True,True],[False,True,True,True,False,False,True,True,False,False,False,True,False,False,True],[True,False,False,True,True,True,True,True,True,True,False,False,True,False,False],[False,False,True,False,True,False,False,False,True,False,False,False,True,False,False],[False,True,False,True,False,False,False,True,True,False,True,True,False,False,True]],[[False,False,True,False,False,True,False,False,True,True,True,False,True,False,False],[False,True,False,False,False,False,False,False,False,True,False,True,True,True,True],[False,True,True,False,True,False,True,True,False,False,True,True,False,False,False],[True,False,True,True,True,True,True,True,True,True,True,False,False,False,True],[True,False,False,True,False,False,True,True,True,True,False,False,True,False,True],[True,True,True,False,False,False,True,False,False,False,True,True,False,False,True],[True,True,True,False,False,False,False,True,True,True,True,True,False,False,False],[True,True,True,False,True,False,True,False,False,True,False,True,False,True,True],[True,False,True,False,False,True,False,False,True,False,False,False,True,False,False],[True,True,True,True,True,False,True,False,False,True,True,False,False,True,True],[False,False,False,True,True,False,False,True,True,True,True,True,True,True,True],[True,False,False,False,True,True,False,False,False,False,True,True,True,False,True],[False,False,True,False,True,False,True,True,False,False,True,True,True,False,False],[False,False,True,False,False,False,True,True,True,True,True,False,True,False,False]],[[False,True,False,True,True,True,False,False,True,False,False,False,True,True,False],[False,True,False,True,True,True,True,True,False,False,False,True,True,True,False],[True,True,True,False,True,False,True,True,True,False,True,True,False,False,True],[True,False,False,True,True,False,False,True,True,False,True,True,False,False,True],[False,False,False,True,False,True,True,True,False,False,False,True,False,False,False],[True,True,False,True,True,False,True,True,True,False,False,False,False,False,True],[True,False,True,True,True,True,True,False,False,True,True,False,True,True,True],[True,False,False,True,True,True,True,True,True,False,True,True,True,True,True],[False,False,True,True,False,False,False,True,False,False,False,True,True,True,False],[False,False,False,False,False,False,False,True,True,True,False,False,False,True,False],[True,True,False,False,False,False,False,False,True,False,False,False,False,True,True],[False,True,False,True,False,False,True,False,True,False,True,True,False,True,False],[False,False,True,True,False,True,True,False,True,True,False,False,True,False,True],[False,True,True,False,False,True,False,True,True,False,True,False,True,True,True]],[[False,False,True,True,True,True,True,False,True,False,True,True,False,False,False],[False,True,True,True,True,True,False,False,False,True,False,True,True,True,False],[False,True,False,True,True,True,False,False,False,True,False,True,False,True,False],[False,True,True,True,False,False,False,False,False,False,True,False,True,False,False],[False,False,True,False,True,False,False,True,False,False,False,True,True,False,False],[True,True,True,False,False,True,True,True,True,True,True,False,False,True,False],[False,True,False,True,True,True,False,True,False,False,True,False,True,True,False],[True,False,True,False,True,False,True,False,True,False,True,False,False,True,True],[False,True,False,False,True,False,True,True,True,True,True,True,True,True,False],[False,False,False,True,True,True,True,False,True,False,True,True,True,True,False],[False,False,False,True,False,True,True,False,False,False,True,True,True,True,False],[True,True,True,False,False,False,True,False,False,True,False,True,False,True,True],[False,False,True,False,True,True,True,False,True,True,False,True,True,False,False],[True,True,True,False,True,True,False,True,True,True,False,False,False,False,True]],[[True,False,True,False,True,False,False,False,False,True,False,True,False,True,True],[False,False,False,True,True,False,True,True,True,False,False,True,False,True,True],[False,False,True,True,True,False,False,True,True,False,False,True,True,True,False],[False,True,False,True,True,True,True,False,True,False,False,True,True,True,False],[False,True,True,True,False,False,False,False,True,True,True,True,False,False,False],[False,True,False,False,False,True,False,True,True,True,True,True,False,False,False],[True,False,True,False,True,False,False,True,False,True,False,True,False,False,False],[True,False,True,True,True,True,False,True,False,True,False,True,False,False,True],[True,True,True,False,True,False,False,True,False,True,False,False,False,True,True],[False,False,True,True,True,False,False,True,True,False,False,True,True,False,False],[False,True,True,True,False,True,False,False,False,False,True,True,False,False,False],[True,False,False,True,False,True,True,False,False,True,True,False,False,False,False],[False,True,False,False,False,False,True,False,False,True,False,False,False,True,False],[False,False,False,False,True,False,True,True,True,True,False,False,True,False,False]],[[False,True,True,False,True,False,False,False,False,False,True,True,False,False,False],[False,False,False,True,True,False,True,False,True,False,False,True,False,True,True],[True,True,False,False,True,True,False,True,True,True,False,True,False,False,True],[False,True,True,False,False,False,False,True,True,True,False,True,False,False,False],[False,True,False,False,False,True,False,False,True,True,True,True,False,True,True],[True,True,False,True,False,False,True,False,False,False,False,False,True,False,False],[False,False,False,False,True,False,True,True,False,False,False,False,True,True,True],[True,False,True,True,True,True,False,True,True,False,True,True,False,True,False],[False,True,False,False,True,True,False,False,False,True,True,True,True,False,False],[False,True,False,True,True,False,False,True,True,False,True,False,True,True,True],[True,True,False,False,False,True,True,False,False,False,True,True,True,False,True],[True,True,True,True,False,False,True,True,True,False,True,False,True,False,True],[False,False,False,True,False,False,False,True,True,False,True,False,True,False,True],[True,True,False,False,True,False,False,False,True,True,True,False,True,False,True]],[[False,False,True,False,True,True,True,False,False,False,False,False,False,False,False],[True,True,False,True,True,True,False,True,True,True,False,False,False,True,False],[True,True,True,False,True,False,True,False,False,True,False,True,True,True,True],[False,False,False,False,False,True,True,False,False,False,True,False,True,True,True],[True,False,False,False,False,True,True,True,False,True,True,False,False,False,True],[True,False,False,True,False,False,False,True,False,False,False,True,False,True,True],[True,False,True,True,True,False,True,False,True,True,True,False,True,False,True],[True,True,True,True,True,False,True,True,True,True,False,True,False,False,False],[True,False,True,True,True,False,True,False,False,False,True,True,True,True,True],[False,False,True,True,True,False,True,False,True,True,True,True,False,True,False],[True,True,False,False,False,True,False,True,False,False,True,True,True,False,False],[True,False,False,False,False,True,False,True,True,True,False,False,True,True,False],[True,False,True,True,False,True,False,False,False,False,False,True,False,True,False],[False,False,False,True,False,False,False,False,False,False,False,False,False,True,True]],[[False,False,True,True,True,True,False,True,True,False,False,True,False,False,True],[False,False,True,False,True,False,True,False,False,True,False,False,True,False,True],[True,True,True,False,False,False,False,True,False,True,True,False,True,True,False],[False,True,False,True,False,False,True,True,False,False,False,False,False,True,False],[False,False,True,True,True,False,False,True,True,False,False,False,False,True,False],[False,True,True,False,True,True,False,False,False,False,False,False,False,True,False],[True,True,False,False,False,True,False,False,False,True,False,True,False,False,False],[False,False,False,True,True,True,True,True,True,True,False,False,False,False,True],[False,True,False,False,False,False,False,False,True,False,False,True,True,False,False],[False,False,False,False,True,True,True,False,True,False,False,True,False,False,True],[True,False,True,True,False,True,False,False,True,True,True,True,False,False,True],[False,False,True,True,False,True,False,True,True,True,False,True,False,False,True],[False,False,True,True,True,False,False,True,False,True,False,True,True,True,False],[False,True,False,False,False,True,True,True,False,False,False,False,False,True,True]]], dtype = "bool")#candidate|4023|(16, 14, 15)|const|bool
var_4024 = relay.var("var_4024", dtype = "bool", shape = (16, 14, 15))#candidate|4024|(16, 14, 15)|var|bool
bop_4025 = relay.logical_and(const_4023.astype('bool'), relay.reshape(var_4024.astype('bool'), relay.shape_of(const_4023))) # shape=(16, 14, 15)
func_893_call = mod.get_global_var('func_893')
func_894_call = mutated_mod.get_global_var('func_894')
call_4049 = relay.TupleGetItem(func_893_call(), 0)
call_4050 = relay.TupleGetItem(func_894_call(), 0)
var_4051 = relay.var("var_4051", dtype = "bool", shape = (16, 14, 15))#candidate|4051|(16, 14, 15)|var|bool
bop_4052 = relay.floor_mod(bop_4025.astype('float32'), relay.reshape(var_4051.astype('float32'), relay.shape_of(bop_4025))) # shape=(16, 14, 15)
uop_4061 = relay.exp(bop_4025.astype('float32')) # shape=(16, 14, 15)
output = relay.Tuple([call_4049,bop_4052,uop_4061,])
output2 = relay.Tuple([call_4050,bop_4052,uop_4061,])
func_4066 = relay.Function([var_4024,var_4051,], output)
mod['func_4066'] = func_4066
mod = relay.transform.InferType()(mod)
var_4067 = relay.var("var_4067", dtype = "bool", shape = (16, 14, 15))#candidate|4067|(16, 14, 15)|var|bool
var_4068 = relay.var("var_4068", dtype = "bool", shape = (16, 14, 15))#candidate|4068|(16, 14, 15)|var|bool
output = func_4066(var_4067,var_4068,)
func_4069 = relay.Function([var_4067,var_4068,], output)
mutated_mod['func_4069'] = func_4069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_4100 = relay.TupleGetItem(func_871_call(), 0)
call_4101 = relay.TupleGetItem(func_873_call(), 0)
func_3704_call = mod.get_global_var('func_3704')
func_3707_call = mutated_mod.get_global_var('func_3707')
call_4104 = relay.TupleGetItem(func_3704_call(relay.reshape(call_4100.astype('float32'), [9, 9, 4])), 0)
call_4105 = relay.TupleGetItem(func_3707_call(relay.reshape(call_4100.astype('float32'), [9, 9, 4])), 0)
func_2512_call = mod.get_global_var('func_2512')
func_2514_call = mutated_mod.get_global_var('func_2514')
call_4107 = relay.TupleGetItem(func_2512_call(), 1)
call_4108 = relay.TupleGetItem(func_2514_call(), 1)
output = relay.Tuple([call_4100,call_4104,call_4107,])
output2 = relay.Tuple([call_4101,call_4105,call_4108,])
func_4114 = relay.Function([], output)
mod['func_4114'] = func_4114
mod = relay.transform.InferType()(mod)
mutated_mod['func_4114'] = func_4114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4114_call = mutated_mod.get_global_var('func_4114')
call_4115 = func_4114_call()
output = call_4115
func_4116 = relay.Function([], output)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4128 = relay.var("var_4128", dtype = "float64", shape = (10, 5, 16))#candidate|4128|(10, 5, 16)|var|float64
uop_4129 = relay.log(var_4128.astype('float64')) # shape=(10, 5, 16)
bop_4133 = relay.equal(uop_4129.astype('bool'), relay.reshape(var_4128.astype('bool'), relay.shape_of(uop_4129))) # shape=(10, 5, 16)
bop_4143 = relay.left_shift(bop_4133.astype('int16'), relay.reshape(uop_4129.astype('int16'), relay.shape_of(bop_4133))) # shape=(10, 5, 16)
output = bop_4143
output2 = bop_4143
func_4146 = relay.Function([var_4128,], output)
mod['func_4146'] = func_4146
mod = relay.transform.InferType()(mod)
mutated_mod['func_4146'] = func_4146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4147 = relay.var("var_4147", dtype = "float64", shape = (10, 5, 16))#candidate|4147|(10, 5, 16)|var|float64
func_4146_call = mutated_mod.get_global_var('func_4146')
call_4148 = func_4146_call(var_4147)
output = call_4148
func_4149 = relay.Function([var_4147], output)
mutated_mod['func_4149'] = func_4149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1207_call = mod.get_global_var('func_1207')
func_1209_call = mutated_mod.get_global_var('func_1209')
call_4160 = relay.TupleGetItem(func_1207_call(), 4)
call_4161 = relay.TupleGetItem(func_1209_call(), 4)
func_2354_call = mod.get_global_var('func_2354')
func_2358_call = mutated_mod.get_global_var('func_2358')
var_4163 = relay.var("var_4163", dtype = "int64", shape = ())#candidate|4163|()|var|int64
var_4164 = relay.var("var_4164", dtype = "int64", shape = (56,))#candidate|4164|(56,)|var|int64
const_4165 = relay.const([6.172628,3.238299,3.781030,-1.682394,-5.127862,3.452063,1.550305,9.437694,-7.990117,5.427849,-4.048422,3.276720,9.381316,-0.924533,8.673031,-7.246370,6.614599,-5.136705,-6.261660,-9.029510,1.096687,2.939726,-2.904335,7.949931,0.987472,9.258726,-3.290568,-3.164084,-8.553610,-8.577479,-7.814787,9.145099,-5.402200,-1.479183,-6.950531,-6.830424,1.453286,0.784914,-2.608609,-3.157040,1.386935,-9.498373,-9.139894,6.640128,2.712844,-0.074062,-5.042221,7.621475,-9.433432,7.378245,9.105368,-6.330562,-9.481570,-7.979711,-7.239194,-2.311603,-8.624574,-8.251116,-9.836157,-8.500277,0.842157,8.894544,-7.168481,8.507682,2.803566,9.304473,-2.871879,1.179490,6.604049,9.833358,-2.718519,1.584787,-2.401673,8.712768,-4.816455,5.554348,4.874621,7.161735,6.298803,-5.051165,-0.691943,9.851414,5.841295,8.559345,6.698242,-2.976268,-9.393031,-6.599990,2.636646,4.391335,8.133611,-2.138686,-1.576432,-8.444259,-0.799900,-0.074757,3.057727,8.321270,-7.713790,5.027597,5.344228,1.252878,-1.699233,2.246612,4.758840,6.284039,8.746598,1.516796,0.007069,6.070903,-7.659486,-4.412481,-4.030333,-8.719359,-9.112951,-6.039052,-0.520494,-9.573048,9.048856,-8.753545,-3.867943,-6.092148,0.491667,6.721577,3.422325,-8.835502,-8.022184,6.504791,-7.300863,9.782918,-9.671682,0.322524,8.242224,5.340724,4.228753,-2.746745,2.026279,1.340629,-2.955316,2.601578,7.183282,-6.965347,5.183824,-0.365300,6.941136,-8.397428,7.376417,-6.271777,9.393365,-4.383027,-3.350935,1.417806,8.550884,-6.991098,8.369049,6.487342,-8.866949,1.193708,-0.565926,2.099136,7.485756,0.334091,2.369323,-6.981510,4.784245,0.766344,0.108449,0.072423,6.948941,-8.212790,9.780999,-9.412404,1.112273,7.329492,1.294015,-9.106596,1.817349,-6.699654,0.485782,1.453436,5.683327,-1.226260,5.875725,3.211390,-4.946850,-0.596414,7.489000,4.380153,-4.316033,-6.325053,2.276674,-7.014982,-2.680411,-8.371399,2.762702,-7.901734,-1.610911,0.966458,-0.897896,1.582481,5.019509,6.453581,-9.314262,9.283888,0.333133,-4.397830,-9.952238,1.976998,0.609953,3.079300,-0.207260,2.102479,-7.829980,-3.721045,1.036202,3.427935,6.433722,-7.981595,8.097532,-2.270914,6.525568,-0.562958,-6.861172,5.926798,1.572199,-0.603549,-5.389819,-1.718468,3.715114,-1.733811,-0.615093,6.823019,-7.508233,4.032561,7.359713,-7.919358,2.701550,5.277620,7.041272,4.587372,2.542591,-8.267852,-8.132380,-0.558489,2.905410,-2.992963,3.866830,-0.005120,8.840293,9.955317,7.155890,-2.492650,-4.116679,-2.545291,-0.300503,-5.004138,-2.131037,9.348399,-8.135395,-2.775822,-9.853868,3.916836,-8.887043,8.184119,-4.988458,-3.195041,9.687185,-2.627985,-1.742642,6.841485,-8.867942,-7.016063,-8.704143,2.238731,-5.855148,-7.690137,0.132469,-9.004527,5.533946,8.815191,-6.951315,-7.952724,-7.046429,-1.293704,6.666814,9.047767,9.611788,-1.955133,-9.223367,-0.293435,2.101542,5.181564,4.226983,-5.962742,-7.390949,-6.935812,-6.448380,-8.342509,9.341546,0.617999,-7.794234,-5.450886,5.360648,5.807295,2.194883,-3.886652,-6.249872,2.278887,0.619489,9.889559,8.869998,-8.760196,-8.649398,2.079538,2.516680,-4.554768,9.460950,-0.771163,-5.338425,-3.328723,5.644747,-5.885899,1.931574,7.822950,-7.841157,-0.181364,-4.499967,4.597833,6.091175,-8.319928,5.946636,-9.731046,-4.704546,0.346938,-2.173730,-7.754113,-9.014049,0.640105,-9.212584,-7.080030,5.280696,-8.878209,-0.692576,-6.394403,-9.099517,-3.713451,-2.879148,6.486716,6.960699,7.376863,-5.828563,-1.956276,-0.546557,-9.517548,-4.596604,3.164470,8.491740,-9.464697,2.178873,8.160005,1.983358,-2.705770,-7.141317,-1.064025,-8.647800,3.259591,7.433578,-0.505980,-2.916309,-1.816640,1.847662,-6.766245,-2.181292,-8.706180,-2.122129,7.361704,-1.780152,3.545369,4.252660,-9.151716,0.067076,4.813008,9.233441,-4.846694,-0.713074,1.781764,7.545560,7.344234,-7.553072,7.436769,9.365476,-1.529409,-1.217850,6.652737,-9.645972,-7.739235,6.136198,-0.435788,7.657409,-2.561349,-4.326031,2.706475,-2.729761,7.948898,8.148594,4.134447,9.316624,-9.431523,7.656583,-0.599331,0.114646,0.500216,-8.965183,-5.803926,-6.502914,0.477857,-9.583095,-1.265134,3.854631,4.525555,7.272051,-1.219939,-8.531275,-7.851889,-1.545275,4.005295,8.668185,-6.659445,4.064899,6.702709,-6.376160,-8.630753,-1.987994,5.751073,-7.346317,-3.761849,8.288649,-0.625020,9.623318,7.616671,7.893914,1.708703,6.356658,-5.316009,-5.918897,-4.834519,4.780479,5.766548,-6.645896,6.629548,2.539865,-8.479619,-2.309399,1.607296,1.089850,7.807683,6.009677,-3.189603,7.734083,5.208832,-2.338232,-1.108966,-4.233034,4.889858,-5.118055,9.183573,-2.474418,-3.963252,3.629312,-7.435109,-3.018990,2.175384,9.101184,-3.349776,2.022440,-0.152124,6.820565,7.171879,1.218097,-5.010009,9.314207,1.305148,6.129870,8.177163,3.097234,-2.286779,7.478837,-0.803286,8.597382,1.187871,-5.096806,-7.643540,-4.620235,-6.687735,7.250543,7.080669,-8.061398,-4.858197,-5.596322,-2.183804,-9.555459,2.830822,8.009393,-2.698514,-4.545116,3.258695,0.037293,5.174597,8.721746,4.684936,-0.864137,6.633727,-0.917052,5.724162,7.454795,-3.071527,-3.039035,-2.742558,1.343573,-3.636762,-3.993676,1.482106,7.773248,-2.454835,-7.976154,9.231607,-0.783371,5.675901,1.633706,-1.431453,8.527497,-8.780769,-0.006806,6.504883,2.489051,-3.976811,0.971524,1.229339,-4.482350,8.795090,-4.445335,8.583847,4.671650,1.589343,2.184595,-3.979791,-8.257358,-4.939111,7.760673,8.738307,8.196114,-8.703642,3.143978,-9.348107,2.569630,-1.286529,-0.267650,4.576242,-2.933969,-1.868383,-3.852184,-3.408263,0.420976,0.209822,-5.362007,4.118413,-8.962619,-3.279180,-7.351697,8.222099,-1.827034,8.289726,-5.379038,0.181467,5.470428,-5.668204,-7.037924,-7.684193,-4.140078,-4.987150,-9.496447,-3.455250,8.008330,-8.081178,6.473034,-1.702645,8.164190,1.374974,-0.081558,5.512229,-8.144274,1.827128,-4.269992,5.862522,0.681748,-8.730808,5.424223,2.780035,5.796529,-3.600172,8.549632,5.080161,-7.691500,-9.773068,5.736997,-9.147862,-8.238344,-5.076477,-6.168378,4.012749,5.084144,4.409062,-6.837218,6.916979,0.242187,3.641121,-1.147970,5.211523,3.203765,7.859564,4.299257,-2.809703,1.074110,6.489077,-4.618428,-4.909250,-6.228151,9.469309,-6.162753,-6.528077,-0.943073,-3.937521,-8.283956,-8.488991,-9.627800,-5.435717,9.106339,4.094519,9.687864,-3.136411,9.074192,8.074058,9.544079,-7.249067,-5.688864,0.890702,-2.822173,4.984503,9.998487,-7.077443,-7.413342,-8.672950,-3.498093,-3.935123,-6.367310,6.212381,9.768031,7.217699,0.176552,-2.787919,-0.342045,8.892384,-1.945093,-9.320807,-6.859833,0.519448,0.335804,-2.799682,8.255865,-9.421908,-5.585852,9.010224,-1.327326,-8.642729,-7.563622,4.165397,-7.742913,-0.925276,-7.457939,-5.252548,1.730409,2.472245,4.554664,-5.549078,-2.054306,-9.591025,5.094822,4.285952,-2.479314,3.064822,-3.626325,-7.501503,7.073593,5.952793,7.370982,-8.831875,0.142913,0.788446,-6.709367,1.262195,-5.686605,2.293672,4.043381,-1.595280,-2.331759,1.166656,-1.610107,5.228932,-7.734939,7.963314,-4.843262,-8.064886,0.463349,8.661416,-6.243499,0.178707,-6.588445,-9.901797,5.239173,-8.507987,-0.406303,-1.015295,3.686929,8.665201,2.931167,1.807660,-6.225069,9.514472,9.275253,8.170437,-0.900052,5.609375,1.864541,-6.970442,-9.279200,-2.911105,-3.998076,4.621379,-9.815144,3.937591,-6.678958,-2.252768,8.750743,-8.189688,-7.604993,-7.507372,-2.831330,2.036367,9.045116,-5.151526,-7.406798,-5.371554,-1.400089,-0.476846,-6.514639,-8.341635,-8.181935,-6.167641,-9.919073,8.881706,-1.878539,8.408493,5.776467,7.824706,1.084326,-6.300197,-1.119276,-7.940149,-8.837415,-9.011811,5.807177,0.677516,1.551442,6.182559,6.401190,-6.756451,-1.904305,-0.395381,-5.166179,-8.318005,-9.973138,-1.370739,1.086032,1.136397,6.870132,3.170148,-6.096590,5.708650,-0.114302,1.581162,6.347603,8.924005,-4.870860,9.762721,0.856500,-6.257953,-0.750298,5.938835,8.434697,8.922640,-7.954720,5.422089,-2.993616,-3.568793,9.281632,-0.881411,4.904325,-1.667343,4.889368,-3.158291,1.853840,-6.004306,6.853926,-8.809903,-9.860457,-8.345989,-7.487479,2.794887,-4.197392,2.917030,-3.963130,-4.558124,5.724898,2.898844,-1.925131,-7.873017,-8.294496,7.001244,-7.441668,-5.761332,3.282856,4.489577,8.079022,-9.390889,-6.099151,1.507383,6.585220,-5.492132,9.251125,-7.786016,0.864007,3.382015,4.749713,-3.701631,-3.421995,8.214547,1.659143,9.294956,7.669267,-8.401443,6.473778,-4.618451,7.234546,-0.786014,-3.756428,-6.848231,4.432613,5.358056,-6.503003,-4.818670,1.302044,-2.762614,-9.783612,2.884654,-0.433423,5.788594,7.395095,-2.836048,-7.796777,2.163121,2.659756,-3.033363,-3.066173,-2.081826,8.192776,8.800234,-1.627649,0.693790,-6.903516,-4.462337,-1.244623,-0.240744,-6.975340,-2.007254,8.499401,3.718379,8.344292,6.488974,-9.656336,-1.045997,-7.258294,-7.172566,-5.857607,5.756505,-4.517741,1.539258], dtype = "float64")#candidate|4165|(896,)|const|float64
call_4162 = relay.TupleGetItem(func_2354_call(relay.reshape(var_4163.astype('int64'), []), relay.reshape(var_4164.astype('int64'), [7, 8, 1]), relay.reshape(const_4165.astype('float64'), [7, 8, 16]), ), 4)
call_4166 = relay.TupleGetItem(func_2358_call(relay.reshape(var_4163.astype('int64'), []), relay.reshape(var_4164.astype('int64'), [7, 8, 1]), relay.reshape(const_4165.astype('float64'), [7, 8, 16]), ), 4)
func_3482_call = mod.get_global_var('func_3482')
func_3485_call = mutated_mod.get_global_var('func_3485')
var_4168 = relay.var("var_4168", dtype = "int64", shape = (15,))#candidate|4168|(15,)|var|int64
call_4167 = func_3482_call(relay.reshape(var_4168.astype('int64'), [5, 1, 3]))
call_4169 = func_3482_call(relay.reshape(var_4168.astype('int64'), [5, 1, 3]))
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
const_4183 = relay.const([5,-1,2,1,6,-9,3,-5,4,3,10,1,3,3,-4,-4,-2,3,10,5,-7,-4,-10,1,2,-4,-3,8,-8,1,-3,-10,1,-1,7,-7,-10,-3,10,4,7,6,2,-5,-5,6,-1,-3,10,-3,7,9,1,-8,5,6,-10,1,-4,-6,-5,7,7,-8,3,5,-1,9,-8,6,-1,-7,-3,-4,-7,8,-1,5,6,-8,-7,2,7,4,10,-9,10,-1,4,-10,4,-10,4,6,1,10,4,9,-3,5,1,-4,9,4,9,-2,-3,-1,-10,-8,10,2,-7,-5,4,-4,5,-7,-3,8,6,-8,-4,9,-5,-6,2,9,9,-10,6,-9,3,-5,-9,-10,-7,-6,-9,-7,-10,1,5,3,-6,8,-8,2,2,-10,4,-6,10,2,-8,6,-5,2,-7,-3,-8,2,7,9,-3,10,1,-8,9,2,2,3,-5,7,-10,2,3,-3,-9,-10,1,2,8,-3,-2,2,3,1,-2,9,-1,7,-8,-4,3,1,-6,6,-5,-10,-5,8,8,7,8,-2,-8,4,-9,3,4,6,9,5,10,-10,6,3,7,-3,-6,7,6,-2,-8,9,-10,-4,-8,4,2,2,-4,-3,-7,-8,-3,-8,6,4,-6,-8,9,-7,8,-4,9,-10,1,4,2,-2,8,-6,10,10,4,-2,9,9,-5,10,6,-7,-5,-8,4,6,10,8,-3,-5,6,9,1,3,-8,9,2,5,-8,6,3,-6,3,2,-10,-2,-8,-2,-6,6,7,-10,-3,8,-7,3,-6,2,1,-7,5,-9,-8,-4,5,10,5,-1,-6,10,-3,3,2,-1,1,5,-7,9,-7,-2,2,2,-2,6,2,-1,-8,6,-2,-4,7,9,6,-9,-2,3,3,-1,-10,10,2,-9,-8,2,-4,-2,-8,4,10,4,4,-8,-7,-9,8,1,3,-2,-6,10,3,-10,-3,-4,8,5,-7,7,1,-3,7,1,-5,-2,9,1,-4,-2,5,-7,4,-3,6,7,7,-8,-3,6,-2,-10,-10,3,-4,-8,1,-2,-7,7,6,-3,-3,7,8,5,2,10,-6,4,10,-1,-9,-7,7,-2,-8,-5,-3,-7,6,2,-7,9,-7,-5,7,9,8,-2,10,7,-8,10,-7,-6,-1,2,-3,3,-6,-9,4,-10,-4,7,-8,-5,-1,10,4,-2,6,-4,6,3,6,6,-1,-4,1,-10,-6,-7,-10,4,5,-8,1,-2,-9,-1,-8,-9,-5,4,2,5,1,-6,9,4,7,4,5,-7,10,1,8,7,-3,-9,6,-5,-8,-7,-1,10,4,6,-10,6,-2,8,-9,3,-7,-6,-8,2,-4,-2,2,2,6,5,-2,7,-8,-6,-1,8,3,3,-7,-7,1,-5,-1,-1,5,-4,7,-3,-6,3,-7,-7,6,-2,-2,5,8,8,-7,6,-5,8,-10,8,-9,-7,-3,-7,-2,-2,-7,2,7,5,-1,5,-1,-9,-4,-9,9,1,10,-10,8,9,-1,1,10,-1,6,6,-8,10,-3,7,5,-3,8,7,5,1,8,-3,9,9,9,3,-2,3,2,-7,-10,1,-4,-3,-6,-3,6,3,2,-1,9,2,8,9,7,-8,6,4,8,9,4,8,-9,-7,3,4,3,7,1,-3,2,5,1,-10,-9,-4,-2,-4,3,4,9,-10,-3,-6,-3,-3,10,-6,9,1,4,2,-10,-9,-8,-9,-10,-1,-7,7,6,8,-8,-1,10,-5,-9,-2,-3,-10,-3,-6,-1,6,-4,10,3,-9,2,-7,2,-9,-9,10,2,-3,-10,-10,5,-10,10,-10,8,3,-9,-2,-4,-2,2,5,1,-10,6,-3,-7,4,1,-10,3,-10,-4,3,-3,-1,4,-10,-5,-5,2,3,-1,9,-1,2,2,8,6,6,-6,-6,-4,-5,-9,-1,10,-4,-1,4,2,9,10,2,9,-5,6,5,-8,-10,-3,-9,4,-6,4,8,6,10,5,1,-9,-10,8,4,8,-2,-4,5,-4,-3,-9,-6,8,-2,-7,6,-9,-10,2,4,1,-10,-9,-3,6,-3,6,-1,-5,-7,7,-10,-10,5,6,9,-5,2,-5,-9,2,-7,1,-5,2,1,-5,-8,-3,6,-4,7,-5,-3,6,1,-4,-6,-6,-3,3,10,7,3,-2,-9,4,-6,-5,-1,-3,-8,-1,-3,-5,7,-2,-8,-6,-9,9,-5,-4,-4,-9,1,-7,10,3,-7,10,6,5,-3,6,1,9,-10,6,1,1,9,1,6,-3,-2,-8,-8,-4,-4,-2,8,9,-6,4,-2,1,2,3,4,10,-10,6,-1,-9,-1,-8,-4,-6,5,10,-4,-1,1,-4,-1,-2,-3,10,-9,9,-2,8,7,8,6,9,9,6,-5,6,5,8,-8,-3,7,-6,8,-7,-10,7,3,3,8,-1,-10,-1,-6,-4,-5,-9,9,-1,9,-4,-5,4,8,9,9,-1,6,5,-10,4,7,10,-1,3,-1,1,-7,-3,2,-3,1,-1,5,-10,-6,4,10,-9,7,2,-8,-5,8,2,-1,3,8,-10,2,9,4,3,-7,6,-4,-1,1,-9,-5,9,3,-7,-7,-3,-7,-9,6,-7,-4,-7,1,-3,6,-9,1,7,3,-5,3,9,2,4,-10,1,4,-2,-9,-5,-7,8,-6,3,2,-8,-6,6,-5,-6,-1,-8,-6,-8,-7,2,9,1,-6,5,-2,3,-1,6,9,-2,-8,5,-1,10,10,-2,-1,-6,-9,5,5,-9,-8,2,-6,10,-5,9,2,5,-9,-10,-4,-7,7,-4,9,7,-8,-7,-5,8,1,-7,-5,4,-3,-6,9,10,5,-8,-9,2,-6,-4,5,1,9,1,-2,10,7,2,9,-4,8,-9,-7,-6,1,3,10,-1,4,5,-5,3,4,10,9,-10,-5,6,1,4,10,5,1,-10,-8,-3,3,4,3,-1,-9,-1,-9,6,-9,-1,8,-10,3,-4,-7,1,6,7,1,-4,-6,-7,-6,-4,-3,-3,-2,10,4,-4,4,1,5,9,-6,8,-10,7,-8,-10,-8,2,7,-5,5,-4,-9,8,2,9,10,10,-2,5,-7,-1,-9,7,4,-9,-3,7,-7,-3,-10,-7,-2,2,3,6,-4,7,9,-1,5,-1,2,-10,2,-8,-8,5,-3,7,-4,-9,9,2,-1,-2,-3,-5,-10,-6,8,5,10,-9,-6,-2,-9,-9,-7,10,-5,4,-5,7,-4,8,-6,2,-2,10,7,-8,-2,-7,-1,-7,-1,-6,-10,2,5,-7,-2,6,10,-1,9,5,8,10,-1,6,6,8,7,9,7,-3,-7,-4,9,3,-5,-9,2,-2,8,7,-2,-9,5,2,-8,-3,-6,-1,2,-4,4,-10,5,-1,4,7,3,6,6,9,5,-8,-9,-7,-2,-8,4,-5,3,-2,-4,-2,4,6,-6,-5,-9,3,9,10,10,-8,-5,-1,-8,5,1,2,3,-7,-5,1,3,-5,-3,6,1,8,-8,6,4,-2,7,10,2,-3,8,-2,-8,-5,-1,6,8,10,3,-4,7,1,7,-6,-7,-7,-2,7,-7,-3,-5,10,1,7,-6,-2,-6,7,-2,-4,1,-5,-2,3,5,8,4,-1,-10,2,1,6,-5,-1,-7,8,-6,-1,5,8,1,-10,-5,-4,1,-10,-10,-2,-1,-3,-9,6,-6,-6,2,-1,-1,10,1,-3,-9,-7,-1,-5,-5,1,-1,-9,-6,6,-10,-3,-5,9,8,-10,-4,8,-7,10,-1,-4,-9,-7,-2,3,1,3,8,4,3,-4,9,4,5,8,4,6,6,8,-8,10,-6,5,-2,-9,3,5,5,7,-3,6,6,-1,-7,2,10,5,2,10,-1,2,4,5,5,9,-9,-7,7,1,9,-1,5,4,10,-3,5,-4,-1,6,4,-7,-2,-10,-4,-5,4,1,4,7,1,4,7,3,-8,7,-8,-5,-9,-9,5,6,-4,9,6,1,-9,-1,4,6,5,-3,6,-3,-4,7,-10,9,4,1,5,7,-8,10,-4,-3,-8,4,-6,-8,-1,10,-2,5,-6,-5,-8,-4,-3,-8,1,-8,10,2,10,8,8,5,6,5,-8,-2,-5,3,-1,4,4,2,5,2,5,-9,8,5,7,4,2,-10,-4,-6,-5,8,4,3,-3,7,5,-3,3,4,7,3,-6,10,-9,-7,-9,-4,-5,4,-2,-8,-10,-7,-8,-3,1,-8,-3,6,-5,6,8,-8,-5,-10,7,1,8,2,-10,-1,-3,7,7,7,6,9,1,8,-2,-2,-6,-6,-2,-10,-3,3,-2,-3,-6,5,4,-8,3,-3,-4,-6,10,7,-10,6,2,3,-10,6,-5,-7,-7,3,1,-7,-1,-7,4,-4,-5,-2,-10,2,9,5,9,4,9,7,5,8,6,-6,-1,7,-1,-2,3,-10,-2,-10,-8,-6,-4,-8,-9,-5,-2,-5,3,1,-2,2,7,-2,6,-9,-6,1,9,9,6,3,6,2,-2,3,8,-3,-7,5,5,-8,-10,-3,10,9,7,-5,1,-2,2,9,3,6,-7,3,-4,4,-2,5,10,-8,-5,10,10,-1,9,2,-3,2,-9,1,8,7,4,-1,-5,9,-10,8,-3,4,-2,-4,7,5,2,9,-5,9,-10,4,-9,-7,-4,-1,-5,-10,1,2,-9,4,-4,1,-1,9,-1,5,5,-1,7,5,8,9,-9,-7,-9,-2,-4,-2,-3,6,-1,-6,-5,5,-10,5,8,-7,-6,-7,-7,-8,10,-8,1,9,-7,10,5,-3,8,2,4,2,8,-5,-8,8,2,-3,9,7,-8,-7,2,7,-10,7,2,1,1,-5,-8,-7,8,-5,1,-3,9,-1,2,3,8,-5,1,10,-4,1,7,-4,7,2,-1,8,-8,3,8,3,7,-8,-6,2,-5,-5,2,-9,-1,6,7,2,-2,5,-10,-8,6,7,8,5,-4,-8,-2,-5,6,-6,5,8,4,1,-2,3,7,-4,-1,8,1,-2,-1,-5,10,1,9,5,3,-9,5,4,2,-6,-7,10,2,-1,1,-1,-9,-6,-2,-4,-9,1,-3,-5,-5,1,9,1,5,4,8,-9,-8,5,-8,-6,-2,-10,-1,1,7,-7,-3,-6,10,4,-5,-7,8,2,3,-2,4,9,6,-1,-1,-7,-9,-1,-5,9,8,5,-9,1,-5,-4,-2,4,2,10,6,-6,-2,-3,1,-1,7,-2,-2,-6,-5,-6,5,4,-5,-1,-4,5,-3,5,10,3,-1,-4,10,-10,4,4,3,-7,4,9,-4,-4,-5,-2,-4,-4,4,5,-10,10,8,1,2,2,-5,-4,7,5,4,7,-4,2,-9,-1,2,2,5,-5,-3,-3,-10,-7,-2,1,2,5,-8,-6,-3,-7,8,9,3,10,-1,-4,9,-9,8,10,-9,7,-1,-4,10,1,1,1,4,-9,6,7,9,-8,-8,-8,-1,-2,-10,9,10,-9,-10,4,-4,8,-10,-5,10,7,-2,-5,-2,7,5,-1,4,5,-2,5,-4,4,-7,-5,10,7,7,-5,10,10,-8,2,2,-5,8,8,4,-10,-1,-9,6,-5,7,1,-3,-5,-5,2,-6,-2,6,8,4,-2,2,-7,7,-1,-3,-4,-7,-7,7,10,4,-8,3,-2,-6,1,-6,-6,2,9,-2,-2,-3,-9,-8,-2,10,5,-7,-10,1,-1,-2,10,-4,1,-4,-7,4,7,-7,-8,-10,10,-2,-10,-2,2,10,1,-2,2,-7,-3,6,-7,-9,-10,8,8,-10,4,1,-9,-9,7,-3,7,9,-3,2,-8,2,1,7,9,8,-1,-9,-10,-3,10,-7,7,9,-10,9,3,7,-3,-5,-4,-8,-2,9,7,-10,-7,-4,-4,2,5,4,-7,3,-7,-6,1,-10,-3,6,1,7,-4,10,-5,4,8,-9,10,4,-10,2,6,-4,-3,9,8,-9,6,-2,4,2,-5,6,2,-5,-2,-6,9,7,2,-5,1,-5,-5,-9,-3,10,3,3,8,10,3,10,5,5,1,-10,-3,-1,-1,7,3,-2,-7,-2,3,7,-7,9,4,9,-1,10,-3,-4,3,-8,3,3,-7,7,4,-5,10,-2,9,2,2,5,2,10,1,2,-10,-3,9,-8,-3,5,-8,-2,10,-6,-5,-8,10,-4,7,-6,2,-5,-1,-3,5,-2,5,-9,-5,7,-6,8,-2,9,-8,-8,6,1,-4,2,4,-2,5,6,-6,1,-10,8,-1,1,1,2,-3,-3,-7,8,-10,-10,4,6,-9,-2,5,-10,6,-8,3,2,-10,2,-1,-9,-5,-5,-5,8,7,-4,9,-1,-7,10,8,5,7,7,10,-9,7,3,-5,9,-1,6,-6,7,-3,-3,-8,-1,8,5,4,-2,-9,4,-7,6,5,-10,-9,6,3,-5,10,10,-3,-5,-10,-9,-5,3,-7,10,2,-5,-8,-5,2,3,-5,9,9,-5,2,-2,-9,9,-5,-10,-8,10,-7,6,-6,-1,-4,-8,-4,-6,7,3,2,-1,-8,7,-5,-3,-3,-10,-10,9,1,10,2,-10,-5,-4,5,-7,-4,1,1,-2,5,-5,-2,10,4,7,-8,-3,-1,2,-2,-9,3,-8,5,9,1,-4,8,8,-6,8,-5,-8,9,2,-9,10,4,6,-7,9,9,-4,-7,-1,-9,-6,-1,1,-4,-1,-6,7,-8,-9,-8,-6,-2,-7,5,4,6,-6,-6,-7,10,5,9,-5,-5,-6,3,-3,4,-3,-6,1,-9,-1,4,5,-5,1,4,-3,-10,-5,10,-7,-6,3,9,5,3,-3,1,-2,-10,-10,-8,-7,-9,1,-8,6,-1,7,-3,8,-8,2,8,-6,6,3,9,4,2,-1,-4,-6,4,-6,6,2,4,-5,-9,-9,9,10,-3,7,-8,8,5,-8,7,-7,-8,9,4,-4,-5,9,6,3,2,7,-10,3,-6,4,6,8,-4,-8,1,3,-5,-1,10,10,-5,3,1,1,-8,3,-10,-10,8,-3,9,6,-6,5,-10,-9,4,-2,-7,-4,-10,1,-8,2,-10,-6,1,-1,10,7,2,6,-8,-1,-1,-2,-2,3,-5,-7,-10,-1,6,9,1,5,-2,9,9,-8,5,-5,4,-6,-3,-3,-7,-5,10,6,-10,3,3,-3,-2,-5,1,-1,-8,-6,-1,5,3,8,1,-5,6,-2,-9,-1,6,-7,8,3,-6,-10,-8,-2,2,-6,-5,-6,10,10,-5,-2,9,-9,9,6,1,-2,-8,9,8,4,8,-4,10,-8,7,7,9,-6,7,4,7,-4,4,-6,1,-4,4,5,-6,-10,-3,10,10,-8,9,5,-10,2,4,-6,1,-4,-2,8,4,-10,4,6,-5,3,8,9,-6,-6,10,-7,-2,4,2,9,-2,2,8,-2,-4,-8,-4,4,7,-2,10,5,-2,5,3,-9,-4,10,9,-6,8,7,10,-4,9,-3,5,2,-9,1,-4,8,1,1,-2,3,10,4,9,-8,-3,-9,9,8,-10,-1,-1,-2,6,2,-2,-10,5,4,-3,4,3,8,5,-9,5,9,6,-8,-9,-2,5,5,7,4,4,-8,1,9,10,-3,8,2,-5,8,-3,7,2,8,3,-9,-9,-6,-1,-6,-2,9,-1,6,3,4,-4,-4,2,6,-3,4,2,-2,-6,-7,7,10,6,6,2,5,-10,4,10,-9,7,-5,-7,5,5,-2,7,-10,8,4,7,-7,10,-1,3,5,7,-10,-5,6,6,-2,-9,-6,2,8,1,8,-7,4,-1,2,9,2,7,-5,7,-6,2,3,3,-3,7,8,10,-5,-2,-9,-1,4,1,10,7,-4,7,-10,9,5,-5,-1,6,6,-5,7,-7,3,-10,-8,7,5,1,4,-1,7,3,-2,6,-5,2,8,-2,-9,-3,9,-1,6,4,-4,-3,2,1,-3,10,9,-1,-3,-9,5,-3,4,3,-8,1,1,-2,-10,-4,1,2,-8,-8,-5,-5,-9,-9,2,2,-8,-1,7,-9,-8,1,-7,-9,5,7,-4,-2,-3,-5,-2,7,10,-6,-3,5,10,-9,8,-3,5,4,-4,-2,7,2,-4,1,6,2,-4,9,2,4,-5,-4,-9,-10,5,10,9,5,-8,7,4,3,6,-4,9,-8,-5,7,-1,6,8,9,-7,-9,1,-1,5,2,6,-8,4,-1,10,-4,4,-6,6,-10,-2,-10,-4,5,-4,1,-5,-7,6,-1,-8,7,6,4,9,-5,-2,-3,5,-8,-6,-1,9,-3,7,-3,-10,-9,-4,-6,-7,-5,7,7,-5,-1,3,4,-9,9,3,-3,2,7,4,-10,-6,2,-10,-5,4,-6,9,1,8,-8,-1,2,-2,9,2,-9,-4,-4,-9,-9,-9,2,-6,-8,4,-5,-8,8,8,5,9,-10,4,7,-3,8,3,9,-2,6,-6,1,-10,1,-8,-7,10,-10,-1,8,3,-7,-6,6,7,6,-4,7,-7,3,-5,-2,10,-1,-9,9,5,-6,6,10,5,9,2,5,-2,-5,-1,-6,-9,3,6,-9,10,3,-9,-1,1,-6,-4,2,-1,7,-4,-2,9,-2,-9,-9,8,7,7,2,8,10,-8,1,1,-3,10,1,-3,6,6,3,7,1,-7,-3,2,-8,8,-2,-7,6,-10,-9,-2,5,2,3,-7,5,-7,1,-2,2,8,8,6,-5,3,-9,10,-4,-3,4,-1,-6,-5,-10,7,6,-3,-5,10,-5,-5,-9,-10,7,-10,-3,-10,-1,-5,-2,10,-10,-2,-4,-4,-9,-3,3,-3,-7,3,-6,-7,8,8,6,7,3,-2,6,-3,-6,1,-4,-2,-9,-8,-10,2,9,-9,9,5,-7,-6,5,-6,-10,10,3,-2,9,-9,-7,6,-2,4,-10,3,6,-10,1,-1,7,4,5,4,7,4,6,-1,6,-2,-2,6,4,-10,4,-7,-5,10,-6,6,8,7,-10,4,2,2,1,-4,4,2,-5,6,10,8,10,9,-3,-4,5,-9,-4,-4,7,-1,-2,-6,2,5,-9,7,-8,-1,-5,4,-5,-10,1,3,10,8,7,-8,-9,-2,-7,-8,-7,8,6,-3,-4,-9,7,-7,-7,10,1,6,3,8,7,7,-7,-8,-8,3,4,-10,-3,7,-2,-6,4,-2,-10,-9,8,-10,2,7,9,-1,-9,5,8,6,8,2,5,-1,4,-1,5,-7,-1,6,-4,4,-9,-7,-10,4,6,4,-10,4,6,-8,7,7,-10,10,1,9,-3,-5,-1,5,-5,-7,-3,-8,-6,-9,2,3,-10,-7,-6,-10,-3,6,-6,-1,7,5,-9,-8,-1,-2,-4,4,7,-4,8,-6,1,-6,10,-7,5,8,4,3,-2,8,-9,9,-6,10,6,-6,7,-3,9,-5,-9,8,-8,1,-5,5,1,-9,4,-2,7,-9,-10,-3,-10,1,1,5,2,9,-4,1,-6,-2,-2,-3,2,5,-4,-9,9,6,-3,1,-6,5,5,-5,6,3,4,9,10,6,-4,-8,8,5,4,9,8,-2,-7,6,-4,3,7,-4,6,10,-8,5,4,-7,5,10,9,-6,7,-2,-1,1,-7,-8,4,2,-8,-7,-6,1,-2,5,-1,2,5,10,-10,-7,-5,-9,2,-2,8,-1,6,8,-2,-3,-5,4,-10,-7,7,-7,-6,-3,10,9,5,-4,3,-2,4,10,10,-1,-8,9,2,-10,-2,7,8,-2,7,7,6,6,3,-1,-10,3,1,-7,-8,1,10,4,5,3,1,-1,9,9,3,-7,2,-5,2,6,-9,-3,-7,6,-4,4,-9,4,-2,2,-3,-2,-10,10,1,3,-2,-6,5,3,-1,7,-1,9,-2,-3,-1,1,-4,-3,-6,-4,5,9,1,9,8,3,-7,-7,7,-5,6,10,-7,-6,1,1,-9,-6,-2,-4,3,2,-2,-10,-8,7,-10,-6,4,-8,-10,-1,-9,1,1,2,3,-3,-2,5,-7,5,-3,-4,3,-2,-1,3,-9,9,-10,-6,-6,9,4,-9,-8,8,-7,8,2,-4,4,-3,2,7,-5,-6,-3,-1,10,-8,4,2,6,-1,4,3,3,-3,10,-8,2,-7,10,4,6,10,5,3,-6,4,-2,-9,7,-1,-1,-3,2,2,6,1,5,5,-5,-5,-5,-2,10,-1,3,-3,10,1,-3,-5,8,-4,9,-5,10,-7,1,-3,3,7,5,-2,3,10,-8,-9,-10,7,4,4,-4,-10,-2,-5,6,-1,-1,7,-8,-3,1,1,7,-9,-2,7,-5,2,-10,4,-10,-7,10,6,-3,6,-3,3,7,-2,-6,8,6,9,-6,1,10,6,6,-9,4,-2,2,-6,-9,1,-9,-7,6,2,8,7,-3,-7,-8,-7,10,7,7,3,6,-1,1,-2,3,1,9,-9,-3,-1,-3,-1,-10,-6,-6,2,5,6,1,-4,-2,-4,-3,3,-1,6,5,-8,-8,1,-7,5,-6,7,1,-10,6,-5,-10,6,-5,5,2,4,-10,-5,7,9,2,-9,-7,7,-6,6,-3,7,-9,-7,-8,2,-3,6,-8,3,1,5,2,3,6,-4,-4,-8,-3,-3,-3,8,-1,-6,-9,8,-3,-8,-7,-3,-10,4,7,-6,-7,9,3,8,4,-2,-4,-1,-3,2,-9,7,-3,3,4,-2,8,1,-1,-5,2,7,8,-3,-6,3,1,3,2,7,7,5,1,9,4,6,-1,-3,1,-10,-10,-10,-4,8,3,9,5,7,1,-7,-2,-4,7,10,3,5,-4,6,-2,-3,2,-6,10,-2,-3,-8,3,6,9,-10,-9,-6,1,-10,-8,9,6,6,1,9,-8,-7,-10,3,-10,-10,5,1,-7,1,7,-7,5,1,1,10,-6,2,-1,-5,-5,1,10,8,-4,-5,8,3,5,-9,-1,-8,3,5,3,6,-3,-10,6,2,-6,2,1,7,-9,-4,3,-9,2,-2,-2,-4,3,9,3,-3,2,-5,1,1,-10,10,9,-2,5,-9,-4,3,-9,9,8,3,7,5,1,6,10,-5,-9,-1,2,-1,-5,4,-9,-5,4,6,-5,-9,-6,-6,-5,5,-7,-6,8,-5,-2,-4,1,7,-7,-9,4,9,-7,4,7,5,10,4,9,-9,-8,1,4,7,2,6,-5,4,1,3,-1,-3,-10,-9,6,-1,2,-4,-1,-8,6,-7,-8,-3,2,4,-2,4,-3,2,-10,-6,4,-7,-2,8,-10,10,-9,-6,9,-4,-8,-5,-1,2,8,4,-7,-9,-7,-8,-3,6,1,2,-1,-3,5,9,2,9,-9,-4,-3,7,1,10,6,-5,-5,9,3,6,7,-6,-9,3,-8,-6,1,5,-1,-5,9,3,4,4,3,5,-7,1,6,4,10,-4,-5,2,-4,-2,4,8,9,-7,-2,-2,-3,-5,-6,2,-10,4,7,-9,2,1,9,6,-3,-10,-7,-6,-5,1,1,-5,4,-4,7,10,-7,5,-2,5,8,-2,8,-7,-8,-4,6,10,1,8,1,7,-9,-5,-7,-6,-6,10,-6,-6,-7,-3,-8,-2,-9,6,8,-8,-10,-8,3,-2,4,-2,-10,7,7,-2,-5,5,-5,-5,-8,10,8,-3,-3,10,6,10,-10,-5,8,-5,10,-8,5,-7,-8,9,6,7,-8,9,-2,-9,-5,-1,-10,8,8,-8,-3,6,-4,7,8,9,4,-7,6,-9,2,8,10,-5,-3,-3,-8,8,-3,-1,-1,-4,-8,-1,1,-7,-4,5,10,2,1,-2,4,10,-4,-6,-1,4,-3,4,-7,-7,8,4,-1,3,-4,10,4,-3,1,7,-4,-1,-6,-1,8,5,-9,5,-7,-2,3,9,4,-8,-5,-6,6,6,-2,6,-6,-5,-1,-4,9,1,2,3,-6,-10,8,8,3,7,-2,5,-5,2,3,8,4,5,-1,-1,-1,-6,8,4,-9,-9,5,8,6,-8,7,-2,5,-8,-8,-1,-1,8,2,-3,3,3,-7,8,2,6,-1,-10,-6,3,9,-2,3,-2,-2,-8,-8,-2,4,2,-7,-5,5,-7,6,-6,7,7,-2,7,-3,-10,9,-6,4,-9,6,-9,1,-3,-9,-4,-9,-6,-8,-4,1,-2,5,-3,7,10,-6,-4,7,6,8,-2,-10,7,-5,-9,-6,7,10,-2,2,10,-3,6,4,5,1,9,10,-9,9,-9,10,10,-6,9,-6,-5,-3,-8,1,7,3,-5,-3,7,-4,-9,-4,6,-3,5,4,-6,-1,4,-10,-5,-8,-5,5,-3,8,-5,4,2,4,7,-9,5,-9,-3,-9,-1,9,7,8,4,3,10,-1,-5,10,-3,6,9,6,-4,2,-3,1,-6,-10,-7,-2,-8,-9,-7,4,-10,-7,-6,2,-9,5,-5,2,5,4,4,-9,8,-7,7,-5,4,7,-5,9,-1,-6,3,10,9,-2,-3,-7,-10,-5,8,5,2,-1,9,10,8,-8,5,1,-5,9,5,-8,2,4,-3,-3,9,1,6,9,9,-7,7,-10,-2,-10,-7,-3,-2,-1,6,-8,-8,2,-10,9,8,4,1,-10,3,1,-8,8,-3,-3,-1,-3,-1,2,-8,1,-5,5,-8,-3,3,-10,-8,1,5,10,8,-4,2,10,-7,10,-7,1,8,-8,-6,3,7,7,1,-8,5,-8,10,-9,-1,10,-3,-5,3,-3,-4,-4,2,2,3,4,4,4,-10,-10,1,-10,10,-3,-1,-1,5,-5,-9,2,-9,-9,-8,6,4,-10,-7,-9,-8,-8,-1,5,6,-6,-8,-6,-7,-9,-8,3,-2,-8,5,-4,10,-3,2], dtype = "uint16")#candidate|4183|(4860,)|const|uint16
call_4182 = relay.TupleGetItem(func_1317_call(relay.reshape(const_4183.astype('uint16'), [324, 15]), relay.reshape(call_4160.astype('float32'), [9, 9, 4]), ), 3)
call_4184 = relay.TupleGetItem(func_1321_call(relay.reshape(const_4183.astype('uint16'), [324, 15]), relay.reshape(call_4160.astype('float32'), [9, 9, 4]), ), 3)
bop_4187 = relay.greater_equal(const_4165.astype('bool'), var_4163.astype('bool')) # shape=(896,)
func_2367_call = mod.get_global_var('func_2367')
func_2368_call = mutated_mod.get_global_var('func_2368')
call_4207 = func_2367_call()
call_4208 = func_2367_call()
output = relay.Tuple([call_4160,call_4162,var_4164,call_4167,var_4168,call_4182,const_4183,bop_4187,call_4207,])
output2 = relay.Tuple([call_4161,call_4166,var_4164,call_4169,var_4168,call_4184,const_4183,bop_4187,call_4208,])
func_4219 = relay.Function([var_4163,var_4164,var_4168,], output)
mod['func_4219'] = func_4219
mod = relay.transform.InferType()(mod)
var_4220 = relay.var("var_4220", dtype = "int64", shape = ())#candidate|4220|()|var|int64
var_4221 = relay.var("var_4221", dtype = "int64", shape = (56,))#candidate|4221|(56,)|var|int64
var_4222 = relay.var("var_4222", dtype = "int64", shape = (15,))#candidate|4222|(15,)|var|int64
output = func_4219(var_4220,var_4221,var_4222,)
func_4223 = relay.Function([var_4220,var_4221,var_4222,], output)
mutated_mod['func_4223'] = func_4223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3874_call = mod.get_global_var('func_3874')
func_3875_call = mutated_mod.get_global_var('func_3875')
call_4337 = relay.TupleGetItem(func_3874_call(), 0)
call_4338 = relay.TupleGetItem(func_3875_call(), 0)
func_1637_call = mod.get_global_var('func_1637')
func_1638_call = mutated_mod.get_global_var('func_1638')
call_4341 = relay.TupleGetItem(func_1637_call(), 0)
call_4342 = relay.TupleGetItem(func_1638_call(), 0)
var_4343 = relay.var("var_4343", dtype = "float32", shape = (9, 9, 4))#candidate|4343|(9, 9, 4)|var|float32
bop_4344 = relay.bitwise_or(call_4337.astype('int16'), relay.reshape(var_4343.astype('int16'), relay.shape_of(call_4337))) # shape=(9, 9, 4)
bop_4347 = relay.bitwise_or(call_4338.astype('int16'), relay.reshape(var_4343.astype('int16'), relay.shape_of(call_4338))) # shape=(9, 9, 4)
output = relay.Tuple([call_4341,bop_4344,])
output2 = relay.Tuple([call_4342,bop_4347,])
func_4359 = relay.Function([var_4343,], output)
mod['func_4359'] = func_4359
mod = relay.transform.InferType()(mod)
mutated_mod['func_4359'] = func_4359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4360 = relay.var("var_4360", dtype = "float32", shape = (9, 9, 4))#candidate|4360|(9, 9, 4)|var|float32
func_4359_call = mutated_mod.get_global_var('func_4359')
call_4361 = func_4359_call(var_4360)
output = call_4361
func_4362 = relay.Function([var_4360], output)
mutated_mod['func_4362'] = func_4362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1207_call = mod.get_global_var('func_1207')
func_1209_call = mutated_mod.get_global_var('func_1209')
call_4399 = relay.TupleGetItem(func_1207_call(), 0)
call_4400 = relay.TupleGetItem(func_1209_call(), 0)
var_4404 = relay.var("var_4404", dtype = "uint16", shape = (324, 9))#candidate|4404|(324, 9)|var|uint16
bop_4405 = relay.greater_equal(call_4399.astype('bool'), var_4404.astype('bool')) # shape=(324, 9)
bop_4408 = relay.greater_equal(call_4400.astype('bool'), var_4404.astype('bool')) # shape=(324, 9)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_4420 = relay.TupleGetItem(func_1344_call(), 0)
call_4421 = relay.TupleGetItem(func_1345_call(), 0)
output = relay.Tuple([bop_4405,call_4420,])
output2 = relay.Tuple([bop_4408,call_4421,])
func_4422 = relay.Function([var_4404,], output)
mod['func_4422'] = func_4422
mod = relay.transform.InferType()(mod)
var_4423 = relay.var("var_4423", dtype = "uint16", shape = (324, 9))#candidate|4423|(324, 9)|var|uint16
output = func_4422(var_4423)
func_4424 = relay.Function([var_4423], output)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3157_call = mod.get_global_var('func_3157')
func_3159_call = mutated_mod.get_global_var('func_3159')
call_4426 = relay.TupleGetItem(func_3157_call(), 0)
call_4427 = relay.TupleGetItem(func_3159_call(), 0)
func_2075_call = mod.get_global_var('func_2075')
func_2078_call = mutated_mod.get_global_var('func_2078')
const_4430 = relay.const([-1.846157,6.968054,6.142647,6.170492,9.763493,-8.048635,7.350979,-4.516772,-9.243863,-4.578863,-8.032606,-7.502706,8.299620,-0.218574,-7.375200,1.776586,0.185593,-9.373314,9.868725,-7.659812,-2.617292,1.030299,6.615421,9.666994,-1.709469,-1.515357,7.343502,5.962090,-0.161322,3.149993,9.623185,2.056481,8.303969,-3.473694,1.556721,-0.109102,9.668178,-6.587020,3.892307,-5.805852,4.268058,-3.969458,9.784016,5.377400,5.769997,-2.279464,2.659442,1.011935,3.810615,5.253459,-9.121106,3.744228,4.536967,-1.114087,7.111781,-0.819486,-4.752160,0.453619,-0.173965,8.070958,2.665722,0.757133,-2.046941,-5.736323,-9.749189,-8.326783,1.230539,-1.315639,6.325945,3.233496,7.289544,5.209600,-1.798251,2.995403,6.525509,-1.528716,3.768994], dtype = "float64")#candidate|4430|(77,)|const|float64
call_4429 = relay.TupleGetItem(func_2075_call(relay.reshape(const_4430.astype('float64'), [7, 11, 1])), 1)
call_4431 = relay.TupleGetItem(func_2078_call(relay.reshape(const_4430.astype('float64'), [7, 11, 1])), 1)
output = relay.Tuple([call_4426,call_4429,const_4430,])
output2 = relay.Tuple([call_4427,call_4431,const_4430,])
func_4432 = relay.Function([], output)
mod['func_4432'] = func_4432
mod = relay.transform.InferType()(mod)
output = func_4432()
func_4433 = relay.Function([], output)
mutated_mod['func_4433'] = func_4433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_893_call = mod.get_global_var('func_893')
func_894_call = mutated_mod.get_global_var('func_894')
call_4466 = relay.TupleGetItem(func_893_call(), 0)
call_4467 = relay.TupleGetItem(func_894_call(), 0)
func_893_call = mod.get_global_var('func_893')
func_894_call = mutated_mod.get_global_var('func_894')
call_4470 = relay.TupleGetItem(func_893_call(), 0)
call_4471 = relay.TupleGetItem(func_894_call(), 0)
func_4146_call = mod.get_global_var('func_4146')
func_4149_call = mutated_mod.get_global_var('func_4149')
var_4483 = relay.var("var_4483", dtype = "float64", shape = (800,))#candidate|4483|(800,)|var|float64
call_4482 = func_4146_call(relay.reshape(var_4483.astype('float64'), [10, 5, 16]))
call_4484 = func_4146_call(relay.reshape(var_4483.astype('float64'), [10, 5, 16]))
func_4432_call = mod.get_global_var('func_4432')
func_4433_call = mutated_mod.get_global_var('func_4433')
call_4492 = relay.TupleGetItem(func_4432_call(), 2)
call_4493 = relay.TupleGetItem(func_4433_call(), 2)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_4496 = relay.TupleGetItem(func_2675_call(), 1)
call_4497 = relay.TupleGetItem(func_2676_call(), 1)
uop_4498 = relay.log2(var_4483.astype('float64')) # shape=(800,)
output = relay.Tuple([call_4466,call_4470,call_4482,call_4492,call_4496,uop_4498,])
output2 = relay.Tuple([call_4467,call_4471,call_4484,call_4493,call_4497,uop_4498,])
func_4503 = relay.Function([var_4483,], output)
mod['func_4503'] = func_4503
mod = relay.transform.InferType()(mod)
var_4504 = relay.var("var_4504", dtype = "float64", shape = (800,))#candidate|4504|(800,)|var|float64
output = func_4503(var_4504)
func_4505 = relay.Function([var_4504], output)
mutated_mod['func_4505'] = func_4505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_4525 = relay.TupleGetItem(func_3266_call(), 0)
call_4526 = relay.TupleGetItem(func_3267_call(), 0)
func_4066_call = mod.get_global_var('func_4066')
func_4069_call = mutated_mod.get_global_var('func_4069')
var_4531 = relay.var("var_4531", dtype = "bool", shape = (28, 120))#candidate|4531|(28, 120)|var|bool
call_4530 = relay.TupleGetItem(func_4066_call(relay.reshape(var_4531.astype('bool'), [16, 14, 15]), relay.reshape(var_4531.astype('bool'), [16, 14, 15]), ), 2)
call_4532 = relay.TupleGetItem(func_4069_call(relay.reshape(var_4531.astype('bool'), [16, 14, 15]), relay.reshape(var_4531.astype('bool'), [16, 14, 15]), ), 2)
func_4432_call = mod.get_global_var('func_4432')
func_4433_call = mutated_mod.get_global_var('func_4433')
call_4546 = relay.TupleGetItem(func_4432_call(), 0)
call_4547 = relay.TupleGetItem(func_4433_call(), 0)
func_893_call = mod.get_global_var('func_893')
func_894_call = mutated_mod.get_global_var('func_894')
call_4549 = relay.TupleGetItem(func_893_call(), 0)
call_4550 = relay.TupleGetItem(func_894_call(), 0)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_4553 = relay.TupleGetItem(func_1434_call(), 0)
call_4554 = relay.TupleGetItem(func_1435_call(), 0)
var_4555 = relay.var("var_4555", dtype = "float32", shape = (16, 14, 15))#candidate|4555|(16, 14, 15)|var|float32
bop_4556 = relay.not_equal(call_4530.astype('bool'), relay.reshape(var_4555.astype('bool'), relay.shape_of(call_4530))) # shape=(16, 14, 15)
bop_4559 = relay.not_equal(call_4532.astype('bool'), relay.reshape(var_4555.astype('bool'), relay.shape_of(call_4532))) # shape=(16, 14, 15)
func_3482_call = mod.get_global_var('func_3482')
func_3485_call = mutated_mod.get_global_var('func_3485')
var_4574 = relay.var("var_4574", dtype = "int64", shape = (15,))#candidate|4574|(15,)|var|int64
call_4573 = func_3482_call(relay.reshape(var_4574.astype('int64'), [5, 1, 3]))
call_4575 = func_3482_call(relay.reshape(var_4574.astype('int64'), [5, 1, 3]))
output = relay.Tuple([call_4525,var_4531,call_4546,call_4549,call_4553,bop_4556,call_4573,var_4574,])
output2 = relay.Tuple([call_4526,var_4531,call_4547,call_4550,call_4554,bop_4559,call_4575,var_4574,])
func_4577 = relay.Function([var_4531,var_4555,var_4574,], output)
mod['func_4577'] = func_4577
mod = relay.transform.InferType()(mod)
mutated_mod['func_4577'] = func_4577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4577_call = mutated_mod.get_global_var('func_4577')
var_4579 = relay.var("var_4579", dtype = "bool", shape = (28, 120))#candidate|4579|(28, 120)|var|bool
var_4580 = relay.var("var_4580", dtype = "float32", shape = (16, 14, 15))#candidate|4580|(16, 14, 15)|var|float32
var_4581 = relay.var("var_4581", dtype = "int64", shape = (15,))#candidate|4581|(15,)|var|int64
call_4578 = func_4577_call(var_4579,var_4580,var_4581,)
output = call_4578
func_4582 = relay.Function([var_4579,var_4580,var_4581,], output)
mutated_mod['func_4582'] = func_4582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_551_call = mod.get_global_var('func_551')
func_552_call = mutated_mod.get_global_var('func_552')
call_4638 = relay.TupleGetItem(func_551_call(), 1)
call_4639 = relay.TupleGetItem(func_552_call(), 1)
var_4649 = relay.var("var_4649", dtype = "float32", shape = (4, 10, 16))#candidate|4649|(4, 10, 16)|var|float32
bop_4650 = relay.maximum(call_4638.astype('int16'), relay.reshape(var_4649.astype('int16'), relay.shape_of(call_4638))) # shape=(4, 10, 16)
bop_4653 = relay.maximum(call_4639.astype('int16'), relay.reshape(var_4649.astype('int16'), relay.shape_of(call_4639))) # shape=(4, 10, 16)
uop_4681 = relay.erf(call_4638.astype('float32')) # shape=(4, 10, 16)
uop_4683 = relay.erf(call_4639.astype('float32')) # shape=(4, 10, 16)
output = relay.Tuple([bop_4650,uop_4681,])
output2 = relay.Tuple([bop_4653,uop_4683,])
func_4687 = relay.Function([var_4649,], output)
mod['func_4687'] = func_4687
mod = relay.transform.InferType()(mod)
mutated_mod['func_4687'] = func_4687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4688 = relay.var("var_4688", dtype = "float32", shape = (4, 10, 16))#candidate|4688|(4, 10, 16)|var|float32
func_4687_call = mutated_mod.get_global_var('func_4687')
call_4689 = func_4687_call(var_4688)
output = call_4689
func_4690 = relay.Function([var_4688], output)
mutated_mod['func_4690'] = func_4690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_4723 = relay.TupleGetItem(func_1916_call(), 1)
call_4724 = relay.TupleGetItem(func_1918_call(), 1)
output = relay.Tuple([call_4723,])
output2 = relay.Tuple([call_4724,])
func_4732 = relay.Function([], output)
mod['func_4732'] = func_4732
mod = relay.transform.InferType()(mod)
output = func_4732()
func_4733 = relay.Function([], output)
mutated_mod['func_4733'] = func_4733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4114_call = mod.get_global_var('func_4114')
func_4116_call = mutated_mod.get_global_var('func_4116')
call_4742 = relay.TupleGetItem(func_4114_call(), 2)
call_4743 = relay.TupleGetItem(func_4116_call(), 2)
output = relay.Tuple([call_4742,])
output2 = relay.Tuple([call_4743,])
func_4746 = relay.Function([], output)
mod['func_4746'] = func_4746
mod = relay.transform.InferType()(mod)
output = func_4746()
func_4747 = relay.Function([], output)
mutated_mod['func_4747'] = func_4747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4751 = relay.var("var_4751", dtype = "float64", shape = (12, 13, 8))#candidate|4751|(12, 13, 8)|var|float64
uop_4752 = relay.rsqrt(var_4751.astype('float64')) # shape=(12, 13, 8)
uop_4763 = relay.sigmoid(var_4751.astype('float32')) # shape=(12, 13, 8)
bop_4768 = relay.floor_mod(uop_4752.astype('float64'), relay.reshape(uop_4763.astype('float64'), relay.shape_of(uop_4752))) # shape=(12, 13, 8)
func_3482_call = mod.get_global_var('func_3482')
func_3485_call = mutated_mod.get_global_var('func_3485')
var_4777 = relay.var("var_4777", dtype = "int64", shape = (15,))#candidate|4777|(15,)|var|int64
call_4776 = func_3482_call(relay.reshape(var_4777.astype('int64'), [5, 1, 3]))
call_4778 = func_3482_call(relay.reshape(var_4777.astype('int64'), [5, 1, 3]))
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_4779 = relay.TupleGetItem(func_769_call(), 0)
call_4780 = relay.TupleGetItem(func_770_call(), 0)
func_3615_call = mod.get_global_var('func_3615')
func_3619_call = mutated_mod.get_global_var('func_3619')
const_4785 = relay.const([4.971110,-4.207614,-0.498787,7.154062,-4.465973,3.114628,-6.412485,-1.765546,-3.924726,-6.244891,-0.968620,9.251610,-8.127502,8.550600,8.796341,-2.903744,-1.926894,-0.785239,0.229900,2.776352,2.444161,-9.411256,6.231115,-1.223652,3.322971,-7.992992,0.503625,9.271694,1.036398,5.591813,2.958213,-4.357928,2.099738,-5.523363,-4.330603,-9.961935,-0.879503,6.397630,6.407150,0.022081,-5.577504,-9.899365,-9.515655,-0.984907,-6.302876,-3.536665,1.309388,-9.359838,6.658268,5.274654,-8.787408,8.779218,6.069635,5.480819,-7.761892,4.705483,-6.403261,-9.496108,9.151450,-0.988830,7.785749,-5.512293,2.653639,3.606439,7.993716,-3.302786,-3.465770,5.726045,-7.585880,3.583252,8.725314,-8.685885,-9.239507,-2.263534,7.043318,-4.502075,8.146131,0.787111,6.676535,8.575706,-2.532722,-0.034576,3.557220,-1.592700,-5.931629,-9.834284,-9.876082,0.185764,-0.811825,6.263123,6.963854,-3.776865,-8.850512,2.869365,-8.350579,-5.015008,2.280197,2.613045,-6.142706,-6.120360,2.819912,0.834083,2.786954,1.414827,-1.978562,9.261492,-6.929486,6.797225,-4.155347,-6.731426,7.452821,4.196884,2.276995,-2.486683,-7.603930,2.730092,0.065469,5.938268,1.233811,-0.754508,9.809476,8.849231,3.104822,-9.985497,-2.941138,-3.933297,-8.505487,-2.647331,1.363244,1.907803,9.296333,1.030310,1.358073,-0.405609,3.480192,0.949573,-9.557295,-6.017020,8.014230,2.825042,2.367224,1.610594,2.275397,-1.455951,-8.667743,-2.819980,-1.796842,6.990946,3.151150,-6.199124,-9.152783,5.097174,3.109546,2.534029,9.493491,-5.839837,-9.259245,-5.199635,1.204042,-3.527177,-1.988009,4.554679,7.456268,0.082344,-0.472253,1.231489,4.140669,-6.619538,0.639729,0.441405,-3.220053,6.281046,0.815504,4.049170,-7.641969,6.713430,-8.749388,6.765545,9.269288,-5.343709,6.712129,-3.289147,9.392440,7.456354,-3.720172,6.012458,-7.471166,-7.625020,-9.457365,-6.382493,4.282056,0.182692,-7.238914,9.789511,2.545473,-7.695197,-1.530647,2.201582,2.439098,-0.378591,8.518722,-4.162009,-5.813306,-8.025378,-3.844615,-0.346453,-3.795193,-2.128133,-0.860645,-2.954620,5.412016,-1.741257,2.279672,0.819273,-3.646658,8.094449,3.486626,9.309792,-9.471951,-9.287165,-0.991266,-2.471622,4.313639,-3.380480,1.289055,2.802311,9.463976,-9.749857,-9.995628,7.509088,4.528540,-6.977604,-0.371280,-1.605321,3.670822,-6.387084,7.849259,-7.611256,1.092195,0.656415,1.799090,1.200011,-2.229721,-0.361472,-3.475417,-9.378834,-0.973243,-7.703843,-9.191035,3.018619,-5.984015,-6.079076,-4.786248,-9.866019,2.579908,-5.709122,-0.236402,3.072025,2.552515,0.738208,8.978314,4.462574,5.509592,-5.335525,3.665971,9.581017,2.248407,8.915976,5.234797,7.873067,1.337697,9.605498,-8.897278,8.428194,-0.880849,1.304886,-9.385426,5.461127,-3.261846,1.584852,2.275103,8.460754,-1.810141,3.808656,-9.989474,-6.683347,-2.854674,-8.287547,-0.202773,9.345732,-6.908835,-9.801093,9.268693,-6.580541,-8.950330,8.493202,1.189297,-2.494703,-4.685762,9.423036,0.376758,-3.776443,4.942231,-6.825617,-1.193951,3.926523,-1.898184,9.647171,1.548165,9.035508,-6.673957,-0.384827,-0.201992,4.740593,-2.192983,5.268384,4.580462,1.433630,-0.420881,-8.372256,0.718834,-7.066423,-5.160831,-3.808701,8.855654,3.820982,-8.033430,8.014701,-5.071824,6.156190,9.410311,-2.017996,4.879958,-0.593001,3.801840,-2.416811,-5.991987,-4.870289,1.157741,-4.181745,6.677020,-6.264894,4.341435,-7.645227,-4.987873,-2.088031,-0.854250,-8.086814,8.417573,-2.230417,-9.894385,4.878909,7.589283,6.980945,-2.641361,4.347763,9.576177,-7.055918,-4.346776,-4.566152,-8.506987,-5.022654,-7.821064,-6.548707,5.781571,-2.643031,-4.481117,-2.646549,-4.083716,-2.431051,-1.343001,-3.090346,9.272371,-7.150421,5.544917,-2.943013,-0.434375,-1.562729,-3.428796,-6.421055,9.753276,5.612778,-9.809448,4.704894,0.197528,-7.086299,-4.884158,4.170895,0.094441,2.066015,-5.077954,-2.798303,-9.394579,8.567065,-1.470289,8.499665,2.591158,7.151683,-9.107472,-6.418617,-7.249424,1.889085,5.436893,-7.166873,5.771309,5.630452,6.437096,-2.655998,-1.211242,-0.196885,6.344482,1.069449,-3.923320,-6.825695,9.732117,-3.950480,3.193979,-7.662001,-4.088458,6.580273,-5.820445,-0.260639,1.564070,-4.732807,-8.428580,-2.596244,-8.276511,-2.952406,-7.016412,4.508966,5.468945,8.391081,-1.698552,2.731382,-2.891966,-2.932254,8.772503,-7.550027,7.088247,5.664475,-4.272242,5.281524,1.506727,1.426546,-3.106849,9.074289,4.108026,0.425233,8.212054,-2.203954,8.411163,-7.309926,6.670623,6.212898,7.279627,6.879053,-9.299446,-4.369856,-8.855351,9.518694,9.843787,6.763806,9.410349,-0.375634,6.101479,-0.755457,6.255418,-6.087822,-2.526011,6.396182,-6.512115,2.172601,8.944748,-0.548626,6.208231,-2.622873,-2.639038,4.881087,-5.031053,-4.851350,0.496820,7.154114,-0.726675,3.016820,6.177037,-3.920295,5.437396,9.686497,-5.855600,4.565106,8.319160,-7.262537,4.868040,-5.079567,8.297797,4.002555,0.409378,2.073402,-1.387777,-2.030364,8.106171,5.267572,-9.769492,9.164544,-7.869792,3.631183,-2.831745,-2.041615,1.366196,-6.963715,4.554426,0.652552,-3.225260,-2.785071,-3.621122,-5.785899,-7.835131,-4.411183,-4.966117,0.640409,-8.247042,1.708298,-1.288358,-2.745072,-9.638331,-6.332447,2.904519,-5.240886,-0.750685,-5.734706,-2.362660,-7.812833,4.355670,9.679878,-4.575240,-4.927040,9.464353,0.075583,9.643261,-5.371081,-0.769662,-8.052315,-2.633460,6.404441,2.702419,1.476311,1.674911,-3.453542,3.730379,-4.257171,-5.679999,-9.204151,-7.791625,9.830301,-2.253723,0.036455,-2.531854,-7.840580,3.862799,0.031780,1.113309,-7.548466,-1.901813,3.571715,-0.746841,4.592305,5.325790,0.890550,-0.818263,2.214546,-5.175554,7.297042,-4.403460,2.834667,-5.064425,8.014116,-0.822916,-4.922453,-4.495480,-2.563610,5.499762,-5.888466,8.834199,4.984150,-4.177177,-1.822374,5.398432,-3.741609,3.348758,2.492870,-7.869831,-5.393241,-7.824600,-4.123825,-3.311585,-4.614051,-7.503303,-3.305899,-7.538372,1.272222,7.175156,9.057577,-4.851607,-6.379379,5.433544,4.533823,-3.264696,-8.183668,-8.854851,-5.392495,9.651517,-7.579001,2.470264,-4.109459,-2.885524,-9.617922,1.384921,2.368651,7.706733,-4.024079,5.532832,4.211292,8.088061,1.074931,-7.276680,-1.622207,-3.762209,4.371963,-3.655697,3.645339,-9.019559,-5.726639,1.762141,7.770575,3.076311,2.914271,2.432154,0.015223,9.640563,-8.100160,-0.183515,5.473656,0.051173,-3.072324,-7.546528,4.395857,9.679523,3.218210,3.427904,-0.966614,-3.114177,7.597671,-0.423963,-6.821717,4.784784,5.628993,3.324089,-2.612797,6.493096,-7.827530,-6.053376,-3.232895,8.250935,-5.872860,-8.834126,-6.912630,1.692804,-3.215744,-2.968310,8.845303,3.248037,6.110112,0.169959,-2.608668,-1.184972,1.191666,-6.562867,-0.680754,1.329691,-1.048156,5.467812,-1.345136,-3.590521,-7.478516,8.290859,6.591253,-2.485283,0.100964,-5.362425,7.162848,8.422059,-9.905492,-7.815520,6.867633,9.109830,-8.556007,-1.379031,7.196228,4.438001,8.831529,7.771038,-2.687439,7.777423,-6.766933,5.254352,-4.940982,-3.807490,-5.672562,-4.194885,-8.887723,2.801271,-9.608986,1.554292,-2.386932,-9.099796,2.866905,-6.775058,6.010729,9.327153,-2.671658,2.921644,4.734773,8.186440,9.687876,-4.011671,0.321496,-2.541632,4.214992,-5.138443,-7.469691,-3.502888,-4.943808,8.253758,-3.707192,3.883108,4.133799,-8.113507,-4.090394,-4.519980,1.580031,9.848723,-2.169520,-7.347131,2.437174,-7.030608,0.627489,2.651780,6.787372,-4.868338,-8.257881,-8.440689,-4.552555,-7.695793,-1.725923,-7.694414,6.073209,1.691938,9.242842,-9.255766,-1.429123,7.943898,4.905351,5.998845,1.654752,-4.283989,-1.044126,-8.932959,1.935378,9.984306,6.432525,9.518850,-8.096868,9.207633,1.245596,-2.099558,-8.988233,1.514614,3.674396,-4.535453,-1.758951,-0.465586,-4.244252,-8.394927,6.103867,6.618005,2.372774,-8.090841,8.615376,-6.539657,7.707510,-7.850866,-5.286056,9.522571,2.705940,-6.846836,-0.963249,-4.243393,4.482289,7.469061,-2.790369,-7.695078,6.767729,6.090161,-9.547771,5.807826,7.698153,1.956359,-5.790763,1.840509,-0.719163,0.199321,-7.751361,9.591282,-6.192272,-2.811536,-5.980251,8.785840,5.652932,-0.878507,-4.264075,7.906508,-7.672239,6.354973,7.481505,-3.557129,-1.617974,8.170174,4.809241,7.158251,6.238617,-9.238502,-6.842367,3.372929,7.326968,4.961417,-8.722504,6.888070,9.354341,5.149396,9.370676,-3.368236,7.530608,-9.436136,5.802463,3.891490,1.824334,-8.447799,4.190063,-2.752608,5.095622,-0.362934,-2.810299,-9.035829,-1.101291,9.091630,1.865938,3.085916,8.526137,1.456857,3.313447,5.230755,6.054311,-2.287479,0.110693,9.829901,-1.190822,-5.646677,6.206700,-9.131677,-4.077200,6.527310,-3.424770,0.818698,-7.697699,-6.129987,7.964488,-6.930181,9.023491,3.882117,1.255582,6.584272,-4.521906,3.441741,3.557675,1.052578,3.446760,2.328391,2.842699,1.443662,-6.415448,-5.027989,8.243389,-6.620845,5.147051,5.992122,-6.109535,9.706321,8.606702,-3.946165,-5.647764,-6.831195,-0.167005,0.732387,-4.867898,0.548795,-7.503376,-6.306519,-6.815787,-5.777627,-3.134951,5.695107,0.665789,6.719229,2.859021,2.911478,2.457384,0.199629,1.570585,-3.692298,6.982400,-7.488409,0.090541,9.561755,5.464398,5.146918,2.497427,-3.297844,2.961000,3.771914,1.757122,0.247040,5.700872,-8.403734,7.981786,-6.442106,-2.955596,1.753560,-6.764879,-1.470183,-8.672580,9.272014,-6.313731,-3.548317,-5.421705,-8.343861,-6.366751,-2.388882,-4.555725,3.114554,8.448950,-8.992676,-4.344035,0.272802,-5.493095,7.051985,-2.054378,-0.200857,-0.897090,-7.218689,7.071139,8.575203,-1.238492,5.501944,-3.437703,3.593647,-7.773847,-9.715567,2.838657,8.438413,2.564408,-6.675329,-8.558288,-4.715923,-9.316195,4.852465,7.607092,7.074541,-3.887863,-0.837608,9.585265,4.964456,6.894957,9.603706,9.148958,-2.613813,6.852472,-0.296041,0.185516,-8.950631,-6.885143,2.051619,-5.425118,2.893686,2.478451,-8.314192,6.283168,3.422105,5.946634,4.030118,0.405081,7.711400,6.242875,-5.633046,-0.430479,-2.146155,-3.256393,-2.603477,-5.916957,-1.644497,8.302801,0.528450,-3.716642,6.177705,9.775699,-6.126230,-0.755978,7.655121,-7.689794,-8.526636,-4.099055,8.218292,5.149289,-5.309089,7.976073,3.490515,5.213033,-8.326814,5.250469,1.202775,-4.408347,-9.733068,5.062228,-1.841434,6.842327,-5.891108,9.759275,4.533485,7.989930,2.266931,-6.718829], dtype = "float64")#candidate|4785|(1040,)|const|float64
call_4784 = relay.TupleGetItem(func_3615_call(relay.reshape(const_4785.astype('float64'), [1040,]), relay.reshape(const_4785.astype('float64'), [10, 8, 13]), ), 5)
call_4786 = relay.TupleGetItem(func_3619_call(relay.reshape(const_4785.astype('float64'), [1040,]), relay.reshape(const_4785.astype('float64'), [10, 8, 13]), ), 5)
output = relay.Tuple([bop_4768,call_4776,var_4777,call_4779,call_4784,const_4785,])
output2 = relay.Tuple([bop_4768,call_4778,var_4777,call_4780,call_4786,const_4785,])
func_4788 = relay.Function([var_4751,var_4777,], output)
mod['func_4788'] = func_4788
mod = relay.transform.InferType()(mod)
mutated_mod['func_4788'] = func_4788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4788_call = mutated_mod.get_global_var('func_4788')
var_4790 = relay.var("var_4790", dtype = "float64", shape = (12, 13, 8))#candidate|4790|(12, 13, 8)|var|float64
var_4791 = relay.var("var_4791", dtype = "int64", shape = (15,))#candidate|4791|(15,)|var|int64
call_4789 = func_4788_call(var_4790,var_4791,)
output = call_4789
func_4792 = relay.Function([var_4790,var_4791,], output)
mutated_mod['func_4792'] = func_4792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_4809 = relay.TupleGetItem(func_3266_call(), 0)
call_4810 = relay.TupleGetItem(func_3267_call(), 0)
output = call_4809
output2 = call_4810
func_4827 = relay.Function([], output)
mod['func_4827'] = func_4827
mod = relay.transform.InferType()(mod)
output = func_4827()
func_4828 = relay.Function([], output)
mutated_mod['func_4828'] = func_4828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_551_call = mod.get_global_var('func_551')
func_552_call = mutated_mod.get_global_var('func_552')
call_4846 = relay.TupleGetItem(func_551_call(), 0)
call_4847 = relay.TupleGetItem(func_552_call(), 0)
func_2075_call = mod.get_global_var('func_2075')
func_2078_call = mutated_mod.get_global_var('func_2078')
const_4854 = relay.const([-8.861978,7.025304,9.510565,-4.306127,-5.678837,-4.901790,-6.478300,2.540544,0.025844,5.180862,0.193816,3.501350,5.018816,-4.764775,-2.435250,5.148257,7.072988,-5.998750,3.684296,-0.542466,7.315664,7.838380,6.076018,-6.163458,1.758236,8.297468,5.732846,3.688134,5.260916,5.009315,-5.593123,-3.676873,-5.331355,-8.495130,1.528690,7.273042,1.376198,-2.339918,-8.672145,2.882557,3.964653,-6.490756,8.261468,3.422175,9.163666,7.954792,3.305536,3.451148,-2.019308,-4.963742,-9.212100,-9.157777,-5.452417,-3.191314,-4.566192,2.798227,-3.952749,-6.273632,4.278624,-3.458677,9.051021,-3.525680,0.426734,-3.720304,3.740096,-5.861814,-7.146936,9.298495,5.904002,0.053167,-9.557523,5.682800,-0.680340,-6.360824,-4.163719,-6.739518,-9.123867], dtype = "float64")#candidate|4854|(77,)|const|float64
call_4853 = relay.TupleGetItem(func_2075_call(relay.reshape(const_4854.astype('float64'), [7, 11, 1])), 4)
call_4855 = relay.TupleGetItem(func_2078_call(relay.reshape(const_4854.astype('float64'), [7, 11, 1])), 4)
uop_4859 = relay.sigmoid(const_4854.astype('float64')) # shape=(77,)
func_2454_call = mod.get_global_var('func_2454')
func_2455_call = mutated_mod.get_global_var('func_2455')
call_4872 = relay.TupleGetItem(func_2454_call(), 0)
call_4873 = relay.TupleGetItem(func_2455_call(), 0)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_4876 = relay.TupleGetItem(func_445_call(), 2)
call_4877 = relay.TupleGetItem(func_446_call(), 2)
func_3777_call = mod.get_global_var('func_3777')
func_3779_call = mutated_mod.get_global_var('func_3779')
call_4879 = relay.TupleGetItem(func_3777_call(), 0)
call_4880 = relay.TupleGetItem(func_3779_call(), 0)
uop_4901 = relay.atan(uop_4859.astype('float64')) # shape=(77,)
var_4903 = relay.var("var_4903", dtype = "float32", shape = (324, 12))#candidate|4903|(324, 12)|var|float32
bop_4904 = relay.divide(call_4872.astype('float32'), var_4903.astype('float32')) # shape=(324, 12)
bop_4907 = relay.divide(call_4873.astype('float32'), var_4903.astype('float32')) # shape=(324, 12)
func_2814_call = mod.get_global_var('func_2814')
func_2815_call = mutated_mod.get_global_var('func_2815')
call_4908 = func_2814_call()
call_4909 = func_2814_call()
func_2894_call = mod.get_global_var('func_2894')
func_2898_call = mutated_mod.get_global_var('func_2898')
var_4915 = relay.var("var_4915", dtype = "int8", shape = (1452,))#candidate|4915|(1452,)|var|int8
const_4916 = relay.const([[-7.240018,-6.792330],[-4.849358,-9.363511],[-2.585075,-8.896892],[8.686519,-2.237365],[2.311231,-0.135238],[-5.831150,5.271274],[-2.124702,-6.831911],[-4.437141,-1.612410],[-7.741458,-7.684088],[-3.364912,6.580796],[-1.351798,-1.455227],[6.224609,-1.076378],[5.201428,2.410351],[3.193001,-9.950480],[9.472014,-2.677801],[-9.461919,-2.050140],[-6.684815,-7.979134],[-1.004847,9.216778],[6.394068,-7.088311],[-7.211450,-8.490174],[-1.759358,-8.369924],[-2.854109,0.383438],[5.434038,-3.152074],[1.536026,0.397483],[5.966806,-1.518686],[9.318468,5.427559],[-1.723860,5.076414],[-6.103103,-1.440806],[-8.404105,-6.641019],[0.083070,-1.668059],[-9.346529,9.532288],[-8.613214,2.201028],[-6.331204,4.711058],[3.522538,-5.635631],[-8.796655,4.456997],[9.495748,5.855554],[-0.840450,1.236671],[-9.461451,-0.961517],[-2.701349,-3.467791],[-5.838356,-8.823580],[4.443945,1.559978],[-1.961410,-6.716668],[4.590101,6.888120],[-2.876983,-1.058131],[7.511063,-8.983952],[-3.009954,-9.420493],[-7.348914,0.429677],[-0.754920,8.620592],[8.784843,-3.272836],[8.014069,-5.983414],[-7.648436,3.304632],[1.573132,2.503604],[4.686536,-0.715643],[1.894594,-6.633725],[4.696919,-4.760994],[-4.102446,7.420935],[-6.949710,2.616483],[2.502181,8.319691],[-5.248998,-7.808004],[-9.882878,-1.988693],[4.221484,1.425674],[6.048783,6.688328],[2.803111,-3.510301],[2.382425,6.653549],[4.107256,1.402209],[0.646384,2.869667],[-9.289217,8.440450],[1.688439,-1.580201],[-9.280499,0.840864],[-1.640852,-3.343079],[0.254620,1.673500],[-9.835666,-7.829549],[6.497776,-6.223796],[-7.332027,-5.975431],[4.500040,-9.955332],[2.520778,-7.764910],[-1.346721,6.658223],[-0.275825,2.064471],[-5.956928,-6.802491],[2.944614,7.788107],[0.280765,1.356508],[4.480942,-9.683628],[6.566184,4.724497],[4.079750,-1.144075],[-5.744381,-1.337772],[4.946600,-1.470253],[-1.901075,5.095854],[1.858122,3.010287],[-4.505541,7.810287],[-7.764400,9.529304],[-7.646599,1.721096],[-8.252384,7.551460],[7.002687,2.629919],[5.027264,0.268986],[-6.457923,-0.441098],[5.292249,-7.829211],[-5.596239,4.750672],[6.976442,3.975852],[6.519105,-2.637079],[-4.870895,-1.469497],[6.964425,7.796403],[9.692650,6.308175],[5.049833,-0.115034],[9.901375,-9.966883],[-7.043870,-7.394790],[-0.930263,6.095757],[-2.521383,4.197593],[3.310010,5.531407],[1.390348,-3.465715],[0.010443,0.143802],[5.580537,3.540942],[-4.987375,-4.027320],[9.022793,9.133286],[-5.950307,8.763987],[-9.747814,-6.419892],[7.915831,-4.396202],[-6.110537,7.299559],[-2.752679,-6.104759],[-2.922479,-9.598100],[8.584166,1.989681],[-5.614390,0.892960],[0.734160,6.537973],[1.104947,-5.601996],[4.034058,-7.272041],[8.837664,7.858475],[-8.328198,6.010104],[6.181059,0.985847],[-5.267349,8.659890],[0.809384,-4.713733],[-0.427022,-4.374289],[5.769133,-9.359642],[-8.309061,-3.081874],[-1.549201,7.647305],[5.436715,-5.661227],[7.193222,5.597272],[-1.176912,-4.220866],[4.117364,7.798447],[-6.422086,-9.201548],[-5.971013,4.838499],[6.259037,-8.111448],[8.129082,-2.440206],[-5.529310,-4.492705],[-3.796661,8.290637],[-1.034894,8.028911],[-4.272224,2.105338],[-6.057855,-7.306124],[-4.918736,8.323432],[5.417495,-4.329057],[-5.654591,6.963513],[3.808267,-9.725277],[-6.425655,-9.682460],[0.247515,-1.067163],[-5.863829,-6.528340],[9.730993,5.571858],[-0.554447,6.725215],[-7.769457,6.707608],[-4.917913,9.886560],[-0.413682,-2.763045],[-0.711497,5.190196],[-7.961791,0.574721],[-4.974049,4.883107],[7.944277,7.326175],[-5.736901,9.478706],[-1.889148,3.677465],[-6.507131,-0.273097],[-9.221440,4.291649],[-8.489021,-9.429894],[-0.358964,2.087069],[0.993468,1.662758],[-4.550410,2.927518],[9.739528,5.951886],[1.183114,0.778963],[-9.126093,-5.891069],[-5.705605,3.210868],[-3.917985,1.462744],[8.284725,7.349220],[4.322819,3.479423],[-9.864805,-4.806698],[-3.450494,9.073471],[-7.061102,9.587681],[9.065630,3.308789],[6.347464,-3.294479],[-0.822810,-1.167538],[-6.538516,3.283038],[-9.811464,3.091954],[0.751980,1.766736],[-7.317098,5.273520],[6.683207,6.862574],[-8.827451,-2.551154],[6.911832,9.106571],[-0.204131,4.273899],[-2.956361,-4.284028],[-4.483738,4.655981],[-6.194308,0.987138],[3.947726,4.929594],[6.062762,2.740469],[-4.887241,9.695528],[-3.862260,2.020741]], dtype = "float32")#candidate|4916|(198, 2)|const|float32
call_4914 = relay.TupleGetItem(func_2894_call(relay.reshape(var_4915.astype('int8'), [11, 11, 12]), relay.reshape(const_4916.astype('float32'), [396,]), relay.reshape(const_4916.astype('float32'), [396,]), ), 2)
call_4917 = relay.TupleGetItem(func_2898_call(relay.reshape(var_4915.astype('int8'), [11, 11, 12]), relay.reshape(const_4916.astype('float32'), [396,]), relay.reshape(const_4916.astype('float32'), [396,]), ), 2)
uop_4926 = relay.acos(uop_4901.astype('float32')) # shape=(77,)
bop_4938 = relay.multiply(uop_4901.astype('int8'), call_4876.astype('int8')) # shape=(324, 77)
bop_4941 = relay.multiply(uop_4901.astype('int8'), call_4877.astype('int8')) # shape=(324, 77)
output = relay.Tuple([call_4846,call_4853,call_4879,bop_4904,call_4908,call_4914,var_4915,const_4916,uop_4926,bop_4938,])
output2 = relay.Tuple([call_4847,call_4855,call_4880,bop_4907,call_4909,call_4917,var_4915,const_4916,uop_4926,bop_4941,])
func_4944 = relay.Function([var_4903,var_4915,], output)
mod['func_4944'] = func_4944
mod = relay.transform.InferType()(mod)
var_4945 = relay.var("var_4945", dtype = "float32", shape = (324, 12))#candidate|4945|(324, 12)|var|float32
var_4946 = relay.var("var_4946", dtype = "int8", shape = (1452,))#candidate|4946|(1452,)|var|int8
output = func_4944(var_4945,var_4946,)
func_4947 = relay.Function([var_4945,var_4946,], output)
mutated_mod['func_4947'] = func_4947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_893_call = mod.get_global_var('func_893')
func_894_call = mutated_mod.get_global_var('func_894')
call_4986 = relay.TupleGetItem(func_893_call(), 0)
call_4987 = relay.TupleGetItem(func_894_call(), 0)
output = call_4986
output2 = call_4987
func_4988 = relay.Function([], output)
mod['func_4988'] = func_4988
mod = relay.transform.InferType()(mod)
mutated_mod['func_4988'] = func_4988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4988_call = mutated_mod.get_global_var('func_4988')
call_4989 = func_4988_call()
output = call_4989
func_4990 = relay.Function([], output)
mutated_mod['func_4990'] = func_4990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_5005 = relay.TupleGetItem(func_3266_call(), 0)
call_5006 = relay.TupleGetItem(func_3267_call(), 0)
var_5009 = relay.var("var_5009", dtype = "float32", shape = (4, 10, 16))#candidate|5009|(4, 10, 16)|var|float32
bop_5010 = relay.divide(call_5005.astype('float64'), relay.reshape(var_5009.astype('float64'), relay.shape_of(call_5005))) # shape=(4, 10, 16)
bop_5013 = relay.divide(call_5006.astype('float64'), relay.reshape(var_5009.astype('float64'), relay.shape_of(call_5006))) # shape=(4, 10, 16)
output = bop_5010
output2 = bop_5013
func_5024 = relay.Function([var_5009,], output)
mod['func_5024'] = func_5024
mod = relay.transform.InferType()(mod)
var_5025 = relay.var("var_5025", dtype = "float32", shape = (4, 10, 16))#candidate|5025|(4, 10, 16)|var|float32
output = func_5024(var_5025)
func_5026 = relay.Function([var_5025], output)
mutated_mod['func_5026'] = func_5026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2512_call = mod.get_global_var('func_2512')
func_2514_call = mutated_mod.get_global_var('func_2514')
call_5038 = relay.TupleGetItem(func_2512_call(), 1)
call_5039 = relay.TupleGetItem(func_2514_call(), 1)
output = call_5038
output2 = call_5039
func_5042 = relay.Function([], output)
mod['func_5042'] = func_5042
mod = relay.transform.InferType()(mod)
mutated_mod['func_5042'] = func_5042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5042_call = mutated_mod.get_global_var('func_5042')
call_5043 = func_5042_call()
output = call_5043
func_5044 = relay.Function([], output)
mutated_mod['func_5044'] = func_5044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_445_call = mod.get_global_var('func_445')
func_446_call = mutated_mod.get_global_var('func_446')
call_5048 = relay.TupleGetItem(func_445_call(), 2)
call_5049 = relay.TupleGetItem(func_446_call(), 2)
output = relay.Tuple([call_5048,])
output2 = relay.Tuple([call_5049,])
func_5057 = relay.Function([], output)
mod['func_5057'] = func_5057
mod = relay.transform.InferType()(mod)
output = func_5057()
func_5058 = relay.Function([], output)
mutated_mod['func_5058'] = func_5058
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5065 = relay.const([[[-1.689138,-4.867064,0.546649,-2.822109,-5.978598,6.749441,3.370472,-5.639875,2.680239,-4.601308,1.008790,2.539961,0.451139],[-9.247286,6.398621,9.093258,-1.274359,-1.238639,-3.087308,0.168528,1.559506,-3.082725,3.591316,9.360785,8.790553,-6.406136],[-1.346623,9.381268,7.628901,3.010170,4.784695,-2.945501,-8.444229,-5.669065,9.942775,2.793724,-5.872100,7.484118,-6.987343],[7.272825,3.326470,1.035652,6.214363,0.502772,-5.143792,-5.988012,8.478004,9.729867,6.758413,-6.230053,4.293089,-0.616050],[8.327409,-2.393536,-2.695028,4.073974,0.522480,6.636110,-2.598463,9.288883,5.829285,-6.364356,-1.065509,5.922446,7.414659],[-6.730533,2.975976,5.447084,4.293105,3.580501,6.353639,7.184244,2.908462,7.675325,4.749626,-3.016390,-2.181338,-2.835265],[4.212478,3.214999,7.438263,6.884099,-8.153319,-2.562035,-0.481070,3.710633,-3.008883,-2.446947,0.943759,7.527389,-6.791371],[-1.052262,8.545756,8.438707,-0.427891,6.010969,8.631857,-9.962821,8.938324,4.274831,-6.983041,4.732978,7.698983,-7.386142],[-8.928706,3.329379,-4.172258,9.310749,-9.071976,-4.595343,1.558812,9.299425,-1.437388,-1.531578,-9.526521,-4.065444,-5.461850],[3.364981,5.105725,6.090662,-4.729593,3.889339,-2.982152,-5.602703,4.608439,7.668493,-0.141809,5.262773,-9.159011,5.848226],[7.838185,-7.985587,9.424489,6.445120,3.285847,-6.956510,-1.529573,-1.267150,8.441880,0.661793,1.150362,6.452628,9.866034],[7.128878,0.629760,-9.834905,-3.405261,-8.939221,1.321058,-7.330168,-1.305894,-9.141252,-7.852384,1.130422,2.925965,1.255440],[1.710450,-2.182573,5.125996,1.681516,-4.050474,-4.854002,-1.436668,1.816874,-1.015896,-7.543888,-2.449142,6.475001,-5.708007],[-7.564614,-6.248145,-8.796016,8.782843,-8.007067,-0.388939,5.254209,-4.729026,7.487204,-3.393072,-2.424861,0.271214,-3.744847]],[[0.551225,-1.984641,-3.956068,9.785059,-6.719286,3.671545,-5.007453,9.991324,5.699277,-7.849006,-0.459897,-7.565181,-3.550274],[8.463614,6.834315,9.073682,-4.441425,-4.860447,7.202890,4.393062,-1.058203,3.546591,-4.685722,9.749583,1.755705,7.568931],[-9.938780,-3.662050,-4.603126,-8.850709,5.815076,-9.933238,8.621720,2.367301,-6.974868,1.044343,5.356055,-7.552272,0.949736],[8.069514,4.024155,-4.898363,-2.880079,-5.606555,-3.856682,-8.422320,-6.451870,7.639705,-7.880904,-0.771473,1.446348,3.998886],[-1.306273,0.141525,3.432996,-1.359110,9.262330,-0.407094,-6.110260,4.833315,1.395302,-3.171431,-1.798473,-9.938213,-0.186514],[-5.846770,-5.424523,-0.310229,3.321712,-5.370262,-7.020954,0.955603,1.680292,2.042947,-4.891218,-9.637682,5.507468,3.036717],[5.285117,-7.606657,0.869159,1.272529,-2.454315,-1.166386,5.570715,-5.051232,-4.451801,-9.678134,-0.475545,3.373363,-0.235367],[-3.484525,-2.372970,4.894857,3.280080,-7.549910,-4.397602,-5.764886,6.243895,-3.040597,2.737109,5.859330,-6.199593,4.496975],[0.735710,8.005770,7.976106,3.557792,-5.756165,4.827518,-4.698715,-4.886128,1.259905,6.496896,4.289754,-2.092971,4.535434],[-5.836945,7.866859,-7.418927,-3.907723,-3.570724,4.529123,-6.931756,-7.676429,-3.791606,6.988284,-2.077666,6.272013,1.339586],[7.793262,-0.170536,1.584823,5.057832,-3.842959,-9.704421,9.470662,-9.353290,-1.615456,-0.876761,-2.574470,-9.051505,2.817124],[1.759108,-0.674815,-1.032345,-0.400155,-8.966517,2.991289,-9.270763,5.399088,7.076406,8.085339,-7.201953,-8.023296,-7.311363],[6.529147,-6.986637,4.497202,4.831733,-5.177277,-5.570679,-1.708047,5.624476,-1.130105,-9.144870,-4.591769,-2.564100,5.019105],[1.905460,-4.522697,8.922995,-5.612197,-2.180878,4.927964,-3.756378,6.738633,-8.531482,0.875906,-0.612715,4.563206,-0.863990]],[[-0.307209,8.964705,1.745423,9.881606,-6.172777,3.750286,-4.881834,0.603386,7.978466,5.153168,-6.146643,7.867365,0.645525],[4.036392,-2.783847,-9.395810,-6.403023,-8.578647,3.813954,4.225097,-3.634002,-8.805001,7.931056,-3.068913,8.254432,9.036795],[5.545373,-6.693046,-7.807669,1.413392,8.506821,5.427933,2.886226,6.292139,9.686672,2.951309,6.676254,-7.897373,8.540779],[5.078611,6.882537,-6.426095,9.748082,2.243558,-9.221268,-9.258251,0.027979,2.152267,-5.373123,6.582937,-7.627725,1.180366],[-3.863945,-3.124871,8.161142,6.337251,-8.362723,9.828253,-9.879345,-0.275433,-7.796564,-9.714911,-3.428776,-8.490123,-9.815051],[7.034074,-2.288445,-9.901738,-4.728919,-4.400425,-4.635508,-0.189700,1.936359,6.292201,2.161534,-0.449180,-4.557039,2.794281],[4.914435,2.484845,3.612749,-5.764455,-3.501129,-4.083438,8.476516,-5.310330,-8.563159,-0.412437,-5.348612,1.586110,9.265345],[3.988268,-6.082515,9.282432,4.407253,5.318935,7.139181,-4.338396,-1.024240,-9.028625,-8.456910,-8.116415,-9.473005,-1.561759],[-7.423523,-7.338994,-7.789423,4.167170,-6.653282,-7.708958,-6.878713,-5.576216,5.028018,3.909393,9.981378,9.880972,-8.476606],[3.294826,-9.260996,1.489696,4.452071,6.975372,-9.476867,8.173081,2.302825,-2.541083,6.528403,2.332218,4.057447,9.366669],[-1.257288,-3.288687,-1.195949,5.460364,-0.045012,6.907488,-0.078316,4.562240,9.841183,8.416650,-1.757434,-9.244299,-3.269172],[-4.594733,-7.782521,8.495432,-6.539343,0.153218,8.815705,4.469398,-7.108352,3.487304,5.795476,2.199782,3.948747,8.638189],[-1.933601,-0.209498,6.422062,-9.149862,-2.632463,7.743194,-9.655746,7.395821,5.192812,3.773394,7.874186,0.606563,8.101233],[9.999605,1.471328,-9.703154,2.885845,8.058963,2.708748,-0.141137,6.122937,-1.681453,5.736237,8.773472,-8.760509,-4.498065]]], dtype = "float64")#candidate|5065|(3, 14, 13)|const|float64
uop_5066 = relay.sigmoid(const_5065.astype('float64')) # shape=(3, 14, 13)
func_5057_call = mod.get_global_var('func_5057')
func_5058_call = mutated_mod.get_global_var('func_5058')
call_5070 = relay.TupleGetItem(func_5057_call(), 0)
call_5071 = relay.TupleGetItem(func_5058_call(), 0)
output = relay.Tuple([uop_5066,call_5070,])
output2 = relay.Tuple([uop_5066,call_5071,])
func_5076 = relay.Function([], output)
mod['func_5076'] = func_5076
mod = relay.transform.InferType()(mod)
output = func_5076()
func_5077 = relay.Function([], output)
mutated_mod['func_5077'] = func_5077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5057_call = mod.get_global_var('func_5057')
func_5058_call = mutated_mod.get_global_var('func_5058')
call_5130 = relay.TupleGetItem(func_5057_call(), 0)
call_5131 = relay.TupleGetItem(func_5058_call(), 0)
uop_5132 = relay.erf(call_5130.astype('float32')) # shape=(324, 1)
uop_5134 = relay.erf(call_5131.astype('float32')) # shape=(324, 1)
func_4503_call = mod.get_global_var('func_4503')
func_4505_call = mutated_mod.get_global_var('func_4505')
var_5137 = relay.var("var_5137", dtype = "float64", shape = (800,))#candidate|5137|(800,)|var|float64
call_5136 = relay.TupleGetItem(func_4503_call(relay.reshape(var_5137.astype('float64'), [800,])), 1)
call_5138 = relay.TupleGetItem(func_4505_call(relay.reshape(var_5137.astype('float64'), [800,])), 1)
output = relay.Tuple([uop_5132,call_5136,var_5137,])
output2 = relay.Tuple([uop_5134,call_5138,var_5137,])
func_5139 = relay.Function([var_5137,], output)
mod['func_5139'] = func_5139
mod = relay.transform.InferType()(mod)
var_5140 = relay.var("var_5140", dtype = "float64", shape = (800,))#candidate|5140|(800,)|var|float64
output = func_5139(var_5140)
func_5141 = relay.Function([var_5140], output)
mutated_mod['func_5141'] = func_5141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_5154 = relay.TupleGetItem(func_1344_call(), 0)
call_5155 = relay.TupleGetItem(func_1345_call(), 0)
uop_5161 = relay.log10(call_5154.astype('float32')) # shape=(324, 1)
uop_5163 = relay.log10(call_5155.astype('float32')) # shape=(324, 1)
func_4066_call = mod.get_global_var('func_4066')
func_4069_call = mutated_mod.get_global_var('func_4069')
var_5171 = relay.var("var_5171", dtype = "bool", shape = (3360,))#candidate|5171|(3360,)|var|bool
call_5170 = relay.TupleGetItem(func_4066_call(relay.reshape(var_5171.astype('bool'), [16, 14, 15]), relay.reshape(var_5171.astype('bool'), [16, 14, 15]), ), 0)
call_5172 = relay.TupleGetItem(func_4069_call(relay.reshape(var_5171.astype('bool'), [16, 14, 15]), relay.reshape(var_5171.astype('bool'), [16, 14, 15]), ), 0)
func_3515_call = mod.get_global_var('func_3515')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_5174 = func_3515_call()
call_5175 = func_3515_call()
bop_5178 = relay.subtract(var_5171.astype('int16'), uop_5161.astype('int16')) # shape=(324, 3360)
bop_5181 = relay.subtract(var_5171.astype('int16'), uop_5163.astype('int16')) # shape=(324, 3360)
bop_5191 = relay.bitwise_and(bop_5178.astype('uint16'), var_5171.astype('uint16')) # shape=(324, 3360)
bop_5194 = relay.bitwise_and(bop_5181.astype('uint16'), var_5171.astype('uint16')) # shape=(324, 3360)
var_5211 = relay.var("var_5211", dtype = "float32", shape = (324, 11))#candidate|5211|(324, 11)|var|float32
bop_5212 = relay.less_equal(uop_5161.astype('bool'), var_5211.astype('bool')) # shape=(324, 11)
bop_5215 = relay.less_equal(uop_5163.astype('bool'), var_5211.astype('bool')) # shape=(324, 11)
output = relay.Tuple([call_5170,call_5174,bop_5191,bop_5212,])
output2 = relay.Tuple([call_5172,call_5175,bop_5194,bop_5215,])
func_5218 = relay.Function([var_5171,var_5211,], output)
mod['func_5218'] = func_5218
mod = relay.transform.InferType()(mod)
var_5219 = relay.var("var_5219", dtype = "bool", shape = (3360,))#candidate|5219|(3360,)|var|bool
var_5220 = relay.var("var_5220", dtype = "float32", shape = (324, 11))#candidate|5220|(324, 11)|var|float32
output = func_5218(var_5219,var_5220,)
func_5221 = relay.Function([var_5219,var_5220,], output)
mutated_mod['func_5221'] = func_5221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4732_call = mod.get_global_var('func_4732')
func_4733_call = mutated_mod.get_global_var('func_4733')
call_5223 = relay.TupleGetItem(func_4732_call(), 0)
call_5224 = relay.TupleGetItem(func_4733_call(), 0)
uop_5230 = relay.sigmoid(call_5223.astype('float64')) # shape=(324, 1)
uop_5232 = relay.sigmoid(call_5224.astype('float64')) # shape=(324, 1)
uop_5236 = relay.acosh(uop_5230.astype('float32')) # shape=(324, 1)
uop_5238 = relay.acosh(uop_5232.astype('float32')) # shape=(324, 1)
uop_5250 = relay.sqrt(uop_5236.astype('float32')) # shape=(324, 1)
uop_5252 = relay.sqrt(uop_5238.astype('float32')) # shape=(324, 1)
bop_5253 = relay.mod(uop_5236.astype('float64'), relay.reshape(call_5223.astype('float64'), relay.shape_of(uop_5236))) # shape=(324, 1)
bop_5256 = relay.mod(uop_5238.astype('float64'), relay.reshape(call_5224.astype('float64'), relay.shape_of(uop_5238))) # shape=(324, 1)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_5260 = relay.TupleGetItem(func_769_call(), 0)
call_5261 = relay.TupleGetItem(func_770_call(), 0)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_5269 = relay.TupleGetItem(func_2675_call(), 1)
call_5270 = relay.TupleGetItem(func_2676_call(), 1)
bop_5283 = relay.less(bop_5253.astype('bool'), relay.reshape(call_5223.astype('bool'), relay.shape_of(bop_5253))) # shape=(324, 1)
bop_5286 = relay.less(bop_5256.astype('bool'), relay.reshape(call_5224.astype('bool'), relay.shape_of(bop_5256))) # shape=(324, 1)
output = relay.Tuple([uop_5250,call_5260,call_5269,bop_5283,])
output2 = relay.Tuple([uop_5252,call_5261,call_5270,bop_5286,])
func_5288 = relay.Function([], output)
mod['func_5288'] = func_5288
mod = relay.transform.InferType()(mod)
output = func_5288()
func_5289 = relay.Function([], output)
mutated_mod['func_5289'] = func_5289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_5306 = relay.TupleGetItem(func_1344_call(), 0)
call_5307 = relay.TupleGetItem(func_1345_call(), 0)
output = call_5306
output2 = call_5307
func_5310 = relay.Function([], output)
mod['func_5310'] = func_5310
mod = relay.transform.InferType()(mod)
output = func_5310()
func_5311 = relay.Function([], output)
mutated_mod['func_5311'] = func_5311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mod.get_global_var('func_3538')
func_3540_call = mutated_mod.get_global_var('func_3540')
call_5326 = relay.TupleGetItem(func_3538_call(), 0)
call_5327 = relay.TupleGetItem(func_3540_call(), 0)
output = call_5326
output2 = call_5327
func_5328 = relay.Function([], output)
mod['func_5328'] = func_5328
mod = relay.transform.InferType()(mod)
mutated_mod['func_5328'] = func_5328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mutated_mod.get_global_var('func_5328')
call_5329 = func_5328_call()
output = call_5329
func_5330 = relay.Function([], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_5344 = relay.TupleGetItem(func_1916_call(), 1)
call_5345 = relay.TupleGetItem(func_1918_call(), 1)
var_5350 = relay.var("var_5350", dtype = "uint16", shape = (324, 13))#candidate|5350|(324, 13)|var|uint16
bop_5351 = relay.bitwise_or(call_5344.astype('uint8'), var_5350.astype('uint8')) # shape=(324, 13)
bop_5354 = relay.bitwise_or(call_5345.astype('uint8'), var_5350.astype('uint8')) # shape=(324, 13)
uop_5357 = relay.cosh(bop_5351.astype('float64')) # shape=(324, 13)
uop_5359 = relay.cosh(bop_5354.astype('float64')) # shape=(324, 13)
output = relay.Tuple([uop_5357,])
output2 = relay.Tuple([uop_5359,])
func_5360 = relay.Function([var_5350,], output)
mod['func_5360'] = func_5360
mod = relay.transform.InferType()(mod)
var_5361 = relay.var("var_5361", dtype = "uint16", shape = (324, 13))#candidate|5361|(324, 13)|var|uint16
output = func_5360(var_5361)
func_5362 = relay.Function([var_5361], output)
mutated_mod['func_5362'] = func_5362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5380 = relay.var("var_5380", dtype = "int32", shape = (1, 2, 14))#candidate|5380|(1, 2, 14)|var|int32
var_5381 = relay.var("var_5381", dtype = "int32", shape = (9, 2, 14))#candidate|5381|(9, 2, 14)|var|int32
bop_5382 = relay.equal(var_5380.astype('bool'), var_5381.astype('bool')) # shape=(9, 2, 14)
output = bop_5382
output2 = bop_5382
func_5390 = relay.Function([var_5380,var_5381,], output)
mod['func_5390'] = func_5390
mod = relay.transform.InferType()(mod)
mutated_mod['func_5390'] = func_5390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5390_call = mutated_mod.get_global_var('func_5390')
var_5392 = relay.var("var_5392", dtype = "int32", shape = (1, 2, 14))#candidate|5392|(1, 2, 14)|var|int32
var_5393 = relay.var("var_5393", dtype = "int32", shape = (9, 2, 14))#candidate|5393|(9, 2, 14)|var|int32
call_5391 = func_5390_call(var_5392,var_5393,)
output = call_5391
func_5394 = relay.Function([var_5392,var_5393,], output)
mutated_mod['func_5394'] = func_5394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_5405 = relay.TupleGetItem(func_871_call(), 0)
call_5406 = relay.TupleGetItem(func_873_call(), 0)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_5409 = relay.TupleGetItem(func_769_call(), 1)
call_5410 = relay.TupleGetItem(func_770_call(), 1)
uop_5411 = relay.log(call_5405.astype('float64')) # shape=(9, 9, 4)
uop_5413 = relay.log(call_5406.astype('float64')) # shape=(9, 9, 4)
output = relay.Tuple([call_5409,uop_5411,])
output2 = relay.Tuple([call_5410,uop_5413,])
func_5415 = relay.Function([], output)
mod['func_5415'] = func_5415
mod = relay.transform.InferType()(mod)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5415_call = mutated_mod.get_global_var('func_5415')
call_5416 = func_5415_call()
output = call_5416
func_5417 = relay.Function([], output)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1095_call = mod.get_global_var('func_1095')
func_1097_call = mutated_mod.get_global_var('func_1097')
call_5425 = relay.TupleGetItem(func_1095_call(), 0)
call_5426 = relay.TupleGetItem(func_1097_call(), 0)
output = relay.Tuple([call_5425,])
output2 = relay.Tuple([call_5426,])
func_5429 = relay.Function([], output)
mod['func_5429'] = func_5429
mod = relay.transform.InferType()(mod)
output = func_5429()
func_5430 = relay.Function([], output)
mutated_mod['func_5430'] = func_5430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1207_call = mod.get_global_var('func_1207')
func_1209_call = mutated_mod.get_global_var('func_1209')
call_5477 = relay.TupleGetItem(func_1207_call(), 4)
call_5478 = relay.TupleGetItem(func_1209_call(), 4)
output = relay.Tuple([call_5477,])
output2 = relay.Tuple([call_5478,])
func_5533 = relay.Function([], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
output = func_5533()
func_5534 = relay.Function([], output)
mutated_mod['func_5534'] = func_5534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2095_call = mod.get_global_var('func_2095')
func_2096_call = mutated_mod.get_global_var('func_2096')
call_5573 = relay.TupleGetItem(func_2095_call(), 0)
call_5574 = relay.TupleGetItem(func_2096_call(), 0)
uop_5581 = relay.sigmoid(call_5573.astype('float32')) # shape=(4, 10, 16)
uop_5583 = relay.sigmoid(call_5574.astype('float32')) # shape=(4, 10, 16)
var_5585 = relay.var("var_5585", dtype = "float32", shape = (4, 10, 16))#candidate|5585|(4, 10, 16)|var|float32
bop_5586 = relay.right_shift(uop_5581.astype('uint64'), relay.reshape(var_5585.astype('uint64'), relay.shape_of(uop_5581))) # shape=(4, 10, 16)
bop_5589 = relay.right_shift(uop_5583.astype('uint64'), relay.reshape(var_5585.astype('uint64'), relay.shape_of(uop_5583))) # shape=(4, 10, 16)
func_2137_call = mod.get_global_var('func_2137')
func_2141_call = mutated_mod.get_global_var('func_2141')
const_5606 = relay.const([4,4,7,3,-1,-10,-5,-1,-2,-6,-6,9,-5,1,8,10,6,-10,-6,-8,7,-1,8,-3,-6,-7,-7,-10,-9,-4,5,-8,10,3,-1,2,10,-10,-7,3,3,-6,6,-1,-6,-9,9,-1,5,4,8,-4,1,-9,9,4,9,2,-5,-10,10,-4,-9,9,-3,-10,10,1,9,10,1,-10,3,6,7,-2,7,5,5,10,8,10,5,9,-1,-2,4,-3,-5,8,-6,10,-8,-9,-10,10,-8,-6,-10,-7,-6,3,2,-9,-6,-1,-7,10,-8,8,-8,6,9,-9,8,1,-4,4,-2,-4,-9,-5,-6,2,1,-3,-8,-7,2,-5,-3,-4,1,-4,2,3,1,-10,10,4,-3,2,-6,6,8,-8,-8,-9,-2,-3,-9,8,2,-10,1,4,10,5,9,-4,5,-8,-6,-3,8,-5,-10,-8,2,-5,-1,-6,6,-7,-5,10,4,-4,-4,9,2,-10,8,7,7,2,10,7,1,9,-4,7,-8,8,-9,8,2,6,-8,-7,-4,3,7,9,5,-6,-8,6,-4,-2,3,4,9,-3,-2,4,-9,9,-8,-6,6,-1,-2,4,5,-9,-7,-4,-3,-5,-9,-1,5,-6,8,-5,3,1,-7,3,3,10,5,6,1,2,-10,10,-3,-8,2,7,3,3,5,2,10,-7,8,-4,5,-10,-1,10,-9,-4,4,-8,-1,7,-9,-3,-4,7,-6,-10,-8,-5,1,2,-4,10,-2,-4,-9,9,3,10,-4,7,7,2,6,-6,-1,-6,9,-2,6,1,9,5,4,9,-10,10,6,5,-7,10,1,2,3,10,10,-3,3,-2,3,7,-8,3,8,7,-10,5,10,-5,3,-2,-9,3,5,9,7,-1,2,10,-3,5,-1,-9,10,-5,9,6,-4,-10,-6,-5,4,9,-2,-5,-5,10,-3,-8,3,5,-1,-2,2,4,-10,1,6,9,9,3,-6,-10,4,-3,-1,8,3,-7,-1,-5,9,-4,-7,3,9,-8,10,6,-5,-10,-1,-10,-10,9,9,2,-1,-5,1,2,5,-5,-9,-1,-1,-3,-1,7,10,-3,-10,-9,3,-9,3,2,-3,-4,-1,-9,6,-5,2,6,-7,-3,6,-10,-5,1,10,5,-4,8,-4,8,-6,6,-4,-2,-3,-2,6,-6,-2,-8,-2,-8,3,-2,2,8,-2,5,-7,10,3,-9,-5,1,-3,2,5,-4,7,-5,3,-4,-8,-2,8,-4,-4,-2,-7,-6,4,-6,1,7,-5,6,6,4,1,-8,5,-1,-5,8,6,4,6,-10,9,5,-2,3,-1,9,-2,10,-8,-8,4,7,-2,3,-1,4,-2,6,-10,-9,6,2,6,-5,4,7,9,-9,3,10,-5,-5,-7,-1,10,7,-10,3,-2,-10,4,-6,1,6,7,9,-4,1,5,-8,1,-2,6,-7,-8,7,-6,2,6,1,-6,5,5,1,7,-7,-5,-1,8,9,7,-5,9,-10,5,-8,4,-3,1,-10,-3,1,8,9,2,-10,-6,-3,2,9,7,-2,-3,9,-7,4,-8,8,-7,-3,-8,9,8,10,7,1,7,2,-6,-5,4,5,-6,-9,3,-5,5,-7,-8,-4,6,-7,-9,-4,4,2,-1,-9,1,2,-9,4,-1,-6,-6,3,8,-7,-1,-5,-10,-10,-3,10,6,-7,8,-9,-2,9,-7,-2,-2,-5,-7,5,-5,-10,5,-2,1,6,-1,-10,9,-3,-10,3,-3,3,9,9,5,4,-9,-3,-8,-10,5,3,7,-2,10,-9,4,-3,3,8,-1,-10,-1,-9,-3,7,8,3,6,2,-3,-9,4,1,-3,-5,-1,5,9,10,-2,1,-9,-7,2,-2,-2,-1,2,6,-10,10,-10,-5,8,3,2,-3,-10,5,10,4,-8,-2,6,-6,1,-8,-2,1,8,-1,8,1,-4,10,4,8,9,-2,8,-9,-5,-1,2,8,-6,2,3,-1,-10,1,-5,3,8,8,3,-6,-6,7,1,-10,6,-10,-5,-6,-2,-6,7,-2,7,3,-7,10,8,-3,-5,-5,-5,10,5,-5,-6,-5,-10,-7,5,7,-1,-7,-6,-7,5,4,6,-2,-3,-10,-7,9,2,-6,-8,-10,2,7,8,-3,-7,-3,-2,-3,-1,1,10,5,7,-10,6,3,7,-8,-3,8,-7,-4,5,1,2,3,-5,3,-2,7,1,4,2,-3,-2,-7,-1,5,8,-3,1,2,6,5,6,-4,6,7,1,-2,-10,-9,8,10,-1,8,-8,-7,4,2,6,9,5,9,-5,-8,-8,9,-4,-3,1,-8,-10,5,7,-7,5,-6,-3,8,-3,-4,-5,6,9,4,-1,-9,7,8,-3,-6,3,9,-6,4,3,-10,-1,8,8,-2,-6,3,-6,5,5,8,-5,4,3,-1,-7,7,-9,-10,10,-7,6,10,-8,1,-8,3,-7,-7,6,9,8,1,-4,4,4,10,9,2,-5,-3,6,-10,-5,-3,4,-2,9,-10,6,-5,-5,-2,5,4,-9,-6,-4,-7,-1,10,2,6,7,4,-1,-6,6,-1,-2,-2,3,-7,2,6,4,-9,-7,-8,2,-8,1,-7,9,-7,-4,-3,6,-4,4,2,-5,4,5,-8,4,-9,-9,-1,6,-1,-8,5,-6,2,10,-8,4,-9,-4,5,-3,2,-1,-10,4,7,-6,5,3,2,3,8,-1,-4,4,-2,6,-8,-10,5,-2,7,-5,1,-2,-3,2,10,-8,10,-8,10,-10,-10,-1,-6,7,10,-8,2,-4,4,-6,-3,3,-10,-8,4,1,8,-8,2,8,9,-4,5,-6,6,-7,8,-2,10,9,6,7,1,-10,3,6,3,3,-10,1,10,-4,-8,5,6,2,-3,8,8,-8,4,-1,5,-7,2,10,-5,-10,-1,-3,-10,-7,-5,8,2,4,-1,-5,8,1,1,2,6,-9,9,-1,6,-2,4,-6,-6,-2,-5,5,-8,-5,-8,5,1,10,-5,-10,9,-5,2,7,2,-8,6,-2,10,3,6,-3,-1,10,-1,8,2,5,5,-5,3,3,7,-4,-3,-6,-5,8,9,2,6,-4,-5,2,10,4,1,1,-1,4,1,4,6,-2,8,6,7,-4,-8,-10,-6,-2,-2,-4,9,8,5,-6,4,5,-3,7,3,-10,-8,9,-5,-10,5,1,-9,4,10,6,-9,5,-3,3,2,9,6,-5,-1,9,8,-2,10,2,9,4,-8,-1,1,-9,9,-6,-7,7,3,-6,9,-9,-5,9,-6,1,1,-5,7,-7,1,1,-4,8,8,10,3,4,-8,-1,5,-10,-5,1,8,-8,3,9,-2,5,-10,-5,2,-10,-2,7,-6,-6,-2,4,-4,3,4,5,8,5,-4,-10,10,9,2,1,-4,10,1,10,-6,3,4,7,-7,-1,-3,-7,2,6,5,3,-4,7,-6,-3,7,-4,3,4,-2,-10,5,-7,-7,-2,-10,-10,-7,10,-4,-6,8,-4,1,-2,1,7,1,-3,-9,-9,-10,-3,-9,-8,5,-4,4,-5,-5,8,-1,2,-3,10,-9,-2,1,-4,2,3,-10,2,6,8,4,-7,-5,7,-3,-1,-8,-1,-2,-9,-1,-2,9,4,1,5,2,-2,-3,6,-8,10,1,6,10,-6,10,-1,-1,-4,-7,-10,3,5,-3,-3,7,8,7,-1,-3,-6,-6,10,2,-4,3,7,7,3,2,-2,7,8,6,-1,-8,-2,5,-4,5,5,1,7,5,-8,4,-9,2,5,7,-6,4,-9,-9,-6,-2,-6,5,1,-1,-1,10,6,-5,9,8,9,5,-10,3,-1,-9,8,-8,5,1,-6,6,-3,4,5,1,-5,1,3,3,9,-10,-5,-7,10,8,8,-8,5,5,6,-5,4,-8,10,-8,-5,-5,9,-3,-9,-2,5,8,-4,1,2,-2,-1,-1,4,-9,10,-1,7,7,-5,3,-1,-1,7,-4,5,3,-6,7,6,1,2,-4,-8,-7,9,4,-4,-4,4,-9,-4,6,-7,-2,-1,-10,6,3,2,-8,1,-1,-6,5,-3,-10,-7,6,1,8,2,-2,1,-4,-7,-5,6,-3,-3,4,-5,4,3,5,-10,6,2,-2,-5,-7,3,-1,10,-3,6,-10,4,-2,-5,-2,1,-7,-6,-7,7,3,8,9,10,4,9,-7,-9,1,6,-7,9,-2,-4,8,-7,-1,7,-4,2,-4,-3,4,-10,5,8,4,7,4,9,3,5,10,4,8,3,6,3,-7,7,-8,6,-4,-10,-6,-2,-4,7,-6,7,6,6,-5,4,-1,-5,-7,2,8,10,2,7,9,-9,4,9,-7,3,-3,5,-9,-2,5,-6,6,9,9,4,-7,-3,1,10,-6,-2,-10,-2,1,-5,-7,-9,8,3,-3,5,1,10,9,-2,5,-5,-10,5,-4,8,-1,6,-5,7,5,-10,10,-10,2,-8,-3,3,2,7,-6,7,1,7,2,6,9,-6,7,-10,10,-5,10,8,-6,10,-9,-9,10,-8,3,-2,1,-1,-5,-7,-8,-10,10,2,3,8,-7,-4,-5,1,-8,10,2,6,-10,-4,7,7,-2,-5,-9,8,-2,-6,5,-4,-2,-2,4,6,3,4,-6,7,-10,-2,5,-8,2,-3,3,2,2,2,2,-1,9,-4,8,2,6,-8,6,8,-2,-7,-6,8,10,3,-7,-10,-2,9,8,10,7,-4,4,1,1,-10,-6,5,8,2,6,4,-6,10,6,7,7,-6,-1,8,-8,9,7,-2,5,2,3,9,-1,-5,-8,10,-4,-6,-7,9,1,9,-3,2,-2,9,-2,-7,9,10,6,3,-8,5,1,1,1,1,1,-1,-10,10,-3,5,-1,-1,6,-5,3,2,-5,8,-4,-9,2,8,4,-4,-7,1,5,-2,-6,-5,-10,-2,3,10,-1,-2,1,-5,-10,-2,-9,4,4,2,5,-6,-8,10,10,-9,-9,4,-1,-4,9,7,-8,-1,-6,-10,-4,-8,9,-4,-9,2,3,7,6,-6,-9,4,-5,10,7,6,10,-4,3,-8,10,-10,7,-7,-1,9,-8,-7,-5,6,-1,-5,-6,10,6,2,7,9,1,6,-10,2,-5,3,-8,-3,-3,7,-7,1,-4,-9,6,6,5,7,-6,-5,8,2,9,4,-4,-3,8,4,8,-5,-3,-2,-3,-2,-10,10,7,5,-7,-9,-9,-4,8,-1,1,-3,-6,-3,-5,-8,3,4,-9,-7,-7,-7,-1,-5,9,5,3,6,-4,8,5,-6,-3,-8,9,-9,2,-5,9,1,-6,-9,6,-8,-8,10,2,10,6,8,-5,-4,-2,-9,-10,10,9,-5,-7,-3,-1,8,9,-1,-8,-2,5,-10,-6,-10,9,4,-9,3,4,-3,-1,2,-9,-4,-3,9,-4,-7,-10,-9,-6,7,2,3,7,4,-7,7,9,-4,-8,10,-4,4,-3,2,-6,5,10,5,-6,-3,-3,-10,2,5,-8,3,2,-5,10,4,-6,-3,9,-4,-7,9,-7,-4,-2,8,4,2,-9,-10,-4,-3,3,9,-6,-8,-9,-6,-5,-5,1,-5,-7,10,-3,2,-3,10,-5,-2,1,5,-7,8,1,-9,9,7,2,-9,-6,-4,10,-8,4,-5,10,-5,-10,8,-6,-4,-10,8,-8,7,-10,6,-7,-2,-4,6,-6,10,-3,9,-5,4,-6,9,1,-2,9,10,2,-6,10,2,-4,4,-1,7,-8,5,-5,-1,-10,-7,1,-6,-1,3,6,-1,-8,-8,-10,6,7,-3,6,9,7,5,-3,-4,7,8,-1,-6,4,7,-10,-3,6,9,1,6,-4,-7,5,-1,-9,6,10,10,-5,-9,1,3,-7,7,-10,8,-7,-1,6,-5,-5,-8,2,-8,-6,3,6,-5,8,-2,9,4,-5,-8,-1,10,1,-10,4,1,2,7,2,4,8,-10,-6,-10,-1,3,-1,-7,-9,-7,-2,4,4,5,-7,-6,5,-9,2,1,10,-5,-7,5,-9,2,1,-7,-9,-1,-1,1,-4,-6,-4,8,-3,4,5,-7,-2,-8,-4,7,9,-10,-6,-6,-3,-7,-9,10,-9,-9,6,1,-4,-10,-5,-2,9,-5,-4,7,1,-4,-8,10,1,-6,-7,6,7,10,6,-6,-7,-10,-10,-10,-9,-3,3,8,5,2,10,-5,-5,-9,-8,-4,6,8,10,-8,6,-10,5,2,10,1,-3,9,1,9,-4,6,6,5,2,7,-5,7,-4,7,5,6,-4,6,-4,5,-7,-8,-5,-10,-6,-6,-5,8,-4,-3,-5,-6,7,-4,-8,-9,-2,-9,9,5,-6,6,-4,1,1,6,7,5,-8,5,10,1,2,-8,-7,8,-3,-9,9,6,5,4,-6,6,-7,-7,8,8,8,-10,-10,2,-3,2,-10,9,-10,9,-3,-9,-7,-9,4,4,-5,7,-5,1,-10,9,3,5,-3,9,-9,-8,5,-3,5,3,4,-5,8,6,-1,8,-2,-9,-7,-3,-9,5,8,-4,-5,-3,6,-7,-6,-2,7,2,5,6,-10,-8,-2,4,1,1,3,-3,1,-3,3,7,9,1,1,-6,8,1,-7,8,-10,-3,2,-4,-8,-4,-4,10,10,-7,-1,-3,9,9,-8,-5,7,-5,-4,3,-6,2,6,5,-5,7,7,5,4,3,10,-2,6,5,6,1,-5,-4,-6,8,-3,-7,7,-8,5,-6,-9,-3,8,4,-8,-6,9,5,-10,9,2,-8,10,-1,-7,-2,-7,-9,5,-9,-10,5,6,5,6,1,-9,-8,-7,4,8,-10,2,-10,-5,-9,3,-2,-5,4,10,9,8,-10,6,7,-1,7,-8,-2,5,6,3,-4,7,-10,-7,8,-4,-8,-4,4,-4,1,-9,5,-2,9,-8,-6,5,4,4,-7,2,-1,-4,2,-6,-10,-5,9,5,-5,-3,8,8,9,-5,2,-4,4,6,6,10,-6,-2,-2,-3,9,-9,-3,10,9,-8,3,-4,10,4,1,-1,-8,-4,-9,9,-4,-5,-7,8,-10,-9,-8,9,-2,-1,6,-3,-6,-7,5,-3,4,5,4,-7,10,7,-8,4,-1,2,9,-4,-2,2,-6,-6,4,2,-5,-4,7,-10,10,-3,-9,10,10,-4,4,-10,8,1,-7,2,3,8,-7,-3,2,-10,10,-10,-4,3,-8,-6,-10,2,9,-1,10,-2,-8,4,10,-5,-3,-3,9,5,-10,8,10,-9,-4,3,2,10,8,-1,7,-3,1,9,3,-1,-7,-4,1,-9,-6,8,6,7,2,-6,-6,-1,-4,-10,4,-1,10,-1,-1,-5,-3,-4,-3,-4,-10,5,-9,4,-7,-10,6,6,-9,9,7,8,1,10,-4,8,-7,2,1,9,10,1,-1,4,-5,-1,-8,-4,-10,2,9,7,-5,9,-5,-4,-8,-3,-3,10,-1,-2,-9,-10,9,10,-2,-3,6,-2,2,7,10,-10,8,-3,-2,-10,1,1,-9,-9,10,9,4,10,-5,8,9,-10,-2,6,8,-7,3,1,1,-5,2,6,3,-3,-2,-6,1,-8,1,-8,-1,7,3,7,8,4,8,-7,7,-1,-1,2,5,6,5,4,-9,9,1,-5,-10,10,-8,-10,6,-5,-2,-10,6,-4,8,-4,-1,8,-1,-10,3,-10,6,7,3,9,-7,-2,-5,-4,4,-1,-5,6,3,8,7,-6,-7,-5,4,-8,4,-6,6,-5,9,7,6,-9,-1,-6,4,3,6,-4,3,3,-1,10,10,10,-1,5,-10,10,-1,10,-10,-9,-3,9,4,-7,5,-4,1,6,1,-3,8,-2,10,6,-7,6,-7,-9,-1,8,4,-10,-4,-8,8,5,5,-6,-1,4,-7,-1,-7,5,-7,-1,5,-5,-8,5,6,-3,-9,-3,9,-2,10,-1,4,-5,1,1,7,-6,-8,-4,-4,5,-6,-6,8,1,3,-4,-2,-9,5,10,5,9,-8,8,-10,5,-3,-10,3,8,-7,-3,1,1,-2,-10,-6,8,1,-4,-1,6,-4,-7,-2,-10,-7,-6,-7,-6,6,3,4,6,1,8,-2,8,-3,-10,-9,-1,-5,7,-6,10,9,-5,-7,8,-2,-10,1,8,-2,-8,-1,9,8,10,1,7,3,2,-3,-8,5,7,5,-9,-6,-1,-5,-4,8,-8,-4,-10,-7,9,-3,4,6,-5,9,-9,2,-3,-10,-2,3,-1,5,5,6,-1,-2,10,-8,-8,-10,3,7,-10,3,9,-2,-4,-4,10,-5,-2,7,5,-6,2,2,-1,-1,7,-1,-9,-1,-1,-2,-6,1,5,9,-3,3,-4,-9,3,3,6,-10,-8,-8,5,-9,10,-8,-10,-3,1,-6,-2,-7,-7,-8,-6,-7,-9,-3,-8,5,4,3,10,5,-3,-6,10,-1,-6,9,7,-4,5,-1,10,1,9,8,-9,3,-5,-8,-4,1,7,-10,8,-1,3,-5,9,-7,-9,10,-7,1,-1,7,7,-5,-10,9,1,10,-3,7,3,2,8,-2,-4,4,-4,-3,9,-5,5,6,7,9,4,-4,9,-9,-8,1,5,-1,8,-10,-2,-7,-3,2,-10,-10,7,1,9,-5,2,3,1,8,8,6,5,8,6,-7,-2,-9,2,7,2,10,-7,-3,7,-6,9,6,3,3,-3,-6,-7,4,-6,1,-4,-10,-6,-7,-4,9,-5,9,-8,-7,-1,5,-7,7,3,-9,-1,-8,-4,9,8,-1,-2,10,5,10,-10,5,-8,-1,2,-6,1,-9,8,2,7,-8,-8,-10,8,8,-7,-7,7,3,-10,-10,4,-7,-9,-10,-4,5,9,-4,5,4,7,6,9,-3,10,-1,3,9,-7,-8,7,5,-7,2,-5,4,8,-5,-9,8,-4,-6,-7,8,-3,-6,-10,-6,-4,-8,7,-10,-2,-1,-5,-10,8,-5,2,8,2,6,7,-8,4,-9,-8,5,-3,-10,-7,-9,-8,-9,-10,6,1,1,-7,10,-4,10,5,1,4,-10,6,4,-2,4,10,-3,3,-10,2,2,8,-8,-9,-2,-2,4,10,2,2,5,8,-4,9,-3,-5,-6,1,3,3,-5,-8,3,-6,9,10,10,1,1,10,-2,1,6,-2,-3,6,9,6,1,6,-2,5,6,-7,-7,-5,2,9,-9,10,-5,10,2,8,10,5,-4,-5,8,1,9,-6,-1,10,5,2,6,-6,9,-4,-1,2,-1,8,-7,9,-3,6,10,-6,3,5,-1,10,8,-1,-4,6,8,-7,3,10,10,1,-1,3,4,-5,-2,5,10,-10,-8,2,-10,-10,4,10,5,4,-10,-2,-8,1,4,9,-3,10,5,7,8,8,-9,-8,4,2,10,2,1,-7,1,-10,-2,8,-10,-3,-6,4,3,-2,3,-3,-10,-2,-8,7,-2,-6,7,4,-2,-10,9,-4,4,-9,1,-4,5,-3,3,-2,9,3,-3,5,-3,-4,7,-5,5,1,-6,-7,1,5,10,-10,7,-4,10,6,4,-6,-9,5,-6,9,1,4,6,5,9,6,9,-8,1,4,5,8,2,-7,-2,-10,-2,7,8,-5,-9,4,-3,9,-8,9,3,-9,-5,-3,1,-1,10,1,10,-4,7,1,10,-3,-2,-4,-4,-10,-7,5,6,3,4,3,-9,4,-7,-7,-4,-5,-5,-3,-2,-7,6,9,9,-10,-5,8,-2,-4,-9,5,-3,2,-1,-8,-8,4,-8,7,-6,-10,-2,8,3,4,-3,5,-1,-6,2,5,-9,-5,1,-4,-9,-9,5,6,7,7,-8,8,1,-10,-5,2,-4,-3,-9,4,-3,8,8,5,-3,-9,-9,10,10,3,-5,-1,2,-5,-3,8,2,6,-1,9,-7,4,-3,4,-4,-1,1,-9,-8,-5,-5,-8,10,-9,7,4,-4,8,3,-3,8,-8,-5,-4,-3,-3,4,3,5,5,-10,6,9,3,5,-1,-9,-3,-5,-9,-8,5,4,-5,2,1,-1,7,-2,-2,-8,1,1,4,-5,-4,-5,-4,-9,-8,-9,4,-7,-7,-3,5,1,1,-3,8,9,-8,1,3,-1,2,1,7,8,6,-5,5,10,10,2,-9,1,5,-1,3,-9,-1,4,-8,-4,-6,-7,4,6,9,3,-6,9,-10,10,-4,10,-1,5,-9,-6,-7,5,-10,-7,-6,1,9,-5,-4,-2,-6,-6,-9,10,10,-10,-1,-8,5,-2,-10,-4,2,-7,6,5,-2,-1,-1,-8,7,8,4,-8,3,-1,-2,-1,-4,-3,8,2,-10,-2,6,-2,1,-2,7,-3,10,5,-8,-6,-5,-3,-8,4,10,9,-7,10,10,-10,-3,-9,-8,5,-1,10,-2,8,10,6,-7,7,-5,-1,-10,-3,-7,-4,-7,10,-1,-5,-3,-3,-6,-4,-3,8,-7,-4,-9,8,3,10,2,-7,2,8,-6,10,-9,4,5,-1,-10,-9,-5,-4,2,8,4,9,-9,3,5,5,8,-5,3,5,-2,-10,-3,3,8,1,7,10,-4,-1,-6,2,-8,-9,4,4,-10,3,1,-1,7,5,-10,2,-9,5,-1,-1,8,2,4,8,-2,-7,6,4,-10,9,-5,5,6,-9,-1,-8,8,10,7,6,-8,-4,1,-8,-6,-2,-8,5,9,10,4,-8,9,-4,4,6,3,6,8,6,3,-7,6,-6,7,6,6,-4,10,1,-10,-5,7,-10,7,8,-5,-2,8,10,4,5,-8,4,10,1,2,-6,1,-3,3,10,-6,-1,-10,10,-6,5,5,-1,7,-7,-10,-10,-7,9,2,-10,-2,5,-3,-6,-9,1,2,-8,-4,10,6,-4,10,-4,1,-3,4,-4,2,-6,-3,-4,10,4,7,-7,3,-7,-5,5,5,-8,7,-8,4,-1,-10,1,-7,4,-8,-6,-4,-4,-3,4,9,7,-6,7,8,4,-3,9,-10,3,-6,1,-9,7,-3,10,-5,-10,-3,-8,8,-10,-8,10,-4,8,-1,9,3,2,9,10,8,-2,10,3,-3,-9,-1,-9,-2,-4,5,3,-9,5,-6,9,-6,6,-10,-2,-1,4,-9,-7,-9,6,-4,3,5,-1,-5,-6,1,7,-10,-6,1,2,-2,-3,-2,6,-7,9,-9,2,1,4,-1,-7,9,1,-5,10,-6,10,-1,3,-5,1,-5,9,2,-1,-2,1,4,-3,-6,8,-5,9,-5,5,9,6,-8,1,8,-10,-2,4,-6,-7,-2,-6,3,5,2,-10,6,4,-2,-2,8,-3,-7,-6,-5,-5,8,-4,-9,-1,-8,1,-8,6,1,-2,-1,1,3,-1,10,5,-9,1,9,6,-2,9,-1,1,4,3,10,5,1,4,-4,-1,10,-9,-5,-4,2,-8,10,-7,5,-4,-3,-8,5,-6,-1,-1,3,9,7,-5,-1,-3,4,-9,-9,-4,2,-7,-4,-7,3,7,10,-4,-3,5,3,5,10,-8,7,-3,4,5,4,4,-9,-3,-8,5,7,-5,10,10,4,-2,10,9,5,3,-5,9,9,-3,1,8,8,8,5,-1,-6,1,8,9,3,5,8,-2,-7,3,2,6,9,9,2,3,1,-3,4,-2,-1,-7,-2,5,5,-7,-3,7,7,-4,-6,-6,-2,7,8,-5,8,-7,2,-2,-1,-5,4,-4,10,9,-4,-4,-3,-4,-10,-1,2,1,-1,2,3,-6,-9,-9,10,-4,2,-3,-7,-7,6,7,9,4,2,4,3,-4,2,-3,1,7,5,10,6,1,9,-10,6,8,9,-3,4,7,1,6,-9,-5,2,-10,-5,10,1,-2,-3,-4,2,7,7,2,5,-1,-3,-1,-6,-3,4,-4,-1,-1,-7,-7,6,-7,-7,2,8,-8,-4,4,-2,10,10,8,-2,-6,-5,10,-8,-6,-7,-8,-6,4,5,-9,-6,-2,6,-10,10,9,-10,9,-7,4,3,-1,-6,8,-4,10,-9,10,4,-6,-7,-2,-6,-6,7,-9,10,1,4,1,10,1,6,7,-1,-6,7,-5,2,6,-1,-2,-4,9,2,-9,3,-2,-1,-1,-1,1,9,-1,-9,-10,3,-3,5,-6,-2,-9,-2,6,-1,8,-5,2,-6,5,-3,8,-7,2,1,-8,2,9,-2,9,-3,-7,-5,2,-5,7,-2,-1,-5,8,10,10,5,6,-6,1,4,-8,9,10,-5,-2,-1,-5,-6,2,-10,10,4,5,2,1,-5,3,-7,10,2,-8,-2,9,7,-6,6,4,-1,-1,-4,9,1,5,-6,9,-4,-9,1,6,1,-9,-7,8,2,9,4,-7,-9,-1,7,3,9,8,1,-2,-8,-9,3,-1,9,-3,9,7,2,4,-2,-1,-8,2,4,4,-4,5,2,-10,-7,5,-5,-3,-2,6,-4,4,-7,1,-2,-5,8,2,7,3,7,9,2,-8,-9,-8,-3,-4,1,-4,-2,9,-9,2,-5,10,-4,-3,-9,9,-7,-10,3,1,-1,7,1,3,-7,8,9,3,4,-8,-8,4,7,-6,-8,-4,-9,2,9,2,8,9,5,-1,-9,-6,9,4,4,4,-4,-2,-9,3,-8,3,4,-5,5,9,-8,-3,-7,-1,-7,-4,3,-4,-10,10,3,-8,-7,-5,1,-6,-3,6,-8,-10,3,-5,-1,9,-7,1,-4,4,-4,-4,7,3,-1,-9,-7,-5,4,-7,1,6,4,-6,8,10,1,6,3,7,10,4,-4,8,-1,10,-10,7,-6,2,3,4,3,-3,9,2,-5,-9,-9,6,1,-9,-4,6,-1,4,10,9,9,-2,3,10,-4,6,5,1,-8,10,9,2,4,-6,-5,8,9,2,5], dtype = "uint16")#candidate|5606|(4860,)|const|uint16
var_5607 = relay.var("var_5607", dtype = "float32", shape = (324,))#candidate|5607|(324,)|var|float32
call_5605 = relay.TupleGetItem(func_2137_call(relay.reshape(const_5606.astype('uint16'), [4860,]), relay.reshape(var_5607.astype('float32'), [324,]), ), 0)
call_5608 = relay.TupleGetItem(func_2141_call(relay.reshape(const_5606.astype('uint16'), [4860,]), relay.reshape(var_5607.astype('float32'), [324,]), ), 0)
output = relay.Tuple([bop_5586,call_5605,const_5606,var_5607,])
output2 = relay.Tuple([bop_5589,call_5608,const_5606,var_5607,])
func_5626 = relay.Function([var_5585,var_5607,], output)
mod['func_5626'] = func_5626
mod = relay.transform.InferType()(mod)
var_5627 = relay.var("var_5627", dtype = "float32", shape = (4, 10, 16))#candidate|5627|(4, 10, 16)|var|float32
var_5628 = relay.var("var_5628", dtype = "float32", shape = (324,))#candidate|5628|(324,)|var|float32
output = func_5626(var_5627,var_5628,)
func_5629 = relay.Function([var_5627,var_5628,], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5288_call = mod.get_global_var('func_5288')
func_5289_call = mutated_mod.get_global_var('func_5289')
call_5665 = relay.TupleGetItem(func_5288_call(), 0)
call_5666 = relay.TupleGetItem(func_5289_call(), 0)
output = call_5665
output2 = call_5666
func_5668 = relay.Function([], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
mutated_mod['func_5668'] = func_5668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5668_call = mutated_mod.get_global_var('func_5668')
call_5669 = func_5668_call()
output = call_5669
func_5670 = relay.Function([], output)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2512_call = mod.get_global_var('func_2512')
func_2514_call = mutated_mod.get_global_var('func_2514')
call_5719 = relay.TupleGetItem(func_2512_call(), 0)
call_5720 = relay.TupleGetItem(func_2514_call(), 0)
func_4146_call = mod.get_global_var('func_4146')
func_4149_call = mutated_mod.get_global_var('func_4149')
const_5726 = relay.const([[7.909630,-8.862940,-3.849937,1.520209,1.222761,5.188858,-2.774045,-8.949628,4.556155,-5.746164,9.311219,1.449784,-2.396830,-2.904087,-9.140660,-2.854915,0.345646,-5.820135,-7.896269,4.320726,6.085090,7.849013,-1.106040,-9.669116,6.686658,3.152384,-1.996604,2.563554,8.561559,6.539179,-0.400726,-1.042634,6.008512,2.511203,-3.282704,2.741034,4.512991,0.327980,-6.658743,7.138964,-7.392840,6.584242,0.393252,8.748759,-7.856100,-9.791967,4.827125,-0.169934,-7.771685,-0.559819,-8.809706,-0.384126,-3.574938,-1.159422,-5.239689,-2.071443,-8.081580,0.783093,4.490309,-4.764153,-8.370587,-6.779889,4.845952,-7.368445,-0.064817,-2.515594,-4.293630,-4.541836,-0.950967,-3.909871,-1.013436,-3.111362,-7.148667,-9.443130,-7.370673,1.956135,-6.044250,-8.883369,-8.076767,6.141145,-8.080920,4.679325,-7.505548,5.968028,-2.841879,8.385786,1.910295,0.341689,-3.837622,9.978835,8.395435,0.934423,-2.606802,6.004539,-5.189896,5.253985,8.672181,2.521135,-5.071882,-4.977258,-9.432094,8.937652,0.853927,8.846308,-1.691923,4.458522,8.175001,5.610679,-4.269332,-9.802863,0.091901,8.447564,2.120816,5.180115,-6.387279,-6.154104,1.336797,-9.510430,6.275981,-6.299286,-4.921180,0.498511,-5.832115,7.728244,2.400200,0.357106,0.755099,8.328808,-9.838800,-8.077912,7.424341,4.194916,-4.664475,1.483119,-7.542221,8.225124,3.939714,-6.635701,-8.377911,2.784383,-0.042575,-4.822015,7.386792,-6.310220,-1.889358,-0.358734,8.615943,1.727561,6.666572,1.581272,-6.370099,-5.351103,7.385179,-2.802252,-3.715710,-5.524438,-3.909285,-5.660570,-9.342797,3.476157,1.739537,-4.270253,-3.273026,-8.448880,5.287189,4.276557,7.702913,0.102785,-0.313496,-6.947446,9.087720,2.404358,5.346540,-2.577297,-7.953185,7.616255,2.216369,5.448630,5.308646,-0.555627,1.009403,-6.944619,4.130243,-7.106141,3.376537,9.591459,5.604847,7.955330,-4.673623,-8.978857,1.869567,5.229252,-4.580053,-2.462334,-6.201273,-2.265703,-9.467203,-6.501123,-1.301894,-1.804376],[4.407466,0.211877,-7.635601,-4.076752,-8.966822,-3.347616,-9.505433,-1.050634,-1.417666,-7.937402,7.782162,-6.680415,2.447069,-1.491490,8.290559,-2.194505,-2.021135,1.719088,-9.419233,6.276134,2.209533,-3.984799,0.879822,-6.475180,-0.544509,8.836235,3.413974,2.303592,-4.935073,-5.643338,-8.443644,6.730264,-4.206532,-8.940063,-9.957539,6.610764,8.059458,7.830544,1.805949,-6.779355,-1.043011,3.793952,5.032156,-2.463000,-6.666319,-4.965163,1.570962,1.156988,-2.764933,-8.602233,-3.917814,-0.428381,-9.212475,-6.832022,3.716707,7.094166,-2.061334,2.518806,9.014185,-4.529635,7.572530,5.230674,-7.899358,-7.340961,-8.899600,4.423062,4.858556,-1.721726,0.796944,0.573102,7.660291,-1.007076,3.442917,3.206899,1.563100,7.165764,-4.425687,-0.553247,8.021683,-0.379460,7.374171,-7.466147,4.423133,-9.666414,-9.018831,-5.349399,-0.630000,5.086426,-5.238733,8.227308,-8.015262,-3.571471,6.158688,8.572574,-1.402369,-6.445778,9.516695,-2.575424,6.654164,9.443318,-3.848388,1.700412,-8.336801,-3.612897,6.642613,7.480323,-9.849375,9.465079,-7.766366,7.750837,-1.439496,-2.925224,-5.962343,-7.526112,-7.784720,6.354510,2.023194,8.982063,-0.944916,6.646794,9.518590,5.748271,-1.891252,5.858858,-5.851235,4.084424,-5.726535,-4.978729,-6.233844,-2.018487,5.829539,7.204127,-1.179003,-2.846991,8.002528,3.875310,-4.691449,-0.839726,8.448970,3.669249,-6.004414,-4.815144,2.750562,-0.690844,7.381806,-2.116492,-1.668288,-4.853650,-1.599803,5.447358,-4.915608,4.672038,-6.665155,3.423563,5.780056,4.051829,-7.057710,7.906263,-6.533033,1.211190,-2.988481,-1.325702,-9.508732,-9.266594,-0.753848,-6.210182,-8.207843,3.848340,9.782974,-6.083578,-3.560520,7.397234,8.173703,-6.709089,-8.358220,2.658553,4.261957,2.564094,-0.257071,-7.788200,-0.312930,0.054911,-8.438111,0.303408,-4.411638,2.823544,7.363185,0.172627,9.410086,-2.557807,4.551025,-9.363923,-7.004638,-0.725414,4.401200,1.835257,4.228334,-9.688898,5.744393,-0.948518],[6.805161,-4.338034,-0.317124,2.326842,1.875516,8.996836,-0.856866,2.246536,2.645503,9.298042,1.281057,-5.680723,-1.670664,-7.357803,-8.671707,9.755506,-2.901782,-2.101675,1.012158,-9.746467,-4.472580,7.610789,-8.301682,7.620876,4.538597,-0.506314,5.427218,3.109218,-7.461642,0.213771,-9.897215,-9.003944,2.866178,5.817243,4.965898,2.930859,1.897493,-8.580379,-1.680292,-5.918850,-1.115052,-5.535773,5.358342,3.666051,7.330993,1.194429,8.050495,5.488852,-3.020695,1.587827,-0.093801,6.926323,-2.582515,9.271471,1.277094,-1.094643,4.541914,9.697559,-5.211591,-8.596282,-6.656128,-8.481097,1.383138,-8.481347,-3.243097,5.147431,-7.169990,7.296301,-7.411290,8.803222,-7.825496,-9.285014,-8.045386,-3.020195,-8.402662,7.132823,-6.010628,6.853823,2.145945,-1.974995,6.514826,-1.522958,-9.017626,-5.881864,7.823736,9.643150,0.512298,2.759269,2.023542,3.681028,-7.257623,-5.208519,-4.687580,-4.647585,7.838651,6.833431,6.517213,2.575696,8.458468,-1.834677,5.598556,-1.339009,2.519311,6.046738,-2.784197,7.924210,0.646130,3.510291,1.409471,0.618315,-8.472709,2.878466,-4.499634,-1.262993,4.070643,-6.536815,-3.334629,2.916892,-3.340756,-6.651502,2.952764,3.546890,-6.072066,-4.721113,3.933964,-7.442107,2.031343,1.004047,-2.035655,4.091221,-7.307735,2.959740,9.188344,7.668644,5.567259,-3.785638,0.652937,3.141333,-9.938181,8.385955,9.944826,-8.154653,2.367776,-1.063059,9.398195,2.852558,-4.424717,-4.554006,-7.752763,8.385084,1.911663,-3.980221,-3.150682,-4.826735,-5.593434,-4.491224,-9.887904,-6.674055,-1.361936,7.950057,-6.089160,2.351172,0.173531,-6.090150,4.352194,0.779292,5.456047,0.122332,2.699403,1.434376,4.081199,6.802913,-9.498793,-6.657933,3.354435,-7.024955,-8.703229,-6.149659,4.520887,2.749177,-6.233374,9.195977,2.574900,8.255422,4.462483,-4.518170,-7.926757,-7.575314,2.301219,2.974600,-8.343989,-9.887645,-8.259398,2.367043,-7.520795,-5.172992,9.399912,-8.269011,6.442899,-9.193599],[-3.633383,5.474140,-3.041579,3.529838,-7.731775,-5.581843,-0.081878,-5.095059,8.822205,-0.954777,-0.143862,2.141865,5.748499,-1.578354,2.494318,6.299925,0.368345,1.675868,-3.909833,3.136550,8.444508,8.698688,1.681646,-1.306968,2.814486,-1.221362,-1.237193,-9.625764,9.149409,-4.340617,4.711498,8.459361,-2.609276,-7.627696,6.348426,-9.671716,-9.946925,6.739911,5.591783,-2.355920,-2.529917,-6.363142,-9.592012,-5.748423,-3.970033,1.540042,-3.001453,-5.148524,6.363429,3.864301,6.485408,3.822400,-3.471835,2.424003,1.561563,-0.084960,-1.230119,-2.509332,9.903025,-7.575175,4.725676,0.195072,-6.399599,-6.451815,0.085263,5.080121,6.619895,-8.123153,7.490444,1.378708,4.824611,-9.712676,1.818164,7.133843,-5.870251,-1.337623,1.668607,9.212099,6.517129,8.293644,-1.230026,5.172514,8.095658,5.826038,5.461684,2.411244,-0.118640,-3.559413,-0.512449,7.884948,-2.927855,-1.901550,7.809211,1.730903,-9.558253,5.798866,7.214889,-5.606642,-6.054856,5.205937,2.694678,0.536988,6.634920,6.566178,1.092840,-9.216041,-4.602819,6.700252,-8.221239,-3.015974,9.158311,1.290625,4.321621,1.313242,4.447571,6.632792,-9.149560,5.920497,2.918910,1.298849,8.128904,-9.512342,6.933273,1.001179,-5.680834,-3.516943,-4.174676,0.086646,1.051092,4.791979,8.896806,1.162344,9.402748,4.029089,1.980444,0.724720,-4.232542,-6.089436,3.715903,-7.875414,-3.747561,3.455502,-2.506516,-2.853951,-2.549689,1.921078,-7.427802,8.573530,1.962915,-7.365940,1.460848,5.149227,0.849658,5.546378,7.339618,9.225484,-6.658694,-6.433350,3.539455,9.927948,4.501886,3.706928,7.561361,3.708775,-4.071159,-6.133549,-4.542378,9.953297,7.832573,-4.568419,-6.796310,-4.428994,1.012538,-6.162851,2.968408,-2.896641,-8.365833,4.063872,-1.864004,-7.748947,-6.913926,-0.351827,-7.973616,4.172791,2.544679,-2.500946,2.998353,-6.402264,-0.741384,7.267909,-7.045096,-3.533100,9.445628,3.092006,-7.349742,-7.974037,-0.108841,7.354624,0.493647,-9.586339]], dtype = "float64")#candidate|5726|(4, 200)|const|float64
call_5725 = func_4146_call(relay.reshape(const_5726.astype('float64'), [10, 5, 16]))
call_5727 = func_4146_call(relay.reshape(const_5726.astype('float64'), [10, 5, 16]))
output = relay.Tuple([call_5719,call_5725,const_5726,])
output2 = relay.Tuple([call_5720,call_5727,const_5726,])
func_5728 = relay.Function([], output)
mod['func_5728'] = func_5728
mod = relay.transform.InferType()(mod)
output = func_5728()
func_5729 = relay.Function([], output)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_5736 = relay.TupleGetItem(func_769_call(), 0)
call_5737 = relay.TupleGetItem(func_770_call(), 0)
output = call_5736
output2 = call_5737
func_5739 = relay.Function([], output)
mod['func_5739'] = func_5739
mod = relay.transform.InferType()(mod)
output = func_5739()
func_5740 = relay.Function([], output)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5762 = relay.var("var_5762", dtype = "int32", shape = (3, 15, 11))#candidate|5762|(3, 15, 11)|var|int32
var_5763 = relay.var("var_5763", dtype = "int32", shape = (3, 15, 11))#candidate|5763|(3, 15, 11)|var|int32
bop_5764 = relay.greater(var_5762.astype('bool'), relay.reshape(var_5763.astype('bool'), relay.shape_of(var_5762))) # shape=(3, 15, 11)
output = relay.Tuple([bop_5764,])
output2 = relay.Tuple([bop_5764,])
func_5773 = relay.Function([var_5762,var_5763,], output)
mod['func_5773'] = func_5773
mod = relay.transform.InferType()(mod)
var_5774 = relay.var("var_5774", dtype = "int32", shape = (3, 15, 11))#candidate|5774|(3, 15, 11)|var|int32
var_5775 = relay.var("var_5775", dtype = "int32", shape = (3, 15, 11))#candidate|5775|(3, 15, 11)|var|int32
output = func_5773(var_5774,var_5775,)
func_5776 = relay.Function([var_5774,var_5775,], output)
mutated_mod['func_5776'] = func_5776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5042_call = mod.get_global_var('func_5042')
func_5044_call = mutated_mod.get_global_var('func_5044')
call_5778 = func_5042_call()
call_5779 = func_5042_call()
func_404_call = mod.get_global_var('func_404')
func_406_call = mutated_mod.get_global_var('func_406')
call_5784 = relay.TupleGetItem(func_404_call(), 0)
call_5785 = relay.TupleGetItem(func_406_call(), 0)
output = relay.Tuple([call_5778,call_5784,])
output2 = relay.Tuple([call_5779,call_5785,])
func_5790 = relay.Function([], output)
mod['func_5790'] = func_5790
mod = relay.transform.InferType()(mod)
mutated_mod['func_5790'] = func_5790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5790_call = mutated_mod.get_global_var('func_5790')
call_5791 = func_5790_call()
output = call_5791
func_5792 = relay.Function([], output)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mod.get_global_var('func_2826')
func_2828_call = mutated_mod.get_global_var('func_2828')
call_5811 = func_2826_call()
call_5812 = func_2826_call()
func_4988_call = mod.get_global_var('func_4988')
func_4990_call = mutated_mod.get_global_var('func_4990')
call_5817 = func_4988_call()
call_5818 = func_4988_call()
output = relay.Tuple([call_5811,call_5817,])
output2 = relay.Tuple([call_5812,call_5818,])
func_5823 = relay.Function([], output)
mod['func_5823'] = func_5823
mod = relay.transform.InferType()(mod)
output = func_5823()
func_5824 = relay.Function([], output)
mutated_mod['func_5824'] = func_5824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4988_call = mod.get_global_var('func_4988')
func_4990_call = mutated_mod.get_global_var('func_4990')
call_5837 = func_4988_call()
call_5838 = func_4988_call()
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_5853 = relay.TupleGetItem(func_2675_call(), 1)
call_5854 = relay.TupleGetItem(func_2676_call(), 1)
func_2367_call = mod.get_global_var('func_2367')
func_2368_call = mutated_mod.get_global_var('func_2368')
call_5868 = func_2367_call()
call_5869 = func_2367_call()
output = relay.Tuple([call_5837,call_5853,call_5868,])
output2 = relay.Tuple([call_5838,call_5854,call_5869,])
func_5881 = relay.Function([], output)
mod['func_5881'] = func_5881
mod = relay.transform.InferType()(mod)
output = func_5881()
func_5882 = relay.Function([], output)
mutated_mod['func_5882'] = func_5882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mod.get_global_var('func_3538')
func_3540_call = mutated_mod.get_global_var('func_3540')
call_5896 = relay.TupleGetItem(func_3538_call(), 0)
call_5897 = relay.TupleGetItem(func_3540_call(), 0)
const_5921 = relay.const([[-1,2,7,-3,-6,-1,5,3,-9,2,-7],[9,-2,5,9,-9,8,-2,-1,-10,-7,7],[8,-5,-7,7,10,1,-10,-2,-10,-1,-4],[7,-9,10,6,1,-9,1,3,-10,-3,-3],[-1,1,-7,4,-7,-5,-6,4,4,7,2],[-9,-7,8,-4,-2,7,8,8,-3,3,-3],[5,-4,-3,-2,3,9,-2,10,7,3,-5],[-8,-5,10,-9,10,10,-10,-8,-7,-4,9],[-3,-4,-10,4,9,10,3,3,-5,-5,-10],[-8,-9,-7,1,-9,-4,-7,-9,2,5,4],[-4,-9,2,3,-10,8,6,-2,-1,3,5],[2,3,4,5,-5,4,7,-1,-6,1,-2],[-1,-4,-7,-10,9,8,7,1,9,3,3],[9,-2,4,-1,10,1,6,3,8,-9,3],[8,8,-1,1,10,-5,-5,6,5,9,10],[-4,1,-4,-10,-8,10,-8,-6,-4,-8,-9],[-9,-2,8,2,9,10,10,2,-10,10,6],[-10,8,-7,2,1,10,8,7,8,6,5],[2,7,8,2,7,6,-6,2,-10,1,-8],[-10,9,-2,7,-10,-7,-9,-4,10,-2,7],[-9,8,-3,1,-8,-8,-10,1,-10,-6,-7],[3,-5,5,7,-5,-10,-6,-4,4,-8,10],[-7,-5,3,3,6,3,6,9,9,-10,9],[-2,2,8,2,-10,-8,-3,8,-10,9,8],[-1,-9,-2,-9,-6,7,-9,-2,2,10,-8],[-10,-9,3,-6,-5,9,-1,-4,4,-3,2],[6,3,-5,-8,5,9,10,4,-2,-7,3],[-2,8,1,-6,3,6,-10,10,1,-5,9],[-2,-3,10,-3,-8,3,8,-7,-6,8,8],[-2,3,-4,-6,4,-6,10,7,-10,-6,-10],[9,-3,-8,7,-7,4,6,8,1,-8,1],[4,9,2,8,-4,-7,-2,-5,1,-9,2],[5,5,-4,-4,1,10,1,-9,-3,-6,9],[-7,6,-6,5,10,10,7,-10,-6,8,-3],[9,7,-5,2,8,8,-7,9,-2,3,6],[-3,-8,7,8,-4,4,-9,-4,-2,-2,8],[-7,-3,-8,1,4,-10,5,-8,-1,-10,-4],[5,1,2,-10,-5,9,-3,4,-1,-10,-3],[-10,9,-3,-6,7,-9,-9,-2,-3,-5,4],[-9,4,7,1,-10,-10,4,-8,-4,-2,-5],[-4,-1,3,9,-5,-8,-6,-4,4,10,3],[-9,6,7,-6,10,-1,-7,8,4,4,-2],[-8,9,-2,-7,-5,-7,-2,1,-9,8,-4],[4,2,-7,1,-7,8,2,7,5,8,4],[-10,-9,-8,9,-3,7,-5,2,-4,7,-4],[-1,8,6,-2,9,-7,-1,7,-8,6,-6],[8,7,6,7,2,-5,-6,10,1,-1,8],[-3,3,7,-7,-10,-2,8,-2,-2,-2,5],[-7,-9,-4,7,2,9,1,5,-9,-2,4],[1,-4,-10,-9,8,10,4,-6,8,-1,3],[10,-8,5,-10,-10,6,-3,4,-1,-7,2],[7,-2,-7,-9,-3,-10,-8,2,5,8,-8],[6,-2,-6,10,-10,-7,-1,3,3,-8,8],[-8,-5,-2,2,5,-6,7,-6,10,-3,8],[1,3,-9,7,-7,10,9,7,4,1,1],[-1,-6,-4,-10,-2,-4,-5,6,-10,10,-6],[-4,10,7,7,3,8,3,-8,-4,3,3],[-1,-1,-1,3,-8,2,-4,-3,-10,10,-4],[8,5,-2,10,-6,4,3,8,5,-2,6],[-10,8,-3,-6,3,-1,-7,-7,-8,-9,-2],[-10,-8,-8,3,-6,-3,3,-5,7,4,-6],[-10,-10,-8,1,-1,2,-7,10,6,-5,10],[-7,6,1,-1,-2,2,7,1,1,10,-9],[-6,1,5,-1,5,-10,-1,2,9,-2,6],[-10,9,6,7,-10,-6,-2,-8,-8,10,-5],[-10,-4,-1,-10,6,-1,-1,6,-6,-10,-9],[7,-5,2,4,8,-4,-5,-7,-1,4,9],[1,-5,2,-1,-8,-8,-3,10,-8,1,1],[9,2,-2,-2,-4,-6,1,-6,9,-3,7],[-9,-3,-7,3,2,-9,-1,-1,-2,7,-5],[8,-5,5,5,-1,-1,5,9,-8,-9,-5],[8,5,-2,9,-3,9,3,-3,6,-5,8],[-6,10,-10,-9,-9,-3,-6,-7,4,-10,-7],[9,-1,3,3,-10,2,1,8,9,6,2],[-8,-8,8,-7,1,4,-10,-2,2,-10,-9],[-8,-2,4,10,-1,-4,3,7,8,8,1],[-3,-1,-4,-9,1,-2,4,-2,-2,7,1],[8,1,-5,-10,-7,1,7,-8,-2,4,3],[-8,4,-7,5,-2,6,-1,-2,-9,-3,6],[8,6,2,-2,10,9,1,7,-4,1,2],[-10,2,-3,2,2,-3,9,-8,2,4,-2],[-7,-1,7,10,-3,-4,-2,9,-6,3,1],[9,-7,-7,-2,8,-9,-2,-10,-4,7,-7],[4,-2,-8,4,-8,-1,3,8,9,9,-4],[4,5,6,-7,10,10,4,6,-7,10,-9],[-6,-10,-2,4,-10,-9,-8,9,-7,-5,-9],[-7,6,9,-2,10,-7,6,9,-5,-8,-8],[-7,-10,-3,3,5,-7,4,8,4,7,-8],[1,10,-8,10,5,-10,6,-1,7,1,-6],[2,2,-1,9,1,-7,-8,9,1,-7,-8],[-6,4,-4,7,-9,-3,-7,1,4,-6,2],[5,3,-5,9,-5,-4,-8,5,8,6,-6],[-6,9,-6,-2,-10,-10,-5,5,-2,-6,-3],[-3,-10,2,-4,9,5,1,-2,2,10,-6],[10,-6,6,-7,8,5,2,-6,-8,-6,2],[6,10,9,-1,6,8,2,-6,1,10,2],[5,-8,-2,6,4,9,10,-6,2,-10,6],[4,-2,3,-5,6,4,3,-10,9,2,10],[9,3,-9,-4,7,-4,5,1,-6,-9,10],[-6,2,-4,5,-6,-1,-6,4,-3,9,7],[9,-3,-4,-5,6,-5,-7,5,-5,8,2],[4,5,-6,-9,8,3,-4,6,3,1,2],[-9,3,10,7,7,-9,-1,7,-9,9,-8],[1,2,-8,4,-2,9,-8,-7,4,-8,-8],[-7,10,-2,10,-10,8,6,7,-7,4,6],[-6,9,-9,-4,-8,2,9,-7,-7,-9,-10],[-8,5,-8,1,3,7,9,8,4,4,-6],[-1,-1,1,-3,5,8,9,8,-9,9,-4],[-5,2,10,5,-9,8,-7,10,-10,3,4],[5,10,-5,-4,-9,-3,6,7,9,10,-7],[-6,8,3,-7,1,-1,8,2,-6,8,-10],[-3,8,4,-9,6,10,-3,-5,-2,-2,7],[-10,1,2,5,6,10,8,-3,-6,4,2],[9,-8,4,-3,-10,-2,8,2,7,-1,-3],[10,8,4,-2,-9,-4,9,7,-8,4,9],[5,5,-9,-6,5,-8,-4,5,9,-4,-1],[2,6,4,-2,-3,-2,9,-3,6,3,-1],[4,-2,9,7,-10,5,-9,-7,2,9,6],[-7,-5,9,7,-6,9,6,-3,-8,-4,-10],[-4,7,6,-1,-6,-3,3,10,5,3,-5],[2,3,-2,2,1,8,3,-6,8,5,2],[7,-8,-9,6,9,1,-7,1,6,7,-4],[9,5,9,-1,7,-4,-8,-7,6,-4,10],[-1,-1,6,10,-8,-9,6,-4,8,5,-8],[4,9,3,-6,-5,5,3,-3,1,-4,4],[-8,-9,10,10,-6,5,-4,-9,1,-7,-7],[8,-5,-1,9,1,6,6,1,-5,-10,-2],[-7,7,2,-2,6,1,1,2,-9,-9,-2],[-10,3,-2,4,-9,5,-8,-10,8,-2,-9],[10,5,6,-6,-1,3,-2,8,1,8,5],[-2,8,-1,8,-5,3,10,6,-10,-2,2],[10,-9,-1,-6,3,-9,8,1,-2,-6,6],[6,4,10,9,-10,-4,-9,-8,-1,-2,1],[-2,8,9,-1,-2,9,-3,1,-3,-2,-4],[3,-5,-4,-5,-9,-9,1,10,5,10,-7],[-4,-8,1,-3,-2,-6,9,6,-5,10,-9],[-2,-4,-1,2,1,6,1,1,2,-10,-10],[6,-4,-10,-5,-5,8,-3,-8,-4,-8,-8],[8,5,-3,-6,-6,1,-5,4,8,6,-1],[-2,3,7,6,2,-7,2,2,6,-2,9],[6,9,5,1,-4,4,-10,-9,-10,-10,8],[10,-4,9,1,-5,-9,2,-8,9,-7,9],[8,4,1,-7,-10,8,-1,-9,-2,1,9],[-7,-8,10,1,-1,-9,9,10,8,4,3],[-10,-10,-9,6,-6,-6,9,-8,-7,-3,5],[-6,-9,7,10,-9,-2,-5,-9,8,5,-10],[10,-9,6,-5,4,-7,8,6,-4,10,-3],[-9,-7,-10,1,-1,5,-9,-1,-5,8,10],[8,1,3,9,8,10,5,10,-7,8,-10],[-6,-3,-6,5,-6,3,4,-1,-2,1,4],[2,-3,-4,3,-9,-5,-2,-5,8,-9,-9],[9,-7,6,-4,3,6,-7,6,6,-10,10],[-5,-10,-6,-6,-3,-4,-5,-8,3,-5,9],[1,1,-1,-10,5,-7,8,6,-8,-10,-9],[5,6,-1,6,2,-5,5,-7,8,10,-9],[-1,-2,-3,-3,7,-10,-5,5,-10,9,1],[-3,8,-2,-9,7,-3,-6,3,-9,-7,-5],[-1,-6,-9,-8,10,1,-3,8,-2,-9,-6],[-1,6,3,-8,-8,1,10,8,10,-9,7],[2,1,2,8,7,-9,1,8,2,-8,9],[-1,-8,-6,2,9,9,-9,-2,-9,8,1],[1,9,-5,-6,-9,-3,10,3,5,7,4],[4,-2,-4,-2,10,-4,7,-5,6,-10,10],[8,-3,7,-6,-3,-4,5,5,-3,-1,3],[-8,2,4,-3,-3,10,-6,3,6,4,3],[10,-7,5,1,7,-8,-1,3,7,-5,-2],[-1,-2,-3,9,-6,-7,3,2,-10,3,-9],[8,-8,-6,9,-3,2,-9,4,4,8,-2],[1,-7,2,-9,-2,-1,-4,-5,-6,5,-6],[5,-4,-7,-10,5,10,4,-2,2,-2,6],[1,-8,8,5,8,3,8,-4,8,10,1],[-1,-9,-7,-6,-6,4,2,-7,-5,6,7],[-7,-4,10,4,-10,-4,-8,7,-4,10,8],[10,-8,10,-5,10,6,9,-8,9,8,6],[-4,9,-7,-8,1,-8,-6,-5,-5,-5,10],[9,8,7,-1,3,5,5,-3,5,-4,-4],[-3,-3,7,1,3,7,-8,-7,-7,-6,2],[-4,-6,-8,-4,-1,3,-3,-2,-8,-4,6],[1,-3,-4,1,-10,-1,-4,7,3,-2,1],[-9,-2,8,1,-10,-7,-1,1,9,6,10],[-10,7,6,-2,-9,-2,7,8,5,-2,-2],[5,4,-5,-5,10,3,-1,-9,7,-5,8],[10,1,4,10,-6,-9,1,9,-10,-3,8],[-1,-8,-4,7,6,8,3,-9,-7,-9,3],[10,-6,-5,-3,-5,-2,3,10,10,9,1],[3,6,5,6,-5,-4,-9,2,-1,-8,-3],[-1,-1,7,10,-4,8,-2,-5,-2,7,3],[-2,9,3,-8,-6,-9,1,-1,-4,3,4],[4,6,-2,-10,10,-2,-9,4,-1,-6,1],[8,8,4,-3,-9,-10,3,-9,-6,6,7],[3,3,-4,-6,-4,-7,-4,6,-1,-4,-1],[10,-9,8,-4,-3,8,1,-4,-9,1,3],[-8,3,-3,10,-4,-3,-7,-2,-9,6,-10],[-1,3,-5,7,10,-8,-5,-1,-6,-3,10],[1,3,-9,-9,-7,5,2,4,9,-5,8],[7,-4,4,3,9,6,-6,-2,-3,-7,9],[-10,1,7,-6,7,-2,-8,8,2,7,-1],[4,10,-10,-8,8,-2,-5,8,-5,5,-8],[6,4,5,-6,4,10,7,-1,-1,-1,2],[3,7,7,-7,-7,-10,1,-2,-2,6,10],[-1,8,-4,6,-9,7,7,10,-6,-9,7],[4,6,8,7,7,1,-2,8,-2,-7,3],[-1,-9,9,5,-9,-7,-4,-9,3,1,-1],[10,10,-6,-10,-2,1,10,-3,-10,-4,7],[2,-9,10,-10,2,2,-3,-1,-9,-6,8],[2,10,2,-1,-4,-3,-9,-4,7,10,-9],[10,-7,-5,-9,8,-4,5,6,5,8,-4],[4,-5,-5,-2,1,-6,-1,1,4,1,-10],[4,-4,-8,8,9,-2,-2,-1,-5,6,-1],[2,5,3,-2,6,-1,-4,1,10,3,-6],[3,9,10,-9,10,-4,5,-5,-10,-2,1],[7,5,4,1,3,7,-2,-5,9,10,4],[-9,-2,-2,-10,-8,5,-4,1,10,1,-6],[-6,4,8,-7,1,3,-6,10,8,-3,-3],[-3,-4,10,10,-10,9,-2,-10,-1,-6,6],[9,-8,-6,-9,9,5,5,-1,-3,1,-7],[-1,1,-9,10,9,-5,-6,9,10,-9,3],[2,1,7,9,5,2,-6,3,10,5,2],[-6,9,10,3,-4,-9,2,6,-1,-3,-7],[8,5,5,-3,3,7,-5,2,10,3,-2],[7,-8,1,3,-2,-9,1,9,8,-3,-4],[3,8,-3,-5,8,2,-2,9,10,-8,-10],[-10,5,1,-4,8,-10,-3,7,-7,-1,1],[2,1,-1,9,-10,-10,-1,-2,-5,-4,-9],[7,6,3,3,-9,3,-4,-8,4,6,-2],[-5,3,7,7,6,-3,8,-8,-7,-5,-8],[5,-4,6,4,-8,-2,-1,8,-6,1,-7],[-3,-9,3,-3,5,-6,6,8,10,1,6],[-1,-7,1,6,7,2,-4,-2,-3,-4,5],[-1,-1,10,2,-1,2,-2,8,-8,1,-4],[4,-3,-2,-6,-6,1,-9,-9,-7,-6,2],[2,7,-6,-2,5,-8,-3,-3,9,-7,9],[1,6,10,-1,-9,-2,-4,5,1,-2,-8],[1,-3,3,1,5,-3,4,-5,6,9,-10],[-10,-1,-7,-2,-7,6,-3,1,4,10,8],[-1,-8,-7,-6,-9,6,-9,-2,-9,2,-8],[-6,-1,-4,-8,-4,7,5,-8,-3,-9,-9],[-3,7,-10,7,6,-9,-4,5,-7,-8,-10],[8,-5,-8,-1,3,10,6,-9,-9,6,1],[3,1,-6,6,-5,-7,-7,-5,2,4,7],[3,3,-4,-2,-1,2,6,-5,7,7,10],[-9,-4,-4,4,-8,-1,8,2,-10,-6,-6],[-4,5,3,-3,7,10,2,8,9,-2,-7],[-8,10,-3,-2,-1,4,-8,-9,9,-3,-7],[-5,3,-3,6,5,2,-2,4,-5,-2,2],[-3,-1,8,3,2,-4,-4,10,-10,4,2],[6,9,10,8,1,4,-4,-7,10,5,-4],[3,-8,9,-5,-7,-9,-10,-8,-3,-10,1],[1,-2,-5,5,7,3,2,-7,-5,6,1],[-4,-4,7,4,-1,6,-6,-2,10,10,5],[7,9,-8,-5,10,-9,-6,2,6,7,-7],[-5,-5,-8,-10,8,-7,-1,-1,6,-8,10],[3,6,-5,3,5,1,-3,-6,4,-2,1],[7,-10,3,-8,-3,-5,10,1,4,-1,7],[-5,-9,-9,1,-6,1,-1,-5,-9,2,7],[-4,7,-4,2,-2,-8,-8,-4,6,7,-8],[-4,-9,-1,-7,-5,5,-8,10,-4,-10,5],[-9,7,9,-5,-4,1,-1,6,-9,10,3],[-6,-9,5,-3,9,9,9,10,6,2,7],[10,-3,6,-4,1,-4,-10,-2,-9,-5,7],[-8,-8,10,2,5,-3,-10,2,-10,1,5],[-2,4,-8,-10,7,-1,-2,6,10,-5,-10],[2,8,4,5,-3,-6,8,10,-8,-6,1],[-2,2,-8,5,-6,1,8,-5,5,-9,9],[-5,-5,-5,4,9,-2,-7,1,-8,10,1],[5,2,8,-10,-1,5,2,9,3,-3,2],[-5,4,10,-5,4,8,1,-9,2,-8,8],[-4,-5,8,2,-9,-10,10,-9,-2,-6,-8],[6,-8,9,-3,7,7,-4,1,2,-5,-3],[4,-2,4,7,-3,-1,-1,-8,-9,-4,6],[-9,6,-6,-4,7,-2,4,-5,10,-6,-10],[3,-3,-10,9,7,-10,1,-7,7,-5,-1],[5,-2,7,-9,-4,2,5,6,-7,-5,-9],[4,-1,10,-8,-7,-8,-1,6,1,-10,-9],[4,-2,10,9,-4,-5,-4,5,5,-8,-2],[9,6,-9,-2,5,4,8,-7,-5,-2,7],[7,-9,-3,-7,-5,-2,6,-1,-2,4,-6],[-1,-9,-3,9,6,-2,-8,3,2,2,1],[7,-4,-8,6,1,6,-6,-1,-1,-10,-6],[-9,-4,9,7,1,1,5,-6,-3,8,6],[-8,-6,-8,3,-5,-4,-3,4,-2,6,-4],[5,9,6,-7,9,1,-6,6,-4,-2,-1],[-1,7,-3,9,3,7,1,-1,-8,-6,10],[10,3,-6,-2,2,-1,7,1,9,-9,7],[-2,8,1,-8,8,-4,4,6,4,-9,6],[-8,1,2,-6,8,9,7,-2,10,5,-10],[3,-4,3,-3,9,-5,-1,-10,8,-6,-6],[9,-7,5,-3,10,-3,5,8,-3,1,7],[7,-10,5,-1,8,6,-9,9,8,-9,6],[6,-2,-10,9,7,-3,10,-5,-7,-3,10],[6,5,3,-6,6,2,1,4,-9,7,-8],[-10,-9,7,1,-5,9,4,2,2,2,-9],[-5,-2,-2,6,5,4,-2,8,-10,-2,-3],[-2,6,6,-7,-10,7,-9,-10,-2,1,-1],[-9,-6,-3,8,7,-4,6,-1,-4,7,3],[-10,-3,8,-10,-4,-9,6,3,10,5,-2],[-2,6,-2,-7,1,7,-2,5,-7,9,-3],[8,10,-5,9,-8,8,7,6,-6,5,-2],[-2,9,8,-3,-4,7,8,10,7,8,-1],[7,1,6,-1,-1,5,-2,9,-4,-8,-8],[2,2,8,-5,5,8,-9,1,5,3,-3],[5,-2,-6,1,-7,-4,10,-10,-2,-1,2],[7,2,-5,-3,1,2,-8,-4,-6,10,3],[-3,9,10,6,-1,-5,-6,-7,-1,-9,-10],[5,6,8,-1,-7,1,-10,7,-3,2,1],[-10,-6,-5,-6,-2,2,4,3,8,-10,8],[-2,-9,-3,-2,-8,3,5,-1,-4,4,10],[-3,-3,-4,3,-4,-7,9,3,-6,-6,-5],[6,2,10,3,1,-2,10,7,10,-6,6],[8,-9,-10,-3,3,-2,9,-10,1,-10,-6],[-3,-2,6,-9,-5,2,3,-8,9,-6,-6],[-5,7,8,3,10,8,-6,-1,-5,-3,-2],[-10,-3,-2,2,-3,-4,4,-10,7,10,1],[8,-2,10,-1,-2,-1,-10,3,2,-10,8],[10,1,-9,3,-9,-4,7,6,6,-8,2],[-1,1,-1,-2,7,9,1,10,-8,6,-2],[5,2,-6,8,10,3,3,-4,-4,-6,8],[-3,-1,7,-2,-4,-7,-6,-9,-2,-4,-2],[-10,-9,-7,9,2,4,-2,3,-2,-1,-3],[3,-1,-1,-10,1,1,-6,5,-4,7,2],[-10,5,2,-10,-5,5,8,1,10,7,4],[-8,9,7,1,-7,-4,1,-8,-9,2,9],[1,-7,3,-10,9,7,-1,6,-2,1,7],[2,-10,10,-6,-3,10,5,6,-2,5,-5]], dtype = "uint16")#candidate|5921|(324, 11)|const|uint16
bop_5922 = relay.divide(call_5896.astype('float32'), const_5921.astype('float32')) # shape=(324, 11)
bop_5925 = relay.divide(call_5897.astype('float32'), const_5921.astype('float32')) # shape=(324, 11)
func_4432_call = mod.get_global_var('func_4432')
func_4433_call = mutated_mod.get_global_var('func_4433')
call_5926 = relay.TupleGetItem(func_4432_call(), 0)
call_5927 = relay.TupleGetItem(func_4433_call(), 0)
output = relay.Tuple([bop_5922,call_5926,])
output2 = relay.Tuple([bop_5925,call_5927,])
func_5931 = relay.Function([], output)
mod['func_5931'] = func_5931
mod = relay.transform.InferType()(mod)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5931_call = mutated_mod.get_global_var('func_5931')
call_5932 = func_5931_call()
output = call_5932
func_5933 = relay.Function([], output)
mutated_mod['func_5933'] = func_5933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5310_call = mod.get_global_var('func_5310')
func_5311_call = mutated_mod.get_global_var('func_5311')
call_5953 = func_5310_call()
call_5954 = func_5310_call()
var_5961 = relay.var("var_5961", dtype = "uint16", shape = (324, 3))#candidate|5961|(324, 3)|var|uint16
bop_5962 = relay.less_equal(call_5953.astype('bool'), var_5961.astype('bool')) # shape=(324, 3)
bop_5965 = relay.less_equal(call_5954.astype('bool'), var_5961.astype('bool')) # shape=(324, 3)
uop_5967 = relay.sqrt(bop_5962.astype('float32')) # shape=(324, 3)
uop_5969 = relay.sqrt(bop_5965.astype('float32')) # shape=(324, 3)
output = uop_5967
output2 = uop_5969
func_5979 = relay.Function([var_5961,], output)
mod['func_5979'] = func_5979
mod = relay.transform.InferType()(mod)
mutated_mod['func_5979'] = func_5979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5980 = relay.var("var_5980", dtype = "uint16", shape = (324, 3))#candidate|5980|(324, 3)|var|uint16
func_5979_call = mutated_mod.get_global_var('func_5979')
call_5981 = func_5979_call(var_5980)
output = call_5981
func_5982 = relay.Function([var_5980], output)
mutated_mod['func_5982'] = func_5982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1637_call = mod.get_global_var('func_1637')
func_1638_call = mutated_mod.get_global_var('func_1638')
call_5990 = relay.TupleGetItem(func_1637_call(), 0)
call_5991 = relay.TupleGetItem(func_1638_call(), 0)
output = call_5990
output2 = call_5991
func_5996 = relay.Function([], output)
mod['func_5996'] = func_5996
mod = relay.transform.InferType()(mod)
mutated_mod['func_5996'] = func_5996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5996_call = mutated_mod.get_global_var('func_5996')
call_5997 = func_5996_call()
output = call_5997
func_5998 = relay.Function([], output)
mutated_mod['func_5998'] = func_5998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3819_call = mutated_mod.get_global_var('func_3819')
call_6026 = func_3818_call()
call_6027 = func_3818_call()
output = call_6026
output2 = call_6027
func_6057 = relay.Function([], output)
mod['func_6057'] = func_6057
mod = relay.transform.InferType()(mod)
mutated_mod['func_6057'] = func_6057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6057_call = mutated_mod.get_global_var('func_6057')
call_6058 = func_6057_call()
output = call_6058
func_6059 = relay.Function([], output)
mutated_mod['func_6059'] = func_6059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_606_call = mod.get_global_var('func_606')
func_607_call = mutated_mod.get_global_var('func_607')
call_6072 = relay.TupleGetItem(func_606_call(), 2)
call_6073 = relay.TupleGetItem(func_607_call(), 2)
output = call_6072
output2 = call_6073
func_6079 = relay.Function([], output)
mod['func_6079'] = func_6079
mod = relay.transform.InferType()(mod)
mutated_mod['func_6079'] = func_6079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6079_call = mutated_mod.get_global_var('func_6079')
call_6080 = func_6079_call()
output = call_6080
func_6081 = relay.Function([], output)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5057_call = mod.get_global_var('func_5057')
func_5058_call = mutated_mod.get_global_var('func_5058')
call_6137 = relay.TupleGetItem(func_5057_call(), 0)
call_6138 = relay.TupleGetItem(func_5058_call(), 0)
output = relay.Tuple([call_6137,])
output2 = relay.Tuple([call_6138,])
func_6142 = relay.Function([], output)
mod['func_6142'] = func_6142
mod = relay.transform.InferType()(mod)
mutated_mod['func_6142'] = func_6142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6142_call = mutated_mod.get_global_var('func_6142')
call_6143 = func_6142_call()
output = call_6143
func_6144 = relay.Function([], output)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6169 = relay.var("var_6169", dtype = "float32", shape = (4, 9, 14))#candidate|6169|(4, 9, 14)|var|float32
uop_6170 = relay.log2(var_6169.astype('float32')) # shape=(4, 9, 14)
const_6172 = relay.const([[[-5.117734,3.265653,-5.453590,2.701108,-6.480860,5.134825,4.666215,9.772388,-2.462958,-9.762183,-5.893755,2.993558,5.161517,7.762789],[2.486079,-5.471777,-7.432111,8.666406,9.091008,2.496192,-3.149902,7.116277,-5.118470,-5.957165,-1.939384,-1.807773,-6.159997,-1.464752],[2.253554,9.646899,-1.672703,3.299336,8.414267,6.082770,1.846826,8.216356,6.916978,2.461848,0.413859,-8.583936,-6.323391,-5.477307],[4.825465,-9.559531,-4.681266,5.717979,8.053532,-5.913140,2.489306,5.043174,-2.622778,-3.851994,-9.962442,-5.082167,4.994178,7.770451],[2.284127,-9.352020,-8.751889,-6.219290,-8.683341,7.968480,-0.958798,-8.359318,5.432072,-0.844038,-5.822034,-3.608829,-7.219344,-3.451676],[9.589265,-0.347112,8.976122,4.413935,6.090071,6.610779,7.077799,-0.598758,-0.466145,0.174797,-8.798657,9.749052,-2.233410,7.123987],[-7.848901,-1.956686,-6.382301,9.494861,0.812403,0.216680,-4.705811,-7.271844,-5.523559,7.921882,-3.180908,-0.982418,-1.974067,2.625521],[4.695834,4.512892,0.256943,-6.130191,-5.395668,1.901575,-8.183193,7.295447,7.255583,3.575410,-0.964349,-1.009162,0.044530,2.427068],[8.365828,3.647098,-8.015674,-6.081793,-3.224831,2.772176,-8.167586,1.864590,0.663514,9.605328,-3.407141,-9.284484,3.001564,9.921141]],[[-9.242169,-9.546284,-6.678224,-9.488605,8.413339,-4.912133,8.248847,-7.027652,-7.363701,6.238312,-9.225792,6.004728,6.945978,9.961125],[-0.132326,6.973037,-8.878037,-4.813781,3.053201,8.011135,-0.448553,7.409824,9.106720,0.421768,5.205102,6.646948,-4.875795,-5.904955],[3.922102,-8.451544,2.417765,-9.443024,-3.209684,-0.800428,2.659482,-7.399801,0.857527,-1.489903,1.903276,-8.168244,-0.066005,4.740454],[-6.750713,-8.441853,1.402369,-1.116535,-2.143633,-9.781695,6.430972,0.579039,-5.211640,-3.123550,6.002091,-3.251569,3.088047,2.504486],[6.775176,-1.281852,-0.771196,8.808174,0.742069,-9.577329,-5.284186,-3.679386,5.996246,-4.847767,9.267084,3.440731,0.548896,-5.899754],[3.632398,-7.628992,-8.773132,-9.253489,8.500394,-2.609840,9.688985,7.175376,-7.373204,-5.472826,1.081327,1.442321,1.962357,1.845133],[3.441393,3.702698,3.005154,6.216728,-1.989555,-9.331863,1.481305,4.378359,-6.652958,-6.359536,-0.687305,-9.803466,5.492561,1.866804],[6.748681,-1.394475,-4.503160,7.495728,9.287134,0.070659,-8.388055,-6.519750,-5.301413,3.398701,-5.075207,6.764324,-5.953515,-3.841617],[-8.925187,-6.890724,-8.016434,-1.172087,5.465517,-9.801240,-1.528092,-0.223327,4.707026,-4.248907,-7.315450,-9.117273,0.464487,-2.484725]],[[-8.667690,3.162536,-1.004605,-5.030753,-5.718774,1.228924,-6.986959,7.760303,3.568550,2.570096,-6.396704,-5.266346,4.575955,4.991858],[8.798717,-4.909149,-2.334142,-5.352135,-5.272963,9.702379,6.501959,-4.924512,-2.014901,-5.400176,5.119528,-7.041132,8.074775,8.447139],[-6.560018,0.708201,-4.851985,9.794221,9.304053,1.999191,-7.063598,6.028336,7.753743,2.495427,4.116667,5.083144,1.328261,-4.116631],[-2.111010,-3.840770,-0.664467,-5.689584,3.338798,9.521836,6.187223,-1.245390,6.912922,5.450692,7.423221,-1.368411,-2.120119,-9.284141],[7.162738,-0.515133,-0.815312,-6.939631,-1.253037,2.491473,-8.830459,7.507844,0.846616,1.811845,4.551614,6.377000,8.058039,3.656879],[8.084011,-9.439470,-8.350211,-6.290108,2.281325,3.496613,-3.572962,9.403352,2.314041,-6.710275,2.010347,8.588320,0.426486,9.266848],[-1.025566,-4.653735,-0.100749,-3.530419,-1.962527,0.914388,-0.992974,8.055494,6.579836,3.378859,4.510622,1.035753,-4.699377,1.852967],[4.090792,-0.167333,6.170839,7.057489,9.377936,-2.513368,1.131076,8.949500,-7.968418,-0.615985,-8.404495,-7.396640,0.152416,-0.774769],[-3.664014,9.933804,-6.776466,1.548618,4.893325,-6.488207,0.846531,-5.041879,-8.837516,-0.465400,-1.527940,0.273501,-4.496435,8.974282]],[[8.177793,2.463093,6.307839,-6.210278,3.426654,-4.753207,-5.616116,7.661600,4.088141,-9.332893,-3.972136,0.810469,9.933837,7.937081],[-1.640654,-3.625635,-9.572855,-4.651774,-1.540968,4.876901,-8.049886,-0.212817,-2.911040,-0.491295,6.240188,-2.213190,3.727097,9.521796],[-9.970499,9.064859,0.536224,-9.536329,9.012714,0.304559,0.597879,5.805024,-3.662675,5.715257,-4.753769,7.092591,-7.299118,1.696996],[7.585624,6.166626,6.134333,-6.472910,-3.302679,-1.408436,8.449896,0.660783,-8.425183,9.013723,2.231588,-1.187256,-0.087835,4.841028],[3.354812,0.946492,8.356160,-2.796439,7.085843,8.099558,6.564228,6.551354,-1.981547,-3.551507,-4.165387,0.358563,-3.828205,1.043640],[0.938238,3.762583,3.253771,6.874196,7.488696,4.735416,9.870405,-6.254351,-4.871424,2.786891,6.167826,5.213048,8.590023,6.750779],[-6.916862,5.163683,5.857395,-4.950009,7.515577,-9.956555,2.055512,8.662586,-8.733072,-0.685128,0.822275,0.096352,7.840087,-9.710896],[-9.500305,-3.598678,-9.724643,-2.919552,-9.818053,-4.024587,1.070271,8.588136,-3.034529,7.226172,-7.000271,2.592529,8.496566,-4.322118],[-8.820530,-7.532803,-3.634456,5.032318,-3.745573,2.708348,2.109833,-5.198635,-4.106649,0.410998,-3.741645,5.635511,-8.136978,-4.231515]]], dtype = "float32")#candidate|6172|(4, 9, 14)|const|float32
bop_6173 = relay.mod(uop_6170.astype('float64'), relay.reshape(const_6172.astype('float64'), relay.shape_of(uop_6170))) # shape=(4, 9, 14)
func_5360_call = mod.get_global_var('func_5360')
func_5362_call = mutated_mod.get_global_var('func_5362')
const_6177 = relay.const([4,-3,-3,-10,5,-8,2,2,-1,-6,5,-9,-4,6,-4,6,-8,-3,-5,2,4,10,-1,-7,-5,7,2,-7,-6,2,5,10,-6,2,5,1,3,-7,-2,-7,9,9,4,10,10,-10,8,6,-2,-3,-4,8,6,10,-2,-6,-4,2,2,6,4,7,-5,-5,-3,3,5,-5,-9,-10,3,-9,3,-5,-5,-9,6,-10,8,5,4,-1,9,9,-10,-8,4,-1,1,4,-6,7,-8,10,-2,9,5,4,-5,-4,3,9,-9,4,8,-10,-10,4,-3,6,-3,1,5,4,8,7,9,-1,-8,-10,5,-1,-6,5,-1,-5,5,4,1,2,-3,-3,6,-3,-8,-1,5,-10,-6,2,-3,4,5,10,4,-7,2,3,5,2,-9,8,4,-6,-10,-10,7,3,-1,-10,-4,6,-9,3,3,7,10,-7,-3,3,-1,-8,-6,-2,1,-2,9,4,6,-1,-5,-2,-6,-7,2,-2,-4,3,9,-7,-5,9,8,1,-1,3,-1,-10,4,5,9,10,8,-5,7,9,-2,8,-10,-6,-3,6,5,-10,1,-4,-5,-6,-8,-9,-3,-8,5,-7,-7,5,-3,6,4,5,-3,10,5,-8,6,-9,6,-6,-3,7,7,2,2,7,3,-5,-3,4,-10,-5,2,7,-9,-8,-7,6,6,5,-3,-5,-4,-5,-5,9,1,-2,-5,-10,2,-1,-4,5,3,9,-2,-4,-9,5,8,-9,-7,-4,2,9,4,4,-6,-10,-1,-7,-5,1,-2,8,-10,10,2,10,-8,7,-8,9,-2,-3,10,-7,-2,9,-5,-3,5,-2,7,-10,-10,6,10,2,-6,6,-6,1,1,10,-8,-1,-6,10,5,-8,-9,-5,-2,2,3,-4,-2,6,6,1,1,-6,7,10,-8,-6,-3,-9,-9,2,10,10,-2,9,-4,-1,4,-2,5,-2,-10,-1,1,-7,10,10,-9,6,-9,-9,-5,6,8,-8,-1,6,-9,4,7,-10,-3,1,-3,3,-9,-2,3,-4,9,-3,-2,-10,8,-3,-5,3,3,2,-10,5,7,4,9,-2,9,7,-8,4,-2,2,8,-7,-1,7,4,-1,-9,-5,-4,-7,4,-6,-2,10,-7,-1,-8,-8,-9,-2,-6,6,-9,-6,-7,6,6,6,4,9,-6,8,9,5,-10,-1,-10,-4,7,2,10,5,-1,1,5,-7,-10,-9,3,-9,10,1,-8,-1,-4,8,10,-9,4,-6,-10,4,-10,-3,6,9,-3,-8,-5,7,-1,-3,-8,-1,2,3,-4,6,-7,-8,10,-9,-8,-5,5,2,6,-6,-8,7,8,-6,7,6,-8,9,4,2,-6,-4,-8,8,2,8,-4,-1,-5,5,-6,7,7,-3,-5,-10,-3,-3,-1,-5,-6,-4,-8,-5,2,6,-10,6,-1,8,-6,-7,5,8,-3,-2,7,-1,10,9,-3,4,10,-3,-8,8,-3,1,-5,5,-5,6,2,-7,1,-6,1,-10,-9,3,-5,-1,6,-6,2,-10,10,-7,3,-7,-9,1,-5,2,-5,1,-8,10,-4,-6,10,3,9,-4,-5,-9,6,-6,-2,-4,7,-8,-8,8,5,-10,9,-6,-5,-3,3,-7,-1,-1,3,-1,-3,-5,7,4,-7,-8,-8,-5,7,3,9,1,1,4,-7,4,3,-2,-3,2,-1,-6,-7,1,-10,-3,2,-10,6,-9,-8,5,-4,-4,3,9,-8,-4,10,8,10,9,-7,-7,1,-10,-2,-4,1,-5,6,10,-1,-9,-10,10,-10,3,8,-2,7,9,6,6,-1,-6,7,1,2,10,6,-3,-9,-4,6,5,10,3,-9,-5,-9,7,9,-5,-7,5,5,2,4,-10,-5,-6,-10,1,7,8,-7,2,-3,6,-2,-7,-9,-8,6,7,-2,6,-9,9,-3,2,4,-7,-2,10,6,-8,6,-1,-5,-6,9,-1,9,6,1,-3,3,3,-4,9,10,-6,5,-3,-4,-9,10,-3,2,-2,-7,-7,6,-8,-2,-2,-4,1,4,2,-2,2,3,-3,-5,7,2,4,5,-10,-9,-9,1,-4,5,-2,9,1,9,8,-10,6,10,-2,2,-1,-6,-5,2,1,-7,4,-7,9,-10,-10,1,-2,5,-5,-10,7,-9,-1,2,-8,-7,5,9,1,-1,8,6,3,8,8,4,-1,8,4,8,-6,-6,8,-5,3,-10,7,4,9,8,9,-3,-7,-6,10,2,-6,9,4,-3,-1,1,-8,8,7,5,9,8,-2,6,-6,-7,7,-8,-1,7,3,10,2,-1,5,7,-5,-10,1,8,-2,-2,3,9,1,6,3,5,3,6,-1,1,-10,-4,7,-10,9,10,-10,-7,-7,4,10,-7,5,-2,10,4,-4,-3,-2,-2,3,-2,2,-5,-4,-9,8,9,3,2,3,-5,4,-10,1,7,5,-10,-1,-6,-5,9,-4,9,-10,-1,6,-1,-6,-7,4,-2,5,6,8,-1,8,8,-10,9,7,2,10,6,-4,-2,6,7,-5,-7,6,5,10,8,-2,8,1,-5,-3,6,3,-6,-1,10,8,10,-3,-2,2,-3,-10,-4,-10,1,-9,3,-6,-10,-3,-4,6,-7,-3,-4,-10,9,-7,-3,3,4,-3,-5,5,-6,6,9,6,-2,8,3,-2,-10,-7,-10,8,-2,9,2,3,-2,9,-2,1,5,-4,9,-3,7,-3,10,-8,-4,2,-3,-5,-7,-8,1,-4,9,7,4,-7,1,9,-3,8,6,-3,-6,-3,3,1,-1,10,-5,-9,8,3,8,-3,-8,6,10,2,10,-8,-9,4,-7,9,1,4,-4,9,6,-10,-2,8,-10,7,-8,-2,7,6,-2,8,4,3,9,-9,5,-9,10,8,-2,9,-3,6,6,-5,-6,4,-7,8,-10,-10,8,1,-1,-7,5,2,8,-9,9,-5,-9,6,5,-1,-3,-7,2,-9,8,-5,-6,2,-6,-8,-6,-1,1,10,-1,10,-2,5,4,9,3,-4,3,-3,-8,-6,-6,-9,4,5,-10,9,2,8,-9,-10,2,-9,2,6,5,-4,8,-9,1,-8,-1,-3,-3,2,7,-2,8,4,5,1,9,-2,9,1,-5,2,-8,-10,-5,10,-4,1,-8,-1,-4,-5,-8,-1,-8,6,1,-1,3,7,4,10,-4,10,-5,-4,-5,-1,4,9,-2,5,-3,2,8,3,-7,-1,-3,2,2,-6,-5,-10,-9,-2,4,-4,-6,10,-6,-7,6,-5,-9,-9,-2,-9,-2,-7,8,1,9,-8,4,8,-2,4,-2,-9,7,-1,-2,8,-1,-4,6,-2,3,-7,-7,8,3,9,4,-8,5,9,-2,-1,4,2,3,3,4,-6,9,2,7,-9,7,-1,7,-10,-9,-1,-10,-10,-7,-10,7,3,9,7,-7,8,-2,-6,1,7,1,-2,3,4,7,2,-8,-9,10,-5,-2,1,-4,-4,-7,2,1,8,7,3,-6,9,1,2,-4,8,-4,10,10,-10,7,4,7,1,6,2,-10,-5,-9,-2,-8,10,1,-9,-6,-7,-2,-10,-5,-4,4,10,-7,4,-5,-10,9,4,-2,3,1,-10,1,1,10,6,3,7,-2,-5,-9,10,7,-10,-7,4,2,-1,3,-10,1,-6,-1,-4,7,-10,6,-6,3,1,-10,-8,-10,-7,4,7,-1,-10,7,-5,-3,1,-2,4,5,-7,-10,-7,-5,5,-10,-5,-7,-3,-8,9,3,5,-8,-3,4,-6,-7,7,7,-3,6,10,-2,-8,-3,-4,-6,4,-5,5,-6,-6,-7,-7,6,-3,-8,6,8,-2,8,9,-4,7,9,1,-6,8,-1,-8,-5,-1,-6,4,-10,8,2,-3,-8,6,-6,-3,-3,6,8,-2,6,5,-10,-9,5,8,3,-4,4,8,-4,-2,2,2,1,2,-7,1,-5,-8,6,-10,1,-9,1,-7,-8,5,-7,1,-2,5,-1,-9,-7,-9,-6,1,2,-2,-9,9,8,-1,-10,2,7,-1,6,-5,8,-5,2,2,7,-6,-3,-8,-6,5,-3,-7,-6,7,10,-2,-5,-3,-2,10,10,-8,10,5,6,1,9,-8,-6,-9,-6,-7,10,7,-6,3,-4,1,8,-9,8,-4,7,3,8,4,-3,-4,-2,4,9,-5,10,-8,-2,5,-6,-6,-2,8,3,3,-2,8,7,1,-3,10,2,4,-4,3,-9,-2,-10,-10,-4,-8,9,2,1,-1,-10,8,8,6,-10,-1,-10,1,-7,4,5,10,1,9,5,-6,2,7,-5,-1,3,-7,6,4,10,-5,-1,10,-6,2,8,6,-4,-9,7,-6,-3,3,9,-3,5,-6,6,6,5,-5,10,5,6,10,8,-2,-9,10,-2,8,4,4,2,-2,-2,1,8,-3,-2,6,1,10,-4,-7,-7,4,1,-9,-7,-9,8,10,-8,10,8,-1,-7,8,-5,-6,1,2,-7,6,-4,5,-5,-7,8,4,-7,-4,7,-4,6,-3,-1,1,-7,-5,2,-10,7,-1,-9,10,7,10,5,-6,-7,9,5,-9,-9,-1,6,-7,3,7,-10,-7,2,-2,-3,-7,-9,-10,8,-5,4,7,1,3,1,-5,-9,-1,2,-8,-4,-5,3,7,5,-10,10,-6,-1,-5,1,5,-2,10,2,1,3,8,3,9,7,-4,-5,10,-3,10,4,-3,2,2,-1,9,-1,10,-2,10,8,-10,8,3,-6,-5,-8,1,-2,-5,8,-7,-1,-10,7,6,-8,10,-8,-7,-4,7,1,-4,-10,5,3,6,-8,10,-8,1,-5,-2,-4,7,3,1,-1,6,6,-9,1,6,4,5,2,-10,6,10,-2,7,-1,1,5,-3,-9,1,-10,1,1,-7,-1,2,8,-7,-6,-8,-5,7,6,-1,4,5,9,7,-10,-4,1,10,5,2,2,-8,-8,-6,-7,-7,1,5,8,9,-8,10,-9,7,-8,5,8,8,10,-10,5,10,-9,-3,8,-4,-4,-4,-7,-7,1,-6,7,4,-1,6,2,-9,10,-10,5,5,-10,-4,-9,1,-5,8,4,9,6,9,-3,1,-4,2,-4,-9,-5,1,-4,-3,-1,10,2,-1,9,6,-10,-3,-7,4,-3,6,-7,-9,9,-1,2,-8,-5,3,-8,-3,-8,-5,-3,-6,3,2,1,5,7,2,9,6,-6,-7,-9,-5,9,2,8,-10,-2,-2,-8,-2,-3,4,4,-8,-8,7,7,6,9,-10,6,7,-4,10,6,-7,-8,-2,1,-5,7,8,-1,4,2,6,-5,7,-1,-1,1,-7,9,9,9,8,-5,4,1,-7,-1,1,7,-5,-7,7,-4,-4,4,-2,-9,-1,-9,10,2,-2,-2,6,3,10,-8,7,-1,-7,-6,8,-9,2,3,-7,1,7,-6,-5,-6,8,-1,-8,-8,5,-1,-1,-1,10,7,10,-9,-3,2,6,2,2,1,-6,-4,-4,6,-7,10,-5,-7,5,4,2,6,3,-2,-3,-4,1,-2,5,2,-6,-9,1,8,1,6,7,9,-1,-5,-3,3,-7,3,-4,-3,-9,-1,-8,8,10,-5,7,-5,7,3,8,-8,-5,-8,5,-9,-6,7,-9,7,1,6,-6,-6,-2,-4,7,7,2,10,7,-4,-10,-10,7,10,-7,-4,9,7,1,4,-3,1,-6,-5,-10,7,1,9,-5,6,7,-7,9,2,5,-9,6,-6,-9,-5,-9,9,2,-7,-10,8,-2,8,9,3,-3,-4,2,-1,-10,-10,-1,-10,8,9,-10,-7,-2,-6,-2,-4,-1,6,-8,-4,3,9,4,8,-9,-2,-6,1,-4,8,6,-3,-8,-10,-5,-7,10,-4,-5,10,1,-3,3,-4,1,-2,-4,5,3,-10,-2,7,-3,6,-7,-2,-8,-5,8,-7,3,-7,-2,9,-8,4,-6,-1,5,-6,6,1,2,-7,7,-9,-1,7,7,-1,-7,-6,-7,3,-4,4,-5,-6,-3,7,-6,10,1,3,5,4,10,-6,-6,-10,-6,-2,9,9,-10,-2,3,4,-1,-3,-2,8,-6,8,3,-2,-2,3,-2,-3,-1,1,-7,9,1,-4,-6,4,9,3,9,3,10,3,10,-6,-1,6,-1,7,6,6,4,-5,-1,-4,-4,2,-5,-7,10,-8,2,10,9,-7,9,-7,3,-5,-10,5,-6,-9,-9,-7,-10,2,9,7,-9,2,-8,-8,-3,-5,2,9,4,-2,-4,4,2,-8,-5,-8,9,-10,-1,8,-3,-6,-1,-6,3,-8,7,-3,-5,9,-5,-6,-6,-1,-7,10,-10,-9,-3,5,-5,5,6,-2,-10,-3,-9,-1,-7,2,1,-6,-10,1,-3,3,1,1,-7,-8,-3,6,-2,-7,-9,-3,-2,-9,-7,10,-7,8,-1,5,10,-7,-6,5,7,-9,10,5,4,-6,6,-10,7,3,7,-5,3,1,4,9,7,-8,-1,-1,-8,-5,3,7,3,9,8,-10,6,10,9,-1,-9,-5,3,5,-3,6,-6,-9,5,-1,-1,-5,4,7,7,2,-9,6,5,3,-2,5,6,-8,-1,5,2,1,5,1,-7,8,10,-6,-7,-4,-10,8,-4,-6,-5,-6,-2,5,4,1,-9,-7,-5,5,-4,3,-7,-1,-7,-5,-9,-1,8,10,2,-5,-10,-9,5,-9,10,-6,-2,7,3,4,-2,5,-3,-6,-4,-3,3,-1,5,-9,1,1,2,3,-9,-9,1,3,-7,-8,-9,-7,-4,-1,8,3,7,3,3,5,10,-5,8,-7,-8,-7,-6,1,5,-9,4,-4,-10,-2,-2,7,3,-7,3,-7,8,9,-10,-6,-2,2,8,1,-5,-1,4,-1,1,9,1,-6,-9,5,-7,6,5,-9,4,-1,3,-5,1,3,5,7,-7,9,9,-5,2,-8,-7,-9,5,9,-1,6,-4,3,2,-9,4,2,9,-2,9,9,-4,-1,6,10,6,-9,-8,2,-2,-6,-9,10,8,-1,1,-6,-6,-8,7,-2,-6,3,-3,2,8,-2,10,2,-3,6,-3,-10,9,3,-6,9,8,-7,-1,-8,9,-3,-3,7,-10,-1,7,-1,-9,-4,-3,-10,9,4,8,-6,-2,-6,-5,-3,9,-9,-5,-5,-9,3,4,-3,-1,-10,8,6,8,-7,8,-10,-5,-3,1,7,7,-10,-3,1,-9,-3,-10,9,2,2,7,6,1,2,-7,2,1,2,-4,-10,-7,-1,3,-4,-9,6,8,-10,1,-1,-3,10,-6,7,-9,-4,-9,1,9,8,2,4,6,-9,5,5,2,9,-2,-9,-3,-5,-9,6,-4,6,10,5,3,5,3,-6,-9,-4,-5,-2,-5,-1,-7,-2,3,6,7,1,5,-10,8,-5,4,6,10,6,-6,10,5,-4,-2,-4,-4,-9,-1,-7,-6,3,-10,9,-8,-7,-3,-10,1,-9,-4,1,7,5,2,4,4,8,-10,-8,-2,-5,-4,-5,6,-9,6,8,-2,9,7,-2,3,-9,-8,1,1,-7,10,-9,6,9,-8,5,-2,-5,-2,-1,10,-9,-6,8,-8,-10,7,-7,9,-6,4,8,10,4,2,-8,-9,1,-7,3,-6,-4,-4,9,-8,10,-10,6,2,1,-9,-8,-6,-2,-10,8,7,2,-4,5,-7,2,3,-7,-9,-9,-7,-7,-8,6,5,7,-8,5,1,4,5,5,-5,3,1,4,-2,3,-1,9,4,10,-4,-6,7,5,9,1,2,-7,9,3,4,1,-8,3,-4,-6,10,-7,5,10,-2,7,7,9,7,7,-1,-7,7,-10,3,-3,-9,9,-10,7,1,6,-8,-4,-8,-8,-9,7,-7,9,3,2,-10,-8,-1,2,9,-10,4,3,8,2,-6,-5,6,-2,6,10,6,-8,-3,1,-10,-10,-8,10,-2,-3,-1,-1,10,5,7,4,3,2,-2,-7,-5,-9,-10,9,1,-2,10,-1,-7,8,2,-1,4,3,8,8,-9,-8,-8,-10,-9,-3,-8,-9,3,-10,9,-1,7,-9,-6,-10,-6,3,-7,10,7,-5,10,-9,3,-7,3,7,4,6,-3,-4,-7,10,9,-2,-5,-1,-2,7,2,-2,-6,6,3,7,-8,-2,7,1,-1,-2,9,-3,-4,10,6,2,9,1,9,7,-8,-4,-10,-1,-7,9,-6,1,-3,-9,-1,3,8,1,4,7,-6,9,8,-8,2,-5,10,-2,4,-5,10,-6,-4,8,-6,1,5,-9,7,10,-5,-10,10,9,3,1,-4,4,6,5,6,-4,-4,-6,10,-4,2,1,8,-5,4,4,3,-5,1,-10,5,-10,7,-4,3,-4,-2,6,-3,-10,-7,4,-4,8,10,-2,2,-4,7,5,-5,-4,2,-6,-1,3,-3,-7,-7,-2,-4,9,-8,4,2,5,8,4,-9,6,-7,7,7,6,-10,-8,5,-8,-4,-10,2,4,7,2,8,-8,-7,6,-1,-8,5,5,7,4,-6,8,10,-7,-1,6,7,6,-1,9,-9,2,5,3,-1,-3,-1,-6,-4,1,2,-3,-1,4,-5,3,2,-5,3,10,5,2,4,-1,10,2,-7,-2,7,-10,1,-4,9,1,-9,5,-6,-4,-4,9,-4,6,9,10,6,-10,-3,1,6,-3,4,-1,-6,1,9,-4,2,-4,9,-8,-4,-1,5,-9,3,5,10,6,-2,-8,8,2,5,2,10,9,10,-10,-4,-5,-1,-4,8,-10,8,1,-1,7,-1,-10,-1,-6,10,6,-7,1,-1,2,7,-2,-10,-3,8,-7,-7,9,-5,-10,2,-7,7,6,2,-7,-10,6,-2,10,-8,-8,-5,4,-1,-5,8,-2,1,-3,8,4,1,-7,-8,4,8,-1,-8,-3,9,3,-1,2,-7,-6,5,2,-9,-10,9,-5,5,-10,-10,5,2,-7,-7,6,4,-6,4,-6,8,-2,-9,2,4,10,-6,5,4,-2,1,-2,1,-5,-7,-8,6,-2,8,2,7,-5,-6,10,2,-1,-9,9,5,5,-6,9,-4,10,4,-1,1,-3,-6,-9,4,-1,-6,-4,-6,-3,3,-6,-10,8,-6,6,-5,-8,-1,-1,-6,-9,-5,-3,6,-5,7,-6,8,2,3,5,6,-10,8,-1,4,-9,7,-1,-8,-1,-8,2,3,1,-4,5,-8,5,6,2,-10,-10,3,-9,8,5,-9,3,3,-7,10,6,-8,-4,9,-6,-7,5,10,10,-3,5,2,-5,1,3,-5,9,-10,-8,1,9,2,9,-5,1,3,-2,-3,-3,9,6,-5,-7,-8,-7,1,-8,-7,7,5,1,-4,-5,8,-9,-4,-10,10,7,2,-8,9,8,-2,-9,4,6,-3,-3,1,-7,-9,-7,4,-6,7,9,-7,-1,3,7,-1,5,8,-4,-2,-5,10,7,-3,10,4,-5,10,1,9,3,2,4,6,8,-3,-6,-2,-8,-5,-6,-10,1,10,-3,1,-9,-4,5,-2,-7,-6,9,5,7,-6,10,-6,5,-2,-5,6,7,8,9,5,-7,8,-10,-3,-4,10,4,4,1,10,10,1,-6,-7,1,1,-4,-5,-2,1,-9,2,6,5,-4,5,-2,1,-5,5,2,-5,-4,1,9,4,5,-1,5,-10,10,-5,2,-2,-6,-3,2,-5,8,-4,9,5,7,-5,-2,1,2,8,-2,1,7,6,-3,8,6,8,-4,-9,1,-3,-1,-6,-2,7,5,2,1,3,-9,-5,7,-10,6,-3,-3,1,3,-9,4,-9,-1,10,10,-7,-6,-2,4,5,-9,-9,7,10,-9,-6,-4,-1,9,8,7,-6,6,10,-10,-3,3,3,4,-1,2,-6,-4,1,10,-1,-5,-4,5,-4,-8,3,-1,-3,-10,9,-4,8,6,1,9,5,-1,4,4,8,-4,-3,-9,-3,-3,-1,-1,-2,8,-3,7,8,8,3,-1,3,-4,-4,5,2,-10,-2,1,8,-9,-4,-8,6,6,9,10,5,-8,-7,-6,8,1,7,-6,-9,5,-3,8,10,-9,-3,10,-3,9,-1,6,-9,9,-8,2,-2,-3,-9,-4,-8,1,-2,-3,9,-2,5,8,-6,3,-4,3,9,2,-8,-10,-9,-2,-1,-5,-5,9,-6,7,5,-8,-2,-6,-7,-10,5,3,-10,-7,10,-9,1,-6,-6,1,-10,10,-9,2,3,1,3,-3,1,-5,-2,-5,-4,-1,3,-10,2,6,8,-5,3,10,2,-10,-3,-1,9,9,-8,-2,4,-7,-5,8,-4,-6,-9,-2,10,-3,6,2,-1,-9,-3,1,6,-4,2,4,-4,-2,7,-5,7,-3,-1,10,-6,-2,-9,-6,2,6,1,9,-2,-2,6,-7,-5,-8,5,-10,-7,10,5,3,-4,-1,-10,-4,-1,1,-2,-2,1,3,10,-9,-4,-6,-2,6,9,3,-8,-2,-3,-8,-5,2,-4,4,-8,2,-9,-3,-7,-7,8,6,8,5,-4,6,7,5,-5,-7,1,7,8,-1,10,-3,-1,-2,-10,-10,-4,-4,-6,-2,10,-4,-1,-3,10,5,-5,6,-7,2,-7,-2,9,-10,6,6,3,9,10,2,9,7,6,-7,-2,-2,3,10,1,9,-3,-5,4,2,-9,1,6,1,1,-6,-9,4,4,6,-3,5,9,-6,-4,-6,-7,-1,6,4,10,-2,10,-2,9,2,-4,-2,6,7,-8,-3,1,5,-3,-5,-1,-1,5,7,-1,8,5,8,7,1,8,10,5,-7,6,-1,-10,-6,-6,-1,-2,-2,-10,-8,6,2,-1,-5,10,5,7,1,-8,4,-3,-1,-5,-4,3,-2,1,-5,8,1,6,-4,-3,10,-5,5,3,-3,-9,3,-8,1,1,-4,-9,-9,-10,-8,1,4,6,3,7,8,-2,-8,-8,-10,8,-9,8,2,2,-2,-1,10,8,-5,-9,1,-5,-2,9,-1,-5,-3,-10,-10,6,7,10,5,9,3,4,-9,-4,-10,-4,-1,1,9,-1,-4,-3,-6,-8,-1,10,7,9,-3,-1,-9,3,-2,-5,6,4,-5,-2,-9,2,9,5,8,-6,-8,-5,9,-6,4,4,7,1,4,-5,-6,-3,10,3,-2,10,-3,7,-5,-3,-2,1,2,5,5,-8,-8,-6,-1,-8,-7,2,-7,1,2,1,10,5], dtype = "uint16")#candidate|6177|(4212,)|const|uint16
call_6176 = relay.TupleGetItem(func_5360_call(relay.reshape(const_6177.astype('uint16'), [324, 13])), 0)
call_6178 = relay.TupleGetItem(func_5362_call(relay.reshape(const_6177.astype('uint16'), [324, 13])), 0)
func_4359_call = mod.get_global_var('func_4359')
func_4362_call = mutated_mod.get_global_var('func_4362')
const_6183 = relay.const([[-6.807392,-2.697659,-0.742574,-8.465361,-6.149676,3.488824,8.541357,6.850572,-6.685713,0.458354,5.090791,-3.197223,-6.029943,-2.070861,-6.307087,-4.759908,-7.732287,-1.944164],[2.895671,-3.055270,9.207501,-4.997967,-0.008442,0.740772,8.046791,-4.997663,-8.110595,-8.630207,-3.120246,-6.866968,-7.285667,0.523807,8.926688,2.513104,0.590593,-0.597165],[4.738187,4.925091,-9.120472,-3.181451,0.616781,-8.324478,-1.098634,-3.676441,-5.029815,5.209934,1.387760,6.000634,-1.685800,-3.624183,-1.725926,-1.035101,7.127752,-8.093350],[2.654022,6.309533,2.278717,-0.464585,-9.789444,-1.496819,9.149429,7.922192,5.286925,3.995786,-2.601307,2.077651,2.838812,-7.925822,1.351191,-6.240826,-8.443678,-6.353205],[-2.712590,2.443642,8.150521,9.630456,1.734360,-0.653457,7.360659,-9.345045,5.772674,-7.159175,-0.018532,5.266465,9.380369,-5.424345,3.868885,6.573043,0.170037,-2.867533],[2.342560,-2.343199,0.809095,6.731317,-2.768811,-6.146900,4.969424,-8.954043,6.600397,4.140758,-0.504796,-2.028302,-4.426128,5.850739,-3.207678,2.087005,9.507722,-6.794812],[-6.391916,6.340445,-4.909647,-0.448027,-9.099955,8.590861,-7.506264,1.082900,-8.502140,-6.785068,0.724430,-1.746110,3.109357,8.025009,4.080369,0.972634,0.600790,8.123904],[-4.455574,0.219441,-1.983949,5.198110,-8.191085,5.048938,-6.588946,5.984601,2.046168,-9.595551,8.078106,3.534488,2.429255,-4.836735,1.542153,-9.903378,5.098484,3.800586],[-0.249653,-9.296021,3.652130,4.069218,7.850690,8.090719,5.069059,-7.340364,-5.039872,0.309936,-2.210257,-9.970295,5.058213,-4.187417,6.184415,0.834374,-5.996529,-1.754184],[1.004823,7.640226,-9.449689,-6.207111,-7.246386,2.749622,-4.297772,4.071389,-2.745560,1.412597,-4.328765,8.616669,5.986961,-3.728085,-7.568357,5.898232,-2.867870,9.335509],[9.925815,-6.566353,-4.104551,-8.041464,0.612229,5.342720,-1.776270,5.441311,-7.288398,-1.231225,6.786212,2.135359,8.838640,-5.370339,-6.154944,-2.754157,3.415146,9.029545],[-5.428956,-9.804583,9.808097,-5.963655,-3.468264,6.297549,-9.738487,-1.256774,-9.908844,3.580677,-0.852559,7.940338,6.588978,8.014976,0.840920,-5.499242,-4.980126,7.412863],[0.287543,4.930477,3.209962,-7.442851,-1.229732,-3.000794,6.150762,-8.746862,3.922810,-6.211442,-3.988064,4.409807,-3.191619,9.012281,-3.744703,9.862350,-7.497487,-7.981059],[3.928001,8.690739,3.305140,-9.167286,-8.370354,3.918097,-3.525782,-0.003370,6.174621,-9.245595,-5.972025,-5.003931,-6.800583,-7.763154,1.319258,3.611962,9.016057,-5.685484],[-5.787743,9.902650,-2.120939,-7.797300,-3.557059,6.967977,-0.582898,-8.282385,0.520544,0.069095,-0.320748,5.590056,-2.200169,-3.446970,7.826801,3.244618,7.798447,-7.917087],[1.716244,-5.947273,-0.117501,0.962603,-0.420795,4.783946,-4.982290,1.405116,-5.994598,-2.387577,7.420718,-1.366797,-6.357373,-2.972208,2.702649,0.188255,3.619404,-4.607416],[9.539571,-6.749676,4.688344,4.190950,2.248643,-0.787852,5.389499,-0.430069,2.855688,-6.409386,-9.697919,9.991297,5.092148,-3.306484,1.069902,-6.147169,-9.807894,-6.233159],[-4.186218,-5.284119,-8.648895,6.693354,6.886561,3.007431,2.032549,-6.746573,-3.484686,9.176941,-5.880921,8.471449,-5.835910,-3.670499,-4.870689,7.371719,8.373748,-6.348507]], dtype = "float32")#candidate|6183|(18, 18)|const|float32
call_6182 = relay.TupleGetItem(func_4359_call(relay.reshape(const_6183.astype('float32'), [9, 9, 4])), 1)
call_6184 = relay.TupleGetItem(func_4362_call(relay.reshape(const_6183.astype('float32'), [9, 9, 4])), 1)
uop_6185 = relay.exp(const_6183.astype('float64')) # shape=(18, 18)
func_670_call = mod.get_global_var('func_670')
func_672_call = mutated_mod.get_global_var('func_672')
call_6193 = relay.TupleGetItem(func_670_call(), 2)
call_6194 = relay.TupleGetItem(func_672_call(), 2)
func_5790_call = mod.get_global_var('func_5790')
func_5792_call = mutated_mod.get_global_var('func_5792')
call_6212 = relay.TupleGetItem(func_5790_call(), 0)
call_6213 = relay.TupleGetItem(func_5792_call(), 0)
var_6215 = relay.var("var_6215", dtype = "float32", shape = (4, 9, 14))#candidate|6215|(4, 9, 14)|var|float32
bop_6216 = relay.equal(var_6169.astype('bool'), relay.reshape(var_6215.astype('bool'), relay.shape_of(var_6169))) # shape=(4, 9, 14)
func_1614_call = mod.get_global_var('func_1614')
func_1615_call = mutated_mod.get_global_var('func_1615')
call_6224 = relay.TupleGetItem(func_1614_call(), 0)
call_6225 = relay.TupleGetItem(func_1615_call(), 0)
func_5668_call = mod.get_global_var('func_5668')
func_5670_call = mutated_mod.get_global_var('func_5670')
call_6227 = func_5668_call()
call_6228 = func_5668_call()
uop_6235 = relay.log2(const_6177.astype('float32')) # shape=(4212,)
const_6240 = relay.const([[[2.572208,0.857017,8.340275,5.321376,-2.244553,-9.751052,8.384111,-2.023532,8.114418,4.388886,-6.643697,-7.149915,-5.606855,-9.447914],[8.130629,9.892516,-0.479731,-5.701292,6.930118,9.028051,-2.471382,-8.272792,-1.207963,9.456996,-3.698243,1.300603,-2.660621,-6.337935],[-7.819196,-3.185447,-7.960722,-9.167396,-0.547373,-6.343959,-4.342316,-2.467960,8.522970,-6.589931,0.802557,-4.942329,-6.112963,-1.474911],[4.472857,-5.652291,9.917112,6.927724,-4.751823,-1.479931,-2.639875,-7.274305,7.311959,5.931759,-5.285053,-3.812700,9.293583,5.409851],[5.543859,-5.879300,6.809047,-3.448114,3.877229,-5.279075,0.896943,6.990709,-5.476353,-4.497253,-5.614304,-6.557730,5.043958,-9.711459],[9.925673,1.218744,4.604975,-8.298724,-5.960485,0.377815,-1.418235,0.095770,5.744614,-1.288523,7.577674,2.061450,-3.553202,-5.542573],[-2.972943,5.209027,-3.801225,-0.226247,-3.006972,-9.619260,5.358599,4.493612,-4.439619,1.941840,0.623554,9.945604,-6.349767,-8.123769],[-4.907833,6.344653,2.446175,0.641969,5.785403,7.910187,-5.662362,-5.113525,7.791515,7.250434,-6.481672,4.221267,-0.794318,-3.410279],[4.096127,-0.781020,3.884702,4.145650,-5.638104,3.656494,-8.631123,6.392460,-3.113005,3.485574,6.452225,8.582611,6.162083,7.509604]],[[5.253620,9.107294,-9.961548,3.577803,3.758761,-9.430886,8.380996,1.350539,-5.341447,-3.145165,-9.273738,0.953190,-5.162169,6.974157],[2.811791,-6.235913,3.668333,-3.316998,8.326047,2.059241,-2.619318,-0.885599,2.886194,2.806714,-2.783287,1.577473,4.117269,0.088922],[8.758469,-1.212454,9.590139,-4.004166,-1.788942,9.193683,-7.302007,-3.577438,-3.481055,-2.725824,-5.998249,-1.057006,5.503866,0.579195],[-4.954799,-7.374264,5.339472,-0.573561,2.382919,6.764230,4.040186,0.535261,-5.962179,-2.849200,-5.292427,-6.297926,5.890793,-3.744519],[-3.275250,3.727964,-0.735976,3.092650,-6.761533,-8.464455,-2.302974,5.299987,-6.059428,4.850949,-4.179308,-5.467171,-4.889140,0.425130],[9.411300,-5.289444,8.294568,-8.015969,3.277452,-1.846061,3.447622,-2.195464,-0.445791,-8.290262,-6.969733,7.004311,8.518886,-8.190786],[1.037061,9.329948,8.585776,-9.289473,-2.118404,-7.149908,-6.880768,7.302550,3.808517,7.907034,-3.214452,9.482857,0.491021,1.021818],[-3.940854,-1.485766,-4.435985,-8.929839,0.833432,-2.099185,2.166543,-2.592489,0.992972,7.590991,5.073530,0.085132,-4.989490,-7.899279],[4.646886,0.476028,5.290581,3.009128,2.006870,2.767137,3.314489,-5.291915,-9.766926,-5.338362,4.948787,1.931922,3.436670,-8.331442]],[[9.141531,1.454569,-4.518282,-6.113739,5.662486,3.635254,2.671676,4.814709,4.456197,2.993688,-1.674490,9.868595,5.959390,-7.880499],[2.538828,7.847427,-9.757798,-4.438623,8.108831,-5.810237,-5.286967,5.135206,7.124855,-5.214746,4.414357,-9.244236,-5.599453,3.226174],[-2.061452,-2.356178,-8.502310,-1.590111,-4.608558,2.045066,7.695611,-9.447685,-7.152912,7.486814,2.705069,-4.043769,6.923736,-9.405410],[-2.816648,-6.590261,-4.992439,7.401039,-1.670018,2.942343,-4.742694,-5.714440,-3.764491,3.095024,-5.186699,-7.393238,1.039473,-2.023292],[-0.747059,-9.760823,-4.062505,2.558903,5.602827,7.961086,9.294607,-2.489140,-8.019792,2.244216,-8.798803,0.129489,-1.760370,-7.834052],[-7.885406,-4.711915,2.540168,3.110837,2.772172,-5.124508,4.062334,-6.188088,-7.099747,-3.981974,6.482827,-4.792438,1.206588,3.094848],[0.727651,1.031934,-9.941229,-7.095597,-4.517642,-5.356667,1.276664,-7.550251,-5.219415,4.340569,7.263563,6.972059,5.338692,-2.414468],[3.466813,-7.489006,9.345588,-8.532871,-6.395501,-5.821931,0.067913,-1.438781,9.161692,3.389529,-4.793436,8.569990,0.118133,-2.780017],[-2.929720,3.999480,-4.210332,-3.674524,0.795034,-9.474290,-9.295126,-4.963520,9.470539,-0.664845,9.185129,-8.089655,-1.599051,7.311211]],[[3.721288,-6.067568,5.917074,2.289051,-1.859216,8.298898,3.483257,4.988424,-7.038725,2.051391,-6.777451,9.449198,6.941503,7.429582],[4.559250,8.627569,5.147016,-0.064272,5.443405,-3.063078,7.642644,0.747466,2.927704,-5.998501,-7.170527,1.479651,8.126088,-7.144416],[4.015989,-1.436803,0.629497,5.931057,-2.337279,4.764766,5.672966,2.461880,4.253865,1.330009,1.116683,9.127532,5.215468,-2.789702],[6.719633,-1.986566,5.263290,3.122132,-7.481375,1.111113,-8.312754,9.290870,-3.079638,-0.282902,6.871409,1.352522,-9.055263,5.756964],[4.595765,-3.599221,-8.811052,6.098521,-3.248452,-5.542781,2.550529,9.590099,-4.669499,-7.027009,0.151856,6.733867,-3.152878,9.245734],[4.226263,0.167940,-8.108840,2.808407,-6.664411,-7.534039,4.323601,8.676790,-0.659627,-0.847860,2.608013,-2.387657,8.585815,-4.408962],[-7.794492,-6.758405,-1.269627,-1.283228,-3.422078,4.845283,2.736540,4.206505,6.742544,2.164444,5.821091,-7.571905,-1.039593,9.356824],[-3.103205,-6.642641,1.089859,-7.090013,-4.555180,-6.924322,-0.885836,6.051450,-0.433833,-2.719006,9.725230,3.186253,2.972503,-4.291132],[-6.988460,-6.892335,0.043915,7.916542,3.247122,-9.541589,6.178182,-3.454045,-3.353653,1.073594,-0.641707,-2.743978,9.153669,-6.951944]]], dtype = "float32")#candidate|6240|(4, 9, 14)|const|float32
bop_6241 = relay.multiply(uop_6170.astype('uint16'), relay.reshape(const_6240.astype('uint16'), relay.shape_of(uop_6170))) # shape=(4, 9, 14)
output = relay.Tuple([bop_6173,call_6176,call_6182,uop_6185,call_6193,call_6212,bop_6216,call_6224,call_6227,uop_6235,bop_6241,])
output2 = relay.Tuple([bop_6173,call_6178,call_6184,uop_6185,call_6194,call_6213,bop_6216,call_6225,call_6228,uop_6235,bop_6241,])
F = relay.Function([var_6169,var_6215,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6169,var_6215,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

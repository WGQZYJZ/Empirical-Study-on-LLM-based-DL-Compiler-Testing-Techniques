==========mod==========
#[version = "0.0.5"]
def @func_7204(%var_7188: Tensor[(15, 9, 15), uint64], %var_7189: Tensor[(15, 9, 15), uint64], %var_7202: Tensor[(720), uint64]) -> (Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32], Tensor[(35, 15), uint32], Tensor[(720), uint64]) {
  %0 = cast(%var_7189, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %1 = shape_of(%var_7188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_7188, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(%var_7188, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %5 = cast(%var_7202, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %6 = reshape(%5, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %7 = @func_4352(%6) /* ty=(Tensor[(35, 15), uint32], Tensor[(720), uint64], Tensor[(640, 2), float32], Tensor[(18, 4), uint64], Tensor[(720), uint64], Tensor[(1638), float64]) */;
  %8 = less(%2, %3) /* ty=Tensor[(15, 9, 15), bool] */;
  %9 = log(%4) /* ty=Tensor[(15, 9, 15), float32] */;
  %10 = %7.0;
  (%8, %9, %10, %var_7202)
}

def @func_4404(%var_4398: int16, %var_4399: Tensor[(24, 10), int16]) -> (Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(24, 10), int16], Tensor[(72), uint64]) {
  %11 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %12 = %11.0;
  %13 = cast(%12, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %15 = cast(%var_4398, dtype="int16") /* ty=int16 */;
  %16 = cast(%var_4399, dtype="int16") /* ty=Tensor[(24, 10), int16] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %18 = reshape(%14, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %19 = reshape(%15, newshape=[]) /* ty=int16 */;
  %20 = reshape(%16, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %21 = reshape(%17, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %22 = @func_3427(%18, %19, %20, %21) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) */;
  %23 = log10(%13) /* ty=Tensor[(16, 8, 10), float64] */;
  %24 = %22.3;
  (%23, %24, meta[relay.Constant][0] /* ty=Tensor[(1170), float64] */, %var_4398, %var_4399, meta[relay.Constant][1] /* ty=Tensor[(72), uint64] */)
}

def @main(%var_10561: Tensor[(2, 12, 3), int16], %var_10562: Tensor[(2, 12, 3), int16]) -> Tensor[(2, 12, 3), bool] {
  %25 = cast(%var_10562, dtype="bool") /* ty=Tensor[(2, 12, 3), bool] */;
  %26 = shape_of(%var_10561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%var_10561, dtype="bool") /* ty=Tensor[(2, 12, 3), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%27, %28) /* ty=Tensor[(2, 12, 3), bool] */
}

def @func_5165() -> (Tensor[(16, 8, 10), float32],) {
  %29 = @func_5087() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) */;
  %30 = %29.0;
  (%30,)
}

def @func_9644(%var_9633: float64) -> (Tensor[(16, 8, 10), float32], Tensor[(5, 7, 4), float64], float64, Tensor[(140), float64], Tensor[(525), float32]) {
  %31 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %32 = cast(%var_9633, dtype="float64") /* ty=float64 */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %34 = reshape(%32, newshape=[]) /* ty=float64 */;
  %35 = reshape(%33, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), float64] */;
  %36 = @func_9497(%34, %35) /* ty=(Tensor[(5, 7, 4), float64], Tensor[(5, 7, 4), bool]) */;
  %37 = %31.0;
  %38 = %36.0;
  %39 = @func_8504() /* ty=Tensor[(525), float32] */;
  (%37, %38, %var_9633, meta[relay.Constant][2] /* ty=Tensor[(140), float64] */, %39)
}

def @func_5506() -> Tensor[(525), uint32] {
  %40 = @func_5218() /* ty=(Tensor[(525), uint32],) */;
  %40.0
}

def @func_7809(%var_7739: Tensor[(440), float32], %var_7770: Tensor[(1144), uint32], %var_7784: Tensor[(7, 234), float64], %var_7806: Tensor[(1170), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(440), float32], Tensor[(1144), uint32], Tensor[(1144), uint32], Tensor[(2025), float64], Tensor[(7, 234), float64], Tensor[(525), uint32], Tensor[(16, 15, 2), bool], Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), int64], Tensor[(1170), float64], Tensor[(1170), float64]) {
  %41 = cast(%var_7739, dtype="float32") /* ty=Tensor[(440), float32] */;
  %42 = reshape(%41, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %43 = @func_6209(%42) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) */;
  %44 = cast(%var_7770, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %45 = cast(%var_7739, dtype="float32") /* ty=Tensor[(440), float32] */;
  %46 = reshape(%44, newshape=[1144]) /* ty=Tensor[(1144), uint32] */;
  %47 = reshape(%45, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %48 = @func_6710(%46, %47) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) */;
  %49 = cast(%var_7784, dtype="float64") /* ty=Tensor[(7, 234), float64] */;
  %50 = cast(%var_7784, dtype="float64") /* ty=Tensor[(7, 234), float64] */;
  %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %52 = reshape(%49, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %53 = reshape(%50, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %54 = reshape(%51, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %55 = @func_2138(%52, %53, %54) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %56 = @func_6414() /* ty=(Tensor[(16, 15, 2), float64],) */;
  %57 = %56.0;
  %58 = cast(%57, dtype="float32") /* ty=Tensor[(16, 15, 2), float32] */;
  %59 = sin(%58) /* ty=Tensor[(16, 15, 2), float32] */;
  %60 = cast(%57, dtype="uint8") /* ty=Tensor[(16, 15, 2), uint8] */;
  %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%59, dtype="uint8") /* ty=Tensor[(16, 15, 2), uint8] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %64 = logical_xor(%62, %63) /* ty=Tensor[(16, 15, 2), uint8] */;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %66 = tan(%65) /* ty=Tensor[(16, 15, 2), float64] */;
  %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 15, 2), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 2), bool] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="bool") /* ty=Tensor[(16, 15, 2), bool] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %71 = cast(%64, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %72 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%59, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %75 = cast(%64, dtype="int64") /* ty=Tensor[(16, 15, 2), int64] */;
  %76 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%59, dtype="int64") /* ty=Tensor[(16, 15, 2), int64] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %79 = cast(%var_7806, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %80 = reshape(%79, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %81 = @func_7347(%80) /* ty=(Tensor[(525), uint32], Tensor[(1638), float64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1638), float64]) */;
  %82 = %43.1;
  %83 = %48.5;
  %84 = %55.4;
  %85 = logical_and(%69, %70) /* ty=Tensor[(16, 15, 2), bool] */;
  %86 = maximum(%73, %74) /* ty=Tensor[(16, 15, 2), float64] */;
  %87 = bitwise_and(%77, %78) /* ty=Tensor[(16, 15, 2), int64] */;
  %88 = %81.2;
  (%82, %var_7739, %83, %var_7770, %84, %var_7784, meta[relay.Constant][3] /* ty=Tensor[(525), uint32] */, %85, %86, %87, %88, %var_7806)
}

def @func_4671() -> (Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %90 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(16, 15, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %95 = reshape(%94, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %96 = @func_1972(%95) /* ty=(Tensor[(7, 13, 4), float64],) */;
  %97 = power(%91, %92) /* ty=Tensor[(16, 15, 2), float64] */;
  %98 = log2(%93) /* ty=Tensor[(16, 15, 2), float64] */;
  %99 = %96.0;
  (%97, %98, %99, meta[relay.Constant][7] /* ty=Tensor[(364), float64] */)
}

def @func_7917(%var_7888: Tensor[(9, 10, 8), float64], %var_7900: Tensor[(18, 4), uint64]) -> (Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) {
  %100 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %101 = cast(meta[relay.Constant][9] /* ty=Tensor[(18, 4), uint64] */, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %102 = cast(meta[relay.Constant][8] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %103 = reshape(%101, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %104 = reshape(%102, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %105 = @func_662(%103, %104) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %106 = %105.0;
  %107 = cast(%var_7888, dtype="int16") /* ty=Tensor[(9, 10, 8), int16] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="int16") /* ty=Tensor[(9, 10, 8), int16] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %111 = cast(%var_7900, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %112 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(18, 4), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %113 = cast(meta[relay.Constant][9] /* ty=Tensor[(18, 4), uint64] */, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %115 = %100.0;
  %116 = left_shift(%109, %110) /* ty=Tensor[(9, 10, 8), int16] */;
  %117 = @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */;
  %118 = add(%113, %114) /* ty=Tensor[(18, 4), uint64] */;
  (%115, meta[relay.Constant][8] /* ty=Tensor[(720), uint64] */, %116, %117, %118)
}

def @func_10526() -> Tensor[(525), float32] {
  @func_6784() /* ty=Tensor[(525), float32] */
}

def @func_3427(%var_3384: Tensor[(13, 10, 9), float64], %var_3407: int16, %var_3408: Tensor[(240), int16], %var_3409: Tensor[(72), uint64]) -> (Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) {
  %119 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 1, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 9), float64] */;
  %120 = cast(%var_3384, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
  %121 = cast(%var_3407, dtype="int16") /* ty=int16 */;
  %122 = cast(%var_3408, dtype="int16") /* ty=Tensor[(240), int16] */;
  %123 = cast(%var_3409, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %124 = reshape(%121, newshape=[]) /* ty=int16 */;
  %125 = reshape(%122, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), int16] */;
  %126 = reshape(%123, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %127 = @func_3201(%124, %125, %126) /* ty=(Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) */;
  %128 = floor_divide(%119, %120) /* ty=Tensor[(13, 10, 9), float64] */;
  %129 = %127.2;
  (%128, %129, %var_3407, %var_3408, %var_3409)
}

def @func_7503() -> (Tensor[(16, 8, 10), float32],) {
  %130 = @func_7102() /* ty=Tensor[(16, 8, 10), float32] */;
  (%130,)
}

def @func_4140(%var_4107: Tensor[(16, 8, 10), float32], %var_4119: Tensor[(72), uint64], %var_4120: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), uint32], Tensor[(72), uint64], Tensor[(1470), int16], Tensor[(72), uint64], Tensor[(720), uint64]) {
  %131 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="float32") /* ty=Tensor[(16, 8, 10), float32] */;
  %134 = rsqrt(%133) /* ty=Tensor[(16, 8, 10), float32] */;
  %135 = cast(%var_4107, dtype="uint32") /* ty=Tensor[(16, 8, 10), uint32] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%134, dtype="uint32") /* ty=Tensor[(16, 8, 10), uint32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(1470), int16] */, dtype="int16") /* ty=Tensor[(1470), int16] */;
  %140 = cast(meta[relay.Constant][11] /* ty=Tensor[(1470), int16] */, dtype="int16") /* ty=Tensor[(1470), int16] */;
  %141 = cast(%var_4119, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %142 = cast(%var_4120, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %143 = reshape(%139, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), int16] */;
  %144 = reshape(%140, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), int16] */;
  %145 = reshape(%141, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %146 = reshape(%142, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %147 = @func_2326(%143, %144, %145, %146) /* ty=(Tensor[(14, 15, 7), bool], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64]) */;
  %148 = left_shift(%137, %138) /* ty=Tensor[(16, 8, 10), uint32] */;
  %149 = %147.2;
  (%148, %149, meta[relay.Constant][11] /* ty=Tensor[(1470), int16] */, %var_4119, %var_4120)
}

def @func_10503(%var_10494: bool, %var_10495: Tensor[(4, 8, 10), bool]) -> Tensor[(4, 8, 10), bool] {
  %150 = cast(%var_10494, dtype="bool") /* ty=bool */;
  %151 = cast(%var_10495, dtype="bool") /* ty=Tensor[(4, 8, 10), bool] */;
  logical_or(%150, %151) /* ty=Tensor[(4, 8, 10), bool] */
}

def @func_889(%var_817: Tensor[(13, 15, 4), float32], %var_818: Tensor[(13, 15, 4), float32], %var_823: Tensor[(72), uint64], %var_824: Tensor[(720), uint64]) -> (Tensor[(13, 15, 4), float32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64]) {
  %152 = cast(%var_818, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %153 = shape_of(%var_817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %154 = cast(%var_817, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %156 = cast(%var_823, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %157 = cast(%var_824, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %158 = reshape(%156, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %159 = reshape(%157, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %160 = @func_662(%158, %159) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %161 = cast(%var_823, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %162 = cast(%var_824, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %163 = reshape(%161, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %164 = reshape(%162, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %165 = @func_662(%163, %164) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %166 = cast(%var_823, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %167 = cast(%var_824, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %168 = reshape(%166, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %169 = reshape(%167, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %170 = @func_662(%168, %169) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %171 = cast(%var_823, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %172 = %160.0;
  %173 = cast(%172, dtype="uint64") /* ty=Tensor[(9, 10, 8), uint64] */;
  %174 = reshape(%171, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %175 = reshape(%173, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %176 = @func_662(%174, %175) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %177 = mod(%154, %155) /* ty=Tensor[(13, 15, 4), float32] */;
  %178 = %165.0;
  %179 = %170.0;
  %180 = %176.0;
  (%177, %172, %var_823, %var_824, %178, %179, %180)
}

def @func_8281() -> (Tensor[(525), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64], Tensor[(5, 2, 13), bool]) {
  %181 = cast(meta[relay.Constant][12] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %182 = reshape(%181, newshape=[5, 2, 13]) /* ty=Tensor[(5, 2, 13), float64] */;
  %183 = @func_3105(%182) /* ty=(Tensor[(5, 2, 13), bool],) */;
  %184 = cast(meta[relay.Constant][12] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %185 = reshape(%184, newshape=[5, 2, 13]) /* ty=Tensor[(5, 2, 13), float64] */;
  %186 = @func_3105(%185) /* ty=(Tensor[(5, 2, 13), bool],) */;
  %187 = @func_7424() /* ty=Tensor[(525), uint32] */;
  %188 = %183.0;
  %189 = %186.0;
  (%187, %188, meta[relay.Constant][12] /* ty=Tensor[(130), float64] */, %189)
}

def @func_7246() -> Tensor[(525), float32] {
  @func_6784() /* ty=Tensor[(525), float32] */
}

def @func_9726() -> (Tensor[(525), float32],) {
  %190 = @func_7269() /* ty=Tensor[(525), float32] */;
  (%190,)
}

def @func_6209(%var_6179: Tensor[(440), float32]) -> (Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) {
  %191 = @func_5524() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %192 = %191.0;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %194 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
  %195 = cast(meta[relay.Constant][13] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %196 = %194.0;
  %197 = cast(%196, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %198 = cast(%var_6179, dtype="float32") /* ty=Tensor[(440), float32] */;
  %199 = cast(meta[relay.Constant][14] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %200 = cast(meta[relay.Constant][15] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %201 = reshape(%195, newshape=[120, 2]) /* ty=Tensor[(120, 2), int16] */;
  %202 = reshape(%197, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), float64] */;
  %203 = reshape(%198, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %204 = reshape(%199, newshape=[182, 9]) /* ty=Tensor[(182, 9), float64] */;
  %205 = reshape(%200, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %206 = @func_4043(%201, %202, %203, %204, %205) /* ty=(Tensor[(1, 16, 15), bool], int16, Tensor[(120, 2), int16], Tensor[(72), uint64], Tensor[(16, 8, 10), float64], int16, Tensor[(10, 117), float64], Tensor[(2, 360), uint64], Tensor[(440), float32], Tensor[(182, 9), float64], Tensor[(525), uint32]) */;
  %207 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %208 = cast(meta[relay.Constant][16] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %209 = reshape(%208, newshape=[5, 2, 13]) /* ty=Tensor[(5, 2, 13), float64] */;
  %210 = @func_3105(%209) /* ty=(Tensor[(5, 2, 13), bool],) */;
  %211 = cosh(%193) /* ty=Tensor[(16, 8, 10), float64] */;
  %212 = %206.5;
  %213 = %207.0;
  %214 = %210.0;
  (%211, %196, %212, meta[relay.Constant][13] /* ty=Tensor[(240), int16] */, %var_6179, meta[relay.Constant][14] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][15] /* ty=Tensor[(525), uint32] */, %213, %214, meta[relay.Constant][16] /* ty=Tensor[(130), float64] */)
}

def @func_7102() -> Tensor[(16, 8, 10), float32] {
  @func_6401() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_6066() -> (Tensor[(525), uint32],) {
  %215 = @func_6007() /* ty=(Tensor[(525), uint32],) */;
  %216 = %215.0;
  (%216,)
}

def @func_8906() -> Tensor[(16, 8, 10), float32] {
  %217 = @func_7503() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %217.0
}

def @func_5347(%var_5326: Tensor[(525), uint32], %var_5338: Tensor[(240), int16]) -> (Tensor[(525), bool], Tensor[(2, 5, 6), float32], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(7, 15, 5), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64]) {
  %218 = @func_5218() /* ty=(Tensor[(525), uint32],) */;
  %219 = %218.0;
  %220 = cast(%var_5326, dtype="bool") /* ty=Tensor[(525), bool] */;
  %221 = shape_of(%219, dtype="int32") /* ty=Tensor[(1), int32] */;
  %222 = cast(%219, dtype="bool") /* ty=Tensor[(525), bool] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?), bool] */;
  %224 = @func_5087() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) */;
  %225 = cast(meta[relay.Constant][17] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %226 = cast(%var_5338, dtype="int16") /* ty=Tensor[(240), int16] */;
  %227 = reshape(%225, newshape=[]) /* ty=int16 */;
  %228 = reshape(%226, newshape=[24, 10]) /* ty=Tensor[(24, 10), int16] */;
  %229 = @func_4404(%227, %228) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(24, 10), int16], Tensor[(72), uint64]) */;
  %230 = cast(meta[relay.Constant][18] /* ty=Tensor[(220, 2), float32] */, dtype="float32") /* ty=Tensor[(220, 2), float32] */;
  %231 = cast(meta[relay.Constant][19] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %232 = logical_or(%222, %223) /* ty=Tensor[(525), bool] */;
  %233 = cast(%232, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %234 = reshape(%230, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), float32] */;
  %235 = reshape(%231, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %236 = reshape(%233, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %237 = @func_2400(%234, %235, %236) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */;
  %238 = %224.1;
  %239 = %229.2;
  %240 = %237.1;
  (%232, %238, %239, meta[relay.Constant][17] /* ty=int16 */, %var_5338, %240, meta[relay.Constant][18] /* ty=Tensor[(220, 2), float32] */, meta[relay.Constant][19] /* ty=Tensor[(1638), float64] */)
}

def @func_9497(%var_9458: float64, %var_9459: Tensor[(5, 7, 4), float64]) -> (Tensor[(5, 7, 4), float64], Tensor[(5, 7, 4), bool]) {
  %241 = cast(%var_9458, dtype="float64") /* ty=float64 */;
  %242 = cast(%var_9459, dtype="float64") /* ty=Tensor[(5, 7, 4), float64] */;
  %243 = cast(%var_9458, dtype="bool") /* ty=bool */;
  %244 = cast(%var_9459, dtype="bool") /* ty=Tensor[(5, 7, 4), bool] */;
  %245 = multiply(%241, %242) /* ty=Tensor[(5, 7, 4), float64] */;
  %246 = logical_and(%243, %244) /* ty=Tensor[(5, 7, 4), bool] */;
  (%245, %246)
}

def @func_4718(%var_4711: Tensor[(14, 117), float64], %var_4712: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), int64], Tensor[(16, 8, 10), float32], Tensor[(14, 117), float64], Tensor[(525), uint32]) {
  %247 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %248 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 8, 10), float32] */, dtype="int64") /* ty=Tensor[(16, 8, 10), int64] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%247, dtype="int64") /* ty=Tensor[(16, 8, 10), int64] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %252 = cast(%var_4711, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %253 = cast(%var_4712, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %254 = reshape(%252, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %255 = reshape(%253, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %256 = @func_4560(%254, %255) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %257 = right_shift(%250, %251) /* ty=Tensor[(16, 8, 10), int64] */;
  %258 = %256.0;
  (%257, %258, %var_4711, %var_4712)
}

def @func_6494() -> (Tensor[(525), float32],) {
  %259 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
  %260 = %259.3;
  %261 = cast(meta[relay.Constant][21] /* ty=Tensor[(525), uint32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(1), int32] */;
  %263 = cast(%260, dtype="float32") /* ty=Tensor[(525), float32] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?), float32] */;
  %265 = mod(%263, %264) /* ty=Tensor[(525), float32] */;
  (%265,)
}

def @func_662(%var_618: Tensor[(9, 1, 8), uint64], %var_619: Tensor[(9, 10, 8), uint64]) -> (Tensor[(9, 10, 8), float64],) {
  %266 = cast(%var_618, dtype="uint64") /* ty=Tensor[(9, 1, 8), uint64] */;
  %267 = cast(%var_619, dtype="uint64") /* ty=Tensor[(9, 10, 8), uint64] */;
  %268 = bitwise_xor(%266, %267) /* ty=Tensor[(9, 10, 8), uint64] */;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
  %270 = sigmoid(%269) /* ty=Tensor[(9, 10, 8), float64] */;
  %271 = cast(%270, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
  %272 = atan(%271) /* ty=Tensor[(9, 10, 8), float64] */;
  (%272,)
}

def @func_8135() -> (Tensor[(16, 8, 10), float32], Tensor[(1, 525), uint32], Tensor[(2025), float32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(546, 3), float64]) {
  %273 = @func_7503() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %274 = cast(meta[relay.Constant][22] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %275 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 525), uint32] */, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
  %276 = reshape(%274, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %277 = reshape(%275, newshape=[1, 525]) /* ty=Tensor[(1, 525), uint32] */;
  %278 = @func_1947(%276, %277) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) */;
  %279 = cast(meta[relay.Constant][24] /* ty=Tensor[(546, 3), float64] */, dtype="float64") /* ty=Tensor[(546, 3), float64] */;
  %280 = cast(meta[relay.Constant][24] /* ty=Tensor[(546, 3), float64] */, dtype="float64") /* ty=Tensor[(546, 3), float64] */;
  %281 = %278.2;
  %282 = cast(%281, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
  %283 = reshape(%279, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %284 = reshape(%280, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %285 = reshape(%282, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %286 = @func_2138(%283, %284, %285) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %287 = %273.0;
  %288 = %286.3;
  (%287, %281, meta[relay.Constant][22] /* ty=Tensor[(2025), float32] */, meta[relay.Constant][23] /* ty=Tensor[(1, 525), uint32] */, %288, meta[relay.Constant][24] /* ty=Tensor[(546, 3), float64] */)
}

def @func_9960() -> (Tensor[(16, 8, 10), float32],) {
  %289 = @func_8906() /* ty=Tensor[(16, 8, 10), float32] */;
  (%289,)
}

def @func_10543() -> (Tensor[(7, 15, 5), uint32],) {
  %290 = @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */;
  (%290,)
}

def @func_9087(%var_9057: Tensor[(11, 16, 5), float64]) -> (Tensor[(11, 16, 5), float64], Tensor[(16, 8, 10), float32]) {
  %291 = cast(%var_9057, dtype="float64") /* ty=Tensor[(11, 16, 5), float64] */;
  %292 = @func_8857() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %293 = acosh(%291) /* ty=Tensor[(11, 16, 5), float64] */;
  %294 = %292.0;
  (%293, %294)
}

def @func_6710(%var_6681: Tensor[(1144), uint32], %var_6697: Tensor[(440), float32]) -> (Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) {
  %295 = @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */;
  %296 = cast(%295, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %297 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %298 = reshape(%297, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %299 = @func_3911(%298) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
  %300 = cast(%295, dtype="float32") /* ty=Tensor[(7, 15, 5), float32] */;
  %301 = tan(%300) /* ty=Tensor[(7, 15, 5), float32] */;
  %302 = cast(%301, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %303 = log10(%302) /* ty=Tensor[(7, 15, 5), float64] */;
  %304 = cast(%295, dtype="uint16") /* ty=Tensor[(7, 15, 5), uint16] */;
  %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %306 = cast(%303, dtype="uint16") /* ty=Tensor[(7, 15, 5), uint16] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %308 = cast(%var_6681, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %309 = cast(%var_6681, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %310 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %311 = %299.3;
  %312 = cast(%311, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %313 = cast(meta[relay.Constant][27] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %314 = reshape(%308, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), uint32] */;
  %315 = reshape(%309, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), uint32] */;
  %316 = reshape(%310, newshape=[1, 910]) /* ty=Tensor[(1, 910), float32] */;
  %317 = reshape(%312, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %318 = reshape(%313, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %319 = @func_2909(%314, %315, %316, %317, %318) /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(1, 910), float32], Tensor[(720), uint64], Tensor[(10, 78), int64]) */;
  %320 = cast(%var_6697, dtype="float32") /* ty=Tensor[(440), float32] */;
  %321 = reshape(%320, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %322 = @func_6209(%321) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) */;
  %323 = sin(%296) /* ty=Tensor[(7, 15, 5), float64] */;
  %324 = bitwise_and(%306, %307) /* ty=Tensor[(7, 15, 5), uint16] */;
  %325 = %319.1;
  %326 = %322.1;
  (%323, %311, meta[relay.Constant][25] /* ty=Tensor[(720), uint64] */, %324, %325, %var_6681, meta[relay.Constant][26] /* ty=Tensor[(1, 910), float32] */, meta[relay.Constant][27] /* ty=Tensor[(780), float32] */, %326, %var_6697)
}

def @func_4476() -> (Tensor[(7, 15, 5), uint32],) {
  %327 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %328 = %327.1;
  (%328,)
}

def @func_2326(%var_2304: Tensor[(14, 15, 7), int16], %var_2305: Tensor[(14, 15, 7), int16], %var_2314: Tensor[(72), uint64], %var_2315: Tensor[(720), uint64]) -> (Tensor[(14, 15, 7), bool], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64]) {
  %329 = cast(%var_2305, dtype="bool") /* ty=Tensor[(14, 15, 7), bool] */;
  %330 = shape_of(%var_2304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_2304, dtype="bool") /* ty=Tensor[(14, 15, 7), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %333 = cast(%var_2314, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %334 = cast(%var_2315, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %335 = reshape(%333, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %336 = reshape(%334, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %337 = @func_662(%335, %336) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %338 = greater(%331, %332) /* ty=Tensor[(14, 15, 7), bool] */;
  %339 = %337.0;
  (%338, %339, %var_2314, %var_2315)
}

def @func_2400(%var_2373: Tensor[(4, 11, 10), float32], %var_2389: Tensor[(1638), float64], %var_2390: Tensor[(525), uint32]) -> (Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) {
  %340 = cast(%var_2373, dtype="float32") /* ty=Tensor[(4, 11, 10), float32] */;
  %341 = cast(%var_2389, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %342 = cast(%var_2389, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %343 = cast(%var_2390, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %344 = reshape(%341, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %345 = reshape(%342, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %346 = reshape(%343, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %347 = @func_2138(%344, %345, %346) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %348 = cast(meta[relay.Constant][28] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %349 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 360), uint64] */, dtype="uint64") /* ty=Tensor[(2, 360), uint64] */;
  %350 = reshape(%348, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %351 = reshape(%349, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %352 = @func_662(%350, %351) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %353 = atanh(%340) /* ty=Tensor[(4, 11, 10), float32] */;
  %354 = %347.1;
  %355 = %352.0;
  (%353, %354, %var_2389, %var_2390, %355, meta[relay.Constant][28] /* ty=Tensor[(72), uint64] */, meta[relay.Constant][29] /* ty=Tensor[(2, 360), uint64] */)
}

def @func_4830() -> (Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) {
  %356 = @func_4671() /* ty=(Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %357 = %356.2;
  %358 = cast(%357, dtype="float32") /* ty=Tensor[(7, 13, 4), float32] */;
  %359 = cast(meta[relay.Constant][30] /* ty=Tensor[(1638, 1), float64] */, dtype="float64") /* ty=Tensor[(1638, 1), float64] */;
  %360 = cast(meta[relay.Constant][31] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %361 = reshape(%359, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %362 = reshape(%360, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %363 = @func_4718(%361, %362) /* ty=(Tensor[(16, 8, 10), int64], Tensor[(16, 8, 10), float32], Tensor[(14, 117), float64], Tensor[(525), uint32]) */;
  %364 = atan(%358) /* ty=Tensor[(7, 13, 4), float32] */;
  %365 = %363.1;
  (%364, %365, meta[relay.Constant][30] /* ty=Tensor[(1638, 1), float64] */, meta[relay.Constant][31] /* ty=Tensor[(525), uint32] */)
}

def @func_5087() -> (Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) {
  %366 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %367 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %368 = sin(%367) /* ty=Tensor[(2, 5, 6), float32] */;
  %369 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(2, 5, 6), bool] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="bool") /* ty=Tensor[(2, 5, 6), bool] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %373 = not_equal(%371, %372) /* ty=Tensor[(2, 5, 6), bool] */;
  %374 = cast(%373, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %375 = %366.0;
  %376 = asinh(%374) /* ty=Tensor[(2, 5, 6), float32] */;
  (%375, %376)
}

def @func_3201(%var_3180: int16, %var_3181: Tensor[(1, 16, 15), int16], %var_3198: Tensor[(18, 4), uint64]) -> (Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) {
  %377 = cast(%var_3180, dtype="bool") /* ty=bool */;
  %378 = cast(%var_3181, dtype="bool") /* ty=Tensor[(1, 16, 15), bool] */;
  %379 = cast(meta[relay.Constant][33] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %380 = cast(meta[relay.Constant][33] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %381 = cast(meta[relay.Constant][34] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %382 = reshape(%379, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %383 = reshape(%380, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %384 = reshape(%381, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %385 = @func_2138(%382, %383, %384) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %386 = cast(%var_3198, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %387 = cast(meta[relay.Constant][35] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %388 = reshape(%386, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %389 = reshape(%387, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %390 = @func_662(%388, %389) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %391 = less_equal(%377, %378) /* ty=Tensor[(1, 16, 15), bool] */;
  %392 = %385.2;
  %393 = %390.0;
  (%391, %392, meta[relay.Constant][33] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][34] /* ty=Tensor[(525), uint32] */, %393, %var_3198, meta[relay.Constant][35] /* ty=Tensor[(720), uint64] */)
}

def @func_3690(%var_3682: int32, %var_3683: Tensor[(10, 10, 1), int32]) -> Tensor[(10, 10, 1), bool] {
  %394 = cast(%var_3682, dtype="bool") /* ty=bool */;
  %395 = cast(%var_3683, dtype="bool") /* ty=Tensor[(10, 10, 1), bool] */;
  less_equal(%394, %395) /* ty=Tensor[(10, 10, 1), bool] */
}

def @func_3105(%var_3098: Tensor[(5, 2, 13), float64]) -> (Tensor[(5, 2, 13), bool],) {
  %396 = cast(%var_3098, dtype="float64") /* ty=Tensor[(5, 2, 13), float64] */;
  %397 = acos(%396) /* ty=Tensor[(5, 2, 13), float64] */;
  %398 = cast(%var_3098, dtype="bool") /* ty=Tensor[(5, 2, 13), bool] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%397, dtype="bool") /* ty=Tensor[(5, 2, 13), bool] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %402 = not_equal(%400, %401) /* ty=Tensor[(5, 2, 13), bool] */;
  (%402,)
}

def @func_6332() -> Tensor[(7, 15, 5), uint32] {
  %403 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %403.0
}

def @func_6615() -> (Tensor[(525), uint32],) {
  %404 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %405 = %404.2;
  (%405,)
}

def @func_10193() -> (Tensor[(16, 8, 10), float32],) {
  %406 = @func_9851() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32]) */;
  %407 = %406.0;
  (%407,)
}

def @func_9117() -> (Tensor[(525), float32],) {
  %408 = @func_6494() /* ty=(Tensor[(525), float32],) */;
  %409 = %408.0;
  (%409,)
}

def @func_6401() -> Tensor[(16, 8, 10), float32] {
  @func_3845() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_6349() -> Tensor[(16, 8, 10), float32] {
  %410 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
  %410.0
}

def @func_7280(%var_7272: Tensor[(6, 2, 11), float64]) -> Tensor[(6, 2, 11), float64] {
  %411 = cast(%var_7272, dtype="float64") /* ty=Tensor[(6, 2, 11), float64] */;
  log2(%411) /* ty=Tensor[(6, 2, 11), float64] */
}

def @func_7347(%var_7327: Tensor[(1170), float64]) -> (Tensor[(525), uint32], Tensor[(1638), float64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1638), float64]) {
  %412 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %413 = cast(%var_7327, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %414 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %415 = cast(meta[relay.Constant][37] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %416 = cast(meta[relay.Constant][38] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %417 = reshape(%413, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %418 = reshape(%414, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %419 = reshape(%415, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %420 = reshape(%416, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %421 = @func_7072(%417, %418, %419, %420) /* ty=(Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) */;
  %422 = %412.3;
  %423 = %421.11;
  (%422, %423, %var_7327, meta[relay.Constant][36] /* ty=Tensor[(240), int16] */, meta[relay.Constant][37] /* ty=Tensor[(720), uint64] */, meta[relay.Constant][38] /* ty=Tensor[(1638), float64] */)
}

def @func_8504() -> Tensor[(525), float32] {
  @func_7269() /* ty=Tensor[(525), float32] */
}

def @func_4947(%var_4906: Tensor[(525), uint32]) -> (Tensor[(525), uint16], Tensor[(525), float32], Tensor[(525), float32]) {
  %424 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %425 = %424.2;
  %426 = cast(%var_4906, dtype="uint64") /* ty=Tensor[(525), uint64] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(1), int32] */;
  %428 = cast(%425, dtype="uint64") /* ty=Tensor[(525), uint64] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %430 = logical_xor(%428, %429) /* ty=Tensor[(525), uint64] */;
  %431 = cast(%430, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %432 = shape_of(%425, dtype="int32") /* ty=Tensor[(1), int32] */;
  %433 = cast(%425, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %435 = cast(%var_4906, dtype="float32") /* ty=Tensor[(525), float32] */;
  %436 = cast(%425, dtype="float32") /* ty=Tensor[(525), float32] */;
  %437 = bitwise_xor(%433, %434) /* ty=Tensor[(525), uint16] */;
  %438 = erf(%435) /* ty=Tensor[(525), float32] */;
  %439 = asinh(%436) /* ty=Tensor[(525), float32] */;
  (%437, %438, %439)
}

def @func_5792(%var_5739: Tensor[(13, 12, 9), float32]) -> (Tensor[(13, 12, 9), float64],) {
  %440 = cast(%var_5739, dtype="float32") /* ty=Tensor[(13, 12, 9), float32] */;
  %441 = log10(%440) /* ty=Tensor[(13, 12, 9), float32] */;
  %442 = cast(%var_5739, dtype="float64") /* ty=Tensor[(13, 12, 9), float64] */;
  %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%441, dtype="float64") /* ty=Tensor[(13, 12, 9), float64] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %446 = floor_mod(%444, %445) /* ty=Tensor[(13, 12, 9), float64] */;
  (%446,)
}

def @func_9851() -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32]) {
  %447 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %448 = @func_5241() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %449 = %447.0;
  %450 = %448.0;
  (%449, %450)
}

def @func_9283(%var_9246: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), bool], Tensor[(525), float64], Tensor[(525), uint32]) {
  %451 = @func_8555() /* ty=(Tensor[(16, 8, 10), bool],) */;
  %452 = cast(%var_9246, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %453 = reshape(%452, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %454 = @func_5685(%453) /* ty=(Tensor[(525), float64],) */;
  %455 = %451.0;
  %456 = %454.0;
  (%455, %456, %var_9246)
}

def @func_4352(%var_4327: Tensor[(720), uint64]) -> (Tensor[(35, 15), uint32], Tensor[(720), uint64], Tensor[(640, 2), float32], Tensor[(18, 4), uint64], Tensor[(720), uint64], Tensor[(1638), float64]) {
  %457 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %458 = cast(meta[relay.Constant][39] /* ty=Tensor[(640, 2), float32] */, dtype="float32") /* ty=Tensor[(640, 2), float32] */;
  %459 = cast(meta[relay.Constant][40] /* ty=Tensor[(18, 4), uint64] */, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %460 = cast(%var_4327, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %461 = reshape(%458, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), float32] */;
  %462 = reshape(%459, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %463 = reshape(%460, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %464 = @func_4140(%461, %462, %463) /* ty=(Tensor[(16, 8, 10), uint32], Tensor[(72), uint64], Tensor[(1470), int16], Tensor[(72), uint64], Tensor[(720), uint64]) */;
  %465 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %466 = %457.1;
  %467 = %464.4;
  %468 = %465.2;
  (%466, %467, meta[relay.Constant][39] /* ty=Tensor[(640, 2), float32] */, meta[relay.Constant][40] /* ty=Tensor[(18, 4), uint64] */, %var_4327, %468)
}

def @func_9398() -> Tensor[(720), uint64] {
  %469 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
  %469.2
}

def @func_10087() -> (Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %470 = cast(meta[relay.Constant][41] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %471 = reshape(%470, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %472 = @func_6286(%471) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %473 = @func_8906() /* ty=Tensor[(16, 8, 10), float32] */;
  %474 = %472.1;
  (%473, %474, meta[relay.Constant][41] /* ty=Tensor[(364), float64] */)
}

def @func_5685(%var_5677: Tensor[(525), uint32]) -> (Tensor[(525), float64],) {
  %475 = @func_5506() /* ty=Tensor[(525), uint32] */;
  %476 = cast(%var_5677, dtype="float64") /* ty=Tensor[(525), float64] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(1), int32] */;
  %478 = cast(%475, dtype="float64") /* ty=Tensor[(525), float64] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?), float64] */;
  %480 = floor_divide(%478, %479) /* ty=Tensor[(525), float64] */;
  (%480,)
}

def @func_6568(%var_6535: Tensor[(1638), float64]) -> (Tensor[(525), float32], Tensor[(16, 8, 10), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(440), float32]) {
  %481 = @func_6494() /* ty=(Tensor[(525), float32],) */;
  %482 = cast(%var_6535, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %483 = %481.0;
  %484 = cast(%483, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %485 = reshape(%482, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %486 = reshape(%484, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %487 = @func_4718(%485, %486) /* ty=(Tensor[(16, 8, 10), int64], Tensor[(16, 8, 10), float32], Tensor[(14, 117), float64], Tensor[(525), uint32]) */;
  %488 = @func_5524() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %489 = cast(meta[relay.Constant][42] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %490 = cast(%var_6535, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %491 = cast(%483, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %492 = reshape(%489, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), float32] */;
  %493 = reshape(%490, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %494 = reshape(%491, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %495 = @func_2400(%492, %493, %494) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */;
  %496 = %487.1;
  %497 = %488.0;
  %498 = %495.1;
  (%483, %496, %var_6535, %497, %498, meta[relay.Constant][42] /* ty=Tensor[(440), float32] */)
}

def @func_5218() -> (Tensor[(525), uint32],) {
  %499 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %500 = %499.2;
  (%500,)
}

def @func_2909(%var_2852: Tensor[(8, 11, 13), uint32], %var_2853: Tensor[(8, 11, 13), uint32], %var_2861: Tensor[(1, 910), float32], %var_2863: Tensor[(720), uint64], %var_2904: Tensor[(10, 78), float32]) -> (Tensor[(8, 11, 13), uint32], Tensor[(1, 910), float32], Tensor[(720), uint64], Tensor[(10, 78), int64]) {
  %501 = cast(%var_2853, dtype="uint32") /* ty=Tensor[(8, 11, 13), uint32] */;
  %502 = shape_of(%var_2852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%var_2852, dtype="uint32") /* ty=Tensor[(8, 11, 13), uint32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %505 = cast(%var_2861, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %506 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 78), float32] */, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %507 = cast(%var_2863, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %508 = reshape(%505, newshape=[13, 7, 10]) /* ty=Tensor[(13, 7, 10), float32] */;
  %509 = reshape(%506, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %510 = reshape(%507, newshape=[12, 60]) /* ty=Tensor[(12, 60), uint64] */;
  %511 = @func_2673(%508, %509, %510) /* ty=(Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) */;
  %512 = %511.2;
  %513 = cast(%512, dtype="float64") /* ty=Tensor[(780), float64] */;
  %514 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(10, 78), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %515 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 78), float32] */, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %517 = floor_divide(%515, %516) /* ty=Tensor[(10, 78), float64] */;
  %518 = cast(%517, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %519 = log2(%518) /* ty=Tensor[(10, 78), float32] */;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %521 = sqrt(%520) /* ty=Tensor[(10, 78), float32] */;
  %522 = cast(%var_2904, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
  %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(2), int32] */;
  %524 = cast(%521, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %526 = left_shift(%503, %504) /* ty=Tensor[(8, 11, 13), uint32] */;
  %527 = right_shift(%524, %525) /* ty=Tensor[(10, 78), int64] */;
  (%526, %var_2861, %var_2863, %527)
}

def @func_5596(%var_5585: int16, %var_5587: Tensor[(72, 1), uint64]) -> (Tensor[(7, 15, 5), float64], Tensor[(1, 16, 15), bool], int16, Tensor[(240), int16], Tensor[(72, 1), uint64], Tensor[(7, 15, 5), int8]) {
  %528 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %529 = %528.0;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %531 = exp(%530) /* ty=Tensor[(7, 15, 5), float64] */;
  %532 = cast(%529, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%531, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %536 = cast(%var_5585, dtype="int16") /* ty=int16 */;
  %537 = cast(meta[relay.Constant][44] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %538 = cast(%var_5587, dtype="uint64") /* ty=Tensor[(72, 1), uint64] */;
  %539 = reshape(%536, newshape=[]) /* ty=int16 */;
  %540 = reshape(%537, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), int16] */;
  %541 = reshape(%538, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %542 = @func_3201(%539, %540, %541) /* ty=(Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) */;
  %543 = cast(%531, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %544 = reshape(%543, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %545 = @func_5426(%544) /* ty=(Tensor[(7, 15, 5), int8],) */;
  %546 = mod(%534, %535) /* ty=Tensor[(7, 15, 5), float64] */;
  %547 = %542.0;
  %548 = %545.0;
  (%546, %547, %var_5585, meta[relay.Constant][44] /* ty=Tensor[(240), int16] */, %var_5587, %548)
}

def @func_7072(%var_7021: Tensor[(1170), float64], %var_7022: Tensor[(240), int16], %var_7023: Tensor[(720), uint64], %var_7070: Tensor[(1638), float64]) -> (Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) {
  %549 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %550 = cast(%var_7021, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %551 = cast(%var_7022, dtype="int16") /* ty=Tensor[(240), int16] */;
  %552 = cast(%var_7023, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %553 = reshape(%550, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %554 = reshape(%551, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %555 = reshape(%552, newshape=[180, 4]) /* ty=Tensor[(180, 4), uint64] */;
  %556 = @func_4311(%553, %554, %555) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(180, 4), uint64]) */;
  %557 = cast(meta[relay.Constant][46] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %558 = reshape(%557, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %559 = @func_6209(%558) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) */;
  %560 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %561 = cast(meta[relay.Constant][45] /* ty=Tensor[(1144), uint32] */, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %562 = cast(meta[relay.Constant][46] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %563 = reshape(%561, newshape=[1144]) /* ty=Tensor[(1144), uint32] */;
  %564 = reshape(%562, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %565 = @func_6710(%563, %564) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) */;
  %566 = %565.5;
  %567 = cast(%566, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %568 = cast(%var_7070, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %569 = %559.7;
  %570 = cast(%569, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %571 = reshape(%568, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %572 = reshape(%570, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %573 = @func_4560(%571, %572) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %574 = %549.0;
  %575 = %556.3;
  %576 = %560.0;
  %577 = log2(%567) /* ty=Tensor[(1144), float64] */;
  %578 = %573.2;
  (%574, %575, %var_7021, %var_7022, %var_7023, meta[relay.Constant][45] /* ty=Tensor[(1144), uint32] */, meta[relay.Constant][46] /* ty=Tensor[(440), float32] */, %569, %576, %577, %578, %var_7070)
}

def @func_7269() -> Tensor[(525), float32] {
  @func_6784() /* ty=Tensor[(525), float32] */
}

def @func_7946(%var_7941: Tensor[(1404), float32]) -> (Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32]) {
  %579 = @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */;
  %580 = cast(%var_7941, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %581 = reshape(%580, newshape=[13, 12, 9]) /* ty=Tensor[(13, 12, 9), float32] */;
  %582 = @func_5792(%581) /* ty=(Tensor[(13, 12, 9), float64],) */;
  %583 = %579.1;
  %584 = %582.0;
  (%583, %584, %var_7941)
}

def @func_10065(%var_10021: Tensor[(14, 7, 4), uint32], %var_10022: Tensor[(14, 7, 4), uint32], %var_10036: Tensor[(720), float64], %var_10037: Tensor[(72), uint64], %var_10040: Tensor[(880), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), float32], Tensor[(720), float64], Tensor[(72), uint64], Tensor[(11, 16, 5), float64], Tensor[(880), float64], Tensor[(14, 7, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(525), float32], Tensor[(182, 9), float64]) {
  %585 = @func_6978() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %586 = cast(%var_10036, dtype="float64") /* ty=Tensor[(720), float64] */;
  %587 = cast(%var_10037, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %588 = reshape(%586, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %589 = reshape(%587, newshape=[3, 24]) /* ty=Tensor[(3, 24), uint64] */;
  %590 = @func_10016(%588, %589) /* ty=(Tensor[(525), float32], Tensor[(9, 10, 8), int16], Tensor[(720), float64], Tensor[(3, 24), float32]) */;
  %591 = cast(%var_10040, dtype="float64") /* ty=Tensor[(880), float64] */;
  %592 = reshape(%591, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float64] */;
  %593 = @func_9087(%592) /* ty=(Tensor[(11, 16, 5), float64], Tensor[(16, 8, 10), float32]) */;
  %594 = cast(%var_10022, dtype="uint32") /* ty=Tensor[(14, 7, 4), uint32] */;
  %595 = shape_of(%var_10021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%var_10021, dtype="uint32") /* ty=Tensor[(14, 7, 4), uint32] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %598 = right_shift(%596, %597) /* ty=Tensor[(14, 7, 4), uint32] */;
  %599 = cast(%598, dtype="float32") /* ty=Tensor[(14, 7, 4), float32] */;
  %600 = @func_9960() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %601 = cast(meta[relay.Constant][47] /* ty=Tensor[(182, 9), float64] */, dtype="float64") /* ty=Tensor[(182, 9), float64] */;
  %602 = reshape(%601, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %603 = @func_6568(%602) /* ty=(Tensor[(525), float32], Tensor[(16, 8, 10), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(440), float32]) */;
  %604 = %585.0;
  %605 = %590.0;
  %606 = %593.0;
  %607 = log10(%599) /* ty=Tensor[(14, 7, 4), float32] */;
  %608 = %600.0;
  %609 = %603.0;
  (%604, %605, %var_10036, %var_10037, %606, %var_10040, %607, %608, %609, meta[relay.Constant][47] /* ty=Tensor[(182, 9), float64] */)
}

def @func_10519() -> Tensor[(525), uint32] {
  @func_7424() /* ty=Tensor[(525), uint32] */
}

def @func_1947(%var_1901: Tensor[(15, 9, 15), float32], %var_1921: Tensor[(1, 525), uint32]) -> (Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) {
  %610 = cast(%var_1901, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %611 = cast(%var_1921, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
  %612 = cast(%var_1921, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
  %613 = reshape(%611, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %614 = reshape(%612, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %615 = @func_1759(%613, %614) /* ty=Tensor[(7, 15, 5), uint32] */;
  %616 = cast(%615, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %617 = cast(%615, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %618 = reshape(%616, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %619 = reshape(%617, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %620 = sqrt(%610) /* ty=Tensor[(15, 9, 15), float32] */;
  %621 = @func_1759(%618, %619) /* ty=Tensor[(7, 15, 5), uint32] */;
  (%620, %615, %var_1921, %621)
}

def @func_1972(%var_1962: Tensor[(7, 13, 4), float64]) -> (Tensor[(7, 13, 4), float64],) {
  %622 = cast(%var_1962, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
  %623 = acosh(%622) /* ty=Tensor[(7, 13, 4), float64] */;
  %624 = cast(%623, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
  %625 = log(%624) /* ty=Tensor[(7, 13, 4), float64] */;
  (%625,)
}

def @func_5015(%var_4963: Tensor[(4, 12, 10), float64], %var_4964: Tensor[(4, 12, 10), float64]) -> (Tensor[(4, 12, 10), bool], Tensor[(5, 2, 13), bool], Tensor[(130), float64], Tensor[(525), float32]) {
  %626 = cast(%var_4964, dtype="float64") /* ty=Tensor[(4, 12, 10), float64] */;
  %627 = shape_of(%var_4963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%var_4963, dtype="float64") /* ty=Tensor[(4, 12, 10), float64] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %630 = add(%628, %629) /* ty=Tensor[(4, 12, 10), float64] */;
  %631 = cast(%var_4963, dtype="bool") /* ty=Tensor[(4, 12, 10), bool] */;
  %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%630, dtype="bool") /* ty=Tensor[(4, 12, 10), bool] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %635 = cast(meta[relay.Constant][48] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %636 = reshape(%635, newshape=[5, 2, 13]) /* ty=Tensor[(5, 2, 13), float64] */;
  %637 = @func_3105(%636) /* ty=(Tensor[(5, 2, 13), bool],) */;
  %638 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %639 = %638.2;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(525), float32] */;
  %641 = logical_or(%633, %634) /* ty=Tensor[(4, 12, 10), bool] */;
  %642 = %637.0;
  %643 = exp(%640) /* ty=Tensor[(525), float32] */;
  (%641, %642, meta[relay.Constant][48] /* ty=Tensor[(130), float64] */, %643)
}

def @func_4763(%var_4741: int32, %var_4742: Tensor[(100), int32]) -> (Tensor[(7, 15, 5), uint32], Tensor[(7, 15, 5), uint32], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32], Tensor[(7, 15, 5), uint32]) {
  %644 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %645 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %646 = cast(%var_4741, dtype="int32") /* ty=int32 */;
  %647 = cast(%var_4742, dtype="int32") /* ty=Tensor[(100), int32] */;
  %648 = reshape(%646, newshape=[]) /* ty=int32 */;
  %649 = reshape(%647, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), int32] */;
  %650 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %651 = %644.0;
  %652 = %645.0;
  %653 = @func_3690(%648, %649) /* ty=Tensor[(10, 10, 1), bool] */;
  %654 = %650.1;
  (%651, %652, %653, %var_4741, %var_4742, %654)
}

def @func_5241() -> (Tensor[(16, 8, 10), float32],) {
  %655 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  (%655,)
}

def @func_5736() -> Tensor[(16, 8, 10), float32] {
  %656 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %656.0
}

def @func_5645() -> (Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) {
  %657 = cast(meta[relay.Constant][49] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %658 = reshape(%657, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %659 = @func_4590(%658) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(780), float32]) */;
  %660 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %661 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %662 = %659.3;
  %663 = %660.2;
  (%661, %662, meta[relay.Constant][49] /* ty=Tensor[(720), uint64] */, %663)
}

def @func_7636(%var_7562: Tensor[(2025), float32], %var_7565: Tensor[(910), float32], %var_7566: Tensor[(130, 6), float32], %var_7633: Tensor[(220, 2), float32]) -> (Tensor[(525), float32], Tensor[(525), uint32], Tensor[(1, 525), uint32], Tensor[(2025), float32], Tensor[(72), uint64], Tensor[(910), float32], Tensor[(720), uint64], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32], Tensor[(7, 9, 15), bool], Tensor[(130, 6), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(220, 2), float32]) {
  %664 = @func_6494() /* ty=(Tensor[(525), float32],) */;
  %665 = @func_5218() /* ty=(Tensor[(525), uint32],) */;
  %666 = cast(%var_7562, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %667 = %664.0;
  %668 = cast(%667, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %669 = reshape(%666, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %670 = reshape(%668, newshape=[1, 525]) /* ty=Tensor[(1, 525), uint32] */;
  %671 = @func_1947(%669, %670) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) */;
  %672 = cast(%var_7565, dtype="float32") /* ty=Tensor[(910), float32] */;
  %673 = cast(%var_7566, dtype="float32") /* ty=Tensor[(130, 6), float32] */;
  %674 = cast(meta[relay.Constant][50] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %675 = reshape(%672, newshape=[13, 7, 10]) /* ty=Tensor[(13, 7, 10), float32] */;
  %676 = reshape(%673, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %677 = reshape(%674, newshape=[12, 60]) /* ty=Tensor[(12, 60), uint64] */;
  %678 = @func_2673(%675, %676, %677) /* ty=(Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) */;
  %679 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %680 = cast(meta[relay.Constant][51] /* ty=Tensor[(100), int32] */, dtype="int32") /* ty=Tensor[(100), int32] */;
  %681 = reshape(%679, newshape=[]) /* ty=int32 */;
  %682 = reshape(%680, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), int32] */;
  %683 = cast(-5 /* ty=int32 */, dtype="float32") /* ty=float32 */;
  %684 = reshape(%683, newshape=[]) /* ty=float32 */;
  %685 = @func_4158(%684) /* ty=(Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %686 = cast(%var_7566, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %687 = asinh(%686) /* ty=Tensor[(130, 6), float64] */;
  %688 = cast(%var_7566, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(2), int32] */;
  %690 = cast(%687, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %692 = cast(meta[relay.Constant][52] /* ty=Tensor[(1144), uint32] */, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %693 = cast(%var_7633, dtype="float32") /* ty=Tensor[(220, 2), float32] */;
  %694 = reshape(%692, newshape=[1144]) /* ty=Tensor[(1144), uint32] */;
  %695 = reshape(%693, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %696 = @func_6710(%694, %695) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) */;
  %697 = %665.0;
  %698 = %671.2;
  %699 = %678.3;
  %700 = @func_3690(%681, %682) /* ty=Tensor[(10, 10, 1), bool] */;
  %701 = %685.0;
  %702 = bitwise_xor(%690, %691) /* ty=Tensor[(130, 6), uint16] */;
  %703 = %696.6;
  (%667, %697, %698, %var_7562, %699, %var_7565, meta[relay.Constant][50] /* ty=Tensor[(720), uint64] */, %700, -5 /* ty=int32 */, meta[relay.Constant][51] /* ty=Tensor[(100), int32] */, %701, %702, %703, meta[relay.Constant][52] /* ty=Tensor[(1144), uint32] */, %var_7633)
}

def @func_2138(%var_2105: Tensor[(13, 14, 9), float64], %var_2106: Tensor[(13, 14, 9), float64], %var_2114: Tensor[(35, 15), uint32]) -> (Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) {
  %704 = cast(%var_2106, dtype="float64") /* ty=Tensor[(13, 14, 9), float64] */;
  %705 = shape_of(%var_2105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%var_2105, dtype="float64") /* ty=Tensor[(13, 14, 9), float64] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %708 = cast(meta[relay.Constant][53] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %709 = cast(%var_2114, dtype="uint32") /* ty=Tensor[(35, 15), uint32] */;
  %710 = reshape(%708, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %711 = reshape(%709, newshape=[1, 525]) /* ty=Tensor[(1, 525), uint32] */;
  %712 = @func_1947(%710, %711) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) */;
  %713 = %712.1;
  %714 = cast(%713, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %715 = cast(%var_2114, dtype="uint32") /* ty=Tensor[(35, 15), uint32] */;
  %716 = reshape(%714, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %717 = reshape(%715, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %718 = cast(meta[relay.Constant][53] /* ty=Tensor[(2025), float32] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %719 = floor_divide(%706, %707) /* ty=Tensor[(13, 14, 9), float64] */;
  %720 = @func_1759(%716, %717) /* ty=Tensor[(7, 15, 5), uint32] */;
  %721 = asinh(%718) /* ty=Tensor[(2025), float64] */;
  (%719, %713, %var_2114, %720, %721)
}

def @func_10405() -> Tensor[(525), float32] {
  %722 = @func_9117() /* ty=(Tensor[(525), float32],) */;
  %722.0
}

def @func_5908() -> (Tensor[(16, 8, 10), float64], Tensor[(9, 10, 8), float32], Tensor[(720), uint64]) {
  %723 = @func_5087() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) */;
  %724 = %723.0;
  %725 = cast(%724, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %726 = cast(meta[relay.Constant][54] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %727 = reshape(%726, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %728 = @func_3911(%727) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
  %729 = asinh(%725) /* ty=Tensor[(16, 8, 10), float64] */;
  %730 = %728.4;
  (%729, %730, meta[relay.Constant][54] /* ty=Tensor[(720), uint64] */)
}

def @func_5495() -> Tensor[(525), uint32] {
  %731 = @func_5218() /* ty=(Tensor[(525), uint32],) */;
  %731.0
}

def @func_6007() -> (Tensor[(525), uint32],) {
  %732 = @func_5506() /* ty=Tensor[(525), uint32] */;
  (%732,)
}

def @func_6784() -> Tensor[(525), float32] {
  %733 = @func_6494() /* ty=(Tensor[(525), float32],) */;
  %733.0
}

def @func_4075() -> (Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) {
  %734 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %735 = cast(meta[relay.Constant][55] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %736 = cast(meta[relay.Constant][55] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %737 = reshape(%735, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %738 = reshape(%736, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %739 = %734.0;
  %740 = @func_1759(%737, %738) /* ty=Tensor[(7, 15, 5), uint32] */;
  (%739, %740, meta[relay.Constant][55] /* ty=Tensor[(525), uint32] */)
}

def @func_3845() -> Tensor[(16, 8, 10), float32] {
  %741 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %741.0
}

def @func_4560(%var_4557: Tensor[(1638), float64], %var_4558: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) {
  %742 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %743 = cast(meta[relay.Constant][56] /* ty=Tensor[(220, 2), float32] */, dtype="float32") /* ty=Tensor[(220, 2), float32] */;
  %744 = cast(%var_4557, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %745 = cast(%var_4558, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %746 = reshape(%743, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), float32] */;
  %747 = reshape(%744, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %748 = reshape(%745, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %749 = @func_2400(%746, %747, %748) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */;
  %750 = %742.0;
  %751 = %749.3;
  (%750, %751, meta[relay.Constant][56] /* ty=Tensor[(220, 2), float32] */, %var_4557, %var_4558)
}

def @func_6237(%var_6232: Tensor[(1144), uint32], %var_6233: Tensor[(7, 130), float32], %var_6234: Tensor[(780), float32]) -> (Tensor[(720), uint64], Tensor[(8, 11, 13), uint32], Tensor[(1144), uint32], Tensor[(7, 130), float32], Tensor[(780), float32]) {
  %752 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
  %753 = cast(%var_6232, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %754 = cast(%var_6232, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %755 = cast(%var_6233, dtype="float32") /* ty=Tensor[(7, 130), float32] */;
  %756 = %752.2;
  %757 = cast(%756, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %758 = cast(%var_6234, dtype="float32") /* ty=Tensor[(780), float32] */;
  %759 = reshape(%753, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), uint32] */;
  %760 = reshape(%754, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), uint32] */;
  %761 = reshape(%755, newshape=[1, 910]) /* ty=Tensor[(1, 910), float32] */;
  %762 = reshape(%757, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %763 = reshape(%758, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %764 = @func_2909(%759, %760, %761, %762, %763) /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(1, 910), float32], Tensor[(720), uint64], Tensor[(10, 78), int64]) */;
  %765 = %764.0;
  (%756, %765, %var_6232, %var_6233, %var_6234)
}

def @func_4158(%var_4148: float32) -> (Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %766 = cast(%var_4148, dtype="bool") /* ty=bool */;
  %767 = cast(meta[relay.Constant][57] /* ty=Tensor[(7, 9, 15), float32] */, dtype="bool") /* ty=Tensor[(7, 9, 15), bool] */;
  %768 = cast(meta[relay.Constant][58] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %769 = reshape(%768, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %770 = @func_1972(%769) /* ty=(Tensor[(7, 13, 4), float64],) */;
  %771 = equal(%766, %767) /* ty=Tensor[(7, 9, 15), bool] */;
  %772 = %770.0;
  (%771, %772, meta[relay.Constant][58] /* ty=Tensor[(364), float64] */)
}

def @func_7260() -> (Tensor[(525), float32], Tensor[(16, 8, 10), float32]) {
  %773 = @func_6978() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %774 = @func_7246() /* ty=Tensor[(525), float32] */;
  %775 = %773.0;
  (%774, %775)
}

def @func_4177(%var_4172: int32, %var_4173: Tensor[(100), int32]) -> (Tensor[(16, 8, 10), float32], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32]) {
  %776 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %777 = cast(%var_4172, dtype="int32") /* ty=int32 */;
  %778 = cast(%var_4173, dtype="int32") /* ty=Tensor[(100), int32] */;
  %779 = reshape(%777, newshape=[]) /* ty=int32 */;
  %780 = reshape(%778, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), int32] */;
  %781 = %776.0;
  %782 = @func_3690(%779, %780) /* ty=Tensor[(10, 10, 1), bool] */;
  (%781, %782, %var_4172, %var_4173)
}

def @func_3811() -> (Tensor[(16, 8, 10), float32],) {
  %783 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 10), float32] */;
  %784 = sin(%783) /* ty=Tensor[(16, 8, 10), float32] */;
  (%784,)
}

def @func_6901() -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) {
  %785 = @func_6007() /* ty=(Tensor[(525), uint32],) */;
  %786 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %787 = %785.0;
  (%786, %787)
}

def @func_8555() -> (Tensor[(16, 8, 10), bool],) {
  %788 = @func_6901() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) */;
  %789 = %788.0;
  %790 = cast(meta[relay.Constant][60] /* ty=Tensor[(16, 8, 10), float32] */, dtype="bool") /* ty=Tensor[(16, 8, 10), bool] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="bool") /* ty=Tensor[(16, 8, 10), bool] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %794 = greater_equal(%792, %793) /* ty=Tensor[(16, 8, 10), bool] */;
  (%794,)
}

def @func_8672(%var_8631: Tensor[(1170), float64], %var_8642: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), float32], Tensor[(360, 2), uint64], Tensor[(1170), float32], Tensor[(525), float32], Tensor[(525), uint32], Tensor[(6, 2, 11), float64], Tensor[(132), float64]) {
  %795 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %796 = cast(%var_8631, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %797 = reshape(%796, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %798 = @func_4449(%797) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(240), int16], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64]) */;
  %799 = cast(meta[relay.Constant][61] /* ty=Tensor[(1170), float64] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %800 = shape_of(%var_8631, dtype="int32") /* ty=Tensor[(1), int32] */;
  %801 = cast(%var_8631, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?), float32] */;
  %803 = cast(%var_8642, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %804 = reshape(%803, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %805 = @func_4947(%804) /* ty=(Tensor[(525), uint16], Tensor[(525), float32], Tensor[(525), float32]) */;
  %806 = cast(meta[relay.Constant][62] /* ty=Tensor[(132), float64] */, dtype="float64") /* ty=Tensor[(132), float64] */;
  %807 = reshape(%806, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), float64] */;
  %808 = %795.0;
  %809 = %798.4;
  %810 = mod(%801, %802) /* ty=Tensor[(1170), float32] */;
  %811 = %805.1;
  %812 = @func_7280(%807) /* ty=Tensor[(6, 2, 11), float64] */;
  (%808, %809, %810, %811, %var_8642, %812, meta[relay.Constant][62] /* ty=Tensor[(132), float64] */)
}

def @func_8594(%var_8576: float32) -> (Tensor[(7, 15, 5), uint32], Tensor[(7, 9, 15), bool], float32) {
  %813 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %814 = cast(%var_8576, dtype="float32") /* ty=float32 */;
  %815 = reshape(%814, newshape=[]) /* ty=float32 */;
  %816 = @func_4158(%815) /* ty=(Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %817 = %813.1;
  %818 = %816.0;
  (%817, %818, %var_8576)
}

def @func_9354(%var_9319: Tensor[(364), float64]) -> (Tensor[(364), float32], Tensor[(364), bool]) {
  %819 = @func_4671() /* ty=(Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %820 = %819.3;
  %821 = cast(%var_9319, dtype="float32") /* ty=Tensor[(364), float32] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(1), int32] */;
  %823 = cast(%820, dtype="float32") /* ty=Tensor[(364), float32] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?), float32] */;
  %825 = cast(%820, dtype="bool") /* ty=Tensor[(364), bool] */;
  %826 = shape_of(%var_9319, dtype="int32") /* ty=Tensor[(1), int32] */;
  %827 = cast(%var_9319, dtype="bool") /* ty=Tensor[(364), bool] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?), bool] */;
  %829 = divide(%823, %824) /* ty=Tensor[(364), float32] */;
  %830 = logical_or(%827, %828) /* ty=Tensor[(364), bool] */;
  (%829, %830)
}

def @func_7960() -> Tensor[(525), float32] {
  %831 = @func_7260() /* ty=(Tensor[(525), float32], Tensor[(16, 8, 10), float32]) */;
  %831.0
}

def @func_10016(%var_9995: Tensor[(720), float64], %var_9996: Tensor[(3, 24), uint64]) -> (Tensor[(525), float32], Tensor[(9, 10, 8), int16], Tensor[(720), float64], Tensor[(3, 24), float32]) {
  %832 = cast(%var_9995, dtype="float64") /* ty=Tensor[(720), float64] */;
  %833 = cast(%var_9996, dtype="uint64") /* ty=Tensor[(3, 24), uint64] */;
  %834 = reshape(%832, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
  %835 = reshape(%833, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %836 = @func_7917(%834, %835) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) */;
  %837 = cast(%var_9996, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %838 = @func_7246() /* ty=Tensor[(525), float32] */;
  %839 = %836.2;
  %840 = exp(%837) /* ty=Tensor[(3, 24), float32] */;
  (%838, %839, %var_9995, %840)
}

def @func_8439() -> Tensor[(1638), float64] {
  %841 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %841.2
}

def @func_6414() -> (Tensor[(16, 15, 2), float64],) {
  %842 = @func_4671() /* ty=(Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %843 = %842.0;
  (%843,)
}

def @func_8857() -> (Tensor[(16, 8, 10), float32],) {
  %844 = @func_8379() /* ty=Tensor[(16, 8, 10), float32] */;
  (%844,)
}

def @func_9230(%var_9190: Tensor[(72), uint64]) -> (Tensor[(16, 8, 10), bool], Tensor[(7, 15, 5), uint32], Tensor[(720), float64], Tensor[(72), uint64], Tensor[(9, 10, 8), int16]) {
  %845 = @func_8555() /* ty=(Tensor[(16, 8, 10), bool],) */;
  %846 = cast(meta[relay.Constant][63] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %847 = cast(%var_9190, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %848 = reshape(%846, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
  %849 = reshape(%847, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %850 = @func_7917(%848, %849) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) */;
  %851 = cast(meta[relay.Constant][63] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %852 = cast(%var_9190, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %853 = reshape(%851, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
  %854 = reshape(%852, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %855 = @func_7917(%853, %854) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) */;
  %856 = %845.0;
  %857 = %850.0;
  %858 = %855.2;
  (%856, %857, meta[relay.Constant][63] /* ty=Tensor[(720), float64] */, %var_9190, %858)
}

def @func_6978() -> (Tensor[(16, 8, 10), float32],) {
  %859 = @func_5908() /* ty=(Tensor[(16, 8, 10), float64], Tensor[(9, 10, 8), float32], Tensor[(720), uint64]) */;
  %860 = %859.0;
  %861 = cast(%860, dtype="float32") /* ty=Tensor[(16, 8, 10), float32] */;
  %862 = atanh(%861) /* ty=Tensor[(16, 8, 10), float32] */;
  (%862,)
}

def @func_5524() -> (Tensor[(16, 8, 10), float32],) {
  %863 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %864 = %863.0;
  (%864,)
}

def @func_8074(%var_8039: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(220, 2), float32], Tensor[(1638), float32]) {
  %865 = @func_6978() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %866 = @func_6901() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) */;
  %867 = cast(%var_8039, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %868 = reshape(%867, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %869 = @func_4590(%868) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(780), float32]) */;
  %870 = @func_7503() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %871 = @func_5241() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %872 = cast(meta[relay.Constant][64] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %873 = %866.1;
  %874 = cast(%873, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %875 = reshape(%872, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %876 = reshape(%874, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %877 = @func_4560(%875, %876) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %878 = cast(meta[relay.Constant][64] /* ty=Tensor[(1638), float64] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %879 = %865.0;
  %880 = %869.1;
  %881 = %870.0;
  %882 = %871.0;
  %883 = %877.2;
  %884 = rsqrt(%878) /* ty=Tensor[(1638), float32] */;
  (%879, %873, %880, %var_8039, %881, %882, %883, %884)
}

def @func_7424() -> Tensor[(525), uint32] {
  %885 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
  %885.3
}

def @func_10424() -> (Tensor[(16, 8, 10), float32],) {
  %886 = @func_6901() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) */;
  %887 = %886.0;
  (%887,)
}

def @func_5426(%var_5421: Tensor[(7, 15, 5), uint32]) -> (Tensor[(7, 15, 5), int8],) {
  %888 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %889 = %888.0;
  %890 = cast(%var_5421, dtype="int8") /* ty=Tensor[(7, 15, 5), int8] */;
  %891 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %892 = cast(%889, dtype="int8") /* ty=Tensor[(7, 15, 5), int8] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %894 = bitwise_or(%892, %893) /* ty=Tensor[(7, 15, 5), int8] */;
  (%894,)
}

def @func_4590(%var_4584: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(780), float32]) {
  %895 = cast(%var_4584, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %896 = reshape(%895, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %897 = @func_3911(%896) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
  %898 = cast(%var_4584, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %899 = reshape(%898, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %900 = @func_3911(%899) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
  %901 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %902 = %897.0;
  %903 = %900.2;
  (%901, %902, %var_4584, %903)
}

def @func_9709() -> (Tensor[(7, 13, 4), float32],) {
  %904 = @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */;
  %905 = %904.0;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(7, 13, 4), float32] */;
  %907 = erf(%906) /* ty=Tensor[(7, 13, 4), float32] */;
  (%907,)
}

def @func_6286(%var_6275: Tensor[(364), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %908 = cast(%var_6275, dtype="float64") /* ty=Tensor[(364), float64] */;
  %909 = reshape(%908, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %910 = @func_1972(%909) /* ty=(Tensor[(7, 13, 4), float64],) */;
  %911 = @func_5736() /* ty=Tensor[(16, 8, 10), float32] */;
  %912 = %910.0;
  (%911, %912, %var_6275)
}

def @func_7490(%var_7452: Tensor[(8, 2, 3), float32], %var_7481: Tensor[(240), int16], %var_7482: Tensor[(720), uint64]) -> (Tensor[(8, 2, 3), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(1170), float32], Tensor[(7, 15, 5), uint32], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(7, 13, 4), float32]) {
  %913 = cast(%var_7452, dtype="float32") /* ty=Tensor[(8, 2, 3), float32] */;
  %914 = cast(meta[relay.Constant][65] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %915 = reshape(%914, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %916 = @func_7347(%915) /* ty=(Tensor[(525), uint32], Tensor[(1638), float64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1638), float64]) */;
  %917 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %918 = cast(meta[relay.Constant][65] /* ty=Tensor[(1170), float64] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %919 = atan(%918) /* ty=Tensor[(1170), float32] */;
  %920 = cast(%919, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %921 = cast(%var_7481, dtype="int16") /* ty=Tensor[(240), int16] */;
  %922 = cast(%var_7482, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %923 = %916.5;
  %924 = cast(%923, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %925 = reshape(%920, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %926 = reshape(%921, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %927 = reshape(%922, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %928 = reshape(%924, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %929 = @func_7072(%925, %926, %927, %928) /* ty=(Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) */;
  %930 = @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */;
  %931 = cosh(%913) /* ty=Tensor[(8, 2, 3), float32] */;
  %932 = %917.0;
  %933 = %929.7;
  %934 = %930.0;
  (%931, %923, %932, %919, %933, %var_7481, %var_7482, %934)
}

def @func_9825(%var_9818: Tensor[(16, 8, 10), float32]) -> Tensor[(16, 8, 10), bool] {
  %935 = @func_6349() /* ty=Tensor[(16, 8, 10), float32] */;
  %936 = cast(%var_9818, dtype="bool") /* ty=Tensor[(16, 8, 10), bool] */;
  %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%935, dtype="bool") /* ty=Tensor[(16, 8, 10), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%938, %939) /* ty=Tensor[(16, 8, 10), bool] */
}

def @func_4449(%var_4435: Tensor[(1170), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(240), int16], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64]) {
  %940 = cast(%var_4435, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %941 = cast(meta[relay.Constant][66] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %942 = cast(meta[relay.Constant][67] /* ty=Tensor[(360, 2), uint64] */, dtype="uint64") /* ty=Tensor[(360, 2), uint64] */;
  %943 = reshape(%940, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %944 = reshape(%941, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %945 = reshape(%942, newshape=[180, 4]) /* ty=Tensor[(180, 4), uint64] */;
  %946 = @func_4311(%943, %944, %945) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(180, 4), uint64]) */;
  %947 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %948 = %946.1;
  (%947, %948, %var_4435, meta[relay.Constant][66] /* ty=Tensor[(240), int16] */, meta[relay.Constant][67] /* ty=Tensor[(360, 2), uint64] */)
}

def @func_10377(%var_10233: Tensor[(1404), float32], %var_10249: Tensor[(240), int16], %var_10263: Tensor[(880), float64], %var_10272: Tensor[(175, 3), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32], Tensor[(440), float32], Tensor[(240), int16], Tensor[(11, 16, 5), float64], Tensor[(880), float64], Tensor[(175, 3), float32], Tensor[(7, 13, 4), float64], float32, Tensor[(13, 12, 9), float64], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) {
  %949 = @func_8906() /* ty=Tensor[(16, 8, 10), float32] */;
  %950 = cast(%949, dtype="float32") /* ty=Tensor[(16, 8, 10), float32] */;
  %951 = cast(%var_10233, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %952 = reshape(%951, newshape=[13, 12, 9]) /* ty=Tensor[(13, 12, 9), float32] */;
  %953 = @func_5792(%952) /* ty=(Tensor[(13, 12, 9), float64],) */;
  %954 = cast(meta[relay.Constant][68] /* ty=Tensor[(175, 3), float64] */, dtype="float64") /* ty=Tensor[(175, 3), float64] */;
  %955 = cast(%var_10249, dtype="int16") /* ty=Tensor[(240), int16] */;
  %956 = log(%950) /* ty=Tensor[(16, 8, 10), float32] */;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %958 = reshape(%954, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), float64] */;
  %959 = reshape(%955, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %960 = reshape(%957, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %961 = @func_5986(%958, %959, %960) /* ty=(Tensor[(9, 10, 8), float32], int16, Tensor[(72), uint64], Tensor[(7, 15, 5), float64], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(14, 117), float64], Tensor[(525), float32], Tensor[(1280), float32]) */;
  %962 = cast(%var_10263, dtype="float64") /* ty=Tensor[(880), float64] */;
  %963 = reshape(%962, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float64] */;
  %964 = @func_9087(%963) /* ty=(Tensor[(11, 16, 5), float64], Tensor[(16, 8, 10), float32]) */;
  %965 = cast(%var_10272, dtype="float32") /* ty=Tensor[(175, 3), float32] */;
  %966 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(175, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %967 = cast(meta[relay.Constant][68] /* ty=Tensor[(175, 3), float64] */, dtype="float32") /* ty=Tensor[(175, 3), float32] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %969 = cast(-0.325479f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %970 = reshape(%969, newshape=[]) /* ty=float32 */;
  %971 = @func_4158(%970) /* ty=(Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %972 = cast(%var_10233, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %973 = reshape(%972, newshape=[1404]) /* ty=Tensor[(1404), float32] */;
  %974 = @func_7946(%973) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32]) */;
  %975 = cast(meta[relay.Constant][69] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %976 = cast(meta[relay.Constant][70] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %977 = reshape(%975, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %978 = reshape(%976, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %979 = @func_662(%977, %978) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %980 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %981 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %982 = %953.0;
  %983 = %961.6;
  %984 = %964.0;
  %985 = power(%967, %968) /* ty=Tensor[(175, 3), float32] */;
  %986 = %971.1;
  %987 = %974.1;
  %988 = %979.0;
  %989 = %980.0;
  %990 = %981.0;
  %991 = @func_5506() /* ty=Tensor[(525), uint32] */;
  (%956, %982, %var_10233, %983, %var_10249, %984, %var_10263, %985, %986, -0.325479f /* ty=float32 */, %987, %988, meta[relay.Constant][69] /* ty=Tensor[(72), uint64] */, meta[relay.Constant][70] /* ty=Tensor[(720), uint64] */, %989, %990, %991)
}

def @func_8379() -> Tensor[(16, 8, 10), float32] {
  @func_6401() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_9790(%var_9778: Tensor[(240), int16]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64], Tensor[(1638), float64], Tensor[(525), uint32]) {
  %992 = cast(meta[relay.Constant][71] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %993 = cast(%var_9778, dtype="int16") /* ty=Tensor[(240), int16] */;
  %994 = cast(meta[relay.Constant][72] /* ty=Tensor[(360, 2), uint64] */, dtype="uint64") /* ty=Tensor[(360, 2), uint64] */;
  %995 = cast(meta[relay.Constant][73] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %996 = reshape(%992, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %997 = reshape(%993, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %998 = reshape(%994, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %999 = reshape(%995, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %1000 = @func_7072(%996, %997, %998, %999) /* ty=(Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) */;
  %1001 = @func_8906() /* ty=Tensor[(16, 8, 10), float32] */;
  %1002 = @func_8379() /* ty=Tensor[(16, 8, 10), float32] */;
  %1003 = %1000.4;
  %1004 = @func_5495() /* ty=Tensor[(525), uint32] */;
  (%1001, %1002, %1003, meta[relay.Constant][71] /* ty=Tensor[(1170), float64] */, %var_9778, meta[relay.Constant][72] /* ty=Tensor[(360, 2), uint64] */, meta[relay.Constant][73] /* ty=Tensor[(1638), float64] */, %1004)
}

def @func_3911(%var_3885: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) {
  %1005 = cast(meta[relay.Constant][74] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %1006 = cast(meta[relay.Constant][75] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1007 = cast(%var_3885, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %1008 = reshape(%1005, newshape=[13, 7, 10]) /* ty=Tensor[(13, 7, 10), float32] */;
  %1009 = reshape(%1006, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %1010 = reshape(%1007, newshape=[12, 60]) /* ty=Tensor[(12, 60), uint64] */;
  %1011 = @func_2673(%1008, %1009, %1010) /* ty=(Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) */;
  %1012 = %1011.1;
  %1013 = cast(%1012, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  %1014 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %1015 = atanh(%1013) /* ty=Tensor[(9, 10, 8), float32] */;
  (%1014, meta[relay.Constant][74] /* ty=Tensor[(910), float32] */, meta[relay.Constant][75] /* ty=Tensor[(780), float32] */, %var_3885, %1015)
}

def @func_8804(%var_8795: Tensor[(525), float32]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(1170), float64], Tensor[(525), uint64]) {
  %1016 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %1017 = cast(meta[relay.Constant][76] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1018 = reshape(%1017, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %1019 = @func_4449(%1018) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(240), int16], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64]) */;
  %1020 = cast(meta[relay.Constant][76] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1021 = @func_7246() /* ty=Tensor[(525), float32] */;
  %1022 = cast(%var_8795, dtype="uint64") /* ty=Tensor[(525), uint64] */;
  %1023 = shape_of(%1021, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1024 = cast(%1021, dtype="uint64") /* ty=Tensor[(525), uint64] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1026 = %1016.0;
  %1027 = %1019.0;
  %1028 = erf(%1020) /* ty=Tensor[(1170), float64] */;
  %1029 = multiply(%1024, %1025) /* ty=Tensor[(525), uint64] */;
  (%1026, %1027, %1028, %1029)
}

def @func_4311(%var_4286: Tensor[(1170), float64], %var_4288: Tensor[(240), int16], %var_4299: Tensor[(180, 4), uint64]) -> (Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(180, 4), uint64]) {
  %1030 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %1031 = cast(%1030, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %1032 = cast(%var_4286, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1033 = cast(meta[relay.Constant][77] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1034 = cast(%var_4288, dtype="int16") /* ty=Tensor[(240), int16] */;
  %1035 = cast(meta[relay.Constant][78] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1036 = reshape(%1032, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %1037 = reshape(%1033, newshape=[]) /* ty=int16 */;
  %1038 = reshape(%1034, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %1039 = reshape(%1035, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %1040 = @func_3427(%1036, %1037, %1038, %1039) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) */;
  %1041 = cast(%var_4299, dtype="uint64") /* ty=Tensor[(180, 4), uint64] */;
  %1042 = reshape(%1041, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %1043 = @func_3911(%1042) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
  %1044 = atan(%1031) /* ty=Tensor[(16, 8, 10), float64] */;
  %1045 = %1040.3;
  %1046 = %1043.3;
  (%1044, %1045, %var_4286, meta[relay.Constant][77] /* ty=int16 */, %var_4288, meta[relay.Constant][78] /* ty=Tensor[(72), uint64] */, %1046, %var_4299)
}

def @func_4222() -> (Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) {
  %1047 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %1048 = cast(meta[relay.Constant][79] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %1049 = cast(meta[relay.Constant][79] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %1050 = cast(meta[relay.Constant][80] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %1051 = reshape(%1048, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %1052 = reshape(%1049, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %1053 = reshape(%1050, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %1054 = @func_2138(%1051, %1052, %1053) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %1055 = %1047.0;
  %1056 = %1054.2;
  (%1055, %1056, meta[relay.Constant][79] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][80] /* ty=Tensor[(525), uint32] */)
}

def @func_5986(%var_5958: Tensor[(7, 15, 5), float64], %var_5965: Tensor[(240), int16], %var_5966: Tensor[(1280), float64]) -> (Tensor[(9, 10, 8), float32], int16, Tensor[(72), uint64], Tensor[(7, 15, 5), float64], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(14, 117), float64], Tensor[(525), float32], Tensor[(1280), float32]) {
  %1057 = @func_5908() /* ty=(Tensor[(16, 8, 10), float64], Tensor[(9, 10, 8), float32], Tensor[(720), uint64]) */;
  %1058 = cast(meta[relay.Constant][81] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1059 = cast(meta[relay.Constant][82] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1060 = reshape(%1058, newshape=[]) /* ty=int16 */;
  %1061 = reshape(%1059, newshape=[72, 1]) /* ty=Tensor[(72, 1), uint64] */;
  %1062 = @func_5596(%1060, %1061) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(1, 16, 15), bool], int16, Tensor[(240), int16], Tensor[(72, 1), uint64], Tensor[(7, 15, 5), int8]) */;
  %1063 = %1062.0;
  %1064 = cast(%var_5958, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1066 = cast(%1063, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1068 = cast(%var_5965, dtype="int16") /* ty=Tensor[(240), int16] */;
  %1069 = cast(%var_5966, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %1070 = cast(meta[relay.Constant][83] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %1071 = cast(meta[relay.Constant][84] /* ty=Tensor[(14, 117), float64] */, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %1072 = cast(%1063, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %1073 = reshape(%1068, newshape=[120, 2]) /* ty=Tensor[(120, 2), int16] */;
  %1074 = reshape(%1069, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), float64] */;
  %1075 = reshape(%1070, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %1076 = reshape(%1071, newshape=[182, 9]) /* ty=Tensor[(182, 9), float64] */;
  %1077 = reshape(%1072, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1078 = @func_4043(%1073, %1074, %1075, %1076, %1077) /* ty=(Tensor[(1, 16, 15), bool], int16, Tensor[(120, 2), int16], Tensor[(72), uint64], Tensor[(16, 8, 10), float64], int16, Tensor[(10, 117), float64], Tensor[(2, 360), uint64], Tensor[(440), float32], Tensor[(182, 9), float64], Tensor[(525), uint32]) */;
  %1079 = cast(%1063, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %1080 = reshape(%1079, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1081 = @func_4947(%1080) /* ty=(Tensor[(525), uint16], Tensor[(525), float32], Tensor[(525), float32]) */;
  %1082 = cast(%var_5966, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %1083 = %1057.1;
  %1084 = divide(%1066, %1067) /* ty=Tensor[(7, 15, 5), float64] */;
  %1085 = %1078.1;
  %1086 = %1081.1;
  %1087 = log10(%1082) /* ty=Tensor[(1280), float32] */;
  (%1083, meta[relay.Constant][81] /* ty=int16 */, meta[relay.Constant][82] /* ty=Tensor[(72), uint64] */, %1084, %1085, %var_5965, meta[relay.Constant][83] /* ty=Tensor[(440), float32] */, meta[relay.Constant][84] /* ty=Tensor[(14, 117), float64] */, %1086, %1087)
}

def @func_2673(%var_2648: Tensor[(13, 7, 10), float32], %var_2660: Tensor[(780), float32], %var_2662: Tensor[(12, 60), uint64]) -> (Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) {
  %1088 = cast(%var_2648, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
  %1089 = cast(%var_2660, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1090 = cast(%var_2660, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1091 = cast(meta[relay.Constant][85] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1092 = cast(%var_2662, dtype="uint64") /* ty=Tensor[(12, 60), uint64] */;
  %1093 = reshape(%1089, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float32] */;
  %1094 = reshape(%1090, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float32] */;
  %1095 = reshape(%1091, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %1096 = reshape(%1092, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %1097 = @func_889(%1093, %1094, %1095, %1096) /* ty=(Tensor[(13, 15, 4), float32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64]) */;
  %1098 = asinh(%1088) /* ty=Tensor[(13, 7, 10), float32] */;
  %1099 = %1097.5;
  (%1098, %1099, %var_2660, meta[relay.Constant][85] /* ty=Tensor[(72), uint64] */, %var_2662)
}

def @func_8959() -> Tensor[(16, 8, 10), float32] {
  %1100 = @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */;
  %1100.1
}

def @func_1759(%var_1754: Tensor[(7, 15, 5), uint32], %var_1755: Tensor[(7, 15, 5), uint32]) -> Tensor[(7, 15, 5), uint32] {
  %1101 = cast(%var_1755, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %1102 = shape_of(%var_1754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1103 = cast(%var_1754, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%1103, %1104) /* ty=Tensor[(7, 15, 5), uint32] */
}

def @func_4043(%var_3981: Tensor[(120, 2), int16], %var_3993: Tensor[(16, 8, 10), float64], %var_4030: Tensor[(440), float32], %var_4031: Tensor[(182, 9), float64], %var_4032: Tensor[(525), uint32]) -> (Tensor[(1, 16, 15), bool], int16, Tensor[(120, 2), int16], Tensor[(72), uint64], Tensor[(16, 8, 10), float64], int16, Tensor[(10, 117), float64], Tensor[(2, 360), uint64], Tensor[(440), float32], Tensor[(182, 9), float64], Tensor[(525), uint32]) {
  %1105 = cast(meta[relay.Constant][86] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1106 = cast(%var_3981, dtype="int16") /* ty=Tensor[(120, 2), int16] */;
  %1107 = cast(meta[relay.Constant][87] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1108 = reshape(%1105, newshape=[]) /* ty=int16 */;
  %1109 = reshape(%1106, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), int16] */;
  %1110 = reshape(%1107, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %1111 = @func_3201(%1108, %1109, %1110) /* ty=(Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) */;
  %1112 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %1113 = cast(%1112, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %1114 = asin(%1113) /* ty=Tensor[(16, 8, 10), float64] */;
  %1115 = cast(%var_3993, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %1116 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(%1114, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1119 = cast(meta[relay.Constant][88] /* ty=Tensor[(10, 117), float64] */, dtype="float64") /* ty=Tensor[(10, 117), float64] */;
  %1120 = cast(meta[relay.Constant][86] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1121 = %1111.0;
  %1122 = cast(%1121, dtype="int16") /* ty=Tensor[(1, 16, 15), int16] */;
  %1123 = cast(meta[relay.Constant][87] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1124 = reshape(%1119, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %1125 = reshape(%1120, newshape=[]) /* ty=int16 */;
  %1126 = reshape(%1122, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %1127 = reshape(%1123, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %1128 = @func_3427(%1124, %1125, %1126, %1127) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) */;
  %1129 = cast(%var_4030, dtype="float32") /* ty=Tensor[(440), float32] */;
  %1130 = cast(%var_4031, dtype="float64") /* ty=Tensor[(182, 9), float64] */;
  %1131 = cast(%var_4032, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %1132 = reshape(%1129, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), float32] */;
  %1133 = reshape(%1130, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %1134 = reshape(%1131, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1135 = @func_2400(%1132, %1133, %1134) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */;
  %1136 = floor_divide(%1117, %1118) /* ty=Tensor[(16, 8, 10), float64] */;
  %1137 = %1128.2;
  %1138 = %1135.6;
  (%1121, meta[relay.Constant][86] /* ty=int16 */, %var_3981, meta[relay.Constant][87] /* ty=Tensor[(72), uint64] */, %1136, %1137, meta[relay.Constant][88] /* ty=Tensor[(10, 117), float64] */, %1138, %var_4030, %var_4031, %var_4032)
}

def @func_3051(%var_3046: Tensor[(15, 16, 2), float64], %var_3047: Tensor[(15, 16, 2), float64]) -> (Tensor[(15, 16, 2), bool],) {
  %1139 = cast(%var_3047, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %1140 = shape_of(%var_3046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%var_3046, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1143 = less(%1141, %1142) /* ty=Tensor[(15, 16, 2), bool] */;
  (%1143,)
}

def @func_9051() -> (Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), float64]) {
  %1144 = cast(meta[relay.Constant][89] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %1145 = @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */;
  %1146 = cast(%1145, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %1147 = reshape(%1144, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %1148 = reshape(%1146, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1149 = @func_4560(%1147, %1148) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %1150 = %1149.4;
  %1151 = cast(%1150, dtype="float64") /* ty=Tensor[(525), float64] */;
  %1152 = sin(%1151) /* ty=Tensor[(525), float64] */;
  (%1145, meta[relay.Constant][89] /* ty=Tensor[(1638), float64] */, %1152)
}

def @func_8616() -> Tensor[(525), uint32] {
  %1153 = @func_6007() /* ty=(Tensor[(525), uint32],) */;
  %1153.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4076() -> (Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) {
  %7 = fn () -> (Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) {
    %0 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %3 = reshape(%1, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %4 = reshape(%2, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %5 = %0.0;
    %6 = @func_1759(%3, %4) /* ty=Tensor[(7, 15, 5), uint32] */;
    (%5, %6, meta[relay.Constant][0] /* ty=Tensor[(525), uint32] */)
  };
  %7() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */
}

def @func_6571(%var_6569: Tensor[(1638), float64]) -> (Tensor[(525), float32], Tensor[(16, 8, 10), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(440), float32]) {
  @func_6568(%var_6569) /* ty=(Tensor[(525), float32], Tensor[(16, 8, 10), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(440), float32]) */
}

def @func_7271() -> Tensor[(525), float32] {
  @func_7269() /* ty=Tensor[(525), float32] */
}

def @func_8906() -> Tensor[(16, 8, 10), float32] {
  %8 = @func_7503() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %8.0
}

def @func_9285(%var_9284: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), bool], Tensor[(525), float64], Tensor[(525), uint32]) {
  %15 = fn (%var_9246: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), bool], Tensor[(525), float64], Tensor[(525), uint32]) {
    %9 = @func_8555() /* ty=(Tensor[(16, 8, 10), bool],) */;
    %10 = cast(%var_9246, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %11 = reshape(%10, newshape=[525]) /* ty=Tensor[(525), uint32] */;
    %12 = @func_5685(%11) /* ty=(Tensor[(525), float64],) */;
    %13 = %9.0;
    %14 = %12.0;
    (%13, %14, %var_9246)
  };
  %15(%var_9284) /* ty=(Tensor[(16, 8, 10), bool], Tensor[(525), float64], Tensor[(525), uint32]) */
}

def @func_3108(%var_3106: Tensor[(5, 2, 13), float64]) -> (Tensor[(5, 2, 13), bool],) {
  @func_3105(%var_3106) /* ty=(Tensor[(5, 2, 13), bool],) */
}

def @func_8504() -> Tensor[(525), float32] {
  @func_7269() /* ty=Tensor[(525), float32] */
}

def @func_7072(%var_7021: Tensor[(1170), float64], %var_7022: Tensor[(240), int16], %var_7023: Tensor[(720), uint64], %var_7070: Tensor[(1638), float64]) -> (Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) {
  %16 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %17 = cast(%var_7021, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %18 = cast(%var_7022, dtype="int16") /* ty=Tensor[(240), int16] */;
  %19 = cast(%var_7023, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %20 = reshape(%17, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %21 = reshape(%18, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %22 = reshape(%19, newshape=[180, 4]) /* ty=Tensor[(180, 4), uint64] */;
  %23 = @func_4311(%20, %21, %22) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(180, 4), uint64]) */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %25 = reshape(%24, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %26 = @func_6209(%25) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) */;
  %27 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(1144), uint32] */, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %30 = reshape(%28, newshape=[1144]) /* ty=Tensor[(1144), uint32] */;
  %31 = reshape(%29, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %32 = @func_6710(%30, %31) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) */;
  %33 = %32.5;
  %34 = cast(%33, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %35 = cast(%var_7070, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %36 = %26.7;
  %37 = cast(%36, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %38 = reshape(%35, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %39 = reshape(%37, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %40 = @func_4560(%38, %39) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %41 = %16.0;
  %42 = %23.3;
  %43 = %27.0;
  %44 = log2(%34) /* ty=Tensor[(1144), float64] */;
  %45 = %40.2;
  (%41, %42, %var_7021, %var_7022, %var_7023, meta[relay.Constant][1] /* ty=Tensor[(1144), uint32] */, meta[relay.Constant][2] /* ty=Tensor[(440), float32] */, %36, %43, %44, %45, %var_7070)
}

def @func_8596(%var_8595: float32) -> (Tensor[(7, 15, 5), uint32], Tensor[(7, 9, 15), bool], float32) {
  %52 = fn (%var_8576: float32) -> (Tensor[(7, 15, 5), uint32], Tensor[(7, 9, 15), bool], float32) {
    %46 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
    %47 = cast(%var_8576, dtype="float32") /* ty=float32 */;
    %48 = reshape(%47, newshape=[]) /* ty=float32 */;
    %49 = @func_4158(%48) /* ty=(Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
    %50 = %46.1;
    %51 = %49.0;
    (%50, %51, %var_8576)
  };
  %52(%var_8595) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(7, 9, 15), bool], float32) */
}

def @func_8076(%var_8075: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(220, 2), float32], Tensor[(1638), float32]) {
  %73 = fn (%var_8039: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(220, 2), float32], Tensor[(1638), float32]) {
    %53 = @func_6978() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %54 = @func_6901() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) */;
    %55 = cast(%var_8039, dtype="uint64") /* ty=Tensor[(720), uint64] */;
    %56 = reshape(%55, newshape=[720]) /* ty=Tensor[(720), uint64] */;
    %57 = @func_4590(%56) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(780), float32]) */;
    %58 = @func_7503() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %59 = @func_5241() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %61 = %54.1;
    %62 = cast(%61, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %63 = reshape(%60, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %64 = reshape(%62, newshape=[525]) /* ty=Tensor[(525), uint32] */;
    %65 = @func_4560(%63, %64) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
    %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(1638), float64] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %67 = %53.0;
    %68 = %57.1;
    %69 = %58.0;
    %70 = %59.0;
    %71 = %65.2;
    %72 = rsqrt(%66) /* ty=Tensor[(1638), float32] */;
    (%67, %61, %68, %var_8039, %69, %70, %71, %72)
  };
  %73(%var_8075) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(220, 2), float32], Tensor[(1638), float32]) */
}

def @func_9399() -> Tensor[(720), uint64] {
  %75 = fn () -> Tensor[(720), uint64] {
    %74 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
    %74.2
  };
  %75() /* ty=Tensor[(720), uint64] */
}

def @func_10406() -> Tensor[(525), float32] {
  %77 = fn () -> Tensor[(525), float32] {
    %76 = @func_9117() /* ty=(Tensor[(525), float32],) */;
    %76.0
  };
  %77() /* ty=Tensor[(525), float32] */
}

def @func_8557() -> (Tensor[(16, 8, 10), bool],) {
  @func_8555() /* ty=(Tensor[(16, 8, 10), bool],) */
}

def @func_3206(%var_3203: int16, %var_3204: Tensor[(1, 16, 15), int16], %var_3205: Tensor[(18, 4), uint64]) -> (Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) {
  @func_3201(%var_3203, %var_3204, %var_3205) /* ty=(Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) */
}

def @func_8439() -> Tensor[(1638), float64] {
  %78 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %78.2
}

def @func_5015(%var_4963: Tensor[(4, 12, 10), float64], %var_4964: Tensor[(4, 12, 10), float64]) -> (Tensor[(4, 12, 10), bool], Tensor[(5, 2, 13), bool], Tensor[(130), float64], Tensor[(525), float32]) {
  %79 = cast(%var_4964, dtype="float64") /* ty=Tensor[(4, 12, 10), float64] */;
  %80 = shape_of(%var_4963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_4963, dtype="float64") /* ty=Tensor[(4, 12, 10), float64] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %83 = add(%81, %82) /* ty=Tensor[(4, 12, 10), float64] */;
  %84 = cast(%var_4963, dtype="bool") /* ty=Tensor[(4, 12, 10), bool] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="bool") /* ty=Tensor[(4, 12, 10), bool] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %88 = cast(meta[relay.Constant][4] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %89 = reshape(%88, newshape=[5, 2, 13]) /* ty=Tensor[(5, 2, 13), float64] */;
  %90 = @func_3105(%89) /* ty=(Tensor[(5, 2, 13), bool],) */;
  %91 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %92 = %91.2;
  %93 = cast(%92, dtype="float32") /* ty=Tensor[(525), float32] */;
  %94 = logical_or(%86, %87) /* ty=Tensor[(4, 12, 10), bool] */;
  %95 = %90.0;
  %96 = exp(%93) /* ty=Tensor[(525), float32] */;
  (%94, %95, meta[relay.Constant][4] /* ty=Tensor[(130), float64] */, %96)
}

def @func_6785() -> Tensor[(525), float32] {
  %98 = fn () -> Tensor[(525), float32] {
    %97 = @func_6494() /* ty=(Tensor[(525), float32],) */;
    %97.0
  };
  %98() /* ty=Tensor[(525), float32] */
}

def @func_3054(%var_3052: Tensor[(15, 16, 2), float64], %var_3053: Tensor[(15, 16, 2), float64]) -> (Tensor[(15, 16, 2), bool],) {
  %104 = fn (%var_3046: Tensor[(15, 16, 2), float64], %var_3047: Tensor[(15, 16, 2), float64]) -> (Tensor[(15, 16, 2), bool],) {
    %99 = cast(%var_3047, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %100 = shape_of(%var_3046, dtype="int32") /* ty=Tensor[(3), int32] */;
    %101 = cast(%var_3046, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %103 = less(%101, %102) /* ty=Tensor[(15, 16, 2), bool] */;
    (%103,)
  };
  %104(%var_3052, %var_3053) /* ty=(Tensor[(15, 16, 2), bool],) */
}

def @func_4478() -> (Tensor[(7, 15, 5), uint32],) {
  @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */
}

def @func_9053() -> (Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), float64]) {
  @func_9051() /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), float64]) */
}

def @func_7946(%var_7941: Tensor[(1404), float32]) -> (Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32]) {
  %105 = @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */;
  %106 = cast(%var_7941, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %107 = reshape(%106, newshape=[13, 12, 9]) /* ty=Tensor[(13, 12, 9), float32] */;
  %108 = @func_5792(%107) /* ty=(Tensor[(13, 12, 9), float64],) */;
  %109 = %105.1;
  %110 = %108.0;
  (%109, %110, %var_7941)
}

def @func_4315(%var_4312: Tensor[(1170), float64], %var_4313: Tensor[(240), int16], %var_4314: Tensor[(180, 4), uint64]) -> (Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(180, 4), uint64]) {
  %128 = fn (%var_4286: Tensor[(1170), float64], %var_4288: Tensor[(240), int16], %var_4299: Tensor[(180, 4), uint64]) -> (Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(180, 4), uint64]) {
    %111 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
    %112 = cast(%111, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
    %113 = cast(%var_4286, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %114 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %115 = cast(%var_4288, dtype="int16") /* ty=Tensor[(240), int16] */;
    %116 = cast(meta[relay.Constant][6] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %117 = reshape(%113, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
    %118 = reshape(%114, newshape=[]) /* ty=int16 */;
    %119 = reshape(%115, newshape=[240]) /* ty=Tensor[(240), int16] */;
    %120 = reshape(%116, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %121 = @func_3427(%117, %118, %119, %120) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) */;
    %122 = cast(%var_4299, dtype="uint64") /* ty=Tensor[(180, 4), uint64] */;
    %123 = reshape(%122, newshape=[720]) /* ty=Tensor[(720), uint64] */;
    %124 = @func_3911(%123) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
    %125 = atan(%112) /* ty=Tensor[(16, 8, 10), float64] */;
    %126 = %121.3;
    %127 = %124.3;
    (%125, %126, %var_4286, meta[relay.Constant][5] /* ty=int16 */, %var_4288, meta[relay.Constant][6] /* ty=Tensor[(72), uint64] */, %127, %var_4299)
  };
  %128(%var_4312, %var_4313, %var_4314) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(180, 4), uint64]) */
}

def @func_5738() -> Tensor[(16, 8, 10), float32] {
  @func_5736() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_8675(%var_8673: Tensor[(1170), float64], %var_8674: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), float32], Tensor[(360, 2), uint64], Tensor[(1170), float32], Tensor[(525), float32], Tensor[(525), uint32], Tensor[(6, 2, 11), float64], Tensor[(132), float64]) {
  %147 = fn (%var_8631: Tensor[(1170), float64], %var_8642: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), float32], Tensor[(360, 2), uint64], Tensor[(1170), float32], Tensor[(525), float32], Tensor[(525), uint32], Tensor[(6, 2, 11), float64], Tensor[(132), float64]) {
    %129 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
    %130 = cast(%var_8631, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %131 = reshape(%130, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %132 = @func_4449(%131) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(240), int16], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64]) */;
    %133 = cast(meta[relay.Constant][7] /* ty=Tensor[(1170), float64] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %134 = shape_of(%var_8631, dtype="int32") /* ty=Tensor[(1), int32] */;
    %135 = cast(%var_8631, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?), float32] */;
    %137 = cast(%var_8642, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %138 = reshape(%137, newshape=[525]) /* ty=Tensor[(525), uint32] */;
    %139 = @func_4947(%138) /* ty=(Tensor[(525), uint16], Tensor[(525), float32], Tensor[(525), float32]) */;
    %140 = cast(meta[relay.Constant][8] /* ty=Tensor[(132), float64] */, dtype="float64") /* ty=Tensor[(132), float64] */;
    %141 = reshape(%140, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), float64] */;
    %142 = %129.0;
    %143 = %132.4;
    %144 = mod(%135, %136) /* ty=Tensor[(1170), float32] */;
    %145 = %139.1;
    %146 = @func_7280(%141) /* ty=Tensor[(6, 2, 11), float64] */;
    (%142, %143, %144, %145, %var_8642, %146, meta[relay.Constant][8] /* ty=Tensor[(132), float64] */)
  };
  %147(%var_8673, %var_8674) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(360, 2), uint64], Tensor[(1170), float32], Tensor[(525), float32], Tensor[(525), uint32], Tensor[(6, 2, 11), float64], Tensor[(132), float64]) */
}

def @func_1950(%var_1948: Tensor[(15, 9, 15), float32], %var_1949: Tensor[(1, 525), uint32]) -> (Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) {
  %160 = fn (%var_1901: Tensor[(15, 9, 15), float32], %var_1921: Tensor[(1, 525), uint32]) -> (Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) {
    %148 = cast(%var_1901, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
    %149 = cast(%var_1921, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
    %150 = cast(%var_1921, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
    %151 = reshape(%149, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %152 = reshape(%150, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %153 = @func_1759(%151, %152) /* ty=Tensor[(7, 15, 5), uint32] */;
    %154 = cast(%153, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
    %155 = cast(%153, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
    %156 = reshape(%154, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %157 = reshape(%155, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %158 = sqrt(%148) /* ty=Tensor[(15, 9, 15), float32] */;
    %159 = @func_1759(%156, %157) /* ty=Tensor[(7, 15, 5), uint32] */;
    (%158, %153, %var_1921, %159)
  };
  %160(%var_1948, %var_1949) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) */
}

def @func_5496() -> Tensor[(525), uint32] {
  %162 = fn () -> Tensor[(525), uint32] {
    %161 = @func_5218() /* ty=(Tensor[(525), uint32],) */;
    %161.0
  };
  %162() /* ty=Tensor[(525), uint32] */
}

def @func_3201(%var_3180: int16, %var_3181: Tensor[(1, 16, 15), int16], %var_3198: Tensor[(18, 4), uint64]) -> (Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) {
  %163 = cast(%var_3180, dtype="bool") /* ty=bool */;
  %164 = cast(%var_3181, dtype="bool") /* ty=Tensor[(1, 16, 15), bool] */;
  %165 = cast(meta[relay.Constant][9] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %166 = cast(meta[relay.Constant][9] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %167 = cast(meta[relay.Constant][10] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %168 = reshape(%165, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %169 = reshape(%166, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %170 = reshape(%167, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %171 = @func_2138(%168, %169, %170) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %172 = cast(%var_3198, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %173 = cast(meta[relay.Constant][11] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %174 = reshape(%172, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %175 = reshape(%173, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %176 = @func_662(%174, %175) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %177 = less_equal(%163, %164) /* ty=Tensor[(1, 16, 15), bool] */;
  %178 = %171.2;
  %179 = %176.0;
  (%177, %178, meta[relay.Constant][9] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][10] /* ty=Tensor[(525), uint32] */, %179, %var_3198, meta[relay.Constant][11] /* ty=Tensor[(720), uint64] */)
}

def @func_6402() -> Tensor[(16, 8, 10), float32] {
  %180 = fn () -> Tensor[(16, 8, 10), float32] {
    @func_3845() /* ty=Tensor[(16, 8, 10), float32] */
  };
  %180() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_9793(%var_9791: Tensor[(240), int16]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64], Tensor[(1638), float64], Tensor[(525), uint32]) {
  @func_9790(%var_9791) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64], Tensor[(1638), float64], Tensor[(525), uint32]) */
}

def @func_8137() -> (Tensor[(16, 8, 10), float32], Tensor[(1, 525), uint32], Tensor[(2025), float32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(546, 3), float64]) {
  @func_8135() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(1, 525), uint32], Tensor[(2025), float32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(546, 3), float64]) */
}

def @func_7103() -> Tensor[(16, 8, 10), float32] {
  %181 = fn () -> Tensor[(16, 8, 10), float32] {
    @func_6401() /* ty=Tensor[(16, 8, 10), float32] */
  };
  %181() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_6332() -> Tensor[(7, 15, 5), uint32] {
  %182 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %182.0
}

def @func_6008() -> (Tensor[(525), uint32],) {
  %184 = fn () -> (Tensor[(525), uint32],) {
    %183 = @func_5506() /* ty=Tensor[(525), uint32] */;
    (%183,)
  };
  %184() /* ty=(Tensor[(525), uint32],) */
}

def @func_6902() -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) {
  %188 = fn () -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) {
    %185 = @func_6007() /* ty=(Tensor[(525), uint32],) */;
    %186 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
    %187 = %185.0;
    (%186, %187)
  };
  %188() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) */
}

def @func_7347(%var_7327: Tensor[(1170), float64]) -> (Tensor[(525), uint32], Tensor[(1638), float64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1638), float64]) {
  %189 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %190 = cast(%var_7327, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %191 = cast(meta[relay.Constant][12] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %192 = cast(meta[relay.Constant][13] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %193 = cast(meta[relay.Constant][14] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %194 = reshape(%190, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %195 = reshape(%191, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %196 = reshape(%192, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %197 = reshape(%193, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %198 = @func_7072(%194, %195, %196, %197) /* ty=(Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) */;
  %199 = %189.3;
  %200 = %198.11;
  (%199, %200, %var_7327, meta[relay.Constant][12] /* ty=Tensor[(240), int16] */, meta[relay.Constant][13] /* ty=Tensor[(720), uint64] */, meta[relay.Constant][14] /* ty=Tensor[(1638), float64] */)
}

def @func_7280(%var_7272: Tensor[(6, 2, 11), float64]) -> Tensor[(6, 2, 11), float64] {
  %201 = cast(%var_7272, dtype="float64") /* ty=Tensor[(6, 2, 11), float64] */;
  log2(%201) /* ty=Tensor[(6, 2, 11), float64] */
}

def @func_4144(%var_4141: Tensor[(16, 8, 10), float32], %var_4142: Tensor[(72), uint64], %var_4143: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), uint32], Tensor[(72), uint64], Tensor[(1470), int16], Tensor[(72), uint64], Tensor[(720), uint64]) {
  %221 = fn (%var_4107: Tensor[(16, 8, 10), float32], %var_4119: Tensor[(72), uint64], %var_4120: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), uint32], Tensor[(72), uint64], Tensor[(1470), int16], Tensor[(72), uint64], Tensor[(720), uint64]) {
    %202 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %203 = %202.0;
    %204 = cast(%203, dtype="float32") /* ty=Tensor[(16, 8, 10), float32] */;
    %205 = rsqrt(%204) /* ty=Tensor[(16, 8, 10), float32] */;
    %206 = cast(%var_4107, dtype="uint32") /* ty=Tensor[(16, 8, 10), uint32] */;
    %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
    %208 = cast(%205, dtype="uint32") /* ty=Tensor[(16, 8, 10), uint32] */;
    %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %210 = cast(meta[relay.Constant][15] /* ty=Tensor[(1470), int16] */, dtype="int16") /* ty=Tensor[(1470), int16] */;
    %211 = cast(meta[relay.Constant][15] /* ty=Tensor[(1470), int16] */, dtype="int16") /* ty=Tensor[(1470), int16] */;
    %212 = cast(%var_4119, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %213 = cast(%var_4120, dtype="uint64") /* ty=Tensor[(720), uint64] */;
    %214 = reshape(%210, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), int16] */;
    %215 = reshape(%211, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), int16] */;
    %216 = reshape(%212, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %217 = reshape(%213, newshape=[720]) /* ty=Tensor[(720), uint64] */;
    %218 = @func_2326(%214, %215, %216, %217) /* ty=(Tensor[(14, 15, 7), bool], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64]) */;
    %219 = left_shift(%208, %209) /* ty=Tensor[(16, 8, 10), uint32] */;
    %220 = %218.2;
    (%219, %220, meta[relay.Constant][15] /* ty=Tensor[(1470), int16] */, %var_4119, %var_4120)
  };
  %221(%var_4141, %var_4142, %var_4143) /* ty=(Tensor[(16, 8, 10), uint32], Tensor[(72), uint64], Tensor[(1470), int16], Tensor[(72), uint64], Tensor[(720), uint64]) */
}

def @func_8381() -> Tensor[(16, 8, 10), float32] {
  @func_8379() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_7494(%var_7491: Tensor[(8, 2, 3), float32], %var_7492: Tensor[(240), int16], %var_7493: Tensor[(720), uint64]) -> (Tensor[(8, 2, 3), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(1170), float32], Tensor[(7, 15, 5), uint32], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(7, 13, 4), float32]) {
  %244 = fn (%var_7452: Tensor[(8, 2, 3), float32], %var_7481: Tensor[(240), int16], %var_7482: Tensor[(720), uint64]) -> (Tensor[(8, 2, 3), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(1170), float32], Tensor[(7, 15, 5), uint32], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(7, 13, 4), float32]) {
    %222 = cast(%var_7452, dtype="float32") /* ty=Tensor[(8, 2, 3), float32] */;
    %223 = cast(meta[relay.Constant][16] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %224 = reshape(%223, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %225 = @func_7347(%224) /* ty=(Tensor[(525), uint32], Tensor[(1638), float64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1638), float64]) */;
    %226 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
    %227 = cast(meta[relay.Constant][16] /* ty=Tensor[(1170), float64] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %228 = atan(%227) /* ty=Tensor[(1170), float32] */;
    %229 = cast(%228, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %230 = cast(%var_7481, dtype="int16") /* ty=Tensor[(240), int16] */;
    %231 = cast(%var_7482, dtype="uint64") /* ty=Tensor[(720), uint64] */;
    %232 = %225.5;
    %233 = cast(%232, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %234 = reshape(%229, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %235 = reshape(%230, newshape=[240]) /* ty=Tensor[(240), int16] */;
    %236 = reshape(%231, newshape=[720]) /* ty=Tensor[(720), uint64] */;
    %237 = reshape(%233, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %238 = @func_7072(%234, %235, %236, %237) /* ty=(Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) */;
    %239 = @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */;
    %240 = cosh(%222) /* ty=Tensor[(8, 2, 3), float32] */;
    %241 = %226.0;
    %242 = %238.7;
    %243 = %239.0;
    (%240, %232, %241, %228, %242, %var_7481, %var_7482, %243)
  };
  %244(%var_7491, %var_7492, %var_7493) /* ty=(Tensor[(8, 2, 3), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(1170), float32], Tensor[(7, 15, 5), uint32], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(7, 13, 4), float32]) */
}

def @func_10519() -> Tensor[(525), uint32] {
  @func_7424() /* ty=Tensor[(525), uint32] */
}

def @func_10194() -> (Tensor[(16, 8, 10), float32],) {
  %247 = fn () -> (Tensor[(16, 8, 10), float32],) {
    %245 = @func_9851() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32]) */;
    %246 = %245.0;
    (%246,)
  };
  %247() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_4564(%var_4562: Tensor[(1638), float64], %var_4563: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) {
  @func_4560(%var_4562, %var_4563) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */
}

def @func_10528() -> Tensor[(525), float32] {
  @func_10526() /* ty=Tensor[(525), float32] */
}

def @func_4722(%var_4720: Tensor[(14, 117), float64], %var_4721: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), int64], Tensor[(16, 8, 10), float32], Tensor[(14, 117), float64], Tensor[(525), uint32]) {
  @func_4718(%var_4720, %var_4721) /* ty=(Tensor[(16, 8, 10), int64], Tensor[(16, 8, 10), float32], Tensor[(14, 117), float64], Tensor[(525), uint32]) */
}

def @func_3105(%var_3098: Tensor[(5, 2, 13), float64]) -> (Tensor[(5, 2, 13), bool],) {
  %248 = cast(%var_3098, dtype="float64") /* ty=Tensor[(5, 2, 13), float64] */;
  %249 = acos(%248) /* ty=Tensor[(5, 2, 13), float64] */;
  %250 = cast(%var_3098, dtype="bool") /* ty=Tensor[(5, 2, 13), bool] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="bool") /* ty=Tensor[(5, 2, 13), bool] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %254 = not_equal(%252, %253) /* ty=Tensor[(5, 2, 13), bool] */;
  (%254,)
}

def @func_10088() -> (Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %260 = fn () -> (Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
    %255 = cast(meta[relay.Constant][17] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %256 = reshape(%255, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %257 = @func_6286(%256) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
    %258 = @func_8906() /* ty=Tensor[(16, 8, 10), float32] */;
    %259 = %257.1;
    (%258, %259, meta[relay.Constant][17] /* ty=Tensor[(364), float64] */)
  };
  %260() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */
}

def @func_3694(%var_3692: int32, %var_3693: Tensor[(10, 10, 1), int32]) -> Tensor[(10, 10, 1), bool] {
  @func_3690(%var_3692, %var_3693) /* ty=Tensor[(10, 10, 1), bool] */
}

def @func_5599(%var_5597: int16, %var_5598: Tensor[(72, 1), uint64]) -> (Tensor[(7, 15, 5), float64], Tensor[(1, 16, 15), bool], int16, Tensor[(240), int16], Tensor[(72, 1), uint64], Tensor[(7, 15, 5), int8]) {
  %282 = fn (%var_5585: int16, %var_5587: Tensor[(72, 1), uint64]) -> (Tensor[(7, 15, 5), float64], Tensor[(1, 16, 15), bool], int16, Tensor[(240), int16], Tensor[(72, 1), uint64], Tensor[(7, 15, 5), int8]) {
    %261 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
    %262 = %261.0;
    %263 = cast(%262, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
    %264 = exp(%263) /* ty=Tensor[(7, 15, 5), float64] */;
    %265 = cast(%262, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
    %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %267 = cast(%264, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %269 = cast(%var_5585, dtype="int16") /* ty=int16 */;
    %270 = cast(meta[relay.Constant][18] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
    %271 = cast(%var_5587, dtype="uint64") /* ty=Tensor[(72, 1), uint64] */;
    %272 = reshape(%269, newshape=[]) /* ty=int16 */;
    %273 = reshape(%270, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), int16] */;
    %274 = reshape(%271, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
    %275 = @func_3201(%272, %273, %274) /* ty=(Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) */;
    %276 = cast(%264, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
    %277 = reshape(%276, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %278 = @func_5426(%277) /* ty=(Tensor[(7, 15, 5), int8],) */;
    %279 = mod(%267, %268) /* ty=Tensor[(7, 15, 5), float64] */;
    %280 = %275.0;
    %281 = %278.0;
    (%279, %280, %var_5585, meta[relay.Constant][18] /* ty=Tensor[(240), int16] */, %var_5587, %281)
  };
  %282(%var_5597, %var_5598) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(1, 16, 15), bool], int16, Tensor[(240), int16], Tensor[(72, 1), uint64], Tensor[(7, 15, 5), int8]) */
}

def @func_5685(%var_5677: Tensor[(525), uint32]) -> (Tensor[(525), float64],) {
  %283 = @func_5506() /* ty=Tensor[(525), uint32] */;
  %284 = cast(%var_5677, dtype="float64") /* ty=Tensor[(525), float64] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(1), int32] */;
  %286 = cast(%283, dtype="float64") /* ty=Tensor[(525), float64] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?), float64] */;
  %288 = floor_divide(%286, %287) /* ty=Tensor[(525), float64] */;
  (%288,)
}

def @func_6616() -> (Tensor[(525), uint32],) {
  %291 = fn () -> (Tensor[(525), uint32],) {
    %289 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
    %290 = %289.2;
    (%290,)
  };
  %291() /* ty=(Tensor[(525), uint32],) */
}

def @func_4950(%var_4948: Tensor[(525), uint32]) -> (Tensor[(525), uint16], Tensor[(525), float32], Tensor[(525), float32]) {
  @func_4947(%var_4948) /* ty=(Tensor[(525), uint16], Tensor[(525), float32], Tensor[(525), float32]) */
}

def @func_4161(%var_4159: float32) -> (Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  @func_4158(%var_4159) /* ty=(Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */
}

def @func_9119() -> (Tensor[(525), float32],) {
  @func_9117() /* ty=(Tensor[(525), float32],) */
}

def @func_9233(%var_9231: Tensor[(72), uint64]) -> (Tensor[(16, 8, 10), bool], Tensor[(7, 15, 5), uint32], Tensor[(720), float64], Tensor[(72), uint64], Tensor[(9, 10, 8), int16]) {
  @func_9230(%var_9231) /* ty=(Tensor[(16, 8, 10), bool], Tensor[(7, 15, 5), uint32], Tensor[(720), float64], Tensor[(72), uint64], Tensor[(9, 10, 8), int16]) */
}

def @func_10526() -> Tensor[(525), float32] {
  @func_6784() /* ty=Tensor[(525), float32] */
}

def @func_895(%var_891: Tensor[(13, 15, 4), float32], %var_892: Tensor[(13, 15, 4), float32], %var_893: Tensor[(72), uint64], %var_894: Tensor[(720), uint64]) -> (Tensor[(13, 15, 4), float32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64]) {
  @func_889(%var_891, %var_892, %var_893, %var_894) /* ty=(Tensor[(13, 15, 4), float32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64]) */
}

def @func_7350(%var_7348: Tensor[(1170), float64]) -> (Tensor[(525), uint32], Tensor[(1638), float64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1638), float64]) {
  @func_7347(%var_7348) /* ty=(Tensor[(525), uint32], Tensor[(1638), float64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1638), float64]) */
}

def @func_9230(%var_9190: Tensor[(72), uint64]) -> (Tensor[(16, 8, 10), bool], Tensor[(7, 15, 5), uint32], Tensor[(720), float64], Tensor[(72), uint64], Tensor[(9, 10, 8), int16]) {
  %292 = @func_8555() /* ty=(Tensor[(16, 8, 10), bool],) */;
  %293 = cast(meta[relay.Constant][19] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %294 = cast(%var_9190, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %295 = reshape(%293, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
  %296 = reshape(%294, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %297 = @func_7917(%295, %296) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) */;
  %298 = cast(meta[relay.Constant][19] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %299 = cast(%var_9190, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %300 = reshape(%298, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
  %301 = reshape(%299, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %302 = @func_7917(%300, %301) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) */;
  %303 = %292.0;
  %304 = %297.0;
  %305 = %302.2;
  (%303, %304, meta[relay.Constant][19] /* ty=Tensor[(720), float64] */, %var_9190, %305)
}

def @func_8282() -> (Tensor[(525), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64], Tensor[(5, 2, 13), bool]) {
  %315 = fn () -> (Tensor[(525), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64], Tensor[(5, 2, 13), bool]) {
    %306 = cast(meta[relay.Constant][20] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %307 = reshape(%306, newshape=[5, 2, 13]) /* ty=Tensor[(5, 2, 13), float64] */;
    %308 = @func_3105(%307) /* ty=(Tensor[(5, 2, 13), bool],) */;
    %309 = cast(meta[relay.Constant][20] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %310 = reshape(%309, newshape=[5, 2, 13]) /* ty=Tensor[(5, 2, 13), float64] */;
    %311 = @func_3105(%310) /* ty=(Tensor[(5, 2, 13), bool],) */;
    %312 = @func_7424() /* ty=Tensor[(525), uint32] */;
    %313 = %308.0;
    %314 = %311.0;
    (%312, %313, meta[relay.Constant][20] /* ty=Tensor[(130), float64] */, %314)
  };
  %315() /* ty=(Tensor[(525), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64], Tensor[(5, 2, 13), bool]) */
}

def @func_10425() -> (Tensor[(16, 8, 10), float32],) {
  %318 = fn () -> (Tensor[(16, 8, 10), float32],) {
    %316 = @func_6901() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) */;
    %317 = %316.0;
    (%317,)
  };
  %318() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_9051() -> (Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), float64]) {
  %319 = cast(meta[relay.Constant][21] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %320 = @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */;
  %321 = cast(%320, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %322 = reshape(%319, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %323 = reshape(%321, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %324 = @func_4560(%322, %323) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %325 = %324.4;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(525), float64] */;
  %327 = sin(%326) /* ty=Tensor[(525), float64] */;
  (%320, meta[relay.Constant][21] /* ty=Tensor[(1638), float64] */, %327)
}

def @func_9825(%var_9818: Tensor[(16, 8, 10), float32]) -> Tensor[(16, 8, 10), bool] {
  %328 = @func_6349() /* ty=Tensor[(16, 8, 10), float32] */;
  %329 = cast(%var_9818, dtype="bool") /* ty=Tensor[(16, 8, 10), bool] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="bool") /* ty=Tensor[(16, 8, 10), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%331, %332) /* ty=Tensor[(16, 8, 10), bool] */
}

def @func_4832() -> (Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) {
  @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */
}

def @func_8859() -> (Tensor[(16, 8, 10), float32],) {
  @func_8857() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_5426(%var_5421: Tensor[(7, 15, 5), uint32]) -> (Tensor[(7, 15, 5), int8],) {
  %333 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %334 = %333.0;
  %335 = cast(%var_5421, dtype="int8") /* ty=Tensor[(7, 15, 5), int8] */;
  %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%334, dtype="int8") /* ty=Tensor[(7, 15, 5), int8] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %339 = bitwise_or(%337, %338) /* ty=Tensor[(7, 15, 5), int8] */;
  (%339,)
}

def @func_5645() -> (Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) {
  %340 = cast(meta[relay.Constant][22] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %341 = reshape(%340, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %342 = @func_4590(%341) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(780), float32]) */;
  %343 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %344 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %345 = %342.3;
  %346 = %343.2;
  (%344, %345, meta[relay.Constant][22] /* ty=Tensor[(720), uint64] */, %346)
}

def @func_5166() -> (Tensor[(16, 8, 10), float32],) {
  %349 = fn () -> (Tensor[(16, 8, 10), float32],) {
    %347 = @func_5087() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) */;
    %348 = %347.0;
    (%348,)
  };
  %349() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_6415() -> (Tensor[(16, 15, 2), float64],) {
  %352 = fn () -> (Tensor[(16, 15, 2), float64],) {
    %350 = @func_4671() /* ty=(Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
    %351 = %350.0;
    (%351,)
  };
  %352() /* ty=(Tensor[(16, 15, 2), float64],) */
}

def @func_6211(%var_6210: Tensor[(440), float32]) -> (Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) {
  %377 = fn (%var_6179: Tensor[(440), float32]) -> (Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) {
    %353 = @func_5524() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %354 = %353.0;
    %355 = cast(%354, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
    %356 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
    %357 = cast(meta[relay.Constant][23] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
    %358 = %356.0;
    %359 = cast(%358, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
    %360 = cast(%var_6179, dtype="float32") /* ty=Tensor[(440), float32] */;
    %361 = cast(meta[relay.Constant][24] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %362 = cast(meta[relay.Constant][25] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %363 = reshape(%357, newshape=[120, 2]) /* ty=Tensor[(120, 2), int16] */;
    %364 = reshape(%359, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), float64] */;
    %365 = reshape(%360, newshape=[440]) /* ty=Tensor[(440), float32] */;
    %366 = reshape(%361, newshape=[182, 9]) /* ty=Tensor[(182, 9), float64] */;
    %367 = reshape(%362, newshape=[525]) /* ty=Tensor[(525), uint32] */;
    %368 = @func_4043(%363, %364, %365, %366, %367) /* ty=(Tensor[(1, 16, 15), bool], int16, Tensor[(120, 2), int16], Tensor[(72), uint64], Tensor[(16, 8, 10), float64], int16, Tensor[(10, 117), float64], Tensor[(2, 360), uint64], Tensor[(440), float32], Tensor[(182, 9), float64], Tensor[(525), uint32]) */;
    %369 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
    %370 = cast(meta[relay.Constant][26] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %371 = reshape(%370, newshape=[5, 2, 13]) /* ty=Tensor[(5, 2, 13), float64] */;
    %372 = @func_3105(%371) /* ty=(Tensor[(5, 2, 13), bool],) */;
    %373 = cosh(%355) /* ty=Tensor[(16, 8, 10), float64] */;
    %374 = %368.5;
    %375 = %369.0;
    %376 = %372.0;
    (%373, %358, %374, meta[relay.Constant][23] /* ty=Tensor[(240), int16] */, %var_6179, meta[relay.Constant][24] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][25] /* ty=Tensor[(525), uint32] */, %375, %376, meta[relay.Constant][26] /* ty=Tensor[(130), float64] */)
  };
  %377(%var_6210) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) */
}

def @func_6286(%var_6275: Tensor[(364), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %378 = cast(%var_6275, dtype="float64") /* ty=Tensor[(364), float64] */;
  %379 = reshape(%378, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %380 = @func_1972(%379) /* ty=(Tensor[(7, 13, 4), float64],) */;
  %381 = @func_5736() /* ty=Tensor[(16, 8, 10), float32] */;
  %382 = %380.0;
  (%381, %382, %var_6275)
}

def @func_8961() -> Tensor[(16, 8, 10), float32] {
  @func_8959() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_9117() -> (Tensor[(525), float32],) {
  %383 = @func_6494() /* ty=(Tensor[(525), float32],) */;
  %384 = %383.0;
  (%384,)
}

def @func_10507(%var_10505: bool, %var_10506: Tensor[(4, 8, 10), bool]) -> Tensor[(4, 8, 10), bool] {
  @func_10503(%var_10505, %var_10506) /* ty=Tensor[(4, 8, 10), bool] */
}

def @func_7283(%var_7281: Tensor[(6, 2, 11), float64]) -> Tensor[(6, 2, 11), float64] {
  @func_7280(%var_7281) /* ty=Tensor[(6, 2, 11), float64] */
}

def @func_4449(%var_4435: Tensor[(1170), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(240), int16], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64]) {
  %385 = cast(%var_4435, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %386 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %387 = cast(meta[relay.Constant][28] /* ty=Tensor[(360, 2), uint64] */, dtype="uint64") /* ty=Tensor[(360, 2), uint64] */;
  %388 = reshape(%385, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %389 = reshape(%386, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %390 = reshape(%387, newshape=[180, 4]) /* ty=Tensor[(180, 4), uint64] */;
  %391 = @func_4311(%388, %389, %390) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(180, 4), uint64]) */;
  %392 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %393 = %391.1;
  (%392, %393, %var_4435, meta[relay.Constant][27] /* ty=Tensor[(240), int16] */, meta[relay.Constant][28] /* ty=Tensor[(360, 2), uint64] */)
}

def @func_7961() -> Tensor[(525), float32] {
  %395 = fn () -> Tensor[(525), float32] {
    %394 = @func_7260() /* ty=(Tensor[(525), float32], Tensor[(16, 8, 10), float32]) */;
    %394.0
  };
  %395() /* ty=Tensor[(525), float32] */
}

def @func_889(%var_817: Tensor[(13, 15, 4), float32], %var_818: Tensor[(13, 15, 4), float32], %var_823: Tensor[(72), uint64], %var_824: Tensor[(720), uint64]) -> (Tensor[(13, 15, 4), float32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64]) {
  %396 = cast(%var_818, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %397 = shape_of(%var_817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%var_817, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %400 = cast(%var_823, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %401 = cast(%var_824, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %402 = reshape(%400, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %403 = reshape(%401, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %404 = @func_662(%402, %403) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %405 = cast(%var_823, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %406 = cast(%var_824, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %407 = reshape(%405, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %408 = reshape(%406, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %409 = @func_662(%407, %408) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %410 = cast(%var_823, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %411 = cast(%var_824, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %412 = reshape(%410, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %413 = reshape(%411, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %414 = @func_662(%412, %413) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %415 = cast(%var_823, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %416 = %404.0;
  %417 = cast(%416, dtype="uint64") /* ty=Tensor[(9, 10, 8), uint64] */;
  %418 = reshape(%415, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %419 = reshape(%417, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %420 = @func_662(%418, %419) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %421 = mod(%398, %399) /* ty=Tensor[(13, 15, 4), float32] */;
  %422 = %409.0;
  %423 = %414.0;
  %424 = %420.0;
  (%421, %416, %var_823, %var_824, %422, %423, %424)
}

def @func_10521() -> Tensor[(525), uint32] {
  @func_10519() /* ty=Tensor[(525), uint32] */
}

def @func_10503(%var_10494: bool, %var_10495: Tensor[(4, 8, 10), bool]) -> Tensor[(4, 8, 10), bool] {
  %425 = cast(%var_10494, dtype="bool") /* ty=bool */;
  %426 = cast(%var_10495, dtype="bool") /* ty=Tensor[(4, 8, 10), bool] */;
  logical_or(%425, %426) /* ty=Tensor[(4, 8, 10), bool] */
}

def @func_4158(%var_4148: float32) -> (Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %427 = cast(%var_4148, dtype="bool") /* ty=bool */;
  %428 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 9, 15), float32] */, dtype="bool") /* ty=Tensor[(7, 9, 15), bool] */;
  %429 = cast(meta[relay.Constant][30] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %430 = reshape(%429, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %431 = @func_1972(%430) /* ty=(Tensor[(7, 13, 4), float64],) */;
  %432 = equal(%427, %428) /* ty=Tensor[(7, 9, 15), bool] */;
  %433 = %431.0;
  (%432, %433, meta[relay.Constant][30] /* ty=Tensor[(364), float64] */)
}

def @func_9727() -> (Tensor[(525), float32],) {
  %435 = fn () -> (Tensor[(525), float32],) {
    %434 = @func_7269() /* ty=Tensor[(525), float32] */;
    (%434,)
  };
  %435() /* ty=(Tensor[(525), float32],) */
}

def @func_8857() -> (Tensor[(16, 8, 10), float32],) {
  %436 = @func_8379() /* ty=Tensor[(16, 8, 10), float32] */;
  (%436,)
}

def @func_1974(%var_1973: Tensor[(7, 13, 4), float64]) -> (Tensor[(7, 13, 4), float64],) {
  %441 = fn (%var_1962: Tensor[(7, 13, 4), float64]) -> (Tensor[(7, 13, 4), float64],) {
    %437 = cast(%var_1962, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
    %438 = acosh(%437) /* ty=Tensor[(7, 13, 4), float64] */;
    %439 = cast(%438, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
    %440 = log(%439) /* ty=Tensor[(7, 13, 4), float64] */;
    (%440,)
  };
  %441(%var_1973) /* ty=(Tensor[(7, 13, 4), float64],) */
}

def @func_6334() -> Tensor[(7, 15, 5), uint32] {
  @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */
}

def @func_4352(%var_4327: Tensor[(720), uint64]) -> (Tensor[(35, 15), uint32], Tensor[(720), uint64], Tensor[(640, 2), float32], Tensor[(18, 4), uint64], Tensor[(720), uint64], Tensor[(1638), float64]) {
  %442 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %443 = cast(meta[relay.Constant][31] /* ty=Tensor[(640, 2), float32] */, dtype="float32") /* ty=Tensor[(640, 2), float32] */;
  %444 = cast(meta[relay.Constant][32] /* ty=Tensor[(18, 4), uint64] */, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %445 = cast(%var_4327, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %446 = reshape(%443, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), float32] */;
  %447 = reshape(%444, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %448 = reshape(%445, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %449 = @func_4140(%446, %447, %448) /* ty=(Tensor[(16, 8, 10), uint32], Tensor[(72), uint64], Tensor[(1470), int16], Tensor[(72), uint64], Tensor[(720), uint64]) */;
  %450 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %451 = %442.1;
  %452 = %449.4;
  %453 = %450.2;
  (%451, %452, meta[relay.Constant][31] /* ty=Tensor[(640, 2), float32] */, meta[relay.Constant][32] /* ty=Tensor[(18, 4), uint64] */, %var_4327, %453)
}

def @func_7208(%var_7205: Tensor[(15, 9, 15), uint64], %var_7206: Tensor[(15, 9, 15), uint64], %var_7207: Tensor[(720), uint64]) -> (Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32], Tensor[(35, 15), uint32], Tensor[(720), uint64]) {
  %465 = fn (%var_7188: Tensor[(15, 9, 15), uint64], %var_7189: Tensor[(15, 9, 15), uint64], %var_7202: Tensor[(720), uint64]) -> (Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32], Tensor[(35, 15), uint32], Tensor[(720), uint64]) {
    %454 = cast(%var_7189, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
    %455 = shape_of(%var_7188, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(%var_7188, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %458 = cast(%var_7188, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
    %459 = cast(%var_7202, dtype="uint64") /* ty=Tensor[(720), uint64] */;
    %460 = reshape(%459, newshape=[720]) /* ty=Tensor[(720), uint64] */;
    %461 = @func_4352(%460) /* ty=(Tensor[(35, 15), uint32], Tensor[(720), uint64], Tensor[(640, 2), float32], Tensor[(18, 4), uint64], Tensor[(720), uint64], Tensor[(1638), float64]) */;
    %462 = less(%456, %457) /* ty=Tensor[(15, 9, 15), bool] */;
    %463 = log(%458) /* ty=Tensor[(15, 9, 15), float32] */;
    %464 = %461.0;
    (%462, %463, %464, %var_7202)
  };
  %465(%var_7205, %var_7206, %var_7207) /* ty=(Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32], Tensor[(35, 15), uint32], Tensor[(720), uint64]) */
}

def @func_2142(%var_2139: Tensor[(13, 14, 9), float64], %var_2140: Tensor[(13, 14, 9), float64], %var_2141: Tensor[(35, 15), uint32]) -> (Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) {
  %484 = fn (%var_2105: Tensor[(13, 14, 9), float64], %var_2106: Tensor[(13, 14, 9), float64], %var_2114: Tensor[(35, 15), uint32]) -> (Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) {
    %466 = cast(%var_2106, dtype="float64") /* ty=Tensor[(13, 14, 9), float64] */;
    %467 = shape_of(%var_2105, dtype="int32") /* ty=Tensor[(3), int32] */;
    %468 = cast(%var_2105, dtype="float64") /* ty=Tensor[(13, 14, 9), float64] */;
    %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %470 = cast(meta[relay.Constant][33] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %471 = cast(%var_2114, dtype="uint32") /* ty=Tensor[(35, 15), uint32] */;
    %472 = reshape(%470, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
    %473 = reshape(%471, newshape=[1, 525]) /* ty=Tensor[(1, 525), uint32] */;
    %474 = @func_1947(%472, %473) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) */;
    %475 = %474.1;
    %476 = cast(%475, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
    %477 = cast(%var_2114, dtype="uint32") /* ty=Tensor[(35, 15), uint32] */;
    %478 = reshape(%476, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %479 = reshape(%477, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %480 = cast(meta[relay.Constant][33] /* ty=Tensor[(2025), float32] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %481 = floor_divide(%468, %469) /* ty=Tensor[(13, 14, 9), float64] */;
    %482 = @func_1759(%478, %479) /* ty=Tensor[(7, 15, 5), uint32] */;
    %483 = asinh(%480) /* ty=Tensor[(2025), float64] */;
    (%481, %475, %var_2114, %482, %483)
  };
  %484(%var_2139, %var_2140, %var_2141) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */
}

def @func_5087() -> (Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) {
  %485 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %486 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %487 = sin(%486) /* ty=Tensor[(2, 5, 6), float32] */;
  %488 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(2, 5, 6), bool] */;
  %489 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%487, dtype="bool") /* ty=Tensor[(2, 5, 6), bool] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %492 = not_equal(%490, %491) /* ty=Tensor[(2, 5, 6), bool] */;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %494 = %485.0;
  %495 = asinh(%493) /* ty=Tensor[(2, 5, 6), float32] */;
  (%494, %495)
}

def @func_4947(%var_4906: Tensor[(525), uint32]) -> (Tensor[(525), uint16], Tensor[(525), float32], Tensor[(525), float32]) {
  %496 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %497 = %496.2;
  %498 = cast(%var_4906, dtype="uint64") /* ty=Tensor[(525), uint64] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(1), int32] */;
  %500 = cast(%497, dtype="uint64") /* ty=Tensor[(525), uint64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %502 = logical_xor(%500, %501) /* ty=Tensor[(525), uint64] */;
  %503 = cast(%502, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %504 = shape_of(%497, dtype="int32") /* ty=Tensor[(1), int32] */;
  %505 = cast(%497, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %507 = cast(%var_4906, dtype="float32") /* ty=Tensor[(525), float32] */;
  %508 = cast(%497, dtype="float32") /* ty=Tensor[(525), float32] */;
  %509 = bitwise_xor(%505, %506) /* ty=Tensor[(525), uint16] */;
  %510 = erf(%507) /* ty=Tensor[(525), float32] */;
  %511 = asinh(%508) /* ty=Tensor[(525), float32] */;
  (%509, %510, %511)
}

def @func_3813() -> (Tensor[(16, 8, 10), float32],) {
  @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_4766(%var_4764: int32, %var_4765: Tensor[(100), int32]) -> (Tensor[(7, 15, 5), uint32], Tensor[(7, 15, 5), uint32], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32], Tensor[(7, 15, 5), uint32]) {
  %523 = fn (%var_4741: int32, %var_4742: Tensor[(100), int32]) -> (Tensor[(7, 15, 5), uint32], Tensor[(7, 15, 5), uint32], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32], Tensor[(7, 15, 5), uint32]) {
    %512 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
    %513 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
    %514 = cast(%var_4741, dtype="int32") /* ty=int32 */;
    %515 = cast(%var_4742, dtype="int32") /* ty=Tensor[(100), int32] */;
    %516 = reshape(%514, newshape=[]) /* ty=int32 */;
    %517 = reshape(%515, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), int32] */;
    %518 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
    %519 = %512.0;
    %520 = %513.0;
    %521 = @func_3690(%516, %517) /* ty=Tensor[(10, 10, 1), bool] */;
    %522 = %518.1;
    (%519, %520, %521, %var_4741, %var_4742, %522)
  };
  %523(%var_4764, %var_4765) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(7, 15, 5), uint32], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32], Tensor[(7, 15, 5), uint32]) */
}

def @func_3847() -> Tensor[(16, 8, 10), float32] {
  @func_3845() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_7642(%var_7638: Tensor[(2025), float32], %var_7639: Tensor[(910), float32], %var_7640: Tensor[(130, 6), float32], %var_7641: Tensor[(220, 2), float32]) -> (Tensor[(525), float32], Tensor[(525), uint32], Tensor[(1, 525), uint32], Tensor[(2025), float32], Tensor[(72), uint64], Tensor[(910), float32], Tensor[(720), uint64], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32], Tensor[(7, 9, 15), bool], Tensor[(130, 6), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(220, 2), float32]) {
  @func_7636(%var_7638, %var_7639, %var_7640, %var_7641) /* ty=(Tensor[(525), float32], Tensor[(525), uint32], Tensor[(1, 525), uint32], Tensor[(2025), float32], Tensor[(72), uint64], Tensor[(910), float32], Tensor[(720), uint64], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32], Tensor[(7, 9, 15), bool], Tensor[(130, 6), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(220, 2), float32]) */
}

def @func_5792(%var_5739: Tensor[(13, 12, 9), float32]) -> (Tensor[(13, 12, 9), float64],) {
  %524 = cast(%var_5739, dtype="float32") /* ty=Tensor[(13, 12, 9), float32] */;
  %525 = log10(%524) /* ty=Tensor[(13, 12, 9), float32] */;
  %526 = cast(%var_5739, dtype="float64") /* ty=Tensor[(13, 12, 9), float64] */;
  %527 = shape_of(%525, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%525, dtype="float64") /* ty=Tensor[(13, 12, 9), float64] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %530 = floor_mod(%528, %529) /* ty=Tensor[(13, 12, 9), float64] */;
  (%530,)
}

def @func_5219() -> (Tensor[(525), uint32],) {
  %533 = fn () -> (Tensor[(525), uint32],) {
    %531 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
    %532 = %531.2;
    (%532,)
  };
  %533() /* ty=(Tensor[(525), uint32],) */
}

def @func_5736() -> Tensor[(16, 8, 10), float32] {
  %534 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %534.0
}

def @func_6979() -> (Tensor[(16, 8, 10), float32],) {
  %539 = fn () -> (Tensor[(16, 8, 10), float32],) {
    %535 = @func_5908() /* ty=(Tensor[(16, 8, 10), float64], Tensor[(9, 10, 8), float32], Tensor[(720), uint64]) */;
    %536 = %535.0;
    %537 = cast(%536, dtype="float32") /* ty=Tensor[(16, 8, 10), float32] */;
    %538 = atanh(%537) /* ty=Tensor[(16, 8, 10), float32] */;
    (%538,)
  };
  %539() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_4560(%var_4557: Tensor[(1638), float64], %var_4558: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) {
  %540 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %541 = cast(meta[relay.Constant][35] /* ty=Tensor[(220, 2), float32] */, dtype="float32") /* ty=Tensor[(220, 2), float32] */;
  %542 = cast(%var_4557, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %543 = cast(%var_4558, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %544 = reshape(%541, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), float32] */;
  %545 = reshape(%542, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %546 = reshape(%543, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %547 = @func_2400(%544, %545, %546) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */;
  %548 = %540.0;
  %549 = %547.3;
  (%548, %549, meta[relay.Constant][35] /* ty=Tensor[(220, 2), float32] */, %var_4557, %var_4558)
}

def @func_2915(%var_2910: Tensor[(8, 11, 13), uint32], %var_2911: Tensor[(8, 11, 13), uint32], %var_2912: Tensor[(1, 910), float32], %var_2913: Tensor[(720), uint64], %var_2914: Tensor[(10, 78), float32]) -> (Tensor[(8, 11, 13), uint32], Tensor[(1, 910), float32], Tensor[(720), uint64], Tensor[(10, 78), int64]) {
  %577 = fn (%var_2852: Tensor[(8, 11, 13), uint32], %var_2853: Tensor[(8, 11, 13), uint32], %var_2861: Tensor[(1, 910), float32], %var_2863: Tensor[(720), uint64], %var_2904: Tensor[(10, 78), float32]) -> (Tensor[(8, 11, 13), uint32], Tensor[(1, 910), float32], Tensor[(720), uint64], Tensor[(10, 78), int64]) {
    %550 = cast(%var_2853, dtype="uint32") /* ty=Tensor[(8, 11, 13), uint32] */;
    %551 = shape_of(%var_2852, dtype="int32") /* ty=Tensor[(3), int32] */;
    %552 = cast(%var_2852, dtype="uint32") /* ty=Tensor[(8, 11, 13), uint32] */;
    %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %554 = cast(%var_2861, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
    %555 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 78), float32] */, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
    %556 = cast(%var_2863, dtype="uint64") /* ty=Tensor[(720), uint64] */;
    %557 = reshape(%554, newshape=[13, 7, 10]) /* ty=Tensor[(13, 7, 10), float32] */;
    %558 = reshape(%555, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %559 = reshape(%556, newshape=[12, 60]) /* ty=Tensor[(12, 60), uint64] */;
    %560 = @func_2673(%557, %558, %559) /* ty=(Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) */;
    %561 = %560.2;
    %562 = cast(%561, dtype="float64") /* ty=Tensor[(780), float64] */;
    %563 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(10, 78), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %564 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 78), float32] */, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
    %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %566 = floor_divide(%564, %565) /* ty=Tensor[(10, 78), float64] */;
    %567 = cast(%566, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
    %568 = log2(%567) /* ty=Tensor[(10, 78), float32] */;
    %569 = cast(%568, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
    %570 = sqrt(%569) /* ty=Tensor[(10, 78), float32] */;
    %571 = cast(%var_2904, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
    %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(2), int32] */;
    %573 = cast(%570, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
    %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %575 = left_shift(%552, %553) /* ty=Tensor[(8, 11, 13), uint32] */;
    %576 = right_shift(%573, %574) /* ty=Tensor[(10, 78), int64] */;
    (%575, %var_2861, %var_2863, %576)
  };
  %577(%var_2910, %var_2911, %var_2912, %var_2913, %var_2914) /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(1, 910), float32], Tensor[(720), uint64], Tensor[(10, 78), int64]) */
}

def @func_4718(%var_4711: Tensor[(14, 117), float64], %var_4712: Tensor[(525), uint32]) -> (Tensor[(16, 8, 10), int64], Tensor[(16, 8, 10), float32], Tensor[(14, 117), float64], Tensor[(525), uint32]) {
  %578 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %579 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 8, 10), float32] */, dtype="int64") /* ty=Tensor[(16, 8, 10), int64] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%578, dtype="int64") /* ty=Tensor[(16, 8, 10), int64] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %583 = cast(%var_4711, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %584 = cast(%var_4712, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %585 = reshape(%583, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %586 = reshape(%584, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %587 = @func_4560(%585, %586) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
  %588 = right_shift(%581, %582) /* ty=Tensor[(16, 8, 10), int64] */;
  %589 = %587.0;
  (%588, %589, %var_4711, %var_4712)
}

def @func_9828(%var_9826: Tensor[(16, 8, 10), float32]) -> Tensor[(16, 8, 10), bool] {
  @func_9825(%var_9826) /* ty=Tensor[(16, 8, 10), bool] */
}

def @func_9646(%var_9645: float64) -> (Tensor[(16, 8, 10), float32], Tensor[(5, 7, 4), float64], float64, Tensor[(140), float64], Tensor[(525), float32]) {
  %599 = fn (%var_9633: float64) -> (Tensor[(16, 8, 10), float32], Tensor[(5, 7, 4), float64], float64, Tensor[(140), float64], Tensor[(525), float32]) {
    %590 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %591 = cast(%var_9633, dtype="float64") /* ty=float64 */;
    %592 = cast(meta[relay.Constant][38] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %593 = reshape(%591, newshape=[]) /* ty=float64 */;
    %594 = reshape(%592, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), float64] */;
    %595 = @func_9497(%593, %594) /* ty=(Tensor[(5, 7, 4), float64], Tensor[(5, 7, 4), bool]) */;
    %596 = %590.0;
    %597 = %595.0;
    %598 = @func_8504() /* ty=Tensor[(525), float32] */;
    (%596, %597, %var_9633, meta[relay.Constant][38] /* ty=Tensor[(140), float64] */, %598)
  };
  %599(%var_9645) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(5, 7, 4), float64], float64, Tensor[(140), float64], Tensor[(525), float32]) */
}

def @func_7261() -> (Tensor[(525), float32], Tensor[(16, 8, 10), float32]) {
  %603 = fn () -> (Tensor[(525), float32], Tensor[(16, 8, 10), float32]) {
    %600 = @func_6978() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %601 = @func_7246() /* ty=Tensor[(525), float32] */;
    %602 = %600.0;
    (%601, %602)
  };
  %603() /* ty=(Tensor[(525), float32], Tensor[(16, 8, 10), float32]) */
}

def @func_7425() -> Tensor[(525), uint32] {
  %605 = fn () -> Tensor[(525), uint32] {
    %604 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
    %604.3
  };
  %605() /* ty=Tensor[(525), uint32] */
}

def @func_7505() -> (Tensor[(16, 8, 10), float32],) {
  @func_7503() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_2332(%var_2328: Tensor[(14, 15, 7), int16], %var_2329: Tensor[(14, 15, 7), int16], %var_2330: Tensor[(72), uint64], %var_2331: Tensor[(720), uint64]) -> (Tensor[(14, 15, 7), bool], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64]) {
  @func_2326(%var_2328, %var_2329, %var_2330, %var_2331) /* ty=(Tensor[(14, 15, 7), bool], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64]) */
}

def @func_2400(%var_2373: Tensor[(4, 11, 10), float32], %var_2389: Tensor[(1638), float64], %var_2390: Tensor[(525), uint32]) -> (Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) {
  %606 = cast(%var_2373, dtype="float32") /* ty=Tensor[(4, 11, 10), float32] */;
  %607 = cast(%var_2389, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %608 = cast(%var_2389, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %609 = cast(%var_2390, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %610 = reshape(%607, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %611 = reshape(%608, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %612 = reshape(%609, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %613 = @func_2138(%610, %611, %612) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %614 = cast(meta[relay.Constant][39] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %615 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 360), uint64] */, dtype="uint64") /* ty=Tensor[(2, 360), uint64] */;
  %616 = reshape(%614, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %617 = reshape(%615, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %618 = @func_662(%616, %617) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %619 = atanh(%606) /* ty=Tensor[(4, 11, 10), float32] */;
  %620 = %613.1;
  %621 = %618.0;
  (%619, %620, %var_2389, %var_2390, %621, meta[relay.Constant][39] /* ty=Tensor[(72), uint64] */, meta[relay.Constant][40] /* ty=Tensor[(2, 360), uint64] */)
}

def @func_4673() -> (Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  @func_4671() /* ty=(Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */
}

def @func_9711() -> (Tensor[(7, 13, 4), float32],) {
  @func_9709() /* ty=(Tensor[(7, 13, 4), float32],) */
}

def @func_5243() -> (Tensor[(16, 8, 10), float32],) {
  @func_5241() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_8616() -> Tensor[(525), uint32] {
  %622 = @func_6007() /* ty=(Tensor[(525), uint32],) */;
  %622.0
}

def @func_4590(%var_4584: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(780), float32]) {
  %623 = cast(%var_4584, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %624 = reshape(%623, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %625 = @func_3911(%624) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
  %626 = cast(%var_4584, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %627 = reshape(%626, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %628 = @func_3911(%627) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
  %629 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %630 = %625.0;
  %631 = %628.2;
  (%629, %630, %var_4584, %631)
}

def @func_6066() -> (Tensor[(525), uint32],) {
  %632 = @func_6007() /* ty=(Tensor[(525), uint32],) */;
  %633 = %632.0;
  (%633,)
}

def @func_8908() -> Tensor[(16, 8, 10), float32] {
  @func_8906() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_9356(%var_9355: Tensor[(364), float64]) -> (Tensor[(364), float32], Tensor[(364), bool]) {
  %646 = fn (%var_9319: Tensor[(364), float64]) -> (Tensor[(364), float32], Tensor[(364), bool]) {
    %634 = @func_4671() /* ty=(Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
    %635 = %634.3;
    %636 = cast(%var_9319, dtype="float32") /* ty=Tensor[(364), float32] */;
    %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(1), int32] */;
    %638 = cast(%635, dtype="float32") /* ty=Tensor[(364), float32] */;
    %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?), float32] */;
    %640 = cast(%635, dtype="bool") /* ty=Tensor[(364), bool] */;
    %641 = shape_of(%var_9319, dtype="int32") /* ty=Tensor[(1), int32] */;
    %642 = cast(%var_9319, dtype="bool") /* ty=Tensor[(364), bool] */;
    %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?), bool] */;
    %644 = divide(%638, %639) /* ty=Tensor[(364), float32] */;
    %645 = logical_or(%642, %643) /* ty=Tensor[(364), bool] */;
    (%644, %645)
  };
  %646(%var_9355) /* ty=(Tensor[(364), float32], Tensor[(364), bool]) */
}

def @func_6714(%var_6712: Tensor[(1144), uint32], %var_6713: Tensor[(440), float32]) -> (Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) {
  @func_6710(%var_6712, %var_6713) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) */
}

def @func_8555() -> (Tensor[(16, 8, 10), bool],) {
  %647 = @func_6901() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) */;
  %648 = %647.0;
  %649 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 8, 10), float32] */, dtype="bool") /* ty=Tensor[(16, 8, 10), bool] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%648, dtype="bool") /* ty=Tensor[(16, 8, 10), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %653 = greater_equal(%651, %652) /* ty=Tensor[(16, 8, 10), bool] */;
  (%653,)
}

def @func_4049(%var_4044: Tensor[(120, 2), int16], %var_4045: Tensor[(16, 8, 10), float64], %var_4046: Tensor[(440), float32], %var_4047: Tensor[(182, 9), float64], %var_4048: Tensor[(525), uint32]) -> (Tensor[(1, 16, 15), bool], int16, Tensor[(120, 2), int16], Tensor[(72), uint64], Tensor[(16, 8, 10), float64], int16, Tensor[(10, 117), float64], Tensor[(2, 360), uint64], Tensor[(440), float32], Tensor[(182, 9), float64], Tensor[(525), uint32]) {
  %688 = fn (%var_3981: Tensor[(120, 2), int16], %var_3993: Tensor[(16, 8, 10), float64], %var_4030: Tensor[(440), float32], %var_4031: Tensor[(182, 9), float64], %var_4032: Tensor[(525), uint32]) -> (Tensor[(1, 16, 15), bool], int16, Tensor[(120, 2), int16], Tensor[(72), uint64], Tensor[(16, 8, 10), float64], int16, Tensor[(10, 117), float64], Tensor[(2, 360), uint64], Tensor[(440), float32], Tensor[(182, 9), float64], Tensor[(525), uint32]) {
    %654 = cast(meta[relay.Constant][42] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %655 = cast(%var_3981, dtype="int16") /* ty=Tensor[(120, 2), int16] */;
    %656 = cast(meta[relay.Constant][43] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %657 = reshape(%654, newshape=[]) /* ty=int16 */;
    %658 = reshape(%655, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), int16] */;
    %659 = reshape(%656, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
    %660 = @func_3201(%657, %658, %659) /* ty=(Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) */;
    %661 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
    %662 = cast(%661, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
    %663 = asin(%662) /* ty=Tensor[(16, 8, 10), float64] */;
    %664 = cast(%var_3993, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
    %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
    %666 = cast(%663, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %668 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 117), float64] */, dtype="float64") /* ty=Tensor[(10, 117), float64] */;
    %669 = cast(meta[relay.Constant][42] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %670 = %660.0;
    %671 = cast(%670, dtype="int16") /* ty=Tensor[(1, 16, 15), int16] */;
    %672 = cast(meta[relay.Constant][43] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %673 = reshape(%668, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
    %674 = reshape(%669, newshape=[]) /* ty=int16 */;
    %675 = reshape(%671, newshape=[240]) /* ty=Tensor[(240), int16] */;
    %676 = reshape(%672, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %677 = @func_3427(%673, %674, %675, %676) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) */;
    %678 = cast(%var_4030, dtype="float32") /* ty=Tensor[(440), float32] */;
    %679 = cast(%var_4031, dtype="float64") /* ty=Tensor[(182, 9), float64] */;
    %680 = cast(%var_4032, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %681 = reshape(%678, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), float32] */;
    %682 = reshape(%679, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %683 = reshape(%680, newshape=[525]) /* ty=Tensor[(525), uint32] */;
    %684 = @func_2400(%681, %682, %683) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */;
    %685 = floor_divide(%666, %667) /* ty=Tensor[(16, 8, 10), float64] */;
    %686 = %677.2;
    %687 = %684.6;
    (%670, meta[relay.Constant][42] /* ty=int16 */, %var_3981, meta[relay.Constant][43] /* ty=Tensor[(72), uint64] */, %685, %686, meta[relay.Constant][44] /* ty=Tensor[(10, 117), float64] */, %687, %var_4030, %var_4031, %var_4032)
  };
  %688(%var_4044, %var_4045, %var_4046, %var_4047, %var_4048) /* ty=(Tensor[(1, 16, 15), bool], int16, Tensor[(120, 2), int16], Tensor[(72), uint64], Tensor[(16, 8, 10), float64], int16, Tensor[(10, 117), float64], Tensor[(2, 360), uint64], Tensor[(440), float32], Tensor[(182, 9), float64], Tensor[(525), uint32]) */
}

def @func_5525() -> (Tensor[(16, 8, 10), float32],) {
  %691 = fn () -> (Tensor[(16, 8, 10), float32],) {
    %689 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %690 = %689.0;
    (%690,)
  };
  %691() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_6495() -> (Tensor[(525), float32],) {
  %699 = fn () -> (Tensor[(525), float32],) {
    %692 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
    %693 = %692.3;
    %694 = cast(meta[relay.Constant][45] /* ty=Tensor[(525), uint32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
    %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(1), int32] */;
    %696 = cast(%693, dtype="float32") /* ty=Tensor[(525), float32] */;
    %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?), float32] */;
    %698 = mod(%696, %697) /* ty=Tensor[(525), float32] */;
    (%698,)
  };
  %699() /* ty=(Tensor[(525), float32],) */
}

def @func_7246() -> Tensor[(525), float32] {
  @func_6784() /* ty=Tensor[(525), float32] */
}

def @func_5508() -> Tensor[(525), uint32] {
  @func_5506() /* ty=Tensor[(525), uint32] */
}

def @func_10543() -> (Tensor[(7, 15, 5), uint32],) {
  %700 = @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */;
  (%700,)
}

def @func_9852() -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32]) {
  %705 = fn () -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32]) {
    %701 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %702 = @func_5241() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %703 = %701.0;
    %704 = %702.0;
    (%703, %704)
  };
  %705() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32]) */
}

def @func_4671() -> (Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  %706 = cast(meta[relay.Constant][47] /* ty=Tensor[(16, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %707 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(16, 15, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %710 = cast(meta[relay.Constant][47] /* ty=Tensor[(16, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %711 = cast(meta[relay.Constant][48] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %712 = reshape(%711, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %713 = @func_1972(%712) /* ty=(Tensor[(7, 13, 4), float64],) */;
  %714 = power(%708, %709) /* ty=Tensor[(16, 15, 2), float64] */;
  %715 = log2(%710) /* ty=Tensor[(16, 15, 2), float64] */;
  %716 = %713.0;
  (%714, %715, %716, meta[relay.Constant][48] /* ty=Tensor[(364), float64] */)
}

def @func_5019(%var_5017: Tensor[(4, 12, 10), float64], %var_5018: Tensor[(4, 12, 10), float64]) -> (Tensor[(4, 12, 10), bool], Tensor[(5, 2, 13), bool], Tensor[(130), float64], Tensor[(525), float32]) {
  @func_5015(%var_5017, %var_5018) /* ty=(Tensor[(4, 12, 10), bool], Tensor[(5, 2, 13), bool], Tensor[(130), float64], Tensor[(525), float32]) */
}

def @func_4223() -> (Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) {
  %727 = fn () -> (Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) {
    %717 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
    %718 = cast(meta[relay.Constant][49] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %719 = cast(meta[relay.Constant][49] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %720 = cast(meta[relay.Constant][50] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %721 = reshape(%718, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
    %722 = reshape(%719, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
    %723 = reshape(%720, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
    %724 = @func_2138(%721, %722, %723) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
    %725 = %717.0;
    %726 = %724.2;
    (%725, %726, meta[relay.Constant][49] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][50] /* ty=Tensor[(525), uint32] */)
  };
  %727() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */
}

def @func_7809(%var_7739: Tensor[(440), float32], %var_7770: Tensor[(1144), uint32], %var_7784: Tensor[(7, 234), float64], %var_7806: Tensor[(1170), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(440), float32], Tensor[(1144), uint32], Tensor[(1144), uint32], Tensor[(2025), float64], Tensor[(7, 234), float64], Tensor[(525), uint32], Tensor[(16, 15, 2), bool], Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), int64], Tensor[(1170), float64], Tensor[(1170), float64]) {
  %728 = cast(%var_7739, dtype="float32") /* ty=Tensor[(440), float32] */;
  %729 = reshape(%728, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %730 = @func_6209(%729) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) */;
  %731 = cast(%var_7770, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %732 = cast(%var_7739, dtype="float32") /* ty=Tensor[(440), float32] */;
  %733 = reshape(%731, newshape=[1144]) /* ty=Tensor[(1144), uint32] */;
  %734 = reshape(%732, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %735 = @func_6710(%733, %734) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) */;
  %736 = cast(%var_7784, dtype="float64") /* ty=Tensor[(7, 234), float64] */;
  %737 = cast(%var_7784, dtype="float64") /* ty=Tensor[(7, 234), float64] */;
  %738 = cast(meta[relay.Constant][51] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %739 = reshape(%736, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %740 = reshape(%737, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %741 = reshape(%738, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %742 = @func_2138(%739, %740, %741) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %743 = @func_6414() /* ty=(Tensor[(16, 15, 2), float64],) */;
  %744 = %743.0;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(16, 15, 2), float32] */;
  %746 = sin(%745) /* ty=Tensor[(16, 15, 2), float32] */;
  %747 = cast(%744, dtype="uint8") /* ty=Tensor[(16, 15, 2), uint8] */;
  %748 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%746, dtype="uint8") /* ty=Tensor[(16, 15, 2), uint8] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %751 = logical_xor(%749, %750) /* ty=Tensor[(16, 15, 2), uint8] */;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %753 = tan(%752) /* ty=Tensor[(16, 15, 2), float64] */;
  %754 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 15, 2), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 2), bool] */;
  %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%753, dtype="bool") /* ty=Tensor[(16, 15, 2), bool] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %758 = cast(%751, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %759 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(%746, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %762 = cast(%751, dtype="int64") /* ty=Tensor[(16, 15, 2), int64] */;
  %763 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%746, dtype="int64") /* ty=Tensor[(16, 15, 2), int64] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %766 = cast(%var_7806, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %767 = reshape(%766, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %768 = @func_7347(%767) /* ty=(Tensor[(525), uint32], Tensor[(1638), float64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1638), float64]) */;
  %769 = %730.1;
  %770 = %735.5;
  %771 = %742.4;
  %772 = logical_and(%756, %757) /* ty=Tensor[(16, 15, 2), bool] */;
  %773 = maximum(%760, %761) /* ty=Tensor[(16, 15, 2), float64] */;
  %774 = bitwise_and(%764, %765) /* ty=Tensor[(16, 15, 2), int64] */;
  %775 = %768.2;
  (%769, %var_7739, %770, %var_7770, %771, %var_7784, meta[relay.Constant][51] /* ty=Tensor[(525), uint32] */, %772, %773, %774, %775, %var_7806)
}

def @func_1762(%var_1760: Tensor[(7, 15, 5), uint32], %var_1761: Tensor[(7, 15, 5), uint32]) -> Tensor[(7, 15, 5), uint32] {
  %780 = fn (%var_1754: Tensor[(7, 15, 5), uint32], %var_1755: Tensor[(7, 15, 5), uint32]) -> Tensor[(7, 15, 5), uint32] {
    %776 = cast(%var_1755, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
    %777 = shape_of(%var_1754, dtype="int32") /* ty=Tensor[(3), int32] */;
    %778 = cast(%var_1754, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
    %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    left_shift(%778, %779) /* ty=Tensor[(7, 15, 5), uint32] */
  };
  %780(%var_1760, %var_1761) /* ty=Tensor[(7, 15, 5), uint32] */
}

def @func_5350(%var_5348: Tensor[(525), uint32], %var_5349: Tensor[(240), int16]) -> (Tensor[(525), bool], Tensor[(2, 5, 6), float32], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(7, 15, 5), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64]) {
  %804 = fn (%var_5326: Tensor[(525), uint32], %var_5338: Tensor[(240), int16]) -> (Tensor[(525), bool], Tensor[(2, 5, 6), float32], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(7, 15, 5), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64]) {
    %781 = @func_5218() /* ty=(Tensor[(525), uint32],) */;
    %782 = %781.0;
    %783 = cast(%var_5326, dtype="bool") /* ty=Tensor[(525), bool] */;
    %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(1), int32] */;
    %785 = cast(%782, dtype="bool") /* ty=Tensor[(525), bool] */;
    %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?), bool] */;
    %787 = @func_5087() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) */;
    %788 = cast(meta[relay.Constant][53] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %789 = cast(%var_5338, dtype="int16") /* ty=Tensor[(240), int16] */;
    %790 = reshape(%788, newshape=[]) /* ty=int16 */;
    %791 = reshape(%789, newshape=[24, 10]) /* ty=Tensor[(24, 10), int16] */;
    %792 = @func_4404(%790, %791) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(24, 10), int16], Tensor[(72), uint64]) */;
    %793 = cast(meta[relay.Constant][54] /* ty=Tensor[(220, 2), float32] */, dtype="float32") /* ty=Tensor[(220, 2), float32] */;
    %794 = cast(meta[relay.Constant][55] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %795 = logical_or(%785, %786) /* ty=Tensor[(525), bool] */;
    %796 = cast(%795, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %797 = reshape(%793, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), float32] */;
    %798 = reshape(%794, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %799 = reshape(%796, newshape=[525]) /* ty=Tensor[(525), uint32] */;
    %800 = @func_2400(%797, %798, %799) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */;
    %801 = %787.1;
    %802 = %792.2;
    %803 = %800.1;
    (%795, %801, %802, meta[relay.Constant][53] /* ty=int16 */, %var_5338, %803, meta[relay.Constant][54] /* ty=Tensor[(220, 2), float32] */, meta[relay.Constant][55] /* ty=Tensor[(1638), float64] */)
  };
  %804(%var_5348, %var_5349) /* ty=(Tensor[(525), bool], Tensor[(2, 5, 6), float32], Tensor[(1170), float64], int16, Tensor[(240), int16], Tensor[(7, 15, 5), uint32], Tensor[(220, 2), float32], Tensor[(1638), float64]) */
}

def @func_10383(%var_10379: Tensor[(1404), float32], %var_10380: Tensor[(240), int16], %var_10381: Tensor[(880), float64], %var_10382: Tensor[(175, 3), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32], Tensor[(440), float32], Tensor[(240), int16], Tensor[(11, 16, 5), float64], Tensor[(880), float64], Tensor[(175, 3), float32], Tensor[(7, 13, 4), float64], float32, Tensor[(13, 12, 9), float64], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) {
  @func_10377(%var_10379, %var_10380, %var_10381, %var_10382) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32], Tensor[(440), float32], Tensor[(240), int16], Tensor[(11, 16, 5), float64], Tensor[(880), float64], Tensor[(175, 3), float32], Tensor[(7, 13, 4), float64], float32, Tensor[(13, 12, 9), float64], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) */
}

def @func_4404(%var_4398: int16, %var_4399: Tensor[(24, 10), int16]) -> (Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(24, 10), int16], Tensor[(72), uint64]) {
  %805 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %806 = %805.0;
  %807 = cast(%806, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %808 = cast(meta[relay.Constant][56] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %809 = cast(%var_4398, dtype="int16") /* ty=int16 */;
  %810 = cast(%var_4399, dtype="int16") /* ty=Tensor[(24, 10), int16] */;
  %811 = cast(meta[relay.Constant][57] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %812 = reshape(%808, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %813 = reshape(%809, newshape=[]) /* ty=int16 */;
  %814 = reshape(%810, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %815 = reshape(%811, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %816 = @func_3427(%812, %813, %814, %815) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) */;
  %817 = log10(%807) /* ty=Tensor[(16, 8, 10), float64] */;
  %818 = %816.3;
  (%817, %818, meta[relay.Constant][56] /* ty=Tensor[(1170), float64] */, %var_4398, %var_4399, meta[relay.Constant][57] /* ty=Tensor[(72), uint64] */)
}

def @func_5991(%var_5988: Tensor[(7, 15, 5), float64], %var_5989: Tensor[(240), int16], %var_5990: Tensor[(1280), float64]) -> (Tensor[(9, 10, 8), float32], int16, Tensor[(72), uint64], Tensor[(7, 15, 5), float64], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(14, 117), float64], Tensor[(525), float32], Tensor[(1280), float32]) {
  @func_5986(%var_5988, %var_5989, %var_5990) /* ty=(Tensor[(9, 10, 8), float32], int16, Tensor[(72), uint64], Tensor[(7, 15, 5), float64], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(14, 117), float64], Tensor[(525), float32], Tensor[(1280), float32]) */
}

def @func_4355(%var_4353: Tensor[(720), uint64]) -> (Tensor[(35, 15), uint32], Tensor[(720), uint64], Tensor[(640, 2), float32], Tensor[(18, 4), uint64], Tensor[(720), uint64], Tensor[(1638), float64]) {
  @func_4352(%var_4353) /* ty=(Tensor[(35, 15), uint32], Tensor[(720), uint64], Tensor[(640, 2), float32], Tensor[(18, 4), uint64], Tensor[(720), uint64], Tensor[(1638), float64]) */
}

def @func_7815(%var_7811: Tensor[(440), float32], %var_7812: Tensor[(1144), uint32], %var_7813: Tensor[(7, 234), float64], %var_7814: Tensor[(1170), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(440), float32], Tensor[(1144), uint32], Tensor[(1144), uint32], Tensor[(2025), float64], Tensor[(7, 234), float64], Tensor[(525), uint32], Tensor[(16, 15, 2), bool], Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), int64], Tensor[(1170), float64], Tensor[(1170), float64]) {
  @func_7809(%var_7811, %var_7812, %var_7813, %var_7814) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(440), float32], Tensor[(1144), uint32], Tensor[(1144), uint32], Tensor[(2025), float64], Tensor[(7, 234), float64], Tensor[(525), uint32], Tensor[(16, 15, 2), bool], Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), int64], Tensor[(1170), float64], Tensor[(1170), float64]) */
}

def @func_9961() -> (Tensor[(16, 8, 10), float32],) {
  %820 = fn () -> (Tensor[(16, 8, 10), float32],) {
    %819 = @func_8906() /* ty=Tensor[(16, 8, 10), float32] */;
    (%819,)
  };
  %820() /* ty=(Tensor[(16, 8, 10), float32],) */
}

def @func_8135() -> (Tensor[(16, 8, 10), float32], Tensor[(1, 525), uint32], Tensor[(2025), float32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(546, 3), float64]) {
  %821 = @func_7503() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %822 = cast(meta[relay.Constant][58] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %823 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 525), uint32] */, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
  %824 = reshape(%822, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %825 = reshape(%823, newshape=[1, 525]) /* ty=Tensor[(1, 525), uint32] */;
  %826 = @func_1947(%824, %825) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) */;
  %827 = cast(meta[relay.Constant][60] /* ty=Tensor[(546, 3), float64] */, dtype="float64") /* ty=Tensor[(546, 3), float64] */;
  %828 = cast(meta[relay.Constant][60] /* ty=Tensor[(546, 3), float64] */, dtype="float64") /* ty=Tensor[(546, 3), float64] */;
  %829 = %826.2;
  %830 = cast(%829, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
  %831 = reshape(%827, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %832 = reshape(%828, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float64] */;
  %833 = reshape(%830, newshape=[35, 15]) /* ty=Tensor[(35, 15), uint32] */;
  %834 = @func_2138(%831, %832, %833) /* ty=(Tensor[(13, 14, 9), float64], Tensor[(7, 15, 5), uint32], Tensor[(35, 15), uint32], Tensor[(7, 15, 5), uint32], Tensor[(2025), float64]) */;
  %835 = %821.0;
  %836 = %834.3;
  (%835, %829, meta[relay.Constant][58] /* ty=Tensor[(2025), float32] */, meta[relay.Constant][59] /* ty=Tensor[(1, 525), uint32] */, %836, meta[relay.Constant][60] /* ty=Tensor[(546, 3), float64] */)
}

def @func_7917(%var_7888: Tensor[(9, 10, 8), float64], %var_7900: Tensor[(18, 4), uint64]) -> (Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) {
  %837 = @func_4476() /* ty=(Tensor[(7, 15, 5), uint32],) */;
  %838 = cast(meta[relay.Constant][62] /* ty=Tensor[(18, 4), uint64] */, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %839 = cast(meta[relay.Constant][61] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %840 = reshape(%838, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %841 = reshape(%839, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %842 = @func_662(%840, %841) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %843 = %842.0;
  %844 = cast(%var_7888, dtype="int16") /* ty=Tensor[(9, 10, 8), int16] */;
  %845 = shape_of(%843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(%843, dtype="int16") /* ty=Tensor[(9, 10, 8), int16] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %848 = cast(%var_7900, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %849 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(18, 4), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %850 = cast(meta[relay.Constant][62] /* ty=Tensor[(18, 4), uint64] */, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %852 = %837.0;
  %853 = left_shift(%846, %847) /* ty=Tensor[(9, 10, 8), int16] */;
  %854 = @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */;
  %855 = add(%850, %851) /* ty=Tensor[(18, 4), uint64] */;
  (%852, meta[relay.Constant][61] /* ty=Tensor[(720), uint64] */, %853, %854, %855)
}

def @func_6068() -> (Tensor[(525), uint32],) {
  @func_6066() /* ty=(Tensor[(525), uint32],) */
}

def @func_4476() -> (Tensor[(7, 15, 5), uint32],) {
  %856 = @func_4075() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(525), uint32]) */;
  %857 = %856.1;
  (%857,)
}

def @func_3911(%var_3885: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) {
  %858 = cast(meta[relay.Constant][63] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %859 = cast(meta[relay.Constant][64] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %860 = cast(%var_3885, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %861 = reshape(%858, newshape=[13, 7, 10]) /* ty=Tensor[(13, 7, 10), float32] */;
  %862 = reshape(%859, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %863 = reshape(%860, newshape=[12, 60]) /* ty=Tensor[(12, 60), uint64] */;
  %864 = @func_2673(%861, %862, %863) /* ty=(Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) */;
  %865 = %864.1;
  %866 = cast(%865, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  %867 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  %868 = atanh(%866) /* ty=Tensor[(9, 10, 8), float32] */;
  (%867, meta[relay.Constant][63] /* ty=Tensor[(910), float32] */, meta[relay.Constant][64] /* ty=Tensor[(780), float32] */, %var_3885, %868)
}

def @func_6242(%var_6239: Tensor[(1144), uint32], %var_6240: Tensor[(7, 130), float32], %var_6241: Tensor[(780), float32]) -> (Tensor[(720), uint64], Tensor[(8, 11, 13), uint32], Tensor[(1144), uint32], Tensor[(7, 130), float32], Tensor[(780), float32]) {
  @func_6237(%var_6239, %var_6240, %var_6241) /* ty=(Tensor[(720), uint64], Tensor[(8, 11, 13), uint32], Tensor[(1144), uint32], Tensor[(7, 130), float32], Tensor[(780), float32]) */
}

def @func_6289(%var_6287: Tensor[(364), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) {
  @func_6286(%var_6287) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */
}

def @func_7636(%var_7562: Tensor[(2025), float32], %var_7565: Tensor[(910), float32], %var_7566: Tensor[(130, 6), float32], %var_7633: Tensor[(220, 2), float32]) -> (Tensor[(525), float32], Tensor[(525), uint32], Tensor[(1, 525), uint32], Tensor[(2025), float32], Tensor[(72), uint64], Tensor[(910), float32], Tensor[(720), uint64], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32], Tensor[(7, 9, 15), bool], Tensor[(130, 6), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(220, 2), float32]) {
  %869 = @func_6494() /* ty=(Tensor[(525), float32],) */;
  %870 = @func_5218() /* ty=(Tensor[(525), uint32],) */;
  %871 = cast(%var_7562, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %872 = %869.0;
  %873 = cast(%872, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %874 = reshape(%871, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %875 = reshape(%873, newshape=[1, 525]) /* ty=Tensor[(1, 525), uint32] */;
  %876 = @func_1947(%874, %875) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(7, 15, 5), uint32], Tensor[(1, 525), uint32], Tensor[(7, 15, 5), uint32]) */;
  %877 = cast(%var_7565, dtype="float32") /* ty=Tensor[(910), float32] */;
  %878 = cast(%var_7566, dtype="float32") /* ty=Tensor[(130, 6), float32] */;
  %879 = cast(meta[relay.Constant][65] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %880 = reshape(%877, newshape=[13, 7, 10]) /* ty=Tensor[(13, 7, 10), float32] */;
  %881 = reshape(%878, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %882 = reshape(%879, newshape=[12, 60]) /* ty=Tensor[(12, 60), uint64] */;
  %883 = @func_2673(%880, %881, %882) /* ty=(Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) */;
  %884 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %885 = cast(meta[relay.Constant][66] /* ty=Tensor[(100), int32] */, dtype="int32") /* ty=Tensor[(100), int32] */;
  %886 = reshape(%884, newshape=[]) /* ty=int32 */;
  %887 = reshape(%885, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), int32] */;
  %888 = cast(-5 /* ty=int32 */, dtype="float32") /* ty=float32 */;
  %889 = reshape(%888, newshape=[]) /* ty=float32 */;
  %890 = @func_4158(%889) /* ty=(Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %891 = cast(%var_7566, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %892 = asinh(%891) /* ty=Tensor[(130, 6), float64] */;
  %893 = cast(%var_7566, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %894 = shape_of(%892, dtype="int32") /* ty=Tensor[(2), int32] */;
  %895 = cast(%892, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %897 = cast(meta[relay.Constant][67] /* ty=Tensor[(1144), uint32] */, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %898 = cast(%var_7633, dtype="float32") /* ty=Tensor[(220, 2), float32] */;
  %899 = reshape(%897, newshape=[1144]) /* ty=Tensor[(1144), uint32] */;
  %900 = reshape(%898, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %901 = @func_6710(%899, %900) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) */;
  %902 = %870.0;
  %903 = %876.2;
  %904 = %883.3;
  %905 = @func_3690(%886, %887) /* ty=Tensor[(10, 10, 1), bool] */;
  %906 = %890.0;
  %907 = bitwise_xor(%895, %896) /* ty=Tensor[(130, 6), uint16] */;
  %908 = %901.6;
  (%872, %902, %903, %var_7562, %904, %var_7565, meta[relay.Constant][65] /* ty=Tensor[(720), uint64] */, %905, -5 /* ty=int32 */, meta[relay.Constant][66] /* ty=Tensor[(100), int32] */, %906, %907, %908, meta[relay.Constant][67] /* ty=Tensor[(1144), uint32] */, %var_7633)
}

def @func_6350() -> Tensor[(16, 8, 10), float32] {
  %910 = fn () -> Tensor[(16, 8, 10), float32] {
    %909 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
    %909.0
  };
  %910() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_4408(%var_4406: int16, %var_4407: Tensor[(24, 10), int16]) -> (Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(24, 10), int16], Tensor[(72), uint64]) {
  @func_4404(%var_4406, %var_4407) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(240), int16], Tensor[(1170), float64], int16, Tensor[(24, 10), int16], Tensor[(72), uint64]) */
}

def @func_2677(%var_2674: Tensor[(13, 7, 10), float32], %var_2675: Tensor[(780), float32], %var_2676: Tensor[(12, 60), uint64]) -> (Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) {
  %923 = fn (%var_2648: Tensor[(13, 7, 10), float32], %var_2660: Tensor[(780), float32], %var_2662: Tensor[(12, 60), uint64]) -> (Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) {
    %911 = cast(%var_2648, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
    %912 = cast(%var_2660, dtype="float32") /* ty=Tensor[(780), float32] */;
    %913 = cast(%var_2660, dtype="float32") /* ty=Tensor[(780), float32] */;
    %914 = cast(meta[relay.Constant][68] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %915 = cast(%var_2662, dtype="uint64") /* ty=Tensor[(12, 60), uint64] */;
    %916 = reshape(%912, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float32] */;
    %917 = reshape(%913, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float32] */;
    %918 = reshape(%914, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %919 = reshape(%915, newshape=[720]) /* ty=Tensor[(720), uint64] */;
    %920 = @func_889(%916, %917, %918, %919) /* ty=(Tensor[(13, 15, 4), float32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64], Tensor[(9, 10, 8), float64]) */;
    %921 = asinh(%911) /* ty=Tensor[(13, 7, 10), float32] */;
    %922 = %920.5;
    (%921, %922, %var_2660, meta[relay.Constant][68] /* ty=Tensor[(72), uint64] */, %var_2662)
  };
  %923(%var_2674, %var_2675, %var_2676) /* ty=(Tensor[(13, 7, 10), float32], Tensor[(9, 10, 8), float64], Tensor[(780), float32], Tensor[(72), uint64], Tensor[(12, 60), uint64]) */
}

def @func_5795(%var_5793: Tensor[(13, 12, 9), float32]) -> (Tensor[(13, 12, 9), float64],) {
  @func_5792(%var_5793) /* ty=(Tensor[(13, 12, 9), float64],) */
}

def @func_4180(%var_4178: int32, %var_4179: Tensor[(100), int32]) -> (Tensor[(16, 8, 10), float32], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32]) {
  %931 = fn (%var_4172: int32, %var_4173: Tensor[(100), int32]) -> (Tensor[(16, 8, 10), float32], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32]) {
    %924 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %925 = cast(%var_4172, dtype="int32") /* ty=int32 */;
    %926 = cast(%var_4173, dtype="int32") /* ty=Tensor[(100), int32] */;
    %927 = reshape(%925, newshape=[]) /* ty=int32 */;
    %928 = reshape(%926, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), int32] */;
    %929 = %924.0;
    %930 = @func_3690(%927, %928) /* ty=Tensor[(10, 10, 1), bool] */;
    (%929, %930, %var_4172, %var_4173)
  };
  %931(%var_4178, %var_4179) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(10, 10, 1), bool], int32, Tensor[(100), int32]) */
}

def @func_5647() -> (Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) {
  @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */
}

def @func_2326(%var_2304: Tensor[(14, 15, 7), int16], %var_2305: Tensor[(14, 15, 7), int16], %var_2314: Tensor[(72), uint64], %var_2315: Tensor[(720), uint64]) -> (Tensor[(14, 15, 7), bool], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64]) {
  %932 = cast(%var_2305, dtype="bool") /* ty=Tensor[(14, 15, 7), bool] */;
  %933 = shape_of(%var_2304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_2304, dtype="bool") /* ty=Tensor[(14, 15, 7), bool] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %936 = cast(%var_2314, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %937 = cast(%var_2315, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %938 = reshape(%936, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %939 = reshape(%937, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %940 = @func_662(%938, %939) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %941 = greater(%934, %935) /* ty=Tensor[(14, 15, 7), bool] */;
  %942 = %940.0;
  (%941, %942, %var_2314, %var_2315)
}

def @func_9790(%var_9778: Tensor[(240), int16]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64], Tensor[(1638), float64], Tensor[(525), uint32]) {
  %943 = cast(meta[relay.Constant][69] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %944 = cast(%var_9778, dtype="int16") /* ty=Tensor[(240), int16] */;
  %945 = cast(meta[relay.Constant][70] /* ty=Tensor[(360, 2), uint64] */, dtype="uint64") /* ty=Tensor[(360, 2), uint64] */;
  %946 = cast(meta[relay.Constant][71] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %947 = reshape(%943, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %948 = reshape(%944, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %949 = reshape(%945, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %950 = reshape(%946, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %951 = @func_7072(%947, %948, %949, %950) /* ty=(Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) */;
  %952 = @func_8906() /* ty=Tensor[(16, 8, 10), float32] */;
  %953 = @func_8379() /* ty=Tensor[(16, 8, 10), float32] */;
  %954 = %951.4;
  %955 = @func_5495() /* ty=Tensor[(525), uint32] */;
  (%952, %953, %954, meta[relay.Constant][69] /* ty=Tensor[(1170), float64] */, %var_9778, meta[relay.Constant][70] /* ty=Tensor[(360, 2), uint64] */, meta[relay.Constant][71] /* ty=Tensor[(1638), float64] */, %955)
}

def @func_8379() -> Tensor[(16, 8, 10), float32] {
  @func_6401() /* ty=Tensor[(16, 8, 10), float32] */
}

def @func_3914(%var_3912: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) {
  @func_3911(%var_3912) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */
}

def @func_2405(%var_2402: Tensor[(4, 11, 10), float32], %var_2403: Tensor[(1638), float64], %var_2404: Tensor[(525), uint32]) -> (Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) {
  @func_2400(%var_2402, %var_2403, %var_2404) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */
}

def @func_7921(%var_7919: Tensor[(9, 10, 8), float64], %var_7920: Tensor[(18, 4), uint64]) -> (Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) {
  @func_7917(%var_7919, %var_7920) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) */
}

def @func_10545() -> (Tensor[(7, 15, 5), uint32],) {
  @func_10543() /* ty=(Tensor[(7, 15, 5), uint32],) */
}

def @func_4593(%var_4591: Tensor[(720), uint64]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(780), float32]) {
  @func_4590(%var_4591) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(720), uint64], Tensor[(780), float32]) */
}

def @func_7078(%var_7074: Tensor[(1170), float64], %var_7075: Tensor[(240), int16], %var_7076: Tensor[(720), uint64], %var_7077: Tensor[(1638), float64]) -> (Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) {
  @func_7072(%var_7074, %var_7075, %var_7076, %var_7077) /* ty=(Tensor[(7, 15, 5), uint32], int16, Tensor[(1170), float64], Tensor[(240), int16], Tensor[(720), uint64], Tensor[(1144), uint32], Tensor[(440), float32], Tensor[(7, 15, 5), uint32], Tensor[(16, 8, 10), float32], Tensor[(1144), float64], Tensor[(220, 2), float32], Tensor[(1638), float64]) */
}

def @func_6710(%var_6681: Tensor[(1144), uint32], %var_6697: Tensor[(440), float32]) -> (Tensor[(7, 15, 5), float64], Tensor[(720), uint64], Tensor[(720), uint64], Tensor[(7, 15, 5), uint16], Tensor[(1, 910), float32], Tensor[(1144), uint32], Tensor[(1, 910), float32], Tensor[(780), float32], Tensor[(16, 8, 10), float32], Tensor[(440), float32]) {
  %956 = @func_6332() /* ty=Tensor[(7, 15, 5), uint32] */;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %958 = cast(meta[relay.Constant][72] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %959 = reshape(%958, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %960 = @func_3911(%959) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
  %961 = cast(%956, dtype="float32") /* ty=Tensor[(7, 15, 5), float32] */;
  %962 = tan(%961) /* ty=Tensor[(7, 15, 5), float32] */;
  %963 = cast(%962, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %964 = log10(%963) /* ty=Tensor[(7, 15, 5), float64] */;
  %965 = cast(%956, dtype="uint16") /* ty=Tensor[(7, 15, 5), uint16] */;
  %966 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %967 = cast(%964, dtype="uint16") /* ty=Tensor[(7, 15, 5), uint16] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %969 = cast(%var_6681, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %970 = cast(%var_6681, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %971 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %972 = %960.3;
  %973 = cast(%972, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %974 = cast(meta[relay.Constant][74] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %975 = reshape(%969, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), uint32] */;
  %976 = reshape(%970, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), uint32] */;
  %977 = reshape(%971, newshape=[1, 910]) /* ty=Tensor[(1, 910), float32] */;
  %978 = reshape(%973, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %979 = reshape(%974, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %980 = @func_2909(%975, %976, %977, %978, %979) /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(1, 910), float32], Tensor[(720), uint64], Tensor[(10, 78), int64]) */;
  %981 = cast(%var_6697, dtype="float32") /* ty=Tensor[(440), float32] */;
  %982 = reshape(%981, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %983 = @func_6209(%982) /* ty=(Tensor[(16, 8, 10), float64], Tensor[(16, 8, 10), float32], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(7, 15, 5), uint32], Tensor[(5, 2, 13), bool], Tensor[(130), float64]) */;
  %984 = sin(%957) /* ty=Tensor[(7, 15, 5), float64] */;
  %985 = bitwise_and(%967, %968) /* ty=Tensor[(7, 15, 5), uint16] */;
  %986 = %980.1;
  %987 = %983.1;
  (%984, %972, meta[relay.Constant][72] /* ty=Tensor[(720), uint64] */, %985, %986, %var_6681, meta[relay.Constant][73] /* ty=Tensor[(1, 910), float32] */, meta[relay.Constant][74] /* ty=Tensor[(780), float32] */, %987, %var_6697)
}

def @func_10377(%var_10233: Tensor[(1404), float32], %var_10249: Tensor[(240), int16], %var_10263: Tensor[(880), float64], %var_10272: Tensor[(175, 3), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32], Tensor[(440), float32], Tensor[(240), int16], Tensor[(11, 16, 5), float64], Tensor[(880), float64], Tensor[(175, 3), float32], Tensor[(7, 13, 4), float64], float32, Tensor[(13, 12, 9), float64], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(720), uint64], Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(525), uint32]) {
  %988 = @func_8906() /* ty=Tensor[(16, 8, 10), float32] */;
  %989 = cast(%988, dtype="float32") /* ty=Tensor[(16, 8, 10), float32] */;
  %990 = cast(%var_10233, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %991 = reshape(%990, newshape=[13, 12, 9]) /* ty=Tensor[(13, 12, 9), float32] */;
  %992 = @func_5792(%991) /* ty=(Tensor[(13, 12, 9), float64],) */;
  %993 = cast(meta[relay.Constant][75] /* ty=Tensor[(175, 3), float64] */, dtype="float64") /* ty=Tensor[(175, 3), float64] */;
  %994 = cast(%var_10249, dtype="int16") /* ty=Tensor[(240), int16] */;
  %995 = log(%989) /* ty=Tensor[(16, 8, 10), float32] */;
  %996 = cast(%995, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
  %997 = reshape(%993, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), float64] */;
  %998 = reshape(%994, newshape=[240]) /* ty=Tensor[(240), int16] */;
  %999 = reshape(%996, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %1000 = @func_5986(%997, %998, %999) /* ty=(Tensor[(9, 10, 8), float32], int16, Tensor[(72), uint64], Tensor[(7, 15, 5), float64], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(14, 117), float64], Tensor[(525), float32], Tensor[(1280), float32]) */;
  %1001 = cast(%var_10263, dtype="float64") /* ty=Tensor[(880), float64] */;
  %1002 = reshape(%1001, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float64] */;
  %1003 = @func_9087(%1002) /* ty=(Tensor[(11, 16, 5), float64], Tensor[(16, 8, 10), float32]) */;
  %1004 = cast(%var_10272, dtype="float32") /* ty=Tensor[(175, 3), float32] */;
  %1005 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(175, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1006 = cast(meta[relay.Constant][75] /* ty=Tensor[(175, 3), float64] */, dtype="float32") /* ty=Tensor[(175, 3), float32] */;
  %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1008 = cast(-0.325479f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1009 = reshape(%1008, newshape=[]) /* ty=float32 */;
  %1010 = @func_4158(%1009) /* ty=(Tensor[(7, 9, 15), bool], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %1011 = cast(%var_10233, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %1012 = reshape(%1011, newshape=[1404]) /* ty=Tensor[(1404), float32] */;
  %1013 = @func_7946(%1012) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32]) */;
  %1014 = cast(meta[relay.Constant][76] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1015 = cast(meta[relay.Constant][77] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %1016 = reshape(%1014, newshape=[9, 1, 8]) /* ty=Tensor[(9, 1, 8), uint64] */;
  %1017 = reshape(%1015, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint64] */;
  %1018 = @func_662(%1016, %1017) /* ty=(Tensor[(9, 10, 8), float64],) */;
  %1019 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %1020 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %1021 = %992.0;
  %1022 = %1000.6;
  %1023 = %1003.0;
  %1024 = power(%1006, %1007) /* ty=Tensor[(175, 3), float32] */;
  %1025 = %1010.1;
  %1026 = %1013.1;
  %1027 = %1018.0;
  %1028 = %1019.0;
  %1029 = %1020.0;
  %1030 = @func_5506() /* ty=Tensor[(525), uint32] */;
  (%995, %1021, %var_10233, %1022, %var_10249, %1023, %var_10263, %1024, %1025, -0.325479f /* ty=float32 */, %1026, %1027, meta[relay.Constant][76] /* ty=Tensor[(72), uint64] */, meta[relay.Constant][77] /* ty=Tensor[(720), uint64] */, %1028, %1029, %1030)
}

def @func_10019(%var_10017: Tensor[(720), float64], %var_10018: Tensor[(3, 24), uint64]) -> (Tensor[(525), float32], Tensor[(9, 10, 8), int16], Tensor[(720), float64], Tensor[(3, 24), float32]) {
  %1040 = fn (%var_9995: Tensor[(720), float64], %var_9996: Tensor[(3, 24), uint64]) -> (Tensor[(525), float32], Tensor[(9, 10, 8), int16], Tensor[(720), float64], Tensor[(3, 24), float32]) {
    %1031 = cast(%var_9995, dtype="float64") /* ty=Tensor[(720), float64] */;
    %1032 = cast(%var_9996, dtype="uint64") /* ty=Tensor[(3, 24), uint64] */;
    %1033 = reshape(%1031, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
    %1034 = reshape(%1032, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
    %1035 = @func_7917(%1033, %1034) /* ty=(Tensor[(7, 15, 5), uint32], Tensor[(720), uint64], Tensor[(9, 10, 8), int16], Tensor[(7, 15, 5), uint32], Tensor[(18, 4), uint64]) */;
    %1036 = cast(%var_9996, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
    %1037 = @func_7246() /* ty=Tensor[(525), float32] */;
    %1038 = %1035.2;
    %1039 = exp(%1036) /* ty=Tensor[(3, 24), float32] */;
    (%1037, %1038, %var_9995, %1039)
  };
  %1040(%var_10017, %var_10018) /* ty=(Tensor[(525), float32], Tensor[(9, 10, 8), int16], Tensor[(720), float64], Tensor[(3, 24), float32]) */
}

def @func_9089(%var_9088: Tensor[(11, 16, 5), float64]) -> (Tensor[(11, 16, 5), float64], Tensor[(16, 8, 10), float32]) {
  %1045 = fn (%var_9057: Tensor[(11, 16, 5), float64]) -> (Tensor[(11, 16, 5), float64], Tensor[(16, 8, 10), float32]) {
    %1041 = cast(%var_9057, dtype="float64") /* ty=Tensor[(11, 16, 5), float64] */;
    %1042 = @func_8857() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %1043 = acosh(%1041) /* ty=Tensor[(11, 16, 5), float64] */;
    %1044 = %1042.0;
    (%1043, %1044)
  };
  %1045(%var_9088) /* ty=(Tensor[(11, 16, 5), float64], Tensor[(16, 8, 10), float32]) */
}

def @func_3432(%var_3428: Tensor[(13, 10, 9), float64], %var_3429: int16, %var_3430: Tensor[(240), int16], %var_3431: Tensor[(72), uint64]) -> (Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) {
  %1057 = fn (%var_3384: Tensor[(13, 10, 9), float64], %var_3407: int16, %var_3408: Tensor[(240), int16], %var_3409: Tensor[(72), uint64]) -> (Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) {
    %1046 = cast(meta[relay.Constant][78] /* ty=Tensor[(13, 1, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 9), float64] */;
    %1047 = cast(%var_3384, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
    %1048 = cast(%var_3407, dtype="int16") /* ty=int16 */;
    %1049 = cast(%var_3408, dtype="int16") /* ty=Tensor[(240), int16] */;
    %1050 = cast(%var_3409, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %1051 = reshape(%1048, newshape=[]) /* ty=int16 */;
    %1052 = reshape(%1049, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), int16] */;
    %1053 = reshape(%1050, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
    %1054 = @func_3201(%1051, %1052, %1053) /* ty=(Tensor[(1, 16, 15), bool], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(18, 4), uint64], Tensor[(720), uint64]) */;
    %1055 = floor_divide(%1046, %1047) /* ty=Tensor[(13, 10, 9), float64] */;
    %1056 = %1054.2;
    (%1055, %1056, %var_3407, %var_3408, %var_3409)
  };
  %1057(%var_3428, %var_3429, %var_3430, %var_3431) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(1638), float64], int16, Tensor[(240), int16], Tensor[(72), uint64]) */
}

def @func_4830() -> (Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) {
  %1058 = @func_4671() /* ty=(Tensor[(16, 15, 2), float64], Tensor[(16, 15, 2), float64], Tensor[(7, 13, 4), float64], Tensor[(364), float64]) */;
  %1059 = %1058.2;
  %1060 = cast(%1059, dtype="float32") /* ty=Tensor[(7, 13, 4), float32] */;
  %1061 = cast(meta[relay.Constant][79] /* ty=Tensor[(1638, 1), float64] */, dtype="float64") /* ty=Tensor[(1638, 1), float64] */;
  %1062 = cast(meta[relay.Constant][80] /* ty=Tensor[(525), uint32] */, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %1063 = reshape(%1061, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %1064 = reshape(%1062, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1065 = @func_4718(%1063, %1064) /* ty=(Tensor[(16, 8, 10), int64], Tensor[(16, 8, 10), float32], Tensor[(14, 117), float64], Tensor[(525), uint32]) */;
  %1066 = atan(%1060) /* ty=Tensor[(7, 13, 4), float32] */;
  %1067 = %1065.1;
  (%1066, %1067, meta[relay.Constant][79] /* ty=Tensor[(1638, 1), float64] */, meta[relay.Constant][80] /* ty=Tensor[(525), uint32] */)
}

def @func_9501(%var_9499: float64, %var_9500: Tensor[(5, 7, 4), float64]) -> (Tensor[(5, 7, 4), float64], Tensor[(5, 7, 4), bool]) {
  @func_9497(%var_9499, %var_9500) /* ty=(Tensor[(5, 7, 4), float64], Tensor[(5, 7, 4), bool]) */
}

def @func_5909() -> (Tensor[(16, 8, 10), float64], Tensor[(9, 10, 8), float32], Tensor[(720), uint64]) {
  %1076 = fn () -> (Tensor[(16, 8, 10), float64], Tensor[(9, 10, 8), float32], Tensor[(720), uint64]) {
    %1068 = @func_5087() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) */;
    %1069 = %1068.0;
    %1070 = cast(%1069, dtype="float64") /* ty=Tensor[(16, 8, 10), float64] */;
    %1071 = cast(meta[relay.Constant][81] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
    %1072 = reshape(%1071, newshape=[720]) /* ty=Tensor[(720), uint64] */;
    %1073 = @func_3911(%1072) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(910), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(9, 10, 8), float32]) */;
    %1074 = asinh(%1070) /* ty=Tensor[(16, 8, 10), float64] */;
    %1075 = %1073.4;
    (%1074, %1075, meta[relay.Constant][81] /* ty=Tensor[(720), uint64] */)
  };
  %1076() /* ty=(Tensor[(16, 8, 10), float64], Tensor[(9, 10, 8), float32], Tensor[(720), uint64]) */
}

def @func_5429(%var_5427: Tensor[(7, 15, 5), uint32]) -> (Tensor[(7, 15, 5), int8],) {
  @func_5426(%var_5427) /* ty=(Tensor[(7, 15, 5), int8],) */
}

def @func_8806(%var_8805: Tensor[(525), float32]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(1170), float64], Tensor[(525), uint64]) {
  %1091 = fn (%var_8795: Tensor[(525), float32]) -> (Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(1170), float64], Tensor[(525), uint64]) {
    %1077 = @func_4222() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(35, 15), uint32], Tensor[(1638), float64], Tensor[(525), uint32]) */;
    %1078 = cast(meta[relay.Constant][82] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %1079 = reshape(%1078, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %1080 = @func_4449(%1079) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(240), int16], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64]) */;
    %1081 = cast(meta[relay.Constant][82] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %1082 = @func_7246() /* ty=Tensor[(525), float32] */;
    %1083 = cast(%var_8795, dtype="uint64") /* ty=Tensor[(525), uint64] */;
    %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1085 = cast(%1082, dtype="uint64") /* ty=Tensor[(525), uint64] */;
    %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %1087 = %1077.0;
    %1088 = %1080.0;
    %1089 = erf(%1081) /* ty=Tensor[(1170), float64] */;
    %1090 = multiply(%1085, %1086) /* ty=Tensor[(525), uint64] */;
    (%1087, %1088, %1089, %1090)
  };
  %1091(%var_8805) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(16, 8, 10), float32], Tensor[(1170), float64], Tensor[(525), uint64]) */
}

def @func_8441() -> Tensor[(1638), float64] {
  @func_8439() /* ty=Tensor[(1638), float64] */
}

def @func_6568(%var_6535: Tensor[(1638), float64]) -> (Tensor[(525), float32], Tensor[(16, 8, 10), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(440), float32]) {
  %1092 = @func_6494() /* ty=(Tensor[(525), float32],) */;
  %1093 = cast(%var_6535, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %1094 = %1092.0;
  %1095 = cast(%1094, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %1096 = reshape(%1093, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %1097 = reshape(%1095, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1098 = @func_4718(%1096, %1097) /* ty=(Tensor[(16, 8, 10), int64], Tensor[(16, 8, 10), float32], Tensor[(14, 117), float64], Tensor[(525), uint32]) */;
  %1099 = @func_5524() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %1100 = cast(meta[relay.Constant][83] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %1101 = cast(%var_6535, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %1102 = cast(%1094, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %1103 = reshape(%1100, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), float32] */;
  %1104 = reshape(%1101, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %1105 = reshape(%1102, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1106 = @func_2400(%1103, %1104, %1105) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(1638), float64], Tensor[(525), uint32], Tensor[(9, 10, 8), float64], Tensor[(72), uint64], Tensor[(2, 360), uint64]) */;
  %1107 = %1098.1;
  %1108 = %1099.0;
  %1109 = %1106.1;
  (%1094, %1107, %var_6535, %1108, %1109, meta[relay.Constant][83] /* ty=Tensor[(440), float32] */)
}

def @func_8959() -> Tensor[(16, 8, 10), float32] {
  %1110 = @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */;
  %1110.1
}

def @func_10071(%var_10066: Tensor[(14, 7, 4), uint32], %var_10067: Tensor[(14, 7, 4), uint32], %var_10068: Tensor[(720), float64], %var_10069: Tensor[(72), uint64], %var_10070: Tensor[(880), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), float32], Tensor[(720), float64], Tensor[(72), uint64], Tensor[(11, 16, 5), float64], Tensor[(880), float64], Tensor[(14, 7, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(525), float32], Tensor[(182, 9), float64]) {
  %1136 = fn (%var_10021: Tensor[(14, 7, 4), uint32], %var_10022: Tensor[(14, 7, 4), uint32], %var_10036: Tensor[(720), float64], %var_10037: Tensor[(72), uint64], %var_10040: Tensor[(880), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(525), float32], Tensor[(720), float64], Tensor[(72), uint64], Tensor[(11, 16, 5), float64], Tensor[(880), float64], Tensor[(14, 7, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(525), float32], Tensor[(182, 9), float64]) {
    %1111 = @func_6978() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %1112 = cast(%var_10036, dtype="float64") /* ty=Tensor[(720), float64] */;
    %1113 = cast(%var_10037, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %1114 = reshape(%1112, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %1115 = reshape(%1113, newshape=[3, 24]) /* ty=Tensor[(3, 24), uint64] */;
    %1116 = @func_10016(%1114, %1115) /* ty=(Tensor[(525), float32], Tensor[(9, 10, 8), int16], Tensor[(720), float64], Tensor[(3, 24), float32]) */;
    %1117 = cast(%var_10040, dtype="float64") /* ty=Tensor[(880), float64] */;
    %1118 = reshape(%1117, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float64] */;
    %1119 = @func_9087(%1118) /* ty=(Tensor[(11, 16, 5), float64], Tensor[(16, 8, 10), float32]) */;
    %1120 = cast(%var_10022, dtype="uint32") /* ty=Tensor[(14, 7, 4), uint32] */;
    %1121 = shape_of(%var_10021, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1122 = cast(%var_10021, dtype="uint32") /* ty=Tensor[(14, 7, 4), uint32] */;
    %1123 = dyn.reshape(%1120, %1121, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1124 = right_shift(%1122, %1123) /* ty=Tensor[(14, 7, 4), uint32] */;
    %1125 = cast(%1124, dtype="float32") /* ty=Tensor[(14, 7, 4), float32] */;
    %1126 = @func_9960() /* ty=(Tensor[(16, 8, 10), float32],) */;
    %1127 = cast(meta[relay.Constant][84] /* ty=Tensor[(182, 9), float64] */, dtype="float64") /* ty=Tensor[(182, 9), float64] */;
    %1128 = reshape(%1127, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %1129 = @func_6568(%1128) /* ty=(Tensor[(525), float32], Tensor[(16, 8, 10), float32], Tensor[(1638), float64], Tensor[(16, 8, 10), float32], Tensor[(7, 15, 5), uint32], Tensor[(440), float32]) */;
    %1130 = %1111.0;
    %1131 = %1116.0;
    %1132 = %1119.0;
    %1133 = log10(%1125) /* ty=Tensor[(14, 7, 4), float32] */;
    %1134 = %1126.0;
    %1135 = %1129.0;
    (%1130, %1131, %var_10036, %var_10037, %1132, %var_10040, %1133, %1134, %1135, meta[relay.Constant][84] /* ty=Tensor[(182, 9), float64] */)
  };
  %1136(%var_10066, %var_10067, %var_10068, %var_10069, %var_10070) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(525), float32], Tensor[(720), float64], Tensor[(72), uint64], Tensor[(11, 16, 5), float64], Tensor[(880), float64], Tensor[(14, 7, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(525), float32], Tensor[(182, 9), float64]) */
}

def @func_9709() -> (Tensor[(7, 13, 4), float32],) {
  %1137 = @func_4830() /* ty=(Tensor[(7, 13, 4), float32], Tensor[(16, 8, 10), float32], Tensor[(1638, 1), float64], Tensor[(525), uint32]) */;
  %1138 = %1137.0;
  %1139 = cast(%1138, dtype="float32") /* ty=Tensor[(7, 13, 4), float32] */;
  %1140 = erf(%1139) /* ty=Tensor[(7, 13, 4), float32] */;
  (%1140,)
}

def @func_8506() -> Tensor[(525), float32] {
  @func_8504() /* ty=Tensor[(525), float32] */
}

def @func_5688(%var_5686: Tensor[(525), uint32]) -> (Tensor[(525), float64],) {
  @func_5685(%var_5686) /* ty=(Tensor[(525), float64],) */
}

def @func_7949(%var_7947: Tensor[(1404), float32]) -> (Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32]) {
  @func_7946(%var_7947) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(13, 12, 9), float64], Tensor[(1404), float32]) */
}

def @func_3845() -> Tensor[(16, 8, 10), float32] {
  %1141 = @func_3811() /* ty=(Tensor[(16, 8, 10), float32],) */;
  %1141.0
}

def @func_5986(%var_5958: Tensor[(7, 15, 5), float64], %var_5965: Tensor[(240), int16], %var_5966: Tensor[(1280), float64]) -> (Tensor[(9, 10, 8), float32], int16, Tensor[(72), uint64], Tensor[(7, 15, 5), float64], int16, Tensor[(240), int16], Tensor[(440), float32], Tensor[(14, 117), float64], Tensor[(525), float32], Tensor[(1280), float32]) {
  %1142 = @func_5908() /* ty=(Tensor[(16, 8, 10), float64], Tensor[(9, 10, 8), float32], Tensor[(720), uint64]) */;
  %1143 = cast(meta[relay.Constant][85] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1144 = cast(meta[relay.Constant][86] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1145 = reshape(%1143, newshape=[]) /* ty=int16 */;
  %1146 = reshape(%1144, newshape=[72, 1]) /* ty=Tensor[(72, 1), uint64] */;
  %1147 = @func_5596(%1145, %1146) /* ty=(Tensor[(7, 15, 5), float64], Tensor[(1, 16, 15), bool], int16, Tensor[(240), int16], Tensor[(72, 1), uint64], Tensor[(7, 15, 5), int8]) */;
  %1148 = %1147.0;
  %1149 = cast(%var_5958, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %1150 = shape_of(%1148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1151 = cast(%1148, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %1152 = dyn.reshape(%1149, %1150, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1153 = cast(%var_5965, dtype="int16") /* ty=Tensor[(240), int16] */;
  %1154 = cast(%var_5966, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %1155 = cast(meta[relay.Constant][87] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %1156 = cast(meta[relay.Constant][88] /* ty=Tensor[(14, 117), float64] */, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %1157 = cast(%1148, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %1158 = reshape(%1153, newshape=[120, 2]) /* ty=Tensor[(120, 2), int16] */;
  %1159 = reshape(%1154, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), float64] */;
  %1160 = reshape(%1155, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %1161 = reshape(%1156, newshape=[182, 9]) /* ty=Tensor[(182, 9), float64] */;
  %1162 = reshape(%1157, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1163 = @func_4043(%1158, %1159, %1160, %1161, %1162) /* ty=(Tensor[(1, 16, 15), bool], int16, Tensor[(120, 2), int16], Tensor[(72), uint64], Tensor[(16, 8, 10), float64], int16, Tensor[(10, 117), float64], Tensor[(2, 360), uint64], Tensor[(440), float32], Tensor[(182, 9), float64], Tensor[(525), uint32]) */;
  %1164 = cast(%1148, dtype="uint32") /* ty=Tensor[(7, 15, 5), uint32] */;
  %1165 = reshape(%1164, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %1166 = @func_4947(%1165) /* ty=(Tensor[(525), uint16], Tensor[(525), float32], Tensor[(525), float32]) */;
  %1167 = cast(%var_5966, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %1168 = %1142.1;
  %1169 = divide(%1151, %1152) /* ty=Tensor[(7, 15, 5), float64] */;
  %1170 = %1163.1;
  %1171 = %1166.1;
  %1172 = log10(%1167) /* ty=Tensor[(1280), float32] */;
  (%1168, meta[relay.Constant][85] /* ty=int16 */, meta[relay.Constant][86] /* ty=Tensor[(72), uint64] */, %1169, %1170, %var_5965, meta[relay.Constant][87] /* ty=Tensor[(440), float32] */, meta[relay.Constant][88] /* ty=Tensor[(14, 117), float64] */, %1171, %1172)
}

def @func_5506() -> Tensor[(525), uint32] {
  %1173 = @func_5218() /* ty=(Tensor[(525), uint32],) */;
  %1173.0
}

def @func_9497(%var_9458: float64, %var_9459: Tensor[(5, 7, 4), float64]) -> (Tensor[(5, 7, 4), float64], Tensor[(5, 7, 4), bool]) {
  %1174 = cast(%var_9458, dtype="float64") /* ty=float64 */;
  %1175 = cast(%var_9459, dtype="float64") /* ty=Tensor[(5, 7, 4), float64] */;
  %1176 = cast(%var_9458, dtype="bool") /* ty=bool */;
  %1177 = cast(%var_9459, dtype="bool") /* ty=Tensor[(5, 7, 4), bool] */;
  %1178 = multiply(%1174, %1175) /* ty=Tensor[(5, 7, 4), float64] */;
  %1179 = logical_and(%1176, %1177) /* ty=Tensor[(5, 7, 4), bool] */;
  (%1178, %1179)
}

def @func_7269() -> Tensor[(525), float32] {
  @func_6784() /* ty=Tensor[(525), float32] */
}

def @func_3690(%var_3682: int32, %var_3683: Tensor[(10, 10, 1), int32]) -> Tensor[(10, 10, 1), bool] {
  %1180 = cast(%var_3682, dtype="bool") /* ty=bool */;
  %1181 = cast(%var_3683, dtype="bool") /* ty=Tensor[(10, 10, 1), bool] */;
  less_equal(%1180, %1181) /* ty=Tensor[(10, 10, 1), bool] */
}

def @func_4452(%var_4450: Tensor[(1170), float64]) -> (Tensor[(16, 8, 10), float32], Tensor[(240), int16], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64]) {
  @func_4449(%var_4450) /* ty=(Tensor[(16, 8, 10), float32], Tensor[(240), int16], Tensor[(1170), float64], Tensor[(240), int16], Tensor[(360, 2), uint64]) */
}

def @func_5241() -> (Tensor[(16, 8, 10), float32],) {
  %1182 = @func_3845() /* ty=Tensor[(16, 8, 10), float32] */;
  (%1182,)
}

def @main(%var_10561: Tensor[(2, 12, 3), int16], %var_10562: Tensor[(2, 12, 3), int16]) -> Tensor[(2, 12, 3), bool] {
  %1183 = cast(%var_10562, dtype="bool") /* ty=Tensor[(2, 12, 3), bool] */;
  %1184 = shape_of(%var_10561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(%var_10561, dtype="bool") /* ty=Tensor[(2, 12, 3), bool] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1185, %1186) /* ty=Tensor[(2, 12, 3), bool] */
}

def @func_7248() -> Tensor[(525), float32] {
  @func_7246() /* ty=Tensor[(525), float32] */
}

def @func_3811() -> (Tensor[(16, 8, 10), float32],) {
  %1187 = cast(meta[relay.Constant][89] /* ty=Tensor[(16, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 10), float32] */;
  %1188 = sin(%1187) /* ty=Tensor[(16, 8, 10), float32] */;
  (%1188,)
}

def @func_665(%var_663: Tensor[(9, 1, 8), uint64], %var_664: Tensor[(9, 10, 8), uint64]) -> (Tensor[(9, 10, 8), float64],) {
  %1196 = fn (%var_618: Tensor[(9, 1, 8), uint64], %var_619: Tensor[(9, 10, 8), uint64]) -> (Tensor[(9, 10, 8), float64],) {
    %1189 = cast(%var_618, dtype="uint64") /* ty=Tensor[(9, 1, 8), uint64] */;
    %1190 = cast(%var_619, dtype="uint64") /* ty=Tensor[(9, 10, 8), uint64] */;
    %1191 = bitwise_xor(%1189, %1190) /* ty=Tensor[(9, 10, 8), uint64] */;
    %1192 = cast(%1191, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
    %1193 = sigmoid(%1192) /* ty=Tensor[(9, 10, 8), float64] */;
    %1194 = cast(%1193, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
    %1195 = atan(%1194) /* ty=Tensor[(9, 10, 8), float64] */;
    (%1195,)
  };
  %1196(%var_663, %var_664) /* ty=(Tensor[(9, 10, 8), float64],) */
}

def @func_6237(%var_6232: Tensor[(1144), uint32], %var_6233: Tensor[(7, 130), float32], %var_6234: Tensor[(780), float32]) -> (Tensor[(720), uint64], Tensor[(8, 11, 13), uint32], Tensor[(1144), uint32], Tensor[(7, 130), float32], Tensor[(780), float32]) {
  %1197 = @func_5645() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(780), float32], Tensor[(720), uint64], Tensor[(525), uint32]) */;
  %1198 = cast(%var_6232, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %1199 = cast(%var_6232, dtype="uint32") /* ty=Tensor[(1144), uint32] */;
  %1200 = cast(%var_6233, dtype="float32") /* ty=Tensor[(7, 130), float32] */;
  %1201 = %1197.2;
  %1202 = cast(%1201, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %1203 = cast(%var_6234, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1204 = reshape(%1198, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), uint32] */;
  %1205 = reshape(%1199, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), uint32] */;
  %1206 = reshape(%1200, newshape=[1, 910]) /* ty=Tensor[(1, 910), float32] */;
  %1207 = reshape(%1202, newshape=[720]) /* ty=Tensor[(720), uint64] */;
  %1208 = reshape(%1203, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %1209 = @func_2909(%1204, %1205, %1206, %1207, %1208) /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(1, 910), float32], Tensor[(720), uint64], Tensor[(10, 78), int64]) */;
  %1210 = %1209.0;
  (%1201, %1210, %var_6232, %var_6233, %var_6234)
}

def @func_5089() -> (Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) {
  @func_5087() /* ty=(Tensor[(16, 8, 10), float32], Tensor[(2, 5, 6), float32]) */
}

def @func_7503() -> (Tensor[(16, 8, 10), float32],) {
  %1211 = @func_7102() /* ty=Tensor[(16, 8, 10), float32] */;
  (%1211,)
}

def @func_8618() -> Tensor[(525), uint32] {
  @func_8616() /* ty=Tensor[(525), uint32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen415/build/output.py:2856: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen415/build/output.py", line 2861, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(72) tvmgen_default_fused_cast_cast_reshape_greater_kernel0(signed char* __restrict__ T_greater, short* __restrict__ placeholder, short* __restrict__ placeholder1) {
  T_greater[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) < ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


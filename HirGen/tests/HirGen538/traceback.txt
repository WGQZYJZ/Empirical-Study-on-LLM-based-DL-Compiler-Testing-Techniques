==========mod==========
#[version = "0.0.5"]
def @func_5075() -> (Tensor[(11, 13, 4), float64],) {
  %0 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %1 = %0.0;
  (%1,)
}

def @func_5376() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %2 = @func_5019() /* ty=Tensor[(11, 13, 4), float32] */;
  %3 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  (%2, %3)
}

def @func_9247(%var_9229: Tensor[(858), float64]) -> (Tensor[(11, 13, 4), bool], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(6, 16, 9), int64], Tensor[(160, 1), float32], Tensor[(160), float32], Tensor[(858), float32], Tensor[(858), float64]) {
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %5 = reshape(%4, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %6 = @func_7862() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(10), float32]) */;
  %7 = @func_8083() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 9), float32] */;
  %9 = cosh(%8) /* ty=Tensor[(6, 16, 9), float32] */;
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 16, 9), float32] */, dtype="int64") /* ty=Tensor[(6, 16, 9), int64] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%9, dtype="int64") /* ty=Tensor[(6, 16, 9), int64] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %15 = reshape(%14, newshape=[160, 1]) /* ty=Tensor[(160, 1), float32] */;
  %16 = @func_5741(%15) /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(160, 1), float32]) */;
  %17 = cast(%var_9229, dtype="float64") /* ty=Tensor[(858), float64] */;
  %18 = reshape(%17, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %19 = @func_8954(%18) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(858), float32], Tensor[(11, 13, 4), float32]) */;
  %20 = @func_4093(%5) /* ty=Tensor[(11, 13, 4), bool] */;
  %21 = %6.0;
  %22 = %7.1;
  %23 = minimum(%12, %13) /* ty=Tensor[(6, 16, 9), int64] */;
  %24 = %16.9;
  %25 = %19.2;
  (%20, meta[relay.Constant][0] /* ty=Tensor[(572), float32] */, %21, %22, %23, %24, meta[relay.Constant][2] /* ty=Tensor[(160), float32] */, %25, %var_9229)
}

def @func_2333(%var_2323: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), uint32] {
  %26 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %27 = %26.0;
  %28 = cast(%var_2323, dtype="uint32") /* ty=Tensor[(11, 13, 4), uint32] */;
  %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%27, dtype="uint32") /* ty=Tensor[(11, 13, 4), uint32] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%30, %31) /* ty=Tensor[(11, 13, 4), uint32] */
}

def @func_10879() -> (Tensor[(11, 5, 1), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %32 = cast(meta[relay.Constant][3] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %33 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 5, 1), uint64] */, dtype="bool") /* ty=Tensor[(11, 5, 1), bool] */;
  %34 = equal(%32, %33) /* ty=Tensor[(11, 5, 1), bool] */;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(11, 5, 1), float64] */;
  %36 = log(%35) /* ty=Tensor[(11, 5, 1), float64] */;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(11, 5, 1), float64] */;
  %38 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %39 = @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */;
  %40 = erf(%37) /* ty=Tensor[(11, 5, 1), float64] */;
  %41 = %38.0;
  %42 = %39.2;
  (%40, %41, %42)
}

def @func_6911() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), int32], Tensor[(13, 3, 10), uint64]) {
  %43 = @func_5522() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %44 = @func_5035() /* ty=Tensor[(13, 3, 10), bool] */;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
  %46 = atanh(%45) /* ty=Tensor[(13, 3, 10), float32] */;
  %47 = cast(%44, dtype="int8") /* ty=Tensor[(13, 3, 10), int8] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%46, dtype="int8") /* ty=Tensor[(13, 3, 10), int8] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %51 = maximum(%49, %50) /* ty=Tensor[(13, 3, 10), int8] */;
  %52 = cast(%51, dtype="int32") /* ty=Tensor[(13, 3, 10), int32] */;
  %53 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%46, dtype="int32") /* ty=Tensor[(13, 3, 10), int32] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %56 = cast(%51, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
  %57 = acosh(%56) /* ty=Tensor[(13, 3, 10), float64] */;
  %58 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 3, 10), float64] */, dtype="uint64") /* ty=Tensor[(13, 3, 10), uint64] */;
  %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%57, dtype="uint64") /* ty=Tensor[(13, 3, 10), uint64] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %62 = %43.0;
  %63 = bitwise_or(%54, %55) /* ty=Tensor[(13, 3, 10), int32] */;
  %64 = left_shift(%60, %61) /* ty=Tensor[(13, 3, 10), uint64] */;
  (%62, %63, %64)
}

def @func_6745() -> (Tensor[(13, 3, 10), bool],) {
  %65 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %66 = %65.0;
  (%66,)
}

def @func_7221() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), uint32]) {
  %67 = @func_5816() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) */;
  %68 = @func_7017() /* ty=Tensor[(13, 3, 10), bool] */;
  %69 = %67.2;
  (%68, %69)
}

def @func_11909() -> Tensor[(11, 13, 4), float32] {
  %70 = @func_9128() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %70.1
}

def @func_11335(%var_11313: Tensor[(13, 3, 10), bool]) -> Tensor[(13, 3, 10), int16] {
  %71 = @func_7074() /* ty=Tensor[(13, 3, 10), bool] */;
  %72 = cast(%var_11313, dtype="int16") /* ty=Tensor[(13, 3, 10), int16] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%71, dtype="int16") /* ty=Tensor[(13, 3, 10), int16] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%74, %75) /* ty=Tensor[(13, 3, 10), int16] */
}

def @func_9128() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %76 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %77 = @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %78 = %76.0;
  %79 = %77.3;
  (%78, %79)
}

def @func_9703() -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64]) {
  %80 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %81 = @func_6593() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %82 = %80.0;
  %83 = %81.0;
  (%82, %83)
}

def @func_9015() -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) {
  %84 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %85 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %86 = %84.1;
  %87 = %85.1;
  (%86, %87)
}

def @func_8849(%var_8808: Tensor[(7, 6, 4), float32]) -> (Tensor[(7, 6, 4), float32], Tensor[(3, 15, 3), bool], Tensor[(135), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %88 = cast(%var_8808, dtype="float32") /* ty=Tensor[(7, 6, 4), float32] */;
  %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(135), float32] */, dtype="float32") /* ty=Tensor[(135), float32] */;
  %90 = reshape(%89, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), float32] */;
  %91 = @func_6222(%90) /* ty=(Tensor[(3, 15, 3), float32], Tensor[(3, 15, 3), bool]) */;
  %92 = cast(meta[relay.Constant][6] /* ty=Tensor[(135), float32] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %93 = @func_7148() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
  %94 = atan(%88) /* ty=Tensor[(7, 6, 4), float32] */;
  %95 = %91.1;
  %96 = asinh(%92) /* ty=Tensor[(135), float64] */;
  %97 = @func_2955() /* ty=Tensor[(11, 13, 4), float32] */;
  %98 = %93.0;
  (%94, %95, %96, %97, %98)
}

def @func_2626() -> (Tensor[(11, 13, 4), float32],) {
  %99 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %100 = %99.0;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %102 = exp(%101) /* ty=Tensor[(11, 13, 4), float32] */;
  (%102,)
}

def @func_4093(%var_4084: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), bool] {
  %103 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %104 = %103.0;
  %105 = cast(%var_4084, dtype="bool") /* ty=Tensor[(11, 13, 4), bool] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="bool") /* ty=Tensor[(11, 13, 4), bool] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%107, %108) /* ty=Tensor[(11, 13, 4), bool] */
}

def @func_2955() -> Tensor[(11, 13, 4), float32] {
  @func_2812() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_2883() -> (Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) {
  %109 = @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */;
  %110 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %111 = %109.1;
  %112 = %110.0;
  (%111, %112)
}

def @func_4431() -> (Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), uint16], Tensor[(3, 44), uint16], Tensor[(11, 13, 4), float32]) {
  %113 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 44), uint16] */, dtype="uint16") /* ty=Tensor[(3, 44), uint16] */;
  %115 = reshape(%114, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), uint16] */;
  %116 = @func_1169(%115) /* ty=(Tensor[(3, 11, 4), uint16],) */;
  %117 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %118 = %113.0;
  %119 = %116.0;
  %120 = %117.0;
  (%118, %119, meta[relay.Constant][7] /* ty=Tensor[(3, 44), uint16] */, %120)
}

def @func_8954(%var_8915: Tensor[(858), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(858), float32], Tensor[(11, 13, 4), float32]) {
  %121 = @func_4886() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), bool], Tensor[(3, 11, 4), int16], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %122 = cast(%var_8915, dtype="float64") /* ty=Tensor[(858), float64] */;
  %123 = reshape(%122, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %124 = @func_8193(%123) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 11, 6), bool]) */;
  %125 = cast(%var_8915, dtype="float32") /* ty=Tensor[(858), float32] */;
  %126 = @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %127 = %121.5;
  %128 = %124.0;
  %129 = sin(%125) /* ty=Tensor[(858), float32] */;
  %130 = %126.3;
  (%127, %128, %129, %130)
}

def @func_5404() -> (Tensor[(11, 13, 4), float32],) {
  %131 = @func_4400() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %132 = %131.1;
  (%132,)
}

def @func_8396() -> Tensor[(11, 13, 4), float32] {
  %133 = @func_7648() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %133.0
}

def @func_1927(%var_1882: int32, %var_1883: Tensor[(9, 9, 16), int32]) -> (Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
  %134 = cast(%var_1882, dtype="bool") /* ty=bool */;
  %135 = cast(%var_1883, dtype="bool") /* ty=Tensor[(9, 9, 16), bool] */;
  %136 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 12), float32] */;
  %137 = reshape(%136, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float32] */;
  %138 = cast(meta[relay.Constant][9] /* ty=Tensor[(20, 4), float64] */, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %139 = reshape(%138, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float64] */;
  %140 = @func_798(%139) /* ty=(Tensor[(4, 4, 5), float64],) */;
  %141 = cast(meta[relay.Constant][10] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %142 = reshape(%141, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %143 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %144 = %140.0;
  %145 = cast(%144, dtype="float64") /* ty=Tensor[(4, 4, 5), float64] */;
  %146 = reshape(%145, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float64] */;
  %147 = @func_798(%146) /* ty=(Tensor[(4, 4, 5), float64],) */;
  %148 = not_equal(%134, %135) /* ty=Tensor[(9, 9, 16), bool] */;
  %149 = @func_528(%137) /* ty=Tensor[(?, 4, 3), uint16] */;
  %150 = @func_1767(%142) /* ty=Tensor[(11, 13, 4), uint16] */;
  %151 = %143.5;
  %152 = %147.0;
  (%148, %149, meta[relay.Constant][8] /* ty=Tensor[(1, 12), float32] */, %144, meta[relay.Constant][9] /* ty=Tensor[(20, 4), float64] */, %150, meta[relay.Constant][10] /* ty=Tensor[(572), float32] */, %151, %152)
}

def @func_5816() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) {
  %153 = @func_3167() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */;
  %154 = %153.2;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %156 = reshape(%155, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %157 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %158 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  %159 = @func_2333(%156) /* ty=Tensor[(11, 13, 4), uint32] */;
  %160 = %157.0;
  (%158, %154, %159, %160)
}

def @main() -> (Tensor[(11, 13, 4), float32],) {
  %161 = @func_11676() /* ty=Tensor[(11, 13, 4), float32] */;
  %162 = cast(%161, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %163 = tan(%162) /* ty=Tensor[(11, 13, 4), float32] */;
  (%163,)
}

def @func_3889() -> Tensor[(11, 13, 4), float32] {
  %164 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %164.0
}

def @func_11736(%var_11697: uint8) -> (Tensor[(14, 4, 6), uint8], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %165 = cast(%var_11697, dtype="uint8") /* ty=uint8 */;
  %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 4, 6), uint8] */, dtype="uint8") /* ty=Tensor[(14, 4, 6), uint8] */;
  %167 = @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %168 = bitwise_and(%165, %166) /* ty=Tensor[(14, 4, 6), uint8] */;
  %169 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
  %170 = %167.0;
  (%168, %169, %170)
}

def @func_3911(%var_3905: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), int64] {
  %171 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %172 = %171.0;
  %173 = cast(%var_3905, dtype="int64") /* ty=Tensor[(11, 13, 4), int64] */;
  %174 = shape_of(%172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%172, dtype="int64") /* ty=Tensor[(11, 13, 4), int64] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%175, %176) /* ty=Tensor[(11, 13, 4), int64] */
}

def @func_10907(%var_10881: Tensor[(1, 8, 6), int8], %var_10882: Tensor[(16, 8, 6), int8]) -> (Tensor[(16, 8, 6), int8], Tensor[(11, 13, 4), float32]) {
  %177 = cast(%var_10881, dtype="int8") /* ty=Tensor[(1, 8, 6), int8] */;
  %178 = cast(%var_10882, dtype="int8") /* ty=Tensor[(16, 8, 6), int8] */;
  %179 = @func_7402() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), int64], Tensor[(13, 3, 10), bool]) */;
  %180 = subtract(%177, %178) /* ty=Tensor[(16, 8, 6), int8] */;
  %181 = %179.3;
  (%180, %181)
}

def @func_11924(%var_11915: float64, %var_11916: Tensor[(6, 16, 4), float64]) -> Tensor[(6, 16, 4), float64] {
  %182 = cast(%var_11915, dtype="float64") /* ty=float64 */;
  %183 = cast(%var_11916, dtype="float64") /* ty=Tensor[(6, 16, 4), float64] */;
  floor_mod(%182, %183) /* ty=Tensor[(6, 16, 4), float64] */
}

def @func_10974() -> Tensor[(13, 3, 10), bool] {
  %184 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %184.2
}

def @func_5146() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %185 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %186 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
  %187 = %185.0;
  %188 = %186.2;
  (%187, %188)
}

def @func_4400() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %189 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %190 = %189.0;
  %191 = cast(%190, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %192 = @func_4269() /* ty=Tensor[(11, 13, 4), float32] */;
  %193 = sqrt(%191) /* ty=Tensor[(11, 13, 4), float32] */;
  (%192, %193)
}

def @func_2452() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  %194 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %195 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %196 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %197 = %194.0;
  %198 = %195.0;
  %199 = %196.0;
  (%197, %198, %199)
}

def @func_8298() -> Tensor[(572), float32] {
  %200 = @func_7307() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) */;
  %200.2
}

def @func_11676() -> Tensor[(11, 13, 4), float32] {
  %201 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %201.0
}

def @func_3938() -> (Tensor[(11, 13, 4), float32],) {
  %202 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %203 = %202.0;
  (%203,)
}

def @func_9664() -> (Tensor[(11, 13, 4), bool],) {
  %204 = @func_7307() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) */;
  %205 = %204.1;
  (%205,)
}

def @func_8193(%var_8168: Tensor[(13, 11, 6), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 11, 6), bool]) {
  %206 = @func_5146() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %207 = @func_3167() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */;
  %208 = cast(%var_8168, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
  %209 = rsqrt(%208) /* ty=Tensor[(13, 11, 6), float64] */;
  %210 = cast(%var_8168, dtype="bool") /* ty=Tensor[(13, 11, 6), bool] */;
  %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%209, dtype="bool") /* ty=Tensor[(13, 11, 6), bool] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %214 = %206.0;
  %215 = %207.1;
  %216 = greater_equal(%212, %213) /* ty=Tensor[(13, 11, 6), bool] */;
  (%214, %215, %216)
}

def @func_1394() -> (Tensor[(11, 13, 4), float32],) {
  %217 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %218 = %217.0;
  %219 = cast(%218, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %220 = log2(%219) /* ty=Tensor[(11, 13, 4), float32] */;
  (%220,)
}

def @func_7046() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %221 = @func_4739() /* ty=Tensor[(11, 13, 4), float32] */;
  %222 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
  (%221, %222)
}

def @func_5006() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(20, 4), float64], int32) {
  %223 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %224 = @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */;
  %225 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %226 = reshape(%225, newshape=[]) /* ty=int32 */;
  %227 = @func_4366(%226) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(20, 4), float64], int32, Tensor[(6, 216), int32]) */;
  %228 = %223.0;
  %229 = %224.4;
  %230 = %227.1;
  (%228, %229, %230, -4 /* ty=int32 */)
}

def @func_937(%var_926: Tensor[(1, 1, 10), float32], %var_927: Tensor[(13, 3, 10), float32]) -> (Tensor[(13, 3, 10), bool],) {
  %231 = cast(%var_926, dtype="bool") /* ty=Tensor[(1, 1, 10), bool] */;
  %232 = cast(%var_927, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %233 = less_equal(%231, %232) /* ty=Tensor[(13, 3, 10), bool] */;
  (%233,)
}

def @func_6686() -> Tensor[(11, 13, 4), float32] {
  @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_4731() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %234 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %235 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %236 = %234.0;
  %237 = %235.0;
  (%236, %237)
}

def @func_12075(%var_12004: Tensor[(10), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64], Tensor[(10), float32], int32, Tensor[(13, 3, 10), float64], Tensor[(11, 13, 4), float32], Tensor[(?, 390), float32]) {
  %238 = @func_11198() /* ty=Tensor[(11, 13, 4), float64] */;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %240 = reshape(%239, newshape=[572]) /* ty=Tensor[(572), float32] */;
  %241 = @func_6044(%240) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(6, 216), int32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */;
  %242 = cast(%var_12004, dtype="float32") /* ty=Tensor[(10), float32] */;
  %243 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 390), float32] */, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %244 = reshape(%242, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %245 = reshape(%243, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %246 = @func_937(%244, %245) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %247 = %246.0;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
  %249 = @func_10637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %250 = cast(%247, dtype="uint64") /* ty=Tensor[(13, 3, 10), uint64] */;
  %251 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(1, 390), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %252 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 390), float32] */, dtype="uint64") /* ty=Tensor[(1, 390), uint64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %254 = add(%252, %253) /* ty=Tensor[(?, 390), uint64] */;
  %255 = cast(%254, dtype="float32") /* ty=Tensor[(?, 390), float32] */;
  %256 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
  %257 = %241.4;
  %258 = log2(%248) /* ty=Tensor[(13, 3, 10), float64] */;
  %259 = %249.1;
  %260 = cos(%255) /* ty=Tensor[(?, 390), float32] */;
  (%256, %238, %var_12004, %257, %258, %259, %260)
}

def @func_5501(%var_5480: Tensor[(390), float32], %var_5496: Tensor[(13, 3, 10), bool]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool]) {
  %261 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %262 = cast(meta[relay.Constant][13] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %263 = cast(%var_5480, dtype="float32") /* ty=Tensor[(390), float32] */;
  %264 = reshape(%262, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %265 = reshape(%263, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %266 = @func_937(%264, %265) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %267 = cast(meta[relay.Constant][13] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %268 = %266.0;
  %269 = cast(%268, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
  %270 = reshape(%267, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %271 = reshape(%269, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %272 = @func_937(%270, %271) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %273 = %272.0;
  %274 = cast(%var_5496, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%273, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %278 = %261.0;
  %279 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  %280 = greater_equal(%276, %277) /* ty=Tensor[(13, 3, 10), bool] */;
  (%278, %279, %268, meta[relay.Constant][13] /* ty=Tensor[(10), float32] */, %var_5480, %280)
}

def @func_4886() -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), bool], Tensor[(3, 11, 4), int16], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), float32]) {
  %281 = @func_4177() /* ty=(Tensor[(4, 4, 5), float64],) */;
  %282 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %283 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %284 = @func_4431() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), uint16], Tensor[(3, 44), uint16], Tensor[(11, 13, 4), float32]) */;
  %285 = %284.1;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(3, 11, 4), float64] */;
  %287 = sin(%286) /* ty=Tensor[(3, 11, 4), float64] */;
  %288 = cast(%285, dtype="bool") /* ty=Tensor[(3, 11, 4), bool] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%287, dtype="bool") /* ty=Tensor[(3, 11, 4), bool] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %292 = cast(%287, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  %293 = asin(%292) /* ty=Tensor[(3, 11, 4), float32] */;
  %294 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 11, 4), float32] */, dtype="int16") /* ty=Tensor[(3, 11, 4), int16] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="int16") /* ty=Tensor[(3, 11, 4), int16] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %298 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %299 = cast(%293, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  %300 = %281.0;
  %301 = %282.0;
  %302 = %283.0;
  %303 = equal(%290, %291) /* ty=Tensor[(3, 11, 4), bool] */;
  %304 = bitwise_and(%296, %297) /* ty=Tensor[(3, 11, 4), int16] */;
  %305 = %298.1;
  %306 = cosh(%299) /* ty=Tensor[(3, 11, 4), float32] */;
  (%300, %301, %302, %303, %304, %305, %306)
}

def @func_12482() -> (Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64]) {
  %307 = @func_7221() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), uint32]) */;
  %308 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %309 = %307.0;
  %310 = %308.1;
  (%309, %310)
}

def @func_8631(%var_8624: Tensor[(1, 390), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(1, 390), float32]) {
  %311 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %312 = cast(meta[relay.Constant][15] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %313 = cast(%var_8624, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %314 = reshape(%312, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %315 = reshape(%313, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %316 = @func_937(%314, %315) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %317 = %311.0;
  %318 = %316.0;
  (%317, %318, meta[relay.Constant][15] /* ty=Tensor[(10), float32] */, %var_8624)
}

def @func_3167() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) {
  %319 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %320 = cast(meta[relay.Constant][16] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %321 = cast(meta[relay.Constant][16] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %322 = reshape(%320, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
  %323 = reshape(%321, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
  %324 = @func_2510(%322, %323) /* ty=(Tensor[(5, 12, 13), float64], Tensor[(11, 13, 4), float32]) */;
  %325 = @func_2955() /* ty=Tensor[(11, 13, 4), float32] */;
  %326 = cast(%325, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %327 = reshape(%326, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %328 = @func_1711(%327) /* ty=(Tensor[(11, 13, 4), uint8],) */;
  %329 = %319.0;
  %330 = %324.1;
  %331 = %328.0;
  (%325, %329, %330, meta[relay.Constant][16] /* ty=Tensor[(780), float64] */, %331)
}

def @func_10450(%var_10439: Tensor[(5, 2), float32], %var_10440: Tensor[(390), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(5, 2), float32], Tensor[(390), float32]) {
  %332 = cast(%var_10439, dtype="float32") /* ty=Tensor[(5, 2), float32] */;
  %333 = cast(%var_10440, dtype="float32") /* ty=Tensor[(390), float32] */;
  %334 = reshape(%332, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %335 = reshape(%333, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %336 = @func_937(%334, %335) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %337 = @func_8711() /* ty=Tensor[(11, 13, 4), float32] */;
  %338 = %336.0;
  (%337, %338, %var_10439, %var_10440)
}

def @func_5433() -> (Tensor[(11, 13, 4), float32],) {
  %339 = @func_4739() /* ty=Tensor[(11, 13, 4), float32] */;
  (%339,)
}

def @func_12526(%var_12506: Tensor[(160), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(160), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
  %340 = @func_7148() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
  %341 = cast(%var_12506, dtype="float32") /* ty=Tensor[(160), float32] */;
  %342 = reshape(%341, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float32] */;
  %343 = @func_1813(%342) /* ty=(Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) */;
  %344 = @func_8083() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */;
  %345 = %340.2;
  %346 = %343.1;
  %347 = %344.0;
  %348 = @func_10217() /* ty=Tensor[(11, 13, 4), float32] */;
  (%345, %346, %var_12506, %347, %348)
}

def @func_4739() -> Tensor[(11, 13, 4), float32] {
  %349 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %349.0
}

def @func_11198() -> Tensor[(11, 13, 4), float64] {
  %350 = @func_10926() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %350.0
}

def @func_8275() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %351 = @func_6745() /* ty=(Tensor[(13, 3, 10), bool],) */;
  %352 = @func_7819() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %353 = %351.0;
  %354 = %352.1;
  (%353, %354)
}

def @func_2025() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %355 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %356 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %357 = %355.0;
  %358 = %356.0;
  (%357, %358)
}

def @func_4269() -> Tensor[(11, 13, 4), float32] {
  %359 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %359.0
}

def @func_7648() -> (Tensor[(11, 13, 4), float32],) {
  %360 = @func_6915() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %361 = %360.0;
  (%361,)
}

def @func_1711(%var_1697: Tensor[(11, 13, 4), float32]) -> (Tensor[(11, 13, 4), uint8],) {
  %362 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %363 = %362.0;
  %364 = cast(%var_1697, dtype="bool") /* ty=Tensor[(11, 13, 4), bool] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="bool") /* ty=Tensor[(11, 13, 4), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = not_equal(%366, %367) /* ty=Tensor[(11, 13, 4), bool] */;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(11, 13, 4), float64] */;
  %370 = rsqrt(%369) /* ty=Tensor[(11, 13, 4), float64] */;
  %371 = cast(%368, dtype="uint8") /* ty=Tensor[(11, 13, 4), uint8] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%370, dtype="uint8") /* ty=Tensor[(11, 13, 4), uint8] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %375 = maximum(%373, %374) /* ty=Tensor[(11, 13, 4), uint8] */;
  (%375,)
}

def @func_5603() -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %376 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %377 = @func_2103() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %378 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %379 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %380 = %376.1;
  %381 = %377.0;
  %382 = %378.0;
  %383 = %379.0;
  (%380, %381, %382, %383)
}

def @func_10926() -> (Tensor[(11, 13, 4), float64],) {
  %384 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  (%384,)
}

def @func_798(%var_794: Tensor[(4, 4, 5), float64]) -> (Tensor[(4, 4, 5), float64],) {
  %385 = cast(%var_794, dtype="float64") /* ty=Tensor[(4, 4, 5), float64] */;
  %386 = cos(%385) /* ty=Tensor[(4, 4, 5), float64] */;
  (%386,)
}

def @func_1552() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) {
  %387 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %388 = cast(meta[relay.Constant][17] /* ty=Tensor[(40, 2), float64] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %389 = reshape(%388, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float64] */;
  %390 = @func_798(%389) /* ty=(Tensor[(4, 4, 5), float64],) */;
  %391 = cast(meta[relay.Constant][17] /* ty=Tensor[(40, 2), float64] */, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %392 = %387.0;
  %393 = %390.0;
  %394 = log2(%391) /* ty=Tensor[(40, 2), float32] */;
  (%392, %393, %394)
}

def @func_1767(%var_1737: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), uint16] {
  %395 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %396 = %395.0;
  %397 = cast(%var_1737, dtype="uint16") /* ty=Tensor[(11, 13, 4), uint16] */;
  %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%396, dtype="uint16") /* ty=Tensor[(11, 13, 4), uint16] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%399, %400) /* ty=Tensor[(11, 13, 4), uint16] */
}

def @func_5921() -> (Tensor[(11, 5, 8), float32], int32) {
  %401 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %402 = @func_5006() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(20, 4), float64], int32) */;
  %403 = exp(%401) /* ty=Tensor[(11, 5, 8), float32] */;
  %404 = %402.3;
  (%403, %404)
}

def @func_10316(%var_10290: Tensor[(273), float64]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(273), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) {
  %405 = @func_4177() /* ty=(Tensor[(4, 4, 5), float64],) */;
  %406 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
  %407 = cast(%406, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %408 = cast(%var_10290, dtype="float64") /* ty=Tensor[(273), float64] */;
  %409 = reshape(%408, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float64] */;
  %410 = @func_3287(%409) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(13, 3, 7), float32]) */;
  %411 = @func_6502() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float64]) */;
  %412 = %405.0;
  %413 = asin(%407) /* ty=Tensor[(11, 13, 4), float32] */;
  %414 = %410.1;
  %415 = @func_8396() /* ty=Tensor[(11, 13, 4), float32] */;
  %416 = %411.0;
  (%412, %413, %414, %var_10290, %415, %416)
}

def @func_11010() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) {
  %417 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %418 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %419 = %417.0;
  %420 = %418.1;
  (%419, %420)
}

def @func_11031() -> int32 {
  %421 = @func_7436() /* ty=(int32, Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(11, 5, 8), float32]) */;
  %421.0
}

def @func_12392(%var_12381: Tensor[(1, 10, 14), bool], %var_12382: Tensor[(2, 10, 14), bool]) -> (Tensor[(2, 10, 14), float32],) {
  %422 = cast(%var_12381, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %423 = cast(%var_12382, dtype="bool") /* ty=Tensor[(2, 10, 14), bool] */;
  %424 = logical_or(%422, %423) /* ty=Tensor[(2, 10, 14), bool] */;
  %425 = cast(%var_12381, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %426 = cast(%424, dtype="float32") /* ty=Tensor[(2, 10, 14), float32] */;
  %427 = floor_mod(%425, %426) /* ty=Tensor[(2, 10, 14), float32] */;
  (%427,)
}

def @func_4068(%var_3975: Tensor[(16, 14, 4), float32], %var_3980: int32, %var_3981: Tensor[(2, 648), int32], %var_3999: Tensor[(16, 14, 4), float32]) -> (Tensor[(?, 4, 3), uint16], int32, Tensor[(2, 648), int32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(16, 14, 4), bool], Tensor[(16, 14, 4), float64]) {
  %428 = cast(%var_3980, dtype="int32") /* ty=int32 */;
  %429 = cast(%var_3981, dtype="int32") /* ty=Tensor[(2, 648), int32] */;
  %430 = reshape(%428, newshape=[]) /* ty=int32 */;
  %431 = reshape(%429, newshape=[9, 9, 16]) /* ty=Tensor[(9, 9, 16), int32] */;
  %432 = @func_1927(%430, %431) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %433 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %434 = cast(%var_3975, dtype="float32") /* ty=Tensor[(16, 14, 4), float32] */;
  %435 = asin(%434) /* ty=Tensor[(16, 14, 4), float32] */;
  %436 = cast(%435, dtype="float32") /* ty=Tensor[(16, 14, 4), float32] */;
  %437 = asinh(%436) /* ty=Tensor[(16, 14, 4), float32] */;
  %438 = cast(%var_3999, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
  %439 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%437, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %442 = logical_and(%440, %441) /* ty=Tensor[(16, 14, 4), bool] */;
  %443 = cast(%442, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
  %444 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%435, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %447 = cast(%442, dtype="float64") /* ty=Tensor[(16, 14, 4), float64] */;
  %448 = %432.1;
  %449 = %433.1;
  %450 = @func_2812() /* ty=Tensor[(11, 13, 4), float32] */;
  %451 = greater_equal(%445, %446) /* ty=Tensor[(16, 14, 4), bool] */;
  %452 = log10(%447) /* ty=Tensor[(16, 14, 4), float64] */;
  (%448, %var_3980, %var_3981, %449, %450, %451, %452)
}

def @func_1231() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  %453 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %454 = cast(meta[relay.Constant][20] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %455 = cast(meta[relay.Constant][21] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %456 = reshape(%454, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %457 = reshape(%455, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %458 = @func_937(%456, %457) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %459 = cast(meta[relay.Constant][20] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %460 = %458.0;
  %461 = cast(%460, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
  %462 = reshape(%459, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %463 = reshape(%461, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %464 = @func_937(%462, %463) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %465 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 13, 4), float32] */, dtype="float64") /* ty=Tensor[(11, 13, 4), float64] */;
  %466 = log10(%465) /* ty=Tensor[(11, 13, 4), float64] */;
  %467 = cast(%466, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %468 = cast(meta[relay.Constant][20] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %469 = cast(meta[relay.Constant][21] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %470 = reshape(%468, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %471 = reshape(%469, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %472 = @func_937(%470, %471) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %473 = cos(%453) /* ty=Tensor[(11, 13, 4), float32] */;
  %474 = %464.0;
  %475 = erf(%467) /* ty=Tensor[(11, 13, 4), float32] */;
  %476 = %472.0;
  (%473, %460, meta[relay.Constant][20] /* ty=Tensor[(10), float32] */, meta[relay.Constant][21] /* ty=Tensor[(390), float32] */, %474, %475, %476)
}

def @func_11605() -> (Tensor[(11, 13, 4), float64],) {
  %477 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  (%477,)
}

def @func_4177() -> (Tensor[(4, 4, 5), float64],) {
  %478 = @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */;
  %479 = %478.0;
  (%479,)
}

def @func_12437(%var_12422: int32) -> (Tensor[(11, 13, 4), float32], Tensor[(1296), bool], Tensor[(20, 4), float32]) {
  %480 = cast(meta[relay.Constant][22] /* ty=Tensor[(1296), int32] */, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %481 = cast(%var_12422, dtype="bool") /* ty=bool */;
  %482 = cast(%var_12422, dtype="int32") /* ty=int32 */;
  %483 = cast(meta[relay.Constant][22] /* ty=Tensor[(1296), int32] */, dtype="int32") /* ty=Tensor[(1296), int32] */;
  %484 = reshape(%482, newshape=[]) /* ty=int32 */;
  %485 = reshape(%483, newshape=[9, 9, 16]) /* ty=Tensor[(9, 9, 16), int32] */;
  %486 = @func_1927(%484, %485) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %487 = %486.4;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %489 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  %490 = logical_or(%480, %481) /* ty=Tensor[(1296), bool] */;
  %491 = atanh(%488) /* ty=Tensor[(20, 4), float32] */;
  (%489, %490, %491)
}

def @func_9481() -> Tensor[(11, 13, 4), float32] {
  %492 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %492.0
}

def @func_8564() -> (int32, Tensor[(11, 13, 4), float32]) {
  %493 = @func_8158() /* ty=(int32, Tensor[(11, 13, 4), float32]) */;
  %494 = %493.0;
  %495 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
  (%494, %495)
}

def @func_7436() -> (int32, Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(11, 5, 8), float32]) {
  %496 = @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */;
  %497 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %498 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %499 = @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */;
  %500 = %496.1;
  %501 = %497.0;
  %502 = %498.1;
  %503 = %499.0;
  (%500, %501, %502, %503)
}

def @func_2243() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %504 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %505 = %504.0;
  %506 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%505, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %510 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %511 = divide(%508, %509) /* ty=Tensor[(11, 13, 4), float32] */;
  %512 = sin(%510) /* ty=Tensor[(11, 13, 4), float32] */;
  (%511, %512)
}

def @func_6222(%var_6213: Tensor[(3, 15, 3), float32]) -> (Tensor[(3, 15, 3), float32], Tensor[(3, 15, 3), bool]) {
  %513 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(3, 15, 3), float32] */;
  %514 = cast(%var_6213, dtype="bool") /* ty=Tensor[(3, 15, 3), bool] */;
  %515 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 3), float32] */, dtype="bool") /* ty=Tensor[(3, 15, 3), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = sqrt(%513) /* ty=Tensor[(3, 15, 3), float32] */;
  %519 = logical_or(%516, %517) /* ty=Tensor[(3, 15, 3), bool] */;
  (%518, %519)
}

def @func_11079() -> (Tensor[(11, 13, 4), float64], Tensor[(13, 3, 10), float64], Tensor[(4, 4, 5), float64]) {
  %520 = @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */;
  %521 = @func_6745() /* ty=(Tensor[(13, 3, 10), bool],) */;
  %522 = %521.0;
  %523 = cast(%522, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
  %524 = cos(%523) /* ty=Tensor[(13, 3, 10), float64] */;
  %525 = cast(%524, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
  %526 = reshape(%525, newshape=[5, 78]) /* ty=Tensor[(5, 78), float32] */;
  %527 = @func_5283(%526) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(10), float32], Tensor[(5, 78), float32]) */;
  %528 = %520.1;
  %529 = %527.0;
  (%528, %524, %529)
}

def @func_8967() -> (Tensor[(11, 13, 4), float32],) {
  %530 = @func_5816() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) */;
  %531 = %530.1;
  (%531,)
}

def @func_5909() -> Tensor[(11, 13, 4), float32] {
  @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_7074() -> Tensor[(13, 3, 10), bool] {
  %532 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %532.1
}

def @func_11648() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(273), float64]) {
  %533 = cast(meta[relay.Constant][25] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %534 = reshape(%533, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %535 = @func_10316(%534) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(273), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) */;
  %536 = @func_11198() /* ty=Tensor[(11, 13, 4), float64] */;
  %537 = %535.4;
  (%536, %537, meta[relay.Constant][25] /* ty=Tensor[(273), float64] */)
}

def @func_12084() -> Tensor[(11, 13, 4), float32] {
  @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_11823() -> (Tensor[(11, 5, 1), float64], Tensor[(4, 4, 5), float64]) {
  %538 = @func_10879() /* ty=(Tensor[(11, 5, 1), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %539 = @func_9984() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %540 = %538.0;
  %541 = %539.2;
  (%540, %541)
}

def @func_9517(%var_9512: Tensor[(135, 1), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(3, 15, 3), float32], Tensor[(135, 1), float32]) {
  %542 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %543 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %544 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %545 = cast(%var_9512, dtype="float32") /* ty=Tensor[(135, 1), float32] */;
  %546 = reshape(%545, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), float32] */;
  %547 = @func_6222(%546) /* ty=(Tensor[(3, 15, 3), float32], Tensor[(3, 15, 3), bool]) */;
  %548 = %542.0;
  %549 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
  %550 = %543.6;
  %551 = %544.0;
  %552 = %547.0;
  (%548, %549, %550, %551, %552, %var_9512)
}

def @func_7017() -> Tensor[(13, 3, 10), bool] {
  @func_5035() /* ty=Tensor[(13, 3, 10), bool] */
}

def @func_7852() -> Tensor[(11, 13, 4), float32] {
  %553 = @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %553.2
}

def @func_3823(%var_3804: Tensor[(390), float32]) -> (Tensor[(11, 13, 4), int16], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(11, 13, 4), float32]) {
  %554 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  %555 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 13, 4), float32] */, dtype="int16") /* ty=Tensor[(11, 13, 4), int16] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="int16") /* ty=Tensor[(11, 13, 4), int16] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %559 = cast(meta[relay.Constant][27] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %560 = cast(%var_3804, dtype="float32") /* ty=Tensor[(390), float32] */;
  %561 = reshape(%559, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %562 = reshape(%560, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %563 = @func_937(%561, %562) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %564 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %565 = right_shift(%557, %558) /* ty=Tensor[(11, 13, 4), int16] */;
  %566 = %563.0;
  %567 = %564.0;
  (%565, %566, meta[relay.Constant][27] /* ty=Tensor[(10), float32] */, %var_3804, %567)
}

def @func_3764() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  %568 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %569 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  %570 = %568.4;
  (%569, %570)
}

def @func_9546(%var_9540: Tensor[(10, 9, 10), float32]) -> (Tensor[(10, 9, 10), float32],) {
  %571 = cast(%var_9540, dtype="float32") /* ty=Tensor[(10, 9, 10), float32] */;
  %572 = sigmoid(%571) /* ty=Tensor[(10, 9, 10), float32] */;
  (%572,)
}

def @func_7582(%var_7558: Tensor[(1, 3, 16), float64]) -> (Tensor[(1, 3, 16), float64], Tensor[(11, 13, 4), float32]) {
  %573 = cast(%var_7558, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
  %574 = rsqrt(%573) /* ty=Tensor[(1, 3, 16), float64] */;
  %575 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
  (%574, %575)
}

def @func_11114() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint8], Tensor[(4, 4, 5), float32]) {
  %576 = @func_5637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) */;
  %577 = @func_3167() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */;
  %578 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %579 = %576.0;
  %580 = %577.4;
  %581 = %578.1;
  (%579, %580, %581)
}

def @func_3287(%var_3240: Tensor[(13, 3, 7), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(13, 3, 7), float32]) {
  %582 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %583 = cast(%var_3240, dtype="float64") /* ty=Tensor[(13, 3, 7), float64] */;
  %584 = rsqrt(%583) /* ty=Tensor[(13, 3, 7), float64] */;
  %585 = cast(%var_3240, dtype="uint64") /* ty=Tensor[(13, 3, 7), uint64] */;
  %586 = shape_of(%584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%584, dtype="uint64") /* ty=Tensor[(13, 3, 7), uint64] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %589 = cast(%584, dtype="float32") /* ty=Tensor[(13, 3, 7), float32] */;
  %590 = %582.1;
  %591 = bitwise_or(%587, %588) /* ty=Tensor[(13, 3, 7), uint64] */;
  %592 = acosh(%589) /* ty=Tensor[(13, 3, 7), float32] */;
  (%590, %591, %592)
}

def @func_11264() -> (Tensor[(11, 13, 4), float32],) {
  %593 = @func_10637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %594 = %593.1;
  (%594,)
}

def @func_2086() -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) {
  %595 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %596 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %597 = %596.0;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(11, 13, 4), float64] */;
  %599 = %595.1;
  %600 = acosh(%598) /* ty=Tensor[(11, 13, 4), float64] */;
  (%599, %600)
}

def @func_11893() -> Tensor[(11, 13, 4), float32] {
  %601 = @func_11227() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %601.0
}

def @func_7248() -> Tensor[(11, 13, 4), float32] {
  %602 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %602.0
}

def @func_11309() -> (Tensor[(11, 13, 4), float32],) {
  %603 = @func_5909() /* ty=Tensor[(11, 13, 4), float32] */;
  (%603,)
}

def @func_7828() -> (Tensor[(12), float32],) {
  %604 = @func_2994() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */;
  %605 = %604.2;
  (%605,)
}

def @func_5035() -> Tensor[(13, 3, 10), bool] {
  %606 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %606.1
}

def @func_11882() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
  %607 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %608 = @func_11823() /* ty=(Tensor[(11, 5, 1), float64], Tensor[(4, 4, 5), float64]) */;
  %609 = @func_11676() /* ty=Tensor[(11, 13, 4), float32] */;
  %610 = %607.0;
  %611 = %608.1;
  (%609, %610, %611)
}

def @func_2510(%var_2473: Tensor[(5, 12, 13), float64], %var_2474: Tensor[(5, 12, 13), float64]) -> (Tensor[(5, 12, 13), float64], Tensor[(11, 13, 4), float32]) {
  %612 = cast(%var_2474, dtype="float64") /* ty=Tensor[(5, 12, 13), float64] */;
  %613 = shape_of(%var_2473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%var_2473, dtype="float64") /* ty=Tensor[(5, 12, 13), float64] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %616 = floor_divide(%614, %615) /* ty=Tensor[(5, 12, 13), float64] */;
  %617 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  (%616, %617)
}

def @func_5741(%var_5739: Tensor[(160, 1), float32]) -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(160, 1), float32]) {
  %618 = @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */;
  %619 = @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %620 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %621 = @func_5146() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %622 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %623 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %624 = reshape(%623, newshape=[]) /* ty=int32 */;
  %625 = @func_4247(%624) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(4, 4, 5), float64], int32, Tensor[(1296), int32], Tensor[(11, 13, 4), float32], Tensor[(?, 9, 7), bool]) */;
  %626 = @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %627 = cast(%var_5739, dtype="float32") /* ty=Tensor[(160, 1), float32] */;
  %628 = reshape(%627, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float32] */;
  %629 = @func_1813(%628) /* ty=(Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) */;
  %630 = %618.4;
  %631 = %619.0;
  %632 = %620.0;
  %633 = %621.0;
  %634 = %622.1;
  %635 = %625.4;
  %636 = %626.0;
  %637 = %629.1;
  (%630, %631, %632, %633, %634, %635, 9 /* ty=int32 */, %636, %637, %var_5739)
}

def @func_7402() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), int64], Tensor[(13, 3, 10), bool]) {
  %638 = @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %639 = @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */;
  %640 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %641 = @func_4269() /* ty=Tensor[(11, 13, 4), float32] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %643 = reshape(%642, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %644 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %645 = %638.0;
  %646 = %639.0;
  %647 = @func_2812() /* ty=Tensor[(11, 13, 4), float32] */;
  %648 = %640.0;
  %649 = @func_3911(%643) /* ty=Tensor[(11, 13, 4), int64] */;
  %650 = %644.6;
  (%645, %646, %641, %647, %648, %649, %650)
}

def @func_10528(%var_10509: Tensor[(14, 3, 4), float32], %var_10526: Tensor[(390, 1), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(1, 10), float32], Tensor[(390, 1), float32]) {
  %651 = cast(%var_10509, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  %652 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 10), float32] */;
  %653 = cast(%var_10526, dtype="float32") /* ty=Tensor[(390, 1), float32] */;
  %654 = reshape(%652, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %655 = reshape(%653, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %656 = @func_937(%654, %655) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %657 = acos(%651) /* ty=Tensor[(14, 3, 4), float32] */;
  %658 = %656.0;
  (%657, %658, meta[relay.Constant][28] /* ty=Tensor[(1, 10), float32] */, %var_10526)
}

def @func_528(%var_515: Tensor[(1, 4, 3), float32]) -> Tensor[(?, 4, 3), uint16] {
  %659 = cast(%var_515, dtype="float32") /* ty=Tensor[(1, 4, 3), float32] */;
  %660 = cosh(%659) /* ty=Tensor[(1, 4, 3), float32] */;
  %661 = cast(%660, dtype="uint16") /* ty=Tensor[(1, 4, 3), uint16] */;
  %662 = shape_of(%var_515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%var_515, dtype="uint16") /* ty=Tensor[(1, 4, 3), uint16] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  add(%663, %664) /* ty=Tensor[(?, 4, 3), uint16] */
}

def @func_2599() -> (Tensor[(?, 9, 7), bool],) {
  %665 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 7), float32] */;
  %666 = atan(%665) /* ty=Tensor[(1, 9, 7), float32] */;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(1, 9, 7), float32] */;
  %668 = log10(%667) /* ty=Tensor[(1, 9, 7), float32] */;
  %669 = cast(%666, dtype="bool") /* ty=Tensor[(1, 9, 7), bool] */;
  %670 = shape_of(%668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%668, dtype="bool") /* ty=Tensor[(1, 9, 7), bool] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %673 = less_equal(%671, %672) /* ty=Tensor[(?, 9, 7), bool] */;
  (%673,)
}

def @func_9415(%var_9405: Tensor[(9, 13, 15), float32]) -> Tensor[(9, 13, 15), int8] {
  %674 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %675 = shape_of(%var_9405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_9405, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %678 = mod(%676, %677) /* ty=Tensor[(9, 13, 15), float32] */;
  %679 = cast(%678, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %680 = rsqrt(%679) /* ty=Tensor[(9, 13, 15), float32] */;
  %681 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 13, 15), float32] */, dtype="int8") /* ty=Tensor[(9, 13, 15), int8] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%680, dtype="int8") /* ty=Tensor[(9, 13, 15), int8] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%683, %684) /* ty=Tensor[(9, 13, 15), int8] */
}

def @func_5019() -> Tensor[(11, 13, 4), float32] {
  %685 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %685.0
}

def @func_1169(%var_1161: Tensor[(3, 11, 4), uint16]) -> (Tensor[(3, 11, 4), uint16],) {
  %686 = cast(%var_1161, dtype="uint16") /* ty=Tensor[(3, 11, 4), uint16] */;
  %687 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(3, 11, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 11, 4), uint16] */, dtype="uint16") /* ty=Tensor[(3, 11, 4), uint16] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %690 = bitwise_or(%688, %689) /* ty=Tensor[(3, 11, 4), uint16] */;
  (%690,)
}

def @func_11585() -> Tensor[(11, 13, 4), bool] {
  %691 = @func_7307() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) */;
  %691.1
}

def @func_5637() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) {
  %692 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %693 = @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %694 = %692.0;
  %695 = %693.0;
  (%694, %695)
}

def @func_6571() -> Tensor[(11, 13, 4), float64] {
  %696 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %696.0
}

def @func_2382() -> Tensor[(11, 13, 4), float32] {
  %697 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %697.1
}

def @func_11466(%var_11422: Tensor[(4, 4, 5), float64]) -> (Tensor[(4, 4, 5), int16], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), uint32]) {
  %698 = @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */;
  %699 = %698.0;
  %700 = cast(%var_11422, dtype="int16") /* ty=Tensor[(4, 4, 5), int16] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="int16") /* ty=Tensor[(4, 4, 5), int16] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %704 = @func_6593() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %705 = %704.0;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %707 = reshape(%706, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %708 = add(%702, %703) /* ty=Tensor[(4, 4, 5), int16] */;
  %709 = @func_2333(%707) /* ty=Tensor[(11, 13, 4), uint32] */;
  (%708, %705, %709)
}

def @func_9794(%var_9785: Tensor[(273), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(273), float64]) {
  %710 = @func_8658() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %711 = cast(%var_9785, dtype="float64") /* ty=Tensor[(273), float64] */;
  %712 = reshape(%711, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float64] */;
  %713 = @func_3287(%712) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(13, 3, 7), float32]) */;
  %714 = %710.0;
  %715 = %713.0;
  (%714, %715, %var_9785)
}

def @func_6593() -> (Tensor[(11, 13, 4), float64],) {
  %716 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  (%716,)
}

def @func_8658() -> (Tensor[(11, 13, 4), float32],) {
  %717 = @func_7819() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %718 = %717.0;
  (%718,)
}

def @func_9393() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %719 = @func_8275() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
  %720 = @func_5035() /* ty=Tensor[(13, 3, 10), bool] */;
  %721 = %719.1;
  (%720, %721)
}

def @func_12584() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(?, 4, 3), bool], Tensor[(572), float32]) {
  %722 = @func_8083() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */;
  %723 = @func_7436() /* ty=(int32, Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(11, 5, 8), float32]) */;
  %724 = @func_2994() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */;
  %725 = %724.1;
  %726 = cast(%725, dtype="float32") /* ty=Tensor[(?, 4, 3), float32] */;
  %727 = acos(%726) /* ty=Tensor[(?, 4, 3), float32] */;
  %728 = cast(%725, dtype="bool") /* ty=Tensor[(?, 4, 3), bool] */;
  %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%727, dtype="bool") /* ty=Tensor[(?, 4, 3), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %732 = %722.1;
  %733 = %723.2;
  %734 = less_equal(%730, %731) /* ty=Tensor[(?, 4, 3), bool] */;
  %735 = @func_8298() /* ty=Tensor[(572), float32] */;
  (%732, %733, %734, %735)
}

def @func_10812(%var_10795: Tensor[(13, 2, 12), float64], %var_10796: Tensor[(13, 2, 12), float64]) -> (Tensor[(13, 2, 12), float64],) {
  %736 = cast(%var_10796, dtype="float64") /* ty=Tensor[(13, 2, 12), float64] */;
  %737 = shape_of(%var_10795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_10795, dtype="float64") /* ty=Tensor[(13, 2, 12), float64] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %740 = mod(%738, %739) /* ty=Tensor[(13, 2, 12), float64] */;
  (%740,)
}

def @func_9928() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), bool], Tensor[(11, 13, 4), float32]) {
  %741 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %742 = @func_9664() /* ty=(Tensor[(11, 13, 4), bool],) */;
  %743 = %741.5;
  %744 = %742.0;
  %745 = @func_7248() /* ty=Tensor[(11, 13, 4), float32] */;
  (%743, %744, %745)
}

def @func_2103() -> (Tensor[(11, 13, 4), float32],) {
  %746 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %747 = %746.0;
  (%747,)
}

def @func_2812() -> Tensor[(11, 13, 4), float32] {
  @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_1813(%var_1801: Tensor[(10, 2, 8), float32]) -> (Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) {
  %748 = cast(%var_1801, dtype="float32") /* ty=Tensor[(10, 2, 8), float32] */;
  %749 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %750 = erf(%748) /* ty=Tensor[(10, 2, 8), float32] */;
  %751 = %749.0;
  (%750, %751)
}

def @func_3645() -> Tensor[(4, 4, 5), float64] {
  %752 = @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */;
  %753 = %752.4;
  %754 = cast(%753, dtype="float64") /* ty=Tensor[(4, 4, 5), float64] */;
  atanh(%754) /* ty=Tensor[(4, 4, 5), float64] */
}

def @func_6085() -> (Tensor[(4, 4, 5), float64],) {
  %755 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
  %756 = %755.1;
  (%756,)
}

def @func_6775() -> (Tensor[(11, 13, 4), float32],) {
  %757 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
  (%757,)
}

def @func_10217() -> Tensor[(11, 13, 4), float32] {
  @func_8396() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_12183() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %758 = @func_12116() /* ty=Tensor[(13, 3, 10), bool] */;
  %759 = @func_11893() /* ty=Tensor[(11, 13, 4), float32] */;
  (%758, %759)
}

def @func_7781() -> (Tensor[(4, 4, 5), float32],) {
  %760 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %761 = %760.1;
  (%761,)
}

def @func_4247(%var_4227: int32) -> (Tensor[(4, 4, 5), float64], Tensor[(4, 4, 5), float64], int32, Tensor[(1296), int32], Tensor[(11, 13, 4), float32], Tensor[(?, 9, 7), bool]) {
  %762 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
  %763 = cast(%var_4227, dtype="int32") /* ty=int32 */;
  %764 = cast(meta[relay.Constant][32] /* ty=Tensor[(1296), int32] */, dtype="int32") /* ty=Tensor[(1296), int32] */;
  %765 = reshape(%763, newshape=[]) /* ty=int32 */;
  %766 = reshape(%764, newshape=[9, 9, 16]) /* ty=Tensor[(9, 9, 16), int32] */;
  %767 = @func_1927(%765, %766) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %768 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %769 = @func_2599() /* ty=(Tensor[(?, 9, 7), bool],) */;
  %770 = %762.1;
  %771 = %767.8;
  %772 = %768.1;
  %773 = %769.0;
  (%770, %771, %var_4227, meta[relay.Constant][32] /* ty=Tensor[(1296), int32] */, %772, %773)
}

def @func_6044(%var_5979: Tensor[(572), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(6, 216), int32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
  %774 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %775 = cast(%var_5979, dtype="float32") /* ty=Tensor[(572), float32] */;
  %776 = reshape(%775, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %777 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %778 = reshape(%777, newshape=[]) /* ty=int32 */;
  %779 = @func_4366(%778) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(20, 4), float64], int32, Tensor[(6, 216), int32]) */;
  %780 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %781 = @func_4431() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), uint16], Tensor[(3, 44), uint16], Tensor[(11, 13, 4), float32]) */;
  %782 = %774.1;
  %783 = @func_1767(%776) /* ty=Tensor[(11, 13, 4), uint16] */;
  %784 = %779.3;
  %785 = %780.0;
  %786 = %781.3;
  (%782, %783, %var_5979, %784, 9 /* ty=int32 */, %785, %786)
}

def @func_10637() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %787 = @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %788 = @func_5376() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %789 = %787.0;
  %790 = %788.0;
  (%789, %790)
}

def @func_11381() -> Tensor[(11, 13, 4), float64] {
  %791 = @func_6502() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float64]) */;
  %791.1
}

def @func_10779(%var_10768: Tensor[(40, 2), float32]) -> (Tensor[(40, 2), int32], Tensor[(40, 2), bool]) {
  %792 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %793 = %792.2;
  %794 = @func_3645() /* ty=Tensor[(4, 4, 5), float64] */;
  %795 = cast(%794, dtype="int32") /* ty=Tensor[(4, 4, 5), int32] */;
  %796 = shape_of(%793, dtype="int32") /* ty=Tensor[(2), int32] */;
  %797 = cast(%793, dtype="int32") /* ty=Tensor[(40, 2), int32] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %799 = cast(%var_10768, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %800 = shape_of(%793, dtype="int32") /* ty=Tensor[(2), int32] */;
  %801 = cast(%793, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %803 = multiply(%797, %798) /* ty=Tensor[(40, 2), int32] */;
  %804 = not_equal(%801, %802) /* ty=Tensor[(40, 2), bool] */;
  (%803, %804)
}

def @func_12334(%var_12316: float64, %var_12317: Tensor[(16, 16, 6), float64]) -> (Tensor[(16, 16, 6), bool],) {
  %805 = cast(%var_12316, dtype="bool") /* ty=bool */;
  %806 = cast(%var_12317, dtype="bool") /* ty=Tensor[(16, 16, 6), bool] */;
  %807 = less(%805, %806) /* ty=Tensor[(16, 16, 6), bool] */;
  (%807,)
}

def @func_8521() -> (Tensor[(4, 4, 5), bool], Tensor[(11, 13, 4), float32]) {
  %808 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %809 = %808.1;
  %810 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 4, 5), float32] */, dtype="bool") /* ty=Tensor[(4, 4, 5), bool] */;
  %811 = shape_of(%809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(%809, dtype="bool") /* ty=Tensor[(4, 4, 5), bool] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %814 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %815 = equal(%812, %813) /* ty=Tensor[(4, 4, 5), bool] */;
  %816 = %814.1;
  (%815, %816)
}

def @func_12116() -> Tensor[(13, 3, 10), bool] {
  %817 = @func_7221() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), uint32]) */;
  %817.0
}

def @func_6153(%var_6131: Tensor[(16, 15, 11), float64]) -> Tensor[(16, 15, 11), int16] {
  %818 = cast(%var_6131, dtype="float64") /* ty=Tensor[(16, 15, 11), float64] */;
  %819 = atan(%818) /* ty=Tensor[(16, 15, 11), float64] */;
  %820 = cast(%var_6131, dtype="int16") /* ty=Tensor[(16, 15, 11), int16] */;
  %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(%819, dtype="int16") /* ty=Tensor[(16, 15, 11), int16] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%822, %823) /* ty=Tensor[(16, 15, 11), int16] */
}

def @func_2994() -> (Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) {
  %824 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %825 = %824.6;
  %826 = cast(%825, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
  %827 = cast(meta[relay.Constant][34] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %828 = reshape(%827, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float32] */;
  %829 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %830 = asinh(%826) /* ty=Tensor[(13, 3, 10), float64] */;
  %831 = @func_528(%828) /* ty=Tensor[(?, 4, 3), uint16] */;
  %832 = %829.0;
  (%830, %831, meta[relay.Constant][34] /* ty=Tensor[(12), float32] */, %832)
}

def @func_7148() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %833 = @func_7046() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %834 = @func_5146() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %835 = %833.1;
  %836 = @func_7017() /* ty=Tensor[(13, 3, 10), bool] */;
  %837 = %834.1;
  (%835, %836, %837)
}

def @func_4698() -> (Tensor[(11, 13, 4), float32], Tensor[(10, 2, 8), float32], Tensor[(160), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(7, 2, 7), int64]) {
  %838 = cast(meta[relay.Constant][35] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %839 = reshape(%838, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float32] */;
  %840 = @func_1813(%839) /* ty=(Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) */;
  %841 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
  %842 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %843 = %842.0;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %845 = reshape(%844, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %846 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(7, 2, 7), float64] */;
  %847 = exp(%846) /* ty=Tensor[(7, 2, 7), float64] */;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(7, 2, 7), float32] */;
  %849 = tan(%848) /* ty=Tensor[(7, 2, 7), float32] */;
  %850 = cast(%847, dtype="int64") /* ty=Tensor[(7, 2, 7), int64] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%849, dtype="int64") /* ty=Tensor[(7, 2, 7), int64] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %854 = @func_3889() /* ty=Tensor[(11, 13, 4), float32] */;
  %855 = %840.0;
  %856 = %841.1;
  %857 = @func_2333(%845) /* ty=Tensor[(11, 13, 4), uint32] */;
  %858 = left_shift(%852, %853) /* ty=Tensor[(7, 2, 7), int64] */;
  (%854, %855, meta[relay.Constant][35] /* ty=Tensor[(160), float32] */, %856, %843, %857, %858)
}

def @func_10204(%var_10194: Tensor[(160), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32], Tensor[(160), float32]) {
  %859 = @func_4400() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %860 = @func_9481() /* ty=Tensor[(11, 13, 4), float32] */;
  %861 = cast(%860, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %862 = reshape(%861, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %863 = cast(%var_10194, dtype="float32") /* ty=Tensor[(160), float32] */;
  %864 = reshape(%863, newshape=[160, 1]) /* ty=Tensor[(160, 1), float32] */;
  %865 = @func_5741(%864) /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(160, 1), float32]) */;
  %866 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
  %867 = %859.1;
  %868 = @func_2333(%862) /* ty=Tensor[(11, 13, 4), uint32] */;
  %869 = %865.3;
  (%866, %860, %867, %868, %869, %var_10194)
}

def @func_9329() -> Tensor[(11, 13, 4), float32] {
  @func_2812() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_2291() -> Tensor[(11, 13, 4), float32] {
  %870 = @func_2103() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %870.0
}

def @func_6502() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float64]) {
  %871 = @func_5637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) */;
  %872 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %873 = %871.1;
  %874 = %872.0;
  (%873, %874)
}

def @func_9984() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
  %875 = @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %876 = @func_5146() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %877 = @func_4698() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(10, 2, 8), float32], Tensor[(160), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(7, 2, 7), int64]) */;
  %878 = %875.1;
  %879 = %876.0;
  %880 = %877.3;
  (%878, %879, %880)
}

def @func_1640() -> (Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) {
  %881 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %882 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %883 = reshape(%882, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float64] */;
  %884 = @func_798(%883) /* ty=(Tensor[(4, 4, 5), float64],) */;
  %885 = %881.1;
  %886 = %884.0;
  (%885, %886, meta[relay.Constant][37] /* ty=Tensor[(1, 80), float64] */)
}

def @func_2560() -> (Tensor[(11, 13, 4), float32],) {
  %887 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
  (%887,)
}

def @func_12275() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %888 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %889 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %890 = %888.1;
  %891 = %889.0;
  (%890, %891)
}

def @func_5283(%var_5261: Tensor[(5, 78), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(10), float32], Tensor[(5, 78), float32]) {
  %892 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %893 = cast(%var_5261, dtype="float32") /* ty=Tensor[(5, 78), float32] */;
  %894 = reshape(%893, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %895 = @func_3823(%894) /* ty=(Tensor[(11, 13, 4), int16], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(11, 13, 4), float32]) */;
  %896 = %892.1;
  %897 = %895.2;
  (%896, %897, %var_5261)
}

def @func_4522(%var_4509: Tensor[(390), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), int16], Tensor[(390), float32]) {
  %898 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
  %899 = cast(%var_4509, dtype="float32") /* ty=Tensor[(390), float32] */;
  %900 = reshape(%899, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %901 = @func_3823(%900) /* ty=(Tensor[(11, 13, 4), int16], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(11, 13, 4), float32]) */;
  %902 = %898.1;
  %903 = %901.0;
  (%902, %903, %var_4509)
}

def @func_2700() -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) {
  %904 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %905 = %904.1;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(4, 4, 5), float32] */;
  %907 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %908 = log(%906) /* ty=Tensor[(4, 4, 5), float32] */;
  %909 = %907.0;
  (%908, %909)
}

def @func_11168() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %910 = @func_3889() /* ty=Tensor[(11, 13, 4), float32] */;
  %911 = @func_9481() /* ty=Tensor[(11, 13, 4), float32] */;
  (%910, %911)
}

def @func_3086() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) {
  %912 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %913 = @func_2994() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */;
  %914 = @func_2103() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %915 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %916 = @func_2955() /* ty=Tensor[(11, 13, 4), float32] */;
  %917 = %912.0;
  %918 = %913.3;
  %919 = %914.0;
  %920 = %915.1;
  (%916, %917, %918, %919, %920)
}

def @func_6915() -> (Tensor[(11, 13, 4), float32],) {
  %921 = @func_2812() /* ty=Tensor[(11, 13, 4), float32] */;
  (%921,)
}

def @func_1797() -> (Tensor[(11, 13, 4), float32],) {
  %922 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %923 = %922.5;
  (%923,)
}

def @func_11227() -> (Tensor[(11, 13, 4), float32],) {
  %924 = @func_2994() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */;
  %925 = %924.3;
  (%925,)
}

def @func_9364() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %926 = @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %927 = @func_7819() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %928 = @func_7876() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %929 = %926.0;
  %930 = %927.1;
  %931 = %928.0;
  (%929, %930, %931)
}

def @func_7819() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %932 = @func_5522() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %933 = @func_7648() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %934 = %932.0;
  %935 = %933.0;
  (%934, %935)
}

def @func_9527() -> (Tensor[(4, 4, 5), float64],) {
  %936 = @func_6085() /* ty=(Tensor[(4, 4, 5), float64],) */;
  %937 = %936.0;
  (%937,)
}

def @func_8083() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
  %938 = @func_5816() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) */;
  %939 = @func_7862() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(10), float32]) */;
  %940 = %938.0;
  %941 = %939.0;
  (%940, %941)
}

def @func_11370() -> (Tensor[(11, 13, 4), float64],) {
  %942 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  (%942,)
}

def @func_7862() -> (Tensor[(11, 13, 4), float32], Tensor[(10), float32]) {
  %943 = @func_7148() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
  %944 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %945 = %943.0;
  %946 = %944.2;
  (%945, %946)
}

def @func_8711() -> Tensor[(11, 13, 4), float32] {
  %947 = @func_8658() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %947.0
}

def @func_7307() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) {
  %948 = cast(meta[relay.Constant][38] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %949 = reshape(%948, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %950 = @func_7074() /* ty=Tensor[(13, 3, 10), bool] */;
  %951 = @func_4093(%949) /* ty=Tensor[(11, 13, 4), bool] */;
  (%950, %951, meta[relay.Constant][38] /* ty=Tensor[(572), float32] */)
}

def @func_7876() -> (Tensor[(11, 13, 4), float32],) {
  %952 = @func_4886() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), bool], Tensor[(3, 11, 4), int16], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %953 = %952.1;
  (%953,)
}

def @func_5522() -> (Tensor[(11, 13, 4), float32],) {
  %954 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %955 = %954.0;
  (%955,)
}

def @func_8158() -> (int32, Tensor[(11, 13, 4), float32]) {
  %956 = @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */;
  %957 = @func_4731() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
  %958 = %956.1;
  %959 = %957.1;
  (%958, %959)
}

def @func_5336() -> Tensor[(11, 13, 4), float64] {
  %960 = @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %960.0
}

def @func_5234(%var_5225: Tensor[(13, 14, 14), float64]) -> Tensor[(13, 14, 14), float64] {
  %961 = cast(%var_5225, dtype="float64") /* ty=Tensor[(13, 14, 14), float64] */;
  sqrt(%961) /* ty=Tensor[(13, 14, 14), float64] */
}

def @func_6987(%var_6918: Tensor[(5, 13, 14), float64], %var_6934: Tensor[(5, 13, 14), float64]) -> (Tensor[(5, 13, 14), uint32], Tensor[(11, 13, 4), uint16], Tensor[(572, 1), float32], Tensor[(11, 13, 4), int16], Tensor[(390, 1), float32]) {
  %962 = cast(%var_6918, dtype="float64") /* ty=Tensor[(5, 13, 14), float64] */;
  %963 = sigmoid(%962) /* ty=Tensor[(5, 13, 14), float64] */;
  %964 = cast(%var_6934, dtype="uint32") /* ty=Tensor[(5, 13, 14), uint32] */;
  %965 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%963, dtype="uint32") /* ty=Tensor[(5, 13, 14), uint32] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %968 = cast(meta[relay.Constant][39] /* ty=Tensor[(572, 1), float32] */, dtype="float32") /* ty=Tensor[(572, 1), float32] */;
  %969 = reshape(%968, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %970 = cast(meta[relay.Constant][40] /* ty=Tensor[(390, 1), float32] */, dtype="float32") /* ty=Tensor[(390, 1), float32] */;
  %971 = reshape(%970, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %972 = @func_4522(%971) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), int16], Tensor[(390), float32]) */;
  %973 = maximum(%966, %967) /* ty=Tensor[(5, 13, 14), uint32] */;
  %974 = @func_1767(%969) /* ty=Tensor[(11, 13, 4), uint16] */;
  %975 = %972.1;
  (%973, %974, meta[relay.Constant][39] /* ty=Tensor[(572, 1), float32] */, %975, meta[relay.Constant][40] /* ty=Tensor[(390, 1), float32] */)
}

def @func_9071() -> (Tensor[(11, 13, 4), float32],) {
  %976 = @func_3889() /* ty=Tensor[(11, 13, 4), float32] */;
  (%976,)
}

def @func_6803() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  %977 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %978 = %977.0;
  %979 = @func_5035() /* ty=Tensor[(13, 3, 10), bool] */;
  (%978, %979)
}

def @func_4206() -> (Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) {
  %980 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %981 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %982 = %980.0;
  %983 = @func_3645() /* ty=Tensor[(4, 4, 5), float64] */;
  %984 = %981.1;
  (%982, %983, %984)
}

def @func_4366(%var_4317: int32) -> (Tensor[(11, 13, 4), float32], Tensor[(20, 4), float64], int32, Tensor[(6, 216), int32]) {
  %985 = @func_3167() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */;
  %986 = cast(%var_4317, dtype="int32") /* ty=int32 */;
  %987 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 216), int32] */, dtype="int32") /* ty=Tensor[(6, 216), int32] */;
  %988 = reshape(%986, newshape=[]) /* ty=int32 */;
  %989 = reshape(%987, newshape=[9, 9, 16]) /* ty=Tensor[(9, 9, 16), int32] */;
  %990 = @func_1927(%988, %989) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %991 = %985.1;
  %992 = %990.4;
  (%991, %992, %var_4317, meta[relay.Constant][41] /* ty=Tensor[(6, 216), int32] */)
}

def @func_9774() -> Tensor[(11, 13, 4), float32] {
  %993 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %993.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5639() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) {
  @func_5637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) */
}

def @func_801(%var_799: Tensor[(4, 4, 5), float64]) -> (Tensor[(4, 4, 5), float64],) {
  @func_798(%var_799) /* ty=(Tensor[(4, 4, 5), float64],) */
}

def @func_9985() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
  %6 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
    %0 = @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %1 = @func_5146() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %2 = @func_4698() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(10, 2, 8), float32], Tensor[(160), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(7, 2, 7), int64]) */;
    %3 = %0.1;
    %4 = %1.0;
    %5 = %2.3;
    (%3, %4, %5)
  };
  %6() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */
}

def @func_11033() -> int32 {
  @func_11031() /* ty=int32 */
}

def @func_11229() -> (Tensor[(11, 13, 4), float32],) {
  @func_11227() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_11372() -> (Tensor[(11, 13, 4), float64],) {
  @func_11370() /* ty=(Tensor[(11, 13, 4), float64],) */
}

def @func_8565() -> (int32, Tensor[(11, 13, 4), float32]) {
  %10 = fn () -> (int32, Tensor[(11, 13, 4), float32]) {
    %7 = @func_8158() /* ty=(int32, Tensor[(11, 13, 4), float32]) */;
    %8 = %7.0;
    %9 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
    (%8, %9)
  };
  %10() /* ty=(int32, Tensor[(11, 13, 4), float32]) */
}

def @func_12084() -> Tensor[(11, 13, 4), float32] {
  @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_4401() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %16 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %11 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %12 = %11.0;
    %13 = cast(%12, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %14 = @func_4269() /* ty=Tensor[(11, 13, 4), float32] */;
    %15 = sqrt(%13) /* ty=Tensor[(11, 13, 4), float32] */;
    (%14, %15)
  };
  %16() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_9703() -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64]) {
  %17 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %18 = @func_6593() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %19 = %17.0;
  %20 = %18.0;
  (%19, %20)
}

def @func_7781() -> (Tensor[(4, 4, 5), float32],) {
  %21 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %22 = %21.1;
  (%22,)
}

def @func_5505(%var_5503: Tensor[(390), float32], %var_5504: Tensor[(13, 3, 10), bool]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool]) {
  @func_5501(%var_5503, %var_5504) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool]) */
}

def @func_5338() -> Tensor[(11, 13, 4), float64] {
  @func_5336() /* ty=Tensor[(11, 13, 4), float64] */
}

def @func_9527() -> (Tensor[(4, 4, 5), float64],) {
  %23 = @func_6085() /* ty=(Tensor[(4, 4, 5), float64],) */;
  %24 = %23.0;
  (%24,)
}

def @func_10217() -> Tensor[(11, 13, 4), float32] {
  @func_8396() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_2995() -> (Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) {
  %34 = fn () -> (Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) {
    %25 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %26 = %25.6;
    %27 = cast(%26, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
    %28 = cast(meta[relay.Constant][0] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %29 = reshape(%28, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float32] */;
    %30 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %31 = asinh(%27) /* ty=Tensor[(13, 3, 10), float64] */;
    %32 = @func_528(%29) /* ty=Tensor[(?, 4, 3), uint16] */;
    %33 = %30.0;
    (%31, %32, meta[relay.Constant][0] /* ty=Tensor[(12), float32] */, %33)
  };
  %34() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_11677() -> Tensor[(11, 13, 4), float32] {
  %36 = fn () -> Tensor[(11, 13, 4), float32] {
    %35 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %35.0
  };
  %36() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_8193(%var_8168: Tensor[(13, 11, 6), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 11, 6), bool]) {
  %37 = @func_5146() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %38 = @func_3167() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */;
  %39 = cast(%var_8168, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
  %40 = rsqrt(%39) /* ty=Tensor[(13, 11, 6), float64] */;
  %41 = cast(%var_8168, dtype="bool") /* ty=Tensor[(13, 11, 6), bool] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="bool") /* ty=Tensor[(13, 11, 6), bool] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %45 = %37.0;
  %46 = %38.1;
  %47 = greater_equal(%43, %44) /* ty=Tensor[(13, 11, 6), bool] */;
  (%45, %46, %47)
}

def @func_4740() -> Tensor[(11, 13, 4), float32] {
  %49 = fn () -> Tensor[(11, 13, 4), float32] {
    %48 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %48.0
  };
  %49() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_3645() -> Tensor[(4, 4, 5), float64] {
  %50 = @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */;
  %51 = %50.4;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(4, 4, 5), float64] */;
  atanh(%52) /* ty=Tensor[(4, 4, 5), float64] */
}

def @func_7878() -> (Tensor[(11, 13, 4), float32],) {
  @func_7876() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_7649() -> (Tensor[(11, 13, 4), float32],) {
  %55 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %53 = @func_6915() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %54 = %53.0;
    (%54,)
  };
  %55() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_12277() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  @func_12275() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_7223() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), uint32]) {
  @func_7221() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), uint32]) */
}

def @func_11909() -> Tensor[(11, 13, 4), float32] {
  %56 = @func_9128() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %56.1
}

def @func_5236(%var_5235: Tensor[(13, 14, 14), float64]) -> Tensor[(13, 14, 14), float64] {
  %58 = fn (%var_5225: Tensor[(13, 14, 14), float64]) -> Tensor[(13, 14, 14), float64] {
    %57 = cast(%var_5225, dtype="float64") /* ty=Tensor[(13, 14, 14), float64] */;
    sqrt(%57) /* ty=Tensor[(13, 14, 14), float64] */
  };
  %58(%var_5235) /* ty=Tensor[(13, 14, 14), float64] */
}

def @func_8658() -> (Tensor[(11, 13, 4), float32],) {
  %59 = @func_7819() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %60 = %59.0;
  (%60,)
}

def @func_2025() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %61 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %62 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %63 = %61.0;
  %64 = %62.0;
  (%63, %64)
}

def @func_12395(%var_12393: Tensor[(1, 10, 14), bool], %var_12394: Tensor[(2, 10, 14), bool]) -> (Tensor[(2, 10, 14), float32],) {
  %71 = fn (%var_12381: Tensor[(1, 10, 14), bool], %var_12382: Tensor[(2, 10, 14), bool]) -> (Tensor[(2, 10, 14), float32],) {
    %65 = cast(%var_12381, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
    %66 = cast(%var_12382, dtype="bool") /* ty=Tensor[(2, 10, 14), bool] */;
    %67 = logical_or(%65, %66) /* ty=Tensor[(2, 10, 14), bool] */;
    %68 = cast(%var_12381, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
    %69 = cast(%67, dtype="float32") /* ty=Tensor[(2, 10, 14), float32] */;
    %70 = floor_mod(%68, %69) /* ty=Tensor[(2, 10, 14), float32] */;
    (%70,)
  };
  %71(%var_12393, %var_12394) /* ty=(Tensor[(2, 10, 14), float32],) */
}

def @func_5021() -> Tensor[(11, 13, 4), float32] {
  @func_5019() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_9666() -> (Tensor[(11, 13, 4), bool],) {
  @func_9664() /* ty=(Tensor[(11, 13, 4), bool],) */
}

def @func_2088() -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) {
  @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */
}

def @func_9330() -> Tensor[(11, 13, 4), float32] {
  %72 = fn () -> Tensor[(11, 13, 4), float32] {
    @func_2812() /* ty=Tensor[(11, 13, 4), float32] */
  };
  %72() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_2335(%var_2334: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), uint32] {
  %79 = fn (%var_2323: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), uint32] {
    %73 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %74 = %73.0;
    %75 = cast(%var_2323, dtype="uint32") /* ty=Tensor[(11, 13, 4), uint32] */;
    %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
    %77 = cast(%74, dtype="uint32") /* ty=Tensor[(11, 13, 4), uint32] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    add(%77, %78) /* ty=Tensor[(11, 13, 4), uint32] */
  };
  %79(%var_2334) /* ty=Tensor[(11, 13, 4), uint32] */
}

def @func_4269() -> Tensor[(11, 13, 4), float32] {
  %80 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %80.0
}

def @func_2885() -> (Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) {
  @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */
}

def @func_8711() -> Tensor[(11, 13, 4), float32] {
  %81 = @func_8658() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %81.0
}

def @func_8299() -> Tensor[(572), float32] {
  %83 = fn () -> Tensor[(572), float32] {
    %82 = @func_7307() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) */;
    %82.2
  };
  %83() /* ty=Tensor[(572), float32] */
}

def @func_9250(%var_9248: Tensor[(858), float64]) -> (Tensor[(11, 13, 4), bool], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(6, 16, 9), int64], Tensor[(160, 1), float32], Tensor[(160), float32], Tensor[(858), float32], Tensor[(858), float64]) {
  @func_9247(%var_9248) /* ty=(Tensor[(11, 13, 4), bool], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(6, 16, 9), int64], Tensor[(160, 1), float32], Tensor[(160), float32], Tensor[(858), float32], Tensor[(858), float64]) */
}

def @func_11382() -> Tensor[(11, 13, 4), float64] {
  %85 = fn () -> Tensor[(11, 13, 4), float64] {
    %84 = @func_6502() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float64]) */;
    %84.1
  };
  %85() /* ty=Tensor[(11, 13, 4), float64] */
}

def @func_11265() -> (Tensor[(11, 13, 4), float32],) {
  %88 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %86 = @func_10637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %87 = %86.1;
    (%87,)
  };
  %88() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_9774() -> Tensor[(11, 13, 4), float32] {
  %89 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %89.0
}

def @func_1641() -> (Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) {
  %96 = fn () -> (Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) {
    %90 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %91 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
    %92 = reshape(%91, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float64] */;
    %93 = @func_798(%92) /* ty=(Tensor[(4, 4, 5), float64],) */;
    %94 = %90.1;
    %95 = %93.0;
    (%94, %95, meta[relay.Constant][1] /* ty=Tensor[(1, 80), float64] */)
  };
  %96() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */
}

def @func_1769(%var_1768: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), uint16] {
  %103 = fn (%var_1737: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), uint16] {
    %97 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %98 = %97.0;
    %99 = cast(%var_1737, dtype="uint16") /* ty=Tensor[(11, 13, 4), uint16] */;
    %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
    %101 = cast(%98, dtype="uint16") /* ty=Tensor[(11, 13, 4), uint16] */;
    %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    logical_xor(%101, %102) /* ty=Tensor[(11, 13, 4), uint16] */
  };
  %103(%var_1768) /* ty=Tensor[(11, 13, 4), uint16] */
}

def @func_3939() -> (Tensor[(11, 13, 4), float32],) {
  %106 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %104 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
    %105 = %104.0;
    (%105,)
  };
  %106() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_9128() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %107 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %108 = @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %109 = %107.0;
  %110 = %108.3;
  (%109, %110)
}

def @func_2812() -> Tensor[(11, 13, 4), float32] {
  @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_5376() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %111 = @func_5019() /* ty=Tensor[(11, 13, 4), float32] */;
  %112 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  (%111, %112)
}

def @func_530(%var_529: Tensor[(1, 4, 3), float32]) -> Tensor[(?, 4, 3), uint16] {
  %119 = fn (%var_515: Tensor[(1, 4, 3), float32]) -> Tensor[(?, 4, 3), uint16] {
    %113 = cast(%var_515, dtype="float32") /* ty=Tensor[(1, 4, 3), float32] */;
    %114 = cosh(%113) /* ty=Tensor[(1, 4, 3), float32] */;
    %115 = cast(%114, dtype="uint16") /* ty=Tensor[(1, 4, 3), uint16] */;
    %116 = shape_of(%var_515, dtype="int32") /* ty=Tensor[(3), int32] */;
    %117 = cast(%var_515, dtype="uint16") /* ty=Tensor[(1, 4, 3), uint16] */;
    %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    add(%117, %118) /* ty=Tensor[(?, 4, 3), uint16] */
  };
  %119(%var_529) /* ty=Tensor[(?, 4, 3), uint16] */
}

def @func_5019() -> Tensor[(11, 13, 4), float32] {
  %120 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %120.0
}

def @func_4700() -> (Tensor[(11, 13, 4), float32], Tensor[(10, 2, 8), float32], Tensor[(160), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(7, 2, 7), int64]) {
  @func_4698() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(10, 2, 8), float32], Tensor[(160), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(7, 2, 7), int64]) */
}

def @func_7862() -> (Tensor[(11, 13, 4), float32], Tensor[(10), float32]) {
  %121 = @func_7148() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
  %122 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %123 = %121.0;
  %124 = %122.2;
  (%123, %124)
}

def @func_5921() -> (Tensor[(11, 5, 8), float32], int32) {
  %125 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %126 = @func_5006() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(20, 4), float64], int32) */;
  %127 = exp(%125) /* ty=Tensor[(11, 5, 8), float32] */;
  %128 = %126.3;
  (%127, %128)
}

def @func_7307() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) {
  %129 = cast(meta[relay.Constant][3] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %130 = reshape(%129, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %131 = @func_7074() /* ty=Tensor[(13, 3, 10), bool] */;
  %132 = @func_4093(%130) /* ty=Tensor[(11, 13, 4), bool] */;
  (%131, %132, meta[relay.Constant][3] /* ty=Tensor[(572), float32] */)
}

def @func_2599() -> (Tensor[(?, 9, 7), bool],) {
  %133 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 7), float32] */;
  %134 = atan(%133) /* ty=Tensor[(1, 9, 7), float32] */;
  %135 = cast(%134, dtype="float32") /* ty=Tensor[(1, 9, 7), float32] */;
  %136 = log10(%135) /* ty=Tensor[(1, 9, 7), float32] */;
  %137 = cast(%134, dtype="bool") /* ty=Tensor[(1, 9, 7), bool] */;
  %138 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%136, dtype="bool") /* ty=Tensor[(1, 9, 7), bool] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %141 = less_equal(%139, %140) /* ty=Tensor[(?, 9, 7), bool] */;
  (%141,)
}

def @func_5286(%var_5284: Tensor[(5, 78), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(10), float32], Tensor[(5, 78), float32]) {
  @func_5283(%var_5284) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(10), float32], Tensor[(5, 78), float32]) */
}

def @func_7854() -> Tensor[(11, 13, 4), float32] {
  @func_7852() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_2086() -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) {
  %142 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %143 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %144 = %143.0;
  %145 = cast(%144, dtype="float64") /* ty=Tensor[(11, 13, 4), float64] */;
  %146 = %142.1;
  %147 = acosh(%145) /* ty=Tensor[(11, 13, 4), float64] */;
  (%146, %147)
}

def @func_6915() -> (Tensor[(11, 13, 4), float32],) {
  %148 = @func_2812() /* ty=Tensor[(11, 13, 4), float32] */;
  (%148,)
}

def @func_8196(%var_8194: Tensor[(13, 11, 6), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 11, 6), bool]) {
  @func_8193(%var_8194) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 11, 6), bool]) */
}

def @func_9482() -> Tensor[(11, 13, 4), float32] {
  %150 = fn () -> Tensor[(11, 13, 4), float32] {
    %149 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %149.0
  };
  %150() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_11893() -> Tensor[(11, 13, 4), float32] {
  %151 = @func_11227() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %151.0
}

def @func_5522() -> (Tensor[(11, 13, 4), float32],) {
  %152 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %153 = %152.0;
  (%153,)
}

def @func_6776() -> (Tensor[(11, 13, 4), float32],) {
  %155 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %154 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
    (%154,)
  };
  %155() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_2560() -> (Tensor[(11, 13, 4), float32],) {
  %156 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
  (%156,)
}

def @func_3289(%var_3288: Tensor[(13, 3, 7), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(13, 3, 7), float32]) {
  %168 = fn (%var_3240: Tensor[(13, 3, 7), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(13, 3, 7), float32]) {
    %157 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %158 = cast(%var_3240, dtype="float64") /* ty=Tensor[(13, 3, 7), float64] */;
    %159 = rsqrt(%158) /* ty=Tensor[(13, 3, 7), float64] */;
    %160 = cast(%var_3240, dtype="uint64") /* ty=Tensor[(13, 3, 7), uint64] */;
    %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
    %162 = cast(%159, dtype="uint64") /* ty=Tensor[(13, 3, 7), uint64] */;
    %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %164 = cast(%159, dtype="float32") /* ty=Tensor[(13, 3, 7), float32] */;
    %165 = %157.1;
    %166 = bitwise_or(%162, %163) /* ty=Tensor[(13, 3, 7), uint64] */;
    %167 = acosh(%164) /* ty=Tensor[(13, 3, 7), float32] */;
    (%165, %166, %167)
  };
  %168(%var_3288) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(13, 3, 7), float32]) */
}

def @func_6803() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  %169 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %170 = %169.0;
  %171 = @func_5035() /* ty=Tensor[(13, 3, 10), bool] */;
  (%170, %171)
}

def @func_10318(%var_10317: Tensor[(273), float64]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(273), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) {
  %184 = fn (%var_10290: Tensor[(273), float64]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(273), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) {
    %172 = @func_4177() /* ty=(Tensor[(4, 4, 5), float64],) */;
    %173 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
    %174 = cast(%173, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %175 = cast(%var_10290, dtype="float64") /* ty=Tensor[(273), float64] */;
    %176 = reshape(%175, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float64] */;
    %177 = @func_3287(%176) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(13, 3, 7), float32]) */;
    %178 = @func_6502() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float64]) */;
    %179 = %172.0;
    %180 = asin(%174) /* ty=Tensor[(11, 13, 4), float32] */;
    %181 = %177.1;
    %182 = @func_8396() /* ty=Tensor[(11, 13, 4), float32] */;
    %183 = %178.0;
    (%179, %180, %181, %var_10290, %182, %183)
  };
  %184(%var_10317) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(273), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) */
}

def @func_9776() -> Tensor[(11, 13, 4), float32] {
  @func_9774() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_6687() -> Tensor[(11, 13, 4), float32] {
  %185 = fn () -> Tensor[(11, 13, 4), float32] {
    @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
  };
  %185() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_11605() -> (Tensor[(11, 13, 4), float64],) {
  %186 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  (%186,)
}

def @func_2453() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  %193 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
    %187 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %188 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %189 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
    %190 = %187.0;
    %191 = %188.0;
    %192 = %189.0;
    (%190, %191, %192)
  };
  %193() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */
}

def @func_10976() -> Tensor[(13, 3, 10), bool] {
  @func_10974() /* ty=Tensor[(13, 3, 10), bool] */
}

def @func_6222(%var_6213: Tensor[(3, 15, 3), float32]) -> (Tensor[(3, 15, 3), float32], Tensor[(3, 15, 3), bool]) {
  %194 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(3, 15, 3), float32] */;
  %195 = cast(%var_6213, dtype="bool") /* ty=Tensor[(3, 15, 3), bool] */;
  %196 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(3, 15, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 15, 3), float32] */, dtype="bool") /* ty=Tensor[(3, 15, 3), bool] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %199 = sqrt(%194) /* ty=Tensor[(3, 15, 3), float32] */;
  %200 = logical_or(%197, %198) /* ty=Tensor[(3, 15, 3), bool] */;
  (%199, %200)
}

def @main() -> (Tensor[(11, 13, 4), float32],) {
  %201 = @func_11676() /* ty=Tensor[(11, 13, 4), float32] */;
  %202 = cast(%201, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %203 = tan(%202) /* ty=Tensor[(11, 13, 4), float32] */;
  (%203,)
}

def @func_11648() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(273), float64]) {
  %204 = cast(meta[relay.Constant][6] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %205 = reshape(%204, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %206 = @func_10316(%205) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(273), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) */;
  %207 = @func_11198() /* ty=Tensor[(11, 13, 4), float64] */;
  %208 = %206.4;
  (%207, %208, meta[relay.Constant][6] /* ty=Tensor[(273), float64] */)
}

def @func_12529(%var_12527: Tensor[(160), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(160), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
  @func_12526(%var_12527) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(160), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */
}

def @func_7075() -> Tensor[(13, 3, 10), bool] {
  %210 = fn () -> Tensor[(13, 3, 10), bool] {
    %209 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %209.1
  };
  %210() /* ty=Tensor[(13, 3, 10), bool] */
}

def @func_4732() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %215 = fn () -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
    %211 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
    %212 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %213 = %211.0;
    %214 = %212.0;
    (%213, %214)
  };
  %215() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */
}

def @func_10928() -> (Tensor[(11, 13, 4), float64],) {
  @func_10926() /* ty=(Tensor[(11, 13, 4), float64],) */
}

def @func_4178() -> (Tensor[(4, 4, 5), float64],) {
  %218 = fn () -> (Tensor[(4, 4, 5), float64],) {
    %216 = @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */;
    %217 = %216.0;
    (%217,)
  };
  %218() /* ty=(Tensor[(4, 4, 5), float64],) */
}

def @func_6086() -> (Tensor[(4, 4, 5), float64],) {
  %221 = fn () -> (Tensor[(4, 4, 5), float64],) {
    %219 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
    %220 = %219.1;
    (%220,)
  };
  %221() /* ty=(Tensor[(4, 4, 5), float64],) */
}

def @func_2027() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_7221() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), uint32]) {
  %222 = @func_5816() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) */;
  %223 = @func_7017() /* ty=Tensor[(13, 3, 10), bool] */;
  %224 = %222.2;
  (%223, %224)
}

def @func_12337(%var_12335: float64, %var_12336: Tensor[(16, 16, 6), float64]) -> (Tensor[(16, 16, 6), bool],) {
  %228 = fn (%var_12316: float64, %var_12317: Tensor[(16, 16, 6), float64]) -> (Tensor[(16, 16, 6), bool],) {
    %225 = cast(%var_12316, dtype="bool") /* ty=bool */;
    %226 = cast(%var_12317, dtype="bool") /* ty=Tensor[(16, 16, 6), bool] */;
    %227 = less(%225, %226) /* ty=Tensor[(16, 16, 6), bool] */;
    (%227,)
  };
  %228(%var_12335, %var_12336) /* ty=(Tensor[(16, 16, 6), bool],) */
}

def @func_10779(%var_10768: Tensor[(40, 2), float32]) -> (Tensor[(40, 2), int32], Tensor[(40, 2), bool]) {
  %229 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
  %230 = %229.2;
  %231 = @func_3645() /* ty=Tensor[(4, 4, 5), float64] */;
  %232 = cast(%231, dtype="int32") /* ty=Tensor[(4, 4, 5), int32] */;
  %233 = shape_of(%230, dtype="int32") /* ty=Tensor[(2), int32] */;
  %234 = cast(%230, dtype="int32") /* ty=Tensor[(40, 2), int32] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %236 = cast(%var_10768, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %237 = shape_of(%230, dtype="int32") /* ty=Tensor[(2), int32] */;
  %238 = cast(%230, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %240 = multiply(%234, %235) /* ty=Tensor[(40, 2), int32] */;
  %241 = not_equal(%238, %239) /* ty=Tensor[(40, 2), bool] */;
  (%240, %241)
}

def @func_5435() -> (Tensor[(11, 13, 4), float32],) {
  @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_7437() -> (int32, Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(11, 5, 8), float32]) {
  %250 = fn () -> (int32, Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(11, 5, 8), float32]) {
    %242 = @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */;
    %243 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %244 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
    %245 = @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */;
    %246 = %242.1;
    %247 = %243.0;
    %248 = %244.1;
    %249 = %245.0;
    (%246, %247, %248, %249)
  };
  %250() /* ty=(int32, Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_12086() -> Tensor[(11, 13, 4), float32] {
  @func_12084() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_10815(%var_10813: Tensor[(13, 2, 12), float64], %var_10814: Tensor[(13, 2, 12), float64]) -> (Tensor[(13, 2, 12), float64],) {
  %256 = fn (%var_10795: Tensor[(13, 2, 12), float64], %var_10796: Tensor[(13, 2, 12), float64]) -> (Tensor[(13, 2, 12), float64],) {
    %251 = cast(%var_10796, dtype="float64") /* ty=Tensor[(13, 2, 12), float64] */;
    %252 = shape_of(%var_10795, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%var_10795, dtype="float64") /* ty=Tensor[(13, 2, 12), float64] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %255 = mod(%253, %254) /* ty=Tensor[(13, 2, 12), float64] */;
    (%255,)
  };
  %256(%var_10813, %var_10814) /* ty=(Tensor[(13, 2, 12), float64],) */
}

def @func_5923() -> (Tensor[(11, 5, 8), float32], int32) {
  @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */
}

def @func_11823() -> (Tensor[(11, 5, 1), float64], Tensor[(4, 4, 5), float64]) {
  %257 = @func_10879() /* ty=(Tensor[(11, 5, 1), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %258 = @func_9984() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %259 = %257.0;
  %260 = %258.2;
  (%259, %260)
}

def @func_11116() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint8], Tensor[(4, 4, 5), float32]) {
  @func_11114() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint8], Tensor[(4, 4, 5), float32]) */
}

def @func_2562() -> (Tensor[(11, 13, 4), float32],) {
  @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_6912() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), int32], Tensor[(13, 3, 10), uint64]) {
  %283 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), int32], Tensor[(13, 3, 10), uint64]) {
    %261 = @func_5522() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %262 = @func_5035() /* ty=Tensor[(13, 3, 10), bool] */;
    %263 = cast(%262, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
    %264 = atanh(%263) /* ty=Tensor[(13, 3, 10), float32] */;
    %265 = cast(%262, dtype="int8") /* ty=Tensor[(13, 3, 10), int8] */;
    %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %267 = cast(%264, dtype="int8") /* ty=Tensor[(13, 3, 10), int8] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %269 = maximum(%267, %268) /* ty=Tensor[(13, 3, 10), int8] */;
    %270 = cast(%269, dtype="int32") /* ty=Tensor[(13, 3, 10), int32] */;
    %271 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %272 = cast(%264, dtype="int32") /* ty=Tensor[(13, 3, 10), int32] */;
    %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %274 = cast(%269, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
    %275 = acosh(%274) /* ty=Tensor[(13, 3, 10), float64] */;
    %276 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 3, 10), float64] */, dtype="uint64") /* ty=Tensor[(13, 3, 10), uint64] */;
    %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %278 = cast(%275, dtype="uint64") /* ty=Tensor[(13, 3, 10), uint64] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %280 = %261.0;
    %281 = bitwise_or(%272, %273) /* ty=Tensor[(13, 3, 10), int32] */;
    %282 = left_shift(%278, %279) /* ty=Tensor[(13, 3, 10), uint64] */;
    (%280, %281, %282)
  };
  %283() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), int32], Tensor[(13, 3, 10), uint64]) */
}

def @func_5501(%var_5480: Tensor[(390), float32], %var_5496: Tensor[(13, 3, 10), bool]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool]) {
  %284 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %285 = cast(meta[relay.Constant][8] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %286 = cast(%var_5480, dtype="float32") /* ty=Tensor[(390), float32] */;
  %287 = reshape(%285, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %288 = reshape(%286, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %289 = @func_937(%287, %288) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %290 = cast(meta[relay.Constant][8] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %291 = %289.0;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
  %293 = reshape(%290, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %294 = reshape(%292, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %295 = @func_937(%293, %294) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %296 = %295.0;
  %297 = cast(%var_5496, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%296, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %301 = %284.0;
  %302 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  %303 = greater_equal(%299, %300) /* ty=Tensor[(13, 3, 10), bool] */;
  (%301, %302, %291, meta[relay.Constant][8] /* ty=Tensor[(10), float32] */, %var_5480, %303)
}

def @func_10528(%var_10509: Tensor[(14, 3, 4), float32], %var_10526: Tensor[(390, 1), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(1, 10), float32], Tensor[(390, 1), float32]) {
  %304 = cast(%var_10509, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  %305 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 10), float32] */;
  %306 = cast(%var_10526, dtype="float32") /* ty=Tensor[(390, 1), float32] */;
  %307 = reshape(%305, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %308 = reshape(%306, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %309 = @func_937(%307, %308) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %310 = acos(%304) /* ty=Tensor[(14, 3, 4), float32] */;
  %311 = %309.0;
  (%310, %311, meta[relay.Constant][9] /* ty=Tensor[(1, 10), float32] */, %var_10526)
}

def @func_6805() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  @func_6803() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */
}

def @func_2957() -> Tensor[(11, 13, 4), float32] {
  @func_2955() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_4206() -> (Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) {
  %312 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %313 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %314 = %312.0;
  %315 = @func_3645() /* ty=Tensor[(4, 4, 5), float64] */;
  %316 = %313.1;
  (%314, %315, %316)
}

def @func_2883() -> (Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) {
  %317 = @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */;
  %318 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %319 = %317.1;
  %320 = %318.0;
  (%319, %320)
}

def @func_3890() -> Tensor[(11, 13, 4), float32] {
  %322 = fn () -> Tensor[(11, 13, 4), float32] {
    %321 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %321.0
  };
  %322() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_4698() -> (Tensor[(11, 13, 4), float32], Tensor[(10, 2, 8), float32], Tensor[(160), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(7, 2, 7), int64]) {
  %323 = cast(meta[relay.Constant][10] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %324 = reshape(%323, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float32] */;
  %325 = @func_1813(%324) /* ty=(Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) */;
  %326 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
  %327 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %328 = %327.0;
  %329 = cast(%328, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %330 = reshape(%329, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %331 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(7, 2, 7), float64] */;
  %332 = exp(%331) /* ty=Tensor[(7, 2, 7), float64] */;
  %333 = cast(%332, dtype="float32") /* ty=Tensor[(7, 2, 7), float32] */;
  %334 = tan(%333) /* ty=Tensor[(7, 2, 7), float32] */;
  %335 = cast(%332, dtype="int64") /* ty=Tensor[(7, 2, 7), int64] */;
  %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%334, dtype="int64") /* ty=Tensor[(7, 2, 7), int64] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %339 = @func_3889() /* ty=Tensor[(11, 13, 4), float32] */;
  %340 = %325.0;
  %341 = %326.1;
  %342 = @func_2333(%330) /* ty=Tensor[(11, 13, 4), uint32] */;
  %343 = left_shift(%337, %338) /* ty=Tensor[(7, 2, 7), int64] */;
  (%339, %340, meta[relay.Constant][10] /* ty=Tensor[(160), float32] */, %341, %328, %342, %343)
}

def @func_7876() -> (Tensor[(11, 13, 4), float32],) {
  %344 = @func_4886() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), bool], Tensor[(3, 11, 4), int16], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %345 = %344.1;
  (%345,)
}

def @func_12184() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %348 = fn () -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
    %346 = @func_12116() /* ty=Tensor[(13, 3, 10), bool] */;
    %347 = @func_11893() /* ty=Tensor[(11, 13, 4), float32] */;
    (%346, %347)
  };
  %348() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */
}

def @func_9520(%var_9518: Tensor[(135, 1), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(3, 15, 3), float32], Tensor[(135, 1), float32]) {
  @func_9517(%var_9518) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(3, 15, 3), float32], Tensor[(135, 1), float32]) */
}

def @func_5637() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) {
  %349 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %350 = @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %351 = %349.0;
  %352 = %350.0;
  (%351, %352)
}

def @func_7017() -> Tensor[(13, 3, 10), bool] {
  @func_5035() /* ty=Tensor[(13, 3, 10), bool] */
}

def @func_11895() -> Tensor[(11, 13, 4), float32] {
  @func_11893() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_10532(%var_10530: Tensor[(14, 3, 4), float32], %var_10531: Tensor[(390, 1), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(1, 10), float32], Tensor[(390, 1), float32]) {
  @func_10528(%var_10530, %var_10531) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(1, 10), float32], Tensor[(390, 1), float32]) */
}

def @func_11587() -> Tensor[(11, 13, 4), bool] {
  @func_11585() /* ty=Tensor[(11, 13, 4), bool] */
}

def @func_10453(%var_10451: Tensor[(5, 2), float32], %var_10452: Tensor[(390), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(5, 2), float32], Tensor[(390), float32]) {
  %360 = fn (%var_10439: Tensor[(5, 2), float32], %var_10440: Tensor[(390), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(5, 2), float32], Tensor[(390), float32]) {
    %353 = cast(%var_10439, dtype="float32") /* ty=Tensor[(5, 2), float32] */;
    %354 = cast(%var_10440, dtype="float32") /* ty=Tensor[(390), float32] */;
    %355 = reshape(%353, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
    %356 = reshape(%354, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
    %357 = @func_937(%355, %356) /* ty=(Tensor[(13, 3, 10), bool],) */;
    %358 = @func_8711() /* ty=Tensor[(11, 13, 4), float32] */;
    %359 = %357.0;
    (%358, %359, %var_10439, %var_10440)
  };
  %360(%var_10451, %var_10452) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(5, 2), float32], Tensor[(390), float32]) */
}

def @func_5603() -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %361 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %362 = @func_2103() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %363 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %364 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %365 = %361.1;
  %366 = %362.0;
  %367 = %363.0;
  %368 = %364.0;
  (%365, %366, %367, %368)
}

def @func_7148() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %369 = @func_7046() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %370 = @func_5146() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %371 = %369.1;
  %372 = @func_7017() /* ty=Tensor[(13, 3, 10), bool] */;
  %373 = %370.1;
  (%371, %372, %373)
}

def @func_9529() -> (Tensor[(4, 4, 5), float64],) {
  @func_9527() /* ty=(Tensor[(4, 4, 5), float64],) */
}

def @func_5077() -> (Tensor[(11, 13, 4), float64],) {
  @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */
}

def @func_10926() -> (Tensor[(11, 13, 4), float64],) {
  %374 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  (%374,)
}

def @func_9130() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  @func_9128() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_2601() -> (Tensor[(?, 9, 7), bool],) {
  @func_2599() /* ty=(Tensor[(?, 9, 7), bool],) */
}

def @func_3914(%var_3912: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), int64] {
  @func_3911(%var_3912) /* ty=Tensor[(11, 13, 4), int64] */
}

def @func_9549(%var_9547: Tensor[(10, 9, 10), float32]) -> (Tensor[(10, 9, 10), float32],) {
  @func_9546(%var_9547) /* ty=(Tensor[(10, 9, 10), float32],) */
}

def @func_5910() -> Tensor[(11, 13, 4), float32] {
  %375 = fn () -> Tensor[(11, 13, 4), float32] {
    @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
  };
  %375() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_7047() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %378 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %376 = @func_4739() /* ty=Tensor[(11, 13, 4), float32] */;
    %377 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
    (%376, %377)
  };
  %378() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_5433() -> (Tensor[(11, 13, 4), float32],) {
  %379 = @func_4739() /* ty=Tensor[(11, 13, 4), float32] */;
  (%379,)
}

def @func_1171(%var_1170: Tensor[(3, 11, 4), uint16]) -> (Tensor[(3, 11, 4), uint16],) {
  %385 = fn (%var_1161: Tensor[(3, 11, 4), uint16]) -> (Tensor[(3, 11, 4), uint16],) {
    %380 = cast(%var_1161, dtype="uint16") /* ty=Tensor[(3, 11, 4), uint16] */;
    %381 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 11, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %382 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 11, 4), uint16] */, dtype="uint16") /* ty=Tensor[(3, 11, 4), uint16] */;
    %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %384 = bitwise_or(%382, %383) /* ty=Tensor[(3, 11, 4), uint16] */;
    (%384,)
  };
  %385(%var_1170) /* ty=(Tensor[(3, 11, 4), uint16],) */
}

def @func_11114() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint8], Tensor[(4, 4, 5), float32]) {
  %386 = @func_5637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) */;
  %387 = @func_3167() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */;
  %388 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %389 = %386.0;
  %390 = %387.4;
  %391 = %388.1;
  (%389, %390, %391)
}

def @func_2628() -> (Tensor[(11, 13, 4), float32],) {
  @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_11227() -> (Tensor[(11, 13, 4), float32],) {
  %392 = @func_2994() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */;
  %393 = %392.3;
  (%393,)
}

def @func_4271() -> Tensor[(11, 13, 4), float32] {
  @func_4269() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_2104() -> (Tensor[(11, 13, 4), float32],) {
  %396 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %394 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %395 = %394.0;
    (%395,)
  };
  %396() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_11170() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  @func_11168() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_3911(%var_3905: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), int64] {
  %397 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %398 = %397.0;
  %399 = cast(%var_3905, dtype="int64") /* ty=Tensor[(11, 13, 4), int64] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="int64") /* ty=Tensor[(11, 13, 4), int64] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%401, %402) /* ty=Tensor[(11, 13, 4), int64] */
}

def @func_11337(%var_11336: Tensor[(13, 3, 10), bool]) -> Tensor[(13, 3, 10), int16] {
  %408 = fn (%var_11313: Tensor[(13, 3, 10), bool]) -> Tensor[(13, 3, 10), int16] {
    %403 = @func_7074() /* ty=Tensor[(13, 3, 10), bool] */;
    %404 = cast(%var_11313, dtype="int16") /* ty=Tensor[(13, 3, 10), int16] */;
    %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
    %406 = cast(%403, dtype="int16") /* ty=Tensor[(13, 3, 10), int16] */;
    %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_xor(%406, %407) /* ty=Tensor[(13, 3, 10), int16] */
  };
  %408(%var_11336) /* ty=Tensor[(13, 3, 10), int16] */
}

def @func_1930(%var_1928: int32, %var_1929: Tensor[(9, 9, 16), int32]) -> (Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
  %428 = fn (%var_1882: int32, %var_1883: Tensor[(9, 9, 16), int32]) -> (Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
    %409 = cast(%var_1882, dtype="bool") /* ty=bool */;
    %410 = cast(%var_1883, dtype="bool") /* ty=Tensor[(9, 9, 16), bool] */;
    %411 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 12), float32] */;
    %412 = reshape(%411, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float32] */;
    %413 = cast(meta[relay.Constant][14] /* ty=Tensor[(20, 4), float64] */, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
    %414 = reshape(%413, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float64] */;
    %415 = @func_798(%414) /* ty=(Tensor[(4, 4, 5), float64],) */;
    %416 = cast(meta[relay.Constant][15] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
    %417 = reshape(%416, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
    %418 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %419 = %415.0;
    %420 = cast(%419, dtype="float64") /* ty=Tensor[(4, 4, 5), float64] */;
    %421 = reshape(%420, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float64] */;
    %422 = @func_798(%421) /* ty=(Tensor[(4, 4, 5), float64],) */;
    %423 = not_equal(%409, %410) /* ty=Tensor[(9, 9, 16), bool] */;
    %424 = @func_528(%412) /* ty=Tensor[(?, 4, 3), uint16] */;
    %425 = @func_1767(%417) /* ty=Tensor[(11, 13, 4), uint16] */;
    %426 = %418.5;
    %427 = %422.0;
    (%423, %424, meta[relay.Constant][13] /* ty=Tensor[(1, 12), float32] */, %419, meta[relay.Constant][14] /* ty=Tensor[(20, 4), float64] */, %425, meta[relay.Constant][15] /* ty=Tensor[(572), float32] */, %426, %427)
  };
  %428(%var_1928, %var_1929) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */
}

def @func_6573() -> Tensor[(11, 13, 4), float64] {
  @func_6571() /* ty=Tensor[(11, 13, 4), float64] */
}

def @func_12437(%var_12422: int32) -> (Tensor[(11, 13, 4), float32], Tensor[(1296), bool], Tensor[(20, 4), float32]) {
  %429 = cast(meta[relay.Constant][16] /* ty=Tensor[(1296), int32] */, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %430 = cast(%var_12422, dtype="bool") /* ty=bool */;
  %431 = cast(%var_12422, dtype="int32") /* ty=int32 */;
  %432 = cast(meta[relay.Constant][16] /* ty=Tensor[(1296), int32] */, dtype="int32") /* ty=Tensor[(1296), int32] */;
  %433 = reshape(%431, newshape=[]) /* ty=int32 */;
  %434 = reshape(%432, newshape=[9, 9, 16]) /* ty=Tensor[(9, 9, 16), int32] */;
  %435 = @func_1927(%433, %434) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %436 = %435.4;
  %437 = cast(%436, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %438 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
  %439 = logical_or(%429, %430) /* ty=Tensor[(1296), bool] */;
  %440 = atanh(%437) /* ty=Tensor[(20, 4), float32] */;
  (%438, %439, %440)
}

def @func_4886() -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), bool], Tensor[(3, 11, 4), int16], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), float32]) {
  %441 = @func_4177() /* ty=(Tensor[(4, 4, 5), float64],) */;
  %442 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %443 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %444 = @func_4431() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), uint16], Tensor[(3, 44), uint16], Tensor[(11, 13, 4), float32]) */;
  %445 = %444.1;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(3, 11, 4), float64] */;
  %447 = sin(%446) /* ty=Tensor[(3, 11, 4), float64] */;
  %448 = cast(%445, dtype="bool") /* ty=Tensor[(3, 11, 4), bool] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="bool") /* ty=Tensor[(3, 11, 4), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %452 = cast(%447, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  %453 = asin(%452) /* ty=Tensor[(3, 11, 4), float32] */;
  %454 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 11, 4), float32] */, dtype="int16") /* ty=Tensor[(3, 11, 4), int16] */;
  %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%453, dtype="int16") /* ty=Tensor[(3, 11, 4), int16] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %458 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %459 = cast(%453, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  %460 = %441.0;
  %461 = %442.0;
  %462 = %443.0;
  %463 = equal(%450, %451) /* ty=Tensor[(3, 11, 4), bool] */;
  %464 = bitwise_and(%456, %457) /* ty=Tensor[(3, 11, 4), int16] */;
  %465 = %458.1;
  %466 = cosh(%459) /* ty=Tensor[(3, 11, 4), float32] */;
  (%460, %461, %462, %463, %464, %465, %466)
}

def @func_4524(%var_4523: Tensor[(390), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), int16], Tensor[(390), float32]) {
  %473 = fn (%var_4509: Tensor[(390), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), int16], Tensor[(390), float32]) {
    %467 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
    %468 = cast(%var_4509, dtype="float32") /* ty=Tensor[(390), float32] */;
    %469 = reshape(%468, newshape=[390]) /* ty=Tensor[(390), float32] */;
    %470 = @func_3823(%469) /* ty=(Tensor[(11, 13, 4), int16], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(11, 13, 4), float32]) */;
    %471 = %467.1;
    %472 = %470.0;
    (%471, %472, %var_4509)
  };
  %473(%var_4523) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), int16], Tensor[(390), float32]) */
}

def @func_7852() -> Tensor[(11, 13, 4), float32] {
  %474 = @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %474.2
}

def @func_11199() -> Tensor[(11, 13, 4), float64] {
  %476 = fn () -> Tensor[(11, 13, 4), float64] {
    %475 = @func_10926() /* ty=(Tensor[(11, 13, 4), float64],) */;
    %475.0
  };
  %476() /* ty=Tensor[(11, 13, 4), float64] */
}

def @func_1232() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  %501 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
    %477 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %478 = cast(meta[relay.Constant][19] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
    %479 = cast(meta[relay.Constant][20] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %480 = reshape(%478, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
    %481 = reshape(%479, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
    %482 = @func_937(%480, %481) /* ty=(Tensor[(13, 3, 10), bool],) */;
    %483 = cast(meta[relay.Constant][19] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
    %484 = %482.0;
    %485 = cast(%484, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
    %486 = reshape(%483, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
    %487 = reshape(%485, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
    %488 = @func_937(%486, %487) /* ty=(Tensor[(13, 3, 10), bool],) */;
    %489 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 13, 4), float32] */, dtype="float64") /* ty=Tensor[(11, 13, 4), float64] */;
    %490 = log10(%489) /* ty=Tensor[(11, 13, 4), float64] */;
    %491 = cast(%490, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %492 = cast(meta[relay.Constant][19] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
    %493 = cast(meta[relay.Constant][20] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %494 = reshape(%492, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
    %495 = reshape(%493, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
    %496 = @func_937(%494, %495) /* ty=(Tensor[(13, 3, 10), bool],) */;
    %497 = cos(%477) /* ty=Tensor[(11, 13, 4), float32] */;
    %498 = %488.0;
    %499 = erf(%491) /* ty=Tensor[(11, 13, 4), float32] */;
    %500 = %496.0;
    (%497, %484, meta[relay.Constant][19] /* ty=Tensor[(10), float32] */, meta[relay.Constant][20] /* ty=Tensor[(390), float32] */, %498, %499, %500)
  };
  %501() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */
}

def @func_6044(%var_5979: Tensor[(572), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(6, 216), int32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
  %502 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %503 = cast(%var_5979, dtype="float32") /* ty=Tensor[(572), float32] */;
  %504 = reshape(%503, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %505 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %506 = reshape(%505, newshape=[]) /* ty=int32 */;
  %507 = @func_4366(%506) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(20, 4), float64], int32, Tensor[(6, 216), int32]) */;
  %508 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %509 = @func_4431() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), uint16], Tensor[(3, 44), uint16], Tensor[(11, 13, 4), float32]) */;
  %510 = %502.1;
  %511 = @func_1767(%504) /* ty=Tensor[(11, 13, 4), uint16] */;
  %512 = %507.3;
  %513 = %508.0;
  %514 = %509.3;
  (%510, %511, %var_5979, %512, 9 /* ty=int32 */, %513, %514)
}

def @func_9796(%var_9795: Tensor[(273), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(273), float64]) {
  %521 = fn (%var_9785: Tensor[(273), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(273), float64]) {
    %515 = @func_8658() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %516 = cast(%var_9785, dtype="float64") /* ty=Tensor[(273), float64] */;
    %517 = reshape(%516, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float64] */;
    %518 = @func_3287(%517) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 7), uint64], Tensor[(13, 3, 7), float32]) */;
    %519 = %515.0;
    %520 = %518.0;
    (%519, %520, %var_9785)
  };
  %521(%var_9795) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(273), float64]) */
}

def @func_1553() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) {
  %530 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) {
    %522 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %523 = cast(meta[relay.Constant][21] /* ty=Tensor[(40, 2), float64] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
    %524 = reshape(%523, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float64] */;
    %525 = @func_798(%524) /* ty=(Tensor[(4, 4, 5), float64],) */;
    %526 = cast(meta[relay.Constant][21] /* ty=Tensor[(40, 2), float64] */, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
    %527 = %522.0;
    %528 = %525.0;
    %529 = log2(%526) /* ty=Tensor[(40, 2), float32] */;
    (%527, %528, %529)
  };
  %530() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */
}

def @func_7019() -> Tensor[(13, 3, 10), bool] {
  @func_7017() /* ty=Tensor[(13, 3, 10), bool] */
}

def @func_7582(%var_7558: Tensor[(1, 3, 16), float64]) -> (Tensor[(1, 3, 16), float64], Tensor[(11, 13, 4), float32]) {
  %531 = cast(%var_7558, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
  %532 = rsqrt(%531) /* ty=Tensor[(1, 3, 16), float64] */;
  %533 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
  (%532, %533)
}

def @func_11310() -> (Tensor[(11, 13, 4), float32],) {
  %535 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %534 = @func_5909() /* ty=Tensor[(11, 13, 4), float32] */;
    (%534,)
  };
  %535() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_10974() -> Tensor[(13, 3, 10), bool] {
  %536 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %536.2
}

def @func_8398() -> Tensor[(11, 13, 4), float32] {
  @func_8396() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_5075() -> (Tensor[(11, 13, 4), float64],) {
  %537 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %538 = %537.0;
  (%538,)
}

def @func_8159() -> (int32, Tensor[(11, 13, 4), float32]) {
  %543 = fn () -> (int32, Tensor[(11, 13, 4), float32]) {
    %539 = @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */;
    %540 = @func_4731() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
    %541 = %539.1;
    %542 = %540.1;
    (%541, %542)
  };
  %543() /* ty=(int32, Tensor[(11, 13, 4), float32]) */
}

def @func_11911() -> Tensor[(11, 13, 4), float32] {
  @func_11909() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_8084() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
  %548 = fn () -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
    %544 = @func_5816() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) */;
    %545 = @func_7862() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(10), float32]) */;
    %546 = %544.0;
    %547 = %545.0;
    (%546, %547)
  };
  %548() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */
}

def @func_8968() -> (Tensor[(11, 13, 4), float32],) {
  %551 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %549 = @func_5816() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) */;
    %550 = %549.1;
    (%550,)
  };
  %551() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_4250(%var_4248: int32) -> (Tensor[(4, 4, 5), float64], Tensor[(4, 4, 5), float64], int32, Tensor[(1296), int32], Tensor[(11, 13, 4), float32], Tensor[(?, 9, 7), bool]) {
  @func_4247(%var_4248) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(4, 4, 5), float64], int32, Tensor[(1296), int32], Tensor[(11, 13, 4), float32], Tensor[(?, 9, 7), bool]) */
}

def @func_7250() -> Tensor[(11, 13, 4), float32] {
  @func_7248() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_11650() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(273), float64]) {
  @func_11648() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(273), float64]) */
}

def @func_12483() -> (Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64]) {
  %556 = fn () -> (Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64]) {
    %552 = @func_7221() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), uint32]) */;
    %553 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
    %554 = %552.0;
    %555 = %553.1;
    (%554, %555)
  };
  %556() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64]) */
}

def @func_4247(%var_4227: int32) -> (Tensor[(4, 4, 5), float64], Tensor[(4, 4, 5), float64], int32, Tensor[(1296), int32], Tensor[(11, 13, 4), float32], Tensor[(?, 9, 7), bool]) {
  %557 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
  %558 = cast(%var_4227, dtype="int32") /* ty=int32 */;
  %559 = cast(meta[relay.Constant][22] /* ty=Tensor[(1296), int32] */, dtype="int32") /* ty=Tensor[(1296), int32] */;
  %560 = reshape(%558, newshape=[]) /* ty=int32 */;
  %561 = reshape(%559, newshape=[9, 9, 16]) /* ty=Tensor[(9, 9, 16), int32] */;
  %562 = @func_1927(%560, %561) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %563 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %564 = @func_2599() /* ty=(Tensor[(?, 9, 7), bool],) */;
  %565 = %557.1;
  %566 = %562.8;
  %567 = %563.1;
  %568 = %564.0;
  (%565, %566, %var_4227, meta[relay.Constant][22] /* ty=Tensor[(1296), int32] */, %567, %568)
}

def @func_9929() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), bool], Tensor[(11, 13, 4), float32]) {
  %574 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), bool], Tensor[(11, 13, 4), float32]) {
    %569 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %570 = @func_9664() /* ty=(Tensor[(11, 13, 4), bool],) */;
    %571 = %569.5;
    %572 = %570.0;
    %573 = @func_7248() /* ty=Tensor[(11, 13, 4), float32] */;
    (%571, %572, %573)
  };
  %574() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), bool], Tensor[(11, 13, 4), float32]) */
}

def @func_9247(%var_9229: Tensor[(858), float64]) -> (Tensor[(11, 13, 4), bool], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(6, 16, 9), int64], Tensor[(160, 1), float32], Tensor[(160), float32], Tensor[(858), float32], Tensor[(858), float64]) {
  %575 = cast(meta[relay.Constant][23] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %576 = reshape(%575, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %577 = @func_7862() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(10), float32]) */;
  %578 = @func_8083() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */;
  %579 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 9), float32] */;
  %580 = cosh(%579) /* ty=Tensor[(6, 16, 9), float32] */;
  %581 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 16, 9), float32] */, dtype="int64") /* ty=Tensor[(6, 16, 9), int64] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%580, dtype="int64") /* ty=Tensor[(6, 16, 9), int64] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %585 = cast(meta[relay.Constant][25] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %586 = reshape(%585, newshape=[160, 1]) /* ty=Tensor[(160, 1), float32] */;
  %587 = @func_5741(%586) /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(160, 1), float32]) */;
  %588 = cast(%var_9229, dtype="float64") /* ty=Tensor[(858), float64] */;
  %589 = reshape(%588, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %590 = @func_8954(%589) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(858), float32], Tensor[(11, 13, 4), float32]) */;
  %591 = @func_4093(%576) /* ty=Tensor[(11, 13, 4), bool] */;
  %592 = %577.0;
  %593 = %578.1;
  %594 = minimum(%583, %584) /* ty=Tensor[(6, 16, 9), int64] */;
  %595 = %587.9;
  %596 = %590.2;
  (%591, meta[relay.Constant][23] /* ty=Tensor[(572), float32] */, %592, %593, %594, %595, meta[relay.Constant][25] /* ty=Tensor[(160), float32] */, %596, %var_9229)
}

def @func_10206(%var_10205: Tensor[(160), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32], Tensor[(160), float32]) {
  %608 = fn (%var_10194: Tensor[(160), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32], Tensor[(160), float32]) {
    %597 = @func_4400() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %598 = @func_9481() /* ty=Tensor[(11, 13, 4), float32] */;
    %599 = cast(%598, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %600 = reshape(%599, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
    %601 = cast(%var_10194, dtype="float32") /* ty=Tensor[(160), float32] */;
    %602 = reshape(%601, newshape=[160, 1]) /* ty=Tensor[(160, 1), float32] */;
    %603 = @func_5741(%602) /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(160, 1), float32]) */;
    %604 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
    %605 = %597.1;
    %606 = @func_2333(%600) /* ty=Tensor[(11, 13, 4), uint32] */;
    %607 = %603.3;
    (%604, %598, %605, %606, %607, %var_10194)
  };
  %608(%var_10205) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32], Tensor[(160), float32]) */
}

def @func_10880() -> (Tensor[(11, 5, 1), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %620 = fn () -> (Tensor[(11, 5, 1), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %609 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="bool") /* ty=bool */;
    %610 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 5, 1), uint64] */, dtype="bool") /* ty=Tensor[(11, 5, 1), bool] */;
    %611 = equal(%609, %610) /* ty=Tensor[(11, 5, 1), bool] */;
    %612 = cast(%611, dtype="float64") /* ty=Tensor[(11, 5, 1), float64] */;
    %613 = log(%612) /* ty=Tensor[(11, 5, 1), float64] */;
    %614 = cast(%613, dtype="float64") /* ty=Tensor[(11, 5, 1), float64] */;
    %615 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %616 = @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */;
    %617 = erf(%614) /* ty=Tensor[(11, 5, 1), float64] */;
    %618 = %615.0;
    %619 = %616.2;
    (%617, %618, %619)
  };
  %620() /* ty=(Tensor[(11, 5, 1), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_1816(%var_1814: Tensor[(10, 2, 8), float32]) -> (Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) {
  @func_1813(%var_1814) /* ty=(Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_5147() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %625 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %621 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %622 = @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */;
    %623 = %621.0;
    %624 = %622.2;
    (%623, %624)
  };
  %625() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_7309() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) {
  @func_7307() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) */
}

def @func_9394() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %629 = fn () -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
    %626 = @func_8275() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
    %627 = @func_5035() /* ty=Tensor[(13, 3, 10), bool] */;
    %628 = %626.1;
    (%627, %628)
  };
  %629() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */
}

def @func_6746() -> (Tensor[(13, 3, 10), bool],) {
  %632 = fn () -> (Tensor[(13, 3, 10), bool],) {
    %630 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
    %631 = %630.0;
    (%631,)
  };
  %632() /* ty=(Tensor[(13, 3, 10), bool],) */
}

def @func_6990(%var_6988: Tensor[(5, 13, 14), float64], %var_6989: Tensor[(5, 13, 14), float64]) -> (Tensor[(5, 13, 14), uint32], Tensor[(11, 13, 4), uint16], Tensor[(572, 1), float32], Tensor[(11, 13, 4), int16], Tensor[(390, 1), float32]) {
  %647 = fn (%var_6918: Tensor[(5, 13, 14), float64], %var_6934: Tensor[(5, 13, 14), float64]) -> (Tensor[(5, 13, 14), uint32], Tensor[(11, 13, 4), uint16], Tensor[(572, 1), float32], Tensor[(11, 13, 4), int16], Tensor[(390, 1), float32]) {
    %633 = cast(%var_6918, dtype="float64") /* ty=Tensor[(5, 13, 14), float64] */;
    %634 = sigmoid(%633) /* ty=Tensor[(5, 13, 14), float64] */;
    %635 = cast(%var_6934, dtype="uint32") /* ty=Tensor[(5, 13, 14), uint32] */;
    %636 = shape_of(%634, dtype="int32") /* ty=Tensor[(3), int32] */;
    %637 = cast(%634, dtype="uint32") /* ty=Tensor[(5, 13, 14), uint32] */;
    %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %639 = cast(meta[relay.Constant][28] /* ty=Tensor[(572, 1), float32] */, dtype="float32") /* ty=Tensor[(572, 1), float32] */;
    %640 = reshape(%639, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
    %641 = cast(meta[relay.Constant][29] /* ty=Tensor[(390, 1), float32] */, dtype="float32") /* ty=Tensor[(390, 1), float32] */;
    %642 = reshape(%641, newshape=[390]) /* ty=Tensor[(390), float32] */;
    %643 = @func_4522(%642) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), int16], Tensor[(390), float32]) */;
    %644 = maximum(%637, %638) /* ty=Tensor[(5, 13, 14), uint32] */;
    %645 = @func_1767(%640) /* ty=Tensor[(11, 13, 4), uint16] */;
    %646 = %643.1;
    (%644, %645, meta[relay.Constant][28] /* ty=Tensor[(572, 1), float32] */, %646, meta[relay.Constant][29] /* ty=Tensor[(390, 1), float32] */)
  };
  %647(%var_6988, %var_6989) /* ty=(Tensor[(5, 13, 14), uint32], Tensor[(11, 13, 4), uint16], Tensor[(572, 1), float32], Tensor[(11, 13, 4), int16], Tensor[(390, 1), float32]) */
}

def @func_1711(%var_1697: Tensor[(11, 13, 4), float32]) -> (Tensor[(11, 13, 4), uint8],) {
  %648 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %649 = %648.0;
  %650 = cast(%var_1697, dtype="bool") /* ty=Tensor[(11, 13, 4), bool] */;
  %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%649, dtype="bool") /* ty=Tensor[(11, 13, 4), bool] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %654 = not_equal(%652, %653) /* ty=Tensor[(11, 13, 4), bool] */;
  %655 = cast(%654, dtype="float64") /* ty=Tensor[(11, 13, 4), float64] */;
  %656 = rsqrt(%655) /* ty=Tensor[(11, 13, 4), float64] */;
  %657 = cast(%654, dtype="uint8") /* ty=Tensor[(11, 13, 4), uint8] */;
  %658 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%656, dtype="uint8") /* ty=Tensor[(11, 13, 4), uint8] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %661 = maximum(%659, %660) /* ty=Tensor[(11, 13, 4), uint8] */;
  (%661,)
}

def @func_8713() -> Tensor[(11, 13, 4), float32] {
  @func_8711() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_11883() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
  %667 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) {
    %662 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %663 = @func_11823() /* ty=(Tensor[(11, 5, 1), float64], Tensor[(4, 4, 5), float64]) */;
    %664 = @func_11676() /* ty=Tensor[(11, 13, 4), float32] */;
    %665 = %662.0;
    %666 = %663.1;
    (%664, %665, %666)
  };
  %667() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */
}

def @func_7864() -> (Tensor[(11, 13, 4), float32], Tensor[(10), float32]) {
  @func_7862() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(10), float32]) */
}

def @func_3088() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) {
  @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */
}

def @func_5007() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(20, 4), float64], int32) {
  %676 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(20, 4), float64], int32) {
    %668 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %669 = @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */;
    %670 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %671 = reshape(%670, newshape=[]) /* ty=int32 */;
    %672 = @func_4366(%671) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(20, 4), float64], int32, Tensor[(6, 216), int32]) */;
    %673 = %668.0;
    %674 = %669.4;
    %675 = %672.1;
    (%673, %674, %675, -4 /* ty=int32 */)
  };
  %676() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(20, 4), float64], int32) */
}

def @func_10638() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %681 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %677 = @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %678 = @func_5376() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %679 = %677.0;
    %680 = %678.0;
    (%679, %680)
  };
  %681() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_2955() -> Tensor[(11, 13, 4), float32] {
  @func_2812() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_11031() -> int32 {
  %682 = @func_7436() /* ty=(int32, Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(11, 5, 8), float32]) */;
  %682.0
}

def @func_5405() -> (Tensor[(11, 13, 4), float32],) {
  %685 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %683 = @func_4400() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %684 = %683.1;
    (%684,)
  };
  %685() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_5378() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  @func_5376() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_6595() -> (Tensor[(11, 13, 4), float64],) {
  @func_6593() /* ty=(Tensor[(11, 13, 4), float64],) */
}

def @func_9073() -> (Tensor[(11, 13, 4), float32],) {
  @func_9071() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_5744(%var_5742: Tensor[(160, 1), float32]) -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(160, 1), float32]) {
  @func_5741(%var_5742) /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(160, 1), float32]) */
}

def @func_12116() -> Tensor[(13, 3, 10), bool] {
  %686 = @func_7221() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), uint32]) */;
  %686.0
}

def @func_11168() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %687 = @func_3889() /* ty=Tensor[(11, 13, 4), float32] */;
  %688 = @func_9481() /* ty=Tensor[(11, 13, 4), float32] */;
  (%687, %688)
}

def @func_9071() -> (Tensor[(11, 13, 4), float32],) {
  %689 = @func_3889() /* ty=Tensor[(11, 13, 4), float32] */;
  (%689,)
}

def @func_2382() -> Tensor[(11, 13, 4), float32] {
  %690 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %690.1
}

def @func_4432() -> (Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), uint16], Tensor[(3, 44), uint16], Tensor[(11, 13, 4), float32]) {
  %699 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), uint16], Tensor[(3, 44), uint16], Tensor[(11, 13, 4), float32]) {
    %691 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %692 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 44), uint16] */, dtype="uint16") /* ty=Tensor[(3, 44), uint16] */;
    %693 = reshape(%692, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), uint16] */;
    %694 = @func_1169(%693) /* ty=(Tensor[(3, 11, 4), uint16],) */;
    %695 = @func_1797() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %696 = %691.0;
    %697 = %694.0;
    %698 = %695.0;
    (%696, %697, meta[relay.Constant][30] /* ty=Tensor[(3, 44), uint16] */, %698)
  };
  %699() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), uint16], Tensor[(3, 44), uint16], Tensor[(11, 13, 4), float32]) */
}

def @func_7820() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %704 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %700 = @func_5522() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %701 = @func_7648() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %702 = %700.0;
    %703 = %701.0;
    (%702, %703)
  };
  %704() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_8954(%var_8915: Tensor[(858), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(858), float32], Tensor[(11, 13, 4), float32]) {
  %705 = @func_4886() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), bool], Tensor[(3, 11, 4), int16], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %706 = cast(%var_8915, dtype="float64") /* ty=Tensor[(858), float64] */;
  %707 = reshape(%706, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %708 = @func_8193(%707) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 11, 6), bool]) */;
  %709 = cast(%var_8915, dtype="float32") /* ty=Tensor[(858), float32] */;
  %710 = @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %711 = %705.5;
  %712 = %708.0;
  %713 = sin(%709) /* ty=Tensor[(858), float32] */;
  %714 = %710.3;
  (%711, %712, %713, %714)
}

def @func_12526(%var_12506: Tensor[(160), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(160), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
  %715 = @func_7148() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
  %716 = cast(%var_12506, dtype="float32") /* ty=Tensor[(160), float32] */;
  %717 = reshape(%716, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float32] */;
  %718 = @func_1813(%717) /* ty=(Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) */;
  %719 = @func_8083() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */;
  %720 = %715.2;
  %721 = %718.1;
  %722 = %719.0;
  %723 = @func_10217() /* ty=Tensor[(11, 13, 4), float32] */;
  (%720, %721, %var_12506, %722, %723)
}

def @func_11924(%var_11915: float64, %var_11916: Tensor[(6, 16, 4), float64]) -> Tensor[(6, 16, 4), float64] {
  %724 = cast(%var_11915, dtype="float64") /* ty=float64 */;
  %725 = cast(%var_11916, dtype="float64") /* ty=Tensor[(6, 16, 4), float64] */;
  floor_mod(%724, %725) /* ty=Tensor[(6, 16, 4), float64] */
}

def @func_6155(%var_6154: Tensor[(16, 15, 11), float64]) -> Tensor[(16, 15, 11), int16] {
  %732 = fn (%var_6131: Tensor[(16, 15, 11), float64]) -> Tensor[(16, 15, 11), int16] {
    %726 = cast(%var_6131, dtype="float64") /* ty=Tensor[(16, 15, 11), float64] */;
    %727 = atan(%726) /* ty=Tensor[(16, 15, 11), float64] */;
    %728 = cast(%var_6131, dtype="int16") /* ty=Tensor[(16, 15, 11), int16] */;
    %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
    %730 = cast(%727, dtype="int16") /* ty=Tensor[(16, 15, 11), int16] */;
    %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_xor(%730, %731) /* ty=Tensor[(16, 15, 11), int16] */
  };
  %732(%var_6154) /* ty=Tensor[(16, 15, 11), int16] */
}

def @func_6225(%var_6223: Tensor[(3, 15, 3), float32]) -> (Tensor[(3, 15, 3), float32], Tensor[(3, 15, 3), bool]) {
  @func_6222(%var_6223) /* ty=(Tensor[(3, 15, 3), float32], Tensor[(3, 15, 3), bool]) */
}

def @func_5818() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) {
  @func_5816() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) */
}

def @func_2626() -> (Tensor[(11, 13, 4), float32],) {
  %733 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %734 = %733.0;
  %735 = cast(%734, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %736 = exp(%735) /* ty=Tensor[(11, 13, 4), float32] */;
  (%736,)
}

def @func_12275() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %737 = @func_2025() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %738 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %739 = %737.1;
  %740 = %738.0;
  (%739, %740)
}

def @func_4369(%var_4367: int32) -> (Tensor[(11, 13, 4), float32], Tensor[(20, 4), float64], int32, Tensor[(6, 216), int32]) {
  @func_4366(%var_4367) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(20, 4), float64], int32, Tensor[(6, 216), int32]) */
}

def @func_8851(%var_8850: Tensor[(7, 6, 4), float32]) -> (Tensor[(7, 6, 4), float32], Tensor[(3, 15, 3), bool], Tensor[(135), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %752 = fn (%var_8808: Tensor[(7, 6, 4), float32]) -> (Tensor[(7, 6, 4), float32], Tensor[(3, 15, 3), bool], Tensor[(135), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %741 = cast(%var_8808, dtype="float32") /* ty=Tensor[(7, 6, 4), float32] */;
    %742 = cast(meta[relay.Constant][31] /* ty=Tensor[(135), float32] */, dtype="float32") /* ty=Tensor[(135), float32] */;
    %743 = reshape(%742, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), float32] */;
    %744 = @func_6222(%743) /* ty=(Tensor[(3, 15, 3), float32], Tensor[(3, 15, 3), bool]) */;
    %745 = cast(meta[relay.Constant][31] /* ty=Tensor[(135), float32] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %746 = @func_7148() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */;
    %747 = atan(%741) /* ty=Tensor[(7, 6, 4), float32] */;
    %748 = %744.1;
    %749 = asinh(%745) /* ty=Tensor[(135), float64] */;
    %750 = @func_2955() /* ty=Tensor[(11, 13, 4), float32] */;
    %751 = %746.0;
    (%747, %748, %749, %750, %751)
  };
  %752(%var_8850) /* ty=(Tensor[(7, 6, 4), float32], Tensor[(3, 15, 3), bool], Tensor[(135), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_10910(%var_10908: Tensor[(1, 8, 6), int8], %var_10909: Tensor[(16, 8, 6), int8]) -> (Tensor[(16, 8, 6), int8], Tensor[(11, 13, 4), float32]) {
  %758 = fn (%var_10881: Tensor[(1, 8, 6), int8], %var_10882: Tensor[(16, 8, 6), int8]) -> (Tensor[(16, 8, 6), int8], Tensor[(11, 13, 4), float32]) {
    %753 = cast(%var_10881, dtype="int8") /* ty=Tensor[(1, 8, 6), int8] */;
    %754 = cast(%var_10882, dtype="int8") /* ty=Tensor[(16, 8, 6), int8] */;
    %755 = @func_7402() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), int64], Tensor[(13, 3, 10), bool]) */;
    %756 = subtract(%753, %754) /* ty=Tensor[(16, 8, 6), int8] */;
    %757 = %755.3;
    (%756, %757)
  };
  %758(%var_10908, %var_10909) /* ty=(Tensor[(16, 8, 6), int8], Tensor[(11, 13, 4), float32]) */
}

def @func_5816() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), uint32], Tensor[(11, 13, 4), float32]) {
  %759 = @func_3167() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */;
  %760 = %759.2;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %762 = reshape(%761, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %763 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %764 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  %765 = @func_2333(%762) /* ty=Tensor[(11, 13, 4), uint32] */;
  %766 = %763.0;
  (%764, %760, %765, %766)
}

def @func_2384() -> Tensor[(11, 13, 4), float32] {
  @func_2382() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_9664() -> (Tensor[(11, 13, 4), bool],) {
  %767 = @func_7307() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) */;
  %768 = %767.1;
  (%768,)
}

def @func_7403() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), int64], Tensor[(13, 3, 10), bool]) {
  %782 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), int64], Tensor[(13, 3, 10), bool]) {
    %769 = @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %770 = @func_5921() /* ty=(Tensor[(11, 5, 8), float32], int32) */;
    %771 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %772 = @func_4269() /* ty=Tensor[(11, 13, 4), float32] */;
    %773 = cast(%772, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %774 = reshape(%773, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
    %775 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %776 = %769.0;
    %777 = %770.0;
    %778 = @func_2812() /* ty=Tensor[(11, 13, 4), float32] */;
    %779 = %771.0;
    %780 = @func_3911(%774) /* ty=Tensor[(11, 13, 4), int64] */;
    %781 = %775.6;
    (%776, %777, %772, %778, %779, %780, %781)
  };
  %782() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), int64], Tensor[(13, 3, 10), bool]) */
}

def @func_11825() -> (Tensor[(11, 5, 1), float64], Tensor[(4, 4, 5), float64]) {
  @func_11823() /* ty=(Tensor[(11, 5, 1), float64], Tensor[(4, 4, 5), float64]) */
}

def @func_11469(%var_11467: Tensor[(4, 4, 5), float64]) -> (Tensor[(4, 4, 5), int16], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), uint32]) {
  @func_11466(%var_11467) /* ty=(Tensor[(4, 4, 5), int16], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), uint32]) */
}

def @func_5741(%var_5739: Tensor[(160, 1), float32]) -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32], Tensor[(160, 1), float32]) {
  %783 = @func_3086() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */;
  %784 = @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %785 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %786 = @func_5146() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %787 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %788 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %789 = reshape(%788, newshape=[]) /* ty=int32 */;
  %790 = @func_4247(%789) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(4, 4, 5), float64], int32, Tensor[(1296), int32], Tensor[(11, 13, 4), float32], Tensor[(?, 9, 7), bool]) */;
  %791 = @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %792 = cast(%var_5739, dtype="float32") /* ty=Tensor[(160, 1), float32] */;
  %793 = reshape(%792, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float32] */;
  %794 = @func_1813(%793) /* ty=(Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) */;
  %795 = %783.4;
  %796 = %784.0;
  %797 = %785.0;
  %798 = %786.0;
  %799 = %787.1;
  %800 = %790.4;
  %801 = %791.0;
  %802 = %794.1;
  (%795, %796, %797, %798, %799, %800, 9 /* ty=int32 */, %801, %802, %var_5739)
}

def @func_7783() -> (Tensor[(4, 4, 5), float32],) {
  @func_7781() /* ty=(Tensor[(4, 4, 5), float32],) */
}

def @func_7829() -> (Tensor[(12), float32],) {
  %805 = fn () -> (Tensor[(12), float32],) {
    %803 = @func_2994() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */;
    %804 = %803.2;
    (%804,)
  };
  %805() /* ty=(Tensor[(12), float32],) */
}

def @func_11080() -> (Tensor[(11, 13, 4), float64], Tensor[(13, 3, 10), float64], Tensor[(4, 4, 5), float64]) {
  %816 = fn () -> (Tensor[(11, 13, 4), float64], Tensor[(13, 3, 10), float64], Tensor[(4, 4, 5), float64]) {
    %806 = @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */;
    %807 = @func_6745() /* ty=(Tensor[(13, 3, 10), bool],) */;
    %808 = %807.0;
    %809 = cast(%808, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
    %810 = cos(%809) /* ty=Tensor[(13, 3, 10), float64] */;
    %811 = cast(%810, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
    %812 = reshape(%811, newshape=[5, 78]) /* ty=Tensor[(5, 78), float32] */;
    %813 = @func_5283(%812) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(10), float32], Tensor[(5, 78), float32]) */;
    %814 = %806.1;
    %815 = %813.0;
    (%814, %810, %815)
  };
  %816() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(13, 3, 10), float64], Tensor[(4, 4, 5), float64]) */
}

def @func_10219() -> Tensor[(11, 13, 4), float32] {
  @func_10217() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_3825(%var_3824: Tensor[(390), float32]) -> (Tensor[(11, 13, 4), int16], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(11, 13, 4), float32]) {
  %831 = fn (%var_3804: Tensor[(390), float32]) -> (Tensor[(11, 13, 4), int16], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(11, 13, 4), float32]) {
    %817 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
    %818 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 13, 4), float32] */, dtype="int16") /* ty=Tensor[(11, 13, 4), int16] */;
    %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(3), int32] */;
    %820 = cast(%817, dtype="int16") /* ty=Tensor[(11, 13, 4), int16] */;
    %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %822 = cast(meta[relay.Constant][33] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
    %823 = cast(%var_3804, dtype="float32") /* ty=Tensor[(390), float32] */;
    %824 = reshape(%822, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
    %825 = reshape(%823, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
    %826 = @func_937(%824, %825) /* ty=(Tensor[(13, 3, 10), bool],) */;
    %827 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %828 = right_shift(%820, %821) /* ty=Tensor[(11, 13, 4), int16] */;
    %829 = %826.0;
    %830 = %827.0;
    (%828, %829, meta[relay.Constant][33] /* ty=Tensor[(10), float32] */, %var_3804, %830)
  };
  %831(%var_3824) /* ty=(Tensor[(11, 13, 4), int16], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_11607() -> (Tensor[(11, 13, 4), float64],) {
  @func_11605() /* ty=(Tensor[(11, 13, 4), float64],) */
}

def @func_8523() -> (Tensor[(4, 4, 5), bool], Tensor[(11, 13, 4), float32]) {
  @func_8521() /* ty=(Tensor[(4, 4, 5), bool], Tensor[(11, 13, 4), float32]) */
}

def @func_8631(%var_8624: Tensor[(1, 390), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(1, 390), float32]) {
  %832 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
  %833 = cast(meta[relay.Constant][34] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %834 = cast(%var_8624, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %835 = reshape(%833, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
  %836 = reshape(%834, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
  %837 = @func_937(%835, %836) /* ty=(Tensor[(13, 3, 10), bool],) */;
  %838 = %832.0;
  %839 = %837.0;
  (%838, %839, meta[relay.Constant][34] /* ty=Tensor[(10), float32] */, %var_8624)
}

def @func_11585() -> Tensor[(11, 13, 4), bool] {
  %840 = @func_7307() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), bool], Tensor[(572), float32]) */;
  %840.1
}

def @func_11928(%var_11926: float64, %var_11927: Tensor[(6, 16, 4), float64]) -> Tensor[(6, 16, 4), float64] {
  @func_11924(%var_11926, %var_11927) /* ty=Tensor[(6, 16, 4), float64] */
}

def @func_8634(%var_8632: Tensor[(1, 390), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(1, 390), float32]) {
  @func_8631(%var_8632) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(1, 390), float32]) */
}

def @func_2814() -> Tensor[(11, 13, 4), float32] {
  @func_2812() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_8957(%var_8955: Tensor[(858), float64]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(858), float32], Tensor[(11, 13, 4), float32]) {
  @func_8954(%var_8955) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(858), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_11012() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) {
  @func_11010() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) */
}

def @func_6571() -> Tensor[(11, 13, 4), float64] {
  %841 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %841.0
}

def @func_12585() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(?, 4, 3), bool], Tensor[(572), float32]) {
  %856 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(?, 4, 3), bool], Tensor[(572), float32]) {
    %842 = @func_8083() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */;
    %843 = @func_7436() /* ty=(int32, Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(11, 5, 8), float32]) */;
    %844 = @func_2994() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */;
    %845 = %844.1;
    %846 = cast(%845, dtype="float32") /* ty=Tensor[(?, 4, 3), float32] */;
    %847 = acos(%846) /* ty=Tensor[(?, 4, 3), float32] */;
    %848 = cast(%845, dtype="bool") /* ty=Tensor[(?, 4, 3), bool] */;
    %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
    %850 = cast(%847, dtype="bool") /* ty=Tensor[(?, 4, 3), bool] */;
    %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %852 = %842.1;
    %853 = %843.2;
    %854 = less_equal(%850, %851) /* ty=Tensor[(?, 4, 3), bool] */;
    %855 = @func_8298() /* ty=Tensor[(572), float32] */;
    (%852, %853, %854, %855)
  };
  %856() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32], Tensor[(?, 4, 3), bool], Tensor[(572), float32]) */
}

def @func_3765() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
  %860 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) {
    %857 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %858 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
    %859 = %857.4;
    (%858, %859)
  };
  %860() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */
}

def @func_9365() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %867 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %861 = @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %862 = @func_7819() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %863 = @func_7876() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %864 = %861.0;
    %865 = %862.1;
    %866 = %863.0;
    (%864, %865, %866)
  };
  %867() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_4366(%var_4317: int32) -> (Tensor[(11, 13, 4), float32], Tensor[(20, 4), float64], int32, Tensor[(6, 216), int32]) {
  %868 = @func_3167() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */;
  %869 = cast(%var_4317, dtype="int32") /* ty=int32 */;
  %870 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 216), int32] */, dtype="int32") /* ty=Tensor[(6, 216), int32] */;
  %871 = reshape(%869, newshape=[]) /* ty=int32 */;
  %872 = reshape(%870, newshape=[9, 9, 16]) /* ty=Tensor[(9, 9, 16), int32] */;
  %873 = @func_1927(%871, %872) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
  %874 = %868.1;
  %875 = %873.4;
  (%874, %875, %var_4317, meta[relay.Constant][35] /* ty=Tensor[(6, 216), int32] */)
}

def @func_5037() -> Tensor[(13, 3, 10), bool] {
  @func_5035() /* ty=Tensor[(13, 3, 10), bool] */
}

def @func_2701() -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) {
  %882 = fn () -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) {
    %876 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
    %877 = %876.1;
    %878 = cast(%877, dtype="float32") /* ty=Tensor[(4, 4, 5), float32] */;
    %879 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %880 = log(%878) /* ty=Tensor[(4, 4, 5), float32] */;
    %881 = %879.0;
    (%880, %881)
  };
  %882() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_5336() -> Tensor[(11, 13, 4), float64] {
  %883 = @func_5075() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %883.0
}

def @func_1714(%var_1712: Tensor[(11, 13, 4), float32]) -> (Tensor[(11, 13, 4), uint8],) {
  @func_1711(%var_1712) /* ty=(Tensor[(11, 13, 4), uint8],) */
}

def @func_4093(%var_4084: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), bool] {
  %884 = @func_2452() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %885 = %884.0;
  %886 = cast(%var_4084, dtype="bool") /* ty=Tensor[(11, 13, 4), bool] */;
  %887 = shape_of(%885, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%885, dtype="bool") /* ty=Tensor[(11, 13, 4), bool] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%888, %889) /* ty=Tensor[(11, 13, 4), bool] */
}

def @func_1813(%var_1801: Tensor[(10, 2, 8), float32]) -> (Tensor[(10, 2, 8), float32], Tensor[(11, 13, 4), float32]) {
  %890 = cast(%var_1801, dtype="float32") /* ty=Tensor[(10, 2, 8), float32] */;
  %891 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %892 = erf(%890) /* ty=Tensor[(10, 2, 8), float32] */;
  %893 = %891.0;
  (%892, %893)
}

def @func_12118() -> Tensor[(13, 3, 10), bool] {
  @func_12116() /* ty=Tensor[(13, 3, 10), bool] */
}

def @func_9517(%var_9512: Tensor[(135, 1), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(3, 15, 3), float32], Tensor[(135, 1), float32]) {
  %894 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %895 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %896 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %897 = cast(%var_9512, dtype="float32") /* ty=Tensor[(135, 1), float32] */;
  %898 = reshape(%897, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), float32] */;
  %899 = @func_6222(%898) /* ty=(Tensor[(3, 15, 3), float32], Tensor[(3, 15, 3), bool]) */;
  %900 = %894.0;
  %901 = @func_6686() /* ty=Tensor[(11, 13, 4), float32] */;
  %902 = %895.6;
  %903 = %896.0;
  %904 = %899.0;
  (%900, %901, %902, %903, %904, %var_9512)
}

def @func_1798() -> (Tensor[(11, 13, 4), float32],) {
  %907 = fn () -> (Tensor[(11, 13, 4), float32],) {
    %905 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %906 = %905.5;
    (%906,)
  };
  %907() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_3086() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) {
  %908 = @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %909 = @func_2994() /* ty=(Tensor[(13, 3, 10), float64], Tensor[(?, 4, 3), uint16], Tensor[(12), float32], Tensor[(11, 13, 4), float32]) */;
  %910 = @func_2103() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %911 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %912 = @func_2955() /* ty=Tensor[(11, 13, 4), float32] */;
  %913 = %908.0;
  %914 = %909.3;
  %915 = %910.0;
  %916 = %911.1;
  (%912, %913, %914, %915, %916)
}

def @func_4208() -> (Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) {
  @func_4206() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */
}

def @func_2292() -> Tensor[(11, 13, 4), float32] {
  %918 = fn () -> Tensor[(11, 13, 4), float32] {
    %917 = @func_2103() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %917.0
  };
  %918() /* ty=Tensor[(11, 13, 4), float32] */
}

def @func_10782(%var_10780: Tensor[(40, 2), float32]) -> (Tensor[(40, 2), int32], Tensor[(40, 2), bool]) {
  @func_10779(%var_10780) /* ty=(Tensor[(40, 2), int32], Tensor[(40, 2), bool]) */
}

def @func_11738(%var_11737: uint8) -> (Tensor[(14, 4, 6), uint8], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %925 = fn (%var_11697: uint8) -> (Tensor[(14, 4, 6), uint8], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %919 = cast(%var_11697, dtype="uint8") /* ty=uint8 */;
    %920 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 4, 6), uint8] */, dtype="uint8") /* ty=Tensor[(14, 4, 6), uint8] */;
    %921 = @func_5433() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %922 = bitwise_and(%919, %920) /* ty=Tensor[(14, 4, 6), uint8] */;
    %923 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
    %924 = %921.0;
    (%922, %923, %924)
  };
  %925(%var_11737) /* ty=(Tensor[(14, 4, 6), uint8], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_5283(%var_5261: Tensor[(5, 78), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(10), float32], Tensor[(5, 78), float32]) {
  %926 = @func_1640() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(4, 4, 5), float64], Tensor[(1, 80), float64]) */;
  %927 = cast(%var_5261, dtype="float32") /* ty=Tensor[(5, 78), float32] */;
  %928 = reshape(%927, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %929 = @func_3823(%928) /* ty=(Tensor[(11, 13, 4), int16], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(11, 13, 4), float32]) */;
  %930 = %926.1;
  %931 = %929.2;
  (%930, %931, %var_5261)
}

def @func_1396() -> (Tensor[(11, 13, 4), float32],) {
  @func_1394() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_1394() -> (Tensor[(11, 13, 4), float32],) {
  %932 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %933 = %932.0;
  %934 = cast(%933, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %935 = log2(%934) /* ty=Tensor[(11, 13, 4), float32] */;
  (%935,)
}

def @func_9016() -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) {
  %940 = fn () -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) {
    %936 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
    %937 = @func_2243() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %938 = %936.1;
    %939 = %937.1;
    (%938, %939)
  };
  %940() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32]) */
}

def @func_4096(%var_4094: Tensor[(11, 13, 4), float32]) -> Tensor[(11, 13, 4), bool] {
  @func_4093(%var_4094) /* ty=Tensor[(11, 13, 4), bool] */
}

def @func_940(%var_938: Tensor[(1, 1, 10), float32], %var_939: Tensor[(13, 3, 10), float32]) -> (Tensor[(13, 3, 10), bool],) {
  %944 = fn (%var_926: Tensor[(1, 1, 10), float32], %var_927: Tensor[(13, 3, 10), float32]) -> (Tensor[(13, 3, 10), bool],) {
    %941 = cast(%var_926, dtype="bool") /* ty=Tensor[(1, 1, 10), bool] */;
    %942 = cast(%var_927, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
    %943 = less_equal(%941, %942) /* ty=Tensor[(13, 3, 10), bool] */;
    (%943,)
  };
  %944(%var_938, %var_939) /* ty=(Tensor[(13, 3, 10), bool],) */
}

def @func_11466(%var_11422: Tensor[(4, 4, 5), float64]) -> (Tensor[(4, 4, 5), int16], Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), uint32]) {
  %945 = @func_2086() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float64]) */;
  %946 = %945.0;
  %947 = cast(%var_11422, dtype="int16") /* ty=Tensor[(4, 4, 5), int16] */;
  %948 = shape_of(%946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%946, dtype="int16") /* ty=Tensor[(4, 4, 5), int16] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %951 = @func_6593() /* ty=(Tensor[(11, 13, 4), float64],) */;
  %952 = %951.0;
  %953 = cast(%952, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
  %954 = reshape(%953, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
  %955 = add(%949, %950) /* ty=Tensor[(4, 4, 5), int16] */;
  %956 = @func_2333(%954) /* ty=Tensor[(11, 13, 4), uint32] */;
  (%955, %952, %956)
}

def @func_6917() -> (Tensor[(11, 13, 4), float32],) {
  @func_6915() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_5035() -> Tensor[(13, 3, 10), bool] {
  %957 = @func_3764() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
  %957.1
}

def @func_8660() -> (Tensor[(11, 13, 4), float32],) {
  @func_8658() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_798(%var_794: Tensor[(4, 4, 5), float64]) -> (Tensor[(4, 4, 5), float64],) {
  %958 = cast(%var_794, dtype="float64") /* ty=Tensor[(4, 4, 5), float64] */;
  %959 = cos(%958) /* ty=Tensor[(4, 4, 5), float64] */;
  (%959,)
}

def @func_5524() -> (Tensor[(11, 13, 4), float32],) {
  @func_5522() /* ty=(Tensor[(11, 13, 4), float32],) */
}

def @func_9546(%var_9540: Tensor[(10, 9, 10), float32]) -> (Tensor[(10, 9, 10), float32],) {
  %960 = cast(%var_9540, dtype="float32") /* ty=Tensor[(10, 9, 10), float32] */;
  %961 = sigmoid(%960) /* ty=Tensor[(10, 9, 10), float32] */;
  (%961,)
}

def @func_3168() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) {
  %975 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) {
    %962 = @func_2560() /* ty=(Tensor[(11, 13, 4), float32],) */;
    %963 = cast(meta[relay.Constant][37] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %964 = cast(meta[relay.Constant][37] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %965 = reshape(%963, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
    %966 = reshape(%964, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
    %967 = @func_2510(%965, %966) /* ty=(Tensor[(5, 12, 13), float64], Tensor[(11, 13, 4), float32]) */;
    %968 = @func_2955() /* ty=Tensor[(11, 13, 4), float32] */;
    %969 = cast(%968, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %970 = reshape(%969, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float32] */;
    %971 = @func_1711(%970) /* ty=(Tensor[(11, 13, 4), uint8],) */;
    %972 = %962.0;
    %973 = %967.1;
    %974 = %971.0;
    (%968, %972, %973, meta[relay.Constant][37] /* ty=Tensor[(780), float64] */, %974)
  };
  %975() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(780), float64], Tensor[(11, 13, 4), uint8]) */
}

def @func_8276() -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  %980 = fn () -> (Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
    %976 = @func_6745() /* ty=(Tensor[(13, 3, 10), bool],) */;
    %977 = @func_7819() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %978 = %976.0;
    %979 = %977.1;
    (%978, %979)
  };
  %980() /* ty=(Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */
}

def @func_11370() -> (Tensor[(11, 13, 4), float64],) {
  %981 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  (%981,)
}

def @func_8521() -> (Tensor[(4, 4, 5), bool], Tensor[(11, 13, 4), float32]) {
  %982 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %983 = %982.1;
  %984 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 4, 5), float32] */, dtype="bool") /* ty=Tensor[(4, 4, 5), bool] */;
  %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%983, dtype="bool") /* ty=Tensor[(4, 4, 5), bool] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %988 = @func_2700() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32]) */;
  %989 = equal(%986, %987) /* ty=Tensor[(4, 4, 5), bool] */;
  %990 = %988.1;
  (%989, %990)
}

def @func_12440(%var_12438: int32) -> (Tensor[(11, 13, 4), float32], Tensor[(1296), bool], Tensor[(20, 4), float32]) {
  @func_12437(%var_12438) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(1296), bool], Tensor[(20, 4), float32]) */
}

def @func_2244() -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  %1000 = fn () -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
    %991 = @func_1231() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(10), float32], Tensor[(390), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool]) */;
    %992 = %991.0;
    %993 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %994 = shape_of(%992, dtype="int32") /* ty=Tensor[(3), int32] */;
    %995 = cast(%992, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %997 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %998 = divide(%995, %996) /* ty=Tensor[(11, 13, 4), float32] */;
    %999 = sin(%997) /* ty=Tensor[(11, 13, 4), float32] */;
    (%998, %999)
  };
  %1000() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

def @func_9705() -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64]) {
  @func_9703() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float64]) */
}

def @func_11010() -> (Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float32]) {
  %1001 = @func_2626() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %1002 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
  %1003 = %1001.0;
  %1004 = %1002.1;
  (%1003, %1004)
}

def @func_6503() -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float64]) {
  %1009 = fn () -> (Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float64]) {
    %1005 = @func_5637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64]) */;
    %1006 = @func_2883() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(4, 4, 5), float32]) */;
    %1007 = %1005.1;
    %1008 = %1006.0;
    (%1007, %1008)
  };
  %1009() /* ty=(Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float64]) */
}

def @func_3647() -> Tensor[(4, 4, 5), float64] {
  @func_3645() /* ty=Tensor[(4, 4, 5), float64] */
}

def @func_4073(%var_4069: Tensor[(16, 14, 4), float32], %var_4070: int32, %var_4071: Tensor[(2, 648), int32], %var_4072: Tensor[(16, 14, 4), float32]) -> (Tensor[(?, 4, 3), uint16], int32, Tensor[(2, 648), int32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(16, 14, 4), bool], Tensor[(16, 14, 4), float64]) {
  %1035 = fn (%var_3975: Tensor[(16, 14, 4), float32], %var_3980: int32, %var_3981: Tensor[(2, 648), int32], %var_3999: Tensor[(16, 14, 4), float32]) -> (Tensor[(?, 4, 3), uint16], int32, Tensor[(2, 648), int32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(16, 14, 4), bool], Tensor[(16, 14, 4), float64]) {
    %1010 = cast(%var_3980, dtype="int32") /* ty=int32 */;
    %1011 = cast(%var_3981, dtype="int32") /* ty=Tensor[(2, 648), int32] */;
    %1012 = reshape(%1010, newshape=[]) /* ty=int32 */;
    %1013 = reshape(%1011, newshape=[9, 9, 16]) /* ty=Tensor[(9, 9, 16), int32] */;
    %1014 = @func_1927(%1012, %1013) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(?, 4, 3), uint16], Tensor[(1, 12), float32], Tensor[(4, 4, 5), float64], Tensor[(20, 4), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64]) */;
    %1015 = @func_1552() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(4, 4, 5), float64], Tensor[(40, 2), float32]) */;
    %1016 = cast(%var_3975, dtype="float32") /* ty=Tensor[(16, 14, 4), float32] */;
    %1017 = asin(%1016) /* ty=Tensor[(16, 14, 4), float32] */;
    %1018 = cast(%1017, dtype="float32") /* ty=Tensor[(16, 14, 4), float32] */;
    %1019 = asinh(%1018) /* ty=Tensor[(16, 14, 4), float32] */;
    %1020 = cast(%var_3999, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
    %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1022 = cast(%1019, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
    %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1024 = logical_and(%1022, %1023) /* ty=Tensor[(16, 14, 4), bool] */;
    %1025 = cast(%1024, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
    %1026 = shape_of(%1017, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1027 = cast(%1017, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
    %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1029 = cast(%1024, dtype="float64") /* ty=Tensor[(16, 14, 4), float64] */;
    %1030 = %1014.1;
    %1031 = %1015.1;
    %1032 = @func_2812() /* ty=Tensor[(11, 13, 4), float32] */;
    %1033 = greater_equal(%1027, %1028) /* ty=Tensor[(16, 14, 4), bool] */;
    %1034 = log10(%1029) /* ty=Tensor[(16, 14, 4), float64] */;
    (%1030, %var_3980, %var_3981, %1031, %1032, %1033, %1034)
  };
  %1035(%var_4069, %var_4070, %var_4071, %var_4072) /* ty=(Tensor[(?, 4, 3), uint16], int32, Tensor[(2, 648), int32], Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(16, 14, 4), bool], Tensor[(16, 14, 4), float64]) */
}

def @func_7150() -> (Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) {
  @func_7148() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(13, 3, 10), bool], Tensor[(11, 13, 4), float32]) */
}

def @func_6047(%var_6045: Tensor[(572), float32]) -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(6, 216), int32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) {
  @func_6044(%var_6045) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(6, 216), int32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */
}

def @func_7585(%var_7583: Tensor[(1, 3, 16), float64]) -> (Tensor[(1, 3, 16), float64], Tensor[(11, 13, 4), float32]) {
  @func_7582(%var_7583) /* ty=(Tensor[(1, 3, 16), float64], Tensor[(11, 13, 4), float32]) */
}

def @func_9417(%var_9416: Tensor[(9, 13, 15), float32]) -> Tensor[(9, 13, 15), int8] {
  %1047 = fn (%var_9405: Tensor[(9, 13, 15), float32]) -> Tensor[(9, 13, 15), int8] {
    %1036 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
    %1037 = shape_of(%var_9405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1038 = cast(%var_9405, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
    %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1040 = mod(%1038, %1039) /* ty=Tensor[(9, 13, 15), float32] */;
    %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
    %1042 = rsqrt(%1041) /* ty=Tensor[(9, 13, 15), float32] */;
    %1043 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 13, 15), float32] */, dtype="int8") /* ty=Tensor[(9, 13, 15), int8] */;
    %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1045 = cast(%1042, dtype="int8") /* ty=Tensor[(9, 13, 15), int8] */;
    %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_or(%1045, %1046) /* ty=Tensor[(9, 13, 15), int8] */
  };
  %1047(%var_9416) /* ty=Tensor[(9, 13, 15), int8] */
}

def @func_12077(%var_12076: Tensor[(10), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64], Tensor[(10), float32], int32, Tensor[(13, 3, 10), float64], Tensor[(11, 13, 4), float32], Tensor[(?, 390), float32]) {
  %1071 = fn (%var_12004: Tensor[(10), float32]) -> (Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64], Tensor[(10), float32], int32, Tensor[(13, 3, 10), float64], Tensor[(11, 13, 4), float32], Tensor[(?, 390), float32]) {
    %1048 = @func_11198() /* ty=Tensor[(11, 13, 4), float64] */;
    %1049 = cast(%1048, dtype="float32") /* ty=Tensor[(11, 13, 4), float32] */;
    %1050 = reshape(%1049, newshape=[572]) /* ty=Tensor[(572), float32] */;
    %1051 = @func_6044(%1050) /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), uint16], Tensor[(572), float32], Tensor[(6, 216), int32], int32, Tensor[(11, 13, 4), float64], Tensor[(11, 13, 4), float32]) */;
    %1052 = cast(%var_12004, dtype="float32") /* ty=Tensor[(10), float32] */;
    %1053 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 390), float32] */, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
    %1054 = reshape(%1052, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float32] */;
    %1055 = reshape(%1053, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float32] */;
    %1056 = @func_937(%1054, %1055) /* ty=(Tensor[(13, 3, 10), bool],) */;
    %1057 = %1056.0;
    %1058 = cast(%1057, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
    %1059 = @func_10637() /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */;
    %1060 = cast(%1057, dtype="uint64") /* ty=Tensor[(13, 3, 10), uint64] */;
    %1061 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(1, 390), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1062 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 390), float32] */, dtype="uint64") /* ty=Tensor[(1, 390), uint64] */;
    %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1064 = add(%1062, %1063) /* ty=Tensor[(?, 390), uint64] */;
    %1065 = cast(%1064, dtype="float32") /* ty=Tensor[(?, 390), float32] */;
    %1066 = @func_2382() /* ty=Tensor[(11, 13, 4), float32] */;
    %1067 = %1051.4;
    %1068 = log2(%1058) /* ty=Tensor[(13, 3, 10), float64] */;
    %1069 = %1059.1;
    %1070 = cos(%1065) /* ty=Tensor[(?, 390), float32] */;
    (%1066, %1048, %var_12004, %1067, %1068, %1069, %1070)
  };
  %1071(%var_12076) /* ty=(Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float64], Tensor[(10), float32], int32, Tensor[(13, 3, 10), float64], Tensor[(11, 13, 4), float32], Tensor[(?, 390), float32]) */
}

def @func_7248() -> Tensor[(11, 13, 4), float32] {
  %1072 = @func_5404() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %1072.0
}

def @func_6593() -> (Tensor[(11, 13, 4), float64],) {
  %1073 = @func_5336() /* ty=Tensor[(11, 13, 4), float64] */;
  (%1073,)
}

def @func_2513(%var_2511: Tensor[(5, 12, 13), float64], %var_2512: Tensor[(5, 12, 13), float64]) -> (Tensor[(5, 12, 13), float64], Tensor[(11, 13, 4), float32]) {
  %1080 = fn (%var_2473: Tensor[(5, 12, 13), float64], %var_2474: Tensor[(5, 12, 13), float64]) -> (Tensor[(5, 12, 13), float64], Tensor[(11, 13, 4), float32]) {
    %1074 = cast(%var_2474, dtype="float64") /* ty=Tensor[(5, 12, 13), float64] */;
    %1075 = shape_of(%var_2473, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1076 = cast(%var_2473, dtype="float64") /* ty=Tensor[(5, 12, 13), float64] */;
    %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1078 = floor_divide(%1076, %1077) /* ty=Tensor[(5, 12, 13), float64] */;
    %1079 = @func_2291() /* ty=Tensor[(11, 13, 4), float32] */;
    (%1078, %1079)
  };
  %1080(%var_2511, %var_2512) /* ty=(Tensor[(5, 12, 13), float64], Tensor[(11, 13, 4), float32]) */
}

def @func_8396() -> Tensor[(11, 13, 4), float32] {
  %1081 = @func_7648() /* ty=(Tensor[(11, 13, 4), float32],) */;
  %1081.0
}

def @func_4888() -> (Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), bool], Tensor[(3, 11, 4), int16], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), float32]) {
  @func_4886() /* ty=(Tensor[(4, 4, 5), float64], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), bool], Tensor[(3, 11, 4), int16], Tensor[(11, 13, 4), float32], Tensor[(3, 11, 4), float32]) */
}

def @func_5605() -> (Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) {
  @func_5603() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32], Tensor[(11, 13, 4), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

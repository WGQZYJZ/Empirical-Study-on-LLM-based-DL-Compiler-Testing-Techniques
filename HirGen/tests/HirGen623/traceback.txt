==========mod==========
#[version = "0.0.5"]
def @func_14322(%var_14253: Tensor[(64, 1), float32], %var_14286: Tensor[(1815), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(4, 16, 1), float32], Tensor[(64, 1), float32], Tensor[(3, 11, 2), float64], Tensor[(48), bool], Tensor[(780), float32], Tensor[(1815), float64], Tensor[(4, 100), bool]) {
  %0 = @func_12584() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %2 = reshape(%1, newshape=[5, 10]) /* ty=Tensor[(5, 10), float32] */;
  %3 = @func_12039(%2) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(50), float32], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) */;
  %4 = cast(%var_14253, dtype="float32") /* ty=Tensor[(64, 1), float32] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 100), float32] */, dtype="float32") /* ty=Tensor[(4, 100), float32] */;
  %6 = reshape(%4, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), float32] */;
  %7 = reshape(%5, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %8 = @func_8745(%6, %7) /* ty=(Tensor[(4, 16, 1), float32], Tensor[(400), float32], Tensor[(240), float32], Tensor[(400), float32], float64) */;
  %9 = %3.2;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %12 = reshape(%10, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
  %13 = reshape(%11, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %14 = @func_9207(%12, %13) /* ty=(Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) */;
  %15 = cast(%var_14286, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %16 = reshape(%15, newshape=[1815]) /* ty=Tensor[(1815), float64] */;
  %17 = @func_11188(%16) /* ty=(Tensor[(64), int64], Tensor[(6, 3, 1), float64], Tensor[(1815), float64], Tensor[(780), float32]) */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 100), float32] */, dtype="float64") /* ty=Tensor[(4, 100), float64] */;
  %19 = atanh(%18) /* ty=Tensor[(4, 100), float64] */;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(4, 100), float64] */;
  %21 = atan(%20) /* ty=Tensor[(4, 100), float64] */;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(4, 100), float64] */;
  %23 = erf(%22) /* ty=Tensor[(4, 100), float64] */;
  %24 = cast(%19, dtype="bool") /* ty=Tensor[(4, 100), bool] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(2), int32] */;
  %26 = cast(%23, dtype="bool") /* ty=Tensor[(4, 100), bool] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %28 = %0.0;
  %29 = %8.0;
  %30 = %14.0;
  %31 = %17.3;
  %32 = less(%26, %27) /* ty=Tensor[(4, 100), bool] */;
  (%28, %9, meta[relay.Constant][0] /* ty=Tensor[(50), float32] */, %29, %var_14253, %30, meta[relay.Constant][2] /* ty=Tensor[(48), bool] */, %31, %var_14286, %32)
}

def @func_7482(%var_7480: Tensor[(15), int16]) -> (Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) {
  %33 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %34 = cast(%var_7480, dtype="int16") /* ty=Tensor[(15), int16] */;
  %35 = reshape(%34, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %36 = @func_1381(%35) /* ty=(Tensor[(15, 5, 6), float32], Tensor[(15, ?), int16], Tensor[(15, 1), int16], Tensor[(15, 1), int16], Tensor[(6, 60), bool]) */;
  %37 = %33.0;
  %38 = %36.3;
  (%37, %38, %var_7480)
}

def @func_13820() -> (Tensor[(15), int16], Tensor[(3, 11, 2), float32]) {
  %39 = @func_8097() /* ty=(Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) */;
  %40 = @func_11649() /* ty=Tensor[(15), int16] */;
  %41 = %39.3;
  (%40, %41)
}

def @func_10336() -> (Tensor[(3, 11, 2), float32],) {
  %42 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %43 = %42.0;
  (%43,)
}

def @func_11503() -> Tensor[(15), int16] {
  %44 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
  %44.2
}

def @func_6922() -> (Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %46 = cast(meta[relay.Constant][4] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %47 = reshape(%46, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %48 = @func_5182(%47) /* ty=(Tensor[(11, 11, 15), float64],) */;
  %49 = atanh(%45) /* ty=Tensor[(16, 11, 14), float64] */;
  %50 = %48.0;
  (%49, %50, meta[relay.Constant][4] /* ty=Tensor[(1815), float64] */)
}

def @func_11419() -> (Tensor[(3, 11, 2), float64],) {
  %51 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %52 = %51.0;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %54 = asinh(%53) /* ty=Tensor[(3, 11, 2), float64] */;
  (%54,)
}

def @func_7255(%var_7248: Tensor[(3, 11, 2), float32]) -> (Tensor[(3, 11, 2), int8],) {
  %55 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
  %56 = %55.0;
  %57 = cast(%var_7248, dtype="int8") /* ty=Tensor[(3, 11, 2), int8] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%56, dtype="int8") /* ty=Tensor[(3, 11, 2), int8] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %61 = right_shift(%59, %60) /* ty=Tensor[(3, 11, 2), int8] */;
  (%61,)
}

def @func_4769(%var_4750: bool) -> (Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) {
  %62 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 10, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %63 = acosh(%62) /* ty=Tensor[(6, 10, 4), float32] */;
  %64 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 10, 4), float32] */, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = cast(%var_4750, dtype="bool") /* ty=bool */;
  %69 = reshape(%68, newshape=[]) /* ty=bool */;
  %70 = cast(meta[relay.Constant][6] /* ty=Tensor[(2100), uint64] */, dtype="uint64") /* ty=Tensor[(2100), uint64] */;
  %71 = reshape(%70, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), uint64] */;
  %72 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 10, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %73 = sin(%72) /* ty=Tensor[(6, 10, 4), float32] */;
  %74 = cast(%73, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %75 = cast(%var_4750, dtype="bool") /* ty=bool */;
  %76 = greater(%66, %67) /* ty=Tensor[(6, 10, 4), bool] */;
  %77 = @func_1815(%69) /* ty=Tensor[(9, 10, 13), float32] */;
  %78 = @func_322(%71) /* ty=Tensor[(14, 10, 15), bool] */;
  %79 = not_equal(%74, %75) /* ty=Tensor[(6, 10, 4), bool] */;
  (%76, %77, %78, meta[relay.Constant][6] /* ty=Tensor[(2100), uint64] */, %79)
}

def @func_14425(%var_14411: Tensor[(1, 312), int16], %var_14412: Tensor[(315), bool], %var_14413: Tensor[(5, 156), float32]) -> (bool, Tensor[(315), bool], Tensor[(1, 312), int16], Tensor[(315), bool], Tensor[(5, 156), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(240), bool], Tensor[(1350), float64]) {
  %80 = cast(%var_14411, dtype="int16") /* ty=Tensor[(1, 312), int16] */;
  %81 = cast(%var_14412, dtype="bool") /* ty=Tensor[(315), bool] */;
  %82 = cast(%var_14413, dtype="float32") /* ty=Tensor[(5, 156), float32] */;
  %83 = reshape(%80, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), int16] */;
  %84 = reshape(%81, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %85 = reshape(%82, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %86 = @func_8005(%83, %84, %85) /* ty=(Tensor[(13, 8, 3), bool], Tensor[(13, 8, 3), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */;
  %87 = cast(meta[relay.Constant][7] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %88 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %89 = cast(meta[relay.Constant][9] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %90 = reshape(%87, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
  %91 = reshape(%88, newshape=[6, 10, 4]) /* ty=Tensor[(6, 10, 4), bool] */;
  %92 = reshape(%89, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %93 = @func_10957(%90, %91, %92) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(48), bool], bool, Tensor[(3, 11, 2), float32], Tensor[(6, 10, 4), bool], Tensor[(16, 11, 14), float64], Tensor[(1350), float64], Tensor[(3, 11, 2), float64]) */;
  %94 = @func_14032() /* ty=bool */;
  %95 = %86.3;
  %96 = %93.1;
  (%94, %95, %var_14411, %var_14412, %var_14413, %96, meta[relay.Constant][7] /* ty=Tensor[(1080), float64] */, meta[relay.Constant][8] /* ty=Tensor[(240), bool] */, meta[relay.Constant][9] /* ty=Tensor[(1350), float64] */)
}

def @func_14032() -> bool {
  %97 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
  %97.2
}

def @func_13527(%var_13483: Tensor[(315, 1), bool], %var_13486: float64, %var_13487: Tensor[(1280), float64]) -> (Tensor[(15), int16], Tensor[(11, 11, 15), float64], Tensor[(315, 1), bool], Tensor[(780), float32], float64, Tensor[(1280), float64], Tensor[(360), bool], Tensor[(18), float64]) {
  %98 = cast(%var_13483, dtype="bool") /* ty=Tensor[(315, 1), bool] */;
  %99 = cast(meta[relay.Constant][10] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %100 = cast(meta[relay.Constant][11] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %101 = cast(%var_13486, dtype="float64") /* ty=float64 */;
  %102 = cast(%var_13487, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %103 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), bool] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %104 = reshape(%98, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %105 = reshape(%99, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %106 = reshape(%100, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %107 = reshape(%101, newshape=[]) /* ty=float64 */;
  %108 = reshape(%102, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %109 = reshape(%103, newshape=[360, 1]) /* ty=Tensor[(360, 1), bool] */;
  %110 = @func_8966(%104, %105, %106, %107, %108, %109) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) */;
  %111 = cast(meta[relay.Constant][11] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %112 = @func_11649() /* ty=Tensor[(15), int16] */;
  %113 = %110.7;
  %114 = cos(%111) /* ty=Tensor[(18), float64] */;
  (%112, %113, %var_13483, meta[relay.Constant][10] /* ty=Tensor[(780), float32] */, %var_13486, %var_13487, meta[relay.Constant][12] /* ty=Tensor[(360), bool] */, %114)
}

def @func_7338(%var_7326: Tensor[(1350), float64]) -> (Tensor[(16, 11, 14), float64], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) {
  %115 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %116 = cast(%var_7326, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %117 = cast(%var_7326, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %118 = reshape(%116, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %119 = reshape(%117, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %120 = @func_5041(%118, %119) /* ty=(Tensor[(15, 9, 10), float64],) */;
  %121 = %115.0;
  %122 = %120.0;
  (%121, %122, %var_7326)
}

def @func_11947() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) {
  %123 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %124 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %125 = reshape(%124, newshape=[]) /* ty=bool */;
  %126 = @func_4769(%125) /* ty=(Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) */;
  %127 = %123.0;
  %128 = @func_7077() /* ty=Tensor[(3, 11, 2), float32] */;
  %129 = %126.2;
  (%127, %128, %129, False /* ty=bool */)
}

def @func_7521(%var_7503: Tensor[(3, 11, 2), float32], %var_7511: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) {
  %130 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
  %131 = cast(%var_7503, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %135 = cast(%var_7511, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %136 = cast(%var_7511, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %137 = reshape(%135, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %138 = reshape(%136, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %139 = @func_5041(%137, %138) /* ty=(Tensor[(15, 9, 10), float64],) */;
  %140 = mod(%133, %134) /* ty=Tensor[(3, 11, 2), float32] */;
  %141 = %139.0;
  (%140, %141, %var_7511)
}

def @func_11053() -> Tensor[(3, 11, 2), float32] {
  %142 = @func_7906() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
  %142.0
}

def @func_13441(%var_13434: Tensor[(780), float32], %var_13435: Tensor[(18), float64], %var_13436: float64, %var_13437: Tensor[(1280), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 8), float32], Tensor[(480), bool], Tensor[(364), float64], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
  %143 = cast(meta[relay.Constant][13] /* ty=Tensor[(480), bool] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %144 = reshape(%143, newshape=[4, 120]) /* ty=Tensor[(4, 120), bool] */;
  %145 = @func_13364(%144) /* ty=(Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(4, 120), bool]) */;
  %146 = cast(meta[relay.Constant][14] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %147 = cast(meta[relay.Constant][14] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %148 = cast(%var_13434, dtype="float32") /* ty=Tensor[(780), float32] */;
  %149 = cast(%var_13435, dtype="float64") /* ty=Tensor[(18), float64] */;
  %150 = cast(%var_13436, dtype="float64") /* ty=float64 */;
  %151 = cast(%var_13437, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %152 = cast(meta[relay.Constant][15] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %153 = reshape(%146, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %154 = reshape(%147, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %155 = reshape(%148, newshape=[780, 1]) /* ty=Tensor[(780, 1), float32] */;
  %156 = reshape(%149, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %157 = reshape(%150, newshape=[]) /* ty=float64 */;
  %158 = reshape(%151, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %159 = reshape(%152, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %160 = @func_6131(%153, %154, %155, %156, %157, %158, %159) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */;
  %161 = @func_11053() /* ty=Tensor[(3, 11, 2), float32] */;
  %162 = %145.1;
  %163 = %160.10;
  (%161, %162, meta[relay.Constant][13] /* ty=Tensor[(480), bool] */, %163, meta[relay.Constant][14] /* ty=Tensor[(315), bool] */, %var_13434, %var_13435, %var_13436, %var_13437, meta[relay.Constant][15] /* ty=Tensor[(364), float64] */)
}

def @func_10861() -> Tensor[(64), float32] {
  %164 = @func_9464() /* ty=(Tensor[(3, 11, 2), float64], float64, Tensor[(64), float32], Tensor[(400), float32]) */;
  %164.2
}

def @func_1324(%var_1283: Tensor[(6, 10, 13), float32]) -> (Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) {
  %165 = cast(meta[relay.Constant][16] /* ty=Tensor[(360), bool] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %166 = cast(meta[relay.Constant][17] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %167 = reshape(%165, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), bool] */;
  %168 = reshape(%166, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %169 = @func_934(%167, %168) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) */;
  %170 = cast(%var_1283, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
  %171 = log2(%170) /* ty=Tensor[(6, 10, 13), float32] */;
  %172 = cast(%var_1283, dtype="int8") /* ty=Tensor[(6, 10, 13), int8] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="int8") /* ty=Tensor[(6, 10, 13), int8] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %176 = right_shift(%174, %175) /* ty=Tensor[(6, 10, 13), int8] */;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %178 = cast(meta[relay.Constant][17] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %179 = reshape(%178, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %180 = @func_141(%179) /* ty=(Tensor[(9, 15, 3), uint16], Tensor[(9, 15, 3), float32], Tensor[(9, 15, 3), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(15, ?), int16]) */;
  %181 = %169.0;
  %182 = rsqrt(%177) /* ty=Tensor[(6, 10, 13), float64] */;
  %183 = %180.1;
  (%181, meta[relay.Constant][16] /* ty=Tensor[(360), bool] */, meta[relay.Constant][17] /* ty=Tensor[(15), int16] */, %182, %183)
}

def @func_11810() -> (uint16,) {
  %184 = @func_8097() /* ty=(Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) */;
  %185 = %184.1;
  (%185,)
}

def @func_14155(%var_14084: Tensor[(2100), uint64], %var_14117: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(18), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool], Tensor[(2100), uint8], Tensor[(3, 11, 2), float32], Tensor[(1350), float64], Tensor[(15), int16]) {
  %186 = @func_14014() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %187 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %188 = cast(meta[relay.Constant][18] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %189 = cast(meta[relay.Constant][18] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %190 = cast(meta[relay.Constant][19] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %191 = cast(meta[relay.Constant][20] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %192 = reshape(%188, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %193 = reshape(%189, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %194 = reshape(%190, newshape=[50]) /* ty=Tensor[(50), float32] */;
  %195 = reshape(%191, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %196 = @func_2733(%192, %193, %194, %195) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
  %197 = cast(%var_14084, dtype="uint64") /* ty=Tensor[(2100), uint64] */;
  %198 = reshape(%197, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), uint64] */;
  %199 = @func_322(%198) /* ty=Tensor[(14, 10, 15), bool] */;
  %200 = cast(%199, dtype="uint8") /* ty=Tensor[(14, 10, 15), uint8] */;
  %201 = shape_of(%var_14084, dtype="int32") /* ty=Tensor[(1), int32] */;
  %202 = cast(%var_14084, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %204 = %187.0;
  %205 = cast(%204, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %206 = cast(%var_14117, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %207 = reshape(%205, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %208 = reshape(%206, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %209 = @func_7521(%207, %208) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %210 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
  %211 = %186.0;
  %212 = %196.3;
  %213 = bitwise_and(%202, %203) /* ty=Tensor[(2100), uint8] */;
  %214 = %209.0;
  %215 = %210.2;
  (%211, %204, %212, meta[relay.Constant][18] /* ty=Tensor[(1080), float64] */, meta[relay.Constant][19] /* ty=Tensor[(50), float32] */, meta[relay.Constant][20] /* ty=Tensor[(48), bool] */, %213, %214, %var_14117, %215)
}

def @func_7459() -> Tensor[(3, 11, 2), float32] {
  %216 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
  %216.1
}

def @func_934(%var_872: Tensor[(9, 10, 4), bool], %var_911: Tensor[(15, 1), int16]) -> (Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) {
  %217 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 10, 4), bool] */, dtype="bool") /* ty=Tensor[(9, 10, 4), bool] */;
  %218 = shape_of(%var_872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%var_872, dtype="bool") /* ty=Tensor[(9, 10, 4), bool] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %221 = cast(%var_911, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %222 = reshape(%221, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %223 = @func_34(%222) /* ty=(Tensor[(15, ?), int16],) */;
  %224 = logical_or(%219, %220) /* ty=Tensor[(9, 10, 4), bool] */;
  %225 = %223.0;
  (%224, %225, %var_911)
}

def @func_6489() -> Tensor[(3, 11, 2), float32] {
  %226 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %226.0
}

def @func_6131(%var_6057: Tensor[(15, 3, 7), bool], %var_6058: Tensor[(15, 3, 7), bool], %var_6089: Tensor[(780, 1), float32], %var_6094: Tensor[(18), float64], %var_6108: float64, %var_6109: Tensor[(1280), float64], %var_6112: Tensor[(364), float64]) -> (Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) {
  %227 = cast(%var_6058, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
  %228 = shape_of(%var_6057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%var_6057, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %231 = cast(%var_6089, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %232 = reshape(%231, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float32] */;
  %233 = @func_1324(%232) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */;
  %234 = cast(%var_6057, dtype="float64") /* ty=Tensor[(15, 3, 7), float64] */;
  %235 = cast(%var_6094, dtype="float64") /* ty=Tensor[(18), float64] */;
  %236 = reshape(%235, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %237 = cast(%var_6108, dtype="float64") /* ty=float64 */;
  %238 = cast(%var_6109, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %239 = reshape(%237, newshape=[]) /* ty=float64 */;
  %240 = reshape(%238, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %241 = cast(%var_6112, dtype="float64") /* ty=Tensor[(364), float64] */;
  %242 = cast(%var_6112, dtype="float64") /* ty=Tensor[(364), float64] */;
  %243 = reshape(%241, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %244 = reshape(%242, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %245 = @func_4339(%243, %244) /* ty=(Tensor[(9, 15, 3), float32], Tensor[(780), float32], Tensor[(7, 13, 4), bool]) */;
  %246 = cast(%var_6108, dtype="bool") /* ty=bool */;
  %247 = reshape(%246, newshape=[]) /* ty=bool */;
  %248 = cast(%var_6108, dtype="float64") /* ty=float64 */;
  %249 = @func_4181(%239, %240) /* ty=Tensor[(16, 5, 16), float64] */;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  %251 = reshape(%248, newshape=[]) /* ty=float64 */;
  %252 = reshape(%250, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %253 = cast(meta[relay.Constant][22] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %254 = cast(meta[relay.Constant][22] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %255 = cast(meta[relay.Constant][23] /* ty=Tensor[(50, 1), float32] */, dtype="float32") /* ty=Tensor[(50, 1), float32] */;
  %256 = cast(meta[relay.Constant][24] /* ty=Tensor[(48, 1), bool] */, dtype="bool") /* ty=Tensor[(48, 1), bool] */;
  %257 = reshape(%253, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %258 = reshape(%254, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %259 = reshape(%255, newshape=[50]) /* ty=Tensor[(50), float32] */;
  %260 = reshape(%256, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %261 = @func_2733(%257, %258, %259, %260) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
  %262 = logical_and(%229, %230) /* ty=Tensor[(15, 3, 7), bool] */;
  %263 = %233.3;
  %264 = atan(%234) /* ty=Tensor[(15, 3, 7), float64] */;
  %265 = @func_1409(%236) /* ty=Tensor[(6, 3, 1), float64] */;
  %266 = %245.1;
  %267 = @func_1815(%247) /* ty=Tensor[(9, 10, 13), float32] */;
  %268 = @func_4181(%251, %252) /* ty=Tensor[(16, 5, 16), float64] */;
  %269 = %261.4;
  (%262, %263, %var_6089, %264, %265, %var_6094, %249, %var_6108, %var_6109, %266, %var_6112, %267, %268, %269, meta[relay.Constant][22] /* ty=Tensor[(1080), float64] */, meta[relay.Constant][23] /* ty=Tensor[(50, 1), float32] */, meta[relay.Constant][24] /* ty=Tensor[(48, 1), bool] */)
}

def @func_14014() -> (Tensor[(3, 11, 2), float32],) {
  %270 = @func_10422() /* ty=(Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) */;
  %271 = %270.3;
  (%271,)
}

def @func_9968(%var_9921: float64, %var_9940: Tensor[(135, 10), float64], %var_9943: Tensor[(10, 78), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(15), int16], Tensor[(15, 9, 10), float64], Tensor[(135, 10), float64], Tensor[(780), float32], Tensor[(10, 78), float32]) {
  %272 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %273 = cast(%var_9921, dtype="float64") /* ty=float64 */;
  %274 = cast(meta[relay.Constant][25] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %275 = reshape(%273, newshape=[]) /* ty=float64 */;
  %276 = reshape(%274, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %277 = cast(%var_9940, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
  %278 = reshape(%277, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %279 = @func_7338(%278) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %280 = cast(%var_9943, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %281 = reshape(%280, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %282 = @func_6974(%281) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(780), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64]) */;
  %283 = %272.0;
  %284 = @func_4181(%275, %276) /* ty=Tensor[(16, 5, 16), float64] */;
  %285 = @func_8870() /* ty=Tensor[(15), int16] */;
  %286 = %279.1;
  %287 = %282.2;
  (%283, %284, %var_9921, meta[relay.Constant][25] /* ty=Tensor[(1280), float64] */, %285, %286, %var_9940, %287, %var_9943)
}

def @func_10196(%var_10191: Tensor[(13, 2, 12), float32]) -> (Tensor[(13, 2, 12), float32],) {
  %288 = cast(%var_10191, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
  %289 = sigmoid(%288) /* ty=Tensor[(13, 2, 12), float32] */;
  (%289,)
}

def @func_11375(%var_11361: bool) -> (Tensor[(3, 11, 2), float32], Tensor[(9, 10, 13), float32], bool) {
  %290 = cast(%var_11361, dtype="bool") /* ty=bool */;
  %291 = reshape(%290, newshape=[]) /* ty=bool */;
  %292 = @func_7459() /* ty=Tensor[(3, 11, 2), float32] */;
  %293 = @func_1815(%291) /* ty=Tensor[(9, 10, 13), float32] */;
  (%292, %293, %var_11361)
}

def @func_2733(%var_2671: Tensor[(10, 9, 12), float64], %var_2672: Tensor[(10, 9, 12), float64], %var_2696: Tensor[(50), float32], %var_2721: Tensor[(48), bool]) -> (Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) {
  %294 = cast(%var_2672, dtype="float64") /* ty=Tensor[(10, 9, 12), float64] */;
  %295 = shape_of(%var_2671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_2671, dtype="float64") /* ty=Tensor[(10, 9, 12), float64] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %298 = cast(meta[relay.Constant][27] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %299 = reshape(%298, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %300 = @func_1409(%299) /* ty=Tensor[(6, 3, 1), float64] */;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %302 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(18), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %303 = cast(meta[relay.Constant][27] /* ty=Tensor[(18), float64] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?), float32] */;
  %305 = cast(%var_2721, dtype="bool") /* ty=Tensor[(48), bool] */;
  %306 = cast(meta[relay.Constant][28] /* ty=Tensor[(480), bool] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %307 = reshape(%305, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), bool] */;
  %308 = reshape(%306, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), bool] */;
  %309 = cast(%var_2696, dtype="float32") /* ty=Tensor[(50), float32] */;
  %310 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 200), float32] */, dtype="float32") /* ty=Tensor[(2, 200), float32] */;
  %311 = reshape(%309, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %312 = reshape(%310, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %313 = @func_417(%311, %312) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %314 = %313.0;
  %315 = cast(%314, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
  %316 = mod(%296, %297) /* ty=Tensor[(10, 9, 12), float64] */;
  %317 = floor_mod(%303, %304) /* ty=Tensor[(18), float32] */;
  %318 = @func_1177(%307, %308) /* ty=Tensor[(6, 10, 8), float32] */;
  %319 = sinh(%315) /* ty=Tensor[(10, 5, 8), float32] */;
  (%316, %var_2696, meta[relay.Constant][26] /* ty=Tensor[(2, 200), float32] */, %317, %318, %var_2721, meta[relay.Constant][28] /* ty=Tensor[(480), bool] */, %319)
}

def @func_11980() -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16]) {
  %320 = @func_11815() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %321 = %320.0;
  %322 = @func_8870() /* ty=Tensor[(15), int16] */;
  (%321, %322)
}

def @func_9797(%var_9757: Tensor[(780), float32], %var_9758: float64, %var_9774: Tensor[(1350), float64], %var_9781: Tensor[(50, 15), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(780), float32], float64, Tensor[(15, 9, 10), float64], Tensor[(1350), float64], Tensor[(50, 15), float64]) {
  %323 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %324 = cast(%var_9774, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %325 = cast(%var_9774, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %326 = reshape(%324, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %327 = reshape(%325, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %328 = @func_5041(%326, %327) /* ty=(Tensor[(15, 9, 10), float64],) */;
  %329 = cast(%var_9757, dtype="float32") /* ty=Tensor[(780), float32] */;
  %330 = cast(%var_9758, dtype="float64") /* ty=float64 */;
  %331 = reshape(%329, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %332 = reshape(%330, newshape=[]) /* ty=float64 */;
  %333 = @func_7019(%331, %332) /* ty=(Tensor[(1815), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(390, 2), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */;
  %334 = %333.1;
  %335 = cast(%334, dtype="float64") /* ty=Tensor[(50, 1), float64] */;
  %336 = cast(%var_9781, dtype="float64") /* ty=Tensor[(50, 15), float64] */;
  %337 = %323.0;
  %338 = %328.0;
  %339 = mod(%335, %336) /* ty=Tensor[(50, 15), float64] */;
  (%337, %var_9757, %var_9758, %338, %var_9774, %339)
}

def @func_7124() -> Tensor[(3, 11, 2), float32] {
  @func_6489() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_11649() -> Tensor[(15), int16] {
  @func_9387() /* ty=Tensor[(15), int16] */
}

def @func_7019(%var_6999: Tensor[(390, 2), float32], %var_7001: float64) -> (Tensor[(1815), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(390, 2), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
  %340 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %341 = %340.2;
  %342 = cast(%341, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %343 = cast(meta[relay.Constant][29] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %344 = cast(meta[relay.Constant][29] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %345 = cast(%var_6999, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
  %346 = cast(meta[relay.Constant][30] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %347 = cast(%var_7001, dtype="float64") /* ty=float64 */;
  %348 = cast(meta[relay.Constant][31] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %349 = cast(meta[relay.Constant][32] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %350 = reshape(%343, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %351 = reshape(%344, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %352 = reshape(%345, newshape=[780, 1]) /* ty=Tensor[(780, 1), float32] */;
  %353 = reshape(%346, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %354 = reshape(%347, newshape=[]) /* ty=float64 */;
  %355 = reshape(%348, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %356 = reshape(%349, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %357 = @func_6131(%350, %351, %352, %353, %354, %355, %356) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */;
  %358 = cos(%342) /* ty=Tensor[(1815), float32] */;
  %359 = %357.15;
  (%358, %359, meta[relay.Constant][29] /* ty=Tensor[(315), bool] */, %var_6999, meta[relay.Constant][30] /* ty=Tensor[(18), float64] */, %var_7001, meta[relay.Constant][31] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][32] /* ty=Tensor[(364), float64] */)
}

def @func_12762(%var_12757: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(3, 11, 2), uint16], Tensor[(66), float32]) {
  %360 = cast(%var_12757, dtype="float32") /* ty=Tensor[(66), float32] */;
  %361 = reshape(%360, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %362 = @func_9387() /* ty=Tensor[(15), int16] */;
  %363 = @func_7403(%361) /* ty=Tensor[(3, 11, 2), uint16] */;
  (%362, %363, %var_12757)
}

def @func_14569() -> Tensor[(3, 11, 2), float32] {
  %364 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %364.0
}

def @func_5041(%var_5036: Tensor[(15, 9, 10), float64], %var_5037: Tensor[(15, 9, 10), float64]) -> (Tensor[(15, 9, 10), float64],) {
  %365 = cast(%var_5037, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  %366 = shape_of(%var_5036, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_5036, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %369 = floor_divide(%367, %368) /* ty=Tensor[(15, 9, 10), float64] */;
  (%369,)
}

def @func_8413() -> (Tensor[(15), int16],) {
  %370 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
  %371 = %370.2;
  (%371,)
}

def @func_1815(%var_1802: bool) -> Tensor[(9, 10, 13), float32] {
  %372 = cast(%var_1802, dtype="bool") /* ty=bool */;
  %373 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 10, 13), bool] */, dtype="bool") /* ty=Tensor[(9, 10, 13), bool] */;
  %374 = logical_and(%372, %373) /* ty=Tensor[(9, 10, 13), bool] */;
  %375 = cast(%374, dtype="float32") /* ty=Tensor[(9, 10, 13), float32] */;
  atan(%375) /* ty=Tensor[(9, 10, 13), float32] */
}

def @func_7788() -> Tensor[(3, 11, 2), float32] {
  @func_7077() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_5765(%var_5718: Tensor[(40, 10), float32], %var_5740: Tensor[(50), float32]) -> (Tensor[(1280), float64], Tensor[(240), float32], Tensor[(40, 10), float32], float64, Tensor[(10, 5, 8), float32], Tensor[(50), float32], Tensor[(16, 9, 11), float64]) {
  %376 = cast(meta[relay.Constant][34] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %377 = cast(%var_5718, dtype="float32") /* ty=Tensor[(40, 10), float32] */;
  %378 = cast(7.33577f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %379 = reshape(%376, newshape=[1, 15, 16]) /* ty=Tensor[(1, 15, 16), float32] */;
  %380 = reshape(%377, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %381 = reshape(%378, newshape=[]) /* ty=float64 */;
  %382 = @func_4518(%379, %380, %381) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */;
  %383 = cast(%var_5740, dtype="float32") /* ty=Tensor[(50), float32] */;
  %384 = cast(%var_5718, dtype="float32") /* ty=Tensor[(40, 10), float32] */;
  %385 = reshape(%383, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %386 = reshape(%384, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %387 = @func_417(%385, %386) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %388 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 9, 11), float32] */;
  %389 = cosh(%388) /* ty=Tensor[(16, 9, 11), float32] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(16, 9, 11), float64] */;
  %391 = %382.6;
  %392 = %387.0;
  %393 = log2(%390) /* ty=Tensor[(16, 9, 11), float64] */;
  (%391, meta[relay.Constant][34] /* ty=Tensor[(240), float32] */, %var_5718, 7.33577f64 /* ty=float64 */, %392, %var_5740, %393)
}

def @func_9279() -> (Tensor[(3, 11, 2), float32],) {
  %394 = @func_8678() /* ty=Tensor[(3, 11, 2), float32] */;
  (%394,)
}

def @func_1381(%var_1360: Tensor[(15, 1), int16]) -> (Tensor[(15, 5, 6), float32], Tensor[(15, ?), int16], Tensor[(15, 1), int16], Tensor[(15, 1), int16], Tensor[(6, 60), bool]) {
  %395 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %396 = cast(%var_1360, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %397 = reshape(%396, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %398 = @func_141(%397) /* ty=(Tensor[(9, 15, 3), uint16], Tensor[(9, 15, 3), float32], Tensor[(9, 15, 3), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(15, ?), int16]) */;
  %399 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 60), bool] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %400 = cast(%var_1360, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %401 = reshape(%399, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), bool] */;
  %402 = reshape(%400, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %403 = @func_934(%401, %402) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) */;
  %404 = erf(%395) /* ty=Tensor[(15, 5, 6), float32] */;
  %405 = %398.5;
  %406 = %403.2;
  (%404, %405, %var_1360, %406, meta[relay.Constant][37] /* ty=Tensor[(6, 60), bool] */)
}

def @func_11637(%var_11565: Tensor[(5, 10), float32]) -> (Tensor[(11, 11, 15), float64], Tensor[(480), bool], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(16, 11, 14), float64]) {
  %407 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %408 = cast(meta[relay.Constant][38] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %409 = cast(meta[relay.Constant][38] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %410 = cast(%var_11565, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %411 = cast(meta[relay.Constant][39] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %412 = reshape(%408, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %413 = reshape(%409, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %414 = reshape(%410, newshape=[50]) /* ty=Tensor[(50), float32] */;
  %415 = reshape(%411, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %416 = @func_2733(%412, %413, %414, %415) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
  %417 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %418 = %407.1;
  %419 = %416.6;
  %420 = %417.0;
  (%418, %419, meta[relay.Constant][38] /* ty=Tensor[(1080), float64] */, %var_11565, meta[relay.Constant][39] /* ty=Tensor[(48), bool] */, %420)
}

def @func_13893() -> (Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32]) {
  %421 = @func_11986() /* ty=(Tensor[(3, 11, 2), float64],) */;
  %422 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %423 = %421.0;
  %424 = @func_6489() /* ty=Tensor[(3, 11, 2), float32] */;
  %425 = %422.0;
  (%423, %424, %425)
}

def @func_13364(%var_13360: Tensor[(4, 120), bool]) -> (Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(4, 120), bool]) {
  %426 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
  %427 = cast(meta[relay.Constant][40] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %428 = cast(%var_13360, dtype="bool") /* ty=Tensor[(4, 120), bool] */;
  %429 = reshape(%427, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), bool] */;
  %430 = reshape(%428, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), bool] */;
  %431 = %426.2;
  %432 = @func_1177(%429, %430) /* ty=Tensor[(6, 10, 8), float32] */;
  (%431, %432, meta[relay.Constant][40] /* ty=Tensor[(48), bool] */, %var_13360)
}

def @func_9993() -> Tensor[(15), int16] {
  %433 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %433.0
}

def @func_11538(%var_11531: Tensor[(18), float64], %var_11532: float64, %var_11533: Tensor[(1280), float64], %var_11534: Tensor[(12, 30), bool]) -> (Tensor[(15), int16], Tensor[(360, 18), float64], Tensor[(315), bool], Tensor[(1, 780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(12, 30), bool]) {
  %434 = cast(meta[relay.Constant][41] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %435 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 780), float32] */, dtype="float32") /* ty=Tensor[(1, 780), float32] */;
  %436 = cast(%var_11531, dtype="float64") /* ty=Tensor[(18), float64] */;
  %437 = cast(%var_11532, dtype="float64") /* ty=float64 */;
  %438 = cast(%var_11533, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %439 = cast(%var_11534, dtype="bool") /* ty=Tensor[(12, 30), bool] */;
  %440 = reshape(%434, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %441 = reshape(%435, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %442 = reshape(%436, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %443 = reshape(%437, newshape=[]) /* ty=float64 */;
  %444 = reshape(%438, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %445 = reshape(%439, newshape=[360, 1]) /* ty=Tensor[(360, 1), bool] */;
  %446 = @func_8966(%440, %441, %442, %443, %444, %445) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) */;
  %447 = @func_11503() /* ty=Tensor[(15), int16] */;
  %448 = %446.8;
  (%447, %448, meta[relay.Constant][41] /* ty=Tensor[(315), bool] */, meta[relay.Constant][42] /* ty=Tensor[(1, 780), float32] */, %var_11531, %var_11532, %var_11533, %var_11534)
}

def @func_13595(%var_13559: Tensor[(11, 6, 13), float64], %var_13560: Tensor[(11, 6, 13), float64], %var_13591: Tensor[(24), int8], %var_13592: Tensor[(1, 264), int8]) -> (Tensor[(11, 6, 13), float64], Tensor[(2, 12, 11), bool], Tensor[(24), int8], Tensor[(1, 264), int8]) {
  %449 = cast(%var_13560, dtype="float64") /* ty=Tensor[(11, 6, 13), float64] */;
  %450 = shape_of(%var_13559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%var_13559, dtype="float64") /* ty=Tensor[(11, 6, 13), float64] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %453 = cast(%var_13591, dtype="int8") /* ty=Tensor[(24), int8] */;
  %454 = cast(%var_13592, dtype="int8") /* ty=Tensor[(1, 264), int8] */;
  %455 = reshape(%453, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), int8] */;
  %456 = reshape(%454, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int8] */;
  %457 = power(%451, %452) /* ty=Tensor[(11, 6, 13), float64] */;
  %458 = @func_11243(%455, %456) /* ty=Tensor[(2, 12, 11), bool] */;
  (%457, %458, %var_13591, %var_13592)
}

def @func_7568(%var_7553: Tensor[(15, 7, 9), int8], %var_7564: Tensor[(15, 7, 9), int8]) -> (Tensor[(15, 7, 9), int8], Tensor[(15, 7, 9), bool]) {
  %459 = cast(%var_7553, dtype="int8") /* ty=Tensor[(15, 7, 9), int8] */;
  %460 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(15, 7, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 7, 9), int8] */, dtype="int8") /* ty=Tensor[(15, 7, 9), int8] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %463 = cast(%var_7564, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %464 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(15, 7, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %467 = logical_xor(%461, %462) /* ty=Tensor[(15, 7, 9), int8] */;
  %468 = greater_equal(%465, %466) /* ty=Tensor[(15, 7, 9), bool] */;
  (%467, %468)
}

def @func_13790(%var_13780: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(66), float32], Tensor[(66), float32], float64, Tensor[(32), int32]) {
  %469 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
  %470 = cast(%var_13780, dtype="float32") /* ty=Tensor[(66), float32] */;
  %471 = reshape(%470, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %472 = @func_12762(%471) /* ty=(Tensor[(15), int16], Tensor[(3, 11, 2), uint16], Tensor[(66), float32]) */;
  %473 = cast(meta[relay.Constant][44] /* ty=Tensor[(32), int32] */, dtype="int32") /* ty=Tensor[(32), int32] */;
  %474 = cast(meta[relay.Constant][44] /* ty=Tensor[(32), int32] */, dtype="int32") /* ty=Tensor[(32), int32] */;
  %475 = reshape(%473, newshape=[2, 1, 16]) /* ty=Tensor[(2, 1, 16), int32] */;
  %476 = reshape(%474, newshape=[2, 1, 16]) /* ty=Tensor[(2, 1, 16), int32] */;
  %477 = @func_5322(%475, %476) /* ty=(Tensor[(2, ?, 16), int32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280, 1), float64]) */;
  %478 = %469.1;
  %479 = %472.2;
  %480 = %477.2;
  (%478, %479, %var_13780, %480, meta[relay.Constant][44] /* ty=Tensor[(32), int32] */)
}

def @func_14064() -> Tensor[(3, 11, 2), float32] {
  %481 = @func_10129() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %481.0
}

def @func_10957(%var_10916: Tensor[(1080), float64], %var_10929: Tensor[(6, 10, 4), bool], %var_10941: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(48), bool], bool, Tensor[(3, 11, 2), float32], Tensor[(6, 10, 4), bool], Tensor[(16, 11, 14), float64], Tensor[(1350), float64], Tensor[(3, 11, 2), float64]) {
  %482 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %483 = cast(%var_10916, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %484 = cast(meta[relay.Constant][45] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %485 = reshape(%483, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
  %486 = reshape(%484, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %487 = @func_9207(%485, %486) /* ty=(Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) */;
  %488 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %489 = reshape(%488, newshape=[]) /* ty=bool */;
  %490 = @func_4769(%489) /* ty=(Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) */;
  %491 = %490.4;
  %492 = cast(%var_10929, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%491, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %496 = cast(%var_10941, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %497 = reshape(%496, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %498 = @func_7338(%497) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %499 = @func_9464() /* ty=(Tensor[(3, 11, 2), float64], float64, Tensor[(64), float32], Tensor[(400), float32]) */;
  %500 = %482.0;
  %501 = %487.4;
  %502 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
  %503 = logical_or(%494, %495) /* ty=Tensor[(6, 10, 4), bool] */;
  %504 = %498.0;
  %505 = %499.0;
  (%500, %501, %var_10916, meta[relay.Constant][45] /* ty=Tensor[(48), bool] */, True /* ty=bool */, %502, %503, %504, %var_10941, %505)
}

def @func_12900() -> (Tensor[(6, 3, 14), bool],) {
  %506 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(6, 3, 14), bool] */;
  %507 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(6, 3, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(6, 3, 14), bool] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %510 = logical_or(%508, %509) /* ty=Tensor[(6, 3, 14), bool] */;
  (%510,)
}

def @func_11328() -> (Tensor[(3, 11, 2), float32], Tensor[(64), float32], Tensor[(3, 11, 2), float32]) {
  %511 = @func_10838() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %512 = @func_7667() /* ty=(Tensor[(3, 11, 2), bool], Tensor[(3, 11, 2), float32]) */;
  %513 = %511.0;
  %514 = @func_10861() /* ty=Tensor[(64), float32] */;
  %515 = %512.1;
  (%513, %514, %515)
}

def @func_7600(%var_7583: Tensor[(3, 11, 2), float32]) -> Tensor[(3, 11, 2), float64] {
  %516 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %517 = %516.0;
  %518 = cast(%var_7583, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%520, %521) /* ty=Tensor[(3, 11, 2), float64] */
}

def @func_9726() -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(312), int16], Tensor[(35, 9), bool], Tensor[(3, 11, 2), float32]) {
  %522 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %523 = cast(meta[relay.Constant][48] /* ty=Tensor[(312), int16] */, dtype="int16") /* ty=Tensor[(312), int16] */;
  %524 = cast(meta[relay.Constant][49] /* ty=Tensor[(35, 9), bool] */, dtype="bool") /* ty=Tensor[(35, 9), bool] */;
  %525 = %522.0;
  %526 = cast(%525, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %527 = reshape(%523, newshape=[312]) /* ty=Tensor[(312), int16] */;
  %528 = reshape(%524, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %529 = reshape(%526, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %530 = @func_8600(%527, %528, %529) /* ty=(Tensor[(15), int16], Tensor[(780), float32], Tensor[(312), int16], Tensor[(315), bool], Tensor[(780, 1), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), int8], Tensor[(66), float32]) */;
  %531 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %532 = %530.0;
  %533 = %531.0;
  (%525, %532, meta[relay.Constant][48] /* ty=Tensor[(312), int16] */, meta[relay.Constant][49] /* ty=Tensor[(35, 9), bool] */, %533)
}

def @func_7906() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  %534 = @func_7077() /* ty=Tensor[(3, 11, 2), float32] */;
  %535 = cast(%534, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %536 = cast(%534, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %537 = asin(%535) /* ty=Tensor[(3, 11, 2), float32] */;
  %538 = cos(%536) /* ty=Tensor[(3, 11, 2), float64] */;
  (%537, %538)
}

def @func_6974(%var_6966: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(780), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64]) {
  %539 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %540 = cast(%var_6966, dtype="float32") /* ty=Tensor[(780), float32] */;
  %541 = reshape(%540, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %542 = @func_6872(%541) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */;
  %543 = cast(meta[relay.Constant][50] /* ty=Tensor[(2100), uint64] */, dtype="uint64") /* ty=Tensor[(2100), uint64] */;
  %544 = reshape(%543, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), uint64] */;
  %545 = %539.0;
  %546 = %542.0;
  %547 = @func_322(%544) /* ty=Tensor[(14, 10, 15), bool] */;
  (%545, %546, %var_6966, %547, meta[relay.Constant][50] /* ty=Tensor[(2100), uint64] */)
}

def @func_7667() -> (Tensor[(3, 11, 2), bool], Tensor[(3, 11, 2), float32]) {
  %548 = @func_7124() /* ty=Tensor[(3, 11, 2), float32] */;
  %549 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 11, 2), float32] */, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%548, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = greater(%551, %552) /* ty=Tensor[(3, 11, 2), bool] */;
  %554 = cast(%553, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %555 = reshape(%554, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %556 = @func_6946(%555) /* ty=(Tensor[(3, 11, 2), bool],) */;
  %557 = %556.0;
  %558 = cast(%557, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %559 = sinh(%558) /* ty=Tensor[(3, 11, 2), float32] */;
  (%553, %559)
}

def @func_10551(%var_10535: Tensor[(9, 1, 6), float32], %var_10540: Tensor[(945), int8]) -> (Tensor[(9, 1, 6), float32], Tensor[(15, 7, 9), int8], Tensor[(945), int8]) {
  %560 = cast(%var_10535, dtype="float32") /* ty=Tensor[(9, 1, 6), float32] */;
  %561 = cast(%var_10540, dtype="int8") /* ty=Tensor[(945), int8] */;
  %562 = cast(%var_10540, dtype="int8") /* ty=Tensor[(945), int8] */;
  %563 = reshape(%561, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), int8] */;
  %564 = reshape(%562, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), int8] */;
  %565 = @func_7568(%563, %564) /* ty=(Tensor[(15, 7, 9), int8], Tensor[(15, 7, 9), bool]) */;
  %566 = asinh(%560) /* ty=Tensor[(9, 1, 6), float32] */;
  %567 = %565.0;
  (%566, %567, %var_10540)
}

def @func_8982() -> (Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(5, 156), float32]) {
  %568 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 156), float32] */, dtype="float32") /* ty=Tensor[(5, 156), float32] */;
  %569 = reshape(%568, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %570 = @func_6872(%569) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */;
  %571 = @func_8678() /* ty=Tensor[(3, 11, 2), float32] */;
  %572 = %570.1;
  (%571, %572, meta[relay.Constant][52] /* ty=Tensor[(5, 156), float32] */)
}

def @func_9387() -> Tensor[(15), int16] {
  %573 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
  %573.2
}

def @func_10838() -> (Tensor[(3, 11, 2), float32],) {
  %574 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %575 = %574.0;
  (%575,)
}

def @func_12864(%var_12844: float64, %var_12845: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1350), float64], Tensor[(780), float32], Tensor[(3, 11, 2), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), float32]) {
  %576 = cast(%var_12844, dtype="float64") /* ty=float64 */;
  %577 = cast(%var_12845, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %578 = cast(meta[relay.Constant][53] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %579 = reshape(%576, newshape=[]) /* ty=float64 */;
  %580 = reshape(%577, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %581 = reshape(%578, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %582 = @func_9968(%579, %580, %581) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(15), int16], Tensor[(15, 9, 10), float64], Tensor[(135, 10), float64], Tensor[(780), float32], Tensor[(10, 78), float32]) */;
  %583 = cast(meta[relay.Constant][54] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %584 = reshape(%583, newshape=[1815]) /* ty=Tensor[(1815), float64] */;
  %585 = @func_12549(%584) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float32], Tensor[(780), float32], Tensor[(11, 11, 15), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), uint64]) */;
  %586 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %588 = cast(%var_12845, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %589 = reshape(%587, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %590 = reshape(%588, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %591 = @func_7521(%589, %590) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %592 = %582.1;
  %593 = %585.0;
  %594 = %591.0;
  (%586, %592, %var_12844, %var_12845, meta[relay.Constant][53] /* ty=Tensor[(780), float32] */, %593, meta[relay.Constant][54] /* ty=Tensor[(1815), float64] */, %594)
}

def @func_8348() -> (Tensor[(3, 11, 2), float32],) {
  %595 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
  %596 = %595.1;
  (%596,)
}

def @func_6695() -> (Tensor[(3, 11, 2), float32],) {
  %597 = @func_6489() /* ty=Tensor[(3, 11, 2), float32] */;
  (%597,)
}

def @func_10129() -> (Tensor[(3, 11, 2), float32],) {
  %598 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %599 = %598.0;
  (%599,)
}

def @func_7228() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) {
  %600 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %601 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %602 = reshape(%601, newshape=[]) /* ty=bool */;
  %603 = @func_7168(%602) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) */;
  %604 = %600.0;
  %605 = %603.0;
  (%604, %605, False /* ty=bool */)
}

def @func_11815() -> (Tensor[(3, 11, 2), float32],) {
  %606 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
  (%606,)
}

def @func_1409(%var_1395: Tensor[(6, 3, 1), float64]) -> Tensor[(6, 3, 1), float64] {
  %607 = cast(%var_1395, dtype="float64") /* ty=Tensor[(6, 3, 1), float64] */;
  cos(%607) /* ty=Tensor[(6, 3, 1), float64] */
}

def @func_6412() -> (Tensor[(3, 11, 2), float32],) {
  %608 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %609 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(3, 11, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %612 = floor_divide(%610, %611) /* ty=Tensor[(3, 11, 2), float32] */;
  (%612,)
}

def @func_12077() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  %613 = @func_8982() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(5, 156), float32]) */;
  %614 = @func_9236() /* ty=(Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32]) */;
  %615 = %613.0;
  %616 = %614.0;
  (%615, %616)
}

def @func_8171(%var_8126: Tensor[(11, 11, 15), float64], %var_8152: Tensor[(780), float32]) -> (Tensor[(11, 11, 15), float32], Tensor[(11, 11, 15), float32], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(9, 15, 3), float32], Tensor[(780), float32]) {
  %617 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %618 = %617.1;
  %619 = cast(%var_8126, dtype="float32") /* ty=Tensor[(11, 11, 15), float32] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%618, dtype="float32") /* ty=Tensor[(11, 11, 15), float32] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %623 = cast(%var_8126, dtype="float32") /* ty=Tensor[(11, 11, 15), float32] */;
  %624 = asin(%623) /* ty=Tensor[(11, 11, 15), float32] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(11, 11, 15), float32] */;
  %626 = cast(meta[relay.Constant][57] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %627 = reshape(%626, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %628 = cast(%var_8152, dtype="float32") /* ty=Tensor[(780), float32] */;
  %629 = reshape(%628, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float32] */;
  %630 = @func_1324(%629) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */;
  %631 = mod(%621, %622) /* ty=Tensor[(11, 11, 15), float32] */;
  %632 = sin(%625) /* ty=Tensor[(11, 11, 15), float32] */;
  %633 = @func_1409(%627) /* ty=Tensor[(6, 3, 1), float64] */;
  %634 = %630.4;
  (%631, %632, %633, meta[relay.Constant][57] /* ty=Tensor[(18), float64] */, %634, %var_8152)
}

def @func_6946(%var_6935: Tensor[(3, 11, 2), float32]) -> (Tensor[(3, 11, 2), bool],) {
  %635 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %636 = %635.0;
  %637 = cast(%var_6935, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%636, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = not_equal(%639, %640) /* ty=Tensor[(3, 11, 2), bool] */;
  (%641,)
}

def @func_10288() -> Tensor[(3, 11, 2), float32] {
  %642 = @func_10129() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %642.0
}

def @func_9394() -> (Tensor[(3, 11, 2), float32],) {
  %643 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
  (%643,)
}

def @func_12230(%var_12222: Tensor[(2, 11, 4), float64]) -> Tensor[(2, 11, 4), float64] {
  %644 = cast(%var_12222, dtype="float64") /* ty=Tensor[(2, 11, 4), float64] */;
  sin(%644) /* ty=Tensor[(2, 11, 4), float64] */
}

def @func_141(%var_132: Tensor[(15), int16]) -> (Tensor[(9, 15, 3), uint16], Tensor[(9, 15, 3), float32], Tensor[(9, 15, 3), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(15, ?), int16]) {
  %645 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="uint16") /* ty=Tensor[(9, 15, 3), uint16] */;
  %646 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="uint16") /* ty=Tensor[(9, 15, 3), uint16] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %649 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="float32") /* ty=Tensor[(9, 15, 3), float32] */;
  %650 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="float32") /* ty=Tensor[(9, 15, 3), float32] */;
  %651 = cast(%var_132, dtype="int16") /* ty=Tensor[(15), int16] */;
  %652 = reshape(%651, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %653 = @func_34(%652) /* ty=(Tensor[(15, ?), int16],) */;
  %654 = cast(%var_132, dtype="int16") /* ty=Tensor[(15), int16] */;
  %655 = reshape(%654, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %656 = @func_34(%655) /* ty=(Tensor[(15, ?), int16],) */;
  %657 = logical_xor(%647, %648) /* ty=Tensor[(9, 15, 3), uint16] */;
  %658 = log(%649) /* ty=Tensor[(9, 15, 3), float32] */;
  %659 = asinh(%650) /* ty=Tensor[(9, 15, 3), float32] */;
  %660 = %653.0;
  %661 = %656.0;
  (%657, %658, %659, %660, %var_132, %661)
}

def @func_8533(%var_8507: Tensor[(780), float32], %var_8527: Tensor[(400), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 13), float64], Tensor[(780), float32], Tensor[(10, 5, 8), float32], Tensor[(50), float32], Tensor[(400), float32], Tensor[(3, 11, 2), uint16]) {
  %662 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %663 = cast(%var_8507, dtype="float32") /* ty=Tensor[(780), float32] */;
  %664 = reshape(%663, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %665 = @func_6872(%664) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */;
  %666 = cast(meta[relay.Constant][60] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %667 = cast(%var_8527, dtype="float32") /* ty=Tensor[(400), float32] */;
  %668 = reshape(%666, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %669 = reshape(%667, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %670 = @func_417(%668, %669) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %671 = %662.0;
  %672 = cast(%671, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %673 = reshape(%672, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %674 = %665.2;
  %675 = %670.0;
  %676 = @func_7403(%673) /* ty=Tensor[(3, 11, 2), uint16] */;
  (%671, %674, %var_8507, %675, meta[relay.Constant][60] /* ty=Tensor[(50), float32] */, %var_8527, %676)
}

def @func_14191() -> (Tensor[(3, 11, 2), float32],) {
  %677 = @func_12699() /* ty=Tensor[(3, 11, 2), float32] */;
  (%677,)
}

def @func_6637(%var_6598: Tensor[(3, 6), float64], %var_6627: Tensor[(1815), float64]) -> (Tensor[(6, 3, 1), float64], Tensor[(3, 6), float64], Tensor[(15, ?), int16], uint16, Tensor[(1950), uint16], Tensor[(15, ?), int16], Tensor[(3, 11, 2), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
  %678 = cast(%var_6598, dtype="float64") /* ty=Tensor[(3, 6), float64] */;
  %679 = reshape(%678, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %680 = cast(meta[relay.Constant][61] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %681 = cast(meta[relay.Constant][62] /* ty=Tensor[(1950), uint16] */, dtype="uint16") /* ty=Tensor[(1950), uint16] */;
  %682 = reshape(%680, newshape=[]) /* ty=uint16 */;
  %683 = reshape(%681, newshape=[13, 10, 15]) /* ty=Tensor[(13, 10, 15), uint16] */;
  %684 = @func_3038(%682, %683) /* ty=(Tensor[(13, 10, 15), bool], Tensor[(15, ?), int16], Tensor[(1, 15), int16], Tensor[(15, ?), int16]) */;
  %685 = %684.1;
  %686 = cast(%685, dtype="int16") /* ty=Tensor[(15, ?), int16] */;
  %687 = reshape(%686, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %688 = @func_34(%687) /* ty=(Tensor[(15, ?), int16],) */;
  %689 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %690 = %689.0;
  %691 = cast(%690, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %692 = cast(%var_6627, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %693 = reshape(%692, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %694 = @func_5182(%693) /* ty=(Tensor[(11, 11, 15), float64],) */;
  %695 = @func_1409(%679) /* ty=Tensor[(6, 3, 1), float64] */;
  %696 = %688.0;
  %697 = log2(%691) /* ty=Tensor[(3, 11, 2), float64] */;
  %698 = %694.0;
  (%695, %var_6598, %685, meta[relay.Constant][61] /* ty=uint16 */, meta[relay.Constant][62] /* ty=Tensor[(1950), uint16] */, %696, %697, %698, %var_6627)
}

def @func_7077() -> Tensor[(3, 11, 2), float32] {
  %699 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %699.0
}

def @func_12174(%var_12167: Tensor[(315), bool], %var_12168: Tensor[(780), float32], %var_12169: Tensor[(18, 1), float64], %var_12171: Tensor[(360), bool]) -> (Tensor[(15), int16], bool, Tensor[(10, 78), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18, 1), float64], Tensor[(1280), float64], Tensor[(360), bool]) {
  %700 = @func_10041() /* ty=(bool, Tensor[(15), int16]) */;
  %701 = cast(%var_12167, dtype="bool") /* ty=Tensor[(315), bool] */;
  %702 = cast(%var_12168, dtype="float32") /* ty=Tensor[(780), float32] */;
  %703 = cast(%var_12169, dtype="float64") /* ty=Tensor[(18, 1), float64] */;
  %704 = %700.0;
  %705 = cast(%704, dtype="float64") /* ty=float64 */;
  %706 = cast(meta[relay.Constant][63] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %707 = cast(%var_12171, dtype="bool") /* ty=Tensor[(360), bool] */;
  %708 = reshape(%701, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %709 = reshape(%702, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %710 = reshape(%703, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %711 = reshape(%705, newshape=[]) /* ty=float64 */;
  %712 = reshape(%706, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %713 = reshape(%707, newshape=[360, 1]) /* ty=Tensor[(360, 1), bool] */;
  %714 = @func_8966(%708, %709, %710, %711, %712, %713) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) */;
  %715 = @func_11503() /* ty=Tensor[(15), int16] */;
  %716 = %714.2;
  (%715, %704, %716, %var_12167, %var_12168, %var_12169, meta[relay.Constant][63] /* ty=Tensor[(1280), float64] */, %var_12171)
}

def @func_11777() -> Tensor[(15), int16] {
  %717 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %717.0
}

def @func_12584() -> (Tensor[(3, 11, 2), float32],) {
  %718 = @func_11815() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %719 = %718.0;
  (%719,)
}

def @func_8600(%var_8568: Tensor[(312), int16], %var_8569: Tensor[(315), bool], %var_8598: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(780), float32], Tensor[(312), int16], Tensor[(315), bool], Tensor[(780, 1), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), int8], Tensor[(66), float32]) {
  %720 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %721 = cast(%var_8568, dtype="int16") /* ty=Tensor[(312), int16] */;
  %722 = cast(%var_8569, dtype="bool") /* ty=Tensor[(315), bool] */;
  %723 = cast(meta[relay.Constant][64] /* ty=Tensor[(780, 1), float32] */, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %724 = reshape(%721, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), int16] */;
  %725 = reshape(%722, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %726 = reshape(%723, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %727 = @func_8005(%724, %725, %726) /* ty=(Tensor[(13, 8, 3), bool], Tensor[(13, 8, 3), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */;
  %728 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %729 = cast(%var_8598, dtype="float32") /* ty=Tensor[(66), float32] */;
  %730 = reshape(%729, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %731 = @func_7255(%730) /* ty=(Tensor[(3, 11, 2), int8],) */;
  %732 = %720.0;
  %733 = %727.4;
  %734 = %728.2;
  %735 = %731.0;
  (%732, %733, %var_8568, %var_8569, meta[relay.Constant][64] /* ty=Tensor[(780, 1), float32] */, %734, %735, %var_8598)
}

def @func_12699() -> Tensor[(3, 11, 2), float32] {
  @func_7788() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_11738() -> Tensor[(3, 11, 2), float32] {
  %736 = @func_10838() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %736.0
}

def @func_9110(%var_9038: Tensor[(400), float32], %var_9059: Tensor[(15), int16], %var_9063: Tensor[(480), bool], %var_9092: Tensor[(50, 1), bool]) -> (Tensor[(3, 11, 2), float32], Tensor[(10, 5, 8), float32], Tensor[(6, 3, 1), float64], Tensor[(15, 1), int16], Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(15, 1), int16], Tensor[(50, 400), float64], Tensor[(50, ?), float32], Tensor[(50, 18), int64]) {
  %737 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %738 = cast(meta[relay.Constant][65] /* ty=Tensor[(50, 1), float32] */, dtype="float32") /* ty=Tensor[(50, 1), float32] */;
  %739 = cast(%var_9038, dtype="float32") /* ty=Tensor[(400), float32] */;
  %740 = reshape(%738, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %741 = reshape(%739, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %742 = @func_417(%740, %741) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %743 = cast(meta[relay.Constant][66] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %744 = reshape(%743, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %745 = cast(%var_9059, dtype="int16") /* ty=Tensor[(15), int16] */;
  %746 = reshape(%745, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %747 = @func_7482(%746) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) */;
  %748 = cast(meta[relay.Constant][67] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %749 = cast(%var_9063, dtype="bool") /* ty=Tensor[(480), bool] */;
  %750 = reshape(%748, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), bool] */;
  %751 = reshape(%749, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), bool] */;
  %752 = @func_8348() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %753 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %754 = cast(%var_9059, dtype="int16") /* ty=Tensor[(15), int16] */;
  %755 = reshape(%754, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %756 = @func_7482(%755) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) */;
  %757 = cast(meta[relay.Constant][65] /* ty=Tensor[(50, 1), float32] */, dtype="float64") /* ty=Tensor[(50, 1), float64] */;
  %758 = cosh(%757) /* ty=Tensor[(50, 1), float64] */;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(50, 1), float64] */;
  %760 = cast(%var_9038, dtype="float64") /* ty=Tensor[(400), float64] */;
  %761 = cast(%758, dtype="float32") /* ty=Tensor[(50, 1), float32] */;
  %762 = acos(%761) /* ty=Tensor[(50, 1), float32] */;
  %763 = cast(%758, dtype="uint32") /* ty=Tensor[(50, 1), uint32] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(2), int32] */;
  %765 = cast(%762, dtype="uint32") /* ty=Tensor[(50, 1), uint32] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %767 = add(%765, %766) /* ty=Tensor[(50, ?), uint32] */;
  %768 = cast(%762, dtype="bool") /* ty=Tensor[(50, 1), bool] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(2), int32] */;
  %770 = cast(%767, dtype="bool") /* ty=Tensor[(50, ?), bool] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %772 = logical_or(%770, %771) /* ty=Tensor[(50, ?), bool] */;
  %773 = cast(%var_9092, dtype="float32") /* ty=Tensor[(50, 1), float32] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(2), int32] */;
  %775 = cast(%772, dtype="float32") /* ty=Tensor[(50, ?), float32] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %777 = cast(%767, dtype="int64") /* ty=Tensor[(50, ?), int64] */;
  %778 = cast(meta[relay.Constant][66] /* ty=Tensor[(18), float64] */, dtype="int64") /* ty=Tensor[(18), int64] */;
  %779 = %737.0;
  %780 = %742.0;
  %781 = @func_1409(%744) /* ty=Tensor[(6, 3, 1), float64] */;
  %782 = %747.1;
  %783 = @func_1177(%750, %751) /* ty=Tensor[(6, 10, 8), float32] */;
  %784 = %752.0;
  %785 = %753.0;
  %786 = %756.1;
  %787 = power(%759, %760) /* ty=Tensor[(50, 400), float64] */;
  %788 = power(%775, %776) /* ty=Tensor[(50, ?), float32] */;
  %789 = multiply(%777, %778) /* ty=Tensor[(50, 18), int64] */;
  (%779, %780, %781, %782, %var_9059, %783, meta[relay.Constant][67] /* ty=Tensor[(48), bool] */, %var_9063, %784, %785, %786, %787, %788, %789)
}

def @func_12949() -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16]) {
  %790 = @func_11328() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(64), float32], Tensor[(3, 11, 2), float32]) */;
  %791 = %790.2;
  %792 = @func_8870() /* ty=Tensor[(15), int16] */;
  (%791, %792)
}

def @func_12597(%var_12586: Tensor[(2, 14, 16), int64]) -> (Tensor[(2, 14, 16), int64],) {
  %793 = cast(meta[relay.Constant][68] /* ty=Tensor[(2, 14, 16), int64] */, dtype="int64") /* ty=Tensor[(2, 14, 16), int64] */;
  %794 = shape_of(%var_12586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%var_12586, dtype="int64") /* ty=Tensor[(2, 14, 16), int64] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %797 = minimum(%795, %796) /* ty=Tensor[(2, 14, 16), int64] */;
  (%797,)
}

def @func_11188(%var_11185: Tensor[(1815), float64]) -> (Tensor[(64), int64], Tensor[(6, 3, 1), float64], Tensor[(1815), float64], Tensor[(780), float32]) {
  %798 = @func_10861() /* ty=Tensor[(64), float32] */;
  %799 = cast(meta[relay.Constant][69] /* ty=Tensor[(64), float32] */, dtype="int64") /* ty=Tensor[(64), int64] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(1), int32] */;
  %801 = cast(%798, dtype="int64") /* ty=Tensor[(64), int64] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?), int64] */;
  %803 = cast(%var_11185, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %804 = cast(meta[relay.Constant][70] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %805 = reshape(%803, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %806 = reshape(%804, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %807 = @func_8171(%805, %806) /* ty=(Tensor[(11, 11, 15), float32], Tensor[(11, 11, 15), float32], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(9, 15, 3), float32], Tensor[(780), float32]) */;
  %808 = bitwise_or(%801, %802) /* ty=Tensor[(64), int64] */;
  %809 = %807.2;
  (%808, %809, %var_11185, meta[relay.Constant][70] /* ty=Tensor[(780), float32] */)
}

def @func_14541(%var_14514: Tensor[(10, 5, 1), float32]) -> (Tensor[(10, 5, 7), float32], Tensor[(15), int16], Tensor[(9, 10, 13), float32], bool) {
  %810 = cast(%var_14514, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
  %811 = cast(meta[relay.Constant][71] /* ty=Tensor[(10, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 7), float32] */;
  %812 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %813 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %814 = reshape(%813, newshape=[]) /* ty=bool */;
  %815 = add(%810, %811) /* ty=Tensor[(10, 5, 7), float32] */;
  %816 = %812.0;
  %817 = @func_1815(%814) /* ty=Tensor[(9, 10, 13), float32] */;
  (%815, %816, %817, False /* ty=bool */)
}

def @func_8283() -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) {
  %818 = cast(meta[relay.Constant][72] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %819 = reshape(%818, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %820 = @func_7482(%819) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) */;
  %821 = @func_7124() /* ty=Tensor[(3, 11, 2), float32] */;
  %822 = %820.2;
  (%821, %822, meta[relay.Constant][72] /* ty=Tensor[(15), int16] */)
}

def @func_11493(%var_11469: Tensor[(15), int16]) -> (Tensor[(3, 11, 2), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(3, 11, 2), float32]) {
  %823 = cast(%var_11469, dtype="int16") /* ty=Tensor[(15), int16] */;
  %824 = reshape(%823, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %825 = @func_34(%824) /* ty=(Tensor[(15, ?), int16],) */;
  %826 = @func_10336() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %827 = @func_7077() /* ty=Tensor[(3, 11, 2), float32] */;
  %828 = %825.0;
  %829 = %826.0;
  (%827, %828, %var_11469, %829)
}

def @func_13171() -> (Tensor[(3, 11, 2), float64],) {
  %830 = @func_11419() /* ty=(Tensor[(3, 11, 2), float64],) */;
  %831 = %830.0;
  (%831,)
}

def @func_1177(%var_1159: Tensor[(6, 1, 8), bool], %var_1160: Tensor[(6, 10, 8), bool]) -> Tensor[(6, 10, 8), float32] {
  %832 = cast(%var_1159, dtype="bool") /* ty=Tensor[(6, 1, 8), bool] */;
  %833 = cast(%var_1160, dtype="bool") /* ty=Tensor[(6, 10, 8), bool] */;
  %834 = logical_or(%832, %833) /* ty=Tensor[(6, 10, 8), bool] */;
  %835 = cast(%834, dtype="float32") /* ty=Tensor[(6, 10, 8), float32] */;
  %836 = shape_of(%var_1160, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%var_1160, dtype="float32") /* ty=Tensor[(6, 10, 8), float32] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%837, %838) /* ty=Tensor[(6, 10, 8), float32] */
}

def @func_9860(%var_9850: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 13), float64], Tensor[(780), float32]) {
  %839 = cast(%var_9850, dtype="float32") /* ty=Tensor[(780), float32] */;
  %840 = reshape(%839, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %841 = @func_6872(%840) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */;
  %842 = @func_8678() /* ty=Tensor[(3, 11, 2), float32] */;
  %843 = %841.2;
  (%842, %843, %var_9850)
}

def @func_10422() -> (Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) {
  %844 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %845 = cast(meta[relay.Constant][73] /* ty=Tensor[(32), int32] */, dtype="int32") /* ty=Tensor[(32), int32] */;
  %846 = cast(meta[relay.Constant][73] /* ty=Tensor[(32), int32] */, dtype="int32") /* ty=Tensor[(32), int32] */;
  %847 = reshape(%845, newshape=[2, 1, 16]) /* ty=Tensor[(2, 1, 16), int32] */;
  %848 = reshape(%846, newshape=[2, 1, 16]) /* ty=Tensor[(2, 1, 16), int32] */;
  %849 = @func_5322(%847, %848) /* ty=(Tensor[(2, ?, 16), int32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280, 1), float64]) */;
  %850 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %851 = %844.0;
  %852 = %849.2;
  %853 = %850.0;
  (%851, %852, meta[relay.Constant][73] /* ty=Tensor[(32), int32] */, %853)
}

def @func_11986() -> (Tensor[(3, 11, 2), float64],) {
  %854 = @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
  %855 = %854.1;
  (%855,)
}

def @func_10632() -> Tensor[(3, 11, 2), float32] {
  %856 = @func_10129() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %856.0
}

def @func_4518(%var_4496: Tensor[(1, 15, 16), float32], %var_4511: Tensor[(400), float32], %var_4515: float64) -> (Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) {
  %857 = cast(%var_4496, dtype="float32") /* ty=Tensor[(1, 15, 16), float32] */;
  %858 = log2(%857) /* ty=Tensor[(1, 15, 16), float32] */;
  %859 = cast(%858, dtype="bool") /* ty=Tensor[(1, 15, 16), bool] */;
  %860 = shape_of(%var_4496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%var_4496, dtype="bool") /* ty=Tensor[(1, 15, 16), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %863 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 50), float32] */, dtype="float32") /* ty=Tensor[(1, 50), float32] */;
  %864 = cast(%var_4511, dtype="float32") /* ty=Tensor[(400), float32] */;
  %865 = reshape(%863, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %866 = reshape(%864, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %867 = @func_417(%865, %866) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %868 = cast(%var_4515, dtype="float64") /* ty=float64 */;
  %869 = cast(meta[relay.Constant][75] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %870 = reshape(%868, newshape=[]) /* ty=float64 */;
  %871 = reshape(%869, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %872 = logical_and(%861, %862) /* ty=Tensor[(?, 15, 16), bool] */;
  %873 = %867.0;
  %874 = @func_4181(%870, %871) /* ty=Tensor[(16, 5, 16), float64] */;
  (%872, %873, meta[relay.Constant][74] /* ty=Tensor[(1, 50), float32] */, %var_4511, %874, %var_4515, meta[relay.Constant][75] /* ty=Tensor[(1280), float64] */)
}

def @func_5322(%var_5310: Tensor[(2, 1, 16), int32], %var_5311: Tensor[(2, 1, 16), int32]) -> (Tensor[(2, ?, 16), int32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280, 1), float64]) {
  %875 = cast(%var_5311, dtype="int32") /* ty=Tensor[(2, 1, 16), int32] */;
  %876 = shape_of(%var_5310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%var_5310, dtype="int32") /* ty=Tensor[(2, 1, 16), int32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %879 = cast(4.2633f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %880 = cast(meta[relay.Constant][76] /* ty=Tensor[(1280, 1), float64] */, dtype="float64") /* ty=Tensor[(1280, 1), float64] */;
  %881 = reshape(%879, newshape=[]) /* ty=float64 */;
  %882 = reshape(%880, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %883 = multiply(%877, %878) /* ty=Tensor[(2, ?, 16), int32] */;
  %884 = @func_4181(%881, %882) /* ty=Tensor[(16, 5, 16), float64] */;
  (%883, %884, 4.2633f64 /* ty=float64 */, meta[relay.Constant][76] /* ty=Tensor[(1280, 1), float64] */)
}

def @func_6872(%var_6824: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) {
  %885 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %886 = cast(%var_6824, dtype="float32") /* ty=Tensor[(780), float32] */;
  %887 = reshape(%886, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float32] */;
  %888 = @func_1324(%887) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */;
  %889 = %888.3;
  %890 = cast(%889, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %891 = shape_of(%var_6824, dtype="int32") /* ty=Tensor[(1), int32] */;
  %892 = cast(%var_6824, dtype="bool") /* ty=Tensor[(780), bool] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?), bool] */;
  %894 = cast(%889, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %895 = %885.0;
  %896 = less(%892, %893) /* ty=Tensor[(780), bool] */;
  %897 = atan(%894) /* ty=Tensor[(6, 10, 13), float64] */;
  (%895, %896, %897)
}

def @func_13645() -> float64 {
  %898 = @func_10422() /* ty=(Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) */;
  %898.1
}

def @func_322(%var_317: Tensor[(14, 10, 15), uint64]) -> Tensor[(14, 10, 15), bool] {
  %899 = cast(meta[relay.Constant][77] /* ty=Tensor[(14, 10, 1), uint64] */, dtype="bool") /* ty=Tensor[(14, 10, 1), bool] */;
  %900 = cast(%var_317, dtype="bool") /* ty=Tensor[(14, 10, 15), bool] */;
  less_equal(%899, %900) /* ty=Tensor[(14, 10, 15), bool] */
}

def @func_13236() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32]) {
  %901 = @func_12680() /* ty=Tensor[(3, 11, 2), float32] */;
  %902 = @func_11738() /* ty=Tensor[(3, 11, 2), float32] */;
  (%901, %902)
}

def @func_9464() -> (Tensor[(3, 11, 2), float64], float64, Tensor[(64), float32], Tensor[(400), float32]) {
  %903 = @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
  %904 = cast(meta[relay.Constant][78] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %905 = cast(meta[relay.Constant][79] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %906 = reshape(%904, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), float32] */;
  %907 = reshape(%905, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %908 = @func_8745(%906, %907) /* ty=(Tensor[(4, 16, 1), float32], Tensor[(400), float32], Tensor[(240), float32], Tensor[(400), float32], float64) */;
  %909 = %903.1;
  %910 = %908.4;
  (%909, %910, meta[relay.Constant][78] /* ty=Tensor[(64), float32] */, meta[relay.Constant][79] /* ty=Tensor[(400), float32] */)
}

def @func_7168(%var_7160: bool) -> (Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) {
  %911 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %912 = cast(%var_7160, dtype="bool") /* ty=bool */;
  %913 = reshape(%912, newshape=[]) /* ty=bool */;
  %914 = @func_4769(%913) /* ty=(Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) */;
  %915 = %911.0;
  %916 = %914.2;
  (%915, %916, %var_7160)
}

def @func_8097() -> (Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) {
  %917 = cast(meta[relay.Constant][80] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %918 = cast(meta[relay.Constant][81] /* ty=Tensor[(1950), uint16] */, dtype="uint16") /* ty=Tensor[(1950), uint16] */;
  %919 = reshape(%917, newshape=[]) /* ty=uint16 */;
  %920 = reshape(%918, newshape=[13, 10, 15]) /* ty=Tensor[(13, 10, 15), uint16] */;
  %921 = @func_3038(%919, %920) /* ty=(Tensor[(13, 10, 15), bool], Tensor[(15, ?), int16], Tensor[(1, 15), int16], Tensor[(15, ?), int16]) */;
  %922 = @func_7124() /* ty=Tensor[(3, 11, 2), float32] */;
  %923 = cast(%922, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %924 = %921.2;
  %925 = log(%923) /* ty=Tensor[(3, 11, 2), float32] */;
  (%924, meta[relay.Constant][80] /* ty=uint16 */, meta[relay.Constant][81] /* ty=Tensor[(1950), uint16] */, %925)
}

def @func_7290() -> Tensor[(3, 11, 2), float32] {
  @func_6489() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_9207(%var_9203: Tensor[(1080), float64], %var_9205: Tensor[(48), bool]) -> (Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) {
  %926 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %927 = %926.0;
  %928 = cast(%927, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %929 = cast(%var_9203, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %930 = cast(%var_9203, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %931 = cast(meta[relay.Constant][82] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %932 = cast(%var_9205, dtype="bool") /* ty=Tensor[(48), bool] */;
  %933 = reshape(%929, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %934 = reshape(%930, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %935 = reshape(%931, newshape=[50]) /* ty=Tensor[(50), float32] */;
  %936 = reshape(%932, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %937 = @func_2733(%933, %934, %935, %936) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
  %938 = sqrt(%928) /* ty=Tensor[(3, 11, 2), float64] */;
  %939 = %937.2;
  (%938, %939, %var_9203, meta[relay.Constant][82] /* ty=Tensor[(50), float32] */, %var_9205)
}

def @func_12309() -> (Tensor[(11, 11, 15), float64],) {
  %940 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %941 = %940.1;
  (%941,)
}

def @func_14355() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), bool]) {
  %942 = @func_10288() /* ty=Tensor[(3, 11, 2), float32] */;
  %943 = cast(%942, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %944 = reshape(%943, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %945 = @func_6946(%944) /* ty=(Tensor[(3, 11, 2), bool],) */;
  %946 = %945.0;
  (%942, %946)
}

def @func_5182(%var_5177: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), float64],) {
  %947 = cast(%var_5177, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %948 = asinh(%947) /* ty=Tensor[(11, 11, 15), float64] */;
  (%948,)
}

def @func_9316(%var_9310: Tensor[(1815), float64]) -> Tensor[(1815), float64] {
  %949 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %950 = %949.2;
  %951 = cast(%var_9310, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(1), int32] */;
  %953 = cast(%950, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?), float64] */;
  power(%953, %954) /* ty=Tensor[(1815), float64] */
}

def @func_12549(%var_12544: Tensor[(1815), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float32], Tensor[(780), float32], Tensor[(11, 11, 15), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), uint64]) {
  %955 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %956 = cast(meta[relay.Constant][83] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %957 = cast(meta[relay.Constant][84] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %958 = reshape(%956, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %959 = reshape(%957, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %960 = @func_8171(%958, %959) /* ty=(Tensor[(11, 11, 15), float32], Tensor[(11, 11, 15), float32], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(9, 15, 3), float32], Tensor[(780), float32]) */;
  %961 = %960.1;
  %962 = cast(%961, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %963 = reshape(%962, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %964 = @func_5182(%963) /* ty=(Tensor[(11, 11, 15), float64],) */;
  %965 = %964.0;
  %966 = cast(%965, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %967 = reshape(%966, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %968 = @func_5182(%967) /* ty=(Tensor[(11, 11, 15), float64],) */;
  %969 = cast(%var_12544, dtype="uint64") /* ty=Tensor[(1815), uint64] */;
  %970 = shape_of(meta[relay.Constant][83] /* ty=Tensor[(1815), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %971 = cast(meta[relay.Constant][83] /* ty=Tensor[(1815), float64] */, dtype="uint64") /* ty=Tensor[(1815), uint64] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %973 = %955.0;
  %974 = %968.0;
  %975 = minimum(%971, %972) /* ty=Tensor[(1815), uint64] */;
  (%973, %961, meta[relay.Constant][84] /* ty=Tensor[(780), float32] */, %965, %974, %975)
}

def @func_8005(%var_7978: Tensor[(13, 8, 3), int16], %var_7998: Tensor[(315), bool], %var_7999: Tensor[(780), float32]) -> (Tensor[(13, 8, 3), bool], Tensor[(13, 8, 3), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
  %976 = cast(%var_7978, dtype="bool") /* ty=Tensor[(13, 8, 3), bool] */;
  %977 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(13, 8, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %978 = cast(meta[relay.Constant][85] /* ty=Tensor[(13, 8, 3), int16] */, dtype="bool") /* ty=Tensor[(13, 8, 3), bool] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %980 = cast(%var_7978, dtype="uint16") /* ty=Tensor[(13, 8, 3), uint16] */;
  %981 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(13, 8, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(meta[relay.Constant][85] /* ty=Tensor[(13, 8, 3), int16] */, dtype="uint16") /* ty=Tensor[(13, 8, 3), uint16] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %984 = bitwise_and(%982, %983) /* ty=Tensor[(13, 8, 3), uint16] */;
  %985 = cast(%984, dtype="float32") /* ty=Tensor[(13, 8, 3), float32] */;
  %986 = cast(%var_7998, dtype="bool") /* ty=Tensor[(315), bool] */;
  %987 = cast(%var_7998, dtype="bool") /* ty=Tensor[(315), bool] */;
  %988 = cast(%var_7999, dtype="float32") /* ty=Tensor[(780), float32] */;
  %989 = cast(meta[relay.Constant][86] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %990 = cast(2.5792f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %991 = cast(meta[relay.Constant][87] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %992 = cast(meta[relay.Constant][88] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %993 = reshape(%986, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %994 = reshape(%987, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %995 = reshape(%988, newshape=[780, 1]) /* ty=Tensor[(780, 1), float32] */;
  %996 = reshape(%989, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %997 = reshape(%990, newshape=[]) /* ty=float64 */;
  %998 = reshape(%991, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %999 = reshape(%992, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %1000 = @func_6131(%993, %994, %995, %996, %997, %998, %999) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */;
  %1001 = less(%978, %979) /* ty=Tensor[(13, 8, 3), bool] */;
  %1002 = log2(%985) /* ty=Tensor[(13, 8, 3), float32] */;
  %1003 = %1000.15;
  (%1001, %1002, %1003, %var_7998, %var_7999, meta[relay.Constant][86] /* ty=Tensor[(18), float64] */, 2.5792f64 /* ty=float64 */, meta[relay.Constant][87] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][88] /* ty=Tensor[(364), float64] */)
}

def @func_7403(%var_7398: Tensor[(3, 11, 2), float32]) -> Tensor[(3, 11, 2), uint16] {
  %1004 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
  %1005 = cast(%var_7398, dtype="uint16") /* ty=Tensor[(3, 11, 2), uint16] */;
  %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%1004, dtype="uint16") /* ty=Tensor[(3, 11, 2), uint16] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  multiply(%1007, %1008) /* ty=Tensor[(3, 11, 2), uint16] */
}

def @func_14501() -> (Tensor[(3, 11, 2), float32],) {
  %1009 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_13114(%var_13095: Tensor[(15, 16, 6), float32], %var_13100: Tensor[(11, 6), float32], %var_13105: Tensor[(1350), float64]) -> (Tensor[(15, 16, 6), float32], Tensor[(3, 11, 2), uint16], Tensor[(11, 6), float32], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) {
  %1011 = cast(%var_13095, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %1012 = cast(%var_13100, dtype="float32") /* ty=Tensor[(11, 6), float32] */;
  %1013 = reshape(%1012, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %1014 = cast(%var_13100, dtype="float32") /* ty=Tensor[(11, 6), float32] */;
  %1015 = cast(%var_13105, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %1016 = reshape(%1014, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %1017 = reshape(%1015, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %1018 = @func_7521(%1016, %1017) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %1019 = log(%1011) /* ty=Tensor[(15, 16, 6), float32] */;
  %1020 = @func_7403(%1013) /* ty=Tensor[(3, 11, 2), uint16] */;
  %1021 = %1018.0;
  (%1019, %1020, %var_13100, %1021, %var_13105)
}

def @func_12774(%var_12767: Tensor[(13, 6, 15), float32]) -> Tensor[(13, 6, 15), float32] {
  %1022 = cast(%var_12767, dtype="float32") /* ty=Tensor[(13, 6, 15), float32] */;
  atanh(%1022) /* ty=Tensor[(13, 6, 15), float32] */
}

def @func_9236() -> (Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32]) {
  %1023 = @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
  %1024 = %1023.0;
  %1025 = cast(%1024, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %1026 = cosh(%1025) /* ty=Tensor[(3, 11, 2), float64] */;
  %1027 = @func_7459() /* ty=Tensor[(3, 11, 2), float32] */;
  (%1026, %1027)
}

def @func_10804(%var_10687: Tensor[(48), bool], %var_10704: Tensor[(240), float32], %var_10753: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(315), bool], Tensor[(312), int16], Tensor[(315), bool], Tensor[(2, 200), float32], Tensor[(90, 12), float64], Tensor[(48), bool], Tensor[(1280), float64], Tensor[(240), float32], float64, Tensor[(3, 11, 2), bool], Tensor[(1, 15), int16], Tensor[(16, 5, 16), float64], Tensor[(3, 11, 2), float32], Tensor[(1350), float64], Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float64]) {
  %1028 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1029 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1030 = cast(meta[relay.Constant][89] /* ty=Tensor[(312), int16] */, dtype="int16") /* ty=Tensor[(312), int16] */;
  %1031 = cast(meta[relay.Constant][90] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1032 = %1029.0;
  %1033 = cast(%1032, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %1034 = reshape(%1030, newshape=[312]) /* ty=Tensor[(312), int16] */;
  %1035 = reshape(%1031, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %1036 = reshape(%1033, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %1037 = @func_8600(%1034, %1035, %1036) /* ty=(Tensor[(15), int16], Tensor[(780), float32], Tensor[(312), int16], Tensor[(315), bool], Tensor[(780, 1), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), int8], Tensor[(66), float32]) */;
  %1038 = cast(meta[relay.Constant][91] /* ty=Tensor[(90, 12), float64] */, dtype="float64") /* ty=Tensor[(90, 12), float64] */;
  %1039 = cast(%var_10687, dtype="bool") /* ty=Tensor[(48), bool] */;
  %1040 = reshape(%1038, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
  %1041 = reshape(%1039, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %1042 = @func_9207(%1040, %1041) /* ty=(Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) */;
  %1043 = cast(%var_10704, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1044 = %1042.1;
  %1045 = cast(%1044, dtype="float32") /* ty=Tensor[(2, 200), float32] */;
  %1046 = cast(-2.50591f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1047 = reshape(%1043, newshape=[1, 15, 16]) /* ty=Tensor[(1, 15, 16), float32] */;
  %1048 = reshape(%1045, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %1049 = reshape(%1046, newshape=[]) /* ty=float64 */;
  %1050 = @func_4518(%1047, %1048, %1049) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */;
  %1051 = cast(%1032, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %1052 = reshape(%1051, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %1053 = @func_6946(%1052) /* ty=(Tensor[(3, 11, 2), bool],) */;
  %1054 = @func_8097() /* ty=(Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) */;
  %1055 = cast(%var_10704, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1056 = cast(%1044, dtype="float32") /* ty=Tensor[(2, 200), float32] */;
  %1057 = cast(-2.50591f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1058 = reshape(%1055, newshape=[1, 15, 16]) /* ty=Tensor[(1, 15, 16), float32] */;
  %1059 = reshape(%1056, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %1060 = reshape(%1057, newshape=[]) /* ty=float64 */;
  %1061 = @func_4518(%1058, %1059, %1060) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */;
  %1062 = %1053.0;
  %1063 = cast(%1062, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %1064 = cast(%var_10753, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %1065 = reshape(%1063, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %1066 = reshape(%1064, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %1067 = @func_7521(%1065, %1066) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %1068 = @func_9236() /* ty=(Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32]) */;
  %1069 = cast(%1032, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %1070 = reshape(%1069, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %1071 = %1028.0;
  %1072 = %1037.3;
  %1073 = %1050.6;
  %1074 = %1054.0;
  %1075 = %1061.4;
  %1076 = %1067.0;
  %1077 = %1068.0;
  %1078 = @func_7600(%1070) /* ty=Tensor[(3, 11, 2), float64] */;
  (%1071, %1032, %1072, meta[relay.Constant][89] /* ty=Tensor[(312), int16] */, meta[relay.Constant][90] /* ty=Tensor[(315), bool] */, %1044, meta[relay.Constant][91] /* ty=Tensor[(90, 12), float64] */, %var_10687, %1073, %var_10704, -2.50591f64 /* ty=float64 */, %1062, %1074, %1075, %1076, %var_10753, %1077, %1078)
}

def @func_7955() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  %1079 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %1080 = cast(%1079, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %1081 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %1082 = exp(%1080) /* ty=Tensor[(3, 11, 2), float64] */;
  (%1081, %1082)
}

def @func_11717(%var_11691: Tensor[(9, 11, 5), uint32], %var_11692: Tensor[(9, 11, 5), uint32]) -> (Tensor[(9, 11, 5), uint32], Tensor[(3, 11, 2), float32]) {
  %1083 = cast(%var_11692, dtype="uint32") /* ty=Tensor[(9, 11, 5), uint32] */;
  %1084 = shape_of(%var_11691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%var_11691, dtype="uint32") /* ty=Tensor[(9, 11, 5), uint32] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1087 = left_shift(%1085, %1086) /* ty=Tensor[(9, 11, 5), uint32] */;
  %1088 = @func_7077() /* ty=Tensor[(3, 11, 2), float32] */;
  (%1087, %1088)
}

def @func_34(%var_29: Tensor[(15, 1), int16]) -> (Tensor[(15, ?), int16],) {
  %1089 = cast(%var_29, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %1090 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(15, 1), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1091 = cast(meta[relay.Constant][92] /* ty=Tensor[(15, 1), int16] */, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1093 = bitwise_or(%1091, %1092) /* ty=Tensor[(15, ?), int16] */;
  (%1093,)
}

def @func_7836() -> (Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) {
  %1094 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1095 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %1096 = %1094.0;
  %1097 = %1095.1;
  (%1096, %1097)
}

def @func_12039(%var_12003: Tensor[(5, 10), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(50), float32], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) {
  %1098 = cast(meta[relay.Constant][93] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %1099 = cast(meta[relay.Constant][93] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %1100 = cast(%var_12003, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %1101 = cast(meta[relay.Constant][94] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %1102 = reshape(%1098, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %1103 = reshape(%1099, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %1104 = reshape(%1100, newshape=[50]) /* ty=Tensor[(50), float32] */;
  %1105 = reshape(%1101, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %1106 = @func_2733(%1102, %1103, %1104, %1105) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
  %1107 = @func_7459() /* ty=Tensor[(3, 11, 2), float32] */;
  %1108 = cast(%1107, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %1109 = cast(meta[relay.Constant][95] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %1110 = reshape(%1108, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %1111 = reshape(%1109, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %1112 = @func_7521(%1110, %1111) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %1113 = %1106.1;
  %1114 = %1112.0;
  (%1107, %1113, meta[relay.Constant][93] /* ty=Tensor[(1080), float64] */, %var_12003, meta[relay.Constant][94] /* ty=Tensor[(48), bool] */, %1114, meta[relay.Constant][95] /* ty=Tensor[(1350), float64] */)
}

def @func_10519() -> (Tensor[(3, 11, 2), int32],) {
  %1115 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %1116 = cast(meta[relay.Constant][96] /* ty=Tensor[(3, 11, 2), float32] */, dtype="int32") /* ty=Tensor[(3, 11, 2), int32] */;
  %1117 = shape_of(%1115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1118 = cast(%1115, dtype="int32") /* ty=Tensor[(3, 11, 2), int32] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1120 = bitwise_xor(%1118, %1119) /* ty=Tensor[(3, 11, 2), int32] */;
  (%1120,)
}

def @func_8745(%var_8733: Tensor[(4, 16, 1), float32], %var_8742: Tensor[(400), float32]) -> (Tensor[(4, 16, 1), float32], Tensor[(400), float32], Tensor[(240), float32], Tensor[(400), float32], float64) {
  %1121 = cast(%var_8733, dtype="float32") /* ty=Tensor[(4, 16, 1), float32] */;
  %1122 = cast(meta[relay.Constant][97] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1123 = cast(%var_8742, dtype="float32") /* ty=Tensor[(400), float32] */;
  %1124 = cast(-5.95045f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1125 = reshape(%1122, newshape=[1, 15, 16]) /* ty=Tensor[(1, 15, 16), float32] */;
  %1126 = reshape(%1123, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %1127 = reshape(%1124, newshape=[]) /* ty=float64 */;
  %1128 = @func_4518(%1125, %1126, %1127) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */;
  %1129 = log(%1121) /* ty=Tensor[(4, 16, 1), float32] */;
  %1130 = %1128.3;
  (%1129, %1130, meta[relay.Constant][97] /* ty=Tensor[(240), float32] */, %var_8742, -5.95045f64 /* ty=float64 */)
}

def @func_12334(%var_12327: Tensor[(18), float64]) -> (Tensor[(15), int16], Tensor[(6, 3, 1), float64], Tensor[(18), float64]) {
  %1131 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %1132 = cast(%var_12327, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1133 = reshape(%1132, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %1134 = %1131.0;
  %1135 = @func_1409(%1133) /* ty=Tensor[(6, 3, 1), float64] */;
  (%1134, %1135, %var_12327)
}

def @func_12680() -> Tensor[(3, 11, 2), float32] {
  %1136 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1136.0
}

def @func_13016() -> Tensor[(3, 11, 2), float32] {
  @func_7290() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_417(%var_403: Tensor[(10, 5, 1), float32], %var_404: Tensor[(10, 5, 8), float32]) -> (Tensor[(10, 5, 8), float32],) {
  %1137 = cast(%var_403, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
  %1138 = cast(%var_404, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
  %1139 = subtract(%1137, %1138) /* ty=Tensor[(10, 5, 8), float32] */;
  (%1139,)
}

def @func_13300() -> (Tensor[(3, 11, 2), float32],) {
  %1140 = @func_10632() /* ty=Tensor[(3, 11, 2), float32] */;
  (%1140,)
}

def @func_13739(%var_13729: Tensor[(88), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(50), float32], Tensor[(3, 11, 2), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(9, 10, 13), float32], bool) {
  %1141 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1142 = cast(meta[relay.Constant][98] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %1143 = reshape(%1142, newshape=[5, 10]) /* ty=Tensor[(5, 10), float32] */;
  %1144 = @func_11637(%1143) /* ty=(Tensor[(11, 11, 15), float64], Tensor[(480), bool], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(16, 11, 14), float64]) */;
  %1145 = cast(%var_13729, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1146 = reshape(%1145, newshape=[2, 11, 4]) /* ty=Tensor[(2, 11, 4), float64] */;
  %1147 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1148 = reshape(%1147, newshape=[]) /* ty=bool */;
  %1149 = %1141.0;
  %1150 = %1144.4;
  %1151 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %1152 = @func_12230(%1146) /* ty=Tensor[(2, 11, 4), float64] */;
  %1153 = @func_1815(%1148) /* ty=Tensor[(9, 10, 13), float32] */;
  (%1149, %1150, meta[relay.Constant][98] /* ty=Tensor[(50), float32] */, %1151, %1152, %var_13729, %1153, False /* ty=bool */)
}

def @func_4181(%var_4168: float64, %var_4169: Tensor[(16, 5, 16), float64]) -> Tensor[(16, 5, 16), float64] {
  %1154 = cast(%var_4168, dtype="float64") /* ty=float64 */;
  %1155 = cast(%var_4169, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  floor_mod(%1154, %1155) /* ty=Tensor[(16, 5, 16), float64] */
}

def @func_13938() -> (Tensor[(3, 11, 2), float32],) {
  %1156 = @func_10422() /* ty=(Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) */;
  %1157 = %1156.3;
  (%1157,)
}

def @func_4339(%var_4292: Tensor[(7, 13, 4), float64], %var_4325: Tensor[(7, 13, 4), float64]) -> (Tensor[(9, 15, 3), float32], Tensor[(780), float32], Tensor[(7, 13, 4), bool]) {
  %1158 = cast(meta[relay.Constant][99] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1159 = reshape(%1158, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float32] */;
  %1160 = @func_1324(%1159) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */;
  %1161 = cast(%var_4292, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
  %1162 = log10(%1161) /* ty=Tensor[(7, 13, 4), float64] */;
  %1163 = cast(%var_4325, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
  %1164 = shape_of(%1162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1165 = cast(%1162, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1167 = %1160.4;
  %1168 = less(%1165, %1166) /* ty=Tensor[(7, 13, 4), bool] */;
  (%1167, meta[relay.Constant][99] /* ty=Tensor[(780), float32] */, %1168)
}

def @main(%var_14621: float64, %var_14622: Tensor[(6, 7, 16), float64]) -> Tensor[(6, 7, 16), float64] {
  %1169 = cast(%var_14621, dtype="float64") /* ty=float64 */;
  %1170 = cast(%var_14622, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  mod(%1169, %1170) /* ty=Tensor[(6, 7, 16), float64] */
}

def @func_11158() -> (Tensor[(3, 11, 2), float32],) {
  %1171 = @func_8348() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1172 = %1171.0;
  (%1172,)
}

def @func_11243(%var_11229: Tensor[(2, 12, 1), int8], %var_11230: Tensor[(2, 12, 11), int8]) -> Tensor[(2, 12, 11), bool] {
  %1173 = cast(%var_11229, dtype="bool") /* ty=Tensor[(2, 12, 1), bool] */;
  %1174 = cast(%var_11230, dtype="bool") /* ty=Tensor[(2, 12, 11), bool] */;
  less_equal(%1173, %1174) /* ty=Tensor[(2, 12, 11), bool] */
}

def @func_14173() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  %1175 = @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
  %1176 = @func_7459() /* ty=Tensor[(3, 11, 2), float32] */;
  %1177 = %1175.1;
  (%1176, %1177)
}

def @func_3038(%var_3027: uint16, %var_3028: Tensor[(13, 10, 15), uint16]) -> (Tensor[(13, 10, 15), bool], Tensor[(15, ?), int16], Tensor[(1, 15), int16], Tensor[(15, ?), int16]) {
  %1178 = cast(%var_3027, dtype="bool") /* ty=bool */;
  %1179 = cast(%var_3028, dtype="bool") /* ty=Tensor[(13, 10, 15), bool] */;
  %1180 = cast(meta[relay.Constant][100] /* ty=Tensor[(1, 15), int16] */, dtype="int16") /* ty=Tensor[(1, 15), int16] */;
  %1181 = reshape(%1180, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %1182 = @func_34(%1181) /* ty=(Tensor[(15, ?), int16],) */;
  %1183 = cast(meta[relay.Constant][100] /* ty=Tensor[(1, 15), int16] */, dtype="int16") /* ty=Tensor[(1, 15), int16] */;
  %1184 = reshape(%1183, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %1185 = @func_34(%1184) /* ty=(Tensor[(15, ?), int16],) */;
  %1186 = equal(%1178, %1179) /* ty=Tensor[(13, 10, 15), bool] */;
  %1187 = %1182.0;
  %1188 = %1185.0;
  (%1186, %1187, meta[relay.Constant][100] /* ty=Tensor[(1, 15), int16] */, %1188)
}

def @func_5231(%var_5195: Tensor[(9, 7, 13), float64]) -> (Tensor[(9, 7, 13), float64], Tensor[(15, ?), int16], Tensor[(15), int16]) {
  %1189 = cast(%var_5195, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
  %1190 = shape_of(meta[relay.Constant][101] /* ty=Tensor[(9, 7, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(meta[relay.Constant][101] /* ty=Tensor[(9, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1193 = cast(meta[relay.Constant][102] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %1194 = reshape(%1193, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %1195 = @func_34(%1194) /* ty=(Tensor[(15, ?), int16],) */;
  %1196 = floor_mod(%1191, %1192) /* ty=Tensor[(9, 7, 13), float64] */;
  %1197 = %1195.0;
  (%1196, %1197, meta[relay.Constant][102] /* ty=Tensor[(15), int16] */)
}

def @func_8870() -> Tensor[(15), int16] {
  %1198 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %1198.0
}

def @func_9012(%var_9001: Tensor[(50), float32], %var_9002: Tensor[(400), float32], %var_9007: Tensor[(50), float32]) -> (Tensor[(11, 11, 15), float64], Tensor[(10, 5, 8), float32], Tensor[(400), float32], Tensor[(50), int32]) {
  %1199 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %1200 = cast(%var_9001, dtype="float32") /* ty=Tensor[(50), float32] */;
  %1201 = cast(%var_9002, dtype="float32") /* ty=Tensor[(400), float32] */;
  %1202 = reshape(%1200, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %1203 = reshape(%1201, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %1204 = @func_417(%1202, %1203) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %1205 = cast(%var_9007, dtype="int32") /* ty=Tensor[(50), int32] */;
  %1206 = shape_of(%var_9001, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1207 = cast(%var_9001, dtype="int32") /* ty=Tensor[(50), int32] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1209 = %1199.1;
  %1210 = %1204.0;
  %1211 = bitwise_xor(%1207, %1208) /* ty=Tensor[(50), int32] */;
  (%1209, %1210, %var_9002, %1211)
}

def @func_10041() -> (bool, Tensor[(15), int16]) {
  %1212 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
  %1213 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %1214 = %1212.2;
  %1215 = %1213.0;
  (%1214, %1215)
}

def @func_8966(%var_8910: Tensor[(315), bool], %var_8911: Tensor[(10, 78), float32], %var_8912: Tensor[(18), float64], %var_8913: float64, %var_8914: Tensor[(1280), float64], %var_8937: Tensor[(360, 1), bool]) -> (Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) {
  %1216 = cast(%var_8910, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1217 = cast(%var_8910, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1218 = cast(%var_8911, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %1219 = cast(%var_8912, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1220 = cast(%var_8913, dtype="float64") /* ty=float64 */;
  %1221 = cast(%var_8914, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %1222 = cast(meta[relay.Constant][103] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1223 = reshape(%1216, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %1224 = reshape(%1217, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %1225 = reshape(%1218, newshape=[780, 1]) /* ty=Tensor[(780, 1), float32] */;
  %1226 = reshape(%1219, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %1227 = reshape(%1220, newshape=[]) /* ty=float64 */;
  %1228 = reshape(%1221, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %1229 = reshape(%1222, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %1230 = @func_6131(%1223, %1224, %1225, %1226, %1227, %1228, %1229) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */;
  %1231 = cast(%var_8937, dtype="bool") /* ty=Tensor[(360, 1), bool] */;
  %1232 = cast(meta[relay.Constant][104] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %1233 = reshape(%1231, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), bool] */;
  %1234 = reshape(%1232, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %1235 = @func_934(%1233, %1234) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) */;
  %1236 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %1237 = %1236.1;
  %1238 = cast(%1237, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %1239 = cast(meta[relay.Constant][104] /* ty=Tensor[(15), int16] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %1240 = cast(%var_8912, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1241 = cast(%var_8937, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %1242 = %1230.11;
  %1243 = %1235.1;
  %1244 = floor_divide(%1238, %1239) /* ty=Tensor[(11, 11, 15), float64] */;
  %1245 = mod(%1240, %1241) /* ty=Tensor[(360, 18), float64] */;
  (%1242, %var_8910, %var_8911, %var_8913, %var_8914, meta[relay.Constant][103] /* ty=Tensor[(364), float64] */, %1243, %1244, %1245)
}

def @func_8678() -> Tensor[(3, 11, 2), float32] {
  @func_7077() /* ty=Tensor[(3, 11, 2), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11779() -> Tensor[(15), int16] {
  @func_11777() /* ty=Tensor[(15), int16] */
}

def @func_1383(%var_1382: Tensor[(15, 1), int16]) -> (Tensor[(15, 5, 6), float32], Tensor[(15, ?), int16], Tensor[(15, 1), int16], Tensor[(15, 1), int16], Tensor[(6, 60), bool]) {
  %12 = fn (%var_1360: Tensor[(15, 1), int16]) -> (Tensor[(15, 5, 6), float32], Tensor[(15, ?), int16], Tensor[(15, 1), int16], Tensor[(15, 1), int16], Tensor[(6, 60), bool]) {
    %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
    %1 = cast(%var_1360, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
    %2 = reshape(%1, newshape=[15]) /* ty=Tensor[(15), int16] */;
    %3 = @func_141(%2) /* ty=(Tensor[(9, 15, 3), uint16], Tensor[(9, 15, 3), float32], Tensor[(9, 15, 3), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(15, ?), int16]) */;
    %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 60), bool] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
    %5 = cast(%var_1360, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
    %6 = reshape(%4, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), bool] */;
    %7 = reshape(%5, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %8 = @func_934(%6, %7) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) */;
    %9 = erf(%0) /* ty=Tensor[(15, 5, 6), float32] */;
    %10 = %3.5;
    %11 = %8.2;
    (%9, %10, %var_1360, %11, meta[relay.Constant][1] /* ty=Tensor[(6, 60), bool] */)
  };
  %12(%var_1382) /* ty=(Tensor[(15, 5, 6), float32], Tensor[(15, ?), int16], Tensor[(15, 1), int16], Tensor[(15, 1), int16], Tensor[(6, 60), bool]) */
}

def @func_14014() -> (Tensor[(3, 11, 2), float32],) {
  %13 = @func_10422() /* ty=(Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) */;
  %14 = %13.3;
  (%14,)
}

def @func_11817() -> (Tensor[(3, 11, 2), float32],) {
  @func_11815() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_14066() -> Tensor[(3, 11, 2), float32] {
  @func_14064() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_14569() -> Tensor[(3, 11, 2), float32] {
  %15 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %15.0
}

def @func_322(%var_317: Tensor[(14, 10, 15), uint64]) -> Tensor[(14, 10, 15), bool] {
  %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 10, 1), uint64] */, dtype="bool") /* ty=Tensor[(14, 10, 1), bool] */;
  %17 = cast(%var_317, dtype="bool") /* ty=Tensor[(14, 10, 15), bool] */;
  less_equal(%16, %17) /* ty=Tensor[(14, 10, 15), bool] */
}

def @func_13821() -> (Tensor[(15), int16], Tensor[(3, 11, 2), float32]) {
  %21 = fn () -> (Tensor[(15), int16], Tensor[(3, 11, 2), float32]) {
    %18 = @func_8097() /* ty=(Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) */;
    %19 = @func_11649() /* ty=Tensor[(15), int16] */;
    %20 = %18.3;
    (%19, %20)
  };
  %21() /* ty=(Tensor[(15), int16], Tensor[(3, 11, 2), float32]) */
}

def @func_12336(%var_12335: Tensor[(18), float64]) -> (Tensor[(15), int16], Tensor[(6, 3, 1), float64], Tensor[(18), float64]) {
  %27 = fn (%var_12327: Tensor[(18), float64]) -> (Tensor[(15), int16], Tensor[(6, 3, 1), float64], Tensor[(18), float64]) {
    %22 = @func_8413() /* ty=(Tensor[(15), int16],) */;
    %23 = cast(%var_12327, dtype="float64") /* ty=Tensor[(18), float64] */;
    %24 = reshape(%23, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
    %25 = %22.0;
    %26 = @func_1409(%24) /* ty=Tensor[(6, 3, 1), float64] */;
    (%25, %26, %var_12327)
  };
  %27(%var_12335) /* ty=(Tensor[(15), int16], Tensor[(6, 3, 1), float64], Tensor[(18), float64]) */
}

def @func_11504() -> Tensor[(15), int16] {
  %29 = fn () -> Tensor[(15), int16] {
    %28 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
    %28.2
  };
  %29() /* ty=Tensor[(15), int16] */
}

def @func_12180(%var_12176: Tensor[(315), bool], %var_12177: Tensor[(780), float32], %var_12178: Tensor[(18, 1), float64], %var_12179: Tensor[(360), bool]) -> (Tensor[(15), int16], bool, Tensor[(10, 78), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18, 1), float64], Tensor[(1280), float64], Tensor[(360), bool]) {
  @func_12174(%var_12176, %var_12177, %var_12178, %var_12179) /* ty=(Tensor[(15), int16], bool, Tensor[(10, 78), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18, 1), float64], Tensor[(1280), float64], Tensor[(360), bool]) */
}

def @func_14543(%var_14542: Tensor[(10, 5, 1), float32]) -> (Tensor[(10, 5, 7), float32], Tensor[(15), int16], Tensor[(9, 10, 13), float32], bool) {
  %38 = fn (%var_14514: Tensor[(10, 5, 1), float32]) -> (Tensor[(10, 5, 7), float32], Tensor[(15), int16], Tensor[(9, 10, 13), float32], bool) {
    %30 = cast(%var_14514, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
    %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 7), float32] */;
    %32 = @func_8413() /* ty=(Tensor[(15), int16],) */;
    %33 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %34 = reshape(%33, newshape=[]) /* ty=bool */;
    %35 = add(%30, %31) /* ty=Tensor[(10, 5, 7), float32] */;
    %36 = %32.0;
    %37 = @func_1815(%34) /* ty=Tensor[(9, 10, 13), float32] */;
    (%35, %36, %37, False /* ty=bool */)
  };
  %38(%var_14542) /* ty=(Tensor[(10, 5, 7), float32], Tensor[(15), int16], Tensor[(9, 10, 13), float32], bool) */
}

def @func_14191() -> (Tensor[(3, 11, 2), float32],) {
  %39 = @func_12699() /* ty=Tensor[(3, 11, 2), float32] */;
  (%39,)
}

def @func_14158(%var_14156: Tensor[(2100), uint64], %var_14157: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(18), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool], Tensor[(2100), uint8], Tensor[(3, 11, 2), float32], Tensor[(1350), float64], Tensor[(15), int16]) {
  %70 = fn (%var_14084: Tensor[(2100), uint64], %var_14117: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(18), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool], Tensor[(2100), uint8], Tensor[(3, 11, 2), float32], Tensor[(1350), float64], Tensor[(15), int16]) {
    %40 = @func_14014() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %41 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
    %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %44 = cast(meta[relay.Constant][5] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
    %45 = cast(meta[relay.Constant][6] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %46 = reshape(%42, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
    %47 = reshape(%43, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
    %48 = reshape(%44, newshape=[50]) /* ty=Tensor[(50), float32] */;
    %49 = reshape(%45, newshape=[48]) /* ty=Tensor[(48), bool] */;
    %50 = @func_2733(%46, %47, %48, %49) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
    %51 = cast(%var_14084, dtype="uint64") /* ty=Tensor[(2100), uint64] */;
    %52 = reshape(%51, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), uint64] */;
    %53 = @func_322(%52) /* ty=Tensor[(14, 10, 15), bool] */;
    %54 = cast(%53, dtype="uint8") /* ty=Tensor[(14, 10, 15), uint8] */;
    %55 = shape_of(%var_14084, dtype="int32") /* ty=Tensor[(1), int32] */;
    %56 = cast(%var_14084, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %58 = %41.0;
    %59 = cast(%58, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
    %60 = cast(%var_14117, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %61 = reshape(%59, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
    %62 = reshape(%60, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
    %63 = @func_7521(%61, %62) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
    %64 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
    %65 = %40.0;
    %66 = %50.3;
    %67 = bitwise_and(%56, %57) /* ty=Tensor[(2100), uint8] */;
    %68 = %63.0;
    %69 = %64.2;
    (%65, %58, %66, meta[relay.Constant][4] /* ty=Tensor[(1080), float64] */, meta[relay.Constant][5] /* ty=Tensor[(50), float32] */, meta[relay.Constant][6] /* ty=Tensor[(48), bool] */, %67, %68, %var_14117, %69)
  };
  %70(%var_14156, %var_14157) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(18), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool], Tensor[(2100), uint8], Tensor[(3, 11, 2), float32], Tensor[(1350), float64], Tensor[(15), int16]) */
}

def @func_9319(%var_9317: Tensor[(1815), float64]) -> Tensor[(1815), float64] {
  @func_9316(%var_9317) /* ty=Tensor[(1815), float64] */
}

def @func_8982() -> (Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(5, 156), float32]) {
  %71 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 156), float32] */, dtype="float32") /* ty=Tensor[(5, 156), float32] */;
  %72 = reshape(%71, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %73 = @func_6872(%72) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */;
  %74 = @func_8678() /* ty=Tensor[(3, 11, 2), float32] */;
  %75 = %73.1;
  (%74, %75, meta[relay.Constant][7] /* ty=Tensor[(5, 156), float32] */)
}

def @func_13118(%var_13115: Tensor[(15, 16, 6), float32], %var_13116: Tensor[(11, 6), float32], %var_13117: Tensor[(1350), float64]) -> (Tensor[(15, 16, 6), float32], Tensor[(3, 11, 2), uint16], Tensor[(11, 6), float32], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) {
  %87 = fn (%var_13095: Tensor[(15, 16, 6), float32], %var_13100: Tensor[(11, 6), float32], %var_13105: Tensor[(1350), float64]) -> (Tensor[(15, 16, 6), float32], Tensor[(3, 11, 2), uint16], Tensor[(11, 6), float32], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) {
    %76 = cast(%var_13095, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
    %77 = cast(%var_13100, dtype="float32") /* ty=Tensor[(11, 6), float32] */;
    %78 = reshape(%77, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
    %79 = cast(%var_13100, dtype="float32") /* ty=Tensor[(11, 6), float32] */;
    %80 = cast(%var_13105, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %81 = reshape(%79, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
    %82 = reshape(%80, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
    %83 = @func_7521(%81, %82) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
    %84 = log(%76) /* ty=Tensor[(15, 16, 6), float32] */;
    %85 = @func_7403(%78) /* ty=Tensor[(3, 11, 2), uint16] */;
    %86 = %83.0;
    (%84, %85, %var_13100, %86, %var_13105)
  };
  %87(%var_13115, %var_13116, %var_13117) /* ty=(Tensor[(15, 16, 6), float32], Tensor[(3, 11, 2), uint16], Tensor[(11, 6), float32], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) */
}

def @func_13531(%var_13528: Tensor[(315, 1), bool], %var_13529: float64, %var_13530: Tensor[(1280), float64]) -> (Tensor[(15), int16], Tensor[(11, 11, 15), float64], Tensor[(315, 1), bool], Tensor[(780), float32], float64, Tensor[(1280), float64], Tensor[(360), bool], Tensor[(18), float64]) {
  %105 = fn (%var_13483: Tensor[(315, 1), bool], %var_13486: float64, %var_13487: Tensor[(1280), float64]) -> (Tensor[(15), int16], Tensor[(11, 11, 15), float64], Tensor[(315, 1), bool], Tensor[(780), float32], float64, Tensor[(1280), float64], Tensor[(360), bool], Tensor[(18), float64]) {
    %88 = cast(%var_13483, dtype="bool") /* ty=Tensor[(315, 1), bool] */;
    %89 = cast(meta[relay.Constant][8] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
    %90 = cast(meta[relay.Constant][9] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %91 = cast(%var_13486, dtype="float64") /* ty=float64 */;
    %92 = cast(%var_13487, dtype="float64") /* ty=Tensor[(1280), float64] */;
    %93 = cast(meta[relay.Constant][10] /* ty=Tensor[(360), bool] */, dtype="bool") /* ty=Tensor[(360), bool] */;
    %94 = reshape(%88, newshape=[315]) /* ty=Tensor[(315), bool] */;
    %95 = reshape(%89, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
    %96 = reshape(%90, newshape=[18]) /* ty=Tensor[(18), float64] */;
    %97 = reshape(%91, newshape=[]) /* ty=float64 */;
    %98 = reshape(%92, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
    %99 = reshape(%93, newshape=[360, 1]) /* ty=Tensor[(360, 1), bool] */;
    %100 = @func_8966(%94, %95, %96, %97, %98, %99) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) */;
    %101 = cast(meta[relay.Constant][9] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %102 = @func_11649() /* ty=Tensor[(15), int16] */;
    %103 = %100.7;
    %104 = cos(%101) /* ty=Tensor[(18), float64] */;
    (%102, %103, %var_13483, meta[relay.Constant][8] /* ty=Tensor[(780), float32] */, %var_13486, %var_13487, meta[relay.Constant][10] /* ty=Tensor[(360), bool] */, %104)
  };
  %105(%var_13528, %var_13529, %var_13530) /* ty=(Tensor[(15), int16], Tensor[(11, 11, 15), float64], Tensor[(315, 1), bool], Tensor[(780), float32], float64, Tensor[(1280), float64], Tensor[(360), bool], Tensor[(18), float64]) */
}

def @func_10804(%var_10687: Tensor[(48), bool], %var_10704: Tensor[(240), float32], %var_10753: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(315), bool], Tensor[(312), int16], Tensor[(315), bool], Tensor[(2, 200), float32], Tensor[(90, 12), float64], Tensor[(48), bool], Tensor[(1280), float64], Tensor[(240), float32], float64, Tensor[(3, 11, 2), bool], Tensor[(1, 15), int16], Tensor[(16, 5, 16), float64], Tensor[(3, 11, 2), float32], Tensor[(1350), float64], Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float64]) {
  %106 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %107 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %108 = cast(meta[relay.Constant][11] /* ty=Tensor[(312), int16] */, dtype="int16") /* ty=Tensor[(312), int16] */;
  %109 = cast(meta[relay.Constant][12] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %110 = %107.0;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %112 = reshape(%108, newshape=[312]) /* ty=Tensor[(312), int16] */;
  %113 = reshape(%109, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %114 = reshape(%111, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %115 = @func_8600(%112, %113, %114) /* ty=(Tensor[(15), int16], Tensor[(780), float32], Tensor[(312), int16], Tensor[(315), bool], Tensor[(780, 1), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), int8], Tensor[(66), float32]) */;
  %116 = cast(meta[relay.Constant][13] /* ty=Tensor[(90, 12), float64] */, dtype="float64") /* ty=Tensor[(90, 12), float64] */;
  %117 = cast(%var_10687, dtype="bool") /* ty=Tensor[(48), bool] */;
  %118 = reshape(%116, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
  %119 = reshape(%117, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %120 = @func_9207(%118, %119) /* ty=(Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) */;
  %121 = cast(%var_10704, dtype="float32") /* ty=Tensor[(240), float32] */;
  %122 = %120.1;
  %123 = cast(%122, dtype="float32") /* ty=Tensor[(2, 200), float32] */;
  %124 = cast(-2.50591f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %125 = reshape(%121, newshape=[1, 15, 16]) /* ty=Tensor[(1, 15, 16), float32] */;
  %126 = reshape(%123, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %127 = reshape(%124, newshape=[]) /* ty=float64 */;
  %128 = @func_4518(%125, %126, %127) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */;
  %129 = cast(%110, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %130 = reshape(%129, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %131 = @func_6946(%130) /* ty=(Tensor[(3, 11, 2), bool],) */;
  %132 = @func_8097() /* ty=(Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) */;
  %133 = cast(%var_10704, dtype="float32") /* ty=Tensor[(240), float32] */;
  %134 = cast(%122, dtype="float32") /* ty=Tensor[(2, 200), float32] */;
  %135 = cast(-2.50591f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %136 = reshape(%133, newshape=[1, 15, 16]) /* ty=Tensor[(1, 15, 16), float32] */;
  %137 = reshape(%134, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %138 = reshape(%135, newshape=[]) /* ty=float64 */;
  %139 = @func_4518(%136, %137, %138) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */;
  %140 = %131.0;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %142 = cast(%var_10753, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %143 = reshape(%141, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %144 = reshape(%142, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %145 = @func_7521(%143, %144) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %146 = @func_9236() /* ty=(Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32]) */;
  %147 = cast(%110, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %148 = reshape(%147, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %149 = %106.0;
  %150 = %115.3;
  %151 = %128.6;
  %152 = %132.0;
  %153 = %139.4;
  %154 = %145.0;
  %155 = %146.0;
  %156 = @func_7600(%148) /* ty=Tensor[(3, 11, 2), float64] */;
  (%149, %110, %150, meta[relay.Constant][11] /* ty=Tensor[(312), int16] */, meta[relay.Constant][12] /* ty=Tensor[(315), bool] */, %122, meta[relay.Constant][13] /* ty=Tensor[(90, 12), float64] */, %var_10687, %151, %var_10704, -2.50591f64 /* ty=float64 */, %140, %152, %153, %154, %var_10753, %155, %156)
}

def @func_10196(%var_10191: Tensor[(13, 2, 12), float32]) -> (Tensor[(13, 2, 12), float32],) {
  %157 = cast(%var_10191, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
  %158 = sigmoid(%157) /* ty=Tensor[(13, 2, 12), float32] */;
  (%158,)
}

def @func_12232(%var_12231: Tensor[(2, 11, 4), float64]) -> Tensor[(2, 11, 4), float64] {
  %160 = fn (%var_12222: Tensor[(2, 11, 4), float64]) -> Tensor[(2, 11, 4), float64] {
    %159 = cast(%var_12222, dtype="float64") /* ty=Tensor[(2, 11, 4), float64] */;
    sin(%159) /* ty=Tensor[(2, 11, 4), float64] */
  };
  %160(%var_12231) /* ty=Tensor[(2, 11, 4), float64] */
}

def @func_8413() -> (Tensor[(15), int16],) {
  %161 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
  %162 = %161.2;
  (%162,)
}

def @func_7078() -> Tensor[(3, 11, 2), float32] {
  %164 = fn () -> Tensor[(3, 11, 2), float32] {
    %163 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %163.0
  };
  %164() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_10961(%var_10958: Tensor[(1080), float64], %var_10959: Tensor[(6, 10, 4), bool], %var_10960: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(48), bool], bool, Tensor[(3, 11, 2), float32], Tensor[(6, 10, 4), bool], Tensor[(16, 11, 14), float64], Tensor[(1350), float64], Tensor[(3, 11, 2), float64]) {
  %189 = fn (%var_10916: Tensor[(1080), float64], %var_10929: Tensor[(6, 10, 4), bool], %var_10941: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(48), bool], bool, Tensor[(3, 11, 2), float32], Tensor[(6, 10, 4), bool], Tensor[(16, 11, 14), float64], Tensor[(1350), float64], Tensor[(3, 11, 2), float64]) {
    %165 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %166 = cast(%var_10916, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %167 = cast(meta[relay.Constant][14] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %168 = reshape(%166, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
    %169 = reshape(%167, newshape=[48]) /* ty=Tensor[(48), bool] */;
    %170 = @func_9207(%168, %169) /* ty=(Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) */;
    %171 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %172 = reshape(%171, newshape=[]) /* ty=bool */;
    %173 = @func_4769(%172) /* ty=(Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) */;
    %174 = %173.4;
    %175 = cast(%var_10929, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
    %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %177 = cast(%174, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
    %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %179 = cast(%var_10941, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %180 = reshape(%179, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
    %181 = @func_7338(%180) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
    %182 = @func_9464() /* ty=(Tensor[(3, 11, 2), float64], float64, Tensor[(64), float32], Tensor[(400), float32]) */;
    %183 = %165.0;
    %184 = %170.4;
    %185 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
    %186 = logical_or(%177, %178) /* ty=Tensor[(6, 10, 4), bool] */;
    %187 = %181.0;
    %188 = %182.0;
    (%183, %184, %var_10916, meta[relay.Constant][14] /* ty=Tensor[(48), bool] */, True /* ty=bool */, %185, %186, %187, %var_10941, %188)
  };
  %189(%var_10958, %var_10959, %var_10960) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(48), bool], bool, Tensor[(3, 11, 2), float32], Tensor[(6, 10, 4), bool], Tensor[(16, 11, 14), float64], Tensor[(1350), float64], Tensor[(3, 11, 2), float64]) */
}

def @func_11948() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) {
  %197 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) {
    %190 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %191 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %192 = reshape(%191, newshape=[]) /* ty=bool */;
    %193 = @func_4769(%192) /* ty=(Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) */;
    %194 = %190.0;
    %195 = @func_7077() /* ty=Tensor[(3, 11, 2), float32] */;
    %196 = %193.2;
    (%194, %195, %196, False /* ty=bool */)
  };
  %197() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) */
}

def @func_9394() -> (Tensor[(3, 11, 2), float32],) {
  %198 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
  (%198,)
}

def @func_11739() -> Tensor[(3, 11, 2), float32] {
  %200 = fn () -> Tensor[(3, 11, 2), float32] {
    %199 = @func_10838() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %199.0
  };
  %200() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_6490() -> Tensor[(3, 11, 2), float32] {
  %202 = fn () -> Tensor[(3, 11, 2), float32] {
    %201 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %201.0
  };
  %202() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_13302() -> (Tensor[(3, 11, 2), float32],) {
  @func_13300() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_9207(%var_9203: Tensor[(1080), float64], %var_9205: Tensor[(48), bool]) -> (Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) {
  %203 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %204 = %203.0;
  %205 = cast(%204, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %206 = cast(%var_9203, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %207 = cast(%var_9203, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %208 = cast(meta[relay.Constant][15] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %209 = cast(%var_9205, dtype="bool") /* ty=Tensor[(48), bool] */;
  %210 = reshape(%206, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %211 = reshape(%207, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %212 = reshape(%208, newshape=[50]) /* ty=Tensor[(50), float32] */;
  %213 = reshape(%209, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %214 = @func_2733(%210, %211, %212, %213) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
  %215 = sqrt(%205) /* ty=Tensor[(3, 11, 2), float64] */;
  %216 = %214.2;
  (%215, %216, %var_9203, meta[relay.Constant][15] /* ty=Tensor[(50), float32] */, %var_9205)
}

def @func_13366(%var_13365: Tensor[(4, 120), bool]) -> (Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(4, 120), bool]) {
  %224 = fn (%var_13360: Tensor[(4, 120), bool]) -> (Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(4, 120), bool]) {
    %217 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
    %218 = cast(meta[relay.Constant][16] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %219 = cast(%var_13360, dtype="bool") /* ty=Tensor[(4, 120), bool] */;
    %220 = reshape(%218, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), bool] */;
    %221 = reshape(%219, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), bool] */;
    %222 = %217.2;
    %223 = @func_1177(%220, %221) /* ty=Tensor[(6, 10, 8), float32] */;
    (%222, %223, meta[relay.Constant][16] /* ty=Tensor[(48), bool] */, %var_13360)
  };
  %224(%var_13365) /* ty=(Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(4, 120), bool]) */
}

def @func_9387() -> Tensor[(15), int16] {
  %225 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
  %225.2
}

def @func_9863(%var_9861: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 13), float64], Tensor[(780), float32]) {
  @func_9860(%var_9861) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(6, 10, 13), float64], Tensor[(780), float32]) */
}

def @func_10424() -> (Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) {
  @func_10422() /* ty=(Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) */
}

def @func_9279() -> (Tensor[(3, 11, 2), float32],) {
  %226 = @func_8678() /* ty=Tensor[(3, 11, 2), float32] */;
  (%226,)
}

def @func_7525(%var_7523: Tensor[(3, 11, 2), float32], %var_7524: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) {
  @func_7521(%var_7523, %var_7524) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */
}

def @func_10632() -> Tensor[(3, 11, 2), float32] {
  %227 = @func_10129() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %227.0
}

def @func_3041(%var_3039: uint16, %var_3040: Tensor[(13, 10, 15), uint16]) -> (Tensor[(13, 10, 15), bool], Tensor[(15, ?), int16], Tensor[(1, 15), int16], Tensor[(15, ?), int16]) {
  %239 = fn (%var_3027: uint16, %var_3028: Tensor[(13, 10, 15), uint16]) -> (Tensor[(13, 10, 15), bool], Tensor[(15, ?), int16], Tensor[(1, 15), int16], Tensor[(15, ?), int16]) {
    %228 = cast(%var_3027, dtype="bool") /* ty=bool */;
    %229 = cast(%var_3028, dtype="bool") /* ty=Tensor[(13, 10, 15), bool] */;
    %230 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 15), int16] */, dtype="int16") /* ty=Tensor[(1, 15), int16] */;
    %231 = reshape(%230, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %232 = @func_34(%231) /* ty=(Tensor[(15, ?), int16],) */;
    %233 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 15), int16] */, dtype="int16") /* ty=Tensor[(1, 15), int16] */;
    %234 = reshape(%233, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %235 = @func_34(%234) /* ty=(Tensor[(15, ?), int16],) */;
    %236 = equal(%228, %229) /* ty=Tensor[(13, 10, 15), bool] */;
    %237 = %232.0;
    %238 = %235.0;
    (%236, %237, meta[relay.Constant][17] /* ty=Tensor[(1, 15), int16] */, %238)
  };
  %239(%var_3039, %var_3040) /* ty=(Tensor[(13, 10, 15), bool], Tensor[(15, ?), int16], Tensor[(1, 15), int16], Tensor[(15, ?), int16]) */
}

def @func_9389() -> Tensor[(15), int16] {
  @func_9387() /* ty=Tensor[(15), int16] */
}

def @func_11328() -> (Tensor[(3, 11, 2), float32], Tensor[(64), float32], Tensor[(3, 11, 2), float32]) {
  %240 = @func_10838() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %241 = @func_7667() /* ty=(Tensor[(3, 11, 2), bool], Tensor[(3, 11, 2), float32]) */;
  %242 = %240.0;
  %243 = @func_10861() /* ty=Tensor[(64), float32] */;
  %244 = %241.1;
  (%242, %243, %244)
}

def @func_6976(%var_6975: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(780), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64]) {
  %254 = fn (%var_6966: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(780), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64]) {
    %245 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %246 = cast(%var_6966, dtype="float32") /* ty=Tensor[(780), float32] */;
    %247 = reshape(%246, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %248 = @func_6872(%247) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */;
    %249 = cast(meta[relay.Constant][18] /* ty=Tensor[(2100), uint64] */, dtype="uint64") /* ty=Tensor[(2100), uint64] */;
    %250 = reshape(%249, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), uint64] */;
    %251 = %245.0;
    %252 = %248.0;
    %253 = @func_322(%250) /* ty=Tensor[(14, 10, 15), bool] */;
    (%251, %252, %var_6966, %253, meta[relay.Constant][18] /* ty=Tensor[(2100), uint64] */)
  };
  %254(%var_6975) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(780), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64]) */
}

def @func_11981() -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16]) {
  %258 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16]) {
    %255 = @func_11815() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %256 = %255.0;
    %257 = @func_8870() /* ty=Tensor[(15), int16] */;
    (%256, %257)
  };
  %258() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16]) */
}

def @func_7257(%var_7256: Tensor[(3, 11, 2), float32]) -> (Tensor[(3, 11, 2), int8],) {
  %266 = fn (%var_7248: Tensor[(3, 11, 2), float32]) -> (Tensor[(3, 11, 2), int8],) {
    %259 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
    %260 = %259.0;
    %261 = cast(%var_7248, dtype="int8") /* ty=Tensor[(3, 11, 2), int8] */;
    %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
    %263 = cast(%260, dtype="int8") /* ty=Tensor[(3, 11, 2), int8] */;
    %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %265 = right_shift(%263, %264) /* ty=Tensor[(3, 11, 2), int8] */;
    (%265,)
  };
  %266(%var_7256) /* ty=(Tensor[(3, 11, 2), int8],) */
}

def @func_7837() -> (Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) {
  %271 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) {
    %267 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %268 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
    %269 = %267.0;
    %270 = %268.1;
    (%269, %270)
  };
  %271() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */
}

def @func_11495(%var_11494: Tensor[(15), int16]) -> (Tensor[(3, 11, 2), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(3, 11, 2), float32]) {
  %279 = fn (%var_11469: Tensor[(15), int16]) -> (Tensor[(3, 11, 2), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(3, 11, 2), float32]) {
    %272 = cast(%var_11469, dtype="int16") /* ty=Tensor[(15), int16] */;
    %273 = reshape(%272, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %274 = @func_34(%273) /* ty=(Tensor[(15, ?), int16],) */;
    %275 = @func_10336() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %276 = @func_7077() /* ty=Tensor[(3, 11, 2), float32] */;
    %277 = %274.0;
    %278 = %275.0;
    (%276, %277, %var_11469, %278)
  };
  %279(%var_11494) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(3, 11, 2), float32]) */
}

def @main(%var_14621: float64, %var_14622: Tensor[(6, 7, 16), float64]) -> Tensor[(6, 7, 16), float64] {
  %280 = cast(%var_14621, dtype="float64") /* ty=float64 */;
  %281 = cast(%var_14622, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  mod(%280, %281) /* ty=Tensor[(6, 7, 16), float64] */
}

def @func_12311() -> (Tensor[(11, 11, 15), float64],) {
  @func_12309() /* ty=(Tensor[(11, 11, 15), float64],) */
}

def @func_13173() -> (Tensor[(3, 11, 2), float64],) {
  @func_13171() /* ty=(Tensor[(3, 11, 2), float64],) */
}

def @func_14356() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), bool]) {
  %287 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), bool]) {
    %282 = @func_10288() /* ty=Tensor[(3, 11, 2), float32] */;
    %283 = cast(%282, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
    %284 = reshape(%283, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
    %285 = @func_6946(%284) /* ty=(Tensor[(3, 11, 2), bool],) */;
    %286 = %285.0;
    (%282, %286)
  };
  %287() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), bool]) */
}

def @func_9994() -> Tensor[(15), int16] {
  %289 = fn () -> Tensor[(15), int16] {
    %288 = @func_8413() /* ty=(Tensor[(15), int16],) */;
    %288.0
  };
  %289() /* ty=Tensor[(15), int16] */
}

def @func_9316(%var_9310: Tensor[(1815), float64]) -> Tensor[(1815), float64] {
  %290 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %291 = %290.2;
  %292 = cast(%var_9310, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %293 = shape_of(%291, dtype="int32") /* ty=Tensor[(1), int32] */;
  %294 = cast(%291, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?), float64] */;
  power(%294, %295) /* ty=Tensor[(1815), float64] */
}

def @func_5322(%var_5310: Tensor[(2, 1, 16), int32], %var_5311: Tensor[(2, 1, 16), int32]) -> (Tensor[(2, ?, 16), int32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280, 1), float64]) {
  %296 = cast(%var_5311, dtype="int32") /* ty=Tensor[(2, 1, 16), int32] */;
  %297 = shape_of(%var_5310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_5310, dtype="int32") /* ty=Tensor[(2, 1, 16), int32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %300 = cast(4.2633f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %301 = cast(meta[relay.Constant][19] /* ty=Tensor[(1280, 1), float64] */, dtype="float64") /* ty=Tensor[(1280, 1), float64] */;
  %302 = reshape(%300, newshape=[]) /* ty=float64 */;
  %303 = reshape(%301, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %304 = multiply(%298, %299) /* ty=Tensor[(2, ?, 16), int32] */;
  %305 = @func_4181(%302, %303) /* ty=Tensor[(16, 5, 16), float64] */;
  (%304, %305, 4.2633f64 /* ty=float64 */, meta[relay.Constant][19] /* ty=Tensor[(1280, 1), float64] */)
}

def @func_4769(%var_4750: bool) -> (Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) {
  %306 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 10, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %307 = acosh(%306) /* ty=Tensor[(6, 10, 4), float32] */;
  %308 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 10, 4), float32] */, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %312 = cast(%var_4750, dtype="bool") /* ty=bool */;
  %313 = reshape(%312, newshape=[]) /* ty=bool */;
  %314 = cast(meta[relay.Constant][21] /* ty=Tensor[(2100), uint64] */, dtype="uint64") /* ty=Tensor[(2100), uint64] */;
  %315 = reshape(%314, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), uint64] */;
  %316 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 10, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %317 = sin(%316) /* ty=Tensor[(6, 10, 4), float32] */;
  %318 = cast(%317, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %319 = cast(%var_4750, dtype="bool") /* ty=bool */;
  %320 = greater(%310, %311) /* ty=Tensor[(6, 10, 4), bool] */;
  %321 = @func_1815(%313) /* ty=Tensor[(9, 10, 13), float32] */;
  %322 = @func_322(%315) /* ty=Tensor[(14, 10, 15), bool] */;
  %323 = not_equal(%318, %319) /* ty=Tensor[(6, 10, 4), bool] */;
  (%320, %321, %322, meta[relay.Constant][21] /* ty=Tensor[(2100), uint64] */, %323)
}

def @func_11054() -> Tensor[(3, 11, 2), float32] {
  %325 = fn () -> Tensor[(3, 11, 2), float32] {
    %324 = @func_7906() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
    %324.0
  };
  %325() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_13300() -> (Tensor[(3, 11, 2), float32],) {
  %326 = @func_10632() /* ty=Tensor[(3, 11, 2), float32] */;
  (%326,)
}

def @func_421(%var_419: Tensor[(10, 5, 1), float32], %var_420: Tensor[(10, 5, 8), float32]) -> (Tensor[(10, 5, 8), float32],) {
  @func_417(%var_419, %var_420) /* ty=(Tensor[(10, 5, 8), float32],) */
}

def @func_7955() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  %327 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %329 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %330 = exp(%328) /* ty=Tensor[(3, 11, 2), float64] */;
  (%329, %330)
}

def @func_34(%var_29: Tensor[(15, 1), int16]) -> (Tensor[(15, ?), int16],) {
  %331 = cast(%var_29, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %332 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(15, 1), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %333 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 1), int16] */, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %335 = bitwise_or(%333, %334) /* ty=Tensor[(15, ?), int16] */;
  (%335,)
}

def @func_10519() -> (Tensor[(3, 11, 2), int32],) {
  %336 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %337 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 11, 2), float32] */, dtype="int32") /* ty=Tensor[(3, 11, 2), int32] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%336, dtype="int32") /* ty=Tensor[(3, 11, 2), int32] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %341 = bitwise_xor(%339, %340) /* ty=Tensor[(3, 11, 2), int32] */;
  (%341,)
}

def @func_13447(%var_13443: Tensor[(780), float32], %var_13444: Tensor[(18), float64], %var_13445: float64, %var_13446: Tensor[(1280), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 8), float32], Tensor[(480), bool], Tensor[(364), float64], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
  @func_13441(%var_13443, %var_13444, %var_13445, %var_13446) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(6, 10, 8), float32], Tensor[(480), bool], Tensor[(364), float64], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */
}

def @func_9211(%var_9209: Tensor[(1080), float64], %var_9210: Tensor[(48), bool]) -> (Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) {
  @func_9207(%var_9209, %var_9210) /* ty=(Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) */
}

def @func_10839() -> (Tensor[(3, 11, 2), float32],) {
  %344 = fn () -> (Tensor[(3, 11, 2), float32],) {
    %342 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %343 = %342.0;
    (%343,)
  };
  %344() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_7405(%var_7404: Tensor[(3, 11, 2), float32]) -> Tensor[(3, 11, 2), uint16] {
  %350 = fn (%var_7398: Tensor[(3, 11, 2), float32]) -> Tensor[(3, 11, 2), uint16] {
    %345 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
    %346 = cast(%var_7398, dtype="uint16") /* ty=Tensor[(3, 11, 2), uint16] */;
    %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
    %348 = cast(%345, dtype="uint16") /* ty=Tensor[(3, 11, 2), uint16] */;
    %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    multiply(%348, %349) /* ty=Tensor[(3, 11, 2), uint16] */
  };
  %350(%var_7404) /* ty=Tensor[(3, 11, 2), uint16] */
}

def @func_8415() -> (Tensor[(15), int16],) {
  @func_8413() /* ty=(Tensor[(15), int16],) */
}

def @func_4518(%var_4496: Tensor[(1, 15, 16), float32], %var_4511: Tensor[(400), float32], %var_4515: float64) -> (Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) {
  %351 = cast(%var_4496, dtype="float32") /* ty=Tensor[(1, 15, 16), float32] */;
  %352 = log2(%351) /* ty=Tensor[(1, 15, 16), float32] */;
  %353 = cast(%352, dtype="bool") /* ty=Tensor[(1, 15, 16), bool] */;
  %354 = shape_of(%var_4496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%var_4496, dtype="bool") /* ty=Tensor[(1, 15, 16), bool] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %357 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 50), float32] */, dtype="float32") /* ty=Tensor[(1, 50), float32] */;
  %358 = cast(%var_4511, dtype="float32") /* ty=Tensor[(400), float32] */;
  %359 = reshape(%357, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %360 = reshape(%358, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %361 = @func_417(%359, %360) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %362 = cast(%var_4515, dtype="float64") /* ty=float64 */;
  %363 = cast(meta[relay.Constant][25] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %364 = reshape(%362, newshape=[]) /* ty=float64 */;
  %365 = reshape(%363, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %366 = logical_and(%355, %356) /* ty=Tensor[(?, 15, 16), bool] */;
  %367 = %361.0;
  %368 = @func_4181(%364, %365) /* ty=Tensor[(16, 5, 16), float64] */;
  (%366, %367, meta[relay.Constant][24] /* ty=Tensor[(1, 50), float32] */, %var_4511, %368, %var_4515, meta[relay.Constant][25] /* ty=Tensor[(1280), float64] */)
}

def @func_6874(%var_6873: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) {
  %382 = fn (%var_6824: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) {
    %369 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %370 = cast(%var_6824, dtype="float32") /* ty=Tensor[(780), float32] */;
    %371 = reshape(%370, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float32] */;
    %372 = @func_1324(%371) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */;
    %373 = %372.3;
    %374 = cast(%373, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
    %375 = shape_of(%var_6824, dtype="int32") /* ty=Tensor[(1), int32] */;
    %376 = cast(%var_6824, dtype="bool") /* ty=Tensor[(780), bool] */;
    %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?), bool] */;
    %378 = cast(%373, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
    %379 = %369.0;
    %380 = less(%376, %377) /* ty=Tensor[(780), bool] */;
    %381 = atan(%378) /* ty=Tensor[(6, 10, 13), float64] */;
    (%379, %380, %381)
  };
  %382(%var_6873) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */
}

def @func_5185(%var_5183: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), float64],) {
  @func_5182(%var_5183) /* ty=(Tensor[(11, 11, 15), float64],) */
}

def @func_13939() -> (Tensor[(3, 11, 2), float32],) {
  %385 = fn () -> (Tensor[(3, 11, 2), float32],) {
    %383 = @func_10422() /* ty=(Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) */;
    %384 = %383.3;
    (%384,)
  };
  %385() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_9968(%var_9921: float64, %var_9940: Tensor[(135, 10), float64], %var_9943: Tensor[(10, 78), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(15), int16], Tensor[(15, 9, 10), float64], Tensor[(135, 10), float64], Tensor[(780), float32], Tensor[(10, 78), float32]) {
  %386 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %387 = cast(%var_9921, dtype="float64") /* ty=float64 */;
  %388 = cast(meta[relay.Constant][26] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %389 = reshape(%387, newshape=[]) /* ty=float64 */;
  %390 = reshape(%388, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %391 = cast(%var_9940, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
  %392 = reshape(%391, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %393 = @func_7338(%392) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %394 = cast(%var_9943, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %395 = reshape(%394, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %396 = @func_6974(%395) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(780), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64]) */;
  %397 = %386.0;
  %398 = @func_4181(%389, %390) /* ty=Tensor[(16, 5, 16), float64] */;
  %399 = @func_8870() /* ty=Tensor[(15), int16] */;
  %400 = %393.1;
  %401 = %396.2;
  (%397, %398, %var_9921, meta[relay.Constant][26] /* ty=Tensor[(1280), float64] */, %399, %400, %var_9940, %401, %var_9943)
}

def @func_11815() -> (Tensor[(3, 11, 2), float32],) {
  %402 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
  (%402,)
}

def @func_10634() -> Tensor[(3, 11, 2), float32] {
  @func_10632() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_11543(%var_11539: Tensor[(18), float64], %var_11540: float64, %var_11541: Tensor[(1280), float64], %var_11542: Tensor[(12, 30), bool]) -> (Tensor[(15), int16], Tensor[(360, 18), float64], Tensor[(315), bool], Tensor[(1, 780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(12, 30), bool]) {
  %418 = fn (%var_11531: Tensor[(18), float64], %var_11532: float64, %var_11533: Tensor[(1280), float64], %var_11534: Tensor[(12, 30), bool]) -> (Tensor[(15), int16], Tensor[(360, 18), float64], Tensor[(315), bool], Tensor[(1, 780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(12, 30), bool]) {
    %403 = cast(meta[relay.Constant][27] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
    %404 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 780), float32] */, dtype="float32") /* ty=Tensor[(1, 780), float32] */;
    %405 = cast(%var_11531, dtype="float64") /* ty=Tensor[(18), float64] */;
    %406 = cast(%var_11532, dtype="float64") /* ty=float64 */;
    %407 = cast(%var_11533, dtype="float64") /* ty=Tensor[(1280), float64] */;
    %408 = cast(%var_11534, dtype="bool") /* ty=Tensor[(12, 30), bool] */;
    %409 = reshape(%403, newshape=[315]) /* ty=Tensor[(315), bool] */;
    %410 = reshape(%404, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
    %411 = reshape(%405, newshape=[18]) /* ty=Tensor[(18), float64] */;
    %412 = reshape(%406, newshape=[]) /* ty=float64 */;
    %413 = reshape(%407, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
    %414 = reshape(%408, newshape=[360, 1]) /* ty=Tensor[(360, 1), bool] */;
    %415 = @func_8966(%409, %410, %411, %412, %413, %414) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) */;
    %416 = @func_11503() /* ty=Tensor[(15), int16] */;
    %417 = %415.8;
    (%416, %417, meta[relay.Constant][27] /* ty=Tensor[(315), bool] */, meta[relay.Constant][28] /* ty=Tensor[(1, 780), float32] */, %var_11531, %var_11532, %var_11533, %var_11534)
  };
  %418(%var_11539, %var_11540, %var_11541, %var_11542) /* ty=(Tensor[(15), int16], Tensor[(360, 18), float64], Tensor[(315), bool], Tensor[(1, 780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(12, 30), bool]) */
}

def @func_11639(%var_11638: Tensor[(5, 10), float32]) -> (Tensor[(11, 11, 15), float64], Tensor[(480), bool], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(16, 11, 14), float64]) {
  %433 = fn (%var_11565: Tensor[(5, 10), float32]) -> (Tensor[(11, 11, 15), float64], Tensor[(480), bool], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(16, 11, 14), float64]) {
    %419 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
    %420 = cast(meta[relay.Constant][29] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %421 = cast(meta[relay.Constant][29] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %422 = cast(%var_11565, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
    %423 = cast(meta[relay.Constant][30] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %424 = reshape(%420, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
    %425 = reshape(%421, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
    %426 = reshape(%422, newshape=[50]) /* ty=Tensor[(50), float32] */;
    %427 = reshape(%423, newshape=[48]) /* ty=Tensor[(48), bool] */;
    %428 = @func_2733(%424, %425, %426, %427) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
    %429 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
    %430 = %419.1;
    %431 = %428.6;
    %432 = %429.0;
    (%430, %431, meta[relay.Constant][29] /* ty=Tensor[(1080), float64] */, %var_11565, meta[relay.Constant][30] /* ty=Tensor[(48), bool] */, %432)
  };
  %433(%var_11638) /* ty=(Tensor[(11, 11, 15), float64], Tensor[(480), bool], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(16, 11, 14), float64]) */
}

def @func_7459() -> Tensor[(3, 11, 2), float32] {
  %434 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
  %434.1
}

def @func_11717(%var_11691: Tensor[(9, 11, 5), uint32], %var_11692: Tensor[(9, 11, 5), uint32]) -> (Tensor[(9, 11, 5), uint32], Tensor[(3, 11, 2), float32]) {
  %435 = cast(%var_11692, dtype="uint32") /* ty=Tensor[(9, 11, 5), uint32] */;
  %436 = shape_of(%var_11691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%var_11691, dtype="uint32") /* ty=Tensor[(9, 11, 5), uint32] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %439 = left_shift(%437, %438) /* ty=Tensor[(9, 11, 5), uint32] */;
  %440 = @func_7077() /* ty=Tensor[(3, 11, 2), float32] */;
  (%439, %440)
}

def @func_13595(%var_13559: Tensor[(11, 6, 13), float64], %var_13560: Tensor[(11, 6, 13), float64], %var_13591: Tensor[(24), int8], %var_13592: Tensor[(1, 264), int8]) -> (Tensor[(11, 6, 13), float64], Tensor[(2, 12, 11), bool], Tensor[(24), int8], Tensor[(1, 264), int8]) {
  %441 = cast(%var_13560, dtype="float64") /* ty=Tensor[(11, 6, 13), float64] */;
  %442 = shape_of(%var_13559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_13559, dtype="float64") /* ty=Tensor[(11, 6, 13), float64] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %445 = cast(%var_13591, dtype="int8") /* ty=Tensor[(24), int8] */;
  %446 = cast(%var_13592, dtype="int8") /* ty=Tensor[(1, 264), int8] */;
  %447 = reshape(%445, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), int8] */;
  %448 = reshape(%446, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int8] */;
  %449 = power(%443, %444) /* ty=Tensor[(11, 6, 13), float64] */;
  %450 = @func_11243(%447, %448) /* ty=Tensor[(2, 12, 11), bool] */;
  (%449, %450, %var_13591, %var_13592)
}

def @func_6131(%var_6057: Tensor[(15, 3, 7), bool], %var_6058: Tensor[(15, 3, 7), bool], %var_6089: Tensor[(780, 1), float32], %var_6094: Tensor[(18), float64], %var_6108: float64, %var_6109: Tensor[(1280), float64], %var_6112: Tensor[(364), float64]) -> (Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) {
  %451 = cast(%var_6058, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
  %452 = shape_of(%var_6057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%var_6057, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = cast(%var_6089, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %456 = reshape(%455, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float32] */;
  %457 = @func_1324(%456) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */;
  %458 = cast(%var_6057, dtype="float64") /* ty=Tensor[(15, 3, 7), float64] */;
  %459 = cast(%var_6094, dtype="float64") /* ty=Tensor[(18), float64] */;
  %460 = reshape(%459, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %461 = cast(%var_6108, dtype="float64") /* ty=float64 */;
  %462 = cast(%var_6109, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %463 = reshape(%461, newshape=[]) /* ty=float64 */;
  %464 = reshape(%462, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %465 = cast(%var_6112, dtype="float64") /* ty=Tensor[(364), float64] */;
  %466 = cast(%var_6112, dtype="float64") /* ty=Tensor[(364), float64] */;
  %467 = reshape(%465, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %468 = reshape(%466, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %469 = @func_4339(%467, %468) /* ty=(Tensor[(9, 15, 3), float32], Tensor[(780), float32], Tensor[(7, 13, 4), bool]) */;
  %470 = cast(%var_6108, dtype="bool") /* ty=bool */;
  %471 = reshape(%470, newshape=[]) /* ty=bool */;
  %472 = cast(%var_6108, dtype="float64") /* ty=float64 */;
  %473 = @func_4181(%463, %464) /* ty=Tensor[(16, 5, 16), float64] */;
  %474 = cast(%473, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  %475 = reshape(%472, newshape=[]) /* ty=float64 */;
  %476 = reshape(%474, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float64] */;
  %477 = cast(meta[relay.Constant][31] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %478 = cast(meta[relay.Constant][31] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %479 = cast(meta[relay.Constant][32] /* ty=Tensor[(50, 1), float32] */, dtype="float32") /* ty=Tensor[(50, 1), float32] */;
  %480 = cast(meta[relay.Constant][33] /* ty=Tensor[(48, 1), bool] */, dtype="bool") /* ty=Tensor[(48, 1), bool] */;
  %481 = reshape(%477, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %482 = reshape(%478, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %483 = reshape(%479, newshape=[50]) /* ty=Tensor[(50), float32] */;
  %484 = reshape(%480, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %485 = @func_2733(%481, %482, %483, %484) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
  %486 = logical_and(%453, %454) /* ty=Tensor[(15, 3, 7), bool] */;
  %487 = %457.3;
  %488 = atan(%458) /* ty=Tensor[(15, 3, 7), float64] */;
  %489 = @func_1409(%460) /* ty=Tensor[(6, 3, 1), float64] */;
  %490 = %469.1;
  %491 = @func_1815(%471) /* ty=Tensor[(9, 10, 13), float32] */;
  %492 = @func_4181(%475, %476) /* ty=Tensor[(16, 5, 16), float64] */;
  %493 = %485.4;
  (%486, %487, %var_6089, %488, %489, %var_6094, %473, %var_6108, %var_6109, %490, %var_6112, %491, %492, %493, meta[relay.Constant][31] /* ty=Tensor[(1080), float64] */, meta[relay.Constant][32] /* ty=Tensor[(50, 1), float32] */, meta[relay.Constant][33] /* ty=Tensor[(48, 1), bool] */)
}

def @func_9110(%var_9038: Tensor[(400), float32], %var_9059: Tensor[(15), int16], %var_9063: Tensor[(480), bool], %var_9092: Tensor[(50, 1), bool]) -> (Tensor[(3, 11, 2), float32], Tensor[(10, 5, 8), float32], Tensor[(6, 3, 1), float64], Tensor[(15, 1), int16], Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(15, 1), int16], Tensor[(50, 400), float64], Tensor[(50, ?), float32], Tensor[(50, 18), int64]) {
  %494 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %495 = cast(meta[relay.Constant][34] /* ty=Tensor[(50, 1), float32] */, dtype="float32") /* ty=Tensor[(50, 1), float32] */;
  %496 = cast(%var_9038, dtype="float32") /* ty=Tensor[(400), float32] */;
  %497 = reshape(%495, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %498 = reshape(%496, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %499 = @func_417(%497, %498) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %500 = cast(meta[relay.Constant][35] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %501 = reshape(%500, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %502 = cast(%var_9059, dtype="int16") /* ty=Tensor[(15), int16] */;
  %503 = reshape(%502, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %504 = @func_7482(%503) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) */;
  %505 = cast(meta[relay.Constant][36] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %506 = cast(%var_9063, dtype="bool") /* ty=Tensor[(480), bool] */;
  %507 = reshape(%505, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), bool] */;
  %508 = reshape(%506, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), bool] */;
  %509 = @func_8348() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %510 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %511 = cast(%var_9059, dtype="int16") /* ty=Tensor[(15), int16] */;
  %512 = reshape(%511, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %513 = @func_7482(%512) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) */;
  %514 = cast(meta[relay.Constant][34] /* ty=Tensor[(50, 1), float32] */, dtype="float64") /* ty=Tensor[(50, 1), float64] */;
  %515 = cosh(%514) /* ty=Tensor[(50, 1), float64] */;
  %516 = cast(%515, dtype="float64") /* ty=Tensor[(50, 1), float64] */;
  %517 = cast(%var_9038, dtype="float64") /* ty=Tensor[(400), float64] */;
  %518 = cast(%515, dtype="float32") /* ty=Tensor[(50, 1), float32] */;
  %519 = acos(%518) /* ty=Tensor[(50, 1), float32] */;
  %520 = cast(%515, dtype="uint32") /* ty=Tensor[(50, 1), uint32] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(2), int32] */;
  %522 = cast(%519, dtype="uint32") /* ty=Tensor[(50, 1), uint32] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %524 = add(%522, %523) /* ty=Tensor[(50, ?), uint32] */;
  %525 = cast(%519, dtype="bool") /* ty=Tensor[(50, 1), bool] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(2), int32] */;
  %527 = cast(%524, dtype="bool") /* ty=Tensor[(50, ?), bool] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %529 = logical_or(%527, %528) /* ty=Tensor[(50, ?), bool] */;
  %530 = cast(%var_9092, dtype="float32") /* ty=Tensor[(50, 1), float32] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(2), int32] */;
  %532 = cast(%529, dtype="float32") /* ty=Tensor[(50, ?), float32] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %534 = cast(%524, dtype="int64") /* ty=Tensor[(50, ?), int64] */;
  %535 = cast(meta[relay.Constant][35] /* ty=Tensor[(18), float64] */, dtype="int64") /* ty=Tensor[(18), int64] */;
  %536 = %494.0;
  %537 = %499.0;
  %538 = @func_1409(%501) /* ty=Tensor[(6, 3, 1), float64] */;
  %539 = %504.1;
  %540 = @func_1177(%507, %508) /* ty=Tensor[(6, 10, 8), float32] */;
  %541 = %509.0;
  %542 = %510.0;
  %543 = %513.1;
  %544 = power(%516, %517) /* ty=Tensor[(50, 400), float64] */;
  %545 = power(%532, %533) /* ty=Tensor[(50, ?), float32] */;
  %546 = multiply(%534, %535) /* ty=Tensor[(50, 18), int64] */;
  (%536, %537, %538, %539, %var_9059, %540, meta[relay.Constant][36] /* ty=Tensor[(48), bool] */, %var_9063, %541, %542, %543, %544, %545, %546)
}

def @func_9116(%var_9112: Tensor[(400), float32], %var_9113: Tensor[(15), int16], %var_9114: Tensor[(480), bool], %var_9115: Tensor[(50, 1), bool]) -> (Tensor[(3, 11, 2), float32], Tensor[(10, 5, 8), float32], Tensor[(6, 3, 1), float64], Tensor[(15, 1), int16], Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(15, 1), int16], Tensor[(50, 400), float64], Tensor[(50, ?), float32], Tensor[(50, 18), int64]) {
  @func_9110(%var_9112, %var_9113, %var_9114, %var_9115) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(10, 5, 8), float32], Tensor[(6, 3, 1), float64], Tensor[(15, 1), int16], Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(15, 1), int16], Tensor[(50, 400), float64], Tensor[(50, ?), float32], Tensor[(50, 18), int64]) */
}

def @func_12867(%var_12865: float64, %var_12866: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1350), float64], Tensor[(780), float32], Tensor[(3, 11, 2), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), float32]) {
  %566 = fn (%var_12844: float64, %var_12845: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1350), float64], Tensor[(780), float32], Tensor[(3, 11, 2), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), float32]) {
    %547 = cast(%var_12844, dtype="float64") /* ty=float64 */;
    %548 = cast(%var_12845, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %549 = cast(meta[relay.Constant][37] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
    %550 = reshape(%547, newshape=[]) /* ty=float64 */;
    %551 = reshape(%548, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
    %552 = reshape(%549, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
    %553 = @func_9968(%550, %551, %552) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(15), int16], Tensor[(15, 9, 10), float64], Tensor[(135, 10), float64], Tensor[(780), float32], Tensor[(10, 78), float32]) */;
    %554 = cast(meta[relay.Constant][38] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %555 = reshape(%554, newshape=[1815]) /* ty=Tensor[(1815), float64] */;
    %556 = @func_12549(%555) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float32], Tensor[(780), float32], Tensor[(11, 11, 15), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), uint64]) */;
    %557 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
    %558 = cast(%557, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
    %559 = cast(%var_12845, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %560 = reshape(%558, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
    %561 = reshape(%559, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
    %562 = @func_7521(%560, %561) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
    %563 = %553.1;
    %564 = %556.0;
    %565 = %562.0;
    (%557, %563, %var_12844, %var_12845, meta[relay.Constant][37] /* ty=Tensor[(780), float32] */, %564, meta[relay.Constant][38] /* ty=Tensor[(1815), float64] */, %565)
  };
  %566(%var_12865, %var_12866) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1350), float64], Tensor[(780), float32], Tensor[(3, 11, 2), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), float32]) */
}

def @func_325(%var_323: Tensor[(14, 10, 15), uint64]) -> Tensor[(14, 10, 15), bool] {
  @func_322(%var_323) /* ty=Tensor[(14, 10, 15), bool] */
}

def @func_11330() -> (Tensor[(3, 11, 2), float32], Tensor[(64), float32], Tensor[(3, 11, 2), float32]) {
  @func_11328() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(64), float32], Tensor[(3, 11, 2), float32]) */
}

def @func_6412() -> (Tensor[(3, 11, 2), float32],) {
  %567 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %568 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(3, 11, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %571 = floor_divide(%569, %570) /* ty=Tensor[(3, 11, 2), float32] */;
  (%571,)
}

def @func_7125() -> Tensor[(3, 11, 2), float32] {
  %572 = fn () -> Tensor[(3, 11, 2), float32] {
    @func_6489() /* ty=Tensor[(3, 11, 2), float32] */
  };
  %572() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_13601(%var_13597: Tensor[(11, 6, 13), float64], %var_13598: Tensor[(11, 6, 13), float64], %var_13599: Tensor[(24), int8], %var_13600: Tensor[(1, 264), int8]) -> (Tensor[(11, 6, 13), float64], Tensor[(2, 12, 11), bool], Tensor[(24), int8], Tensor[(1, 264), int8]) {
  @func_13595(%var_13597, %var_13598, %var_13599, %var_13600) /* ty=(Tensor[(11, 6, 13), float64], Tensor[(2, 12, 11), bool], Tensor[(24), int8], Tensor[(1, 264), int8]) */
}

def @func_13647() -> float64 {
  @func_13645() /* ty=float64 */
}

def @func_11158() -> (Tensor[(3, 11, 2), float32],) {
  %573 = @func_8348() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %574 = %573.0;
  (%574,)
}

def @func_10521() -> (Tensor[(3, 11, 2), int32],) {
  @func_10519() /* ty=(Tensor[(3, 11, 2), int32],) */
}

def @func_8098() -> (Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) {
  %584 = fn () -> (Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) {
    %575 = cast(meta[relay.Constant][41] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %576 = cast(meta[relay.Constant][42] /* ty=Tensor[(1950), uint16] */, dtype="uint16") /* ty=Tensor[(1950), uint16] */;
    %577 = reshape(%575, newshape=[]) /* ty=uint16 */;
    %578 = reshape(%576, newshape=[13, 10, 15]) /* ty=Tensor[(13, 10, 15), uint16] */;
    %579 = @func_3038(%577, %578) /* ty=(Tensor[(13, 10, 15), bool], Tensor[(15, ?), int16], Tensor[(1, 15), int16], Tensor[(15, ?), int16]) */;
    %580 = @func_7124() /* ty=Tensor[(3, 11, 2), float32] */;
    %581 = cast(%580, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
    %582 = %579.2;
    %583 = log(%581) /* ty=Tensor[(3, 11, 2), float32] */;
    (%582, meta[relay.Constant][41] /* ty=uint16 */, meta[relay.Constant][42] /* ty=Tensor[(1950), uint16] */, %583)
  };
  %584() /* ty=(Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) */
}

def @func_10042() -> (bool, Tensor[(15), int16]) {
  %589 = fn () -> (bool, Tensor[(15), int16]) {
    %585 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
    %586 = @func_8413() /* ty=(Tensor[(15), int16],) */;
    %587 = %585.2;
    %588 = %586.0;
    (%587, %588)
  };
  %589() /* ty=(bool, Tensor[(15), int16]) */
}

def @func_10554(%var_10552: Tensor[(9, 1, 6), float32], %var_10553: Tensor[(945), int8]) -> (Tensor[(9, 1, 6), float32], Tensor[(15, 7, 9), int8], Tensor[(945), int8]) {
  %598 = fn (%var_10535: Tensor[(9, 1, 6), float32], %var_10540: Tensor[(945), int8]) -> (Tensor[(9, 1, 6), float32], Tensor[(15, 7, 9), int8], Tensor[(945), int8]) {
    %590 = cast(%var_10535, dtype="float32") /* ty=Tensor[(9, 1, 6), float32] */;
    %591 = cast(%var_10540, dtype="int8") /* ty=Tensor[(945), int8] */;
    %592 = cast(%var_10540, dtype="int8") /* ty=Tensor[(945), int8] */;
    %593 = reshape(%591, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), int8] */;
    %594 = reshape(%592, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), int8] */;
    %595 = @func_7568(%593, %594) /* ty=(Tensor[(15, 7, 9), int8], Tensor[(15, 7, 9), bool]) */;
    %596 = asinh(%590) /* ty=Tensor[(9, 1, 6), float32] */;
    %597 = %595.0;
    (%596, %597, %var_10540)
  };
  %598(%var_10552, %var_10553) /* ty=(Tensor[(9, 1, 6), float32], Tensor[(15, 7, 9), int8], Tensor[(945), int8]) */
}

def @func_7521(%var_7503: Tensor[(3, 11, 2), float32], %var_7511: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) {
  %599 = @func_7290() /* ty=Tensor[(3, 11, 2), float32] */;
  %600 = cast(%var_7503, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %601 = shape_of(%599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(%599, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %604 = cast(%var_7511, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %605 = cast(%var_7511, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %606 = reshape(%604, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %607 = reshape(%605, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %608 = @func_5041(%606, %607) /* ty=(Tensor[(15, 9, 10), float64],) */;
  %609 = mod(%602, %603) /* ty=Tensor[(3, 11, 2), float32] */;
  %610 = %608.0;
  (%609, %610, %var_7511)
}

def @func_12078() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  %615 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
    %611 = @func_8982() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(5, 156), float32]) */;
    %612 = @func_9236() /* ty=(Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32]) */;
    %613 = %611.0;
    %614 = %612.0;
    (%613, %614)
  };
  %615() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */
}

def @func_14174() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  %619 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
    %616 = @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
    %617 = @func_7459() /* ty=Tensor[(3, 11, 2), float32] */;
    %618 = %616.1;
    (%617, %618)
  };
  %619() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */
}

def @func_14571() -> Tensor[(3, 11, 2), float32] {
  @func_14569() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_5182(%var_5177: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), float64],) {
  %620 = cast(%var_5177, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %621 = asinh(%620) /* ty=Tensor[(11, 11, 15), float64] */;
  (%621,)
}

def @func_4185(%var_4183: float64, %var_4184: Tensor[(16, 5, 16), float64]) -> Tensor[(16, 5, 16), float64] {
  @func_4181(%var_4183, %var_4184) /* ty=Tensor[(16, 5, 16), float64] */
}

def @func_2739(%var_2735: Tensor[(10, 9, 12), float64], %var_2736: Tensor[(10, 9, 12), float64], %var_2737: Tensor[(50), float32], %var_2738: Tensor[(48), bool]) -> (Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) {
  @func_2733(%var_2735, %var_2736, %var_2737, %var_2738) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */
}

def @func_6923() -> (Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
  %628 = fn () -> (Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
    %622 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
    %623 = cast(meta[relay.Constant][44] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %624 = reshape(%623, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
    %625 = @func_5182(%624) /* ty=(Tensor[(11, 11, 15), float64],) */;
    %626 = atanh(%622) /* ty=Tensor[(16, 11, 14), float64] */;
    %627 = %625.0;
    (%626, %627, meta[relay.Constant][44] /* ty=Tensor[(1815), float64] */)
  };
  %628() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */
}

def @func_12585() -> (Tensor[(3, 11, 2), float32],) {
  %631 = fn () -> (Tensor[(3, 11, 2), float32],) {
    %629 = @func_11815() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %630 = %629.0;
    (%630,)
  };
  %631() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_13645() -> float64 {
  %632 = @func_10422() /* ty=(Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) */;
  %632.1
}

def @func_4342(%var_4340: Tensor[(7, 13, 4), float64], %var_4341: Tensor[(7, 13, 4), float64]) -> (Tensor[(9, 15, 3), float32], Tensor[(780), float32], Tensor[(7, 13, 4), bool]) {
  %644 = fn (%var_4292: Tensor[(7, 13, 4), float64], %var_4325: Tensor[(7, 13, 4), float64]) -> (Tensor[(9, 15, 3), float32], Tensor[(780), float32], Tensor[(7, 13, 4), bool]) {
    %633 = cast(meta[relay.Constant][45] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
    %634 = reshape(%633, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float32] */;
    %635 = @func_1324(%634) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */;
    %636 = cast(%var_4292, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
    %637 = log10(%636) /* ty=Tensor[(7, 13, 4), float64] */;
    %638 = cast(%var_4325, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
    %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
    %640 = cast(%637, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
    %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %642 = %635.4;
    %643 = less(%640, %641) /* ty=Tensor[(7, 13, 4), bool] */;
    (%642, meta[relay.Constant][45] /* ty=Tensor[(780), float32] */, %643)
  };
  %644(%var_4340, %var_4341) /* ty=(Tensor[(9, 15, 3), float32], Tensor[(780), float32], Tensor[(7, 13, 4), bool]) */
}

def @func_9464() -> (Tensor[(3, 11, 2), float64], float64, Tensor[(64), float32], Tensor[(400), float32]) {
  %645 = @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
  %646 = cast(meta[relay.Constant][46] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %647 = cast(meta[relay.Constant][47] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %648 = reshape(%646, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), float32] */;
  %649 = reshape(%647, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %650 = @func_8745(%648, %649) /* ty=(Tensor[(4, 16, 1), float32], Tensor[(400), float32], Tensor[(240), float32], Tensor[(400), float32], float64) */;
  %651 = %645.1;
  %652 = %650.4;
  (%651, %652, meta[relay.Constant][46] /* ty=Tensor[(64), float32] */, meta[relay.Constant][47] /* ty=Tensor[(400), float32] */)
}

def @func_13171() -> (Tensor[(3, 11, 2), float64],) {
  %653 = @func_11419() /* ty=(Tensor[(3, 11, 2), float64],) */;
  %654 = %653.0;
  (%654,)
}

def @func_11375(%var_11361: bool) -> (Tensor[(3, 11, 2), float32], Tensor[(9, 10, 13), float32], bool) {
  %655 = cast(%var_11361, dtype="bool") /* ty=bool */;
  %656 = reshape(%655, newshape=[]) /* ty=bool */;
  %657 = @func_7459() /* ty=Tensor[(3, 11, 2), float32] */;
  %658 = @func_1815(%656) /* ty=Tensor[(9, 10, 13), float32] */;
  (%657, %658, %var_11361)
}

def @func_7484(%var_7483: Tensor[(15), int16]) -> (Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) {
  %665 = fn (%var_7480: Tensor[(15), int16]) -> (Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) {
    %659 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
    %660 = cast(%var_7480, dtype="int16") /* ty=Tensor[(15), int16] */;
    %661 = reshape(%660, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %662 = @func_1381(%661) /* ty=(Tensor[(15, 5, 6), float32], Tensor[(15, ?), int16], Tensor[(15, 1), int16], Tensor[(15, 1), int16], Tensor[(6, 60), bool]) */;
    %663 = %659.0;
    %664 = %662.3;
    (%663, %664, %var_7480)
  };
  %665(%var_7483) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) */
}

def @func_7290() -> Tensor[(3, 11, 2), float32] {
  @func_6489() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_9466() -> (Tensor[(3, 11, 2), float64], float64, Tensor[(64), float32], Tensor[(400), float32]) {
  @func_9464() /* ty=(Tensor[(3, 11, 2), float64], float64, Tensor[(64), float32], Tensor[(400), float32]) */
}

def @func_12681() -> Tensor[(3, 11, 2), float32] {
  %667 = fn () -> Tensor[(3, 11, 2), float32] {
    %666 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %666.0
  };
  %667() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_1326(%var_1325: Tensor[(6, 10, 13), float32]) -> (Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) {
  %687 = fn (%var_1283: Tensor[(6, 10, 13), float32]) -> (Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) {
    %668 = cast(meta[relay.Constant][48] /* ty=Tensor[(360), bool] */, dtype="bool") /* ty=Tensor[(360), bool] */;
    %669 = cast(meta[relay.Constant][49] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
    %670 = reshape(%668, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), bool] */;
    %671 = reshape(%669, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %672 = @func_934(%670, %671) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) */;
    %673 = cast(%var_1283, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
    %674 = log2(%673) /* ty=Tensor[(6, 10, 13), float32] */;
    %675 = cast(%var_1283, dtype="int8") /* ty=Tensor[(6, 10, 13), int8] */;
    %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
    %677 = cast(%674, dtype="int8") /* ty=Tensor[(6, 10, 13), int8] */;
    %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %679 = right_shift(%677, %678) /* ty=Tensor[(6, 10, 13), int8] */;
    %680 = cast(%679, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
    %681 = cast(meta[relay.Constant][49] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
    %682 = reshape(%681, newshape=[15]) /* ty=Tensor[(15), int16] */;
    %683 = @func_141(%682) /* ty=(Tensor[(9, 15, 3), uint16], Tensor[(9, 15, 3), float32], Tensor[(9, 15, 3), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(15, ?), int16]) */;
    %684 = %672.0;
    %685 = rsqrt(%680) /* ty=Tensor[(6, 10, 13), float64] */;
    %686 = %683.1;
    (%684, meta[relay.Constant][48] /* ty=Tensor[(360), bool] */, meta[relay.Constant][49] /* ty=Tensor[(15), int16] */, %685, %686)
  };
  %687(%var_1325) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */
}

def @func_11160() -> (Tensor[(3, 11, 2), float32],) {
  @func_11158() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_12901() -> (Tensor[(6, 3, 14), bool],) {
  %693 = fn () -> (Tensor[(6, 3, 14), bool],) {
    %688 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(6, 3, 14), bool] */;
    %689 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(6, 3, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %690 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(6, 3, 14), bool] */;
    %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %692 = logical_or(%690, %691) /* ty=Tensor[(6, 3, 14), bool] */;
    (%692,)
  };
  %693() /* ty=(Tensor[(6, 3, 14), bool],) */
}

def @func_14064() -> Tensor[(3, 11, 2), float32] {
  %694 = @func_10129() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %694.0
}

def @func_14429(%var_14426: Tensor[(1, 312), int16], %var_14427: Tensor[(315), bool], %var_14428: Tensor[(5, 156), float32]) -> (bool, Tensor[(315), bool], Tensor[(1, 312), int16], Tensor[(315), bool], Tensor[(5, 156), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(240), bool], Tensor[(1350), float64]) {
  %712 = fn (%var_14411: Tensor[(1, 312), int16], %var_14412: Tensor[(315), bool], %var_14413: Tensor[(5, 156), float32]) -> (bool, Tensor[(315), bool], Tensor[(1, 312), int16], Tensor[(315), bool], Tensor[(5, 156), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(240), bool], Tensor[(1350), float64]) {
    %695 = cast(%var_14411, dtype="int16") /* ty=Tensor[(1, 312), int16] */;
    %696 = cast(%var_14412, dtype="bool") /* ty=Tensor[(315), bool] */;
    %697 = cast(%var_14413, dtype="float32") /* ty=Tensor[(5, 156), float32] */;
    %698 = reshape(%695, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), int16] */;
    %699 = reshape(%696, newshape=[315]) /* ty=Tensor[(315), bool] */;
    %700 = reshape(%697, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %701 = @func_8005(%698, %699, %700) /* ty=(Tensor[(13, 8, 3), bool], Tensor[(13, 8, 3), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */;
    %702 = cast(meta[relay.Constant][52] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %703 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
    %704 = cast(meta[relay.Constant][54] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %705 = reshape(%702, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
    %706 = reshape(%703, newshape=[6, 10, 4]) /* ty=Tensor[(6, 10, 4), bool] */;
    %707 = reshape(%704, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
    %708 = @func_10957(%705, %706, %707) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(48), bool], bool, Tensor[(3, 11, 2), float32], Tensor[(6, 10, 4), bool], Tensor[(16, 11, 14), float64], Tensor[(1350), float64], Tensor[(3, 11, 2), float64]) */;
    %709 = @func_14032() /* ty=bool */;
    %710 = %701.3;
    %711 = %708.1;
    (%709, %710, %var_14411, %var_14412, %var_14413, %711, meta[relay.Constant][52] /* ty=Tensor[(1080), float64] */, meta[relay.Constant][53] /* ty=Tensor[(240), bool] */, meta[relay.Constant][54] /* ty=Tensor[(1350), float64] */)
  };
  %712(%var_14426, %var_14427, %var_14428) /* ty=(bool, Tensor[(315), bool], Tensor[(1, 312), int16], Tensor[(315), bool], Tensor[(5, 156), float32], Tensor[(48), bool], Tensor[(1080), float64], Tensor[(240), bool], Tensor[(1350), float64]) */
}

def @func_7906() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  %713 = @func_7077() /* ty=Tensor[(3, 11, 2), float32] */;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %715 = cast(%713, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %716 = asin(%714) /* ty=Tensor[(3, 11, 2), float32] */;
  %717 = cos(%715) /* ty=Tensor[(3, 11, 2), float64] */;
  (%716, %717)
}

def @func_8533(%var_8507: Tensor[(780), float32], %var_8527: Tensor[(400), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 13), float64], Tensor[(780), float32], Tensor[(10, 5, 8), float32], Tensor[(50), float32], Tensor[(400), float32], Tensor[(3, 11, 2), uint16]) {
  %718 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %719 = cast(%var_8507, dtype="float32") /* ty=Tensor[(780), float32] */;
  %720 = reshape(%719, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %721 = @func_6872(%720) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */;
  %722 = cast(meta[relay.Constant][55] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %723 = cast(%var_8527, dtype="float32") /* ty=Tensor[(400), float32] */;
  %724 = reshape(%722, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %725 = reshape(%723, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %726 = @func_417(%724, %725) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %727 = %718.0;
  %728 = cast(%727, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %729 = reshape(%728, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %730 = %721.2;
  %731 = %726.0;
  %732 = @func_7403(%729) /* ty=Tensor[(3, 11, 2), uint16] */;
  (%727, %730, %var_8507, %731, meta[relay.Constant][55] /* ty=Tensor[(50), float32] */, %var_8527, %732)
}

def @func_8984() -> (Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(5, 156), float32]) {
  @func_8982() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(5, 156), float32]) */
}

def @func_10422() -> (Tensor[(16, 11, 14), float64], float64, Tensor[(32), int32], Tensor[(3, 11, 2), float32]) {
  %733 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %734 = cast(meta[relay.Constant][56] /* ty=Tensor[(32), int32] */, dtype="int32") /* ty=Tensor[(32), int32] */;
  %735 = cast(meta[relay.Constant][56] /* ty=Tensor[(32), int32] */, dtype="int32") /* ty=Tensor[(32), int32] */;
  %736 = reshape(%734, newshape=[2, 1, 16]) /* ty=Tensor[(2, 1, 16), int32] */;
  %737 = reshape(%735, newshape=[2, 1, 16]) /* ty=Tensor[(2, 1, 16), int32] */;
  %738 = @func_5322(%736, %737) /* ty=(Tensor[(2, ?, 16), int32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280, 1), float64]) */;
  %739 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %740 = %733.0;
  %741 = %738.2;
  %742 = %739.0;
  (%740, %741, meta[relay.Constant][56] /* ty=Tensor[(32), int32] */, %742)
}

def @func_10289() -> Tensor[(3, 11, 2), float32] {
  %744 = fn () -> Tensor[(3, 11, 2), float32] {
    %743 = @func_10129() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %743.0
  };
  %744() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_7170(%var_7169: bool) -> (Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) {
  %751 = fn (%var_7160: bool) -> (Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) {
    %745 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %746 = cast(%var_7160, dtype="bool") /* ty=bool */;
    %747 = reshape(%746, newshape=[]) /* ty=bool */;
    %748 = @func_4769(%747) /* ty=(Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) */;
    %749 = %745.0;
    %750 = %748.2;
    (%749, %750, %var_7160)
  };
  %751(%var_7169) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) */
}

def @func_7602(%var_7601: Tensor[(3, 11, 2), float32]) -> Tensor[(3, 11, 2), float64] {
  %758 = fn (%var_7583: Tensor[(3, 11, 2), float32]) -> Tensor[(3, 11, 2), float64] {
    %752 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %753 = %752.0;
    %754 = cast(%var_7583, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
    %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
    %756 = cast(%753, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
    %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%756, %757) /* ty=Tensor[(3, 11, 2), float64] */
  };
  %758(%var_7601) /* ty=Tensor[(3, 11, 2), float64] */
}

def @func_1180(%var_1178: Tensor[(6, 1, 8), bool], %var_1179: Tensor[(6, 10, 8), bool]) -> Tensor[(6, 10, 8), float32] {
  %766 = fn (%var_1159: Tensor[(6, 1, 8), bool], %var_1160: Tensor[(6, 10, 8), bool]) -> Tensor[(6, 10, 8), float32] {
    %759 = cast(%var_1159, dtype="bool") /* ty=Tensor[(6, 1, 8), bool] */;
    %760 = cast(%var_1160, dtype="bool") /* ty=Tensor[(6, 10, 8), bool] */;
    %761 = logical_or(%759, %760) /* ty=Tensor[(6, 10, 8), bool] */;
    %762 = cast(%761, dtype="float32") /* ty=Tensor[(6, 10, 8), float32] */;
    %763 = shape_of(%var_1160, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(%var_1160, dtype="float32") /* ty=Tensor[(6, 10, 8), float32] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%764, %765) /* ty=Tensor[(6, 10, 8), float32] */
  };
  %766(%var_1178, %var_1179) /* ty=Tensor[(6, 10, 8), float32] */
}

def @func_9281() -> (Tensor[(3, 11, 2), float32],) {
  @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_12765(%var_12763: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(3, 11, 2), uint16], Tensor[(66), float32]) {
  @func_12762(%var_12763) /* ty=(Tensor[(15), int16], Tensor[(3, 11, 2), uint16], Tensor[(66), float32]) */
}

def @func_10863() -> Tensor[(64), float32] {
  @func_10861() /* ty=Tensor[(64), float32] */
}

def @func_11190(%var_11189: Tensor[(1815), float64]) -> (Tensor[(64), int64], Tensor[(6, 3, 1), float64], Tensor[(1815), float64], Tensor[(780), float32]) {
  %779 = fn (%var_11185: Tensor[(1815), float64]) -> (Tensor[(64), int64], Tensor[(6, 3, 1), float64], Tensor[(1815), float64], Tensor[(780), float32]) {
    %767 = @func_10861() /* ty=Tensor[(64), float32] */;
    %768 = cast(meta[relay.Constant][57] /* ty=Tensor[(64), float32] */, dtype="int64") /* ty=Tensor[(64), int64] */;
    %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(1), int32] */;
    %770 = cast(%767, dtype="int64") /* ty=Tensor[(64), int64] */;
    %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?), int64] */;
    %772 = cast(%var_11185, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %773 = cast(meta[relay.Constant][58] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
    %774 = reshape(%772, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
    %775 = reshape(%773, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %776 = @func_8171(%774, %775) /* ty=(Tensor[(11, 11, 15), float32], Tensor[(11, 11, 15), float32], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(9, 15, 3), float32], Tensor[(780), float32]) */;
    %777 = bitwise_or(%770, %771) /* ty=Tensor[(64), int64] */;
    %778 = %776.2;
    (%777, %778, %var_11185, meta[relay.Constant][58] /* ty=Tensor[(780), float32] */)
  };
  %779(%var_11189) /* ty=(Tensor[(64), int64], Tensor[(6, 3, 1), float64], Tensor[(1815), float64], Tensor[(780), float32]) */
}

def @func_7669() -> (Tensor[(3, 11, 2), bool], Tensor[(3, 11, 2), float32]) {
  @func_7667() /* ty=(Tensor[(3, 11, 2), bool], Tensor[(3, 11, 2), float32]) */
}

def @func_11721(%var_11719: Tensor[(9, 11, 5), uint32], %var_11720: Tensor[(9, 11, 5), uint32]) -> (Tensor[(9, 11, 5), uint32], Tensor[(3, 11, 2), float32]) {
  @func_11717(%var_11719, %var_11720) /* ty=(Tensor[(9, 11, 5), uint32], Tensor[(3, 11, 2), float32]) */
}

def @func_8679() -> Tensor[(3, 11, 2), float32] {
  %780 = fn () -> Tensor[(3, 11, 2), float32] {
    @func_7077() /* ty=Tensor[(3, 11, 2), float32] */
  };
  %780() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_13018() -> Tensor[(3, 11, 2), float32] {
  @func_13016() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_6414() -> (Tensor[(3, 11, 2), float32],) {
  @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_7022(%var_7020: Tensor[(390, 2), float32], %var_7021: float64) -> (Tensor[(1815), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(390, 2), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
  %801 = fn (%var_6999: Tensor[(390, 2), float32], %var_7001: float64) -> (Tensor[(1815), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(390, 2), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
    %781 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
    %782 = %781.2;
    %783 = cast(%782, dtype="float32") /* ty=Tensor[(1815), float32] */;
    %784 = cast(meta[relay.Constant][59] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
    %785 = cast(meta[relay.Constant][59] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
    %786 = cast(%var_6999, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
    %787 = cast(meta[relay.Constant][60] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %788 = cast(%var_7001, dtype="float64") /* ty=float64 */;
    %789 = cast(meta[relay.Constant][61] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
    %790 = cast(meta[relay.Constant][62] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %791 = reshape(%784, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
    %792 = reshape(%785, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
    %793 = reshape(%786, newshape=[780, 1]) /* ty=Tensor[(780, 1), float32] */;
    %794 = reshape(%787, newshape=[18]) /* ty=Tensor[(18), float64] */;
    %795 = reshape(%788, newshape=[]) /* ty=float64 */;
    %796 = reshape(%789, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
    %797 = reshape(%790, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %798 = @func_6131(%791, %792, %793, %794, %795, %796, %797) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */;
    %799 = cos(%783) /* ty=Tensor[(1815), float32] */;
    %800 = %798.15;
    (%799, %800, meta[relay.Constant][59] /* ty=Tensor[(315), bool] */, %var_6999, meta[relay.Constant][60] /* ty=Tensor[(18), float64] */, %var_7001, meta[relay.Constant][61] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][62] /* ty=Tensor[(364), float64] */)
  };
  %801(%var_7020, %var_7021) /* ty=(Tensor[(1815), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(390, 2), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */
}

def @func_9016(%var_9013: Tensor[(50), float32], %var_9014: Tensor[(400), float32], %var_9015: Tensor[(50), float32]) -> (Tensor[(11, 11, 15), float64], Tensor[(10, 5, 8), float32], Tensor[(400), float32], Tensor[(50), int32]) {
  %815 = fn (%var_9001: Tensor[(50), float32], %var_9002: Tensor[(400), float32], %var_9007: Tensor[(50), float32]) -> (Tensor[(11, 11, 15), float64], Tensor[(10, 5, 8), float32], Tensor[(400), float32], Tensor[(50), int32]) {
    %802 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
    %803 = cast(%var_9001, dtype="float32") /* ty=Tensor[(50), float32] */;
    %804 = cast(%var_9002, dtype="float32") /* ty=Tensor[(400), float32] */;
    %805 = reshape(%803, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
    %806 = reshape(%804, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
    %807 = @func_417(%805, %806) /* ty=(Tensor[(10, 5, 8), float32],) */;
    %808 = cast(%var_9007, dtype="int32") /* ty=Tensor[(50), int32] */;
    %809 = shape_of(%var_9001, dtype="int32") /* ty=Tensor[(1), int32] */;
    %810 = cast(%var_9001, dtype="int32") /* ty=Tensor[(50), int32] */;
    %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?), int32] */;
    %812 = %802.1;
    %813 = %807.0;
    %814 = bitwise_xor(%810, %811) /* ty=Tensor[(50), int32] */;
    (%812, %813, %var_9002, %814)
  };
  %815(%var_9013, %var_9014, %var_9015) /* ty=(Tensor[(11, 11, 15), float64], Tensor[(10, 5, 8), float32], Tensor[(400), float32], Tensor[(50), int32]) */
}

def @func_7229() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) {
  %822 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) {
    %816 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %817 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %818 = reshape(%817, newshape=[]) /* ty=bool */;
    %819 = @func_7168(%818) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(14, 10, 15), bool], bool) */;
    %820 = %816.0;
    %821 = %819.0;
    (%820, %821, False /* ty=bool */)
  };
  %822() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */
}

def @func_7789() -> Tensor[(3, 11, 2), float32] {
  %823 = fn () -> Tensor[(3, 11, 2), float32] {
    @func_7077() /* ty=Tensor[(3, 11, 2), float32] */
  };
  %823() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_4772(%var_4770: bool) -> (Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) {
  @func_4769(%var_4770) /* ty=(Tensor[(6, 10, 4), bool], Tensor[(9, 10, 13), float32], Tensor[(14, 10, 15), bool], Tensor[(2100), uint64], Tensor[(6, 10, 4), bool]) */
}

def @func_937(%var_935: Tensor[(9, 10, 4), bool], %var_936: Tensor[(15, 1), int16]) -> (Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) {
  %833 = fn (%var_872: Tensor[(9, 10, 4), bool], %var_911: Tensor[(15, 1), int16]) -> (Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) {
    %824 = cast(meta[relay.Constant][63] /* ty=Tensor[(9, 10, 4), bool] */, dtype="bool") /* ty=Tensor[(9, 10, 4), bool] */;
    %825 = shape_of(%var_872, dtype="int32") /* ty=Tensor[(3), int32] */;
    %826 = cast(%var_872, dtype="bool") /* ty=Tensor[(9, 10, 4), bool] */;
    %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %828 = cast(%var_911, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
    %829 = reshape(%828, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %830 = @func_34(%829) /* ty=(Tensor[(15, ?), int16],) */;
    %831 = logical_or(%826, %827) /* ty=Tensor[(9, 10, 4), bool] */;
    %832 = %830.0;
    (%831, %832, %var_911)
  };
  %833(%var_935, %var_936) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) */
}

def @func_5233(%var_5232: Tensor[(9, 7, 13), float64]) -> (Tensor[(9, 7, 13), float64], Tensor[(15, ?), int16], Tensor[(15), int16]) {
  %843 = fn (%var_5195: Tensor[(9, 7, 13), float64]) -> (Tensor[(9, 7, 13), float64], Tensor[(15, ?), int16], Tensor[(15), int16]) {
    %834 = cast(%var_5195, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
    %835 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(9, 7, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %836 = cast(meta[relay.Constant][64] /* ty=Tensor[(9, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
    %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %838 = cast(meta[relay.Constant][65] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
    %839 = reshape(%838, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %840 = @func_34(%839) /* ty=(Tensor[(15, ?), int16],) */;
    %841 = floor_mod(%836, %837) /* ty=Tensor[(9, 7, 13), float64] */;
    %842 = %840.0;
    (%841, %842, meta[relay.Constant][65] /* ty=Tensor[(15), int16] */)
  };
  %843(%var_5232) /* ty=(Tensor[(9, 7, 13), float64], Tensor[(15, ?), int16], Tensor[(15), int16]) */
}

def @func_12950() -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16]) {
  %847 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16]) {
    %844 = @func_11328() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(64), float32], Tensor[(3, 11, 2), float32]) */;
    %845 = %844.2;
    %846 = @func_8870() /* ty=Tensor[(15), int16] */;
    (%845, %846)
  };
  %847() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16]) */
}

def @func_8537(%var_8535: Tensor[(780), float32], %var_8536: Tensor[(400), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 13), float64], Tensor[(780), float32], Tensor[(10, 5, 8), float32], Tensor[(50), float32], Tensor[(400), float32], Tensor[(3, 11, 2), uint16]) {
  @func_8533(%var_8535, %var_8536) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(6, 10, 13), float64], Tensor[(780), float32], Tensor[(10, 5, 8), float32], Tensor[(50), float32], Tensor[(400), float32], Tensor[(3, 11, 2), uint16]) */
}

def @func_12039(%var_12003: Tensor[(5, 10), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(50), float32], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) {
  %848 = cast(meta[relay.Constant][66] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %849 = cast(meta[relay.Constant][66] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %850 = cast(%var_12003, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %851 = cast(meta[relay.Constant][67] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %852 = reshape(%848, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %853 = reshape(%849, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), float64] */;
  %854 = reshape(%850, newshape=[50]) /* ty=Tensor[(50), float32] */;
  %855 = reshape(%851, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %856 = @func_2733(%852, %853, %854, %855) /* ty=(Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) */;
  %857 = @func_7459() /* ty=Tensor[(3, 11, 2), float32] */;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %859 = cast(meta[relay.Constant][68] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %860 = reshape(%858, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %861 = reshape(%859, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %862 = @func_7521(%860, %861) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */;
  %863 = %856.1;
  %864 = %862.0;
  (%857, %863, meta[relay.Constant][66] /* ty=Tensor[(1080), float64] */, %var_12003, meta[relay.Constant][67] /* ty=Tensor[(48), bool] */, %864, meta[relay.Constant][68] /* ty=Tensor[(1350), float64] */)
}

def @func_11420() -> (Tensor[(3, 11, 2), float64],) {
  %869 = fn () -> (Tensor[(3, 11, 2), float64],) {
    %865 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %866 = %865.0;
    %867 = cast(%866, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
    %868 = asinh(%867) /* ty=Tensor[(3, 11, 2), float64] */;
    (%868,)
  };
  %869() /* ty=(Tensor[(3, 11, 2), float64],) */
}

def @func_8284() -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) {
  %875 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) {
    %870 = cast(meta[relay.Constant][69] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
    %871 = reshape(%870, newshape=[15]) /* ty=Tensor[(15), int16] */;
    %872 = @func_7482(%871) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 1), int16], Tensor[(15), int16]) */;
    %873 = @func_7124() /* ty=Tensor[(3, 11, 2), float32] */;
    %874 = %872.2;
    (%873, %874, meta[relay.Constant][69] /* ty=Tensor[(15), int16] */)
  };
  %875() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */
}

def @func_13237() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32]) {
  %878 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32]) {
    %876 = @func_12680() /* ty=Tensor[(3, 11, 2), float32] */;
    %877 = @func_11738() /* ty=Tensor[(3, 11, 2), float32] */;
    (%876, %877)
  };
  %878() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32]) */
}

def @func_13792(%var_13791: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(66), float32], Tensor[(66), float32], float64, Tensor[(32), int32]) {
  %891 = fn (%var_13780: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(66), float32], Tensor[(66), float32], float64, Tensor[(32), int32]) {
    %879 = @func_8283() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(15), int16]) */;
    %880 = cast(%var_13780, dtype="float32") /* ty=Tensor[(66), float32] */;
    %881 = reshape(%880, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %882 = @func_12762(%881) /* ty=(Tensor[(15), int16], Tensor[(3, 11, 2), uint16], Tensor[(66), float32]) */;
    %883 = cast(meta[relay.Constant][70] /* ty=Tensor[(32), int32] */, dtype="int32") /* ty=Tensor[(32), int32] */;
    %884 = cast(meta[relay.Constant][70] /* ty=Tensor[(32), int32] */, dtype="int32") /* ty=Tensor[(32), int32] */;
    %885 = reshape(%883, newshape=[2, 1, 16]) /* ty=Tensor[(2, 1, 16), int32] */;
    %886 = reshape(%884, newshape=[2, 1, 16]) /* ty=Tensor[(2, 1, 16), int32] */;
    %887 = @func_5322(%885, %886) /* ty=(Tensor[(2, ?, 16), int32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280, 1), float64]) */;
    %888 = %879.1;
    %889 = %882.2;
    %890 = %887.2;
    (%888, %889, %var_13780, %890, meta[relay.Constant][70] /* ty=Tensor[(32), int32] */)
  };
  %891(%var_13791) /* ty=(Tensor[(15), int16], Tensor[(66), float32], Tensor[(66), float32], float64, Tensor[(32), int32]) */
}

def @func_14016() -> (Tensor[(3, 11, 2), float32],) {
  @func_14014() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_14033() -> bool {
  %893 = fn () -> bool {
    %892 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
    %892.2
  };
  %893() /* ty=bool */
}

def @func_6948(%var_6947: Tensor[(3, 11, 2), float32]) -> (Tensor[(3, 11, 2), bool],) {
  %901 = fn (%var_6935: Tensor[(3, 11, 2), float32]) -> (Tensor[(3, 11, 2), bool],) {
    %894 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %895 = %894.0;
    %896 = cast(%var_6935, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
    %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
    %898 = cast(%895, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
    %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %900 = not_equal(%898, %899) /* ty=Tensor[(3, 11, 2), bool] */;
    (%900,)
  };
  %901(%var_6947) /* ty=(Tensor[(3, 11, 2), bool],) */
}

def @func_8350() -> (Tensor[(3, 11, 2), float32],) {
  @func_8348() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_12762(%var_12757: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(3, 11, 2), uint16], Tensor[(66), float32]) {
  %902 = cast(%var_12757, dtype="float32") /* ty=Tensor[(66), float32] */;
  %903 = reshape(%902, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %904 = @func_9387() /* ty=Tensor[(15), int16] */;
  %905 = @func_7403(%903) /* ty=Tensor[(3, 11, 2), uint16] */;
  (%904, %905, %var_12757)
}

def @func_12174(%var_12167: Tensor[(315), bool], %var_12168: Tensor[(780), float32], %var_12169: Tensor[(18, 1), float64], %var_12171: Tensor[(360), bool]) -> (Tensor[(15), int16], bool, Tensor[(10, 78), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18, 1), float64], Tensor[(1280), float64], Tensor[(360), bool]) {
  %906 = @func_10041() /* ty=(bool, Tensor[(15), int16]) */;
  %907 = cast(%var_12167, dtype="bool") /* ty=Tensor[(315), bool] */;
  %908 = cast(%var_12168, dtype="float32") /* ty=Tensor[(780), float32] */;
  %909 = cast(%var_12169, dtype="float64") /* ty=Tensor[(18, 1), float64] */;
  %910 = %906.0;
  %911 = cast(%910, dtype="float64") /* ty=float64 */;
  %912 = cast(meta[relay.Constant][71] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %913 = cast(%var_12171, dtype="bool") /* ty=Tensor[(360), bool] */;
  %914 = reshape(%907, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %915 = reshape(%908, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %916 = reshape(%909, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %917 = reshape(%911, newshape=[]) /* ty=float64 */;
  %918 = reshape(%912, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %919 = reshape(%913, newshape=[360, 1]) /* ty=Tensor[(360, 1), bool] */;
  %920 = @func_8966(%914, %915, %916, %917, %918, %919) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) */;
  %921 = @func_11503() /* ty=Tensor[(15), int16] */;
  %922 = %920.2;
  (%921, %910, %922, %var_12167, %var_12168, %var_12169, meta[relay.Constant][71] /* ty=Tensor[(1280), float64] */, %var_12171)
}

def @func_12599(%var_12598: Tensor[(2, 14, 16), int64]) -> (Tensor[(2, 14, 16), int64],) {
  %928 = fn (%var_12586: Tensor[(2, 14, 16), int64]) -> (Tensor[(2, 14, 16), int64],) {
    %923 = cast(meta[relay.Constant][72] /* ty=Tensor[(2, 14, 16), int64] */, dtype="int64") /* ty=Tensor[(2, 14, 16), int64] */;
    %924 = shape_of(%var_12586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %925 = cast(%var_12586, dtype="int64") /* ty=Tensor[(2, 14, 16), int64] */;
    %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %927 = minimum(%925, %926) /* ty=Tensor[(2, 14, 16), int64] */;
    (%927,)
  };
  %928(%var_12598) /* ty=(Tensor[(2, 14, 16), int64],) */
}

def @func_7340(%var_7339: Tensor[(1350), float64]) -> (Tensor[(16, 11, 14), float64], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) {
  %937 = fn (%var_7326: Tensor[(1350), float64]) -> (Tensor[(16, 11, 14), float64], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) {
    %929 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
    %930 = cast(%var_7326, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %931 = cast(%var_7326, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %932 = reshape(%930, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
    %933 = reshape(%931, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
    %934 = @func_5041(%932, %933) /* ty=(Tensor[(15, 9, 10), float64],) */;
    %935 = %929.0;
    %936 = %934.0;
    (%935, %936, %var_7326)
  };
  %937(%var_7339) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(15, 9, 10), float64], Tensor[(1350), float64]) */
}

def @func_5326(%var_5324: Tensor[(2, 1, 16), int32], %var_5325: Tensor[(2, 1, 16), int32]) -> (Tensor[(2, ?, 16), int32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280, 1), float64]) {
  @func_5322(%var_5324, %var_5325) /* ty=(Tensor[(2, ?, 16), int32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280, 1), float64]) */
}

def @func_6696() -> (Tensor[(3, 11, 2), float32],) {
  %939 = fn () -> (Tensor[(3, 11, 2), float32],) {
    %938 = @func_6489() /* ty=Tensor[(3, 11, 2), float32] */;
    (%938,)
  };
  %939() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_7908() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  @func_7906() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */
}

def @func_11651() -> Tensor[(15), int16] {
  @func_11649() /* ty=Tensor[(15), int16] */
}

def @func_10809(%var_10806: Tensor[(48), bool], %var_10807: Tensor[(240), float32], %var_10808: Tensor[(1350), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(315), bool], Tensor[(312), int16], Tensor[(315), bool], Tensor[(2, 200), float32], Tensor[(90, 12), float64], Tensor[(48), bool], Tensor[(1280), float64], Tensor[(240), float32], float64, Tensor[(3, 11, 2), bool], Tensor[(1, 15), int16], Tensor[(16, 5, 16), float64], Tensor[(3, 11, 2), float32], Tensor[(1350), float64], Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float64]) {
  @func_10804(%var_10806, %var_10807, %var_10808) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], Tensor[(315), bool], Tensor[(312), int16], Tensor[(315), bool], Tensor[(2, 200), float32], Tensor[(90, 12), float64], Tensor[(48), bool], Tensor[(1280), float64], Tensor[(240), float32], float64, Tensor[(3, 11, 2), bool], Tensor[(1, 15), int16], Tensor[(16, 5, 16), float64], Tensor[(3, 11, 2), float32], Tensor[(1350), float64], Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float64]) */
}

def @func_9727() -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(312), int16], Tensor[(35, 9), bool], Tensor[(3, 11, 2), float32]) {
  %952 = fn () -> (Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(312), int16], Tensor[(35, 9), bool], Tensor[(3, 11, 2), float32]) {
    %940 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %941 = cast(meta[relay.Constant][73] /* ty=Tensor[(312), int16] */, dtype="int16") /* ty=Tensor[(312), int16] */;
    %942 = cast(meta[relay.Constant][74] /* ty=Tensor[(35, 9), bool] */, dtype="bool") /* ty=Tensor[(35, 9), bool] */;
    %943 = %940.0;
    %944 = cast(%943, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
    %945 = reshape(%941, newshape=[312]) /* ty=Tensor[(312), int16] */;
    %946 = reshape(%942, newshape=[315]) /* ty=Tensor[(315), bool] */;
    %947 = reshape(%944, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %948 = @func_8600(%945, %946, %947) /* ty=(Tensor[(15), int16], Tensor[(780), float32], Tensor[(312), int16], Tensor[(315), bool], Tensor[(780, 1), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), int8], Tensor[(66), float32]) */;
    %949 = @func_6695() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %950 = %948.0;
    %951 = %949.0;
    (%943, %950, meta[relay.Constant][73] /* ty=Tensor[(312), int16] */, meta[relay.Constant][74] /* ty=Tensor[(35, 9), bool] */, %951)
  };
  %952() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(15), int16], Tensor[(312), int16], Tensor[(35, 9), bool], Tensor[(3, 11, 2), float32]) */
}

def @func_12042(%var_12040: Tensor[(5, 10), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(50), float32], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) {
  @func_12039(%var_12040) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(50), float32], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) */
}

def @func_37(%var_35: Tensor[(15, 1), int16]) -> (Tensor[(15, ?), int16],) {
  @func_34(%var_35) /* ty=(Tensor[(15, ?), int16],) */
}

def @func_7957() -> (Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) {
  @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */
}

def @func_13016() -> Tensor[(3, 11, 2), float32] {
  @func_7290() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_5045(%var_5043: Tensor[(15, 9, 10), float64], %var_5044: Tensor[(15, 9, 10), float64]) -> (Tensor[(15, 9, 10), float64],) {
  @func_5041(%var_5043, %var_5044) /* ty=(Tensor[(15, 9, 10), float64],) */
}

def @func_1817(%var_1816: bool) -> Tensor[(9, 10, 13), float32] {
  %957 = fn (%var_1802: bool) -> Tensor[(9, 10, 13), float32] {
    %953 = cast(%var_1802, dtype="bool") /* ty=bool */;
    %954 = cast(meta[relay.Constant][75] /* ty=Tensor[(9, 10, 13), bool] */, dtype="bool") /* ty=Tensor[(9, 10, 13), bool] */;
    %955 = logical_and(%953, %954) /* ty=Tensor[(9, 10, 13), bool] */;
    %956 = cast(%955, dtype="float32") /* ty=Tensor[(9, 10, 13), float32] */;
    atan(%956) /* ty=Tensor[(9, 10, 13), float32] */
  };
  %957(%var_1816) /* ty=Tensor[(9, 10, 13), float32] */
}

def @func_9236() -> (Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32]) {
  %958 = @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
  %959 = %958.0;
  %960 = cast(%959, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %961 = cosh(%960) /* ty=Tensor[(3, 11, 2), float64] */;
  %962 = @func_7459() /* ty=Tensor[(3, 11, 2), float32] */;
  (%961, %962)
}

def @func_8605(%var_8602: Tensor[(312), int16], %var_8603: Tensor[(315), bool], %var_8604: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(780), float32], Tensor[(312), int16], Tensor[(315), bool], Tensor[(780, 1), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), int8], Tensor[(66), float32]) {
  @func_8600(%var_8602, %var_8603, %var_8604) /* ty=(Tensor[(15), int16], Tensor[(780), float32], Tensor[(312), int16], Tensor[(315), bool], Tensor[(780, 1), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), int8], Tensor[(66), float32]) */
}

def @func_11987() -> (Tensor[(3, 11, 2), float64],) {
  %965 = fn () -> (Tensor[(3, 11, 2), float64],) {
    %963 = @func_7955() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float64]) */;
    %964 = %963.1;
    (%964,)
  };
  %965() /* ty=(Tensor[(3, 11, 2), float64],) */
}

def @func_9802(%var_9798: Tensor[(780), float32], %var_9799: float64, %var_9800: Tensor[(1350), float64], %var_9801: Tensor[(50, 15), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(780), float32], float64, Tensor[(15, 9, 10), float64], Tensor[(1350), float64], Tensor[(50, 15), float64]) {
  %983 = fn (%var_9757: Tensor[(780), float32], %var_9758: float64, %var_9774: Tensor[(1350), float64], %var_9781: Tensor[(50, 15), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(780), float32], float64, Tensor[(15, 9, 10), float64], Tensor[(1350), float64], Tensor[(50, 15), float64]) {
    %966 = @func_9279() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %967 = cast(%var_9774, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %968 = cast(%var_9774, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %969 = reshape(%967, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
    %970 = reshape(%968, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
    %971 = @func_5041(%969, %970) /* ty=(Tensor[(15, 9, 10), float64],) */;
    %972 = cast(%var_9757, dtype="float32") /* ty=Tensor[(780), float32] */;
    %973 = cast(%var_9758, dtype="float64") /* ty=float64 */;
    %974 = reshape(%972, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
    %975 = reshape(%973, newshape=[]) /* ty=float64 */;
    %976 = @func_7019(%974, %975) /* ty=(Tensor[(1815), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(390, 2), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */;
    %977 = %976.1;
    %978 = cast(%977, dtype="float64") /* ty=Tensor[(50, 1), float64] */;
    %979 = cast(%var_9781, dtype="float64") /* ty=Tensor[(50, 15), float64] */;
    %980 = %966.0;
    %981 = %971.0;
    %982 = mod(%978, %979) /* ty=Tensor[(50, 15), float64] */;
    (%980, %var_9757, %var_9758, %981, %var_9774, %982)
  };
  %983(%var_9798, %var_9799, %var_9800, %var_9801) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), float32], float64, Tensor[(15, 9, 10), float64], Tensor[(1350), float64], Tensor[(50, 15), float64]) */
}

def @func_13894() -> (Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32]) {
  %989 = fn () -> (Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32]) {
    %984 = @func_11986() /* ty=(Tensor[(3, 11, 2), float64],) */;
    %985 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %986 = %984.0;
    %987 = @func_6489() /* ty=Tensor[(3, 11, 2), float32] */;
    %988 = %985.0;
    (%986, %987, %988)
  };
  %989() /* ty=(Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32]) */
}

def @func_7292() -> Tensor[(3, 11, 2), float32] {
  @func_7290() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_9238() -> (Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32]) {
  @func_9236() /* ty=(Tensor[(3, 11, 2), float64], Tensor[(3, 11, 2), float32]) */
}

def @func_9860(%var_9850: Tensor[(780), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 13), float64], Tensor[(780), float32]) {
  %990 = cast(%var_9850, dtype="float32") /* ty=Tensor[(780), float32] */;
  %991 = reshape(%990, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %992 = @func_6872(%991) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(780), bool], Tensor[(6, 10, 13), float64]) */;
  %993 = @func_8678() /* ty=Tensor[(3, 11, 2), float32] */;
  %994 = %992.2;
  (%993, %994, %var_9850)
}

def @func_5041(%var_5036: Tensor[(15, 9, 10), float64], %var_5037: Tensor[(15, 9, 10), float64]) -> (Tensor[(15, 9, 10), float64],) {
  %995 = cast(%var_5037, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  %996 = shape_of(%var_5036, dtype="int32") /* ty=Tensor[(3), int32] */;
  %997 = cast(%var_5036, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %999 = floor_divide(%997, %998) /* ty=Tensor[(15, 9, 10), float64] */;
  (%999,)
}

def @func_4181(%var_4168: float64, %var_4169: Tensor[(16, 5, 16), float64]) -> Tensor[(16, 5, 16), float64] {
  %1000 = cast(%var_4168, dtype="float64") /* ty=float64 */;
  %1001 = cast(%var_4169, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  floor_mod(%1000, %1001) /* ty=Tensor[(16, 5, 16), float64] */
}

def @func_8600(%var_8568: Tensor[(312), int16], %var_8569: Tensor[(315), bool], %var_8598: Tensor[(66), float32]) -> (Tensor[(15), int16], Tensor[(780), float32], Tensor[(312), int16], Tensor[(315), bool], Tensor[(780, 1), float32], Tensor[(1815), float64], Tensor[(3, 11, 2), int8], Tensor[(66), float32]) {
  %1002 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %1003 = cast(%var_8568, dtype="int16") /* ty=Tensor[(312), int16] */;
  %1004 = cast(%var_8569, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1005 = cast(meta[relay.Constant][76] /* ty=Tensor[(780, 1), float32] */, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %1006 = reshape(%1003, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), int16] */;
  %1007 = reshape(%1004, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %1008 = reshape(%1005, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %1009 = @func_8005(%1006, %1007, %1008) /* ty=(Tensor[(13, 8, 3), bool], Tensor[(13, 8, 3), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */;
  %1010 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %1011 = cast(%var_8598, dtype="float32") /* ty=Tensor[(66), float32] */;
  %1012 = reshape(%1011, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %1013 = @func_7255(%1012) /* ty=(Tensor[(3, 11, 2), int8],) */;
  %1014 = %1002.0;
  %1015 = %1009.4;
  %1016 = %1010.2;
  %1017 = %1013.0;
  (%1014, %1015, %var_8568, %var_8569, meta[relay.Constant][76] /* ty=Tensor[(780, 1), float32] */, %1016, %1017, %var_8598)
}

def @func_10861() -> Tensor[(64), float32] {
  %1018 = @func_9464() /* ty=(Tensor[(3, 11, 2), float64], float64, Tensor[(64), float32], Tensor[(400), float32]) */;
  %1018.2
}

def @func_8348() -> (Tensor[(3, 11, 2), float32],) {
  %1019 = @func_7228() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(3, 11, 2), float32], bool) */;
  %1020 = %1019.1;
  (%1020,)
}

def @func_2733(%var_2671: Tensor[(10, 9, 12), float64], %var_2672: Tensor[(10, 9, 12), float64], %var_2696: Tensor[(50), float32], %var_2721: Tensor[(48), bool]) -> (Tensor[(10, 9, 12), float64], Tensor[(50), float32], Tensor[(2, 200), float32], Tensor[(18), float32], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(480), bool], Tensor[(10, 5, 8), float32]) {
  %1021 = cast(%var_2672, dtype="float64") /* ty=Tensor[(10, 9, 12), float64] */;
  %1022 = shape_of(%var_2671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1023 = cast(%var_2671, dtype="float64") /* ty=Tensor[(10, 9, 12), float64] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1025 = cast(meta[relay.Constant][78] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1026 = reshape(%1025, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %1027 = @func_1409(%1026) /* ty=Tensor[(6, 3, 1), float64] */;
  %1028 = cast(%1027, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %1029 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(18), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1030 = cast(meta[relay.Constant][78] /* ty=Tensor[(18), float64] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1032 = cast(%var_2721, dtype="bool") /* ty=Tensor[(48), bool] */;
  %1033 = cast(meta[relay.Constant][79] /* ty=Tensor[(480), bool] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %1034 = reshape(%1032, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), bool] */;
  %1035 = reshape(%1033, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), bool] */;
  %1036 = cast(%var_2696, dtype="float32") /* ty=Tensor[(50), float32] */;
  %1037 = cast(meta[relay.Constant][77] /* ty=Tensor[(2, 200), float32] */, dtype="float32") /* ty=Tensor[(2, 200), float32] */;
  %1038 = reshape(%1036, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %1039 = reshape(%1037, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %1040 = @func_417(%1038, %1039) /* ty=(Tensor[(10, 5, 8), float32],) */;
  %1041 = %1040.0;
  %1042 = cast(%1041, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
  %1043 = mod(%1023, %1024) /* ty=Tensor[(10, 9, 12), float64] */;
  %1044 = floor_mod(%1030, %1031) /* ty=Tensor[(18), float32] */;
  %1045 = @func_1177(%1034, %1035) /* ty=Tensor[(6, 10, 8), float32] */;
  %1046 = sinh(%1042) /* ty=Tensor[(10, 5, 8), float32] */;
  (%1043, %var_2696, meta[relay.Constant][77] /* ty=Tensor[(2, 200), float32] */, %1044, %1045, %var_2721, meta[relay.Constant][79] /* ty=Tensor[(480), bool] */, %1046)
}

def @func_9973(%var_9970: float64, %var_9971: Tensor[(135, 10), float64], %var_9972: Tensor[(10, 78), float32]) -> (Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(15), int16], Tensor[(15, 9, 10), float64], Tensor[(135, 10), float64], Tensor[(780), float32], Tensor[(10, 78), float32]) {
  @func_9968(%var_9970, %var_9971, %var_9972) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(15), int16], Tensor[(15, 9, 10), float64], Tensor[(135, 10), float64], Tensor[(780), float32], Tensor[(10, 78), float32]) */
}

def @func_12309() -> (Tensor[(11, 11, 15), float64],) {
  %1047 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %1048 = %1047.1;
  (%1048,)
}

def @func_12551(%var_12550: Tensor[(1815), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float32], Tensor[(780), float32], Tensor[(11, 11, 15), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), uint64]) {
  %1070 = fn (%var_12544: Tensor[(1815), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float32], Tensor[(780), float32], Tensor[(11, 11, 15), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), uint64]) {
    %1049 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %1050 = cast(meta[relay.Constant][80] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %1051 = cast(meta[relay.Constant][81] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
    %1052 = reshape(%1050, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
    %1053 = reshape(%1051, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %1054 = @func_8171(%1052, %1053) /* ty=(Tensor[(11, 11, 15), float32], Tensor[(11, 11, 15), float32], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(9, 15, 3), float32], Tensor[(780), float32]) */;
    %1055 = %1054.1;
    %1056 = cast(%1055, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
    %1057 = reshape(%1056, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
    %1058 = @func_5182(%1057) /* ty=(Tensor[(11, 11, 15), float64],) */;
    %1059 = %1058.0;
    %1060 = cast(%1059, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
    %1061 = reshape(%1060, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
    %1062 = @func_5182(%1061) /* ty=(Tensor[(11, 11, 15), float64],) */;
    %1063 = cast(%var_12544, dtype="uint64") /* ty=Tensor[(1815), uint64] */;
    %1064 = shape_of(meta[relay.Constant][80] /* ty=Tensor[(1815), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1065 = cast(meta[relay.Constant][80] /* ty=Tensor[(1815), float64] */, dtype="uint64") /* ty=Tensor[(1815), uint64] */;
    %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %1067 = %1049.0;
    %1068 = %1062.0;
    %1069 = minimum(%1065, %1066) /* ty=Tensor[(1815), uint64] */;
    (%1067, %1055, meta[relay.Constant][81] /* ty=Tensor[(780), float32] */, %1059, %1068, %1069)
  };
  %1070(%var_12550) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float32], Tensor[(780), float32], Tensor[(11, 11, 15), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), uint64]) */
}

def @func_6640(%var_6638: Tensor[(3, 6), float64], %var_6639: Tensor[(1815), float64]) -> (Tensor[(6, 3, 1), float64], Tensor[(3, 6), float64], Tensor[(15, ?), int16], uint16, Tensor[(1950), uint16], Tensor[(15, ?), int16], Tensor[(3, 11, 2), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
  %1092 = fn (%var_6598: Tensor[(3, 6), float64], %var_6627: Tensor[(1815), float64]) -> (Tensor[(6, 3, 1), float64], Tensor[(3, 6), float64], Tensor[(15, ?), int16], uint16, Tensor[(1950), uint16], Tensor[(15, ?), int16], Tensor[(3, 11, 2), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
    %1071 = cast(%var_6598, dtype="float64") /* ty=Tensor[(3, 6), float64] */;
    %1072 = reshape(%1071, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
    %1073 = cast(meta[relay.Constant][82] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1074 = cast(meta[relay.Constant][83] /* ty=Tensor[(1950), uint16] */, dtype="uint16") /* ty=Tensor[(1950), uint16] */;
    %1075 = reshape(%1073, newshape=[]) /* ty=uint16 */;
    %1076 = reshape(%1074, newshape=[13, 10, 15]) /* ty=Tensor[(13, 10, 15), uint16] */;
    %1077 = @func_3038(%1075, %1076) /* ty=(Tensor[(13, 10, 15), bool], Tensor[(15, ?), int16], Tensor[(1, 15), int16], Tensor[(15, ?), int16]) */;
    %1078 = %1077.1;
    %1079 = cast(%1078, dtype="int16") /* ty=Tensor[(15, ?), int16] */;
    %1080 = reshape(%1079, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %1081 = @func_34(%1080) /* ty=(Tensor[(15, ?), int16],) */;
    %1082 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %1083 = %1082.0;
    %1084 = cast(%1083, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
    %1085 = cast(%var_6627, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %1086 = reshape(%1085, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
    %1087 = @func_5182(%1086) /* ty=(Tensor[(11, 11, 15), float64],) */;
    %1088 = @func_1409(%1072) /* ty=Tensor[(6, 3, 1), float64] */;
    %1089 = %1081.0;
    %1090 = log2(%1084) /* ty=Tensor[(3, 11, 2), float64] */;
    %1091 = %1087.0;
    (%1088, %var_6598, %1078, meta[relay.Constant][82] /* ty=uint16 */, meta[relay.Constant][83] /* ty=Tensor[(1950), uint16] */, %1089, %1090, %1091, %var_6627)
  };
  %1092(%var_6638, %var_6639) /* ty=(Tensor[(6, 3, 1), float64], Tensor[(3, 6), float64], Tensor[(15, ?), int16], uint16, Tensor[(1950), uint16], Tensor[(15, ?), int16], Tensor[(3, 11, 2), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */
}

def @func_12777(%var_12775: Tensor[(13, 6, 15), float32]) -> Tensor[(13, 6, 15), float32] {
  @func_12774(%var_12775) /* ty=Tensor[(13, 6, 15), float32] */
}

def @func_7667() -> (Tensor[(3, 11, 2), bool], Tensor[(3, 11, 2), float32]) {
  %1093 = @func_7124() /* ty=Tensor[(3, 11, 2), float32] */;
  %1094 = cast(meta[relay.Constant][84] /* ty=Tensor[(3, 11, 2), float32] */, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %1095 = shape_of(%1093, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1096 = cast(%1093, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1098 = greater(%1096, %1097) /* ty=Tensor[(3, 11, 2), bool] */;
  %1099 = cast(%1098, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %1100 = reshape(%1099, newshape=[3, 11, 2]) /* ty=Tensor[(3, 11, 2), float32] */;
  %1101 = @func_6946(%1100) /* ty=(Tensor[(3, 11, 2), bool],) */;
  %1102 = %1101.0;
  %1103 = cast(%1102, dtype="float32") /* ty=Tensor[(3, 11, 2), float32] */;
  %1104 = sinh(%1103) /* ty=Tensor[(3, 11, 2), float32] */;
  (%1098, %1104)
}

def @func_8974(%var_8968: Tensor[(315), bool], %var_8969: Tensor[(10, 78), float32], %var_8970: Tensor[(18), float64], %var_8971: float64, %var_8972: Tensor[(1280), float64], %var_8973: Tensor[(360, 1), bool]) -> (Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) {
  @func_8966(%var_8968, %var_8969, %var_8970, %var_8971, %var_8972, %var_8973) /* ty=(Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) */
}

def @func_11777() -> Tensor[(15), int16] {
  %1105 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %1105.0
}

def @func_11649() -> Tensor[(15), int16] {
  @func_9387() /* ty=Tensor[(15), int16] */
}

def @func_417(%var_403: Tensor[(10, 5, 1), float32], %var_404: Tensor[(10, 5, 8), float32]) -> (Tensor[(10, 5, 8), float32],) {
  %1106 = cast(%var_403, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
  %1107 = cast(%var_404, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
  %1108 = subtract(%1106, %1107) /* ty=Tensor[(10, 5, 8), float32] */;
  (%1108,)
}

def @func_8171(%var_8126: Tensor[(11, 11, 15), float64], %var_8152: Tensor[(780), float32]) -> (Tensor[(11, 11, 15), float32], Tensor[(11, 11, 15), float32], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(9, 15, 3), float32], Tensor[(780), float32]) {
  %1109 = @func_6922() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %1110 = %1109.1;
  %1111 = cast(%var_8126, dtype="float32") /* ty=Tensor[(11, 11, 15), float32] */;
  %1112 = shape_of(%1110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1113 = cast(%1110, dtype="float32") /* ty=Tensor[(11, 11, 15), float32] */;
  %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1115 = cast(%var_8126, dtype="float32") /* ty=Tensor[(11, 11, 15), float32] */;
  %1116 = asin(%1115) /* ty=Tensor[(11, 11, 15), float32] */;
  %1117 = cast(%1116, dtype="float32") /* ty=Tensor[(11, 11, 15), float32] */;
  %1118 = cast(meta[relay.Constant][85] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1119 = reshape(%1118, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float64] */;
  %1120 = cast(%var_8152, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1121 = reshape(%1120, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float32] */;
  %1122 = @func_1324(%1121) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(360), bool], Tensor[(15), int16], Tensor[(6, 10, 13), float64], Tensor[(9, 15, 3), float32]) */;
  %1123 = mod(%1113, %1114) /* ty=Tensor[(11, 11, 15), float32] */;
  %1124 = sin(%1117) /* ty=Tensor[(11, 11, 15), float32] */;
  %1125 = @func_1409(%1119) /* ty=Tensor[(6, 3, 1), float64] */;
  %1126 = %1122.4;
  (%1123, %1124, %1125, meta[relay.Constant][85] /* ty=Tensor[(18), float64] */, %1126, %var_8152)
}

def @func_1409(%var_1395: Tensor[(6, 3, 1), float64]) -> Tensor[(6, 3, 1), float64] {
  %1127 = cast(%var_1395, dtype="float64") /* ty=Tensor[(6, 3, 1), float64] */;
  cos(%1127) /* ty=Tensor[(6, 3, 1), float64] */
}

def @func_7571(%var_7569: Tensor[(15, 7, 9), int8], %var_7570: Tensor[(15, 7, 9), int8]) -> (Tensor[(15, 7, 9), int8], Tensor[(15, 7, 9), bool]) {
  %1138 = fn (%var_7553: Tensor[(15, 7, 9), int8], %var_7564: Tensor[(15, 7, 9), int8]) -> (Tensor[(15, 7, 9), int8], Tensor[(15, 7, 9), bool]) {
    %1128 = cast(%var_7553, dtype="int8") /* ty=Tensor[(15, 7, 9), int8] */;
    %1129 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(15, 7, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1130 = cast(meta[relay.Constant][86] /* ty=Tensor[(15, 7, 9), int8] */, dtype="int8") /* ty=Tensor[(15, 7, 9), int8] */;
    %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1132 = cast(%var_7564, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
    %1133 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(15, 7, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1134 = cast(meta[relay.Constant][86] /* ty=Tensor[(15, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
    %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1136 = logical_xor(%1130, %1131) /* ty=Tensor[(15, 7, 9), int8] */;
    %1137 = greater_equal(%1134, %1135) /* ty=Tensor[(15, 7, 9), bool] */;
    (%1136, %1137)
  };
  %1138(%var_7569, %var_7570) /* ty=(Tensor[(15, 7, 9), int8], Tensor[(15, 7, 9), bool]) */
}

def @func_13441(%var_13434: Tensor[(780), float32], %var_13435: Tensor[(18), float64], %var_13436: float64, %var_13437: Tensor[(1280), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(6, 10, 8), float32], Tensor[(480), bool], Tensor[(364), float64], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
  %1139 = cast(meta[relay.Constant][87] /* ty=Tensor[(480), bool] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %1140 = reshape(%1139, newshape=[4, 120]) /* ty=Tensor[(4, 120), bool] */;
  %1141 = @func_13364(%1140) /* ty=(Tensor[(15), int16], Tensor[(6, 10, 8), float32], Tensor[(48), bool], Tensor[(4, 120), bool]) */;
  %1142 = cast(meta[relay.Constant][88] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1143 = cast(meta[relay.Constant][88] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1144 = cast(%var_13434, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1145 = cast(%var_13435, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1146 = cast(%var_13436, dtype="float64") /* ty=float64 */;
  %1147 = cast(%var_13437, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %1148 = cast(meta[relay.Constant][89] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1149 = reshape(%1142, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %1150 = reshape(%1143, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %1151 = reshape(%1144, newshape=[780, 1]) /* ty=Tensor[(780, 1), float32] */;
  %1152 = reshape(%1145, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %1153 = reshape(%1146, newshape=[]) /* ty=float64 */;
  %1154 = reshape(%1147, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %1155 = reshape(%1148, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %1156 = @func_6131(%1149, %1150, %1151, %1152, %1153, %1154, %1155) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */;
  %1157 = @func_11053() /* ty=Tensor[(3, 11, 2), float32] */;
  %1158 = %1141.1;
  %1159 = %1156.10;
  (%1157, %1158, meta[relay.Constant][87] /* ty=Tensor[(480), bool] */, %1159, meta[relay.Constant][88] /* ty=Tensor[(315), bool] */, %var_13434, %var_13435, %var_13436, %var_13437, meta[relay.Constant][89] /* ty=Tensor[(364), float64] */)
}

def @func_141(%var_132: Tensor[(15), int16]) -> (Tensor[(9, 15, 3), uint16], Tensor[(9, 15, 3), float32], Tensor[(9, 15, 3), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(15, ?), int16]) {
  %1160 = cast(meta[relay.Constant][91] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="uint16") /* ty=Tensor[(9, 15, 3), uint16] */;
  %1161 = shape_of(meta[relay.Constant][90] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1162 = cast(meta[relay.Constant][90] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="uint16") /* ty=Tensor[(9, 15, 3), uint16] */;
  %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1164 = cast(meta[relay.Constant][90] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="float32") /* ty=Tensor[(9, 15, 3), float32] */;
  %1165 = cast(meta[relay.Constant][91] /* ty=Tensor[(9, 15, 3), uint16] */, dtype="float32") /* ty=Tensor[(9, 15, 3), float32] */;
  %1166 = cast(%var_132, dtype="int16") /* ty=Tensor[(15), int16] */;
  %1167 = reshape(%1166, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %1168 = @func_34(%1167) /* ty=(Tensor[(15, ?), int16],) */;
  %1169 = cast(%var_132, dtype="int16") /* ty=Tensor[(15), int16] */;
  %1170 = reshape(%1169, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %1171 = @func_34(%1170) /* ty=(Tensor[(15, ?), int16],) */;
  %1172 = logical_xor(%1162, %1163) /* ty=Tensor[(9, 15, 3), uint16] */;
  %1173 = log(%1164) /* ty=Tensor[(9, 15, 3), float32] */;
  %1174 = asinh(%1165) /* ty=Tensor[(9, 15, 3), float32] */;
  %1175 = %1168.0;
  %1176 = %1171.0;
  (%1172, %1173, %1174, %1175, %var_132, %1176)
}

def @func_8872() -> Tensor[(15), int16] {
  @func_8870() /* ty=Tensor[(15), int16] */
}

def @func_9396() -> (Tensor[(3, 11, 2), float32],) {
  @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_11246(%var_11244: Tensor[(2, 12, 1), int8], %var_11245: Tensor[(2, 12, 11), int8]) -> Tensor[(2, 12, 11), bool] {
  %1179 = fn (%var_11229: Tensor[(2, 12, 1), int8], %var_11230: Tensor[(2, 12, 11), int8]) -> Tensor[(2, 12, 11), bool] {
    %1177 = cast(%var_11229, dtype="bool") /* ty=Tensor[(2, 12, 1), bool] */;
    %1178 = cast(%var_11230, dtype="bool") /* ty=Tensor[(2, 12, 11), bool] */;
    less_equal(%1177, %1178) /* ty=Tensor[(2, 12, 11), bool] */
  };
  %1179(%var_11244, %var_11245) /* ty=Tensor[(2, 12, 11), bool] */
}

def @func_5768(%var_5766: Tensor[(40, 10), float32], %var_5767: Tensor[(50), float32]) -> (Tensor[(1280), float64], Tensor[(240), float32], Tensor[(40, 10), float32], float64, Tensor[(10, 5, 8), float32], Tensor[(50), float32], Tensor[(16, 9, 11), float64]) {
  %1198 = fn (%var_5718: Tensor[(40, 10), float32], %var_5740: Tensor[(50), float32]) -> (Tensor[(1280), float64], Tensor[(240), float32], Tensor[(40, 10), float32], float64, Tensor[(10, 5, 8), float32], Tensor[(50), float32], Tensor[(16, 9, 11), float64]) {
    %1180 = cast(meta[relay.Constant][92] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1181 = cast(%var_5718, dtype="float32") /* ty=Tensor[(40, 10), float32] */;
    %1182 = cast(7.33577f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1183 = reshape(%1180, newshape=[1, 15, 16]) /* ty=Tensor[(1, 15, 16), float32] */;
    %1184 = reshape(%1181, newshape=[400]) /* ty=Tensor[(400), float32] */;
    %1185 = reshape(%1182, newshape=[]) /* ty=float64 */;
    %1186 = @func_4518(%1183, %1184, %1185) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */;
    %1187 = cast(%var_5740, dtype="float32") /* ty=Tensor[(50), float32] */;
    %1188 = cast(%var_5718, dtype="float32") /* ty=Tensor[(40, 10), float32] */;
    %1189 = reshape(%1187, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
    %1190 = reshape(%1188, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
    %1191 = @func_417(%1189, %1190) /* ty=(Tensor[(10, 5, 8), float32],) */;
    %1192 = cast(meta[relay.Constant][93] /* ty=Tensor[(16, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 9, 11), float32] */;
    %1193 = cosh(%1192) /* ty=Tensor[(16, 9, 11), float32] */;
    %1194 = cast(%1193, dtype="float64") /* ty=Tensor[(16, 9, 11), float64] */;
    %1195 = %1186.6;
    %1196 = %1191.0;
    %1197 = log2(%1194) /* ty=Tensor[(16, 9, 11), float64] */;
    (%1195, meta[relay.Constant][92] /* ty=Tensor[(240), float32] */, %var_5718, 7.33577f64 /* ty=float64 */, %1196, %var_5740, %1197)
  };
  %1198(%var_5766, %var_5767) /* ty=(Tensor[(1280), float64], Tensor[(240), float32], Tensor[(40, 10), float32], float64, Tensor[(10, 5, 8), float32], Tensor[(50), float32], Tensor[(16, 9, 11), float64]) */
}

def @func_12774(%var_12767: Tensor[(13, 6, 15), float32]) -> Tensor[(13, 6, 15), float32] {
  %1199 = cast(%var_12767, dtype="float32") /* ty=Tensor[(13, 6, 15), float32] */;
  atanh(%1199) /* ty=Tensor[(13, 6, 15), float32] */
}

def @func_8748(%var_8746: Tensor[(4, 16, 1), float32], %var_8747: Tensor[(400), float32]) -> (Tensor[(4, 16, 1), float32], Tensor[(400), float32], Tensor[(240), float32], Tensor[(400), float32], float64) {
  %1210 = fn (%var_8733: Tensor[(4, 16, 1), float32], %var_8742: Tensor[(400), float32]) -> (Tensor[(4, 16, 1), float32], Tensor[(400), float32], Tensor[(240), float32], Tensor[(400), float32], float64) {
    %1200 = cast(%var_8733, dtype="float32") /* ty=Tensor[(4, 16, 1), float32] */;
    %1201 = cast(meta[relay.Constant][94] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1202 = cast(%var_8742, dtype="float32") /* ty=Tensor[(400), float32] */;
    %1203 = cast(-5.95045f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1204 = reshape(%1201, newshape=[1, 15, 16]) /* ty=Tensor[(1, 15, 16), float32] */;
    %1205 = reshape(%1202, newshape=[400]) /* ty=Tensor[(400), float32] */;
    %1206 = reshape(%1203, newshape=[]) /* ty=float64 */;
    %1207 = @func_4518(%1204, %1205, %1206) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */;
    %1208 = log(%1200) /* ty=Tensor[(4, 16, 1), float32] */;
    %1209 = %1207.3;
    (%1208, %1209, meta[relay.Constant][94] /* ty=Tensor[(240), float32] */, %var_8742, -5.95045f64 /* ty=float64 */)
  };
  %1210(%var_8746, %var_8747) /* ty=(Tensor[(4, 16, 1), float32], Tensor[(400), float32], Tensor[(240), float32], Tensor[(400), float32], float64) */
}

def @func_1412(%var_1410: Tensor[(6, 3, 1), float64]) -> Tensor[(6, 3, 1), float64] {
  @func_1409(%var_1410) /* ty=Tensor[(6, 3, 1), float64] */
}

def @func_14193() -> (Tensor[(3, 11, 2), float32],) {
  @func_14191() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_10129() -> (Tensor[(3, 11, 2), float32],) {
  %1211 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1212 = %1211.0;
  (%1212,)
}

def @func_6140(%var_6133: Tensor[(15, 3, 7), bool], %var_6134: Tensor[(15, 3, 7), bool], %var_6135: Tensor[(780, 1), float32], %var_6136: Tensor[(18), float64], %var_6137: float64, %var_6138: Tensor[(1280), float64], %var_6139: Tensor[(364), float64]) -> (Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) {
  @func_6131(%var_6133, %var_6134, %var_6135, %var_6136, %var_6137, %var_6138, %var_6139) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */
}

def @func_8870() -> Tensor[(15), int16] {
  %1213 = @func_8413() /* ty=(Tensor[(15), int16],) */;
  %1213.0
}

def @func_8966(%var_8910: Tensor[(315), bool], %var_8911: Tensor[(10, 78), float32], %var_8912: Tensor[(18), float64], %var_8913: float64, %var_8914: Tensor[(1280), float64], %var_8937: Tensor[(360, 1), bool]) -> (Tensor[(9, 10, 13), float32], Tensor[(315), bool], Tensor[(10, 78), float32], float64, Tensor[(1280), float64], Tensor[(364), float64], Tensor[(15, ?), int16], Tensor[(11, 11, 15), float64], Tensor[(360, 18), float64]) {
  %1214 = cast(%var_8910, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1215 = cast(%var_8910, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1216 = cast(%var_8911, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %1217 = cast(%var_8912, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1218 = cast(%var_8913, dtype="float64") /* ty=float64 */;
  %1219 = cast(%var_8914, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %1220 = cast(meta[relay.Constant][95] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1221 = reshape(%1214, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %1222 = reshape(%1215, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
  %1223 = reshape(%1216, newshape=[780, 1]) /* ty=Tensor[(780, 1), float32] */;
  %1224 = reshape(%1217, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %1225 = reshape(%1218, newshape=[]) /* ty=float64 */;
  %1226 = reshape(%1219, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %1227 = reshape(%1220, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %1228 = @func_6131(%1221, %1222, %1223, %1224, %1225, %1226, %1227) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */;
  %1229 = cast(%var_8937, dtype="bool") /* ty=Tensor[(360, 1), bool] */;
  %1230 = cast(meta[relay.Constant][96] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %1231 = reshape(%1229, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), bool] */;
  %1232 = reshape(%1230, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %1233 = @func_934(%1231, %1232) /* ty=(Tensor[(9, 10, 4), bool], Tensor[(15, ?), int16], Tensor[(15, 1), int16]) */;
  %1234 = @func_7836() /* ty=(Tensor[(3, 11, 2), float32], Tensor[(11, 11, 15), float64]) */;
  %1235 = %1234.1;
  %1236 = cast(%1235, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %1237 = cast(meta[relay.Constant][96] /* ty=Tensor[(15), int16] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %1238 = cast(%var_8912, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1239 = cast(%var_8937, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %1240 = %1228.11;
  %1241 = %1233.1;
  %1242 = floor_divide(%1236, %1237) /* ty=Tensor[(11, 11, 15), float64] */;
  %1243 = mod(%1238, %1239) /* ty=Tensor[(360, 18), float64] */;
  (%1240, %var_8910, %var_8911, %var_8913, %var_8914, meta[relay.Constant][95] /* ty=Tensor[(364), float64] */, %1241, %1242, %1243)
}

def @func_11810() -> (uint16,) {
  %1244 = @func_8097() /* ty=(Tensor[(1, 15), int16], uint16, Tensor[(1950), uint16], Tensor[(3, 11, 2), float32]) */;
  %1245 = %1244.1;
  (%1245,)
}

def @func_10337() -> (Tensor[(3, 11, 2), float32],) {
  %1248 = fn () -> (Tensor[(3, 11, 2), float32],) {
    %1246 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %1247 = %1246.0;
    (%1247,)
  };
  %1248() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_8009(%var_8006: Tensor[(13, 8, 3), int16], %var_8007: Tensor[(315), bool], %var_8008: Tensor[(780), float32]) -> (Tensor[(13, 8, 3), bool], Tensor[(13, 8, 3), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
  %1277 = fn (%var_7978: Tensor[(13, 8, 3), int16], %var_7998: Tensor[(315), bool], %var_7999: Tensor[(780), float32]) -> (Tensor[(13, 8, 3), bool], Tensor[(13, 8, 3), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) {
    %1249 = cast(%var_7978, dtype="bool") /* ty=Tensor[(13, 8, 3), bool] */;
    %1250 = shape_of(meta[relay.Constant][97] /* ty=Tensor[(13, 8, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1251 = cast(meta[relay.Constant][97] /* ty=Tensor[(13, 8, 3), int16] */, dtype="bool") /* ty=Tensor[(13, 8, 3), bool] */;
    %1252 = dyn.reshape(%1249, %1250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1253 = cast(%var_7978, dtype="uint16") /* ty=Tensor[(13, 8, 3), uint16] */;
    %1254 = shape_of(meta[relay.Constant][97] /* ty=Tensor[(13, 8, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1255 = cast(meta[relay.Constant][97] /* ty=Tensor[(13, 8, 3), int16] */, dtype="uint16") /* ty=Tensor[(13, 8, 3), uint16] */;
    %1256 = dyn.reshape(%1253, %1254, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1257 = bitwise_and(%1255, %1256) /* ty=Tensor[(13, 8, 3), uint16] */;
    %1258 = cast(%1257, dtype="float32") /* ty=Tensor[(13, 8, 3), float32] */;
    %1259 = cast(%var_7998, dtype="bool") /* ty=Tensor[(315), bool] */;
    %1260 = cast(%var_7998, dtype="bool") /* ty=Tensor[(315), bool] */;
    %1261 = cast(%var_7999, dtype="float32") /* ty=Tensor[(780), float32] */;
    %1262 = cast(meta[relay.Constant][98] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %1263 = cast(2.5792f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1264 = cast(meta[relay.Constant][99] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
    %1265 = cast(meta[relay.Constant][100] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %1266 = reshape(%1259, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
    %1267 = reshape(%1260, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), bool] */;
    %1268 = reshape(%1261, newshape=[780, 1]) /* ty=Tensor[(780, 1), float32] */;
    %1269 = reshape(%1262, newshape=[18]) /* ty=Tensor[(18), float64] */;
    %1270 = reshape(%1263, newshape=[]) /* ty=float64 */;
    %1271 = reshape(%1264, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
    %1272 = reshape(%1265, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %1273 = @func_6131(%1266, %1267, %1268, %1269, %1270, %1271, %1272) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(6, 10, 13), float64], Tensor[(780, 1), float32], Tensor[(15, 3, 7), float64], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64], Tensor[(780), float32], Tensor[(364), float64], Tensor[(9, 10, 13), float32], Tensor[(16, 5, 16), float64], Tensor[(6, 10, 8), float32], Tensor[(1080), float64], Tensor[(50, 1), float32], Tensor[(48, 1), bool]) */;
    %1274 = less(%1251, %1252) /* ty=Tensor[(13, 8, 3), bool] */;
    %1275 = log2(%1258) /* ty=Tensor[(13, 8, 3), float32] */;
    %1276 = %1273.15;
    (%1274, %1275, %1276, %var_7998, %var_7999, meta[relay.Constant][98] /* ty=Tensor[(18), float64] */, 2.5792f64 /* ty=float64 */, meta[relay.Constant][99] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][100] /* ty=Tensor[(364), float64] */)
  };
  %1277(%var_8006, %var_8007, %var_8008) /* ty=(Tensor[(13, 8, 3), bool], Tensor[(13, 8, 3), float32], Tensor[(50, 1), float32], Tensor[(315), bool], Tensor[(780), float32], Tensor[(18), float64], float64, Tensor[(1280), float64], Tensor[(364), float64]) */
}

def @func_13739(%var_13729: Tensor[(88), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(50), float32], Tensor[(3, 11, 2), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(9, 10, 13), float32], bool) {
  %1278 = @func_6412() /* ty=(Tensor[(3, 11, 2), float32],) */;
  %1279 = cast(meta[relay.Constant][101] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %1280 = reshape(%1279, newshape=[5, 10]) /* ty=Tensor[(5, 10), float32] */;
  %1281 = @func_11637(%1280) /* ty=(Tensor[(11, 11, 15), float64], Tensor[(480), bool], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(16, 11, 14), float64]) */;
  %1282 = cast(%var_13729, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1283 = reshape(%1282, newshape=[2, 11, 4]) /* ty=Tensor[(2, 11, 4), float64] */;
  %1284 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1285 = reshape(%1284, newshape=[]) /* ty=bool */;
  %1286 = %1278.0;
  %1287 = %1281.4;
  %1288 = @func_7788() /* ty=Tensor[(3, 11, 2), float32] */;
  %1289 = @func_12230(%1283) /* ty=Tensor[(2, 11, 4), float64] */;
  %1290 = @func_1815(%1285) /* ty=Tensor[(9, 10, 13), float32] */;
  (%1286, %1287, meta[relay.Constant][101] /* ty=Tensor[(50), float32] */, %1288, %1289, %var_13729, %1290, False /* ty=bool */)
}

def @func_14502() -> (Tensor[(3, 11, 2), float32],) {
  %1293 = fn () -> (Tensor[(3, 11, 2), float32],) {
    %1291 = @func_9394() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %1292 = %1291.0;
    (%1292,)
  };
  %1293() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_13742(%var_13740: Tensor[(88), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(50), float32], Tensor[(3, 11, 2), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(9, 10, 13), float32], bool) {
  @func_13739(%var_13740) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(48), bool], Tensor[(50), float32], Tensor[(3, 11, 2), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(9, 10, 13), float32], bool) */
}

def @func_144(%var_142: Tensor[(15), int16]) -> (Tensor[(9, 15, 3), uint16], Tensor[(9, 15, 3), float32], Tensor[(9, 15, 3), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(15, ?), int16]) {
  @func_141(%var_142) /* ty=(Tensor[(9, 15, 3), uint16], Tensor[(9, 15, 3), float32], Tensor[(9, 15, 3), float32], Tensor[(15, ?), int16], Tensor[(15), int16], Tensor[(15, ?), int16]) */
}

def @func_8175(%var_8173: Tensor[(11, 11, 15), float64], %var_8174: Tensor[(780), float32]) -> (Tensor[(11, 11, 15), float32], Tensor[(11, 11, 15), float32], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(9, 15, 3), float32], Tensor[(780), float32]) {
  @func_8171(%var_8173, %var_8174) /* ty=(Tensor[(11, 11, 15), float32], Tensor[(11, 11, 15), float32], Tensor[(6, 3, 1), float64], Tensor[(18), float64], Tensor[(9, 15, 3), float32], Tensor[(780), float32]) */
}

def @func_4523(%var_4520: Tensor[(1, 15, 16), float32], %var_4521: Tensor[(400), float32], %var_4522: float64) -> (Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) {
  @func_4518(%var_4520, %var_4521, %var_4522) /* ty=(Tensor[(?, 15, 16), bool], Tensor[(10, 5, 8), float32], Tensor[(1, 50), float32], Tensor[(400), float32], Tensor[(16, 5, 16), float64], float64, Tensor[(1280), float64]) */
}

def @func_11378(%var_11376: bool) -> (Tensor[(3, 11, 2), float32], Tensor[(9, 10, 13), float32], bool) {
  @func_11375(%var_11376) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(9, 10, 13), float32], bool) */
}

def @func_11812() -> (uint16,) {
  @func_11810() /* ty=(uint16,) */
}

def @func_14325(%var_14323: Tensor[(64, 1), float32], %var_14324: Tensor[(1815), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(4, 16, 1), float32], Tensor[(64, 1), float32], Tensor[(3, 11, 2), float64], Tensor[(48), bool], Tensor[(780), float32], Tensor[(1815), float64], Tensor[(4, 100), bool]) {
  %1327 = fn (%var_14253: Tensor[(64, 1), float32], %var_14286: Tensor[(1815), float64]) -> (Tensor[(3, 11, 2), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(4, 16, 1), float32], Tensor[(64, 1), float32], Tensor[(3, 11, 2), float64], Tensor[(48), bool], Tensor[(780), float32], Tensor[(1815), float64], Tensor[(4, 100), bool]) {
    %1294 = @func_12584() /* ty=(Tensor[(3, 11, 2), float32],) */;
    %1295 = cast(meta[relay.Constant][102] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
    %1296 = reshape(%1295, newshape=[5, 10]) /* ty=Tensor[(5, 10), float32] */;
    %1297 = @func_12039(%1296) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(50), float32], Tensor[(1080), float64], Tensor[(5, 10), float32], Tensor[(48), bool], Tensor[(3, 11, 2), float32], Tensor[(1350), float64]) */;
    %1298 = cast(%var_14253, dtype="float32") /* ty=Tensor[(64, 1), float32] */;
    %1299 = cast(meta[relay.Constant][103] /* ty=Tensor[(4, 100), float32] */, dtype="float32") /* ty=Tensor[(4, 100), float32] */;
    %1300 = reshape(%1298, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), float32] */;
    %1301 = reshape(%1299, newshape=[400]) /* ty=Tensor[(400), float32] */;
    %1302 = @func_8745(%1300, %1301) /* ty=(Tensor[(4, 16, 1), float32], Tensor[(400), float32], Tensor[(240), float32], Tensor[(400), float32], float64) */;
    %1303 = %1297.2;
    %1304 = cast(%1303, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %1305 = cast(meta[relay.Constant][104] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %1306 = reshape(%1304, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
    %1307 = reshape(%1305, newshape=[48]) /* ty=Tensor[(48), bool] */;
    %1308 = @func_9207(%1306, %1307) /* ty=(Tensor[(3, 11, 2), float64], Tensor[(2, 200), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(48), bool]) */;
    %1309 = cast(%var_14286, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %1310 = reshape(%1309, newshape=[1815]) /* ty=Tensor[(1815), float64] */;
    %1311 = @func_11188(%1310) /* ty=(Tensor[(64), int64], Tensor[(6, 3, 1), float64], Tensor[(1815), float64], Tensor[(780), float32]) */;
    %1312 = cast(meta[relay.Constant][103] /* ty=Tensor[(4, 100), float32] */, dtype="float64") /* ty=Tensor[(4, 100), float64] */;
    %1313 = atanh(%1312) /* ty=Tensor[(4, 100), float64] */;
    %1314 = cast(%1313, dtype="float64") /* ty=Tensor[(4, 100), float64] */;
    %1315 = atan(%1314) /* ty=Tensor[(4, 100), float64] */;
    %1316 = cast(%1315, dtype="float64") /* ty=Tensor[(4, 100), float64] */;
    %1317 = erf(%1316) /* ty=Tensor[(4, 100), float64] */;
    %1318 = cast(%1313, dtype="bool") /* ty=Tensor[(4, 100), bool] */;
    %1319 = shape_of(%1317, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1320 = cast(%1317, dtype="bool") /* ty=Tensor[(4, 100), bool] */;
    %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1322 = %1294.0;
    %1323 = %1302.0;
    %1324 = %1308.0;
    %1325 = %1311.3;
    %1326 = less(%1320, %1321) /* ty=Tensor[(4, 100), bool] */;
    (%1322, %1303, meta[relay.Constant][102] /* ty=Tensor[(50), float32] */, %1323, %var_14253, %1324, meta[relay.Constant][104] /* ty=Tensor[(48), bool] */, %1325, %var_14286, %1326)
  };
  %1327(%var_14323, %var_14324) /* ty=(Tensor[(3, 11, 2), float32], Tensor[(1080), float64], Tensor[(50), float32], Tensor[(4, 16, 1), float32], Tensor[(64, 1), float32], Tensor[(3, 11, 2), float64], Tensor[(48), bool], Tensor[(780), float32], Tensor[(1815), float64], Tensor[(4, 100), bool]) */
}

def @func_12700() -> Tensor[(3, 11, 2), float32] {
  %1328 = fn () -> Tensor[(3, 11, 2), float32] {
    @func_7788() /* ty=Tensor[(3, 11, 2), float32] */
  };
  %1328() /* ty=Tensor[(3, 11, 2), float32] */
}

def @func_10199(%var_10197: Tensor[(13, 2, 12), float32]) -> (Tensor[(13, 2, 12), float32],) {
  @func_10196(%var_10197) /* ty=(Tensor[(13, 2, 12), float32],) */
}

def @func_10131() -> (Tensor[(3, 11, 2), float32],) {
  @func_10129() /* ty=(Tensor[(3, 11, 2), float32],) */
}

def @func_7461() -> Tensor[(3, 11, 2), float32] {
  @func_7459() /* ty=Tensor[(3, 11, 2), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen623/build/output.py:3307: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen623/build/output.py", line 3312, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(672) tvmgen_default_fused_mod_kernel0(double* __restrict__ T_mod, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_mod[(((int)threadIdx.x))] = fmod(placeholder[(0)], placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


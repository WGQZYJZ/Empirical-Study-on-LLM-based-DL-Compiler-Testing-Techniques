import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_44 = relay.var("var_44", dtype = "bool", shape = ())#candidate|44|()|var|bool
var_45 = relay.var("var_45", dtype = "bool", shape = (1, 1, 6))#candidate|45|(1, 1, 6)|var|bool
bop_46 = relay.logical_and(var_44.astype('bool'), var_45.astype('bool')) # shape=(1, 1, 6)
output = relay.Tuple([bop_46,])
output2 = relay.Tuple([bop_46,])
func_64 = relay.Function([var_44,var_45,], output)
mod['func_64'] = func_64
mod = relay.transform.InferType()(mod)
mutated_mod['func_64'] = func_64
mutated_mod = relay.transform.InferType()(mutated_mod)
func_64_call = mutated_mod.get_global_var('func_64')
var_66 = relay.var("var_66", dtype = "bool", shape = ())#candidate|66|()|var|bool
var_67 = relay.var("var_67", dtype = "bool", shape = (1, 1, 6))#candidate|67|(1, 1, 6)|var|bool
call_65 = func_64_call(var_66,var_67,)
output = call_65
func_68 = relay.Function([var_66,var_67,], output)
mutated_mod['func_68'] = func_68
mutated_mod = relay.transform.InferType()(mutated_mod)
var_173 = relay.var("var_173", dtype = "int32", shape = (14, 11, 13))#candidate|173|(14, 11, 13)|var|int32
var_174 = relay.var("var_174", dtype = "int32", shape = (14, 11, 13))#candidate|174|(14, 11, 13)|var|int32
bop_175 = relay.minimum(var_173.astype('int32'), relay.reshape(var_174.astype('int32'), relay.shape_of(var_173))) # shape=(14, 11, 13)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
var_196 = relay.var("var_196", dtype = "bool", shape = ())#candidate|196|()|var|bool
const_197 = relay.const([[False,True],[False,True],[False,False]], dtype = "bool")#candidate|197|(3, 2)|const|bool
call_195 = relay.TupleGetItem(func_64_call(relay.reshape(var_196.astype('bool'), []), relay.reshape(const_197.astype('bool'), [1, 1, 6]), ), 0)
call_198 = relay.TupleGetItem(func_68_call(relay.reshape(var_196.astype('bool'), []), relay.reshape(const_197.astype('bool'), [1, 1, 6]), ), 0)
output = relay.Tuple([bop_175,call_195,var_196,const_197,])
output2 = relay.Tuple([bop_175,call_198,var_196,const_197,])
func_206 = relay.Function([var_173,var_174,var_196,], output)
mod['func_206'] = func_206
mod = relay.transform.InferType()(mod)
mutated_mod['func_206'] = func_206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_206_call = mutated_mod.get_global_var('func_206')
var_208 = relay.var("var_208", dtype = "int32", shape = (14, 11, 13))#candidate|208|(14, 11, 13)|var|int32
var_209 = relay.var("var_209", dtype = "int32", shape = (14, 11, 13))#candidate|209|(14, 11, 13)|var|int32
var_210 = relay.var("var_210", dtype = "bool", shape = ())#candidate|210|()|var|bool
call_207 = func_206_call(var_208,var_209,var_210,)
output = call_207
func_211 = relay.Function([var_208,var_209,var_210,], output)
mutated_mod['func_211'] = func_211
mutated_mod = relay.transform.InferType()(mutated_mod)
const_252 = relay.const([[[2.806331,-2.335582,5.461620,-4.539455,5.800148],[-8.851902,1.676083,-7.605973,-3.888269,-3.212814]],[[-7.358477,8.613275,7.917926,-9.009732,-7.905912],[-7.093198,7.176129,-6.981699,-2.352135,2.118930]],[[1.500650,-8.597969,-2.524837,0.999341,-6.428570],[-0.645774,4.585633,-3.196241,4.342158,7.254595]]], dtype = "float64")#candidate|252|(3, 2, 5)|const|float64
var_253 = relay.var("var_253", dtype = "float64", shape = (3, 2, 5))#candidate|253|(3, 2, 5)|var|float64
bop_254 = relay.multiply(const_252.astype('float64'), relay.reshape(var_253.astype('float64'), relay.shape_of(const_252))) # shape=(3, 2, 5)
output = relay.Tuple([bop_254,])
output2 = relay.Tuple([bop_254,])
func_272 = relay.Function([var_253,], output)
mod['func_272'] = func_272
mod = relay.transform.InferType()(mod)
var_273 = relay.var("var_273", dtype = "float64", shape = (3, 2, 5))#candidate|273|(3, 2, 5)|var|float64
output = func_272(var_273)
func_274 = relay.Function([var_273], output)
mutated_mod['func_274'] = func_274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_561 = relay.var("var_561", dtype = "float32", shape = (9, 15, 7))#candidate|561|(9, 15, 7)|var|float32
uop_562 = relay.sqrt(var_561.astype('float32')) # shape=(9, 15, 7)
func_272_call = mod.get_global_var('func_272')
func_274_call = mutated_mod.get_global_var('func_274')
var_565 = relay.var("var_565", dtype = "float64", shape = (30,))#candidate|565|(30,)|var|float64
call_564 = relay.TupleGetItem(func_272_call(relay.reshape(var_565.astype('float64'), [3, 2, 5])), 0)
call_566 = relay.TupleGetItem(func_274_call(relay.reshape(var_565.astype('float64'), [3, 2, 5])), 0)
output = relay.Tuple([uop_562,call_564,var_565,])
output2 = relay.Tuple([uop_562,call_566,var_565,])
func_567 = relay.Function([var_561,var_565,], output)
mod['func_567'] = func_567
mod = relay.transform.InferType()(mod)
var_568 = relay.var("var_568", dtype = "float32", shape = (9, 15, 7))#candidate|568|(9, 15, 7)|var|float32
var_569 = relay.var("var_569", dtype = "float64", shape = (30,))#candidate|569|(30,)|var|float64
output = func_567(var_568,var_569,)
func_570 = relay.Function([var_568,var_569,], output)
mutated_mod['func_570'] = func_570
mutated_mod = relay.transform.InferType()(mutated_mod)
const_639 = relay.const([[[-4.299877,4.170497,-5.181394,-9.050870,6.176658,9.137568,6.548419,-2.964753,-6.259057],[3.036042,-1.764372,9.984732,1.618756,-8.509020,4.581130,-5.391672,-4.301007,9.200156],[6.021210,-9.740457,1.382239,8.019306,-3.196150,-7.803580,-4.485973,-0.916694,7.920567],[-8.616371,0.999111,7.748853,5.543822,-4.594122,5.079070,-3.823525,-8.707057,-8.699491],[7.757522,-5.565781,8.511990,-6.955384,1.286897,-5.856474,-2.611212,8.118919,-1.833539],[-0.153410,-0.750738,1.963827,-7.423986,-6.195540,-2.615775,-5.035318,9.592871,9.002060]],[[2.709764,-1.205286,-1.070526,5.471599,-1.922437,4.711752,8.820813,-8.469153,-9.794896],[-0.231815,7.509901,7.650282,5.506093,4.741719,0.108927,3.092472,-2.213630,5.119343],[3.827077,8.875449,4.908127,-7.918749,5.897783,-7.488946,-5.939338,-2.980921,7.430183],[1.715679,-8.133557,4.369995,9.617527,-3.396180,3.896300,3.713640,2.932742,-1.417090],[0.002847,2.856358,3.928641,-1.880426,-2.232651,5.359297,6.765681,-9.273537,-1.364732],[5.850726,9.942885,0.958407,0.100190,3.517793,-2.782430,8.272331,-9.308772,-5.760200]],[[-7.419635,6.020519,8.763211,-0.272074,8.312822,-5.129193,3.438785,5.984413,-2.944721],[0.502636,5.368562,-1.109693,-0.866448,2.583551,-9.064417,-8.880220,9.030615,-0.572063],[-3.865772,9.795834,4.979786,3.472784,4.024813,9.736439,-5.246802,7.983462,6.650215],[3.360665,2.036814,-6.991332,-1.191413,-5.781157,-0.678319,-4.832019,5.442492,-5.393827],[-8.373031,3.453953,2.789287,5.853352,9.690574,7.988616,-8.143680,-6.698120,-5.910271],[1.376853,5.928829,-8.768571,-1.489184,7.573969,-3.449268,8.219091,7.646500,-9.198644]],[[3.389034,-1.692079,-3.821281,-4.675547,-5.222906,-9.969356,8.356220,8.985057,4.300339],[8.632253,7.984752,9.712956,-6.621944,-8.713213,-6.543419,-9.347492,-7.826481,-4.405277],[0.455708,1.645158,-0.120631,-0.275074,7.254643,-0.770381,0.253637,6.272177,-7.054507],[-5.599432,6.740296,5.097671,9.672446,0.586382,-9.843462,-0.486822,-1.794274,-0.666764],[3.238412,1.762163,-9.546541,2.052890,1.750908,-9.143183,6.739448,-9.856445,0.029934],[-9.391374,-6.271036,-6.042965,-3.136634,-6.926569,-5.101939,7.531479,1.083403,6.944078]],[[-0.017936,9.565398,9.682612,-3.134375,-5.501176,7.001573,-4.352460,-4.029065,0.067310],[2.567407,5.899902,8.998274,-4.580096,0.369648,0.845410,-8.105129,8.308546,7.904176],[3.494404,6.921146,-7.651674,-6.263778,6.795744,6.278824,6.952503,-7.496052,-1.470034],[9.817199,-0.560924,-2.674518,9.227681,3.962647,-4.584068,9.957012,-8.712593,2.319935],[7.810545,7.868559,-4.274929,6.100974,-0.135088,-0.949867,0.145669,3.812709,-8.814854],[4.431982,-9.209810,-1.573241,6.402604,0.983308,1.279442,2.747207,-6.763163,1.810465]],[[3.609669,-6.695548,-6.993766,9.555999,-8.383269,6.731868,-3.347997,-3.334099,9.596947],[-8.002865,-2.793999,2.399048,-1.550696,-4.155149,7.447786,-0.050428,4.860032,-5.572703],[1.716873,9.848895,9.117542,7.966253,-4.533983,-2.849179,-7.610956,-0.628650,-1.484634],[-5.028078,-4.661351,4.302503,-2.536398,1.992050,0.495177,6.820603,9.174375,-8.730916],[1.252751,-5.760957,-5.263519,-8.355891,1.057784,8.382469,-0.252205,2.841626,7.426791],[-9.839952,-4.377654,4.046786,-2.917160,-3.461603,0.446904,-7.002704,-8.651562,-1.495522]],[[5.860349,-6.143510,-6.848615,1.742792,4.643888,9.257017,8.337853,8.830421,4.033743],[3.582815,7.761960,4.123980,2.490457,-2.818870,4.590316,-5.858991,5.848766,6.888356],[-0.165397,-7.993509,9.318971,-2.417092,3.805444,-7.397234,-2.560314,-6.510394,-3.476590],[5.912960,4.921320,7.812953,-7.198283,-6.362281,-9.896883,9.073201,-1.556312,2.686733],[-8.563568,-2.523476,3.587315,-0.484738,8.227016,6.877123,2.668953,3.151889,-8.462054],[7.049546,-8.871894,-4.415821,3.133345,8.844265,8.697422,-4.733684,8.233495,-6.938847]],[[4.297514,-5.290435,5.238067,-5.188523,-3.508142,-7.160418,6.231956,-0.666746,6.159348],[-2.207548,-8.925472,-5.395863,-5.803915,5.105016,9.072129,-6.029052,7.864700,0.201219],[6.193356,6.196423,4.239025,-7.527762,3.601101,-2.893727,-7.880476,9.880861,4.946984],[-3.426917,-2.263730,2.952770,7.049763,1.866407,-1.164051,-6.515394,-5.862883,-3.204456],[6.522101,-1.738435,8.539893,2.603200,-1.709343,-8.443287,-3.595794,0.155816,9.430667],[-3.035373,8.581971,6.466596,7.916696,1.740462,9.544559,1.623153,-0.443183,5.987861]],[[2.049024,0.465881,5.327929,6.080259,3.767289,4.327163,8.756819,1.263437,6.010754],[-0.466221,-3.175959,-0.869477,2.577284,-4.234642,-0.705639,4.967182,-7.332571,8.566228],[8.747502,0.081472,5.780510,6.735679,5.045612,8.474363,7.267169,6.603782,7.136758],[4.756466,8.226057,5.823329,9.351548,5.423023,0.977561,4.688235,3.584143,7.645078],[9.416924,7.080114,-8.601164,4.449963,9.431367,0.633423,3.044011,0.193398,3.506430],[-1.586727,-8.598068,-4.831047,-8.035605,-1.029389,5.450579,-9.302538,-0.189476,6.367568]],[[6.663307,-2.260989,3.742154,0.948295,-6.874167,6.657108,8.400251,-7.540713,-0.698292],[-3.545765,-6.865617,-2.124531,-3.032364,9.197440,9.480686,1.040778,6.056994,7.257048],[-1.683742,6.204794,4.980249,-8.769561,-8.071807,-9.434169,2.155671,1.104494,6.550747],[9.410992,5.352532,-6.562138,6.169698,6.344720,8.426332,7.738417,9.790246,-9.424551],[-9.288843,-0.516726,3.774086,1.046016,5.378236,9.421397,-0.752707,-4.771639,1.955320],[-4.637389,2.046445,1.805425,-8.842426,-8.052212,-8.218888,0.246662,7.849002,8.407650]],[[-2.022861,6.437604,-8.659185,9.257295,-0.393654,-6.876305,-8.368813,-8.911909,-1.565773],[4.775847,4.303842,-1.098227,-1.253363,-3.849573,3.006816,7.337984,-0.422747,2.236537],[9.658769,4.216241,2.618228,6.077550,3.252789,1.439729,0.912949,-6.670311,-7.995042],[-3.872608,-9.888698,-2.746143,8.512456,-6.781872,-4.648950,-9.814590,-5.853403,1.821124],[3.824474,2.416453,3.680588,-7.389173,0.970482,0.099397,8.623900,3.609237,-5.977693],[-6.362286,5.878514,9.314536,-0.718855,0.511675,0.007686,-6.178539,6.687452,9.450237]],[[-8.474468,6.701293,6.440527,1.467584,4.869730,-3.151521,-2.187491,8.659269,8.588412],[-4.619467,-2.137958,-2.288160,-9.057722,-7.941633,1.041597,-4.681993,0.897595,4.502096],[-8.711310,0.706552,5.376956,9.010251,-4.644240,4.122037,0.668167,-2.995021,0.516826],[-8.872173,7.394870,2.801433,-5.954943,2.905708,-9.517833,-1.794007,2.550733,-9.668566],[-7.228424,5.472744,-8.420823,-7.210902,-4.517624,0.581753,-2.083617,6.929802,-0.259750],[-4.563306,6.212857,-3.850417,-8.898381,-6.328785,-4.072718,9.790600,7.456974,-4.634255]],[[3.142586,1.391102,4.902649,-8.499766,-9.227849,5.744081,-6.244595,-6.317351,4.650231],[3.920022,6.316195,-3.833340,-9.978735,-5.330317,-7.933397,8.014929,-5.463691,0.066320],[2.843700,2.095034,2.726517,-3.649724,-4.098016,8.140652,8.099265,0.105298,3.942131],[2.201258,8.414690,8.492090,-1.236696,-2.472297,9.522019,-9.604645,5.107122,3.788844],[-2.750175,-9.311604,-1.899817,6.644593,3.433438,-1.965699,-2.800246,-1.429355,-7.222798],[9.712021,0.606798,0.919791,3.040624,2.341450,5.436842,0.410493,6.674110,-8.705168]],[[-4.954740,5.154162,-6.371200,-2.533793,6.343725,3.438378,-0.623886,-0.725760,-2.234547],[-3.393526,8.567503,-1.649744,-7.006155,4.872788,5.729132,0.178881,0.671157,9.517471],[0.242095,-8.660643,3.303281,-4.203753,-1.110299,8.370361,-3.691181,-6.200149,4.772561],[-6.383636,-9.904119,3.705998,4.241034,0.174487,-6.733615,-7.589596,-0.671834,-3.616411],[-3.948490,7.967126,-2.044472,3.194896,4.720488,-1.597904,-3.698369,-5.141995,-0.608022],[7.560959,6.252523,-9.052525,0.784296,3.506049,9.860317,6.556548,-4.660217,-2.858596]],[[6.431793,0.715384,9.816370,-6.341287,-8.257512,2.133117,-6.378494,-1.758656,1.068132],[5.922160,0.916656,2.868743,5.850086,6.131235,0.931602,-4.771279,8.190322,8.929659],[3.379655,5.352223,4.219020,4.885402,6.406232,0.761155,-9.052052,7.956795,0.962133],[1.448464,-3.678079,-2.848210,-0.737306,-6.321926,-9.128158,3.026559,7.762326,5.546539],[8.497431,7.266376,-9.160774,2.335801,5.552020,-3.564384,8.656680,3.597618,-4.871310],[-2.297587,-5.328549,8.686871,-0.942050,0.067453,5.381919,-9.867550,4.127052,1.135336]]], dtype = "float32")#candidate|639|(15, 6, 9)|const|float32
uop_640 = relay.acosh(const_639.astype('float32')) # shape=(15, 6, 9)
func_567_call = mod.get_global_var('func_567')
func_570_call = mutated_mod.get_global_var('func_570')
var_648 = relay.var("var_648", dtype = "float32", shape = (945,))#candidate|648|(945,)|var|float32
var_649 = relay.var("var_649", dtype = "float64", shape = (1, 30))#candidate|649|(1, 30)|var|float64
call_647 = relay.TupleGetItem(func_567_call(relay.reshape(var_648.astype('float32'), [9, 15, 7]), relay.reshape(var_649.astype('float64'), [30,]), ), 2)
call_650 = relay.TupleGetItem(func_570_call(relay.reshape(var_648.astype('float32'), [9, 15, 7]), relay.reshape(var_649.astype('float64'), [30,]), ), 2)
output = relay.Tuple([uop_640,call_647,var_648,var_649,])
output2 = relay.Tuple([uop_640,call_650,var_648,var_649,])
func_651 = relay.Function([var_648,var_649,], output)
mod['func_651'] = func_651
mod = relay.transform.InferType()(mod)
var_652 = relay.var("var_652", dtype = "float32", shape = (945,))#candidate|652|(945,)|var|float32
var_653 = relay.var("var_653", dtype = "float64", shape = (1, 30))#candidate|653|(1, 30)|var|float64
output = func_651(var_652,var_653,)
func_654 = relay.Function([var_652,var_653,], output)
mutated_mod['func_654'] = func_654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_801 = relay.var("var_801", dtype = "uint64", shape = ())#candidate|801|()|var|uint64
var_802 = relay.var("var_802", dtype = "uint64", shape = (16, 9, 13))#candidate|802|(16, 9, 13)|var|uint64
bop_803 = relay.left_shift(var_801.astype('uint64'), var_802.astype('uint64')) # shape=(16, 9, 13)
output = relay.Tuple([bop_803,])
output2 = relay.Tuple([bop_803,])
func_810 = relay.Function([var_801,var_802,], output)
mod['func_810'] = func_810
mod = relay.transform.InferType()(mod)
mutated_mod['func_810'] = func_810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mutated_mod.get_global_var('func_810')
var_812 = relay.var("var_812", dtype = "uint64", shape = ())#candidate|812|()|var|uint64
var_813 = relay.var("var_813", dtype = "uint64", shape = (16, 9, 13))#candidate|813|(16, 9, 13)|var|uint64
call_811 = func_810_call(var_812,var_813,)
output = call_811
func_814 = relay.Function([var_812,var_813,], output)
mutated_mod['func_814'] = func_814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1008 = relay.var("var_1008", dtype = "int16", shape = ())#candidate|1008|()|var|int16
var_1009 = relay.var("var_1009", dtype = "int16", shape = (1, 6, 15))#candidate|1009|(1, 6, 15)|var|int16
bop_1010 = relay.left_shift(var_1008.astype('int16'), var_1009.astype('int16')) # shape=(1, 6, 15)
func_810_call = mod.get_global_var('func_810')
func_814_call = mutated_mod.get_global_var('func_814')
const_1041 = relay.const([[5,-3,2,-5,-7,10,9,-1,8,-8,-6,-7,-4,-7,-6,7,5,-8,9,-9,-4,-2,-9,-3,-2,2,-3,-2,2,3,6,-1,10,-9,-3,-7,-9,9,-1,9,-3,-1,9,-5,-3,-9,8,10,-9,7,9,-10,3,8,-2,-9,-7,-9,-6,-9,3,-7,-8,-1,10,-3,-3,7,4,2,-2,9,1,-6,-4,-7,-5,-10,-5,-1,8,-4,-9,-7,-6,-7,9,-8,5,9,-10,-6,5,7,-6,5,-4,-5,7,4,-10,-4,8,-9,-9,-10,-9,4,-4,-3,1,4,-4,8,10,9,-4,9,6,-3,-10,-3,-1,2,10,-8,1,8,-1,-1,10,-1,2,8,-9,2,-6,-8,-2,6,4,-4,-4,-4,-1,-7,4,7,7,-5,-6,8,2,3,-4,7,-1,-7,-3,3,6,5,8,-10,-9,3,-2,9,5,-7,1,9,4,10,-6,3,10,6,2,-3,8,6,7,3,9,4,-5,3,-10,-9,5,10,10,3,1,4,-6,-1,-6,-6,6,7,5,-3,3,3,3,-5,-9,-6,-6,2,-1,-6,7,3,4,-5,10,-3,-9,10,10,-5,-4,1,-3,4,6,-2,2,6,-7,-4,-8,-9,3,-9,7,-4,-6,4,8,3,10,6,-5,9,-3,9,9,-10,-1,5,-2,-10,-4,6,-4,7,-6,-7,5,-3,6,2,1,-8,-9,-2,-2,9,-9,-9,4,9,10,1,2,4,5,3,-7,2,-4,9,9,1,1,-2,-7,-6,-7,-2,10,-6,3,-5,-2,8,-9,1,3,5,3,10,10,-7,-3,-5,5,10,-3,-8,-9,-9,3,8,4,-9,-3,-7,5,10,-4,-10,8,-9,-4,4,-3,-2,4,2,5,7,2,-1,-1,-6,-7,4,-8,-6,1,-4,6,-1,-7,-10,-6,-10,-2,-5,3,-8,10,6,6,-10,6,1,9,-4,-7,-9,-3,1,-8,-8,10,1,-7,-7,3,-10,-1,-10,-5,9,1,6,4,9,6,5,5,-7,5,7,-3,-8,8,-7,4,-6,3,-9,1,-1,7,-6,-3,7,9,7,-1,-8,-5,-5,-2,-4,-4,4,-10,4,-10,-2,-3,3,2,-6,7,5,9,-10,10,-8,8,-10,4,8,4,8,-8,9,-1,5,7,9,-8,8,5,-10,7,-1,-4,6,-8,5,-7,6,-7,7,8,1,7,4,7,-4,6,5,6,-9,-10,-10,9,7,6,-10,-10,-2,2,10,2,4,-9,9,4,10,4,-1,8,7,-1,-10,-9,9,-8,3,-3,9,9,7,-8,7,7,-5,7,-8,-10,-9,-1,-2,-7,1,3,-2,-10,6,-8,-9,3,9,-5,-6,7,4,6,-1,1,5,-3,-4,7,-10,5,9,5,-7,7,5,-3,-4,-5,3,8,-7,6,4,5,6,5,-7,-3,1,10,-6,7,1,8,5,6,6,7,-5,8,-2,7,5,6,4,2,-10,-1,-10,-6,4,10,4,-4,10,10,-4,3,-9,-5,-6,2,-7,-6,-1,-3,6,6,9,-9,-9,10,6,-3,2,-7,-7,4,-3,3,5,-8,7,1,4,-6,-8,8,-10,8,-1,2,-5,3,7,9,-2,-2,-3,-7,-4,-9,9,-4,-8,-3,-9,-8,1,2,9,-9,10,-2,-8,-1,-1,-3,-8,3,3,-7,-1,7,-10,10,-2,-10,4,-7,-10,5,9,-4,-6,4,-3,2,-10,7,-9,7,10,6,-9,6,-1,3,-10,-10,-5,8,7,-1,-8,-5,7,-10,1,-9,-9,2,-8,2,3,6,8,6,-3,-2,-7,-10,9,1,4,-2,7,-2,2,-6,-8,5,-6,1,1,-2,10,-3,2,1,-4,-8,9,-9,-8,8,-7,3,-3,3,-8,2,-7,-5,1,-4,8,-7,3,-10,10,8,10,-9,6,8,-8,-9,7,1,-1,2,-6,10,4,-10,-7,-10,-10,9,4,9,8,-5,4,-3,-3,-6,-6,8,-6,6,9,-8,8,4,-7,-2,-10,1,4,-1,-1,-6,5,8,-2,-5,-10,-9,-2,-10,5,3,-10,-1,8,-3,-1,7,3,-7,10,8,-5,-8,-2,-6,-10,-2,3,7,5,2,9,2,-3,-10,9,2,-7,-2,1,-5,7,3,3,1,2,-4,3,4,4,-8,4,-8,-2,-9,8,-6,-3,5,1,-4,1,3,-5,-7,-2,4,7,-8,-4,-6,3,7,10,-4,8,-3,7,1,4,-10,7,4,-8,4,1,4,1,2,3,-4,3,10,-5,1,-2,-4,7,-2,-10,4,-10,5,-10,-5,-4,-4,10,6,-6,3,-8,-9,-6,-7,-1,10,-1,-3,4,4,10,-5,-1,-6,-8,6,-7,-10,-6,-9,-9,-8,-6,3,-8,-7,4,-9,-3,-1,3,4,2,2,10,-5,-2,3,-4,7,-3,2,-6,-2,7,7,-1,-9,6,1,5,-9,8,5,8],[6,4,-1,-1,9,-6,-8,-1,8,-8,-5,4,8,-8,6,4,-9,9,1,5,-8,8,6,2,-9,2,1,-10,7,-3,5,-6,8,-6,-7,-10,-10,2,-8,-9,-5,2,6,-9,1,-8,1,-1,-9,-7,8,1,6,5,8,-2,6,10,-8,-4,1,3,6,-1,1,-1,-7,-8,-6,8,8,8,6,5,-5,10,3,-7,7,3,-8,-8,9,-10,8,10,10,9,3,9,-3,3,-4,4,-8,1,3,3,-5,6,10,1,-3,-5,4,-6,3,-4,2,8,7,8,-9,10,3,-9,-4,-3,3,-3,2,-6,9,-9,8,-10,7,4,10,-1,-4,8,-3,2,10,4,7,4,10,8,3,4,8,7,6,3,-10,-7,-1,-8,-6,-1,-2,10,2,-1,-8,6,-7,-3,5,-4,-6,-8,1,10,-10,-2,-9,6,2,6,-4,-5,-9,7,-6,-7,-1,-1,-2,-2,3,-5,-8,-2,8,-10,4,7,-4,5,5,-4,8,-1,-8,5,10,-2,10,-1,-3,3,6,1,4,10,10,6,-1,10,-1,-9,-4,-9,6,-5,1,-8,-9,7,-7,-3,-2,6,-7,1,3,8,2,2,-7,10,-6,-5,9,8,-8,2,-1,5,5,3,7,-5,-9,10,-5,-4,-9,8,8,4,9,9,-2,-6,-10,5,10,-8,-9,5,-9,7,-5,-7,-10,-2,-7,-7,-5,8,-3,3,-4,-2,-1,9,5,1,-2,6,1,1,9,7,-2,-9,7,-8,-7,6,-7,-10,-2,4,-1,-5,8,-2,-5,-3,5,4,6,-5,-2,10,5,-6,3,10,-10,-10,-1,5,3,-5,-10,10,-10,-8,5,6,8,-4,9,8,-9,8,-1,7,3,-10,-10,-10,5,-7,-5,-8,-2,-5,8,-2,10,-8,7,2,-7,4,3,10,-1,8,-9,-9,3,-3,7,-10,7,7,3,-3,-6,-10,10,-8,-6,-5,3,7,7,-6,5,-1,-4,-8,2,5,-8,-6,6,7,10,-8,-5,-10,-5,9,4,4,-10,3,4,1,-5,-10,3,-3,-9,-8,6,-9,4,-2,-7,6,-1,-3,-9,8,-1,6,-6,-7,-2,3,2,-10,1,-7,-10,-8,-2,-9,5,-8,6,2,-5,-10,5,6,7,-6,-9,7,-5,-4,5,-9,-1,-9,-3,10,2,-6,3,-4,1,9,10,1,10,-2,7,7,10,-6,7,-4,7,-5,3,1,7,4,-5,-3,-10,-9,-8,-6,2,-5,7,-9,-9,-5,4,-6,7,8,-5,-6,-8,2,1,8,8,-4,1,9,8,2,-9,2,-8,-7,-3,-6,10,-1,-5,-6,-2,-10,-6,3,-3,5,-5,10,-9,-6,4,7,1,-6,-7,-1,-5,-2,-2,-6,-1,-8,7,-10,9,-1,8,-4,8,-5,-4,-3,-7,-1,-1,-3,7,-9,-1,3,4,2,3,-1,6,5,-10,9,5,-6,7,9,3,10,-6,6,10,2,-4,6,8,-1,2,-6,2,-1,3,4,-7,-4,1,5,-7,-5,-1,-2,2,9,-5,-1,9,7,2,-2,8,-6,-5,10,-9,5,-8,8,4,6,-4,-6,8,7,-9,-3,-4,-7,9,2,-2,7,-8,2,4,-9,4,1,3,6,-4,8,-7,6,-2,-1,7,-6,4,-5,5,-5,3,3,-2,7,-5,6,10,5,2,6,-5,-4,-10,5,5,6,-6,4,-5,7,-4,1,9,-5,3,10,-6,7,3,3,4,6,6,1,8,3,-5,5,-10,4,-4,5,9,5,-6,10,8,3,5,-7,-3,5,5,-9,2,2,10,-5,-9,-10,1,-4,-7,6,10,5,4,-1,-9,3,6,9,-3,4,7,7,-6,-8,8,7,7,-3,-1,9,-5,-3,-10,-6,9,4,-3,-5,-2,6,-6,9,-6,-6,7,8,10,2,6,-4,5,10,-9,-9,-7,-2,-7,-8,-5,9,-2,1,-2,3,-10,-4,4,-5,8,-7,-8,-2,2,-7,4,7,4,-9,5,-4,-8,-2,-2,-7,-10,9,-3,-2,-1,-2,-4,3,10,-2,-2,10,5,-2,10,9,-6,-9,-7,6,7,-3,8,8,-7,-5,-7,1,-8,6,2,7,4,-7,-6,-9,10,5,-9,9,3,7,10,1,10,-5,5,-2,-9,-9,3,-1,1,4,9,8,-7,4,-4,5,-4,-8,-6,7,-1,-2,4,7,7,5,-5,2,9,-1,-2,-7,-9,-3,-7,-10,-7,-1,4,-4,1,1,-4,10,-8,6,-5,6,10,-9,-2,-5,9,-9,6,-6,-5,-5,-9,-2,-3,-8,-5,-2,-6,4,-10,-6,-5,-4,8,-9,8,-10,6,5,-2,8,9,-4,3,-4,5,3,-5,-2,-8,6,5,-2,-9,10,4,-1,-10,-10,3,7,4,-9,-9,-3,-3,3,-6,9,-4,9,9,-2,4,-3,8,6,-9,2,-5,-5,4,6]], dtype = "uint64")#candidate|1041|(2, 936)|const|uint64
call_1040 = relay.TupleGetItem(func_810_call(relay.reshape(var_1008.astype('uint64'), []), relay.reshape(const_1041.astype('uint64'), [16, 9, 13]), ), 0)
call_1042 = relay.TupleGetItem(func_814_call(relay.reshape(var_1008.astype('uint64'), []), relay.reshape(const_1041.astype('uint64'), [16, 9, 13]), ), 0)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
const_1064 = relay.const([True,False,True,False,True,False], dtype = "bool")#candidate|1064|(6,)|const|bool
call_1063 = relay.TupleGetItem(func_64_call(relay.reshape(var_1008.astype('bool'), []), relay.reshape(const_1064.astype('bool'), [1, 1, 6]), ), 0)
call_1065 = relay.TupleGetItem(func_68_call(relay.reshape(var_1008.astype('bool'), []), relay.reshape(const_1064.astype('bool'), [1, 1, 6]), ), 0)
output = relay.Tuple([bop_1010,call_1040,const_1041,call_1063,const_1064,])
output2 = relay.Tuple([bop_1010,call_1042,const_1041,call_1065,const_1064,])
func_1072 = relay.Function([var_1008,var_1009,], output)
mod['func_1072'] = func_1072
mod = relay.transform.InferType()(mod)
var_1073 = relay.var("var_1073", dtype = "int16", shape = ())#candidate|1073|()|var|int16
var_1074 = relay.var("var_1074", dtype = "int16", shape = (1, 6, 15))#candidate|1074|(1, 6, 15)|var|int16
output = func_1072(var_1073,var_1074,)
func_1075 = relay.Function([var_1073,var_1074,], output)
mutated_mod['func_1075'] = func_1075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1366 = relay.var("var_1366", dtype = "int64", shape = (1, 16, 3))#candidate|1366|(1, 16, 3)|var|int64
var_1367 = relay.var("var_1367", dtype = "int64", shape = (1, 16, 3))#candidate|1367|(1, 16, 3)|var|int64
bop_1368 = relay.maximum(var_1366.astype('int64'), relay.reshape(var_1367.astype('int64'), relay.shape_of(var_1366))) # shape=(1, 16, 3)
bop_1375 = relay.not_equal(var_1367.astype('bool'), relay.reshape(var_1366.astype('bool'), relay.shape_of(var_1367))) # shape=(1, 16, 3)
func_810_call = mod.get_global_var('func_810')
func_814_call = mutated_mod.get_global_var('func_814')
var_1388 = relay.var("var_1388", dtype = "uint64", shape = ())#candidate|1388|()|var|uint64
var_1389 = relay.var("var_1389", dtype = "uint64", shape = (1872,))#candidate|1389|(1872,)|var|uint64
call_1387 = relay.TupleGetItem(func_810_call(relay.reshape(var_1388.astype('uint64'), []), relay.reshape(var_1389.astype('uint64'), [16, 9, 13]), ), 0)
call_1390 = relay.TupleGetItem(func_814_call(relay.reshape(var_1388.astype('uint64'), []), relay.reshape(var_1389.astype('uint64'), [16, 9, 13]), ), 0)
func_272_call = mod.get_global_var('func_272')
func_274_call = mutated_mod.get_global_var('func_274')
const_1392 = relay.const([-7.632771,-2.671119,7.879941,6.717174,-7.891108,9.905460,-5.904837,6.623816,-9.423038,-2.103831,-3.672152,-3.645630,-1.431920,9.055875,8.434369,-8.685345,-9.255045,9.140595,5.597272,7.184933,-2.463659,-1.327496,-9.685358,-1.023419,4.153972,-8.018624,0.243257,8.162164,-2.991497,3.405195], dtype = "float64")#candidate|1392|(30,)|const|float64
call_1391 = relay.TupleGetItem(func_272_call(relay.reshape(const_1392.astype('float64'), [3, 2, 5])), 0)
call_1393 = relay.TupleGetItem(func_274_call(relay.reshape(const_1392.astype('float64'), [3, 2, 5])), 0)
uop_1397 = relay.acos(var_1367.astype('float32')) # shape=(1, 16, 3)
uop_1403 = relay.exp(uop_1397.astype('float64')) # shape=(1, 16, 3)
bop_1405 = relay.less_equal(uop_1403.astype('bool'), relay.reshape(uop_1397.astype('bool'), relay.shape_of(uop_1403))) # shape=(1, 16, 3)
func_206_call = mod.get_global_var('func_206')
func_211_call = mutated_mod.get_global_var('func_211')
var_1413 = relay.var("var_1413", dtype = "int32", shape = (143, 14))#candidate|1413|(143, 14)|var|int32
call_1412 = relay.TupleGetItem(func_206_call(relay.reshape(var_1413.astype('int32'), [14, 11, 13]), relay.reshape(var_1413.astype('int32'), [14, 11, 13]), relay.reshape(var_1388.astype('bool'), []), ), 0)
call_1414 = relay.TupleGetItem(func_211_call(relay.reshape(var_1413.astype('int32'), [14, 11, 13]), relay.reshape(var_1413.astype('int32'), [14, 11, 13]), relay.reshape(var_1388.astype('bool'), []), ), 0)
output = relay.Tuple([bop_1368,bop_1375,call_1387,var_1388,var_1389,call_1391,const_1392,bop_1405,call_1412,var_1413,])
output2 = relay.Tuple([bop_1368,bop_1375,call_1390,var_1388,var_1389,call_1393,const_1392,bop_1405,call_1414,var_1413,])
func_1417 = relay.Function([var_1366,var_1367,var_1388,var_1389,var_1413,], output)
mod['func_1417'] = func_1417
mod = relay.transform.InferType()(mod)
var_1418 = relay.var("var_1418", dtype = "int64", shape = (1, 16, 3))#candidate|1418|(1, 16, 3)|var|int64
var_1419 = relay.var("var_1419", dtype = "int64", shape = (1, 16, 3))#candidate|1419|(1, 16, 3)|var|int64
var_1420 = relay.var("var_1420", dtype = "uint64", shape = ())#candidate|1420|()|var|uint64
var_1421 = relay.var("var_1421", dtype = "uint64", shape = (1872,))#candidate|1421|(1872,)|var|uint64
var_1422 = relay.var("var_1422", dtype = "int32", shape = (143, 14))#candidate|1422|(143, 14)|var|int32
output = func_1417(var_1418,var_1419,var_1420,var_1421,var_1422,)
func_1423 = relay.Function([var_1418,var_1419,var_1420,var_1421,var_1422,], output)
mutated_mod['func_1423'] = func_1423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2381 = relay.var("var_2381", dtype = "int64", shape = (11, 6, 9))#candidate|2381|(11, 6, 9)|var|int64
var_2382 = relay.var("var_2382", dtype = "int64", shape = (11, 6, 9))#candidate|2382|(11, 6, 9)|var|int64
bop_2383 = relay.bitwise_xor(var_2381.astype('int64'), relay.reshape(var_2382.astype('int64'), relay.shape_of(var_2381))) # shape=(11, 6, 9)
output = relay.Tuple([bop_2383,])
output2 = relay.Tuple([bop_2383,])
func_2386 = relay.Function([var_2381,var_2382,], output)
mod['func_2386'] = func_2386
mod = relay.transform.InferType()(mod)
var_2387 = relay.var("var_2387", dtype = "int64", shape = (11, 6, 9))#candidate|2387|(11, 6, 9)|var|int64
var_2388 = relay.var("var_2388", dtype = "int64", shape = (11, 6, 9))#candidate|2388|(11, 6, 9)|var|int64
output = func_2386(var_2387,var_2388,)
func_2389 = relay.Function([var_2387,var_2388,], output)
mutated_mod['func_2389'] = func_2389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2394 = relay.var("var_2394", dtype = "float32", shape = (2, 1, 15))#candidate|2394|(2, 1, 15)|var|float32
const_2395 = relay.const([[[9.674672,-1.319307,1.292993,3.259083,9.754615,-8.892676,2.505113,-7.543102,-8.819875,2.921386,-2.801755,2.316509,-7.122471,4.400073,-3.194271],[-6.740361,-5.849605,8.418331,9.861420,2.949264,8.936603,-8.351124,-6.543371,-7.368041,7.791897,9.465322,1.924206,-5.655112,-3.945455,6.334348],[-3.768081,6.475621,-8.040454,-6.994785,9.899012,-4.155524,4.300676,0.977359,3.850682,6.490644,-3.734749,1.667314,0.053847,8.230027,8.458925],[-0.696755,-8.151752,-5.312745,-5.509780,4.548752,-6.649215,5.932395,-9.127268,-6.230645,-0.239443,4.652392,-9.556553,-4.446713,-3.196097,-8.728886],[-2.476952,2.179642,-3.391896,-3.789651,-6.342355,-3.515764,8.759653,-8.052232,-4.050180,-0.149921,-4.576222,6.924018,-6.919560,-0.155006,4.764301],[-6.325148,-6.834252,5.281658,-1.402087,7.318249,5.901939,9.282036,3.249080,-9.247848,-6.248294,7.014661,-7.109568,-0.303425,-4.193548,0.091687],[2.493400,-4.547102,1.453469,-0.878137,8.853508,-0.559318,4.722914,2.664224,-4.927410,-2.705201,-9.843994,8.394267,1.690500,7.148535,5.078514],[3.458022,4.026191,-7.156988,5.641115,-7.675589,-6.693581,1.261222,-2.322505,3.702915,3.367673,-4.548042,1.027304,-0.988660,5.849698,-1.133287],[8.169046,3.102146,8.345092,1.011774,-6.243631,1.282520,6.462418,-2.748970,-8.734793,-4.028208,4.421743,6.355585,-7.068454,3.970997,-0.455517],[-1.706444,-5.986347,-7.519268,5.649490,-7.975732,3.721676,3.069829,7.279924,-0.520667,1.153947,4.414607,6.555777,1.834567,-5.895299,4.932713],[-5.915871,-9.859615,1.604128,9.977584,9.171723,-5.382284,2.739387,9.849963,4.649005,-3.598360,-9.991599,-1.617974,3.135502,6.302405,-5.530654],[-3.299879,6.719922,4.989299,3.030691,3.276352,7.193319,4.734682,7.872816,9.868691,-6.885263,7.929712,1.286108,9.131731,6.315599,-2.706392],[0.992557,6.266670,-8.455009,-4.336639,9.348820,-0.574783,6.658699,6.960477,-6.242709,-0.163213,7.854212,3.181507,4.449551,3.023686,3.446010],[-0.183485,-8.868524,2.784738,0.532509,-3.384719,-4.424679,4.500548,-9.990010,-7.908532,7.129617,2.732982,2.796413,1.546725,2.102160,7.738018],[-8.021686,-6.658800,1.577737,7.228252,2.359883,9.531578,-9.639591,8.905744,-8.957893,9.348854,-9.470661,-6.184382,8.936216,-8.902392,-4.379631]],[[-2.590756,-2.087191,0.070140,-9.033381,-7.419907,-3.778497,0.164734,-0.166048,0.994111,9.613091,-1.788868,6.484372,1.842625,-3.808395,-0.935847],[8.596921,5.803106,1.543891,-5.776627,-7.798209,1.700038,-4.523475,7.972646,8.282888,8.418425,-4.554333,2.439583,-2.684160,-0.223772,-8.788869],[3.784239,6.891460,8.075036,3.116393,2.352925,-2.843172,-3.328560,3.627329,7.158411,-7.182432,3.479979,-9.987655,3.892666,5.836493,3.497882],[-3.074017,-9.949557,-4.607661,-1.655626,5.298768,9.301321,-6.766401,-4.465607,2.696988,-3.086572,8.340581,-4.929240,-2.219719,-7.125416,-6.626769],[-7.518793,5.044410,-2.529544,-3.462875,1.326058,-2.903418,-8.724503,2.356983,7.436394,-5.297136,-0.793536,3.361509,-2.955318,-9.198643,-2.995516],[-8.317098,5.690771,5.489436,6.969871,-7.548053,3.739476,7.784585,2.268861,-5.555188,-5.432410,5.302432,-6.036886,0.692899,-1.281084,-9.335008],[-9.660681,9.784921,-6.530474,-3.995729,9.208757,-2.684878,1.406791,-2.658941,-5.094246,9.308266,1.069329,-1.258848,-3.456579,-1.535490,0.005083],[6.332046,-0.163215,-3.345188,6.236320,-2.535288,2.451191,9.424415,3.791375,-2.980787,-8.138329,-5.399708,-5.605195,-5.091898,-7.429550,6.871707],[9.016326,-7.023919,-5.382050,-6.977094,7.191421,-6.006248,2.286421,7.552872,0.255566,6.078886,-1.623266,1.112084,-5.827589,0.424473,4.387564],[-8.579453,2.987486,-0.142744,5.187671,2.738161,3.228618,-7.029898,5.828624,3.350243,8.133523,-2.058524,-3.379898,-6.518714,5.773405,-3.803636],[-0.369483,4.524337,0.517410,2.186079,-1.638618,4.234635,-8.769149,1.798416,6.009599,-8.260431,3.126840,-6.643341,8.587078,-8.783855,-8.727464],[3.444209,7.673030,-3.452531,-9.412512,-6.808879,-8.209301,-1.766063,8.518623,-4.388672,4.482377,4.108043,-5.157235,-3.346876,-1.892957,-0.971819],[6.873495,6.877556,6.316435,9.250435,-7.381441,-1.402660,9.194589,5.921781,-1.306572,-8.859959,2.168359,-1.592352,7.532509,9.444423,1.050799],[5.672704,3.416484,-2.787813,-5.549079,-3.481553,8.146167,-1.535797,5.123764,2.485691,1.819640,4.941983,7.967860,-4.826529,6.761321,-2.617142],[-0.200496,8.697742,-7.034018,-6.967693,-4.411948,8.994624,5.139565,-9.021292,-2.996895,7.688556,4.736040,-0.907613,-0.010690,-1.368396,-7.424799]]], dtype = "float32")#candidate|2395|(2, 15, 15)|const|float32
bop_2396 = relay.floor_mod(var_2394.astype('float32'), const_2395.astype('float32')) # shape=(2, 15, 15)
output = bop_2396
output2 = bop_2396
func_2408 = relay.Function([var_2394,], output)
mod['func_2408'] = func_2408
mod = relay.transform.InferType()(mod)
var_2409 = relay.var("var_2409", dtype = "float32", shape = (2, 1, 15))#candidate|2409|(2, 1, 15)|var|float32
output = func_2408(var_2409)
func_2410 = relay.Function([var_2409], output)
mutated_mod['func_2410'] = func_2410
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2463 = relay.const([[[-4.549946,-9.149021,0.609795],[-1.259686,-4.446072,-6.484507],[-8.345285,2.121584,7.810788],[-9.585619,-8.321326,-4.323285],[-8.162949,5.561260,2.221924],[5.074832,-2.318990,6.093909],[0.855802,8.832636,8.797476],[-0.337354,-5.983683,6.814838],[3.551101,-8.210166,-5.554803]],[[2.524631,-8.542679,-9.227955],[5.958165,4.651357,-6.147560],[5.063246,0.238057,2.346595],[-3.608160,-2.765913,-0.680322],[-8.507367,9.661752,9.300077],[1.517434,8.428225,-7.907515],[-3.429084,8.589855,2.369167],[-6.645210,9.165051,2.709991],[-1.188954,2.812148,-1.343473]],[[-3.354396,2.397824,9.018549],[-4.210070,7.562966,-2.322844],[6.075300,3.631035,7.137658],[-0.870476,1.091183,8.358099],[5.816266,-8.052820,-5.902417],[-0.760924,0.205897,7.826663],[-7.152186,-4.051111,9.994062],[0.639764,4.896577,2.630978],[9.934039,-0.570765,-1.797982]],[[1.883527,-8.957403,-9.287220],[-2.234212,5.970968,-4.987885],[-5.705791,-2.239646,2.813023],[-5.087491,8.395988,9.818091],[-4.896322,-0.709485,-8.875065],[-0.511215,-4.169129,8.578947],[9.900596,1.342714,-4.489189],[4.930457,9.888744,2.184749],[3.625983,0.064196,2.293392]]], dtype = "float64")#candidate|2463|(4, 9, 3)|const|float64
var_2464 = relay.var("var_2464", dtype = "float64", shape = (4, 9, 3))#candidate|2464|(4, 9, 3)|var|float64
bop_2465 = relay.greater(const_2463.astype('bool'), relay.reshape(var_2464.astype('bool'), relay.shape_of(const_2463))) # shape=(4, 9, 3)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
var_2483 = relay.var("var_2483", dtype = "bool", shape = ())#candidate|2483|()|var|bool
var_2484 = relay.var("var_2484", dtype = "bool", shape = (1, 6))#candidate|2484|(1, 6)|var|bool
call_2482 = relay.TupleGetItem(func_64_call(relay.reshape(var_2483.astype('bool'), []), relay.reshape(var_2484.astype('bool'), [1, 1, 6]), ), 0)
call_2485 = relay.TupleGetItem(func_68_call(relay.reshape(var_2483.astype('bool'), []), relay.reshape(var_2484.astype('bool'), [1, 1, 6]), ), 0)
func_567_call = mod.get_global_var('func_567')
func_570_call = mutated_mod.get_global_var('func_570')
var_2499 = relay.var("var_2499", dtype = "float32", shape = (945,))#candidate|2499|(945,)|var|float32
var_2500 = relay.var("var_2500", dtype = "float64", shape = (30,))#candidate|2500|(30,)|var|float64
call_2498 = relay.TupleGetItem(func_567_call(relay.reshape(var_2499.astype('float32'), [9, 15, 7]), relay.reshape(var_2500.astype('float64'), [30,]), ), 1)
call_2501 = relay.TupleGetItem(func_570_call(relay.reshape(var_2499.astype('float32'), [9, 15, 7]), relay.reshape(var_2500.astype('float64'), [30,]), ), 1)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
call_2521 = relay.TupleGetItem(func_64_call(relay.reshape(var_2483.astype('bool'), []), relay.reshape(call_2482.astype('bool'), [1, 1, 6]), ), 0)
call_2522 = relay.TupleGetItem(func_68_call(relay.reshape(var_2483.astype('bool'), []), relay.reshape(call_2482.astype('bool'), [1, 1, 6]), ), 0)
func_272_call = mod.get_global_var('func_272')
func_274_call = mutated_mod.get_global_var('func_274')
call_2530 = relay.TupleGetItem(func_272_call(relay.reshape(call_2498.astype('float64'), [3, 2, 5])), 0)
call_2531 = relay.TupleGetItem(func_274_call(relay.reshape(call_2498.astype('float64'), [3, 2, 5])), 0)
output = relay.Tuple([bop_2465,call_2482,var_2483,var_2484,call_2498,var_2499,var_2500,call_2521,call_2530,])
output2 = relay.Tuple([bop_2465,call_2485,var_2483,var_2484,call_2501,var_2499,var_2500,call_2522,call_2531,])
func_2553 = relay.Function([var_2464,var_2483,var_2484,var_2499,var_2500,], output)
mod['func_2553'] = func_2553
mod = relay.transform.InferType()(mod)
var_2554 = relay.var("var_2554", dtype = "float64", shape = (4, 9, 3))#candidate|2554|(4, 9, 3)|var|float64
var_2555 = relay.var("var_2555", dtype = "bool", shape = ())#candidate|2555|()|var|bool
var_2556 = relay.var("var_2556", dtype = "bool", shape = (1, 6))#candidate|2556|(1, 6)|var|bool
var_2557 = relay.var("var_2557", dtype = "float32", shape = (945,))#candidate|2557|(945,)|var|float32
var_2558 = relay.var("var_2558", dtype = "float64", shape = (30,))#candidate|2558|(30,)|var|float64
output = func_2553(var_2554,var_2555,var_2556,var_2557,var_2558,)
func_2559 = relay.Function([var_2554,var_2555,var_2556,var_2557,var_2558,], output)
mutated_mod['func_2559'] = func_2559
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2634 = relay.var("var_2634", dtype = "float64", shape = (14, 10, 8))#candidate|2634|(14, 10, 8)|var|float64
var_2635 = relay.var("var_2635", dtype = "float64", shape = (14, 10, 8))#candidate|2635|(14, 10, 8)|var|float64
bop_2636 = relay.floor_mod(var_2634.astype('float64'), relay.reshape(var_2635.astype('float64'), relay.shape_of(var_2634))) # shape=(14, 10, 8)
output = bop_2636
output2 = bop_2636
func_2670 = relay.Function([var_2634,var_2635,], output)
mod['func_2670'] = func_2670
mod = relay.transform.InferType()(mod)
mutated_mod['func_2670'] = func_2670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2670_call = mutated_mod.get_global_var('func_2670')
var_2672 = relay.var("var_2672", dtype = "float64", shape = (14, 10, 8))#candidate|2672|(14, 10, 8)|var|float64
var_2673 = relay.var("var_2673", dtype = "float64", shape = (14, 10, 8))#candidate|2673|(14, 10, 8)|var|float64
call_2671 = func_2670_call(var_2672,var_2673,)
output = call_2671
func_2674 = relay.Function([var_2672,var_2673,], output)
mutated_mod['func_2674'] = func_2674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2696 = relay.var("var_2696", dtype = "float32", shape = (13, 4, 5))#candidate|2696|(13, 4, 5)|var|float32
const_2697 = relay.const([[[1.947382,-6.707641,-8.571823,4.022426,1.681238],[4.101095,-4.749118,-2.383510,-3.115651,-2.860828],[4.777634,-9.541743,1.532080,-8.041626,-2.999159],[-2.561743,-5.686514,4.363903,9.803284,5.952991]],[[1.113667,1.457549,-1.684160,-1.865377,5.769400],[0.994842,1.616759,-0.091566,6.173320,1.698310],[5.741052,5.054844,-6.968184,-7.085323,-5.678185],[-6.667610,-9.481777,7.419050,2.969793,9.644050]],[[1.536457,7.041449,-1.773286,2.049777,4.223343],[5.300176,-6.625941,-8.316184,-0.727015,-3.153634],[-6.583985,-3.653143,8.070568,8.212223,-4.101776],[6.664000,8.482491,-7.040079,-9.864866,-2.035515]],[[-9.692761,-8.148377,-1.506140,6.245223,8.747642],[4.082766,-6.792959,-3.461823,-4.425031,-3.699897],[-4.185195,-0.841583,-8.080979,7.583630,-6.784542],[-6.156920,-2.199860,-1.350981,8.714213,7.540016]],[[9.023836,-5.315164,-8.227366,3.251016,-9.903041],[1.835795,3.350260,9.733635,-0.952777,3.580569],[-0.074295,3.778998,-8.599768,0.084614,3.037643],[5.611365,-5.162632,-5.949947,-8.143040,8.839078]],[[5.882096,-7.234108,-9.885276,8.071734,-6.843266],[2.792327,-9.661156,8.500147,-3.301234,2.680391],[7.974461,1.110320,-5.179176,7.950310,7.646956],[-2.490415,2.144820,-9.849129,-1.333119,7.051006]],[[-7.167181,7.530122,7.886472,0.045629,4.704897],[-8.615403,6.542830,-6.251482,8.217448,2.130333],[-1.004351,-5.421076,-4.273112,3.288987,-3.618539],[6.718380,-7.509987,6.873316,-9.659563,4.119403]],[[3.039725,-8.719930,0.005363,6.742701,-9.933634],[-1.327801,-1.265764,8.147566,3.121012,5.255734],[0.660675,-5.173707,4.217979,9.640877,-1.007235],[7.222909,-2.844993,1.232241,8.465112,0.506581]],[[8.275034,-1.619595,-6.132317,-7.536529,8.351849],[8.617693,-8.543718,-9.645943,3.667715,3.111920],[-9.035581,-8.919902,5.936664,6.785615,-4.294750],[-3.780830,-2.432456,7.377317,-0.756198,-4.597635]],[[2.696232,-1.176833,1.667071,7.977025,2.904518],[-9.154556,1.579196,-8.443781,-2.430760,9.514137],[-3.484466,-5.679340,3.540532,5.939758,0.858507],[1.105337,3.572726,9.351617,-4.251238,-6.008230]],[[2.321102,8.434690,6.302383,0.029948,3.073909],[-0.386709,9.130973,-0.025040,-1.911763,-0.147414],[3.771536,-6.241413,-4.771277,4.813898,-4.193159],[-4.645517,5.829910,-2.525511,8.290471,-2.568187]],[[2.452449,5.298130,-8.553001,1.099150,9.290674],[-4.261659,9.465724,-2.158422,-6.899732,-0.852796],[4.353906,3.017947,-2.432109,7.106183,8.760671],[5.553420,-4.325849,4.921311,-4.165354,8.808151]],[[7.491381,7.504715,-5.160171,-3.996637,2.189176],[6.245694,4.615617,9.373354,-0.969434,5.232748],[5.062840,-8.633125,0.640393,-1.482445,-7.077799],[-8.877058,8.729392,-7.901706,0.574414,0.054823]]], dtype = "float32")#candidate|2697|(13, 4, 5)|const|float32
bop_2698 = relay.mod(var_2696.astype('float32'), relay.reshape(const_2697.astype('float32'), relay.shape_of(var_2696))) # shape=(13, 4, 5)
func_2553_call = mod.get_global_var('func_2553')
func_2559_call = mutated_mod.get_global_var('func_2559')
const_2709 = relay.const([-4.510138,4.910351,2.563356,0.209064,-6.274788,1.210240,1.732883,-3.381859,6.950804,6.089721,0.891178,-4.567682,-5.361494,5.214300,7.436032,2.100585,0.960686,-0.731308,2.986973,4.118023,-2.957870,5.902716,0.338875,-4.505855,9.626631,2.991946,6.912260,8.145948,6.676053,8.370118,-9.376170,0.039970,5.427728,-1.327736,8.007081,6.553166,-7.093904,-2.532705,-7.757026,-6.810744,-8.659056,-0.661619,1.036957,8.683676,9.702974,-7.755455,6.544829,4.650851,7.809199,5.965690,4.008550,-8.863291,5.496021,3.679028,7.217816,5.860077,9.117719,5.677202,6.038191,4.504277,-8.494886,-0.856408,6.685940,-4.003423,4.126189,-3.382471,-2.136841,-9.038750,2.002459,-1.747636,0.723458,-5.086787,2.878533,-1.449716,5.981936,6.054358,9.738300,3.100162,5.690063,6.227518,-5.397744,8.223804,-0.117874,-9.177777,5.342643,-2.784940,2.907872,0.913278,1.194419,5.586391,-1.606551,-8.137288,1.877305,-7.279848,1.453860,7.444974,8.302968,8.161651,2.432820,7.546001,-3.475303,8.136016,1.968465,-6.158269,-5.707593,1.507880,4.559966,-0.069684], dtype = "float64")#candidate|2709|(108,)|const|float64
const_2710 = relay.const(False, dtype = "bool")#candidate|2710|()|const|bool
var_2711 = relay.var("var_2711", dtype = "bool", shape = (3, 2))#candidate|2711|(3, 2)|var|bool
const_2712 = relay.const([-7.129747,3.187885,-5.581017,3.894274,8.252630,-5.321766,-5.354918,-0.920977,-4.054720,2.759836,-6.153212,3.108046,-1.033564,-1.216536,4.977800,-2.411907,0.147770,9.226078,-6.688441,5.024613,9.118438,-7.880463,5.110149,-4.741998,4.326367,1.809617,-5.042002,-5.205289,-3.495197,-6.232353,3.237668,-0.765872,-3.324963,-9.979105,-5.215327,-1.867652,-0.757565,5.895915,7.363355,6.796751,5.220516,1.864318,0.692962,-0.569171,-6.015458,1.380139,-8.556542,0.258230,-3.617640,2.915140,2.650339,-5.415164,3.411198,4.734580,5.010867,4.038255,8.118876,-4.607821,-1.137284,0.798042,-2.441605,9.977878,-8.607557,3.406865,-4.342753,8.984577,3.086904,5.692233,2.347799,9.399258,-8.667471,6.729640,1.348239,-8.529560,8.037380,4.143022,2.923981,-4.438393,9.479863,-0.631708,-1.255994,0.428149,1.163073,-5.024129,7.993343,7.361822,-0.631875,5.145630,9.995446,-4.102870,2.681778,-9.674303,-2.830984,-8.788802,-2.754201,4.935249,-4.361853,-7.449612,-0.898760,-8.117268,1.707146,7.572746,0.417908,9.592785,-8.214282,0.736359,4.788013,-7.356435,-0.409814,1.505622,1.136036,9.929270,5.346533,3.300393,6.989074,2.198240,-8.519474,-0.277370,-5.710370,-6.728263,9.588683,-3.559926,1.106167,-0.592266,-1.214116,-4.217135,1.930028,7.961847,-9.138751,-3.279469,3.726966,-7.656427,-8.343958,4.256927,-5.791796,4.060531,2.530090,6.019136,1.184659,-8.134553,7.737917,5.315476,-8.318186,-9.732057,-1.557229,-8.356027,-7.326839,0.603328,-5.431137,3.070392,-7.853350,-1.899359,5.528793,-3.409639,-9.698440,-6.895173,6.923831,-6.874409,-7.846582,-0.452650,3.369547,-4.848110,2.479932,-2.322064,-6.459522,3.346430,-1.863993,-2.093383,1.548656,-5.837983,9.395750,7.137298,2.499321,0.447072,-1.094996,-5.348690,-8.314022,-5.614067,-6.368874,6.431875,-3.395263,0.935062,6.815548,-3.976383,-4.415329,-2.705381,4.823122,-0.394746,0.895135,6.595887,-5.662544,4.155075,-9.088740,-0.991757,-4.100605,-4.737769,-2.331712,1.636734,4.991834,-6.280990,5.679345,-0.097950,8.942904,9.179740,-1.929760,-1.218564,-8.849055,2.315047,9.474270,1.854015,-2.799607,7.997829,9.592785,-5.437857,-0.979481,-7.155933,7.036329,5.282519,5.890233,4.289919,8.066924,-3.820597,1.765467,-7.289650,-0.407091,-4.911328,8.786067,0.092163,-4.210422,-9.151734,4.238572,-7.209795,9.804347,2.386624,-3.990361,-6.384529,-4.978090,9.867318,-3.155286,9.986024,9.678704,1.627358,9.003437,2.645724,-3.574113,-7.572285,-8.142256,-6.153867,-9.500311,8.551268,-0.465700,-3.169205,-7.596783,-8.879759,-8.289276,3.991483,7.863698,-1.468831,-4.780745,9.587306,5.744486,-0.014636,-1.244170,6.136799,-9.660405,-4.895364,-5.565500,3.356693,-6.548210,-5.325588,3.159526,1.710376,-9.075767,1.154117,0.810696,-0.364588,8.017719,8.559816,5.668838,-0.193160,0.899136,3.287500,-5.658091,-6.150414,-3.277242,1.721681,3.913941,4.330143,-7.065681,-9.500236,0.413018,5.209404,5.082896,-1.314520,2.765018,-3.773850,8.732488,8.742122,-6.261810,2.008172,-2.862718,5.755245,6.226708,0.968870,6.557976,3.698350,-4.917765,3.312248,6.701506,2.126395,1.382620,0.651978,2.451279,-8.176536,7.992419,-5.961369,-6.680898,4.643133,-6.559058,6.111025,-6.040845,-3.661348,4.569148,-8.954419,-0.062344,-0.084157,3.200834,-7.003215,-2.254320,-0.888860,-5.210870,5.213505,-5.709101,-7.388124,6.612146,6.428208,0.085480,5.515671,0.651495,7.632483,6.436160,9.383567,-5.023797,6.675285,-2.762213,-3.794780,-1.349435,2.387511,-3.325592,-9.026179,-2.062879,7.450856,1.448433,-6.599692,-4.171697,-5.098542,6.376969,-5.110190,-7.307075,-3.017969,9.034567,5.472990,-0.983686,6.532382,6.342904,3.481020,1.757120,8.426173,5.514713,3.437019,3.683919,0.528201,-3.758068,-6.601127,7.849632,9.548727,0.905326,-4.815089,-1.715159,-7.329741,4.229970,4.875912,-1.741349,-1.069921,-4.569251,7.567281,1.117413,4.948893,-8.200123,-1.931666,-0.213677,2.550726,3.615727,-4.518307,8.524427,1.801492,-0.094989,8.756433,1.923070,-7.803178,2.090693,3.058617,-9.343004,-5.130159,1.001441,-7.336535,5.897488,3.910766,8.453751,-1.060656,1.799877,-5.177147,-5.129574,-2.140788,9.724305,7.745765,5.562359,9.928882,3.517092,-4.498530,1.994027,6.509008,-1.666409,2.161297,-1.142798,-8.640050,1.093407,4.552794,-5.977774,3.973790,-0.346103,2.766049,7.037012,0.453844,-1.136373,3.818260,-1.179930,-5.191642,-2.479253,-0.918833,4.813835,-0.878165,9.050077,-7.228148,5.062305,5.378204,6.862408,1.463104,-2.426393,8.601058,4.184157,-5.147867,9.484575,-9.123219,-2.198048,-0.825325,-1.318483,-9.231661,-9.568036,1.423737,-3.773883,8.039352,6.461326,-7.237210,8.128952,8.991148,3.595409,-3.039871,-6.187080,-0.928906,-1.256439,9.761974,1.573764,-7.916545,-6.943007,4.589586,2.681481,-1.245143,-2.620257,-7.968931,8.022693,-5.148781,1.113460,8.013445,2.182499,-9.748697,8.743096,-1.757029,7.047001,-3.021347,3.809279,-9.108296,4.350733,6.704235,6.247400,3.398066,0.969254,7.640190,3.580164,4.289508,-7.506579,-6.714060,9.990456,-0.979308,8.780965,-2.124073,6.594834,7.111586,-5.010529,-7.658344,-0.587867,-7.197849,0.367939,-6.604199,-3.980032,1.635314,1.120022,-3.579763,9.997930,4.575701,-4.748194,8.839315,-4.965667,-7.517417,4.260564,0.746602,-2.112086,-6.406908,4.186482,-0.631869,-6.449567,9.739710,8.719453,-1.928931,-7.182012,-4.844417,1.372203,-3.267277,-3.383882,-8.057116,6.988176,-9.753057,8.773550,0.979051,1.548978,1.619840,-5.013783,-9.286339,-6.348604,-7.699171,-2.286426,7.784931,-8.796559,-2.241472,-6.092281,-4.726563,-3.577135,-5.304722,8.681249,-8.895644,9.792565,-7.540721,-8.962516,-8.358662,1.189957,-0.017206,9.451724,-7.979608,2.467201,-9.245526,6.721946,-3.103227,5.812345,-2.367644,-9.575449,-2.651038,-0.252279,7.633903,2.722028,6.163364,-6.422831,-0.962340,-3.139841,0.970963,1.903447,3.900557,2.017973,-1.243239,-2.685208,4.707823,-5.450420,8.490745,5.400816,7.639412,-6.508884,7.808070,-8.058868,-0.167651,-1.419888,7.281669,6.501526,7.042117,-5.001156,-7.037875,-0.788827,4.574072,5.643116,3.776804,-6.313354,8.490791,9.318549,2.838754,-4.671662,-7.040624,-6.897529,9.404721,2.889951,-3.189830,-6.453182,-3.223569,-6.960412,2.468043,-6.691906,-6.833990,-3.841179,8.615215,7.695451,8.354438,-3.319742,-4.143907,2.670039,4.757002,-4.823104,-1.477181,-3.068102,3.219551,1.111527,-9.122570,2.296992,-0.101519,-2.556937,-8.963894,-6.842786,4.699757,0.324572,5.049644,9.034500,7.635263,-6.778711,1.098690,1.783533,-9.486015,5.936672,-0.330693,1.024089,-5.778829,5.932639,2.052147,4.382305,-1.659528,9.107994,2.869580,-4.050899,-3.601234,7.702576,0.895151,1.681356,7.284075,-9.589402,6.749084,-4.698811,6.204624,-9.923142,5.224467,-8.375893,7.654589,-9.774716,-1.211658,4.363054,0.444482,-1.003500,0.839414,-0.509738,5.170129,2.555901,2.632594,-0.265959,8.736737,7.799262,-0.044412,-2.356445,9.101280,1.035365,-5.194559,6.204106,7.087199,-2.195005,3.262436,9.024205,-0.807062,6.198857,-4.203296,-7.889877,3.216166,-9.899486,9.442911,5.035394,6.657131,6.534296,4.033661,-2.106211,-6.889878,-3.618805,0.166655,-3.640798,-3.990713,6.226889,-4.138848,-7.296442,-4.396887,9.484549,9.194074,-2.532577,8.409180,-6.850598,-0.422189,3.145990,-3.287844,-4.392423,8.269626,0.841833,7.510753,-3.621590,-4.244704,2.391705,-3.926600,7.474753,7.700907,-7.210931,6.358945,9.254767,6.568399,-0.157402,-3.155047,-0.275733,-7.188917,8.659204,-7.092636,6.974400,-0.862623,3.689615,6.394624,4.552370,4.058888,-7.724464,-3.593981,-8.906972,-9.123969,4.997981,-5.930845,1.674467,8.054963,-0.847527,-3.620806,4.581211,-2.494008,8.124732,5.665717,-1.593293,6.194651,1.694815,-1.615722,3.967501,-0.053547,-9.561596,-4.338833,9.325267,-6.557127,-6.182146,5.372608,-0.827450,-5.126855,-0.507626,-6.112113,-5.436046,9.629888,1.314149,-0.592565,-4.316949,-2.143406,3.087211,-7.185487,-2.381436,-6.406776,-5.269264,-4.702725,2.113958,-9.401737,-1.148956,-6.016598,-4.638313,-6.659689,3.583829,9.052088,-6.813801,-1.931738,-6.484956,-4.608494,-5.072943,5.542779,1.957740,6.058210,4.968050,-9.533303,-1.046764,-7.619873,-6.287692,-5.426742,3.151336,0.414959,4.268275,7.385275,6.491856,2.617584,-3.912323,-9.297005,-3.995804,-1.383961,6.023542,-6.116629,7.694490,9.927503,0.085358,-3.176511,8.310703,-1.877842,9.035757,-9.300368,-2.972384,-5.035190,1.754643,-9.405715,-0.500105,0.642032,3.327406,0.225736,-4.481611,-1.445573,8.767865,7.880018,-0.411006,5.437155,9.818979,-3.467482,6.489502,8.696760,6.578557,8.796775,-5.179807,-6.878203,-0.510932,4.946361,-5.991665,-3.543413,-3.283716,-4.138040,-3.091938,-4.543440,3.867613,0.901063,-9.584739,2.872830,-7.867051,4.247416,7.276577,-1.749839,-3.505253,9.261355,9.883980,-0.253859,3.226567,-3.596506,-7.267465,2.996195,-9.518340,1.606295,5.030673,-6.884548,6.790893,3.209425,8.390746,-3.380696,9.223952,-9.214394,8.269855,-4.261312,0.001849,-0.583493,0.025092,-7.289582,-2.569407,-1.543138,-0.532758,8.985224,5.703695,1.534491,-5.141007,-1.986906,8.971961,-9.388850,2.927761,8.292225,-7.162285,-1.377194,0.377424,6.753562,-8.462124,-1.608551,-9.488068,-3.937133,-2.870825,8.435851,9.772185,-0.713220,-6.872010,-3.132374,4.942546,7.011451,6.768967,2.869494,-1.278880,9.822562,5.977422,0.688356,6.383266,9.284596,2.477861,9.487788,-8.031950,9.671972,-1.067157,-3.025540,7.701552,7.127236,6.413571], dtype = "float32")#candidate|2712|(945,)|const|float32
var_2713 = relay.var("var_2713", dtype = "float64", shape = (30,))#candidate|2713|(30,)|var|float64
call_2708 = relay.TupleGetItem(func_2553_call(relay.reshape(const_2709.astype('float64'), [4, 9, 3]), relay.reshape(const_2710.astype('bool'), []), relay.reshape(var_2711.astype('bool'), [1, 6]), relay.reshape(const_2712.astype('float32'), [945,]), relay.reshape(var_2713.astype('float64'), [30,]), ), 8)
call_2714 = relay.TupleGetItem(func_2559_call(relay.reshape(const_2709.astype('float64'), [4, 9, 3]), relay.reshape(const_2710.astype('bool'), []), relay.reshape(var_2711.astype('bool'), [1, 6]), relay.reshape(const_2712.astype('float32'), [945,]), relay.reshape(var_2713.astype('float64'), [30,]), ), 8)
output = relay.Tuple([bop_2698,call_2708,const_2709,const_2710,var_2711,const_2712,var_2713,])
output2 = relay.Tuple([bop_2698,call_2714,const_2709,const_2710,var_2711,const_2712,var_2713,])
func_2727 = relay.Function([var_2696,var_2711,var_2713,], output)
mod['func_2727'] = func_2727
mod = relay.transform.InferType()(mod)
mutated_mod['func_2727'] = func_2727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2727_call = mutated_mod.get_global_var('func_2727')
var_2729 = relay.var("var_2729", dtype = "float32", shape = (13, 4, 5))#candidate|2729|(13, 4, 5)|var|float32
var_2730 = relay.var("var_2730", dtype = "bool", shape = (3, 2))#candidate|2730|(3, 2)|var|bool
var_2731 = relay.var("var_2731", dtype = "float64", shape = (30,))#candidate|2731|(30,)|var|float64
call_2728 = func_2727_call(var_2729,var_2730,var_2731,)
output = call_2728
func_2732 = relay.Function([var_2729,var_2730,var_2731,], output)
mutated_mod['func_2732'] = func_2732
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2883 = relay.var("var_2883", dtype = "float32", shape = (11, 15, 1))#candidate|2883|(11, 15, 1)|var|float32
uop_2884 = relay.tan(var_2883.astype('float32')) # shape=(11, 15, 1)
func_651_call = mod.get_global_var('func_651')
func_654_call = mutated_mod.get_global_var('func_654')
var_2893 = relay.var("var_2893", dtype = "float32", shape = (105, 9))#candidate|2893|(105, 9)|var|float32
var_2894 = relay.var("var_2894", dtype = "float64", shape = (30,))#candidate|2894|(30,)|var|float64
call_2892 = relay.TupleGetItem(func_651_call(relay.reshape(var_2893.astype('float32'), [945,]), relay.reshape(var_2894.astype('float64'), [1, 30]), ), 2)
call_2895 = relay.TupleGetItem(func_654_call(relay.reshape(var_2893.astype('float32'), [945,]), relay.reshape(var_2894.astype('float64'), [1, 30]), ), 2)
var_2896 = relay.var("var_2896", dtype = "float32", shape = (945,))#candidate|2896|(945,)|var|float32
bop_2897 = relay.greater_equal(call_2892.astype('bool'), relay.reshape(var_2896.astype('bool'), relay.shape_of(call_2892))) # shape=(945,)
bop_2900 = relay.greater_equal(call_2895.astype('bool'), relay.reshape(var_2896.astype('bool'), relay.shape_of(call_2895))) # shape=(945,)
bop_2902 = relay.maximum(uop_2884.astype('float64'), var_2894.astype('float64')) # shape=(11, 15, 30)
func_272_call = mod.get_global_var('func_272')
func_274_call = mutated_mod.get_global_var('func_274')
call_2905 = relay.TupleGetItem(func_272_call(relay.reshape(var_2894.astype('float64'), [3, 2, 5])), 0)
call_2906 = relay.TupleGetItem(func_274_call(relay.reshape(var_2894.astype('float64'), [3, 2, 5])), 0)
output = relay.Tuple([var_2893,bop_2897,bop_2902,call_2905,])
output2 = relay.Tuple([var_2893,bop_2900,bop_2902,call_2906,])
func_2916 = relay.Function([var_2883,var_2893,var_2894,var_2896,], output)
mod['func_2916'] = func_2916
mod = relay.transform.InferType()(mod)
var_2917 = relay.var("var_2917", dtype = "float32", shape = (11, 15, 1))#candidate|2917|(11, 15, 1)|var|float32
var_2918 = relay.var("var_2918", dtype = "float32", shape = (105, 9))#candidate|2918|(105, 9)|var|float32
var_2919 = relay.var("var_2919", dtype = "float64", shape = (30,))#candidate|2919|(30,)|var|float64
var_2920 = relay.var("var_2920", dtype = "float32", shape = (945,))#candidate|2920|(945,)|var|float32
output = func_2916(var_2917,var_2918,var_2919,var_2920,)
func_2921 = relay.Function([var_2917,var_2918,var_2919,var_2920,], output)
mutated_mod['func_2921'] = func_2921
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3217 = relay.constdtype = "float32")#candidate|3217|(11, 11, 14)|const|float32
var_3218 = relay.var("var_3218", dtype = "float32", shape = (11, 11, 14))#candidate|3218|(11, 11, 14)|var|float32
bop_3219 = relay.subtract(const_3217.astype('float32'), relay.reshape(var_3218.astype('float32'), relay.shape_of(const_3217))) # shape=(11, 11, 14)
func_2727_call = mod.get_global_var('func_2727')
func_2732_call = mutated_mod.get_global_var('func_2732')
const_3228 = relay.const([5.665982,-6.994252,-2.054030,3.512614,-1.631423,0.925833,-8.080442,-3.913373,-1.683177,-9.714448,0.520052,-8.925109,4.389766,1.922349,3.534908,1.956136,8.787477,-5.429685,9.871752,8.953742,1.913846,7.581741,-4.554876,6.810541,-1.281188,7.747687,8.773343,-7.979568,7.011522,-7.409412,-1.842281,6.263840,8.888800,-1.188390,1.382915,6.444141,-4.411594,-6.284335,-3.829290,7.906364,3.271755,1.574288,-4.382260,2.093582,8.911695,-7.973219,6.343851,-4.384429,6.728514,8.369668,-2.158085,-3.663597,-9.998680,8.517326,-9.590039,9.856954,-0.522489,-4.223855,-0.215151,-9.071649,0.626993,-8.258123,-6.523477,-4.983753,4.623194,-7.307627,-3.811815,-7.115852,5.214481,7.672211,-9.615969,0.204489,8.240298,-0.858766,-5.987704,-9.662234,0.857036,-2.763937,9.330957,-8.852140,9.149055,-8.717005,8.174202,-2.545655,0.947658,-5.017964,-8.762888,-7.308749,6.700384,5.767012,0.139583,-9.218677,-6.578494,-8.175867,6.507867,-5.905306,0.246981,-3.612688,0.807613,7.723787,-5.555551,1.349069,7.863965,4.064348,-3.014194,-9.888275,-9.200189,-2.904470,-6.481779,-7.282373,5.508041,-3.461277,2.312471,0.743030,6.473863,6.692854,-2.529715,-5.024392,-2.237003,2.098435,-1.098482,-0.677295,-3.279979,-1.800293,1.335713,-3.333107,7.451560,4.562234,5.228152,-2.697862,9.430719,-4.429089,-6.257528,-1.424052,-1.989606,2.749257,6.929130,6.612437,-7.979885,-2.635712,-3.631484,3.003734,9.391881,9.710448,9.545606,6.657189,9.677840,4.385914,-6.907402,2.717527,6.778773,-3.986523,-6.621863,-7.449328,8.316406,2.082372,1.136704,0.950300,7.612460,0.648810,-2.611345,-9.873404,-9.673833,5.558855,9.466419,-0.675564,0.790698,3.320515,-1.606606,9.717927,8.379565,-4.161868,2.075358,8.831427,-9.351335,6.902772,-6.671037,-0.270646,1.646970,3.535982,-2.794728,9.778392,-1.265377,-9.769571,-7.949539,-7.240494,-3.707462,-7.430075,1.119219,-0.992134,-7.510247,-9.731253,5.137834,-0.664368,9.139315,4.436003,6.460328,5.378902,-3.033135,-2.690824,5.659945,-0.811245,9.416269,6.802157,-7.833880,-6.561676,-1.088162,1.728840,-0.899462,-4.461395,-8.965561,9.201242,5.913279,4.870766,-1.641493,-0.861107,5.261527,6.772279,-1.524198,2.403867,7.023456,7.552718,-7.773266,0.055501,-3.851171,-4.687347,-5.262498,-7.811863,3.143400,3.911037,-7.045540,2.356437,-8.861565,-5.078741,-6.023613,2.649324,-0.115056,3.460840,-6.137626,0.070916,-5.856454,9.455063,7.791671,-3.053778,4.459603,2.552098,-5.191115,7.981048,8.784480,1.233250,8.098904,6.452886,6.933943,0.158311,-0.521937,6.623537,-3.456471,0.118603,-2.505573,-0.676839], dtype = "float32")#candidate|3228|(260,)|const|float32
const_3229 = relay.const([False,True,False,True,True,True], dtype = "bool")#candidate|3229|(6,)|const|bool
var_3230 = relay.var("var_3230", dtype = "float64", shape = (30,))#candidate|3230|(30,)|var|float64
call_3227 = relay.TupleGetItem(func_2727_call(relay.reshape(const_3228.astype('float32'), [13, 4, 5]), relay.reshape(const_3229.astype('bool'), [3, 2]), relay.reshape(var_3230.astype('float64'), [30,]), ), 1)
call_3231 = relay.TupleGetItem(func_2732_call(relay.reshape(const_3228.astype('float32'), [13, 4, 5]), relay.reshape(const_3229.astype('bool'), [3, 2]), relay.reshape(var_3230.astype('float64'), [30,]), ), 1)
output = relay.Tuple([bop_3219,call_3227,const_3228,const_3229,var_3230,])
output2 = relay.Tuple([bop_3219,call_3231,const_3228,const_3229,var_3230,])
func_3233 = relay.Function([var_3218,var_3230,], output)
mod['func_3233'] = func_3233
mod = relay.transform.InferType()(mod)
var_3234 = relay.var("var_3234", dtype = "float32", shape = (11, 11, 14))#candidate|3234|(11, 11, 14)|var|float32
var_3235 = relay.var("var_3235", dtype = "float64", shape = (30,))#candidate|3235|(30,)|var|float64
output = func_3233(var_3234,var_3235,)
func_3236 = relay.Function([var_3234,var_3235,], output)
mutated_mod['func_3236'] = func_3236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3292 = relay.var("var_3292", dtype = "int32", shape = (16, 15, 12))#candidate|3292|(16, 15, 12)|var|int32
var_3293 = relay.var("var_3293", dtype = "int32", shape = (16, 15, 12))#candidate|3293|(16, 15, 12)|var|int32
bop_3294 = relay.equal(var_3292.astype('bool'), relay.reshape(var_3293.astype('bool'), relay.shape_of(var_3292))) # shape=(16, 15, 12)
func_651_call = mod.get_global_var('func_651')
func_654_call = mutated_mod.get_global_var('func_654')
const_3306 = relay.const([-8.685342,-9.571123,-2.776067,-6.120480,-5.276464,4.439833,-9.276497,-1.887774,-3.765739,9.999495,0.090351,7.977253,-9.599330,-4.949828,-2.648238,-8.045728,6.589925,2.821464,-0.409186,1.164055,3.995826,1.668658,7.345572,2.722593,1.484531,-0.665058,4.510672,4.849243,-3.512861,9.580075,2.969650,-3.341878,-7.361101,-6.672641,9.836316,2.678748,-7.543386,-2.276689,-5.123225,9.978621,-1.066800,0.707439,-7.854663,9.707437,-7.274978,7.745134,1.218162,-2.618641,-7.601891,-2.207313,-1.325992,-3.511623,-1.419441,1.207717,-0.654828,-7.104713,-4.241446,-1.449367,-9.415101,-8.459881,3.081661,-3.901799,5.377068,-7.401706,-0.823479,0.825163,0.221204,9.669900,9.518630,-3.146930,-3.616560,-3.858973,-9.251617,8.740499,1.675157,-9.442531,4.525949,4.565421,2.157118,-9.664486,-7.722309,1.763524,7.969018,-3.011767,9.072529,-9.042868,1.919939,-5.390613,-3.941118,7.203697,8.070878,-5.780787,-4.907962,1.090076,5.338113,9.218771,-6.270030,9.069972,-4.031844,-7.640222,1.625189,3.766082,7.108300,-1.059166,3.576594,0.339898,6.570036,1.350069,8.585471,-6.879308,5.639223,7.359817,-3.930766,5.296602,-2.413083,-5.166965,9.807669,-0.507480,3.768277,-1.887583,-0.679116,-3.711886,8.889194,-1.590512,-6.884318,6.912751,-1.341224,7.303420,-1.070701,8.812234,-9.033201,-0.356493,5.063122,7.673439,9.797828,8.517612,2.035043,-1.995034,-0.195824,-2.573466,6.616278,-4.493935,-3.674615,-9.704534,-7.815997,4.918188,7.053048,-8.547174,-0.845769,4.505713,2.781712,-2.860266,-6.726501,8.869656,3.715527,-2.273232,-4.998438,-7.039971,-6.770410,5.481013,3.692958,-8.644125,-4.363193,0.401634,-0.408254,-0.925130,-1.210303,-7.912563,3.288723,1.893866,9.113874,3.717025,-6.247645,-3.723542,-2.197695,0.558788,-8.962586,-6.222764,8.155478,-1.407448,7.690074,3.583302,7.850511,-3.799162,-7.654757,7.715024,0.554345,4.389226,-1.684385,2.668282,6.973584,-4.095714,-2.139993,-5.862125,6.451506,1.068178,4.220714,-4.980199,-4.037919,-7.645564,-4.294986,4.722978,-6.750347,8.379168,-0.184605,-7.771424,7.766642,-2.485023,1.537606,3.823442,2.674244,7.050919,-9.855293,4.601238,3.136645,1.406058,4.763599,3.599065,3.811382,-7.399869,0.817969,0.363112,-4.722265,-1.480762,-8.858095,-9.052765,-7.534685,-8.381488,9.935586,-0.587935,2.013612,-8.054935,-9.907222,3.397485,-2.982738,9.313706,-5.573314,-4.617379,-6.857756,-9.881115,7.627366,-9.550109,5.289016,-0.634238,-7.739916,6.651923,-1.468945,-9.137550,6.623048,-4.739625,-6.750564,-6.190539,-8.914750,6.242544,9.065187,0.155195,-7.758341,7.134446,-2.488625,-2.813055,-4.741788,4.267670,0.392016,6.984364,3.997190,-1.448660,1.054245,-3.764882,6.879874,9.539540,6.043975,5.527102,-4.366373,7.926706,-6.547597,-3.257644,1.829754,2.299308,3.573062,-8.760988,-0.451844,-5.341639,5.827923,4.874160,-7.640542,3.101996,2.489022,7.703348,7.747364,7.534777,-6.373802,-4.156311,1.396789,-2.894290,-0.651534,9.346356,5.601660,3.398706,-5.647860,-3.720916,3.419461,-6.315978,-6.843811,-1.788728,8.808119,-1.290267,0.359808,8.625970,-5.410264,-8.989628,-7.055662,-4.230462,2.775630,-3.235927,-5.838206,8.482435,8.532982,8.134415,6.220540,8.160936,7.261625,4.843898,6.055761,7.071325,-0.735103,-5.236897,4.661488,7.252845,-1.181499,-5.716064,-6.137036,-4.821110,8.403747,3.400524,-5.576372,2.540540,-9.264398,-0.789236,-2.086285,-2.110391,3.561118,6.416273,5.229170,-9.680933,2.614292,-0.023685,-3.271915,5.324045,-0.306067,-5.337202,2.654817,-6.505116,-9.620090,8.861269,-8.867838,-6.869150,6.141869,-6.650821,-6.243361,-5.541965,4.060409,1.525412,-9.818773,-1.628585,5.934945,0.791726,-9.571472,7.779017,-3.261153,2.802963,-0.860427,5.446949,-4.643545,-5.520812,-2.283733,-7.771227,2.039723,2.031619,-0.159151,0.322325,-8.342117,-7.784019,-1.552459,-2.380118,4.481409,-0.338799,1.245283,7.292824,6.777614,-5.788217,-6.482078,-8.656925,-1.233865,2.909929,0.892610,-7.978181,2.492773,-6.334274,-6.791558,4.436352,3.155452,8.566987,0.617691,-8.047686,-0.523503,-2.689717,0.481895,6.299435,-5.271268,-1.273742,1.639155,8.849328,3.379488,-0.425651,-6.473868,0.075150,0.057178,-9.612755,4.285318,-7.587917,2.759404,9.896600,6.778826,-4.355196,0.389880,2.245225,-3.785897,-5.451357,-0.343579,5.588670,-9.267174,-4.932970,-5.104172,-0.060958,6.809605,8.946756,2.932036,5.011723,0.150421,-8.752479,-8.666447,9.301578,-0.081401,0.112398,4.772858,-5.446216,1.519475,2.241848,9.485888,-2.220760,-1.533851,-4.487820,-7.782960,-8.713681,5.511047,-6.449609,-3.024443,-0.255694,1.428796,-5.585556,5.440260,-2.311420,1.018883,-0.202008,9.289245,-4.044717,-7.614787,2.341429,-9.248308,9.756112,-9.127963,-1.334096,9.329978,-8.114696,-9.686651,5.420091,8.371870,-1.738930,-5.450498,5.849528,6.980344,4.392097,-6.938608,-3.759435,2.654121,5.688378,-2.242284,-1.682253,-3.287676,-2.545804,2.151888,-9.644278,-8.329695,-6.657993,5.935693,-3.948968,7.065035,0.928361,2.277376,-5.213441,7.667714,-9.884341,7.021846,1.242892,0.330065,-9.671087,-6.874472,4.498793,-2.771967,7.691768,-2.157467,-1.124328,0.338387,6.078957,-5.911532,1.580633,1.208922,8.589408,2.347805,6.496963,-3.189152,3.304925,-7.119802,4.406612,-5.110167,0.422551,0.971131,-2.527276,7.620495,1.351170,-7.094868,6.563029,-8.615055,-3.459252,4.601665,4.941093,-9.307315,-6.508623,1.529802,5.624571,-2.200508,-4.607126,-4.856922,5.351457,3.873978,5.467824,3.345208,9.380487,7.569367,9.722184,6.255264,1.390696,-1.205238,2.759746,7.470045,0.705304,7.126071,0.809149,5.988060,3.899803,8.102879,-8.773768,3.890989,2.930385,4.727171,4.077406,6.409117,-5.288759,5.783571,0.852149,-0.385190,-6.261236,2.550069,-3.202407,-0.183889,1.347082,-5.553763,6.226809,5.406565,6.526624,5.298673,-0.359316,9.094545,-5.895443,-1.497260,2.238542,7.820618,-9.736472,-3.008849,9.241200,-8.406249,-6.090461,-7.033364,-2.748604,-2.485074,-0.213363,-3.433605,-4.737307,-8.152587,-6.619423,7.371230,2.083642,-6.667199,8.086193,-7.021104,1.167245,9.248873,-2.131507,9.625602,6.422448,-5.989578,-2.717492,-3.668858,-6.489946,3.804419,1.698669,-4.028848,4.217579,-3.719678,4.751435,4.768318,7.972269,1.063986,-7.239848,-4.477398,-3.985628,-6.724483,-2.212753,-4.200914,2.405948,7.776514,-7.702493,6.866429,-1.240364,-8.187255,0.725356,4.609940,-5.496520,-3.815331,1.516114,-5.960133,7.737137,-5.714875,-8.907911,-0.845131,0.600836,-2.238403,6.320481,4.843550,-0.087223,-5.485076,-0.139207,-4.144242,-4.684169,5.961889,-3.229831,3.099775,-2.485725,9.329366,-1.761697,-1.929217,2.012635,2.151543,5.685288,0.838983,-5.252518,8.373484,6.264149,8.526653,-1.234932,2.264147,8.019627,-2.023473,1.740530,-1.730156,0.259596,5.701283,2.065300,7.199931,9.562860,-6.664193,-9.800074,-9.031722,-1.607001,9.346464,0.283340,3.540333,-6.324322,-9.714890,7.908645,6.135000,-0.179311,6.530023,-7.068436,-3.337295,3.890191,5.096479,-7.883698,4.218045,-0.374767,6.739732,-2.669035,-9.095417,-8.194231,-9.198786,1.923496,-1.630693,-8.121441,5.908255,-1.098321,-2.318652,9.757878,-7.281843,-4.502934,-9.587273,-6.291446,-3.176968,-5.135332,9.723776,2.309812,-0.296206,-7.297247,-7.844376,-3.103083,2.572754,2.474154,3.644202,0.251343,-7.277714,3.928190,-2.476273,-0.930577,-1.956467,8.007543,8.840916,5.105595,2.121534,-9.552459,-6.787153,-7.088824,-6.207298,-4.857961,-9.776713,2.378065,3.588040,6.441604,-2.293872,-5.429673,-6.998396,3.688751,-9.332214,3.809210,-4.867865,-3.340116,-3.305155,-7.893703,-2.847475,-8.697793,-3.814413,-2.903488,5.097104,-6.725871,0.337040,-3.322131,-0.494306,-5.446945,4.364114,6.814599,7.581697,-6.893462,-6.286450,-8.812572,7.856790,4.619162,-1.433788,3.314962,3.764250,-0.981277,-8.666197,-4.533261,-2.786003,-9.144566,-7.542828,4.832378,7.678744,3.960957,-3.950883,-5.081736,4.821521,5.359616,9.523946,8.935276,-0.039821,-3.090760,-2.812056,-9.507825,7.228709,-8.968161,-6.373063,6.704230,-6.468765,2.423126,9.130259,-0.847404,5.884888,-2.932298,7.636185,5.237820,2.459876,-8.032225,-1.305684,-8.639697,9.283593,8.396965,-8.897562,5.258312,1.660643,6.939864,8.408801,7.602691,-4.073407,6.064884,6.191969,6.034754,-5.714264,9.517167,-5.796928,-6.053893,-2.989793,1.357820,7.539863,0.486079,1.199121,1.311574,5.541904,1.427044,-4.595035,5.616938,7.447038,9.445326,-3.744390,-7.656941,-0.358839,5.673616,-5.637514,-8.219339,6.849592,9.981465,-8.485506,2.009181,0.191341,8.806517,-4.414638,-5.430512,-7.984037,0.903969,-4.911759,8.690632,0.596835,8.306117,-3.713720,6.737690,-0.472299,-4.365036,2.231974,-5.602149,6.001701,-9.941000,-6.328800,8.509377,-3.333797,7.589970,9.853619,-1.560379,1.739050,-3.744175,1.617615,-5.177707,-8.222171,-9.231502,-5.888355,7.675606,0.590017,1.459238,-3.628411,-1.334379,-0.191996,7.560088,-4.756826,-6.608417,8.301570,8.148075,-1.971579,-0.304935,2.441581,-0.531400,4.003984,3.019682,5.114085,-1.946127,5.830808,6.130237,0.924854,6.324517,-4.079737,7.949253,8.776380,-0.958037,-4.632958,-8.788406,8.595932,-1.160552,-0.664479,1.644865,-5.411275,9.191285,-7.043810,3.852756,3.781936,-7.490653,-1.786458,-7.301400,-8.683166,3.449783,3.163722,-4.775095,-4.861957,-4.099016,-6.557136,2.123459,0.338616,5.265543,6.526694,0.845364,7.234220,-1.897098,-8.977940,2.736245,1.903359,4.355211,5.320542,3.779482,-7.761764,-1.178388,-9.616269], dtype = "float32")#candidate|3306|(945,)|const|float32
var_3307 = relay.var("var_3307", dtype = "float64", shape = (30,))#candidate|3307|(30,)|var|float64
call_3305 = relay.TupleGetItem(func_651_call(relay.reshape(const_3306.astype('float32'), [945,]), relay.reshape(var_3307.astype('float64'), [1, 30]), ), 0)
call_3308 = relay.TupleGetItem(func_654_call(relay.reshape(const_3306.astype('float32'), [945,]), relay.reshape(var_3307.astype('float64'), [1, 30]), ), 0)
func_567_call = mod.get_global_var('func_567')
func_570_call = mutated_mod.get_global_var('func_570')
call_3330 = relay.TupleGetItem(func_567_call(relay.reshape(const_3306.astype('float32'), [9, 15, 7]), relay.reshape(var_3307.astype('float64'), [30,]), ), 1)
call_3331 = relay.TupleGetItem(func_570_call(relay.reshape(const_3306.astype('float32'), [9, 15, 7]), relay.reshape(var_3307.astype('float64'), [30,]), ), 1)
output = relay.Tuple([bop_3294,call_3305,const_3306,var_3307,call_3330,])
output2 = relay.Tuple([bop_3294,call_3308,const_3306,var_3307,call_3331,])
func_3336 = relay.Function([var_3292,var_3293,var_3307,], output)
mod['func_3336'] = func_3336
mod = relay.transform.InferType()(mod)
mutated_mod['func_3336'] = func_3336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3336_call = mutated_mod.get_global_var('func_3336')
var_3338 = relay.var("var_3338", dtype = "int32", shape = (16, 15, 12))#candidate|3338|(16, 15, 12)|var|int32
var_3339 = relay.var("var_3339", dtype = "int32", shape = (16, 15, 12))#candidate|3339|(16, 15, 12)|var|int32
var_3340 = relay.var("var_3340", dtype = "float64", shape = (30,))#candidate|3340|(30,)|var|float64
call_3337 = func_3336_call(var_3338,var_3339,var_3340,)
output = call_3337
func_3341 = relay.Function([var_3338,var_3339,var_3340,], output)
mutated_mod['func_3341'] = func_3341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3353 = relay.var("var_3353", dtype = "float64", shape = (2, 1, 11))#candidate|3353|(2, 1, 11)|var|float64
uop_3354 = relay.rsqrt(var_3353.astype('float64')) # shape=(2, 1, 11)
var_3365 = relay.var("var_3365", dtype = "float64", shape = (2, 12, 11))#candidate|3365|(2, 12, 11)|var|float64
bop_3366 = relay.add(uop_3354.astype('float32'), var_3365.astype('float32')) # shape=(2, 12, 11)
output = bop_3366
output2 = bop_3366
func_3373 = relay.Function([var_3353,var_3365,], output)
mod['func_3373'] = func_3373
mod = relay.transform.InferType()(mod)
mutated_mod['func_3373'] = func_3373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3373_call = mutated_mod.get_global_var('func_3373')
var_3375 = relay.var("var_3375", dtype = "float64", shape = (2, 1, 11))#candidate|3375|(2, 1, 11)|var|float64
var_3376 = relay.var("var_3376", dtype = "float64", shape = (2, 12, 11))#candidate|3376|(2, 12, 11)|var|float64
call_3374 = func_3373_call(var_3375,var_3376,)
output = call_3374
func_3377 = relay.Function([var_3375,var_3376,], output)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3864 = relay.var("var_3864", dtype = "float32", shape = (1, 8, 1))#candidate|3864|(1, 8, 1)|var|float32
uop_3865 = relay.sinh(var_3864.astype('float32')) # shape=(1, 8, 1)
func_2408_call = mod.get_global_var('func_2408')
func_2410_call = mutated_mod.get_global_var('func_2410')
const_3868 = relay.const([4.367045,-0.494380,8.602807,2.241218,-8.430224,-5.172493,6.705436,9.590804,-1.160542,-9.402526,-8.778455,-0.845874,9.445484,-8.959388,2.262574,4.598364,0.176768,5.112212,-3.837987,-7.661294,-9.622385,6.295449,-1.478575,-9.620258,-9.710154,-2.895515,-4.405298,-5.068707,-1.186832,3.961433], dtype = "float32")#candidate|3868|(30,)|const|float32
call_3867 = func_2408_call(relay.reshape(const_3868.astype('float32'), [2, 1, 15]))
call_3869 = func_2408_call(relay.reshape(const_3868.astype('float32'), [2, 1, 15]))
output = relay.Tuple([uop_3865,call_3867,const_3868,])
output2 = relay.Tuple([uop_3865,call_3869,const_3868,])
func_3879 = relay.Function([var_3864,], output)
mod['func_3879'] = func_3879
mod = relay.transform.InferType()(mod)
var_3880 = relay.var("var_3880", dtype = "float32", shape = (1, 8, 1))#candidate|3880|(1, 8, 1)|var|float32
output = func_3879(var_3880)
func_3881 = relay.Function([var_3880], output)
mutated_mod['func_3881'] = func_3881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4035 = relay.var("var_4035", dtype = "int32", shape = (15, 2, 15))#candidate|4035|(15, 2, 15)|var|int32
var_4036 = relay.var("var_4036", dtype = "int32", shape = (15, 2, 15))#candidate|4036|(15, 2, 15)|var|int32
bop_4037 = relay.greater(var_4035.astype('bool'), relay.reshape(var_4036.astype('bool'), relay.shape_of(var_4035))) # shape=(15, 2, 15)
func_3373_call = mod.get_global_var('func_3373')
func_3377_call = mutated_mod.get_global_var('func_3377')
var_4048 = relay.var("var_4048", dtype = "float64", shape = (22,))#candidate|4048|(22,)|var|float64
const_4049 = relay.const([8.516998,-6.490261,9.230149,3.293448,9.249466,-7.886967,-4.171056,-1.002832,-8.504086,0.769657,7.949510,-6.006242,-5.462783,-0.499952,5.555912,-4.472592,6.932025,8.582287,1.554299,-9.966062,-0.119819,1.181032,-6.054277,9.451154,4.360225,5.321506,0.338987,-4.489908,-0.814491,1.388356,-6.446346,-3.176473,6.674961,-6.726720,-4.503400,2.389331,-2.881268,8.762984,-8.831473,5.139185,8.125631,-3.563875,-2.699663,-8.871396,3.772881,-9.325518,1.153494,8.299013,-2.579943,1.043298,-1.951203,7.188934,-6.048576,3.655810,6.001955,-3.893573,-2.056669,4.997927,6.273123,0.744742,-2.828886,4.990655,-4.278285,-0.330305,-6.889824,7.815998,-2.457500,7.355530,2.630071,6.099788,-8.652527,8.985527,-9.736518,0.154279,-9.471665,-7.656377,7.186259,-4.453359,2.735304,-6.056291,-8.434903,-7.858589,8.951915,6.944570,7.682778,1.148020,-5.617402,-0.065622,-5.341133,0.287071,-3.875364,8.294639,1.691447,4.722306,-9.260274,-6.293682,1.754703,1.095056,0.289762,1.410859,2.764854,-6.343709,8.976218,-9.131910,-5.648452,-3.768420,0.317497,-4.437540,4.061504,3.208373,-8.589066,-8.301512,8.364108,-0.433997,0.161936,6.128152,-4.736324,-4.956599,-4.345800,7.324677,-8.477581,8.408397,4.710668,-4.908361,3.516419,-5.263128,-3.334252,9.440514,-3.020827,-3.663107,6.566921,-2.966279,7.555399,8.987366,0.676080,-7.442329,-1.895305,-2.182865,-3.199895,-2.180659,-9.617934,4.187393,6.213488,-9.151159,-4.507888,8.791069,-3.034732,8.679545,1.343270,6.722795,-0.941686,-4.996411,5.597373,-3.620922,-7.175519,3.141921,-6.694247,3.680040,2.216875,5.130810,-9.232824,1.974325,0.883436,-1.612578,6.795667,1.592007,2.656673,-6.286032,-1.787517,-8.105572,3.798802,-0.150019,-9.833019,-4.545598,3.879428,2.955619,-2.652373,9.619433,-0.042504,-7.240272,3.247212,0.573210,-0.860637,-7.758361,-1.737557,6.596620,-8.395903,9.209615,7.894265,7.087741,-8.670666,-6.454607,0.837267,-0.687056,2.460930,-5.892291,-9.471537,4.440835,8.925641,-7.209054,1.262292,-7.519878,6.350658,-3.628202,5.971058,4.742144,1.838704,-6.762208,1.691026,-6.101119,-2.163866,-5.509494,-7.575133,6.290549,5.951060,1.407284,9.556993,-9.564228,-1.627685,3.975806,-0.646960,2.203119,-9.079909,7.424486,-0.118388,-6.799274,-3.950942,4.858154,-1.237453,-5.226540,-9.510436,-9.595203,1.950869,-1.892769,-0.935813,9.388617,2.370556,-5.753637,9.890697,2.583910,7.195154,-2.864577,-6.125068,-6.297724,-4.902422,-7.685390,-7.425558,-0.252546,-2.385458,6.064076,-5.839042,4.176981,4.432144,1.366993,8.868848,-9.858830,-3.717840,-1.146245,3.043917,4.246806,-5.115584,-5.845378,3.757194,-9.252393], dtype = "float64")#candidate|4049|(264,)|const|float64
call_4047 = func_3373_call(relay.reshape(var_4048.astype('float64'), [2, 1, 11]), relay.reshape(const_4049.astype('float64'), [2, 12, 11]), )
call_4050 = func_3373_call(relay.reshape(var_4048.astype('float64'), [2, 1, 11]), relay.reshape(const_4049.astype('float64'), [2, 12, 11]), )
output = relay.Tuple([bop_4037,call_4047,var_4048,const_4049,])
output2 = relay.Tuple([bop_4037,call_4050,var_4048,const_4049,])
func_4055 = relay.Function([var_4035,var_4036,var_4048,], output)
mod['func_4055'] = func_4055
mod = relay.transform.InferType()(mod)
mutated_mod['func_4055'] = func_4055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4055_call = mutated_mod.get_global_var('func_4055')
var_4057 = relay.var("var_4057", dtype = "int32", shape = (15, 2, 15))#candidate|4057|(15, 2, 15)|var|int32
var_4058 = relay.var("var_4058", dtype = "int32", shape = (15, 2, 15))#candidate|4058|(15, 2, 15)|var|int32
var_4059 = relay.var("var_4059", dtype = "float64", shape = (22,))#candidate|4059|(22,)|var|float64
call_4056 = func_4055_call(var_4057,var_4058,var_4059,)
output = call_4056
func_4060 = relay.Function([var_4057,var_4058,var_4059,], output)
mutated_mod['func_4060'] = func_4060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4880 = relay.var("var_4880", dtype = "uint16", shape = (4, 2, 9))#candidate|4880|(4, 2, 9)|var|uint16
const_4881 = relay.const([[[-10,-3,-5,1,-5,-5,9,1,-10],[-4,4,-3,-2,9,-1,-1,3,-9]],[[5,8,-10,8,8,3,-10,2,2],[6,-8,-1,-1,-10,-8,-3,-9,-4]],[[-5,10,2,1,2,-10,1,-10,3],[6,6,10,-4,-9,-3,-4,5,-2]],[[-7,1,-6,-8,6,-4,1,-5,-7],[-3,8,-4,4,1,-1,-8,-6,10]]], dtype = "uint16")#candidate|4881|(4, 2, 9)|const|uint16
bop_4882 = relay.bitwise_or(var_4880.astype('uint16'), relay.reshape(const_4881.astype('uint16'), relay.shape_of(var_4880))) # shape=(4, 2, 9)
func_2916_call = mod.get_global_var('func_2916')
func_2921_call = mutated_mod.get_global_var('func_2921')
const_4910 = relay.const([7.880313,-2.028409,5.991885,4.375281,6.565596,5.197372,-7.273598,8.458581,-9.218298,-2.559807,7.710777,-9.131832,3.696072,-2.125149,4.310688,-3.203481,-7.810583,3.226348,-8.760291,-5.065314,1.208893,-2.690386,6.986931,-5.019966,0.843822,3.133531,-1.199871,-9.786208,7.574398,2.506096,2.105560,6.528773,-7.295671,0.464885,-0.081811,2.106908,8.977957,7.596759,9.965953,-0.141875,-2.221126,9.383318,-9.527434,-5.202509,1.422308,-8.270454,-1.334479,-6.551758,-9.535480,1.142927,8.118412,-3.954727,-9.003856,-7.953544,5.232080,-4.818425,-1.414296,4.684014,9.300986,1.886001,6.774027,1.101084,6.089067,-3.476726,-5.660688,-7.698796,-8.599924,-3.511658,-9.019100,7.124957,-5.461437,-5.139610,4.737447,0.880146,2.964214,2.713154,-7.279330,-1.660534,6.425882,3.660912,-3.825957,9.040067,8.674822,9.829415,-9.500052,7.878299,-4.705157,-8.395776,5.787398,-1.073534,-3.562398,6.049064,2.641000,-8.528956,2.361731,-6.551104,-8.787181,-3.462935,9.299361,4.875943,-4.944298,-6.868470,-2.340336,4.780028,-4.009466,7.738634,4.290997,0.336010,-1.772747,6.157346,-9.344344,-7.492616,-3.271159,-1.970418,-7.552035,1.792322,-4.143441,-2.611817,-8.934857,7.552583,8.634870,3.206140,8.406193,9.534456,4.691789,6.770252,-4.746869,-4.509506,4.410757,2.118846,-1.213301,-4.277936,-8.472248,-0.556895,-1.881806,-3.012451,-2.242933,4.915272,-8.798338,7.967675,6.583579,9.930765,-0.295425,-8.738902,-0.860446,-4.135251,0.472241,-9.058050,0.262648,-4.676723,-0.569074,0.232500,5.278572,-6.892766,-2.147644,4.633500,8.889717,2.400659,-4.533957,4.991609,3.105333,0.966657,-1.015372,8.183639,-1.242355], dtype = "float32")#candidate|4910|(165,)|const|float32
var_4911 = relay.var("var_4911", dtype = "float32", shape = (15, 63))#candidate|4911|(15, 63)|var|float32
var_4912 = relay.var("var_4912", dtype = "float64", shape = (30,))#candidate|4912|(30,)|var|float64
call_4909 = relay.TupleGetItem(func_2916_call(relay.reshape(const_4910.astype('float32'), [11, 15, 1]), relay.reshape(var_4911.astype('float32'), [105, 9]), relay.reshape(var_4912.astype('float64'), [30,]), relay.reshape(var_4911.astype('float32'), [945,]), ), 2)
call_4913 = relay.TupleGetItem(func_2921_call(relay.reshape(const_4910.astype('float32'), [11, 15, 1]), relay.reshape(var_4911.astype('float32'), [105, 9]), relay.reshape(var_4912.astype('float64'), [30,]), relay.reshape(var_4911.astype('float32'), [945,]), ), 2)
func_3879_call = mod.get_global_var('func_3879')
func_3881_call = mutated_mod.get_global_var('func_3881')
const_4925 = relay.const([3.216574,2.627736,-5.899977,8.053121,-8.140435,-2.295390,3.910075,-1.785556], dtype = "float32")#candidate|4925|(8,)|const|float32
call_4924 = relay.TupleGetItem(func_3879_call(relay.reshape(const_4925.astype('float32'), [1, 8, 1])), 2)
call_4926 = relay.TupleGetItem(func_3881_call(relay.reshape(const_4925.astype('float32'), [1, 8, 1])), 2)
output = relay.Tuple([bop_4882,call_4909,const_4910,var_4911,var_4912,call_4924,const_4925,])
output2 = relay.Tuple([bop_4882,call_4913,const_4910,var_4911,var_4912,call_4926,const_4925,])
func_4933 = relay.Function([var_4880,var_4911,var_4912,], output)
mod['func_4933'] = func_4933
mod = relay.transform.InferType()(mod)
var_4934 = relay.var("var_4934", dtype = "uint16", shape = (4, 2, 9))#candidate|4934|(4, 2, 9)|var|uint16
var_4935 = relay.var("var_4935", dtype = "float32", shape = (15, 63))#candidate|4935|(15, 63)|var|float32
var_4936 = relay.var("var_4936", dtype = "float64", shape = (30,))#candidate|4936|(30,)|var|float64
output = func_4933(var_4934,var_4935,var_4936,)
func_4937 = relay.Function([var_4934,var_4935,var_4936,], output)
mutated_mod['func_4937'] = func_4937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5098 = relay.var("var_5098", dtype = "bool", shape = (8, 2, 7))#candidate|5098|(8, 2, 7)|var|bool
var_5099 = relay.var("var_5099", dtype = "bool", shape = (8, 2, 7))#candidate|5099|(8, 2, 7)|var|bool
bop_5100 = relay.logical_or(var_5098.astype('bool'), relay.reshape(var_5099.astype('bool'), relay.shape_of(var_5098))) # shape=(8, 2, 7)
output = bop_5100
output2 = bop_5100
func_5115 = relay.Function([var_5098,var_5099,], output)
mod['func_5115'] = func_5115
mod = relay.transform.InferType()(mod)
var_5116 = relay.var("var_5116", dtype = "bool", shape = (8, 2, 7))#candidate|5116|(8, 2, 7)|var|bool
var_5117 = relay.var("var_5117", dtype = "bool", shape = (8, 2, 7))#candidate|5117|(8, 2, 7)|var|bool
output = func_5115(var_5116,var_5117,)
func_5118 = relay.Function([var_5116,var_5117,], output)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5148 = relay.var("var_5148", dtype = "float32", shape = (8, 11, 9))#candidate|5148|(8, 11, 9)|var|float32
uop_5149 = relay.erf(var_5148.astype('float32')) # shape=(8, 11, 9)
output = relay.Tuple([uop_5149,])
output2 = relay.Tuple([uop_5149,])
func_5153 = relay.Function([var_5148,], output)
mod['func_5153'] = func_5153
mod = relay.transform.InferType()(mod)
var_5154 = relay.var("var_5154", dtype = "float32", shape = (8, 11, 9))#candidate|5154|(8, 11, 9)|var|float32
output = func_5153(var_5154)
func_5155 = relay.Function([var_5154], output)
mutated_mod['func_5155'] = func_5155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5594 = relay.var("var_5594", dtype = "float64", shape = (3, 3, 3))#candidate|5594|(3, 3, 3)|var|float64
var_5595 = relay.var("var_5595", dtype = "float64", shape = (3, 3, 3))#candidate|5595|(3, 3, 3)|var|float64
bop_5596 = relay.divide(var_5594.astype('float64'), relay.reshape(var_5595.astype('float64'), relay.shape_of(var_5594))) # shape=(3, 3, 3)
func_5153_call = mod.get_global_var('func_5153')
func_5155_call = mutated_mod.get_global_var('func_5155')
var_5603 = relay.var("var_5603", dtype = "float32", shape = (792,))#candidate|5603|(792,)|var|float32
call_5602 = relay.TupleGetItem(func_5153_call(relay.reshape(var_5603.astype('float32'), [8, 11, 9])), 0)
call_5604 = relay.TupleGetItem(func_5155_call(relay.reshape(var_5603.astype('float32'), [8, 11, 9])), 0)
output = relay.Tuple([bop_5596,call_5602,var_5603,])
output2 = relay.Tuple([bop_5596,call_5604,var_5603,])
func_5607 = relay.Function([var_5594,var_5595,var_5603,], output)
mod['func_5607'] = func_5607
mod = relay.transform.InferType()(mod)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5607_call = mutated_mod.get_global_var('func_5607')
var_5609 = relay.var("var_5609", dtype = "float64", shape = (3, 3, 3))#candidate|5609|(3, 3, 3)|var|float64
var_5610 = relay.var("var_5610", dtype = "float64", shape = (3, 3, 3))#candidate|5610|(3, 3, 3)|var|float64
var_5611 = relay.var("var_5611", dtype = "float32", shape = (792,))#candidate|5611|(792,)|var|float32
call_5608 = func_5607_call(var_5609,var_5610,var_5611,)
output = call_5608
func_5612 = relay.Function([var_5609,var_5610,var_5611,], output)
mutated_mod['func_5612'] = func_5612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5906 = relay.var("var_5906", dtype = "int64", shape = ())#candidate|5906|()|var|int64
var_5907 = relay.var("var_5907", dtype = "int64", shape = (13, 7, 13))#candidate|5907|(13, 7, 13)|var|int64
bop_5908 = relay.minimum(var_5906.astype('int64'), var_5907.astype('int64')) # shape=(13, 7, 13)
func_2386_call = mod.get_global_var('func_2386')
func_2389_call = mutated_mod.get_global_var('func_2389')
const_5917 = relay.const([-7,10,1,9,-8,10,5,1,-8,10,3,-2,8,4,-8,-10,3,-8,3,-4,2,-9,5,-9,-10,-8,10,10,9,-5,-10,1,6,-8,5,-1,7,4,-9,-4,-3,-6,4,8,-9,-10,1,-10,1,7,1,4,10,-9,10,-10,10,5,-1,9,9,8,-1,6,-8,9,-3,-9,-1,-1,-6,4,-8,-9,-4,-8,-8,-3,-5,-4,-2,-2,5,7,2,5,-1,-1,9,-8,8,6,-2,-8,7,-10,4,5,5,-5,2,-2,-10,3,-3,-2,7,-1,-8,6,3,-6,9,-4,1,-9,9,5,-4,-9,-9,2,-9,-9,-3,2,-10,-1,-10,-3,-6,4,-2,7,9,-5,-6,-8,-7,4,1,-6,-6,2,-1,7,-5,-5,3,-5,9,-3,-4,-2,8,-2,5,2,2,7,8,5,4,2,-3,10,-6,6,5,-10,-7,-4,10,-4,-9,-10,-5,-2,-4,-6,3,8,10,9,2,-10,4,1,-9,8,4,-7,-10,7,7,-2,3,10,-4,1,-10,6,3,8,2,2,-2,6,9,-8,9,5,-10,7,5,9,-9,7,-2,-5,-9,-10,-5,-4,10,-9,4,2,10,-7,1,10,2,-3,-10,-7,-5,-1,3,-5,7,-3,9,-4,-7,5,8,-8,-3,-5,1,-4,-8,9,8,4,9,6,-5,10,-3,1,-10,-4,-2,-8,10,3,6,-1,5,2,5,3,-10,3,8,5,-3,-3,-7,-9,-4,4,2,4,3,3,-4,9,9,-7,3,7,10,-10,2,3,2,3,5,3,-5,-7,5,5,7,3,4,6,9,-3,7,-4,-3,5,8,7,6,-4,-9,7,1,-6,1,2,-9,-10,1,7,4,-4,-10,6,5,9,9,10,7,6,9,7,-3,6,4,9,-3,-10,4,-9,4,-2,5,4,9,9,7,8,4,5,-9,-5,9,-7,1,-3,3,9,-7,-9,2,4,7,-1,-8,-10,5,9,-1,9,4,7,9,-7,-1,-3,-6,2,1,-4,-2,-5,-10,-2,-3,-2,-5,6,9,8,-10,10,-2,-1,8,1,10,8,4,-2,1,6,5,7,3,-1,-10,1,5,-2,-7,-4,3,-8,10,-4,4,-6,-1,-10,-10,-9,3,-10,-2,-1,7,6,5,-5,-2,7,-10,-4,6,7,-6,-4,-6,5,-7,5,-2,-4,-6,4,-9,-5,-2,1,-2,3,3,-7,2,-7,10,4,4,9,-10,-8,-3,-9,-2,4,7,2,-5,-8,-2,-9,-8,4,-3,-2,5,-2,-4,5,1,2,7,7,2,10,-2,-6,-1,4,3,-7,-7,9,9,-9,-3,6,4,3,-1,-2,3,-7,8,10,-7,-4,-5,-10,-8,3,-10,3,-4,-2,3,-2,-3,3,-8,5,-10,-2,1,-7,10,2,1,-6,4,-10,3,3,10,-7,7,-6,10,-9,-9,-2,8,-9,-1,-2,2,-2,-5,-8,1,3,-9,4,-6,-4,3,4,-2,-10,9,-8,5,5,-6,-7,10,6,1,-3,-7,4,3,-1,2,-9,-3,-1,10,-2,-10,-5,3,4], dtype = "int64")#candidate|5917|(594,)|const|int64
call_5916 = relay.TupleGetItem(func_2386_call(relay.reshape(const_5917.astype('int64'), [11, 6, 9]), relay.reshape(const_5917.astype('int64'), [11, 6, 9]), ), 0)
call_5918 = relay.TupleGetItem(func_2389_call(relay.reshape(const_5917.astype('int64'), [11, 6, 9]), relay.reshape(const_5917.astype('int64'), [11, 6, 9]), ), 0)
uop_5927 = relay.atan(bop_5908.astype('float32')) # shape=(13, 7, 13)
func_3373_call = mod.get_global_var('func_3373')
func_3377_call = mutated_mod.get_global_var('func_3377')
var_5930 = relay.var("var_5930", dtype = "float64", shape = (22,))#candidate|5930|(22,)|var|float64
var_5931 = relay.var("var_5931", dtype = "float64", shape = (264,))#candidate|5931|(264,)|var|float64
call_5929 = func_3373_call(relay.reshape(var_5930.astype('float64'), [2, 1, 11]), relay.reshape(var_5931.astype('float64'), [2, 12, 11]), )
call_5932 = func_3373_call(relay.reshape(var_5930.astype('float64'), [2, 1, 11]), relay.reshape(var_5931.astype('float64'), [2, 12, 11]), )
func_2727_call = mod.get_global_var('func_2727')
func_2732_call = mutated_mod.get_global_var('func_2732')
var_5938 = relay.var("var_5938", dtype = "float32", shape = (5, 52))#candidate|5938|(5, 52)|var|float32
const_5939 = relay.const([True,False,True,False,True,True], dtype = "bool")#candidate|5939|(6,)|const|bool
var_5940 = relay.var("var_5940", dtype = "float64", shape = (30,))#candidate|5940|(30,)|var|float64
call_5937 = relay.TupleGetItem(func_2727_call(relay.reshape(var_5938.astype('float32'), [13, 4, 5]), relay.reshape(const_5939.astype('bool'), [3, 2]), relay.reshape(var_5940.astype('float64'), [30,]), ), 5)
call_5941 = relay.TupleGetItem(func_2732_call(relay.reshape(var_5938.astype('float32'), [13, 4, 5]), relay.reshape(const_5939.astype('bool'), [3, 2]), relay.reshape(var_5940.astype('float64'), [30,]), ), 5)
output = relay.Tuple([call_5916,const_5917,uop_5927,call_5929,var_5930,var_5931,call_5937,var_5938,const_5939,var_5940,])
output2 = relay.Tuple([call_5918,const_5917,uop_5927,call_5932,var_5930,var_5931,call_5941,var_5938,const_5939,var_5940,])
func_5946 = relay.Function([var_5906,var_5907,var_5930,var_5931,var_5938,var_5940,], output)
mod['func_5946'] = func_5946
mod = relay.transform.InferType()(mod)
mutated_mod['func_5946'] = func_5946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5946_call = mutated_mod.get_global_var('func_5946')
var_5948 = relay.var("var_5948", dtype = "int64", shape = ())#candidate|5948|()|var|int64
var_5949 = relay.var("var_5949", dtype = "int64", shape = (13, 7, 13))#candidate|5949|(13, 7, 13)|var|int64
var_5950 = relay.var("var_5950", dtype = "float64", shape = (22,))#candidate|5950|(22,)|var|float64
var_5951 = relay.var("var_5951", dtype = "float64", shape = (264,))#candidate|5951|(264,)|var|float64
var_5952 = relay.var("var_5952", dtype = "float32", shape = (5, 52))#candidate|5952|(5, 52)|var|float32
var_5953 = relay.var("var_5953", dtype = "float64", shape = (30,))#candidate|5953|(30,)|var|float64
call_5947 = func_5946_call(var_5948,var_5949,var_5950,var_5951,var_5952,var_5953,)
output = call_5947
func_5954 = relay.Function([var_5948,var_5949,var_5950,var_5951,var_5952,var_5953,], output)
mutated_mod['func_5954'] = func_5954
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6038 = relay.var("var_6038", dtype = "int64", shape = (9, 1, 2))#candidate|6038|(9, 1, 2)|var|int64
var_6039 = relay.var("var_6039", dtype = "int64", shape = (9, 9, 2))#candidate|6039|(9, 9, 2)|var|int64
bop_6040 = relay.subtract(var_6038.astype('int64'), var_6039.astype('int64')) # shape=(9, 9, 2)
func_5115_call = mod.get_global_var('func_5115')
func_5118_call = mutated_mod.get_global_var('func_5118')
const_6044 = relay.const([[False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True],[False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True]], dtype = "bool")#candidate|6044|(2, 56)|const|bool
call_6043 = func_5115_call(relay.reshape(const_6044.astype('bool'), [8, 2, 7]), relay.reshape(const_6044.astype('bool'), [8, 2, 7]), )
call_6045 = func_5115_call(relay.reshape(const_6044.astype('bool'), [8, 2, 7]), relay.reshape(const_6044.astype('bool'), [8, 2, 7]), )
bop_6059 = relay.multiply(call_6043.astype('int16'), relay.reshape(const_6044.astype('int16'), relay.shape_of(call_6043))) # shape=(8, 2, 7)
bop_6062 = relay.multiply(call_6045.astype('int16'), relay.reshape(const_6044.astype('int16'), relay.shape_of(call_6045))) # shape=(8, 2, 7)
func_5607_call = mod.get_global_var('func_5607')
func_5612_call = mutated_mod.get_global_var('func_5612')
const_6082 = relay.const([8.310046,9.543259,-5.748718,7.435254,5.296658,-4.010161,1.176045,-3.864609,-4.349319,-6.459710,-0.264340,-9.300300,-6.062440,4.823248,-5.272631,-3.228193,5.784299,9.587283,8.115943,-4.448861,7.544557,-2.337082,-0.142799,8.791740,9.507982,-5.714058,-7.253432], dtype = "float64")#candidate|6082|(27,)|const|float64
var_6083 = relay.var("var_6083", dtype = "float32", shape = (792,))#candidate|6083|(792,)|var|float32
call_6081 = relay.TupleGetItem(func_5607_call(relay.reshape(const_6082.astype('float64'), [3, 3, 3]), relay.reshape(const_6082.astype('float64'), [3, 3, 3]), relay.reshape(var_6083.astype('float32'), [792,]), ), 0)
call_6084 = relay.TupleGetItem(func_5612_call(relay.reshape(const_6082.astype('float64'), [3, 3, 3]), relay.reshape(const_6082.astype('float64'), [3, 3, 3]), relay.reshape(var_6083.astype('float32'), [792,]), ), 0)
func_2408_call = mod.get_global_var('func_2408')
func_2410_call = mutated_mod.get_global_var('func_2410')
var_6091 = relay.var("var_6091", dtype = "float32", shape = (30,))#candidate|6091|(30,)|var|float32
call_6090 = func_2408_call(relay.reshape(var_6091.astype('float32'), [2, 1, 15]))
call_6092 = func_2408_call(relay.reshape(var_6091.astype('float32'), [2, 1, 15]))
bop_6101 = relay.greater(bop_6059.astype('bool'), relay.reshape(const_6044.astype('bool'), relay.shape_of(bop_6059))) # shape=(8, 2, 7)
bop_6104 = relay.greater(bop_6062.astype('bool'), relay.reshape(const_6044.astype('bool'), relay.shape_of(bop_6062))) # shape=(8, 2, 7)
bop_6109 = relay.power(call_6081.astype('float32'), relay.reshape(const_6082.astype('float32'), relay.shape_of(call_6081))) # shape=(3, 3, 3)
bop_6112 = relay.power(call_6084.astype('float32'), relay.reshape(const_6082.astype('float32'), relay.shape_of(call_6084))) # shape=(3, 3, 3)
output = relay.Tuple([bop_6040,var_6083,call_6090,var_6091,bop_6101,bop_6109,])
output2 = relay.Tuple([bop_6040,var_6083,call_6092,var_6091,bop_6104,bop_6112,])
func_6113 = relay.Function([var_6038,var_6039,var_6083,var_6091,], output)
mod['func_6113'] = func_6113
mod = relay.transform.InferType()(mod)
mutated_mod['func_6113'] = func_6113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6113_call = mutated_mod.get_global_var('func_6113')
var_6115 = relay.var("var_6115", dtype = "int64", shape = (9, 1, 2))#candidate|6115|(9, 1, 2)|var|int64
var_6116 = relay.var("var_6116", dtype = "int64", shape = (9, 9, 2))#candidate|6116|(9, 9, 2)|var|int64
var_6117 = relay.var("var_6117", dtype = "float32", shape = (792,))#candidate|6117|(792,)|var|float32
var_6118 = relay.var("var_6118", dtype = "float32", shape = (30,))#candidate|6118|(30,)|var|float32
call_6114 = func_6113_call(var_6115,var_6116,var_6117,var_6118,)
output = call_6114
func_6119 = relay.Function([var_6115,var_6116,var_6117,var_6118,], output)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6202 = relay.var("var_6202", dtype = "float32", shape = (14, 6, 4))#candidate|6202|(14, 6, 4)|var|float32
uop_6203 = relay.log2(var_6202.astype('float32')) # shape=(14, 6, 4)
output = uop_6203
output2 = uop_6203
func_6245 = relay.Function([var_6202,], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
var_6246 = relay.var("var_6246", dtype = "float32", shape = (14, 6, 4))#candidate|6246|(14, 6, 4)|var|float32
output = func_6245(var_6246)
func_6247 = relay.Function([var_6246], output)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6348 = relay.const([[[3.825240,-7.077600,-9.407053,2.258334,3.343761,-0.221643,-5.174001,-6.162014,9.811170,-2.137361,6.365589,-0.716557],[4.218137,2.431648,3.481516,-3.794471,-4.909654,4.434808,-2.562075,-3.759381,0.084746,-6.684779,-8.241319,7.136393]],[[-5.480902,3.958575,-5.070551,9.008499,-3.440744,7.376392,-6.229504,-3.309667,2.332732,1.925047,-6.005703,8.033642],[-1.186853,7.058348,6.293324,-9.908263,-1.752474,8.169864,-1.683531,8.074295,-7.010329,-4.859124,-3.161309,7.339511]],[[-1.715463,9.608137,-7.087457,4.668743,7.546615,3.838273,1.800009,-8.288988,-1.029825,4.941377,-0.195283,8.924199],[1.452703,5.807475,3.170499,5.926384,2.149412,-2.837811,-3.692795,-4.871766,3.093187,-3.707941,-9.021791,-0.319991]],[[-0.968364,6.510888,-4.146742,1.629639,-6.320673,-5.384134,1.501266,-4.580052,-0.815232,9.779566,-0.579212,-9.753885],[1.264978,-6.109878,8.379089,-4.110634,-7.943205,6.151635,4.403394,1.536387,3.562684,8.973252,5.400046,-2.484026]],[[-6.171076,-7.690451,5.447004,-2.435413,8.802413,-2.947172,-5.326337,5.939585,-5.759923,5.740778,1.057762,-4.392559],[-9.375478,-9.923491,9.389261,-3.196075,-4.287533,-1.639492,4.131191,-1.624701,9.313353,-6.879782,-4.384376,3.915187]],[[-4.362360,-7.175245,2.470823,-0.653101,-2.819092,2.104197,4.335755,2.380415,4.117754,-5.303608,0.006064,0.883048],[3.931173,-5.715822,9.288444,0.152041,-7.598803,-0.094813,-4.714395,-6.444550,5.990460,-0.520265,3.931962,-6.680452]],[[5.654132,5.847642,8.028836,6.689112,-2.800044,-6.495140,2.943899,8.298998,3.998982,7.410804,2.917491,-8.254381],[-8.892993,5.276094,2.066915,-8.640927,-2.229369,2.808617,-5.945991,4.614048,-5.909439,2.615861,1.000458,1.495318]],[[-5.850835,-0.698276,-7.625210,-9.445876,6.219450,-2.707741,9.795276,6.375370,3.893507,8.075739,3.981059,-6.175557],[0.314649,-5.125405,2.617475,4.052278,-0.030899,1.668428,0.193265,6.729634,9.778377,7.124353,-3.955091,3.581129]],[[9.480875,-8.935685,9.098388,-7.189519,-3.757421,6.974709,-8.391891,1.604924,-3.193544,-9.535441,-4.020946,-4.852372],[3.589787,-7.101200,-2.347623,5.286877,-7.818397,-8.347689,2.603493,-8.972384,6.570124,8.912764,2.594794,1.089631]],[[9.696383,3.124261,4.203593,4.955051,6.262052,5.362811,9.545010,7.185368,-7.777167,0.987142,-0.993038,0.232772],[9.127262,3.355495,2.128147,-0.672410,-3.089933,-6.186858,3.590080,1.921966,8.473050,-3.196691,3.633533,-5.895273]],[[-9.208688,2.227556,-2.970065,-2.879168,4.147685,-2.407609,-9.822751,1.081760,-9.370321,3.827814,-6.574112,-8.761440],[4.389405,-2.984214,-5.849099,-4.466802,3.121670,5.776191,-1.084291,5.910870,4.568191,-8.194529,9.309465,1.065111]],[[7.645799,2.461001,9.679607,0.964428,3.302144,7.151720,-8.577662,-5.828122,-3.457067,3.355979,8.186694,-0.972084],[-6.351363,9.344595,3.551221,4.916332,8.250870,-9.525053,-7.572745,1.292947,5.822811,9.485046,-6.304596,8.067468]],[[5.347253,4.396338,-0.439371,-7.042768,-7.137302,-0.388182,-8.131830,-5.472529,-3.439436,-1.497422,-1.455879,-9.455553],[-0.567596,3.078487,7.563588,4.962496,-8.189441,-6.915032,8.400297,0.842052,-3.215342,0.780004,-7.438225,-2.098619]],[[-3.881927,2.529149,-3.684608,-9.970543,-4.561886,0.646080,3.742950,-2.610397,2.141027,-8.611797,3.761153,-1.986585],[8.188750,-6.826520,5.630334,-1.097903,1.801589,-9.318476,-4.230423,0.442467,-2.591232,-1.228619,0.911641,5.120367]],[[5.622790,9.285834,-6.969883,-6.431313,4.064517,9.584983,0.620378,-3.736860,0.683797,-4.599562,-3.656362,-6.424621],[-0.024687,-7.970490,-2.039620,-2.760125,5.452371,-1.156985,1.122850,2.153916,-1.147006,4.714665,-8.278815,-5.781180]],[[-9.740054,6.880418,-5.546797,-1.294483,5.348556,5.172441,-7.713699,4.215571,0.062605,6.551056,2.580014,-3.085330],[4.715231,7.896420,4.419105,-8.928927,6.291076,-5.444390,7.446919,-5.949516,2.042340,-8.704061,-5.446021,2.422682]]], dtype = "float32")#candidate|6348|(16, 2, 12)|const|float32
var_6349 = relay.var("var_6349", dtype = "float32", shape = (16, 2, 12))#candidate|6349|(16, 2, 12)|var|float32
bop_6350 = relay.greater(const_6348.astype('bool'), relay.reshape(var_6349.astype('bool'), relay.shape_of(const_6348))) # shape=(16, 2, 12)
func_3233_call = mod.get_global_var('func_3233')
func_3236_call = mutated_mod.get_global_var('func_3236')
const_6354 = relay.const([[1.084126],[-7.357382],[5.467407],[1.274816],[-6.341979],[6.769400],[-1.589391],[-3.790844],[1.975559],[-4.367830],[7.851517],[-7.482543],[-7.581062],[-3.836370],[9.555068],[-9.225901],[9.883531],[5.412467],[-0.328706],[-2.410701],[5.916227],[8.631937],[-5.052332],[-2.346217],[-9.400159],[0.471685],[-8.188017],[-9.437942],[7.209447],[1.597614],[-5.908906],[5.560066],[-2.535931],[-9.999397],[-7.570130],[4.756102],[-3.064247],[8.902607],[9.089000],[5.452254],[-2.731059],[8.129062],[-9.752826],[5.215724],[-5.641591],[-4.695429],[9.231604],[3.351452],[-0.753558],[-9.970827],[-6.900681],[-0.257893],[-2.568753],[1.610111],[7.931345],[0.205667],[9.886801],[-3.476473],[8.494929],[9.580593],[0.259279],[-8.542357],[-8.332928],[-1.094159],[8.991591],[3.529056],[6.073691],[9.715504],[8.081073],[2.937015],[9.740803],[-9.140850],[2.259212],[-8.605882],[-8.107869],[1.678938],[2.511429],[-7.756604],[4.112248],[-3.325664],[7.201425],[-1.074118],[-0.086235],[-3.431596],[-0.182913],[-4.290823],[9.436371],[3.940607],[-4.209622],[2.480442],[7.100299],[-1.368036],[-6.894047],[-2.668249],[4.434986],[-9.956277],[-2.336265],[6.284462],[-0.482799],[-2.336300],[8.056688],[-1.993034],[0.134244],[-7.113208],[7.052030],[1.411220],[-9.085735],[6.655884],[-0.250108],[-0.625863],[2.180056],[2.764334],[5.863605],[-4.062569],[-7.390547],[-2.152207],[5.095376],[-0.587346],[-1.528015],[-0.681068],[-4.815539],[5.735923],[0.069013],[1.868870],[-8.248104],[-9.365321],[3.041047],[-5.792038],[-6.644439],[-0.102532],[1.556534],[0.902620],[-8.598598],[-2.677752],[-9.446451],[-2.975566],[-2.153734],[8.673594],[5.100594],[7.730543],[-2.235204],[2.433033],[2.754261],[-8.613851],[-4.905365],[0.347328],[2.997479],[-5.139508],[-7.572591],[4.523042],[-3.322699],[-2.819122],[7.141414],[-2.749355],[-8.520608],[-2.929906],[2.149627],[-9.732803],[1.376522],[1.691257],[-6.162021],[-8.906575],[6.622473],[3.911748],[6.251641],[-9.037336],[-5.201113],[-8.560842],[-6.041070],[-5.471878],[-6.875444],[2.074639],[-5.996076],[2.470315],[-8.943978],[0.648036],[4.386748],[-3.008883],[2.769583],[-5.294422],[-4.807511],[-9.451124],[8.408486],[-9.465385],[1.590910],[1.954970],[-6.502265],[-0.586741],[-7.509498],[-7.363147],[-4.005202],[6.417779],[7.074868],[-0.187935],[2.716708],[2.296018],[7.171956],[5.135576],[-7.650408],[-5.453971],[-0.393974],[-8.198404],[-5.939797],[-3.437611],[-8.420142],[1.206087],[-8.438945],[-0.110953],[-0.752060],[-0.053463],[0.876964],[-2.958690],[3.407035],[-5.400765],[6.446821],[-5.040801],[-5.131583],[-7.792500],[0.796719],[8.505521],[-7.165570],[-7.068874],[-5.357352],[-6.523894],[5.538882],[-1.657087],[8.241585],[9.791554],[-6.963314],[-6.475122],[-5.494050],[-9.148812],[5.246879],[7.491111],[7.996263],[-1.193059],[8.677931],[-9.121206],[4.128711],[-8.117966],[-3.356163],[-3.249164],[2.666046],[-6.004643],[5.034793],[-5.686086],[9.280985],[-5.885839],[1.461536],[4.453346],[-3.167495],[-5.280415],[-3.031066],[7.889579],[-2.101350],[-0.853673],[8.356187],[-5.389734],[-5.355305],[-9.281634],[0.639337],[4.519499],[1.909133],[-7.427306],[4.426185],[0.949804],[5.725990],[9.824109],[2.731526],[-4.760835],[7.629934],[-4.728251],[2.111110],[4.299069],[3.430209],[3.266668],[-0.478632],[-3.262846],[-0.066190],[7.058640],[-1.738465],[8.924207],[-6.830224],[-3.186686],[-5.210825],[5.539833],[8.539090],[-6.420309],[-6.827582],[1.410332],[0.552479],[6.796835],[4.854050],[-2.865178],[-9.589847],[-5.572040],[-9.780013],[-4.869417],[-5.241241],[-7.885601],[4.680175],[-1.142938],[5.427102],[2.803264],[3.250956],[-9.801161],[2.817669],[-3.958157],[0.933696],[-4.423695],[-6.975445],[-4.546691],[1.248830],[-5.181390],[4.273307],[-6.458714],[-0.226080],[-1.832590],[0.106034],[-7.996991],[-4.090625],[3.881625],[-9.786711],[-9.727186],[-7.157472],[5.736938],[8.685716],[-7.728071],[-6.271482],[7.865679],[3.486997],[3.518602],[-7.405472],[-9.320212],[2.207389],[-5.763257],[7.591733],[-4.081254],[-1.539311],[2.442836],[8.284238],[2.978158],[-4.849954],[0.031286],[-3.418921],[3.239034],[-1.227248],[-5.656603],[-0.065219],[-4.391397],[0.023243],[6.760623],[3.850335],[-2.793595],[-3.374045],[-0.772777],[-8.092411],[8.865838],[6.166321],[5.020904],[3.511314],[-3.773101],[2.539260],[-2.728006],[9.470444],[-5.384175],[-2.420455],[2.172269],[7.535682],[5.532047],[6.669027],[6.218827],[4.470697],[-6.600738],[-2.412219],[2.214276],[-0.524578],[9.731101],[-2.436576],[3.662167],[4.816165],[-6.341414],[7.811436],[7.997847],[1.095449],[9.693062],[-9.860789],[-7.837416],[7.860048],[3.843202],[-3.739928],[9.780230],[-4.000222],[6.860417],[-6.235268],[-3.024469],[-7.832512],[5.823194],[-0.448188],[-6.776817],[3.352788],[-2.384196],[-2.875308],[-3.234948],[5.363599],[2.838149],[-5.214429],[8.459820],[-7.488249],[4.599315],[4.240579],[-5.725574],[-9.157740],[-3.026000],[-5.962126],[-1.183664],[-3.436816],[5.896112],[0.697449],[-7.354314],[0.515196],[-8.276286],[-1.293274],[-0.489311],[-7.565108],[5.459507],[1.034214],[6.040640],[-8.047290],[-8.835306],[-0.242084],[-2.470010],[1.302127],[-5.719682],[9.448091],[-4.915461],[-6.054452],[-9.572163],[-1.915851],[8.773978],[-0.677171],[-6.184238],[-1.032004],[4.508107],[1.681237],[4.708452],[-6.335098],[-2.352354],[-1.637333],[-1.808549],[9.902936],[-9.739392],[-5.117899],[-8.693519],[-6.540717],[0.850233],[9.384095],[-9.382130],[-7.959256],[-9.650382],[-5.368920],[8.149286],[9.490898],[-9.537615],[-3.584137],[-9.909348],[1.023712],[-9.570499],[2.510084],[-9.421862],[-8.629175],[7.530593],[-5.531603],[-8.795586],[1.226278],[-7.794878],[-1.408917],[4.786867],[-8.547545],[1.184322],[-2.195640],[-1.345444],[1.406819],[7.041403],[-3.447049],[-6.823810],[-3.402733],[-6.202575],[0.063268],[1.472079],[0.078165],[-7.192615],[4.413817],[1.548146],[-2.426628],[4.552034],[-0.226203],[-3.228186],[-6.649275],[6.694368],[-6.903753],[8.309526],[6.021729],[5.231077],[-4.921008],[0.719249],[-6.723327],[-6.093878],[4.447478],[3.104416],[-3.761936],[3.255742],[4.270581],[-8.144076],[1.621997],[-7.838886],[2.464840],[-4.243276],[4.478650],[-4.735898],[-6.059077],[6.563518],[3.401361],[3.773218],[6.593046],[-6.207084],[7.929801],[0.345355],[-0.163180],[-8.764461],[7.879473],[8.386074],[-3.600296],[7.752233],[5.558054],[-7.013299],[5.410950],[-4.804650],[2.795997],[-0.361313],[6.810794],[-7.242075],[-8.299446],[6.943522],[-4.199437],[-8.470011],[-4.178248],[-4.400545],[-6.534688],[-6.462944],[2.535049],[8.492444],[-5.233108],[-9.808782],[9.180664],[-8.242039],[9.663404],[0.385216],[-6.382723],[-6.302719],[-3.341854],[-0.043214],[-0.867195],[-9.035369],[-7.771002],[-9.572806],[0.129171],[1.650423],[-9.968945],[3.987001],[-5.918735],[-3.675611],[-4.217804],[4.799181],[-8.921843],[8.644779],[-1.616068],[7.081430],[0.693725],[4.581486],[-6.008068],[1.018846],[-2.161910],[2.963494],[-1.481721],[-4.170560],[-8.020807],[9.412840],[9.933843],[-8.859398],[-8.997907],[-9.486251],[7.476265],[-8.093049],[1.733613],[5.944769],[7.669779],[1.635581],[0.658399],[-9.895341],[9.171692],[-1.129363],[7.052499],[0.607515],[-0.349046],[-6.742752],[6.083514],[7.875345],[-9.083021],[4.090471],[-4.280817],[4.525843],[-6.844140],[2.944132],[1.537642],[9.964894],[-6.394136],[8.799717],[2.733138],[-3.741333],[-9.431584],[7.094253],[-9.325751],[-6.277919],[-3.217194],[-8.376903],[-9.864943],[-7.652824],[9.938221],[-4.206702],[-2.372601],[1.473617],[8.405137],[-4.820274],[9.388339],[-0.244747],[-3.763916],[-7.549298],[5.547416],[1.278626],[-8.141656],[-5.144058],[-4.647876],[7.984584],[-9.987662],[-2.002102],[-8.700838],[1.886366],[-0.916007],[-4.353403],[2.575355],[7.620878],[-9.011855],[-9.745621],[1.507753],[0.287583],[2.913698],[-4.903090],[4.661090],[8.767864],[-7.203361],[-9.236896],[-7.284571],[-3.333000],[8.446503],[-7.552399],[-7.856901],[-2.781864],[4.959475],[-9.226705],[9.431883],[8.029562],[9.826276],[-7.368922],[4.544080],[-6.935533],[7.058392],[-2.623281],[-6.474306],[3.028306],[-7.787353],[-7.881391],[9.385352],[0.886835],[5.380069],[5.581880],[-5.515006],[-5.358503],[0.257980],[-6.897930],[-6.822320],[-4.550275],[1.625224],[8.449913],[9.536423],[7.718537],[1.352970],[-5.262662],[7.283758],[5.741136],[2.120990],[4.605912],[5.864553],[7.287624],[-8.673805],[-6.048980],[-3.914233],[-2.443620],[6.901122],[-5.187729],[-8.103909],[-9.449339],[2.903785],[4.181210],[4.471920],[-0.701789],[1.556919],[-5.042764],[4.174724],[9.352350],[3.716676],[-6.923111],[-2.163821],[1.223764],[7.250746],[7.753918],[5.538371],[8.063110],[-6.388225],[7.399287],[6.580458],[8.718991],[4.152579],[-0.251678],[4.688862],[-1.904886],[6.345755],[1.326062],[-1.450217],[9.488186],[-6.127061],[8.888058],[4.604803],[-1.061809],[5.577927],[0.351903],[3.285876],[-0.754424],[-2.127171],[1.451944],[-2.885896],[-1.244623],[4.799497],[-6.033048],[-7.044726],[7.435616],[-9.265371],[-3.593765],[4.086583],[1.375633],[7.793033],[8.242138],[1.404610],[9.087912],[-3.239213],[-5.899412],[4.753495],[-9.970538],[-4.387102],[-4.563865],[1.504525],[1.083063],[-2.022990],[4.709257],[-9.368052],[4.026727],[7.611722],[7.679959],[-3.380575],[-9.991818],[9.740903],[3.149326],[3.520037],[1.945119],[-1.945177],[-2.617321],[8.139222],[5.748851],[8.286561],[2.223973],[-0.955533],[4.396138],[-4.929383],[-5.460780],[-7.619553],[9.486154],[6.028267],[-9.743431],[3.631597],[-1.141904],[4.611972],[7.269054],[-9.859287],[-6.835991],[6.489372],[-6.663866],[-5.594095],[5.993636],[-7.204072],[1.334824],[-0.354672],[-6.315317],[-6.813783],[-8.626222],[7.729071],[4.542484],[3.147450],[9.751736],[-2.464784],[3.457548],[-3.860020],[9.185254],[-7.769962],[9.403860],[-8.529288],[1.498089],[2.822892],[3.248704],[-8.848557],[3.920536],[-1.990126],[-2.324983],[5.626975],[-3.439933],[2.484288],[4.180281],[2.509693],[7.780450],[9.332011],[-7.296952],[7.954798],[-6.303173],[8.750353],[-8.897795],[2.782338],[8.202696],[7.641552],[4.194658],[-4.004671],[-7.485143],[-6.018629],[3.247586],[-7.999264],[0.794918],[6.121647],[5.329281],[4.514292],[9.175004],[2.062614],[-2.234169],[-2.664911],[2.073787],[1.736727],[-0.656292],[-9.608402],[8.947227],[9.319474],[-6.302464],[8.876791],[3.187727],[5.671987],[-4.963724],[1.136516],[7.970719],[7.954830],[7.833041],[-8.834855],[1.152083],[-2.471115],[8.468239],[-7.712082],[3.559970],[1.273610],[2.328590],[5.575952],[2.317984],[-7.250546],[2.446933],[9.702982],[-2.626907],[-7.493518],[-2.206261],[-5.223492],[-2.260741],[-9.145136],[4.972808],[-8.438639],[-4.528115],[-7.893915],[4.309746],[-3.008758],[-1.318645],[-0.427494],[-6.740146],[1.235614],[-4.759465],[6.198896],[-3.887147],[5.038564],[-7.230327],[-0.652918],[-1.477362],[-3.313513],[-3.542142],[4.542069],[-0.606960],[-9.977304],[-2.161945],[-9.940335],[-4.441235],[0.564108],[2.176647],[-2.896320],[8.841766],[-7.920157],[6.969622],[2.015122],[1.049095],[-6.147151],[7.130801],[8.148728],[3.513537],[-5.221549],[-6.901309],[8.576212],[-0.481669],[-0.875235],[3.453405],[0.611275],[-6.253921],[-5.016536],[-5.825544],[8.644939],[8.269130],[0.762233],[9.334707],[-3.220671],[-4.990895],[-9.454269],[2.914535],[-9.839893],[5.774350],[1.110299],[6.548953],[2.798537],[-4.628646],[6.697883],[2.674068],[-1.143186],[-6.784652],[7.205885],[8.435517],[-8.532092],[1.947283],[-8.342262],[-1.404505],[-4.071281],[1.377319],[-6.295292],[4.726802],[-0.727563],[7.274733],[-2.171093],[5.342986],[6.039047],[7.181872],[6.742702],[-0.934853],[-9.369108],[0.408009],[-9.421591],[0.224686],[6.167110],[-8.268697],[3.851120],[1.758126],[2.742605],[1.181592],[3.349936],[2.188917],[-3.106739],[-6.585155],[7.776890],[-5.300259],[-2.338875],[-0.206957],[4.835937],[4.846909],[5.260995],[7.112573],[2.195120],[-6.192964],[3.725704],[0.318967],[-5.236868],[-1.008166],[4.900723],[3.975516],[7.738102],[-2.025712],[5.852661],[8.311390],[2.822135],[1.336185],[-6.733310],[9.166671],[5.431494],[5.463272],[-5.887966],[4.372661],[4.912489],[4.445986],[-6.779745],[7.706622],[-0.053902],[9.666584],[-0.648182],[0.710199],[-3.100500],[-8.882388],[4.939822],[-4.268912],[-3.762570],[7.521465],[-2.187059],[4.563079],[-6.513936],[-4.438502],[2.614613],[9.544977],[-6.813398],[8.356886],[9.804977],[-3.516527],[2.622229],[-8.020293],[-8.914836],[5.250314],[-7.699693],[1.919564],[-0.665556],[-2.681087],[-3.549228],[4.701922],[-9.114429],[5.230490],[-6.664908],[-7.492669],[7.686476],[1.705931],[5.267583],[3.304144],[-8.809124],[-6.257600],[-3.361398],[-0.181681],[7.138012],[0.870775],[6.471363],[7.759686],[6.324300],[-5.873175],[-6.839814],[9.190019],[9.627228],[-1.312511],[8.712830],[4.728564],[7.214602],[-1.566112],[1.125278],[-1.800556],[-7.603998],[-7.680140],[-9.840647],[6.839406],[7.531415],[6.933680],[-9.941793],[7.564493],[9.115018],[6.573049],[-2.596739],[3.601715],[-0.546778],[1.384910],[-5.367964],[-0.646279],[5.019111],[-8.592719],[3.859406],[-1.848605],[-2.311287],[-4.315737],[-7.730930],[-9.445690],[1.811562],[-9.399820],[-1.767521],[2.790228],[-5.835037],[0.786473],[-9.701769],[0.029128],[-2.482791],[-4.564786],[2.976177],[-2.549360],[-3.322515],[7.638126],[2.021503],[1.585093],[6.805152],[-8.275175],[7.198408],[-7.065593],[-5.290449],[-4.913378],[-9.964018],[-3.266910],[1.606611],[-1.561263],[0.109149],[-6.284122],[8.185624],[9.630629],[-5.173852],[3.098613],[-1.905834],[9.753088],[-2.539154],[7.717908],[8.577527],[3.784401],[7.020346],[0.783547],[-5.719944],[-9.196303],[-3.685698],[-7.788952],[-1.877450],[-5.828199],[-8.813486],[-7.851862],[3.315617],[-1.695875],[6.089924],[-0.313406],[4.990368],[-4.308941],[-0.047032],[0.537589],[5.255411],[-9.599081],[6.825334],[0.574758],[-5.938027],[-2.046687],[-7.031649],[-4.270030],[-9.535335],[8.016781],[-2.750558],[4.803428],[3.376187],[4.914768],[1.063782],[3.544733],[-7.223993],[-7.879647],[-9.690464],[7.152473],[-2.390492],[3.823380],[-1.715356],[-4.421224],[-3.975821],[-5.919696],[-2.748617],[-6.563837],[-4.043413],[1.192494],[-9.199207],[-3.839102],[-6.989998],[-9.169484],[0.719094],[-8.963148],[4.314259],[-2.034265],[4.516049],[7.631240],[-9.168232],[-3.561503],[8.116768],[-4.046284],[-3.684782],[3.253636],[-0.665773],[6.879269],[-0.251880],[6.380853],[6.883269],[0.668271],[8.681110],[-4.859224],[9.312289],[-9.833385],[-7.358440],[-4.545803],[3.129894],[1.559649],[-4.428116],[1.040238],[-8.910082],[6.221665],[-0.759777],[-5.554784],[-3.496593],[7.342176],[0.604667],[-6.962028],[9.906094],[-6.493251],[-8.954714],[9.063478],[-3.450657],[0.762331],[2.941055],[8.717904],[-9.141148],[-8.562719],[-6.767350],[-5.186041],[9.692506],[-5.044279],[-3.967031],[3.773548],[-9.199967],[2.457445],[-7.423134],[-6.246287],[6.271899],[4.742161],[-2.538955],[-4.583634],[1.212676],[-2.663592],[-6.543143],[8.016513],[-8.038756],[-3.442092],[-7.151731],[-4.913451],[-2.155895],[8.240726],[-8.651422],[7.784215],[-7.126007],[-4.620828],[5.283604],[0.348729],[5.964450],[-1.623616],[-5.333444],[1.012863],[-9.170640],[4.198299],[3.693624],[0.652773],[3.484930],[-6.163083],[-7.473916],[7.932378],[-1.491043],[-3.878271],[5.423816],[9.993455],[3.487201],[-0.624404],[9.505470],[-2.393460],[8.711388],[-9.302363],[2.502601],[-3.671050],[0.894687],[-7.261496],[-4.515832],[-4.875144],[7.987994],[5.896646],[-5.555578],[5.638218],[-5.591139],[3.387487],[-9.005772],[2.113403],[-2.302818],[-2.912939],[1.214219],[-0.055483],[-6.773385],[8.238915],[1.918363],[8.959690],[-7.828170],[1.192758],[7.443750],[-0.732174],[-8.277891],[1.467466],[9.995964],[-9.436448],[4.467558],[3.576991],[-2.834367],[2.820010],[-3.368080],[8.761172],[-9.510701],[-0.545019],[1.557423],[4.853143],[-3.296881],[8.055732],[0.115392],[1.146049],[9.487255],[-6.848154],[9.644948],[-4.977284],[-1.683648],[-4.463445],[-4.054378],[-7.570299],[-2.804881],[3.466229],[-1.144551],[7.039958],[-3.095647],[3.699663],[2.998556],[-9.359749],[-0.491841],[9.699294],[-7.783023],[6.365403],[1.145534],[4.868026],[-3.473852],[-0.037182],[-6.383459],[-6.409462],[-4.541921],[4.192589],[-1.271814],[1.310995],[-8.510094],[5.657352],[-0.833123],[-5.269429],[-8.085497],[0.761337],[1.063658],[1.369273],[-3.905168],[-8.156845],[8.146014],[7.051773],[-7.892122],[-1.316550],[0.304917],[8.190595],[3.063526],[4.807375],[6.959511],[-4.710086],[6.894767],[-1.809376],[-1.363141],[-6.434857],[5.427700],[9.280698],[-1.350504],[2.124299],[4.429637],[6.393922],[6.091565],[-5.808129],[4.055013],[-7.110279],[4.763341],[-1.449318],[7.832159],[5.936084],[-3.790292],[-4.730499],[5.065747],[-0.770227],[6.533872],[-1.215369],[7.804022],[5.225680],[-6.246991],[1.634439],[6.198944],[7.568343],[-6.652068],[-7.717596],[-2.244721],[2.367605],[8.795694],[-6.739863],[7.055876],[-6.261652],[-1.677487],[-7.308555],[5.366365],[-6.992853],[1.794001],[8.287543],[-2.564025],[-6.090122],[3.299423],[-0.605763],[-4.507664],[-2.388451],[6.897133],[-8.823131],[-5.253077],[3.044101],[-4.967467],[-4.155490],[-1.866136],[9.680201],[2.121418],[-9.520387],[7.848770],[-5.032709],[6.501273],[-8.154473],[3.661680],[-3.043164],[-8.803357],[0.284128],[8.872965],[1.273637],[-3.930037],[2.300854],[6.640900],[6.795530],[-5.857643],[-7.023691],[-7.612416],[-6.668926],[2.482968],[6.456746],[4.152649],[8.262827],[8.157684],[-1.269500],[-2.332391],[-1.942657],[-7.338299],[7.235336],[-5.870194],[-6.264525],[-4.831409],[0.809510],[1.679005],[1.793711],[-8.678086],[7.684699],[-4.843430],[2.720560],[-1.979473],[-6.978236],[-9.257576],[2.100745],[6.928665],[-8.159226],[1.813788],[-8.942930],[9.329474],[-5.526038],[9.092458],[5.359238],[8.850445],[8.579488],[8.145260],[9.722519],[0.584654],[-7.293899],[-6.990878],[-7.190946],[-5.612223],[0.377346],[2.825185],[-0.702642],[2.145942],[3.508224],[-5.487652],[2.264962],[-5.206743],[2.831675],[3.855561],[1.104887],[-9.768300],[-1.154319],[2.344502],[-7.108662],[8.626989],[-1.609968],[6.638978],[5.272245],[1.144320],[6.613114],[2.273088],[0.626827],[-7.597195],[-7.548062],[6.057578],[-9.516122],[7.487991],[-7.977387],[7.560467],[1.502579],[1.491698],[4.250392],[-3.462989],[4.814671],[3.315152],[2.817063],[5.333044],[-5.928029],[1.794012],[-5.231757],[-5.786396],[-8.138917],[1.441095],[8.457555],[-3.111279],[-0.051068],[-9.652055],[-0.594130],[-0.068257],[-0.736168],[5.043535],[3.351647],[4.155791],[-3.014933],[-2.150454],[0.991056],[8.750153],[-2.690789],[2.054104],[5.680916],[-2.223191],[5.287801],[6.657069],[8.069037],[6.139301],[5.259433],[6.334311],[-5.732363],[3.333405],[4.876498],[6.434450],[-6.510045],[4.405767],[4.917897],[-0.727135],[-0.908628],[-4.426122],[4.411738],[4.190809],[-9.152980],[2.187523],[8.078892],[-2.807683],[4.313798],[-3.691739],[0.256681],[8.696383],[-4.167065],[-6.072544],[1.757341],[-4.868634],[-6.649866],[1.244049],[-5.567159],[-8.106753],[-7.791638],[1.265023],[7.667251],[3.385748],[1.275085],[5.285727],[2.497578],[-8.011136],[6.996993],[0.045751],[-4.849487],[-2.556425],[6.098931],[-8.327685],[0.822345],[-3.687474],[-7.840248],[9.437121],[3.572687],[-9.381505],[7.950535],[5.716771],[0.308316],[-6.035515],[-5.632839],[8.146661],[-6.598940],[1.611129],[-6.441274],[9.189010],[6.467854],[5.843168],[6.791845],[9.405735],[3.733342],[3.889485],[5.002385],[7.650221],[6.123513],[-3.295314],[1.795349],[-2.152340],[4.705171],[2.874670],[6.480397],[1.616704],[-2.792450],[5.053288],[-3.619923],[-7.028198],[-3.653034],[-0.239020],[-4.465719],[-9.046374],[7.359140],[-0.364200],[1.723061],[-8.788228],[-4.182265],[-5.575839],[6.600593],[-5.704130],[-9.034559],[3.444180],[-0.042586],[-6.078916],[-4.890940],[6.658428],[-0.241938],[-5.224937],[-1.032189],[-7.109194],[0.898871],[-9.891346],[4.558928],[4.886441],[7.167139],[-4.243184],[4.135147],[-6.213326],[-6.085800],[2.128197],[2.735777],[4.432350],[-8.978256],[4.915559],[-8.714721],[-9.192668],[2.152896],[-6.459523],[3.906531]], dtype = "float32")#candidate|6354|(1694, 1)|const|float32
const_6355 = relay.const([-4.806398,9.605184,7.738856,5.260193,-3.605073,7.351401,-7.154648,4.174715,-1.192165,-9.256646,9.277192,0.332799,-3.123854,-1.323606,6.057605,4.940595,-9.131436,-4.593324,-0.477550,-8.354314,-8.701161,1.279602,-0.291953,5.502556,-1.160298,2.793934,7.075255,6.177529,-4.650655,4.580392], dtype = "float64")#candidate|6355|(30,)|const|float64
call_6353 = relay.TupleGetItem(func_3233_call(relay.reshape(const_6354.astype('float32'), [11, 11, 14]), relay.reshape(const_6355.astype('float64'), [30,]), ), 2)
call_6356 = relay.TupleGetItem(func_3236_call(relay.reshape(const_6354.astype('float32'), [11, 11, 14]), relay.reshape(const_6355.astype('float64'), [30,]), ), 2)
bop_6369 = relay.less(const_6355.astype('bool'), const_6354.astype('bool')) # shape=(1694, 30)
bop_6375 = relay.bitwise_xor(bop_6369.astype('int16'), const_6355.astype('int16')) # shape=(1694, 30)
func_810_call = mod.get_global_var('func_810')
func_814_call = mutated_mod.get_global_var('func_814')
var_6383 = relay.var("var_6383", dtype = "uint64", shape = ())#candidate|6383|()|var|uint64
const_6384 = relay.const([[10,7],[6,6],[4,4],[-10,-1],[-6,-8],[7,-3],[-2,-7],[6,-4],[-7,4],[6,9],[-6,3],[8,5],[-9,4],[-6,-4],[7,1],[-3,2],[9,-7],[7,-4],[-9,-1],[3,10],[-8,7],[5,-2],[-7,8],[1,1],[-7,4],[4,-9],[3,9],[5,-7],[8,-6],[-9,7],[-3,-5],[-6,-4],[-5,-9],[6,-2],[-7,6],[-2,4],[9,3],[8,4],[-5,-8],[7,6],[-2,-9],[-4,-9],[1,2],[10,-3],[7,9],[-4,-9],[-3,-9],[-10,-10],[-1,-3],[9,-7],[-9,4],[-8,8],[-3,-1],[1,-5],[8,5],[-1,2],[-6,-1],[7,7],[-9,-3],[10,-2],[-10,9],[4,8],[-9,2],[7,-6],[-7,10],[-4,-7],[-2,2],[4,6],[-9,-7],[-10,-5],[-7,-9],[-10,-1],[-1,-10],[10,10],[10,5],[-7,9],[-7,-1],[3,-5],[4,9],[10,-1],[-1,-8],[8,4],[-1,1],[-1,6],[-1,6],[-4,8],[-5,-1],[5,6],[1,-6],[1,9],[10,-1],[-2,-10],[5,-9],[-4,-6],[4,-6],[9,6],[7,1],[3,-1],[9,3],[-3,8],[-8,9],[-6,3],[-4,8],[4,-3],[5,8],[-5,-10],[-2,-10],[5,-5],[5,-6],[-10,-8],[9,-6],[-9,3],[-7,1],[-1,6],[3,10],[-4,-2],[10,-7],[-9,3],[-4,-3],[9,8],[-7,8],[9,3],[10,1],[-10,-2],[-2,-1],[7,-1],[4,-3],[-9,9],[-9,8],[-2,3],[4,-7],[-8,7],[7,1],[1,-4],[-7,7],[7,6],[4,-7],[2,-10],[3,-5],[4,1],[9,7],[5,4],[-8,9],[-9,-1],[-8,-1],[8,9],[9,-2],[-7,8],[4,-5],[-7,-2],[9,10],[8,-3],[2,7],[9,1],[1,3],[-6,-1],[6,-1],[4,-8],[7,-3],[1,-9],[3,-3],[3,10],[-5,9],[6,2],[-9,-7],[-8,-6],[-4,10],[-6,-8],[-5,1],[3,2],[-6,9],[-5,6],[-6,5],[-9,-9],[-3,-10],[-7,7],[-9,10],[10,2],[-4,-8],[6,1],[8,-5],[10,-1],[10,1],[10,-9],[-8,3],[-2,-6],[9,-7],[9,-6],[5,-3],[3,9],[5,-3],[10,8],[-3,-10],[7,3],[-1,3],[-8,8],[-10,2],[6,9],[1,-8],[5,1],[-8,-3],[6,-3],[8,-8],[6,-2],[8,10],[-5,-5],[2,-9],[1,5],[2,6],[-5,6],[8,-2],[9,-9],[-7,-1],[1,-1],[1,-1],[2,4],[3,-4],[3,-4],[4,-3],[1,10],[-4,-2],[-6,9],[-5,-2],[4,2],[7,10],[6,1],[1,2],[8,1],[2,-7],[6,-6],[4,-9],[3,10],[9,-10],[-7,6],[-6,1],[10,-8],[-3,1],[-10,-2],[4,-7],[-7,6],[10,-1],[-10,-4],[-5,2],[6,2],[-6,-1],[-1,-5],[8,-1],[-2,9],[7,-8],[8,3],[8,3],[-7,3],[9,4],[-9,-4],[-4,10],[-1,7],[-2,5],[10,7],[5,-9],[-4,-10],[6,-2],[4,10],[8,5],[10,9],[8,3],[-4,-5],[10,-3],[-8,-7],[6,1],[-3,9],[2,5],[5,-3],[-10,2],[-5,-2],[3,-9],[-8,-7],[-8,-4],[9,6],[-7,-3],[-5,-7],[3,10],[6,-4],[7,10],[-2,10],[3,-10],[-9,-4],[-7,9],[3,8],[5,5],[10,-8],[3,-4],[5,2],[10,-10],[10,3],[1,9],[10,-2],[-7,-4],[-6,-6],[10,-1],[-4,3],[-7,-10],[9,4],[9,-5],[-5,2],[6,9],[-8,-9],[6,3],[5,3],[1,8],[-1,1],[10,-9],[-5,-6],[-6,-2],[-1,3],[3,7],[-4,-9],[-8,-4],[-3,-8],[-10,-9],[7,7],[2,8],[-2,-3],[8,4],[-4,6],[4,-10],[-6,-2],[-3,-3],[-6,-4],[10,6],[-2,9],[-10,-4],[8,4],[-2,6],[3,4],[9,-8],[6,7],[-3,-9],[1,7],[-1,-6],[10,8],[6,-8],[4,-7],[-9,-9],[-9,10],[9,-7],[7,2],[4,6],[9,6],[10,6],[-5,-8],[-10,-9],[3,-10],[-9,3],[-2,6],[6,-10],[8,2],[-9,1],[-3,-10],[5,-1],[9,3],[10,-7],[-2,8],[5,-2],[-1,10],[-5,6],[1,1],[5,6],[-5,3],[-4,8],[3,5],[4,-10],[4,-7],[-2,-6],[-8,9],[-3,7],[-4,3],[-3,6],[-9,-6],[8,1],[8,10],[-2,-3],[7,6],[-6,8],[-7,8],[4,-8],[4,-7],[3,-6],[-6,3],[5,10],[9,-2],[9,5],[-10,6],[8,6],[-9,6],[-9,-3],[9,2],[-1,9],[-8,-6],[-10,-5],[-5,-4],[-6,-5],[-1,8],[-3,6],[-6,-7],[-3,-8],[-7,2],[-7,-8],[9,-5],[10,1],[-1,3],[10,6],[-8,-5],[-9,-1],[-9,-4],[9,9],[1,4],[-2,-5],[6,6],[5,-3],[3,1],[-5,10],[7,-2],[-5,-4],[-3,-10],[-5,-9],[-2,8],[5,10],[1,3],[6,-10],[5,-9],[3,9],[-4,-4],[-3,-10],[7,10],[-9,-1],[-4,6],[8,-2],[10,-5],[5,-10],[2,-7],[-6,-8],[5,7],[10,6],[-2,3],[10,5],[7,4],[4,10],[-9,-9],[-6,-8],[-8,-6],[-2,-2],[5,-8],[-1,7],[-3,-1],[-9,2],[-9,-3],[-1,5],[7,-6],[4,-7],[5,3],[8,-5],[5,7],[6,3],[4,2],[8,-3],[-9,-6],[-10,1],[6,-1],[-8,-5],[-4,-8],[-6,8],[7,-3],[7,2],[8,-8],[-10,-4],[-3,-3],[3,3],[-2,8],[1,8],[-5,-7],[-9,-8],[-6,5],[-5,4],[-4,-10],[-7,-6],[3,-7],[-1,-6],[-5,1],[-1,-3],[7,-5],[-7,-2],[-8,-9],[5,-3],[9,-5],[-6,9],[2,-7],[8,2],[-6,-8],[5,-3],[2,7],[-9,-8],[-2,-1],[3,-2],[-7,-10],[7,-10],[8,-7],[10,6],[-3,-1],[-5,1],[3,-8],[9,3],[-8,-2],[-6,9],[2,7],[-5,-6],[-7,-1],[10,-2],[1,9],[-1,-7],[-9,4],[-3,9],[1,9],[-10,4],[-4,2],[6,-6],[5,8],[-10,-4],[6,-4],[1,6],[1,9],[2,1],[-10,-1],[8,-5],[3,-6],[10,3],[8,-9],[-3,2],[-10,-7],[4,-8],[10,1],[7,10],[1,4],[-8,9],[4,-6],[1,-1],[10,-3],[6,1],[3,4],[9,-9],[-2,2],[-9,5],[-7,10],[-2,10],[9,-8],[-9,10],[10,1],[10,2],[2,-3],[4,-4],[-10,10],[-5,3],[8,-8],[-10,-8],[-4,2],[8,7],[7,-10],[-7,-4],[1,10],[6,4],[5,-10],[10,-7],[-4,8],[4,-1],[5,-4],[8,-1],[1,8],[5,1],[4,6],[7,8],[-4,-5],[-4,-1],[-10,1],[-4,10],[4,-3],[2,8],[3,-9],[9,4],[-6,2],[-7,-8],[10,6],[4,9],[4,6],[4,-1],[7,-9],[-7,-10],[6,-4],[-8,10],[4,4],[-2,5],[-3,-1],[4,-7],[-3,-9],[-1,-5],[4,-10],[2,2],[7,-5],[7,4],[-10,8],[-8,8],[1,-2],[-8,-1],[-4,7],[-2,1],[3,8],[-7,-1],[-9,2],[-5,-9],[-8,3],[7,10],[-7,-9],[-6,-10],[-8,10],[-1,2],[-1,7],[5,-4],[-8,10],[-1,9],[9,-6],[-10,-5],[-5,6],[5,7],[-4,-4],[4,-5],[3,8],[-8,-1],[-6,-4],[-5,9],[-4,-9],[-4,-7],[-3,-9],[-6,-9],[-10,4],[-5,4],[2,-2],[-7,-9],[5,-1],[4,-9],[-8,-6],[-3,-5],[2,-10],[2,2],[4,-3],[6,-1],[9,2],[-10,10],[7,2],[1,-2],[5,-1],[6,3],[9,10],[-9,6],[4,9],[7,2],[7,6],[9,2],[10,3],[9,5],[-3,1],[7,-7],[-5,5],[-10,-8],[10,5],[-1,-5],[10,-6],[-3,7],[7,7],[-5,-7],[3,-4],[8,9],[5,-9],[-3,-5],[2,4],[-2,3],[-8,3],[5,6],[1,-2],[-2,-9],[7,1],[-2,-4],[8,2],[-6,-9],[-7,10],[2,1],[-7,-4],[-6,-6],[-3,-4],[5,-1],[-4,3],[10,-6],[4,-7],[3,-2],[3,-9],[-1,9],[-2,-8],[10,10],[-2,6],[2,-9],[10,-5],[-5,3],[-4,-4],[-5,-8],[-7,4],[8,1],[-6,4],[-1,-4],[-8,-3],[-5,1],[-9,4],[-10,-3],[-3,-4],[2,10],[4,-5],[6,7],[-8,7],[9,5],[-2,3],[5,9],[-4,6],[-8,-5],[-4,-9],[-10,4],[-9,5],[10,-7],[1,4],[-6,2],[6,10],[-8,-8],[5,-3],[-4,-5],[10,2],[-10,-4],[-8,6],[1,-8],[10,1],[-2,10],[-6,4],[-10,6],[9,-1],[6,-9],[-6,-2],[5,-6],[-7,2],[-7,1],[-5,-5],[4,-6],[9,1],[5,-2],[6,-7],[-6,-5],[9,-4],[-8,-10],[-10,8],[6,6],[-3,3],[-8,6],[10,5],[6,9],[-5,-4],[2,8],[10,-5],[-1,-4],[-9,-2],[-3,-10],[-6,1],[5,9],[-6,5],[-8,-7],[10,-7],[-4,-7],[9,1],[2,6],[-6,-9],[-8,-1],[3,2],[10,2],[-3,4],[3,4],[3,-5],[-7,-2],[-10,2],[-1,-2],[-10,8],[4,-1],[-10,-8],[-8,-4],[-6,-7],[-9,-5],[-2,-7],[-1,-9],[-3,-2],[-8,8],[2,10],[6,1],[2,4],[9,-10],[-8,7],[-8,-2],[-3,10],[1,-9],[3,3],[5,1],[3,9],[-7,-4],[6,4],[-8,-6],[5,4],[3,-9],[7,6],[-5,9],[4,-10],[7,-6],[5,-8],[10,-6],[10,-1],[5,9],[-1,4],[-4,1],[-1,9],[-5,10],[6,-5],[-1,-1],[4,4],[-9,3],[-10,5],[-10,-1],[9,8],[4,-6],[-7,7],[5,-9],[-8,-8],[7,-9],[8,10],[10,8],[1,3],[-3,8],[-3,8],[-10,7],[-9,7],[8,-3],[-9,6],[-6,1],[10,5],[-7,5],[-5,-8],[-1,5],[3,8],[-9,10],[3,1],[8,-9],[8,-4],[-4,-6],[4,-5],[10,7],[-3,5],[-3,2],[-8,-7],[7,-7],[-9,-1],[-9,-3],[-1,-8],[-10,4],[-7,5],[-3,9],[-2,-2],[-2,3],[9,4],[8,-3],[-6,10],[5,7],[-5,5],[3,-1],[-10,-5],[1,4],[1,10],[-5,-10],[3,7],[6,-1],[10,8],[9,10],[4,2],[3,-7],[-7,-6],[1,5],[6,3],[6,2],[9,-9],[1,8],[5,3],[9,2],[9,8],[2,4],[-5,-9],[-1,9],[10,10],[7,1],[9,10],[5,4],[8,2],[7,-7],[2,-3],[4,3],[-10,-9],[1,1],[-3,-10],[2,10],[7,-9],[9,7],[1,-4],[-4,1],[10,-2],[-10,-2],[5,1],[5,-7],[-5,-7],[2,6],[5,-10],[-7,-2],[-3,-7],[-9,-5],[-1,10],[-10,-10],[-3,9],[-2,1],[-5,6],[-2,-6],[-3,9]], dtype = "uint64")#candidate|6384|(936, 2)|const|uint64
call_6382 = relay.TupleGetItem(func_810_call(relay.reshape(var_6383.astype('uint64'), []), relay.reshape(const_6384.astype('uint64'), [16, 9, 13]), ), 0)
call_6385 = relay.TupleGetItem(func_814_call(relay.reshape(var_6383.astype('uint64'), []), relay.reshape(const_6384.astype('uint64'), [16, 9, 13]), ), 0)
func_2408_call = mod.get_global_var('func_2408')
func_2410_call = mutated_mod.get_global_var('func_2410')
call_6395 = func_2408_call(relay.reshape(const_6355.astype('float32'), [2, 1, 15]))
call_6396 = func_2408_call(relay.reshape(const_6355.astype('float32'), [2, 1, 15]))
bop_6397 = relay.floor_divide(var_6383.astype('float64'), call_6382.astype('float64')) # shape=(16, 9, 13)
bop_6400 = relay.floor_divide(var_6383.astype('float64'), call_6385.astype('float64')) # shape=(16, 9, 13)
uop_6401 = relay.cosh(var_6349.astype('float32')) # shape=(16, 2, 12)
uop_6409 = relay.tan(uop_6401.astype('float64')) # shape=(16, 2, 12)
output = relay.Tuple([bop_6350,call_6353,bop_6375,const_6384,call_6395,bop_6397,uop_6409,])
output2 = relay.Tuple([bop_6350,call_6356,bop_6375,const_6384,call_6396,bop_6400,uop_6409,])
func_6415 = relay.Function([var_6349,var_6383,], output)
mod['func_6415'] = func_6415
mod = relay.transform.InferType()(mod)
mutated_mod['func_6415'] = func_6415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6415_call = mutated_mod.get_global_var('func_6415')
var_6417 = relay.var("var_6417", dtype = "float32", shape = (16, 2, 12))#candidate|6417|(16, 2, 12)|var|float32
var_6418 = relay.var("var_6418", dtype = "uint64", shape = ())#candidate|6418|()|var|uint64
call_6416 = func_6415_call(var_6417,var_6418,)
output = call_6416
func_6419 = relay.Function([var_6417,var_6418,], output)
mutated_mod['func_6419'] = func_6419
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6478 = relay.var("var_6478", dtype = "float32", shape = (9, 5, 4))#candidate|6478|(9, 5, 4)|var|float32
uop_6479 = relay.log(var_6478.astype('float32')) # shape=(9, 5, 4)
func_1072_call = mod.get_global_var('func_1072')
func_1075_call = mutated_mod.get_global_var('func_1075')
var_6514 = relay.var("var_6514", dtype = "int16", shape = ())#candidate|6514|()|var|int16
var_6515 = relay.var("var_6515", dtype = "int16", shape = (90,))#candidate|6515|(90,)|var|int16
call_6513 = relay.TupleGetItem(func_1072_call(relay.reshape(var_6514.astype('int16'), []), relay.reshape(var_6515.astype('int16'), [1, 6, 15]), ), 2)
call_6516 = relay.TupleGetItem(func_1075_call(relay.reshape(var_6514.astype('int16'), []), relay.reshape(var_6515.astype('int16'), [1, 6, 15]), ), 2)
output = relay.Tuple([uop_6479,call_6513,var_6514,var_6515,])
output2 = relay.Tuple([uop_6479,call_6516,var_6514,var_6515,])
func_6518 = relay.Function([var_6478,var_6514,var_6515,], output)
mod['func_6518'] = func_6518
mod = relay.transform.InferType()(mod)
mutated_mod['func_6518'] = func_6518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6518_call = mutated_mod.get_global_var('func_6518')
var_6520 = relay.var("var_6520", dtype = "float32", shape = (9, 5, 4))#candidate|6520|(9, 5, 4)|var|float32
var_6521 = relay.var("var_6521", dtype = "int16", shape = ())#candidate|6521|()|var|int16
var_6522 = relay.var("var_6522", dtype = "int16", shape = (90,))#candidate|6522|(90,)|var|int16
call_6519 = func_6518_call(var_6520,var_6521,var_6522,)
output = call_6519
func_6523 = relay.Function([var_6520,var_6521,var_6522,], output)
mutated_mod['func_6523'] = func_6523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6886 = relay.var("var_6886", dtype = "float32", shape = (14, 3, 11))#candidate|6886|(14, 3, 11)|var|float32
uop_6887 = relay.acosh(var_6886.astype('float32')) # shape=(14, 3, 11)
output = uop_6887
output2 = uop_6887
func_6889 = relay.Function([var_6886,], output)
mod['func_6889'] = func_6889
mod = relay.transform.InferType()(mod)
var_6890 = relay.var("var_6890", dtype = "float32", shape = (14, 3, 11))#candidate|6890|(14, 3, 11)|var|float32
output = func_6889(var_6890)
func_6891 = relay.Function([var_6890], output)
mutated_mod['func_6891'] = func_6891
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7121 = relay.const([[[-3,-3,-8],[8,-3,3],[-6,-6,-8],[7,8,-9],[4,9,-5],[8,-1,-2],[5,10,-2],[1,7,-5],[8,5,4],[2,1,6],[8,-6,6],[-7,-8,6],[9,8,-7]],[[-3,8,8],[1,-10,3],[-2,9,-1],[8,3,-4],[-5,-8,-3],[7,9,-5],[7,-9,10],[-4,-5,2],[7,4,5],[-1,-5,3],[-4,-5,8],[-2,-7,4],[4,-2,1]],[[5,-4,-8],[-10,-9,-9],[-4,-5,-6],[10,9,-8],[5,-1,1],[10,9,-8],[5,7,-3],[-6,-9,-8],[7,-4,5],[9,4,-8],[-1,-2,4],[-9,-5,1],[-5,9,-2]],[[-1,-6,5],[-7,-5,4],[5,-2,10],[-6,-3,7],[1,4,6],[-8,5,1],[9,-4,-6],[-6,6,7],[-3,6,4],[-1,7,-8],[1,9,-1],[-6,6,-3],[-8,5,-8]]], dtype = "uint8")#candidate|7121|(4, 13, 3)|const|uint8
var_7122 = relay.var("var_7122", dtype = "uint8", shape = (4, 13, 3))#candidate|7122|(4, 13, 3)|var|uint8
bop_7123 = relay.right_shift(const_7121.astype('uint8'), relay.reshape(var_7122.astype('uint8'), relay.shape_of(const_7121))) # shape=(4, 13, 3)
output = bop_7123
output2 = bop_7123
func_7150 = relay.Function([var_7122,], output)
mod['func_7150'] = func_7150
mod = relay.transform.InferType()(mod)
mutated_mod['func_7150'] = func_7150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7151 = relay.var("var_7151", dtype = "uint8", shape = (4, 13, 3))#candidate|7151|(4, 13, 3)|var|uint8
func_7150_call = mutated_mod.get_global_var('func_7150')
call_7152 = func_7150_call(var_7151)
output = call_7152
func_7153 = relay.Function([var_7151], output)
mutated_mod['func_7153'] = func_7153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7289 = relay.var("var_7289", dtype = "float64", shape = (8, 2, 1))#candidate|7289|(8, 2, 1)|var|float64
uop_7290 = relay.acosh(var_7289.astype('float64')) # shape=(8, 2, 1)
output = relay.Tuple([uop_7290,])
output2 = relay.Tuple([uop_7290,])
func_7292 = relay.Function([var_7289,], output)
mod['func_7292'] = func_7292
mod = relay.transform.InferType()(mod)
mutated_mod['func_7292'] = func_7292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7293 = relay.var("var_7293", dtype = "float64", shape = (8, 2, 1))#candidate|7293|(8, 2, 1)|var|float64
func_7292_call = mutated_mod.get_global_var('func_7292')
call_7294 = func_7292_call(var_7293)
output = call_7294
func_7295 = relay.Function([var_7293], output)
mutated_mod['func_7295'] = func_7295
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7698 = relay.const([[[-2.855171,-9.736847,6.110299,-9.982351,-0.441502],[9.378309,1.592891,-0.969642,7.696295,-1.789324],[-4.024070,-0.766628,-7.935363,3.766326,-5.831392]],[[9.010163,4.680379,-5.612808,-8.048331,9.996684],[-3.166554,-7.357170,9.714011,-2.059719,0.381949],[-5.452564,4.503425,1.251521,7.864967,0.557542]],[[5.291345,-8.573527,-6.667571,5.841682,4.520269],[3.509149,9.600982,3.155690,7.540624,-7.132006],[-2.417937,-2.425893,0.823032,-8.680410,-3.302871]],[[-6.856185,-2.539180,9.035837,4.725820,-4.237803],[5.030300,-6.727346,7.388993,-7.590576,-3.964606],[-0.883701,8.930356,-3.550495,-4.114982,3.059177]],[[2.887257,-0.333931,-3.177407,-1.444255,-8.267288],[-8.083391,1.288214,5.002855,8.498587,7.081755],[-3.382427,-2.065321,-7.093443,-6.270601,9.101911]],[[-9.306863,5.765330,9.978733,-9.347670,2.537186],[-6.151973,-2.656429,-0.314026,-9.681149,4.629025],[5.839363,4.360482,-7.021100,6.242782,-5.755053]],[[-5.670652,7.781862,0.405679,-5.099142,-1.786899],[2.483941,2.252245,-1.122090,5.265667,1.612191],[-8.287691,-3.816999,9.846535,-1.669010,8.353751]],[[9.327506,7.963486,7.103068,8.969453,-8.402412],[8.357917,-3.466633,4.557091,-5.573160,-3.021386],[-5.452173,1.690397,-5.663458,7.842462,4.089978]],[[-9.356020,-3.109035,3.166917,-6.303593,9.721549],[-7.373785,-3.311717,-6.992604,-1.847765,-7.245258],[-4.986148,9.491976,3.791035,-9.894016,-1.088748]],[[8.468743,3.363496,-3.288953,4.748319,3.863517],[6.449856,5.461938,1.236443,-3.288688,9.551899],[-5.165261,3.510637,0.354922,6.398002,1.710371]]], dtype = "float32")#candidate|7698|(10, 3, 5)|const|float32
uop_7699 = relay.log10(const_7698.astype('float32')) # shape=(10, 3, 5)
func_3336_call = mod.get_global_var('func_3336')
func_3341_call = mutated_mod.get_global_var('func_3341')
var_7704 = relay.var("var_7704", dtype = "int32", shape = (2880,))#candidate|7704|(2880,)|var|int32
const_7705 = relay.const([[5.612043,-7.245736,0.918254],[1.614836,8.906796,7.383930],[-4.014810,9.723242,-5.111324],[-8.155902,5.706112,9.846826],[-6.288629,4.821497,-4.883810],[-3.076732,4.653390,8.567078],[-5.604585,-7.584142,-4.222194],[3.609913,5.591912,-1.307391],[8.340880,-5.759216,-5.364162],[0.389935,-4.849207,5.443605]], dtype = "float64")#candidate|7705|(10, 3)|const|float64
call_7703 = relay.TupleGetItem(func_3336_call(relay.reshape(var_7704.astype('int32'), [16, 15, 12]), relay.reshape(var_7704.astype('int32'), [16, 15, 12]), relay.reshape(const_7705.astype('float64'), [30,]), ), 4)
call_7706 = relay.TupleGetItem(func_3341_call(relay.reshape(var_7704.astype('int32'), [16, 15, 12]), relay.reshape(var_7704.astype('int32'), [16, 15, 12]), relay.reshape(const_7705.astype('float64'), [30,]), ), 4)
output = relay.Tuple([uop_7699,call_7703,var_7704,const_7705,])
output2 = relay.Tuple([uop_7699,call_7706,var_7704,const_7705,])
func_7714 = relay.Function([var_7704,], output)
mod['func_7714'] = func_7714
mod = relay.transform.InferType()(mod)
mutated_mod['func_7714'] = func_7714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7715 = relay.var("var_7715", dtype = "int32", shape = (2880,))#candidate|7715|(2880,)|var|int32
func_7714_call = mutated_mod.get_global_var('func_7714')
call_7716 = func_7714_call(var_7715)
output = call_7716
func_7717 = relay.Function([var_7715], output)
mutated_mod['func_7717'] = func_7717
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8239 = relay.var("var_8239", dtype = "int32", shape = (15, 6, 9))#candidate|8239|(15, 6, 9)|var|int32
var_8240 = relay.var("var_8240", dtype = "int32", shape = (15, 6, 9))#candidate|8240|(15, 6, 9)|var|int32
bop_8241 = relay.bitwise_and(var_8239.astype('int32'), relay.reshape(var_8240.astype('int32'), relay.shape_of(var_8239))) # shape=(15, 6, 9)
func_3879_call = mod.get_global_var('func_3879')
func_3881_call = mutated_mod.get_global_var('func_3881')
var_8245 = relay.var("var_8245", dtype = "float32", shape = (8,))#candidate|8245|(8,)|var|float32
call_8244 = relay.TupleGetItem(func_3879_call(relay.reshape(var_8245.astype('float32'), [1, 8, 1])), 2)
call_8246 = relay.TupleGetItem(func_3881_call(relay.reshape(var_8245.astype('float32'), [1, 8, 1])), 2)
func_810_call = mod.get_global_var('func_810')
func_814_call = mutated_mod.get_global_var('func_814')
const_8249 = relay.const(1, dtype = "uint64")#candidate|8249|()|const|uint64
var_8250 = relay.var("var_8250", dtype = "uint64", shape = (1872,))#candidate|8250|(1872,)|var|uint64
call_8248 = relay.TupleGetItem(func_810_call(relay.reshape(const_8249.astype('uint64'), []), relay.reshape(var_8250.astype('uint64'), [16, 9, 13]), ), 0)
call_8251 = relay.TupleGetItem(func_814_call(relay.reshape(const_8249.astype('uint64'), []), relay.reshape(var_8250.astype('uint64'), [16, 9, 13]), ), 0)
func_2670_call = mod.get_global_var('func_2670')
func_2674_call = mutated_mod.get_global_var('func_2674')
const_8261 = relay.const([[2.188340,1.035745],[-5.941951,8.298710],[-2.002309,7.738273],[-2.925490,8.854264],[2.299394,9.017222],[-7.468138,-7.351999],[7.822308,9.558244],[-0.145219,2.889680],[6.573722,-5.674296],[-8.995300,-5.230176],[0.657734,-8.531507],[-0.327400,-6.277577],[-3.261957,-2.905843],[-8.523670,0.526262],[4.733439,3.725464],[3.631686,9.846797],[-9.756265,-7.470861],[9.254823,0.761305],[6.629413,-1.577888],[5.120224,5.231966],[-5.338492,-6.353876],[-2.692936,-7.601455],[0.562017,6.728216],[-9.941247,7.890899],[-6.600911,-5.223356],[-1.651586,5.376074],[9.924777,9.246590],[-8.147336,-9.577383],[-4.041868,1.198224],[-4.704916,-9.262929],[3.195929,-7.969372],[-0.034241,-7.959019],[1.051244,-8.480911],[-5.612239,9.158669],[4.993714,2.387627],[8.457738,-0.643640],[-9.099806,-3.429536],[-2.978210,-8.378798],[0.872220,7.307869],[-6.668057,-3.160702],[-9.472012,1.509319],[-6.090838,-6.809536],[3.608920,0.163449],[8.277108,4.504732],[9.514887,-4.416967],[-5.907059,-9.919275],[2.531310,-0.420694],[5.413961,-2.564465],[7.063348,1.938553],[-1.106638,-0.676076],[6.399561,2.615598],[7.247671,-4.148260],[-6.801656,-9.604700],[-9.207938,-7.485489],[9.827903,9.997686],[-2.415279,-3.834390],[-8.604010,2.439178],[-0.891363,-2.279389],[-2.832603,-4.767720],[-6.581546,-8.554902],[-6.298281,-5.259911],[8.904407,-1.407174],[6.464840,-2.455764],[1.353244,4.314634],[-7.165314,3.732212],[-0.706358,-2.319421],[9.341843,8.233256],[2.353915,-6.718870],[-6.167235,-5.042884],[-7.128041,-8.009070],[7.336334,8.641634],[-3.160408,-3.981929],[7.541218,5.716080],[2.818896,-6.975481],[-5.034418,8.896327],[-0.755695,3.814604],[-0.828388,-3.185539],[8.239907,-5.982692],[2.549313,1.918544],[-9.803728,-8.252774],[5.763892,-0.599636],[0.871292,6.461949],[-7.405818,-8.119857],[2.574705,1.294274],[3.905545,-8.611010],[1.842925,2.276067],[-9.711012,-2.375710],[-6.941156,-0.137183],[-4.759651,5.451441],[-9.119413,9.865733],[4.167031,2.737899],[-8.820592,-3.242278],[-3.276411,-4.850209],[0.395109,5.979679],[-0.249738,-5.538061],[-8.778414,2.059562],[2.856301,1.825053],[6.172700,-4.968803],[-3.777264,8.696926],[4.301423,-6.687473],[-8.718799,3.682233],[0.694874,3.847829],[-8.813449,-5.359898],[2.069519,0.201300],[-4.533543,-7.112824],[7.755121,-8.739760],[-1.741792,-5.268054],[3.912652,4.744737],[0.510030,6.228230],[8.210860,9.360378],[5.918141,4.509315],[9.412970,0.117267],[4.288457,0.157460],[5.467178,-8.567786],[-2.722488,6.135591],[5.600481,6.018538],[2.770853,6.514744],[-4.953229,-4.525876],[3.602096,-2.606011],[-7.168413,-7.787162],[1.210398,-9.854890],[-1.358407,-1.052509],[-8.543854,-6.632634],[-6.807511,-5.544715],[9.183106,9.758916],[-7.037275,5.188699],[9.535430,-1.442291],[9.836222,8.378432],[9.414968,1.751505],[-3.489326,-7.053658],[9.834342,-5.089358],[-8.009968,6.277490],[6.867420,2.203551],[-2.916890,1.520285],[-1.426079,8.466576],[-5.917991,-7.455691],[1.910587,0.839865],[4.843180,-3.664761],[6.904280,5.105338],[8.176543,1.193823],[2.428357,9.890646],[1.481089,0.179316],[-0.202914,3.375927],[7.120502,-7.479732],[-3.908018,-2.556852],[4.654565,-1.191336],[7.524157,9.065735],[0.576374,8.947299],[6.511459,-3.176467],[7.483700,0.125584],[7.288063,9.992849],[-9.106973,5.050417],[3.125644,5.696277],[-2.718929,0.666682],[2.226236,-1.330083],[1.909150,8.618140],[-8.887853,6.798603],[1.412199,-3.225722],[-9.662101,7.496009],[6.947643,0.645112],[-2.016156,-3.156112],[-3.577345,-8.862161],[-8.707781,-0.443211],[0.199630,-0.436221],[-7.520472,3.389191],[-5.381953,-1.616139],[5.517891,-9.370352],[-2.261512,-1.715249],[-9.769730,5.805168],[-9.173394,-2.878355],[-9.846257,7.062115],[-3.487277,-2.633686],[2.322242,-2.594618],[1.580861,-4.264384],[-4.975788,3.739409],[-1.314143,8.422035],[-7.567857,-2.027919],[-5.147157,6.208962],[3.932932,-9.860343],[4.414995,-9.390099],[3.289010,-1.767604],[7.109871,3.768622],[4.918398,-3.835130],[-4.088724,-7.758773],[-4.969815,-2.231154],[4.810315,-8.175045],[-6.547503,-0.374070],[3.251738,-9.748050],[7.080456,4.585282],[-1.022521,-7.595690],[6.625588,9.641462],[-9.162875,2.949992],[-5.751560,-0.170517],[8.981031,7.350676],[3.135214,4.902505],[-8.675744,7.692017],[4.092638,7.833055],[-0.964649,2.180693],[-9.082570,6.572051],[7.209554,-5.997829],[-9.429977,7.150088],[5.532372,1.875972],[3.569002,3.060329],[4.796572,4.674226],[6.484735,-2.678567],[8.017161,2.471478],[-6.980271,-9.297633],[3.548839,-5.258058],[3.697449,-9.547937],[-1.266628,-0.214415],[-5.498240,8.800172],[-0.019934,-3.515713],[8.714816,0.522466],[1.777025,4.891906],[-4.469442,9.822163],[-0.544731,4.504249],[6.091133,-0.505966],[-4.340087,0.846863],[-3.796628,-6.811439],[-5.684711,-1.665099],[6.229431,-7.436810],[-0.086798,-8.298058],[4.665233,0.416772],[6.746848,-5.378562],[-0.965421,-2.226778],[6.279802,6.564021],[4.753342,-0.360651],[6.744183,7.729701],[7.630059,5.635207],[0.111071,-5.632804],[4.760741,-3.583885],[-5.030893,5.535454],[3.399411,7.774838],[-7.554912,-2.111753],[-2.182374,4.517454],[6.488074,-5.409050],[-1.788702,7.620448],[-3.391233,-5.510420],[3.476794,-2.017324],[2.385130,-2.078425],[-1.287689,4.150081],[-0.376730,-7.866340],[4.637987,-6.117147],[-0.819493,5.250578],[-6.414176,0.309267],[-8.871067,-0.998437],[-1.363156,1.109339],[9.878734,8.279468],[-5.058590,-1.720874],[-1.485153,4.665098],[-6.477250,8.257205],[5.949929,2.521817],[3.529538,-2.571194],[-2.161118,2.270093],[8.518898,5.650441],[-6.031291,-0.192057],[1.732387,7.477684],[6.414432,2.424488],[8.363050,9.754991],[9.640352,-8.132845],[1.656863,-2.041908],[-8.269179,-7.974000],[2.228760,-0.498391],[-4.655242,-0.299548],[1.001964,-8.638809],[-1.657056,-1.744040],[-4.867183,-0.979467],[-4.822986,-4.963241],[0.084097,4.431124],[-3.880757,-5.166284],[3.303138,7.872185],[4.268635,-1.621024],[2.411162,-2.000810],[-7.793298,3.307699],[-1.049630,0.870858],[6.621081,-9.401796],[-9.878270,-3.833732],[3.044063,-6.375831],[1.649185,5.706635],[0.827399,5.125296],[-4.920439,3.383517],[-9.160223,0.717670],[-2.810203,9.920235],[-4.303799,3.522719],[4.607263,4.277482],[-4.379222,-0.478605],[9.733244,-9.193880],[4.977760,5.615250],[5.537139,-8.057926],[-1.557946,-8.057037],[-9.183599,-4.899494],[1.040982,-8.092149],[3.390387,-1.884501],[0.618866,2.080733],[-4.102626,-5.054394],[7.021131,3.311123],[-0.371695,-7.227539],[7.266718,8.273193],[-5.429945,-6.043223],[1.596121,-0.796599],[-5.240349,-0.299749],[7.662992,-7.460604],[-9.290496,2.725571],[-6.468701,-6.271383],[5.843457,1.779639],[-0.438983,-3.311031],[-8.697570,-7.860457],[3.284971,-9.697177],[2.767954,-0.687685],[-9.811014,-9.837794],[1.474597,-3.167172],[-9.758058,-3.212362],[8.999821,-7.250403],[-1.963021,-8.541377],[3.364272,1.442821],[-5.479559,-5.327474],[-9.567826,-0.448449],[5.659739,8.438557],[3.284618,0.179600],[3.638861,6.480880],[4.421700,-5.660613],[-2.010716,5.257737],[4.662804,2.692386],[-2.298649,-4.547243],[-5.731850,-8.879528],[2.446347,-9.569647],[8.175068,5.622216],[2.986116,-9.418118],[-1.387411,-7.318384],[3.232873,9.097933],[-3.323781,-6.514966],[-6.038074,-0.086730],[-0.471840,9.983705],[-7.254590,-9.605251],[4.988307,-7.314877],[-8.294380,4.970822],[6.775206,1.196235],[3.398446,-5.322191],[3.818147,8.568407],[3.928931,-1.333757],[-2.668687,7.489852],[8.976787,-4.349615],[1.386343,2.335760],[6.835687,0.040187],[9.656392,-0.289392],[7.704432,-0.799424],[7.112757,-1.204133],[6.831915,-1.236124],[-1.654968,2.810278],[1.773738,-1.144843],[-7.746787,-2.902542],[1.227101,2.626682],[5.413807,9.659000],[-6.374745,6.523446],[5.085683,-1.779101],[0.375560,-4.374593],[-5.713898,2.935673],[-4.436211,1.791667],[-6.019993,-3.668903],[7.387840,-0.925820],[3.902757,2.243562],[8.428083,-2.563573],[-5.317139,-6.003143],[5.466337,-7.091616],[-9.984476,-0.321573],[6.014034,5.475544],[9.542700,0.461607],[3.741336,5.913120],[-2.191441,-4.273156],[-1.840463,-2.102275],[6.284080,-0.623093],[-2.361500,1.469806],[-3.970841,6.968360],[1.111989,4.002351],[-2.727852,2.067889],[-0.485520,0.930572],[9.378330,7.337801],[-7.479897,-6.725634],[-1.140985,-0.984523],[6.907144,0.333116],[6.967381,-0.031989],[9.351749,-4.405688],[-0.949429,-6.016077],[-4.262561,5.809398],[5.317662,7.265604],[2.274310,-8.435874],[-2.474629,-3.840442],[-4.921685,-8.226967],[-4.508403,-4.413204],[-8.155992,3.385626],[-0.234043,-3.758837],[5.898276,-1.963340],[-1.212611,-9.718904],[7.718360,9.557935],[-7.713665,-9.512656],[2.974667,-8.271385],[9.251802,9.322791],[6.333350,-5.401696],[-3.436045,1.156552],[5.631644,4.518254],[2.149884,4.103116],[-2.509821,3.021164],[-3.824014,5.492513],[-0.644430,8.586104],[-6.028967,5.501785],[2.021471,8.560095],[-9.436422,-2.001058],[-0.185779,2.967374],[5.639444,-0.951238],[7.600937,-3.771045],[9.210907,7.132812],[-5.648270,2.489020],[-8.943833,-3.758369],[8.702100,8.525739],[-5.680744,2.087520],[7.749194,9.561287],[8.247523,-9.598104],[1.862128,-6.799848],[-8.658545,-2.335827],[-5.995962,5.879593],[-5.996677,-4.804627],[7.730496,-7.600182],[1.718040,-3.440388],[-9.202646,-7.309808],[-4.303995,8.282723],[6.199994,-5.077478],[5.716087,-7.326174],[6.382190,-2.850320],[-4.673940,0.817946],[0.159573,8.117617],[4.005528,4.706510],[8.764114,3.108942],[8.708682,8.432847],[-6.312446,-3.470665],[-5.369867,8.160180],[7.977352,-8.617825],[-2.935255,2.354705],[8.234595,6.764525],[1.352304,-0.712119],[-9.361774,-9.253014],[-8.490392,-0.031705],[9.899433,2.623142],[-3.557162,4.739471],[-1.869132,4.686945],[2.441037,-7.665103],[8.086877,4.069388],[2.139673,-8.969144],[2.730586,9.045122],[-4.093066,-9.862784],[-2.055493,-2.116946],[-1.250972,-9.727513],[1.609811,-4.986776],[2.479518,6.739893],[-1.927501,6.208649],[-1.651778,4.097910],[-9.938566,-4.211085],[-5.622380,-2.214854],[-1.383281,6.380396],[9.790430,5.532542],[6.426806,8.798958],[1.670921,-1.921179],[-2.221168,6.838488],[8.935811,-6.427171],[2.227979,-1.369075],[-4.924950,-4.200977],[3.032621,5.517145],[-6.464246,6.330265],[-0.112447,-0.935182],[2.516301,6.851200],[-7.409504,6.621791],[7.673245,6.334709],[-8.025272,9.474500],[-6.257522,8.648444],[4.310050,-3.504248],[2.982310,-6.557705],[8.901359,6.410705],[2.526026,-3.151404],[1.152228,6.986869],[5.931527,9.819161],[-4.388455,-1.011185],[0.704258,7.950574],[3.424919,-0.240619],[1.810990,-9.046430],[0.373777,-7.676640],[1.646941,-0.238538],[-6.944985,5.535351],[-9.507575,8.036251],[2.631790,3.692799],[7.622791,-5.704563],[5.519295,8.642876],[6.876674,7.012321],[-4.818427,8.817391],[-9.620403,-1.467504],[0.043142,-2.119402],[5.855346,-8.804474],[-0.373388,5.667606],[-6.943560,-7.726754],[-0.113932,8.914410],[6.373041,-7.399283],[-1.038290,3.626497],[8.588291,3.980763],[-6.726475,-0.392963],[8.131801,-0.008891],[-3.518986,4.752974],[5.767477,-0.793093],[9.840263,1.046314],[-1.072227,-9.433451],[5.315392,5.133756],[-3.209142,1.231316],[1.776986,-0.252811],[0.326982,-2.966820],[-9.390374,-0.741084],[4.407883,9.697331],[-4.792379,0.453449],[-4.985006,4.397049],[-8.367646,-9.992410],[2.335350,2.806189],[6.729565,7.347384],[-7.732312,-1.884639],[7.544035,5.409592],[-8.903470,-9.017876],[7.198376,1.331634],[8.557280,-8.835207],[-7.623440,-1.630217],[-7.289504,-2.952345],[5.324677,-9.786950],[5.729430,-3.859060],[-4.204744,6.399513],[-5.342834,8.680724],[1.208638,8.840557],[-6.622072,-9.526196],[-7.037697,-0.572682],[-6.930370,-4.199226],[4.086884,-4.001166],[-5.989454,9.557778],[-6.565282,8.166487],[-3.621380,-7.673914],[2.982856,1.483542],[5.100999,-5.032278],[-4.586387,9.321719],[1.853423,2.524471],[-1.041887,5.812964],[-9.175525,8.461205],[4.942428,-2.745968],[-2.518497,-2.125150],[-8.444277,3.354901],[3.189842,-8.861848],[-3.145096,1.402540],[9.096203,-7.674918],[-4.656884,-9.364124],[2.137062,5.886923],[-9.204921,-1.569314],[-1.177816,3.846998],[-3.385218,5.167930],[-4.917925,-4.038859],[5.130712,7.921331],[-4.225376,-5.685175],[0.050889,7.171683],[5.530548,-7.828539],[-3.187808,-8.922996]], dtype = "float64")#candidate|8261|(560, 2)|const|float64
call_8260 = func_2670_call(relay.reshape(const_8261.astype('float64'), [14, 10, 8]), relay.reshape(const_8261.astype('float64'), [14, 10, 8]), )
call_8262 = func_2670_call(relay.reshape(const_8261.astype('float64'), [14, 10, 8]), relay.reshape(const_8261.astype('float64'), [14, 10, 8]), )
func_6415_call = mod.get_global_var('func_6415')
func_6419_call = mutated_mod.get_global_var('func_6419')
var_8274 = relay.var("var_8274", dtype = "float32", shape = (6, 64))#candidate|8274|(6, 64)|var|float32
call_8273 = relay.TupleGetItem(func_6415_call(relay.reshape(var_8274.astype('float32'), [16, 2, 12]), relay.reshape(const_8249.astype('uint64'), []), ), 6)
call_8275 = relay.TupleGetItem(func_6419_call(relay.reshape(var_8274.astype('float32'), [16, 2, 12]), relay.reshape(const_8249.astype('uint64'), []), ), 6)
uop_8285 = relay.atanh(const_8261.astype('float64')) # shape=(560, 2)
bop_8288 = relay.right_shift(uop_8285.astype('uint64'), const_8249.astype('uint64')) # shape=(560, 2)
output = relay.Tuple([bop_8241,call_8244,var_8245,call_8248,var_8250,call_8260,call_8273,var_8274,bop_8288,])
output2 = relay.Tuple([bop_8241,call_8246,var_8245,call_8251,var_8250,call_8262,call_8275,var_8274,bop_8288,])
func_8292 = relay.Function([var_8239,var_8240,var_8245,var_8250,var_8274,], output)
mod['func_8292'] = func_8292
mod = relay.transform.InferType()(mod)
var_8293 = relay.var("var_8293", dtype = "int32", shape = (15, 6, 9))#candidate|8293|(15, 6, 9)|var|int32
var_8294 = relay.var("var_8294", dtype = "int32", shape = (15, 6, 9))#candidate|8294|(15, 6, 9)|var|int32
var_8295 = relay.var("var_8295", dtype = "float32", shape = (8,))#candidate|8295|(8,)|var|float32
var_8296 = relay.var("var_8296", dtype = "uint64", shape = (1872,))#candidate|8296|(1872,)|var|uint64
var_8297 = relay.var("var_8297", dtype = "float32", shape = (6, 64))#candidate|8297|(6, 64)|var|float32
output = func_8292(var_8293,var_8294,var_8295,var_8296,var_8297,)
func_8298 = relay.Function([var_8293,var_8294,var_8295,var_8296,var_8297,], output)
mutated_mod['func_8298'] = func_8298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8484 = relay.var("var_8484", dtype = "int16", shape = (7, 11, 4))#candidate|8484|(7, 11, 4)|var|int16
const_8485 = relay.const([[[-5,-10,3,-6],[-5,10,10,-8],[10,-4,3,5],[-5,8,7,1],[-8,-3,-1,4],[4,7,1,-7],[-5,-1,-10,-8],[3,-8,1,-2],[-2,-4,6,10],[1,5,5,2],[5,-6,-2,-10]],[[4,3,9,6],[2,4,-9,9],[-2,-3,8,-6],[-1,-10,9,-5],[-7,-8,-6,8],[6,6,-6,9],[-1,4,-8,-4],[5,1,1,-6],[-8,7,-3,-2],[4,-6,4,8],[-8,7,-5,6]],[[-3,3,-6,-4],[-5,8,3,7],[-9,10,10,1],[10,-5,-6,-2],[-9,5,-4,-10],[10,-7,10,-4],[10,-2,-10,8],[10,-7,-4,9],[4,1,-3,-8],[-10,9,10,-7],[-5,-1,-6,7]],[[10,-4,2,10],[-7,7,1,-4],[2,-1,7,5],[8,9,2,-10],[9,-9,-9,-1],[9,6,-3,2],[-4,-8,-10,-2],[-8,4,8,-4],[-10,-2,-3,5],[10,3,6,9],[-10,-10,1,-3]],[[-5,-8,-1,-2],[5,-1,-6,2],[2,7,3,-7],[-4,-3,2,-3],[3,2,4,-8],[-9,-9,9,-8],[7,8,-5,10],[5,4,1,6],[9,-9,-5,1],[-8,-8,-2,-8],[4,-6,3,8]],[[-3,-7,2,-10],[3,-3,6,2],[-6,9,-7,-4],[2,-1,10,-5],[4,7,5,-8],[-7,-1,-6,-7],[3,10,-4,4],[6,5,7,-9],[1,-6,3,9],[4,5,2,2],[-9,-9,9,-2]],[[-1,3,8,8],[7,-8,-9,-10],[-8,4,-6,-9],[-9,1,4,-4],[-10,-10,8,10],[1,6,6,2],[3,-5,-2,-6],[-3,-10,-10,-1],[-9,1,-8,-3],[-8,8,6,-9],[3,10,10,-6]]], dtype = "int16")#candidate|8485|(7, 11, 4)|const|int16
bop_8486 = relay.greater_equal(var_8484.astype('bool'), relay.reshape(const_8485.astype('bool'), relay.shape_of(var_8484))) # shape=(7, 11, 4)
uop_8489 = relay.erf(var_8484.astype('float64')) # shape=(7, 11, 4)
func_5946_call = mod.get_global_var('func_5946')
func_5954_call = mutated_mod.get_global_var('func_5954')
var_8494 = relay.var("var_8494", dtype = "int64", shape = ())#candidate|8494|()|var|int64
const_8495 = relay.const([-1,-1,2,4,-4,6,-9,5,9,7,-3,4,6,-5,-8,10,-5,-8,-2,-8,-9,10,-3,1,10,2,2,7,1,2,8,-9,-2,-1,1,9,-4,-9,3,9,-1,-9,6,-2,7,6,-5,8,2,-10,-9,-5,9,7,6,-7,6,10,3,-7,-6,-4,10,6,3,6,-8,-2,3,-1,5,5,-6,-3,7,-7,-5,-1,5,8,7,2,3,10,-5,-6,-9,-4,-6,-1,-7,3,1,8,3,-8,7,4,1,-9,-7,9,-6,10,-7,2,-1,-7,-10,2,8,4,7,-9,-3,7,3,-7,-6,-10,10,-9,8,-5,9,-2,5,-6,5,1,4,-8,-3,-6,4,3,10,4,8,-6,7,5,5,6,-9,-8,6,-9,-2,9,-3,-9,4,8,-3,8,4,5,7,7,-8,-8,-2,-5,-2,-10,7,-7,-3,5,-9,7,8,-3,3,10,7,-10,-5,-3,9,3,3,1,4,1,8,-1,9,-3,3,8,1,9,2,6,-5,1,10,-1,7,10,-9,-4,-4,-5,-10,7,10,9,7,-3,-4,-10,8,9,-3,-1,-1,-3,1,3,10,5,5,-9,-1,5,-1,-10,-6,2,-1,4,-9,-8,-6,4,-1,3,4,10,-8,-1,-10,6,3,9,-5,7,-1,-8,7,2,-2,-6,9,-2,-1,-6,3,8,1,9,10,2,2,-8,-2,7,-5,8,8,-3,-2,-9,10,-10,-5,-9,-6,8,-8,7,7,2,8,8,-2,3,7,-9,-9,9,10,1,-8,-4,-3,4,6,4,10,9,10,-5,6,-7,7,-1,4,2,8,8,-10,3,-10,1,-8,3,-4,8,-4,-7,3,-7,9,-10,-9,10,1,-5,-2,-3,7,-2,-6,-3,7,3,-7,6,-2,-2,-5,10,8,8,-2,-2,-9,-9,7,5,-1,4,9,-3,6,-3,8,6,-7,-5,5,7,4,-1,2,-4,4,-1,8,5,-9,-5,-10,-2,5,-7,7,-6,-3,-3,-3,-8,-5,-4,-4,8,-7,-10,-6,-7,10,-3,9,-7,8,-7,-6,-2,5,7,4,3,-10,10,5,-9,3,-1,3,7,7,6,9,6,3,3,9,-9,-9,5,6,9,7,-2,-8,-4,2,-8,-6,-7,8,-6,-6,-5,4,8,-5,-9,-5,-3,-1,7,6,6,-2,3,-5,-6,-4,7,-5,7,-10,-4,-9,-9,5,6,5,-3,7,6,5,-4,-5,6,-3,-1,9,-9,4,1,-8,-1,8,-10,2,-8,10,-5,-4,6,-3,-2,4,-3,3,-8,-8,4,2,3,-9,-10,-5,-3,-7,-6,-8,3,2,-8,9,-6,4,-2,-1,10,-8,-9,9,-1,3,-7,8,2,-5,6,8,-10,9,9,-1,-2,-1,-1,6,-7,1,-1,5,2,-4,5,-8,4,-10,-9,-2,-9,3,3,4,-10,5,6,3,-3,6,-10,-4,-4,-5,-5,-8,-10,-4,2,-5,3,-2,-2,-8,-3,-5,-1,-5,-5,-1,-7,-5,-10,10,-7,4,4,8,4,-3,10,-10,-8,7,-7,-6,-5,-1,-9,9,-5,5,-3,-9,1,-4,1,4,-8,5,-7,-2,-1,9,6,-8,-5,4,8,-2,5,-1,-9,6,-8,-5,-1,9,-1,-1,-8,-10,2,10,-7,-10,-8,9,-8,7,5,2,10,-7,10,10,7,-3,-5,-8,5,7,8,5,2,-3,5,-4,-7,-7,-8,-8,-6,5,-4,-4,-2,-6,-8,8,4,-6,9,3,-10,4,5,5,3,-5,-5,-9,1,-7,6,-8,1,9,-3,-5,-3,4,-2,-1,1,3,-4,-2,8,3,-9,4,4,-9,6,-3,4,8,4,-1,7,10,-6,8,4,-8,2,-2,-5,-5,-4,1,4,3,3,5,-10,3,9,-10,7,-5,-9,-7,-5,-7,-1,-6,10,-4,-3,-2,6,-9,-1,8,-6,-6,10,-1,-6,-4,9,-1,-9,-9,-8,5,8,-10,10,4,-1,-5,4,5,-6,-4,-9,1,3,-10,3,-6,-9,10,4,-7,4,7,-8,7,-1,9,7,-10,2,-3,5,-5,-6,4,-1,-7,3,-5,4,4,-3,7,-3,-2,7,1,7,-6,3,2,-5,8,-3,-10,7,2,7,1,6,-6,-1,5,-2,-10,3,8,-3,5,-1,2,-8,-7,-4,8,4,-3,2,-2,8,-1,5,10,-8,-1,3,9,8,8,-6,3,2,-6,3,1,1,-6,-1,-4,5,-8,-1,-10,4,-2,-6,-2,-3,5,6,9,5,-4,6,-5,-7,9,-1,6,9,-8,5,5,8,-5,-5,-2,2,7,5,-8,7,10,-8,-7,-6,-2,-5,-10,7,7,-10,2,-4,3,-3,4,10,-1,-10,-3,-1,5,2,-1,1,-2,-7,-6,-5,2,9,9,-10,6,-9,4,4,8,-7,8,6,-10,4,4,4,-7,-2,10,7,1,7,-7,-7,10,5,1,-7,2,6,9,4,2,-2,-9,10,-6,5,9,-10,5,6,5,-6,3,7,-1,7,8,-8,10,-8,7,2,7,-7,-5,8,-6,-1,8,2,6,5,-1,-2,2,-1,-3,-9,5,3,-8,-2,-5,5,8,5,9,1,-4,4,10,7,8,-4,-1,-3,-5,-5,-7,-6,-10,-2,-10,10,3,-9,9,8,3,10,-8,5,9,6,2,2,2,10,6,-5,4,-4,10,-4,-4,9,7,-7,-5,4,-6,7,10,-9,7,-7,-8,6,5,-10,-4,2,4,10,2,-7,10,-4,1,-9,7,-9,-9,2,-7,-2,5,6,3,9,10,2,9,-2,-1,-7,9,5,3,9,-2,-2,-6,6,-4,3,-2,6,2,2,-1,4,-4,-7,8,8,-8,7,-7,-1,10,5,-10,-3,-2,-6,1,2,-10,-4,-6,6,-3,10,-8,10,-7,-9,-9,9,-5,-4,-4,-4,7,1,-2,-9,-4,6,-10,-9,5,-5,-10,6,9,4,8,8,-7,9,7,-6,-9,-2,-1,7,1,-10,6,6,6,7,-7,-7,5,6,6,-5,-6,-5,2,-5,-3,3,9,-3,9,-6,8,-1,-1,-6,-2,-5,2,7,9,-4,-5,4,-6,8,8,4,-9,-10,3,-1,-9], dtype = "int64")#candidate|8495|(1183,)|const|int64
const_8496 = relay.const([[-9.995950],[-0.469918],[7.805814],[-2.261403],[4.863616],[-2.247541],[-2.508651],[-8.745961],[8.827323],[-5.482523],[-0.085051],[-9.256563],[1.047483],[-4.757940],[0.406583],[-3.616569],[0.003836],[8.940097],[-9.216022],[-1.323429],[-0.661941],[4.271635]], dtype = "float64")#candidate|8496|(22, 1)|const|float64
var_8497 = relay.var("var_8497", dtype = "float64", shape = (264,))#candidate|8497|(264,)|var|float64
var_8498 = relay.var("var_8498", dtype = "float32", shape = (260,))#candidate|8498|(260,)|var|float32
var_8499 = relay.var("var_8499", dtype = "float64", shape = (30,))#candidate|8499|(30,)|var|float64
call_8493 = relay.TupleGetItem(func_5946_call(relay.reshape(var_8494.astype('int64'), []), relay.reshape(const_8495.astype('int64'), [13, 7, 13]), relay.reshape(const_8496.astype('float64'), [22,]), relay.reshape(var_8497.astype('float64'), [264,]), relay.reshape(var_8498.astype('float32'), [5, 52]), relay.reshape(var_8499.astype('float64'), [30,]), ), 6)
call_8500 = relay.TupleGetItem(func_5954_call(relay.reshape(var_8494.astype('int64'), []), relay.reshape(const_8495.astype('int64'), [13, 7, 13]), relay.reshape(const_8496.astype('float64'), [22,]), relay.reshape(var_8497.astype('float64'), [264,]), relay.reshape(var_8498.astype('float32'), [5, 52]), relay.reshape(var_8499.astype('float64'), [30,]), ), 6)
bop_8505 = relay.logical_xor(const_8495.astype('int16'), const_8496.astype('int16')) # shape=(22, 1183)
uop_8525 = relay.log2(uop_8489.astype('float32')) # shape=(7, 11, 4)
output = relay.Tuple([bop_8486,call_8493,var_8494,var_8497,var_8498,var_8499,bop_8505,uop_8525,])
output2 = relay.Tuple([bop_8486,call_8500,var_8494,var_8497,var_8498,var_8499,bop_8505,uop_8525,])
func_8527 = relay.Function([var_8484,var_8494,var_8497,var_8498,var_8499,], output)
mod['func_8527'] = func_8527
mod = relay.transform.InferType()(mod)
mutated_mod['func_8527'] = func_8527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8527_call = mutated_mod.get_global_var('func_8527')
var_8529 = relay.var("var_8529", dtype = "int16", shape = (7, 11, 4))#candidate|8529|(7, 11, 4)|var|int16
var_8530 = relay.var("var_8530", dtype = "int64", shape = ())#candidate|8530|()|var|int64
var_8531 = relay.var("var_8531", dtype = "float64", shape = (264,))#candidate|8531|(264,)|var|float64
var_8532 = relay.var("var_8532", dtype = "float32", shape = (260,))#candidate|8532|(260,)|var|float32
var_8533 = relay.var("var_8533", dtype = "float64", shape = (30,))#candidate|8533|(30,)|var|float64
call_8528 = func_8527_call(var_8529,var_8530,var_8531,var_8532,var_8533,)
output = call_8528
func_8534 = relay.Function([var_8529,var_8530,var_8531,var_8532,var_8533,], output)
mutated_mod['func_8534'] = func_8534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8642 = relay.var("var_8642", dtype = "float32", shape = (8, 11, 12))#candidate|8642|(8, 11, 12)|var|float32
uop_8643 = relay.log2(var_8642.astype('float32')) # shape=(8, 11, 12)
func_2553_call = mod.get_global_var('func_2553')
func_2559_call = mutated_mod.get_global_var('func_2559')
var_8655 = relay.var("var_8655", dtype = "float64", shape = (108,))#candidate|8655|(108,)|var|float64
const_8656 = relay.const(True, dtype = "bool")#candidate|8656|()|const|bool
const_8657 = relay.const([False,True,True,True,True,True], dtype = "bool")#candidate|8657|(6,)|const|bool
const_8658 = relay.const([[-7.998804,3.867893,5.568741,5.189995,8.350948,-2.693767,-8.048210,-9.435339,-9.375826,8.564104,9.298989,5.253096,0.766692,-1.559739,4.731806,9.030511,-4.735320,-4.337088,-2.468748,0.327905,1.525451,-9.546327,-2.114038,-7.794957,2.330389,8.804040,-5.595969,3.663768,0.943324,1.604657,-1.832488,0.873123,5.374165,-4.592922,9.585891,5.654394,2.782728,-7.502338,5.065985,-7.195797,-8.790309,0.234136,-7.969747,-6.236280,1.816851,9.806209,6.319295,-9.824771,-4.102997,-7.464847,-1.861532,-6.826681,2.054845,5.015325,-2.889652,0.675953,-0.165512,2.841484,3.006492,-4.705673,3.103819,-9.194559,-1.798967,-5.256508,8.223238,-7.423734,-9.381483,5.556419,8.874509,-3.747191,-2.104520,-8.876280,4.699533,-6.918998,-3.127158,5.682054,-5.500828,-3.754451,-4.176560,9.914212,4.933884,6.235729,5.975661,1.321105,-4.694091,-8.877667,7.194810,5.509423,-7.980658,-2.379827,-9.432364,-5.220652,5.467903,-7.690348,4.345770,-0.423277,7.865168,2.029160,-4.908299,-6.040235,-5.874327,-2.088165,3.299153,-5.281920,9.417463,-0.929839,-2.598846,-6.885080,9.083705,6.652365,-0.523950,7.728175,-1.564311,-1.447228,5.328282,4.964091,5.875673,-5.504550,6.382898,-6.436553,3.870485,-3.201870,-3.809362,2.893114,6.782975,-7.426717,-7.831399,-5.320469,-0.978853,-9.838238,9.168055,-1.050315,2.378692,9.728720,6.035405,4.738018,7.365267,9.954059,-4.647425,4.610815,4.144260,9.374806,-7.002651,-4.855549,9.809004,-4.394130,-4.741987,2.794220,7.666048,-8.458132,7.477561,9.311845,-1.629971,-0.087002,-7.022915,-7.501310,3.500590,8.659656,2.322543,2.644182,-1.970243,8.323108,-7.980201,-8.224768,-5.629219,-5.701851,-3.058978,-8.029382,-7.318429,9.166316,-2.108274,7.635226,-2.122023,0.911208,-1.126478,-9.311713,7.238684,-0.699833,-1.019350,0.200250,8.037485,-8.406978,-5.042368,-2.782976,1.223793,8.549889,-1.570555,-6.752129,0.921630],[-3.064596,-7.832580,7.582384,8.815801,1.873159,-2.635451,-3.174591,-5.830591,-5.049909,9.198689,-9.212816,-2.762957,-1.654274,-2.020646,2.415991,2.988335,4.630878,-5.005516,1.950173,-0.897497,-8.372355,0.285790,5.922789,0.262907,-1.028763,-9.039779,-8.349320,-0.658987,0.538275,4.694134,5.624112,3.717808,-4.734611,9.200678,8.292207,-5.332428,-8.840313,-4.447652,0.571214,8.162030,-6.634131,-5.967473,7.102921,1.825791,8.044966,3.560506,4.869590,-1.205231,8.345129,3.440930,2.333109,-5.350317,-4.182157,6.291911,-8.856133,8.905204,3.018711,7.765258,8.737743,7.991544,8.596852,5.497747,9.673342,-7.024068,8.141055,8.942648,8.973219,-9.844760,-5.062008,-0.974441,9.832184,3.752665,6.439870,4.389500,-2.578664,-7.283043,2.838118,-8.985448,1.329365,7.180093,3.652184,8.466735,-2.123394,-4.952317,-2.061872,-3.525171,-0.395013,-9.074582,-6.625175,-9.027183,-8.203485,1.958258,-7.744002,8.856456,-2.094710,-1.874965,8.091803,7.389265,-2.274014,6.083657,-9.979745,-1.544447,6.693634,-3.415795,-3.320376,-3.750121,9.713267,-6.600811,-6.358198,2.406320,5.964901,-9.127940,-9.992982,-7.281671,0.975898,1.586658,1.229761,-6.700464,-5.870948,8.654657,-8.096561,1.262151,5.826869,1.901838,6.515779,-7.410705,4.251915,-3.226841,-3.243378,-1.067808,-4.329769,2.021647,5.525536,-0.637350,4.550765,-3.599969,-2.551158,3.342635,2.506745,4.969335,-6.474391,5.215965,-2.193314,2.719328,1.281171,-3.896775,6.894968,3.316366,3.786034,-1.673758,8.649315,-4.341454,-2.557751,6.371375,6.970288,2.333605,7.801749,7.055741,-2.536849,-5.254805,-6.318937,0.580962,6.392124,-0.197619,-0.031093,2.615754,5.324590,0.017085,0.202089,0.601497,1.936090,-7.414519,-0.434564,-7.532004,-9.316350,-0.098948,3.827571,-5.016435,-0.358998,-4.105080,3.554321,6.096233,7.376912,7.164657,5.685985,8.463381,9.880489,1.194818,8.433613],[-5.091675,8.632624,-4.239235,-0.905406,5.689025,1.530911,8.951457,5.996237,3.002038,-0.850495,9.086922,-4.725571,-3.048773,6.303927,5.712614,-4.556742,-3.427040,-3.349187,-4.428928,-9.815665,8.887180,6.340175,-2.558135,6.460927,-2.991849,-9.391128,-2.163174,-9.428043,-1.597902,-3.149956,6.846250,2.124776,-1.472998,-5.557597,-7.534622,-5.624551,6.353184,1.643095,-4.392610,5.569872,-8.014873,8.122265,-7.542767,1.346679,2.201357,-7.219571,-8.319712,-8.926241,3.086976,-4.984565,9.681431,-3.933564,-9.401998,1.919791,-4.114530,6.066079,-1.131404,7.108064,1.040510,-1.402576,7.219420,3.265754,-2.901733,-4.924193,-5.620670,-5.693909,-9.506420,-9.032688,-9.722999,7.686675,9.964854,7.122440,6.772173,-9.236095,2.513323,3.826152,-8.059575,6.932727,8.057762,-3.886898,-1.321320,6.899734,9.596127,4.734134,4.619154,4.117226,-8.657944,6.060464,2.851819,-5.113408,-4.057018,7.064669,-2.820370,9.440388,2.655319,4.228863,-9.012653,-6.247063,3.105583,7.086102,-6.992982,9.398439,0.733358,2.647261,-9.531007,-3.703269,4.379994,5.683632,-3.029740,1.226145,7.737329,6.468713,-4.395604,1.549737,5.314165,-0.400124,8.253121,-7.161113,-9.372574,-8.285039,2.853647,5.632829,-2.363497,-6.211890,-1.772023,-2.042863,6.629389,4.758660,1.380142,7.405791,-6.187525,9.360012,2.076251,-0.449270,3.453241,-2.886479,4.336263,2.478385,6.787459,-8.485560,-5.803657,3.116619,-8.965880,7.948184,2.295814,3.431218,-4.841171,-5.691685,-0.180207,-2.539992,9.368191,6.349828,-8.870519,-3.925372,-0.788811,5.099544,-6.200402,-6.201792,-9.490346,-1.910618,-9.002067,5.939199,-2.798661,-2.265469,-9.264772,-6.229766,-5.063583,3.580925,6.747111,-7.818560,-3.220997,-0.530734,-2.987411,-7.367128,-4.812107,-9.126626,-5.826448,3.296867,9.070016,5.545511,-4.014729,0.626494,9.518937,-8.112929,9.592356,0.940673,-7.102077,-2.161056,-7.667130],[5.535932,6.177232,-0.387781,3.410067,3.222366,6.069994,7.040366,-5.357352,-4.221491,1.519229,-6.420836,1.347721,-8.347996,5.986975,-3.326402,8.749670,-4.232411,-2.238838,-3.199475,9.652579,-2.956859,1.621274,-2.439866,2.262169,9.376434,2.157085,0.161725,3.126844,7.578770,-6.714335,7.705373,4.503913,-8.454459,-6.829725,-7.620365,-9.190724,-1.701268,-6.576858,-4.299381,-3.431057,-1.712284,7.413346,-3.329056,8.582536,-0.733360,-5.677844,-9.939061,0.434483,5.145350,2.616031,5.852001,-2.139881,3.715361,5.212667,-4.610062,-1.737496,1.407522,-2.907255,-7.421436,6.959418,5.023120,-9.174053,-5.304786,6.425292,5.912668,4.580466,-3.485754,3.120333,-8.212315,6.304391,-2.064260,7.110139,-0.692639,9.289730,1.458229,2.325028,-1.083863,-7.671702,4.607628,-1.934274,2.073103,-3.504833,-7.108003,8.201895,-1.630665,7.638769,-1.875939,-9.165906,1.299573,-7.048718,7.652412,4.326319,0.104903,-3.617437,0.345625,-4.728635,-5.711462,2.953569,-4.898806,5.396728,7.644183,2.817096,4.063921,-6.200181,4.920619,3.332677,-4.922679,4.337392,6.341365,4.105559,-7.247063,3.576745,-1.674041,3.134319,7.817353,0.118227,-1.241452,1.250249,-0.498713,-8.436182,-5.096521,-0.592425,-7.047339,-4.431760,0.678465,6.659742,0.505586,-1.962403,8.386821,-9.074848,-0.159056,9.356419,-6.217717,-7.127135,9.842936,6.180649,2.721920,-8.944125,8.963526,9.909820,-0.123745,-7.473707,6.423561,5.271455,5.616175,5.641125,8.140280,-3.085340,1.861906,1.496460,1.249074,-5.346825,-4.204744,-1.619800,-2.830663,2.398977,-5.831251,-7.170024,-7.105584,-8.655378,-5.934391,-1.269134,2.192954,4.577441,6.918000,5.095041,6.745808,9.227280,-2.144851,1.630392,3.459393,-6.459213,4.565543,7.292109,-4.439861,3.441600,-7.138161,7.942982,-7.916689,-2.026939,7.821592,-7.657776,-4.509793,-9.370475,5.470285,3.288099,-5.164477,2.860720,-5.823388],[-6.751242,-2.390353,1.031037,2.177441,-7.231740,-7.804390,1.652865,-6.650293,-7.427321,-1.842273,-7.254188,6.296978,-9.233188,1.423593,7.988975,3.803495,-0.348648,4.669106,-0.607275,-9.908902,-9.332323,4.217415,-2.358569,2.789051,-9.420025,-7.400874,4.967474,-5.373428,8.915532,1.863786,-0.296387,-0.837645,1.038526,-3.410026,-4.981860,-5.524723,0.476354,2.785151,-8.776768,2.333197,-1.686273,6.097907,0.464902,6.777964,1.402575,2.853076,0.734985,-1.025169,5.949985,-5.771823,-9.242474,-4.900697,4.939467,7.617841,-1.245905,-8.950163,-1.293329,-4.269232,-1.590819,4.712197,2.159186,0.458096,-1.060744,8.951743,-6.409182,-7.302117,-1.945891,9.366441,-4.502205,9.250090,0.803832,5.023786,1.315378,6.249065,1.344057,7.302352,2.116700,-3.624817,9.194812,3.223084,7.033249,-6.900217,-0.821874,2.609001,-7.567850,5.909146,5.900268,-6.846992,-4.218855,-9.779757,-6.263611,-3.082107,-8.444033,4.224392,-8.057659,8.130469,-0.164999,-2.194890,0.538260,5.649862,-4.442003,0.431371,8.696165,0.051076,3.654506,-7.503319,2.133142,9.848466,3.322898,2.626531,1.039414,4.866903,-1.711087,-4.170823,-2.300294,-8.081003,-4.847203,-4.950141,3.175594,-9.416189,7.145329,-9.980013,7.584283,-9.576672,-3.712229,1.975974,-6.041131,-6.693739,-3.724837,1.855500,-2.083413,7.661805,8.993448,1.977737,3.024225,-3.168280,-1.214828,-2.346510,-3.048033,-0.374250,-4.326493,3.453018,-9.255801,-5.039322,-6.389750,0.538392,0.041495,-4.781727,-4.577474,3.933730,0.014705,-7.003903,-8.200895,6.938464,7.072647,1.770582,1.236434,6.630987,-7.480221,-4.076065,4.011064,-2.618692,4.997891,4.086587,-4.976054,6.207346,-1.251609,6.899459,-1.531209,-4.033220,-0.454926,-6.861729,-1.494909,1.740653,9.620694,3.650163,-5.704385,9.867890,-8.984255,5.179991,9.950431,-1.477730,8.794265,-5.945731,1.732081,6.757558,-9.947257,7.096177,7.256301]], dtype = "float32")#candidate|8658|(5, 189)|const|float32
var_8659 = relay.var("var_8659", dtype = "float64", shape = (30,))#candidate|8659|(30,)|var|float64
call_8654 = relay.TupleGetItem(func_2553_call(relay.reshape(var_8655.astype('float64'), [4, 9, 3]), relay.reshape(const_8656.astype('bool'), []), relay.reshape(const_8657.astype('bool'), [1, 6]), relay.reshape(const_8658.astype('float32'), [945,]), relay.reshape(var_8659.astype('float64'), [30,]), ), 4)
call_8660 = relay.TupleGetItem(func_2559_call(relay.reshape(var_8655.astype('float64'), [4, 9, 3]), relay.reshape(const_8656.astype('bool'), []), relay.reshape(const_8657.astype('bool'), [1, 6]), relay.reshape(const_8658.astype('float32'), [945,]), relay.reshape(var_8659.astype('float64'), [30,]), ), 4)
uop_8671 = relay.acosh(uop_8643.astype('float32')) # shape=(8, 11, 12)
func_4933_call = mod.get_global_var('func_4933')
func_4937_call = mutated_mod.get_global_var('func_4937')
var_8675 = relay.var("var_8675", dtype = "uint16", shape = (72,))#candidate|8675|(72,)|var|uint16
call_8674 = relay.TupleGetItem(func_4933_call(relay.reshape(var_8675.astype('uint16'), [4, 2, 9]), relay.reshape(const_8658.astype('float32'), [15, 63]), relay.reshape(var_8659.astype('float64'), [30,]), ), 5)
call_8676 = relay.TupleGetItem(func_4937_call(relay.reshape(var_8675.astype('uint16'), [4, 2, 9]), relay.reshape(const_8658.astype('float32'), [15, 63]), relay.reshape(var_8659.astype('float64'), [30,]), ), 5)
func_5153_call = mod.get_global_var('func_5153')
func_5155_call = mutated_mod.get_global_var('func_5155')
const_8693 = relay.const([3.131005,4.305559,1.369907,3.998866,9.371571,2.795822,-1.423374,2.285182,0.034771,0.257185,6.440690,3.273440,2.927422,8.140659,1.160357,6.103598,1.904119,0.639278,-9.694327,-4.732132,1.724055,-2.824238,3.660647,-0.957626,5.813662,8.746699,-9.720938,-2.575934,-5.794224,-6.883220,5.885504,-3.699672,-5.200106,7.896960,-6.331640,7.056408,-5.103770,2.523699,5.486033,-3.245569,-3.871222,-1.006438,7.148639,-6.309416,-0.196241,2.762899,-5.569843,-8.503375,9.496166,6.228492,-8.969712,1.889881,0.138571,-9.828776,-7.535335,2.315902,4.209789,-2.669078,-4.998378,-7.773377,5.229343,-1.860413,-9.040472,5.214812,5.018995,4.891378,2.036155,-5.999641,-5.195242,3.529815,5.770717,2.349706,-5.888168,2.615143,-1.620551,6.130053,4.268384,2.993017,2.870729,5.758936,2.224130,-1.566331,-5.199694,1.848070,2.106611,1.220131,2.138266,1.772268,-8.832945,-8.683155,5.120268,7.875410,-6.886188,-3.432633,8.931665,-9.318438,-0.126481,3.351250,4.963987,4.763790,8.651145,1.899081,4.758035,4.224637,-8.110763,-8.279486,5.303780,-5.029712,-6.524675,2.937568,7.842266,6.443614,-2.939373,-3.987885,2.483079,9.139817,-0.956001,-4.511598,8.125202,-6.468045,1.346695,3.558447,-0.478169,-9.747749,-7.255413,-2.053975,7.456206,-9.420590,-5.451028,5.083989,-3.684649,-0.997532,-7.998109,5.966522,-8.970575,4.261857,-1.395785,9.069435,-3.673047,-1.125771,5.101795,-8.219852,-5.899606,6.349400,1.584315,-1.290732,4.864314,1.375619,4.242538,0.006020,-4.520580,-2.530366,-3.534023,6.413390,3.302896,2.549882,-4.011038,-3.038478,-5.586256,9.421475,-5.231951,-6.318938,-7.346727,2.740707,-8.572153,-0.992926,7.376942,2.905743,-5.697428,5.062277,-7.911362,-8.494456,-0.139187,0.150674,-5.118378,8.935616,1.765412,-3.628994,9.321740,6.214914,1.176245,-6.087711,-7.597795,-3.319512,-6.021596,4.120160,-4.768596,8.619436,-3.561906,-4.769240,5.894165,0.606414,2.238584,-3.817681,-3.004727,-5.055452,6.516560,-5.977666,-1.266509,-5.408215,-9.321792,-4.884437,-3.059386,-5.250505,-0.534792,5.759023,-6.935651,-3.030656,3.261126,-2.525734,8.502467,8.782933,2.735070,-8.978086,-6.360253,-8.707202,-6.714481,6.572476,-0.793661,7.909114,-3.864050,-8.364649,-1.562267,-1.806161,4.560381,6.822243,0.773552,-0.771665,-9.280469,8.482151,4.631754,-5.338221,-4.273877,-5.630523,7.070527,1.289294,3.440437,-5.387151,1.948319,0.297023,6.050436,5.837677,0.868820,8.138436,-4.417366,-0.784711,-0.372601,-6.443406,-1.907365,5.351821,-3.504940,-6.423056,-1.813252,2.555204,4.858125,-0.805954,0.642838,-1.468205,9.378217,3.367206,-8.007890,-4.506077,-7.935181,5.213281,3.501443,-7.415562,5.203569,9.536570,2.126283,8.623957,3.342843,5.140257,9.710702,6.678784,3.476039,3.405773,-3.537020,-0.118906,-1.735648,-2.685794,-6.461872,5.341625,7.020257,6.825821,-3.712774,7.120520,-5.725529,-9.849312,-3.254287,5.647107,-8.751517,6.117237,-2.847741,2.153594,5.196621,-7.218450,-8.212586,-6.325398,1.049700,-0.659215,-2.740773,9.495991,-5.065570,0.744008,-1.576535,-2.031321,1.998800,3.461556,3.228880,-9.883907,-0.596568,-3.084986,-4.961170,-2.291015,-6.987360,7.084588,5.996649,-7.452362,3.308999,-4.450939,-4.642594,-7.056096,6.518929,2.366436,6.689764,9.981311,-6.029854,-9.292067,-4.576909,-8.958350,-0.091690,-1.931369,3.062234,2.987099,-4.808821,-8.111060,9.381770,-6.844114,-2.735537,5.082789,9.203010,-4.671459,0.835867,-1.516854,0.826516,-8.176983,5.091369,4.038591,9.602818,6.825665,3.958519,-9.396353,-4.326813,0.481524,-0.311896,-5.931046,5.001766,-1.077648,-3.046701,9.192150,1.344109,1.266707,-4.153926,9.672643,1.740913,7.406238,-0.819086,8.241229,-7.160498,-2.027524,-6.623239,-6.170973,1.372113,-6.532500,1.404057,7.732687,4.775632,6.501392,-6.421592,-3.696631,9.812960,-0.181439,8.102737,7.705931,-7.289753,6.429861,-1.276645,-3.148355,-5.619741,6.834044,-2.393323,-0.183901,5.829169,2.937310,8.336222,-7.393834,0.879496,-0.701209,-5.833301,-8.505143,9.675789,3.721990,2.109013,9.714302,-7.137919,-8.809195,-6.092014,8.258466,-8.602391,7.467538,-2.255014,2.663156,-3.465746,-8.004609,9.814793,1.076435,-9.784018,-4.211180,-9.438605,2.975415,9.390327,-9.673601,2.635751,6.209791,-9.384542,1.445965,-0.083649,7.125380,-7.136406,-4.674272,-6.087144,9.034829,-0.579401,7.572763,5.403742,-3.054067,-3.971985,-0.968139,-0.919652,2.475477,-1.448983,0.656858,1.636351,2.525817,-7.378323,1.129136,7.986755,-9.890854,2.654899,3.680957,-3.104012,1.818296,-1.456523,-2.129891,9.847452,5.610846,-5.365334,4.322555,3.962586,-1.590835,-0.290715,3.660068,-6.652965,2.147135,6.653910,-3.479191,-2.965860,-4.424200,-0.345353,2.043303,-8.155689,5.582287,6.883480,7.462685,-4.497882,5.627983,7.053136,-0.136905,-1.887044,9.428695,-1.140330,3.367372,0.721090,6.618851,0.890776,-2.393574,-6.056718,-2.917746,-4.643794,-5.199018,2.837757,6.445494,-5.439851,-1.579338,2.555529,-9.562129,-2.368948,2.595413,0.735797,2.335271,2.199175,9.304217,7.921277,-4.563834,7.956753,-7.459662,-5.850964,1.927866,-7.378396,6.936309,-1.097723,5.971871,2.783050,-5.329554,-0.144767,8.990517,1.168218,1.266138,7.180702,-7.922237,-3.329191,3.287623,-5.151516,-6.049839,6.910508,9.508305,5.790374,-5.503016,9.078785,-0.943113,-3.354450,0.888173,-4.953356,-4.182334,-4.494574,-6.073744,-3.882883,5.917883,-2.001677,8.416864,7.817094,9.780983,5.771781,-0.809013,8.276661,-2.365753,-2.885122,7.209260,-3.866590,-2.385307,4.085975,-5.443228,8.711283,-0.587268,6.741789,3.588676,-3.922481,2.880279,-6.662786,-2.763326,-6.680919,5.752914,1.401189,8.596984,-4.314667,-4.617711,-8.718116,3.076571,1.742184,-3.599139,7.273901,0.679765,-4.770767,-9.231435,-1.836738,-8.035167,8.059496,-2.523849,1.646192,3.459491,1.461203,5.348000,-2.727764,9.850931,-2.423009,-5.291790,4.832055,-3.817449,-6.317282,-8.243059,4.563574,-2.680049,-3.337681,1.761654,-1.066921,-6.992075,0.713548,-7.162627,-0.399815,3.396952,6.971128,3.820754,0.340981,-1.997434,-2.496008,0.726550,-3.236982,-9.530597,-6.044944,-2.554736,-6.399232,-3.197709,-4.978968,7.482779,9.686603,6.807425,-2.786857,3.559242,-8.357108,-3.764483,6.136226,3.900447,8.398901,-7.849706,5.395805,-4.651398,0.333311,2.103430,9.221895,8.865826,0.043355,1.110158,8.860257,-1.380600,2.427431,-1.132844,-7.919533,-2.963207,0.363551,9.006979,5.125264,4.636199,-0.684619,-9.199160,5.908186,-0.620469,-4.487108,5.094426,5.026258,-3.066496,-4.930806,8.758080,-8.699888,-9.784288,-6.081588,-1.213401,4.769407,3.755327,4.267108,-0.187670,2.312588,1.929904,-5.014037,2.777372,-4.963647,-5.826363,-3.680751,0.061777,8.416694,-7.179468,9.657209,2.715723,-6.098242,8.019879,-2.806164,1.048728,-4.674961,-8.446363,5.982928,-7.340942,2.889836,-7.772638,-6.432040,-4.419305,6.397032,-4.858393,5.490370,1.254084,-5.669120,5.388734,-7.457114,-0.499069,-5.886819,-0.254473,-5.892897,0.233126,2.764953,0.280152,-8.556660,-8.766052,-8.406883,-9.596060,-4.774722,-9.523933,-4.257773,-6.976614,-9.336509,-7.224325,6.627355,-9.832585,7.819637,3.279171,4.402725,0.935810,-8.227028,0.443842,-8.019034,-8.811481,7.353069,4.380326,4.493871,2.557493,-0.335037,-8.435647,-3.086848,8.022395,-3.227358,-4.806221,4.726014,2.516593,5.877607,-1.673965,3.670585,1.367024,0.338880,-6.990258,-5.986374,-0.041362,6.193769,-8.385681,0.348864,-6.316835,-4.876719,6.385470,-6.681717,1.940250,7.589911,8.618417,-9.260031,-1.848646,7.080088,-1.781887,-6.620260,-1.869970,0.103648,8.487313,-2.877605,8.411223,-4.547696,-7.034321,2.198684,8.899484,6.042141,3.634028,2.314709,-5.048725,2.886734,-6.911363,8.830034,2.596525,8.549539,-2.302486,-1.612520,-5.656507,-7.195521,5.908411,-6.979262,1.677442,0.206077,3.718255,-7.432550,3.368322,4.132333,1.767043,-7.483847,8.821874,2.767276,1.535988,5.270526,-7.241005,-3.270906,-1.683627], dtype = "float32")#candidate|8693|(792,)|const|float32
call_8692 = relay.TupleGetItem(func_5153_call(relay.reshape(const_8693.astype('float32'), [8, 11, 9])), 0)
call_8694 = relay.TupleGetItem(func_5155_call(relay.reshape(const_8693.astype('float32'), [8, 11, 9])), 0)
func_8292_call = mod.get_global_var('func_8292')
func_8298_call = mutated_mod.get_global_var('func_8298')
const_8701 = relay.const([[6,8,9,-4,-9,-2,-4,4,-1,-3],[10,-3,-8,1,-6,4,6,-6,5,1],[10,1,-2,1,-5,-6,-8,-6,-9,-8],[7,-6,3,7,-1,6,-2,7,-3,-9],[-5,-3,-3,1,-7,6,-2,-6,4,5],[-4,1,7,9,-8,-8,5,-6,-2,8],[-8,3,7,-5,7,-10,-10,-4,-9,-8],[-3,-10,10,5,-4,1,-9,2,-6,-9],[-8,1,-10,-4,7,-3,-8,9,8,-10],[-10,4,5,-7,2,3,7,-7,-2,3],[5,-2,-1,-1,-6,1,1,-5,-1,9],[-2,-5,-8,-5,5,2,6,-3,2,7],[-4,-3,-4,-3,-5,-2,5,-4,-2,-5],[-9,-7,8,1,3,-9,-6,3,-3,9],[-7,2,10,6,7,9,8,-8,-3,8],[8,-2,-2,-8,-1,2,8,1,2,-10],[-1,-2,2,-9,2,2,7,-6,-8,3],[-3,-7,-8,1,-8,-8,9,-9,-9,-9],[-8,-3,-2,5,5,-9,-4,9,5,-2],[10,-1,10,-1,10,2,-10,4,-3,-2],[-8,7,7,4,6,4,-5,-5,7,-6],[8,7,-2,-10,2,5,4,10,6,5],[9,7,4,-9,-2,10,-4,9,-9,-2],[2,-9,-9,-10,-10,-8,4,-2,-9,-1],[-7,-2,7,-6,-10,-7,8,-1,-4,6],[5,4,-1,-8,-7,-3,8,-7,7,-1],[-4,9,4,-2,10,2,-2,-3,-3,5],[-7,-6,4,-2,-9,-7,-3,8,8,-6],[8,2,-4,-2,5,9,-6,1,-10,-2],[-7,-3,-7,6,9,-4,9,8,10,-2],[-7,-10,-10,4,3,-1,5,9,-5,9],[-6,-2,8,10,-9,-6,-5,-3,5,-7],[3,9,1,4,-2,1,-6,4,-2,4],[1,10,-4,3,10,10,-7,1,-4,8],[-8,5,-2,9,-5,5,-1,-4,-8,8],[6,-1,-6,4,9,-7,9,-2,1,4],[4,-4,6,2,4,4,-8,4,9,-4],[-10,-7,1,1,-1,-1,-6,-10,4,10],[1,-7,-9,3,-9,-8,7,7,5,3],[-2,-8,9,5,-9,-9,-9,9,7,7],[10,4,-1,7,-8,-1,-3,1,7,5],[-10,-8,3,8,3,8,1,1,3,-7],[6,-1,6,-1,9,1,-2,-2,-8,9],[-6,-5,8,-6,-1,4,-8,4,-9,9],[3,-1,8,-4,-2,10,-1,-4,8,-2],[2,4,-10,-5,7,7,3,9,-1,-10],[5,10,4,4,3,-10,-1,6,7,10],[-5,-6,-5,10,7,9,-9,-7,-5,6],[9,5,-2,-1,2,5,-8,-4,5,9],[3,5,10,-8,4,-5,9,3,10,-2],[-7,10,9,8,-9,5,6,-5,-1,1],[6,-10,-5,8,-9,8,9,-1,1,10],[8,-1,7,-1,10,8,10,-10,-1,10],[1,3,-3,6,-4,3,6,-6,-3,-5],[-1,-8,-9,5,9,9,3,-9,6,10],[4,2,9,-4,7,5,2,-10,-6,-10],[-2,6,-1,-2,2,9,-7,-7,10,-1],[3,-4,1,-6,3,-1,-7,10,2,6],[-6,-2,-7,1,2,-4,-10,-10,4,-8],[-3,2,6,9,6,5,-2,4,6,7],[-7,-5,-1,8,2,-4,4,5,10,9],[-9,7,-1,-1,6,7,10,8,6,9],[-1,2,-9,-5,-3,6,-9,3,1,9],[1,1,-9,-3,7,2,4,-1,-5,3],[-1,7,-9,-1,4,10,-7,5,9,10],[9,-4,-8,-6,-3,10,-8,-5,-9,9],[-8,9,9,-9,3,6,1,-4,7,3],[-1,-4,-2,-5,-7,2,-3,-9,6,-3],[-7,-10,-1,9,-6,-7,-7,-5,-2,-8],[7,4,-3,-4,-1,8,8,-8,4,-6],[-2,-7,-6,6,3,8,-5,9,7,7],[-10,8,4,-6,3,-7,5,-2,4,-10],[3,6,2,6,-1,-7,-9,-1,-1,9],[7,9,-10,4,10,-5,-1,10,8,-3],[10,-2,-9,2,-7,5,9,-7,-6,4],[-4,8,-2,1,4,-9,-5,3,-3,5],[-8,-6,-4,-5,-4,6,-10,5,5,-1],[9,-5,-2,-10,3,-5,-4,7,5,-8],[-3,-9,9,4,-8,-2,7,-3,6,-4],[-9,-2,-9,2,-3,3,5,10,5,-9],[-10,-10,-10,4,8,-9,-6,-1,1,10]], dtype = "int32")#candidate|8701|(81, 10)|const|int32
var_8702 = relay.var("var_8702", dtype = "float32", shape = (8,))#candidate|8702|(8,)|var|float32
var_8703 = relay.var("var_8703", dtype = "uint64", shape = (1872,))#candidate|8703|(1872,)|var|uint64
var_8704 = relay.var("var_8704", dtype = "float32", shape = (96, 4))#candidate|8704|(96, 4)|var|float32
call_8700 = relay.TupleGetItem(func_8292_call(relay.reshape(const_8701.astype('int32'), [15, 6, 9]), relay.reshape(const_8701.astype('int32'), [15, 6, 9]), relay.reshape(var_8702.astype('float32'), [8,]), relay.reshape(var_8703.astype('uint64'), [1872,]), relay.reshape(var_8704.astype('float32'), [6, 64]), ), 5)
call_8705 = relay.TupleGetItem(func_8298_call(relay.reshape(const_8701.astype('int32'), [15, 6, 9]), relay.reshape(const_8701.astype('int32'), [15, 6, 9]), relay.reshape(var_8702.astype('float32'), [8,]), relay.reshape(var_8703.astype('uint64'), [1872,]), relay.reshape(var_8704.astype('float32'), [6, 64]), ), 5)
output = relay.Tuple([call_8654,var_8655,const_8656,const_8657,const_8658,var_8659,uop_8671,call_8674,var_8675,call_8692,const_8693,call_8700,const_8701,var_8702,var_8703,var_8704,])
output2 = relay.Tuple([call_8660,var_8655,const_8656,const_8657,const_8658,var_8659,uop_8671,call_8676,var_8675,call_8694,const_8693,call_8705,const_8701,var_8702,var_8703,var_8704,])
func_8706 = relay.Function([var_8642,var_8655,var_8659,var_8675,var_8702,var_8703,var_8704,], output)
mod['func_8706'] = func_8706
mod = relay.transform.InferType()(mod)
var_8707 = relay.var("var_8707", dtype = "float32", shape = (8, 11, 12))#candidate|8707|(8, 11, 12)|var|float32
var_8708 = relay.var("var_8708", dtype = "float64", shape = (108,))#candidate|8708|(108,)|var|float64
var_8709 = relay.var("var_8709", dtype = "float64", shape = (30,))#candidate|8709|(30,)|var|float64
var_8710 = relay.var("var_8710", dtype = "uint16", shape = (72,))#candidate|8710|(72,)|var|uint16
var_8711 = relay.var("var_8711", dtype = "float32", shape = (8,))#candidate|8711|(8,)|var|float32
var_8712 = relay.var("var_8712", dtype = "uint64", shape = (1872,))#candidate|8712|(1872,)|var|uint64
var_8713 = relay.var("var_8713", dtype = "float32", shape = (96, 4))#candidate|8713|(96, 4)|var|float32
output = func_8706(var_8707,var_8708,var_8709,var_8710,var_8711,var_8712,var_8713,)
func_8714 = relay.Function([var_8707,var_8708,var_8709,var_8710,var_8711,var_8712,var_8713,], output)
mutated_mod['func_8714'] = func_8714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9000 = relay.var("var_9000", dtype = "float32", shape = (6, 3, 5))#candidate|9000|(6, 3, 5)|var|float32
uop_9001 = relay.cos(var_9000.astype('float32')) # shape=(6, 3, 5)
func_3336_call = mod.get_global_var('func_3336')
func_3341_call = mutated_mod.get_global_var('func_3341')
const_9004 = relay.const([-4,-8,-9,1,-4,2,-6,-10,2,3,-8,5,-1,-2,6,-4,2,-9,-10,-7,-1,-8,5,-9,-2,7,1,-7,6,-5,-9,-5,3,-1,4,-5,6,-4,-1,-2,-5,-3,8,-9,1,9,4,-2,7,8,-1,6,6,10,1,8,-10,-2,-3,5,6,-4,7,7,-7,-3,8,6,9,1,8,8,2,-8,-3,-9,-6,-1,-8,5,3,-4,7,-5,7,-6,7,5,-6,-4,-4,9,-5,3,1,7,-7,-7,2,-3,-9,-4,-5,-4,1,-1,3,7,2,-9,9,9,8,2,-7,9,-6,-2,1,1,6,-9,3,4,5,10,-3,9,2,-3,6,7,-6,-2,-5,-1,6,9,-3,7,-10,1,4,5,1,7,10,9,10,-5,6,-7,3,2,-3,-3,5,-6,-3,-7,9,-2,-7,-6,-4,-4,-6,-3,-9,4,-5,4,-2,9,1,10,1,10,-2,-6,9,5,3,2,-4,-5,-7,8,-1,-5,-4,-4,-4,2,-3,2,-10,-7,6,8,-10,-8,-6,-4,-3,9,3,-2,-2,-3,-5,-8,4,2,7,-10,3,-1,2,5,-6,3,-2,4,-1,8,4,3,-1,7,-4,-4,5,-7,-3,-4,-1,-6,-4,-6,9,-3,9,-10,2,8,-4,-5,8,-8,6,-7,1,-1,-6,-1,8,8,1,-8,7,9,8,10,9,4,2,-4,7,-7,10,-7,-2,-8,5,6,-3,3,2,-7,3,-6,-5,7,6,4,-4,6,8,-10,1,-4,2,6,-3,5,-8,-1,1,-6,4,3,-1,-5,-3,3,-3,-8,4,-1,1,-5,6,2,5,-4,-8,-8,-8,-9,8,-4,-10,-7,10,-3,5,10,3,-1,-1,-7,4,9,8,2,1,8,2,-6,-5,-3,-7,2,-6,8,9,-6,9,-8,5,-3,-8,8,6,2,4,-2,8,-1,-8,-2,2,-4,3,-8,-2,5,-1,9,6,1,-7,-1,6,1,-10,-2,1,5,-8,10,-5,-9,7,-6,-9,3,1,-3,7,-2,9,1,-10,1,1,-7,6,3,-3,-4,-9,10,-4,-6,9,10,-1,-7,9,-10,-9,5,4,7,-10,-4,2,6,9,7,-9,7,9,-1,-1,-9,10,4,-3,-5,-3,-9,-3,9,8,-1,4,-4,-1,3,10,10,5,5,-4,10,-7,2,-5,-1,10,9,9,9,2,10,4,-1,-6,7,-5,9,8,-4,-4,-6,-7,10,-10,-6,1,-4,7,-3,2,-5,7,-10,7,7,-1,8,10,5,-9,2,-8,6,-2,10,-9,10,1,8,-6,-9,-8,4,-7,9,2,5,-8,7,7,5,-4,-1,-4,3,4,8,1,1,1,-1,1,-2,6,-10,-7,-1,9,4,-9,-5,8,-6,-5,6,-4,10,-4,6,-2,-5,1,-9,-5,6,-1,8,4,10,-2,-7,5,4,2,1,6,2,-9,-8,6,-10,-4,-6,-4,-10,-5,3,-6,1,-6,-9,-8,10,4,4,1,-6,-4,-3,-1,5,10,7,-6,2,-9,-4,4,6,1,7,-4,7,5,6,-3,-3,-2,8,9,2,3,-6,-10,-4,-10,3,3,-2,9,8,1,-4,-4,-3,-2,-10,10,3,-8,-1,9,-2,3,5,-4,-4,4,7,10,-10,4,-9,-8,4,-1,-6,-8,-5,4,3,-2,-2,6,-6,-1,9,6,2,4,2,1,-8,-8,-10,-4,10,-3,-4,-6,-3,5,-4,4,9,-2,-3,-8,-1,-5,-1,-7,7,-5,-9,9,8,6,7,10,5,-6,6,-1,-2,-2,-7,4,-9,5,10,9,-8,-1,-4,2,4,2,-5,9,-1,-10,9,2,-5,-5,-1,-2,-1,5,-6,9,-8,-10,-3,-10,-9,3,-6,-6,-4,-5,-7,-5,2,6,-8,9,-5,6,-7,2,-9,-4,4,6,-10,4,-10,10,8,1,2,-1,-9,6,-5,2,5,-1,-5,-8,7,-6,10,10,-1,-3,1,9,1,5,-4,-10,-2,-10,7,4,2,5,-6,-10,-6,-10,-5,6,-6,3,-8,1,-3,9,-10,8,-2,4,7,-5,-6,-9,-5,10,8,3,6,7,4,-1,-8,-8,1,-10,-7,1,-3,-8,-5,-2,-10,10,7,-5,-3,9,5,-6,1,-5,3,4,6,4,10,6,-1,6,-2,-10,7,-8,7,3,10,-6,3,10,-10,1,-10,-10,3,-8,-6,2,8,-10,-4,10,-10,-8,6,10,-2,-6,10,-3,3,-10,2,4,3,-4,4,2,10,-7,-8,4,10,4,7,4,1,-9,-9,-2,7,-1,1,5,5,-10,8,5,-4,-9,8,-1,9,-1,-4,-1,10,2,-7,-3,-8,9,6,6,-5,-3,8,2,-5,-4,-6,10,8,9,8,10,-6,-1,-5,4,-2,2,10,-7,-7,-6,7,10,5,-3,-1,8,-3,10,8,9,1,-1,-5,8,1,-6,-7,6,-6,-6,1,6,2,2,-10,-1,-2,3,-3,9,4,-2,10,4,6,-4,-1,9,-6,5,-3,8,1,3,2,-5,5,-7,7,4,-1,-8,-9,-10,-1,-5,-3,10,-6,-5,-2,5,10,-4,-5,-10,-7,1,-9,-2,-5,-7,-2,2,7,-6,-8,8,-3,6,-1,6,-9,5,-7,-10,-6,3,-1,5,2,9,-2,-9,9,5,-4,-9,8,-10,-1,-1,5,-6,-1,-6,-2,-5,4,-3,9,-5,9,-7,6,-5,-8,-5,-2,-3,1,8,-6,10,-6,3,3,10,9,-10,-5,-3,3,7,-10,2,10,5,-10,-6,-9,2,4,-5,-9,8,-2,-8,1,-4,-6,2,-4,-3,-3,-3,-5,-6,8,10,6,3,2,-5,-9,-6,3,2,-5,4,-2,-2,-1,-6,10,6,5,-4,-3,10,7,-6,3,8,10,8,6,-1,-2,5,2,-8,1,3,-10,-3,-10,5,-6,3,-4,8,-5,-8,5,-7,-5,3,6,9,1,-2,2,6,2,-1,-10,-8,-9,10,-4,-10,-3,-4,-1,6,8,4,-3,5,10,2,7,5,-10,2,5,2,7,6,2,9,-9,-7,5,-8,8,-7,3,2,8,-9,8,-10,9,10,-9,1,-5,-8,10,7,9,-4,-5,-8,-2,3,-8,2,10,-1,2,5,-2,-10,-1,2,-1,4,5,-9,9,-7,-7,-6,-3,-4,-3,-4,1,7,1,4,6,-5,8,-7,8,-5,5,9,-2,-4,-9,-8,-2,-2,4,2,4,10,3,-8,-3,5,-6,-7,5,-1,-2,7,-6,7,-7,-10,8,2,1,-4,4,-6,4,-9,7,-5,1,-10,-3,6,8,10,8,-9,3,-5,5,-9,5,7,-8,-8,6,-5,-7,-10,7,-10,3,5,-5,5,2,-8,-2,8,7,8,-7,4,-1,10,-6,2,2,-5,8,8,4,6,10,5,-1,3,-3,2,1,2,2,7,3,-2,4,10,3,5,1,1,4,-10,10,2,3,1,10,-9,1,-6,1,-4,-4,-10,-2,7,-4,2,-8,-9,8,4,7,-3,-7,3,4,2,10,-3,2,6,-8,4,-3,-6,-1,1,6,-6,4,10,-9,-6,-6,-1,2,6,8,-5,-3,3,1,-3,9,-9,1,9,-4,10,7,-8,-1,-6,-6,-1,9,-4,6,-7,-9,8,-8,9,-3,1,10,-8,6,1,6,-3,-6,7,-6,-8,3,-4,-2,-4,-2,6,4,5,7,-2,-10,10,-3,7,-1,4,-9,-6,1,-8,3,-5,8,-7,-7,-10,5,4,-6,9,6,-1,2,-7,-7,6,-1,-9,2,-7,-8,-8,8,-2,3,-2,-7,-3,4,1,-9,3,9,-10,-9,-10,6,1,9,10,7,10,-7,-2,-5,2,2,-3,-7,-2,1,-5,-1,3,-10,-4,5,8,9,4,-4,7,2,-7,-4,-9,-8,-4,-1,-8,7,7,-6,-5,6,8,-6,6,-8,8,9,-8,2,-7,-6,3,9,-7,-8,1,-4,5,-5,-7,-3,6,2,10,-4,8,-2,-5,-2,7,9,-5,-6,-10,-1,-5,-3,6,-2,1,3,-8,-10,-5,7,4,7,-6,2,-5,4,7,10,-5,2,-10,5,10,-1,10,7,4,3,-9,8,8,-6,1,10,10,-4,-7,-10,-6,1,1,-10,-4,-4,10,8,6,-4,-10,7,-8,-10,-3,1,-3,7,-8,10,-2,6,-8,1,-8,5,1,8,4,-4,10,6,8,9,10,10,4,3,10,-8,-1,6,4,1,4,2,-3,-7,-10,8,6,2,-4,1,-1,2,-1,-1,-4,2,-2,-2,-3,-7,-7,-4,3,-2,1,2,-4,1,5,-2,-8,7,-9,4,-7,-6,6,-7,6,-5,-5,-8,-3,8,-4,-7,5,10,-4,-5,-7,-5,-10,1,4,-4,5,1,2,-6,-10,-9,-8,6,-5,-2,3,-5,-4,1,-6,-10,-7,-1,-10,7,1,-4,7,2,2,-4,5,-8,-10,8,3,9,9,-3,6,-9,-8,-9,-3,-6,-8,10,4,4,-8,-9,8,-1,5,-6,-3,-1,7,5,4,-5,-4,6,4,1,2,-10,-8,-5,-6,6,-5,-2,9,-2,-1,-5,-1,-4,-3,-4,-6,5,-9,7,-1,-7,-1,9,-8,-5,8,-5,-3,4,5,2,6,3,8,-1,2,7,8,-5,9,-5,-10,-5,-1,-10,1,-10,-7,-4,-3,-6,-4,-10,1,9,3,-6,-6,5,-2,-6,7,3,8,-1,-2,-10,1,9,5,-9,-3,1,-6,9,-5,4,-2,8,-2,-3,-7,3,2,8,-1,6,-2,5,5,-7,-10,4,5,2,-2,-4,-7,-7,-8,-4,3,-2,9,4,-3,6,-1,-5,-10,-6,1,3,4,5,-6,8,1,8,-9,-3,3,-4,-8,3,-6,-2,6,3,5,1,-8,-5,-10,6,5,-2,7,-5,6,4,-6,9,2,-3,9,-10,-4,6,8,-5,-1,1,4,-2,-3,-4,-3,-2,-4,-3,8,2,10,8,-9,-1,2,8,-10,-8,-9,2,5,8,-9,-4,4,-1,-3,-4,-3,-3,-1,-3,-3,3,-1,-5,-9,6,2,4,-6,-4,-7,-3,5,5,9,6,9,6,-4,-8,2,10,-6,3,1,-10,6,-9,9,9,-4,-2,6,-4,-8,3,8,7,-8,-5,8,9,1,8,-6,2,4,4,1,-8,10,-3,5,-4,2,3,-9,5,10,1,-10,5,-6,-4,9,-10,-5,9,4,-2,5,6,6,5,7,-4,-1,-3,-10,-6,10,7,-10,5,2,-10,-1,-2,-10,-4,4,-3,9,-2,4,-7,3,-10,-2,6,-2,-10,5,-1,10,-3,3,7,-4,10,-6,-2,1,-1,7,-5,-4,-2,-1,-7,8,5,-7,-3,3,1,-10,-8,5,2,-5,-10,3,1,5,-5,7,6,4,7,3,-5,-10,-4,10,-8,-4,-7,10,-3,5,10,9,8,-5,1,4,5,-8,-1,-6,7,-9,8,-2,6,10,1,-2,-3,3,-9,1,-3,10,9,-2,5,-3,-3,-4,4,5,-5,6,5,3,6,-7,-3,2,-2,-10,-8,-2,8,9,1,-9,2,4,5,-3,-1,2,7,8,2,10,1,-2,7,-10,7,3,-7,9,4,4,4,1,-2,3,-5,6,3,4,9,-8,-7,6,-10,3,8,-1,-3,-4,-9,9,-7,1,-2,2,1,8,3,-10,-10,8,2,2,2,-2,-2,9,7,3,-5,1,-7,3,-4,4,8,3,3,-9,1,10,-6,7,8,-5,5,10,6,1,-8,3,6,8,-9,-6,10,-6,-4,-10,-2,-5,10,8,-9,-5,3,3,-1,-1,-9,3,-5,-6,3,-9,-10,4,10,-7,1,3,9,5,6,4,-7,5,-9,8,6,7,-4,5,2,-10,-5,9,9,-7,4,-2,-10,2,7,-1,9,-6,-10,-6,4,-7,1,6,4,6,-7,-10,5,-8,1,-3,9,5,4,-6,-7,9,3,-9,1,4,4,-4,-5,3,-2,-8,8,4,3,10,5,10,-7,4,4,5,-3,9,1,-5,10,8,5,10,4,-9,-3,8,8,7,1,10,-3,3,2,-9,-9,8,10,3,-2,-4,1,-5,3,3,-6,-9,3,-2,-10,-5,9,3,3,-7,10,10,-3,-2,-6,4,7,10,-5,-3,5,-4,-1,-8,-4,-1,-6,6,5,8,1,5,5,-6,-10,-5,-6,1,-5,6,-2,4,8,-7,-5,6,9,4,9,-6,10,3,-2,5,-5,-9,-8,5,10,-10,-1,3,-10,-5,10,5,5,-7,-6,6,-3,-6,-7,-10,-7,2,-9,-7,3,-5,7,2,-1,1,-1,-7,-2,-7,8,-6,8,-2,-6,-5,2,1,-3,3,1,-1,1,-9,5,-3,-5,-7,-8,1,9,-2,-7,10,5,-4,-7,9,7,2,5,-6,-6,-5,-1,10,-2,10,-5,-9,-6,-9,2,-3,-5,10,2,-2,6,-3,-2,8,5,-5,-2,3,1,-3,9,9,-2,-5,2,3,5,-8,10,2,6,10,-4,-6,-4,-6,-4,8,-6,10,-2,-8,10,-3,4,10,3,-1,-2,1,-7,-10,6,9,-4,-9,-4,1,-5,-8,10,-2,-7,-9,10,-6,9,-8,-5,4,-5,-4,-2,-7,-9,-5,-3,1,7,-7,-2,-2,9,5,-6,-3,-3,-2,-4,-1,3,4,-2,4,-5,-6,5,5,9,-10,-2,-8,2,10,-8,-10,7,-7,-9,8,-3,8,-4,2,4,8,4,10,5,-3,1,6,-7,6,-7,9,-9,-7,-9,-4,-2,-10,-8,4,2,-8,1,10,-10,-6,-1,6,2,-2,-6,-6,1,-5,-6,-4,-6,-1,8,-9,-10,-7,9,-10,9,-2,8,-3,3,10,7,-6,-6,-2,-10,7,5,10,7,5,-2,3,6,-9,-6,-6,2,-5,-1,-5,5,3,-5,-6,-1,-2,-9,-2,-3,-3,1,9,3,4,-1,7,2,-8,2,-9,6,-5,6,-1,2,7,3,-9,-4,-10,-1,-2,8,-9,-5,-3,-2,7,8,9,2,-5,6,9,6,-4,8,-1,-6,-7,1,-2,-8,10,-7,-8,-9,-1,-7,-2,2,2,-1,-8,-3,6,3,-6,-8,-7,-7,3,-5,10,7,-5,-9,-10,-9,-5,-3,6,-2,-7,9,3,-8,-4,1,7,8,-8,10,-5,-8,3,3,9,2,-6,-1,-10,7,4,-10,7,-4,2,3,-6,10,-2,1,-10,7,-5,-7,9,-1,-2,-3,-8,4,-4,-9,-9,2,-4,3,5,2,-10,6,-10,2,7,-1,-6,-5,1,3,-3,-1,5,2,6,9,-10,-7,4,-10,-7,-6,-5,3,4,-6,-8,-5,1,-2,-9,6,8,8,5,2,1,4,10,-2,3,3,-2,-6,-4,-3,1,-10,3,2,-8,-9,-4,-4,10,1,3,7,-2,2,1,-9,-5,3,9,-5,10,7,-6,-10,-1,10,-7,-1,7,-7,9,3,6,-1,1,-3,1,-7,-5,1,-2,-1,-5,-9,6,-3,1,10,-1,-4,8,-5,1,5,-3,-3,-7,-3,5,-9,8,-7,-7,8,-9,-2,2,-7,3,1,10,8], dtype = "int32")#candidate|9004|(2880,)|const|int32
var_9005 = relay.var("var_9005", dtype = "float64", shape = (5, 6))#candidate|9005|(5, 6)|var|float64
call_9003 = relay.TupleGetItem(func_3336_call(relay.reshape(const_9004.astype('int32'), [16, 15, 12]), relay.reshape(const_9004.astype('int32'), [16, 15, 12]), relay.reshape(var_9005.astype('float64'), [30,]), ), 2)
call_9006 = relay.TupleGetItem(func_3341_call(relay.reshape(const_9004.astype('int32'), [16, 15, 12]), relay.reshape(const_9004.astype('int32'), [16, 15, 12]), relay.reshape(var_9005.astype('float64'), [30,]), ), 2)
func_2553_call = mod.get_global_var('func_2553')
func_2559_call = mutated_mod.get_global_var('func_2559')
const_9015 = relay.const([-2.703992,-6.869356,-9.818462,-5.198011,-9.958761,5.158137,2.925468,-5.270520,-0.284796,-7.143494,0.485213,-6.215199,-1.870012,1.505559,-3.260211,2.078575,8.301992,9.624918,-9.116688,-3.080842,-8.359646,8.314494,8.491936,-9.862340,-8.998861,0.874142,-7.385853,6.342327,0.653940,6.938117,1.734393,-0.597226,-8.956898,-8.187733,4.696035,-2.985466,-3.188834,7.356202,0.117816,0.253280,-2.218372,9.114417,8.974043,-0.581906,-3.632244,-6.747042,-7.736416,-9.165429,-9.451177,8.398567,3.233781,5.628863,7.767786,7.980144,-1.550230,2.277272,-6.174788,1.305242,9.229787,-0.147056,4.576577,5.293606,7.745087,7.370874,-3.746672,0.017186,-8.355109,1.094706,-8.957673,-9.333987,5.611531,5.243029,-3.564230,4.432753,-5.679305,4.993090,-0.856307,1.764258,-0.862150,3.919497,-5.871817,-8.874133,1.435869,-5.786239,3.936974,-3.710989,-1.970945,-9.207143,1.049814,-6.492468,4.732167,6.169415,-1.323937,7.767989,3.992951,8.856415,8.305191,-8.265173,9.328447,-2.063960,9.825115,-8.275795,8.383266,4.187893,-3.340565,-7.761667,1.619496,-4.546695], dtype = "float64")#candidate|9015|(108,)|const|float64
const_9016 = relay.const(False, dtype = "bool")#candidate|9016|()|const|bool
var_9017 = relay.var("var_9017", dtype = "bool", shape = (6,))#candidate|9017|(6,)|var|bool
call_9014 = relay.TupleGetItem(func_2553_call(relay.reshape(const_9015.astype('float64'), [4, 9, 3]), relay.reshape(const_9016.astype('bool'), []), relay.reshape(var_9017.astype('bool'), [1, 6]), relay.reshape(call_9003.astype('float32'), [945,]), relay.reshape(var_9005.astype('float64'), [30,]), ), 7)
call_9018 = relay.TupleGetItem(func_2559_call(relay.reshape(const_9015.astype('float64'), [4, 9, 3]), relay.reshape(const_9016.astype('bool'), []), relay.reshape(var_9017.astype('bool'), [1, 6]), relay.reshape(call_9003.astype('float32'), [945,]), relay.reshape(var_9005.astype('float64'), [30,]), ), 7)
output = relay.Tuple([uop_9001,call_9003,const_9004,var_9005,call_9014,const_9015,const_9016,var_9017,])
output2 = relay.Tuple([uop_9001,call_9006,const_9004,var_9005,call_9018,const_9015,const_9016,var_9017,])
func_9029 = relay.Function([var_9000,var_9005,var_9017,], output)
mod['func_9029'] = func_9029
mod = relay.transform.InferType()(mod)
var_9030 = relay.var("var_9030", dtype = "float32", shape = (6, 3, 5))#candidate|9030|(6, 3, 5)|var|float32
var_9031 = relay.var("var_9031", dtype = "float64", shape = (5, 6))#candidate|9031|(5, 6)|var|float64
var_9032 = relay.var("var_9032", dtype = "bool", shape = (6,))#candidate|9032|(6,)|var|bool
output = func_9029(var_9030,var_9031,var_9032,)
func_9033 = relay.Function([var_9030,var_9031,var_9032,], output)
mutated_mod['func_9033'] = func_9033
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9065 = relay.const([[[3,-6,3,8,2,7,-2,10,-1,-1],[-3,-7,-6,3,5,3,7,4,-7,9],[-6,-9,5,2,-10,9,5,-6,-4,-9],[4,-8,1,-9,4,-8,-4,-9,-8,-5],[5,2,1,-9,6,-3,-9,-9,4,-7],[-8,7,3,1,6,-10,1,8,-1,-6],[-6,7,-1,-4,-8,1,7,8,-3,-3],[-8,-9,6,-10,6,-6,-6,-8,1,1],[-4,-5,-2,2,5,-4,10,-1,-1,-5],[-8,9,-4,-2,8,6,6,4,-8,3]],[[4,4,1,10,8,-8,6,4,-6,-7],[-10,6,-6,-3,-9,-8,6,-8,-9,8],[6,8,7,4,-6,6,5,1,-6,-8],[3,-9,7,-3,-8,4,10,7,-1,9],[-3,-3,-10,-2,9,1,-3,8,-10,6],[5,-3,1,-2,-5,2,-7,6,9,4],[-7,9,-5,-2,1,2,-10,-1,-9,5],[-6,-1,4,-2,7,-1,9,8,9,1],[-10,6,-10,-2,9,-2,-6,8,10,3],[4,-4,5,10,-2,6,4,1,-10,-4]],[[2,-4,10,-8,-1,-10,6,1,3,-7],[-2,6,-8,1,-2,7,-2,-2,-4,-7],[-3,2,-10,-1,4,-10,5,-2,7,-1],[8,-2,-10,5,7,8,8,7,3,-2],[8,-5,2,-5,1,-5,-3,-9,3,4],[-5,-10,-4,-10,-7,-6,-6,7,10,-6],[-6,-10,-10,-2,3,5,-10,-1,-1,3],[-5,2,-2,1,9,-3,-8,5,-1,5],[5,-2,-4,-9,-5,-3,-1,-4,-2,-5],[2,-9,2,-2,-3,7,-4,2,5,3]],[[6,-10,10,2,-9,-6,-8,3,9,2],[-10,-9,-1,4,-6,4,4,-1,-10,-10],[-1,-9,-1,6,8,1,7,6,-5,-4],[9,3,3,-10,6,-9,-6,3,-3,-9],[-8,-10,-2,-3,-7,8,-6,-9,-2,10],[-1,-4,-1,8,7,-4,-8,10,-1,9],[-1,-3,-7,-5,-3,8,6,-5,-8,-1],[-10,1,-9,10,-5,7,-5,2,3,10],[2,4,-9,-7,3,3,4,1,-7,5],[-7,10,3,3,-9,3,-10,-3,7,-7]],[[7,4,-6,-7,6,-4,6,-7,6,-4],[3,-10,8,4,-1,-8,1,-4,-6,1],[-4,-7,1,-9,3,3,3,-1,-5,6],[5,8,5,6,-4,-5,2,-9,5,-9],[1,8,-5,3,-5,-8,3,8,-10,1],[-9,-10,-8,5,7,6,6,-10,-3,1],[-3,10,-6,6,-3,8,3,5,9,7],[-4,5,-6,-10,-9,-9,-9,2,7,1],[-7,4,-1,3,10,7,4,-5,7,3],[6,2,-3,3,2,-4,5,1,8,5]],[[8,2,-3,4,2,-8,1,6,-2,-8],[2,-7,9,-2,-2,2,8,1,3,-1],[-7,3,-7,-4,7,7,-3,8,-10,6],[7,3,-4,-7,4,-1,-7,8,3,-6],[5,10,6,9,-8,10,-5,-1,1,-5],[7,5,10,1,5,-2,9,-10,1,2],[4,-5,7,9,5,5,10,8,-1,-1],[-6,-9,-6,3,8,-7,7,3,-7,6],[-8,3,-8,8,-2,10,-4,7,7,9],[3,-10,-5,8,7,3,-2,-3,-7,-2]],[[2,9,10,-7,-3,-4,2,9,-9,1],[-9,-3,-9,1,-9,-7,2,8,1,1],[-4,2,-9,5,-10,-5,-1,1,-7,7],[5,7,-9,1,2,4,7,4,-9,-7],[7,7,2,-7,-10,3,10,7,6,-9],[-10,-4,3,4,-7,10,-2,-2,-6,-3],[5,6,-7,5,8,2,1,6,4,-5],[-2,-4,3,-9,5,7,-10,-3,3,2],[6,-3,10,8,-1,4,7,8,-4,-10],[10,6,10,9,-1,-9,3,-1,-1,-6]],[[3,6,7,-1,2,9,9,-2,-7,6],[-9,5,7,6,9,10,1,-4,-9,-9],[-6,-1,-4,-8,5,10,-9,8,5,1],[6,-5,-7,-5,-4,5,3,-9,-10,-9],[-10,-9,-6,-4,2,6,-7,5,2,8],[4,-7,1,3,2,-6,-1,-3,1,1],[-3,1,7,-3,6,4,7,9,7,9],[4,-4,-10,3,4,-7,10,-6,6,6],[1,3,3,-7,-4,2,4,2,-4,-9],[8,5,6,4,9,3,2,-9,8,7]],[[-4,7,-6,-2,-3,-9,9,-8,5,6],[-6,5,4,4,2,3,10,-4,10,-9],[8,-5,-3,-1,-7,-4,5,10,5,-3],[-5,5,-8,-6,-6,1,-2,-3,9,3],[3,10,7,1,-4,-9,3,-8,4,7],[-8,5,5,7,6,-2,9,6,2,8],[-2,-6,-2,5,-8,-7,3,6,-2,1],[-3,6,5,-8,1,-2,4,9,-2,-3],[9,5,-1,-7,4,-2,3,8,2,-4],[1,-6,-3,2,-9,6,-4,9,3,-2]],[[-6,-3,2,6,5,-7,-5,3,7,-3],[-10,-6,1,-4,1,-9,-2,-5,-2,-10],[-2,-5,-9,-7,4,7,-1,2,6,6],[4,4,8,10,-4,-8,7,-5,4,5],[4,-5,2,-6,-3,-10,8,3,-5,7],[-3,-6,-2,7,3,-5,-3,-1,-8,-7],[-1,-8,-1,6,-5,-5,-10,9,2,-8],[-9,1,3,-8,2,2,10,-4,-10,-7],[5,-3,3,-9,-1,9,9,-1,3,-3],[-3,-8,-4,4,-7,9,2,-9,6,-9]]], dtype = "uint8")#candidate|9065|(10, 10, 10)|const|uint8
var_9066 = relay.var("var_9066", dtype = "uint8", shape = (10, 10, 10))#candidate|9066|(10, 10, 10)|var|uint8
bop_9067 = relay.right_shift(const_9065.astype('uint8'), relay.reshape(var_9066.astype('uint8'), relay.shape_of(const_9065))) # shape=(10, 10, 10)
output = bop_9067
output2 = bop_9067
func_9071 = relay.Function([var_9066,], output)
mod['func_9071'] = func_9071
mod = relay.transform.InferType()(mod)
mutated_mod['func_9071'] = func_9071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9072 = relay.var("var_9072", dtype = "uint8", shape = (10, 10, 10))#candidate|9072|(10, 10, 10)|var|uint8
func_9071_call = mutated_mod.get_global_var('func_9071')
call_9073 = func_9071_call(var_9072)
output = call_9073
func_9074 = relay.Function([var_9072], output)
mutated_mod['func_9074'] = func_9074
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9988 = relay.const([[[-7.189858,-0.454850,-0.516786,-4.859877]],[[9.826265,-4.994967,6.417569,-2.706624]],[[3.709142,-8.993885,-5.672622,-0.132038]],[[-4.822806,-2.229511,-9.542465,-9.371777]],[[7.779023,3.043491,0.719543,-4.317814]],[[2.664654,-6.254886,2.641634,0.431329]],[[0.734912,1.816600,1.588683,6.334929]],[[5.216857,-2.265941,6.355207,-4.701572]],[[-5.751932,-0.945505,9.452169,-0.265837]],[[9.241608,-4.154738,5.427900,-6.625584]],[[9.381026,1.482869,8.685019,-2.236715]],[[-8.945615,-3.950128,-2.764791,8.375345]],[[-8.525902,-1.740181,-8.260087,-8.163070]],[[5.512990,6.730057,9.016805,3.851951]],[[4.884960,4.236225,4.912324,7.765884]]], dtype = "float32")#candidate|9988|(15, 1, 4)|const|float32
uop_9989 = relay.log(const_9988.astype('float32')) # shape=(15, 1, 4)
func_651_call = mod.get_global_var('func_651')
func_654_call = mutated_mod.get_global_var('func_654')
const_9997 = relay.const([[5.975546,-5.161820,7.275374,-2.634148,-3.855886,-0.374560,2.900955,8.569025,2.687000,6.868488,4.300062,-4.428340,-0.148148,-3.660845,-6.387726,-3.238769,1.716336,-2.122638,-3.497456,-9.600227,-7.716690,7.256130,8.520677,5.037197,-1.356806,-4.836557,-9.854078,-5.492688,-9.459206,2.850453,-4.468601,3.423435,-9.934912,-5.866417,-2.746951,2.354288,9.492141,-3.271536,-6.997863,5.245211,-5.369043,-2.646490,1.687157,-3.117695,-2.535582,-9.914163,7.544824,-3.681459,-6.846289,4.231183,1.162393,1.196815,2.575042,-1.005901,1.079711,-4.982308,8.770390,3.791595,1.545034,-7.024476,8.882725,-9.201179,-4.722251],[6.263247,6.159429,2.833336,5.523958,-2.410145,-0.019768,-6.629710,-8.155934,-1.358263,-7.907298,-4.912602,0.828592,4.242949,-7.855003,9.387608,-0.603986,6.290637,9.235316,7.326019,3.094213,-9.706338,-1.967250,4.939788,0.405751,-8.311603,3.609545,-4.673866,5.301364,-3.171338,2.590576,2.591855,-1.702235,-3.351108,7.875366,-6.155660,3.539132,3.848191,-8.545386,-0.040462,-1.484184,6.358351,-6.738915,-6.636655,3.234613,8.630309,-7.387712,-8.055900,1.629540,3.050112,-4.241776,6.284410,-1.701181,6.571495,4.705035,-3.625508,-8.464588,-2.699221,3.114973,3.204227,2.934949,-9.115547,9.526766,-3.676980],[3.790275,1.510919,0.921114,6.546946,7.214528,-3.528112,-9.711436,-9.401120,-9.790763,0.265700,8.449260,-0.134281,3.144275,2.454499,-2.895094,0.627059,5.744602,4.115819,5.938949,-9.131851,-0.310718,-6.359152,5.496973,1.698660,9.124513,-3.142526,7.159941,0.838309,9.521155,4.397730,-0.910220,6.765146,-7.901892,-5.038944,6.007037,-2.173766,-5.068999,-4.089343,-6.243387,4.527275,4.262834,-0.939438,9.692793,5.031627,-3.070892,-2.158322,-2.179554,-6.287196,-5.953012,-5.898610,6.457619,3.618311,2.003510,-4.898858,-4.606245,4.256255,1.541765,-5.801719,7.309653,7.051900,3.210851,-9.368545,4.295462],[-3.494328,-5.530657,9.417014,5.961332,0.647895,-3.048246,-5.772947,3.894755,-5.593608,-9.030899,5.869121,6.387628,8.750874,-3.832873,-9.772689,5.001001,-4.814814,2.644711,1.885383,-5.817614,-6.444803,-3.473910,5.826154,-2.133936,-8.521261,8.247410,6.543738,-2.550513,5.534643,-5.925036,-0.932945,-3.851952,7.903175,-8.470525,-1.285408,2.682004,-5.940079,-1.570779,-4.495817,2.804649,3.847741,-3.985246,8.147736,1.477933,-2.595698,-5.965117,7.212650,0.055439,5.832375,-6.511826,-6.952255,-9.036293,1.474849,3.633109,3.186796,0.392505,2.223610,2.037056,-4.443975,0.394713,3.557344,-9.156377,-4.928684],[3.419361,6.817655,8.351783,-2.393555,-2.825196,-6.683735,2.477246,4.332717,-7.753091,-4.729702,3.404646,4.544746,9.337301,1.716578,9.978127,1.871046,3.412137,-5.885987,5.240143,-1.441042,9.970327,6.980568,-7.233948,8.822876,2.393955,5.501564,-1.398019,6.761495,8.291726,4.347716,-3.503965,2.481199,-5.134529,-5.568580,-5.437974,8.354098,-7.734555,-0.119582,3.293185,7.140716,-2.663567,-1.086223,4.158673,-3.303992,-8.243462,-2.675860,3.141965,-8.922979,8.013118,7.022104,7.374412,1.743942,2.133095,-6.386489,7.984206,3.313723,-7.641409,4.235748,9.449822,-2.032632,9.030370,-9.506729,0.833880],[-9.082650,5.141391,-5.526278,7.985747,-0.818278,-7.796292,3.159397,2.072133,0.326276,-9.187647,6.273485,-1.126408,8.730588,-4.065119,-0.291297,-2.501178,9.207028,-4.012645,-6.754706,6.745595,-3.444895,-6.690146,-3.437955,-7.865882,6.805880,-4.601206,-7.857320,6.307048,-9.380387,2.029629,2.888446,-8.816183,-1.094223,-2.926919,-7.842338,2.546931,1.289383,-8.093965,4.714168,9.584269,-7.827800,-9.517044,3.442905,-9.115531,5.445594,-1.339865,-1.647620,3.721752,-9.888019,0.436938,-3.199019,1.113601,-6.420992,8.919651,7.302590,3.757089,-3.385266,-8.307460,4.084963,5.751800,2.980409,8.496914,-3.696315],[-3.259953,-6.090475,9.085590,-5.222731,5.200301,2.961450,3.018263,7.990028,-3.714487,-3.852562,7.487415,9.021910,-0.126327,8.323772,-1.650096,8.258220,-8.041228,0.156671,-6.721291,-3.911091,-3.166672,-8.062343,-1.692491,-2.401829,4.763784,-7.104429,-1.136474,0.476313,-7.925008,-5.205858,9.873331,6.681885,-3.537141,7.214720,-5.723098,-5.251742,7.825567,-5.694610,-0.628451,-3.716674,9.067965,9.601358,8.910408,0.417915,3.683322,-7.578509,5.981139,-8.955791,-6.461009,-8.896029,3.663956,-0.633601,4.014204,8.937114,4.983980,0.984944,-3.154410,3.934998,9.585932,3.615359,-4.704940,0.952331,7.346853],[8.529293,-4.961834,-0.751328,-7.618791,-0.216720,-8.154018,-0.054620,-7.094651,-7.492135,-6.962147,-5.116043,-0.130879,-4.038840,6.274697,-9.303146,0.092674,9.739642,8.207986,1.706239,-7.063817,0.822877,1.569265,-5.628602,8.430419,-2.500399,-7.489772,-9.477832,-2.288101,-9.172069,-1.418760,-1.153595,-0.839688,5.614365,-6.700734,-7.561283,9.206478,3.782647,7.348333,-7.561598,-3.418249,-6.270891,7.800750,-3.974147,5.479891,2.987486,6.839839,9.007419,9.562560,-6.753124,9.826315,-4.182502,-9.807359,-1.328424,-1.849895,3.731397,7.429854,7.644036,-6.978334,4.161334,-5.194163,2.563622,-1.121965,-3.125817],[-9.930705,8.723690,3.166019,-5.912854,5.735664,9.226226,1.388048,5.687095,-8.620090,8.006012,-1.076915,-5.792726,6.153332,-5.555662,-6.262214,-6.475033,1.711220,-8.208712,4.994259,6.052302,0.706116,-0.584772,0.764692,-1.171767,4.741051,-6.910287,-8.447588,-8.690078,-6.393904,0.864685,5.688006,0.649591,-2.693465,0.529698,-8.588785,-0.306533,7.209306,-7.575560,-8.330851,-2.762239,-2.347044,9.680110,7.598532,4.449521,1.698365,-2.485209,-9.542766,8.109393,-1.707074,-0.662593,9.144453,-5.494429,-3.080117,0.299629,1.589271,-2.956890,-1.633028,-6.567151,3.622263,-9.492350,1.290351,-0.812417,-5.558119],[-8.228084,-1.359288,-9.502222,9.727461,1.377384,0.134332,5.342124,-4.655103,4.589481,9.597159,9.446417,6.390160,9.687889,-3.626825,-0.821218,-4.975354,5.147682,7.508597,-6.167892,0.138252,-7.089397,3.602108,7.154322,6.882945,-0.616447,8.507230,-2.117676,1.998051,9.556426,6.328270,2.747920,-1.690651,-0.031459,-9.167372,-6.619648,-9.868453,-3.471820,-2.115413,-0.404267,-6.137712,8.178044,-6.454368,-9.419458,6.574092,6.446746,8.957459,-5.120907,-9.106852,-1.865105,-1.871060,-3.029961,4.701725,-7.342696,-2.855830,-7.600680,8.435648,-5.040187,6.273846,-5.318204,-9.160319,1.747915,-4.956890,1.079085],[-4.356454,5.858370,5.857039,-8.173627,-6.611045,-1.385245,5.555664,-1.991238,-0.417325,-6.634932,7.661735,7.944623,-0.578239,-1.845701,-9.671010,0.826911,8.906986,3.709798,-5.974402,0.970966,-1.822342,-4.673534,-2.962663,8.682004,8.738543,-7.336973,-0.084892,8.271513,-6.209222,1.230435,6.805570,-2.823511,4.465871,8.633315,2.047989,-5.482783,1.790874,8.176129,4.301962,-1.132954,-7.167692,-0.007304,-1.394033,4.785885,4.259175,-4.756686,-0.581532,8.285905,-4.194143,2.257314,1.965614,-5.180685,-5.376691,5.407935,-6.495867,4.999378,-1.112272,9.818924,3.265770,-6.486937,4.933995,3.874272,1.822523],[4.090813,-8.128383,6.882251,-0.217991,-8.316970,1.385030,3.331383,2.586323,-7.668757,-3.091495,8.250910,-9.948136,-9.017974,-5.773422,7.763077,-1.534699,4.198594,-6.885914,-5.140235,-0.731570,0.179640,-2.165432,4.532366,4.317793,-9.441734,7.711698,1.880508,2.861003,1.583545,-6.664410,1.348045,9.713347,2.428103,5.705535,9.373170,-5.242178,4.628591,9.414820,-0.715138,-5.623139,-6.354625,-0.418395,3.224300,8.891831,1.683236,-7.573636,-7.315510,-7.854126,7.097640,5.928611,3.753944,7.258246,0.852098,-2.328256,-6.490210,-6.259142,-5.058429,-9.158065,-4.117361,0.487805,3.761700,-6.083301,9.733418],[5.431027,-3.958466,4.651383,-7.954703,-2.570752,6.275771,-0.041108,8.130222,-7.851366,5.061059,9.242339,-2.024864,-4.253501,-2.939983,4.770208,2.057852,-7.355200,-7.005517,9.589840,3.932708,-4.213292,-4.596452,-1.208673,5.646295,-9.673350,0.089654,-7.543899,-5.209824,-2.925370,2.428225,-5.271170,-4.917784,-9.262609,7.097846,-0.646350,1.651267,9.701011,1.291685,2.141376,8.353968,4.797909,5.920480,-2.360928,-1.153716,6.375634,4.320620,-6.187074,-9.265723,-6.958385,8.220357,-7.716468,9.212305,-1.176053,0.861739,2.312801,5.814899,-4.041154,-7.086830,-9.559680,6.507246,-8.697822,-5.614654,-3.528687],[9.266437,-8.775296,8.617659,0.610416,-7.281034,0.252294,7.766428,-1.750914,-1.591912,7.262226,-2.223062,3.430656,5.108265,-2.402255,0.883366,7.468750,2.004842,0.921828,-6.791008,1.470901,-4.504774,7.616030,9.763244,1.171281,-5.381668,-4.935687,-3.452124,-7.823085,0.339605,5.980444,5.814872,6.268257,-3.048302,-6.828116,2.896049,-7.004377,-9.495835,4.888366,3.120025,4.588998,8.619561,-8.668078,-5.825776,-2.569400,6.468094,-0.493366,-3.899176,7.905971,-5.358785,3.912482,5.942990,4.120308,1.952252,2.104621,5.200439,-7.857854,-7.324858,7.496956,5.088654,-4.193455,6.055550,-1.376802,-4.326250],[8.931515,7.593101,-7.573172,-9.217504,-9.213683,-4.776370,-1.563676,5.015602,2.158927,-1.278293,-0.709193,-6.283862,-6.201350,8.913230,0.706223,1.552656,-5.901345,3.655610,3.015712,-3.277112,-7.465762,-3.173036,7.546876,0.264176,5.673789,6.320188,-4.965317,2.228209,4.920993,1.088574,-6.032686,1.143425,6.222863,-9.711213,-8.025275,-6.382953,1.745806,-9.280008,-0.032165,9.538611,4.323472,9.386672,-1.147680,-3.380206,5.310694,-3.412418,-0.137772,-7.326464,5.558545,4.982460,-8.359714,-2.599877,-6.003986,-3.213904,-4.054439,-2.914029,-7.184089,6.494268,-0.958012,-5.875774,0.382247,-2.007753,0.888530]], dtype = "float32")#candidate|9997|(15, 63)|const|float32
const_9998 = relay.const([-8.173389,2.223845,0.853514,4.429295,-2.208243,-3.461401,9.010074,0.892467,2.171568,6.784213,6.680542,2.928521,-2.401954,2.634429,1.249560,-3.258578,-1.138718,-9.365634,0.371233,7.804678,4.676997,7.392647,-8.686611,-8.577235,-8.019739,4.382010,-0.330946,1.031002,0.118281,8.761773], dtype = "float64")#candidate|9998|(30,)|const|float64
call_9996 = relay.TupleGetItem(func_651_call(relay.reshape(const_9997.astype('float32'), [945,]), relay.reshape(const_9998.astype('float64'), [1, 30]), ), 0)
call_9999 = relay.TupleGetItem(func_654_call(relay.reshape(const_9997.astype('float32'), [945,]), relay.reshape(const_9998.astype('float64'), [1, 30]), ), 0)
func_3233_call = mod.get_global_var('func_3233')
func_3236_call = mutated_mod.get_global_var('func_3236')
var_10001 = relay.var("var_10001", dtype = "float32", shape = (1694,))#candidate|10001|(1694,)|var|float32
call_10000 = relay.TupleGetItem(func_3233_call(relay.reshape(var_10001.astype('float32'), [11, 11, 14]), relay.reshape(const_9998.astype('float64'), [30,]), ), 1)
call_10002 = relay.TupleGetItem(func_3236_call(relay.reshape(var_10001.astype('float32'), [11, 11, 14]), relay.reshape(const_9998.astype('float64'), [30,]), ), 1)
uop_10005 = relay.sinh(uop_9989.astype('float64')) # shape=(15, 1, 4)
output = relay.Tuple([call_9996,const_9997,const_9998,call_10000,var_10001,uop_10005,])
output2 = relay.Tuple([call_9999,const_9997,const_9998,call_10002,var_10001,uop_10005,])
func_10008 = relay.Function([var_10001,], output)
mod['func_10008'] = func_10008
mod = relay.transform.InferType()(mod)
mutated_mod['func_10008'] = func_10008
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10009 = relay.var("var_10009", dtype = "float32", shape = (1694,))#candidate|10009|(1694,)|var|float32
func_10008_call = mutated_mod.get_global_var('func_10008')
call_10010 = func_10008_call(var_10009)
output = call_10010
func_10011 = relay.Function([var_10009], output)
mutated_mod['func_10011'] = func_10011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10034 = relay.var("var_10034", dtype = "float32", shape = (11, 8, 13))#candidate|10034|(11, 8, 13)|var|float32
uop_10035 = relay.log(var_10034.astype('float32')) # shape=(11, 8, 13)
func_7714_call = mod.get_global_var('func_7714')
func_7717_call = mutated_mod.get_global_var('func_7717')
const_10043 = relay.const([10,8,-7,-5,-6,6,5,-1,3,1,-2,7,10,10,-1,-2,4,5,3,-10,10,-10,-9,10,-3,-10,-9,-4,8,-3,-6,-3,6,-10,10,7,-6,-7,-8,-5,-1,-7,-1,-1,4,9,10,-8,2,5,-10,1,9,-2,-6,9,1,8,-8,4,-3,-2,5,-9,-2,8,-7,9,-7,-5,8,-10,2,3,-9,4,10,-4,7,-3,-10,-10,-9,6,-10,1,-5,-6,-3,8,8,3,-9,-4,-4,5,9,2,-4,6,-7,1,1,2,-8,5,4,3,-5,-10,-5,3,-2,-10,1,-10,4,-4,-9,-9,9,-1,2,-8,1,5,5,-10,5,3,7,-6,-5,7,9,10,-2,2,-7,10,-8,-5,-5,8,-4,-5,4,-3,-4,-2,-6,10,5,1,-2,-1,-6,-1,-1,10,-10,6,8,3,-8,6,9,-4,-8,8,4,10,6,-2,2,2,-8,-6,-8,2,-5,-1,-4,1,-10,4,10,7,-7,5,-2,1,-7,-8,-5,-10,9,-5,8,7,-6,-5,6,4,-10,3,8,-2,9,8,2,-4,-1,4,-4,-1,-3,-9,-8,-2,-2,2,7,2,6,9,10,-1,-2,-10,5,9,8,6,-10,6,-3,1,4,7,-5,-10,-10,6,5,10,-9,-9,-8,-5,-5,-2,1,10,9,5,-4,9,-3,7,2,9,8,-10,-3,5,-10,-8,-10,-8,4,3,8,3,8,1,-7,3,6,-10,-2,9,-1,5,-3,-10,-6,-6,-4,6,-7,6,-5,9,-6,-2,-3,-2,-6,-6,10,10,9,-10,5,9,-5,7,-3,3,5,-8,6,5,-9,-3,-8,-6,-8,-2,-4,-6,5,9,2,-9,-7,7,9,5,6,-8,10,-3,-2,-1,5,5,5,-10,-8,-3,-8,-10,4,-4,5,7,5,4,-5,4,-4,-2,5,-5,-2,1,9,-6,9,5,3,-9,-2,-8,8,8,2,-1,3,3,-4,-7,6,-6,-5,-10,3,-9,-10,1,-10,10,-1,9,8,-1,-6,5,-2,-8,-4,-7,6,1,6,6,2,-6,-8,5,6,-8,4,4,-6,7,3,-8,-4,6,2,-4,7,-5,4,1,-8,2,-4,-2,-3,2,-2,4,1,6,2,-6,-9,-4,-3,-4,-7,4,7,4,4,-5,-8,4,10,3,-9,3,-1,2,-3,4,-7,3,-6,-3,5,-9,-6,4,-5,10,-7,-4,9,2,-6,-3,-9,-6,-5,7,6,5,-1,8,8,-1,-10,-5,5,-2,-8,-6,3,-1,-1,-8,-6,-9,-6,4,6,10,4,-4,5,-2,2,9,1,4,10,-9,9,-3,4,8,5,-5,-5,10,6,4,-1,5,-5,-2,-3,1,-10,4,4,-5,1,-9,-8,6,-10,-3,-3,3,-5,3,7,-9,-2,10,-6,6,4,4,6,-7,8,9,6,9,6,-1,-8,1,-5,8,7,-1,-1,4,-2,-4,-1,-4,-3,-10,5,-6,-4,-4,10,-2,-4,-8,7,2,3,2,7,10,-8,-2,2,7,5,-4,-1,-1,-1,-10,1,10,8,-7,-9,-8,7,-10,-10,-4,-6,9,7,2,9,6,6,1,9,10,6,3,-9,-4,-1,3,7,5,-2,-1,1,-10,-5,-2,10,10,-1,9,9,-7,2,-6,-2,4,-9,4,4,8,4,4,1,9,-9,2,-4,8,10,4,6,5,-4,-7,2,10,5,-1,-7,8,1,-4,2,-10,8,4,3,-1,-8,-7,-2,-8,8,3,2,-1,-5,9,-9,-8,4,-2,1,5,-10,2,9,10,1,-3,7,7,3,7,-6,10,7,6,5,-7,-4,-8,-1,10,-2,-5,1,8,10,7,-10,-8,10,7,7,-10,-7,6,7,-7,1,7,-8,7,10,-5,-2,1,9,7,4,-7,-8,-8,-8,-5,9,-2,-6,-6,-2,9,4,-6,-8,8,-10,4,5,2,-6,-4,-8,-3,-7,1,10,3,-1,-6,10,2,9,8,7,9,7,-8,2,-1,10,8,3,-3,-10,3,5,2,1,-7,-9,10,2,3,9,10,-6,-9,-10,5,-1,2,4,-9,-1,1,-5,-6,-1,10,2,1,-10,1,3,2,4,10,-7,1,5,7,-7,8,5,9,-10,7,1,10,4,7,-5,4,-8,-9,10,-3,-3,6,9,-5,-8,-8,2,4,-9,2,10,5,4,10,-10,-3,-6,-10,2,3,-8,10,9,4,5,-4,-5,-2,3,-4,-7,-7,-4,9,10,8,4,-8,2,-5,-1,1,-7,6,6,-4,-7,-7,8,10,9,6,6,8,-7,4,-1,-5,-9,-10,-2,-10,-7,-1,5,3,-9,-7,4,-4,6,8,-2,-8,3,-8,2,4,-4,-4,-6,3,5,-4,-5,7,-6,-1,-9,1,-4,-9,-6,-6,7,9,7,3,-10,-9,3,6,-5,10,-5,8,-10,6,9,6,5,1,5,-4,-1,2,10,-5,-7,9,-6,1,-1,1,2,7,-3,7,-2,-5,-3,9,4,-8,-1,-3,3,2,-1,-5,-10,-10,1,-1,10,8,-2,7,-2,-9,4,-9,-5,1,4,1,-8,-9,10,-2,7,-4,-6,8,-7,-1,8,8,-1,-3,6,-10,-5,-1,-10,-7,-2,7,3,-8,-2,-1,-8,-6,-7,5,3,6,-4,-4,2,3,-2,4,6,6,-2,10,6,-1,5,6,1,7,-3,-10,-4,-10,5,-4,7,-1,-8,1,7,7,-7,-3,7,4,2,-6,8,7,-2,-4,-2,8,-6,-2,-10,-8,-3,7,-10,1,-6,-2,-3,-10,9,-3,-9,-9,-1,-9,-1,10,-5,-6,-8,8,-6,-2,9,-5,6,-9,9,1,8,-3,-6,-3,-9,-9,-7,-3,-7,-3,7,-5,6,-9,2,4,-1,-1,9,-1,4,-7,6,6,-7,2,-7,-6,-2,7,-8,-4,-10,-7,8,7,-7,-4,6,-6,9,4,6,-8,-8,2,7,-4,-2,6,-8,-3,7,8,7,6,-4,1,-2,-10,-5,-8,-2,-7,-3,4,6,-6,3,8,-10,8,-5,-5,10,-9,2,7,-10,-6,-7,-4,-8,-8,6,2,10,-9,-1,-4,-2,5,-2,5,7,7,-4,9,-3,4,2,-5,-8,-7,-1,-9,6,8,-8,-2,-8,1,9,-3,-4,4,-5,-8,7,9,6,2,3,2,5,-8,-2,-5,8,7,-7,8,2,-2,-1,7,-10,-1,-1,6,-10,8,-3,5,1,3,-3,-9,-9,3,5,-7,-1,9,5,9,-2,-7,2,-8,4,-2,-4,-1,3,3,4,-2,-10,6,-8,1,3,-9,-10,9,-8,-10,-3,7,4,3,-10,10,8,7,4,8,-6,4,3,1,-6,6,-3,-7,-3,-5,-7,-2,5,-3,-9,-6,-9,2,-6,5,-7,3,-6,-9,3,9,-2,-7,4,6,2,-8,-4,2,7,-2,-8,6,-7,2,-10,-2,-4,9,-10,1,9,-2,2,-1,-1,3,9,-5,6,-8,8,3,10,10,-9,1,-10,10,-5,3,5,-7,-7,1,-10,4,-9,-10,10,-7,10,-6,-1,4,-7,-3,-5,7,3,-7,-6,-10,9,4,-9,8,-10,-10,1,8,3,10,-2,-9,-6,-9,-9,-9,-9,8,5,7,-10,-8,-3,1,-8,3,10,8,-10,8,7,10,2,4,-5,5,-8,-8,-7,-6,-10,4,10,-5,8,10,3,-1,-7,2,-6,9,10,-2,4,2,8,3,-10,8,2,-5,-7,1,3,-8,-2,10,4,-9,-1,-10,10,7,-2,2,-5,2,-5,-8,8,-7,4,-2,-1,-7,-3,3,10,5,-7,7,-4,-3,-2,9,-8,-10,-2,-3,3,-7,-6,-4,-2,-10,8,10,6,2,6,-8,6,9,10,2,1,-2,2,3,4,3,-3,-3,8,-7,-7,-1,4,-4,1,8,7,-8,7,-5,7,5,2,-6,-5,5,1,6,5,10,6,-9,-9,4,-10,-6,-8,6,-1,10,-9,-8,2,-6,6,4,-5,6,4,9,-10,3,-8,-8,1,-2,5,-1,-8,6,2,-5,-7,-8,-3,-4,-3,-1,-6,-7,8,-9,3,-2,4,2,-7,2,8,-4,-8,5,7,-2,6,-2,-1,9,-9,-5,-8,1,-4,9,5,-4,-2,-6,-5,-2,10,-7,-2,-6,-7,6,-10,1,1,7,-3,-1,-1,4,7,-9,9,-1,2,4,10,5,8,-3,5,-5,10,3,-4,7,4,-10,4,6,9,-5,1,-9,7,-7,10,3,9,3,-5,-7,-8,4,8,-8,-1,6,-7,2,-6,8,-1,8,-7,5,3,2,9,-5,-7,2,8,-1,-4,10,-2,-6,9,6,4,9,3,1,9,-7,-9,-6,8,5,-10,9,-3,-6,-8,-8,4,-2,-9,7,8,-6,-2,7,8,9,7,2,3,-10,-2,3,-6,-1,7,6,-1,-4,3,-10,-3,10,6,-10,2,10,-10,8,-10,-4,-8,-4,-1,9,-10,-4,9,-3,-8,8,2,-3,-2,10,-3,-1,-3,7,3,-7,-6,-6,-6,4,3,-5,-9,-9,1,-3,4,-5,-6,10,-10,-2,7,-3,-10,-5,8,-10,-8,6,-10,6,-4,2,3,1,8,-10,-3,6,-10,8,2,-5,-9,-2,1,-5,-10,4,9,-5,-9,10,9,-7,8,9,5,2,4,-5,3,1,-6,-7,2,-2,8,-5,7,-6,-7,-4,-8,8,-10,8,-2,-7,5,5,-7,-8,-8,-1,-5,1,3,-6,-2,2,7,7,8,10,-9,1,-10,10,2,-3,8,10,-9,-2,-1,7,4,-7,-10,-8,-2,7,-9,-9,8,-7,8,-8,6,-2,-4,-4,2,5,-10,3,3,3,-6,-1,6,3,-7,-5,-2,-1,3,-7,9,-7,6,-1,1,-8,-6,-1,9,8,-6,-9,7,5,5,5,5,-3,3,7,-7,10,6,-6,7,10,-7,2,-9,6,-2,-10,-4,-7,8,-10,10,8,5,-10,-8,-8,9,10,8,4,6,6,-8,6,10,10,-8,-6,2,7,-6,8,-4,3,-4,-1,-10,2,-1,-3,4,1,-4,7,4,-8,7,-8,-4,-5,8,1,-3,6,-1,7,4,1,6,4,10,-2,7,9,1,-10,-10,-8,5,-8,-5,-4,-4,7,-3,-2,2,-1,4,-2,6,5,-4,10,7,6,5,-10,-4,-1,-7,-1,6,10,4,6,-4,7,-4,-7,-6,-2,4,-2,-1,5,-3,-9,-8,3,-10,3,2,4,-6,-8,4,3,-3,6,7,4,-10,1,1,-2,-4,7,-5,-1,-1,-5,-8,3,-3,-7,-2,2,-3,10,6,-9,6,-6,4,-6,-6,-10,-9,-8,-3,5,-8,-5,-10,9,6,-8,-1,-5,-2,1,-2,-4,5,-5,9,-4,-9,-1,4,8,-5,2,1,-4,10,2,-10,5,8,-6,2,-7,-8,3,-8,2,7,3,3,2,-5,-5,1,-2,10,10,-5,6,-7,5,-7,-9,1,4,-1,7,-3,3,-4,6,3,7,-5,1,-1,-5,3,5,-8,-8,-7,7,9,3,4,-7,-5,3,9,-2,-2,3,3,-9,-8,1,4,-5,-5,8,10,-4,-4,-7,-5,-5,5,10,7,8,8,3,7,-9,-8,4,2,7,7,1,2,-8,-6,-5,-10,8,-2,2,-1,-4,7,9,5,7,9,-5,4,7,2,2,-5,-9,-3,8,1,-3,9,-10,-9,8,3,-2,-7,-8,1,10,-2,4,-10,-9,6,1,-5,2,8,-3,-5,9,-4,-10,8,-2,9,-4,-10,-3,-5,2,5,-4,-3,-3,4,10,-10,-4,8,-9,-3,7,-5,8,5,10,3,3,4,6,-2,7,-7,-10,-8,4,-1,-5,-3,8,4,-8,-3,6,-8,7,-9,2,7,2,3,9,9,2,-8,10,10,10,8,3,8,-6,4,4,-1,9,4,-8,3,-7,-10,-4,4,6,-9,9,-8,-4,-4,6,-5,-7,-4,-2,-5,-9,-7,-7,-6,-6,-1,10,-2,2,3,9,-2,6,1,6,-8,-3,9,-7,-5,7,8,3,-4,-5,-2,6,1,3,-2,10,-3,7,4,-6,9,-5,3,-6,-3,-7,-5,1,4,10,1,8,-2,8,2,-7,9,7,-9,2,-6,-9,1,9,-1,3,-6,10,9,7,3,-10,3,-6,-2,6,-7,-1,2,4,-8,9,-2,-5,6,10,-4,-2,2,1,8,4,-2,-4,6,10,-6,9,8,9,-5,-5,-1,-8,-7,-9,-8,-10,7,-9,-3,8,-7,-9,2,-1,7,6,3,3,6,-4,-4,-7,8,5,-4,-3,1,-10,-8,-9,-6,-6,-2,-8,-2,3,9,-8,-5,-10,-7,1,-5,-2,1,9,-10,-4,-8,9,9,8,1,6,-1,4,-1,8,6,-8,-3,4,-6,4,-3,5,-4,-9,-1,10,5,-1,-8,2,-9,3,-9,-5,-5,8,3,-9,8,-1,-7,10,4,-8,-10,-8,-1,3,8,-5,-9,3,8,-7,2,-7,1,-10,-1,-7,9,2,-10,9,4,-3,9,-3,7,-5,-1,7,2,-5,6,-5,-1,2,-3,9,5,10,-5,-2,4,1,-10,5,6,6,-6,-6,10,-8,8,-2,-9,-8,-7,7,8,7,6,1,-6,1,-9,-8,-4,-6,4,-9,2,7,6,1,4,3,3,-10,-2,-2,-10,4,9,-10,7,7,-7,-9,10,8,-1,2,4,5,-6,8,5,2,9,-8,1,8,-10,10,10,-4,6,4,-9,-7,4,-1,-7,-5,-4,5,-8,1,1,-8,7,1,-7,5,-4,10,-8,-8,-3,1,6,1,10,-2,1,-3,1,6,-9,-7,-3,-2,8,-8,-5,-8,-7,-4,3,2,-7,4,9,9,1,10,3,-7,-1,3,3,8,-2,-9,-10,1,-5,7,-5,1,-10,-9,4,5,-10,3,2,5,4,1,6,1,-4,-5,-5,-4,9,10,-1,9,3,-5,3,-1,6,1,1,-3,-2,-6,7,6,5,-7,2,8,-10,-2,-4,10,-4,-4,-4,-4,7,5,-1,-8,-8,-3,-3,-8,5,-3,-3,-1,-3,4,1,-4,-7,2,2,4,-5,4,9,10,-2,-3,6,-3,-6,-4,6,-7,9,-3,-9,2,-6,-3,-8,9,4,6,3,-8,-10,-7,-2,-1,4,-3,3,-7,2,3,3,-2,3,6,9,4,10,-6,-6,3,-1,10,-2,2,-9,5,-9,8,7,8,9,7,-3,-2,-2,-6,-1,-8,5,8,8,-3,-2,-9,-4,7,8,5,-9,-10,-1,-7,-5,7,8,4,-1,-3,8,4,-10,9,6,-1,8,9,10,-2,-2,4,4,-4,-5,-8,10,8,4,9,-1,9,4,9,-4,8,9,6,2,-8,8,1,-9,-9,8,5,8,7,1,-5,-6,-1,-7,-10,-8,5,4,3,8,-8,-9,4,-8,9,-8,4,-9,10,-3,-4,-9,-6,-8,-8,-2,3,-1,9,7,-9,-4,8,8,-9,10,-4,6,-4,9,-3,10,2,-2,-3,1,-3,-4,8,2,-5,-5,-1,-8,-7,9,-10,7,-2,-3,7,6,-8,-4,-2,-6,-9,5,3], dtype = "int32")#candidate|10043|(2880,)|const|int32
call_10042 = relay.TupleGetItem(func_7714_call(relay.reshape(const_10043.astype('int32'), [2880,])), 2)
call_10044 = relay.TupleGetItem(func_7717_call(relay.reshape(const_10043.astype('int32'), [2880,])), 2)
output = relay.Tuple([uop_10035,call_10042,const_10043,])
output2 = relay.Tuple([uop_10035,call_10044,const_10043,])
func_10059 = relay.Function([var_10034,], output)
mod['func_10059'] = func_10059
mod = relay.transform.InferType()(mod)
var_10060 = relay.var("var_10060", dtype = "float32", shape = (11, 8, 13))#candidate|10060|(11, 8, 13)|var|float32
output = func_10059(var_10060)
func_10061 = relay.Function([var_10060], output)
mutated_mod['func_10061'] = func_10061
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10263 = relay.const([[[-9,-9,1,-4,-3,6,2,4,-5,4,-4,-4,8,3],[-4,-4,-1,-5,-7,5,-5,-1,5,6,8,7,-8,2],[-4,6,2,-10,-2,-7,4,-9,5,8,7,-9,6,7],[-1,-2,8,3,-9,-2,10,10,-3,4,8,7,6,2],[-6,-7,-10,1,8,-5,-7,-6,6,2,4,7,-8,9],[2,5,10,4,3,-5,9,8,7,-6,1,-2,4,8]],[[4,5,9,-6,3,7,7,-7,-2,-6,-8,-1,10,3],[-3,-5,8,-4,1,-4,-4,-10,-4,1,1,-4,10,9],[9,4,-3,-10,1,8,6,8,-4,2,7,-4,1,-9],[-3,8,10,-7,-1,4,1,-3,3,-8,10,-4,3,7],[-4,-4,-5,-3,6,-10,7,8,7,4,3,-6,3,-1],[-8,10,-5,10,-9,-6,5,2,3,9,-1,9,-4,-6]],[[7,-3,6,-6,10,-2,1,3,-8,-7,5,9,8,2],[7,10,7,-6,9,-5,-9,7,7,-5,7,5,7,-1],[-4,-6,-1,4,10,-3,3,7,7,2,-5,8,-1,7],[-7,-3,-1,3,-7,-10,-6,-5,10,-10,7,-10,9,6],[3,9,4,-4,-3,7,-3,-9,1,-9,-6,-10,1,7],[10,-1,9,-2,4,-7,2,-6,-10,-5,9,-2,4,-9]],[[-1,-6,-2,-3,-9,-3,2,9,-2,10,-2,-3,-10,-7],[8,-9,2,2,-4,-4,-4,5,7,-2,1,-2,-7,-3],[3,-3,-7,10,10,3,8,9,4,-8,10,-1,1,5],[2,7,9,4,2,5,-7,8,-6,9,-2,5,8,4],[-1,9,8,-9,-4,5,1,8,10,5,-2,10,-3,6],[10,3,1,-7,8,10,-10,-7,-6,-1,2,4,2,8]],[[6,-9,5,10,-5,-9,-4,4,5,-7,8,-7,3,2],[5,1,3,-10,3,6,-6,9,-3,5,4,-9,9,-3],[-1,-8,-7,8,2,-10,-7,-2,-3,-4,-4,6,-1,4],[-3,2,2,-10,2,10,-7,6,-9,8,1,-8,-1,7],[-9,9,6,6,3,8,6,-9,10,-9,-6,-9,-1,2],[-9,-3,7,-10,5,-2,4,4,-2,4,-10,9,4,-1]],[[-4,6,-1,2,10,3,-8,4,7,-1,-2,-10,-10,6],[-6,-8,1,6,2,10,-1,-7,-7,10,-8,-2,-10,3],[-1,3,-6,-2,4,9,-7,7,-1,5,-5,2,10,6],[-8,9,7,-1,-4,2,-10,-5,9,2,-10,7,-6,1],[-7,-7,5,4,-9,-7,-7,-2,-1,3,2,-9,6,8],[-7,9,5,8,-1,3,9,-4,10,-5,-6,-10,-8,3]],[[-7,6,-9,7,-1,7,7,-6,2,5,8,3,-10,4],[-4,-10,5,4,-2,-1,5,-9,-8,3,2,3,7,4],[1,-3,-5,5,-2,-6,-1,9,5,-10,-10,-4,-10,4],[3,5,8,-8,-5,-2,3,9,-7,9,6,-8,4,-1],[-6,-2,-5,-4,8,-5,-6,-8,-7,2,5,9,-3,-10],[-6,1,-7,3,-1,4,-1,-2,8,-6,5,10,-9,5]],[[-3,-9,5,-2,-5,4,-4,-7,9,-1,-7,3,-7,6],[-1,10,-6,-4,-10,-3,3,-1,8,-3,-7,-6,-3,8],[2,-8,5,-9,-6,3,-1,-9,6,3,-1,-2,3,5],[-7,-8,9,3,1,-6,-5,2,-5,-10,4,6,-2,-4],[-6,-2,1,1,-5,3,-8,-2,-6,-9,-7,4,4,5],[-6,-2,-7,5,-4,6,-3,-5,6,4,-2,-4,3,10]],[[-8,3,3,6,10,8,10,-3,-10,5,-4,9,3,-6],[-1,-6,-3,-5,-4,8,4,8,-7,8,7,-5,-2,10],[-10,-4,5,2,-8,-4,-7,8,8,5,9,5,5,-9],[-8,4,7,9,-7,8,5,8,6,-3,-4,-2,-2,-8],[-10,-5,8,-6,-7,-7,-5,10,10,-4,-5,-3,-7,-3],[3,-7,-2,1,4,-7,10,3,-10,7,-2,8,-8,-8]],[[5,6,-3,-9,5,-7,5,10,-7,-3,8,8,-1,-7],[5,-3,-7,6,-2,-6,-7,8,4,-9,10,9,2,-8],[-2,-1,2,-7,5,-10,-2,-3,-9,1,8,-6,2,8],[3,-8,-3,-1,-2,-6,6,3,-4,7,9,9,-7,-8],[4,-4,2,-1,-10,-1,-3,-1,-5,-8,-3,2,-2,1],[-10,10,-5,-1,6,-5,4,-1,5,7,6,-8,-10,-5]],[[5,-4,7,1,8,-10,-1,3,10,-4,5,6,-7,-4],[-7,1,-5,9,9,-5,-9,3,9,-7,9,-6,1,8],[6,-6,1,5,4,-9,3,2,-8,-1,-3,7,-8,-8],[7,-10,8,-6,-5,4,-6,-2,8,10,-9,4,-1,-5],[6,-9,-9,-5,-5,3,-3,-9,3,-9,-5,6,2,-7],[-1,-2,-4,-9,2,-10,-5,8,4,-9,9,8,1,-8]],[[-4,-5,-7,-1,10,6,1,8,10,6,-3,1,-4,-8],[10,7,-2,8,-1,-2,8,4,3,7,-10,-7,9,7],[-4,-8,10,10,-10,-1,9,4,9,-1,10,8,-3,2],[-3,-5,1,-3,1,-3,2,-1,-7,-10,-3,-1,-1,2],[3,5,-3,3,8,-7,9,-9,5,-4,7,9,7,2],[8,-1,9,7,8,8,-7,-4,-8,-9,-5,3,9,1]],[[-1,-3,6,-2,-1,7,-2,-7,3,-7,-4,-1,-1,10],[-8,7,3,-10,5,-4,-4,6,-7,5,4,-10,-8,9],[5,9,-2,5,-8,4,9,-10,10,-9,10,-6,3,5],[7,1,5,7,8,-3,-9,8,7,-10,-3,-6,10,7],[8,-7,6,-6,9,8,-7,2,10,-3,7,5,-10,-4],[1,-6,-1,-3,-2,-8,4,6,9,-7,-9,5,2,7]],[[9,6,1,10,-6,3,-3,7,-8,-1,1,5,8,6],[-10,-4,4,-10,4,1,4,-8,-4,4,-7,9,5,-10],[4,3,-10,-2,8,1,1,-4,7,-1,6,-5,2,-1],[-9,-8,-8,6,9,-4,9,3,-9,-4,6,7,1,-4],[-7,-10,5,-9,10,-1,-3,-9,10,4,-6,6,-4,-3],[7,9,-2,2,8,2,-7,10,10,4,-1,1,-7,-9]]], dtype = "uint8")#candidate|10263|(14, 6, 14)|const|uint8
var_10264 = relay.var("var_10264", dtype = "uint8", shape = (14, 6, 14))#candidate|10264|(14, 6, 14)|var|uint8
bop_10265 = relay.bitwise_or(const_10263.astype('uint8'), relay.reshape(var_10264.astype('uint8'), relay.shape_of(const_10263))) # shape=(14, 6, 14)
var_10301 = relay.var("var_10301", dtype = "uint8", shape = (14, 6, 14))#candidate|10301|(14, 6, 14)|var|uint8
bop_10302 = relay.logical_or(var_10264.astype('bool'), relay.reshape(var_10301.astype('bool'), relay.shape_of(var_10264))) # shape=(14, 6, 14)
uop_10307 = relay.asin(var_10301.astype('float64')) # shape=(14, 6, 14)
output = relay.Tuple([bop_10265,bop_10302,uop_10307,])
output2 = relay.Tuple([bop_10265,bop_10302,uop_10307,])
func_10312 = relay.Function([var_10264,var_10301,], output)
mod['func_10312'] = func_10312
mod = relay.transform.InferType()(mod)
var_10313 = relay.var("var_10313", dtype = "uint8", shape = (14, 6, 14))#candidate|10313|(14, 6, 14)|var|uint8
var_10314 = relay.var("var_10314", dtype = "uint8", shape = (14, 6, 14))#candidate|10314|(14, 6, 14)|var|uint8
output = func_10312(var_10313,var_10314,)
func_10315 = relay.Function([var_10313,var_10314,], output)
mutated_mod['func_10315'] = func_10315
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10843 = relay.const(-9.328083, dtype = "float64")#candidate|10843|()|const|float64
var_10844 = relay.var("var_10844", dtype = "float64", shape = (16, 4, 5))#candidate|10844|(16, 4, 5)|var|float64
bop_10845 = relay.floor_divide(const_10843.astype('float64'), var_10844.astype('float64')) # shape=(16, 4, 5)
output = bop_10845
output2 = bop_10845
func_10849 = relay.Function([var_10844,], output)
mod['func_10849'] = func_10849
mod = relay.transform.InferType()(mod)
mutated_mod['func_10849'] = func_10849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10850 = relay.var("var_10850", dtype = "float64", shape = (16, 4, 5))#candidate|10850|(16, 4, 5)|var|float64
func_10849_call = mutated_mod.get_global_var('func_10849')
call_10851 = func_10849_call(var_10850)
output = call_10851
func_10852 = relay.Function([var_10850], output)
mutated_mod['func_10852'] = func_10852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10877 = relay.var("var_10877", dtype = "float32", shape = (16, 11, 10))#candidate|10877|(16, 11, 10)|var|float32
uop_10878 = relay.asin(var_10877.astype('float32')) # shape=(16, 11, 10)
output = relay.Tuple([uop_10878,])
output2 = relay.Tuple([uop_10878,])
func_10881 = relay.Function([var_10877,], output)
mod['func_10881'] = func_10881
mod = relay.transform.InferType()(mod)
mutated_mod['func_10881'] = func_10881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10882 = relay.var("var_10882", dtype = "float32", shape = (16, 11, 10))#candidate|10882|(16, 11, 10)|var|float32
func_10881_call = mutated_mod.get_global_var('func_10881')
call_10883 = func_10881_call(var_10882)
output = call_10883
func_10884 = relay.Function([var_10882], output)
mutated_mod['func_10884'] = func_10884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10899 = relay.var("var_10899", dtype = "float64", shape = (16, 3, 6))#candidate|10899|(16, 3, 6)|var|float64
uop_10900 = relay.atan(var_10899.astype('float64')) # shape=(16, 3, 6)
func_651_call = mod.get_global_var('func_651')
func_654_call = mutated_mod.get_global_var('func_654')
var_10907 = relay.var("var_10907", dtype = "float32", shape = (945,))#candidate|10907|(945,)|var|float32
var_10908 = relay.var("var_10908", dtype = "float64", shape = (30, 1))#candidate|10908|(30, 1)|var|float64
call_10906 = relay.TupleGetItem(func_651_call(relay.reshape(var_10907.astype('float32'), [945,]), relay.reshape(var_10908.astype('float64'), [1, 30]), ), 3)
call_10909 = relay.TupleGetItem(func_654_call(relay.reshape(var_10907.astype('float32'), [945,]), relay.reshape(var_10908.astype('float64'), [1, 30]), ), 3)
output = relay.Tuple([uop_10900,call_10906,var_10907,var_10908,])
output2 = relay.Tuple([uop_10900,call_10909,var_10907,var_10908,])
func_10910 = relay.Function([var_10899,var_10907,var_10908,], output)
mod['func_10910'] = func_10910
mod = relay.transform.InferType()(mod)
var_10911 = relay.var("var_10911", dtype = "float64", shape = (16, 3, 6))#candidate|10911|(16, 3, 6)|var|float64
var_10912 = relay.var("var_10912", dtype = "float32", shape = (945,))#candidate|10912|(945,)|var|float32
var_10913 = relay.var("var_10913", dtype = "float64", shape = (30, 1))#candidate|10913|(30, 1)|var|float64
output = func_10910(var_10911,var_10912,var_10913,)
func_10914 = relay.Function([var_10911,var_10912,var_10913,], output)
mutated_mod['func_10914'] = func_10914
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11102 = relay.const([[[5.074782,0.727891,-1.692231,4.011017,7.870403,9.632872,3.621790,1.378720,4.186746,9.172966,7.854572,8.153251,-4.963920,-7.654804],[8.758396,-9.060894,4.724208,3.904420,-4.598831,-1.622230,5.862281,5.271560,6.065952,3.857146,-4.749110,8.833884,-1.750316,1.485446],[0.695076,-1.784245,-8.754905,-6.851946,-2.111656,4.072838,-1.918596,6.604490,9.265738,-0.576355,0.894405,2.993445,-7.536854,-8.973673],[-1.329346,-7.125480,0.484512,-0.842403,5.199160,6.427581,-6.851322,-2.859551,9.375197,7.507347,-3.786823,3.663001,2.067828,9.563260],[1.133013,-1.466883,3.489246,-5.783002,8.079128,-4.707583,7.411159,4.401726,5.805002,-6.416800,1.022968,3.768757,6.986479,6.114747],[-5.952478,-4.430558,-3.153904,5.349555,9.660562,-6.777916,-3.075478,1.836583,8.901603,-1.991712,-7.610509,5.946593,-6.654248,2.417564],[7.414217,-6.204792,3.499586,5.071166,6.855235,-3.031277,-4.971160,-0.597915,4.874793,-4.875209,-3.622873,4.163877,2.131978,-9.276139],[-4.678470,7.797762,-8.946649,5.936738,8.873428,-5.974271,5.552967,9.426044,7.926627,-8.830802,-8.655152,1.481321,0.737383,1.905442],[4.725434,-5.101458,-9.289767,6.153641,3.547133,-9.884630,-7.016027,-4.809018,2.438632,8.886873,4.650569,-1.852491,9.939367,-3.327995]],[[-6.594232,6.758210,0.903986,5.755423,-9.779182,-3.373154,1.947290,-7.095574,1.137856,5.360788,-3.999610,-9.534940,8.161460,5.818052],[-9.908693,0.257432,-3.936625,0.247719,9.639840,5.456571,5.705363,7.422213,-6.792462,-1.580625,-6.946116,8.705609,8.862411,-2.781133],[-9.779554,6.139902,7.887180,8.261021,3.801905,3.657899,-5.608774,-3.486322,0.058760,-5.239776,4.063240,7.868725,9.972015,1.391041],[-8.614414,7.554461,7.342545,-3.250382,1.111144,-4.633785,-1.568662,4.193446,-9.176365,-5.635797,-6.870055,-3.284184,-3.832988,9.610455],[-0.875971,-4.699885,3.728897,3.136352,-1.788561,8.685580,6.153751,-1.889257,-4.151030,-5.913261,-8.139368,-1.629111,-9.860965,-4.712970],[-2.770062,-4.633725,-7.829354,-2.693080,-1.069467,8.058636,9.853348,-6.424713,-6.950339,-6.589472,9.331350,-3.263161,5.421589,-1.025878],[1.659920,-8.707502,-0.986980,-4.173806,2.546437,-5.803602,-7.988685,-4.090011,9.822610,-1.033282,-3.586605,-5.191945,-2.762237,9.830914],[8.434329,7.835757,-9.680801,-6.108625,-2.317479,-8.861031,3.611811,0.912028,-1.841545,2.097256,-5.687897,6.238577,-5.396759,-0.285727],[-3.250369,9.841223,1.757150,-1.818775,-7.120917,3.668693,7.702147,8.650930,-0.678217,-1.513968,-9.545183,-7.940051,-7.400616,9.429956]],[[8.141447,8.715878,7.565974,3.740426,2.632610,1.157216,8.658961,-6.869511,-0.742030,9.981061,-9.687583,1.340768,-5.304037,3.359444],[4.448775,4.450449,6.157549,4.047000,7.283169,3.059849,-9.403213,5.693624,9.757360,5.351782,2.211510,9.595818,-0.440280,-8.055537],[-2.798454,2.611221,0.593128,0.372249,1.898768,6.868613,1.910346,7.310421,0.047175,3.442634,-8.596462,-4.646498,-1.368480,5.238648],[-8.436609,2.096197,-3.081957,2.400765,4.928322,-1.181452,3.563857,-7.002095,-2.719638,-3.074932,-2.739809,7.989615,-8.006347,-2.045085],[0.612822,-8.638090,5.220750,-7.065741,-7.184265,1.473489,-8.071025,0.124102,-5.457937,6.933623,0.966611,-3.381579,1.725524,6.837102],[-4.128083,-3.267338,9.127848,4.659242,-8.975806,-7.015864,7.045758,3.549117,6.196295,4.881552,-5.450721,2.528922,6.277997,5.004924],[9.799163,-8.926673,-2.961438,6.122323,8.677973,-5.614806,-2.834249,6.945617,4.489646,-3.006851,0.559855,-4.402300,-6.908717,7.577364],[0.036738,-0.958392,6.454532,-1.773622,-2.596032,-9.727852,8.802202,1.311037,1.827512,1.724056,2.926286,-3.264220,-4.139304,-8.880205],[-0.563900,-2.901549,-5.745329,-2.544669,3.412815,3.574503,-9.101270,-5.402309,6.578378,7.934095,-6.123285,7.719695,-6.438158,-9.268412]],[[-0.750973,3.283615,-7.204496,-3.662244,8.142685,0.722926,-2.149396,-9.794682,-6.605106,-9.728395,-1.677746,-1.660668,-6.524045,9.588932],[4.061960,8.339139,-4.686956,-5.213879,-9.817819,-7.911210,0.670832,7.469915,-6.348211,-7.011555,-1.926745,-7.267711,7.955451,4.733566],[-1.254870,-1.701764,-5.112032,2.793711,1.350049,1.919037,8.520384,3.996940,7.887749,-6.858421,-9.535477,-8.592917,8.813625,7.331275],[-0.333988,-3.104241,9.640623,-1.059921,2.484433,8.963547,-7.032099,-7.683139,-6.571980,-3.897504,-1.916107,2.651326,-3.781503,0.714301],[9.122852,-9.001025,4.181647,-8.624096,1.152316,-8.442365,2.772414,2.146462,6.747244,6.288118,7.015858,2.146497,-5.724699,-7.933886],[9.822036,-5.354114,1.035570,-4.153729,7.233340,6.884803,5.504020,4.124881,7.041941,-9.571622,1.681730,-2.190531,-5.917498,-3.739735],[6.528376,6.190863,8.812438,7.392568,-1.663934,4.488817,-8.473862,-2.912359,5.541584,-0.951181,3.253671,1.646168,-4.087702,9.410697],[0.154550,4.337894,0.108388,9.888401,-7.440623,5.823173,-6.681239,7.076459,1.013326,6.846434,4.151400,-2.269582,-1.350382,0.345662],[0.625071,5.765055,0.822282,9.553325,6.994558,2.518598,8.192821,-1.708523,4.702411,4.432951,-9.039070,5.482525,-0.869201,-4.566536]],[[4.719498,-0.359596,-4.200000,-2.791955,-5.687209,-4.584411,-4.070012,-7.639775,-7.269975,-3.073730,-0.139247,8.004668,-3.920286,-6.220050],[-6.763165,9.186576,3.279991,-0.731883,-3.067253,0.849241,9.788296,-6.033331,0.487035,2.796160,-8.861471,4.663535,4.735730,7.922509],[-8.527027,0.678927,-1.588626,-9.003666,-7.016687,9.952325,8.552443,8.706900,6.303544,6.854665,-2.827186,-3.104501,-5.500492,5.655089],[-9.741373,2.676976,9.203717,6.915694,3.313117,9.101199,0.469453,-5.951832,8.981388,4.773059,-5.941938,2.149513,1.706396,8.298831],[4.085495,-9.775700,6.433919,-8.875189,-0.416154,-2.984504,-7.981203,1.830255,-0.816117,-6.748567,8.314987,-9.695877,-2.144957,0.905598],[-9.145576,3.601224,1.930033,0.714151,5.073624,2.541457,-0.064567,-7.424390,5.498466,-7.440692,6.943633,0.397668,-0.437736,-9.924992],[1.105759,-2.971319,-7.763684,-3.815513,9.265368,-9.614689,3.262429,-9.062848,4.970185,-5.256032,-0.441848,0.058043,-7.881430,3.428204],[-4.999018,6.675737,0.327617,0.500137,-5.985380,9.049667,-6.157834,-2.414594,-7.777431,1.992975,9.356029,-0.076441,-3.677647,-7.289140],[5.554600,7.827263,8.469449,4.174738,-2.686564,2.664005,-5.716785,4.480513,-3.624970,6.748342,-4.092657,5.265184,-8.750469,-4.466488]],[[6.046053,9.798276,-8.657687,-8.313066,-2.465779,-3.970903,7.945891,3.127860,-0.493590,-1.842227,-2.436584,7.841464,-3.321100,6.090068],[9.585789,4.314988,-0.878541,6.992491,1.381798,-5.997993,3.220926,-2.034286,-8.519087,5.528492,-7.776567,-5.988008,7.539551,-5.996326],[-5.293899,-2.740641,9.079538,-7.327250,1.905565,-3.769382,8.021247,-3.539026,1.078327,6.897511,-5.384440,-0.642581,-6.800645,3.709576],[5.379780,4.679210,2.395275,9.937451,1.708054,-8.526669,5.583847,6.613201,-9.916018,1.440494,9.719833,3.556392,3.361075,-9.940326],[-1.043627,2.236521,0.745245,9.560939,3.244298,3.331974,-8.547838,4.119959,-4.266915,0.947559,-2.949868,-9.625330,9.785487,2.138707],[-1.259631,2.155808,6.279918,-5.365259,5.907261,-5.611910,-3.367961,-7.842226,5.176616,-0.308594,-3.119543,-0.413676,-3.821174,-5.618808],[8.186591,3.560701,-4.624123,-4.814926,4.697536,-2.816081,0.270108,3.580817,1.923419,-4.208073,8.434882,-9.615077,-6.105626,-3.095398],[-5.586824,9.327321,-6.795143,4.794229,2.968998,2.619481,-5.488643,0.365879,-8.437200,6.759987,-2.259699,-3.047910,-8.140675,-8.406800],[-8.362555,3.329042,1.823832,-6.917805,9.800209,-6.990880,4.459752,-8.600686,-6.354467,3.381146,-9.133876,-1.552068,4.516274,1.218500]],[[5.439440,-2.249584,-3.687663,-5.320123,-9.432979,-6.845019,-2.180572,-2.947212,-1.351174,3.466218,3.523283,2.283199,5.184068,-6.577423],[-8.318796,-2.291042,5.333371,2.971154,8.743813,-4.412615,-1.193463,6.817983,0.280399,0.978080,-5.662426,-1.647912,2.259224,-2.665513],[5.339573,3.740056,-9.379623,-8.336374,1.497416,4.022382,0.674554,-6.650101,-2.585212,3.661026,-0.361439,4.338082,8.317294,-1.754258],[7.940414,-9.910404,5.870630,0.508735,3.907802,-3.276553,8.916461,5.699519,2.393995,7.333300,-7.388749,5.440085,0.071963,3.923710],[7.744649,1.908296,-0.071196,3.915793,-4.768209,4.357191,-6.832762,-5.240790,-4.563899,1.152967,3.181488,6.791622,4.939556,-3.051979],[-4.698720,7.400975,3.187791,-6.533775,-1.451029,-5.736334,-1.762754,8.780373,3.036487,4.810561,7.369902,8.240961,9.055344,-4.240546],[0.644018,1.839325,0.227960,8.720593,5.567888,-4.614272,-2.122866,-5.820496,4.660178,5.486286,5.978739,-1.180182,6.524355,-2.283581],[-9.069000,3.624624,9.721978,4.189784,-4.978680,-8.601237,3.891939,4.905069,8.436442,-8.116408,5.465636,7.341927,-1.930804,-1.416374],[1.630652,-9.263885,0.891835,5.143358,-0.981905,9.776003,-5.696769,4.605711,4.744527,5.895361,-1.608834,0.082337,3.027413,6.570313]],[[-5.008156,-0.656830,-6.508060,4.204856,-3.138534,-9.990514,-9.292923,9.446692,0.273238,-8.296730,-2.235265,1.012369,5.542958,-1.750591],[5.647394,4.778587,3.244858,5.256481,-0.248118,-9.541849,-9.263226,-6.587280,-1.499346,4.163637,-0.945755,-0.655664,5.162890,2.908578],[-7.527934,8.431700,7.607236,7.443677,-6.510346,-1.695794,-8.234791,-2.309747,-9.099744,0.912470,-9.459766,-8.837041,-1.996673,2.250085],[5.539078,-4.661386,4.859122,1.501839,-3.420491,4.627811,-6.957627,-6.135810,-9.757194,3.067339,3.752768,-6.966730,2.484212,-0.733292],[6.398702,4.026657,-5.459989,6.417183,0.910546,3.997917,4.141370,9.011556,-1.814490,-0.410529,-4.720319,3.477856,-7.346151,1.342424],[2.969397,5.064108,-8.938549,6.580571,2.272551,-2.763559,2.409609,-1.189241,-2.215105,-1.176941,8.377759,-0.004382,-5.254439,1.409760],[3.014794,-9.262497,-2.144295,2.014772,-0.636042,-0.323651,7.031666,9.060439,-2.277852,-4.444751,8.978903,7.708486,9.147087,-7.465466],[-7.498612,0.539080,-7.665051,-8.509632,2.480913,3.822433,-7.504065,6.964784,-8.223490,-7.961357,2.815908,-9.248295,-7.886093,4.247988],[1.760133,1.093888,-3.059864,4.635234,5.325748,1.857180,6.185866,-5.612086,-2.618236,-0.821290,-5.279792,6.250198,2.203927,-9.809631]],[[-4.696707,2.695591,3.381236,9.518588,9.946410,9.001491,-3.507679,-7.310207,3.459109,8.780786,-9.663711,4.717964,-0.547413,-8.339761],[-6.895436,5.776365,3.234572,-5.819851,-1.780722,-1.662540,-3.886084,-4.152147,-4.035729,-7.638447,1.746757,-0.432044,5.283374,6.461708],[-2.864539,8.324418,-0.374272,5.412081,-1.970700,8.118864,4.674252,-0.516557,0.176104,-6.956471,5.636837,9.477984,-0.564635,8.821544],[5.101383,-0.565970,-4.716272,-1.687780,-1.199740,-0.848327,9.141972,8.145032,1.915755,-7.171526,-2.467703,7.716065,-7.925489,6.857036],[-6.489195,-4.005715,0.961579,5.710272,1.051800,-5.353727,-2.976139,-4.442248,-2.952024,-1.525825,8.841732,-3.675751,-3.157781,-6.779257],[0.517859,7.958048,-3.415840,2.080961,-7.036656,0.238442,9.671400,-0.844195,3.345940,7.680866,-4.690940,6.018839,1.381747,-9.201633],[1.566244,-6.714131,-8.033236,-6.279967,0.201497,-3.189666,2.623213,2.529586,4.248148,-6.789260,-7.439783,7.725894,8.329582,2.479220],[-5.417405,-8.790087,-8.826116,-0.180073,5.048339,5.895955,8.197921,-9.605501,6.333027,7.390331,7.185380,1.169067,2.433025,4.488037],[-0.928157,5.602692,-8.388918,-1.230487,-3.417735,8.206222,-2.127717,9.322292,-5.183617,-9.929465,7.831278,-2.952269,1.799942,6.835448]],[[-5.640613,1.447104,1.264439,-5.533055,5.741873,-7.076589,7.167485,0.592207,-5.136381,0.720382,-7.660129,-8.462952,5.635449,8.991882],[1.199949,-3.528137,5.993474,-4.973863,-0.603016,-1.576163,5.079254,-3.419352,-0.902265,-9.648256,-9.764363,1.913648,4.012248,-9.488163],[-9.369621,6.007506,-6.344894,-4.197632,-3.320443,-7.371736,7.001222,-4.705878,7.368428,2.683535,-0.395150,-9.362000,-8.094911,9.881826],[-1.095368,-0.786846,9.435789,-7.968260,1.599523,4.282187,2.650443,9.712189,-9.580346,6.399815,-5.170307,6.965531,0.117987,9.331720],[4.622545,5.637146,-9.252984,9.885894,-5.355900,-6.633822,-4.445849,1.040843,6.287010,-8.635612,-4.928599,-6.161409,-5.102759,6.703778],[9.799070,6.897556,5.903126,-2.884420,7.329703,-7.565060,3.859346,9.014967,-3.460071,1.515855,5.674906,-8.440310,-2.088027,-6.292471],[-7.271195,-4.528874,-1.858524,6.938166,-5.491482,-2.271726,0.303377,6.065140,3.335797,-6.311569,8.189909,5.584179,1.213224,-2.009481],[-3.657158,-8.650982,-4.293728,2.828032,7.486872,5.798670,-2.909454,0.350564,-8.599209,7.740994,2.293416,7.427095,2.580271,-3.838691],[-7.908957,-9.564237,9.218218,-5.227651,9.919921,4.269943,-2.942955,7.671551,-7.140759,-1.647981,5.797680,-9.789198,4.408635,-0.703353]],[[-1.222502,6.414222,3.976111,-9.448313,-9.950151,8.079410,-5.723743,-2.228864,2.499587,9.303835,-5.974286,-5.763304,2.736035,7.824792],[-2.372258,-6.099074,-6.270781,-9.842810,6.273152,-4.645580,6.851253,-0.146817,-6.216566,-7.580202,-0.431831,6.273049,6.292263,-3.603732],[-2.389944,2.190626,4.626271,-0.108642,6.436644,-4.117128,7.768130,-0.701231,-9.689749,-5.074974,-7.187500,-3.851505,-3.265997,4.399172],[8.064528,1.131360,3.183048,-1.674432,-2.746589,-4.029667,7.325349,-7.823490,-9.029909,9.819373,4.443511,7.724994,-7.808464,-2.393319],[-0.430247,-2.423759,-7.444215,9.541071,-9.179585,-0.169521,-0.673526,-3.248508,9.318861,-5.157460,-6.130777,-0.518650,4.884748,3.187866],[6.234321,5.774471,3.568463,2.170738,5.310584,-8.678258,1.719286,-6.528917,5.988533,7.874387,6.881059,-7.655035,-3.019135,-9.262626],[3.191532,5.686295,0.483206,-7.499812,3.815617,-7.734084,-9.678192,-3.427846,-6.832640,-6.490685,-7.178518,-7.179495,8.500734,6.131247],[-3.947503,-6.556822,1.263965,-5.132993,-2.184595,6.546217,5.565617,-7.602645,-8.893417,6.977467,5.822399,0.995259,6.158099,1.800762],[-3.789069,-0.700191,-0.243303,-6.926988,9.164223,6.648601,2.185712,6.464948,-2.027233,4.356006,-0.692223,2.690241,-0.319827,0.132179]],[[0.054242,-0.958669,6.043285,-7.241770,7.161996,2.910451,5.666148,-8.965016,-7.369531,7.910159,0.668171,5.225774,2.266151,9.168219],[1.703057,-8.942248,-1.118412,9.923786,5.539265,4.070581,-4.453765,0.348696,1.563800,0.569555,7.678653,3.415605,7.441220,7.662651],[9.407314,-9.236188,1.601724,3.542443,6.319439,-2.207557,-8.607309,-3.093187,-0.845274,2.126979,0.298684,8.252985,4.648451,-4.174823],[-4.412375,-5.274475,-6.167809,-4.668126,7.795920,7.354924,-9.565150,0.996348,-8.723882,-8.958371,-0.027933,-6.254825,-9.172710,-6.962943],[-9.862511,-0.446184,-2.719560,4.343972,4.471729,2.150436,9.148329,3.422868,-7.227755,0.855698,-6.265225,4.312456,1.713837,0.289902],[-2.068322,4.732568,-8.330945,9.411229,-2.896987,9.471917,-1.542573,-8.845512,-9.074448,-1.088332,5.965971,3.524726,5.266719,-0.752518],[-1.169406,-8.417109,0.070280,-6.888632,4.828974,0.223499,-9.622681,2.242078,2.876796,-8.718173,4.197875,-0.159171,-2.596323,6.536227],[-4.654246,-2.609494,9.392733,5.722314,0.844791,-6.891075,6.542157,-7.384490,-7.593428,8.446561,-3.187330,4.185420,-9.590309,-8.773234],[6.779316,-3.476127,4.514313,4.938953,4.513339,0.510699,-2.594861,3.967934,1.919753,8.672650,0.838386,5.822974,-5.035273,3.427555]],[[-0.667470,-4.411728,1.003597,-5.467993,1.618179,8.528853,-2.831825,4.687549,-7.133669,3.185579,5.646004,-9.078808,5.215949,-9.843435],[-1.759402,-9.405182,5.424325,4.888296,8.167830,4.250974,1.584147,0.087996,4.411200,-4.614030,4.482826,-8.102436,-1.292155,2.539007],[-1.392233,3.175799,9.998067,-7.213757,-7.675243,-2.318824,5.190448,2.017977,-1.305115,-4.784251,8.509772,-5.955617,-4.086578,6.403579],[0.022003,-0.657025,-2.643874,-8.320845,7.441532,-3.455765,-3.861548,3.704558,-8.654556,-1.479004,5.698238,1.736956,4.351689,1.491720],[-7.694967,-7.505024,3.524394,1.388695,4.529717,-5.844967,-5.430399,-8.531464,9.879031,-3.457728,-0.177082,-0.085979,-1.255790,2.621105],[3.848849,0.925900,3.926041,1.775995,7.164405,6.452535,4.803229,0.256429,-3.444556,-8.064912,-1.483109,-5.277865,-6.901619,-9.087779],[-9.614714,-8.523312,3.997996,6.563339,-4.202768,7.740498,6.427145,-9.031948,-2.321104,1.255341,2.032718,-1.246696,-6.335874,9.109139],[-7.737534,2.270871,1.901027,-7.885552,-0.003500,5.482145,0.235197,-3.613396,1.334715,3.629261,-2.049715,0.371807,-2.033198,4.415823],[-4.849204,9.379166,2.693279,5.294438,1.686004,3.753721,1.127065,-7.107780,2.635508,0.490600,5.512943,7.601385,4.016681,0.765448]],[[-6.826179,7.444899,8.360191,8.169707,3.507860,5.193142,5.239707,-5.409342,-4.135748,6.820979,1.433796,-8.662179,9.254647,7.733157],[-6.054309,-5.968443,9.356865,8.550062,6.365295,2.360048,7.874256,1.571363,4.576589,4.199915,-1.571744,-0.991282,-7.836219,-9.564667],[-7.601693,-0.643517,-5.736501,7.335188,-8.119920,9.379113,-9.895215,3.774718,9.507129,-8.333485,-5.484745,-8.179334,-7.275388,6.335545],[-8.144158,-4.518768,6.699496,2.731590,9.768046,3.287852,-5.819318,7.257217,-0.976303,-3.175410,7.745476,-8.334490,4.097904,-4.856334],[6.983015,-7.912569,0.508774,-6.239071,7.334231,0.138093,2.848571,0.033547,4.230470,-6.502140,5.257187,1.977962,9.125628,-7.474470],[6.046948,-8.177927,-3.312364,-2.594065,0.443675,-7.831448,-6.016097,1.443249,1.195079,3.581125,-0.837574,-8.539329,8.976534,-1.004202],[0.680216,6.780042,-9.232436,-9.945956,-7.470716,-7.855517,7.913930,-7.591705,-6.004215,0.911620,-5.507044,-0.716762,-0.897058,-9.452458],[2.771709,-7.351901,-0.564621,7.056742,3.195174,9.708542,-5.183797,4.560401,9.336198,0.987833,-6.489958,5.183829,-9.324939,2.648640],[-1.709696,-6.284930,-5.689001,-0.236388,-0.642651,7.724542,7.267927,4.551101,1.769529,-8.709810,-8.359334,-5.213602,-8.258410,-8.578785]],[[-7.217044,-1.622084,4.186419,-9.194485,6.777061,-6.536335,-7.655174,-3.267508,9.372782,8.516947,-0.774363,8.822998,8.013504,0.018413],[0.110676,-4.475488,0.696430,-9.840841,5.402660,3.080492,7.430780,-9.088332,0.885138,-4.366900,-8.972267,0.467776,1.903715,-5.663058],[3.306241,-6.383602,5.217253,-8.616612,7.384110,4.891886,5.807502,-0.440832,5.798462,-2.548147,4.171605,8.359784,-4.315625,-6.227589],[3.050113,-9.659166,1.904223,5.588317,-8.682137,9.584154,-2.881549,-8.722254,9.278103,-0.695710,-4.948826,-1.616559,5.920050,9.845111],[-0.108491,5.058733,-5.945451,-8.558492,8.435087,-5.234433,6.390586,3.674308,1.348509,8.208733,-4.886682,5.036579,-3.541116,-4.053761],[8.286098,2.279974,-5.384805,4.367505,2.520461,-8.066070,8.057289,-6.179988,-5.540968,-6.914503,0.161630,5.012286,2.501909,-9.278378],[-8.221810,-4.724011,5.650685,8.539791,-4.524834,-8.682775,2.249286,-1.595932,-1.664753,2.624234,5.324606,-3.945961,-1.593368,-8.346814],[-8.645565,5.485555,-6.730519,-4.280199,-9.389272,3.489282,-0.617828,-4.891713,-3.176773,-4.851616,1.702116,7.927757,2.232367,7.513706],[7.782655,3.784006,7.107636,-9.538225,-7.953548,2.891652,7.879753,-6.387048,-0.158281,3.969746,1.678280,8.920428,9.735846,1.492627]],[[-5.136951,-3.383791,6.743798,5.024540,3.010189,-2.783850,-8.829873,-8.097725,-5.540696,1.518682,2.853969,7.594579,-8.027332,1.306699],[4.734103,-8.424880,5.217572,-9.788212,5.728345,6.040128,6.976369,-6.991738,4.280175,6.884959,7.895099,2.734872,3.040608,-2.334282],[9.967309,-8.561626,-8.103298,0.422328,2.028691,-3.196769,0.567471,4.252946,2.836779,8.970968,-6.533617,-2.529357,7.934864,-5.133688],[-6.494032,4.716738,-3.521703,8.102305,-3.617708,3.933292,-4.657402,-4.758379,7.540706,-6.991129,-1.199577,-7.136211,3.584700,-3.701108],[-7.653510,2.809793,0.338357,-2.715679,-1.708626,6.111726,-4.495874,9.426027,-5.967379,7.028522,5.758943,2.197848,1.777472,9.083271],[-9.445176,5.380179,-7.156542,-2.896080,0.174860,-5.356368,-6.940982,5.972231,-2.002229,2.204368,-4.181054,-3.255956,-4.192595,6.279142],[1.706279,-8.812936,4.868576,-1.385074,8.065705,9.317796,-9.703485,-6.352696,6.654940,6.509303,-3.272962,7.693825,7.583035,0.765971],[6.606855,1.069740,7.599030,-3.415702,-1.307925,-9.414569,3.144054,-5.062908,4.325595,-0.040540,-1.613454,-3.676707,-8.604733,-7.065926],[-9.981272,-5.496369,-3.925746,-3.552121,0.694024,-2.399846,-1.593788,8.407736,5.257169,6.917859,9.360857,5.546803,2.213042,-9.681287]]], dtype = "float64")#candidate|11102|(16, 9, 14)|const|float64
uop_11103 = relay.log2(const_11102.astype('float64')) # shape=(16, 9, 14)
func_9029_call = mod.get_global_var('func_9029')
func_9033_call = mutated_mod.get_global_var('func_9033')
var_11110 = relay.var("var_11110", dtype = "float32", shape = (90,))#candidate|11110|(90,)|var|float32
var_11111 = relay.var("var_11111", dtype = "float64", shape = (30,))#candidate|11111|(30,)|var|float64
const_11112 = relay.const([False,True,True,False,True,False], dtype = "bool")#candidate|11112|(6,)|const|bool
call_11109 = relay.TupleGetItem(func_9029_call(relay.reshape(var_11110.astype('float32'), [6, 3, 5]), relay.reshape(var_11111.astype('float64'), [5, 6]), relay.reshape(const_11112.astype('bool'), [6,]), ), 0)
call_11113 = relay.TupleGetItem(func_9033_call(relay.reshape(var_11110.astype('float32'), [6, 3, 5]), relay.reshape(var_11111.astype('float64'), [5, 6]), relay.reshape(const_11112.astype('bool'), [6,]), ), 0)
output = relay.Tuple([uop_11103,call_11109,var_11110,var_11111,const_11112,])
output2 = relay.Tuple([uop_11103,call_11113,var_11110,var_11111,const_11112,])
func_11122 = relay.Function([var_11110,var_11111,], output)
mod['func_11122'] = func_11122
mod = relay.transform.InferType()(mod)
mutated_mod['func_11122'] = func_11122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11122_call = mutated_mod.get_global_var('func_11122')
var_11124 = relay.var("var_11124", dtype = "float32", shape = (90,))#candidate|11124|(90,)|var|float32
var_11125 = relay.var("var_11125", dtype = "float64", shape = (30,))#candidate|11125|(30,)|var|float64
call_11123 = func_11122_call(var_11124,var_11125,)
output = call_11123
func_11126 = relay.Function([var_11124,var_11125,], output)
mutated_mod['func_11126'] = func_11126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11312 = relay.var("var_11312", dtype = "float32", shape = (7, 16, 2))#candidate|11312|(7, 16, 2)|var|float32
uop_11313 = relay.asinh(var_11312.astype('float32')) # shape=(7, 16, 2)
var_11315 = relay.var("var_11315", dtype = "float32", shape = (7, 16, 2))#candidate|11315|(7, 16, 2)|var|float32
bop_11316 = relay.right_shift(uop_11313.astype('int32'), relay.reshape(var_11315.astype('int32'), relay.shape_of(uop_11313))) # shape=(7, 16, 2)
output = bop_11316
output2 = bop_11316
func_11348 = relay.Function([var_11312,var_11315,], output)
mod['func_11348'] = func_11348
mod = relay.transform.InferType()(mod)
var_11349 = relay.var("var_11349", dtype = "float32", shape = (7, 16, 2))#candidate|11349|(7, 16, 2)|var|float32
var_11350 = relay.var("var_11350", dtype = "float32", shape = (7, 16, 2))#candidate|11350|(7, 16, 2)|var|float32
output = func_11348(var_11349,var_11350,)
func_11351 = relay.Function([var_11349,var_11350,], output)
mutated_mod['func_11351'] = func_11351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11696 = relay.var("var_11696", dtype = "uint64", shape = (3, 12, 13))#candidate|11696|(3, 12, 13)|var|uint64
var_11697 = relay.var("var_11697", dtype = "uint64", shape = (3, 12, 13))#candidate|11697|(3, 12, 13)|var|uint64
bop_11698 = relay.bitwise_and(var_11696.astype('uint64'), relay.reshape(var_11697.astype('uint64'), relay.shape_of(var_11696))) # shape=(3, 12, 13)
func_8706_call = mod.get_global_var('func_8706')
func_8714_call = mutated_mod.get_global_var('func_8714')
const_11708 = relay.const([8.509965,-6.096680,-6.504046,-9.028337,8.686693,9.914545,-7.470324,-3.937155,-8.021546,-1.284901,-0.858241,9.231497,0.975578,-5.805056,1.261034,2.186623,2.634809,-9.648685,3.111942,3.842086,8.739029,-5.240983,-8.658479,-8.599672,-6.373903,1.842071,5.104744,6.165550,-7.742277,-8.302921,6.750171,-1.337254,6.396116,-0.569310,6.174192,5.669582,-3.631563,-4.685123,-4.553355,-8.926855,3.320455,1.888575,-4.121581,0.412253,-3.971083,-9.902113,2.025771,6.833199,-9.816886,3.643220,8.943491,-9.532704,-9.457379,4.305211,6.080226,-8.060181,4.656223,-5.929945,-3.276964,-5.047561,4.798220,-6.513830,-2.514541,7.349943,8.492376,-0.458532,9.092248,9.273584,-7.004298,7.326622,-2.069247,-6.204790,3.901654,2.912078,3.241815,0.551568,-6.818103,0.856790,5.070882,4.919520,-4.850474,5.246175,6.876934,5.531615,3.565479,9.221142,-1.927970,-0.827901,-3.716241,3.613577,0.816642,-6.338192,-4.024635,-3.811549,-4.997604,9.424187,-6.931143,6.212768,2.976234,9.066330,1.719527,-0.834369,-9.358271,1.532845,-0.843687,-3.848455,5.532366,4.655919,6.183697,7.904017,-7.313358,-0.110322,-0.194815,-0.495996,-3.241884,-0.497340,-7.551082,-7.128885,3.247457,-8.687675,-0.951895,-2.378017,2.034560,-2.452722,6.704516,5.696475,-5.634808,-5.745947,2.259703,-8.604717,-9.789130,1.938178,5.180996,-4.982455,1.684214,-8.955510,2.902528,-4.189630,-8.161073,9.099658,-7.067443,7.163156,-2.641567,9.203282,-8.847898,-3.331988,2.643061,-4.601480,8.243091,7.476500,2.921895,-3.166526,-4.056038,4.097464,3.075761,5.251723,8.607213,-1.517852,-0.933141,6.934830,3.621032,-3.496661,5.602607,0.709521,6.391556,-7.607745,-1.930432,9.367785,1.476743,-3.111638,-2.899464,-0.979874,-9.041983,4.309594,0.650890,-4.439323,-3.955886,2.289117,1.574549,-8.044920,5.080883,1.126264,-0.158639,4.554367,8.744022,-4.969915,7.440064,-0.512183,-0.393491,-9.637811,-1.945756,-6.931986,7.756805,5.050904,3.563615,0.178494,-5.868840,-7.923310,-2.536250,-8.296185,3.609410,4.969143,9.771836,1.573197,6.606720,5.726896,-0.992306,2.966651,7.760852,-5.043818,-0.768128,-2.404312,-0.297168,8.133406,-9.662703,-1.823955,6.050132,-0.734766,1.844135,-9.267187,2.783625,4.109966,9.081530,-2.644508,7.879234,6.167662,-6.564171,-1.925685,9.585559,7.327603,0.590496,5.389975,4.766396,5.644891,4.234995,-6.812767,-7.528318,-0.286508,-4.339251,-8.643241,4.390021,5.298960,5.964475,-2.847039,-1.585293,-6.001626,-9.279472,-9.952328,3.486713,-2.227097,6.613409,-5.624955,-5.185359,1.458082,8.040040,-8.153692,-4.348773,-0.156806,2.483941,-5.067279,4.946476,9.724630,-5.745152,2.023222,-0.580809,1.451363,-3.121955,0.425722,-5.176665,9.544687,-3.321175,4.338179,-8.262285,8.351290,-9.795271,5.856262,-8.886647,1.840858,-7.467635,6.132820,3.014143,-2.211772,-2.356164,-8.238433,-2.550735,-2.210157,-0.835137,6.250434,8.544268,-9.681268,-0.098344,3.570180,7.543989,-4.560300,-3.427529,-0.346654,-0.142108,2.387686,-2.906642,8.946956,-5.038204,5.325308,0.579235,6.789019,1.627050,5.801255,7.712187,7.166860,7.445423,-0.570535,1.097895,6.215583,9.528019,-5.386054,0.072346,-9.938125,0.277232,-5.119430,1.846422,6.497763,5.310970,-8.503749,-2.321212,9.157909,1.502702,1.463903,-1.024297,-1.910580,9.938486,9.989189,4.056904,-4.561378,-8.872133,1.074562,-8.937409,-0.081394,7.341951,-4.517749,-8.147624,-1.422438,5.897072,-6.565724,-1.411981,8.998632,4.643060,-4.106384,0.135215,6.335216,0.506868,6.574831,-7.949555,-1.297823,-5.441800,3.712181,-0.792730,9.680300,7.403619,-1.625859,-4.621614,4.744380,-3.489724,-8.225092,9.206784,9.019659,5.327183,-6.193669,5.286025,7.167874,-1.815184,-6.935060,-8.676665,-4.142816,-1.316941,-0.081198,1.598660,-0.888625,6.203486,6.421135,2.693538,-1.947536,6.685092,-9.747819,7.173831,-3.291897,-8.486578,-3.844922,-9.526469,-5.807041,5.832209,-9.747799,-3.184510,1.213457,2.726153,-3.532711,8.361356,0.292019,-7.626027,8.936909,-5.599812,2.894171,2.042952,5.608344,-6.610443,-8.120457,-9.466356,-0.612674,1.222218,1.459529,-3.864129,3.471994,-2.744999,-3.314679,-3.063962,-7.682716,-0.782146,3.952206,1.804632,1.896375,-0.540251,-4.057195,-7.729339,-0.606698,-3.491620,6.195537,6.822287,-4.129804,4.243280,-6.979591,5.742791,-9.668905,-9.789903,6.914946,3.032341,-9.807423,-2.181991,-6.859415,8.809453,-3.588207,-4.041843,8.699198,1.320261,0.465527,-6.226341,-7.384016,-3.437499,6.437793,5.373818,3.406654,-3.481447,-5.155384,-9.285807,4.833737,9.372301,5.352611,7.538256,-8.863221,-6.545079,-7.536294,9.005609,-6.749682,8.206321,8.689910,-5.486498,1.861911,-9.994762,3.654702,1.835617,-1.625281,7.628616,-5.842087,-4.138419,7.631602,7.885210,-1.515235,-7.730763,-3.456854,-3.479227,-9.513666,-4.477222,5.847172,-0.567887,0.455684,-4.249409,-1.493463,1.812447,-8.269652,5.014021,6.238762,1.733776,-2.620228,-2.780976,-2.951595,-9.967899,-3.294472,-3.135579,7.985231,-0.878140,-7.976194,-0.996908,-7.965788,-7.108884,-9.095089,-0.720739,-0.668438,1.616043,-6.674796,8.746146,-1.802239,7.459865,4.265543,8.777045,-3.715393,7.708647,-7.417010,-9.451735,-5.656468,0.962872,-7.562835,-7.153085,-6.223909,8.076919,2.221919,3.092511,-6.276548,-8.796897,-0.516766,-3.135640,-8.329071,-3.250688,-3.016833,5.261300,3.086311,8.539246,7.297465,-0.404033,8.709670,-1.456732,-3.851085,-5.907751,-7.710204,-5.949912,-5.797532,-7.336737,9.259745,6.504832,9.666675,-1.716757,-0.293052,-8.493925,5.411365,0.100248,6.447436,9.863058,4.433066,-2.183304,9.011555,-8.125395,-4.861921,-9.766177,3.465039,8.640447,-3.993002,8.098713,6.769671,-7.300175,-6.671103,1.350039,5.460843,-0.674386,-4.828417,4.712009,1.494401,-4.203737,-8.134784,3.475375,-2.787912,-8.402321,-7.225123,1.926490,6.961738,-7.700156,0.131677,0.139096,5.047802,7.525312,3.741701,7.474083,4.721382,-0.496762,-5.754624,4.435706,-8.479872,9.783460,-8.734055,-5.282841,5.673732,3.420929,-2.604397,6.208073,-4.990878,3.710812,7.233619,3.568235,-7.512826,-8.898170,1.731108,-8.228664,8.285551,6.626277,-1.877925,-2.822745,-9.908424,3.598206,-8.543571,-7.453780,9.974461,-5.158223,-4.152832,1.962028,3.673422,4.114498,-0.496421,-6.211117,-5.009152,8.436746,9.082094,-9.941886,8.445060,-3.811674,-6.955821,5.284334,0.399211,5.875215,7.597618,-3.078887,-2.021278,6.930529,2.316673,7.210026,0.631127,1.891413,-2.398357,1.253977,7.815610,3.363303,-9.573628,2.846175,2.743982,-8.930479,-2.752876,4.037409,-7.019659,1.421818,1.423408,0.825135,6.491556,7.815319,-3.525541,3.713908,1.259321,-2.424233,8.622955,7.847416,-6.960141,1.837939,-2.428084,8.029752,-6.177599,9.622230,4.643722,-5.939626,5.059808,-2.204981,-5.760310,9.581531,6.174511,-9.013100,5.748969,4.998778,5.735055,-9.607673,8.510221,-1.065357,-6.945362,5.209404,0.621632,-3.117575,-2.588533,-8.429324,4.876915,-8.289008,8.434473,8.946450,-9.703649,-7.504920,-4.636887,6.090121,5.360361,1.213841,1.298095,7.583348,-0.042297,9.438239,6.510071,-5.697975,4.705374,8.616396,9.966927,-4.222533,1.731650,8.867400,5.620650,2.070973,-6.560272,2.163463,-2.202833,-4.442661,-2.197453,0.872756,-0.539796,-8.266894,-7.792207,-6.130898,9.661665,1.070275,-8.803693,-8.617164,7.617326,-9.822494,-3.503164,-0.353859,-8.641366,0.516487,-5.291677,-0.883503,-6.667098,8.758181,-6.272677,-7.761813,-1.313414,-4.393153,-0.216298,-5.310078,1.839303,-2.634126,-5.400618,-3.197155,6.817605,-1.154576,-2.019000,-4.280442,8.808934,0.120903,-0.953530,2.205851,0.108322,5.382019,-7.251724,7.975819,-4.040468,5.946736,-8.812548,7.537441,-6.817550,-1.767274,9.911289,7.229981,-6.003845,-6.807553,6.900536,0.250090,-6.558782,-8.286347,-9.818422,-8.820952,2.468897,-2.800867,8.041278,-6.324379,6.471729,-9.006322,1.578642,2.188220,-4.061607,-5.967947,-2.706355,-7.454803,-6.937417,5.287932,-5.613313,5.126591,-3.504085,-0.102066,-6.463752,9.392742,6.192770,-0.042040,9.409590,-2.933231,4.871216,9.640568,-0.189799,-0.181517,2.309901,2.568465,1.349343,2.862048,-5.222698,8.893429,-1.365729,-2.726842,-4.508107,2.526313,7.515632,0.416660,-0.159022,-2.147530,-7.688948,-5.928812,-4.704202,-7.159857,-0.119754,5.801676,6.058461,2.474179,5.831811,3.541975,-0.609012,-6.535505,-7.705725,1.202564,-9.539168,3.448165,-3.616764,-5.082838,4.003723,4.619206,3.880481,3.011091,4.659930,-4.649530,-8.709432,7.933807,-2.501350,-0.671581,1.140425,-7.602170,9.790159,1.545820,7.349104,7.975397,-0.260929,-7.944038,7.708019,-1.631436,2.045478,-7.929078,-6.234753,-0.973975,0.416978,4.892382,-9.958906,-9.378071,9.762375,-1.316224,-1.204284,9.090148,-6.191292,-7.050921,8.157478,-6.283713,9.612859,4.470112,-1.516028,9.299551,-0.139103,5.795228,-8.298103,3.750374,9.202470,-0.131165,3.630452,-2.250238,5.450620,1.923514,8.589043,6.006776,-5.052806,-6.589169,1.079833,-3.326990,-3.919324,-1.657485,-8.837847,-1.124992,6.466665,1.199655,-8.881711,-5.485699,-3.175925,1.230239,-7.018309,-4.622733,7.264500,5.151135,-3.825199,-5.961791,5.285155,6.059829,-7.724927,8.979057,-3.627186,-1.490452,-4.865739,3.576967,8.486371,-6.979595,5.473023,-6.742912,9.251138,0.160386,-7.718276,-3.208193,9.944300,5.548590,6.796575,5.457600,8.638887,2.917599,6.106380,-2.312971,5.526750,-1.143276,8.641815,9.271414,-6.765171,6.252999,-2.721697,3.800873,1.393172,-5.202365,1.642072,5.008595,5.251675,7.630478,9.175354,0.135525,-5.146455,3.810199,2.370830,7.453372,-9.448299,-4.643641,-0.416162,-6.058394,-7.781804,4.781084,-7.086281,-6.063141,6.911671,-8.973678,2.300568,4.808401,0.189023,5.889545,7.342525,7.963284,5.504088,-0.434980,5.822043,-0.692130,9.127605,5.146036,-0.313072,-4.548344,2.439881,-5.838348,-6.070155,5.219513,-8.343358,-9.290092,1.943132,9.077791,6.054451,-8.112148,-2.499701,-6.872075,-1.117156,-6.899951,0.118559,-2.869039,6.034125,1.092192,-7.489283,-7.559276,-5.792104,-8.150728,-1.377813,-5.627539,-7.127950,-0.961634,9.330960,-5.894830,-7.238110,-5.146288,6.373863,4.994403,4.770736,1.603051,7.649414,3.016841,-0.113368,0.283064,7.471919,2.514617,-9.759471,0.862811,-6.610502,-1.941955,-7.419634,2.992374,2.463722,-2.760583,3.921328,3.000396,4.053017,-8.679712,-7.857608,-7.531520,-3.184235,9.592582,3.975591,-5.128698,2.198967,5.420689,-5.517704,4.460713,4.194972,-3.689915,5.115845,6.278776,-0.010392,9.152268,2.792828,0.660256,0.957892,-8.411276,7.662332,-4.788441,8.392199,-3.203171,-6.973788,-7.594973,5.889274,3.816064,-2.066408], dtype = "float32")#candidate|11708|(1056,)|const|float32
var_11709 = relay.var("var_11709", dtype = "float64", shape = (1, 108))#candidate|11709|(1, 108)|var|float64
const_11710 = relay.const([-5.879877,-3.381160,2.247054,-0.616344,-8.238609,-2.786927,-1.704219,-5.543380,6.689839,0.016307,-1.634099,8.664629,6.013088,-0.636068,4.696651,1.311401,9.867991,2.761670,-5.520042,-7.297701,-4.211558,-2.693434,1.360357,-1.176703,-4.290742,-0.822946,9.075828,9.018010,-6.705537,-4.629512], dtype = "float64")#candidate|11710|(30,)|const|float64
var_11711 = relay.var("var_11711", dtype = "uint16", shape = (72,))#candidate|11711|(72,)|var|uint16
const_11712 = relay.const([[-8.313828,8.662868,-8.759153,2.613616],[0.164348,-4.326470,-9.770389,7.453899]], dtype = "float32")#candidate|11712|(2, 4)|const|float32
var_11713 = relay.var("var_11713", dtype = "uint64", shape = (1872,))#candidate|11713|(1872,)|var|uint64
const_11714 = relay.const([[3.864981],[7.153953],[-5.042091],[-8.486248],[-3.677943],[-4.227945],[-3.057115],[1.206905],[2.595636],[-1.068652],[-1.142839],[6.844946],[7.149568],[6.587514],[7.599467],[8.912833],[-2.553427],[5.425125],[-8.143927],[-1.019541],[-9.691751],[-8.923843],[-1.135721],[6.505390],[0.697643],[0.699256],[-1.499192],[8.745522],[9.349855],[3.144561],[-4.108187],[-5.256892],[0.761597],[0.391342],[8.334289],[1.256297],[0.387817],[-1.450645],[9.453880],[8.035897],[-0.693393],[-6.084360],[9.167402],[-5.072778],[-4.841097],[-4.792635],[4.690932],[0.579761],[-7.145359],[-9.694769],[-6.361691],[4.917374],[-2.606691],[-7.665568],[6.098096],[-8.234315],[-8.132543],[-0.067334],[8.265682],[-9.164890],[-3.253672],[-6.009999],[1.249168],[-8.619084],[-4.554789],[-8.533620],[-7.271901],[-7.376478],[8.391579],[7.702441],[6.793872],[-3.905898],[-6.473197],[6.253055],[-9.419579],[-6.649037],[-9.011452],[-8.651069],[-0.434966],[7.204563],[9.676660],[-1.349188],[8.807612],[-0.502084],[0.570302],[1.211237],[-2.179471],[-8.717322],[-3.436616],[-9.383485],[5.977711],[1.488364],[6.170040],[-9.370120],[8.521243],[-7.124736],[1.919525],[-0.739804],[-8.789355],[9.666446],[-3.891829],[-7.823458],[1.812496],[-0.673452],[-0.627048],[-0.419159],[5.728717],[-0.914205],[5.538543],[-4.810089],[-5.849091],[0.026890],[5.678448],[9.910319],[6.544467],[0.727594],[0.892639],[-1.063870],[-9.202536],[8.456955],[8.017430],[4.135945],[6.853157],[8.660567],[-7.292505],[9.662680],[-6.195992],[-4.492996],[0.419720],[5.845951],[-3.610626],[-3.871442],[-3.194829],[-1.239252],[6.592706],[-1.781083],[6.363276],[0.271171],[1.067569],[8.441505],[2.772979],[-1.620176],[-0.869701],[2.763918],[-3.097963],[-5.379304],[-8.812746],[4.722227],[8.075855],[5.842641],[7.427275],[3.727839],[8.287046],[2.923301],[0.965886],[-5.434901],[-4.925601],[-1.410244],[0.171456],[-4.015155],[7.585760],[5.683328],[1.393054],[-7.476834],[-5.500823],[-0.009798],[4.994414],[0.747186],[-3.516398],[0.132725],[9.492608],[-0.757104],[0.822170],[-5.086217],[1.445448],[-0.478204],[8.245338],[-0.418256],[-6.158728],[5.050272],[-4.472519],[-5.195209],[8.482690],[4.373273],[9.586468],[5.756019],[-7.783733],[-2.247960],[2.642469],[6.900757],[6.143033],[1.941294],[1.568764],[8.223862],[-6.908972],[-6.711535],[-0.190011],[9.918037],[-6.065378],[-9.014421],[5.381626],[2.238370],[1.727589],[2.149417],[-8.919216],[6.159037],[6.365990],[8.735193],[-7.276313],[-5.106904],[4.155049],[-7.802935],[-7.287913],[-2.806517],[-5.693550],[-3.959464],[-2.607498],[3.136027],[4.995502],[-5.452468],[0.336330],[3.908759],[-4.985782],[1.698073],[4.648951],[-9.227166],[3.954114],[5.674795],[-5.777375],[-9.751307],[-4.722361],[-9.026361],[-2.197311],[-4.595288],[8.776265],[-5.413356],[8.921827],[0.408726],[-1.706172],[-7.399339],[-6.732805],[-4.153087],[9.240307],[8.095521],[9.903035],[-4.772906],[-9.189646],[7.366043],[5.401715],[-2.172509],[-7.079410],[0.946509],[-9.843402],[-5.728610],[-4.404592],[4.436692],[3.579275],[-7.244797],[9.595327],[-1.706649],[8.650724],[-8.696903],[2.111677],[0.242025],[6.178415],[3.008255],[-1.777829],[6.283836],[3.142051],[9.671346],[3.413334],[1.108324],[-3.605940],[6.368626],[8.413850],[0.675056],[6.960709],[0.438799],[0.625818],[3.922066],[-6.361193],[-6.323103],[9.611238],[-9.374515],[4.766767],[-5.877534],[-6.804024],[5.383232],[1.554371],[-3.151466],[-4.303458],[-7.995740],[6.454270],[1.444627],[-4.430276],[9.679734],[7.059113],[0.708330],[-7.158420],[-3.274385],[8.321475],[-3.358795],[-5.599342],[-7.547277],[-5.073405],[-0.835197],[-5.071141],[-7.629609],[-0.811760],[-2.475026],[-9.952049],[-9.456380],[-8.170072],[6.367153],[1.400253],[-3.615127],[-0.191937],[-1.787776],[1.902769],[3.583934],[1.658268],[-5.332845],[-5.716782],[9.626317],[-3.572180],[0.975368],[7.100325],[9.766960],[2.007917],[-6.782847],[-3.592813],[6.375886],[0.337879],[3.595275],[-0.105760],[3.980094],[-1.465786],[-0.902808],[-4.585235],[-5.457232],[9.178344],[-2.740936],[2.220512],[-5.813843],[-5.035190],[3.846274],[-5.449299],[2.163657],[-9.304690],[-6.981268],[5.706356],[-0.161333],[7.639287],[-8.159699],[-4.822233],[6.463598],[-2.610711],[-4.088354],[6.243914],[-5.824735],[-2.258942],[-3.089603],[-4.096811],[-9.474583],[-2.227962],[-5.289249],[-3.537608],[3.927403],[7.244692],[-2.443030],[-8.070371],[3.704869],[2.943860],[-4.898674],[8.546671],[-9.161018],[-8.835735],[-7.948921],[-0.298400],[2.282695],[0.448607],[3.692662],[-7.597235],[7.234569]], dtype = "float32")#candidate|11714|(384, 1)|const|float32
call_11707 = relay.TupleGetItem(func_8706_call(relay.reshape(const_11708.astype('float32'), [8, 11, 12]), relay.reshape(var_11709.astype('float64'), [108,]), relay.reshape(const_11710.astype('float64'), [30,]), relay.reshape(var_11711.astype('uint16'), [72,]), relay.reshape(const_11712.astype('float32'), [8,]), relay.reshape(var_11713.astype('uint64'), [1872,]), relay.reshape(const_11714.astype('float32'), [96, 4]), ), 4)
call_11715 = relay.TupleGetItem(func_8714_call(relay.reshape(const_11708.astype('float32'), [8, 11, 12]), relay.reshape(var_11709.astype('float64'), [108,]), relay.reshape(const_11710.astype('float64'), [30,]), relay.reshape(var_11711.astype('uint16'), [72,]), relay.reshape(const_11712.astype('float32'), [8,]), relay.reshape(var_11713.astype('uint64'), [1872,]), relay.reshape(const_11714.astype('float32'), [96, 4]), ), 4)
output = relay.Tuple([bop_11698,call_11707,const_11708,var_11709,const_11710,var_11711,const_11712,var_11713,const_11714,])
output2 = relay.Tuple([bop_11698,call_11715,const_11708,var_11709,const_11710,var_11711,const_11712,var_11713,const_11714,])
func_11724 = relay.Function([var_11696,var_11697,var_11709,var_11711,var_11713,], output)
mod['func_11724'] = func_11724
mod = relay.transform.InferType()(mod)
mutated_mod['func_11724'] = func_11724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11724_call = mutated_mod.get_global_var('func_11724')
var_11726 = relay.var("var_11726", dtype = "uint64", shape = (3, 12, 13))#candidate|11726|(3, 12, 13)|var|uint64
var_11727 = relay.var("var_11727", dtype = "uint64", shape = (3, 12, 13))#candidate|11727|(3, 12, 13)|var|uint64
var_11728 = relay.var("var_11728", dtype = "float64", shape = (1, 108))#candidate|11728|(1, 108)|var|float64
var_11729 = relay.var("var_11729", dtype = "uint16", shape = (72,))#candidate|11729|(72,)|var|uint16
var_11730 = relay.var("var_11730", dtype = "uint64", shape = (1872,))#candidate|11730|(1872,)|var|uint64
call_11725 = func_11724_call(var_11726,var_11727,var_11728,var_11729,var_11730,)
output = call_11725
func_11731 = relay.Function([var_11726,var_11727,var_11728,var_11729,var_11730,], output)
mutated_mod['func_11731'] = func_11731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11903 = relay.var("var_11903", dtype = "float32", shape = (11, 15, 16))#candidate|11903|(11, 15, 16)|var|float32
uop_11904 = relay.erf(var_11903.astype('float32')) # shape=(11, 15, 16)
output = relay.Tuple([uop_11904,])
output2 = relay.Tuple([uop_11904,])
func_11923 = relay.Function([var_11903,], output)
mod['func_11923'] = func_11923
mod = relay.transform.InferType()(mod)
var_11924 = relay.var("var_11924", dtype = "float32", shape = (11, 15, 16))#candidate|11924|(11, 15, 16)|var|float32
output = func_11923(var_11924)
func_11925 = relay.Function([var_11924], output)
mutated_mod['func_11925'] = func_11925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12162 = relay.var("var_12162", dtype = "uint16", shape = (4, 12, 7))#candidate|12162|(4, 12, 7)|var|uint16
var_12163 = relay.var("var_12163", dtype = "uint16", shape = (4, 12, 7))#candidate|12163|(4, 12, 7)|var|uint16
bop_12164 = relay.left_shift(var_12162.astype('uint16'), relay.reshape(var_12163.astype('uint16'), relay.shape_of(var_12162))) # shape=(4, 12, 7)
bop_12169 = relay.subtract(var_12162.astype('int64'), relay.reshape(bop_12164.astype('int64'), relay.shape_of(var_12162))) # shape=(4, 12, 7)
output = bop_12169
output2 = bop_12169
func_12183 = relay.Function([var_12162,var_12163,], output)
mod['func_12183'] = func_12183
mod = relay.transform.InferType()(mod)
mutated_mod['func_12183'] = func_12183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12183_call = mutated_mod.get_global_var('func_12183')
var_12185 = relay.var("var_12185", dtype = "uint16", shape = (4, 12, 7))#candidate|12185|(4, 12, 7)|var|uint16
var_12186 = relay.var("var_12186", dtype = "uint16", shape = (4, 12, 7))#candidate|12186|(4, 12, 7)|var|uint16
call_12184 = func_12183_call(var_12185,var_12186,)
output = call_12184
func_12187 = relay.Function([var_12185,var_12186,], output)
mutated_mod['func_12187'] = func_12187
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12245 = relay.const(-10, dtype = "uint64")#candidate|12245|()|const|uint64
var_12246 = relay.var("var_12246", dtype = "uint64", shape = (12, 14, 8))#candidate|12246|(12, 14, 8)|var|uint64
bop_12247 = relay.bitwise_or(const_12245.astype('uint64'), var_12246.astype('uint64')) # shape=(12, 14, 8)
output = bop_12247
output2 = bop_12247
func_12258 = relay.Function([var_12246,], output)
mod['func_12258'] = func_12258
mod = relay.transform.InferType()(mod)
mutated_mod['func_12258'] = func_12258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12259 = relay.var("var_12259", dtype = "uint64", shape = (12, 14, 8))#candidate|12259|(12, 14, 8)|var|uint64
func_12258_call = mutated_mod.get_global_var('func_12258')
call_12260 = func_12258_call(var_12259)
output = call_12260
func_12261 = relay.Function([var_12259], output)
mutated_mod['func_12261'] = func_12261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12356 = relay.var("var_12356", dtype = "float32", shape = (15, 2, 3))#candidate|12356|(15, 2, 3)|var|float32
uop_12357 = relay.asinh(var_12356.astype('float32')) # shape=(15, 2, 3)
func_3373_call = mod.get_global_var('func_3373')
func_3377_call = mutated_mod.get_global_var('func_3377')
var_12368 = relay.var("var_12368", dtype = "float64", shape = (22,))#candidate|12368|(22,)|var|float64
var_12369 = relay.var("var_12369", dtype = "float64", shape = (264,))#candidate|12369|(264,)|var|float64
call_12367 = func_3373_call(relay.reshape(var_12368.astype('float64'), [2, 1, 11]), relay.reshape(var_12369.astype('float64'), [2, 12, 11]), )
call_12370 = func_3373_call(relay.reshape(var_12368.astype('float64'), [2, 1, 11]), relay.reshape(var_12369.astype('float64'), [2, 12, 11]), )
output = relay.Tuple([uop_12357,call_12367,var_12368,var_12369,])
output2 = relay.Tuple([uop_12357,call_12370,var_12368,var_12369,])
func_12380 = relay.Function([var_12356,var_12368,var_12369,], output)
mod['func_12380'] = func_12380
mod = relay.transform.InferType()(mod)
mutated_mod['func_12380'] = func_12380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12380_call = mutated_mod.get_global_var('func_12380')
var_12382 = relay.var("var_12382", dtype = "float32", shape = (15, 2, 3))#candidate|12382|(15, 2, 3)|var|float32
var_12383 = relay.var("var_12383", dtype = "float64", shape = (22,))#candidate|12383|(22,)|var|float64
var_12384 = relay.var("var_12384", dtype = "float64", shape = (264,))#candidate|12384|(264,)|var|float64
call_12381 = func_12380_call(var_12382,var_12383,var_12384,)
output = call_12381
func_12385 = relay.Function([var_12382,var_12383,var_12384,], output)
mutated_mod['func_12385'] = func_12385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12868 = relay.var("var_12868", dtype = "float64", shape = (9, 10, 2))#candidate|12868|(9, 10, 2)|var|float64
uop_12869 = relay.sinh(var_12868.astype('float64')) # shape=(9, 10, 2)
output = relay.Tuple([uop_12869,])
output2 = relay.Tuple([uop_12869,])
func_12876 = relay.Function([var_12868,], output)
mod['func_12876'] = func_12876
mod = relay.transform.InferType()(mod)
var_12877 = relay.var("var_12877", dtype = "float64", shape = (9, 10, 2))#candidate|12877|(9, 10, 2)|var|float64
output = func_12876(var_12877)
func_12878 = relay.Function([var_12877], output)
mutated_mod['func_12878'] = func_12878
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12991 = relay.const([[[9.277479,-9.017684,-0.818974,5.693635,1.339582,1.785278,-9.030879,3.441819,0.514031,-5.419843,0.748854,-3.300834,-2.634292,2.148176,9.070907,-6.418288]],[[-9.988600,3.113926,-3.276851,5.969073,8.530298,7.803749,-8.330118,-9.238411,-3.881906,-4.903449,-4.193386,2.536104,-5.770358,6.658957,3.942365,6.369779]],[[-7.036992,-8.677723,6.278447,7.841978,-3.300930,-6.256463,6.271382,-0.561964,7.970593,-2.593059,-6.712541,-5.820907,-1.210409,-6.421685,-1.295515,6.143059]],[[-0.057567,4.467011,4.965020,4.050843,1.476813,-9.802746,-1.629277,-8.137775,-3.726190,8.219730,-8.152286,5.396838,-8.455382,-6.116440,8.625151,3.548816]],[[-0.768090,3.043665,5.245597,1.779678,-0.270992,-4.808687,8.262750,-1.663407,8.272229,-9.574002,-0.996060,-5.329104,4.024143,9.068094,-2.111931,6.086905]],[[2.840213,9.693227,4.424045,4.142879,-2.461421,-0.685718,7.079788,4.533027,1.401733,-5.592173,-6.138863,-8.113869,-2.521926,-8.047749,-5.427312,7.694852]],[[2.310836,1.856547,2.428900,-1.635056,-0.658053,2.821233,-1.921811,-5.875284,-4.087632,1.325467,8.516271,5.747895,7.921385,-2.227157,0.760361,6.204946]],[[-2.199982,5.571723,0.046527,-2.114216,-7.553405,2.875121,-1.240541,-6.456367,9.211542,8.807855,5.609800,-0.250458,2.699994,1.533630,-3.381170,7.087132]],[[7.384777,-3.758142,-8.488174,-5.806381,9.560478,6.294783,1.171392,-0.155119,2.596255,3.842807,-4.680558,9.907541,-7.103301,-9.243819,9.140123,-0.586758]],[[-8.541396,-6.274154,7.585111,-6.242265,-0.709320,-9.822452,4.208640,-2.229119,0.549621,-4.970014,0.753227,7.279485,-5.244789,-9.831983,3.598609,-6.805952]]], dtype = "float64")#candidate|12991|(10, 1, 16)|const|float64
uop_12992 = relay.sin(const_12991.astype('float64')) # shape=(10, 1, 16)
output = relay.Tuple([uop_12992,])
output2 = relay.Tuple([uop_12992,])
func_12998 = relay.Function([], output)
mod['func_12998'] = func_12998
mod = relay.transform.InferType()(mod)
mutated_mod['func_12998'] = func_12998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12998_call = mutated_mod.get_global_var('func_12998')
call_12999 = func_12998_call()
output = call_12999
func_13000 = relay.Function([], output)
mutated_mod['func_13000'] = func_13000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12998_call = mod.get_global_var('func_12998')
func_13000_call = mutated_mod.get_global_var('func_13000')
call_13014 = relay.TupleGetItem(func_12998_call(), 0)
call_13015 = relay.TupleGetItem(func_13000_call(), 0)
func_10881_call = mod.get_global_var('func_10881')
func_10884_call = mutated_mod.get_global_var('func_10884')
var_13023 = relay.var("var_13023", dtype = "float32", shape = (440, 4))#candidate|13023|(440, 4)|var|float32
call_13022 = relay.TupleGetItem(func_10881_call(relay.reshape(var_13023.astype('float32'), [16, 11, 10])), 0)
call_13024 = relay.TupleGetItem(func_10884_call(relay.reshape(var_13023.astype('float32'), [16, 11, 10])), 0)
func_8527_call = mod.get_global_var('func_8527')
func_8534_call = mutated_mod.get_global_var('func_8534')
var_13036 = relay.var("var_13036", dtype = "int16", shape = (77, 4))#candidate|13036|(77, 4)|var|int16
const_13037 = relay.const(7, dtype = "int64")#candidate|13037|()|const|int64
const_13038 = relay.const([1.635654,3.882434,-1.806708,-9.191807,7.304522,-2.714728,-2.352418,3.684056,8.830364,-2.869131,-7.999279,1.152455,0.308321,5.436435,-8.509755,4.648244,4.515178,6.317086,-1.595059,1.915849,0.358552,1.913283,9.076319,-6.772201,-7.981609,8.871265,-4.496124,-3.240925,4.359826,3.534164,6.085085,0.784383,8.499000,-8.549922,-5.992376,9.846721,9.446842,0.439922,0.126810,-5.534582,-9.643670,-2.877270,-9.903213,-9.332111,-4.757457,2.610916,-8.656906,-6.236694,6.882274,-8.792981,-4.856039,8.343989,-6.960182,8.861534,-0.091623,-8.834147,0.563676,-1.737965,2.728793,-8.087550,-9.733896,4.001425,-6.832551,-9.247635,3.579078,-1.727732,-4.433681,1.435331,-3.873860,-8.675799,-3.543760,-2.393775,2.651358,-2.851442,2.193314,-5.034120,-7.969100,7.596520,-3.931566,9.539322,-6.818368,4.749305,2.579792,3.175547,1.911839,2.292650,-8.729739,-6.453981,-8.078958,4.476920,6.635843,8.588303,0.647197,-3.229683,-4.616279,6.684376,3.005437,7.971595,-2.204307,4.765074,-7.901073,9.605893,-5.243566,-4.265321,-0.389109,-4.469941,8.831785,-3.850864,-3.820941,-0.441691,-5.480002,7.681544,8.308873,-7.557451,-3.140560,2.011307,-9.053315,7.480852,-4.806719,4.413049,2.927678,-1.888737,9.033445,-2.540005,-9.026965,-0.816422,-3.080187,-6.468478,-6.800069,2.267230,-3.751478,2.478713,-8.350693,5.664906,-6.773010,4.832735,5.495602,8.159756,-4.860471,-6.289217,-9.421193,5.351274,8.094825,-9.576983,3.240486,-5.613651,2.598129,-6.445407,-0.044168,-3.993455,8.927426,3.188363,-5.114730,0.688948,-8.265492,8.699178,5.506912,3.215942,-8.024658,-5.026557,-1.078815,-3.382109,3.229959,3.455686,-0.229441,-7.921824,9.282834,-7.457379,-9.924970,6.705770,-8.577099,-9.923053,7.976037,-8.699061,5.707633,4.595039,2.986467,1.048489,1.804998,-0.287994,4.574636,7.553648,-4.775775,-0.360573,0.523600,0.892487,-3.142921,6.404964,-1.133665,2.471168,1.743234,0.865976,-6.485119,3.969071,5.601814,-0.745944,-2.443677,9.828189,5.059926,-5.142954,4.318865,-8.474758,0.724652,-8.624637,3.511933,6.156988,-7.585682,6.216228,-6.411229,-6.244689,2.020380,-5.228261,-9.070771,-7.538097,0.946896,4.013010,8.255549,-1.437573,0.138991,-2.899015,-6.785352,7.572830,-1.236459,-5.943596,8.612968,-1.657142,5.716813,3.090675,-8.702714,7.622417,-8.623306,9.880617,1.518106,-1.254288,-3.287215,8.099532,-3.987643,1.332343,-3.085812,3.507680,0.629374,-5.883505,-9.646438,-3.858708,6.133215,-0.196324,-9.740143,2.372486,5.815019,2.396026,-0.406669,0.333586,6.967930,1.291218,-1.079272,-5.411476,-4.485377,-2.711802,-8.079989,-6.973937,-4.121204,6.457792,-2.745050,-6.464585], dtype = "float64")#candidate|13038|(264,)|const|float64
var_13039 = relay.var("var_13039", dtype = "float32", shape = (260,))#candidate|13039|(260,)|var|float32
const_13040 = relay.const([2.512222,-7.285629,-1.353677,0.354942,8.591818,2.883077,3.674039,6.856754,2.944265,-4.284752,-1.764249,7.528717,-2.214245,7.075581,2.781457,9.305479,-6.756549,-4.867700,-7.342568,7.027770,0.764611,1.095973,-7.282250,9.139794,5.973822,8.525404,-3.653094,-2.361398,9.996284,-7.682090], dtype = "float64")#candidate|13040|(30,)|const|float64
call_13035 = relay.TupleGetItem(func_8527_call(relay.reshape(var_13036.astype('int16'), [7, 11, 4]), relay.reshape(const_13037.astype('int64'), []), relay.reshape(const_13038.astype('float64'), [264,]), relay.reshape(var_13039.astype('float32'), [260,]), relay.reshape(const_13040.astype('float64'), [30,]), ), 0)
call_13041 = relay.TupleGetItem(func_8534_call(relay.reshape(var_13036.astype('int16'), [7, 11, 4]), relay.reshape(const_13037.astype('int64'), []), relay.reshape(const_13038.astype('float64'), [264,]), relay.reshape(var_13039.astype('float32'), [260,]), relay.reshape(const_13040.astype('float64'), [30,]), ), 0)
output = relay.Tuple([call_13014,call_13022,var_13023,call_13035,var_13036,const_13037,const_13038,var_13039,const_13040,])
output2 = relay.Tuple([call_13015,call_13024,var_13023,call_13041,var_13036,const_13037,const_13038,var_13039,const_13040,])
func_13049 = relay.Function([var_13023,var_13036,var_13039,], output)
mod['func_13049'] = func_13049
mod = relay.transform.InferType()(mod)
mutated_mod['func_13049'] = func_13049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13049_call = mutated_mod.get_global_var('func_13049')
var_13051 = relay.var("var_13051", dtype = "float32", shape = (440, 4))#candidate|13051|(440, 4)|var|float32
var_13052 = relay.var("var_13052", dtype = "int16", shape = (77, 4))#candidate|13052|(77, 4)|var|int16
var_13053 = relay.var("var_13053", dtype = "float32", shape = (260,))#candidate|13053|(260,)|var|float32
call_13050 = func_13049_call(var_13051,var_13052,var_13053,)
output = call_13050
func_13054 = relay.Function([var_13051,var_13052,var_13053,], output)
mutated_mod['func_13054'] = func_13054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12998_call = mod.get_global_var('func_12998')
func_13000_call = mutated_mod.get_global_var('func_13000')
call_13064 = relay.TupleGetItem(func_12998_call(), 0)
call_13065 = relay.TupleGetItem(func_13000_call(), 0)
output = relay.Tuple([call_13064,])
output2 = relay.Tuple([call_13065,])
func_13069 = relay.Function([], output)
mod['func_13069'] = func_13069
mod = relay.transform.InferType()(mod)
output = func_13069()
func_13070 = relay.Function([], output)
mutated_mod['func_13070'] = func_13070
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13071 = relay.var("var_13071", dtype = "float32", shape = (5, 6, 16))#candidate|13071|(5, 6, 16)|var|float32
uop_13072 = relay.atan(var_13071.astype('float32')) # shape=(5, 6, 16)
uop_13078 = relay.erf(var_13071.astype('float32')) # shape=(5, 6, 16)
func_7150_call = mod.get_global_var('func_7150')
func_7153_call = mutated_mod.get_global_var('func_7153')
const_13085 = relay.const([-7,-7,-2,5,-10,4,-9,-5,-2,5,-9,-2,-2,7,-3,-7,9,9,8,5,-2,-9,4,7,10,3,-2,-6,5,-2,-4,-9,1,-8,-1,9,4,4,4,5,3,3,4,2,3,-6,-10,-1,2,-4,-4,6,-2,7,4,-10,-1,4,10,-3,-7,1,-3,-2,4,7,10,-6,-6,8,7,6,-1,-1,4,6,-4,-1,-1,-1,-9,-5,-4,1,3,7,-9,6,-1,1,-3,-7,3,-6,-10,-1,7,-8,-6,10,-2,9,-2,-9,4,-10,-4,5,-6,-4,-8,-5,-9,-8,4,4,7,-5,-10,1,4,-2,10,-10,8,3,6,-3,-1,-2,8,-8,1,1,-10,3,6,6,3,-2,-7,9,3,2,10,6,2,-3,1,-2,6,7,-3,8,9,8], dtype = "uint8")#candidate|13085|(156,)|const|uint8
call_13084 = func_7150_call(relay.reshape(const_13085.astype('uint8'), [4, 13, 3]))
call_13086 = func_7150_call(relay.reshape(const_13085.astype('uint8'), [4, 13, 3]))
output = relay.Tuple([uop_13072,uop_13078,call_13084,const_13085,])
output2 = relay.Tuple([uop_13072,uop_13078,call_13086,const_13085,])
func_13089 = relay.Function([var_13071,], output)
mod['func_13089'] = func_13089
mod = relay.transform.InferType()(mod)
var_13090 = relay.var("var_13090", dtype = "float32", shape = (5, 6, 16))#candidate|13090|(5, 6, 16)|var|float32
output = func_13089(var_13090)
func_13091 = relay.Function([var_13090], output)
mutated_mod['func_13091'] = func_13091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13069_call = mod.get_global_var('func_13069')
func_13070_call = mutated_mod.get_global_var('func_13070')
call_13108 = relay.TupleGetItem(func_13069_call(), 0)
call_13109 = relay.TupleGetItem(func_13070_call(), 0)
func_6415_call = mod.get_global_var('func_6415')
func_6419_call = mutated_mod.get_global_var('func_6419')
var_13127 = relay.var("var_13127", dtype = "float32", shape = (384,))#candidate|13127|(384,)|var|float32
var_13128 = relay.var("var_13128", dtype = "uint64", shape = ())#candidate|13128|()|var|uint64
call_13126 = relay.TupleGetItem(func_6415_call(relay.reshape(var_13127.astype('float32'), [16, 2, 12]), relay.reshape(var_13128.astype('uint64'), []), ), 3)
call_13129 = relay.TupleGetItem(func_6419_call(relay.reshape(var_13127.astype('float32'), [16, 2, 12]), relay.reshape(var_13128.astype('uint64'), []), ), 3)
bop_13157 = relay.floor_divide(call_13126.astype('float32'), var_13128.astype('float32')) # shape=(936, 2)
bop_13160 = relay.floor_divide(call_13129.astype('float32'), var_13128.astype('float32')) # shape=(936, 2)
func_10849_call = mod.get_global_var('func_10849')
func_10852_call = mutated_mod.get_global_var('func_10852')
var_13170 = relay.var("var_13170", dtype = "float64", shape = (320,))#candidate|13170|(320,)|var|float64
call_13169 = func_10849_call(relay.reshape(var_13170.astype('float64'), [16, 4, 5]))
call_13171 = func_10849_call(relay.reshape(var_13170.astype('float64'), [16, 4, 5]))
output = relay.Tuple([call_13108,var_13127,bop_13157,call_13169,var_13170,])
output2 = relay.Tuple([call_13109,var_13127,bop_13160,call_13171,var_13170,])
func_13181 = relay.Function([var_13127,var_13128,var_13170,], output)
mod['func_13181'] = func_13181
mod = relay.transform.InferType()(mod)
mutated_mod['func_13181'] = func_13181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13181_call = mutated_mod.get_global_var('func_13181')
var_13183 = relay.var("var_13183", dtype = "float32", shape = (384,))#candidate|13183|(384,)|var|float32
var_13184 = relay.var("var_13184", dtype = "uint64", shape = ())#candidate|13184|()|var|uint64
var_13185 = relay.var("var_13185", dtype = "float64", shape = (320,))#candidate|13185|(320,)|var|float64
call_13182 = func_13181_call(var_13183,var_13184,var_13185,)
output = call_13182
func_13186 = relay.Function([var_13183,var_13184,var_13185,], output)
mutated_mod['func_13186'] = func_13186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13069_call = mod.get_global_var('func_13069')
func_13070_call = mutated_mod.get_global_var('func_13070')
call_13238 = relay.TupleGetItem(func_13069_call(), 0)
call_13239 = relay.TupleGetItem(func_13070_call(), 0)
func_206_call = mod.get_global_var('func_206')
func_211_call = mutated_mod.get_global_var('func_211')
const_13245 = relay.const([9,-1,9,-2,3,-4,10,10,-8,-7,9,5,1,-9,1,-8,-7,9,-6,-8,1,-5,-5,6,-1,8,-3,10,-1,10,8,-2,-6,10,2,-2,-3,3,-3,-1,-10,-8,2,-6,6,6,-5,-10,7,-2,9,1,2,-10,-3,-1,8,7,-7,4,10,-7,6,7,-7,-4,2,8,9,8,9,-4,-9,8,3,-7,-9,9,2,-3,-4,5,2,9,1,3,9,8,8,3,-5,-8,5,-2,-3,5,-1,5,-4,-7,4,-5,-9,10,-9,1,-3,10,6,4,8,9,10,5,8,8,-3,-6,8,-10,-1,10,-1,2,4,-9,7,-6,-1,8,-4,-5,1,-7,-9,3,9,-4,6,10,-5,-4,8,-9,10,2,6,-1,1,6,-7,2,4,8,5,10,8,4,6,7,-3,-2,-6,-7,-10,-9,-2,3,-8,-4,1,-4,-1,-5,2,-7,-10,-5,3,-7,5,-10,-8,10,7,10,-1,-5,3,-3,3,-1,10,-1,-7,6,4,-8,-10,-10,-6,5,7,4,-1,4,-7,-6,10,-10,6,1,-3,-4,-1,9,7,7,-5,1,-7,7,1,-3,-3,-9,10,-10,-1,7,9,7,2,-9,6,1,6,-9,3,7,8,4,-6,-2,-9,8,5,-7,1,3,5,-1,6,-7,4,7,-1,-10,5,5,1,5,1,4,-7,9,3,-2,-2,7,4,7,-5,6,1,8,-7,9,-7,9,-9,4,10,2,7,-7,-3,8,-3,10,8,-5,2,-2,-6,1,-9,1,2,-1,-3,10,5,8,4,4,-7,-8,3,-8,-1,8,5,-9,-3,6,3,5,-5,7,-10,-3,10,-6,1,5,2,-10,-3,3,-3,5,4,5,-3,-9,1,-10,5,-5,-9,-6,4,-7,9,6,-9,-8,-10,-10,-3,-8,5,9,-5,4,-5,-6,-8,-7,-4,-9,-5,-6,7,-10,7,9,5,1,2,-5,-8,7,5,-1,8,-2,6,-8,5,7,5,5,-4,9,2,7,4,-5,2,7,-7,-5,-6,8,-10,-5,-1,-6,-7,-4,-8,10,-7,-10,-5,10,-6,5,-7,-5,-9,3,-1,8,-3,-10,5,2,6,-2,-9,-3,5,-6,2,-9,-4,-3,-9,-6,5,-3,5,-2,-9,2,-7,2,-4,4,2,6,-6,-2,10,-9,-3,5,10,-8,4,-7,-6,2,-7,-5,10,6,2,2,5,7,4,3,1,-2,-5,7,8,-1,-6,4,8,3,-8,-2,-6,9,4,5,7,-2,8,4,-7,-1,-1,-10,-4,1,-7,5,3,-3,-7,-2,-8,5,-2,-10,-3,-3,-7,-5,7,5,10,-7,-3,2,1,-2,-10,2,7,-2,-4,-7,9,4,-2,10,-8,-7,-7,10,-2,-6,-1,-6,-2,-1,5,-9,-1,-10,1,-5,7,9,10,2,2,-6,-6,-1,1,7,1,-10,-3,7,2,-3,5,-1,-9,-9,-10,-4,-9,5,7,6,1,2,8,-6,-1,-9,10,1,2,-10,7,9,1,6,7,7,9,10,7,10,-6,2,9,-5,5,5,3,8,7,1,-7,10,8,-5,-5,-2,-2,-6,10,-3,-1,7,-2,8,-8,-3,-9,-10,4,-1,8,1,8,10,1,2,-2,7,-3,-3,-4,-3,1,10,-9,-4,2,9,-3,9,4,7,10,10,-9,-2,9,-7,-1,6,8,8,-3,2,-8,1,2,-8,4,-8,10,7,7,2,3,-1,5,-10,8,8,3,-8,9,-1,-5,-5,9,8,10,-8,-7,-1,-8,-5,-5,10,2,4,7,2,4,-9,-3,-9,-9,3,5,10,-7,8,6,1,-10,-7,2,-9,1,7,6,-7,4,1,-6,-1,-4,8,-8,7,-3,5,6,-10,-3,-10,-5,-6,-9,-8,-5,-9,-9,10,5,5,4,5,-5,8,4,-9,-9,9,9,2,-6,7,-9,5,6,3,-2,-3,-3,-5,1,7,-8,-7,-4,2,-1,7,8,3,4,6,-4,2,-10,-4,2,2,-8,8,-9,1,-1,-9,2,3,-9,1,7,-3,-2,-9,-10,6,-1,9,-3,1,1,-3,3,-7,4,-8,-1,8,-9,8,2,-7,-6,-5,7,5,6,-8,-3,-3,-3,9,-3,-7,-6,2,-9,-2,-7,8,-1,-1,2,-5,-6,-3,9,-5,1,-5,-9,6,7,-6,3,10,6,10,-3,-4,-3,-2,-1,3,10,-10,4,-8,-3,7,8,-1,-1,4,-8,-4,7,1,4,-9,-1,-3,4,8,-6,5,-6,-10,-9,-10,-3,8,-2,-8,-3,1,8,1,-7,-9,-7,9,-1,8,-3,7,-5,-8,5,7,4,4,-4,-4,-5,6,-7,5,3,-10,-4,-4,3,9,-7,8,4,3,-6,-9,-10,-4,1,7,-3,-4,-5,7,10,7,-10,-1,6,2,-3,-6,-7,9,10,-6,2,-1,6,-8,3,8,-10,-10,4,-2,-5,9,-9,-2,4,-3,7,5,1,2,9,-7,-10,7,9,3,8,-5,-8,-5,4,1,1,5,-7,5,-8,5,9,3,3,-9,-6,7,1,8,-3,9,5,5,-2,10,-3,7,8,10,-6,2,3,-7,5,-2,-6,-2,4,5,-6,-5,9,-10,1,-8,-9,8,4,-8,3,-7,10,2,-7,-1,1,3,-7,-6,-3,7,7,-5,3,9,-3,6,6,-1,-4,-5,6,2,-2,-4,-5,6,6,-10,-5,4,-7,-5,-8,-5,7,-7,9,10,10,-4,-5,-6,4,-10,6,8,6,-4,8,-9,1,-1,7,-10,5,1,-6,1,-2,-10,-8,-2,2,1,5,-6,-5,-7,-8,9,-10,-3,7,8,-6,-8,9,-9,5,-10,9,9,2,-8,2,2,-10,-10,-9,-6,9,1,3,-6,9,1,1,-6,5,-1,-3,-8,-10,-10,9,5,-2,-5,-4,5,6,-5,-7,7,-7,10,-3,-3,-9,1,-10,5,1,-9,8,2,10,-10,-10,-1,-7,-9,9,3,-6,5,1,10,-7,-10,-2,10,10,9,7,9,10,6,9,-9,-6,-2,4,10,2,-8,-2,6,-8,-2,-6,-1,-8,-8,-4,1,-1,8,9,-9,-8,3,5,10,6,-8,-4,9,-4,8,-3,-2,3,2,-6,3,7,-3,-7,6,6,8,-5,-1,-5,8,7,-2,10,4,-4,9,3,6,7,-3,-5,5,7,8,-5,10,8,6,-8,3,7,5,-6,-10,-2,7,4,-9,8,-5,-8,4,-8,6,-1,10,-3,-8,8,5,10,9,-2,7,8,2,6,1,-8,-10,8,-9,-6,1,4,6,-7,-8,-3,-10,8,6,10,9,-6,1,10,-6,-4,10,2,1,-3,10,-5,-9,-4,8,6,-6,-8,-8,-4,5,-1,5,3,5,-7,3,7,7,-9,-7,-4,-9,9,-1,10,-10,-4,-4,-3,4,6,-1,9,4,3,-3,6,9,9,-8,-7,2,5,8,-7,-7,-10,-5,4,-9,3,-4,-3,-4,-5,3,-1,3,1,4,-8,10,-7,6,-6,-8,6,10,5,4,-6,-1,-4,-3,-10,4,7,-5,-10,-8,8,5,-8,-5,-9,-2,-10,2,-1,-8,3,8,-7,-6,6,1,-2,9,-1,2,5,-5,-10,8,3,2,-9,7,5,-1,9,-8,2,8,2,-3,5,4,4,-5,-2,-2,9,-7,3,9,3,1,-5,-9,1,7,-10,1,5,-3,-7,7,6,-2,3,-1,1,2,-10,-4,-10,9,2,-8,-8,-5,7,10,-6,-10,-6,-7,-2,-4,7,5,8,9,-4,8,-7,-4,3,-8,6,1,-1,-10,5,-7,-9,10,-6,7,8,-1,-6,-9,-9,-1,-7,9,-1,10,1,6,8,7,-7,-4,-2,9,-10,-9,7,5,4,-1,3,9,-9,-3,-3,10,9,-4,-1,-8,-3,-1,9,-6,10,-6,-9,6,-1,4,3,5,-2,-10,-4,-5,5,7,9,-7,-3,1,-1,9,-8,-6,-10,1,-2,4,-1,-10,2,2,-5,4,5,9,4,8,4,3,6,6,6,1,9,-6,3,6,-9,3,6,10,1,-4,-1,-8,2,5,4,-7,-1,7,3,1,6,5,-7,3,-4,-2,-3,-2,-4,3,4,4,3,9,-7,-7,4,6,-1,-9,4,-10,4,2,-10,10,4,-1,-7,2,-1,-8,3,8,3,-6,3,-5,-7,-8,1,5,4,-10,-6,-7,-1,6,9,5,3,10,-9,-4,-2,-5,10,6,-6,5,1,3,-6,-6,-2,8,6,3,3,-2,-10,7,7,-4,-2,-6,-2,4,7,3,-5,-7,9,4,7,-6,-5,7,-6,6,1,-10,-1,10,-8,-9,6,-4,4,-6,6,-8,-6,-10,7,2,-9,2,9,-10,-7,-10,5,-7,-1,-1,-6,7,-3,6,-4,9,-3,3,-3,10,2,-2,-3,-5,3,-1,-5,2,-5,10,-9,3,10,-5,-9,-4,5,7,4,-2,9,7,-4,-4,9,8,-2,1,7,6,3,6,-5,-7,6,-7,5,-1,-3,7,8,10,-6,-2,9,8,10,-3,6,6,-1,7,9,4,10,3,-9,-7,-6,-10,9,-8,-2,3,-2,8,-6,-9,2,4,-5,9,2,10,7,2,8,4,-2,7,-10,7,-1,-8,8,-6,-10,8,1,9,-10,3,-2,9,5,-10,-3,10,3,-9,-9,5,-10,-1,-5,-10,-1,4,-3,9,-8,-5,-8,-9,1,2,-2,1,-4,-6,3,3,-10,-9,-9,-3,9,-10,-10,-6,6,5,6,2,8,-6,-4,7,5,1,4,1,-1,-10,1,-4,-5,6,4,-1,6,3,8,7,6,7,1,3,2,-3,-1,-9,5,-8,-3,-1,-8,-2,6,2,-7,-4,-1,-8,-2,4,-7,10,10,3,8,-4,-2,-5,-4,-10,7,9,1,-9,-8,6,7,1,5,1,-10,2,-9,-10,-3,6,-4,-6,-2,-10,9,8,-2,-3,3,-2,7,6,-8,-1,-9,-1,-3,2,3,6,7,-7,-2,-8,4,-1,4,9,6,-5,10,-9,-4,-6,2,8,-7,8,5,8,8,10,-7,-3,10,9,3,-3,-9,-5,-3,10,-10,-3,6,6,-9,3,-7,10,-4,9,4,-8,1,6,8,5,-4,-5,-10,-4,9,-6,6,4,-2,9,5,3,-9,-9,4,-7,4,9,-4,6,2,8,9,-8,-4,-9,2,-4,-10,10,-9,-2,-10,1,-6,5,-9,6,6,-1,10,-1,1,-5,-8,-4,-1,-4,-7,-5], dtype = "int32")#candidate|13245|(2002,)|const|int32
const_13246 = relay.const(False, dtype = "bool")#candidate|13246|()|const|bool
call_13244 = relay.TupleGetItem(func_206_call(relay.reshape(const_13245.astype('int32'), [14, 11, 13]), relay.reshape(const_13245.astype('int32'), [14, 11, 13]), relay.reshape(const_13246.astype('bool'), []), ), 2)
call_13247 = relay.TupleGetItem(func_211_call(relay.reshape(const_13245.astype('int32'), [14, 11, 13]), relay.reshape(const_13245.astype('int32'), [14, 11, 13]), relay.reshape(const_13246.astype('bool'), []), ), 2)
func_11348_call = mod.get_global_var('func_11348')
func_11351_call = mutated_mod.get_global_var('func_11351')
const_13252 = relay.const([-2.746035,-0.710792,8.415575,2.477653,3.313214,-0.412680,-1.239999,-3.163388,6.872810,-0.006019,9.605854,9.512989,6.504236,4.317544,-0.680746,4.333316,-8.372613,7.078762,-0.628679,4.073462,-7.321234,3.372859,-5.879256,6.428574,-8.692625,0.187060,-7.227503,7.061241,2.740356,-8.678401,2.110424,2.610150,6.362147,6.064863,5.799521,-1.500966,-7.968268,-7.991786,5.224170,-0.961818,-1.327566,9.743818,7.403777,-1.770998,-0.737386,-8.074959,-9.806433,9.146153,-5.630463,8.874453,-0.798219,0.762182,9.384005,9.961189,4.893629,-3.588397,4.802365,-2.138549,-2.484274,-7.765239,9.081711,8.951687,-0.553167,9.336539,1.608187,-4.137837,-6.709964,2.396070,2.340731,-3.241791,-5.009241,-9.446887,6.821793,-2.871518,2.345951,-4.972183,6.061010,-8.112312,-5.889895,-6.491685,5.253896,5.258973,-0.812163,8.369781,9.902745,-4.621705,4.813536,-2.529077,5.458027,-1.860948,7.568277,9.783720,-7.561583,-3.995694,-6.427718,3.590995,3.232555,2.470814,7.570507,9.956640,9.761993,-0.586436,7.579974,0.113712,-1.587477,2.065256,-1.731952,-4.488910,2.089901,3.404674,-4.329330,6.320809,-1.752381,6.858238,9.620632,-7.665025,3.893746,8.688673,5.774981,8.046843,8.221633,2.831366,-1.969331,-3.646306,-8.605004,3.734241,-5.801133,-5.675169,1.120370,-1.522269,8.910023,2.765921,-0.261698,9.626791,2.394468,5.146890,3.067984,-4.322223,-5.003458,5.264644,6.215496,8.835449,8.201924,-4.669489,-7.646803,-6.463894,1.805027,-9.510555,-2.111063,-5.955194,-5.719345,-6.334299,-4.383334,7.452396,-3.765373,-1.581991,4.476845,9.198574,6.920631,-2.622493,5.875237,7.996867,-4.517507,-6.148698,8.635186,8.424231,-6.596780,-9.839496,-2.884805,9.763577,-0.806120,-8.122210,-5.321371,7.877225,8.016498,1.878560,-9.935918,-7.896126,-0.925036,9.325436,7.999173,7.980419,0.969989,-4.783863,-6.928935,-2.789422,1.462354,-5.859828,-0.307269,-9.290838,0.699321,-9.247153,-5.136909,5.549044,7.383065,9.395218,9.021370,-1.734790,-2.943366,-5.395809,4.940151,2.708421,-7.485655,-9.188117,4.385381,-9.235463,-5.472748,-3.453300,1.518861,2.316742,9.030053,6.721817,7.345123,9.316818,6.686760,-9.677066,-2.190791,2.594753,-1.641330,4.086990,-8.076933,-5.334206,1.721611,-2.765725], dtype = "float32")#candidate|13252|(224,)|const|float32
call_13251 = func_11348_call(relay.reshape(const_13252.astype('float32'), [7, 16, 2]), relay.reshape(const_13252.astype('float32'), [7, 16, 2]), )
call_13253 = func_11348_call(relay.reshape(const_13252.astype('float32'), [7, 16, 2]), relay.reshape(const_13252.astype('float32'), [7, 16, 2]), )
bop_13258 = relay.subtract(call_13251.astype('uint32'), const_13246.astype('uint32')) # shape=(7, 16, 2)
bop_13261 = relay.subtract(call_13253.astype('uint32'), const_13246.astype('uint32')) # shape=(7, 16, 2)
uop_13271 = relay.cosh(bop_13258.astype('float64')) # shape=(7, 16, 2)
uop_13273 = relay.cosh(bop_13261.astype('float64')) # shape=(7, 16, 2)
func_1072_call = mod.get_global_var('func_1072')
func_1075_call = mutated_mod.get_global_var('func_1075')
var_13280 = relay.var("var_13280", dtype = "int16", shape = (90,))#candidate|13280|(90,)|var|int16
call_13279 = relay.TupleGetItem(func_1072_call(relay.reshape(const_13246.astype('int16'), []), relay.reshape(var_13280.astype('int16'), [1, 6, 15]), ), 1)
call_13281 = relay.TupleGetItem(func_1075_call(relay.reshape(const_13246.astype('int16'), []), relay.reshape(var_13280.astype('int16'), [1, 6, 15]), ), 1)
output = relay.Tuple([call_13238,call_13244,const_13245,const_13252,uop_13271,call_13279,var_13280,])
output2 = relay.Tuple([call_13239,call_13247,const_13245,const_13252,uop_13273,call_13281,var_13280,])
func_13282 = relay.Function([var_13280,], output)
mod['func_13282'] = func_13282
mod = relay.transform.InferType()(mod)
mutated_mod['func_13282'] = func_13282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13283 = relay.var("var_13283", dtype = "int16", shape = (90,))#candidate|13283|(90,)|var|int16
func_13282_call = mutated_mod.get_global_var('func_13282')
call_13284 = func_13282_call(var_13283)
output = call_13284
func_13285 = relay.Function([var_13283], output)
mutated_mod['func_13285'] = func_13285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12998_call = mod.get_global_var('func_12998')
func_13000_call = mutated_mod.get_global_var('func_13000')
call_13318 = relay.TupleGetItem(func_12998_call(), 0)
call_13319 = relay.TupleGetItem(func_13000_call(), 0)
func_2727_call = mod.get_global_var('func_2727')
func_2732_call = mutated_mod.get_global_var('func_2732')
const_13321 = relay.const([-4.260477,9.929899,1.006031,-5.697372,-1.081547,0.640921,4.661971,-9.800314,-9.941842,-6.479692,-6.393158,-1.450882,-2.905944,5.424107,9.914372,-0.320675,1.038291,-4.462346,7.996294,-4.712526,-3.353420,-0.034798,4.547453,3.854764,-6.972704,1.251928,-4.119034,-9.169910,-8.463500,-1.347327,-8.211745,7.197191,-2.494652,-5.260982,-0.244147,-8.352620,-9.507992,-9.160254,8.888526,6.072055,6.644693,-0.727653,3.252785,-0.469169,2.901853,4.134083,7.574902,6.139361,9.918081,-8.822236,-8.152411,-9.018387,5.478507,-6.423614,-6.047681,-1.196390,8.110188,-7.051404,-7.603785,-2.514580,5.207964,7.529108,2.358723,7.219734,5.713038,-6.195373,-9.851563,-4.076551,-1.742094,-8.571713,1.252196,-3.175243,7.157942,9.362449,-7.054035,3.961951,8.295269,-2.015900,6.057746,0.569594,3.811128,6.140046,2.811643,5.807107,-3.276562,-3.983306,3.692556,-1.459428,1.532404,-4.589480,-0.017262,-3.392422,-7.657663,-5.539094,-0.729894,-8.106679,1.135437,1.174406,-7.620859,-7.226703,-1.659476,-6.540597,-4.795104,-2.520435,-8.995706,7.141811,8.489700,-7.011811,-5.354324,4.499014,3.150869,7.936420,6.166875,3.244306,1.831661,1.865033,-7.520866,3.282556,-4.213162,7.024743,-4.318009,1.554180,-6.148350,-5.313999,-4.015319,4.765941,0.228319,1.785428,8.741359,-1.668135,-6.195338,-6.217962,6.744287,8.051842,5.923698,-2.927154,9.780048,9.880518,-8.739813,5.984689,-2.709361,-0.226294,7.330946,-8.795435,-9.253275,2.712800,-9.407836,1.773790,-0.221485,-4.718550,4.156492,4.340672,-3.749173,-0.043063,-1.693713,-6.416677,-9.595060,8.113897,-5.922855,-9.220439,-2.327169,7.653470,9.235122,4.911645,-6.091022,-5.741383,-3.294149,-8.058374,-6.808212,9.886280,-0.698134,7.389427,-6.035641,-0.254572,2.174438,9.589197,7.927140,-7.472104,-5.192514,-9.948282,2.046921,-1.950261,-6.789913,6.771646,-4.721233,-4.792740,-8.296462,8.952889,-5.021507,2.465618,2.835996,4.760143,7.172286,8.010318,1.180180,-4.024417,-0.388840,9.288528,-0.002613,-1.879733,0.185112,6.294600,-3.183529,4.887479,0.914764,-3.633207,9.962051,7.230593,-8.246486,-4.157858,-2.908385,-2.878758,-4.512548,9.835798,-0.519722,4.047888,-0.130787,6.765970,6.059928,4.450279,7.977089,7.722028,-6.682729,-4.522586,-0.975505,-7.616778,3.713492,6.185730,-2.555007,-2.374221,-1.275876,9.062701,0.448188,-4.635063,5.363655,5.545593,0.220006,0.890226,8.346161,-3.447621,7.125506,-3.519826,-6.508731,-7.663819,-0.929626,8.013173,-9.805016,-3.908355,-1.508548,-4.700218,-4.330742,-5.834098,9.498923,3.365239,8.366171,-3.943805,2.165639,-0.413903,-8.854093,-1.675488], dtype = "float32")#candidate|13321|(260,)|const|float32
const_13322 = relay.const([[False,False,True,False,False,False]], dtype = "bool")#candidate|13322|(1, 6)|const|bool
const_13323 = relay.const([7.285031,-2.348661,-0.998898,-6.873751,-7.767160,-2.966450,7.924780,2.574606,6.968277,-8.753939,-4.664118,3.000362,-0.217489,2.355967,9.825988,8.784067,7.962982,-6.044442,8.813663,-4.603360,0.702998,-5.580682,-5.157284,3.829356,-3.232620,2.549004,-8.272443,-8.530038,6.937394,-5.310792], dtype = "float64")#candidate|13323|(30,)|const|float64
call_13320 = relay.TupleGetItem(func_2727_call(relay.reshape(const_13321.astype('float32'), [13, 4, 5]), relay.reshape(const_13322.astype('bool'), [3, 2]), relay.reshape(const_13323.astype('float64'), [30,]), ), 6)
call_13324 = relay.TupleGetItem(func_2732_call(relay.reshape(const_13321.astype('float32'), [13, 4, 5]), relay.reshape(const_13322.astype('bool'), [3, 2]), relay.reshape(const_13323.astype('float64'), [30,]), ), 6)
output = relay.Tuple([call_13318,call_13320,const_13321,const_13322,const_13323,])
output2 = relay.Tuple([call_13319,call_13324,const_13321,const_13322,const_13323,])
func_13341 = relay.Function([], output)
mod['func_13341'] = func_13341
mod = relay.transform.InferType()(mod)
output = func_13341()
func_13342 = relay.Function([], output)
mutated_mod['func_13342'] = func_13342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12998_call = mod.get_global_var('func_12998')
func_13000_call = mutated_mod.get_global_var('func_13000')
call_13373 = relay.TupleGetItem(func_12998_call(), 0)
call_13374 = relay.TupleGetItem(func_13000_call(), 0)
output = relay.Tuple([call_13373,])
output2 = relay.Tuple([call_13374,])
func_13390 = relay.Function([], output)
mod['func_13390'] = func_13390
mod = relay.transform.InferType()(mod)
mutated_mod['func_13390'] = func_13390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13390_call = mutated_mod.get_global_var('func_13390')
call_13391 = func_13390_call()
output = call_13391
func_13392 = relay.Function([], output)
mutated_mod['func_13392'] = func_13392
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13396 = relay.const(-9, dtype = "int32")#candidate|13396|()|const|int32
var_13397 = relay.var("var_13397", dtype = "int32", shape = (5, 3, 1))#candidate|13397|(5, 3, 1)|var|int32
bop_13398 = relay.subtract(const_13396.astype('int32'), var_13397.astype('int32')) # shape=(5, 3, 1)
uop_13405 = relay.atanh(bop_13398.astype('float64')) # shape=(5, 3, 1)
func_11348_call = mod.get_global_var('func_11348')
func_11351_call = mutated_mod.get_global_var('func_11351')
const_13408 = relay.const([-3.965541,-1.355680,-9.143875,9.242860,-9.372623,2.115383,-8.377568,6.036124,-9.773307,-6.400251,5.389430,-5.068034,-2.368837,-1.779041,3.916997,-0.078330,-7.815767,-6.591578,-9.622795,-1.364582,-9.852999,-6.762091,-9.647337,-4.305092,3.519068,-5.518319,0.626910,-7.041682,9.605241,5.643744,-8.474972,-6.706763,-2.218670,4.351783,-9.616370,-4.786470,-1.240599,9.036834,-1.103959,9.137915,-1.146851,-6.827211,-4.006382,7.730886,2.212671,-1.679193,-9.106526,-5.113899,6.601574,3.463182,-2.276258,4.181148,2.256839,5.947798,-0.073575,5.281539,-7.162322,-4.280603,-2.301907,-6.228443,8.516604,-7.376853,5.752821,-2.658506,-4.967431,-8.945602,1.945698,6.563283,-5.543792,-6.615823,-0.127267,9.311006,6.766198,5.865391,7.176756,8.970617,7.812952,-0.721544,1.162151,7.932637,7.785223,-3.507363,9.215511,2.698692,-3.116451,6.618649,3.974838,9.642640,-9.879728,2.776635,-7.195221,-2.929558,-3.621582,-8.478985,-3.535092,8.208145,2.542183,-7.862275,-5.297436,-1.078440,-9.233590,6.538046,-8.647162,-4.753449,6.165645,-3.667894,1.316568,4.776740,0.993387,7.572898,-0.411036,7.307319,-0.813130,-4.156411,9.483708,4.637290,-9.528698,-3.186882,1.540523,-5.925734,-4.133250,-0.895137,5.826919,1.418920,1.503516,-6.214163,8.587834,5.386530,-4.213664,-9.762613,-8.928973,3.801087,-5.514539,8.932009,-9.607860,3.929310,-0.687221,-6.153442,4.338114,-0.035112,-4.764748,-1.906952,6.516158,1.855384,-9.937589,9.592389,0.382685,4.961538,-7.881393,7.218267,-0.679858,0.790438,-1.581935,1.324296,4.316604,-0.400784,-5.891333,-6.579182,-9.504310,7.407360,7.080133,4.833625,8.983260,4.287733,7.075930,6.171197,1.963742,-2.307245,-8.272135,2.824591,-8.824512,-6.035297,5.827248,-3.743587,-6.300711,-5.120549,-5.288968,8.361989,-1.270742,-2.917047,5.527249,-3.155493,-1.793424,8.885841,-8.199457,8.419731,-1.671639,4.802116,-3.568747,-5.082942,-7.144323,-7.596389,-0.944183,-2.103456,-5.928816,8.544227,-9.161686,-0.195290,-0.444060,-7.003859,3.781314,7.108360,4.312044,5.125319,-2.558475,-9.976454,-6.420229,-8.795092,-5.919189,4.634363,6.988773,9.199234,-9.382251,-7.910108,2.975125,1.696218,-2.991845,-5.793950,-8.074780,0.954787,5.312760,2.400555,2.265866,4.930675], dtype = "float32")#candidate|13408|(224,)|const|float32
call_13407 = func_11348_call(relay.reshape(const_13408.astype('float32'), [7, 16, 2]), relay.reshape(const_13408.astype('float32'), [7, 16, 2]), )
call_13409 = func_11348_call(relay.reshape(const_13408.astype('float32'), [7, 16, 2]), relay.reshape(const_13408.astype('float32'), [7, 16, 2]), )
output = relay.Tuple([uop_13405,call_13407,const_13408,])
output2 = relay.Tuple([uop_13405,call_13409,const_13408,])
func_13414 = relay.Function([var_13397,], output)
mod['func_13414'] = func_13414
mod = relay.transform.InferType()(mod)
mutated_mod['func_13414'] = func_13414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13415 = relay.var("var_13415", dtype = "int32", shape = (5, 3, 1))#candidate|13415|(5, 3, 1)|var|int32
func_13414_call = mutated_mod.get_global_var('func_13414')
call_13416 = func_13414_call(var_13415)
output = call_13416
func_13417 = relay.Function([var_13415], output)
mutated_mod['func_13417'] = func_13417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13390_call = mod.get_global_var('func_13390')
func_13392_call = mutated_mod.get_global_var('func_13392')
call_13462 = relay.TupleGetItem(func_13390_call(), 0)
call_13463 = relay.TupleGetItem(func_13392_call(), 0)
func_2553_call = mod.get_global_var('func_2553')
func_2559_call = mutated_mod.get_global_var('func_2559')
const_13468 = relay.const([-3.584424,-6.023125,-2.092625,4.480517,7.899398,5.093731,3.683023,4.913827,-1.975450,2.890804,9.280046,-2.593669,-5.429236,-8.968410,-7.028819,-2.166884,-6.285055,7.278661,-1.623566,-6.166855,-2.293791,8.060098,-6.379070,-7.222897,0.700603,-8.790610,5.491271,5.567493,-5.589084,8.822267,-2.321297,0.240868,-0.167417,4.031365,8.980215,-9.820676,-2.537458,-4.494789,4.018500,4.913875,-8.735493,9.291234,-0.714376,1.136779,-7.793416,-8.402637,-3.506327,7.281452,-6.576790,2.740798,1.767010,2.009050,4.879269,-1.713232,-7.588383,4.468328,2.975952,1.196682,-6.098542,-9.280808,7.299042,2.986932,-8.674307,8.825829,-4.143216,0.856335,-3.386469,3.378257,-6.663331,-1.584609,3.061757,8.513518,-9.116828,8.387764,5.989627,-5.590234,-8.735285,-8.749371,-8.392000,0.337251,8.731024,-3.555115,-2.641454,3.019951,-1.832547,8.559094,-6.299183,-6.775706,6.263941,8.771665,-2.678147,-6.948856,1.509250,1.229823,-1.551647,-0.669395,0.663341,2.026123,-7.976393,-4.502084,9.422963,5.108418,-5.752081,-7.199141,5.663746,-8.089631,8.275192,-4.842932], dtype = "float64")#candidate|13468|(108,)|const|float64
var_13469 = relay.var("var_13469", dtype = "bool", shape = ())#candidate|13469|()|var|bool
const_13470 = relay.const([[True,False],[True,False],[True,False]], dtype = "bool")#candidate|13470|(3, 2)|const|bool
const_13471 = relay.const([[-0.309192,3.210837,-5.984195],[-4.382499,-6.006277,8.601766],[6.993465,3.792007,6.600704],[-1.607572,1.378985,4.192317],[-3.757758,-3.202317,2.635266],[3.038464,8.467276,-4.846326],[-9.904924,7.093715,3.123859],[4.245634,-3.196189,-9.450352],[1.106669,8.354029,5.151949],[3.779674,2.738380,-1.971365],[-0.637907,-1.328066,8.592573],[0.557057,5.613930,-3.224044],[3.992241,7.262362,-4.679776],[8.994997,7.358164,-2.376933],[1.026417,-9.099348,-2.772711],[0.988074,-3.919964,-4.872453],[-7.809845,-4.536966,-7.935828],[2.030726,-1.727823,4.250873],[-1.644639,-8.882486,0.111089],[-4.731161,2.283022,9.096345],[8.739827,-2.337891,-1.227547],[9.530026,-1.335873,9.624712],[3.355895,-1.831996,5.074007],[-2.195065,5.205958,3.123108],[-3.466280,4.832756,-8.273188],[9.900631,-0.379686,-8.230252],[-9.528955,2.946271,0.686620],[2.201509,5.989054,-3.207538],[6.104035,-2.736384,-3.844487],[-6.831439,7.216800,-3.593949],[-8.476057,-3.775474,8.853915],[-6.810055,-5.997154,-0.121510],[-6.825277,-3.199795,8.235534],[-1.604128,-2.899533,0.045055],[6.544311,3.342952,-3.568863],[-6.142255,4.659195,0.045703],[0.801596,-3.026338,1.781283],[7.483229,-7.838292,-2.876278],[3.015857,-8.613720,6.356595],[-6.528240,2.457618,-3.320798],[7.919675,8.384379,1.739911],[9.319436,-4.634153,-1.336252],[-3.434475,3.551145,-4.503603],[-4.708835,-9.341363,7.287295],[1.523871,-6.106282,9.806834],[-0.220818,-0.064298,9.699361],[-2.928583,-8.413297,-4.757238],[-4.852294,6.688243,9.781823],[6.944645,7.062921,-6.415606],[-1.849694,-0.301295,7.448784],[5.684837,-7.389920,6.180292],[0.590649,-0.183672,-6.647679],[-4.472145,7.049786,-7.252707],[1.340474,-8.648075,0.103633],[5.889466,-1.418779,1.127499],[7.368138,2.902361,-8.612030],[8.283751,-5.830465,1.424442],[-2.797169,-5.204643,3.401794],[-3.121959,-4.316489,0.231179],[-1.057864,5.408417,-6.803958],[-7.550287,5.383703,9.754761],[-6.631037,1.943140,-9.176760],[6.669381,1.885903,-6.055510],[-0.959104,8.278815,-3.952535],[-5.850157,-0.755936,8.484043],[-2.092779,-6.298083,-4.970766],[2.927482,5.499205,1.286733],[-4.618666,-7.375539,-1.361833],[-1.791905,-9.171504,-1.794848],[2.176791,8.577034,-0.910384],[-1.327405,-1.398473,1.736604],[7.373334,7.622417,7.890427],[-5.363109,1.870137,3.750373],[-6.741474,-8.630011,-1.780433],[1.173022,3.772410,6.520019],[6.587773,8.640515,-0.009962],[-8.162751,2.277882,-3.806292],[9.308751,-7.360589,-0.978363],[-6.392716,-3.234216,8.493064],[6.047859,-4.257336,8.266824],[5.796430,1.097036,-2.490250],[8.280645,1.968249,-2.962448],[1.423635,8.004770,-4.017643],[-5.303017,-3.657325,8.769236],[6.793849,-1.264607,0.806393],[6.885915,-1.233459,4.398110],[-5.305119,-9.240103,-7.955152],[-1.678086,-5.928316,0.414727],[1.149138,5.033939,-9.636683],[8.302900,-4.719717,1.854292],[9.798205,-9.381265,-8.305869],[-8.660110,-5.770356,-7.008834],[6.380740,-7.753577,-2.026785],[-9.384939,7.923761,6.184828],[-3.745741,7.978265,-7.849080],[-7.480264,4.690360,-6.476268],[4.215283,4.058485,7.626234],[-9.991889,-6.650253,-3.151394],[-0.554718,-4.476693,-6.113730],[-3.981981,-3.853384,1.952517],[-0.700044,-2.018188,-8.723113],[3.561017,5.271932,6.102303],[7.288170,2.700692,4.947491],[-1.740289,-7.858962,4.142614],[4.712267,0.919340,-5.971480],[-5.084864,-8.101144,-1.436836],[1.696672,-2.155066,-6.380565],[1.441953,7.777639,7.229809],[-4.464474,7.818118,-6.342726],[-3.172793,-4.280458,4.967047],[-6.647461,7.889850,-6.361007],[-4.294657,-0.790258,-5.631718],[-0.101825,-9.002725,-2.847561],[-9.815161,5.955035,0.501765],[2.552593,2.566172,3.807701],[-0.148365,3.710717,1.879493],[8.029940,1.929038,-0.038981],[3.092717,-6.526753,1.479549],[2.730851,1.163075,9.351399],[3.960415,-6.042316,-4.446514],[0.800661,-9.453614,-6.152774],[8.592397,4.151108,0.071941],[-4.318486,-5.671642,-0.119033],[-7.513878,-2.078517,2.280705],[-0.152847,-8.463753,0.197101],[7.625494,7.804879,6.344168],[6.441338,5.334379,-7.515675],[-0.770115,8.649621,8.402179],[-2.498707,-3.160504,9.181225],[-1.735774,-0.073244,5.556174],[2.697841,-7.973588,-2.553410],[8.415976,-0.430242,-1.654281],[6.485354,-0.437389,8.684241],[8.523031,8.553680,-1.907837],[0.570845,-3.613637,0.327427],[4.057413,-9.791139,6.876596],[-2.992933,-8.571908,-4.567875],[5.159818,-9.562504,-6.160148],[1.607494,4.048571,7.888644],[6.834651,9.824550,-0.153781],[5.332813,0.298081,-7.199236],[-7.802096,0.248752,1.470614],[6.028574,-1.401551,-3.264208],[-9.155501,-0.017090,-4.204978],[9.013082,-6.057268,-6.461762],[-5.594964,-6.987334,1.625670],[-3.390883,3.368645,8.354889],[7.343935,0.738794,-6.607870],[6.006178,8.669064,-6.429724],[3.305571,-6.220519,-1.660458],[3.373844,-0.455607,3.515706],[-7.772069,-2.909788,4.755743],[-4.084561,-3.792526,-3.892993],[-6.239247,6.961077,3.298315],[8.349495,-6.147218,-3.919036],[-8.985575,7.902879,-3.655072],[4.177852,-3.683193,-4.739626],[4.233876,6.439567,0.976304],[-5.136491,9.148276,9.882448],[6.905088,3.827153,-2.604625],[6.570181,0.325873,-0.553296],[1.027551,-5.194874,4.719786],[4.348934,-9.691754,-8.159213],[1.410596,1.640198,8.024497],[6.733234,3.552571,-6.699687],[1.435123,0.950596,-7.722774],[-2.794379,2.632355,4.804473],[0.837934,1.794305,6.711525],[1.167186,-9.998606,7.511419],[-0.451970,-5.734538,-4.236637],[3.997322,-4.769392,-0.752571],[-4.165305,-4.630290,-2.862196],[-0.333126,8.931379,4.142197],[-4.530167,2.649668,9.889177],[-3.331239,4.593846,7.325452],[4.363536,2.931493,9.470871],[-3.069776,-6.988217,0.806154],[-1.977832,7.030327,0.578536],[5.722256,8.334263,-4.739348],[9.680447,-7.758963,-0.508456],[-3.544401,3.307520,4.874091],[-9.165072,-3.085360,6.538754],[2.525663,-4.940244,3.031106],[6.065228,2.951083,1.379863],[0.761102,-2.164958,1.878712],[8.991042,-5.557364,-9.647205],[-2.488516,8.972956,4.273318],[-6.394105,-3.661280,8.785210],[6.324167,-6.113846,-0.011270],[-2.940648,6.386606,6.043784],[5.261458,-5.787399,2.460266],[-2.444031,0.094716,3.610316],[-6.837915,5.534010,-5.381168],[-5.810316,8.816100,-8.229613],[-3.682865,6.484674,5.646633],[-7.754013,-0.670538,-1.263095],[8.635537,0.801803,-4.507642],[-6.489990,-6.049592,8.238018],[-5.513767,-1.697017,4.752171],[0.875460,-2.202578,0.039804],[-2.622557,-3.503756,-6.555596],[-4.422780,3.129562,5.245873],[-2.718640,-2.121850,5.052354],[5.894262,3.270352,-8.033234],[-5.844401,-1.297052,-3.694728],[-7.341757,-0.718510,9.398397],[9.836374,-1.960839,4.439826],[-9.971302,7.799840,9.271672],[7.934803,7.338908,-7.347216],[2.943053,6.237131,8.132455],[8.646290,-1.452387,6.939534],[-3.363021,-1.410799,9.608245],[-4.677699,9.574643,4.343061],[9.384393,-0.150826,8.016281],[-1.139395,5.499718,6.952912],[2.792304,5.912084,-6.366199],[-1.204230,9.208921,3.666783],[-8.710556,2.895045,-6.794746],[-3.028621,1.029682,-0.618137],[-9.352034,4.100372,-9.434506],[-8.170639,6.877341,-2.555375],[-9.656751,-1.373831,3.197082],[4.491678,-1.431161,7.762335],[8.627370,-2.453489,-8.755989],[1.044553,7.472159,3.148059],[9.177467,4.751871,8.756340],[-2.312538,-3.137970,4.159101],[3.433745,-5.809538,8.457065],[-4.118350,1.446509,2.480379],[8.981241,-7.002346,4.456791],[-7.521272,-0.197587,6.443639],[3.609089,9.146939,2.685265],[0.216822,1.211887,-3.436101],[-6.829403,0.982722,3.479321],[6.582882,-5.302561,0.853870],[7.732223,-8.791758,2.479391],[0.407317,-2.464454,5.087974],[-2.042770,-6.197911,-1.875110],[-5.850213,9.693783,-4.685129],[2.331492,3.171903,-0.566175],[2.065365,-3.120491,4.901247],[-3.463686,9.046857,0.693793],[-3.262107,6.422859,-6.195846],[7.940729,-7.698458,-3.094976],[3.634893,0.658233,5.479587],[4.287535,0.467710,6.234300],[6.181466,-0.164959,-4.510559],[6.417847,4.543663,1.098323],[-8.090335,-1.454984,0.835866],[-0.591669,-0.771007,0.752422],[0.967367,9.236041,-3.283230],[7.527765,-3.300586,-3.643668],[9.686985,5.083816,4.783918],[-3.647440,6.988756,-2.510317],[-9.908375,2.865780,-6.419605],[-9.614863,7.129735,1.415363],[-3.659152,6.565928,-4.481938],[4.433906,-9.582400,-5.418745],[0.845968,5.043076,1.295374],[5.897601,-1.226100,6.816750],[5.040278,-2.778401,5.833816],[7.548132,-0.523370,-1.832210],[-7.890773,9.929801,-4.547804],[-6.185851,-9.082135,-2.456472],[-3.337038,5.598110,-3.361021],[6.791928,0.174775,-8.552391],[4.693002,-8.851224,-3.309058],[-0.477862,6.768812,8.588704],[5.958626,8.808901,-3.505467],[-3.256477,-3.539467,6.785288],[-4.896067,-5.938754,0.454036],[-8.504421,-4.127675,-7.399363],[7.434815,-9.654004,-9.292425],[-3.984618,8.130643,-1.391727],[3.887603,-1.087325,-3.706796],[-7.094499,1.626559,-6.200373],[5.714588,3.082016,-7.339219],[-7.065088,4.310782,-4.820044],[3.456436,4.910118,-6.667611],[-1.958050,-1.445369,9.745574],[-7.802332,1.887479,5.893516],[-2.725223,-2.950183,-4.969321],[-4.058966,-3.903356,2.384144],[9.062897,8.849303,-9.021019],[-1.883217,5.804025,9.776329],[-2.434979,-6.948002,6.281387],[3.896502,-1.729842,-4.162383],[-0.153456,-7.526061,-4.690891],[6.899104,-1.756167,-3.007733],[2.731407,8.018556,-8.580435],[6.820650,-2.559980,-8.021697],[0.560496,-3.716442,-9.118323],[7.306719,2.698989,7.291819],[9.234528,6.030810,-8.334907],[-6.172404,5.839120,-4.645008],[2.145917,-2.961356,-4.246306],[0.395573,-3.504893,2.666554],[-0.145184,-3.396530,-4.962337],[2.477400,-6.283298,5.409954],[9.035439,-4.838448,2.714063],[-5.001156,2.520979,7.598053],[5.876742,5.037760,-5.642598],[-0.029978,6.105418,-6.294689],[8.294489,-5.630437,-4.827422],[-3.993421,9.030626,-6.513480],[9.949010,3.769769,3.203845],[-1.873358,-0.012361,2.895980],[2.378933,9.938017,-0.931408],[-1.411262,-7.294600,2.712985],[8.467430,-0.385983,0.103268],[3.114854,9.792452,7.503527],[7.039440,6.187721,8.234066],[-4.497345,2.946322,-2.120378],[9.165469,0.373655,5.559300],[1.473542,-8.539344,7.866653]], dtype = "float32")#candidate|13471|(315, 3)|const|float32
var_13472 = relay.var("var_13472", dtype = "float64", shape = (30,))#candidate|13472|(30,)|var|float64
call_13467 = relay.TupleGetItem(func_2553_call(relay.reshape(const_13468.astype('float64'), [4, 9, 3]), relay.reshape(var_13469.astype('bool'), []), relay.reshape(const_13470.astype('bool'), [1, 6]), relay.reshape(const_13471.astype('float32'), [945,]), relay.reshape(var_13472.astype('float64'), [30,]), ), 0)
call_13473 = relay.TupleGetItem(func_2559_call(relay.reshape(const_13468.astype('float64'), [4, 9, 3]), relay.reshape(var_13469.astype('bool'), []), relay.reshape(const_13470.astype('bool'), [1, 6]), relay.reshape(const_13471.astype('float32'), [945,]), relay.reshape(var_13472.astype('float64'), [30,]), ), 0)
output = relay.Tuple([call_13462,call_13467,const_13468,var_13469,const_13470,const_13471,var_13472,])
output2 = relay.Tuple([call_13463,call_13473,const_13468,var_13469,const_13470,const_13471,var_13472,])
func_13477 = relay.Function([var_13469,var_13472,], output)
mod['func_13477'] = func_13477
mod = relay.transform.InferType()(mod)
mutated_mod['func_13477'] = func_13477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13477_call = mutated_mod.get_global_var('func_13477')
var_13479 = relay.var("var_13479", dtype = "bool", shape = ())#candidate|13479|()|var|bool
var_13480 = relay.var("var_13480", dtype = "float64", shape = (30,))#candidate|13480|(30,)|var|float64
call_13478 = func_13477_call(var_13479,var_13480,)
output = call_13478
func_13481 = relay.Function([var_13479,var_13480,], output)
mutated_mod['func_13481'] = func_13481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13390_call = mod.get_global_var('func_13390')
func_13392_call = mutated_mod.get_global_var('func_13392')
call_13513 = relay.TupleGetItem(func_13390_call(), 0)
call_13514 = relay.TupleGetItem(func_13392_call(), 0)
func_1072_call = mod.get_global_var('func_1072')
func_1075_call = mutated_mod.get_global_var('func_1075')
const_13537 = relay.const(8, dtype = "int16")#candidate|13537|()|const|int16
const_13538 = relay.const([1,-7,9,-6,10,-1,8,-1,-5,7,-10,9,3,-5,10,-1,8,-5,6,3,3,8,5,-4,-4,6,6,-7,3,-3,-10,8,-2,6,6,8,3,-3,-5,-1,-7,-2,-10,5,-1,-8,3,-10,9,-5,-5,-6,-8,9,3,-2,-4,-5,-5,2,7,8,8,-4,-4,-3,3,1,8,7,-9,4,-5,-10,7,8,-3,-5,6,7,-8,3,10,5,2,-9,-2,6,2,-10], dtype = "int16")#candidate|13538|(90,)|const|int16
call_13536 = relay.TupleGetItem(func_1072_call(relay.reshape(const_13537.astype('int16'), []), relay.reshape(const_13538.astype('int16'), [1, 6, 15]), ), 3)
call_13539 = relay.TupleGetItem(func_1075_call(relay.reshape(const_13537.astype('int16'), []), relay.reshape(const_13538.astype('int16'), [1, 6, 15]), ), 3)
uop_13544 = relay.asin(call_13536.astype('float64')) # shape=(1, 1, 6)
uop_13546 = relay.asin(call_13539.astype('float64')) # shape=(1, 1, 6)
func_2727_call = mod.get_global_var('func_2727')
func_2732_call = mutated_mod.get_global_var('func_2732')
const_13548 = relay.const([7.802495,-4.870903,-8.398580,1.562513,2.570959,9.897318,1.061825,5.952383,-0.368151,-6.088697,-8.706768,-3.772647,-7.659285,-0.955989,5.558487,-1.990053,1.171336,9.881143,-3.449427,2.201663,-6.400324,-0.487954,1.095362,9.471790,5.448724,-4.494926,6.745921,7.663885,0.118840,4.459917,0.472717,3.933814,-3.165834,-9.517225,9.969749,-0.484715,2.445955,0.467875,4.374935,-7.073289,-5.557552,-6.819591,7.750883,4.171217,-2.132363,-4.978890,-4.256479,-1.465561,-7.332104,5.970433,-4.461883,-5.215304,-6.210551,-8.435338,-3.773330,9.019312,-1.163028,-4.477188,9.962762,-4.033544,-1.833923,7.577033,-8.637909,-4.957469,8.936786,-5.376610,8.148403,6.653271,-7.347661,9.155806,-5.160143,-4.790109,1.489372,2.686249,-7.550227,-7.900506,-6.482936,-3.090773,3.780517,3.721345,-4.414070,7.671938,-4.973570,-9.279494,-9.717477,5.733265,-7.866723,5.353695,-2.595448,-2.038954,-0.526066,-2.536307,-1.710066,7.153561,6.148083,-8.529691,-1.956388,4.105966,-6.928637,-8.418805,-8.809114,-7.660757,8.374830,-1.371808,-9.482566,-5.832744,5.718267,1.114741,8.973874,1.922629,7.761053,6.739708,3.230172,9.814706,-8.373347,0.524145,4.699744,5.652507,0.570356,6.395885,-0.936532,9.544915,-5.667742,7.253450,1.618940,-4.779188,3.886215,5.455601,-9.292037,-5.426776,-9.473369,6.416274,2.597067,-7.999724,-4.838773,-9.112057,9.538888,-3.795277,-1.512301,-1.820998,9.854184,5.597129,-6.804454,7.079470,8.409732,7.432519,1.874752,4.122879,3.983277,-7.878757,4.649589,-0.249042,-0.473757,-9.624581,-1.380175,-8.367611,2.818617,-6.940600,-9.950337,7.564859,-2.702130,6.817016,9.986519,-9.325393,-9.533082,5.075604,-7.034136,7.588728,-3.231921,5.086139,-5.575664,-9.662754,2.986767,6.906389,5.359483,3.380963,5.390158,4.557096,-8.902153,7.985780,-4.777834,-2.055059,-0.947415,1.629052,-7.658420,0.181334,0.063810,-3.592262,1.865718,-8.055043,-6.645424,-0.024720,3.103964,8.316685,4.734861,-5.692629,4.184380,-0.303585,-3.708773,-7.335685,4.771627,7.879803,-5.508574,7.219737,6.589386,-4.540133,-5.778129,3.089553,-9.649246,3.207667,3.231946,-5.978767,-9.585924,-7.306864,-9.030037,7.223882,5.820239,-1.696244,5.776297,6.126362,-5.458593,-4.615691,-8.253254,-6.501286,-1.223203,-9.100242,5.755978,-1.299203,-7.742201,0.079235,-2.831437,-2.159236,2.893975,3.284315,-9.877373,-7.479018,-4.095303,2.310975,-7.372849,1.399390,5.323419,5.136991,-2.515808,1.961247,-9.043975,-3.413984,8.789555,-4.797022,0.715503,7.329536,-9.422455,-7.863718,6.388820,8.351569,6.345865,-6.460068,4.699689,-3.442191,-4.014816,-3.175388], dtype = "float32")#candidate|13548|(260,)|const|float32
const_13549 = relay.const([-2.936125,8.288678,-4.424346,2.954822,-8.561072,7.226545,2.809679,-0.010570,9.925079,3.420046,-5.762634,8.900292,-9.958151,6.382895,-0.447708,-8.239145,3.295492,-8.959140,5.795390,8.572647,-1.786453,-1.913882,7.827041,-3.089135,-9.454326,-3.336839,6.794340,7.805393,2.870696,7.824008], dtype = "float64")#candidate|13549|(30,)|const|float64
call_13547 = relay.TupleGetItem(func_2727_call(relay.reshape(const_13548.astype('float32'), [13, 4, 5]), relay.reshape(uop_13544.astype('bool'), [3, 2]), relay.reshape(const_13549.astype('float64'), [30,]), ), 0)
call_13550 = relay.TupleGetItem(func_2732_call(relay.reshape(const_13548.astype('float32'), [13, 4, 5]), relay.reshape(uop_13544.astype('bool'), [3, 2]), relay.reshape(const_13549.astype('float64'), [30,]), ), 0)
var_13551 = relay.var("var_13551", dtype = "float64", shape = (9, 6, 6))#candidate|13551|(9, 6, 6)|var|float64
bop_13552 = relay.logical_and(uop_13544.astype('bool'), var_13551.astype('bool')) # shape=(9, 6, 6)
bop_13555 = relay.logical_and(uop_13546.astype('bool'), var_13551.astype('bool')) # shape=(9, 6, 6)
output = relay.Tuple([call_13513,const_13537,const_13538,call_13547,const_13548,const_13549,bop_13552,])
output2 = relay.Tuple([call_13514,const_13537,const_13538,call_13550,const_13548,const_13549,bop_13555,])
func_13560 = relay.Function([var_13551,], output)
mod['func_13560'] = func_13560
mod = relay.transform.InferType()(mod)
mutated_mod['func_13560'] = func_13560
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13561 = relay.var("var_13561", dtype = "float64", shape = (9, 6, 6))#candidate|13561|(9, 6, 6)|var|float64
func_13560_call = mutated_mod.get_global_var('func_13560')
call_13562 = func_13560_call(var_13561)
output = call_13562
func_13563 = relay.Function([var_13561], output)
mutated_mod['func_13563'] = func_13563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13390_call = mod.get_global_var('func_13390')
func_13392_call = mutated_mod.get_global_var('func_13392')
call_13585 = relay.TupleGetItem(func_13390_call(), 0)
call_13586 = relay.TupleGetItem(func_13392_call(), 0)
output = call_13585
output2 = call_13586
func_13589 = relay.Function([], output)
mod['func_13589'] = func_13589
mod = relay.transform.InferType()(mod)
output = func_13589()
func_13590 = relay.Function([], output)
mutated_mod['func_13590'] = func_13590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13341_call = mod.get_global_var('func_13341')
func_13342_call = mutated_mod.get_global_var('func_13342')
call_13626 = relay.TupleGetItem(func_13341_call(), 2)
call_13627 = relay.TupleGetItem(func_13342_call(), 2)
output = relay.Tuple([call_13626,])
output2 = relay.Tuple([call_13627,])
func_13643 = relay.Function([], output)
mod['func_13643'] = func_13643
mod = relay.transform.InferType()(mod)
output = func_13643()
func_13644 = relay.Function([], output)
mutated_mod['func_13644'] = func_13644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13693 = relay.var("var_13693", dtype = "uint16", shape = ())#candidate|13693|()|var|uint16
var_13694 = relay.var("var_13694", dtype = "uint16", shape = (16, 8, 9))#candidate|13694|(16, 8, 9)|var|uint16
bop_13695 = relay.bitwise_and(var_13693.astype('uint16'), var_13694.astype('uint16')) # shape=(16, 8, 9)
func_13069_call = mod.get_global_var('func_13069')
func_13070_call = mutated_mod.get_global_var('func_13070')
call_13733 = relay.TupleGetItem(func_13069_call(), 0)
call_13734 = relay.TupleGetItem(func_13070_call(), 0)
uop_13747 = relay.log2(bop_13695.astype('float64')) # shape=(16, 8, 9)
output = relay.Tuple([call_13733,uop_13747,])
output2 = relay.Tuple([call_13734,uop_13747,])
func_13756 = relay.Function([var_13693,var_13694,], output)
mod['func_13756'] = func_13756
mod = relay.transform.InferType()(mod)
var_13757 = relay.var("var_13757", dtype = "uint16", shape = ())#candidate|13757|()|var|uint16
var_13758 = relay.var("var_13758", dtype = "uint16", shape = (16, 8, 9))#candidate|13758|(16, 8, 9)|var|uint16
output = func_13756(var_13757,var_13758,)
func_13759 = relay.Function([var_13757,var_13758,], output)
mutated_mod['func_13759'] = func_13759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13390_call = mod.get_global_var('func_13390')
func_13392_call = mutated_mod.get_global_var('func_13392')
call_13761 = relay.TupleGetItem(func_13390_call(), 0)
call_13762 = relay.TupleGetItem(func_13392_call(), 0)
uop_13770 = relay.acosh(call_13761.astype('float32')) # shape=(10, 1, 16)
uop_13772 = relay.acosh(call_13762.astype('float32')) # shape=(10, 1, 16)
func_10910_call = mod.get_global_var('func_10910')
func_10914_call = mutated_mod.get_global_var('func_10914')
var_13788 = relay.var("var_13788", dtype = "float64", shape = (288,))#candidate|13788|(288,)|var|float64
var_13789 = relay.var("var_13789", dtype = "float32", shape = (945,))#candidate|13789|(945,)|var|float32
var_13790 = relay.var("var_13790", dtype = "float64", shape = (30,))#candidate|13790|(30,)|var|float64
call_13787 = relay.TupleGetItem(func_10910_call(relay.reshape(var_13788.astype('float64'), [16, 3, 6]), relay.reshape(var_13789.astype('float32'), [945,]), relay.reshape(var_13790.astype('float64'), [30, 1]), ), 2)
call_13791 = relay.TupleGetItem(func_10914_call(relay.reshape(var_13788.astype('float64'), [16, 3, 6]), relay.reshape(var_13789.astype('float32'), [945,]), relay.reshape(var_13790.astype('float64'), [30, 1]), ), 2)
output = relay.Tuple([uop_13770,call_13787,var_13788,var_13789,var_13790,])
output2 = relay.Tuple([uop_13772,call_13791,var_13788,var_13789,var_13790,])
func_13792 = relay.Function([var_13788,var_13789,var_13790,], output)
mod['func_13792'] = func_13792
mod = relay.transform.InferType()(mod)
mutated_mod['func_13792'] = func_13792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13792_call = mutated_mod.get_global_var('func_13792')
var_13794 = relay.var("var_13794", dtype = "float64", shape = (288,))#candidate|13794|(288,)|var|float64
var_13795 = relay.var("var_13795", dtype = "float32", shape = (945,))#candidate|13795|(945,)|var|float32
var_13796 = relay.var("var_13796", dtype = "float64", shape = (30,))#candidate|13796|(30,)|var|float64
call_13793 = func_13792_call(var_13794,var_13795,var_13796,)
output = call_13793
func_13797 = relay.Function([var_13794,var_13795,var_13796,], output)
mutated_mod['func_13797'] = func_13797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13589_call = mod.get_global_var('func_13589')
func_13590_call = mutated_mod.get_global_var('func_13590')
call_13804 = func_13589_call()
call_13805 = func_13589_call()
var_13831 = relay.var("var_13831", dtype = "float64", shape = (10, 8, 16))#candidate|13831|(10, 8, 16)|var|float64
bop_13832 = relay.bitwise_and(call_13804.astype('int16'), var_13831.astype('int16')) # shape=(10, 8, 16)
bop_13835 = relay.bitwise_and(call_13805.astype('int16'), var_13831.astype('int16')) # shape=(10, 8, 16)
func_6415_call = mod.get_global_var('func_6415')
func_6419_call = mutated_mod.get_global_var('func_6419')
const_13866 = relay.const([7.849517,-2.384462,8.164719,-8.647431,-9.785507,1.242169,0.135825,9.866547,-5.570659,7.028612,-9.524537,8.184212,5.961981,-3.505544,4.159376,6.605325,1.515206,8.441500,-6.800054,-6.864514,-9.734381,9.271021,2.144154,-5.854640,3.225884,5.189579,1.780420,1.200668,2.380768,7.600251,-3.191228,8.944806,6.287230,-8.489655,-9.590825,-8.532406,-0.338208,-3.647466,-5.408565,-8.375831,-4.981705,0.664081,-9.289953,-4.885959,-1.291601,-7.558639,-4.086374,-9.513595,-3.253751,7.533624,8.288465,-5.000424,7.251996,6.170752,4.126483,-7.848416,-2.915499,-9.053089,-3.614399,-6.031306,-2.752212,-5.715328,-0.175216,-8.165109,3.997199,6.623637,-9.586786,3.880875,7.323068,4.562767,-2.074975,-3.370342,-5.118909,0.975337,-5.820472,1.104955,-3.730475,0.743220,3.658373,-2.298172,-1.487458,3.161174,9.425126,-0.937854,-5.785780,6.703920,7.210762,2.269096,-1.071804,5.046588,-9.976834,-4.029370,-8.735640,6.362819,7.386633,-5.907925,0.027461,-8.720321,-3.003922,8.863549,6.570754,1.230691,7.761503,-2.794536,6.726430,-9.270964,-4.028250,0.518387,-9.115365,-2.681926,-9.225172,5.285986,8.421537,-7.204541,4.071168,-5.787080,-7.576625,0.754276,-6.227063,-5.783179,8.545943,0.403111,4.323328,-3.793637,8.843058,4.038969,-3.584276,6.435293,8.409808,6.503238,-3.780105,6.748567,-7.848105,-3.539762,-4.837265,-8.846409,4.804085,4.225783,-7.660164,-7.370952,8.545252,2.459806,5.854917,4.177800,-1.516968,9.772423,-4.910607,-7.762518,6.882186,1.388004,5.289549,-1.770551,1.309881,3.832448,6.546536,1.206516,7.939959,-6.043652,7.482120,3.029103,5.920555,-2.547971,2.148270,-5.276471,0.735518,-7.018445,9.901190,4.240907,4.581348,1.900909,2.247763,5.446228,3.419304,2.388260,8.292310,1.297086,5.337001,-3.629432,-0.158264,4.735267,-4.766704,-9.746476,-9.466862,-3.645005,-4.992969,8.542525,-0.581286,-2.579189,-9.214085,-4.833691,3.934194,-2.300994,-4.388392,0.044999,2.523418,-1.367681,7.821695,-0.794233,8.368087,7.772333,-9.724250,8.881702,0.619054,-4.902546,0.490534,3.974284,-1.374117,3.740768,-1.659809,8.929552,0.967349,6.536960,-9.688164,4.281537,-1.294239,1.690454,3.199091,0.856232,7.723643,-4.663430,-0.232219,1.389237,-7.656174,6.276947,8.920471,-9.639871,3.757532,9.545103,2.550999,5.914733,9.090086,-8.204576,4.271384,8.002431,-1.978834,1.663976,7.631537,7.110766,6.488736,-3.370284,-6.636380,7.359674,-1.405947,8.851651,4.169146,1.485507,-6.494678,4.761716,9.443797,-3.705696,0.430340,4.615508,-3.607284,-1.076483,1.413782,-2.374671,5.181518,2.505661,0.114830,-1.249543,7.869677,6.974970,7.837003,0.790758,-8.834447,-7.889699,5.727878,-6.618914,3.897245,2.292668,-5.375952,-6.515083,-1.007198,6.575025,-1.752573,-1.809676,-2.116798,1.200705,6.679020,-9.450240,-6.803921,1.289151,-0.032727,3.215474,-0.748602,2.103116,4.509312,-9.531800,3.867800,4.791768,6.500013,-2.008553,2.509868,-7.540018,-4.552077,-7.261240,9.699097,0.627389,-4.629143,1.250634,4.507044,9.919447,-1.414782,-8.604398,9.234886,-5.624538,-2.176811,-4.646175,-1.922362,-4.471530,-6.650595,-3.875225,-9.036684,6.390539,-7.181092,7.097820,7.636478,-3.521022,-6.175068,-0.307491,-7.144158,1.982100,0.066073,0.918679,-2.216610,-0.264293,-6.920478,-6.620956,-4.048038,9.576636,8.909186,2.945358,0.784108,-8.894285,-5.379980,-2.179481,8.763321,3.622969,2.209565,4.585887,-8.987650,-0.408756,-1.645907,6.635753,6.250819,8.664557,8.411852,8.778576,8.543530,9.642183,-3.433323,-9.688993,4.412102,-6.624989,-0.614872,-3.336843,-1.367137,-9.579754,5.138137,0.428280,-5.742622,2.376077,3.662776,5.886461,4.682812,6.395768,-5.189240,9.333943,3.764684,-9.280490,6.498755,9.006094,-4.456065,-7.418014,1.233668,-4.287678,5.796704,-1.582132,-9.729155,6.725679,-8.211445,-3.198273,-5.299192,-8.929550], dtype = "float32")#candidate|13866|(384,)|const|float32
const_13867 = relay.const(6, dtype = "uint64")#candidate|13867|()|const|uint64
call_13865 = relay.TupleGetItem(func_6415_call(relay.reshape(const_13866.astype('float32'), [16, 2, 12]), relay.reshape(const_13867.astype('uint64'), []), ), 2)
call_13868 = relay.TupleGetItem(func_6419_call(relay.reshape(const_13866.astype('float32'), [16, 2, 12]), relay.reshape(const_13867.astype('uint64'), []), ), 2)
output = relay.Tuple([bop_13832,call_13865,const_13866,const_13867,])
output2 = relay.Tuple([bop_13835,call_13868,const_13866,const_13867,])
func_13869 = relay.Function([var_13831,], output)
mod['func_13869'] = func_13869
mod = relay.transform.InferType()(mod)
mutated_mod['func_13869'] = func_13869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13870 = relay.var("var_13870", dtype = "float64", shape = (10, 8, 16))#candidate|13870|(10, 8, 16)|var|float64
func_13869_call = mutated_mod.get_global_var('func_13869')
call_13871 = func_13869_call(var_13870)
output = call_13871
func_13872 = relay.Function([var_13870], output)
mutated_mod['func_13872'] = func_13872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12998_call = mod.get_global_var('func_12998')
func_13000_call = mutated_mod.get_global_var('func_13000')
call_13917 = relay.TupleGetItem(func_12998_call(), 0)
call_13918 = relay.TupleGetItem(func_13000_call(), 0)
func_11122_call = mod.get_global_var('func_11122')
func_11126_call = mutated_mod.get_global_var('func_11126')
var_13920 = relay.var("var_13920", dtype = "float32", shape = (90,))#candidate|13920|(90,)|var|float32
const_13921 = relay.const([[-1.708670,7.558694,7.519357],[5.008179,8.960299,2.718461],[-9.569851,2.253286,-4.769691],[-6.457869,1.948757,7.348845],[2.943727,-1.486860,-7.392757],[-6.596644,-3.437845,8.588416],[-6.271817,-0.996390,-5.981642],[-1.288801,-2.392397,3.910706],[9.644981,6.401517,-9.212588],[-5.392656,8.733600,7.623507]], dtype = "float64")#candidate|13921|(10, 3)|const|float64
call_13919 = relay.TupleGetItem(func_11122_call(relay.reshape(var_13920.astype('float32'), [90,]), relay.reshape(const_13921.astype('float64'), [30,]), ), 0)
call_13922 = relay.TupleGetItem(func_11126_call(relay.reshape(var_13920.astype('float32'), [90,]), relay.reshape(const_13921.astype('float64'), [30,]), ), 0)
uop_13933 = relay.sinh(call_13919.astype('float64')) # shape=(16, 9, 14)
uop_13935 = relay.sinh(call_13922.astype('float64')) # shape=(16, 9, 14)
output = relay.Tuple([call_13917,var_13920,const_13921,uop_13933,])
output2 = relay.Tuple([call_13918,var_13920,const_13921,uop_13935,])
func_13942 = relay.Function([var_13920,], output)
mod['func_13942'] = func_13942
mod = relay.transform.InferType()(mod)
var_13943 = relay.var("var_13943", dtype = "float32", shape = (90,))#candidate|13943|(90,)|var|float32
output = func_13942(var_13943)
func_13944 = relay.Function([var_13943], output)
mutated_mod['func_13944'] = func_13944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13995 = relay.var("var_13995", dtype = "float64", shape = (12, 10, 14))#candidate|13995|(12, 10, 14)|var|float64
uop_13996 = relay.log10(var_13995.astype('float64')) # shape=(12, 10, 14)
uop_14007 = relay.cos(uop_13996.astype('float32')) # shape=(12, 10, 14)
output = uop_14007
output2 = uop_14007
func_14046 = relay.Function([var_13995,], output)
mod['func_14046'] = func_14046
mod = relay.transform.InferType()(mod)
var_14047 = relay.var("var_14047", dtype = "float64", shape = (12, 10, 14))#candidate|14047|(12, 10, 14)|var|float64
output = func_14046(var_14047)
func_14048 = relay.Function([var_14047], output)
mutated_mod['func_14048'] = func_14048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13643_call = mod.get_global_var('func_13643')
func_13644_call = mutated_mod.get_global_var('func_13644')
call_14141 = relay.TupleGetItem(func_13643_call(), 0)
call_14142 = relay.TupleGetItem(func_13644_call(), 0)
func_2408_call = mod.get_global_var('func_2408')
func_2410_call = mutated_mod.get_global_var('func_2410')
var_14144 = relay.var("var_14144", dtype = "float32", shape = (30,))#candidate|14144|(30,)|var|float32
call_14143 = func_2408_call(relay.reshape(var_14144.astype('float32'), [2, 1, 15]))
call_14145 = func_2408_call(relay.reshape(var_14144.astype('float32'), [2, 1, 15]))
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
const_14154 = relay.const([[2.051665,-8.868727,8.124167,-2.953722,-5.857362,-5.418699,1.492209,0.655932,4.831648,7.651153,1.836912,-8.923023,-7.660954,7.213009,0.507194,-0.979730,1.356095,6.490715,-0.009644,-1.977276,1.661079,-8.816618,-5.874261,-5.216906,-6.576968,9.528321,-3.437231,7.941319,1.520222,3.622157,-0.299764,2.131492,8.600945,2.201685,-2.691897,-9.543817,-4.068731,1.272626,-4.349557,-4.954517,0.377445,-5.110783,2.214331,-8.253301,-4.460942,4.740681,9.883978,-2.658642,-2.376464,2.669175,4.231455,-8.275208,-0.635074,-1.763715,-0.644181,-8.417928,-1.604858,6.702371,-0.589374,8.167932,-7.236056,0.567979,2.912489,-2.650384,7.659040,7.264960,8.818527,-8.764153,5.055832,-7.538162,8.184938,7.423061,9.514644,7.672128,2.097173,-3.224557,-5.849539,9.465397,9.739125,3.861740,4.740590,-8.616252,-7.058198,3.944457,3.482301,8.050303,-1.332713,4.371093,-3.919492,5.588638,2.083240,1.303206,5.189196,5.605381,-6.489520,-0.271658,6.139208,-1.280743,8.865298,4.602958,6.449451,-3.455603,-9.854436,9.249208,-0.713269,-1.415049,-2.009262,7.061530,-6.880342,-7.646743,0.133155,3.328419,5.695356,0.998040,3.346016,-2.072055,3.938468,-1.793923,-8.653325,-9.533057,-9.607521,-4.437935,-2.721584,-1.238089,-4.307346,3.092910,7.244070,4.940455,-8.691260,-4.448619,2.665261,-2.819549,6.316008,-4.567557,-1.000837,-4.453211,9.847885,6.888039,2.230852,7.410794,1.711093,6.472034,6.794185,7.299027,3.323519,6.645623,-9.316817,-9.237960,-2.869894,4.193027,8.020080,3.685892,-6.916763,4.955982,-3.064657,-2.918797,1.926418,2.992805,-5.287430,7.142542,-7.048001,-9.417984,-4.312848,-2.260511,-0.892526,-2.370284,7.415824,-6.554500,-7.664183,2.114862,-4.547923,-6.718715,-1.423323,-9.690657,7.570116,-7.354782,-8.518865,-5.816783,2.029611,1.998608,3.920375,-5.847209,8.390468,-8.763980,-4.358175,3.659247,1.589036,-4.352924,4.348108,-5.686100,-9.354917,-9.315919,-3.047577,-5.080578,1.791562,2.258500,2.304665,6.122822,-0.774500,-9.366888,-0.257989,-8.044628,-5.925872,3.163818,9.247462,-3.666934,-5.973005,8.439483,4.610440,1.222653,1.055025,1.181568,-3.240615,-6.290996,3.819674,5.287694,-8.807770,9.423347,-9.356106,-3.870343,0.216193,-4.897111,2.035399,-2.710087,5.699156,2.495118,-0.679512,6.365697,2.696081,7.962477,-5.842349,-1.618967,-8.953472,4.772027,-7.027650,5.050164,-7.032853,-1.480230,6.683194,6.277918,-8.016915,4.746312,7.910047,2.543152,-6.794072,5.939146,1.411249,6.950782,-2.589892,-4.454844,-1.357297,-0.144920,3.911536,-2.586884,2.597829,6.650846,-6.403821,-5.418859,6.357436,2.207016,-3.441223,1.311065,-6.316513,-4.000099,3.360202,-1.669786,-3.167166,5.475717,2.100647,-3.957014,4.601432,-5.480639,-9.186953,2.262091,-6.446415,-1.205819,-5.179702,-7.215759,-6.885081,2.946001,5.285702,-6.409416,-8.734475,-9.566028,2.178626,-1.889571,-5.155154,1.024254,6.721916,2.132210,3.980180,-1.040353,0.329590,-8.507297,6.457189,7.260732,3.600617,-8.803955,7.251469,9.594247,8.674203,0.560101,-1.077850,9.995067,-5.052974,5.201864,-0.284419,4.832985,-5.353425,8.745766,3.303502,2.320249,-5.611205,-8.436579,-5.445330,0.206654,9.908382,3.359077,0.833386,0.663545,8.891958,6.636952,-3.456011,9.228990,-5.132983,3.896910,-4.449848,1.032836,-8.635830,-3.203715,4.793907,5.196350,9.180229,2.042582,1.427672,-7.531625]], dtype = "float32")#candidate|14154|(1, 336)|const|float32
call_14153 = func_6245_call(relay.reshape(const_14154.astype('float32'), [14, 6, 4]))
call_14155 = func_6245_call(relay.reshape(const_14154.astype('float32'), [14, 6, 4]))
output = relay.Tuple([call_14141,call_14143,var_14144,call_14153,const_14154,])
output2 = relay.Tuple([call_14142,call_14145,var_14144,call_14155,const_14154,])
func_14156 = relay.Function([var_14144,], output)
mod['func_14156'] = func_14156
mod = relay.transform.InferType()(mod)
var_14157 = relay.var("var_14157", dtype = "float32", shape = (30,))#candidate|14157|(30,)|var|float32
output = func_14156(var_14157)
func_14158 = relay.Function([var_14157], output)
mutated_mod['func_14158'] = func_14158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13589_call = mod.get_global_var('func_13589')
func_13590_call = mutated_mod.get_global_var('func_13590')
call_14160 = func_13589_call()
call_14161 = func_13589_call()
func_3336_call = mod.get_global_var('func_3336')
func_3341_call = mutated_mod.get_global_var('func_3341')
var_14174 = relay.var("var_14174", dtype = "int32", shape = (2880,))#candidate|14174|(2880,)|var|int32
const_14175 = relay.const([0.176714,-6.586559,7.456995,7.920654,-9.291003,-4.323219,5.858116,9.616765,-2.242374,9.374307,8.299609,6.236674,9.230368,2.875839,6.405345,-4.652079,-9.651524,9.119222,6.771304,6.135589,7.054994,-7.506384,8.923303,-8.226648,5.436960,2.053915,6.334075,-8.028028,-9.364053,1.556674], dtype = "float64")#candidate|14175|(30,)|const|float64
call_14173 = relay.TupleGetItem(func_3336_call(relay.reshape(var_14174.astype('int32'), [16, 15, 12]), relay.reshape(var_14174.astype('int32'), [16, 15, 12]), relay.reshape(const_14175.astype('float64'), [30,]), ), 4)
call_14176 = relay.TupleGetItem(func_3341_call(relay.reshape(var_14174.astype('int32'), [16, 15, 12]), relay.reshape(var_14174.astype('int32'), [16, 15, 12]), relay.reshape(const_14175.astype('float64'), [30,]), ), 4)
uop_14178 = relay.log10(call_14173.astype('float32')) # shape=(3, 2, 5)
uop_14180 = relay.log10(call_14176.astype('float32')) # shape=(3, 2, 5)
func_13869_call = mod.get_global_var('func_13869')
func_13872_call = mutated_mod.get_global_var('func_13872')
var_14189 = relay.var("var_14189", dtype = "float64", shape = (1280,))#candidate|14189|(1280,)|var|float64
call_14188 = relay.TupleGetItem(func_13869_call(relay.reshape(var_14189.astype('float64'), [10, 8, 16])), 1)
call_14190 = relay.TupleGetItem(func_13872_call(relay.reshape(var_14189.astype('float64'), [10, 8, 16])), 1)
output = relay.Tuple([call_14160,var_14174,const_14175,uop_14178,call_14188,var_14189,])
output2 = relay.Tuple([call_14161,var_14174,const_14175,uop_14180,call_14190,var_14189,])
func_14195 = relay.Function([var_14174,var_14189,], output)
mod['func_14195'] = func_14195
mod = relay.transform.InferType()(mod)
mutated_mod['func_14195'] = func_14195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14195_call = mutated_mod.get_global_var('func_14195')
var_14197 = relay.var("var_14197", dtype = "int32", shape = (2880,))#candidate|14197|(2880,)|var|int32
var_14198 = relay.var("var_14198", dtype = "float64", shape = (1280,))#candidate|14198|(1280,)|var|float64
call_14196 = func_14195_call(var_14197,var_14198,)
output = call_14196
func_14199 = relay.Function([var_14197,var_14198,], output)
mutated_mod['func_14199'] = func_14199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13390_call = mod.get_global_var('func_13390')
func_13392_call = mutated_mod.get_global_var('func_13392')
call_14222 = relay.TupleGetItem(func_13390_call(), 0)
call_14223 = relay.TupleGetItem(func_13392_call(), 0)
func_4933_call = mod.get_global_var('func_4933')
func_4937_call = mutated_mod.get_global_var('func_4937')
var_14240 = relay.var("var_14240", dtype = "uint16", shape = (18, 4))#candidate|14240|(18, 4)|var|uint16
const_14241 = relay.const([8.428507,0.870220,-1.351756,-5.671796,3.818983,-3.744094,-7.609332,-5.120654,8.792863,6.500082,-1.166698,3.905911,-1.280400,-8.845480,-4.942508,-4.052243,-4.369648,0.292906,-5.422889,8.937086,5.140342,6.232509,2.495171,-1.267944,6.762294,-3.715537,1.012815,7.426143,-1.401485,-1.375534,-6.769384,-3.443275,-3.084412,-0.554040,2.643251,1.121558,4.018005,-1.342338,-6.052781,1.476883,8.574466,-4.614916,-9.661266,-6.487429,6.056291,9.814265,-9.652027,-1.496608,9.366359,7.554114,-2.538066,2.317917,6.852606,-7.940222,-3.774849,-8.298008,-9.335542,6.956200,-2.725467,9.128689,-6.808506,7.687968,-9.410104,2.340994,-8.775975,-6.995219,4.390660,-0.447845,0.409336,7.200725,5.052621,7.806133,-9.667289,-8.390064,6.461574,-2.623066,-8.349852,-3.260631,-5.393263,-9.652999,-0.728963,9.549987,8.192019,-7.389093,6.787456,-5.926914,3.690737,-8.493385,-0.303494,-7.366415,-6.427948,7.705860,0.490406,5.048478,-0.673382,-5.075000,-7.031495,-2.518630,-5.898338,-7.342293,-0.324026,-5.689527,1.284543,2.937533,3.534423,4.360533,6.483962,-1.305654,-2.205834,-4.098300,6.830817,8.418923,-1.228776,3.756643,-3.664867,-1.897473,2.390249,8.492587,5.940908,-0.978575,-8.803053,-1.906594,5.130981,-9.538256,-9.177777,-9.703349,-6.259891,9.917376,4.815710,2.532169,4.754840,1.456206,-4.981099,3.750440,0.620799,-6.912893,7.176277,2.271169,8.090411,-1.431960,-4.151809,5.576739,-4.243286,-8.333877,-8.127292,0.049406,3.119368,-1.617993,9.944986,-8.678606,8.246520,4.511712,8.340160,6.351454,-0.481313,7.673676,-1.975050,5.372362,2.354678,3.023758,0.372497,2.555279,9.185786,-6.533975,9.847454,2.980090,6.117635,9.023705,-1.573759,9.460122,-0.138092,7.904926,-5.237673,4.709866,-0.857542,6.708947,-6.681919,5.915506,-6.174756,-7.258372,-0.170256,-8.499989,-2.203815,-0.292339,5.083661,-4.909739,-0.609588,-2.523306,-3.668282,3.674896,-8.385578,0.649830,4.372143,-6.463005,-3.990127,-0.399495,3.178693,4.184632,-2.316277,-0.108272,7.934249,-5.184025,-2.220304,-9.009433,-5.742460,-3.685918,-9.802547,7.517354,-8.505359,8.601023,6.909732,0.546027,0.711296,-9.391260,-9.822400,1.037424,8.626057,-0.508088,-5.111795,9.438692,-8.266788,-8.708824,6.740084,-3.324460,3.894810,-7.018674,8.599307,6.848093,-7.448022,5.936538,-7.508630,1.682717,-6.117664,-3.262848,-4.199692,5.223969,8.691410,-6.414206,-3.778490,-4.914455,-0.231444,-2.274276,-4.699365,-7.052861,4.378845,1.005617,-7.335241,-6.282439,-3.566411,-4.931992,-1.118145,5.857776,4.679924,-0.128622,4.075760,8.432594,6.417032,2.716812,-8.293860,6.085104,7.743022,4.077711,3.939870,-7.082103,-8.197709,-5.537576,2.004402,-9.176450,9.916238,-8.546291,2.737686,1.168878,6.135255,-8.346884,-8.416470,6.610802,4.186298,-6.116005,-7.671530,-0.188806,8.472454,2.914680,2.171908,8.384101,-3.343877,6.776853,1.803817,0.415139,7.712583,-2.520314,3.181933,-2.088456,0.863752,3.884459,6.089172,-5.342767,-2.998100,2.643435,-5.607654,6.112858,-0.574881,-6.352292,8.994832,-4.637601,-5.980630,-5.500873,1.185063,-1.312812,1.416992,-9.775320,4.326221,5.038186,1.646452,7.159139,1.847926,-8.941440,2.007074,-5.740005,-2.993179,-3.518418,6.826291,-4.001194,3.520006,9.154827,-8.739014,3.316031,9.805837,-7.847154,-9.503979,-8.679805,-1.737051,2.669717,0.460487,-4.525324,9.232788,-3.158411,3.749564,8.423518,9.832024,-3.227312,-6.803052,-5.138208,-8.248207,-0.508565,-9.807866,3.478042,-4.297765,4.887027,-0.507896,5.738881,-1.811612,-4.739858,8.366776,-5.808221,3.414692,-1.396830,-9.275426,0.126348,9.111935,7.473229,-9.095063,-1.153865,-6.175024,-8.504494,1.681664,-4.885761,-0.022779,-2.271034,-4.145234,-1.300900,7.552657,3.946639,3.436968,-8.845783,7.368933,9.651818,-7.967325,-9.598825,0.808360,6.844862,-1.202393,-4.183469,2.408181,-9.392506,5.898291,7.164169,-9.455806,-6.838765,5.027284,-6.329197,0.667439,-0.530364,-4.979014,-8.826034,9.529109,-4.789512,6.462480,-6.803254,4.538385,-3.331211,-8.317104,0.021030,-9.313766,-4.701834,1.623095,-3.661901,-5.049646,-2.511206,5.079168,-6.637398,4.902229,1.926972,7.097280,7.520862,-9.788202,8.646658,7.279945,9.384657,0.391651,2.503792,4.993774,1.461113,-8.831972,-6.934999,-7.366392,-4.732744,4.114807,-8.749866,-2.326449,-6.971266,9.559895,1.151310,-4.177343,-0.448759,-7.379258,-8.852533,-6.543636,-6.164674,-3.094687,-1.142130,8.502701,-9.509345,-2.837888,-3.116277,-8.771159,-1.618814,-6.961348,-7.785060,-9.140570,-0.047113,-1.485593,-8.637083,-9.165082,3.563386,8.404277,5.031600,-4.042021,-5.763808,-5.344013,5.090593,0.008484,-9.270884,9.201948,-8.091476,-2.432655,3.725013,-5.803134,5.628245,-1.471296,2.886393,-3.181247,-9.451124,-4.663236,-0.637960,7.401306,0.076449,8.509429,3.885533,-3.334739,-1.986878,-7.489675,4.537815,-8.892036,-0.353202,7.219554,-6.479538,-2.313338,-8.698322,6.898681,-3.608198,9.377569,6.826625,9.969876,3.828499,7.072155,-0.372997,4.210214,-4.622358,-5.010881,-0.133044,-9.009121,-5.113037,-0.228169,9.819116,7.652624,-4.534857,5.229297,0.246195,-0.417089,-8.564601,-0.207380,-0.640093,-9.227682,2.324029,7.719874,-5.910892,2.525004,-1.409374,9.199594,4.827006,0.418685,4.514461,-5.668717,-0.880552,-3.003940,-8.830983,4.673647,-4.428647,1.232615,7.260541,-6.705745,-5.750684,-5.309098,3.507479,-1.352949,-3.697540,-9.038435,-0.143837,-9.193026,-9.816179,2.592033,0.943359,1.649788,-1.318241,-4.668052,1.612537,8.896255,-5.478863,-3.925190,7.807022,-8.287085,6.543262,-2.154058,1.767454,-0.880143,9.045272,-5.752750,-7.948092,-4.655139,-6.921543,-8.480085,4.163608,4.120458,1.412057,7.386536,-0.834765,-8.025278,7.715252,7.269977,7.063950,-2.570659,7.226173,-5.174701,-3.407763,-8.744994,9.695883,-1.939846,-4.500215,-7.184092,9.124693,8.211024,6.703254,8.690113,-9.938260,-4.163553,-9.249179,-3.122258,6.263502,-7.135307,5.697788,6.362104,7.073024,-9.861502,3.482122,-5.009848,-6.785569,1.894420,1.011862,-3.053069,9.947411,-7.871026,3.290483,-2.509709,7.727720,-5.205840,3.728523,7.241803,6.866229,1.083425,-6.690768,-2.829563,6.828706,-4.928665,-2.900610,-2.698875,1.784080,-7.097712,6.506448,-2.988404,7.646411,2.388872,-4.651440,5.655735,-4.397983,-9.702909,-1.560640,-5.487269,-2.209257,2.150401,0.339753,9.203151,-8.815335,-3.263303,-9.294436,-5.544965,7.140901,-7.305252,-6.188519,-4.589066,-3.560441,3.460773,6.890905,-5.676025,-3.953774,-6.733221,9.212621,4.618965,6.217327,1.743438,-4.726643,5.792213,-7.915466,8.286956,-2.848303,2.713661,-7.077274,4.315403,-2.070349,-3.740055,2.691850,8.976588,-1.229454,-6.475617,-4.161673,8.693148,1.243088,-8.050720,-9.297764,-4.120788,8.131288,-8.524862,-2.525637,7.021694,3.011702,-1.270778,6.229239,-7.158464,-6.801625,2.595457,-8.101117,8.051887,-5.679055,2.336804,5.869882,6.685281,-1.608067,-9.040935,1.619759,4.515317,6.491497,-9.714813,8.999530,-6.732527,8.401175,-1.013844,-2.912780,-2.833308,-2.520185,-5.012638,5.934175,-8.158976,9.399556,6.347891,6.803129,7.147637,-8.436612,6.954722,-0.300221,2.996759,8.777287,-9.315575,1.610705,-5.125628,-6.382942,6.987287,-2.506421,8.953936,-3.795323,0.017064,-4.424961,7.567245,-2.799036,-8.026913,-0.571471,-9.893144,-2.183558,-4.329717,6.301585,8.771545,0.256387,-1.216048,-3.619994,8.917540,-3.007742,-0.383781,9.875487,7.264182,-7.397310,2.823252,4.697947,7.383493,-4.398029,3.981047,-3.473935,8.056914,1.530564,-3.598979,-7.512912,-8.544155,-9.809408,5.012149,-4.898903,3.843992,-1.361479,-6.371043,-8.147444,1.963979,0.062490,1.797968,0.886614,2.557769,-1.491551,9.146309,4.389620,7.931442,-8.721865,8.989314,8.925720,-6.694893,6.673769,8.976003,-2.922436,-8.986654,9.228239,0.958887,9.062191,7.406180,-0.822248,-3.691918,-0.276268,2.039114,-5.770912,-4.862664,7.739542,2.258498,2.978365,8.711711,-4.077127,8.585620,1.632208,-4.983451,1.832089,-7.988370,-8.437841,5.190840,-5.486179,-2.784143,7.247019,-4.644222,3.839436,-5.976796,-7.966839,-4.147748,7.526007,-9.575472,-5.907655,1.521196,-6.872012,-3.057258,-4.001075,1.588053,-7.061461,8.742558,-2.290981,8.002947,-7.590360,-7.313182,9.064363,4.368657,-1.280330,8.164906,-5.643341,-2.954927,-3.030229,-2.613531,-3.033026,0.736123,0.296424,3.225390,-9.979011,2.330646,-0.897426,8.350139,-9.309661,-7.250146,-9.594418,3.888887,3.192361,5.982588,-2.175696,-6.236318,9.327210,-6.081222,5.139773,6.361559,-4.625755,-3.992543,-0.441257,-8.972912,-0.039979,-9.898363,-9.769235,5.150085,0.879159,1.081441,-0.976762,5.685045,1.659180,-8.099846,7.165910,-2.315160,-8.588032,-8.726200,-9.662918,8.017796,7.312382,6.614722,-5.012613,6.460325,9.571302,3.115687,1.599808,9.553258,-4.778981,3.029940,8.611309,3.469680,-8.106604,4.708059,-3.044669,7.975417,-0.224289,0.884201,1.005153,-0.597198,2.629297,4.573683,-2.946793,1.821014,-1.900329,-4.965365,-8.258667,-7.184596,0.300040,5.403148,-7.068165,-0.589799,3.303570,5.046398,-0.537740,4.963958,-6.199146,-0.089549,-6.075937,6.656255,-8.161552,-2.677802,-5.146805,9.009542,-8.455614,6.200964,9.505516,0.625191,-4.096574,-3.908593,7.657936,-7.278926,-6.914203,-6.149123,6.987306,2.165377,-0.511876,-9.676318,-7.129097,-1.427040,6.387200,-9.093382,3.012584,2.954108,-8.363972,4.129573,-4.159150,2.639895,-1.850765,4.735127,-9.959212,-7.405084,-3.808555,7.175927,-4.349367,-7.231964,9.612682,3.542116,-6.284135,-1.721799], dtype = "float32")#candidate|14241|(945,)|const|float32
var_14242 = relay.var("var_14242", dtype = "float64", shape = (30,))#candidate|14242|(30,)|var|float64
call_14239 = relay.TupleGetItem(func_4933_call(relay.reshape(var_14240.astype('uint16'), [4, 2, 9]), relay.reshape(const_14241.astype('float32'), [15, 63]), relay.reshape(var_14242.astype('float64'), [30,]), ), 6)
call_14243 = relay.TupleGetItem(func_4937_call(relay.reshape(var_14240.astype('uint16'), [4, 2, 9]), relay.reshape(const_14241.astype('float32'), [15, 63]), relay.reshape(var_14242.astype('float64'), [30,]), ), 6)
func_13181_call = mod.get_global_var('func_13181')
func_13186_call = mutated_mod.get_global_var('func_13186')
var_14252 = relay.var("var_14252", dtype = "float32", shape = (12, 32))#candidate|14252|(12, 32)|var|float32
var_14253 = relay.var("var_14253", dtype = "uint64", shape = ())#candidate|14253|()|var|uint64
const_14254 = relay.const([-9.689792,6.909841,0.246448,-2.789620,4.844485,5.480591,0.046901,4.826347,9.939228,8.350328,-9.636907,7.497177,9.556824,5.037619,-4.199004,-0.999664,6.992285,-5.079358,-5.450997,-9.009373,3.406820,3.508641,4.288854,9.030932,0.736131,3.602167,-7.220280,4.362332,-6.873244,-2.573255,6.904427,8.896774,-4.872223,6.608370,-2.578835,-3.182167,4.632992,-3.777964,1.260376,-8.256429,2.566430,-0.433720,-3.102211,2.280987,-8.053637,-2.669967,-2.795981,7.720800,9.451985,2.468932,-0.118679,-3.127190,9.344566,-4.052018,-3.802688,-3.078673,-1.258985,-5.593937,-0.872399,-2.355350,9.722504,8.624883,-5.313996,4.412553,5.335570,-8.591410,-5.120759,-9.587596,8.196057,-6.107827,8.495567,4.113143,5.285198,-0.860916,7.902502,4.654915,4.459012,-0.318612,0.242087,-5.787618,-0.421678,-8.272517,9.869305,8.264775,6.875964,-4.914327,-4.188967,3.948982,4.361472,9.781525,-0.335831,-0.186753,4.797445,2.741617,-8.069788,-5.986824,-9.886806,0.558170,0.571888,1.341842,0.022439,6.948837,3.689336,8.314185,-9.107544,-9.761825,5.424222,7.823072,3.915206,0.387272,-5.905741,0.867609,-7.848193,-9.414482,9.850963,0.224263,8.949626,-3.305005,3.551337,-9.909269,-7.670914,-8.168470,4.129364,0.645277,-7.691251,-2.494449,-1.713456,-0.331831,-3.359770,-7.526758,-2.956343,-2.181053,-0.525913,-5.172922,3.335335,6.712680,5.405191,9.413695,8.258943,-7.373194,-7.284498,-2.985265,-6.347427,1.653536,9.515129,-0.324690,6.155315,-3.825051,9.035696,5.814771,8.860586,-0.183695,-8.727635,1.603166,-0.009087,-2.047761,-0.382454,1.310908,2.619928,4.488201,-0.697673,-2.570577,7.934085,2.506682,4.755379,5.680992,-7.376089,-3.282360,7.441142,-7.995685,7.994426,-5.383850,-3.093688,-3.989640,7.943789,-2.154181,0.940169,6.086050,0.629923,1.239498,-5.472119,6.087038,-1.869521,6.139704,7.958210,-6.616815,-6.417681,-7.255337,-0.399038,-2.154405,9.732540,-4.774204,7.230715,9.245768,-9.552068,-9.268917,7.415610,8.700544,9.796593,5.569972,2.747676,5.919733,0.762103,-2.887648,-9.723303,7.035069,1.570633,-8.877862,1.815949,-6.350788,-7.615396,-8.046654,-9.967504,5.981483,0.437869,2.427763,-0.520537,-7.756383,-3.900859,-1.837696,-9.977902,-3.938257,3.941177,-7.920588,-9.216934,-3.527960,8.961249,-0.405388,6.788807,1.323743,7.260669,9.741908,1.567182,8.851606,-0.778538,-0.073606,1.127351,-7.742555,2.153674,6.481975,3.717776,-6.396643,5.253606,6.434991,2.910121,9.735151,3.171654,-2.520661,-1.769698,-2.771395,9.338195,4.821529,-0.702039,3.366202,6.011769,2.538133,2.404195,4.764358,2.468859,5.108984,-8.054962,5.408410,2.414573,-3.602735,1.742133,-0.070665,-2.835004,3.093705,7.424044,-5.887359,5.267182,-2.190256,-0.737913,8.826647,-1.734779,-5.510960,9.457818,-9.524069,4.483979,2.825946,3.362116,-1.160415,7.332836,-1.072631,-7.545855,8.279136,7.218756,-0.380581,-9.723603,5.933645,-0.007866,9.690631,1.565128,-7.299922,-1.404030,6.179124,0.037598,3.569747,6.909185,-9.372796,1.629194,2.140506,5.283851,-8.610499,-1.839764,-7.803523,5.488853,-5.022805,0.068432,2.542789,-9.458400,1.916074,-5.043803,2.611986,0.933361,-2.924786,2.120861,7.747199,9.696111,-5.772738], dtype = "float64")#candidate|14254|(320,)|const|float64
call_14251 = relay.TupleGetItem(func_13181_call(relay.reshape(var_14252.astype('float32'), [384,]), relay.reshape(var_14253.astype('uint64'), []), relay.reshape(const_14254.astype('float64'), [320,]), ), 1)
call_14255 = relay.TupleGetItem(func_13186_call(relay.reshape(var_14252.astype('float32'), [384,]), relay.reshape(var_14253.astype('uint64'), []), relay.reshape(const_14254.astype('float64'), [320,]), ), 1)
bop_14265 = relay.greater_equal(var_14240.astype('bool'), var_14253.astype('bool')) # shape=(18, 4)
func_11122_call = mod.get_global_var('func_11122')
func_11126_call = mutated_mod.get_global_var('func_11126')
var_14270 = relay.var("var_14270", dtype = "float32", shape = (90,))#candidate|14270|(90,)|var|float32
call_14269 = relay.TupleGetItem(func_11122_call(relay.reshape(var_14270.astype('float32'), [90,]), relay.reshape(var_14242.astype('float64'), [30,]), ), 2)
call_14271 = relay.TupleGetItem(func_11126_call(relay.reshape(var_14270.astype('float32'), [90,]), relay.reshape(var_14242.astype('float64'), [30,]), ), 2)
output = relay.Tuple([call_14222,call_14239,const_14241,var_14242,call_14251,var_14252,const_14254,bop_14265,call_14269,var_14270,])
output2 = relay.Tuple([call_14223,call_14243,const_14241,var_14242,call_14255,var_14252,const_14254,bop_14265,call_14271,var_14270,])
func_14273 = relay.Function([var_14240,var_14242,var_14252,var_14253,var_14270,], output)
mod['func_14273'] = func_14273
mod = relay.transform.InferType()(mod)
var_14274 = relay.var("var_14274", dtype = "uint16", shape = (18, 4))#candidate|14274|(18, 4)|var|uint16
var_14275 = relay.var("var_14275", dtype = "float64", shape = (30,))#candidate|14275|(30,)|var|float64
var_14276 = relay.var("var_14276", dtype = "float32", shape = (12, 32))#candidate|14276|(12, 32)|var|float32
var_14277 = relay.var("var_14277", dtype = "uint64", shape = ())#candidate|14277|()|var|uint64
var_14278 = relay.var("var_14278", dtype = "float32", shape = (90,))#candidate|14278|(90,)|var|float32
output = func_14273(var_14274,var_14275,var_14276,var_14277,var_14278,)
func_14279 = relay.Function([var_14274,var_14275,var_14276,var_14277,var_14278,], output)
mutated_mod['func_14279'] = func_14279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13069_call = mod.get_global_var('func_13069')
func_13070_call = mutated_mod.get_global_var('func_13070')
call_14284 = relay.TupleGetItem(func_13069_call(), 0)
call_14285 = relay.TupleGetItem(func_13070_call(), 0)
func_3233_call = mod.get_global_var('func_3233')
func_3236_call = mutated_mod.get_global_var('func_3236')
const_14295 = relay.const([-4.059983,2.142171,-7.796177,-0.269389,-9.213935,3.424701,4.552017,7.566864,9.436049,1.772880,5.331787,-3.555060,1.087564,5.142458,-9.031067,5.804339,-5.648149,-4.923513,4.797849,0.333351,-8.048364,-1.647407,-1.177755,4.705693,8.312074,-5.990049,-0.607873,4.996486,-9.044571,4.552935,1.806608,6.104696,9.569792,-8.295219,4.105221,-7.336034,0.358790,4.153950,-9.473456,5.493792,5.670019,1.434575,-4.264405,4.089440,5.880425,9.157158,3.793421,0.603943,-0.711771,2.622098,0.324498,1.254316,-1.191783,8.302124,1.468600,0.955147,-3.298676,4.295274,5.122721,2.642046,3.991492,0.228265,-5.849002,9.680181,8.960636,-9.313130,6.442238,0.585439,-5.044758,-1.942791,5.028964,-4.065133,-6.620598,-0.913641,-6.233747,6.609856,-2.855678,-8.844692,6.168681,7.402001,2.663857,1.886407,0.128997,-3.840318,3.162201,-9.595521,-1.642816,-1.165353,-9.664038,2.278393,6.835630,-0.501445,6.442218,-9.633856,-5.162270,7.963214,5.637416,-2.796355,7.143507,-4.415052,-1.298081,3.254885,0.183282,2.473278,-2.950221,-7.881893,1.856561,4.638036,8.906611,9.964419,3.131802,9.964618,-0.216173,-8.731428,7.928765,-2.382709,2.641958,-9.029898,-7.522057,-0.129979,-0.766578,-8.420892,7.122915,1.361083,9.740773,-9.774726,4.350671,6.653268,-9.798083,-6.068930,-4.818107,6.547728,-6.896566,-7.111441,1.807083,-2.038466,4.480298,-8.384264,-4.518382,8.521629,-9.483263,2.246535,-3.016793,3.070944,-5.263837,-0.366812,6.842199,-0.099760,1.271414,-1.635834,0.622652,2.743152,4.123133,0.311106,0.195745,5.775609,-9.884671,0.170855,7.845366,0.132717,-9.754293,-5.846102,4.881245,-7.403050,8.270842,-0.258651,7.977750,0.677454,3.089289,-8.139004,9.926620,-1.269488,-5.523249,-4.772802,9.801415,6.588328,3.018660,7.533458,-3.014321,-3.965421,-6.644151,-2.948101,-0.732433,-9.900618,-6.859756,-4.620202,-1.764513,-7.977718,-8.364225,-6.048318,-9.405790,-9.489734,6.467368,3.301546,3.312245,3.698760,-8.517027,2.626678,5.559881,-7.381562,-1.182572,9.494150,0.177233,-2.746490,2.306853,2.859905,-3.466207,1.771453,2.296533,-3.132967,-6.744189,-5.161695,4.266988,2.119540,0.558473,3.499435,-5.641694,-9.028847,-0.100957,-5.894341,5.807428,3.551303,8.723546,0.562383,7.531234,2.038814,4.498218,-2.307454,0.742194,6.668523,1.837145,-0.223930,-6.021347,-3.567736,3.659769,-0.099825,-6.172448,1.929637,-4.750430,5.385304,-0.532536,-9.275108,-5.042922,-6.564299,-4.028297,2.810482,-8.115004,-9.854907,-4.790131,8.292411,7.706284,7.790744,-7.598875,1.561382,9.921077,-9.266351,5.989637,-7.017353,-7.897636,8.965136,-4.195129,-2.491821,-1.424266,7.092457,7.353313,4.431558,-4.094869,9.141475,9.649042,-3.539072,7.253898,-2.931470,5.216752,-8.414617,8.676945,-0.029111,-1.776117,3.774555,0.317659,-4.774154,7.459509,2.784473,-1.087561,-7.047267,5.843115,-7.085246,-1.103729,9.351702,7.019952,8.394321,4.369595,8.701497,-8.505718,5.186283,0.695453,8.149147,3.652810,6.924453,1.666731,1.401545,-6.444390,3.246171,-0.133444,-9.901008,-2.129065,-4.939062,4.747565,-9.164078,-5.671160,-2.045236,0.213999,5.287427,-3.604113,-7.246898,-5.715975,0.257690,1.234516,1.537607,2.153740,-0.590151,6.656376,-9.559332,-5.456100,2.045654,-8.687485,-4.307012,5.699931,-2.814447,-0.519865,7.648195,-5.062171,8.578036,9.490506,9.595478,-6.460072,-8.118804,-7.040822,0.672857,8.470181,-1.388755,-3.768409,1.291273,-0.990664,2.820517,-6.337080,6.544802,1.864105,1.981859,-3.095393,-5.711679,-2.470723,-4.461199,8.678775,4.621963,-9.104273,-2.860976,-4.528569,-5.364003,7.129037,-9.649126,-3.323905,-2.302673,-5.148501,-8.286510,-2.270822,-7.111642,-8.571532,8.219199,-4.283272,-8.680535,-9.816456,0.277657,0.123988,3.909615,9.418325,-0.509851,-3.296781,-8.082957,-8.630042,7.559976,2.423126,6.130586,-9.196942,0.845011,2.723095,-3.400312,-5.668122,3.760884,5.352830,-5.835538,-0.937702,6.040569,1.558594,4.553964,-5.972808,-0.110232,-0.131273,6.514381,-7.872140,1.991863,6.478385,-7.554046,9.595034,3.151997,-3.157643,-5.847972,-0.105195,4.434932,3.080381,-5.786823,0.517226,1.808089,-1.143446,4.057464,7.124407,7.905521,-4.374628,-9.433069,3.247250,-6.054640,9.715878,-8.228232,-0.445083,1.200627,-8.378357,-4.044595,-1.287499,-5.074917,-6.947450,6.406488,-6.303168,-1.122507,-0.062021,6.113540,-8.553891,-9.934167,-5.790018,-7.460904,-7.722942,-1.198353,9.032383,4.385036,-4.825959,-7.975684,9.598391,-7.651532,-5.265394,-7.503436,8.993531,-7.902705,3.275150,9.082182,8.928896,9.386669,5.769678,5.730041,-3.202710,-6.410192,-4.581107,3.214674,-7.066879,0.810892,1.725946,-8.999175,6.284352,-9.050541,8.034243,-9.217422,6.011353,-4.007333,5.990629,4.064057,-4.891281,-2.082304,7.368532,-1.848140,9.118027,-9.511088,9.403505,9.385767,-2.341858,-9.702174,2.789101,-0.836813,-9.401053,2.547755,-3.464613,4.341565,-1.342263,4.327942,9.145228,-8.043480,-9.163567,4.045570,1.100704,-7.900461,7.895010,7.759605,-7.442329,9.966712,-3.004127,-0.822992,-6.471607,-4.932302,-3.288459,-2.752242,3.320073,-8.339463,4.106412,-9.340239,4.759200,-1.443890,5.326811,2.466936,-6.022162,-6.517878,-7.891103,2.603998,-8.146836,1.238140,-5.024248,-0.234443,-6.291521,4.919756,5.222808,-1.633955,-2.667662,5.014138,-2.604504,6.554300,2.773523,-4.357459,5.143766,-5.422043,3.588577,-4.541271,2.480118,1.709462,7.789783,-8.775396,-8.398946,8.143618,4.995323,-5.983692,-0.807497,-0.147981,1.749312,2.432043,7.365100,-9.708082,1.600339,-6.213476,-1.753950,1.281024,-3.767233,-3.782075,-2.016577,1.665465,-2.952490,-6.213663,-5.442323,-0.551906,2.277980,-4.088680,-6.180259,3.734298,6.872864,-1.041529,8.124080,7.220752,3.070248,0.140476,-0.666126,-1.545621,-4.861745,4.565755,5.616974,0.680676,7.938552,0.603624,-1.952493,9.050202,-9.737561,9.588411,1.055390,1.587857,-1.374344,9.333432,-7.708010,4.387657,-4.217750,2.207626,3.318720,-3.699449,-6.090166,-8.851114,-5.705491,-5.158316,7.217298,-4.130529,-0.466800,-6.718970,-3.997943,5.468036,2.076829,-7.177836,4.294012,7.671926,-7.261830,4.350577,-2.994441,8.427050,-4.662221,4.917933,-5.136069,-4.996114,-1.766618,8.005930,-8.085428,5.568968,-9.785195,1.812357,6.662347,-0.321636,-4.749601,-8.543465,4.920480,9.013722,5.304693,5.468541,4.224536,-5.885774,-9.392281,-9.991856,3.366339,-8.517128,9.543951,1.947402,8.965512,-5.708293,-0.875541,-2.779966,2.701902,2.320723,-8.746035,-0.542122,-5.564517,6.581665,-0.512578,-2.189615,3.641055,4.958236,-2.764893,5.899189,-6.963778,-1.592855,-4.829801,-7.954882,-3.848853,-1.233502,5.912635,-3.466451,-4.436912,-8.210473,-2.249118,-8.528423,-1.098692,-0.934359,-5.324298,-1.559178,-3.503160,4.295747,3.015679,-2.463706,2.474906,-5.244501,0.071565,0.254943,8.853817,-4.274114,-4.832924,2.778253,0.484034,4.195343,-0.771022,-4.225639,-8.679811,2.825142,-4.151574,-3.699068,7.192760,-5.789605,7.910064,-8.278560,5.726315,-6.044318,8.329323,-6.058120,-9.188138,-0.283005,2.937613,2.781990,3.925291,4.655044,-8.329868,9.832209,6.634610,-2.447994,5.465147,0.725313,6.786576,-3.312791,2.516949,2.441760,9.175237,-6.225849,3.023126,-6.933782,0.132375,-1.641716,5.807535,6.606121,3.231238,-6.182013,-4.882691,0.474046,0.515228,-4.911374,4.619938,-7.916493,7.655802,6.492053,-2.618813,2.292188,-4.080837,0.982556,-5.887428,-9.761809,-0.511482,-4.853586,-7.187296,5.420756,-4.748809,-2.813247,7.185716,-0.801110,-4.865222,1.626954,3.781398,-7.743432,-7.538041,-7.182415,-6.030236,-0.909792,5.918471,1.894291,6.486744,0.482926,-1.039084,1.723618,6.892463,-4.452690,4.823010,-3.782260,1.390164,-2.280137,0.634040,-3.809408,1.077056,-2.972509,5.152559,-7.280461,-5.879837,-3.232987,-6.335618,4.849786,4.346845,0.747088,4.201666,-2.714438,-1.105920,2.532416,8.295912,7.405856,-4.101765,8.248190,8.241841,-3.557664,6.330008,-5.941169,-4.235566,1.553855,7.350668,1.111632,9.914599,3.086340,-4.049278,3.251760,-0.856530,5.605308,-6.283773,1.331789,-4.871813,-5.125839,-7.953149,3.124546,-9.337454,0.245551,5.800749,-0.597556,-5.655986,-3.690671,-8.288784,-4.286047,-8.982353,-6.473731,-3.477898,-9.683555,4.022037,-8.652573,8.818328,9.021161,6.609337,-4.138830,2.231174,1.718991,-9.923828,-9.142571,7.342414,-2.075465,-5.265584,-5.193818,-0.772329,-2.558353,6.807935,8.072581,-4.511839,-5.116600,9.160885,3.634230,-3.970027,-0.248375,-2.448859,8.426888,2.804489,-4.629555,-5.118974,-1.589265,7.659848,5.585921,-0.018548,-3.247644,8.316487,-3.567776,4.560223,0.186778,-9.158010,-5.266148,-0.828046,-0.955184,3.216351,-2.801746,0.055123,-4.421376,9.891978,-0.297181,4.176503,-9.025734,0.208275,6.816878,-1.550801,-9.243373,2.316219,-9.196388,9.239310,4.572862,8.899175,-8.809932,2.534826,9.413245,-2.449834,-4.914877,-0.591504,-2.169344,0.467931,-7.256549,-0.747981,-3.077489,-5.759024,-5.731139,6.422871,-7.206051,6.244511,1.482278,-6.727855,3.656260,-8.770158,-5.611422,-4.194320,0.927671,-1.724127,-5.318192,-2.688904,-0.572097,7.269480,-2.763124,6.186695,6.405043,-2.992067,7.245166,1.058197,6.178775,-6.357320,2.617216,1.573362,-2.429558,-9.013417,-2.924893,0.406094,4.276200,7.111739,2.697439,9.619420,4.127298,5.252482,-9.715916,5.367476,9.574599,7.631975,5.571565,5.883192,-7.741996,-2.716207,-0.741732,-2.183487,-4.670430,-9.874110,-9.530879,-0.384859,4.773477,-9.469195,-6.034783,2.292157,4.389216,-7.814414,4.835164,-7.142535,-7.948549,7.607731,-4.224662,-5.275290,3.618476,-5.389021,-8.736624,-9.275121,-4.211102,5.194970,-7.037417,-4.571372,6.997658,-4.205064,-2.280979,9.374657,6.756931,-1.604774,-7.176152,-9.694087,1.527799,2.859537,2.905956,1.497840,-3.554670,5.316679,5.635278,-9.088128,-7.486896,-2.057473,2.505015,6.948964,-6.944993,-3.017510,0.190433,-4.207622,0.853377,-6.780592,5.414260,-7.874752,6.260805,9.033584,-1.321167,6.337033,-3.339551,6.072437,9.894319,4.620464,-1.616749,-0.638146,-9.832793,-5.067678,-1.532397,2.648868,-4.272501,6.020246,1.306459,0.445529,-7.210176,-5.292369,-9.528960,-5.388850,4.042868,2.918983,9.937669,1.726388,-3.201344,6.930821,-7.285327,8.821950,9.211276,-2.406908,8.242222,-9.015876,4.770800,-7.713694,-0.231578,9.875856,-1.222752,-6.053995,4.094272,-9.939214,2.967124,-2.745115,-7.257858,1.611478,7.771232,-0.218243,0.449186,-8.787284,6.905077,-7.234947,-2.883115,2.669255,-6.554425,-6.458630,6.018101,2.999214,5.835042,5.693582,3.884127,1.001879,-3.324743,9.613724,-5.543228,-1.480998,3.216672,0.073290,0.905951,-1.404783,-1.811011,5.582384,2.053326,9.111480,-3.391006,-9.522700,1.341496,-9.317152,5.543914,9.756977,-2.276253,-0.279913,-6.837189,6.151418,-9.016383,0.762771,-7.893003,8.383916,0.626047,-3.220136,9.406203,-3.856548,-8.293415,-0.480153,-0.593108,7.693012,-6.088005,-2.926355,-7.230789,-8.725389,-0.538396,4.849230,-4.474121,-9.722904,0.265631,7.321978,-1.928511,0.670097,9.853024,-2.991543,0.800985,-7.954805,6.642430,-4.631903,-4.539799,4.241037,-1.592427,8.321846,8.533856,8.632412,1.027983,0.100971,-7.856655,-8.796656,-7.258312,1.400643,0.386157,0.146168,4.968647,-8.725033,-1.197426,-8.368269,-0.217163,4.854251,1.375838,0.433297,-3.656093,-6.735998,1.504623,-5.670929,-3.724628,-1.936002,1.656545,-1.974299,0.679045,-7.929514,-5.741990,9.057984,-5.620587,-5.427760,1.227948,-2.396645,-4.814627,-3.065832,-6.972158,-7.916303,-6.726621,-3.294522,-7.053725,-5.416116,3.079573,-7.825102,2.996034,-1.817193,-2.801498,-5.440932,-4.123837,8.225037,2.975967,4.417126,-8.632094,-0.146625,-1.764062,-8.354720,-0.247857,-5.375837,3.719045,1.690028,-8.852392,5.766201,4.014603,-2.426831,-4.769294,-4.334971,0.799287,6.077944,5.757737,1.641785,-4.459783,6.728087,-5.062591,-3.513470,-1.600702,6.738805,-9.775262,7.740625,-7.428437,5.201439,-7.293816,-5.234158,9.174875,6.622630,-7.887967,-1.778928,2.828053,4.310610,-1.137415,5.531123,1.611535,8.144384,1.979655,9.786090,7.365649,1.603894,4.687668,0.325116,8.899778,4.634997,2.568709,5.394612,4.993247,5.811519,-0.851486,-2.585479,9.117760,4.610891,0.215011,-4.247023,-1.610350,-4.415022,3.427866,-5.780514,-2.082402,-6.577605,-7.271669,-1.369483,-3.075203,2.037638,4.399127,3.968934,7.056838,2.633367,3.738079,7.953004,7.493210,5.700163,-9.199764,-3.741939,-6.234722,-7.513641,-2.195284,-3.997220,-9.323052,6.189399,-1.371202,-1.516605,-2.022617,-6.461395,5.070449,1.134957,6.906807,-0.421535,-3.611285,-5.847516,4.881104,8.382224,-9.064618,1.353135,4.214722,-3.060418,8.889357,-7.025389,-7.953706,6.388557,-5.225039,4.819712,-5.923889,3.544468,-9.111170,3.825255,2.785830,6.369837,-4.996369,-1.743749,2.600612,5.545904,-4.359028,-3.445236,-2.902235,-2.428540,-3.316620,-6.529816,1.329204,-1.845257,-4.841446,-5.759606,-3.716479,7.788267,-2.962022,9.694874,-3.779987,-2.894259,-9.292317,7.221333,-0.034622,8.081254,5.495347,8.540546,-3.673243,-8.760529,5.848089,-1.945112,-8.895097,6.811714,1.651098,4.989341,9.271912,-9.861772,-1.869869,9.656237,-7.254103,-2.821955,-3.137724,-3.987774,1.631648,6.044652,1.481703,-8.796054,0.713707,-3.421757,-7.607960,-9.353980,8.054954,0.997441,2.590336,2.752266,-5.004242,5.419643,3.083111,8.750597,5.534132,-8.283995,-9.114546,-2.099901,-3.360027,-4.278416,-4.668008,-0.014284,-5.108989,-1.112591,-4.521732,0.053526,7.568425,-4.861759,-0.743717,7.746685,-6.368403,8.751839,-6.378747,6.485487,-0.297654,-5.819970,-7.266314,9.589390,-0.142225,-6.776491,9.564987,0.144802,0.899618,4.144083,2.419479,2.875039,-9.620191,-1.079739,-9.141354,3.860795,-8.785164,-6.897072,0.098073,7.252719,8.200073,-1.001612,3.480054,4.277097,9.051250,-9.540193,4.263357,8.161381,-7.010296,-4.735339,4.683458,-5.674155,7.301197,-9.573205,-1.381902,1.434714,-4.028914,-5.348413,8.096878,-7.526918,-5.450863,-9.884092,-2.638080,-4.652966,7.700227,3.675856,-8.395726,-9.456130,-3.229839,-4.338468,-4.833423,-8.982184,-0.042962,-5.568019,-9.909671,-5.079839,-3.709514,-1.142926,-6.445813,4.064839,-7.251159,-0.724209,-3.245351,-1.636436,-4.809248,1.114617,-1.868076,6.774422,-3.115717,8.980113,-1.813561,-1.388895,-4.389924,6.832302,1.301427,-9.499315,7.393145,-1.810558,-2.097918,1.149072,-9.362864,8.112633,-7.919845,1.782403,2.545709,-5.142343,-1.859465,-5.967854,9.376143,-9.606381,-0.393007,-7.271050,7.510803,-7.736189,-1.306560,-6.456034,-1.121541,6.386198,-4.140510,-3.828344,6.766310,3.438523,5.080288,-6.408579,9.641136,6.162442,-7.176009,-8.432195,-4.197976,6.302957,-2.989248,3.415414,1.863556,8.369897,3.787192,8.894423,-8.078229,0.603251,-4.565648,5.956188,-6.172231,-4.231125,-8.925213,-2.504609,2.598899,4.868799,-6.573330,-8.889788,-9.285512,1.917246,9.000766,-5.661450,-6.015886,9.752516,-5.653271,-5.458463,8.012773,2.389348,6.444826,3.897627,6.689789,-8.082253,5.942482,1.642232,0.810904,-6.792136,-5.832597,-2.046265,-1.263092,7.529109,-7.703317,2.681786,-2.515188,-7.066815,-1.417172,-6.309461,-6.531376,4.354372,-9.302778,8.176635,-8.958071,-6.371081,0.952987,3.271167,0.257138,-4.426826,-2.950611,9.897062,-2.623225,5.001448,6.777479,-4.953439,-8.794102,-7.770763,-4.575608,-0.753774,8.075176,3.018956,-8.542448,-4.683869,-8.349668,2.277913,-4.397237,2.494092,-1.282924,5.694770,4.635528,-9.215935,-8.317749,-7.637208,-7.686006,8.295309,9.741955,-6.800251,6.466829,6.546180,7.840252,-1.857625,-8.588738,-4.539426,-7.312564,-2.821836,1.772043,-2.671385,3.001954,8.639543,8.892617,5.930838,7.080810,-9.072618,-0.997947,-5.210118,2.043105,9.522274,3.641089,-3.662771,-4.536331,4.240541,5.612764,3.826676,-6.645137,2.042558,3.474084,-6.010604,-3.214959,9.514122,7.993354,7.552264,-8.842074,-1.324076,-2.103559,-5.238313,0.036667,5.544457,1.967056,-8.378360,6.812987,8.664805,-4.550533,8.607161,5.018175,-9.729719,1.255918,2.912705,-0.314419,1.613358,-7.764397,4.292889,6.864126,1.387779,3.321206,-7.351285,0.271972,6.794061,9.455312,-9.842612,8.666531,3.681573,-6.561969,0.103841,-4.832426,-8.560954,-7.622041,0.443977,-2.424890,-2.969272,-2.373511,-5.792242,-2.522626,0.483782,-6.107353,-8.034371,-7.972537,-0.487473,-7.696937,-3.403131,-4.324270,-3.237114,-4.763312,-6.039715,-6.921923,5.272378,9.652991,-7.235792,5.844680,-7.294985,1.241030,-1.713745,-6.926995,2.993514,-3.542682,-8.250016,-7.443778,2.347766,-0.722412,0.617105,-9.812372,2.805723,-9.707770,9.686649,0.670027,0.521301,3.399498,7.867937,2.697619,-0.099965,-3.852812,-8.370310,7.595109,6.062966,-4.927029,-0.929779,3.798221,-4.896749,7.755073,-4.883797,7.409965,-9.691692,5.886565,4.166120,-2.845359,-6.713413,-2.446555,3.379207,-9.898342,9.255245,6.037691,8.449611,9.222589,-4.135961,7.126523,5.564945,-2.579077,3.835707,2.937895,-8.229963,3.170193,-0.558683,-9.242233,6.710844,2.561236,1.807422,3.174051,2.467238,-7.270840,6.755999,-3.835447], dtype = "float32")#candidate|14295|(1694,)|const|float32
const_14296 = relay.const([-3.649950,0.289174,7.839670,8.619852,-3.966810,3.436412,-4.273271,-8.781246,4.251539,-2.549121,-4.439595,-2.468034,8.499352,-7.320521,-7.188863,2.456458,7.601173,8.944787,5.142205,-9.628232,-6.731326,-2.474256,-6.671754,-5.676135,-8.474624,6.855492,-5.259924,-0.978397,-4.284012,-5.976355], dtype = "float64")#candidate|14296|(30,)|const|float64
call_14294 = relay.TupleGetItem(func_3233_call(relay.reshape(const_14295.astype('float32'), [11, 11, 14]), relay.reshape(const_14296.astype('float64'), [30,]), ), 1)
call_14297 = relay.TupleGetItem(func_3236_call(relay.reshape(const_14295.astype('float32'), [11, 11, 14]), relay.reshape(const_14296.astype('float64'), [30,]), ), 1)
func_2553_call = mod.get_global_var('func_2553')
func_2559_call = mutated_mod.get_global_var('func_2559')
const_14321 = relay.const([6.579253,-3.894049,-7.632440,-1.038079,6.940582,8.856574,-6.296106,-5.363616,9.692572,7.967924,-9.258261,1.133814,-0.839083,9.878190,0.401617,0.757751,-3.718537,-1.454180,-0.931266,4.607196,-1.490205,-8.584723,-5.474300,5.987957,-4.481740,2.714881,4.620784,1.246619,-4.923208,-2.179648,-4.264516,9.927327,0.996294,5.469800,-1.173060,3.140074,-4.450576,-9.403609,4.771626,-2.516259,-8.083134,-5.490203,9.314326,0.470014,-4.463230,5.120377,4.011086,-2.348653,-2.980315,-1.876880,-9.287295,7.139286,-1.693857,8.455901,-3.071030,0.187395,-3.723972,-1.712518,4.100095,1.075483,4.476598,3.102579,5.188043,-0.250310,9.977308,7.073698,-1.015927,-4.627114,-0.190978,-3.558298,-5.523411,3.221657,2.740539,-3.523275,9.705586,0.288885,-8.335571,5.971115,-1.438266,-1.967287,5.410132,6.094852,-2.413188,-5.749212,8.076961,8.087268,-3.888696,-6.616858,6.599517,0.675966,2.506655,7.165260,6.569509,6.568199,-1.577130,6.507725,8.680643,-2.844022,5.506619,-9.267970,3.483951,-8.899561,-3.127883,-6.908513,8.895920,-9.546278,-7.626104,-1.393637], dtype = "float64")#candidate|14321|(108,)|const|float64
const_14322 = relay.const(False, dtype = "bool")#candidate|14322|()|const|bool
const_14323 = relay.const([False,False,True,False,False,False], dtype = "bool")#candidate|14323|(6,)|const|bool
const_14324 = relay.const([8.945335,8.648319,-1.076407,6.562743,1.908900,4.570154,-9.478979,-3.557802,-8.365450,-8.655334,6.645541,4.368741,4.339622,2.330533,-3.457546,0.297503,-0.131774,2.160174,-9.608989,-4.555485,8.759169,6.071873,-5.078561,9.079832,1.319681,2.630948,0.042065,7.454168,-3.222185,2.981551,-7.415408,-5.896550,8.718938,1.968574,1.170741,-0.234658,5.918780,-3.757864,6.210435,4.796696,5.237781,9.865536,2.783134,3.011799,4.273065,-4.732197,9.475984,6.519688,-7.651843,-1.031347,-8.964060,-6.880076,-1.169403,-1.013986,-1.124976,-8.417389,-5.799201,-2.739348,5.010496,6.521794,8.211269,-8.190520,1.275429,5.986326,-1.841118,2.124874,-0.930344,-3.364927,-9.267131,-0.801001,-8.735607,-9.763181,5.242502,-9.930237,-3.232946,6.854887,0.365367,-4.894564,6.266310,-6.412131,3.881097,5.993983,5.279197,7.100065,-6.697243,-8.086807,-4.627971,2.821524,-7.946525,-3.591119,-8.081436,-1.808395,9.675527,-7.661247,-8.060556,-8.283921,-4.148477,-2.522309,-6.264933,5.223312,7.920483,0.692488,-8.061027,9.330174,8.334973,9.142895,-0.641814,5.344004,-6.756145,-4.329194,8.100465,-1.017540,-8.966467,2.914284,-0.328459,6.270177,0.396749,-2.783186,-0.483054,-3.410978,3.164649,2.651070,8.566388,-0.513188,-3.298950,-4.743224,4.982276,0.086190,7.508721,-1.610041,1.059380,-4.170653,6.273591,-8.209128,-2.428878,6.844182,-1.136169,3.808777,6.418181,6.592311,9.381546,6.710702,-0.960078,-9.433449,-5.435087,-2.144991,9.575418,-7.174318,0.541743,-5.744879,1.554737,1.236082,-1.155289,8.683191,-4.807252,2.389644,-5.977875,7.497657,5.099206,0.394112,-1.492839,8.050355,-3.919441,-1.671552,-7.970524,7.923581,-3.905768,9.296017,-7.422544,3.337247,3.481145,-2.940752,3.432082,-2.374579,5.672804,-6.128585,6.069432,5.941893,9.543716,4.098372,-4.526132,0.320514,-6.821628,0.624817,3.130980,3.284610,2.682632,9.256069,5.515851,9.117262,5.270177,2.743224,7.756519,-3.313962,-7.185510,-2.901089,-9.603889,-0.142676,-8.744932,2.572894,-7.727696,-1.773992,-4.398624,-0.746958,-7.062368,3.021040,-2.797922,-3.787590,3.910968,-8.997486,2.730843,4.065016,0.757732,-6.542014,9.114887,6.745800,-0.361164,-3.362812,9.420949,8.091589,-4.600327,4.870180,1.595232,5.808263,-8.599372,-5.053726,-5.257041,-6.420857,3.699853,-4.592854,-7.406746,-0.567787,0.441797,-3.500112,-3.967095,-9.287297,-1.109239,8.835419,-3.420534,-8.633591,-8.583870,-4.172666,-0.959439,-5.472057,2.243216,8.539825,9.974935,-2.648749,-1.254058,4.653226,-2.494653,6.887297,-9.524526,-0.555459,5.862292,0.415482,-4.791402,7.487431,-7.544051,-8.439136,-0.158173,-4.780300,-9.969213,-2.694206,8.074405,7.941685,-0.168490,-6.611557,4.400545,9.302373,9.772488,-6.530001,-8.809182,5.250897,-2.911564,-6.645691,5.280638,-8.806510,9.012914,-0.075159,-6.809368,6.990956,-8.423439,3.650682,-2.003003,2.719814,-9.400472,9.437016,8.513771,1.403975,4.872839,-6.637153,-7.374913,-4.868807,2.747279,-0.540170,-6.027872,-5.977355,5.685051,-8.926555,-0.845627,-6.926087,7.435564,0.415547,-9.660998,-4.140811,-3.052991,-0.336800,0.305723,4.932318,0.097066,2.069352,8.511683,-3.662322,9.667456,-1.560131,-3.075390,-8.571054,0.113192,-5.631352,7.033107,5.096845,4.669059,-9.060141,-1.493080,-5.663073,-5.900358,9.979894,8.149835,-8.322631,-6.439637,0.908905,9.947789,-6.067796,9.042446,-9.145548,-8.889969,5.229918,6.646768,-8.668965,9.993303,5.754082,-3.781216,0.090630,1.922024,9.636279,-6.137134,-4.950941,-2.040538,-5.227308,-1.396161,-5.633509,-6.128696,-3.655243,-7.053990,0.034461,7.750239,9.184091,4.157070,-6.659480,-2.668234,-8.693738,-5.115470,7.358219,-6.247449,-5.914392,-2.213553,4.406776,-9.864138,1.923164,-9.735271,-7.027216,5.014248,-4.481476,-8.210797,2.181635,-9.338651,-2.906110,1.187804,1.894677,4.119969,-6.286622,0.043169,4.157886,4.013438,-6.386004,7.332878,-4.891161,-6.407447,-4.502516,0.765518,9.601192,2.763169,-9.724914,8.070964,-1.846700,3.243145,5.112176,-6.271465,7.873506,1.000761,-1.053368,-3.359023,3.031534,3.080008,-7.716379,-6.798436,-9.058237,5.314370,-6.522562,-0.203047,9.705425,7.726133,-6.681137,4.326945,0.307787,3.363098,-2.364518,-9.364508,-2.930467,2.041433,-7.061707,8.285860,9.353369,7.183143,7.478604,5.540788,-0.571084,7.618108,-6.034979,-7.920767,7.821911,0.907191,7.960965,-9.017248,0.818309,-2.759943,3.260209,-7.366724,-1.116291,-0.594038,-4.562292,8.496216,-5.843353,7.259066,2.576433,-7.066879,-6.223704,-2.387223,-0.609888,2.834267,-5.887315,8.413651,1.201137,3.358334,-5.766834,-4.066776,6.086493,1.223632,-1.633168,-0.953667,-8.124312,7.556386,6.342465,-0.521235,-0.096521,1.172536,-2.113083,-2.105761,8.556032,5.342144,8.516600,-0.830625,1.832311,-9.593342,-4.492405,-1.822604,2.070039,1.981876,6.770653,-8.774407,-0.014838,5.754468,9.122523,-8.705118,9.689292,-5.602256,4.075940,4.956887,-7.346540,1.767085,-7.935123,2.738379,7.839291,-8.503014,-9.576744,-9.067466,0.696986,0.744161,7.277350,2.858442,-5.384613,4.192560,-8.794175,-6.753589,-8.269679,5.567128,3.899852,-7.087700,-4.586922,-5.987210,-2.486525,2.586332,-6.315685,-4.774125,-6.654194,-1.170002,0.094651,3.402611,-4.115658,-5.679170,3.800621,7.654208,-5.887956,1.833333,6.649112,1.920103,-0.901242,7.788554,-0.646233,-9.465070,9.263799,2.847153,-9.112636,-4.242743,-3.622399,6.071655,-3.571446,5.895507,-1.472290,1.244002,-0.546558,3.520920,9.449037,2.663543,-8.136904,0.128300,-4.683669,-8.064731,6.990284,3.759271,1.091288,3.250968,6.775292,-9.652056,4.621003,1.069629,9.759696,-1.418330,6.844258,-1.685646,7.095047,8.631617,-8.327063,-9.508377,-8.129082,5.149247,-7.384969,-0.530509,1.931807,7.334911,-9.832636,-7.471671,-4.525603,2.290567,-3.234969,5.373976,9.464721,9.390168,8.967560,3.182162,8.536966,7.911800,0.051318,-4.594983,7.281989,7.974692,-3.731578,9.911334,-0.972498,0.731871,-5.828815,-5.013663,5.557883,7.095574,2.110134,3.813215,2.267999,-6.480137,-9.905218,-1.314887,-4.257550,3.502473,1.309546,4.240587,4.230866,0.071955,-8.756293,5.410228,4.319210,-6.753299,7.998667,-2.026460,-9.771745,2.064458,6.569058,-6.146844,7.967130,-2.194644,-7.394262,-2.644500,-0.447492,3.087759,1.306454,2.351781,3.110584,8.284575,8.963550,-0.472094,-5.597416,-9.216278,0.725585,-8.007631,-4.148659,4.793663,-0.045916,6.454542,6.179690,8.373094,5.729045,-1.227653,-4.765750,-8.448598,6.434147,-4.891386,-1.401443,2.987246,2.746508,6.716105,-8.118428,9.019785,-4.778905,-5.902950,9.647862,9.481286,-4.803670,-7.499365,5.753471,-5.240643,3.423916,9.184195,8.598066,4.314540,-9.657838,-4.450411,4.535671,3.232468,-8.839397,-2.110233,-4.901043,8.119684,2.252272,5.202909,-7.370734,6.890988,-0.359307,1.692947,8.020224,7.143614,9.983936,-5.219322,1.522246,5.681328,4.720236,4.778260,5.397496,-9.150429,-0.031192,3.396587,7.080375,-2.189831,6.097455,1.470877,-9.589183,-4.887312,2.002963,6.031870,7.805522,-3.602853,-1.152823,-6.698527,-1.995934,-0.072125,-8.378234,1.761163,-2.590176,-9.412930,-6.510578,-3.476951,-0.724734,-3.260774,0.615124,-2.037801,-1.155429,-9.682186,-6.578963,-0.931268,7.405609,-6.711086,3.383931,-9.658634,6.234893,1.139722,-6.459382,8.863264,7.013154,-1.775132,9.391588,7.158321,-5.900853,-9.444331,-7.083824,7.971149,2.120773,7.677958,-3.748988,-2.419102,-9.607597,8.351356,3.154043,9.679758,-2.515541,3.226396,-8.578299,-2.465369,-2.943293,-6.257214,3.421890,7.956635,3.096148,3.273932,-1.143756,6.976119,-7.614722,7.919545,9.770882,-1.360657,8.067755,7.524214,-0.461412,-9.029043,-6.634294,1.422676,-8.667972,-6.745564,9.858583,4.580452,1.186273,6.744917,4.387527,0.878107,8.001923,7.443169,-8.386501,2.251997,-9.794325,7.775255,-1.097010,-9.158511,2.561044,-6.463251,8.939162,-8.197687,-9.363851,-8.418403,8.182549,4.579295,4.263579,1.368137,8.669246,-1.473292,-2.924625,7.654415,-0.295658,5.907771,-9.526225,-6.444451,-2.715902,4.024320,-9.514188,-6.545674,9.666922,9.211092,-5.476192,-5.159971,1.423714,4.331991,1.673095,-8.737865,3.024605,2.204541,0.871053,9.135584,8.963489,-6.964578,-2.068640,1.013759,-1.645607,-1.921437,0.909016,9.988184,9.335636,-2.306707,6.279507,-4.433726,-8.841088,-0.674092,5.769430,7.869409,-6.531786,3.710137,0.373495,0.011890,0.870562,-7.416477,-9.402874,4.101838,1.632396,-7.430686,-6.359365,4.784649,8.126250,-9.435550,8.313417,9.733314,5.771263,-3.291656,9.157440,8.641117,7.370636,9.779836,8.048514,8.990216,-1.581627,8.334434,-2.999465,7.696711,-0.060927,-0.844666,-5.212062,-8.245677,-5.768247,-8.905326,-9.874279,-7.537927,9.176967,6.300378,-2.762495,4.100036,1.494000,9.091515,3.052592,4.619929,-7.724930,0.863848,9.292164,1.155556,-2.606189,3.016513,3.187005,-2.461080,1.062611,8.666572,-6.843771,-2.546501,1.609494,6.539986,-8.295524,-2.700581,7.452155,8.350146,4.800891,-9.336029,-0.933412,-0.468250,-7.122923,1.447306,4.095599,2.858252,6.568995,2.796014,-8.244623,-7.532504,3.932347,9.599741,-2.455180,5.878101,7.979326,-2.471588,2.485007,4.670160,7.228058,9.485521,2.007102,9.219991,-1.387413,7.851917,0.983214,2.306621,6.061524,0.941049,-7.561399,2.001512,1.585794,6.078480,2.587096,-0.320550,7.710596,0.290008,-5.238450,-6.694718,4.307134,1.385932,5.059282,1.751893,-7.720381,-0.572342,8.879295,-4.434777,4.980113,2.152262,7.758476,-6.179742,4.245750,7.397475], dtype = "float32")#candidate|14324|(945,)|const|float32
call_14320 = relay.TupleGetItem(func_2553_call(relay.reshape(const_14321.astype('float64'), [4, 9, 3]), relay.reshape(const_14322.astype('bool'), []), relay.reshape(const_14323.astype('bool'), [1, 6]), relay.reshape(const_14324.astype('float32'), [945,]), relay.reshape(call_14294.astype('float64'), [30,]), ), 1)
call_14325 = relay.TupleGetItem(func_2559_call(relay.reshape(const_14321.astype('float64'), [4, 9, 3]), relay.reshape(const_14322.astype('bool'), []), relay.reshape(const_14323.astype('bool'), [1, 6]), relay.reshape(const_14324.astype('float32'), [945,]), relay.reshape(call_14294.astype('float64'), [30,]), ), 1)
func_12998_call = mod.get_global_var('func_12998')
func_13000_call = mutated_mod.get_global_var('func_13000')
call_14326 = relay.TupleGetItem(func_12998_call(), 0)
call_14327 = relay.TupleGetItem(func_13000_call(), 0)
func_14273_call = mod.get_global_var('func_14273')
func_14279_call = mutated_mod.get_global_var('func_14279')
var_14339 = relay.var("var_14339", dtype = "uint16", shape = (72,))#candidate|14339|(72,)|var|uint16
var_14340 = relay.var("var_14340", dtype = "float32", shape = (384,))#candidate|14340|(384,)|var|float32
const_14341 = relay.const([-4.691718,2.726518,5.813283,-4.311529,3.394691,3.030318,6.887545,-4.712749,5.962812,4.460827,-7.874908,7.873311,2.817439,3.348001,6.641523,6.063040,7.851721,9.790341,-0.787342,4.472436,7.729918,0.443134,-1.077551,-7.838655,-4.247822,-6.720917,-5.676921,-1.323334,-2.524770,-3.339509,-8.988558,-9.268637,2.325682,-5.848962,9.545125,0.596119,-9.261108,1.515564,-2.833562,-6.141557,6.383880,-5.348242,0.125387,-3.628738,-5.011887,3.563916,-9.285181,2.336318,-7.924861,5.150011,1.948346,-2.217359,-8.473227,-8.269008,-5.706962,1.976181,5.070002,0.052222,-9.063995,0.806961,-8.043564,0.732083,-5.986704,-0.712382,-0.669587,-3.995782,-6.208331,-5.459855,-7.549937,-1.534469,5.327266,0.945271,1.943402,5.210213,-9.516648,-4.613436,-0.291035,0.056450,-9.636645,6.607492,-4.050302,-6.488152,-9.986244,6.934684,9.304459,8.928311,7.647495,-2.410432,1.935364,5.690806], dtype = "float32")#candidate|14341|(90,)|const|float32
call_14338 = relay.TupleGetItem(func_14273_call(relay.reshape(var_14339.astype('uint16'), [18, 4]), relay.reshape(const_14296.astype('float64'), [30,]), relay.reshape(var_14340.astype('float32'), [12, 32]), relay.reshape(const_14322.astype('uint64'), []), relay.reshape(const_14341.astype('float32'), [90,]), ), 1)
call_14342 = relay.TupleGetItem(func_14279_call(relay.reshape(var_14339.astype('uint16'), [18, 4]), relay.reshape(const_14296.astype('float64'), [30,]), relay.reshape(var_14340.astype('float32'), [12, 32]), relay.reshape(const_14322.astype('uint64'), []), relay.reshape(const_14341.astype('float32'), [90,]), ), 1)
func_4933_call = mod.get_global_var('func_4933')
func_4937_call = mutated_mod.get_global_var('func_4937')
call_14347 = relay.TupleGetItem(func_4933_call(relay.reshape(var_14339.astype('uint16'), [4, 2, 9]), relay.reshape(const_14324.astype('float32'), [15, 63]), relay.reshape(call_14294.astype('float64'), [30,]), ), 4)
call_14348 = relay.TupleGetItem(func_4937_call(relay.reshape(var_14339.astype('uint16'), [4, 2, 9]), relay.reshape(const_14324.astype('float32'), [15, 63]), relay.reshape(call_14294.astype('float64'), [30,]), ), 4)
uop_14350 = relay.sigmoid(const_14295.astype('float32')) # shape=(1694,)
output = relay.Tuple([call_14284,call_14294,const_14296,call_14320,const_14321,const_14322,const_14323,const_14324,call_14326,call_14338,var_14339,var_14340,const_14341,call_14347,uop_14350,])
output2 = relay.Tuple([call_14285,call_14297,const_14296,call_14325,const_14321,const_14322,const_14323,const_14324,call_14327,call_14342,var_14339,var_14340,const_14341,call_14348,uop_14350,])
func_14356 = relay.Function([var_14339,var_14340,], output)
mod['func_14356'] = func_14356
mod = relay.transform.InferType()(mod)
mutated_mod['func_14356'] = func_14356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14356_call = mutated_mod.get_global_var('func_14356')
var_14358 = relay.var("var_14358", dtype = "uint16", shape = (72,))#candidate|14358|(72,)|var|uint16
var_14359 = relay.var("var_14359", dtype = "float32", shape = (384,))#candidate|14359|(384,)|var|float32
call_14357 = func_14356_call(var_14358,var_14359,)
output = call_14357
func_14360 = relay.Function([var_14358,var_14359,], output)
mutated_mod['func_14360'] = func_14360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13341_call = mod.get_global_var('func_13341')
func_13342_call = mutated_mod.get_global_var('func_13342')
call_14395 = relay.TupleGetItem(func_13341_call(), 1)
call_14396 = relay.TupleGetItem(func_13342_call(), 1)
func_9071_call = mod.get_global_var('func_9071')
func_9074_call = mutated_mod.get_global_var('func_9074')
const_14411 = relay.const([-3,4,-2,1,-3,5,2,-9,6,4,4,-4,4,-1,-10,-1,-5,-5,7,10,-8,3,4,3,-5,6,2,-10,1,-3,2,-5,8,-3,-7,-4,-7,-3,1,4,4,5,1,2,-5,-2,10,3,7,-4,8,-7,7,7,-9,-1,-1,9,-2,-6,8,5,7,-8,1,-1,10,-5,10,-4,-2,-2,-1,-7,-1,-1,10,9,-1,4,-10,2,-2,6,8,-3,-5,5,5,1,4,-7,8,-4,4,5,-10,4,6,4,-10,-6,1,4,-3,5,7,-4,9,-7,5,-9,-1,-6,4,2,-6,-10,-8,-4,9,10,1,-4,3,5,3,4,-6,-2,-10,-4,-1,-5,9,3,1,6,9,-4,1,-2,-5,10,-7,-2,7,3,-2,-10,-10,-3,-6,4,-8,2,10,-4,10,-6,8,-4,-8,6,9,-5,9,-9,4,2,2,1,-8,6,-1,-7,-4,6,9,-4,-8,-7,-6,1,2,3,-9,-9,-1,9,9,5,-6,-7,-4,3,-1,-8,1,-6,7,10,-4,-5,3,-9,9,-10,-4,9,-10,-10,7,6,1,2,1,-4,-8,-2,-4,-5,-6,7,2,9,-10,-10,9,4,8,-8,7,-6,4,8,-10,2,-8,5,4,-1,-5,3,9,-5,-3,-9,-8,5,-2,1,-6,5,3,5,4,-4,-10,-4,-2,9,-4,6,-3,4,-4,5,-10,-5,2,2,9,-6,1,-10,-9,-2,7,-4,9,-4,-7,-4,-3,1,10,-3,7,7,-1,5,-6,-4,-3,1,-8,-6,8,-1,-6,6,4,-4,-9,3,8,2,4,-6,4,-10,4,7,-5,-3,-1,-8,8,-9,5,-9,-9,6,4,-10,-1,1,8,9,8,-4,-1,-5,-4,-6,-8,1,-5,-1,-1,9,3,9,-10,3,-10,-7,9,10,10,-2,10,-4,-2,-5,-5,-7,4,10,-4,-2,-1,-5,-4,-4,10,1,-3,4,1,10,-4,4,5,-2,8,3,-4,10,3,2,-1,-3,9,10,9,-6,9,8,6,4,5,-5,-8,-9,-6,4,6,-2,9,5,-3,8,2,7,10,-4,-1,-6,-2,9,5,-9,-3,6,-4,9,-1,-3,-6,1,-4,-1,-3,-3,9,7,7,5,-9,-3,9,4,10,-2,-10,10,-7,-8,-7,9,4,2,-4,-3,-7,5,8,-7,-7,-5,-2,-10,8,-1,-10,1,-8,5,-9,2,5,-3,9,1,8,10,3,-9,9,-7,2,-10,10,-10,-2,-6,-2,-9,-8,-6,10,-4,-7,5,-5,-2,10,-5,7,-9,2,7,-4,-6,9,-9,-9,2,-6,-1,-9,7,-6,10,-2,4,6,-7,-8,-5,4,-5,-6,8,-6,-4,3,-6,6,2,-9,-1,10,7,4,4,-5,2,10,3,10,-2,-9,-1,6,-4,-4,2,-6,1,-3,7,-5,-9,-8,10,-10,-2,-1,-5,-8,4,5,-5,6,-10,-10,9,5,-2,-10,2,5,10,-6,-6,5,8,5,2,9,2,-10,-9,-7,-7,-3,9,-2,-7,8,-3,-3,-5,-4,2,1,-7,3,6,-6,10,-2,9,-10,2,-10,-2,-6,1,-8,-7,7,9,-9,9,-10,5,10,7,10,9,-4,5,10,2,-9,6,-5,5,2,7,4,5,6,3,1,8,-3,-5,-8,-10,10,-4,-2,6,2,-7,5,-2,4,-9,-7,8,9,-4,4,6,9,6,-9,-7,-6,-9,6,6,-7,5,-3,8,10,-10,6,-6,-8,-8,5,-9,-2,5,-10,-10,-5,2,1,1,2,4,9,-4,-4,-3,-10,3,-1,-1,-9,-9,-7,-2,3,-10,5,2,5,3,10,10,8,-1,-2,-1,5,-5,5,3,-3,2,4,-3,1,10,-2,1,-6,1,7,10,6,-6,-5,8,9,-7,5,4,6,7,-6,9,3,9,6,5,7,2,10,9,1,6,5,-1,-6,10,7,4,-1,-3,4,-8,7,2,-1,9,-8,7,-7,-6,-7,2,6,-7,9,-6,5,-4,4,-2,-9,-7,7,2,-2,-6,-5,-6,-6,-9,-2,10,9,-2,1,7,6,-7,-6,9,-7,1,-7,2,10,8,6,-1,-1,-7,-8,2,-6,1,10,-4,-6,1,-1,-7,-6,-7,5,9,-3,-10,-1,-5,3,-1,-7,-2,-1,6,-5,5,8,-4,-9,10,-9,3,1,7,3,7,-6,-2,-9,8,-3,-5,-4,5,2,-5,4,-3,5,10,-9,-9,5,1,-2,-10,-2,6,-4,9,-4,10,-2,2,-2,-5,-9,-7,8,10,9,-4,7,-6,1,-8,2,3,-1,-1,-9,-6,-3,-7,-3,10,9,4,4,-6,7,-9,5,3,1,9,-2,-2,-9,5,-6,-5,-9,-10,1,7,1,9,2,-2,-5,4,-7,4,5,-2,-4,-3,-8,-5,8,-6,-2,7,-6,6,1,1,-8,5,-4,-2,4,1,-10,-10,2,1,3,-7,-8,-4,-7,-8,2,8,-2,4,10,9,-6,8,7,2,-9,2,-4,-6,-1,-3,10,9,-4,8,-2,3,6,-6,3,6,6,7,2,10,10,8,-7,-1,-2,6,-6,2,10,-8,7,-3,1,5,-5,-9,-10,-6,4,9,-6,9,-2,5,-10,-5], dtype = "uint8")#candidate|14411|(1000,)|const|uint8
call_14410 = func_9071_call(relay.reshape(const_14411.astype('uint8'), [10, 10, 10]))
call_14412 = func_9071_call(relay.reshape(const_14411.astype('uint8'), [10, 10, 10]))
func_6113_call = mod.get_global_var('func_6113')
func_6119_call = mutated_mod.get_global_var('func_6119')
const_14414 = relay.const([8,8,9,-3,-9,9,9,-2,6,5,-9,9,-4,-6,-9,-4,4,-9], dtype = "int64")#candidate|14414|(18,)|const|int64
var_14415 = relay.var("var_14415", dtype = "int64", shape = (162,))#candidate|14415|(162,)|var|int64
var_14416 = relay.var("var_14416", dtype = "float32", shape = (792,))#candidate|14416|(792,)|var|float32
call_14413 = relay.TupleGetItem(func_6113_call(relay.reshape(const_14414.astype('int64'), [9, 1, 2]), relay.reshape(var_14415.astype('int64'), [9, 9, 2]), relay.reshape(var_14416.astype('float32'), [792,]), relay.reshape(call_14395.astype('float32'), [30,]), ), 5)
call_14417 = relay.TupleGetItem(func_6119_call(relay.reshape(const_14414.astype('int64'), [9, 1, 2]), relay.reshape(var_14415.astype('int64'), [9, 9, 2]), relay.reshape(var_14416.astype('float32'), [792,]), relay.reshape(call_14395.astype('float32'), [30,]), ), 5)
uop_14447 = relay.acosh(var_14416.astype('float64')) # shape=(792,)
output = relay.Tuple([call_14395,call_14410,const_14411,call_14413,const_14414,var_14415,uop_14447,])
output2 = relay.Tuple([call_14396,call_14412,const_14411,call_14417,const_14414,var_14415,uop_14447,])
func_14470 = relay.Function([var_14415,var_14416,], output)
mod['func_14470'] = func_14470
mod = relay.transform.InferType()(mod)
mutated_mod['func_14470'] = func_14470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14470_call = mutated_mod.get_global_var('func_14470')
var_14472 = relay.var("var_14472", dtype = "int64", shape = (162,))#candidate|14472|(162,)|var|int64
var_14473 = relay.var("var_14473", dtype = "float32", shape = (792,))#candidate|14473|(792,)|var|float32
call_14471 = func_14470_call(var_14472,var_14473,)
output = call_14471
func_14474 = relay.Function([var_14472,var_14473,], output)
mutated_mod['func_14474'] = func_14474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13341_call = mod.get_global_var('func_13341')
func_13342_call = mutated_mod.get_global_var('func_13342')
call_14534 = relay.TupleGetItem(func_13341_call(), 0)
call_14535 = relay.TupleGetItem(func_13342_call(), 0)
output = call_14534
output2 = call_14535
func_14536 = relay.Function([], output)
mod['func_14536'] = func_14536
mod = relay.transform.InferType()(mod)
mutated_mod['func_14536'] = func_14536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14536_call = mutated_mod.get_global_var('func_14536')
call_14537 = func_14536_call()
output = call_14537
func_14538 = relay.Function([], output)
mutated_mod['func_14538'] = func_14538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13589_call = mod.get_global_var('func_13589')
func_13590_call = mutated_mod.get_global_var('func_13590')
call_14539 = func_13589_call()
call_14540 = func_13589_call()
output = relay.Tuple([call_14539,])
output2 = relay.Tuple([call_14540,])
func_14546 = relay.Function([], output)
mod['func_14546'] = func_14546
mod = relay.transform.InferType()(mod)
output = func_14546()
func_14547 = relay.Function([], output)
mutated_mod['func_14547'] = func_14547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13589_call = mod.get_global_var('func_13589')
func_13590_call = mutated_mod.get_global_var('func_13590')
call_14552 = func_13589_call()
call_14553 = func_13589_call()
var_14554 = relay.var("var_14554", dtype = "float64", shape = (10, 3, 16))#candidate|14554|(10, 3, 16)|var|float64
bop_14555 = relay.subtract(call_14552.astype('int32'), var_14554.astype('int32')) # shape=(10, 3, 16)
bop_14558 = relay.subtract(call_14553.astype('int32'), var_14554.astype('int32')) # shape=(10, 3, 16)
output = relay.Tuple([bop_14555,])
output2 = relay.Tuple([bop_14558,])
F = relay.Function([var_14554,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_14554,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

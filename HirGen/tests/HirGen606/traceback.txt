==========mod==========
#[version = "0.0.5"]
def @func_3336(%var_3292: Tensor[(16, 15, 12), int32], %var_3293: Tensor[(16, 15, 12), int32], %var_3307: Tensor[(30), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) {
  %0 = cast(%var_3293, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %1 = shape_of(%var_3292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_3292, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %5 = cast(%var_3307, dtype="float64") /* ty=Tensor[(30), float64] */;
  %6 = reshape(%4, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %7 = reshape(%5, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
  %8 = @func_651(%6, %7) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %10 = cast(%var_3307, dtype="float64") /* ty=Tensor[(30), float64] */;
  %11 = reshape(%9, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %12 = reshape(%10, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %13 = @func_567(%11, %12) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */;
  %14 = equal(%2, %3) /* ty=Tensor[(16, 15, 12), bool] */;
  %15 = %8.0;
  %16 = %13.1;
  (%14, %15, meta[relay.Constant][0] /* ty=Tensor[(945), float32] */, %var_3307, %16)
}

def @func_7292(%var_7289: Tensor[(8, 2, 1), float64]) -> (Tensor[(8, 2, 1), float64],) {
  %17 = cast(%var_7289, dtype="float64") /* ty=Tensor[(8, 2, 1), float64] */;
  %18 = acosh(%17) /* ty=Tensor[(8, 2, 1), float64] */;
  (%18,)
}

def @func_3879(%var_3864: Tensor[(1, 8, 1), float32]) -> (Tensor[(1, 8, 1), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32]) {
  %19 = cast(%var_3864, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %21 = reshape(%20, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %22 = sinh(%19) /* ty=Tensor[(1, 8, 1), float32] */;
  %23 = @func_2408(%21) /* ty=Tensor[(2, 15, 15), float32] */;
  (%22, %23, meta[relay.Constant][1] /* ty=Tensor[(30), float32] */)
}

def @func_11348(%var_11312: Tensor[(7, 16, 2), float32], %var_11315: Tensor[(7, 16, 2), float32]) -> Tensor[(7, 16, 2), int32] {
  %24 = cast(%var_11312, dtype="float32") /* ty=Tensor[(7, 16, 2), float32] */;
  %25 = asinh(%24) /* ty=Tensor[(7, 16, 2), float32] */;
  %26 = cast(%var_11315, dtype="int32") /* ty=Tensor[(7, 16, 2), int32] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%25, dtype="int32") /* ty=Tensor[(7, 16, 2), int32] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%28, %29) /* ty=Tensor[(7, 16, 2), int32] */
}

def @func_13942(%var_13920: Tensor[(90), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(90), float32], Tensor[(10, 3), float64], Tensor[(16, 9, 14), float64]) {
  %30 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %31 = cast(%var_13920, dtype="float32") /* ty=Tensor[(90), float32] */;
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %33 = reshape(%31, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %34 = reshape(%32, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %35 = @func_11122(%33, %34) /* ty=(Tensor[(16, 9, 14), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(6), bool]) */;
  %36 = %35.0;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(16, 9, 14), float64] */;
  %38 = %30.0;
  %39 = sinh(%37) /* ty=Tensor[(16, 9, 14), float64] */;
  (%38, %var_13920, meta[relay.Constant][2] /* ty=Tensor[(10, 3), float64] */, %39)
}

def @func_12998() -> (Tensor[(10, 1, 16), float64],) {
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 1, 16), float64] */;
  %41 = sin(%40) /* ty=Tensor[(10, 1, 16), float64] */;
  (%41,)
}

def @func_6113(%var_6038: Tensor[(9, 1, 2), int64], %var_6039: Tensor[(9, 9, 2), int64], %var_6083: Tensor[(792), float32], %var_6091: Tensor[(30), float32]) -> (Tensor[(9, 9, 2), int64], Tensor[(792), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(8, 2, 7), bool], Tensor[(3, 3, 3), float32]) {
  %42 = cast(%var_6038, dtype="int64") /* ty=Tensor[(9, 1, 2), int64] */;
  %43 = cast(%var_6039, dtype="int64") /* ty=Tensor[(9, 9, 2), int64] */;
  %44 = cast(%var_6091, dtype="float32") /* ty=Tensor[(30), float32] */;
  %45 = reshape(%44, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %46 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 56), bool] */, dtype="bool") /* ty=Tensor[(2, 56), bool] */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 56), bool] */, dtype="bool") /* ty=Tensor[(2, 56), bool] */;
  %48 = reshape(%46, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), bool] */;
  %49 = reshape(%47, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), bool] */;
  %50 = @func_5115(%48, %49) /* ty=Tensor[(8, 2, 7), bool] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 56), bool] */, dtype="int16") /* ty=Tensor[(2, 56), int16] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%50, dtype="int16") /* ty=Tensor[(8, 2, 7), int16] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %55 = multiply(%53, %54) /* ty=Tensor[(8, 2, 7), int16] */;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 56), bool] */, dtype="bool") /* ty=Tensor[(2, 56), bool] */;
  %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%55, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %61 = cast(meta[relay.Constant][5] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %62 = cast(%var_6083, dtype="float32") /* ty=Tensor[(792), float32] */;
  %63 = reshape(%60, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %64 = reshape(%61, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %65 = reshape(%62, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %66 = @func_5607(%63, %64, %65) /* ty=(Tensor[(3, 3, 3), float64], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */;
  %67 = %66.0;
  %68 = cast(meta[relay.Constant][5] /* ty=Tensor[(27), float64] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %69 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%67, dtype="float32") /* ty=Tensor[(3, 3, 3), float32] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %72 = subtract(%42, %43) /* ty=Tensor[(9, 9, 2), int64] */;
  %73 = @func_2408(%45) /* ty=Tensor[(2, 15, 15), float32] */;
  %74 = greater(%58, %59) /* ty=Tensor[(8, 2, 7), bool] */;
  %75 = power(%70, %71) /* ty=Tensor[(3, 3, 3), float32] */;
  (%72, %var_6083, %73, %var_6091, %74, %75)
}

def @func_13181(%var_13127: Tensor[(384), float32], %var_13128: uint64, %var_13170: Tensor[(320), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(384), float32], Tensor[(936, 2), float32], Tensor[(16, 4, 5), float64], Tensor[(320), float64]) {
  %76 = @func_13069() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %77 = cast(%var_13127, dtype="float32") /* ty=Tensor[(384), float32] */;
  %78 = cast(%var_13128, dtype="uint64") /* ty=uint64 */;
  %79 = reshape(%77, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float32] */;
  %80 = reshape(%78, newshape=[]) /* ty=uint64 */;
  %81 = @func_6415(%79, %80) /* ty=(Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) */;
  %82 = %81.3;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(936, 2), float32] */;
  %84 = cast(%var_13128, dtype="float32") /* ty=float32 */;
  %85 = cast(%var_13170, dtype="float64") /* ty=Tensor[(320), float64] */;
  %86 = reshape(%85, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float64] */;
  %87 = %76.0;
  %88 = floor_divide(%83, %84) /* ty=Tensor[(936, 2), float32] */;
  %89 = @func_10849(%86) /* ty=Tensor[(16, 4, 5), float64] */;
  (%87, %var_13127, %88, %89, %var_13170)
}

def @func_14546() -> (Tensor[(10, 1, 16), float64],) {
  %90 = @func_13589() /* ty=Tensor[(10, 1, 16), float64] */;
  (%90,)
}

def @func_13341() -> (Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) {
  %91 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %92 = cast(meta[relay.Constant][6] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %93 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 6), bool] */, dtype="bool") /* ty=Tensor[(1, 6), bool] */;
  %94 = cast(meta[relay.Constant][8] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %95 = reshape(%92, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float32] */;
  %96 = reshape(%93, newshape=[3, 2]) /* ty=Tensor[(3, 2), bool] */;
  %97 = reshape(%94, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %98 = @func_2727(%95, %96, %97) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */;
  %99 = %91.0;
  %100 = %98.6;
  (%99, %100, meta[relay.Constant][6] /* ty=Tensor[(260), float32] */, meta[relay.Constant][7] /* ty=Tensor[(1, 6), bool] */, meta[relay.Constant][8] /* ty=Tensor[(30), float64] */)
}

def @func_8706(%var_8642: Tensor[(8, 11, 12), float32], %var_8655: Tensor[(108), float64], %var_8659: Tensor[(30), float64], %var_8675: Tensor[(72), uint16], %var_8702: Tensor[(8), float32], %var_8703: Tensor[(1872), uint64], %var_8704: Tensor[(96, 4), float32]) -> (Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(5, 189), float32], Tensor[(30), float64], Tensor[(8, 11, 12), float32], Tensor[(30), float32], Tensor[(72), uint16], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(14, 10, 8), float64], Tensor[(81, 10), int32], Tensor[(8), float32], Tensor[(1872), uint64], Tensor[(96, 4), float32]) {
  %101 = cast(%var_8655, dtype="float64") /* ty=Tensor[(108), float64] */;
  %102 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %103 = cast(meta[relay.Constant][9] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %104 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 189), float32] */, dtype="float32") /* ty=Tensor[(5, 189), float32] */;
  %105 = cast(%var_8659, dtype="float64") /* ty=Tensor[(30), float64] */;
  %106 = reshape(%101, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %107 = reshape(%102, newshape=[]) /* ty=bool */;
  %108 = reshape(%103, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
  %109 = reshape(%104, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %110 = reshape(%105, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %111 = @func_2553(%106, %107, %108, %109, %110) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
  %112 = cast(%var_8642, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %113 = log2(%112) /* ty=Tensor[(8, 11, 12), float32] */;
  %114 = cast(%113, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %115 = cast(%var_8675, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %116 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 189), float32] */, dtype="float32") /* ty=Tensor[(5, 189), float32] */;
  %117 = cast(%var_8659, dtype="float64") /* ty=Tensor[(30), float64] */;
  %118 = reshape(%115, newshape=[4, 2, 9]) /* ty=Tensor[(4, 2, 9), uint16] */;
  %119 = reshape(%116, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %120 = reshape(%117, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %121 = @func_4933(%118, %119, %120) /* ty=(Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) */;
  %122 = cast(meta[relay.Constant][11] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %123 = reshape(%122, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %124 = @func_5153(%123) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %125 = cast(meta[relay.Constant][12] /* ty=Tensor[(81, 10), int32] */, dtype="int32") /* ty=Tensor[(81, 10), int32] */;
  %126 = cast(meta[relay.Constant][12] /* ty=Tensor[(81, 10), int32] */, dtype="int32") /* ty=Tensor[(81, 10), int32] */;
  %127 = cast(%var_8702, dtype="float32") /* ty=Tensor[(8), float32] */;
  %128 = cast(%var_8703, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %129 = cast(%var_8704, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %130 = reshape(%125, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int32] */;
  %131 = reshape(%126, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int32] */;
  %132 = reshape(%127, newshape=[8]) /* ty=Tensor[(8), float32] */;
  %133 = reshape(%128, newshape=[1872]) /* ty=Tensor[(1872), uint64] */;
  %134 = reshape(%129, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
  %135 = @func_8292(%130, %131, %132, %133, %134) /* ty=(Tensor[(15, 6, 9), int32], Tensor[(30), float32], Tensor[(8), float32], Tensor[(16, 9, 13), uint64], Tensor[(1872), uint64], Tensor[(14, 10, 8), float64], Tensor[(16, 2, 12), float64], Tensor[(6, 64), float32], Tensor[(560, 2), uint64]) */;
  %136 = %111.4;
  %137 = acosh(%114) /* ty=Tensor[(8, 11, 12), float32] */;
  %138 = %121.5;
  %139 = %124.0;
  %140 = %135.5;
  (%136, %var_8655, True /* ty=bool */, meta[relay.Constant][9] /* ty=Tensor[(6), bool] */, meta[relay.Constant][10] /* ty=Tensor[(5, 189), float32] */, %var_8659, %137, %138, %var_8675, %139, meta[relay.Constant][11] /* ty=Tensor[(792), float32] */, %140, meta[relay.Constant][12] /* ty=Tensor[(81, 10), int32] */, %var_8702, %var_8703, %var_8704)
}

def @func_13560(%var_13551: Tensor[(9, 6, 6), float64]) -> (Tensor[(10, 1, 16), float64], int16, Tensor[(90), int16], Tensor[(13, 4, 5), float32], Tensor[(260), float32], Tensor[(30), float64], Tensor[(9, 6, 6), bool]) {
  %141 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %142 = cast(meta[relay.Constant][15] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %143 = cast(meta[relay.Constant][13] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %144 = cast(meta[relay.Constant][14] /* ty=Tensor[(90), int16] */, dtype="int16") /* ty=Tensor[(90), int16] */;
  %145 = reshape(%143, newshape=[]) /* ty=int16 */;
  %146 = reshape(%144, newshape=[1, 6, 15]) /* ty=Tensor[(1, 6, 15), int16] */;
  %147 = @func_1072(%145, %146) /* ty=(Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) */;
  %148 = %147.3;
  %149 = cast(%148, dtype="float64") /* ty=Tensor[(1, 1, 6), float64] */;
  %150 = asin(%149) /* ty=Tensor[(1, 1, 6), float64] */;
  %151 = cast(%150, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %152 = cast(meta[relay.Constant][16] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %153 = reshape(%142, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float32] */;
  %154 = reshape(%151, newshape=[3, 2]) /* ty=Tensor[(3, 2), bool] */;
  %155 = reshape(%152, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %156 = @func_2727(%153, %154, %155) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */;
  %157 = cast(%150, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %158 = cast(%var_13551, dtype="bool") /* ty=Tensor[(9, 6, 6), bool] */;
  %159 = %141.0;
  %160 = %156.0;
  %161 = logical_and(%157, %158) /* ty=Tensor[(9, 6, 6), bool] */;
  (%159, meta[relay.Constant][13] /* ty=int16 */, meta[relay.Constant][14] /* ty=Tensor[(90), int16] */, %160, meta[relay.Constant][15] /* ty=Tensor[(260), float32] */, meta[relay.Constant][16] /* ty=Tensor[(30), float64] */, %161)
}

def @func_7150(%var_7122: Tensor[(4, 13, 3), uint8]) -> Tensor[(4, 13, 3), uint8] {
  %162 = cast(%var_7122, dtype="uint8") /* ty=Tensor[(4, 13, 3), uint8] */;
  %163 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(4, 13, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 13, 3), uint8] */, dtype="uint8") /* ty=Tensor[(4, 13, 3), uint8] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%164, %165) /* ty=Tensor[(4, 13, 3), uint8] */
}

def @func_13414(%var_13397: Tensor[(5, 3, 1), int32]) -> (Tensor[(5, 3, 1), float64], Tensor[(7, 16, 2), int32], Tensor[(224), float32]) {
  %166 = cast(-9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %167 = cast(%var_13397, dtype="int32") /* ty=Tensor[(5, 3, 1), int32] */;
  %168 = subtract(%166, %167) /* ty=Tensor[(5, 3, 1), int32] */;
  %169 = cast(%168, dtype="float64") /* ty=Tensor[(5, 3, 1), float64] */;
  %170 = cast(meta[relay.Constant][18] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %171 = cast(meta[relay.Constant][18] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %172 = reshape(%170, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), float32] */;
  %173 = reshape(%171, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), float32] */;
  %174 = atanh(%169) /* ty=Tensor[(5, 3, 1), float64] */;
  %175 = @func_11348(%172, %173) /* ty=Tensor[(7, 16, 2), int32] */;
  (%174, %175, meta[relay.Constant][18] /* ty=Tensor[(224), float32] */)
}

def @func_651(%var_648: Tensor[(945), float32], %var_649: Tensor[(1, 30), float64]) -> (Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) {
  %176 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 6, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 9), float32] */;
  %177 = cast(%var_648, dtype="float32") /* ty=Tensor[(945), float32] */;
  %178 = cast(%var_649, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
  %179 = reshape(%177, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %180 = reshape(%178, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %181 = @func_567(%179, %180) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */;
  %182 = acosh(%176) /* ty=Tensor[(15, 6, 9), float32] */;
  %183 = %181.2;
  (%182, %183, %var_648, %var_649)
}

def @func_13756(%var_13693: uint16, %var_13694: Tensor[(16, 8, 9), uint16]) -> (Tensor[(10, 1, 16), float64], Tensor[(16, 8, 9), float64]) {
  %184 = @func_13069() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %185 = cast(%var_13693, dtype="uint16") /* ty=uint16 */;
  %186 = cast(%var_13694, dtype="uint16") /* ty=Tensor[(16, 8, 9), uint16] */;
  %187 = bitwise_and(%185, %186) /* ty=Tensor[(16, 8, 9), uint16] */;
  %188 = cast(%187, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
  %189 = %184.0;
  %190 = log2(%188) /* ty=Tensor[(16, 8, 9), float64] */;
  (%189, %190)
}

def @func_4055(%var_4035: Tensor[(15, 2, 15), int32], %var_4036: Tensor[(15, 2, 15), int32], %var_4048: Tensor[(22), float64]) -> (Tensor[(15, 2, 15), bool], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64]) {
  %191 = cast(%var_4036, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
  %192 = shape_of(%var_4035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%var_4035, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %195 = cast(%var_4048, dtype="float64") /* ty=Tensor[(22), float64] */;
  %196 = cast(meta[relay.Constant][20] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %197 = reshape(%195, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float64] */;
  %198 = reshape(%196, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), float64] */;
  %199 = greater(%193, %194) /* ty=Tensor[(15, 2, 15), bool] */;
  %200 = @func_3373(%197, %198) /* ty=Tensor[(2, 12, 11), float32] */;
  (%199, %200, %var_4048, meta[relay.Constant][20] /* ty=Tensor[(264), float64] */)
}

def @func_6518(%var_6478: Tensor[(9, 5, 4), float32], %var_6514: int16, %var_6515: Tensor[(90), int16]) -> (Tensor[(9, 5, 4), float32], Tensor[(2, 936), uint64], int16, Tensor[(90), int16]) {
  %201 = cast(%var_6478, dtype="float32") /* ty=Tensor[(9, 5, 4), float32] */;
  %202 = cast(%var_6514, dtype="int16") /* ty=int16 */;
  %203 = cast(%var_6515, dtype="int16") /* ty=Tensor[(90), int16] */;
  %204 = reshape(%202, newshape=[]) /* ty=int16 */;
  %205 = reshape(%203, newshape=[1, 6, 15]) /* ty=Tensor[(1, 6, 15), int16] */;
  %206 = @func_1072(%204, %205) /* ty=(Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) */;
  %207 = log(%201) /* ty=Tensor[(9, 5, 4), float32] */;
  %208 = %206.2;
  (%207, %208, %var_6514, %var_6515)
}

def @func_5607(%var_5594: Tensor[(3, 3, 3), float64], %var_5595: Tensor[(3, 3, 3), float64], %var_5603: Tensor[(792), float32]) -> (Tensor[(3, 3, 3), float64], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) {
  %209 = cast(%var_5595, dtype="float64") /* ty=Tensor[(3, 3, 3), float64] */;
  %210 = shape_of(%var_5594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%var_5594, dtype="float64") /* ty=Tensor[(3, 3, 3), float64] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %213 = cast(%var_5603, dtype="float32") /* ty=Tensor[(792), float32] */;
  %214 = reshape(%213, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %215 = @func_5153(%214) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %216 = divide(%211, %212) /* ty=Tensor[(3, 3, 3), float64] */;
  %217 = %215.0;
  (%216, %217, %var_5603)
}

def @func_14536() -> Tensor[(10, 1, 16), float64] {
  %218 = @func_13341() /* ty=(Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) */;
  %218.0
}

def @func_206(%var_173: Tensor[(14, 11, 13), int32], %var_174: Tensor[(14, 11, 13), int32], %var_196: bool) -> (Tensor[(14, 11, 13), int32], Tensor[(1, 1, 6), bool], bool, Tensor[(3, 2), bool]) {
  %219 = cast(%var_174, dtype="int32") /* ty=Tensor[(14, 11, 13), int32] */;
  %220 = shape_of(%var_173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%var_173, dtype="int32") /* ty=Tensor[(14, 11, 13), int32] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %223 = cast(%var_196, dtype="bool") /* ty=bool */;
  %224 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 2), bool] */, dtype="bool") /* ty=Tensor[(3, 2), bool] */;
  %225 = reshape(%223, newshape=[]) /* ty=bool */;
  %226 = reshape(%224, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), bool] */;
  %227 = @func_64(%225, %226) /* ty=(Tensor[(1, 1, 6), bool],) */;
  %228 = minimum(%221, %222) /* ty=Tensor[(14, 11, 13), int32] */;
  %229 = %227.0;
  (%228, %229, %var_196, meta[relay.Constant][21] /* ty=Tensor[(3, 2), bool] */)
}

def @func_10312(%var_10264: Tensor[(14, 6, 14), uint8], %var_10301: Tensor[(14, 6, 14), uint8]) -> (Tensor[(14, 6, 14), uint8], Tensor[(14, 6, 14), bool], Tensor[(14, 6, 14), float64]) {
  %230 = cast(%var_10264, dtype="uint8") /* ty=Tensor[(14, 6, 14), uint8] */;
  %231 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(14, 6, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 6, 14), uint8] */, dtype="uint8") /* ty=Tensor[(14, 6, 14), uint8] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %234 = cast(%var_10301, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
  %235 = shape_of(%var_10264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_10264, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %238 = cast(%var_10301, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
  %239 = bitwise_or(%232, %233) /* ty=Tensor[(14, 6, 14), uint8] */;
  %240 = logical_or(%236, %237) /* ty=Tensor[(14, 6, 14), bool] */;
  %241 = asin(%238) /* ty=Tensor[(14, 6, 14), float64] */;
  (%239, %240, %241)
}

def @func_14156(%var_14144: Tensor[(30), float32]) -> (Tensor[(260), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(14, 6, 4), float32], Tensor[(1, 336), float32]) {
  %242 = @func_13643() /* ty=(Tensor[(260), float32],) */;
  %243 = cast(%var_14144, dtype="float32") /* ty=Tensor[(30), float32] */;
  %244 = reshape(%243, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %245 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 336), float32] */, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
  %246 = reshape(%245, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
  %247 = %242.0;
  %248 = @func_2408(%244) /* ty=Tensor[(2, 15, 15), float32] */;
  %249 = @func_6245(%246) /* ty=Tensor[(14, 6, 4), float32] */;
  (%247, %248, %var_14144, %249, meta[relay.Constant][23] /* ty=Tensor[(1, 336), float32] */)
}

def @func_8292(%var_8239: Tensor[(15, 6, 9), int32], %var_8240: Tensor[(15, 6, 9), int32], %var_8245: Tensor[(8), float32], %var_8250: Tensor[(1872), uint64], %var_8274: Tensor[(6, 64), float32]) -> (Tensor[(15, 6, 9), int32], Tensor[(30), float32], Tensor[(8), float32], Tensor[(16, 9, 13), uint64], Tensor[(1872), uint64], Tensor[(14, 10, 8), float64], Tensor[(16, 2, 12), float64], Tensor[(6, 64), float32], Tensor[(560, 2), uint64]) {
  %250 = cast(%var_8240, dtype="int32") /* ty=Tensor[(15, 6, 9), int32] */;
  %251 = shape_of(%var_8239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_8239, dtype="int32") /* ty=Tensor[(15, 6, 9), int32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %254 = cast(%var_8245, dtype="float32") /* ty=Tensor[(8), float32] */;
  %255 = reshape(%254, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float32] */;
  %256 = @func_3879(%255) /* ty=(Tensor[(1, 8, 1), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32]) */;
  %257 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %258 = cast(%var_8250, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %259 = reshape(%257, newshape=[]) /* ty=uint64 */;
  %260 = reshape(%258, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), uint64] */;
  %261 = @func_810(%259, %260) /* ty=(Tensor[(16, 9, 13), uint64],) */;
  %262 = cast(meta[relay.Constant][25] /* ty=Tensor[(560, 2), float64] */, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
  %263 = cast(meta[relay.Constant][25] /* ty=Tensor[(560, 2), float64] */, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
  %264 = reshape(%262, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
  %265 = reshape(%263, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
  %266 = cast(%var_8274, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %267 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %268 = reshape(%266, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float32] */;
  %269 = reshape(%267, newshape=[]) /* ty=uint64 */;
  %270 = @func_6415(%268, %269) /* ty=(Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) */;
  %271 = cast(meta[relay.Constant][25] /* ty=Tensor[(560, 2), float64] */, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
  %272 = atanh(%271) /* ty=Tensor[(560, 2), float64] */;
  %273 = cast(%272, dtype="uint64") /* ty=Tensor[(560, 2), uint64] */;
  %274 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %275 = bitwise_and(%252, %253) /* ty=Tensor[(15, 6, 9), int32] */;
  %276 = %256.2;
  %277 = %261.0;
  %278 = @func_2670(%264, %265) /* ty=Tensor[(14, 10, 8), float64] */;
  %279 = %270.6;
  %280 = right_shift(%273, %274) /* ty=Tensor[(560, 2), uint64] */;
  (%275, %276, %var_8245, %277, %var_8250, %278, %279, %var_8274, %280)
}

def @func_6889(%var_6886: Tensor[(14, 3, 11), float32]) -> Tensor[(14, 3, 11), float32] {
  %281 = cast(%var_6886, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
  acosh(%281) /* ty=Tensor[(14, 3, 11), float32] */
}

def @func_10849(%var_10844: Tensor[(16, 4, 5), float64]) -> Tensor[(16, 4, 5), float64] {
  %282 = cast(-9.32808f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %283 = cast(%var_10844, dtype="float64") /* ty=Tensor[(16, 4, 5), float64] */;
  floor_divide(%282, %283) /* ty=Tensor[(16, 4, 5), float64] */
}

def @func_12183(%var_12162: Tensor[(4, 12, 7), uint16], %var_12163: Tensor[(4, 12, 7), uint16]) -> Tensor[(4, 12, 7), int64] {
  %284 = cast(%var_12163, dtype="uint16") /* ty=Tensor[(4, 12, 7), uint16] */;
  %285 = shape_of(%var_12162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%var_12162, dtype="uint16") /* ty=Tensor[(4, 12, 7), uint16] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %288 = left_shift(%286, %287) /* ty=Tensor[(4, 12, 7), uint16] */;
  %289 = cast(%288, dtype="int64") /* ty=Tensor[(4, 12, 7), int64] */;
  %290 = shape_of(%var_12162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_12162, dtype="int64") /* ty=Tensor[(4, 12, 7), int64] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%291, %292) /* ty=Tensor[(4, 12, 7), int64] */
}

def @func_9029(%var_9000: Tensor[(6, 3, 5), float32], %var_9005: Tensor[(5, 6), float64], %var_9017: Tensor[(6), bool]) -> (Tensor[(6, 3, 5), float32], Tensor[(945), float32], Tensor[(2880), int32], Tensor[(5, 6), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool]) {
  %293 = cast(%var_9000, dtype="float32") /* ty=Tensor[(6, 3, 5), float32] */;
  %294 = cast(meta[relay.Constant][26] /* ty=Tensor[(2880), int32] */, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %295 = cast(meta[relay.Constant][26] /* ty=Tensor[(2880), int32] */, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %296 = cast(%var_9005, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
  %297 = reshape(%294, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %298 = reshape(%295, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %299 = reshape(%296, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %300 = @func_3336(%297, %298, %299) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) */;
  %301 = cast(meta[relay.Constant][27] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %302 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %303 = cast(%var_9017, dtype="bool") /* ty=Tensor[(6), bool] */;
  %304 = %300.2;
  %305 = cast(%304, dtype="float32") /* ty=Tensor[(945), float32] */;
  %306 = cast(%var_9005, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
  %307 = reshape(%301, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %308 = reshape(%302, newshape=[]) /* ty=bool */;
  %309 = reshape(%303, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
  %310 = reshape(%305, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %311 = reshape(%306, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %312 = @func_2553(%307, %308, %309, %310, %311) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
  %313 = cos(%293) /* ty=Tensor[(6, 3, 5), float32] */;
  %314 = %312.7;
  (%313, %304, meta[relay.Constant][26] /* ty=Tensor[(2880), int32] */, %var_9005, %314, meta[relay.Constant][27] /* ty=Tensor[(108), float64] */, False /* ty=bool */, %var_9017)
}

def @func_13282(%var_13280: Tensor[(90), int16]) -> (Tensor[(10, 1, 16), float64], bool, Tensor[(2002), int32], Tensor[(224), float32], Tensor[(7, 16, 2), float64], Tensor[(16, 9, 13), uint64], Tensor[(90), int16]) {
  %315 = @func_13069() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %316 = cast(meta[relay.Constant][28] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %317 = cast(meta[relay.Constant][28] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %318 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %319 = reshape(%316, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), int32] */;
  %320 = reshape(%317, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), int32] */;
  %321 = reshape(%318, newshape=[]) /* ty=bool */;
  %322 = @func_206(%319, %320, %321) /* ty=(Tensor[(14, 11, 13), int32], Tensor[(1, 1, 6), bool], bool, Tensor[(3, 2), bool]) */;
  %323 = cast(meta[relay.Constant][29] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %324 = cast(meta[relay.Constant][29] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %325 = reshape(%323, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), float32] */;
  %326 = reshape(%324, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), float32] */;
  %327 = @func_11348(%325, %326) /* ty=Tensor[(7, 16, 2), int32] */;
  %328 = cast(%327, dtype="uint32") /* ty=Tensor[(7, 16, 2), uint32] */;
  %329 = cast(False /* ty=bool */, dtype="uint32") /* ty=uint32 */;
  %330 = subtract(%328, %329) /* ty=Tensor[(7, 16, 2), uint32] */;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
  %332 = cast(False /* ty=bool */, dtype="int16") /* ty=int16 */;
  %333 = cast(%var_13280, dtype="int16") /* ty=Tensor[(90), int16] */;
  %334 = reshape(%332, newshape=[]) /* ty=int16 */;
  %335 = reshape(%333, newshape=[1, 6, 15]) /* ty=Tensor[(1, 6, 15), int16] */;
  %336 = @func_1072(%334, %335) /* ty=(Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) */;
  %337 = %315.0;
  %338 = %322.2;
  %339 = cosh(%331) /* ty=Tensor[(7, 16, 2), float64] */;
  %340 = %336.1;
  (%337, %338, meta[relay.Constant][28] /* ty=Tensor[(2002), int32] */, meta[relay.Constant][29] /* ty=Tensor[(224), float32] */, %339, %340, %var_13280)
}

def @func_10008(%var_10001: Tensor[(1694), float32]) -> (Tensor[(15, 6, 9), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64], Tensor[(1694), float32], Tensor[(15, 1, 4), float64]) {
  %341 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 63), float32] */, dtype="float32") /* ty=Tensor[(15, 63), float32] */;
  %342 = cast(meta[relay.Constant][31] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %343 = reshape(%341, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %344 = reshape(%342, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
  %345 = @func_651(%343, %344) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */;
  %346 = cast(%var_10001, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %347 = cast(meta[relay.Constant][31] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %348 = reshape(%346, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %349 = reshape(%347, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %350 = @func_3233(%348, %349) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) */;
  %351 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 1, 4), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 4), float32] */;
  %352 = log(%351) /* ty=Tensor[(15, 1, 4), float32] */;
  %353 = cast(%352, dtype="float64") /* ty=Tensor[(15, 1, 4), float64] */;
  %354 = %345.0;
  %355 = %350.1;
  %356 = sinh(%353) /* ty=Tensor[(15, 1, 4), float64] */;
  (%354, meta[relay.Constant][30] /* ty=Tensor[(15, 63), float32] */, meta[relay.Constant][31] /* ty=Tensor[(30), float64] */, %355, %var_10001, %356)
}

def @func_2386(%var_2381: Tensor[(11, 6, 9), int64], %var_2382: Tensor[(11, 6, 9), int64]) -> (Tensor[(11, 6, 9), int64],) {
  %357 = cast(%var_2382, dtype="int64") /* ty=Tensor[(11, 6, 9), int64] */;
  %358 = shape_of(%var_2381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_2381, dtype="int64") /* ty=Tensor[(11, 6, 9), int64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %361 = bitwise_xor(%359, %360) /* ty=Tensor[(11, 6, 9), int64] */;
  (%361,)
}

def @func_13049(%var_13023: Tensor[(440, 4), float32], %var_13036: Tensor[(77, 4), int16], %var_13039: Tensor[(260), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(16, 11, 10), float32], Tensor[(440, 4), float32], Tensor[(7, 11, 4), bool], Tensor[(77, 4), int16], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64]) {
  %362 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %363 = cast(%var_13023, dtype="float32") /* ty=Tensor[(440, 4), float32] */;
  %364 = reshape(%363, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), float32] */;
  %365 = @func_10881(%364) /* ty=(Tensor[(16, 11, 10), float32],) */;
  %366 = cast(%var_13036, dtype="int16") /* ty=Tensor[(77, 4), int16] */;
  %367 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %368 = cast(meta[relay.Constant][33] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %369 = cast(%var_13039, dtype="float32") /* ty=Tensor[(260), float32] */;
  %370 = cast(meta[relay.Constant][34] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %371 = reshape(%366, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %372 = reshape(%367, newshape=[]) /* ty=int64 */;
  %373 = reshape(%368, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %374 = reshape(%369, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %375 = reshape(%370, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %376 = @func_8527(%371, %372, %373, %374, %375) /* ty=(Tensor[(7, 11, 4), bool], Tensor[(945), float32], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64], Tensor[(22, 1183), int16], Tensor[(7, 11, 4), float32]) */;
  %377 = %362.0;
  %378 = %365.0;
  %379 = %376.0;
  (%377, %378, %var_13023, %379, %var_13036, 7 /* ty=int64 */, meta[relay.Constant][33] /* ty=Tensor[(264), float64] */, %var_13039, meta[relay.Constant][34] /* ty=Tensor[(30), float64] */)
}

def @func_12380(%var_12356: Tensor[(15, 2, 3), float32], %var_12368: Tensor[(22), float64], %var_12369: Tensor[(264), float64]) -> (Tensor[(15, 2, 3), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64]) {
  %380 = cast(%var_12356, dtype="float32") /* ty=Tensor[(15, 2, 3), float32] */;
  %381 = cast(%var_12368, dtype="float64") /* ty=Tensor[(22), float64] */;
  %382 = cast(%var_12369, dtype="float64") /* ty=Tensor[(264), float64] */;
  %383 = reshape(%381, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float64] */;
  %384 = reshape(%382, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), float64] */;
  %385 = asinh(%380) /* ty=Tensor[(15, 2, 3), float32] */;
  %386 = @func_3373(%383, %384) /* ty=Tensor[(2, 12, 11), float32] */;
  (%385, %386, %var_12368, %var_12369)
}

def @func_2670(%var_2634: Tensor[(14, 10, 8), float64], %var_2635: Tensor[(14, 10, 8), float64]) -> Tensor[(14, 10, 8), float64] {
  %387 = cast(%var_2635, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
  %388 = shape_of(%var_2634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_2634, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%389, %390) /* ty=Tensor[(14, 10, 8), float64] */
}

def @func_12876(%var_12868: Tensor[(9, 10, 2), float64]) -> (Tensor[(9, 10, 2), float64],) {
  %391 = cast(%var_12868, dtype="float64") /* ty=Tensor[(9, 10, 2), float64] */;
  %392 = sinh(%391) /* ty=Tensor[(9, 10, 2), float64] */;
  (%392,)
}

def @func_1072(%var_1008: int16, %var_1009: Tensor[(1, 6, 15), int16]) -> (Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) {
  %393 = cast(%var_1008, dtype="int16") /* ty=int16 */;
  %394 = cast(%var_1009, dtype="int16") /* ty=Tensor[(1, 6, 15), int16] */;
  %395 = cast(%var_1008, dtype="uint64") /* ty=uint64 */;
  %396 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 936), uint64] */, dtype="uint64") /* ty=Tensor[(2, 936), uint64] */;
  %397 = reshape(%395, newshape=[]) /* ty=uint64 */;
  %398 = reshape(%396, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), uint64] */;
  %399 = @func_810(%397, %398) /* ty=(Tensor[(16, 9, 13), uint64],) */;
  %400 = cast(%var_1008, dtype="bool") /* ty=bool */;
  %401 = cast(meta[relay.Constant][36] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %402 = reshape(%400, newshape=[]) /* ty=bool */;
  %403 = reshape(%401, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), bool] */;
  %404 = @func_64(%402, %403) /* ty=(Tensor[(1, 1, 6), bool],) */;
  %405 = left_shift(%393, %394) /* ty=Tensor[(1, 6, 15), int16] */;
  %406 = %399.0;
  %407 = %404.0;
  (%405, %406, meta[relay.Constant][35] /* ty=Tensor[(2, 936), uint64] */, %407, meta[relay.Constant][36] /* ty=Tensor[(6), bool] */)
}

def @func_10881(%var_10877: Tensor[(16, 11, 10), float32]) -> (Tensor[(16, 11, 10), float32],) {
  %408 = cast(%var_10877, dtype="float32") /* ty=Tensor[(16, 11, 10), float32] */;
  %409 = asin(%408) /* ty=Tensor[(16, 11, 10), float32] */;
  (%409,)
}

def @func_13869(%var_13831: Tensor[(10, 8, 16), float64]) -> (Tensor[(10, 8, 16), int16], Tensor[(1694, 30), int16], Tensor[(384), float32], uint64) {
  %410 = @func_13589() /* ty=Tensor[(10, 1, 16), float64] */;
  %411 = cast(%410, dtype="int16") /* ty=Tensor[(10, 1, 16), int16] */;
  %412 = cast(%var_13831, dtype="int16") /* ty=Tensor[(10, 8, 16), int16] */;
  %413 = cast(meta[relay.Constant][37] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %414 = cast(meta[relay.Constant][38] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %415 = reshape(%413, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float32] */;
  %416 = reshape(%414, newshape=[]) /* ty=uint64 */;
  %417 = @func_6415(%415, %416) /* ty=(Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) */;
  %418 = bitwise_and(%411, %412) /* ty=Tensor[(10, 8, 16), int16] */;
  %419 = %417.2;
  (%418, %419, meta[relay.Constant][37] /* ty=Tensor[(384), float32] */, meta[relay.Constant][38] /* ty=uint64 */)
}

def @func_14195(%var_14174: Tensor[(2880), int32], %var_14189: Tensor[(1280), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(2880), int32], Tensor[(30), float64], Tensor[(3, 2, 5), float32], Tensor[(1694, 30), int16], Tensor[(1280), float64]) {
  %420 = cast(%var_14174, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %421 = cast(%var_14174, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %422 = cast(meta[relay.Constant][39] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %423 = reshape(%420, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %424 = reshape(%421, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %425 = reshape(%422, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %426 = @func_3336(%423, %424, %425) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) */;
  %427 = %426.4;
  %428 = cast(%427, dtype="float32") /* ty=Tensor[(3, 2, 5), float32] */;
  %429 = cast(%var_14189, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %430 = reshape(%429, newshape=[10, 8, 16]) /* ty=Tensor[(10, 8, 16), float64] */;
  %431 = @func_13869(%430) /* ty=(Tensor[(10, 8, 16), int16], Tensor[(1694, 30), int16], Tensor[(384), float32], uint64) */;
  %432 = @func_13589() /* ty=Tensor[(10, 1, 16), float64] */;
  %433 = log10(%428) /* ty=Tensor[(3, 2, 5), float32] */;
  %434 = %431.1;
  (%432, %var_14174, meta[relay.Constant][39] /* ty=Tensor[(30), float64] */, %433, %434, %var_14189)
}

def @func_272(%var_253: Tensor[(3, 2, 5), float64]) -> (Tensor[(3, 2, 5), float64],) {
  %435 = cast(%var_253, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %436 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(3, 2, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 2, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %439 = multiply(%437, %438) /* ty=Tensor[(3, 2, 5), float64] */;
  (%439,)
}

def @func_810(%var_801: uint64, %var_802: Tensor[(16, 9, 13), uint64]) -> (Tensor[(16, 9, 13), uint64],) {
  %440 = cast(%var_801, dtype="uint64") /* ty=uint64 */;
  %441 = cast(%var_802, dtype="uint64") /* ty=Tensor[(16, 9, 13), uint64] */;
  %442 = left_shift(%440, %441) /* ty=Tensor[(16, 9, 13), uint64] */;
  (%442,)
}

def @func_2408(%var_2394: Tensor[(2, 1, 15), float32]) -> Tensor[(2, 15, 15), float32] {
  %443 = cast(%var_2394, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %444 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 15), float32] */;
  floor_mod(%443, %444) /* ty=Tensor[(2, 15, 15), float32] */
}

def @func_11724(%var_11696: Tensor[(3, 12, 13), uint64], %var_11697: Tensor[(3, 12, 13), uint64], %var_11709: Tensor[(1, 108), float64], %var_11711: Tensor[(72), uint16], %var_11713: Tensor[(1872), uint64]) -> (Tensor[(3, 12, 13), uint64], Tensor[(5, 189), float32], Tensor[(1056), float32], Tensor[(1, 108), float64], Tensor[(30), float64], Tensor[(72), uint16], Tensor[(2, 4), float32], Tensor[(1872), uint64], Tensor[(384, 1), float32]) {
  %445 = cast(%var_11697, dtype="uint64") /* ty=Tensor[(3, 12, 13), uint64] */;
  %446 = shape_of(%var_11696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_11696, dtype="uint64") /* ty=Tensor[(3, 12, 13), uint64] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %449 = cast(meta[relay.Constant][42] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %450 = cast(%var_11709, dtype="float64") /* ty=Tensor[(1, 108), float64] */;
  %451 = cast(meta[relay.Constant][43] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %452 = cast(%var_11711, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %453 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 4), float32] */;
  %454 = cast(%var_11713, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %455 = cast(meta[relay.Constant][45] /* ty=Tensor[(384, 1), float32] */, dtype="float32") /* ty=Tensor[(384, 1), float32] */;
  %456 = reshape(%449, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %457 = reshape(%450, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %458 = reshape(%451, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %459 = reshape(%452, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %460 = reshape(%453, newshape=[8]) /* ty=Tensor[(8), float32] */;
  %461 = reshape(%454, newshape=[1872]) /* ty=Tensor[(1872), uint64] */;
  %462 = reshape(%455, newshape=[96, 4]) /* ty=Tensor[(96, 4), float32] */;
  %463 = @func_8706(%456, %457, %458, %459, %460, %461, %462) /* ty=(Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(5, 189), float32], Tensor[(30), float64], Tensor[(8, 11, 12), float32], Tensor[(30), float32], Tensor[(72), uint16], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(14, 10, 8), float64], Tensor[(81, 10), int32], Tensor[(8), float32], Tensor[(1872), uint64], Tensor[(96, 4), float32]) */;
  %464 = bitwise_and(%447, %448) /* ty=Tensor[(3, 12, 13), uint64] */;
  %465 = %463.4;
  (%464, %465, meta[relay.Constant][42] /* ty=Tensor[(1056), float32] */, %var_11709, meta[relay.Constant][43] /* ty=Tensor[(30), float64] */, %var_11711, meta[relay.Constant][44] /* ty=Tensor[(2, 4), float32] */, %var_11713, meta[relay.Constant][45] /* ty=Tensor[(384, 1), float32] */)
}

def @func_5153(%var_5148: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), float32],) {
  %466 = cast(%var_5148, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %467 = erf(%466) /* ty=Tensor[(8, 11, 9), float32] */;
  (%467,)
}

def @func_1417(%var_1366: Tensor[(1, 16, 3), int64], %var_1367: Tensor[(1, 16, 3), int64], %var_1388: uint64, %var_1389: Tensor[(1872), uint64], %var_1413: Tensor[(143, 14), int32]) -> (Tensor[(?, 16, 3), int64], Tensor[(?, 16, 3), bool], Tensor[(16, 9, 13), uint64], uint64, Tensor[(1872), uint64], Tensor[(3, 2, 5), float64], Tensor[(30), float64], Tensor[(?, 16, 3), bool], Tensor[(14, 11, 13), int32], Tensor[(143, 14), int32]) {
  %468 = cast(%var_1367, dtype="int64") /* ty=Tensor[(1, 16, 3), int64] */;
  %469 = shape_of(%var_1366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_1366, dtype="int64") /* ty=Tensor[(1, 16, 3), int64] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %472 = cast(%var_1366, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %473 = shape_of(%var_1367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_1367, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %476 = cast(%var_1388, dtype="uint64") /* ty=uint64 */;
  %477 = cast(%var_1389, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %478 = reshape(%476, newshape=[]) /* ty=uint64 */;
  %479 = reshape(%477, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), uint64] */;
  %480 = @func_810(%478, %479) /* ty=(Tensor[(16, 9, 13), uint64],) */;
  %481 = cast(meta[relay.Constant][46] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %482 = reshape(%481, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %483 = @func_272(%482) /* ty=(Tensor[(3, 2, 5), float64],) */;
  %484 = cast(%var_1367, dtype="float32") /* ty=Tensor[(1, 16, 3), float32] */;
  %485 = acos(%484) /* ty=Tensor[(1, 16, 3), float32] */;
  %486 = cast(%485, dtype="float64") /* ty=Tensor[(1, 16, 3), float64] */;
  %487 = exp(%486) /* ty=Tensor[(1, 16, 3), float64] */;
  %488 = cast(%485, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %489 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%487, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %492 = cast(%var_1413, dtype="int32") /* ty=Tensor[(143, 14), int32] */;
  %493 = cast(%var_1413, dtype="int32") /* ty=Tensor[(143, 14), int32] */;
  %494 = cast(%var_1388, dtype="bool") /* ty=bool */;
  %495 = reshape(%492, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), int32] */;
  %496 = reshape(%493, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), int32] */;
  %497 = reshape(%494, newshape=[]) /* ty=bool */;
  %498 = @func_206(%495, %496, %497) /* ty=(Tensor[(14, 11, 13), int32], Tensor[(1, 1, 6), bool], bool, Tensor[(3, 2), bool]) */;
  %499 = maximum(%470, %471) /* ty=Tensor[(?, 16, 3), int64] */;
  %500 = not_equal(%474, %475) /* ty=Tensor[(?, 16, 3), bool] */;
  %501 = %480.0;
  %502 = %483.0;
  %503 = less_equal(%490, %491) /* ty=Tensor[(?, 16, 3), bool] */;
  %504 = %498.0;
  (%499, %500, %501, %var_1388, %var_1389, %502, meta[relay.Constant][46] /* ty=Tensor[(30), float64] */, %503, %504, %var_1413)
}

def @func_14470(%var_14415: Tensor[(162), int64], %var_14416: Tensor[(792), float32]) -> (Tensor[(30), float64], Tensor[(10, 10, 10), uint8], Tensor[(1000), uint8], Tensor[(3, 3, 3), float32], Tensor[(18), int64], Tensor[(162), int64], Tensor[(792), float64]) {
  %505 = @func_13341() /* ty=(Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) */;
  %506 = cast(meta[relay.Constant][47] /* ty=Tensor[(1000), uint8] */, dtype="uint8") /* ty=Tensor[(1000), uint8] */;
  %507 = reshape(%506, newshape=[10, 10, 10]) /* ty=Tensor[(10, 10, 10), uint8] */;
  %508 = cast(meta[relay.Constant][48] /* ty=Tensor[(18), int64] */, dtype="int64") /* ty=Tensor[(18), int64] */;
  %509 = cast(%var_14415, dtype="int64") /* ty=Tensor[(162), int64] */;
  %510 = cast(%var_14416, dtype="float32") /* ty=Tensor[(792), float32] */;
  %511 = %505.1;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(30), float32] */;
  %513 = reshape(%508, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), int64] */;
  %514 = reshape(%509, newshape=[9, 9, 2]) /* ty=Tensor[(9, 9, 2), int64] */;
  %515 = reshape(%510, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %516 = reshape(%512, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %517 = @func_6113(%513, %514, %515, %516) /* ty=(Tensor[(9, 9, 2), int64], Tensor[(792), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(8, 2, 7), bool], Tensor[(3, 3, 3), float32]) */;
  %518 = cast(%var_14416, dtype="float64") /* ty=Tensor[(792), float64] */;
  %519 = @func_9071(%507) /* ty=Tensor[(10, 10, 10), uint8] */;
  %520 = %517.5;
  %521 = acosh(%518) /* ty=Tensor[(792), float64] */;
  (%511, %519, meta[relay.Constant][47] /* ty=Tensor[(1000), uint8] */, %520, meta[relay.Constant][48] /* ty=Tensor[(18), int64] */, %var_14415, %521)
}

def @func_7714(%var_7704: Tensor[(2880), int32]) -> (Tensor[(10, 3, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(2880), int32], Tensor[(10, 3), float64]) {
  %522 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 5), float32] */;
  %523 = cast(%var_7704, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %524 = cast(%var_7704, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %525 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %526 = reshape(%523, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %527 = reshape(%524, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %528 = reshape(%525, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %529 = @func_3336(%526, %527, %528) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) */;
  %530 = log10(%522) /* ty=Tensor[(10, 3, 5), float32] */;
  %531 = %529.4;
  (%530, %531, %var_7704, meta[relay.Constant][50] /* ty=Tensor[(10, 3), float64] */)
}

def @func_13390() -> (Tensor[(10, 1, 16), float64],) {
  %532 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %533 = %532.0;
  (%533,)
}

def @func_10059(%var_10034: Tensor[(11, 8, 13), float32]) -> (Tensor[(11, 8, 13), float32], Tensor[(2880), int32], Tensor[(2880), int32]) {
  %534 = cast(%var_10034, dtype="float32") /* ty=Tensor[(11, 8, 13), float32] */;
  %535 = cast(meta[relay.Constant][51] /* ty=Tensor[(2880), int32] */, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %536 = reshape(%535, newshape=[2880]) /* ty=Tensor[(2880), int32] */;
  %537 = @func_7714(%536) /* ty=(Tensor[(10, 3, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(2880), int32], Tensor[(10, 3), float64]) */;
  %538 = log(%534) /* ty=Tensor[(11, 8, 13), float32] */;
  %539 = %537.2;
  (%538, %539, meta[relay.Constant][51] /* ty=Tensor[(2880), int32] */)
}

def @func_11122(%var_11110: Tensor[(90), float32], %var_11111: Tensor[(30), float64]) -> (Tensor[(16, 9, 14), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(6), bool]) {
  %540 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 9, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 9, 14), float64] */;
  %541 = cast(%var_11110, dtype="float32") /* ty=Tensor[(90), float32] */;
  %542 = cast(%var_11111, dtype="float64") /* ty=Tensor[(30), float64] */;
  %543 = cast(meta[relay.Constant][53] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %544 = reshape(%541, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
  %545 = reshape(%542, newshape=[5, 6]) /* ty=Tensor[(5, 6), float64] */;
  %546 = reshape(%543, newshape=[6]) /* ty=Tensor[(6), bool] */;
  %547 = @func_9029(%544, %545, %546) /* ty=(Tensor[(6, 3, 5), float32], Tensor[(945), float32], Tensor[(2880), int32], Tensor[(5, 6), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool]) */;
  %548 = log2(%540) /* ty=Tensor[(16, 9, 14), float64] */;
  %549 = %547.0;
  (%548, %549, %var_11110, %var_11111, meta[relay.Constant][53] /* ty=Tensor[(6), bool] */)
}

def @func_14356(%var_14339: Tensor[(72), uint16], %var_14340: Tensor[(384), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(3, 2, 5), float64], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(945), float32], Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(72), uint16], Tensor[(384), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(1694), float32]) {
  %550 = @func_13069() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %551 = cast(meta[relay.Constant][54] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %552 = cast(meta[relay.Constant][55] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %553 = reshape(%551, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %554 = reshape(%552, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %555 = @func_3233(%553, %554) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) */;
  %556 = cast(meta[relay.Constant][56] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %557 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %558 = cast(meta[relay.Constant][57] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %559 = cast(meta[relay.Constant][58] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %560 = %555.1;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %562 = reshape(%556, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %563 = reshape(%557, newshape=[]) /* ty=bool */;
  %564 = reshape(%558, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
  %565 = reshape(%559, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %566 = reshape(%561, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %567 = @func_2553(%562, %563, %564, %565, %566) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
  %568 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %569 = cast(%var_14339, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %570 = cast(meta[relay.Constant][55] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %571 = cast(%var_14340, dtype="float32") /* ty=Tensor[(384), float32] */;
  %572 = cast(False /* ty=bool */, dtype="uint64") /* ty=uint64 */;
  %573 = cast(meta[relay.Constant][59] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %574 = reshape(%569, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint16] */;
  %575 = reshape(%570, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %576 = reshape(%571, newshape=[12, 32]) /* ty=Tensor[(12, 32), float32] */;
  %577 = reshape(%572, newshape=[]) /* ty=uint64 */;
  %578 = reshape(%573, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %579 = @func_14273(%574, %575, %576, %577, %578) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(384), float32], Tensor[(12, 32), float32], Tensor[(320), float64], Tensor[(18, 4), bool], Tensor[(90), float32], Tensor[(90), float32]) */;
  %580 = cast(%var_14339, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %581 = cast(meta[relay.Constant][58] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %582 = cast(%560, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %583 = reshape(%580, newshape=[4, 2, 9]) /* ty=Tensor[(4, 2, 9), uint16] */;
  %584 = reshape(%581, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %585 = reshape(%582, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %586 = @func_4933(%583, %584, %585) /* ty=(Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) */;
  %587 = cast(meta[relay.Constant][54] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %588 = %550.0;
  %589 = %567.1;
  %590 = %568.0;
  %591 = %579.1;
  %592 = %586.4;
  %593 = sigmoid(%587) /* ty=Tensor[(1694), float32] */;
  (%588, %560, meta[relay.Constant][55] /* ty=Tensor[(30), float64] */, %589, meta[relay.Constant][56] /* ty=Tensor[(108), float64] */, False /* ty=bool */, meta[relay.Constant][57] /* ty=Tensor[(6), bool] */, meta[relay.Constant][58] /* ty=Tensor[(945), float32] */, %590, %591, %var_14339, %var_14340, meta[relay.Constant][59] /* ty=Tensor[(90), float32] */, %592, %593)
}

def @main(%var_14554: Tensor[(10, 3, 16), float64]) -> (Tensor[(10, 3, 16), int32],) {
  %594 = @func_13589() /* ty=Tensor[(10, 1, 16), float64] */;
  %595 = cast(%594, dtype="int32") /* ty=Tensor[(10, 1, 16), int32] */;
  %596 = cast(%var_14554, dtype="int32") /* ty=Tensor[(10, 3, 16), int32] */;
  %597 = subtract(%595, %596) /* ty=Tensor[(10, 3, 16), int32] */;
  (%597,)
}

def @func_12258(%var_12246: Tensor[(12, 14, 8), uint64]) -> Tensor[(12, 14, 8), uint64] {
  %598 = cast(meta[relay.Constant][60] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %599 = cast(%var_12246, dtype="uint64") /* ty=Tensor[(12, 14, 8), uint64] */;
  bitwise_or(%598, %599) /* ty=Tensor[(12, 14, 8), uint64] */
}

def @func_13477(%var_13469: bool, %var_13472: Tensor[(30), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(4, 9, 3), bool], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(315, 3), float32], Tensor[(30), float64]) {
  %600 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %601 = cast(meta[relay.Constant][61] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %602 = cast(%var_13469, dtype="bool") /* ty=bool */;
  %603 = cast(meta[relay.Constant][62] /* ty=Tensor[(3, 2), bool] */, dtype="bool") /* ty=Tensor[(3, 2), bool] */;
  %604 = cast(meta[relay.Constant][63] /* ty=Tensor[(315, 3), float32] */, dtype="float32") /* ty=Tensor[(315, 3), float32] */;
  %605 = cast(%var_13472, dtype="float64") /* ty=Tensor[(30), float64] */;
  %606 = reshape(%601, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %607 = reshape(%602, newshape=[]) /* ty=bool */;
  %608 = reshape(%603, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
  %609 = reshape(%604, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %610 = reshape(%605, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %611 = @func_2553(%606, %607, %608, %609, %610) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
  %612 = %600.0;
  %613 = %611.0;
  (%612, %613, meta[relay.Constant][61] /* ty=Tensor[(108), float64] */, %var_13469, meta[relay.Constant][62] /* ty=Tensor[(3, 2), bool] */, meta[relay.Constant][63] /* ty=Tensor[(315, 3), float32] */, %var_13472)
}

def @func_3233(%var_3218: Tensor[(11, 11, 14), float32], %var_3230: Tensor[(30), float64]) -> (Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) {
  %614 = cast(%var_3218, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %615 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(11, 11, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %618 = cast(meta[relay.Constant][65] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %619 = cast(meta[relay.Constant][66] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %620 = cast(%var_3230, dtype="float64") /* ty=Tensor[(30), float64] */;
  %621 = reshape(%618, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float32] */;
  %622 = reshape(%619, newshape=[3, 2]) /* ty=Tensor[(3, 2), bool] */;
  %623 = reshape(%620, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %624 = @func_2727(%621, %622, %623) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */;
  %625 = subtract(%616, %617) /* ty=Tensor[(11, 11, 14), float32] */;
  %626 = %624.1;
  (%625, %626, meta[relay.Constant][65] /* ty=Tensor[(260), float32] */, meta[relay.Constant][66] /* ty=Tensor[(6), bool] */, %var_3230)
}

def @func_3373(%var_3353: Tensor[(2, 1, 11), float64], %var_3365: Tensor[(2, 12, 11), float64]) -> Tensor[(2, 12, 11), float32] {
  %627 = cast(%var_3353, dtype="float64") /* ty=Tensor[(2, 1, 11), float64] */;
  %628 = rsqrt(%627) /* ty=Tensor[(2, 1, 11), float64] */;
  %629 = cast(%628, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %630 = cast(%var_3365, dtype="float32") /* ty=Tensor[(2, 12, 11), float32] */;
  add(%629, %630) /* ty=Tensor[(2, 12, 11), float32] */
}

def @func_14046(%var_13995: Tensor[(12, 10, 14), float64]) -> Tensor[(12, 10, 14), float32] {
  %631 = cast(%var_13995, dtype="float64") /* ty=Tensor[(12, 10, 14), float64] */;
  %632 = log10(%631) /* ty=Tensor[(12, 10, 14), float64] */;
  %633 = cast(%632, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  cos(%633) /* ty=Tensor[(12, 10, 14), float32] */
}

def @func_64(%var_44: bool, %var_45: Tensor[(1, 1, 6), bool]) -> (Tensor[(1, 1, 6), bool],) {
  %634 = cast(%var_44, dtype="bool") /* ty=bool */;
  %635 = cast(%var_45, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %636 = logical_and(%634, %635) /* ty=Tensor[(1, 1, 6), bool] */;
  (%636,)
}

def @func_6245(%var_6202: Tensor[(14, 6, 4), float32]) -> Tensor[(14, 6, 4), float32] {
  %637 = cast(%var_6202, dtype="float32") /* ty=Tensor[(14, 6, 4), float32] */;
  log2(%637) /* ty=Tensor[(14, 6, 4), float32] */
}

def @func_2727(%var_2696: Tensor[(13, 4, 5), float32], %var_2711: Tensor[(3, 2), bool], %var_2713: Tensor[(30), float64]) -> (Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) {
  %638 = cast(meta[relay.Constant][67] /* ty=Tensor[(13, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 5), float32] */;
  %639 = shape_of(%var_2696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%var_2696, dtype="float32") /* ty=Tensor[(13, 4, 5), float32] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %642 = cast(meta[relay.Constant][68] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %643 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %644 = cast(%var_2711, dtype="bool") /* ty=Tensor[(3, 2), bool] */;
  %645 = cast(meta[relay.Constant][69] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %646 = cast(%var_2713, dtype="float64") /* ty=Tensor[(30), float64] */;
  %647 = reshape(%642, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %648 = reshape(%643, newshape=[]) /* ty=bool */;
  %649 = reshape(%644, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
  %650 = reshape(%645, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %651 = reshape(%646, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %652 = @func_2553(%647, %648, %649, %650, %651) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
  %653 = mod(%640, %641) /* ty=Tensor[(13, 4, 5), float32] */;
  %654 = %652.8;
  (%653, %654, meta[relay.Constant][68] /* ty=Tensor[(108), float64] */, False /* ty=bool */, %var_2711, meta[relay.Constant][69] /* ty=Tensor[(945), float32] */, %var_2713)
}

def @func_13792(%var_13788: Tensor[(288), float64], %var_13789: Tensor[(945), float32], %var_13790: Tensor[(30), float64]) -> (Tensor[(10, 1, 16), float32], Tensor[(945), float32], Tensor[(288), float64], Tensor[(945), float32], Tensor[(30), float64]) {
  %655 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %656 = %655.0;
  %657 = cast(%656, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
  %658 = cast(%var_13788, dtype="float64") /* ty=Tensor[(288), float64] */;
  %659 = cast(%var_13789, dtype="float32") /* ty=Tensor[(945), float32] */;
  %660 = cast(%var_13790, dtype="float64") /* ty=Tensor[(30), float64] */;
  %661 = reshape(%658, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %662 = reshape(%659, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %663 = reshape(%660, newshape=[30, 1]) /* ty=Tensor[(30, 1), float64] */;
  %664 = @func_10910(%661, %662, %663) /* ty=(Tensor[(16, 3, 6), float64], Tensor[(1, 30), float64], Tensor[(945), float32], Tensor[(30, 1), float64]) */;
  %665 = acosh(%657) /* ty=Tensor[(10, 1, 16), float32] */;
  %666 = %664.2;
  (%665, %666, %var_13788, %var_13789, %var_13790)
}

def @func_13069() -> (Tensor[(10, 1, 16), float64],) {
  %667 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %668 = %667.0;
  (%668,)
}

def @func_6415(%var_6349: Tensor[(16, 2, 12), float32], %var_6383: uint64) -> (Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) {
  %669 = cast(%var_6349, dtype="bool") /* ty=Tensor[(16, 2, 12), bool] */;
  %670 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(16, 2, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(meta[relay.Constant][70] /* ty=Tensor[(16, 2, 12), float32] */, dtype="bool") /* ty=Tensor[(16, 2, 12), bool] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %673 = cast(meta[relay.Constant][71] /* ty=Tensor[(1694, 1), float32] */, dtype="float32") /* ty=Tensor[(1694, 1), float32] */;
  %674 = cast(meta[relay.Constant][72] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %675 = reshape(%673, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %676 = reshape(%674, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %677 = @func_3233(%675, %676) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) */;
  %678 = cast(meta[relay.Constant][72] /* ty=Tensor[(30), float64] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %679 = cast(meta[relay.Constant][71] /* ty=Tensor[(1694, 1), float32] */, dtype="bool") /* ty=Tensor[(1694, 1), bool] */;
  %680 = less(%678, %679) /* ty=Tensor[(1694, 30), bool] */;
  %681 = cast(%680, dtype="int16") /* ty=Tensor[(1694, 30), int16] */;
  %682 = cast(meta[relay.Constant][72] /* ty=Tensor[(30), float64] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %683 = cast(meta[relay.Constant][72] /* ty=Tensor[(30), float64] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %684 = reshape(%683, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %685 = cast(%var_6383, dtype="uint64") /* ty=uint64 */;
  %686 = cast(meta[relay.Constant][73] /* ty=Tensor[(936, 2), uint64] */, dtype="uint64") /* ty=Tensor[(936, 2), uint64] */;
  %687 = reshape(%685, newshape=[]) /* ty=uint64 */;
  %688 = reshape(%686, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), uint64] */;
  %689 = @func_810(%687, %688) /* ty=(Tensor[(16, 9, 13), uint64],) */;
  %690 = %689.0;
  %691 = cast(%var_6383, dtype="float64") /* ty=float64 */;
  %692 = cast(%690, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
  %693 = cast(%var_6349, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
  %694 = cosh(%693) /* ty=Tensor[(16, 2, 12), float32] */;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(16, 2, 12), float64] */;
  %696 = greater(%671, %672) /* ty=Tensor[(16, 2, 12), bool] */;
  %697 = %677.2;
  %698 = bitwise_xor(%681, %682) /* ty=Tensor[(1694, 30), int16] */;
  %699 = @func_2408(%684) /* ty=Tensor[(2, 15, 15), float32] */;
  %700 = floor_divide(%691, %692) /* ty=Tensor[(16, 9, 13), float64] */;
  %701 = tan(%695) /* ty=Tensor[(16, 2, 12), float64] */;
  (%696, %697, %698, meta[relay.Constant][73] /* ty=Tensor[(936, 2), uint64] */, %699, %700, %701)
}

def @func_2916(%var_2883: Tensor[(11, 15, 1), float32], %var_2893: Tensor[(105, 9), float32], %var_2894: Tensor[(30), float64], %var_2896: Tensor[(945), float32]) -> (Tensor[(105, 9), float32], Tensor[(945), bool], Tensor[(11, 15, 30), float64], Tensor[(3, 2, 5), float64]) {
  %702 = cast(%var_2893, dtype="float32") /* ty=Tensor[(105, 9), float32] */;
  %703 = cast(%var_2894, dtype="float64") /* ty=Tensor[(30), float64] */;
  %704 = reshape(%702, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %705 = reshape(%703, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
  %706 = @func_651(%704, %705) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */;
  %707 = %706.2;
  %708 = cast(%var_2896, dtype="bool") /* ty=Tensor[(945), bool] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(1), int32] */;
  %710 = cast(%707, dtype="bool") /* ty=Tensor[(945), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?), bool] */;
  %712 = cast(%var_2883, dtype="float32") /* ty=Tensor[(11, 15, 1), float32] */;
  %713 = tan(%712) /* ty=Tensor[(11, 15, 1), float32] */;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(11, 15, 1), float64] */;
  %715 = cast(%var_2894, dtype="float64") /* ty=Tensor[(30), float64] */;
  %716 = cast(%var_2894, dtype="float64") /* ty=Tensor[(30), float64] */;
  %717 = reshape(%716, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %718 = @func_272(%717) /* ty=(Tensor[(3, 2, 5), float64],) */;
  %719 = greater_equal(%710, %711) /* ty=Tensor[(945), bool] */;
  %720 = maximum(%714, %715) /* ty=Tensor[(11, 15, 30), float64] */;
  %721 = %718.0;
  (%var_2893, %719, %720, %721)
}

def @func_8527(%var_8484: Tensor[(7, 11, 4), int16], %var_8494: int64, %var_8497: Tensor[(264), float64], %var_8498: Tensor[(260), float32], %var_8499: Tensor[(30), float64]) -> (Tensor[(7, 11, 4), bool], Tensor[(945), float32], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64], Tensor[(22, 1183), int16], Tensor[(7, 11, 4), float32]) {
  %722 = cast(meta[relay.Constant][74] /* ty=Tensor[(7, 11, 4), int16] */, dtype="bool") /* ty=Tensor[(7, 11, 4), bool] */;
  %723 = shape_of(%var_8484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%var_8484, dtype="bool") /* ty=Tensor[(7, 11, 4), bool] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %726 = cast(%var_8494, dtype="int64") /* ty=int64 */;
  %727 = cast(meta[relay.Constant][75] /* ty=Tensor[(1183), int64] */, dtype="int64") /* ty=Tensor[(1183), int64] */;
  %728 = cast(meta[relay.Constant][76] /* ty=Tensor[(22, 1), float64] */, dtype="float64") /* ty=Tensor[(22, 1), float64] */;
  %729 = cast(%var_8497, dtype="float64") /* ty=Tensor[(264), float64] */;
  %730 = cast(%var_8498, dtype="float32") /* ty=Tensor[(260), float32] */;
  %731 = cast(%var_8499, dtype="float64") /* ty=Tensor[(30), float64] */;
  %732 = reshape(%726, newshape=[]) /* ty=int64 */;
  %733 = reshape(%727, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int64] */;
  %734 = reshape(%728, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %735 = reshape(%729, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %736 = reshape(%730, newshape=[5, 52]) /* ty=Tensor[(5, 52), float32] */;
  %737 = reshape(%731, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %738 = @func_5946(%732, %733, %734, %735, %736, %737) /* ty=(Tensor[(11, 6, 9), int64], Tensor[(594), int64], Tensor[(13, 7, 13), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64], Tensor[(945), float32], Tensor[(5, 52), float32], Tensor[(6), bool], Tensor[(30), float64]) */;
  %739 = cast(meta[relay.Constant][75] /* ty=Tensor[(1183), int64] */, dtype="int16") /* ty=Tensor[(1183), int16] */;
  %740 = cast(meta[relay.Constant][76] /* ty=Tensor[(22, 1), float64] */, dtype="int16") /* ty=Tensor[(22, 1), int16] */;
  %741 = cast(%var_8484, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %742 = erf(%741) /* ty=Tensor[(7, 11, 4), float64] */;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %744 = greater_equal(%724, %725) /* ty=Tensor[(7, 11, 4), bool] */;
  %745 = %738.6;
  %746 = logical_xor(%739, %740) /* ty=Tensor[(22, 1183), int16] */;
  %747 = log2(%743) /* ty=Tensor[(7, 11, 4), float32] */;
  (%744, %745, %var_8494, %var_8497, %var_8498, %var_8499, %746, %747)
}

def @func_14273(%var_14240: Tensor[(18, 4), uint16], %var_14242: Tensor[(30), float64], %var_14252: Tensor[(12, 32), float32], %var_14253: uint64, %var_14270: Tensor[(90), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(384), float32], Tensor[(12, 32), float32], Tensor[(320), float64], Tensor[(18, 4), bool], Tensor[(90), float32], Tensor[(90), float32]) {
  %748 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %749 = cast(%var_14240, dtype="uint16") /* ty=Tensor[(18, 4), uint16] */;
  %750 = cast(meta[relay.Constant][77] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %751 = cast(%var_14242, dtype="float64") /* ty=Tensor[(30), float64] */;
  %752 = reshape(%749, newshape=[4, 2, 9]) /* ty=Tensor[(4, 2, 9), uint16] */;
  %753 = reshape(%750, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %754 = reshape(%751, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %755 = @func_4933(%752, %753, %754) /* ty=(Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) */;
  %756 = cast(%var_14252, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
  %757 = cast(%var_14253, dtype="uint64") /* ty=uint64 */;
  %758 = cast(meta[relay.Constant][78] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %759 = reshape(%756, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %760 = reshape(%757, newshape=[]) /* ty=uint64 */;
  %761 = reshape(%758, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %762 = @func_13181(%759, %760, %761) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(384), float32], Tensor[(936, 2), float32], Tensor[(16, 4, 5), float64], Tensor[(320), float64]) */;
  %763 = cast(%var_14240, dtype="bool") /* ty=Tensor[(18, 4), bool] */;
  %764 = cast(%var_14253, dtype="bool") /* ty=bool */;
  %765 = cast(%var_14270, dtype="float32") /* ty=Tensor[(90), float32] */;
  %766 = cast(%var_14242, dtype="float64") /* ty=Tensor[(30), float64] */;
  %767 = reshape(%765, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %768 = reshape(%766, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %769 = @func_11122(%767, %768) /* ty=(Tensor[(16, 9, 14), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(6), bool]) */;
  %770 = %748.0;
  %771 = %755.6;
  %772 = %762.1;
  %773 = greater_equal(%763, %764) /* ty=Tensor[(18, 4), bool] */;
  %774 = %769.2;
  (%770, %771, meta[relay.Constant][77] /* ty=Tensor[(945), float32] */, %var_14242, %772, %var_14252, meta[relay.Constant][78] /* ty=Tensor[(320), float64] */, %773, %774, %var_14270)
}

def @func_567(%var_561: Tensor[(9, 15, 7), float32], %var_565: Tensor[(30), float64]) -> (Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
  %775 = cast(%var_561, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %776 = cast(%var_565, dtype="float64") /* ty=Tensor[(30), float64] */;
  %777 = reshape(%776, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %778 = @func_272(%777) /* ty=(Tensor[(3, 2, 5), float64],) */;
  %779 = sqrt(%775) /* ty=Tensor[(9, 15, 7), float32] */;
  %780 = %778.0;
  (%779, %780, %var_565)
}

def @func_4933(%var_4880: Tensor[(4, 2, 9), uint16], %var_4911: Tensor[(15, 63), float32], %var_4912: Tensor[(30), float64]) -> (Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) {
  %781 = cast(meta[relay.Constant][79] /* ty=Tensor[(4, 2, 9), uint16] */, dtype="uint16") /* ty=Tensor[(4, 2, 9), uint16] */;
  %782 = shape_of(%var_4880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%var_4880, dtype="uint16") /* ty=Tensor[(4, 2, 9), uint16] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %785 = cast(meta[relay.Constant][80] /* ty=Tensor[(165), float32] */, dtype="float32") /* ty=Tensor[(165), float32] */;
  %786 = cast(%var_4911, dtype="float32") /* ty=Tensor[(15, 63), float32] */;
  %787 = cast(%var_4912, dtype="float64") /* ty=Tensor[(30), float64] */;
  %788 = cast(%var_4911, dtype="float32") /* ty=Tensor[(15, 63), float32] */;
  %789 = reshape(%785, newshape=[11, 15, 1]) /* ty=Tensor[(11, 15, 1), float32] */;
  %790 = reshape(%786, newshape=[105, 9]) /* ty=Tensor[(105, 9), float32] */;
  %791 = reshape(%787, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %792 = reshape(%788, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %793 = @func_2916(%789, %790, %791, %792) /* ty=(Tensor[(105, 9), float32], Tensor[(945), bool], Tensor[(11, 15, 30), float64], Tensor[(3, 2, 5), float64]) */;
  %794 = cast(meta[relay.Constant][81] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %795 = reshape(%794, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float32] */;
  %796 = @func_3879(%795) /* ty=(Tensor[(1, 8, 1), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32]) */;
  %797 = bitwise_or(%783, %784) /* ty=Tensor[(4, 2, 9), uint16] */;
  %798 = %793.2;
  %799 = %796.2;
  (%797, %798, meta[relay.Constant][80] /* ty=Tensor[(165), float32] */, %var_4911, %var_4912, %799, meta[relay.Constant][81] /* ty=Tensor[(8), float32] */)
}

def @func_13643() -> (Tensor[(260), float32],) {
  %800 = @func_13341() /* ty=(Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) */;
  %801 = %800.2;
  (%801,)
}

def @func_13089(%var_13071: Tensor[(5, 6, 16), float32]) -> (Tensor[(5, 6, 16), float32], Tensor[(5, 6, 16), float32], Tensor[(4, 13, 3), uint8], Tensor[(156), uint8]) {
  %802 = cast(%var_13071, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
  %803 = cast(%var_13071, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
  %804 = cast(meta[relay.Constant][82] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %805 = reshape(%804, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), uint8] */;
  %806 = atan(%802) /* ty=Tensor[(5, 6, 16), float32] */;
  %807 = erf(%803) /* ty=Tensor[(5, 6, 16), float32] */;
  %808 = @func_7150(%805) /* ty=Tensor[(4, 13, 3), uint8] */;
  (%806, %807, %808, meta[relay.Constant][82] /* ty=Tensor[(156), uint8] */)
}

def @func_5946(%var_5906: int64, %var_5907: Tensor[(13, 7, 13), int64], %var_5930: Tensor[(22), float64], %var_5931: Tensor[(264), float64], %var_5938: Tensor[(5, 52), float32], %var_5940: Tensor[(30), float64]) -> (Tensor[(11, 6, 9), int64], Tensor[(594), int64], Tensor[(13, 7, 13), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64], Tensor[(945), float32], Tensor[(5, 52), float32], Tensor[(6), bool], Tensor[(30), float64]) {
  %809 = cast(meta[relay.Constant][83] /* ty=Tensor[(594), int64] */, dtype="int64") /* ty=Tensor[(594), int64] */;
  %810 = cast(meta[relay.Constant][83] /* ty=Tensor[(594), int64] */, dtype="int64") /* ty=Tensor[(594), int64] */;
  %811 = reshape(%809, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), int64] */;
  %812 = reshape(%810, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), int64] */;
  %813 = @func_2386(%811, %812) /* ty=(Tensor[(11, 6, 9), int64],) */;
  %814 = cast(%var_5906, dtype="int64") /* ty=int64 */;
  %815 = cast(%var_5907, dtype="int64") /* ty=Tensor[(13, 7, 13), int64] */;
  %816 = minimum(%814, %815) /* ty=Tensor[(13, 7, 13), int64] */;
  %817 = cast(%816, dtype="float32") /* ty=Tensor[(13, 7, 13), float32] */;
  %818 = cast(%var_5930, dtype="float64") /* ty=Tensor[(22), float64] */;
  %819 = cast(%var_5931, dtype="float64") /* ty=Tensor[(264), float64] */;
  %820 = reshape(%818, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float64] */;
  %821 = reshape(%819, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), float64] */;
  %822 = cast(%var_5938, dtype="float32") /* ty=Tensor[(5, 52), float32] */;
  %823 = cast(meta[relay.Constant][84] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %824 = cast(%var_5940, dtype="float64") /* ty=Tensor[(30), float64] */;
  %825 = reshape(%822, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float32] */;
  %826 = reshape(%823, newshape=[3, 2]) /* ty=Tensor[(3, 2), bool] */;
  %827 = reshape(%824, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %828 = @func_2727(%825, %826, %827) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */;
  %829 = %813.0;
  %830 = atan(%817) /* ty=Tensor[(13, 7, 13), float32] */;
  %831 = @func_3373(%820, %821) /* ty=Tensor[(2, 12, 11), float32] */;
  %832 = %828.5;
  (%829, meta[relay.Constant][83] /* ty=Tensor[(594), int64] */, %830, %831, %var_5930, %var_5931, %832, %var_5938, meta[relay.Constant][84] /* ty=Tensor[(6), bool] */, %var_5940)
}

def @func_13589() -> Tensor[(10, 1, 16), float64] {
  %833 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %833.0
}

def @func_9071(%var_9066: Tensor[(10, 10, 10), uint8]) -> Tensor[(10, 10, 10), uint8] {
  %834 = cast(%var_9066, dtype="uint8") /* ty=Tensor[(10, 10, 10), uint8] */;
  %835 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(10, 10, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(meta[relay.Constant][85] /* ty=Tensor[(10, 10, 10), uint8] */, dtype="uint8") /* ty=Tensor[(10, 10, 10), uint8] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%836, %837) /* ty=Tensor[(10, 10, 10), uint8] */
}

def @func_11923(%var_11903: Tensor[(11, 15, 16), float32]) -> (Tensor[(11, 15, 16), float32],) {
  %838 = cast(%var_11903, dtype="float32") /* ty=Tensor[(11, 15, 16), float32] */;
  %839 = erf(%838) /* ty=Tensor[(11, 15, 16), float32] */;
  (%839,)
}

def @func_10910(%var_10899: Tensor[(16, 3, 6), float64], %var_10907: Tensor[(945), float32], %var_10908: Tensor[(30, 1), float64]) -> (Tensor[(16, 3, 6), float64], Tensor[(1, 30), float64], Tensor[(945), float32], Tensor[(30, 1), float64]) {
  %840 = cast(%var_10899, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %841 = cast(%var_10907, dtype="float32") /* ty=Tensor[(945), float32] */;
  %842 = cast(%var_10908, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
  %843 = reshape(%841, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %844 = reshape(%842, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
  %845 = @func_651(%843, %844) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */;
  %846 = atan(%840) /* ty=Tensor[(16, 3, 6), float64] */;
  %847 = %845.3;
  (%846, %847, %var_10907, %var_10908)
}

def @func_2553(%var_2464: Tensor[(4, 9, 3), float64], %var_2483: bool, %var_2484: Tensor[(1, 6), bool], %var_2499: Tensor[(945), float32], %var_2500: Tensor[(30), float64]) -> (Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) {
  %848 = cast(%var_2464, dtype="bool") /* ty=Tensor[(4, 9, 3), bool] */;
  %849 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(4, 9, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(meta[relay.Constant][86] /* ty=Tensor[(4, 9, 3), float64] */, dtype="bool") /* ty=Tensor[(4, 9, 3), bool] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %852 = cast(%var_2483, dtype="bool") /* ty=bool */;
  %853 = cast(%var_2484, dtype="bool") /* ty=Tensor[(1, 6), bool] */;
  %854 = reshape(%852, newshape=[]) /* ty=bool */;
  %855 = reshape(%853, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), bool] */;
  %856 = @func_64(%854, %855) /* ty=(Tensor[(1, 1, 6), bool],) */;
  %857 = cast(%var_2499, dtype="float32") /* ty=Tensor[(945), float32] */;
  %858 = cast(%var_2500, dtype="float64") /* ty=Tensor[(30), float64] */;
  %859 = reshape(%857, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %860 = reshape(%858, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %861 = @func_567(%859, %860) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */;
  %862 = cast(%var_2483, dtype="bool") /* ty=bool */;
  %863 = %856.0;
  %864 = cast(%863, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %865 = reshape(%862, newshape=[]) /* ty=bool */;
  %866 = reshape(%864, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), bool] */;
  %867 = @func_64(%865, %866) /* ty=(Tensor[(1, 1, 6), bool],) */;
  %868 = %861.1;
  %869 = cast(%868, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %870 = reshape(%869, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
  %871 = @func_272(%870) /* ty=(Tensor[(3, 2, 5), float64],) */;
  %872 = greater(%850, %851) /* ty=Tensor[(4, 9, 3), bool] */;
  %873 = %867.0;
  %874 = %871.0;
  (%872, %863, %var_2483, %var_2484, %868, %var_2499, %var_2500, %873, %874)
}

def @func_5115(%var_5098: Tensor[(8, 2, 7), bool], %var_5099: Tensor[(8, 2, 7), bool]) -> Tensor[(8, 2, 7), bool] {
  %875 = cast(%var_5099, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %876 = shape_of(%var_5098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%var_5098, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%877, %878) /* ty=Tensor[(8, 2, 7), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13759(%var_13757: uint16, %var_13758: Tensor[(16, 8, 9), uint16]) -> (Tensor[(10, 1, 16), float64], Tensor[(16, 8, 9), float64]) {
  %7 = fn (%var_13693: uint16, %var_13694: Tensor[(16, 8, 9), uint16]) -> (Tensor[(10, 1, 16), float64], Tensor[(16, 8, 9), float64]) {
    %0 = @func_13069() /* ty=(Tensor[(10, 1, 16), float64],) */;
    %1 = cast(%var_13693, dtype="uint16") /* ty=uint16 */;
    %2 = cast(%var_13694, dtype="uint16") /* ty=Tensor[(16, 8, 9), uint16] */;
    %3 = bitwise_and(%1, %2) /* ty=Tensor[(16, 8, 9), uint16] */;
    %4 = cast(%3, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
    %5 = %0.0;
    %6 = log2(%4) /* ty=Tensor[(16, 8, 9), float64] */;
    (%5, %6)
  };
  %7(%var_13757, %var_13758) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(16, 8, 9), float64]) */
}

def @func_13481(%var_13479: bool, %var_13480: Tensor[(30), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(4, 9, 3), bool], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(315, 3), float32], Tensor[(30), float64]) {
  @func_13477(%var_13479, %var_13480) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(4, 9, 3), bool], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(315, 3), float32], Tensor[(30), float64]) */
}

def @func_13872(%var_13870: Tensor[(10, 8, 16), float64]) -> (Tensor[(10, 8, 16), int16], Tensor[(1694, 30), int16], Tensor[(384), float32], uint64) {
  @func_13869(%var_13870) /* ty=(Tensor[(10, 8, 16), int16], Tensor[(1694, 30), int16], Tensor[(384), float32], uint64) */
}

def @func_2410(%var_2409: Tensor[(2, 1, 15), float32]) -> Tensor[(2, 15, 15), float32] {
  %10 = fn (%var_2394: Tensor[(2, 1, 15), float32]) -> Tensor[(2, 15, 15), float32] {
    %8 = cast(%var_2394, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
    %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 15), float32] */;
    floor_mod(%8, %9) /* ty=Tensor[(2, 15, 15), float32] */
  };
  %10(%var_2409) /* ty=Tensor[(2, 15, 15), float32] */
}

def @func_5946(%var_5906: int64, %var_5907: Tensor[(13, 7, 13), int64], %var_5930: Tensor[(22), float64], %var_5931: Tensor[(264), float64], %var_5938: Tensor[(5, 52), float32], %var_5940: Tensor[(30), float64]) -> (Tensor[(11, 6, 9), int64], Tensor[(594), int64], Tensor[(13, 7, 13), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64], Tensor[(945), float32], Tensor[(5, 52), float32], Tensor[(6), bool], Tensor[(30), float64]) {
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(594), int64] */, dtype="int64") /* ty=Tensor[(594), int64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(594), int64] */, dtype="int64") /* ty=Tensor[(594), int64] */;
  %13 = reshape(%11, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), int64] */;
  %14 = reshape(%12, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), int64] */;
  %15 = @func_2386(%13, %14) /* ty=(Tensor[(11, 6, 9), int64],) */;
  %16 = cast(%var_5906, dtype="int64") /* ty=int64 */;
  %17 = cast(%var_5907, dtype="int64") /* ty=Tensor[(13, 7, 13), int64] */;
  %18 = minimum(%16, %17) /* ty=Tensor[(13, 7, 13), int64] */;
  %19 = cast(%18, dtype="float32") /* ty=Tensor[(13, 7, 13), float32] */;
  %20 = cast(%var_5930, dtype="float64") /* ty=Tensor[(22), float64] */;
  %21 = cast(%var_5931, dtype="float64") /* ty=Tensor[(264), float64] */;
  %22 = reshape(%20, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float64] */;
  %23 = reshape(%21, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), float64] */;
  %24 = cast(%var_5938, dtype="float32") /* ty=Tensor[(5, 52), float32] */;
  %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %26 = cast(%var_5940, dtype="float64") /* ty=Tensor[(30), float64] */;
  %27 = reshape(%24, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float32] */;
  %28 = reshape(%25, newshape=[3, 2]) /* ty=Tensor[(3, 2), bool] */;
  %29 = reshape(%26, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %30 = @func_2727(%27, %28, %29) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */;
  %31 = %15.0;
  %32 = atan(%19) /* ty=Tensor[(13, 7, 13), float32] */;
  %33 = @func_3373(%22, %23) /* ty=Tensor[(2, 12, 11), float32] */;
  %34 = %30.5;
  (%31, meta[relay.Constant][1] /* ty=Tensor[(594), int64] */, %32, %33, %var_5930, %var_5931, %34, %var_5938, meta[relay.Constant][2] /* ty=Tensor[(6), bool] */, %var_5940)
}

def @func_68(%var_66: bool, %var_67: Tensor[(1, 1, 6), bool]) -> (Tensor[(1, 1, 6), bool],) {
  @func_64(%var_66, %var_67) /* ty=(Tensor[(1, 1, 6), bool],) */
}

def @func_2559(%var_2554: Tensor[(4, 9, 3), float64], %var_2555: bool, %var_2556: Tensor[(1, 6), bool], %var_2557: Tensor[(945), float32], %var_2558: Tensor[(30), float64]) -> (Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) {
  %62 = fn (%var_2464: Tensor[(4, 9, 3), float64], %var_2483: bool, %var_2484: Tensor[(1, 6), bool], %var_2499: Tensor[(945), float32], %var_2500: Tensor[(30), float64]) -> (Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) {
    %35 = cast(%var_2464, dtype="bool") /* ty=Tensor[(4, 9, 3), bool] */;
    %36 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(4, 9, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 9, 3), float64] */, dtype="bool") /* ty=Tensor[(4, 9, 3), bool] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %39 = cast(%var_2483, dtype="bool") /* ty=bool */;
    %40 = cast(%var_2484, dtype="bool") /* ty=Tensor[(1, 6), bool] */;
    %41 = reshape(%39, newshape=[]) /* ty=bool */;
    %42 = reshape(%40, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), bool] */;
    %43 = @func_64(%41, %42) /* ty=(Tensor[(1, 1, 6), bool],) */;
    %44 = cast(%var_2499, dtype="float32") /* ty=Tensor[(945), float32] */;
    %45 = cast(%var_2500, dtype="float64") /* ty=Tensor[(30), float64] */;
    %46 = reshape(%44, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
    %47 = reshape(%45, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %48 = @func_567(%46, %47) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */;
    %49 = cast(%var_2483, dtype="bool") /* ty=bool */;
    %50 = %43.0;
    %51 = cast(%50, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
    %52 = reshape(%49, newshape=[]) /* ty=bool */;
    %53 = reshape(%51, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), bool] */;
    %54 = @func_64(%52, %53) /* ty=(Tensor[(1, 1, 6), bool],) */;
    %55 = %48.1;
    %56 = cast(%55, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
    %57 = reshape(%56, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
    %58 = @func_272(%57) /* ty=(Tensor[(3, 2, 5), float64],) */;
    %59 = greater(%37, %38) /* ty=Tensor[(4, 9, 3), bool] */;
    %60 = %54.0;
    %61 = %58.0;
    (%59, %50, %var_2483, %var_2484, %55, %var_2499, %var_2500, %60, %61)
  };
  %62(%var_2554, %var_2555, %var_2556, %var_2557, %var_2558) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */
}

def @func_10061(%var_10060: Tensor[(11, 8, 13), float32]) -> (Tensor[(11, 8, 13), float32], Tensor[(2880), int32], Tensor[(2880), int32]) {
  %69 = fn (%var_10034: Tensor[(11, 8, 13), float32]) -> (Tensor[(11, 8, 13), float32], Tensor[(2880), int32], Tensor[(2880), int32]) {
    %63 = cast(%var_10034, dtype="float32") /* ty=Tensor[(11, 8, 13), float32] */;
    %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(2880), int32] */, dtype="int32") /* ty=Tensor[(2880), int32] */;
    %65 = reshape(%64, newshape=[2880]) /* ty=Tensor[(2880), int32] */;
    %66 = @func_7714(%65) /* ty=(Tensor[(10, 3, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(2880), int32], Tensor[(10, 3), float64]) */;
    %67 = log(%63) /* ty=Tensor[(11, 8, 13), float32] */;
    %68 = %66.2;
    (%67, %68, meta[relay.Constant][4] /* ty=Tensor[(2880), int32] */)
  };
  %69(%var_10060) /* ty=(Tensor[(11, 8, 13), float32], Tensor[(2880), int32], Tensor[(2880), int32]) */
}

def @func_7153(%var_7151: Tensor[(4, 13, 3), uint8]) -> Tensor[(4, 13, 3), uint8] {
  @func_7150(%var_7151) /* ty=Tensor[(4, 13, 3), uint8] */
}

def @func_9033(%var_9030: Tensor[(6, 3, 5), float32], %var_9031: Tensor[(5, 6), float64], %var_9032: Tensor[(6), bool]) -> (Tensor[(6, 3, 5), float32], Tensor[(945), float32], Tensor[(2880), int32], Tensor[(5, 6), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool]) {
  %92 = fn (%var_9000: Tensor[(6, 3, 5), float32], %var_9005: Tensor[(5, 6), float64], %var_9017: Tensor[(6), bool]) -> (Tensor[(6, 3, 5), float32], Tensor[(945), float32], Tensor[(2880), int32], Tensor[(5, 6), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool]) {
    %70 = cast(%var_9000, dtype="float32") /* ty=Tensor[(6, 3, 5), float32] */;
    %71 = cast(meta[relay.Constant][5] /* ty=Tensor[(2880), int32] */, dtype="int32") /* ty=Tensor[(2880), int32] */;
    %72 = cast(meta[relay.Constant][5] /* ty=Tensor[(2880), int32] */, dtype="int32") /* ty=Tensor[(2880), int32] */;
    %73 = cast(%var_9005, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
    %74 = reshape(%71, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
    %75 = reshape(%72, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
    %76 = reshape(%73, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %77 = @func_3336(%74, %75, %76) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) */;
    %78 = cast(meta[relay.Constant][6] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
    %79 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %80 = cast(%var_9017, dtype="bool") /* ty=Tensor[(6), bool] */;
    %81 = %77.2;
    %82 = cast(%81, dtype="float32") /* ty=Tensor[(945), float32] */;
    %83 = cast(%var_9005, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
    %84 = reshape(%78, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
    %85 = reshape(%79, newshape=[]) /* ty=bool */;
    %86 = reshape(%80, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
    %87 = reshape(%82, newshape=[945]) /* ty=Tensor[(945), float32] */;
    %88 = reshape(%83, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %89 = @func_2553(%84, %85, %86, %87, %88) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
    %90 = cos(%70) /* ty=Tensor[(6, 3, 5), float32] */;
    %91 = %89.7;
    (%90, %81, meta[relay.Constant][5] /* ty=Tensor[(2880), int32] */, %var_9005, %91, meta[relay.Constant][6] /* ty=Tensor[(108), float64] */, False /* ty=bool */, %var_9017)
  };
  %92(%var_9030, %var_9031, %var_9032) /* ty=(Tensor[(6, 3, 5), float32], Tensor[(945), float32], Tensor[(2880), int32], Tensor[(5, 6), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool]) */
}

def @func_2389(%var_2387: Tensor[(11, 6, 9), int64], %var_2388: Tensor[(11, 6, 9), int64]) -> (Tensor[(11, 6, 9), int64],) {
  %98 = fn (%var_2381: Tensor[(11, 6, 9), int64], %var_2382: Tensor[(11, 6, 9), int64]) -> (Tensor[(11, 6, 9), int64],) {
    %93 = cast(%var_2382, dtype="int64") /* ty=Tensor[(11, 6, 9), int64] */;
    %94 = shape_of(%var_2381, dtype="int32") /* ty=Tensor[(3), int32] */;
    %95 = cast(%var_2381, dtype="int64") /* ty=Tensor[(11, 6, 9), int64] */;
    %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %97 = bitwise_xor(%95, %96) /* ty=Tensor[(11, 6, 9), int64] */;
    (%97,)
  };
  %98(%var_2387, %var_2388) /* ty=(Tensor[(11, 6, 9), int64],) */
}

def @func_8714(%var_8707: Tensor[(8, 11, 12), float32], %var_8708: Tensor[(108), float64], %var_8709: Tensor[(30), float64], %var_8710: Tensor[(72), uint16], %var_8711: Tensor[(8), float32], %var_8712: Tensor[(1872), uint64], %var_8713: Tensor[(96, 4), float32]) -> (Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(5, 189), float32], Tensor[(30), float64], Tensor[(8, 11, 12), float32], Tensor[(30), float32], Tensor[(72), uint16], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(14, 10, 8), float64], Tensor[(81, 10), int32], Tensor[(8), float32], Tensor[(1872), uint64], Tensor[(96, 4), float32]) {
  %139 = fn (%var_8642: Tensor[(8, 11, 12), float32], %var_8655: Tensor[(108), float64], %var_8659: Tensor[(30), float64], %var_8675: Tensor[(72), uint16], %var_8702: Tensor[(8), float32], %var_8703: Tensor[(1872), uint64], %var_8704: Tensor[(96, 4), float32]) -> (Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(5, 189), float32], Tensor[(30), float64], Tensor[(8, 11, 12), float32], Tensor[(30), float32], Tensor[(72), uint16], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(14, 10, 8), float64], Tensor[(81, 10), int32], Tensor[(8), float32], Tensor[(1872), uint64], Tensor[(96, 4), float32]) {
    %99 = cast(%var_8655, dtype="float64") /* ty=Tensor[(108), float64] */;
    %100 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
    %102 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 189), float32] */, dtype="float32") /* ty=Tensor[(5, 189), float32] */;
    %103 = cast(%var_8659, dtype="float64") /* ty=Tensor[(30), float64] */;
    %104 = reshape(%99, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
    %105 = reshape(%100, newshape=[]) /* ty=bool */;
    %106 = reshape(%101, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
    %107 = reshape(%102, newshape=[945]) /* ty=Tensor[(945), float32] */;
    %108 = reshape(%103, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %109 = @func_2553(%104, %105, %106, %107, %108) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
    %110 = cast(%var_8642, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
    %111 = log2(%110) /* ty=Tensor[(8, 11, 12), float32] */;
    %112 = cast(%111, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
    %113 = cast(%var_8675, dtype="uint16") /* ty=Tensor[(72), uint16] */;
    %114 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 189), float32] */, dtype="float32") /* ty=Tensor[(5, 189), float32] */;
    %115 = cast(%var_8659, dtype="float64") /* ty=Tensor[(30), float64] */;
    %116 = reshape(%113, newshape=[4, 2, 9]) /* ty=Tensor[(4, 2, 9), uint16] */;
    %117 = reshape(%114, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
    %118 = reshape(%115, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %119 = @func_4933(%116, %117, %118) /* ty=(Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) */;
    %120 = cast(meta[relay.Constant][9] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
    %121 = reshape(%120, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
    %122 = @func_5153(%121) /* ty=(Tensor[(8, 11, 9), float32],) */;
    %123 = cast(meta[relay.Constant][10] /* ty=Tensor[(81, 10), int32] */, dtype="int32") /* ty=Tensor[(81, 10), int32] */;
    %124 = cast(meta[relay.Constant][10] /* ty=Tensor[(81, 10), int32] */, dtype="int32") /* ty=Tensor[(81, 10), int32] */;
    %125 = cast(%var_8702, dtype="float32") /* ty=Tensor[(8), float32] */;
    %126 = cast(%var_8703, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
    %127 = cast(%var_8704, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
    %128 = reshape(%123, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int32] */;
    %129 = reshape(%124, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int32] */;
    %130 = reshape(%125, newshape=[8]) /* ty=Tensor[(8), float32] */;
    %131 = reshape(%126, newshape=[1872]) /* ty=Tensor[(1872), uint64] */;
    %132 = reshape(%127, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
    %133 = @func_8292(%128, %129, %130, %131, %132) /* ty=(Tensor[(15, 6, 9), int32], Tensor[(30), float32], Tensor[(8), float32], Tensor[(16, 9, 13), uint64], Tensor[(1872), uint64], Tensor[(14, 10, 8), float64], Tensor[(16, 2, 12), float64], Tensor[(6, 64), float32], Tensor[(560, 2), uint64]) */;
    %134 = %109.4;
    %135 = acosh(%112) /* ty=Tensor[(8, 11, 12), float32] */;
    %136 = %119.5;
    %137 = %122.0;
    %138 = %133.5;
    (%134, %var_8655, True /* ty=bool */, meta[relay.Constant][7] /* ty=Tensor[(6), bool] */, meta[relay.Constant][8] /* ty=Tensor[(5, 189), float32] */, %var_8659, %135, %136, %var_8675, %137, meta[relay.Constant][9] /* ty=Tensor[(792), float32] */, %138, meta[relay.Constant][10] /* ty=Tensor[(81, 10), int32] */, %var_8702, %var_8703, %var_8704)
  };
  %139(%var_8707, %var_8708, %var_8709, %var_8710, %var_8711, %var_8712, %var_8713) /* ty=(Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(5, 189), float32], Tensor[(30), float64], Tensor[(8, 11, 12), float32], Tensor[(30), float32], Tensor[(72), uint16], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(14, 10, 8), float64], Tensor[(81, 10), int32], Tensor[(8), float32], Tensor[(1872), uint64], Tensor[(96, 4), float32]) */
}

def @func_13282(%var_13280: Tensor[(90), int16]) -> (Tensor[(10, 1, 16), float64], bool, Tensor[(2002), int32], Tensor[(224), float32], Tensor[(7, 16, 2), float64], Tensor[(16, 9, 13), uint64], Tensor[(90), int16]) {
  %140 = @func_13069() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %141 = cast(meta[relay.Constant][11] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %142 = cast(meta[relay.Constant][11] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %143 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %144 = reshape(%141, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), int32] */;
  %145 = reshape(%142, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), int32] */;
  %146 = reshape(%143, newshape=[]) /* ty=bool */;
  %147 = @func_206(%144, %145, %146) /* ty=(Tensor[(14, 11, 13), int32], Tensor[(1, 1, 6), bool], bool, Tensor[(3, 2), bool]) */;
  %148 = cast(meta[relay.Constant][12] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %149 = cast(meta[relay.Constant][12] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %150 = reshape(%148, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), float32] */;
  %151 = reshape(%149, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), float32] */;
  %152 = @func_11348(%150, %151) /* ty=Tensor[(7, 16, 2), int32] */;
  %153 = cast(%152, dtype="uint32") /* ty=Tensor[(7, 16, 2), uint32] */;
  %154 = cast(False /* ty=bool */, dtype="uint32") /* ty=uint32 */;
  %155 = subtract(%153, %154) /* ty=Tensor[(7, 16, 2), uint32] */;
  %156 = cast(%155, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
  %157 = cast(False /* ty=bool */, dtype="int16") /* ty=int16 */;
  %158 = cast(%var_13280, dtype="int16") /* ty=Tensor[(90), int16] */;
  %159 = reshape(%157, newshape=[]) /* ty=int16 */;
  %160 = reshape(%158, newshape=[1, 6, 15]) /* ty=Tensor[(1, 6, 15), int16] */;
  %161 = @func_1072(%159, %160) /* ty=(Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) */;
  %162 = %140.0;
  %163 = %147.2;
  %164 = cosh(%156) /* ty=Tensor[(7, 16, 2), float64] */;
  %165 = %161.1;
  (%162, %163, meta[relay.Constant][11] /* ty=Tensor[(2002), int32] */, meta[relay.Constant][12] /* ty=Tensor[(224), float32] */, %164, %165, %var_13280)
}

def @func_570(%var_568: Tensor[(9, 15, 7), float32], %var_569: Tensor[(30), float64]) -> (Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
  %172 = fn (%var_561: Tensor[(9, 15, 7), float32], %var_565: Tensor[(30), float64]) -> (Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) {
    %166 = cast(%var_561, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
    %167 = cast(%var_565, dtype="float64") /* ty=Tensor[(30), float64] */;
    %168 = reshape(%167, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
    %169 = @func_272(%168) /* ty=(Tensor[(3, 2, 5), float64],) */;
    %170 = sqrt(%166) /* ty=Tensor[(9, 15, 7), float32] */;
    %171 = %169.0;
    (%170, %171, %var_565)
  };
  %172(%var_568, %var_569) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */
}

def @func_5612(%var_5609: Tensor[(3, 3, 3), float64], %var_5610: Tensor[(3, 3, 3), float64], %var_5611: Tensor[(792), float32]) -> (Tensor[(3, 3, 3), float64], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) {
  @func_5607(%var_5609, %var_5610, %var_5611) /* ty=(Tensor[(3, 3, 3), float64], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */
}

def @func_10008(%var_10001: Tensor[(1694), float32]) -> (Tensor[(15, 6, 9), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64], Tensor[(1694), float32], Tensor[(15, 1, 4), float64]) {
  %173 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 63), float32] */, dtype="float32") /* ty=Tensor[(15, 63), float32] */;
  %174 = cast(meta[relay.Constant][14] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %175 = reshape(%173, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %176 = reshape(%174, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
  %177 = @func_651(%175, %176) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */;
  %178 = cast(%var_10001, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %179 = cast(meta[relay.Constant][14] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %180 = reshape(%178, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %181 = reshape(%179, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %182 = @func_3233(%180, %181) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) */;
  %183 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 1, 4), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 4), float32] */;
  %184 = log(%183) /* ty=Tensor[(15, 1, 4), float32] */;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(15, 1, 4), float64] */;
  %186 = %177.0;
  %187 = %182.1;
  %188 = sinh(%185) /* ty=Tensor[(15, 1, 4), float64] */;
  (%186, meta[relay.Constant][13] /* ty=Tensor[(15, 63), float32] */, meta[relay.Constant][14] /* ty=Tensor[(30), float64] */, %187, %var_10001, %188)
}

def @func_274(%var_273: Tensor[(3, 2, 5), float64]) -> (Tensor[(3, 2, 5), float64],) {
  %194 = fn (%var_253: Tensor[(3, 2, 5), float64]) -> (Tensor[(3, 2, 5), float64],) {
    %189 = cast(%var_253, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
    %190 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(3, 2, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %191 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 2, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
    %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %193 = multiply(%191, %192) /* ty=Tensor[(3, 2, 5), float64] */;
    (%193,)
  };
  %194(%var_273) /* ty=(Tensor[(3, 2, 5), float64],) */
}

def @main(%var_14554: Tensor[(10, 3, 16), float64]) -> (Tensor[(10, 3, 16), int32],) {
  %195 = @func_13589() /* ty=Tensor[(10, 1, 16), float64] */;
  %196 = cast(%195, dtype="int32") /* ty=Tensor[(10, 1, 16), int32] */;
  %197 = cast(%var_14554, dtype="int32") /* ty=Tensor[(10, 3, 16), int32] */;
  %198 = subtract(%196, %197) /* ty=Tensor[(10, 3, 16), int32] */;
  (%198,)
}

def @func_10881(%var_10877: Tensor[(16, 11, 10), float32]) -> (Tensor[(16, 11, 10), float32],) {
  %199 = cast(%var_10877, dtype="float32") /* ty=Tensor[(16, 11, 10), float32] */;
  %200 = asin(%199) /* ty=Tensor[(16, 11, 10), float32] */;
  (%200,)
}

def @func_11126(%var_11124: Tensor[(90), float32], %var_11125: Tensor[(30), float64]) -> (Tensor[(16, 9, 14), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(6), bool]) {
  @func_11122(%var_11124, %var_11125) /* ty=(Tensor[(16, 9, 14), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(6), bool]) */
}

def @func_11122(%var_11110: Tensor[(90), float32], %var_11111: Tensor[(30), float64]) -> (Tensor[(16, 9, 14), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(6), bool]) {
  %201 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 9, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 9, 14), float64] */;
  %202 = cast(%var_11110, dtype="float32") /* ty=Tensor[(90), float32] */;
  %203 = cast(%var_11111, dtype="float64") /* ty=Tensor[(30), float64] */;
  %204 = cast(meta[relay.Constant][18] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %205 = reshape(%202, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
  %206 = reshape(%203, newshape=[5, 6]) /* ty=Tensor[(5, 6), float64] */;
  %207 = reshape(%204, newshape=[6]) /* ty=Tensor[(6), bool] */;
  %208 = @func_9029(%205, %206, %207) /* ty=(Tensor[(6, 3, 5), float32], Tensor[(945), float32], Tensor[(2880), int32], Tensor[(5, 6), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool]) */;
  %209 = log2(%201) /* ty=Tensor[(16, 9, 14), float64] */;
  %210 = %208.0;
  (%209, %210, %var_11110, %var_11111, meta[relay.Constant][18] /* ty=Tensor[(6), bool] */)
}

def @func_13392() -> (Tensor[(10, 1, 16), float64],) {
  @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */
}

def @func_12385(%var_12382: Tensor[(15, 2, 3), float32], %var_12383: Tensor[(22), float64], %var_12384: Tensor[(264), float64]) -> (Tensor[(15, 2, 3), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64]) {
  @func_12380(%var_12382, %var_12383, %var_12384) /* ty=(Tensor[(15, 2, 3), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64]) */
}

def @func_11724(%var_11696: Tensor[(3, 12, 13), uint64], %var_11697: Tensor[(3, 12, 13), uint64], %var_11709: Tensor[(1, 108), float64], %var_11711: Tensor[(72), uint16], %var_11713: Tensor[(1872), uint64]) -> (Tensor[(3, 12, 13), uint64], Tensor[(5, 189), float32], Tensor[(1056), float32], Tensor[(1, 108), float64], Tensor[(30), float64], Tensor[(72), uint16], Tensor[(2, 4), float32], Tensor[(1872), uint64], Tensor[(384, 1), float32]) {
  %211 = cast(%var_11697, dtype="uint64") /* ty=Tensor[(3, 12, 13), uint64] */;
  %212 = shape_of(%var_11696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%var_11696, dtype="uint64") /* ty=Tensor[(3, 12, 13), uint64] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %215 = cast(meta[relay.Constant][19] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %216 = cast(%var_11709, dtype="float64") /* ty=Tensor[(1, 108), float64] */;
  %217 = cast(meta[relay.Constant][20] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %218 = cast(%var_11711, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %219 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 4), float32] */;
  %220 = cast(%var_11713, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %221 = cast(meta[relay.Constant][22] /* ty=Tensor[(384, 1), float32] */, dtype="float32") /* ty=Tensor[(384, 1), float32] */;
  %222 = reshape(%215, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %223 = reshape(%216, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %224 = reshape(%217, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %225 = reshape(%218, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %226 = reshape(%219, newshape=[8]) /* ty=Tensor[(8), float32] */;
  %227 = reshape(%220, newshape=[1872]) /* ty=Tensor[(1872), uint64] */;
  %228 = reshape(%221, newshape=[96, 4]) /* ty=Tensor[(96, 4), float32] */;
  %229 = @func_8706(%222, %223, %224, %225, %226, %227, %228) /* ty=(Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(5, 189), float32], Tensor[(30), float64], Tensor[(8, 11, 12), float32], Tensor[(30), float32], Tensor[(72), uint16], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(14, 10, 8), float64], Tensor[(81, 10), int32], Tensor[(8), float32], Tensor[(1872), uint64], Tensor[(96, 4), float32]) */;
  %230 = bitwise_and(%213, %214) /* ty=Tensor[(3, 12, 13), uint64] */;
  %231 = %229.4;
  (%230, %231, meta[relay.Constant][19] /* ty=Tensor[(1056), float32] */, %var_11709, meta[relay.Constant][20] /* ty=Tensor[(30), float64] */, %var_11711, meta[relay.Constant][21] /* ty=Tensor[(2, 4), float32] */, %var_11713, meta[relay.Constant][22] /* ty=Tensor[(384, 1), float32] */)
}

def @func_13181(%var_13127: Tensor[(384), float32], %var_13128: uint64, %var_13170: Tensor[(320), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(384), float32], Tensor[(936, 2), float32], Tensor[(16, 4, 5), float64], Tensor[(320), float64]) {
  %232 = @func_13069() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %233 = cast(%var_13127, dtype="float32") /* ty=Tensor[(384), float32] */;
  %234 = cast(%var_13128, dtype="uint64") /* ty=uint64 */;
  %235 = reshape(%233, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float32] */;
  %236 = reshape(%234, newshape=[]) /* ty=uint64 */;
  %237 = @func_6415(%235, %236) /* ty=(Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) */;
  %238 = %237.3;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(936, 2), float32] */;
  %240 = cast(%var_13128, dtype="float32") /* ty=float32 */;
  %241 = cast(%var_13170, dtype="float64") /* ty=Tensor[(320), float64] */;
  %242 = reshape(%241, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float64] */;
  %243 = %232.0;
  %244 = floor_divide(%239, %240) /* ty=Tensor[(936, 2), float32] */;
  %245 = @func_10849(%242) /* ty=Tensor[(16, 4, 5), float64] */;
  (%243, %var_13127, %244, %245, %var_13170)
}

def @func_13285(%var_13283: Tensor[(90), int16]) -> (Tensor[(10, 1, 16), float64], bool, Tensor[(2002), int32], Tensor[(224), float32], Tensor[(7, 16, 2), float64], Tensor[(16, 9, 13), uint64], Tensor[(90), int16]) {
  @func_13282(%var_13283) /* ty=(Tensor[(10, 1, 16), float64], bool, Tensor[(2002), int32], Tensor[(224), float32], Tensor[(7, 16, 2), float64], Tensor[(16, 9, 13), uint64], Tensor[(90), int16]) */
}

def @func_6119(%var_6115: Tensor[(9, 1, 2), int64], %var_6116: Tensor[(9, 9, 2), int64], %var_6117: Tensor[(792), float32], %var_6118: Tensor[(30), float32]) -> (Tensor[(9, 9, 2), int64], Tensor[(792), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(8, 2, 7), bool], Tensor[(3, 3, 3), float32]) {
  @func_6113(%var_6115, %var_6116, %var_6117, %var_6118) /* ty=(Tensor[(9, 9, 2), int64], Tensor[(792), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(8, 2, 7), bool], Tensor[(3, 3, 3), float32]) */
}

def @func_14279(%var_14274: Tensor[(18, 4), uint16], %var_14275: Tensor[(30), float64], %var_14276: Tensor[(12, 32), float32], %var_14277: uint64, %var_14278: Tensor[(90), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(384), float32], Tensor[(12, 32), float32], Tensor[(320), float64], Tensor[(18, 4), bool], Tensor[(90), float32], Tensor[(90), float32]) {
  %273 = fn (%var_14240: Tensor[(18, 4), uint16], %var_14242: Tensor[(30), float64], %var_14252: Tensor[(12, 32), float32], %var_14253: uint64, %var_14270: Tensor[(90), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(384), float32], Tensor[(12, 32), float32], Tensor[(320), float64], Tensor[(18, 4), bool], Tensor[(90), float32], Tensor[(90), float32]) {
    %246 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
    %247 = cast(%var_14240, dtype="uint16") /* ty=Tensor[(18, 4), uint16] */;
    %248 = cast(meta[relay.Constant][23] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
    %249 = cast(%var_14242, dtype="float64") /* ty=Tensor[(30), float64] */;
    %250 = reshape(%247, newshape=[4, 2, 9]) /* ty=Tensor[(4, 2, 9), uint16] */;
    %251 = reshape(%248, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
    %252 = reshape(%249, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %253 = @func_4933(%250, %251, %252) /* ty=(Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) */;
    %254 = cast(%var_14252, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
    %255 = cast(%var_14253, dtype="uint64") /* ty=uint64 */;
    %256 = cast(meta[relay.Constant][24] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
    %257 = reshape(%254, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %258 = reshape(%255, newshape=[]) /* ty=uint64 */;
    %259 = reshape(%256, newshape=[320]) /* ty=Tensor[(320), float64] */;
    %260 = @func_13181(%257, %258, %259) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(384), float32], Tensor[(936, 2), float32], Tensor[(16, 4, 5), float64], Tensor[(320), float64]) */;
    %261 = cast(%var_14240, dtype="bool") /* ty=Tensor[(18, 4), bool] */;
    %262 = cast(%var_14253, dtype="bool") /* ty=bool */;
    %263 = cast(%var_14270, dtype="float32") /* ty=Tensor[(90), float32] */;
    %264 = cast(%var_14242, dtype="float64") /* ty=Tensor[(30), float64] */;
    %265 = reshape(%263, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %266 = reshape(%264, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %267 = @func_11122(%265, %266) /* ty=(Tensor[(16, 9, 14), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(6), bool]) */;
    %268 = %246.0;
    %269 = %253.6;
    %270 = %260.1;
    %271 = greater_equal(%261, %262) /* ty=Tensor[(18, 4), bool] */;
    %272 = %267.2;
    (%268, %269, meta[relay.Constant][23] /* ty=Tensor[(945), float32] */, %var_14242, %270, %var_14252, meta[relay.Constant][24] /* ty=Tensor[(320), float64] */, %271, %272, %var_14270)
  };
  %273(%var_14274, %var_14275, %var_14276, %var_14277, %var_14278) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(384), float32], Tensor[(12, 32), float32], Tensor[(320), float64], Tensor[(18, 4), bool], Tensor[(90), float32], Tensor[(90), float32]) */
}

def @func_13477(%var_13469: bool, %var_13472: Tensor[(30), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(4, 9, 3), bool], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(315, 3), float32], Tensor[(30), float64]) {
  %274 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %275 = cast(meta[relay.Constant][25] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %276 = cast(%var_13469, dtype="bool") /* ty=bool */;
  %277 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 2), bool] */, dtype="bool") /* ty=Tensor[(3, 2), bool] */;
  %278 = cast(meta[relay.Constant][27] /* ty=Tensor[(315, 3), float32] */, dtype="float32") /* ty=Tensor[(315, 3), float32] */;
  %279 = cast(%var_13472, dtype="float64") /* ty=Tensor[(30), float64] */;
  %280 = reshape(%275, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %281 = reshape(%276, newshape=[]) /* ty=bool */;
  %282 = reshape(%277, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
  %283 = reshape(%278, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %284 = reshape(%279, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %285 = @func_2553(%280, %281, %282, %283, %284) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
  %286 = %274.0;
  %287 = %285.0;
  (%286, %287, meta[relay.Constant][25] /* ty=Tensor[(108), float64] */, %var_13469, meta[relay.Constant][26] /* ty=Tensor[(3, 2), bool] */, meta[relay.Constant][27] /* ty=Tensor[(315, 3), float32] */, %var_13472)
}

def @func_814(%var_812: uint64, %var_813: Tensor[(16, 9, 13), uint64]) -> (Tensor[(16, 9, 13), uint64],) {
  @func_810(%var_812, %var_813) /* ty=(Tensor[(16, 9, 13), uint64],) */
}

def @func_13944(%var_13943: Tensor[(90), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(90), float32], Tensor[(10, 3), float64], Tensor[(16, 9, 14), float64]) {
  %298 = fn (%var_13920: Tensor[(90), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(90), float32], Tensor[(10, 3), float64], Tensor[(16, 9, 14), float64]) {
    %288 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
    %289 = cast(%var_13920, dtype="float32") /* ty=Tensor[(90), float32] */;
    %290 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
    %291 = reshape(%289, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %292 = reshape(%290, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %293 = @func_11122(%291, %292) /* ty=(Tensor[(16, 9, 14), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(6), bool]) */;
    %294 = %293.0;
    %295 = cast(%294, dtype="float64") /* ty=Tensor[(16, 9, 14), float64] */;
    %296 = %288.0;
    %297 = sinh(%295) /* ty=Tensor[(16, 9, 14), float64] */;
    (%296, %var_13920, meta[relay.Constant][28] /* ty=Tensor[(10, 3), float64] */, %297)
  };
  %298(%var_13943) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(90), float32], Tensor[(10, 3), float64], Tensor[(16, 9, 14), float64]) */
}

def @func_5155(%var_5154: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), float32],) {
  %301 = fn (%var_5148: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), float32],) {
    %299 = cast(%var_5148, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
    %300 = erf(%299) /* ty=Tensor[(8, 11, 9), float32] */;
    (%300,)
  };
  %301(%var_5154) /* ty=(Tensor[(8, 11, 9), float32],) */
}

def @func_14158(%var_14157: Tensor[(30), float32]) -> (Tensor[(260), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(14, 6, 4), float32], Tensor[(1, 336), float32]) {
  %310 = fn (%var_14144: Tensor[(30), float32]) -> (Tensor[(260), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(14, 6, 4), float32], Tensor[(1, 336), float32]) {
    %302 = @func_13643() /* ty=(Tensor[(260), float32],) */;
    %303 = cast(%var_14144, dtype="float32") /* ty=Tensor[(30), float32] */;
    %304 = reshape(%303, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
    %305 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 336), float32] */, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
    %306 = reshape(%305, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
    %307 = %302.0;
    %308 = @func_2408(%304) /* ty=Tensor[(2, 15, 15), float32] */;
    %309 = @func_6245(%306) /* ty=Tensor[(14, 6, 4), float32] */;
    (%307, %308, %var_14144, %309, meta[relay.Constant][29] /* ty=Tensor[(1, 336), float32] */)
  };
  %310(%var_14157) /* ty=(Tensor[(260), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(14, 6, 4), float32], Tensor[(1, 336), float32]) */
}

def @func_206(%var_173: Tensor[(14, 11, 13), int32], %var_174: Tensor[(14, 11, 13), int32], %var_196: bool) -> (Tensor[(14, 11, 13), int32], Tensor[(1, 1, 6), bool], bool, Tensor[(3, 2), bool]) {
  %311 = cast(%var_174, dtype="int32") /* ty=Tensor[(14, 11, 13), int32] */;
  %312 = shape_of(%var_173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%var_173, dtype="int32") /* ty=Tensor[(14, 11, 13), int32] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %315 = cast(%var_196, dtype="bool") /* ty=bool */;
  %316 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 2), bool] */, dtype="bool") /* ty=Tensor[(3, 2), bool] */;
  %317 = reshape(%315, newshape=[]) /* ty=bool */;
  %318 = reshape(%316, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), bool] */;
  %319 = @func_64(%317, %318) /* ty=(Tensor[(1, 1, 6), bool],) */;
  %320 = minimum(%313, %314) /* ty=Tensor[(14, 11, 13), int32] */;
  %321 = %319.0;
  (%320, %321, %var_196, meta[relay.Constant][30] /* ty=Tensor[(3, 2), bool] */)
}

def @func_13797(%var_13794: Tensor[(288), float64], %var_13795: Tensor[(945), float32], %var_13796: Tensor[(30), float64]) -> (Tensor[(10, 1, 16), float32], Tensor[(945), float32], Tensor[(288), float64], Tensor[(945), float32], Tensor[(30), float64]) {
  @func_13792(%var_13794, %var_13795, %var_13796) /* ty=(Tensor[(10, 1, 16), float32], Tensor[(945), float32], Tensor[(288), float64], Tensor[(945), float32], Tensor[(30), float64]) */
}

def @func_2674(%var_2672: Tensor[(14, 10, 8), float64], %var_2673: Tensor[(14, 10, 8), float64]) -> Tensor[(14, 10, 8), float64] {
  @func_2670(%var_2672, %var_2673) /* ty=Tensor[(14, 10, 8), float64] */
}

def @func_9071(%var_9066: Tensor[(10, 10, 10), uint8]) -> Tensor[(10, 10, 10), uint8] {
  %322 = cast(%var_9066, dtype="uint8") /* ty=Tensor[(10, 10, 10), uint8] */;
  %323 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(10, 10, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(meta[relay.Constant][31] /* ty=Tensor[(10, 10, 10), uint8] */, dtype="uint8") /* ty=Tensor[(10, 10, 10), uint8] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%324, %325) /* ty=Tensor[(10, 10, 10), uint8] */
}

def @func_13414(%var_13397: Tensor[(5, 3, 1), int32]) -> (Tensor[(5, 3, 1), float64], Tensor[(7, 16, 2), int32], Tensor[(224), float32]) {
  %326 = cast(-9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %327 = cast(%var_13397, dtype="int32") /* ty=Tensor[(5, 3, 1), int32] */;
  %328 = subtract(%326, %327) /* ty=Tensor[(5, 3, 1), int32] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(5, 3, 1), float64] */;
  %330 = cast(meta[relay.Constant][32] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %331 = cast(meta[relay.Constant][32] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %332 = reshape(%330, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), float32] */;
  %333 = reshape(%331, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), float32] */;
  %334 = atanh(%329) /* ty=Tensor[(5, 3, 1), float64] */;
  %335 = @func_11348(%332, %333) /* ty=Tensor[(7, 16, 2), int32] */;
  (%334, %335, meta[relay.Constant][32] /* ty=Tensor[(224), float32] */)
}

def @func_13792(%var_13788: Tensor[(288), float64], %var_13789: Tensor[(945), float32], %var_13790: Tensor[(30), float64]) -> (Tensor[(10, 1, 16), float32], Tensor[(945), float32], Tensor[(288), float64], Tensor[(945), float32], Tensor[(30), float64]) {
  %336 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %337 = %336.0;
  %338 = cast(%337, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
  %339 = cast(%var_13788, dtype="float64") /* ty=Tensor[(288), float64] */;
  %340 = cast(%var_13789, dtype="float32") /* ty=Tensor[(945), float32] */;
  %341 = cast(%var_13790, dtype="float64") /* ty=Tensor[(30), float64] */;
  %342 = reshape(%339, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %343 = reshape(%340, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %344 = reshape(%341, newshape=[30, 1]) /* ty=Tensor[(30, 1), float64] */;
  %345 = @func_10910(%342, %343, %344) /* ty=(Tensor[(16, 3, 6), float64], Tensor[(1, 30), float64], Tensor[(945), float32], Tensor[(30, 1), float64]) */;
  %346 = acosh(%338) /* ty=Tensor[(10, 1, 16), float32] */;
  %347 = %345.2;
  (%346, %347, %var_13788, %var_13789, %var_13790)
}

def @func_13091(%var_13090: Tensor[(5, 6, 16), float32]) -> (Tensor[(5, 6, 16), float32], Tensor[(5, 6, 16), float32], Tensor[(4, 13, 3), uint8], Tensor[(156), uint8]) {
  %355 = fn (%var_13071: Tensor[(5, 6, 16), float32]) -> (Tensor[(5, 6, 16), float32], Tensor[(5, 6, 16), float32], Tensor[(4, 13, 3), uint8], Tensor[(156), uint8]) {
    %348 = cast(%var_13071, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
    %349 = cast(%var_13071, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
    %350 = cast(meta[relay.Constant][33] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
    %351 = reshape(%350, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), uint8] */;
    %352 = atan(%348) /* ty=Tensor[(5, 6, 16), float32] */;
    %353 = erf(%349) /* ty=Tensor[(5, 6, 16), float32] */;
    %354 = @func_7150(%351) /* ty=Tensor[(4, 13, 3), uint8] */;
    (%352, %353, %354, meta[relay.Constant][33] /* ty=Tensor[(156), uint8] */)
  };
  %355(%var_13090) /* ty=(Tensor[(5, 6, 16), float32], Tensor[(5, 6, 16), float32], Tensor[(4, 13, 3), uint8], Tensor[(156), uint8]) */
}

def @func_2670(%var_2634: Tensor[(14, 10, 8), float64], %var_2635: Tensor[(14, 10, 8), float64]) -> Tensor[(14, 10, 8), float64] {
  %356 = cast(%var_2635, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
  %357 = shape_of(%var_2634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%var_2634, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%358, %359) /* ty=Tensor[(14, 10, 8), float64] */
}

def @func_10852(%var_10850: Tensor[(16, 4, 5), float64]) -> Tensor[(16, 4, 5), float64] {
  @func_10849(%var_10850) /* ty=Tensor[(16, 4, 5), float64] */
}

def @func_14474(%var_14472: Tensor[(162), int64], %var_14473: Tensor[(792), float32]) -> (Tensor[(30), float64], Tensor[(10, 10, 10), uint8], Tensor[(1000), uint8], Tensor[(3, 3, 3), float32], Tensor[(18), int64], Tensor[(162), int64], Tensor[(792), float64]) {
  @func_14470(%var_14472, %var_14473) /* ty=(Tensor[(30), float64], Tensor[(10, 10, 10), uint8], Tensor[(1000), uint8], Tensor[(3, 3, 3), float32], Tensor[(18), int64], Tensor[(162), int64], Tensor[(792), float64]) */
}

def @func_14470(%var_14415: Tensor[(162), int64], %var_14416: Tensor[(792), float32]) -> (Tensor[(30), float64], Tensor[(10, 10, 10), uint8], Tensor[(1000), uint8], Tensor[(3, 3, 3), float32], Tensor[(18), int64], Tensor[(162), int64], Tensor[(792), float64]) {
  %360 = @func_13341() /* ty=(Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) */;
  %361 = cast(meta[relay.Constant][34] /* ty=Tensor[(1000), uint8] */, dtype="uint8") /* ty=Tensor[(1000), uint8] */;
  %362 = reshape(%361, newshape=[10, 10, 10]) /* ty=Tensor[(10, 10, 10), uint8] */;
  %363 = cast(meta[relay.Constant][35] /* ty=Tensor[(18), int64] */, dtype="int64") /* ty=Tensor[(18), int64] */;
  %364 = cast(%var_14415, dtype="int64") /* ty=Tensor[(162), int64] */;
  %365 = cast(%var_14416, dtype="float32") /* ty=Tensor[(792), float32] */;
  %366 = %360.1;
  %367 = cast(%366, dtype="float32") /* ty=Tensor[(30), float32] */;
  %368 = reshape(%363, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), int64] */;
  %369 = reshape(%364, newshape=[9, 9, 2]) /* ty=Tensor[(9, 9, 2), int64] */;
  %370 = reshape(%365, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %371 = reshape(%367, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %372 = @func_6113(%368, %369, %370, %371) /* ty=(Tensor[(9, 9, 2), int64], Tensor[(792), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(8, 2, 7), bool], Tensor[(3, 3, 3), float32]) */;
  %373 = cast(%var_14416, dtype="float64") /* ty=Tensor[(792), float64] */;
  %374 = @func_9071(%362) /* ty=Tensor[(10, 10, 10), uint8] */;
  %375 = %372.5;
  %376 = acosh(%373) /* ty=Tensor[(792), float64] */;
  (%366, %374, meta[relay.Constant][34] /* ty=Tensor[(1000), uint8] */, %375, meta[relay.Constant][35] /* ty=Tensor[(18), int64] */, %var_14415, %376)
}

def @func_211(%var_208: Tensor[(14, 11, 13), int32], %var_209: Tensor[(14, 11, 13), int32], %var_210: bool) -> (Tensor[(14, 11, 13), int32], Tensor[(1, 1, 6), bool], bool, Tensor[(3, 2), bool]) {
  @func_206(%var_208, %var_209, %var_210) /* ty=(Tensor[(14, 11, 13), int32], Tensor[(1, 1, 6), bool], bool, Tensor[(3, 2), bool]) */
}

def @func_10849(%var_10844: Tensor[(16, 4, 5), float64]) -> Tensor[(16, 4, 5), float64] {
  %377 = cast(-9.32808f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %378 = cast(%var_10844, dtype="float64") /* ty=Tensor[(16, 4, 5), float64] */;
  floor_divide(%377, %378) /* ty=Tensor[(16, 4, 5), float64] */
}

def @func_11351(%var_11349: Tensor[(7, 16, 2), float32], %var_11350: Tensor[(7, 16, 2), float32]) -> Tensor[(7, 16, 2), int32] {
  %385 = fn (%var_11312: Tensor[(7, 16, 2), float32], %var_11315: Tensor[(7, 16, 2), float32]) -> Tensor[(7, 16, 2), int32] {
    %379 = cast(%var_11312, dtype="float32") /* ty=Tensor[(7, 16, 2), float32] */;
    %380 = asinh(%379) /* ty=Tensor[(7, 16, 2), float32] */;
    %381 = cast(%var_11315, dtype="int32") /* ty=Tensor[(7, 16, 2), int32] */;
    %382 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
    %383 = cast(%380, dtype="int32") /* ty=Tensor[(7, 16, 2), int32] */;
    %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    right_shift(%383, %384) /* ty=Tensor[(7, 16, 2), int32] */
  };
  %385(%var_11349, %var_11350) /* ty=Tensor[(7, 16, 2), int32] */
}

def @func_14199(%var_14197: Tensor[(2880), int32], %var_14198: Tensor[(1280), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(2880), int32], Tensor[(30), float64], Tensor[(3, 2, 5), float32], Tensor[(1694, 30), int16], Tensor[(1280), float64]) {
  @func_14195(%var_14197, %var_14198) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(2880), int32], Tensor[(30), float64], Tensor[(3, 2, 5), float32], Tensor[(1694, 30), int16], Tensor[(1280), float64]) */
}

def @func_14538() -> Tensor[(10, 1, 16), float64] {
  @func_14536() /* ty=Tensor[(10, 1, 16), float64] */
}

def @func_3336(%var_3292: Tensor[(16, 15, 12), int32], %var_3293: Tensor[(16, 15, 12), int32], %var_3307: Tensor[(30), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) {
  %386 = cast(%var_3293, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %387 = shape_of(%var_3292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%var_3292, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %390 = cast(meta[relay.Constant][36] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %391 = cast(%var_3307, dtype="float64") /* ty=Tensor[(30), float64] */;
  %392 = reshape(%390, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %393 = reshape(%391, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
  %394 = @func_651(%392, %393) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */;
  %395 = cast(meta[relay.Constant][36] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %396 = cast(%var_3307, dtype="float64") /* ty=Tensor[(30), float64] */;
  %397 = reshape(%395, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %398 = reshape(%396, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %399 = @func_567(%397, %398) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */;
  %400 = equal(%388, %389) /* ty=Tensor[(16, 15, 12), bool] */;
  %401 = %394.0;
  %402 = %399.1;
  (%400, %401, meta[relay.Constant][36] /* ty=Tensor[(945), float32] */, %var_3307, %402)
}

def @func_13417(%var_13415: Tensor[(5, 3, 1), int32]) -> (Tensor[(5, 3, 1), float64], Tensor[(7, 16, 2), int32], Tensor[(224), float32]) {
  @func_13414(%var_13415) /* ty=(Tensor[(5, 3, 1), float64], Tensor[(7, 16, 2), int32], Tensor[(224), float32]) */
}

def @func_7295(%var_7293: Tensor[(8, 2, 1), float64]) -> (Tensor[(8, 2, 1), float64],) {
  @func_7292(%var_7293) /* ty=(Tensor[(8, 2, 1), float64],) */
}

def @func_3236(%var_3234: Tensor[(11, 11, 14), float32], %var_3235: Tensor[(30), float64]) -> (Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) {
  %416 = fn (%var_3218: Tensor[(11, 11, 14), float32], %var_3230: Tensor[(30), float64]) -> (Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) {
    %403 = cast(%var_3218, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
    %404 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(11, 11, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %405 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %407 = cast(meta[relay.Constant][38] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %408 = cast(meta[relay.Constant][39] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
    %409 = cast(%var_3230, dtype="float64") /* ty=Tensor[(30), float64] */;
    %410 = reshape(%407, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float32] */;
    %411 = reshape(%408, newshape=[3, 2]) /* ty=Tensor[(3, 2), bool] */;
    %412 = reshape(%409, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %413 = @func_2727(%410, %411, %412) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */;
    %414 = subtract(%405, %406) /* ty=Tensor[(11, 11, 14), float32] */;
    %415 = %413.1;
    (%414, %415, meta[relay.Constant][38] /* ty=Tensor[(260), float32] */, meta[relay.Constant][39] /* ty=Tensor[(6), bool] */, %var_3230)
  };
  %416(%var_3234, %var_3235) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) */
}

def @func_13560(%var_13551: Tensor[(9, 6, 6), float64]) -> (Tensor[(10, 1, 16), float64], int16, Tensor[(90), int16], Tensor[(13, 4, 5), float32], Tensor[(260), float32], Tensor[(30), float64], Tensor[(9, 6, 6), bool]) {
  %417 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %418 = cast(meta[relay.Constant][42] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %419 = cast(meta[relay.Constant][40] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %420 = cast(meta[relay.Constant][41] /* ty=Tensor[(90), int16] */, dtype="int16") /* ty=Tensor[(90), int16] */;
  %421 = reshape(%419, newshape=[]) /* ty=int16 */;
  %422 = reshape(%420, newshape=[1, 6, 15]) /* ty=Tensor[(1, 6, 15), int16] */;
  %423 = @func_1072(%421, %422) /* ty=(Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) */;
  %424 = %423.3;
  %425 = cast(%424, dtype="float64") /* ty=Tensor[(1, 1, 6), float64] */;
  %426 = asin(%425) /* ty=Tensor[(1, 1, 6), float64] */;
  %427 = cast(%426, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %428 = cast(meta[relay.Constant][43] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %429 = reshape(%418, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float32] */;
  %430 = reshape(%427, newshape=[3, 2]) /* ty=Tensor[(3, 2), bool] */;
  %431 = reshape(%428, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %432 = @func_2727(%429, %430, %431) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */;
  %433 = cast(%426, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %434 = cast(%var_13551, dtype="bool") /* ty=Tensor[(9, 6, 6), bool] */;
  %435 = %417.0;
  %436 = %432.0;
  %437 = logical_and(%433, %434) /* ty=Tensor[(9, 6, 6), bool] */;
  (%435, meta[relay.Constant][40] /* ty=int16 */, meta[relay.Constant][41] /* ty=Tensor[(90), int16] */, %436, meta[relay.Constant][42] /* ty=Tensor[(260), float32] */, meta[relay.Constant][43] /* ty=Tensor[(30), float64] */, %437)
}

def @func_6523(%var_6520: Tensor[(9, 5, 4), float32], %var_6521: int16, %var_6522: Tensor[(90), int16]) -> (Tensor[(9, 5, 4), float32], Tensor[(2, 936), uint64], int16, Tensor[(90), int16]) {
  @func_6518(%var_6520, %var_6521, %var_6522) /* ty=(Tensor[(9, 5, 4), float32], Tensor[(2, 936), uint64], int16, Tensor[(90), int16]) */
}

def @func_4055(%var_4035: Tensor[(15, 2, 15), int32], %var_4036: Tensor[(15, 2, 15), int32], %var_4048: Tensor[(22), float64]) -> (Tensor[(15, 2, 15), bool], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64]) {
  %438 = cast(%var_4036, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
  %439 = shape_of(%var_4035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%var_4035, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %442 = cast(%var_4048, dtype="float64") /* ty=Tensor[(22), float64] */;
  %443 = cast(meta[relay.Constant][44] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %444 = reshape(%442, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float64] */;
  %445 = reshape(%443, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), float64] */;
  %446 = greater(%440, %441) /* ty=Tensor[(15, 2, 15), bool] */;
  %447 = @func_3373(%444, %445) /* ty=Tensor[(2, 12, 11), float32] */;
  (%446, %447, %var_4048, meta[relay.Constant][44] /* ty=Tensor[(264), float64] */)
}

def @func_12878(%var_12877: Tensor[(9, 10, 2), float64]) -> (Tensor[(9, 10, 2), float64],) {
  %450 = fn (%var_12868: Tensor[(9, 10, 2), float64]) -> (Tensor[(9, 10, 2), float64],) {
    %448 = cast(%var_12868, dtype="float64") /* ty=Tensor[(9, 10, 2), float64] */;
    %449 = sinh(%448) /* ty=Tensor[(9, 10, 2), float64] */;
    (%449,)
  };
  %450(%var_12877) /* ty=(Tensor[(9, 10, 2), float64],) */
}

def @func_4060(%var_4057: Tensor[(15, 2, 15), int32], %var_4058: Tensor[(15, 2, 15), int32], %var_4059: Tensor[(22), float64]) -> (Tensor[(15, 2, 15), bool], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64]) {
  @func_4055(%var_4057, %var_4058, %var_4059) /* ty=(Tensor[(15, 2, 15), bool], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64]) */
}

def @func_6419(%var_6417: Tensor[(16, 2, 12), float32], %var_6418: uint64) -> (Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) {
  @func_6415(%var_6417, %var_6418) /* ty=(Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) */
}

def @func_5118(%var_5116: Tensor[(8, 2, 7), bool], %var_5117: Tensor[(8, 2, 7), bool]) -> Tensor[(8, 2, 7), bool] {
  %455 = fn (%var_5098: Tensor[(8, 2, 7), bool], %var_5099: Tensor[(8, 2, 7), bool]) -> Tensor[(8, 2, 7), bool] {
    %451 = cast(%var_5099, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
    %452 = shape_of(%var_5098, dtype="int32") /* ty=Tensor[(3), int32] */;
    %453 = cast(%var_5098, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
    %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%453, %454) /* ty=Tensor[(8, 2, 7), bool] */
  };
  %455(%var_5116, %var_5117) /* ty=Tensor[(8, 2, 7), bool] */
}

def @func_13644() -> (Tensor[(260), float32],) {
  %458 = fn () -> (Tensor[(260), float32],) {
    %456 = @func_13341() /* ty=(Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) */;
    %457 = %456.2;
    (%457,)
  };
  %458() /* ty=(Tensor[(260), float32],) */
}

def @func_1075(%var_1073: int16, %var_1074: Tensor[(1, 6, 15), int16]) -> (Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) {
  %474 = fn (%var_1008: int16, %var_1009: Tensor[(1, 6, 15), int16]) -> (Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) {
    %459 = cast(%var_1008, dtype="int16") /* ty=int16 */;
    %460 = cast(%var_1009, dtype="int16") /* ty=Tensor[(1, 6, 15), int16] */;
    %461 = cast(%var_1008, dtype="uint64") /* ty=uint64 */;
    %462 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 936), uint64] */, dtype="uint64") /* ty=Tensor[(2, 936), uint64] */;
    %463 = reshape(%461, newshape=[]) /* ty=uint64 */;
    %464 = reshape(%462, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), uint64] */;
    %465 = @func_810(%463, %464) /* ty=(Tensor[(16, 9, 13), uint64],) */;
    %466 = cast(%var_1008, dtype="bool") /* ty=bool */;
    %467 = cast(meta[relay.Constant][46] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
    %468 = reshape(%466, newshape=[]) /* ty=bool */;
    %469 = reshape(%467, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), bool] */;
    %470 = @func_64(%468, %469) /* ty=(Tensor[(1, 1, 6), bool],) */;
    %471 = left_shift(%459, %460) /* ty=Tensor[(1, 6, 15), int16] */;
    %472 = %465.0;
    %473 = %470.0;
    (%471, %472, meta[relay.Constant][45] /* ty=Tensor[(2, 936), uint64] */, %473, meta[relay.Constant][46] /* ty=Tensor[(6), bool] */)
  };
  %474(%var_1073, %var_1074) /* ty=(Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) */
}

def @func_13390() -> (Tensor[(10, 1, 16), float64],) {
  %475 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %476 = %475.0;
  (%476,)
}

def @func_5607(%var_5594: Tensor[(3, 3, 3), float64], %var_5595: Tensor[(3, 3, 3), float64], %var_5603: Tensor[(792), float32]) -> (Tensor[(3, 3, 3), float64], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) {
  %477 = cast(%var_5595, dtype="float64") /* ty=Tensor[(3, 3, 3), float64] */;
  %478 = shape_of(%var_5594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%var_5594, dtype="float64") /* ty=Tensor[(3, 3, 3), float64] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %481 = cast(%var_5603, dtype="float32") /* ty=Tensor[(792), float32] */;
  %482 = reshape(%481, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %483 = @func_5153(%482) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %484 = divide(%479, %480) /* ty=Tensor[(3, 3, 3), float64] */;
  %485 = %483.0;
  (%484, %485, %var_5603)
}

def @func_64(%var_44: bool, %var_45: Tensor[(1, 1, 6), bool]) -> (Tensor[(1, 1, 6), bool],) {
  %486 = cast(%var_44, dtype="bool") /* ty=bool */;
  %487 = cast(%var_45, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %488 = logical_and(%486, %487) /* ty=Tensor[(1, 1, 6), bool] */;
  (%488,)
}

def @func_14536() -> Tensor[(10, 1, 16), float64] {
  %489 = @func_13341() /* ty=(Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) */;
  %489.0
}

def @func_14356(%var_14339: Tensor[(72), uint16], %var_14340: Tensor[(384), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(3, 2, 5), float64], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(945), float32], Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(72), uint16], Tensor[(384), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(1694), float32]) {
  %490 = @func_13069() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %491 = cast(meta[relay.Constant][47] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %492 = cast(meta[relay.Constant][48] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %493 = reshape(%491, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %494 = reshape(%492, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %495 = @func_3233(%493, %494) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) */;
  %496 = cast(meta[relay.Constant][49] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %497 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %498 = cast(meta[relay.Constant][50] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %499 = cast(meta[relay.Constant][51] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %500 = %495.1;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %502 = reshape(%496, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %503 = reshape(%497, newshape=[]) /* ty=bool */;
  %504 = reshape(%498, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
  %505 = reshape(%499, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %506 = reshape(%501, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %507 = @func_2553(%502, %503, %504, %505, %506) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
  %508 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %509 = cast(%var_14339, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %510 = cast(meta[relay.Constant][48] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %511 = cast(%var_14340, dtype="float32") /* ty=Tensor[(384), float32] */;
  %512 = cast(False /* ty=bool */, dtype="uint64") /* ty=uint64 */;
  %513 = cast(meta[relay.Constant][52] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %514 = reshape(%509, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint16] */;
  %515 = reshape(%510, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %516 = reshape(%511, newshape=[12, 32]) /* ty=Tensor[(12, 32), float32] */;
  %517 = reshape(%512, newshape=[]) /* ty=uint64 */;
  %518 = reshape(%513, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %519 = @func_14273(%514, %515, %516, %517, %518) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(384), float32], Tensor[(12, 32), float32], Tensor[(320), float64], Tensor[(18, 4), bool], Tensor[(90), float32], Tensor[(90), float32]) */;
  %520 = cast(%var_14339, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %521 = cast(meta[relay.Constant][51] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %522 = cast(%500, dtype="float64") /* ty=Tensor[(3, 2, 5), float64] */;
  %523 = reshape(%520, newshape=[4, 2, 9]) /* ty=Tensor[(4, 2, 9), uint16] */;
  %524 = reshape(%521, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %525 = reshape(%522, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %526 = @func_4933(%523, %524, %525) /* ty=(Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) */;
  %527 = cast(meta[relay.Constant][47] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %528 = %490.0;
  %529 = %507.1;
  %530 = %508.0;
  %531 = %519.1;
  %532 = %526.4;
  %533 = sigmoid(%527) /* ty=Tensor[(1694), float32] */;
  (%528, %500, meta[relay.Constant][48] /* ty=Tensor[(30), float64] */, %529, meta[relay.Constant][49] /* ty=Tensor[(108), float64] */, False /* ty=bool */, meta[relay.Constant][50] /* ty=Tensor[(6), bool] */, meta[relay.Constant][51] /* ty=Tensor[(945), float32] */, %530, %531, %var_14339, %var_14340, meta[relay.Constant][52] /* ty=Tensor[(90), float32] */, %532, %533)
}

def @func_8298(%var_8293: Tensor[(15, 6, 9), int32], %var_8294: Tensor[(15, 6, 9), int32], %var_8295: Tensor[(8), float32], %var_8296: Tensor[(1872), uint64], %var_8297: Tensor[(6, 64), float32]) -> (Tensor[(15, 6, 9), int32], Tensor[(30), float32], Tensor[(8), float32], Tensor[(16, 9, 13), uint64], Tensor[(1872), uint64], Tensor[(14, 10, 8), float64], Tensor[(16, 2, 12), float64], Tensor[(6, 64), float32], Tensor[(560, 2), uint64]) {
  %565 = fn (%var_8239: Tensor[(15, 6, 9), int32], %var_8240: Tensor[(15, 6, 9), int32], %var_8245: Tensor[(8), float32], %var_8250: Tensor[(1872), uint64], %var_8274: Tensor[(6, 64), float32]) -> (Tensor[(15, 6, 9), int32], Tensor[(30), float32], Tensor[(8), float32], Tensor[(16, 9, 13), uint64], Tensor[(1872), uint64], Tensor[(14, 10, 8), float64], Tensor[(16, 2, 12), float64], Tensor[(6, 64), float32], Tensor[(560, 2), uint64]) {
    %534 = cast(%var_8240, dtype="int32") /* ty=Tensor[(15, 6, 9), int32] */;
    %535 = shape_of(%var_8239, dtype="int32") /* ty=Tensor[(3), int32] */;
    %536 = cast(%var_8239, dtype="int32") /* ty=Tensor[(15, 6, 9), int32] */;
    %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %538 = cast(%var_8245, dtype="float32") /* ty=Tensor[(8), float32] */;
    %539 = reshape(%538, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float32] */;
    %540 = @func_3879(%539) /* ty=(Tensor[(1, 8, 1), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32]) */;
    %541 = cast(meta[relay.Constant][53] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %542 = cast(%var_8250, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
    %543 = reshape(%541, newshape=[]) /* ty=uint64 */;
    %544 = reshape(%542, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), uint64] */;
    %545 = @func_810(%543, %544) /* ty=(Tensor[(16, 9, 13), uint64],) */;
    %546 = cast(meta[relay.Constant][54] /* ty=Tensor[(560, 2), float64] */, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
    %547 = cast(meta[relay.Constant][54] /* ty=Tensor[(560, 2), float64] */, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
    %548 = reshape(%546, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
    %549 = reshape(%547, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
    %550 = cast(%var_8274, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
    %551 = cast(meta[relay.Constant][53] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %552 = reshape(%550, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float32] */;
    %553 = reshape(%551, newshape=[]) /* ty=uint64 */;
    %554 = @func_6415(%552, %553) /* ty=(Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) */;
    %555 = cast(meta[relay.Constant][54] /* ty=Tensor[(560, 2), float64] */, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
    %556 = atanh(%555) /* ty=Tensor[(560, 2), float64] */;
    %557 = cast(%556, dtype="uint64") /* ty=Tensor[(560, 2), uint64] */;
    %558 = cast(meta[relay.Constant][53] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %559 = bitwise_and(%536, %537) /* ty=Tensor[(15, 6, 9), int32] */;
    %560 = %540.2;
    %561 = %545.0;
    %562 = @func_2670(%548, %549) /* ty=Tensor[(14, 10, 8), float64] */;
    %563 = %554.6;
    %564 = right_shift(%557, %558) /* ty=Tensor[(560, 2), uint64] */;
    (%559, %560, %var_8245, %561, %var_8250, %562, %563, %var_8274, %564)
  };
  %565(%var_8293, %var_8294, %var_8295, %var_8296, %var_8297) /* ty=(Tensor[(15, 6, 9), int32], Tensor[(30), float32], Tensor[(8), float32], Tensor[(16, 9, 13), uint64], Tensor[(1872), uint64], Tensor[(14, 10, 8), float64], Tensor[(16, 2, 12), float64], Tensor[(6, 64), float32], Tensor[(560, 2), uint64]) */
}

def @func_14547() -> (Tensor[(10, 1, 16), float64],) {
  %567 = fn () -> (Tensor[(10, 1, 16), float64],) {
    %566 = @func_13589() /* ty=Tensor[(10, 1, 16), float64] */;
    (%566,)
  };
  %567() /* ty=(Tensor[(10, 1, 16), float64],) */
}

def @func_3373(%var_3353: Tensor[(2, 1, 11), float64], %var_3365: Tensor[(2, 12, 11), float64]) -> Tensor[(2, 12, 11), float32] {
  %568 = cast(%var_3353, dtype="float64") /* ty=Tensor[(2, 1, 11), float64] */;
  %569 = rsqrt(%568) /* ty=Tensor[(2, 1, 11), float64] */;
  %570 = cast(%569, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %571 = cast(%var_3365, dtype="float32") /* ty=Tensor[(2, 12, 11), float32] */;
  add(%570, %571) /* ty=Tensor[(2, 12, 11), float32] */
}

def @func_13342() -> (Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) {
  %582 = fn () -> (Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) {
    %572 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
    %573 = cast(meta[relay.Constant][55] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %574 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 6), bool] */, dtype="bool") /* ty=Tensor[(1, 6), bool] */;
    %575 = cast(meta[relay.Constant][57] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %576 = reshape(%573, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float32] */;
    %577 = reshape(%574, newshape=[3, 2]) /* ty=Tensor[(3, 2), bool] */;
    %578 = reshape(%575, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %579 = @func_2727(%576, %577, %578) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */;
    %580 = %572.0;
    %581 = %579.6;
    (%580, %581, meta[relay.Constant][55] /* ty=Tensor[(260), float32] */, meta[relay.Constant][56] /* ty=Tensor[(1, 6), bool] */, meta[relay.Constant][57] /* ty=Tensor[(30), float64] */)
  };
  %582() /* ty=(Tensor[(10, 1, 16), float64], Tensor[(30), float64], Tensor[(260), float32], Tensor[(1, 6), bool], Tensor[(30), float64]) */
}

def @func_9074(%var_9072: Tensor[(10, 10, 10), uint8]) -> Tensor[(10, 10, 10), uint8] {
  @func_9071(%var_9072) /* ty=Tensor[(10, 10, 10), uint8] */
}

def @func_6415(%var_6349: Tensor[(16, 2, 12), float32], %var_6383: uint64) -> (Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) {
  %583 = cast(%var_6349, dtype="bool") /* ty=Tensor[(16, 2, 12), bool] */;
  %584 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(16, 2, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(meta[relay.Constant][58] /* ty=Tensor[(16, 2, 12), float32] */, dtype="bool") /* ty=Tensor[(16, 2, 12), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %587 = cast(meta[relay.Constant][59] /* ty=Tensor[(1694, 1), float32] */, dtype="float32") /* ty=Tensor[(1694, 1), float32] */;
  %588 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %589 = reshape(%587, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %590 = reshape(%588, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %591 = @func_3233(%589, %590) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(3, 2, 5), float64], Tensor[(260), float32], Tensor[(6), bool], Tensor[(30), float64]) */;
  %592 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), float64] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %593 = cast(meta[relay.Constant][59] /* ty=Tensor[(1694, 1), float32] */, dtype="bool") /* ty=Tensor[(1694, 1), bool] */;
  %594 = less(%592, %593) /* ty=Tensor[(1694, 30), bool] */;
  %595 = cast(%594, dtype="int16") /* ty=Tensor[(1694, 30), int16] */;
  %596 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), float64] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %597 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), float64] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %598 = reshape(%597, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %599 = cast(%var_6383, dtype="uint64") /* ty=uint64 */;
  %600 = cast(meta[relay.Constant][61] /* ty=Tensor[(936, 2), uint64] */, dtype="uint64") /* ty=Tensor[(936, 2), uint64] */;
  %601 = reshape(%599, newshape=[]) /* ty=uint64 */;
  %602 = reshape(%600, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), uint64] */;
  %603 = @func_810(%601, %602) /* ty=(Tensor[(16, 9, 13), uint64],) */;
  %604 = %603.0;
  %605 = cast(%var_6383, dtype="float64") /* ty=float64 */;
  %606 = cast(%604, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
  %607 = cast(%var_6349, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
  %608 = cosh(%607) /* ty=Tensor[(16, 2, 12), float32] */;
  %609 = cast(%608, dtype="float64") /* ty=Tensor[(16, 2, 12), float64] */;
  %610 = greater(%585, %586) /* ty=Tensor[(16, 2, 12), bool] */;
  %611 = %591.2;
  %612 = bitwise_xor(%595, %596) /* ty=Tensor[(1694, 30), int16] */;
  %613 = @func_2408(%598) /* ty=Tensor[(2, 15, 15), float32] */;
  %614 = floor_divide(%605, %606) /* ty=Tensor[(16, 9, 13), float64] */;
  %615 = tan(%609) /* ty=Tensor[(16, 2, 12), float64] */;
  (%610, %611, %612, meta[relay.Constant][61] /* ty=Tensor[(936, 2), uint64] */, %613, %614, %615)
}

def @func_2727(%var_2696: Tensor[(13, 4, 5), float32], %var_2711: Tensor[(3, 2), bool], %var_2713: Tensor[(30), float64]) -> (Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) {
  %616 = cast(meta[relay.Constant][62] /* ty=Tensor[(13, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 5), float32] */;
  %617 = shape_of(%var_2696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%var_2696, dtype="float32") /* ty=Tensor[(13, 4, 5), float32] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %620 = cast(meta[relay.Constant][63] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %621 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %622 = cast(%var_2711, dtype="bool") /* ty=Tensor[(3, 2), bool] */;
  %623 = cast(meta[relay.Constant][64] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %624 = cast(%var_2713, dtype="float64") /* ty=Tensor[(30), float64] */;
  %625 = reshape(%620, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float64] */;
  %626 = reshape(%621, newshape=[]) /* ty=bool */;
  %627 = reshape(%622, newshape=[1, 6]) /* ty=Tensor[(1, 6), bool] */;
  %628 = reshape(%623, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %629 = reshape(%624, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %630 = @func_2553(%625, %626, %627, %628, %629) /* ty=(Tensor[(4, 9, 3), bool], Tensor[(1, 1, 6), bool], bool, Tensor[(1, 6), bool], Tensor[(3, 2, 5), float64], Tensor[(945), float32], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(3, 2, 5), float64]) */;
  %631 = mod(%618, %619) /* ty=Tensor[(13, 4, 5), float32] */;
  %632 = %630.8;
  (%631, %632, meta[relay.Constant][63] /* ty=Tensor[(108), float64] */, False /* ty=bool */, %var_2711, meta[relay.Constant][64] /* ty=Tensor[(945), float32] */, %var_2713)
}

def @func_2732(%var_2729: Tensor[(13, 4, 5), float32], %var_2730: Tensor[(3, 2), bool], %var_2731: Tensor[(30), float64]) -> (Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) {
  @func_2727(%var_2729, %var_2730, %var_2731) /* ty=(Tensor[(13, 4, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(108), float64], bool, Tensor[(3, 2), bool], Tensor[(945), float32], Tensor[(30), float64]) */
}

def @func_12380(%var_12356: Tensor[(15, 2, 3), float32], %var_12368: Tensor[(22), float64], %var_12369: Tensor[(264), float64]) -> (Tensor[(15, 2, 3), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64]) {
  %633 = cast(%var_12356, dtype="float32") /* ty=Tensor[(15, 2, 3), float32] */;
  %634 = cast(%var_12368, dtype="float64") /* ty=Tensor[(22), float64] */;
  %635 = cast(%var_12369, dtype="float64") /* ty=Tensor[(264), float64] */;
  %636 = reshape(%634, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float64] */;
  %637 = reshape(%635, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), float64] */;
  %638 = asinh(%633) /* ty=Tensor[(15, 2, 3), float32] */;
  %639 = @func_3373(%636, %637) /* ty=Tensor[(2, 12, 11), float32] */;
  (%638, %639, %var_12368, %var_12369)
}

def @func_12187(%var_12185: Tensor[(4, 12, 7), uint16], %var_12186: Tensor[(4, 12, 7), uint16]) -> Tensor[(4, 12, 7), int64] {
  @func_12183(%var_12185, %var_12186) /* ty=Tensor[(4, 12, 7), int64] */
}

def @func_3377(%var_3375: Tensor[(2, 1, 11), float64], %var_3376: Tensor[(2, 12, 11), float64]) -> Tensor[(2, 12, 11), float32] {
  @func_3373(%var_3375, %var_3376) /* ty=Tensor[(2, 12, 11), float32] */
}

def @func_8534(%var_8529: Tensor[(7, 11, 4), int16], %var_8530: int64, %var_8531: Tensor[(264), float64], %var_8532: Tensor[(260), float32], %var_8533: Tensor[(30), float64]) -> (Tensor[(7, 11, 4), bool], Tensor[(945), float32], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64], Tensor[(22, 1183), int16], Tensor[(7, 11, 4), float32]) {
  @func_8527(%var_8529, %var_8530, %var_8531, %var_8532, %var_8533) /* ty=(Tensor[(7, 11, 4), bool], Tensor[(945), float32], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64], Tensor[(22, 1183), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_6518(%var_6478: Tensor[(9, 5, 4), float32], %var_6514: int16, %var_6515: Tensor[(90), int16]) -> (Tensor[(9, 5, 4), float32], Tensor[(2, 936), uint64], int16, Tensor[(90), int16]) {
  %640 = cast(%var_6478, dtype="float32") /* ty=Tensor[(9, 5, 4), float32] */;
  %641 = cast(%var_6514, dtype="int16") /* ty=int16 */;
  %642 = cast(%var_6515, dtype="int16") /* ty=Tensor[(90), int16] */;
  %643 = reshape(%641, newshape=[]) /* ty=int16 */;
  %644 = reshape(%642, newshape=[1, 6, 15]) /* ty=Tensor[(1, 6, 15), int16] */;
  %645 = @func_1072(%643, %644) /* ty=(Tensor[(1, 6, 15), int16], Tensor[(16, 9, 13), uint64], Tensor[(2, 936), uint64], Tensor[(1, 1, 6), bool], Tensor[(6), bool]) */;
  %646 = log(%640) /* ty=Tensor[(9, 5, 4), float32] */;
  %647 = %645.2;
  (%646, %647, %var_6514, %var_6515)
}

def @func_13869(%var_13831: Tensor[(10, 8, 16), float64]) -> (Tensor[(10, 8, 16), int16], Tensor[(1694, 30), int16], Tensor[(384), float32], uint64) {
  %648 = @func_13589() /* ty=Tensor[(10, 1, 16), float64] */;
  %649 = cast(%648, dtype="int16") /* ty=Tensor[(10, 1, 16), int16] */;
  %650 = cast(%var_13831, dtype="int16") /* ty=Tensor[(10, 8, 16), int16] */;
  %651 = cast(meta[relay.Constant][65] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %652 = cast(meta[relay.Constant][66] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %653 = reshape(%651, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float32] */;
  %654 = reshape(%652, newshape=[]) /* ty=uint64 */;
  %655 = @func_6415(%653, %654) /* ty=(Tensor[(16, 2, 12), bool], Tensor[(260), float32], Tensor[(1694, 30), int16], Tensor[(936, 2), uint64], Tensor[(2, 15, 15), float32], Tensor[(16, 9, 13), float64], Tensor[(16, 2, 12), float64]) */;
  %656 = bitwise_and(%649, %650) /* ty=Tensor[(10, 8, 16), int16] */;
  %657 = %655.2;
  (%656, %657, meta[relay.Constant][65] /* ty=Tensor[(384), float32] */, meta[relay.Constant][66] /* ty=uint64 */)
}

def @func_12998() -> (Tensor[(10, 1, 16), float64],) {
  %658 = cast(meta[relay.Constant][67] /* ty=Tensor[(10, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 1, 16), float64] */;
  %659 = sin(%658) /* ty=Tensor[(10, 1, 16), float64] */;
  (%659,)
}

def @func_6247(%var_6246: Tensor[(14, 6, 4), float32]) -> Tensor[(14, 6, 4), float32] {
  %661 = fn (%var_6202: Tensor[(14, 6, 4), float32]) -> Tensor[(14, 6, 4), float32] {
    %660 = cast(%var_6202, dtype="float32") /* ty=Tensor[(14, 6, 4), float32] */;
    log2(%660) /* ty=Tensor[(14, 6, 4), float32] */
  };
  %661(%var_6246) /* ty=Tensor[(14, 6, 4), float32] */
}

def @func_13054(%var_13051: Tensor[(440, 4), float32], %var_13052: Tensor[(77, 4), int16], %var_13053: Tensor[(260), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(16, 11, 10), float32], Tensor[(440, 4), float32], Tensor[(7, 11, 4), bool], Tensor[(77, 4), int16], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64]) {
  @func_13049(%var_13051, %var_13052, %var_13053) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(16, 11, 10), float32], Tensor[(440, 4), float32], Tensor[(7, 11, 4), bool], Tensor[(77, 4), int16], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64]) */
}

def @func_3881(%var_3880: Tensor[(1, 8, 1), float32]) -> (Tensor[(1, 8, 1), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32]) {
  %667 = fn (%var_3864: Tensor[(1, 8, 1), float32]) -> (Tensor[(1, 8, 1), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32]) {
    %662 = cast(%var_3864, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
    %663 = cast(meta[relay.Constant][68] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
    %664 = reshape(%663, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
    %665 = sinh(%662) /* ty=Tensor[(1, 8, 1), float32] */;
    %666 = @func_2408(%664) /* ty=Tensor[(2, 15, 15), float32] */;
    (%665, %666, meta[relay.Constant][68] /* ty=Tensor[(30), float32] */)
  };
  %667(%var_3880) /* ty=(Tensor[(1, 8, 1), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32]) */
}

def @func_11731(%var_11726: Tensor[(3, 12, 13), uint64], %var_11727: Tensor[(3, 12, 13), uint64], %var_11728: Tensor[(1, 108), float64], %var_11729: Tensor[(72), uint16], %var_11730: Tensor[(1872), uint64]) -> (Tensor[(3, 12, 13), uint64], Tensor[(5, 189), float32], Tensor[(1056), float32], Tensor[(1, 108), float64], Tensor[(30), float64], Tensor[(72), uint16], Tensor[(2, 4), float32], Tensor[(1872), uint64], Tensor[(384, 1), float32]) {
  @func_11724(%var_11726, %var_11727, %var_11728, %var_11729, %var_11730) /* ty=(Tensor[(3, 12, 13), uint64], Tensor[(5, 189), float32], Tensor[(1056), float32], Tensor[(1, 108), float64], Tensor[(30), float64], Tensor[(72), uint16], Tensor[(2, 4), float32], Tensor[(1872), uint64], Tensor[(384, 1), float32]) */
}

def @func_13049(%var_13023: Tensor[(440, 4), float32], %var_13036: Tensor[(77, 4), int16], %var_13039: Tensor[(260), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(16, 11, 10), float32], Tensor[(440, 4), float32], Tensor[(7, 11, 4), bool], Tensor[(77, 4), int16], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64]) {
  %668 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
  %669 = cast(%var_13023, dtype="float32") /* ty=Tensor[(440, 4), float32] */;
  %670 = reshape(%669, newshape=[16, 11, 10]) /* ty=Tensor[(16, 11, 10), float32] */;
  %671 = @func_10881(%670) /* ty=(Tensor[(16, 11, 10), float32],) */;
  %672 = cast(%var_13036, dtype="int16") /* ty=Tensor[(77, 4), int16] */;
  %673 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %674 = cast(meta[relay.Constant][69] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %675 = cast(%var_13039, dtype="float32") /* ty=Tensor[(260), float32] */;
  %676 = cast(meta[relay.Constant][70] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %677 = reshape(%672, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %678 = reshape(%673, newshape=[]) /* ty=int64 */;
  %679 = reshape(%674, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %680 = reshape(%675, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %681 = reshape(%676, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %682 = @func_8527(%677, %678, %679, %680, %681) /* ty=(Tensor[(7, 11, 4), bool], Tensor[(945), float32], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64], Tensor[(22, 1183), int16], Tensor[(7, 11, 4), float32]) */;
  %683 = %668.0;
  %684 = %671.0;
  %685 = %682.0;
  (%683, %684, %var_13023, %685, %var_13036, 7 /* ty=int64 */, meta[relay.Constant][69] /* ty=Tensor[(264), float64] */, %var_13039, meta[relay.Constant][70] /* ty=Tensor[(30), float64] */)
}

def @func_7150(%var_7122: Tensor[(4, 13, 3), uint8]) -> Tensor[(4, 13, 3), uint8] {
  %686 = cast(%var_7122, dtype="uint8") /* ty=Tensor[(4, 13, 3), uint8] */;
  %687 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(4, 13, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 13, 3), uint8] */, dtype="uint8") /* ty=Tensor[(4, 13, 3), uint8] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%688, %689) /* ty=Tensor[(4, 13, 3), uint8] */
}

def @func_4937(%var_4934: Tensor[(4, 2, 9), uint16], %var_4935: Tensor[(15, 63), float32], %var_4936: Tensor[(30), float64]) -> (Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) {
  %709 = fn (%var_4880: Tensor[(4, 2, 9), uint16], %var_4911: Tensor[(15, 63), float32], %var_4912: Tensor[(30), float64]) -> (Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) {
    %690 = cast(meta[relay.Constant][72] /* ty=Tensor[(4, 2, 9), uint16] */, dtype="uint16") /* ty=Tensor[(4, 2, 9), uint16] */;
    %691 = shape_of(%var_4880, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(%var_4880, dtype="uint16") /* ty=Tensor[(4, 2, 9), uint16] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %694 = cast(meta[relay.Constant][73] /* ty=Tensor[(165), float32] */, dtype="float32") /* ty=Tensor[(165), float32] */;
    %695 = cast(%var_4911, dtype="float32") /* ty=Tensor[(15, 63), float32] */;
    %696 = cast(%var_4912, dtype="float64") /* ty=Tensor[(30), float64] */;
    %697 = cast(%var_4911, dtype="float32") /* ty=Tensor[(15, 63), float32] */;
    %698 = reshape(%694, newshape=[11, 15, 1]) /* ty=Tensor[(11, 15, 1), float32] */;
    %699 = reshape(%695, newshape=[105, 9]) /* ty=Tensor[(105, 9), float32] */;
    %700 = reshape(%696, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %701 = reshape(%697, newshape=[945]) /* ty=Tensor[(945), float32] */;
    %702 = @func_2916(%698, %699, %700, %701) /* ty=(Tensor[(105, 9), float32], Tensor[(945), bool], Tensor[(11, 15, 30), float64], Tensor[(3, 2, 5), float64]) */;
    %703 = cast(meta[relay.Constant][74] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
    %704 = reshape(%703, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float32] */;
    %705 = @func_3879(%704) /* ty=(Tensor[(1, 8, 1), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32]) */;
    %706 = bitwise_or(%692, %693) /* ty=Tensor[(4, 2, 9), uint16] */;
    %707 = %702.2;
    %708 = %705.2;
    (%706, %707, meta[relay.Constant][73] /* ty=Tensor[(165), float32] */, %var_4911, %var_4912, %708, meta[relay.Constant][74] /* ty=Tensor[(8), float32] */)
  };
  %709(%var_4934, %var_4935, %var_4936) /* ty=(Tensor[(4, 2, 9), uint16], Tensor[(11, 15, 30), float64], Tensor[(165), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(30), float32], Tensor[(8), float32]) */
}

def @func_10315(%var_10313: Tensor[(14, 6, 14), uint8], %var_10314: Tensor[(14, 6, 14), uint8]) -> (Tensor[(14, 6, 14), uint8], Tensor[(14, 6, 14), bool], Tensor[(14, 6, 14), float64]) {
  %722 = fn (%var_10264: Tensor[(14, 6, 14), uint8], %var_10301: Tensor[(14, 6, 14), uint8]) -> (Tensor[(14, 6, 14), uint8], Tensor[(14, 6, 14), bool], Tensor[(14, 6, 14), float64]) {
    %710 = cast(%var_10264, dtype="uint8") /* ty=Tensor[(14, 6, 14), uint8] */;
    %711 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(14, 6, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %712 = cast(meta[relay.Constant][75] /* ty=Tensor[(14, 6, 14), uint8] */, dtype="uint8") /* ty=Tensor[(14, 6, 14), uint8] */;
    %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %714 = cast(%var_10301, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
    %715 = shape_of(%var_10264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %716 = cast(%var_10264, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
    %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %718 = cast(%var_10301, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
    %719 = bitwise_or(%712, %713) /* ty=Tensor[(14, 6, 14), uint8] */;
    %720 = logical_or(%716, %717) /* ty=Tensor[(14, 6, 14), bool] */;
    %721 = asin(%718) /* ty=Tensor[(14, 6, 14), float64] */;
    (%719, %720, %721)
  };
  %722(%var_10313, %var_10314) /* ty=(Tensor[(14, 6, 14), uint8], Tensor[(14, 6, 14), bool], Tensor[(14, 6, 14), float64]) */
}

def @func_10914(%var_10911: Tensor[(16, 3, 6), float64], %var_10912: Tensor[(945), float32], %var_10913: Tensor[(30, 1), float64]) -> (Tensor[(16, 3, 6), float64], Tensor[(1, 30), float64], Tensor[(945), float32], Tensor[(30, 1), float64]) {
  %731 = fn (%var_10899: Tensor[(16, 3, 6), float64], %var_10907: Tensor[(945), float32], %var_10908: Tensor[(30, 1), float64]) -> (Tensor[(16, 3, 6), float64], Tensor[(1, 30), float64], Tensor[(945), float32], Tensor[(30, 1), float64]) {
    %723 = cast(%var_10899, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
    %724 = cast(%var_10907, dtype="float32") /* ty=Tensor[(945), float32] */;
    %725 = cast(%var_10908, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
    %726 = reshape(%724, newshape=[945]) /* ty=Tensor[(945), float32] */;
    %727 = reshape(%725, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
    %728 = @func_651(%726, %727) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */;
    %729 = atan(%723) /* ty=Tensor[(16, 3, 6), float64] */;
    %730 = %728.3;
    (%729, %730, %var_10907, %var_10908)
  };
  %731(%var_10911, %var_10912, %var_10913) /* ty=(Tensor[(16, 3, 6), float64], Tensor[(1, 30), float64], Tensor[(945), float32], Tensor[(30, 1), float64]) */
}

def @func_6891(%var_6890: Tensor[(14, 3, 11), float32]) -> Tensor[(14, 3, 11), float32] {
  %733 = fn (%var_6886: Tensor[(14, 3, 11), float32]) -> Tensor[(14, 3, 11), float32] {
    %732 = cast(%var_6886, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
    acosh(%732) /* ty=Tensor[(14, 3, 11), float32] */
  };
  %733(%var_6890) /* ty=Tensor[(14, 3, 11), float32] */
}

def @func_3341(%var_3338: Tensor[(16, 15, 12), int32], %var_3339: Tensor[(16, 15, 12), int32], %var_3340: Tensor[(30), float64]) -> (Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) {
  @func_3336(%var_3338, %var_3339, %var_3340) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) */
}

def @func_10884(%var_10882: Tensor[(16, 11, 10), float32]) -> (Tensor[(16, 11, 10), float32],) {
  @func_10881(%var_10882) /* ty=(Tensor[(16, 11, 10), float32],) */
}

def @func_14195(%var_14174: Tensor[(2880), int32], %var_14189: Tensor[(1280), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(2880), int32], Tensor[(30), float64], Tensor[(3, 2, 5), float32], Tensor[(1694, 30), int16], Tensor[(1280), float64]) {
  %734 = cast(%var_14174, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %735 = cast(%var_14174, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %736 = cast(meta[relay.Constant][76] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %737 = reshape(%734, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %738 = reshape(%735, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %739 = reshape(%736, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %740 = @func_3336(%737, %738, %739) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) */;
  %741 = %740.4;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(3, 2, 5), float32] */;
  %743 = cast(%var_14189, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %744 = reshape(%743, newshape=[10, 8, 16]) /* ty=Tensor[(10, 8, 16), float64] */;
  %745 = @func_13869(%744) /* ty=(Tensor[(10, 8, 16), int16], Tensor[(1694, 30), int16], Tensor[(384), float32], uint64) */;
  %746 = @func_13589() /* ty=Tensor[(10, 1, 16), float64] */;
  %747 = log10(%742) /* ty=Tensor[(3, 2, 5), float32] */;
  %748 = %745.1;
  (%746, %var_14174, meta[relay.Constant][76] /* ty=Tensor[(30), float64] */, %747, %748, %var_14189)
}

def @func_10011(%var_10009: Tensor[(1694), float32]) -> (Tensor[(15, 6, 9), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64], Tensor[(1694), float32], Tensor[(15, 1, 4), float64]) {
  @func_10008(%var_10009) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(15, 63), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64], Tensor[(1694), float32], Tensor[(15, 1, 4), float64]) */
}

def @func_12261(%var_12259: Tensor[(12, 14, 8), uint64]) -> Tensor[(12, 14, 8), uint64] {
  @func_12258(%var_12259) /* ty=Tensor[(12, 14, 8), uint64] */
}

def @func_810(%var_801: uint64, %var_802: Tensor[(16, 9, 13), uint64]) -> (Tensor[(16, 9, 13), uint64],) {
  %749 = cast(%var_801, dtype="uint64") /* ty=uint64 */;
  %750 = cast(%var_802, dtype="uint64") /* ty=Tensor[(16, 9, 13), uint64] */;
  %751 = left_shift(%749, %750) /* ty=Tensor[(16, 9, 13), uint64] */;
  (%751,)
}

def @func_1423(%var_1418: Tensor[(1, 16, 3), int64], %var_1419: Tensor[(1, 16, 3), int64], %var_1420: uint64, %var_1421: Tensor[(1872), uint64], %var_1422: Tensor[(143, 14), int32]) -> (Tensor[(?, 16, 3), int64], Tensor[(?, 16, 3), bool], Tensor[(16, 9, 13), uint64], uint64, Tensor[(1872), uint64], Tensor[(3, 2, 5), float64], Tensor[(30), float64], Tensor[(?, 16, 3), bool], Tensor[(14, 11, 13), int32], Tensor[(143, 14), int32]) {
  %789 = fn (%var_1366: Tensor[(1, 16, 3), int64], %var_1367: Tensor[(1, 16, 3), int64], %var_1388: uint64, %var_1389: Tensor[(1872), uint64], %var_1413: Tensor[(143, 14), int32]) -> (Tensor[(?, 16, 3), int64], Tensor[(?, 16, 3), bool], Tensor[(16, 9, 13), uint64], uint64, Tensor[(1872), uint64], Tensor[(3, 2, 5), float64], Tensor[(30), float64], Tensor[(?, 16, 3), bool], Tensor[(14, 11, 13), int32], Tensor[(143, 14), int32]) {
    %752 = cast(%var_1367, dtype="int64") /* ty=Tensor[(1, 16, 3), int64] */;
    %753 = shape_of(%var_1366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %754 = cast(%var_1366, dtype="int64") /* ty=Tensor[(1, 16, 3), int64] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %756 = cast(%var_1366, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
    %757 = shape_of(%var_1367, dtype="int32") /* ty=Tensor[(3), int32] */;
    %758 = cast(%var_1367, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %760 = cast(%var_1388, dtype="uint64") /* ty=uint64 */;
    %761 = cast(%var_1389, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
    %762 = reshape(%760, newshape=[]) /* ty=uint64 */;
    %763 = reshape(%761, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), uint64] */;
    %764 = @func_810(%762, %763) /* ty=(Tensor[(16, 9, 13), uint64],) */;
    %765 = cast(meta[relay.Constant][77] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %766 = reshape(%765, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
    %767 = @func_272(%766) /* ty=(Tensor[(3, 2, 5), float64],) */;
    %768 = cast(%var_1367, dtype="float32") /* ty=Tensor[(1, 16, 3), float32] */;
    %769 = acos(%768) /* ty=Tensor[(1, 16, 3), float32] */;
    %770 = cast(%769, dtype="float64") /* ty=Tensor[(1, 16, 3), float64] */;
    %771 = exp(%770) /* ty=Tensor[(1, 16, 3), float64] */;
    %772 = cast(%769, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
    %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(3), int32] */;
    %774 = cast(%771, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
    %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %776 = cast(%var_1413, dtype="int32") /* ty=Tensor[(143, 14), int32] */;
    %777 = cast(%var_1413, dtype="int32") /* ty=Tensor[(143, 14), int32] */;
    %778 = cast(%var_1388, dtype="bool") /* ty=bool */;
    %779 = reshape(%776, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), int32] */;
    %780 = reshape(%777, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), int32] */;
    %781 = reshape(%778, newshape=[]) /* ty=bool */;
    %782 = @func_206(%779, %780, %781) /* ty=(Tensor[(14, 11, 13), int32], Tensor[(1, 1, 6), bool], bool, Tensor[(3, 2), bool]) */;
    %783 = maximum(%754, %755) /* ty=Tensor[(?, 16, 3), int64] */;
    %784 = not_equal(%758, %759) /* ty=Tensor[(?, 16, 3), bool] */;
    %785 = %764.0;
    %786 = %767.0;
    %787 = less_equal(%774, %775) /* ty=Tensor[(?, 16, 3), bool] */;
    %788 = %782.0;
    (%783, %784, %785, %var_1388, %var_1389, %786, meta[relay.Constant][77] /* ty=Tensor[(30), float64] */, %787, %788, %var_1413)
  };
  %789(%var_1418, %var_1419, %var_1420, %var_1421, %var_1422) /* ty=(Tensor[(?, 16, 3), int64], Tensor[(?, 16, 3), bool], Tensor[(16, 9, 13), uint64], uint64, Tensor[(1872), uint64], Tensor[(3, 2, 5), float64], Tensor[(30), float64], Tensor[(?, 16, 3), bool], Tensor[(14, 11, 13), int32], Tensor[(143, 14), int32]) */
}

def @func_11925(%var_11924: Tensor[(11, 15, 16), float32]) -> (Tensor[(11, 15, 16), float32],) {
  %792 = fn (%var_11903: Tensor[(11, 15, 16), float32]) -> (Tensor[(11, 15, 16), float32],) {
    %790 = cast(%var_11903, dtype="float32") /* ty=Tensor[(11, 15, 16), float32] */;
    %791 = erf(%790) /* ty=Tensor[(11, 15, 16), float32] */;
    (%791,)
  };
  %792(%var_11924) /* ty=(Tensor[(11, 15, 16), float32],) */
}

def @func_13000() -> (Tensor[(10, 1, 16), float64],) {
  @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */
}

def @func_5954(%var_5948: int64, %var_5949: Tensor[(13, 7, 13), int64], %var_5950: Tensor[(22), float64], %var_5951: Tensor[(264), float64], %var_5952: Tensor[(5, 52), float32], %var_5953: Tensor[(30), float64]) -> (Tensor[(11, 6, 9), int64], Tensor[(594), int64], Tensor[(13, 7, 13), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64], Tensor[(945), float32], Tensor[(5, 52), float32], Tensor[(6), bool], Tensor[(30), float64]) {
  @func_5946(%var_5948, %var_5949, %var_5950, %var_5951, %var_5952, %var_5953) /* ty=(Tensor[(11, 6, 9), int64], Tensor[(594), int64], Tensor[(13, 7, 13), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64], Tensor[(945), float32], Tensor[(5, 52), float32], Tensor[(6), bool], Tensor[(30), float64]) */
}

def @func_8527(%var_8484: Tensor[(7, 11, 4), int16], %var_8494: int64, %var_8497: Tensor[(264), float64], %var_8498: Tensor[(260), float32], %var_8499: Tensor[(30), float64]) -> (Tensor[(7, 11, 4), bool], Tensor[(945), float32], int64, Tensor[(264), float64], Tensor[(260), float32], Tensor[(30), float64], Tensor[(22, 1183), int16], Tensor[(7, 11, 4), float32]) {
  %793 = cast(meta[relay.Constant][78] /* ty=Tensor[(7, 11, 4), int16] */, dtype="bool") /* ty=Tensor[(7, 11, 4), bool] */;
  %794 = shape_of(%var_8484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%var_8484, dtype="bool") /* ty=Tensor[(7, 11, 4), bool] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %797 = cast(%var_8494, dtype="int64") /* ty=int64 */;
  %798 = cast(meta[relay.Constant][79] /* ty=Tensor[(1183), int64] */, dtype="int64") /* ty=Tensor[(1183), int64] */;
  %799 = cast(meta[relay.Constant][80] /* ty=Tensor[(22, 1), float64] */, dtype="float64") /* ty=Tensor[(22, 1), float64] */;
  %800 = cast(%var_8497, dtype="float64") /* ty=Tensor[(264), float64] */;
  %801 = cast(%var_8498, dtype="float32") /* ty=Tensor[(260), float32] */;
  %802 = cast(%var_8499, dtype="float64") /* ty=Tensor[(30), float64] */;
  %803 = reshape(%797, newshape=[]) /* ty=int64 */;
  %804 = reshape(%798, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int64] */;
  %805 = reshape(%799, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %806 = reshape(%800, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %807 = reshape(%801, newshape=[5, 52]) /* ty=Tensor[(5, 52), float32] */;
  %808 = reshape(%802, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %809 = @func_5946(%803, %804, %805, %806, %807, %808) /* ty=(Tensor[(11, 6, 9), int64], Tensor[(594), int64], Tensor[(13, 7, 13), float32], Tensor[(2, 12, 11), float32], Tensor[(22), float64], Tensor[(264), float64], Tensor[(945), float32], Tensor[(5, 52), float32], Tensor[(6), bool], Tensor[(30), float64]) */;
  %810 = cast(meta[relay.Constant][79] /* ty=Tensor[(1183), int64] */, dtype="int16") /* ty=Tensor[(1183), int16] */;
  %811 = cast(meta[relay.Constant][80] /* ty=Tensor[(22, 1), float64] */, dtype="int16") /* ty=Tensor[(22, 1), int16] */;
  %812 = cast(%var_8484, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %813 = erf(%812) /* ty=Tensor[(7, 11, 4), float64] */;
  %814 = cast(%813, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %815 = greater_equal(%795, %796) /* ty=Tensor[(7, 11, 4), bool] */;
  %816 = %809.6;
  %817 = logical_xor(%810, %811) /* ty=Tensor[(22, 1183), int16] */;
  %818 = log2(%814) /* ty=Tensor[(7, 11, 4), float32] */;
  (%815, %816, %var_8494, %var_8497, %var_8498, %var_8499, %817, %818)
}

def @func_654(%var_652: Tensor[(945), float32], %var_653: Tensor[(1, 30), float64]) -> (Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) {
  %827 = fn (%var_648: Tensor[(945), float32], %var_649: Tensor[(1, 30), float64]) -> (Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) {
    %819 = cast(meta[relay.Constant][81] /* ty=Tensor[(15, 6, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 9), float32] */;
    %820 = cast(%var_648, dtype="float32") /* ty=Tensor[(945), float32] */;
    %821 = cast(%var_649, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
    %822 = reshape(%820, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
    %823 = reshape(%821, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %824 = @func_567(%822, %823) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(3, 2, 5), float64], Tensor[(30), float64]) */;
    %825 = acosh(%819) /* ty=Tensor[(15, 6, 9), float32] */;
    %826 = %824.2;
    (%825, %826, %var_648, %var_649)
  };
  %827(%var_652, %var_653) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */
}

def @func_12258(%var_12246: Tensor[(12, 14, 8), uint64]) -> Tensor[(12, 14, 8), uint64] {
  %828 = cast(meta[relay.Constant][82] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %829 = cast(%var_12246, dtype="uint64") /* ty=Tensor[(12, 14, 8), uint64] */;
  bitwise_or(%828, %829) /* ty=Tensor[(12, 14, 8), uint64] */
}

def @func_7717(%var_7715: Tensor[(2880), int32]) -> (Tensor[(10, 3, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(2880), int32], Tensor[(10, 3), float64]) {
  @func_7714(%var_7715) /* ty=(Tensor[(10, 3, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(2880), int32], Tensor[(10, 3), float64]) */
}

def @func_14360(%var_14358: Tensor[(72), uint16], %var_14359: Tensor[(384), float32]) -> (Tensor[(10, 1, 16), float64], Tensor[(3, 2, 5), float64], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(945), float32], Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(72), uint16], Tensor[(384), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(1694), float32]) {
  @func_14356(%var_14358, %var_14359) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(3, 2, 5), float64], Tensor[(30), float64], Tensor[(1, 1, 6), bool], Tensor[(108), float64], bool, Tensor[(6), bool], Tensor[(945), float32], Tensor[(10, 1, 16), float64], Tensor[(8), float32], Tensor[(72), uint16], Tensor[(384), float32], Tensor[(90), float32], Tensor[(30), float64], Tensor[(1694), float32]) */
}

def @func_13186(%var_13183: Tensor[(384), float32], %var_13184: uint64, %var_13185: Tensor[(320), float64]) -> (Tensor[(10, 1, 16), float64], Tensor[(384), float32], Tensor[(936, 2), float32], Tensor[(16, 4, 5), float64], Tensor[(320), float64]) {
  @func_13181(%var_13183, %var_13184, %var_13185) /* ty=(Tensor[(10, 1, 16), float64], Tensor[(384), float32], Tensor[(936, 2), float32], Tensor[(16, 4, 5), float64], Tensor[(320), float64]) */
}

def @func_13563(%var_13561: Tensor[(9, 6, 6), float64]) -> (Tensor[(10, 1, 16), float64], int16, Tensor[(90), int16], Tensor[(13, 4, 5), float32], Tensor[(260), float32], Tensor[(30), float64], Tensor[(9, 6, 6), bool]) {
  @func_13560(%var_13561) /* ty=(Tensor[(10, 1, 16), float64], int16, Tensor[(90), int16], Tensor[(13, 4, 5), float32], Tensor[(260), float32], Tensor[(30), float64], Tensor[(9, 6, 6), bool]) */
}

def @func_2921(%var_2917: Tensor[(11, 15, 1), float32], %var_2918: Tensor[(105, 9), float32], %var_2919: Tensor[(30), float64], %var_2920: Tensor[(945), float32]) -> (Tensor[(105, 9), float32], Tensor[(945), bool], Tensor[(11, 15, 30), float64], Tensor[(3, 2, 5), float64]) {
  %850 = fn (%var_2883: Tensor[(11, 15, 1), float32], %var_2893: Tensor[(105, 9), float32], %var_2894: Tensor[(30), float64], %var_2896: Tensor[(945), float32]) -> (Tensor[(105, 9), float32], Tensor[(945), bool], Tensor[(11, 15, 30), float64], Tensor[(3, 2, 5), float64]) {
    %830 = cast(%var_2893, dtype="float32") /* ty=Tensor[(105, 9), float32] */;
    %831 = cast(%var_2894, dtype="float64") /* ty=Tensor[(30), float64] */;
    %832 = reshape(%830, newshape=[945]) /* ty=Tensor[(945), float32] */;
    %833 = reshape(%831, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
    %834 = @func_651(%832, %833) /* ty=(Tensor[(15, 6, 9), float32], Tensor[(30), float64], Tensor[(945), float32], Tensor[(1, 30), float64]) */;
    %835 = %834.2;
    %836 = cast(%var_2896, dtype="bool") /* ty=Tensor[(945), bool] */;
    %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(1), int32] */;
    %838 = cast(%835, dtype="bool") /* ty=Tensor[(945), bool] */;
    %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?), bool] */;
    %840 = cast(%var_2883, dtype="float32") /* ty=Tensor[(11, 15, 1), float32] */;
    %841 = tan(%840) /* ty=Tensor[(11, 15, 1), float32] */;
    %842 = cast(%841, dtype="float64") /* ty=Tensor[(11, 15, 1), float64] */;
    %843 = cast(%var_2894, dtype="float64") /* ty=Tensor[(30), float64] */;
    %844 = cast(%var_2894, dtype="float64") /* ty=Tensor[(30), float64] */;
    %845 = reshape(%844, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float64] */;
    %846 = @func_272(%845) /* ty=(Tensor[(3, 2, 5), float64],) */;
    %847 = greater_equal(%838, %839) /* ty=Tensor[(945), bool] */;
    %848 = maximum(%842, %843) /* ty=Tensor[(11, 15, 30), float64] */;
    %849 = %846.0;
    (%var_2893, %847, %848, %849)
  };
  %850(%var_2917, %var_2918, %var_2919, %var_2920) /* ty=(Tensor[(105, 9), float32], Tensor[(945), bool], Tensor[(11, 15, 30), float64], Tensor[(3, 2, 5), float64]) */
}

def @func_13070() -> (Tensor[(10, 1, 16), float64],) {
  %853 = fn () -> (Tensor[(10, 1, 16), float64],) {
    %851 = @func_12998() /* ty=(Tensor[(10, 1, 16), float64],) */;
    %852 = %851.0;
    (%852,)
  };
  %853() /* ty=(Tensor[(10, 1, 16), float64],) */
}

def @func_7292(%var_7289: Tensor[(8, 2, 1), float64]) -> (Tensor[(8, 2, 1), float64],) {
  %854 = cast(%var_7289, dtype="float64") /* ty=Tensor[(8, 2, 1), float64] */;
  %855 = acosh(%854) /* ty=Tensor[(8, 2, 1), float64] */;
  (%855,)
}

def @func_6113(%var_6038: Tensor[(9, 1, 2), int64], %var_6039: Tensor[(9, 9, 2), int64], %var_6083: Tensor[(792), float32], %var_6091: Tensor[(30), float32]) -> (Tensor[(9, 9, 2), int64], Tensor[(792), float32], Tensor[(2, 15, 15), float32], Tensor[(30), float32], Tensor[(8, 2, 7), bool], Tensor[(3, 3, 3), float32]) {
  %856 = cast(%var_6038, dtype="int64") /* ty=Tensor[(9, 1, 2), int64] */;
  %857 = cast(%var_6039, dtype="int64") /* ty=Tensor[(9, 9, 2), int64] */;
  %858 = cast(%var_6091, dtype="float32") /* ty=Tensor[(30), float32] */;
  %859 = reshape(%858, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %860 = cast(meta[relay.Constant][83] /* ty=Tensor[(2, 56), bool] */, dtype="bool") /* ty=Tensor[(2, 56), bool] */;
  %861 = cast(meta[relay.Constant][83] /* ty=Tensor[(2, 56), bool] */, dtype="bool") /* ty=Tensor[(2, 56), bool] */;
  %862 = reshape(%860, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), bool] */;
  %863 = reshape(%861, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), bool] */;
  %864 = @func_5115(%862, %863) /* ty=Tensor[(8, 2, 7), bool] */;
  %865 = cast(meta[relay.Constant][83] /* ty=Tensor[(2, 56), bool] */, dtype="int16") /* ty=Tensor[(2, 56), int16] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%864, dtype="int16") /* ty=Tensor[(8, 2, 7), int16] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %869 = multiply(%867, %868) /* ty=Tensor[(8, 2, 7), int16] */;
  %870 = cast(meta[relay.Constant][83] /* ty=Tensor[(2, 56), bool] */, dtype="bool") /* ty=Tensor[(2, 56), bool] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%869, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %874 = cast(meta[relay.Constant][84] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %875 = cast(meta[relay.Constant][84] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %876 = cast(%var_6083, dtype="float32") /* ty=Tensor[(792), float32] */;
  %877 = reshape(%874, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %878 = reshape(%875, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %879 = reshape(%876, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %880 = @func_5607(%877, %878, %879) /* ty=(Tensor[(3, 3, 3), float64], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */;
  %881 = %880.0;
  %882 = cast(meta[relay.Constant][84] /* ty=Tensor[(27), float64] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%881, dtype="float32") /* ty=Tensor[(3, 3, 3), float32] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %886 = subtract(%856, %857) /* ty=Tensor[(9, 9, 2), int64] */;
  %887 = @func_2408(%859) /* ty=Tensor[(2, 15, 15), float32] */;
  %888 = greater(%872, %873) /* ty=Tensor[(8, 2, 7), bool] */;
  %889 = power(%884, %885) /* ty=Tensor[(3, 3, 3), float32] */;
  (%886, %var_6083, %887, %var_6091, %888, %889)
}

def @func_14048(%var_14047: Tensor[(12, 10, 14), float64]) -> Tensor[(12, 10, 14), float32] {
  %893 = fn (%var_13995: Tensor[(12, 10, 14), float64]) -> Tensor[(12, 10, 14), float32] {
    %890 = cast(%var_13995, dtype="float64") /* ty=Tensor[(12, 10, 14), float64] */;
    %891 = log10(%890) /* ty=Tensor[(12, 10, 14), float64] */;
    %892 = cast(%891, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
    cos(%892) /* ty=Tensor[(12, 10, 14), float32] */
  };
  %893(%var_14047) /* ty=Tensor[(12, 10, 14), float32] */
}

def @func_7714(%var_7704: Tensor[(2880), int32]) -> (Tensor[(10, 3, 5), float32], Tensor[(3, 2, 5), float64], Tensor[(2880), int32], Tensor[(10, 3), float64]) {
  %894 = cast(meta[relay.Constant][85] /* ty=Tensor[(10, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 5), float32] */;
  %895 = cast(%var_7704, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %896 = cast(%var_7704, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %897 = cast(meta[relay.Constant][86] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %898 = reshape(%895, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %899 = reshape(%896, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), int32] */;
  %900 = reshape(%897, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %901 = @func_3336(%898, %899, %900) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(15, 6, 9), float32], Tensor[(945), float32], Tensor[(30), float64], Tensor[(3, 2, 5), float64]) */;
  %902 = log10(%894) /* ty=Tensor[(10, 3, 5), float32] */;
  %903 = %901.4;
  (%902, %903, %var_7704, meta[relay.Constant][86] /* ty=Tensor[(10, 3), float64] */)
}

def @func_13590() -> Tensor[(10, 1, 16), float64] {
  %905 = fn () -> Tensor[(10, 1, 16), float64] {
    %904 = @func_13390() /* ty=(Tensor[(10, 1, 16), float64],) */;
    %904.0
  };
  %905() /* ty=Tensor[(10, 1, 16), float64] */
}

def @func_12183(%var_12162: Tensor[(4, 12, 7), uint16], %var_12163: Tensor[(4, 12, 7), uint16]) -> Tensor[(4, 12, 7), int64] {
  %906 = cast(%var_12163, dtype="uint16") /* ty=Tensor[(4, 12, 7), uint16] */;
  %907 = shape_of(%var_12162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%var_12162, dtype="uint16") /* ty=Tensor[(4, 12, 7), uint16] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %910 = left_shift(%908, %909) /* ty=Tensor[(4, 12, 7), uint16] */;
  %911 = cast(%910, dtype="int64") /* ty=Tensor[(4, 12, 7), int64] */;
  %912 = shape_of(%var_12162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(%var_12162, dtype="int64") /* ty=Tensor[(4, 12, 7), int64] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%913, %914) /* ty=Tensor[(4, 12, 7), int64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_12846() -> Tensor[(3, 10, 8), float32] {
  %0 = @func_11036() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %0.0
}

def @func_16937() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %2 = @func_11834() /* ty=Tensor[(3, 10, 8), float32] */;
  %3 = %1.0;
  (%2, %3)
}

def @func_16906() -> Tensor[(3, 10, 8), float32] {
  %4 = @func_11396() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %4.0
}

def @func_7189() -> (Tensor[(3, 10, 8), float64],) {
  %5 = @func_7070() /* ty=Tensor[(3, 10, 8), float64] */;
  (%5,)
}

def @func_17871() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %6 = @func_15952() /* ty=Tensor[(3, 10, 8), float32] */;
  %7 = @func_11770() /* ty=Tensor[(3, 10, 8), float32] */;
  %8 = @func_15952() /* ty=Tensor[(3, 10, 8), float32] */;
  (%6, %7, %8)
}

def @func_608(%var_583: Tensor[(8, 12, 15), uint32]) -> (Tensor[(8, 12, 15), float32],) {
  %9 = cast(%var_583, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %10 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 12, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 12, 15), uint32] */, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %13 = less_equal(%11, %12) /* ty=Tensor[(8, 12, 15), bool] */;
  %14 = cast(%13, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %15 = erf(%14) /* ty=Tensor[(8, 12, 15), float32] */;
  (%15,)
}

def @func_6024(%var_5926: Tensor[(135), uint16], %var_5932: Tensor[(6), int8]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 1, 2), uint8], Tensor[(6), int8], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(3, 10, 8), float32], Tensor[(2025), float32], Tensor[(3, 10, 8), float32]) {
  %16 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %17 = @func_4034() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %18 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %19 = cast(%var_5926, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %21 = reshape(%19, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %22 = reshape(%20, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %23 = @func_2879(%21, %22) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %24 = cast(%var_5932, dtype="int8") /* ty=Tensor[(6), int8] */;
  %25 = cast(%var_5926, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %26 = reshape(%24, newshape=[6, 1]) /* ty=Tensor[(6, 1), int8] */;
  %27 = reshape(%25, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %28 = @func_3440(%26, %27) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 1, 2), uint8], Tensor[(140), bool], Tensor[(140), bool], Tensor[(6, 135), uint64]) */;
  %29 = %17.1;
  %30 = cast(%29, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %31 = reshape(%30, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %32 = @func_608(%31) /* ty=(Tensor[(8, 12, 15), float32],) */;
  %33 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %34 = %23.2;
  %35 = cast(%34, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %37 = reshape(%35, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
  %38 = reshape(%36, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
  %39 = @func_489(%37, %38) /* ty=(Tensor[(9, 15, 15), uint16],) */;
  %40 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %41 = cast(meta[relay.Constant][1] /* ty=Tensor[(2025), uint16] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %42 = asin(%41) /* ty=Tensor[(2025), float32] */;
  %43 = cast(%34, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %45 = reshape(%43, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %46 = reshape(%44, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %47 = @func_2879(%45, %46) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %48 = %47.5;
  %49 = cast(%42, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %50 = cast(%48, dtype="float64") /* ty=float64 */;
  %51 = divide(%49, %50) /* ty=Tensor[(2025), float64] */;
  %52 = cast(%42, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(1), int32] */;
  %54 = cast(%51, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?), float32] */;
  %56 = cast(%34, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %57 = reshape(%56, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %58 = @func_4604(%57) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(1, 40), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %59 = %16.0;
  %60 = %18.0;
  %61 = %28.1;
  %62 = %32.0;
  %63 = %33.0;
  %64 = %39.0;
  %65 = %40.0;
  %66 = subtract(%54, %55) /* ty=Tensor[(2025), float32] */;
  %67 = %58.0;
  (%59, %29, %60, %34, %var_5926, %61, %var_5932, %62, %63, %64, %65, %66, %67)
}

def @func_16446(%var_16440: Tensor[(140), bool]) -> (Tensor[(3, 10, 8), float32], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(140), bool]) {
  %68 = @func_10961() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) */;
  %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %70 = cast(%var_16440, dtype="bool") /* ty=Tensor[(140), bool] */;
  %71 = reshape(%69, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %72 = reshape(%70, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %73 = @func_3236(%71, %72) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */;
  %74 = %68.3;
  %75 = %73.2;
  (%74, %75, meta[relay.Constant][2] /* ty=Tensor[(135), uint16] */, %var_16440)
}

def @func_6680() -> (Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float64]) {
  %76 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  %77 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
  (%76, %77)
}

def @func_8958() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %78 = @func_8338() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %79 = @func_6841() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %80 = %78.0;
  %81 = %79.0;
  (%80, %81)
}

def @func_8262() -> Tensor[(1400, 1), float64] {
  %82 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %82.4
}

def @main() -> (Tensor[(13, 6, 3), float32],) {
  %83 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(13, 6, 3), float32] */;
  %85 = sinh(%84) /* ty=Tensor[(13, 6, 3), float32] */;
  (%85,)
}

def @func_8422() -> (Tensor[(3, 10, 8), float32],) {
  %86 = @func_7807() /* ty=Tensor[(3, 10, 8), float32] */;
  (%86,)
}

def @func_17579() -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16]) {
  %87 = @func_10693() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %88 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
  %89 = @func_15773() /* ty=(Tensor[(5, 4, 2), uint16],) */;
  %90 = %87.0;
  %91 = %88.4;
  %92 = %89.0;
  (%90, %91, %92)
}

def @func_12830(%var_12749: Tensor[(135, 1), uint16], %var_12783: Tensor[(135, 3), uint16], %var_12815: Tensor[(2025), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(2025), uint16], Tensor[(3, 10, 8), float64], Tensor[(135), uint16], Tensor[(135, 3), uint32], Tensor[(2025), float32]) {
  %93 = cast(%var_12749, dtype="uint16") /* ty=Tensor[(135, 1), uint16] */;
  %94 = cast(meta[relay.Constant][3] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %95 = reshape(%93, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %96 = reshape(%94, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %97 = @func_4197(%95, %96) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
  %98 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %99 = @func_7615() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32]) */;
  %100 = cast(%var_12749, dtype="uint32") /* ty=Tensor[(135, 1), uint32] */;
  %101 = cast(%var_12783, dtype="uint32") /* ty=Tensor[(135, 3), uint32] */;
  %102 = cast(%var_12815, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %103 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(2025), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %104 = cast(meta[relay.Constant][3] /* ty=Tensor[(2025), uint16] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?), float32] */;
  %106 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  %107 = %97.4;
  %108 = %98.0;
  %109 = %99.0;
  %110 = subtract(%100, %101) /* ty=Tensor[(135, 3), uint32] */;
  %111 = power(%104, %105) /* ty=Tensor[(2025), float32] */;
  (%106, %107, %108, %109, %110, %111)
}

def @func_13828() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %112 = @func_9495() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) */;
  %113 = @func_12416() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %114 = %112.1;
  %115 = %113.1;
  (%114, %115)
}

def @func_9582(%var_9570: Tensor[(1440), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(224), float64], Tensor[(1440), float32]) {
  %116 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %117 = cast(%var_9570, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %118 = reshape(%117, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
  %119 = @func_9016(%118) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(8, 7, 4), int64], Tensor[(224), float64]) */;
  %120 = %116.0;
  %121 = %119.3;
  (%120, %121, %var_9570)
}

def @func_16002() -> Tensor[(8, 12, 15), float32] {
  @func_8253() /* ty=Tensor[(8, 12, 15), float32] */
}

def @func_7944(%var_7903: Tensor[(1, 40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(14, 40), float64]) {
  %122 = cast(%var_7903, dtype="uint16") /* ty=Tensor[(1, 40), uint16] */;
  %123 = reshape(%122, newshape=[40]) /* ty=Tensor[(40), uint16] */;
  %124 = @func_3910(%123) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) */;
  %125 = cast(%var_7903, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
  %126 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 40), uint16] */, dtype="float64") /* ty=Tensor[(14, 40), float64] */;
  %127 = @func_7807() /* ty=Tensor[(3, 10, 8), float32] */;
  %128 = %124.1;
  %129 = divide(%125, %126) /* ty=Tensor[(14, 40), float64] */;
  (%127, %128, %129)
}

def @func_6042() -> (Tensor[(3, 10, 8), float32],) {
  %130 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %131 = %130.0;
  (%131,)
}

def @func_6317() -> Tensor[(8, 12, 15), float32] {
  %132 = @func_4034() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %132.1
}

def @func_7243() -> (Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(3, 10, 8), float32], Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32]) {
  %133 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %134 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(8, 14, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %137 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 45), uint16] */, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
  %138 = reshape(%137, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %139 = @func_6891(%138) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32]) */;
  %140 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %141 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %142 = floor_mod(%135, %136) /* ty=Tensor[(8, 14, 5), float32] */;
  %143 = %139.0;
  %144 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  %145 = sin(%140) /* ty=Tensor[(8, 14, 5), float32] */;
  %146 = %141.1;
  (%142, %143, meta[relay.Constant][7] /* ty=Tensor[(3, 45), uint16] */, %144, %145, %146)
}

def @func_13032() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %147 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  %148 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  (%147, %148)
}

def @func_5868() -> (Tensor[(3, 10, 8), float32],) {
  %149 = @func_5765() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %150 = %149.0;
  (%150,)
}

def @func_15002() -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) {
  %151 = @func_10443() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
  %152 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %153 = %151.1;
  %154 = %152.0;
  (%153, %154)
}

def @func_15439() -> (Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) {
  %155 = @func_4078() /* ty=(Tensor[(3, 10, 8), float32], int64, Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) */;
  %156 = @func_11207() /* ty=Tensor[(3, 10, 8), float32] */;
  %157 = %155.4;
  (%156, %157)
}

def @func_5488(%var_5433: Tensor[(6), int8], %var_5480: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), float64], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 10, 8), float64]) {
  %158 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %159 = cast(%var_5433, dtype="int8") /* ty=Tensor[(6), int8] */;
  %160 = reshape(%159, newshape=[3, 1, 2]) /* ty=Tensor[(3, 1, 2), int8] */;
  %161 = @func_2387(%160) /* ty=(Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) */;
  %162 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %163 = cast(%var_5480, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %164 = %161.1;
  %165 = cast(%164, dtype="uint16") /* ty=Tensor[(9, 15, 15), uint16] */;
  %166 = reshape(%163, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %167 = reshape(%165, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %168 = @func_4197(%166, %167) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
  %169 = %158.0;
  %170 = cast(%169, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %171 = reshape(%170, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
  %172 = @func_3522(%171) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
  %173 = %162.0;
  %174 = %168.3;
  %175 = %172.0;
  (%169, %164, %var_5433, %173, %174, %var_5480, %175)
}

def @func_7652() -> (Tensor[(3, 10, 8), float32],) {
  %176 = @func_7168() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %177 = %176.0;
  (%177,)
}

def @func_16570() -> Tensor[(13, 6, 3), float32] {
  %178 = @func_15264() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40, 1), uint16], Tensor[(1, 135), uint16]) */;
  %178.1
}

def @func_4763() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  %179 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %180 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %181 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %182 = %179.0;
  %183 = %180.0;
  %184 = %181.1;
  (%182, %183, %184)
}

def @func_4048() -> Tensor[(13, 6, 3), float32] {
  @func_3126() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_7148() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) {
  %185 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
  %186 = cast(meta[relay.Constant][8] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %187 = cast(meta[relay.Constant][9] /* ty=Tensor[(40), uint16] */, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %188 = cast(meta[relay.Constant][10] /* ty=Tensor[(1400, 1), float64] */, dtype="float64") /* ty=Tensor[(1400, 1), float64] */;
  %189 = reshape(%186, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
  %190 = reshape(%187, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint16] */;
  %191 = reshape(%188, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %192 = @func_6464(%189, %190, %191) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %193 = %185.1;
  %194 = %192.1;
  (%193, %194, meta[relay.Constant][8] /* ty=Tensor[(300), float32] */, meta[relay.Constant][9] /* ty=Tensor[(40), uint16] */, meta[relay.Constant][10] /* ty=Tensor[(1400, 1), float64] */)
}

def @func_4901() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %195 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %196 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %197 = %195.0;
  %198 = %196.0;
  (%197, %198)
}

def @func_9376() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  %199 = @func_7384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %200 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %201 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  %202 = %199.1;
  %203 = %200.1;
  (%201, %202, %203)
}

def @func_3981() -> (Tensor[(3, 10, 8), float32],) {
  %204 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %205 = %204.0;
  (%205,)
}

def @func_2893() -> (Tensor[(3, 10, 8), float32],) {
  %206 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %207 = %206.0;
  (%207,)
}

def @func_11207() -> Tensor[(3, 10, 8), float32] {
  %208 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %208.1
}

def @func_14511() -> Tensor[(13, 6, 3), float32] {
  @func_3126() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_3587() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %209 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %210 = %209.0;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %212 = reshape(%211, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
  %213 = @func_3522(%212) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
  %214 = %213.1;
  (%210, %214)
}

def @func_3172() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) {
  %215 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %216 = cast(meta[relay.Constant][11] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %217 = reshape(%216, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %218 = @func_608(%217) /* ty=(Tensor[(8, 12, 15), float32],) */;
  %219 = %215.0;
  %220 = %218.0;
  (%219, %220, meta[relay.Constant][11] /* ty=Tensor[(1440), uint32] */)
}

def @func_10210() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %221 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %222 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %223 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %224 = %221.1;
  %225 = %222.0;
  %226 = %223.0;
  (%224, %225, %226)
}

def @func_6891(%var_6860: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32]) {
  %227 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %228 = cast(%var_6860, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %229 = cast(meta[relay.Constant][12] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %230 = reshape(%228, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %231 = reshape(%229, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %232 = @func_3236(%230, %231) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */;
  %233 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %234 = %227.0;
  %235 = %232.3;
  %236 = %233.1;
  (%234, %235, %var_6860, meta[relay.Constant][12] /* ty=Tensor[(140), bool] */, %236)
}

def @func_11413() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %237 = @func_5868() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %238 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %239 = %237.0;
  %240 = %238.0;
  (%239, %240)
}

def @func_17528() -> (Tensor[(13, 6, 3), float32],) {
  %241 = @func_16570() /* ty=Tensor[(13, 6, 3), float32] */;
  (%241,)
}

def @func_3812(%var_3781: Tensor[(10, 10, 14), float64]) -> Tensor[(10, 10, 14), bool] {
  %242 = cast(%var_3781, dtype="float64") /* ty=Tensor[(10, 10, 14), float64] */;
  %243 = log2(%242) /* ty=Tensor[(10, 10, 14), float64] */;
  %244 = cast(%243, dtype="bool") /* ty=Tensor[(10, 10, 14), bool] */;
  %245 = shape_of(%var_3781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%var_3781, dtype="bool") /* ty=Tensor[(10, 10, 14), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%246, %247) /* ty=Tensor[(10, 10, 14), bool] */
}

def @func_17688(%var_17632: bool, %var_17633: Tensor[(15, 1, 13), bool]) -> (Tensor[(15, 1, 13), bool], Tensor[(13, 6, 3), uint16], Tensor[(39, 6), float64], Tensor[(3, 10, 8), float32]) {
  %248 = cast(%var_17632, dtype="bool") /* ty=bool */;
  %249 = cast(%var_17633, dtype="bool") /* ty=Tensor[(15, 1, 13), bool] */;
  %250 = logical_and(%248, %249) /* ty=Tensor[(15, 1, 13), bool] */;
  %251 = cast(%250, dtype="float64") /* ty=Tensor[(15, 1, 13), float64] */;
  %252 = log10(%251) /* ty=Tensor[(15, 1, 13), float64] */;
  %253 = cast(%252, dtype="bool") /* ty=Tensor[(15, 1, 13), bool] */;
  %254 = cast(%var_17632, dtype="bool") /* ty=bool */;
  %255 = cast(meta[relay.Constant][13] /* ty=Tensor[(39, 6), float64] */, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
  %256 = reshape(%255, newshape=[13, 6, 3]) /* ty=Tensor[(13, 6, 3), float64] */;
  %257 = greater(%253, %254) /* ty=Tensor[(15, 1, 13), bool] */;
  %258 = @func_12248(%256) /* ty=Tensor[(13, 6, 3), uint16] */;
  %259 = @func_8236() /* ty=Tensor[(3, 10, 8), float32] */;
  (%257, %258, meta[relay.Constant][13] /* ty=Tensor[(39, 6), float64] */, %259)
}

def @func_15680(%var_15665: uint16) -> (Tensor[(14, 15, 1), uint16], Tensor[(3, 10, 8), float32]) {
  %260 = cast(%var_15665, dtype="uint16") /* ty=uint16 */;
  %261 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 15, 1), uint16] */, dtype="uint16") /* ty=Tensor[(14, 15, 1), uint16] */;
  %262 = @func_11918() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %263 = logical_xor(%260, %261) /* ty=Tensor[(14, 15, 1), uint16] */;
  %264 = %262.0;
  (%263, %264)
}

def @func_3019() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %265 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %266 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %267 = %265.0;
  %268 = %266.0;
  (%267, %268)
}

def @func_6295(%var_6289: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(1400), float64]) {
  %269 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %270 = cast(%var_6289, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %271 = reshape(%270, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %272 = @func_4310(%271) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */;
  %273 = %269.0;
  %274 = %272.2;
  (%273, %274, %var_6289)
}

def @func_6954() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(2, 6, 16), float32], Tensor[(192), float32]) {
  %275 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %276 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(13, 6, 3), float64] */;
  %278 = cast(meta[relay.Constant][15] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %279 = reshape(%278, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), float32] */;
  %280 = %275.1;
  %281 = sigmoid(%277) /* ty=Tensor[(13, 6, 3), float64] */;
  %282 = @func_2507(%279) /* ty=Tensor[(2, 6, 16), float32] */;
  (%280, %281, %282, meta[relay.Constant][15] /* ty=Tensor[(192), float32] */)
}

def @func_11963() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) {
  %283 = @func_5765() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %284 = cast(meta[relay.Constant][16] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %285 = cast(meta[relay.Constant][16] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %286 = reshape(%284, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
  %287 = reshape(%285, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
  %288 = @func_11207() /* ty=Tensor[(3, 10, 8), float32] */;
  %289 = %283.0;
  %290 = @func_2266(%286, %287) /* ty=Tensor[(4, 7, 5), bool] */;
  (%288, %289, %290, meta[relay.Constant][16] /* ty=Tensor[(140), bool] */)
}

def @func_13489() -> (Tensor[(3, 10, 8), float32], Tensor[(4, 6, 12), bool], Tensor[(288), bool]) {
  %291 = @func_9245() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %292 = cast(meta[relay.Constant][17] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %293 = cast(meta[relay.Constant][17] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %294 = reshape(%292, newshape=[4, 6, 12]) /* ty=Tensor[(4, 6, 12), bool] */;
  %295 = reshape(%293, newshape=[4, 6, 12]) /* ty=Tensor[(4, 6, 12), bool] */;
  %296 = @func_12124(%294, %295) /* ty=(Tensor[(4, 6, 12), bool],) */;
  %297 = %291.0;
  %298 = %296.0;
  (%297, %298, meta[relay.Constant][17] /* ty=Tensor[(288), bool] */)
}

def @func_7434() -> (Tensor[(3, 10, 8), float32],) {
  %299 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %300 = %299.0;
  (%300,)
}

def @func_11619() -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float64]) {
  %301 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %302 = %301.0;
  %303 = @func_7070() /* ty=Tensor[(3, 10, 8), float64] */;
  (%302, %303)
}

def @func_15264() -> (Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40, 1), uint16], Tensor[(1, 135), uint16]) {
  %304 = @func_10693() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %305 = @func_14582() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %306 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %307 = cast(meta[relay.Constant][18] /* ty=Tensor[(40, 1), uint16] */, dtype="uint16") /* ty=Tensor[(40, 1), uint16] */;
  %308 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 135), uint16] */, dtype="uint16") /* ty=Tensor[(1, 135), uint16] */;
  %309 = reshape(%307, newshape=[40]) /* ty=Tensor[(40), uint16] */;
  %310 = reshape(%308, newshape=[15, 9]) /* ty=Tensor[(15, 9), uint16] */;
  %311 = @func_4454(%309, %310) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16], Tensor[(3, 15, 3), float32], Tensor[(15, 9), uint16], Tensor[(2025), uint16]) */;
  %312 = %304.0;
  %313 = %305.1;
  %314 = %306.0;
  %315 = %311.0;
  (%312, %313, %314, %315, meta[relay.Constant][18] /* ty=Tensor[(40, 1), uint16] */, meta[relay.Constant][19] /* ty=Tensor[(1, 135), uint16] */)
}

def @func_7558() -> (Tensor[(3, 10, 8), float32],) {
  %316 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %317 = %316.1;
  (%317,)
}

def @func_4078() -> (Tensor[(3, 10, 8), float32], int64, Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) {
  %318 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %319 = cast(meta[relay.Constant][20] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %320 = cast(meta[relay.Constant][21] /* ty=Tensor[(27, 75), uint16] */, dtype="uint16") /* ty=Tensor[(27, 75), uint16] */;
  %321 = reshape(%319, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %322 = reshape(%320, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %323 = @func_2879(%321, %322) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %324 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %325 = cast(meta[relay.Constant][21] /* ty=Tensor[(27, 75), uint16] */, dtype="float64") /* ty=Tensor[(27, 75), float64] */;
  %326 = %318.0;
  %327 = %323.5;
  %328 = %324.0;
  %329 = sin(%325) /* ty=Tensor[(27, 75), float64] */;
  (%326, %327, meta[relay.Constant][20] /* ty=Tensor[(135), uint16] */, %328, %329)
}

def @func_4564(%var_4498: Tensor[(40), uint16], %var_4499: Tensor[(135), uint16], %var_4504: Tensor[(1400), float64]) -> (Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %330 = cast(%var_4498, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %331 = cast(%var_4499, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %332 = reshape(%330, newshape=[40]) /* ty=Tensor[(40), uint16] */;
  %333 = reshape(%331, newshape=[15, 9]) /* ty=Tensor[(15, 9), uint16] */;
  %334 = @func_4454(%332, %333) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16], Tensor[(3, 15, 3), float32], Tensor[(15, 9), uint16], Tensor[(2025), uint16]) */;
  %335 = cast(%var_4504, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %336 = reshape(%335, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
  %337 = cast(meta[relay.Constant][22] /* ty=Tensor[(6), int8] */, dtype="int8") /* ty=Tensor[(6), int8] */;
  %338 = %334.4;
  %339 = cast(%338, dtype="uint16") /* ty=Tensor[(15, 9), uint16] */;
  %340 = reshape(%337, newshape=[6, 1]) /* ty=Tensor[(6, 1), int8] */;
  %341 = reshape(%339, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %342 = @func_3440(%340, %341) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 1, 2), uint8], Tensor[(140), bool], Tensor[(140), bool], Tensor[(6, 135), uint64]) */;
  %343 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(13, 6, 3), float64] */;
  %345 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %346 = @func_3812(%336) /* ty=Tensor[(10, 10, 14), bool] */;
  %347 = %342.3;
  %348 = sin(%344) /* ty=Tensor[(13, 6, 3), float64] */;
  %349 = %345.1;
  %350 = @func_4048() /* ty=Tensor[(13, 6, 3), float32] */;
  (%338, %var_4498, %var_4499, %346, %var_4504, %347, meta[relay.Constant][22] /* ty=Tensor[(6), int8] */, %348, %349, %350)
}

def @func_16224() -> Tensor[(3, 10, 8), float32] {
  %351 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %351.1
}

def @func_9804() -> (Tensor[(5, 4, 2), uint16],) {
  %352 = @func_9495() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) */;
  %353 = %352.2;
  (%353,)
}

def @func_17594(%var_17586: Tensor[(14, 15, 12), float32], %var_17587: Tensor[(14, 15, 12), float32]) -> (Tensor[(14, 15, 12), bool],) {
  %354 = cast(%var_17587, dtype="bool") /* ty=Tensor[(14, 15, 12), bool] */;
  %355 = shape_of(%var_17586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_17586, dtype="bool") /* ty=Tensor[(14, 15, 12), bool] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %358 = not_equal(%356, %357) /* ty=Tensor[(14, 15, 12), bool] */;
  (%358,)
}

def @func_13141(%var_13099: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(10, 10, 14), float64], Tensor[(3, 10, 8), float32]) {
  %359 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %360 = cast(%var_13099, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %361 = reshape(%360, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %362 = @func_8617(%361) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */;
  %363 = %362.4;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(10, 10, 14), float64] */;
  %365 = asin(%364) /* ty=Tensor[(10, 10, 14), float64] */;
  %366 = cast(%var_13099, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="float64") /* ty=Tensor[(10, 10, 14), float64] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %370 = @func_10716() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %371 = %359.0;
  %372 = divide(%368, %369) /* ty=Tensor[(10, 10, 14), float64] */;
  %373 = %370.0;
  (%371, %372, %373)
}

def @func_17950() -> (Tensor[(13, 6, 3), float32],) {
  %374 = @func_14511() /* ty=Tensor[(13, 6, 3), float32] */;
  (%374,)
}

def @func_13390() -> (Tensor[(3, 10, 8), float32],) {
  %375 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %376 = %375.0;
  (%376,)
}

def @func_17503() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32]) {
  %377 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %378 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %379 = %377.0;
  %380 = %378.0;
  %381 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  (%379, %380, %381)
}

def @func_17015() -> Tensor[(3, 10, 8), float32] {
  %382 = @func_13828() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %382.0
}

def @func_18038(%var_18016: Tensor[(100, 14), float64]) -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float64], Tensor[(1400), float64], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(100, 14), float64]) {
  %383 = @func_13375() /* ty=(Tensor[(1440), uint32],) */;
  %384 = @func_17579() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16]) */;
  %385 = cast(meta[relay.Constant][23] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %386 = cast(meta[relay.Constant][24] /* ty=Tensor[(40), uint16] */, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %387 = cast(%var_18016, dtype="float64") /* ty=Tensor[(100, 14), float64] */;
  %388 = reshape(%385, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
  %389 = reshape(%386, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint16] */;
  %390 = reshape(%387, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %391 = @func_6464(%388, %389, %390) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %392 = %383.0;
  %393 = %384.0;
  %394 = %391.6;
  (%392, %393, %394, meta[relay.Constant][23] /* ty=Tensor[(300), float32] */, meta[relay.Constant][24] /* ty=Tensor[(40), uint16] */, %var_18016)
}

def @func_3727() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  %395 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %396 = %395.0;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %398 = reshape(%397, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
  %399 = @func_3522(%398) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
  %400 = %399.0;
  (%396, %400)
}

def @func_10683() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %401 = @func_6841() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %402 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %403 = %401.0;
  %404 = %402.0;
  (%403, %404)
}

def @func_8111() -> Tensor[(3, 10, 8), float32] {
  %405 = @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %405.0
}

def @func_7748() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %406 = @func_6516() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %407 = @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %408 = %406.0;
  %409 = %407.0;
  (%408, %409)
}

def @func_12057() -> (Tensor[(8, 7, 4), int64],) {
  %410 = @func_10343() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */;
  %411 = %410.1;
  (%411,)
}

def @func_11770() -> Tensor[(3, 10, 8), float32] {
  %412 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %412.0
}

def @func_15348() -> (Tensor[(40, 1440), bool],) {
  %413 = @func_15264() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40, 1), uint16], Tensor[(1, 135), uint16]) */;
  %414 = %413.4;
  %415 = @func_13375() /* ty=(Tensor[(1440), uint32],) */;
  %416 = %415.0;
  %417 = cast(%414, dtype="bool") /* ty=Tensor[(40, 1), bool] */;
  %418 = cast(%416, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %419 = logical_or(%417, %418) /* ty=Tensor[(40, 1440), bool] */;
  (%419,)
}

def @func_7168() -> (Tensor[(3, 10, 8), float32],) {
  %420 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %421 = %420.0;
  (%421,)
}

def @func_14658() -> (Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(1400, 1), float64]) {
  %422 = @func_12915() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(1400, 1), float64]) */;
  %423 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
  %424 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  %425 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  %426 = %422.1;
  (%423, %424, %425, %426)
}

def @func_8253() -> Tensor[(8, 12, 15), float32] {
  %427 = @func_4034() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %428 = %427.1;
  %429 = cast(%428, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  tan(%429) /* ty=Tensor[(8, 12, 15), float32] */
}

def @func_2253(%var_2224: int64, %var_2225: Tensor[(3, 15, 3), int64]) -> (Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) {
  %430 = cast(%var_2224, dtype="int64") /* ty=int64 */;
  %431 = cast(%var_2225, dtype="int64") /* ty=Tensor[(3, 15, 3), int64] */;
  %432 = minimum(%430, %431) /* ty=Tensor[(3, 15, 3), int64] */;
  %433 = cast(%432, dtype="float32") /* ty=Tensor[(3, 15, 3), float32] */;
  %434 = cast(%var_2225, dtype="uint16") /* ty=Tensor[(3, 15, 3), uint16] */;
  %435 = cast(meta[relay.Constant][25] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %436 = reshape(%434, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
  %437 = reshape(%435, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
  %438 = @func_489(%436, %437) /* ty=(Tensor[(9, 15, 15), uint16],) */;
  %439 = %438.0;
  %440 = cast(%439, dtype="float64") /* ty=Tensor[(9, 15, 15), float64] */;
  %441 = exp(%433) /* ty=Tensor[(3, 15, 3), float32] */;
  %442 = atan(%440) /* ty=Tensor[(9, 15, 15), float64] */;
  (meta[relay.Constant][25] /* ty=Tensor[(2025), uint16] */, %441, %442)
}

def @func_9269() -> Tensor[(3, 10, 8), float32] {
  %443 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %443.0
}

def @func_11918() -> (Tensor[(3, 10, 8), float32],) {
  %444 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %445 = %444.0;
  (%445,)
}

def @func_15591() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %446 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
  %447 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %448 = %446.1;
  %449 = %447.0;
  (%448, %449)
}

def @func_3440(%var_3393: Tensor[(6, 1), int8], %var_3403: Tensor[(135), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(3, 1, 2), uint8], Tensor[(140), bool], Tensor[(140), bool], Tensor[(6, 135), uint64]) {
  %450 = cast(%var_3393, dtype="int8") /* ty=Tensor[(6, 1), int8] */;
  %451 = reshape(%450, newshape=[3, 1, 2]) /* ty=Tensor[(3, 1, 2), int8] */;
  %452 = @func_2387(%451) /* ty=(Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) */;
  %453 = cast(%var_3403, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %454 = cast(meta[relay.Constant][26] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %455 = reshape(%453, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %456 = reshape(%454, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %457 = @func_3236(%455, %456) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */;
  %458 = cast(%var_3403, dtype="bool") /* ty=Tensor[(135), bool] */;
  %459 = cast(%var_3393, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %460 = logical_and(%458, %459) /* ty=Tensor[(6, 135), bool] */;
  %461 = cast(%var_3393, dtype="uint64") /* ty=Tensor[(6, 1), uint64] */;
  %462 = cast(%460, dtype="uint64") /* ty=Tensor[(6, 135), uint64] */;
  %463 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  %464 = %452.3;
  %465 = %457.4;
  %466 = bitwise_and(%461, %462) /* ty=Tensor[(6, 135), uint64] */;
  (%463, %464, %465, meta[relay.Constant][26] /* ty=Tensor[(140), bool] */, %466)
}

def @func_3910(%var_3904: Tensor[(40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) {
  %467 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %468 = cast(%var_3904, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %469 = reshape(%468, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint16] */;
  %470 = @func_3485(%469) /* ty=(Tensor[(5, 4, 2), uint16],) */;
  %471 = %467.0;
  %472 = %470.0;
  (%471, %472, %var_3904)
}

def @func_3755() -> (Tensor[(3, 10, 8), float32],) {
  %473 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %474 = %473.0;
  (%474,)
}

def @func_17140() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %475 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %476 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %477 = %475.1;
  %478 = %476.2;
  (%477, %478)
}

def @func_15952() -> Tensor[(3, 10, 8), float32] {
  %479 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %479.0
}

def @func_8203(%var_8188: Tensor[(8, 7, 4), float64], %var_8195: Tensor[(8, 7, 4), float64]) -> (Tensor[(8, 7, 4), int64],) {
  %480 = cast(%var_8188, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %481 = log(%480) /* ty=Tensor[(8, 7, 4), float64] */;
  %482 = cast(%var_8195, dtype="int64") /* ty=Tensor[(8, 7, 4), int64] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%481, dtype="int64") /* ty=Tensor[(8, 7, 4), int64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %486 = bitwise_or(%484, %485) /* ty=Tensor[(8, 7, 4), int64] */;
  (%486,)
}

def @func_17583() -> Tensor[(3, 10, 8), float32] {
  %487 = @func_7615() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32]) */;
  %487.2
}

def @func_489(%var_474: Tensor[(9, 1, 15), uint16], %var_475: Tensor[(9, 15, 15), uint16]) -> (Tensor[(9, 15, 15), uint16],) {
  %488 = cast(%var_474, dtype="uint16") /* ty=Tensor[(9, 1, 15), uint16] */;
  %489 = cast(%var_475, dtype="uint16") /* ty=Tensor[(9, 15, 15), uint16] */;
  %490 = multiply(%488, %489) /* ty=Tensor[(9, 15, 15), uint16] */;
  (%490,)
}

def @func_10716() -> (Tensor[(3, 10, 8), float32],) {
  %491 = @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %492 = %491.0;
  (%492,)
}

def @func_12416() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %493 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %494 = @func_10210() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %495 = %493.0;
  %496 = %494.0;
  (%495, %496)
}

def @func_15077() -> (Tensor[(3, 10, 8), float32],) {
  %497 = @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %498 = %497.0;
  (%498,)
}

def @func_14867() -> (Tensor[(13, 6, 3), bool],) {
  %499 = @func_13032() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %500 = %499.1;
  %501 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 6, 3), float32] */, dtype="bool") /* ty=Tensor[(13, 6, 3), bool] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="bool") /* ty=Tensor[(13, 6, 3), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %505 = greater(%503, %504) /* ty=Tensor[(13, 6, 3), bool] */;
  (%505,)
}

def @func_10364(%var_10355: Tensor[(1, 12, 10), float32]) -> Tensor[(1, 12, 10), float32] {
  %506 = cast(%var_10355, dtype="float32") /* ty=Tensor[(1, 12, 10), float32] */;
  sinh(%506) /* ty=Tensor[(1, 12, 10), float32] */
}

def @func_11320() -> (Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) {
  %507 = @func_8262() /* ty=Tensor[(1400, 1), float64] */;
  %508 = cast(%507, dtype="float32") /* ty=Tensor[(1400, 1), float32] */;
  %509 = cos(%508) /* ty=Tensor[(1400, 1), float32] */;
  %510 = cast(%507, dtype="int16") /* ty=Tensor[(1400, 1), int16] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(2), int32] */;
  %512 = cast(%509, dtype="int16") /* ty=Tensor[(1400, 1), int16] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %514 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %515 = bitwise_xor(%512, %513) /* ty=Tensor[(1400, ?), int16] */;
  %516 = %514.0;
  (%515, %516)
}

def @func_11834() -> Tensor[(3, 10, 8), float32] {
  %517 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %517.0
}

def @func_8169() -> Tensor[(3, 10, 8), float32] {
  %518 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %518.0
}

def @func_13998() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
  %519 = @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %520 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %521 = cast(meta[relay.Constant][28] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %522 = reshape(%521, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %523 = @func_8850(%522) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) */;
  %524 = %519.0;
  %525 = %520.0;
  %526 = %523.0;
  (%524, %525, %526, meta[relay.Constant][28] /* ty=Tensor[(1400), float64] */)
}

def @func_15146() -> (Tensor[(3, 10, 8), float32],) {
  %527 = @func_7434() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %528 = %527.0;
  (%528,)
}

def @func_17557() -> (Tensor[(3, 10, 8), float32],) {
  %529 = @func_9346() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) */;
  %530 = %529.0;
  (%530,)
}

def @func_13013() -> Tensor[(3, 10, 8), float32] {
  %531 = @func_12860() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %531.0
}

def @func_3522(%var_3504: Tensor[(3, 10, 8), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
  %532 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %533 = %532.0;
  %534 = cast(%var_3504, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%533, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %538 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %539 = minimum(%536, %537) /* ty=Tensor[(3, 10, 8), float64] */;
  %540 = %538.0;
  (%539, %540)
}

def @func_10443() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
  %541 = @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %542 = %541.0;
  %543 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  (%542, %543)
}

def @func_3485(%var_3472: Tensor[(5, 4, 2), uint16]) -> (Tensor[(5, 4, 2), uint16],) {
  %544 = cast(%var_3472, dtype="uint16") /* ty=Tensor[(5, 4, 2), uint16] */;
  %545 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(5, 4, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 4, 2), uint16] */, dtype="uint16") /* ty=Tensor[(5, 4, 2), uint16] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %548 = subtract(%546, %547) /* ty=Tensor[(5, 4, 2), uint16] */;
  (%548,)
}

def @func_13730(%var_13595: Tensor[(2025), uint16], %var_13671: Tensor[(2025), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(2025), int32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(2025), float64]) {
  %549 = cast(%var_13595, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %550 = reshape(%549, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %551 = @func_5192(%550) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), bool]) */;
  %552 = @func_13375() /* ty=(Tensor[(1440), uint32],) */;
  %553 = cast(%var_13595, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %554 = sigmoid(%553) /* ty=Tensor[(2025), float64] */;
  %555 = cast(%var_13671, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(1), int32] */;
  %557 = cast(%554, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?), int32] */;
  %559 = maximum(%557, %558) /* ty=Tensor[(2025), int32] */;
  %560 = cast(%554, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(1), int32] */;
  %562 = cast(%559, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?), int32] */;
  %564 = @func_9101() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %565 = cast(%var_13595, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %566 = @func_13339() /* ty=Tensor[(3, 10, 8), float32] */;
  %567 = %551.1;
  %568 = %552.0;
  %569 = minimum(%562, %563) /* ty=Tensor[(2025), int32] */;
  %570 = @func_13013() /* ty=Tensor[(3, 10, 8), float32] */;
  %571 = %564.1;
  %572 = acos(%565) /* ty=Tensor[(2025), float64] */;
  (%566, %567, %568, %569, %570, %571, %572)
}

def @func_15844() -> (Tensor[(1400, 14), uint32],) {
  %573 = @func_14658() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(1400, 1), float64]) */;
  %574 = %573.3;
  %575 = cast(%574, dtype="uint32") /* ty=Tensor[(1400, 1), uint32] */;
  %576 = cast(meta[relay.Constant][30] /* ty=Tensor[(1400, 14), float64] */, dtype="uint32") /* ty=Tensor[(1400, 14), uint32] */;
  %577 = left_shift(%575, %576) /* ty=Tensor[(1400, 14), uint32] */;
  (%577,)
}

def @func_18384() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %578 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %579 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %580 = @func_7384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %581 = %578.0;
  %582 = %579.0;
  %583 = %580.0;
  %584 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  (%581, %582, %583, %584)
}

def @func_9723(%var_9699: Tensor[(5, 10, 9), float32], %var_9713: Tensor[(5, 10, 9), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(5, 10, 9), int16]) {
  %585 = @func_7243() /* ty=(Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(3, 10, 8), float32], Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32]) */;
  %586 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
  %587 = %586.4;
  %588 = cast(%587, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %589 = reshape(%588, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
  %590 = @func_8937(%589) /* ty=(Tensor[(3, 10, 8), float64],) */;
  %591 = cast(%var_9699, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
  %592 = sigmoid(%591) /* ty=Tensor[(5, 10, 9), float32] */;
  %593 = cast(%var_9713, dtype="int16") /* ty=Tensor[(5, 10, 9), int16] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="int16") /* ty=Tensor[(5, 10, 9), int16] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %597 = %585.3;
  %598 = %590.0;
  %599 = multiply(%595, %596) /* ty=Tensor[(5, 10, 9), int16] */;
  (%597, %587, %598, %599)
}

def @func_18509(%var_18474: Tensor[(135), uint16], %var_18475: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(12, 6, 15), float32], Tensor[(12, 6, 15), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(13, 6, 3), bool]) {
  %600 = @func_18269() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %601 = cast(%var_18474, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %602 = cast(%var_18475, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %603 = reshape(%601, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
  %604 = reshape(%602, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
  %605 = @func_489(%603, %604) /* ty=(Tensor[(9, 15, 15), uint16],) */;
  %606 = @func_14867() /* ty=(Tensor[(13, 6, 3), bool],) */;
  %607 = %600.0;
  %608 = @func_12971() /* ty=Tensor[(12, 6, 15), float32] */;
  %609 = @func_12971() /* ty=Tensor[(12, 6, 15), float32] */;
  %610 = %605.0;
  %611 = %606.0;
  (%607, %608, %609, %610, %var_18474, %var_18475, %611)
}

def @func_15773() -> (Tensor[(5, 4, 2), uint16],) {
  %612 = @func_9804() /* ty=(Tensor[(5, 4, 2), uint16],) */;
  %613 = %612.0;
  (%613,)
}

def @func_9101() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %614 = @func_7748() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %615 = @func_7807() /* ty=Tensor[(3, 10, 8), float32] */;
  %616 = %614.1;
  (%615, %616)
}

def @func_13339() -> Tensor[(3, 10, 8), float32] {
  @func_10148() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_11562(%var_11541: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), uint16], Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float64]) {
  %617 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
  %618 = %617.1;
  %619 = cast(%var_11541, dtype="uint16") /* ty=Tensor[(8, 12, 15), uint16] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%618, dtype="uint16") /* ty=Tensor[(8, 12, 15), uint16] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %623 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %624 = cast(%var_11541, dtype="float64") /* ty=Tensor[(8, 12, 15), float64] */;
  %625 = bitwise_and(%621, %622) /* ty=Tensor[(8, 12, 15), uint16] */;
  %626 = %623.0;
  %627 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  %628 = cosh(%624) /* ty=Tensor[(8, 12, 15), float64] */;
  (%625, %626, %627, %628)
}

def @func_5765() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %629 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %630 = %629.0;
  %631 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  (%630, %631)
}

def @func_16682() -> (Tensor[(4, 7, 5), bool],) {
  %632 = @func_11963() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) */;
  %633 = %632.2;
  (%633,)
}

def @func_8850(%var_8844: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
  %634 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %635 = cast(%var_8844, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %636 = reshape(%635, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %637 = @func_6295(%636) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(1400), float64]) */;
  %638 = %634.1;
  %639 = %637.0;
  (%638, %639, %var_8844)
}

def @func_2387(%var_2333: Tensor[(3, 1, 2), int8]) -> (Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) {
  %640 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %641 = cast(%var_2333, dtype="int8") /* ty=Tensor[(3, 1, 2), int8] */;
  %642 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="int64") /* ty=int64 */;
  %643 = cast(meta[relay.Constant][32] /* ty=Tensor[(135), int64] */, dtype="int64") /* ty=Tensor[(135), int64] */;
  %644 = reshape(%642, newshape=[]) /* ty=int64 */;
  %645 = reshape(%643, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int64] */;
  %646 = @func_2253(%644, %645) /* ty=(Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) */;
  %647 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %648 = cast(%var_2333, dtype="uint8") /* ty=Tensor[(3, 1, 2), uint8] */;
  %649 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="int64") /* ty=int64 */;
  %650 = cast(meta[relay.Constant][32] /* ty=Tensor[(135), int64] */, dtype="int64") /* ty=Tensor[(135), int64] */;
  %651 = reshape(%649, newshape=[]) /* ty=int64 */;
  %652 = reshape(%650, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int64] */;
  %653 = @func_2253(%651, %652) /* ty=(Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) */;
  %654 = maximum(%640, %641) /* ty=Tensor[(3, 1, 2), int8] */;
  %655 = %646.2;
  %656 = bitwise_and(%647, %648) /* ty=Tensor[(3, 1, 2), uint8] */;
  %657 = %653.1;
  (%654, %655, meta[relay.Constant][32] /* ty=Tensor[(135), int64] */, %656, %657)
}

def @func_10053(%var_10040: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), int64],) {
  %658 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %659 = cast(%var_10040, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%658, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %663 = add(%661, %662) /* ty=Tensor[(8, 12, 15), uint32] */;
  %664 = cast(%658, dtype="int64") /* ty=Tensor[(8, 12, 15), int64] */;
  %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%663, dtype="int64") /* ty=Tensor[(8, 12, 15), int64] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %668 = minimum(%666, %667) /* ty=Tensor[(8, 12, 15), int64] */;
  (%668,)
}

def @func_4310(%var_4302: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) {
  %669 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %670 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %671 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %672 = cast(%var_4302, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %673 = reshape(%672, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
  %674 = %669.1;
  %675 = %670.0;
  %676 = %671.2;
  %677 = @func_3812(%673) /* ty=Tensor[(10, 10, 14), bool] */;
  (%674, %675, %676, %677, %var_4302)
}

def @func_9626(%var_9603: Tensor[(1440), uint32]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), float64]) {
  %678 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %679 = cast(%var_9603, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %680 = reshape(%679, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %681 = @func_608(%680) /* ty=(Tensor[(8, 12, 15), float32],) */;
  %682 = %678.1;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %684 = reshape(%683, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
  %685 = @func_3522(%684) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
  %686 = %681.0;
  %687 = %685.0;
  (%682, %686, %var_9603, %687)
}

def @func_5664() -> (Tensor[(3, 10, 8), float32],) {
  %688 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %689 = %688.0;
  (%689,)
}

def @func_15715() -> Tensor[(3, 10, 8), float32] {
  %690 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %690.0
}

def @func_7615() -> (Tensor[(135), uint16], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32]) {
  %691 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
  %692 = @func_5765() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %693 = @func_4763() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %694 = %691.6;
  %695 = %692.1;
  %696 = %693.0;
  (%694, %695, %696)
}

def @func_11986(%var_11981: Tensor[(3, 5, 8), float64]) -> Tensor[(3, 5, 8), float64] {
  %697 = cast(%var_11981, dtype="float64") /* ty=Tensor[(3, 5, 8), float64] */;
  log10(%697) /* ty=Tensor[(3, 5, 8), float64] */
}

def @func_8617(%var_8565: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) {
  %698 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
  %699 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %700 = cast(meta[relay.Constant][33] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %701 = reshape(%700, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %702 = @func_4604(%701) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(1, 40), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %703 = %702.4;
  %704 = cast(%var_8565, dtype="float32") /* ty=Tensor[(1400), float32] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(1), int32] */;
  %706 = cast(%703, dtype="float32") /* ty=Tensor[(1400), float32] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?), float32] */;
  %708 = subtract(%706, %707) /* ty=Tensor[(1400), float32] */;
  %709 = cast(%708, dtype="int64") /* ty=Tensor[(1400), int64] */;
  %710 = shape_of(%var_8565, dtype="int32") /* ty=Tensor[(1), int32] */;
  %711 = cast(%var_8565, dtype="int64") /* ty=Tensor[(1400), int64] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?), int64] */;
  %713 = cast(%708, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %714 = reshape(%713, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
  %715 = cast(%708, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %716 = %698.1;
  %717 = %699.0;
  %718 = minimum(%711, %712) /* ty=Tensor[(1400), int64] */;
  %719 = @func_3812(%714) /* ty=Tensor[(10, 10, 14), bool] */;
  %720 = asinh(%715) /* ty=Tensor[(1400), float64] */;
  (%716, meta[relay.Constant][33] /* ty=Tensor[(135), uint16] */, %717, %718, %719, %720)
}

def @func_15935(%var_15902: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(6, 6, 7), float32], float32, Tensor[(42, 6), float32], Tensor[(8, 12, 15), float32], Tensor[(40, 1440), bool]) {
  %721 = @func_14867() /* ty=(Tensor[(13, 6, 3), bool],) */;
  %722 = @func_15791() /* ty=(Tensor[(135), uint16],) */;
  %723 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %724 = cast(%var_15902, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %725 = reshape(%724, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
  %726 = cast(5.24221f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %727 = cast(meta[relay.Constant][34] /* ty=Tensor[(42, 6), float32] */, dtype="float32") /* ty=Tensor[(42, 6), float32] */;
  %728 = reshape(%726, newshape=[]) /* ty=float32 */;
  %729 = reshape(%727, newshape=[6, 6, 7]) /* ty=Tensor[(6, 6, 7), float32] */;
  %730 = @func_15348() /* ty=(Tensor[(40, 1440), bool],) */;
  %731 = @func_8111() /* ty=Tensor[(3, 10, 8), float32] */;
  %732 = %721.0;
  %733 = %722.0;
  %734 = %723.0;
  %735 = @func_3812(%725) /* ty=Tensor[(10, 10, 14), bool] */;
  %736 = @func_9155(%728, %729) /* ty=Tensor[(6, 6, 7), float32] */;
  %737 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %738 = %730.0;
  (%731, %732, %733, %734, %735, %var_15902, %736, 5.24221f /* ty=float32 */, meta[relay.Constant][34] /* ty=Tensor[(42, 6), float32] */, %737, %738)
}

def @func_8937(%var_8932: Tensor[(3, 10, 8), float64]) -> (Tensor[(3, 10, 8), float64],) {
  %739 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
  %740 = cast(%var_8932, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %741 = shape_of(%739, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%739, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %744 = mod(%742, %743) /* ty=Tensor[(3, 10, 8), float64] */;
  (%744,)
}

def @func_5192(%var_5165: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), bool]) {
  %745 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %746 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %747 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %748 = cast(meta[relay.Constant][35] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %749 = cast(meta[relay.Constant][36] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %750 = reshape(%748, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %751 = reshape(%749, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %752 = @func_3236(%750, %751) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */;
  %753 = %752.2;
  %754 = cast(%var_5165, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(1), int32] */;
  %756 = cast(%753, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?), int32] */;
  %758 = multiply(%756, %757) /* ty=Tensor[(2025), int32] */;
  %759 = cast(%758, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %760 = shape_of(%753, dtype="int32") /* ty=Tensor[(1), int32] */;
  %761 = cast(%753, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?), bool] */;
  %763 = %745.0;
  %764 = %746.1;
  %765 = %747.0;
  %766 = equal(%761, %762) /* ty=Tensor[(2025), bool] */;
  (%763, %764, meta[relay.Constant][35] /* ty=Tensor[(135), uint16] */, meta[relay.Constant][36] /* ty=Tensor[(140), bool] */, %765, %766)
}

def @func_7303() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) {
  %767 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %768 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %769 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %770 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 1), int8] */, dtype="int8") /* ty=Tensor[(6, 1), int8] */;
  %771 = cast(meta[relay.Constant][38] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %772 = reshape(%770, newshape=[6]) /* ty=Tensor[(6), int8] */;
  %773 = reshape(%771, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %774 = @func_5488(%772, %773) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), float64], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 10, 8), float64]) */;
  %775 = %767.0;
  %776 = %768.1;
  %777 = %769.1;
  %778 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %779 = %774.0;
  (%775, %776, %777, %778, %779, meta[relay.Constant][37] /* ty=Tensor[(6, 1), int8] */, meta[relay.Constant][38] /* ty=Tensor[(135), uint16] */)
}

def @func_9495() -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) {
  %780 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %781 = cast(meta[relay.Constant][39] /* ty=Tensor[(40), uint16] */, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %782 = reshape(%781, newshape=[1, 40]) /* ty=Tensor[(1, 40), uint16] */;
  %783 = @func_7944(%782) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(14, 40), float64]) */;
  %784 = %780.2;
  %785 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  %786 = %783.1;
  (%784, %785, %786, meta[relay.Constant][39] /* ty=Tensor[(40), uint16] */)
}

def @func_7070() -> Tensor[(3, 10, 8), float64] {
  %787 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %787.1
}

def @func_6745(%var_6706: Tensor[(3, 10, 8), float32], %var_6715: Tensor[(8, 12, 15), float32]) -> (Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), uint16], Tensor[(8, 12, 15), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) {
  %788 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %789 = %788.0;
  %790 = cast(%var_6706, dtype="uint16") /* ty=Tensor[(3, 10, 8), uint16] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="uint16") /* ty=Tensor[(3, 10, 8), uint16] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %794 = cast(meta[relay.Constant][40] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %795 = cast(meta[relay.Constant][41] /* ty=Tensor[(6), int8] */, dtype="int8") /* ty=Tensor[(6), int8] */;
  %796 = reshape(%794, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %797 = reshape(%795, newshape=[6]) /* ty=Tensor[(6), int8] */;
  %798 = @func_6024(%796, %797) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 1, 2), uint8], Tensor[(6), int8], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(3, 10, 8), float32], Tensor[(2025), float32], Tensor[(3, 10, 8), float32]) */;
  %799 = %798.7;
  %800 = cast(%var_6715, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%799, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %804 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
  %805 = bitwise_xor(%792, %793) /* ty=Tensor[(3, 10, 8), uint16] */;
  %806 = less(%802, %803) /* ty=Tensor[(8, 12, 15), bool] */;
  %807 = %804.0;
  %808 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  (meta[relay.Constant][40] /* ty=Tensor[(135), uint16] */, meta[relay.Constant][41] /* ty=Tensor[(6), int8] */, %805, %806, %807, %808)
}

def @func_6563() -> Tensor[(3, 10, 8), float32] {
  %809 = @func_6516() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %809.0
}

def @func_13472(%var_13467: Tensor[(1400, 14), int16]) -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 14), int64]) {
  %810 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %811 = @func_11320() /* ty=(Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) */;
  %812 = %811.0;
  %813 = cast(%812, dtype="int64") /* ty=Tensor[(1400, ?), int64] */;
  %814 = cast(%var_13467, dtype="int64") /* ty=Tensor[(1400, 14), int64] */;
  %815 = %810.0;
  %816 = multiply(%813, %814) /* ty=Tensor[(1400, 14), int64] */;
  (%815, %816)
}

def @func_14556() -> (Tensor[(1400, 1), float64], Tensor[(3, 10, 8), float32]) {
  %817 = @func_13241() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float32], Tensor[(1400, ?), int32]) */;
  %818 = @func_8262() /* ty=Tensor[(1400, 1), float64] */;
  %819 = %817.0;
  (%818, %819)
}

def @func_16037() -> Tensor[(3, 10, 8), float32] {
  %820 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %820.1
}

def @func_13964() -> (Tensor[(3, 10, 8), float32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(10, 4, 1), float64], Tensor[(40), float64]) {
  %821 = @func_10134() /* ty=(Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
  %822 = cast(meta[relay.Constant][42] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %823 = reshape(%822, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
  %824 = cast(meta[relay.Constant][43] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %825 = reshape(%824, newshape=[10, 4, 1]) /* ty=Tensor[(10, 4, 1), float64] */;
  %826 = %821.1;
  %827 = @func_3812(%823) /* ty=Tensor[(10, 10, 14), bool] */;
  %828 = @func_13752(%825) /* ty=Tensor[(10, 4, 1), float64] */;
  (%826, %827, meta[relay.Constant][42] /* ty=Tensor[(1400), float64] */, %828, meta[relay.Constant][43] /* ty=Tensor[(40), float64] */)
}

def @func_3704() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %829 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %830 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %831 = %830.0;
  %832 = cast(%831, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %833 = %829.0;
  %834 = log10(%832) /* ty=Tensor[(3, 10, 8), float32] */;
  %835 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  (%833, %834, %835)
}

def @func_12272() -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) {
  %836 = @func_10343() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */;
  %837 = %836.0;
  %838 = @func_6527() /* ty=Tensor[(3, 10, 8), uint16] */;
  (%837, %838)
}

def @func_13363(%var_13352: Tensor[(6), int8], %var_13361: Tensor[(1440, 2), float32]) -> (Tensor[(8, 12, 15), float32], Tensor[(3, 15, 3), float32], Tensor[(6), int8], Tensor[(12, 15, 16), float32], Tensor[(1440, 2), float32]) {
  %839 = cast(%var_13352, dtype="int8") /* ty=Tensor[(6), int8] */;
  %840 = reshape(%839, newshape=[3, 1, 2]) /* ty=Tensor[(3, 1, 2), int8] */;
  %841 = @func_2387(%840) /* ty=(Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) */;
  %842 = cast(%var_13361, dtype="float32") /* ty=Tensor[(1440, 2), float32] */;
  %843 = reshape(%842, newshape=[12, 15, 16]) /* ty=Tensor[(12, 15, 16), float32] */;
  %844 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %845 = %841.4;
  %846 = @func_12292(%843) /* ty=Tensor[(12, 15, 16), float32] */;
  (%844, %845, %var_13352, %846, %var_13361)
}

def @func_9122() -> (Tensor[(3, 10, 8), float32],) {
  %847 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  (%847,)
}

def @func_11475() -> (Tensor[(3, 10, 8), float32],) {
  %848 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %849 = %848.0;
  (%849,)
}

def @func_6464(%var_6439: Tensor[(15, 10, 2), float32], %var_6449: Tensor[(2, 20), uint16], %var_6451: Tensor[(1400), float64]) -> (Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) {
  %850 = cast(%var_6439, dtype="float32") /* ty=Tensor[(15, 10, 2), float32] */;
  %851 = cast(meta[relay.Constant][44] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %852 = reshape(%851, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %853 = @func_608(%852) /* ty=(Tensor[(8, 12, 15), float32],) */;
  %854 = cast(%var_6449, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %855 = cast(meta[relay.Constant][45] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %856 = cast(%var_6451, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %857 = reshape(%854, newshape=[40]) /* ty=Tensor[(40), uint16] */;
  %858 = reshape(%855, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %859 = reshape(%856, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %860 = @func_4564(%857, %858, %859) /* ty=(Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %861 = cosh(%850) /* ty=Tensor[(15, 10, 2), float32] */;
  %862 = %853.0;
  %863 = %860.0;
  (%861, %862, meta[relay.Constant][44] /* ty=Tensor[(1440), uint32] */, %863, %var_6449, meta[relay.Constant][45] /* ty=Tensor[(135), uint16] */, %var_6451)
}

def @func_3041() -> Tensor[(3, 10, 8), float32] {
  %864 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %864.1
}

def @func_4937() -> (Tensor[(3, 10, 8), float32],) {
  %865 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %866 = %865.0;
  (%866,)
}

def @func_6841() -> (Tensor[(3, 10, 8), float32],) {
  %867 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %868 = %867.0;
  (%868,)
}

def @func_18110() -> Tensor[(13, 6, 3), float32] {
  @func_4048() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_15519() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(12, 6, 15), float32], Tensor[(13, 6, 3), float32]) {
  %869 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %870 = %869.1;
  %871 = @func_8169() /* ty=Tensor[(3, 10, 8), float32] */;
  %872 = @func_12971() /* ty=Tensor[(12, 6, 15), float32] */;
  %873 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  (%870, %871, %872, %873)
}

def @func_17087(%var_17074: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(8, 12, 15), bool], Tensor[(1, 12, 10), float32], Tensor[(120), float32]) {
  %874 = @func_12416() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %875 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 45), uint16] */, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
  %876 = reshape(%875, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %877 = @func_9456(%876) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32]) */;
  %878 = @func_15002() /* ty=(Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) */;
  %879 = %878.0;
  %880 = cast(%var_17074, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %881 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(%879, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %884 = cast(meta[relay.Constant][47] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %885 = reshape(%884, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float32] */;
  %886 = %874.0;
  %887 = %877.0;
  %888 = not_equal(%882, %883) /* ty=Tensor[(8, 12, 15), bool] */;
  %889 = @func_10364(%885) /* ty=Tensor[(1, 12, 10), float32] */;
  (%886, %887, meta[relay.Constant][46] /* ty=Tensor[(3, 45), uint16] */, %888, %889, meta[relay.Constant][47] /* ty=Tensor[(120), float32] */)
}

def @func_13241() -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float32], Tensor[(1400, ?), int32]) {
  %890 = @func_8666() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */;
  %891 = @func_8262() /* ty=Tensor[(1400, 1), float64] */;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(1400, 1), float32] */;
  %893 = cast(%891, dtype="float32") /* ty=Tensor[(1400, 1), float32] */;
  %894 = acosh(%893) /* ty=Tensor[(1400, 1), float32] */;
  %895 = cast(%894, dtype="int32") /* ty=Tensor[(1400, 1), int32] */;
  %896 = shape_of(%891, dtype="int32") /* ty=Tensor[(2), int32] */;
  %897 = cast(%891, dtype="int32") /* ty=Tensor[(1400, 1), int32] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %899 = %890.1;
  %900 = erf(%892) /* ty=Tensor[(1400, 1), float32] */;
  %901 = bitwise_and(%897, %898) /* ty=Tensor[(1400, ?), int32] */;
  (%899, %900, %901)
}

def @func_3126() -> Tensor[(13, 6, 3), float32] {
  %902 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 6, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 6, 3), float32] */;
  log10(%902) /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_18631() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %903 = @func_13294() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %904 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %905 = %903.1;
  %906 = %904.0;
  (%905, %906)
}

def @func_6572(%var_6568: Tensor[(5, 2, 8), float64]) -> Tensor[(5, 2, 8), float64] {
  %907 = cast(%var_6568, dtype="float64") /* ty=Tensor[(5, 2, 8), float64] */;
  sinh(%907) /* ty=Tensor[(5, 2, 8), float64] */
}

def @func_8057() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %908 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
  %909 = @func_5868() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %910 = %908.4;
  %911 = %909.0;
  (%910, %911)
}

def @func_11036() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %912 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %913 = @func_7384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %914 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
  %915 = %912.0;
  %916 = %913.2;
  %917 = %914.1;
  (%915, %916, %917)
}

def @func_12521() -> (Tensor[(3, 10, 8), float32],) {
  %918 = @func_10443() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
  %919 = %918.0;
  (%919,)
}

def @func_17039() -> (Tensor[(3, 10, 8), uint16], Tensor[(4, 7, 5), bool]) {
  %920 = @func_14347() /* ty=(Tensor[(3, 10, 8), uint16],) */;
  %921 = @func_16682() /* ty=(Tensor[(4, 7, 5), bool],) */;
  %922 = %920.0;
  %923 = %921.0;
  (%922, %923)
}

def @func_4359() -> (Tensor[(3, 10, 8), float32],) {
  %924 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %925 = %924.0;
  (%925,)
}

def @func_2857() -> (Tensor[(3, 10, 8), float32],) {
  %926 = cast(meta[relay.Constant][49] /* ty=Tensor[(3, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %927 = cos(%926) /* ty=Tensor[(3, 10, 8), float32] */;
  (%927,)
}

def @func_15389(%var_15368: Tensor[(1, 12, 1), float64]) -> (Tensor[(1, 12, 1), float64], Tensor[(1440), uint32]) {
  %928 = cast(%var_15368, dtype="float64") /* ty=Tensor[(1, 12, 1), float64] */;
  %929 = sin(%928) /* ty=Tensor[(1, 12, 1), float64] */;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(1, 12, 1), float64] */;
  %931 = @func_12272() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) */;
  %932 = tan(%930) /* ty=Tensor[(1, 12, 1), float64] */;
  %933 = %931.0;
  (%932, %933)
}

def @func_7972(%var_7955: Tensor[(135), uint16]) -> (Tensor[(1440), uint32], Tensor[(3, 15, 3), float32], Tensor[(135), uint16], Tensor[(2025), uint16]) {
  %934 = @func_4034() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %935 = cast(%var_7955, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %936 = cast(meta[relay.Constant][50] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %937 = reshape(%935, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %938 = reshape(%936, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %939 = @func_2879(%937, %938) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %940 = %934.2;
  %941 = %939.4;
  (%940, %941, %var_7955, meta[relay.Constant][50] /* ty=Tensor[(2025), uint16] */)
}

def @func_8715(%var_8710: Tensor[(13, 6, 3), float32]) -> (Tensor[(3, 10, 8), uint16], Tensor[(13, 6, 3), bool]) {
  %942 = @func_7275() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(3, 10, 8), uint16]) */;
  %943 = @func_4048() /* ty=Tensor[(13, 6, 3), float32] */;
  %944 = cast(%var_8710, dtype="bool") /* ty=Tensor[(13, 6, 3), bool] */;
  %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %946 = cast(%943, dtype="bool") /* ty=Tensor[(13, 6, 3), bool] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %948 = %942.2;
  %949 = logical_or(%946, %947) /* ty=Tensor[(13, 6, 3), bool] */;
  (%948, %949)
}

def @func_8902() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  %950 = @func_6974() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %951 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  %952 = @func_8236() /* ty=Tensor[(3, 10, 8), float32] */;
  %953 = %950.0;
  (%951, %952, %953)
}

def @func_12513() -> (Tensor[(3, 10, 8), float32],) {
  %954 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  (%954,)
}

def @func_9016(%var_9004: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(8, 7, 4), int64], Tensor[(224), float64]) {
  %955 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %956 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  %957 = cast(%var_9004, dtype="float64") /* ty=Tensor[(8, 12, 15), float64] */;
  %958 = shape_of(%956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%956, dtype="float64") /* ty=Tensor[(8, 12, 15), float64] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %961 = cast(meta[relay.Constant][51] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %962 = cast(meta[relay.Constant][51] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %963 = reshape(%961, newshape=[8, 7, 4]) /* ty=Tensor[(8, 7, 4), float64] */;
  %964 = reshape(%962, newshape=[8, 7, 4]) /* ty=Tensor[(8, 7, 4), float64] */;
  %965 = @func_8203(%963, %964) /* ty=(Tensor[(8, 7, 4), int64],) */;
  %966 = %955.1;
  %967 = power(%959, %960) /* ty=Tensor[(8, 12, 15), float64] */;
  %968 = %965.0;
  (%966, %967, %968, meta[relay.Constant][51] /* ty=Tensor[(224), float64] */)
}

def @func_9683() -> Tensor[(13, 6, 3), float32] {
  @func_3126() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_7384() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %969 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %970 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %971 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %972 = %969.0;
  %973 = %970.0;
  %974 = %971.0;
  (%972, %973, %974)
}

def @func_16182(%var_16179: Tensor[(135), uint16], %var_16180: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
  %975 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
  %976 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %977 = cast(%var_16179, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %978 = cast(%var_16180, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %979 = reshape(%977, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %980 = reshape(%978, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %981 = @func_4197(%979, %980) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
  %982 = %975.0;
  %983 = %976.0;
  %984 = %981.3;
  (%982, %983, %984, %var_16179, %var_16180)
}

def @func_6241() -> (Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) {
  %985 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %986 = %985.2;
  %987 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %988 = %987.0;
  %989 = cast(%988, dtype="uint16") /* ty=Tensor[(3, 10, 8), uint16] */;
  %990 = shape_of(%986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(%986, dtype="uint16") /* ty=Tensor[(3, 10, 8), uint16] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %993 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %994 = %993.0;
  %995 = cast(%994, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %996 = left_shift(%991, %992) /* ty=Tensor[(3, 10, 8), uint16] */;
  %997 = log2(%995) /* ty=Tensor[(3, 10, 8), float32] */;
  (%996, %997)
}

def @func_6974() -> (Tensor[(3, 10, 8), float64],) {
  %998 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
  (%998,)
}

def @func_10595() -> (Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %999 = @func_6954() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(2, 6, 16), float32], Tensor[(192), float32]) */;
  %1000 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %1001 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1002 = %999.1;
  %1003 = %1000.0;
  %1004 = %1001.1;
  (%1002, %1003, %1004)
}

def @func_10961() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) {
  %1005 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1006 = @func_7384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1007 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %1008 = %1007.1;
  %1009 = cast(%1008, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %1010 = rsqrt(%1009) /* ty=Tensor[(8, 12, 15), float32] */;
  %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %1012 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1013 = %1005.0;
  %1014 = %1006.0;
  %1015 = sinh(%1011) /* ty=Tensor[(8, 12, 15), float32] */;
  %1016 = %1012.0;
  (%1013, %1014, %1015, %1016)
}

def @func_12915() -> (Tensor[(3, 10, 8), uint16], Tensor[(1400, 1), float64]) {
  %1017 = @func_6527() /* ty=Tensor[(3, 10, 8), uint16] */;
  %1018 = @func_8262() /* ty=Tensor[(1400, 1), float64] */;
  (%1017, %1018)
}

def @func_9221() -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
  %1019 = cast(meta[relay.Constant][52] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1020 = cast(meta[relay.Constant][53] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1021 = reshape(%1019, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1022 = reshape(%1020, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1023 = @func_4197(%1021, %1022) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
  %1024 = @func_5609() /* ty=Tensor[(3, 10, 8), float32] */;
  %1025 = %1023.2;
  (%1024, %1025, meta[relay.Constant][52] /* ty=Tensor[(135), uint16] */, meta[relay.Constant][53] /* ty=Tensor[(2025), uint16] */)
}

def @func_8236() -> Tensor[(3, 10, 8), float32] {
  %1026 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1026.1
}

def @func_7807() -> Tensor[(3, 10, 8), float32] {
  %1027 = @func_6516() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1027.0
}

def @func_18269() -> (Tensor[(3, 10, 8), float32],) {
  %1028 = @func_8236() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1028,)
}

def @func_9049() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1029 = @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1030 = %1029.0;
  %1031 = @func_8169() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1030, %1031)
}

def @func_15965() -> Tensor[(3, 10, 8), float32] {
  %1032 = @func_5868() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1032.0
}

def @func_10648() -> (Tensor[(300), float32], Tensor[(3, 10, 8), float32]) {
  %1033 = @func_10134() /* ty=(Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
  %1034 = @func_8338() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1035 = %1033.0;
  %1036 = %1034.0;
  (%1035, %1036)
}

def @func_17911() -> Tensor[(3, 10, 8), float32] {
  %1037 = @func_13855() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1037.0
}

def @func_15791() -> (Tensor[(135), uint16],) {
  %1038 = @func_8666() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */;
  %1039 = %1038.2;
  (%1039,)
}

def @func_2879(%var_2865: Tensor[(135), uint16], %var_2866: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) {
  %1040 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1041 = cast(%var_2865, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1042 = cast(%var_2866, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1043 = reshape(%1041, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
  %1044 = reshape(%1042, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
  %1045 = @func_489(%1043, %1044) /* ty=(Tensor[(9, 15, 15), uint16],) */;
  %1046 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1047 = cast(%var_2865, dtype="int64") /* ty=Tensor[(135), int64] */;
  %1048 = reshape(%1046, newshape=[]) /* ty=int64 */;
  %1049 = reshape(%1047, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int64] */;
  %1050 = @func_2253(%1048, %1049) /* ty=(Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) */;
  %1051 = %1040.0;
  %1052 = %1045.0;
  %1053 = %1050.1;
  (%1051, %1052, %var_2865, %var_2866, %1053, 5 /* ty=int64 */)
}

def @func_9155(%var_9131: float32, %var_9132: Tensor[(6, 6, 7), float32]) -> Tensor[(6, 6, 7), float32] {
  %1054 = cast(%var_9131, dtype="float32") /* ty=float32 */;
  %1055 = cast(%var_9132, dtype="float32") /* ty=Tensor[(6, 6, 7), float32] */;
  maximum(%1054, %1055) /* ty=Tensor[(6, 6, 7), float32] */
}

def @func_10762() -> (Tensor[(3, 10, 8), float32],) {
  %1056 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1057 = %1056.0;
  (%1057,)
}

def @func_16101() -> Tensor[(10, 10, 9), float32] {
  %1058 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(10, 10, 9), float32] */;
  log2(%1058) /* ty=Tensor[(10, 10, 9), float32] */
}

def @func_11742() -> (Tensor[(3, 10, 8), float32], Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1059 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1060 = @func_10134() /* ty=(Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
  %1061 = @func_8422() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1062 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1063 = %1059.1;
  %1064 = %1060.0;
  %1065 = %1061.0;
  %1066 = %1062.0;
  (%1063, %1064, %1065, %1066)
}

def @func_9245() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1067 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1068 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_4825() -> (Tensor[(3, 10, 8), float32],) {
  %1070 = @func_4640() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1071 = %1070.0;
  (%1071,)
}

def @func_18612() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1072 = @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1073 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1074 = %1072.0;
  %1075 = %1073.0;
  (%1074, %1075)
}

def @func_17373(%var_17328: Tensor[(16, 15, 7), uint64]) -> (Tensor[(16, 15, 7), bool],) {
  %1076 = cast(meta[relay.Constant][55] /* ty=Tensor[(16, 15, 7), uint64] */, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
  %1077 = shape_of(%var_17328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1078 = cast(%var_17328, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
  %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1080 = greater_equal(%1078, %1079) /* ty=Tensor[(16, 15, 7), bool] */;
  (%1080,)
}

def @func_16336(%var_16284: Tensor[(20, 70), float64], %var_16293: Tensor[(1440), uint32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32], Tensor[(20, 70), float64], Tensor[(8, 12, 15), float32]) {
  %1081 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1082 = @func_13855() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1083 = @func_11846() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1084 = cast(%var_16284, dtype="float64") /* ty=Tensor[(20, 70), float64] */;
  %1085 = reshape(%1084, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %1086 = @func_4310(%1085) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */;
  %1087 = cast(%var_16293, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %1088 = reshape(%1087, newshape=[1440]) /* ty=Tensor[(1440), uint32] */;
  %1089 = @func_9626(%1088) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), float64]) */;
  %1090 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1091 = cast(%var_16284, dtype="float64") /* ty=Tensor[(20, 70), float64] */;
  %1092 = cast(%var_16284, dtype="float64") /* ty=Tensor[(20, 70), float64] */;
  %1093 = reshape(%1092, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %1094 = @func_15935(%1093) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(6, 6, 7), float32], float32, Tensor[(42, 6), float32], Tensor[(8, 12, 15), float32], Tensor[(40, 1440), bool]) */;
  %1095 = %1081.0;
  %1096 = %1082.0;
  %1097 = %1083.0;
  %1098 = %1086.0;
  %1099 = %1089.0;
  %1100 = @func_6527() /* ty=Tensor[(3, 10, 8), uint16] */;
  %1101 = %1090.0;
  %1102 = log2(%1091) /* ty=Tensor[(20, 70), float64] */;
  %1103 = %1094.9;
  (%1095, %1096, %1097, %1098, %1099, %var_16293, %1100, %1101, %1102, %1103)
}

def @func_16797(%var_16766: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
  %1104 = @func_9101() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1105 = cast(%var_16766, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %1106 = reshape(%1105, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %1107 = @func_15935(%1106) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(6, 6, 7), float32], float32, Tensor[(42, 6), float32], Tensor[(8, 12, 15), float32], Tensor[(40, 1440), bool]) */;
  %1108 = @func_8111() /* ty=Tensor[(3, 10, 8), float32] */;
  %1109 = @func_5609() /* ty=Tensor[(3, 10, 8), float32] */;
  %1110 = %1104.1;
  %1111 = %1107.0;
  (%1108, %1109, %1110, %1111, %var_16766)
}

def @func_15181() -> (Tensor[(10, 13, 12), float64],) {
  %1112 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 12), float64] */;
  %1113 = cosh(%1112) /* ty=Tensor[(10, 13, 12), float64] */;
  (%1113,)
}

def @func_4604(%var_4597: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(1, 40), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) {
  %1114 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1115 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 40), uint16] */, dtype="uint16") /* ty=Tensor[(1, 40), uint16] */;
  %1116 = cast(%var_4597, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1117 = cast(meta[relay.Constant][58] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %1118 = reshape(%1115, newshape=[40]) /* ty=Tensor[(40), uint16] */;
  %1119 = reshape(%1116, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1120 = reshape(%1117, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %1121 = @func_4564(%1118, %1119, %1120) /* ty=(Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %1122 = %1114.0;
  %1123 = %1121.7;
  (%1122, %1123, meta[relay.Constant][57] /* ty=Tensor[(1, 40), uint16] */, %var_4597, meta[relay.Constant][58] /* ty=Tensor[(1400), float64] */)
}

def @func_12124(%var_12098: Tensor[(4, 6, 12), bool], %var_12099: Tensor[(4, 6, 12), bool]) -> (Tensor[(4, 6, 12), bool],) {
  %1124 = cast(%var_12099, dtype="bool") /* ty=Tensor[(4, 6, 12), bool] */;
  %1125 = shape_of(%var_12098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%var_12098, dtype="bool") /* ty=Tensor[(4, 6, 12), bool] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1128 = logical_or(%1126, %1127) /* ty=Tensor[(4, 6, 12), bool] */;
  (%1128,)
}

def @func_4034() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) {
  %1129 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1130 = cast(meta[relay.Constant][59] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %1131 = reshape(%1130, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %1132 = @func_608(%1131) /* ty=(Tensor[(8, 12, 15), float32],) */;
  %1133 = %1129.0;
  %1134 = %1132.0;
  (%1133, %1134, meta[relay.Constant][59] /* ty=Tensor[(1440), uint32] */)
}

def @func_11396() -> (Tensor[(3, 10, 8), float32],) {
  %1135 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1136 = %1135.0;
  (%1136,)
}

def @func_13375() -> (Tensor[(1440), uint32],) {
  %1137 = @func_12272() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) */;
  %1138 = %1137.0;
  (%1138,)
}

def @func_12248(%var_12230: Tensor[(13, 6, 3), float64]) -> Tensor[(13, 6, 3), uint16] {
  %1139 = @func_10595() /* ty=(Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1140 = %1139.0;
  %1141 = cast(%var_12230, dtype="uint16") /* ty=Tensor[(13, 6, 3), uint16] */;
  %1142 = shape_of(%1140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1143 = cast(%1140, dtype="uint16") /* ty=Tensor[(13, 6, 3), uint16] */;
  %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%1143, %1144) /* ty=Tensor[(13, 6, 3), uint16] */
}

def @func_11385(%var_11376: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
  %1145 = @func_4763() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1146 = @func_7434() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1147 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1148 = @func_10961() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) */;
  %1149 = %1148.2;
  %1150 = cast(%var_11376, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %1151 = shape_of(%1149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1152 = cast(%1149, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1154 = %1145.2;
  %1155 = %1146.0;
  %1156 = %1147.0;
  %1157 = divide(%1152, %1153) /* ty=Tensor[(8, 12, 15), float32] */;
  (%1154, %1155, %1156, %1157)
}

def @func_16081(%var_16056: Tensor[(15, 11, 14), float64], %var_16057: Tensor[(15, 11, 14), float64]) -> (Tensor[(15, 11, 14), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %1158 = cast(%var_16057, dtype="float64") /* ty=Tensor[(15, 11, 14), float64] */;
  %1159 = shape_of(%var_16056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1160 = cast(%var_16056, dtype="float64") /* ty=Tensor[(15, 11, 14), float64] */;
  %1161 = dyn.reshape(%1158, %1159, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1162 = @func_8666() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */;
  %1163 = @func_8817() /* ty=(Tensor[(13, 6, 3), float32],) */;
  %1164 = divide(%1160, %1161) /* ty=Tensor[(15, 11, 14), float64] */;
  %1165 = %1162.0;
  %1166 = %1163.0;
  (%1164, %1165, %1166)
}

def @func_8473() -> (Tensor[(3, 10, 8), float32],) {
  %1167 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
  %1168 = %1167.1;
  (%1168,)
}

def @func_18339() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
  %1169 = @func_17557() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1170 = %1169.0;
  %1171 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
  %1172 = @func_9269() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1170, %1171, %1172)
}

def @func_16861() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), int64], Tensor[(1440), float32]) {
  %1173 = @func_6841() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1174 = cast(meta[relay.Constant][60] /* ty=Tensor[(1440), float32] */, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %1175 = reshape(%1174, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
  %1176 = @func_10053(%1175) /* ty=(Tensor[(8, 12, 15), int64],) */;
  %1177 = %1173.0;
  %1178 = %1176.0;
  (%1177, %1178, meta[relay.Constant][60] /* ty=Tensor[(1440), float32] */)
}

def @func_11846() -> (Tensor[(3, 10, 8), float32],) {
  %1179 = @func_5609() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1179,)
}

def @func_10134() -> (Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
  %1180 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %1181 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1182 = %1181.0;
  %1183 = cast(%1182, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %1184 = reshape(%1183, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
  %1185 = @func_3522(%1184) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
  %1186 = %1180.2;
  %1187 = %1185.1;
  %1188 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  (%1186, %1182, %1187, %1188)
}

def @func_13319(%var_13308: Tensor[(12, 8, 5), uint64], %var_13309: Tensor[(12, 8, 5), uint64]) -> (Tensor[(12, 8, 5), bool],) {
  %1189 = cast(%var_13309, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
  %1190 = shape_of(%var_13308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%var_13308, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1193 = not_equal(%1191, %1192) /* ty=Tensor[(12, 8, 5), bool] */;
  (%1193,)
}

def @func_4640() -> (Tensor[(3, 10, 8), float32],) {
  %1194 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_6620() -> (Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) {
  %1196 = @func_4078() /* ty=(Tensor[(3, 10, 8), float32], int64, Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) */;
  %1197 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %1198 = %1196.2;
  %1199 = %1197.0;
  (%1198, %1199)
}

def @func_18216(%var_18187: Tensor[(135), uint16], %var_18188: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 10, 8), float32]) {
  %1200 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
  %1201 = cast(%var_18187, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1202 = cast(%var_18188, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1203 = reshape(%1201, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1204 = reshape(%1202, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1205 = @func_4197(%1203, %1204) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
  %1206 = @func_13828() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1207 = %1200.1;
  %1208 = %1205.4;
  %1209 = %1206.1;
  (%1207, %1208, %var_18187, %var_18188, %1209)
}

def @func_7275() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(3, 10, 8), uint16]) {
  %1210 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1211 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %1212 = cast(%1211, dtype="float64") /* ty=Tensor[(8, 12, 15), float64] */;
  %1213 = %1210.0;
  %1214 = cast(%1213, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %1215 = log10(%1212) /* ty=Tensor[(8, 12, 15), float64] */;
  %1216 = cast(%1215, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %1217 = reshape(%1214, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
  %1218 = reshape(%1216, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
  %1219 = @func_6745(%1217, %1218) /* ty=(Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), uint16], Tensor[(8, 12, 15), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
  %1220 = %1219.2;
  (%1213, %1215, %1220)
}

def @func_4978(%var_4960: Tensor[(40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40), uint16], Tensor[(1400), float64], Tensor[(45, 3), float32]) {
  %1221 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1222 = cast(%var_4960, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %1223 = cast(meta[relay.Constant][61] /* ty=Tensor[(45, 3), uint16] */, dtype="uint16") /* ty=Tensor[(45, 3), uint16] */;
  %1224 = cast(meta[relay.Constant][62] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %1225 = reshape(%1222, newshape=[40]) /* ty=Tensor[(40), uint16] */;
  %1226 = reshape(%1223, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1227 = reshape(%1224, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %1228 = @func_4564(%1225, %1226, %1227) /* ty=(Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %1229 = cast(meta[relay.Constant][61] /* ty=Tensor[(45, 3), uint16] */, dtype="float32") /* ty=Tensor[(45, 3), float32] */;
  %1230 = %1221.0;
  %1231 = %1228.8;
  %1232 = sinh(%1229) /* ty=Tensor[(45, 3), float32] */;
  (%1230, %1231, %var_4960, meta[relay.Constant][62] /* ty=Tensor[(1400), float64] */, %1232)
}

def @func_4197(%var_4194: Tensor[(135), uint16], %var_4195: Tensor[(2025), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
  %1233 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1234 = cast(%var_4194, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1235 = cast(%var_4195, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1236 = reshape(%1234, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
  %1237 = reshape(%1235, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
  %1238 = @func_489(%1236, %1237) /* ty=(Tensor[(9, 15, 15), uint16],) */;
  %1239 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  %1240 = %1233.0;
  %1241 = %1238.0;
  (%1239, %1240, %1241, %var_4194, %var_4195)
}

def @func_13752(%var_13744: Tensor[(10, 4, 1), float64]) -> Tensor[(10, 4, 1), float64] {
  %1242 = cast(%var_13744, dtype="float64") /* ty=Tensor[(10, 4, 1), float64] */;
  rsqrt(%1242) /* ty=Tensor[(10, 4, 1), float64] */
}

def @func_14398() -> (Tensor[(1440), uint32],) {
  %1243 = @func_13375() /* ty=(Tensor[(1440), uint32],) */;
  %1244 = %1243.0;
  (%1244,)
}

def @func_14770() -> Tensor[(1440), uint32] {
  %1245 = @func_10343() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */;
  %1245.0
}

def @func_3236(%var_3205: Tensor[(135), uint16], %var_3211: Tensor[(140), bool]) -> (Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) {
  %1246 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1247 = cast(%var_3211, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1248 = cast(%var_3211, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1249 = reshape(%1247, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
  %1250 = reshape(%1248, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
  %1251 = cast(%var_3205, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1252 = cast(meta[relay.Constant][63] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1253 = reshape(%1251, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1254 = reshape(%1252, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1255 = @func_2879(%1253, %1254) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %1256 = %1255.3;
  %1257 = cast(%1256, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1258 = sin(%1257) /* ty=Tensor[(2025), float64] */;
  %1259 = cast(%1256, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %1260 = shape_of(%1258, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1261 = cast(%1258, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %1262 = dyn.reshape(%1259, %1260, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1263 = logical_or(%1261, %1262) /* ty=Tensor[(2025), bool] */;
  %1264 = cast(%1263, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1265 = %1246.0;
  %1266 = @func_2266(%1249, %1250) /* ty=Tensor[(4, 7, 5), bool] */;
  %1267 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  %1268 = log(%1264) /* ty=Tensor[(2025), float32] */;
  (%1265, %var_3205, meta[relay.Constant][63] /* ty=Tensor[(2025), uint16] */, %1266, %var_3211, %1267, %1268)
}

def @func_18394() -> Tensor[(3, 10, 8), float32] {
  %1269 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1269.1
}

def @func_11863() -> Tensor[(3, 10, 8), float32] {
  @func_8111() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_12860() -> (Tensor[(3, 10, 8), float32],) {
  %1270 = @func_8338() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1271 = %1270.1;
  (%1271,)
}

def @func_14831() -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
  %1272 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1273 = @func_11918() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1274 = %1272.1;
  %1275 = %1273.0;
  (%1274, %1275)
}

def @func_18175(%var_18169: Tensor[(6), int8], %var_18170: Tensor[(2880), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(1440, 2), float32], Tensor[(6), int8], Tensor[(2880), float32]) {
  %1276 = cast(%var_18169, dtype="int8") /* ty=Tensor[(6), int8] */;
  %1277 = cast(%var_18170, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %1278 = reshape(%1276, newshape=[6]) /* ty=Tensor[(6), int8] */;
  %1279 = reshape(%1277, newshape=[1440, 2]) /* ty=Tensor[(1440, 2), float32] */;
  %1280 = @func_13363(%1278, %1279) /* ty=(Tensor[(8, 12, 15), float32], Tensor[(3, 15, 3), float32], Tensor[(6), int8], Tensor[(12, 15, 16), float32], Tensor[(1440, 2), float32]) */;
  %1281 = @func_16906() /* ty=Tensor[(3, 10, 8), float32] */;
  %1282 = %1280.4;
  (%1281, %1282, %var_18169, %var_18170)
}

def @func_7534(%var_7492: Tensor[(135), uint16], %var_7518: Tensor[(300), float32], %var_7519: Tensor[(40), uint16], %var_7520: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400), float64], Tensor[(3, 10, 8), float32]) {
  %1283 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1284 = @func_5868() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1285 = cast(%var_7492, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1286 = cast(meta[relay.Constant][64] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1287 = reshape(%1285, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1288 = reshape(%1286, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1289 = @func_2879(%1287, %1288) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %1290 = cast(meta[relay.Constant][64] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1291 = reshape(%1290, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1292 = @func_5192(%1291) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), bool]) */;
  %1293 = cast(%var_7518, dtype="float32") /* ty=Tensor[(300), float32] */;
  %1294 = cast(%var_7519, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %1295 = cast(%var_7520, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %1296 = reshape(%1293, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
  %1297 = reshape(%1294, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint16] */;
  %1298 = reshape(%1295, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %1299 = @func_6464(%1296, %1297, %1298) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %1300 = @func_4640() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1301 = %1283.1;
  %1302 = %1284.0;
  %1303 = %1289.2;
  %1304 = %1292.2;
  %1305 = %1299.5;
  %1306 = %1300.0;
  (%1301, %1302, %1303, %var_7492, meta[relay.Constant][64] /* ty=Tensor[(2025), uint16] */, %1304, %1305, %var_7518, %var_7519, %var_7520, %1306)
}

def @func_8666() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) {
  %1307 = cast(meta[relay.Constant][65] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1308 = reshape(%1307, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1309 = @func_6891(%1308) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32]) */;
  %1310 = @func_6563() /* ty=Tensor[(3, 10, 8), float32] */;
  %1311 = %1309.0;
  (%1310, %1311, meta[relay.Constant][65] /* ty=Tensor[(135), uint16] */)
}

def @func_5106() -> (Tensor[(3, 10, 8), float32],) {
  %1312 = @func_4763() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1313 = %1312.1;
  (%1313,)
}

def @func_8817() -> (Tensor[(13, 6, 3), float32],) {
  %1314 = @func_4048() /* ty=Tensor[(13, 6, 3), float32] */;
  (%1314,)
}

def @func_9966() -> (Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32]) {
  %1315 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %1316 = cast(%1315, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %1317 = reshape(%1316, newshape=[1440]) /* ty=Tensor[(1440), uint32] */;
  %1318 = @func_9626(%1317) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), float64]) */;
  %1319 = %1318.1;
  (%1315, %1319)
}

def @func_12292(%var_12289: Tensor[(12, 15, 16), float32]) -> Tensor[(12, 15, 16), float32] {
  %1320 = cast(%var_12289, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  sinh(%1320) /* ty=Tensor[(12, 15, 16), float32] */
}

def @func_5609() -> Tensor[(3, 10, 8), float32] {
  %1321 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1321.0
}

def @func_14110(%var_14084: Tensor[(1440), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), float32], Tensor[(8, 12, 15), float32]) {
  %1322 = @func_11619() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float64]) */;
  %1323 = cast(%var_14084, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %1324 = reshape(%1323, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
  %1325 = @func_11385(%1324) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
  %1326 = cast(%var_14084, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %1327 = reshape(%1326, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
  %1328 = @func_11562(%1327) /* ty=(Tensor[(8, 12, 15), uint16], Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float64]) */;
  %1329 = %1322.0;
  %1330 = %1325.2;
  %1331 = %1328.2;
  (%1329, %1330, %var_14084, %1331)
}

def @func_11186() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1332 = @func_10210() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1333 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1334 = @func_10210() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1335 = %1332.0;
  %1336 = %1333.0;
  %1337 = %1334.1;
  (%1335, %1336, %1337)
}

def @func_8338() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1338 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1339 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1340 = %1338.0;
  %1341 = %1339.0;
  (%1340, %1341)
}

def @func_14582() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %1342 = @func_8817() /* ty=(Tensor[(13, 6, 3), float32],) */;
  %1343 = @func_11207() /* ty=Tensor[(3, 10, 8), float32] */;
  %1344 = %1342.0;
  (%1343, %1344)
}

def @func_17838(%var_17820: bool, %var_17827: Tensor[(39, 6), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float64], bool, Tensor[(1, 195), bool], Tensor[(39, 6), bool], Tensor[(3, 10, 8), float32]) {
  %1345 = @func_11320() /* ty=(Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) */;
  %1346 = @func_14556() /* ty=(Tensor[(1400, 1), float64], Tensor[(3, 10, 8), float32]) */;
  %1347 = cast(%var_17820, dtype="bool") /* ty=bool */;
  %1348 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 195), bool] */, dtype="bool") /* ty=Tensor[(1, 195), bool] */;
  %1349 = reshape(%1347, newshape=[]) /* ty=bool */;
  %1350 = reshape(%1348, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), bool] */;
  %1351 = @func_17688(%1349, %1350) /* ty=(Tensor[(15, 1, 13), bool], Tensor[(13, 6, 3), uint16], Tensor[(39, 6), float64], Tensor[(3, 10, 8), float32]) */;
  %1352 = %1351.2;
  %1353 = cast(%var_17827, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
  %1354 = shape_of(%1352, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1355 = cast(%1352, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
  %1356 = dyn.reshape(%1353, %1354, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1357 = @func_10210() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1358 = %1345.1;
  %1359 = %1346.0;
  %1360 = less_equal(%1355, %1356) /* ty=Tensor[(39, 6), bool] */;
  %1361 = %1357.0;
  (%1358, %1359, %var_17820, meta[relay.Constant][66] /* ty=Tensor[(1, 195), bool] */, %1360, %1361)
}

def @func_10343() -> (Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) {
  %1362 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %1363 = %1362.2;
  %1364 = cast(%1363, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %1365 = reshape(%1364, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
  %1366 = @func_9016(%1365) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(8, 7, 4), int64], Tensor[(224), float64]) */;
  %1367 = @func_8473() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1368 = %1366.2;
  %1369 = %1367.0;
  (%1363, %1368, %1369)
}

def @func_6765() -> Tensor[(3, 10, 8), float32] {
  %1370 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1370.0
}

def @func_6516() -> (Tensor[(3, 10, 8), float32],) {
  %1371 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1372 = %1371.0;
  (%1372,)
}

def @func_18131() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), uint16]) {
  %1373 = @func_11963() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) */;
  %1374 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
  %1375 = %1373.0;
  %1376 = %1374.0;
  (%1375, %1376)
}

def @func_15992() -> Tensor[(3, 10, 8), float32] {
  %1377 = @func_13855() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1377.0
}

def @func_4454(%var_4421: Tensor[(40), uint16], %var_4440: Tensor[(15, 9), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16], Tensor[(3, 15, 3), float32], Tensor[(15, 9), uint16], Tensor[(2025), uint16]) {
  %1378 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1379 = cast(%var_4421, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %1380 = reshape(%1379, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint16] */;
  %1381 = @func_3485(%1380) /* ty=(Tensor[(5, 4, 2), uint16],) */;
  %1382 = cast(%var_4440, dtype="uint16") /* ty=Tensor[(15, 9), uint16] */;
  %1383 = cast(meta[relay.Constant][67] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1384 = reshape(%1382, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1385 = reshape(%1383, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1386 = @func_2879(%1384, %1385) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %1387 = %1378.0;
  %1388 = %1381.0;
  %1389 = %1386.4;
  (%1387, %1388, %var_4421, %1389, %var_4440, meta[relay.Constant][67] /* ty=Tensor[(2025), uint16] */)
}

def @func_2956() -> (Tensor[(3, 10, 8), float32],) {
  %1390 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1391 = %1390.0;
  (%1391,)
}

def @func_10693() -> (Tensor[(3, 10, 8), float64],) {
  %1392 = @func_7070() /* ty=Tensor[(3, 10, 8), float64] */;
  (%1392,)
}

def @func_14347() -> (Tensor[(3, 10, 8), uint16],) {
  %1393 = @func_12272() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) */;
  %1394 = %1393.1;
  (%1394,)
}

def @func_17930() -> (Tensor[(10, 13, 12), float64], Tensor[(3, 10, 8), float32]) {
  %1395 = @func_15181() /* ty=(Tensor[(10, 13, 12), float64],) */;
  %1396 = @func_11320() /* ty=(Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) */;
  %1397 = %1395.0;
  %1398 = %1396.1;
  (%1397, %1398)
}

def @func_15101() -> Tensor[(13, 6, 3), float32] {
  %1399 = @func_8817() /* ty=(Tensor[(13, 6, 3), float32],) */;
  %1399.0
}

def @func_5878() -> Tensor[(3, 10, 8), float64] {
  %1400 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1400.1
}

def @func_17721() -> (Tensor[(40), uint16],) {
  %1401 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %1402 = %1401.3;
  (%1402,)
}

def @func_6527() -> Tensor[(3, 10, 8), uint16] {
  %1403 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
  %1403.0
}

def @func_2507(%var_2489: Tensor[(2, 6, 16), float32]) -> Tensor[(2, 6, 16), float32] {
  %1404 = cast(%var_2489, dtype="float32") /* ty=Tensor[(2, 6, 16), float32] */;
  asin(%1404) /* ty=Tensor[(2, 6, 16), float32] */
}

def @func_12037() -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1405 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %1406 = @func_7748() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1407 = @func_10343() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */;
  %1408 = %1405.1;
  %1409 = %1406.1;
  %1410 = %1407.2;
  (%1408, %1409, %1410)
}

def @func_12971() -> Tensor[(12, 6, 15), float32] {
  %1411 = cast(meta[relay.Constant][68] /* ty=Tensor[(12, 6, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
  acos(%1411) /* ty=Tensor[(12, 6, 15), float32] */
}

def @func_10148() -> Tensor[(3, 10, 8), float32] {
  %1412 = @func_8473() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1412.0
}

def @func_9456(%var_9400: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32]) {
  %1413 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1414 = @func_8666() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */;
  %1415 = cast(%var_9400, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1416 = cast(meta[relay.Constant][69] /* ty=Tensor[(6), int8] */, dtype="int8") /* ty=Tensor[(6), int8] */;
  %1417 = reshape(%1415, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1418 = reshape(%1416, newshape=[6]) /* ty=Tensor[(6), int8] */;
  %1419 = @func_6024(%1417, %1418) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 1, 2), uint8], Tensor[(6), int8], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(3, 10, 8), float32], Tensor[(2025), float32], Tensor[(3, 10, 8), float32]) */;
  %1420 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1421 = cast(%var_9400, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1422 = reshape(%1421, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1423 = @func_7972(%1422) /* ty=(Tensor[(1440), uint32], Tensor[(3, 15, 3), float32], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
  %1424 = %1413.1;
  %1425 = %1414.1;
  %1426 = %1419.0;
  %1427 = %1420.0;
  %1428 = %1423.0;
  (%1424, %1425, %1426, %var_9400, meta[relay.Constant][69] /* ty=Tensor[(6), int8] */, %1427, %1428)
}

def @func_16636(%var_16624: Tensor[(2, 720), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(2, 720), float32]) {
  %1429 = @func_7434() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1430 = cast(%var_16624, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %1431 = reshape(%1430, newshape=[1440]) /* ty=Tensor[(1440), float32] */;
  %1432 = @func_14110(%1431) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), float32], Tensor[(8, 12, 15), float32]) */;
  %1433 = %1429.0;
  %1434 = @func_15992() /* ty=Tensor[(3, 10, 8), float32] */;
  %1435 = %1432.3;
  (%1433, %1434, %1435, %var_16624)
}

def @func_9346() -> (Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) {
  %1436 = cast(meta[relay.Constant][70] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1437 = cast(meta[relay.Constant][70] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1438 = reshape(%1436, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
  %1439 = reshape(%1437, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
  %1440 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  %1441 = @func_2266(%1438, %1439) /* ty=Tensor[(4, 7, 5), bool] */;
  (%1440, %1441, meta[relay.Constant][70] /* ty=Tensor[(140), bool] */)
}

def @func_10983(%var_10977: Tensor[(2, 700), float64]) -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(2, 700), float64], Tensor[(3, 10, 8), float32]) {
  %1442 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %1443 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1444 = cast(%var_10977, dtype="float64") /* ty=Tensor[(2, 700), float64] */;
  %1445 = reshape(%1444, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %1446 = @func_8617(%1445) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */;
  %1447 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1448 = %1442.2;
  %1449 = %1443.0;
  %1450 = %1446.3;
  %1451 = %1447.1;
  (%1448, %1449, %1450, %var_10977, %1451)
}

def @func_13294() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1452 = @func_11186() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1453 = %1452.1;
  %1454 = @func_8236() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1453, %1454)
}

def @func_2266(%var_2258: Tensor[(4, 7, 5), bool], %var_2259: Tensor[(4, 7, 5), bool]) -> Tensor[(4, 7, 5), bool] {
  %1455 = cast(%var_2259, dtype="bool") /* ty=Tensor[(4, 7, 5), bool] */;
  %1456 = shape_of(%var_2258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1457 = cast(%var_2258, dtype="bool") /* ty=Tensor[(4, 7, 5), bool] */;
  %1458 = dyn.reshape(%1455, %1456, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1457, %1458) /* ty=Tensor[(4, 7, 5), bool] */
}

def @func_11537() -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1459 = @func_8422() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1460 = @func_9245() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1461 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  %1462 = %1459.0;
  %1463 = %1460.0;
  (%1461, %1462, %1463)
}

def @func_13855() -> (Tensor[(3, 10, 8), float32],) {
  %1464 = @func_9269() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1464,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2509(%var_2508: Tensor[(2, 6, 16), float32]) -> Tensor[(2, 6, 16), float32] {
  %1 = fn (%var_2489: Tensor[(2, 6, 16), float32]) -> Tensor[(2, 6, 16), float32] {
    %0 = cast(%var_2489, dtype="float32") /* ty=Tensor[(2, 6, 16), float32] */;
    asin(%0) /* ty=Tensor[(2, 6, 16), float32] */
  };
  %1(%var_2508) /* ty=Tensor[(2, 6, 16), float32] */
}

def @func_13013() -> Tensor[(3, 10, 8), float32] {
  %2 = @func_12860() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %2.0
}

def @func_14556() -> (Tensor[(1400, 1), float64], Tensor[(3, 10, 8), float32]) {
  %3 = @func_13241() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float32], Tensor[(1400, ?), int32]) */;
  %4 = @func_8262() /* ty=Tensor[(1400, 1), float64] */;
  %5 = %3.0;
  (%4, %5)
}

def @func_16449(%var_16447: Tensor[(140), bool]) -> (Tensor[(3, 10, 8), float32], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(140), bool]) {
  @func_16446(%var_16447) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(140), bool]) */
}

def @func_5107() -> (Tensor[(3, 10, 8), float32],) {
  %8 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %6 = @func_4763() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %7 = %6.1;
    (%7,)
  };
  %8() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_13830() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_13828() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_10684() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %13 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %9 = @func_6841() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %10 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %11 = %9.0;
    %12 = %10.0;
    (%11, %12)
  };
  %13() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_4765() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  @func_4763() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */
}

def @func_12418() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_12416() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_7615() -> (Tensor[(135), uint16], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32]) {
  %14 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
  %15 = @func_5765() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
  %16 = @func_4763() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %17 = %14.6;
  %18 = %15.1;
  %19 = %16.0;
  (%17, %18, %19)
}

def @func_2256(%var_2254: int64, %var_2255: Tensor[(3, 15, 3), int64]) -> (Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) {
  %33 = fn (%var_2224: int64, %var_2225: Tensor[(3, 15, 3), int64]) -> (Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) {
    %20 = cast(%var_2224, dtype="int64") /* ty=int64 */;
    %21 = cast(%var_2225, dtype="int64") /* ty=Tensor[(3, 15, 3), int64] */;
    %22 = minimum(%20, %21) /* ty=Tensor[(3, 15, 3), int64] */;
    %23 = cast(%22, dtype="float32") /* ty=Tensor[(3, 15, 3), float32] */;
    %24 = cast(%var_2225, dtype="uint16") /* ty=Tensor[(3, 15, 3), uint16] */;
    %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %26 = reshape(%24, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
    %27 = reshape(%25, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
    %28 = @func_489(%26, %27) /* ty=(Tensor[(9, 15, 15), uint16],) */;
    %29 = %28.0;
    %30 = cast(%29, dtype="float64") /* ty=Tensor[(9, 15, 15), float64] */;
    %31 = exp(%23) /* ty=Tensor[(3, 15, 3), float32] */;
    %32 = atan(%30) /* ty=Tensor[(9, 15, 15), float64] */;
    (meta[relay.Constant][0] /* ty=Tensor[(2025), uint16] */, %31, %32)
  };
  %33(%var_2254, %var_2255) /* ty=(Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) */
}

def @func_12513() -> (Tensor[(3, 10, 8), float32],) {
  %34 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  (%34,)
}

def @func_15350() -> (Tensor[(40, 1440), bool],) {
  @func_15348() /* ty=(Tensor[(40, 1440), bool],) */
}

def @func_8717(%var_8716: Tensor[(13, 6, 3), float32]) -> (Tensor[(3, 10, 8), uint16], Tensor[(13, 6, 3), bool]) {
  %43 = fn (%var_8710: Tensor[(13, 6, 3), float32]) -> (Tensor[(3, 10, 8), uint16], Tensor[(13, 6, 3), bool]) {
    %35 = @func_7275() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(3, 10, 8), uint16]) */;
    %36 = @func_4048() /* ty=Tensor[(13, 6, 3), float32] */;
    %37 = cast(%var_8710, dtype="bool") /* ty=Tensor[(13, 6, 3), bool] */;
    %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
    %39 = cast(%36, dtype="bool") /* ty=Tensor[(13, 6, 3), bool] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %41 = %35.2;
    %42 = logical_or(%39, %40) /* ty=Tensor[(13, 6, 3), bool] */;
    (%41, %42)
  };
  %43(%var_8716) /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(13, 6, 3), bool]) */
}

def @func_13857() -> (Tensor[(3, 10, 8), float32],) {
  @func_13855() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_14660() -> (Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(1400, 1), float64]) {
  @func_14658() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(1400, 1), float64]) */
}

def @func_15521() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(12, 6, 15), float32], Tensor[(13, 6, 3), float32]) {
  @func_15519() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(12, 6, 15), float32], Tensor[(13, 6, 3), float32]) */
}

def @func_9103() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_9101() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_18340() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
  %48 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
    %44 = @func_17557() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %45 = %44.0;
    %46 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
    %47 = @func_9269() /* ty=Tensor[(3, 10, 8), float32] */;
    (%45, %46, %47)
  };
  %48() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_13490() -> (Tensor[(3, 10, 8), float32], Tensor[(4, 6, 12), bool], Tensor[(288), bool]) {
  %57 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(4, 6, 12), bool], Tensor[(288), bool]) {
    %49 = @func_9245() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
    %51 = cast(meta[relay.Constant][1] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
    %52 = reshape(%50, newshape=[4, 6, 12]) /* ty=Tensor[(4, 6, 12), bool] */;
    %53 = reshape(%51, newshape=[4, 6, 12]) /* ty=Tensor[(4, 6, 12), bool] */;
    %54 = @func_12124(%52, %53) /* ty=(Tensor[(4, 6, 12), bool],) */;
    %55 = %49.0;
    %56 = %54.0;
    (%55, %56, meta[relay.Constant][1] /* ty=Tensor[(288), bool] */)
  };
  %57() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 6, 12), bool], Tensor[(288), bool]) */
}

def @func_16907() -> Tensor[(3, 10, 8), float32] {
  %59 = fn () -> Tensor[(3, 10, 8), float32] {
    %58 = @func_11396() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %58.0
  };
  %59() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_7150() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) {
  @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */
}

def @func_12860() -> (Tensor[(3, 10, 8), float32],) {
  %60 = @func_8338() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %61 = %60.1;
  (%61,)
}

def @func_11986(%var_11981: Tensor[(3, 5, 8), float64]) -> Tensor[(3, 5, 8), float64] {
  %62 = cast(%var_11981, dtype="float64") /* ty=Tensor[(3, 5, 8), float64] */;
  log10(%62) /* ty=Tensor[(3, 5, 8), float64] */
}

def @func_8206(%var_8204: Tensor[(8, 7, 4), float64], %var_8205: Tensor[(8, 7, 4), float64]) -> (Tensor[(8, 7, 4), int64],) {
  %70 = fn (%var_8188: Tensor[(8, 7, 4), float64], %var_8195: Tensor[(8, 7, 4), float64]) -> (Tensor[(8, 7, 4), int64],) {
    %63 = cast(%var_8188, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
    %64 = log(%63) /* ty=Tensor[(8, 7, 4), float64] */;
    %65 = cast(%var_8195, dtype="int64") /* ty=Tensor[(8, 7, 4), int64] */;
    %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%64, dtype="int64") /* ty=Tensor[(8, 7, 4), int64] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %69 = bitwise_or(%67, %68) /* ty=Tensor[(8, 7, 4), int64] */;
    (%69,)
  };
  %70(%var_8204, %var_8205) /* ty=(Tensor[(8, 7, 4), int64],) */
}

def @func_15716() -> Tensor[(3, 10, 8), float32] {
  %72 = fn () -> Tensor[(3, 10, 8), float32] {
    %71 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %71.0
  };
  %72() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_18038(%var_18016: Tensor[(100, 14), float64]) -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float64], Tensor[(1400), float64], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(100, 14), float64]) {
  %73 = @func_13375() /* ty=(Tensor[(1440), uint32],) */;
  %74 = @func_17579() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16]) */;
  %75 = cast(meta[relay.Constant][2] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %76 = cast(meta[relay.Constant][3] /* ty=Tensor[(40), uint16] */, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %77 = cast(%var_18016, dtype="float64") /* ty=Tensor[(100, 14), float64] */;
  %78 = reshape(%75, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
  %79 = reshape(%76, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint16] */;
  %80 = reshape(%77, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %81 = @func_6464(%78, %79, %80) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %82 = %73.0;
  %83 = %74.0;
  %84 = %81.6;
  (%82, %83, %84, meta[relay.Constant][2] /* ty=Tensor[(300), float32] */, meta[relay.Constant][3] /* ty=Tensor[(40), uint16] */, %var_18016)
}

def @func_3706() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_8937(%var_8932: Tensor[(3, 10, 8), float64]) -> (Tensor[(3, 10, 8), float64],) {
  %85 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
  %86 = cast(%var_8932, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %90 = mod(%88, %89) /* ty=Tensor[(3, 10, 8), float64] */;
  (%90,)
}

def @func_12972() -> Tensor[(12, 6, 15), float32] {
  %92 = fn () -> Tensor[(12, 6, 15), float32] {
    %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 6, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
    acos(%91) /* ty=Tensor[(12, 6, 15), float32] */
  };
  %92() /* ty=Tensor[(12, 6, 15), float32] */
}

def @func_8902() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  %93 = @func_6974() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %94 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  %95 = @func_8236() /* ty=Tensor[(3, 10, 8), float32] */;
  %96 = %93.0;
  (%94, %95, %96)
}

def @func_17142() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_17140() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_6974() -> (Tensor[(3, 10, 8), float64],) {
  %97 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
  (%97,)
}

def @func_7750() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_7748() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_5766() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %101 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
    %98 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %99 = %98.0;
    %100 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
    (%99, %100)
  };
  %101() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */
}

def @func_13754(%var_13753: Tensor[(10, 4, 1), float64]) -> Tensor[(10, 4, 1), float64] {
  %103 = fn (%var_13744: Tensor[(10, 4, 1), float64]) -> Tensor[(10, 4, 1), float64] {
    %102 = cast(%var_13744, dtype="float64") /* ty=Tensor[(10, 4, 1), float64] */;
    rsqrt(%102) /* ty=Tensor[(10, 4, 1), float64] */
  };
  %103(%var_13753) /* ty=Tensor[(10, 4, 1), float64] */
}

def @func_11847() -> (Tensor[(3, 10, 8), float32],) {
  %105 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %104 = @func_5609() /* ty=Tensor[(3, 10, 8), float32] */;
    (%104,)
  };
  %105() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_13472(%var_13467: Tensor[(1400, 14), int16]) -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 14), int64]) {
  %106 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %107 = @func_11320() /* ty=(Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) */;
  %108 = %107.0;
  %109 = cast(%108, dtype="int64") /* ty=Tensor[(1400, ?), int64] */;
  %110 = cast(%var_13467, dtype="int64") /* ty=Tensor[(1400, 14), int64] */;
  %111 = %106.0;
  %112 = multiply(%109, %110) /* ty=Tensor[(1400, 14), int64] */;
  (%111, %112)
}

def @func_18633() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_18631() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_4937() -> (Tensor[(3, 10, 8), float32],) {
  %113 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %114 = %113.0;
  (%114,)
}

def @func_2957() -> (Tensor[(3, 10, 8), float32],) {
  %117 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %115 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %116 = %115.0;
    (%116,)
  };
  %117() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_7974(%var_7973: Tensor[(135), uint16]) -> (Tensor[(1440), uint32], Tensor[(3, 15, 3), float32], Tensor[(135), uint16], Tensor[(2025), uint16]) {
  %126 = fn (%var_7955: Tensor[(135), uint16]) -> (Tensor[(1440), uint32], Tensor[(3, 15, 3), float32], Tensor[(135), uint16], Tensor[(2025), uint16]) {
    %118 = @func_4034() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
    %119 = cast(%var_7955, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %120 = cast(meta[relay.Constant][5] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %121 = reshape(%119, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %122 = reshape(%120, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %123 = @func_2879(%121, %122) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
    %124 = %118.2;
    %125 = %123.4;
    (%124, %125, %var_7955, meta[relay.Constant][5] /* ty=Tensor[(2025), uint16] */)
  };
  %126(%var_7973) /* ty=(Tensor[(1440), uint32], Tensor[(3, 15, 3), float32], Tensor[(135), uint16], Tensor[(2025), uint16]) */
}

def @func_9496() -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) {
  %134 = fn () -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) {
    %127 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
    %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(40), uint16] */, dtype="uint16") /* ty=Tensor[(40), uint16] */;
    %129 = reshape(%128, newshape=[1, 40]) /* ty=Tensor[(1, 40), uint16] */;
    %130 = @func_7944(%129) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(14, 40), float64]) */;
    %131 = %127.2;
    %132 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
    %133 = %130.1;
    (%131, %132, %133, meta[relay.Constant][6] /* ty=Tensor[(40), uint16] */)
  };
  %134() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) */
}

def @func_2882(%var_2880: Tensor[(135), uint16], %var_2881: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) {
  %149 = fn (%var_2865: Tensor[(135), uint16], %var_2866: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) {
    %135 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %136 = cast(%var_2865, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %137 = cast(%var_2866, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %138 = reshape(%136, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
    %139 = reshape(%137, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
    %140 = @func_489(%138, %139) /* ty=(Tensor[(9, 15, 15), uint16],) */;
    %141 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %142 = cast(%var_2865, dtype="int64") /* ty=Tensor[(135), int64] */;
    %143 = reshape(%141, newshape=[]) /* ty=int64 */;
    %144 = reshape(%142, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int64] */;
    %145 = @func_2253(%143, %144) /* ty=(Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) */;
    %146 = %135.0;
    %147 = %140.0;
    %148 = %145.1;
    (%146, %147, %var_2865, %var_2866, %148, 5 /* ty=int64 */)
  };
  %149(%var_2880, %var_2881) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */
}

def @func_15183() -> (Tensor[(10, 13, 12), float64],) {
  @func_15181() /* ty=(Tensor[(10, 13, 12), float64],) */
}

def @func_17559() -> (Tensor[(3, 10, 8), float32],) {
  @func_17557() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_17594(%var_17586: Tensor[(14, 15, 12), float32], %var_17587: Tensor[(14, 15, 12), float32]) -> (Tensor[(14, 15, 12), bool],) {
  %150 = cast(%var_17587, dtype="bool") /* ty=Tensor[(14, 15, 12), bool] */;
  %151 = shape_of(%var_17586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%var_17586, dtype="bool") /* ty=Tensor[(14, 15, 12), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %154 = not_equal(%152, %153) /* ty=Tensor[(14, 15, 12), bool] */;
  (%154,)
}

def @func_6295(%var_6289: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(1400), float64]) {
  %155 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %156 = cast(%var_6289, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %157 = reshape(%156, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %158 = @func_4310(%157) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */;
  %159 = %155.0;
  %160 = %158.2;
  (%159, %160, %var_6289)
}

def @func_14868() -> (Tensor[(13, 6, 3), bool],) {
  %168 = fn () -> (Tensor[(13, 6, 3), bool],) {
    %161 = @func_13032() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
    %162 = %161.1;
    %163 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 6, 3), float32] */, dtype="bool") /* ty=Tensor[(13, 6, 3), bool] */;
    %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
    %165 = cast(%162, dtype="bool") /* ty=Tensor[(13, 6, 3), bool] */;
    %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %167 = greater(%165, %166) /* ty=Tensor[(13, 6, 3), bool] */;
    (%167,)
  };
  %168() /* ty=(Tensor[(13, 6, 3), bool],) */
}

def @func_15391(%var_15390: Tensor[(1, 12, 1), float64]) -> (Tensor[(1, 12, 1), float64], Tensor[(1440), uint32]) {
  %175 = fn (%var_15368: Tensor[(1, 12, 1), float64]) -> (Tensor[(1, 12, 1), float64], Tensor[(1440), uint32]) {
    %169 = cast(%var_15368, dtype="float64") /* ty=Tensor[(1, 12, 1), float64] */;
    %170 = sin(%169) /* ty=Tensor[(1, 12, 1), float64] */;
    %171 = cast(%170, dtype="float64") /* ty=Tensor[(1, 12, 1), float64] */;
    %172 = @func_12272() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) */;
    %173 = tan(%171) /* ty=Tensor[(1, 12, 1), float64] */;
    %174 = %172.0;
    (%173, %174)
  };
  %175(%var_15390) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(1440), uint32]) */
}

def @func_17375(%var_17374: Tensor[(16, 15, 7), uint64]) -> (Tensor[(16, 15, 7), bool],) {
  %181 = fn (%var_17328: Tensor[(16, 15, 7), uint64]) -> (Tensor[(16, 15, 7), bool],) {
    %176 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 15, 7), uint64] */, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
    %177 = shape_of(%var_17328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%var_17328, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %180 = greater_equal(%178, %179) /* ty=Tensor[(16, 15, 7), bool] */;
    (%180,)
  };
  %181(%var_17374) /* ty=(Tensor[(16, 15, 7), bool],) */
}

def @func_13032() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %182 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  %183 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  (%182, %183)
}

def @func_15774() -> (Tensor[(5, 4, 2), uint16],) {
  %186 = fn () -> (Tensor[(5, 4, 2), uint16],) {
    %184 = @func_9804() /* ty=(Tensor[(5, 4, 2), uint16],) */;
    %185 = %184.0;
    (%185,)
  };
  %186() /* ty=(Tensor[(5, 4, 2), uint16],) */
}

def @func_489(%var_474: Tensor[(9, 1, 15), uint16], %var_475: Tensor[(9, 15, 15), uint16]) -> (Tensor[(9, 15, 15), uint16],) {
  %187 = cast(%var_474, dtype="uint16") /* ty=Tensor[(9, 1, 15), uint16] */;
  %188 = cast(%var_475, dtype="uint16") /* ty=Tensor[(9, 15, 15), uint16] */;
  %189 = multiply(%187, %188) /* ty=Tensor[(9, 15, 15), uint16] */;
  (%189,)
}

def @func_9122() -> (Tensor[(3, 10, 8), float32],) {
  %190 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  (%190,)
}

def @func_5869() -> (Tensor[(3, 10, 8), float32],) {
  %193 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %191 = @func_5765() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
    %192 = %191.0;
    (%192,)
  };
  %193() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_8112() -> Tensor[(3, 10, 8), float32] {
  %195 = fn () -> Tensor[(3, 10, 8), float32] {
    %194 = @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %194.0
  };
  %195() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_3488(%var_3486: Tensor[(5, 4, 2), uint16]) -> (Tensor[(5, 4, 2), uint16],) {
  @func_3485(%var_3486) /* ty=(Tensor[(5, 4, 2), uint16],) */
}

def @func_18631() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %196 = @func_13294() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %197 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %198 = %196.1;
  %199 = %197.0;
  (%198, %199)
}

def @func_10961() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) {
  %200 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %201 = @func_7384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %202 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %203 = %202.1;
  %204 = cast(%203, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %205 = rsqrt(%204) /* ty=Tensor[(8, 12, 15), float32] */;
  %206 = cast(%205, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %207 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %208 = %200.0;
  %209 = %201.0;
  %210 = sinh(%206) /* ty=Tensor[(8, 12, 15), float32] */;
  %211 = %207.0;
  (%208, %209, %210, %211)
}

def @func_12124(%var_12098: Tensor[(4, 6, 12), bool], %var_12099: Tensor[(4, 6, 12), bool]) -> (Tensor[(4, 6, 12), bool],) {
  %212 = cast(%var_12099, dtype="bool") /* ty=Tensor[(4, 6, 12), bool] */;
  %213 = shape_of(%var_12098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%var_12098, dtype="bool") /* ty=Tensor[(4, 6, 12), bool] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %216 = logical_or(%214, %215) /* ty=Tensor[(4, 6, 12), bool] */;
  (%216,)
}

def @func_4048() -> Tensor[(13, 6, 3), float32] {
  @func_3126() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_17952() -> (Tensor[(13, 6, 3), float32],) {
  @func_17950() /* ty=(Tensor[(13, 6, 3), float32],) */
}

def @func_18384() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %217 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %218 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %219 = @func_7384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %220 = %217.0;
  %221 = %218.0;
  %222 = %219.0;
  %223 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  (%220, %221, %222, %223)
}

def @func_9684() -> Tensor[(13, 6, 3), float32] {
  %224 = fn () -> Tensor[(13, 6, 3), float32] {
    @func_3126() /* ty=Tensor[(13, 6, 3), float32] */
  };
  %224() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_14584() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  @func_14582() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */
}

def @func_12292(%var_12289: Tensor[(12, 15, 16), float32]) -> Tensor[(12, 15, 16), float32] {
  %225 = cast(%var_12289, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  sinh(%225) /* ty=Tensor[(12, 15, 16), float32] */
}

def @func_18133() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), uint16]) {
  @func_18131() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), uint16]) */
}

def @func_15102() -> Tensor[(13, 6, 3), float32] {
  %227 = fn () -> Tensor[(13, 6, 3), float32] {
    %226 = @func_8817() /* ty=(Tensor[(13, 6, 3), float32],) */;
    %226.0
  };
  %227() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_11919() -> (Tensor[(3, 10, 8), float32],) {
  %230 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %228 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %229 = %228.0;
    (%229,)
  };
  %230() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_18219(%var_18217: Tensor[(135), uint16], %var_18218: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 10, 8), float32]) {
  %241 = fn (%var_18187: Tensor[(135), uint16], %var_18188: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 10, 8), float32]) {
    %231 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
    %232 = cast(%var_18187, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %233 = cast(%var_18188, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %234 = reshape(%232, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %235 = reshape(%233, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %236 = @func_4197(%234, %235) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
    %237 = @func_13828() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %238 = %231.1;
    %239 = %236.4;
    %240 = %237.1;
    (%238, %239, %var_18187, %var_18188, %240)
  };
  %241(%var_18217, %var_18218) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 10, 8), float32]) */
}

def @func_16684() -> (Tensor[(4, 7, 5), bool],) {
  @func_16682() /* ty=(Tensor[(4, 7, 5), bool],) */
}

def @func_2389(%var_2388: Tensor[(3, 1, 2), int8]) -> (Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) {
  %260 = fn (%var_2333: Tensor[(3, 1, 2), int8]) -> (Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) {
    %242 = cast(meta[relay.Constant][9] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %243 = cast(%var_2333, dtype="int8") /* ty=Tensor[(3, 1, 2), int8] */;
    %244 = cast(meta[relay.Constant][9] /* ty=int8 */, dtype="int64") /* ty=int64 */;
    %245 = cast(meta[relay.Constant][10] /* ty=Tensor[(135), int64] */, dtype="int64") /* ty=Tensor[(135), int64] */;
    %246 = reshape(%244, newshape=[]) /* ty=int64 */;
    %247 = reshape(%245, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int64] */;
    %248 = @func_2253(%246, %247) /* ty=(Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) */;
    %249 = cast(meta[relay.Constant][9] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
    %250 = cast(%var_2333, dtype="uint8") /* ty=Tensor[(3, 1, 2), uint8] */;
    %251 = cast(meta[relay.Constant][9] /* ty=int8 */, dtype="int64") /* ty=int64 */;
    %252 = cast(meta[relay.Constant][10] /* ty=Tensor[(135), int64] */, dtype="int64") /* ty=Tensor[(135), int64] */;
    %253 = reshape(%251, newshape=[]) /* ty=int64 */;
    %254 = reshape(%252, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int64] */;
    %255 = @func_2253(%253, %254) /* ty=(Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], Tensor[(9, 15, 15), float64]) */;
    %256 = maximum(%242, %243) /* ty=Tensor[(3, 1, 2), int8] */;
    %257 = %248.2;
    %258 = bitwise_and(%249, %250) /* ty=Tensor[(3, 1, 2), uint8] */;
    %259 = %255.1;
    (%256, %257, meta[relay.Constant][10] /* ty=Tensor[(135), int64] */, %258, %259)
  };
  %260(%var_2388) /* ty=(Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) */
}

def @func_3981() -> (Tensor[(3, 10, 8), float32],) {
  %261 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %262 = %261.0;
  (%262,)
}

def @func_7540(%var_7536: Tensor[(135), uint16], %var_7537: Tensor[(300), float32], %var_7538: Tensor[(40), uint16], %var_7539: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400), float64], Tensor[(3, 10, 8), float32]) {
  @func_7534(%var_7536, %var_7537, %var_7538, %var_7539) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_4360() -> (Tensor[(3, 10, 8), float32],) {
  %265 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %263 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %264 = %263.0;
    (%264,)
  };
  %265() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_11385(%var_11376: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
  %266 = @func_4763() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %267 = @func_7434() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %268 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %269 = @func_10961() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) */;
  %270 = %269.2;
  %271 = cast(%var_11376, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%270, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %275 = %266.2;
  %276 = %267.0;
  %277 = %268.0;
  %278 = divide(%273, %274) /* ty=Tensor[(8, 12, 15), float32] */;
  (%275, %276, %277, %278)
}

def @func_15935(%var_15902: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(6, 6, 7), float32], float32, Tensor[(42, 6), float32], Tensor[(8, 12, 15), float32], Tensor[(40, 1440), bool]) {
  %279 = @func_14867() /* ty=(Tensor[(13, 6, 3), bool],) */;
  %280 = @func_15791() /* ty=(Tensor[(135), uint16],) */;
  %281 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %282 = cast(%var_15902, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %283 = reshape(%282, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
  %284 = cast(5.24221f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %285 = cast(meta[relay.Constant][11] /* ty=Tensor[(42, 6), float32] */, dtype="float32") /* ty=Tensor[(42, 6), float32] */;
  %286 = reshape(%284, newshape=[]) /* ty=float32 */;
  %287 = reshape(%285, newshape=[6, 6, 7]) /* ty=Tensor[(6, 6, 7), float32] */;
  %288 = @func_15348() /* ty=(Tensor[(40, 1440), bool],) */;
  %289 = @func_8111() /* ty=Tensor[(3, 10, 8), float32] */;
  %290 = %279.0;
  %291 = %280.0;
  %292 = %281.0;
  %293 = @func_3812(%283) /* ty=Tensor[(10, 10, 14), bool] */;
  %294 = @func_9155(%286, %287) /* ty=Tensor[(6, 6, 7), float32] */;
  %295 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %296 = %288.0;
  (%289, %290, %291, %292, %293, %var_15902, %294, 5.24221f /* ty=float32 */, meta[relay.Constant][11] /* ty=Tensor[(42, 6), float32] */, %295, %296)
}

def @func_6621() -> (Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) {
  %301 = fn () -> (Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) {
    %297 = @func_4078() /* ty=(Tensor[(3, 10, 8), float32], int64, Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) */;
    %298 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
    %299 = %297.2;
    %300 = %298.0;
    (%299, %300)
  };
  %301() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */
}

def @func_17838(%var_17820: bool, %var_17827: Tensor[(39, 6), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float64], bool, Tensor[(1, 195), bool], Tensor[(39, 6), bool], Tensor[(3, 10, 8), float32]) {
  %302 = @func_11320() /* ty=(Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) */;
  %303 = @func_14556() /* ty=(Tensor[(1400, 1), float64], Tensor[(3, 10, 8), float32]) */;
  %304 = cast(%var_17820, dtype="bool") /* ty=bool */;
  %305 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 195), bool] */, dtype="bool") /* ty=Tensor[(1, 195), bool] */;
  %306 = reshape(%304, newshape=[]) /* ty=bool */;
  %307 = reshape(%305, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), bool] */;
  %308 = @func_17688(%306, %307) /* ty=(Tensor[(15, 1, 13), bool], Tensor[(13, 6, 3), uint16], Tensor[(39, 6), float64], Tensor[(3, 10, 8), float32]) */;
  %309 = %308.2;
  %310 = cast(%var_17827, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
  %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(2), int32] */;
  %312 = cast(%309, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %314 = @func_10210() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %315 = %302.1;
  %316 = %303.0;
  %317 = less_equal(%312, %313) /* ty=Tensor[(39, 6), bool] */;
  %318 = %314.0;
  (%315, %316, %var_17820, meta[relay.Constant][12] /* ty=Tensor[(1, 195), bool] */, %317, %318)
}

def @main() -> (Tensor[(13, 6, 3), float32],) {
  %319 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(13, 6, 3), float32] */;
  %321 = sinh(%320) /* ty=Tensor[(13, 6, 3), float32] */;
  (%321,)
}

def @func_12251(%var_12249: Tensor[(13, 6, 3), float64]) -> Tensor[(13, 6, 3), uint16] {
  @func_12248(%var_12249) /* ty=Tensor[(13, 6, 3), uint16] */
}

def @func_4826() -> (Tensor[(3, 10, 8), float32],) {
  %324 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %322 = @func_4640() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %323 = %322.0;
    (%323,)
  };
  %324() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_4079() -> (Tensor[(3, 10, 8), float32], int64, Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) {
  %337 = fn () -> (Tensor[(3, 10, 8), float32], int64, Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) {
    %325 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %326 = cast(meta[relay.Constant][13] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %327 = cast(meta[relay.Constant][14] /* ty=Tensor[(27, 75), uint16] */, dtype="uint16") /* ty=Tensor[(27, 75), uint16] */;
    %328 = reshape(%326, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %329 = reshape(%327, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %330 = @func_2879(%328, %329) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
    %331 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %332 = cast(meta[relay.Constant][14] /* ty=Tensor[(27, 75), uint16] */, dtype="float64") /* ty=Tensor[(27, 75), float64] */;
    %333 = %325.0;
    %334 = %330.5;
    %335 = %331.0;
    %336 = sin(%332) /* ty=Tensor[(27, 75), float64] */;
    (%333, %334, meta[relay.Constant][13] /* ty=Tensor[(135), uint16] */, %335, %336)
  };
  %337() /* ty=(Tensor[(3, 10, 8), float32], int64, Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) */
}

def @func_16682() -> (Tensor[(4, 7, 5), bool],) {
  %338 = @func_11963() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) */;
  %339 = %338.2;
  (%339,)
}

def @func_13296() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_13294() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_2893() -> (Tensor[(3, 10, 8), float32],) {
  %340 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %341 = %340.0;
  (%341,)
}

def @func_9124() -> (Tensor[(3, 10, 8), float32],) {
  @func_9122() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_8817() -> (Tensor[(13, 6, 3), float32],) {
  %342 = @func_4048() /* ty=Tensor[(13, 6, 3), float32] */;
  (%342,)
}

def @func_11187() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %349 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %343 = @func_10210() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %344 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %345 = @func_10210() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %346 = %343.0;
    %347 = %344.0;
    %348 = %345.1;
    (%346, %347, %348)
  };
  %349() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_11322() -> (Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) {
  @func_11320() /* ty=(Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) */
}

def @func_4200(%var_4198: Tensor[(135), uint16], %var_4199: Tensor[(2025), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
  %359 = fn (%var_4194: Tensor[(135), uint16], %var_4195: Tensor[(2025), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
    %350 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %351 = cast(%var_4194, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %352 = cast(%var_4195, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %353 = reshape(%351, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
    %354 = reshape(%352, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
    %355 = @func_489(%353, %354) /* ty=(Tensor[(9, 15, 15), uint16],) */;
    %356 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
    %357 = %350.0;
    %358 = %355.0;
    (%356, %357, %358, %var_4194, %var_4195)
  };
  %359(%var_4198, %var_4199) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */
}

def @func_14399() -> (Tensor[(1440), uint32],) {
  %362 = fn () -> (Tensor[(1440), uint32],) {
    %360 = @func_13375() /* ty=(Tensor[(1440), uint32],) */;
    %361 = %360.0;
    (%361,)
  };
  %362() /* ty=(Tensor[(1440), uint32],) */
}

def @func_15952() -> Tensor[(3, 10, 8), float32] {
  %363 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %363.0
}

def @func_3588() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %370 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %364 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %365 = %364.0;
    %366 = cast(%365, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
    %367 = reshape(%366, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
    %368 = @func_3522(%367) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
    %369 = %368.1;
    (%365, %369)
  };
  %370() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_6518() -> (Tensor[(3, 10, 8), float32],) {
  @func_6516() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_9377() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  %376 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
    %371 = @func_7384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %372 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %373 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
    %374 = %371.1;
    %375 = %372.1;
    (%373, %374, %375)
  };
  %376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */
}

def @func_11538() -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %382 = fn () -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %377 = @func_8422() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %378 = @func_9245() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %379 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
    %380 = %377.0;
    %381 = %378.0;
    (%379, %380, %381)
  };
  %382() /* ty=(Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_16084(%var_16082: Tensor[(15, 11, 14), float64], %var_16083: Tensor[(15, 11, 14), float64]) -> (Tensor[(15, 11, 14), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %392 = fn (%var_16056: Tensor[(15, 11, 14), float64], %var_16057: Tensor[(15, 11, 14), float64]) -> (Tensor[(15, 11, 14), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
    %383 = cast(%var_16057, dtype="float64") /* ty=Tensor[(15, 11, 14), float64] */;
    %384 = shape_of(%var_16056, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%var_16056, dtype="float64") /* ty=Tensor[(15, 11, 14), float64] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %387 = @func_8666() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */;
    %388 = @func_8817() /* ty=(Tensor[(13, 6, 3), float32],) */;
    %389 = divide(%385, %386) /* ty=Tensor[(15, 11, 14), float64] */;
    %390 = %387.0;
    %391 = %388.0;
    (%389, %390, %391)
  };
  %392(%var_16082, %var_16083) /* ty=(Tensor[(15, 11, 14), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */
}

def @func_3913(%var_3911: Tensor[(40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) {
  @func_3910(%var_3911) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) */
}

def @func_14771() -> Tensor[(1440), uint32] {
  %394 = fn () -> Tensor[(1440), uint32] {
    %393 = @func_10343() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */;
    %393.0
  };
  %394() /* ty=Tensor[(1440), uint32] */
}

def @func_15954() -> Tensor[(3, 10, 8), float32] {
  @func_15952() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_5666() -> (Tensor[(3, 10, 8), float32],) {
  @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_14582() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %395 = @func_8817() /* ty=(Tensor[(13, 6, 3), float32],) */;
  %396 = @func_11207() /* ty=Tensor[(3, 10, 8), float32] */;
  %397 = %395.0;
  (%396, %397)
}

def @func_7654() -> (Tensor[(3, 10, 8), float32],) {
  @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_18131() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), uint16]) {
  %398 = @func_11963() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) */;
  %399 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
  %400 = %398.0;
  %401 = %399.0;
  (%400, %401)
}

def @func_4050() -> Tensor[(13, 6, 3), float32] {
  @func_4048() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_8237() -> Tensor[(3, 10, 8), float32] {
  %403 = fn () -> Tensor[(3, 10, 8), float32] {
    %402 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %402.1
  };
  %403() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_12848() -> Tensor[(3, 10, 8), float32] {
  @func_12846() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_17721() -> (Tensor[(40), uint16],) {
  %404 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
  %405 = %404.3;
  (%405,)
}

def @func_14511() -> Tensor[(13, 6, 3), float32] {
  @func_3126() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_18110() -> Tensor[(13, 6, 3), float32] {
  @func_4048() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_18386() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  @func_18384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */
}

def @func_18396() -> Tensor[(3, 10, 8), float32] {
  @func_18394() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_3239(%var_3237: Tensor[(135), uint16], %var_3238: Tensor[(140), bool]) -> (Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) {
  %429 = fn (%var_3205: Tensor[(135), uint16], %var_3211: Tensor[(140), bool]) -> (Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) {
    %406 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %407 = cast(%var_3211, dtype="bool") /* ty=Tensor[(140), bool] */;
    %408 = cast(%var_3211, dtype="bool") /* ty=Tensor[(140), bool] */;
    %409 = reshape(%407, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
    %410 = reshape(%408, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
    %411 = cast(%var_3205, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %412 = cast(meta[relay.Constant][15] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %413 = reshape(%411, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %414 = reshape(%412, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %415 = @func_2879(%413, %414) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
    %416 = %415.3;
    %417 = cast(%416, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %418 = sin(%417) /* ty=Tensor[(2025), float64] */;
    %419 = cast(%416, dtype="bool") /* ty=Tensor[(2025), bool] */;
    %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(1), int32] */;
    %421 = cast(%418, dtype="bool") /* ty=Tensor[(2025), bool] */;
    %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?), bool] */;
    %423 = logical_or(%421, %422) /* ty=Tensor[(2025), bool] */;
    %424 = cast(%423, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %425 = %406.0;
    %426 = @func_2266(%409, %410) /* ty=Tensor[(4, 7, 5), bool] */;
    %427 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
    %428 = log(%424) /* ty=Tensor[(2025), float32] */;
    (%425, %var_3205, meta[relay.Constant][15] /* ty=Tensor[(2025), uint16] */, %426, %var_3211, %427, %428)
  };
  %429(%var_3237, %var_3238) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */
}

def @func_15078() -> (Tensor[(3, 10, 8), float32],) {
  %432 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %430 = @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %431 = %430.0;
    (%431,)
  };
  %432() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_15938(%var_15936: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(6, 6, 7), float32], float32, Tensor[(42, 6), float32], Tensor[(8, 12, 15), float32], Tensor[(40, 1440), bool]) {
  @func_15935(%var_15936) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(6, 6, 7), float32], float32, Tensor[(42, 6), float32], Tensor[(8, 12, 15), float32], Tensor[(40, 1440), bool]) */
}

def @func_10211() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %439 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %433 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %434 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %435 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %436 = %433.1;
    %437 = %434.0;
    %438 = %435.0;
    (%436, %437, %438)
  };
  %439() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_11036() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %440 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %441 = @func_7384() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %442 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
  %443 = %440.0;
  %444 = %441.2;
  %445 = %442.1;
  (%443, %444, %445)
}

def @func_9245() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %446 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %447 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  %448 = %446.0;
  (%447, %448)
}

def @func_4606(%var_4605: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(1, 40), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) {
  %459 = fn (%var_4597: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(1, 40), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) {
    %449 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %450 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 40), uint16] */, dtype="uint16") /* ty=Tensor[(1, 40), uint16] */;
    %451 = cast(%var_4597, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %452 = cast(meta[relay.Constant][17] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %453 = reshape(%450, newshape=[40]) /* ty=Tensor[(40), uint16] */;
    %454 = reshape(%451, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %455 = reshape(%452, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %456 = @func_4564(%453, %454, %455) /* ty=(Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
    %457 = %449.0;
    %458 = %456.7;
    (%457, %458, meta[relay.Constant][16] /* ty=Tensor[(1, 40), uint16] */, %var_4597, meta[relay.Constant][17] /* ty=Tensor[(1400), float64] */)
  };
  %459(%var_4605) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(1, 40), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */
}

def @func_11865() -> Tensor[(3, 10, 8), float32] {
  @func_11863() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_10150() -> Tensor[(3, 10, 8), float32] {
  @func_10148() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_17692(%var_17690: bool, %var_17691: Tensor[(15, 1, 13), bool]) -> (Tensor[(15, 1, 13), bool], Tensor[(13, 6, 3), uint16], Tensor[(39, 6), float64], Tensor[(3, 10, 8), float32]) {
  @func_17688(%var_17690, %var_17691) /* ty=(Tensor[(15, 1, 13), bool], Tensor[(13, 6, 3), uint16], Tensor[(39, 6), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_18512(%var_18510: Tensor[(135), uint16], %var_18511: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(12, 6, 15), float32], Tensor[(12, 6, 15), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(13, 6, 3), bool]) {
  %472 = fn (%var_18474: Tensor[(135), uint16], %var_18475: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(12, 6, 15), float32], Tensor[(12, 6, 15), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(13, 6, 3), bool]) {
    %460 = @func_18269() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %461 = cast(%var_18474, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %462 = cast(%var_18475, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %463 = reshape(%461, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
    %464 = reshape(%462, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
    %465 = @func_489(%463, %464) /* ty=(Tensor[(9, 15, 15), uint16],) */;
    %466 = @func_14867() /* ty=(Tensor[(13, 6, 3), bool],) */;
    %467 = %460.0;
    %468 = @func_12971() /* ty=Tensor[(12, 6, 15), float32] */;
    %469 = @func_12971() /* ty=Tensor[(12, 6, 15), float32] */;
    %470 = %465.0;
    %471 = %466.0;
    (%467, %468, %469, %470, %var_18474, %var_18475, %471)
  };
  %472(%var_18510, %var_18511) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(12, 6, 15), float32], Tensor[(12, 6, 15), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(13, 6, 3), bool]) */
}

def @func_6528() -> Tensor[(3, 10, 8), uint16] {
  %474 = fn () -> Tensor[(3, 10, 8), uint16] {
    %473 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
    %473.0
  };
  %474() /* ty=Tensor[(3, 10, 8), uint16] */
}

def @func_7436() -> (Tensor[(3, 10, 8), float32],) {
  @func_7434() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_15181() -> (Tensor[(10, 13, 12), float64],) {
  %475 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 12), float64] */;
  %476 = cosh(%475) /* ty=Tensor[(10, 13, 12), float64] */;
  (%476,)
}

def @func_17873() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_17871() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_16037() -> Tensor[(3, 10, 8), float32] {
  %477 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %477.1
}

def @func_12272() -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) {
  %478 = @func_10343() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */;
  %479 = %478.0;
  %480 = @func_6527() /* ty=Tensor[(3, 10, 8), uint16] */;
  (%479, %480)
}

def @func_16002() -> Tensor[(8, 12, 15), float32] {
  @func_8253() /* ty=Tensor[(8, 12, 15), float32] */
}

def @func_6893(%var_6892: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32]) {
  %491 = fn (%var_6860: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32]) {
    %481 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %482 = cast(%var_6860, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %483 = cast(meta[relay.Constant][19] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
    %484 = reshape(%482, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %485 = reshape(%483, newshape=[140]) /* ty=Tensor[(140), bool] */;
    %486 = @func_3236(%484, %485) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */;
    %487 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %488 = %481.0;
    %489 = %486.3;
    %490 = %487.1;
    (%488, %489, %var_6860, meta[relay.Constant][19] /* ty=Tensor[(140), bool] */, %490)
  };
  %491(%var_6892) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32]) */
}

def @func_13034() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  @func_13032() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */
}

def @func_15440() -> (Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) {
  %495 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) {
    %492 = @func_4078() /* ty=(Tensor[(3, 10, 8), float32], int64, Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) */;
    %493 = @func_11207() /* ty=Tensor[(3, 10, 8), float32] */;
    %494 = %492.4;
    (%493, %494)
  };
  %495() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(27, 75), float64]) */
}

def @func_9626(%var_9603: Tensor[(1440), uint32]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), float64]) {
  %496 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %497 = cast(%var_9603, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %498 = reshape(%497, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %499 = @func_608(%498) /* ty=(Tensor[(8, 12, 15), float32],) */;
  %500 = %496.1;
  %501 = cast(%500, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %502 = reshape(%501, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
  %503 = @func_3522(%502) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
  %504 = %499.0;
  %505 = %503.0;
  (%500, %504, %var_9603, %505)
}

def @func_17015() -> Tensor[(3, 10, 8), float32] {
  %506 = @func_13828() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %506.0
}

def @func_3756() -> (Tensor[(3, 10, 8), float32],) {
  %509 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %507 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %508 = %507.0;
    (%508,)
  };
  %509() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_5491(%var_5489: Tensor[(6), int8], %var_5490: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), float64], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 10, 8), float64]) {
  %528 = fn (%var_5433: Tensor[(6), int8], %var_5480: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), float64], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 10, 8), float64]) {
    %510 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %511 = cast(%var_5433, dtype="int8") /* ty=Tensor[(6), int8] */;
    %512 = reshape(%511, newshape=[3, 1, 2]) /* ty=Tensor[(3, 1, 2), int8] */;
    %513 = @func_2387(%512) /* ty=(Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) */;
    %514 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %515 = cast(%var_5480, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %516 = %513.1;
    %517 = cast(%516, dtype="uint16") /* ty=Tensor[(9, 15, 15), uint16] */;
    %518 = reshape(%515, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %519 = reshape(%517, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %520 = @func_4197(%518, %519) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
    %521 = %510.0;
    %522 = cast(%521, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
    %523 = reshape(%522, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
    %524 = @func_3522(%523) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
    %525 = %514.0;
    %526 = %520.3;
    %527 = %524.0;
    (%521, %516, %var_5433, %525, %526, %var_5480, %527)
  };
  %528(%var_5489, %var_5490) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), float64], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 10, 8), float64]) */
}

def @func_16039() -> Tensor[(3, 10, 8), float32] {
  @func_16037() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_9629(%var_9627: Tensor[(1440), uint32]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), float64]) {
  @func_9626(%var_9627) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), float64]) */
}

def @func_8423() -> (Tensor[(3, 10, 8), float32],) {
  %530 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %529 = @func_7807() /* ty=Tensor[(3, 10, 8), float32] */;
    (%529,)
  };
  %530() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_7276() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(3, 10, 8), uint16]) {
  %542 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(3, 10, 8), uint16]) {
    %531 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %532 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
    %533 = cast(%532, dtype="float64") /* ty=Tensor[(8, 12, 15), float64] */;
    %534 = %531.0;
    %535 = cast(%534, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
    %536 = log10(%533) /* ty=Tensor[(8, 12, 15), float64] */;
    %537 = cast(%536, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
    %538 = reshape(%535, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
    %539 = reshape(%537, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
    %540 = @func_6745(%538, %539) /* ty=(Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), uint16], Tensor[(8, 12, 15), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
    %541 = %540.2;
    (%534, %536, %541)
  };
  %542() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(3, 10, 8), uint16]) */
}

def @func_9806() -> (Tensor[(5, 4, 2), uint16],) {
  @func_9804() /* ty=(Tensor[(5, 4, 2), uint16],) */
}

def @func_12917() -> (Tensor[(3, 10, 8), uint16], Tensor[(1400, 1), float64]) {
  @func_12915() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(1400, 1), float64]) */
}

def @func_10963() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) {
  @func_10961() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_2895() -> (Tensor[(3, 10, 8), float32],) {
  @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_10694() -> (Tensor[(3, 10, 8), float64],) {
  %544 = fn () -> (Tensor[(3, 10, 8), float64],) {
    %543 = @func_7070() /* ty=Tensor[(3, 10, 8), float64] */;
    (%543,)
  };
  %544() /* ty=(Tensor[(3, 10, 8), float64],) */
}

def @func_12862() -> (Tensor[(3, 10, 8), float32],) {
  @func_12860() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_10135() -> (Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
  %554 = fn () -> (Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
    %545 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
    %546 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %547 = %546.0;
    %548 = cast(%547, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
    %549 = reshape(%548, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
    %550 = @func_3522(%549) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
    %551 = %545.2;
    %552 = %550.1;
    %553 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
    (%551, %547, %552, %553)
  };
  %554() /* ty=(Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */
}

def @func_9018(%var_9017: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(8, 7, 4), int64], Tensor[(224), float64]) {
  %569 = fn (%var_9004: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(8, 7, 4), int64], Tensor[(224), float64]) {
    %555 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %556 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
    %557 = cast(%var_9004, dtype="float64") /* ty=Tensor[(8, 12, 15), float64] */;
    %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
    %559 = cast(%556, dtype="float64") /* ty=Tensor[(8, 12, 15), float64] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %561 = cast(meta[relay.Constant][20] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %562 = cast(meta[relay.Constant][20] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %563 = reshape(%561, newshape=[8, 7, 4]) /* ty=Tensor[(8, 7, 4), float64] */;
    %564 = reshape(%562, newshape=[8, 7, 4]) /* ty=Tensor[(8, 7, 4), float64] */;
    %565 = @func_8203(%563, %564) /* ty=(Tensor[(8, 7, 4), int64],) */;
    %566 = %555.1;
    %567 = power(%559, %560) /* ty=Tensor[(8, 12, 15), float64] */;
    %568 = %565.0;
    (%566, %567, %568, meta[relay.Constant][20] /* ty=Tensor[(224), float64] */)
  };
  %569(%var_9017) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(8, 7, 4), int64], Tensor[(224), float64]) */
}

def @func_7617() -> (Tensor[(135), uint16], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32]) {
  @func_7615() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_8819() -> (Tensor[(13, 6, 3), float32],) {
  @func_8817() /* ty=(Tensor[(13, 6, 3), float32],) */
}

def @func_9269() -> Tensor[(3, 10, 8), float32] {
  %570 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %570.0
}

def @func_2266(%var_2258: Tensor[(4, 7, 5), bool], %var_2259: Tensor[(4, 7, 5), bool]) -> Tensor[(4, 7, 5), bool] {
  %571 = cast(%var_2259, dtype="bool") /* ty=Tensor[(4, 7, 5), bool] */;
  %572 = shape_of(%var_2258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%var_2258, dtype="bool") /* ty=Tensor[(4, 7, 5), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%573, %574) /* ty=Tensor[(4, 7, 5), bool] */
}

def @func_12834(%var_12831: Tensor[(135, 1), uint16], %var_12832: Tensor[(135, 3), uint16], %var_12833: Tensor[(2025), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(2025), uint16], Tensor[(3, 10, 8), float64], Tensor[(135), uint16], Tensor[(135, 3), uint32], Tensor[(2025), float32]) {
  %594 = fn (%var_12749: Tensor[(135, 1), uint16], %var_12783: Tensor[(135, 3), uint16], %var_12815: Tensor[(2025), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(2025), uint16], Tensor[(3, 10, 8), float64], Tensor[(135), uint16], Tensor[(135, 3), uint32], Tensor[(2025), float32]) {
    %575 = cast(%var_12749, dtype="uint16") /* ty=Tensor[(135, 1), uint16] */;
    %576 = cast(meta[relay.Constant][21] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %577 = reshape(%575, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %578 = reshape(%576, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %579 = @func_4197(%577, %578) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
    %580 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
    %581 = @func_7615() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32]) */;
    %582 = cast(%var_12749, dtype="uint32") /* ty=Tensor[(135, 1), uint32] */;
    %583 = cast(%var_12783, dtype="uint32") /* ty=Tensor[(135, 3), uint32] */;
    %584 = cast(%var_12815, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %585 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(2025), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %586 = cast(meta[relay.Constant][21] /* ty=Tensor[(2025), uint16] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?), float32] */;
    %588 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
    %589 = %579.4;
    %590 = %580.0;
    %591 = %581.0;
    %592 = subtract(%582, %583) /* ty=Tensor[(135, 3), uint32] */;
    %593 = power(%586, %587) /* ty=Tensor[(2025), float32] */;
    (%588, %589, %590, %591, %592, %593)
  };
  %594(%var_12831, %var_12832, %var_12833) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(2025), uint16], Tensor[(3, 10, 8), float64], Tensor[(135), uint16], Tensor[(135, 3), uint32], Tensor[(2025), float32]) */
}

def @func_13322(%var_13320: Tensor[(12, 8, 5), uint64], %var_13321: Tensor[(12, 8, 5), uint64]) -> (Tensor[(12, 8, 5), bool],) {
  %600 = fn (%var_13308: Tensor[(12, 8, 5), uint64], %var_13309: Tensor[(12, 8, 5), uint64]) -> (Tensor[(12, 8, 5), bool],) {
    %595 = cast(%var_13309, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
    %596 = shape_of(%var_13308, dtype="int32") /* ty=Tensor[(3), int32] */;
    %597 = cast(%var_13308, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
    %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %599 = not_equal(%597, %598) /* ty=Tensor[(12, 8, 5), bool] */;
    (%599,)
  };
  %600(%var_13320, %var_13321) /* ty=(Tensor[(12, 8, 5), bool],) */
}

def @func_7071() -> Tensor[(3, 10, 8), float64] {
  %602 = fn () -> Tensor[(3, 10, 8), float64] {
    %601 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %601.1
  };
  %602() /* ty=Tensor[(3, 10, 8), float64] */
}

def @func_9247() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_9245() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_7245() -> (Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(3, 10, 8), float32], Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32]) {
  @func_7243() /* ty=(Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(3, 10, 8), float32], Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_13391() -> (Tensor[(3, 10, 8), float32],) {
  %605 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %603 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %604 = %603.0;
    (%604,)
  };
  %605() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_12274() -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) {
  @func_12272() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) */
}

def @func_16639(%var_16637: Tensor[(2, 720), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(2, 720), float32]) {
  @func_16636(%var_16637) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(2, 720), float32]) */
}

def @func_12295(%var_12293: Tensor[(12, 15, 16), float32]) -> Tensor[(12, 15, 16), float32] {
  @func_12292(%var_12293) /* ty=Tensor[(12, 15, 16), float32] */
}

def @func_3525(%var_3523: Tensor[(3, 10, 8), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
  @func_3522(%var_3523) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_9584(%var_9583: Tensor[(1440), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(224), float64], Tensor[(1440), float32]) {
  %612 = fn (%var_9570: Tensor[(1440), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(224), float64], Tensor[(1440), float32]) {
    %606 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %607 = cast(%var_9570, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %608 = reshape(%607, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
    %609 = @func_9016(%608) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(8, 7, 4), int64], Tensor[(224), float64]) */;
    %610 = %606.0;
    %611 = %609.3;
    (%610, %611, %var_9570)
  };
  %612(%var_9583) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(224), float64], Tensor[(1440), float32]) */
}

def @func_3910(%var_3904: Tensor[(40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) {
  %613 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %614 = cast(%var_3904, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %615 = reshape(%614, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint16] */;
  %616 = @func_3485(%615) /* ty=(Tensor[(5, 4, 2), uint16],) */;
  %617 = %613.0;
  %618 = %616.0;
  (%617, %618, %var_3904)
}

def @func_9049() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %619 = @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %620 = %619.0;
  %621 = @func_8169() /* ty=Tensor[(3, 10, 8), float32] */;
  (%620, %621)
}

def @func_10444() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
  %625 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
    %622 = @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %623 = %622.0;
    %624 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
    (%623, %624)
  };
  %625() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */
}

def @func_17583() -> Tensor[(3, 10, 8), float32] {
  %626 = @func_7615() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32]) */;
  %626.2
}

def @func_17871() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %627 = @func_15952() /* ty=Tensor[(3, 10, 8), float32] */;
  %628 = @func_11770() /* ty=Tensor[(3, 10, 8), float32] */;
  %629 = @func_15952() /* ty=Tensor[(3, 10, 8), float32] */;
  (%627, %628, %629)
}

def @func_3042() -> Tensor[(3, 10, 8), float32] {
  %631 = fn () -> Tensor[(3, 10, 8), float32] {
    %630 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %630.1
  };
  %631() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_4939() -> (Tensor[(3, 10, 8), float32],) {
  @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_7560() -> (Tensor[(3, 10, 8), float32],) {
  @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_9804() -> (Tensor[(5, 4, 2), uint16],) {
  %632 = @func_9495() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) */;
  %633 = %632.2;
  (%633,)
}

def @func_13730(%var_13595: Tensor[(2025), uint16], %var_13671: Tensor[(2025), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(2025), int32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(2025), float64]) {
  %634 = cast(%var_13595, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %635 = reshape(%634, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %636 = @func_5192(%635) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), bool]) */;
  %637 = @func_13375() /* ty=(Tensor[(1440), uint32],) */;
  %638 = cast(%var_13595, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %639 = sigmoid(%638) /* ty=Tensor[(2025), float64] */;
  %640 = cast(%var_13671, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %641 = shape_of(%639, dtype="int32") /* ty=Tensor[(1), int32] */;
  %642 = cast(%639, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?), int32] */;
  %644 = maximum(%642, %643) /* ty=Tensor[(2025), int32] */;
  %645 = cast(%639, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(1), int32] */;
  %647 = cast(%644, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?), int32] */;
  %649 = @func_9101() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %650 = cast(%var_13595, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %651 = @func_13339() /* ty=Tensor[(3, 10, 8), float32] */;
  %652 = %636.1;
  %653 = %637.0;
  %654 = minimum(%647, %648) /* ty=Tensor[(2025), int32] */;
  %655 = @func_13013() /* ty=Tensor[(3, 10, 8), float32] */;
  %656 = %649.1;
  %657 = acos(%650) /* ty=Tensor[(2025), float64] */;
  (%651, %652, %653, %654, %655, %656, %657)
}

def @func_16102() -> Tensor[(10, 10, 9), float32] {
  %659 = fn () -> Tensor[(10, 10, 9), float32] {
    %658 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(10, 10, 9), float32] */;
    log2(%658) /* ty=Tensor[(10, 10, 9), float32] */
  };
  %659() /* ty=Tensor[(10, 10, 9), float32] */
}

def @func_13376() -> (Tensor[(1440), uint32],) {
  %662 = fn () -> (Tensor[(1440), uint32],) {
    %660 = @func_12272() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) */;
    %661 = %660.0;
    (%661,)
  };
  %662() /* ty=(Tensor[(1440), uint32],) */
}

def @func_14833() -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
  @func_14831() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_6976() -> (Tensor[(3, 10, 8), float64],) {
  @func_6974() /* ty=(Tensor[(3, 10, 8), float64],) */
}

def @func_14658() -> (Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(1400, 1), float64]) {
  %663 = @func_12915() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(1400, 1), float64]) */;
  %664 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
  %665 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  %666 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  %667 = %663.1;
  (%664, %665, %666, %667)
}

def @func_18394() -> Tensor[(3, 10, 8), float32] {
  %668 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %668.1
}

def @func_6242() -> (Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) {
  %682 = fn () -> (Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) {
    %669 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %670 = %669.2;
    %671 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %672 = %671.0;
    %673 = cast(%672, dtype="uint16") /* ty=Tensor[(3, 10, 8), uint16] */;
    %674 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
    %675 = cast(%670, dtype="uint16") /* ty=Tensor[(3, 10, 8), uint16] */;
    %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %677 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %678 = %677.0;
    %679 = cast(%678, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
    %680 = left_shift(%675, %676) /* ty=Tensor[(3, 10, 8), uint16] */;
    %681 = log2(%679) /* ty=Tensor[(3, 10, 8), float32] */;
    (%680, %681)
  };
  %682() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */
}

def @func_17580() -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16]) {
  %689 = fn () -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16]) {
    %683 = @func_10693() /* ty=(Tensor[(3, 10, 8), float64],) */;
    %684 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
    %685 = @func_15773() /* ty=(Tensor[(5, 4, 2), uint16],) */;
    %686 = %683.0;
    %687 = %684.4;
    %688 = %685.0;
    (%686, %687, %688)
  };
  %689() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16]) */
}

def @func_3172() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) {
  %690 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %691 = cast(meta[relay.Constant][23] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %692 = reshape(%691, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %693 = @func_608(%692) /* ty=(Tensor[(8, 12, 15), float32],) */;
  %694 = %690.0;
  %695 = %693.0;
  (%694, %695, meta[relay.Constant][23] /* ty=Tensor[(1440), uint32] */)
}

def @func_14558() -> (Tensor[(1400, 1), float64], Tensor[(3, 10, 8), float32]) {
  @func_14556() /* ty=(Tensor[(1400, 1), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_9051() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_9049() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_611(%var_609: Tensor[(8, 12, 15), uint32]) -> (Tensor[(8, 12, 15), float32],) {
  @func_608(%var_609) /* ty=(Tensor[(8, 12, 15), float32],) */
}

def @func_16570() -> Tensor[(13, 6, 3), float32] {
  %696 = @func_15264() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40, 1), uint16], Tensor[(1, 135), uint16]) */;
  %696.1
}

def @func_6572(%var_6568: Tensor[(5, 2, 8), float64]) -> Tensor[(5, 2, 8), float64] {
  %697 = cast(%var_6568, dtype="float64") /* ty=Tensor[(5, 2, 8), float64] */;
  sinh(%697) /* ty=Tensor[(5, 2, 8), float64] */
}

def @func_14348() -> (Tensor[(3, 10, 8), uint16],) {
  %700 = fn () -> (Tensor[(3, 10, 8), uint16],) {
    %698 = @func_12272() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16]) */;
    %699 = %698.1;
    (%699,)
  };
  %700() /* ty=(Tensor[(3, 10, 8), uint16],) */
}

def @func_4312(%var_4311: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) {
  %710 = fn (%var_4302: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) {
    %701 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %702 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %703 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
    %704 = cast(%var_4302, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %705 = reshape(%704, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
    %706 = %701.1;
    %707 = %702.0;
    %708 = %703.2;
    %709 = @func_3812(%705) /* ty=Tensor[(10, 10, 14), bool] */;
    (%706, %707, %708, %709, %var_4302)
  };
  %710(%var_4311) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */
}

def @func_6767() -> Tensor[(3, 10, 8), float32] {
  @func_6765() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_17932() -> (Tensor[(10, 13, 12), float64], Tensor[(3, 10, 8), float32]) {
  @func_17930() /* ty=(Tensor[(10, 13, 12), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_13242() -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float32], Tensor[(1400, ?), int32]) {
  %723 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float32], Tensor[(1400, ?), int32]) {
    %711 = @func_8666() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */;
    %712 = @func_8262() /* ty=Tensor[(1400, 1), float64] */;
    %713 = cast(%712, dtype="float32") /* ty=Tensor[(1400, 1), float32] */;
    %714 = cast(%712, dtype="float32") /* ty=Tensor[(1400, 1), float32] */;
    %715 = acosh(%714) /* ty=Tensor[(1400, 1), float32] */;
    %716 = cast(%715, dtype="int32") /* ty=Tensor[(1400, 1), int32] */;
    %717 = shape_of(%712, dtype="int32") /* ty=Tensor[(2), int32] */;
    %718 = cast(%712, dtype="int32") /* ty=Tensor[(1400, 1), int32] */;
    %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %720 = %711.1;
    %721 = erf(%713) /* ty=Tensor[(1400, 1), float32] */;
    %722 = bitwise_and(%718, %719) /* ty=Tensor[(1400, ?), int32] */;
    (%720, %721, %722)
  };
  %723() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float32], Tensor[(1400, ?), int32]) */
}

def @func_16224() -> Tensor[(3, 10, 8), float32] {
  %724 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %724.1
}

def @func_14831() -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
  %725 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %726 = @func_11918() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %727 = %725.1;
  %728 = %726.0;
  (%727, %728)
}

def @func_10367(%var_10365: Tensor[(1, 12, 10), float32]) -> Tensor[(1, 12, 10), float32] {
  @func_10364(%var_10365) /* ty=Tensor[(1, 12, 10), float32] */
}

def @func_5192(%var_5165: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), bool]) {
  %729 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %730 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %731 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %732 = cast(meta[relay.Constant][24] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %733 = cast(meta[relay.Constant][25] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %734 = reshape(%732, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %735 = reshape(%733, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %736 = @func_3236(%734, %735) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */;
  %737 = %736.2;
  %738 = cast(%var_5165, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(1), int32] */;
  %740 = cast(%737, dtype="int32") /* ty=Tensor[(2025), int32] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?), int32] */;
  %742 = multiply(%740, %741) /* ty=Tensor[(2025), int32] */;
  %743 = cast(%742, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %744 = shape_of(%737, dtype="int32") /* ty=Tensor[(1), int32] */;
  %745 = cast(%737, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?), bool] */;
  %747 = %729.0;
  %748 = %730.1;
  %749 = %731.0;
  %750 = equal(%745, %746) /* ty=Tensor[(2025), bool] */;
  (%747, %748, meta[relay.Constant][24] /* ty=Tensor[(135), uint16] */, meta[relay.Constant][25] /* ty=Tensor[(140), bool] */, %749, %750)
}

def @func_11744() -> (Tensor[(3, 10, 8), float32], Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_11742() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_9348() -> (Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) {
  @func_9346() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) */
}

def @func_4641() -> (Tensor[(3, 10, 8), float32],) {
  %753 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %751 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %752 = %751.0;
    (%752,)
  };
  %753() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_10717() -> (Tensor[(3, 10, 8), float32],) {
  %756 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %754 = @func_7652() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %755 = %754.0;
    (%755,)
  };
  %756() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_3522(%var_3504: Tensor[(3, 10, 8), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) {
  %757 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %758 = %757.0;
  %759 = cast(%var_3504, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %763 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %764 = minimum(%761, %762) /* ty=Tensor[(3, 10, 8), float64] */;
  %765 = %763.0;
  (%764, %765)
}

def @func_17930() -> (Tensor[(10, 13, 12), float64], Tensor[(3, 10, 8), float32]) {
  %766 = @func_15181() /* ty=(Tensor[(10, 13, 12), float64],) */;
  %767 = @func_11320() /* ty=(Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) */;
  %768 = %766.0;
  %769 = %767.1;
  (%768, %769)
}

def @func_9271() -> Tensor[(3, 10, 8), float32] {
  @func_9269() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_11742() -> (Tensor[(3, 10, 8), float32], Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %770 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %771 = @func_10134() /* ty=(Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
  %772 = @func_8422() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %773 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %774 = %770.1;
  %775 = %771.0;
  %776 = %772.0;
  %777 = %773.0;
  (%774, %775, %776, %777)
}

def @func_3485(%var_3472: Tensor[(5, 4, 2), uint16]) -> (Tensor[(5, 4, 2), uint16],) {
  %778 = cast(%var_3472, dtype="uint16") /* ty=Tensor[(5, 4, 2), uint16] */;
  %779 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(5, 4, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 4, 2), uint16] */, dtype="uint16") /* ty=Tensor[(5, 4, 2), uint16] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %782 = subtract(%780, %781) /* ty=Tensor[(5, 4, 2), uint16] */;
  (%782,)
}

def @func_3127() -> Tensor[(13, 6, 3), float32] {
  %784 = fn () -> Tensor[(13, 6, 3), float32] {
    %783 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 6, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 6, 3), float32] */;
    log10(%783) /* ty=Tensor[(13, 6, 3), float32] */
  };
  %784() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_6954() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(2, 6, 16), float32], Tensor[(192), float32]) {
  %785 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %786 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  %787 = cast(%786, dtype="float64") /* ty=Tensor[(13, 6, 3), float64] */;
  %788 = cast(meta[relay.Constant][28] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %789 = reshape(%788, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), float32] */;
  %790 = %785.1;
  %791 = sigmoid(%787) /* ty=Tensor[(13, 6, 3), float64] */;
  %792 = @func_2507(%789) /* ty=Tensor[(2, 6, 16), float32] */;
  (%790, %791, %792, meta[relay.Constant][28] /* ty=Tensor[(192), float32] */)
}

def @func_10985(%var_10984: Tensor[(2, 700), float64]) -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(2, 700), float64], Tensor[(3, 10, 8), float32]) {
  %803 = fn (%var_10977: Tensor[(2, 700), float64]) -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(2, 700), float64], Tensor[(3, 10, 8), float32]) {
    %793 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
    %794 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %795 = cast(%var_10977, dtype="float64") /* ty=Tensor[(2, 700), float64] */;
    %796 = reshape(%795, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %797 = @func_8617(%796) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */;
    %798 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %799 = %793.2;
    %800 = %794.0;
    %801 = %797.3;
    %802 = %798.1;
    (%799, %800, %801, %var_10977, %802)
  };
  %803(%var_10984) /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(2, 700), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_8852(%var_8851: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
  %810 = fn (%var_8844: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
    %804 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %805 = cast(%var_8844, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %806 = reshape(%805, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %807 = @func_6295(%806) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(1400), float64]) */;
    %808 = %804.1;
    %809 = %807.0;
    (%808, %809, %var_8844)
  };
  %810(%var_8851) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) */
}

def @func_15683(%var_15681: uint16) -> (Tensor[(14, 15, 1), uint16], Tensor[(3, 10, 8), float32]) {
  @func_15680(%var_15681) /* ty=(Tensor[(14, 15, 1), uint16], Tensor[(3, 10, 8), float32]) */
}

def @func_8667() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) {
  %816 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) {
    %811 = cast(meta[relay.Constant][29] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %812 = reshape(%811, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %813 = @func_6891(%812) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32]) */;
    %814 = @func_6563() /* ty=Tensor[(3, 10, 8), float32] */;
    %815 = %813.0;
    (%814, %815, meta[relay.Constant][29] /* ty=Tensor[(135), uint16] */)
  };
  %816() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */
}

def @func_12039() -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_12037() /* ty=(Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_4564(%var_4498: Tensor[(40), uint16], %var_4499: Tensor[(135), uint16], %var_4504: Tensor[(1400), float64]) -> (Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  %817 = cast(%var_4498, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %818 = cast(%var_4499, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %819 = reshape(%817, newshape=[40]) /* ty=Tensor[(40), uint16] */;
  %820 = reshape(%818, newshape=[15, 9]) /* ty=Tensor[(15, 9), uint16] */;
  %821 = @func_4454(%819, %820) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16], Tensor[(3, 15, 3), float32], Tensor[(15, 9), uint16], Tensor[(2025), uint16]) */;
  %822 = cast(%var_4504, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %823 = reshape(%822, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
  %824 = cast(meta[relay.Constant][30] /* ty=Tensor[(6), int8] */, dtype="int8") /* ty=Tensor[(6), int8] */;
  %825 = %821.4;
  %826 = cast(%825, dtype="uint16") /* ty=Tensor[(15, 9), uint16] */;
  %827 = reshape(%824, newshape=[6, 1]) /* ty=Tensor[(6, 1), int8] */;
  %828 = reshape(%826, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %829 = @func_3440(%827, %828) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 1, 2), uint8], Tensor[(140), bool], Tensor[(140), bool], Tensor[(6, 135), uint64]) */;
  %830 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(13, 6, 3), float64] */;
  %832 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %833 = @func_3812(%823) /* ty=Tensor[(10, 10, 14), bool] */;
  %834 = %829.3;
  %835 = sin(%831) /* ty=Tensor[(13, 6, 3), float64] */;
  %836 = %832.1;
  %837 = @func_4048() /* ty=Tensor[(13, 6, 3), float32] */;
  (%825, %var_4498, %var_4499, %833, %var_4504, %834, meta[relay.Constant][30] /* ty=Tensor[(6), int8] */, %835, %836, %837)
}

def @func_6516() -> (Tensor[(3, 10, 8), float32],) {
  %838 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %839 = %838.0;
  (%839,)
}

def @func_11207() -> Tensor[(3, 10, 8), float32] {
  %840 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %840.1
}

def @func_11772() -> Tensor[(3, 10, 8), float32] {
  @func_11770() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_16572() -> Tensor[(13, 6, 3), float32] {
  @func_16570() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_18613() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %845 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %841 = @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %842 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %843 = %841.0;
    %844 = %842.0;
    (%843, %844)
  };
  %845() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_15967() -> Tensor[(3, 10, 8), float32] {
  @func_15965() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_4763() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  %846 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %847 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %848 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %849 = %846.0;
  %850 = %847.0;
  %851 = %848.1;
  (%849, %850, %851)
}

def @func_17723() -> (Tensor[(40), uint16],) {
  @func_17721() /* ty=(Tensor[(40), uint16],) */
}

def @func_11476() -> (Tensor[(3, 10, 8), float32],) {
  %854 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %852 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %853 = %852.0;
    (%853,)
  };
  %854() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_16863() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), int64], Tensor[(1440), float32]) {
  @func_16861() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), int64], Tensor[(1440), float32]) */
}

def @func_5610() -> Tensor[(3, 10, 8), float32] {
  %856 = fn () -> Tensor[(3, 10, 8), float32] {
    %855 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %855.0
  };
  %856() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_15845() -> (Tensor[(1400, 14), uint32],) {
  %862 = fn () -> (Tensor[(1400, 14), uint32],) {
    %857 = @func_14658() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(1400, 1), float64]) */;
    %858 = %857.3;
    %859 = cast(%858, dtype="uint32") /* ty=Tensor[(1400, 1), uint32] */;
    %860 = cast(meta[relay.Constant][31] /* ty=Tensor[(1400, 14), float64] */, dtype="uint32") /* ty=Tensor[(1400, 14), uint32] */;
    %861 = left_shift(%859, %860) /* ty=Tensor[(1400, 14), uint32] */;
    (%861,)
  };
  %862() /* ty=(Tensor[(1400, 14), uint32],) */
}

def @func_17040() -> (Tensor[(3, 10, 8), uint16], Tensor[(4, 7, 5), bool]) {
  %867 = fn () -> (Tensor[(3, 10, 8), uint16], Tensor[(4, 7, 5), bool]) {
    %863 = @func_14347() /* ty=(Tensor[(3, 10, 8), uint16],) */;
    %864 = @func_16682() /* ty=(Tensor[(4, 7, 5), bool],) */;
    %865 = %863.0;
    %866 = %864.0;
    (%865, %866)
  };
  %867() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(4, 7, 5), bool]) */
}

def @func_11320() -> (Tensor[(1400, ?), int16], Tensor[(3, 10, 8), float32]) {
  %868 = @func_8262() /* ty=Tensor[(1400, 1), float64] */;
  %869 = cast(%868, dtype="float32") /* ty=Tensor[(1400, 1), float32] */;
  %870 = cos(%869) /* ty=Tensor[(1400, 1), float32] */;
  %871 = cast(%868, dtype="int16") /* ty=Tensor[(1400, 1), int16] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(2), int32] */;
  %873 = cast(%870, dtype="int16") /* ty=Tensor[(1400, 1), int16] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %875 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %876 = bitwise_xor(%873, %874) /* ty=Tensor[(1400, ?), int16] */;
  %877 = %875.0;
  (%876, %877)
}

def @func_12128(%var_12126: Tensor[(4, 6, 12), bool], %var_12127: Tensor[(4, 6, 12), bool]) -> (Tensor[(4, 6, 12), bool],) {
  @func_12124(%var_12126, %var_12127) /* ty=(Tensor[(4, 6, 12), bool],) */
}

def @func_17598(%var_17596: Tensor[(14, 15, 12), float32], %var_17597: Tensor[(14, 15, 12), float32]) -> (Tensor[(14, 15, 12), bool],) {
  @func_17594(%var_17596, %var_17597) /* ty=(Tensor[(14, 15, 12), bool],) */
}

def @func_16185(%var_16183: Tensor[(135), uint16], %var_16184: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
  %888 = fn (%var_16179: Tensor[(135), uint16], %var_16180: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
    %878 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
    %879 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %880 = cast(%var_16179, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %881 = cast(%var_16180, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %882 = reshape(%880, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %883 = reshape(%881, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %884 = @func_4197(%882, %883) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
    %885 = %878.0;
    %886 = %879.0;
    %887 = %884.3;
    (%885, %886, %887, %var_16179, %var_16180)
  };
  %888(%var_16183, %var_16184) /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */
}

def @func_11562(%var_11541: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), uint16], Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float64]) {
  %889 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
  %890 = %889.1;
  %891 = cast(%var_11541, dtype="uint16") /* ty=Tensor[(8, 12, 15), uint16] */;
  %892 = shape_of(%890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%890, dtype="uint16") /* ty=Tensor[(8, 12, 15), uint16] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %895 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %896 = cast(%var_11541, dtype="float64") /* ty=Tensor[(8, 12, 15), float64] */;
  %897 = bitwise_and(%893, %894) /* ty=Tensor[(8, 12, 15), uint16] */;
  %898 = %895.0;
  %899 = @func_8253() /* ty=Tensor[(8, 12, 15), float32] */;
  %900 = cosh(%896) /* ty=Tensor[(8, 12, 15), float64] */;
  (%897, %898, %899, %900)
}

def @func_11619() -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float64]) {
  %901 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
  %902 = %901.0;
  %903 = @func_7070() /* ty=Tensor[(3, 10, 8), float64] */;
  (%902, %903)
}

def @func_11989(%var_11987: Tensor[(3, 5, 8), float64]) -> Tensor[(3, 5, 8), float64] {
  @func_11986(%var_11987) /* ty=Tensor[(3, 5, 8), float64] */
}

def @func_18269() -> (Tensor[(3, 10, 8), float32],) {
  %904 = @func_8236() /* ty=Tensor[(3, 10, 8), float32] */;
  (%904,)
}

def @func_16939() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_16937() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_14513() -> Tensor[(13, 6, 3), float32] {
  @func_14511() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_13828() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %905 = @func_9495() /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) */;
  %906 = @func_12416() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %907 = %905.1;
  %908 = %906.1;
  (%907, %908)
}

def @func_10596() -> (Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %915 = fn () -> (Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %909 = @func_6954() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(2, 6, 16), float32], Tensor[(192), float32]) */;
    %910 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
    %911 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %912 = %909.1;
    %913 = %910.0;
    %914 = %911.1;
    (%912, %913, %914)
  };
  %915() /* ty=(Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_15680(%var_15665: uint16) -> (Tensor[(14, 15, 1), uint16], Tensor[(3, 10, 8), float32]) {
  %916 = cast(%var_15665, dtype="uint16") /* ty=uint16 */;
  %917 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 15, 1), uint16] */, dtype="uint16") /* ty=Tensor[(14, 15, 1), uint16] */;
  %918 = @func_11918() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %919 = logical_xor(%916, %917) /* ty=Tensor[(14, 15, 1), uint16] */;
  %920 = %918.0;
  (%919, %920)
}

def @func_4902() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %925 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %921 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %922 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %923 = %921.0;
    %924 = %922.0;
    (%923, %924)
  };
  %925() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_17090(%var_17088: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(8, 12, 15), bool], Tensor[(1, 12, 10), float32], Tensor[(120), float32]) {
  @func_17087(%var_17088) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(8, 12, 15), bool], Tensor[(1, 12, 10), float32], Tensor[(120), float32]) */
}

def @func_11835() -> Tensor[(3, 10, 8), float32] {
  %927 = fn () -> Tensor[(3, 10, 8), float32] {
    %926 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %926.0
  };
  %927() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_12058() -> (Tensor[(8, 7, 4), int64],) {
  %930 = fn () -> (Tensor[(8, 7, 4), int64],) {
    %928 = @func_10343() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */;
    %929 = %928.1;
    (%929,)
  };
  %930() /* ty=(Tensor[(8, 7, 4), int64],) */
}

def @func_17950() -> (Tensor[(13, 6, 3), float32],) {
  %931 = @func_14511() /* ty=Tensor[(13, 6, 3), float32] */;
  (%931,)
}

def @func_7148() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) {
  %932 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
  %933 = cast(meta[relay.Constant][33] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %934 = cast(meta[relay.Constant][34] /* ty=Tensor[(40), uint16] */, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %935 = cast(meta[relay.Constant][35] /* ty=Tensor[(1400, 1), float64] */, dtype="float64") /* ty=Tensor[(1400, 1), float64] */;
  %936 = reshape(%933, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
  %937 = reshape(%934, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint16] */;
  %938 = reshape(%935, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %939 = @func_6464(%936, %937, %938) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %940 = %932.1;
  %941 = %939.1;
  (%940, %941, meta[relay.Constant][33] /* ty=Tensor[(300), float32] */, meta[relay.Constant][34] /* ty=Tensor[(40), uint16] */, meta[relay.Constant][35] /* ty=Tensor[(1400, 1), float64] */)
}

def @func_5664() -> (Tensor[(3, 10, 8), float32],) {
  %942 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %943 = %942.0;
  (%943,)
}

def @func_4980(%var_4979: Tensor[(40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40), uint16], Tensor[(1400), float64], Tensor[(45, 3), float32]) {
  %956 = fn (%var_4960: Tensor[(40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40), uint16], Tensor[(1400), float64], Tensor[(45, 3), float32]) {
    %944 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %945 = cast(%var_4960, dtype="uint16") /* ty=Tensor[(40), uint16] */;
    %946 = cast(meta[relay.Constant][36] /* ty=Tensor[(45, 3), uint16] */, dtype="uint16") /* ty=Tensor[(45, 3), uint16] */;
    %947 = cast(meta[relay.Constant][37] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %948 = reshape(%945, newshape=[40]) /* ty=Tensor[(40), uint16] */;
    %949 = reshape(%946, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %950 = reshape(%947, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %951 = @func_4564(%948, %949, %950) /* ty=(Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
    %952 = cast(meta[relay.Constant][36] /* ty=Tensor[(45, 3), uint16] */, dtype="float32") /* ty=Tensor[(45, 3), float32] */;
    %953 = %944.0;
    %954 = %951.8;
    %955 = sinh(%952) /* ty=Tensor[(45, 3), float32] */;
    (%953, %954, %var_4960, meta[relay.Constant][37] /* ty=Tensor[(1400), float64] */, %955)
  };
  %956(%var_4979) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40), uint16], Tensor[(1400), float64], Tensor[(45, 3), float32]) */
}

def @func_7434() -> (Tensor[(3, 10, 8), float32],) {
  %957 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %958 = %957.0;
  (%958,)
}

def @func_11396() -> (Tensor[(3, 10, 8), float32],) {
  %959 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %960 = %959.0;
  (%960,)
}

def @func_7558() -> (Tensor[(3, 10, 8), float32],) {
  %961 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %962 = %961.1;
  (%962,)
}

def @func_6564() -> Tensor[(3, 10, 8), float32] {
  %964 = fn () -> Tensor[(3, 10, 8), float32] {
    %963 = @func_6516() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %963.0
  };
  %964() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_7652() -> (Tensor[(3, 10, 8), float32],) {
  %965 = @func_7168() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %966 = %965.0;
  (%966,)
}

def @func_8940(%var_8938: Tensor[(3, 10, 8), float64]) -> (Tensor[(3, 10, 8), float64],) {
  @func_8937(%var_8938) /* ty=(Tensor[(3, 10, 8), float64],) */
}

def @func_12037() -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %967 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %968 = @func_7748() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %969 = @func_10343() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */;
  %970 = %967.1;
  %971 = %968.1;
  %972 = %969.2;
  (%970, %971, %972)
}

def @func_14112(%var_14111: Tensor[(1440), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), float32], Tensor[(8, 12, 15), float32]) {
  %983 = fn (%var_14084: Tensor[(1440), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), float32], Tensor[(8, 12, 15), float32]) {
    %973 = @func_11619() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float64]) */;
    %974 = cast(%var_14084, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %975 = reshape(%974, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
    %976 = @func_11385(%975) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
    %977 = cast(%var_14084, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %978 = reshape(%977, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
    %979 = @func_11562(%978) /* ty=(Tensor[(8, 12, 15), uint16], Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float64]) */;
    %980 = %973.0;
    %981 = %976.2;
    %982 = %979.2;
    (%980, %981, %var_14084, %982)
  };
  %983(%var_14111) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), float32], Tensor[(8, 12, 15), float32]) */
}

def @func_13475(%var_13473: Tensor[(1400, 14), int16]) -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 14), int64]) {
  @func_13472(%var_13473) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1400, 14), int64]) */
}

def @func_2270(%var_2268: Tensor[(4, 7, 5), bool], %var_2269: Tensor[(4, 7, 5), bool]) -> Tensor[(4, 7, 5), bool] {
  @func_2266(%var_2268, %var_2269) /* ty=Tensor[(4, 7, 5), bool] */
}

def @func_11415() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_11413() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_3020() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %988 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %984 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %985 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %986 = %984.0;
    %987 = %985.0;
    (%986, %987)
  };
  %988() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_2858() -> (Tensor[(3, 10, 8), float32],) {
  %991 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %989 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
    %990 = cos(%989) /* ty=Tensor[(3, 10, 8), float32] */;
    (%990,)
  };
  %991() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_13965() -> (Tensor[(3, 10, 8), float32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(10, 4, 1), float64], Tensor[(40), float64]) {
  %1000 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(10, 4, 1), float64], Tensor[(40), float64]) {
    %992 = @func_10134() /* ty=(Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
    %993 = cast(meta[relay.Constant][39] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %994 = reshape(%993, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
    %995 = cast(meta[relay.Constant][40] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %996 = reshape(%995, newshape=[10, 4, 1]) /* ty=Tensor[(10, 4, 1), float64] */;
    %997 = %992.1;
    %998 = @func_3812(%994) /* ty=Tensor[(10, 10, 14), bool] */;
    %999 = @func_13752(%996) /* ty=Tensor[(10, 4, 1), float64] */;
    (%997, %998, meta[relay.Constant][39] /* ty=Tensor[(1400), float64] */, %999, meta[relay.Constant][40] /* ty=Tensor[(40), float64] */)
  };
  %1000() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(10, 4, 1), float64], Tensor[(40), float64]) */
}

def @func_11863() -> Tensor[(3, 10, 8), float32] {
  @func_8111() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_8059() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_16004() -> Tensor[(8, 12, 15), float32] {
  @func_16002() /* ty=Tensor[(8, 12, 15), float32] */
}

def @func_17842(%var_17840: bool, %var_17841: Tensor[(39, 6), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float64], bool, Tensor[(1, 195), bool], Tensor[(39, 6), bool], Tensor[(3, 10, 8), float32]) {
  @func_17838(%var_17840, %var_17841) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1400, 1), float64], bool, Tensor[(1, 195), bool], Tensor[(39, 6), bool], Tensor[(3, 10, 8), float32]) */
}

def @func_13999() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
  %1009 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
    %1001 = @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1002 = @func_3755() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1003 = cast(meta[relay.Constant][41] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %1004 = reshape(%1003, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %1005 = @func_8850(%1004) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) */;
    %1006 = %1001.0;
    %1007 = %1002.0;
    %1008 = %1005.0;
    (%1006, %1007, %1008, meta[relay.Constant][41] /* ty=Tensor[(1400), float64] */)
  };
  %1009() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) */
}

def @func_4569(%var_4566: Tensor[(40), uint16], %var_4567: Tensor[(135), uint16], %var_4568: Tensor[(1400), float64]) -> (Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) {
  @func_4564(%var_4566, %var_4567, %var_4568) /* ty=(Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */
}

def @func_9158(%var_9156: float32, %var_9157: Tensor[(6, 6, 7), float32]) -> Tensor[(6, 6, 7), float32] {
  %1012 = fn (%var_9131: float32, %var_9132: Tensor[(6, 6, 7), float32]) -> Tensor[(6, 6, 7), float32] {
    %1010 = cast(%var_9131, dtype="float32") /* ty=float32 */;
    %1011 = cast(%var_9132, dtype="float32") /* ty=Tensor[(6, 6, 7), float32] */;
    maximum(%1010, %1011) /* ty=Tensor[(6, 6, 7), float32] */
  };
  %1012(%var_9156, %var_9157) /* ty=Tensor[(6, 6, 7), float32] */
}

def @func_8170() -> Tensor[(3, 10, 8), float32] {
  %1014 = fn () -> Tensor[(3, 10, 8), float32] {
    %1013 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1013.0
  };
  %1014() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_12523() -> (Tensor[(3, 10, 8), float32],) {
  @func_12521() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_13734(%var_13732: Tensor[(2025), uint16], %var_13733: Tensor[(2025), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(2025), int32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(2025), float64]) {
  @func_13730(%var_13732, %var_13733) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(2025), int32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(2025), float64]) */
}

def @func_7946(%var_7945: Tensor[(1, 40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(14, 40), float64]) {
  %1023 = fn (%var_7903: Tensor[(1, 40), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(14, 40), float64]) {
    %1015 = cast(%var_7903, dtype="uint16") /* ty=Tensor[(1, 40), uint16] */;
    %1016 = reshape(%1015, newshape=[40]) /* ty=Tensor[(40), uint16] */;
    %1017 = @func_3910(%1016) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16]) */;
    %1018 = cast(%var_7903, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
    %1019 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 40), uint16] */, dtype="float64") /* ty=Tensor[(14, 40), float64] */;
    %1020 = @func_7807() /* ty=Tensor[(3, 10, 8), float32] */;
    %1021 = %1017.1;
    %1022 = divide(%1018, %1019) /* ty=Tensor[(14, 40), float64] */;
    (%1020, %1021, %1022)
  };
  %1023(%var_7945) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(14, 40), float64]) */
}

def @func_8339() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1028 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %1024 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1025 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %1026 = %1024.0;
    %1027 = %1025.0;
    (%1026, %1027)
  };
  %1028() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_15003() -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) {
  %1033 = fn () -> (Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) {
    %1029 = @func_10443() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
    %1030 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %1031 = %1029.1;
    %1032 = %1030.0;
    (%1031, %1032)
  };
  %1033() /* ty=(Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_13363(%var_13352: Tensor[(6), int8], %var_13361: Tensor[(1440, 2), float32]) -> (Tensor[(8, 12, 15), float32], Tensor[(3, 15, 3), float32], Tensor[(6), int8], Tensor[(12, 15, 16), float32], Tensor[(1440, 2), float32]) {
  %1034 = cast(%var_13352, dtype="int8") /* ty=Tensor[(6), int8] */;
  %1035 = reshape(%1034, newshape=[3, 1, 2]) /* ty=Tensor[(3, 1, 2), int8] */;
  %1036 = @func_2387(%1035) /* ty=(Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) */;
  %1037 = cast(%var_13361, dtype="float32") /* ty=Tensor[(1440, 2), float32] */;
  %1038 = reshape(%1037, newshape=[12, 15, 16]) /* ty=Tensor[(12, 15, 16), float32] */;
  %1039 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %1040 = %1036.4;
  %1041 = @func_12292(%1038) /* ty=Tensor[(12, 15, 16), float32] */;
  (%1039, %1040, %var_13352, %1041, %var_13361)
}

def @func_13143(%var_13142: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(10, 10, 14), float64], Tensor[(3, 10, 8), float32]) {
  %1057 = fn (%var_13099: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(10, 10, 14), float64], Tensor[(3, 10, 8), float32]) {
    %1042 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1043 = cast(%var_13099, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %1044 = reshape(%1043, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %1045 = @func_8617(%1044) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */;
    %1046 = %1045.4;
    %1047 = cast(%1046, dtype="float64") /* ty=Tensor[(10, 10, 14), float64] */;
    %1048 = asin(%1047) /* ty=Tensor[(10, 10, 14), float64] */;
    %1049 = cast(%var_13099, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %1050 = shape_of(%1048, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1051 = cast(%1048, dtype="float64") /* ty=Tensor[(10, 10, 14), float64] */;
    %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1053 = @func_10716() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1054 = %1042.0;
    %1055 = divide(%1051, %1052) /* ty=Tensor[(10, 10, 14), float64] */;
    %1056 = %1053.0;
    (%1054, %1055, %1056)
  };
  %1057(%var_13142) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(10, 10, 14), float64], Tensor[(3, 10, 8), float32]) */
}

def @func_15348() -> (Tensor[(40, 1440), bool],) {
  %1058 = @func_15264() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40, 1), uint16], Tensor[(1, 135), uint16]) */;
  %1059 = %1058.4;
  %1060 = @func_13375() /* ty=(Tensor[(1440), uint32],) */;
  %1061 = %1060.0;
  %1062 = cast(%1059, dtype="bool") /* ty=Tensor[(40, 1), bool] */;
  %1063 = cast(%1061, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %1064 = logical_or(%1062, %1063) /* ty=Tensor[(40, 1440), bool] */;
  (%1064,)
}

def @func_17912() -> Tensor[(3, 10, 8), float32] {
  %1066 = fn () -> Tensor[(3, 10, 8), float32] {
    %1065 = @func_13855() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1065.0
  };
  %1066() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_15792() -> (Tensor[(135), uint16],) {
  %1069 = fn () -> (Tensor[(135), uint16],) {
    %1067 = @func_8666() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */;
    %1068 = %1067.2;
    (%1068,)
  };
  %1069() /* ty=(Tensor[(135), uint16],) */
}

def @func_11209() -> Tensor[(3, 10, 8), float32] {
  @func_11207() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_7189() -> (Tensor[(3, 10, 8), float64],) {
  %1070 = @func_7070() /* ty=Tensor[(3, 10, 8), float64] */;
  (%1070,)
}

def @func_8619(%var_8618: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) {
  %1094 = fn (%var_8565: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) {
    %1071 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
    %1072 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1073 = cast(meta[relay.Constant][43] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %1074 = reshape(%1073, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1075 = @func_4604(%1074) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(1, 40), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
    %1076 = %1075.4;
    %1077 = cast(%var_8565, dtype="float32") /* ty=Tensor[(1400), float32] */;
    %1078 = shape_of(%1076, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1079 = cast(%1076, dtype="float32") /* ty=Tensor[(1400), float32] */;
    %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1081 = subtract(%1079, %1080) /* ty=Tensor[(1400), float32] */;
    %1082 = cast(%1081, dtype="int64") /* ty=Tensor[(1400), int64] */;
    %1083 = shape_of(%var_8565, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1084 = cast(%var_8565, dtype="int64") /* ty=Tensor[(1400), int64] */;
    %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1086 = cast(%1081, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %1087 = reshape(%1086, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), float64] */;
    %1088 = cast(%1081, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %1089 = %1071.1;
    %1090 = %1072.0;
    %1091 = minimum(%1084, %1085) /* ty=Tensor[(1400), int64] */;
    %1092 = @func_3812(%1087) /* ty=Tensor[(10, 10, 14), bool] */;
    %1093 = asinh(%1088) /* ty=Tensor[(1400), float64] */;
    (%1089, meta[relay.Constant][43] /* ty=Tensor[(135), uint16] */, %1090, %1091, %1092, %1093)
  };
  %1094(%var_8618) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(3, 10, 8), float32], Tensor[(1400), int64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */
}

def @func_17585() -> Tensor[(3, 10, 8), float32] {
  @func_17583() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_6043() -> (Tensor[(3, 10, 8), float32],) {
  %1097 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %1095 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1096 = %1095.0;
    (%1096,)
  };
  %1097() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_6842() -> (Tensor[(3, 10, 8), float32],) {
  %1100 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %1098 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1099 = %1098.0;
    (%1099,)
  };
  %1100() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_9966() -> (Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32]) {
  %1101 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
  %1102 = cast(%1101, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %1103 = reshape(%1102, newshape=[1440]) /* ty=Tensor[(1440), uint32] */;
  %1104 = @func_9626(%1103) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), float64]) */;
  %1105 = %1104.1;
  (%1101, %1105)
}

def @func_8263() -> Tensor[(1400, 1), float64] {
  %1107 = fn () -> Tensor[(1400, 1), float64] {
    %1106 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
    %1106.4
  };
  %1107() /* ty=Tensor[(1400, 1), float64] */
}

def @func_6956() -> (Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(2, 6, 16), float32], Tensor[(192), float32]) {
  @func_6954() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(2, 6, 16), float32], Tensor[(192), float32]) */
}

def @func_9458(%var_9457: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32]) {
  %1124 = fn (%var_9400: Tensor[(135), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32]) {
    %1108 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %1109 = @func_8666() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16]) */;
    %1110 = cast(%var_9400, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %1111 = cast(meta[relay.Constant][44] /* ty=Tensor[(6), int8] */, dtype="int8") /* ty=Tensor[(6), int8] */;
    %1112 = reshape(%1110, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1113 = reshape(%1111, newshape=[6]) /* ty=Tensor[(6), int8] */;
    %1114 = @func_6024(%1112, %1113) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 1, 2), uint8], Tensor[(6), int8], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(3, 10, 8), float32], Tensor[(2025), float32], Tensor[(3, 10, 8), float32]) */;
    %1115 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1116 = cast(%var_9400, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %1117 = reshape(%1116, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1118 = @func_7972(%1117) /* ty=(Tensor[(1440), uint32], Tensor[(3, 15, 3), float32], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
    %1119 = %1108.1;
    %1120 = %1109.1;
    %1121 = %1114.0;
    %1122 = %1115.0;
    %1123 = %1118.0;
    (%1119, %1120, %1121, %var_9400, meta[relay.Constant][44] /* ty=Tensor[(6), int8] */, %1122, %1123)
  };
  %1124(%var_9457) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32]) */
}

def @func_6028(%var_6026: Tensor[(135), uint16], %var_6027: Tensor[(6), int8]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 1, 2), uint8], Tensor[(6), int8], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(3, 10, 8), float32], Tensor[(2025), float32], Tensor[(3, 10, 8), float32]) {
  @func_6024(%var_6026, %var_6027) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 1, 2), uint8], Tensor[(6), int8], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(3, 10, 8), float32], Tensor[(2025), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_15965() -> Tensor[(3, 10, 8), float32] {
  %1125 = @func_5868() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1125.0
}

def @func_9726(%var_9724: Tensor[(5, 10, 9), float32], %var_9725: Tensor[(5, 10, 9), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(5, 10, 9), int16]) {
  %1141 = fn (%var_9699: Tensor[(5, 10, 9), float32], %var_9713: Tensor[(5, 10, 9), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(5, 10, 9), int16]) {
    %1126 = @func_7243() /* ty=(Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(3, 10, 8), float32], Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32]) */;
    %1127 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
    %1128 = %1127.4;
    %1129 = cast(%1128, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
    %1130 = reshape(%1129, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float64] */;
    %1131 = @func_8937(%1130) /* ty=(Tensor[(3, 10, 8), float64],) */;
    %1132 = cast(%var_9699, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
    %1133 = sigmoid(%1132) /* ty=Tensor[(5, 10, 9), float32] */;
    %1134 = cast(%var_9713, dtype="int16") /* ty=Tensor[(5, 10, 9), int16] */;
    %1135 = shape_of(%1133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1136 = cast(%1133, dtype="int16") /* ty=Tensor[(5, 10, 9), int16] */;
    %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1138 = %1126.3;
    %1139 = %1131.0;
    %1140 = multiply(%1136, %1137) /* ty=Tensor[(5, 10, 9), int16] */;
    (%1138, %1128, %1139, %1140)
  };
  %1141(%var_9724, %var_9725) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(5, 10, 9), int16]) */
}

def @func_11565(%var_11563: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), uint16], Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float64]) {
  @func_11562(%var_11563) /* ty=(Tensor[(8, 12, 15), uint16], Tensor[(3, 10, 8), float64], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float64]) */
}

def @func_18041(%var_18039: Tensor[(100, 14), float64]) -> (Tensor[(1440), uint32], Tensor[(3, 10, 8), float64], Tensor[(1400), float64], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(100, 14), float64]) {
  @func_18038(%var_18039) /* ty=(Tensor[(1440), uint32], Tensor[(3, 10, 8), float64], Tensor[(1400), float64], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(100, 14), float64]) */
}

def @func_18175(%var_18169: Tensor[(6), int8], %var_18170: Tensor[(2880), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(1440, 2), float32], Tensor[(6), int8], Tensor[(2880), float32]) {
  %1142 = cast(%var_18169, dtype="int8") /* ty=Tensor[(6), int8] */;
  %1143 = cast(%var_18170, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %1144 = reshape(%1142, newshape=[6]) /* ty=Tensor[(6), int8] */;
  %1145 = reshape(%1143, newshape=[1440, 2]) /* ty=Tensor[(1440, 2), float32] */;
  %1146 = @func_13363(%1144, %1145) /* ty=(Tensor[(8, 12, 15), float32], Tensor[(3, 15, 3), float32], Tensor[(6), int8], Tensor[(12, 15, 16), float32], Tensor[(1440, 2), float32]) */;
  %1147 = @func_16906() /* ty=Tensor[(3, 10, 8), float32] */;
  %1148 = %1146.4;
  (%1147, %1148, %var_18169, %var_18170)
}

def @func_6748(%var_6746: Tensor[(3, 10, 8), float32], %var_6747: Tensor[(8, 12, 15), float32]) -> (Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), uint16], Tensor[(8, 12, 15), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) {
  %1170 = fn (%var_6706: Tensor[(3, 10, 8), float32], %var_6715: Tensor[(8, 12, 15), float32]) -> (Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), uint16], Tensor[(8, 12, 15), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) {
    %1149 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1150 = %1149.0;
    %1151 = cast(%var_6706, dtype="uint16") /* ty=Tensor[(3, 10, 8), uint16] */;
    %1152 = shape_of(%1150, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1153 = cast(%1150, dtype="uint16") /* ty=Tensor[(3, 10, 8), uint16] */;
    %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1155 = cast(meta[relay.Constant][45] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %1156 = cast(meta[relay.Constant][46] /* ty=Tensor[(6), int8] */, dtype="int8") /* ty=Tensor[(6), int8] */;
    %1157 = reshape(%1155, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1158 = reshape(%1156, newshape=[6]) /* ty=Tensor[(6), int8] */;
    %1159 = @func_6024(%1157, %1158) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 1, 2), uint8], Tensor[(6), int8], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(3, 10, 8), float32], Tensor[(2025), float32], Tensor[(3, 10, 8), float32]) */;
    %1160 = %1159.7;
    %1161 = cast(%var_6715, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
    %1162 = shape_of(%1160, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1163 = cast(%1160, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
    %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1165 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
    %1166 = bitwise_xor(%1153, %1154) /* ty=Tensor[(3, 10, 8), uint16] */;
    %1167 = less(%1163, %1164) /* ty=Tensor[(8, 12, 15), bool] */;
    %1168 = %1165.0;
    %1169 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
    (meta[relay.Constant][45] /* ty=Tensor[(135), uint16] */, meta[relay.Constant][46] /* ty=Tensor[(6), int8] */, %1166, %1167, %1168, %1169)
  };
  %1170(%var_6746, %var_6747) /* ty=(Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), uint16], Tensor[(8, 12, 15), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */
}

def @func_3728() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  %1177 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
    %1171 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %1172 = %1171.0;
    %1173 = cast(%1172, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
    %1174 = reshape(%1173, newshape=[3, 10, 8]) /* ty=Tensor[(3, 10, 8), float32] */;
    %1175 = @func_3522(%1174) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32]) */;
    %1176 = %1175.0;
    (%1172, %1176)
  };
  %1177() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */
}

def @func_8057() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1178 = @func_7303() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */;
  %1179 = @func_5868() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1180 = %1178.4;
  %1181 = %1179.0;
  (%1180, %1181)
}

def @func_10364(%var_10355: Tensor[(1, 12, 10), float32]) -> Tensor[(1, 12, 10), float32] {
  %1182 = cast(%var_10355, dtype="float32") /* ty=Tensor[(1, 12, 10), float32] */;
  sinh(%1182) /* ty=Tensor[(1, 12, 10), float32] */
}

def @func_15148() -> (Tensor[(3, 10, 8), float32],) {
  @func_15146() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_8959() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1187 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %1183 = @func_8338() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %1184 = @func_6841() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1185 = %1183.0;
    %1186 = %1184.0;
    (%1185, %1186)
  };
  %1187() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_11413() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1188 = @func_5868() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1189 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
  %1190 = %1188.0;
  %1191 = %1189.0;
  (%1190, %1191)
}

def @func_18271() -> (Tensor[(3, 10, 8), float32],) {
  @func_18269() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_16861() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), int64], Tensor[(1440), float32]) {
  %1192 = @func_6841() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1193 = cast(meta[relay.Constant][47] /* ty=Tensor[(1440), float32] */, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %1194 = reshape(%1193, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
  %1195 = @func_10053(%1194) /* ty=(Tensor[(8, 12, 15), int64],) */;
  %1196 = %1192.0;
  %1197 = %1195.0;
  (%1196, %1197, meta[relay.Constant][47] /* ty=Tensor[(1440), float32] */)
}

def @func_10649() -> (Tensor[(300), float32], Tensor[(3, 10, 8), float32]) {
  %1202 = fn () -> (Tensor[(300), float32], Tensor[(3, 10, 8), float32]) {
    %1198 = @func_10134() /* ty=(Tensor[(300), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
    %1199 = @func_8338() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %1200 = %1198.0;
    %1201 = %1199.0;
    (%1200, %1201)
  };
  %1202() /* ty=(Tensor[(300), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_15591() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1203 = @func_6241() /* ty=(Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32]) */;
  %1204 = @func_8958() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1205 = %1203.1;
  %1206 = %1204.0;
  (%1205, %1206)
}

def @func_4035() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) {
  %1213 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) {
    %1207 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1208 = cast(meta[relay.Constant][48] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
    %1209 = reshape(%1208, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
    %1210 = @func_608(%1209) /* ty=(Tensor[(8, 12, 15), float32],) */;
    %1211 = %1207.0;
    %1212 = %1210.0;
    (%1211, %1212, meta[relay.Constant][48] /* ty=Tensor[(1440), uint32] */)
  };
  %1213() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */
}

def @func_6468(%var_6465: Tensor[(15, 10, 2), float32], %var_6466: Tensor[(2, 20), uint16], %var_6467: Tensor[(1400), float64]) -> (Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) {
  %1228 = fn (%var_6439: Tensor[(15, 10, 2), float32], %var_6449: Tensor[(2, 20), uint16], %var_6451: Tensor[(1400), float64]) -> (Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) {
    %1214 = cast(%var_6439, dtype="float32") /* ty=Tensor[(15, 10, 2), float32] */;
    %1215 = cast(meta[relay.Constant][49] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
    %1216 = reshape(%1215, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
    %1217 = @func_608(%1216) /* ty=(Tensor[(8, 12, 15), float32],) */;
    %1218 = cast(%var_6449, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
    %1219 = cast(meta[relay.Constant][50] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %1220 = cast(%var_6451, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %1221 = reshape(%1218, newshape=[40]) /* ty=Tensor[(40), uint16] */;
    %1222 = reshape(%1219, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1223 = reshape(%1220, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %1224 = @func_4564(%1221, %1222, %1223) /* ty=(Tensor[(15, 9), uint16], Tensor[(40), uint16], Tensor[(135), uint16], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(140), bool], Tensor[(6), int8], Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
    %1225 = cosh(%1214) /* ty=Tensor[(15, 10, 2), float32] */;
    %1226 = %1217.0;
    %1227 = %1224.0;
    (%1225, %1226, meta[relay.Constant][49] /* ty=Tensor[(1440), uint32] */, %1227, %var_6449, meta[relay.Constant][50] /* ty=Tensor[(135), uint16] */, %var_6451)
  };
  %1228(%var_6465, %var_6466, %var_6467) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */
}

def @func_17688(%var_17632: bool, %var_17633: Tensor[(15, 1, 13), bool]) -> (Tensor[(15, 1, 13), bool], Tensor[(13, 6, 3), uint16], Tensor[(39, 6), float64], Tensor[(3, 10, 8), float32]) {
  %1229 = cast(%var_17632, dtype="bool") /* ty=bool */;
  %1230 = cast(%var_17633, dtype="bool") /* ty=Tensor[(15, 1, 13), bool] */;
  %1231 = logical_and(%1229, %1230) /* ty=Tensor[(15, 1, 13), bool] */;
  %1232 = cast(%1231, dtype="float64") /* ty=Tensor[(15, 1, 13), float64] */;
  %1233 = log10(%1232) /* ty=Tensor[(15, 1, 13), float64] */;
  %1234 = cast(%1233, dtype="bool") /* ty=Tensor[(15, 1, 13), bool] */;
  %1235 = cast(%var_17632, dtype="bool") /* ty=bool */;
  %1236 = cast(meta[relay.Constant][51] /* ty=Tensor[(39, 6), float64] */, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
  %1237 = reshape(%1236, newshape=[13, 6, 3]) /* ty=Tensor[(13, 6, 3), float64] */;
  %1238 = greater(%1234, %1235) /* ty=Tensor[(15, 1, 13), bool] */;
  %1239 = @func_12248(%1237) /* ty=Tensor[(13, 6, 3), uint16] */;
  %1240 = @func_8236() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1238, %1239, meta[relay.Constant][51] /* ty=Tensor[(39, 6), float64] */, %1240)
}

def @func_7243() -> (Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(3, 10, 8), float32], Tensor[(8, 14, 5), float32], Tensor[(3, 10, 8), float32]) {
  %1241 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %1242 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(8, 14, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1243 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %1244 = dyn.reshape(%1241, %1242, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1245 = cast(meta[relay.Constant][54] /* ty=Tensor[(3, 45), uint16] */, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
  %1246 = reshape(%1245, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1247 = @func_6891(%1246) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32]) */;
  %1248 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %1249 = @func_3587() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1250 = floor_mod(%1243, %1244) /* ty=Tensor[(8, 14, 5), float32] */;
  %1251 = %1247.0;
  %1252 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  %1253 = sin(%1248) /* ty=Tensor[(8, 14, 5), float32] */;
  %1254 = %1249.1;
  (%1250, %1251, meta[relay.Constant][54] /* ty=Tensor[(3, 45), uint16] */, %1252, %1253, %1254)
}

def @func_3704() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1255 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1256 = @func_2893() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1257 = %1256.0;
  %1258 = cast(%1257, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %1259 = %1255.0;
  %1260 = log10(%1258) /* ty=Tensor[(3, 10, 8), float32] */;
  %1261 = @func_3041() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1259, %1260, %1261)
}

def @func_11038() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_11036() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_6765() -> Tensor[(3, 10, 8), float32] {
  %1262 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1262.0
}

def @func_8475() -> (Tensor[(3, 10, 8), float32],) {
  @func_8473() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_10055(%var_10054: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), int64],) {
  %1274 = fn (%var_10040: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), int64],) {
    %1263 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
    %1264 = cast(%var_10040, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
    %1265 = shape_of(%1263, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1266 = cast(%1263, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
    %1267 = dyn.reshape(%1264, %1265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1268 = add(%1266, %1267) /* ty=Tensor[(8, 12, 15), uint32] */;
    %1269 = cast(%1263, dtype="int64") /* ty=Tensor[(8, 12, 15), int64] */;
    %1270 = shape_of(%1268, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1271 = cast(%1268, dtype="int64") /* ty=Tensor[(8, 12, 15), int64] */;
    %1272 = dyn.reshape(%1269, %1270, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1273 = minimum(%1271, %1272) /* ty=Tensor[(8, 12, 15), int64] */;
    (%1273,)
  };
  %1274(%var_10054) /* ty=(Tensor[(8, 12, 15), int64],) */
}

def @func_18112() -> Tensor[(13, 6, 3), float32] {
  @func_18110() /* ty=Tensor[(13, 6, 3), float32] */
}

def @func_17017() -> Tensor[(3, 10, 8), float32] {
  @func_17015() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_12846() -> Tensor[(3, 10, 8), float32] {
  %1275 = @func_11036() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1275.0
}

def @func_13015() -> Tensor[(3, 10, 8), float32] {
  @func_13013() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_8254() -> Tensor[(8, 12, 15), float32] {
  %1279 = fn () -> Tensor[(8, 12, 15), float32] {
    %1276 = @func_4034() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
    %1277 = %1276.1;
    %1278 = cast(%1277, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
    tan(%1278) /* ty=Tensor[(8, 12, 15), float32] */
  };
  %1279() /* ty=Tensor[(8, 12, 15), float32] */
}

def @func_16446(%var_16440: Tensor[(140), bool]) -> (Tensor[(3, 10, 8), float32], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(140), bool]) {
  %1280 = @func_10961() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) */;
  %1281 = cast(meta[relay.Constant][55] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1282 = cast(%var_16440, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1283 = reshape(%1281, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1284 = reshape(%1282, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %1285 = @func_3236(%1283, %1284) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */;
  %1286 = %1280.3;
  %1287 = %1285.2;
  (%1286, %1287, meta[relay.Constant][55] /* ty=Tensor[(135), uint16] */, %var_16440)
}

def @func_7191() -> (Tensor[(3, 10, 8), float64],) {
  @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */
}

def @func_6024(%var_5926: Tensor[(135), uint16], %var_5932: Tensor[(6), int8]) -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 1, 2), uint8], Tensor[(6), int8], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(3, 10, 8), float32], Tensor[(2025), float32], Tensor[(3, 10, 8), float32]) {
  %1288 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1289 = @func_4034() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
  %1290 = @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1291 = cast(%var_5926, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1292 = cast(meta[relay.Constant][56] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1293 = reshape(%1291, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1294 = reshape(%1292, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1295 = @func_2879(%1293, %1294) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %1296 = cast(%var_5932, dtype="int8") /* ty=Tensor[(6), int8] */;
  %1297 = cast(%var_5926, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1298 = reshape(%1296, newshape=[6, 1]) /* ty=Tensor[(6, 1), int8] */;
  %1299 = reshape(%1297, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1300 = @func_3440(%1298, %1299) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 1, 2), uint8], Tensor[(140), bool], Tensor[(140), bool], Tensor[(6, 135), uint64]) */;
  %1301 = %1289.1;
  %1302 = cast(%1301, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %1303 = reshape(%1302, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %1304 = @func_608(%1303) /* ty=(Tensor[(8, 12, 15), float32],) */;
  %1305 = @func_2956() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1306 = %1295.2;
  %1307 = cast(%1306, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1308 = cast(meta[relay.Constant][56] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1309 = reshape(%1307, newshape=[9, 1, 15]) /* ty=Tensor[(9, 1, 15), uint16] */;
  %1310 = reshape(%1308, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), uint16] */;
  %1311 = @func_489(%1309, %1310) /* ty=(Tensor[(9, 15, 15), uint16],) */;
  %1312 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1313 = cast(meta[relay.Constant][56] /* ty=Tensor[(2025), uint16] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1314 = asin(%1313) /* ty=Tensor[(2025), float32] */;
  %1315 = cast(%1306, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1316 = cast(meta[relay.Constant][56] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1317 = reshape(%1315, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1318 = reshape(%1316, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1319 = @func_2879(%1317, %1318) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %1320 = %1319.5;
  %1321 = cast(%1314, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1322 = cast(%1320, dtype="float64") /* ty=float64 */;
  %1323 = divide(%1321, %1322) /* ty=Tensor[(2025), float64] */;
  %1324 = cast(%1314, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1325 = shape_of(%1323, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1326 = cast(%1323, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1327 = dyn.reshape(%1324, %1325, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1328 = cast(%1306, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1329 = reshape(%1328, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1330 = @func_4604(%1329) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float64], Tensor[(1, 40), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %1331 = %1288.0;
  %1332 = %1290.0;
  %1333 = %1300.1;
  %1334 = %1304.0;
  %1335 = %1305.0;
  %1336 = %1311.0;
  %1337 = %1312.0;
  %1338 = subtract(%1326, %1327) /* ty=Tensor[(2025), float32] */;
  %1339 = %1330.0;
  (%1331, %1301, %1332, %1306, %var_5926, %1333, %var_5932, %1334, %1335, %1336, %1337, %1338, %1339)
}

def @func_5195(%var_5193: Tensor[(2025), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), bool]) {
  @func_5192(%var_5193) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), bool]) */
}

def @func_13367(%var_13365: Tensor[(6), int8], %var_13366: Tensor[(1440, 2), float32]) -> (Tensor[(8, 12, 15), float32], Tensor[(3, 15, 3), float32], Tensor[(6), int8], Tensor[(12, 15, 16), float32], Tensor[(1440, 2), float32]) {
  @func_13363(%var_13365, %var_13366) /* ty=(Tensor[(8, 12, 15), float32], Tensor[(3, 15, 3), float32], Tensor[(6), int8], Tensor[(12, 15, 16), float32], Tensor[(1440, 2), float32]) */
}

def @func_13340() -> Tensor[(3, 10, 8), float32] {
  %1340 = fn () -> Tensor[(3, 10, 8), float32] {
    @func_10148() /* ty=Tensor[(3, 10, 8), float32] */
  };
  %1340() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_16636(%var_16624: Tensor[(2, 720), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(2, 720), float32]) {
  %1341 = @func_7434() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1342 = cast(%var_16624, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %1343 = reshape(%1342, newshape=[1440]) /* ty=Tensor[(1440), float32] */;
  %1344 = @func_14110(%1343) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), float32], Tensor[(8, 12, 15), float32]) */;
  %1345 = %1341.0;
  %1346 = @func_15992() /* ty=Tensor[(3, 10, 8), float32] */;
  %1347 = %1344.3;
  (%1345, %1346, %1347, %var_16624)
}

def @func_8473() -> (Tensor[(3, 10, 8), float32],) {
  %1348 = @func_6620() /* ty=(Tensor[(135), uint16], Tensor[(3, 10, 8), float32]) */;
  %1349 = %1348.1;
  (%1349,)
}

def @func_6681() -> (Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float64]) {
  %1352 = fn () -> (Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float64]) {
    %1350 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
    %1351 = @func_5878() /* ty=Tensor[(3, 10, 8), float64] */;
    (%1350, %1351)
  };
  %1352() /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float64]) */
}

def @func_15593() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  @func_15591() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_15146() -> (Tensor[(3, 10, 8), float32],) {
  %1353 = @func_7434() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_15992() -> Tensor[(3, 10, 8), float32] {
  %1355 = @func_13855() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1355.0
}

def @func_16799(%var_16798: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
  %1364 = fn (%var_16766: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) {
    %1356 = @func_9101() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %1357 = cast(%var_16766, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %1358 = reshape(%1357, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %1359 = @func_15935(%1358) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(6, 6, 7), float32], float32, Tensor[(42, 6), float32], Tensor[(8, 12, 15), float32], Tensor[(40, 1440), bool]) */;
    %1360 = @func_8111() /* ty=Tensor[(3, 10, 8), float32] */;
    %1361 = @func_5609() /* ty=Tensor[(3, 10, 8), float32] */;
    %1362 = %1356.1;
    %1363 = %1359.0;
    (%1360, %1361, %1362, %1363, %var_16766)
  };
  %1364(%var_16798) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(1400), float64]) */
}

def @func_9346() -> (Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) {
  %1365 = cast(meta[relay.Constant][57] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1366 = cast(meta[relay.Constant][57] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1367 = reshape(%1365, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
  %1368 = reshape(%1366, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
  %1369 = @func_6765() /* ty=Tensor[(3, 10, 8), float32] */;
  %1370 = @func_2266(%1367, %1368) /* ty=Tensor[(4, 7, 5), bool] */;
  (%1369, %1370, meta[relay.Constant][57] /* ty=Tensor[(140), bool] */)
}

def @func_11398() -> (Tensor[(3, 10, 8), float32],) {
  @func_11396() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_18179(%var_18177: Tensor[(6), int8], %var_18178: Tensor[(2880), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(1440, 2), float32], Tensor[(6), int8], Tensor[(2880), float32]) {
  @func_18175(%var_18177, %var_18178) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1440, 2), float32], Tensor[(6), int8], Tensor[(2880), float32]) */
}

def @func_16226() -> Tensor[(3, 10, 8), float32] {
  @func_16224() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_10763() -> (Tensor[(3, 10, 8), float32],) {
  %1373 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %1371 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1372 = %1371.0;
    (%1372,)
  };
  %1373() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_12915() -> (Tensor[(3, 10, 8), uint16], Tensor[(1400, 1), float64]) {
  %1374 = @func_6527() /* ty=Tensor[(3, 10, 8), uint16] */;
  %1375 = @func_8262() /* ty=Tensor[(1400, 1), float64] */;
  (%1374, %1375)
}

def @func_15519() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(12, 6, 15), float32], Tensor[(13, 6, 3), float32]) {
  %1376 = @func_8057() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1377 = %1376.1;
  %1378 = @func_8169() /* ty=Tensor[(3, 10, 8), float32] */;
  %1379 = @func_12971() /* ty=Tensor[(12, 6, 15), float32] */;
  %1380 = @func_9683() /* ty=Tensor[(13, 6, 3), float32] */;
  (%1377, %1378, %1379, %1380)
}

def @func_10148() -> Tensor[(3, 10, 8), float32] {
  %1381 = @func_8473() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1381.0
}

def @func_16937() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1382 = @func_2857() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1383 = @func_11834() /* ty=Tensor[(3, 10, 8), float32] */;
  %1384 = %1382.0;
  (%1383, %1384)
}

def @func_17504() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32]) {
  %1390 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32]) {
    %1385 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1386 = @func_7189() /* ty=(Tensor[(3, 10, 8), float64],) */;
    %1387 = %1385.0;
    %1388 = %1386.0;
    %1389 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
    (%1387, %1388, %1389)
  };
  %1390() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32]) */
}

def @func_17557() -> (Tensor[(3, 10, 8), float32],) {
  %1391 = @func_9346() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) */;
  %1392 = %1391.0;
  (%1392,)
}

def @func_6298(%var_6296: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(1400), float64]) {
  @func_6295(%var_6296) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(1400), float64]) */
}

def @func_11388(%var_11386: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) {
  @func_11385(%var_11386) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */
}

def @func_608(%var_583: Tensor[(8, 12, 15), uint32]) -> (Tensor[(8, 12, 15), float32],) {
  %1393 = cast(%var_583, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %1394 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(8, 12, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1395 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 12, 15), uint32] */, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %1396 = dyn.reshape(%1393, %1394, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1397 = less_equal(%1395, %1396) /* ty=Tensor[(8, 12, 15), bool] */;
  %1398 = cast(%1397, dtype="float32") /* ty=Tensor[(8, 12, 15), float32] */;
  %1399 = erf(%1398) /* ty=Tensor[(8, 12, 15), float32] */;
  (%1399,)
}

def @func_12416() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1400 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1401 = @func_10210() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1402 = %1400.0;
  %1403 = %1401.0;
  (%1402, %1403)
}

def @func_13855() -> (Tensor[(3, 10, 8), float32],) {
  %1404 = @func_9269() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1404,)
}

def @func_10344() -> (Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) {
  %1413 = fn () -> (Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) {
    %1405 = @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
    %1406 = %1405.2;
    %1407 = cast(%1406, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %1408 = reshape(%1407, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
    %1409 = @func_9016(%1408) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float64], Tensor[(8, 7, 4), int64], Tensor[(224), float64]) */;
    %1410 = @func_8473() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1411 = %1409.2;
    %1412 = %1410.0;
    (%1406, %1411, %1412)
  };
  %1413() /* ty=(Tensor[(1440), uint32], Tensor[(8, 7, 4), int64], Tensor[(3, 10, 8), float32]) */
}

def @func_5879() -> Tensor[(3, 10, 8), float64] {
  %1415 = fn () -> Tensor[(3, 10, 8), float64] {
    %1414 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %1414.1
  };
  %1415() /* ty=Tensor[(3, 10, 8), float64] */
}

def @func_9222() -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
  %1423 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) {
    %1416 = cast(meta[relay.Constant][59] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %1417 = cast(meta[relay.Constant][60] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %1418 = reshape(%1416, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1419 = reshape(%1417, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %1420 = @func_4197(%1418, %1419) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */;
    %1421 = @func_5609() /* ty=Tensor[(3, 10, 8), float32] */;
    %1422 = %1420.2;
    (%1421, %1422, meta[relay.Constant][59] /* ty=Tensor[(135), uint16] */, meta[relay.Constant][60] /* ty=Tensor[(2025), uint16] */)
  };
  %1423() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16]) */
}

def @func_9101() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1424 = @func_7748() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1425 = @func_7807() /* ty=Tensor[(3, 10, 8), float32] */;
  %1426 = %1424.1;
  (%1425, %1426)
}

def @func_7385() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1433 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
    %1427 = @func_4825() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1428 = @func_6042() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1429 = @func_4359() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1430 = %1427.0;
    %1431 = %1428.0;
    %1432 = %1429.0;
    (%1430, %1431, %1432)
  };
  %1433() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */
}

def @func_11770() -> Tensor[(3, 10, 8), float32] {
  %1434 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1434.0
}

def @func_17528() -> (Tensor[(13, 6, 3), float32],) {
  %1435 = @func_16570() /* ty=Tensor[(13, 6, 3), float32] */;
  (%1435,)
}

def @func_3814(%var_3813: Tensor[(10, 10, 14), float64]) -> Tensor[(10, 10, 14), bool] {
  %1442 = fn (%var_3781: Tensor[(10, 10, 14), float64]) -> Tensor[(10, 10, 14), bool] {
    %1436 = cast(%var_3781, dtype="float64") /* ty=Tensor[(10, 10, 14), float64] */;
    %1437 = log2(%1436) /* ty=Tensor[(10, 10, 14), float64] */;
    %1438 = cast(%1437, dtype="bool") /* ty=Tensor[(10, 10, 14), bool] */;
    %1439 = shape_of(%var_3781, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1440 = cast(%var_3781, dtype="bool") /* ty=Tensor[(10, 10, 14), bool] */;
    %1441 = dyn.reshape(%1438, %1439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%1440, %1441) /* ty=Tensor[(10, 10, 14), bool] */
  };
  %1442(%var_3813) /* ty=Tensor[(10, 10, 14), bool] */
}

def @func_12521() -> (Tensor[(3, 10, 8), float32],) {
  %1443 = @func_10443() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32]) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_7808() -> Tensor[(3, 10, 8), float32] {
  %1446 = fn () -> Tensor[(3, 10, 8), float32] {
    %1445 = @func_6516() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1445.0
  };
  %1446() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_6575(%var_6573: Tensor[(5, 2, 8), float64]) -> Tensor[(5, 2, 8), float64] {
  @func_6572(%var_6573) /* ty=Tensor[(5, 2, 8), float64] */
}

def @func_17140() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1447 = @func_4901() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1448 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1449 = %1447.1;
  %1450 = %1448.2;
  (%1449, %1450)
}

def @func_12515() -> (Tensor[(3, 10, 8), float32],) {
  @func_12513() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_3983() -> (Tensor[(3, 10, 8), float32],) {
  @func_3981() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_15994() -> Tensor[(3, 10, 8), float32] {
  @func_15992() /* ty=Tensor[(3, 10, 8), float32] */
}

def @func_7304() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) {
  %1464 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) {
    %1451 = @func_3704() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
    %1452 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
    %1453 = @func_7148() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400, 1), float64]) */;
    %1454 = cast(meta[relay.Constant][61] /* ty=Tensor[(6, 1), int8] */, dtype="int8") /* ty=Tensor[(6, 1), int8] */;
    %1455 = cast(meta[relay.Constant][62] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %1456 = reshape(%1454, newshape=[6]) /* ty=Tensor[(6), int8] */;
    %1457 = reshape(%1455, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1458 = @func_5488(%1456, %1457) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), float64], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 10, 8), float64]) */;
    %1459 = %1451.0;
    %1460 = %1452.1;
    %1461 = %1453.1;
    %1462 = @func_6317() /* ty=Tensor[(8, 12, 15), float32] */;
    %1463 = %1458.0;
    (%1459, %1460, %1461, %1462, %1463, meta[relay.Constant][61] /* ty=Tensor[(6, 1), int8] */, meta[relay.Constant][62] /* ty=Tensor[(135), uint16] */)
  };
  %1464() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32], Tensor[(6, 1), int8], Tensor[(135), uint16]) */
}

def @func_12248(%var_12230: Tensor[(13, 6, 3), float64]) -> Tensor[(13, 6, 3), uint16] {
  %1465 = @func_10595() /* ty=(Tensor[(13, 6, 3), float64], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1466 = %1465.0;
  %1467 = cast(%var_12230, dtype="uint16") /* ty=Tensor[(13, 6, 3), uint16] */;
  %1468 = shape_of(%1466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1469 = cast(%1466, dtype="uint16") /* ty=Tensor[(13, 6, 3), uint16] */;
  %1470 = dyn.reshape(%1467, %1468, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%1469, %1470) /* ty=Tensor[(13, 6, 3), uint16] */
}

def @func_3444(%var_3442: Tensor[(6, 1), int8], %var_3443: Tensor[(135), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(3, 1, 2), uint8], Tensor[(140), bool], Tensor[(140), bool], Tensor[(6, 135), uint64]) {
  @func_3440(%var_3442, %var_3443) /* ty=(Tensor[(13, 6, 3), float32], Tensor[(3, 1, 2), uint8], Tensor[(140), bool], Tensor[(140), bool], Tensor[(6, 135), uint64]) */
}

def @func_9968() -> (Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32]) {
  @func_9966() /* ty=(Tensor[(8, 12, 15), float32], Tensor[(8, 12, 15), float32]) */
}

def @func_3440(%var_3393: Tensor[(6, 1), int8], %var_3403: Tensor[(135), uint16]) -> (Tensor[(13, 6, 3), float32], Tensor[(3, 1, 2), uint8], Tensor[(140), bool], Tensor[(140), bool], Tensor[(6, 135), uint64]) {
  %1471 = cast(%var_3393, dtype="int8") /* ty=Tensor[(6, 1), int8] */;
  %1472 = reshape(%1471, newshape=[3, 1, 2]) /* ty=Tensor[(3, 1, 2), int8] */;
  %1473 = @func_2387(%1472) /* ty=(Tensor[(3, 1, 2), int8], Tensor[(9, 15, 15), float64], Tensor[(135), int64], Tensor[(3, 1, 2), uint8], Tensor[(3, 15, 3), float32]) */;
  %1474 = cast(%var_3403, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1475 = cast(meta[relay.Constant][63] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1476 = reshape(%1474, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1477 = reshape(%1475, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %1478 = @func_3236(%1476, %1477) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(4, 7, 5), bool], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), float32]) */;
  %1479 = cast(%var_3403, dtype="bool") /* ty=Tensor[(135), bool] */;
  %1480 = cast(%var_3393, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %1481 = logical_and(%1479, %1480) /* ty=Tensor[(6, 135), bool] */;
  %1482 = cast(%var_3393, dtype="uint64") /* ty=Tensor[(6, 1), uint64] */;
  %1483 = cast(%1481, dtype="uint64") /* ty=Tensor[(6, 135), uint64] */;
  %1484 = @func_3126() /* ty=Tensor[(13, 6, 3), float32] */;
  %1485 = %1473.3;
  %1486 = %1478.4;
  %1487 = bitwise_and(%1482, %1483) /* ty=Tensor[(6, 135), uint64] */;
  (%1484, %1485, %1486, meta[relay.Constant][63] /* ty=Tensor[(140), bool] */, %1487)
}

def @func_13294() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1488 = @func_11186() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1489 = %1488.1;
  %1490 = @func_8236() /* ty=Tensor[(3, 10, 8), float32] */;
  (%1489, %1490)
}

def @func_3174() -> (Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) {
  @func_3172() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */
}

def @func_8904() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) {
  @func_8902() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */
}

def @func_17087(%var_17074: Tensor[(8, 12, 15), float32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 45), uint16], Tensor[(8, 12, 15), bool], Tensor[(1, 12, 10), float32], Tensor[(120), float32]) {
  %1491 = @func_12416() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1492 = cast(meta[relay.Constant][64] /* ty=Tensor[(3, 45), uint16] */, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
  %1493 = reshape(%1492, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1494 = @func_9456(%1493) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(6), int8], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32]) */;
  %1495 = @func_15002() /* ty=(Tensor[(8, 12, 15), float32], Tensor[(3, 10, 8), float32]) */;
  %1496 = %1495.0;
  %1497 = cast(%var_17074, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %1498 = shape_of(%1496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1499 = cast(%1496, dtype="bool") /* ty=Tensor[(8, 12, 15), bool] */;
  %1500 = dyn.reshape(%1497, %1498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1501 = cast(meta[relay.Constant][65] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1502 = reshape(%1501, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float32] */;
  %1503 = %1491.0;
  %1504 = %1494.0;
  %1505 = not_equal(%1499, %1500) /* ty=Tensor[(8, 12, 15), bool] */;
  %1506 = @func_10364(%1502) /* ty=Tensor[(1, 12, 10), float32] */;
  (%1503, %1504, meta[relay.Constant][64] /* ty=Tensor[(3, 45), uint16] */, %1505, %1506, meta[relay.Constant][65] /* ty=Tensor[(120), float32] */)
}

def @func_11621() -> (Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float64]) {
  @func_11619() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float64]) */
}

def @func_11964() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) {
  %1515 = fn () -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) {
    %1507 = @func_5765() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
    %1508 = cast(meta[relay.Constant][66] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
    %1509 = cast(meta[relay.Constant][66] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
    %1510 = reshape(%1508, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
    %1511 = reshape(%1509, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), bool] */;
    %1512 = @func_11207() /* ty=Tensor[(3, 10, 8), float32] */;
    %1513 = %1507.0;
    %1514 = @func_2266(%1510, %1511) /* ty=Tensor[(4, 7, 5), bool] */;
    (%1512, %1513, %1514, meta[relay.Constant][66] /* ty=Tensor[(140), bool] */)
  };
  %1515() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(4, 7, 5), bool], Tensor[(140), bool]) */
}

def @func_4457(%var_4455: Tensor[(40), uint16], %var_4456: Tensor[(15, 9), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16], Tensor[(3, 15, 3), float32], Tensor[(15, 9), uint16], Tensor[(2025), uint16]) {
  %1528 = fn (%var_4421: Tensor[(40), uint16], %var_4440: Tensor[(15, 9), uint16]) -> (Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16], Tensor[(3, 15, 3), float32], Tensor[(15, 9), uint16], Tensor[(2025), uint16]) {
    %1516 = @func_3727() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %1517 = cast(%var_4421, dtype="uint16") /* ty=Tensor[(40), uint16] */;
    %1518 = reshape(%1517, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint16] */;
    %1519 = @func_3485(%1518) /* ty=(Tensor[(5, 4, 2), uint16],) */;
    %1520 = cast(%var_4440, dtype="uint16") /* ty=Tensor[(15, 9), uint16] */;
    %1521 = cast(meta[relay.Constant][67] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
    %1522 = reshape(%1520, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1523 = reshape(%1521, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
    %1524 = @func_2879(%1522, %1523) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
    %1525 = %1516.0;
    %1526 = %1519.0;
    %1527 = %1524.4;
    (%1525, %1526, %var_4421, %1527, %var_4440, meta[relay.Constant][67] /* ty=Tensor[(2025), uint16] */)
  };
  %1528(%var_4455, %var_4456) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16], Tensor[(3, 15, 3), float32], Tensor[(15, 9), uint16], Tensor[(2025), uint16]) */
}

def @func_16339(%var_16337: Tensor[(20, 70), float64], %var_16338: Tensor[(1440), uint32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32], Tensor[(20, 70), float64], Tensor[(8, 12, 15), float32]) {
  %1552 = fn (%var_16284: Tensor[(20, 70), float64], %var_16293: Tensor[(1440), uint32]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32], Tensor[(20, 70), float64], Tensor[(8, 12, 15), float32]) {
    %1529 = @func_5106() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1530 = @func_13855() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1531 = @func_11846() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1532 = cast(%var_16284, dtype="float64") /* ty=Tensor[(20, 70), float64] */;
    %1533 = reshape(%1532, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %1534 = @func_4310(%1533) /* ty=(Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(10, 10, 14), bool], Tensor[(1400), float64]) */;
    %1535 = cast(%var_16293, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
    %1536 = reshape(%1535, newshape=[1440]) /* ty=Tensor[(1440), uint32] */;
    %1537 = @func_9626(%1536) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), float64]) */;
    %1538 = @func_9376() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64]) */;
    %1539 = cast(%var_16284, dtype="float64") /* ty=Tensor[(20, 70), float64] */;
    %1540 = cast(%var_16284, dtype="float64") /* ty=Tensor[(20, 70), float64] */;
    %1541 = reshape(%1540, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
    %1542 = @func_15935(%1541) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), bool], Tensor[(135), uint16], Tensor[(3, 10, 8), float64], Tensor[(10, 10, 14), bool], Tensor[(1400), float64], Tensor[(6, 6, 7), float32], float32, Tensor[(42, 6), float32], Tensor[(8, 12, 15), float32], Tensor[(40, 1440), bool]) */;
    %1543 = %1529.0;
    %1544 = %1530.0;
    %1545 = %1531.0;
    %1546 = %1534.0;
    %1547 = %1537.0;
    %1548 = @func_6527() /* ty=Tensor[(3, 10, 8), uint16] */;
    %1549 = %1538.0;
    %1550 = log2(%1539) /* ty=Tensor[(20, 70), float64] */;
    %1551 = %1542.9;
    (%1543, %1544, %1545, %1546, %1547, %var_16293, %1548, %1549, %1550, %1551)
  };
  %1552(%var_16337, %var_16338) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float64], Tensor[(3, 10, 8), float32], Tensor[(1440), uint32], Tensor[(3, 10, 8), uint16], Tensor[(3, 10, 8), float32], Tensor[(20, 70), float64], Tensor[(8, 12, 15), float32]) */
}

def @func_493(%var_491: Tensor[(9, 1, 15), uint16], %var_492: Tensor[(9, 15, 15), uint16]) -> (Tensor[(9, 15, 15), uint16],) {
  @func_489(%var_491, %var_492) /* ty=(Tensor[(9, 15, 15), uint16],) */
}

def @func_7534(%var_7492: Tensor[(135), uint16], %var_7518: Tensor[(300), float32], %var_7519: Tensor[(40), uint16], %var_7520: Tensor[(1400), float64]) -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(300), float32], Tensor[(40), uint16], Tensor[(1400), float64], Tensor[(3, 10, 8), float32]) {
  %1553 = @func_3019() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) */;
  %1554 = @func_5868() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1555 = cast(%var_7492, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1556 = cast(meta[relay.Constant][68] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1557 = reshape(%1555, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1558 = reshape(%1556, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1559 = @func_2879(%1557, %1558) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(9, 15, 15), uint16], Tensor[(135), uint16], Tensor[(2025), uint16], Tensor[(3, 15, 3), float32], int64) */;
  %1560 = cast(meta[relay.Constant][68] /* ty=Tensor[(2025), uint16] */, dtype="uint16") /* ty=Tensor[(2025), uint16] */;
  %1561 = reshape(%1560, newshape=[2025]) /* ty=Tensor[(2025), uint16] */;
  %1562 = @func_5192(%1561) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(135), uint16], Tensor[(140), bool], Tensor[(3, 10, 8), float32], Tensor[(2025), bool]) */;
  %1563 = cast(%var_7518, dtype="float32") /* ty=Tensor[(300), float32] */;
  %1564 = cast(%var_7519, dtype="uint16") /* ty=Tensor[(40), uint16] */;
  %1565 = cast(%var_7520, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %1566 = reshape(%1563, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
  %1567 = reshape(%1564, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint16] */;
  %1568 = reshape(%1565, newshape=[1400]) /* ty=Tensor[(1400), float64] */;
  %1569 = @func_6464(%1566, %1567, %1568) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32], Tensor[(15, 9), uint16], Tensor[(2, 20), uint16], Tensor[(135), uint16], Tensor[(1400), float64]) */;
  %1570 = @func_4640() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1571 = %1553.1;
  %1572 = %1554.0;
  %1573 = %1559.2;
  %1574 = %1562.2;
  %1575 = %1569.5;
  %1576 = %1570.0;
  (%1571, %1572, %1573, %var_7492, meta[relay.Constant][68] /* ty=Tensor[(2025), uint16] */, %1574, %1575, %var_7518, %var_7519, %var_7520, %1576)
}

def @func_7748() -> (Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32]) {
  %1577 = @func_6516() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1578 = @func_7558() /* ty=(Tensor[(3, 10, 8), float32],) */;
  %1579 = %1577.0;
  %1580 = %1578.0;
  (%1579, %1580)
}

def @func_17530() -> (Tensor[(13, 6, 3), float32],) {
  @func_17528() /* ty=(Tensor[(13, 6, 3), float32],) */
}

def @func_15265() -> (Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40, 1), uint16], Tensor[(1, 135), uint16]) {
  %1593 = fn () -> (Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40, 1), uint16], Tensor[(1, 135), uint16]) {
    %1581 = @func_10693() /* ty=(Tensor[(3, 10, 8), float64],) */;
    %1582 = @func_14582() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(13, 6, 3), float32]) */;
    %1583 = @func_4937() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1584 = cast(meta[relay.Constant][69] /* ty=Tensor[(40, 1), uint16] */, dtype="uint16") /* ty=Tensor[(40, 1), uint16] */;
    %1585 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 135), uint16] */, dtype="uint16") /* ty=Tensor[(1, 135), uint16] */;
    %1586 = reshape(%1584, newshape=[40]) /* ty=Tensor[(40), uint16] */;
    %1587 = reshape(%1585, newshape=[15, 9]) /* ty=Tensor[(15, 9), uint16] */;
    %1588 = @func_4454(%1586, %1587) /* ty=(Tensor[(3, 10, 8), float32], Tensor[(5, 4, 2), uint16], Tensor[(40), uint16], Tensor[(3, 15, 3), float32], Tensor[(15, 9), uint16], Tensor[(2025), uint16]) */;
    %1589 = %1581.0;
    %1590 = %1582.1;
    %1591 = %1583.0;
    %1592 = %1588.0;
    (%1589, %1590, %1591, %1592, meta[relay.Constant][69] /* ty=Tensor[(40, 1), uint16] */, meta[relay.Constant][70] /* ty=Tensor[(1, 135), uint16] */)
  };
  %1593() /* ty=(Tensor[(3, 10, 8), float64], Tensor[(13, 6, 3), float32], Tensor[(3, 10, 8), float32], Tensor[(3, 10, 8), float32], Tensor[(40, 1), uint16], Tensor[(1, 135), uint16]) */
}

def @func_7169() -> (Tensor[(3, 10, 8), float32],) {
  %1596 = fn () -> (Tensor[(3, 10, 8), float32],) {
    %1594 = @func_5664() /* ty=(Tensor[(3, 10, 8), float32],) */;
    %1595 = %1594.0;
    (%1595,)
  };
  %1596() /* ty=(Tensor[(3, 10, 8), float32],) */
}

def @func_6318() -> Tensor[(8, 12, 15), float32] {
  %1598 = fn () -> Tensor[(8, 12, 15), float32] {
    %1597 = @func_4034() /* ty=(Tensor[(3, 10, 8), float32], Tensor[(8, 12, 15), float32], Tensor[(1440), uint32]) */;
    %1597.1
  };
  %1598() /* ty=Tensor[(8, 12, 15), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

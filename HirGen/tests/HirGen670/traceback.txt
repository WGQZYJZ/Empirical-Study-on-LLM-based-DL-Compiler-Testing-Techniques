==========mod==========
#[version = "0.0.5"]
def @func_2364(%var_2307: Tensor[(16, 14, 3), int8]) -> (Tensor[(16, 14, 3), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %0 = cast(%var_2307, dtype="int8") /* ty=Tensor[(16, 14, 3), int8] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(16, 14, 3), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 14, 3), int8] */, dtype="int8") /* ty=Tensor[(16, 14, 3), int8] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %4 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %5 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %6 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %7 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %8 = bitwise_xor(%2, %3) /* ty=Tensor[(16, 14, 3), int8] */;
  %9 = %4.0;
  %10 = %5.1;
  %11 = %6.0;
  %12 = %7.0;
  %13 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
  (%8, %9, %10, %11, %12, %13)
}

def @func_7952() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %14 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %15 = @func_7114() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %16 = @func_3589() /* ty=Tensor[(5, 11, 10), float64] */;
  %17 = %14.1;
  %18 = %15.1;
  (%16, %17, %18)
}

def @func_1325() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %19 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %20 = %19.2;
  %21 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %22 = %21.0;
  %23 = cast(%22, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %24 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%20, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = @func_863() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %28 = greater(%25, %26) /* ty=Tensor[(5, 11, 10), bool] */;
  %29 = %27.0;
  (%28, %29)
}

def @func_3000() -> Tensor[(5, 11, 10), float64] {
  %30 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
  %30.0
}

def @func_7180() -> (Tensor[(5, 11, 10), float64],) {
  %31 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  (%31,)
}

def @func_6495() -> (Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 9, 1), int64] */, dtype="int64") /* ty=Tensor[(11, 9, 1), int64] */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 9, 12), int64] */, dtype="int64") /* ty=Tensor[(11, 9, 12), int64] */;
  %34 = left_shift(%32, %33) /* ty=Tensor[(11, 9, 12), int64] */;
  %35 = cast(%34, dtype="int32") /* ty=Tensor[(11, 9, 12), int32] */;
  %36 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(11, 9, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 9, 12), int64] */, dtype="int32") /* ty=Tensor[(11, 9, 12), int32] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %39 = @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */;
  %40 = cast(%39, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %41 = reshape(%40, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float64] */;
  %42 = @func_1539(%41) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16]) */;
  %43 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %44 = add(%37, %38) /* ty=Tensor[(11, 9, 12), int32] */;
  %45 = %42.0;
  %46 = %43.0;
  (%39, %44, %45, %46)
}

def @func_1368() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %47 = @func_863() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %48 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %49 = %47.1;
  %50 = %48.0;
  (%49, %50)
}

def @func_10345() -> (Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64]) {
  %51 = @func_6437() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %52 = @func_8607() /* ty=(Tensor[(4, 15, 12), uint64],) */;
  %53 = %51.0;
  %54 = %52.0;
  (%53, %54)
}

def @func_2578(%var_2573: Tensor[(11, 6, 14), uint8], %var_2574: Tensor[(11, 6, 14), uint8]) -> (Tensor[(11, 6, 14), uint8],) {
  %55 = cast(%var_2574, dtype="uint8") /* ty=Tensor[(11, 6, 14), uint8] */;
  %56 = shape_of(%var_2573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%var_2573, dtype="uint8") /* ty=Tensor[(11, 6, 14), uint8] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %59 = bitwise_and(%57, %58) /* ty=Tensor[(11, 6, 14), uint8] */;
  (%59,)
}

def @func_1887(%var_1835: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), bool], Tensor[(15, 15, 3), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %60 = @func_1589() /* ty=Tensor[(5, 11, 10), bool] */;
  %61 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  %62 = cast(%61, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %63 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%60, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %66 = cast(%var_1835, dtype="int8") /* ty=Tensor[(675), int8] */;
  %67 = reshape(%66, newshape=[15, 15, 3]) /* ty=Tensor[(15, 15, 3), int8] */;
  %68 = @func_1349(%67) /* ty=Tensor[(15, 15, 3), int8] */;
  %69 = cast(%var_1835, dtype="bool") /* ty=Tensor[(675), bool] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%68, dtype="bool") /* ty=Tensor[(15, 15, 3), bool] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %73 = cast(%61, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %74 = reshape(%73, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %75 = @func_643(%74) /* ty=(Tensor[(5, 11, 10), float64],) */;
  %76 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %77 = not_equal(%64, %65) /* ty=Tensor[(5, 11, 10), bool] */;
  %78 = less_equal(%71, %72) /* ty=Tensor[(15, 15, 3), bool] */;
  %79 = %75.0;
  %80 = %76.0;
  (%77, %78, %79, %80)
}

def @func_569() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %81 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %82 = %81.0;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %84 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %85 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %86 = sqrt(%83) /* ty=Tensor[(5, 11, 10), float32] */;
  %87 = %84.0;
  %88 = %85.0;
  %89 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  (%86, %87, %88, %89)
}

def @func_5011() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %90 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %91 = @func_4581() /* ty=Tensor[(5, 11, 10), float64] */;
  %92 = %90.3;
  (%91, %92)
}

def @func_10022() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %93 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %94 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %95 = %93.2;
  %96 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  %97 = %94.1;
  %98 = @func_2590() /* ty=Tensor[(5, 11, 10), float64] */;
  (%95, %96, %97, %98)
}

def @func_6188(%var_6156: Tensor[(990), float32], %var_6173: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32], Tensor[(5, 11, 10), float64], Tensor[(675), int8]) {
  %99 = @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %100 = cast(%var_6156, dtype="float32") /* ty=Tensor[(990), float32] */;
  %101 = cast(%var_6156, dtype="float32") /* ty=Tensor[(990), float32] */;
  %102 = reshape(%100, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %103 = reshape(%101, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %104 = @func_4270(%102, %103) /* ty=(Tensor[(9, 10, 11), float32],) */;
  %105 = cast(%var_6173, dtype="int8") /* ty=Tensor[(675), int8] */;
  %106 = reshape(%105, newshape=[675]) /* ty=Tensor[(675), int8] */;
  %107 = @func_1887(%106) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(15, 15, 3), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %108 = %99.1;
  %109 = %104.0;
  %110 = %107.3;
  (%108, %109, %var_6156, %110, %var_6173)
}

def @func_4505() -> (Tensor[(5, 11, 10), float64],) {
  %111 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
  (%111,)
}

def @func_12447() -> (Tensor[(5, 11, 10), uint8],) {
  %112 = @func_11121() /* ty=(Tensor[(5, 11, 10), uint8],) */;
  %113 = %112.0;
  (%113,)
}

def @func_10221() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
  %114 = @func_8203() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */;
  %115 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  %116 = %114.1;
  (%115, %116)
}

def @func_11667() -> (Tensor[(5, 11, 10), bool],) {
  %117 = @func_9503() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %118 = %117.0;
  (%118,)
}

def @func_3382(%var_3320: Tensor[(924), uint8], %var_3337: Tensor[(294), float32], %var_3373: Tensor[(11, 6, 14), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(924), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(14, 3, 7), bool], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), uint16], Tensor[(11, 6, 14), uint16]) {
  %119 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %120 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %121 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %122 = cast(meta[relay.Constant][3] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %123 = cast(%var_3337, dtype="float32") /* ty=Tensor[(294), float32] */;
  %124 = reshape(%122, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
  %125 = reshape(%123, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %126 = @func_1380(%124, %125) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
  %127 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %128 = cast(%var_3320, dtype="uint8") /* ty=Tensor[(924), uint8] */;
  %129 = cast(%var_3320, dtype="uint8") /* ty=Tensor[(924), uint8] */;
  %130 = reshape(%128, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), uint8] */;
  %131 = reshape(%129, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), uint8] */;
  %132 = @func_2578(%130, %131) /* ty=(Tensor[(11, 6, 14), uint8],) */;
  %133 = %132.0;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %135 = sigmoid(%134) /* ty=Tensor[(11, 6, 14), float64] */;
  %136 = cast(%var_3373, dtype="uint16") /* ty=Tensor[(11, 6, 14), uint16] */;
  %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%135, dtype="uint16") /* ty=Tensor[(11, 6, 14), uint16] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %140 = %119.0;
  %141 = %120.0;
  %142 = %121.0;
  %143 = %126.0;
  %144 = %127.0;
  %145 = add(%138, %139) /* ty=Tensor[(11, 6, 14), uint16] */;
  (%140, %var_3320, %141, %142, %143, meta[relay.Constant][3] /* ty=Tensor[(21), float32] */, %var_3337, %144, %145)
}

def @func_14931() -> Tensor[(5, 11, 10), float32] {
  %146 = @func_9135() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %146.2
}

def @func_16131() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %147 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %148 = @func_15145() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %149 = @func_2778() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %150 = @func_14568() /* ty=Tensor[(5, 11, 10), float64] */;
  %151 = %147.1;
  %152 = %148.0;
  %153 = %149.0;
  (%150, %151, %152, %153)
}

def @func_11342() -> Tensor[(5, 11, 10), int16] {
  %154 = @func_3223() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %154.0
}

def @func_16775(%var_16772: Tensor[(4, 12, 12), float32]) -> Tensor[(4, 12, 12), float32] {
  %155 = cast(%var_16772, dtype="float32") /* ty=Tensor[(4, 12, 12), float32] */;
  rsqrt(%155) /* ty=Tensor[(4, 12, 12), float32] */
}

def @func_16557() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %156 = @func_12255() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %157 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %158 = %156.0;
  %159 = %157.0;
  (%158, %159)
}

def @func_2590() -> Tensor[(5, 11, 10), float64] {
  @func_1115() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_10323() -> (Tensor[(5, 11, 10), float64],) {
  %160 = @func_5183() /* ty=Tensor[(5, 11, 10), float64] */;
  (%160,)
}

def @func_8023() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %161 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
  %162 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  (%161, %162)
}

def @func_10552() -> Tensor[(5, 11, 10), float64] {
  %163 = @func_9248() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %163.0
}

def @func_12136() -> Tensor[(5, 11, 10), float64] {
  @func_1659() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_4710() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
  %164 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %165 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  %166 = %164.0;
  (%165, %166)
}

def @func_1115() -> Tensor[(5, 11, 10), float64] {
  @func_522() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_12255() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  %167 = @func_8813() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %168 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
  %169 = %167.0;
  (%168, %169)
}

def @func_4406(%var_4401: Tensor[(5, 10, 4), int8], %var_4402: Tensor[(5, 10, 4), int8]) -> (Tensor[(5, 10, 4), bool],) {
  %170 = cast(%var_4402, dtype="bool") /* ty=Tensor[(5, 10, 4), bool] */;
  %171 = shape_of(%var_4401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%var_4401, dtype="bool") /* ty=Tensor[(5, 10, 4), bool] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %174 = not_equal(%172, %173) /* ty=Tensor[(5, 10, 4), bool] */;
  (%174,)
}

def @func_8235() -> (Tensor[(5, 11, 10), float64],) {
  %175 = @func_3000() /* ty=Tensor[(5, 11, 10), float64] */;
  (%175,)
}

def @func_9614() -> (Tensor[(5, 11, 10), bool],) {
  %176 = @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %177 = %176.1;
  (%177,)
}

def @func_2831() -> (Tensor[(5, 11, 10), float64],) {
  %178 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %179 = %178.0;
  (%179,)
}

def @func_2730() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) {
  %180 = @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %181 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %182 = cast(meta[relay.Constant][4] /* ty=Tensor[(195, 1), float64] */, dtype="float64") /* ty=Tensor[(195, 1), float64] */;
  %183 = reshape(%182, newshape=[13, 1, 15]) /* ty=Tensor[(13, 1, 15), float64] */;
  %184 = @func_2568(%183) /* ty=(Tensor[(13, 1, 15), float64], Tensor[(5, 11, 10), bool]) */;
  %185 = %180.1;
  %186 = %181.0;
  %187 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
  %188 = %184.0;
  (%185, %186, %187, %188, meta[relay.Constant][4] /* ty=Tensor[(195, 1), float64] */)
}

def @func_6635() -> Tensor[(5, 11, 10), bool] {
  %189 = @func_5029() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %189.0
}

def @func_9180() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %190 = @func_7249() /* ty=Tensor[(5, 11, 10), float64] */;
  %191 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  (%190, %191)
}

def @func_11930() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %192 = @func_6495() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %193 = %192.3;
  %194 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
  (%193, %194)
}

def @func_10592() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %195 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %196 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %197 = %195.1;
  %198 = %196.2;
  (%197, %198)
}

def @func_989() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %199 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %200 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %201 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %202 = @func_357() /* ty=Tensor[(5, 11, 10), float64] */;
  %203 = %199.0;
  %204 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  %205 = %200.2;
  %206 = %201.0;
  (%202, %203, %204, %205, %206)
}

def @func_5029() -> (Tensor[(5, 11, 10), bool],) {
  %207 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %208 = %207.0;
  (%208,)
}

def @func_150(%var_108: Tensor[(5, 11, 10), float32]) -> (Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  %209 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %210 = %209.0;
  %211 = cast(%var_108, dtype="uint16") /* ty=Tensor[(5, 11, 10), uint16] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="uint16") /* ty=Tensor[(5, 11, 10), uint16] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %215 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %216 = multiply(%213, %214) /* ty=Tensor[(5, 11, 10), uint16] */;
  %217 = %215.0;
  (%216, %217)
}

def @func_10273(%var_10267: Tensor[(112), uint64]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
  %218 = @func_7180() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %219 = cast(%var_10267, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %220 = reshape(%219, newshape=[4, 2, 14]) /* ty=Tensor[(4, 2, 14), uint64] */;
  %221 = %218.0;
  %222 = @func_5133() /* ty=Tensor[(5, 11, 10), float64] */;
  %223 = @func_7868(%220) /* ty=Tensor[(4, 2, 14), uint64] */;
  (%221, %222, %223, %var_10267)
}

def @func_4581() -> Tensor[(5, 11, 10), float64] {
  @func_1659() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_522() -> Tensor[(5, 11, 10), float64] {
  %224 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %224.0
}

def @func_7442(%var_7405: Tensor[(12, 4, 5), bool]) -> (Tensor[(12, 4, 5), float32], Tensor[(5, 11, 10), float32], Tensor[(12, 4, 5), bool], Tensor[(5, 11, 10), float32]) {
  %225 = cast(%var_7405, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %226 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(12, 4, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %229 = logical_or(%227, %228) /* ty=Tensor[(12, 4, 5), bool] */;
  %230 = cast(%229, dtype="float32") /* ty=Tensor[(12, 4, 5), float32] */;
  %231 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %232 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %233 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%229, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %236 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %237 = asinh(%230) /* ty=Tensor[(12, 4, 5), float32] */;
  %238 = %231.1;
  %239 = logical_and(%234, %235) /* ty=Tensor[(12, 4, 5), bool] */;
  %240 = %236.3;
  (%237, %238, %239, %240)
}

def @func_13131() -> (Tensor[(5, 11, 10), float32],) {
  %241 = @func_12291() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %242 = %241.0;
  (%242,)
}

def @func_4348() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %243 = @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %244 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %245 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %246 = %243.1;
  %247 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %248 = %244.2;
  %249 = %245.1;
  (%246, %247, %248, %249)
}

def @func_9483() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) {
  %250 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %251 = @func_5699() /* ty=Tensor[(5, 11, 10), float64] */;
  %252 = @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */;
  %253 = %250.1;
  (%251, %252, %253)
}

def @func_2933() -> Tensor[(5, 11, 10), float64] {
  %254 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %254.0
}

def @func_8453() -> Tensor[(5, 11, 10), uint16] {
  %255 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %255.0
}

def @func_5605() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %256 = @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %257 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %258 = @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %259 = %256.0;
  %260 = %257.0;
  %261 = %258.3;
  (%259, %260, %261)
}

def @func_5054() -> Tensor[(5, 11, 10), float32] {
  @func_4442() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_5669(%var_5665: Tensor[(12, 7, 11), float32]) -> (Tensor[(12, 7, 11), bool],) {
  %262 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 1, 11), float32] */, dtype="bool") /* ty=Tensor[(12, 1, 11), bool] */;
  %263 = cast(%var_5665, dtype="bool") /* ty=Tensor[(12, 7, 11), bool] */;
  %264 = greater_equal(%262, %263) /* ty=Tensor[(12, 7, 11), bool] */;
  (%264,)
}

def @func_643(%var_637: Tensor[(5, 11, 10), float32]) -> (Tensor[(5, 11, 10), float64],) {
  %265 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %266 = %265.0;
  %267 = cast(%var_637, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%266, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %271 = subtract(%269, %270) /* ty=Tensor[(5, 11, 10), float64] */;
  (%271,)
}

def @func_10918(%var_10910: Tensor[(4, 2, 7), int64]) -> Tensor[(4, 2, 7), bool] {
  %272 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 2, 1), int64] */, dtype="bool") /* ty=Tensor[(4, 2, 1), bool] */;
  %273 = cast(%var_10910, dtype="bool") /* ty=Tensor[(4, 2, 7), bool] */;
  equal(%272, %273) /* ty=Tensor[(4, 2, 7), bool] */
}

def @func_3747() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
  %274 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %275 = @func_1589() /* ty=Tensor[(5, 11, 10), bool] */;
  %276 = %274.1;
  (%275, %276)
}

def @func_15424() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %277 = @func_12815() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %278 = @func_9050() /* ty=Tensor[(5, 11, 10), float32] */;
  %279 = %277.1;
  (%278, %279)
}

def @func_9677() -> (Tensor[(5, 11, 10), float64],) {
  %280 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %281 = %280.1;
  (%281,)
}

def @func_7194() -> Tensor[(5, 11, 10), int16] {
  %282 = @func_6850() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */;
  %282.0
}

def @func_9050() -> Tensor[(5, 11, 10), float32] {
  @func_4442() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_10083() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
  %283 = @func_9224() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %284 = @func_7180() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %285 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %286 = cast(meta[relay.Constant][8] /* ty=Tensor[(112), uint64] */, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %287 = reshape(%286, newshape=[4, 2, 14]) /* ty=Tensor[(4, 2, 14), uint64] */;
  %288 = %283.0;
  %289 = %284.0;
  %290 = %285.0;
  %291 = @func_7868(%287) /* ty=Tensor[(4, 2, 14), uint64] */;
  (%288, %289, %290, %291, meta[relay.Constant][8] /* ty=Tensor[(112), uint64] */)
}

def @func_8659(%var_8632: Tensor[(112), uint64]) -> (Tensor[(5, 11, 10), float32], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
  %292 = @func_8585() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %293 = cast(%var_8632, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %294 = reshape(%293, newshape=[4, 2, 14]) /* ty=Tensor[(4, 2, 14), uint64] */;
  %295 = %292.0;
  %296 = @func_7868(%294) /* ty=Tensor[(4, 2, 14), uint64] */;
  (%295, %296, %var_8632)
}

def @func_10794(%var_10754: Tensor[(756), bool]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(12, 7, 9), float32], Tensor[(756), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %297 = @func_5502() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %298 = cast(%var_10754, dtype="bool") /* ty=Tensor[(756), bool] */;
  %299 = cast(%var_10754, dtype="bool") /* ty=Tensor[(756), bool] */;
  %300 = reshape(%298, newshape=[12, 7, 9]) /* ty=Tensor[(12, 7, 9), bool] */;
  %301 = reshape(%299, newshape=[12, 7, 9]) /* ty=Tensor[(12, 7, 9), bool] */;
  %302 = @func_8110(%300, %301) /* ty=(Tensor[(12, 7, 9), bool], Tensor[(12, 7, 9), float32]) */;
  %303 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %304 = %297.0;
  %305 = @func_9321() /* ty=Tensor[(5, 11, 10), float32] */;
  %306 = %302.1;
  %307 = %303.4;
  %308 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  %309 = @func_5699() /* ty=Tensor[(5, 11, 10), float64] */;
  %310 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  (%304, %305, %306, %var_10754, %307, %308, %309, %310)
}

def @func_7249() -> Tensor[(5, 11, 10), float64] {
  %311 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %311.0
}

def @func_8607() -> (Tensor[(4, 15, 12), uint64],) {
  %312 = @func_6131() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64], Tensor[(720), float64]) */;
  %313 = %312.1;
  (%313,)
}

def @func_9721(%var_9699: Tensor[(11, 33), uint16]) -> (Tensor[(5, 11, 10), bool], Tensor[(18), int8], Tensor[(3, 6), int8], Tensor[(11, 33), bool], Tensor[(5, 11, 10), bool], Tensor[(11, 33), float32]) {
  %314 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %315 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 33), uint16] */, dtype="uint16") /* ty=Tensor[(11, 33), uint16] */;
  %316 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 6), int8] */, dtype="int8") /* ty=Tensor[(3, 6), int8] */;
  %317 = reshape(%315, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), uint16] */;
  %318 = reshape(%316, newshape=[18]) /* ty=Tensor[(18), int8] */;
  %319 = @func_9398(%317, %318) /* ty=(Tensor[(11, 3, 11), float32], Tensor[(5, 11, 10), float32], Tensor[(18), int8], Tensor[(5, 11, 10), float64]) */;
  %320 = cast(%var_9699, dtype="bool") /* ty=Tensor[(11, 33), bool] */;
  %321 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(11, 33), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %322 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 33), uint16] */, dtype="bool") /* ty=Tensor[(11, 33), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %324 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %325 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 33), uint16] */, dtype="float32") /* ty=Tensor[(11, 33), float32] */;
  %326 = %314.0;
  %327 = %319.2;
  %328 = not_equal(%322, %323) /* ty=Tensor[(11, 33), bool] */;
  %329 = %324.2;
  %330 = asin(%325) /* ty=Tensor[(11, 33), float32] */;
  (%326, %327, meta[relay.Constant][10] /* ty=Tensor[(3, 6), int8] */, %328, %329, %330)
}

def @func_1659() -> Tensor[(5, 11, 10), float64] {
  %331 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %331.0
}

def @func_11068() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(60), float32], Tensor[(5, 11, 10), float32]) {
  %332 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %333 = cast(meta[relay.Constant][11] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %334 = reshape(%333, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float32] */;
  %335 = @func_5933(%334) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(3, 10, 2), int32], Tensor[(3, 10, 2), uint64], Tensor[(3, 10, 2), float32]) */;
  %336 = %332.1;
  %337 = @func_6635() /* ty=Tensor[(5, 11, 10), bool] */;
  %338 = @func_10492() /* ty=Tensor[(5, 11, 10), float64] */;
  %339 = %335.3;
  %340 = @func_10293() /* ty=Tensor[(5, 11, 10), float32] */;
  (%336, %337, %338, %339, meta[relay.Constant][11] /* ty=Tensor[(60), float32] */, %340)
}

def @func_7882() -> Tensor[(5, 11, 10), float64] {
  @func_5399() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_13920(%var_13844: Tensor[(12, 3, 9), float32], %var_13875: Tensor[(12, 3, 9), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(12, 3, 9), bool], Tensor[(12, 3, 9), int8], Tensor[(12, 3, 9), float64]) {
  %341 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %342 = cast(%var_13844, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
  %343 = acosh(%342) /* ty=Tensor[(12, 3, 9), float32] */;
  %344 = cast(%var_13844, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%343, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %348 = cast(%var_13875, dtype="int8") /* ty=Tensor[(12, 3, 9), int8] */;
  %349 = shape_of(%var_13844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%var_13844, dtype="int8") /* ty=Tensor[(12, 3, 9), int8] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %352 = cast(%var_13875, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
  %353 = shape_of(%var_13844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%var_13844, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %356 = %341.1;
  %357 = logical_and(%346, %347) /* ty=Tensor[(12, 3, 9), bool] */;
  %358 = right_shift(%350, %351) /* ty=Tensor[(12, 3, 9), int8] */;
  %359 = divide(%354, %355) /* ty=Tensor[(12, 3, 9), float64] */;
  (%356, %357, %358, %359)
}

def @func_7550() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %360 = @func_5351() /* ty=Tensor[(5, 11, 10), float64] */;
  %361 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  (%360, %361)
}

def @func_16856(%var_16831: Tensor[(208), bool], %var_16847: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(1755), float64], Tensor[(5, 11, 10), float64], Tensor[(208), bool], Tensor[(990), bool], Tensor[(5, 11, 10), float64]) {
  %362 = @func_10592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %363 = cast(meta[relay.Constant][12] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %364 = reshape(%363, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %365 = @func_6227(%364) /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */;
  %366 = @func_8371() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %367 = cast(meta[relay.Constant][13] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %368 = reshape(%367, newshape=[195, 9]) /* ty=Tensor[(195, 9), float64] */;
  %369 = @func_14485(%368) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(195, 9), bool], Tensor[(195, 9), int64], Tensor[(5, 11, 10), int16]) */;
  %370 = cast(%var_16831, dtype="bool") /* ty=Tensor[(208), bool] */;
  %371 = reshape(%370, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %372 = @func_13184(%371) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 13, 16), bool], Tensor[(208), bool], Tensor[(832), bool]) */;
  %373 = cast(%var_16847, dtype="bool") /* ty=Tensor[(990), bool] */;
  %374 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(990), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %375 = cast(meta[relay.Constant][12] /* ty=Tensor[(990), float32] */, dtype="bool") /* ty=Tensor[(990), bool] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?), bool] */;
  %377 = @func_10627() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %378 = %362.0;
  %379 = %365.0;
  %380 = %366.1;
  %381 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %382 = @func_5399() /* ty=Tensor[(5, 11, 10), float64] */;
  %383 = %369.3;
  %384 = %372.0;
  %385 = less(%375, %376) /* ty=Tensor[(990), bool] */;
  %386 = %377.0;
  (%378, %379, %380, %381, %382, %383, meta[relay.Constant][13] /* ty=Tensor[(1755), float64] */, %384, %var_16831, %385, %386)
}

def @func_11540() -> Tensor[(5, 11, 10), float64] {
  %387 = @func_10649() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %387.0
}

def @func_15905() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %388 = @func_12592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64], Tensor[(5, 11, 10), uint16], Tensor[(1, 675), float64], Tensor[(5, 11, 10), bool]) */;
  %389 = %388.5;
  %390 = @func_11540() /* ty=Tensor[(5, 11, 10), float64] */;
  (%389, %390)
}

def @func_9503() -> (Tensor[(5, 11, 10), bool],) {
  %391 = @func_7347() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %392 = %391.3;
  (%392,)
}

def @func_15380(%var_15333: Tensor[(3, 10, 7), uint64], %var_15373: Tensor[(225, 3), int8]) -> (Tensor[(3, 10, 7), bool], Tensor[(3, 10, 7), float32], Tensor[(5, 11, 10), float32], Tensor[(225, 3), int8]) {
  %393 = cast(%var_15333, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
  %394 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(3, 10, 7), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 10, 7), uint64] */, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %397 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 10, 7), uint64] */, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %398 = cast(%var_15373, dtype="int8") /* ty=Tensor[(225, 3), int8] */;
  %399 = reshape(%398, newshape=[5, 135]) /* ty=Tensor[(5, 135), int8] */;
  %400 = @func_6878(%399) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 135), int8], Tensor[(5, 11, 10), float32]) */;
  %401 = not_equal(%395, %396) /* ty=Tensor[(3, 10, 7), bool] */;
  %402 = acosh(%397) /* ty=Tensor[(3, 10, 7), float32] */;
  %403 = %400.1;
  (%401, %402, %403, %var_15373)
}

def @func_11811() -> (Tensor[(5, 11, 10), float64],) {
  %404 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  (%404,)
}

def @func_4086() -> (Tensor[(5, 11, 10), float32],) {
  %405 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %406 = %405.0;
  (%406,)
}

def @func_10627() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %407 = @func_10022() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %408 = @func_4608() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %409 = %407.3;
  %410 = %408.0;
  (%409, %410)
}

def @func_11638(%var_11582: Tensor[(21), float32]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(5, 11, 10), float64]) {
  %411 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %412 = cast(%var_11582, dtype="float32") /* ty=Tensor[(21), float32] */;
  %413 = reshape(%412, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %414 = @func_6403(%413) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(294), float32]) */;
  %415 = @func_10592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %416 = %411.0;
  %417 = %414.1;
  %418 = %415.0;
  (%416, %417, %var_11582, %418)
}

def @func_9398(%var_9376: Tensor[(11, 3, 11), uint16], %var_9385: Tensor[(18), int8]) -> (Tensor[(11, 3, 11), float32], Tensor[(5, 11, 10), float32], Tensor[(18), int8], Tensor[(5, 11, 10), float64]) {
  %419 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %420 = cast(%var_9376, dtype="uint16") /* ty=Tensor[(11, 3, 11), uint16] */;
  %421 = minimum(%419, %420) /* ty=Tensor[(11, 3, 11), uint16] */;
  %422 = cast(%421, dtype="float32") /* ty=Tensor[(11, 3, 11), float32] */;
  %423 = cast(%var_9385, dtype="int8") /* ty=Tensor[(18), int8] */;
  %424 = cast(%var_9385, dtype="int8") /* ty=Tensor[(18), int8] */;
  %425 = reshape(%423, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int8] */;
  %426 = reshape(%424, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int8] */;
  %427 = @func_9202(%425, %426) /* ty=(Tensor[(2, 3, 3), bool], Tensor[(5, 11, 10), float32]) */;
  %428 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %429 = cosh(%422) /* ty=Tensor[(11, 3, 11), float32] */;
  %430 = %427.1;
  %431 = %428.1;
  (%429, %430, %var_9385, %431)
}

def @func_6038() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %432 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %433 = %432.1;
  %434 = cast(%433, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %435 = erf(%434) /* ty=Tensor[(5, 11, 10), float64] */;
  %436 = @func_2590() /* ty=Tensor[(5, 11, 10), float64] */;
  (%435, %436)
}

def @func_9224() -> (Tensor[(5, 11, 10), float64],) {
  %437 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %438 = %437.1;
  (%438,)
}

def @func_8110(%var_8088: Tensor[(12, 7, 9), bool], %var_8089: Tensor[(12, 7, 9), bool]) -> (Tensor[(12, 7, 9), bool], Tensor[(12, 7, 9), float32]) {
  %439 = cast(%var_8089, dtype="bool") /* ty=Tensor[(12, 7, 9), bool] */;
  %440 = shape_of(%var_8088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%var_8088, dtype="bool") /* ty=Tensor[(12, 7, 9), bool] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %443 = cast(%var_8088, dtype="float32") /* ty=Tensor[(12, 7, 9), float32] */;
  %444 = logical_or(%441, %442) /* ty=Tensor[(12, 7, 9), bool] */;
  %445 = log(%443) /* ty=Tensor[(12, 7, 9), float32] */;
  (%444, %445)
}

def @func_12228() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %446 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %447 = %446.4;
  %448 = @func_7882() /* ty=Tensor[(5, 11, 10), float64] */;
  (%447, %448)
}

def @func_15761() -> Tensor[(5, 11, 10), float64] {
  @func_3000() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_7685() -> (Tensor[(5, 11, 10), float64], Tensor[(990), float32], Tensor[(990), float32], Tensor[(5, 11, 10), bool]) {
  %449 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %450 = cast(meta[relay.Constant][16] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %451 = reshape(%450, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %452 = @func_4640(%451) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */;
  %453 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %454 = %449.0;
  %455 = %452.3;
  %456 = %453.2;
  (%454, %455, meta[relay.Constant][16] /* ty=Tensor[(990), float32] */, %456)
}

def @func_16591(%var_16583: Tensor[(756), bool]) -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(756), bool]) {
  %457 = @func_6375() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), int16]) */;
  %458 = cast(%var_16583, dtype="bool") /* ty=Tensor[(756), bool] */;
  %459 = reshape(%458, newshape=[756]) /* ty=Tensor[(756), bool] */;
  %460 = @func_10794(%459) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(12, 7, 9), float32], Tensor[(756), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %461 = %457.1;
  %462 = %460.0;
  (%461, %462, %var_16583)
}

def @func_12815() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %463 = @func_6850() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */;
  %464 = @func_7347() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %465 = %463.1;
  %466 = %464.2;
  (%465, %466)
}

def @func_4640(%var_4632: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  %467 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %468 = @func_4505() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %469 = cast(%var_4632, dtype="float32") /* ty=Tensor[(990), float32] */;
  %470 = cast(%var_4632, dtype="float32") /* ty=Tensor[(990), float32] */;
  %471 = reshape(%469, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %472 = reshape(%470, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %473 = @func_4270(%471, %472) /* ty=(Tensor[(9, 10, 11), float32],) */;
  %474 = %467.0;
  %475 = %468.0;
  %476 = %473.0;
  (%474, %475, %476, %var_4632)
}

def @func_9202(%var_9190: Tensor[(2, 3, 3), int8], %var_9191: Tensor[(2, 3, 3), int8]) -> (Tensor[(2, 3, 3), bool], Tensor[(5, 11, 10), float32]) {
  %477 = cast(%var_9191, dtype="bool") /* ty=Tensor[(2, 3, 3), bool] */;
  %478 = shape_of(%var_9190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%var_9190, dtype="bool") /* ty=Tensor[(2, 3, 3), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %481 = not_equal(%479, %480) /* ty=Tensor[(2, 3, 3), bool] */;
  %482 = @func_9050() /* ty=Tensor[(5, 11, 10), float32] */;
  (%481, %482)
}

def @func_2461(%var_2450: Tensor[(675, 1), int8]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64]) {
  %483 = @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %484 = cast(%var_2450, dtype="int8") /* ty=Tensor[(675, 1), int8] */;
  %485 = reshape(%484, newshape=[675]) /* ty=Tensor[(675), int8] */;
  %486 = @func_1887(%485) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(15, 15, 3), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %487 = cast(%var_2450, dtype="float64") /* ty=Tensor[(675, 1), float64] */;
  %488 = %483.0;
  %489 = %486.2;
  %490 = erf(%487) /* ty=Tensor[(675, 1), float64] */;
  (%488, %489, %490)
}

def @func_8203() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
  %491 = @func_3589() /* ty=Tensor[(5, 11, 10), float64] */;
  %492 = @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */;
  (%491, %492)
}

def @func_9248() -> (Tensor[(5, 11, 10), float64],) {
  %493 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
  (%493,)
}

def @func_14579() -> Tensor[(5, 11, 10), float64] {
  @func_3000() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_1589() -> Tensor[(5, 11, 10), bool] {
  %494 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %494.0
}

def @func_7044() -> (Tensor[(5, 11, 10), float64],) {
  %495 = @func_5161() /* ty=Tensor[(5, 11, 10), float64] */;
  (%495,)
}

def @func_12517(%var_12510: Tensor[(2, 15, 3), float64]) -> Tensor[(2, 15, 3), float64] {
  %496 = cast(%var_12510, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  exp(%496) /* ty=Tensor[(2, 15, 3), float64] */
}

def @func_11858() -> Tensor[(5, 11, 10), float64] {
  %497 = @func_8855() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %497.0
}

def @func_15145() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %498 = @func_10649() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %499 = @func_14579() /* ty=Tensor[(5, 11, 10), float64] */;
  %500 = %498.0;
  (%499, %500)
}

def @func_5502() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %501 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %502 = @func_3223() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %503 = %501.3;
  %504 = @func_3589() /* ty=Tensor[(5, 11, 10), float64] */;
  %505 = %502.0;
  (%503, %504, %505)
}

def @func_9832() -> (Tensor[(5, 11, 10), float32],) {
  %506 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %507 = %506.2;
  (%507,)
}

def @func_16713() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %508 = @func_10956() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %509 = @func_3469() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) */;
  %510 = %508.0;
  %511 = %509.1;
  (%510, %511)
}

def @func_4210(%var_4178: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), uint64]) {
  %512 = cast(%var_4178, dtype="float64") /* ty=Tensor[(4, 15, 12), float64] */;
  %513 = cast(%var_4178, dtype="float64") /* ty=Tensor[(4, 15, 12), float64] */;
  %514 = log10(%513) /* ty=Tensor[(4, 15, 12), float64] */;
  %515 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 15, 12), float64] */, dtype="uint64") /* ty=Tensor[(4, 15, 12), uint64] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%514, dtype="uint64") /* ty=Tensor[(4, 15, 12), uint64] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %519 = sin(%512) /* ty=Tensor[(4, 15, 12), float64] */;
  %520 = subtract(%517, %518) /* ty=Tensor[(4, 15, 12), uint64] */;
  (%519, %520)
}

def @func_3223() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
  %521 = @func_2778() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %522 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  %523 = %521.0;
  (%522, %523)
}

def @func_14873(%var_14837: Tensor[(3, 7, 6), int32], %var_14838: Tensor[(3, 7, 6), int32], %var_14848: Tensor[(990), float32], %var_14853: Tensor[(3, 7, 6), int32]) -> (Tensor[(3, 7, 6), bool], Tensor[(5, 11, 10), float64], Tensor[(990), float32], Tensor[(3, 7, 6), bool], Tensor[(4, 15, 12), uint64]) {
  %524 = cast(%var_14838, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %525 = shape_of(%var_14837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%var_14837, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %528 = cast(%var_14848, dtype="float32") /* ty=Tensor[(990), float32] */;
  %529 = reshape(%528, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %530 = @func_4640(%529) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */;
  %531 = cast(%var_14853, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %532 = shape_of(%var_14837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%var_14837, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %535 = @func_14746() /* ty=(Tensor[(4, 15, 12), uint64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %536 = not_equal(%526, %527) /* ty=Tensor[(3, 7, 6), bool] */;
  %537 = %530.1;
  %538 = logical_or(%533, %534) /* ty=Tensor[(3, 7, 6), bool] */;
  %539 = %535.0;
  (%536, %537, %var_14848, %538, %539)
}

def @func_6375() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), int16]) {
  %540 = @func_3223() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %541 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
  %542 = %540.0;
  (%541, %542)
}

def @main(%var_17077: Tensor[(15, 10, 10), float32]) -> Tensor[(15, 10, 10), int8] {
  %543 = cast(%var_17077, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  %544 = cos(%543) /* ty=Tensor[(15, 10, 10), float32] */;
  %545 = cast(%var_17077, dtype="int8") /* ty=Tensor[(15, 10, 10), int8] */;
  %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%544, dtype="int8") /* ty=Tensor[(15, 10, 10), int8] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%547, %548) /* ty=Tensor[(15, 10, 10), int8] */
}

def @func_15222() -> (Tensor[(5, 11, 10), bool],) {
  %549 = @func_6635() /* ty=Tensor[(5, 11, 10), bool] */;
  (%549,)
}

def @func_17071() -> (Tensor[(5, 11, 10), float32],) {
  %550 = @func_16713() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %551 = %550.0;
  (%551,)
}

def @func_12613() -> Tensor[(5, 11, 10), float64] {
  %552 = @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %552.0
}

def @func_863() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %553 = @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %554 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %555 = %553.3;
  %556 = %554.0;
  (%555, %556)
}

def @func_1229() -> (Tensor[(5, 11, 10), float32],) {
  %557 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %558 = %557.2;
  (%558,)
}

def @func_12281() -> (Tensor[(5, 11, 10), bool], Tensor[(4, 2, 7), bool], Tensor[(56), int64]) {
  %559 = @func_11667() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %560 = cast(meta[relay.Constant][18] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
  %561 = reshape(%560, newshape=[4, 2, 7]) /* ty=Tensor[(4, 2, 7), int64] */;
  %562 = %559.0;
  %563 = @func_10918(%561) /* ty=Tensor[(4, 2, 7), bool] */;
  (%562, %563, meta[relay.Constant][18] /* ty=Tensor[(56), int64] */)
}

def @func_3718() -> (Tensor[(5, 11, 10), float32],) {
  %564 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %565 = %564.2;
  (%565,)
}

def @func_2798() -> Tensor[(5, 11, 10), float64] {
  @func_1963() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_5183() -> Tensor[(5, 11, 10), float64] {
  @func_3000() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_1801() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %566 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %567 = %566.0;
  %568 = @func_357() /* ty=Tensor[(5, 11, 10), float64] */;
  (%567, %568)
}

def @func_8371() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %569 = @func_1229() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %570 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %571 = @func_2849() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %572 = %569.0;
  %573 = %570.0;
  %574 = %571.0;
  (%572, %573, %574)
}

def @func_12592() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64], Tensor[(5, 11, 10), uint16], Tensor[(1, 675), float64], Tensor[(5, 11, 10), bool]) {
  %575 = @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %576 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 675), int8] */, dtype="int8") /* ty=Tensor[(1, 675), int8] */;
  %577 = reshape(%576, newshape=[675, 1]) /* ty=Tensor[(675, 1), int8] */;
  %578 = @func_2461(%577) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64]) */;
  %579 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 675), int8] */, dtype="float32") /* ty=Tensor[(1, 675), float32] */;
  %580 = exp(%579) /* ty=Tensor[(1, 675), float32] */;
  %581 = cast(%580, dtype="float32") /* ty=Tensor[(1, 675), float32] */;
  %582 = rsqrt(%581) /* ty=Tensor[(1, 675), float32] */;
  %583 = cast(%582, dtype="float64") /* ty=Tensor[(1, 675), float64] */;
  %584 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %585 = %575.0;
  %586 = @func_12484() /* ty=Tensor[(5, 11, 10), float64] */;
  %587 = %578.2;
  %588 = @func_8453() /* ty=Tensor[(5, 11, 10), uint16] */;
  %589 = atan(%583) /* ty=Tensor[(1, 675), float64] */;
  %590 = %584.0;
  (%585, %586, %587, %588, %589, %590)
}

def @func_10181() -> (Tensor[(5, 11, 10), float32],) {
  %591 = @func_1229() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %592 = %591.0;
  (%592,)
}

def @func_16736() -> (Tensor[(5, 11, 10), float32],) {
  %593 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %594 = %593.1;
  (%594,)
}

def @func_15238() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %595 = @func_4710() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %596 = %595.1;
  %597 = @func_9321() /* ty=Tensor[(5, 11, 10), float32] */;
  (%596, %597)
}

def @func_12915() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  %598 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %599 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %600 = %598.1;
  %601 = %599.0;
  (%600, %601)
}

def @func_1539(%var_1512: Tensor[(5, 11, 10), float64]) -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16]) {
  %602 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %603 = %602.0;
  %604 = cast(%var_1512, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %608 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %609 = greater_equal(%606, %607) /* ty=Tensor[(5, 11, 10), bool] */;
  %610 = %608.1;
  (%609, %610)
}

def @func_8723() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %611 = @func_7952() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %612 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %613 = %611.2;
  %614 = %612.2;
  (%613, %614)
}

def @func_13283() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint16]) {
  %615 = @func_6375() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), int16]) */;
  %616 = @func_7550() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %617 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %618 = %615.1;
  %619 = %616.1;
  %620 = %617.0;
  (%618, %619, %620)
}

def @func_5644() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
  %621 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %622 = @func_5255() /* ty=Tensor[(5, 11, 10), float64] */;
  %623 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %624 = %621.2;
  (%622, %623, %624)
}

def @func_16178() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  %625 = @func_6131() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64], Tensor[(720), float64]) */;
  %626 = @func_13283() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint16]) */;
  %627 = %625.0;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %629 = reshape(%628, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %630 = @func_643(%629) /* ty=(Tensor[(5, 11, 10), float64],) */;
  %631 = %626.1;
  %632 = cast(%631, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %633 = reshape(%632, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float64] */;
  %634 = %630.0;
  %635 = @func_2039(%633) /* ty=Tensor[(5, 11, 10), bool] */;
  (%627, %631, %634, %635)
}

def @func_16442() -> Tensor[(5, 11, 10), float64] {
  %636 = @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %636.0
}

def @func_357() -> Tensor[(5, 11, 10), float64] {
  %637 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %637.0
}

def @func_1963() -> Tensor[(5, 11, 10), float64] {
  @func_1702() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_8813() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %638 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %639 = @func_5644() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %640 = @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %641 = %638.2;
  %642 = %639.0;
  %643 = %640.1;
  %644 = @func_5699() /* ty=Tensor[(5, 11, 10), float64] */;
  %645 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  (%641, %642, %643, %644, %645)
}

def @func_10133() -> (Tensor[(5, 11, 10), bool],) {
  %646 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %647 = %646.0;
  (%647,)
}

def @func_13567(%var_13491: Tensor[(12, 6, 15), uint8], %var_13492: Tensor[(12, 6, 15), uint8]) -> (Tensor[(12, 6, 15), bool], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint8]) {
  %648 = cast(%var_13492, dtype="bool") /* ty=Tensor[(12, 6, 15), bool] */;
  %649 = shape_of(%var_13491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%var_13491, dtype="bool") /* ty=Tensor[(12, 6, 15), bool] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %652 = @func_12506() /* ty=(Tensor[(5, 11, 10), uint8],) */;
  %653 = not_equal(%650, %651) /* ty=Tensor[(12, 6, 15), bool] */;
  %654 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %655 = %652.0;
  (%653, %654, %655)
}

def @func_9321() -> Tensor[(5, 11, 10), float32] {
  %656 = @func_1229() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %656.0
}

def @func_1491() -> Tensor[(5, 11, 10), int16] {
  %657 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
  %658 = cast(%657, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %659 = asin(%658) /* ty=Tensor[(5, 11, 10), float64] */;
  %660 = cast(%657, dtype="int16") /* ty=Tensor[(5, 11, 10), int16] */;
  %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%659, dtype="int16") /* ty=Tensor[(5, 11, 10), int16] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%662, %663) /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_281() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  %664 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %665 = %664.0;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %667 = reshape(%666, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %668 = @func_150(%667) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %669 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %670 = %668.0;
  %671 = %669.0;
  (%665, %670, %671)
}

def @func_15941() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %672 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %673 = @func_12228() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %674 = %672.0;
  %675 = %673.0;
  (%674, %675)
}

def @func_8965() -> Tensor[(5, 11, 10), float64] {
  @func_3589() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_3589() -> Tensor[(5, 11, 10), float64] {
  %676 = @func_2778() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %676.0
}

def @func_7002() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %677 = @func_4608() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %678 = @func_4710() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %679 = @func_4165() /* ty=Tensor[(5, 11, 10), bool] */;
  %680 = %677.0;
  %681 = @func_2933() /* ty=Tensor[(5, 11, 10), float64] */;
  %682 = %678.1;
  (%679, %680, %681, %682)
}

def @func_1380(%var_1370: Tensor[(1, 3, 7), float32], %var_1371: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) {
  %683 = cast(%var_1370, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %684 = cast(%var_1371, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %685 = cast(meta[relay.Constant][20] /* ty=Tensor[(550, 1), float32] */, dtype="float32") /* ty=Tensor[(550, 1), float32] */;
  %686 = reshape(%685, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %687 = @func_643(%686) /* ty=(Tensor[(5, 11, 10), float64],) */;
  %688 = not_equal(%683, %684) /* ty=Tensor[(14, 3, 7), bool] */;
  %689 = %687.0;
  (%688, %689, meta[relay.Constant][20] /* ty=Tensor[(550, 1), float32] */)
}

def @func_10809() -> Tensor[(5, 11, 10), float32] {
  %690 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %690.1
}

def @func_15062() -> Tensor[(5, 11, 10), bool] {
  %691 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %691.0
}

def @func_12956() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %692 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %693 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %694 = %692.0;
  %695 = %693.2;
  (%694, %695)
}

def @func_3124() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %696 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %697 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
  %698 = %696.0;
  (%697, %698)
}

def @func_1735() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  %699 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %700 = @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %701 = %699.2;
  %702 = %700.0;
  (%701, %702)
}

def @func_4369() -> Tensor[(5, 11, 10), uint8] {
  %703 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %703.3
}

def @func_4688() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  %704 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
  %705 = @func_2798() /* ty=Tensor[(5, 11, 10), float64] */;
  %706 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
  (%704, %705, %706)
}

def @func_2124() -> (Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  %707 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %708 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %709 = %707.1;
  %710 = %708.1;
  (%709, %710)
}

def @func_14746() -> (Tensor[(4, 15, 12), uint64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %711 = @func_10345() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64]) */;
  %712 = @func_1801() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %713 = @func_10022() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %714 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %715 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %716 = %711.1;
  %717 = %712.1;
  %718 = %713.3;
  %719 = %714.0;
  %720 = @func_5133() /* ty=Tensor[(5, 11, 10), float64] */;
  %721 = %715.2;
  (%716, %717, %718, %719, %720, %721)
}

def @func_16534() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %722 = @func_11540() /* ty=Tensor[(5, 11, 10), float64] */;
  %723 = @func_8965() /* ty=Tensor[(5, 11, 10), float64] */;
  %724 = @func_5255() /* ty=Tensor[(5, 11, 10), float64] */;
  (%722, %723, %724)
}

def @func_6403(%var_6391: Tensor[(21), float32]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(294), float32]) {
  %725 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %726 = cast(%var_6391, dtype="float32") /* ty=Tensor[(21), float32] */;
  %727 = cast(meta[relay.Constant][21] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %728 = reshape(%726, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
  %729 = reshape(%727, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %730 = @func_1380(%728, %729) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
  %731 = %725.1;
  %732 = %730.1;
  (%731, %732, %var_6391, meta[relay.Constant][21] /* ty=Tensor[(294), float32] */)
}

def @func_10897() -> (Tensor[(5, 11, 10), float32],) {
  %733 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %734 = %733.1;
  (%734,)
}

def @func_14147() -> Tensor[(5, 11, 10), bool] {
  @func_1589() /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_13713(%var_13669: Tensor[(1, 6, 5), uint32]) -> (Tensor[(5, 11, 10), float32], Tensor[(?, 6, 5), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %735 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %736 = cast(meta[relay.Constant][22] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %737 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 6, 5), uint32] */, dtype="uint32") /* ty=Tensor[(1, 6, 5), uint32] */;
  %738 = bitwise_xor(%736, %737) /* ty=Tensor[(1, 6, 5), uint32] */;
  %739 = cast(%var_13669, dtype="bool") /* ty=Tensor[(1, 6, 5), bool] */;
  %740 = shape_of(%738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%738, dtype="bool") /* ty=Tensor[(1, 6, 5), bool] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %743 = logical_or(%741, %742) /* ty=Tensor[(?, 6, 5), bool] */;
  %744 = cast(meta[relay.Constant][22] /* ty=uint32 */, dtype="int16") /* ty=int16 */;
  %745 = cast(%743, dtype="int16") /* ty=Tensor[(?, 6, 5), int16] */;
  %746 = @func_1735() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %747 = @func_8723() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %748 = %735.0;
  %749 = bitwise_or(%744, %745) /* ty=Tensor[(?, 6, 5), int16] */;
  %750 = %746.0;
  %751 = %747.1;
  (%748, %749, %750, %751)
}

def @func_13441(%var_13384: Tensor[(1, 2, 9), uint8], %var_13385: Tensor[(1, 2, 9), uint8]) -> (Tensor[(5, 11, 10), float32], Tensor[(?, 2, 9), int32]) {
  %752 = @func_8585() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %753 = cast(%var_13385, dtype="uint8") /* ty=Tensor[(1, 2, 9), uint8] */;
  %754 = shape_of(%var_13384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%var_13384, dtype="uint8") /* ty=Tensor[(1, 2, 9), uint8] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %757 = multiply(%755, %756) /* ty=Tensor[(?, 2, 9), uint8] */;
  %758 = cast(%var_13384, dtype="uint32") /* ty=Tensor[(1, 2, 9), uint32] */;
  %759 = shape_of(%757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(%757, dtype="uint32") /* ty=Tensor[(?, 2, 9), uint32] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %762 = bitwise_or(%760, %761) /* ty=Tensor[(?, 2, 9), uint32] */;
  %763 = cast(%757, dtype="int32") /* ty=Tensor[(?, 2, 9), int32] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%762, dtype="int32") /* ty=Tensor[(?, 2, 9), int32] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %767 = %752.0;
  %768 = bitwise_and(%765, %766) /* ty=Tensor[(?, 2, 9), int32] */;
  (%767, %768)
}

def @func_5742() -> Tensor[(5, 11, 10), int16] {
  @func_1491() /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_15085(%var_15067: Tensor[(4, 1, 3), float64]) -> Tensor[(4, 1, 3), float64] {
  %769 = cast(%var_15067, dtype="float64") /* ty=Tensor[(4, 1, 3), float64] */;
  sin(%769) /* ty=Tensor[(4, 1, 3), float64] */
}

def @func_9891() -> (Tensor[(5, 11, 10), float64],) {
  %770 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  (%770,)
}

def @func_4608() -> (Tensor[(5, 11, 10), float32],) {
  %771 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %772 = %771.0;
  (%772,)
}

def @func_7868(%var_7835: Tensor[(4, 2, 14), uint64]) -> Tensor[(4, 2, 14), uint64] {
  %773 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 2, 14), uint64] */, dtype="uint64") /* ty=Tensor[(4, 2, 14), uint64] */;
  %774 = shape_of(%var_7835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%var_7835, dtype="uint64") /* ty=Tensor[(4, 2, 14), uint64] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%775, %776) /* ty=Tensor[(4, 2, 14), uint64] */
}

def @func_15491() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %777 = @func_5011() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %778 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %779 = %777.0;
  %780 = @func_2798() /* ty=Tensor[(5, 11, 10), float64] */;
  %781 = %778.1;
  (%779, %780, %781)
}

def @func_13458() -> (Tensor[(5, 11, 10), float64],) {
  %782 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %783 = %782.0;
  (%783,)
}

def @func_14568() -> Tensor[(5, 11, 10), float64] {
  %784 = @func_7482() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %784.1
}

def @func_1106() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %785 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %786 = %785.0;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %788 = cast(%786, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %789 = reshape(%788, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %790 = @func_150(%789) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %791 = sin(%787) /* ty=Tensor[(5, 11, 10), float32] */;
  %792 = %790.1;
  (%791, %792)
}

def @func_10293() -> Tensor[(5, 11, 10), float32] {
  %793 = @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %793.0
}

def @func_84() -> (Tensor[(5, 11, 10), float32],) {
  %794 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %795 = sinh(%794) /* ty=Tensor[(5, 11, 10), float32] */;
  (%795,)
}

def @func_584() -> (Tensor[(5, 11, 10), float64],) {
  %796 = @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %797 = %796.3;
  (%797,)
}

def @func_15271() -> (Tensor[(5, 11, 10), float32],) {
  %798 = @func_3718() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %799 = %798.0;
  (%799,)
}

def @func_5161() -> Tensor[(5, 11, 10), float64] {
  %800 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
  %800.0
}

def @func_2849() -> (Tensor[(5, 11, 10), float64],) {
  %801 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
  (%801,)
}

def @func_13378(%var_13376: Tensor[(294), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(14, 3, 7), bool], Tensor[(21), float32], Tensor[(294), float32]) {
  %802 = @func_6437() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %803 = @func_5644() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %804 = @func_6495() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %805 = cast(meta[relay.Constant][26] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %806 = cast(%var_13376, dtype="float32") /* ty=Tensor[(294), float32] */;
  %807 = reshape(%805, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
  %808 = reshape(%806, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %809 = @func_1380(%807, %808) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
  %810 = %802.0;
  %811 = %803.0;
  %812 = @func_10809() /* ty=Tensor[(5, 11, 10), float32] */;
  %813 = %804.0;
  %814 = @func_7249() /* ty=Tensor[(5, 11, 10), float64] */;
  %815 = %809.0;
  (%810, %811, %812, %813, %814, %815, meta[relay.Constant][26] /* ty=Tensor[(21), float32] */, %var_13376)
}

def @func_8161(%var_8133: Tensor[(9, 1, 1), int64], %var_8134: Tensor[(9, 15, 12), int64]) -> (Tensor[(9, 15, 12), int64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %816 = cast(%var_8133, dtype="int64") /* ty=Tensor[(9, 1, 1), int64] */;
  %817 = cast(%var_8134, dtype="int64") /* ty=Tensor[(9, 15, 12), int64] */;
  %818 = add(%816, %817) /* ty=Tensor[(9, 15, 12), int64] */;
  %819 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
  %820 = @func_5133() /* ty=Tensor[(5, 11, 10), float64] */;
  (%818, %819, %820)
}

def @func_10387() -> (Tensor[(5, 11, 10), float32],) {
  %821 = @func_10293() /* ty=Tensor[(5, 11, 10), float32] */;
  (%821,)
}

def @func_11121() -> (Tensor[(5, 11, 10), uint8],) {
  %822 = @func_9483() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %823 = %822.1;
  (%823,)
}

def @func_16195() -> Tensor[(5, 11, 10), float64] {
  %824 = @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %824.0
}

def @func_16302() -> (Tensor[(5, 11, 10), float64],) {
  %825 = @func_9180() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %826 = %825.0;
  (%826,)
}

def @func_6437() -> (Tensor[(5, 11, 10), float64],) {
  %827 = @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %828 = %827.1;
  (%828,)
}

def @func_15324() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %829 = @func_8480() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %830 = @func_6437() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %831 = %829.0;
  %832 = %830.0;
  (%831, %832)
}

def @func_12720() -> (Tensor[(5, 11, 10), int16],) {
  %833 = @func_11342() /* ty=Tensor[(5, 11, 10), int16] */;
  (%833,)
}

def @func_6850() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
  %834 = @func_5029() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %835 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  %836 = %834.0;
  (%835, %836)
}

def @func_5699() -> Tensor[(5, 11, 10), float64] {
  @func_2235() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_214() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
  %837 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %838 = %837.0;
  %839 = cast(%838, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %840 = reshape(%839, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %841 = @func_150(%840) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %842 = %841.0;
  %843 = cast(%838, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%842, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %847 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %848 = logical_or(%845, %846) /* ty=Tensor[(5, 11, 10), bool] */;
  %849 = %847.0;
  (%848, %849)
}

def @func_5351() -> Tensor[(5, 11, 10), float64] {
  @func_5183() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_7347() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  %850 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %851 = @func_6850() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */;
  %852 = @func_2235() /* ty=Tensor[(5, 11, 10), float64] */;
  %853 = %850.0;
  %854 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  %855 = %851.1;
  (%852, %853, %854, %855)
}

def @func_6819() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
  %856 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %857 = @func_5699() /* ty=Tensor[(5, 11, 10), float64] */;
  %858 = %856.0;
  %859 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %860 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
  (%857, %858, %859, %860)
}

def @func_13828(%var_13729: Tensor[(7, 9, 4), float32], %var_13800: Tensor[(756), bool], %var_13816: Tensor[(7, 9, 4), float64], %var_13826: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(7, 9, 4), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(756), bool], Tensor[(7, 9, 4), bool], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  %861 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %862 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 9, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 9, 4), bool] */;
  %863 = shape_of(%var_13729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%var_13729, dtype="bool") /* ty=Tensor[(7, 9, 4), bool] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %866 = less(%864, %865) /* ty=Tensor[(7, 9, 4), bool] */;
  %867 = cast(%var_13729, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %868 = asin(%867) /* ty=Tensor[(7, 9, 4), float32] */;
  %869 = cast(%868, dtype="int32") /* ty=Tensor[(7, 9, 4), int32] */;
  %870 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%866, dtype="int32") /* ty=Tensor[(7, 9, 4), int32] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %873 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %874 = cast(%var_13800, dtype="bool") /* ty=Tensor[(756), bool] */;
  %875 = reshape(%874, newshape=[756]) /* ty=Tensor[(756), bool] */;
  %876 = @func_10794(%875) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(12, 7, 9), float32], Tensor[(756), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %877 = cast(%var_13729, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %878 = acosh(%877) /* ty=Tensor[(7, 9, 4), float32] */;
  %879 = cast(%878, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %880 = log(%879) /* ty=Tensor[(7, 9, 4), float64] */;
  %881 = cast(%var_13816, dtype="bool") /* ty=Tensor[(7, 9, 4), bool] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="bool") /* ty=Tensor[(7, 9, 4), bool] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %885 = cast(%var_13826, dtype="float32") /* ty=Tensor[(990), float32] */;
  %886 = cast(%var_13826, dtype="float32") /* ty=Tensor[(990), float32] */;
  %887 = reshape(%885, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %888 = reshape(%886, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %889 = @func_4270(%887, %888) /* ty=(Tensor[(9, 10, 11), float32],) */;
  %890 = %861.0;
  %891 = bitwise_or(%871, %872) /* ty=Tensor[(7, 9, 4), int32] */;
  %892 = %873.2;
  %893 = %876.6;
  %894 = logical_or(%883, %884) /* ty=Tensor[(7, 9, 4), bool] */;
  %895 = %889.0;
  (%890, %891, %892, %893, %var_13800, %894, %895, %var_13826)
}

def @func_10109() -> (Tensor[(5, 11, 10), float32],) {
  %896 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %897 = %896.1;
  (%897,)
}

def @func_1702() -> Tensor[(5, 11, 10), float64] {
  %898 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %898.0
}

def @func_4165() -> Tensor[(5, 11, 10), bool] {
  %899 = @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %899.0
}

def @func_12997() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %900 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %901 = @func_5351() /* ty=Tensor[(5, 11, 10), float64] */;
  %902 = %900.1;
  (%901, %902)
}

def @func_13223() -> Tensor[(5, 11, 10), float32] {
  %903 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %903.1
}

def @func_17034() -> (Tensor[(5, 11, 10), uint8],) {
  %904 = @func_16069() /* ty=(Tensor[(5, 11, 10), uint8],) */;
  %905 = %904.0;
  (%905,)
}

def @func_1349(%var_1330: Tensor[(15, 15, 3), int8]) -> Tensor[(15, 15, 3), int8] {
  %906 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 15, 3), int8] */, dtype="int8") /* ty=Tensor[(15, 15, 3), int8] */;
  %907 = shape_of(%var_1330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%var_1330, dtype="int8") /* ty=Tensor[(15, 15, 3), int8] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%908, %909) /* ty=Tensor[(15, 15, 3), int8] */
}

def @func_12506() -> (Tensor[(5, 11, 10), uint8],) {
  %910 = @func_11121() /* ty=(Tensor[(5, 11, 10), uint8],) */;
  %911 = %910.0;
  (%911,)
}

def @func_8855() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %912 = @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %913 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %914 = %912.0;
  %915 = %913.1;
  (%914, %915)
}

def @func_16683() -> Tensor[(5, 11, 10), float32] {
  %916 = @func_13131() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %916.0
}

def @func_1783() -> (Tensor[(5, 11, 10), float32],) {
  %917 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %918 = %917.2;
  (%918,)
}

def @func_5255() -> Tensor[(5, 11, 10), float64] {
  %919 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
  %919.0
}

def @func_11738() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %920 = @func_1659() /* ty=Tensor[(5, 11, 10), float64] */;
  %921 = @func_3589() /* ty=Tensor[(5, 11, 10), float64] */;
  (%920, %921)
}

def @func_8577(%var_8562: int64, %var_8563: Tensor[(9, 10, 2), int64]) -> (Tensor[(9, 10, 2), int64],) {
  %922 = cast(%var_8562, dtype="int64") /* ty=int64 */;
  %923 = cast(%var_8563, dtype="int64") /* ty=Tensor[(9, 10, 2), int64] */;
  %924 = bitwise_or(%922, %923) /* ty=Tensor[(9, 10, 2), int64] */;
  (%924,)
}

def @func_4063() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %925 = @func_2778() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %926 = @func_2849() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %927 = %925.0;
  %928 = %926.0;
  (%927, %928)
}

def @func_337() -> (Tensor[(5, 11, 10), float64],) {
  %929 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %930 = %929.2;
  %931 = cast(%930, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %932 = log2(%931) /* ty=Tensor[(5, 11, 10), float64] */;
  (%932,)
}

def @func_3063() -> Tensor[(5, 11, 10), uint8] {
  %933 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %933.3
}

def @func_11388() -> Tensor[(5, 11, 10), float32] {
  %934 = @func_1229() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %934.0
}

def @func_12484() -> Tensor[(5, 11, 10), float64] {
  %935 = @func_10592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %935.1
}

def @func_8480() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %936 = @func_3223() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %937 = @func_2590() /* ty=Tensor[(5, 11, 10), float64] */;
  %938 = %936.1;
  (%937, %938)
}

def @func_6878(%var_6860: Tensor[(5, 135), int8]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 135), int8], Tensor[(5, 11, 10), float32]) {
  %939 = cast(%var_6860, dtype="int8") /* ty=Tensor[(5, 135), int8] */;
  %940 = reshape(%939, newshape=[675]) /* ty=Tensor[(675), int8] */;
  %941 = @func_4928(%940) /* ty=(Tensor[(5, 11, 10), int16], Tensor[(15, 15, 3), int8], Tensor[(675), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %942 = @func_4608() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %943 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
  %944 = %941.5;
  %945 = %942.0;
  (%943, %944, %var_6860, %945)
}

def @func_6131() -> (Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64], Tensor[(720), float64]) {
  %946 = cast(meta[relay.Constant][29] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %947 = reshape(%946, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
  %948 = @func_4210(%947) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), uint64]) */;
  %949 = @func_4581() /* ty=Tensor[(5, 11, 10), float64] */;
  %950 = %948.1;
  (%949, %950, meta[relay.Constant][29] /* ty=Tensor[(720), float64] */)
}

def @func_6721(%var_6703: Tensor[(200), int8]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 10, 4), bool], Tensor[(200), int8]) {
  %951 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %952 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %953 = cast(%var_6703, dtype="int8") /* ty=Tensor[(200), int8] */;
  %954 = cast(%var_6703, dtype="int8") /* ty=Tensor[(200), int8] */;
  %955 = reshape(%953, newshape=[5, 10, 4]) /* ty=Tensor[(5, 10, 4), int8] */;
  %956 = reshape(%954, newshape=[5, 10, 4]) /* ty=Tensor[(5, 10, 4), int8] */;
  %957 = @func_4406(%955, %956) /* ty=(Tensor[(5, 10, 4), bool],) */;
  %958 = %951.1;
  %959 = %952.0;
  %960 = %957.0;
  (%958, %959, %960, %var_6703)
}

def @func_14008() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %961 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %962 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %963 = @func_11858() /* ty=Tensor[(5, 11, 10), float64] */;
  %964 = %961.1;
  %965 = %962.0;
  (%963, %964, %965)
}

def @func_5399() -> Tensor[(5, 11, 10), float64] {
  @func_2798() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_7482() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %966 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %967 = @func_7180() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %968 = %966.0;
  %969 = %967.0;
  (%968, %969)
}

def @func_6227(%var_6224: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  %970 = cast(%var_6224, dtype="float32") /* ty=Tensor[(990), float32] */;
  %971 = cast(%var_6224, dtype="float32") /* ty=Tensor[(990), float32] */;
  %972 = reshape(%970, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %973 = reshape(%971, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %974 = @func_4270(%972, %973) /* ty=(Tensor[(9, 10, 11), float32],) */;
  %975 = @func_5742() /* ty=Tensor[(5, 11, 10), int16] */;
  %976 = @func_5054() /* ty=Tensor[(5, 11, 10), float32] */;
  %977 = %974.0;
  (%975, %976, %977, %var_6224)
}

def @func_6753() -> (Tensor[(5, 11, 10), float64],) {
  %978 = @func_5133() /* ty=Tensor[(5, 11, 10), float64] */;
  (%978,)
}

def @func_11144() -> Tensor[(5, 11, 10), float64] {
  %979 = @func_1801() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %979.1
}

def @func_7114() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %980 = @func_6495() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %981 = %980.3;
  %982 = @func_5183() /* ty=Tensor[(5, 11, 10), float64] */;
  %983 = @func_5054() /* ty=Tensor[(5, 11, 10), float32] */;
  (%981, %982, %983)
}

def @func_10127(%var_10119: Tensor[(15, 7, 6), uint8]) -> (Tensor[(15, 7, 6), uint8],) {
  %984 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 7, 6), uint8] */, dtype="uint8") /* ty=Tensor[(15, 7, 6), uint8] */;
  %985 = shape_of(%var_10119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%var_10119, dtype="uint8") /* ty=Tensor[(15, 7, 6), uint8] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %988 = logical_xor(%986, %987) /* ty=Tensor[(15, 7, 6), uint8] */;
  (%988,)
}

def @func_5933(%var_5817: Tensor[(3, 10, 2), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(3, 10, 2), int32], Tensor[(3, 10, 2), uint64], Tensor[(3, 10, 2), float32]) {
  %989 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %990 = cast(meta[relay.Constant][31] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %991 = cast(meta[relay.Constant][32] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %992 = reshape(%990, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
  %993 = reshape(%991, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %994 = @func_1380(%992, %993) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
  %995 = @func_4608() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %996 = cast(%var_5817, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %997 = erf(%996) /* ty=Tensor[(3, 10, 2), float32] */;
  %998 = cast(%997, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %999 = sigmoid(%998) /* ty=Tensor[(3, 10, 2), float32] */;
  %1000 = cast(%999, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %1001 = rsqrt(%1000) /* ty=Tensor[(3, 10, 2), float32] */;
  %1002 = cast(%997, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %1003 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1004 = cast(%1001, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1006 = add(%1004, %1005) /* ty=Tensor[(3, 10, 2), float32] */;
  %1007 = cast(%1006, dtype="int32") /* ty=Tensor[(3, 10, 2), int32] */;
  %1008 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%1001, dtype="int32") /* ty=Tensor[(3, 10, 2), int32] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1011 = cast(%var_5817, dtype="uint64") /* ty=Tensor[(3, 10, 2), uint64] */;
  %1012 = shape_of(%999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%999, dtype="uint64") /* ty=Tensor[(3, 10, 2), uint64] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1015 = cast(%1006, dtype="float64") /* ty=Tensor[(3, 10, 2), float64] */;
  %1016 = log10(%1015) /* ty=Tensor[(3, 10, 2), float64] */;
  %1017 = cast(%1016, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %1018 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  %1019 = %989.0;
  %1020 = %994.2;
  %1021 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %1022 = %995.0;
  %1023 = right_shift(%1009, %1010) /* ty=Tensor[(3, 10, 2), int32] */;
  %1024 = subtract(%1013, %1014) /* ty=Tensor[(3, 10, 2), uint64] */;
  %1025 = cos(%1017) /* ty=Tensor[(3, 10, 2), float32] */;
  (%1018, %1019, %1020, meta[relay.Constant][31] /* ty=Tensor[(21), float32] */, meta[relay.Constant][32] /* ty=Tensor[(294), float32] */, %1021, %1022, %1023, %1024, %1025)
}

def @func_9135() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  %1026 = @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %1027 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1028 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1029 = %1026.0;
  %1030 = @func_8453() /* ty=Tensor[(5, 11, 10), uint16] */;
  %1031 = %1027.2;
  %1032 = @func_8453() /* ty=Tensor[(5, 11, 10), uint16] */;
  %1033 = %1028.0;
  (%1029, %1030, %1031, %1032, %1033)
}

def @func_2039(%var_2022: Tensor[(5, 11, 10), float64]) -> Tensor[(5, 11, 10), bool] {
  %1034 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
  %1035 = cast(%var_2022, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %1036 = shape_of(%1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1037 = cast(%1034, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1037, %1038) /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_2778() -> (Tensor[(5, 11, 10), float64],) {
  %1039 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %1040 = %1039.1;
  (%1040,)
}

def @func_1209() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  %1041 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1042 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %1043 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1044 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %1045 = %1044.0;
  %1046 = cast(%1045, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %1047 = acosh(%1046) /* ty=Tensor[(5, 11, 10), float32] */;
  %1048 = cast(%1047, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %1049 = acos(%1048) /* ty=Tensor[(5, 11, 10), float32] */;
  %1050 = %1042.1;
  %1051 = cast(%1050, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %1052 = reshape(%1051, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %1053 = @func_150(%1052) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %1054 = %1053.0;
  %1055 = cast(%1054, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %1056 = shape_of(%1049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%1049, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1059 = %1041.0;
  %1060 = %1043.3;
  %1061 = less_equal(%1057, %1058) /* ty=Tensor[(5, 11, 10), bool] */;
  (%1059, %1050, %1060, %1061)
}

def @func_10956() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %1062 = @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %1063 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %1064 = %1062.1;
  %1065 = %1063.1;
  (%1064, %1065)
}

def @func_14056() -> (Tensor[(5, 11, 10), float32],) {
  %1066 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %1067 = %1066.3;
  (%1067,)
}

def @func_11493() -> Tensor[(5, 11, 10), float32] {
  %1068 = @func_1801() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1068.0
}

def @func_13094(%var_13055: Tensor[(3, 13, 1), float64]) -> (Tensor[(3, 13, 1), float64],) {
  %1069 = cast(%var_13055, dtype="float64") /* ty=Tensor[(3, 13, 1), float64] */;
  %1070 = acos(%1069) /* ty=Tensor[(3, 13, 1), float64] */;
  (%1070,)
}

def @func_16344() -> (Tensor[(5, 11, 10), uint16],) {
  %1071 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %1072 = %1071.1;
  (%1072,)
}

def @func_4270(%var_4250: Tensor[(9, 10, 11), float32], %var_4251: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), float32],) {
  %1073 = cast(%var_4251, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %1074 = shape_of(%var_4250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%var_4250, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1077 = minimum(%1075, %1076) /* ty=Tensor[(9, 10, 11), float32] */;
  (%1077,)
}

def @func_2083() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) {
  %1078 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %1079 = %1078.2;
  %1080 = cast(%1079, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %1081 = reshape(%1080, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %1082 = @func_643(%1081) /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1083 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
  %1084 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
  %1085 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  %1086 = %1082.0;
  (%1083, %1084, %1085, %1079, %1086)
}

def @func_13639(%var_13595: Tensor[(630), uint8]) -> (Tensor[(5, 11, 10), float64], Tensor[(15, 7, 6), uint8], Tensor[(630), uint8], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
  %1087 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1088 = cast(%var_13595, dtype="uint8") /* ty=Tensor[(630), uint8] */;
  %1089 = reshape(%1088, newshape=[15, 7, 6]) /* ty=Tensor[(15, 7, 6), uint8] */;
  %1090 = @func_10127(%1089) /* ty=(Tensor[(15, 7, 6), uint8],) */;
  %1091 = %1087.1;
  %1092 = %1090.0;
  %1093 = @func_7194() /* ty=Tensor[(5, 11, 10), int16] */;
  %1094 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
  (%1091, %1092, %var_13595, %1093, %1094)
}

def @func_13184(%var_13180: Tensor[(208), bool]) -> (Tensor[(5, 11, 10), float64], Tensor[(4, 13, 16), bool], Tensor[(208), bool], Tensor[(832), bool]) {
  %1095 = cast(%var_13180, dtype="bool") /* ty=Tensor[(208), bool] */;
  %1096 = cast(meta[relay.Constant][33] /* ty=Tensor[(832), bool] */, dtype="bool") /* ty=Tensor[(832), bool] */;
  %1097 = reshape(%1095, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), bool] */;
  %1098 = reshape(%1096, newshape=[4, 13, 16]) /* ty=Tensor[(4, 13, 16), bool] */;
  %1099 = @func_1571(%1097, %1098) /* ty=(Tensor[(4, 13, 16), bool], Tensor[(5, 11, 10), bool]) */;
  %1100 = @func_12484() /* ty=Tensor[(5, 11, 10), float64] */;
  %1101 = %1099.0;
  (%1100, %1101, %var_13180, meta[relay.Constant][33] /* ty=Tensor[(832), bool] */)
}

def @func_16757() -> (Tensor[(7, 1, 14), bool],) {
  %1102 = cast(-8 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %1103 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 1, 14), int64] */, dtype="bool") /* ty=Tensor[(7, 1, 14), bool] */;
  %1104 = less_equal(%1102, %1103) /* ty=Tensor[(7, 1, 14), bool] */;
  (%1104,)
}

def @func_2568(%var_2563: Tensor[(13, 1, 15), float64]) -> (Tensor[(13, 1, 15), float64], Tensor[(5, 11, 10), bool]) {
  %1105 = cast(%var_2563, dtype="float64") /* ty=Tensor[(13, 1, 15), float64] */;
  %1106 = @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1107 = asin(%1105) /* ty=Tensor[(13, 1, 15), float64] */;
  %1108 = %1106.1;
  (%1107, %1108)
}

def @func_3469() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) {
  %1109 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1110 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  %1111 = %1109.2;
  (%1110, %1111)
}

def @func_12664(%var_12630: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(5, 11, 10), float64]) {
  %1112 = cast(%var_12630, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %1113 = @func_7825() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(60), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */;
  %1114 = sinh(%1112) /* ty=Tensor[(13, 9, 3), float32] */;
  %1115 = %1113.0;
  (%1114, %1115)
}

def @func_12291() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %1116 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1117 = @func_11738() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1118 = %1116.0;
  %1119 = %1117.1;
  (%1118, %1119)
}

def @func_15119() -> Tensor[(5, 11, 10), bool] {
  %1120 = @func_9614() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %1120.0
}

def @func_1571(%var_1561: Tensor[(1, 13, 16), bool], %var_1562: Tensor[(4, 13, 16), bool]) -> (Tensor[(4, 13, 16), bool], Tensor[(5, 11, 10), bool]) {
  %1121 = cast(%var_1561, dtype="bool") /* ty=Tensor[(1, 13, 16), bool] */;
  %1122 = cast(%var_1562, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
  %1123 = @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %1124 = logical_or(%1121, %1122) /* ty=Tensor[(4, 13, 16), bool] */;
  %1125 = %1123.0;
  (%1124, %1125)
}

def @func_14962(%var_14958: Tensor[(9, 9, 5), float64]) -> (Tensor[(9, 9, 5), float64],) {
  %1126 = cast(%var_14958, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %1127 = atan(%1126) /* ty=Tensor[(9, 9, 5), float64] */;
  (%1127,)
}

def @func_2170() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  %1128 = @func_1735() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1129 = %1128.0;
  %1130 = @func_1589() /* ty=Tensor[(5, 11, 10), bool] */;
  (%1129, %1130)
}

def @func_17021() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(4, 2, 7), bool]) {
  %1131 = @func_15424() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1132 = @func_12281() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(4, 2, 7), bool], Tensor[(56), int64]) */;
  %1133 = @func_5351() /* ty=Tensor[(5, 11, 10), float64] */;
  %1134 = %1131.0;
  %1135 = %1132.1;
  (%1133, %1134, %1135)
}

def @func_3631(%var_3614: Tensor[(11, 7, 7), float64], %var_3615: Tensor[(11, 7, 7), float64]) -> (Tensor[(11, 7, 7), float64], Tensor[(5, 11, 10), int16]) {
  %1136 = cast(%var_3615, dtype="float64") /* ty=Tensor[(11, 7, 7), float64] */;
  %1137 = shape_of(%var_3614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(%var_3614, dtype="float64") /* ty=Tensor[(11, 7, 7), float64] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1140 = @func_3469() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) */;
  %1141 = mod(%1138, %1139) /* ty=Tensor[(11, 7, 7), float64] */;
  %1142 = %1140.0;
  (%1141, %1142)
}

def @func_14485(%var_14474: Tensor[(195, 9), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(195, 9), bool], Tensor[(195, 9), int64], Tensor[(5, 11, 10), int16]) {
  %1143 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
  %1144 = %1143.4;
  %1145 = cast(%1144, dtype="bool") /* ty=Tensor[(195, 1), bool] */;
  %1146 = cast(%var_14474, dtype="bool") /* ty=Tensor[(195, 9), bool] */;
  %1147 = cast(%1144, dtype="int64") /* ty=Tensor[(195, 1), int64] */;
  %1148 = cast(%var_14474, dtype="int64") /* ty=Tensor[(195, 9), int64] */;
  %1149 = @func_3469() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) */;
  %1150 = @func_9321() /* ty=Tensor[(5, 11, 10), float32] */;
  %1151 = less_equal(%1145, %1146) /* ty=Tensor[(195, 9), bool] */;
  %1152 = multiply(%1147, %1148) /* ty=Tensor[(195, 9), int64] */;
  %1153 = %1149.0;
  (%1150, %1151, %1152, %1153)
}

def @func_4289() -> Tensor[(5, 11, 10), int16] {
  @func_1491() /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_10492() -> Tensor[(5, 11, 10), float64] {
  @func_2798() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_5133() -> Tensor[(5, 11, 10), float64] {
  %1154 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %1154.1
}

def @func_7376() -> Tensor[(5, 11, 10), float64] {
  @func_1115() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_11025() -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %1155 = @func_7825() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(60), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */;
  %1156 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
  %1157 = @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1158 = @func_8023() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %1159 = %1155.3;
  %1160 = %1156.2;
  %1161 = %1157.1;
  %1162 = %1158.1;
  (%1159, %1160, %1161, %1162)
}

def @func_16069() -> (Tensor[(5, 11, 10), uint8],) {
  %1163 = @func_11121() /* ty=(Tensor[(5, 11, 10), uint8],) */;
  %1164 = %1163.0;
  (%1164,)
}

def @func_4442() -> Tensor[(5, 11, 10), float32] {
  %1165 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1165.1
}

def @func_15443(%var_15428: Tensor[(10, 16, 5), float64]) -> (Tensor[(10, 16, 5), float64],) {
  %1166 = cast(%var_15428, dtype="float64") /* ty=Tensor[(10, 16, 5), float64] */;
  %1167 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(10, 16, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1168 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 16, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 16, 5), float64] */;
  %1169 = dyn.reshape(%1166, %1167, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1170 = maximum(%1168, %1169) /* ty=Tensor[(10, 16, 5), float64] */;
  (%1170,)
}

def @func_7825() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(60), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
  %1171 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1172 = cast(meta[relay.Constant][36] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1173 = reshape(%1172, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float32] */;
  %1174 = @func_5933(%1173) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(3, 10, 2), int32], Tensor[(3, 10, 2), uint64], Tensor[(3, 10, 2), float32]) */;
  %1175 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1176 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1177 = %1171.2;
  %1178 = %1174.5;
  %1179 = @func_3063() /* ty=Tensor[(5, 11, 10), uint8] */;
  %1180 = %1175.1;
  %1181 = %1176.0;
  %1182 = @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */;
  (%1177, %1178, meta[relay.Constant][36] /* ty=Tensor[(60), float32] */, %1179, %1180, %1181, %1182)
}

def @func_2235() -> Tensor[(5, 11, 10), float64] {
  %1183 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1183.0
}

def @func_15590() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %1184 = @func_10387() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1185 = %1184.0;
  %1186 = @func_7249() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1185, %1186)
}

def @func_15928() -> (Tensor[(5, 11, 10), float32],) {
  %1187 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1188 = %1187.1;
  (%1188,)
}

def @func_3938() -> Tensor[(5, 11, 10), float64] {
  @func_2933() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_7125() -> (Tensor[(5, 11, 10), float32],) {
  %1189 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1190 = %1189.0;
  (%1190,)
}

def @func_4928(%var_4892: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), int16], Tensor[(15, 15, 3), int8], Tensor[(675), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %1191 = cast(%var_4892, dtype="int8") /* ty=Tensor[(675), int8] */;
  %1192 = reshape(%1191, newshape=[15, 15, 3]) /* ty=Tensor[(15, 15, 3), int8] */;
  %1193 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1194 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1195 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  %1196 = @func_1349(%1192) /* ty=Tensor[(15, 15, 3), int8] */;
  %1197 = @func_4581() /* ty=Tensor[(5, 11, 10), float64] */;
  %1198 = %1193.0;
  %1199 = %1194.0;
  (%1195, %1196, %var_4892, %1197, %1198, %1199)
}

def @func_10649() -> (Tensor[(5, 11, 10), float64],) {
  %1200 = @func_7376() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1200,)
}

def @func_6092() -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), bool]) {
  %1201 = @func_3063() /* ty=Tensor[(5, 11, 10), uint8] */;
  %1202 = @func_1589() /* ty=Tensor[(5, 11, 10), bool] */;
  (%1201, %1202)
}

def @func_11445() -> (Tensor[(8, 4, 2), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1203 = cast(meta[relay.Constant][37] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1204 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 4, 2), uint8] */, dtype="uint8") /* ty=Tensor[(8, 4, 2), uint8] */;
  %1205 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1206 = @func_8855() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1207 = minimum(%1203, %1204) /* ty=Tensor[(8, 4, 2), uint8] */;
  %1208 = %1205.1;
  %1209 = %1206.0;
  (%1207, %1208, %1209)
}

def @func_4120() -> Tensor[(5, 11, 10), bool] {
  %1210 = @func_1735() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1210.1
}

def @func_8585() -> (Tensor[(5, 11, 10), float32],) {
  %1211 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1212 = %1211.0;
  (%1212,)
}

def @func_16241(%var_16219: Tensor[(5, 12, 7), int32], %var_16220: Tensor[(5, 12, 7), int32]) -> (Tensor[(5, 12, 7), int32], Tensor[(5, 11, 10), float32]) {
  %1213 = cast(%var_16220, dtype="int32") /* ty=Tensor[(5, 12, 7), int32] */;
  %1214 = shape_of(%var_16219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1215 = cast(%var_16219, dtype="int32") /* ty=Tensor[(5, 12, 7), int32] */;
  %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1217 = @func_9832() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1218 = bitwise_xor(%1215, %1216) /* ty=Tensor[(5, 12, 7), int32] */;
  %1219 = %1217.0;
  (%1218, %1219)
}

def @func_923() -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %1220 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %1221 = %1220.2;
  %1222 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 11, 10), float32] */, dtype="uint8") /* ty=Tensor[(5, 11, 10), uint8] */;
  %1223 = shape_of(%1221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1224 = cast(%1221, dtype="uint8") /* ty=Tensor[(5, 11, 10), uint8] */;
  %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1226 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1227 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1228 = bitwise_and(%1224, %1225) /* ty=Tensor[(5, 11, 10), uint8] */;
  %1229 = %1226.0;
  %1230 = %1227.0;
  (%1228, %1229, %1230)
}

def @func_1049() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) {
  %1231 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1232 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1233 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1234 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1235 = %1231.0;
  %1236 = %1232.0;
  %1237 = %1233.0;
  %1238 = %1234.2;
  (%1235, %1236, %1237, %1238)
}

def @func_16907(%var_16875: Tensor[(7, 3), float32], %var_16889: Tensor[(90), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(7, 3), float32], Tensor[(294), float32], Tensor[(112), uint64], Tensor[(112), uint64], Tensor[(2, 15, 3), float64], Tensor[(90), float64], Tensor[(5, 11, 10), float32]) {
  %1239 = @func_10109() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1240 = cast(%var_16875, dtype="float32") /* ty=Tensor[(7, 3), float32] */;
  %1241 = cast(meta[relay.Constant][40] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %1242 = reshape(%1240, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
  %1243 = reshape(%1241, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %1244 = @func_1380(%1242, %1243) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
  %1245 = cast(meta[relay.Constant][41] /* ty=Tensor[(112), uint64] */, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %1246 = reshape(%1245, newshape=[112]) /* ty=Tensor[(112), uint64] */;
  %1247 = @func_8659(%1246) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) */;
  %1248 = cast(%var_16889, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1249 = reshape(%1248, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %1250 = @func_10022() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1251 = %1239.0;
  %1252 = %1244.1;
  %1253 = %1247.2;
  %1254 = @func_12517(%1249) /* ty=Tensor[(2, 15, 3), float64] */;
  %1255 = %1250.2;
  (%1251, %1252, %var_16875, meta[relay.Constant][40] /* ty=Tensor[(294), float32] */, %1253, meta[relay.Constant][41] /* ty=Tensor[(112), uint64] */, %1254, %var_16889, %1255)
}

def @func_16213(%var_16207: Tensor[(15, 9, 7), float64]) -> (Tensor[(15, 9, 7), float64],) {
  %1256 = cast(%var_16207, dtype="float64") /* ty=Tensor[(15, 9, 7), float64] */;
  %1257 = atanh(%1256) /* ty=Tensor[(15, 9, 7), float64] */;
  (%1257,)
}

def @func_2002() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %1258 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %1259 = %1258.0;
  %1260 = @func_357() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1259, %1260)
}

def @func_13018() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1261 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1262 = @func_7952() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1263 = %1261.0;
  %1264 = %1262.0;
  (%1263, %1264)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3470() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) {
  %3 = fn () -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) {
    %0 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
    %1 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
    %2 = %0.2;
    (%1, %2)
  };
  %3() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) */
}

def @func_15930() -> (Tensor[(5, 11, 10), float32],) {
  @func_15928() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_6188(%var_6156: Tensor[(990), float32], %var_6173: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32], Tensor[(5, 11, 10), float64], Tensor[(675), int8]) {
  %4 = @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %5 = cast(%var_6156, dtype="float32") /* ty=Tensor[(990), float32] */;
  %6 = cast(%var_6156, dtype="float32") /* ty=Tensor[(990), float32] */;
  %7 = reshape(%5, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %8 = reshape(%6, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %9 = @func_4270(%7, %8) /* ty=(Tensor[(9, 10, 11), float32],) */;
  %10 = cast(%var_6173, dtype="int8") /* ty=Tensor[(675), int8] */;
  %11 = reshape(%10, newshape=[675]) /* ty=Tensor[(675), int8] */;
  %12 = @func_1887(%11) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(15, 15, 3), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %13 = %4.1;
  %14 = %9.0;
  %15 = %12.3;
  (%13, %14, %var_6156, %15, %var_6173)
}

def @func_10022() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %16 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %17 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %18 = %16.2;
  %19 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  %20 = %17.1;
  %21 = @func_2590() /* ty=Tensor[(5, 11, 10), float64] */;
  (%18, %19, %20, %21)
}

def @func_13096(%var_13095: Tensor[(3, 13, 1), float64]) -> (Tensor[(3, 13, 1), float64],) {
  %24 = fn (%var_13055: Tensor[(3, 13, 1), float64]) -> (Tensor[(3, 13, 1), float64],) {
    %22 = cast(%var_13055, dtype="float64") /* ty=Tensor[(3, 13, 1), float64] */;
    %23 = acos(%22) /* ty=Tensor[(3, 13, 1), float64] */;
    (%23,)
  };
  %24(%var_13095) /* ty=(Tensor[(3, 13, 1), float64],) */
}

def @func_13223() -> Tensor[(5, 11, 10), float32] {
  %25 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %25.1
}

def @func_6405(%var_6404: Tensor[(21), float32]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(294), float32]) {
  %34 = fn (%var_6391: Tensor[(21), float32]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(294), float32]) {
    %26 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
    %27 = cast(%var_6391, dtype="float32") /* ty=Tensor[(21), float32] */;
    %28 = cast(meta[relay.Constant][0] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
    %29 = reshape(%27, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
    %30 = reshape(%28, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
    %31 = @func_1380(%29, %30) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
    %32 = %26.1;
    %33 = %31.1;
    (%32, %33, %var_6391, meta[relay.Constant][0] /* ty=Tensor[(294), float32] */)
  };
  %34(%var_6404) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(294), float32]) */
}

def @func_15906() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %38 = fn () -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
    %35 = @func_12592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64], Tensor[(5, 11, 10), uint16], Tensor[(1, 675), float64], Tensor[(5, 11, 10), bool]) */;
    %36 = %35.5;
    %37 = @func_11540() /* ty=Tensor[(5, 11, 10), float64] */;
    (%36, %37)
  };
  %38() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */
}

def @func_523() -> Tensor[(5, 11, 10), float64] {
  %40 = fn () -> Tensor[(5, 11, 10), float64] {
    %39 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %39.0
  };
  %40() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_2933() -> Tensor[(5, 11, 10), float64] {
  %41 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %41.0
}

def @func_13834(%var_13830: Tensor[(7, 9, 4), float32], %var_13831: Tensor[(756), bool], %var_13832: Tensor[(7, 9, 4), float64], %var_13833: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(7, 9, 4), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(756), bool], Tensor[(7, 9, 4), bool], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  @func_13828(%var_13830, %var_13831, %var_13832, %var_13833) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(7, 9, 4), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(756), bool], Tensor[(7, 9, 4), bool], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */
}

def @func_3387(%var_3384: Tensor[(924), uint8], %var_3385: Tensor[(294), float32], %var_3386: Tensor[(11, 6, 14), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(924), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(14, 3, 7), bool], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), uint16], Tensor[(11, 6, 14), uint16]) {
  @func_3382(%var_3384, %var_3385, %var_3386) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(924), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(14, 3, 7), bool], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), uint16], Tensor[(11, 6, 14), uint16]) */
}

def @func_8815() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_8813() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_1116() -> Tensor[(5, 11, 10), float64] {
  %42 = fn () -> Tensor[(5, 11, 10), float64] {
    @func_522() /* ty=Tensor[(5, 11, 10), float64] */
  };
  %42() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_6721(%var_6703: Tensor[(200), int8]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 10, 4), bool], Tensor[(200), int8]) {
  %43 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %44 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %45 = cast(%var_6703, dtype="int8") /* ty=Tensor[(200), int8] */;
  %46 = cast(%var_6703, dtype="int8") /* ty=Tensor[(200), int8] */;
  %47 = reshape(%45, newshape=[5, 10, 4]) /* ty=Tensor[(5, 10, 4), int8] */;
  %48 = reshape(%46, newshape=[5, 10, 4]) /* ty=Tensor[(5, 10, 4), int8] */;
  %49 = @func_4406(%47, %48) /* ty=(Tensor[(5, 10, 4), bool],) */;
  %50 = %43.1;
  %51 = %44.0;
  %52 = %49.0;
  (%50, %51, %52, %var_6703)
}

def @func_3749() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
  @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */
}

def @func_7182() -> (Tensor[(5, 11, 10), float64],) {
  @func_7180() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_11495() -> Tensor[(5, 11, 10), float32] {
  @func_11493() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_1210() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  %74 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
    %53 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %54 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
    %55 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %56 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %57 = %56.0;
    %58 = cast(%57, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %59 = acosh(%58) /* ty=Tensor[(5, 11, 10), float32] */;
    %60 = cast(%59, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %61 = acos(%60) /* ty=Tensor[(5, 11, 10), float32] */;
    %62 = %54.1;
    %63 = cast(%62, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %64 = reshape(%63, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
    %65 = @func_150(%64) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %66 = %65.0;
    %67 = cast(%66, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
    %68 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
    %69 = cast(%61, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
    %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %71 = %53.0;
    %72 = %55.3;
    %73 = less_equal(%69, %70) /* ty=Tensor[(5, 11, 10), bool] */;
    (%71, %62, %72, %73)
  };
  %74() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */
}

def @func_4270(%var_4250: Tensor[(9, 10, 11), float32], %var_4251: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), float32],) {
  %75 = cast(%var_4251, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %76 = shape_of(%var_4250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%var_4250, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %79 = minimum(%77, %78) /* ty=Tensor[(9, 10, 11), float32] */;
  (%79,)
}

def @func_10347() -> (Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64]) {
  @func_10345() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64]) */
}

def @func_10275(%var_10274: Tensor[(112), uint64]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
  %86 = fn (%var_10267: Tensor[(112), uint64]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
    %80 = @func_7180() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %81 = cast(%var_10267, dtype="uint64") /* ty=Tensor[(112), uint64] */;
    %82 = reshape(%81, newshape=[4, 2, 14]) /* ty=Tensor[(4, 2, 14), uint64] */;
    %83 = %80.0;
    %84 = @func_5133() /* ty=Tensor[(5, 11, 10), float64] */;
    %85 = @func_7868(%82) /* ty=Tensor[(4, 2, 14), uint64] */;
    (%83, %84, %85, %var_10267)
  };
  %86(%var_10274) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) */
}

def @func_14568() -> Tensor[(5, 11, 10), float64] {
  %87 = @func_7482() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %87.1
}

def @func_4291() -> Tensor[(5, 11, 10), int16] {
  @func_4289() /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_14579() -> Tensor[(5, 11, 10), float64] {
  @func_3000() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_1049() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) {
  %88 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %89 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %90 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %91 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %92 = %88.0;
  %93 = %89.0;
  %94 = %90.0;
  %95 = %91.2;
  (%92, %93, %94, %95)
}

def @func_16304() -> (Tensor[(5, 11, 10), float64],) {
  @func_16302() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_6878(%var_6860: Tensor[(5, 135), int8]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 135), int8], Tensor[(5, 11, 10), float32]) {
  %96 = cast(%var_6860, dtype="int8") /* ty=Tensor[(5, 135), int8] */;
  %97 = reshape(%96, newshape=[675]) /* ty=Tensor[(675), int8] */;
  %98 = @func_4928(%97) /* ty=(Tensor[(5, 11, 10), int16], Tensor[(15, 15, 3), int8], Tensor[(675), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %99 = @func_4608() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %100 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
  %101 = %98.5;
  %102 = %99.0;
  (%100, %101, %var_6860, %102)
}

def @func_2235() -> Tensor[(5, 11, 10), float64] {
  %103 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %103.0
}

def @func_2125() -> (Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  %108 = fn () -> (Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
    %104 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %105 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %106 = %104.1;
    %107 = %105.1;
    (%106, %107)
  };
  %108() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */
}

def @func_4289() -> Tensor[(5, 11, 10), int16] {
  @func_1491() /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_1575(%var_1573: Tensor[(1, 13, 16), bool], %var_1574: Tensor[(4, 13, 16), bool]) -> (Tensor[(4, 13, 16), bool], Tensor[(5, 11, 10), bool]) {
  @func_1571(%var_1573, %var_1574) /* ty=(Tensor[(4, 13, 16), bool], Tensor[(5, 11, 10), bool]) */
}

def @func_2083() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) {
  %109 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %110 = %109.2;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %112 = reshape(%111, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %113 = @func_643(%112) /* ty=(Tensor[(5, 11, 10), float64],) */;
  %114 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
  %115 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
  %116 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  %117 = %113.0;
  (%114, %115, %116, %110, %117)
}

def @func_3720() -> (Tensor[(5, 11, 10), float32],) {
  @func_3718() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_4210(%var_4178: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), uint64]) {
  %118 = cast(%var_4178, dtype="float64") /* ty=Tensor[(4, 15, 12), float64] */;
  %119 = cast(%var_4178, dtype="float64") /* ty=Tensor[(4, 15, 12), float64] */;
  %120 = log10(%119) /* ty=Tensor[(4, 15, 12), float64] */;
  %121 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 15, 12), float64] */, dtype="uint64") /* ty=Tensor[(4, 15, 12), uint64] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%120, dtype="uint64") /* ty=Tensor[(4, 15, 12), uint64] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %125 = sin(%118) /* ty=Tensor[(4, 15, 12), float64] */;
  %126 = subtract(%123, %124) /* ty=Tensor[(4, 15, 12), uint64] */;
  (%125, %126)
}

def @func_8662(%var_8660: Tensor[(112), uint64]) -> (Tensor[(5, 11, 10), float32], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
  @func_8659(%var_8660) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) */
}

def @func_4274(%var_4272: Tensor[(9, 10, 11), float32], %var_4273: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), float32],) {
  @func_4270(%var_4272, %var_4273) /* ty=(Tensor[(9, 10, 11), float32],) */
}

def @func_13642(%var_13640: Tensor[(630), uint8]) -> (Tensor[(5, 11, 10), float64], Tensor[(15, 7, 6), uint8], Tensor[(630), uint8], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
  @func_13639(%var_13640) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(15, 7, 6), uint8], Tensor[(630), uint8], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */
}

def @func_5161() -> Tensor[(5, 11, 10), float64] {
  %127 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
  %127.0
}

def @func_5351() -> Tensor[(5, 11, 10), float64] {
  @func_5183() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_2799() -> Tensor[(5, 11, 10), float64] {
  %128 = fn () -> Tensor[(5, 11, 10), float64] {
    @func_1963() /* ty=Tensor[(5, 11, 10), float64] */
  };
  %128() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_11860() -> Tensor[(5, 11, 10), float64] {
  @func_11858() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_6230(%var_6228: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  @func_6227(%var_6228) /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */
}

def @func_12667(%var_12665: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(5, 11, 10), float64]) {
  @func_12664(%var_12665) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_7825() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(60), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
  %129 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %130 = cast(meta[relay.Constant][2] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %131 = reshape(%130, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float32] */;
  %132 = @func_5933(%131) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(3, 10, 2), int32], Tensor[(3, 10, 2), uint64], Tensor[(3, 10, 2), float32]) */;
  %133 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %134 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %135 = %129.2;
  %136 = %132.5;
  %137 = @func_3063() /* ty=Tensor[(5, 11, 10), uint8] */;
  %138 = %133.1;
  %139 = %134.0;
  %140 = @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */;
  (%135, %136, meta[relay.Constant][2] /* ty=Tensor[(60), float32] */, %137, %138, %139, %140)
}

def @func_6724(%var_6722: Tensor[(200), int8]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 10, 4), bool], Tensor[(200), int8]) {
  @func_6721(%var_6722) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 10, 4), bool], Tensor[(200), int8]) */
}

def @func_4369() -> Tensor[(5, 11, 10), uint8] {
  %141 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %141.3
}

def @func_10183() -> (Tensor[(5, 11, 10), float32],) {
  @func_10181() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_6038() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %142 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %143 = %142.1;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %145 = erf(%144) /* ty=Tensor[(5, 11, 10), float64] */;
  %146 = @func_2590() /* ty=Tensor[(5, 11, 10), float64] */;
  (%145, %146)
}

def @func_10628() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %151 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
    %147 = @func_10022() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %148 = @func_4608() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %149 = %147.3;
    %150 = %148.0;
    (%149, %150)
  };
  %151() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_1591() -> Tensor[(5, 11, 10), bool] {
  @func_1589() /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_5743() -> Tensor[(5, 11, 10), int16] {
  %152 = fn () -> Tensor[(5, 11, 10), int16] {
    @func_1491() /* ty=Tensor[(5, 11, 10), int16] */
  };
  %152() /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_5133() -> Tensor[(5, 11, 10), float64] {
  %153 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %153.1
}

def @func_10083() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
  %154 = @func_9224() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %155 = @func_7180() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %156 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %157 = cast(meta[relay.Constant][3] /* ty=Tensor[(112), uint64] */, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %158 = reshape(%157, newshape=[4, 2, 14]) /* ty=Tensor[(4, 2, 14), uint64] */;
  %159 = %154.0;
  %160 = %155.0;
  %161 = %156.0;
  %162 = @func_7868(%158) /* ty=Tensor[(4, 2, 14), uint64] */;
  (%159, %160, %161, %162, meta[relay.Constant][3] /* ty=Tensor[(112), uint64] */)
}

def @func_11858() -> Tensor[(5, 11, 10), float64] {
  %163 = @func_8855() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %163.0
}

def @func_10898() -> (Tensor[(5, 11, 10), float32],) {
  %166 = fn () -> (Tensor[(5, 11, 10), float32],) {
    %164 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %165 = %164.1;
    (%165,)
  };
  %166() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_12520(%var_12518: Tensor[(2, 15, 3), float64]) -> Tensor[(2, 15, 3), float64] {
  @func_12517(%var_12518) /* ty=Tensor[(2, 15, 3), float64] */
}

def @func_13460() -> (Tensor[(5, 11, 10), float64],) {
  @func_13458() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_1801() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %167 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %168 = %167.0;
  %169 = @func_357() /* ty=Tensor[(5, 11, 10), float64] */;
  (%168, %169)
}

def @func_15493() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_15491() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_6850() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
  %170 = @func_5029() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %171 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  %172 = %170.0;
  (%171, %172)
}

def @func_6635() -> Tensor[(5, 11, 10), bool] {
  %173 = @func_5029() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %173.0
}

def @func_15222() -> (Tensor[(5, 11, 10), bool],) {
  %174 = @func_6635() /* ty=Tensor[(5, 11, 10), bool] */;
  (%174,)
}

def @func_17022() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(4, 2, 7), bool]) {
  %180 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(4, 2, 7), bool]) {
    %175 = @func_15424() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %176 = @func_12281() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(4, 2, 7), bool], Tensor[(56), int64]) */;
    %177 = @func_5351() /* ty=Tensor[(5, 11, 10), float64] */;
    %178 = %175.0;
    %179 = %176.1;
    (%177, %178, %179)
  };
  %180() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(4, 2, 7), bool]) */
}

def @func_15384(%var_15382: Tensor[(3, 10, 7), uint64], %var_15383: Tensor[(225, 3), int8]) -> (Tensor[(3, 10, 7), bool], Tensor[(3, 10, 7), float32], Tensor[(5, 11, 10), float32], Tensor[(225, 3), int8]) {
  @func_15380(%var_15382, %var_15383) /* ty=(Tensor[(3, 10, 7), bool], Tensor[(3, 10, 7), float32], Tensor[(5, 11, 10), float32], Tensor[(225, 3), int8]) */
}

def @func_16777(%var_16776: Tensor[(4, 12, 12), float32]) -> Tensor[(4, 12, 12), float32] {
  %182 = fn (%var_16772: Tensor[(4, 12, 12), float32]) -> Tensor[(4, 12, 12), float32] {
    %181 = cast(%var_16772, dtype="float32") /* ty=Tensor[(4, 12, 12), float32] */;
    rsqrt(%181) /* ty=Tensor[(4, 12, 12), float32] */
  };
  %182(%var_16776) /* ty=Tensor[(4, 12, 12), float32] */
}

def @func_2850() -> (Tensor[(5, 11, 10), float64],) {
  %184 = fn () -> (Tensor[(5, 11, 10), float64],) {
    %183 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
    (%183,)
  };
  %184() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_5054() -> Tensor[(5, 11, 10), float32] {
  @func_4442() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_15446(%var_15444: Tensor[(10, 16, 5), float64]) -> (Tensor[(10, 16, 5), float64],) {
  @func_15443(%var_15444) /* ty=(Tensor[(10, 16, 5), float64],) */
}

def @func_2366(%var_2365: Tensor[(16, 14, 3), int8]) -> (Tensor[(16, 14, 3), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %199 = fn (%var_2307: Tensor[(16, 14, 3), int8]) -> (Tensor[(16, 14, 3), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %185 = cast(%var_2307, dtype="int8") /* ty=Tensor[(16, 14, 3), int8] */;
    %186 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 14, 3), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 14, 3), int8] */, dtype="int8") /* ty=Tensor[(16, 14, 3), int8] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %189 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %190 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %191 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %192 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %193 = bitwise_xor(%187, %188) /* ty=Tensor[(16, 14, 3), int8] */;
    %194 = %189.0;
    %195 = %190.1;
    %196 = %191.0;
    %197 = %192.0;
    %198 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
    (%193, %194, %195, %196, %197, %198)
  };
  %199(%var_2365) /* ty=(Tensor[(16, 14, 3), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_4507() -> (Tensor[(5, 11, 10), float64],) {
  @func_4505() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_13458() -> (Tensor[(5, 11, 10), float64],) {
  %200 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %201 = %200.0;
  (%201,)
}

def @func_2571(%var_2569: Tensor[(13, 1, 15), float64]) -> (Tensor[(13, 1, 15), float64], Tensor[(5, 11, 10), bool]) {
  @func_2568(%var_2569) /* ty=(Tensor[(13, 1, 15), float64], Tensor[(5, 11, 10), bool]) */
}

def @func_4063() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %202 = @func_2778() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %203 = @func_2849() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %204 = %202.0;
  %205 = %203.0;
  (%204, %205)
}

def @func_14008() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %206 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %207 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %208 = @func_11858() /* ty=Tensor[(5, 11, 10), float64] */;
  %209 = %206.1;
  %210 = %207.0;
  (%208, %209, %210)
}

def @func_5503() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %216 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
    %211 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %212 = @func_3223() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
    %213 = %211.3;
    %214 = @func_3589() /* ty=Tensor[(5, 11, 10), float64] */;
    %215 = %212.0;
    (%213, %214, %215)
  };
  %216() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */
}

def @func_1803() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_1801() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_11025() -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %217 = @func_7825() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(60), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */;
  %218 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
  %219 = @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %220 = @func_8023() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %221 = %217.3;
  %222 = %218.2;
  %223 = %219.1;
  %224 = %220.1;
  (%221, %222, %223, %224)
}

def @func_6637() -> Tensor[(5, 11, 10), bool] {
  @func_6635() /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_12816() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %229 = fn () -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
    %225 = @func_6850() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */;
    %226 = @func_7347() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
    %227 = %225.1;
    %228 = %226.2;
    (%227, %228)
  };
  %229() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */
}

def @func_5701() -> Tensor[(5, 11, 10), float64] {
  @func_5699() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_15324() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %230 = @func_8480() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %231 = @func_6437() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %232 = %230.0;
  %233 = %231.0;
  (%232, %233)
}

def @func_357() -> Tensor[(5, 11, 10), float64] {
  %234 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %234.0
}

def @func_586() -> (Tensor[(5, 11, 10), float64],) {
  @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_16684() -> Tensor[(5, 11, 10), float32] {
  %236 = fn () -> Tensor[(5, 11, 10), float32] {
    %235 = @func_13131() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %235.0
  };
  %236() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_3747() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
  %237 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %238 = @func_1589() /* ty=Tensor[(5, 11, 10), bool] */;
  %239 = %237.1;
  (%238, %239)
}

def @func_15121() -> Tensor[(5, 11, 10), bool] {
  @func_15119() /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_6820() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
  %245 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
    %240 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %241 = @func_5699() /* ty=Tensor[(5, 11, 10), float64] */;
    %242 = %240.0;
    %243 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
    %244 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
    (%241, %242, %243, %244)
  };
  %245() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */
}

def @func_5011() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %246 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %247 = @func_4581() /* ty=Tensor[(5, 11, 10), float64] */;
  %248 = %246.3;
  (%247, %248)
}

def @func_1736() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  %253 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
    %249 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
    %250 = @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
    %251 = %249.2;
    %252 = %250.0;
    (%251, %252)
  };
  %253() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */
}

def @func_4443() -> Tensor[(5, 11, 10), float32] {
  %255 = fn () -> Tensor[(5, 11, 10), float32] {
    %254 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
    %254.1
  };
  %255() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_16856(%var_16831: Tensor[(208), bool], %var_16847: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(1755), float64], Tensor[(5, 11, 10), float64], Tensor[(208), bool], Tensor[(990), bool], Tensor[(5, 11, 10), float64]) {
  %256 = @func_10592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %257 = cast(meta[relay.Constant][5] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %258 = reshape(%257, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %259 = @func_6227(%258) /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */;
  %260 = @func_8371() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %261 = cast(meta[relay.Constant][6] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %262 = reshape(%261, newshape=[195, 9]) /* ty=Tensor[(195, 9), float64] */;
  %263 = @func_14485(%262) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(195, 9), bool], Tensor[(195, 9), int64], Tensor[(5, 11, 10), int16]) */;
  %264 = cast(%var_16831, dtype="bool") /* ty=Tensor[(208), bool] */;
  %265 = reshape(%264, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %266 = @func_13184(%265) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 13, 16), bool], Tensor[(208), bool], Tensor[(832), bool]) */;
  %267 = cast(%var_16847, dtype="bool") /* ty=Tensor[(990), bool] */;
  %268 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(990), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %269 = cast(meta[relay.Constant][5] /* ty=Tensor[(990), float32] */, dtype="bool") /* ty=Tensor[(990), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?), bool] */;
  %271 = @func_10627() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %272 = %256.0;
  %273 = %259.0;
  %274 = %260.1;
  %275 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %276 = @func_5399() /* ty=Tensor[(5, 11, 10), float64] */;
  %277 = %263.3;
  %278 = %266.0;
  %279 = less(%269, %270) /* ty=Tensor[(990), bool] */;
  %280 = %271.0;
  (%272, %273, %274, %275, %276, %277, meta[relay.Constant][6] /* ty=Tensor[(1755), float64] */, %278, %var_16831, %279, %280)
}

def @func_1384(%var_1382: Tensor[(1, 3, 7), float32], %var_1383: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) {
  @func_1380(%var_1382, %var_1383) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */
}

def @func_16558() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %285 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
    %281 = @func_12255() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
    %282 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %283 = %281.0;
    %284 = %282.0;
    (%283, %284)
  };
  %285() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_10109() -> (Tensor[(5, 11, 10), float32],) {
  %286 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %287 = %286.1;
  (%287,)
}

def @func_6852() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
  @func_6850() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */
}

def @func_9135() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  %288 = @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %289 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %290 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %291 = %288.0;
  %292 = @func_8453() /* ty=Tensor[(5, 11, 10), uint16] */;
  %293 = %289.2;
  %294 = @func_8453() /* ty=Tensor[(5, 11, 10), uint16] */;
  %295 = %290.0;
  (%291, %292, %293, %294, %295)
}

def @func_14747() -> (Tensor[(4, 15, 12), uint64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %307 = fn () -> (Tensor[(4, 15, 12), uint64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
    %296 = @func_10345() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64]) */;
    %297 = @func_1801() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %298 = @func_10022() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %299 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %300 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %301 = %296.1;
    %302 = %297.1;
    %303 = %298.3;
    %304 = %299.0;
    %305 = @func_5133() /* ty=Tensor[(5, 11, 10), float64] */;
    %306 = %300.2;
    (%301, %302, %303, %304, %305, %306)
  };
  %307() /* ty=(Tensor[(4, 15, 12), uint64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_16736() -> (Tensor[(5, 11, 10), float32],) {
  %308 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %309 = %308.1;
  (%309,)
}

def @func_9616() -> (Tensor[(5, 11, 10), bool],) {
  @func_9614() /* ty=(Tensor[(5, 11, 10), bool],) */
}

def @func_10325() -> (Tensor[(5, 11, 10), float64],) {
  @func_10323() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_10111() -> (Tensor[(5, 11, 10), float32],) {
  @func_10109() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_12722() -> (Tensor[(5, 11, 10), int16],) {
  @func_12720() /* ty=(Tensor[(5, 11, 10), int16],) */
}

def @func_4086() -> (Tensor[(5, 11, 10), float32],) {
  %310 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %311 = %310.0;
  (%311,)
}

def @func_12447() -> (Tensor[(5, 11, 10), uint8],) {
  %312 = @func_11121() /* ty=(Tensor[(5, 11, 10), uint8],) */;
  %313 = %312.0;
  (%313,)
}

def @func_7827() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(60), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
  @func_7825() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(60), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */
}

def @func_10492() -> Tensor[(5, 11, 10), float64] {
  @func_2798() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_16179() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  %325 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
    %314 = @func_6131() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64], Tensor[(720), float64]) */;
    %315 = @func_13283() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint16]) */;
    %316 = %314.0;
    %317 = cast(%316, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %318 = reshape(%317, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
    %319 = @func_643(%318) /* ty=(Tensor[(5, 11, 10), float64],) */;
    %320 = %315.1;
    %321 = cast(%320, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
    %322 = reshape(%321, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float64] */;
    %323 = %319.0;
    %324 = @func_2039(%322) /* ty=Tensor[(5, 11, 10), bool] */;
    (%316, %320, %323, %324)
  };
  %325() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */
}

def @func_1659() -> Tensor[(5, 11, 10), float64] {
  %326 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %326.0
}

def @func_16594(%var_16592: Tensor[(756), bool]) -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(756), bool]) {
  @func_16591(%var_16592) /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(756), bool]) */
}

def @func_12449() -> (Tensor[(5, 11, 10), uint8],) {
  @func_12447() /* ty=(Tensor[(5, 11, 10), uint8],) */
}

def @func_13019() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %331 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %327 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %328 = @func_7952() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %329 = %327.0;
    %330 = %328.0;
    (%329, %330)
  };
  %331() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_1107() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %340 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
    %332 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %333 = %332.0;
    %334 = cast(%333, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %335 = cast(%333, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %336 = reshape(%335, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
    %337 = @func_150(%336) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %338 = sin(%334) /* ty=Tensor[(5, 11, 10), float32] */;
    %339 = %337.1;
    (%338, %339)
  };
  %340() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */
}

def @func_6439() -> (Tensor[(5, 11, 10), float64],) {
  @func_6437() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_2237() -> Tensor[(5, 11, 10), float64] {
  @func_2235() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_12720() -> (Tensor[(5, 11, 10), int16],) {
  %341 = @func_11342() /* ty=Tensor[(5, 11, 10), int16] */;
  (%341,)
}

def @func_9614() -> (Tensor[(5, 11, 10), bool],) {
  %342 = @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %343 = %342.1;
  (%343,)
}

def @func_1964() -> Tensor[(5, 11, 10), float64] {
  %344 = fn () -> Tensor[(5, 11, 10), float64] {
    @func_1702() /* ty=Tensor[(5, 11, 10), float64] */
  };
  %344() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_13184(%var_13180: Tensor[(208), bool]) -> (Tensor[(5, 11, 10), float64], Tensor[(4, 13, 16), bool], Tensor[(208), bool], Tensor[(832), bool]) {
  %345 = cast(%var_13180, dtype="bool") /* ty=Tensor[(208), bool] */;
  %346 = cast(meta[relay.Constant][7] /* ty=Tensor[(832), bool] */, dtype="bool") /* ty=Tensor[(832), bool] */;
  %347 = reshape(%345, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), bool] */;
  %348 = reshape(%346, newshape=[4, 13, 16]) /* ty=Tensor[(4, 13, 16), bool] */;
  %349 = @func_1571(%347, %348) /* ty=(Tensor[(4, 13, 16), bool], Tensor[(5, 11, 10), bool]) */;
  %350 = @func_12484() /* ty=Tensor[(5, 11, 10), float64] */;
  %351 = %349.0;
  (%350, %351, %var_13180, meta[relay.Constant][7] /* ty=Tensor[(832), bool] */)
}

def @func_12592() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64], Tensor[(5, 11, 10), uint16], Tensor[(1, 675), float64], Tensor[(5, 11, 10), bool]) {
  %352 = @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %353 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 675), int8] */, dtype="int8") /* ty=Tensor[(1, 675), int8] */;
  %354 = reshape(%353, newshape=[675, 1]) /* ty=Tensor[(675, 1), int8] */;
  %355 = @func_2461(%354) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64]) */;
  %356 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 675), int8] */, dtype="float32") /* ty=Tensor[(1, 675), float32] */;
  %357 = exp(%356) /* ty=Tensor[(1, 675), float32] */;
  %358 = cast(%357, dtype="float32") /* ty=Tensor[(1, 675), float32] */;
  %359 = rsqrt(%358) /* ty=Tensor[(1, 675), float32] */;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(1, 675), float64] */;
  %361 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %362 = %352.0;
  %363 = @func_12484() /* ty=Tensor[(5, 11, 10), float64] */;
  %364 = %355.2;
  %365 = @func_8453() /* ty=Tensor[(5, 11, 10), uint16] */;
  %366 = atan(%360) /* ty=Tensor[(1, 675), float64] */;
  %367 = %361.0;
  (%362, %363, %364, %365, %366, %367)
}

def @func_16591(%var_16583: Tensor[(756), bool]) -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(756), bool]) {
  %368 = @func_6375() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), int16]) */;
  %369 = cast(%var_16583, dtype="bool") /* ty=Tensor[(756), bool] */;
  %370 = reshape(%369, newshape=[756]) /* ty=Tensor[(756), bool] */;
  %371 = @func_10794(%370) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(12, 7, 9), float32], Tensor[(756), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %372 = %368.1;
  %373 = %371.0;
  (%372, %373, %var_16583)
}

def @func_9485() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) {
  @func_9483() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */
}

def @func_7004() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_5401() -> Tensor[(5, 11, 10), float64] {
  @func_5399() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_1571(%var_1561: Tensor[(1, 13, 16), bool], %var_1562: Tensor[(4, 13, 16), bool]) -> (Tensor[(4, 13, 16), bool], Tensor[(5, 11, 10), bool]) {
  %374 = cast(%var_1561, dtype="bool") /* ty=Tensor[(1, 13, 16), bool] */;
  %375 = cast(%var_1562, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
  %376 = @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %377 = logical_or(%374, %375) /* ty=Tensor[(4, 13, 16), bool] */;
  %378 = %376.0;
  (%377, %378)
}

def @func_5135() -> Tensor[(5, 11, 10), float64] {
  @func_5133() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_9250() -> (Tensor[(5, 11, 10), float64],) {
  @func_9248() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_9679() -> (Tensor[(5, 11, 10), float64],) {
  @func_9677() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_4121() -> Tensor[(5, 11, 10), bool] {
  %380 = fn () -> Tensor[(5, 11, 10), bool] {
    %379 = @func_1735() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
    %379.1
  };
  %380() /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_6496() -> (Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
  %396 = fn () -> (Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
    %381 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 9, 1), int64] */, dtype="int64") /* ty=Tensor[(11, 9, 1), int64] */;
    %382 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 9, 12), int64] */, dtype="int64") /* ty=Tensor[(11, 9, 12), int64] */;
    %383 = left_shift(%381, %382) /* ty=Tensor[(11, 9, 12), int64] */;
    %384 = cast(%383, dtype="int32") /* ty=Tensor[(11, 9, 12), int32] */;
    %385 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(11, 9, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %386 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 9, 12), int64] */, dtype="int32") /* ty=Tensor[(11, 9, 12), int32] */;
    %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %388 = @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */;
    %389 = cast(%388, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
    %390 = reshape(%389, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float64] */;
    %391 = @func_1539(%390) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16]) */;
    %392 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %393 = add(%386, %387) /* ty=Tensor[(11, 9, 12), int32] */;
    %394 = %391.0;
    %395 = %392.0;
    (%388, %393, %394, %395)
  };
  %396() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */
}

def @func_8236() -> (Tensor[(5, 11, 10), float64],) {
  %398 = fn () -> (Tensor[(5, 11, 10), float64],) {
    %397 = @func_3000() /* ty=Tensor[(5, 11, 10), float64] */;
    (%397,)
  };
  %398() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_8813() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %399 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %400 = @func_5644() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %401 = @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %402 = %399.2;
  %403 = %400.0;
  %404 = %401.1;
  %405 = @func_5699() /* ty=Tensor[(5, 11, 10), float64] */;
  %406 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  (%402, %403, %404, %405, %406)
}

def @func_12293() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_12291() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_12664(%var_12630: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(5, 11, 10), float64]) {
  %407 = cast(%var_12630, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %408 = @func_7825() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(60), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */;
  %409 = sinh(%407) /* ty=Tensor[(13, 9, 3), float32] */;
  %410 = %408.0;
  (%409, %410)
}

def @func_15087(%var_15086: Tensor[(4, 1, 3), float64]) -> Tensor[(4, 1, 3), float64] {
  %412 = fn (%var_15067: Tensor[(4, 1, 3), float64]) -> Tensor[(4, 1, 3), float64] {
    %411 = cast(%var_15067, dtype="float64") /* ty=Tensor[(4, 1, 3), float64] */;
    sin(%411) /* ty=Tensor[(4, 1, 3), float64] */
  };
  %412(%var_15086) /* ty=Tensor[(4, 1, 3), float64] */
}

def @func_152(%var_151: Tensor[(5, 11, 10), float32]) -> (Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  %422 = fn (%var_108: Tensor[(5, 11, 10), float32]) -> (Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
    %413 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %414 = %413.0;
    %415 = cast(%var_108, dtype="uint16") /* ty=Tensor[(5, 11, 10), uint16] */;
    %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
    %417 = cast(%414, dtype="uint16") /* ty=Tensor[(5, 11, 10), uint16] */;
    %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %419 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %420 = multiply(%417, %418) /* ty=Tensor[(5, 11, 10), uint16] */;
    %421 = %419.0;
    (%420, %421)
  };
  %422(%var_151) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */
}

def @func_9052() -> Tensor[(5, 11, 10), float32] {
  @func_9050() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_2003() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %426 = fn () -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
    %423 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %424 = %423.0;
    %425 = @func_357() /* ty=Tensor[(5, 11, 10), float64] */;
    (%424, %425)
  };
  %426() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */
}

def @func_12957() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %431 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
    %427 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %428 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
    %429 = %427.0;
    %430 = %428.2;
    (%429, %430)
  };
  %431() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */
}

def @func_8659(%var_8632: Tensor[(112), uint64]) -> (Tensor[(5, 11, 10), float32], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
  %432 = @func_8585() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %433 = cast(%var_8632, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %434 = reshape(%433, newshape=[4, 2, 14]) /* ty=Tensor[(4, 2, 14), uint64] */;
  %435 = %432.0;
  %436 = @func_7868(%434) /* ty=Tensor[(4, 2, 14), uint64] */;
  (%435, %436, %var_8632)
}

def @func_15062() -> Tensor[(5, 11, 10), bool] {
  %437 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %437.0
}

def @func_6192(%var_6190: Tensor[(990), float32], %var_6191: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32], Tensor[(5, 11, 10), float64], Tensor[(675), int8]) {
  @func_6188(%var_6190, %var_6191) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32], Tensor[(5, 11, 10), float64], Tensor[(675), int8]) */
}

def @func_9323() -> Tensor[(5, 11, 10), float32] {
  @func_9321() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_7868(%var_7835: Tensor[(4, 2, 14), uint64]) -> Tensor[(4, 2, 14), uint64] {
  %438 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 2, 14), uint64] */, dtype="uint64") /* ty=Tensor[(4, 2, 14), uint64] */;
  %439 = shape_of(%var_7835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%var_7835, dtype="uint64") /* ty=Tensor[(4, 2, 14), uint64] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%440, %441) /* ty=Tensor[(4, 2, 14), uint64] */
}

def @func_7952() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %442 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %443 = @func_7114() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %444 = @func_3589() /* ty=Tensor[(5, 11, 10), float64] */;
  %445 = %442.1;
  %446 = %443.1;
  (%444, %445, %446)
}

def @func_13923(%var_13921: Tensor[(12, 3, 9), float32], %var_13922: Tensor[(12, 3, 9), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(12, 3, 9), bool], Tensor[(12, 3, 9), int8], Tensor[(12, 3, 9), float64]) {
  %466 = fn (%var_13844: Tensor[(12, 3, 9), float32], %var_13875: Tensor[(12, 3, 9), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(12, 3, 9), bool], Tensor[(12, 3, 9), int8], Tensor[(12, 3, 9), float64]) {
    %447 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %448 = cast(%var_13844, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
    %449 = acosh(%448) /* ty=Tensor[(12, 3, 9), float32] */;
    %450 = cast(%var_13844, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
    %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %452 = cast(%449, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
    %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %454 = cast(%var_13875, dtype="int8") /* ty=Tensor[(12, 3, 9), int8] */;
    %455 = shape_of(%var_13844, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(%var_13844, dtype="int8") /* ty=Tensor[(12, 3, 9), int8] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %458 = cast(%var_13875, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
    %459 = shape_of(%var_13844, dtype="int32") /* ty=Tensor[(3), int32] */;
    %460 = cast(%var_13844, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
    %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %462 = %447.1;
    %463 = logical_and(%452, %453) /* ty=Tensor[(12, 3, 9), bool] */;
    %464 = right_shift(%456, %457) /* ty=Tensor[(12, 3, 9), int8] */;
    %465 = divide(%460, %461) /* ty=Tensor[(12, 3, 9), float64] */;
    (%462, %463, %464, %465)
  };
  %466(%var_13921, %var_13922) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(12, 3, 9), bool], Tensor[(12, 3, 9), int8], Tensor[(12, 3, 9), float64]) */
}

def @func_16302() -> (Tensor[(5, 11, 10), float64],) {
  %467 = @func_9180() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %468 = %467.0;
  (%468,)
}

def @func_4609() -> (Tensor[(5, 11, 10), float32],) {
  %471 = fn () -> (Tensor[(5, 11, 10), float32],) {
    %469 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %470 = %469.0;
    (%470,)
  };
  %471() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_13828(%var_13729: Tensor[(7, 9, 4), float32], %var_13800: Tensor[(756), bool], %var_13816: Tensor[(7, 9, 4), float64], %var_13826: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(7, 9, 4), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(756), bool], Tensor[(7, 9, 4), bool], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  %472 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %473 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 9, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 9, 4), bool] */;
  %474 = shape_of(%var_13729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%var_13729, dtype="bool") /* ty=Tensor[(7, 9, 4), bool] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %477 = less(%475, %476) /* ty=Tensor[(7, 9, 4), bool] */;
  %478 = cast(%var_13729, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %479 = asin(%478) /* ty=Tensor[(7, 9, 4), float32] */;
  %480 = cast(%479, dtype="int32") /* ty=Tensor[(7, 9, 4), int32] */;
  %481 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%477, dtype="int32") /* ty=Tensor[(7, 9, 4), int32] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %484 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %485 = cast(%var_13800, dtype="bool") /* ty=Tensor[(756), bool] */;
  %486 = reshape(%485, newshape=[756]) /* ty=Tensor[(756), bool] */;
  %487 = @func_10794(%486) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(12, 7, 9), float32], Tensor[(756), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %488 = cast(%var_13729, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %489 = acosh(%488) /* ty=Tensor[(7, 9, 4), float32] */;
  %490 = cast(%489, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %491 = log(%490) /* ty=Tensor[(7, 9, 4), float64] */;
  %492 = cast(%var_13816, dtype="bool") /* ty=Tensor[(7, 9, 4), bool] */;
  %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%491, dtype="bool") /* ty=Tensor[(7, 9, 4), bool] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %496 = cast(%var_13826, dtype="float32") /* ty=Tensor[(990), float32] */;
  %497 = cast(%var_13826, dtype="float32") /* ty=Tensor[(990), float32] */;
  %498 = reshape(%496, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %499 = reshape(%497, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %500 = @func_4270(%498, %499) /* ty=(Tensor[(9, 10, 11), float32],) */;
  %501 = %472.0;
  %502 = bitwise_or(%482, %483) /* ty=Tensor[(7, 9, 4), int32] */;
  %503 = %484.2;
  %504 = %487.6;
  %505 = logical_or(%494, %495) /* ty=Tensor[(7, 9, 4), bool] */;
  %506 = %500.0;
  (%501, %502, %503, %504, %var_13800, %505, %506, %var_13826)
}

def @func_7044() -> (Tensor[(5, 11, 10), float64],) {
  %507 = @func_5161() /* ty=Tensor[(5, 11, 10), float64] */;
  (%507,)
}

def @func_15271() -> (Tensor[(5, 11, 10), float32],) {
  %508 = @func_3718() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %509 = %508.0;
  (%509,)
}

def @func_16535() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %513 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %510 = @func_11540() /* ty=Tensor[(5, 11, 10), float64] */;
    %511 = @func_8965() /* ty=Tensor[(5, 11, 10), float64] */;
    %512 = @func_5255() /* ty=Tensor[(5, 11, 10), float64] */;
    (%510, %511, %512)
  };
  %513() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_9180() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %514 = @func_7249() /* ty=Tensor[(5, 11, 10), float64] */;
  %515 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  (%514, %515)
}

def @func_2568(%var_2563: Tensor[(13, 1, 15), float64]) -> (Tensor[(13, 1, 15), float64], Tensor[(5, 11, 10), bool]) {
  %516 = cast(%var_2563, dtype="float64") /* ty=Tensor[(13, 1, 15), float64] */;
  %517 = @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %518 = asin(%516) /* ty=Tensor[(13, 1, 15), float64] */;
  %519 = %517.1;
  (%518, %519)
}

def @func_10293() -> Tensor[(5, 11, 10), float32] {
  %520 = @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %520.0
}

def @func_7195() -> Tensor[(5, 11, 10), int16] {
  %522 = fn () -> Tensor[(5, 11, 10), int16] {
    %521 = @func_6850() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */;
    %521.0
  };
  %522() /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_15273() -> (Tensor[(5, 11, 10), float32],) {
  @func_15271() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_9723(%var_9722: Tensor[(11, 33), uint16]) -> (Tensor[(5, 11, 10), bool], Tensor[(18), int8], Tensor[(3, 6), int8], Tensor[(11, 33), bool], Tensor[(5, 11, 10), bool], Tensor[(11, 33), float32]) {
  %540 = fn (%var_9699: Tensor[(11, 33), uint16]) -> (Tensor[(5, 11, 10), bool], Tensor[(18), int8], Tensor[(3, 6), int8], Tensor[(11, 33), bool], Tensor[(5, 11, 10), bool], Tensor[(11, 33), float32]) {
    %523 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %524 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 33), uint16] */, dtype="uint16") /* ty=Tensor[(11, 33), uint16] */;
    %525 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 6), int8] */, dtype="int8") /* ty=Tensor[(3, 6), int8] */;
    %526 = reshape(%524, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), uint16] */;
    %527 = reshape(%525, newshape=[18]) /* ty=Tensor[(18), int8] */;
    %528 = @func_9398(%526, %527) /* ty=(Tensor[(11, 3, 11), float32], Tensor[(5, 11, 10), float32], Tensor[(18), int8], Tensor[(5, 11, 10), float64]) */;
    %529 = cast(%var_9699, dtype="bool") /* ty=Tensor[(11, 33), bool] */;
    %530 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(11, 33), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %531 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 33), uint16] */, dtype="bool") /* ty=Tensor[(11, 33), bool] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %533 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
    %534 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 33), uint16] */, dtype="float32") /* ty=Tensor[(11, 33), float32] */;
    %535 = %523.0;
    %536 = %528.2;
    %537 = not_equal(%531, %532) /* ty=Tensor[(11, 33), bool] */;
    %538 = %533.2;
    %539 = asin(%534) /* ty=Tensor[(11, 33), float32] */;
    (%535, %536, meta[relay.Constant][14] /* ty=Tensor[(3, 6), int8] */, %537, %538, %539)
  };
  %540(%var_9722) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(18), int8], Tensor[(3, 6), int8], Tensor[(11, 33), bool], Tensor[(5, 11, 10), bool], Tensor[(11, 33), float32]) */
}

def @func_8856() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %545 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
    %541 = @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %542 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
    %543 = %541.0;
    %544 = %542.1;
    (%543, %544)
  };
  %545() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_10181() -> (Tensor[(5, 11, 10), float32],) {
  %546 = @func_1229() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %547 = %546.0;
  (%547,)
}

def @func_1325() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %548 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %549 = %548.2;
  %550 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %551 = %550.0;
  %552 = cast(%551, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %553 = shape_of(%549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%549, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %556 = @func_863() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %557 = greater(%554, %555) /* ty=Tensor[(5, 11, 10), bool] */;
  %558 = %556.0;
  (%557, %558)
}

def @func_16069() -> (Tensor[(5, 11, 10), uint8],) {
  %559 = @func_11121() /* ty=(Tensor[(5, 11, 10), uint8],) */;
  %560 = %559.0;
  (%560,)
}

def @func_5399() -> Tensor[(5, 11, 10), float64] {
  @func_2798() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_14058() -> (Tensor[(5, 11, 10), float32],) {
  @func_14056() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_3590() -> Tensor[(5, 11, 10), float64] {
  %562 = fn () -> Tensor[(5, 11, 10), float64] {
    %561 = @func_2778() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %561.0
  };
  %562() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_2039(%var_2022: Tensor[(5, 11, 10), float64]) -> Tensor[(5, 11, 10), bool] {
  %563 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
  %564 = cast(%var_2022, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%566, %567) /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_7552() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  @func_7550() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */
}

def @func_12282() -> (Tensor[(5, 11, 10), bool], Tensor[(4, 2, 7), bool], Tensor[(56), int64]) {
  %573 = fn () -> (Tensor[(5, 11, 10), bool], Tensor[(4, 2, 7), bool], Tensor[(56), int64]) {
    %568 = @func_11667() /* ty=(Tensor[(5, 11, 10), bool],) */;
    %569 = cast(meta[relay.Constant][15] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
    %570 = reshape(%569, newshape=[4, 2, 7]) /* ty=Tensor[(4, 2, 7), int64] */;
    %571 = %568.0;
    %572 = @func_10918(%570) /* ty=Tensor[(4, 2, 7), bool] */;
    (%571, %572, meta[relay.Constant][15] /* ty=Tensor[(56), int64] */)
  };
  %573() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(4, 2, 7), bool], Tensor[(56), int64]) */
}

def @func_3382(%var_3320: Tensor[(924), uint8], %var_3337: Tensor[(294), float32], %var_3373: Tensor[(11, 6, 14), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(924), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(14, 3, 7), bool], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), uint16], Tensor[(11, 6, 14), uint16]) {
  %574 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %575 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %576 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %577 = cast(meta[relay.Constant][16] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %578 = cast(%var_3337, dtype="float32") /* ty=Tensor[(294), float32] */;
  %579 = reshape(%577, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
  %580 = reshape(%578, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %581 = @func_1380(%579, %580) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
  %582 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %583 = cast(%var_3320, dtype="uint8") /* ty=Tensor[(924), uint8] */;
  %584 = cast(%var_3320, dtype="uint8") /* ty=Tensor[(924), uint8] */;
  %585 = reshape(%583, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), uint8] */;
  %586 = reshape(%584, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), uint8] */;
  %587 = @func_2578(%585, %586) /* ty=(Tensor[(11, 6, 14), uint8],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %590 = sigmoid(%589) /* ty=Tensor[(11, 6, 14), float64] */;
  %591 = cast(%var_3373, dtype="uint16") /* ty=Tensor[(11, 6, 14), uint16] */;
  %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%590, dtype="uint16") /* ty=Tensor[(11, 6, 14), uint16] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %595 = %574.0;
  %596 = %575.0;
  %597 = %576.0;
  %598 = %581.0;
  %599 = %582.0;
  %600 = add(%593, %594) /* ty=Tensor[(11, 6, 14), uint16] */;
  (%595, %var_3320, %596, %597, %598, meta[relay.Constant][16] /* ty=Tensor[(21), float32] */, %var_3337, %599, %600)
}

def @func_7954() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_7952() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_4928(%var_4892: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), int16], Tensor[(15, 15, 3), int8], Tensor[(675), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %601 = cast(%var_4892, dtype="int8") /* ty=Tensor[(675), int8] */;
  %602 = reshape(%601, newshape=[15, 15, 3]) /* ty=Tensor[(15, 15, 3), int8] */;
  %603 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %604 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %605 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  %606 = @func_1349(%602) /* ty=Tensor[(15, 15, 3), int8] */;
  %607 = @func_4581() /* ty=Tensor[(5, 11, 10), float64] */;
  %608 = %603.0;
  %609 = %604.0;
  (%605, %606, %var_4892, %607, %608, %609)
}

def @func_3001() -> Tensor[(5, 11, 10), float64] {
  %611 = fn () -> Tensor[(5, 11, 10), float64] {
    %610 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
    %610.0
  };
  %611() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_14056() -> (Tensor[(5, 11, 10), float32],) {
  %612 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %613 = %612.3;
  (%613,)
}

def @func_12484() -> Tensor[(5, 11, 10), float64] {
  %614 = @func_10592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %614.1
}

def @func_2779() -> (Tensor[(5, 11, 10), float64],) {
  %617 = fn () -> (Tensor[(5, 11, 10), float64],) {
    %615 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
    %616 = %615.1;
    (%616,)
  };
  %617() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_13187(%var_13185: Tensor[(208), bool]) -> (Tensor[(5, 11, 10), float64], Tensor[(4, 13, 16), bool], Tensor[(208), bool], Tensor[(832), bool]) {
  @func_13184(%var_13185) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 13, 16), bool], Tensor[(208), bool], Tensor[(832), bool]) */
}

def @func_5671(%var_5670: Tensor[(12, 7, 11), float32]) -> (Tensor[(12, 7, 11), bool],) {
  %621 = fn (%var_5665: Tensor[(12, 7, 11), float32]) -> (Tensor[(12, 7, 11), bool],) {
    %618 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 1, 11), float32] */, dtype="bool") /* ty=Tensor[(12, 1, 11), bool] */;
    %619 = cast(%var_5665, dtype="bool") /* ty=Tensor[(12, 7, 11), bool] */;
    %620 = greater_equal(%618, %619) /* ty=Tensor[(12, 7, 11), bool] */;
    (%620,)
  };
  %621(%var_5670) /* ty=(Tensor[(12, 7, 11), bool],) */
}

def @func_12517(%var_12510: Tensor[(2, 15, 3), float64]) -> Tensor[(2, 15, 3), float64] {
  %622 = cast(%var_12510, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  exp(%622) /* ty=Tensor[(2, 15, 3), float64] */
}

def @func_9321() -> Tensor[(5, 11, 10), float32] {
  %623 = @func_1229() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %623.0
}

def @func_7180() -> (Tensor[(5, 11, 10), float64],) {
  %624 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  (%624,)
}

def @func_16757() -> (Tensor[(7, 1, 14), bool],) {
  %625 = cast(-8 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %626 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 1, 14), int64] */, dtype="bool") /* ty=Tensor[(7, 1, 14), bool] */;
  %627 = less_equal(%625, %626) /* ty=Tensor[(7, 1, 14), bool] */;
  (%627,)
}

def @func_569() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %628 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %629 = %628.0;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
  %631 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %632 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %633 = sqrt(%630) /* ty=Tensor[(5, 11, 10), float32] */;
  %634 = %631.0;
  %635 = %632.0;
  %636 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  (%633, %634, %635, %636)
}

def @func_15763() -> Tensor[(5, 11, 10), float64] {
  @func_15761() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_9202(%var_9190: Tensor[(2, 3, 3), int8], %var_9191: Tensor[(2, 3, 3), int8]) -> (Tensor[(2, 3, 3), bool], Tensor[(5, 11, 10), float32]) {
  %637 = cast(%var_9191, dtype="bool") /* ty=Tensor[(2, 3, 3), bool] */;
  %638 = shape_of(%var_9190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%var_9190, dtype="bool") /* ty=Tensor[(2, 3, 3), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = not_equal(%639, %640) /* ty=Tensor[(2, 3, 3), bool] */;
  %642 = @func_9050() /* ty=Tensor[(5, 11, 10), float32] */;
  (%641, %642)
}

def @func_5933(%var_5817: Tensor[(3, 10, 2), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(3, 10, 2), int32], Tensor[(3, 10, 2), uint64], Tensor[(3, 10, 2), float32]) {
  %643 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %644 = cast(meta[relay.Constant][19] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %645 = cast(meta[relay.Constant][20] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %646 = reshape(%644, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
  %647 = reshape(%645, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %648 = @func_1380(%646, %647) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
  %649 = @func_4608() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %650 = cast(%var_5817, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %651 = erf(%650) /* ty=Tensor[(3, 10, 2), float32] */;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %653 = sigmoid(%652) /* ty=Tensor[(3, 10, 2), float32] */;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %655 = rsqrt(%654) /* ty=Tensor[(3, 10, 2), float32] */;
  %656 = cast(%651, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%655, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %660 = add(%658, %659) /* ty=Tensor[(3, 10, 2), float32] */;
  %661 = cast(%660, dtype="int32") /* ty=Tensor[(3, 10, 2), int32] */;
  %662 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%655, dtype="int32") /* ty=Tensor[(3, 10, 2), int32] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %665 = cast(%var_5817, dtype="uint64") /* ty=Tensor[(3, 10, 2), uint64] */;
  %666 = shape_of(%653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%653, dtype="uint64") /* ty=Tensor[(3, 10, 2), uint64] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %669 = cast(%660, dtype="float64") /* ty=Tensor[(3, 10, 2), float64] */;
  %670 = log10(%669) /* ty=Tensor[(3, 10, 2), float64] */;
  %671 = cast(%670, dtype="float32") /* ty=Tensor[(3, 10, 2), float32] */;
  %672 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  %673 = %643.0;
  %674 = %648.2;
  %675 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %676 = %649.0;
  %677 = right_shift(%663, %664) /* ty=Tensor[(3, 10, 2), int32] */;
  %678 = subtract(%667, %668) /* ty=Tensor[(3, 10, 2), uint64] */;
  %679 = cos(%671) /* ty=Tensor[(3, 10, 2), float32] */;
  (%672, %673, %674, meta[relay.Constant][19] /* ty=Tensor[(21), float32] */, meta[relay.Constant][20] /* ty=Tensor[(294), float32] */, %675, %676, %677, %678, %679)
}

def @func_2582(%var_2580: Tensor[(11, 6, 14), uint8], %var_2581: Tensor[(11, 6, 14), uint8]) -> (Tensor[(11, 6, 14), uint8],) {
  @func_2578(%var_2580, %var_2581) /* ty=(Tensor[(11, 6, 14), uint8],) */
}

def @func_11145() -> Tensor[(5, 11, 10), float64] {
  %681 = fn () -> Tensor[(5, 11, 10), float64] {
    %680 = @func_1801() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %680.1
  };
  %681() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_4166() -> Tensor[(5, 11, 10), bool] {
  %683 = fn () -> Tensor[(5, 11, 10), bool] {
    %682 = @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %682.0
  };
  %683() /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_10024() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_10022() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_8372() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %690 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %684 = @func_1229() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %685 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
    %686 = @func_2849() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %687 = %684.0;
    %688 = %685.0;
    %689 = %686.0;
    (%687, %688, %689)
  };
  %690() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_9504() -> (Tensor[(5, 11, 10), bool],) {
  %693 = fn () -> (Tensor[(5, 11, 10), bool],) {
    %691 = @func_7347() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
    %692 = %691.3;
    (%692,)
  };
  %693() /* ty=(Tensor[(5, 11, 10), bool],) */
}

def @func_5163() -> Tensor[(5, 11, 10), float64] {
  @func_5161() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_3940() -> Tensor[(5, 11, 10), float64] {
  @func_3938() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_864() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %698 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %694 = @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %695 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %696 = %694.3;
    %697 = %695.0;
    (%696, %697)
  };
  %698() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_5184() -> Tensor[(5, 11, 10), float64] {
  %699 = fn () -> Tensor[(5, 11, 10), float64] {
    @func_3000() /* ty=Tensor[(5, 11, 10), float64] */
  };
  %699() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_10388() -> (Tensor[(5, 11, 10), float32],) {
  %701 = fn () -> (Tensor[(5, 11, 10), float32],) {
    %700 = @func_10293() /* ty=Tensor[(5, 11, 10), float32] */;
    (%700,)
  };
  %701() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_643(%var_637: Tensor[(5, 11, 10), float32]) -> (Tensor[(5, 11, 10), float64],) {
  %702 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %703 = %702.0;
  %704 = cast(%var_637, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %708 = subtract(%706, %707) /* ty=Tensor[(5, 11, 10), float64] */;
  (%708,)
}

def @func_15064() -> Tensor[(5, 11, 10), bool] {
  @func_15062() /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_4931(%var_4929: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), int16], Tensor[(15, 15, 3), int8], Tensor[(675), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  @func_4928(%var_4929) /* ty=(Tensor[(5, 11, 10), int16], Tensor[(15, 15, 3), int8], Tensor[(675), int8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */
}

def @func_10134() -> (Tensor[(5, 11, 10), bool],) {
  %711 = fn () -> (Tensor[(5, 11, 10), bool],) {
    %709 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
    %710 = %709.0;
    (%710,)
  };
  %711() /* ty=(Tensor[(5, 11, 10), bool],) */
}

def @func_14148() -> Tensor[(5, 11, 10), bool] {
  %712 = fn () -> Tensor[(5, 11, 10), bool] {
    @func_1589() /* ty=Tensor[(5, 11, 10), bool] */
  };
  %712() /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_1369() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %717 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %713 = @func_863() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %714 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %715 = %713.1;
    %716 = %714.0;
    (%715, %716)
  };
  %717() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_4409(%var_4407: Tensor[(5, 10, 4), int8], %var_4408: Tensor[(5, 10, 4), int8]) -> (Tensor[(5, 10, 4), bool],) {
  %723 = fn (%var_4401: Tensor[(5, 10, 4), int8], %var_4402: Tensor[(5, 10, 4), int8]) -> (Tensor[(5, 10, 4), bool],) {
    %718 = cast(%var_4402, dtype="bool") /* ty=Tensor[(5, 10, 4), bool] */;
    %719 = shape_of(%var_4401, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%var_4401, dtype="bool") /* ty=Tensor[(5, 10, 4), bool] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %722 = not_equal(%720, %721) /* ty=Tensor[(5, 10, 4), bool] */;
    (%722,)
  };
  %723(%var_4407, %var_4408) /* ty=(Tensor[(5, 10, 4), bool],) */
}

def @func_13131() -> (Tensor[(5, 11, 10), float32],) {
  %724 = @func_12291() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %725 = %724.0;
  (%725,)
}

def @func_1351(%var_1350: Tensor[(15, 15, 3), int8]) -> Tensor[(15, 15, 3), int8] {
  %730 = fn (%var_1330: Tensor[(15, 15, 3), int8]) -> Tensor[(15, 15, 3), int8] {
    %726 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 15, 3), int8] */, dtype="int8") /* ty=Tensor[(15, 15, 3), int8] */;
    %727 = shape_of(%var_1330, dtype="int32") /* ty=Tensor[(3), int32] */;
    %728 = cast(%var_1330, dtype="int8") /* ty=Tensor[(15, 15, 3), int8] */;
    %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    left_shift(%728, %729) /* ty=Tensor[(15, 15, 3), int8] */
  };
  %730(%var_1350) /* ty=Tensor[(15, 15, 3), int8] */
}

def @func_13133() -> (Tensor[(5, 11, 10), float32],) {
  @func_13131() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_2170() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  %731 = @func_1735() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %732 = %731.0;
  %733 = @func_1589() /* ty=Tensor[(5, 11, 10), bool] */;
  (%732, %733)
}

def @func_6753() -> (Tensor[(5, 11, 10), float64],) {
  %734 = @func_5133() /* ty=Tensor[(5, 11, 10), float64] */;
  (%734,)
}

def @func_2831() -> (Tensor[(5, 11, 10), float64],) {
  %735 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %736 = %735.0;
  (%736,)
}

def @func_14964(%var_14963: Tensor[(9, 9, 5), float64]) -> (Tensor[(9, 9, 5), float64],) {
  %739 = fn (%var_14958: Tensor[(9, 9, 5), float64]) -> (Tensor[(9, 9, 5), float64],) {
    %737 = cast(%var_14958, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
    %738 = atan(%737) /* ty=Tensor[(9, 9, 5), float64] */;
    (%738,)
  };
  %739(%var_14963) /* ty=(Tensor[(9, 9, 5), float64],) */
}

def @func_17035() -> (Tensor[(5, 11, 10), uint8],) {
  %742 = fn () -> (Tensor[(5, 11, 10), uint8],) {
    %740 = @func_16069() /* ty=(Tensor[(5, 11, 10), uint8],) */;
    %741 = %740.0;
    (%741,)
  };
  %742() /* ty=(Tensor[(5, 11, 10), uint8],) */
}

def @func_15326() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_15324() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_1380(%var_1370: Tensor[(1, 3, 7), float32], %var_1371: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) {
  %743 = cast(%var_1370, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %744 = cast(%var_1371, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %745 = cast(meta[relay.Constant][22] /* ty=Tensor[(550, 1), float32] */, dtype="float32") /* ty=Tensor[(550, 1), float32] */;
  %746 = reshape(%745, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
  %747 = @func_643(%746) /* ty=(Tensor[(5, 11, 10), float64],) */;
  %748 = not_equal(%743, %744) /* ty=Tensor[(14, 3, 7), bool] */;
  %749 = %747.0;
  (%748, %749, meta[relay.Constant][22] /* ty=Tensor[(550, 1), float32] */)
}

def @func_11446() -> (Tensor[(8, 4, 2), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %757 = fn () -> (Tensor[(8, 4, 2), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %750 = cast(meta[relay.Constant][23] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %751 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 4, 2), uint8] */, dtype="uint8") /* ty=Tensor[(8, 4, 2), uint8] */;
    %752 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %753 = @func_8855() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
    %754 = minimum(%750, %751) /* ty=Tensor[(8, 4, 2), uint8] */;
    %755 = %752.1;
    %756 = %753.0;
    (%754, %755, %756)
  };
  %757() /* ty=(Tensor[(8, 4, 2), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_7115() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %762 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
    %758 = @func_6495() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %759 = %758.3;
    %760 = @func_5183() /* ty=Tensor[(5, 11, 10), float64] */;
    %761 = @func_5054() /* ty=Tensor[(5, 11, 10), float32] */;
    (%759, %760, %761)
  };
  %762() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_2042(%var_2040: Tensor[(5, 11, 10), float64]) -> Tensor[(5, 11, 10), bool] {
  @func_2039(%var_2040) /* ty=Tensor[(5, 11, 10), bool] */
}

def @func_8454() -> Tensor[(5, 11, 10), uint16] {
  %764 = fn () -> Tensor[(5, 11, 10), uint16] {
    %763 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %763.0
  };
  %764() /* ty=Tensor[(5, 11, 10), uint16] */
}

def @func_4710() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
  %765 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %766 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
  %767 = %765.0;
  (%766, %767)
}

def @func_8204() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
  %770 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
    %768 = @func_3589() /* ty=Tensor[(5, 11, 10), float64] */;
    %769 = @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */;
    (%768, %769)
  };
  %770() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */
}

def @func_359() -> Tensor[(5, 11, 10), float64] {
  @func_357() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_12229() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %774 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %771 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
    %772 = %771.4;
    %773 = @func_7882() /* ty=Tensor[(5, 11, 10), float64] */;
    (%772, %773)
  };
  %774() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_12998() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %778 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
    %775 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %776 = @func_5351() /* ty=Tensor[(5, 11, 10), float64] */;
    %777 = %775.1;
    (%776, %777)
  };
  %778() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_15443(%var_15428: Tensor[(10, 16, 5), float64]) -> (Tensor[(10, 16, 5), float64],) {
  %779 = cast(%var_15428, dtype="float64") /* ty=Tensor[(10, 16, 5), float64] */;
  %780 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(10, 16, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 16, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 16, 5), float64] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %783 = maximum(%781, %782) /* ty=Tensor[(10, 16, 5), float64] */;
  (%783,)
}

def @func_16196() -> Tensor[(5, 11, 10), float64] {
  %785 = fn () -> Tensor[(5, 11, 10), float64] {
    %784 = @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %784.0
  };
  %785() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_7871(%var_7869: Tensor[(4, 2, 14), uint64]) -> Tensor[(4, 2, 14), uint64] {
  @func_7868(%var_7869) /* ty=Tensor[(4, 2, 14), uint64] */
}

def @func_16860(%var_16858: Tensor[(208), bool], %var_16859: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(1755), float64], Tensor[(5, 11, 10), float64], Tensor[(208), bool], Tensor[(990), bool], Tensor[(5, 11, 10), float64]) {
  @func_16856(%var_16858, %var_16859) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(1755), float64], Tensor[(5, 11, 10), float64], Tensor[(208), bool], Tensor[(990), bool], Tensor[(5, 11, 10), float64]) */
}

def @func_8723() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %786 = @func_7952() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %787 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %788 = %786.2;
  %789 = %787.2;
  (%788, %789)
}

def @func_16910(%var_16908: Tensor[(7, 3), float32], %var_16909: Tensor[(90), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(7, 3), float32], Tensor[(294), float32], Tensor[(112), uint64], Tensor[(112), uint64], Tensor[(2, 15, 3), float64], Tensor[(90), float64], Tensor[(5, 11, 10), float32]) {
  %807 = fn (%var_16875: Tensor[(7, 3), float32], %var_16889: Tensor[(90), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(7, 3), float32], Tensor[(294), float32], Tensor[(112), uint64], Tensor[(112), uint64], Tensor[(2, 15, 3), float64], Tensor[(90), float64], Tensor[(5, 11, 10), float32]) {
    %790 = @func_10109() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %791 = cast(%var_16875, dtype="float32") /* ty=Tensor[(7, 3), float32] */;
    %792 = cast(meta[relay.Constant][26] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
    %793 = reshape(%791, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
    %794 = reshape(%792, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
    %795 = @func_1380(%793, %794) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
    %796 = cast(meta[relay.Constant][27] /* ty=Tensor[(112), uint64] */, dtype="uint64") /* ty=Tensor[(112), uint64] */;
    %797 = reshape(%796, newshape=[112]) /* ty=Tensor[(112), uint64] */;
    %798 = @func_8659(%797) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) */;
    %799 = cast(%var_16889, dtype="float64") /* ty=Tensor[(90), float64] */;
    %800 = reshape(%799, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
    %801 = @func_10022() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %802 = %790.0;
    %803 = %795.1;
    %804 = %798.2;
    %805 = @func_12517(%800) /* ty=Tensor[(2, 15, 3), float64] */;
    %806 = %801.2;
    (%802, %803, %var_16875, meta[relay.Constant][26] /* ty=Tensor[(294), float32] */, %804, meta[relay.Constant][27] /* ty=Tensor[(112), uint64] */, %805, %var_16889, %806)
  };
  %807(%var_16908, %var_16909) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(7, 3), float32], Tensor[(294), float32], Tensor[(112), uint64], Tensor[(112), uint64], Tensor[(2, 15, 3), float64], Tensor[(90), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_7685() -> (Tensor[(5, 11, 10), float64], Tensor[(990), float32], Tensor[(990), float32], Tensor[(5, 11, 10), bool]) {
  %808 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
  %809 = cast(meta[relay.Constant][28] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %810 = reshape(%809, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %811 = @func_4640(%810) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */;
  %812 = @func_4688() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */;
  %813 = %808.0;
  %814 = %811.3;
  %815 = %812.2;
  (%813, %814, meta[relay.Constant][28] /* ty=Tensor[(990), float32] */, %815)
}

def @func_646(%var_644: Tensor[(5, 11, 10), float32]) -> (Tensor[(5, 11, 10), float64],) {
  @func_643(%var_644) /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_5256() -> Tensor[(5, 11, 10), float64] {
  %817 = fn () -> Tensor[(5, 11, 10), float64] {
    %816 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
    %816.0
  };
  %817() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_8609() -> (Tensor[(4, 15, 12), uint64],) {
  @func_8607() /* ty=(Tensor[(4, 15, 12), uint64],) */
}

def @func_10129(%var_10128: Tensor[(15, 7, 6), uint8]) -> (Tensor[(15, 7, 6), uint8],) {
  %823 = fn (%var_10119: Tensor[(15, 7, 6), uint8]) -> (Tensor[(15, 7, 6), uint8],) {
    %818 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 7, 6), uint8] */, dtype="uint8") /* ty=Tensor[(15, 7, 6), uint8] */;
    %819 = shape_of(%var_10119, dtype="int32") /* ty=Tensor[(3), int32] */;
    %820 = cast(%var_10119, dtype="uint8") /* ty=Tensor[(15, 7, 6), uint8] */;
    %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %822 = logical_xor(%820, %821) /* ty=Tensor[(15, 7, 6), uint8] */;
    (%822,)
  };
  %823(%var_10128) /* ty=(Tensor[(15, 7, 6), uint8],) */
}

def @func_10345() -> (Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64]) {
  %824 = @func_6437() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %825 = @func_8607() /* ty=(Tensor[(4, 15, 12), uint64],) */;
  %826 = %824.0;
  %827 = %825.0;
  (%826, %827)
}

def @func_9677() -> (Tensor[(5, 11, 10), float64],) {
  %828 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %829 = %828.1;
  (%829,)
}

def @func_2463(%var_2462: Tensor[(675, 1), int8]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64]) {
  %838 = fn (%var_2450: Tensor[(675, 1), int8]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64]) {
    %830 = @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
    %831 = cast(%var_2450, dtype="int8") /* ty=Tensor[(675, 1), int8] */;
    %832 = reshape(%831, newshape=[675]) /* ty=Tensor[(675), int8] */;
    %833 = @func_1887(%832) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(15, 15, 3), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %834 = cast(%var_2450, dtype="float64") /* ty=Tensor[(675, 1), float64] */;
    %835 = %830.0;
    %836 = %833.2;
    %837 = erf(%834) /* ty=Tensor[(675, 1), float64] */;
    (%835, %836, %837)
  };
  %838(%var_2462) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64]) */
}

def @func_5029() -> (Tensor[(5, 11, 10), bool],) {
  %839 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %840 = %839.0;
  (%840,)
}

def @func_15239() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %844 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
    %841 = @func_4710() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
    %842 = %841.1;
    %843 = @func_9321() /* ty=Tensor[(5, 11, 10), float32] */;
    (%842, %843)
  };
  %844() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_11740() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_11738() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_7444(%var_7443: Tensor[(12, 4, 5), bool]) -> (Tensor[(12, 4, 5), float32], Tensor[(5, 11, 10), float32], Tensor[(12, 4, 5), bool], Tensor[(5, 11, 10), float32]) {
  %861 = fn (%var_7405: Tensor[(12, 4, 5), bool]) -> (Tensor[(12, 4, 5), float32], Tensor[(5, 11, 10), float32], Tensor[(12, 4, 5), bool], Tensor[(5, 11, 10), float32]) {
    %845 = cast(%var_7405, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
    %846 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(12, 4, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %847 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
    %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %849 = logical_or(%847, %848) /* ty=Tensor[(12, 4, 5), bool] */;
    %850 = cast(%849, dtype="float32") /* ty=Tensor[(12, 4, 5), float32] */;
    %851 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %852 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
    %853 = shape_of(%849, dtype="int32") /* ty=Tensor[(3), int32] */;
    %854 = cast(%849, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %856 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
    %857 = asinh(%850) /* ty=Tensor[(12, 4, 5), float32] */;
    %858 = %851.1;
    %859 = logical_and(%854, %855) /* ty=Tensor[(12, 4, 5), bool] */;
    %860 = %856.3;
    (%857, %858, %859, %860)
  };
  %861(%var_7443) /* ty=(Tensor[(12, 4, 5), float32], Tensor[(5, 11, 10), float32], Tensor[(12, 4, 5), bool], Tensor[(5, 11, 10), float32]) */
}

def @func_12256() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  %865 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
    %862 = @func_8813() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %863 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
    %864 = %862.0;
    (%863, %864)
  };
  %865() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */
}

def @func_11542() -> Tensor[(5, 11, 10), float64] {
  @func_11540() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_10085() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) {
  @func_10083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(4, 2, 14), uint64], Tensor[(112), uint64]) */
}

def @func_16133() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_16131() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_11493() -> Tensor[(5, 11, 10), float32] {
  %866 = @func_1801() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %866.0
}

def @func_3634(%var_3632: Tensor[(11, 7, 7), float64], %var_3633: Tensor[(11, 7, 7), float64]) -> (Tensor[(11, 7, 7), float64], Tensor[(5, 11, 10), int16]) {
  %874 = fn (%var_3614: Tensor[(11, 7, 7), float64], %var_3615: Tensor[(11, 7, 7), float64]) -> (Tensor[(11, 7, 7), float64], Tensor[(5, 11, 10), int16]) {
    %867 = cast(%var_3615, dtype="float64") /* ty=Tensor[(11, 7, 7), float64] */;
    %868 = shape_of(%var_3614, dtype="int32") /* ty=Tensor[(3), int32] */;
    %869 = cast(%var_3614, dtype="float64") /* ty=Tensor[(11, 7, 7), float64] */;
    %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %871 = @func_3469() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) */;
    %872 = mod(%869, %870) /* ty=Tensor[(11, 7, 7), float64] */;
    %873 = %871.0;
    (%872, %873)
  };
  %874(%var_3632, %var_3633) /* ty=(Tensor[(11, 7, 7), float64], Tensor[(5, 11, 10), int16]) */
}

def @func_7002() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %875 = @func_4608() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %876 = @func_4710() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
  %877 = @func_4165() /* ty=Tensor[(5, 11, 10), bool] */;
  %878 = %875.0;
  %879 = @func_2933() /* ty=Tensor[(5, 11, 10), float64] */;
  %880 = %876.1;
  (%877, %878, %879, %880)
}

def @func_17071() -> (Tensor[(5, 11, 10), float32],) {
  %881 = @func_16713() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %882 = %881.0;
  (%882,)
}

def @func_7046() -> (Tensor[(5, 11, 10), float64],) {
  @func_7044() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_7377() -> Tensor[(5, 11, 10), float64] {
  %883 = fn () -> Tensor[(5, 11, 10), float64] {
    @func_1115() /* ty=Tensor[(5, 11, 10), float64] */
  };
  %883() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_12136() -> Tensor[(5, 11, 10), float64] {
  @func_1659() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_4371() -> Tensor[(5, 11, 10), uint8] {
  @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */
}

def @func_13570(%var_13568: Tensor[(12, 6, 15), uint8], %var_13569: Tensor[(12, 6, 15), uint8]) -> (Tensor[(12, 6, 15), bool], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint8]) {
  %892 = fn (%var_13491: Tensor[(12, 6, 15), uint8], %var_13492: Tensor[(12, 6, 15), uint8]) -> (Tensor[(12, 6, 15), bool], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint8]) {
    %884 = cast(%var_13492, dtype="bool") /* ty=Tensor[(12, 6, 15), bool] */;
    %885 = shape_of(%var_13491, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%var_13491, dtype="bool") /* ty=Tensor[(12, 6, 15), bool] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %888 = @func_12506() /* ty=(Tensor[(5, 11, 10), uint8],) */;
    %889 = not_equal(%886, %887) /* ty=Tensor[(12, 6, 15), bool] */;
    %890 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
    %891 = %888.0;
    (%889, %890, %891)
  };
  %892(%var_13568, %var_13569) /* ty=(Tensor[(12, 6, 15), bool], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint8]) */
}

def @func_12613() -> Tensor[(5, 11, 10), float64] {
  %893 = @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %893.0
}

def @func_9182() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  @func_9180() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */
}

def @func_10223() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
  @func_10221() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */
}

def @func_14010() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  @func_14008() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */
}

def @func_6093() -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), bool]) {
  %896 = fn () -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), bool]) {
    %894 = @func_3063() /* ty=Tensor[(5, 11, 10), uint8] */;
    %895 = @func_1589() /* ty=Tensor[(5, 11, 10), bool] */;
    (%894, %895)
  };
  %896() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), bool]) */
}

def @func_9206(%var_9204: Tensor[(2, 3, 3), int8], %var_9205: Tensor[(2, 3, 3), int8]) -> (Tensor[(2, 3, 3), bool], Tensor[(5, 11, 10), float32]) {
  @func_9202(%var_9204, %var_9205) /* ty=(Tensor[(2, 3, 3), bool], Tensor[(5, 11, 10), float32]) */
}

def @func_15119() -> Tensor[(5, 11, 10), bool] {
  %897 = @func_9614() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %897.0
}

def @func_4712() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
  @func_4710() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */
}

def @func_10594() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_10592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_14581() -> Tensor[(5, 11, 10), float64] {
  @func_14579() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_14873(%var_14837: Tensor[(3, 7, 6), int32], %var_14838: Tensor[(3, 7, 6), int32], %var_14848: Tensor[(990), float32], %var_14853: Tensor[(3, 7, 6), int32]) -> (Tensor[(3, 7, 6), bool], Tensor[(5, 11, 10), float64], Tensor[(990), float32], Tensor[(3, 7, 6), bool], Tensor[(4, 15, 12), uint64]) {
  %898 = cast(%var_14838, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %899 = shape_of(%var_14837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%var_14837, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %902 = cast(%var_14848, dtype="float32") /* ty=Tensor[(990), float32] */;
  %903 = reshape(%902, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %904 = @func_4640(%903) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */;
  %905 = cast(%var_14853, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %906 = shape_of(%var_14837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(%var_14837, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %909 = @func_14746() /* ty=(Tensor[(4, 15, 12), uint64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %910 = not_equal(%900, %901) /* ty=Tensor[(3, 7, 6), bool] */;
  %911 = %904.1;
  %912 = logical_or(%907, %908) /* ty=Tensor[(3, 7, 6), bool] */;
  %913 = %909.0;
  (%910, %911, %var_14848, %912, %913)
}

def @func_16443() -> Tensor[(5, 11, 10), float64] {
  %915 = fn () -> Tensor[(5, 11, 10), float64] {
    %914 = @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %914.0
  };
  %915() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_8481() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %919 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %916 = @func_3223() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
    %917 = @func_2590() /* ty=Tensor[(5, 11, 10), float64] */;
    %918 = %916.1;
    (%917, %918)
  };
  %919() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_8024() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %922 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
    %920 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
    %921 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
    (%920, %921)
  };
  %922() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */
}

def @func_13283() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint16]) {
  %923 = @func_6375() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), int16]) */;
  %924 = @func_7550() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %925 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %926 = %923.1;
  %927 = %924.1;
  %928 = %925.0;
  (%926, %927, %928)
}

def @func_15224() -> (Tensor[(5, 11, 10), bool],) {
  @func_15222() /* ty=(Tensor[(5, 11, 10), bool],) */
}

def @func_15424() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %929 = @func_12815() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
  %930 = @func_9050() /* ty=Tensor[(5, 11, 10), float32] */;
  %931 = %929.1;
  (%930, %931)
}

def @func_10494() -> Tensor[(5, 11, 10), float64] {
  @func_10492() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_1589() -> Tensor[(5, 11, 10), bool] {
  %932 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %932.0
}

def @func_6133() -> (Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64], Tensor[(720), float64]) {
  @func_6131() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64], Tensor[(720), float64]) */
}

def @func_10811() -> Tensor[(5, 11, 10), float32] {
  @func_10809() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_5013() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  @func_5011() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_13444(%var_13442: Tensor[(1, 2, 9), uint8], %var_13443: Tensor[(1, 2, 9), uint8]) -> (Tensor[(5, 11, 10), float32], Tensor[(?, 2, 9), int32]) {
  %950 = fn (%var_13384: Tensor[(1, 2, 9), uint8], %var_13385: Tensor[(1, 2, 9), uint8]) -> (Tensor[(5, 11, 10), float32], Tensor[(?, 2, 9), int32]) {
    %933 = @func_8585() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %934 = cast(%var_13385, dtype="uint8") /* ty=Tensor[(1, 2, 9), uint8] */;
    %935 = shape_of(%var_13384, dtype="int32") /* ty=Tensor[(3), int32] */;
    %936 = cast(%var_13384, dtype="uint8") /* ty=Tensor[(1, 2, 9), uint8] */;
    %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %938 = multiply(%936, %937) /* ty=Tensor[(?, 2, 9), uint8] */;
    %939 = cast(%var_13384, dtype="uint32") /* ty=Tensor[(1, 2, 9), uint32] */;
    %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(3), int32] */;
    %941 = cast(%938, dtype="uint32") /* ty=Tensor[(?, 2, 9), uint32] */;
    %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %943 = bitwise_or(%941, %942) /* ty=Tensor[(?, 2, 9), uint32] */;
    %944 = cast(%938, dtype="int32") /* ty=Tensor[(?, 2, 9), int32] */;
    %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
    %946 = cast(%943, dtype="int32") /* ty=Tensor[(?, 2, 9), int32] */;
    %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %948 = %933.0;
    %949 = bitwise_and(%946, %947) /* ty=Tensor[(?, 2, 9), int32] */;
    (%948, %949)
  };
  %950(%var_13442, %var_13443) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(?, 2, 9), int32]) */
}

def @func_10794(%var_10754: Tensor[(756), bool]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(12, 7, 9), float32], Tensor[(756), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %951 = @func_5502() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */;
  %952 = cast(%var_10754, dtype="bool") /* ty=Tensor[(756), bool] */;
  %953 = cast(%var_10754, dtype="bool") /* ty=Tensor[(756), bool] */;
  %954 = reshape(%952, newshape=[12, 7, 9]) /* ty=Tensor[(12, 7, 9), bool] */;
  %955 = reshape(%953, newshape=[12, 7, 9]) /* ty=Tensor[(12, 7, 9), bool] */;
  %956 = @func_8110(%954, %955) /* ty=(Tensor[(12, 7, 9), bool], Tensor[(12, 7, 9), float32]) */;
  %957 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %958 = %951.0;
  %959 = @func_9321() /* ty=Tensor[(5, 11, 10), float32] */;
  %960 = %956.1;
  %961 = %957.4;
  %962 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
  %963 = @func_5699() /* ty=Tensor[(5, 11, 10), float64] */;
  %964 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  (%958, %959, %960, %var_10754, %961, %962, %963, %964)
}

def @func_12486() -> Tensor[(5, 11, 10), float64] {
  @func_12484() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_16244(%var_16242: Tensor[(5, 12, 7), int32], %var_16243: Tensor[(5, 12, 7), int32]) -> (Tensor[(5, 12, 7), int32], Tensor[(5, 11, 10), float32]) {
  %972 = fn (%var_16219: Tensor[(5, 12, 7), int32], %var_16220: Tensor[(5, 12, 7), int32]) -> (Tensor[(5, 12, 7), int32], Tensor[(5, 11, 10), float32]) {
    %965 = cast(%var_16220, dtype="int32") /* ty=Tensor[(5, 12, 7), int32] */;
    %966 = shape_of(%var_16219, dtype="int32") /* ty=Tensor[(3), int32] */;
    %967 = cast(%var_16219, dtype="int32") /* ty=Tensor[(5, 12, 7), int32] */;
    %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %969 = @func_9832() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %970 = bitwise_xor(%967, %968) /* ty=Tensor[(5, 12, 7), int32] */;
    %971 = %969.0;
    (%970, %971)
  };
  %972(%var_16242, %var_16243) /* ty=(Tensor[(5, 12, 7), int32], Tensor[(5, 11, 10), float32]) */
}

def @func_4348() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %973 = @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %974 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %975 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
  %976 = %973.1;
  %977 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  %978 = %974.2;
  %979 = %975.1;
  (%976, %977, %978, %979)
}

def @func_8577(%var_8562: int64, %var_8563: Tensor[(9, 10, 2), int64]) -> (Tensor[(9, 10, 2), int64],) {
  %980 = cast(%var_8562, dtype="int64") /* ty=int64 */;
  %981 = cast(%var_8563, dtype="int64") /* ty=Tensor[(9, 10, 2), int64] */;
  %982 = bitwise_or(%980, %981) /* ty=Tensor[(9, 10, 2), int64] */;
  (%982,)
}

def @func_338() -> (Tensor[(5, 11, 10), float64],) {
  %987 = fn () -> (Tensor[(5, 11, 10), float64],) {
    %983 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %984 = %983.2;
    %985 = cast(%984, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
    %986 = log2(%985) /* ty=Tensor[(5, 11, 10), float64] */;
    (%986,)
  };
  %987() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_6131() -> (Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64], Tensor[(720), float64]) {
  %988 = cast(meta[relay.Constant][31] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %989 = reshape(%988, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
  %990 = @func_4210(%989) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), uint64]) */;
  %991 = @func_4581() /* ty=Tensor[(5, 11, 10), float64] */;
  %992 = %990.1;
  (%991, %992, meta[relay.Constant][31] /* ty=Tensor[(720), float64] */)
}

def @func_8587() -> (Tensor[(5, 11, 10), float32],) {
  @func_8585() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_6040() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_8607() -> (Tensor[(4, 15, 12), uint64],) {
  %993 = @func_6131() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(4, 15, 12), uint64], Tensor[(720), float64]) */;
  %994 = %993.1;
  (%994,)
}

def @func_2833() -> (Tensor[(5, 11, 10), float64],) {
  @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_10650() -> (Tensor[(5, 11, 10), float64],) {
  %996 = fn () -> (Tensor[(5, 11, 10), float64],) {
    %995 = @func_7376() /* ty=Tensor[(5, 11, 10), float64] */;
    (%995,)
  };
  %996() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_12291() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %997 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %998 = @func_11738() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %999 = %997.0;
  %1000 = %998.1;
  (%999, %1000)
}

def @func_10554() -> Tensor[(5, 11, 10), float64] {
  @func_10552() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_5056() -> Tensor[(5, 11, 10), float32] {
  @func_5054() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_11812() -> (Tensor[(5, 11, 10), float64],) {
  %1002 = fn () -> (Tensor[(5, 11, 10), float64],) {
    %1001 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
    (%1001,)
  };
  %1002() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_1051() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) {
  @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */
}

def @func_10920(%var_10919: Tensor[(4, 2, 7), int64]) -> Tensor[(4, 2, 7), bool] {
  %1005 = fn (%var_10910: Tensor[(4, 2, 7), int64]) -> Tensor[(4, 2, 7), bool] {
    %1003 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 2, 1), int64] */, dtype="bool") /* ty=Tensor[(4, 2, 1), bool] */;
    %1004 = cast(%var_10910, dtype="bool") /* ty=Tensor[(4, 2, 7), bool] */;
    equal(%1003, %1004) /* ty=Tensor[(4, 2, 7), bool] */
  };
  %1005(%var_10919) /* ty=Tensor[(4, 2, 7), bool] */
}

def @func_13713(%var_13669: Tensor[(1, 6, 5), uint32]) -> (Tensor[(5, 11, 10), float32], Tensor[(?, 6, 5), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %1006 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %1007 = cast(meta[relay.Constant][33] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1008 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 6, 5), uint32] */, dtype="uint32") /* ty=Tensor[(1, 6, 5), uint32] */;
  %1009 = bitwise_xor(%1007, %1008) /* ty=Tensor[(1, 6, 5), uint32] */;
  %1010 = cast(%var_13669, dtype="bool") /* ty=Tensor[(1, 6, 5), bool] */;
  %1011 = shape_of(%1009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(%1009, dtype="bool") /* ty=Tensor[(1, 6, 5), bool] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1014 = logical_or(%1012, %1013) /* ty=Tensor[(?, 6, 5), bool] */;
  %1015 = cast(meta[relay.Constant][33] /* ty=uint32 */, dtype="int16") /* ty=int16 */;
  %1016 = cast(%1014, dtype="int16") /* ty=Tensor[(?, 6, 5), int16] */;
  %1017 = @func_1735() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1018 = @func_8723() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1019 = %1006.0;
  %1020 = bitwise_or(%1015, %1016) /* ty=Tensor[(?, 6, 5), int16] */;
  %1021 = %1017.0;
  %1022 = %1018.1;
  (%1019, %1020, %1021, %1022)
}

def @func_2172() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  @func_2170() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */
}

def @func_11669() -> (Tensor[(5, 11, 10), bool],) {
  @func_11667() /* ty=(Tensor[(5, 11, 10), bool],) */
}

def @func_4088() -> (Tensor[(5, 11, 10), float32],) {
  @func_4086() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_7550() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  %1023 = @func_5351() /* ty=Tensor[(5, 11, 10), float64] */;
  %1024 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
  (%1023, %1024)
}

def @func_12594() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64], Tensor[(5, 11, 10), uint16], Tensor[(1, 675), float64], Tensor[(5, 11, 10), bool]) {
  @func_12592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(675, 1), float64], Tensor[(5, 11, 10), uint16], Tensor[(1, 675), float64], Tensor[(5, 11, 10), bool]) */
}

def @func_14879(%var_14875: Tensor[(3, 7, 6), int32], %var_14876: Tensor[(3, 7, 6), int32], %var_14877: Tensor[(990), float32], %var_14878: Tensor[(3, 7, 6), int32]) -> (Tensor[(3, 7, 6), bool], Tensor[(5, 11, 10), float64], Tensor[(990), float32], Tensor[(3, 7, 6), bool], Tensor[(4, 15, 12), uint64]) {
  @func_14873(%var_14875, %var_14876, %var_14877, %var_14878) /* ty=(Tensor[(3, 7, 6), bool], Tensor[(5, 11, 10), float64], Tensor[(990), float32], Tensor[(3, 7, 6), bool], Tensor[(4, 15, 12), uint64]) */
}

def @func_16071() -> (Tensor[(5, 11, 10), uint8],) {
  @func_16069() /* ty=(Tensor[(5, 11, 10), uint8],) */
}

def @func_15761() -> Tensor[(5, 11, 10), float64] {
  @func_3000() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_9050() -> Tensor[(5, 11, 10), float32] {
  @func_4442() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_15590() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %1025 = @func_10387() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1026 = %1025.0;
  %1027 = @func_7249() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1026, %1027)
}

def @func_1230() -> (Tensor[(5, 11, 10), float32],) {
  %1030 = fn () -> (Tensor[(5, 11, 10), float32],) {
    %1028 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
    %1029 = %1028.2;
    (%1029,)
  };
  %1030() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_17073() -> (Tensor[(5, 11, 10), float32],) {
  @func_17071() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_14487(%var_14486: Tensor[(195, 9), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(195, 9), bool], Tensor[(195, 9), int64], Tensor[(5, 11, 10), int16]) {
  %1042 = fn (%var_14474: Tensor[(195, 9), float64]) -> (Tensor[(5, 11, 10), float32], Tensor[(195, 9), bool], Tensor[(195, 9), int64], Tensor[(5, 11, 10), int16]) {
    %1031 = @func_2730() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */;
    %1032 = %1031.4;
    %1033 = cast(%1032, dtype="bool") /* ty=Tensor[(195, 1), bool] */;
    %1034 = cast(%var_14474, dtype="bool") /* ty=Tensor[(195, 9), bool] */;
    %1035 = cast(%1032, dtype="int64") /* ty=Tensor[(195, 1), int64] */;
    %1036 = cast(%var_14474, dtype="int64") /* ty=Tensor[(195, 9), int64] */;
    %1037 = @func_3469() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) */;
    %1038 = @func_9321() /* ty=Tensor[(5, 11, 10), float32] */;
    %1039 = less_equal(%1033, %1034) /* ty=Tensor[(195, 9), bool] */;
    %1040 = multiply(%1035, %1036) /* ty=Tensor[(195, 9), int64] */;
    %1041 = %1037.0;
    (%1038, %1039, %1040, %1041)
  };
  %1042(%var_14486) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(195, 9), bool], Tensor[(195, 9), int64], Tensor[(5, 11, 10), int16]) */
}

def @func_4583() -> Tensor[(5, 11, 10), float64] {
  @func_4581() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_5645() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
  %1047 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
    %1043 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %1044 = @func_5255() /* ty=Tensor[(5, 11, 10), float64] */;
    %1045 = @func_4289() /* ty=Tensor[(5, 11, 10), int16] */;
    %1046 = %1043.2;
    (%1044, %1045, %1046)
  };
  %1047() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */
}

def @func_1492() -> Tensor[(5, 11, 10), int16] {
  %1055 = fn () -> Tensor[(5, 11, 10), int16] {
    %1048 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
    %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(5, 11, 10), float64] */;
    %1050 = asin(%1049) /* ty=Tensor[(5, 11, 10), float64] */;
    %1051 = cast(%1048, dtype="int16") /* ty=Tensor[(5, 11, 10), int16] */;
    %1052 = shape_of(%1050, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1053 = cast(%1050, dtype="int16") /* ty=Tensor[(5, 11, 10), int16] */;
    %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%1053, %1054) /* ty=Tensor[(5, 11, 10), int16] */
  };
  %1055() /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_8161(%var_8133: Tensor[(9, 1, 1), int64], %var_8134: Tensor[(9, 15, 12), int64]) -> (Tensor[(9, 15, 12), int64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1056 = cast(%var_8133, dtype="int64") /* ty=Tensor[(9, 1, 1), int64] */;
  %1057 = cast(%var_8134, dtype="int64") /* ty=Tensor[(9, 15, 12), int64] */;
  %1058 = add(%1056, %1057) /* ty=Tensor[(9, 15, 12), int64] */;
  %1059 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
  %1060 = @func_5133() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1058, %1059, %1060)
}

def @func_1889(%var_1888: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), bool], Tensor[(15, 15, 3), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1082 = fn (%var_1835: Tensor[(675), int8]) -> (Tensor[(5, 11, 10), bool], Tensor[(15, 15, 3), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %1061 = @func_1589() /* ty=Tensor[(5, 11, 10), bool] */;
    %1062 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
    %1063 = cast(%1062, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
    %1064 = shape_of(%1061, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1065 = cast(%1061, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
    %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1067 = cast(%var_1835, dtype="int8") /* ty=Tensor[(675), int8] */;
    %1068 = reshape(%1067, newshape=[15, 15, 3]) /* ty=Tensor[(15, 15, 3), int8] */;
    %1069 = @func_1349(%1068) /* ty=Tensor[(15, 15, 3), int8] */;
    %1070 = cast(%var_1835, dtype="bool") /* ty=Tensor[(675), bool] */;
    %1071 = shape_of(%1069, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1072 = cast(%1069, dtype="bool") /* ty=Tensor[(15, 15, 3), bool] */;
    %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1074 = cast(%1062, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %1075 = reshape(%1074, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
    %1076 = @func_643(%1075) /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1077 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1078 = not_equal(%1065, %1066) /* ty=Tensor[(5, 11, 10), bool] */;
    %1079 = less_equal(%1072, %1073) /* ty=Tensor[(15, 15, 3), bool] */;
    %1080 = %1076.0;
    %1081 = %1077.0;
    (%1078, %1079, %1080, %1081)
  };
  %1082(%var_1888) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(15, 15, 3), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_925() -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_13716(%var_13714: Tensor[(1, 6, 5), uint32]) -> (Tensor[(5, 11, 10), float32], Tensor[(?, 6, 5), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_13713(%var_13714) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(?, 6, 5), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_3718() -> (Tensor[(5, 11, 10), float32],) {
  %1083 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1084 = %1083.2;
  (%1084,)
}

def @func_11738() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1085 = @func_1659() /* ty=Tensor[(5, 11, 10), float64] */;
  %1086 = @func_3589() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1085, %1086)
}

def @func_282() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  %1095 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
    %1087 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %1088 = %1087.0;
    %1089 = cast(%1088, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %1090 = reshape(%1089, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
    %1091 = @func_150(%1090) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %1092 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %1093 = %1091.0;
    %1094 = %1092.0;
    (%1088, %1093, %1094)
  };
  %1095() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */
}

def @func_15380(%var_15333: Tensor[(3, 10, 7), uint64], %var_15373: Tensor[(225, 3), int8]) -> (Tensor[(3, 10, 7), bool], Tensor[(3, 10, 7), float32], Tensor[(5, 11, 10), float32], Tensor[(225, 3), int8]) {
  %1096 = cast(%var_15333, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
  %1097 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(3, 10, 7), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1098 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 10, 7), uint64] */, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
  %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1100 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 10, 7), uint64] */, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %1101 = cast(%var_15373, dtype="int8") /* ty=Tensor[(225, 3), int8] */;
  %1102 = reshape(%1101, newshape=[5, 135]) /* ty=Tensor[(5, 135), int8] */;
  %1103 = @func_6878(%1102) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 135), int8], Tensor[(5, 11, 10), float32]) */;
  %1104 = not_equal(%1098, %1099) /* ty=Tensor[(3, 10, 7), bool] */;
  %1105 = acosh(%1100) /* ty=Tensor[(3, 10, 7), float32] */;
  %1106 = %1103.1;
  (%1104, %1105, %1106, %var_15373)
}

def @func_16759() -> (Tensor[(7, 1, 14), bool],) {
  @func_16757() /* ty=(Tensor[(7, 1, 14), bool],) */
}

def @func_4642(%var_4641: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  %1117 = fn (%var_4632: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
    %1107 = @func_584() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1108 = @func_4505() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1109 = cast(%var_4632, dtype="float32") /* ty=Tensor[(990), float32] */;
    %1110 = cast(%var_4632, dtype="float32") /* ty=Tensor[(990), float32] */;
    %1111 = reshape(%1109, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
    %1112 = reshape(%1110, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
    %1113 = @func_4270(%1111, %1112) /* ty=(Tensor[(9, 10, 11), float32],) */;
    %1114 = %1107.0;
    %1115 = %1108.0;
    %1116 = %1113.0;
    (%1114, %1115, %1116, %var_4632)
  };
  %1117(%var_4641) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */
}

def @func_9893() -> (Tensor[(5, 11, 10), float64],) {
  @func_9891() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_7883() -> Tensor[(5, 11, 10), float64] {
  %1118 = fn () -> Tensor[(5, 11, 10), float64] {
    @func_5399() /* ty=Tensor[(5, 11, 10), float64] */
  };
  %1118() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_6376() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), int16]) {
  %1122 = fn () -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), int16]) {
    %1119 = @func_3223() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
    %1120 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
    %1121 = %1119.0;
    (%1120, %1121)
  };
  %1122() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), int16]) */
}

def @func_9225() -> (Tensor[(5, 11, 10), float64],) {
  %1125 = fn () -> (Tensor[(5, 11, 10), float64],) {
    %1123 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
    %1124 = %1123.1;
    (%1124,)
  };
  %1125() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_14932() -> Tensor[(5, 11, 10), float32] {
  %1127 = fn () -> Tensor[(5, 11, 10), float32] {
    %1126 = @func_9135() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %1126.2
  };
  %1127() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_1703() -> Tensor[(5, 11, 10), float64] {
  %1129 = fn () -> Tensor[(5, 11, 10), float64] {
    %1128 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %1128.0
  };
  %1129() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_5605() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1130 = @func_2831() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1131 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1132 = @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1133 = %1130.0;
  %1134 = %1131.0;
  %1135 = %1132.3;
  (%1133, %1134, %1135)
}

def @func_8581(%var_8579: int64, %var_8580: Tensor[(9, 10, 2), int64]) -> (Tensor[(9, 10, 2), int64],) {
  @func_8577(%var_8579, %var_8580) /* ty=(Tensor[(9, 10, 2), int64],) */
}

def @func_9891() -> (Tensor[(5, 11, 10), float64],) {
  %1136 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1136,)
}

def @func_10552() -> Tensor[(5, 11, 10), float64] {
  %1137 = @func_9248() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1137.0
}

def @func_12507() -> (Tensor[(5, 11, 10), uint8],) {
  %1140 = fn () -> (Tensor[(5, 11, 10), uint8],) {
    %1138 = @func_11121() /* ty=(Tensor[(5, 11, 10), uint8],) */;
    %1139 = %1138.0;
    (%1139,)
  };
  %1140() /* ty=(Tensor[(5, 11, 10), uint8],) */
}

def @func_10592() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1141 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1142 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1143 = %1141.1;
  %1144 = %1142.2;
  (%1143, %1144)
}

def @func_2578(%var_2573: Tensor[(11, 6, 14), uint8], %var_2574: Tensor[(11, 6, 14), uint8]) -> (Tensor[(11, 6, 14), uint8],) {
  %1145 = cast(%var_2574, dtype="uint8") /* ty=Tensor[(11, 6, 14), uint8] */;
  %1146 = shape_of(%var_2573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%var_2573, dtype="uint8") /* ty=Tensor[(11, 6, 14), uint8] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1149 = bitwise_and(%1147, %1148) /* ty=Tensor[(11, 6, 14), uint8] */;
  (%1149,)
}

def @func_13285() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint16]) {
  @func_13283() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), uint16]) */
}

def @func_85() -> (Tensor[(5, 11, 10), float32],) {
  %1152 = fn () -> (Tensor[(5, 11, 10), float32],) {
    %1150 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %1151 = sinh(%1150) /* ty=Tensor[(5, 11, 10), float32] */;
    (%1151,)
  };
  %1152() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_11930() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %1153 = @func_6495() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %1154 = %1153.3;
  %1155 = @func_1702() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1154, %1155)
}

def @func_8966() -> Tensor[(5, 11, 10), float64] {
  %1156 = fn () -> Tensor[(5, 11, 10), float64] {
    @func_3589() /* ty=Tensor[(5, 11, 10), float64] */
  };
  %1156() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_990() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  %1165 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
    %1157 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %1158 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
    %1159 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1160 = @func_357() /* ty=Tensor[(5, 11, 10), float64] */;
    %1161 = %1157.0;
    %1162 = @func_522() /* ty=Tensor[(5, 11, 10), float64] */;
    %1163 = %1158.2;
    %1164 = %1159.0;
    (%1160, %1161, %1162, %1163, %1164)
  };
  %1165() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_8725() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_8723() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_11667() -> (Tensor[(5, 11, 10), bool],) {
  %1166 = @func_9503() /* ty=(Tensor[(5, 11, 10), bool],) */;
  %1167 = %1166.0;
  (%1167,)
}

def @func_9248() -> (Tensor[(5, 11, 10), float64],) {
  %1168 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1168,)
}

def @main(%var_17077: Tensor[(15, 10, 10), float32]) -> Tensor[(15, 10, 10), int8] {
  %1169 = cast(%var_17077, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  %1170 = cos(%1169) /* ty=Tensor[(15, 10, 10), float32] */;
  %1171 = cast(%var_17077, dtype="int8") /* ty=Tensor[(15, 10, 10), int8] */;
  %1172 = shape_of(%1170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1173 = cast(%1170, dtype="int8") /* ty=Tensor[(15, 10, 10), int8] */;
  %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%1173, %1174) /* ty=Tensor[(15, 10, 10), int8] */
}

def @func_5353() -> Tensor[(5, 11, 10), float64] {
  @func_5351() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_16215(%var_16214: Tensor[(15, 9, 7), float64]) -> (Tensor[(15, 9, 7), float64],) {
  %1177 = fn (%var_16207: Tensor[(15, 9, 7), float64]) -> (Tensor[(15, 9, 7), float64],) {
    %1175 = cast(%var_16207, dtype="float64") /* ty=Tensor[(15, 9, 7), float64] */;
    %1176 = atanh(%1175) /* ty=Tensor[(15, 9, 7), float64] */;
    (%1176,)
  };
  %1177(%var_16214) /* ty=(Tensor[(15, 9, 7), float64],) */
}

def @func_2591() -> Tensor[(5, 11, 10), float64] {
  %1178 = fn () -> Tensor[(5, 11, 10), float64] {
    @func_1115() /* ty=Tensor[(5, 11, 10), float64] */
  };
  %1178() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_8113(%var_8111: Tensor[(12, 7, 9), bool], %var_8112: Tensor[(12, 7, 9), bool]) -> (Tensor[(12, 7, 9), bool], Tensor[(12, 7, 9), float32]) {
  %1186 = fn (%var_8088: Tensor[(12, 7, 9), bool], %var_8089: Tensor[(12, 7, 9), bool]) -> (Tensor[(12, 7, 9), bool], Tensor[(12, 7, 9), float32]) {
    %1179 = cast(%var_8089, dtype="bool") /* ty=Tensor[(12, 7, 9), bool] */;
    %1180 = shape_of(%var_8088, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1181 = cast(%var_8088, dtype="bool") /* ty=Tensor[(12, 7, 9), bool] */;
    %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1183 = cast(%var_8088, dtype="float32") /* ty=Tensor[(12, 7, 9), float32] */;
    %1184 = logical_or(%1181, %1182) /* ty=Tensor[(12, 7, 9), bool] */;
    %1185 = log(%1183) /* ty=Tensor[(12, 7, 9), float32] */;
    (%1184, %1185)
  };
  %1186(%var_8111, %var_8112) /* ty=(Tensor[(12, 7, 9), bool], Tensor[(12, 7, 9), float32]) */
}

def @func_11932() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_11930() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_7687() -> (Tensor[(5, 11, 10), float64], Tensor[(990), float32], Tensor[(990), float32], Tensor[(5, 11, 10), bool]) {
  @func_7685() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(990), float32], Tensor[(990), float32], Tensor[(5, 11, 10), bool]) */
}

def @func_9483() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) {
  %1187 = @func_6038() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1188 = @func_5699() /* ty=Tensor[(5, 11, 10), float64] */;
  %1189 = @func_4369() /* ty=Tensor[(5, 11, 10), uint8] */;
  %1190 = %1187.1;
  (%1188, %1189, %1190)
}

def @func_4689() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  %1194 = fn () -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
    %1191 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
    %1192 = @func_2798() /* ty=Tensor[(5, 11, 10), float64] */;
    %1193 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
    (%1191, %1192, %1193)
  };
  %1194() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */
}

def @func_1661() -> Tensor[(5, 11, 10), float64] {
  @func_1659() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_6437() -> (Tensor[(5, 11, 10), float64],) {
  %1195 = @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1196 = %1195.1;
  (%1196,)
}

def @func_12915() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  %1197 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1198 = @func_214() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
  %1199 = %1197.1;
  %1200 = %1198.0;
  (%1199, %1200)
}

def @func_3938() -> Tensor[(5, 11, 10), float64] {
  @func_2933() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_9833() -> (Tensor[(5, 11, 10), float32],) {
  %1203 = fn () -> (Tensor[(5, 11, 10), float32],) {
    %1201 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
    %1202 = %1201.2;
    (%1202,)
  };
  %1203() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_8585() -> (Tensor[(5, 11, 10), float32],) {
  %1204 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1205 = %1204.0;
  (%1205,)
}

def @func_571() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_215() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
  %1219 = fn () -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) {
    %1206 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %1207 = %1206.0;
    %1208 = cast(%1207, dtype="float32") /* ty=Tensor[(5, 11, 10), float32] */;
    %1209 = reshape(%1208, newshape=[5, 11, 10]) /* ty=Tensor[(5, 11, 10), float32] */;
    %1210 = @func_150(%1209) /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %1211 = %1210.0;
    %1212 = cast(%1207, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
    %1213 = shape_of(%1211, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1214 = cast(%1211, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
    %1215 = dyn.reshape(%1212, %1213, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1216 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %1217 = logical_or(%1214, %1215) /* ty=Tensor[(5, 11, 10), bool] */;
    %1218 = %1216.0;
    (%1217, %1218)
  };
  %1219() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */
}

def @func_15592() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_15590() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_11122() -> (Tensor[(5, 11, 10), uint8],) {
  %1222 = fn () -> (Tensor[(5, 11, 10), uint8],) {
    %1220 = @func_9483() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
    %1221 = %1220.1;
    (%1221,)
  };
  %1222() /* ty=(Tensor[(5, 11, 10), uint8],) */
}

def @func_15426() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_15424() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_3125() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %1226 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
    %1223 = @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %1224 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
    %1225 = %1223.0;
    (%1224, %1225)
  };
  %1226() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */
}

def @func_4065() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_4063() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_10221() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) {
  %1227 = @func_8203() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8]) */;
  %1228 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  %1229 = %1227.1;
  (%1228, %1229)
}

def @func_11540() -> Tensor[(5, 11, 10), float64] {
  %1230 = @func_10649() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1230.0
}

def @func_6227(%var_6224: Tensor[(990), float32]) -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  %1231 = cast(%var_6224, dtype="float32") /* ty=Tensor[(990), float32] */;
  %1232 = cast(%var_6224, dtype="float32") /* ty=Tensor[(990), float32] */;
  %1233 = reshape(%1231, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %1234 = reshape(%1232, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %1235 = @func_4270(%1233, %1234) /* ty=(Tensor[(9, 10, 11), float32],) */;
  %1236 = @func_5742() /* ty=Tensor[(5, 11, 10), int16] */;
  %1237 = @func_5054() /* ty=Tensor[(5, 11, 10), float32] */;
  %1238 = %1235.0;
  (%1236, %1237, %1238, %var_6224)
}

def @func_2085() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) {
  @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */
}

def @func_3224() -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
  %1242 = fn () -> (Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) {
    %1239 = @func_2778() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1240 = @func_1491() /* ty=Tensor[(5, 11, 10), int16] */;
    %1241 = %1239.0;
    (%1240, %1241)
  };
  %1242() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */
}

def @func_11027() -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  @func_11025() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */
}

def @func_9401(%var_9399: Tensor[(11, 3, 11), uint16], %var_9400: Tensor[(18), int8]) -> (Tensor[(11, 3, 11), float32], Tensor[(5, 11, 10), float32], Tensor[(18), int8], Tensor[(5, 11, 10), float64]) {
  %1256 = fn (%var_9376: Tensor[(11, 3, 11), uint16], %var_9385: Tensor[(18), int8]) -> (Tensor[(11, 3, 11), float32], Tensor[(5, 11, 10), float32], Tensor[(18), int8], Tensor[(5, 11, 10), float64]) {
    %1243 = cast(meta[relay.Constant][37] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1244 = cast(%var_9376, dtype="uint16") /* ty=Tensor[(11, 3, 11), uint16] */;
    %1245 = minimum(%1243, %1244) /* ty=Tensor[(11, 3, 11), uint16] */;
    %1246 = cast(%1245, dtype="float32") /* ty=Tensor[(11, 3, 11), float32] */;
    %1247 = cast(%var_9385, dtype="int8") /* ty=Tensor[(18), int8] */;
    %1248 = cast(%var_9385, dtype="int8") /* ty=Tensor[(18), int8] */;
    %1249 = reshape(%1247, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int8] */;
    %1250 = reshape(%1248, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int8] */;
    %1251 = @func_9202(%1249, %1250) /* ty=(Tensor[(2, 3, 3), bool], Tensor[(5, 11, 10), float32]) */;
    %1252 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
    %1253 = cosh(%1246) /* ty=Tensor[(11, 3, 11), float32] */;
    %1254 = %1251.1;
    %1255 = %1252.1;
    (%1253, %1254, %var_9385, %1255)
  };
  %1256(%var_9399, %var_9400) /* ty=(Tensor[(11, 3, 11), float32], Tensor[(5, 11, 10), float32], Tensor[(18), int8], Tensor[(5, 11, 10), float64]) */
}

def @func_5031() -> (Tensor[(5, 11, 10), bool],) {
  @func_5029() /* ty=(Tensor[(5, 11, 10), bool],) */
}

def @func_923() -> (Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) {
  %1257 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
  %1258 = %1257.2;
  %1259 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 11, 10), float32] */, dtype="uint8") /* ty=Tensor[(5, 11, 10), uint8] */;
  %1260 = shape_of(%1258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1261 = cast(%1258, dtype="uint8") /* ty=Tensor[(5, 11, 10), uint8] */;
  %1262 = dyn.reshape(%1259, %1260, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1263 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1264 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
  %1265 = bitwise_and(%1261, %1262) /* ty=Tensor[(5, 11, 10), uint8] */;
  %1266 = %1263.0;
  %1267 = %1264.0;
  (%1265, %1266, %1267)
}

def @func_1785() -> (Tensor[(5, 11, 10), float32],) {
  @func_1783() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_11343() -> Tensor[(5, 11, 10), int16] {
  %1269 = fn () -> Tensor[(5, 11, 10), int16] {
    %1268 = @func_3223() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
    %1268.0
  };
  %1269() /* ty=Tensor[(5, 11, 10), int16] */
}

def @func_16738() -> (Tensor[(5, 11, 10), float32],) {
  @func_16736() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_16345() -> (Tensor[(5, 11, 10), uint16],) {
  %1272 = fn () -> (Tensor[(5, 11, 10), uint16],) {
    %1270 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %1271 = %1270.1;
    (%1271,)
  };
  %1272() /* ty=(Tensor[(5, 11, 10), uint16],) */
}

def @func_15491() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1273 = @func_5011() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1274 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1275 = %1273.0;
  %1276 = @func_2798() /* ty=Tensor[(5, 11, 10), float64] */;
  %1277 = %1274.1;
  (%1275, %1276, %1277)
}

def @func_1327() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */
}

def @func_584() -> (Tensor[(5, 11, 10), float64],) {
  %1278 = @func_569() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
  %1279 = %1278.3;
  (%1279,)
}

def @func_5699() -> Tensor[(5, 11, 10), float64] {
  @func_2235() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_3064() -> Tensor[(5, 11, 10), uint8] {
  %1281 = fn () -> Tensor[(5, 11, 10), uint8] {
    %1280 = @func_2083() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64]) */;
    %1280.3
  };
  %1281() /* ty=Tensor[(5, 11, 10), uint8] */
}

def @func_7126() -> (Tensor[(5, 11, 10), float32],) {
  %1284 = fn () -> (Tensor[(5, 11, 10), float32],) {
    %1282 = @func_84() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %1283 = %1282.0;
    (%1283,)
  };
  %1284() /* ty=(Tensor[(5, 11, 10), float32],) */
}

def @func_1541(%var_1540: Tensor[(5, 11, 10), float64]) -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16]) {
  %1294 = fn (%var_1512: Tensor[(5, 11, 10), float64]) -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16]) {
    %1285 = @func_989() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %1286 = %1285.0;
    %1287 = cast(%var_1512, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
    %1288 = shape_of(%1286, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1289 = cast(%1286, dtype="bool") /* ty=Tensor[(5, 11, 10), bool] */;
    %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1291 = @func_281() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %1292 = greater_equal(%1289, %1290) /* ty=Tensor[(5, 11, 10), bool] */;
    %1293 = %1291.1;
    (%1292, %1293)
  };
  %1294(%var_1540) /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16]) */
}

def @func_7349() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  @func_7347() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) */
}

def @func_9137() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) {
  @func_9135() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */
}

def @func_10957() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %1299 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
    %1295 = @func_3747() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %1296 = @func_2124() /* ty=(Tensor[(5, 11, 10), uint16], Tensor[(5, 11, 10), float32]) */;
    %1297 = %1295.1;
    %1298 = %1296.1;
    (%1297, %1298)
  };
  %1299() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */
}

def @func_2935() -> Tensor[(5, 11, 10), float64] {
  @func_2933() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_11069() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(60), float32], Tensor[(5, 11, 10), float32]) {
  %1309 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(60), float32], Tensor[(5, 11, 10), float32]) {
    %1300 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %1301 = cast(meta[relay.Constant][39] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %1302 = reshape(%1301, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float32] */;
    %1303 = @func_5933(%1302) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(3, 10, 2), int32], Tensor[(3, 10, 2), uint64], Tensor[(3, 10, 2), float32]) */;
    %1304 = %1300.1;
    %1305 = @func_6635() /* ty=Tensor[(5, 11, 10), bool] */;
    %1306 = @func_10492() /* ty=Tensor[(5, 11, 10), float64] */;
    %1307 = %1303.3;
    %1308 = @func_10293() /* ty=Tensor[(5, 11, 10), float32] */;
    (%1304, %1305, %1306, %1307, meta[relay.Constant][39] /* ty=Tensor[(60), float32] */, %1308)
  };
  %1309() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(60), float32], Tensor[(5, 11, 10), float32]) */
}

def @func_15146() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1313 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %1310 = @func_10649() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1311 = @func_14579() /* ty=Tensor[(5, 11, 10), float64] */;
    %1312 = %1310.0;
    (%1311, %1312)
  };
  %1313() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_15942() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1318 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
    %1314 = @func_1368() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %1315 = @func_12228() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %1316 = %1314.0;
    %1317 = %1315.0;
    (%1316, %1317)
  };
  %1318() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_16131() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  %1319 = @func_3124() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1320 = @func_15145() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1321 = @func_2778() /* ty=(Tensor[(5, 11, 10), float64],) */;
  %1322 = @func_14568() /* ty=Tensor[(5, 11, 10), float64] */;
  %1323 = %1319.1;
  %1324 = %1320.0;
  %1325 = %1321.0;
  (%1322, %1323, %1324, %1325)
}

def @func_8165(%var_8163: Tensor[(9, 1, 1), int64], %var_8164: Tensor[(9, 15, 12), int64]) -> (Tensor[(9, 15, 12), int64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_8161(%var_8163, %var_8164) /* ty=(Tensor[(9, 15, 12), int64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_15928() -> (Tensor[(5, 11, 10), float32],) {
  %1326 = @func_7002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1327 = %1326.1;
  (%1327,)
}

def @func_13225() -> Tensor[(5, 11, 10), float32] {
  @func_13223() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_4505() -> (Tensor[(5, 11, 10), float64],) {
  %1328 = @func_1963() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1328,)
}

def @func_16714() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
  %1333 = fn () -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) {
    %1329 = @func_10956() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
    %1330 = @func_3469() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32]) */;
    %1331 = %1329.0;
    %1332 = %1330.1;
    (%1331, %1332)
  };
  %1333() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */
}

def @func_2731() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) {
  %1343 = fn () -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) {
    %1334 = @func_1325() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
    %1335 = @func_337() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1336 = cast(meta[relay.Constant][40] /* ty=Tensor[(195, 1), float64] */, dtype="float64") /* ty=Tensor[(195, 1), float64] */;
    %1337 = reshape(%1336, newshape=[13, 1, 15]) /* ty=Tensor[(13, 1, 15), float64] */;
    %1338 = @func_2568(%1337) /* ty=(Tensor[(13, 1, 15), float64], Tensor[(5, 11, 10), bool]) */;
    %1339 = %1334.1;
    %1340 = %1335.0;
    %1341 = @func_1115() /* ty=Tensor[(5, 11, 10), float64] */;
    %1342 = %1338.0;
    (%1339, %1340, %1341, %1342, meta[relay.Constant][40] /* ty=Tensor[(195, 1), float64] */)
  };
  %1343() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(13, 1, 15), float64], Tensor[(195, 1), float64]) */
}

def @func_14570() -> Tensor[(5, 11, 10), float64] {
  @func_14568() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_13639(%var_13595: Tensor[(630), uint8]) -> (Tensor[(5, 11, 10), float64], Tensor[(15, 7, 6), uint8], Tensor[(630), uint8], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) {
  %1344 = @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
  %1345 = cast(%var_13595, dtype="uint8") /* ty=Tensor[(630), uint8] */;
  %1346 = reshape(%1345, newshape=[15, 7, 6]) /* ty=Tensor[(15, 7, 6), uint8] */;
  %1347 = @func_10127(%1346) /* ty=(Tensor[(15, 7, 6), uint8],) */;
  %1348 = %1344.1;
  %1349 = %1347.0;
  %1350 = @func_7194() /* ty=Tensor[(5, 11, 10), int16] */;
  %1351 = @func_4120() /* ty=Tensor[(5, 11, 10), bool] */;
  (%1348, %1349, %var_13595, %1350, %1351)
}

def @func_1783() -> (Tensor[(5, 11, 10), float32],) {
  %1352 = @func_1209() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */;
  %1353 = %1352.2;
  (%1353,)
}

def @func_11640(%var_11639: Tensor[(21), float32]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(5, 11, 10), float64]) {
  %1362 = fn (%var_11582: Tensor[(21), float32]) -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(5, 11, 10), float64]) {
    %1354 = @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */;
    %1355 = cast(%var_11582, dtype="float32") /* ty=Tensor[(21), float32] */;
    %1356 = reshape(%1355, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %1357 = @func_6403(%1356) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(294), float32]) */;
    %1358 = @func_10592() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */;
    %1359 = %1354.0;
    %1360 = %1357.1;
    %1361 = %1358.0;
    (%1359, %1360, %var_11582, %1361)
  };
  %1362(%var_11639) /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64], Tensor[(21), float32], Tensor[(5, 11, 10), float64]) */
}

def @func_12138() -> Tensor[(5, 11, 10), float64] {
  @func_12136() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_4581() -> Tensor[(5, 11, 10), float64] {
  @func_1659() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_10797(%var_10795: Tensor[(756), bool]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(12, 7, 9), float32], Tensor[(756), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) {
  @func_10794(%var_10795) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(12, 7, 9), float32], Tensor[(756), bool], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16]) */
}

def @func_7483() -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
  %1367 = fn () -> (Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) {
    %1363 = @func_2002() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */;
    %1364 = @func_7180() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1365 = %1363.0;
    %1366 = %1364.0;
    (%1365, %1366)
  };
  %1367() /* ty=(Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float64]) */
}

def @func_5936(%var_5934: Tensor[(3, 10, 2), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(3, 10, 2), int32], Tensor[(3, 10, 2), uint64], Tensor[(3, 10, 2), float32]) {
  @func_5933(%var_5934) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32], Tensor[(21), float32], Tensor[(294), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(3, 10, 2), int32], Tensor[(3, 10, 2), uint64], Tensor[(3, 10, 2), float32]) */
}

def @func_6881(%var_6879: Tensor[(5, 135), int8]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 135), int8], Tensor[(5, 11, 10), float32]) {
  @func_6878(%var_6879) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 135), int8], Tensor[(5, 11, 10), float32]) */
}

def @func_13380(%var_13379: Tensor[(294), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(14, 3, 7), bool], Tensor[(21), float32], Tensor[(294), float32]) {
  %1382 = fn (%var_13376: Tensor[(294), float32]) -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(14, 3, 7), bool], Tensor[(21), float32], Tensor[(294), float32]) {
    %1368 = @func_6437() /* ty=(Tensor[(5, 11, 10), float64],) */;
    %1369 = @func_5644() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float64]) */;
    %1370 = @func_6495() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(11, 9, 12), int32], Tensor[(5, 11, 10), bool], Tensor[(5, 11, 10), float32]) */;
    %1371 = cast(meta[relay.Constant][41] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %1372 = cast(%var_13376, dtype="float32") /* ty=Tensor[(294), float32] */;
    %1373 = reshape(%1371, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), float32] */;
    %1374 = reshape(%1372, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
    %1375 = @func_1380(%1373, %1374) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(5, 11, 10), float64], Tensor[(550, 1), float32]) */;
    %1376 = %1368.0;
    %1377 = %1369.0;
    %1378 = @func_10809() /* ty=Tensor[(5, 11, 10), float32] */;
    %1379 = %1370.0;
    %1380 = @func_7249() /* ty=Tensor[(5, 11, 10), float64] */;
    %1381 = %1375.0;
    (%1376, %1377, %1378, %1379, %1380, %1381, meta[relay.Constant][41] /* ty=Tensor[(21), float32] */, %var_13376)
  };
  %1382(%var_13379) /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(14, 3, 7), bool], Tensor[(21), float32], Tensor[(294), float32]) */
}

def @func_12917() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) {
  @func_12915() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), bool]) */
}

def @func_4213(%var_4211: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), uint64]) {
  @func_4210(%var_4211) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), uint64]) */
}

def @func_10809() -> Tensor[(5, 11, 10), float32] {
  %1383 = @func_1106() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float32]) */;
  %1383.1
}

def @func_11389() -> Tensor[(5, 11, 10), float32] {
  %1385 = fn () -> Tensor[(5, 11, 10), float32] {
    %1384 = @func_1229() /* ty=(Tensor[(5, 11, 10), float32],) */;
    %1384.0
  };
  %1385() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_10295() -> Tensor[(5, 11, 10), float32] {
  @func_10293() /* ty=Tensor[(5, 11, 10), float32] */
}

def @func_12615() -> Tensor[(5, 11, 10), float64] {
  @func_12613() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_5607() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) {
  @func_5605() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64]) */
}

def @func_6755() -> (Tensor[(5, 11, 10), float64],) {
  @func_6753() /* ty=(Tensor[(5, 11, 10), float64],) */
}

def @func_7347() -> (Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), bool]) {
  %1386 = @func_923() /* ty=(Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float32]) */;
  %1387 = @func_6850() /* ty=(Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), bool]) */;
  %1388 = @func_2235() /* ty=Tensor[(5, 11, 10), float64] */;
  %1389 = %1386.0;
  %1390 = @func_3938() /* ty=Tensor[(5, 11, 10), float64] */;
  %1391 = %1387.1;
  (%1388, %1389, %1390, %1391)
}

def @func_10323() -> (Tensor[(5, 11, 10), float64],) {
  %1392 = @func_5183() /* ty=Tensor[(5, 11, 10), float64] */;
  (%1392,)
}

def @func_7250() -> Tensor[(5, 11, 10), float64] {
  %1394 = fn () -> Tensor[(5, 11, 10), float64] {
    %1393 = @func_1049() /* ty=(Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), float64], Tensor[(5, 11, 10), uint8], Tensor[(5, 11, 10), float32]) */;
    %1393.0
  };
  %1394() /* ty=Tensor[(5, 11, 10), float64] */
}

def @func_4350() -> (Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) {
  @func_4348() /* ty=(Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), int16], Tensor[(5, 11, 10), float32], Tensor[(5, 11, 10), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen670/build/output.py:5431: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen670/build/output.py", line 5436, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cos_cast_cast_reshape_minimum_kernel0(signed char* __restrict__ T_minimum, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1500) {
    T_minimum[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = min(((signed char)__cosf(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])), ((signed char)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]));
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_8452() -> (Tensor[(6, 6, 14), float64], Tensor[(910), int64], Tensor[(14, 5, 13), float64], Tensor[(1, 594), float64], Tensor[(6, 11, 9), float64]) {
  %0 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %1 = @func_7131() /* ty=(Tensor[(910), int64],) */;
  %2 = @func_7745() /* ty=(Tensor[(14, 5, 13), float64],) */;
  %3 = @func_914() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */;
  %4 = %3.0;
  %5 = cast(%4, dtype="float64") /* ty=Tensor[(1, 594), float64] */;
  %6 = %0.0;
  %7 = %1.0;
  %8 = %2.0;
  %9 = log10(%5) /* ty=Tensor[(1, 594), float64] */;
  %10 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
  (%6, %7, %8, %9, %10)
}

def @func_4433() -> Tensor[(14, 5, 13), bool] {
  @func_3407() /* ty=Tensor[(14, 5, 13), bool] */
}

def @func_7622() -> Tensor[(6, 6, 14), float32] {
  %11 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %11.1
}

def @func_8964() -> (Tensor[(6, 6, 14), float32], Tensor[(504), float32]) {
  %12 = @func_8248() /* ty=(Tensor[(504), float32],) */;
  %13 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %14 = %12.0;
  (%13, %14)
}

def @func_7690(%var_7681: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), float64],) {
  %15 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %16 = cast(%var_7681, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%15, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %20 = floor_mod(%18, %19) /* ty=Tensor[(6, 6, 14), float64] */;
  (%20,)
}

def @func_2331(%var_2309: Tensor[(6, 11, 9), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), bool]) {
  %21 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %22 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %23 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %24 = %23.2;
  %25 = cast(%var_2309, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%24, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %29 = %21.1;
  %30 = %22.0;
  %31 = less_equal(%27, %28) /* ty=Tensor[(6, 11, 9), bool] */;
  (%29, %30, %31)
}

def @func_2990(%var_2982: Tensor[(15, 10, 10), float32]) -> (Tensor[(15, 10, 10), float32], Tensor[(6, 6, 14), float32], Tensor[(594), float64]) {
  %32 = cast(%var_2982, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %34 = reshape(%33, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %35 = @func_2331(%34) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), bool]) */;
  %36 = sinh(%32) /* ty=Tensor[(15, 10, 10), float32] */;
  %37 = %35.0;
  (%36, %37, meta[relay.Constant][0] /* ty=Tensor[(594), float64] */)
}

def @func_6278(%var_6246: Tensor[(12, 48), float64], %var_6263: Tensor[(4158), float64]) -> (Tensor[(14, 5, 13), bool], Tensor[(6, 11, 9), float64], Tensor[(576), float64], Tensor[(770), float64], Tensor[(12, 48), float64], Tensor[(6, 6, 14), float32], Tensor[(4158), bool], Tensor[(576), float64], Tensor[(2925), bool]) {
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
  %39 = cast(%var_6246, dtype="float64") /* ty=Tensor[(12, 48), float64] */;
  %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(4158), float64] */, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %41 = reshape(%38, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float64] */;
  %42 = reshape(%39, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %43 = reshape(%40, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %44 = @func_1387(%41, %42, %43) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */;
  %45 = cast(%var_6263, dtype="bool") /* ty=Tensor[(4158), bool] */;
  %46 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(4158), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(4158), float64] */, dtype="bool") /* ty=Tensor[(4158), bool] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?), bool] */;
  %49 = logical_and(%47, %48) /* ty=Tensor[(4158), bool] */;
  %50 = cast(%49, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %52 = reshape(%50, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %53 = reshape(%51, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
  %54 = @func_3579(%52, %53) /* ty=(Tensor[(6, 6, 14), int32], Tensor[(576), float64], Tensor[(4158), float64], bool, Tensor[(2925), bool], Tensor[(594), float64], Tensor[(150, 10), float32]) */;
  %55 = @func_3407() /* ty=Tensor[(14, 5, 13), bool] */;
  %56 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
  %57 = %44.2;
  %58 = @func_3136() /* ty=Tensor[(6, 6, 14), float32] */;
  %59 = %54.1;
  (%55, %56, %57, meta[relay.Constant][1] /* ty=Tensor[(770), float64] */, %var_6246, %58, %49, %59, meta[relay.Constant][3] /* ty=Tensor[(2925), bool] */)
}

def @func_792(%var_751: Tensor[(7, 594), float64], %var_767: Tensor[(7, 594), float64]) -> (Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) {
  %60 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %61 = %60.3;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(1, 594), float64] */;
  %63 = reshape(%62, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %64 = cast(%61, dtype="bool") /* ty=Tensor[(1, 594), bool] */;
  %65 = cast(%var_767, dtype="bool") /* ty=Tensor[(7, 594), bool] */;
  %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %67 = reshape(%66, newshape=[910]) /* ty=Tensor[(910), int64] */;
  %68 = @func_706(%67) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %69 = cast(%61, dtype="bool") /* ty=Tensor[(1, 594), bool] */;
  %70 = cast(%var_751, dtype="bool") /* ty=Tensor[(7, 594), bool] */;
  %71 = less_equal(%69, %70) /* ty=Tensor[(7, 594), bool] */;
  %72 = cast(%var_767, dtype="int32") /* ty=Tensor[(7, 594), int32] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(2), int32] */;
  %74 = cast(%71, dtype="int32") /* ty=Tensor[(7, 594), int32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %76 = @func_228(%63) /* ty=Tensor[(6, 11, 9), float64] */;
  %77 = equal(%64, %65) /* ty=Tensor[(7, 594), bool] */;
  %78 = %68.1;
  %79 = add(%74, %75) /* ty=Tensor[(7, 594), int32] */;
  (%76, %77, %78, meta[relay.Constant][4] /* ty=Tensor[(910), int64] */, %79)
}

def @func_5487() -> (Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), uint8], bool) {
  %80 = @func_4772() /* ty=(Tensor[(6, 11, 9), float64],) */;
  %81 = @func_5025() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) */;
  %82 = @func_2187() /* ty=Tensor[(6, 6, 14), float64] */;
  %83 = %80.0;
  %84 = @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */;
  %85 = %81.3;
  (%82, %83, %84, %85)
}

def @func_2569(%var_2495: bool, %var_2496: Tensor[(15, 13, 15), bool]) -> (Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) {
  %86 = cast(%var_2495, dtype="bool") /* ty=bool */;
  %87 = cast(%var_2496, dtype="bool") /* ty=Tensor[(15, 13, 15), bool] */;
  %88 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %89 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %90 = %89.4;
  %91 = cast(%var_2495, dtype="bool") /* ty=bool */;
  %92 = cast(%90, dtype="bool") /* ty=Tensor[(66, 9), bool] */;
  %93 = not_equal(%91, %92) /* ty=Tensor[(66, 9), bool] */;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %95 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %96 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %97 = logical_and(%86, %87) /* ty=Tensor[(15, 13, 15), bool] */;
  %98 = %88.4;
  %99 = atan(%94) /* ty=Tensor[(66, 9), float32] */;
  %100 = %95.3;
  %101 = %96.3;
  (%97, %98, %99, %100, %101)
}

def @func_2729(%var_2716: Tensor[(6, 6, 14), float32]) -> Tensor[(6, 6, 14), uint64] {
  %102 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %103 = %102.1;
  %104 = cast(%var_2716, dtype="uint64") /* ty=Tensor[(6, 6, 14), uint64] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="uint64") /* ty=Tensor[(6, 6, 14), uint64] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%106, %107) /* ty=Tensor[(6, 6, 14), uint64] */
}

def @func_3500(%var_3474: Tensor[(66, 9), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(66, 9), uint16], Tensor[(66, 9), float64]) {
  %108 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
  %109 = cast(%108, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %110 = @func_3212() /* ty=Tensor[(66, 9), float64] */;
  %111 = cast(%var_3474, dtype="uint16") /* ty=Tensor[(66, 9), uint16] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %113 = cast(%110, dtype="uint16") /* ty=Tensor[(66, 9), uint16] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %115 = cast(%var_3474, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
  %116 = log(%109) /* ty=Tensor[(6, 6, 14), float32] */;
  %117 = @func_2187() /* ty=Tensor[(6, 6, 14), float64] */;
  %118 = right_shift(%113, %114) /* ty=Tensor[(66, 9), uint16] */;
  %119 = acosh(%115) /* ty=Tensor[(66, 9), float64] */;
  (%116, %117, %118, %119)
}

def @func_4346() -> Tensor[(6, 11, 9), float64] {
  %120 = @func_4059() /* ty=Tensor[(6, 11, 9), float64] */;
  %121 = cast(%120, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %122 = sigmoid(%121) /* ty=Tensor[(6, 11, 9), float32] */;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  sqrt(%123) /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_46(%var_11: Tensor[(14, 5, 13), int64], %var_12: Tensor[(14, 5, 13), int64]) -> Tensor[(14, 5, 13), bool] {
  %124 = cast(%var_12, dtype="bool") /* ty=Tensor[(14, 5, 13), bool] */;
  %125 = shape_of(%var_11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%var_11, dtype="bool") /* ty=Tensor[(14, 5, 13), bool] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%126, %127) /* ty=Tensor[(14, 5, 13), bool] */
}

def @func_4002(%var_3995: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), bool],) {
  %128 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %129 = %128.1;
  %130 = cast(%var_3995, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%129, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %134 = equal(%132, %133) /* ty=Tensor[(6, 6, 14), bool] */;
  (%134,)
}

def @func_4819(%var_4808: int8, %var_4809: Tensor[(528), int8]) -> (Tensor[(6, 6, 14), int32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) {
  %135 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %136 = cast(%var_4808, dtype="int8") /* ty=int8 */;
  %137 = cast(%var_4809, dtype="int8") /* ty=Tensor[(528), int8] */;
  %138 = reshape(%136, newshape=[]) /* ty=int8 */;
  %139 = reshape(%137, newshape=[11, 8, 6]) /* ty=Tensor[(11, 8, 6), int8] */;
  %140 = %135.0;
  %141 = @func_1475(%138, %139) /* ty=Tensor[(11, 8, 6), bool] */;
  (%140, %141, %var_4808, %var_4809)
}

def @func_9319() -> (Tensor[(594), float64],) {
  %142 = @func_8549() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), bool], Tensor[(594), float64]) */;
  %143 = %142.2;
  (%143,)
}

def @func_4736() -> (Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool]) {
  %144 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %145 = @func_2647() /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), bool]) */;
  %146 = %144.0;
  %147 = %145.1;
  (%146, %147)
}

def @func_8570() -> Tensor[(6, 6, 14), float64] {
  %148 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %148.0
}

def @func_8911() -> (Tensor[(594), float32],) {
  %149 = @func_3161() /* ty=Tensor[(594), float32] */;
  (%149,)
}

def @func_2148() -> (Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) {
  %150 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %152 = cast(meta[relay.Constant][5] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %153 = cast(meta[relay.Constant][5] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %154 = reshape(%152, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %155 = reshape(%153, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %156 = cast(meta[relay.Constant][6] /* ty=Tensor[(66, 9), float64] */, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
  %157 = reshape(%156, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %158 = cast(%150, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %159 = reshape(%158, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %160 = @func_1233(%159) /* ty=(Tensor[(6, 6, 14), int32],) */;
  %161 = sin(%151) /* ty=Tensor[(6, 6, 14), float64] */;
  %162 = @func_46(%154, %155) /* ty=Tensor[(14, 5, 13), bool] */;
  %163 = @func_228(%157) /* ty=Tensor[(6, 11, 9), float64] */;
  %164 = %160.0;
  (%161, %162, meta[relay.Constant][5] /* ty=Tensor[(910), int64] */, %163, meta[relay.Constant][6] /* ty=Tensor[(66, 9), float64] */, %164)
}

def @func_4302() -> (Tensor[(6, 6, 14), float64],) {
  %165 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %166 = %165.1;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %168 = atan(%167) /* ty=Tensor[(6, 6, 14), float64] */;
  (%168,)
}

def @func_3670(%var_3655: int8, %var_3656: Tensor[(528), int8]) -> (Tensor[(6, 6, 14), float64], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) {
  %169 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %170 = cast(%var_3655, dtype="int8") /* ty=int8 */;
  %171 = cast(%var_3656, dtype="int8") /* ty=Tensor[(528), int8] */;
  %172 = reshape(%170, newshape=[]) /* ty=int8 */;
  %173 = reshape(%171, newshape=[11, 8, 6]) /* ty=Tensor[(11, 8, 6), int8] */;
  %174 = %169.4;
  %175 = @func_1475(%172, %173) /* ty=Tensor[(11, 8, 6), bool] */;
  (%174, %175, %var_3655, %var_3656)
}

def @func_7516(%var_7497: Tensor[(9, 16, 14), uint8], %var_7498: Tensor[(9, 16, 14), uint8]) -> (Tensor[(9, 16, 14), float32],) {
  %176 = cast(%var_7498, dtype="uint8") /* ty=Tensor[(9, 16, 14), uint8] */;
  %177 = shape_of(%var_7497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%var_7497, dtype="uint8") /* ty=Tensor[(9, 16, 14), uint8] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %180 = bitwise_or(%178, %179) /* ty=Tensor[(9, 16, 14), uint8] */;
  %181 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 16, 14), uint8] */, dtype="float32") /* ty=Tensor[(9, 16, 14), float32] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%180, dtype="float32") /* ty=Tensor[(9, 16, 14), float32] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %185 = divide(%183, %184) /* ty=Tensor[(9, 16, 14), float32] */;
  (%185,)
}

def @func_7351() -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) {
  %186 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %187 = @func_7195() /* ty=Tensor[(6, 11, 9), float64] */;
  %188 = %186.0;
  (%187, %188)
}

def @func_3286() -> (Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) {
  %189 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %190 = @func_2781() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool]) */;
  %191 = %189.5;
  %192 = %190.0;
  (%191, %192)
}

def @func_9639() -> (Tensor[(6, 6, 14), float64], Tensor[(770), float64], Tensor[(770), float64]) {
  %193 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %194 = cast(meta[relay.Constant][8] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
  %195 = reshape(%194, newshape=[770]) /* ty=Tensor[(770), float64] */;
  %196 = @func_1914(%195) /* ty=(Tensor[(770), float64], Tensor[(770), uint32]) */;
  %197 = %193.0;
  %198 = %196.0;
  (%197, %198, meta[relay.Constant][8] /* ty=Tensor[(770), float64] */)
}

def @func_5085() -> (Tensor[(6, 11, 9), float64],) {
  %199 = @func_5070() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) */;
  %200 = %199.0;
  (%200,)
}

def @func_4699() -> (Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) {
  %201 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %202 = cast(meta[relay.Constant][9] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %203 = reshape(%202, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %204 = @func_1233(%203) /* ty=(Tensor[(6, 6, 14), int32],) */;
  %205 = %201.2;
  %206 = %204.0;
  (%205, %206, meta[relay.Constant][9] /* ty=Tensor[(504), float32] */)
}

def @func_4019() -> (Tensor[(6, 11, 9), float64],) {
  %207 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %208 = %207.3;
  (%208,)
}

def @func_7388(%var_7357: float32) -> (Tensor[(?, 14, 12), float32],) {
  %209 = cast(%var_7357, dtype="float32") /* ty=float32 */;
  %210 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
  %211 = power(%209, %210) /* ty=Tensor[(1, 14, 12), float32] */;
  %212 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
  %213 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%211, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %216 = maximum(%214, %215) /* ty=Tensor[(?, 14, 12), float32] */;
  (%216,)
}

def @func_7954() -> (Tensor[(6, 6, 14), uint8], Tensor[(910), int64]) {
  %217 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
  %218 = @func_7131() /* ty=(Tensor[(910), int64],) */;
  %219 = %217.1;
  %220 = %218.0;
  (%219, %220)
}

def @func_5627() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), int8], Tensor[(6, 6, 14), float32]) {
  %221 = @func_1247() /* ty=Tensor[(6, 6, 14), float32] */;
  %222 = cast(%221, dtype="uint8") /* ty=Tensor[(6, 6, 14), uint8] */;
  %223 = reshape(%222, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), uint8] */;
  %224 = @func_3806(%223) /* ty=(Tensor[(6, 6, 14), int8],) */;
  %225 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %226 = %224.0;
  %227 = %225.0;
  (%221, %226, %227)
}

def @func_7940() -> Tensor[(6, 6, 14), int32] {
  %228 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %228.0
}

def @func_5847() -> (Tensor[(594), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), uint64], Tensor[(6, 6, 14), uint64], int8, Tensor[(128), uint8], Tensor[(256), uint8], int8, Tensor[(4158), float64]) {
  %229 = @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */;
  %230 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %231 = %230.0;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %233 = reshape(%232, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %234 = cast(%231, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %235 = reshape(%234, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %236 = cast(meta[relay.Constant][11] /* ty=Tensor[(128), uint8] */, dtype="uint8") /* ty=Tensor[(128), uint8] */;
  %237 = cast(meta[relay.Constant][12] /* ty=Tensor[(256), uint8] */, dtype="uint8") /* ty=Tensor[(256), uint8] */;
  %238 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %239 = cast(meta[relay.Constant][14] /* ty=Tensor[(4158), float64] */, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %240 = reshape(%236, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), uint8] */;
  %241 = reshape(%237, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), uint8] */;
  %242 = reshape(%238, newshape=[]) /* ty=int8 */;
  %243 = reshape(%239, newshape=[189, 22]) /* ty=Tensor[(189, 22), float64] */;
  %244 = @func_4963(%240, %241, %242, %243) /* ty=(Tensor[(16, 2, 8), float64], Tensor[(6, 6, 14), float32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(189, 22), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %245 = %229.1;
  %246 = @func_2729(%233) /* ty=Tensor[(6, 6, 14), uint64] */;
  %247 = @func_2729(%235) /* ty=Tensor[(6, 6, 14), uint64] */;
  %248 = %244.3;
  (%245, %231, %246, %247, %248, meta[relay.Constant][11] /* ty=Tensor[(128), uint8] */, meta[relay.Constant][12] /* ty=Tensor[(256), uint8] */, meta[relay.Constant][13] /* ty=int8 */, meta[relay.Constant][14] /* ty=Tensor[(4158), float64] */)
}

def @func_5324() -> (Tensor[(6, 11, 9), float32],) {
  %249 = @func_4166() /* ty=(Tensor[(6, 11, 9), float32],) */;
  %250 = %249.0;
  (%250,)
}

def @func_6197() -> Tensor[(594), float64] {
  @func_4136() /* ty=Tensor[(594), float64] */
}

def @func_6892(%var_6866: Tensor[(66, 9), float64], %var_6878: Tensor[(66, 9), float32]) -> (Tensor[(66, 9), int8], Tensor[(14, 5, 13), bool]) {
  %251 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %252 = %251.4;
  %253 = cast(%var_6866, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(2), int32] */;
  %255 = cast(%252, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %257 = divide(%255, %256) /* ty=Tensor[(66, 9), float32] */;
  %258 = cast(%var_6878, dtype="int8") /* ty=Tensor[(66, 9), int8] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(2), int32] */;
  %260 = cast(%257, dtype="int8") /* ty=Tensor[(66, 9), int8] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %262 = bitwise_xor(%260, %261) /* ty=Tensor[(66, 9), int8] */;
  %263 = @func_4433() /* ty=Tensor[(14, 5, 13), bool] */;
  (%262, %263)
}

def @func_2210() -> (Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) {
  %264 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %265 = @func_914() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */;
  %266 = %264.1;
  %267 = %265.1;
  (%266, %267)
}

def @func_5610() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) {
  %268 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
  %269 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
  (%268, %269)
}

def @func_1475(%var_1470: int8, %var_1471: Tensor[(11, 8, 6), int8]) -> Tensor[(11, 8, 6), bool] {
  %270 = cast(%var_1470, dtype="bool") /* ty=bool */;
  %271 = cast(%var_1471, dtype="bool") /* ty=Tensor[(11, 8, 6), bool] */;
  greater(%270, %271) /* ty=Tensor[(11, 8, 6), bool] */
}

def @func_5334() -> Tensor[(594), float32] {
  %272 = @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */;
  %272.0
}

def @func_1233(%var_1225: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), int32],) {
  %273 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %274 = %273.3;
  %275 = cast(%var_1225, dtype="int32") /* ty=Tensor[(6, 6, 14), int32] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%274, dtype="int32") /* ty=Tensor[(6, 6, 14), int32] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %279 = subtract(%277, %278) /* ty=Tensor[(6, 6, 14), int32] */;
  (%279,)
}

def @func_9120() -> (Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32]) {
  %280 = @func_7821() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
  %281 = %280.0;
  %282 = cast(%281, dtype="float64") /* ty=Tensor[(594), float64] */;
  %283 = @func_4772() /* ty=(Tensor[(6, 11, 9), float64],) */;
  %284 = @func_8651() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %285 = log(%282) /* ty=Tensor[(594), float64] */;
  %286 = @func_7940() /* ty=Tensor[(6, 6, 14), int32] */;
  %287 = %283.0;
  %288 = %284.0;
  (%285, %286, %287, %288)
}

def @func_5750() -> (Tensor[(770), float64], Tensor[(6, 11, 9), float64], Tensor[(14, 5, 13), bool], Tensor[(16, 594), float32], Tensor[(2, 288), float64], Tensor[(6, 11, 9), bool]) {
  %289 = @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
  %290 = %289.1;
  %291 = cast(%290, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  %292 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 288), float64] */, dtype="float64") /* ty=Tensor[(2, 288), float64] */;
  %293 = reshape(%292, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %294 = @func_3102(%293) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(594), float64], Tensor[(1500), float32], Tensor[(16, 594), float32], Tensor[(1584, 6), float64], Tensor[(1188), float64], Tensor[(6, 11, 9), float64], Tensor[(576), float64]) */;
  %295 = @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */;
  %296 = %295.0;
  %297 = cast(%296, dtype="bool") /* ty=Tensor[(594), bool] */;
  %298 = shape_of(%290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%290, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %301 = @func_1779() /* ty=Tensor[(770), float64] */;
  %302 = log(%291) /* ty=Tensor[(6, 11, 9), float64] */;
  %303 = @func_4433() /* ty=Tensor[(14, 5, 13), bool] */;
  %304 = %294.3;
  %305 = less(%299, %300) /* ty=Tensor[(6, 11, 9), bool] */;
  (%301, %302, %303, %304, meta[relay.Constant][15] /* ty=Tensor[(2, 288), float64] */, %305)
}

def @func_5885() -> (Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 6, 14), float32]) {
  %306 = @func_2781() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool]) */;
  %307 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %308 = @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
  %309 = %306.1;
  %310 = %307.2;
  %311 = %308.0;
  (%309, %310, %311)
}

def @func_5200() -> (Tensor[(6, 6, 14), int32], Tensor[(770), float64]) {
  %312 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %313 = @func_2433() /* ty=(Tensor[(770), float64],) */;
  %314 = %312.0;
  %315 = %313.0;
  (%314, %315)
}

def @func_8549() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), bool], Tensor[(594), float64]) {
  %316 = cast(meta[relay.Constant][16] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %317 = reshape(%316, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %318 = @func_2331(%317) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), bool]) */;
  %319 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
  %320 = %318.2;
  (%319, %320, meta[relay.Constant][16] /* ty=Tensor[(594), float64] */)
}

def @func_6610() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32]) {
  %321 = @func_2797() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %322 = @func_5070() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) */;
  %323 = %322.1;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %325 = %321.0;
  %326 = acosh(%324) /* ty=Tensor[(6, 6, 14), float32] */;
  (%325, %326)
}

def @func_8081(%var_8068: Tensor[(6, 8, 2), float32], %var_8069: Tensor[(6, 8, 2), float32]) -> (Tensor[(6, 8, 2), float32], Tensor[(6, 8, 2), uint64]) {
  %327 = cast(%var_8069, dtype="float32") /* ty=Tensor[(6, 8, 2), float32] */;
  %328 = shape_of(%var_8068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_8068, dtype="float32") /* ty=Tensor[(6, 8, 2), float32] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %331 = cast(%var_8069, dtype="uint64") /* ty=Tensor[(6, 8, 2), uint64] */;
  %332 = shape_of(%var_8068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_8068, dtype="uint64") /* ty=Tensor[(6, 8, 2), uint64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %335 = floor_mod(%329, %330) /* ty=Tensor[(6, 8, 2), float32] */;
  %336 = logical_xor(%333, %334) /* ty=Tensor[(6, 8, 2), uint64] */;
  (%335, %336)
}

def @func_892(%var_887: Tensor[(6, 6, 14), float32]) -> Tensor[(6, 6, 14), bool] {
  %337 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %338 = %337.1;
  %339 = cast(%var_887, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%341, %342) /* ty=Tensor[(6, 6, 14), bool] */
}

def @func_6543(%var_6500: Tensor[(4, 15, 3), float32], %var_6514: Tensor[(1188), float64]) -> (Tensor[(4, 15, 3), float32], Tensor[(16, 594), float32], Tensor[(9504), float64], Tensor[(1188), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), uint64]) {
  %343 = cast(%var_6500, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
  %344 = cast(meta[relay.Constant][17] /* ty=Tensor[(9504), float64] */, dtype="float64") /* ty=Tensor[(9504), float64] */;
  %345 = cast(meta[relay.Constant][17] /* ty=Tensor[(9504), float64] */, dtype="bool") /* ty=Tensor[(9504), bool] */;
  %346 = cast(%var_6514, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %347 = reshape(%344, newshape=[16, 594]) /* ty=Tensor[(16, 594), float64] */;
  %348 = reshape(%345, newshape=[16, 594]) /* ty=Tensor[(16, 594), bool] */;
  %349 = reshape(%346, newshape=[2, 594]) /* ty=Tensor[(2, 594), float64] */;
  %350 = @func_2484(%347, %348, %349) /* ty=(Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) */;
  %351 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %352 = %351.0;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %354 = reshape(%353, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %355 = acos(%343) /* ty=Tensor[(4, 15, 3), float32] */;
  %356 = %350.1;
  %357 = @func_2729(%354) /* ty=Tensor[(6, 6, 14), uint64] */;
  (%355, %356, meta[relay.Constant][17] /* ty=Tensor[(9504), float64] */, %var_6514, %352, %357)
}

def @func_5304(%var_5259: int8, %var_5291: Tensor[(24, 396), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(910), int64], Tensor[(528), int8], int8, Tensor[(576), float64], Tensor[(1188), float32], Tensor[(16, 594), float32], Tensor[(24, 396), float64]) {
  %358 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %359 = cast(%var_5259, dtype="int8") /* ty=int8 */;
  %360 = reshape(%359, newshape=[]) /* ty=int8 */;
  %361 = @func_3741(%360) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], int8, Tensor[(528), int8]) */;
  %362 = cast(meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %363 = reshape(%362, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %364 = @func_3102(%363) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(594), float64], Tensor[(1500), float32], Tensor[(16, 594), float32], Tensor[(1584, 6), float64], Tensor[(1188), float64], Tensor[(6, 11, 9), float64], Tensor[(576), float64]) */;
  %365 = %364.5;
  %366 = cast(%365, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %367 = cast(%var_5291, dtype="float64") /* ty=Tensor[(24, 396), float64] */;
  %368 = cast(%var_5291, dtype="bool") /* ty=Tensor[(24, 396), bool] */;
  %369 = acos(%366) /* ty=Tensor[(1188), float32] */;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %371 = reshape(%367, newshape=[16, 594]) /* ty=Tensor[(16, 594), float64] */;
  %372 = reshape(%368, newshape=[16, 594]) /* ty=Tensor[(16, 594), bool] */;
  %373 = reshape(%370, newshape=[2, 594]) /* ty=Tensor[(2, 594), float64] */;
  %374 = @func_2484(%371, %372, %373) /* ty=(Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) */;
  %375 = @func_3772() /* ty=Tensor[(6, 6, 14), float32] */;
  %376 = %358.5;
  %377 = %361.4;
  %378 = %374.1;
  (%375, %376, %377, %var_5259, meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, %369, %378, %var_5291)
}

def @func_8769() -> Tensor[(2925), float64] {
  %379 = @func_4209() /* ty=(Tensor[(2925), bool], Tensor[(2925), bool], Tensor[(14, 5, 13), float64]) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(2925), float64] */;
  sqrt(%381) /* ty=Tensor[(2925), float64] */
}

def @func_4446() -> Tensor[(6, 6, 14), uint8] {
  %382 = @func_914() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */;
  %382.1
}

def @func_9668(%var_9660: uint64, %var_9661: Tensor[(6, 10, 7), uint64]) -> (Tensor[(6, 10, 7), uint64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) {
  %383 = cast(%var_9660, dtype="uint64") /* ty=uint64 */;
  %384 = cast(%var_9661, dtype="uint64") /* ty=Tensor[(6, 10, 7), uint64] */;
  %385 = cast(meta[relay.Constant][19] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %386 = reshape(%385, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %387 = @func_1233(%386) /* ty=(Tensor[(6, 6, 14), int32],) */;
  %388 = subtract(%383, %384) /* ty=Tensor[(6, 10, 7), uint64] */;
  %389 = %387.0;
  (%388, %389, meta[relay.Constant][19] /* ty=Tensor[(504), float32] */)
}

def @func_7646() -> (Tensor[(6, 11, 9), float64],) {
  %390 = @func_7195() /* ty=Tensor[(6, 11, 9), float64] */;
  (%390,)
}

def @func_3579(%var_3556: Tensor[(4158), float64], %var_3558: Tensor[(2925), bool]) -> (Tensor[(6, 6, 14), int32], Tensor[(576), float64], Tensor[(4158), float64], bool, Tensor[(2925), bool], Tensor[(594), float64], Tensor[(150, 10), float32]) {
  %391 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %392 = cast(%var_3556, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %393 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %394 = cast(%var_3558, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %395 = reshape(%392, newshape=[1, 4158]) /* ty=Tensor[(1, 4158), float64] */;
  %396 = reshape(%393, newshape=[]) /* ty=bool */;
  %397 = reshape(%394, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
  %398 = @func_3372(%395, %396, %397) /* ty=(Tensor[(576), float64], Tensor[(770), float64], Tensor[(144, 4), float64], Tensor[(1, 4158), float64], Tensor[(1, 594), float64], Tensor[(2925), bool], Tensor[(14, 5, 13), uint64], Tensor[(1, 4158), float64]) */;
  %399 = cast(meta[relay.Constant][20] /* ty=Tensor[(150, 10), float32] */, dtype="float32") /* ty=Tensor[(150, 10), float32] */;
  %400 = reshape(%399, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float32] */;
  %401 = @func_2990(%400) /* ty=(Tensor[(15, 10, 10), float32], Tensor[(6, 6, 14), float32], Tensor[(594), float64]) */;
  %402 = %391.0;
  %403 = %398.0;
  %404 = %401.2;
  (%402, %403, %var_3556, False /* ty=bool */, %var_3558, %404, meta[relay.Constant][20] /* ty=Tensor[(150, 10), float32] */)
}

def @func_6385() -> (Tensor[(14, 5, 13), bool],) {
  %405 = @func_4736() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool]) */;
  %406 = %405.1;
  (%406,)
}

def @func_5025() -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) {
  %407 = @func_4772() /* ty=(Tensor[(6, 11, 9), float64],) */;
  %408 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %409 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %410 = cast(meta[relay.Constant][21] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %411 = reshape(%409, newshape=[]) /* ty=bool */;
  %412 = reshape(%410, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), bool] */;
  %413 = @func_2569(%411, %412) /* ty=(Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) */;
  %414 = %407.0;
  %415 = %408.0;
  %416 = %413.1;
  (%414, %415, %416, True /* ty=bool */, meta[relay.Constant][21] /* ty=Tensor[(2925), bool] */)
}

def @func_7035() -> (Tensor[(6, 6, 14), float32],) {
  %417 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %418 = %417.0;
  (%418,)
}

def @func_6166(%var_6128: int8) -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), float32], int8) {
  %419 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %420 = cast(%var_6128, dtype="int8") /* ty=int8 */;
  %421 = reshape(%420, newshape=[]) /* ty=int8 */;
  %422 = @func_3741(%421) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], int8, Tensor[(528), int8]) */;
  %423 = %419.4;
  %424 = %422.1;
  (%423, %424, %var_6128)
}

def @func_637() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) {
  %425 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %426 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %427 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 594), float64] */, dtype="float64") /* ty=Tensor[(1, 594), float64] */;
  %428 = reshape(%427, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %429 = %425.0;
  %430 = %426.0;
  %431 = @func_228(%428) /* ty=Tensor[(6, 11, 9), float64] */;
  (%429, %430, %431, meta[relay.Constant][22] /* ty=Tensor[(1, 594), float64] */)
}

def @func_8106() -> (Tensor[(14, 5, 13), float64], Tensor[(504), float32]) {
  %432 = @func_7745() /* ty=(Tensor[(14, 5, 13), float64],) */;
  %433 = %432.0;
  %434 = @func_8026() /* ty=Tensor[(504), float32] */;
  (%433, %434)
}

def @func_9018() -> (Tensor[(6, 11, 9), float32], Tensor[(594), float32]) {
  %435 = @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */;
  %436 = @func_7149() /* ty=Tensor[(6, 11, 9), float32] */;
  %437 = %435.0;
  (%436, %437)
}

def @func_2854(%var_2849: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), uint32],) {
  %438 = @func_2797() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %439 = %438.0;
  %440 = cast(%var_2849, dtype="uint32") /* ty=Tensor[(6, 6, 14), uint32] */;
  %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%439, dtype="uint32") /* ty=Tensor[(6, 6, 14), uint32] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %444 = bitwise_or(%442, %443) /* ty=Tensor[(6, 6, 14), uint32] */;
  (%444,)
}

def @func_9400(%var_9393: Tensor[(594), float64]) -> Tensor[(594), bool] {
  %445 = @func_9319() /* ty=(Tensor[(594), float64],) */;
  %446 = %445.0;
  %447 = cast(%var_9393, dtype="bool") /* ty=Tensor[(594), bool] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(1), int32] */;
  %449 = cast(%446, dtype="bool") /* ty=Tensor[(594), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?), bool] */;
  equal(%449, %450) /* ty=Tensor[(594), bool] */
}

def @func_3741(%var_3722: int8) -> (Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], int8, Tensor[(528), int8]) {
  %451 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
  %452 = cast(%var_3722, dtype="int8") /* ty=int8 */;
  %453 = cast(meta[relay.Constant][23] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %454 = reshape(%452, newshape=[]) /* ty=int8 */;
  %455 = reshape(%453, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %456 = @func_3670(%454, %455) /* ty=(Tensor[(6, 6, 14), float64], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) */;
  %457 = %451.0;
  %458 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %459 = %456.0;
  (%457, %458, %459, %var_3722, meta[relay.Constant][23] /* ty=Tensor[(528), int8] */)
}

def @func_5525() -> (Tensor[(594), float64], Tensor[(594), int16]) {
  %460 = @func_4136() /* ty=Tensor[(594), float64] */;
  %461 = cast(%460, dtype="float64") /* ty=Tensor[(594), float64] */;
  %462 = cast(%460, dtype="float64") /* ty=Tensor[(594), float64] */;
  %463 = reshape(%461, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %464 = reshape(%462, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %465 = @func_1334(%463, %464) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */;
  %466 = %465.2;
  (%460, %466)
}

def @func_8672() -> (Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32]) {
  %467 = @func_8651() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %468 = @func_2797() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %469 = %467.0;
  %470 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %471 = %468.0;
  (%469, %470, %471)
}

def @func_4136() -> Tensor[(594), float64] {
  %472 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %472.2
}

def @func_3772() -> Tensor[(6, 6, 14), float32] {
  @func_1247() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_8248() -> (Tensor[(504), float32],) {
  %473 = @func_8026() /* ty=Tensor[(504), float32] */;
  (%473,)
}

def @func_8874() -> Tensor[(6, 11, 9), float64] {
  %474 = @func_4019() /* ty=(Tensor[(6, 11, 9), float64],) */;
  %474.0
}

def @func_9739() -> (Tensor[(6, 6, 14), float32],) {
  %475 = @func_8964() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(504), float32]) */;
  %476 = %475.0;
  (%476,)
}

def @func_7821() -> (Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) {
  %477 = @func_5070() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) */;
  %478 = @func_6197() /* ty=Tensor[(594), float64] */;
  %479 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
  %480 = %477.0;
  (%478, %479, %480)
}

def @func_7983(%var_7970: Tensor[(1, 13, 14), float32]) -> (Tensor[(1, 13, 14), float32], Tensor[(770), float64]) {
  %481 = cast(%var_7970, dtype="float32") /* ty=Tensor[(1, 13, 14), float32] */;
  %482 = @func_5200() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(770), float64]) */;
  %483 = asinh(%481) /* ty=Tensor[(1, 13, 14), float32] */;
  %484 = %482.1;
  (%483, %484)
}

def @func_7552() -> (Tensor[(6, 6, 14), float32],) {
  %485 = @func_3136() /* ty=Tensor[(6, 6, 14), float32] */;
  (%485,)
}

def @func_6794() -> (Tensor[(6, 6, 14), float32], Tensor[(10, 7, 11), float64], Tensor[(770), float64], Tensor[(576), float64], Tensor[(4158), float64]) {
  %486 = cast(meta[relay.Constant][24] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
  %487 = cast(meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %488 = cast(meta[relay.Constant][26] /* ty=Tensor[(4158), float64] */, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %489 = reshape(%486, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float64] */;
  %490 = reshape(%487, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %491 = reshape(%488, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %492 = @func_1387(%489, %490, %491) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */;
  %493 = @func_2752() /* ty=Tensor[(6, 6, 14), float32] */;
  %494 = %492.0;
  (%493, %494, meta[relay.Constant][24] /* ty=Tensor[(770), float64] */, meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, meta[relay.Constant][26] /* ty=Tensor[(4158), float64] */)
}

def @func_1779() -> Tensor[(770), float64] {
  %495 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %495.1
}

def @func_865() -> (Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) {
  %496 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %497 = %496.1;
  %498 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 6, 14), float32] */, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %502 = divide(%500, %501) /* ty=Tensor[(6, 6, 14), float64] */;
  %503 = cast(%502, dtype="uint8") /* ty=Tensor[(6, 6, 14), uint8] */;
  %504 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(6, 6, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 6, 14), float32] */, dtype="uint8") /* ty=Tensor[(6, 6, 14), uint8] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %507 = cast(%497, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %508 = minimum(%505, %506) /* ty=Tensor[(6, 6, 14), uint8] */;
  %509 = rsqrt(%507) /* ty=Tensor[(6, 6, 14), float32] */;
  (%508, %509)
}

def @func_706(%var_701: Tensor[(910), int64]) -> (Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
  %510 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %511 = %510.0;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %513 = cast(%var_701, dtype="int64") /* ty=Tensor[(910), int64] */;
  %514 = cast(%var_701, dtype="int64") /* ty=Tensor[(910), int64] */;
  %515 = reshape(%513, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %516 = reshape(%514, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %517 = erf(%512) /* ty=Tensor[(6, 6, 14), float32] */;
  %518 = @func_46(%515, %516) /* ty=Tensor[(14, 5, 13), bool] */;
  (%517, %518, %var_701)
}

def @func_914() -> (Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) {
  %519 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %520 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %521 = %519.3;
  %522 = %520.0;
  (%521, %522)
}

def @func_3407() -> Tensor[(14, 5, 13), bool] {
  %523 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
  %523.0
}

def @func_8002() -> Tensor[(6, 6, 14), int32] {
  %524 = @func_5025() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) */;
  %524.1
}

def @func_9203(%var_9193: Tensor[(1, 10, 4), float64]) -> (Tensor[(1, 10, 4), float64],) {
  %525 = cast(%var_9193, dtype="float64") /* ty=Tensor[(1, 10, 4), float64] */;
  %526 = erf(%525) /* ty=Tensor[(1, 10, 4), float64] */;
  (%526,)
}

def @func_3212() -> Tensor[(66, 9), float64] {
  %527 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %528 = %527.4;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
  log10(%529) /* ty=Tensor[(66, 9), float64] */
}

def @func_2916() -> Tensor[(770), float64] {
  @func_1779() /* ty=Tensor[(770), float64] */
}

def @func_7585(%var_7563: Tensor[(10, 13, 8), float64]) -> (Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float32]) {
  %530 = cast(%var_7563, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %531 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(10, 13, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 13, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %534 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 13, 8), float64] */, dtype="float32") /* ty=Tensor[(10, 13, 8), float32] */;
  %535 = mod(%532, %533) /* ty=Tensor[(10, 13, 8), float64] */;
  %536 = cosh(%534) /* ty=Tensor[(10, 13, 8), float32] */;
  (%535, %536)
}

def @func_1875(%var_1801: Tensor[(504), float32]) -> (Tensor[(770), float64], Tensor[(594), float64], Tensor[(6, 6, 14), uint8], Tensor[(594), float64]) {
  %537 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %538 = cast(%var_1801, dtype="float32") /* ty=Tensor[(504), float32] */;
  %539 = reshape(%538, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %540 = @func_892(%539) /* ty=Tensor[(6, 6, 14), bool] */;
  %541 = cast(%540, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %542 = cosh(%541) /* ty=Tensor[(6, 6, 14), float32] */;
  %543 = cast(%var_1801, dtype="uint8") /* ty=Tensor[(504), uint8] */;
  %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%542, dtype="uint8") /* ty=Tensor[(6, 6, 14), uint8] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %547 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %548 = @func_1779() /* ty=Tensor[(770), float64] */;
  %549 = %537.2;
  %550 = add(%545, %546) /* ty=Tensor[(6, 6, 14), uint8] */;
  %551 = %547.2;
  (%548, %549, %550, %551)
}

def @func_8928() -> Tensor[(6, 6, 14), float32] {
  %552 = @func_2797() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %552.0
}

def @main(%var_9904: Tensor[(2, 11, 3), int8]) -> Tensor[(2, 11, 3), float32] {
  %553 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 11, 3), int8] */, dtype="float64") /* ty=Tensor[(2, 11, 3), float64] */;
  %554 = asinh(%553) /* ty=Tensor[(2, 11, 3), float64] */;
  %555 = cast(%var_9904, dtype="int8") /* ty=Tensor[(2, 11, 3), int8] */;
  %556 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(2, 11, 3), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 11, 3), int8] */, dtype="int8") /* ty=Tensor[(2, 11, 3), int8] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %559 = subtract(%557, %558) /* ty=Tensor[(2, 11, 3), int8] */;
  %560 = cast(%559, dtype="bool") /* ty=Tensor[(2, 11, 3), bool] */;
  %561 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%554, dtype="bool") /* ty=Tensor[(2, 11, 3), bool] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %564 = equal(%562, %563) /* ty=Tensor[(2, 11, 3), bool] */;
  %565 = cast(%564, dtype="float32") /* ty=Tensor[(2, 11, 3), float32] */;
  cosh(%565) /* ty=Tensor[(2, 11, 3), float32] */
}

def @func_9455() -> Tensor[(6, 6, 14), float32] {
  @func_1247() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_2484(%var_2446: Tensor[(16, 594), float64], %var_2468: Tensor[(16, 594), bool], %var_2473: Tensor[(2, 594), float64]) -> (Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) {
  %566 = @func_914() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */;
  %567 = %566.0;
  %568 = cast(%var_2446, dtype="float32") /* ty=Tensor[(16, 594), float32] */;
  %569 = asin(%568) /* ty=Tensor[(16, 594), float32] */;
  %570 = cast(%567, dtype="bool") /* ty=Tensor[(1, 594), bool] */;
  %571 = cast(%569, dtype="bool") /* ty=Tensor[(16, 594), bool] */;
  %572 = cast(%567, dtype="bool") /* ty=Tensor[(1, 594), bool] */;
  %573 = cast(%var_2446, dtype="bool") /* ty=Tensor[(16, 594), bool] */;
  %574 = less(%572, %573) /* ty=Tensor[(16, 594), bool] */;
  %575 = cast(%var_2468, dtype="float32") /* ty=Tensor[(16, 594), float32] */;
  %576 = shape_of(%574, dtype="int32") /* ty=Tensor[(2), int32] */;
  %577 = cast(%574, dtype="float32") /* ty=Tensor[(16, 594), float32] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %579 = cast(%567, dtype="float64") /* ty=Tensor[(1, 594), float64] */;
  %580 = cast(%var_2473, dtype="float64") /* ty=Tensor[(2, 594), float64] */;
  %581 = greater(%570, %571) /* ty=Tensor[(16, 594), bool] */;
  %582 = minimum(%577, %578) /* ty=Tensor[(16, 594), float32] */;
  %583 = divide(%579, %580) /* ty=Tensor[(2, 594), float64] */;
  (%581, %582, %583)
}

def @func_8806() -> (Tensor[(6, 6, 14), float32], Tensor[(770), float64]) {
  %584 = @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
  %585 = @func_7108() /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
  %586 = %584.0;
  %587 = %585.0;
  (%586, %587)
}

def @func_1247() -> Tensor[(6, 6, 14), float32] {
  %588 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %588.0
}

def @func_9049(%var_9046: Tensor[(2, 1008), uint8]) -> (Tensor[(6, 6, 14), int32], Tensor[(9, 16, 14), float32], Tensor[(2, 1008), uint8]) {
  %589 = cast(%var_9046, dtype="uint8") /* ty=Tensor[(2, 1008), uint8] */;
  %590 = cast(%var_9046, dtype="uint8") /* ty=Tensor[(2, 1008), uint8] */;
  %591 = reshape(%589, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), uint8] */;
  %592 = reshape(%590, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), uint8] */;
  %593 = @func_7516(%591, %592) /* ty=(Tensor[(9, 16, 14), float32],) */;
  %594 = @func_7940() /* ty=Tensor[(6, 6, 14), int32] */;
  %595 = %593.0;
  (%594, %595, %var_9046)
}

def @func_3954(%var_3952: Tensor[(2925), bool]) -> (Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], bool, Tensor[(2925), bool]) {
  %596 = @func_2647() /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), bool]) */;
  %597 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %598 = cast(%var_3952, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %599 = reshape(%597, newshape=[]) /* ty=bool */;
  %600 = reshape(%598, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), bool] */;
  %601 = @func_2569(%599, %600) /* ty=(Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) */;
  %602 = %596.1;
  %603 = %601.2;
  (%602, %603, True /* ty=bool */, %var_3952)
}

def @func_1387(%var_1354: Tensor[(10, 7, 11), float64], %var_1363: Tensor[(576), float64], %var_1371: Tensor[(4158), float64]) -> (Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) {
  %604 = cast(%var_1354, dtype="float64") /* ty=Tensor[(10, 7, 11), float64] */;
  %605 = cast(%var_1363, dtype="float64") /* ty=Tensor[(576), float64] */;
  %606 = cast(meta[relay.Constant][30] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %607 = reshape(%605, newshape=[9, 16, 4]) /* ty=Tensor[(9, 16, 4), float64] */;
  %608 = reshape(%606, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %609 = @func_602(%607, %608) /* ty=(Tensor[(9, 16, 4), float64], Tensor[(9, 16, 4), float64], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %610 = cast(%var_1371, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %611 = cast(%var_1371, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %612 = reshape(%610, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
  %613 = reshape(%611, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
  %614 = @func_792(%612, %613) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) */;
  %615 = exp(%604) /* ty=Tensor[(10, 7, 11), float64] */;
  %616 = %609.0;
  %617 = %614.4;
  (%615, %616, %var_1363, meta[relay.Constant][30] /* ty=Tensor[(594), float64] */, %617, %var_1371)
}

def @func_3161() -> Tensor[(594), float32] {
  %618 = @func_2087() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), int32], Tensor[(594), float32], Tensor[(770), float64], Tensor[(6, 11, 9), float64]) */;
  %618.2
}

def @func_8026() -> Tensor[(504), float32] {
  %619 = @func_4699() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) */;
  %619.2
}

def @func_2781() -> (Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool]) {
  %620 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
  %621 = @func_2187() /* ty=Tensor[(6, 6, 14), float64] */;
  %622 = %620.0;
  (%621, %622)
}

def @func_9588() -> (Tensor[(14, 5, 13), bool],) {
  %623 = @func_6385() /* ty=(Tensor[(14, 5, 13), bool],) */;
  %624 = %623.0;
  (%624,)
}

def @func_7313() -> Tensor[(14, 5, 13), bool] {
  %625 = @func_6385() /* ty=(Tensor[(14, 5, 13), bool],) */;
  %625.0
}

def @func_2187() -> Tensor[(6, 6, 14), float64] {
  %626 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %627 = %626.0;
  %628 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 6, 14), float64] */, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%627, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %632 = floor_divide(%630, %631) /* ty=Tensor[(6, 6, 14), float32] */;
  %633 = cast(%632, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  log10(%633) /* ty=Tensor[(6, 6, 14), float64] */
}

def @func_2030() -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) {
  %634 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %635 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %636 = cast(meta[relay.Constant][32] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %637 = cast(meta[relay.Constant][32] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %638 = reshape(%636, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %639 = reshape(%637, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %640 = @func_1334(%638, %639) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */;
  %641 = cast(meta[relay.Constant][32] /* ty=Tensor[(594), float64] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %642 = rsqrt(%641) /* ty=Tensor[(594), float32] */;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(594), float32] */;
  %644 = %634.0;
  %645 = %635.0;
  %646 = %640.0;
  %647 = asinh(%643) /* ty=Tensor[(594), float32] */;
  (%644, %645, %646, %647)
}

def @func_9061() -> Tensor[(6, 6, 14), float32] {
  %648 = @func_5627() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), int8], Tensor[(6, 6, 14), float32]) */;
  %648.0
}

def @func_539() -> (Tensor[(6, 6, 14), float32],) {
  %649 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %650 = atanh(%649) /* ty=Tensor[(6, 6, 14), float32] */;
  (%650,)
}

def @func_3102(%var_3087: Tensor[(576), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(594), float64], Tensor[(1500), float32], Tensor[(16, 594), float32], Tensor[(1584, 6), float64], Tensor[(1188), float64], Tensor[(6, 11, 9), float64], Tensor[(576), float64]) {
  %651 = cast(meta[relay.Constant][34] /* ty=Tensor[(1500), float32] */, dtype="float32") /* ty=Tensor[(1500), float32] */;
  %652 = reshape(%651, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float32] */;
  %653 = @func_2990(%652) /* ty=(Tensor[(15, 10, 10), float32], Tensor[(6, 6, 14), float32], Tensor[(594), float64]) */;
  %654 = cast(meta[relay.Constant][35] /* ty=Tensor[(1584, 6), float64] */, dtype="float64") /* ty=Tensor[(1584, 6), float64] */;
  %655 = cast(meta[relay.Constant][35] /* ty=Tensor[(1584, 6), float64] */, dtype="bool") /* ty=Tensor[(1584, 6), bool] */;
  %656 = cast(meta[relay.Constant][36] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %657 = reshape(%654, newshape=[16, 594]) /* ty=Tensor[(16, 594), float64] */;
  %658 = reshape(%655, newshape=[16, 594]) /* ty=Tensor[(16, 594), bool] */;
  %659 = reshape(%656, newshape=[2, 594]) /* ty=Tensor[(2, 594), float64] */;
  %660 = @func_2484(%657, %658, %659) /* ty=(Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) */;
  %661 = cast(%var_3087, dtype="float64") /* ty=Tensor[(576), float64] */;
  %662 = %653.2;
  %663 = cast(%662, dtype="float64") /* ty=Tensor[(594), float64] */;
  %664 = reshape(%661, newshape=[9, 16, 4]) /* ty=Tensor[(9, 16, 4), float64] */;
  %665 = reshape(%663, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %666 = @func_602(%664, %665) /* ty=(Tensor[(9, 16, 4), float64], Tensor[(9, 16, 4), float64], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %667 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %668 = %660.1;
  %669 = %666.2;
  (%667, %662, meta[relay.Constant][34] /* ty=Tensor[(1500), float32] */, %668, meta[relay.Constant][35] /* ty=Tensor[(1584, 6), float64] */, meta[relay.Constant][36] /* ty=Tensor[(1188), float64] */, %669, %var_3087)
}

def @func_1914(%var_1906: Tensor[(770), float64]) -> (Tensor[(770), float64], Tensor[(770), uint32]) {
  %670 = @func_1779() /* ty=Tensor[(770), float64] */;
  %671 = cast(%var_1906, dtype="uint32") /* ty=Tensor[(770), uint32] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(1), int32] */;
  %673 = cast(%670, dtype="uint32") /* ty=Tensor[(770), uint32] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %675 = @func_1779() /* ty=Tensor[(770), float64] */;
  %676 = minimum(%673, %674) /* ty=Tensor[(770), uint32] */;
  (%675, %676)
}

def @func_1149() -> Tensor[(6, 6, 14), float32] {
  %677 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %677.0
}

def @func_3806(%var_3790: Tensor[(6, 6, 14), uint8]) -> (Tensor[(6, 6, 14), int8],) {
  %678 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %679 = %678.1;
  %680 = cast(%var_3790, dtype="int8") /* ty=Tensor[(6, 6, 14), int8] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%679, dtype="int8") /* ty=Tensor[(6, 6, 14), int8] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %684 = logical_xor(%682, %683) /* ty=Tensor[(6, 6, 14), int8] */;
  (%684,)
}

def @func_8651() -> (Tensor[(6, 6, 14), int32],) {
  %685 = @func_8002() /* ty=Tensor[(6, 6, 14), int32] */;
  (%685,)
}

def @func_8144(%var_8128: Tensor[(4158), float64], %var_8129: Tensor[(975, 3), bool]) -> (Tensor[(6, 6, 14), int32], Tensor[(150, 10), float32], Tensor[(975, 3), bool], Tensor[(4158), float64], Tensor[(770), float64], Tensor[(910), int64]) {
  %686 = @func_5025() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) */;
  %687 = cast(%var_8128, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %688 = cast(%var_8129, dtype="bool") /* ty=Tensor[(975, 3), bool] */;
  %689 = reshape(%687, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %690 = reshape(%688, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
  %691 = @func_3579(%689, %690) /* ty=(Tensor[(6, 6, 14), int32], Tensor[(576), float64], Tensor[(4158), float64], bool, Tensor[(2925), bool], Tensor[(594), float64], Tensor[(150, 10), float32]) */;
  %692 = cast(%var_8128, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %693 = cast(%var_8128, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %694 = cast(meta[relay.Constant][37] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %695 = reshape(%693, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %696 = reshape(%694, newshape=[910]) /* ty=Tensor[(910), int64] */;
  %697 = @func_4656(%695, %696) /* ty=(Tensor[(770), float64], Tensor[(4158), float64], bool, Tensor[(6, 6, 14), uint8], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(770), float32]) */;
  %698 = %686.1;
  %699 = %691.6;
  %700 = log10(%692) /* ty=Tensor[(4158), float64] */;
  %701 = %697.0;
  (%698, %699, %var_8129, %700, %701, meta[relay.Constant][37] /* ty=Tensor[(910), int64] */)
}

def @func_5070() -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) {
  %702 = @func_1247() /* ty=Tensor[(6, 6, 14), float32] */;
  %703 = cast(%702, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %704 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
  %705 = log2(%703) /* ty=Tensor[(6, 6, 14), float64] */;
  (%704, %705)
}

def @func_1698() -> (Tensor[(6, 6, 14), float64],) {
  %706 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %707 = %706.4;
  (%707,)
}

def @func_2087() -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), int32], Tensor[(594), float32], Tensor[(770), float64], Tensor[(6, 11, 9), float64]) {
  %708 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %709 = %708.0;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %711 = reshape(%710, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %712 = @func_1233(%711) /* ty=(Tensor[(6, 6, 14), int32],) */;
  %713 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %714 = @func_1779() /* ty=Tensor[(770), float64] */;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(770), float64] */;
  %716 = %713.3;
  %717 = cast(%716, dtype="float64") /* ty=Tensor[(594), float64] */;
  %718 = cast(%716, dtype="float64") /* ty=Tensor[(594), float64] */;
  %719 = reshape(%717, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %720 = reshape(%718, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %721 = @func_1334(%719, %720) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */;
  %722 = %712.0;
  %723 = sinh(%715) /* ty=Tensor[(770), float64] */;
  %724 = %721.0;
  (%709, %722, %716, %723, %724)
}

def @func_3136() -> Tensor[(6, 6, 14), float32] {
  @func_1149() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_2433() -> (Tensor[(770), float64],) {
  %725 = @func_1779() /* ty=Tensor[(770), float64] */;
  (%725,)
}

def @func_7851() -> Tensor[(6, 6, 14), float32] {
  @func_7622() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_9165() -> Tensor[(6, 11, 9), float64] {
  @func_4346() /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_8611() -> (Tensor[(6, 6, 14), uint8], Tensor[(1, 594), float64], Tensor[(6, 6, 14), float64]) {
  %726 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %727 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %728 = @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */;
  %729 = %726.3;
  %730 = %727.0;
  (%728, %729, %730)
}

def @func_8197() -> (Tensor[(6, 11, 9), float64],) {
  %731 = @func_7195() /* ty=Tensor[(6, 11, 9), float64] */;
  (%731,)
}

def @func_4059() -> Tensor[(6, 11, 9), float64] {
  %732 = @func_4019() /* ty=(Tensor[(6, 11, 9), float64],) */;
  %732.0
}

def @func_7421() -> (Tensor[(770), float64], Tensor[(770), float64]) {
  %733 = @func_2433() /* ty=(Tensor[(770), float64],) */;
  %734 = %733.0;
  %735 = @func_1779() /* ty=Tensor[(770), float64] */;
  (%734, %735)
}

def @func_3859() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) {
  %736 = @func_1247() /* ty=Tensor[(6, 6, 14), float32] */;
  %737 = cast(%736, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %738 = @func_3286() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) */;
  %739 = tan(%737) /* ty=Tensor[(6, 6, 14), float32] */;
  %740 = %738.1;
  (%739, %740)
}

def @func_4547(%var_4532: Tensor[(4158), float64], %var_4533: bool) -> (Tensor[(770), float64], Tensor[(14, 5, 13), uint64], Tensor[(4158), float64], bool, Tensor[(2925), float64]) {
  %741 = @func_2433() /* ty=(Tensor[(770), float64],) */;
  %742 = cast(%var_4532, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %743 = cast(%var_4533, dtype="bool") /* ty=bool */;
  %744 = cast(meta[relay.Constant][38] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %745 = reshape(%742, newshape=[1, 4158]) /* ty=Tensor[(1, 4158), float64] */;
  %746 = reshape(%743, newshape=[]) /* ty=bool */;
  %747 = reshape(%744, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
  %748 = @func_3372(%745, %746, %747) /* ty=(Tensor[(576), float64], Tensor[(770), float64], Tensor[(144, 4), float64], Tensor[(1, 4158), float64], Tensor[(1, 594), float64], Tensor[(2925), bool], Tensor[(14, 5, 13), uint64], Tensor[(1, 4158), float64]) */;
  %749 = cast(meta[relay.Constant][38] /* ty=Tensor[(2925), bool] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %750 = %741.0;
  %751 = %748.6;
  %752 = log2(%749) /* ty=Tensor[(2925), float64] */;
  (%750, %751, %var_4532, %var_4533, %752)
}

def @func_9780() -> (Tensor[(594), float64], Tensor[(594), float64]) {
  %753 = @func_6197() /* ty=Tensor[(594), float64] */;
  %754 = @func_6197() /* ty=Tensor[(594), float64] */;
  (%753, %754)
}

def @func_2930() -> Tensor[(6, 6, 14), float32] {
  @func_1149() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_7195() -> Tensor[(6, 11, 9), float64] {
  %755 = @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
  %755.1
}

def @func_602(%var_570: Tensor[(9, 16, 4), float64], %var_584: Tensor[(594), float64]) -> (Tensor[(9, 16, 4), float64], Tensor[(9, 16, 4), float64], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
  %756 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 16, 4), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
  %757 = shape_of(%var_570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%var_570, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %760 = cast(%var_570, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
  %761 = cast(%var_584, dtype="float64") /* ty=Tensor[(594), float64] */;
  %762 = reshape(%761, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %763 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %764 = cast(meta[relay.Constant][40] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %765 = cast(meta[relay.Constant][40] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %766 = reshape(%764, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %767 = reshape(%765, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %768 = mod(%758, %759) /* ty=Tensor[(9, 16, 4), float64] */;
  %769 = erf(%760) /* ty=Tensor[(9, 16, 4), float64] */;
  %770 = @func_228(%762) /* ty=Tensor[(6, 11, 9), float64] */;
  %771 = %763.0;
  %772 = @func_46(%766, %767) /* ty=Tensor[(14, 5, 13), bool] */;
  (%768, %769, %770, %var_584, %771, %772, meta[relay.Constant][40] /* ty=Tensor[(910), int64] */)
}

def @func_9561() -> (Tensor[(14, 5, 13), bool],) {
  %773 = @func_3902() /* ty=Tensor[(14, 5, 13), bool] */;
  (%773,)
}

def @func_4772() -> (Tensor[(6, 11, 9), float64],) {
  %774 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
  (%774,)
}

def @func_5174() -> (Tensor[(66, 9), float64], Tensor[(594), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), float64]) {
  %775 = @func_3212() /* ty=Tensor[(66, 9), float64] */;
  %776 = cast(%775, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
  %777 = cast(%775, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
  %778 = reshape(%776, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %779 = reshape(%777, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %780 = @func_1334(%778, %779) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */;
  %781 = %780.2;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(594), float32] */;
  %783 = @func_4302() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %784 = tan(%782) /* ty=Tensor[(594), float32] */;
  %785 = cast(%784, dtype="float64") /* ty=Tensor[(594), float64] */;
  %786 = reshape(%785, newshape=[66, 9]) /* ty=Tensor[(66, 9), float64] */;
  %787 = @func_3500(%786) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(66, 9), uint16], Tensor[(66, 9), float64]) */;
  %788 = %783.0;
  %789 = %787.1;
  (%775, %784, %788, %789)
}

def @func_7149() -> Tensor[(6, 11, 9), float32] {
  %790 = @func_4166() /* ty=(Tensor[(6, 11, 9), float32],) */;
  %790.0
}

def @func_6985() -> Tensor[(6, 6, 14), uint8] {
  %791 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %791.1
}

def @func_9470() -> Tensor[(6, 11, 9), float64] {
  %792 = @func_9120() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %792.2
}

def @func_5226() -> (Tensor[(594), float32], Tensor[(594), float32]) {
  %793 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %794 = %793.3;
  %795 = @func_3161() /* ty=Tensor[(594), float32] */;
  (%794, %795)
}

def @func_4166() -> (Tensor[(6, 11, 9), float32],) {
  %796 = @func_4059() /* ty=Tensor[(6, 11, 9), float64] */;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %798 = asin(%797) /* ty=Tensor[(6, 11, 9), float32] */;
  (%798,)
}

def @func_1334(%var_1282: Tensor[(594), float64], %var_1323: Tensor[(594), float64]) -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) {
  %799 = cast(%var_1282, dtype="float64") /* ty=Tensor[(594), float64] */;
  %800 = reshape(%799, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %801 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %802 = %801.1;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %804 = reshape(%803, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %805 = @func_1233(%804) /* ty=(Tensor[(6, 6, 14), int32],) */;
  %806 = %805.0;
  %807 = cast(%806, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %808 = shape_of(%802, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%802, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %811 = cast(%var_1282, dtype="float64") /* ty=Tensor[(594), float64] */;
  %812 = acos(%811) /* ty=Tensor[(594), float64] */;
  %813 = cast(%var_1323, dtype="int16") /* ty=Tensor[(594), int16] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(1), int32] */;
  %815 = cast(%812, dtype="int16") /* ty=Tensor[(594), int16] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?), int16] */;
  %817 = @func_228(%800) /* ty=Tensor[(6, 11, 9), float64] */;
  %818 = less(%809, %810) /* ty=Tensor[(6, 6, 14), bool] */;
  %819 = right_shift(%815, %816) /* ty=Tensor[(594), int16] */;
  (%817, %818, %819)
}

def @func_7745() -> (Tensor[(14, 5, 13), float64],) {
  %820 = @func_4209() /* ty=(Tensor[(2925), bool], Tensor[(2925), bool], Tensor[(14, 5, 13), float64]) */;
  %821 = %820.2;
  (%821,)
}

def @func_4963(%var_4863: Tensor[(16, 1, 8), uint8], %var_4864: Tensor[(16, 2, 8), uint8], %var_4912: int8, %var_4924: Tensor[(189, 22), float64]) -> (Tensor[(16, 2, 8), float64], Tensor[(6, 6, 14), float32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(189, 22), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
  %822 = cast(%var_4863, dtype="uint8") /* ty=Tensor[(16, 1, 8), uint8] */;
  %823 = cast(%var_4864, dtype="uint8") /* ty=Tensor[(16, 2, 8), uint8] */;
  %824 = add(%822, %823) /* ty=Tensor[(16, 2, 8), uint8] */;
  %825 = cast(%var_4864, dtype="int32") /* ty=Tensor[(16, 2, 8), int32] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="int32") /* ty=Tensor[(16, 2, 8), int32] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %829 = subtract(%827, %828) /* ty=Tensor[(16, 2, 8), int32] */;
  %830 = cast(%829, dtype="float64") /* ty=Tensor[(16, 2, 8), float64] */;
  %831 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%824, dtype="float64") /* ty=Tensor[(16, 2, 8), float64] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %834 = cast(%var_4912, dtype="int8") /* ty=int8 */;
  %835 = cast(meta[relay.Constant][41] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %836 = reshape(%834, newshape=[]) /* ty=int8 */;
  %837 = reshape(%835, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %838 = @func_3670(%836, %837) /* ty=(Tensor[(6, 6, 14), float64], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) */;
  %839 = @func_3286() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) */;
  %840 = cast(%var_4924, dtype="float64") /* ty=Tensor[(189, 22), float64] */;
  %841 = cast(%var_4924, dtype="float64") /* ty=Tensor[(189, 22), float64] */;
  %842 = reshape(%840, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
  %843 = reshape(%841, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
  %844 = @func_792(%842, %843) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) */;
  %845 = @func_3286() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) */;
  %846 = cast(meta[relay.Constant][42] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %847 = cast(meta[relay.Constant][42] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %848 = reshape(%846, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %849 = reshape(%847, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %850 = mod(%832, %833) /* ty=Tensor[(16, 2, 8), float64] */;
  %851 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
  %852 = %838.1;
  %853 = %839.0;
  %854 = %844.0;
  %855 = %845.0;
  %856 = @func_46(%848, %849) /* ty=Tensor[(14, 5, 13), bool] */;
  (%850, %851, %852, %var_4912, meta[relay.Constant][41] /* ty=Tensor[(528), int8] */, %853, %854, %var_4924, %855, %856, meta[relay.Constant][42] /* ty=Tensor[(910), int64] */)
}

def @func_3292() -> (Tensor[(6, 6, 14), int32],) {
  %857 = @func_2087() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), int32], Tensor[(594), float32], Tensor[(770), float64], Tensor[(6, 11, 9), float64]) */;
  %858 = %857.1;
  (%858,)
}

def @func_1597() -> (Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
  %859 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %860 = cast(meta[relay.Constant][43] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
  %861 = cast(meta[relay.Constant][45] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %862 = cast(meta[relay.Constant][44] /* ty=Tensor[(4158), float64] */, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %863 = reshape(%860, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float64] */;
  %864 = reshape(%861, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %865 = reshape(%862, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %866 = @func_1387(%863, %864, %865) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */;
  %867 = %866.1;
  %868 = cast(%867, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
  %869 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(576), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %870 = cast(meta[relay.Constant][45] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?), float64] */;
  %872 = cast(meta[relay.Constant][46] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %873 = cast(meta[relay.Constant][46] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %874 = reshape(%872, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %875 = reshape(%873, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %876 = %859.0;
  %877 = floor_mod(%870, %871) /* ty=Tensor[(576), float64] */;
  %878 = @func_46(%874, %875) /* ty=Tensor[(14, 5, 13), bool] */;
  (%876, meta[relay.Constant][43] /* ty=Tensor[(770), float64] */, meta[relay.Constant][44] /* ty=Tensor[(4158), float64] */, %877, %878, meta[relay.Constant][46] /* ty=Tensor[(910), int64] */)
}

def @func_4656(%var_4594: Tensor[(4158), float64], %var_4624: Tensor[(910), int64]) -> (Tensor[(770), float64], Tensor[(4158), float64], bool, Tensor[(6, 6, 14), uint8], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(770), float32]) {
  %879 = cast(%var_4594, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %880 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %881 = reshape(%879, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %882 = reshape(%880, newshape=[]) /* ty=bool */;
  %883 = @func_4547(%881, %882) /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), uint64], Tensor[(4158), float64], bool, Tensor[(2925), float64]) */;
  %884 = cast(%var_4624, dtype="int64") /* ty=Tensor[(910), int64] */;
  %885 = cast(%var_4624, dtype="int64") /* ty=Tensor[(910), int64] */;
  %886 = reshape(%884, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %887 = reshape(%885, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
  %888 = @func_2433() /* ty=(Tensor[(770), float64],) */;
  %889 = %888.0;
  %890 = cast(%889, dtype="float32") /* ty=Tensor[(770), float32] */;
  %891 = sigmoid(%890) /* ty=Tensor[(770), float32] */;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(770), float32] */;
  %893 = %883.0;
  %894 = @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */;
  %895 = @func_46(%886, %887) /* ty=Tensor[(14, 5, 13), bool] */;
  %896 = @func_4059() /* ty=Tensor[(6, 11, 9), float64] */;
  %897 = sqrt(%892) /* ty=Tensor[(770), float32] */;
  (%893, %var_4594, False /* ty=bool */, %894, %895, %var_4624, %896, %897)
}

def @func_3902() -> Tensor[(14, 5, 13), bool] {
  %898 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %898.1
}

def @func_7108() -> (Tensor[(770), float64], Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) {
  %899 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %900 = @func_2916() /* ty=Tensor[(770), float64] */;
  %901 = %899.1;
  %902 = @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */;
  (%900, %901, %902)
}

def @func_1097() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) {
  %903 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %904 = cast(meta[relay.Constant][47] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %905 = reshape(%904, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %906 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %907 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %908 = %907.0;
  %909 = cast(%908, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %910 = cos(%909) /* ty=Tensor[(6, 6, 14), float32] */;
  %911 = cast(%908, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %912 = shape_of(%910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(%910, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %915 = logical_or(%913, %914) /* ty=Tensor[(6, 6, 14), bool] */;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %917 = %903.1;
  %918 = @func_228(%905) /* ty=Tensor[(6, 11, 9), float64] */;
  %919 = %906.1;
  %920 = acos(%916) /* ty=Tensor[(6, 6, 14), float64] */;
  (%917, %918, meta[relay.Constant][47] /* ty=Tensor[(594), float64] */, %919, %920)
}

def @func_3372(%var_3319: Tensor[(1, 4158), float64], %var_3341: bool, %var_3342: Tensor[(2925), bool]) -> (Tensor[(576), float64], Tensor[(770), float64], Tensor[(144, 4), float64], Tensor[(1, 4158), float64], Tensor[(1, 594), float64], Tensor[(2925), bool], Tensor[(14, 5, 13), uint64], Tensor[(1, 4158), float64]) {
  %921 = cast(meta[relay.Constant][48] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
  %922 = cast(meta[relay.Constant][49] /* ty=Tensor[(144, 4), float64] */, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
  %923 = cast(%var_3319, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
  %924 = reshape(%921, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float64] */;
  %925 = reshape(%922, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %926 = reshape(%923, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %927 = @func_1387(%924, %925, %926) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */;
  %928 = cast(%var_3319, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
  %929 = acos(%928) /* ty=Tensor[(1, 4158), float64] */;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
  %931 = cast(%var_3341, dtype="bool") /* ty=bool */;
  %932 = cast(%var_3342, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %933 = reshape(%931, newshape=[]) /* ty=bool */;
  %934 = reshape(%932, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), bool] */;
  %935 = @func_2569(%933, %934) /* ty=(Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) */;
  %936 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %937 = %936.4;
  %938 = cast(%937, dtype="uint64") /* ty=Tensor[(14, 5, 13), uint64] */;
  %939 = cast(%var_3341, dtype="uint64") /* ty=uint64 */;
  %940 = cast(%929, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
  %941 = rsqrt(%940) /* ty=Tensor[(1, 4158), float64] */;
  %942 = cast(%941, dtype="int64") /* ty=Tensor[(1, 4158), int64] */;
  %943 = cast(%var_3341, dtype="int64") /* ty=int64 */;
  %944 = add(%942, %943) /* ty=Tensor[(1, 4158), int64] */;
  %945 = cast(%944, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
  %946 = %927.2;
  %947 = sin(%930) /* ty=Tensor[(1, 4158), float64] */;
  %948 = %935.3;
  %949 = maximum(%938, %939) /* ty=Tensor[(14, 5, 13), uint64] */;
  %950 = sqrt(%945) /* ty=Tensor[(1, 4158), float64] */;
  (%946, meta[relay.Constant][48] /* ty=Tensor[(770), float64] */, meta[relay.Constant][49] /* ty=Tensor[(144, 4), float64] */, %947, %948, %var_3342, %949, %950)
}

def @func_7493(%var_7457: Tensor[(3, 1386), float64]) -> (Tensor[(14, 5, 13), bool], Tensor[(14, 5, 13), bool], Tensor[(3, 1386), float64], Tensor[(6, 6, 14), uint8], Tensor[(504), float32], Tensor[(6, 11, 9), float64]) {
  %951 = cast(%var_7457, dtype="float64") /* ty=Tensor[(3, 1386), float64] */;
  %952 = cast(%var_7457, dtype="float64") /* ty=Tensor[(3, 1386), float64] */;
  %953 = reshape(%951, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
  %954 = reshape(%952, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
  %955 = @func_792(%953, %954) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) */;
  %956 = cast(meta[relay.Constant][50] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %957 = reshape(%956, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %958 = @func_1875(%957) /* ty=(Tensor[(770), float64], Tensor[(594), float64], Tensor[(6, 6, 14), uint8], Tensor[(594), float64]) */;
  %959 = @func_4019() /* ty=(Tensor[(6, 11, 9), float64],) */;
  %960 = @func_3407() /* ty=Tensor[(14, 5, 13), bool] */;
  %961 = %955.2;
  %962 = %958.2;
  %963 = %959.0;
  (%960, %961, %var_7457, %962, meta[relay.Constant][50] /* ty=Tensor[(504), float32] */, %963)
}

def @func_2647() -> (Tensor[(770), float64], Tensor[(14, 5, 13), bool]) {
  %964 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
  %965 = @func_1779() /* ty=Tensor[(770), float64] */;
  %966 = %964.0;
  (%965, %966)
}

def @func_7131() -> (Tensor[(910), int64],) {
  %967 = @func_5885() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 6, 14), float32]) */;
  %968 = %967.1;
  (%968,)
}

def @func_4209() -> (Tensor[(2925), bool], Tensor[(2925), bool], Tensor[(14, 5, 13), float64]) {
  %969 = cast(meta[relay.Constant][51] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %970 = reshape(%969, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
  %971 = @func_3954(%970) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], bool, Tensor[(2925), bool]) */;
  %972 = @func_3407() /* ty=Tensor[(14, 5, 13), bool] */;
  %973 = cast(%972, dtype="float64") /* ty=Tensor[(14, 5, 13), float64] */;
  %974 = %971.3;
  %975 = erf(%973) /* ty=Tensor[(14, 5, 13), float64] */;
  (%974, meta[relay.Constant][51] /* ty=Tensor[(2925), bool] */, %975)
}

def @func_8722() -> (Tensor[(6, 6, 14), float32],) {
  %976 = @func_2752() /* ty=Tensor[(6, 6, 14), float32] */;
  (%976,)
}

def @func_6495(%var_6479: Tensor[(11, 2, 11), float64]) -> Tensor[(11, 2, 11), float64] {
  %977 = cast(%var_6479, dtype="float64") /* ty=Tensor[(11, 2, 11), float64] */;
  rsqrt(%977) /* ty=Tensor[(11, 2, 11), float64] */
}

def @func_228(%var_213: Tensor[(6, 11, 9), float64]) -> Tensor[(6, 11, 9), float64] {
  %978 = cast(%var_213, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  %979 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(6, 11, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %980 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%980, %981) /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_2691() -> Tensor[(6, 6, 14), float32] {
  %982 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %982.0
}

def @func_2752() -> Tensor[(6, 6, 14), float32] {
  %983 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %983.3
}

def @func_2797() -> (Tensor[(6, 6, 14), float32],) {
  %984 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
  (%984,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7390(%var_7389: float32) -> (Tensor[(?, 14, 12), float32],) {
  %8 = fn (%var_7357: float32) -> (Tensor[(?, 14, 12), float32],) {
    %0 = cast(%var_7357, dtype="float32") /* ty=float32 */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
    %2 = power(%0, %1) /* ty=Tensor[(1, 14, 12), float32] */;
    %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
    %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
    %5 = cast(%2, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
    %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %7 = maximum(%5, %6) /* ty=Tensor[(?, 14, 12), float32] */;
    (%7,)
  };
  %8(%var_7389) /* ty=(Tensor[(?, 14, 12), float32],) */
}

def @func_9740() -> (Tensor[(6, 6, 14), float32],) {
  %11 = fn () -> (Tensor[(6, 6, 14), float32],) {
    %9 = @func_8964() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(504), float32]) */;
    %10 = %9.0;
    (%10,)
  };
  %11() /* ty=(Tensor[(6, 6, 14), float32],) */
}

def @func_7942() -> Tensor[(6, 6, 14), int32] {
  @func_7940() /* ty=Tensor[(6, 6, 14), int32] */
}

def @func_708(%var_707: Tensor[(910), int64]) -> (Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
  %21 = fn (%var_701: Tensor[(910), int64]) -> (Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
    %12 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %13 = %12.0;
    %14 = cast(%13, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %15 = cast(%var_701, dtype="int64") /* ty=Tensor[(910), int64] */;
    %16 = cast(%var_701, dtype="int64") /* ty=Tensor[(910), int64] */;
    %17 = reshape(%15, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %18 = reshape(%16, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %19 = erf(%14) /* ty=Tensor[(6, 6, 14), float32] */;
    %20 = @func_46(%17, %18) /* ty=Tensor[(14, 5, 13), bool] */;
    (%19, %20, %var_701)
  };
  %21(%var_707) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */
}

def @func_9319() -> (Tensor[(594), float64],) {
  %22 = @func_8549() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), bool], Tensor[(594), float64]) */;
  %23 = %22.2;
  (%23,)
}

def @func_3213() -> Tensor[(66, 9), float64] {
  %27 = fn () -> Tensor[(66, 9), float64] {
    %24 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
    %25 = %24.4;
    %26 = cast(%25, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
    log10(%26) /* ty=Tensor[(66, 9), float64] */
  };
  %27() /* ty=Tensor[(66, 9), float64] */
}

def @func_2932() -> Tensor[(6, 6, 14), float32] {
  @func_2930() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_4448() -> Tensor[(6, 6, 14), uint8] {
  @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */
}

def @func_7822() -> (Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) {
  %32 = fn () -> (Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) {
    %28 = @func_5070() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) */;
    %29 = @func_6197() /* ty=Tensor[(594), float64] */;
    %30 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
    %31 = %28.0;
    (%29, %30, %31)
  };
  %32() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */
}

def @func_9402(%var_9401: Tensor[(594), float64]) -> Tensor[(594), bool] {
  %39 = fn (%var_9393: Tensor[(594), float64]) -> Tensor[(594), bool] {
    %33 = @func_9319() /* ty=(Tensor[(594), float64],) */;
    %34 = %33.0;
    %35 = cast(%var_9393, dtype="bool") /* ty=Tensor[(594), bool] */;
    %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(1), int32] */;
    %37 = cast(%34, dtype="bool") /* ty=Tensor[(594), bool] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?), bool] */;
    equal(%37, %38) /* ty=Tensor[(594), bool] */
  };
  %39(%var_9401) /* ty=Tensor[(594), bool] */
}

def @func_3408() -> Tensor[(14, 5, 13), bool] {
  %41 = fn () -> Tensor[(14, 5, 13), bool] {
    %40 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
    %40.0
  };
  %41() /* ty=Tensor[(14, 5, 13), bool] */
}

def @func_6495(%var_6479: Tensor[(11, 2, 11), float64]) -> Tensor[(11, 2, 11), float64] {
  %42 = cast(%var_6479, dtype="float64") /* ty=Tensor[(11, 2, 11), float64] */;
  rsqrt(%42) /* ty=Tensor[(11, 2, 11), float64] */
}

def @func_7588(%var_7586: Tensor[(10, 13, 8), float64]) -> (Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float32]) {
  @func_7585(%var_7586) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float32]) */
}

def @func_792(%var_751: Tensor[(7, 594), float64], %var_767: Tensor[(7, 594), float64]) -> (Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) {
  %43 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %44 = %43.3;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(1, 594), float64] */;
  %46 = reshape(%45, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %47 = cast(%44, dtype="bool") /* ty=Tensor[(1, 594), bool] */;
  %48 = cast(%var_767, dtype="bool") /* ty=Tensor[(7, 594), bool] */;
  %49 = cast(meta[relay.Constant][1] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %50 = reshape(%49, newshape=[910]) /* ty=Tensor[(910), int64] */;
  %51 = @func_706(%50) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %52 = cast(%44, dtype="bool") /* ty=Tensor[(1, 594), bool] */;
  %53 = cast(%var_751, dtype="bool") /* ty=Tensor[(7, 594), bool] */;
  %54 = less_equal(%52, %53) /* ty=Tensor[(7, 594), bool] */;
  %55 = cast(%var_767, dtype="int32") /* ty=Tensor[(7, 594), int32] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(2), int32] */;
  %57 = cast(%54, dtype="int32") /* ty=Tensor[(7, 594), int32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %59 = @func_228(%46) /* ty=Tensor[(6, 11, 9), float64] */;
  %60 = equal(%47, %48) /* ty=Tensor[(7, 594), bool] */;
  %61 = %51.1;
  %62 = add(%57, %58) /* ty=Tensor[(7, 594), int32] */;
  (%59, %60, %61, meta[relay.Constant][1] /* ty=Tensor[(910), int64] */, %62)
}

def @func_1916(%var_1915: Tensor[(770), float64]) -> (Tensor[(770), float64], Tensor[(770), uint32]) {
  %70 = fn (%var_1906: Tensor[(770), float64]) -> (Tensor[(770), float64], Tensor[(770), uint32]) {
    %63 = @func_1779() /* ty=Tensor[(770), float64] */;
    %64 = cast(%var_1906, dtype="uint32") /* ty=Tensor[(770), uint32] */;
    %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(1), int32] */;
    %66 = cast(%63, dtype="uint32") /* ty=Tensor[(770), uint32] */;
    %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %68 = @func_1779() /* ty=Tensor[(770), float64] */;
    %69 = minimum(%66, %67) /* ty=Tensor[(770), uint32] */;
    (%68, %69)
  };
  %70(%var_1915) /* ty=(Tensor[(770), float64], Tensor[(770), uint32]) */
}

def @func_3137() -> Tensor[(6, 6, 14), float32] {
  %71 = fn () -> Tensor[(6, 6, 14), float32] {
    @func_1149() /* ty=Tensor[(6, 6, 14), float32] */
  };
  %71() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_1698() -> (Tensor[(6, 6, 14), float64],) {
  %72 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %73 = %72.4;
  (%73,)
}

def @func_4004(%var_4003: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), bool],) {
  %81 = fn (%var_3995: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), bool],) {
    %74 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
    %75 = %74.1;
    %76 = cast(%var_3995, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
    %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
    %78 = cast(%75, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
    %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %80 = equal(%78, %79) /* ty=Tensor[(6, 6, 14), bool] */;
    (%80,)
  };
  %81(%var_4003) /* ty=(Tensor[(6, 6, 14), bool],) */
}

def @func_1877(%var_1876: Tensor[(504), float32]) -> (Tensor[(770), float64], Tensor[(594), float64], Tensor[(6, 6, 14), uint8], Tensor[(594), float64]) {
  %97 = fn (%var_1801: Tensor[(504), float32]) -> (Tensor[(770), float64], Tensor[(594), float64], Tensor[(6, 6, 14), uint8], Tensor[(594), float64]) {
    %82 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
    %83 = cast(%var_1801, dtype="float32") /* ty=Tensor[(504), float32] */;
    %84 = reshape(%83, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
    %85 = @func_892(%84) /* ty=Tensor[(6, 6, 14), bool] */;
    %86 = cast(%85, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %87 = cosh(%86) /* ty=Tensor[(6, 6, 14), float32] */;
    %88 = cast(%var_1801, dtype="uint8") /* ty=Tensor[(504), uint8] */;
    %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
    %90 = cast(%87, dtype="uint8") /* ty=Tensor[(6, 6, 14), uint8] */;
    %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %92 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
    %93 = @func_1779() /* ty=Tensor[(770), float64] */;
    %94 = %82.2;
    %95 = add(%90, %91) /* ty=Tensor[(6, 6, 14), uint8] */;
    %96 = %92.2;
    (%93, %94, %95, %96)
  };
  %97(%var_1876) /* ty=(Tensor[(770), float64], Tensor[(594), float64], Tensor[(6, 6, 14), uint8], Tensor[(594), float64]) */
}

def @func_8248() -> (Tensor[(504), float32],) {
  %98 = @func_8026() /* ty=Tensor[(504), float32] */;
  (%98,)
}

def @func_8027() -> Tensor[(504), float32] {
  %100 = fn () -> Tensor[(504), float32] {
    %99 = @func_4699() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) */;
    %99.2
  };
  %100() /* ty=Tensor[(504), float32] */
}

def @func_4738() -> (Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool]) {
  @func_4736() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool]) */
}

def @func_8770() -> Tensor[(2925), float64] {
  %104 = fn () -> Tensor[(2925), float64] {
    %101 = @func_4209() /* ty=(Tensor[(2925), bool], Tensor[(2925), bool], Tensor[(14, 5, 13), float64]) */;
    %102 = %101.0;
    %103 = cast(%102, dtype="float64") /* ty=Tensor[(2925), float64] */;
    sqrt(%103) /* ty=Tensor[(2925), float64] */
  };
  %104() /* ty=Tensor[(2925), float64] */
}

def @func_9780() -> (Tensor[(594), float64], Tensor[(594), float64]) {
  %105 = @func_6197() /* ty=Tensor[(594), float64] */;
  %106 = @func_6197() /* ty=Tensor[(594), float64] */;
  (%105, %106)
}

def @func_7520(%var_7518: Tensor[(9, 16, 14), uint8], %var_7519: Tensor[(9, 16, 14), uint8]) -> (Tensor[(9, 16, 14), float32],) {
  @func_7516(%var_7518, %var_7519) /* ty=(Tensor[(9, 16, 14), float32],) */
}

def @func_7553() -> (Tensor[(6, 6, 14), float32],) {
  %108 = fn () -> (Tensor[(6, 6, 14), float32],) {
    %107 = @func_3136() /* ty=Tensor[(6, 6, 14), float32] */;
    (%107,)
  };
  %108() /* ty=(Tensor[(6, 6, 14), float32],) */
}

def @func_8454() -> (Tensor[(6, 6, 14), float64], Tensor[(910), int64], Tensor[(14, 5, 13), float64], Tensor[(1, 594), float64], Tensor[(6, 11, 9), float64]) {
  @func_8452() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(910), int64], Tensor[(14, 5, 13), float64], Tensor[(1, 594), float64], Tensor[(6, 11, 9), float64]) */
}

def @func_1337(%var_1335: Tensor[(594), float64], %var_1336: Tensor[(594), float64]) -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) {
  %130 = fn (%var_1282: Tensor[(594), float64], %var_1323: Tensor[(594), float64]) -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) {
    %109 = cast(%var_1282, dtype="float64") /* ty=Tensor[(594), float64] */;
    %110 = reshape(%109, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
    %111 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
    %112 = %111.1;
    %113 = cast(%112, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %114 = reshape(%113, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
    %115 = @func_1233(%114) /* ty=(Tensor[(6, 6, 14), int32],) */;
    %116 = %115.0;
    %117 = cast(%116, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
    %118 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
    %119 = cast(%112, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
    %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %121 = cast(%var_1282, dtype="float64") /* ty=Tensor[(594), float64] */;
    %122 = acos(%121) /* ty=Tensor[(594), float64] */;
    %123 = cast(%var_1323, dtype="int16") /* ty=Tensor[(594), int16] */;
    %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(1), int32] */;
    %125 = cast(%122, dtype="int16") /* ty=Tensor[(594), int16] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?), int16] */;
    %127 = @func_228(%110) /* ty=Tensor[(6, 11, 9), float64] */;
    %128 = less(%119, %120) /* ty=Tensor[(6, 6, 14), bool] */;
    %129 = right_shift(%125, %126) /* ty=Tensor[(594), int16] */;
    (%127, %128, %129)
  };
  %130(%var_1335, %var_1336) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */
}

def @func_5752() -> (Tensor[(770), float64], Tensor[(6, 11, 9), float64], Tensor[(14, 5, 13), bool], Tensor[(16, 594), float32], Tensor[(2, 288), float64], Tensor[(6, 11, 9), bool]) {
  @func_5750() /* ty=(Tensor[(770), float64], Tensor[(6, 11, 9), float64], Tensor[(14, 5, 13), bool], Tensor[(16, 594), float32], Tensor[(2, 288), float64], Tensor[(6, 11, 9), bool]) */
}

def @func_8081(%var_8068: Tensor[(6, 8, 2), float32], %var_8069: Tensor[(6, 8, 2), float32]) -> (Tensor[(6, 8, 2), float32], Tensor[(6, 8, 2), uint64]) {
  %131 = cast(%var_8069, dtype="float32") /* ty=Tensor[(6, 8, 2), float32] */;
  %132 = shape_of(%var_8068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%var_8068, dtype="float32") /* ty=Tensor[(6, 8, 2), float32] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %135 = cast(%var_8069, dtype="uint64") /* ty=Tensor[(6, 8, 2), uint64] */;
  %136 = shape_of(%var_8068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%var_8068, dtype="uint64") /* ty=Tensor[(6, 8, 2), uint64] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %139 = floor_mod(%133, %134) /* ty=Tensor[(6, 8, 2), float32] */;
  %140 = logical_xor(%137, %138) /* ty=Tensor[(6, 8, 2), uint64] */;
  (%139, %140)
}

def @func_3808(%var_3807: Tensor[(6, 6, 14), uint8]) -> (Tensor[(6, 6, 14), int8],) {
  %148 = fn (%var_3790: Tensor[(6, 6, 14), uint8]) -> (Tensor[(6, 6, 14), int8],) {
    %141 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
    %142 = %141.1;
    %143 = cast(%var_3790, dtype="int8") /* ty=Tensor[(6, 6, 14), int8] */;
    %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
    %145 = cast(%142, dtype="int8") /* ty=Tensor[(6, 6, 14), int8] */;
    %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %147 = logical_xor(%145, %146) /* ty=Tensor[(6, 6, 14), int8] */;
    (%147,)
  };
  %148(%var_3807) /* ty=(Tensor[(6, 6, 14), int8],) */
}

def @func_7624() -> Tensor[(6, 6, 14), float32] {
  @func_7622() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_2782() -> (Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool]) {
  %152 = fn () -> (Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool]) {
    %149 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
    %150 = @func_2187() /* ty=Tensor[(6, 6, 14), float64] */;
    %151 = %149.0;
    (%150, %151)
  };
  %152() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool]) */
}

def @func_8912() -> (Tensor[(594), float32],) {
  %154 = fn () -> (Tensor[(594), float32],) {
    %153 = @func_3161() /* ty=Tensor[(594), float32] */;
    (%153,)
  };
  %154() /* ty=(Tensor[(594), float32],) */
}

def @func_8452() -> (Tensor[(6, 6, 14), float64], Tensor[(910), int64], Tensor[(14, 5, 13), float64], Tensor[(1, 594), float64], Tensor[(6, 11, 9), float64]) {
  %155 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %156 = @func_7131() /* ty=(Tensor[(910), int64],) */;
  %157 = @func_7745() /* ty=(Tensor[(14, 5, 13), float64],) */;
  %158 = @func_914() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(1, 594), float64] */;
  %161 = %155.0;
  %162 = %156.0;
  %163 = %157.0;
  %164 = log10(%160) /* ty=Tensor[(1, 594), float64] */;
  %165 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
  (%161, %162, %163, %164, %165)
}

def @func_9639() -> (Tensor[(6, 6, 14), float64], Tensor[(770), float64], Tensor[(770), float64]) {
  %166 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %167 = cast(meta[relay.Constant][2] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
  %168 = reshape(%167, newshape=[770]) /* ty=Tensor[(770), float64] */;
  %169 = @func_1914(%168) /* ty=(Tensor[(770), float64], Tensor[(770), uint32]) */;
  %170 = %166.0;
  %171 = %169.0;
  (%170, %171, meta[relay.Constant][2] /* ty=Tensor[(770), float64] */)
}

def @func_6166(%var_6128: int8) -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), float32], int8) {
  %172 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %173 = cast(%var_6128, dtype="int8") /* ty=int8 */;
  %174 = reshape(%173, newshape=[]) /* ty=int8 */;
  %175 = @func_3741(%174) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], int8, Tensor[(528), int8]) */;
  %176 = %172.4;
  %177 = %175.1;
  (%176, %177, %var_6128)
}

def @func_7149() -> Tensor[(6, 11, 9), float32] {
  %178 = @func_4166() /* ty=(Tensor[(6, 11, 9), float32],) */;
  %178.0
}

def @func_6385() -> (Tensor[(14, 5, 13), bool],) {
  %179 = @func_4736() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool]) */;
  %180 = %179.1;
  (%180,)
}

def @func_1233(%var_1225: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), int32],) {
  %181 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %182 = %181.3;
  %183 = cast(%var_1225, dtype="int32") /* ty=Tensor[(6, 6, 14), int32] */;
  %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%182, dtype="int32") /* ty=Tensor[(6, 6, 14), int32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %187 = subtract(%185, %186) /* ty=Tensor[(6, 6, 14), int32] */;
  (%187,)
}

def @func_7985(%var_7984: Tensor[(1, 13, 14), float32]) -> (Tensor[(1, 13, 14), float32], Tensor[(770), float64]) {
  %192 = fn (%var_7970: Tensor[(1, 13, 14), float32]) -> (Tensor[(1, 13, 14), float32], Tensor[(770), float64]) {
    %188 = cast(%var_7970, dtype="float32") /* ty=Tensor[(1, 13, 14), float32] */;
    %189 = @func_5200() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(770), float64]) */;
    %190 = asinh(%188) /* ty=Tensor[(1, 13, 14), float32] */;
    %191 = %189.1;
    (%190, %191)
  };
  %192(%var_7984) /* ty=(Tensor[(1, 13, 14), float32], Tensor[(770), float64]) */
}

def @func_915() -> (Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) {
  %197 = fn () -> (Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) {
    %193 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
    %194 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
    %195 = %193.3;
    %196 = %194.0;
    (%195, %196)
  };
  %197() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */
}

def @func_4736() -> (Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool]) {
  %198 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %199 = @func_2647() /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), bool]) */;
  %200 = %198.0;
  %201 = %199.1;
  (%200, %201)
}

def @func_231(%var_229: Tensor[(6, 11, 9), float64]) -> Tensor[(6, 11, 9), float64] {
  @func_228(%var_229) /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_2149() -> (Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) {
  %217 = fn () -> (Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) {
    %202 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
    %203 = cast(%202, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
    %204 = cast(meta[relay.Constant][3] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %205 = cast(meta[relay.Constant][3] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %206 = reshape(%204, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %207 = reshape(%205, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %208 = cast(meta[relay.Constant][4] /* ty=Tensor[(66, 9), float64] */, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
    %209 = reshape(%208, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
    %210 = cast(%202, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %211 = reshape(%210, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
    %212 = @func_1233(%211) /* ty=(Tensor[(6, 6, 14), int32],) */;
    %213 = sin(%203) /* ty=Tensor[(6, 6, 14), float64] */;
    %214 = @func_46(%206, %207) /* ty=Tensor[(14, 5, 13), bool] */;
    %215 = @func_228(%209) /* ty=Tensor[(6, 11, 9), float64] */;
    %216 = %212.0;
    (%213, %214, meta[relay.Constant][3] /* ty=Tensor[(910), int64] */, %215, meta[relay.Constant][4] /* ty=Tensor[(66, 9), float64] */, %216)
  };
  %217() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */
}

def @func_2572(%var_2570: bool, %var_2571: Tensor[(15, 13, 15), bool]) -> (Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) {
  %234 = fn (%var_2495: bool, %var_2496: Tensor[(15, 13, 15), bool]) -> (Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) {
    %218 = cast(%var_2495, dtype="bool") /* ty=bool */;
    %219 = cast(%var_2496, dtype="bool") /* ty=Tensor[(15, 13, 15), bool] */;
    %220 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
    %221 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
    %222 = %221.4;
    %223 = cast(%var_2495, dtype="bool") /* ty=bool */;
    %224 = cast(%222, dtype="bool") /* ty=Tensor[(66, 9), bool] */;
    %225 = not_equal(%223, %224) /* ty=Tensor[(66, 9), bool] */;
    %226 = cast(%225, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
    %227 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
    %228 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
    %229 = logical_and(%218, %219) /* ty=Tensor[(15, 13, 15), bool] */;
    %230 = %220.4;
    %231 = atan(%226) /* ty=Tensor[(66, 9), float32] */;
    %232 = %227.3;
    %233 = %228.3;
    (%229, %230, %231, %232, %233)
  };
  %234(%var_2570, %var_2571) /* ty=(Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) */
}

def @func_5334() -> Tensor[(594), float32] {
  %235 = @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */;
  %235.0
}

def @func_7036() -> (Tensor[(6, 6, 14), float32],) {
  %238 = fn () -> (Tensor[(6, 6, 14), float32],) {
    %236 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %237 = %236.0;
    (%237,)
  };
  %238() /* ty=(Tensor[(6, 6, 14), float32],) */
}

def @func_7353() -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) {
  @func_7351() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) */
}

def @func_5886() -> (Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 6, 14), float32]) {
  %245 = fn () -> (Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 6, 14), float32]) {
    %239 = @func_2781() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool]) */;
    %240 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
    %241 = @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
    %242 = %239.1;
    %243 = %240.2;
    %244 = %241.0;
    (%242, %243, %244)
  };
  %245() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 6, 14), float32]) */
}

def @func_7516(%var_7497: Tensor[(9, 16, 14), uint8], %var_7498: Tensor[(9, 16, 14), uint8]) -> (Tensor[(9, 16, 14), float32],) {
  %246 = cast(%var_7498, dtype="uint8") /* ty=Tensor[(9, 16, 14), uint8] */;
  %247 = shape_of(%var_7497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%var_7497, dtype="uint8") /* ty=Tensor[(9, 16, 14), uint8] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %250 = bitwise_or(%248, %249) /* ty=Tensor[(9, 16, 14), uint8] */;
  %251 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 16, 14), uint8] */, dtype="float32") /* ty=Tensor[(9, 16, 14), float32] */;
  %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%250, dtype="float32") /* ty=Tensor[(9, 16, 14), float32] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %255 = divide(%253, %254) /* ty=Tensor[(9, 16, 14), float32] */;
  (%255,)
}

def @func_4433() -> Tensor[(14, 5, 13), bool] {
  @func_3407() /* ty=Tensor[(14, 5, 13), bool] */
}

def @func_1236(%var_1234: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), int32],) {
  @func_1233(%var_1234) /* ty=(Tensor[(6, 6, 14), int32],) */
}

def @func_8004() -> Tensor[(6, 6, 14), int32] {
  @func_8002() /* ty=Tensor[(6, 6, 14), int32] */
}

def @func_8148(%var_8146: Tensor[(4158), float64], %var_8147: Tensor[(975, 3), bool]) -> (Tensor[(6, 6, 14), int32], Tensor[(150, 10), float32], Tensor[(975, 3), bool], Tensor[(4158), float64], Tensor[(770), float64], Tensor[(910), int64]) {
  @func_8144(%var_8146, %var_8147) /* ty=(Tensor[(6, 6, 14), int32], Tensor[(150, 10), float32], Tensor[(975, 3), bool], Tensor[(4158), float64], Tensor[(770), float64], Tensor[(910), int64]) */
}

def @func_4302() -> (Tensor[(6, 6, 14), float64],) {
  %256 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %257 = %256.1;
  %258 = cast(%257, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %259 = atan(%258) /* ty=Tensor[(6, 6, 14), float64] */;
  (%259,)
}

def @func_2189() -> Tensor[(6, 6, 14), float64] {
  @func_2187() /* ty=Tensor[(6, 6, 14), float64] */
}

def @func_3583(%var_3581: Tensor[(4158), float64], %var_3582: Tensor[(2925), bool]) -> (Tensor[(6, 6, 14), int32], Tensor[(576), float64], Tensor[(4158), float64], bool, Tensor[(2925), bool], Tensor[(594), float64], Tensor[(150, 10), float32]) {
  @func_3579(%var_3581, %var_3582) /* ty=(Tensor[(6, 6, 14), int32], Tensor[(576), float64], Tensor[(4158), float64], bool, Tensor[(2925), bool], Tensor[(594), float64], Tensor[(150, 10), float32]) */
}

def @func_4346() -> Tensor[(6, 11, 9), float64] {
  %260 = @func_4059() /* ty=Tensor[(6, 11, 9), float64] */;
  %261 = cast(%260, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %262 = sigmoid(%261) /* ty=Tensor[(6, 11, 9), float32] */;
  %263 = cast(%262, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  sqrt(%263) /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_2649() -> (Tensor[(770), float64], Tensor[(14, 5, 13), bool]) {
  @func_2647() /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), bool]) */
}

def @func_7110() -> (Tensor[(770), float64], Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) {
  @func_7108() /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */
}

def @func_7646() -> (Tensor[(6, 11, 9), float64],) {
  %264 = @func_7195() /* ty=Tensor[(6, 11, 9), float64] */;
  (%264,)
}

def @func_2992(%var_2991: Tensor[(15, 10, 10), float32]) -> (Tensor[(15, 10, 10), float32], Tensor[(6, 6, 14), float32], Tensor[(594), float64]) {
  %271 = fn (%var_2982: Tensor[(15, 10, 10), float32]) -> (Tensor[(15, 10, 10), float32], Tensor[(6, 6, 14), float32], Tensor[(594), float64]) {
    %265 = cast(%var_2982, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
    %266 = cast(meta[relay.Constant][6] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
    %267 = reshape(%266, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
    %268 = @func_2331(%267) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), bool]) */;
    %269 = sinh(%265) /* ty=Tensor[(15, 10, 10), float32] */;
    %270 = %268.0;
    (%269, %270, meta[relay.Constant][6] /* ty=Tensor[(594), float64] */)
  };
  %271(%var_2991) /* ty=(Tensor[(15, 10, 10), float32], Tensor[(6, 6, 14), float32], Tensor[(594), float64]) */
}

def @func_7955() -> (Tensor[(6, 6, 14), uint8], Tensor[(910), int64]) {
  %276 = fn () -> (Tensor[(6, 6, 14), uint8], Tensor[(910), int64]) {
    %272 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
    %273 = @func_7131() /* ty=(Tensor[(910), int64],) */;
    %274 = %272.1;
    %275 = %273.0;
    (%274, %275)
  };
  %276() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(910), int64]) */
}

def @func_2032() -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) {
  @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */
}

def @func_5307(%var_5305: int8, %var_5306: Tensor[(24, 396), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(910), int64], Tensor[(528), int8], int8, Tensor[(576), float64], Tensor[(1188), float32], Tensor[(16, 594), float32], Tensor[(24, 396), float64]) {
  %298 = fn (%var_5259: int8, %var_5291: Tensor[(24, 396), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(910), int64], Tensor[(528), int8], int8, Tensor[(576), float64], Tensor[(1188), float32], Tensor[(16, 594), float32], Tensor[(24, 396), float64]) {
    %277 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
    %278 = cast(%var_5259, dtype="int8") /* ty=int8 */;
    %279 = reshape(%278, newshape=[]) /* ty=int8 */;
    %280 = @func_3741(%279) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], int8, Tensor[(528), int8]) */;
    %281 = cast(meta[relay.Constant][7] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %282 = reshape(%281, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %283 = @func_3102(%282) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(594), float64], Tensor[(1500), float32], Tensor[(16, 594), float32], Tensor[(1584, 6), float64], Tensor[(1188), float64], Tensor[(6, 11, 9), float64], Tensor[(576), float64]) */;
    %284 = %283.5;
    %285 = cast(%284, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %286 = cast(%var_5291, dtype="float64") /* ty=Tensor[(24, 396), float64] */;
    %287 = cast(%var_5291, dtype="bool") /* ty=Tensor[(24, 396), bool] */;
    %288 = acos(%285) /* ty=Tensor[(1188), float32] */;
    %289 = cast(%288, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %290 = reshape(%286, newshape=[16, 594]) /* ty=Tensor[(16, 594), float64] */;
    %291 = reshape(%287, newshape=[16, 594]) /* ty=Tensor[(16, 594), bool] */;
    %292 = reshape(%289, newshape=[2, 594]) /* ty=Tensor[(2, 594), float64] */;
    %293 = @func_2484(%290, %291, %292) /* ty=(Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) */;
    %294 = @func_3772() /* ty=Tensor[(6, 6, 14), float32] */;
    %295 = %277.5;
    %296 = %280.4;
    %297 = %293.1;
    (%294, %295, %296, %var_5259, meta[relay.Constant][7] /* ty=Tensor[(576), float64] */, %288, %297, %var_5291)
  };
  %298(%var_5305, %var_5306) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(910), int64], Tensor[(528), int8], int8, Tensor[(576), float64], Tensor[(1188), float32], Tensor[(16, 594), float32], Tensor[(24, 396), float64]) */
}

def @func_3163() -> Tensor[(594), float32] {
  @func_3161() /* ty=Tensor[(594), float32] */
}

def @func_8724() -> (Tensor[(6, 6, 14), float32],) {
  @func_8722() /* ty=(Tensor[(6, 6, 14), float32],) */
}

def @func_9457() -> Tensor[(6, 6, 14), float32] {
  @func_9455() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_5027() -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) {
  @func_5025() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) */
}

def @func_5202() -> (Tensor[(6, 6, 14), int32], Tensor[(770), float64]) {
  @func_5200() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(770), float64]) */
}

def @func_6387() -> (Tensor[(14, 5, 13), bool],) {
  @func_6385() /* ty=(Tensor[(14, 5, 13), bool],) */
}

def @func_8002() -> Tensor[(6, 6, 14), int32] {
  %299 = @func_5025() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) */;
  %299.1
}

def @func_2187() -> Tensor[(6, 6, 14), float64] {
  %300 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %301 = %300.0;
  %302 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 6, 14), float64] */, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %306 = floor_divide(%304, %305) /* ty=Tensor[(6, 6, 14), float32] */;
  %307 = cast(%306, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  log10(%307) /* ty=Tensor[(6, 6, 14), float64] */
}

def @func_2331(%var_2309: Tensor[(6, 11, 9), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), bool]) {
  %308 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %309 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %310 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %311 = %310.2;
  %312 = cast(%var_2309, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %313 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%311, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %316 = %308.1;
  %317 = %309.0;
  %318 = less_equal(%314, %315) /* ty=Tensor[(6, 11, 9), bool] */;
  (%316, %317, %318)
}

def @func_1700() -> (Tensor[(6, 6, 14), float64],) {
  @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */
}

def @func_3105(%var_3103: Tensor[(576), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(594), float64], Tensor[(1500), float32], Tensor[(16, 594), float32], Tensor[(1584, 6), float64], Tensor[(1188), float64], Tensor[(6, 11, 9), float64], Tensor[(576), float64]) {
  @func_3102(%var_3103) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(594), float64], Tensor[(1500), float32], Tensor[(16, 594), float32], Tensor[(1584, 6), float64], Tensor[(1188), float64], Tensor[(6, 11, 9), float64], Tensor[(576), float64]) */
}

def @func_8966() -> (Tensor[(6, 6, 14), float32], Tensor[(504), float32]) {
  @func_8964() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(504), float32]) */
}

def @func_2753() -> Tensor[(6, 6, 14), float32] {
  %320 = fn () -> Tensor[(6, 6, 14), float32] {
    %319 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
    %319.3
  };
  %320() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_5847() -> (Tensor[(594), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), uint64], Tensor[(6, 6, 14), uint64], int8, Tensor[(128), uint8], Tensor[(256), uint8], int8, Tensor[(4158), float64]) {
  %321 = @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */;
  %322 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %323 = %322.0;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %325 = reshape(%324, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %326 = cast(%323, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %327 = reshape(%326, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %328 = cast(meta[relay.Constant][9] /* ty=Tensor[(128), uint8] */, dtype="uint8") /* ty=Tensor[(128), uint8] */;
  %329 = cast(meta[relay.Constant][10] /* ty=Tensor[(256), uint8] */, dtype="uint8") /* ty=Tensor[(256), uint8] */;
  %330 = cast(meta[relay.Constant][11] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %331 = cast(meta[relay.Constant][12] /* ty=Tensor[(4158), float64] */, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %332 = reshape(%328, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), uint8] */;
  %333 = reshape(%329, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), uint8] */;
  %334 = reshape(%330, newshape=[]) /* ty=int8 */;
  %335 = reshape(%331, newshape=[189, 22]) /* ty=Tensor[(189, 22), float64] */;
  %336 = @func_4963(%332, %333, %334, %335) /* ty=(Tensor[(16, 2, 8), float64], Tensor[(6, 6, 14), float32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(189, 22), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %337 = %321.1;
  %338 = @func_2729(%325) /* ty=Tensor[(6, 6, 14), uint64] */;
  %339 = @func_2729(%327) /* ty=Tensor[(6, 6, 14), uint64] */;
  %340 = %336.3;
  (%337, %323, %338, %339, %340, meta[relay.Constant][9] /* ty=Tensor[(128), uint8] */, meta[relay.Constant][10] /* ty=Tensor[(256), uint8] */, meta[relay.Constant][11] /* ty=int8 */, meta[relay.Constant][12] /* ty=Tensor[(4158), float64] */)
}

def @func_8572() -> Tensor[(6, 6, 14), float64] {
  @func_8570() /* ty=Tensor[(6, 6, 14), float64] */
}

def @func_540() -> (Tensor[(6, 6, 14), float32],) {
  %343 = fn () -> (Tensor[(6, 6, 14), float32],) {
    %341 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %342 = atanh(%341) /* ty=Tensor[(6, 6, 14), float32] */;
    (%342,)
  };
  %343() /* ty=(Tensor[(6, 6, 14), float32],) */
}

def @func_2732(%var_2730: Tensor[(6, 6, 14), float32]) -> Tensor[(6, 6, 14), uint64] {
  @func_2729(%var_2730) /* ty=Tensor[(6, 6, 14), uint64] */
}

def @func_4138() -> Tensor[(594), float64] {
  @func_4136() /* ty=Tensor[(594), float64] */
}

def @func_6199() -> Tensor[(594), float64] {
  @func_6197() /* ty=Tensor[(594), float64] */
}

def @func_2917() -> Tensor[(770), float64] {
  %344 = fn () -> Tensor[(770), float64] {
    @func_1779() /* ty=Tensor[(770), float64] */
  };
  %344() /* ty=Tensor[(770), float64] */
}

def @func_7422() -> (Tensor[(770), float64], Tensor[(770), float64]) {
  %348 = fn () -> (Tensor[(770), float64], Tensor[(770), float64]) {
    %345 = @func_2433() /* ty=(Tensor[(770), float64],) */;
    %346 = %345.0;
    %347 = @func_1779() /* ty=Tensor[(770), float64] */;
    (%346, %347)
  };
  %348() /* ty=(Tensor[(770), float64], Tensor[(770), float64]) */
}

def @func_2488(%var_2485: Tensor[(16, 594), float64], %var_2486: Tensor[(16, 594), bool], %var_2487: Tensor[(2, 594), float64]) -> (Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) {
  %367 = fn (%var_2446: Tensor[(16, 594), float64], %var_2468: Tensor[(16, 594), bool], %var_2473: Tensor[(2, 594), float64]) -> (Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) {
    %349 = @func_914() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */;
    %350 = %349.0;
    %351 = cast(%var_2446, dtype="float32") /* ty=Tensor[(16, 594), float32] */;
    %352 = asin(%351) /* ty=Tensor[(16, 594), float32] */;
    %353 = cast(%350, dtype="bool") /* ty=Tensor[(1, 594), bool] */;
    %354 = cast(%352, dtype="bool") /* ty=Tensor[(16, 594), bool] */;
    %355 = cast(%350, dtype="bool") /* ty=Tensor[(1, 594), bool] */;
    %356 = cast(%var_2446, dtype="bool") /* ty=Tensor[(16, 594), bool] */;
    %357 = less(%355, %356) /* ty=Tensor[(16, 594), bool] */;
    %358 = cast(%var_2468, dtype="float32") /* ty=Tensor[(16, 594), float32] */;
    %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(2), int32] */;
    %360 = cast(%357, dtype="float32") /* ty=Tensor[(16, 594), float32] */;
    %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %362 = cast(%350, dtype="float64") /* ty=Tensor[(1, 594), float64] */;
    %363 = cast(%var_2473, dtype="float64") /* ty=Tensor[(2, 594), float64] */;
    %364 = greater(%353, %354) /* ty=Tensor[(16, 594), bool] */;
    %365 = minimum(%360, %361) /* ty=Tensor[(16, 594), float32] */;
    %366 = divide(%362, %363) /* ty=Tensor[(2, 594), float64] */;
    (%364, %365, %366)
  };
  %367(%var_2485, %var_2486, %var_2487) /* ty=(Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) */
}

def @func_7314() -> Tensor[(14, 5, 13), bool] {
  %369 = fn () -> Tensor[(14, 5, 13), bool] {
    %368 = @func_6385() /* ty=(Tensor[(14, 5, 13), bool],) */;
    %368.0
  };
  %369() /* ty=Tensor[(14, 5, 13), bool] */
}

def @func_2854(%var_2849: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), uint32],) {
  %370 = @func_2797() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %371 = %370.0;
  %372 = cast(%var_2849, dtype="uint32") /* ty=Tensor[(6, 6, 14), uint32] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(%371, dtype="uint32") /* ty=Tensor[(6, 6, 14), uint32] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %376 = bitwise_or(%374, %375) /* ty=Tensor[(6, 6, 14), uint32] */;
  (%376,)
}

def @func_7351() -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) {
  %377 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %378 = @func_7195() /* ty=Tensor[(6, 11, 9), float64] */;
  %379 = %377.0;
  (%378, %379)
}

def @func_3287() -> (Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) {
  %384 = fn () -> (Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) {
    %380 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
    %381 = @func_2781() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool]) */;
    %382 = %380.5;
    %383 = %381.0;
    (%382, %383)
  };
  %384() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) */
}

def @func_1478(%var_1476: int8, %var_1477: Tensor[(11, 8, 6), int8]) -> Tensor[(11, 8, 6), bool] {
  %387 = fn (%var_1470: int8, %var_1471: Tensor[(11, 8, 6), int8]) -> Tensor[(11, 8, 6), bool] {
    %385 = cast(%var_1470, dtype="bool") /* ty=bool */;
    %386 = cast(%var_1471, dtype="bool") /* ty=Tensor[(11, 8, 6), bool] */;
    greater(%385, %386) /* ty=Tensor[(11, 8, 6), bool] */
  };
  %387(%var_1476, %var_1477) /* ty=Tensor[(11, 8, 6), bool] */
}

def @func_1249() -> Tensor[(6, 6, 14), float32] {
  @func_1247() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_6169(%var_6167: int8) -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), float32], int8) {
  @func_6166(%var_6167) /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), float32], int8) */
}

def @func_3293() -> (Tensor[(6, 6, 14), int32],) {
  %390 = fn () -> (Tensor[(6, 6, 14), int32],) {
    %388 = @func_2087() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), int32], Tensor[(594), float32], Tensor[(770), float64], Tensor[(6, 11, 9), float64]) */;
    %389 = %388.1;
    (%389,)
  };
  %390() /* ty=(Tensor[(6, 6, 14), int32],) */
}

def @func_5025() -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) {
  %391 = @func_4772() /* ty=(Tensor[(6, 11, 9), float64],) */;
  %392 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %393 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %394 = cast(meta[relay.Constant][14] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %395 = reshape(%393, newshape=[]) /* ty=bool */;
  %396 = reshape(%394, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), bool] */;
  %397 = @func_2569(%395, %396) /* ty=(Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) */;
  %398 = %391.0;
  %399 = %392.0;
  %400 = %397.1;
  (%398, %399, %400, True /* ty=bool */, meta[relay.Constant][14] /* ty=Tensor[(2925), bool] */)
}

def @func_6547(%var_6545: Tensor[(4, 15, 3), float32], %var_6546: Tensor[(1188), float64]) -> (Tensor[(4, 15, 3), float32], Tensor[(16, 594), float32], Tensor[(9504), float64], Tensor[(1188), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), uint64]) {
  @func_6543(%var_6545, %var_6546) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(16, 594), float32], Tensor[(9504), float64], Tensor[(1188), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), uint64]) */
}

def @func_9052(%var_9050: Tensor[(2, 1008), uint8]) -> (Tensor[(6, 6, 14), int32], Tensor[(9, 16, 14), float32], Tensor[(2, 1008), uint8]) {
  @func_9049(%var_9050) /* ty=(Tensor[(6, 6, 14), int32], Tensor[(9, 16, 14), float32], Tensor[(2, 1008), uint8]) */
}

def @func_8250() -> (Tensor[(504), float32],) {
  @func_8248() /* ty=(Tensor[(504), float32],) */
}

def @func_8807() -> (Tensor[(6, 6, 14), float32], Tensor[(770), float64]) {
  %405 = fn () -> (Tensor[(6, 6, 14), float32], Tensor[(770), float64]) {
    %401 = @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
    %402 = @func_7108() /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
    %403 = %401.0;
    %404 = %402.0;
    (%403, %404)
  };
  %405() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64]) */
}

def @func_892(%var_887: Tensor[(6, 6, 14), float32]) -> Tensor[(6, 6, 14), bool] {
  %406 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %407 = %406.1;
  %408 = cast(%var_887, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %409 = shape_of(%407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%407, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%410, %411) /* ty=Tensor[(6, 6, 14), bool] */
}

def @func_3579(%var_3556: Tensor[(4158), float64], %var_3558: Tensor[(2925), bool]) -> (Tensor[(6, 6, 14), int32], Tensor[(576), float64], Tensor[(4158), float64], bool, Tensor[(2925), bool], Tensor[(594), float64], Tensor[(150, 10), float32]) {
  %412 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %413 = cast(%var_3556, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %414 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %415 = cast(%var_3558, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %416 = reshape(%413, newshape=[1, 4158]) /* ty=Tensor[(1, 4158), float64] */;
  %417 = reshape(%414, newshape=[]) /* ty=bool */;
  %418 = reshape(%415, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
  %419 = @func_3372(%416, %417, %418) /* ty=(Tensor[(576), float64], Tensor[(770), float64], Tensor[(144, 4), float64], Tensor[(1, 4158), float64], Tensor[(1, 594), float64], Tensor[(2925), bool], Tensor[(14, 5, 13), uint64], Tensor[(1, 4158), float64]) */;
  %420 = cast(meta[relay.Constant][15] /* ty=Tensor[(150, 10), float32] */, dtype="float32") /* ty=Tensor[(150, 10), float32] */;
  %421 = reshape(%420, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float32] */;
  %422 = @func_2990(%421) /* ty=(Tensor[(15, 10, 10), float32], Tensor[(6, 6, 14), float32], Tensor[(594), float64]) */;
  %423 = %412.0;
  %424 = %419.0;
  %425 = %422.2;
  (%423, %424, %var_3556, False /* ty=bool */, %var_3558, %425, meta[relay.Constant][15] /* ty=Tensor[(150, 10), float32] */)
}

def @func_6985() -> Tensor[(6, 6, 14), uint8] {
  %426 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %426.1
}

def @func_9121() -> (Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32]) {
  %436 = fn () -> (Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32]) {
    %427 = @func_7821() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
    %428 = %427.0;
    %429 = cast(%428, dtype="float64") /* ty=Tensor[(594), float64] */;
    %430 = @func_4772() /* ty=(Tensor[(6, 11, 9), float64],) */;
    %431 = @func_8651() /* ty=(Tensor[(6, 6, 14), int32],) */;
    %432 = log(%429) /* ty=Tensor[(594), float64] */;
    %433 = @func_7940() /* ty=Tensor[(6, 6, 14), int32] */;
    %434 = %430.0;
    %435 = %431.0;
    (%432, %433, %434, %435)
  };
  %436() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32]) */
}

def @func_2334(%var_2332: Tensor[(6, 11, 9), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), bool]) {
  @func_2331(%var_2332) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), bool]) */
}

def @func_9470() -> Tensor[(6, 11, 9), float64] {
  %437 = @func_9120() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %437.2
}

def @func_605(%var_603: Tensor[(9, 16, 4), float64], %var_604: Tensor[(594), float64]) -> (Tensor[(9, 16, 4), float64], Tensor[(9, 16, 4), float64], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
  %455 = fn (%var_570: Tensor[(9, 16, 4), float64], %var_584: Tensor[(594), float64]) -> (Tensor[(9, 16, 4), float64], Tensor[(9, 16, 4), float64], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
    %438 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 16, 4), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
    %439 = shape_of(%var_570, dtype="int32") /* ty=Tensor[(3), int32] */;
    %440 = cast(%var_570, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
    %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %442 = cast(%var_570, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
    %443 = cast(%var_584, dtype="float64") /* ty=Tensor[(594), float64] */;
    %444 = reshape(%443, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
    %445 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %446 = cast(meta[relay.Constant][17] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %447 = cast(meta[relay.Constant][17] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %448 = reshape(%446, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %449 = reshape(%447, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %450 = mod(%440, %441) /* ty=Tensor[(9, 16, 4), float64] */;
    %451 = erf(%442) /* ty=Tensor[(9, 16, 4), float64] */;
    %452 = @func_228(%444) /* ty=Tensor[(6, 11, 9), float64] */;
    %453 = %445.0;
    %454 = @func_46(%448, %449) /* ty=Tensor[(14, 5, 13), bool] */;
    (%450, %451, %452, %var_584, %453, %454, meta[relay.Constant][17] /* ty=Tensor[(910), int64] */)
  };
  %455(%var_603, %var_604) /* ty=(Tensor[(9, 16, 4), float64], Tensor[(9, 16, 4), float64], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */
}

def @func_8144(%var_8128: Tensor[(4158), float64], %var_8129: Tensor[(975, 3), bool]) -> (Tensor[(6, 6, 14), int32], Tensor[(150, 10), float32], Tensor[(975, 3), bool], Tensor[(4158), float64], Tensor[(770), float64], Tensor[(910), int64]) {
  %456 = @func_5025() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) */;
  %457 = cast(%var_8128, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %458 = cast(%var_8129, dtype="bool") /* ty=Tensor[(975, 3), bool] */;
  %459 = reshape(%457, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %460 = reshape(%458, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
  %461 = @func_3579(%459, %460) /* ty=(Tensor[(6, 6, 14), int32], Tensor[(576), float64], Tensor[(4158), float64], bool, Tensor[(2925), bool], Tensor[(594), float64], Tensor[(150, 10), float32]) */;
  %462 = cast(%var_8128, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %463 = cast(%var_8128, dtype="float64") /* ty=Tensor[(4158), float64] */;
  %464 = cast(meta[relay.Constant][18] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
  %465 = reshape(%463, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
  %466 = reshape(%464, newshape=[910]) /* ty=Tensor[(910), int64] */;
  %467 = @func_4656(%465, %466) /* ty=(Tensor[(770), float64], Tensor[(4158), float64], bool, Tensor[(6, 6, 14), uint8], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(770), float32]) */;
  %468 = %456.1;
  %469 = %461.6;
  %470 = log10(%462) /* ty=Tensor[(4158), float64] */;
  %471 = %467.0;
  (%468, %469, %var_8129, %470, %471, meta[relay.Constant][18] /* ty=Tensor[(910), int64] */)
}

def @func_3903() -> Tensor[(14, 5, 13), bool] {
  %473 = fn () -> Tensor[(14, 5, 13), bool] {
    %472 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
    %472.1
  };
  %473() /* ty=Tensor[(14, 5, 13), bool] */
}

def @func_49(%var_47: Tensor[(14, 5, 13), int64], %var_48: Tensor[(14, 5, 13), int64]) -> Tensor[(14, 5, 13), bool] {
  %478 = fn (%var_11: Tensor[(14, 5, 13), int64], %var_12: Tensor[(14, 5, 13), int64]) -> Tensor[(14, 5, 13), bool] {
    %474 = cast(%var_12, dtype="bool") /* ty=Tensor[(14, 5, 13), bool] */;
    %475 = shape_of(%var_11, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%var_11, dtype="bool") /* ty=Tensor[(14, 5, 13), bool] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%476, %477) /* ty=Tensor[(14, 5, 13), bool] */
  };
  %478(%var_47, %var_48) /* ty=Tensor[(14, 5, 13), bool] */
}

def @func_5325() -> (Tensor[(6, 11, 9), float32],) {
  %481 = fn () -> (Tensor[(6, 11, 9), float32],) {
    %479 = @func_4166() /* ty=(Tensor[(6, 11, 9), float32],) */;
    %480 = %479.0;
    (%480,)
  };
  %481() /* ty=(Tensor[(6, 11, 9), float32],) */
}

def @func_3744(%var_3742: int8) -> (Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], int8, Tensor[(528), int8]) {
  @func_3741(%var_3742) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], int8, Tensor[(528), int8]) */
}

def @func_6896(%var_6894: Tensor[(66, 9), float64], %var_6895: Tensor[(66, 9), float32]) -> (Tensor[(66, 9), int8], Tensor[(14, 5, 13), bool]) {
  @func_6892(%var_6894, %var_6895) /* ty=(Tensor[(66, 9), int8], Tensor[(14, 5, 13), bool]) */
}

def @func_8673() -> (Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32]) {
  %487 = fn () -> (Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32]) {
    %482 = @func_8651() /* ty=(Tensor[(6, 6, 14), int32],) */;
    %483 = @func_2797() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %484 = %482.0;
    %485 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
    %486 = %483.0;
    (%484, %485, %486)
  };
  %487() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32]) */
}

def @func_1598() -> (Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
  %508 = fn () -> (Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
    %488 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %489 = cast(meta[relay.Constant][19] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
    %490 = cast(meta[relay.Constant][21] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %491 = cast(meta[relay.Constant][20] /* ty=Tensor[(4158), float64] */, dtype="float64") /* ty=Tensor[(4158), float64] */;
    %492 = reshape(%489, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float64] */;
    %493 = reshape(%490, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %494 = reshape(%491, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
    %495 = @func_1387(%492, %493, %494) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */;
    %496 = %495.1;
    %497 = cast(%496, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
    %498 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(576), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %499 = cast(meta[relay.Constant][21] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?), float64] */;
    %501 = cast(meta[relay.Constant][22] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %502 = cast(meta[relay.Constant][22] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %503 = reshape(%501, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %504 = reshape(%502, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %505 = %488.0;
    %506 = floor_mod(%499, %500) /* ty=Tensor[(576), float64] */;
    %507 = @func_46(%503, %504) /* ty=Tensor[(14, 5, 13), bool] */;
    (%505, meta[relay.Constant][19] /* ty=Tensor[(770), float64] */, meta[relay.Constant][20] /* ty=Tensor[(4158), float64] */, %506, %507, meta[relay.Constant][22] /* ty=Tensor[(910), int64] */)
  };
  %508() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */
}

def @func_2647() -> (Tensor[(770), float64], Tensor[(14, 5, 13), bool]) {
  %509 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
  %510 = @func_1779() /* ty=Tensor[(770), float64] */;
  %511 = %509.0;
  (%510, %511)
}

def @func_3102(%var_3087: Tensor[(576), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(594), float64], Tensor[(1500), float32], Tensor[(16, 594), float32], Tensor[(1584, 6), float64], Tensor[(1188), float64], Tensor[(6, 11, 9), float64], Tensor[(576), float64]) {
  %512 = cast(meta[relay.Constant][23] /* ty=Tensor[(1500), float32] */, dtype="float32") /* ty=Tensor[(1500), float32] */;
  %513 = reshape(%512, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float32] */;
  %514 = @func_2990(%513) /* ty=(Tensor[(15, 10, 10), float32], Tensor[(6, 6, 14), float32], Tensor[(594), float64]) */;
  %515 = cast(meta[relay.Constant][24] /* ty=Tensor[(1584, 6), float64] */, dtype="float64") /* ty=Tensor[(1584, 6), float64] */;
  %516 = cast(meta[relay.Constant][24] /* ty=Tensor[(1584, 6), float64] */, dtype="bool") /* ty=Tensor[(1584, 6), bool] */;
  %517 = cast(meta[relay.Constant][25] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %518 = reshape(%515, newshape=[16, 594]) /* ty=Tensor[(16, 594), float64] */;
  %519 = reshape(%516, newshape=[16, 594]) /* ty=Tensor[(16, 594), bool] */;
  %520 = reshape(%517, newshape=[2, 594]) /* ty=Tensor[(2, 594), float64] */;
  %521 = @func_2484(%518, %519, %520) /* ty=(Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) */;
  %522 = cast(%var_3087, dtype="float64") /* ty=Tensor[(576), float64] */;
  %523 = %514.2;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(594), float64] */;
  %525 = reshape(%522, newshape=[9, 16, 4]) /* ty=Tensor[(9, 16, 4), float64] */;
  %526 = reshape(%524, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %527 = @func_602(%525, %526) /* ty=(Tensor[(9, 16, 4), float64], Tensor[(9, 16, 4), float64], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %528 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %529 = %521.1;
  %530 = %527.2;
  (%528, %523, meta[relay.Constant][23] /* ty=Tensor[(1500), float32] */, %529, meta[relay.Constant][24] /* ty=Tensor[(1584, 6), float64] */, meta[relay.Constant][25] /* ty=Tensor[(1188), float64] */, %530, %var_3087)
}

def @func_9166() -> Tensor[(6, 11, 9), float64] {
  %531 = fn () -> Tensor[(6, 11, 9), float64] {
    @func_4346() /* ty=Tensor[(6, 11, 9), float64] */
  };
  %531() /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_7648() -> (Tensor[(6, 11, 9), float64],) {
  @func_7646() /* ty=(Tensor[(6, 11, 9), float64],) */
}

def @func_8570() -> Tensor[(6, 6, 14), float64] {
  %532 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %532.0
}

def @func_7151() -> Tensor[(6, 11, 9), float32] {
  @func_7149() /* ty=Tensor[(6, 11, 9), float32] */
}

def @func_5488() -> (Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), uint8], bool) {
  %539 = fn () -> (Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), uint8], bool) {
    %533 = @func_4772() /* ty=(Tensor[(6, 11, 9), float64],) */;
    %534 = @func_5025() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], bool, Tensor[(2925), bool]) */;
    %535 = @func_2187() /* ty=Tensor[(6, 6, 14), float64] */;
    %536 = %533.0;
    %537 = @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */;
    %538 = %534.3;
    (%535, %536, %537, %538)
  };
  %539() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), uint8], bool) */
}

def @func_6197() -> Tensor[(594), float64] {
  @func_4136() /* ty=Tensor[(594), float64] */
}

def @func_7132() -> (Tensor[(910), int64],) {
  %542 = fn () -> (Tensor[(910), int64],) {
    %540 = @func_5885() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 6, 14), float32]) */;
    %541 = %540.1;
    (%541,)
  };
  %542() /* ty=(Tensor[(910), int64],) */
}

def @func_7495(%var_7494: Tensor[(3, 1386), float64]) -> (Tensor[(14, 5, 13), bool], Tensor[(14, 5, 13), bool], Tensor[(3, 1386), float64], Tensor[(6, 6, 14), uint8], Tensor[(504), float32], Tensor[(6, 11, 9), float64]) {
  %556 = fn (%var_7457: Tensor[(3, 1386), float64]) -> (Tensor[(14, 5, 13), bool], Tensor[(14, 5, 13), bool], Tensor[(3, 1386), float64], Tensor[(6, 6, 14), uint8], Tensor[(504), float32], Tensor[(6, 11, 9), float64]) {
    %543 = cast(%var_7457, dtype="float64") /* ty=Tensor[(3, 1386), float64] */;
    %544 = cast(%var_7457, dtype="float64") /* ty=Tensor[(3, 1386), float64] */;
    %545 = reshape(%543, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
    %546 = reshape(%544, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
    %547 = @func_792(%545, %546) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) */;
    %548 = cast(meta[relay.Constant][26] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %549 = reshape(%548, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %550 = @func_1875(%549) /* ty=(Tensor[(770), float64], Tensor[(594), float64], Tensor[(6, 6, 14), uint8], Tensor[(594), float64]) */;
    %551 = @func_4019() /* ty=(Tensor[(6, 11, 9), float64],) */;
    %552 = @func_3407() /* ty=Tensor[(14, 5, 13), bool] */;
    %553 = %547.2;
    %554 = %550.2;
    %555 = %551.0;
    (%552, %553, %var_7457, %554, meta[relay.Constant][26] /* ty=Tensor[(504), float32] */, %555)
  };
  %556(%var_7494) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(14, 5, 13), bool], Tensor[(3, 1386), float64], Tensor[(6, 6, 14), uint8], Tensor[(504), float32], Tensor[(6, 11, 9), float64]) */
}

def @func_9472() -> Tensor[(6, 11, 9), float64] {
  @func_9470() /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_3741(%var_3722: int8) -> (Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], int8, Tensor[(528), int8]) {
  %557 = @func_2210() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */;
  %558 = cast(%var_3722, dtype="int8") /* ty=int8 */;
  %559 = cast(meta[relay.Constant][27] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %560 = reshape(%558, newshape=[]) /* ty=int8 */;
  %561 = reshape(%559, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %562 = @func_3670(%560, %561) /* ty=(Tensor[(6, 6, 14), float64], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) */;
  %563 = %557.0;
  %564 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %565 = %562.0;
  (%563, %564, %565, %var_3722, meta[relay.Constant][27] /* ty=Tensor[(528), int8] */)
}

def @func_9641() -> (Tensor[(6, 6, 14), float64], Tensor[(770), float64], Tensor[(770), float64]) {
  @func_9639() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(770), float64], Tensor[(770), float64]) */
}

def @func_2692() -> Tensor[(6, 6, 14), float32] {
  %567 = fn () -> Tensor[(6, 6, 14), float32] {
    %566 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
    %566.0
  };
  %567() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_2729(%var_2716: Tensor[(6, 6, 14), float32]) -> Tensor[(6, 6, 14), uint64] {
  %568 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %569 = %568.1;
  %570 = cast(%var_2716, dtype="uint64") /* ty=Tensor[(6, 6, 14), uint64] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="uint64") /* ty=Tensor[(6, 6, 14), uint64] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%572, %573) /* ty=Tensor[(6, 6, 14), uint64] */
}

def @func_4059() -> Tensor[(6, 11, 9), float64] {
  %574 = @func_4019() /* ty=(Tensor[(6, 11, 9), float64],) */;
  %574.0
}

def @func_5750() -> (Tensor[(770), float64], Tensor[(6, 11, 9), float64], Tensor[(14, 5, 13), bool], Tensor[(16, 594), float32], Tensor[(2, 288), float64], Tensor[(6, 11, 9), bool]) {
  %575 = @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
  %576 = %575.1;
  %577 = cast(%576, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  %578 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 288), float64] */, dtype="float64") /* ty=Tensor[(2, 288), float64] */;
  %579 = reshape(%578, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %580 = @func_3102(%579) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(594), float64], Tensor[(1500), float32], Tensor[(16, 594), float32], Tensor[(1584, 6), float64], Tensor[(1188), float64], Tensor[(6, 11, 9), float64], Tensor[(576), float64]) */;
  %581 = @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */;
  %582 = %581.0;
  %583 = cast(%582, dtype="bool") /* ty=Tensor[(594), bool] */;
  %584 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%576, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %587 = @func_1779() /* ty=Tensor[(770), float64] */;
  %588 = log(%577) /* ty=Tensor[(6, 11, 9), float64] */;
  %589 = @func_4433() /* ty=Tensor[(14, 5, 13), bool] */;
  %590 = %580.3;
  %591 = less(%585, %586) /* ty=Tensor[(6, 11, 9), bool] */;
  (%587, %588, %589, %590, meta[relay.Constant][28] /* ty=Tensor[(2, 288), float64] */, %591)
}

def @func_638() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) {
  %599 = fn () -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) {
    %592 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %593 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %594 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 594), float64] */, dtype="float64") /* ty=Tensor[(1, 594), float64] */;
    %595 = reshape(%594, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
    %596 = %592.0;
    %597 = %593.0;
    %598 = @func_228(%595) /* ty=Tensor[(6, 11, 9), float64] */;
    (%596, %597, %598, meta[relay.Constant][29] /* ty=Tensor[(1, 594), float64] */)
  };
  %599() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */
}

def @func_4020() -> (Tensor[(6, 11, 9), float64],) {
  %602 = fn () -> (Tensor[(6, 11, 9), float64],) {
    %600 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
    %601 = %600.3;
    (%601,)
  };
  %602() /* ty=(Tensor[(6, 11, 9), float64],) */
}

def @func_1391(%var_1388: Tensor[(10, 7, 11), float64], %var_1389: Tensor[(576), float64], %var_1390: Tensor[(4158), float64]) -> (Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) {
  %617 = fn (%var_1354: Tensor[(10, 7, 11), float64], %var_1363: Tensor[(576), float64], %var_1371: Tensor[(4158), float64]) -> (Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) {
    %603 = cast(%var_1354, dtype="float64") /* ty=Tensor[(10, 7, 11), float64] */;
    %604 = cast(%var_1363, dtype="float64") /* ty=Tensor[(576), float64] */;
    %605 = cast(meta[relay.Constant][30] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
    %606 = reshape(%604, newshape=[9, 16, 4]) /* ty=Tensor[(9, 16, 4), float64] */;
    %607 = reshape(%605, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %608 = @func_602(%606, %607) /* ty=(Tensor[(9, 16, 4), float64], Tensor[(9, 16, 4), float64], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
    %609 = cast(%var_1371, dtype="float64") /* ty=Tensor[(4158), float64] */;
    %610 = cast(%var_1371, dtype="float64") /* ty=Tensor[(4158), float64] */;
    %611 = reshape(%609, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
    %612 = reshape(%610, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
    %613 = @func_792(%611, %612) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) */;
    %614 = exp(%603) /* ty=Tensor[(10, 7, 11), float64] */;
    %615 = %608.0;
    %616 = %613.4;
    (%614, %615, %var_1363, meta[relay.Constant][30] /* ty=Tensor[(594), float64] */, %616, %var_1371)
  };
  %617(%var_1388, %var_1389, %var_1390) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */
}

def @func_4168() -> (Tensor[(6, 11, 9), float32],) {
  @func_4166() /* ty=(Tensor[(6, 11, 9), float32],) */
}

def @func_3502(%var_3501: Tensor[(66, 9), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(66, 9), uint16], Tensor[(66, 9), float64]) {
  %630 = fn (%var_3474: Tensor[(66, 9), float64]) -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(66, 9), uint16], Tensor[(66, 9), float64]) {
    %618 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
    %619 = cast(%618, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %620 = @func_3212() /* ty=Tensor[(66, 9), float64] */;
    %621 = cast(%var_3474, dtype="uint16") /* ty=Tensor[(66, 9), uint16] */;
    %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
    %623 = cast(%620, dtype="uint16") /* ty=Tensor[(66, 9), uint16] */;
    %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %625 = cast(%var_3474, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
    %626 = log(%619) /* ty=Tensor[(6, 6, 14), float32] */;
    %627 = @func_2187() /* ty=Tensor[(6, 6, 14), float64] */;
    %628 = right_shift(%623, %624) /* ty=Tensor[(66, 9), uint16] */;
    %629 = acosh(%625) /* ty=Tensor[(66, 9), float64] */;
    (%626, %627, %628, %629)
  };
  %630(%var_3501) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(66, 9), uint16], Tensor[(66, 9), float64]) */
}

def @func_6611() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32]) {
  %637 = fn () -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32]) {
    %631 = @func_2797() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %632 = @func_5070() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) */;
    %633 = %632.1;
    %634 = cast(%633, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %635 = %631.0;
    %636 = acosh(%634) /* ty=Tensor[(6, 6, 14), float32] */;
    (%635, %636)
  };
  %637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32]) */
}

def @func_3161() -> Tensor[(594), float32] {
  %638 = @func_2087() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), int32], Tensor[(594), float32], Tensor[(770), float64], Tensor[(6, 11, 9), float64]) */;
  %638.2
}

def @func_2211() -> (Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) {
  %643 = fn () -> (Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) {
    %639 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
    %640 = @func_914() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */;
    %641 = %639.1;
    %642 = %640.1;
    (%641, %642)
  };
  %643() /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) */
}

def @func_7851() -> Tensor[(6, 6, 14), float32] {
  @func_7622() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_7940() -> Tensor[(6, 6, 14), int32] {
  %644 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %644.0
}

def @func_7622() -> Tensor[(6, 6, 14), float32] {
  %645 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %645.1
}

def @func_5200() -> (Tensor[(6, 6, 14), int32], Tensor[(770), float64]) {
  %646 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %647 = @func_2433() /* ty=(Tensor[(770), float64],) */;
  %648 = %646.0;
  %649 = %647.0;
  (%648, %649)
}

def @func_5336() -> Tensor[(594), float32] {
  @func_5334() /* ty=Tensor[(594), float32] */
}

def @func_8107() -> (Tensor[(14, 5, 13), float64], Tensor[(504), float32]) {
  %653 = fn () -> (Tensor[(14, 5, 13), float64], Tensor[(504), float32]) {
    %650 = @func_7745() /* ty=(Tensor[(14, 5, 13), float64],) */;
    %651 = %650.0;
    %652 = @func_8026() /* ty=Tensor[(504), float32] */;
    (%651, %652)
  };
  %653() /* ty=(Tensor[(14, 5, 13), float64], Tensor[(504), float32]) */
}

def @func_9062() -> Tensor[(6, 6, 14), float32] {
  %655 = fn () -> Tensor[(6, 6, 14), float32] {
    %654 = @func_5627() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), int8], Tensor[(6, 6, 14), float32]) */;
    %654.0
  };
  %655() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_4348() -> Tensor[(6, 11, 9), float64] {
  @func_4346() /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_6543(%var_6500: Tensor[(4, 15, 3), float32], %var_6514: Tensor[(1188), float64]) -> (Tensor[(4, 15, 3), float32], Tensor[(16, 594), float32], Tensor[(9504), float64], Tensor[(1188), float64], Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), uint64]) {
  %656 = cast(%var_6500, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
  %657 = cast(meta[relay.Constant][31] /* ty=Tensor[(9504), float64] */, dtype="float64") /* ty=Tensor[(9504), float64] */;
  %658 = cast(meta[relay.Constant][31] /* ty=Tensor[(9504), float64] */, dtype="bool") /* ty=Tensor[(9504), bool] */;
  %659 = cast(%var_6514, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %660 = reshape(%657, newshape=[16, 594]) /* ty=Tensor[(16, 594), float64] */;
  %661 = reshape(%658, newshape=[16, 594]) /* ty=Tensor[(16, 594), bool] */;
  %662 = reshape(%659, newshape=[2, 594]) /* ty=Tensor[(2, 594), float64] */;
  %663 = @func_2484(%660, %661, %662) /* ty=(Tensor[(16, 594), bool], Tensor[(16, 594), float32], Tensor[(2, 594), float64]) */;
  %664 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
  %665 = %664.0;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %667 = reshape(%666, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
  %668 = acos(%656) /* ty=Tensor[(4, 15, 3), float32] */;
  %669 = %663.1;
  %670 = @func_2729(%667) /* ty=Tensor[(6, 6, 14), uint64] */;
  (%668, %669, meta[relay.Constant][31] /* ty=Tensor[(9504), float64] */, %var_6514, %665, %670)
}

def @func_9561() -> (Tensor[(14, 5, 13), bool],) {
  %671 = @func_3902() /* ty=Tensor[(14, 5, 13), bool] */;
  (%671,)
}

def @func_5226() -> (Tensor[(594), float32], Tensor[(594), float32]) {
  %672 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %673 = %672.3;
  %674 = @func_3161() /* ty=Tensor[(594), float32] */;
  (%673, %674)
}

def @func_5228() -> (Tensor[(594), float32], Tensor[(594), float32]) {
  @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */
}

def @func_4166() -> (Tensor[(6, 11, 9), float32],) {
  %675 = @func_4059() /* ty=Tensor[(6, 11, 9), float64] */;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %677 = asin(%676) /* ty=Tensor[(6, 11, 9), float32] */;
  (%677,)
}

def @func_4968(%var_4964: Tensor[(16, 1, 8), uint8], %var_4965: Tensor[(16, 2, 8), uint8], %var_4966: int8, %var_4967: Tensor[(189, 22), float64]) -> (Tensor[(16, 2, 8), float64], Tensor[(6, 6, 14), float32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(189, 22), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
  %713 = fn (%var_4863: Tensor[(16, 1, 8), uint8], %var_4864: Tensor[(16, 2, 8), uint8], %var_4912: int8, %var_4924: Tensor[(189, 22), float64]) -> (Tensor[(16, 2, 8), float64], Tensor[(6, 6, 14), float32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(189, 22), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) {
    %678 = cast(%var_4863, dtype="uint8") /* ty=Tensor[(16, 1, 8), uint8] */;
    %679 = cast(%var_4864, dtype="uint8") /* ty=Tensor[(16, 2, 8), uint8] */;
    %680 = add(%678, %679) /* ty=Tensor[(16, 2, 8), uint8] */;
    %681 = cast(%var_4864, dtype="int32") /* ty=Tensor[(16, 2, 8), int32] */;
    %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(%680, dtype="int32") /* ty=Tensor[(16, 2, 8), int32] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %685 = subtract(%683, %684) /* ty=Tensor[(16, 2, 8), int32] */;
    %686 = cast(%685, dtype="float64") /* ty=Tensor[(16, 2, 8), float64] */;
    %687 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %688 = cast(%680, dtype="float64") /* ty=Tensor[(16, 2, 8), float64] */;
    %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %690 = cast(%var_4912, dtype="int8") /* ty=int8 */;
    %691 = cast(meta[relay.Constant][32] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
    %692 = reshape(%690, newshape=[]) /* ty=int8 */;
    %693 = reshape(%691, newshape=[528]) /* ty=Tensor[(528), int8] */;
    %694 = @func_3670(%692, %693) /* ty=(Tensor[(6, 6, 14), float64], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) */;
    %695 = @func_3286() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) */;
    %696 = cast(%var_4924, dtype="float64") /* ty=Tensor[(189, 22), float64] */;
    %697 = cast(%var_4924, dtype="float64") /* ty=Tensor[(189, 22), float64] */;
    %698 = reshape(%696, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
    %699 = reshape(%697, newshape=[7, 594]) /* ty=Tensor[(7, 594), float64] */;
    %700 = @func_792(%698, %699) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) */;
    %701 = @func_3286() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) */;
    %702 = cast(meta[relay.Constant][33] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %703 = cast(meta[relay.Constant][33] /* ty=Tensor[(910), int64] */, dtype="int64") /* ty=Tensor[(910), int64] */;
    %704 = reshape(%702, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %705 = reshape(%703, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %706 = mod(%688, %689) /* ty=Tensor[(16, 2, 8), float64] */;
    %707 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
    %708 = %694.1;
    %709 = %695.0;
    %710 = %700.0;
    %711 = %701.0;
    %712 = @func_46(%704, %705) /* ty=Tensor[(14, 5, 13), bool] */;
    (%706, %707, %708, %var_4912, meta[relay.Constant][32] /* ty=Tensor[(528), int8] */, %709, %710, %var_4924, %711, %712, meta[relay.Constant][33] /* ty=Tensor[(910), int64] */)
  };
  %713(%var_4964, %var_4965, %var_4966, %var_4967) /* ty=(Tensor[(16, 2, 8), float64], Tensor[(6, 6, 14), float32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8], Tensor[(6, 6, 14), int32], Tensor[(6, 11, 9), float64], Tensor[(189, 22), float64], Tensor[(6, 6, 14), int32], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */
}

def @func_2088() -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), int32], Tensor[(594), float32], Tensor[(770), float64], Tensor[(6, 11, 9), float64]) {
  %731 = fn () -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), int32], Tensor[(594), float32], Tensor[(770), float64], Tensor[(6, 11, 9), float64]) {
    %714 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
    %715 = %714.0;
    %716 = cast(%715, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %717 = reshape(%716, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
    %718 = @func_1233(%717) /* ty=(Tensor[(6, 6, 14), int32],) */;
    %719 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
    %720 = @func_1779() /* ty=Tensor[(770), float64] */;
    %721 = cast(%720, dtype="float64") /* ty=Tensor[(770), float64] */;
    %722 = %719.3;
    %723 = cast(%722, dtype="float64") /* ty=Tensor[(594), float64] */;
    %724 = cast(%722, dtype="float64") /* ty=Tensor[(594), float64] */;
    %725 = reshape(%723, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %726 = reshape(%724, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %727 = @func_1334(%725, %726) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */;
    %728 = %718.0;
    %729 = sinh(%721) /* ty=Tensor[(770), float64] */;
    %730 = %727.0;
    (%715, %728, %722, %729, %730)
  };
  %731() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), int32], Tensor[(594), float32], Tensor[(770), float64], Tensor[(6, 11, 9), float64]) */
}

def @func_2435() -> (Tensor[(770), float64],) {
  @func_2433() /* ty=(Tensor[(770), float64],) */
}

def @func_7745() -> (Tensor[(14, 5, 13), float64],) {
  %732 = @func_4209() /* ty=(Tensor[(2925), bool], Tensor[(2925), bool], Tensor[(14, 5, 13), float64]) */;
  %733 = %732.2;
  (%733,)
}

def @func_8550() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), bool], Tensor[(594), float64]) {
  %739 = fn () -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), bool], Tensor[(594), float64]) {
    %734 = cast(meta[relay.Constant][34] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
    %735 = reshape(%734, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
    %736 = @func_2331(%735) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 11, 9), bool]) */;
    %737 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
    %738 = %736.2;
    (%737, %738, meta[relay.Constant][34] /* ty=Tensor[(594), float64] */)
  };
  %739() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), bool], Tensor[(594), float64]) */
}

def @func_8964() -> (Tensor[(6, 6, 14), float32], Tensor[(504), float32]) {
  %740 = @func_8248() /* ty=(Tensor[(504), float32],) */;
  %741 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %742 = %740.0;
  (%741, %742)
}

def @func_4136() -> Tensor[(594), float64] {
  %743 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %743.2
}

def @func_9049(%var_9046: Tensor[(2, 1008), uint8]) -> (Tensor[(6, 6, 14), int32], Tensor[(9, 16, 14), float32], Tensor[(2, 1008), uint8]) {
  %744 = cast(%var_9046, dtype="uint8") /* ty=Tensor[(2, 1008), uint8] */;
  %745 = cast(%var_9046, dtype="uint8") /* ty=Tensor[(2, 1008), uint8] */;
  %746 = reshape(%744, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), uint8] */;
  %747 = reshape(%745, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), uint8] */;
  %748 = @func_7516(%746, %747) /* ty=(Tensor[(9, 16, 14), float32],) */;
  %749 = @func_7940() /* ty=Tensor[(6, 6, 14), int32] */;
  %750 = %748.0;
  (%749, %750, %var_9046)
}

def @func_9589() -> (Tensor[(14, 5, 13), bool],) {
  %753 = fn () -> (Tensor[(14, 5, 13), bool],) {
    %751 = @func_6385() /* ty=(Tensor[(14, 5, 13), bool],) */;
    %752 = %751.0;
    (%752,)
  };
  %753() /* ty=(Tensor[(14, 5, 13), bool],) */
}

def @func_5628() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), int8], Tensor[(6, 6, 14), float32]) {
  %761 = fn () -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), int8], Tensor[(6, 6, 14), float32]) {
    %754 = @func_1247() /* ty=Tensor[(6, 6, 14), float32] */;
    %755 = cast(%754, dtype="uint8") /* ty=Tensor[(6, 6, 14), uint8] */;
    %756 = reshape(%755, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), uint8] */;
    %757 = @func_3806(%756) /* ty=(Tensor[(6, 6, 14), int8],) */;
    %758 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %759 = %757.0;
    %760 = %758.0;
    (%754, %759, %760)
  };
  %761() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), int8], Tensor[(6, 6, 14), float32]) */
}

def @func_9671(%var_9669: uint64, %var_9670: Tensor[(6, 10, 7), uint64]) -> (Tensor[(6, 10, 7), uint64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) {
  %769 = fn (%var_9660: uint64, %var_9661: Tensor[(6, 10, 7), uint64]) -> (Tensor[(6, 10, 7), uint64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) {
    %762 = cast(%var_9660, dtype="uint64") /* ty=uint64 */;
    %763 = cast(%var_9661, dtype="uint64") /* ty=Tensor[(6, 10, 7), uint64] */;
    %764 = cast(meta[relay.Constant][35] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %765 = reshape(%764, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
    %766 = @func_1233(%765) /* ty=(Tensor[(6, 6, 14), int32],) */;
    %767 = subtract(%762, %763) /* ty=Tensor[(6, 10, 7), uint64] */;
    %768 = %766.0;
    (%767, %768, meta[relay.Constant][35] /* ty=Tensor[(504), float32] */)
  };
  %769(%var_9669, %var_9670) /* ty=(Tensor[(6, 10, 7), uint64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) */
}

def @func_9563() -> (Tensor[(14, 5, 13), bool],) {
  @func_9561() /* ty=(Tensor[(14, 5, 13), bool],) */
}

def @func_4304() -> (Tensor[(6, 6, 14), float64],) {
  @func_4302() /* ty=(Tensor[(6, 6, 14), float64],) */
}

def @func_2930() -> Tensor[(6, 6, 14), float32] {
  @func_1149() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_4435() -> Tensor[(14, 5, 13), bool] {
  @func_4433() /* ty=Tensor[(14, 5, 13), bool] */
}

def @func_4659(%var_4657: Tensor[(4158), float64], %var_4658: Tensor[(910), int64]) -> (Tensor[(770), float64], Tensor[(4158), float64], bool, Tensor[(6, 6, 14), uint8], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(770), float32]) {
  %789 = fn (%var_4594: Tensor[(4158), float64], %var_4624: Tensor[(910), int64]) -> (Tensor[(770), float64], Tensor[(4158), float64], bool, Tensor[(6, 6, 14), uint8], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(770), float32]) {
    %770 = cast(%var_4594, dtype="float64") /* ty=Tensor[(4158), float64] */;
    %771 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %772 = reshape(%770, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
    %773 = reshape(%771, newshape=[]) /* ty=bool */;
    %774 = @func_4547(%772, %773) /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), uint64], Tensor[(4158), float64], bool, Tensor[(2925), float64]) */;
    %775 = cast(%var_4624, dtype="int64") /* ty=Tensor[(910), int64] */;
    %776 = cast(%var_4624, dtype="int64") /* ty=Tensor[(910), int64] */;
    %777 = reshape(%775, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %778 = reshape(%776, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), int64] */;
    %779 = @func_2433() /* ty=(Tensor[(770), float64],) */;
    %780 = %779.0;
    %781 = cast(%780, dtype="float32") /* ty=Tensor[(770), float32] */;
    %782 = sigmoid(%781) /* ty=Tensor[(770), float32] */;
    %783 = cast(%782, dtype="float32") /* ty=Tensor[(770), float32] */;
    %784 = %774.0;
    %785 = @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */;
    %786 = @func_46(%777, %778) /* ty=Tensor[(14, 5, 13), bool] */;
    %787 = @func_4059() /* ty=Tensor[(6, 11, 9), float64] */;
    %788 = sqrt(%783) /* ty=Tensor[(770), float32] */;
    (%784, %var_4594, False /* ty=bool */, %785, %786, %var_4624, %787, %788)
  };
  %789(%var_4657, %var_4658) /* ty=(Tensor[(770), float64], Tensor[(4158), float64], bool, Tensor[(6, 6, 14), uint8], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(770), float32]) */
}

def @func_6498(%var_6496: Tensor[(11, 2, 11), float64]) -> Tensor[(11, 2, 11), float64] {
  @func_6495(%var_6496) /* ty=Tensor[(11, 2, 11), float64] */
}

def @func_1781() -> Tensor[(770), float64] {
  @func_1779() /* ty=Tensor[(770), float64] */
}

def @func_8875() -> Tensor[(6, 11, 9), float64] {
  %791 = fn () -> Tensor[(6, 11, 9), float64] {
    %790 = @func_4019() /* ty=(Tensor[(6, 11, 9), float64],) */;
    %790.0
  };
  %791() /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_5849() -> (Tensor[(594), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), uint64], Tensor[(6, 6, 14), uint64], int8, Tensor[(128), uint8], Tensor[(256), uint8], int8, Tensor[(4158), float64]) {
  @func_5847() /* ty=(Tensor[(594), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), uint64], Tensor[(6, 6, 14), uint64], int8, Tensor[(128), uint8], Tensor[(256), uint8], int8, Tensor[(4158), float64]) */
}

def @func_9019() -> (Tensor[(6, 11, 9), float32], Tensor[(594), float32]) {
  %795 = fn () -> (Tensor[(6, 11, 9), float32], Tensor[(594), float32]) {
    %792 = @func_5226() /* ty=(Tensor[(594), float32], Tensor[(594), float32]) */;
    %793 = @func_7149() /* ty=Tensor[(6, 11, 9), float32] */;
    %794 = %792.0;
    (%793, %794)
  };
  %795() /* ty=(Tensor[(6, 11, 9), float32], Tensor[(594), float32]) */
}

def @func_1779() -> Tensor[(770), float64] {
  %796 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
  %796.1
}

def @func_5612() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) {
  @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */
}

def @func_2857(%var_2855: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), uint32],) {
  @func_2854(%var_2855) /* ty=(Tensor[(6, 6, 14), uint32],) */
}

def @func_4446() -> Tensor[(6, 6, 14), uint8] {
  %797 = @func_914() /* ty=(Tensor[(1, 594), float64], Tensor[(6, 6, 14), uint8]) */;
  %797.1
}

def @func_4773() -> (Tensor[(6, 11, 9), float64],) {
  %799 = fn () -> (Tensor[(6, 11, 9), float64],) {
    %798 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
    (%798,)
  };
  %799() /* ty=(Tensor[(6, 11, 9), float64],) */
}

def @func_4822(%var_4820: int8, %var_4821: Tensor[(528), int8]) -> (Tensor[(6, 6, 14), int32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) {
  %807 = fn (%var_4808: int8, %var_4809: Tensor[(528), int8]) -> (Tensor[(6, 6, 14), int32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) {
    %800 = @func_3292() /* ty=(Tensor[(6, 6, 14), int32],) */;
    %801 = cast(%var_4808, dtype="int8") /* ty=int8 */;
    %802 = cast(%var_4809, dtype="int8") /* ty=Tensor[(528), int8] */;
    %803 = reshape(%801, newshape=[]) /* ty=int8 */;
    %804 = reshape(%802, newshape=[11, 8, 6]) /* ty=Tensor[(11, 8, 6), int8] */;
    %805 = %800.0;
    %806 = @func_1475(%803, %804) /* ty=Tensor[(11, 8, 6), bool] */;
    (%805, %806, %var_4808, %var_4809)
  };
  %807(%var_4820, %var_4821) /* ty=(Tensor[(6, 6, 14), int32], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) */
}

def @func_5071() -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) {
  %812 = fn () -> (Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) {
    %808 = @func_1247() /* ty=Tensor[(6, 6, 14), float32] */;
    %809 = cast(%808, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
    %810 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
    %811 = log2(%809) /* ty=Tensor[(6, 6, 14), float64] */;
    (%810, %811)
  };
  %812() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) */
}

def @func_8613() -> (Tensor[(6, 6, 14), uint8], Tensor[(1, 594), float64], Tensor[(6, 6, 14), float64]) {
  @func_8611() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(1, 594), float64], Tensor[(6, 6, 14), float64]) */
}

def @func_9782() -> (Tensor[(594), float64], Tensor[(594), float64]) {
  @func_9780() /* ty=(Tensor[(594), float64], Tensor[(594), float64]) */
}

def @func_7693(%var_7691: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), float64],) {
  @func_7690(%var_7691) /* ty=(Tensor[(6, 6, 14), float64],) */
}

def @func_9321() -> (Tensor[(594), float64],) {
  @func_9319() /* ty=(Tensor[(594), float64],) */
}

def @func_9206(%var_9204: Tensor[(1, 10, 4), float64]) -> (Tensor[(1, 10, 4), float64],) {
  @func_9203(%var_9204) /* ty=(Tensor[(1, 10, 4), float64],) */
}

def @func_3673(%var_3671: int8, %var_3672: Tensor[(528), int8]) -> (Tensor[(6, 6, 14), float64], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) {
  %820 = fn (%var_3655: int8, %var_3656: Tensor[(528), int8]) -> (Tensor[(6, 6, 14), float64], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) {
    %813 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
    %814 = cast(%var_3655, dtype="int8") /* ty=int8 */;
    %815 = cast(%var_3656, dtype="int8") /* ty=Tensor[(528), int8] */;
    %816 = reshape(%814, newshape=[]) /* ty=int8 */;
    %817 = reshape(%815, newshape=[11, 8, 6]) /* ty=Tensor[(11, 8, 6), int8] */;
    %818 = %813.4;
    %819 = @func_1475(%816, %817) /* ty=Tensor[(11, 8, 6), bool] */;
    (%818, %819, %var_3655, %var_3656)
  };
  %820(%var_3671, %var_3672) /* ty=(Tensor[(6, 6, 14), float64], Tensor[(11, 8, 6), bool], int8, Tensor[(528), int8]) */
}

def @func_3860() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) {
  %826 = fn () -> (Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) {
    %821 = @func_1247() /* ty=Tensor[(6, 6, 14), float32] */;
    %822 = cast(%821, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %823 = @func_3286() /* ty=(Tensor[(6, 6, 14), int32], Tensor[(6, 6, 14), float64]) */;
    %824 = tan(%822) /* ty=Tensor[(6, 6, 14), float32] */;
    %825 = %823.1;
    (%824, %825)
  };
  %826() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */
}

def @func_8085(%var_8083: Tensor[(6, 8, 2), float32], %var_8084: Tensor[(6, 8, 2), float32]) -> (Tensor[(6, 8, 2), float32], Tensor[(6, 8, 2), uint64]) {
  @func_8081(%var_8083, %var_8084) /* ty=(Tensor[(6, 8, 2), float32], Tensor[(6, 8, 2), uint64]) */
}

def @func_2030() -> (Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) {
  %827 = @func_1698() /* ty=(Tensor[(6, 6, 14), float64],) */;
  %828 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %829 = cast(meta[relay.Constant][36] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %830 = cast(meta[relay.Constant][36] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %831 = reshape(%829, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %832 = reshape(%830, newshape=[594]) /* ty=Tensor[(594), float64] */;
  %833 = @func_1334(%831, %832) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */;
  %834 = cast(meta[relay.Constant][36] /* ty=Tensor[(594), float64] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %835 = rsqrt(%834) /* ty=Tensor[(594), float32] */;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(594), float32] */;
  %837 = %827.0;
  %838 = %828.0;
  %839 = %833.0;
  %840 = asinh(%836) /* ty=Tensor[(594), float32] */;
  (%837, %838, %839, %840)
}

def @func_4209() -> (Tensor[(2925), bool], Tensor[(2925), bool], Tensor[(14, 5, 13), float64]) {
  %841 = cast(meta[relay.Constant][37] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %842 = reshape(%841, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
  %843 = @func_3954(%842) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], bool, Tensor[(2925), bool]) */;
  %844 = @func_3407() /* ty=Tensor[(14, 5, 13), bool] */;
  %845 = cast(%844, dtype="float64") /* ty=Tensor[(14, 5, 13), float64] */;
  %846 = %843.3;
  %847 = erf(%845) /* ty=Tensor[(14, 5, 13), float64] */;
  (%846, meta[relay.Constant][37] /* ty=Tensor[(2925), bool] */, %847)
}

def @func_228(%var_213: Tensor[(6, 11, 9), float64]) -> Tensor[(6, 11, 9), float64] {
  %848 = cast(%var_213, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  %849 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(6, 11, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%850, %851) /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_5175() -> (Tensor[(66, 9), float64], Tensor[(594), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), float64]) {
  %867 = fn () -> (Tensor[(66, 9), float64], Tensor[(594), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), float64]) {
    %852 = @func_3212() /* ty=Tensor[(66, 9), float64] */;
    %853 = cast(%852, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
    %854 = cast(%852, dtype="float64") /* ty=Tensor[(66, 9), float64] */;
    %855 = reshape(%853, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %856 = reshape(%854, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %857 = @func_1334(%855, %856) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */;
    %858 = %857.2;
    %859 = cast(%858, dtype="float32") /* ty=Tensor[(594), float32] */;
    %860 = @func_4302() /* ty=(Tensor[(6, 6, 14), float64],) */;
    %861 = tan(%859) /* ty=Tensor[(594), float32] */;
    %862 = cast(%861, dtype="float64") /* ty=Tensor[(594), float64] */;
    %863 = reshape(%862, newshape=[66, 9]) /* ty=Tensor[(66, 9), float64] */;
    %864 = @func_3500(%863) /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64], Tensor[(66, 9), uint16], Tensor[(66, 9), float64]) */;
    %865 = %860.0;
    %866 = %864.1;
    (%852, %861, %865, %866)
  };
  %867() /* ty=(Tensor[(66, 9), float64], Tensor[(594), float32], Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), float64]) */
}

def @func_4700() -> (Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) {
  %874 = fn () -> (Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) {
    %868 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
    %869 = cast(meta[relay.Constant][39] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %870 = reshape(%869, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), float32] */;
    %871 = @func_1233(%870) /* ty=(Tensor[(6, 6, 14), int32],) */;
    %872 = %868.2;
    %873 = %871.0;
    (%872, %873, meta[relay.Constant][39] /* ty=Tensor[(504), float32] */)
  };
  %874() /* ty=(Tensor[(594), float64], Tensor[(6, 6, 14), int32], Tensor[(504), float32]) */
}

def @func_3376(%var_3373: Tensor[(1, 4158), float64], %var_3374: bool, %var_3375: Tensor[(2925), bool]) -> (Tensor[(576), float64], Tensor[(770), float64], Tensor[(144, 4), float64], Tensor[(1, 4158), float64], Tensor[(1, 594), float64], Tensor[(2925), bool], Tensor[(14, 5, 13), uint64], Tensor[(1, 4158), float64]) {
  %905 = fn (%var_3319: Tensor[(1, 4158), float64], %var_3341: bool, %var_3342: Tensor[(2925), bool]) -> (Tensor[(576), float64], Tensor[(770), float64], Tensor[(144, 4), float64], Tensor[(1, 4158), float64], Tensor[(1, 594), float64], Tensor[(2925), bool], Tensor[(14, 5, 13), uint64], Tensor[(1, 4158), float64]) {
    %875 = cast(meta[relay.Constant][40] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
    %876 = cast(meta[relay.Constant][41] /* ty=Tensor[(144, 4), float64] */, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
    %877 = cast(%var_3319, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
    %878 = reshape(%875, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float64] */;
    %879 = reshape(%876, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %880 = reshape(%877, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
    %881 = @func_1387(%878, %879, %880) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */;
    %882 = cast(%var_3319, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
    %883 = acos(%882) /* ty=Tensor[(1, 4158), float64] */;
    %884 = cast(%883, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
    %885 = cast(%var_3341, dtype="bool") /* ty=bool */;
    %886 = cast(%var_3342, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %887 = reshape(%885, newshape=[]) /* ty=bool */;
    %888 = reshape(%886, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), bool] */;
    %889 = @func_2569(%887, %888) /* ty=(Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) */;
    %890 = @func_1597() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(770), float64], Tensor[(4158), float64], Tensor[(576), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64]) */;
    %891 = %890.4;
    %892 = cast(%891, dtype="uint64") /* ty=Tensor[(14, 5, 13), uint64] */;
    %893 = cast(%var_3341, dtype="uint64") /* ty=uint64 */;
    %894 = cast(%883, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
    %895 = rsqrt(%894) /* ty=Tensor[(1, 4158), float64] */;
    %896 = cast(%895, dtype="int64") /* ty=Tensor[(1, 4158), int64] */;
    %897 = cast(%var_3341, dtype="int64") /* ty=int64 */;
    %898 = add(%896, %897) /* ty=Tensor[(1, 4158), int64] */;
    %899 = cast(%898, dtype="float64") /* ty=Tensor[(1, 4158), float64] */;
    %900 = %881.2;
    %901 = sin(%884) /* ty=Tensor[(1, 4158), float64] */;
    %902 = %889.3;
    %903 = maximum(%892, %893) /* ty=Tensor[(14, 5, 13), uint64] */;
    %904 = sqrt(%899) /* ty=Tensor[(1, 4158), float64] */;
    (%900, meta[relay.Constant][40] /* ty=Tensor[(770), float64] */, meta[relay.Constant][41] /* ty=Tensor[(144, 4), float64] */, %901, %902, %var_3342, %903, %904)
  };
  %905(%var_3373, %var_3374, %var_3375) /* ty=(Tensor[(576), float64], Tensor[(770), float64], Tensor[(144, 4), float64], Tensor[(1, 4158), float64], Tensor[(1, 594), float64], Tensor[(2925), bool], Tensor[(14, 5, 13), uint64], Tensor[(1, 4158), float64]) */
}

def @func_3773() -> Tensor[(6, 6, 14), float32] {
  %906 = fn () -> Tensor[(6, 6, 14), float32] {
    @func_1247() /* ty=Tensor[(6, 6, 14), float32] */
  };
  %906() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_5526() -> (Tensor[(594), float64], Tensor[(594), int16]) {
  %914 = fn () -> (Tensor[(594), float64], Tensor[(594), int16]) {
    %907 = @func_4136() /* ty=Tensor[(594), float64] */;
    %908 = cast(%907, dtype="float64") /* ty=Tensor[(594), float64] */;
    %909 = cast(%907, dtype="float64") /* ty=Tensor[(594), float64] */;
    %910 = reshape(%908, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %911 = reshape(%909, newshape=[594]) /* ty=Tensor[(594), float64] */;
    %912 = @func_1334(%910, %911) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), bool], Tensor[(594), int16]) */;
    %913 = %912.2;
    (%907, %913)
  };
  %914() /* ty=(Tensor[(594), float64], Tensor[(594), int16]) */
}

def @func_2798() -> (Tensor[(6, 6, 14), float32],) {
  %916 = fn () -> (Tensor[(6, 6, 14), float32],) {
    %915 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
    (%915,)
  };
  %916() /* ty=(Tensor[(6, 6, 14), float32],) */
}

def @func_796(%var_794: Tensor[(7, 594), float64], %var_795: Tensor[(7, 594), float64]) -> (Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) {
  @func_792(%var_794, %var_795) /* ty=(Tensor[(6, 11, 9), float64], Tensor[(7, 594), bool], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(7, 594), int32]) */
}

def @func_8611() -> (Tensor[(6, 6, 14), uint8], Tensor[(1, 594), float64], Tensor[(6, 6, 14), float64]) {
  %917 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %918 = @func_2030() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(6, 6, 14), uint8], Tensor[(6, 11, 9), float64], Tensor[(594), float32]) */;
  %919 = @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */;
  %920 = %917.3;
  %921 = %918.0;
  (%919, %920, %921)
}

def @func_895(%var_893: Tensor[(6, 6, 14), float32]) -> Tensor[(6, 6, 14), bool] {
  @func_892(%var_893) /* ty=Tensor[(6, 6, 14), bool] */
}

def @func_7585(%var_7563: Tensor[(10, 13, 8), float64]) -> (Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float32]) {
  %922 = cast(%var_7563, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %923 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(10, 13, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(meta[relay.Constant][42] /* ty=Tensor[(10, 13, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %926 = cast(meta[relay.Constant][42] /* ty=Tensor[(10, 13, 8), float64] */, dtype="float32") /* ty=Tensor[(10, 13, 8), float32] */;
  %927 = mod(%924, %925) /* ty=Tensor[(10, 13, 8), float64] */;
  %928 = cosh(%926) /* ty=Tensor[(10, 13, 8), float32] */;
  (%927, %928)
}

def @main(%var_9904: Tensor[(2, 11, 3), int8]) -> Tensor[(2, 11, 3), float32] {
  %929 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 11, 3), int8] */, dtype="float64") /* ty=Tensor[(2, 11, 3), float64] */;
  %930 = asinh(%929) /* ty=Tensor[(2, 11, 3), float64] */;
  %931 = cast(%var_9904, dtype="int8") /* ty=Tensor[(2, 11, 3), int8] */;
  %932 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(2, 11, 3), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 11, 3), int8] */, dtype="int8") /* ty=Tensor[(2, 11, 3), int8] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %935 = subtract(%933, %934) /* ty=Tensor[(2, 11, 3), int8] */;
  %936 = cast(%935, dtype="bool") /* ty=Tensor[(2, 11, 3), bool] */;
  %937 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%930, dtype="bool") /* ty=Tensor[(2, 11, 3), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %940 = equal(%938, %939) /* ty=Tensor[(2, 11, 3), bool] */;
  %941 = cast(%940, dtype="float32") /* ty=Tensor[(2, 11, 3), float32] */;
  cosh(%941) /* ty=Tensor[(2, 11, 3), float32] */
}

def @func_5610() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) {
  %942 = @func_1149() /* ty=Tensor[(6, 6, 14), float32] */;
  %943 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
  (%942, %943)
}

def @func_9203(%var_9193: Tensor[(1, 10, 4), float64]) -> (Tensor[(1, 10, 4), float64],) {
  %944 = cast(%var_9193, dtype="float64") /* ty=Tensor[(1, 10, 4), float64] */;
  %945 = erf(%944) /* ty=Tensor[(1, 10, 4), float64] */;
  (%945,)
}

def @func_7690(%var_7681: Tensor[(6, 6, 14), float32]) -> (Tensor[(6, 6, 14), float64],) {
  %946 = @func_2930() /* ty=Tensor[(6, 6, 14), float32] */;
  %947 = cast(%var_7681, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %948 = shape_of(%946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%946, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %951 = floor_mod(%949, %950) /* ty=Tensor[(6, 6, 14), float64] */;
  (%951,)
}

def @func_8197() -> (Tensor[(6, 11, 9), float64],) {
  %952 = @func_7195() /* ty=Tensor[(6, 11, 9), float64] */;
  (%952,)
}

def @func_8929() -> Tensor[(6, 6, 14), float32] {
  %954 = fn () -> Tensor[(6, 6, 14), float32] {
    %953 = @func_2797() /* ty=(Tensor[(6, 6, 14), float32],) */;
    %953.0
  };
  %954() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_7747() -> (Tensor[(14, 5, 13), float64],) {
  @func_7745() /* ty=(Tensor[(14, 5, 13), float64],) */
}

def @func_6281(%var_6279: Tensor[(12, 48), float64], %var_6280: Tensor[(4158), float64]) -> (Tensor[(14, 5, 13), bool], Tensor[(6, 11, 9), float64], Tensor[(576), float64], Tensor[(770), float64], Tensor[(12, 48), float64], Tensor[(6, 6, 14), float32], Tensor[(4158), bool], Tensor[(576), float64], Tensor[(2925), bool]) {
  %977 = fn (%var_6246: Tensor[(12, 48), float64], %var_6263: Tensor[(4158), float64]) -> (Tensor[(14, 5, 13), bool], Tensor[(6, 11, 9), float64], Tensor[(576), float64], Tensor[(770), float64], Tensor[(12, 48), float64], Tensor[(6, 6, 14), float32], Tensor[(4158), bool], Tensor[(576), float64], Tensor[(2925), bool]) {
    %955 = cast(meta[relay.Constant][44] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
    %956 = cast(%var_6246, dtype="float64") /* ty=Tensor[(12, 48), float64] */;
    %957 = cast(meta[relay.Constant][45] /* ty=Tensor[(4158), float64] */, dtype="float64") /* ty=Tensor[(4158), float64] */;
    %958 = reshape(%955, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float64] */;
    %959 = reshape(%956, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %960 = reshape(%957, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
    %961 = @func_1387(%958, %959, %960) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */;
    %962 = cast(%var_6263, dtype="bool") /* ty=Tensor[(4158), bool] */;
    %963 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(4158), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %964 = cast(meta[relay.Constant][45] /* ty=Tensor[(4158), float64] */, dtype="bool") /* ty=Tensor[(4158), bool] */;
    %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?), bool] */;
    %966 = logical_and(%964, %965) /* ty=Tensor[(4158), bool] */;
    %967 = cast(%966, dtype="float64") /* ty=Tensor[(4158), float64] */;
    %968 = cast(meta[relay.Constant][46] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %969 = reshape(%967, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
    %970 = reshape(%968, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
    %971 = @func_3579(%969, %970) /* ty=(Tensor[(6, 6, 14), int32], Tensor[(576), float64], Tensor[(4158), float64], bool, Tensor[(2925), bool], Tensor[(594), float64], Tensor[(150, 10), float32]) */;
    %972 = @func_3407() /* ty=Tensor[(14, 5, 13), bool] */;
    %973 = @func_4346() /* ty=Tensor[(6, 11, 9), float64] */;
    %974 = %961.2;
    %975 = @func_3136() /* ty=Tensor[(6, 6, 14), float32] */;
    %976 = %971.1;
    (%972, %973, %974, meta[relay.Constant][44] /* ty=Tensor[(770), float64] */, %var_6246, %975, %966, %976, meta[relay.Constant][46] /* ty=Tensor[(2925), bool] */)
  };
  %977(%var_6279, %var_6280) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(6, 11, 9), float64], Tensor[(576), float64], Tensor[(770), float64], Tensor[(12, 48), float64], Tensor[(6, 6, 14), float32], Tensor[(4158), bool], Tensor[(576), float64], Tensor[(2925), bool]) */
}

def @func_6795() -> (Tensor[(6, 6, 14), float32], Tensor[(10, 7, 11), float64], Tensor[(770), float64], Tensor[(576), float64], Tensor[(4158), float64]) {
  %987 = fn () -> (Tensor[(6, 6, 14), float32], Tensor[(10, 7, 11), float64], Tensor[(770), float64], Tensor[(576), float64], Tensor[(4158), float64]) {
    %978 = cast(meta[relay.Constant][47] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
    %979 = cast(meta[relay.Constant][48] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %980 = cast(meta[relay.Constant][49] /* ty=Tensor[(4158), float64] */, dtype="float64") /* ty=Tensor[(4158), float64] */;
    %981 = reshape(%978, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float64] */;
    %982 = reshape(%979, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %983 = reshape(%980, newshape=[4158]) /* ty=Tensor[(4158), float64] */;
    %984 = @func_1387(%981, %982, %983) /* ty=(Tensor[(10, 7, 11), float64], Tensor[(9, 16, 4), float64], Tensor[(576), float64], Tensor[(594), float64], Tensor[(7, 594), int32], Tensor[(4158), float64]) */;
    %985 = @func_2752() /* ty=Tensor[(6, 6, 14), float32] */;
    %986 = %984.0;
    (%985, %986, meta[relay.Constant][47] /* ty=Tensor[(770), float64] */, meta[relay.Constant][48] /* ty=Tensor[(576), float64] */, meta[relay.Constant][49] /* ty=Tensor[(4158), float64] */)
  };
  %987() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(10, 7, 11), float64], Tensor[(770), float64], Tensor[(576), float64], Tensor[(4158), float64]) */
}

def @func_1151() -> Tensor[(6, 6, 14), float32] {
  @func_1149() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_3956(%var_3955: Tensor[(2925), bool]) -> (Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], bool, Tensor[(2925), bool]) {
  %996 = fn (%var_3952: Tensor[(2925), bool]) -> (Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], bool, Tensor[(2925), bool]) {
    %988 = @func_2647() /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), bool]) */;
    %989 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %990 = cast(%var_3952, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %991 = reshape(%989, newshape=[]) /* ty=bool */;
    %992 = reshape(%990, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), bool] */;
    %993 = @func_2569(%991, %992) /* ty=(Tensor[(15, 13, 15), bool], Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], Tensor[(1, 594), float64], Tensor[(1, 594), float64]) */;
    %994 = %988.1;
    %995 = %993.2;
    (%994, %995, True /* ty=bool */, %var_3952)
  };
  %996(%var_3955) /* ty=(Tensor[(14, 5, 13), bool], Tensor[(66, 9), float32], bool, Tensor[(2925), bool]) */
}

def @func_9455() -> Tensor[(6, 6, 14), float32] {
  @func_1247() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_5085() -> (Tensor[(6, 11, 9), float64],) {
  %997 = @func_5070() /* ty=(Tensor[(6, 11, 9), float64], Tensor[(6, 6, 14), float64]) */;
  %998 = %997.0;
  (%998,)
}

def @func_8722() -> (Tensor[(6, 6, 14), float32],) {
  %999 = @func_2752() /* ty=Tensor[(6, 6, 14), float32] */;
  (%999,)
}

def @func_4550(%var_4548: Tensor[(4158), float64], %var_4549: bool) -> (Tensor[(770), float64], Tensor[(14, 5, 13), uint64], Tensor[(4158), float64], bool, Tensor[(2925), float64]) {
  %1012 = fn (%var_4532: Tensor[(4158), float64], %var_4533: bool) -> (Tensor[(770), float64], Tensor[(14, 5, 13), uint64], Tensor[(4158), float64], bool, Tensor[(2925), float64]) {
    %1000 = @func_2433() /* ty=(Tensor[(770), float64],) */;
    %1001 = cast(%var_4532, dtype="float64") /* ty=Tensor[(4158), float64] */;
    %1002 = cast(%var_4533, dtype="bool") /* ty=bool */;
    %1003 = cast(meta[relay.Constant][50] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %1004 = reshape(%1001, newshape=[1, 4158]) /* ty=Tensor[(1, 4158), float64] */;
    %1005 = reshape(%1002, newshape=[]) /* ty=bool */;
    %1006 = reshape(%1003, newshape=[2925]) /* ty=Tensor[(2925), bool] */;
    %1007 = @func_3372(%1004, %1005, %1006) /* ty=(Tensor[(576), float64], Tensor[(770), float64], Tensor[(144, 4), float64], Tensor[(1, 4158), float64], Tensor[(1, 594), float64], Tensor[(2925), bool], Tensor[(14, 5, 13), uint64], Tensor[(1, 4158), float64]) */;
    %1008 = cast(meta[relay.Constant][50] /* ty=Tensor[(2925), bool] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
    %1009 = %1000.0;
    %1010 = %1007.6;
    %1011 = log2(%1008) /* ty=Tensor[(2925), float64] */;
    (%1009, %1010, %var_4532, %var_4533, %1011)
  };
  %1012(%var_4548, %var_4549) /* ty=(Tensor[(770), float64], Tensor[(14, 5, 13), uint64], Tensor[(4158), float64], bool, Tensor[(2925), float64]) */
}

def @func_5087() -> (Tensor[(6, 11, 9), float64],) {
  @func_5085() /* ty=(Tensor[(6, 11, 9), float64],) */
}

def @func_6892(%var_6866: Tensor[(66, 9), float64], %var_6878: Tensor[(66, 9), float32]) -> (Tensor[(66, 9), int8], Tensor[(14, 5, 13), bool]) {
  %1013 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %1014 = %1013.4;
  %1015 = cast(%var_6866, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %1016 = shape_of(%1014, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1017 = cast(%1014, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1019 = divide(%1017, %1018) /* ty=Tensor[(66, 9), float32] */;
  %1020 = cast(%var_6878, dtype="int8") /* ty=Tensor[(66, 9), int8] */;
  %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1022 = cast(%1019, dtype="int8") /* ty=Tensor[(66, 9), int8] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1024 = bitwise_xor(%1022, %1023) /* ty=Tensor[(66, 9), int8] */;
  %1025 = @func_4433() /* ty=Tensor[(14, 5, 13), bool] */;
  (%1024, %1025)
}

def @func_7853() -> Tensor[(6, 6, 14), float32] {
  @func_7851() /* ty=Tensor[(6, 6, 14), float32] */
}

def @func_1099() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) {
  @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */
}

def @func_6987() -> Tensor[(6, 6, 14), uint8] {
  @func_6985() /* ty=Tensor[(6, 6, 14), uint8] */
}

def @func_4061() -> Tensor[(6, 11, 9), float64] {
  @func_4059() /* ty=Tensor[(6, 11, 9), float64] */
}

def @func_866() -> (Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) {
  %1040 = fn () -> (Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) {
    %1026 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
    %1027 = %1026.1;
    %1028 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 6, 14), float32] */, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
    %1029 = shape_of(%1027, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1030 = cast(%1027, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
    %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1032 = divide(%1030, %1031) /* ty=Tensor[(6, 6, 14), float64] */;
    %1033 = cast(%1032, dtype="uint8") /* ty=Tensor[(6, 6, 14), uint8] */;
    %1034 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(6, 6, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1035 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 6, 14), float32] */, dtype="uint8") /* ty=Tensor[(6, 6, 14), uint8] */;
    %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1037 = cast(%1027, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
    %1038 = minimum(%1035, %1036) /* ty=Tensor[(6, 6, 14), uint8] */;
    %1039 = rsqrt(%1037) /* ty=Tensor[(6, 6, 14), float32] */;
    (%1038, %1039)
  };
  %1040() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */
}

def @func_2433() -> (Tensor[(770), float64],) {
  %1041 = @func_1779() /* ty=Tensor[(770), float64] */;
  (%1041,)
}

def @func_1149() -> Tensor[(6, 6, 14), float32] {
  %1042 = @func_1097() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) */;
  %1042.0
}

def @func_1097() -> (Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64], Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float64]) {
  %1043 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %1044 = cast(meta[relay.Constant][52] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %1045 = reshape(%1044, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %1046 = @func_637() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64], Tensor[(1, 594), float64]) */;
  %1047 = @func_865() /* ty=(Tensor[(6, 6, 14), uint8], Tensor[(6, 6, 14), float32]) */;
  %1048 = %1047.0;
  %1049 = cast(%1048, dtype="float32") /* ty=Tensor[(6, 6, 14), float32] */;
  %1050 = cos(%1049) /* ty=Tensor[(6, 6, 14), float32] */;
  %1051 = cast(%1048, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %1052 = shape_of(%1050, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1053 = cast(%1050, dtype="bool") /* ty=Tensor[(6, 6, 14), bool] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1055 = logical_or(%1053, %1054) /* ty=Tensor[(6, 6, 14), bool] */;
  %1056 = cast(%1055, dtype="float64") /* ty=Tensor[(6, 6, 14), float64] */;
  %1057 = %1043.1;
  %1058 = @func_228(%1045) /* ty=Tensor[(6, 11, 9), float64] */;
  %1059 = %1046.1;
  %1060 = acos(%1056) /* ty=Tensor[(6, 6, 14), float64] */;
  (%1057, %1058, meta[relay.Constant][52] /* ty=Tensor[(594), float64] */, %1059, %1060)
}

def @func_7108() -> (Tensor[(770), float64], Tensor[(14, 5, 13), bool], Tensor[(6, 6, 14), uint8]) {
  %1061 = @func_2148() /* ty=(Tensor[(6, 6, 14), float64], Tensor[(14, 5, 13), bool], Tensor[(910), int64], Tensor[(6, 11, 9), float64], Tensor[(66, 9), float64], Tensor[(6, 6, 14), int32]) */;
  %1062 = @func_2916() /* ty=Tensor[(770), float64] */;
  %1063 = %1061.1;
  %1064 = @func_4446() /* ty=Tensor[(6, 6, 14), uint8] */;
  (%1062, %1063, %1064)
}

def @func_8199() -> (Tensor[(6, 11, 9), float64],) {
  @func_8197() /* ty=(Tensor[(6, 11, 9), float64],) */
}

def @func_8652() -> (Tensor[(6, 6, 14), int32],) {
  %1066 = fn () -> (Tensor[(6, 6, 14), int32],) {
    %1065 = @func_8002() /* ty=Tensor[(6, 6, 14), int32] */;
    (%1065,)
  };
  %1066() /* ty=(Tensor[(6, 6, 14), int32],) */
}

def @func_4211() -> (Tensor[(2925), bool], Tensor[(2925), bool], Tensor[(14, 5, 13), float64]) {
  @func_4209() /* ty=(Tensor[(2925), bool], Tensor[(2925), bool], Tensor[(14, 5, 13), float64]) */
}

def @func_1247() -> Tensor[(6, 6, 14), float32] {
  %1067 = @func_539() /* ty=(Tensor[(6, 6, 14), float32],) */;
  %1067.0
}

def @func_7196() -> Tensor[(6, 11, 9), float64] {
  %1069 = fn () -> Tensor[(6, 11, 9), float64] {
    %1068 = @func_5610() /* ty=(Tensor[(6, 6, 14), float32], Tensor[(6, 11, 9), float64]) */;
    %1068.1
  };
  %1069() /* ty=Tensor[(6, 11, 9), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen532/build/output.py:3258: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen532/build/output.py", line 3263, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(66) tvmgen_default_fused_reshape_subtract_cast_reshape_equal_cast_cosh_kernel0(float* __restrict__ T_cosh, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1, signed char* __restrict__ placeholder2) {
  T_cosh[(((int)threadIdx.x))] = coshf(((float)(((bool)placeholder[(((int)threadIdx.x))]) == ((bool)(placeholder1[(((int)threadIdx.x))] - placeholder2[(((int)threadIdx.x))])))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


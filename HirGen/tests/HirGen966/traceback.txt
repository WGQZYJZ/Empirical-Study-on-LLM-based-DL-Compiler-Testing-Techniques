==========mod==========
#[version = "0.0.5"]
def @func_7300() -> Tensor[(1, 11, 15), float64] {
  %0 = @func_6910() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), uint64], Tensor[(13, 8, 6), float64]) */;
  %0.0
}

def @func_7536() -> (Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) {
  %1 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %2 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %3 = %1.1;
  %4 = %2.0;
  (%3, %4)
}

def @func_11183() -> (Tensor[(13, 8, 6), float64], Tensor[(165, 10), bool], Tensor[(1155), uint32], Tensor[(110, 15), uint32]) {
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(1155), uint32] */, dtype="uint32") /* ty=Tensor[(1155), uint32] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(110, 15), uint32] */, dtype="uint32") /* ty=Tensor[(110, 15), uint32] */;
  %7 = reshape(%5, newshape=[165, 7]) /* ty=Tensor[(165, 7), uint32] */;
  %8 = reshape(%6, newshape=[165, 10]) /* ty=Tensor[(165, 10), uint32] */;
  %9 = @func_5805(%7, %8) /* ty=(Tensor[(165, 7), bool], Tensor[(165, 10), bool]) */;
  %10 = @func_10562() /* ty=Tensor[(13, 8, 6), float64] */;
  %11 = %9.1;
  (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(1155), uint32] */, meta[relay.Constant][1] /* ty=Tensor[(110, 15), uint32] */)
}

def @func_5032() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %12 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %13 = %12.0;
  %14 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  (%13, %14)
}

def @func_2345() -> Tensor[(1, 11, 15), float32] {
  %15 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %15.2
}

def @func_4943(%var_4940: Tensor[(330), float32]) -> (Tensor[(165, 1), float64], Tensor[(12, 13, 15), float32], Tensor[(330), float32]) {
  %16 = @func_3028() /* ty=(Tensor[(165, 1), float64],) */;
  %17 = cast(%var_4940, dtype="float32") /* ty=Tensor[(330), float32] */;
  %18 = reshape(%17, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %19 = @func_4419(%18) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, 330), uint64]) */;
  %20 = %16.0;
  %21 = %19.0;
  (%20, %21, %var_4940)
}

def @func_13108() -> (Tensor[(1, 11, 15), float64],) {
  %22 = @func_8569() /* ty=(Tensor[(165, 9), bool], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) */;
  %23 = %22.2;
  (%23,)
}

def @func_13231() -> (Tensor[(1, 11, 15), float64],) {
  %24 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %25 = %24.0;
  (%25,)
}

def @func_5274() -> Tensor[(13, 8, 6), float64] {
  %26 = @func_3968() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) */;
  %26.1
}

def @func_11812(%var_11800: Tensor[(420), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(14, 3, 10), float32], Tensor[(420), float32]) {
  %27 = @func_8959() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32], Tensor[(13, 8, 6), float64]) */;
  %28 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %29 = cast(%var_11800, dtype="float32") /* ty=Tensor[(420), float32] */;
  %30 = reshape(%29, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float32] */;
  %31 = %27.1;
  %32 = %28.0;
  %33 = @func_9113(%30) /* ty=Tensor[(14, 3, 10), float32] */;
  (%31, %32, %33, %var_11800)
}

def @func_7548() -> Tensor[(16, 14, 14), uint64] {
  @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */
}

def @func_9007() -> Tensor[(13, 8, 6), bool] {
  @func_2840() /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_6325(%var_6295: Tensor[(13, 8, 6), bool]) -> (Tensor[(13, 8, 6), uint8], Tensor[(13, 8, 6), float64]) {
  %34 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %35 = %34.0;
  %36 = cast(%var_6295, dtype="uint8") /* ty=Tensor[(13, 8, 6), uint8] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="uint8") /* ty=Tensor[(13, 8, 6), uint8] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %40 = @func_6123() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %41 = bitwise_or(%38, %39) /* ty=Tensor[(13, 8, 6), uint8] */;
  %42 = %40.0;
  (%41, %42)
}

def @func_8115() -> Tensor[(13, 8, 6), float64] {
  %43 = @func_6123() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %43.0
}

def @func_11268(%var_11221: Tensor[(6, 2, 10), float32]) -> (Tensor[(6, 2, 10), float32], Tensor[(2340), int8], Tensor[(13, 8, 6), bool], Tensor[(6, 2, 10), float32], Tensor[(13, 8, 6), float64]) {
  %44 = cast(%var_11221, dtype="float32") /* ty=Tensor[(6, 2, 10), float32] */;
  %45 = log10(%44) /* ty=Tensor[(6, 2, 10), float32] */;
  %46 = cast(%45, dtype="float32") /* ty=Tensor[(6, 2, 10), float32] */;
  %47 = @func_5054() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) */;
  %48 = @func_7137() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) */;
  %49 = cast(%45, dtype="float32") /* ty=Tensor[(6, 2, 10), float32] */;
  %50 = @func_7536() /* ty=(Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) */;
  %51 = sigmoid(%46) /* ty=Tensor[(6, 2, 10), float32] */;
  %52 = %47.1;
  %53 = %48.1;
  %54 = sinh(%49) /* ty=Tensor[(6, 2, 10), float32] */;
  %55 = %50.1;
  (%51, %52, %53, %54, %55)
}

def @func_6030() -> Tensor[(13, 8, 6), float64] {
  %56 = @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %56.0
}

def @func_10197() -> Tensor[(?, 11, 15), uint16] {
  @func_5874() /* ty=Tensor[(?, 11, 15), uint16] */
}

def @func_5805(%var_5787: Tensor[(165, 7), uint32], %var_5799: Tensor[(165, 10), uint32]) -> (Tensor[(165, 7), bool], Tensor[(165, 10), bool]) {
  %57 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
  %58 = %57.0;
  %59 = cast(%58, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %60 = cast(%var_5787, dtype="bool") /* ty=Tensor[(165, 7), bool] */;
  %61 = cast(%58, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %62 = cast(%var_5799, dtype="bool") /* ty=Tensor[(165, 10), bool] */;
  %63 = logical_and(%59, %60) /* ty=Tensor[(165, 7), bool] */;
  %64 = not_equal(%61, %62) /* ty=Tensor[(165, 10), bool] */;
  (%63, %64)
}

def @func_9335() -> Tensor[(13, 8, 6), bool] {
  %65 = @func_4462() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %65.0
}

def @func_13220() -> (Tensor[(165, 1), float32], Tensor[(165, 5), uint32], Tensor[(825), uint32]) {
  %66 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %67 = %66.2;
  %68 = cast(%67, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
  %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(825), uint32] */, dtype="uint32") /* ty=Tensor[(825), uint32] */;
  %70 = reshape(%69, newshape=[165, 5]) /* ty=Tensor[(165, 5), uint32] */;
  %71 = atanh(%68) /* ty=Tensor[(165, 1), float32] */;
  %72 = @func_8826(%70) /* ty=Tensor[(165, 5), uint32] */;
  (%71, %72, meta[relay.Constant][2] /* ty=Tensor[(825), uint32] */)
}

def @func_5309() -> (Tensor[(1, 11, 15), float32],) {
  %73 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %74 = %73.2;
  (%74,)
}

def @func_8484(%var_8441: Tensor[(15, 11, 7), float64]) -> (Tensor[(15, 11, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(15, 11, 7), float32], Tensor[(?, 11, 15), uint16]) {
  %75 = cast(%var_8441, dtype="float64") /* ty=Tensor[(15, 11, 7), float64] */;
  %76 = @func_3611() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %77 = cast(%var_8441, dtype="float32") /* ty=Tensor[(15, 11, 7), float32] */;
  %78 = @func_7263() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(2340), int8]) */;
  %79 = atan(%75) /* ty=Tensor[(15, 11, 7), float64] */;
  %80 = %76.1;
  %81 = log10(%77) /* ty=Tensor[(15, 11, 7), float32] */;
  %82 = %78.0;
  (%79, %80, %81, %82)
}

def @func_8705() -> (Tensor[(13, 8, 6), bool],) {
  %83 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  (%83,)
}

def @func_12302() -> (Tensor[(13, 8, 6), bool], Tensor[(165), float64], Tensor[(11, 15), float64], Tensor[(1, 11, 15), float32]) {
  %84 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15), float64] */;
  %85 = reshape(%84, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %86 = @func_6261(%85) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(165), float64]) */;
  %87 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %88 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  %89 = %86.1;
  %90 = %87.0;
  (%88, %89, meta[relay.Constant][3] /* ty=Tensor[(11, 15), float64] */, %90)
}

def @func_12500() -> (Tensor[(13, 8, 6), float64], Tensor[(3, 12, 11), uint32], Tensor[(396), uint32], Tensor[(13, 8, 6), bool]) {
  %91 = @func_7137() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) */;
  %92 = cast(meta[relay.Constant][4] /* ty=Tensor[(396), uint32] */, dtype="uint32") /* ty=Tensor[(396), uint32] */;
  %93 = reshape(%92, newshape=[3, 12, 11]) /* ty=Tensor[(3, 12, 11), uint32] */;
  %94 = @func_6224(%93) /* ty=(Tensor[(3, 12, 11), uint32],) */;
  %95 = %91.0;
  %96 = %94.0;
  %97 = @func_9007() /* ty=Tensor[(13, 8, 6), bool] */;
  (%95, %96, meta[relay.Constant][4] /* ty=Tensor[(396), uint32] */, %97)
}

def @func_3111() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  %98 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
  %99 = @func_3010() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %100 = %98.0;
  %101 = %99.0;
  (%100, %101)
}

def @func_3010() -> (Tensor[(13, 8, 6), float64],) {
  %102 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  (%102,)
}

def @func_4583(%var_4569: Tensor[(165), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(165), float64], Tensor[(13, 8, 6), float64]) {
  %103 = @func_3968() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) */;
  %104 = cast(%var_4569, dtype="float64") /* ty=Tensor[(165), float64] */;
  %105 = reshape(%104, newshape=[1, 11, 15]) /* ty=Tensor[(1, 11, 15), float64] */;
  %106 = @func_2183(%105) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %107 = @func_3157() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %108 = %103.1;
  %109 = %106.0;
  %110 = %107.0;
  (%108, %109, %var_4569, %110)
}

def @func_4447() -> Tensor[(1, 11, 15), float32] {
  %111 = @func_3611() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %111.0
}

def @func_9866(%var_9845: Tensor[(320), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), bool], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1650), float64], Tensor[(330), float32]) {
  %112 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %113 = cast(%var_9845, dtype="float32") /* ty=Tensor[(320), float32] */;
  %114 = reshape(%113, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
  %115 = @func_1568(%114) /* ty=(Tensor[(16, 2, 10), float32],) */;
  %116 = cast(meta[relay.Constant][5] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %117 = reshape(%116, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %118 = @func_6481(%117) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */;
  %119 = @func_7300() /* ty=Tensor[(1, 11, 15), float64] */;
  %120 = %112.0;
  %121 = %115.0;
  %122 = %118.2;
  (%119, %120, %121, %var_9845, %122, meta[relay.Constant][5] /* ty=Tensor[(330), float32] */)
}

def @func_6523() -> Tensor[(13, 8, 6), float64] {
  %123 = @func_6364() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %123.0
}

def @func_5929() -> (Tensor[(1, 11, 15), float64],) {
  %124 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %125 = %124.0;
  (%125,)
}

def @func_3508() -> Tensor[(1, 11, 15), float32] {
  @func_2345() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_4419(%var_4389: Tensor[(330), float32]) -> (Tensor[(12, 13, 15), float32], Tensor[(165, 330), uint64]) {
  %126 = @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %127 = cast(%var_4389, dtype="float32") /* ty=Tensor[(330), float32] */;
  %128 = reshape(%127, newshape=[165, 2]) /* ty=Tensor[(165, 2), float32] */;
  %129 = @func_2968(%128) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */;
  %130 = %129.1;
  %131 = cast(%130, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %132 = cast(%var_4389, dtype="bool") /* ty=Tensor[(330), bool] */;
  %133 = equal(%131, %132) /* ty=Tensor[(165, 330), bool] */;
  %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(165, 330), bool] */, dtype="bool") /* ty=Tensor[(165, 330), bool] */;
  %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(2), int32] */;
  %136 = cast(%133, dtype="bool") /* ty=Tensor[(165, 330), bool] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %138 = less(%136, %137) /* ty=Tensor[(165, 330), bool] */;
  %139 = cast(%138, dtype="uint64") /* ty=Tensor[(165, 330), uint64] */;
  %140 = cast(%130, dtype="uint64") /* ty=Tensor[(165, ?), uint64] */;
  %141 = %126.1;
  %142 = minimum(%139, %140) /* ty=Tensor[(165, 330), uint64] */;
  (%141, %142)
}

def @func_3674() -> (Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
  %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(2340), int8] */, dtype="int8") /* ty=Tensor[(2340), int8] */;
  %144 = reshape(%143, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), int8] */;
  %145 = @func_2109(%144) /* ty=(Tensor[(12, 13, 15), float32],) */;
  %146 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %147 = %145.0;
  (%146, %147, meta[relay.Constant][7] /* ty=Tensor[(2340), int8] */)
}

def @func_11336() -> Tensor[(1, 11, 15), float32] {
  %148 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %148.1
}

def @func_8777() -> Tensor[(?, 11, 15), float64] {
  @func_7493() /* ty=Tensor[(?, 11, 15), float64] */
}

def @func_5974() -> (Tensor[(1, 11, 15), float32],) {
  %149 = @func_3508() /* ty=Tensor[(1, 11, 15), float32] */;
  (%149,)
}

def @func_6555() -> Tensor[(13, 8, 6), float64] {
  @func_5565() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_8852() -> Tensor[(1, 11, 15), float32] {
  %150 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %150.0
}

def @func_2183(%var_2169: Tensor[(1, 11, 15), float64]) -> (Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
  %151 = cast(%var_2169, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %152 = cast(meta[relay.Constant][8] /* ty=Tensor[(2340), int8] */, dtype="int8") /* ty=Tensor[(2340), int8] */;
  %153 = reshape(%152, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), int8] */;
  %154 = @func_2109(%153) /* ty=(Tensor[(12, 13, 15), float32],) */;
  %155 = sqrt(%151) /* ty=Tensor[(1, 11, 15), float64] */;
  %156 = %154.0;
  (%155, %156, meta[relay.Constant][8] /* ty=Tensor[(2340), int8] */)
}

def @func_7650() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint8]) {
  %157 = @func_5929() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %158 = %157.0;
  %159 = @func_5913() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */;
  %160 = %159.0;
  %161 = cast(%160, dtype="uint8") /* ty=Tensor[(?, 11, 15), uint8] */;
  %162 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%158, dtype="uint8") /* ty=Tensor[(1, 11, 15), uint8] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %165 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
  %166 = left_shift(%163, %164) /* ty=Tensor[(?, 11, 15), uint8] */;
  (%165, %166)
}

def @func_6192(%var_6164: Tensor[(13, 8, 6), float64]) -> Tensor[(13, 8, 6), bool] {
  %167 = @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %168 = %167.0;
  %169 = cast(%var_6164, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %170 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%168, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%171, %172) /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_12003(%var_11952: Tensor[(13, 8, 6), float64]) -> (Tensor[(13, 8, 6), bool], Tensor[(?, 11, 15), uint16]) {
  %173 = @func_4829() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) */;
  %174 = %173.0;
  %175 = cast(%var_11952, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%174, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = less(%177, %178) /* ty=Tensor[(13, 8, 6), bool] */;
  %180 = @func_5874() /* ty=Tensor[(?, 11, 15), uint16] */;
  (%179, %180)
}

def @func_6224(%var_6213: Tensor[(3, 12, 11), uint32]) -> (Tensor[(3, 12, 11), uint32],) {
  %181 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 12, 11), uint32] */, dtype="uint32") /* ty=Tensor[(3, 12, 11), uint32] */;
  %182 = shape_of(%var_6213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%var_6213, dtype="uint32") /* ty=Tensor[(3, 12, 11), uint32] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %185 = logical_xor(%183, %184) /* ty=Tensor[(3, 12, 11), uint32] */;
  (%185,)
}

def @func_2447() -> (Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) {
  %186 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %187 = cast(%186, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %188 = reshape(%187, newshape=[1, 11, 15]) /* ty=Tensor[(1, 11, 15), float64] */;
  %189 = @func_2183(%188) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %190 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %191 = %190.1;
  %192 = cast(%186, dtype="uint32") /* ty=Tensor[(1, 11, 15), uint32] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(2), int32] */;
  %194 = cast(%191, dtype="uint32") /* ty=Tensor[(165, 1), uint32] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %196 = %189.1;
  %197 = logical_xor(%194, %195) /* ty=Tensor[(165, ?), uint32] */;
  %198 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  (%196, %197, %198)
}

def @func_8749() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64]) {
  %199 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %200 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %201 = %199.0;
  %202 = @func_6030() /* ty=Tensor[(13, 8, 6), float64] */;
  (%200, %201, %202)
}

def @func_3747() -> (Tensor[(13, 8, 6), float64],) {
  %203 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  (%203,)
}

def @func_13024() -> Tensor[(13, 8, 6), float64] {
  %204 = @func_3157() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %204.0
}

def @func_6364() -> (Tensor[(13, 8, 6), float64],) {
  %205 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  (%205,)
}

def @func_8959() -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32], Tensor[(13, 8, 6), float64]) {
  %206 = @func_8154() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %207 = @func_7385() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) */;
  %208 = %207.1;
  %209 = cast(%208, dtype="float32") /* ty=Tensor[(165, ?), float32] */;
  %210 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %211 = @func_4892() /* ty=Tensor[(13, 8, 6), float32] */;
  %212 = %206.0;
  %213 = log10(%209) /* ty=Tensor[(165, ?), float32] */;
  %214 = %210.0;
  (%211, %212, %213, %214)
}

def @func_6448() -> (Tensor[(1, 11, 15), float64],) {
  %215 = @func_5929() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %216 = %215.0;
  (%216,)
}

def @func_13353() -> (Tensor[(13, 8, 6), float64],) {
  %217 = @func_12500() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(3, 12, 11), uint32], Tensor[(396), uint32], Tensor[(13, 8, 6), bool]) */;
  %218 = %217.0;
  (%218,)
}

def @func_3611() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %219 = @func_3157() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %220 = @func_3508() /* ty=Tensor[(1, 11, 15), float32] */;
  %221 = %219.0;
  %222 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  (%220, %221, %222)
}

def @func_5163() -> (Tensor[(13, 8, 6), bool],) {
  %223 = @func_2840() /* ty=Tensor[(13, 8, 6), bool] */;
  (%223,)
}

def @func_6695() -> Tensor[(13, 8, 6), float64] {
  @func_6523() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_12887(%var_12885: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64], Tensor[(330), float32]) {
  %224 = @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %225 = @func_7536() /* ty=(Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) */;
  %226 = cast(%var_12885, dtype="float32") /* ty=Tensor[(330), float32] */;
  %227 = reshape(%226, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %228 = @func_12164(%227) /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(660), uint32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) */;
  %229 = @func_8115() /* ty=Tensor[(13, 8, 6), float64] */;
  %230 = %224.1;
  %231 = %225.0;
  %232 = %228.5;
  (%229, %230, %231, %232, %var_12885)
}

def @func_5874() -> Tensor[(?, 11, 15), uint16] {
  %233 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %234 = %233.1;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(1, 11, 15), float32] */;
  %236 = log2(%235) /* ty=Tensor[(1, 11, 15), float32] */;
  %237 = cast(%236, dtype="uint16") /* ty=Tensor[(1, 11, 15), uint16] */;
  %238 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%234, dtype="uint16") /* ty=Tensor[(1, 11, 15), uint16] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%239, %240) /* ty=Tensor[(?, 11, 15), uint16] */
}

def @func_3399(%var_3373: Tensor[(165, 4), uint32]) -> Tensor[(165, 4), int16] {
  %241 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %242 = %241.1;
  %243 = cast(%242, dtype="int16") /* ty=Tensor[(165, ?), int16] */;
  %244 = cast(%var_3373, dtype="int16") /* ty=Tensor[(165, 4), int16] */;
  add(%243, %244) /* ty=Tensor[(165, 4), int16] */
}

def @func_7263() -> (Tensor[(?, 11, 15), uint16], Tensor[(2340), int8]) {
  %245 = @func_5913() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */;
  %246 = @func_5054() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) */;
  %247 = %245.0;
  %248 = %246.1;
  (%247, %248)
}

def @func_4484() -> (Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) {
  %249 = cast(meta[relay.Constant][10] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %250 = cast(meta[relay.Constant][11] /* ty=Tensor[(165), float32] */, dtype="float32") /* ty=Tensor[(165), float32] */;
  %251 = reshape(%249, newshape=[]) /* ty=uint8 */;
  %252 = reshape(%250, newshape=[165, 1]) /* ty=Tensor[(165, 1), float32] */;
  %253 = @func_4222(%251, %252) /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(5, 12, 14), bool], uint8, Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(165, 840), float32], Tensor[(165, ?), uint8], Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %254 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  %255 = %253.7;
  (%254, %255, meta[relay.Constant][10] /* ty=uint8 */, meta[relay.Constant][11] /* ty=Tensor[(165), float32] */)
}

def @func_3276() -> Tensor[(13, 8, 6), bool] {
  @func_2840() /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_10848() -> (Tensor[(1, 11, 15), float32], Tensor[(16, 16, 1), float64], Tensor[(256), float64]) {
  %256 = cast(meta[relay.Constant][12] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %257 = reshape(%256, newshape=[16, 16, 1]) /* ty=Tensor[(16, 16, 1), float64] */;
  %258 = @func_5531() /* ty=Tensor[(1, 11, 15), float32] */;
  %259 = @func_10678(%257) /* ty=Tensor[(16, 16, 1), float64] */;
  (%258, %259, meta[relay.Constant][12] /* ty=Tensor[(256), float64] */)
}

def @func_4087() -> (Tensor[(1, 11, 15), float64],) {
  %260 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %261 = %260.0;
  (%261,)
}

def @func_13439() -> (uint8, Tensor[(165), float64], Tensor[(1, 11, 15), float32], Tensor[(?, 11, 15), uint16]) {
  %262 = @func_4484() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) */;
  %263 = @func_12302() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165), float64], Tensor[(11, 15), float64], Tensor[(1, 11, 15), float32]) */;
  %264 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %265 = %264.0;
  %266 = @func_7493() /* ty=Tensor[(?, 11, 15), float64] */;
  %267 = cast(%266, dtype="uint16") /* ty=Tensor[(?, 11, 15), uint16] */;
  %268 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%265, dtype="uint16") /* ty=Tensor[(1, 11, 15), uint16] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %271 = %262.2;
  %272 = %263.1;
  %273 = @func_8852() /* ty=Tensor[(1, 11, 15), float32] */;
  %274 = logical_xor(%269, %270) /* ty=Tensor[(?, 11, 15), uint16] */;
  (%271, %272, %273, %274)
}

def @func_6649() -> (Tensor[(13, 8, 6), float64],) {
  %275 = @func_6602() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %276 = %275.0;
  (%276,)
}

def @func_7879() -> (Tensor[(13, 8, 6), float64],) {
  %277 = @func_4878() /* ty=Tensor[(13, 8, 6), float64] */;
  (%277,)
}

def @func_12764() -> Tensor[(165, 1), float64] {
  @func_8979() /* ty=Tensor[(165, 1), float64] */
}

def @func_2306() -> (Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) {
  %278 = cast(meta[relay.Constant][13] /* ty=Tensor[(165, 1), float64] */, dtype="float64") /* ty=Tensor[(165, 1), float64] */;
  %279 = reshape(%278, newshape=[1, 11, 15]) /* ty=Tensor[(1, 11, 15), float64] */;
  %280 = @func_2183(%279) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %281 = %280.0;
  %282 = cast(%281, dtype="float32") /* ty=Tensor[(1, 11, 15), float32] */;
  %283 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %284 = asin(%282) /* ty=Tensor[(1, 11, 15), float32] */;
  (%283, meta[relay.Constant][13] /* ty=Tensor[(165, 1), float64] */, %284)
}

def @func_10664() -> Tensor[(13, 8, 6), float64] {
  %285 = @func_8959() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32], Tensor[(13, 8, 6), float64]) */;
  %285.1
}

def @func_13868() -> Tensor[(1, 11, 15), float64] {
  %286 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %286.0
}

def @func_6261(%var_6253: Tensor[(165), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(165), float64]) {
  %287 = cast(%var_6253, dtype="float64") /* ty=Tensor[(165), float64] */;
  %288 = reshape(%287, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %289 = @func_4583(%288) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(165), float64], Tensor[(13, 8, 6), float64]) */;
  %290 = @func_4878() /* ty=Tensor[(13, 8, 6), float64] */;
  %291 = %289.2;
  (%290, %291, %var_6253)
}

def @func_5913() -> (Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) {
  %292 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %293 = @func_5874() /* ty=Tensor[(?, 11, 15), uint16] */;
  %294 = %292.0;
  (%293, %294)
}

def @func_7711() -> (Tensor[(13, 8, 6), float64],) {
  %295 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %296 = %295.1;
  (%296,)
}

def @func_11286(%var_11272: Tensor[(2, 7, 15), float32], %var_11273: Tensor[(2, 7, 15), float32]) -> (Tensor[(2, 7, 15), float32], Tensor[(13, 8, 6), float32]) {
  %297 = cast(%var_11273, dtype="float32") /* ty=Tensor[(2, 7, 15), float32] */;
  %298 = shape_of(%var_11272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%var_11272, dtype="float32") /* ty=Tensor[(2, 7, 15), float32] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %301 = power(%299, %300) /* ty=Tensor[(2, 7, 15), float32] */;
  %302 = @func_7020() /* ty=Tensor[(13, 8, 6), float32] */;
  (%301, %302)
}

def @func_11599(%var_11590: Tensor[(165, 14), uint32]) -> Tensor[(165, 14), bool] {
  %303 = @func_11045() /* ty=Tensor[(165, ?), uint32] */;
  %304 = cast(%303, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %305 = cast(%var_11590, dtype="bool") /* ty=Tensor[(165, 14), bool] */;
  less(%304, %305) /* ty=Tensor[(165, 14), bool] */
}

def @func_8154() -> (Tensor[(13, 8, 6), float64],) {
  %306 = @func_5032() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %307 = %306.0;
  (%307,)
}

def @func_6910() -> (Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), uint64], Tensor[(13, 8, 6), float64]) {
  %308 = @func_4358() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %309 = %308.0;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %311 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %312 = cast(%309, dtype="float32") /* ty=Tensor[(1, 11, 15), float32] */;
  %313 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
  %314 = sigmoid(%310) /* ty=Tensor[(1, 11, 15), float64] */;
  %315 = %311.0;
  %316 = cos(%312) /* ty=Tensor[(1, 11, 15), float32] */;
  %317 = %313.0;
  %318 = @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */;
  %319 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  (%314, %315, %316, %317, %318, %319)
}

def @func_5235() -> (Tensor[(1, 11, 15), float32],) {
  %320 = @func_4670() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %321 = %320.0;
  (%321,)
}

def @func_4878() -> Tensor[(13, 8, 6), float64] {
  %322 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %322.0
}

def @func_1568(%var_1513: Tensor[(16, 2, 10), float32]) -> (Tensor[(16, 2, 10), float32],) {
  %323 = cast(%var_1513, dtype="float32") /* ty=Tensor[(16, 2, 10), float32] */;
  %324 = sinh(%323) /* ty=Tensor[(16, 2, 10), float32] */;
  (%324,)
}

def @func_6408(%var_6377: Tensor[(14, 5, 11), float32], %var_6378: Tensor[(14, 5, 11), float32], %var_6390: Tensor[(14, 5, 11), float32]) -> (Tensor[(14, 5, 11), bool], Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(14, 5, 11), uint32], Tensor[(13, 8, 6), float64]) {
  %325 = cast(%var_6378, dtype="bool") /* ty=Tensor[(14, 5, 11), bool] */;
  %326 = shape_of(%var_6377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%var_6377, dtype="bool") /* ty=Tensor[(14, 5, 11), bool] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %329 = cast(meta[relay.Constant][14] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %330 = reshape(%329, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %331 = @func_4583(%330) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(165), float64], Tensor[(13, 8, 6), float64]) */;
  %332 = cast(%var_6390, dtype="uint32") /* ty=Tensor[(14, 5, 11), uint32] */;
  %333 = shape_of(%var_6378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_6378, dtype="uint32") /* ty=Tensor[(14, 5, 11), uint32] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %336 = greater(%327, %328) /* ty=Tensor[(14, 5, 11), bool] */;
  %337 = %331.0;
  %338 = bitwise_xor(%334, %335) /* ty=Tensor[(14, 5, 11), uint32] */;
  %339 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  (%336, %337, meta[relay.Constant][14] /* ty=Tensor[(165), float64] */, %338, %339)
}

def @func_8102() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(11, 15), float64], Tensor[(2340), int8]) {
  %340 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %341 = cast(meta[relay.Constant][15] /* ty=Tensor[(11, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15), float64] */;
  %342 = reshape(%341, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %343 = @func_6261(%342) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(165), float64]) */;
  %344 = @func_7263() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(2340), int8]) */;
  %345 = @func_5565() /* ty=Tensor[(13, 8, 6), float64] */;
  %346 = %340.0;
  %347 = %343.0;
  %348 = %344.1;
  (%345, %346, %347, meta[relay.Constant][15] /* ty=Tensor[(11, 15), float64] */, %348)
}

def @func_12081() -> (Tensor[(1, 11, 15), float32], Tensor[(165, 9), bool], Tensor[(16, 14, 14), uint64]) {
  %349 = @func_8569() /* ty=(Tensor[(165, 9), bool], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) */;
  %350 = @func_6783() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), uint64]) */;
  %351 = @func_6428() /* ty=Tensor[(1, 11, 15), float32] */;
  %352 = %349.0;
  %353 = %350.1;
  (%351, %352, %353)
}

def @func_3880() -> (Tensor[(1, 11, 15), float64],) {
  %354 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %356 = acos(%355) /* ty=Tensor[(1, 11, 15), float64] */;
  (%356,)
}

def @func_13737() -> Tensor[(1, 11, 15), float64] {
  %357 = @func_7847() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), float64], Tensor[(1, 11, 15), float64]) */;
  %357.2
}

def @func_7557() -> Tensor[(1, 11, 15), float32] {
  %358 = @func_5309() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %358.0
}

def @func_9489() -> (Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32]) {
  %359 = @func_7746() /* ty=(Tensor[(165, ?), float32],) */;
  %360 = @func_6695() /* ty=Tensor[(13, 8, 6), float64] */;
  %361 = %359.0;
  (%360, %361)
}

def @func_10290(%var_10256: Tensor[(12, 13, 3), int32], %var_10257: Tensor[(12, 13, 3), int32]) -> (Tensor[(12, 13, 3), int32], Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(13, 8, 6), float64]) {
  %362 = cast(%var_10257, dtype="int32") /* ty=Tensor[(12, 13, 3), int32] */;
  %363 = shape_of(%var_10256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%var_10256, dtype="int32") /* ty=Tensor[(12, 13, 3), int32] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %366 = @func_7879() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %367 = bitwise_and(%364, %365) /* ty=Tensor[(12, 13, 3), int32] */;
  %368 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
  %369 = @func_8979() /* ty=Tensor[(165, 1), float64] */;
  %370 = %366.0;
  (%367, %368, %369, %370)
}

def @func_13726() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  %371 = @func_5565() /* ty=Tensor[(13, 8, 6), float64] */;
  %372 = @func_6695() /* ty=Tensor[(13, 8, 6), float64] */;
  (%371, %372)
}

def @func_3645() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) {
  %373 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(13, 8, 6), float64] */;
  %375 = cast(meta[relay.Constant][16] /* ty=Tensor[(40, 8), float32] */, dtype="float32") /* ty=Tensor[(40, 8), float32] */;
  %376 = reshape(%375, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
  %377 = @func_1568(%376) /* ty=(Tensor[(16, 2, 10), float32],) */;
  %378 = acos(%374) /* ty=Tensor[(13, 8, 6), float64] */;
  %379 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %380 = %377.0;
  (%378, %379, %380, meta[relay.Constant][16] /* ty=Tensor[(40, 8), float32] */)
}

def @func_13174() -> Tensor[(?, 11, 15), uint16] {
  %381 = @func_5913() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */;
  %381.0
}

def @func_10711() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  %382 = @func_8154() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %383 = @func_6428() /* ty=Tensor[(1, 11, 15), float32] */;
  %384 = %382.0;
  (%383, %384)
}

def @func_12806(%var_12801: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
  %385 = @func_7385() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) */;
  %386 = %385.0;
  %387 = cast(%386, dtype="float32") /* ty=Tensor[(1, 11, 15), float32] */;
  %388 = cast(%var_12801, dtype="float32") /* ty=Tensor[(7, 11, 15), float32] */;
  divide(%387, %388) /* ty=Tensor[(7, 11, 15), float32] */
}

def @func_12826() -> Tensor[(1650), float64] {
  %389 = @func_7220() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint32], Tensor[(1650), float64], Tensor[(330), float32]) */;
  %389.2
}

def @func_5639(%var_5620: Tensor[(320), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64], Tensor[(320), float32], Tensor[(320), float32], Tensor[(1, 11, 15), float32]) {
  %390 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %391 = @func_3968() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) */;
  %392 = cast(%var_5620, dtype="float32") /* ty=Tensor[(320), float32] */;
  %393 = reshape(%392, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %394 = @func_5133(%393) /* ty=(Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(12, 13, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %395 = %390.0;
  %396 = %391.1;
  %397 = %394.3;
  %398 = @func_4447() /* ty=Tensor[(1, 11, 15), float32] */;
  (%395, %396, %397, %var_5620, %398)
}

def @func_9192(%var_9171: Tensor[(165, 6), float32]) -> (Tensor[(165, 6), bool],) {
  %399 = @func_7320() /* ty=(Tensor[(165, 1), float32], Tensor[(1, 11, 15), float32]) */;
  %400 = %399.0;
  %401 = cast(%400, dtype="bool") /* ty=Tensor[(165, 1), bool] */;
  %402 = cast(%var_9171, dtype="bool") /* ty=Tensor[(165, 6), bool] */;
  %403 = not_equal(%401, %402) /* ty=Tensor[(165, 6), bool] */;
  (%403,)
}

def @func_9427() -> (Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  %404 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %405 = @func_8402() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %406 = @func_3906() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %407 = @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %408 = %404.0;
  %409 = %405.1;
  %410 = %406.0;
  %411 = %407.1;
  (%408, %409, %410, %411)
}

def @func_13757() -> (Tensor[(13, 8, 6), float64],) {
  %412 = @func_6602() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %413 = %412.0;
  (%413,)
}

def @func_6783() -> (Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), uint64]) {
  %414 = @func_6428() /* ty=Tensor[(1, 11, 15), float32] */;
  %415 = @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */;
  (%414, %415)
}

def @func_9762() -> (Tensor[(330), float32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  %416 = cast(meta[relay.Constant][17] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %417 = reshape(%416, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %418 = @func_6481(%417) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */;
  %419 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %420 = @func_8402() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %421 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %422 = acosh(%421) /* ty=Tensor[(11, 9, 7), float64] */;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %424 = @func_8749() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64]) */;
  %425 = cast(%422, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %426 = @func_6364() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %427 = @func_6649() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %428 = %418.3;
  %429 = @func_5274() /* ty=Tensor[(13, 8, 6), float64] */;
  %430 = %419.0;
  %431 = %420.0;
  %432 = log10(%423) /* ty=Tensor[(11, 9, 7), float64] */;
  %433 = %424.0;
  %434 = log(%425) /* ty=Tensor[(11, 9, 7), float64] */;
  %435 = %426.0;
  %436 = %427.0;
  (%428, meta[relay.Constant][17] /* ty=Tensor[(330), float32] */, %429, %430, %431, %432, %433, %434, %435, %436)
}

def @func_8370(%var_8360: Tensor[(2, 1, 7), int32], %var_8361: Tensor[(2, 1, 7), int32]) -> (Tensor[(2, ?, 7), int32], Tensor[(2, 1, 7), float32]) {
  %437 = cast(%var_8361, dtype="int32") /* ty=Tensor[(2, 1, 7), int32] */;
  %438 = shape_of(%var_8360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%var_8360, dtype="int32") /* ty=Tensor[(2, 1, 7), int32] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %441 = cast(%var_8360, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %442 = logical_xor(%439, %440) /* ty=Tensor[(2, ?, 7), int32] */;
  %443 = sin(%441) /* ty=Tensor[(2, 1, 7), float32] */;
  (%442, %443)
}

def @func_2470() -> (Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) {
  %444 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %445 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %446 = %444.1;
  %447 = %445.1;
  (%446, %447)
}

def @func_6428() -> Tensor[(1, 11, 15), float32] {
  @func_2345() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_9547() -> (Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) {
  %448 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
  %449 = @func_4829() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) */;
  %450 = %448.1;
  %451 = %449.1;
  (%450, %451)
}

def @func_6068() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float32]) {
  %452 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %453 = @func_4892() /* ty=Tensor[(13, 8, 6), float32] */;
  (%452, %453)
}

def @func_7001() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32]) {
  %454 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
  %455 = @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %456 = cast(meta[relay.Constant][19] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %457 = reshape(%456, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
  %458 = @func_1568(%457) /* ty=(Tensor[(16, 2, 10), float32],) */;
  %459 = %454.1;
  %460 = %455.0;
  %461 = %458.0;
  (%459, %460, %461, meta[relay.Constant][19] /* ty=Tensor[(320), float32] */)
}

def @func_9503(%var_9494: Tensor[(11, 8, 6), bool]) -> (Tensor[(11, 8, 6), bool], Tensor[(13, 8, 6), float64]) {
  %462 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 8, 6), bool] */, dtype="bool") /* ty=Tensor[(11, 8, 6), bool] */;
  %463 = shape_of(%var_9494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_9494, dtype="bool") /* ty=Tensor[(11, 8, 6), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = @func_9293() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %467 = logical_or(%464, %465) /* ty=Tensor[(11, 8, 6), bool] */;
  %468 = %466.1;
  (%467, %468)
}

def @func_3906() -> (Tensor[(1, 11, 15), float32],) {
  %469 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %470 = %469.2;
  (%470,)
}

def @func_8667(%var_8654: Tensor[(330), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(165, ?), uint32], Tensor[(330), float32], Tensor[(2340), int8], Tensor[(165, 4), int16], Tensor[(660), uint32]) {
  %471 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %472 = cast(%var_8654, dtype="float32") /* ty=Tensor[(330), float32] */;
  %473 = reshape(%472, newshape=[165, 2]) /* ty=Tensor[(165, 2), float32] */;
  %474 = @func_2968(%473) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */;
  %475 = @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %476 = cast(meta[relay.Constant][21] /* ty=Tensor[(660), uint32] */, dtype="uint32") /* ty=Tensor[(660), uint32] */;
  %477 = reshape(%476, newshape=[165, 4]) /* ty=Tensor[(165, 4), uint32] */;
  %478 = %471.0;
  %479 = %474.1;
  %480 = %475.2;
  %481 = @func_3399(%477) /* ty=Tensor[(165, 4), int16] */;
  (%478, %479, %var_8654, %480, %481, meta[relay.Constant][21] /* ty=Tensor[(660), uint32] */)
}

def @func_2626() -> Tensor[(13, 8, 6), float64] {
  %482 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %482.0
}

def @func_4222(%var_4182: uint8, %var_4197: Tensor[(165, 1), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(5, 12, 14), bool], uint8, Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(165, 840), float32], Tensor[(165, ?), uint8], Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
  %483 = @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %484 = cast(%var_4182, dtype="uint8") /* ty=uint8 */;
  %485 = cast(meta[relay.Constant][22] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %486 = reshape(%484, newshape=[]) /* ty=uint8 */;
  %487 = reshape(%485, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), uint8] */;
  %488 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %489 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
  %490 = %489.1;
  %491 = cast(meta[relay.Constant][22] /* ty=Tensor[(840), uint8] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %492 = cast(%490, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
  %493 = cast(%490, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
  %494 = sqrt(%493) /* ty=Tensor[(165, 1), float32] */;
  %495 = cast(%var_4197, dtype="uint32") /* ty=Tensor[(165, 1), uint32] */;
  %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(2), int32] */;
  %497 = cast(%494, dtype="uint32") /* ty=Tensor[(165, 1), uint32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %499 = bitwise_xor(%497, %498) /* ty=Tensor[(165, ?), uint32] */;
  %500 = cast(%490, dtype="uint8") /* ty=Tensor[(165, 1), uint8] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(2), int32] */;
  %502 = cast(%499, dtype="uint8") /* ty=Tensor[(165, ?), uint8] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %504 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %505 = cast(meta[relay.Constant][23] /* ty=Tensor[(2340), int8] */, dtype="int8") /* ty=Tensor[(2340), int8] */;
  %506 = reshape(%505, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), int8] */;
  %507 = @func_2109(%506) /* ty=(Tensor[(12, 13, 15), float32],) */;
  %508 = @func_3927() /* ty=Tensor[(1, 11, 15), float32] */;
  %509 = %483.0;
  %510 = @func_3287(%486, %487) /* ty=Tensor[(5, 12, 14), bool] */;
  %511 = @func_3927() /* ty=Tensor[(1, 11, 15), float32] */;
  %512 = %488.0;
  %513 = floor_mod(%491, %492) /* ty=Tensor[(165, 840), float32] */;
  %514 = add(%502, %503) /* ty=Tensor[(165, ?), uint8] */;
  %515 = %504.0;
  %516 = %507.0;
  (%508, %509, %510, %var_4182, %511, %512, %513, %514, %515, %516, meta[relay.Constant][23] /* ty=Tensor[(2340), int8] */)
}

def @func_13463() -> Tensor[(13, 8, 6), float64] {
  %517 = @func_6649() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %517.0
}

def @func_5565() -> Tensor[(13, 8, 6), float64] {
  %518 = @func_3747() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %518.0
}

def @func_2562() -> (Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) {
  %519 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %520 = %519.1;
  %521 = cast(%520, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
  %522 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %523 = acosh(%521) /* ty=Tensor[(165, 1), float32] */;
  (%522, %523)
}

def @func_6123() -> (Tensor[(13, 8, 6), float64],) {
  %524 = @func_5565() /* ty=Tensor[(13, 8, 6), float64] */;
  (%524,)
}

def @func_4829() -> (Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) {
  %525 = @func_4644() /* ty=Tensor[(13, 8, 6), float64] */;
  %526 = cast(%525, dtype="float64") /* ty=Tensor[(13, 8, 6), float64] */;
  %527 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
  %528 = erf(%526) /* ty=Tensor[(13, 8, 6), float64] */;
  %529 = %527.1;
  (%528, %529)
}

def @func_8402() -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  %530 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %531 = @func_5032() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %532 = %530.2;
  %533 = %531.1;
  (%532, %533)
}

def @func_6817(%var_6807: Tensor[(1, 11, 15), float32]) -> (Tensor[(?, 11, 15), int64],) {
  %534 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %535 = %534.2;
  %536 = cast(%var_6807, dtype="int64") /* ty=Tensor[(1, 11, 15), int64] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="int64") /* ty=Tensor[(1, 11, 15), int64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %540 = subtract(%538, %539) /* ty=Tensor[(?, 11, 15), int64] */;
  (%540,)
}

def @func_8026() -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %541 = @func_4670() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %542 = @func_4892() /* ty=Tensor[(13, 8, 6), float32] */;
  %543 = @func_6030() /* ty=Tensor[(13, 8, 6), float64] */;
  %544 = %541.0;
  (%542, %543, %544)
}

def @func_12701(%var_12699: Tensor[(14), int32]) -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(2, ?, 7), int32], Tensor[(14), int32]) {
  %545 = @func_10793() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32]) */;
  %546 = @func_3157() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %547 = cast(%var_12699, dtype="int32") /* ty=Tensor[(14), int32] */;
  %548 = cast(%var_12699, dtype="int32") /* ty=Tensor[(14), int32] */;
  %549 = reshape(%547, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), int32] */;
  %550 = reshape(%548, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), int32] */;
  %551 = @func_8370(%549, %550) /* ty=(Tensor[(2, ?, 7), int32], Tensor[(2, 1, 7), float32]) */;
  %552 = @func_3508() /* ty=Tensor[(1, 11, 15), float32] */;
  %553 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
  %554 = %545.1;
  %555 = %546.0;
  %556 = %551.0;
  (%552, %553, %554, %555, %556, %var_12699)
}

def @func_2840() -> Tensor[(13, 8, 6), bool] {
  %557 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %558 = %557.0;
  %559 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 8, 6), float64] */, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%558, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%561, %562) /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_10588(%var_10578: Tensor[(13, 8, 6), bool]) -> Tensor[(13, 8, 6), float32] {
  %563 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  %564 = cast(%var_10578, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%566, %567) /* ty=Tensor[(13, 8, 6), float32] */
}

def @func_3157() -> (Tensor[(13, 8, 6), float64],) {
  %568 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %569 = %568.1;
  (%569,)
}

def @func_11474() -> (Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %570 = @func_10711() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %571 = @func_10793() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32]) */;
  %572 = @func_6364() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %573 = %570.0;
  %574 = %571.1;
  %575 = %572.0;
  %576 = @func_4378() /* ty=Tensor[(1, 11, 15), float32] */;
  (%573, %574, %575, %576)
}

def @func_4784(%var_4765: Tensor[(2, 160), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(2, 160), float32], Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) {
  %577 = @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */;
  %578 = cast(%577, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
  %579 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %580 = @func_4670() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %581 = cast(%var_4765, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %582 = reshape(%581, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
  %583 = @func_1568(%582) /* ty=(Tensor[(16, 2, 10), float32],) */;
  %584 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
  %585 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %586 = asinh(%578) /* ty=Tensor[(16, 14, 14), float32] */;
  %587 = %579.0;
  %588 = %580.0;
  %589 = %583.0;
  %590 = @func_4378() /* ty=Tensor[(1, 11, 15), float32] */;
  %591 = %584.0;
  %592 = %585.2;
  (%586, %587, %588, %589, %var_4765, %590, %591, %592)
}

def @func_2936() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) {
  %593 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
  %594 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %595 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %596 = %593.1;
  (%594, %595, %596)
}

def @func_11861() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint16]) {
  %597 = @func_10549() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %598 = %597.0;
  %599 = @func_5874() /* ty=Tensor[(?, 11, 15), uint16] */;
  (%598, %599)
}

def @func_2269() -> Tensor[(13, 8, 6), float64] {
  %600 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 6), float64] */;
  log2(%600) /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_4300() -> (Tensor[(165, ?), uint32],) {
  %601 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %602 = %601.0;
  (%602,)
}

def @func_9988() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  %603 = @func_5974() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %604 = %603.0;
  %605 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
  (%604, %605)
}

def @func_4670() -> (Tensor[(1, 11, 15), float32],) {
  %606 = @func_3611() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %607 = %606.0;
  (%607,)
}

def @main(%var_13994: Tensor[(1, 4, 1), int32], %var_13995: Tensor[(8, 4, 2), int32]) -> Tensor[(8, 4, 2), int32] {
  %608 = cast(%var_13994, dtype="int32") /* ty=Tensor[(1, 4, 1), int32] */;
  %609 = cast(%var_13995, dtype="int32") /* ty=Tensor[(8, 4, 2), int32] */;
  multiply(%608, %609) /* ty=Tensor[(8, 4, 2), int32] */
}

def @func_9560() -> (Tensor[(165, 1), float64],) {
  %610 = @func_8515() /* ty=Tensor[(165, 1), float64] */;
  (%610,)
}

def @func_7320() -> (Tensor[(165, 1), float32], Tensor[(1, 11, 15), float32]) {
  %611 = @func_4829() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) */;
  %612 = %611.1;
  %613 = @func_6428() /* ty=Tensor[(1, 11, 15), float32] */;
  (%612, %613)
}

def @func_5407(%var_5339: Tensor[(165, 10), float64], %var_5372: Tensor[(165, 10), int8], %var_5383: Tensor[(330), float32]) -> (Tensor[(165, 10), bool], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(165, 10), float32], Tensor[(165, 10), uint8], Tensor[(12, 13, 15), float32], Tensor[(9, 260), int8]) {
  %614 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %615 = %614.2;
  %616 = cast(%615, dtype="bool") /* ty=Tensor[(165, 1), bool] */;
  %617 = cast(%var_5339, dtype="bool") /* ty=Tensor[(165, 10), bool] */;
  %618 = equal(%616, %617) /* ty=Tensor[(165, 10), bool] */;
  %619 = cast(%618, dtype="float64") /* ty=Tensor[(165, 10), float64] */;
  %620 = asin(%619) /* ty=Tensor[(165, 10), float64] */;
  %621 = cast(%620, dtype="float64") /* ty=Tensor[(165, 10), float64] */;
  %622 = acosh(%621) /* ty=Tensor[(165, 10), float64] */;
  %623 = cast(%622, dtype="bool") /* ty=Tensor[(165, 10), bool] */;
  %624 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
  %625 = cast(%620, dtype="bool") /* ty=Tensor[(165, 10), bool] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %627 = cast(%var_5383, dtype="float32") /* ty=Tensor[(330), float32] */;
  %628 = reshape(%627, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %629 = @func_4045(%628) /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(13, 8, 6), bool]) */;
  %630 = cast(%var_5339, dtype="float32") /* ty=Tensor[(165, 10), float32] */;
  %631 = shape_of(%622, dtype="int32") /* ty=Tensor[(2), int32] */;
  %632 = cast(%622, dtype="float32") /* ty=Tensor[(165, 10), float32] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %634 = cast(%622, dtype="int8") /* ty=Tensor[(165, 10), int8] */;
  %635 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
  %636 = cast(%620, dtype="int8") /* ty=Tensor[(165, 10), int8] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %638 = bitwise_or(%636, %637) /* ty=Tensor[(165, 10), int8] */;
  %639 = cast(%var_5372, dtype="uint8") /* ty=Tensor[(165, 10), uint8] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(2), int32] */;
  %641 = cast(%638, dtype="uint8") /* ty=Tensor[(165, 10), uint8] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %643 = maximum(%641, %642) /* ty=Tensor[(165, 10), uint8] */;
  %644 = cast(%643, dtype="uint8") /* ty=Tensor[(165, 10), uint8] */;
  %645 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
  %646 = cast(%620, dtype="uint8") /* ty=Tensor[(165, 10), uint8] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %648 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 260), int8] */, dtype="int8") /* ty=Tensor[(9, 260), int8] */;
  %649 = reshape(%648, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), int8] */;
  %650 = @func_2109(%649) /* ty=(Tensor[(12, 13, 15), float32],) */;
  %651 = greater(%625, %626) /* ty=Tensor[(165, 10), bool] */;
  %652 = %629.1;
  %653 = divide(%632, %633) /* ty=Tensor[(165, 10), float32] */;
  %654 = minimum(%646, %647) /* ty=Tensor[(165, 10), uint8] */;
  %655 = %650.0;
  (%651, %652, %var_5383, %653, %654, %655, meta[relay.Constant][26] /* ty=Tensor[(9, 260), int8] */)
}

def @func_2968(%var_2957: Tensor[(165, 2), float32]) -> (Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) {
  %656 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
  %657 = %656.1;
  %658 = cast(%657, dtype="uint16") /* ty=Tensor[(165, 1), uint16] */;
  %659 = cast(%var_2957, dtype="uint16") /* ty=Tensor[(165, 2), uint16] */;
  %660 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %661 = bitwise_and(%658, %659) /* ty=Tensor[(165, 2), uint16] */;
  %662 = %660.1;
  (%661, %662)
}

def @func_9161() -> (Tensor[(1, 11, 15), float32], Tensor[(14, 3, 10), float32], Tensor[(70, 6), float32]) {
  %663 = cast(meta[relay.Constant][27] /* ty=Tensor[(70, 6), float32] */, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %664 = reshape(%663, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float32] */;
  %665 = @func_7557() /* ty=Tensor[(1, 11, 15), float32] */;
  %666 = @func_9113(%664) /* ty=Tensor[(14, 3, 10), float32] */;
  (%665, %666, meta[relay.Constant][27] /* ty=Tensor[(70, 6), float32] */)
}

def @func_13903() -> (Tensor[(13, 8, 6), float64],) {
  %667 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
  (%667,)
}

def @func_8569() -> (Tensor[(165, 9), bool], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) {
  %668 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
  %669 = %668.0;
  %670 = cast(%669, dtype="uint16") /* ty=Tensor[(165, ?), uint16] */;
  %671 = cast(meta[relay.Constant][28] /* ty=Tensor[(165, 9), uint32] */, dtype="uint16") /* ty=Tensor[(165, 9), uint16] */;
  %672 = right_shift(%670, %671) /* ty=Tensor[(165, 9), uint16] */;
  %673 = cast(%669, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %674 = cast(%672, dtype="bool") /* ty=Tensor[(165, 9), bool] */;
  %675 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %676 = not_equal(%673, %674) /* ty=Tensor[(165, 9), bool] */;
  %677 = @func_7557() /* ty=Tensor[(1, 11, 15), float32] */;
  %678 = %675.0;
  (%676, %677, %678)
}

def @func_12203() -> (Tensor[(165), float32], Tensor[(?, 11, 15), float64], Tensor[(?, 11, 15), uint16], Tensor[(624), float64]) {
  %679 = @func_4484() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) */;
  %680 = @func_7847() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), float64], Tensor[(1, 11, 15), float64]) */;
  %681 = cast(meta[relay.Constant][29] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %682 = reshape(%681, newshape=[13, 8, 6]) /* ty=Tensor[(13, 8, 6), float64] */;
  %683 = @func_12003(%682) /* ty=(Tensor[(13, 8, 6), bool], Tensor[(?, 11, 15), uint16]) */;
  %684 = %679.3;
  %685 = %680.1;
  %686 = %683.1;
  (%684, %685, %686, meta[relay.Constant][29] /* ty=Tensor[(624), float64] */)
}

def @func_3190(%var_3182: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(165, 2), uint16], Tensor[(330), float32], Tensor[(1, 11, 15), float32]) {
  %687 = cast(%var_3182, dtype="float32") /* ty=Tensor[(330), float32] */;
  %688 = reshape(%687, newshape=[165, 2]) /* ty=Tensor[(165, 2), float32] */;
  %689 = @func_2968(%688) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */;
  %690 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %691 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  %692 = %689.0;
  %693 = %690.2;
  (%691, %692, %var_3182, %693)
}

def @func_7847() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), float64], Tensor[(1, 11, 15), float64]) {
  %694 = @func_6602() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %695 = @func_4358() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %696 = %695.2;
  %697 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 11, 15), float32] */, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%696, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %701 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %702 = %694.0;
  %703 = floor_mod(%699, %700) /* ty=Tensor[(?, 11, 15), float64] */;
  %704 = %701.0;
  (%702, %703, %704)
}

def @func_7020() -> Tensor[(13, 8, 6), float32] {
  %705 = @func_6068() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float32]) */;
  %705.1
}

def @func_5497() -> (Tensor[(13, 8, 6), float64],) {
  %706 = @func_5274() /* ty=Tensor[(13, 8, 6), float64] */;
  (%706,)
}

def @func_12164(%var_12122: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(660), uint32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  %707 = @func_8026() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %708 = @func_8026() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %709 = cast(%var_12122, dtype="float32") /* ty=Tensor[(330), float32] */;
  %710 = reshape(%709, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %711 = @func_8667(%710) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(165, ?), uint32], Tensor[(330), float32], Tensor[(2340), int8], Tensor[(165, 4), int16], Tensor[(660), uint32]) */;
  %712 = %707.0;
  %713 = %708.1;
  %714 = %711.5;
  %715 = @func_8115() /* ty=Tensor[(13, 8, 6), float64] */;
  %716 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  (%712, %713, %714, %var_12122, %715, %716)
}

def @func_11045() -> Tensor[(165, ?), uint32] {
  %717 = @func_7385() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) */;
  %717.1
}

def @func_5054() -> (Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) {
  %718 = @func_4462() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %719 = @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %720 = %718.0;
  %721 = %719.2;
  (%720, %721)
}

def @func_13780() -> (Tensor[(13, 8, 6), float32],) {
  %722 = @func_5713() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %723 = %722.0;
  (%723,)
}

def @func_11387() -> Tensor[(13, 8, 6), float64] {
  %724 = @func_7948() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %724.0
}

def @func_10793() -> (Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32]) {
  %725 = @func_8102() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(11, 15), float64], Tensor[(2340), int8]) */;
  %726 = @func_7548() /* ty=Tensor[(16, 14, 14), uint64] */;
  %727 = cast(%726, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
  %728 = %725.2;
  %729 = log10(%727) /* ty=Tensor[(16, 14, 14), float32] */;
  (%728, %729)
}

def @func_10316() -> Tensor[(13, 8, 6), float64] {
  %730 = @func_7711() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %730.0
}

def @func_2109(%var_2091: Tensor[(12, 13, 15), int8]) -> (Tensor[(12, 13, 15), float32],) {
  %731 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 13, 15), int8] */, dtype="int8") /* ty=Tensor[(12, 13, 15), int8] */;
  %732 = shape_of(%var_2091, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%var_2091, dtype="int8") /* ty=Tensor[(12, 13, 15), int8] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %735 = bitwise_and(%733, %734) /* ty=Tensor[(12, 13, 15), int8] */;
  %736 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 13, 15), int8] */, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %740 = subtract(%738, %739) /* ty=Tensor[(12, 13, 15), float32] */;
  (%740,)
}

def @func_8893() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  %741 = @func_6649() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %742 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %743 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %744 = %741.0;
  %745 = %742.0;
  %746 = %743.2;
  (%744, %745, %746)
}

def @func_4358() -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  %747 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %748 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
  %749 = @func_3611() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %750 = %747.0;
  %751 = %748.0;
  %752 = %749.2;
  (%750, %751, %752)
}

def @func_10549() -> (Tensor[(13, 8, 6), float64],) {
  %753 = @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %754 = %753.0;
  (%754,)
}

def @func_3449() -> Tensor[(16, 14, 14), uint64] {
  %755 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 14), float64] */;
  %756 = erf(%755) /* ty=Tensor[(16, 14, 14), float64] */;
  %757 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 14, 14), float64] */, dtype="uint64") /* ty=Tensor[(16, 14, 14), uint64] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="uint64") /* ty=Tensor[(16, 14, 14), uint64] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%759, %760) /* ty=Tensor[(16, 14, 14), uint64] */
}

def @func_8515() -> Tensor[(165, 1), float64] {
  %761 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
  %761.1
}

def @func_11693(%var_11689: Tensor[(312, 2), bool]) -> (Tensor[(165, 10), float32], Tensor[(13, 8, 6), float32], Tensor[(312, 2), bool]) {
  %762 = @func_3028() /* ty=(Tensor[(165, 1), float64],) */;
  %763 = %762.0;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(165, 1), float64] */;
  %765 = rsqrt(%764) /* ty=Tensor[(165, 1), float64] */;
  %766 = cast(%765, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
  %767 = cast(meta[relay.Constant][33] /* ty=Tensor[(165, 10), float64] */, dtype="float32") /* ty=Tensor[(165, 10), float32] */;
  %768 = cast(%var_11689, dtype="bool") /* ty=Tensor[(312, 2), bool] */;
  %769 = reshape(%768, newshape=[13, 8, 6]) /* ty=Tensor[(13, 8, 6), bool] */;
  %770 = floor_mod(%766, %767) /* ty=Tensor[(165, 10), float32] */;
  %771 = @func_10588(%769) /* ty=Tensor[(13, 8, 6), float32] */;
  (%770, %771, %var_11689)
}

def @func_5133(%var_5105: Tensor[(320), float32]) -> (Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(12, 13, 15), float32], Tensor[(13, 8, 6), float64]) {
  %772 = cast(%var_5105, dtype="float32") /* ty=Tensor[(320), float32] */;
  %773 = reshape(%772, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
  %774 = @func_1568(%773) /* ty=(Tensor[(16, 2, 10), float32],) */;
  %775 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %776 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  %777 = @func_4644() /* ty=Tensor[(13, 8, 6), float64] */;
  %778 = %774.0;
  %779 = %775.0;
  %780 = @func_4644() /* ty=Tensor[(13, 8, 6), float64] */;
  (%776, %777, %778, %var_5105, %779, %780)
}

def @func_10678(%var_10673: Tensor[(16, 16, 1), float64]) -> Tensor[(16, 16, 1), float64] {
  %781 = cast(%var_10673, dtype="float64") /* ty=Tensor[(16, 16, 1), float64] */;
  asin(%781) /* ty=Tensor[(16, 16, 1), float64] */
}

def @func_13040() -> (Tensor[(13, 8, 6), float64],) {
  %782 = @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %783 = %782.0;
  (%783,)
}

def @func_7493() -> Tensor[(?, 11, 15), float64] {
  %784 = @func_4447() /* ty=Tensor[(1, 11, 15), float32] */;
  %785 = @func_5531() /* ty=Tensor[(1, 11, 15), float32] */;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %787 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%784, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%788, %789) /* ty=Tensor[(?, 11, 15), float64] */
}

def @func_12466(%var_12385: Tensor[(165, 14), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(165, 14), float32], Tensor[(330), float32], Tensor[(330), float32], Tensor[(?, 11, 15), uint8], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1, 11, 15), float64], Tensor[(165, 1), float64], Tensor[(165, 14), float32], uint8, Tensor[(165, 14), float32]) {
  %790 = @func_9762() /* ty=(Tensor[(330), float32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) */;
  %791 = @func_8979() /* ty=Tensor[(165, 1), float64] */;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
  %793 = cast(%var_12385, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
  %794 = subtract(%792, %793) /* ty=Tensor[(165, 14), float32] */;
  %795 = cast(%794, dtype="float64") /* ty=Tensor[(165, 14), float64] */;
  %796 = sqrt(%795) /* ty=Tensor[(165, 14), float64] */;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
  %798 = cast(meta[relay.Constant][34] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %799 = reshape(%798, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %800 = @func_3190(%799) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 2), uint16], Tensor[(330), float32], Tensor[(1, 11, 15), float32]) */;
  %801 = @func_7650() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint8]) */;
  %802 = cast(meta[relay.Constant][35] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %803 = reshape(%802, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
  %804 = @func_1568(%803) /* ty=(Tensor[(16, 2, 10), float32],) */;
  %805 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %806 = cast(%794, dtype="uint32") /* ty=Tensor[(165, 14), uint32] */;
  %807 = shape_of(%796, dtype="int32") /* ty=Tensor[(2), int32] */;
  %808 = cast(%796, dtype="uint32") /* ty=Tensor[(165, 14), uint32] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %810 = right_shift(%808, %809) /* ty=Tensor[(165, 14), uint32] */;
  %811 = cast(%810, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
  %812 = @func_4484() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) */;
  %813 = cast(%796, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
  %814 = shape_of(%810, dtype="int32") /* ty=Tensor[(2), int32] */;
  %815 = cast(%810, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %817 = %790.6;
  %818 = @func_5565() /* ty=Tensor[(13, 8, 6), float64] */;
  %819 = acosh(%797) /* ty=Tensor[(165, 14), float32] */;
  %820 = %800.2;
  %821 = %801.1;
  %822 = %804.0;
  %823 = %805.0;
  %824 = @func_8515() /* ty=Tensor[(165, 1), float64] */;
  %825 = cosh(%811) /* ty=Tensor[(165, 14), float32] */;
  %826 = %812.2;
  %827 = power(%815, %816) /* ty=Tensor[(165, 14), float32] */;
  (%817, %818, %819, %820, meta[relay.Constant][34] /* ty=Tensor[(330), float32] */, %821, %822, meta[relay.Constant][35] /* ty=Tensor[(320), float32] */, %823, %824, %825, %826, %827)
}

def @func_3221() -> (Tensor[(13, 8, 6), float64],) {
  %828 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  (%828,)
}

def @func_5713() -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %829 = @func_5054() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
  %832 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %833 = @func_3010() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %834 = tan(%831) /* ty=Tensor[(13, 8, 6), float32] */;
  %835 = %832.0;
  %836 = %833.0;
  %837 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  (%834, %835, %836, %837)
}

def @func_7948() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %838 = @func_7879() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %839 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %840 = %838.0;
  %841 = %839.0;
  (%840, %841)
}

def @func_4892() -> Tensor[(13, 8, 6), float32] {
  %842 = @func_3747() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %843 = %842.0;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
  log10(%844) /* ty=Tensor[(13, 8, 6), float32] */
}

def @func_3028() -> (Tensor[(165, 1), float64],) {
  %845 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %846 = %845.2;
  (%846,)
}

def @func_4644() -> Tensor[(13, 8, 6), float64] {
  %847 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %847.0
}

def @func_3927() -> Tensor[(1, 11, 15), float32] {
  %848 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
  %848.1
}

def @func_10933() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %849 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %850 = @func_9988() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %851 = @func_5309() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %852 = @func_10409() /* ty=Tensor[(13, 8, 6), float64] */;
  %853 = %849.0;
  %854 = %850.1;
  %855 = @func_10664() /* ty=Tensor[(13, 8, 6), float64] */;
  %856 = %851.0;
  (%852, %853, %854, %855, %856)
}

def @func_13150(%var_13133: Tensor[(320), float32]) -> (Tensor[(165, 10), bool], Tensor[(13, 8, 6), bool], Tensor[(320), float32], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32]) {
  %857 = @func_11183() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 10), bool], Tensor[(1155), uint32], Tensor[(110, 15), uint32]) */;
  %858 = cast(%var_13133, dtype="float32") /* ty=Tensor[(320), float32] */;
  %859 = reshape(%858, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %860 = @func_9866(%859) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), bool], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1650), float64], Tensor[(330), float32]) */;
  %861 = cast(meta[relay.Constant][36] /* ty=Tensor[(385, 3), float32] */, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
  %862 = reshape(%861, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %863 = %857.1;
  %864 = %860.1;
  %865 = @func_12806(%862) /* ty=Tensor[(7, 11, 15), float32] */;
  (%863, %864, %var_13133, %865, meta[relay.Constant][36] /* ty=Tensor[(385, 3), float32] */)
}

def @func_9293() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  %866 = @func_6783() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), uint64]) */;
  %867 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %868 = %866.0;
  %869 = %867.0;
  (%868, %869)
}

def @func_10086(%var_10055: Tensor[(660), uint32], %var_10058: Tensor[(165, 4), int16], %var_10070: Tensor[(1, 330), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(660), uint32], Tensor[(165, 4), int8], Tensor[(1, 11, 15), float64], Tensor[(1, 330), float32], Tensor[(1, 11, 15), float32], Tensor[(165, 4), bool]) {
  %870 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %871 = cast(%var_10055, dtype="uint32") /* ty=Tensor[(660), uint32] */;
  %872 = reshape(%871, newshape=[165, 4]) /* ty=Tensor[(165, 4), uint32] */;
  %873 = @func_3399(%872) /* ty=Tensor[(165, 4), int16] */;
  %874 = cast(%var_10058, dtype="int8") /* ty=Tensor[(165, 4), int8] */;
  %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(2), int32] */;
  %876 = cast(%873, dtype="int8") /* ty=Tensor[(165, 4), int8] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %878 = cast(%var_10070, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %879 = reshape(%878, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %880 = @func_6481(%879) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */;
  %881 = @func_5309() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %882 = cast(%873, dtype="float64") /* ty=Tensor[(165, 4), float64] */;
  %883 = atanh(%882) /* ty=Tensor[(165, 4), float64] */;
  %884 = cast(%var_10058, dtype="bool") /* ty=Tensor[(165, 4), bool] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(2), int32] */;
  %886 = cast(%883, dtype="bool") /* ty=Tensor[(165, 4), bool] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %888 = %870.2;
  %889 = multiply(%876, %877) /* ty=Tensor[(165, 4), int8] */;
  %890 = %880.4;
  %891 = %881.0;
  %892 = greater(%886, %887) /* ty=Tensor[(165, 4), bool] */;
  (%888, %var_10055, %889, %890, %var_10070, %891, %892)
}

def @func_8826(%var_8820: Tensor[(165, 5), uint32]) -> Tensor[(165, 5), uint32] {
  %893 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
  %894 = %893.0;
  %895 = cast(%894, dtype="uint32") /* ty=Tensor[(165, ?), uint32] */;
  %896 = cast(%var_8820, dtype="uint32") /* ty=Tensor[(165, 5), uint32] */;
  left_shift(%895, %896) /* ty=Tensor[(165, 5), uint32] */
}

def @func_13284() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  %897 = @func_13040() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %898 = @func_6555() /* ty=Tensor[(13, 8, 6), float64] */;
  %899 = %897.0;
  (%898, %899)
}

def @func_3968() -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) {
  %900 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %901 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %902 = %900.0;
  %903 = %901.1;
  (%902, %903)
}

def @func_10562() -> Tensor[(13, 8, 6), float64] {
  %904 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %905 = cast(%904, dtype="float64") /* ty=Tensor[(13, 8, 6), float64] */;
  sigmoid(%905) /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_12544() -> (Tensor[(1, 11, 15), float32],) {
  %906 = @func_8893() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %907 = %906.2;
  (%907,)
}

def @func_13516(%var_13495: Tensor[(11, 16, 8), int64], %var_13509: Tensor[(11, 16, 8), int64]) -> (Tensor[(11, 16, 8), int64], Tensor[(11, 16, 8), bool]) {
  %908 = cast(%var_13495, dtype="int64") /* ty=Tensor[(11, 16, 8), int64] */;
  %909 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(11, 16, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %910 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 16, 8), int64] */, dtype="int64") /* ty=Tensor[(11, 16, 8), int64] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %912 = cast(%var_13509, dtype="bool") /* ty=Tensor[(11, 16, 8), bool] */;
  %913 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(11, 16, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 16, 8), int64] */, dtype="bool") /* ty=Tensor[(11, 16, 8), bool] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %916 = bitwise_xor(%910, %911) /* ty=Tensor[(11, 16, 8), int64] */;
  %917 = less(%914, %915) /* ty=Tensor[(11, 16, 8), bool] */;
  (%916, %917)
}

def @func_13183() -> Tensor[(13, 8, 6), float64] {
  @func_13024() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_8279() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %918 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  %919 = @func_5531() /* ty=Tensor[(1, 11, 15), float32] */;
  (%918, %919)
}

def @func_7137() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) {
  %920 = @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %921 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %922 = %920.0;
  %923 = %921.0;
  (%922, %923)
}

def @func_7220() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint32], Tensor[(1650), float64], Tensor[(330), float32]) {
  %924 = @func_5032() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %925 = %924.1;
  %926 = cast(%925, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %927 = rsqrt(%926) /* ty=Tensor[(1, 11, 15), float64] */;
  %928 = cast(%925, dtype="uint32") /* ty=Tensor[(1, 11, 15), uint32] */;
  %929 = shape_of(%927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%927, dtype="uint32") /* ty=Tensor[(1, 11, 15), uint32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %932 = cast(meta[relay.Constant][38] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %933 = reshape(%932, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %934 = @func_6481(%933) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */;
  %935 = @func_5274() /* ty=Tensor[(13, 8, 6), float64] */;
  %936 = bitwise_and(%930, %931) /* ty=Tensor[(?, 11, 15), uint32] */;
  %937 = %934.2;
  (%935, %936, %937, meta[relay.Constant][38] /* ty=Tensor[(330), float32] */)
}

def @func_7746() -> (Tensor[(165, ?), float32],) {
  %938 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
  %939 = %938.0;
  %940 = cast(%939, dtype="float32") /* ty=Tensor[(165, ?), float32] */;
  %941 = log(%940) /* ty=Tensor[(165, ?), float32] */;
  (%941,)
}

def @func_12961(%var_12955: Tensor[(165, 11), uint32]) -> Tensor[(165, 11), bool] {
  %942 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
  %943 = %942.0;
  %944 = cast(%943, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %945 = cast(%var_12955, dtype="bool") /* ty=Tensor[(165, 11), bool] */;
  logical_and(%944, %945) /* ty=Tensor[(165, 11), bool] */
}

def @func_11775() -> (Tensor[(320), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) {
  %946 = @func_7001() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32]) */;
  %947 = %946.3;
  %948 = @func_5531() /* ty=Tensor[(1, 11, 15), float32] */;
  %949 = @func_7300() /* ty=Tensor[(1, 11, 15), float64] */;
  (%947, %948, %949)
}

def @func_8979() -> Tensor[(165, 1), float64] {
  @func_8515() /* ty=Tensor[(165, 1), float64] */
}

def @func_13933() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) {
  %950 = @func_10711() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %951 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %952 = @func_4462() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %953 = %950.1;
  %954 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  %955 = %951.0;
  %956 = %952.0;
  (%953, %954, %955, %956)
}

def @func_7385() -> (Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) {
  %957 = @func_5974() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %958 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
  %959 = %957.0;
  %960 = %958.0;
  (%959, %960)
}

def @func_9244() -> Tensor[(165, ?), uint32] {
  %961 = @func_7536() /* ty=(Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) */;
  %961.0
}

def @func_4378() -> Tensor[(1, 11, 15), float32] {
  %962 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
  %962.1
}

def @func_3259() -> (Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) {
  %963 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %964 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %965 = %963.1;
  %966 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %967 = %964.1;
  (%965, %966, %967)
}

def @func_12361() -> (Tensor[(16, 14, 14), float32],) {
  %968 = @func_11474() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %969 = %968.1;
  (%969,)
}

def @func_10381() -> (Tensor[(13, 8, 6), float64], Tensor[(165, ?), uint32], Tensor[(55, 6), float32]) {
  %970 = cast(meta[relay.Constant][39] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %971 = reshape(%970, newshape=[165, 2]) /* ty=Tensor[(165, 2), float32] */;
  %972 = @func_2968(%971) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */;
  %973 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
  %974 = %972.1;
  (%973, %974, meta[relay.Constant][39] /* ty=Tensor[(55, 6), float32] */)
}

def @func_5531() -> Tensor[(1, 11, 15), float32] {
  @func_4447() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_10409() -> Tensor[(13, 8, 6), float64] {
  @func_4644() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_8216() -> Tensor[(1, 11, 15), float32] {
  %975 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %975.1
}

def @func_4045(%var_4021: Tensor[(330), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(13, 8, 6), bool]) {
  %976 = @func_3906() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %977 = cast(%var_4021, dtype="float32") /* ty=Tensor[(330), float32] */;
  %978 = reshape(%977, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %979 = @func_3190(%978) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 2), uint16], Tensor[(330), float32], Tensor[(1, 11, 15), float32]) */;
  %980 = cast(%var_4021, dtype="float32") /* ty=Tensor[(330), float32] */;
  %981 = %976.0;
  %982 = %979.3;
  %983 = log2(%980) /* ty=Tensor[(330), float32] */;
  %984 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  (%981, %982, %983, %984)
}

def @func_6602() -> (Tensor[(13, 8, 6), float64],) {
  %985 = @func_4644() /* ty=Tensor[(13, 8, 6), float64] */;
  (%985,)
}

def @func_4462() -> (Tensor[(13, 8, 6), bool],) {
  %986 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  (%986,)
}

def @func_9113(%var_9085: Tensor[(14, 3, 10), float32]) -> Tensor[(14, 3, 10), float32] {
  %987 = cast(%var_9085, dtype="float32") /* ty=Tensor[(14, 3, 10), float32] */;
  erf(%987) /* ty=Tensor[(14, 3, 10), float32] */
}

def @func_3287(%var_3278: uint8, %var_3279: Tensor[(5, 12, 14), uint8]) -> Tensor[(5, 12, 14), bool] {
  %988 = cast(%var_3278, dtype="bool") /* ty=bool */;
  %989 = cast(%var_3279, dtype="bool") /* ty=Tensor[(5, 12, 14), bool] */;
  equal(%988, %989) /* ty=Tensor[(5, 12, 14), bool] */
}

def @func_10164() -> Tensor[(13, 8, 6), float64] {
  @func_4878() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_12281(%var_12274: Tensor[(12, 15, 2), float32]) -> (Tensor[(12, 15, 2), float32],) {
  %990 = cast(%var_12274, dtype="float32") /* ty=Tensor[(12, 15, 2), float32] */;
  %991 = log(%990) /* ty=Tensor[(12, 15, 2), float32] */;
  (%991,)
}

def @func_11126(%var_11113: Tensor[(1155), float64]) -> (Tensor[(165, ?), float64], Tensor[(?, 11, 15), uint16], Tensor[(1155), float64], Tensor[(?, 11, 15), uint16]) {
  %992 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
  %993 = %992.0;
  %994 = cast(%993, dtype="float64") /* ty=Tensor[(165, ?), float64] */;
  %995 = cast(%var_11113, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %996 = reshape(%995, newshape=[15, 11, 7]) /* ty=Tensor[(15, 11, 7), float64] */;
  %997 = @func_8484(%996) /* ty=(Tensor[(15, 11, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(15, 11, 7), float32], Tensor[(?, 11, 15), uint16]) */;
  %998 = @func_5913() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */;
  %999 = cos(%994) /* ty=Tensor[(165, ?), float64] */;
  %1000 = %997.3;
  %1001 = %998.0;
  (%999, %1000, %var_11113, %1001)
}

def @func_10965(%var_10958: Tensor[(6, 3, 1), uint32], %var_10959: Tensor[(6, 3, 5), uint32]) -> Tensor[(6, 3, 5), uint32] {
  %1002 = cast(%var_10958, dtype="uint32") /* ty=Tensor[(6, 3, 1), uint32] */;
  %1003 = cast(%var_10959, dtype="uint32") /* ty=Tensor[(6, 3, 5), uint32] */;
  maximum(%1002, %1003) /* ty=Tensor[(6, 3, 5), uint32] */
}

def @func_6481(%var_6477: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) {
  %1004 = @func_5032() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %1005 = cast(meta[relay.Constant][40] /* ty=Tensor[(1650), float64] */, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %1006 = cast(meta[relay.Constant][40] /* ty=Tensor[(1650), float64] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1007 = cast(%var_6477, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1008 = reshape(%1005, newshape=[165, 10]) /* ty=Tensor[(165, 10), float64] */;
  %1009 = reshape(%1006, newshape=[165, 10]) /* ty=Tensor[(165, 10), int8] */;
  %1010 = reshape(%1007, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1011 = @func_5407(%1008, %1009, %1010) /* ty=(Tensor[(165, 10), bool], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(165, 10), float32], Tensor[(165, 10), uint8], Tensor[(12, 13, 15), float32], Tensor[(9, 260), int8]) */;
  %1012 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %1013 = %1004.0;
  %1014 = %1011.5;
  %1015 = %1012.0;
  (%1013, %1014, meta[relay.Constant][40] /* ty=Tensor[(1650), float64] */, %var_6477, %1015)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4379() -> Tensor[(1, 11, 15), float32] {
  %1 = fn () -> Tensor[(1, 11, 15), float32] {
    %0 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
    %0.1
  };
  %1() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_6429() -> Tensor[(1, 11, 15), float32] {
  %2 = fn () -> Tensor[(1, 11, 15), float32] {
    @func_2345() /* ty=Tensor[(1, 11, 15), float32] */
  };
  %2() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_5236() -> (Tensor[(1, 11, 15), float32],) {
  %5 = fn () -> (Tensor[(1, 11, 15), float32],) {
    %3 = @func_4670() /* ty=(Tensor[(1, 11, 15), float32],) */;
    %4 = %3.0;
    (%4,)
  };
  %5() /* ty=(Tensor[(1, 11, 15), float32],) */
}

def @func_7321() -> (Tensor[(165, 1), float32], Tensor[(1, 11, 15), float32]) {
  %9 = fn () -> (Tensor[(165, 1), float32], Tensor[(1, 11, 15), float32]) {
    %6 = @func_4829() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) */;
    %7 = %6.1;
    %8 = @func_6428() /* ty=Tensor[(1, 11, 15), float32] */;
    (%7, %8)
  };
  %9() /* ty=(Tensor[(165, 1), float32], Tensor[(1, 11, 15), float32]) */
}

def @func_7650() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint8]) {
  %10 = @func_5929() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %11 = %10.0;
  %12 = @func_5913() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */;
  %13 = %12.0;
  %14 = cast(%13, dtype="uint8") /* ty=Tensor[(?, 11, 15), uint8] */;
  %15 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%11, dtype="uint8") /* ty=Tensor[(1, 11, 15), uint8] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %18 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
  %19 = left_shift(%16, %17) /* ty=Tensor[(?, 11, 15), uint8] */;
  (%18, %19)
}

def @func_12889(%var_12888: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64], Tensor[(330), float32]) {
  %29 = fn (%var_12885: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64], Tensor[(330), float32]) {
    %20 = @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %21 = @func_7536() /* ty=(Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) */;
    %22 = cast(%var_12885, dtype="float32") /* ty=Tensor[(330), float32] */;
    %23 = reshape(%22, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %24 = @func_12164(%23) /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(660), uint32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) */;
    %25 = @func_8115() /* ty=Tensor[(13, 8, 6), float64] */;
    %26 = %20.1;
    %27 = %21.0;
    %28 = %24.5;
    (%25, %26, %27, %28, %var_12885)
  };
  %29(%var_12888) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64], Tensor[(330), float32]) */
}

def @func_3508() -> Tensor[(1, 11, 15), float32] {
  @func_2345() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_4878() -> Tensor[(13, 8, 6), float64] {
  %30 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %30.0
}

def @func_12703(%var_12702: Tensor[(14), int32]) -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(2, ?, 7), int32], Tensor[(14), int32]) {
  %43 = fn (%var_12699: Tensor[(14), int32]) -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(2, ?, 7), int32], Tensor[(14), int32]) {
    %31 = @func_10793() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32]) */;
    %32 = @func_3157() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %33 = cast(%var_12699, dtype="int32") /* ty=Tensor[(14), int32] */;
    %34 = cast(%var_12699, dtype="int32") /* ty=Tensor[(14), int32] */;
    %35 = reshape(%33, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), int32] */;
    %36 = reshape(%34, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), int32] */;
    %37 = @func_8370(%35, %36) /* ty=(Tensor[(2, ?, 7), int32], Tensor[(2, 1, 7), float32]) */;
    %38 = @func_3508() /* ty=Tensor[(1, 11, 15), float32] */;
    %39 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
    %40 = %31.1;
    %41 = %32.0;
    %42 = %37.0;
    (%38, %39, %40, %41, %42, %var_12699)
  };
  %43(%var_12702) /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(2, ?, 7), int32], Tensor[(14), int32]) */
}

def @func_1571(%var_1569: Tensor[(16, 2, 10), float32]) -> (Tensor[(16, 2, 10), float32],) {
  @func_1568(%var_1569) /* ty=(Tensor[(16, 2, 10), float32],) */
}

def @func_6123() -> (Tensor[(13, 8, 6), float64],) {
  %44 = @func_5565() /* ty=Tensor[(13, 8, 6), float64] */;
  (%44,)
}

def @func_6784() -> (Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), uint64]) {
  %47 = fn () -> (Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), uint64]) {
    %45 = @func_6428() /* ty=Tensor[(1, 11, 15), float32] */;
    %46 = @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */;
    (%45, %46)
  };
  %47() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), uint64]) */
}

def @func_5642(%var_5640: Tensor[(320), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64], Tensor[(320), float32], Tensor[(320), float32], Tensor[(1, 11, 15), float32]) {
  @func_5639(%var_5640) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64], Tensor[(320), float32], Tensor[(320), float32], Tensor[(1, 11, 15), float32]) */
}

def @func_5809(%var_5807: Tensor[(165, 7), uint32], %var_5808: Tensor[(165, 10), uint32]) -> (Tensor[(165, 7), bool], Tensor[(165, 10), bool]) {
  @func_5805(%var_5807, %var_5808) /* ty=(Tensor[(165, 7), bool], Tensor[(165, 10), bool]) */
}

def @main(%var_13994: Tensor[(1, 4, 1), int32], %var_13995: Tensor[(8, 4, 2), int32]) -> Tensor[(8, 4, 2), int32] {
  %48 = cast(%var_13994, dtype="int32") /* ty=Tensor[(1, 4, 1), int32] */;
  %49 = cast(%var_13995, dtype="int32") /* ty=Tensor[(8, 4, 2), int32] */;
  multiply(%48, %49) /* ty=Tensor[(8, 4, 2), int32] */
}

def @func_10711() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  %50 = @func_8154() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %51 = @func_6428() /* ty=Tensor[(1, 11, 15), float32] */;
  %52 = %50.0;
  (%51, %52)
}

def @func_4784(%var_4765: Tensor[(2, 160), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(2, 160), float32], Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) {
  %53 = @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */;
  %54 = cast(%53, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
  %55 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %56 = @func_4670() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %57 = cast(%var_4765, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %58 = reshape(%57, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
  %59 = @func_1568(%58) /* ty=(Tensor[(16, 2, 10), float32],) */;
  %60 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
  %61 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %62 = asinh(%54) /* ty=Tensor[(16, 14, 14), float32] */;
  %63 = %55.0;
  %64 = %56.0;
  %65 = %59.0;
  %66 = @func_4378() /* ty=Tensor[(1, 11, 15), float32] */;
  %67 = %60.0;
  %68 = %61.2;
  (%62, %63, %64, %65, %var_4765, %66, %67, %68)
}

def @func_8979() -> Tensor[(165, 1), float64] {
  @func_8515() /* ty=Tensor[(165, 1), float64] */
}

def @func_10590(%var_10589: Tensor[(13, 8, 6), bool]) -> Tensor[(13, 8, 6), float32] {
  %74 = fn (%var_10578: Tensor[(13, 8, 6), bool]) -> Tensor[(13, 8, 6), float32] {
    %69 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
    %70 = cast(%var_10578, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
    %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
    %72 = cast(%69, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
    %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%72, %73) /* ty=Tensor[(13, 8, 6), float32] */
  };
  %74(%var_10589) /* ty=Tensor[(13, 8, 6), float32] */
}

def @func_3676() -> (Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
  @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */
}

def @func_4301() -> (Tensor[(165, ?), uint32],) {
  %77 = fn () -> (Tensor[(165, ?), uint32],) {
    %75 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
    %76 = %75.0;
    (%76,)
  };
  %77() /* ty=(Tensor[(165, ?), uint32],) */
}

def @func_9116(%var_9114: Tensor[(14, 3, 10), float32]) -> Tensor[(14, 3, 10), float32] {
  @func_9113(%var_9114) /* ty=Tensor[(14, 3, 10), float32] */
}

def @func_4045(%var_4021: Tensor[(330), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(13, 8, 6), bool]) {
  %78 = @func_3906() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %79 = cast(%var_4021, dtype="float32") /* ty=Tensor[(330), float32] */;
  %80 = reshape(%79, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %81 = @func_3190(%80) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 2), uint16], Tensor[(330), float32], Tensor[(1, 11, 15), float32]) */;
  %82 = cast(%var_4021, dtype="float32") /* ty=Tensor[(330), float32] */;
  %83 = %78.0;
  %84 = %81.3;
  %85 = log2(%82) /* ty=Tensor[(330), float32] */;
  %86 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  (%83, %84, %85, %86)
}

def @func_2447() -> (Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) {
  %87 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %88 = cast(%87, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %89 = reshape(%88, newshape=[1, 11, 15]) /* ty=Tensor[(1, 11, 15), float64] */;
  %90 = @func_2183(%89) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %91 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %92 = %91.1;
  %93 = cast(%87, dtype="uint32") /* ty=Tensor[(1, 11, 15), uint32] */;
  %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(2), int32] */;
  %95 = cast(%92, dtype="uint32") /* ty=Tensor[(165, 1), uint32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %97 = %90.1;
  %98 = logical_xor(%95, %96) /* ty=Tensor[(165, ?), uint32] */;
  %99 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  (%97, %98, %99)
}

def @func_5310() -> (Tensor[(1, 11, 15), float32],) {
  %102 = fn () -> (Tensor[(1, 11, 15), float32],) {
    %100 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
    %101 = %100.2;
    (%101,)
  };
  %102() /* ty=(Tensor[(1, 11, 15), float32],) */
}

def @func_5931() -> (Tensor[(1, 11, 15), float64],) {
  @func_5929() /* ty=(Tensor[(1, 11, 15), float64],) */
}

def @func_13441() -> (uint8, Tensor[(165), float64], Tensor[(1, 11, 15), float32], Tensor[(?, 11, 15), uint16]) {
  @func_13439() /* ty=(uint8, Tensor[(165), float64], Tensor[(1, 11, 15), float32], Tensor[(?, 11, 15), uint16]) */
}

def @func_10564() -> Tensor[(13, 8, 6), float64] {
  @func_10562() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_13233() -> (Tensor[(1, 11, 15), float64],) {
  @func_13231() /* ty=(Tensor[(1, 11, 15), float64],) */
}

def @func_8571() -> (Tensor[(165, 9), bool], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) {
  @func_8569() /* ty=(Tensor[(165, 9), bool], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) */
}

def @func_6408(%var_6377: Tensor[(14, 5, 11), float32], %var_6378: Tensor[(14, 5, 11), float32], %var_6390: Tensor[(14, 5, 11), float32]) -> (Tensor[(14, 5, 11), bool], Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(14, 5, 11), uint32], Tensor[(13, 8, 6), float64]) {
  %103 = cast(%var_6378, dtype="bool") /* ty=Tensor[(14, 5, 11), bool] */;
  %104 = shape_of(%var_6377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_6377, dtype="bool") /* ty=Tensor[(14, 5, 11), bool] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %107 = cast(meta[relay.Constant][0] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %108 = reshape(%107, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %109 = @func_4583(%108) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(165), float64], Tensor[(13, 8, 6), float64]) */;
  %110 = cast(%var_6390, dtype="uint32") /* ty=Tensor[(14, 5, 11), uint32] */;
  %111 = shape_of(%var_6378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%var_6378, dtype="uint32") /* ty=Tensor[(14, 5, 11), uint32] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %114 = greater(%105, %106) /* ty=Tensor[(14, 5, 11), bool] */;
  %115 = %109.0;
  %116 = bitwise_xor(%112, %113) /* ty=Tensor[(14, 5, 11), uint32] */;
  %117 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  (%114, %115, meta[relay.Constant][0] /* ty=Tensor[(165), float64] */, %116, %117)
}

def @func_4830() -> (Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) {
  %123 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) {
    %118 = @func_4644() /* ty=Tensor[(13, 8, 6), float64] */;
    %119 = cast(%118, dtype="float64") /* ty=Tensor[(13, 8, 6), float64] */;
    %120 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
    %121 = erf(%119) /* ty=Tensor[(13, 8, 6), float64] */;
    %122 = %120.1;
    (%121, %122)
  };
  %123() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) */
}

def @func_11045() -> Tensor[(165, ?), uint32] {
  %124 = @func_7385() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) */;
  %124.1
}

def @func_5714() -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %134 = fn () -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
    %125 = @func_5054() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) */;
    %126 = %125.0;
    %127 = cast(%126, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
    %128 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %129 = @func_3010() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %130 = tan(%127) /* ty=Tensor[(13, 8, 6), float32] */;
    %131 = %128.0;
    %132 = %129.0;
    %133 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
    (%130, %131, %132, %133)
  };
  %134() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_12546() -> (Tensor[(1, 11, 15), float32],) {
  @func_12544() /* ty=(Tensor[(1, 11, 15), float32],) */
}

def @func_6068() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float32]) {
  %135 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %136 = @func_4892() /* ty=Tensor[(13, 8, 6), float32] */;
  (%135, %136)
}

def @func_7652() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint8]) {
  @func_7650() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint8]) */
}

def @func_10165() -> Tensor[(13, 8, 6), float64] {
  %137 = fn () -> Tensor[(13, 8, 6), float64] {
    @func_4878() /* ty=Tensor[(13, 8, 6), float64] */
  };
  %137() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_2112(%var_2110: Tensor[(12, 13, 15), int8]) -> (Tensor[(12, 13, 15), float32],) {
  @func_2109(%var_2110) /* ty=(Tensor[(12, 13, 15), float32],) */
}

def @func_12204() -> (Tensor[(165), float32], Tensor[(?, 11, 15), float64], Tensor[(?, 11, 15), uint16], Tensor[(624), float64]) {
  %146 = fn () -> (Tensor[(165), float32], Tensor[(?, 11, 15), float64], Tensor[(?, 11, 15), uint16], Tensor[(624), float64]) {
    %138 = @func_4484() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) */;
    %139 = @func_7847() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), float64], Tensor[(1, 11, 15), float64]) */;
    %140 = cast(meta[relay.Constant][1] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %141 = reshape(%140, newshape=[13, 8, 6]) /* ty=Tensor[(13, 8, 6), float64] */;
    %142 = @func_12003(%141) /* ty=(Tensor[(13, 8, 6), bool], Tensor[(?, 11, 15), uint16]) */;
    %143 = %138.3;
    %144 = %139.1;
    %145 = %142.1;
    (%143, %144, %145, meta[relay.Constant][1] /* ty=Tensor[(624), float64] */)
  };
  %146() /* ty=(Tensor[(165), float32], Tensor[(?, 11, 15), float64], Tensor[(?, 11, 15), uint16], Tensor[(624), float64]) */
}

def @func_8027() -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %151 = fn () -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
    %147 = @func_4670() /* ty=(Tensor[(1, 11, 15), float32],) */;
    %148 = @func_4892() /* ty=Tensor[(13, 8, 6), float32] */;
    %149 = @func_6030() /* ty=Tensor[(13, 8, 6), float64] */;
    %150 = %147.0;
    (%148, %149, %150)
  };
  %151() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_2347() -> Tensor[(1, 11, 15), float32] {
  @func_2345() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_3399(%var_3373: Tensor[(165, 4), uint32]) -> Tensor[(165, 4), int16] {
  %152 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %153 = %152.1;
  %154 = cast(%153, dtype="int16") /* ty=Tensor[(165, ?), int16] */;
  %155 = cast(%var_3373, dtype="int16") /* ty=Tensor[(165, 4), int16] */;
  add(%154, %155) /* ty=Tensor[(165, 4), int16] */
}

def @func_13737() -> Tensor[(1, 11, 15), float64] {
  %156 = @func_7847() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), float64], Tensor[(1, 11, 15), float64]) */;
  %156.2
}

def @func_11290(%var_11288: Tensor[(2, 7, 15), float32], %var_11289: Tensor[(2, 7, 15), float32]) -> (Tensor[(2, 7, 15), float32], Tensor[(13, 8, 6), float32]) {
  @func_11286(%var_11288, %var_11289) /* ty=(Tensor[(2, 7, 15), float32], Tensor[(13, 8, 6), float32]) */
}

def @func_2449() -> (Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) {
  @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */
}

def @func_2185(%var_2184: Tensor[(1, 11, 15), float64]) -> (Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
  %163 = fn (%var_2169: Tensor[(1, 11, 15), float64]) -> (Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
    %157 = cast(%var_2169, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
    %158 = cast(meta[relay.Constant][2] /* ty=Tensor[(2340), int8] */, dtype="int8") /* ty=Tensor[(2340), int8] */;
    %159 = reshape(%158, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), int8] */;
    %160 = @func_2109(%159) /* ty=(Tensor[(12, 13, 15), float32],) */;
    %161 = sqrt(%157) /* ty=Tensor[(1, 11, 15), float64] */;
    %162 = %160.0;
    (%161, %162, meta[relay.Constant][2] /* ty=Tensor[(2340), int8] */)
  };
  %163(%var_2184) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */
}

def @func_7301() -> Tensor[(1, 11, 15), float64] {
  %165 = fn () -> Tensor[(1, 11, 15), float64] {
    %164 = @func_6910() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), uint64], Tensor[(13, 8, 6), float64]) */;
    %164.0
  };
  %165() /* ty=Tensor[(1, 11, 15), float64] */
}

def @func_10681(%var_10679: Tensor[(16, 16, 1), float64]) -> Tensor[(16, 16, 1), float64] {
  @func_10678(%var_10679) /* ty=Tensor[(16, 16, 1), float64] */
}

def @func_11047() -> Tensor[(165, ?), uint32] {
  @func_11045() /* ty=Tensor[(165, ?), uint32] */
}

def @func_3261() -> (Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) {
  @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */
}

def @func_13781() -> (Tensor[(13, 8, 6), float32],) {
  %168 = fn () -> (Tensor[(13, 8, 6), float32],) {
    %166 = @func_5713() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %167 = %166.0;
    (%167,)
  };
  %168() /* ty=(Tensor[(13, 8, 6), float32],) */
}

def @func_9762() -> (Tensor[(330), float32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  %169 = cast(meta[relay.Constant][3] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %170 = reshape(%169, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %171 = @func_6481(%170) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */;
  %172 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
  %173 = @func_8402() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %174 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %175 = acosh(%174) /* ty=Tensor[(11, 9, 7), float64] */;
  %176 = cast(%175, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %177 = @func_8749() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64]) */;
  %178 = cast(%175, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %179 = @func_6364() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %180 = @func_6649() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %181 = %171.3;
  %182 = @func_5274() /* ty=Tensor[(13, 8, 6), float64] */;
  %183 = %172.0;
  %184 = %173.0;
  %185 = log10(%176) /* ty=Tensor[(11, 9, 7), float64] */;
  %186 = %177.0;
  %187 = log(%178) /* ty=Tensor[(11, 9, 7), float64] */;
  %188 = %179.0;
  %189 = %180.0;
  (%181, meta[relay.Constant][3] /* ty=Tensor[(330), float32] */, %182, %183, %184, %185, %186, %187, %188, %189)
}

def @func_8217() -> Tensor[(1, 11, 15), float32] {
  %191 = fn () -> Tensor[(1, 11, 15), float32] {
    %190 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
    %190.1
  };
  %191() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_9764() -> (Tensor[(330), float32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  @func_9762() /* ty=(Tensor[(330), float32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) */
}

def @func_6365() -> (Tensor[(13, 8, 6), float64],) {
  %193 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %192 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
    (%192,)
  };
  %193() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_8828(%var_8827: Tensor[(165, 5), uint32]) -> Tensor[(165, 5), uint32] {
  %198 = fn (%var_8820: Tensor[(165, 5), uint32]) -> Tensor[(165, 5), uint32] {
    %194 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
    %195 = %194.0;
    %196 = cast(%195, dtype="uint32") /* ty=Tensor[(165, ?), uint32] */;
    %197 = cast(%var_8820, dtype="uint32") /* ty=Tensor[(165, 5), uint32] */;
    left_shift(%196, %197) /* ty=Tensor[(165, 5), uint32] */
  };
  %198(%var_8827) /* ty=Tensor[(165, 5), uint32] */
}

def @func_6912() -> (Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), uint64], Tensor[(13, 8, 6), float64]) {
  @func_6910() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), uint64], Tensor[(13, 8, 6), float64]) */
}

def @func_8852() -> Tensor[(1, 11, 15), float32] {
  %199 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %199.0
}

def @func_13465() -> Tensor[(13, 8, 6), float64] {
  @func_13463() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_13728() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  @func_13726() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) */
}

def @func_13175() -> Tensor[(?, 11, 15), uint16] {
  %201 = fn () -> Tensor[(?, 11, 15), uint16] {
    %200 = @func_5913() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */;
    %200.0
  };
  %201() /* ty=Tensor[(?, 11, 15), uint16] */
}

def @func_7494() -> Tensor[(?, 11, 15), float64] {
  %208 = fn () -> Tensor[(?, 11, 15), float64] {
    %202 = @func_4447() /* ty=Tensor[(1, 11, 15), float32] */;
    %203 = @func_5531() /* ty=Tensor[(1, 11, 15), float32] */;
    %204 = cast(%203, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
    %205 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
    %206 = cast(%202, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
    %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%206, %207) /* ty=Tensor[(?, 11, 15), float64] */
  };
  %208() /* ty=Tensor[(?, 11, 15), float64] */
}

def @func_2937() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) {
  %213 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) {
    %209 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
    %210 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
    %211 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
    %212 = %209.1;
    (%210, %211, %212)
  };
  %213() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */
}

def @func_4447() -> Tensor[(1, 11, 15), float32] {
  %214 = @func_3611() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %214.0
}

def @func_9244() -> Tensor[(165, ?), uint32] {
  %215 = @func_7536() /* ty=(Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) */;
  %215.0
}

def @func_3012() -> (Tensor[(13, 8, 6), float64],) {
  @func_3010() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_8517() -> Tensor[(165, 1), float64] {
  @func_8515() /* ty=Tensor[(165, 1), float64] */
}

def @func_8484(%var_8441: Tensor[(15, 11, 7), float64]) -> (Tensor[(15, 11, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(15, 11, 7), float32], Tensor[(?, 11, 15), uint16]) {
  %216 = cast(%var_8441, dtype="float64") /* ty=Tensor[(15, 11, 7), float64] */;
  %217 = @func_3611() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %218 = cast(%var_8441, dtype="float32") /* ty=Tensor[(15, 11, 7), float32] */;
  %219 = @func_7263() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(2340), int8]) */;
  %220 = atan(%216) /* ty=Tensor[(15, 11, 7), float64] */;
  %221 = %217.1;
  %222 = log10(%218) /* ty=Tensor[(15, 11, 7), float32] */;
  %223 = %219.0;
  (%220, %221, %222, %223)
}

def @func_8104() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(11, 15), float64], Tensor[(2340), int8]) {
  @func_8102() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(11, 15), float64], Tensor[(2340), int8]) */
}

def @func_12468(%var_12467: Tensor[(165, 14), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(165, 14), float32], Tensor[(330), float32], Tensor[(330), float32], Tensor[(?, 11, 15), uint8], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1, 11, 15), float64], Tensor[(165, 1), float64], Tensor[(165, 14), float32], uint8, Tensor[(165, 14), float32]) {
  %262 = fn (%var_12385: Tensor[(165, 14), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(165, 14), float32], Tensor[(330), float32], Tensor[(330), float32], Tensor[(?, 11, 15), uint8], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1, 11, 15), float64], Tensor[(165, 1), float64], Tensor[(165, 14), float32], uint8, Tensor[(165, 14), float32]) {
    %224 = @func_9762() /* ty=(Tensor[(330), float32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(11, 9, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) */;
    %225 = @func_8979() /* ty=Tensor[(165, 1), float64] */;
    %226 = cast(%225, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
    %227 = cast(%var_12385, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
    %228 = subtract(%226, %227) /* ty=Tensor[(165, 14), float32] */;
    %229 = cast(%228, dtype="float64") /* ty=Tensor[(165, 14), float64] */;
    %230 = sqrt(%229) /* ty=Tensor[(165, 14), float64] */;
    %231 = cast(%230, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
    %232 = cast(meta[relay.Constant][5] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %233 = reshape(%232, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %234 = @func_3190(%233) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 2), uint16], Tensor[(330), float32], Tensor[(1, 11, 15), float32]) */;
    %235 = @func_7650() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint8]) */;
    %236 = cast(meta[relay.Constant][6] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %237 = reshape(%236, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
    %238 = @func_1568(%237) /* ty=(Tensor[(16, 2, 10), float32],) */;
    %239 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %240 = cast(%228, dtype="uint32") /* ty=Tensor[(165, 14), uint32] */;
    %241 = shape_of(%230, dtype="int32") /* ty=Tensor[(2), int32] */;
    %242 = cast(%230, dtype="uint32") /* ty=Tensor[(165, 14), uint32] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %244 = right_shift(%242, %243) /* ty=Tensor[(165, 14), uint32] */;
    %245 = cast(%244, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
    %246 = @func_4484() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) */;
    %247 = cast(%230, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
    %248 = shape_of(%244, dtype="int32") /* ty=Tensor[(2), int32] */;
    %249 = cast(%244, dtype="float32") /* ty=Tensor[(165, 14), float32] */;
    %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %251 = %224.6;
    %252 = @func_5565() /* ty=Tensor[(13, 8, 6), float64] */;
    %253 = acosh(%231) /* ty=Tensor[(165, 14), float32] */;
    %254 = %234.2;
    %255 = %235.1;
    %256 = %238.0;
    %257 = %239.0;
    %258 = @func_8515() /* ty=Tensor[(165, 1), float64] */;
    %259 = cosh(%245) /* ty=Tensor[(165, 14), float32] */;
    %260 = %246.2;
    %261 = power(%249, %250) /* ty=Tensor[(165, 14), float32] */;
    (%251, %252, %253, %254, meta[relay.Constant][5] /* ty=Tensor[(330), float32] */, %255, %256, meta[relay.Constant][6] /* ty=Tensor[(320), float32] */, %257, %258, %259, %260, %261)
  };
  %262(%var_12467) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(165, 14), float32], Tensor[(330), float32], Tensor[(330), float32], Tensor[(?, 11, 15), uint8], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1, 11, 15), float64], Tensor[(165, 1), float64], Tensor[(165, 14), float32], uint8, Tensor[(165, 14), float32]) */
}

def @func_13183() -> Tensor[(13, 8, 6), float64] {
  @func_13024() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_9506(%var_9504: Tensor[(11, 8, 6), bool]) -> (Tensor[(11, 8, 6), bool], Tensor[(13, 8, 6), float64]) {
  @func_9503(%var_9504) /* ty=(Tensor[(11, 8, 6), bool], Tensor[(13, 8, 6), float64]) */
}

def @func_7264() -> (Tensor[(?, 11, 15), uint16], Tensor[(2340), int8]) {
  %267 = fn () -> (Tensor[(?, 11, 15), uint16], Tensor[(2340), int8]) {
    %263 = @func_5913() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */;
    %264 = @func_5054() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) */;
    %265 = %263.0;
    %266 = %264.1;
    (%265, %266)
  };
  %267() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(2340), int8]) */
}

def @func_4358() -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  %268 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %269 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
  %270 = @func_3611() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %271 = %268.0;
  %272 = %269.0;
  %273 = %270.2;
  (%271, %272, %273)
}

def @func_7387() -> (Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) {
  @func_7385() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) */
}

def @func_5929() -> (Tensor[(1, 11, 15), float64],) {
  %274 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %275 = %274.0;
  (%275,)
}

def @func_4671() -> (Tensor[(1, 11, 15), float32],) {
  %278 = fn () -> (Tensor[(1, 11, 15), float32],) {
    %276 = @func_3611() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %277 = %276.0;
    (%277,)
  };
  %278() /* ty=(Tensor[(1, 11, 15), float32],) */
}

def @func_5565() -> Tensor[(13, 8, 6), float64] {
  %279 = @func_3747() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %279.0
}

def @func_2270() -> Tensor[(13, 8, 6), float64] {
  %281 = fn () -> Tensor[(13, 8, 6), float64] {
    %280 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 6), float64] */;
    log2(%280) /* ty=Tensor[(13, 8, 6), float64] */
  };
  %281() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_7549() -> Tensor[(16, 14, 14), uint64] {
  %282 = fn () -> Tensor[(16, 14, 14), uint64] {
    @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */
  };
  %282() /* ty=Tensor[(16, 14, 14), uint64] */
}

def @func_6603() -> (Tensor[(13, 8, 6), float64],) {
  %284 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %283 = @func_4644() /* ty=Tensor[(13, 8, 6), float64] */;
    (%283,)
  };
  %284() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_9293() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  %285 = @func_6783() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), uint64]) */;
  %286 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %287 = %285.0;
  %288 = %286.0;
  (%287, %288)
}

def @func_9195(%var_9193: Tensor[(165, 6), float32]) -> (Tensor[(165, 6), bool],) {
  @func_9192(%var_9193) /* ty=(Tensor[(165, 6), bool],) */
}

def @func_3402(%var_3400: Tensor[(165, 4), uint32]) -> Tensor[(165, 4), int16] {
  @func_3399(%var_3400) /* ty=Tensor[(165, 4), int16] */
}

def @func_9428() -> (Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  %297 = fn () -> (Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
    %289 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %290 = @func_8402() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
    %291 = @func_3906() /* ty=(Tensor[(1, 11, 15), float32],) */;
    %292 = @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %293 = %289.0;
    %294 = %290.1;
    %295 = %291.0;
    %296 = %292.1;
    (%293, %294, %295, %296)
  };
  %297() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */
}

def @func_4946(%var_4944: Tensor[(330), float32]) -> (Tensor[(165, 1), float64], Tensor[(12, 13, 15), float32], Tensor[(330), float32]) {
  @func_4943(%var_4944) /* ty=(Tensor[(165, 1), float64], Tensor[(12, 13, 15), float32], Tensor[(330), float32]) */
}

def @func_11602(%var_11600: Tensor[(165, 14), uint32]) -> Tensor[(165, 14), bool] {
  @func_11599(%var_11600) /* ty=Tensor[(165, 14), bool] */
}

def @func_12827() -> Tensor[(1650), float64] {
  %299 = fn () -> Tensor[(1650), float64] {
    %298 = @func_7220() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint32], Tensor[(1650), float64], Tensor[(330), float32]) */;
    %298.2
  };
  %299() /* ty=Tensor[(1650), float64] */
}

def @func_6413(%var_6410: Tensor[(14, 5, 11), float32], %var_6411: Tensor[(14, 5, 11), float32], %var_6412: Tensor[(14, 5, 11), float32]) -> (Tensor[(14, 5, 11), bool], Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(14, 5, 11), uint32], Tensor[(13, 8, 6), float64]) {
  @func_6408(%var_6410, %var_6411, %var_6412) /* ty=(Tensor[(14, 5, 11), bool], Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(14, 5, 11), uint32], Tensor[(13, 8, 6), float64]) */
}

def @func_13041() -> (Tensor[(13, 8, 6), float64],) {
  %302 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %300 = @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %301 = %300.0;
    (%301,)
  };
  %302() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_10293(%var_10291: Tensor[(12, 13, 3), int32], %var_10292: Tensor[(12, 13, 3), int32]) -> (Tensor[(12, 13, 3), int32], Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(13, 8, 6), float64]) {
  %312 = fn (%var_10256: Tensor[(12, 13, 3), int32], %var_10257: Tensor[(12, 13, 3), int32]) -> (Tensor[(12, 13, 3), int32], Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(13, 8, 6), float64]) {
    %303 = cast(%var_10257, dtype="int32") /* ty=Tensor[(12, 13, 3), int32] */;
    %304 = shape_of(%var_10256, dtype="int32") /* ty=Tensor[(3), int32] */;
    %305 = cast(%var_10256, dtype="int32") /* ty=Tensor[(12, 13, 3), int32] */;
    %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %307 = @func_7879() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %308 = bitwise_and(%305, %306) /* ty=Tensor[(12, 13, 3), int32] */;
    %309 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
    %310 = @func_8979() /* ty=Tensor[(165, 1), float64] */;
    %311 = %307.0;
    (%308, %309, %310, %311)
  };
  %312(%var_10291, %var_10292) /* ty=(Tensor[(12, 13, 3), int32], Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(13, 8, 6), float64]) */
}

def @func_9560() -> (Tensor[(165, 1), float64],) {
  %313 = @func_8515() /* ty=Tensor[(165, 1), float64] */;
  (%313,)
}

def @func_9868(%var_9867: Tensor[(320), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), bool], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1650), float64], Tensor[(330), float32]) {
  %325 = fn (%var_9845: Tensor[(320), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), bool], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1650), float64], Tensor[(330), float32]) {
    %314 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
    %315 = cast(%var_9845, dtype="float32") /* ty=Tensor[(320), float32] */;
    %316 = reshape(%315, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
    %317 = @func_1568(%316) /* ty=(Tensor[(16, 2, 10), float32],) */;
    %318 = cast(meta[relay.Constant][8] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %319 = reshape(%318, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %320 = @func_6481(%319) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */;
    %321 = @func_7300() /* ty=Tensor[(1, 11, 15), float64] */;
    %322 = %314.0;
    %323 = %317.0;
    %324 = %320.2;
    (%321, %322, %323, %var_9845, %324, meta[relay.Constant][8] /* ty=Tensor[(330), float32] */)
  };
  %325(%var_9867) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), bool], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1650), float64], Tensor[(330), float32]) */
}

def @func_7138() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) {
  %330 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) {
    %326 = @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %327 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
    %328 = %326.0;
    %329 = %327.0;
    (%328, %329)
  };
  %330() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) */
}

def @func_8706() -> (Tensor[(13, 8, 6), bool],) {
  %332 = fn () -> (Tensor[(13, 8, 6), bool],) {
    %331 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
    (%331,)
  };
  %332() /* ty=(Tensor[(13, 8, 6), bool],) */
}

def @func_13185() -> Tensor[(13, 8, 6), float64] {
  @func_13183() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_12808(%var_12807: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
  %337 = fn (%var_12801: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
    %333 = @func_7385() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) */;
    %334 = %333.0;
    %335 = cast(%334, dtype="float32") /* ty=Tensor[(1, 11, 15), float32] */;
    %336 = cast(%var_12801, dtype="float32") /* ty=Tensor[(7, 11, 15), float32] */;
    divide(%335, %336) /* ty=Tensor[(7, 11, 15), float32] */
  };
  %337(%var_12807) /* ty=Tensor[(7, 11, 15), float32] */
}

def @func_10086(%var_10055: Tensor[(660), uint32], %var_10058: Tensor[(165, 4), int16], %var_10070: Tensor[(1, 330), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(660), uint32], Tensor[(165, 4), int8], Tensor[(1, 11, 15), float64], Tensor[(1, 330), float32], Tensor[(1, 11, 15), float32], Tensor[(165, 4), bool]) {
  %338 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %339 = cast(%var_10055, dtype="uint32") /* ty=Tensor[(660), uint32] */;
  %340 = reshape(%339, newshape=[165, 4]) /* ty=Tensor[(165, 4), uint32] */;
  %341 = @func_3399(%340) /* ty=Tensor[(165, 4), int16] */;
  %342 = cast(%var_10058, dtype="int8") /* ty=Tensor[(165, 4), int8] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(2), int32] */;
  %344 = cast(%341, dtype="int8") /* ty=Tensor[(165, 4), int8] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %346 = cast(%var_10070, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %347 = reshape(%346, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %348 = @func_6481(%347) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */;
  %349 = @func_5309() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %350 = cast(%341, dtype="float64") /* ty=Tensor[(165, 4), float64] */;
  %351 = atanh(%350) /* ty=Tensor[(165, 4), float64] */;
  %352 = cast(%var_10058, dtype="bool") /* ty=Tensor[(165, 4), bool] */;
  %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(2), int32] */;
  %354 = cast(%351, dtype="bool") /* ty=Tensor[(165, 4), bool] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %356 = %338.2;
  %357 = multiply(%344, %345) /* ty=Tensor[(165, 4), int8] */;
  %358 = %348.4;
  %359 = %349.0;
  %360 = greater(%354, %355) /* ty=Tensor[(165, 4), bool] */;
  (%356, %var_10055, %357, %358, %var_10070, %359, %360)
}

def @func_13463() -> Tensor[(13, 8, 6), float64] {
  %361 = @func_6649() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %361.0
}

def @func_6448() -> (Tensor[(1, 11, 15), float64],) {
  %362 = @func_5929() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %363 = %362.0;
  (%363,)
}

def @func_9549() -> (Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) {
  @func_9547() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */
}

def @func_13109() -> (Tensor[(1, 11, 15), float64],) {
  %366 = fn () -> (Tensor[(1, 11, 15), float64],) {
    %364 = @func_8569() /* ty=(Tensor[(165, 9), bool], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) */;
    %365 = %364.2;
    (%365,)
  };
  %366() /* ty=(Tensor[(1, 11, 15), float64],) */
}

def @func_3193(%var_3191: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(165, 2), uint16], Tensor[(330), float32], Tensor[(1, 11, 15), float32]) {
  @func_3190(%var_3191) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 2), uint16], Tensor[(330), float32], Tensor[(1, 11, 15), float32]) */
}

def @func_6483(%var_6482: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) {
  %379 = fn (%var_6477: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) {
    %367 = @func_5032() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %368 = cast(meta[relay.Constant][9] /* ty=Tensor[(1650), float64] */, dtype="float64") /* ty=Tensor[(1650), float64] */;
    %369 = cast(meta[relay.Constant][9] /* ty=Tensor[(1650), float64] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
    %370 = cast(%var_6477, dtype="float32") /* ty=Tensor[(330), float32] */;
    %371 = reshape(%368, newshape=[165, 10]) /* ty=Tensor[(165, 10), float64] */;
    %372 = reshape(%369, newshape=[165, 10]) /* ty=Tensor[(165, 10), int8] */;
    %373 = reshape(%370, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %374 = @func_5407(%371, %372, %373) /* ty=(Tensor[(165, 10), bool], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(165, 10), float32], Tensor[(165, 10), uint8], Tensor[(12, 13, 15), float32], Tensor[(9, 260), int8]) */;
    %375 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %376 = %367.0;
    %377 = %374.5;
    %378 = %375.0;
    (%376, %377, meta[relay.Constant][9] /* ty=Tensor[(1650), float64] */, %var_6477, %378)
  };
  %379(%var_6482) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */
}

def @func_6524() -> Tensor[(13, 8, 6), float64] {
  %381 = fn () -> Tensor[(13, 8, 6), float64] {
    %380 = @func_6364() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %380.0
  };
  %381() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_6697() -> Tensor[(13, 8, 6), float64] {
  @func_6695() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_3190(%var_3182: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(165, 2), uint16], Tensor[(330), float32], Tensor[(1, 11, 15), float32]) {
  %382 = cast(%var_3182, dtype="float32") /* ty=Tensor[(330), float32] */;
  %383 = reshape(%382, newshape=[165, 2]) /* ty=Tensor[(165, 2), float32] */;
  %384 = @func_2968(%383) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */;
  %385 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %386 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  %387 = %384.0;
  %388 = %385.2;
  (%386, %387, %var_3182, %388)
}

def @func_3645() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) {
  %389 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(13, 8, 6), float64] */;
  %391 = cast(meta[relay.Constant][10] /* ty=Tensor[(40, 8), float32] */, dtype="float32") /* ty=Tensor[(40, 8), float32] */;
  %392 = reshape(%391, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
  %393 = @func_1568(%392) /* ty=(Tensor[(16, 2, 10), float32],) */;
  %394 = acos(%390) /* ty=Tensor[(13, 8, 6), float64] */;
  %395 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %396 = %393.0;
  (%394, %395, %396, meta[relay.Constant][10] /* ty=Tensor[(40, 8), float32] */)
}

def @func_13904() -> (Tensor[(13, 8, 6), float64],) {
  %398 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %397 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
    (%397,)
  };
  %398() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_11476() -> (Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  @func_11474() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_11129(%var_11127: Tensor[(1155), float64]) -> (Tensor[(165, ?), float64], Tensor[(?, 11, 15), uint16], Tensor[(1155), float64], Tensor[(?, 11, 15), uint16]) {
  @func_11126(%var_11127) /* ty=(Tensor[(165, ?), float64], Tensor[(?, 11, 15), uint16], Tensor[(1155), float64], Tensor[(?, 11, 15), uint16]) */
}

def @func_10411() -> Tensor[(13, 8, 6), float64] {
  @func_10409() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_8116() -> Tensor[(13, 8, 6), float64] {
  %400 = fn () -> Tensor[(13, 8, 6), float64] {
    %399 = @func_6123() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %399.0
  };
  %400() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_6556() -> Tensor[(13, 8, 6), float64] {
  %401 = fn () -> Tensor[(13, 8, 6), float64] {
    @func_5565() /* ty=Tensor[(13, 8, 6), float64] */
  };
  %401() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_5055() -> (Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) {
  %406 = fn () -> (Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) {
    %402 = @func_4462() /* ty=(Tensor[(13, 8, 6), bool],) */;
    %403 = @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
    %404 = %402.0;
    %405 = %403.2;
    (%404, %405)
  };
  %406() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) */
}

def @func_5639(%var_5620: Tensor[(320), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64], Tensor[(320), float32], Tensor[(320), float32], Tensor[(1, 11, 15), float32]) {
  %407 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %408 = @func_3968() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) */;
  %409 = cast(%var_5620, dtype="float32") /* ty=Tensor[(320), float32] */;
  %410 = reshape(%409, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %411 = @func_5133(%410) /* ty=(Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(12, 13, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %412 = %407.0;
  %413 = %408.1;
  %414 = %411.3;
  %415 = @func_4447() /* ty=Tensor[(1, 11, 15), float32] */;
  (%412, %413, %414, %var_5620, %415)
}

def @func_9009() -> Tensor[(13, 8, 6), bool] {
  @func_9007() /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_4893() -> Tensor[(13, 8, 6), float32] {
  %419 = fn () -> Tensor[(13, 8, 6), float32] {
    %416 = @func_3747() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %417 = %416.0;
    %418 = cast(%417, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
    log10(%418) /* ty=Tensor[(13, 8, 6), float32] */
  };
  %419() /* ty=Tensor[(13, 8, 6), float32] */
}

def @func_7002() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32]) {
  %428 = fn () -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32]) {
    %420 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
    %421 = @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %422 = cast(meta[relay.Constant][11] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %423 = reshape(%422, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
    %424 = @func_1568(%423) /* ty=(Tensor[(16, 2, 10), float32],) */;
    %425 = %420.1;
    %426 = %421.0;
    %427 = %424.0;
    (%425, %426, %427, meta[relay.Constant][11] /* ty=Tensor[(320), float32] */)
  };
  %428() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32]) */
}

def @func_7950() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  @func_7948() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_11599(%var_11590: Tensor[(165, 14), uint32]) -> Tensor[(165, 14), bool] {
  %429 = @func_11045() /* ty=Tensor[(165, ?), uint32] */;
  %430 = cast(%429, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %431 = cast(%var_11590, dtype="bool") /* ty=Tensor[(165, 14), bool] */;
  less(%430, %431) /* ty=Tensor[(165, 14), bool] */
}

def @func_8669(%var_8668: Tensor[(330), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(165, ?), uint32], Tensor[(330), float32], Tensor[(2340), int8], Tensor[(165, 4), int16], Tensor[(660), uint32]) {
  %443 = fn (%var_8654: Tensor[(330), float32]) -> (Tensor[(1, 11, 15), float64], Tensor[(165, ?), uint32], Tensor[(330), float32], Tensor[(2340), int8], Tensor[(165, 4), int16], Tensor[(660), uint32]) {
    %432 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %433 = cast(%var_8654, dtype="float32") /* ty=Tensor[(330), float32] */;
    %434 = reshape(%433, newshape=[165, 2]) /* ty=Tensor[(165, 2), float32] */;
    %435 = @func_2968(%434) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */;
    %436 = @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
    %437 = cast(meta[relay.Constant][12] /* ty=Tensor[(660), uint32] */, dtype="uint32") /* ty=Tensor[(660), uint32] */;
    %438 = reshape(%437, newshape=[165, 4]) /* ty=Tensor[(165, 4), uint32] */;
    %439 = %432.0;
    %440 = %435.1;
    %441 = %436.2;
    %442 = @func_3399(%438) /* ty=Tensor[(165, 4), int16] */;
    (%439, %440, %var_8654, %441, %442, meta[relay.Constant][12] /* ty=Tensor[(660), uint32] */)
  };
  %443(%var_8668) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(165, ?), uint32], Tensor[(330), float32], Tensor[(2340), int8], Tensor[(165, 4), int16], Tensor[(660), uint32]) */
}

def @func_9335() -> Tensor[(13, 8, 6), bool] {
  %444 = @func_4462() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %444.0
}

def @func_8569() -> (Tensor[(165, 9), bool], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) {
  %445 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
  %446 = %445.0;
  %447 = cast(%446, dtype="uint16") /* ty=Tensor[(165, ?), uint16] */;
  %448 = cast(meta[relay.Constant][13] /* ty=Tensor[(165, 9), uint32] */, dtype="uint16") /* ty=Tensor[(165, 9), uint16] */;
  %449 = right_shift(%447, %448) /* ty=Tensor[(165, 9), uint16] */;
  %450 = cast(%446, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %451 = cast(%449, dtype="bool") /* ty=Tensor[(165, 9), bool] */;
  %452 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %453 = not_equal(%450, %451) /* ty=Tensor[(165, 9), bool] */;
  %454 = @func_7557() /* ty=Tensor[(1, 11, 15), float32] */;
  %455 = %452.0;
  (%453, %454, %455)
}

def @func_6695() -> Tensor[(13, 8, 6), float64] {
  @func_6523() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_11812(%var_11800: Tensor[(420), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(14, 3, 10), float32], Tensor[(420), float32]) {
  %456 = @func_8959() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32], Tensor[(13, 8, 6), float64]) */;
  %457 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %458 = cast(%var_11800, dtype="float32") /* ty=Tensor[(420), float32] */;
  %459 = reshape(%458, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float32] */;
  %460 = %456.1;
  %461 = %457.0;
  %462 = @func_9113(%459) /* ty=Tensor[(14, 3, 10), float32] */;
  (%460, %461, %462, %var_11800)
}

def @func_12081() -> (Tensor[(1, 11, 15), float32], Tensor[(165, 9), bool], Tensor[(16, 14, 14), uint64]) {
  %463 = @func_8569() /* ty=(Tensor[(165, 9), bool], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) */;
  %464 = @func_6783() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), uint64]) */;
  %465 = @func_6428() /* ty=Tensor[(1, 11, 15), float32] */;
  %466 = %463.0;
  %467 = %464.1;
  (%465, %466, %467)
}

def @func_11693(%var_11689: Tensor[(312, 2), bool]) -> (Tensor[(165, 10), float32], Tensor[(13, 8, 6), float32], Tensor[(312, 2), bool]) {
  %468 = @func_3028() /* ty=(Tensor[(165, 1), float64],) */;
  %469 = %468.0;
  %470 = cast(%469, dtype="float64") /* ty=Tensor[(165, 1), float64] */;
  %471 = rsqrt(%470) /* ty=Tensor[(165, 1), float64] */;
  %472 = cast(%471, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
  %473 = cast(meta[relay.Constant][14] /* ty=Tensor[(165, 10), float64] */, dtype="float32") /* ty=Tensor[(165, 10), float32] */;
  %474 = cast(%var_11689, dtype="bool") /* ty=Tensor[(312, 2), bool] */;
  %475 = reshape(%474, newshape=[13, 8, 6]) /* ty=Tensor[(13, 8, 6), bool] */;
  %476 = floor_mod(%472, %473) /* ty=Tensor[(165, 10), float32] */;
  %477 = @func_10588(%475) /* ty=Tensor[(13, 8, 6), float32] */;
  (%476, %477, %var_11689)
}

def @func_2306() -> (Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) {
  %478 = cast(meta[relay.Constant][15] /* ty=Tensor[(165, 1), float64] */, dtype="float64") /* ty=Tensor[(165, 1), float64] */;
  %479 = reshape(%478, newshape=[1, 11, 15]) /* ty=Tensor[(1, 11, 15), float64] */;
  %480 = @func_2183(%479) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
  %481 = %480.0;
  %482 = cast(%481, dtype="float32") /* ty=Tensor[(1, 11, 15), float32] */;
  %483 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %484 = asin(%482) /* ty=Tensor[(1, 11, 15), float32] */;
  (%483, meta[relay.Constant][15] /* ty=Tensor[(165, 1), float64] */, %484)
}

def @func_10850() -> (Tensor[(1, 11, 15), float32], Tensor[(16, 16, 1), float64], Tensor[(256), float64]) {
  @func_10848() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 16, 1), float64], Tensor[(256), float64]) */
}

def @func_2842() -> Tensor[(13, 8, 6), bool] {
  @func_2840() /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_3451() -> Tensor[(16, 14, 14), uint64] {
  @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */
}

def @func_11184() -> (Tensor[(13, 8, 6), float64], Tensor[(165, 10), bool], Tensor[(1155), uint32], Tensor[(110, 15), uint32]) {
  %492 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(165, 10), bool], Tensor[(1155), uint32], Tensor[(110, 15), uint32]) {
    %485 = cast(meta[relay.Constant][16] /* ty=Tensor[(1155), uint32] */, dtype="uint32") /* ty=Tensor[(1155), uint32] */;
    %486 = cast(meta[relay.Constant][17] /* ty=Tensor[(110, 15), uint32] */, dtype="uint32") /* ty=Tensor[(110, 15), uint32] */;
    %487 = reshape(%485, newshape=[165, 7]) /* ty=Tensor[(165, 7), uint32] */;
    %488 = reshape(%486, newshape=[165, 10]) /* ty=Tensor[(165, 10), uint32] */;
    %489 = @func_5805(%487, %488) /* ty=(Tensor[(165, 7), bool], Tensor[(165, 10), bool]) */;
    %490 = @func_10562() /* ty=Tensor[(13, 8, 6), float64] */;
    %491 = %489.1;
    (%490, %491, meta[relay.Constant][16] /* ty=Tensor[(1155), uint32] */, meta[relay.Constant][17] /* ty=Tensor[(110, 15), uint32] */)
  };
  %492() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 10), bool], Tensor[(1155), uint32], Tensor[(110, 15), uint32]) */
}

def @func_10848() -> (Tensor[(1, 11, 15), float32], Tensor[(16, 16, 1), float64], Tensor[(256), float64]) {
  %493 = cast(meta[relay.Constant][18] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %494 = reshape(%493, newshape=[16, 16, 1]) /* ty=Tensor[(16, 16, 1), float64] */;
  %495 = @func_5531() /* ty=Tensor[(1, 11, 15), float32] */;
  %496 = @func_10678(%494) /* ty=Tensor[(16, 16, 1), float64] */;
  (%495, %496, meta[relay.Constant][18] /* ty=Tensor[(256), float64] */)
}

def @func_9562() -> (Tensor[(165, 1), float64],) {
  @func_9560() /* ty=(Tensor[(165, 1), float64],) */
}

def @func_5805(%var_5787: Tensor[(165, 7), uint32], %var_5799: Tensor[(165, 10), uint32]) -> (Tensor[(165, 7), bool], Tensor[(165, 10), bool]) {
  %497 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
  %498 = %497.0;
  %499 = cast(%498, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %500 = cast(%var_5787, dtype="bool") /* ty=Tensor[(165, 7), bool] */;
  %501 = cast(%498, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
  %502 = cast(%var_5799, dtype="bool") /* ty=Tensor[(165, 10), bool] */;
  %503 = logical_and(%499, %500) /* ty=Tensor[(165, 7), bool] */;
  %504 = not_equal(%501, %502) /* ty=Tensor[(165, 10), bool] */;
  (%503, %504)
}

def @func_7948() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %505 = @func_7879() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %506 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %507 = %505.0;
  %508 = %506.0;
  (%507, %508)
}

def @func_3158() -> (Tensor[(13, 8, 6), float64],) {
  %511 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %509 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
    %510 = %509.1;
    (%510,)
  };
  %511() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_10549() -> (Tensor[(13, 8, 6), float64],) {
  %512 = @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %513 = %512.0;
  (%513,)
}

def @func_10198() -> Tensor[(?, 11, 15), uint16] {
  %514 = fn () -> Tensor[(?, 11, 15), uint16] {
    @func_5874() /* ty=Tensor[(?, 11, 15), uint16] */
  };
  %514() /* ty=Tensor[(?, 11, 15), uint16] */
}

def @func_13739() -> Tensor[(1, 11, 15), float64] {
  @func_13737() /* ty=Tensor[(1, 11, 15), float64] */
}

def @func_12963(%var_12962: Tensor[(165, 11), uint32]) -> Tensor[(165, 11), bool] {
  %519 = fn (%var_12955: Tensor[(165, 11), uint32]) -> Tensor[(165, 11), bool] {
    %515 = @func_4300() /* ty=(Tensor[(165, ?), uint32],) */;
    %516 = %515.0;
    %517 = cast(%516, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
    %518 = cast(%var_12955, dtype="bool") /* ty=Tensor[(165, 11), bool] */;
    logical_and(%517, %518) /* ty=Tensor[(165, 11), bool] */
  };
  %519(%var_12962) /* ty=Tensor[(165, 11), bool] */
}

def @func_11696(%var_11694: Tensor[(312, 2), bool]) -> (Tensor[(165, 10), float32], Tensor[(13, 8, 6), float32], Tensor[(312, 2), bool]) {
  @func_11693(%var_11694) /* ty=(Tensor[(165, 10), float32], Tensor[(13, 8, 6), float32], Tensor[(312, 2), bool]) */
}

def @func_3928() -> Tensor[(1, 11, 15), float32] {
  %521 = fn () -> Tensor[(1, 11, 15), float32] {
    %520 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
    %520.1
  };
  %521() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_5033() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %525 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
    %522 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
    %523 = %522.0;
    %524 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
    (%523, %524)
  };
  %525() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_10678(%var_10673: Tensor[(16, 16, 1), float64]) -> Tensor[(16, 16, 1), float64] {
  %526 = cast(%var_10673, dtype="float64") /* ty=Tensor[(16, 16, 1), float64] */;
  asin(%526) /* ty=Tensor[(16, 16, 1), float64] */
}

def @func_10316() -> Tensor[(13, 8, 6), float64] {
  %527 = @func_7711() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %527.0
}

def @func_4462() -> (Tensor[(13, 8, 6), bool],) {
  %528 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
  (%528,)
}

def @func_6651() -> (Tensor[(13, 8, 6), float64],) {
  @func_6649() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_7221() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint32], Tensor[(1650), float64], Tensor[(330), float32]) {
  %543 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint32], Tensor[(1650), float64], Tensor[(330), float32]) {
    %529 = @func_5032() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %530 = %529.1;
    %531 = cast(%530, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
    %532 = rsqrt(%531) /* ty=Tensor[(1, 11, 15), float64] */;
    %533 = cast(%530, dtype="uint32") /* ty=Tensor[(1, 11, 15), uint32] */;
    %534 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
    %535 = cast(%532, dtype="uint32") /* ty=Tensor[(1, 11, 15), uint32] */;
    %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %537 = cast(meta[relay.Constant][19] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %538 = reshape(%537, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %539 = @func_6481(%538) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(1650), float64], Tensor[(330), float32], Tensor[(1, 11, 15), float64]) */;
    %540 = @func_5274() /* ty=Tensor[(13, 8, 6), float64] */;
    %541 = bitwise_and(%535, %536) /* ty=Tensor[(?, 11, 15), uint32] */;
    %542 = %539.2;
    (%540, %541, %542, meta[relay.Constant][19] /* ty=Tensor[(330), float32] */)
  };
  %543() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint32], Tensor[(1650), float64], Tensor[(330), float32]) */
}

def @func_6226(%var_6225: Tensor[(3, 12, 11), uint32]) -> (Tensor[(3, 12, 11), uint32],) {
  %549 = fn (%var_6213: Tensor[(3, 12, 11), uint32]) -> (Tensor[(3, 12, 11), uint32],) {
    %544 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 12, 11), uint32] */, dtype="uint32") /* ty=Tensor[(3, 12, 11), uint32] */;
    %545 = shape_of(%var_6213, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%var_6213, dtype="uint32") /* ty=Tensor[(3, 12, 11), uint32] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %548 = logical_xor(%546, %547) /* ty=Tensor[(3, 12, 11), uint32] */;
    (%548,)
  };
  %549(%var_6225) /* ty=(Tensor[(3, 12, 11), uint32],) */
}

def @func_9989() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  %553 = fn () -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
    %550 = @func_5974() /* ty=(Tensor[(1, 11, 15), float32],) */;
    %551 = %550.0;
    %552 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
    (%551, %552)
  };
  %553() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */
}

def @func_12500() -> (Tensor[(13, 8, 6), float64], Tensor[(3, 12, 11), uint32], Tensor[(396), uint32], Tensor[(13, 8, 6), bool]) {
  %554 = @func_7137() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) */;
  %555 = cast(meta[relay.Constant][21] /* ty=Tensor[(396), uint32] */, dtype="uint32") /* ty=Tensor[(396), uint32] */;
  %556 = reshape(%555, newshape=[3, 12, 11]) /* ty=Tensor[(3, 12, 11), uint32] */;
  %557 = @func_6224(%556) /* ty=(Tensor[(3, 12, 11), uint32],) */;
  %558 = %554.0;
  %559 = %557.0;
  %560 = @func_9007() /* ty=Tensor[(13, 8, 6), bool] */;
  (%558, %559, meta[relay.Constant][21] /* ty=Tensor[(396), uint32] */, %560)
}

def @func_12281(%var_12274: Tensor[(12, 15, 2), float32]) -> (Tensor[(12, 15, 2), float32],) {
  %561 = cast(%var_12274, dtype="float32") /* ty=Tensor[(12, 15, 2), float32] */;
  %562 = log(%561) /* ty=Tensor[(12, 15, 2), float32] */;
  (%562,)
}

def @func_2471() -> (Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) {
  %567 = fn () -> (Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) {
    %563 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
    %564 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
    %565 = %563.1;
    %566 = %564.1;
    (%565, %566)
  };
  %567() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */
}

def @func_5532() -> Tensor[(1, 11, 15), float32] {
  %568 = fn () -> Tensor[(1, 11, 15), float32] {
    @func_4447() /* ty=Tensor[(1, 11, 15), float32] */
  };
  %568() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_6032() -> Tensor[(13, 8, 6), float64] {
  @func_6030() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_9547() -> (Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) {
  %569 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
  %570 = @func_4829() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) */;
  %571 = %569.1;
  %572 = %570.1;
  (%571, %572)
}

def @func_3969() -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) {
  %577 = fn () -> (Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) {
    %573 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %574 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
    %575 = %573.0;
    %576 = %574.1;
    (%575, %576)
  };
  %577() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) */
}

def @func_7712() -> (Tensor[(13, 8, 6), float64],) {
  %580 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %578 = @func_3111() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
    %579 = %578.1;
    (%579,)
  };
  %580() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_3748() -> (Tensor[(13, 8, 6), float64],) {
  %582 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %581 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
    (%581,)
  };
  %582() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_4943(%var_4940: Tensor[(330), float32]) -> (Tensor[(165, 1), float64], Tensor[(12, 13, 15), float32], Tensor[(330), float32]) {
  %583 = @func_3028() /* ty=(Tensor[(165, 1), float64],) */;
  %584 = cast(%var_4940, dtype="float32") /* ty=Tensor[(330), float32] */;
  %585 = reshape(%584, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %586 = @func_4419(%585) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, 330), uint64]) */;
  %587 = %583.0;
  %588 = %586.0;
  (%587, %588, %var_4940)
}

def @func_10794() -> (Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32]) {
  %594 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32]) {
    %589 = @func_8102() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(11, 15), float64], Tensor[(2340), int8]) */;
    %590 = @func_7548() /* ty=Tensor[(16, 14, 14), uint64] */;
    %591 = cast(%590, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
    %592 = %589.2;
    %593 = log10(%591) /* ty=Tensor[(16, 14, 14), float32] */;
    (%592, %593)
  };
  %594() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32]) */
}

def @func_3449() -> Tensor[(16, 14, 14), uint64] {
  %595 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 14), float64] */;
  %596 = erf(%595) /* ty=Tensor[(16, 14, 14), float64] */;
  %597 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 14, 14), float64] */, dtype="uint64") /* ty=Tensor[(16, 14, 14), uint64] */;
  %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%596, dtype="uint64") /* ty=Tensor[(16, 14, 14), uint64] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%599, %600) /* ty=Tensor[(16, 14, 14), uint64] */
}

def @func_8854() -> Tensor[(1, 11, 15), float32] {
  @func_8852() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_5497() -> (Tensor[(13, 8, 6), float64],) {
  %601 = @func_5274() /* ty=Tensor[(13, 8, 6), float64] */;
  (%601,)
}

def @func_3647() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) {
  @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */
}

def @func_7847() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), float64], Tensor[(1, 11, 15), float64]) {
  %602 = @func_6602() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %603 = @func_4358() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %604 = %603.2;
  %605 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 11, 15), float32] */, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %609 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %610 = %602.0;
  %611 = floor_mod(%607, %608) /* ty=Tensor[(?, 11, 15), float64] */;
  %612 = %609.0;
  (%610, %611, %612)
}

def @func_12284(%var_12282: Tensor[(12, 15, 2), float32]) -> (Tensor[(12, 15, 2), float32],) {
  @func_12281(%var_12282) /* ty=(Tensor[(12, 15, 2), float32],) */
}

def @func_6264(%var_6262: Tensor[(165), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(165), float64]) {
  @func_6261(%var_6262) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(165), float64]) */
}

def @func_8279() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %613 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  %614 = @func_5531() /* ty=Tensor[(1, 11, 15), float32] */;
  (%613, %614)
}

def @func_6125() -> (Tensor[(13, 8, 6), float64],) {
  @func_6123() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_13759() -> (Tensor[(13, 8, 6), float64],) {
  @func_13757() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_8750() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64]) {
  %619 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64]) {
    %615 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
    %616 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
    %617 = %615.0;
    %618 = @func_6030() /* ty=Tensor[(13, 8, 6), float64] */;
    (%616, %617, %618)
  };
  %619() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64]) */
}

def @func_3259() -> (Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) {
  %620 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %621 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %622 = %620.1;
  %623 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
  %624 = %621.1;
  (%622, %623, %624)
}

def @func_4225(%var_4223: uint8, %var_4224: Tensor[(165, 1), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(5, 12, 14), bool], uint8, Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(165, 840), float32], Tensor[(165, ?), uint8], Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
  %659 = fn (%var_4182: uint8, %var_4197: Tensor[(165, 1), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(5, 12, 14), bool], uint8, Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(165, 840), float32], Tensor[(165, ?), uint8], Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
    %625 = @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
    %626 = cast(%var_4182, dtype="uint8") /* ty=uint8 */;
    %627 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %628 = reshape(%626, newshape=[]) /* ty=uint8 */;
    %629 = reshape(%627, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), uint8] */;
    %630 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
    %631 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
    %632 = %631.1;
    %633 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), uint8] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %634 = cast(%632, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
    %635 = cast(%632, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
    %636 = sqrt(%635) /* ty=Tensor[(165, 1), float32] */;
    %637 = cast(%var_4197, dtype="uint32") /* ty=Tensor[(165, 1), uint32] */;
    %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(2), int32] */;
    %639 = cast(%636, dtype="uint32") /* ty=Tensor[(165, 1), uint32] */;
    %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %641 = bitwise_xor(%639, %640) /* ty=Tensor[(165, ?), uint32] */;
    %642 = cast(%632, dtype="uint8") /* ty=Tensor[(165, 1), uint8] */;
    %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(2), int32] */;
    %644 = cast(%641, dtype="uint8") /* ty=Tensor[(165, ?), uint8] */;
    %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %646 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %647 = cast(meta[relay.Constant][25] /* ty=Tensor[(2340), int8] */, dtype="int8") /* ty=Tensor[(2340), int8] */;
    %648 = reshape(%647, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), int8] */;
    %649 = @func_2109(%648) /* ty=(Tensor[(12, 13, 15), float32],) */;
    %650 = @func_3927() /* ty=Tensor[(1, 11, 15), float32] */;
    %651 = %625.0;
    %652 = @func_3287(%628, %629) /* ty=Tensor[(5, 12, 14), bool] */;
    %653 = @func_3927() /* ty=Tensor[(1, 11, 15), float32] */;
    %654 = %630.0;
    %655 = floor_mod(%633, %634) /* ty=Tensor[(165, 840), float32] */;
    %656 = add(%644, %645) /* ty=Tensor[(165, ?), uint8] */;
    %657 = %646.0;
    %658 = %649.0;
    (%650, %651, %652, %var_4182, %653, %654, %655, %656, %657, %658, meta[relay.Constant][25] /* ty=Tensor[(2340), int8] */)
  };
  %659(%var_4223, %var_4224) /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(5, 12, 14), bool], uint8, Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(165, 840), float32], Tensor[(165, ?), uint8], Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */
}

def @func_2840() -> Tensor[(13, 8, 6), bool] {
  %660 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %661 = %660.0;
  %662 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 8, 6), float64] */, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%661, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%664, %665) /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_3291(%var_3289: uint8, %var_3290: Tensor[(5, 12, 14), uint8]) -> Tensor[(5, 12, 14), bool] {
  @func_3287(%var_3289, %var_3290) /* ty=Tensor[(5, 12, 14), bool] */
}

def @func_10968(%var_10966: Tensor[(6, 3, 1), uint32], %var_10967: Tensor[(6, 3, 5), uint32]) -> Tensor[(6, 3, 5), uint32] {
  %668 = fn (%var_10958: Tensor[(6, 3, 1), uint32], %var_10959: Tensor[(6, 3, 5), uint32]) -> Tensor[(6, 3, 5), uint32] {
    %666 = cast(%var_10958, dtype="uint32") /* ty=Tensor[(6, 3, 1), uint32] */;
    %667 = cast(%var_10959, dtype="uint32") /* ty=Tensor[(6, 3, 5), uint32] */;
    maximum(%666, %667) /* ty=Tensor[(6, 3, 5), uint32] */
  };
  %668(%var_10966, %var_10967) /* ty=Tensor[(6, 3, 5), uint32] */
}

def @func_13757() -> (Tensor[(13, 8, 6), float64],) {
  %669 = @func_6602() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %670 = %669.0;
  (%670,)
}

def @func_13150(%var_13133: Tensor[(320), float32]) -> (Tensor[(165, 10), bool], Tensor[(13, 8, 6), bool], Tensor[(320), float32], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32]) {
  %671 = @func_11183() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 10), bool], Tensor[(1155), uint32], Tensor[(110, 15), uint32]) */;
  %672 = cast(%var_13133, dtype="float32") /* ty=Tensor[(320), float32] */;
  %673 = reshape(%672, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %674 = @func_9866(%673) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), bool], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(1650), float64], Tensor[(330), float32]) */;
  %675 = cast(meta[relay.Constant][27] /* ty=Tensor[(385, 3), float32] */, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
  %676 = reshape(%675, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %677 = %671.1;
  %678 = %674.1;
  %679 = @func_12806(%676) /* ty=Tensor[(7, 11, 15), float32] */;
  (%677, %678, %var_13133, %679, meta[relay.Constant][27] /* ty=Tensor[(385, 3), float32] */)
}

def @func_8515() -> Tensor[(165, 1), float64] {
  %680 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
  %680.1
}

def @func_12766() -> Tensor[(165, 1), float64] {
  @func_12764() /* ty=Tensor[(165, 1), float64] */
}

def @func_13519(%var_13517: Tensor[(11, 16, 8), int64], %var_13518: Tensor[(11, 16, 8), int64]) -> (Tensor[(11, 16, 8), int64], Tensor[(11, 16, 8), bool]) {
  %691 = fn (%var_13495: Tensor[(11, 16, 8), int64], %var_13509: Tensor[(11, 16, 8), int64]) -> (Tensor[(11, 16, 8), int64], Tensor[(11, 16, 8), bool]) {
    %681 = cast(%var_13495, dtype="int64") /* ty=Tensor[(11, 16, 8), int64] */;
    %682 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(11, 16, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 16, 8), int64] */, dtype="int64") /* ty=Tensor[(11, 16, 8), int64] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %685 = cast(%var_13509, dtype="bool") /* ty=Tensor[(11, 16, 8), bool] */;
    %686 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(11, 16, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %687 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 16, 8), int64] */, dtype="bool") /* ty=Tensor[(11, 16, 8), bool] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %689 = bitwise_xor(%683, %684) /* ty=Tensor[(11, 16, 8), int64] */;
    %690 = less(%687, %688) /* ty=Tensor[(11, 16, 8), bool] */;
    (%689, %690)
  };
  %691(%var_13517, %var_13518) /* ty=(Tensor[(11, 16, 8), int64], Tensor[(11, 16, 8), bool]) */
}

def @func_10551() -> (Tensor[(13, 8, 6), float64],) {
  @func_10549() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_5914() -> (Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) {
  %695 = fn () -> (Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) {
    %692 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %693 = @func_5874() /* ty=Tensor[(?, 11, 15), uint16] */;
    %694 = %692.0;
    (%693, %694)
  };
  %695() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */
}

def @func_9490() -> (Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32]) {
  %699 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32]) {
    %696 = @func_7746() /* ty=(Tensor[(165, ?), float32],) */;
    %697 = @func_6695() /* ty=Tensor[(13, 8, 6), float64] */;
    %698 = %696.0;
    (%697, %698)
  };
  %699() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32]) */
}

def @func_12166(%var_12165: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(660), uint32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  %710 = fn (%var_12122: Tensor[(330), float32]) -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(660), uint32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
    %700 = @func_8026() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %701 = @func_8026() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %702 = cast(%var_12122, dtype="float32") /* ty=Tensor[(330), float32] */;
    %703 = reshape(%702, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %704 = @func_8667(%703) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(165, ?), uint32], Tensor[(330), float32], Tensor[(2340), int8], Tensor[(165, 4), int16], Tensor[(660), uint32]) */;
    %705 = %700.0;
    %706 = %701.1;
    %707 = %704.5;
    %708 = @func_8115() /* ty=Tensor[(13, 8, 6), float64] */;
    %709 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
    (%705, %706, %707, %var_12122, %708, %709)
  };
  %710(%var_12165) /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(660), uint32], Tensor[(330), float32], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) */
}

def @func_7022() -> Tensor[(13, 8, 6), float32] {
  @func_7020() /* ty=Tensor[(13, 8, 6), float32] */
}

def @func_3510() -> Tensor[(1, 11, 15), float32] {
  @func_3508() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_5499() -> (Tensor[(13, 8, 6), float64],) {
  @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_13933() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) {
  %711 = @func_10711() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %712 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %713 = @func_4462() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %714 = %711.1;
  %715 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  %716 = %712.0;
  %717 = %713.0;
  (%714, %715, %716, %717)
}

def @func_11474() -> (Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %718 = @func_10711() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %719 = @func_10793() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), float32]) */;
  %720 = @func_6364() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %721 = %718.0;
  %722 = %719.1;
  %723 = %720.0;
  %724 = @func_4378() /* ty=Tensor[(1, 11, 15), float32] */;
  (%721, %722, %723, %724)
}

def @func_4787(%var_4785: Tensor[(2, 160), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(2, 160), float32], Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) {
  @func_4784(%var_4785) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(2, 160), float32], Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */
}

def @func_9246() -> Tensor[(165, ?), uint32] {
  @func_9244() /* ty=Tensor[(165, ?), uint32] */
}

def @func_11815(%var_11813: Tensor[(420), float32]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(14, 3, 10), float32], Tensor[(420), float32]) {
  @func_11812(%var_11813) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(14, 3, 10), float32], Tensor[(420), float32]) */
}

def @func_12502() -> (Tensor[(13, 8, 6), float64], Tensor[(3, 12, 11), uint32], Tensor[(396), uint32], Tensor[(13, 8, 6), bool]) {
  @func_12500() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(3, 12, 11), uint32], Tensor[(396), uint32], Tensor[(13, 8, 6), bool]) */
}

def @func_6910() -> (Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float64], Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 14, 14), uint64], Tensor[(13, 8, 6), float64]) {
  %725 = @func_4358() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %726 = %725.0;
  %727 = cast(%726, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %728 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %729 = cast(%726, dtype="float32") /* ty=Tensor[(1, 11, 15), float32] */;
  %730 = @func_3645() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(16, 2, 10), float32], Tensor[(40, 8), float32]) */;
  %731 = sigmoid(%727) /* ty=Tensor[(1, 11, 15), float64] */;
  %732 = %728.0;
  %733 = cos(%729) /* ty=Tensor[(1, 11, 15), float32] */;
  %734 = %730.0;
  %735 = @func_3449() /* ty=Tensor[(16, 14, 14), uint64] */;
  %736 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  (%731, %732, %733, %734, %735, %736)
}

def @func_5411(%var_5408: Tensor[(165, 10), float64], %var_5409: Tensor[(165, 10), int8], %var_5410: Tensor[(330), float32]) -> (Tensor[(165, 10), bool], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(165, 10), float32], Tensor[(165, 10), uint8], Tensor[(12, 13, 15), float32], Tensor[(9, 260), int8]) {
  %779 = fn (%var_5339: Tensor[(165, 10), float64], %var_5372: Tensor[(165, 10), int8], %var_5383: Tensor[(330), float32]) -> (Tensor[(165, 10), bool], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(165, 10), float32], Tensor[(165, 10), uint8], Tensor[(12, 13, 15), float32], Tensor[(9, 260), int8]) {
    %737 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
    %738 = %737.2;
    %739 = cast(%738, dtype="bool") /* ty=Tensor[(165, 1), bool] */;
    %740 = cast(%var_5339, dtype="bool") /* ty=Tensor[(165, 10), bool] */;
    %741 = equal(%739, %740) /* ty=Tensor[(165, 10), bool] */;
    %742 = cast(%741, dtype="float64") /* ty=Tensor[(165, 10), float64] */;
    %743 = asin(%742) /* ty=Tensor[(165, 10), float64] */;
    %744 = cast(%743, dtype="float64") /* ty=Tensor[(165, 10), float64] */;
    %745 = acosh(%744) /* ty=Tensor[(165, 10), float64] */;
    %746 = cast(%745, dtype="bool") /* ty=Tensor[(165, 10), bool] */;
    %747 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
    %748 = cast(%743, dtype="bool") /* ty=Tensor[(165, 10), bool] */;
    %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %750 = cast(%var_5383, dtype="float32") /* ty=Tensor[(330), float32] */;
    %751 = reshape(%750, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %752 = @func_4045(%751) /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(13, 8, 6), bool]) */;
    %753 = cast(%var_5339, dtype="float32") /* ty=Tensor[(165, 10), float32] */;
    %754 = shape_of(%745, dtype="int32") /* ty=Tensor[(2), int32] */;
    %755 = cast(%745, dtype="float32") /* ty=Tensor[(165, 10), float32] */;
    %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %757 = cast(%745, dtype="int8") /* ty=Tensor[(165, 10), int8] */;
    %758 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
    %759 = cast(%743, dtype="int8") /* ty=Tensor[(165, 10), int8] */;
    %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %761 = bitwise_or(%759, %760) /* ty=Tensor[(165, 10), int8] */;
    %762 = cast(%var_5372, dtype="uint8") /* ty=Tensor[(165, 10), uint8] */;
    %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(2), int32] */;
    %764 = cast(%761, dtype="uint8") /* ty=Tensor[(165, 10), uint8] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %766 = maximum(%764, %765) /* ty=Tensor[(165, 10), uint8] */;
    %767 = cast(%766, dtype="uint8") /* ty=Tensor[(165, 10), uint8] */;
    %768 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
    %769 = cast(%743, dtype="uint8") /* ty=Tensor[(165, 10), uint8] */;
    %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %771 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 260), int8] */, dtype="int8") /* ty=Tensor[(9, 260), int8] */;
    %772 = reshape(%771, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), int8] */;
    %773 = @func_2109(%772) /* ty=(Tensor[(12, 13, 15), float32],) */;
    %774 = greater(%748, %749) /* ty=Tensor[(165, 10), bool] */;
    %775 = %752.1;
    %776 = divide(%755, %756) /* ty=Tensor[(165, 10), float32] */;
    %777 = minimum(%769, %770) /* ty=Tensor[(165, 10), uint8] */;
    %778 = %773.0;
    (%774, %775, %var_5383, %776, %777, %778, meta[relay.Constant][29] /* ty=Tensor[(9, 260), int8] */)
  };
  %779(%var_5408, %var_5409, %var_5410) /* ty=(Tensor[(165, 10), bool], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(165, 10), float32], Tensor[(165, 10), uint8], Tensor[(12, 13, 15), float32], Tensor[(9, 260), int8]) */
}

def @func_7385() -> (Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) {
  %780 = @func_5974() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %781 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
  %782 = %780.0;
  %783 = %781.0;
  (%782, %783)
}

def @func_5976() -> (Tensor[(1, 11, 15), float32],) {
  @func_5974() /* ty=(Tensor[(1, 11, 15), float32],) */
}

def @func_10091(%var_10088: Tensor[(660), uint32], %var_10089: Tensor[(165, 4), int16], %var_10090: Tensor[(1, 330), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(660), uint32], Tensor[(165, 4), int8], Tensor[(1, 11, 15), float64], Tensor[(1, 330), float32], Tensor[(1, 11, 15), float32], Tensor[(165, 4), bool]) {
  @func_10086(%var_10088, %var_10089, %var_10090) /* ty=(Tensor[(1, 11, 15), float32], Tensor[(660), uint32], Tensor[(165, 4), int8], Tensor[(1, 11, 15), float64], Tensor[(1, 330), float32], Tensor[(1, 11, 15), float32], Tensor[(165, 4), bool]) */
}

def @func_13726() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  %784 = @func_5565() /* ty=Tensor[(13, 8, 6), float64] */;
  %785 = @func_6695() /* ty=Tensor[(13, 8, 6), float64] */;
  (%784, %785)
}

def @func_8960() -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32], Tensor[(13, 8, 6), float64]) {
  %795 = fn () -> (Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32], Tensor[(13, 8, 6), float64]) {
    %786 = @func_8154() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %787 = @func_7385() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, ?), uint32]) */;
    %788 = %787.1;
    %789 = cast(%788, dtype="float32") /* ty=Tensor[(165, ?), float32] */;
    %790 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %791 = @func_4892() /* ty=Tensor[(13, 8, 6), float32] */;
    %792 = %786.0;
    %793 = log10(%789) /* ty=Tensor[(165, ?), float32] */;
    %794 = %790.0;
    (%791, %792, %793, %794)
  };
  %795() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32], Tensor[(13, 8, 6), float64]) */
}

def @func_9503(%var_9494: Tensor[(11, 8, 6), bool]) -> (Tensor[(11, 8, 6), bool], Tensor[(13, 8, 6), float64]) {
  %796 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 8, 6), bool] */, dtype="bool") /* ty=Tensor[(11, 8, 6), bool] */;
  %797 = shape_of(%var_9494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%var_9494, dtype="bool") /* ty=Tensor[(11, 8, 6), bool] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %800 = @func_9293() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
  %801 = logical_or(%798, %799) /* ty=Tensor[(11, 8, 6), bool] */;
  %802 = %800.1;
  (%801, %802)
}

def @func_13231() -> (Tensor[(1, 11, 15), float64],) {
  %803 = @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */;
  %804 = %803.0;
  (%804,)
}

def @func_10382() -> (Tensor[(13, 8, 6), float64], Tensor[(165, ?), uint32], Tensor[(55, 6), float32]) {
  %810 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(165, ?), uint32], Tensor[(55, 6), float32]) {
    %805 = cast(meta[relay.Constant][31] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
    %806 = reshape(%805, newshape=[165, 2]) /* ty=Tensor[(165, 2), float32] */;
    %807 = @func_2968(%806) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */;
    %808 = @func_6523() /* ty=Tensor[(13, 8, 6), float64] */;
    %809 = %807.1;
    (%808, %809, meta[relay.Constant][31] /* ty=Tensor[(55, 6), float32] */)
  };
  %810() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, ?), uint32], Tensor[(55, 6), float32]) */
}

def @func_11126(%var_11113: Tensor[(1155), float64]) -> (Tensor[(165, ?), float64], Tensor[(?, 11, 15), uint16], Tensor[(1155), float64], Tensor[(?, 11, 15), uint16]) {
  %811 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
  %812 = %811.0;
  %813 = cast(%812, dtype="float64") /* ty=Tensor[(165, ?), float64] */;
  %814 = cast(%var_11113, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %815 = reshape(%814, newshape=[15, 11, 7]) /* ty=Tensor[(15, 11, 7), float64] */;
  %816 = @func_8484(%815) /* ty=(Tensor[(15, 11, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(15, 11, 7), float32], Tensor[(?, 11, 15), uint16]) */;
  %817 = @func_5913() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(13, 8, 6), float64]) */;
  %818 = cos(%813) /* ty=Tensor[(165, ?), float64] */;
  %819 = %816.3;
  %820 = %817.0;
  (%818, %819, %var_11113, %820)
}

def @func_3112() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  %825 = fn () -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
    %821 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
    %822 = @func_3010() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %823 = %821.0;
    %824 = %822.0;
    (%823, %824)
  };
  %825() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */
}

def @func_10562() -> Tensor[(13, 8, 6), float64] {
  %826 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(13, 8, 6), float64] */;
  sigmoid(%827) /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_9007() -> Tensor[(13, 8, 6), bool] {
  @func_2840() /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_9113(%var_9085: Tensor[(14, 3, 10), float32]) -> Tensor[(14, 3, 10), float32] {
  %828 = cast(%var_9085, dtype="float32") /* ty=Tensor[(14, 3, 10), float32] */;
  erf(%828) /* ty=Tensor[(14, 3, 10), float32] */
}

def @func_2627() -> Tensor[(13, 8, 6), float64] {
  %830 = fn () -> Tensor[(13, 8, 6), float64] {
    %829 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
    %829.0
  };
  %830() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_4421(%var_4420: Tensor[(330), float32]) -> (Tensor[(12, 13, 15), float32], Tensor[(165, 330), uint64]) {
  %848 = fn (%var_4389: Tensor[(330), float32]) -> (Tensor[(12, 13, 15), float32], Tensor[(165, 330), uint64]) {
    %831 = @func_3674() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
    %832 = cast(%var_4389, dtype="float32") /* ty=Tensor[(330), float32] */;
    %833 = reshape(%832, newshape=[165, 2]) /* ty=Tensor[(165, 2), float32] */;
    %834 = @func_2968(%833) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */;
    %835 = %834.1;
    %836 = cast(%835, dtype="bool") /* ty=Tensor[(165, ?), bool] */;
    %837 = cast(%var_4389, dtype="bool") /* ty=Tensor[(330), bool] */;
    %838 = equal(%836, %837) /* ty=Tensor[(165, 330), bool] */;
    %839 = cast(meta[relay.Constant][32] /* ty=Tensor[(165, 330), bool] */, dtype="bool") /* ty=Tensor[(165, 330), bool] */;
    %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(2), int32] */;
    %841 = cast(%838, dtype="bool") /* ty=Tensor[(165, 330), bool] */;
    %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %843 = less(%841, %842) /* ty=Tensor[(165, 330), bool] */;
    %844 = cast(%843, dtype="uint64") /* ty=Tensor[(165, 330), uint64] */;
    %845 = cast(%835, dtype="uint64") /* ty=Tensor[(165, ?), uint64] */;
    %846 = %831.1;
    %847 = minimum(%844, %845) /* ty=Tensor[(165, 330), uint64] */;
    (%846, %847)
  };
  %848(%var_4420) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, 330), uint64]) */
}

def @func_4645() -> Tensor[(13, 8, 6), float64] {
  %850 = fn () -> Tensor[(13, 8, 6), float64] {
    %849 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
    %849.0
  };
  %850() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_8102() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(11, 15), float64], Tensor[(2340), int8]) {
  %851 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
  %852 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15), float64] */;
  %853 = reshape(%852, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %854 = @func_6261(%853) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(165), float64]) */;
  %855 = @func_7263() /* ty=(Tensor[(?, 11, 15), uint16], Tensor[(2340), int8]) */;
  %856 = @func_5565() /* ty=Tensor[(13, 8, 6), float64] */;
  %857 = %851.0;
  %858 = %854.0;
  %859 = %855.1;
  (%856, %857, %858, meta[relay.Constant][33] /* ty=Tensor[(11, 15), float64] */, %859)
}

def @func_13869() -> Tensor[(1, 11, 15), float64] {
  %861 = fn () -> Tensor[(1, 11, 15), float64] {
    %860 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %860.0
  };
  %861() /* ty=Tensor[(1, 11, 15), float64] */
}

def @func_4585(%var_4584: Tensor[(165), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(165), float64], Tensor[(13, 8, 6), float64]) {
  %870 = fn (%var_4569: Tensor[(165), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(165), float64], Tensor[(13, 8, 6), float64]) {
    %862 = @func_3968() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) */;
    %863 = cast(%var_4569, dtype="float64") /* ty=Tensor[(165), float64] */;
    %864 = reshape(%863, newshape=[1, 11, 15]) /* ty=Tensor[(1, 11, 15), float64] */;
    %865 = @func_2183(%864) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
    %866 = @func_3157() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %867 = %862.1;
    %868 = %865.0;
    %869 = %866.0;
    (%867, %868, %var_4569, %869)
  };
  %870(%var_4584) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(165), float64], Tensor[(13, 8, 6), float64]) */
}

def @func_5274() -> Tensor[(13, 8, 6), float64] {
  %871 = @func_3968() /* ty=(Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64]) */;
  %871.1
}

def @func_7537() -> (Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) {
  %876 = fn () -> (Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) {
    %872 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
    %873 = @func_3221() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %874 = %872.1;
    %875 = %873.0;
    (%874, %875)
  };
  %876() /* ty=(Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) */
}

def @func_3277() -> Tensor[(13, 8, 6), bool] {
  %877 = fn () -> Tensor[(13, 8, 6), bool] {
    @func_2840() /* ty=Tensor[(13, 8, 6), bool] */
  };
  %877() /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_2345() -> Tensor[(1, 11, 15), float32] {
  %878 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
  %878.2
}

def @func_10664() -> Tensor[(13, 8, 6), float64] {
  %879 = @func_8959() /* ty=(Tensor[(13, 8, 6), float32], Tensor[(13, 8, 6), float64], Tensor[(165, ?), float32], Tensor[(13, 8, 6), float64]) */;
  %879.1
}

def @func_9337() -> Tensor[(13, 8, 6), bool] {
  @func_9335() /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_9162() -> (Tensor[(1, 11, 15), float32], Tensor[(14, 3, 10), float32], Tensor[(70, 6), float32]) {
  %884 = fn () -> (Tensor[(1, 11, 15), float32], Tensor[(14, 3, 10), float32], Tensor[(70, 6), float32]) {
    %880 = cast(meta[relay.Constant][34] /* ty=Tensor[(70, 6), float32] */, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
    %881 = reshape(%880, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float32] */;
    %882 = @func_7557() /* ty=Tensor[(1, 11, 15), float32] */;
    %883 = @func_9113(%881) /* ty=Tensor[(14, 3, 10), float32] */;
    (%882, %883, meta[relay.Constant][34] /* ty=Tensor[(70, 6), float32] */)
  };
  %884() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(14, 3, 10), float32], Tensor[(70, 6), float32]) */
}

def @func_4485() -> (Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) {
  %892 = fn () -> (Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) {
    %885 = cast(meta[relay.Constant][35] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %886 = cast(meta[relay.Constant][36] /* ty=Tensor[(165), float32] */, dtype="float32") /* ty=Tensor[(165), float32] */;
    %887 = reshape(%885, newshape=[]) /* ty=uint8 */;
    %888 = reshape(%886, newshape=[165, 1]) /* ty=Tensor[(165, 1), float32] */;
    %889 = @func_4222(%887, %888) /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(5, 12, 14), bool], uint8, Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(165, 840), float32], Tensor[(165, ?), uint8], Tensor[(1, 11, 15), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) */;
    %890 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
    %891 = %889.7;
    (%890, %891, meta[relay.Constant][35] /* ty=uint8 */, meta[relay.Constant][36] /* ty=Tensor[(165), float32] */)
  };
  %892() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) */
}

def @func_3222() -> (Tensor[(13, 8, 6), float64],) {
  %894 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %893 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
    (%893,)
  };
  %894() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_8778() -> Tensor[(?, 11, 15), float64] {
  %895 = fn () -> Tensor[(?, 11, 15), float64] {
    @func_7493() /* ty=Tensor[(?, 11, 15), float64] */
  };
  %895() /* ty=Tensor[(?, 11, 15), float64] */
}

def @func_10713() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  @func_10711() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */
}

def @func_10318() -> Tensor[(13, 8, 6), float64] {
  @func_10316() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_6817(%var_6807: Tensor[(1, 11, 15), float32]) -> (Tensor[(?, 11, 15), int64],) {
  %896 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %897 = %896.2;
  %898 = cast(%var_6807, dtype="int64") /* ty=Tensor[(1, 11, 15), int64] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="int64") /* ty=Tensor[(1, 11, 15), int64] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %902 = subtract(%900, %901) /* ty=Tensor[(?, 11, 15), int64] */;
  (%902,)
}

def @func_7020() -> Tensor[(13, 8, 6), float32] {
  %903 = @func_6068() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float32]) */;
  %903.1
}

def @func_2563() -> (Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) {
  %909 = fn () -> (Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) {
    %904 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
    %905 = %904.1;
    %906 = cast(%905, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
    %907 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
    %908 = acosh(%906) /* ty=Tensor[(165, 1), float32] */;
    (%907, %908)
  };
  %909() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */
}

def @func_11270(%var_11269: Tensor[(6, 2, 10), float32]) -> (Tensor[(6, 2, 10), float32], Tensor[(2340), int8], Tensor[(13, 8, 6), bool], Tensor[(6, 2, 10), float32], Tensor[(13, 8, 6), float64]) {
  %922 = fn (%var_11221: Tensor[(6, 2, 10), float32]) -> (Tensor[(6, 2, 10), float32], Tensor[(2340), int8], Tensor[(13, 8, 6), bool], Tensor[(6, 2, 10), float32], Tensor[(13, 8, 6), float64]) {
    %910 = cast(%var_11221, dtype="float32") /* ty=Tensor[(6, 2, 10), float32] */;
    %911 = log10(%910) /* ty=Tensor[(6, 2, 10), float32] */;
    %912 = cast(%911, dtype="float32") /* ty=Tensor[(6, 2, 10), float32] */;
    %913 = @func_5054() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(2340), int8]) */;
    %914 = @func_7137() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) */;
    %915 = cast(%911, dtype="float32") /* ty=Tensor[(6, 2, 10), float32] */;
    %916 = @func_7536() /* ty=(Tensor[(165, ?), uint32], Tensor[(13, 8, 6), float64]) */;
    %917 = sigmoid(%912) /* ty=Tensor[(6, 2, 10), float32] */;
    %918 = %913.1;
    %919 = %914.1;
    %920 = sinh(%915) /* ty=Tensor[(6, 2, 10), float32] */;
    %921 = %916.1;
    (%917, %918, %919, %920, %921)
  };
  %922(%var_11269) /* ty=(Tensor[(6, 2, 10), float32], Tensor[(2340), int8], Tensor[(13, 8, 6), bool], Tensor[(6, 2, 10), float32], Tensor[(13, 8, 6), float64]) */
}

def @func_3881() -> (Tensor[(1, 11, 15), float64],) {
  %926 = fn () -> (Tensor[(1, 11, 15), float64],) {
    %923 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
    %924 = cast(%923, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
    %925 = acos(%924) /* ty=Tensor[(1, 11, 15), float64] */;
    (%925,)
  };
  %926() /* ty=(Tensor[(1, 11, 15), float64],) */
}

def @func_12083() -> (Tensor[(1, 11, 15), float32], Tensor[(165, 9), bool], Tensor[(16, 14, 14), uint64]) {
  @func_12081() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 9), bool], Tensor[(16, 14, 14), uint64]) */
}

def @func_7747() -> (Tensor[(165, ?), float32],) {
  %931 = fn () -> (Tensor[(165, ?), float32],) {
    %927 = @func_2470() /* ty=(Tensor[(165, ?), uint32], Tensor[(165, 1), float64]) */;
    %928 = %927.0;
    %929 = cast(%928, dtype="float32") /* ty=Tensor[(165, ?), float32] */;
    %930 = log(%929) /* ty=Tensor[(165, ?), float32] */;
    (%930,)
  };
  %931() /* ty=(Tensor[(165, ?), float32],) */
}

def @func_8155() -> (Tensor[(13, 8, 6), float64],) {
  %934 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %932 = @func_5032() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %933 = %932.0;
    (%933,)
  };
  %934() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_8981() -> Tensor[(165, 1), float64] {
  @func_8979() /* ty=Tensor[(165, 1), float64] */
}

def @func_13354() -> (Tensor[(13, 8, 6), float64],) {
  %937 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %935 = @func_12500() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(3, 12, 11), uint32], Tensor[(396), uint32], Tensor[(13, 8, 6), bool]) */;
    %936 = %935.0;
    (%936,)
  };
  %937() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_11862() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint16]) {
  %941 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint16]) {
    %938 = @func_10549() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %939 = %938.0;
    %940 = @func_5874() /* ty=Tensor[(?, 11, 15), uint16] */;
    (%939, %940)
  };
  %941() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), uint16]) */
}

def @func_1568(%var_1513: Tensor[(16, 2, 10), float32]) -> (Tensor[(16, 2, 10), float32],) {
  %942 = cast(%var_1513, dtype="float32") /* ty=Tensor[(16, 2, 10), float32] */;
  %943 = sinh(%942) /* ty=Tensor[(16, 2, 10), float32] */;
  (%943,)
}

def @func_12303() -> (Tensor[(13, 8, 6), bool], Tensor[(165), float64], Tensor[(11, 15), float64], Tensor[(1, 11, 15), float32]) {
  %951 = fn () -> (Tensor[(13, 8, 6), bool], Tensor[(165), float64], Tensor[(11, 15), float64], Tensor[(1, 11, 15), float32]) {
    %944 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15), float64] */;
    %945 = reshape(%944, newshape=[165]) /* ty=Tensor[(165), float64] */;
    %946 = @func_6261(%945) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(165), float64]) */;
    %947 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
    %948 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
    %949 = %946.1;
    %950 = %947.0;
    (%948, %949, meta[relay.Constant][37] /* ty=Tensor[(11, 15), float64] */, %950)
  };
  %951() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165), float64], Tensor[(11, 15), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_4360() -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  @func_4358() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */
}

def @func_6820(%var_6818: Tensor[(1, 11, 15), float32]) -> (Tensor[(?, 11, 15), int64],) {
  @func_6817(%var_6818) /* ty=(Tensor[(?, 11, 15), int64],) */
}

def @func_6649() -> (Tensor[(13, 8, 6), float64],) {
  %952 = @func_6602() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %953 = %952.0;
  (%953,)
}

def @func_9295() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) {
  @func_9293() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */
}

def @func_13221() -> (Tensor[(165, 1), float32], Tensor[(165, 5), uint32], Tensor[(825), uint32]) {
  %961 = fn () -> (Tensor[(165, 1), float32], Tensor[(165, 5), uint32], Tensor[(825), uint32]) {
    %954 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
    %955 = %954.2;
    %956 = cast(%955, dtype="float32") /* ty=Tensor[(165, 1), float32] */;
    %957 = cast(meta[relay.Constant][38] /* ty=Tensor[(825), uint32] */, dtype="uint32") /* ty=Tensor[(825), uint32] */;
    %958 = reshape(%957, newshape=[165, 5]) /* ty=Tensor[(165, 5), uint32] */;
    %959 = atanh(%956) /* ty=Tensor[(165, 1), float32] */;
    %960 = @func_8826(%958) /* ty=Tensor[(165, 5), uint32] */;
    (%959, %960, meta[relay.Constant][38] /* ty=Tensor[(825), uint32] */)
  };
  %961() /* ty=(Tensor[(165, 1), float32], Tensor[(165, 5), uint32], Tensor[(825), uint32]) */
}

def @func_2109(%var_2091: Tensor[(12, 13, 15), int8]) -> (Tensor[(12, 13, 15), float32],) {
  %962 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 13, 15), int8] */, dtype="int8") /* ty=Tensor[(12, 13, 15), int8] */;
  %963 = shape_of(%var_2091, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%var_2091, dtype="int8") /* ty=Tensor[(12, 13, 15), int8] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %966 = bitwise_and(%964, %965) /* ty=Tensor[(12, 13, 15), int8] */;
  %967 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 13, 15), int8] */, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %968 = shape_of(%966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%966, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %971 = subtract(%969, %970) /* ty=Tensor[(12, 13, 15), float32] */;
  (%971,)
}

def @func_13439() -> (uint8, Tensor[(165), float64], Tensor[(1, 11, 15), float32], Tensor[(?, 11, 15), uint16]) {
  %972 = @func_4484() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165, ?), uint8], uint8, Tensor[(165), float32]) */;
  %973 = @func_12302() /* ty=(Tensor[(13, 8, 6), bool], Tensor[(165), float64], Tensor[(11, 15), float64], Tensor[(1, 11, 15), float32]) */;
  %974 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
  %975 = %974.0;
  %976 = @func_7493() /* ty=Tensor[(?, 11, 15), float64] */;
  %977 = cast(%976, dtype="uint16") /* ty=Tensor[(?, 11, 15), uint16] */;
  %978 = shape_of(%975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%975, dtype="uint16") /* ty=Tensor[(1, 11, 15), uint16] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %981 = %972.2;
  %982 = %973.1;
  %983 = @func_8852() /* ty=Tensor[(1, 11, 15), float32] */;
  %984 = logical_xor(%979, %980) /* ty=Tensor[(?, 11, 15), uint16] */;
  (%981, %982, %983, %984)
}

def @func_11337() -> Tensor[(1, 11, 15), float32] {
  %986 = fn () -> Tensor[(1, 11, 15), float32] {
    %985 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
    %985.1
  };
  %986() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_10409() -> Tensor[(13, 8, 6), float64] {
  @func_4644() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_5875() -> Tensor[(?, 11, 15), uint16] {
  %995 = fn () -> Tensor[(?, 11, 15), uint16] {
    %987 = @func_3259() /* ty=(Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
    %988 = %987.1;
    %989 = cast(%988, dtype="float32") /* ty=Tensor[(1, 11, 15), float32] */;
    %990 = log2(%989) /* ty=Tensor[(1, 11, 15), float32] */;
    %991 = cast(%990, dtype="uint16") /* ty=Tensor[(1, 11, 15), uint16] */;
    %992 = shape_of(%988, dtype="int32") /* ty=Tensor[(3), int32] */;
    %993 = cast(%988, dtype="uint16") /* ty=Tensor[(1, 11, 15), uint16] */;
    %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    right_shift(%993, %994) /* ty=Tensor[(?, 11, 15), uint16] */
  };
  %995() /* ty=Tensor[(?, 11, 15), uint16] */
}

def @func_13935() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) {
  @func_13933() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), bool]) */
}

def @func_8281() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  @func_8279() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_6030() -> Tensor[(13, 8, 6), float64] {
  %996 = @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %996.0
}

def @func_13153(%var_13151: Tensor[(320), float32]) -> (Tensor[(165, 10), bool], Tensor[(13, 8, 6), bool], Tensor[(320), float32], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32]) {
  @func_13150(%var_13151) /* ty=(Tensor[(165, 10), bool], Tensor[(13, 8, 6), bool], Tensor[(320), float32], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32]) */
}

def @func_3010() -> (Tensor[(13, 8, 6), float64],) {
  %997 = @func_2626() /* ty=Tensor[(13, 8, 6), float64] */;
  (%997,)
}

def @func_4449() -> Tensor[(1, 11, 15), float32] {
  @func_4447() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_8487(%var_8485: Tensor[(15, 11, 7), float64]) -> (Tensor[(15, 11, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(15, 11, 7), float32], Tensor[(?, 11, 15), uint16]) {
  @func_8484(%var_8485) /* ty=(Tensor[(15, 11, 7), float64], Tensor[(13, 8, 6), float64], Tensor[(15, 11, 7), float32], Tensor[(?, 11, 15), uint16]) */
}

def @func_3907() -> (Tensor[(1, 11, 15), float32],) {
  %1000 = fn () -> (Tensor[(1, 11, 15), float32],) {
    %998 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
    %999 = %998.2;
    (%999,)
  };
  %1000() /* ty=(Tensor[(1, 11, 15), float32],) */
}

def @func_6261(%var_6253: Tensor[(165), float64]) -> (Tensor[(13, 8, 6), float64], Tensor[(165), float64], Tensor[(165), float64]) {
  %1001 = cast(%var_6253, dtype="float64") /* ty=Tensor[(165), float64] */;
  %1002 = reshape(%1001, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %1003 = @func_4583(%1002) /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(165), float64], Tensor[(13, 8, 6), float64]) */;
  %1004 = @func_4878() /* ty=Tensor[(13, 8, 6), float64] */;
  %1005 = %1003.2;
  (%1004, %1005, %var_6253)
}

def @func_2308() -> (Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) {
  @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_3612() -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %1010 = fn () -> (Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
    %1006 = @func_3157() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %1007 = @func_3508() /* ty=Tensor[(1, 11, 15), float32] */;
    %1008 = %1006.0;
    %1009 = @func_2345() /* ty=Tensor[(1, 11, 15), float32] */;
    (%1007, %1008, %1009)
  };
  %1010() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_11387() -> Tensor[(13, 8, 6), float64] {
  %1011 = @func_7948() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
  %1011.0
}

def @func_8403() -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  %1016 = fn () -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
    %1012 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
    %1013 = @func_5032() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %1014 = %1012.2;
    %1015 = %1013.1;
    (%1014, %1015)
  };
  %1016() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */
}

def @func_6450() -> (Tensor[(1, 11, 15), float64],) {
  @func_6448() /* ty=(Tensor[(1, 11, 15), float64],) */
}

def @func_5567() -> Tensor[(13, 8, 6), float64] {
  @func_5565() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_8373(%var_8371: Tensor[(2, 1, 7), int32], %var_8372: Tensor[(2, 1, 7), int32]) -> (Tensor[(2, ?, 7), int32], Tensor[(2, 1, 7), float32]) {
  %1024 = fn (%var_8360: Tensor[(2, 1, 7), int32], %var_8361: Tensor[(2, 1, 7), int32]) -> (Tensor[(2, ?, 7), int32], Tensor[(2, 1, 7), float32]) {
    %1017 = cast(%var_8361, dtype="int32") /* ty=Tensor[(2, 1, 7), int32] */;
    %1018 = shape_of(%var_8360, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1019 = cast(%var_8360, dtype="int32") /* ty=Tensor[(2, 1, 7), int32] */;
    %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1021 = cast(%var_8360, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
    %1022 = logical_xor(%1019, %1020) /* ty=Tensor[(2, ?, 7), int32] */;
    %1023 = sin(%1021) /* ty=Tensor[(2, 1, 7), float32] */;
    (%1022, %1023)
  };
  %1024(%var_8371, %var_8372) /* ty=(Tensor[(2, ?, 7), int32], Tensor[(2, 1, 7), float32]) */
}

def @func_11286(%var_11272: Tensor[(2, 7, 15), float32], %var_11273: Tensor[(2, 7, 15), float32]) -> (Tensor[(2, 7, 15), float32], Tensor[(13, 8, 6), float32]) {
  %1025 = cast(%var_11273, dtype="float32") /* ty=Tensor[(2, 7, 15), float32] */;
  %1026 = shape_of(%var_11272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%var_11272, dtype="float32") /* ty=Tensor[(2, 7, 15), float32] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1029 = power(%1027, %1028) /* ty=Tensor[(2, 7, 15), float32] */;
  %1030 = @func_7020() /* ty=Tensor[(13, 8, 6), float32] */;
  (%1029, %1030)
}

def @func_12005(%var_12004: Tensor[(13, 8, 6), float64]) -> (Tensor[(13, 8, 6), bool], Tensor[(?, 11, 15), uint16]) {
  %1039 = fn (%var_11952: Tensor[(13, 8, 6), float64]) -> (Tensor[(13, 8, 6), bool], Tensor[(?, 11, 15), uint16]) {
    %1031 = @func_4829() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float32]) */;
    %1032 = %1031.0;
    %1033 = cast(%var_11952, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
    %1034 = shape_of(%1032, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1035 = cast(%1032, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
    %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1037 = less(%1035, %1036) /* ty=Tensor[(13, 8, 6), bool] */;
    %1038 = @func_5874() /* ty=Tensor[(?, 11, 15), uint16] */;
    (%1037, %1038)
  };
  %1039(%var_12004) /* ty=(Tensor[(13, 8, 6), bool], Tensor[(?, 11, 15), uint16]) */
}

def @func_13285() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
  %1043 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) {
    %1040 = @func_13040() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %1041 = @func_6555() /* ty=Tensor[(13, 8, 6), float64] */;
    %1042 = %1040.0;
    (%1041, %1042)
  };
  %1043() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64]) */
}

def @func_5276() -> Tensor[(13, 8, 6), float64] {
  @func_5274() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_11389() -> Tensor[(13, 8, 6), float64] {
  @func_11387() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_5974() -> (Tensor[(1, 11, 15), float32],) {
  %1044 = @func_3508() /* ty=Tensor[(1, 11, 15), float32] */;
  (%1044,)
}

def @func_12362() -> (Tensor[(16, 14, 14), float32],) {
  %1047 = fn () -> (Tensor[(16, 14, 14), float32],) {
    %1045 = @func_11474() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(16, 14, 14), float32], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */;
    %1046 = %1045.1;
    (%1046,)
  };
  %1047() /* ty=(Tensor[(16, 14, 14), float32],) */
}

def @func_7880() -> (Tensor[(13, 8, 6), float64],) {
  %1049 = fn () -> (Tensor[(13, 8, 6), float64],) {
    %1048 = @func_4878() /* ty=Tensor[(13, 8, 6), float64] */;
    (%1048,)
  };
  %1049() /* ty=(Tensor[(13, 8, 6), float64],) */
}

def @func_11776() -> (Tensor[(320), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) {
  %1054 = fn () -> (Tensor[(320), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) {
    %1050 = @func_7001() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32]) */;
    %1051 = %1050.3;
    %1052 = @func_5531() /* ty=Tensor[(1, 11, 15), float32] */;
    %1053 = @func_7300() /* ty=Tensor[(1, 11, 15), float64] */;
    (%1051, %1052, %1053)
  };
  %1054() /* ty=(Tensor[(320), float32], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float64]) */
}

def @func_5135(%var_5134: Tensor[(320), float32]) -> (Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(12, 13, 15), float32], Tensor[(13, 8, 6), float64]) {
  %1064 = fn (%var_5105: Tensor[(320), float32]) -> (Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(12, 13, 15), float32], Tensor[(13, 8, 6), float64]) {
    %1055 = cast(%var_5105, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1056 = reshape(%1055, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float32] */;
    %1057 = @func_1568(%1056) /* ty=(Tensor[(16, 2, 10), float32],) */;
    %1058 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
    %1059 = @func_3276() /* ty=Tensor[(13, 8, 6), bool] */;
    %1060 = @func_4644() /* ty=Tensor[(13, 8, 6), float64] */;
    %1061 = %1057.0;
    %1062 = %1058.0;
    %1063 = @func_4644() /* ty=Tensor[(13, 8, 6), float64] */;
    (%1059, %1060, %1061, %var_5105, %1062, %1063)
  };
  %1064(%var_5134) /* ty=(Tensor[(13, 8, 6), bool], Tensor[(13, 8, 6), float64], Tensor[(16, 2, 10), float32], Tensor[(320), float32], Tensor[(12, 13, 15), float32], Tensor[(13, 8, 6), float64]) */
}

def @func_10666() -> Tensor[(13, 8, 6), float64] {
  @func_10664() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_4048(%var_4046: Tensor[(330), float32]) -> (Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(13, 8, 6), bool]) {
  @func_4045(%var_4046) /* ty=(Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32], Tensor[(330), float32], Tensor[(13, 8, 6), bool]) */
}

def @func_3287(%var_3278: uint8, %var_3279: Tensor[(5, 12, 14), uint8]) -> Tensor[(5, 12, 14), bool] {
  %1065 = cast(%var_3278, dtype="bool") /* ty=bool */;
  %1066 = cast(%var_3279, dtype="bool") /* ty=Tensor[(5, 12, 14), bool] */;
  equal(%1065, %1066) /* ty=Tensor[(5, 12, 14), bool] */
}

def @func_2968(%var_2957: Tensor[(165, 2), float32]) -> (Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) {
  %1067 = @func_2562() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(165, 1), float32]) */;
  %1068 = %1067.1;
  %1069 = cast(%1068, dtype="uint16") /* ty=Tensor[(165, 1), uint16] */;
  %1070 = cast(%var_2957, dtype="uint16") /* ty=Tensor[(165, 2), uint16] */;
  %1071 = @func_2447() /* ty=(Tensor[(12, 13, 15), float32], Tensor[(165, ?), uint32], Tensor[(1, 11, 15), float32]) */;
  %1072 = bitwise_and(%1069, %1070) /* ty=Tensor[(165, 2), uint16] */;
  %1073 = %1071.1;
  (%1072, %1073)
}

def @func_3029() -> (Tensor[(165, 1), float64],) {
  %1076 = fn () -> (Tensor[(165, 1), float64],) {
    %1074 = @func_2936() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(165, 1), float64]) */;
    %1075 = %1074.2;
    (%1075,)
  };
  %1076() /* ty=(Tensor[(165, 1), float64],) */
}

def @func_9192(%var_9171: Tensor[(165, 6), float32]) -> (Tensor[(165, 6), bool],) {
  %1077 = @func_7320() /* ty=(Tensor[(165, 1), float32], Tensor[(1, 11, 15), float32]) */;
  %1078 = %1077.0;
  %1079 = cast(%1078, dtype="bool") /* ty=Tensor[(165, 1), bool] */;
  %1080 = cast(%var_9171, dtype="bool") /* ty=Tensor[(165, 6), bool] */;
  %1081 = not_equal(%1079, %1080) /* ty=Tensor[(165, 6), bool] */;
  (%1081,)
}

def @func_7558() -> Tensor[(1, 11, 15), float32] {
  %1083 = fn () -> Tensor[(1, 11, 15), float32] {
    %1082 = @func_5309() /* ty=(Tensor[(1, 11, 15), float32],) */;
    %1082.0
  };
  %1083() /* ty=Tensor[(1, 11, 15), float32] */
}

def @func_6192(%var_6164: Tensor[(13, 8, 6), float64]) -> Tensor[(13, 8, 6), bool] {
  %1084 = @func_5497() /* ty=(Tensor[(13, 8, 6), float64],) */;
  %1085 = %1084.0;
  %1086 = cast(%var_6164, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %1087 = shape_of(%1085, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1088 = cast(%1085, dtype="bool") /* ty=Tensor[(13, 8, 6), bool] */;
  %1089 = dyn.reshape(%1086, %1087, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1088, %1089) /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_6070() -> (Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float32]) {
  @func_6068() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float32]) */
}

def @func_2971(%var_2969: Tensor[(165, 2), float32]) -> (Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) {
  @func_2968(%var_2969) /* ty=(Tensor[(165, 2), uint16], Tensor[(165, ?), uint32]) */
}

def @func_4464() -> (Tensor[(13, 8, 6), bool],) {
  @func_4462() /* ty=(Tensor[(13, 8, 6), bool],) */
}

def @func_6327(%var_6326: Tensor[(13, 8, 6), bool]) -> (Tensor[(13, 8, 6), uint8], Tensor[(13, 8, 6), float64]) {
  %1099 = fn (%var_6295: Tensor[(13, 8, 6), bool]) -> (Tensor[(13, 8, 6), uint8], Tensor[(13, 8, 6), float64]) {
    %1090 = @func_5163() /* ty=(Tensor[(13, 8, 6), bool],) */;
    %1091 = %1090.0;
    %1092 = cast(%var_6295, dtype="uint8") /* ty=Tensor[(13, 8, 6), uint8] */;
    %1093 = shape_of(%1091, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1094 = cast(%1091, dtype="uint8") /* ty=Tensor[(13, 8, 6), uint8] */;
    %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1096 = @func_6123() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %1097 = bitwise_or(%1094, %1095) /* ty=Tensor[(13, 8, 6), uint8] */;
    %1098 = %1096.0;
    (%1097, %1098)
  };
  %1099(%var_6326) /* ty=(Tensor[(13, 8, 6), uint8], Tensor[(13, 8, 6), float64]) */
}

def @func_4880() -> Tensor[(13, 8, 6), float64] {
  @func_4878() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_5164() -> (Tensor[(13, 8, 6), bool],) {
  %1101 = fn () -> (Tensor[(13, 8, 6), bool],) {
    %1100 = @func_2840() /* ty=Tensor[(13, 8, 6), bool] */;
    (%1100,)
  };
  %1101() /* ty=(Tensor[(13, 8, 6), bool],) */
}

def @func_3674() -> (Tensor[(13, 8, 6), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), int8]) {
  %1102 = cast(meta[relay.Constant][40] /* ty=Tensor[(2340), int8] */, dtype="int8") /* ty=Tensor[(2340), int8] */;
  %1103 = reshape(%1102, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), int8] */;
  %1104 = @func_2109(%1103) /* ty=(Tensor[(12, 13, 15), float32],) */;
  %1105 = @func_2269() /* ty=Tensor[(13, 8, 6), float64] */;
  %1106 = %1104.0;
  (%1105, %1106, meta[relay.Constant][40] /* ty=Tensor[(2340), int8] */)
}

def @func_12544() -> (Tensor[(1, 11, 15), float32],) {
  %1107 = @func_8893() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */;
  %1108 = %1107.2;
  (%1108,)
}

def @func_8894() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
  %1115 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) {
    %1109 = @func_6649() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %1110 = @func_5235() /* ty=(Tensor[(1, 11, 15), float32],) */;
    %1111 = @func_2306() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(165, 1), float64], Tensor[(1, 11, 15), float32]) */;
    %1112 = %1109.0;
    %1113 = %1110.0;
    %1114 = %1111.2;
    (%1112, %1113, %1114)
  };
  %1115() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32], Tensor[(1, 11, 15), float32]) */
}

def @func_12764() -> Tensor[(165, 1), float64] {
  @func_8979() /* ty=Tensor[(165, 1), float64] */
}

def @func_10934() -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
  %1124 = fn () -> (Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) {
    %1116 = @func_4087() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %1117 = @func_9988() /* ty=(Tensor[(1, 11, 15), float32], Tensor[(13, 8, 6), float64]) */;
    %1118 = @func_5309() /* ty=(Tensor[(1, 11, 15), float32],) */;
    %1119 = @func_10409() /* ty=Tensor[(13, 8, 6), float64] */;
    %1120 = %1116.0;
    %1121 = %1117.1;
    %1122 = @func_10664() /* ty=Tensor[(13, 8, 6), float64] */;
    %1123 = %1118.0;
    (%1119, %1120, %1121, %1122, %1123)
  };
  %1124() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float64], Tensor[(13, 8, 6), float64], Tensor[(13, 8, 6), float64], Tensor[(1, 11, 15), float32]) */
}

def @func_13025() -> Tensor[(13, 8, 6), float64] {
  %1126 = fn () -> Tensor[(13, 8, 6), float64] {
    %1125 = @func_3157() /* ty=(Tensor[(13, 8, 6), float64],) */;
    %1125.0
  };
  %1126() /* ty=Tensor[(13, 8, 6), float64] */
}

def @func_6195(%var_6193: Tensor[(13, 8, 6), float64]) -> Tensor[(13, 8, 6), bool] {
  @func_6192(%var_6193) /* ty=Tensor[(13, 8, 6), bool] */
}

def @func_4088() -> (Tensor[(1, 11, 15), float64],) {
  %1129 = fn () -> (Tensor[(1, 11, 15), float64],) {
    %1127 = @func_3880() /* ty=(Tensor[(1, 11, 15), float64],) */;
    %1128 = %1127.0;
    (%1128,)
  };
  %1129() /* ty=(Tensor[(1, 11, 15), float64],) */
}

def @func_7849() -> (Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), float64], Tensor[(1, 11, 15), float64]) {
  @func_7847() /* ty=(Tensor[(13, 8, 6), float64], Tensor[(?, 11, 15), float64], Tensor[(1, 11, 15), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen966/build/output.py:4151: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen966/build/output.py", line 4156, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(64) tvmgen_default_fused_multiply_kernel0(int* __restrict__ T_multiply, int* __restrict__ placeholder, int* __restrict__ placeholder1) {
  T_multiply[(((int)threadIdx.x))] = (placeholder[(((((int)threadIdx.x) & 7) >> 1))] * placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


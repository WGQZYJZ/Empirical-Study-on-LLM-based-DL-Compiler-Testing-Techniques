==========mod==========
#[version = "0.0.5"]
def @func_6387() -> Tensor[(1890), float32] {
  %0 = @func_5026() /* ty=(Tensor[(1890), float32],) */;
  %0.0
}

def @func_12268(%var_12255: Tensor[(5, 2, 16), float32]) -> Tensor[(5, 2, 16), float32] {
  %1 = cast(%var_12255, dtype="float32") /* ty=Tensor[(5, 2, 16), float32] */;
  sqrt(%1) /* ty=Tensor[(5, 2, 16), float32] */
}

def @func_14202(%var_14190: Tensor[(15, 13, 13), float64]) -> (Tensor[(15, 13, 13), float64],) {
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 13, 13), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 13), float64] */;
  %3 = shape_of(%var_14190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_14190, dtype="float64") /* ty=Tensor[(15, 13, 13), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %6 = floor_divide(%4, %5) /* ty=Tensor[(15, 13, 13), float64] */;
  (%6,)
}

def @func_14537(%var_14525: Tensor[(400), uint8], %var_14526: Tensor[(324), float64], %var_14527: Tensor[(252), float64]) -> (Tensor[(1890), int64], Tensor[(126, 2), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64]) {
  %7 = @func_13579() /* ty=(Tensor[(324, 1), float64], Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(324, 3), bool], Tensor[(1890), int64]) */;
  %8 = cast(%var_14525, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %9 = cast(%var_14526, dtype="float64") /* ty=Tensor[(324), float64] */;
  %10 = cast(%var_14527, dtype="float64") /* ty=Tensor[(252), float64] */;
  %11 = reshape(%8, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %12 = reshape(%9, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %13 = reshape(%10, newshape=[126, 2]) /* ty=Tensor[(126, 2), float64] */;
  %14 = @func_5272(%11, %12, %13) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(126, 2), float64], Tensor[(1, 55), bool], Tensor[(324), float64]) */;
  %15 = %7.4;
  %16 = %14.5;
  (%15, %16, %var_14525, %var_14526, %var_14527)
}

def @func_9271(%var_9260: Tensor[(1890), float64]) -> (Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
  %17 = @func_7197() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %19 = cast(%var_9260, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %20 = reshape(%18, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %21 = reshape(%19, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %22 = @func_6058(%20, %21) /* ty=(Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %23 = %17.0;
  %24 = %22.2;
  (%23, %24, meta[relay.Constant][1] /* ty=Tensor[(324), float64] */, %var_9260)
}

def @func_7847(%var_7839: Tensor[(55), bool]) -> (Tensor[(165), uint32], Tensor[(140, 24), bool], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(18, 18), float64], Tensor[(252), float64]) {
  %25 = @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */;
  %26 = cast(%var_7839, dtype="bool") /* ty=Tensor[(55), bool] */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(18, 18), float64] */, dtype="float64") /* ty=Tensor[(18, 18), float64] */;
  %29 = cast(meta[relay.Constant][4] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %30 = reshape(%26, newshape=[11, 5]) /* ty=Tensor[(11, 5), bool] */;
  %31 = reshape(%27, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %32 = reshape(%28, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %33 = reshape(%29, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %34 = @func_5413(%30, %31, %32, %33) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(?, 11, 5), bool], Tensor[(11, 5), bool], Tensor[(16, 15, 14), uint32], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64], Tensor[(140, 24), bool], Tensor[(15, 9, 14), float64]) */;
  %35 = %25.2;
  %36 = %34.8;
  (%35, %36, %var_7839, meta[relay.Constant][2] /* ty=Tensor[(400), uint8] */, meta[relay.Constant][3] /* ty=Tensor[(18, 18), float64] */, meta[relay.Constant][4] /* ty=Tensor[(252), float64] */)
}

def @func_10616() -> Tensor[(528), int32] {
  @func_9295() /* ty=Tensor[(528), int32] */
}

def @func_9524(%var_9493: Tensor[(3360), uint64]) -> (Tensor[(1890), float64], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), float64]) {
  %37 = cast(%var_9493, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %38 = reshape(%37, newshape=[3360]) /* ty=Tensor[(3360), uint64] */;
  %39 = @func_6569(%38) /* ty=(Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) */;
  %40 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 168), uint16] */, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %41 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 168), uint16] */, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %42 = reshape(%40, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %43 = reshape(%41, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %44 = @func_6425(%42, %43) /* ty=(Tensor[(7, 6, 16), uint16],) */;
  %45 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 168), uint16] */, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %46 = @func_6780() /* ty=Tensor[(1890), float64] */;
  %47 = %39.2;
  %48 = %44.0;
  %49 = sqrt(%45) /* ty=Tensor[(4, 168), float64] */;
  (%46, %47, %var_9493, %48, %49)
}

def @func_9000(%var_8993: Tensor[(18, 18), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(18, 18), float64]) {
  %50 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %51 = cast(%var_8993, dtype="float64") /* ty=Tensor[(18, 18), float64] */;
  %52 = reshape(%51, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %53 = %50.0;
  %54 = @func_1091(%52) /* ty=Tensor[(3, 9, 12), float64] */;
  (%53, %54, %var_8993)
}

def @func_6281() -> Tensor[(1890), float64] {
  %55 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %55.1
}

def @func_6164() -> Tensor[(15, 9, 14), float64] {
  @func_6075() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_9463(%var_9422: Tensor[(3, 9, 12), float64]) -> (Tensor[(1890), float64], Tensor[(528), int32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(400), uint8], Tensor[(1890), float32], Tensor[(3, 9, 12), uint64], Tensor[(324), float64], Tensor[(3, 9, 12), float64]) {
  %56 = @func_6281() /* ty=Tensor[(1890), float64] */;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %58 = reshape(%57, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %59 = @func_9271(%58) /* ty=(Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %60 = cast(%56, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %61 = reshape(%60, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %62 = @func_9271(%61) /* ty=(Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %63 = @func_7940() /* ty=(Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %64 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %66 = reshape(%65, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %67 = @func_9271(%66) /* ty=(Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %68 = @func_7994() /* ty=(Tensor[(1890), float32],) */;
  %69 = @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */;
  %70 = %69.0;
  %71 = cast(%var_9422, dtype="uint64") /* ty=Tensor[(3, 9, 12), uint64] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="uint64") /* ty=Tensor[(3, 9, 12), uint64] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %75 = %67.1;
  %76 = cast(%75, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %77 = cast(%75, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %78 = cast(%70, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %79 = %62.3;
  %80 = cast(%79, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %81 = reshape(%76, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %82 = reshape(%77, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %83 = reshape(%78, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %84 = reshape(%80, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %85 = @func_1829(%81, %82, %83, %84) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %86 = cast(%70, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %87 = %59.0;
  %88 = %63.0;
  %89 = %68.0;
  %90 = maximum(%73, %74) /* ty=Tensor[(3, 9, 12), uint64] */;
  %91 = %85.2;
  %92 = erf(%86) /* ty=Tensor[(3, 9, 12), float64] */;
  (%56, %87, %79, %64, %88, %75, %89, %90, %91, %92)
}

def @func_9871() -> (Tensor[(15, 9, 14), float64],) {
  %93 = @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %94 = %93.0;
  (%94,)
}

def @func_2811(%var_2787: Tensor[(1, 11, 5), bool], %var_2788: Tensor[(1, 11, 5), bool]) -> (Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) {
  %95 = cast(%var_2788, dtype="bool") /* ty=Tensor[(1, 11, 5), bool] */;
  %96 = shape_of(%var_2787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%var_2787, dtype="bool") /* ty=Tensor[(1, 11, 5), bool] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %99 = cast(%var_2788, dtype="float64") /* ty=Tensor[(1, 11, 5), float64] */;
  %100 = logical_or(%97, %98) /* ty=Tensor[(?, 11, 5), bool] */;
  %101 = atanh(%99) /* ty=Tensor[(1, 11, 5), float64] */;
  (%100, %101)
}

def @func_4079(%var_4054: int32, %var_4055: Tensor[(12, 4, 11), int32]) -> Tensor[(12, 4, 11), int32] {
  %102 = cast(%var_4054, dtype="int32") /* ty=int32 */;
  %103 = cast(%var_4055, dtype="int32") /* ty=Tensor[(12, 4, 11), int32] */;
  minimum(%102, %103) /* ty=Tensor[(12, 4, 11), int32] */
}

def @func_13084() -> (Tensor[(15, 9, 14), float64],) {
  %104 = @func_10670() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %105 = %104.0;
  (%105,)
}

def @func_7089() -> (Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) {
  %106 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %107 = cast(%106, dtype="float64") /* ty=Tensor[(9, 4, 12), float64] */;
  %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(324, 1), float64] */, dtype="float64") /* ty=Tensor[(324, 1), float64] */;
  %109 = reshape(%108, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %110 = sin(%107) /* ty=Tensor[(9, 4, 12), float64] */;
  %111 = @func_1091(%109) /* ty=Tensor[(3, 9, 12), float64] */;
  (%110, %111, meta[relay.Constant][6] /* ty=Tensor[(324, 1), float64] */)
}

def @func_9763() -> Tensor[(15, 9, 14), float32] {
  @func_8209() /* ty=Tensor[(15, 9, 14), float32] */
}

def @func_6377(%var_6360: Tensor[(3, 11, 5), uint32]) -> (Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) {
  %112 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 11, 5), uint32] */, dtype="bool") /* ty=Tensor[(3, 11, 5), bool] */;
  %113 = shape_of(%var_6360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%var_6360, dtype="bool") /* ty=Tensor[(3, 11, 5), bool] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %116 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 11, 5), uint32] */, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
  %117 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %118 = not_equal(%114, %115) /* ty=Tensor[(3, 11, 5), bool] */;
  %119 = @func_5809() /* ty=Tensor[(528), int32] */;
  %120 = acosh(%116) /* ty=Tensor[(3, 11, 5), float32] */;
  %121 = %117.0;
  (%118, %119, %120, %121)
}

def @func_11026(%var_10911: Tensor[(12, 12, 14), float32]) -> (Tensor[(12, 12, 14), float32], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16], Tensor[(15, 9, 14), float64], Tensor[(12, 12, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(1890), float64], Tensor[(528), int32], Tensor[(7, 6, 16), uint16], Tensor[(3360), uint64]) {
  %122 = cast(%var_10911, dtype="float32") /* ty=Tensor[(12, 12, 14), float32] */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %124 = cast(meta[relay.Constant][8] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %125 = reshape(%123, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %126 = reshape(%124, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %127 = @func_6425(%125, %126) /* ty=(Tensor[(7, 6, 16), uint16],) */;
  %128 = @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %129 = cast(%var_10911, dtype="float32") /* ty=Tensor[(12, 12, 14), float32] */;
  %130 = sqrt(%129) /* ty=Tensor[(12, 12, 14), float32] */;
  %131 = cast(%130, dtype="float64") /* ty=Tensor[(12, 12, 14), float64] */;
  %132 = shape_of(%var_10911, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%var_10911, dtype="float64") /* ty=Tensor[(12, 12, 14), float64] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %135 = floor_divide(%133, %134) /* ty=Tensor[(12, 12, 14), float64] */;
  %136 = cast(%135, dtype="float32") /* ty=Tensor[(12, 12, 14), float32] */;
  %137 = @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */;
  %138 = cast(meta[relay.Constant][9] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %139 = reshape(%138, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %140 = @func_8187(%139) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */;
  %141 = cast(meta[relay.Constant][10] /* ty=Tensor[(3360), uint64] */, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %142 = reshape(%141, newshape=[3360]) /* ty=Tensor[(3360), uint64] */;
  %143 = @func_9524(%142) /* ty=(Tensor[(1890), float64], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), float64]) */;
  %144 = sin(%122) /* ty=Tensor[(12, 12, 14), float32] */;
  %145 = %127.0;
  %146 = %128.0;
  %147 = sigmoid(%136) /* ty=Tensor[(12, 12, 14), float32] */;
  %148 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
  %149 = @func_6075() /* ty=Tensor[(15, 9, 14), float64] */;
  %150 = %137.1;
  %151 = %140.0;
  %152 = %143.3;
  (%144, %145, meta[relay.Constant][8] /* ty=Tensor[(672), uint16] */, %146, %147, %148, %149, %150, %151, meta[relay.Constant][9] /* ty=Tensor[(528), int32] */, %152, meta[relay.Constant][10] /* ty=Tensor[(3360), uint64] */)
}

def @func_13605(%var_13587: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), float64], Tensor[(15, 9, 14), float32]) {
  %153 = cast(%var_13587, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %154 = exp(%153) /* ty=Tensor[(11, 11, 15), float64] */;
  %155 = @func_9763() /* ty=Tensor[(15, 9, 14), float32] */;
  (%154, %155)
}

def @func_3351(%var_3266: Tensor[(4, 16, 1), uint64], %var_3267: Tensor[(4, 16, 2), uint64], %var_3281: Tensor[(55), bool], %var_3328: Tensor[(400), uint8], %var_3329: Tensor[(1, 324), float64]) -> (Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) {
  %156 = cast(%var_3266, dtype="uint64") /* ty=Tensor[(4, 16, 1), uint64] */;
  %157 = cast(%var_3267, dtype="uint64") /* ty=Tensor[(4, 16, 2), uint64] */;
  %158 = cast(%var_3281, dtype="bool") /* ty=Tensor[(55), bool] */;
  %159 = cast(%var_3281, dtype="bool") /* ty=Tensor[(55), bool] */;
  %160 = reshape(%158, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %161 = reshape(%159, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %162 = @func_2811(%160, %161) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
  %163 = cast(%var_3266, dtype="float32") /* ty=Tensor[(4, 16, 1), float32] */;
  %164 = cast(%var_3328, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %165 = cast(%var_3329, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %167 = reshape(%164, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %168 = reshape(%165, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %169 = reshape(%166, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %170 = @func_2236(%167, %168, %169) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
  %171 = logical_xor(%156, %157) /* ty=Tensor[(4, 16, 2), uint64] */;
  %172 = %162.0;
  %173 = tan(%163) /* ty=Tensor[(4, 16, 1), float32] */;
  %174 = %170.2;
  (%171, %172, %var_3281, %173, %174, %var_3328, %var_3329, meta[relay.Constant][11] /* ty=Tensor[(1890), float64] */)
}

def @func_11382() -> Tensor[(1890), float64] {
  @func_10653() /* ty=Tensor[(1890), float64] */
}

def @func_6780() -> Tensor[(1890), float64] {
  %175 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %175.0
}

def @func_11628(%var_11581: Tensor[(324), float64]) -> (Tensor[(3, 11, 5), uint16], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(324, 1), float64], Tensor[(9, 4, 12), float32]) {
  %176 = @func_7504() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(165), uint32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), uint16], Tensor[(9, 4, 12), float32], Tensor[(3, 11, 5), int32]) */;
  %177 = cast(meta[relay.Constant][12] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %178 = cast(%var_11581, dtype="float64") /* ty=Tensor[(324), float64] */;
  %179 = reshape(%177, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %180 = reshape(%178, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %181 = @func_8619(%179, %180) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) */;
  %182 = @func_10720() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(?, 12, 10), float64], Tensor[(6, 13, 15), bool], Tensor[(1890), float64], Tensor[(15, 9, 14), float32], Tensor[(528), int32]) */;
  %183 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %184 = cast(%183, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %185 = %176.3;
  %186 = %181.4;
  %187 = %182.4;
  %188 = @func_10466() /* ty=Tensor[(324, 1), float64] */;
  %189 = sqrt(%184) /* ty=Tensor[(9, 4, 12), float32] */;
  (%185, %186, meta[relay.Constant][12] /* ty=Tensor[(400), uint8] */, %var_11581, %187, %188, %189)
}

def @func_4254(%var_4246: Tensor[(16, 15, 14), uint64], %var_4247: Tensor[(16, 15, 14), uint64]) -> (Tensor[(16, 15, 14), uint64],) {
  %190 = cast(%var_4247, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %191 = shape_of(%var_4246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%var_4246, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %194 = right_shift(%192, %193) /* ty=Tensor[(16, 15, 14), uint64] */;
  (%194,)
}

def @func_7304(%var_7278: Tensor[(7, 6, 16), uint16], %var_7287: Tensor[(55), bool]) -> (Tensor[(15, 9, 14), float64], Tensor[(672), uint16], Tensor[(7, 6, 16), int32], Tensor[(?, 11, 5), uint32], Tensor[(1890), float32]) {
  %195 = cast(meta[relay.Constant][13] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %196 = cast(meta[relay.Constant][13] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %197 = reshape(%195, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %198 = reshape(%196, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %199 = @func_6425(%197, %198) /* ty=(Tensor[(7, 6, 16), uint16],) */;
  %200 = %199.0;
  %201 = cast(%var_7278, dtype="int32") /* ty=Tensor[(7, 6, 16), int32] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="int32") /* ty=Tensor[(7, 6, 16), int32] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %205 = cast(%var_7287, dtype="bool") /* ty=Tensor[(55), bool] */;
  %206 = cast(%var_7287, dtype="bool") /* ty=Tensor[(55), bool] */;
  %207 = reshape(%205, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %208 = reshape(%206, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %209 = @func_2811(%207, %208) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
  %210 = %209.1;
  %211 = cast(%var_7287, dtype="uint32") /* ty=Tensor[(55), uint32] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="uint32") /* ty=Tensor[(1, 11, 5), uint32] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %215 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
  %216 = bitwise_or(%203, %204) /* ty=Tensor[(7, 6, 16), int32] */;
  %217 = multiply(%213, %214) /* ty=Tensor[(?, 11, 5), uint32] */;
  %218 = @func_6255() /* ty=Tensor[(1890), float32] */;
  (%215, meta[relay.Constant][13] /* ty=Tensor[(672), uint16] */, %216, %217, %218)
}

def @func_8703(%var_8701: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(324), float64]) {
  %219 = @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %220 = cast(%var_8701, dtype="float64") /* ty=Tensor[(324), float64] */;
  %221 = reshape(%220, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %222 = @func_7343(%221) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(15, 9, 14), float64]) */;
  %223 = %219.0;
  %224 = %222.0;
  (%223, %224, %var_8701)
}

def @func_6713(%var_6705: Tensor[(11, 14, 11), uint8], %var_6706: Tensor[(11, 14, 11), uint8]) -> (Tensor[(11, 14, 11), uint8],) {
  %225 = cast(%var_6706, dtype="uint8") /* ty=Tensor[(11, 14, 11), uint8] */;
  %226 = shape_of(%var_6705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_6705, dtype="uint8") /* ty=Tensor[(11, 14, 11), uint8] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %229 = minimum(%227, %228) /* ty=Tensor[(11, 14, 11), uint8] */;
  (%229,)
}

def @func_12736(%var_12710: Tensor[(27), float32]) -> (Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(3, 3, 3), float32], Tensor[(27), float32], Tensor[(528), int32]) {
  %230 = @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %231 = @func_9620() /* ty=(Tensor[(528), int32],) */;
  %232 = cast(%var_12710, dtype="float32") /* ty=Tensor[(27), float32] */;
  %233 = cast(%var_12710, dtype="float32") /* ty=Tensor[(27), float32] */;
  %234 = reshape(%232, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %235 = reshape(%233, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %236 = @func_5505(%234, %235) /* ty=(Tensor[(3, 3, 3), float32],) */;
  %237 = %230.0;
  %238 = %231.0;
  %239 = %236.0;
  %240 = @func_7957() /* ty=Tensor[(528), int32] */;
  (%237, %238, %239, %var_12710, %240)
}

def @func_6058(%var_6047: Tensor[(324), float64], %var_6048: Tensor[(1890), float64]) -> (Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
  %241 = @func_5006() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */;
  %242 = cast(meta[relay.Constant][14] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %243 = cast(meta[relay.Constant][14] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %244 = cast(%var_6047, dtype="float64") /* ty=Tensor[(324), float64] */;
  %245 = cast(%var_6048, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %246 = reshape(%242, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %247 = reshape(%243, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %248 = reshape(%244, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %249 = reshape(%245, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %250 = @func_1829(%246, %247, %248, %249) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %251 = %241.4;
  %252 = %250.2;
  (%251, %252, meta[relay.Constant][14] /* ty=Tensor[(400), uint8] */, %var_6047, %var_6048)
}

def @func_10466() -> Tensor[(324, 1), float64] {
  %253 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %253.2
}

def @func_11145(%var_11137: Tensor[(120), float64], %var_11138: Tensor[(324), float64], %var_11141: Tensor[(130, 9), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(120), float64], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), int32]) {
  %254 = cast(%var_11137, dtype="float64") /* ty=Tensor[(120), float64] */;
  %255 = cast(%var_11138, dtype="float64") /* ty=Tensor[(324), float64] */;
  %256 = reshape(%254, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %257 = reshape(%255, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %258 = @func_8797(%256, %257) /* ty=(Tensor[(1170), int32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(9, 4, 12), float32], Tensor[(3, 9, 12), int64], Tensor[(324), float64], Tensor[(1890), float32]) */;
  %259 = cast(%var_11141, dtype="int32") /* ty=Tensor[(130, 9), int32] */;
  %260 = reshape(%259, newshape=[390, 3]) /* ty=Tensor[(390, 3), int32] */;
  %261 = @func_6206(%260) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) */;
  %262 = @func_10375() /* ty=Tensor[(15, 9, 14), float64] */;
  %263 = %258.4;
  %264 = %261.3;
  (%262, %263, %var_11137, %var_11138, %264, %var_11141)
}

def @func_11485(%var_11462: Tensor[(9, 36), float64]) -> (Tensor[(9, 4, 12), float64], Tensor[(400), uint8], Tensor[(9, 36), float64], Tensor[(15, 9, 14), float64]) {
  %265 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %266 = cast(%var_11462, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %267 = reshape(%266, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %268 = @func_10281(%267) /* ty=(Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), int64]) */;
  %269 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %270 = %265.0;
  %271 = %268.0;
  %272 = %269.0;
  (%270, %271, %var_11462, %272)
}

def @func_12343() -> (Tensor[(1890), float64], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) {
  %273 = @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */;
  %274 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %275 = reshape(%274, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %276 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %277 = %273.1;
  %278 = @func_1091(%275) /* ty=Tensor[(3, 9, 12), float64] */;
  %279 = %276.0;
  (%277, %278, meta[relay.Constant][15] /* ty=Tensor[(324), float64] */, %279)
}

def @func_4420(%var_4416: Tensor[(1, 12, 10), float64]) -> Tensor[(1, 12, 10), float64] {
  %280 = cast(%var_4416, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  tan(%280) /* ty=Tensor[(1, 12, 10), float64] */
}

def @func_8619(%var_8569: Tensor[(400), uint8], %var_8570: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) {
  %281 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %282 = cast(%var_8569, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %283 = cast(%var_8570, dtype="float64") /* ty=Tensor[(324), float64] */;
  %284 = %281.0;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %286 = reshape(%282, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %287 = reshape(%283, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %288 = reshape(%285, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %289 = @func_2236(%286, %287, %288) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
  %290 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %291 = %289.1;
  %292 = %290.0;
  (%284, %291, %var_8569, %var_8570, %292)
}

def @func_14345(%var_14261: Tensor[(840, 4), uint64]) -> (Tensor[(9, 4, 12), float32], Tensor[(8, 10, 3), int64], Tensor[(1890), float32], Tensor[(324), float64], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), int64], Tensor[(840, 4), bool]) {
  %293 = cast(%var_14261, dtype="uint64") /* ty=Tensor[(840, 4), uint64] */;
  %294 = reshape(%293, newshape=[3360]) /* ty=Tensor[(3360), uint64] */;
  %295 = @func_6569(%294) /* ty=(Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) */;
  %296 = cast(meta[relay.Constant][16] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %297 = %295.0;
  %298 = cast(%297, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %299 = reshape(%296, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %300 = reshape(%298, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %301 = @func_6058(%299, %300) /* ty=(Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %302 = @func_9763() /* ty=Tensor[(15, 9, 14), float32] */;
  %303 = cast(%302, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %304 = reshape(%303, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %305 = @func_10562(%304) /* ty=(Tensor[(1890), int64],) */;
  %306 = @func_5883() /* ty=int32 */;
  %307 = cast(%var_14261, dtype="bool") /* ty=Tensor[(840, 4), bool] */;
  %308 = cast(%306, dtype="bool") /* ty=bool */;
  %309 = @func_13037() /* ty=Tensor[(9, 4, 12), float32] */;
  %310 = @func_12318() /* ty=Tensor[(8, 10, 3), int64] */;
  %311 = %301.3;
  %312 = %305.0;
  %313 = less_equal(%307, %308) /* ty=Tensor[(840, 4), bool] */;
  (%309, %310, %297, %311, meta[relay.Constant][16] /* ty=Tensor[(324), float64] */, %302, %312, %313)
}

def @func_7957() -> Tensor[(528), int32] {
  @func_7372() /* ty=Tensor[(528), int32] */
}

def @func_14596() -> (Tensor[(1170), int32],) {
  %314 = @func_10643() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */;
  %315 = %314.2;
  (%315,)
}

def @func_14791() -> (Tensor[(15, 9, 14), float32], Tensor[(5, 4, 13), float32], Tensor[(260), float32]) {
  %316 = @func_14160() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(1890), float64]) */;
  %317 = cast(meta[relay.Constant][17] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %318 = reshape(%317, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), float32] */;
  %319 = @func_8448(%318) /* ty=(Tensor[(5, 4, 13), float32],) */;
  %320 = %316.0;
  %321 = %319.0;
  (%320, %321, meta[relay.Constant][17] /* ty=Tensor[(260), float32] */)
}

def @func_7061() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %322 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %323 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
  %324 = %322.0;
  %325 = %323.0;
  (%324, %325)
}

def @func_10824() -> (Tensor[(15, 9, 14), float32], Tensor[(1170), int32]) {
  %326 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
  %327 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %328 = %326.0;
  %329 = %327.2;
  (%328, %329)
}

def @func_11434() -> (Tensor[(528), int32],) {
  %330 = @func_5809() /* ty=Tensor[(528), int32] */;
  (%330,)
}

def @func_6957() -> (Tensor[(15, 9, 14), float64],) {
  %331 = @func_6075() /* ty=Tensor[(15, 9, 14), float64] */;
  (%331,)
}

def @func_13334(%var_13295: Tensor[(672), uint16]) -> (Tensor[(9, 4, 12), float32], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16], Tensor[(?, 11, 6), bool]) {
  %332 = @func_7150() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %333 = cast(%var_13295, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %334 = cast(%var_13295, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %335 = reshape(%333, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %336 = reshape(%334, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %337 = @func_6425(%335, %336) /* ty=(Tensor[(7, 6, 16), uint16],) */;
  %338 = cast(meta[relay.Constant][18] /* ty=Tensor[(66, 1), float32] */, dtype="float32") /* ty=Tensor[(66, 1), float32] */;
  %339 = reshape(%338, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
  %340 = @func_9633(%339) /* ty=(Tensor[(1, 11, 6), float32],) */;
  %341 = %340.0;
  %342 = cast(meta[relay.Constant][18] /* ty=Tensor[(66, 1), float32] */, dtype="bool") /* ty=Tensor[(66, 1), bool] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%341, dtype="bool") /* ty=Tensor[(1, 11, 6), bool] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %346 = %332.0;
  %347 = %337.0;
  %348 = equal(%344, %345) /* ty=Tensor[(?, 11, 6), bool] */;
  (%346, %347, %var_13295, %348)
}

def @func_5945() -> Tensor[(9, 4, 12), float32] {
  %349 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %349.0
}

def @func_6096() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %350 = @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %351 = %350.0;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %353 = reshape(%352, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %354 = @func_860(%353) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %355 = %354.0;
  %356 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  (%351, %355, %356)
}

def @func_12563(%var_12516: Tensor[(64), uint64], %var_12517: Tensor[(2, 64), uint64], %var_12518: Tensor[(55), bool]) -> (Tensor[(15, 9, 14), uint64], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(64), uint64], Tensor[(2, 64), uint64], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(324, 1), float64], Tensor[(400), float64], Tensor[(15, 9, 14), float64]) {
  %357 = @func_12243() /* ty=(int32, Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), uint64]) */;
  %358 = cast(%var_12516, dtype="uint64") /* ty=Tensor[(64), uint64] */;
  %359 = cast(%var_12517, dtype="uint64") /* ty=Tensor[(2, 64), uint64] */;
  %360 = cast(%var_12518, dtype="bool") /* ty=Tensor[(55), bool] */;
  %361 = cast(meta[relay.Constant][19] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %362 = cast(meta[relay.Constant][20] /* ty=Tensor[(324, 1), float64] */, dtype="float64") /* ty=Tensor[(324, 1), float64] */;
  %363 = reshape(%358, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), uint64] */;
  %364 = reshape(%359, newshape=[4, 16, 2]) /* ty=Tensor[(4, 16, 2), uint64] */;
  %365 = reshape(%360, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %366 = reshape(%361, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %367 = reshape(%362, newshape=[1, 324]) /* ty=Tensor[(1, 324), float64] */;
  %368 = @func_3351(%363, %364, %365, %366, %367) /* ty=(Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) */;
  %369 = cast(meta[relay.Constant][20] /* ty=Tensor[(324, 1), float64] */, dtype="float64") /* ty=Tensor[(324, 1), float64] */;
  %370 = @func_10375() /* ty=Tensor[(15, 9, 14), float64] */;
  %371 = cast(%370, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %372 = reshape(%369, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %373 = reshape(%371, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %374 = @func_6058(%372, %373) /* ty=(Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %375 = %374.2;
  %376 = cast(%375, dtype="float64") /* ty=Tensor[(400), float64] */;
  %377 = @func_7061() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %378 = %357.3;
  %379 = %368.4;
  %380 = log2(%376) /* ty=Tensor[(400), float64] */;
  %381 = %377.1;
  (%378, %370, %379, %var_12516, %var_12517, %var_12518, meta[relay.Constant][19] /* ty=Tensor[(400), uint8] */, meta[relay.Constant][20] /* ty=Tensor[(324, 1), float64] */, %380, %381)
}

def @func_8736(%var_8727: Tensor[(2, 264), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(528), int64], Tensor[(2, 264), int32]) {
  %382 = @func_7061() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %383 = cast(%var_8727, dtype="int32") /* ty=Tensor[(2, 264), int32] */;
  %384 = reshape(%383, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %385 = @func_8187(%384) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */;
  %386 = %382.1;
  %387 = %385.3;
  (%386, %387, %var_8727)
}

def @func_13921() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) {
  %388 = @func_13735() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(9, 4, 12), float32]) */;
  %389 = @func_11102() /* ty=Tensor[(15, 9, 14), float64] */;
  %390 = %388.2;
  (%389, %390)
}

def @func_860(%var_836: Tensor[(15, 9, 14), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
  %391 = cast(%var_836, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %392 = cast(meta[relay.Constant][21] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %393 = cast(meta[relay.Constant][21] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %394 = reshape(%392, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %395 = reshape(%393, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %396 = erf(%391) /* ty=Tensor[(15, 9, 14), float64] */;
  %397 = @func_458(%394, %395) /* ty=Tensor[(6, 13, 15), bool] */;
  (%396, %397, meta[relay.Constant][21] /* ty=Tensor[(1170), int32] */)
}

def @func_4761() -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
  %398 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %399 = cast(meta[relay.Constant][22] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %400 = cast(meta[relay.Constant][22] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %401 = reshape(%399, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %402 = reshape(%400, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %403 = %398.0;
  %404 = @func_458(%401, %402) /* ty=Tensor[(6, 13, 15), bool] */;
  (%403, %404, meta[relay.Constant][22] /* ty=Tensor[(1170), int32] */)
}

def @func_15477() -> (Tensor[(9, 4, 12), float32], Tensor[(1890), float64]) {
  %405 = @func_14606() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %406 = %405.0;
  %407 = @func_10653() /* ty=Tensor[(1890), float64] */;
  (%406, %407)
}

def @func_8306() -> (Tensor[(1170), int32], Tensor[(1890), float64]) {
  %408 = @func_7940() /* ty=(Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %409 = @func_7409() /* ty=(Tensor[(1890), float32],) */;
  %410 = %409.0;
  %411 = cast(%410, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %412 = %408.1;
  %413 = log(%411) /* ty=Tensor[(1890), float64] */;
  (%412, %413)
}

def @func_1829(%var_1775: Tensor[(5, 8, 10), uint8], %var_1776: Tensor[(5, 8, 10), uint8], %var_1784: Tensor[(324), float64], %var_1804: Tensor[(1890), float64]) -> (Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) {
  %414 = cast(%var_1776, dtype="uint8") /* ty=Tensor[(5, 8, 10), uint8] */;
  %415 = shape_of(%var_1775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%var_1775, dtype="uint8") /* ty=Tensor[(5, 8, 10), uint8] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %418 = cast(%var_1784, dtype="float64") /* ty=Tensor[(324), float64] */;
  %419 = reshape(%418, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %420 = cast(%var_1784, dtype="float64") /* ty=Tensor[(324), float64] */;
  %421 = reshape(%420, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %422 = cast(%var_1804, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %423 = reshape(%422, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %424 = @func_860(%423) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %425 = cast(%var_1804, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %426 = sigmoid(%425) /* ty=Tensor[(1890), float64] */;
  %427 = cast(%426, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %428 = bitwise_xor(%416, %417) /* ty=Tensor[(5, 8, 10), uint8] */;
  %429 = @func_1091(%419) /* ty=Tensor[(3, 9, 12), float64] */;
  %430 = @func_1091(%421) /* ty=Tensor[(3, 9, 12), float64] */;
  %431 = %424.2;
  %432 = sin(%427) /* ty=Tensor[(1890), float32] */;
  (%428, %429, %var_1784, %430, %431, %432)
}

def @func_10653() -> Tensor[(1890), float64] {
  %433 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %433.0
}

def @func_8978() -> Tensor[(1890), float64] {
  %434 = @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */;
  %434.1
}

def @func_8797(%var_8754: Tensor[(120), float64], %var_8787: Tensor[(324), float64]) -> (Tensor[(1170), int32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(9, 4, 12), float32], Tensor[(3, 9, 12), int64], Tensor[(324), float64], Tensor[(1890), float32]) {
  %435 = @func_8306() /* ty=(Tensor[(1170), int32], Tensor[(1890), float64]) */;
  %436 = cast(%var_8754, dtype="float64") /* ty=Tensor[(120), float64] */;
  %437 = reshape(%436, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
  %438 = cast(%var_8787, dtype="float64") /* ty=Tensor[(324), float64] */;
  %439 = reshape(%438, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %440 = @func_7343(%439) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(15, 9, 14), float64]) */;
  %441 = @func_7409() /* ty=(Tensor[(1890), float32],) */;
  %442 = %435.0;
  %443 = @func_4420(%437) /* ty=Tensor[(1, 12, 10), float64] */;
  %444 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %445 = %440.1;
  %446 = %441.0;
  (%442, %443, %var_8754, %444, %445, %var_8787, %446)
}

def @func_12418() -> Tensor[(528), int32] {
  %447 = @func_9609() /* ty=(Tensor[(528), int32], Tensor[(2, 264), int32]) */;
  %447.0
}

def @func_6075() -> Tensor[(15, 9, 14), float64] {
  %448 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %448.0
}

def @func_9609() -> (Tensor[(528), int32], Tensor[(2, 264), int32]) {
  %449 = @func_7372() /* ty=Tensor[(528), int32] */;
  %450 = cast(%449, dtype="int32") /* ty=Tensor[(528), int32] */;
  %451 = reshape(%450, newshape=[2, 264]) /* ty=Tensor[(2, 264), int32] */;
  %452 = @func_8736(%451) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int64], Tensor[(2, 264), int32]) */;
  %453 = %452.2;
  (%449, %453)
}

def @func_13810() -> Tensor[(1890), float64] {
  %454 = @func_10515() /* ty=(Tensor[(1890), float64],) */;
  %454.0
}

def @func_4885() -> Tensor[(1890), float32] {
  %455 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %456 = %455.0;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(1890), float32] */;
  atanh(%457) /* ty=Tensor[(1890), float32] */
}

def @func_15417(%var_15412: Tensor[(324, 7), float64]) -> (Tensor[(324, 7), bool],) {
  %458 = @func_13579() /* ty=(Tensor[(324, 1), float64], Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(324, 3), bool], Tensor[(1890), int64]) */;
  %459 = %458.0;
  %460 = cast(%459, dtype="bool") /* ty=Tensor[(324, 1), bool] */;
  %461 = cast(%var_15412, dtype="bool") /* ty=Tensor[(324, 7), bool] */;
  %462 = equal(%460, %461) /* ty=Tensor[(324, 7), bool] */;
  (%462,)
}

def @func_14565() -> Tensor[(15, 9, 14), float64] {
  @func_6731() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_7994() -> (Tensor[(1890), float32],) {
  %463 = @func_6255() /* ty=Tensor[(1890), float32] */;
  (%463,)
}

def @func_12243() -> (int32, Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), uint64]) {
  %464 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %465 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
  %466 = %465.0;
  %467 = @func_9828() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) */;
  %468 = %467.0;
  %469 = cast(%468, dtype="uint64") /* ty=Tensor[(15, 9, 14), uint64] */;
  %470 = shape_of(%466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%466, dtype="uint64") /* ty=Tensor[(15, 9, 14), uint64] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %473 = @func_5883() /* ty=int32 */;
  %474 = @func_10375() /* ty=Tensor[(15, 9, 14), float64] */;
  %475 = %464.0;
  %476 = bitwise_xor(%471, %472) /* ty=Tensor[(15, 9, 14), uint64] */;
  (%473, %474, %475, %476)
}

def @func_9633(%var_9628: Tensor[(1, 11, 6), float32]) -> (Tensor[(1, 11, 6), float32],) {
  %477 = cast(%var_9628, dtype="float32") /* ty=Tensor[(1, 11, 6), float32] */;
  %478 = exp(%477) /* ty=Tensor[(1, 11, 6), float32] */;
  (%478,)
}

def @func_11868(%var_11850: Tensor[(1890), float32]) -> (Tensor[(9, 4, 12), float32], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(1890), float64]) {
  %479 = cast(%var_11850, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %480 = reshape(%479, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %481 = @func_8039(%480) /* ty=(Tensor[(1890), float64],) */;
  %482 = @func_10515() /* ty=(Tensor[(1890), float64],) */;
  %483 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %484 = %481.0;
  %485 = %482.0;
  (%483, %484, %var_11850, %485)
}

def @func_13199() -> (Tensor[(528), int32], Tensor[(6, 13, 15), bool], Tensor[(324), float64]) {
  %486 = cast(meta[relay.Constant][23] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %487 = reshape(%486, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %488 = @func_9463(%487) /* ty=(Tensor[(1890), float64], Tensor[(528), int32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(400), uint8], Tensor[(1890), float32], Tensor[(3, 9, 12), uint64], Tensor[(324), float64], Tensor[(3, 9, 12), float64]) */;
  %489 = @func_12418() /* ty=Tensor[(528), int32] */;
  %490 = %488.4;
  (%489, %490, meta[relay.Constant][23] /* ty=Tensor[(324), float64] */)
}

def @func_5026() -> (Tensor[(1890), float32],) {
  %491 = @func_4885() /* ty=Tensor[(1890), float32] */;
  (%491,)
}

def @func_7150() -> (Tensor[(9, 4, 12), float32],) {
  %492 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  (%492,)
}

def @func_11391() -> (Tensor[(15, 9, 14), float32],) {
  %493 = @func_7831() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %494 = %493.1;
  (%494,)
}

def @func_9828() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) {
  %495 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
  %496 = %495.1;
  %497 = @func_6387() /* ty=Tensor[(1890), float32] */;
  (%496, %497)
}

def @func_13885() -> (Tensor[(15, 9, 14), float64], Tensor[(324, 1), float64], Tensor[(324), float64]) {
  %498 = @func_13770() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), uint16]) */;
  %499 = cast(meta[relay.Constant][24] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %500 = reshape(%499, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %501 = @func_11628(%500) /* ty=(Tensor[(3, 11, 5), uint16], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(324, 1), float64], Tensor[(9, 4, 12), float32]) */;
  %502 = %498.0;
  %503 = %501.5;
  (%502, %503, meta[relay.Constant][24] /* ty=Tensor[(324), float64] */)
}

def @func_5437() -> (Tensor[(1890), float64],) {
  %504 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %505 = %504.1;
  (%505,)
}

def @func_10720() -> (Tensor[(15, 9, 14), float64], Tensor[(?, 12, 10), float64], Tensor[(6, 13, 15), bool], Tensor[(1890), float64], Tensor[(15, 9, 14), float32], Tensor[(528), int32]) {
  %506 = @func_10643() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */;
  %507 = cast(meta[relay.Constant][25] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %508 = reshape(%507, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
  %509 = @func_4420(%508) /* ty=Tensor[(1, 12, 10), float64] */;
  %510 = cast(meta[relay.Constant][25] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%509, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %514 = %506.1;
  %515 = cast(%514, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %516 = reshape(%515, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %517 = @func_860(%516) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %518 = cast(%514, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %519 = reshape(%518, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %520 = @func_8039(%519) /* ty=(Tensor[(1890), float64],) */;
  %521 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
  %522 = subtract(%512, %513) /* ty=Tensor[(?, 12, 10), float64] */;
  %523 = %517.1;
  %524 = %520.0;
  %525 = %521.0;
  %526 = @func_7372() /* ty=Tensor[(528), int32] */;
  (%514, %522, %523, %524, %525, %526)
}

def @func_13735() -> (Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(9, 4, 12), float32]) {
  %527 = @func_10824() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(1170), int32]) */;
  %528 = @func_12140() /* ty=(Tensor[(528), int32], Tensor[(1170), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64]) */;
  %529 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %530 = %527.0;
  %531 = %528.5;
  %532 = @func_4885() /* ty=Tensor[(1890), float32] */;
  %533 = %529.0;
  (%530, %531, %532, %533)
}

def @func_10849() -> Tensor[(15, 9, 14), float64] {
  %534 = @func_10670() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %534.0
}

def @func_13037() -> Tensor[(9, 4, 12), float32] {
  %535 = @func_7150() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %535.0
}

def @func_15046() -> (Tensor[(15, 9, 14), float64],) {
  %536 = @func_13084() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %537 = %536.0;
  (%537,)
}

def @func_13021(%var_13019: Tensor[(324), float64]) -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(324), float64]) {
  %538 = @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */;
  %539 = cast(%var_13019, dtype="float64") /* ty=Tensor[(324), float64] */;
  %540 = reshape(%539, newshape=[9, 36]) /* ty=Tensor[(9, 36), float64] */;
  %541 = @func_11485(%540) /* ty=(Tensor[(9, 4, 12), float64], Tensor[(400), uint8], Tensor[(9, 36), float64], Tensor[(15, 9, 14), float64]) */;
  %542 = %538.0;
  %543 = %541.3;
  (%542, %543, %var_13019)
}

def @func_11818(%var_11780: Tensor[(55), bool]) -> (Tensor[(1890), float64], Tensor[(12, 4, 11), int32], Tensor[(6, 13, 15), bool], Tensor[(55), bool]) {
  %544 = @func_8306() /* ty=(Tensor[(1170), int32], Tensor[(1890), float64]) */;
  %545 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
  %546 = cast(%var_11780, dtype="bool") /* ty=Tensor[(55), bool] */;
  %547 = %544.1;
  %548 = cast(%547, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %549 = reshape(%546, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %550 = reshape(%548, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %551 = @func_9926(%549, %550) /* ty=(Tensor[(3, 9, 12), float64], Tensor[(6, 13, 15), bool], Tensor[(252), float64], Tensor[(55), bool], Tensor[(1890), float64]) */;
  %552 = %545.2;
  %553 = %551.1;
  (%547, %552, %553, %var_11780)
}

def @func_5470() -> (Tensor[(15, 9, 14), float64],) {
  %554 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %555 = %554.1;
  (%555,)
}

def @func_5883() -> int32 {
  %556 = @func_5006() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */;
  %556.3
}

def @func_6731() -> Tensor[(15, 9, 14), float64] {
  @func_5746() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_13394(%var_13370: int8, %var_13371: Tensor[(2, 3, 13), int8]) -> (Tensor[(2, 3, 13), int8], Tensor[(2, 3, 13), float32]) {
  %557 = cast(%var_13370, dtype="int8") /* ty=int8 */;
  %558 = cast(%var_13371, dtype="int8") /* ty=Tensor[(2, 3, 13), int8] */;
  %559 = cast(%var_13371, dtype="float32") /* ty=Tensor[(2, 3, 13), float32] */;
  %560 = bitwise_and(%557, %558) /* ty=Tensor[(2, 3, 13), int8] */;
  %561 = cos(%559) /* ty=Tensor[(2, 3, 13), float32] */;
  (%560, %561)
}

def @func_6484(%var_6467: Tensor[(1170), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(390, 3), int32], Tensor[(1170), int32], Tensor[(15, 9, 14), float64]) {
  %562 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
  %563 = @func_5026() /* ty=(Tensor[(1890), float32],) */;
  %564 = cast(%var_6467, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %565 = reshape(%564, newshape=[390, 3]) /* ty=Tensor[(390, 3), int32] */;
  %566 = @func_6206(%565) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) */;
  %567 = %562.0;
  %568 = %563.0;
  %569 = %566.4;
  %570 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  (%567, %568, %569, %var_6467, %570)
}

def @func_7343(%var_7334: Tensor[(3, 9, 12), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(15, 9, 14), float64]) {
  %571 = @func_7061() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %572 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %573 = %572.1;
  %574 = cast(%var_7334, dtype="int64") /* ty=Tensor[(3, 9, 12), int64] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="int64") /* ty=Tensor[(3, 9, 12), int64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %578 = %571.0;
  %579 = left_shift(%576, %577) /* ty=Tensor[(3, 9, 12), int64] */;
  %580 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
  (%578, %579, %580)
}

def @func_13498() -> Tensor[(13, 5, 11), float64] {
  %581 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 11), float64] */;
  tan(%581) /* ty=Tensor[(13, 5, 11), float64] */
}

def @func_4815() -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) {
  %582 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %583 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %584 = %582.2;
  %585 = cast(%584, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %586 = reshape(%585, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %587 = @func_860(%586) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %588 = %583.2;
  %589 = %587.2;
  (%584, %588, %589)
}

def @func_9979() -> (Tensor[(9, 4, 12), float32], Tensor[(5, 4, 13), float32], Tensor[(260), float32]) {
  %590 = @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %591 = cast(meta[relay.Constant][27] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %592 = reshape(%591, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), float32] */;
  %593 = @func_8448(%592) /* ty=(Tensor[(5, 4, 13), float32],) */;
  %594 = %590.0;
  %595 = %593.0;
  (%594, %595, meta[relay.Constant][27] /* ty=Tensor[(260), float32] */)
}

def @func_9620() -> (Tensor[(528), int32],) {
  %596 = @func_8893() /* ty=(Tensor[(528), int32],) */;
  %597 = %596.0;
  (%597,)
}

def @func_5006() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) {
  %598 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %599 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %600 = cast(meta[relay.Constant][28] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %601 = reshape(%599, newshape=[]) /* ty=int32 */;
  %602 = reshape(%600, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), int32] */;
  %603 = %598.0;
  %604 = @func_4885() /* ty=Tensor[(1890), float32] */;
  %605 = @func_4079(%601, %602) /* ty=Tensor[(12, 4, 11), int32] */;
  (%603, %604, %605, 7 /* ty=int32 */, meta[relay.Constant][28] /* ty=Tensor[(528), int32] */)
}

def @func_12835() -> (Tensor[(528), int32], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
  %606 = cast(meta[relay.Constant][29] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %607 = cast(meta[relay.Constant][29] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %608 = cast(meta[relay.Constant][30] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %609 = cast(meta[relay.Constant][31] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %610 = reshape(%606, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %611 = reshape(%607, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %612 = reshape(%608, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %613 = reshape(%609, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %614 = @func_1829(%610, %611, %612, %613) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %615 = @func_8234() /* ty=Tensor[(528), int32] */;
  %616 = %614.3;
  (%615, %616, meta[relay.Constant][29] /* ty=Tensor[(400), uint8] */, meta[relay.Constant][30] /* ty=Tensor[(324), float64] */, meta[relay.Constant][31] /* ty=Tensor[(1890), float64] */)
}

def @func_15263() -> Tensor[(528), int32] {
  %617 = @func_9620() /* ty=(Tensor[(528), int32],) */;
  %617.0
}

def @func_15405() -> int32 {
  %618 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
  %618.3
}

def @func_12987() -> (Tensor[(1890), float64],) {
  %619 = @func_11382() /* ty=Tensor[(1890), float64] */;
  (%619,)
}

def @func_6425(%var_6405: Tensor[(7, 6, 16), uint16], %var_6406: Tensor[(7, 6, 16), uint16]) -> (Tensor[(7, 6, 16), uint16],) {
  %620 = cast(%var_6406, dtype="uint16") /* ty=Tensor[(7, 6, 16), uint16] */;
  %621 = shape_of(%var_6405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%var_6405, dtype="uint16") /* ty=Tensor[(7, 6, 16), uint16] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %624 = logical_xor(%622, %623) /* ty=Tensor[(7, 6, 16), uint16] */;
  (%624,)
}

def @func_8209() -> Tensor[(15, 9, 14), float32] {
  %625 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %626 = %625.0;
  %627 = cast(%626, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  tan(%627) /* ty=Tensor[(15, 9, 14), float32] */
}

def @func_7940() -> (Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
  %628 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
  %629 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %630 = %628.1;
  %631 = %629.2;
  (%630, %631)
}

def @func_14925(%var_14921: Tensor[(5, 52), float32]) -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(5, 4, 13), float32], Tensor[(5, 52), float32]) {
  %632 = @func_12488() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(1, 11, 6), float32], Tensor[(66), float32], Tensor[(1890), float64]) */;
  %633 = @func_10670() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %634 = cast(%var_14921, dtype="float32") /* ty=Tensor[(5, 52), float32] */;
  %635 = reshape(%634, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), float32] */;
  %636 = @func_8448(%635) /* ty=(Tensor[(5, 4, 13), float32],) */;
  %637 = %632.3;
  %638 = %633.0;
  %639 = %636.0;
  (%637, %638, %639, %var_14921)
}

def @func_6681() -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) {
  %640 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %641 = %640.0;
  %642 = cast(%641, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %643 = cast(meta[relay.Constant][32] /* ty=Tensor[(165), uint32] */, dtype="uint32") /* ty=Tensor[(165), uint32] */;
  %644 = reshape(%643, newshape=[3, 11, 5]) /* ty=Tensor[(3, 11, 5), uint32] */;
  %645 = @func_6377(%644) /* ty=(Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) */;
  %646 = cos(%642) /* ty=Tensor[(1890), float64] */;
  %647 = %645.3;
  (%646, %647, meta[relay.Constant][32] /* ty=Tensor[(165), uint32] */)
}

def @func_7583(%var_7552: Tensor[(128), uint64], %var_7553: Tensor[(55), bool], %var_7554: Tensor[(400), uint8]) -> (Tensor[(1890), float64], Tensor[(1, 64), uint64], Tensor[(128), uint64], Tensor[(400), uint8], Tensor[(162, 2), float64], Tensor[(1890), float32], Tensor[(4, 16, 55), float32]) {
  %648 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %649 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 64), uint64] */, dtype="uint64") /* ty=Tensor[(1, 64), uint64] */;
  %650 = cast(%var_7552, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %651 = cast(%var_7553, dtype="bool") /* ty=Tensor[(55), bool] */;
  %652 = cast(%var_7554, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %653 = cast(meta[relay.Constant][34] /* ty=Tensor[(162, 2), float64] */, dtype="float64") /* ty=Tensor[(162, 2), float64] */;
  %654 = reshape(%649, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), uint64] */;
  %655 = reshape(%650, newshape=[4, 16, 2]) /* ty=Tensor[(4, 16, 2), uint64] */;
  %656 = reshape(%651, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %657 = reshape(%652, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %658 = reshape(%653, newshape=[1, 324]) /* ty=Tensor[(1, 324), float64] */;
  %659 = @func_3351(%654, %655, %656, %657, %658) /* ty=(Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) */;
  %660 = %659.3;
  %661 = cast(%var_7553, dtype="int16") /* ty=Tensor[(55), int16] */;
  %662 = cast(%660, dtype="int16") /* ty=Tensor[(4, 16, 1), int16] */;
  %663 = add(%661, %662) /* ty=Tensor[(4, 16, 55), int16] */;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(4, 16, 55), float32] */;
  %665 = %648.0;
  %666 = @func_4885() /* ty=Tensor[(1890), float32] */;
  %667 = exp(%664) /* ty=Tensor[(4, 16, 55), float32] */;
  (%665, meta[relay.Constant][33] /* ty=Tensor[(1, 64), uint64] */, %var_7552, %var_7554, meta[relay.Constant][34] /* ty=Tensor[(162, 2), float64] */, %666, %667)
}

def @func_14845() -> (Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %668 = @func_7409() /* ty=(Tensor[(1890), float32],) */;
  %669 = %668.0;
  %670 = @func_6075() /* ty=Tensor[(15, 9, 14), float64] */;
  %671 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  (%669, %670, %671)
}

def @func_7831() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %672 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %673 = %672.0;
  %674 = cast(%673, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %675 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %676 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %677 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
  %678 = asinh(%674) /* ty=Tensor[(15, 9, 14), float32] */;
  %679 = %675.0;
  %680 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  %681 = %676.0;
  (%677, %678, %679, %680, %681)
}

def @func_14856() -> (Tensor[(15, 9, 14), float64],) {
  %682 = @func_13735() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(9, 4, 12), float32]) */;
  %683 = %682.1;
  (%683,)
}

def @func_3716(%var_3638: Tensor[(4, 7, 9), float64], %var_3678: Tensor[(55), bool], %var_3686: Tensor[(1890), float64]) -> (Tensor[(4, 7, 9), float64], Tensor[(?, 324), float32], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(15, 9, 7), float64], Tensor[(400), uint8], Tensor[(1890), float64], Tensor[(6, 13, 15), bool], Tensor[(1, 11, 5), float64], Tensor[(6, 13, 15), bool]) {
  %684 = cast(%var_3638, dtype="float64") /* ty=Tensor[(4, 7, 9), float64] */;
  %685 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(4, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 9), float64] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %688 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 324), float64] */, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  %689 = reshape(%688, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %690 = @func_1091(%689) /* ty=Tensor[(3, 9, 12), float64] */;
  %691 = cast(%690, dtype="float32") /* ty=Tensor[(3, 9, 12), float32] */;
  %692 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(1, 324), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %693 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 324), float64] */, dtype="float32") /* ty=Tensor[(1, 324), float32] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %695 = cast(%var_3678, dtype="bool") /* ty=Tensor[(55), bool] */;
  %696 = cast(%var_3678, dtype="bool") /* ty=Tensor[(55), bool] */;
  %697 = reshape(%695, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %698 = reshape(%696, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %699 = @func_2811(%697, %698) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
  %700 = cast(meta[relay.Constant][37] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %701 = cast(%690, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %702 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %703 = reshape(%700, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %704 = reshape(%701, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %705 = reshape(%702, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %706 = @func_2236(%703, %704, %705) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
  %707 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %708 = reshape(%707, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %709 = @func_860(%708) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %710 = cast(%var_3678, dtype="bool") /* ty=Tensor[(55), bool] */;
  %711 = cast(%var_3678, dtype="bool") /* ty=Tensor[(55), bool] */;
  %712 = reshape(%710, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %713 = reshape(%711, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %714 = @func_2811(%712, %713) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
  %715 = %714.1;
  %716 = cast(%715, dtype="float64") /* ty=Tensor[(1, 11, 5), float64] */;
  %717 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %718 = reshape(%717, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %719 = @func_860(%718) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %720 = floor_mod(%686, %687) /* ty=Tensor[(4, 7, 9), float64] */;
  %721 = floor_divide(%693, %694) /* ty=Tensor[(?, 324), float32] */;
  %722 = %699.0;
  %723 = %706.0;
  %724 = %709.1;
  %725 = cosh(%716) /* ty=Tensor[(1, 11, 5), float64] */;
  %726 = %719.1;
  (%720, %721, %722, %var_3678, %723, meta[relay.Constant][37] /* ty=Tensor[(400), uint8] */, %var_3686, %724, %725, %726)
}

def @func_5642() -> Tensor[(528), int32] {
  %727 = @func_5006() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */;
  %727.4
}

def @func_1091(%var_1083: Tensor[(3, 9, 12), float64]) -> Tensor[(3, 9, 12), float64] {
  %728 = cast(%var_1083, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  atanh(%728) /* ty=Tensor[(3, 9, 12), float64] */
}

def @func_8039(%var_8030: Tensor[(1890), float32]) -> (Tensor[(1890), float64],) {
  %729 = @func_7994() /* ty=(Tensor[(1890), float32],) */;
  %730 = %729.0;
  %731 = cast(%var_8030, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %732 = shape_of(%730, dtype="int32") /* ty=Tensor[(1), int32] */;
  %733 = cast(%730, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?), float64] */;
  %735 = power(%733, %734) /* ty=Tensor[(1890), float64] */;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %737 = asinh(%736) /* ty=Tensor[(1890), float64] */;
  (%737,)
}

def @func_10083() -> (Tensor[(1890), float32],) {
  %738 = @func_7409() /* ty=(Tensor[(1890), float32],) */;
  %739 = %738.0;
  (%739,)
}

def @func_5584(%var_5568: Tensor[(140, 24), uint64]) -> (Tensor[(15, 9, 14), float64], Tensor[(16, 15, 14), uint64], Tensor[(140, 24), uint64]) {
  %740 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %741 = cast(%var_5568, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
  %742 = cast(%var_5568, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
  %743 = reshape(%741, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %744 = reshape(%742, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %745 = @func_4254(%743, %744) /* ty=(Tensor[(16, 15, 14), uint64],) */;
  %746 = %740.0;
  %747 = %745.0;
  (%746, %747, %var_5568)
}

def @func_6531(%var_6518: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(324), float64], Tensor[(9, 4, 12), float32], Tensor[(8, 50), int32]) {
  %748 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
  %749 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 50), uint8] */, dtype="uint8") /* ty=Tensor[(8, 50), uint8] */;
  %750 = cast(%var_6518, dtype="float64") /* ty=Tensor[(324), float64] */;
  %751 = %748.0;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %753 = reshape(%749, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %754 = reshape(%750, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %755 = reshape(%752, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %756 = @func_2236(%753, %754, %755) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
  %757 = %756.2;
  %758 = cast(%757, dtype="int32") /* ty=Tensor[(400), int32] */;
  %759 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(8, 50), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %760 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 50), uint8] */, dtype="int32") /* ty=Tensor[(8, 50), int32] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %762 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %763 = subtract(%760, %761) /* ty=Tensor[(8, 50), int32] */;
  (%751, %var_6518, %762, %763)
}

def @func_6206(%var_6193: Tensor[(390, 3), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) {
  %764 = @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %765 = cast(meta[relay.Constant][39] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %766 = cast(meta[relay.Constant][39] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %767 = reshape(%765, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %768 = reshape(%766, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %769 = @func_5505(%767, %768) /* ty=(Tensor[(3, 3, 3), float32],) */;
  %770 = cast(meta[relay.Constant][39] /* ty=Tensor[(27), float32] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %771 = cast(%var_6193, dtype="int32") /* ty=Tensor[(390, 3), int32] */;
  %772 = cast(%var_6193, dtype="int32") /* ty=Tensor[(390, 3), int32] */;
  %773 = reshape(%771, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %774 = reshape(%772, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %775 = %764.2;
  %776 = %769.0;
  %777 = log10(%770) /* ty=Tensor[(27), float64] */;
  %778 = @func_458(%773, %774) /* ty=Tensor[(6, 13, 15), bool] */;
  (%775, %776, %777, %778, %var_6193)
}

def @func_14649(%var_14642: Tensor[(672), uint16]) -> (Tensor[(15, 9, 14), float64], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16]) {
  %779 = @func_11911() /* ty=(Tensor[(1890), float64], Tensor[(15, 9, 14), float64]) */;
  %780 = cast(%var_14642, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %781 = cast(%var_14642, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %782 = reshape(%780, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %783 = reshape(%781, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %784 = @func_6425(%782, %783) /* ty=(Tensor[(7, 6, 16), uint16],) */;
  %785 = %779.1;
  %786 = %784.0;
  (%785, %786, %var_14642)
}

def @func_10048() -> (Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) {
  %787 = @func_9871() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %788 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %789 = @func_7957() /* ty=Tensor[(528), int32] */;
  %790 = cast(%789, dtype="int32") /* ty=Tensor[(528), int32] */;
  %791 = reshape(%788, newshape=[]) /* ty=int32 */;
  %792 = reshape(%790, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), int32] */;
  %793 = %787.0;
  %794 = @func_4079(%791, %792) /* ty=Tensor[(12, 4, 11), int32] */;
  %795 = @func_9763() /* ty=Tensor[(15, 9, 14), float32] */;
  (%793, %789, %794, 6 /* ty=int32 */, %795)
}

def @func_10670() -> (Tensor[(15, 9, 14), float64],) {
  %796 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %797 = %796.0;
  (%797,)
}

def @func_13579() -> (Tensor[(324, 1), float64], Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(324, 3), bool], Tensor[(1890), int64]) {
  %798 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %799 = @func_9324() /* ty=(Tensor[(324, 1), float64],) */;
  %800 = %799.0;
  %801 = cast(%800, dtype="bool") /* ty=Tensor[(324, 1), bool] */;
  %802 = cast(meta[relay.Constant][40] /* ty=Tensor[(324, 3), float64] */, dtype="bool") /* ty=Tensor[(324, 3), bool] */;
  %803 = @func_6075() /* ty=Tensor[(15, 9, 14), float64] */;
  %804 = cast(%803, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %805 = reshape(%804, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %806 = @func_10562(%805) /* ty=(Tensor[(1890), int64],) */;
  %807 = %798.2;
  %808 = @func_9295() /* ty=Tensor[(528), int32] */;
  %809 = logical_and(%801, %802) /* ty=Tensor[(324, 3), bool] */;
  %810 = %806.0;
  (%807, %808, %803, %809, %810)
}

def @func_5272(%var_5239: Tensor[(400), uint8], %var_5240: Tensor[(324), float64], %var_5248: Tensor[(126, 2), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(126, 2), float64], Tensor[(1, 55), bool], Tensor[(324), float64]) {
  %811 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %812 = cast(%var_5239, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %813 = cast(%var_5239, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %814 = cast(%var_5240, dtype="float64") /* ty=Tensor[(324), float64] */;
  %815 = %811.0;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %817 = reshape(%812, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %818 = reshape(%813, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %819 = reshape(%814, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %820 = reshape(%816, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %821 = @func_1829(%817, %818, %819, %820) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %822 = cast(%var_5248, dtype="float64") /* ty=Tensor[(126, 2), float64] */;
  %823 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 55), bool] */, dtype="bool") /* ty=Tensor[(1, 55), bool] */;
  %824 = cast(%815, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %825 = reshape(%822, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float64] */;
  %826 = reshape(%823, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %827 = reshape(%824, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %828 = @func_3716(%825, %826, %827) /* ty=(Tensor[(4, 7, 9), float64], Tensor[(?, 324), float32], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(15, 9, 7), float64], Tensor[(400), uint8], Tensor[(1890), float64], Tensor[(6, 13, 15), bool], Tensor[(1, 11, 5), float64], Tensor[(6, 13, 15), bool]) */;
  %829 = cast(%var_5239, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %830 = %821.3;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %832 = cast(%815, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %833 = reshape(%829, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %834 = reshape(%831, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %835 = reshape(%832, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %836 = @func_2236(%833, %834, %835) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
  %837 = %828.7;
  %838 = %836.3;
  (%815, %830, %var_5239, %var_5240, %837, %var_5248, meta[relay.Constant][41] /* ty=Tensor[(1, 55), bool] */, %838)
}

def @func_15157() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %839 = @func_9871() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %840 = @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %841 = %839.0;
  %842 = %840.2;
  (%841, %842)
}

def @func_8187(%var_8182: Tensor[(528), int32]) -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) {
  %843 = @func_5642() /* ty=Tensor[(528), int32] */;
  %844 = cast(%var_8182, dtype="int64") /* ty=Tensor[(528), int64] */;
  %845 = shape_of(%843, dtype="int32") /* ty=Tensor[(1), int32] */;
  %846 = cast(%843, dtype="int64") /* ty=Tensor[(528), int64] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?), int64] */;
  %848 = @func_6780() /* ty=Tensor[(1890), float64] */;
  %849 = @func_6281() /* ty=Tensor[(1890), float64] */;
  %850 = @func_4885() /* ty=Tensor[(1890), float32] */;
  %851 = bitwise_xor(%846, %847) /* ty=Tensor[(528), int64] */;
  (%848, %849, %850, %851)
}

def @func_4685() -> (Tensor[(15, 9, 14), float64],) {
  %852 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %853 = %852.1;
  (%853,)
}

def @func_10643() -> (Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) {
  %854 = @func_9609() /* ty=(Tensor[(528), int32], Tensor[(2, 264), int32]) */;
  %855 = cast(meta[relay.Constant][42] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %856 = reshape(%855, newshape=[390, 3]) /* ty=Tensor[(390, 3), int32] */;
  %857 = @func_6206(%856) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) */;
  %858 = %854.0;
  %859 = %857.0;
  (%858, %859, meta[relay.Constant][42] /* ty=Tensor[(1170), int32] */)
}

def @func_11911() -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64]) {
  %860 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %861 = %860.1;
  %862 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
  (%861, %862)
}

def @func_458(%var_448: Tensor[(6, 13, 15), int32], %var_449: Tensor[(6, 13, 15), int32]) -> Tensor[(6, 13, 15), bool] {
  %863 = cast(%var_449, dtype="bool") /* ty=Tensor[(6, 13, 15), bool] */;
  %864 = shape_of(%var_448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%var_448, dtype="bool") /* ty=Tensor[(6, 13, 15), bool] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%865, %866) /* ty=Tensor[(6, 13, 15), bool] */
}

def @func_14369() -> Tensor[(528), int32] {
  @func_10616() /* ty=Tensor[(528), int32] */
}

def @func_10592(%var_10586: Tensor[(4, 13, 16), float32]) -> (Tensor[(4, 13, 16), float32],) {
  %867 = cast(%var_10586, dtype="float32") /* ty=Tensor[(4, 13, 16), float32] */;
  %868 = log2(%867) /* ty=Tensor[(4, 13, 16), float32] */;
  (%868,)
}

def @func_7504() -> (Tensor[(15, 9, 14), float64], Tensor[(165), uint32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), uint16], Tensor[(9, 4, 12), float32], Tensor[(3, 11, 5), int32]) {
  %869 = cast(meta[relay.Constant][43] /* ty=Tensor[(165), uint32] */, dtype="uint32") /* ty=Tensor[(165), uint32] */;
  %870 = reshape(%869, newshape=[3, 11, 5]) /* ty=Tensor[(3, 11, 5), uint32] */;
  %871 = @func_6377(%870) /* ty=(Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) */;
  %872 = %871.0;
  %873 = cast(%872, dtype="float64") /* ty=Tensor[(3, 11, 5), float64] */;
  %874 = log2(%873) /* ty=Tensor[(3, 11, 5), float64] */;
  %875 = cast(%872, dtype="uint16") /* ty=Tensor[(3, 11, 5), uint16] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="uint16") /* ty=Tensor[(3, 11, 5), uint16] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %879 = cast(%872, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
  %880 = sin(%879) /* ty=Tensor[(3, 11, 5), float32] */;
  %881 = cast(%874, dtype="int32") /* ty=Tensor[(3, 11, 5), int32] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="int32") /* ty=Tensor[(3, 11, 5), int32] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %885 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
  %886 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
  %887 = logical_xor(%877, %878) /* ty=Tensor[(3, 11, 5), uint16] */;
  %888 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %889 = subtract(%883, %884) /* ty=Tensor[(3, 11, 5), int32] */;
  (%885, meta[relay.Constant][43] /* ty=Tensor[(165), uint32] */, %886, %887, %888, %889)
}

def @func_14160() -> (Tensor[(15, 9, 14), float32], Tensor[(1890), float64]) {
  %890 = @func_9763() /* ty=Tensor[(15, 9, 14), float32] */;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %892 = reshape(%891, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %893 = @func_8039(%892) /* ty=(Tensor[(1890), float64],) */;
  %894 = %893.0;
  (%890, %894)
}

def @func_7197() -> (Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) {
  %895 = @func_5809() /* ty=Tensor[(528), int32] */;
  %896 = @func_6387() /* ty=Tensor[(1890), float32] */;
  %897 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
  (%895, %896, %897)
}

def @func_5103() -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) {
  %898 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %899 = %898.0;
  %900 = cast(%899, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %901 = reshape(%900, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %902 = @func_860(%901) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %903 = %902.1;
  (%899, %903)
}

def @func_11287(%var_11254: Tensor[(55), bool]) -> (Tensor[(55), bool], Tensor[(1890), bool], Tensor[(140, 24), bool]) {
  %904 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %905 = %904.0;
  %906 = @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %907 = %906.0;
  %908 = cast(%907, dtype="bool") /* ty=Tensor[(15, 9, 14), bool] */;
  %909 = shape_of(%905, dtype="int32") /* ty=Tensor[(1), int32] */;
  %910 = cast(%905, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?), bool] */;
  %912 = cast(%var_11254, dtype="bool") /* ty=Tensor[(55), bool] */;
  %913 = reshape(%912, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %914 = @func_7847(%913) /* ty=(Tensor[(165), uint32], Tensor[(140, 24), bool], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(18, 18), float64], Tensor[(252), float64]) */;
  %915 = %914.1;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(140, 24), float64] */;
  %917 = rsqrt(%916) /* ty=Tensor[(140, 24), float64] */;
  %918 = cast(%917, dtype="bool") /* ty=Tensor[(140, 24), bool] */;
  %919 = shape_of(%915, dtype="int32") /* ty=Tensor[(2), int32] */;
  %920 = cast(%915, dtype="bool") /* ty=Tensor[(140, 24), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %922 = greater_equal(%910, %911) /* ty=Tensor[(1890), bool] */;
  %923 = not_equal(%920, %921) /* ty=Tensor[(140, 24), bool] */;
  (%var_11254, %922, %923)
}

def @func_14091() -> Tensor[(528), int32] {
  %924 = @func_7197() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */;
  %924.0
}

def @func_14738() -> (Tensor[(1890), float32], Tensor[(528), int32], Tensor[(15, 9, 14), float32], Tensor[(9, 4, 12), float32]) {
  %925 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
  %926 = @func_6255() /* ty=Tensor[(1890), float32] */;
  %927 = @func_7372() /* ty=Tensor[(528), int32] */;
  %928 = %925.0;
  %929 = @func_13037() /* ty=Tensor[(9, 4, 12), float32] */;
  (%926, %927, %928, %929)
}

def @func_6860() -> (Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), bool], Tensor[(165), uint32], Tensor[(6, 13, 15), bool], Tensor[(1890), bool], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(1890), uint32]) {
  %930 = cast(meta[relay.Constant][44] /* ty=Tensor[(390, 3), int32] */, dtype="int32") /* ty=Tensor[(390, 3), int32] */;
  %931 = cast(meta[relay.Constant][44] /* ty=Tensor[(390, 3), int32] */, dtype="int32") /* ty=Tensor[(390, 3), int32] */;
  %932 = reshape(%930, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %933 = reshape(%931, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %934 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %935 = cast(meta[relay.Constant][45] /* ty=Tensor[(165), uint32] */, dtype="uint32") /* ty=Tensor[(165), uint32] */;
  %936 = reshape(%935, newshape=[3, 11, 5]) /* ty=Tensor[(3, 11, 5), uint32] */;
  %937 = @func_6377(%936) /* ty=(Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) */;
  %938 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %939 = @func_4885() /* ty=Tensor[(1890), float32] */;
  %940 = cast(%939, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %941 = acos(%940) /* ty=Tensor[(1890), float32] */;
  %942 = cast(%941, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %943 = acosh(%942) /* ty=Tensor[(1890), float32] */;
  %944 = cast(%941, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(1), int32] */;
  %946 = cast(%943, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?), bool] */;
  %948 = cast(meta[relay.Constant][46] /* ty=Tensor[(3360), uint64] */, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %949 = reshape(%948, newshape=[3360]) /* ty=Tensor[(3360), uint64] */;
  %950 = @func_6569(%949) /* ty=(Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) */;
  %951 = cast(%941, dtype="uint32") /* ty=Tensor[(1890), uint32] */;
  %952 = shape_of(%943, dtype="int32") /* ty=Tensor[(1), int32] */;
  %953 = cast(%943, dtype="uint32") /* ty=Tensor[(1890), uint32] */;
  %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %955 = @func_458(%932, %933) /* ty=Tensor[(6, 13, 15), bool] */;
  %956 = %934.0;
  %957 = %937.0;
  %958 = %938.1;
  %959 = not_equal(%946, %947) /* ty=Tensor[(1890), bool] */;
  %960 = %950.2;
  %961 = add(%953, %954) /* ty=Tensor[(1890), uint32] */;
  (%955, meta[relay.Constant][44] /* ty=Tensor[(390, 3), int32] */, %956, %957, meta[relay.Constant][45] /* ty=Tensor[(165), uint32] */, %958, %959, %960, meta[relay.Constant][46] /* ty=Tensor[(3360), uint64] */, %961)
}

def @func_11343() -> (Tensor[(528), int32],) {
  %962 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
  %963 = %962.1;
  (%963,)
}

def @func_10281(%var_10264: Tensor[(324), float64]) -> (Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), int64]) {
  %964 = cast(meta[relay.Constant][47] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %965 = cast(%var_10264, dtype="float64") /* ty=Tensor[(324), float64] */;
  %966 = reshape(%964, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %967 = reshape(%965, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %968 = @func_8619(%966, %967) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) */;
  %969 = @func_8306() /* ty=(Tensor[(1170), int32], Tensor[(1890), float64]) */;
  %970 = %969.1;
  %971 = cast(meta[relay.Constant][48] /* ty=Tensor[(1890), float64] */, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %972 = shape_of(%970, dtype="int32") /* ty=Tensor[(1), int32] */;
  %973 = cast(%970, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?), int64] */;
  %975 = %968.2;
  %976 = multiply(%973, %974) /* ty=Tensor[(1890), int64] */;
  (%975, meta[relay.Constant][47] /* ty=Tensor[(400), uint8] */, %var_10264, %976)
}

def @func_12318() -> Tensor[(8, 10, 3), int64] {
  %977 = cast(meta[relay.Constant][50] /* ty=Tensor[(8, 10, 3), int64] */, dtype="int64") /* ty=Tensor[(8, 10, 3), int64] */;
  %978 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(8, 10, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 10, 3), int64] */, dtype="int64") /* ty=Tensor[(8, 10, 3), int64] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%979, %980) /* ty=Tensor[(8, 10, 3), int64] */
}

def @func_8448(%var_8434: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), float32],) {
  %981 = cast(%var_8434, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
  %982 = sin(%981) /* ty=Tensor[(5, 4, 13), float32] */;
  %983 = cast(%982, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
  %984 = asin(%983) /* ty=Tensor[(5, 4, 13), float32] */;
  (%984,)
}

def @func_13770() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), uint16]) {
  %985 = @func_10515() /* ty=(Tensor[(1890), float64],) */;
  %986 = %985.0;
  %987 = cast(meta[relay.Constant][51] /* ty=Tensor[(1890), float64] */, dtype="uint16") /* ty=Tensor[(1890), uint16] */;
  %988 = shape_of(%986, dtype="int32") /* ty=Tensor[(1), int32] */;
  %989 = cast(%986, dtype="uint16") /* ty=Tensor[(1890), uint16] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %991 = @func_10375() /* ty=Tensor[(15, 9, 14), float64] */;
  %992 = left_shift(%989, %990) /* ty=Tensor[(1890), uint16] */;
  (%991, %992)
}

def @func_12678() -> (Tensor[(528), int32], int32, Tensor[(528), int32], Tensor[(528), int64], Tensor[(1890), float64]) {
  %993 = @func_10643() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */;
  %994 = %993.0;
  %995 = cast(%994, dtype="int32") /* ty=Tensor[(528), int32] */;
  %996 = reshape(%995, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %997 = @func_8187(%996) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */;
  %998 = @func_10515() /* ty=(Tensor[(1890), float64],) */;
  %999 = @func_10616() /* ty=Tensor[(528), int32] */;
  %1000 = @func_5883() /* ty=int32 */;
  %1001 = %997.3;
  %1002 = %998.0;
  (%999, %1000, %994, %1001, %1002)
}

def @func_11169() -> Tensor[(528), int32] {
  %1003 = @func_8893() /* ty=(Tensor[(528), int32],) */;
  %1003.0
}

def @func_11947(%var_11939: Tensor[(8, 2, 5), float64]) -> Tensor[(8, 2, 5), float64] {
  %1004 = cast(%var_11939, dtype="float64") /* ty=Tensor[(8, 2, 5), float64] */;
  atan(%1004) /* ty=Tensor[(8, 2, 5), float64] */
}

def @func_5746() -> Tensor[(15, 9, 14), float64] {
  %1005 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %1005.0
}

def @func_10515() -> (Tensor[(1890), float64],) {
  %1006 = @func_8978() /* ty=Tensor[(1890), float64] */;
  (%1006,)
}

def @func_10562(%var_10551: Tensor[(1890), float32]) -> (Tensor[(1890), int64],) {
  %1007 = @func_10083() /* ty=(Tensor[(1890), float32],) */;
  %1008 = %1007.0;
  %1009 = cast(%var_10551, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1011 = cast(%1008, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1013 = minimum(%1011, %1012) /* ty=Tensor[(1890), int64] */;
  (%1013,)
}

def @func_12450() -> Tensor[(1890), float32] {
  %1014 = @func_7994() /* ty=(Tensor[(1890), float32],) */;
  %1014.0
}

def @func_9324() -> (Tensor[(324, 1), float64],) {
  %1015 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %1016 = %1015.2;
  (%1016,)
}

def @func_10375() -> Tensor[(15, 9, 14), float64] {
  %1017 = @func_7197() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */;
  %1017.2
}

def @func_12791(%var_12776: Tensor[(1170), int32]) -> Tensor[(1170), uint8] {
  %1018 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %1019 = %1018.2;
  %1020 = cast(%var_12776, dtype="uint8") /* ty=Tensor[(1170), uint8] */;
  %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1022 = cast(%1019, dtype="uint8") /* ty=Tensor[(1170), uint8] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?), uint8] */;
  logical_xor(%1022, %1023) /* ty=Tensor[(1170), uint8] */
}

def @func_7409() -> (Tensor[(1890), float32],) {
  %1024 = @func_6255() /* ty=Tensor[(1890), float32] */;
  %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %1026 = sqrt(%1025) /* ty=Tensor[(1890), float32] */;
  (%1026,)
}

def @func_13159(%var_13113: Tensor[(1170), int32], %var_13130: Tensor[(27), float32]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(6, 13, 15), bool], Tensor[(9, 4, 12), float64], Tensor[(9, 4, 12), float32], Tensor[(528), int32], Tensor[(27), float32], Tensor[(15, 9, 14), float32], Tensor[(1170), float64]) {
  %1027 = @func_7061() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %1028 = @func_7197() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */;
  %1029 = cast(%var_13113, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %1030 = cast(%var_13113, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %1031 = reshape(%1029, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %1032 = reshape(%1030, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %1033 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %1034 = @func_7150() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %1035 = cast(%var_13130, dtype="float32") /* ty=Tensor[(27), float32] */;
  %1036 = reshape(%1035, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %1037 = @func_12736(%1036) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(3, 3, 3), float32], Tensor[(27), float32], Tensor[(528), int32]) */;
  %1038 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
  %1039 = cast(%var_13113, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %1040 = asinh(%1039) /* ty=Tensor[(1170), float32] */;
  %1041 = cast(%1040, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1042 = %1027.1;
  %1043 = %1028.1;
  %1044 = @func_458(%1031, %1032) /* ty=Tensor[(6, 13, 15), bool] */;
  %1045 = %1033.0;
  %1046 = %1034.0;
  %1047 = %1037.1;
  %1048 = %1038.4;
  %1049 = asin(%1041) /* ty=Tensor[(1170), float64] */;
  (%1042, %1043, %1044, %1045, %1046, %1047, %var_13130, %1048, %1049)
}

def @func_7678() -> (Tensor[(9, 4, 12), float32],) {
  %1050 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_9926(%var_9913: Tensor[(55), bool], %var_9914: Tensor[(1890), float64]) -> (Tensor[(3, 9, 12), float64], Tensor[(6, 13, 15), bool], Tensor[(252), float64], Tensor[(55), bool], Tensor[(1890), float64]) {
  %1052 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %1053 = cast(meta[relay.Constant][52] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1054 = cast(%var_9913, dtype="bool") /* ty=Tensor[(55), bool] */;
  %1055 = cast(%var_9914, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1056 = reshape(%1053, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float64] */;
  %1057 = reshape(%1054, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %1058 = reshape(%1055, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %1059 = @func_3716(%1056, %1057, %1058) /* ty=(Tensor[(4, 7, 9), float64], Tensor[(?, 324), float32], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(15, 9, 7), float64], Tensor[(400), uint8], Tensor[(1890), float64], Tensor[(6, 13, 15), bool], Tensor[(1, 11, 5), float64], Tensor[(6, 13, 15), bool]) */;
  %1060 = %1052.1;
  %1061 = %1059.7;
  (%1060, %1061, meta[relay.Constant][52] /* ty=Tensor[(252), float64] */, %var_9913, %var_9914)
}

def @func_6255() -> Tensor[(1890), float32] {
  @func_4885() /* ty=Tensor[(1890), float32] */
}

def @func_12371(%var_12357: Tensor[(14, 10, 2), float32]) -> Tensor[(14, 10, 2), float32] {
  %1062 = cast(%var_12357, dtype="float32") /* ty=Tensor[(14, 10, 2), float32] */;
  exp(%1062) /* ty=Tensor[(14, 10, 2), float32] */
}

def @func_14450(%var_14437: Tensor[(55), bool], %var_14441: Tensor[(1, 120), float64]) -> (Tensor[(9, 4, 12), float32], Tensor[(55), bool], Tensor[(55), bool], Tensor[(1, 12, 10), float64], Tensor[(1, 120), float64]) {
  %1063 = @func_7150() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %1064 = cast(%var_14437, dtype="bool") /* ty=Tensor[(55), bool] */;
  %1065 = reshape(%1064, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %1066 = @func_11287(%1065) /* ty=(Tensor[(55), bool], Tensor[(1890), bool], Tensor[(140, 24), bool]) */;
  %1067 = cast(%var_14441, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %1068 = reshape(%1067, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
  %1069 = %1063.0;
  %1070 = %1066.0;
  %1071 = @func_4420(%1068) /* ty=Tensor[(1, 12, 10), float64] */;
  (%1069, %1070, %var_14437, %1071, %var_14441)
}

def @func_11102() -> Tensor[(15, 9, 14), float64] {
  %1072 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %1073 = %1072.0;
  %1074 = cast(%1073, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  cosh(%1074) /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_8893() -> (Tensor[(528), int32],) {
  %1075 = @func_7372() /* ty=Tensor[(528), int32] */;
  (%1075,)
}

def @func_15297() -> Tensor[(528), int32] {
  %1076 = @func_11343() /* ty=(Tensor[(528), int32],) */;
  %1076.0
}

def @func_12488() -> (Tensor[(9, 4, 12), float32], Tensor[(1, 11, 6), float32], Tensor[(66), float32], Tensor[(1890), float64]) {
  %1077 = @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */;
  %1078 = cast(meta[relay.Constant][53] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %1079 = reshape(%1078, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
  %1080 = @func_9633(%1079) /* ty=(Tensor[(1, 11, 6), float32],) */;
  %1081 = %1077.1;
  %1082 = %1080.0;
  %1083 = @func_6780() /* ty=Tensor[(1890), float64] */;
  (%1081, %1082, meta[relay.Constant][53] /* ty=Tensor[(66), float32] */, %1083)
}

def @func_14687() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) {
  %1084 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
  %1085 = %1084.0;
  %1086 = @func_11382() /* ty=Tensor[(1890), float64] */;
  (%1085, %1086)
}

def @func_13966() -> Tensor[(15, 9, 14), float32] {
  %1087 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
  %1087.4
}

def @func_5413(%var_5374: Tensor[(11, 5), bool], %var_5395: Tensor[(400), uint8], %var_5396: Tensor[(324), float64], %var_5397: Tensor[(252), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(?, 11, 5), bool], Tensor[(11, 5), bool], Tensor[(16, 15, 14), uint32], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64], Tensor[(140, 24), bool], Tensor[(15, 9, 14), float64]) {
  %1088 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %1089 = cast(%var_5374, dtype="bool") /* ty=Tensor[(11, 5), bool] */;
  %1090 = cast(%var_5374, dtype="bool") /* ty=Tensor[(11, 5), bool] */;
  %1091 = reshape(%1089, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %1092 = reshape(%1090, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %1093 = @func_2811(%1091, %1092) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
  %1094 = cast(meta[relay.Constant][54] /* ty=Tensor[(140, 24), uint64] */, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
  %1095 = cast(meta[relay.Constant][54] /* ty=Tensor[(140, 24), uint64] */, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
  %1096 = reshape(%1094, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1097 = reshape(%1095, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1098 = @func_4254(%1096, %1097) /* ty=(Tensor[(16, 15, 14), uint64],) */;
  %1099 = %1098.0;
  %1100 = cast(%1099, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %1101 = cast(meta[relay.Constant][54] /* ty=Tensor[(140, 24), uint64] */, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
  %1102 = reshape(%1100, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1103 = reshape(%1101, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1104 = @func_4254(%1102, %1103) /* ty=(Tensor[(16, 15, 14), uint64],) */;
  %1105 = %1104.0;
  %1106 = cast(%1105, dtype="uint32") /* ty=Tensor[(16, 15, 14), uint32] */;
  %1107 = shape_of(%1099, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1108 = cast(%1099, dtype="uint32") /* ty=Tensor[(16, 15, 14), uint32] */;
  %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1110 = cast(%var_5395, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %1111 = cast(%var_5396, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1112 = cast(%var_5397, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1113 = reshape(%1110, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %1114 = reshape(%1111, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %1115 = reshape(%1112, newshape=[126, 2]) /* ty=Tensor[(126, 2), float64] */;
  %1116 = @func_5272(%1113, %1114, %1115) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(126, 2), float64], Tensor[(1, 55), bool], Tensor[(324), float64]) */;
  %1117 = cast(%1105, dtype="uint16") /* ty=Tensor[(16, 15, 14), uint16] */;
  %1118 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(140, 24), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1119 = cast(meta[relay.Constant][54] /* ty=Tensor[(140, 24), uint64] */, dtype="uint16") /* ty=Tensor[(140, 24), uint16] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1121 = maximum(%1119, %1120) /* ty=Tensor[(140, 24), uint16] */;
  %1122 = cast(%1099, dtype="bool") /* ty=Tensor[(16, 15, 14), bool] */;
  %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1124 = cast(%1121, dtype="bool") /* ty=Tensor[(140, 24), bool] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1126 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %1127 = %1088.0;
  %1128 = %1093.0;
  %1129 = left_shift(%1108, %1109) /* ty=Tensor[(16, 15, 14), uint32] */;
  %1130 = %1116.0;
  %1131 = greater_equal(%1124, %1125) /* ty=Tensor[(140, 24), bool] */;
  %1132 = %1126.0;
  (%1127, %1128, %var_5374, %1129, %1130, %var_5395, %var_5396, %var_5397, %1131, %1132)
}

def @func_8234() -> Tensor[(528), int32] {
  @func_5809() /* ty=Tensor[(528), int32] */
}

def @func_4626() -> (Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) {
  %1133 = cast(meta[relay.Constant][55] /* ty=Tensor[(9, 4, 12), float32] */, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %1134 = cast(meta[relay.Constant][56] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1135 = reshape(%1134, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %1136 = @func_860(%1135) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %1137 = tan(%1133) /* ty=Tensor[(9, 4, 12), float32] */;
  %1138 = %1136.0;
  (%1137, %1138, meta[relay.Constant][56] /* ty=Tensor[(1890), float64] */)
}

def @func_7706() -> (Tensor[(528), int32],) {
  %1139 = @func_5809() /* ty=Tensor[(528), int32] */;
  (%1139,)
}

def @func_6569(%var_6565: Tensor[(3360), uint64]) -> (Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) {
  %1140 = cast(%var_6565, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %1141 = reshape(%1140, newshape=[140, 24]) /* ty=Tensor[(140, 24), uint64] */;
  %1142 = @func_5584(%1141) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 15, 14), uint64], Tensor[(140, 24), uint64]) */;
  %1143 = @func_4885() /* ty=Tensor[(1890), float32] */;
  %1144 = %1142.0;
  (%1143, %1144, %var_6565)
}

def @func_5809() -> Tensor[(528), int32] {
  @func_5642() /* ty=Tensor[(528), int32] */
}

def @func_7372() -> Tensor[(528), int32] {
  @func_5809() /* ty=Tensor[(528), int32] */
}

def @func_9295() -> Tensor[(528), int32] {
  @func_5809() /* ty=Tensor[(528), int32] */
}

def @func_13797() -> int32 {
  @func_5883() /* ty=int32 */
}

def @func_5505(%var_5497: Tensor[(3, 3, 3), float32], %var_5498: Tensor[(3, 3, 3), float32]) -> (Tensor[(3, 3, 3), float32],) {
  %1145 = cast(%var_5498, dtype="float32") /* ty=Tensor[(3, 3, 3), float32] */;
  %1146 = shape_of(%var_5497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%var_5497, dtype="float32") /* ty=Tensor[(3, 3, 3), float32] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1149 = floor_mod(%1147, %1148) /* ty=Tensor[(3, 3, 3), float32] */;
  (%1149,)
}

def @func_15447() -> Tensor[(15, 9, 14), float64] {
  %1150 = @func_10643() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */;
  %1150.1
}

def @main(%var_15480: Tensor[(2, 10, 3), float64]) -> (Tensor[(2, 10, 3), float32],) {
  %1151 = cast(%var_15480, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %1152 = sqrt(%1151) /* ty=Tensor[(2, 10, 3), float64] */;
  %1153 = cast(%1152, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  %1154 = acosh(%1153) /* ty=Tensor[(2, 10, 3), float32] */;
  (%1154,)
}

def @func_2236(%var_2168: Tensor[(400), uint8], %var_2169: Tensor[(324), float64], %var_2170: Tensor[(1890), float64]) -> (Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) {
  %1155 = cast(meta[relay.Constant][57] /* ty=Tensor[(15, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(15, 9, 7), float64] */;
  %1156 = cast(%var_2168, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %1157 = cast(%var_2168, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %1158 = cast(%var_2169, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1159 = cast(%var_2170, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1160 = reshape(%1156, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %1161 = reshape(%1157, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %1162 = reshape(%1158, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %1163 = reshape(%1159, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %1164 = @func_1829(%1160, %1161, %1162, %1163) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %1165 = %1164.5;
  %1166 = cast(%1165, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1167 = reshape(%1166, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %1168 = @func_860(%1167) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %1169 = sigmoid(%1155) /* ty=Tensor[(15, 9, 7), float64] */;
  %1170 = %1168.1;
  (%1169, %1165, %var_2168, %var_2169, %var_2170, %1170)
}

def @func_8837() -> (Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) {
  %1171 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %1172 = @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %1173 = %1171.1;
  %1174 = %1172.0;
  (%1173, %1174)
}

def @func_7627() -> (Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) {
  %1175 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %1176 = %1175.0;
  %1177 = cast(%1176, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %1178 = log(%1177) /* ty=Tensor[(15, 9, 14), float32] */;
  %1179 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  (%1178, %1179)
}

def @func_15373() -> (Tensor[(15, 9, 14), float32], Tensor[(3, 9, 12), float64]) {
  %1180 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
  %1181 = %1180.0;
  %1182 = cast(%1181, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %1183 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %1184 = rsqrt(%1182) /* ty=Tensor[(15, 9, 14), float32] */;
  %1185 = %1183.1;
  (%1184, %1185)
}

def @func_9168(%var_9068: Tensor[(3360), uint64], %var_9075: Tensor[(64), uint64], %var_9076: Tensor[(128), uint64], %var_9077: Tensor[(55), bool], %var_9079: Tensor[(54, 6), float64], %var_9111: Tensor[(4, 168), uint16], %var_9146: Tensor[(54, 6), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(16, 15, 14), uint64], Tensor[(3360), uint64], Tensor[(400), uint8], Tensor[(64), uint64], Tensor[(128), uint64], Tensor[(55), bool], Tensor[(8, 50), uint8], Tensor[(1890), float32], Tensor[(8, 66), int32], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), uint16], Tensor[(16, 15, 14), uint64], Tensor[(54, 6), float64], Tensor[(1890), float64], Tensor[(54, 6), bool], Tensor[(54, 6), float32]) {
  %1186 = @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */;
  %1187 = cast(%var_9068, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %1188 = reshape(%1187, newshape=[140, 24]) /* ty=Tensor[(140, 24), uint64] */;
  %1189 = @func_5584(%1188) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 15, 14), uint64], Tensor[(140, 24), uint64]) */;
  %1190 = cast(%var_9075, dtype="uint64") /* ty=Tensor[(64), uint64] */;
  %1191 = cast(%var_9076, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %1192 = cast(%var_9077, dtype="bool") /* ty=Tensor[(55), bool] */;
  %1193 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 50), uint8] */, dtype="uint8") /* ty=Tensor[(8, 50), uint8] */;
  %1194 = cast(%var_9079, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %1195 = reshape(%1190, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), uint64] */;
  %1196 = reshape(%1191, newshape=[4, 16, 2]) /* ty=Tensor[(4, 16, 2), uint64] */;
  %1197 = reshape(%1192, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %1198 = reshape(%1193, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %1199 = reshape(%1194, newshape=[1, 324]) /* ty=Tensor[(1, 324), float64] */;
  %1200 = @func_3351(%1195, %1196, %1197, %1198, %1199) /* ty=(Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) */;
  %1201 = cast(meta[relay.Constant][59] /* ty=Tensor[(8, 66), int32] */, dtype="int32") /* ty=Tensor[(8, 66), int32] */;
  %1202 = reshape(%1201, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %1203 = @func_8187(%1202) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */;
  %1204 = cast(%var_9111, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %1205 = cast(%var_9111, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %1206 = reshape(%1204, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %1207 = reshape(%1205, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %1208 = @func_6425(%1206, %1207) /* ty=(Tensor[(7, 6, 16), uint16],) */;
  %1209 = cast(%var_9068, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %1210 = cast(%var_9068, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %1211 = reshape(%1209, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1212 = reshape(%1210, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1213 = @func_4254(%1211, %1212) /* ty=(Tensor[(16, 15, 14), uint64],) */;
  %1214 = cast(%var_9079, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %1215 = log2(%1214) /* ty=Tensor[(54, 6), float64] */;
  %1216 = cast(%1215, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %1217 = tan(%1216) /* ty=Tensor[(54, 6), float64] */;
  %1218 = cast(%1217, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %1219 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %1220 = cast(%var_9146, dtype="bool") /* ty=Tensor[(54, 6), bool] */;
  %1221 = shape_of(%1217, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1222 = cast(%1217, dtype="bool") /* ty=Tensor[(54, 6), bool] */;
  %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1224 = cast(%1217, dtype="float32") /* ty=Tensor[(54, 6), float32] */;
  %1225 = exp(%1224) /* ty=Tensor[(54, 6), float32] */;
  %1226 = cast(%1225, dtype="float32") /* ty=Tensor[(54, 6), float32] */;
  %1227 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
  %1228 = %1186.1;
  %1229 = %1189.1;
  %1230 = %1200.5;
  %1231 = %1203.2;
  %1232 = %1208.0;
  %1233 = %1213.0;
  %1234 = erf(%1218) /* ty=Tensor[(54, 6), float64] */;
  %1235 = %1219.0;
  %1236 = logical_or(%1222, %1223) /* ty=Tensor[(54, 6), bool] */;
  %1237 = asinh(%1226) /* ty=Tensor[(54, 6), float32] */;
  (%1227, %1228, %1229, %var_9068, %1230, %var_9075, %var_9076, %var_9077, meta[relay.Constant][58] /* ty=Tensor[(8, 50), uint8] */, %1231, meta[relay.Constant][59] /* ty=Tensor[(8, 66), int32] */, %1232, %var_9111, %1233, %1234, %1235, %1236, %1237)
}

def @func_14606() -> (Tensor[(9, 4, 12), float32],) {
  %1238 = @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %1239 = %1238.0;
  (%1239,)
}

def @func_14871() -> Tensor[(15, 9, 14), float64] {
  @func_6731() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_7024(%var_7007: Tensor[(15, 9, 14), float64]) -> (Tensor[(1890), float64], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(528), int32], Tensor[(15, 9, 14), bool], Tensor[(1170), int32]) {
  %1240 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %1241 = cast(meta[relay.Constant][60] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1242 = reshape(%1241, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
  %1243 = @func_5006() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */;
  %1244 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %1245 = %1244.0;
  %1246 = cast(%var_7007, dtype="bool") /* ty=Tensor[(15, 9, 14), bool] */;
  %1247 = shape_of(%1245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1248 = cast(%1245, dtype="bool") /* ty=Tensor[(15, 9, 14), bool] */;
  %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1250 = cast(%1245, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %1251 = reshape(%1250, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %1252 = @func_860(%1251) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %1253 = %1240.1;
  %1254 = @func_4420(%1242) /* ty=Tensor[(1, 12, 10), float64] */;
  %1255 = %1243.4;
  %1256 = logical_and(%1248, %1249) /* ty=Tensor[(15, 9, 14), bool] */;
  %1257 = %1252.2;
  (%1253, %1254, meta[relay.Constant][60] /* ty=Tensor[(120), float64] */, %1255, %1256, %1257)
}

def @func_12140() -> (Tensor[(528), int32], Tensor[(1170), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64]) {
  %1258 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %1259 = @func_10083() /* ty=(Tensor[(1890), float32],) */;
  %1260 = @func_9871() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %1261 = @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %1262 = @func_5809() /* ty=Tensor[(528), int32] */;
  %1263 = %1258.2;
  %1264 = %1259.0;
  %1265 = %1260.0;
  %1266 = %1261.0;
  %1267 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
  (%1262, %1263, %1264, %1265, %1266, %1267)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10655() -> Tensor[(1890), float64] {
  @func_10653() /* ty=Tensor[(1890), float64] */
}

def @func_6569(%var_6565: Tensor[(3360), uint64]) -> (Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) {
  %0 = cast(%var_6565, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %1 = reshape(%0, newshape=[140, 24]) /* ty=Tensor[(140, 24), uint64] */;
  %2 = @func_5584(%1) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 15, 14), uint64], Tensor[(140, 24), uint64]) */;
  %3 = @func_4885() /* ty=Tensor[(1890), float32] */;
  %4 = %2.0;
  (%3, %4, %var_6565)
}

def @func_15299() -> Tensor[(528), int32] {
  @func_15297() /* ty=Tensor[(528), int32] */
}

def @func_12344() -> (Tensor[(1890), float64], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) {
  %12 = fn () -> (Tensor[(1890), float64], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) {
    %5 = @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
    %7 = reshape(%6, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
    %8 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %9 = %5.1;
    %10 = @func_1091(%7) /* ty=Tensor[(3, 9, 12), float64] */;
    %11 = %8.0;
    (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(324), float64] */, %11)
  };
  %12() /* ty=(Tensor[(1890), float64], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_5026() -> (Tensor[(1890), float32],) {
  %13 = @func_4885() /* ty=Tensor[(1890), float32] */;
  (%13,)
}

def @func_7506() -> (Tensor[(15, 9, 14), float64], Tensor[(165), uint32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), uint16], Tensor[(9, 4, 12), float32], Tensor[(3, 11, 5), int32]) {
  @func_7504() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(165), uint32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), uint16], Tensor[(9, 4, 12), float32], Tensor[(3, 11, 5), int32]) */
}

def @func_12680() -> (Tensor[(528), int32], int32, Tensor[(528), int32], Tensor[(528), int64], Tensor[(1890), float64]) {
  @func_12678() /* ty=(Tensor[(528), int32], int32, Tensor[(528), int32], Tensor[(528), int64], Tensor[(1890), float64]) */
}

def @func_9610() -> (Tensor[(528), int32], Tensor[(2, 264), int32]) {
  %19 = fn () -> (Tensor[(528), int32], Tensor[(2, 264), int32]) {
    %14 = @func_7372() /* ty=Tensor[(528), int32] */;
    %15 = cast(%14, dtype="int32") /* ty=Tensor[(528), int32] */;
    %16 = reshape(%15, newshape=[2, 264]) /* ty=Tensor[(2, 264), int32] */;
    %17 = @func_8736(%16) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int64], Tensor[(2, 264), int32]) */;
    %18 = %17.2;
    (%14, %18)
  };
  %19() /* ty=(Tensor[(528), int32], Tensor[(2, 264), int32]) */
}

def @func_8187(%var_8182: Tensor[(528), int32]) -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) {
  %20 = @func_5642() /* ty=Tensor[(528), int32] */;
  %21 = cast(%var_8182, dtype="int64") /* ty=Tensor[(528), int64] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(1), int32] */;
  %23 = cast(%20, dtype="int64") /* ty=Tensor[(528), int64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?), int64] */;
  %25 = @func_6780() /* ty=Tensor[(1890), float64] */;
  %26 = @func_6281() /* ty=Tensor[(1890), float64] */;
  %27 = @func_4885() /* ty=Tensor[(1890), float32] */;
  %28 = bitwise_xor(%23, %24) /* ty=Tensor[(528), int64] */;
  (%25, %26, %27, %28)
}

def @func_6076() -> Tensor[(15, 9, 14), float64] {
  %30 = fn () -> Tensor[(15, 9, 14), float64] {
    %29 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
    %29.0
  };
  %30() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_5028() -> (Tensor[(1890), float32],) {
  @func_5026() /* ty=(Tensor[(1890), float32],) */
}

def @func_5884() -> int32 {
  %32 = fn () -> int32 {
    %31 = @func_5006() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */;
    %31.3
  };
  %32() /* ty=int32 */
}

def @func_12563(%var_12516: Tensor[(64), uint64], %var_12517: Tensor[(2, 64), uint64], %var_12518: Tensor[(55), bool]) -> (Tensor[(15, 9, 14), uint64], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(64), uint64], Tensor[(2, 64), uint64], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(324, 1), float64], Tensor[(400), float64], Tensor[(15, 9, 14), float64]) {
  %33 = @func_12243() /* ty=(int32, Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), uint64]) */;
  %34 = cast(%var_12516, dtype="uint64") /* ty=Tensor[(64), uint64] */;
  %35 = cast(%var_12517, dtype="uint64") /* ty=Tensor[(2, 64), uint64] */;
  %36 = cast(%var_12518, dtype="bool") /* ty=Tensor[(55), bool] */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(324, 1), float64] */, dtype="float64") /* ty=Tensor[(324, 1), float64] */;
  %39 = reshape(%34, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), uint64] */;
  %40 = reshape(%35, newshape=[4, 16, 2]) /* ty=Tensor[(4, 16, 2), uint64] */;
  %41 = reshape(%36, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %42 = reshape(%37, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %43 = reshape(%38, newshape=[1, 324]) /* ty=Tensor[(1, 324), float64] */;
  %44 = @func_3351(%39, %40, %41, %42, %43) /* ty=(Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(324, 1), float64] */, dtype="float64") /* ty=Tensor[(324, 1), float64] */;
  %46 = @func_10375() /* ty=Tensor[(15, 9, 14), float64] */;
  %47 = cast(%46, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %48 = reshape(%45, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %49 = reshape(%47, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %50 = @func_6058(%48, %49) /* ty=(Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %51 = %50.2;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(400), float64] */;
  %53 = @func_7061() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %54 = %33.3;
  %55 = %44.4;
  %56 = log2(%52) /* ty=Tensor[(400), float64] */;
  %57 = %53.1;
  (%54, %46, %55, %var_12516, %var_12517, %var_12518, meta[relay.Constant][1] /* ty=Tensor[(400), uint8] */, meta[relay.Constant][2] /* ty=Tensor[(324, 1), float64] */, %56, %57)
}

def @func_8042(%var_8040: Tensor[(1890), float32]) -> (Tensor[(1890), float64],) {
  @func_8039(%var_8040) /* ty=(Tensor[(1890), float64],) */
}

def @func_10720() -> (Tensor[(15, 9, 14), float64], Tensor[(?, 12, 10), float64], Tensor[(6, 13, 15), bool], Tensor[(1890), float64], Tensor[(15, 9, 14), float32], Tensor[(528), int32]) {
  %58 = @func_10643() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */;
  %59 = cast(meta[relay.Constant][3] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %60 = reshape(%59, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
  %61 = @func_4420(%60) /* ty=Tensor[(1, 12, 10), float64] */;
  %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%61, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %66 = %58.1;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %68 = reshape(%67, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %69 = @func_860(%68) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %70 = cast(%66, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %71 = reshape(%70, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %72 = @func_8039(%71) /* ty=(Tensor[(1890), float64],) */;
  %73 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
  %74 = subtract(%64, %65) /* ty=Tensor[(?, 12, 10), float64] */;
  %75 = %69.1;
  %76 = %72.0;
  %77 = %73.0;
  %78 = @func_7372() /* ty=Tensor[(528), int32] */;
  (%66, %74, %75, %76, %77, %78)
}

def @func_10672() -> (Tensor[(15, 9, 14), float64],) {
  @func_10670() /* ty=(Tensor[(15, 9, 14), float64],) */
}

def @func_5007() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) {
  %87 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) {
    %79 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %80 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %81 = cast(meta[relay.Constant][4] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
    %82 = reshape(%80, newshape=[]) /* ty=int32 */;
    %83 = reshape(%81, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), int32] */;
    %84 = %79.0;
    %85 = @func_4885() /* ty=Tensor[(1890), float32] */;
    %86 = @func_4079(%82, %83) /* ty=Tensor[(12, 4, 11), int32] */;
    (%84, %85, %86, 7 /* ty=int32 */, meta[relay.Constant][4] /* ty=Tensor[(528), int32] */)
  };
  %87() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */
}

def @func_15449() -> Tensor[(15, 9, 14), float64] {
  @func_15447() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_7062() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %92 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
    %88 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %89 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
    %90 = %88.0;
    %91 = %89.0;
    (%90, %91)
  };
  %92() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_10722() -> (Tensor[(15, 9, 14), float64], Tensor[(?, 12, 10), float64], Tensor[(6, 13, 15), bool], Tensor[(1890), float64], Tensor[(15, 9, 14), float32], Tensor[(528), int32]) {
  @func_10720() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(?, 12, 10), float64], Tensor[(6, 13, 15), bool], Tensor[(1890), float64], Tensor[(15, 9, 14), float32], Tensor[(528), int32]) */
}

def @func_6206(%var_6193: Tensor[(390, 3), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) {
  %93 = @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %94 = cast(meta[relay.Constant][5] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %95 = cast(meta[relay.Constant][5] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %96 = reshape(%94, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %97 = reshape(%95, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %98 = @func_5505(%96, %97) /* ty=(Tensor[(3, 3, 3), float32],) */;
  %99 = cast(meta[relay.Constant][5] /* ty=Tensor[(27), float32] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %100 = cast(%var_6193, dtype="int32") /* ty=Tensor[(390, 3), int32] */;
  %101 = cast(%var_6193, dtype="int32") /* ty=Tensor[(390, 3), int32] */;
  %102 = reshape(%100, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %103 = reshape(%101, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %104 = %93.2;
  %105 = %98.0;
  %106 = log10(%99) /* ty=Tensor[(27), float64] */;
  %107 = @func_458(%102, %103) /* ty=Tensor[(6, 13, 15), bool] */;
  (%104, %105, %106, %107, %var_6193)
}

def @func_8190(%var_8188: Tensor[(528), int32]) -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) {
  @func_8187(%var_8188) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */
}

def @func_860(%var_836: Tensor[(15, 9, 14), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
  %108 = cast(%var_836, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %110 = cast(meta[relay.Constant][6] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %111 = reshape(%109, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %112 = reshape(%110, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
  %113 = erf(%108) /* ty=Tensor[(15, 9, 14), float64] */;
  %114 = @func_458(%111, %112) /* ty=Tensor[(6, 13, 15), bool] */;
  (%113, %114, meta[relay.Constant][6] /* ty=Tensor[(1170), int32] */)
}

def @func_11287(%var_11254: Tensor[(55), bool]) -> (Tensor[(55), bool], Tensor[(1890), bool], Tensor[(140, 24), bool]) {
  %115 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %116 = %115.0;
  %117 = @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %118 = %117.0;
  %119 = cast(%118, dtype="bool") /* ty=Tensor[(15, 9, 14), bool] */;
  %120 = shape_of(%116, dtype="int32") /* ty=Tensor[(1), int32] */;
  %121 = cast(%116, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?), bool] */;
  %123 = cast(%var_11254, dtype="bool") /* ty=Tensor[(55), bool] */;
  %124 = reshape(%123, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %125 = @func_7847(%124) /* ty=(Tensor[(165), uint32], Tensor[(140, 24), bool], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(18, 18), float64], Tensor[(252), float64]) */;
  %126 = %125.1;
  %127 = cast(%126, dtype="float64") /* ty=Tensor[(140, 24), float64] */;
  %128 = rsqrt(%127) /* ty=Tensor[(140, 24), float64] */;
  %129 = cast(%128, dtype="bool") /* ty=Tensor[(140, 24), bool] */;
  %130 = shape_of(%126, dtype="int32") /* ty=Tensor[(2), int32] */;
  %131 = cast(%126, dtype="bool") /* ty=Tensor[(140, 24), bool] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %133 = greater_equal(%121, %122) /* ty=Tensor[(1890), bool] */;
  %134 = not_equal(%131, %132) /* ty=Tensor[(140, 24), bool] */;
  (%var_11254, %133, %134)
}

def @func_9926(%var_9913: Tensor[(55), bool], %var_9914: Tensor[(1890), float64]) -> (Tensor[(3, 9, 12), float64], Tensor[(6, 13, 15), bool], Tensor[(252), float64], Tensor[(55), bool], Tensor[(1890), float64]) {
  %135 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %136 = cast(meta[relay.Constant][7] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %137 = cast(%var_9913, dtype="bool") /* ty=Tensor[(55), bool] */;
  %138 = cast(%var_9914, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %139 = reshape(%136, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float64] */;
  %140 = reshape(%137, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %141 = reshape(%138, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %142 = @func_3716(%139, %140, %141) /* ty=(Tensor[(4, 7, 9), float64], Tensor[(?, 324), float32], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(15, 9, 7), float64], Tensor[(400), uint8], Tensor[(1890), float64], Tensor[(6, 13, 15), bool], Tensor[(1, 11, 5), float64], Tensor[(6, 13, 15), bool]) */;
  %143 = %135.1;
  %144 = %142.7;
  (%143, %144, meta[relay.Constant][7] /* ty=Tensor[(252), float64] */, %var_9913, %var_9914)
}

def @func_7374() -> Tensor[(528), int32] {
  @func_7372() /* ty=Tensor[(528), int32] */
}

def @func_14871() -> Tensor[(15, 9, 14), float64] {
  @func_6731() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_11028(%var_11027: Tensor[(12, 12, 14), float32]) -> (Tensor[(12, 12, 14), float32], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16], Tensor[(15, 9, 14), float64], Tensor[(12, 12, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(1890), float64], Tensor[(528), int32], Tensor[(7, 6, 16), uint16], Tensor[(3360), uint64]) {
  %176 = fn (%var_10911: Tensor[(12, 12, 14), float32]) -> (Tensor[(12, 12, 14), float32], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16], Tensor[(15, 9, 14), float64], Tensor[(12, 12, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(1890), float64], Tensor[(528), int32], Tensor[(7, 6, 16), uint16], Tensor[(3360), uint64]) {
    %145 = cast(%var_10911, dtype="float32") /* ty=Tensor[(12, 12, 14), float32] */;
    %146 = cast(meta[relay.Constant][8] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %148 = reshape(%146, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
    %149 = reshape(%147, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
    %150 = @func_6425(%148, %149) /* ty=(Tensor[(7, 6, 16), uint16],) */;
    %151 = @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
    %152 = cast(%var_10911, dtype="float32") /* ty=Tensor[(12, 12, 14), float32] */;
    %153 = sqrt(%152) /* ty=Tensor[(12, 12, 14), float32] */;
    %154 = cast(%153, dtype="float64") /* ty=Tensor[(12, 12, 14), float64] */;
    %155 = shape_of(%var_10911, dtype="int32") /* ty=Tensor[(3), int32] */;
    %156 = cast(%var_10911, dtype="float64") /* ty=Tensor[(12, 12, 14), float64] */;
    %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %158 = floor_divide(%156, %157) /* ty=Tensor[(12, 12, 14), float64] */;
    %159 = cast(%158, dtype="float32") /* ty=Tensor[(12, 12, 14), float32] */;
    %160 = @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */;
    %161 = cast(meta[relay.Constant][9] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
    %162 = reshape(%161, newshape=[528]) /* ty=Tensor[(528), int32] */;
    %163 = @func_8187(%162) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */;
    %164 = cast(meta[relay.Constant][10] /* ty=Tensor[(3360), uint64] */, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
    %165 = reshape(%164, newshape=[3360]) /* ty=Tensor[(3360), uint64] */;
    %166 = @func_9524(%165) /* ty=(Tensor[(1890), float64], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), float64]) */;
    %167 = sin(%145) /* ty=Tensor[(12, 12, 14), float32] */;
    %168 = %150.0;
    %169 = %151.0;
    %170 = sigmoid(%159) /* ty=Tensor[(12, 12, 14), float32] */;
    %171 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
    %172 = @func_6075() /* ty=Tensor[(15, 9, 14), float64] */;
    %173 = %160.1;
    %174 = %163.0;
    %175 = %166.3;
    (%167, %168, meta[relay.Constant][8] /* ty=Tensor[(672), uint16] */, %169, %170, %171, %172, %173, %174, meta[relay.Constant][9] /* ty=Tensor[(528), int32] */, %175, meta[relay.Constant][10] /* ty=Tensor[(3360), uint64] */)
  };
  %176(%var_11027) /* ty=(Tensor[(12, 12, 14), float32], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16], Tensor[(15, 9, 14), float64], Tensor[(12, 12, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(1890), float64], Tensor[(528), int32], Tensor[(7, 6, 16), uint16], Tensor[(3360), uint64]) */
}

def @func_3357(%var_3352: Tensor[(4, 16, 1), uint64], %var_3353: Tensor[(4, 16, 2), uint64], %var_3354: Tensor[(55), bool], %var_3355: Tensor[(400), uint8], %var_3356: Tensor[(1, 324), float64]) -> (Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) {
  %196 = fn (%var_3266: Tensor[(4, 16, 1), uint64], %var_3267: Tensor[(4, 16, 2), uint64], %var_3281: Tensor[(55), bool], %var_3328: Tensor[(400), uint8], %var_3329: Tensor[(1, 324), float64]) -> (Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) {
    %177 = cast(%var_3266, dtype="uint64") /* ty=Tensor[(4, 16, 1), uint64] */;
    %178 = cast(%var_3267, dtype="uint64") /* ty=Tensor[(4, 16, 2), uint64] */;
    %179 = cast(%var_3281, dtype="bool") /* ty=Tensor[(55), bool] */;
    %180 = cast(%var_3281, dtype="bool") /* ty=Tensor[(55), bool] */;
    %181 = reshape(%179, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
    %182 = reshape(%180, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
    %183 = @func_2811(%181, %182) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
    %184 = cast(%var_3266, dtype="float32") /* ty=Tensor[(4, 16, 1), float32] */;
    %185 = cast(%var_3328, dtype="uint8") /* ty=Tensor[(400), uint8] */;
    %186 = cast(%var_3329, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
    %187 = cast(meta[relay.Constant][11] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %188 = reshape(%185, newshape=[400]) /* ty=Tensor[(400), uint8] */;
    %189 = reshape(%186, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %190 = reshape(%187, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
    %191 = @func_2236(%188, %189, %190) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
    %192 = logical_xor(%177, %178) /* ty=Tensor[(4, 16, 2), uint64] */;
    %193 = %183.0;
    %194 = tan(%184) /* ty=Tensor[(4, 16, 1), float32] */;
    %195 = %191.2;
    (%192, %193, %var_3281, %194, %195, %var_3328, %var_3329, meta[relay.Constant][11] /* ty=Tensor[(1890), float64] */)
  };
  %196(%var_3352, %var_3353, %var_3354, %var_3355, %var_3356) /* ty=(Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) */
}

def @func_14739() -> (Tensor[(1890), float32], Tensor[(528), int32], Tensor[(15, 9, 14), float32], Tensor[(9, 4, 12), float32]) {
  %202 = fn () -> (Tensor[(1890), float32], Tensor[(528), int32], Tensor[(15, 9, 14), float32], Tensor[(9, 4, 12), float32]) {
    %197 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
    %198 = @func_6255() /* ty=Tensor[(1890), float32] */;
    %199 = @func_7372() /* ty=Tensor[(528), int32] */;
    %200 = %197.0;
    %201 = @func_13037() /* ty=Tensor[(9, 4, 12), float32] */;
    (%198, %199, %200, %201)
  };
  %202() /* ty=(Tensor[(1890), float32], Tensor[(528), int32], Tensor[(15, 9, 14), float32], Tensor[(9, 4, 12), float32]) */
}

def @func_15375() -> (Tensor[(15, 9, 14), float32], Tensor[(3, 9, 12), float64]) {
  @func_15373() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(3, 9, 12), float64]) */
}

def @func_9980() -> (Tensor[(9, 4, 12), float32], Tensor[(5, 4, 13), float32], Tensor[(260), float32]) {
  %209 = fn () -> (Tensor[(9, 4, 12), float32], Tensor[(5, 4, 13), float32], Tensor[(260), float32]) {
    %203 = @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */;
    %204 = cast(meta[relay.Constant][12] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %205 = reshape(%204, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), float32] */;
    %206 = @func_8448(%205) /* ty=(Tensor[(5, 4, 13), float32],) */;
    %207 = %203.0;
    %208 = %206.0;
    (%207, %208, meta[relay.Constant][12] /* ty=Tensor[(260), float32] */)
  };
  %209() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(5, 4, 13), float32], Tensor[(260), float32]) */
}

def @func_10517() -> (Tensor[(1890), float64],) {
  @func_10515() /* ty=(Tensor[(1890), float64],) */
}

def @func_14565() -> Tensor[(15, 9, 14), float64] {
  @func_6731() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_4885() -> Tensor[(1890), float32] {
  %210 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %211 = %210.0;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(1890), float32] */;
  atanh(%212) /* ty=Tensor[(1890), float32] */
}

def @func_5811() -> Tensor[(528), int32] {
  @func_5809() /* ty=Tensor[(528), int32] */
}

def @func_12678() -> (Tensor[(528), int32], int32, Tensor[(528), int32], Tensor[(528), int64], Tensor[(1890), float64]) {
  %213 = @func_10643() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */;
  %214 = %213.0;
  %215 = cast(%214, dtype="int32") /* ty=Tensor[(528), int32] */;
  %216 = reshape(%215, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %217 = @func_8187(%216) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */;
  %218 = @func_10515() /* ty=(Tensor[(1890), float64],) */;
  %219 = @func_10616() /* ty=Tensor[(528), int32] */;
  %220 = @func_5883() /* ty=int32 */;
  %221 = %217.3;
  %222 = %218.0;
  (%219, %220, %214, %221, %222)
}

def @func_9764() -> Tensor[(15, 9, 14), float32] {
  %223 = fn () -> Tensor[(15, 9, 14), float32] {
    @func_8209() /* ty=Tensor[(15, 9, 14), float32] */
  };
  %223() /* ty=Tensor[(15, 9, 14), float32] */
}

def @func_12568(%var_12565: Tensor[(64), uint64], %var_12566: Tensor[(2, 64), uint64], %var_12567: Tensor[(55), bool]) -> (Tensor[(15, 9, 14), uint64], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(64), uint64], Tensor[(2, 64), uint64], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(324, 1), float64], Tensor[(400), float64], Tensor[(15, 9, 14), float64]) {
  @func_12563(%var_12565, %var_12566, %var_12567) /* ty=(Tensor[(15, 9, 14), uint64], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(64), uint64], Tensor[(2, 64), uint64], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(324, 1), float64], Tensor[(400), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_6164() -> Tensor[(15, 9, 14), float64] {
  @func_6075() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_10595(%var_10593: Tensor[(4, 13, 16), float32]) -> (Tensor[(4, 13, 16), float32],) {
  @func_10592(%var_10593) /* ty=(Tensor[(4, 13, 16), float32],) */
}

def @func_5277(%var_5274: Tensor[(400), uint8], %var_5275: Tensor[(324), float64], %var_5276: Tensor[(126, 2), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(126, 2), float64], Tensor[(1, 55), bool], Tensor[(324), float64]) {
  @func_5272(%var_5274, %var_5275, %var_5276) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(126, 2), float64], Tensor[(1, 55), bool], Tensor[(324), float64]) */
}

def @func_5945() -> Tensor[(9, 4, 12), float32] {
  %224 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %224.0
}

def @func_8622(%var_8620: Tensor[(400), uint8], %var_8621: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) {
  %237 = fn (%var_8569: Tensor[(400), uint8], %var_8570: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) {
    %225 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %226 = cast(%var_8569, dtype="uint8") /* ty=Tensor[(400), uint8] */;
    %227 = cast(%var_8570, dtype="float64") /* ty=Tensor[(324), float64] */;
    %228 = %225.0;
    %229 = cast(%228, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
    %230 = reshape(%226, newshape=[400]) /* ty=Tensor[(400), uint8] */;
    %231 = reshape(%227, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %232 = reshape(%229, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
    %233 = @func_2236(%230, %231, %232) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
    %234 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
    %235 = %233.1;
    %236 = %234.0;
    (%228, %235, %var_8569, %var_8570, %236)
  };
  %237(%var_8620, %var_8621) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_6533(%var_6532: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(324), float64], Tensor[(9, 4, 12), float32], Tensor[(8, 50), int32]) {
  %254 = fn (%var_6518: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(324), float64], Tensor[(9, 4, 12), float32], Tensor[(8, 50), int32]) {
    %238 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
    %239 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 50), uint8] */, dtype="uint8") /* ty=Tensor[(8, 50), uint8] */;
    %240 = cast(%var_6518, dtype="float64") /* ty=Tensor[(324), float64] */;
    %241 = %238.0;
    %242 = cast(%241, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
    %243 = reshape(%239, newshape=[400]) /* ty=Tensor[(400), uint8] */;
    %244 = reshape(%240, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %245 = reshape(%242, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
    %246 = @func_2236(%243, %244, %245) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
    %247 = %246.2;
    %248 = cast(%247, dtype="int32") /* ty=Tensor[(400), int32] */;
    %249 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(8, 50), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %250 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 50), uint8] */, dtype="int32") /* ty=Tensor[(8, 50), int32] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %252 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
    %253 = subtract(%250, %251) /* ty=Tensor[(8, 50), int32] */;
    (%241, %var_6518, %252, %253)
  };
  %254(%var_6532) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(324), float64], Tensor[(9, 4, 12), float32], Tensor[(8, 50), int32]) */
}

def @func_9271(%var_9260: Tensor[(1890), float64]) -> (Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
  %255 = @func_7197() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */;
  %256 = cast(meta[relay.Constant][14] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %257 = cast(%var_9260, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %258 = reshape(%256, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %259 = reshape(%257, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %260 = @func_6058(%258, %259) /* ty=(Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %261 = %255.0;
  %262 = %260.2;
  (%261, %262, meta[relay.Constant][14] /* ty=Tensor[(324), float64] */, %var_9260)
}

def @func_7091() -> (Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) {
  @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */
}

def @func_15373() -> (Tensor[(15, 9, 14), float32], Tensor[(3, 9, 12), float64]) {
  %263 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
  %264 = %263.0;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %266 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %267 = rsqrt(%265) /* ty=Tensor[(15, 9, 14), float32] */;
  %268 = %266.1;
  (%267, %268)
}

def @func_13084() -> (Tensor[(15, 9, 14), float64],) {
  %269 = @func_10670() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %270 = %269.0;
  (%270,)
}

def @func_12736(%var_12710: Tensor[(27), float32]) -> (Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(3, 3, 3), float32], Tensor[(27), float32], Tensor[(528), int32]) {
  %271 = @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %272 = @func_9620() /* ty=(Tensor[(528), int32],) */;
  %273 = cast(%var_12710, dtype="float32") /* ty=Tensor[(27), float32] */;
  %274 = cast(%var_12710, dtype="float32") /* ty=Tensor[(27), float32] */;
  %275 = reshape(%273, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %276 = reshape(%274, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %277 = @func_5505(%275, %276) /* ty=(Tensor[(3, 3, 3), float32],) */;
  %278 = %271.0;
  %279 = %272.0;
  %280 = %277.0;
  %281 = @func_7957() /* ty=Tensor[(528), int32] */;
  (%278, %279, %280, %var_12710, %281)
}

def @func_3721(%var_3718: Tensor[(4, 7, 9), float64], %var_3719: Tensor[(55), bool], %var_3720: Tensor[(1890), float64]) -> (Tensor[(4, 7, 9), float64], Tensor[(?, 324), float32], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(15, 9, 7), float64], Tensor[(400), uint8], Tensor[(1890), float64], Tensor[(6, 13, 15), bool], Tensor[(1, 11, 5), float64], Tensor[(6, 13, 15), bool]) {
  @func_3716(%var_3718, %var_3719, %var_3720) /* ty=(Tensor[(4, 7, 9), float64], Tensor[(?, 324), float32], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(15, 9, 7), float64], Tensor[(400), uint8], Tensor[(1890), float64], Tensor[(6, 13, 15), bool], Tensor[(1, 11, 5), float64], Tensor[(6, 13, 15), bool]) */
}

def @func_7850(%var_7848: Tensor[(55), bool]) -> (Tensor[(165), uint32], Tensor[(140, 24), bool], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(18, 18), float64], Tensor[(252), float64]) {
  @func_7847(%var_7848) /* ty=(Tensor[(165), uint32], Tensor[(140, 24), bool], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(18, 18), float64], Tensor[(252), float64]) */
}

def @func_8234() -> Tensor[(528), int32] {
  @func_5809() /* ty=Tensor[(528), int32] */
}

def @func_9324() -> (Tensor[(324, 1), float64],) {
  %282 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %283 = %282.2;
  (%283,)
}

def @func_14792() -> (Tensor[(15, 9, 14), float32], Tensor[(5, 4, 13), float32], Tensor[(260), float32]) {
  %290 = fn () -> (Tensor[(15, 9, 14), float32], Tensor[(5, 4, 13), float32], Tensor[(260), float32]) {
    %284 = @func_14160() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(1890), float64]) */;
    %285 = cast(meta[relay.Constant][15] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %286 = reshape(%285, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), float32] */;
    %287 = @func_8448(%286) /* ty=(Tensor[(5, 4, 13), float32],) */;
    %288 = %284.0;
    %289 = %287.0;
    (%288, %289, meta[relay.Constant][15] /* ty=Tensor[(260), float32] */)
  };
  %290() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(5, 4, 13), float32], Tensor[(260), float32]) */
}

def @func_7833() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  @func_7831() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_10653() -> Tensor[(1890), float64] {
  %291 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %291.0
}

def @func_14453(%var_14451: Tensor[(55), bool], %var_14452: Tensor[(1, 120), float64]) -> (Tensor[(9, 4, 12), float32], Tensor[(55), bool], Tensor[(55), bool], Tensor[(1, 12, 10), float64], Tensor[(1, 120), float64]) {
  %301 = fn (%var_14437: Tensor[(55), bool], %var_14441: Tensor[(1, 120), float64]) -> (Tensor[(9, 4, 12), float32], Tensor[(55), bool], Tensor[(55), bool], Tensor[(1, 12, 10), float64], Tensor[(1, 120), float64]) {
    %292 = @func_7150() /* ty=(Tensor[(9, 4, 12), float32],) */;
    %293 = cast(%var_14437, dtype="bool") /* ty=Tensor[(55), bool] */;
    %294 = reshape(%293, newshape=[55]) /* ty=Tensor[(55), bool] */;
    %295 = @func_11287(%294) /* ty=(Tensor[(55), bool], Tensor[(1890), bool], Tensor[(140, 24), bool]) */;
    %296 = cast(%var_14441, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
    %297 = reshape(%296, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
    %298 = %292.0;
    %299 = %295.0;
    %300 = @func_4420(%297) /* ty=Tensor[(1, 12, 10), float64] */;
    (%298, %299, %var_14437, %300, %var_14441)
  };
  %301(%var_14451, %var_14452) /* ty=(Tensor[(9, 4, 12), float32], Tensor[(55), bool], Tensor[(55), bool], Tensor[(1, 12, 10), float64], Tensor[(1, 120), float64]) */
}

def @func_13336(%var_13335: Tensor[(672), uint16]) -> (Tensor[(9, 4, 12), float32], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16], Tensor[(?, 11, 6), bool]) {
  %319 = fn (%var_13295: Tensor[(672), uint16]) -> (Tensor[(9, 4, 12), float32], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16], Tensor[(?, 11, 6), bool]) {
    %302 = @func_7150() /* ty=(Tensor[(9, 4, 12), float32],) */;
    %303 = cast(%var_13295, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %304 = cast(%var_13295, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %305 = reshape(%303, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
    %306 = reshape(%304, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
    %307 = @func_6425(%305, %306) /* ty=(Tensor[(7, 6, 16), uint16],) */;
    %308 = cast(meta[relay.Constant][16] /* ty=Tensor[(66, 1), float32] */, dtype="float32") /* ty=Tensor[(66, 1), float32] */;
    %309 = reshape(%308, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
    %310 = @func_9633(%309) /* ty=(Tensor[(1, 11, 6), float32],) */;
    %311 = %310.0;
    %312 = cast(meta[relay.Constant][16] /* ty=Tensor[(66, 1), float32] */, dtype="bool") /* ty=Tensor[(66, 1), bool] */;
    %313 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %314 = cast(%311, dtype="bool") /* ty=Tensor[(1, 11, 6), bool] */;
    %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %316 = %302.0;
    %317 = %307.0;
    %318 = equal(%314, %315) /* ty=Tensor[(?, 11, 6), bool] */;
    (%316, %317, %var_13295, %318)
  };
  %319(%var_13335) /* ty=(Tensor[(9, 4, 12), float32], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16], Tensor[(?, 11, 6), bool]) */
}

def @func_11150(%var_11147: Tensor[(120), float64], %var_11148: Tensor[(324), float64], %var_11149: Tensor[(130, 9), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(120), float64], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), int32]) {
  @func_11145(%var_11147, %var_11148, %var_11149) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(120), float64], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), int32]) */
}

def @func_4817() -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) {
  @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */
}

def @func_12987() -> (Tensor[(1890), float64],) {
  %320 = @func_11382() /* ty=Tensor[(1890), float64] */;
  (%320,)
}

def @func_13605(%var_13587: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), float64], Tensor[(15, 9, 14), float32]) {
  %321 = cast(%var_13587, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %322 = exp(%321) /* ty=Tensor[(11, 11, 15), float64] */;
  %323 = @func_9763() /* ty=Tensor[(15, 9, 14), float32] */;
  (%322, %323)
}

def @func_14162() -> (Tensor[(15, 9, 14), float32], Tensor[(1890), float64]) {
  @func_14160() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(1890), float64]) */
}

def @func_14845() -> (Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %324 = @func_7409() /* ty=(Tensor[(1890), float32],) */;
  %325 = %324.0;
  %326 = @func_6075() /* ty=Tensor[(15, 9, 14), float64] */;
  %327 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  (%325, %326, %327)
}

def @func_14927(%var_14926: Tensor[(5, 52), float32]) -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(5, 4, 13), float32], Tensor[(5, 52), float32]) {
  %336 = fn (%var_14921: Tensor[(5, 52), float32]) -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(5, 4, 13), float32], Tensor[(5, 52), float32]) {
    %328 = @func_12488() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(1, 11, 6), float32], Tensor[(66), float32], Tensor[(1890), float64]) */;
    %329 = @func_10670() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %330 = cast(%var_14921, dtype="float32") /* ty=Tensor[(5, 52), float32] */;
    %331 = reshape(%330, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), float32] */;
    %332 = @func_8448(%331) /* ty=(Tensor[(5, 4, 13), float32],) */;
    %333 = %328.3;
    %334 = %329.0;
    %335 = %332.0;
    (%333, %334, %335, %var_14921)
  };
  %336(%var_14926) /* ty=(Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(5, 4, 13), float32], Tensor[(5, 52), float32]) */
}

def @func_6379(%var_6378: Tensor[(3, 11, 5), uint32]) -> (Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) {
  %347 = fn (%var_6360: Tensor[(3, 11, 5), uint32]) -> (Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) {
    %337 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 11, 5), uint32] */, dtype="bool") /* ty=Tensor[(3, 11, 5), bool] */;
    %338 = shape_of(%var_6360, dtype="int32") /* ty=Tensor[(3), int32] */;
    %339 = cast(%var_6360, dtype="bool") /* ty=Tensor[(3, 11, 5), bool] */;
    %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %341 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 11, 5), uint32] */, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
    %342 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
    %343 = not_equal(%339, %340) /* ty=Tensor[(3, 11, 5), bool] */;
    %344 = @func_5809() /* ty=Tensor[(528), int32] */;
    %345 = acosh(%341) /* ty=Tensor[(3, 11, 5), float32] */;
    %346 = %342.0;
    (%343, %344, %345, %346)
  };
  %347(%var_6378) /* ty=(Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) */
}

def @func_462(%var_460: Tensor[(6, 13, 15), int32], %var_461: Tensor[(6, 13, 15), int32]) -> Tensor[(6, 13, 15), bool] {
  @func_458(%var_460, %var_461) /* ty=Tensor[(6, 13, 15), bool] */
}

def @func_7410() -> (Tensor[(1890), float32],) {
  %351 = fn () -> (Tensor[(1890), float32],) {
    %348 = @func_6255() /* ty=Tensor[(1890), float32] */;
    %349 = cast(%348, dtype="float32") /* ty=Tensor[(1890), float32] */;
    %350 = sqrt(%349) /* ty=Tensor[(1890), float32] */;
    (%350,)
  };
  %351() /* ty=(Tensor[(1890), float32],) */
}

def @func_15417(%var_15412: Tensor[(324, 7), float64]) -> (Tensor[(324, 7), bool],) {
  %352 = @func_13579() /* ty=(Tensor[(324, 1), float64], Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(324, 3), bool], Tensor[(1890), int64]) */;
  %353 = %352.0;
  %354 = cast(%353, dtype="bool") /* ty=Tensor[(324, 1), bool] */;
  %355 = cast(%var_15412, dtype="bool") /* ty=Tensor[(324, 7), bool] */;
  %356 = equal(%354, %355) /* ty=Tensor[(324, 7), bool] */;
  (%356,)
}

def @func_15447() -> Tensor[(15, 9, 14), float64] {
  %357 = @func_10643() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */;
  %357.1
}

def @func_9635(%var_9634: Tensor[(1, 11, 6), float32]) -> (Tensor[(1, 11, 6), float32],) {
  %360 = fn (%var_9628: Tensor[(1, 11, 6), float32]) -> (Tensor[(1, 11, 6), float32],) {
    %358 = cast(%var_9628, dtype="float32") /* ty=Tensor[(1, 11, 6), float32] */;
    %359 = exp(%358) /* ty=Tensor[(1, 11, 6), float32] */;
    (%359,)
  };
  %360(%var_9634) /* ty=(Tensor[(1, 11, 6), float32],) */
}

def @func_13798() -> int32 {
  %361 = fn () -> int32 {
    @func_5883() /* ty=int32 */
  };
  %361() /* ty=int32 */
}

def @func_14607() -> (Tensor[(9, 4, 12), float32],) {
  %364 = fn () -> (Tensor[(9, 4, 12), float32],) {
    %362 = @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */;
    %363 = %362.0;
    (%363,)
  };
  %364() /* ty=(Tensor[(9, 4, 12), float32],) */
}

def @func_8839() -> (Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) {
  @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */
}

def @main(%var_15480: Tensor[(2, 10, 3), float64]) -> (Tensor[(2, 10, 3), float32],) {
  %365 = cast(%var_15480, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %366 = sqrt(%365) /* ty=Tensor[(2, 10, 3), float64] */;
  %367 = cast(%366, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  %368 = acosh(%367) /* ty=Tensor[(2, 10, 3), float32] */;
  (%368,)
}

def @func_5644() -> Tensor[(528), int32] {
  @func_5642() /* ty=Tensor[(528), int32] */
}

def @func_15264() -> Tensor[(528), int32] {
  %370 = fn () -> Tensor[(528), int32] {
    %369 = @func_9620() /* ty=(Tensor[(528), int32],) */;
    %369.0
  };
  %370() /* ty=Tensor[(528), int32] */
}

def @func_9274(%var_9272: Tensor[(1890), float64]) -> (Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
  @func_9271(%var_9272) /* ty=(Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */
}

def @func_10049() -> (Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) {
  %380 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) {
    %371 = @func_9871() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %372 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %373 = @func_7957() /* ty=Tensor[(528), int32] */;
    %374 = cast(%373, dtype="int32") /* ty=Tensor[(528), int32] */;
    %375 = reshape(%372, newshape=[]) /* ty=int32 */;
    %376 = reshape(%374, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), int32] */;
    %377 = %371.0;
    %378 = @func_4079(%375, %376) /* ty=Tensor[(12, 4, 11), int32] */;
    %379 = @func_9763() /* ty=Tensor[(15, 9, 14), float32] */;
    (%377, %373, %378, 6 /* ty=int32 */, %379)
  };
  %380() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */
}

def @func_5508(%var_5506: Tensor[(3, 3, 3), float32], %var_5507: Tensor[(3, 3, 3), float32]) -> (Tensor[(3, 3, 3), float32],) {
  %386 = fn (%var_5497: Tensor[(3, 3, 3), float32], %var_5498: Tensor[(3, 3, 3), float32]) -> (Tensor[(3, 3, 3), float32],) {
    %381 = cast(%var_5498, dtype="float32") /* ty=Tensor[(3, 3, 3), float32] */;
    %382 = shape_of(%var_5497, dtype="int32") /* ty=Tensor[(3), int32] */;
    %383 = cast(%var_5497, dtype="float32") /* ty=Tensor[(3, 3, 3), float32] */;
    %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %385 = floor_mod(%383, %384) /* ty=Tensor[(3, 3, 3), float32] */;
    (%385,)
  };
  %386(%var_5506, %var_5507) /* ty=(Tensor[(3, 3, 3), float32],) */
}

def @func_9326() -> (Tensor[(324, 1), float64],) {
  @func_9324() /* ty=(Tensor[(324, 1), float64],) */
}

def @func_9463(%var_9422: Tensor[(3, 9, 12), float64]) -> (Tensor[(1890), float64], Tensor[(528), int32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(400), uint8], Tensor[(1890), float32], Tensor[(3, 9, 12), uint64], Tensor[(324), float64], Tensor[(3, 9, 12), float64]) {
  %387 = @func_6281() /* ty=Tensor[(1890), float64] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %389 = reshape(%388, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %390 = @func_9271(%389) /* ty=(Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %391 = cast(%387, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %392 = reshape(%391, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %393 = @func_9271(%392) /* ty=(Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %394 = @func_7940() /* ty=(Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %395 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %397 = reshape(%396, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %398 = @func_9271(%397) /* ty=(Tensor[(528), int32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
  %399 = @func_7994() /* ty=(Tensor[(1890), float32],) */;
  %400 = @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */;
  %401 = %400.0;
  %402 = cast(%var_9422, dtype="uint64") /* ty=Tensor[(3, 9, 12), uint64] */;
  %403 = shape_of(%401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(%401, dtype="uint64") /* ty=Tensor[(3, 9, 12), uint64] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %406 = %398.1;
  %407 = cast(%406, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %408 = cast(%406, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %409 = cast(%401, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %410 = %393.3;
  %411 = cast(%410, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %412 = reshape(%407, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %413 = reshape(%408, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %414 = reshape(%409, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %415 = reshape(%411, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %416 = @func_1829(%412, %413, %414, %415) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %417 = cast(%401, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %418 = %390.0;
  %419 = %394.0;
  %420 = %399.0;
  %421 = maximum(%404, %405) /* ty=Tensor[(3, 9, 12), uint64] */;
  %422 = %416.2;
  %423 = erf(%417) /* ty=Tensor[(3, 9, 12), float64] */;
  (%387, %418, %410, %395, %419, %406, %420, %421, %422, %423)
}

def @func_2236(%var_2168: Tensor[(400), uint8], %var_2169: Tensor[(324), float64], %var_2170: Tensor[(1890), float64]) -> (Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) {
  %424 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(15, 9, 7), float64] */;
  %425 = cast(%var_2168, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %426 = cast(%var_2168, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %427 = cast(%var_2169, dtype="float64") /* ty=Tensor[(324), float64] */;
  %428 = cast(%var_2170, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %429 = reshape(%425, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %430 = reshape(%426, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %431 = reshape(%427, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %432 = reshape(%428, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %433 = @func_1829(%429, %430, %431, %432) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %434 = %433.5;
  %435 = cast(%434, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %436 = reshape(%435, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %437 = @func_860(%436) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %438 = sigmoid(%424) /* ty=Tensor[(15, 9, 7), float64] */;
  %439 = %437.1;
  (%438, %434, %var_2168, %var_2169, %var_2170, %439)
}

def @func_14091() -> Tensor[(528), int32] {
  %440 = @func_7197() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */;
  %440.0
}

def @func_5472() -> (Tensor[(15, 9, 14), float64],) {
  @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */
}

def @func_4423(%var_4421: Tensor[(1, 12, 10), float64]) -> Tensor[(1, 12, 10), float64] {
  @func_4420(%var_4421) /* ty=Tensor[(1, 12, 10), float64] */
}

def @func_9872() -> (Tensor[(15, 9, 14), float64],) {
  %443 = fn () -> (Tensor[(15, 9, 14), float64],) {
    %441 = @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
    %442 = %441.0;
    (%442,)
  };
  %443() /* ty=(Tensor[(15, 9, 14), float64],) */
}

def @func_13201() -> (Tensor[(528), int32], Tensor[(6, 13, 15), bool], Tensor[(324), float64]) {
  @func_13199() /* ty=(Tensor[(528), int32], Tensor[(6, 13, 15), bool], Tensor[(324), float64]) */
}

def @func_7307(%var_7305: Tensor[(7, 6, 16), uint16], %var_7306: Tensor[(55), bool]) -> (Tensor[(15, 9, 14), float64], Tensor[(672), uint16], Tensor[(7, 6, 16), int32], Tensor[(?, 11, 5), uint32], Tensor[(1890), float32]) {
  %468 = fn (%var_7278: Tensor[(7, 6, 16), uint16], %var_7287: Tensor[(55), bool]) -> (Tensor[(15, 9, 14), float64], Tensor[(672), uint16], Tensor[(7, 6, 16), int32], Tensor[(?, 11, 5), uint32], Tensor[(1890), float32]) {
    %444 = cast(meta[relay.Constant][19] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %445 = cast(meta[relay.Constant][19] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %446 = reshape(%444, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
    %447 = reshape(%445, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
    %448 = @func_6425(%446, %447) /* ty=(Tensor[(7, 6, 16), uint16],) */;
    %449 = %448.0;
    %450 = cast(%var_7278, dtype="int32") /* ty=Tensor[(7, 6, 16), int32] */;
    %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %452 = cast(%449, dtype="int32") /* ty=Tensor[(7, 6, 16), int32] */;
    %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %454 = cast(%var_7287, dtype="bool") /* ty=Tensor[(55), bool] */;
    %455 = cast(%var_7287, dtype="bool") /* ty=Tensor[(55), bool] */;
    %456 = reshape(%454, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
    %457 = reshape(%455, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
    %458 = @func_2811(%456, %457) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
    %459 = %458.1;
    %460 = cast(%var_7287, dtype="uint32") /* ty=Tensor[(55), uint32] */;
    %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%459, dtype="uint32") /* ty=Tensor[(1, 11, 5), uint32] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %464 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
    %465 = bitwise_or(%452, %453) /* ty=Tensor[(7, 6, 16), int32] */;
    %466 = multiply(%462, %463) /* ty=Tensor[(?, 11, 5), uint32] */;
    %467 = @func_6255() /* ty=Tensor[(1890), float32] */;
    (%464, meta[relay.Constant][19] /* ty=Tensor[(672), uint16] */, %465, %466, %467)
  };
  %468(%var_7305, %var_7306) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(672), uint16], Tensor[(7, 6, 16), int32], Tensor[(?, 11, 5), uint32], Tensor[(1890), float32]) */
}

def @func_14688() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) {
  %472 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) {
    %469 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
    %470 = %469.0;
    %471 = @func_11382() /* ty=Tensor[(1890), float64] */;
    (%470, %471)
  };
  %472() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */
}

def @func_5419(%var_5415: Tensor[(11, 5), bool], %var_5416: Tensor[(400), uint8], %var_5417: Tensor[(324), float64], %var_5418: Tensor[(252), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(?, 11, 5), bool], Tensor[(11, 5), bool], Tensor[(16, 15, 14), uint32], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64], Tensor[(140, 24), bool], Tensor[(15, 9, 14), float64]) {
  @func_5413(%var_5415, %var_5416, %var_5417, %var_5418) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(?, 11, 5), bool], Tensor[(11, 5), bool], Tensor[(16, 15, 14), uint32], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64], Tensor[(140, 24), bool], Tensor[(15, 9, 14), float64]) */
}

def @func_10284(%var_10282: Tensor[(324), float64]) -> (Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), int64]) {
  @func_10281(%var_10282) /* ty=(Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), int64]) */
}

def @func_8236() -> Tensor[(528), int32] {
  @func_8234() /* ty=Tensor[(528), int32] */
}

def @func_7026(%var_7025: Tensor[(15, 9, 14), float64]) -> (Tensor[(1890), float64], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(528), int32], Tensor[(15, 9, 14), bool], Tensor[(1170), int32]) {
  %491 = fn (%var_7007: Tensor[(15, 9, 14), float64]) -> (Tensor[(1890), float64], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(528), int32], Tensor[(15, 9, 14), bool], Tensor[(1170), int32]) {
    %473 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
    %474 = cast(meta[relay.Constant][20] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %475 = reshape(%474, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
    %476 = @func_5006() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */;
    %477 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %478 = %477.0;
    %479 = cast(%var_7007, dtype="bool") /* ty=Tensor[(15, 9, 14), bool] */;
    %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
    %481 = cast(%478, dtype="bool") /* ty=Tensor[(15, 9, 14), bool] */;
    %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %483 = cast(%478, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
    %484 = reshape(%483, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
    %485 = @func_860(%484) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
    %486 = %473.1;
    %487 = @func_4420(%475) /* ty=Tensor[(1, 12, 10), float64] */;
    %488 = %476.4;
    %489 = logical_and(%481, %482) /* ty=Tensor[(15, 9, 14), bool] */;
    %490 = %485.2;
    (%486, %487, meta[relay.Constant][20] /* ty=Tensor[(120), float64] */, %488, %489, %490)
  };
  %491(%var_7025) /* ty=(Tensor[(1890), float64], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(528), int32], Tensor[(15, 9, 14), bool], Tensor[(1170), int32]) */
}

def @func_5947() -> Tensor[(9, 4, 12), float32] {
  @func_5945() /* ty=Tensor[(9, 4, 12), float32] */
}

def @func_12837() -> (Tensor[(528), int32], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
  @func_12835() /* ty=(Tensor[(528), int32], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */
}

def @func_12451() -> Tensor[(1890), float32] {
  %493 = fn () -> Tensor[(1890), float32] {
    %492 = @func_7994() /* ty=(Tensor[(1890), float32],) */;
    %492.0
  };
  %493() /* ty=Tensor[(1890), float32] */
}

def @func_6388() -> Tensor[(1890), float32] {
  %495 = fn () -> Tensor[(1890), float32] {
    %494 = @func_5026() /* ty=(Tensor[(1890), float32],) */;
    %494.0
  };
  %495() /* ty=Tensor[(1890), float32] */
}

def @func_15406() -> int32 {
  %497 = fn () -> int32 {
    %496 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
    %496.3
  };
  %497() /* ty=int32 */
}

def @func_8893() -> (Tensor[(528), int32],) {
  %498 = @func_7372() /* ty=Tensor[(528), int32] */;
  (%498,)
}

def @func_13811() -> Tensor[(1890), float64] {
  %500 = fn () -> Tensor[(1890), float64] {
    %499 = @func_10515() /* ty=(Tensor[(1890), float64],) */;
    %499.0
  };
  %500() /* ty=Tensor[(1890), float64] */
}

def @func_11391() -> (Tensor[(15, 9, 14), float32],) {
  %501 = @func_7831() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
  %502 = %501.1;
  (%502,)
}

def @func_7345(%var_7344: Tensor[(3, 9, 12), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(15, 9, 14), float64]) {
  %513 = fn (%var_7334: Tensor[(3, 9, 12), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(15, 9, 14), float64]) {
    %503 = @func_7061() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
    %504 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
    %505 = %504.1;
    %506 = cast(%var_7334, dtype="int64") /* ty=Tensor[(3, 9, 12), int64] */;
    %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%505, dtype="int64") /* ty=Tensor[(3, 9, 12), int64] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %510 = %503.0;
    %511 = left_shift(%508, %509) /* ty=Tensor[(3, 9, 12), int64] */;
    %512 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
    (%510, %511, %512)
  };
  %513(%var_7344) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(15, 9, 14), float64]) */
}

def @func_9466(%var_9464: Tensor[(3, 9, 12), float64]) -> (Tensor[(1890), float64], Tensor[(528), int32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(400), uint8], Tensor[(1890), float32], Tensor[(3, 9, 12), uint64], Tensor[(324), float64], Tensor[(3, 9, 12), float64]) {
  @func_9463(%var_9464) /* ty=(Tensor[(1890), float64], Tensor[(528), int32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(400), uint8], Tensor[(1890), float32], Tensor[(3, 9, 12), uint64], Tensor[(324), float64], Tensor[(3, 9, 12), float64]) */
}

def @func_12373(%var_12372: Tensor[(14, 10, 2), float32]) -> Tensor[(14, 10, 2), float32] {
  %515 = fn (%var_12357: Tensor[(14, 10, 2), float32]) -> Tensor[(14, 10, 2), float32] {
    %514 = cast(%var_12357, dtype="float32") /* ty=Tensor[(14, 10, 2), float32] */;
    exp(%514) /* ty=Tensor[(14, 10, 2), float32] */
  };
  %515(%var_12372) /* ty=Tensor[(14, 10, 2), float32] */
}

def @func_6096() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %516 = @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %519 = reshape(%518, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %520 = @func_860(%519) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %521 = %520.0;
  %522 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  (%517, %521, %522)
}

def @func_14847() -> (Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  @func_14845() /* ty=(Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_15158() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %527 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
    %523 = @func_9871() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %524 = @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
    %525 = %523.0;
    %526 = %524.2;
    (%525, %526)
  };
  %527() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_15297() -> Tensor[(528), int32] {
  %528 = @func_11343() /* ty=(Tensor[(528), int32],) */;
  %528.0
}

def @func_863(%var_861: Tensor[(15, 9, 14), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
  @func_860(%var_861) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */
}

def @func_1091(%var_1083: Tensor[(3, 9, 12), float64]) -> Tensor[(3, 9, 12), float64] {
  %529 = cast(%var_1083, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  atanh(%529) /* ty=Tensor[(3, 9, 12), float64] */
}

def @func_8703(%var_8701: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(324), float64]) {
  %530 = @func_5470() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %531 = cast(%var_8701, dtype="float64") /* ty=Tensor[(324), float64] */;
  %532 = reshape(%531, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %533 = @func_7343(%532) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(15, 9, 14), float64]) */;
  %534 = %530.0;
  %535 = %533.0;
  (%534, %535, %var_8701)
}

def @func_11290(%var_11288: Tensor[(55), bool]) -> (Tensor[(55), bool], Tensor[(1890), bool], Tensor[(140, 24), bool]) {
  @func_11287(%var_11288) /* ty=(Tensor[(55), bool], Tensor[(1890), bool], Tensor[(140, 24), bool]) */
}

def @func_11383() -> Tensor[(1890), float64] {
  %536 = fn () -> Tensor[(1890), float64] {
    @func_10653() /* ty=Tensor[(1890), float64] */
  };
  %536() /* ty=Tensor[(1890), float64] */
}

def @func_9622() -> (Tensor[(528), int32],) {
  @func_9620() /* ty=(Tensor[(528), int32],) */
}

def @func_13581() -> (Tensor[(324, 1), float64], Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(324, 3), bool], Tensor[(1890), int64]) {
  @func_13579() /* ty=(Tensor[(324, 1), float64], Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(324, 3), bool], Tensor[(1890), int64]) */
}

def @func_7940() -> (Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
  %537 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
  %538 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %539 = %537.1;
  %540 = %538.2;
  (%539, %540)
}

def @func_12418() -> Tensor[(528), int32] {
  %541 = @func_9609() /* ty=(Tensor[(528), int32], Tensor[(2, 264), int32]) */;
  %541.0
}

def @func_9620() -> (Tensor[(528), int32],) {
  %542 = @func_8893() /* ty=(Tensor[(528), int32],) */;
  %543 = %542.0;
  (%543,)
}

def @func_13500() -> Tensor[(13, 5, 11), float64] {
  @func_13498() /* ty=Tensor[(13, 5, 11), float64] */
}

def @func_6713(%var_6705: Tensor[(11, 14, 11), uint8], %var_6706: Tensor[(11, 14, 11), uint8]) -> (Tensor[(11, 14, 11), uint8],) {
  %544 = cast(%var_6706, dtype="uint8") /* ty=Tensor[(11, 14, 11), uint8] */;
  %545 = shape_of(%var_6705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%var_6705, dtype="uint8") /* ty=Tensor[(11, 14, 11), uint8] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %548 = minimum(%546, %547) /* ty=Tensor[(11, 14, 11), uint8] */;
  (%548,)
}

def @func_13771() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), uint16]) {
  %557 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(1890), uint16]) {
    %549 = @func_10515() /* ty=(Tensor[(1890), float64],) */;
    %550 = %549.0;
    %551 = cast(meta[relay.Constant][21] /* ty=Tensor[(1890), float64] */, dtype="uint16") /* ty=Tensor[(1890), uint16] */;
    %552 = shape_of(%550, dtype="int32") /* ty=Tensor[(1), int32] */;
    %553 = cast(%550, dtype="uint16") /* ty=Tensor[(1890), uint16] */;
    %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %555 = @func_10375() /* ty=Tensor[(15, 9, 14), float64] */;
    %556 = left_shift(%553, %554) /* ty=Tensor[(1890), uint16] */;
    (%555, %556)
  };
  %557() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), uint16]) */
}

def @func_7708() -> (Tensor[(528), int32],) {
  @func_7706() /* ty=(Tensor[(528), int32],) */
}

def @func_10592(%var_10586: Tensor[(4, 13, 16), float32]) -> (Tensor[(4, 13, 16), float32],) {
  %558 = cast(%var_10586, dtype="float32") /* ty=Tensor[(4, 13, 16), float32] */;
  %559 = log2(%558) /* ty=Tensor[(4, 13, 16), float32] */;
  (%559,)
}

def @func_11628(%var_11581: Tensor[(324), float64]) -> (Tensor[(3, 11, 5), uint16], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(324, 1), float64], Tensor[(9, 4, 12), float32]) {
  %560 = @func_7504() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(165), uint32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), uint16], Tensor[(9, 4, 12), float32], Tensor[(3, 11, 5), int32]) */;
  %561 = cast(meta[relay.Constant][22] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %562 = cast(%var_11581, dtype="float64") /* ty=Tensor[(324), float64] */;
  %563 = reshape(%561, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %564 = reshape(%562, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %565 = @func_8619(%563, %564) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) */;
  %566 = @func_10720() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(?, 12, 10), float64], Tensor[(6, 13, 15), bool], Tensor[(1890), float64], Tensor[(15, 9, 14), float32], Tensor[(528), int32]) */;
  %567 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %568 = cast(%567, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %569 = %560.3;
  %570 = %565.4;
  %571 = %566.4;
  %572 = @func_10466() /* ty=Tensor[(324, 1), float64] */;
  %573 = sqrt(%568) /* ty=Tensor[(9, 4, 12), float32] */;
  (%569, %570, meta[relay.Constant][22] /* ty=Tensor[(400), uint8] */, %var_11581, %571, %572, %573)
}

def @func_9168(%var_9068: Tensor[(3360), uint64], %var_9075: Tensor[(64), uint64], %var_9076: Tensor[(128), uint64], %var_9077: Tensor[(55), bool], %var_9079: Tensor[(54, 6), float64], %var_9111: Tensor[(4, 168), uint16], %var_9146: Tensor[(54, 6), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(16, 15, 14), uint64], Tensor[(3360), uint64], Tensor[(400), uint8], Tensor[(64), uint64], Tensor[(128), uint64], Tensor[(55), bool], Tensor[(8, 50), uint8], Tensor[(1890), float32], Tensor[(8, 66), int32], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), uint16], Tensor[(16, 15, 14), uint64], Tensor[(54, 6), float64], Tensor[(1890), float64], Tensor[(54, 6), bool], Tensor[(54, 6), float32]) {
  %574 = @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */;
  %575 = cast(%var_9068, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %576 = reshape(%575, newshape=[140, 24]) /* ty=Tensor[(140, 24), uint64] */;
  %577 = @func_5584(%576) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 15, 14), uint64], Tensor[(140, 24), uint64]) */;
  %578 = cast(%var_9075, dtype="uint64") /* ty=Tensor[(64), uint64] */;
  %579 = cast(%var_9076, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %580 = cast(%var_9077, dtype="bool") /* ty=Tensor[(55), bool] */;
  %581 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 50), uint8] */, dtype="uint8") /* ty=Tensor[(8, 50), uint8] */;
  %582 = cast(%var_9079, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %583 = reshape(%578, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), uint64] */;
  %584 = reshape(%579, newshape=[4, 16, 2]) /* ty=Tensor[(4, 16, 2), uint64] */;
  %585 = reshape(%580, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %586 = reshape(%581, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %587 = reshape(%582, newshape=[1, 324]) /* ty=Tensor[(1, 324), float64] */;
  %588 = @func_3351(%583, %584, %585, %586, %587) /* ty=(Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) */;
  %589 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 66), int32] */, dtype="int32") /* ty=Tensor[(8, 66), int32] */;
  %590 = reshape(%589, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %591 = @func_8187(%590) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */;
  %592 = cast(%var_9111, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %593 = cast(%var_9111, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %594 = reshape(%592, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %595 = reshape(%593, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %596 = @func_6425(%594, %595) /* ty=(Tensor[(7, 6, 16), uint16],) */;
  %597 = cast(%var_9068, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %598 = cast(%var_9068, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %599 = reshape(%597, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %600 = reshape(%598, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %601 = @func_4254(%599, %600) /* ty=(Tensor[(16, 15, 14), uint64],) */;
  %602 = cast(%var_9079, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %603 = log2(%602) /* ty=Tensor[(54, 6), float64] */;
  %604 = cast(%603, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %605 = tan(%604) /* ty=Tensor[(54, 6), float64] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %607 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %608 = cast(%var_9146, dtype="bool") /* ty=Tensor[(54, 6), bool] */;
  %609 = shape_of(%605, dtype="int32") /* ty=Tensor[(2), int32] */;
  %610 = cast(%605, dtype="bool") /* ty=Tensor[(54, 6), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %612 = cast(%605, dtype="float32") /* ty=Tensor[(54, 6), float32] */;
  %613 = exp(%612) /* ty=Tensor[(54, 6), float32] */;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(54, 6), float32] */;
  %615 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
  %616 = %574.1;
  %617 = %577.1;
  %618 = %588.5;
  %619 = %591.2;
  %620 = %596.0;
  %621 = %601.0;
  %622 = erf(%606) /* ty=Tensor[(54, 6), float64] */;
  %623 = %607.0;
  %624 = logical_or(%610, %611) /* ty=Tensor[(54, 6), bool] */;
  %625 = asinh(%614) /* ty=Tensor[(54, 6), float32] */;
  (%615, %616, %617, %var_9068, %618, %var_9075, %var_9076, %var_9077, meta[relay.Constant][23] /* ty=Tensor[(8, 50), uint8] */, %619, meta[relay.Constant][24] /* ty=Tensor[(8, 66), int32] */, %620, %var_9111, %621, %622, %623, %624, %625)
}

def @func_10515() -> (Tensor[(1890), float64],) {
  %626 = @func_8978() /* ty=Tensor[(1890), float64] */;
  (%626,)
}

def @func_9524(%var_9493: Tensor[(3360), uint64]) -> (Tensor[(1890), float64], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), float64]) {
  %627 = cast(%var_9493, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %628 = reshape(%627, newshape=[3360]) /* ty=Tensor[(3360), uint64] */;
  %629 = @func_6569(%628) /* ty=(Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) */;
  %630 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 168), uint16] */, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %631 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 168), uint16] */, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %632 = reshape(%630, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %633 = reshape(%631, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %634 = @func_6425(%632, %633) /* ty=(Tensor[(7, 6, 16), uint16],) */;
  %635 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 168), uint16] */, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %636 = @func_6780() /* ty=Tensor[(1890), float64] */;
  %637 = %629.2;
  %638 = %634.0;
  %639 = sqrt(%635) /* ty=Tensor[(4, 168), float64] */;
  (%636, %637, %var_9493, %638, %639)
}

def @func_7958() -> Tensor[(528), int32] {
  %640 = fn () -> Tensor[(528), int32] {
    @func_7372() /* ty=Tensor[(528), int32] */
  };
  %640() /* ty=Tensor[(528), int32] */
}

def @func_10616() -> Tensor[(528), int32] {
  @func_9295() /* ty=Tensor[(528), int32] */
}

def @func_3716(%var_3638: Tensor[(4, 7, 9), float64], %var_3678: Tensor[(55), bool], %var_3686: Tensor[(1890), float64]) -> (Tensor[(4, 7, 9), float64], Tensor[(?, 324), float32], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(15, 9, 7), float64], Tensor[(400), uint8], Tensor[(1890), float64], Tensor[(6, 13, 15), bool], Tensor[(1, 11, 5), float64], Tensor[(6, 13, 15), bool]) {
  %641 = cast(%var_3638, dtype="float64") /* ty=Tensor[(4, 7, 9), float64] */;
  %642 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(4, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 9), float64] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %645 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 324), float64] */, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  %646 = reshape(%645, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %647 = @func_1091(%646) /* ty=Tensor[(3, 9, 12), float64] */;
  %648 = cast(%647, dtype="float32") /* ty=Tensor[(3, 9, 12), float32] */;
  %649 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(1, 324), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %650 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 324), float64] */, dtype="float32") /* ty=Tensor[(1, 324), float32] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %652 = cast(%var_3678, dtype="bool") /* ty=Tensor[(55), bool] */;
  %653 = cast(%var_3678, dtype="bool") /* ty=Tensor[(55), bool] */;
  %654 = reshape(%652, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %655 = reshape(%653, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %656 = @func_2811(%654, %655) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
  %657 = cast(meta[relay.Constant][28] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %658 = cast(%647, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %659 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %660 = reshape(%657, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %661 = reshape(%658, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %662 = reshape(%659, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %663 = @func_2236(%660, %661, %662) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
  %664 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %665 = reshape(%664, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %666 = @func_860(%665) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %667 = cast(%var_3678, dtype="bool") /* ty=Tensor[(55), bool] */;
  %668 = cast(%var_3678, dtype="bool") /* ty=Tensor[(55), bool] */;
  %669 = reshape(%667, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %670 = reshape(%668, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %671 = @func_2811(%669, %670) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
  %672 = %671.1;
  %673 = cast(%672, dtype="float64") /* ty=Tensor[(1, 11, 5), float64] */;
  %674 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %675 = reshape(%674, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %676 = @func_860(%675) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %677 = floor_mod(%643, %644) /* ty=Tensor[(4, 7, 9), float64] */;
  %678 = floor_divide(%650, %651) /* ty=Tensor[(?, 324), float32] */;
  %679 = %656.0;
  %680 = %663.0;
  %681 = %666.1;
  %682 = cosh(%673) /* ty=Tensor[(1, 11, 5), float64] */;
  %683 = %676.1;
  (%677, %678, %679, %var_3678, %680, meta[relay.Constant][28] /* ty=Tensor[(400), uint8] */, %var_3686, %681, %682, %683)
}

def @func_13579() -> (Tensor[(324, 1), float64], Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(324, 3), bool], Tensor[(1890), int64]) {
  %684 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %685 = @func_9324() /* ty=(Tensor[(324, 1), float64],) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="bool") /* ty=Tensor[(324, 1), bool] */;
  %688 = cast(meta[relay.Constant][29] /* ty=Tensor[(324, 3), float64] */, dtype="bool") /* ty=Tensor[(324, 3), bool] */;
  %689 = @func_6075() /* ty=Tensor[(15, 9, 14), float64] */;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %691 = reshape(%690, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %692 = @func_10562(%691) /* ty=(Tensor[(1890), int64],) */;
  %693 = %684.2;
  %694 = @func_9295() /* ty=Tensor[(528), int32] */;
  %695 = logical_and(%687, %688) /* ty=Tensor[(324, 3), bool] */;
  %696 = %692.0;
  (%693, %694, %689, %695, %696)
}

def @func_11145(%var_11137: Tensor[(120), float64], %var_11138: Tensor[(324), float64], %var_11141: Tensor[(130, 9), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(120), float64], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(130, 9), int32]) {
  %697 = cast(%var_11137, dtype="float64") /* ty=Tensor[(120), float64] */;
  %698 = cast(%var_11138, dtype="float64") /* ty=Tensor[(324), float64] */;
  %699 = reshape(%697, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %700 = reshape(%698, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %701 = @func_8797(%699, %700) /* ty=(Tensor[(1170), int32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(9, 4, 12), float32], Tensor[(3, 9, 12), int64], Tensor[(324), float64], Tensor[(1890), float32]) */;
  %702 = cast(%var_11141, dtype="int32") /* ty=Tensor[(130, 9), int32] */;
  %703 = reshape(%702, newshape=[390, 3]) /* ty=Tensor[(390, 3), int32] */;
  %704 = @func_6206(%703) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) */;
  %705 = @func_10375() /* ty=Tensor[(15, 9, 14), float64] */;
  %706 = %701.4;
  %707 = %704.3;
  (%705, %706, %var_11137, %var_11138, %707, %var_11141)
}

def @func_11435() -> (Tensor[(528), int32],) {
  %709 = fn () -> (Tensor[(528), int32],) {
    %708 = @func_5809() /* ty=Tensor[(528), int32] */;
    (%708,)
  };
  %709() /* ty=(Tensor[(528), int32],) */
}

def @func_5642() -> Tensor[(528), int32] {
  %710 = @func_5006() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */;
  %710.4
}

def @func_10377() -> Tensor[(15, 9, 14), float64] {
  @func_10375() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_8306() -> (Tensor[(1170), int32], Tensor[(1890), float64]) {
  %711 = @func_7940() /* ty=(Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %712 = @func_7409() /* ty=(Tensor[(1890), float32],) */;
  %713 = %712.0;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %715 = %711.1;
  %716 = log(%714) /* ty=Tensor[(1890), float64] */;
  (%715, %716)
}

def @func_5437() -> (Tensor[(1890), float64],) {
  %717 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %718 = %717.1;
  (%718,)
}

def @func_12835() -> (Tensor[(528), int32], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
  %719 = cast(meta[relay.Constant][30] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %720 = cast(meta[relay.Constant][30] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %721 = cast(meta[relay.Constant][31] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %722 = cast(meta[relay.Constant][32] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %723 = reshape(%719, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %724 = reshape(%720, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %725 = reshape(%721, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %726 = reshape(%722, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %727 = @func_1829(%723, %724, %725, %726) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %728 = @func_8234() /* ty=Tensor[(528), int32] */;
  %729 = %727.3;
  (%728, %729, meta[relay.Constant][30] /* ty=Tensor[(400), uint8] */, meta[relay.Constant][31] /* ty=Tensor[(324), float64] */, meta[relay.Constant][32] /* ty=Tensor[(1890), float64] */)
}

def @func_14537(%var_14525: Tensor[(400), uint8], %var_14526: Tensor[(324), float64], %var_14527: Tensor[(252), float64]) -> (Tensor[(1890), int64], Tensor[(126, 2), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64]) {
  %730 = @func_13579() /* ty=(Tensor[(324, 1), float64], Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(324, 3), bool], Tensor[(1890), int64]) */;
  %731 = cast(%var_14525, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %732 = cast(%var_14526, dtype="float64") /* ty=Tensor[(324), float64] */;
  %733 = cast(%var_14527, dtype="float64") /* ty=Tensor[(252), float64] */;
  %734 = reshape(%731, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %735 = reshape(%732, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %736 = reshape(%733, newshape=[126, 2]) /* ty=Tensor[(126, 2), float64] */;
  %737 = @func_5272(%734, %735, %736) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(126, 2), float64], Tensor[(1, 55), bool], Tensor[(324), float64]) */;
  %738 = %730.4;
  %739 = %737.5;
  (%738, %739, %var_14525, %var_14526, %var_14527)
}

def @func_12739(%var_12737: Tensor[(27), float32]) -> (Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(3, 3, 3), float32], Tensor[(27), float32], Tensor[(528), int32]) {
  @func_12736(%var_12737) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(3, 3, 3), float32], Tensor[(27), float32], Tensor[(528), int32]) */
}

def @func_14370() -> Tensor[(528), int32] {
  %740 = fn () -> Tensor[(528), int32] {
    @func_10616() /* ty=Tensor[(528), int32] */
  };
  %740() /* ty=Tensor[(528), int32] */
}

def @func_6098() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  @func_6096() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_8979() -> Tensor[(1890), float64] {
  %742 = fn () -> Tensor[(1890), float64] {
    %741 = @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */;
    %741.1
  };
  %742() /* ty=Tensor[(1890), float64] */
}

def @func_6861() -> (Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), bool], Tensor[(165), uint32], Tensor[(6, 13, 15), bool], Tensor[(1890), bool], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(1890), uint32]) {
  %775 = fn () -> (Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), bool], Tensor[(165), uint32], Tensor[(6, 13, 15), bool], Tensor[(1890), bool], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(1890), uint32]) {
    %743 = cast(meta[relay.Constant][33] /* ty=Tensor[(390, 3), int32] */, dtype="int32") /* ty=Tensor[(390, 3), int32] */;
    %744 = cast(meta[relay.Constant][33] /* ty=Tensor[(390, 3), int32] */, dtype="int32") /* ty=Tensor[(390, 3), int32] */;
    %745 = reshape(%743, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
    %746 = reshape(%744, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
    %747 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %748 = cast(meta[relay.Constant][34] /* ty=Tensor[(165), uint32] */, dtype="uint32") /* ty=Tensor[(165), uint32] */;
    %749 = reshape(%748, newshape=[3, 11, 5]) /* ty=Tensor[(3, 11, 5), uint32] */;
    %750 = @func_6377(%749) /* ty=(Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) */;
    %751 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
    %752 = @func_4885() /* ty=Tensor[(1890), float32] */;
    %753 = cast(%752, dtype="float32") /* ty=Tensor[(1890), float32] */;
    %754 = acos(%753) /* ty=Tensor[(1890), float32] */;
    %755 = cast(%754, dtype="float32") /* ty=Tensor[(1890), float32] */;
    %756 = acosh(%755) /* ty=Tensor[(1890), float32] */;
    %757 = cast(%754, dtype="bool") /* ty=Tensor[(1890), bool] */;
    %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(1), int32] */;
    %759 = cast(%756, dtype="bool") /* ty=Tensor[(1890), bool] */;
    %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?), bool] */;
    %761 = cast(meta[relay.Constant][35] /* ty=Tensor[(3360), uint64] */, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
    %762 = reshape(%761, newshape=[3360]) /* ty=Tensor[(3360), uint64] */;
    %763 = @func_6569(%762) /* ty=(Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) */;
    %764 = cast(%754, dtype="uint32") /* ty=Tensor[(1890), uint32] */;
    %765 = shape_of(%756, dtype="int32") /* ty=Tensor[(1), int32] */;
    %766 = cast(%756, dtype="uint32") /* ty=Tensor[(1890), uint32] */;
    %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %768 = @func_458(%745, %746) /* ty=Tensor[(6, 13, 15), bool] */;
    %769 = %747.0;
    %770 = %750.0;
    %771 = %751.1;
    %772 = not_equal(%759, %760) /* ty=Tensor[(1890), bool] */;
    %773 = %763.2;
    %774 = add(%766, %767) /* ty=Tensor[(1890), uint32] */;
    (%768, meta[relay.Constant][33] /* ty=Tensor[(390, 3), int32] */, %769, %770, meta[relay.Constant][34] /* ty=Tensor[(165), uint32] */, %771, %772, %773, meta[relay.Constant][35] /* ty=Tensor[(3360), uint64] */, %774)
  };
  %775() /* ty=(Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), bool], Tensor[(165), uint32], Tensor[(6, 13, 15), bool], Tensor[(1890), bool], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(1890), uint32]) */
}

def @func_11345() -> (Tensor[(528), int32],) {
  @func_11343() /* ty=(Tensor[(528), int32],) */
}

def @func_11393() -> (Tensor[(15, 9, 14), float32],) {
  @func_11391() /* ty=(Tensor[(15, 9, 14), float32],) */
}

def @func_13086() -> (Tensor[(15, 9, 14), float64],) {
  @func_13084() /* ty=(Tensor[(15, 9, 14), float64],) */
}

def @func_5272(%var_5239: Tensor[(400), uint8], %var_5240: Tensor[(324), float64], %var_5248: Tensor[(126, 2), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(126, 2), float64], Tensor[(1, 55), bool], Tensor[(324), float64]) {
  %776 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %777 = cast(%var_5239, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %778 = cast(%var_5239, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %779 = cast(%var_5240, dtype="float64") /* ty=Tensor[(324), float64] */;
  %780 = %776.0;
  %781 = cast(%780, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %782 = reshape(%777, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %783 = reshape(%778, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
  %784 = reshape(%779, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %785 = reshape(%781, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %786 = @func_1829(%782, %783, %784, %785) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
  %787 = cast(%var_5248, dtype="float64") /* ty=Tensor[(126, 2), float64] */;
  %788 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 55), bool] */, dtype="bool") /* ty=Tensor[(1, 55), bool] */;
  %789 = cast(%780, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %790 = reshape(%787, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float64] */;
  %791 = reshape(%788, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %792 = reshape(%789, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %793 = @func_3716(%790, %791, %792) /* ty=(Tensor[(4, 7, 9), float64], Tensor[(?, 324), float32], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(15, 9, 7), float64], Tensor[(400), uint8], Tensor[(1890), float64], Tensor[(6, 13, 15), bool], Tensor[(1, 11, 5), float64], Tensor[(6, 13, 15), bool]) */;
  %794 = cast(%var_5239, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %795 = %786.3;
  %796 = cast(%795, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %797 = cast(%780, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %798 = reshape(%794, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %799 = reshape(%796, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %800 = reshape(%797, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %801 = @func_2236(%798, %799, %800) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */;
  %802 = %793.7;
  %803 = %801.3;
  (%780, %795, %var_5239, %var_5240, %802, %var_5248, meta[relay.Constant][36] /* ty=Tensor[(1, 55), bool] */, %803)
}

def @func_4420(%var_4416: Tensor[(1, 12, 10), float64]) -> Tensor[(1, 12, 10), float64] {
  %804 = cast(%var_4416, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  tan(%804) /* ty=Tensor[(1, 12, 10), float64] */
}

def @func_4887() -> Tensor[(1890), float32] {
  @func_4885() /* ty=Tensor[(1890), float32] */
}

def @func_1094(%var_1092: Tensor[(3, 9, 12), float64]) -> Tensor[(3, 9, 12), float64] {
  @func_1091(%var_1092) /* ty=Tensor[(3, 9, 12), float64] */
}

def @func_9527(%var_9525: Tensor[(3360), uint64]) -> (Tensor[(1890), float64], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), float64]) {
  @func_9524(%var_9525) /* ty=(Tensor[(1890), float64], Tensor[(3360), uint64], Tensor[(3360), uint64], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), float64]) */
}

def @func_10618() -> Tensor[(528), int32] {
  @func_10616() /* ty=Tensor[(528), int32] */
}

def @func_11488(%var_11486: Tensor[(9, 36), float64]) -> (Tensor[(9, 4, 12), float64], Tensor[(400), uint8], Tensor[(9, 36), float64], Tensor[(15, 9, 14), float64]) {
  @func_11485(%var_11486) /* ty=(Tensor[(9, 4, 12), float64], Tensor[(400), uint8], Tensor[(9, 36), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_6958() -> (Tensor[(15, 9, 14), float64],) {
  %806 = fn () -> (Tensor[(15, 9, 14), float64],) {
    %805 = @func_6075() /* ty=Tensor[(15, 9, 14), float64] */;
    (%805,)
  };
  %806() /* ty=(Tensor[(15, 9, 14), float64],) */
}

def @func_8308() -> (Tensor[(1170), int32], Tensor[(1890), float64]) {
  @func_8306() /* ty=(Tensor[(1170), int32], Tensor[(1890), float64]) */
}

def @func_2811(%var_2787: Tensor[(1, 11, 5), bool], %var_2788: Tensor[(1, 11, 5), bool]) -> (Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) {
  %807 = cast(%var_2788, dtype="bool") /* ty=Tensor[(1, 11, 5), bool] */;
  %808 = shape_of(%var_2787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%var_2787, dtype="bool") /* ty=Tensor[(1, 11, 5), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %811 = cast(%var_2788, dtype="float64") /* ty=Tensor[(1, 11, 5), float64] */;
  %812 = logical_or(%809, %810) /* ty=Tensor[(?, 11, 5), bool] */;
  %813 = atanh(%811) /* ty=Tensor[(1, 11, 5), float64] */;
  (%812, %813)
}

def @func_13736() -> (Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(9, 4, 12), float32]) {
  %821 = fn () -> (Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(9, 4, 12), float32]) {
    %814 = @func_10824() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(1170), int32]) */;
    %815 = @func_12140() /* ty=(Tensor[(528), int32], Tensor[(1170), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64]) */;
    %816 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
    %817 = %814.0;
    %818 = %815.5;
    %819 = @func_4885() /* ty=Tensor[(1890), float32] */;
    %820 = %816.0;
    (%817, %818, %819, %820)
  };
  %821() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(9, 4, 12), float32]) */
}

def @func_12420() -> Tensor[(528), int32] {
  @func_12418() /* ty=Tensor[(528), int32] */
}

def @func_12271(%var_12269: Tensor[(5, 2, 16), float32]) -> Tensor[(5, 2, 16), float32] {
  @func_12268(%var_12269) /* ty=Tensor[(5, 2, 16), float32] */
}

def @func_7372() -> Tensor[(528), int32] {
  @func_5809() /* ty=Tensor[(528), int32] */
}

def @func_8837() -> (Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) {
  %822 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %823 = @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %824 = %822.1;
  %825 = %823.0;
  (%824, %825)
}

def @func_8450(%var_8449: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), float32],) {
  %830 = fn (%var_8434: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), float32],) {
    %826 = cast(%var_8434, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
    %827 = sin(%826) /* ty=Tensor[(5, 4, 13), float32] */;
    %828 = cast(%827, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
    %829 = asin(%828) /* ty=Tensor[(5, 4, 13), float32] */;
    (%829,)
  };
  %830(%var_8449) /* ty=(Tensor[(5, 4, 13), float32],) */
}

def @func_2241(%var_2238: Tensor[(400), uint8], %var_2239: Tensor[(324), float64], %var_2240: Tensor[(1890), float64]) -> (Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) {
  @func_2236(%var_2238, %var_2239, %var_2240) /* ty=(Tensor[(15, 9, 7), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64], Tensor[(6, 13, 15), bool]) */
}

def @func_12489() -> (Tensor[(9, 4, 12), float32], Tensor[(1, 11, 6), float32], Tensor[(66), float32], Tensor[(1890), float64]) {
  %838 = fn () -> (Tensor[(9, 4, 12), float32], Tensor[(1, 11, 6), float32], Tensor[(66), float32], Tensor[(1890), float64]) {
    %831 = @func_8837() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 4, 12), float32]) */;
    %832 = cast(meta[relay.Constant][37] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %833 = reshape(%832, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
    %834 = @func_9633(%833) /* ty=(Tensor[(1, 11, 6), float32],) */;
    %835 = %831.1;
    %836 = %834.0;
    %837 = @func_6780() /* ty=Tensor[(1890), float64] */;
    (%835, %836, meta[relay.Constant][37] /* ty=Tensor[(66), float32] */, %837)
  };
  %838() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(1, 11, 6), float32], Tensor[(66), float32], Tensor[(1890), float64]) */
}

def @func_13967() -> Tensor[(15, 9, 14), float32] {
  %840 = fn () -> Tensor[(15, 9, 14), float32] {
    %839 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
    %839.4
  };
  %840() /* ty=Tensor[(15, 9, 14), float32] */
}

def @func_12244() -> (int32, Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), uint64]) {
  %854 = fn () -> (int32, Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), uint64]) {
    %841 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %842 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
    %843 = %842.0;
    %844 = @func_9828() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) */;
    %845 = %844.0;
    %846 = cast(%845, dtype="uint64") /* ty=Tensor[(15, 9, 14), uint64] */;
    %847 = shape_of(%843, dtype="int32") /* ty=Tensor[(3), int32] */;
    %848 = cast(%843, dtype="uint64") /* ty=Tensor[(15, 9, 14), uint64] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %850 = @func_5883() /* ty=int32 */;
    %851 = @func_10375() /* ty=Tensor[(15, 9, 14), float64] */;
    %852 = %841.0;
    %853 = bitwise_xor(%848, %849) /* ty=Tensor[(15, 9, 14), uint64] */;
    (%850, %851, %852, %853)
  };
  %854() /* ty=(int32, Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), uint64]) */
}

def @func_14567() -> Tensor[(15, 9, 14), float64] {
  @func_14565() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_1835(%var_1831: Tensor[(5, 8, 10), uint8], %var_1832: Tensor[(5, 8, 10), uint8], %var_1833: Tensor[(324), float64], %var_1834: Tensor[(1890), float64]) -> (Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) {
  @func_1829(%var_1831, %var_1832, %var_1833, %var_1834) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */
}

def @func_12141() -> (Tensor[(528), int32], Tensor[(1170), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64]) {
  %865 = fn () -> (Tensor[(528), int32], Tensor[(1170), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64]) {
    %855 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
    %856 = @func_10083() /* ty=(Tensor[(1890), float32],) */;
    %857 = @func_9871() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %858 = @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */;
    %859 = @func_5809() /* ty=Tensor[(528), int32] */;
    %860 = %855.2;
    %861 = %856.0;
    %862 = %857.0;
    %863 = %858.0;
    %864 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
    (%859, %860, %861, %862, %863, %864)
  };
  %865() /* ty=(Tensor[(528), int32], Tensor[(1170), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64]) */
}

def @func_7198() -> (Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) {
  %869 = fn () -> (Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) {
    %866 = @func_5809() /* ty=Tensor[(528), int32] */;
    %867 = @func_6387() /* ty=Tensor[(1890), float32] */;
    %868 = @func_6164() /* ty=Tensor[(15, 9, 14), float64] */;
    (%866, %867, %868)
  };
  %869() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */
}

def @func_4079(%var_4054: int32, %var_4055: Tensor[(12, 4, 11), int32]) -> Tensor[(12, 4, 11), int32] {
  %870 = cast(%var_4054, dtype="int32") /* ty=int32 */;
  %871 = cast(%var_4055, dtype="int32") /* ty=Tensor[(12, 4, 11), int32] */;
  minimum(%870, %871) /* ty=Tensor[(12, 4, 11), int32] */
}

def @func_9297() -> Tensor[(528), int32] {
  @func_9295() /* ty=Tensor[(528), int32] */
}

def @func_7504() -> (Tensor[(15, 9, 14), float64], Tensor[(165), uint32], Tensor[(15, 9, 14), float64], Tensor[(3, 11, 5), uint16], Tensor[(9, 4, 12), float32], Tensor[(3, 11, 5), int32]) {
  %872 = cast(meta[relay.Constant][38] /* ty=Tensor[(165), uint32] */, dtype="uint32") /* ty=Tensor[(165), uint32] */;
  %873 = reshape(%872, newshape=[3, 11, 5]) /* ty=Tensor[(3, 11, 5), uint32] */;
  %874 = @func_6377(%873) /* ty=(Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) */;
  %875 = %874.0;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(3, 11, 5), float64] */;
  %877 = log2(%876) /* ty=Tensor[(3, 11, 5), float64] */;
  %878 = cast(%875, dtype="uint16") /* ty=Tensor[(3, 11, 5), uint16] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%877, dtype="uint16") /* ty=Tensor[(3, 11, 5), uint16] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %882 = cast(%875, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
  %883 = sin(%882) /* ty=Tensor[(3, 11, 5), float32] */;
  %884 = cast(%877, dtype="int32") /* ty=Tensor[(3, 11, 5), int32] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%883, dtype="int32") /* ty=Tensor[(3, 11, 5), int32] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %888 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
  %889 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
  %890 = logical_xor(%880, %881) /* ty=Tensor[(3, 11, 5), uint16] */;
  %891 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %892 = subtract(%886, %887) /* ty=Tensor[(3, 11, 5), int32] */;
  (%888, meta[relay.Constant][38] /* ty=Tensor[(165), uint32] */, %889, %890, %891, %892)
}

def @func_7680() -> (Tensor[(9, 4, 12), float32],) {
  @func_7678() /* ty=(Tensor[(9, 4, 12), float32],) */
}

def @func_9930(%var_9928: Tensor[(55), bool], %var_9929: Tensor[(1890), float64]) -> (Tensor[(3, 9, 12), float64], Tensor[(6, 13, 15), bool], Tensor[(252), float64], Tensor[(55), bool], Tensor[(1890), float64]) {
  @func_9926(%var_9928, %var_9929) /* ty=(Tensor[(3, 9, 12), float64], Tensor[(6, 13, 15), bool], Tensor[(252), float64], Tensor[(55), bool], Tensor[(1890), float64]) */
}

def @func_10467() -> Tensor[(324, 1), float64] {
  %894 = fn () -> Tensor[(324, 1), float64] {
    %893 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
    %893.2
  };
  %894() /* ty=Tensor[(324, 1), float64] */
}

def @func_14160() -> (Tensor[(15, 9, 14), float32], Tensor[(1890), float64]) {
  %895 = @func_9763() /* ty=Tensor[(15, 9, 14), float32] */;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %897 = reshape(%896, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %898 = @func_8039(%897) /* ty=(Tensor[(1890), float64],) */;
  %899 = %898.0;
  (%895, %899)
}

def @func_4815() -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) {
  %900 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %901 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %902 = %900.2;
  %903 = cast(%902, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %904 = reshape(%903, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %905 = @func_860(%904) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %906 = %901.2;
  %907 = %905.2;
  (%902, %906, %907)
}

def @func_7706() -> (Tensor[(528), int32],) {
  %908 = @func_5809() /* ty=Tensor[(528), int32] */;
  (%908,)
}

def @func_11171() -> Tensor[(528), int32] {
  @func_11169() /* ty=Tensor[(528), int32] */
}

def @func_6281() -> Tensor[(1890), float64] {
  %909 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %909.1
}

def @func_13021(%var_13019: Tensor[(324), float64]) -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(324), float64]) {
  %910 = @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */;
  %911 = cast(%var_13019, dtype="float64") /* ty=Tensor[(324), float64] */;
  %912 = reshape(%911, newshape=[9, 36]) /* ty=Tensor[(9, 36), float64] */;
  %913 = @func_11485(%912) /* ty=(Tensor[(9, 4, 12), float64], Tensor[(400), uint8], Tensor[(9, 36), float64], Tensor[(15, 9, 14), float64]) */;
  %914 = %910.0;
  %915 = %913.3;
  (%914, %915, %var_13019)
}

def @func_11169() -> Tensor[(528), int32] {
  %916 = @func_8893() /* ty=(Tensor[(528), int32],) */;
  %916.0
}

def @func_4685() -> (Tensor[(15, 9, 14), float64],) {
  %917 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %918 = %917.1;
  (%918,)
}

def @func_6782() -> Tensor[(1890), float64] {
  @func_6780() /* ty=Tensor[(1890), float64] */
}

def @func_14347(%var_14346: Tensor[(840, 4), uint64]) -> (Tensor[(9, 4, 12), float32], Tensor[(8, 10, 3), int64], Tensor[(1890), float32], Tensor[(324), float64], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), int64], Tensor[(840, 4), bool]) {
  %940 = fn (%var_14261: Tensor[(840, 4), uint64]) -> (Tensor[(9, 4, 12), float32], Tensor[(8, 10, 3), int64], Tensor[(1890), float32], Tensor[(324), float64], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), int64], Tensor[(840, 4), bool]) {
    %919 = cast(%var_14261, dtype="uint64") /* ty=Tensor[(840, 4), uint64] */;
    %920 = reshape(%919, newshape=[3360]) /* ty=Tensor[(3360), uint64] */;
    %921 = @func_6569(%920) /* ty=(Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) */;
    %922 = cast(meta[relay.Constant][39] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
    %923 = %921.0;
    %924 = cast(%923, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %925 = reshape(%922, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %926 = reshape(%924, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
    %927 = @func_6058(%925, %926) /* ty=(Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */;
    %928 = @func_9763() /* ty=Tensor[(15, 9, 14), float32] */;
    %929 = cast(%928, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
    %930 = reshape(%929, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
    %931 = @func_10562(%930) /* ty=(Tensor[(1890), int64],) */;
    %932 = @func_5883() /* ty=int32 */;
    %933 = cast(%var_14261, dtype="bool") /* ty=Tensor[(840, 4), bool] */;
    %934 = cast(%932, dtype="bool") /* ty=bool */;
    %935 = @func_13037() /* ty=Tensor[(9, 4, 12), float32] */;
    %936 = @func_12318() /* ty=Tensor[(8, 10, 3), int64] */;
    %937 = %927.3;
    %938 = %931.0;
    %939 = less_equal(%933, %934) /* ty=Tensor[(840, 4), bool] */;
    (%935, %936, %923, %937, meta[relay.Constant][39] /* ty=Tensor[(324), float64] */, %928, %938, %939)
  };
  %940(%var_14346) /* ty=(Tensor[(9, 4, 12), float32], Tensor[(8, 10, 3), int64], Tensor[(1890), float32], Tensor[(324), float64], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), int64], Tensor[(840, 4), bool]) */
}

def @func_7847(%var_7839: Tensor[(55), bool]) -> (Tensor[(165), uint32], Tensor[(140, 24), bool], Tensor[(55), bool], Tensor[(400), uint8], Tensor[(18, 18), float64], Tensor[(252), float64]) {
  %941 = @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */;
  %942 = cast(%var_7839, dtype="bool") /* ty=Tensor[(55), bool] */;
  %943 = cast(meta[relay.Constant][40] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %944 = cast(meta[relay.Constant][41] /* ty=Tensor[(18, 18), float64] */, dtype="float64") /* ty=Tensor[(18, 18), float64] */;
  %945 = cast(meta[relay.Constant][42] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %946 = reshape(%942, newshape=[11, 5]) /* ty=Tensor[(11, 5), bool] */;
  %947 = reshape(%943, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %948 = reshape(%944, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %949 = reshape(%945, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %950 = @func_5413(%946, %947, %948, %949) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(?, 11, 5), bool], Tensor[(11, 5), bool], Tensor[(16, 15, 14), uint32], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64], Tensor[(140, 24), bool], Tensor[(15, 9, 14), float64]) */;
  %951 = %941.2;
  %952 = %950.8;
  (%951, %952, %var_7839, meta[relay.Constant][40] /* ty=Tensor[(400), uint8] */, meta[relay.Constant][41] /* ty=Tensor[(18, 18), float64] */, meta[relay.Constant][42] /* ty=Tensor[(252), float64] */)
}

def @func_10565(%var_10563: Tensor[(1890), float32]) -> (Tensor[(1890), int64],) {
  @func_10562(%var_10563) /* ty=(Tensor[(1890), int64],) */
}

def @func_15479() -> (Tensor[(9, 4, 12), float32], Tensor[(1890), float64]) {
  @func_15477() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(1890), float64]) */
}

def @func_10670() -> (Tensor[(15, 9, 14), float64],) {
  %953 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %954 = %953.0;
  (%954,)
}

def @func_11485(%var_11462: Tensor[(9, 36), float64]) -> (Tensor[(9, 4, 12), float64], Tensor[(400), uint8], Tensor[(9, 36), float64], Tensor[(15, 9, 14), float64]) {
  %955 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
  %956 = cast(%var_11462, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %957 = reshape(%956, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %958 = @func_10281(%957) /* ty=(Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), int64]) */;
  %959 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %960 = %955.0;
  %961 = %958.0;
  %962 = %959.0;
  (%960, %961, %var_11462, %962)
}

def @func_2815(%var_2813: Tensor[(1, 11, 5), bool], %var_2814: Tensor[(1, 11, 5), bool]) -> (Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) {
  @func_2811(%var_2813, %var_2814) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */
}

def @func_5809() -> Tensor[(528), int32] {
  @func_5642() /* ty=Tensor[(528), int32] */
}

def @func_15047() -> (Tensor[(15, 9, 14), float64],) {
  %965 = fn () -> (Tensor[(15, 9, 14), float64],) {
    %963 = @func_13084() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %964 = %963.0;
    (%964,)
  };
  %965() /* ty=(Tensor[(15, 9, 14), float64],) */
}

def @func_10850() -> Tensor[(15, 9, 14), float64] {
  %967 = fn () -> Tensor[(15, 9, 14), float64] {
    %966 = @func_10670() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %966.0
  };
  %967() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_7089() -> (Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) {
  %968 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %969 = cast(%968, dtype="float64") /* ty=Tensor[(9, 4, 12), float64] */;
  %970 = cast(meta[relay.Constant][43] /* ty=Tensor[(324, 1), float64] */, dtype="float64") /* ty=Tensor[(324, 1), float64] */;
  %971 = reshape(%970, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %972 = sin(%969) /* ty=Tensor[(9, 4, 12), float64] */;
  %973 = @func_1091(%971) /* ty=Tensor[(3, 9, 12), float64] */;
  (%972, %973, meta[relay.Constant][43] /* ty=Tensor[(324, 1), float64] */)
}

def @func_6166() -> Tensor[(15, 9, 14), float64] {
  @func_6164() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_6681() -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) {
  %974 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %975 = %974.0;
  %976 = cast(%975, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %977 = cast(meta[relay.Constant][44] /* ty=Tensor[(165), uint32] */, dtype="uint32") /* ty=Tensor[(165), uint32] */;
  %978 = reshape(%977, newshape=[3, 11, 5]) /* ty=Tensor[(3, 11, 5), uint32] */;
  %979 = @func_6377(%978) /* ty=(Tensor[(3, 11, 5), bool], Tensor[(528), int32], Tensor[(3, 11, 5), float32], Tensor[(1890), float64]) */;
  %980 = cos(%976) /* ty=Tensor[(1890), float64] */;
  %981 = %979.3;
  (%980, %981, meta[relay.Constant][44] /* ty=Tensor[(165), uint32] */)
}

def @func_11821(%var_11819: Tensor[(55), bool]) -> (Tensor[(1890), float64], Tensor[(12, 4, 11), int32], Tensor[(6, 13, 15), bool], Tensor[(55), bool]) {
  @func_11818(%var_11819) /* ty=(Tensor[(1890), float64], Tensor[(12, 4, 11), int32], Tensor[(6, 13, 15), bool], Tensor[(55), bool]) */
}

def @func_8738(%var_8737: Tensor[(2, 264), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(528), int64], Tensor[(2, 264), int32]) {
  %988 = fn (%var_8727: Tensor[(2, 264), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(528), int64], Tensor[(2, 264), int32]) {
    %982 = @func_7061() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
    %983 = cast(%var_8727, dtype="int32") /* ty=Tensor[(2, 264), int32] */;
    %984 = reshape(%983, newshape=[528]) /* ty=Tensor[(528), int32] */;
    %985 = @func_8187(%984) /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(528), int64]) */;
    %986 = %982.1;
    %987 = %985.3;
    (%986, %987, %var_8727)
  };
  %988(%var_8737) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int64], Tensor[(2, 264), int32]) */
}

def @func_10375() -> Tensor[(15, 9, 14), float64] {
  %989 = @func_7197() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */;
  %989.2
}

def @func_10644() -> (Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) {
  %996 = fn () -> (Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) {
    %990 = @func_9609() /* ty=(Tensor[(528), int32], Tensor[(2, 264), int32]) */;
    %991 = cast(meta[relay.Constant][45] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
    %992 = reshape(%991, newshape=[390, 3]) /* ty=Tensor[(390, 3), int32] */;
    %993 = @func_6206(%992) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) */;
    %994 = %990.0;
    %995 = %993.0;
    (%994, %995, meta[relay.Constant][45] /* ty=Tensor[(1170), int32] */)
  };
  %996() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */
}

def @func_13608(%var_13606: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), float64], Tensor[(15, 9, 14), float32]) {
  @func_13605(%var_13606) /* ty=(Tensor[(11, 11, 15), float64], Tensor[(15, 9, 14), float32]) */
}

def @func_1829(%var_1775: Tensor[(5, 8, 10), uint8], %var_1776: Tensor[(5, 8, 10), uint8], %var_1784: Tensor[(324), float64], %var_1804: Tensor[(1890), float64]) -> (Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) {
  %997 = cast(%var_1776, dtype="uint8") /* ty=Tensor[(5, 8, 10), uint8] */;
  %998 = shape_of(%var_1775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%var_1775, dtype="uint8") /* ty=Tensor[(5, 8, 10), uint8] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1001 = cast(%var_1784, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1002 = reshape(%1001, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %1003 = cast(%var_1784, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1004 = reshape(%1003, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %1005 = cast(%var_1804, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1006 = reshape(%1005, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %1007 = @func_860(%1006) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %1008 = cast(%var_1804, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1009 = sigmoid(%1008) /* ty=Tensor[(1890), float64] */;
  %1010 = cast(%1009, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %1011 = bitwise_xor(%999, %1000) /* ty=Tensor[(5, 8, 10), uint8] */;
  %1012 = @func_1091(%1002) /* ty=Tensor[(3, 9, 12), float64] */;
  %1013 = @func_1091(%1004) /* ty=Tensor[(3, 9, 12), float64] */;
  %1014 = %1007.2;
  %1015 = sin(%1010) /* ty=Tensor[(1890), float32] */;
  (%1011, %1012, %var_1784, %1013, %1014, %1015)
}

def @func_5470() -> (Tensor[(15, 9, 14), float64],) {
  %1016 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %1017 = %1016.1;
  (%1017,)
}

def @func_14542(%var_14539: Tensor[(400), uint8], %var_14540: Tensor[(324), float64], %var_14541: Tensor[(252), float64]) -> (Tensor[(1890), int64], Tensor[(126, 2), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64]) {
  @func_14537(%var_14539, %var_14540, %var_14541) /* ty=(Tensor[(1890), int64], Tensor[(126, 2), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64]) */
}

def @func_9002(%var_9001: Tensor[(18, 18), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(18, 18), float64]) {
  %1023 = fn (%var_8993: Tensor[(18, 18), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(18, 18), float64]) {
    %1018 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %1019 = cast(%var_8993, dtype="float64") /* ty=Tensor[(18, 18), float64] */;
    %1020 = reshape(%1019, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
    %1021 = %1018.0;
    %1022 = @func_1091(%1020) /* ty=Tensor[(3, 9, 12), float64] */;
    (%1021, %1022, %var_8993)
  };
  %1023(%var_9001) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(18, 18), float64]) */
}

def @func_7994() -> (Tensor[(1890), float32],) {
  %1024 = @func_6255() /* ty=Tensor[(1890), float32] */;
  (%1024,)
}

def @func_13922() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) {
  %1028 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) {
    %1025 = @func_13735() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(9, 4, 12), float32]) */;
    %1026 = @func_11102() /* ty=Tensor[(15, 9, 14), float64] */;
    %1027 = %1025.2;
    (%1026, %1027)
  };
  %1028() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) */
}

def @func_6256() -> Tensor[(1890), float32] {
  %1029 = fn () -> Tensor[(1890), float32] {
    @func_4885() /* ty=Tensor[(1890), float32] */
  };
  %1029() /* ty=Tensor[(1890), float32] */
}

def @func_8706(%var_8704: Tensor[(324), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(324), float64]) {
  @func_8703(%var_8704) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64], Tensor[(324), float64]) */
}

def @func_15477() -> (Tensor[(9, 4, 12), float32], Tensor[(1890), float64]) {
  %1030 = @func_14606() /* ty=(Tensor[(9, 4, 12), float32],) */;
  %1031 = %1030.0;
  %1032 = @func_10653() /* ty=Tensor[(1890), float64] */;
  (%1031, %1032)
}

def @func_6683() -> (Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) {
  @func_6681() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(165), uint32]) */
}

def @func_6572(%var_6570: Tensor[(3360), uint64]) -> (Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) {
  @func_6569(%var_6570) /* ty=(Tensor[(1890), float32], Tensor[(15, 9, 14), float64], Tensor[(3360), uint64]) */
}

def @func_15420(%var_15418: Tensor[(324, 7), float64]) -> (Tensor[(324, 7), bool],) {
  @func_15417(%var_15418) /* ty=(Tensor[(324, 7), bool],) */
}

def @func_11818(%var_11780: Tensor[(55), bool]) -> (Tensor[(1890), float64], Tensor[(12, 4, 11), int32], Tensor[(6, 13, 15), bool], Tensor[(55), bool]) {
  %1033 = @func_8306() /* ty=(Tensor[(1170), int32], Tensor[(1890), float64]) */;
  %1034 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
  %1035 = cast(%var_11780, dtype="bool") /* ty=Tensor[(55), bool] */;
  %1036 = %1033.1;
  %1037 = cast(%1036, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1038 = reshape(%1035, newshape=[55]) /* ty=Tensor[(55), bool] */;
  %1039 = reshape(%1037, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %1040 = @func_9926(%1038, %1039) /* ty=(Tensor[(3, 9, 12), float64], Tensor[(6, 13, 15), bool], Tensor[(252), float64], Tensor[(55), bool], Tensor[(1890), float64]) */;
  %1041 = %1034.2;
  %1042 = %1040.1;
  (%1036, %1041, %1042, %var_11780)
}

def @func_11631(%var_11629: Tensor[(324), float64]) -> (Tensor[(3, 11, 5), uint16], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(324, 1), float64], Tensor[(9, 4, 12), float32]) {
  @func_11628(%var_11629) /* ty=(Tensor[(3, 11, 5), uint16], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(324, 1), float64], Tensor[(9, 4, 12), float32]) */
}

def @func_10281(%var_10264: Tensor[(324), float64]) -> (Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), int64]) {
  %1043 = cast(meta[relay.Constant][46] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %1044 = cast(%var_10264, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1045 = reshape(%1043, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %1046 = reshape(%1044, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %1047 = @func_8619(%1045, %1046) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float64]) */;
  %1048 = @func_8306() /* ty=(Tensor[(1170), int32], Tensor[(1890), float64]) */;
  %1049 = %1048.1;
  %1050 = cast(meta[relay.Constant][47] /* ty=Tensor[(1890), float64] */, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %1051 = shape_of(%1049, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1052 = cast(%1049, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1054 = %1047.2;
  %1055 = multiply(%1052, %1053) /* ty=Tensor[(1890), int64] */;
  (%1054, meta[relay.Constant][46] /* ty=Tensor[(400), uint8] */, %var_10264, %1055)
}

def @func_7678() -> (Tensor[(9, 4, 12), float32],) {
  %1056 = @func_4626() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */;
  %1057 = %1056.0;
  (%1057,)
}

def @func_4258(%var_4256: Tensor[(16, 15, 14), uint64], %var_4257: Tensor[(16, 15, 14), uint64]) -> (Tensor[(16, 15, 14), uint64],) {
  @func_4254(%var_4256, %var_4257) /* ty=(Tensor[(16, 15, 14), uint64],) */
}

def @func_6428(%var_6426: Tensor[(7, 6, 16), uint16], %var_6427: Tensor[(7, 6, 16), uint16]) -> (Tensor[(7, 6, 16), uint16],) {
  %1063 = fn (%var_6405: Tensor[(7, 6, 16), uint16], %var_6406: Tensor[(7, 6, 16), uint16]) -> (Tensor[(7, 6, 16), uint16],) {
    %1058 = cast(%var_6406, dtype="uint16") /* ty=Tensor[(7, 6, 16), uint16] */;
    %1059 = shape_of(%var_6405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1060 = cast(%var_6405, dtype="uint16") /* ty=Tensor[(7, 6, 16), uint16] */;
    %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1062 = logical_xor(%1060, %1061) /* ty=Tensor[(7, 6, 16), uint16] */;
    (%1062,)
  };
  %1063(%var_6426, %var_6427) /* ty=(Tensor[(7, 6, 16), uint16],) */
}

def @func_10825() -> (Tensor[(15, 9, 14), float32], Tensor[(1170), int32]) {
  %1068 = fn () -> (Tensor[(15, 9, 14), float32], Tensor[(1170), int32]) {
    %1064 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
    %1065 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
    %1066 = %1064.0;
    %1067 = %1065.2;
    (%1066, %1067)
  };
  %1068() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(1170), int32]) */
}

def @func_13394(%var_13370: int8, %var_13371: Tensor[(2, 3, 13), int8]) -> (Tensor[(2, 3, 13), int8], Tensor[(2, 3, 13), float32]) {
  %1069 = cast(%var_13370, dtype="int8") /* ty=int8 */;
  %1070 = cast(%var_13371, dtype="int8") /* ty=Tensor[(2, 3, 13), int8] */;
  %1071 = cast(%var_13371, dtype="float32") /* ty=Tensor[(2, 3, 13), float32] */;
  %1072 = bitwise_and(%1069, %1070) /* ty=Tensor[(2, 3, 13), int8] */;
  %1073 = cos(%1071) /* ty=Tensor[(2, 3, 13), float32] */;
  (%1072, %1073)
}

def @func_7628() -> (Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) {
  %1079 = fn () -> (Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) {
    %1074 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %1075 = %1074.0;
    %1076 = cast(%1075, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
    %1077 = log(%1076) /* ty=Tensor[(15, 9, 14), float32] */;
    %1078 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
    (%1077, %1078)
  };
  %1079() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */
}

def @func_5747() -> Tensor[(15, 9, 14), float64] {
  %1081 = fn () -> Tensor[(15, 9, 14), float64] {
    %1080 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
    %1080.0
  };
  %1081() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_11912() -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64]) {
  %1085 = fn () -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64]) {
    %1082 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
    %1083 = %1082.1;
    %1084 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
    (%1083, %1084)
  };
  %1085() /* ty=(Tensor[(1890), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_14858() -> (Tensor[(15, 9, 14), float64],) {
  @func_14856() /* ty=(Tensor[(15, 9, 14), float64],) */
}

def @func_11871(%var_11869: Tensor[(1890), float32]) -> (Tensor[(9, 4, 12), float32], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(1890), float64]) {
  @func_11868(%var_11869) /* ty=(Tensor[(9, 4, 12), float32], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(1890), float64]) */
}

def @func_9177(%var_9170: Tensor[(3360), uint64], %var_9171: Tensor[(64), uint64], %var_9172: Tensor[(128), uint64], %var_9173: Tensor[(55), bool], %var_9174: Tensor[(54, 6), float64], %var_9175: Tensor[(4, 168), uint16], %var_9176: Tensor[(54, 6), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(16, 15, 14), uint64], Tensor[(3360), uint64], Tensor[(400), uint8], Tensor[(64), uint64], Tensor[(128), uint64], Tensor[(55), bool], Tensor[(8, 50), uint8], Tensor[(1890), float32], Tensor[(8, 66), int32], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), uint16], Tensor[(16, 15, 14), uint64], Tensor[(54, 6), float64], Tensor[(1890), float64], Tensor[(54, 6), bool], Tensor[(54, 6), float32]) {
  @func_9168(%var_9170, %var_9171, %var_9172, %var_9173, %var_9174, %var_9175, %var_9176) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(9, 4, 12), float32], Tensor[(16, 15, 14), uint64], Tensor[(3360), uint64], Tensor[(400), uint8], Tensor[(64), uint64], Tensor[(128), uint64], Tensor[(55), bool], Tensor[(8, 50), uint8], Tensor[(1890), float32], Tensor[(8, 66), int32], Tensor[(7, 6, 16), uint16], Tensor[(4, 168), uint16], Tensor[(16, 15, 14), uint64], Tensor[(54, 6), float64], Tensor[(1890), float64], Tensor[(54, 6), bool], Tensor[(54, 6), float32]) */
}

def @func_11343() -> (Tensor[(528), int32],) {
  %1086 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
  %1087 = %1086.1;
  (%1087,)
}

def @func_9295() -> Tensor[(528), int32] {
  @func_5809() /* ty=Tensor[(528), int32] */
}

def @func_7151() -> (Tensor[(9, 4, 12), float32],) {
  %1089 = fn () -> (Tensor[(9, 4, 12), float32],) {
    %1088 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
    (%1088,)
  };
  %1089() /* ty=(Tensor[(9, 4, 12), float32],) */
}

def @func_6061(%var_6059: Tensor[(324), float64], %var_6060: Tensor[(1890), float64]) -> (Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
  %1102 = fn (%var_6047: Tensor[(324), float64], %var_6048: Tensor[(1890), float64]) -> (Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) {
    %1090 = @func_5006() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(12, 4, 11), int32], int32, Tensor[(528), int32]) */;
    %1091 = cast(meta[relay.Constant][48] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
    %1092 = cast(meta[relay.Constant][48] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
    %1093 = cast(%var_6047, dtype="float64") /* ty=Tensor[(324), float64] */;
    %1094 = cast(%var_6048, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %1095 = reshape(%1091, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
    %1096 = reshape(%1092, newshape=[5, 8, 10]) /* ty=Tensor[(5, 8, 10), uint8] */;
    %1097 = reshape(%1093, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %1098 = reshape(%1094, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
    %1099 = @func_1829(%1095, %1096, %1097, %1098) /* ty=(Tensor[(5, 8, 10), uint8], Tensor[(3, 9, 12), float64], Tensor[(324), float64], Tensor[(3, 9, 12), float64], Tensor[(1170), int32], Tensor[(1890), float32]) */;
    %1100 = %1090.4;
    %1101 = %1099.2;
    (%1100, %1101, meta[relay.Constant][48] /* ty=Tensor[(400), uint8] */, %var_6047, %var_6048)
  };
  %1102(%var_6059, %var_6060) /* ty=(Tensor[(528), int32], Tensor[(324), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(1890), float64]) */
}

def @func_9829() -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) {
  %1106 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) {
    %1103 = @func_7627() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64]) */;
    %1104 = %1103.1;
    %1105 = @func_6387() /* ty=Tensor[(1890), float32] */;
    (%1104, %1105)
  };
  %1106() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32]) */
}

def @func_12989() -> (Tensor[(1890), float64],) {
  @func_12987() /* ty=(Tensor[(1890), float64],) */
}

def @func_13024(%var_13022: Tensor[(324), float64]) -> (Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(324), float64]) {
  @func_13021(%var_13022) /* ty=(Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(324), float64]) */
}

def @func_8210() -> Tensor[(15, 9, 14), float32] {
  %1110 = fn () -> Tensor[(15, 9, 14), float32] {
    %1107 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %1108 = %1107.0;
    %1109 = cast(%1108, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
    tan(%1109) /* ty=Tensor[(15, 9, 14), float32] */
  };
  %1110() /* ty=Tensor[(15, 9, 14), float32] */
}

def @func_14597() -> (Tensor[(1170), int32],) {
  %1113 = fn () -> (Tensor[(1170), int32],) {
    %1111 = @func_10643() /* ty=(Tensor[(528), int32], Tensor[(15, 9, 14), float64], Tensor[(1170), int32]) */;
    %1112 = %1111.2;
    (%1112,)
  };
  %1113() /* ty=(Tensor[(1170), int32],) */
}

def @func_4687() -> (Tensor[(15, 9, 14), float64],) {
  @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */
}

def @func_13162(%var_13160: Tensor[(1170), int32], %var_13161: Tensor[(27), float32]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(6, 13, 15), bool], Tensor[(9, 4, 12), float64], Tensor[(9, 4, 12), float32], Tensor[(528), int32], Tensor[(27), float32], Tensor[(15, 9, 14), float32], Tensor[(1170), float64]) {
  %1137 = fn (%var_13113: Tensor[(1170), int32], %var_13130: Tensor[(27), float32]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(6, 13, 15), bool], Tensor[(9, 4, 12), float64], Tensor[(9, 4, 12), float32], Tensor[(528), int32], Tensor[(27), float32], Tensor[(15, 9, 14), float32], Tensor[(1170), float64]) {
    %1114 = @func_7061() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) */;
    %1115 = @func_7197() /* ty=(Tensor[(528), int32], Tensor[(1890), float32], Tensor[(15, 9, 14), float64]) */;
    %1116 = cast(%var_13113, dtype="int32") /* ty=Tensor[(1170), int32] */;
    %1117 = cast(%var_13113, dtype="int32") /* ty=Tensor[(1170), int32] */;
    %1118 = reshape(%1116, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
    %1119 = reshape(%1117, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
    %1120 = @func_7089() /* ty=(Tensor[(9, 4, 12), float64], Tensor[(3, 9, 12), float64], Tensor[(324, 1), float64]) */;
    %1121 = @func_7150() /* ty=(Tensor[(9, 4, 12), float32],) */;
    %1122 = cast(%var_13130, dtype="float32") /* ty=Tensor[(27), float32] */;
    %1123 = reshape(%1122, newshape=[27]) /* ty=Tensor[(27), float32] */;
    %1124 = @func_12736(%1123) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(3, 3, 3), float32], Tensor[(27), float32], Tensor[(528), int32]) */;
    %1125 = @func_10048() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(528), int32], Tensor[(12, 4, 11), int32], int32, Tensor[(15, 9, 14), float32]) */;
    %1126 = cast(%var_13113, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %1127 = asinh(%1126) /* ty=Tensor[(1170), float32] */;
    %1128 = cast(%1127, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %1129 = %1114.1;
    %1130 = %1115.1;
    %1131 = @func_458(%1118, %1119) /* ty=Tensor[(6, 13, 15), bool] */;
    %1132 = %1120.0;
    %1133 = %1121.0;
    %1134 = %1124.1;
    %1135 = %1125.4;
    %1136 = asin(%1128) /* ty=Tensor[(1170), float64] */;
    (%1129, %1130, %1131, %1132, %1133, %1134, %var_13130, %1135, %1136)
  };
  %1137(%var_13160, %var_13161) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(6, 13, 15), bool], Tensor[(9, 4, 12), float64], Tensor[(9, 4, 12), float32], Tensor[(528), int32], Tensor[(27), float32], Tensor[(15, 9, 14), float32], Tensor[(1170), float64]) */
}

def @func_4083(%var_4081: int32, %var_4082: Tensor[(12, 4, 11), int32]) -> Tensor[(12, 4, 11), int32] {
  @func_4079(%var_4081, %var_4082) /* ty=Tensor[(12, 4, 11), int32] */
}

def @func_7996() -> (Tensor[(1890), float32],) {
  @func_7994() /* ty=(Tensor[(1890), float32],) */
}

def @func_11103() -> Tensor[(15, 9, 14), float64] {
  %1141 = fn () -> Tensor[(15, 9, 14), float64] {
    %1138 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %1139 = %1138.0;
    %1140 = cast(%1139, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
    cosh(%1140) /* ty=Tensor[(15, 9, 14), float64] */
  };
  %1141() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_6486(%var_6485: Tensor[(1170), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(390, 3), int32], Tensor[(1170), int32], Tensor[(15, 9, 14), float64]) {
  %1151 = fn (%var_6467: Tensor[(1170), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(390, 3), int32], Tensor[(1170), int32], Tensor[(15, 9, 14), float64]) {
    %1142 = @func_5103() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */;
    %1143 = @func_5026() /* ty=(Tensor[(1890), float32],) */;
    %1144 = cast(%var_6467, dtype="int32") /* ty=Tensor[(1170), int32] */;
    %1145 = reshape(%1144, newshape=[390, 3]) /* ty=Tensor[(390, 3), int32] */;
    %1146 = @func_6206(%1145) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) */;
    %1147 = %1142.0;
    %1148 = %1143.0;
    %1149 = %1146.4;
    %1150 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
    (%1147, %1148, %1149, %var_6467, %1150)
  };
  %1151(%var_6485) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(390, 3), int32], Tensor[(1170), int32], Tensor[(15, 9, 14), float64]) */
}

def @func_5439() -> (Tensor[(1890), float64],) {
  @func_5437() /* ty=(Tensor[(1890), float64],) */
}

def @func_4627() -> (Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) {
  %1158 = fn () -> (Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) {
    %1152 = cast(meta[relay.Constant][49] /* ty=Tensor[(9, 4, 12), float32] */, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
    %1153 = cast(meta[relay.Constant][50] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %1154 = reshape(%1153, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
    %1155 = @func_860(%1154) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
    %1156 = tan(%1152) /* ty=Tensor[(9, 4, 12), float32] */;
    %1157 = %1155.0;
    (%1156, %1157, meta[relay.Constant][50] /* ty=Tensor[(1890), float64] */)
  };
  %1158() /* ty=(Tensor[(9, 4, 12), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float64]) */
}

def @func_4762() -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
  %1166 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
    %1159 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %1160 = cast(meta[relay.Constant][51] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
    %1161 = cast(meta[relay.Constant][51] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
    %1162 = reshape(%1160, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
    %1163 = reshape(%1161, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), int32] */;
    %1164 = %1159.0;
    %1165 = @func_458(%1162, %1163) /* ty=Tensor[(6, 13, 15), bool] */;
    (%1164, %1165, meta[relay.Constant][51] /* ty=Tensor[(1170), int32] */)
  };
  %1166() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */
}

def @func_11868(%var_11850: Tensor[(1890), float32]) -> (Tensor[(9, 4, 12), float32], Tensor[(1890), float64], Tensor[(1890), float32], Tensor[(1890), float64]) {
  %1167 = cast(%var_11850, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %1168 = reshape(%1167, newshape=[1890]) /* ty=Tensor[(1890), float32] */;
  %1169 = @func_8039(%1168) /* ty=(Tensor[(1890), float64],) */;
  %1170 = @func_10515() /* ty=(Tensor[(1890), float64],) */;
  %1171 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
  %1172 = %1169.0;
  %1173 = %1170.0;
  (%1171, %1172, %var_11850, %1173)
}

def @func_10084() -> (Tensor[(1890), float32],) {
  %1176 = fn () -> (Tensor[(1890), float32],) {
    %1174 = @func_7409() /* ty=(Tensor[(1890), float32],) */;
    %1175 = %1174.0;
    (%1175,)
  };
  %1176() /* ty=(Tensor[(1890), float32],) */
}

def @func_6717(%var_6715: Tensor[(11, 14, 11), uint8], %var_6716: Tensor[(11, 14, 11), uint8]) -> (Tensor[(11, 14, 11), uint8],) {
  @func_6713(%var_6715, %var_6716) /* ty=(Tensor[(11, 14, 11), uint8],) */
}

def @func_14093() -> Tensor[(528), int32] {
  @func_14091() /* ty=Tensor[(528), int32] */
}

def @func_13886() -> (Tensor[(15, 9, 14), float64], Tensor[(324, 1), float64], Tensor[(324), float64]) {
  %1183 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(324, 1), float64], Tensor[(324), float64]) {
    %1177 = @func_13770() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(1890), uint16]) */;
    %1178 = cast(meta[relay.Constant][52] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
    %1179 = reshape(%1178, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %1180 = @func_11628(%1179) /* ty=(Tensor[(3, 11, 5), uint16], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(15, 9, 14), float32], Tensor[(324, 1), float64], Tensor[(9, 4, 12), float32]) */;
    %1181 = %1177.0;
    %1182 = %1180.5;
    (%1181, %1182, meta[relay.Constant][52] /* ty=Tensor[(324), float64] */)
  };
  %1183() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(324, 1), float64], Tensor[(324), float64]) */
}

def @func_5413(%var_5374: Tensor[(11, 5), bool], %var_5395: Tensor[(400), uint8], %var_5396: Tensor[(324), float64], %var_5397: Tensor[(252), float64]) -> (Tensor[(15, 9, 14), float64], Tensor[(?, 11, 5), bool], Tensor[(11, 5), bool], Tensor[(16, 15, 14), uint32], Tensor[(15, 9, 14), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(252), float64], Tensor[(140, 24), bool], Tensor[(15, 9, 14), float64]) {
  %1184 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %1185 = cast(%var_5374, dtype="bool") /* ty=Tensor[(11, 5), bool] */;
  %1186 = cast(%var_5374, dtype="bool") /* ty=Tensor[(11, 5), bool] */;
  %1187 = reshape(%1185, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %1188 = reshape(%1186, newshape=[1, 11, 5]) /* ty=Tensor[(1, 11, 5), bool] */;
  %1189 = @func_2811(%1187, %1188) /* ty=(Tensor[(?, 11, 5), bool], Tensor[(1, 11, 5), float64]) */;
  %1190 = cast(meta[relay.Constant][53] /* ty=Tensor[(140, 24), uint64] */, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
  %1191 = cast(meta[relay.Constant][53] /* ty=Tensor[(140, 24), uint64] */, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
  %1192 = reshape(%1190, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1193 = reshape(%1191, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1194 = @func_4254(%1192, %1193) /* ty=(Tensor[(16, 15, 14), uint64],) */;
  %1195 = %1194.0;
  %1196 = cast(%1195, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %1197 = cast(meta[relay.Constant][53] /* ty=Tensor[(140, 24), uint64] */, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
  %1198 = reshape(%1196, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1199 = reshape(%1197, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
  %1200 = @func_4254(%1198, %1199) /* ty=(Tensor[(16, 15, 14), uint64],) */;
  %1201 = %1200.0;
  %1202 = cast(%1201, dtype="uint32") /* ty=Tensor[(16, 15, 14), uint32] */;
  %1203 = shape_of(%1195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1204 = cast(%1195, dtype="uint32") /* ty=Tensor[(16, 15, 14), uint32] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1206 = cast(%var_5395, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %1207 = cast(%var_5396, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1208 = cast(%var_5397, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1209 = reshape(%1206, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %1210 = reshape(%1207, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %1211 = reshape(%1208, newshape=[126, 2]) /* ty=Tensor[(126, 2), float64] */;
  %1212 = @func_5272(%1209, %1210, %1211) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), float64], Tensor[(400), uint8], Tensor[(324), float64], Tensor[(6, 13, 15), bool], Tensor[(126, 2), float64], Tensor[(1, 55), bool], Tensor[(324), float64]) */;
  %1213 = cast(%1201, dtype="uint16") /* ty=Tensor[(16, 15, 14), uint16] */;
  %1214 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(140, 24), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1215 = cast(meta[relay.Constant][53] /* ty=Tensor[(140, 24), uint64] */, dtype="uint16") /* ty=Tensor[(140, 24), uint16] */;
  %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1217 = maximum(%1215, %1216) /* ty=Tensor[(140, 24), uint16] */;
  %1218 = cast(%1195, dtype="bool") /* ty=Tensor[(16, 15, 14), bool] */;
  %1219 = shape_of(%1217, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1220 = cast(%1217, dtype="bool") /* ty=Tensor[(140, 24), bool] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1222 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %1223 = %1184.0;
  %1224 = %1189.0;
  %1225 = left_shift(%1204, %1205) /* ty=Tensor[(16, 15, 14), uint32] */;
  %1226 = %1212.0;
  %1227 = greater_equal(%1220, %1221) /* ty=Tensor[(140, 24), bool] */;
  %1228 = %1222.0;
  (%1223, %1224, %var_5374, %1225, %1226, %var_5395, %var_5396, %var_5397, %1227, %1228)
}

def @func_13038() -> Tensor[(9, 4, 12), float32] {
  %1230 = fn () -> Tensor[(9, 4, 12), float32] {
    %1229 = @func_7150() /* ty=(Tensor[(9, 4, 12), float32],) */;
    %1229.0
  };
  %1230() /* ty=Tensor[(9, 4, 12), float32] */
}

def @func_11950(%var_11948: Tensor[(8, 2, 5), float64]) -> Tensor[(8, 2, 5), float64] {
  @func_11947(%var_11948) /* ty=Tensor[(8, 2, 5), float64] */
}

def @func_8800(%var_8798: Tensor[(120), float64], %var_8799: Tensor[(324), float64]) -> (Tensor[(1170), int32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(9, 4, 12), float32], Tensor[(3, 9, 12), int64], Tensor[(324), float64], Tensor[(1890), float32]) {
  %1243 = fn (%var_8754: Tensor[(120), float64], %var_8787: Tensor[(324), float64]) -> (Tensor[(1170), int32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(9, 4, 12), float32], Tensor[(3, 9, 12), int64], Tensor[(324), float64], Tensor[(1890), float32]) {
    %1231 = @func_8306() /* ty=(Tensor[(1170), int32], Tensor[(1890), float64]) */;
    %1232 = cast(%var_8754, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1233 = reshape(%1232, newshape=[1, 12, 10]) /* ty=Tensor[(1, 12, 10), float64] */;
    %1234 = cast(%var_8787, dtype="float64") /* ty=Tensor[(324), float64] */;
    %1235 = reshape(%1234, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
    %1236 = @func_7343(%1235) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 9, 12), int64], Tensor[(15, 9, 14), float64]) */;
    %1237 = @func_7409() /* ty=(Tensor[(1890), float32],) */;
    %1238 = %1231.0;
    %1239 = @func_4420(%1233) /* ty=Tensor[(1, 12, 10), float64] */;
    %1240 = @func_5945() /* ty=Tensor[(9, 4, 12), float32] */;
    %1241 = %1236.1;
    %1242 = %1237.0;
    (%1238, %1239, %var_8754, %1240, %1241, %var_8787, %1242)
  };
  %1243(%var_8798, %var_8799) /* ty=(Tensor[(1170), int32], Tensor[(1, 12, 10), float64], Tensor[(120), float64], Tensor[(9, 4, 12), float32], Tensor[(3, 9, 12), int64], Tensor[(324), float64], Tensor[(1890), float32]) */
}

def @func_13398(%var_13396: int8, %var_13397: Tensor[(2, 3, 13), int8]) -> (Tensor[(2, 3, 13), int8], Tensor[(2, 3, 13), float32]) {
  @func_13394(%var_13396, %var_13397) /* ty=(Tensor[(2, 3, 13), int8], Tensor[(2, 3, 13), float32]) */
}

def @func_6780() -> Tensor[(1890), float64] {
  %1244 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %1244.0
}

def @func_12794(%var_12792: Tensor[(1170), int32]) -> Tensor[(1170), uint8] {
  @func_12791(%var_12792) /* ty=Tensor[(1170), uint8] */
}

def @func_6209(%var_6207: Tensor[(390, 3), int32]) -> (Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) {
  @func_6206(%var_6207) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(3, 3, 3), float32], Tensor[(27), float64], Tensor[(6, 13, 15), bool], Tensor[(390, 3), int32]) */
}

def @func_11947(%var_11939: Tensor[(8, 2, 5), float64]) -> Tensor[(8, 2, 5), float64] {
  %1245 = cast(%var_11939, dtype="float64") /* ty=Tensor[(8, 2, 5), float64] */;
  atan(%1245) /* ty=Tensor[(8, 2, 5), float64] */
}

def @func_14651(%var_14650: Tensor[(672), uint16]) -> (Tensor[(15, 9, 14), float64], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16]) {
  %1254 = fn (%var_14642: Tensor[(672), uint16]) -> (Tensor[(15, 9, 14), float64], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16]) {
    %1246 = @func_11911() /* ty=(Tensor[(1890), float64], Tensor[(15, 9, 14), float64]) */;
    %1247 = cast(%var_14642, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %1248 = cast(%var_14642, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %1249 = reshape(%1247, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
    %1250 = reshape(%1248, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
    %1251 = @func_6425(%1249, %1250) /* ty=(Tensor[(7, 6, 16), uint16],) */;
    %1252 = %1246.1;
    %1253 = %1251.0;
    (%1252, %1253, %var_14642)
  };
  %1254(%var_14650) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(7, 6, 16), uint16], Tensor[(672), uint16]) */
}

def @func_10562(%var_10551: Tensor[(1890), float32]) -> (Tensor[(1890), int64],) {
  %1255 = @func_10083() /* ty=(Tensor[(1890), float32],) */;
  %1256 = %1255.0;
  %1257 = cast(%var_10551, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %1258 = shape_of(%1256, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1259 = cast(%1256, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %1260 = dyn.reshape(%1257, %1258, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1261 = minimum(%1259, %1260) /* ty=Tensor[(1890), int64] */;
  (%1261,)
}

def @func_14205(%var_14203: Tensor[(15, 13, 13), float64]) -> (Tensor[(15, 13, 13), float64],) {
  @func_14202(%var_14203) /* ty=(Tensor[(15, 13, 13), float64],) */
}

def @func_5104() -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) {
  %1268 = fn () -> (Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) {
    %1262 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %1263 = %1262.0;
    %1264 = cast(%1263, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
    %1265 = reshape(%1264, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
    %1266 = @func_860(%1265) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
    %1267 = %1266.1;
    (%1263, %1267)
  };
  %1268() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool]) */
}

def @func_12791(%var_12776: Tensor[(1170), int32]) -> Tensor[(1170), uint8] {
  %1269 = @func_4815() /* ty=(Tensor[(1890), float64], Tensor[(1890), float64], Tensor[(1170), int32]) */;
  %1270 = %1269.2;
  %1271 = cast(%var_12776, dtype="uint8") /* ty=Tensor[(1170), uint8] */;
  %1272 = shape_of(%1270, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1273 = cast(%1270, dtype="uint8") /* ty=Tensor[(1170), uint8] */;
  %1274 = dyn.reshape(%1271, %1272, newshape=[]) /* ty=Tensor[(?), uint8] */;
  logical_xor(%1273, %1274) /* ty=Tensor[(1170), uint8] */
}

def @func_7831() -> (Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(15, 9, 14), float64]) {
  %1275 = @func_6957() /* ty=(Tensor[(15, 9, 14), float64],) */;
  %1276 = %1275.0;
  %1277 = cast(%1276, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %1278 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
  %1279 = @func_4761() /* ty=(Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */;
  %1280 = @func_6731() /* ty=Tensor[(15, 9, 14), float64] */;
  %1281 = asinh(%1277) /* ty=Tensor[(15, 9, 14), float32] */;
  %1282 = %1278.0;
  %1283 = @func_5746() /* ty=Tensor[(15, 9, 14), float64] */;
  %1284 = %1279.0;
  (%1280, %1281, %1282, %1283, %1284)
}

def @func_14873() -> Tensor[(15, 9, 14), float64] {
  @func_14871() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_8039(%var_8030: Tensor[(1890), float32]) -> (Tensor[(1890), float64],) {
  %1285 = @func_7994() /* ty=(Tensor[(1890), float32],) */;
  %1286 = %1285.0;
  %1287 = cast(%var_8030, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1288 = shape_of(%1286, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1289 = cast(%1286, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1291 = power(%1289, %1290) /* ty=Tensor[(1890), float64] */;
  %1292 = cast(%1291, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1293 = asinh(%1292) /* ty=Tensor[(1890), float64] */;
  (%1293,)
}

def @func_7942() -> (Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) {
  @func_7940() /* ty=(Tensor[(6, 13, 15), bool], Tensor[(1170), int32]) */
}

def @func_458(%var_448: Tensor[(6, 13, 15), int32], %var_449: Tensor[(6, 13, 15), int32]) -> Tensor[(6, 13, 15), bool] {
  %1294 = cast(%var_449, dtype="bool") /* ty=Tensor[(6, 13, 15), bool] */;
  %1295 = shape_of(%var_448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1296 = cast(%var_448, dtype="bool") /* ty=Tensor[(6, 13, 15), bool] */;
  %1297 = dyn.reshape(%1294, %1295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1296, %1297) /* ty=Tensor[(6, 13, 15), bool] */
}

def @func_12319() -> Tensor[(8, 10, 3), int64] {
  %1302 = fn () -> Tensor[(8, 10, 3), int64] {
    %1298 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 10, 3), int64] */, dtype="int64") /* ty=Tensor[(8, 10, 3), int64] */;
    %1299 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(8, 10, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1300 = cast(meta[relay.Constant][54] /* ty=Tensor[(8, 10, 3), int64] */, dtype="int64") /* ty=Tensor[(8, 10, 3), int64] */;
    %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    add(%1300, %1301) /* ty=Tensor[(8, 10, 3), int64] */
  };
  %1302() /* ty=Tensor[(8, 10, 3), int64] */
}

def @func_5586(%var_5585: Tensor[(140, 24), uint64]) -> (Tensor[(15, 9, 14), float64], Tensor[(16, 15, 14), uint64], Tensor[(140, 24), uint64]) {
  %1311 = fn (%var_5568: Tensor[(140, 24), uint64]) -> (Tensor[(15, 9, 14), float64], Tensor[(16, 15, 14), uint64], Tensor[(140, 24), uint64]) {
    %1303 = @func_4685() /* ty=(Tensor[(15, 9, 14), float64],) */;
    %1304 = cast(%var_5568, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
    %1305 = cast(%var_5568, dtype="uint64") /* ty=Tensor[(140, 24), uint64] */;
    %1306 = reshape(%1304, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
    %1307 = reshape(%1305, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), uint64] */;
    %1308 = @func_4254(%1306, %1307) /* ty=(Tensor[(16, 15, 14), uint64],) */;
    %1309 = %1303.0;
    %1310 = %1308.0;
    (%1309, %1310, %var_5568)
  };
  %1311(%var_5585) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 15, 14), uint64], Tensor[(140, 24), uint64]) */
}

def @func_8895() -> (Tensor[(528), int32],) {
  @func_8893() /* ty=(Tensor[(528), int32],) */
}

def @func_4254(%var_4246: Tensor[(16, 15, 14), uint64], %var_4247: Tensor[(16, 15, 14), uint64]) -> (Tensor[(16, 15, 14), uint64],) {
  %1312 = cast(%var_4247, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %1313 = shape_of(%var_4246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1314 = cast(%var_4246, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %1315 = dyn.reshape(%1312, %1313, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1316 = right_shift(%1314, %1315) /* ty=Tensor[(16, 15, 14), uint64] */;
  (%1316,)
}

def @func_13498() -> Tensor[(13, 5, 11), float64] {
  %1317 = cast(meta[relay.Constant][56] /* ty=Tensor[(13, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 11), float64] */;
  tan(%1317) /* ty=Tensor[(13, 5, 11), float64] */
}

def @func_6283() -> Tensor[(1890), float64] {
  @func_6281() /* ty=Tensor[(1890), float64] */
}

def @func_12268(%var_12255: Tensor[(5, 2, 16), float32]) -> Tensor[(5, 2, 16), float32] {
  %1318 = cast(%var_12255, dtype="float32") /* ty=Tensor[(5, 2, 16), float32] */;
  sqrt(%1318) /* ty=Tensor[(5, 2, 16), float32] */
}

def @func_13199() -> (Tensor[(528), int32], Tensor[(6, 13, 15), bool], Tensor[(324), float64]) {
  %1319 = cast(meta[relay.Constant][57] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1320 = reshape(%1319, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %1321 = @func_9463(%1320) /* ty=(Tensor[(1890), float64], Tensor[(528), int32], Tensor[(1890), float64], Tensor[(15, 9, 14), float64], Tensor[(6, 13, 15), bool], Tensor[(400), uint8], Tensor[(1890), float32], Tensor[(3, 9, 12), uint64], Tensor[(324), float64], Tensor[(3, 9, 12), float64]) */;
  %1322 = @func_12418() /* ty=Tensor[(528), int32] */;
  %1323 = %1321.4;
  (%1322, %1323, meta[relay.Constant][57] /* ty=Tensor[(324), float64] */)
}

def @func_7587(%var_7584: Tensor[(128), uint64], %var_7585: Tensor[(55), bool], %var_7586: Tensor[(400), uint8]) -> (Tensor[(1890), float64], Tensor[(1, 64), uint64], Tensor[(128), uint64], Tensor[(400), uint8], Tensor[(162, 2), float64], Tensor[(1890), float32], Tensor[(4, 16, 55), float32]) {
  %1344 = fn (%var_7552: Tensor[(128), uint64], %var_7553: Tensor[(55), bool], %var_7554: Tensor[(400), uint8]) -> (Tensor[(1890), float64], Tensor[(1, 64), uint64], Tensor[(128), uint64], Tensor[(400), uint8], Tensor[(162, 2), float64], Tensor[(1890), float32], Tensor[(4, 16, 55), float32]) {
    %1324 = @func_5437() /* ty=(Tensor[(1890), float64],) */;
    %1325 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 64), uint64] */, dtype="uint64") /* ty=Tensor[(1, 64), uint64] */;
    %1326 = cast(%var_7552, dtype="uint64") /* ty=Tensor[(128), uint64] */;
    %1327 = cast(%var_7553, dtype="bool") /* ty=Tensor[(55), bool] */;
    %1328 = cast(%var_7554, dtype="uint8") /* ty=Tensor[(400), uint8] */;
    %1329 = cast(meta[relay.Constant][59] /* ty=Tensor[(162, 2), float64] */, dtype="float64") /* ty=Tensor[(162, 2), float64] */;
    %1330 = reshape(%1325, newshape=[4, 16, 1]) /* ty=Tensor[(4, 16, 1), uint64] */;
    %1331 = reshape(%1326, newshape=[4, 16, 2]) /* ty=Tensor[(4, 16, 2), uint64] */;
    %1332 = reshape(%1327, newshape=[55]) /* ty=Tensor[(55), bool] */;
    %1333 = reshape(%1328, newshape=[400]) /* ty=Tensor[(400), uint8] */;
    %1334 = reshape(%1329, newshape=[1, 324]) /* ty=Tensor[(1, 324), float64] */;
    %1335 = @func_3351(%1330, %1331, %1332, %1333, %1334) /* ty=(Tensor[(4, 16, 2), uint64], Tensor[(?, 11, 5), bool], Tensor[(55), bool], Tensor[(4, 16, 1), float32], Tensor[(400), uint8], Tensor[(400), uint8], Tensor[(1, 324), float64], Tensor[(1890), float64]) */;
    %1336 = %1335.3;
    %1337 = cast(%var_7553, dtype="int16") /* ty=Tensor[(55), int16] */;
    %1338 = cast(%1336, dtype="int16") /* ty=Tensor[(4, 16, 1), int16] */;
    %1339 = add(%1337, %1338) /* ty=Tensor[(4, 16, 55), int16] */;
    %1340 = cast(%1339, dtype="float32") /* ty=Tensor[(4, 16, 55), float32] */;
    %1341 = %1324.0;
    %1342 = @func_4885() /* ty=Tensor[(1890), float32] */;
    %1343 = exp(%1340) /* ty=Tensor[(4, 16, 55), float32] */;
    (%1341, meta[relay.Constant][58] /* ty=Tensor[(1, 64), uint64] */, %var_7552, %var_7554, meta[relay.Constant][59] /* ty=Tensor[(162, 2), float64] */, %1342, %1343)
  };
  %1344(%var_7584, %var_7585, %var_7586) /* ty=(Tensor[(1890), float64], Tensor[(1, 64), uint64], Tensor[(128), uint64], Tensor[(400), uint8], Tensor[(162, 2), float64], Tensor[(1890), float32], Tensor[(4, 16, 55), float32]) */
}

def @func_6732() -> Tensor[(15, 9, 14), float64] {
  %1345 = fn () -> Tensor[(15, 9, 14), float64] {
    @func_5746() /* ty=Tensor[(15, 9, 14), float64] */
  };
  %1345() /* ty=Tensor[(15, 9, 14), float64] */
}

def @func_14202(%var_14190: Tensor[(15, 13, 13), float64]) -> (Tensor[(15, 13, 13), float64],) {
  %1346 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 13, 13), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 13), float64] */;
  %1347 = shape_of(%var_14190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(%var_14190, dtype="float64") /* ty=Tensor[(15, 13, 13), float64] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1350 = floor_divide(%1348, %1349) /* ty=Tensor[(15, 13, 13), float64] */;
  (%1350,)
}

def @func_14856() -> (Tensor[(15, 9, 14), float64],) {
  %1351 = @func_13735() /* ty=(Tensor[(15, 9, 14), float32], Tensor[(15, 9, 14), float64], Tensor[(1890), float32], Tensor[(9, 4, 12), float32]) */;
  %1352 = %1351.1;
  (%1352,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen822/build/output.py:4007: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen822/build/output.py", line 4012, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(60) tvmgen_default_fused_sqrt_cast_acosh_kernel0(float* __restrict__ T_acosh, double* __restrict__ placeholder) {
  T_acosh[(((int)threadIdx.x))] = acoshf(((float)sqrt(placeholder[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


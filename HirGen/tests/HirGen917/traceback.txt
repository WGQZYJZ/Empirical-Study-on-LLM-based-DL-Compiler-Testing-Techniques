==========mod==========
#[version = "0.0.5"]
def @func_17519() -> Tensor[(14, 14, 3), uint64] {
  @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @func_18423(%var_18410: Tensor[(80), uint8], %var_18411: Tensor[(20, 48), uint8], %var_18415: Tensor[(88), float64], %var_18417: Tensor[(390, 30), float64]) -> (Tensor[(11, 9, 12), uint64], Tensor[(14, 14, 3), uint64], Tensor[(264), float32], Tensor[(15, 2, ?), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(20, 48), uint8], Tensor[(44, 2), float64], Tensor[(88), float64], Tensor[(196), bool], Tensor[(390, 30), float64]) {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 9, 12), uint64] */, dtype="uint64") /* ty=Tensor[(11, 9, 12), uint64] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(11, 9, 12), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 9, 12), uint64] */, dtype="uint64") /* ty=Tensor[(11, 9, 12), uint64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %4 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %5 = @func_17830() /* ty=(Tensor[(672), float32], Tensor[(15, 2, ?), float64]) */;
  %6 = cast(%var_18410, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %7 = cast(%var_18411, dtype="uint8") /* ty=Tensor[(20, 48), uint8] */;
  %8 = reshape(%6, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
  %9 = reshape(%7, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), uint8] */;
  %10 = cast(%var_18415, dtype="float64") /* ty=Tensor[(88), float64] */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(196), bool] */, dtype="bool") /* ty=Tensor[(196), bool] */;
  %12 = @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */;
  %13 = cast(%12, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %14 = cast(%var_18410, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %15 = cast(%var_18417, dtype="float64") /* ty=Tensor[(390, 30), float64] */;
  %16 = reshape(%10, newshape=[44, 2]) /* ty=Tensor[(44, 2), float64] */;
  %17 = reshape(%11, newshape=[196]) /* ty=Tensor[(196), bool] */;
  %18 = reshape(%13, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %19 = reshape(%14, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %20 = reshape(%15, newshape=[1170, 10]) /* ty=Tensor[(1170, 10), float64] */;
  %21 = @func_14672(%16, %17, %18, %19, %20) /* ty=(Tensor[(240), float64], Tensor[(390), bool], Tensor[(44, 2), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(264), float32], Tensor[(1170, 10), bool], Tensor[(7, 3, 9), float32]) */;
  %22 = bitwise_and(%2, %3) /* ty=Tensor[(11, 9, 12), uint64] */;
  %23 = %4.2;
  %24 = %5.1;
  %25 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %26 = @func_1313(%8, %9) /* ty=Tensor[(12, 16, 5), uint8] */;
  %27 = %21.2;
  (%22, %12, %23, %24, %25, %26, %var_18410, %var_18411, %27, %var_18415, meta[relay.Constant][2] /* ty=Tensor[(196), bool] */, %var_18417)
}

def @func_20359() -> (Tensor[(7, 3, 9), float32],) {
  %28 = @func_19215() /* ty=(Tensor[(14, 14, 3), uint64], Tensor[(7, 3, 9), float32]) */;
  %29 = %28.1;
  (%29,)
}

def @func_18693() -> (Tensor[(14, 14, 3), uint64], Tensor[(7, 13, 3), int32]) {
  %30 = cast(meta[relay.Constant][3] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %31 = reshape(%30, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %32 = @func_1645(%31) /* ty=Tensor[(7, 13, 3), float64] */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(273), float64] */, dtype="int32") /* ty=Tensor[(273), int32] */;
  %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%32, dtype="int32") /* ty=Tensor[(7, 13, 3), int32] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %37 = @func_17519() /* ty=Tensor[(14, 14, 3), uint64] */;
  %38 = bitwise_or(%35, %36) /* ty=Tensor[(7, 13, 3), int32] */;
  (%37, %38)
}

def @func_16247() -> (Tensor[(15, 2, ?), float64],) {
  %39 = @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */;
  %40 = %39.1;
  (%40,)
}

def @func_20426() -> (Tensor[(7, 3, 9), float64],) {
  %41 = @func_15828() /* ty=Tensor[(7, 3, 9), float64] */;
  (%41,)
}

def @func_20557(%var_20553: Tensor[(390), bool]) -> (Tensor[(2, 7, 10), int64], Tensor[(189), float64], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) {
  %42 = @func_19321() /* ty=(Tensor[(672), float32], Tensor[(240), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(2, 7, 10), int64]) */;
  %43 = @func_19962() /* ty=Tensor[(189), float64] */;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(189), float64] */;
  %45 = cast(%var_20553, dtype="bool") /* ty=Tensor[(390), bool] */;
  %46 = reshape(%45, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
  %47 = %42.4;
  %48 = atan(%44) /* ty=Tensor[(189), float64] */;
  %49 = @func_3784(%46) /* ty=Tensor[(5, 13, 6), bool] */;
  (%47, %48, %49, %var_20553)
}

def @func_18125() -> Tensor[(14, 14, 3), uint64] {
  @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @func_16855(%var_16797: Tensor[(14, 96), int64], %var_16798: Tensor[(240), float64], %var_16835: Tensor[(14, 96), int64]) -> (Tensor[(189), float64], Tensor[(10, 42), float64], Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64], Tensor[(480), float32], Tensor[(832), int8], Tensor[(35, 4), int64], Tensor[(40, 12), float32], Tensor[(196), int64], Tensor[(14, 96), bool], Tensor[(240), float64], Tensor[(14, 96), float64], Tensor[(4, 112), float64]) {
  %50 = cast(%var_16797, dtype="int64") /* ty=Tensor[(14, 96), int64] */;
  %51 = cast(%var_16797, dtype="int64") /* ty=Tensor[(14, 96), int64] */;
  %52 = cast(%var_16798, dtype="float64") /* ty=Tensor[(240), float64] */;
  %53 = reshape(%50, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
  %54 = reshape(%51, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
  %55 = reshape(%52, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %56 = @func_7429(%53, %54, %55) /* ty=(Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %58 = reshape(%57, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %59 = cast(meta[relay.Constant][5] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %61 = cast(meta[relay.Constant][6] /* ty=Tensor[(35, 4), int64] */, dtype="int64") /* ty=Tensor[(35, 4), int64] */;
  %62 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 112), float64] */, dtype="float64") /* ty=Tensor[(4, 112), float64] */;
  %63 = cast(meta[relay.Constant][8] /* ty=Tensor[(40, 12), float32] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %64 = cast(meta[relay.Constant][9] /* ty=Tensor[(196), int64] */, dtype="int64") /* ty=Tensor[(196), int64] */;
  %65 = reshape(%59, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %66 = reshape(%60, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %67 = reshape(%61, newshape=[140]) /* ty=Tensor[(140), int64] */;
  %68 = reshape(%62, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %69 = reshape(%63, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %70 = reshape(%64, newshape=[196]) /* ty=Tensor[(196), int64] */;
  %71 = @func_10349(%65, %66, %67, %68, %69, %70) /* ty=(Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) */;
  %72 = cast(%var_16835, dtype="bool") /* ty=Tensor[(14, 96), bool] */;
  %73 = shape_of(%var_16797, dtype="int32") /* ty=Tensor[(2), int32] */;
  %74 = cast(%var_16797, dtype="bool") /* ty=Tensor[(14, 96), bool] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %76 = cast(%var_16835, dtype="float64") /* ty=Tensor[(14, 96), float64] */;
  %77 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 112), float64] */, dtype="float64") /* ty=Tensor[(4, 112), float64] */;
  %78 = @func_14476() /* ty=Tensor[(189), float64] */;
  %79 = %56.2;
  %80 = @func_1645(%58) /* ty=Tensor[(7, 13, 3), float64] */;
  %81 = %71.9;
  %82 = greater_equal(%74, %75) /* ty=Tensor[(14, 96), bool] */;
  %83 = @func_12846() /* ty=Tensor[(240), float64] */;
  %84 = asin(%76) /* ty=Tensor[(14, 96), float64] */;
  %85 = sin(%77) /* ty=Tensor[(4, 112), float64] */;
  (%78, %79, %var_16798, %80, meta[relay.Constant][4] /* ty=Tensor[(13, 21), float64] */, %81, meta[relay.Constant][5] /* ty=Tensor[(832), int8] */, meta[relay.Constant][6] /* ty=Tensor[(35, 4), int64] */, meta[relay.Constant][8] /* ty=Tensor[(40, 12), float32] */, meta[relay.Constant][9] /* ty=Tensor[(196), int64] */, %82, %83, %84, %85)
}

def @func_365(%var_356: Tensor[(240), float64]) -> (Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) {
  %86 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 14), float32] */;
  %87 = cast(meta[relay.Constant][11] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %88 = cast(%var_356, dtype="float64") /* ty=Tensor[(240), float64] */;
  %89 = reshape(%87, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
  %90 = reshape(%88, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %91 = @func_213(%89, %90) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
  %92 = cast(%var_356, dtype="float64") /* ty=Tensor[(240), float64] */;
  %93 = cast(%var_356, dtype="float64") /* ty=Tensor[(240), float64] */;
  %94 = reshape(%92, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %95 = reshape(%93, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %96 = @func_88(%94, %95) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %97 = sin(%86) /* ty=Tensor[(1, 8, 14), float32] */;
  %98 = %91.0;
  %99 = %96.0;
  (%97, %98, meta[relay.Constant][11] /* ty=Tensor[(294), float32] */, %var_356, %99)
}

def @func_3638(%var_3613: Tensor[(15, 4, 13), uint64], %var_3614: Tensor[(15, 4, 13), uint64], %var_3623: Tensor[(24, 10), float64], %var_3627: Tensor[(1, 448), float64]) -> (Tensor[(15, 4, 13), uint64], Tensor[(15, 4, 13), bool], Tensor[(12, 2, 10), float64], Tensor[(24, 10), float64], Tensor[(8, 4, 14), float64], Tensor[(1, 448), float64]) {
  %100 = cast(%var_3614, dtype="uint64") /* ty=Tensor[(15, 4, 13), uint64] */;
  %101 = shape_of(%var_3613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%var_3613, dtype="uint64") /* ty=Tensor[(15, 4, 13), uint64] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %104 = cast(%var_3614, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
  %105 = shape_of(%var_3613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%var_3613, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %108 = cast(%var_3623, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
  %109 = reshape(%108, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %110 = @func_365(%109) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */;
  %111 = cast(%var_3627, dtype="float64") /* ty=Tensor[(1, 448), float64] */;
  %112 = %110.4;
  %113 = cast(%112, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  %114 = reshape(%111, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), float64] */;
  %115 = reshape(%113, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %116 = @func_231(%114, %115) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %117 = logical_xor(%102, %103) /* ty=Tensor[(15, 4, 13), uint64] */;
  %118 = not_equal(%106, %107) /* ty=Tensor[(15, 4, 13), bool] */;
  %119 = %116.0;
  (%117, %118, %112, %var_3623, %119, %var_3627)
}

def @func_12790(%var_12713: Tensor[(832), int8], %var_12714: Tensor[(140), int64], %var_12717: Tensor[(196), int64], %var_12735: Tensor[(1, 800), float32]) -> (Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(240, 2), float32], Tensor[(196), int64], Tensor[(14, 14, 3), uint64], Tensor[(14, 42), uint64], Tensor[(10, 10, 8), float32], Tensor[(1, 135), int8], Tensor[(7, 14, 2), int64], Tensor[(1, 800), float32]) {
  %120 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %121 = cast(%var_12713, dtype="int8") /* ty=Tensor[(832), int8] */;
  %122 = cast(%var_12713, dtype="int8") /* ty=Tensor[(832), int8] */;
  %123 = cast(%var_12714, dtype="int64") /* ty=Tensor[(140), int64] */;
  %124 = cast(meta[relay.Constant][12] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %125 = cast(meta[relay.Constant][13] /* ty=Tensor[(240, 2), float32] */, dtype="float32") /* ty=Tensor[(240, 2), float32] */;
  %126 = cast(%var_12717, dtype="int64") /* ty=Tensor[(196), int64] */;
  %127 = reshape(%121, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %128 = reshape(%122, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %129 = reshape(%123, newshape=[140]) /* ty=Tensor[(140), int64] */;
  %130 = reshape(%124, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %131 = reshape(%125, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %132 = reshape(%126, newshape=[196]) /* ty=Tensor[(196), int64] */;
  %133 = @func_10349(%127, %128, %129, %130, %131, %132) /* ty=(Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) */;
  %134 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 42), uint64] */, dtype="uint64") /* ty=Tensor[(14, 42), uint64] */;
  %135 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 42), uint64] */, dtype="uint64") /* ty=Tensor[(14, 42), uint64] */;
  %136 = reshape(%134, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint64] */;
  %137 = reshape(%135, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint64] */;
  %138 = @func_10108(%136, %137) /* ty=(Tensor[(14, 14, 3), uint64],) */;
  %139 = cast(%var_12735, dtype="float32") /* ty=Tensor[(1, 800), float32] */;
  %140 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 135), int8] */, dtype="int8") /* ty=Tensor[(1, 135), int8] */;
  %141 = reshape(%139, newshape=[10, 10, 8]) /* ty=Tensor[(10, 10, 8), float32] */;
  %142 = reshape(%140, newshape=[1, 135]) /* ty=Tensor[(1, 135), int8] */;
  %143 = @func_2929(%141, %142) /* ty=(Tensor[(10, 10, 8), float32], Tensor[(3, 9, 5), int8], Tensor[(1, 135), int8], Tensor[(224, 2), float64], Tensor[(594), float32], Tensor[(112, 4), float64], Tensor[(240), float64]) */;
  %144 = cast(%var_12717, dtype="int64") /* ty=Tensor[(196), int64] */;
  %145 = reshape(%144, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), int64] */;
  %146 = @func_7808(%145) /* ty=(Tensor[(7, 14, 2), int64],) */;
  %147 = cast(%var_12735, dtype="float64") /* ty=Tensor[(1, 800), float64] */;
  %148 = atanh(%147) /* ty=Tensor[(1, 800), float64] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(1, 800), float32] */;
  %150 = %120.3;
  %151 = %133.6;
  %152 = %138.0;
  %153 = %143.0;
  %154 = %146.0;
  %155 = rsqrt(%149) /* ty=Tensor[(1, 800), float32] */;
  (%150, %151, %var_12713, %var_12714, meta[relay.Constant][12] /* ty=Tensor[(448), float64] */, meta[relay.Constant][13] /* ty=Tensor[(240, 2), float32] */, %var_12717, %152, meta[relay.Constant][14] /* ty=Tensor[(14, 42), uint64] */, %153, meta[relay.Constant][15] /* ty=Tensor[(1, 135), int8] */, %154, %155)
}

def @func_6772(%var_6730: Tensor[(12, 13, 8), float64], %var_6737: Tensor[(390), bool], %var_6760: Tensor[(240), float64]) -> (Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(12, 13, 8), int32], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
  %156 = cast(%var_6737, dtype="bool") /* ty=Tensor[(390), bool] */;
  %157 = reshape(%156, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
  %158 = cast(%var_6730, dtype="float64") /* ty=Tensor[(12, 13, 8), float64] */;
  %159 = tan(%158) /* ty=Tensor[(12, 13, 8), float64] */;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(12, 13, 8), float64] */;
  %161 = log10(%160) /* ty=Tensor[(12, 13, 8), float64] */;
  %162 = cast(%159, dtype="int32") /* ty=Tensor[(12, 13, 8), int32] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="int32") /* ty=Tensor[(12, 13, 8), int32] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %166 = cast(%var_6760, dtype="float64") /* ty=Tensor[(240), float64] */;
  %167 = cast(%var_6760, dtype="float64") /* ty=Tensor[(240), float64] */;
  %168 = reshape(%166, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %169 = reshape(%167, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %170 = @func_88(%168, %169) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %171 = @func_3784(%157) /* ty=Tensor[(5, 13, 6), bool] */;
  %172 = left_shift(%164, %165) /* ty=Tensor[(12, 13, 8), int32] */;
  %173 = %170.0;
  (%171, %var_6737, %172, %173, %var_6760)
}

def @func_9535(%var_9514: Tensor[(7, 3, 9), uint64]) -> (Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) {
  %174 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 3, 9), uint64] */, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %175 = shape_of(%var_9514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_9514, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %178 = cast(%var_9514, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %179 = left_shift(%176, %177) /* ty=Tensor[(7, 3, 9), uint64] */;
  %180 = rsqrt(%178) /* ty=Tensor[(7, 3, 9), float32] */;
  (%179, %180)
}

def @func_16097() -> Tensor[(240), float64] {
  @func_14530() /* ty=Tensor[(240), float64] */
}

def @func_16189(%var_16182: Tensor[(440, 2), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(11, 8, 10), float32], Tensor[(440, 2), float32]) {
  %181 = cast(%var_16182, dtype="float32") /* ty=Tensor[(440, 2), float32] */;
  %182 = reshape(%181, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %183 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %184 = @func_4967(%182) /* ty=Tensor[(11, 8, 10), float32] */;
  (%183, %184, %var_16182)
}

def @func_14907(%var_14819: Tensor[(11, 8, 10), float32], %var_14825: Tensor[(88), float64], %var_14826: Tensor[(196), bool], %var_14830: Tensor[(960), uint8], %var_14831: Tensor[(640), uint64], %var_14832: Tensor[(1170, 1), float64], %var_14834: Tensor[(672), float32]) -> (Tensor[(11, 8, 10), int32], Tensor[(12, 16, 5), uint8], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(1170, 1), float64], Tensor[(780), float64], Tensor[(672), float32], Tensor[(1, 240), float64], Tensor[(15, 2, 640), int32], Tensor[(11, 8, 10), float64], Tensor[(7, 3, 9), float32], Tensor[(84), uint8]) {
  %185 = @func_14491() /* ty=(Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */;
  %186 = %185.1;
  %187 = cast(%var_14819, dtype="int32") /* ty=Tensor[(11, 8, 10), int32] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%186, dtype="int32") /* ty=Tensor[(11, 8, 10), int32] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %191 = cast(%var_14825, dtype="float64") /* ty=Tensor[(88), float64] */;
  %192 = cast(%var_14826, dtype="bool") /* ty=Tensor[(196), bool] */;
  %193 = cast(meta[relay.Constant][17] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %194 = cast(meta[relay.Constant][18] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %195 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %196 = cast(%var_14830, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %197 = cast(%var_14831, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %198 = cast(%var_14832, dtype="float64") /* ty=Tensor[(1170, 1), float64] */;
  %199 = cast(meta[relay.Constant][20] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %200 = cast(%var_14834, dtype="float32") /* ty=Tensor[(672), float32] */;
  %201 = reshape(%191, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float64] */;
  %202 = reshape(%192, newshape=[1, 196]) /* ty=Tensor[(1, 196), bool] */;
  %203 = reshape(%193, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %204 = reshape(%194, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %205 = reshape(%195, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %206 = reshape(%196, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint8] */;
  %207 = reshape(%197, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %208 = reshape(%198, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %209 = reshape(%199, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %210 = reshape(%200, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %211 = @func_10515(%201, %202, %203, %204, %205, %206, %207, %208, %209, %210) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */;
  %212 = cast(%var_14825, dtype="float64") /* ty=Tensor[(88), float64] */;
  %213 = cast(%var_14826, dtype="bool") /* ty=Tensor[(196), bool] */;
  %214 = cast(meta[relay.Constant][17] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %215 = cast(meta[relay.Constant][18] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %216 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %217 = %211.7;
  %218 = cast(%217, dtype="uint8") /* ty=Tensor[(12, 16, 5), uint8] */;
  %219 = cast(%var_14831, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %220 = cast(%var_14832, dtype="float64") /* ty=Tensor[(1170, 1), float64] */;
  %221 = cast(meta[relay.Constant][20] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %222 = cast(%var_14834, dtype="float32") /* ty=Tensor[(672), float32] */;
  %223 = reshape(%212, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float64] */;
  %224 = reshape(%213, newshape=[1, 196]) /* ty=Tensor[(1, 196), bool] */;
  %225 = reshape(%214, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %226 = reshape(%215, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %227 = reshape(%216, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %228 = reshape(%218, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint8] */;
  %229 = reshape(%219, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %230 = reshape(%220, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %231 = reshape(%221, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %232 = reshape(%222, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %233 = @func_10515(%223, %224, %225, %226, %227, %228, %229, %230, %231, %232) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */;
  %234 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %235 = %234.3;
  %236 = cast(%var_14831, dtype="int32") /* ty=Tensor[(640), int32] */;
  %237 = cast(%235, dtype="int32") /* ty=Tensor[(15, 2, ?), int32] */;
  %238 = cast(%186, dtype="float64") /* ty=Tensor[(11, 8, 10), float64] */;
  %239 = cast(meta[relay.Constant][21] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %240 = subtract(%189, %190) /* ty=Tensor[(11, 8, 10), int32] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  %242 = reshape(%239, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), uint8] */;
  %243 = reshape(%241, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %244 = @func_9707(%242, %243) /* ty=(Tensor[(14, 2, 3), uint8], Tensor[(7, 3, 9), float32], Tensor[(21, 9), uint64], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */;
  %245 = %233.6;
  %246 = add(%236, %237) /* ty=Tensor[(15, 2, 640), int32] */;
  %247 = sqrt(%238) /* ty=Tensor[(11, 8, 10), float64] */;
  %248 = %244.1;
  (%240, %217, %var_14825, %var_14826, meta[relay.Constant][17] /* ty=Tensor[(588), bool] */, meta[relay.Constant][18] /* ty=Tensor[(240), float64] */, meta[relay.Constant][19] /* ty=Tensor[(80), uint8] */, %var_14830, %var_14832, meta[relay.Constant][20] /* ty=Tensor[(780), float64] */, %var_14834, %245, %246, %247, %248, meta[relay.Constant][21] /* ty=Tensor[(84), uint8] */)
}

def @func_19486() -> Tensor[(240), float64] {
  @func_16943() /* ty=Tensor[(240), float64] */
}

def @func_17003() -> Tensor[(672), float32] {
  %249 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %249.0
}

def @func_14672(%var_14652: Tensor[(44, 2), float64], %var_14653: Tensor[(196), bool], %var_14654: Tensor[(588), bool], %var_14655: Tensor[(80), uint8], %var_14661: Tensor[(1170, 10), float64]) -> (Tensor[(240), float64], Tensor[(390), bool], Tensor[(44, 2), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(264), float32], Tensor[(1170, 10), bool], Tensor[(7, 3, 9), float32]) {
  %250 = cast(%var_14652, dtype="float64") /* ty=Tensor[(44, 2), float64] */;
  %251 = cast(%var_14653, dtype="bool") /* ty=Tensor[(196), bool] */;
  %252 = cast(%var_14654, dtype="bool") /* ty=Tensor[(588), bool] */;
  %253 = cast(%var_14655, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %254 = cast(meta[relay.Constant][22] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %255 = cast(meta[relay.Constant][23] /* ty=Tensor[(1170, 1), float64] */, dtype="float64") /* ty=Tensor[(1170, 1), float64] */;
  %256 = cast(meta[relay.Constant][24] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %257 = reshape(%250, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %258 = reshape(%251, newshape=[196]) /* ty=Tensor[(196), bool] */;
  %259 = reshape(%252, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %260 = reshape(%253, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint8] */;
  %261 = reshape(%254, newshape=[960]) /* ty=Tensor[(960), uint8] */;
  %262 = reshape(%255, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %263 = reshape(%256, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %264 = @func_13017(%257, %258, %259, %260, %261, %262, %263) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(1, 196), bool], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(960), uint8], Tensor[(20, 32), uint64], Tensor[(1170), float64], Tensor[(672), float32], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(80, 780), bool], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) */;
  %265 = cast(meta[relay.Constant][23] /* ty=Tensor[(1170, 1), float64] */, dtype="bool") /* ty=Tensor[(1170, 1), bool] */;
  %266 = cast(%var_14661, dtype="bool") /* ty=Tensor[(1170, 10), bool] */;
  %267 = @func_12846() /* ty=Tensor[(240), float64] */;
  %268 = %264.14;
  %269 = greater_equal(%265, %266) /* ty=Tensor[(1170, 10), bool] */;
  %270 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  (%267, %268, %var_14652, %var_14653, %var_14654, %var_14655, meta[relay.Constant][22] /* ty=Tensor[(960), uint8] */, meta[relay.Constant][24] /* ty=Tensor[(264), float32] */, %269, %270)
}

def @func_8577(%var_8568: Tensor[(1, 14, 14), bool], %var_8569: Tensor[(3, 14, 14), bool]) -> Tensor[(3, 14, 14), bool] {
  %271 = cast(%var_8568, dtype="bool") /* ty=Tensor[(1, 14, 14), bool] */;
  %272 = cast(%var_8569, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  logical_and(%271, %272) /* ty=Tensor[(3, 14, 14), bool] */
}

def @func_13619() -> Tensor[(7, 3, 9), float32] {
  %273 = @func_13208() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %273.0
}

def @func_13877() -> (Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) {
  %274 = @func_13208() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %275 = %274.0;
  %276 = cast(%275, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %277 = log10(%276) /* ty=Tensor[(7, 3, 9), float32] */;
  %278 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 3, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %279 = shape_of(%277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%277, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %282 = cast(meta[relay.Constant][26] /* ty=Tensor[(588), uint64] */, dtype="uint64") /* ty=Tensor[(588), uint64] */;
  %283 = cast(meta[relay.Constant][26] /* ty=Tensor[(588), uint64] */, dtype="uint64") /* ty=Tensor[(588), uint64] */;
  %284 = reshape(%282, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint64] */;
  %285 = reshape(%283, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint64] */;
  %286 = @func_10108(%284, %285) /* ty=(Tensor[(14, 14, 3), uint64],) */;
  %287 = @func_13589() /* ty=Tensor[(189), float64] */;
  %288 = floor_mod(%280, %281) /* ty=Tensor[(7, 3, 9), float32] */;
  %289 = %286.0;
  (%287, %288, %289, meta[relay.Constant][26] /* ty=Tensor[(588), uint64] */)
}

def @func_12846() -> Tensor[(240), float64] {
  %290 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %290.4
}

def @func_1645(%var_1640: Tensor[(7, 13, 3), float64]) -> Tensor[(7, 13, 3), float64] {
  %291 = cast(%var_1640, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  cos(%291) /* ty=Tensor[(7, 13, 3), float64] */
}

def @func_21662() -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(264), float32]) {
  %292 = @func_20319() /* ty=(Tensor[(588), uint64], Tensor[(13, 15, 6), float64], Tensor[(130, 9), float64], Tensor[(240), float64]) */;
  %293 = @func_19854() /* ty=(Tensor[(240), float64],) */;
  %294 = @func_20170() /* ty=(Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(15, 2, 672), float32]) */;
  %295 = %292.3;
  %296 = %293.0;
  %297 = %294.1;
  (%295, %296, %297)
}

def @func_20750() -> Tensor[(189), float64] {
  @func_19526() /* ty=Tensor[(189), float64] */
}

def @func_3784(%var_3779: Tensor[(5, 13, 6), bool]) -> Tensor[(5, 13, 6), bool] {
  %298 = cast(%var_3779, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %299 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(5, 13, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 13, 6), bool] */, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%300, %301) /* ty=Tensor[(5, 13, 6), bool] */
}

def @func_18014() -> (Tensor[(14, 14, 3), uint64], Tensor[(15, 2, ?), float64], Tensor[(30), float64]) {
  %302 = cast(meta[relay.Constant][28] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %303 = reshape(%302, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), float64] */;
  %304 = @func_17519() /* ty=Tensor[(14, 14, 3), uint64] */;
  %305 = @func_11658(%303) /* ty=Tensor[(15, 2, ?), float64] */;
  (%304, %305, meta[relay.Constant][28] /* ty=Tensor[(30), float64] */)
}

def @func_18586(%var_18535: Tensor[(15, 13, 5), float32], %var_18584: Tensor[(672), float32]) -> (Tensor[(15, 13, 5), int64], Tensor[(7, 13, 3), float64], Tensor[(273), float64], Tensor[(1344), int64], Tensor[(16, 7, 6), float32], Tensor[(672), float32]) {
  %306 = cast(%var_18535, dtype="float32") /* ty=Tensor[(15, 13, 5), float32] */;
  %307 = cosh(%306) /* ty=Tensor[(15, 13, 5), float32] */;
  %308 = cast(%var_18535, dtype="int64") /* ty=Tensor[(15, 13, 5), int64] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="int64") /* ty=Tensor[(15, 13, 5), int64] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %312 = cast(meta[relay.Constant][29] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %313 = cast(meta[relay.Constant][30] /* ty=Tensor[(1344), int64] */, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %314 = reshape(%312, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %315 = reshape(%313, newshape=[1344]) /* ty=Tensor[(1344), int64] */;
  %316 = @func_13246(%314, %315) /* ty=(Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) */;
  %317 = cast(%var_18584, dtype="float32") /* ty=Tensor[(672), float32] */;
  %318 = reshape(%317, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
  %319 = @func_1355(%318) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
  %320 = bitwise_and(%310, %311) /* ty=Tensor[(15, 13, 5), int64] */;
  %321 = %316.1;
  %322 = %319.0;
  (%320, %321, meta[relay.Constant][29] /* ty=Tensor[(273), float64] */, meta[relay.Constant][30] /* ty=Tensor[(1344), int64] */, %322, %var_18584)
}

def @func_21574() -> (Tensor[(189), float64],) {
  %323 = @func_20857() /* ty=(Tensor[(10, 3), float64], Tensor[(189), float64]) */;
  %324 = %323.1;
  (%324,)
}

def @func_16943() -> Tensor[(240), float64] {
  %325 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %325.4
}

def @func_17063() -> Tensor[(240), float64] {
  %326 = @func_14491() /* ty=(Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */;
  %326.0
}

def @func_18753() -> (Tensor[(15, 2, ?), float64],) {
  %327 = @func_17406() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %328 = %327.0;
  (%328,)
}

def @func_2519(%var_2459: Tensor[(5, 6, 14), float64], %var_2486: Tensor[(8, 30), float64]) -> (Tensor[(5, 6, 14), float32], Tensor[(12, 2, 10), float64], Tensor[(8, 30), float64], Tensor[(12, 2, 10), float64], Tensor[(448), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) {
  %329 = cast(%var_2459, dtype="float64") /* ty=Tensor[(5, 6, 14), float64] */;
  %330 = log2(%329) /* ty=Tensor[(5, 6, 14), float64] */;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(5, 6, 14), float32] */;
  %332 = cast(%var_2486, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %333 = reshape(%332, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %334 = @func_365(%333) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */;
  %335 = cast(meta[relay.Constant][31] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %336 = %334.4;
  %337 = cast(%336, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  %338 = reshape(%335, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), float64] */;
  %339 = reshape(%337, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %340 = @func_231(%338, %339) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %341 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %342 = reshape(%341, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
  %343 = @func_1355(%342) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
  %344 = asinh(%331) /* ty=Tensor[(5, 6, 14), float32] */;
  %345 = %340.1;
  %346 = %343.1;
  (%344, %336, %var_2486, %345, meta[relay.Constant][31] /* ty=Tensor[(448), float64] */, %346, meta[relay.Constant][32] /* ty=Tensor[(672), float32] */)
}

def @func_21139(%var_21036: Tensor[(880), float32], %var_21047: Tensor[(2, 120), float64], %var_21118: Tensor[(4, 60), uint32]) -> (Tensor[(672), float32], Tensor[(14, 14, 3), float32], Tensor[(880), float32], Tensor[(294), float32], Tensor[(15, 2, 880), uint32], Tensor[(15, 2, ?), float64], Tensor[(189), float64], Tensor[(4, 60), float32], Tensor[(4, 60), float64], Tensor[(5, 11, 3), uint8], Tensor[(165), uint8]) {
  %347 = @func_18054() /* ty=(Tensor[(672), float32],) */;
  %348 = cast(%var_21036, dtype="float32") /* ty=Tensor[(880), float32] */;
  %349 = reshape(%348, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %350 = @func_18090(%349) /* ty=(Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(189), float64]) */;
  %351 = @func_17370() /* ty=Tensor[(15, 2, ?), float64] */;
  %352 = cast(%351, dtype="uint32") /* ty=Tensor[(15, 2, ?), uint32] */;
  %353 = cast(%var_21036, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %354 = @func_18753() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %355 = @func_20857() /* ty=(Tensor[(10, 3), float64], Tensor[(189), float64]) */;
  %356 = cast(meta[relay.Constant][33] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %357 = cast(%var_21047, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %358 = reshape(%356, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
  %359 = reshape(%357, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %360 = @func_213(%358, %359) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
  %361 = %360.2;
  %362 = cast(%var_21047, dtype="uint32") /* ty=Tensor[(2, 120), uint32] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(2), int32] */;
  %364 = cast(%361, dtype="uint32") /* ty=Tensor[(4, 60), uint32] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %366 = right_shift(%364, %365) /* ty=Tensor[(4, 60), uint32] */;
  %367 = cast(%var_21118, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(2), int32] */;
  %369 = cast(%366, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %371 = cast(%361, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %372 = cast(meta[relay.Constant][34] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %373 = reshape(%372, newshape=[5, 11, 3]) /* ty=Tensor[(5, 11, 3), uint8] */;
  %374 = @func_15319(%373) /* ty=(Tensor[(5, 11, 3), uint8],) */;
  %375 = %347.0;
  %376 = @func_19383() /* ty=Tensor[(14, 14, 3), float32] */;
  %377 = %350.2;
  %378 = bitwise_or(%352, %353) /* ty=Tensor[(15, 2, 880), uint32] */;
  %379 = %354.0;
  %380 = %355.1;
  %381 = floor_divide(%369, %370) /* ty=Tensor[(4, 60), float32] */;
  %382 = sinh(%371) /* ty=Tensor[(4, 60), float64] */;
  %383 = %374.0;
  (%375, %376, %377, meta[relay.Constant][33] /* ty=Tensor[(294), float32] */, %378, %379, %380, %381, %382, %383, meta[relay.Constant][34] /* ty=Tensor[(165), uint8] */)
}

def @func_13372(%var_13345: Tensor[(135), int8], %var_13359: Tensor[(880), float32], %var_13363: Tensor[(240), float64], %var_13364: Tensor[(1248), float64]) -> (Tensor[(16, 2, 16), float64], Tensor[(3, 9, 5), int8], Tensor[(135), int8], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(1, 390), bool], Tensor[(240), float64], Tensor[(1248), float64]) {
  %384 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %385 = cast(%var_13345, dtype="int8") /* ty=Tensor[(135), int8] */;
  %386 = cast(%var_13345, dtype="int8") /* ty=Tensor[(135), int8] */;
  %387 = reshape(%385, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), int8] */;
  %388 = reshape(%386, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), int8] */;
  %389 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %390 = cast(%var_13359, dtype="float32") /* ty=Tensor[(880), float32] */;
  %391 = reshape(%390, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %392 = cast(%var_13363, dtype="float64") /* ty=Tensor[(240), float64] */;
  %393 = cast(%var_13364, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %394 = reshape(%392, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %395 = reshape(%393, newshape=[1248]) /* ty=Tensor[(1248), float64] */;
  %396 = @func_7996(%394, %395) /* ty=(Tensor[(16, 7, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(390), bool], Tensor[(1248), float64], Tensor[(1, 390), bool]) */;
  %397 = %384.0;
  %398 = @func_1843(%387, %388) /* ty=Tensor[(3, 9, 5), int8] */;
  %399 = %389.1;
  %400 = @func_4967(%391) /* ty=Tensor[(11, 8, 10), float32] */;
  %401 = %396.5;
  (%397, %398, %var_13345, %399, %400, %var_13359, %401, %var_13363, %var_13364)
}

def @func_19790(%var_19788: Tensor[(98, 2), int64]) -> (Tensor[(140), int64], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(22, 4), float64], Tensor[(11700), float64], Tensor[(14, 14, 3), bool], Tensor[(7, 14, 2), int64], Tensor[(98, 2), int64]) {
  %402 = @func_16217() /* ty=(Tensor[(140), int64],) */;
  %403 = @func_18014() /* ty=(Tensor[(14, 14, 3), uint64], Tensor[(15, 2, ?), float64], Tensor[(30), float64]) */;
  %404 = %403.0;
  %405 = cast(meta[relay.Constant][35] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %406 = cast(meta[relay.Constant][36] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %407 = cast(meta[relay.Constant][37] /* ty=Tensor[(22, 4), float64] */, dtype="float64") /* ty=Tensor[(22, 4), float64] */;
  %408 = cast(meta[relay.Constant][38] /* ty=Tensor[(11700), float64] */, dtype="float64") /* ty=Tensor[(11700), float64] */;
  %409 = reshape(%405, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %410 = reshape(%406, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %411 = reshape(%407, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %412 = reshape(%408, newshape=[390, 30]) /* ty=Tensor[(390, 30), float64] */;
  %413 = @func_18423(%409, %410, %411, %412) /* ty=(Tensor[(11, 9, 12), uint64], Tensor[(14, 14, 3), uint64], Tensor[(264), float32], Tensor[(15, 2, ?), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(20, 48), uint8], Tensor[(44, 2), float64], Tensor[(88), float64], Tensor[(196), bool], Tensor[(390, 30), float64]) */;
  %414 = %413.1;
  %415 = cast(%414, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %416 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%404, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %419 = cast(%var_19788, dtype="int64") /* ty=Tensor[(98, 2), int64] */;
  %420 = reshape(%419, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), int64] */;
  %421 = @func_7808(%420) /* ty=(Tensor[(7, 14, 2), int64],) */;
  %422 = %402.0;
  %423 = logical_and(%417, %418) /* ty=Tensor[(14, 14, 3), bool] */;
  %424 = %421.0;
  (%422, meta[relay.Constant][35] /* ty=Tensor[(80), uint8] */, meta[relay.Constant][36] /* ty=Tensor[(960), uint8] */, meta[relay.Constant][37] /* ty=Tensor[(22, 4), float64] */, meta[relay.Constant][38] /* ty=Tensor[(11700), float64] */, %423, %424, %var_19788)
}

def @func_15495() -> (Tensor[(189), float64], Tensor[(140), int64]) {
  %425 = @func_14357() /* ty=Tensor[(189), uint64] */;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(189), float64] */;
  %427 = @func_15086() /* ty=(Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) */;
  %428 = sigmoid(%426) /* ty=Tensor[(189), float64] */;
  %429 = %427.2;
  (%428, %429)
}

def @func_16013() -> Tensor[(189), float64] {
  @func_13589() /* ty=Tensor[(189), float64] */
}

def @func_14291() -> (Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) {
  %430 = cast(meta[relay.Constant][39] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %431 = cast(meta[relay.Constant][40] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %432 = reshape(%430, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
  %433 = reshape(%431, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %434 = @func_213(%432, %433) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
  %435 = cast(meta[relay.Constant][41] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %436 = reshape(%435, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
  %437 = @func_1355(%436) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
  %438 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %439 = %434.1;
  %440 = %437.1;
  (%438, %439, meta[relay.Constant][39] /* ty=Tensor[(294), float32] */, meta[relay.Constant][40] /* ty=Tensor[(240), float64] */, %440, meta[relay.Constant][41] /* ty=Tensor[(672), float32] */)
}

def @func_11958(%var_11955: Tensor[(3, 12, 6), float32]) -> (Tensor[(3, 12, 6), float32],) {
  %441 = cast(%var_11955, dtype="float32") /* ty=Tensor[(3, 12, 6), float32] */;
  %442 = tan(%441) /* ty=Tensor[(3, 12, 6), float32] */;
  (%442,)
}

def @func_19343() -> (Tensor[(14, 14, 3), uint64],) {
  %443 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %444 = %443.2;
  (%444,)
}

def @func_3149(%var_3122: Tensor[(1, 13, 11), float64], %var_3135: Tensor[(240), float64], %var_3141: Tensor[(6, 13, 11), float64]) -> (Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(6, 13, 11), float64]) {
  %445 = cast(%var_3135, dtype="float64") /* ty=Tensor[(240), float64] */;
  %446 = cast(%var_3135, dtype="float64") /* ty=Tensor[(240), float64] */;
  %447 = reshape(%445, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %448 = reshape(%446, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %449 = @func_88(%447, %448) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %450 = cast(%var_3122, dtype="float64") /* ty=Tensor[(1, 13, 11), float64] */;
  %451 = sqrt(%450) /* ty=Tensor[(1, 13, 11), float64] */;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(1, 13, 11), float64] */;
  %453 = cast(%var_3141, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
  %454 = %449.0;
  %455 = divide(%452, %453) /* ty=Tensor[(6, 13, 11), float64] */;
  (%454, %var_3135, %455)
}

def @func_13246(%var_13232: Tensor[(39, 7), float64], %var_13235: Tensor[(1344), int64]) -> (Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) {
  %456 = @func_13224() /* ty=(Tensor[(240), float64],) */;
  %457 = cast(%var_13232, dtype="float64") /* ty=Tensor[(39, 7), float64] */;
  %458 = reshape(%457, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %459 = cast(%var_13235, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %460 = cast(%var_13235, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %461 = %456.0;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(240), float64] */;
  %463 = reshape(%459, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
  %464 = reshape(%460, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
  %465 = reshape(%462, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %466 = @func_7429(%463, %464, %465) /* ty=(Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) */;
  %467 = @func_1645(%458) /* ty=Tensor[(7, 13, 3), float64] */;
  %468 = %466.3;
  (%461, %467, %var_13232, %468, %var_13235)
}

def @func_20170() -> (Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(15, 2, 672), float32]) {
  %469 = cast(meta[relay.Constant][42] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %470 = reshape(%469, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %471 = @func_14627(%470) /* ty=(Tensor[(189), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */;
  %472 = @func_18863() /* ty=Tensor[(672), float32] */;
  %473 = @func_17370() /* ty=Tensor[(15, 2, ?), float64] */;
  %474 = cast(%472, dtype="float32") /* ty=Tensor[(672), float32] */;
  %475 = cast(%473, dtype="float32") /* ty=Tensor[(15, 2, ?), float32] */;
  %476 = %471.1;
  %477 = mod(%474, %475) /* ty=Tensor[(15, 2, 672), float32] */;
  (%476, meta[relay.Constant][42] /* ty=Tensor[(264), float32] */, %477)
}

def @func_14491() -> (Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
  %478 = cast(meta[relay.Constant][43] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %479 = reshape(%478, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %480 = @func_14096() /* ty=Tensor[(240), float64] */;
  %481 = @func_4967(%479) /* ty=Tensor[(11, 8, 10), float32] */;
  (%480, %481, meta[relay.Constant][43] /* ty=Tensor[(880), float32] */)
}

def @func_15086() -> (Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) {
  %482 = @func_13518() /* ty=(Tensor[(189), uint64], Tensor[(240), float32], Tensor[(189), float64]) */;
  %483 = cast(meta[relay.Constant][44] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
  %484 = cast(meta[relay.Constant][44] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
  %485 = reshape(%483, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %486 = reshape(%484, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %487 = %482.1;
  %488 = @func_10270(%485, %486) /* ty=Tensor[(2, 7, 10), int64] */;
  (%487, %488, meta[relay.Constant][44] /* ty=Tensor[(140), int64] */)
}

def @func_19895() -> (Tensor[(588), uint64], Tensor[(15, 2, ?), float64]) {
  %489 = @func_16556() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %490 = @func_18823() /* ty=Tensor[(588), uint64] */;
  %491 = %489.0;
  (%490, %491)
}

def @func_17830() -> (Tensor[(672), float32], Tensor[(15, 2, ?), float64]) {
  %492 = @func_17406() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %493 = @func_17003() /* ty=Tensor[(672), float32] */;
  %494 = %492.0;
  (%493, %494)
}

def @func_19321() -> (Tensor[(672), float32], Tensor[(240), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(2, 7, 10), int64]) {
  %495 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %496 = @func_15086() /* ty=(Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) */;
  %497 = %495.0;
  %498 = @func_18236() /* ty=Tensor[(240), float64] */;
  %499 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %500 = @func_18125() /* ty=Tensor[(14, 14, 3), uint64] */;
  %501 = %496.1;
  (%497, %498, %499, %500, %501)
}

def @func_14028(%var_14023: Tensor[(630), float64]) -> (Tensor[(7, 3, 9), float32], Tensor[(6, 7, 15), float64], Tensor[(630), float64]) {
  %502 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %503 = cast(%502, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %504 = cast(%var_14023, dtype="float64") /* ty=Tensor[(630), float64] */;
  %505 = reshape(%504, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), float64] */;
  %506 = @func_3418(%505) /* ty=(Tensor[(6, 7, 15), float64],) */;
  %507 = tan(%503) /* ty=Tensor[(7, 3, 9), float32] */;
  %508 = %506.0;
  (%507, %508, %var_14023)
}

def @func_20644(%var_20600: Tensor[(5, 126), float64], %var_20618: Tensor[(1176), float64], %var_20637: Tensor[(10, 78), float64]) -> (Tensor[(7, 3, 9), float64], Tensor[(15, 2, ?), float64], Tensor[(30), float64], Tensor[(672), float32], Tensor[(6, 7, 15), float64], Tensor[(5, 126), float64], Tensor[(240), float64], Tensor[(6, 14, 14), bool], Tensor[(1176), float64], Tensor[(16, 7, 6), bool], Tensor[(10, 78), float64]) {
  %509 = @func_20426() /* ty=(Tensor[(7, 3, 9), float64],) */;
  %510 = cast(meta[relay.Constant][45] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %511 = reshape(%510, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), float64] */;
  %512 = cast(%var_20600, dtype="float64") /* ty=Tensor[(5, 126), float64] */;
  %513 = reshape(%512, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), float64] */;
  %514 = @func_3418(%513) /* ty=(Tensor[(6, 7, 15), float64],) */;
  %515 = @func_17338() /* ty=(Tensor[(240), float64],) */;
  %516 = cast(%var_20618, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %517 = cast(%var_20618, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %518 = reshape(%516, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
  %519 = reshape(%517, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
  %520 = cast(%var_20637, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %521 = cast(%var_20637, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %522 = %515.0;
  %523 = cast(%522, dtype="float64") /* ty=Tensor[(240), float64] */;
  %524 = @func_18863() /* ty=Tensor[(672), float32] */;
  %525 = cast(%524, dtype="float32") /* ty=Tensor[(672), float32] */;
  %526 = reshape(%520, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), float64] */;
  %527 = reshape(%521, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), float64] */;
  %528 = reshape(%523, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %529 = reshape(%525, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %530 = @func_3391(%526, %527, %528, %529) /* ty=(Tensor[(12, 5, 13), float64], Tensor[(240), float64], Tensor[(594), float32], Tensor[(1, 8, 14), float32], Tensor[(240, 448), int32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(12, 5, 13), float64], Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), bool], Tensor[(224, 2), float64], Tensor[(16, 7, 6), bool], Tensor[(12, 2, 10), float64]) */;
  %531 = %509.0;
  %532 = @func_11658(%511) /* ty=Tensor[(15, 2, ?), float64] */;
  %533 = %514.0;
  %534 = @func_19676(%518, %519) /* ty=Tensor[(6, 14, 14), bool] */;
  %535 = %530.11;
  (%531, %532, meta[relay.Constant][45] /* ty=Tensor[(30), float64] */, %524, %533, %var_20600, %522, %534, %var_20618, %535, %var_20637)
}

def @func_15828() -> Tensor[(7, 3, 9), float64] {
  %536 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %536.1
}

def @func_19612(%var_19558: Tensor[(13, 21), float64], %var_19588: Tensor[(135), int8], %var_19590: Tensor[(1248), float64]) -> (Tensor[(240), float64], Tensor[(189), uint64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64], Tensor[(16, 2, 16), float64], Tensor[(135), int8], Tensor[(880), float32], Tensor[(1248), float64]) {
  %537 = @func_15325() /* ty=(Tensor[(189), uint64],) */;
  %538 = cast(%var_19558, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %539 = reshape(%538, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %540 = cast(%var_19588, dtype="int8") /* ty=Tensor[(135), int8] */;
  %541 = cast(meta[relay.Constant][46] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %542 = @func_14096() /* ty=Tensor[(240), float64] */;
  %543 = cast(%542, dtype="float64") /* ty=Tensor[(240), float64] */;
  %544 = cast(%var_19590, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %545 = reshape(%540, newshape=[135]) /* ty=Tensor[(135), int8] */;
  %546 = reshape(%541, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %547 = reshape(%543, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %548 = reshape(%544, newshape=[1248]) /* ty=Tensor[(1248), float64] */;
  %549 = @func_13372(%545, %546, %547, %548) /* ty=(Tensor[(16, 2, 16), float64], Tensor[(3, 9, 5), int8], Tensor[(135), int8], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(1, 390), bool], Tensor[(240), float64], Tensor[(1248), float64]) */;
  %550 = %537.0;
  %551 = @func_1645(%539) /* ty=Tensor[(7, 13, 3), float64] */;
  %552 = %549.0;
  (%542, %550, %551, %var_19558, %552, %var_19588, meta[relay.Constant][46] /* ty=Tensor[(880), float32] */, %var_19590)
}

def @func_16697() -> (Tensor[(140), int64], Tensor[(14, 14, 3), float32]) {
  %553 = @func_16217() /* ty=(Tensor[(140), int64],) */;
  %554 = @func_15003() /* ty=(Tensor[(14, 14, 3), uint64],) */;
  %555 = %554.0;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(14, 14, 3), float32] */;
  %557 = %553.0;
  %558 = rsqrt(%556) /* ty=Tensor[(14, 14, 3), float32] */;
  (%557, %558)
}

def @func_16217() -> (Tensor[(140), int64],) {
  %559 = @func_15495() /* ty=(Tensor[(189), float64], Tensor[(140), int64]) */;
  %560 = %559.1;
  (%560,)
}

def @func_19676(%var_19631: Tensor[(6, 14, 14), float64], %var_19659: Tensor[(6, 14, 14), float64]) -> Tensor[(6, 14, 14), bool] {
  %561 = cast(%var_19631, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
  %562 = log2(%561) /* ty=Tensor[(6, 14, 14), float64] */;
  %563 = cast(%562, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
  %564 = rsqrt(%563) /* ty=Tensor[(6, 14, 14), float64] */;
  %565 = cast(%var_19659, dtype="bool") /* ty=Tensor[(6, 14, 14), bool] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="bool") /* ty=Tensor[(6, 14, 14), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%567, %568) /* ty=Tensor[(6, 14, 14), bool] */
}

def @func_20108(%var_20091: Tensor[(273), float64]) -> (Tensor[(15, 2, ?), float64], Tensor[(240), float64], Tensor[(273), float64], Tensor[(84, 16), int64]) {
  %569 = cast(%var_20091, dtype="float64") /* ty=Tensor[(273), float64] */;
  %570 = cast(meta[relay.Constant][47] /* ty=Tensor[(84, 16), int64] */, dtype="int64") /* ty=Tensor[(84, 16), int64] */;
  %571 = reshape(%569, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %572 = reshape(%570, newshape=[1344]) /* ty=Tensor[(1344), int64] */;
  %573 = @func_13246(%571, %572) /* ty=(Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) */;
  %574 = @func_17370() /* ty=Tensor[(15, 2, ?), float64] */;
  %575 = %573.3;
  (%574, %575, %var_20091, meta[relay.Constant][47] /* ty=Tensor[(84, 16), int64] */)
}

def @func_18969() -> (Tensor[(189), float64], Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) {
  %576 = @func_13432() /* ty=(Tensor[(189), float64],) */;
  %577 = @func_13589() /* ty=Tensor[(189), float64] */;
  %578 = @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */;
  %579 = %576.0;
  (%577, %578, %579)
}

def @func_13111(%var_13099: Tensor[(264), float32]) -> (Tensor[(7, 3, 9), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
  %580 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %581 = %580.0;
  %582 = cast(%581, dtype="float64") /* ty=Tensor[(7, 3, 9), float64] */;
  %583 = cast(%var_13099, dtype="float32") /* ty=Tensor[(264), float32] */;
  %584 = cast(%var_13099, dtype="float32") /* ty=Tensor[(264), float32] */;
  %585 = reshape(%583, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %586 = reshape(%584, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %587 = atanh(%582) /* ty=Tensor[(7, 3, 9), float64] */;
  %588 = @func_8378(%585, %586) /* ty=Tensor[(12, 2, 11), float32] */;
  (%587, %588, %var_13099)
}

def @func_17843() -> (Tensor[(189), float64],) {
  %589 = @func_13268() /* ty=(Tensor[(189), float64],) */;
  %590 = %589.0;
  (%590,)
}

def @func_13983() -> Tensor[(15, 2, ?), float64] {
  %591 = @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */;
  %591.1
}

def @func_15325() -> (Tensor[(189), uint64],) {
  %592 = @func_14357() /* ty=Tensor[(189), uint64] */;
  (%592,)
}

def @func_14736(%var_14724: Tensor[(80), uint8]) -> (Tensor[(240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(960), uint8]) {
  %593 = @func_13461() /* ty=(Tensor[(240), float64],) */;
  %594 = cast(%var_14724, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %595 = cast(meta[relay.Constant][48] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %596 = reshape(%594, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
  %597 = reshape(%595, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), uint8] */;
  %598 = %593.0;
  %599 = @func_1313(%596, %597) /* ty=Tensor[(12, 16, 5), uint8] */;
  (%598, %599, %var_14724, meta[relay.Constant][48] /* ty=Tensor[(960), uint8] */)
}

def @func_10108(%var_10099: Tensor[(14, 14, 3), uint64], %var_10100: Tensor[(14, 14, 3), uint64]) -> (Tensor[(14, 14, 3), uint64],) {
  %600 = cast(%var_10100, dtype="uint64") /* ty=Tensor[(14, 14, 3), uint64] */;
  %601 = shape_of(%var_10099, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(%var_10099, dtype="uint64") /* ty=Tensor[(14, 14, 3), uint64] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %604 = maximum(%602, %603) /* ty=Tensor[(14, 14, 3), uint64] */;
  (%604,)
}

def @main(%var_21668: Tensor[(1, 14, 16), float32]) -> Tensor[(1, 14, 16), float32] {
  %605 = cast(2.52389f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %606 = cast(%var_21668, dtype="float32") /* ty=Tensor[(1, 14, 16), float32] */;
  minimum(%605, %606) /* ty=Tensor[(1, 14, 16), float32] */
}

def @func_1843(%var_1838: Tensor[(3, 9, 5), int8], %var_1839: Tensor[(3, 9, 5), int8]) -> Tensor[(3, 9, 5), int8] {
  %607 = cast(%var_1839, dtype="int8") /* ty=Tensor[(3, 9, 5), int8] */;
  %608 = shape_of(%var_1838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%var_1838, dtype="int8") /* ty=Tensor[(3, 9, 5), int8] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%609, %610) /* ty=Tensor[(3, 9, 5), int8] */
}

def @func_10270(%var_10264: Tensor[(2, 7, 10), int64], %var_10265: Tensor[(2, 7, 10), int64]) -> Tensor[(2, 7, 10), int64] {
  %611 = cast(%var_10265, dtype="int64") /* ty=Tensor[(2, 7, 10), int64] */;
  %612 = shape_of(%var_10264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%var_10264, dtype="int64") /* ty=Tensor[(2, 7, 10), int64] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%613, %614) /* ty=Tensor[(2, 7, 10), int64] */
}

def @func_13017(%var_12956: Tensor[(88), float64], %var_12957: Tensor[(196), bool], %var_12958: Tensor[(588), bool], %var_12960: Tensor[(80, 1), uint8], %var_12961: Tensor[(960), uint8], %var_12963: Tensor[(1170), float64], %var_12981: Tensor[(264), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(1, 196), bool], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(960), uint8], Tensor[(20, 32), uint64], Tensor[(1170), float64], Tensor[(672), float32], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(80, 780), bool], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) {
  %615 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %616 = cast(%var_12956, dtype="float64") /* ty=Tensor[(88), float64] */;
  %617 = cast(%var_12957, dtype="bool") /* ty=Tensor[(196), bool] */;
  %618 = cast(%var_12958, dtype="bool") /* ty=Tensor[(588), bool] */;
  %619 = cast(meta[relay.Constant][49] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %620 = cast(%var_12960, dtype="uint8") /* ty=Tensor[(80, 1), uint8] */;
  %621 = cast(%var_12961, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %622 = cast(meta[relay.Constant][50] /* ty=Tensor[(20, 32), uint64] */, dtype="uint64") /* ty=Tensor[(20, 32), uint64] */;
  %623 = cast(%var_12963, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %624 = cast(meta[relay.Constant][51] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %625 = cast(meta[relay.Constant][52] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %626 = reshape(%616, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float64] */;
  %627 = reshape(%617, newshape=[1, 196]) /* ty=Tensor[(1, 196), bool] */;
  %628 = reshape(%618, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %629 = reshape(%619, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %630 = reshape(%620, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %631 = reshape(%621, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint8] */;
  %632 = reshape(%622, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %633 = reshape(%623, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %634 = reshape(%624, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %635 = reshape(%625, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %636 = @func_10515(%626, %627, %628, %629, %630, %631, %632, %633, %634, %635) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */;
  %637 = cast(%var_12981, dtype="float32") /* ty=Tensor[(264), float32] */;
  %638 = cast(%var_12981, dtype="float32") /* ty=Tensor[(264), float32] */;
  %639 = reshape(%637, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %640 = reshape(%638, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %641 = cast(%var_12960, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %642 = cast(meta[relay.Constant][51] /* ty=Tensor[(780), float64] */, dtype="bool") /* ty=Tensor[(780), bool] */;
  %643 = cast(meta[relay.Constant][53] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %644 = reshape(%643, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
  %645 = %615.0;
  %646 = %636.1;
  %647 = @func_8378(%639, %640) /* ty=Tensor[(12, 2, 11), float32] */;
  %648 = logical_and(%641, %642) /* ty=Tensor[(80, 780), bool] */;
  %649 = @func_3784(%644) /* ty=Tensor[(5, 13, 6), bool] */;
  (%645, %646, %var_12956, %var_12957, %var_12958, meta[relay.Constant][49] /* ty=Tensor[(240), float64] */, %var_12961, meta[relay.Constant][50] /* ty=Tensor[(20, 32), uint64] */, %var_12963, meta[relay.Constant][52] /* ty=Tensor[(672), float32] */, %647, %var_12981, %648, %649, meta[relay.Constant][53] /* ty=Tensor[(390), bool] */)
}

def @func_88(%var_75: Tensor[(12, 2, 10), float64], %var_76: Tensor[(12, 2, 10), float64]) -> (Tensor[(12, 2, 10), float64],) {
  %650 = cast(%var_76, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  %651 = shape_of(%var_75, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%var_75, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %654 = floor_mod(%652, %653) /* ty=Tensor[(12, 2, 10), float64] */;
  (%654,)
}

def @func_13461() -> (Tensor[(240), float64],) {
  %655 = @func_12846() /* ty=Tensor[(240), float64] */;
  (%655,)
}

def @func_18863() -> Tensor[(672), float32] {
  %656 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %656.0
}

def @func_13589() -> Tensor[(189), float64] {
  %657 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %657.1
}

def @func_16721() -> (Tensor[(672), float32],) {
  %658 = @func_16595() /* ty=Tensor[(672), float32] */;
  (%658,)
}

def @func_13208() -> (Tensor[(7, 3, 9), float32],) {
  %659 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %660 = %659.0;
  (%660,)
}

def @func_16556() -> (Tensor[(15, 2, ?), float64],) {
  %661 = @func_16247() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %662 = %661.0;
  (%662,)
}

def @func_4288(%var_4264: Tensor[(6, 14, 7), float32]) -> (Tensor[(6, 14, 7), float32],) {
  %663 = cast(%var_4264, dtype="float32") /* ty=Tensor[(6, 14, 7), float32] */;
  %664 = log2(%663) /* ty=Tensor[(6, 14, 7), float32] */;
  %665 = cast(%664, dtype="float32") /* ty=Tensor[(6, 14, 7), float32] */;
  %666 = cos(%665) /* ty=Tensor[(6, 14, 7), float32] */;
  (%666,)
}

def @func_9707(%var_9681: Tensor[(14, 2, 3), uint8], %var_9704: Tensor[(880), float32]) -> (Tensor[(14, 2, 3), uint8], Tensor[(7, 3, 9), float32], Tensor[(21, 9), uint64], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
  %667 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 2, 3), uint8] */, dtype="uint8") /* ty=Tensor[(14, 2, 3), uint8] */;
  %668 = shape_of(%var_9681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_9681, dtype="uint8") /* ty=Tensor[(14, 2, 3), uint8] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %671 = cast(meta[relay.Constant][55] /* ty=Tensor[(21, 9), uint64] */, dtype="uint64") /* ty=Tensor[(21, 9), uint64] */;
  %672 = reshape(%671, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
  %673 = @func_9535(%672) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
  %674 = %673.1;
  %675 = cast(%674, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %676 = reshape(%675, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
  %677 = @func_9535(%676) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
  %678 = cast(%var_9704, dtype="float32") /* ty=Tensor[(880), float32] */;
  %679 = reshape(%678, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %680 = bitwise_and(%669, %670) /* ty=Tensor[(14, 2, 3), uint8] */;
  %681 = %677.0;
  %682 = @func_4967(%679) /* ty=Tensor[(11, 8, 10), float32] */;
  (%680, %674, meta[relay.Constant][55] /* ty=Tensor[(21, 9), uint64] */, %681, %682, %var_9704)
}

def @func_231(%var_219: Tensor[(8, 4, 14), float64], %var_229: Tensor[(240), float64]) -> (Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
  %683 = cast(%var_219, dtype="float64") /* ty=Tensor[(8, 4, 14), float64] */;
  %684 = cast(%var_229, dtype="float64") /* ty=Tensor[(240), float64] */;
  %685 = cast(%var_229, dtype="float64") /* ty=Tensor[(240), float64] */;
  %686 = reshape(%684, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %687 = reshape(%685, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %688 = @func_88(%686, %687) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %689 = atanh(%683) /* ty=Tensor[(8, 4, 14), float64] */;
  %690 = %688.0;
  (%689, %690, %var_229)
}

def @func_15253() -> (Tensor[(672), float32],) {
  %691 = @func_14291() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */;
  %692 = %691.5;
  (%692,)
}

def @func_11658(%var_11632: Tensor[(15, 2, 1), float64]) -> Tensor[(15, 2, ?), float64] {
  %693 = cast(%var_11632, dtype="float64") /* ty=Tensor[(15, 2, 1), float64] */;
  %694 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(15, 2, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(meta[relay.Constant][56] /* ty=Tensor[(15, 2, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 1), float64] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%695, %696) /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_15130() -> Tensor[(189), float64] {
  @func_14566() /* ty=Tensor[(189), float64] */
}

def @func_16302(%var_16298: Tensor[(35, 4), int64], %var_16299: Tensor[(98, 2), int64], %var_16300: Tensor[(800), float32]) -> (Tensor[(189), float64], Tensor[(448), float64], Tensor[(832), int8], Tensor[(35, 4), int64], Tensor[(98, 2), int64], Tensor[(800), float32]) {
  %697 = @func_15495() /* ty=(Tensor[(189), float64], Tensor[(140), int64]) */;
  %698 = cast(meta[relay.Constant][57] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %699 = cast(%var_16298, dtype="int64") /* ty=Tensor[(35, 4), int64] */;
  %700 = cast(%var_16299, dtype="int64") /* ty=Tensor[(98, 2), int64] */;
  %701 = cast(%var_16300, dtype="float32") /* ty=Tensor[(800), float32] */;
  %702 = reshape(%698, newshape=[832]) /* ty=Tensor[(832), int8] */;
  %703 = reshape(%699, newshape=[140]) /* ty=Tensor[(140), int64] */;
  %704 = reshape(%700, newshape=[196]) /* ty=Tensor[(196), int64] */;
  %705 = reshape(%701, newshape=[1, 800]) /* ty=Tensor[(1, 800), float32] */;
  %706 = @func_12790(%702, %703, %704, %705) /* ty=(Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(240, 2), float32], Tensor[(196), int64], Tensor[(14, 14, 3), uint64], Tensor[(14, 42), uint64], Tensor[(10, 10, 8), float32], Tensor[(1, 135), int8], Tensor[(7, 14, 2), int64], Tensor[(1, 800), float32]) */;
  %707 = %697.0;
  %708 = %706.4;
  (%707, %708, meta[relay.Constant][57] /* ty=Tensor[(832), int8] */, %var_16298, %var_16299, %var_16300)
}

def @func_4967(%var_4953: Tensor[(11, 8, 10), float32]) -> Tensor[(11, 8, 10), float32] {
  %709 = cast(%var_4953, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  asinh(%709) /* ty=Tensor[(11, 8, 10), float32] */
}

def @func_17172() -> Tensor[(189), uint64] {
  @func_14357() /* ty=Tensor[(189), uint64] */
}

def @func_7429(%var_7418: Tensor[(16, 6, 14), int64], %var_7419: Tensor[(16, 6, 14), int64], %var_7426: Tensor[(240), float64]) -> (Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) {
  %710 = cast(%var_7419, dtype="int64") /* ty=Tensor[(16, 6, 14), int64] */;
  %711 = shape_of(%var_7418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_7418, dtype="int64") /* ty=Tensor[(16, 6, 14), int64] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %714 = cast(meta[relay.Constant][58] /* ty=Tensor[(10, 42), float64] */, dtype="float64") /* ty=Tensor[(10, 42), float64] */;
  %715 = cast(%var_7426, dtype="float64") /* ty=Tensor[(240), float64] */;
  %716 = reshape(%714, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), float64] */;
  %717 = reshape(%715, newshape=[8, 30]) /* ty=Tensor[(8, 30), float64] */;
  %718 = @func_2519(%716, %717) /* ty=(Tensor[(5, 6, 14), float32], Tensor[(12, 2, 10), float64], Tensor[(8, 30), float64], Tensor[(12, 2, 10), float64], Tensor[(448), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */;
  %719 = minimum(%712, %713) /* ty=Tensor[(16, 6, 14), int64] */;
  %720 = %718.3;
  (%719, %720, meta[relay.Constant][58] /* ty=Tensor[(10, 42), float64] */, %var_7426)
}

def @func_14133() -> (Tensor[(189), float64],) {
  %721 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %722 = %721.0;
  (%722,)
}

def @func_17271() -> (Tensor[(672), float32], Tensor[(630), float64], Tensor[(630), float64], Tensor[(240), float64]) {
  %723 = @func_17097() /* ty=(Tensor[(672), float32],) */;
  %724 = cast(meta[relay.Constant][59] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %725 = reshape(%724, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %726 = @func_14028(%725) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(6, 7, 15), float64], Tensor[(630), float64]) */;
  %727 = %723.0;
  %728 = %726.2;
  %729 = @func_17063() /* ty=Tensor[(240), float64] */;
  (%727, %728, meta[relay.Constant][59] /* ty=Tensor[(630), float64] */, %729)
}

def @func_20857() -> (Tensor[(10, 3), float64], Tensor[(189), float64]) {
  %730 = @func_14958() /* ty=(Tensor[(10, 3), float64],) */;
  %731 = %730.0;
  %732 = @func_14566() /* ty=Tensor[(189), float64] */;
  (%731, %732)
}

def @func_13782(%var_13748: Tensor[(189), float64]) -> (Tensor[(189), bool], Tensor[(240), float64], Tensor[(273), float64], Tensor[(1344), int64], Tensor[(240), float32], Tensor[(189), float64]) {
  %733 = @func_13589() /* ty=Tensor[(189), float64] */;
  %734 = cast(%var_13748, dtype="bool") /* ty=Tensor[(189), bool] */;
  %735 = shape_of(%733, dtype="int32") /* ty=Tensor[(1), int32] */;
  %736 = cast(%733, dtype="bool") /* ty=Tensor[(189), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?), bool] */;
  %738 = cast(meta[relay.Constant][60] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %739 = cast(meta[relay.Constant][61] /* ty=Tensor[(1344), int64] */, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %740 = reshape(%738, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %741 = reshape(%739, newshape=[1344]) /* ty=Tensor[(1344), int64] */;
  %742 = @func_13246(%740, %741) /* ty=(Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) */;
  %743 = @func_13518() /* ty=(Tensor[(189), uint64], Tensor[(240), float32], Tensor[(189), float64]) */;
  %744 = greater_equal(%736, %737) /* ty=Tensor[(189), bool] */;
  %745 = %742.3;
  %746 = %743.1;
  %747 = @func_13589() /* ty=Tensor[(189), float64] */;
  (%744, %745, meta[relay.Constant][60] /* ty=Tensor[(273), float64] */, meta[relay.Constant][61] /* ty=Tensor[(1344), int64] */, %746, %747)
}

def @func_3418(%var_3405: Tensor[(6, 7, 15), float64]) -> (Tensor[(6, 7, 15), float64],) {
  %748 = cast(%var_3405, dtype="float64") /* ty=Tensor[(6, 7, 15), float64] */;
  %749 = log(%748) /* ty=Tensor[(6, 7, 15), float64] */;
  (%749,)
}

def @func_19962() -> Tensor[(189), float64] {
  %750 = @func_18894() /* ty=(Tensor[(189), float64], Tensor[(240), float64]) */;
  %750.0
}

def @func_15003() -> (Tensor[(14, 14, 3), uint64],) {
  %751 = @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */;
  (%751,)
}

def @func_18201(%var_18180: Tensor[(832), int8], %var_18184: Tensor[(196, 1), int64]) -> (Tensor[(240), float64], Tensor[(196), int64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(1, 480), float32], Tensor[(196, 1), float32], Tensor[(196, 1), float64]) {
  %752 = @func_17338() /* ty=(Tensor[(240), float64],) */;
  %753 = cast(%var_18180, dtype="int8") /* ty=Tensor[(832), int8] */;
  %754 = cast(%var_18180, dtype="int8") /* ty=Tensor[(832), int8] */;
  %755 = cast(meta[relay.Constant][62] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
  %756 = cast(meta[relay.Constant][63] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %757 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 480), float32] */, dtype="float32") /* ty=Tensor[(1, 480), float32] */;
  %758 = cast(%var_18184, dtype="int64") /* ty=Tensor[(196, 1), int64] */;
  %759 = reshape(%753, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %760 = reshape(%754, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %761 = reshape(%755, newshape=[140]) /* ty=Tensor[(140), int64] */;
  %762 = reshape(%756, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %763 = reshape(%757, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %764 = reshape(%758, newshape=[196]) /* ty=Tensor[(196), int64] */;
  %765 = @func_10349(%759, %760, %761, %762, %763, %764) /* ty=(Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) */;
  %766 = cast(%var_18184, dtype="float32") /* ty=Tensor[(196, 1), float32] */;
  %767 = cast(%var_18184, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
  %768 = log10(%767) /* ty=Tensor[(196, 1), float64] */;
  %769 = cast(%768, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
  %770 = %752.0;
  %771 = %765.11;
  %772 = asinh(%766) /* ty=Tensor[(196, 1), float32] */;
  %773 = sinh(%769) /* ty=Tensor[(196, 1), float64] */;
  (%770, %771, %var_18180, meta[relay.Constant][62] /* ty=Tensor[(140), int64] */, meta[relay.Constant][63] /* ty=Tensor[(448), float64] */, meta[relay.Constant][64] /* ty=Tensor[(1, 480), float32] */, %772, %773)
}

def @func_12586() -> (Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
  %774 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 2, 16), float64] */;
  %775 = cast(meta[relay.Constant][66] /* ty=Tensor[(189), uint64] */, dtype="uint64") /* ty=Tensor[(189), uint64] */;
  %776 = reshape(%775, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
  %777 = @func_9535(%776) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
  %778 = cast(meta[relay.Constant][67] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %779 = cast(meta[relay.Constant][67] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %780 = reshape(%778, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %781 = reshape(%779, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %782 = @func_88(%780, %781) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %783 = sigmoid(%774) /* ty=Tensor[(16, 2, 16), float64] */;
  %784 = %777.0;
  %785 = %782.0;
  (%783, %784, meta[relay.Constant][66] /* ty=Tensor[(189), uint64] */, %785, meta[relay.Constant][67] /* ty=Tensor[(240), float64] */)
}

def @func_13224() -> (Tensor[(240), float64],) {
  %786 = @func_12846() /* ty=Tensor[(240), float64] */;
  (%786,)
}

def @func_4521(%var_4510: Tensor[(8, 10, 8), uint64], %var_4511: Tensor[(8, 10, 8), uint64]) -> (Tensor[(8, 10, 8), bool],) {
  %787 = cast(%var_4511, dtype="bool") /* ty=Tensor[(8, 10, 8), bool] */;
  %788 = shape_of(%var_4510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%var_4510, dtype="bool") /* ty=Tensor[(8, 10, 8), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %791 = not_equal(%789, %790) /* ty=Tensor[(8, 10, 8), bool] */;
  (%791,)
}

def @func_19129() -> (Tensor[(672), float32], Tensor[(8, 10, 8), bool], Tensor[(640), uint64]) {
  %792 = cast(meta[relay.Constant][68] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %793 = cast(meta[relay.Constant][68] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %794 = reshape(%792, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), uint64] */;
  %795 = reshape(%793, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), uint64] */;
  %796 = @func_4521(%794, %795) /* ty=(Tensor[(8, 10, 8), bool],) */;
  %797 = @func_18863() /* ty=Tensor[(672), float32] */;
  %798 = %796.0;
  (%797, %798, meta[relay.Constant][68] /* ty=Tensor[(640), uint64] */)
}

def @func_8378(%var_8368: Tensor[(12, 2, 11), float32], %var_8369: Tensor[(12, 2, 11), float32]) -> Tensor[(12, 2, 11), float32] {
  %799 = cast(%var_8369, dtype="float32") /* ty=Tensor[(12, 2, 11), float32] */;
  %800 = shape_of(%var_8368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%var_8368, dtype="float32") /* ty=Tensor[(12, 2, 11), float32] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%801, %802) /* ty=Tensor[(12, 2, 11), float32] */
}

def @func_15220(%var_15217: Tensor[(196), int64]) -> (Tensor[(4, 2, 1), bool], Tensor[(189), float64], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) {
  %803 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %804 = cast(meta[relay.Constant][69] /* ty=Tensor[(4, 2, 1), bool] */, dtype="bool") /* ty=Tensor[(4, 2, 1), bool] */;
  %805 = cast(%var_15217, dtype="int64") /* ty=Tensor[(196), int64] */;
  %806 = reshape(%805, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), int64] */;
  %807 = @func_7808(%806) /* ty=(Tensor[(7, 14, 2), int64],) */;
  %808 = logical_and(%803, %804) /* ty=Tensor[(4, 2, 1), bool] */;
  %809 = @func_13589() /* ty=Tensor[(189), float64] */;
  %810 = %807.0;
  (%808, %809, %810, %var_15217)
}

def @func_20231() -> Tensor[(264), float32] {
  @func_18034() /* ty=Tensor[(264), float32] */
}

def @func_1313(%var_1307: Tensor[(1, 16, 5), uint8], %var_1308: Tensor[(12, 16, 5), uint8]) -> Tensor[(12, 16, 5), uint8] {
  %811 = cast(%var_1307, dtype="uint8") /* ty=Tensor[(1, 16, 5), uint8] */;
  %812 = cast(%var_1308, dtype="uint8") /* ty=Tensor[(12, 16, 5), uint8] */;
  add(%811, %812) /* ty=Tensor[(12, 16, 5), uint8] */
}

def @func_15319(%var_15311: Tensor[(5, 11, 3), uint8]) -> (Tensor[(5, 11, 3), uint8],) {
  %813 = cast(meta[relay.Constant][70] /* ty=Tensor[(5, 11, 3), uint8] */, dtype="uint8") /* ty=Tensor[(5, 11, 3), uint8] */;
  %814 = shape_of(%var_15311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%var_15311, dtype="uint8") /* ty=Tensor[(5, 11, 3), uint8] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %817 = bitwise_and(%815, %816) /* ty=Tensor[(5, 11, 3), uint8] */;
  (%817,)
}

def @func_17406() -> (Tensor[(15, 2, ?), float64],) {
  %818 = @func_16247() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %819 = %818.0;
  (%819,)
}

def @func_17319() -> (Tensor[(7, 3, 9), float32],) {
  %820 = @func_13208() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %821 = %820.0;
  (%821,)
}

def @func_20793() -> (Tensor[(189), float64],) {
  %822 = @func_19962() /* ty=Tensor[(189), float64] */;
  (%822,)
}

def @func_16595() -> Tensor[(672), float32] {
  %823 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %823.0
}

def @func_17950() -> (Tensor[(240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(960), uint8]) {
  %824 = @func_17338() /* ty=(Tensor[(240), float64],) */;
  %825 = cast(meta[relay.Constant][71] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %826 = cast(meta[relay.Constant][72] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %827 = reshape(%825, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
  %828 = reshape(%826, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), uint8] */;
  %829 = %824.0;
  %830 = @func_1313(%827, %828) /* ty=Tensor[(12, 16, 5), uint8] */;
  (%829, %830, meta[relay.Constant][71] /* ty=Tensor[(80), uint8] */, meta[relay.Constant][72] /* ty=Tensor[(960), uint8] */)
}

def @func_11797(%var_11768: Tensor[(9, 6, 14), float64]) -> (Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(9, 6, 14), int8]) {
  %831 = cast(meta[relay.Constant][73] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %832 = reshape(%831, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
  %833 = cast(%var_11768, dtype="float32") /* ty=Tensor[(9, 6, 14), float32] */;
  %834 = sinh(%833) /* ty=Tensor[(9, 6, 14), float32] */;
  %835 = cast(%var_11768, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %836 = log10(%835) /* ty=Tensor[(9, 6, 14), float64] */;
  %837 = cast(%836, dtype="int8") /* ty=Tensor[(9, 6, 14), int8] */;
  %838 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%834, dtype="int8") /* ty=Tensor[(9, 6, 14), int8] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %841 = @func_3784(%832) /* ty=Tensor[(5, 13, 6), bool] */;
  %842 = bitwise_and(%839, %840) /* ty=Tensor[(9, 6, 14), int8] */;
  (%841, meta[relay.Constant][73] /* ty=Tensor[(390), bool] */, %842)
}

def @func_13518() -> (Tensor[(189), uint64], Tensor[(240), float32], Tensor[(189), float64]) {
  %843 = @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */;
  %844 = @func_13461() /* ty=(Tensor[(240), float64],) */;
  %845 = %844.0;
  %846 = cast(meta[relay.Constant][74] /* ty=Tensor[(240), float64] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(1), int32] */;
  %848 = cast(%845, dtype="float32") /* ty=Tensor[(240), float32] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?), float32] */;
  %850 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %851 = %843.0;
  %852 = floor_mod(%848, %849) /* ty=Tensor[(240), float32] */;
  %853 = %850.1;
  (%851, %852, %853)
}

def @func_19526() -> Tensor[(189), float64] {
  @func_14566() /* ty=Tensor[(189), float64] */
}

def @func_13970() -> (Tensor[(189), float64],) {
  %854 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %855 = %854.0;
  (%855,)
}

def @func_19383() -> Tensor[(14, 14, 3), float32] {
  %856 = @func_16697() /* ty=(Tensor[(140), int64], Tensor[(14, 14, 3), float32]) */;
  %856.1
}

def @func_14096() -> Tensor[(240), float64] {
  %857 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %857.4
}

def @func_14082(%var_14077: Tensor[(294), float32]) -> (Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64]) {
  %858 = @func_13268() /* ty=(Tensor[(189), float64],) */;
  %859 = cast(%var_14077, dtype="float32") /* ty=Tensor[(294), float32] */;
  %860 = cast(meta[relay.Constant][75] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %861 = reshape(%859, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
  %862 = reshape(%860, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %863 = @func_213(%861, %862) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
  %864 = %858.0;
  %865 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %866 = %863.1;
  (%864, %865, %866, %var_14077, meta[relay.Constant][75] /* ty=Tensor[(240), float64] */)
}

def @func_10349(%var_10300: Tensor[(8, 13, 8), int8], %var_10301: Tensor[(8, 13, 8), int8], %var_10307: Tensor[(140), int64], %var_10323: Tensor[(448), float64], %var_10333: Tensor[(480), float32], %var_10339: Tensor[(196), int64]) -> (Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) {
  %867 = cast(%var_10301, dtype="int8") /* ty=Tensor[(8, 13, 8), int8] */;
  %868 = shape_of(%var_10300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%var_10300, dtype="int8") /* ty=Tensor[(8, 13, 8), int8] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %871 = cast(%var_10307, dtype="int64") /* ty=Tensor[(140), int64] */;
  %872 = cast(%var_10307, dtype="int64") /* ty=Tensor[(140), int64] */;
  %873 = reshape(%871, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %874 = reshape(%872, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %875 = cast(meta[relay.Constant][76] /* ty=Tensor[(66, 9), float32] */, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %876 = cast(meta[relay.Constant][76] /* ty=Tensor[(66, 9), float32] */, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %877 = cast(%var_10323, dtype="float64") /* ty=Tensor[(448), float64] */;
  %878 = cast(meta[relay.Constant][77] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %879 = reshape(%875, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %880 = reshape(%876, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %881 = reshape(%877, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
  %882 = reshape(%878, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %883 = @func_2844(%879, %880, %881, %882) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
  %884 = cast(meta[relay.Constant][78] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %885 = cast(%var_10333, dtype="float32") /* ty=Tensor[(480), float32] */;
  %886 = cast(meta[relay.Constant][77] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %887 = reshape(%884, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), float32] */;
  %888 = reshape(%885, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float32] */;
  %889 = reshape(%886, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %890 = @func_5235(%887, %888, %889) /* ty=(Tensor[(5, 16, 6), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(420), float64]) */;
  %891 = cast(%var_10339, dtype="int64") /* ty=Tensor[(196), int64] */;
  %892 = reshape(%891, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), int64] */;
  %893 = @func_7808(%892) /* ty=(Tensor[(7, 14, 2), int64],) */;
  %894 = multiply(%869, %870) /* ty=Tensor[(8, 13, 8), int8] */;
  %895 = @func_10270(%873, %874) /* ty=Tensor[(2, 7, 10), int64] */;
  %896 = %883.2;
  %897 = %890.2;
  %898 = %893.0;
  (%894, %895, %var_10307, %896, meta[relay.Constant][76] /* ty=Tensor[(66, 9), float32] */, %var_10323, meta[relay.Constant][77] /* ty=Tensor[(240), float64] */, %897, meta[relay.Constant][78] /* ty=Tensor[(30), float32] */, %var_10333, %898, %var_10339)
}

def @func_18823() -> Tensor[(588), uint64] {
  %899 = @func_15686() /* ty=(Tensor[(240), float64], Tensor[(588), uint64]) */;
  %899.1
}

def @func_14453() -> (Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) {
  %900 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %901 = cast(meta[relay.Constant][79] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %902 = reshape(%901, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %903 = @func_13111(%902) /* ty=(Tensor[(7, 3, 9), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */;
  %904 = %900.1;
  %905 = %903.0;
  %906 = @func_13983() /* ty=Tensor[(15, 2, ?), float64] */;
  (%904, %905, meta[relay.Constant][79] /* ty=Tensor[(264), float32] */, %906)
}

def @func_18996() -> Tensor[(15, 2, ?), float64] {
  %907 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %907.3
}

def @func_15666() -> Tensor[(15, 2, ?), float64] {
  @func_13983() /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_19215() -> (Tensor[(14, 14, 3), uint64], Tensor[(7, 3, 9), float32]) {
  %908 = @func_13208() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %909 = @func_18912() /* ty=Tensor[(14, 14, 3), uint64] */;
  %910 = %908.0;
  (%909, %910)
}

def @func_18090(%var_18064: Tensor[(880), float32]) -> (Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(189), float64]) {
  %911 = @func_14291() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */;
  %912 = cast(%var_18064, dtype="float32") /* ty=Tensor[(880), float32] */;
  %913 = reshape(%912, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %914 = @func_17843() /* ty=(Tensor[(189), float64],) */;
  %915 = %911.3;
  %916 = @func_4967(%913) /* ty=Tensor[(11, 8, 10), float32] */;
  %917 = %914.0;
  (%915, %916, %var_18064, %917)
}

def @func_213(%var_197: Tensor[(3, 14, 7), float32], %var_207: Tensor[(4, 60), float64]) -> (Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) {
  %918 = cast(%var_197, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
  %919 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %920 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %921 = reshape(%919, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %922 = reshape(%920, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %923 = @func_88(%921, %922) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %924 = cast(%var_207, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %925 = shape_of(meta[relay.Constant][80] /* ty=Tensor[(4, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %926 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 60), float64] */, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %928 = cos(%918) /* ty=Tensor[(3, 14, 7), float32] */;
  %929 = %923.0;
  %930 = equal(%926, %927) /* ty=Tensor[(4, 60), bool] */;
  (%928, %929, %930)
}

def @func_14476() -> Tensor[(189), float64] {
  %931 = @func_13268() /* ty=(Tensor[(189), float64],) */;
  %931.0
}

def @func_11945(%var_11896: Tensor[(16, 2, 2), uint8], %var_11903: Tensor[(1344), int64], %var_11904: Tensor[(240), float64], %var_11929: Tensor[(390), bool], %var_11933: Tensor[(880), float32]) -> (Tensor[(16, 2, 2), uint8], Tensor[(1344), int64], Tensor[(240), float64], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(10, 42), bool], Tensor[(16, 2, 2), float32], Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
  %932 = cast(meta[relay.Constant][81] /* ty=Tensor[(16, 2, 2), uint8] */, dtype="uint8") /* ty=Tensor[(16, 2, 2), uint8] */;
  %933 = shape_of(%var_11896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_11896, dtype="uint8") /* ty=Tensor[(16, 2, 2), uint8] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %936 = cast(meta[relay.Constant][82] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
  %937 = cast(meta[relay.Constant][82] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
  %938 = reshape(%936, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %939 = reshape(%937, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %940 = cast(%var_11903, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %941 = cast(%var_11903, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %942 = cast(%var_11904, dtype="float64") /* ty=Tensor[(240), float64] */;
  %943 = reshape(%940, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
  %944 = reshape(%941, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
  %945 = reshape(%942, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %946 = @func_7429(%943, %944, %945) /* ty=(Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) */;
  %947 = %946.2;
  %948 = cast(meta[relay.Constant][83] /* ty=Tensor[(10, 42), float64] */, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(2), int32] */;
  %950 = cast(%947, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %952 = cast(meta[relay.Constant][81] /* ty=Tensor[(16, 2, 2), uint8] */, dtype="float32") /* ty=Tensor[(16, 2, 2), float32] */;
  %953 = cast(%var_11929, dtype="bool") /* ty=Tensor[(390), bool] */;
  %954 = reshape(%953, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
  %955 = cast(%var_11933, dtype="float32") /* ty=Tensor[(880), float32] */;
  %956 = reshape(%955, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %957 = right_shift(%934, %935) /* ty=Tensor[(16, 2, 2), uint8] */;
  %958 = @func_10270(%938, %939) /* ty=Tensor[(2, 7, 10), int64] */;
  %959 = logical_or(%950, %951) /* ty=Tensor[(10, 42), bool] */;
  %960 = erf(%952) /* ty=Tensor[(16, 2, 2), float32] */;
  %961 = @func_3784(%954) /* ty=Tensor[(5, 13, 6), bool] */;
  %962 = @func_4967(%956) /* ty=Tensor[(11, 8, 10), float32] */;
  (%957, %var_11903, %var_11904, %958, meta[relay.Constant][82] /* ty=Tensor[(140), int64] */, %959, %960, %961, %var_11929, %962, %var_11933)
}

def @func_20454(%var_20445: Tensor[(9, 9, 5), int32], %var_20449: Tensor[(9, 9, 5), int32]) -> (Tensor[(9, 9, 5), int32], Tensor[(9, 9, 5), float64]) {
  %963 = cast(-6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %964 = cast(%var_20445, dtype="int32") /* ty=Tensor[(9, 9, 5), int32] */;
  %965 = cast(%var_20449, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %966 = shape_of(%var_20445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %967 = cast(%var_20445, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %969 = minimum(%963, %964) /* ty=Tensor[(9, 9, 5), int32] */;
  %970 = floor_divide(%967, %968) /* ty=Tensor[(9, 9, 5), float64] */;
  (%969, %970)
}

def @func_14627(%var_14615: Tensor[(264), float32]) -> (Tensor[(189), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
  %971 = @func_13432() /* ty=(Tensor[(189), float64],) */;
  %972 = cast(%var_14615, dtype="float32") /* ty=Tensor[(264), float32] */;
  %973 = cast(%var_14615, dtype="float32") /* ty=Tensor[(264), float32] */;
  %974 = reshape(%972, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %975 = reshape(%973, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %976 = %971.0;
  %977 = @func_8378(%974, %975) /* ty=Tensor[(12, 2, 11), float32] */;
  (%976, %977, %var_14615)
}

def @func_16149() -> (Tensor[(2, 7, 10), int64], Tensor[(2, 7, 10), int64]) {
  %978 = @func_15086() /* ty=(Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) */;
  %979 = %978.1;
  %980 = cast(%979, dtype="int64") /* ty=Tensor[(2, 7, 10), int64] */;
  %981 = cast(%979, dtype="int64") /* ty=Tensor[(2, 7, 10), int64] */;
  %982 = reshape(%980, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %983 = reshape(%981, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %984 = @func_10270(%982, %983) /* ty=Tensor[(2, 7, 10), int64] */;
  (%979, %984)
}

def @func_21321() -> Tensor[(15, 2, ?), float64] {
  %985 = @func_18753() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %985.0
}

def @func_20826() -> Tensor[(264), float32] {
  @func_18791() /* ty=Tensor[(264), float32] */
}

def @func_20256() -> (Tensor[(672), float32], Tensor[(7, 3, 9), float32], Tensor[(147, 2), float32]) {
  %986 = @func_16721() /* ty=(Tensor[(672), float32],) */;
  %987 = cast(meta[relay.Constant][84] /* ty=Tensor[(147, 2), float32] */, dtype="float32") /* ty=Tensor[(147, 2), float32] */;
  %988 = reshape(%987, newshape=[294]) /* ty=Tensor[(294), float32] */;
  %989 = @func_14082(%988) /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64]) */;
  %990 = %986.0;
  %991 = %989.1;
  (%990, %991, meta[relay.Constant][84] /* ty=Tensor[(147, 2), float32] */)
}

def @func_14357() -> Tensor[(189), uint64] {
  %992 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %992.2
}

def @func_14566() -> Tensor[(189), float64] {
  %993 = @func_13432() /* ty=(Tensor[(189), float64],) */;
  %993.0
}

def @func_17482(%var_17429: Tensor[(390), bool], %var_17465: Tensor[(88), float64], %var_17470: Tensor[(640), uint64], %var_17472: Tensor[(780), float64]) -> (Tensor[(7, 3, 9), float32], Tensor[(12, 13, 8), int32], Tensor[(1248), float64], Tensor[(390), bool], Tensor[(240), float64], Tensor[(672), float32], Tensor[(240, 448), int32], Tensor[(88), float64], Tensor[(98, 2), bool], Tensor[(294, 2), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(640), uint64], Tensor[(1170), float64], Tensor[(780), float64]) {
  %994 = @func_17319() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %995 = cast(meta[relay.Constant][85] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %996 = cast(%var_17429, dtype="bool") /* ty=Tensor[(390), bool] */;
  %997 = cast(meta[relay.Constant][86] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %998 = reshape(%995, newshape=[12, 13, 8]) /* ty=Tensor[(12, 13, 8), float64] */;
  %999 = reshape(%996, newshape=[390]) /* ty=Tensor[(390), bool] */;
  %1000 = reshape(%997, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1001 = @func_6772(%998, %999, %1000) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(12, 13, 8), int32], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %1002 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %1003 = cast(%var_17465, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1004 = cast(meta[relay.Constant][87] /* ty=Tensor[(98, 2), bool] */, dtype="bool") /* ty=Tensor[(98, 2), bool] */;
  %1005 = cast(meta[relay.Constant][88] /* ty=Tensor[(294, 2), bool] */, dtype="bool") /* ty=Tensor[(294, 2), bool] */;
  %1006 = cast(meta[relay.Constant][86] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1007 = cast(meta[relay.Constant][89] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %1008 = cast(meta[relay.Constant][90] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %1009 = cast(%var_17470, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1010 = cast(meta[relay.Constant][91] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1011 = cast(%var_17472, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1012 = %1002.0;
  %1013 = cast(%1012, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1014 = reshape(%1003, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float64] */;
  %1015 = reshape(%1004, newshape=[1, 196]) /* ty=Tensor[(1, 196), bool] */;
  %1016 = reshape(%1005, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %1017 = reshape(%1006, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %1018 = reshape(%1007, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %1019 = reshape(%1008, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint8] */;
  %1020 = reshape(%1009, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %1021 = reshape(%1010, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %1022 = reshape(%1011, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %1023 = reshape(%1013, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %1024 = @func_10515(%1014, %1015, %1016, %1017, %1018, %1019, %1020, %1021, %1022, %1023) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */;
  %1025 = %994.0;
  %1026 = %1001.2;
  %1027 = %1024.15;
  (%1025, %1026, meta[relay.Constant][85] /* ty=Tensor[(1248), float64] */, %var_17429, meta[relay.Constant][86] /* ty=Tensor[(240), float64] */, %1012, %1027, %var_17465, meta[relay.Constant][87] /* ty=Tensor[(98, 2), bool] */, meta[relay.Constant][88] /* ty=Tensor[(294, 2), bool] */, meta[relay.Constant][89] /* ty=Tensor[(80), uint8] */, meta[relay.Constant][90] /* ty=Tensor[(960), uint8] */, %var_17470, meta[relay.Constant][91] /* ty=Tensor[(1170), float64] */, %var_17472)
}

def @func_20319() -> (Tensor[(588), uint64], Tensor[(13, 15, 6), float64], Tensor[(130, 9), float64], Tensor[(240), float64]) {
  %1028 = cast(meta[relay.Constant][92] /* ty=Tensor[(130, 9), float64] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %1029 = reshape(%1028, newshape=[13, 15, 6]) /* ty=Tensor[(13, 15, 6), float64] */;
  %1030 = @func_18823() /* ty=Tensor[(588), uint64] */;
  %1031 = @func_6189(%1029) /* ty=Tensor[(13, 15, 6), float64] */;
  %1032 = @func_14530() /* ty=Tensor[(240), float64] */;
  (%1030, %1031, meta[relay.Constant][92] /* ty=Tensor[(130, 9), float64] */, %1032)
}

def @func_17338() -> (Tensor[(240), float64],) {
  %1033 = @func_13224() /* ty=(Tensor[(240), float64],) */;
  %1034 = %1033.0;
  (%1034,)
}

def @func_13268() -> (Tensor[(189), float64],) {
  %1035 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %1036 = %1035.1;
  (%1036,)
}

def @func_20925() -> (Tensor[(240), float64], Tensor[(264), float32]) {
  %1037 = @func_13461() /* ty=(Tensor[(240), float64],) */;
  %1038 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %1039 = %1037.0;
  %1040 = %1038.2;
  (%1039, %1040)
}

def @func_1355(%var_1337: Tensor[(16, 7, 6), float32]) -> (Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) {
  %1041 = cast(%var_1337, dtype="float32") /* ty=Tensor[(16, 7, 6), float32] */;
  %1042 = shape_of(meta[relay.Constant][93] /* ty=Tensor[(16, 7, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(meta[relay.Constant][93] /* ty=Tensor[(16, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 6), float32] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1045 = cast(meta[relay.Constant][93] /* ty=Tensor[(16, 7, 6), float32] */, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %1046 = shape_of(%var_1337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(%var_1337, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1049 = divide(%1043, %1044) /* ty=Tensor[(16, 7, 6), float32] */;
  %1050 = greater(%1047, %1048) /* ty=Tensor[(16, 7, 6), bool] */;
  (%1049, %1050)
}

def @func_18623(%var_18613: Tensor[(832), int8], %var_18614: Tensor[(196), int64]) -> (Tensor[(189), float64], Tensor[(1, 480), float32], Tensor[(832), int8], Tensor[(196), int64]) {
  %1051 = @func_14133() /* ty=(Tensor[(189), float64],) */;
  %1052 = cast(%var_18613, dtype="int8") /* ty=Tensor[(832), int8] */;
  %1053 = cast(%var_18614, dtype="int64") /* ty=Tensor[(196), int64] */;
  %1054 = reshape(%1052, newshape=[832]) /* ty=Tensor[(832), int8] */;
  %1055 = reshape(%1053, newshape=[196, 1]) /* ty=Tensor[(196, 1), int64] */;
  %1056 = @func_18201(%1054, %1055) /* ty=(Tensor[(240), float64], Tensor[(196), int64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(1, 480), float32], Tensor[(196, 1), float32], Tensor[(196, 1), float64]) */;
  %1057 = %1051.0;
  %1058 = %1056.5;
  (%1057, %1058, %var_18613, %var_18614)
}

def @func_18236() -> Tensor[(240), float64] {
  %1059 = @func_15727() /* ty=(Tensor[(240), float64],) */;
  %1059.0
}

def @func_21402() -> Tensor[(240), float64] {
  @func_16943() /* ty=Tensor[(240), float64] */
}

def @func_21487() -> (Tensor[(264), float32], Tensor[(189), float64]) {
  %1060 = @func_20793() /* ty=(Tensor[(189), float64],) */;
  %1061 = @func_20826() /* ty=Tensor[(264), float32] */;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_18791() -> Tensor[(264), float32] {
  @func_18034() /* ty=Tensor[(264), float32] */
}

def @func_18034() -> Tensor[(264), float32] {
  %1063 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %1063.2
}

def @func_14958() -> (Tensor[(10, 3), float64],) {
  %1064 = @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */;
  %1065 = %1064.2;
  (%1065,)
}

def @func_16510(%var_16401: Tensor[(88), float64], %var_16402: Tensor[(49, 4), bool], %var_16405: Tensor[(960), uint8], %var_16406: Tensor[(1, 1170), float64], %var_16486: Tensor[(756), float64]) -> (Tensor[(10, 3), float64], Tensor[(240), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(1170), float64], Tensor[(88), float64], Tensor[(49, 4), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(7, 3, 9), float32], Tensor[(189), uint64], Tensor[(264), float32], Tensor[(40, 10), uint32], Tensor[(390), bool], Tensor[(756), float64], Tensor[(1, 1170), float64]) {
  %1066 = @func_14958() /* ty=(Tensor[(10, 3), float64],) */;
  %1067 = cast(meta[relay.Constant][94] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1068 = reshape(%1067, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %1069 = @func_14627(%1068) /* ty=(Tensor[(189), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */;
  %1070 = cast(%var_16401, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1071 = cast(%var_16402, dtype="bool") /* ty=Tensor[(49, 4), bool] */;
  %1072 = cast(meta[relay.Constant][95] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %1073 = cast(meta[relay.Constant][96] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %1074 = cast(%var_16405, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %1075 = cast(%var_16406, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %1076 = %1069.1;
  %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(12, 2, 11), float32] */;
  %1078 = reshape(%1070, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %1079 = reshape(%1071, newshape=[196]) /* ty=Tensor[(196), bool] */;
  %1080 = reshape(%1072, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %1081 = reshape(%1073, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint8] */;
  %1082 = reshape(%1074, newshape=[960]) /* ty=Tensor[(960), uint8] */;
  %1083 = reshape(%1075, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %1084 = reshape(%1077, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %1085 = @func_13017(%1078, %1079, %1080, %1081, %1082, %1083, %1084) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(1, 196), bool], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(960), uint8], Tensor[(20, 32), uint64], Tensor[(1170), float64], Tensor[(672), float32], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(80, 780), bool], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) */;
  %1086 = cast(meta[relay.Constant][97] /* ty=Tensor[(189), uint64] */, dtype="uint64") /* ty=Tensor[(189), uint64] */;
  %1087 = reshape(%1086, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
  %1088 = @func_9535(%1087) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
  %1089 = cast(meta[relay.Constant][98] /* ty=Tensor[(40, 10), uint32] */, dtype="uint32") /* ty=Tensor[(40, 10), uint32] */;
  %1090 = cast(meta[relay.Constant][98] /* ty=Tensor[(40, 10), uint32] */, dtype="uint32") /* ty=Tensor[(40, 10), uint32] */;
  %1091 = cast(%1076, dtype="float32") /* ty=Tensor[(12, 2, 11), float32] */;
  %1092 = reshape(%1089, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), uint32] */;
  %1093 = reshape(%1090, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), uint32] */;
  %1094 = reshape(%1091, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %1095 = @func_11246(%1092, %1093, %1094) /* ty=(Tensor[(10, 8, 5), bool], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */;
  %1096 = cast(%var_16486, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1097 = reshape(%1096, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %1098 = @func_11797(%1097) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(9, 6, 14), int8]) */;
  %1099 = cast(%var_16406, dtype="float32") /* ty=Tensor[(1, 1170), float32] */;
  %1100 = acosh(%1099) /* ty=Tensor[(1, 1170), float32] */;
  %1101 = cast(%1100, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %1102 = %1066.0;
  %1103 = @func_12846() /* ty=Tensor[(240), float64] */;
  %1104 = %1085.8;
  %1105 = %1088.1;
  %1106 = %1095.2;
  %1107 = %1098.1;
  %1108 = cosh(%1101) /* ty=Tensor[(1, 1170), float64] */;
  (%1102, %1103, %1076, meta[relay.Constant][94] /* ty=Tensor[(264), float32] */, %1104, %var_16401, %var_16402, meta[relay.Constant][95] /* ty=Tensor[(588), bool] */, meta[relay.Constant][96] /* ty=Tensor[(80), uint8] */, %var_16405, %1105, meta[relay.Constant][97] /* ty=Tensor[(189), uint64] */, %1106, meta[relay.Constant][98] /* ty=Tensor[(40, 10), uint32] */, %1107, %var_16486, %1108)
}

def @func_17370() -> Tensor[(15, 2, ?), float64] {
  @func_15666() /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_18912() -> Tensor[(14, 14, 3), uint64] {
  @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @func_19854() -> (Tensor[(240), float64],) {
  %1109 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %1110 = %1109.4;
  (%1110,)
}

def @func_15727() -> (Tensor[(240), float64],) {
  %1111 = @func_13224() /* ty=(Tensor[(240), float64],) */;
  %1112 = %1111.0;
  (%1112,)
}

def @func_18353(%var_18346: Tensor[(1248), float64]) -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(1248), float64]) {
  %1113 = @func_13224() /* ty=(Tensor[(240), float64],) */;
  %1114 = %1113.0;
  %1115 = cast(%1114, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1116 = cast(%var_18346, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %1117 = reshape(%1115, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1118 = reshape(%1116, newshape=[1248]) /* ty=Tensor[(1248), float64] */;
  %1119 = @func_7996(%1117, %1118) /* ty=(Tensor[(16, 7, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(390), bool], Tensor[(1248), float64], Tensor[(1, 390), bool]) */;
  %1120 = %1119.2;
  (%1114, %1120, %var_18346)
}

def @func_12660() -> (Tensor[(7, 3, 9), float32], Tensor[(189), float64]) {
  %1121 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %1122 = %1121.2;
  %1123 = cast(%1122, dtype="uint64") /* ty=Tensor[(189), uint64] */;
  %1124 = reshape(%1123, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
  %1125 = @func_9535(%1124) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
  %1126 = cast(%1122, dtype="float64") /* ty=Tensor[(189), float64] */;
  %1127 = %1125.1;
  %1128 = atanh(%1126) /* ty=Tensor[(189), float64] */;
  (%1127, %1128)
}

def @func_6189(%var_6181: Tensor[(13, 15, 6), float64]) -> Tensor[(13, 15, 6), float64] {
  %1129 = cast(%var_6181, dtype="float64") /* ty=Tensor[(13, 15, 6), float64] */;
  tan(%1129) /* ty=Tensor[(13, 15, 6), float64] */
}

def @func_19985() -> (Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) {
  %1130 = @func_19343() /* ty=(Tensor[(14, 14, 3), uint64],) */;
  %1131 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %1132 = %1130.0;
  %1133 = %1131.1;
  (%1132, %1133)
}

def @func_18894() -> (Tensor[(189), float64], Tensor[(240), float64]) {
  %1134 = @func_13432() /* ty=(Tensor[(189), float64],) */;
  %1135 = %1134.0;
  %1136 = @func_16943() /* ty=Tensor[(240), float64] */;
  (%1135, %1136)
}

def @func_14530() -> Tensor[(240), float64] {
  %1137 = @func_13461() /* ty=(Tensor[(240), float64],) */;
  %1137.0
}

def @func_15686() -> (Tensor[(240), float64], Tensor[(588), uint64]) {
  %1138 = @func_13461() /* ty=(Tensor[(240), float64],) */;
  %1139 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %1140 = %1138.0;
  %1141 = %1139.3;
  (%1140, %1141)
}

def @func_18054() -> (Tensor[(672), float32],) {
  %1142 = @func_16721() /* ty=(Tensor[(672), float32],) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_20210(%var_20190: Tensor[(143), float64], %var_20191: Tensor[(2, 120), float64]) -> (Tensor[(16, 2, 16), float64], Tensor[(10, 3), float64], Tensor[(6, 13, 11), float64], Tensor[(143), float64], Tensor[(2, 120), float64], Tensor[(858), float64], Tensor[(3, 14, 14), bool], Tensor[(196), bool], Tensor[(588), bool]) {
  %1144 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %1145 = @func_14958() /* ty=(Tensor[(10, 3), float64],) */;
  %1146 = cast(%var_20190, dtype="float64") /* ty=Tensor[(143), float64] */;
  %1147 = cast(%var_20191, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %1148 = cast(meta[relay.Constant][99] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %1149 = reshape(%1146, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), float64] */;
  %1150 = reshape(%1147, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1151 = reshape(%1148, newshape=[6, 13, 11]) /* ty=Tensor[(6, 13, 11), float64] */;
  %1152 = @func_3149(%1149, %1150, %1151) /* ty=(Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(6, 13, 11), float64]) */;
  %1153 = cast(meta[relay.Constant][100] /* ty=Tensor[(196), bool] */, dtype="bool") /* ty=Tensor[(196), bool] */;
  %1154 = cast(meta[relay.Constant][101] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %1155 = reshape(%1153, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), bool] */;
  %1156 = reshape(%1154, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), bool] */;
  %1157 = %1144.0;
  %1158 = %1145.0;
  %1159 = %1152.2;
  %1160 = @func_8577(%1155, %1156) /* ty=Tensor[(3, 14, 14), bool] */;
  (%1157, %1158, %1159, %var_20190, %var_20191, meta[relay.Constant][99] /* ty=Tensor[(858), float64] */, %1160, meta[relay.Constant][100] /* ty=Tensor[(196), bool] */, meta[relay.Constant][101] /* ty=Tensor[(588), bool] */)
}

def @func_7996(%var_7977: Tensor[(240), float64], %var_7992: Tensor[(1248), float64]) -> (Tensor[(16, 7, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(390), bool], Tensor[(1248), float64], Tensor[(1, 390), bool]) {
  %1161 = cast(meta[relay.Constant][102] /* ty=Tensor[(16, 7, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 7), float32] */;
  %1162 = cast(%var_7977, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1163 = cast(%var_7977, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1164 = reshape(%1162, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %1165 = reshape(%1163, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %1166 = @func_88(%1164, %1165) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %1167 = cast(%var_7992, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %1168 = cast(meta[relay.Constant][103] /* ty=Tensor[(1, 390), bool] */, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
  %1169 = %1166.0;
  %1170 = cast(%1169, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  %1171 = reshape(%1167, newshape=[12, 13, 8]) /* ty=Tensor[(12, 13, 8), float64] */;
  %1172 = reshape(%1168, newshape=[390]) /* ty=Tensor[(390), bool] */;
  %1173 = reshape(%1170, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1174 = @func_6772(%1171, %1172, %1173) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(12, 13, 8), int32], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %1175 = sin(%1161) /* ty=Tensor[(16, 7, 7), float32] */;
  %1176 = %1174.1;
  (%1175, %1169, %var_7977, %1176, %var_7992, meta[relay.Constant][103] /* ty=Tensor[(1, 390), bool] */)
}

def @func_14518() -> Tensor[(14, 14, 3), uint64] {
  %1177 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %1177.2
}

def @func_13432() -> (Tensor[(189), float64],) {
  %1178 = @func_13268() /* ty=(Tensor[(189), float64],) */;
  %1179 = %1178.0;
  (%1179,)
}

def @func_10515(%var_10414: Tensor[(2, 4, 11), float64], %var_10421: Tensor[(1, 196), bool], %var_10422: Tensor[(588), bool], %var_10443: Tensor[(1, 240), float64], %var_10455: Tensor[(80), uint8], %var_10456: Tensor[(480, 2), uint8], %var_10461: Tensor[(640), uint64], %var_10471: Tensor[(1170), float64], %var_10488: Tensor[(780), float64], %var_10489: Tensor[(672), float32]) -> (Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) {
  %1180 = cast(%var_10421, dtype="bool") /* ty=Tensor[(1, 196), bool] */;
  %1181 = cast(%var_10422, dtype="bool") /* ty=Tensor[(588), bool] */;
  %1182 = reshape(%1180, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), bool] */;
  %1183 = reshape(%1181, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), bool] */;
  %1184 = cast(meta[relay.Constant][104] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %1185 = reshape(%1184, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %1186 = cast(%var_10443, dtype="float64") /* ty=Tensor[(1, 240), float64] */;
  %1187 = reshape(%1186, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1188 = @func_365(%1187) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */;
  %1189 = cast(%var_10455, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %1190 = cast(%var_10456, dtype="uint8") /* ty=Tensor[(480, 2), uint8] */;
  %1191 = reshape(%1189, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
  %1192 = reshape(%1190, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), uint8] */;
  %1193 = cast(%var_10461, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1194 = cast(%var_10461, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1195 = reshape(%1193, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), uint64] */;
  %1196 = reshape(%1194, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), uint64] */;
  %1197 = @func_4521(%1195, %1196) /* ty=(Tensor[(8, 10, 8), bool],) */;
  %1198 = cast(%var_10471, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1199 = reshape(%1198, newshape=[13, 15, 6]) /* ty=Tensor[(13, 15, 6), float64] */;
  %1200 = cast(%var_10414, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
  %1201 = asin(%1200) /* ty=Tensor[(2, 4, 11), float64] */;
  %1202 = cast(%1201, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
  %1203 = cast(%var_10488, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1204 = cast(%var_10488, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1205 = cast(%var_10443, dtype="float64") /* ty=Tensor[(1, 240), float64] */;
  %1206 = cast(%var_10489, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1207 = reshape(%1203, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), float64] */;
  %1208 = reshape(%1204, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), float64] */;
  %1209 = reshape(%1205, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %1210 = reshape(%1206, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %1211 = @func_3391(%1207, %1208, %1209, %1210) /* ty=(Tensor[(12, 5, 13), float64], Tensor[(240), float64], Tensor[(594), float32], Tensor[(1, 8, 14), float32], Tensor[(240, 448), int32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(12, 5, 13), float64], Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), bool], Tensor[(224, 2), float64], Tensor[(16, 7, 6), bool], Tensor[(12, 2, 10), float64]) */;
  %1212 = @func_8577(%1182, %1183) /* ty=Tensor[(3, 14, 14), bool] */;
  %1213 = @func_4967(%1185) /* ty=Tensor[(11, 8, 10), float32] */;
  %1214 = %1188.1;
  %1215 = @func_1313(%1191, %1192) /* ty=Tensor[(12, 16, 5), uint8] */;
  %1216 = %1197.0;
  %1217 = @func_6189(%1199) /* ty=Tensor[(13, 15, 6), float64] */;
  %1218 = log(%1202) /* ty=Tensor[(2, 4, 11), float64] */;
  %1219 = %1211.4;
  (%1212, %var_10421, %var_10422, %1213, meta[relay.Constant][104] /* ty=Tensor[(880), float32] */, %1214, %var_10443, %1215, %var_10455, %var_10456, %1216, %var_10461, %1217, %var_10471, %1218, %1219, %var_10488, %var_10489)
}

def @func_7808(%var_7799: Tensor[(7, 14, 2), int64]) -> (Tensor[(7, 14, 2), int64],) {
  %1220 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1221 = cast(%var_7799, dtype="int64") /* ty=Tensor[(7, 14, 2), int64] */;
  %1222 = minimum(%1220, %1221) /* ty=Tensor[(7, 14, 2), int64] */;
  (%1222,)
}

def @func_13420() -> (Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) {
  %1223 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %1224 = cast(meta[relay.Constant][105] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %1225 = reshape(%1224, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), float64] */;
  %1226 = %1223.2;
  %1227 = @func_11658(%1225) /* ty=Tensor[(15, 2, ?), float64] */;
  (%1226, %1227, meta[relay.Constant][105] /* ty=Tensor[(10, 3), float64] */)
}

def @func_19515() -> (Tensor[(15, 2, ?), float64], Tensor[(15, 2, ?), float64], Tensor[(14, 14, 3), uint64]) {
  %1228 = @func_16556() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %1229 = @func_17830() /* ty=(Tensor[(672), float32], Tensor[(15, 2, ?), float64]) */;
  %1230 = @func_18969() /* ty=(Tensor[(189), float64], Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) */;
  %1231 = %1228.0;
  %1232 = %1229.1;
  %1233 = %1230.1;
  (%1231, %1232, %1233)
}

def @func_2929(%var_2892: Tensor[(10, 10, 8), float32], %var_2919: Tensor[(1, 135), int8]) -> (Tensor[(10, 10, 8), float32], Tensor[(3, 9, 5), int8], Tensor[(1, 135), int8], Tensor[(224, 2), float64], Tensor[(594), float32], Tensor[(112, 4), float64], Tensor[(240), float64]) {
  %1234 = cast(%var_2892, dtype="float32") /* ty=Tensor[(10, 10, 8), float32] */;
  %1235 = cast(%var_2919, dtype="int8") /* ty=Tensor[(1, 135), int8] */;
  %1236 = cast(%var_2919, dtype="int8") /* ty=Tensor[(1, 135), int8] */;
  %1237 = reshape(%1235, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), int8] */;
  %1238 = reshape(%1236, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), int8] */;
  %1239 = cast(meta[relay.Constant][106] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1240 = cast(meta[relay.Constant][106] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1241 = cast(meta[relay.Constant][107] /* ty=Tensor[(112, 4), float64] */, dtype="float64") /* ty=Tensor[(112, 4), float64] */;
  %1242 = cast(meta[relay.Constant][108] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1243 = reshape(%1239, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %1244 = reshape(%1240, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %1245 = reshape(%1241, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
  %1246 = reshape(%1242, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1247 = @func_2844(%1243, %1244, %1245, %1246) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
  %1248 = cosh(%1234) /* ty=Tensor[(10, 10, 8), float32] */;
  %1249 = @func_1843(%1237, %1238) /* ty=Tensor[(3, 9, 5), int8] */;
  %1250 = %1247.2;
  (%1248, %1249, %var_2919, %1250, meta[relay.Constant][106] /* ty=Tensor[(594), float32] */, meta[relay.Constant][107] /* ty=Tensor[(112, 4), float64] */, meta[relay.Constant][108] /* ty=Tensor[(240), float64] */)
}

def @func_11246(%var_11233: Tensor[(10, 8, 5), uint32], %var_11234: Tensor[(10, 8, 5), uint32], %var_11243: Tensor[(264), float32]) -> (Tensor[(10, 8, 5), bool], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
  %1251 = cast(%var_11234, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %1252 = shape_of(%var_11233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1253 = cast(%var_11233, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %1254 = dyn.reshape(%1251, %1252, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1255 = cast(%var_11243, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1256 = cast(%var_11243, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1257 = reshape(%1255, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %1258 = reshape(%1256, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %1259 = greater(%1253, %1254) /* ty=Tensor[(10, 8, 5), bool] */;
  %1260 = @func_8378(%1257, %1258) /* ty=Tensor[(12, 2, 11), float32] */;
  (%1259, %1260, %var_11243)
}

def @func_3391(%var_3204: Tensor[(12, 5, 13), float64], %var_3205: Tensor[(12, 5, 13), float64], %var_3241: Tensor[(240, 1), float64], %var_3317: Tensor[(672), float32]) -> (Tensor[(12, 5, 13), float64], Tensor[(240), float64], Tensor[(594), float32], Tensor[(1, 8, 14), float32], Tensor[(240, 448), int32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(12, 5, 13), float64], Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), bool], Tensor[(224, 2), float64], Tensor[(16, 7, 6), bool], Tensor[(12, 2, 10), float64]) {
  %1261 = cast(%var_3205, dtype="float64") /* ty=Tensor[(12, 5, 13), float64] */;
  %1262 = shape_of(%var_3204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1263 = cast(%var_3204, dtype="float64") /* ty=Tensor[(12, 5, 13), float64] */;
  %1264 = dyn.reshape(%1261, %1262, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1265 = cast(meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1266 = cast(meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1267 = cast(meta[relay.Constant][110] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1268 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %1269 = reshape(%1265, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %1270 = reshape(%1266, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %1271 = reshape(%1267, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
  %1272 = reshape(%1268, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1273 = @func_2844(%1269, %1270, %1271, %1272) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
  %1274 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %1275 = reshape(%1274, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1276 = @func_365(%1275) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */;
  %1277 = cast(meta[relay.Constant][110] /* ty=Tensor[(448), float64] */, dtype="int32") /* ty=Tensor[(448), int32] */;
  %1278 = cast(%var_3241, dtype="int32") /* ty=Tensor[(240, 1), int32] */;
  %1279 = cast(meta[relay.Constant][111] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %1280 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %1281 = reshape(%1279, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
  %1282 = reshape(%1280, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %1283 = @func_213(%1281, %1282) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
  %1284 = cast(meta[relay.Constant][110] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1285 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %1286 = reshape(%1284, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), float64] */;
  %1287 = reshape(%1285, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1288 = @func_231(%1286, %1287) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %1289 = cast(meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1290 = cast(meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1291 = cast(meta[relay.Constant][110] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1292 = %1273.3;
  %1293 = cast(%1292, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1294 = reshape(%1289, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %1295 = reshape(%1290, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %1296 = reshape(%1291, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
  %1297 = reshape(%1293, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1298 = @func_2844(%1294, %1295, %1296, %1297) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
  %1299 = cast(%var_3205, dtype="float64") /* ty=Tensor[(12, 5, 13), float64] */;
  %1300 = cast(%var_3317, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1301 = reshape(%1300, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
  %1302 = @func_1355(%1301) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
  %1303 = cast(%var_3317, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1304 = reshape(%1303, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
  %1305 = @func_1355(%1304) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
  %1306 = %1305.0;
  %1307 = cast(%var_3317, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1308 = shape_of(%1306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1309 = cast(%1306, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1311 = cast(meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1312 = cast(meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1313 = cast(meta[relay.Constant][110] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1314 = %1288.2;
  %1315 = cast(%1314, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1316 = reshape(%1311, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %1317 = reshape(%1312, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %1318 = reshape(%1313, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
  %1319 = reshape(%1315, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1320 = @func_2844(%1316, %1317, %1318, %1319) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
  %1321 = cast(%1306, dtype="float32") /* ty=Tensor[(16, 7, 6), float32] */;
  %1322 = reshape(%1321, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
  %1323 = @func_1355(%1322) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
  %1324 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %1325 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %1326 = reshape(%1324, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %1327 = reshape(%1325, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %1328 = @func_88(%1326, %1327) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %1329 = floor_mod(%1263, %1264) /* ty=Tensor[(12, 5, 13), float64] */;
  %1330 = %1276.0;
  %1331 = bitwise_or(%1277, %1278) /* ty=Tensor[(240, 448), int32] */;
  %1332 = %1283.0;
  %1333 = %1298.2;
  %1334 = log(%1299) /* ty=Tensor[(12, 5, 13), float64] */;
  %1335 = %1302.1;
  %1336 = logical_and(%1309, %1310) /* ty=Tensor[(16, 7, 6), bool] */;
  %1337 = %1320.2;
  %1338 = %1323.1;
  %1339 = %1328.0;
  (%1329, %1292, meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, %1330, %1331, %1332, meta[relay.Constant][111] /* ty=Tensor[(294), float32] */, %1314, %1333, %1334, %1335, %1336, %1337, %1338, %1339)
}

def @func_5235(%var_5190: Tensor[(5, 1, 6), float32], %var_5191: Tensor[(5, 16, 6), float32], %var_5210: Tensor[(240), float64]) -> (Tensor[(5, 16, 6), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(420), float64]) {
  %1340 = cast(%var_5190, dtype="float32") /* ty=Tensor[(5, 1, 6), float32] */;
  %1341 = cast(%var_5191, dtype="float32") /* ty=Tensor[(5, 16, 6), float32] */;
  %1342 = floor_divide(%1340, %1341) /* ty=Tensor[(5, 16, 6), float32] */;
  %1343 = cast(%1342, dtype="float32") /* ty=Tensor[(5, 16, 6), float32] */;
  %1344 = cast(%var_5210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1345 = cast(%var_5210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1346 = reshape(%1344, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %1347 = reshape(%1345, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %1348 = @func_88(%1346, %1347) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %1349 = cast(meta[relay.Constant][112] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1350 = cast(%var_5210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1351 = reshape(%1349, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), float64] */;
  %1352 = reshape(%1350, newshape=[8, 30]) /* ty=Tensor[(8, 30), float64] */;
  %1353 = @func_2519(%1351, %1352) /* ty=(Tensor[(5, 6, 14), float32], Tensor[(12, 2, 10), float64], Tensor[(8, 30), float64], Tensor[(12, 2, 10), float64], Tensor[(448), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */;
  %1354 = acos(%1343) /* ty=Tensor[(5, 16, 6), float32] */;
  %1355 = %1348.0;
  %1356 = %1353.5;
  (%1354, %1355, %var_5210, %1356, meta[relay.Constant][112] /* ty=Tensor[(420), float64] */)
}

def @func_2844(%var_2812: Tensor[(11, 6, 9), float32], %var_2813: Tensor[(11, 6, 9), float32], %var_2835: Tensor[(224, 2), float64], %var_2836: Tensor[(240), float64]) -> (Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) {
  %1357 = cast(%var_2813, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %1358 = shape_of(%var_2812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1359 = cast(%var_2812, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1361 = cast(%var_2835, dtype="float64") /* ty=Tensor[(224, 2), float64] */;
  %1362 = cast(%var_2836, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1363 = reshape(%1361, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), float64] */;
  %1364 = reshape(%1362, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1365 = @func_231(%1363, %1364) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %1366 = power(%1359, %1360) /* ty=Tensor[(11, 6, 9), float32] */;
  %1367 = %1365.2;
  (%1366, %1367, %var_2835, %var_2836)
}

def @func_17097() -> (Tensor[(672), float32],) {
  %1368 = @func_16721() /* ty=(Tensor[(672), float32],) */;
  %1369 = %1368.0;
  (%1369,)
}

def @func_19083() -> Tensor[(140), int64] {
  %1370 = @func_15495() /* ty=(Tensor[(189), float64], Tensor[(140), int64]) */;
  %1370.1
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_20828() -> Tensor[(264), float32] {
  @func_20826() /* ty=Tensor[(264), float32] */
}

def @func_18693() -> (Tensor[(14, 14, 3), uint64], Tensor[(7, 13, 3), int32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1 = reshape(%0, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %2 = @func_1645(%1) /* ty=Tensor[(7, 13, 3), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(273), float64] */, dtype="int32") /* ty=Tensor[(273), int32] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%2, dtype="int32") /* ty=Tensor[(7, 13, 3), int32] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %7 = @func_17519() /* ty=Tensor[(14, 14, 3), uint64] */;
  %8 = bitwise_or(%5, %6) /* ty=Tensor[(7, 13, 3), int32] */;
  (%7, %8)
}

def @func_14028(%var_14023: Tensor[(630), float64]) -> (Tensor[(7, 3, 9), float32], Tensor[(6, 7, 15), float64], Tensor[(630), float64]) {
  %9 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %10 = cast(%9, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %11 = cast(%var_14023, dtype="float64") /* ty=Tensor[(630), float64] */;
  %12 = reshape(%11, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), float64] */;
  %13 = @func_3418(%12) /* ty=(Tensor[(6, 7, 15), float64],) */;
  %14 = tan(%10) /* ty=Tensor[(7, 3, 9), float32] */;
  %15 = %13.0;
  (%14, %15, %var_14023)
}

def @func_15131() -> Tensor[(189), float64] {
  %16 = fn () -> Tensor[(189), float64] {
    @func_14566() /* ty=Tensor[(189), float64] */
  };
  %16() /* ty=Tensor[(189), float64] */
}

def @func_16149() -> (Tensor[(2, 7, 10), int64], Tensor[(2, 7, 10), int64]) {
  %17 = @func_15086() /* ty=(Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) */;
  %18 = %17.1;
  %19 = cast(%18, dtype="int64") /* ty=Tensor[(2, 7, 10), int64] */;
  %20 = cast(%18, dtype="int64") /* ty=Tensor[(2, 7, 10), int64] */;
  %21 = reshape(%19, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %22 = reshape(%20, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %23 = @func_10270(%21, %22) /* ty=Tensor[(2, 7, 10), int64] */;
  (%18, %23)
}

def @func_17339() -> (Tensor[(240), float64],) {
  %26 = fn () -> (Tensor[(240), float64],) {
    %24 = @func_13224() /* ty=(Tensor[(240), float64],) */;
    %25 = %24.0;
    (%25,)
  };
  %26() /* ty=(Tensor[(240), float64],) */
}

def @func_4967(%var_4953: Tensor[(11, 8, 10), float32]) -> Tensor[(11, 8, 10), float32] {
  %27 = cast(%var_4953, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  asinh(%27) /* ty=Tensor[(11, 8, 10), float32] */
}

def @func_15686() -> (Tensor[(240), float64], Tensor[(588), uint64]) {
  %28 = @func_13461() /* ty=(Tensor[(240), float64],) */;
  %29 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %30 = %28.0;
  %31 = %29.3;
  (%30, %31)
}

def @func_13620() -> Tensor[(7, 3, 9), float32] {
  %33 = fn () -> Tensor[(7, 3, 9), float32] {
    %32 = @func_13208() /* ty=(Tensor[(7, 3, 9), float32],) */;
    %32.0
  };
  %33() /* ty=Tensor[(7, 3, 9), float32] */
}

def @func_16307(%var_16304: Tensor[(35, 4), int64], %var_16305: Tensor[(98, 2), int64], %var_16306: Tensor[(800), float32]) -> (Tensor[(189), float64], Tensor[(448), float64], Tensor[(832), int8], Tensor[(35, 4), int64], Tensor[(98, 2), int64], Tensor[(800), float32]) {
  @func_16302(%var_16304, %var_16305, %var_16306) /* ty=(Tensor[(189), float64], Tensor[(448), float64], Tensor[(832), int8], Tensor[(35, 4), int64], Tensor[(98, 2), int64], Tensor[(800), float32]) */
}

def @func_17831() -> (Tensor[(672), float32], Tensor[(15, 2, ?), float64]) {
  %37 = fn () -> (Tensor[(672), float32], Tensor[(15, 2, ?), float64]) {
    %34 = @func_17406() /* ty=(Tensor[(15, 2, ?), float64],) */;
    %35 = @func_17003() /* ty=Tensor[(672), float32] */;
    %36 = %34.0;
    (%35, %36)
  };
  %37() /* ty=(Tensor[(672), float32], Tensor[(15, 2, ?), float64]) */
}

def @func_13879() -> (Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) {
  @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */
}

def @func_16721() -> (Tensor[(672), float32],) {
  %38 = @func_16595() /* ty=Tensor[(672), float32] */;
  (%38,)
}

def @func_18623(%var_18613: Tensor[(832), int8], %var_18614: Tensor[(196), int64]) -> (Tensor[(189), float64], Tensor[(1, 480), float32], Tensor[(832), int8], Tensor[(196), int64]) {
  %39 = @func_14133() /* ty=(Tensor[(189), float64],) */;
  %40 = cast(%var_18613, dtype="int8") /* ty=Tensor[(832), int8] */;
  %41 = cast(%var_18614, dtype="int64") /* ty=Tensor[(196), int64] */;
  %42 = reshape(%40, newshape=[832]) /* ty=Tensor[(832), int8] */;
  %43 = reshape(%41, newshape=[196, 1]) /* ty=Tensor[(196, 1), int64] */;
  %44 = @func_18201(%42, %43) /* ty=(Tensor[(240), float64], Tensor[(196), int64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(1, 480), float32], Tensor[(196, 1), float32], Tensor[(196, 1), float64]) */;
  %45 = %39.0;
  %46 = %44.5;
  (%45, %46, %var_18613, %var_18614)
}

def @func_3787(%var_3785: Tensor[(5, 13, 6), bool]) -> Tensor[(5, 13, 6), bool] {
  @func_3784(%var_3785) /* ty=Tensor[(5, 13, 6), bool] */
}

def @func_18127() -> Tensor[(14, 14, 3), uint64] {
  @func_18125() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @main(%var_21668: Tensor[(1, 14, 16), float32]) -> Tensor[(1, 14, 16), float32] {
  %47 = cast(2.52389f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %48 = cast(%var_21668, dtype="float32") /* ty=Tensor[(1, 14, 16), float32] */;
  minimum(%47, %48) /* ty=Tensor[(1, 14, 16), float32] */
}

def @func_3784(%var_3779: Tensor[(5, 13, 6), bool]) -> Tensor[(5, 13, 6), bool] {
  %49 = cast(%var_3779, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %50 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(5, 13, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 13, 6), bool] */, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%51, %52) /* ty=Tensor[(5, 13, 6), bool] */
}

def @func_10108(%var_10099: Tensor[(14, 14, 3), uint64], %var_10100: Tensor[(14, 14, 3), uint64]) -> (Tensor[(14, 14, 3), uint64],) {
  %53 = cast(%var_10100, dtype="uint64") /* ty=Tensor[(14, 14, 3), uint64] */;
  %54 = shape_of(%var_10099, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%var_10099, dtype="uint64") /* ty=Tensor[(14, 14, 3), uint64] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %57 = maximum(%55, %56) /* ty=Tensor[(14, 14, 3), uint64] */;
  (%57,)
}

def @func_15223(%var_15221: Tensor[(196), int64]) -> (Tensor[(4, 2, 1), bool], Tensor[(189), float64], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) {
  @func_15220(%var_15221) /* ty=(Tensor[(4, 2, 1), bool], Tensor[(189), float64], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) */
}

def @func_20457(%var_20455: Tensor[(9, 9, 5), int32], %var_20456: Tensor[(9, 9, 5), int32]) -> (Tensor[(9, 9, 5), int32], Tensor[(9, 9, 5), float64]) {
  %66 = fn (%var_20445: Tensor[(9, 9, 5), int32], %var_20449: Tensor[(9, 9, 5), int32]) -> (Tensor[(9, 9, 5), int32], Tensor[(9, 9, 5), float64]) {
    %58 = cast(-6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %59 = cast(%var_20445, dtype="int32") /* ty=Tensor[(9, 9, 5), int32] */;
    %60 = cast(%var_20449, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
    %61 = shape_of(%var_20445, dtype="int32") /* ty=Tensor[(3), int32] */;
    %62 = cast(%var_20445, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
    %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %64 = minimum(%58, %59) /* ty=Tensor[(9, 9, 5), int32] */;
    %65 = floor_divide(%62, %63) /* ty=Tensor[(9, 9, 5), float64] */;
    (%64, %65)
  };
  %66(%var_20455, %var_20456) /* ty=(Tensor[(9, 9, 5), int32], Tensor[(9, 9, 5), float64]) */
}

def @func_20644(%var_20600: Tensor[(5, 126), float64], %var_20618: Tensor[(1176), float64], %var_20637: Tensor[(10, 78), float64]) -> (Tensor[(7, 3, 9), float64], Tensor[(15, 2, ?), float64], Tensor[(30), float64], Tensor[(672), float32], Tensor[(6, 7, 15), float64], Tensor[(5, 126), float64], Tensor[(240), float64], Tensor[(6, 14, 14), bool], Tensor[(1176), float64], Tensor[(16, 7, 6), bool], Tensor[(10, 78), float64]) {
  %67 = @func_20426() /* ty=(Tensor[(7, 3, 9), float64],) */;
  %68 = cast(meta[relay.Constant][2] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %69 = reshape(%68, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), float64] */;
  %70 = cast(%var_20600, dtype="float64") /* ty=Tensor[(5, 126), float64] */;
  %71 = reshape(%70, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), float64] */;
  %72 = @func_3418(%71) /* ty=(Tensor[(6, 7, 15), float64],) */;
  %73 = @func_17338() /* ty=(Tensor[(240), float64],) */;
  %74 = cast(%var_20618, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %75 = cast(%var_20618, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %76 = reshape(%74, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
  %77 = reshape(%75, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
  %78 = cast(%var_20637, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %79 = cast(%var_20637, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %80 = %73.0;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(240), float64] */;
  %82 = @func_18863() /* ty=Tensor[(672), float32] */;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(672), float32] */;
  %84 = reshape(%78, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), float64] */;
  %85 = reshape(%79, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), float64] */;
  %86 = reshape(%81, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %87 = reshape(%83, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %88 = @func_3391(%84, %85, %86, %87) /* ty=(Tensor[(12, 5, 13), float64], Tensor[(240), float64], Tensor[(594), float32], Tensor[(1, 8, 14), float32], Tensor[(240, 448), int32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(12, 5, 13), float64], Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), bool], Tensor[(224, 2), float64], Tensor[(16, 7, 6), bool], Tensor[(12, 2, 10), float64]) */;
  %89 = %67.0;
  %90 = @func_11658(%69) /* ty=Tensor[(15, 2, ?), float64] */;
  %91 = %72.0;
  %92 = @func_19676(%76, %77) /* ty=Tensor[(6, 14, 14), bool] */;
  %93 = %88.11;
  (%89, %90, meta[relay.Constant][2] /* ty=Tensor[(30), float64] */, %82, %91, %var_20600, %80, %92, %var_20618, %93, %var_20637)
}

def @func_17844() -> (Tensor[(189), float64],) {
  %96 = fn () -> (Tensor[(189), float64],) {
    %94 = @func_13268() /* ty=(Tensor[(189), float64],) */;
    %95 = %94.0;
    (%95,)
  };
  %96() /* ty=(Tensor[(189), float64],) */
}

def @func_1316(%var_1314: Tensor[(1, 16, 5), uint8], %var_1315: Tensor[(12, 16, 5), uint8]) -> Tensor[(12, 16, 5), uint8] {
  %99 = fn (%var_1307: Tensor[(1, 16, 5), uint8], %var_1308: Tensor[(12, 16, 5), uint8]) -> Tensor[(12, 16, 5), uint8] {
    %97 = cast(%var_1307, dtype="uint8") /* ty=Tensor[(1, 16, 5), uint8] */;
    %98 = cast(%var_1308, dtype="uint8") /* ty=Tensor[(12, 16, 5), uint8] */;
    add(%97, %98) /* ty=Tensor[(12, 16, 5), uint8] */
  };
  %99(%var_1314, %var_1315) /* ty=Tensor[(12, 16, 5), uint8] */
}

def @func_9538(%var_9536: Tensor[(7, 3, 9), uint64]) -> (Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) {
  @func_9535(%var_9536) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */
}

def @func_14629(%var_14628: Tensor[(264), float32]) -> (Tensor[(189), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
  %107 = fn (%var_14615: Tensor[(264), float32]) -> (Tensor[(189), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
    %100 = @func_13432() /* ty=(Tensor[(189), float64],) */;
    %101 = cast(%var_14615, dtype="float32") /* ty=Tensor[(264), float32] */;
    %102 = cast(%var_14615, dtype="float32") /* ty=Tensor[(264), float32] */;
    %103 = reshape(%101, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
    %104 = reshape(%102, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
    %105 = %100.0;
    %106 = @func_8378(%103, %104) /* ty=Tensor[(12, 2, 11), float32] */;
    (%105, %106, %var_14615)
  };
  %107(%var_14628) /* ty=(Tensor[(189), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */
}

def @func_3153(%var_3150: Tensor[(1, 13, 11), float64], %var_3151: Tensor[(240), float64], %var_3152: Tensor[(6, 13, 11), float64]) -> (Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(6, 13, 11), float64]) {
  %119 = fn (%var_3122: Tensor[(1, 13, 11), float64], %var_3135: Tensor[(240), float64], %var_3141: Tensor[(6, 13, 11), float64]) -> (Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(6, 13, 11), float64]) {
    %108 = cast(%var_3135, dtype="float64") /* ty=Tensor[(240), float64] */;
    %109 = cast(%var_3135, dtype="float64") /* ty=Tensor[(240), float64] */;
    %110 = reshape(%108, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %111 = reshape(%109, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %112 = @func_88(%110, %111) /* ty=(Tensor[(12, 2, 10), float64],) */;
    %113 = cast(%var_3122, dtype="float64") /* ty=Tensor[(1, 13, 11), float64] */;
    %114 = sqrt(%113) /* ty=Tensor[(1, 13, 11), float64] */;
    %115 = cast(%114, dtype="float64") /* ty=Tensor[(1, 13, 11), float64] */;
    %116 = cast(%var_3141, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
    %117 = %112.0;
    %118 = divide(%115, %116) /* ty=Tensor[(6, 13, 11), float64] */;
    (%117, %var_3135, %118)
  };
  %119(%var_3150, %var_3151, %var_3152) /* ty=(Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(6, 13, 11), float64]) */
}

def @func_14097() -> Tensor[(240), float64] {
  %121 = fn () -> Tensor[(240), float64] {
    %120 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %120.4
  };
  %121() /* ty=Tensor[(240), float64] */
}

def @func_5240(%var_5237: Tensor[(5, 1, 6), float32], %var_5238: Tensor[(5, 16, 6), float32], %var_5239: Tensor[(240), float64]) -> (Tensor[(5, 16, 6), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(420), float64]) {
  @func_5235(%var_5237, %var_5238, %var_5239) /* ty=(Tensor[(5, 16, 6), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(420), float64]) */
}

def @func_18014() -> (Tensor[(14, 14, 3), uint64], Tensor[(15, 2, ?), float64], Tensor[(30), float64]) {
  %122 = cast(meta[relay.Constant][3] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %123 = reshape(%122, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), float64] */;
  %124 = @func_17519() /* ty=Tensor[(14, 14, 3), uint64] */;
  %125 = @func_11658(%123) /* ty=Tensor[(15, 2, ?), float64] */;
  (%124, %125, meta[relay.Constant][3] /* ty=Tensor[(30), float64] */)
}

def @func_18036() -> Tensor[(264), float32] {
  @func_18034() /* ty=Tensor[(264), float32] */
}

def @func_14291() -> (Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) {
  %126 = cast(meta[relay.Constant][4] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %127 = cast(meta[relay.Constant][5] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %128 = reshape(%126, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
  %129 = reshape(%127, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %130 = @func_213(%128, %129) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
  %131 = cast(meta[relay.Constant][6] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %132 = reshape(%131, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
  %133 = @func_1355(%132) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
  %134 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %135 = %130.1;
  %136 = %133.1;
  (%134, %135, meta[relay.Constant][4] /* ty=Tensor[(294), float32] */, meta[relay.Constant][5] /* ty=Tensor[(240), float64] */, %136, meta[relay.Constant][6] /* ty=Tensor[(672), float32] */)
}

def @func_1647(%var_1646: Tensor[(7, 13, 3), float64]) -> Tensor[(7, 13, 3), float64] {
  %138 = fn (%var_1640: Tensor[(7, 13, 3), float64]) -> Tensor[(7, 13, 3), float64] {
    %137 = cast(%var_1640, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
    cos(%137) /* ty=Tensor[(7, 13, 3), float64] */
  };
  %138(%var_1646) /* ty=Tensor[(7, 13, 3), float64] */
}

def @func_18237() -> Tensor[(240), float64] {
  %140 = fn () -> Tensor[(240), float64] {
    %139 = @func_15727() /* ty=(Tensor[(240), float64],) */;
    %139.0
  };
  %140() /* ty=Tensor[(240), float64] */
}

def @func_11250(%var_11247: Tensor[(10, 8, 5), uint32], %var_11248: Tensor[(10, 8, 5), uint32], %var_11249: Tensor[(264), float32]) -> (Tensor[(10, 8, 5), bool], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
  %151 = fn (%var_11233: Tensor[(10, 8, 5), uint32], %var_11234: Tensor[(10, 8, 5), uint32], %var_11243: Tensor[(264), float32]) -> (Tensor[(10, 8, 5), bool], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
    %141 = cast(%var_11234, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
    %142 = shape_of(%var_11233, dtype="int32") /* ty=Tensor[(3), int32] */;
    %143 = cast(%var_11233, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
    %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %145 = cast(%var_11243, dtype="float32") /* ty=Tensor[(264), float32] */;
    %146 = cast(%var_11243, dtype="float32") /* ty=Tensor[(264), float32] */;
    %147 = reshape(%145, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
    %148 = reshape(%146, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
    %149 = greater(%143, %144) /* ty=Tensor[(10, 8, 5), bool] */;
    %150 = @func_8378(%147, %148) /* ty=Tensor[(12, 2, 11), float32] */;
    (%149, %150, %var_11243)
  };
  %151(%var_11247, %var_11248, %var_11249) /* ty=(Tensor[(10, 8, 5), bool], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */
}

def @func_17406() -> (Tensor[(15, 2, ?), float64],) {
  %152 = @func_16247() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %153 = %152.0;
  (%153,)
}

def @func_18090(%var_18064: Tensor[(880), float32]) -> (Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(189), float64]) {
  %154 = @func_14291() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */;
  %155 = cast(%var_18064, dtype="float32") /* ty=Tensor[(880), float32] */;
  %156 = reshape(%155, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %157 = @func_17843() /* ty=(Tensor[(189), float64],) */;
  %158 = %154.3;
  %159 = @func_4967(%156) /* ty=Tensor[(11, 8, 10), float32] */;
  %160 = %157.0;
  (%158, %159, %var_18064, %160)
}

def @func_19083() -> Tensor[(140), int64] {
  %161 = @func_15495() /* ty=(Tensor[(189), float64], Tensor[(140), int64]) */;
  %161.1
}

def @func_213(%var_197: Tensor[(3, 14, 7), float32], %var_207: Tensor[(4, 60), float64]) -> (Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) {
  %162 = cast(%var_197, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
  %163 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %164 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %165 = reshape(%163, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %166 = reshape(%164, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %167 = @func_88(%165, %166) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %168 = cast(%var_207, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %169 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(4, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %170 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 60), float64] */, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %172 = cos(%162) /* ty=Tensor[(3, 14, 7), float32] */;
  %173 = %167.0;
  %174 = equal(%170, %171) /* ty=Tensor[(4, 60), bool] */;
  (%172, %173, %174)
}

def @func_10357(%var_10351: Tensor[(8, 13, 8), int8], %var_10352: Tensor[(8, 13, 8), int8], %var_10353: Tensor[(140), int64], %var_10354: Tensor[(448), float64], %var_10355: Tensor[(480), float32], %var_10356: Tensor[(196), int64]) -> (Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) {
  @func_10349(%var_10351, %var_10352, %var_10353, %var_10354, %var_10355, %var_10356) /* ty=(Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) */
}

def @func_11960(%var_11959: Tensor[(3, 12, 6), float32]) -> (Tensor[(3, 12, 6), float32],) {
  %177 = fn (%var_11955: Tensor[(3, 12, 6), float32]) -> (Tensor[(3, 12, 6), float32],) {
    %175 = cast(%var_11955, dtype="float32") /* ty=Tensor[(3, 12, 6), float32] */;
    %176 = tan(%175) /* ty=Tensor[(3, 12, 6), float32] */;
    (%176,)
  };
  %177(%var_11959) /* ty=(Tensor[(3, 12, 6), float32],) */
}

def @func_16098() -> Tensor[(240), float64] {
  %178 = fn () -> Tensor[(240), float64] {
    @func_14530() /* ty=Tensor[(240), float64] */
  };
  %178() /* ty=Tensor[(240), float64] */
}

def @func_16595() -> Tensor[(672), float32] {
  %179 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %179.0
}

def @func_91(%var_89: Tensor[(12, 2, 10), float64], %var_90: Tensor[(12, 2, 10), float64]) -> (Tensor[(12, 2, 10), float64],) {
  %185 = fn (%var_75: Tensor[(12, 2, 10), float64], %var_76: Tensor[(12, 2, 10), float64]) -> (Tensor[(12, 2, 10), float64],) {
    %180 = cast(%var_76, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
    %181 = shape_of(%var_75, dtype="int32") /* ty=Tensor[(3), int32] */;
    %182 = cast(%var_75, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
    %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %184 = floor_mod(%182, %183) /* ty=Tensor[(12, 2, 10), float64] */;
    (%184,)
  };
  %185(%var_89, %var_90) /* ty=(Tensor[(12, 2, 10), float64],) */
}

def @func_10349(%var_10300: Tensor[(8, 13, 8), int8], %var_10301: Tensor[(8, 13, 8), int8], %var_10307: Tensor[(140), int64], %var_10323: Tensor[(448), float64], %var_10333: Tensor[(480), float32], %var_10339: Tensor[(196), int64]) -> (Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) {
  %186 = cast(%var_10301, dtype="int8") /* ty=Tensor[(8, 13, 8), int8] */;
  %187 = shape_of(%var_10300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_10300, dtype="int8") /* ty=Tensor[(8, 13, 8), int8] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %190 = cast(%var_10307, dtype="int64") /* ty=Tensor[(140), int64] */;
  %191 = cast(%var_10307, dtype="int64") /* ty=Tensor[(140), int64] */;
  %192 = reshape(%190, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %193 = reshape(%191, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
  %194 = cast(meta[relay.Constant][8] /* ty=Tensor[(66, 9), float32] */, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %195 = cast(meta[relay.Constant][8] /* ty=Tensor[(66, 9), float32] */, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %196 = cast(%var_10323, dtype="float64") /* ty=Tensor[(448), float64] */;
  %197 = cast(meta[relay.Constant][9] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %198 = reshape(%194, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %199 = reshape(%195, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %200 = reshape(%196, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
  %201 = reshape(%197, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %202 = @func_2844(%198, %199, %200, %201) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
  %203 = cast(meta[relay.Constant][10] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %204 = cast(%var_10333, dtype="float32") /* ty=Tensor[(480), float32] */;
  %205 = cast(meta[relay.Constant][9] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %206 = reshape(%203, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), float32] */;
  %207 = reshape(%204, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float32] */;
  %208 = reshape(%205, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %209 = @func_5235(%206, %207, %208) /* ty=(Tensor[(5, 16, 6), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(420), float64]) */;
  %210 = cast(%var_10339, dtype="int64") /* ty=Tensor[(196), int64] */;
  %211 = reshape(%210, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), int64] */;
  %212 = @func_7808(%211) /* ty=(Tensor[(7, 14, 2), int64],) */;
  %213 = multiply(%188, %189) /* ty=Tensor[(8, 13, 8), int8] */;
  %214 = @func_10270(%192, %193) /* ty=Tensor[(2, 7, 10), int64] */;
  %215 = %202.2;
  %216 = %209.2;
  %217 = %212.0;
  (%213, %214, %var_10307, %215, meta[relay.Constant][8] /* ty=Tensor[(66, 9), float32] */, %var_10323, meta[relay.Constant][9] /* ty=Tensor[(240), float64] */, %216, meta[relay.Constant][10] /* ty=Tensor[(30), float32] */, %var_10333, %217, %var_10339)
}

def @func_13269() -> (Tensor[(189), float64],) {
  %220 = fn () -> (Tensor[(189), float64],) {
    %218 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
    %219 = %218.1;
    (%219,)
  };
  %220() /* ty=(Tensor[(189), float64],) */
}

def @func_20213(%var_20211: Tensor[(143), float64], %var_20212: Tensor[(2, 120), float64]) -> (Tensor[(16, 2, 16), float64], Tensor[(10, 3), float64], Tensor[(6, 13, 11), float64], Tensor[(143), float64], Tensor[(2, 120), float64], Tensor[(858), float64], Tensor[(3, 14, 14), bool], Tensor[(196), bool], Tensor[(588), bool]) {
  %238 = fn (%var_20190: Tensor[(143), float64], %var_20191: Tensor[(2, 120), float64]) -> (Tensor[(16, 2, 16), float64], Tensor[(10, 3), float64], Tensor[(6, 13, 11), float64], Tensor[(143), float64], Tensor[(2, 120), float64], Tensor[(858), float64], Tensor[(3, 14, 14), bool], Tensor[(196), bool], Tensor[(588), bool]) {
    %221 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %222 = @func_14958() /* ty=(Tensor[(10, 3), float64],) */;
    %223 = cast(%var_20190, dtype="float64") /* ty=Tensor[(143), float64] */;
    %224 = cast(%var_20191, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
    %225 = cast(meta[relay.Constant][11] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
    %226 = reshape(%223, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), float64] */;
    %227 = reshape(%224, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %228 = reshape(%225, newshape=[6, 13, 11]) /* ty=Tensor[(6, 13, 11), float64] */;
    %229 = @func_3149(%226, %227, %228) /* ty=(Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(6, 13, 11), float64]) */;
    %230 = cast(meta[relay.Constant][12] /* ty=Tensor[(196), bool] */, dtype="bool") /* ty=Tensor[(196), bool] */;
    %231 = cast(meta[relay.Constant][13] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
    %232 = reshape(%230, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), bool] */;
    %233 = reshape(%231, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), bool] */;
    %234 = %221.0;
    %235 = %222.0;
    %236 = %229.2;
    %237 = @func_8577(%232, %233) /* ty=Tensor[(3, 14, 14), bool] */;
    (%234, %235, %236, %var_20190, %var_20191, meta[relay.Constant][11] /* ty=Tensor[(858), float64] */, %237, meta[relay.Constant][12] /* ty=Tensor[(196), bool] */, meta[relay.Constant][13] /* ty=Tensor[(588), bool] */)
  };
  %238(%var_20211, %var_20212) /* ty=(Tensor[(16, 2, 16), float64], Tensor[(10, 3), float64], Tensor[(6, 13, 11), float64], Tensor[(143), float64], Tensor[(2, 120), float64], Tensor[(858), float64], Tensor[(3, 14, 14), bool], Tensor[(196), bool], Tensor[(588), bool]) */
}

def @func_13422() -> (Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) {
  @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */
}

def @func_19384() -> Tensor[(14, 14, 3), float32] {
  %240 = fn () -> Tensor[(14, 14, 3), float32] {
    %239 = @func_16697() /* ty=(Tensor[(140), int64], Tensor[(14, 14, 3), float32]) */;
    %239.1
  };
  %240() /* ty=Tensor[(14, 14, 3), float32] */
}

def @func_15321(%var_15320: Tensor[(5, 11, 3), uint8]) -> (Tensor[(5, 11, 3), uint8],) {
  %246 = fn (%var_15311: Tensor[(5, 11, 3), uint8]) -> (Tensor[(5, 11, 3), uint8],) {
    %241 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 11, 3), uint8] */, dtype="uint8") /* ty=Tensor[(5, 11, 3), uint8] */;
    %242 = shape_of(%var_15311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %243 = cast(%var_15311, dtype="uint8") /* ty=Tensor[(5, 11, 3), uint8] */;
    %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %245 = bitwise_and(%243, %244) /* ty=Tensor[(5, 11, 3), uint8] */;
    (%245,)
  };
  %246(%var_15320) /* ty=(Tensor[(5, 11, 3), uint8],) */
}

def @func_19895() -> (Tensor[(588), uint64], Tensor[(15, 2, ?), float64]) {
  %247 = @func_16556() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %248 = @func_18823() /* ty=Tensor[(588), uint64] */;
  %249 = %247.0;
  (%248, %249)
}

def @func_18034() -> Tensor[(264), float32] {
  %250 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %250.2
}

def @func_13226() -> (Tensor[(240), float64],) {
  @func_13224() /* ty=(Tensor[(240), float64],) */
}

def @func_17272() -> (Tensor[(672), float32], Tensor[(630), float64], Tensor[(630), float64], Tensor[(240), float64]) {
  %258 = fn () -> (Tensor[(672), float32], Tensor[(630), float64], Tensor[(630), float64], Tensor[(240), float64]) {
    %251 = @func_17097() /* ty=(Tensor[(672), float32],) */;
    %252 = cast(meta[relay.Constant][15] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %253 = reshape(%252, newshape=[630]) /* ty=Tensor[(630), float64] */;
    %254 = @func_14028(%253) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(6, 7, 15), float64], Tensor[(630), float64]) */;
    %255 = %251.0;
    %256 = %254.2;
    %257 = @func_17063() /* ty=Tensor[(240), float64] */;
    (%255, %256, meta[relay.Constant][15] /* ty=Tensor[(630), float64] */, %257)
  };
  %258() /* ty=(Tensor[(672), float32], Tensor[(630), float64], Tensor[(630), float64], Tensor[(240), float64]) */
}

def @func_13985() -> Tensor[(15, 2, ?), float64] {
  @func_13983() /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_6776(%var_6773: Tensor[(12, 13, 8), float64], %var_6774: Tensor[(390), bool], %var_6775: Tensor[(240), float64]) -> (Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(12, 13, 8), int32], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
  %277 = fn (%var_6730: Tensor[(12, 13, 8), float64], %var_6737: Tensor[(390), bool], %var_6760: Tensor[(240), float64]) -> (Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(12, 13, 8), int32], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
    %259 = cast(%var_6737, dtype="bool") /* ty=Tensor[(390), bool] */;
    %260 = reshape(%259, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
    %261 = cast(%var_6730, dtype="float64") /* ty=Tensor[(12, 13, 8), float64] */;
    %262 = tan(%261) /* ty=Tensor[(12, 13, 8), float64] */;
    %263 = cast(%262, dtype="float64") /* ty=Tensor[(12, 13, 8), float64] */;
    %264 = log10(%263) /* ty=Tensor[(12, 13, 8), float64] */;
    %265 = cast(%262, dtype="int32") /* ty=Tensor[(12, 13, 8), int32] */;
    %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %267 = cast(%264, dtype="int32") /* ty=Tensor[(12, 13, 8), int32] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %269 = cast(%var_6760, dtype="float64") /* ty=Tensor[(240), float64] */;
    %270 = cast(%var_6760, dtype="float64") /* ty=Tensor[(240), float64] */;
    %271 = reshape(%269, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %272 = reshape(%270, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %273 = @func_88(%271, %272) /* ty=(Tensor[(12, 2, 10), float64],) */;
    %274 = @func_3784(%260) /* ty=Tensor[(5, 13, 6), bool] */;
    %275 = left_shift(%267, %268) /* ty=Tensor[(12, 13, 8), int32] */;
    %276 = %273.0;
    (%274, %var_6737, %275, %276, %var_6760)
  };
  %277(%var_6773, %var_6774, %var_6775) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(12, 13, 8), int32], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */
}

def @func_15220(%var_15217: Tensor[(196), int64]) -> (Tensor[(4, 2, 1), bool], Tensor[(189), float64], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) {
  %278 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %279 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 2, 1), bool] */, dtype="bool") /* ty=Tensor[(4, 2, 1), bool] */;
  %280 = cast(%var_15217, dtype="int64") /* ty=Tensor[(196), int64] */;
  %281 = reshape(%280, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), int64] */;
  %282 = @func_7808(%281) /* ty=(Tensor[(7, 14, 2), int64],) */;
  %283 = logical_and(%278, %279) /* ty=Tensor[(4, 2, 1), bool] */;
  %284 = @func_13589() /* ty=Tensor[(189), float64] */;
  %285 = %282.0;
  (%283, %284, %285, %var_15217)
}

def @func_14907(%var_14819: Tensor[(11, 8, 10), float32], %var_14825: Tensor[(88), float64], %var_14826: Tensor[(196), bool], %var_14830: Tensor[(960), uint8], %var_14831: Tensor[(640), uint64], %var_14832: Tensor[(1170, 1), float64], %var_14834: Tensor[(672), float32]) -> (Tensor[(11, 8, 10), int32], Tensor[(12, 16, 5), uint8], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(1170, 1), float64], Tensor[(780), float64], Tensor[(672), float32], Tensor[(1, 240), float64], Tensor[(15, 2, 640), int32], Tensor[(11, 8, 10), float64], Tensor[(7, 3, 9), float32], Tensor[(84), uint8]) {
  %286 = @func_14491() /* ty=(Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */;
  %287 = %286.1;
  %288 = cast(%var_14819, dtype="int32") /* ty=Tensor[(11, 8, 10), int32] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%287, dtype="int32") /* ty=Tensor[(11, 8, 10), int32] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %292 = cast(%var_14825, dtype="float64") /* ty=Tensor[(88), float64] */;
  %293 = cast(%var_14826, dtype="bool") /* ty=Tensor[(196), bool] */;
  %294 = cast(meta[relay.Constant][17] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %295 = cast(meta[relay.Constant][18] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %296 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %297 = cast(%var_14830, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %298 = cast(%var_14831, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %299 = cast(%var_14832, dtype="float64") /* ty=Tensor[(1170, 1), float64] */;
  %300 = cast(meta[relay.Constant][20] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %301 = cast(%var_14834, dtype="float32") /* ty=Tensor[(672), float32] */;
  %302 = reshape(%292, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float64] */;
  %303 = reshape(%293, newshape=[1, 196]) /* ty=Tensor[(1, 196), bool] */;
  %304 = reshape(%294, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %305 = reshape(%295, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %306 = reshape(%296, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %307 = reshape(%297, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint8] */;
  %308 = reshape(%298, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %309 = reshape(%299, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %310 = reshape(%300, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %311 = reshape(%301, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %312 = @func_10515(%302, %303, %304, %305, %306, %307, %308, %309, %310, %311) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */;
  %313 = cast(%var_14825, dtype="float64") /* ty=Tensor[(88), float64] */;
  %314 = cast(%var_14826, dtype="bool") /* ty=Tensor[(196), bool] */;
  %315 = cast(meta[relay.Constant][17] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %316 = cast(meta[relay.Constant][18] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %317 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %318 = %312.7;
  %319 = cast(%318, dtype="uint8") /* ty=Tensor[(12, 16, 5), uint8] */;
  %320 = cast(%var_14831, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %321 = cast(%var_14832, dtype="float64") /* ty=Tensor[(1170, 1), float64] */;
  %322 = cast(meta[relay.Constant][20] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %323 = cast(%var_14834, dtype="float32") /* ty=Tensor[(672), float32] */;
  %324 = reshape(%313, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float64] */;
  %325 = reshape(%314, newshape=[1, 196]) /* ty=Tensor[(1, 196), bool] */;
  %326 = reshape(%315, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %327 = reshape(%316, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %328 = reshape(%317, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %329 = reshape(%319, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint8] */;
  %330 = reshape(%320, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %331 = reshape(%321, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %332 = reshape(%322, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %333 = reshape(%323, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %334 = @func_10515(%324, %325, %326, %327, %328, %329, %330, %331, %332, %333) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */;
  %335 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %336 = %335.3;
  %337 = cast(%var_14831, dtype="int32") /* ty=Tensor[(640), int32] */;
  %338 = cast(%336, dtype="int32") /* ty=Tensor[(15, 2, ?), int32] */;
  %339 = cast(%287, dtype="float64") /* ty=Tensor[(11, 8, 10), float64] */;
  %340 = cast(meta[relay.Constant][21] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %341 = subtract(%290, %291) /* ty=Tensor[(11, 8, 10), int32] */;
  %342 = cast(%341, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  %343 = reshape(%340, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), uint8] */;
  %344 = reshape(%342, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %345 = @func_9707(%343, %344) /* ty=(Tensor[(14, 2, 3), uint8], Tensor[(7, 3, 9), float32], Tensor[(21, 9), uint64], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */;
  %346 = %334.6;
  %347 = add(%337, %338) /* ty=Tensor[(15, 2, 640), int32] */;
  %348 = sqrt(%339) /* ty=Tensor[(11, 8, 10), float64] */;
  %349 = %345.1;
  (%341, %318, %var_14825, %var_14826, meta[relay.Constant][17] /* ty=Tensor[(588), bool] */, meta[relay.Constant][18] /* ty=Tensor[(240), float64] */, meta[relay.Constant][19] /* ty=Tensor[(80), uint8] */, %var_14830, %var_14832, meta[relay.Constant][20] /* ty=Tensor[(780), float64] */, %var_14834, %346, %347, %348, %349, meta[relay.Constant][21] /* ty=Tensor[(84), uint8] */)
}

def @func_14082(%var_14077: Tensor[(294), float32]) -> (Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64]) {
  %350 = @func_13268() /* ty=(Tensor[(189), float64],) */;
  %351 = cast(%var_14077, dtype="float32") /* ty=Tensor[(294), float32] */;
  %352 = cast(meta[relay.Constant][22] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %353 = reshape(%351, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
  %354 = reshape(%352, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %355 = @func_213(%353, %354) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
  %356 = %350.0;
  %357 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %358 = %355.1;
  (%356, %357, %358, %var_14077, meta[relay.Constant][22] /* ty=Tensor[(240), float64] */)
}

def @func_18423(%var_18410: Tensor[(80), uint8], %var_18411: Tensor[(20, 48), uint8], %var_18415: Tensor[(88), float64], %var_18417: Tensor[(390, 30), float64]) -> (Tensor[(11, 9, 12), uint64], Tensor[(14, 14, 3), uint64], Tensor[(264), float32], Tensor[(15, 2, ?), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(20, 48), uint8], Tensor[(44, 2), float64], Tensor[(88), float64], Tensor[(196), bool], Tensor[(390, 30), float64]) {
  %359 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 9, 12), uint64] */, dtype="uint64") /* ty=Tensor[(11, 9, 12), uint64] */;
  %360 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(11, 9, 12), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 9, 12), uint64] */, dtype="uint64") /* ty=Tensor[(11, 9, 12), uint64] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %363 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
  %364 = @func_17830() /* ty=(Tensor[(672), float32], Tensor[(15, 2, ?), float64]) */;
  %365 = cast(%var_18410, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %366 = cast(%var_18411, dtype="uint8") /* ty=Tensor[(20, 48), uint8] */;
  %367 = reshape(%365, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
  %368 = reshape(%366, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), uint8] */;
  %369 = cast(%var_18415, dtype="float64") /* ty=Tensor[(88), float64] */;
  %370 = cast(meta[relay.Constant][25] /* ty=Tensor[(196), bool] */, dtype="bool") /* ty=Tensor[(196), bool] */;
  %371 = @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */;
  %372 = cast(%371, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %373 = cast(%var_18410, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %374 = cast(%var_18417, dtype="float64") /* ty=Tensor[(390, 30), float64] */;
  %375 = reshape(%369, newshape=[44, 2]) /* ty=Tensor[(44, 2), float64] */;
  %376 = reshape(%370, newshape=[196]) /* ty=Tensor[(196), bool] */;
  %377 = reshape(%372, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %378 = reshape(%373, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %379 = reshape(%374, newshape=[1170, 10]) /* ty=Tensor[(1170, 10), float64] */;
  %380 = @func_14672(%375, %376, %377, %378, %379) /* ty=(Tensor[(240), float64], Tensor[(390), bool], Tensor[(44, 2), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(264), float32], Tensor[(1170, 10), bool], Tensor[(7, 3, 9), float32]) */;
  %381 = bitwise_and(%361, %362) /* ty=Tensor[(11, 9, 12), uint64] */;
  %382 = %363.2;
  %383 = %364.1;
  %384 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %385 = @func_1313(%367, %368) /* ty=Tensor[(12, 16, 5), uint8] */;
  %386 = %380.2;
  (%381, %371, %382, %383, %384, %385, %var_18410, %var_18411, %386, %var_18415, meta[relay.Constant][25] /* ty=Tensor[(196), bool] */, %var_18417)
}

def @func_4521(%var_4510: Tensor[(8, 10, 8), uint64], %var_4511: Tensor[(8, 10, 8), uint64]) -> (Tensor[(8, 10, 8), bool],) {
  %387 = cast(%var_4511, dtype="bool") /* ty=Tensor[(8, 10, 8), bool] */;
  %388 = shape_of(%var_4510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_4510, dtype="bool") /* ty=Tensor[(8, 10, 8), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %391 = not_equal(%389, %390) /* ty=Tensor[(8, 10, 8), bool] */;
  (%391,)
}

def @func_12661() -> (Tensor[(7, 3, 9), float32], Tensor[(189), float64]) {
  %400 = fn () -> (Tensor[(7, 3, 9), float32], Tensor[(189), float64]) {
    %392 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %393 = %392.2;
    %394 = cast(%393, dtype="uint64") /* ty=Tensor[(189), uint64] */;
    %395 = reshape(%394, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
    %396 = @func_9535(%395) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
    %397 = cast(%393, dtype="float64") /* ty=Tensor[(189), float64] */;
    %398 = %396.1;
    %399 = atanh(%397) /* ty=Tensor[(189), float64] */;
    (%398, %399)
  };
  %400() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */
}

def @func_15497() -> (Tensor[(189), float64], Tensor[(140), int64]) {
  @func_15495() /* ty=(Tensor[(189), float64], Tensor[(140), int64]) */
}

def @func_15254() -> (Tensor[(672), float32],) {
  %403 = fn () -> (Tensor[(672), float32],) {
    %401 = @func_14291() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */;
    %402 = %401.5;
    (%402,)
  };
  %403() /* ty=(Tensor[(672), float32],) */
}

def @func_18695() -> (Tensor[(14, 14, 3), uint64], Tensor[(7, 13, 3), int32]) {
  @func_18693() /* ty=(Tensor[(14, 14, 3), uint64], Tensor[(7, 13, 3), int32]) */
}

def @func_18863() -> Tensor[(672), float32] {
  %404 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %404.0
}

def @func_7434(%var_7431: Tensor[(16, 6, 14), int64], %var_7432: Tensor[(16, 6, 14), int64], %var_7433: Tensor[(240), float64]) -> (Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) {
  @func_7429(%var_7431, %var_7432, %var_7433) /* ty=(Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) */
}

def @func_18865() -> Tensor[(672), float32] {
  @func_18863() /* ty=Tensor[(672), float32] */
}

def @func_18016() -> (Tensor[(14, 14, 3), uint64], Tensor[(15, 2, ?), float64], Tensor[(30), float64]) {
  @func_18014() /* ty=(Tensor[(14, 14, 3), uint64], Tensor[(15, 2, ?), float64], Tensor[(30), float64]) */
}

def @func_18754() -> (Tensor[(15, 2, ?), float64],) {
  %407 = fn () -> (Tensor[(15, 2, ?), float64],) {
    %405 = @func_17406() /* ty=(Tensor[(15, 2, ?), float64],) */;
    %406 = %405.0;
    (%406,)
  };
  %407() /* ty=(Tensor[(15, 2, ?), float64],) */
}

def @func_20926() -> (Tensor[(240), float64], Tensor[(264), float32]) {
  %412 = fn () -> (Tensor[(240), float64], Tensor[(264), float32]) {
    %408 = @func_13461() /* ty=(Tensor[(240), float64],) */;
    %409 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
    %410 = %408.0;
    %411 = %409.2;
    (%410, %411)
  };
  %412() /* ty=(Tensor[(240), float64], Tensor[(264), float32]) */
}

def @func_18791() -> Tensor[(264), float32] {
  @func_18034() /* ty=Tensor[(264), float32] */
}

def @func_13461() -> (Tensor[(240), float64],) {
  %413 = @func_12846() /* ty=Tensor[(240), float64] */;
  (%413,)
}

def @func_12848() -> Tensor[(240), float64] {
  @func_12846() /* ty=Tensor[(240), float64] */
}

def @func_19617(%var_19614: Tensor[(13, 21), float64], %var_19615: Tensor[(135), int8], %var_19616: Tensor[(1248), float64]) -> (Tensor[(240), float64], Tensor[(189), uint64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64], Tensor[(16, 2, 16), float64], Tensor[(135), int8], Tensor[(880), float32], Tensor[(1248), float64]) {
  @func_19612(%var_19614, %var_19615, %var_19616) /* ty=(Tensor[(240), float64], Tensor[(189), uint64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64], Tensor[(16, 2, 16), float64], Tensor[(135), int8], Tensor[(880), float32], Tensor[(1248), float64]) */
}

def @func_367(%var_366: Tensor[(240), float64]) -> (Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) {
  %428 = fn (%var_356: Tensor[(240), float64]) -> (Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) {
    %414 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 14), float32] */;
    %415 = cast(meta[relay.Constant][27] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
    %416 = cast(%var_356, dtype="float64") /* ty=Tensor[(240), float64] */;
    %417 = reshape(%415, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
    %418 = reshape(%416, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
    %419 = @func_213(%417, %418) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
    %420 = cast(%var_356, dtype="float64") /* ty=Tensor[(240), float64] */;
    %421 = cast(%var_356, dtype="float64") /* ty=Tensor[(240), float64] */;
    %422 = reshape(%420, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %423 = reshape(%421, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %424 = @func_88(%422, %423) /* ty=(Tensor[(12, 2, 10), float64],) */;
    %425 = sin(%414) /* ty=Tensor[(1, 8, 14), float32] */;
    %426 = %419.0;
    %427 = %424.0;
    (%425, %426, meta[relay.Constant][27] /* ty=Tensor[(294), float32] */, %var_356, %427)
  };
  %428(%var_366) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */
}

def @func_12796(%var_12792: Tensor[(832), int8], %var_12793: Tensor[(140), int64], %var_12794: Tensor[(196), int64], %var_12795: Tensor[(1, 800), float32]) -> (Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(240, 2), float32], Tensor[(196), int64], Tensor[(14, 14, 3), uint64], Tensor[(14, 42), uint64], Tensor[(10, 10, 8), float32], Tensor[(1, 135), int8], Tensor[(7, 14, 2), int64], Tensor[(1, 800), float32]) {
  @func_12790(%var_12792, %var_12793, %var_12794, %var_12795) /* ty=(Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(240, 2), float32], Tensor[(196), int64], Tensor[(14, 14, 3), uint64], Tensor[(14, 42), uint64], Tensor[(10, 10, 8), float32], Tensor[(1, 135), int8], Tensor[(7, 14, 2), int64], Tensor[(1, 800), float32]) */
}

def @func_235(%var_233: Tensor[(8, 4, 14), float64], %var_234: Tensor[(240), float64]) -> (Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
  @func_231(%var_233, %var_234) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */
}

def @func_9535(%var_9514: Tensor[(7, 3, 9), uint64]) -> (Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) {
  %429 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 3, 9), uint64] */, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %430 = shape_of(%var_9514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_9514, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %433 = cast(%var_9514, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %434 = left_shift(%431, %432) /* ty=Tensor[(7, 3, 9), uint64] */;
  %435 = rsqrt(%433) /* ty=Tensor[(7, 3, 9), float32] */;
  (%434, %435)
}

def @func_14135() -> (Tensor[(189), float64],) {
  @func_14133() /* ty=(Tensor[(189), float64],) */
}

def @func_20320() -> (Tensor[(588), uint64], Tensor[(13, 15, 6), float64], Tensor[(130, 9), float64], Tensor[(240), float64]) {
  %441 = fn () -> (Tensor[(588), uint64], Tensor[(13, 15, 6), float64], Tensor[(130, 9), float64], Tensor[(240), float64]) {
    %436 = cast(meta[relay.Constant][29] /* ty=Tensor[(130, 9), float64] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %437 = reshape(%436, newshape=[13, 15, 6]) /* ty=Tensor[(13, 15, 6), float64] */;
    %438 = @func_18823() /* ty=Tensor[(588), uint64] */;
    %439 = @func_6189(%437) /* ty=Tensor[(13, 15, 6), float64] */;
    %440 = @func_14530() /* ty=Tensor[(240), float64] */;
    (%438, %439, meta[relay.Constant][29] /* ty=Tensor[(130, 9), float64] */, %440)
  };
  %441() /* ty=(Tensor[(588), uint64], Tensor[(13, 15, 6), float64], Tensor[(130, 9), float64], Tensor[(240), float64]) */
}

def @func_15688() -> (Tensor[(240), float64], Tensor[(588), uint64]) {
  @func_15686() /* ty=(Tensor[(240), float64], Tensor[(588), uint64]) */
}

def @func_19612(%var_19558: Tensor[(13, 21), float64], %var_19588: Tensor[(135), int8], %var_19590: Tensor[(1248), float64]) -> (Tensor[(240), float64], Tensor[(189), uint64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64], Tensor[(16, 2, 16), float64], Tensor[(135), int8], Tensor[(880), float32], Tensor[(1248), float64]) {
  %442 = @func_15325() /* ty=(Tensor[(189), uint64],) */;
  %443 = cast(%var_19558, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %444 = reshape(%443, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %445 = cast(%var_19588, dtype="int8") /* ty=Tensor[(135), int8] */;
  %446 = cast(meta[relay.Constant][30] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %447 = @func_14096() /* ty=Tensor[(240), float64] */;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(240), float64] */;
  %449 = cast(%var_19590, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %450 = reshape(%445, newshape=[135]) /* ty=Tensor[(135), int8] */;
  %451 = reshape(%446, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %452 = reshape(%448, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %453 = reshape(%449, newshape=[1248]) /* ty=Tensor[(1248), float64] */;
  %454 = @func_13372(%450, %451, %452, %453) /* ty=(Tensor[(16, 2, 16), float64], Tensor[(3, 9, 5), int8], Tensor[(135), int8], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(1, 390), bool], Tensor[(240), float64], Tensor[(1248), float64]) */;
  %455 = %442.0;
  %456 = @func_1645(%444) /* ty=Tensor[(7, 13, 3), float64] */;
  %457 = %454.0;
  (%447, %455, %456, %var_19558, %457, %var_19588, meta[relay.Constant][30] /* ty=Tensor[(880), float32] */, %var_19590)
}

def @func_16597() -> Tensor[(672), float32] {
  @func_16595() /* ty=Tensor[(672), float32] */
}

def @func_16697() -> (Tensor[(140), int64], Tensor[(14, 14, 3), float32]) {
  %458 = @func_16217() /* ty=(Tensor[(140), int64],) */;
  %459 = @func_15003() /* ty=(Tensor[(14, 14, 3), uint64],) */;
  %460 = %459.0;
  %461 = cast(%460, dtype="float32") /* ty=Tensor[(14, 14, 3), float32] */;
  %462 = %458.0;
  %463 = rsqrt(%461) /* ty=Tensor[(14, 14, 3), float32] */;
  (%462, %463)
}

def @func_19855() -> (Tensor[(240), float64],) {
  %466 = fn () -> (Tensor[(240), float64],) {
    %464 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %465 = %464.4;
    (%465,)
  };
  %466() /* ty=(Tensor[(240), float64],) */
}

def @func_5235(%var_5190: Tensor[(5, 1, 6), float32], %var_5191: Tensor[(5, 16, 6), float32], %var_5210: Tensor[(240), float64]) -> (Tensor[(5, 16, 6), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(420), float64]) {
  %467 = cast(%var_5190, dtype="float32") /* ty=Tensor[(5, 1, 6), float32] */;
  %468 = cast(%var_5191, dtype="float32") /* ty=Tensor[(5, 16, 6), float32] */;
  %469 = floor_divide(%467, %468) /* ty=Tensor[(5, 16, 6), float32] */;
  %470 = cast(%469, dtype="float32") /* ty=Tensor[(5, 16, 6), float32] */;
  %471 = cast(%var_5210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %472 = cast(%var_5210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %473 = reshape(%471, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %474 = reshape(%472, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %475 = @func_88(%473, %474) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %476 = cast(meta[relay.Constant][31] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %477 = cast(%var_5210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %478 = reshape(%476, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), float64] */;
  %479 = reshape(%477, newshape=[8, 30]) /* ty=Tensor[(8, 30), float64] */;
  %480 = @func_2519(%478, %479) /* ty=(Tensor[(5, 6, 14), float32], Tensor[(12, 2, 10), float64], Tensor[(8, 30), float64], Tensor[(12, 2, 10), float64], Tensor[(448), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */;
  %481 = acos(%470) /* ty=Tensor[(5, 16, 6), float32] */;
  %482 = %475.0;
  %483 = %480.5;
  (%481, %482, %var_5210, %483, meta[relay.Constant][31] /* ty=Tensor[(420), float64] */)
}

def @func_19676(%var_19631: Tensor[(6, 14, 14), float64], %var_19659: Tensor[(6, 14, 14), float64]) -> Tensor[(6, 14, 14), bool] {
  %484 = cast(%var_19631, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
  %485 = log2(%484) /* ty=Tensor[(6, 14, 14), float64] */;
  %486 = cast(%485, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
  %487 = rsqrt(%486) /* ty=Tensor[(6, 14, 14), float64] */;
  %488 = cast(%var_19659, dtype="bool") /* ty=Tensor[(6, 14, 14), bool] */;
  %489 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%487, dtype="bool") /* ty=Tensor[(6, 14, 14), bool] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%490, %491) /* ty=Tensor[(6, 14, 14), bool] */
}

def @func_1358(%var_1356: Tensor[(16, 7, 6), float32]) -> (Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) {
  @func_1355(%var_1356) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */
}

def @func_3420(%var_3419: Tensor[(6, 7, 15), float64]) -> (Tensor[(6, 7, 15), float64],) {
  %494 = fn (%var_3405: Tensor[(6, 7, 15), float64]) -> (Tensor[(6, 7, 15), float64],) {
    %492 = cast(%var_3405, dtype="float64") /* ty=Tensor[(6, 7, 15), float64] */;
    %493 = log(%492) /* ty=Tensor[(6, 7, 15), float64] */;
    (%493,)
  };
  %494(%var_3419) /* ty=(Tensor[(6, 7, 15), float64],) */
}

def @func_13518() -> (Tensor[(189), uint64], Tensor[(240), float32], Tensor[(189), float64]) {
  %495 = @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */;
  %496 = @func_13461() /* ty=(Tensor[(240), float64],) */;
  %497 = %496.0;
  %498 = cast(meta[relay.Constant][32] /* ty=Tensor[(240), float64] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(1), int32] */;
  %500 = cast(%497, dtype="float32") /* ty=Tensor[(240), float32] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?), float32] */;
  %502 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %503 = %495.0;
  %504 = floor_mod(%500, %501) /* ty=Tensor[(240), float32] */;
  %505 = %502.1;
  (%503, %504, %505)
}

def @func_19897() -> (Tensor[(588), uint64], Tensor[(15, 2, ?), float64]) {
  @func_19895() /* ty=(Tensor[(588), uint64], Tensor[(15, 2, ?), float64]) */
}

def @func_19486() -> Tensor[(240), float64] {
  @func_16943() /* ty=Tensor[(240), float64] */
}

def @func_15005() -> (Tensor[(14, 14, 3), uint64],) {
  @func_15003() /* ty=(Tensor[(14, 14, 3), uint64],) */
}

def @func_20428() -> (Tensor[(7, 3, 9), float64],) {
  @func_20426() /* ty=(Tensor[(7, 3, 9), float64],) */
}

def @func_15729() -> (Tensor[(240), float64],) {
  @func_15727() /* ty=(Tensor[(240), float64],) */
}

def @func_14916(%var_14909: Tensor[(11, 8, 10), float32], %var_14910: Tensor[(88), float64], %var_14911: Tensor[(196), bool], %var_14912: Tensor[(960), uint8], %var_14913: Tensor[(640), uint64], %var_14914: Tensor[(1170, 1), float64], %var_14915: Tensor[(672), float32]) -> (Tensor[(11, 8, 10), int32], Tensor[(12, 16, 5), uint8], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(1170, 1), float64], Tensor[(780), float64], Tensor[(672), float32], Tensor[(1, 240), float64], Tensor[(15, 2, 640), int32], Tensor[(11, 8, 10), float64], Tensor[(7, 3, 9), float32], Tensor[(84), uint8]) {
  @func_14907(%var_14909, %var_14910, %var_14911, %var_14912, %var_14913, %var_14914, %var_14915) /* ty=(Tensor[(11, 8, 10), int32], Tensor[(12, 16, 5), uint8], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(1170, 1), float64], Tensor[(780), float64], Tensor[(672), float32], Tensor[(1, 240), float64], Tensor[(15, 2, 640), int32], Tensor[(11, 8, 10), float64], Tensor[(7, 3, 9), float32], Tensor[(84), uint8]) */
}

def @func_9710(%var_9708: Tensor[(14, 2, 3), uint8], %var_9709: Tensor[(880), float32]) -> (Tensor[(14, 2, 3), uint8], Tensor[(7, 3, 9), float32], Tensor[(21, 9), uint64], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
  %522 = fn (%var_9681: Tensor[(14, 2, 3), uint8], %var_9704: Tensor[(880), float32]) -> (Tensor[(14, 2, 3), uint8], Tensor[(7, 3, 9), float32], Tensor[(21, 9), uint64], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
    %506 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 2, 3), uint8] */, dtype="uint8") /* ty=Tensor[(14, 2, 3), uint8] */;
    %507 = shape_of(%var_9681, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%var_9681, dtype="uint8") /* ty=Tensor[(14, 2, 3), uint8] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %510 = cast(meta[relay.Constant][34] /* ty=Tensor[(21, 9), uint64] */, dtype="uint64") /* ty=Tensor[(21, 9), uint64] */;
    %511 = reshape(%510, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
    %512 = @func_9535(%511) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
    %513 = %512.1;
    %514 = cast(%513, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
    %515 = reshape(%514, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
    %516 = @func_9535(%515) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
    %517 = cast(%var_9704, dtype="float32") /* ty=Tensor[(880), float32] */;
    %518 = reshape(%517, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
    %519 = bitwise_and(%508, %509) /* ty=Tensor[(14, 2, 3), uint8] */;
    %520 = %516.0;
    %521 = @func_4967(%518) /* ty=Tensor[(11, 8, 10), float32] */;
    (%519, %513, meta[relay.Constant][34] /* ty=Tensor[(21, 9), uint64] */, %520, %521, %var_9704)
  };
  %522(%var_9708, %var_9709) /* ty=(Tensor[(14, 2, 3), uint8], Tensor[(7, 3, 9), float32], Tensor[(21, 9), uint64], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */
}

def @func_14085(%var_14083: Tensor[(294), float32]) -> (Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64]) {
  @func_14082(%var_14083) /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64]) */
}

def @func_19345() -> (Tensor[(14, 14, 3), uint64],) {
  @func_19343() /* ty=(Tensor[(14, 14, 3), uint64],) */
}

def @func_13970() -> (Tensor[(189), float64],) {
  %523 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %524 = %523.0;
  (%524,)
}

def @func_15003() -> (Tensor[(14, 14, 3), uint64],) {
  %525 = @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */;
  (%525,)
}

def @func_12587() -> (Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
  %538 = fn () -> (Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
    %526 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 2, 16), float64] */;
    %527 = cast(meta[relay.Constant][36] /* ty=Tensor[(189), uint64] */, dtype="uint64") /* ty=Tensor[(189), uint64] */;
    %528 = reshape(%527, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
    %529 = @func_9535(%528) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
    %530 = cast(meta[relay.Constant][37] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %531 = cast(meta[relay.Constant][37] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %532 = reshape(%530, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %533 = reshape(%531, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %534 = @func_88(%532, %533) /* ty=(Tensor[(12, 2, 10), float64],) */;
    %535 = sigmoid(%526) /* ty=Tensor[(16, 2, 16), float64] */;
    %536 = %529.0;
    %537 = %534.0;
    (%535, %536, meta[relay.Constant][36] /* ty=Tensor[(189), uint64] */, %537, meta[relay.Constant][37] /* ty=Tensor[(240), float64] */)
  };
  %538() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */
}

def @func_18793() -> Tensor[(264), float32] {
  @func_18791() /* ty=Tensor[(264), float32] */
}

def @func_17321() -> (Tensor[(7, 3, 9), float32],) {
  @func_17319() /* ty=(Tensor[(7, 3, 9), float32],) */
}

def @func_19343() -> (Tensor[(14, 14, 3), uint64],) {
  %539 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %540 = %539.2;
  (%540,)
}

def @func_20857() -> (Tensor[(10, 3), float64], Tensor[(189), float64]) {
  %541 = @func_14958() /* ty=(Tensor[(10, 3), float64],) */;
  %542 = %541.0;
  %543 = @func_14566() /* ty=Tensor[(189), float64] */;
  (%542, %543)
}

def @func_21663() -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(264), float32]) {
  %550 = fn () -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(264), float32]) {
    %544 = @func_20319() /* ty=(Tensor[(588), uint64], Tensor[(13, 15, 6), float64], Tensor[(130, 9), float64], Tensor[(240), float64]) */;
    %545 = @func_19854() /* ty=(Tensor[(240), float64],) */;
    %546 = @func_20170() /* ty=(Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(15, 2, 672), float32]) */;
    %547 = %544.3;
    %548 = %545.0;
    %549 = %546.1;
    (%547, %548, %549)
  };
  %550() /* ty=(Tensor[(240), float64], Tensor[(240), float64], Tensor[(264), float32]) */
}

def @func_20170() -> (Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(15, 2, 672), float32]) {
  %551 = cast(meta[relay.Constant][38] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %552 = reshape(%551, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %553 = @func_14627(%552) /* ty=(Tensor[(189), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */;
  %554 = @func_18863() /* ty=Tensor[(672), float32] */;
  %555 = @func_17370() /* ty=Tensor[(15, 2, ?), float64] */;
  %556 = cast(%554, dtype="float32") /* ty=Tensor[(672), float32] */;
  %557 = cast(%555, dtype="float32") /* ty=Tensor[(15, 2, ?), float32] */;
  %558 = %553.1;
  %559 = mod(%556, %557) /* ty=Tensor[(15, 2, 672), float32] */;
  (%558, meta[relay.Constant][38] /* ty=Tensor[(264), float32] */, %559)
}

def @func_13420() -> (Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) {
  %560 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %561 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %562 = reshape(%561, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), float64] */;
  %563 = %560.2;
  %564 = @func_11658(%562) /* ty=Tensor[(15, 2, ?), float64] */;
  (%563, %564, meta[relay.Constant][39] /* ty=Tensor[(10, 3), float64] */)
}

def @func_18997() -> Tensor[(15, 2, ?), float64] {
  %566 = fn () -> Tensor[(15, 2, ?), float64] {
    %565 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
    %565.3
  };
  %566() /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_21144(%var_21141: Tensor[(880), float32], %var_21142: Tensor[(2, 120), float64], %var_21143: Tensor[(4, 60), uint32]) -> (Tensor[(672), float32], Tensor[(14, 14, 3), float32], Tensor[(880), float32], Tensor[(294), float32], Tensor[(15, 2, 880), uint32], Tensor[(15, 2, ?), float64], Tensor[(189), float64], Tensor[(4, 60), float32], Tensor[(4, 60), float64], Tensor[(5, 11, 3), uint8], Tensor[(165), uint8]) {
  @func_21139(%var_21141, %var_21142, %var_21143) /* ty=(Tensor[(672), float32], Tensor[(14, 14, 3), float32], Tensor[(880), float32], Tensor[(294), float32], Tensor[(15, 2, 880), uint32], Tensor[(15, 2, ?), float64], Tensor[(189), float64], Tensor[(4, 60), float32], Tensor[(4, 60), float64], Tensor[(5, 11, 3), uint8], Tensor[(165), uint8]) */
}

def @func_17951() -> (Tensor[(240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(960), uint8]) {
  %574 = fn () -> (Tensor[(240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(960), uint8]) {
    %567 = @func_17338() /* ty=(Tensor[(240), float64],) */;
    %568 = cast(meta[relay.Constant][40] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
    %569 = cast(meta[relay.Constant][41] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %570 = reshape(%568, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
    %571 = reshape(%569, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), uint8] */;
    %572 = %567.0;
    %573 = @func_1313(%570, %571) /* ty=Tensor[(12, 16, 5), uint8] */;
    (%572, %573, meta[relay.Constant][40] /* ty=Tensor[(80), uint8] */, meta[relay.Constant][41] /* ty=Tensor[(960), uint8] */)
  };
  %574() /* ty=(Tensor[(240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(960), uint8]) */
}

def @func_14478() -> Tensor[(189), float64] {
  @func_14476() /* ty=Tensor[(189), float64] */
}

def @func_13972() -> (Tensor[(189), float64],) {
  @func_13970() /* ty=(Tensor[(189), float64],) */
}

def @func_4970(%var_4968: Tensor[(11, 8, 10), float32]) -> Tensor[(11, 8, 10), float32] {
  @func_4967(%var_4968) /* ty=Tensor[(11, 8, 10), float32] */
}

def @func_12846() -> Tensor[(240), float64] {
  %575 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %575.4
}

def @func_16510(%var_16401: Tensor[(88), float64], %var_16402: Tensor[(49, 4), bool], %var_16405: Tensor[(960), uint8], %var_16406: Tensor[(1, 1170), float64], %var_16486: Tensor[(756), float64]) -> (Tensor[(10, 3), float64], Tensor[(240), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(1170), float64], Tensor[(88), float64], Tensor[(49, 4), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(7, 3, 9), float32], Tensor[(189), uint64], Tensor[(264), float32], Tensor[(40, 10), uint32], Tensor[(390), bool], Tensor[(756), float64], Tensor[(1, 1170), float64]) {
  %576 = @func_14958() /* ty=(Tensor[(10, 3), float64],) */;
  %577 = cast(meta[relay.Constant][42] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %578 = reshape(%577, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %579 = @func_14627(%578) /* ty=(Tensor[(189), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */;
  %580 = cast(%var_16401, dtype="float64") /* ty=Tensor[(88), float64] */;
  %581 = cast(%var_16402, dtype="bool") /* ty=Tensor[(49, 4), bool] */;
  %582 = cast(meta[relay.Constant][43] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %583 = cast(meta[relay.Constant][44] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %584 = cast(%var_16405, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %585 = cast(%var_16406, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %586 = %579.1;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(12, 2, 11), float32] */;
  %588 = reshape(%580, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %589 = reshape(%581, newshape=[196]) /* ty=Tensor[(196), bool] */;
  %590 = reshape(%582, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %591 = reshape(%583, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint8] */;
  %592 = reshape(%584, newshape=[960]) /* ty=Tensor[(960), uint8] */;
  %593 = reshape(%585, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %594 = reshape(%587, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %595 = @func_13017(%588, %589, %590, %591, %592, %593, %594) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(1, 196), bool], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(960), uint8], Tensor[(20, 32), uint64], Tensor[(1170), float64], Tensor[(672), float32], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(80, 780), bool], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) */;
  %596 = cast(meta[relay.Constant][45] /* ty=Tensor[(189), uint64] */, dtype="uint64") /* ty=Tensor[(189), uint64] */;
  %597 = reshape(%596, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint64] */;
  %598 = @func_9535(%597) /* ty=(Tensor[(7, 3, 9), uint64], Tensor[(7, 3, 9), float32]) */;
  %599 = cast(meta[relay.Constant][46] /* ty=Tensor[(40, 10), uint32] */, dtype="uint32") /* ty=Tensor[(40, 10), uint32] */;
  %600 = cast(meta[relay.Constant][46] /* ty=Tensor[(40, 10), uint32] */, dtype="uint32") /* ty=Tensor[(40, 10), uint32] */;
  %601 = cast(%586, dtype="float32") /* ty=Tensor[(12, 2, 11), float32] */;
  %602 = reshape(%599, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), uint32] */;
  %603 = reshape(%600, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), uint32] */;
  %604 = reshape(%601, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %605 = @func_11246(%602, %603, %604) /* ty=(Tensor[(10, 8, 5), bool], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */;
  %606 = cast(%var_16486, dtype="float64") /* ty=Tensor[(756), float64] */;
  %607 = reshape(%606, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %608 = @func_11797(%607) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(9, 6, 14), int8]) */;
  %609 = cast(%var_16406, dtype="float32") /* ty=Tensor[(1, 1170), float32] */;
  %610 = acosh(%609) /* ty=Tensor[(1, 1170), float32] */;
  %611 = cast(%610, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %612 = %576.0;
  %613 = @func_12846() /* ty=Tensor[(240), float64] */;
  %614 = %595.8;
  %615 = %598.1;
  %616 = %605.2;
  %617 = %608.1;
  %618 = cosh(%611) /* ty=Tensor[(1, 1170), float64] */;
  (%612, %613, %586, meta[relay.Constant][42] /* ty=Tensor[(264), float32] */, %614, %var_16401, %var_16402, meta[relay.Constant][43] /* ty=Tensor[(588), bool] */, meta[relay.Constant][44] /* ty=Tensor[(80), uint8] */, %var_16405, %615, meta[relay.Constant][45] /* ty=Tensor[(189), uint64] */, %616, meta[relay.Constant][46] /* ty=Tensor[(40, 10), uint32] */, %617, %var_16486, %618)
}

def @func_18054() -> (Tensor[(672), float32],) {
  %619 = @func_16721() /* ty=(Tensor[(672), float32],) */;
  %620 = %619.0;
  (%620,)
}

def @func_14492() -> (Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
  %625 = fn () -> (Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
    %621 = cast(meta[relay.Constant][47] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %622 = reshape(%621, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
    %623 = @func_14096() /* ty=Tensor[(240), float64] */;
    %624 = @func_4967(%622) /* ty=Tensor[(11, 8, 10), float32] */;
    (%623, %624, meta[relay.Constant][47] /* ty=Tensor[(880), float32] */)
  };
  %625() /* ty=(Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */
}

def @func_18589(%var_18587: Tensor[(15, 13, 5), float32], %var_18588: Tensor[(672), float32]) -> (Tensor[(15, 13, 5), int64], Tensor[(7, 13, 3), float64], Tensor[(273), float64], Tensor[(1344), int64], Tensor[(16, 7, 6), float32], Tensor[(672), float32]) {
  %643 = fn (%var_18535: Tensor[(15, 13, 5), float32], %var_18584: Tensor[(672), float32]) -> (Tensor[(15, 13, 5), int64], Tensor[(7, 13, 3), float64], Tensor[(273), float64], Tensor[(1344), int64], Tensor[(16, 7, 6), float32], Tensor[(672), float32]) {
    %626 = cast(%var_18535, dtype="float32") /* ty=Tensor[(15, 13, 5), float32] */;
    %627 = cosh(%626) /* ty=Tensor[(15, 13, 5), float32] */;
    %628 = cast(%var_18535, dtype="int64") /* ty=Tensor[(15, 13, 5), int64] */;
    %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%627, dtype="int64") /* ty=Tensor[(15, 13, 5), int64] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %632 = cast(meta[relay.Constant][48] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %633 = cast(meta[relay.Constant][49] /* ty=Tensor[(1344), int64] */, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %634 = reshape(%632, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
    %635 = reshape(%633, newshape=[1344]) /* ty=Tensor[(1344), int64] */;
    %636 = @func_13246(%634, %635) /* ty=(Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) */;
    %637 = cast(%var_18584, dtype="float32") /* ty=Tensor[(672), float32] */;
    %638 = reshape(%637, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
    %639 = @func_1355(%638) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
    %640 = bitwise_and(%630, %631) /* ty=Tensor[(15, 13, 5), int64] */;
    %641 = %636.1;
    %642 = %639.0;
    (%640, %641, meta[relay.Constant][48] /* ty=Tensor[(273), float64] */, meta[relay.Constant][49] /* ty=Tensor[(1344), int64] */, %642, %var_18584)
  };
  %643(%var_18587, %var_18588) /* ty=(Tensor[(15, 13, 5), int64], Tensor[(7, 13, 3), float64], Tensor[(273), float64], Tensor[(1344), int64], Tensor[(16, 7, 6), float32], Tensor[(672), float32]) */
}

def @func_13877() -> (Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) {
  %644 = @func_13208() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %645 = %644.0;
  %646 = cast(%645, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %647 = log10(%646) /* ty=Tensor[(7, 3, 9), float32] */;
  %648 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 3, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %649 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%647, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %652 = cast(meta[relay.Constant][51] /* ty=Tensor[(588), uint64] */, dtype="uint64") /* ty=Tensor[(588), uint64] */;
  %653 = cast(meta[relay.Constant][51] /* ty=Tensor[(588), uint64] */, dtype="uint64") /* ty=Tensor[(588), uint64] */;
  %654 = reshape(%652, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint64] */;
  %655 = reshape(%653, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint64] */;
  %656 = @func_10108(%654, %655) /* ty=(Tensor[(14, 14, 3), uint64],) */;
  %657 = @func_13589() /* ty=Tensor[(189), float64] */;
  %658 = floor_mod(%650, %651) /* ty=Tensor[(7, 3, 9), float32] */;
  %659 = %656.0;
  (%657, %658, %659, meta[relay.Constant][51] /* ty=Tensor[(588), uint64] */)
}

def @func_16189(%var_16182: Tensor[(440, 2), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(11, 8, 10), float32], Tensor[(440, 2), float32]) {
  %660 = cast(%var_16182, dtype="float32") /* ty=Tensor[(440, 2), float32] */;
  %661 = reshape(%660, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
  %662 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %663 = @func_4967(%661) /* ty=Tensor[(11, 8, 10), float32] */;
  (%662, %663, %var_16182)
}

def @func_17004() -> Tensor[(672), float32] {
  %665 = fn () -> Tensor[(672), float32] {
    %664 = @func_15253() /* ty=(Tensor[(672), float32],) */;
    %664.0
  };
  %665() /* ty=Tensor[(672), float32] */
}

def @func_18914() -> Tensor[(14, 14, 3), uint64] {
  @func_18912() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @func_14566() -> Tensor[(189), float64] {
  %666 = @func_13432() /* ty=(Tensor[(189), float64],) */;
  %666.0
}

def @func_18912() -> Tensor[(14, 14, 3), uint64] {
  @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @func_14357() -> Tensor[(189), uint64] {
  %667 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %667.2
}

def @func_19130() -> (Tensor[(672), float32], Tensor[(8, 10, 8), bool], Tensor[(640), uint64]) {
  %675 = fn () -> (Tensor[(672), float32], Tensor[(8, 10, 8), bool], Tensor[(640), uint64]) {
    %668 = cast(meta[relay.Constant][52] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %669 = cast(meta[relay.Constant][52] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %670 = reshape(%668, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), uint64] */;
    %671 = reshape(%669, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), uint64] */;
    %672 = @func_4521(%670, %671) /* ty=(Tensor[(8, 10, 8), bool],) */;
    %673 = @func_18863() /* ty=Tensor[(672), float32] */;
    %674 = %672.0;
    (%673, %674, meta[relay.Constant][52] /* ty=Tensor[(640), uint64] */)
  };
  %675() /* ty=(Tensor[(672), float32], Tensor[(8, 10, 8), bool], Tensor[(640), uint64]) */
}

def @func_13782(%var_13748: Tensor[(189), float64]) -> (Tensor[(189), bool], Tensor[(240), float64], Tensor[(273), float64], Tensor[(1344), int64], Tensor[(240), float32], Tensor[(189), float64]) {
  %676 = @func_13589() /* ty=Tensor[(189), float64] */;
  %677 = cast(%var_13748, dtype="bool") /* ty=Tensor[(189), bool] */;
  %678 = shape_of(%676, dtype="int32") /* ty=Tensor[(1), int32] */;
  %679 = cast(%676, dtype="bool") /* ty=Tensor[(189), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?), bool] */;
  %681 = cast(meta[relay.Constant][53] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %682 = cast(meta[relay.Constant][54] /* ty=Tensor[(1344), int64] */, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %683 = reshape(%681, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %684 = reshape(%682, newshape=[1344]) /* ty=Tensor[(1344), int64] */;
  %685 = @func_13246(%683, %684) /* ty=(Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) */;
  %686 = @func_13518() /* ty=(Tensor[(189), uint64], Tensor[(240), float32], Tensor[(189), float64]) */;
  %687 = greater_equal(%679, %680) /* ty=Tensor[(189), bool] */;
  %688 = %685.3;
  %689 = %686.1;
  %690 = @func_13589() /* ty=Tensor[(189), float64] */;
  (%687, %688, meta[relay.Constant][53] /* ty=Tensor[(273), float64] */, meta[relay.Constant][54] /* ty=Tensor[(1344), int64] */, %689, %690)
}

def @func_20426() -> (Tensor[(7, 3, 9), float64],) {
  %691 = @func_15828() /* ty=Tensor[(7, 3, 9), float64] */;
  (%691,)
}

def @func_20361() -> (Tensor[(7, 3, 9), float32],) {
  @func_20359() /* ty=(Tensor[(7, 3, 9), float32],) */
}

def @func_13377(%var_13373: Tensor[(135), int8], %var_13374: Tensor[(880), float32], %var_13375: Tensor[(240), float64], %var_13376: Tensor[(1248), float64]) -> (Tensor[(16, 2, 16), float64], Tensor[(3, 9, 5), int8], Tensor[(135), int8], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(1, 390), bool], Tensor[(240), float64], Tensor[(1248), float64]) {
  %710 = fn (%var_13345: Tensor[(135), int8], %var_13359: Tensor[(880), float32], %var_13363: Tensor[(240), float64], %var_13364: Tensor[(1248), float64]) -> (Tensor[(16, 2, 16), float64], Tensor[(3, 9, 5), int8], Tensor[(135), int8], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(1, 390), bool], Tensor[(240), float64], Tensor[(1248), float64]) {
    %692 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %693 = cast(%var_13345, dtype="int8") /* ty=Tensor[(135), int8] */;
    %694 = cast(%var_13345, dtype="int8") /* ty=Tensor[(135), int8] */;
    %695 = reshape(%693, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), int8] */;
    %696 = reshape(%694, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), int8] */;
    %697 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %698 = cast(%var_13359, dtype="float32") /* ty=Tensor[(880), float32] */;
    %699 = reshape(%698, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
    %700 = cast(%var_13363, dtype="float64") /* ty=Tensor[(240), float64] */;
    %701 = cast(%var_13364, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %702 = reshape(%700, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %703 = reshape(%701, newshape=[1248]) /* ty=Tensor[(1248), float64] */;
    %704 = @func_7996(%702, %703) /* ty=(Tensor[(16, 7, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(390), bool], Tensor[(1248), float64], Tensor[(1, 390), bool]) */;
    %705 = %692.0;
    %706 = @func_1843(%695, %696) /* ty=Tensor[(3, 9, 5), int8] */;
    %707 = %697.1;
    %708 = @func_4967(%699) /* ty=Tensor[(11, 8, 10), float32] */;
    %709 = %704.5;
    (%705, %706, %var_13345, %707, %708, %var_13359, %709, %var_13363, %var_13364)
  };
  %710(%var_13373, %var_13374, %var_13375, %var_13376) /* ty=(Tensor[(16, 2, 16), float64], Tensor[(3, 9, 5), int8], Tensor[(135), int8], Tensor[(7, 3, 9), uint64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(1, 390), bool], Tensor[(240), float64], Tensor[(1248), float64]) */
}

def @func_14531() -> Tensor[(240), float64] {
  %712 = fn () -> Tensor[(240), float64] {
    %711 = @func_13461() /* ty=(Tensor[(240), float64],) */;
    %711.0
  };
  %712() /* ty=Tensor[(240), float64] */
}

def @func_19963() -> Tensor[(189), float64] {
  %714 = fn () -> Tensor[(189), float64] {
    %713 = @func_18894() /* ty=(Tensor[(189), float64], Tensor[(240), float64]) */;
    %713.0
  };
  %714() /* ty=Tensor[(189), float64] */
}

def @func_20750() -> Tensor[(189), float64] {
  @func_19526() /* ty=Tensor[(189), float64] */
}

def @func_20231() -> Tensor[(264), float32] {
  @func_18034() /* ty=Tensor[(264), float32] */
}

def @func_19488() -> Tensor[(240), float64] {
  @func_19486() /* ty=Tensor[(240), float64] */
}

def @func_15326() -> (Tensor[(189), uint64],) {
  %716 = fn () -> (Tensor[(189), uint64],) {
    %715 = @func_14357() /* ty=Tensor[(189), uint64] */;
    (%715,)
  };
  %716() /* ty=(Tensor[(189), uint64],) */
}

def @func_21139(%var_21036: Tensor[(880), float32], %var_21047: Tensor[(2, 120), float64], %var_21118: Tensor[(4, 60), uint32]) -> (Tensor[(672), float32], Tensor[(14, 14, 3), float32], Tensor[(880), float32], Tensor[(294), float32], Tensor[(15, 2, 880), uint32], Tensor[(15, 2, ?), float64], Tensor[(189), float64], Tensor[(4, 60), float32], Tensor[(4, 60), float64], Tensor[(5, 11, 3), uint8], Tensor[(165), uint8]) {
  %717 = @func_18054() /* ty=(Tensor[(672), float32],) */;
  %718 = cast(%var_21036, dtype="float32") /* ty=Tensor[(880), float32] */;
  %719 = reshape(%718, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %720 = @func_18090(%719) /* ty=(Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(189), float64]) */;
  %721 = @func_17370() /* ty=Tensor[(15, 2, ?), float64] */;
  %722 = cast(%721, dtype="uint32") /* ty=Tensor[(15, 2, ?), uint32] */;
  %723 = cast(%var_21036, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %724 = @func_18753() /* ty=(Tensor[(15, 2, ?), float64],) */;
  %725 = @func_20857() /* ty=(Tensor[(10, 3), float64], Tensor[(189), float64]) */;
  %726 = cast(meta[relay.Constant][55] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %727 = cast(%var_21047, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %728 = reshape(%726, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
  %729 = reshape(%727, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %730 = @func_213(%728, %729) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
  %731 = %730.2;
  %732 = cast(%var_21047, dtype="uint32") /* ty=Tensor[(2, 120), uint32] */;
  %733 = shape_of(%731, dtype="int32") /* ty=Tensor[(2), int32] */;
  %734 = cast(%731, dtype="uint32") /* ty=Tensor[(4, 60), uint32] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %736 = right_shift(%734, %735) /* ty=Tensor[(4, 60), uint32] */;
  %737 = cast(%var_21118, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(2), int32] */;
  %739 = cast(%736, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %741 = cast(%731, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %742 = cast(meta[relay.Constant][56] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %743 = reshape(%742, newshape=[5, 11, 3]) /* ty=Tensor[(5, 11, 3), uint8] */;
  %744 = @func_15319(%743) /* ty=(Tensor[(5, 11, 3), uint8],) */;
  %745 = %717.0;
  %746 = @func_19383() /* ty=Tensor[(14, 14, 3), float32] */;
  %747 = %720.2;
  %748 = bitwise_or(%722, %723) /* ty=Tensor[(15, 2, 880), uint32] */;
  %749 = %724.0;
  %750 = %725.1;
  %751 = floor_divide(%739, %740) /* ty=Tensor[(4, 60), float32] */;
  %752 = sinh(%741) /* ty=Tensor[(4, 60), float64] */;
  %753 = %744.0;
  (%745, %746, %747, meta[relay.Constant][55] /* ty=Tensor[(294), float32] */, %748, %749, %750, %751, %752, %753, meta[relay.Constant][56] /* ty=Tensor[(165), uint8] */)
}

def @func_13017(%var_12956: Tensor[(88), float64], %var_12957: Tensor[(196), bool], %var_12958: Tensor[(588), bool], %var_12960: Tensor[(80, 1), uint8], %var_12961: Tensor[(960), uint8], %var_12963: Tensor[(1170), float64], %var_12981: Tensor[(264), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(1, 196), bool], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(960), uint8], Tensor[(20, 32), uint64], Tensor[(1170), float64], Tensor[(672), float32], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(80, 780), bool], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) {
  %754 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
  %755 = cast(%var_12956, dtype="float64") /* ty=Tensor[(88), float64] */;
  %756 = cast(%var_12957, dtype="bool") /* ty=Tensor[(196), bool] */;
  %757 = cast(%var_12958, dtype="bool") /* ty=Tensor[(588), bool] */;
  %758 = cast(meta[relay.Constant][57] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %759 = cast(%var_12960, dtype="uint8") /* ty=Tensor[(80, 1), uint8] */;
  %760 = cast(%var_12961, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %761 = cast(meta[relay.Constant][58] /* ty=Tensor[(20, 32), uint64] */, dtype="uint64") /* ty=Tensor[(20, 32), uint64] */;
  %762 = cast(%var_12963, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %763 = cast(meta[relay.Constant][59] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %764 = cast(meta[relay.Constant][60] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %765 = reshape(%755, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float64] */;
  %766 = reshape(%756, newshape=[1, 196]) /* ty=Tensor[(1, 196), bool] */;
  %767 = reshape(%757, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %768 = reshape(%758, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %769 = reshape(%759, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %770 = reshape(%760, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint8] */;
  %771 = reshape(%761, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %772 = reshape(%762, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %773 = reshape(%763, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %774 = reshape(%764, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %775 = @func_10515(%765, %766, %767, %768, %769, %770, %771, %772, %773, %774) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */;
  %776 = cast(%var_12981, dtype="float32") /* ty=Tensor[(264), float32] */;
  %777 = cast(%var_12981, dtype="float32") /* ty=Tensor[(264), float32] */;
  %778 = reshape(%776, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %779 = reshape(%777, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
  %780 = cast(%var_12960, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %781 = cast(meta[relay.Constant][59] /* ty=Tensor[(780), float64] */, dtype="bool") /* ty=Tensor[(780), bool] */;
  %782 = cast(meta[relay.Constant][61] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %783 = reshape(%782, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
  %784 = %754.0;
  %785 = %775.1;
  %786 = @func_8378(%778, %779) /* ty=Tensor[(12, 2, 11), float32] */;
  %787 = logical_and(%780, %781) /* ty=Tensor[(80, 780), bool] */;
  %788 = @func_3784(%783) /* ty=Tensor[(5, 13, 6), bool] */;
  (%784, %785, %var_12956, %var_12957, %var_12958, meta[relay.Constant][57] /* ty=Tensor[(240), float64] */, %var_12961, meta[relay.Constant][58] /* ty=Tensor[(20, 32), uint64] */, %var_12963, meta[relay.Constant][60] /* ty=Tensor[(672), float32] */, %786, %var_12981, %787, %788, meta[relay.Constant][61] /* ty=Tensor[(390), bool] */)
}

def @func_7811(%var_7809: Tensor[(7, 14, 2), int64]) -> (Tensor[(7, 14, 2), int64],) {
  @func_7808(%var_7809) /* ty=(Tensor[(7, 14, 2), int64],) */
}

def @func_16302(%var_16298: Tensor[(35, 4), int64], %var_16299: Tensor[(98, 2), int64], %var_16300: Tensor[(800), float32]) -> (Tensor[(189), float64], Tensor[(448), float64], Tensor[(832), int8], Tensor[(35, 4), int64], Tensor[(98, 2), int64], Tensor[(800), float32]) {
  %789 = @func_15495() /* ty=(Tensor[(189), float64], Tensor[(140), int64]) */;
  %790 = cast(meta[relay.Constant][62] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %791 = cast(%var_16298, dtype="int64") /* ty=Tensor[(35, 4), int64] */;
  %792 = cast(%var_16299, dtype="int64") /* ty=Tensor[(98, 2), int64] */;
  %793 = cast(%var_16300, dtype="float32") /* ty=Tensor[(800), float32] */;
  %794 = reshape(%790, newshape=[832]) /* ty=Tensor[(832), int8] */;
  %795 = reshape(%791, newshape=[140]) /* ty=Tensor[(140), int64] */;
  %796 = reshape(%792, newshape=[196]) /* ty=Tensor[(196), int64] */;
  %797 = reshape(%793, newshape=[1, 800]) /* ty=Tensor[(1, 800), float32] */;
  %798 = @func_12790(%794, %795, %796, %797) /* ty=(Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(240, 2), float32], Tensor[(196), int64], Tensor[(14, 14, 3), uint64], Tensor[(14, 42), uint64], Tensor[(10, 10, 8), float32], Tensor[(1, 135), int8], Tensor[(7, 14, 2), int64], Tensor[(1, 800), float32]) */;
  %799 = %789.0;
  %800 = %798.4;
  (%799, %800, meta[relay.Constant][62] /* ty=Tensor[(832), int8] */, %var_16298, %var_16299, %var_16300)
}

def @func_8577(%var_8568: Tensor[(1, 14, 14), bool], %var_8569: Tensor[(3, 14, 14), bool]) -> Tensor[(3, 14, 14), bool] {
  %801 = cast(%var_8568, dtype="bool") /* ty=Tensor[(1, 14, 14), bool] */;
  %802 = cast(%var_8569, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  logical_and(%801, %802) /* ty=Tensor[(3, 14, 14), bool] */
}

def @func_2519(%var_2459: Tensor[(5, 6, 14), float64], %var_2486: Tensor[(8, 30), float64]) -> (Tensor[(5, 6, 14), float32], Tensor[(12, 2, 10), float64], Tensor[(8, 30), float64], Tensor[(12, 2, 10), float64], Tensor[(448), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) {
  %803 = cast(%var_2459, dtype="float64") /* ty=Tensor[(5, 6, 14), float64] */;
  %804 = log2(%803) /* ty=Tensor[(5, 6, 14), float64] */;
  %805 = cast(%804, dtype="float32") /* ty=Tensor[(5, 6, 14), float32] */;
  %806 = cast(%var_2486, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %807 = reshape(%806, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %808 = @func_365(%807) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */;
  %809 = cast(meta[relay.Constant][63] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %810 = %808.4;
  %811 = cast(%810, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  %812 = reshape(%809, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), float64] */;
  %813 = reshape(%811, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %814 = @func_231(%812, %813) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %815 = cast(meta[relay.Constant][64] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %816 = reshape(%815, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
  %817 = @func_1355(%816) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
  %818 = asinh(%805) /* ty=Tensor[(5, 6, 14), float32] */;
  %819 = %814.1;
  %820 = %817.1;
  (%818, %810, %var_2486, %819, meta[relay.Constant][63] /* ty=Tensor[(448), float64] */, %820, meta[relay.Constant][64] /* ty=Tensor[(672), float32] */)
}

def @func_14959() -> (Tensor[(10, 3), float64],) {
  %823 = fn () -> (Tensor[(10, 3), float64],) {
    %821 = @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */;
    %822 = %821.2;
    (%822,)
  };
  %823() /* ty=(Tensor[(10, 3), float64],) */
}

def @func_7808(%var_7799: Tensor[(7, 14, 2), int64]) -> (Tensor[(7, 14, 2), int64],) {
  %824 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %825 = cast(%var_7799, dtype="int64") /* ty=Tensor[(7, 14, 2), int64] */;
  %826 = minimum(%824, %825) /* ty=Tensor[(7, 14, 2), int64] */;
  (%826,)
}

def @func_13590() -> Tensor[(189), float64] {
  %828 = fn () -> Tensor[(189), float64] {
    %827 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
    %827.1
  };
  %828() /* ty=Tensor[(189), float64] */
}

def @func_20794() -> (Tensor[(189), float64],) {
  %830 = fn () -> (Tensor[(189), float64],) {
    %829 = @func_19962() /* ty=Tensor[(189), float64] */;
    (%829,)
  };
  %830() /* ty=(Tensor[(189), float64],) */
}

def @func_10112(%var_10110: Tensor[(14, 14, 3), uint64], %var_10111: Tensor[(14, 14, 3), uint64]) -> (Tensor[(14, 14, 3), uint64],) {
  @func_10108(%var_10110, %var_10111) /* ty=(Tensor[(14, 14, 3), uint64],) */
}

def @func_20649(%var_20646: Tensor[(5, 126), float64], %var_20647: Tensor[(1176), float64], %var_20648: Tensor[(10, 78), float64]) -> (Tensor[(7, 3, 9), float64], Tensor[(15, 2, ?), float64], Tensor[(30), float64], Tensor[(672), float32], Tensor[(6, 7, 15), float64], Tensor[(5, 126), float64], Tensor[(240), float64], Tensor[(6, 14, 14), bool], Tensor[(1176), float64], Tensor[(16, 7, 6), bool], Tensor[(10, 78), float64]) {
  @func_20644(%var_20646, %var_20647, %var_20648) /* ty=(Tensor[(7, 3, 9), float64], Tensor[(15, 2, ?), float64], Tensor[(30), float64], Tensor[(672), float32], Tensor[(6, 7, 15), float64], Tensor[(5, 126), float64], Tensor[(240), float64], Tensor[(6, 14, 14), bool], Tensor[(1176), float64], Tensor[(16, 7, 6), bool], Tensor[(10, 78), float64]) */
}

def @func_20172() -> (Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(15, 2, 672), float32]) {
  @func_20170() /* ty=(Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(15, 2, 672), float32]) */
}

def @func_14454() -> (Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) {
  %838 = fn () -> (Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) {
    %831 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
    %832 = cast(meta[relay.Constant][65] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
    %833 = reshape(%832, newshape=[264]) /* ty=Tensor[(264), float32] */;
    %834 = @func_13111(%833) /* ty=(Tensor[(7, 3, 9), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */;
    %835 = %831.1;
    %836 = %834.0;
    %837 = @func_13983() /* ty=Tensor[(15, 2, ?), float64] */;
    (%835, %836, meta[relay.Constant][65] /* ty=Tensor[(264), float32] */, %837)
  };
  %838() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */
}

def @func_12790(%var_12713: Tensor[(832), int8], %var_12714: Tensor[(140), int64], %var_12717: Tensor[(196), int64], %var_12735: Tensor[(1, 800), float32]) -> (Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(240, 2), float32], Tensor[(196), int64], Tensor[(14, 14, 3), uint64], Tensor[(14, 42), uint64], Tensor[(10, 10, 8), float32], Tensor[(1, 135), int8], Tensor[(7, 14, 2), int64], Tensor[(1, 800), float32]) {
  %839 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %840 = cast(%var_12713, dtype="int8") /* ty=Tensor[(832), int8] */;
  %841 = cast(%var_12713, dtype="int8") /* ty=Tensor[(832), int8] */;
  %842 = cast(%var_12714, dtype="int64") /* ty=Tensor[(140), int64] */;
  %843 = cast(meta[relay.Constant][66] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %844 = cast(meta[relay.Constant][67] /* ty=Tensor[(240, 2), float32] */, dtype="float32") /* ty=Tensor[(240, 2), float32] */;
  %845 = cast(%var_12717, dtype="int64") /* ty=Tensor[(196), int64] */;
  %846 = reshape(%840, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %847 = reshape(%841, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %848 = reshape(%842, newshape=[140]) /* ty=Tensor[(140), int64] */;
  %849 = reshape(%843, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %850 = reshape(%844, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %851 = reshape(%845, newshape=[196]) /* ty=Tensor[(196), int64] */;
  %852 = @func_10349(%846, %847, %848, %849, %850, %851) /* ty=(Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) */;
  %853 = cast(meta[relay.Constant][68] /* ty=Tensor[(14, 42), uint64] */, dtype="uint64") /* ty=Tensor[(14, 42), uint64] */;
  %854 = cast(meta[relay.Constant][68] /* ty=Tensor[(14, 42), uint64] */, dtype="uint64") /* ty=Tensor[(14, 42), uint64] */;
  %855 = reshape(%853, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint64] */;
  %856 = reshape(%854, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint64] */;
  %857 = @func_10108(%855, %856) /* ty=(Tensor[(14, 14, 3), uint64],) */;
  %858 = cast(%var_12735, dtype="float32") /* ty=Tensor[(1, 800), float32] */;
  %859 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 135), int8] */, dtype="int8") /* ty=Tensor[(1, 135), int8] */;
  %860 = reshape(%858, newshape=[10, 10, 8]) /* ty=Tensor[(10, 10, 8), float32] */;
  %861 = reshape(%859, newshape=[1, 135]) /* ty=Tensor[(1, 135), int8] */;
  %862 = @func_2929(%860, %861) /* ty=(Tensor[(10, 10, 8), float32], Tensor[(3, 9, 5), int8], Tensor[(1, 135), int8], Tensor[(224, 2), float64], Tensor[(594), float32], Tensor[(112, 4), float64], Tensor[(240), float64]) */;
  %863 = cast(%var_12717, dtype="int64") /* ty=Tensor[(196), int64] */;
  %864 = reshape(%863, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), int64] */;
  %865 = @func_7808(%864) /* ty=(Tensor[(7, 14, 2), int64],) */;
  %866 = cast(%var_12735, dtype="float64") /* ty=Tensor[(1, 800), float64] */;
  %867 = atanh(%866) /* ty=Tensor[(1, 800), float64] */;
  %868 = cast(%867, dtype="float32") /* ty=Tensor[(1, 800), float32] */;
  %869 = %839.3;
  %870 = %852.6;
  %871 = %857.0;
  %872 = %862.0;
  %873 = %865.0;
  %874 = rsqrt(%868) /* ty=Tensor[(1, 800), float32] */;
  (%869, %870, %var_12713, %var_12714, meta[relay.Constant][66] /* ty=Tensor[(448), float64] */, meta[relay.Constant][67] /* ty=Tensor[(240, 2), float32] */, %var_12717, %871, meta[relay.Constant][68] /* ty=Tensor[(14, 42), uint64] */, %872, meta[relay.Constant][69] /* ty=Tensor[(1, 135), int8] */, %873, %874)
}

def @func_17482(%var_17429: Tensor[(390), bool], %var_17465: Tensor[(88), float64], %var_17470: Tensor[(640), uint64], %var_17472: Tensor[(780), float64]) -> (Tensor[(7, 3, 9), float32], Tensor[(12, 13, 8), int32], Tensor[(1248), float64], Tensor[(390), bool], Tensor[(240), float64], Tensor[(672), float32], Tensor[(240, 448), int32], Tensor[(88), float64], Tensor[(98, 2), bool], Tensor[(294, 2), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(640), uint64], Tensor[(1170), float64], Tensor[(780), float64]) {
  %875 = @func_17319() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %876 = cast(meta[relay.Constant][70] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %877 = cast(%var_17429, dtype="bool") /* ty=Tensor[(390), bool] */;
  %878 = cast(meta[relay.Constant][71] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %879 = reshape(%876, newshape=[12, 13, 8]) /* ty=Tensor[(12, 13, 8), float64] */;
  %880 = reshape(%877, newshape=[390]) /* ty=Tensor[(390), bool] */;
  %881 = reshape(%878, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %882 = @func_6772(%879, %880, %881) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(12, 13, 8), int32], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
  %883 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %884 = cast(%var_17465, dtype="float64") /* ty=Tensor[(88), float64] */;
  %885 = cast(meta[relay.Constant][72] /* ty=Tensor[(98, 2), bool] */, dtype="bool") /* ty=Tensor[(98, 2), bool] */;
  %886 = cast(meta[relay.Constant][73] /* ty=Tensor[(294, 2), bool] */, dtype="bool") /* ty=Tensor[(294, 2), bool] */;
  %887 = cast(meta[relay.Constant][71] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %888 = cast(meta[relay.Constant][74] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %889 = cast(meta[relay.Constant][75] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %890 = cast(%var_17470, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %891 = cast(meta[relay.Constant][76] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %892 = cast(%var_17472, dtype="float64") /* ty=Tensor[(780), float64] */;
  %893 = %883.0;
  %894 = cast(%893, dtype="float32") /* ty=Tensor[(672), float32] */;
  %895 = reshape(%884, newshape=[2, 4, 11]) /* ty=Tensor[(2, 4, 11), float64] */;
  %896 = reshape(%885, newshape=[1, 196]) /* ty=Tensor[(1, 196), bool] */;
  %897 = reshape(%886, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %898 = reshape(%887, newshape=[1, 240]) /* ty=Tensor[(1, 240), float64] */;
  %899 = reshape(%888, newshape=[80]) /* ty=Tensor[(80), uint8] */;
  %900 = reshape(%889, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint8] */;
  %901 = reshape(%890, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %902 = reshape(%891, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %903 = reshape(%892, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %904 = reshape(%894, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %905 = @func_10515(%895, %896, %897, %898, %899, %900, %901, %902, %903, %904) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */;
  %906 = %875.0;
  %907 = %882.2;
  %908 = %905.15;
  (%906, %907, meta[relay.Constant][70] /* ty=Tensor[(1248), float64] */, %var_17429, meta[relay.Constant][71] /* ty=Tensor[(240), float64] */, %893, %908, %var_17465, meta[relay.Constant][72] /* ty=Tensor[(98, 2), bool] */, meta[relay.Constant][73] /* ty=Tensor[(294, 2), bool] */, meta[relay.Constant][74] /* ty=Tensor[(80), uint8] */, meta[relay.Constant][75] /* ty=Tensor[(960), uint8] */, %var_17470, meta[relay.Constant][76] /* ty=Tensor[(1170), float64] */, %var_17472)
}

def @func_17097() -> (Tensor[(672), float32],) {
  %909 = @func_16721() /* ty=(Tensor[(672), float32],) */;
  %910 = %909.0;
  (%910,)
}

def @func_4290(%var_4289: Tensor[(6, 14, 7), float32]) -> (Tensor[(6, 14, 7), float32],) {
  %915 = fn (%var_4264: Tensor[(6, 14, 7), float32]) -> (Tensor[(6, 14, 7), float32],) {
    %911 = cast(%var_4264, dtype="float32") /* ty=Tensor[(6, 14, 7), float32] */;
    %912 = log2(%911) /* ty=Tensor[(6, 14, 7), float32] */;
    %913 = cast(%912, dtype="float32") /* ty=Tensor[(6, 14, 7), float32] */;
    %914 = cos(%913) /* ty=Tensor[(6, 14, 7), float32] */;
    (%914,)
  };
  %915(%var_4289) /* ty=(Tensor[(6, 14, 7), float32],) */
}

def @func_21574() -> (Tensor[(189), float64],) {
  %916 = @func_20857() /* ty=(Tensor[(10, 3), float64], Tensor[(189), float64]) */;
  %917 = %916.1;
  (%917,)
}

def @func_7999(%var_7997: Tensor[(240), float64], %var_7998: Tensor[(1248), float64]) -> (Tensor[(16, 7, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(390), bool], Tensor[(1248), float64], Tensor[(1, 390), bool]) {
  %934 = fn (%var_7977: Tensor[(240), float64], %var_7992: Tensor[(1248), float64]) -> (Tensor[(16, 7, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(390), bool], Tensor[(1248), float64], Tensor[(1, 390), bool]) {
    %918 = cast(meta[relay.Constant][77] /* ty=Tensor[(16, 7, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 7), float32] */;
    %919 = cast(%var_7977, dtype="float64") /* ty=Tensor[(240), float64] */;
    %920 = cast(%var_7977, dtype="float64") /* ty=Tensor[(240), float64] */;
    %921 = reshape(%919, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %922 = reshape(%920, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %923 = @func_88(%921, %922) /* ty=(Tensor[(12, 2, 10), float64],) */;
    %924 = cast(%var_7992, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %925 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 390), bool] */, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
    %926 = %923.0;
    %927 = cast(%926, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
    %928 = reshape(%924, newshape=[12, 13, 8]) /* ty=Tensor[(12, 13, 8), float64] */;
    %929 = reshape(%925, newshape=[390]) /* ty=Tensor[(390), bool] */;
    %930 = reshape(%927, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %931 = @func_6772(%928, %929, %930) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(12, 13, 8), int32], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %932 = sin(%918) /* ty=Tensor[(16, 7, 7), float32] */;
    %933 = %931.1;
    (%932, %926, %var_7977, %933, %var_7992, meta[relay.Constant][78] /* ty=Tensor[(1, 390), bool] */)
  };
  %934(%var_7997, %var_7998) /* ty=(Tensor[(16, 7, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(390), bool], Tensor[(1248), float64], Tensor[(1, 390), bool]) */
}

def @func_19527() -> Tensor[(189), float64] {
  %935 = fn () -> Tensor[(189), float64] {
    @func_14566() /* ty=Tensor[(189), float64] */
  };
  %935() /* ty=Tensor[(189), float64] */
}

def @func_17520() -> Tensor[(14, 14, 3), uint64] {
  %936 = fn () -> Tensor[(14, 14, 3), uint64] {
    @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */
  };
  %936() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @func_19792(%var_19791: Tensor[(98, 2), int64]) -> (Tensor[(140), int64], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(22, 4), float64], Tensor[(11700), float64], Tensor[(14, 14, 3), bool], Tensor[(7, 14, 2), int64], Tensor[(98, 2), int64]) {
  %960 = fn (%var_19788: Tensor[(98, 2), int64]) -> (Tensor[(140), int64], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(22, 4), float64], Tensor[(11700), float64], Tensor[(14, 14, 3), bool], Tensor[(7, 14, 2), int64], Tensor[(98, 2), int64]) {
    %937 = @func_16217() /* ty=(Tensor[(140), int64],) */;
    %938 = @func_18014() /* ty=(Tensor[(14, 14, 3), uint64], Tensor[(15, 2, ?), float64], Tensor[(30), float64]) */;
    %939 = %938.0;
    %940 = cast(meta[relay.Constant][79] /* ty=Tensor[(80), uint8] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
    %941 = cast(meta[relay.Constant][80] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %942 = cast(meta[relay.Constant][81] /* ty=Tensor[(22, 4), float64] */, dtype="float64") /* ty=Tensor[(22, 4), float64] */;
    %943 = cast(meta[relay.Constant][82] /* ty=Tensor[(11700), float64] */, dtype="float64") /* ty=Tensor[(11700), float64] */;
    %944 = reshape(%940, newshape=[80]) /* ty=Tensor[(80), uint8] */;
    %945 = reshape(%941, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
    %946 = reshape(%942, newshape=[88]) /* ty=Tensor[(88), float64] */;
    %947 = reshape(%943, newshape=[390, 30]) /* ty=Tensor[(390, 30), float64] */;
    %948 = @func_18423(%944, %945, %946, %947) /* ty=(Tensor[(11, 9, 12), uint64], Tensor[(14, 14, 3), uint64], Tensor[(264), float32], Tensor[(15, 2, ?), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(20, 48), uint8], Tensor[(44, 2), float64], Tensor[(88), float64], Tensor[(196), bool], Tensor[(390, 30), float64]) */;
    %949 = %948.1;
    %950 = cast(%949, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
    %951 = shape_of(%939, dtype="int32") /* ty=Tensor[(3), int32] */;
    %952 = cast(%939, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
    %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %954 = cast(%var_19788, dtype="int64") /* ty=Tensor[(98, 2), int64] */;
    %955 = reshape(%954, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), int64] */;
    %956 = @func_7808(%955) /* ty=(Tensor[(7, 14, 2), int64],) */;
    %957 = %937.0;
    %958 = logical_and(%952, %953) /* ty=Tensor[(14, 14, 3), bool] */;
    %959 = %956.0;
    (%957, meta[relay.Constant][79] /* ty=Tensor[(80), uint8] */, meta[relay.Constant][80] /* ty=Tensor[(960), uint8] */, meta[relay.Constant][81] /* ty=Tensor[(22, 4), float64] */, meta[relay.Constant][82] /* ty=Tensor[(11700), float64] */, %958, %959, %var_19788)
  };
  %960(%var_19791) /* ty=(Tensor[(140), int64], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(22, 4), float64], Tensor[(11700), float64], Tensor[(14, 14, 3), bool], Tensor[(7, 14, 2), int64], Tensor[(98, 2), int64]) */
}

def @func_13113(%var_13112: Tensor[(264), float32]) -> (Tensor[(7, 3, 9), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
  %970 = fn (%var_13099: Tensor[(264), float32]) -> (Tensor[(7, 3, 9), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) {
    %961 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
    %962 = %961.0;
    %963 = cast(%962, dtype="float64") /* ty=Tensor[(7, 3, 9), float64] */;
    %964 = cast(%var_13099, dtype="float32") /* ty=Tensor[(264), float32] */;
    %965 = cast(%var_13099, dtype="float32") /* ty=Tensor[(264), float32] */;
    %966 = reshape(%964, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
    %967 = reshape(%965, newshape=[12, 2, 11]) /* ty=Tensor[(12, 2, 11), float32] */;
    %968 = atanh(%963) /* ty=Tensor[(7, 3, 9), float64] */;
    %969 = @func_8378(%966, %967) /* ty=Tensor[(12, 2, 11), float32] */;
    (%968, %969, %var_13099)
  };
  %970(%var_13112) /* ty=(Tensor[(7, 3, 9), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32]) */
}

def @func_13224() -> (Tensor[(240), float64],) {
  %971 = @func_12846() /* ty=Tensor[(240), float64] */;
  (%971,)
}

def @func_15087() -> (Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) {
  %979 = fn () -> (Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) {
    %972 = @func_13518() /* ty=(Tensor[(189), uint64], Tensor[(240), float32], Tensor[(189), float64]) */;
    %973 = cast(meta[relay.Constant][83] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
    %974 = cast(meta[relay.Constant][83] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
    %975 = reshape(%973, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
    %976 = reshape(%974, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
    %977 = %972.1;
    %978 = @func_10270(%975, %976) /* ty=Tensor[(2, 7, 10), int64] */;
    (%977, %978, meta[relay.Constant][83] /* ty=Tensor[(140), int64] */)
  };
  %979() /* ty=(Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) */
}

def @func_18204(%var_18202: Tensor[(832), int8], %var_18203: Tensor[(196, 1), int64]) -> (Tensor[(240), float64], Tensor[(196), int64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(1, 480), float32], Tensor[(196, 1), float32], Tensor[(196, 1), float64]) {
  %1002 = fn (%var_18180: Tensor[(832), int8], %var_18184: Tensor[(196, 1), int64]) -> (Tensor[(240), float64], Tensor[(196), int64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(1, 480), float32], Tensor[(196, 1), float32], Tensor[(196, 1), float64]) {
    %980 = @func_17338() /* ty=(Tensor[(240), float64],) */;
    %981 = cast(%var_18180, dtype="int8") /* ty=Tensor[(832), int8] */;
    %982 = cast(%var_18180, dtype="int8") /* ty=Tensor[(832), int8] */;
    %983 = cast(meta[relay.Constant][84] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
    %984 = cast(meta[relay.Constant][85] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %985 = cast(meta[relay.Constant][86] /* ty=Tensor[(1, 480), float32] */, dtype="float32") /* ty=Tensor[(1, 480), float32] */;
    %986 = cast(%var_18184, dtype="int64") /* ty=Tensor[(196, 1), int64] */;
    %987 = reshape(%981, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
    %988 = reshape(%982, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
    %989 = reshape(%983, newshape=[140]) /* ty=Tensor[(140), int64] */;
    %990 = reshape(%984, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %991 = reshape(%985, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %992 = reshape(%986, newshape=[196]) /* ty=Tensor[(196), int64] */;
    %993 = @func_10349(%987, %988, %989, %990, %991, %992) /* ty=(Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) */;
    %994 = cast(%var_18184, dtype="float32") /* ty=Tensor[(196, 1), float32] */;
    %995 = cast(%var_18184, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
    %996 = log10(%995) /* ty=Tensor[(196, 1), float64] */;
    %997 = cast(%996, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
    %998 = %980.0;
    %999 = %993.11;
    %1000 = asinh(%994) /* ty=Tensor[(196, 1), float32] */;
    %1001 = sinh(%997) /* ty=Tensor[(196, 1), float64] */;
    (%998, %999, %var_18180, meta[relay.Constant][84] /* ty=Tensor[(140), int64] */, meta[relay.Constant][85] /* ty=Tensor[(448), float64] */, meta[relay.Constant][86] /* ty=Tensor[(1, 480), float32] */, %1000, %1001)
  };
  %1002(%var_18202, %var_18203) /* ty=(Tensor[(240), float64], Tensor[(196), int64], Tensor[(832), int8], Tensor[(140), int64], Tensor[(448), float64], Tensor[(1, 480), float32], Tensor[(196, 1), float32], Tensor[(196, 1), float64]) */
}

def @func_20559(%var_20558: Tensor[(390), bool]) -> (Tensor[(2, 7, 10), int64], Tensor[(189), float64], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) {
  %1011 = fn (%var_20553: Tensor[(390), bool]) -> (Tensor[(2, 7, 10), int64], Tensor[(189), float64], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) {
    %1003 = @func_19321() /* ty=(Tensor[(672), float32], Tensor[(240), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(2, 7, 10), int64]) */;
    %1004 = @func_19962() /* ty=Tensor[(189), float64] */;
    %1005 = cast(%1004, dtype="float64") /* ty=Tensor[(189), float64] */;
    %1006 = cast(%var_20553, dtype="bool") /* ty=Tensor[(390), bool] */;
    %1007 = reshape(%1006, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
    %1008 = %1003.4;
    %1009 = atan(%1005) /* ty=Tensor[(189), float64] */;
    %1010 = @func_3784(%1007) /* ty=Tensor[(5, 13, 6), bool] */;
    (%1008, %1009, %1010, %var_20553)
  };
  %1011(%var_20558) /* ty=(Tensor[(2, 7, 10), int64], Tensor[(189), float64], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) */
}

def @func_4525(%var_4523: Tensor[(8, 10, 8), uint64], %var_4524: Tensor[(8, 10, 8), uint64]) -> (Tensor[(8, 10, 8), bool],) {
  @func_4521(%var_4523, %var_4524) /* ty=(Tensor[(8, 10, 8), bool],) */
}

def @func_16249() -> (Tensor[(15, 2, ?), float64],) {
  @func_16247() /* ty=(Tensor[(15, 2, ?), float64],) */
}

def @func_18969() -> (Tensor[(189), float64], Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) {
  %1012 = @func_13432() /* ty=(Tensor[(189), float64],) */;
  %1013 = @func_13589() /* ty=Tensor[(189), float64] */;
  %1014 = @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */;
  %1015 = %1012.0;
  (%1013, %1014, %1015)
}

def @func_19217() -> (Tensor[(14, 14, 3), uint64], Tensor[(7, 3, 9), float32]) {
  @func_19215() /* ty=(Tensor[(14, 14, 3), uint64], Tensor[(7, 3, 9), float32]) */
}

def @func_14031(%var_14029: Tensor[(630), float64]) -> (Tensor[(7, 3, 9), float32], Tensor[(6, 7, 15), float64], Tensor[(630), float64]) {
  @func_14028(%var_14029) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(6, 7, 15), float64], Tensor[(630), float64]) */
}

def @func_16860(%var_16857: Tensor[(14, 96), int64], %var_16858: Tensor[(240), float64], %var_16859: Tensor[(14, 96), int64]) -> (Tensor[(189), float64], Tensor[(10, 42), float64], Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64], Tensor[(480), float32], Tensor[(832), int8], Tensor[(35, 4), int64], Tensor[(40, 12), float32], Tensor[(196), int64], Tensor[(14, 96), bool], Tensor[(240), float64], Tensor[(14, 96), float64], Tensor[(4, 112), float64]) {
  @func_16855(%var_16857, %var_16858, %var_16859) /* ty=(Tensor[(189), float64], Tensor[(10, 42), float64], Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64], Tensor[(480), float32], Tensor[(832), int8], Tensor[(35, 4), int64], Tensor[(40, 12), float32], Tensor[(196), int64], Tensor[(14, 96), bool], Tensor[(240), float64], Tensor[(14, 96), float64], Tensor[(4, 112), float64]) */
}

def @func_14476() -> Tensor[(189), float64] {
  %1016 = @func_13268() /* ty=(Tensor[(189), float64],) */;
  %1016.0
}

def @func_11660(%var_11659: Tensor[(15, 2, 1), float64]) -> Tensor[(15, 2, ?), float64] {
  %1021 = fn (%var_11632: Tensor[(15, 2, 1), float64]) -> Tensor[(15, 2, ?), float64] {
    %1017 = cast(%var_11632, dtype="float64") /* ty=Tensor[(15, 2, 1), float64] */;
    %1018 = shape_of(meta[relay.Constant][87] /* ty=Tensor[(15, 2, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1019 = cast(meta[relay.Constant][87] /* ty=Tensor[(15, 2, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 1), float64] */;
    %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%1019, %1020) /* ty=Tensor[(15, 2, ?), float64] */
  };
  %1021(%var_11659) /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_21487() -> (Tensor[(264), float32], Tensor[(189), float64]) {
  %1022 = @func_20793() /* ty=(Tensor[(189), float64],) */;
  %1023 = @func_20826() /* ty=Tensor[(264), float32] */;
  %1024 = %1022.0;
  (%1023, %1024)
}

def @func_19085() -> Tensor[(140), int64] {
  @func_19083() /* ty=Tensor[(140), int64] */
}

def @func_13249(%var_13247: Tensor[(39, 7), float64], %var_13248: Tensor[(1344), int64]) -> (Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) {
  %1038 = fn (%var_13232: Tensor[(39, 7), float64], %var_13235: Tensor[(1344), int64]) -> (Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) {
    %1025 = @func_13224() /* ty=(Tensor[(240), float64],) */;
    %1026 = cast(%var_13232, dtype="float64") /* ty=Tensor[(39, 7), float64] */;
    %1027 = reshape(%1026, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
    %1028 = cast(%var_13235, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %1029 = cast(%var_13235, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %1030 = %1025.0;
    %1031 = cast(%1030, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1032 = reshape(%1028, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
    %1033 = reshape(%1029, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
    %1034 = reshape(%1031, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1035 = @func_7429(%1032, %1033, %1034) /* ty=(Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) */;
    %1036 = @func_1645(%1027) /* ty=Tensor[(7, 13, 3), float64] */;
    %1037 = %1035.3;
    (%1030, %1036, %var_13232, %1037, %var_13235)
  };
  %1038(%var_13247, %var_13248) /* ty=(Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) */
}

def @func_18093(%var_18091: Tensor[(880), float32]) -> (Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(189), float64]) {
  @func_18090(%var_18091) /* ty=(Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(189), float64]) */
}

def @func_15829() -> Tensor[(7, 3, 9), float64] {
  %1040 = fn () -> Tensor[(7, 3, 9), float64] {
    %1039 = @func_14453() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float64], Tensor[(264), float32], Tensor[(15, 2, ?), float64]) */;
    %1039.1
  };
  %1040() /* ty=Tensor[(7, 3, 9), float64] */
}

def @func_14678(%var_14673: Tensor[(44, 2), float64], %var_14674: Tensor[(196), bool], %var_14675: Tensor[(588), bool], %var_14676: Tensor[(80), uint8], %var_14677: Tensor[(1170, 10), float64]) -> (Tensor[(240), float64], Tensor[(390), bool], Tensor[(44, 2), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(264), float32], Tensor[(1170, 10), bool], Tensor[(7, 3, 9), float32]) {
  %1062 = fn (%var_14652: Tensor[(44, 2), float64], %var_14653: Tensor[(196), bool], %var_14654: Tensor[(588), bool], %var_14655: Tensor[(80), uint8], %var_14661: Tensor[(1170, 10), float64]) -> (Tensor[(240), float64], Tensor[(390), bool], Tensor[(44, 2), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(264), float32], Tensor[(1170, 10), bool], Tensor[(7, 3, 9), float32]) {
    %1041 = cast(%var_14652, dtype="float64") /* ty=Tensor[(44, 2), float64] */;
    %1042 = cast(%var_14653, dtype="bool") /* ty=Tensor[(196), bool] */;
    %1043 = cast(%var_14654, dtype="bool") /* ty=Tensor[(588), bool] */;
    %1044 = cast(%var_14655, dtype="uint8") /* ty=Tensor[(80), uint8] */;
    %1045 = cast(meta[relay.Constant][88] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %1046 = cast(meta[relay.Constant][89] /* ty=Tensor[(1170, 1), float64] */, dtype="float64") /* ty=Tensor[(1170, 1), float64] */;
    %1047 = cast(meta[relay.Constant][90] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
    %1048 = reshape(%1041, newshape=[88]) /* ty=Tensor[(88), float64] */;
    %1049 = reshape(%1042, newshape=[196]) /* ty=Tensor[(196), bool] */;
    %1050 = reshape(%1043, newshape=[588]) /* ty=Tensor[(588), bool] */;
    %1051 = reshape(%1044, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint8] */;
    %1052 = reshape(%1045, newshape=[960]) /* ty=Tensor[(960), uint8] */;
    %1053 = reshape(%1046, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %1054 = reshape(%1047, newshape=[264]) /* ty=Tensor[(264), float32] */;
    %1055 = @func_13017(%1048, %1049, %1050, %1051, %1052, %1053, %1054) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(1, 196), bool], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(960), uint8], Tensor[(20, 32), uint64], Tensor[(1170), float64], Tensor[(672), float32], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(80, 780), bool], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) */;
    %1056 = cast(meta[relay.Constant][89] /* ty=Tensor[(1170, 1), float64] */, dtype="bool") /* ty=Tensor[(1170, 1), bool] */;
    %1057 = cast(%var_14661, dtype="bool") /* ty=Tensor[(1170, 10), bool] */;
    %1058 = @func_12846() /* ty=Tensor[(240), float64] */;
    %1059 = %1055.14;
    %1060 = greater_equal(%1056, %1057) /* ty=Tensor[(1170, 10), bool] */;
    %1061 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
    (%1058, %1059, %var_14652, %var_14653, %var_14654, %var_14655, meta[relay.Constant][88] /* ty=Tensor[(960), uint8] */, meta[relay.Constant][90] /* ty=Tensor[(264), float32] */, %1060, %1061)
  };
  %1062(%var_14673, %var_14674, %var_14675, %var_14676, %var_14677) /* ty=(Tensor[(240), float64], Tensor[(390), bool], Tensor[(44, 2), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(264), float32], Tensor[(1170, 10), bool], Tensor[(7, 3, 9), float32]) */
}

def @func_16247() -> (Tensor[(15, 2, ?), float64],) {
  %1063 = @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */;
  %1064 = %1063.1;
  (%1064,)
}

def @func_19323() -> (Tensor[(672), float32], Tensor[(240), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(2, 7, 10), int64]) {
  @func_19321() /* ty=(Tensor[(672), float32], Tensor[(240), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(2, 7, 10), int64]) */
}

def @func_6189(%var_6181: Tensor[(13, 15, 6), float64]) -> Tensor[(13, 15, 6), float64] {
  %1065 = cast(%var_6181, dtype="float64") /* ty=Tensor[(13, 15, 6), float64] */;
  tan(%1065) /* ty=Tensor[(13, 15, 6), float64] */
}

def @func_18971() -> (Tensor[(189), float64], Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) {
  @func_18969() /* ty=(Tensor[(189), float64], Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) */
}

def @func_14133() -> (Tensor[(189), float64],) {
  %1066 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
  %1067 = %1066.0;
  (%1067,)
}

def @func_13209() -> (Tensor[(7, 3, 9), float32],) {
  %1070 = fn () -> (Tensor[(7, 3, 9), float32],) {
    %1068 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
    %1069 = %1068.0;
    (%1069,)
  };
  %1070() /* ty=(Tensor[(7, 3, 9), float32],) */
}

def @func_11799(%var_11798: Tensor[(9, 6, 14), float64]) -> (Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(9, 6, 14), int8]) {
  %1083 = fn (%var_11768: Tensor[(9, 6, 14), float64]) -> (Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(9, 6, 14), int8]) {
    %1071 = cast(meta[relay.Constant][91] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
    %1072 = reshape(%1071, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
    %1073 = cast(%var_11768, dtype="float32") /* ty=Tensor[(9, 6, 14), float32] */;
    %1074 = sinh(%1073) /* ty=Tensor[(9, 6, 14), float32] */;
    %1075 = cast(%var_11768, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
    %1076 = log10(%1075) /* ty=Tensor[(9, 6, 14), float64] */;
    %1077 = cast(%1076, dtype="int8") /* ty=Tensor[(9, 6, 14), int8] */;
    %1078 = shape_of(%1074, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1079 = cast(%1074, dtype="int8") /* ty=Tensor[(9, 6, 14), int8] */;
    %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1081 = @func_3784(%1072) /* ty=Tensor[(5, 13, 6), bool] */;
    %1082 = bitwise_and(%1079, %1080) /* ty=Tensor[(9, 6, 14), int8] */;
    (%1081, meta[relay.Constant][91] /* ty=Tensor[(390), bool] */, %1082)
  };
  %1083(%var_11798) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(9, 6, 14), int8]) */
}

def @func_11951(%var_11946: Tensor[(16, 2, 2), uint8], %var_11947: Tensor[(1344), int64], %var_11948: Tensor[(240), float64], %var_11949: Tensor[(390), bool], %var_11950: Tensor[(880), float32]) -> (Tensor[(16, 2, 2), uint8], Tensor[(1344), int64], Tensor[(240), float64], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(10, 42), bool], Tensor[(16, 2, 2), float32], Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
  %1115 = fn (%var_11896: Tensor[(16, 2, 2), uint8], %var_11903: Tensor[(1344), int64], %var_11904: Tensor[(240), float64], %var_11929: Tensor[(390), bool], %var_11933: Tensor[(880), float32]) -> (Tensor[(16, 2, 2), uint8], Tensor[(1344), int64], Tensor[(240), float64], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(10, 42), bool], Tensor[(16, 2, 2), float32], Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) {
    %1084 = cast(meta[relay.Constant][92] /* ty=Tensor[(16, 2, 2), uint8] */, dtype="uint8") /* ty=Tensor[(16, 2, 2), uint8] */;
    %1085 = shape_of(%var_11896, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1086 = cast(%var_11896, dtype="uint8") /* ty=Tensor[(16, 2, 2), uint8] */;
    %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1088 = cast(meta[relay.Constant][93] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
    %1089 = cast(meta[relay.Constant][93] /* ty=Tensor[(140), int64] */, dtype="int64") /* ty=Tensor[(140), int64] */;
    %1090 = reshape(%1088, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
    %1091 = reshape(%1089, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int64] */;
    %1092 = cast(%var_11903, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %1093 = cast(%var_11903, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %1094 = cast(%var_11904, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1095 = reshape(%1092, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
    %1096 = reshape(%1093, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
    %1097 = reshape(%1094, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1098 = @func_7429(%1095, %1096, %1097) /* ty=(Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) */;
    %1099 = %1098.2;
    %1100 = cast(meta[relay.Constant][94] /* ty=Tensor[(10, 42), float64] */, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
    %1101 = shape_of(%1099, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1102 = cast(%1099, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
    %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1104 = cast(meta[relay.Constant][92] /* ty=Tensor[(16, 2, 2), uint8] */, dtype="float32") /* ty=Tensor[(16, 2, 2), float32] */;
    %1105 = cast(%var_11929, dtype="bool") /* ty=Tensor[(390), bool] */;
    %1106 = reshape(%1105, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), bool] */;
    %1107 = cast(%var_11933, dtype="float32") /* ty=Tensor[(880), float32] */;
    %1108 = reshape(%1107, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
    %1109 = right_shift(%1086, %1087) /* ty=Tensor[(16, 2, 2), uint8] */;
    %1110 = @func_10270(%1090, %1091) /* ty=Tensor[(2, 7, 10), int64] */;
    %1111 = logical_or(%1102, %1103) /* ty=Tensor[(10, 42), bool] */;
    %1112 = erf(%1104) /* ty=Tensor[(16, 2, 2), float32] */;
    %1113 = @func_3784(%1106) /* ty=Tensor[(5, 13, 6), bool] */;
    %1114 = @func_4967(%1108) /* ty=Tensor[(11, 8, 10), float32] */;
    (%1109, %var_11903, %var_11904, %1110, meta[relay.Constant][93] /* ty=Tensor[(140), int64] */, %1111, %1112, %1113, %var_11929, %1114, %var_11933)
  };
  %1115(%var_11946, %var_11947, %var_11948, %var_11949, %var_11950) /* ty=(Tensor[(16, 2, 2), uint8], Tensor[(1344), int64], Tensor[(240), float64], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(10, 42), bool], Tensor[(16, 2, 2), float32], Tensor[(5, 13, 6), bool], Tensor[(390), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */
}

def @func_20859() -> (Tensor[(10, 3), float64], Tensor[(189), float64]) {
  @func_20857() /* ty=(Tensor[(10, 3), float64], Tensor[(189), float64]) */
}

def @func_14359() -> Tensor[(189), uint64] {
  @func_14357() /* ty=Tensor[(189), uint64] */
}

def @func_16218() -> (Tensor[(140), int64],) {
  %1118 = fn () -> (Tensor[(140), int64],) {
    %1116 = @func_15495() /* ty=(Tensor[(189), float64], Tensor[(140), int64]) */;
    %1117 = %1116.1;
    (%1117,)
  };
  %1118() /* ty=(Tensor[(140), int64],) */
}

def @func_15667() -> Tensor[(15, 2, ?), float64] {
  %1119 = fn () -> Tensor[(15, 2, ?), float64] {
    @func_13983() /* ty=Tensor[(15, 2, ?), float64] */
  };
  %1119() /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_13463() -> (Tensor[(240), float64],) {
  @func_13461() /* ty=(Tensor[(240), float64],) */
}

def @func_7429(%var_7418: Tensor[(16, 6, 14), int64], %var_7419: Tensor[(16, 6, 14), int64], %var_7426: Tensor[(240), float64]) -> (Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) {
  %1120 = cast(%var_7419, dtype="int64") /* ty=Tensor[(16, 6, 14), int64] */;
  %1121 = shape_of(%var_7418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1122 = cast(%var_7418, dtype="int64") /* ty=Tensor[(16, 6, 14), int64] */;
  %1123 = dyn.reshape(%1120, %1121, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1124 = cast(meta[relay.Constant][95] /* ty=Tensor[(10, 42), float64] */, dtype="float64") /* ty=Tensor[(10, 42), float64] */;
  %1125 = cast(%var_7426, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1126 = reshape(%1124, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), float64] */;
  %1127 = reshape(%1125, newshape=[8, 30]) /* ty=Tensor[(8, 30), float64] */;
  %1128 = @func_2519(%1126, %1127) /* ty=(Tensor[(5, 6, 14), float32], Tensor[(12, 2, 10), float64], Tensor[(8, 30), float64], Tensor[(12, 2, 10), float64], Tensor[(448), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */;
  %1129 = minimum(%1122, %1123) /* ty=Tensor[(16, 6, 14), int64] */;
  %1130 = %1128.3;
  (%1129, %1130, meta[relay.Constant][95] /* ty=Tensor[(10, 42), float64] */, %var_7426)
}

def @func_16855(%var_16797: Tensor[(14, 96), int64], %var_16798: Tensor[(240), float64], %var_16835: Tensor[(14, 96), int64]) -> (Tensor[(189), float64], Tensor[(10, 42), float64], Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64], Tensor[(480), float32], Tensor[(832), int8], Tensor[(35, 4), int64], Tensor[(40, 12), float32], Tensor[(196), int64], Tensor[(14, 96), bool], Tensor[(240), float64], Tensor[(14, 96), float64], Tensor[(4, 112), float64]) {
  %1131 = cast(%var_16797, dtype="int64") /* ty=Tensor[(14, 96), int64] */;
  %1132 = cast(%var_16797, dtype="int64") /* ty=Tensor[(14, 96), int64] */;
  %1133 = cast(%var_16798, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1134 = reshape(%1131, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
  %1135 = reshape(%1132, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), int64] */;
  %1136 = reshape(%1133, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1137 = @func_7429(%1134, %1135, %1136) /* ty=(Tensor[(16, 6, 14), int64], Tensor[(12, 2, 10), float64], Tensor[(10, 42), float64], Tensor[(240), float64]) */;
  %1138 = cast(meta[relay.Constant][96] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %1139 = reshape(%1138, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %1140 = cast(meta[relay.Constant][97] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %1141 = cast(meta[relay.Constant][97] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %1142 = cast(meta[relay.Constant][98] /* ty=Tensor[(35, 4), int64] */, dtype="int64") /* ty=Tensor[(35, 4), int64] */;
  %1143 = cast(meta[relay.Constant][99] /* ty=Tensor[(4, 112), float64] */, dtype="float64") /* ty=Tensor[(4, 112), float64] */;
  %1144 = cast(meta[relay.Constant][100] /* ty=Tensor[(40, 12), float32] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %1145 = cast(meta[relay.Constant][101] /* ty=Tensor[(196), int64] */, dtype="int64") /* ty=Tensor[(196), int64] */;
  %1146 = reshape(%1140, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %1147 = reshape(%1141, newshape=[8, 13, 8]) /* ty=Tensor[(8, 13, 8), int8] */;
  %1148 = reshape(%1142, newshape=[140]) /* ty=Tensor[(140), int64] */;
  %1149 = reshape(%1143, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1150 = reshape(%1144, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1151 = reshape(%1145, newshape=[196]) /* ty=Tensor[(196), int64] */;
  %1152 = @func_10349(%1146, %1147, %1148, %1149, %1150, %1151) /* ty=(Tensor[(8, 13, 8), int8], Tensor[(2, 7, 10), int64], Tensor[(140), int64], Tensor[(224, 2), float64], Tensor[(66, 9), float32], Tensor[(448), float64], Tensor[(240), float64], Tensor[(240), float64], Tensor[(30), float32], Tensor[(480), float32], Tensor[(7, 14, 2), int64], Tensor[(196), int64]) */;
  %1153 = cast(%var_16835, dtype="bool") /* ty=Tensor[(14, 96), bool] */;
  %1154 = shape_of(%var_16797, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1155 = cast(%var_16797, dtype="bool") /* ty=Tensor[(14, 96), bool] */;
  %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1157 = cast(%var_16835, dtype="float64") /* ty=Tensor[(14, 96), float64] */;
  %1158 = cast(meta[relay.Constant][99] /* ty=Tensor[(4, 112), float64] */, dtype="float64") /* ty=Tensor[(4, 112), float64] */;
  %1159 = @func_14476() /* ty=Tensor[(189), float64] */;
  %1160 = %1137.2;
  %1161 = @func_1645(%1139) /* ty=Tensor[(7, 13, 3), float64] */;
  %1162 = %1152.9;
  %1163 = greater_equal(%1155, %1156) /* ty=Tensor[(14, 96), bool] */;
  %1164 = @func_12846() /* ty=Tensor[(240), float64] */;
  %1165 = asin(%1157) /* ty=Tensor[(14, 96), float64] */;
  %1166 = sin(%1158) /* ty=Tensor[(4, 112), float64] */;
  (%1159, %1160, %var_16798, %1161, meta[relay.Constant][96] /* ty=Tensor[(13, 21), float64] */, %1162, meta[relay.Constant][97] /* ty=Tensor[(832), int8] */, meta[relay.Constant][98] /* ty=Tensor[(35, 4), int64] */, meta[relay.Constant][100] /* ty=Tensor[(40, 12), float32] */, meta[relay.Constant][101] /* ty=Tensor[(196), int64] */, %1163, %1164, %1165, %1166)
}

def @func_10274(%var_10272: Tensor[(2, 7, 10), int64], %var_10273: Tensor[(2, 7, 10), int64]) -> Tensor[(2, 7, 10), int64] {
  @func_10270(%var_10272, %var_10273) /* ty=Tensor[(2, 7, 10), int64] */
}

def @func_21403() -> Tensor[(240), float64] {
  %1167 = fn () -> Tensor[(240), float64] {
    @func_16943() /* ty=Tensor[(240), float64] */
  };
  %1167() /* ty=Tensor[(240), float64] */
}

def @func_15495() -> (Tensor[(189), float64], Tensor[(140), int64]) {
  %1168 = @func_14357() /* ty=Tensor[(189), uint64] */;
  %1169 = cast(%1168, dtype="float64") /* ty=Tensor[(189), float64] */;
  %1170 = @func_15086() /* ty=(Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) */;
  %1171 = sigmoid(%1169) /* ty=Tensor[(189), float64] */;
  %1172 = %1170.2;
  (%1171, %1172)
}

def @func_14519() -> Tensor[(14, 14, 3), uint64] {
  %1174 = fn () -> Tensor[(14, 14, 3), uint64] {
    %1173 = @func_13877() /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(588), uint64]) */;
    %1173.2
  };
  %1174() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @func_21489() -> (Tensor[(264), float32], Tensor[(189), float64]) {
  @func_21487() /* ty=(Tensor[(264), float32], Tensor[(189), float64]) */
}

def @func_21576() -> (Tensor[(189), float64],) {
  @func_21574() /* ty=(Tensor[(189), float64],) */
}

def @func_3643(%var_3639: Tensor[(15, 4, 13), uint64], %var_3640: Tensor[(15, 4, 13), uint64], %var_3641: Tensor[(24, 10), float64], %var_3642: Tensor[(1, 448), float64]) -> (Tensor[(15, 4, 13), uint64], Tensor[(15, 4, 13), bool], Tensor[(12, 2, 10), float64], Tensor[(24, 10), float64], Tensor[(8, 4, 14), float64], Tensor[(1, 448), float64]) {
  %1195 = fn (%var_3613: Tensor[(15, 4, 13), uint64], %var_3614: Tensor[(15, 4, 13), uint64], %var_3623: Tensor[(24, 10), float64], %var_3627: Tensor[(1, 448), float64]) -> (Tensor[(15, 4, 13), uint64], Tensor[(15, 4, 13), bool], Tensor[(12, 2, 10), float64], Tensor[(24, 10), float64], Tensor[(8, 4, 14), float64], Tensor[(1, 448), float64]) {
    %1175 = cast(%var_3614, dtype="uint64") /* ty=Tensor[(15, 4, 13), uint64] */;
    %1176 = shape_of(%var_3613, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1177 = cast(%var_3613, dtype="uint64") /* ty=Tensor[(15, 4, 13), uint64] */;
    %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1179 = cast(%var_3614, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
    %1180 = shape_of(%var_3613, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1181 = cast(%var_3613, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
    %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1183 = cast(%var_3623, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
    %1184 = reshape(%1183, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1185 = @func_365(%1184) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */;
    %1186 = cast(%var_3627, dtype="float64") /* ty=Tensor[(1, 448), float64] */;
    %1187 = %1185.4;
    %1188 = cast(%1187, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
    %1189 = reshape(%1186, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), float64] */;
    %1190 = reshape(%1188, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1191 = @func_231(%1189, %1190) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %1192 = logical_xor(%1177, %1178) /* ty=Tensor[(15, 4, 13), uint64] */;
    %1193 = not_equal(%1181, %1182) /* ty=Tensor[(15, 4, 13), bool] */;
    %1194 = %1191.0;
    (%1192, %1193, %1187, %var_3623, %1194, %var_3627)
  };
  %1195(%var_3639, %var_3640, %var_3641, %var_3642) /* ty=(Tensor[(15, 4, 13), uint64], Tensor[(15, 4, 13), bool], Tensor[(12, 2, 10), float64], Tensor[(24, 10), float64], Tensor[(8, 4, 14), float64], Tensor[(1, 448), float64]) */
}

def @func_2849(%var_2845: Tensor[(11, 6, 9), float32], %var_2846: Tensor[(11, 6, 9), float32], %var_2847: Tensor[(224, 2), float64], %var_2848: Tensor[(240), float64]) -> (Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) {
  %1207 = fn (%var_2812: Tensor[(11, 6, 9), float32], %var_2813: Tensor[(11, 6, 9), float32], %var_2835: Tensor[(224, 2), float64], %var_2836: Tensor[(240), float64]) -> (Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) {
    %1196 = cast(%var_2813, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
    %1197 = shape_of(%var_2812, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1198 = cast(%var_2812, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
    %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1200 = cast(%var_2835, dtype="float64") /* ty=Tensor[(224, 2), float64] */;
    %1201 = cast(%var_2836, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1202 = reshape(%1200, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), float64] */;
    %1203 = reshape(%1201, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1204 = @func_231(%1202, %1203) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %1205 = power(%1198, %1199) /* ty=Tensor[(11, 6, 9), float32] */;
    %1206 = %1204.2;
    (%1205, %1206, %var_2835, %var_2836)
  };
  %1207(%var_2845, %var_2846, %var_2847, %var_2848) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */
}

def @func_18429(%var_18425: Tensor[(80), uint8], %var_18426: Tensor[(20, 48), uint8], %var_18427: Tensor[(88), float64], %var_18428: Tensor[(390, 30), float64]) -> (Tensor[(11, 9, 12), uint64], Tensor[(14, 14, 3), uint64], Tensor[(264), float32], Tensor[(15, 2, ?), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(20, 48), uint8], Tensor[(44, 2), float64], Tensor[(88), float64], Tensor[(196), bool], Tensor[(390, 30), float64]) {
  @func_18423(%var_18425, %var_18426, %var_18427, %var_18428) /* ty=(Tensor[(11, 9, 12), uint64], Tensor[(14, 14, 3), uint64], Tensor[(264), float32], Tensor[(15, 2, ?), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(20, 48), uint8], Tensor[(44, 2), float64], Tensor[(88), float64], Tensor[(196), bool], Tensor[(390, 30), float64]) */
}

def @func_13026(%var_13019: Tensor[(88), float64], %var_13020: Tensor[(196), bool], %var_13021: Tensor[(588), bool], %var_13022: Tensor[(80, 1), uint8], %var_13023: Tensor[(960), uint8], %var_13024: Tensor[(1170), float64], %var_13025: Tensor[(264), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(1, 196), bool], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(960), uint8], Tensor[(20, 32), uint64], Tensor[(1170), float64], Tensor[(672), float32], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(80, 780), bool], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) {
  @func_13017(%var_13019, %var_13020, %var_13021, %var_13022, %var_13023, %var_13024, %var_13025) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(1, 196), bool], Tensor[(88), float64], Tensor[(196), bool], Tensor[(588), bool], Tensor[(240), float64], Tensor[(960), uint8], Tensor[(20, 32), uint64], Tensor[(1170), float64], Tensor[(672), float32], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(80, 780), bool], Tensor[(5, 13, 6), bool], Tensor[(390), bool]) */
}

def @func_16192(%var_16190: Tensor[(440, 2), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(11, 8, 10), float32], Tensor[(440, 2), float32]) {
  @func_16189(%var_16190) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(11, 8, 10), float32], Tensor[(440, 2), float32]) */
}

def @func_13983() -> Tensor[(15, 2, ?), float64] {
  %1208 = @func_13420() /* ty=(Tensor[(189), uint64], Tensor[(15, 2, ?), float64], Tensor[(10, 3), float64]) */;
  %1208.1
}

def @func_20752() -> Tensor[(189), float64] {
  @func_20750() /* ty=Tensor[(189), float64] */
}

def @func_20233() -> Tensor[(264), float32] {
  @func_20231() /* ty=Tensor[(264), float32] */
}

def @func_16723() -> (Tensor[(672), float32],) {
  @func_16721() /* ty=(Tensor[(672), float32],) */
}

def @func_17488(%var_17484: Tensor[(390), bool], %var_17485: Tensor[(88), float64], %var_17486: Tensor[(640), uint64], %var_17487: Tensor[(780), float64]) -> (Tensor[(7, 3, 9), float32], Tensor[(12, 13, 8), int32], Tensor[(1248), float64], Tensor[(390), bool], Tensor[(240), float64], Tensor[(672), float32], Tensor[(240, 448), int32], Tensor[(88), float64], Tensor[(98, 2), bool], Tensor[(294, 2), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(640), uint64], Tensor[(1170), float64], Tensor[(780), float64]) {
  @func_17482(%var_17484, %var_17485, %var_17486, %var_17487) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(12, 13, 8), int32], Tensor[(1248), float64], Tensor[(390), bool], Tensor[(240), float64], Tensor[(672), float32], Tensor[(240, 448), int32], Tensor[(88), float64], Tensor[(98, 2), bool], Tensor[(294, 2), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(640), uint64], Tensor[(1170), float64], Tensor[(780), float64]) */
}

def @func_8381(%var_8379: Tensor[(12, 2, 11), float32], %var_8380: Tensor[(12, 2, 11), float32]) -> Tensor[(12, 2, 11), float32] {
  %1213 = fn (%var_8368: Tensor[(12, 2, 11), float32], %var_8369: Tensor[(12, 2, 11), float32]) -> Tensor[(12, 2, 11), float32] {
    %1209 = cast(%var_8369, dtype="float32") /* ty=Tensor[(12, 2, 11), float32] */;
    %1210 = shape_of(%var_8368, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1211 = cast(%var_8368, dtype="float32") /* ty=Tensor[(12, 2, 11), float32] */;
    %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%1211, %1212) /* ty=Tensor[(12, 2, 11), float32] */
  };
  %1213(%var_8379, %var_8380) /* ty=Tensor[(12, 2, 11), float32] */
}

def @func_15727() -> (Tensor[(240), float64],) {
  %1214 = @func_13224() /* ty=(Tensor[(240), float64],) */;
  %1215 = %1214.0;
  (%1215,)
}

def @func_17099() -> (Tensor[(672), float32],) {
  @func_17097() /* ty=(Tensor[(672), float32],) */
}

def @func_16944() -> Tensor[(240), float64] {
  %1217 = fn () -> Tensor[(240), float64] {
    %1216 = @func_12586() /* ty=(Tensor[(16, 2, 16), float64], Tensor[(7, 3, 9), uint64], Tensor[(189), uint64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %1216.4
  };
  %1217() /* ty=Tensor[(240), float64] */
}

def @func_231(%var_219: Tensor[(8, 4, 14), float64], %var_229: Tensor[(240), float64]) -> (Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) {
  %1218 = cast(%var_219, dtype="float64") /* ty=Tensor[(8, 4, 14), float64] */;
  %1219 = cast(%var_229, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1220 = cast(%var_229, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1221 = reshape(%1219, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %1222 = reshape(%1220, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %1223 = @func_88(%1221, %1222) /* ty=(Tensor[(12, 2, 10), float64],) */;
  %1224 = atanh(%1218) /* ty=Tensor[(8, 4, 14), float64] */;
  %1225 = %1223.0;
  (%1224, %1225, %var_229)
}

def @func_18355(%var_18354: Tensor[(1248), float64]) -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(1248), float64]) {
  %1234 = fn (%var_18346: Tensor[(1248), float64]) -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(1248), float64]) {
    %1226 = @func_13224() /* ty=(Tensor[(240), float64],) */;
    %1227 = %1226.0;
    %1228 = cast(%1227, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1229 = cast(%var_18346, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %1230 = reshape(%1228, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1231 = reshape(%1229, newshape=[1248]) /* ty=Tensor[(1248), float64] */;
    %1232 = @func_7996(%1230, %1231) /* ty=(Tensor[(16, 7, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(390), bool], Tensor[(1248), float64], Tensor[(1, 390), bool]) */;
    %1233 = %1232.2;
    (%1227, %1233, %var_18346)
  };
  %1234(%var_18354) /* ty=(Tensor[(240), float64], Tensor[(240), float64], Tensor[(1248), float64]) */
}

def @func_2523(%var_2521: Tensor[(5, 6, 14), float64], %var_2522: Tensor[(8, 30), float64]) -> (Tensor[(5, 6, 14), float32], Tensor[(12, 2, 10), float64], Tensor[(8, 30), float64], Tensor[(12, 2, 10), float64], Tensor[(448), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) {
  @func_2519(%var_2521, %var_2522) /* ty=(Tensor[(5, 6, 14), float32], Tensor[(12, 2, 10), float64], Tensor[(8, 30), float64], Tensor[(12, 2, 10), float64], Tensor[(448), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */
}

def @func_17174() -> Tensor[(189), uint64] {
  @func_17172() /* ty=Tensor[(189), uint64] */
}

def @func_18056() -> (Tensor[(672), float32],) {
  @func_18054() /* ty=(Tensor[(672), float32],) */
}

def @func_6192(%var_6190: Tensor[(13, 15, 6), float64]) -> Tensor[(13, 15, 6), float64] {
  @func_6189(%var_6190) /* ty=Tensor[(13, 15, 6), float64] */
}

def @func_18895() -> (Tensor[(189), float64], Tensor[(240), float64]) {
  %1238 = fn () -> (Tensor[(189), float64], Tensor[(240), float64]) {
    %1235 = @func_13432() /* ty=(Tensor[(189), float64],) */;
    %1236 = %1235.0;
    %1237 = @func_16943() /* ty=Tensor[(240), float64] */;
    (%1236, %1237)
  };
  %1238() /* ty=(Tensor[(189), float64], Tensor[(240), float64]) */
}

def @func_16014() -> Tensor[(189), float64] {
  %1239 = fn () -> Tensor[(189), float64] {
    @func_13589() /* ty=Tensor[(189), float64] */
  };
  %1239() /* ty=Tensor[(189), float64] */
}

def @func_217(%var_215: Tensor[(3, 14, 7), float32], %var_216: Tensor[(4, 60), float64]) -> (Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) {
  @func_213(%var_215, %var_216) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */
}

def @func_16557() -> (Tensor[(15, 2, ?), float64],) {
  %1242 = fn () -> (Tensor[(15, 2, ?), float64],) {
    %1240 = @func_16247() /* ty=(Tensor[(15, 2, ?), float64],) */;
    %1241 = %1240.0;
    (%1241,)
  };
  %1242() /* ty=(Tensor[(15, 2, ?), float64],) */
}

def @func_20359() -> (Tensor[(7, 3, 9), float32],) {
  %1243 = @func_19215() /* ty=(Tensor[(14, 14, 3), uint64], Tensor[(7, 3, 9), float32]) */;
  %1244 = %1243.1;
  (%1244,)
}

def @func_3396(%var_3392: Tensor[(12, 5, 13), float64], %var_3393: Tensor[(12, 5, 13), float64], %var_3394: Tensor[(240, 1), float64], %var_3395: Tensor[(672), float32]) -> (Tensor[(12, 5, 13), float64], Tensor[(240), float64], Tensor[(594), float32], Tensor[(1, 8, 14), float32], Tensor[(240, 448), int32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(12, 5, 13), float64], Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), bool], Tensor[(224, 2), float64], Tensor[(16, 7, 6), bool], Tensor[(12, 2, 10), float64]) {
  %1324 = fn (%var_3204: Tensor[(12, 5, 13), float64], %var_3205: Tensor[(12, 5, 13), float64], %var_3241: Tensor[(240, 1), float64], %var_3317: Tensor[(672), float32]) -> (Tensor[(12, 5, 13), float64], Tensor[(240), float64], Tensor[(594), float32], Tensor[(1, 8, 14), float32], Tensor[(240, 448), int32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(12, 5, 13), float64], Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), bool], Tensor[(224, 2), float64], Tensor[(16, 7, 6), bool], Tensor[(12, 2, 10), float64]) {
    %1245 = cast(%var_3205, dtype="float64") /* ty=Tensor[(12, 5, 13), float64] */;
    %1246 = shape_of(%var_3204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1247 = cast(%var_3204, dtype="float64") /* ty=Tensor[(12, 5, 13), float64] */;
    %1248 = dyn.reshape(%1245, %1246, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1249 = cast(meta[relay.Constant][102] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1250 = cast(meta[relay.Constant][102] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1251 = cast(meta[relay.Constant][103] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1252 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
    %1253 = reshape(%1249, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
    %1254 = reshape(%1250, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
    %1255 = reshape(%1251, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
    %1256 = reshape(%1252, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1257 = @func_2844(%1253, %1254, %1255, %1256) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
    %1258 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
    %1259 = reshape(%1258, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1260 = @func_365(%1259) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */;
    %1261 = cast(meta[relay.Constant][103] /* ty=Tensor[(448), float64] */, dtype="int32") /* ty=Tensor[(448), int32] */;
    %1262 = cast(%var_3241, dtype="int32") /* ty=Tensor[(240, 1), int32] */;
    %1263 = cast(meta[relay.Constant][104] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
    %1264 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
    %1265 = reshape(%1263, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float32] */;
    %1266 = reshape(%1264, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
    %1267 = @func_213(%1265, %1266) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(12, 2, 10), float64], Tensor[(4, 60), bool]) */;
    %1268 = cast(meta[relay.Constant][103] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1269 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
    %1270 = reshape(%1268, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), float64] */;
    %1271 = reshape(%1269, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1272 = @func_231(%1270, %1271) /* ty=(Tensor[(8, 4, 14), float64], Tensor[(12, 2, 10), float64], Tensor[(240), float64]) */;
    %1273 = cast(meta[relay.Constant][102] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1274 = cast(meta[relay.Constant][102] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1275 = cast(meta[relay.Constant][103] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1276 = %1257.3;
    %1277 = cast(%1276, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1278 = reshape(%1273, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
    %1279 = reshape(%1274, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
    %1280 = reshape(%1275, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
    %1281 = reshape(%1277, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1282 = @func_2844(%1278, %1279, %1280, %1281) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
    %1283 = cast(%var_3205, dtype="float64") /* ty=Tensor[(12, 5, 13), float64] */;
    %1284 = cast(%var_3317, dtype="float32") /* ty=Tensor[(672), float32] */;
    %1285 = reshape(%1284, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
    %1286 = @func_1355(%1285) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
    %1287 = cast(%var_3317, dtype="float32") /* ty=Tensor[(672), float32] */;
    %1288 = reshape(%1287, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
    %1289 = @func_1355(%1288) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
    %1290 = %1289.0;
    %1291 = cast(%var_3317, dtype="bool") /* ty=Tensor[(672), bool] */;
    %1292 = shape_of(%1290, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1293 = cast(%1290, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
    %1294 = dyn.reshape(%1291, %1292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1295 = cast(meta[relay.Constant][102] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1296 = cast(meta[relay.Constant][102] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1297 = cast(meta[relay.Constant][103] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1298 = %1272.2;
    %1299 = cast(%1298, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1300 = reshape(%1295, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
    %1301 = reshape(%1296, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
    %1302 = reshape(%1297, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
    %1303 = reshape(%1299, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1304 = @func_2844(%1300, %1301, %1302, %1303) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
    %1305 = cast(%1290, dtype="float32") /* ty=Tensor[(16, 7, 6), float32] */;
    %1306 = reshape(%1305, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), float32] */;
    %1307 = @func_1355(%1306) /* ty=(Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) */;
    %1308 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
    %1309 = cast(%var_3241, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
    %1310 = reshape(%1308, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %1311 = reshape(%1309, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %1312 = @func_88(%1310, %1311) /* ty=(Tensor[(12, 2, 10), float64],) */;
    %1313 = floor_mod(%1247, %1248) /* ty=Tensor[(12, 5, 13), float64] */;
    %1314 = %1260.0;
    %1315 = bitwise_or(%1261, %1262) /* ty=Tensor[(240, 448), int32] */;
    %1316 = %1267.0;
    %1317 = %1282.2;
    %1318 = log(%1283) /* ty=Tensor[(12, 5, 13), float64] */;
    %1319 = %1286.1;
    %1320 = logical_and(%1293, %1294) /* ty=Tensor[(16, 7, 6), bool] */;
    %1321 = %1304.2;
    %1322 = %1307.1;
    %1323 = %1312.0;
    (%1313, %1276, meta[relay.Constant][102] /* ty=Tensor[(594), float32] */, %1314, %1315, %1316, meta[relay.Constant][104] /* ty=Tensor[(294), float32] */, %1298, %1317, %1318, %1319, %1320, %1321, %1322, %1323)
  };
  %1324(%var_3392, %var_3393, %var_3394, %var_3395) /* ty=(Tensor[(12, 5, 13), float64], Tensor[(240), float64], Tensor[(594), float32], Tensor[(1, 8, 14), float32], Tensor[(240, 448), int32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(12, 5, 13), float64], Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), bool], Tensor[(224, 2), float64], Tensor[(16, 7, 6), bool], Tensor[(12, 2, 10), float64]) */
}

def @func_8581(%var_8579: Tensor[(1, 14, 14), bool], %var_8580: Tensor[(3, 14, 14), bool]) -> Tensor[(3, 14, 14), bool] {
  @func_8577(%var_8579, %var_8580) /* ty=Tensor[(3, 14, 14), bool] */
}

def @func_17408() -> (Tensor[(15, 2, ?), float64],) {
  @func_17406() /* ty=(Tensor[(15, 2, ?), float64],) */
}

def @func_19516() -> (Tensor[(15, 2, ?), float64], Tensor[(15, 2, ?), float64], Tensor[(14, 14, 3), uint64]) {
  %1331 = fn () -> (Tensor[(15, 2, ?), float64], Tensor[(15, 2, ?), float64], Tensor[(14, 14, 3), uint64]) {
    %1325 = @func_16556() /* ty=(Tensor[(15, 2, ?), float64],) */;
    %1326 = @func_17830() /* ty=(Tensor[(672), float32], Tensor[(15, 2, ?), float64]) */;
    %1327 = @func_18969() /* ty=(Tensor[(189), float64], Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) */;
    %1328 = %1325.0;
    %1329 = %1326.1;
    %1330 = %1327.1;
    (%1328, %1329, %1330)
  };
  %1331() /* ty=(Tensor[(15, 2, ?), float64], Tensor[(15, 2, ?), float64], Tensor[(14, 14, 3), uint64]) */
}

def @func_17319() -> (Tensor[(7, 3, 9), float32],) {
  %1332 = @func_13208() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %1333 = %1332.0;
  (%1333,)
}

def @func_19321() -> (Tensor[(672), float32], Tensor[(240), float64], Tensor[(7, 3, 9), float32], Tensor[(14, 14, 3), uint64], Tensor[(2, 7, 10), int64]) {
  %1334 = @func_15253() /* ty=(Tensor[(672), float32],) */;
  %1335 = @func_15086() /* ty=(Tensor[(240), float32], Tensor[(2, 7, 10), int64], Tensor[(140), int64]) */;
  %1336 = %1334.0;
  %1337 = @func_18236() /* ty=Tensor[(240), float64] */;
  %1338 = @func_13619() /* ty=Tensor[(7, 3, 9), float32] */;
  %1339 = @func_18125() /* ty=Tensor[(14, 14, 3), uint64] */;
  %1340 = %1335.1;
  (%1336, %1337, %1338, %1339, %1340)
}

def @func_18125() -> Tensor[(14, 14, 3), uint64] {
  @func_14518() /* ty=Tensor[(14, 14, 3), uint64] */
}

def @func_20108(%var_20091: Tensor[(273), float64]) -> (Tensor[(15, 2, ?), float64], Tensor[(240), float64], Tensor[(273), float64], Tensor[(84, 16), int64]) {
  %1341 = cast(%var_20091, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1342 = cast(meta[relay.Constant][105] /* ty=Tensor[(84, 16), int64] */, dtype="int64") /* ty=Tensor[(84, 16), int64] */;
  %1343 = reshape(%1341, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %1344 = reshape(%1342, newshape=[1344]) /* ty=Tensor[(1344), int64] */;
  %1345 = @func_13246(%1343, %1344) /* ty=(Tensor[(240), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(240), float64], Tensor[(1344), int64]) */;
  %1346 = @func_17370() /* ty=Tensor[(15, 2, ?), float64] */;
  %1347 = %1345.3;
  (%1346, %1347, %var_20091, meta[relay.Constant][105] /* ty=Tensor[(84, 16), int64] */)
}

def @func_19986() -> (Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) {
  %1352 = fn () -> (Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) {
    %1348 = @func_19343() /* ty=(Tensor[(14, 14, 3), uint64],) */;
    %1349 = @func_12660() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(189), float64]) */;
    %1350 = %1348.0;
    %1351 = %1349.1;
    (%1350, %1351)
  };
  %1352() /* ty=(Tensor[(14, 14, 3), uint64], Tensor[(189), float64]) */
}

def @func_10270(%var_10264: Tensor[(2, 7, 10), int64], %var_10265: Tensor[(2, 7, 10), int64]) -> Tensor[(2, 7, 10), int64] {
  %1353 = cast(%var_10265, dtype="int64") /* ty=Tensor[(2, 7, 10), int64] */;
  %1354 = shape_of(%var_10264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1355 = cast(%var_10264, dtype="int64") /* ty=Tensor[(2, 7, 10), int64] */;
  %1356 = dyn.reshape(%1353, %1354, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%1355, %1356) /* ty=Tensor[(2, 7, 10), int64] */
}

def @func_1846(%var_1844: Tensor[(3, 9, 5), int8], %var_1845: Tensor[(3, 9, 5), int8]) -> Tensor[(3, 9, 5), int8] {
  %1361 = fn (%var_1838: Tensor[(3, 9, 5), int8], %var_1839: Tensor[(3, 9, 5), int8]) -> Tensor[(3, 9, 5), int8] {
    %1357 = cast(%var_1839, dtype="int8") /* ty=Tensor[(3, 9, 5), int8] */;
    %1358 = shape_of(%var_1838, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1359 = cast(%var_1838, dtype="int8") /* ty=Tensor[(3, 9, 5), int8] */;
    %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_or(%1359, %1360) /* ty=Tensor[(3, 9, 5), int8] */
  };
  %1361(%var_1844, %var_1845) /* ty=Tensor[(3, 9, 5), int8] */
}

def @func_17371() -> Tensor[(15, 2, ?), float64] {
  %1362 = fn () -> Tensor[(15, 2, ?), float64] {
    @func_15666() /* ty=Tensor[(15, 2, ?), float64] */
  };
  %1362() /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_20257() -> (Tensor[(672), float32], Tensor[(7, 3, 9), float32], Tensor[(147, 2), float32]) {
  %1369 = fn () -> (Tensor[(672), float32], Tensor[(7, 3, 9), float32], Tensor[(147, 2), float32]) {
    %1363 = @func_16721() /* ty=(Tensor[(672), float32],) */;
    %1364 = cast(meta[relay.Constant][106] /* ty=Tensor[(147, 2), float32] */, dtype="float32") /* ty=Tensor[(147, 2), float32] */;
    %1365 = reshape(%1364, newshape=[294]) /* ty=Tensor[(294), float32] */;
    %1366 = @func_14082(%1365) /* ty=(Tensor[(189), float64], Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64]) */;
    %1367 = %1363.0;
    %1368 = %1366.1;
    (%1367, %1368, meta[relay.Constant][106] /* ty=Tensor[(147, 2), float32] */)
  };
  %1369() /* ty=(Tensor[(672), float32], Tensor[(7, 3, 9), float32], Tensor[(147, 2), float32]) */
}

def @func_14738(%var_14737: Tensor[(80), uint8]) -> (Tensor[(240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(960), uint8]) {
  %1377 = fn (%var_14724: Tensor[(80), uint8]) -> (Tensor[(240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(960), uint8]) {
    %1370 = @func_13461() /* ty=(Tensor[(240), float64],) */;
    %1371 = cast(%var_14724, dtype="uint8") /* ty=Tensor[(80), uint8] */;
    %1372 = cast(meta[relay.Constant][107] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %1373 = reshape(%1371, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
    %1374 = reshape(%1372, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), uint8] */;
    %1375 = %1370.0;
    %1376 = @func_1313(%1373, %1374) /* ty=Tensor[(12, 16, 5), uint8] */;
    (%1375, %1376, %var_14724, meta[relay.Constant][107] /* ty=Tensor[(960), uint8] */)
  };
  %1377(%var_14737) /* ty=(Tensor[(240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(960), uint8]) */
}

def @func_13433() -> (Tensor[(189), float64],) {
  %1380 = fn () -> (Tensor[(189), float64],) {
    %1378 = @func_13268() /* ty=(Tensor[(189), float64],) */;
    %1379 = %1378.0;
    (%1379,)
  };
  %1380() /* ty=(Tensor[(189), float64],) */
}

def @func_19680(%var_19678: Tensor[(6, 14, 14), float64], %var_19679: Tensor[(6, 14, 14), float64]) -> Tensor[(6, 14, 14), bool] {
  @func_19676(%var_19678, %var_19679) /* ty=Tensor[(6, 14, 14), bool] */
}

def @func_16517(%var_16512: Tensor[(88), float64], %var_16513: Tensor[(49, 4), bool], %var_16514: Tensor[(960), uint8], %var_16515: Tensor[(1, 1170), float64], %var_16516: Tensor[(756), float64]) -> (Tensor[(10, 3), float64], Tensor[(240), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(1170), float64], Tensor[(88), float64], Tensor[(49, 4), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(7, 3, 9), float32], Tensor[(189), uint64], Tensor[(264), float32], Tensor[(40, 10), uint32], Tensor[(390), bool], Tensor[(756), float64], Tensor[(1, 1170), float64]) {
  @func_16510(%var_16512, %var_16513, %var_16514, %var_16515, %var_16516) /* ty=(Tensor[(10, 3), float64], Tensor[(240), float64], Tensor[(12, 2, 11), float32], Tensor[(264), float32], Tensor[(1170), float64], Tensor[(88), float64], Tensor[(49, 4), bool], Tensor[(588), bool], Tensor[(80), uint8], Tensor[(960), uint8], Tensor[(7, 3, 9), float32], Tensor[(189), uint64], Tensor[(264), float32], Tensor[(40, 10), uint32], Tensor[(390), bool], Tensor[(756), float64], Tensor[(1, 1170), float64]) */
}

def @func_18824() -> Tensor[(588), uint64] {
  %1382 = fn () -> Tensor[(588), uint64] {
    %1381 = @func_15686() /* ty=(Tensor[(240), float64], Tensor[(588), uint64]) */;
    %1381.1
  };
  %1382() /* ty=Tensor[(588), uint64] */
}

def @func_20826() -> Tensor[(264), float32] {
  @func_18791() /* ty=Tensor[(264), float32] */
}

def @func_21322() -> Tensor[(15, 2, ?), float64] {
  %1384 = fn () -> Tensor[(15, 2, ?), float64] {
    %1383 = @func_18753() /* ty=(Tensor[(15, 2, ?), float64],) */;
    %1383.0
  };
  %1384() /* ty=Tensor[(15, 2, ?), float64] */
}

def @func_14293() -> (Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) {
  @func_14291() /* ty=(Tensor[(7, 3, 9), float32], Tensor[(12, 2, 10), float64], Tensor[(294), float32], Tensor[(240), float64], Tensor[(16, 7, 6), bool], Tensor[(672), float32]) */
}

def @func_14568() -> Tensor[(189), float64] {
  @func_14566() /* ty=Tensor[(189), float64] */
}

def @func_16151() -> (Tensor[(2, 7, 10), int64], Tensor[(2, 7, 10), int64]) {
  @func_16149() /* ty=(Tensor[(2, 7, 10), int64], Tensor[(2, 7, 10), int64]) */
}

def @func_17064() -> Tensor[(240), float64] {
  %1386 = fn () -> Tensor[(240), float64] {
    %1385 = @func_14491() /* ty=(Tensor[(240), float64], Tensor[(11, 8, 10), float32], Tensor[(880), float32]) */;
    %1385.0
  };
  %1386() /* ty=Tensor[(240), float64] */
}

def @func_20111(%var_20109: Tensor[(273), float64]) -> (Tensor[(15, 2, ?), float64], Tensor[(240), float64], Tensor[(273), float64], Tensor[(84, 16), int64]) {
  @func_20108(%var_20109) /* ty=(Tensor[(15, 2, ?), float64], Tensor[(240), float64], Tensor[(273), float64], Tensor[(84, 16), int64]) */
}

def @func_17172() -> Tensor[(189), uint64] {
  @func_14357() /* ty=Tensor[(189), uint64] */
}

def @func_13520() -> (Tensor[(189), uint64], Tensor[(240), float32], Tensor[(189), float64]) {
  @func_13518() /* ty=(Tensor[(189), uint64], Tensor[(240), float32], Tensor[(189), float64]) */
}

def @func_18627(%var_18625: Tensor[(832), int8], %var_18626: Tensor[(196), int64]) -> (Tensor[(189), float64], Tensor[(1, 480), float32], Tensor[(832), int8], Tensor[(196), int64]) {
  @func_18623(%var_18625, %var_18626) /* ty=(Tensor[(189), float64], Tensor[(1, 480), float32], Tensor[(832), int8], Tensor[(196), int64]) */
}

def @func_10526(%var_10516: Tensor[(2, 4, 11), float64], %var_10517: Tensor[(1, 196), bool], %var_10518: Tensor[(588), bool], %var_10519: Tensor[(1, 240), float64], %var_10520: Tensor[(80), uint8], %var_10521: Tensor[(480, 2), uint8], %var_10522: Tensor[(640), uint64], %var_10523: Tensor[(1170), float64], %var_10524: Tensor[(780), float64], %var_10525: Tensor[(672), float32]) -> (Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) {
  %1427 = fn (%var_10414: Tensor[(2, 4, 11), float64], %var_10421: Tensor[(1, 196), bool], %var_10422: Tensor[(588), bool], %var_10443: Tensor[(1, 240), float64], %var_10455: Tensor[(80), uint8], %var_10456: Tensor[(480, 2), uint8], %var_10461: Tensor[(640), uint64], %var_10471: Tensor[(1170), float64], %var_10488: Tensor[(780), float64], %var_10489: Tensor[(672), float32]) -> (Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) {
    %1387 = cast(%var_10421, dtype="bool") /* ty=Tensor[(1, 196), bool] */;
    %1388 = cast(%var_10422, dtype="bool") /* ty=Tensor[(588), bool] */;
    %1389 = reshape(%1387, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), bool] */;
    %1390 = reshape(%1388, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), bool] */;
    %1391 = cast(meta[relay.Constant][108] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %1392 = reshape(%1391, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), float32] */;
    %1393 = cast(%var_10443, dtype="float64") /* ty=Tensor[(1, 240), float64] */;
    %1394 = reshape(%1393, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1395 = @func_365(%1394) /* ty=(Tensor[(1, 8, 14), float32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(12, 2, 10), float64]) */;
    %1396 = cast(%var_10455, dtype="uint8") /* ty=Tensor[(80), uint8] */;
    %1397 = cast(%var_10456, dtype="uint8") /* ty=Tensor[(480, 2), uint8] */;
    %1398 = reshape(%1396, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
    %1399 = reshape(%1397, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), uint8] */;
    %1400 = cast(%var_10461, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %1401 = cast(%var_10461, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %1402 = reshape(%1400, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), uint64] */;
    %1403 = reshape(%1401, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), uint64] */;
    %1404 = @func_4521(%1402, %1403) /* ty=(Tensor[(8, 10, 8), bool],) */;
    %1405 = cast(%var_10471, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %1406 = reshape(%1405, newshape=[13, 15, 6]) /* ty=Tensor[(13, 15, 6), float64] */;
    %1407 = cast(%var_10414, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
    %1408 = asin(%1407) /* ty=Tensor[(2, 4, 11), float64] */;
    %1409 = cast(%1408, dtype="float64") /* ty=Tensor[(2, 4, 11), float64] */;
    %1410 = cast(%var_10488, dtype="float64") /* ty=Tensor[(780), float64] */;
    %1411 = cast(%var_10488, dtype="float64") /* ty=Tensor[(780), float64] */;
    %1412 = cast(%var_10443, dtype="float64") /* ty=Tensor[(1, 240), float64] */;
    %1413 = cast(%var_10489, dtype="float32") /* ty=Tensor[(672), float32] */;
    %1414 = reshape(%1410, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), float64] */;
    %1415 = reshape(%1411, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), float64] */;
    %1416 = reshape(%1412, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
    %1417 = reshape(%1413, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %1418 = @func_3391(%1414, %1415, %1416, %1417) /* ty=(Tensor[(12, 5, 13), float64], Tensor[(240), float64], Tensor[(594), float32], Tensor[(1, 8, 14), float32], Tensor[(240, 448), int32], Tensor[(3, 14, 7), float32], Tensor[(294), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(12, 5, 13), float64], Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), bool], Tensor[(224, 2), float64], Tensor[(16, 7, 6), bool], Tensor[(12, 2, 10), float64]) */;
    %1419 = @func_8577(%1389, %1390) /* ty=Tensor[(3, 14, 14), bool] */;
    %1420 = @func_4967(%1392) /* ty=Tensor[(11, 8, 10), float32] */;
    %1421 = %1395.1;
    %1422 = @func_1313(%1398, %1399) /* ty=Tensor[(12, 16, 5), uint8] */;
    %1423 = %1404.0;
    %1424 = @func_6189(%1406) /* ty=Tensor[(13, 15, 6), float64] */;
    %1425 = log(%1409) /* ty=Tensor[(2, 4, 11), float64] */;
    %1426 = %1418.4;
    (%1419, %var_10421, %var_10422, %1420, meta[relay.Constant][108] /* ty=Tensor[(880), float32] */, %1421, %var_10443, %1422, %var_10455, %var_10456, %1423, %var_10461, %1424, %var_10471, %1425, %1426, %var_10488, %var_10489)
  };
  %1427(%var_10516, %var_10517, %var_10518, %var_10519, %var_10520, %var_10521, %var_10522, %var_10523, %var_10524, %var_10525) /* ty=(Tensor[(3, 14, 14), bool], Tensor[(1, 196), bool], Tensor[(588), bool], Tensor[(11, 8, 10), float32], Tensor[(880), float32], Tensor[(3, 14, 7), float32], Tensor[(1, 240), float64], Tensor[(12, 16, 5), uint8], Tensor[(80), uint8], Tensor[(480, 2), uint8], Tensor[(8, 10, 8), bool], Tensor[(640), uint64], Tensor[(13, 15, 6), float64], Tensor[(1170), float64], Tensor[(2, 4, 11), float64], Tensor[(240, 448), int32], Tensor[(780), float64], Tensor[(672), float32]) */
}

def @func_13785(%var_13783: Tensor[(189), float64]) -> (Tensor[(189), bool], Tensor[(240), float64], Tensor[(273), float64], Tensor[(1344), int64], Tensor[(240), float32], Tensor[(189), float64]) {
  @func_13782(%var_13783) /* ty=(Tensor[(189), bool], Tensor[(240), float64], Tensor[(273), float64], Tensor[(1344), int64], Tensor[(240), float32], Tensor[(189), float64]) */
}

def @func_16699() -> (Tensor[(140), int64], Tensor[(14, 14, 3), float32]) {
  @func_16697() /* ty=(Tensor[(140), int64], Tensor[(14, 14, 3), float32]) */
}

def @func_2932(%var_2930: Tensor[(10, 10, 8), float32], %var_2931: Tensor[(1, 135), int8]) -> (Tensor[(10, 10, 8), float32], Tensor[(3, 9, 5), int8], Tensor[(1, 135), int8], Tensor[(224, 2), float64], Tensor[(594), float32], Tensor[(112, 4), float64], Tensor[(240), float64]) {
  %1445 = fn (%var_2892: Tensor[(10, 10, 8), float32], %var_2919: Tensor[(1, 135), int8]) -> (Tensor[(10, 10, 8), float32], Tensor[(3, 9, 5), int8], Tensor[(1, 135), int8], Tensor[(224, 2), float64], Tensor[(594), float32], Tensor[(112, 4), float64], Tensor[(240), float64]) {
    %1428 = cast(%var_2892, dtype="float32") /* ty=Tensor[(10, 10, 8), float32] */;
    %1429 = cast(%var_2919, dtype="int8") /* ty=Tensor[(1, 135), int8] */;
    %1430 = cast(%var_2919, dtype="int8") /* ty=Tensor[(1, 135), int8] */;
    %1431 = reshape(%1429, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), int8] */;
    %1432 = reshape(%1430, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), int8] */;
    %1433 = cast(meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1434 = cast(meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1435 = cast(meta[relay.Constant][110] /* ty=Tensor[(112, 4), float64] */, dtype="float64") /* ty=Tensor[(112, 4), float64] */;
    %1436 = cast(meta[relay.Constant][111] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1437 = reshape(%1433, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
    %1438 = reshape(%1434, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
    %1439 = reshape(%1435, newshape=[224, 2]) /* ty=Tensor[(224, 2), float64] */;
    %1440 = reshape(%1436, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %1441 = @func_2844(%1437, %1438, %1439, %1440) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(240), float64], Tensor[(224, 2), float64], Tensor[(240), float64]) */;
    %1442 = cosh(%1428) /* ty=Tensor[(10, 10, 8), float32] */;
    %1443 = @func_1843(%1431, %1432) /* ty=Tensor[(3, 9, 5), int8] */;
    %1444 = %1441.2;
    (%1442, %1443, %var_2919, %1444, meta[relay.Constant][109] /* ty=Tensor[(594), float32] */, meta[relay.Constant][110] /* ty=Tensor[(112, 4), float64] */, meta[relay.Constant][111] /* ty=Tensor[(240), float64] */)
  };
  %1445(%var_2930, %var_2931) /* ty=(Tensor[(10, 10, 8), float32], Tensor[(3, 9, 5), int8], Tensor[(1, 135), int8], Tensor[(224, 2), float64], Tensor[(594), float32], Tensor[(112, 4), float64], Tensor[(240), float64]) */
}

def @func_1355(%var_1337: Tensor[(16, 7, 6), float32]) -> (Tensor[(16, 7, 6), float32], Tensor[(16, 7, 6), bool]) {
  %1446 = cast(%var_1337, dtype="float32") /* ty=Tensor[(16, 7, 6), float32] */;
  %1447 = shape_of(meta[relay.Constant][112] /* ty=Tensor[(16, 7, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1448 = cast(meta[relay.Constant][112] /* ty=Tensor[(16, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 6), float32] */;
  %1449 = dyn.reshape(%1446, %1447, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1450 = cast(meta[relay.Constant][112] /* ty=Tensor[(16, 7, 6), float32] */, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %1451 = shape_of(%var_1337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1452 = cast(%var_1337, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %1453 = dyn.reshape(%1450, %1451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1454 = divide(%1448, %1449) /* ty=Tensor[(16, 7, 6), float32] */;
  %1455 = greater(%1452, %1453) /* ty=Tensor[(16, 7, 6), bool] */;
  (%1454, %1455)
}

def @func_19215() -> (Tensor[(14, 14, 3), uint64], Tensor[(7, 3, 9), float32]) {
  %1456 = @func_13208() /* ty=(Tensor[(7, 3, 9), float32],) */;
  %1457 = @func_18912() /* ty=Tensor[(14, 14, 3), uint64] */;
  %1458 = %1456.0;
  (%1457, %1458)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen917/build/output.py:3752: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen917/build/output.py", line 3757, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(224) tvmgen_default_fused_minimum_kernel0(float* __restrict__ T_minimum, float* __restrict__ placeholder) {
  T_minimum[(((int)threadIdx.x))] = min(2.523888e+00f, placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


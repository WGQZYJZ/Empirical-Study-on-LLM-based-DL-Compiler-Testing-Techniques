import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_62 = relay.var("var_62", dtype = "float32", shape = (1, 12, 16))#candidate|62|(1, 12, 16)|var|float32
uop_63 = relay.tan(var_62.astype('float32')) # shape=(1, 12, 16)
output = relay.Tuple([uop_63,])
output2 = relay.Tuple([uop_63,])
func_65 = relay.Function([var_62,], output)
mod['func_65'] = func_65
mod = relay.transform.InferType()(mod)
mutated_mod['func_65'] = func_65
mutated_mod = relay.transform.InferType()(mutated_mod)
var_66 = relay.var("var_66", dtype = "float32", shape = (1, 12, 16))#candidate|66|(1, 12, 16)|var|float32
func_65_call = mutated_mod.get_global_var('func_65')
call_67 = func_65_call(var_66)
output = call_67
func_68 = relay.Function([var_66], output)
mutated_mod['func_68'] = func_68
mutated_mod = relay.transform.InferType()(mutated_mod)
var_127 = relay.var("var_127", dtype = "float64", shape = (9, 10, 3))#candidate|127|(9, 10, 3)|var|float64
uop_128 = relay.erf(var_127.astype('float64')) # shape=(9, 10, 3)
output = relay.Tuple([uop_128,])
output2 = relay.Tuple([uop_128,])
func_133 = relay.Function([var_127,], output)
mod['func_133'] = func_133
mod = relay.transform.InferType()(mod)
var_134 = relay.var("var_134", dtype = "float64", shape = (9, 10, 3))#candidate|134|(9, 10, 3)|var|float64
output = func_133(var_134)
func_135 = relay.Function([var_134], output)
mutated_mod['func_135'] = func_135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_553 = relay.var("var_553", dtype = "int16", shape = (2, 3, 3))#candidate|553|(2, 3, 3)|var|int16
var_554 = relay.var("var_554", dtype = "int16", shape = (2, 3, 3))#candidate|554|(2, 3, 3)|var|int16
bop_555 = relay.left_shift(var_553.astype('int16'), relay.reshape(var_554.astype('int16'), relay.shape_of(var_553))) # shape=(2, 3, 3)
uop_558 = relay.exp(var_554.astype('float64')) # shape=(2, 3, 3)
uop_561 = relay.log2(var_554.astype('float32')) # shape=(2, 3, 3)
bop_575 = relay.floor_divide(uop_561.astype('float32'), relay.reshape(uop_558.astype('float32'), relay.shape_of(uop_561))) # shape=(2, 3, 3)
output = relay.Tuple([bop_555,bop_575,])
output2 = relay.Tuple([bop_555,bop_575,])
func_587 = relay.Function([var_553,var_554,], output)
mod['func_587'] = func_587
mod = relay.transform.InferType()(mod)
var_588 = relay.var("var_588", dtype = "int16", shape = (2, 3, 3))#candidate|588|(2, 3, 3)|var|int16
var_589 = relay.var("var_589", dtype = "int16", shape = (2, 3, 3))#candidate|589|(2, 3, 3)|var|int16
output = func_587(var_588,var_589,)
func_590 = relay.Function([var_588,var_589,], output)
mutated_mod['func_590'] = func_590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_655 = relay.var("var_655", dtype = "uint16", shape = (12, 5, 12))#candidate|655|(12, 5, 12)|var|uint16
var_656 = relay.var("var_656", dtype = "uint16", shape = (12, 5, 12))#candidate|656|(12, 5, 12)|var|uint16
bop_657 = relay.not_equal(var_655.astype('bool'), relay.reshape(var_656.astype('bool'), relay.shape_of(var_655))) # shape=(12, 5, 12)
output = relay.Tuple([bop_657,])
output2 = relay.Tuple([bop_657,])
func_665 = relay.Function([var_655,var_656,], output)
mod['func_665'] = func_665
mod = relay.transform.InferType()(mod)
mutated_mod['func_665'] = func_665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_665_call = mutated_mod.get_global_var('func_665')
var_667 = relay.var("var_667", dtype = "uint16", shape = (12, 5, 12))#candidate|667|(12, 5, 12)|var|uint16
var_668 = relay.var("var_668", dtype = "uint16", shape = (12, 5, 12))#candidate|668|(12, 5, 12)|var|uint16
call_666 = func_665_call(var_667,var_668,)
output = call_666
func_669 = relay.Function([var_667,var_668,], output)
mutated_mod['func_669'] = func_669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_916 = relay.var("var_916", dtype = "bool", shape = (5, 5, 12))#candidate|916|(5, 5, 12)|var|bool
var_917 = relay.var("var_917", dtype = "bool", shape = (5, 5, 12))#candidate|917|(5, 5, 12)|var|bool
bop_918 = relay.logical_or(var_916.astype('bool'), relay.reshape(var_917.astype('bool'), relay.shape_of(var_916))) # shape=(5, 5, 12)
func_587_call = mod.get_global_var('func_587')
func_590_call = mutated_mod.get_global_var('func_590')
var_925 = relay.var("var_925", dtype = "int16", shape = (1, 18))#candidate|925|(1, 18)|var|int16
call_924 = relay.TupleGetItem(func_587_call(relay.reshape(var_925.astype('int16'), [2, 3, 3]), relay.reshape(var_925.astype('int16'), [2, 3, 3]), ), 1)
call_926 = relay.TupleGetItem(func_590_call(relay.reshape(var_925.astype('int16'), [2, 3, 3]), relay.reshape(var_925.astype('int16'), [2, 3, 3]), ), 1)
func_587_call = mod.get_global_var('func_587')
func_590_call = mutated_mod.get_global_var('func_590')
call_928 = relay.TupleGetItem(func_587_call(relay.reshape(var_925.astype('int16'), [2, 3, 3]), relay.reshape(var_925.astype('int16'), [2, 3, 3]), ), 0)
call_929 = relay.TupleGetItem(func_590_call(relay.reshape(var_925.astype('int16'), [2, 3, 3]), relay.reshape(var_925.astype('int16'), [2, 3, 3]), ), 0)
uop_932 = relay.asin(var_917.astype('float64')) # shape=(5, 5, 12)
output = relay.Tuple([bop_918,call_924,var_925,call_928,uop_932,])
output2 = relay.Tuple([bop_918,call_926,var_925,call_929,uop_932,])
func_951 = relay.Function([var_916,var_917,var_925,], output)
mod['func_951'] = func_951
mod = relay.transform.InferType()(mod)
mutated_mod['func_951'] = func_951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_951_call = mutated_mod.get_global_var('func_951')
var_953 = relay.var("var_953", dtype = "bool", shape = (5, 5, 12))#candidate|953|(5, 5, 12)|var|bool
var_954 = relay.var("var_954", dtype = "bool", shape = (5, 5, 12))#candidate|954|(5, 5, 12)|var|bool
var_955 = relay.var("var_955", dtype = "int16", shape = (1, 18))#candidate|955|(1, 18)|var|int16
call_952 = func_951_call(var_953,var_954,var_955,)
output = call_952
func_956 = relay.Function([var_953,var_954,var_955,], output)
mutated_mod['func_956'] = func_956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1050 = relay.var("var_1050", dtype = "float64", shape = (14, 15, 2))#candidate|1050|(14, 15, 2)|var|float64
uop_1051 = relay.cosh(var_1050.astype('float64')) # shape=(14, 15, 2)
output = uop_1051
output2 = uop_1051
func_1056 = relay.Function([var_1050,], output)
mod['func_1056'] = func_1056
mod = relay.transform.InferType()(mod)
mutated_mod['func_1056'] = func_1056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1057 = relay.var("var_1057", dtype = "float64", shape = (14, 15, 2))#candidate|1057|(14, 15, 2)|var|float64
func_1056_call = mutated_mod.get_global_var('func_1056')
call_1058 = func_1056_call(var_1057)
output = call_1058
func_1059 = relay.Function([var_1057], output)
mutated_mod['func_1059'] = func_1059
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1136 = relay.var("var_1136", dtype = "uint32", shape = (3, 7, 14))#candidate|1136|(3, 7, 14)|var|uint32
const_1137 = relay.const([[[2,10,2,6,-7,3,-4,3,-10,-7,1,9,-1,1],[1,-6,5,-5,-7,1,7,3,8,3,2,7,8,-9],[-9,5,-8,-5,10,-9,2,2,-4,1,9,-8,-5,-6],[2,-6,-8,1,3,-8,-9,-9,-5,-10,-3,10,6,5],[-4,-6,8,7,2,-3,-5,5,6,-5,-4,1,-8,3],[1,-5,1,-3,-3,7,8,8,1,-9,7,9,1,-1],[4,-10,2,-2,-7,3,5,5,10,-9,7,9,2,-7]],[[9,-1,-2,8,8,-8,-6,7,3,-7,5,5,3,-6],[-1,7,3,-2,9,-10,1,2,-10,-1,10,5,3,7],[-1,9,8,-1,4,-7,-5,-9,-6,6,-1,9,4,-7],[4,-2,-9,-9,9,-9,3,-5,2,7,-7,3,1,-7],[6,3,-10,-4,-6,-7,3,7,1,-6,-7,2,-7,10],[-5,-4,-5,-10,2,5,9,4,-7,9,4,-4,10,5],[-8,-9,5,3,-2,4,-9,3,-10,-9,9,-8,5,4]],[[-5,7,7,6,9,2,4,-7,-7,-10,-9,-6,7,9],[-6,-7,5,2,-10,-4,2,10,3,9,-8,-9,-8,-5],[-10,6,9,-7,-9,-6,1,-8,5,-9,7,-10,-8,2],[-7,10,-1,-5,10,-7,-3,8,1,5,5,-6,-1,-7],[-9,-5,-6,-6,-3,-9,3,4,9,7,9,7,5,4],[2,-9,10,7,-10,5,4,-6,2,-4,-1,2,-5,4],[4,8,-7,7,10,3,7,-3,4,9,-1,-8,3,4]]], dtype = "uint32")#candidate|1137|(3, 7, 14)|const|uint32
bop_1138 = relay.multiply(var_1136.astype('uint32'), relay.reshape(const_1137.astype('uint32'), relay.shape_of(var_1136))) # shape=(3, 7, 14)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
const_1157 = relay.const([7.912630,-1.857862,-6.902433,-9.063371,6.926082,-2.151566,-8.795255,-0.648626,-6.546317,9.074571,-8.315721,-1.007904,-4.970997,1.617402,2.084171,-0.658091,7.852883,-0.229903,2.328612,-4.772939,-0.722341,-3.297464,1.779633,7.147697,-2.906128,-5.929916,-4.264684,-5.043393,9.008979,-8.053457,-4.927524,1.089928,8.576037,0.759457,-8.684339,0.014211,2.419104,0.059073,7.918699,-9.358897,-9.156564,-9.523264,2.007555,3.722545,2.400181,-4.520260,-3.885186,8.384601,5.039121,-7.673554,0.066618,6.692078,9.332057,0.293188,9.529800,-9.048350,-5.326399,-9.984708,1.137028,-8.484153,-9.695787,2.042943,-4.445713,-9.121191,8.968169,9.763125,4.590123,7.148130,-0.792761,2.167680,6.323652,5.665331,-4.169488,2.066958,0.630527,-0.775996,-2.580911,-7.510305,6.246089,5.154095,0.254921,9.020875,5.497127,-4.157749,7.915321,6.236416,5.430774,-0.168394,-1.347416,-6.608057,8.023750,3.232864,-5.595206,-2.721403,3.476351,-3.183548,-2.726198,2.529856,9.867293,7.661613,3.907923,5.539010,6.204035,-3.966972,6.191701,0.342770,-9.269908,6.321156,-4.288211,-2.919993,8.854908,3.349257,-2.931470,6.839647,-2.527265,-9.336105,9.988813,-6.703466,5.017778,-6.957890,1.044386,1.645888,6.595467,-3.271381,-0.038397,9.166999,-4.403764,4.435006,3.465129,-2.449691,-0.380818,2.090891,-2.563536,-2.962206,-0.867516,-4.471247,9.006475,0.798907,-9.865602,-9.998254,-2.945346,-7.619087,-6.758877,5.244915,-5.789268,2.192399,-3.684157,-3.476233,9.701080,-8.338582,-6.548741,8.829930,-3.853967,-3.121659,9.616391,8.600729,-8.900958,-0.186789,-6.456773,-4.789331,3.562807,4.917784,-9.133937,-0.692075,-7.863155,6.938733,8.797445,-3.487484,-7.176785,4.477572,-2.524974,0.569613,-4.083959,8.374060,-7.142078,-6.517787,-4.599613,9.357848,4.987506,-5.036767,7.953871,-4.130933,-4.530285,-2.313378,0.726726,-2.344564,3.167448,-4.018589,5.987392,-5.313557,2.887324,8.949145], dtype = "float32")#candidate|1157|(192,)|const|float32
call_1156 = relay.TupleGetItem(func_65_call(relay.reshape(const_1157.astype('float32'), [1, 12, 16])), 0)
call_1158 = relay.TupleGetItem(func_68_call(relay.reshape(const_1157.astype('float32'), [1, 12, 16])), 0)
var_1159 = relay.var("var_1159", dtype = "float32", shape = (9, 12, 16))#candidate|1159|(9, 12, 16)|var|float32
bop_1160 = relay.add(call_1156.astype('uint16'), var_1159.astype('uint16')) # shape=(9, 12, 16)
bop_1163 = relay.add(call_1158.astype('uint16'), var_1159.astype('uint16')) # shape=(9, 12, 16)
func_1056_call = mod.get_global_var('func_1056')
func_1059_call = mutated_mod.get_global_var('func_1059')
var_1175 = relay.var("var_1175", dtype = "float64", shape = (420,))#candidate|1175|(420,)|var|float64
call_1174 = func_1056_call(relay.reshape(var_1175.astype('float64'), [14, 15, 2]))
call_1176 = func_1056_call(relay.reshape(var_1175.astype('float64'), [14, 15, 2]))
func_133_call = mod.get_global_var('func_133')
func_135_call = mutated_mod.get_global_var('func_135')
const_1185 = relay.const([1.539616,7.116928,6.508655,0.173341,-8.892620,4.435989,0.281803,5.831110,-9.933504,-8.328462,-7.939672,6.523649,5.651519,5.464745,-8.561591,1.510982,0.476663,7.105054,-5.565056,-7.449945,3.108168,-6.928097,-8.102046,7.308461,-1.072608,-5.409782,-7.222980,2.233575,5.869910,-5.001398,-7.476414,-8.142461,4.343101,-2.328476,-9.177567,-4.655852,-3.612912,-2.476861,-3.934511,0.265121,9.267948,-7.285110,-8.025416,-6.264184,-1.350456,1.057464,-6.857391,-2.693146,2.969617,-7.455393,7.834758,-5.480430,4.590129,-1.252165,-0.124581,4.774167,1.182576,-2.596678,6.793007,-4.530012,7.274748,-1.215795,8.475073,5.786845,2.727662,-5.408634,-4.738053,-6.086958,6.935937,-8.989252,6.491216,6.527575,6.416925,-2.117234,-8.005827,-6.198500,-4.632055,-6.157582,0.162363,7.109997,9.542586,-4.226798,-4.957967,1.573188,1.548720,2.180482,1.743332,-3.104692,-2.696699,-3.223996,9.047152,2.478604,1.542699,0.554782,5.399354,-8.151839,-1.124367,2.691306,8.151209,-4.319182,-3.388424,0.631880,-0.287013,-3.934976,-5.746045,-5.353044,4.518471,-0.845813,9.701011,7.480458,-9.578691,1.611697,-8.543748,5.084436,2.811485,0.970987,1.356815,-7.452925,-0.614944,8.174368,9.006882,-1.082203,6.667164,1.434156,-8.130090,3.254720,-2.842110,4.943746,1.055304,8.027245,-8.303634,-6.765990,9.735433,1.067014,4.823290,9.324694,-2.569722,1.155062,-4.754492,-7.589233,-6.964170,5.295750,-6.527592,2.526171,7.628133,4.423902,1.869387,3.817655,-0.245031,-8.560885,0.100177,-1.883243,8.629654,4.032604,-8.714196,-5.071235,-2.986635,-7.764659,-4.792151,-1.276356,-4.779172,7.360671,-5.314106,-5.146806,-2.017070,-6.831990,-4.684420,9.059241,5.337365,2.992427,5.348242,-2.338619,4.770951,-5.839209,-8.501219,1.420369,-4.468050,8.184621,-8.763566,3.372741,-2.275169,-8.295410,-1.854312,7.063808,2.110827,-9.435269,-6.934697,-7.103676,1.017070,-6.228679,7.371126,-6.439691,-6.457747,-4.643003,2.619615,6.973792,-9.672743,4.101500,-2.370927,-9.066137,2.471632,-4.036583,0.449599,-8.063235,7.712572,-8.026544,-2.025765,0.186765,-9.124342,1.594220,5.441064,-2.000279,3.772716,7.652475,-0.965620,3.553941,-3.418805,5.083283,-5.401507,-0.517135,-0.812994,-9.678202,7.873145,-9.669202,-2.877917,8.387004,-7.807347,5.914242,7.396555,4.030717,-0.038485,-6.473396,-5.690987,-0.748160,9.932074,6.582055,4.985437,-5.573823,9.509213,2.029033,8.986626,5.898517,-1.773065,3.648921,8.682254,1.899827,3.151543,-7.309517,1.040547,-1.198275,4.217995,1.720540,6.196807,4.703731,-1.997242,-2.312712,-1.358682,6.522395,-1.507083,-5.885514,-6.193045,3.988893,9.363390,6.449217,-4.344895,3.735621,2.200051,0.145017,4.357051,8.074376], dtype = "float64")#candidate|1185|(270,)|const|float64
call_1184 = relay.TupleGetItem(func_133_call(relay.reshape(const_1185.astype('float64'), [9, 10, 3])), 0)
call_1186 = relay.TupleGetItem(func_135_call(relay.reshape(const_1185.astype('float64'), [9, 10, 3])), 0)
func_133_call = mod.get_global_var('func_133')
func_135_call = mutated_mod.get_global_var('func_135')
call_1191 = relay.TupleGetItem(func_133_call(relay.reshape(const_1185.astype('float64'), [9, 10, 3])), 0)
call_1192 = relay.TupleGetItem(func_135_call(relay.reshape(const_1185.astype('float64'), [9, 10, 3])), 0)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
call_1208 = relay.TupleGetItem(func_65_call(relay.reshape(call_1156.astype('float32'), [1, 12, 16])), 0)
call_1209 = relay.TupleGetItem(func_68_call(relay.reshape(call_1156.astype('float32'), [1, 12, 16])), 0)
output = relay.Tuple([bop_1138,const_1157,bop_1160,call_1174,var_1175,call_1184,const_1185,call_1191,call_1208,])
output2 = relay.Tuple([bop_1138,const_1157,bop_1163,call_1176,var_1175,call_1186,const_1185,call_1192,call_1209,])
func_1213 = relay.Function([var_1136,var_1159,var_1175,], output)
mod['func_1213'] = func_1213
mod = relay.transform.InferType()(mod)
mutated_mod['func_1213'] = func_1213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1213_call = mutated_mod.get_global_var('func_1213')
var_1215 = relay.var("var_1215", dtype = "uint32", shape = (3, 7, 14))#candidate|1215|(3, 7, 14)|var|uint32
var_1216 = relay.var("var_1216", dtype = "float32", shape = (9, 12, 16))#candidate|1216|(9, 12, 16)|var|float32
var_1217 = relay.var("var_1217", dtype = "float64", shape = (420,))#candidate|1217|(420,)|var|float64
call_1214 = func_1213_call(var_1215,var_1216,var_1217,)
output = call_1214
func_1218 = relay.Function([var_1215,var_1216,var_1217,], output)
mutated_mod['func_1218'] = func_1218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1285 = relay.var("var_1285", dtype = "uint32", shape = (9, 15, 6))#candidate|1285|(9, 15, 6)|var|uint32
const_1286 = relay.const([[[-8,4,4,4,6,10],[4,3,9,3,4,2],[3,7,6,5,4,-6],[9,-4,7,6,3,-3],[7,-8,6,-10,3,-9],[7,-5,-3,1,-2,6],[-3,1,2,-8,2,10],[5,4,-7,9,9,7],[4,6,5,7,6,3],[4,7,-9,-3,-10,4],[-2,-3,6,4,2,-8],[-4,4,-3,-10,-10,2],[-7,-4,3,-6,1,-7],[1,-9,-3,-1,-9,9],[-4,10,7,5,-8,10]],[[-7,8,6,-4,-7,4],[-9,-7,10,2,-6,-9],[-6,-6,1,6,4,7],[9,1,-4,6,-7,-2],[10,10,8,-10,4,-7],[-3,5,8,1,3,3],[-4,3,-3,-10,-10,-10],[2,3,5,-2,-4,8],[-9,7,-1,-1,1,-10],[-10,-7,3,-1,9,-2],[3,-5,-1,8,3,1],[-8,-9,-8,-3,-9,1],[10,-8,5,3,6,-6],[10,8,-9,-7,3,8],[-7,2,-3,-10,6,-4]],[[-2,10,5,-4,9,-10],[10,7,-5,7,-8,-10],[1,-4,9,-7,-4,-8],[2,-8,3,9,-7,-9],[3,-6,4,-10,7,-1],[3,-9,4,8,1,-6],[3,-10,-2,-3,-6,4],[5,4,-9,10,2,8],[7,3,-1,-2,4,5],[2,1,-8,-9,-2,-7],[-7,-2,6,-8,-8,-3],[-10,7,9,-10,-1,1],[9,-4,-3,3,-10,1],[-6,1,8,7,8,-1],[-6,-8,-5,6,-8,-6]],[[-3,-1,3,1,8,5],[5,-7,-6,10,1,-8],[-8,2,-7,7,7,-3],[9,-2,-3,7,9,-10],[2,6,7,-2,8,-1],[6,5,7,6,9,6],[-6,-1,-9,-1,-3,6],[3,-7,4,8,-7,5],[-10,-3,-8,-4,-4,-9],[-7,3,9,10,-7,-3],[-6,-3,3,-8,-9,-3],[-1,-3,-1,9,-5,10],[2,-6,-6,2,-1,6],[4,-8,-6,-2,-9,4],[-9,9,-5,-10,8,6]],[[6,-7,-2,2,6,9],[-4,-1,-7,-2,-7,-10],[8,9,-5,-2,-2,9],[-10,2,-2,10,-3,8],[5,6,-1,-4,8,6],[8,-6,5,-6,6,-4],[10,-4,-4,-3,-4,-1],[-9,3,10,-1,-7,1],[-2,-10,-7,-9,-8,-2],[-7,3,5,-4,1,-2],[-1,9,1,2,9,4],[-8,-2,5,-1,8,4],[8,-10,9,9,-6,-8],[10,-2,3,4,-8,8],[-2,-8,2,6,1,-8]],[[9,-2,8,1,1,-9],[-1,6,1,5,-4,6],[6,-6,9,9,1,-2],[-1,-9,8,7,-8,9],[8,5,-8,7,-2,-10],[7,8,1,7,2,-4],[-1,-2,-3,-2,-6,10],[7,-7,-10,-1,-10,-5],[8,-5,-7,3,-10,-10],[-7,-4,9,-8,-3,7],[-5,10,-5,8,-6,-6],[-2,2,-5,6,7,6],[6,-4,10,-2,-8,-10],[-7,8,1,-8,-4,-6],[-5,4,4,9,3,-9]],[[-3,-8,5,-5,6,6],[9,10,-4,-4,-1,-2],[10,5,5,8,8,10],[-6,6,8,7,7,1],[-6,-2,-5,1,6,-1],[-1,8,5,-3,-10,-10],[2,-6,-9,-2,-3,-1],[1,-6,-10,-7,-3,2],[-10,8,-5,-10,10,-8],[2,3,6,-6,7,-3],[6,-10,2,9,-9,4],[7,-1,-10,7,10,-9],[-5,-3,-6,1,-6,-3],[5,10,10,7,10,6],[10,-5,-3,-7,9,1]],[[8,-9,7,3,-3,7],[9,-1,-6,10,-10,6],[-9,-2,-7,-8,-6,-9],[9,4,-5,5,7,-4],[3,-8,-10,6,9,10],[10,-9,4,-1,10,-5],[8,-8,6,-7,7,-1],[10,-8,5,5,5,4],[-1,-2,-2,-5,-7,-5],[-6,-9,10,2,7,-10],[-8,-10,8,4,-10,-10],[5,5,10,-4,-4,1],[-5,7,5,-6,4,-7],[1,4,2,-6,-1,9],[-2,-10,-8,-2,6,-4]],[[-9,-3,8,5,-3,-3],[-5,2,-1,-7,-5,-1],[8,5,5,6,-2,6],[10,9,10,-8,2,-1],[2,10,-5,-10,4,-10],[7,-4,-4,8,4,5],[1,9,5,8,7,5],[-9,-8,2,-6,3,-7],[2,1,3,10,-1,-7],[8,-4,-5,1,-5,9],[-9,6,4,-9,1,2],[5,-7,-10,3,-4,-7],[3,5,8,-5,10,9],[7,2,-7,3,4,-8],[-6,4,-5,9,8,-8]]], dtype = "uint32")#candidate|1286|(9, 15, 6)|const|uint32
bop_1287 = relay.not_equal(var_1285.astype('bool'), relay.reshape(const_1286.astype('bool'), relay.shape_of(var_1285))) # shape=(9, 15, 6)
uop_1295 = relay.asin(bop_1287.astype('float64')) # shape=(9, 15, 6)
uop_1297 = relay.log10(bop_1287.astype('float32')) # shape=(9, 15, 6)
output = relay.Tuple([uop_1295,uop_1297,])
output2 = relay.Tuple([uop_1295,uop_1297,])
func_1313 = relay.Function([var_1285,], output)
mod['func_1313'] = func_1313
mod = relay.transform.InferType()(mod)
var_1314 = relay.var("var_1314", dtype = "uint32", shape = (9, 15, 6))#candidate|1314|(9, 15, 6)|var|uint32
output = func_1313(var_1314)
func_1315 = relay.Function([var_1314], output)
mutated_mod['func_1315'] = func_1315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1352 = relay.var("var_1352", dtype = "int64", shape = ())#candidate|1352|()|var|int64
const_1353 = relay.const([[[-4],[8],[-6],[6],[5],[-3],[6],[1],[1]],[[-9],[-1],[4],[-10],[-1],[9],[-6],[-5],[-4]],[[1],[5],[4],[10],[2],[-5],[5],[1],[-3]],[[-8],[-10],[-1],[8],[-1],[2],[-4],[-5],[-8]],[[-6],[10],[10],[-10],[-1],[8],[8],[7],[4]],[[-8],[-3],[-7],[-4],[5],[7],[8],[-2],[1]],[[6],[-4],[4],[1],[8],[3],[-5],[-6],[2]],[[5],[-4],[5],[4],[5],[4],[7],[-9],[8]],[[-2],[7],[-8],[6],[3],[-4],[-7],[3],[9]],[[-1],[3],[-10],[-3],[-8],[-7],[6],[-5],[1]],[[-7],[-9],[-1],[7],[3],[-7],[8],[-7],[5]],[[-8],[2],[9],[-10],[1],[9],[-1],[9],[7]],[[2],[-7],[-4],[7],[-2],[2],[2],[6],[-6]],[[5],[1],[1],[8],[-6],[-1],[-8],[-9],[-8]],[[-9],[4],[1],[-1],[-6],[7],[1],[9],[-10]],[[3],[2],[6],[4],[-8],[10],[7],[-3],[3]]], dtype = "int64")#candidate|1353|(16, 9, 1)|const|int64
bop_1354 = relay.less(var_1352.astype('bool'), const_1353.astype('bool')) # shape=(16, 9, 1)
var_1363 = relay.var("var_1363", dtype = "int64", shape = (16, 9, 15))#candidate|1363|(16, 9, 15)|var|int64
bop_1364 = relay.multiply(const_1353.astype('int64'), var_1363.astype('int64')) # shape=(16, 9, 15)
output = relay.Tuple([bop_1354,bop_1364,])
output2 = relay.Tuple([bop_1354,bop_1364,])
func_1375 = relay.Function([var_1352,var_1363,], output)
mod['func_1375'] = func_1375
mod = relay.transform.InferType()(mod)
mutated_mod['func_1375'] = func_1375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1375_call = mutated_mod.get_global_var('func_1375')
var_1377 = relay.var("var_1377", dtype = "int64", shape = ())#candidate|1377|()|var|int64
var_1378 = relay.var("var_1378", dtype = "int64", shape = (16, 9, 15))#candidate|1378|(16, 9, 15)|var|int64
call_1376 = func_1375_call(var_1377,var_1378,)
output = call_1376
func_1379 = relay.Function([var_1377,var_1378,], output)
mutated_mod['func_1379'] = func_1379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1687 = relay.var("var_1687", dtype = "float64", shape = (8, 11, 5))#candidate|1687|(8, 11, 5)|var|float64
uop_1688 = relay.sqrt(var_1687.astype('float64')) # shape=(8, 11, 5)
bop_1695 = relay.minimum(uop_1688.astype('uint64'), relay.reshape(var_1687.astype('uint64'), relay.shape_of(uop_1688))) # shape=(8, 11, 5)
output = relay.Tuple([bop_1695,])
output2 = relay.Tuple([bop_1695,])
func_1703 = relay.Function([var_1687,], output)
mod['func_1703'] = func_1703
mod = relay.transform.InferType()(mod)
mutated_mod['func_1703'] = func_1703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1704 = relay.var("var_1704", dtype = "float64", shape = (8, 11, 5))#candidate|1704|(8, 11, 5)|var|float64
func_1703_call = mutated_mod.get_global_var('func_1703')
call_1705 = func_1703_call(var_1704)
output = call_1705
func_1706 = relay.Function([var_1704], output)
mutated_mod['func_1706'] = func_1706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1714 = relay.var("var_1714", dtype = "bool", shape = (2, 1, 3))#candidate|1714|(2, 1, 3)|var|bool
var_1715 = relay.var("var_1715", dtype = "bool", shape = (2, 4, 3))#candidate|1715|(2, 4, 3)|var|bool
bop_1716 = relay.logical_or(var_1714.astype('bool'), var_1715.astype('bool')) # shape=(2, 4, 3)
output = relay.Tuple([bop_1716,])
output2 = relay.Tuple([bop_1716,])
func_1725 = relay.Function([var_1714,var_1715,], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
var_1726 = relay.var("var_1726", dtype = "bool", shape = (2, 1, 3))#candidate|1726|(2, 1, 3)|var|bool
var_1727 = relay.var("var_1727", dtype = "bool", shape = (2, 4, 3))#candidate|1727|(2, 4, 3)|var|bool
output = func_1725(var_1726,var_1727,)
func_1728 = relay.Function([var_1726,var_1727,], output)
mutated_mod['func_1728'] = func_1728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1881 = relay.var("var_1881", dtype = "uint32", shape = (6, 5, 14))#candidate|1881|(6, 5, 14)|var|uint32
var_1882 = relay.var("var_1882", dtype = "uint32", shape = (6, 5, 14))#candidate|1882|(6, 5, 14)|var|uint32
bop_1883 = relay.minimum(var_1881.astype('uint32'), relay.reshape(var_1882.astype('uint32'), relay.shape_of(var_1881))) # shape=(6, 5, 14)
uop_1894 = relay.cosh(var_1881.astype('float32')) # shape=(6, 5, 14)
func_1213_call = mod.get_global_var('func_1213')
func_1218_call = mutated_mod.get_global_var('func_1218')
const_1903 = relay.const([8,9,-8,5,4,1,-7,-10,-10,-3,-8,-2,4,-4,-9,2,-1,-3,-8,6,-4,-1,-10,2,-3,-10,2,9,5,-6,4,-4,-9,-5,-7,-8,-2,2,1,-3,-10,5,-3,10,8,2,6,-9,5,3,-5,-5,-1,8,-2,6,1,8,8,2,7,-9,2,-9,10,-10,-2,-1,-3,-5,-7,9,-4,2,6,-7,-1,-6,-4,1,5,-10,-8,8,-7,6,-5,4,3,-1,-3,10,7,-5,8,-5,-7,10,4,-7,-2,-9,-10,-6,10,-10,6,-4,-5,-3,7,6,3,-1,3,-9,1,-9,2,3,-3,-2,-2,-1,7,10,10,-8,-1,9,7,8,-8,10,-2,-2,6,5,10,5,-8,1,-10,-2,-8,-4,2,4,8,-2,6,7,-7,10,-8,7,9,-7,-7,-9,-1,1,-4,7,-8,4,2,4,6,9,10,-2,-3,7,8,-8,-10,6,1,-7,2,-3,-7,-4,-10,6,10,-8,-7,-7,-2,5,2,-7,3,-4,-7,9,-3,-6,-9,-4,2,-4,-8,3,-5,-3,8,-4,5,-5,-6,-8,-9,-5,-9,-7,-10,10,-3,-9,9,-7,-3,9,-2,2,-9,10,-7,4,1,-8,2,10,-1,6,-10,-1,6,1,-4,-8,5,1,-3,9,8,-7,-7,8,6,2,-6,7,2,-2,2,9,9,9,-9,-8,-10,-9,-1,-9,-2,-3,5,-2,9,-3,-7,-6,4,-8,8,2,-2,6,-10,2,-5,10,-4,-7,8,4,2,-2,9,-1], dtype = "uint32")#candidate|1903|(294,)|const|uint32
var_1904 = relay.var("var_1904", dtype = "float32", shape = (8, 216))#candidate|1904|(8, 216)|var|float32
call_1902 = relay.TupleGetItem(func_1213_call(relay.reshape(const_1903.astype('uint32'), [3, 7, 14]), relay.reshape(var_1904.astype('float32'), [9, 12, 16]), relay.reshape(var_1881.astype('float64'), [420,]), ), 5)
call_1905 = relay.TupleGetItem(func_1218_call(relay.reshape(const_1903.astype('uint32'), [3, 7, 14]), relay.reshape(var_1904.astype('float32'), [9, 12, 16]), relay.reshape(var_1881.astype('float64'), [420,]), ), 5)
output = relay.Tuple([bop_1883,uop_1894,call_1902,const_1903,var_1904,])
output2 = relay.Tuple([bop_1883,uop_1894,call_1905,const_1903,var_1904,])
func_1908 = relay.Function([var_1881,var_1882,var_1904,], output)
mod['func_1908'] = func_1908
mod = relay.transform.InferType()(mod)
var_1909 = relay.var("var_1909", dtype = "uint32", shape = (6, 5, 14))#candidate|1909|(6, 5, 14)|var|uint32
var_1910 = relay.var("var_1910", dtype = "uint32", shape = (6, 5, 14))#candidate|1910|(6, 5, 14)|var|uint32
var_1911 = relay.var("var_1911", dtype = "float32", shape = (8, 216))#candidate|1911|(8, 216)|var|float32
output = func_1908(var_1909,var_1910,var_1911,)
func_1912 = relay.Function([var_1909,var_1910,var_1911,], output)
mutated_mod['func_1912'] = func_1912
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2248 = relay.const([[[8.741172,-3.781841,-4.012589,-3.763832,1.016803,-6.053789,-7.103272,6.558159,-5.832789,0.692159],[-2.874628,-4.260428,-7.497283,6.793595,9.150131,-2.022864,2.209852,9.014504,-2.329533,4.156857],[-7.508733,4.318615,0.825386,-3.812801,-9.475134,1.657994,6.254283,-6.821785,7.403955,-3.020160],[-4.480147,7.751932,4.434944,2.900199,-1.823613,4.489888,4.848670,0.506030,-0.643055,-3.218943],[-3.189175,0.949379,9.066301,1.617958,8.803869,-6.232994,-6.437264,-6.758673,-4.083272,9.851630],[-5.727434,-2.409320,7.123584,-9.746272,9.104670,-7.870680,-6.068298,7.376836,0.637089,4.020884],[8.385856,7.431865,9.285009,1.237006,5.637604,2.491846,-1.795868,5.856467,6.821591,8.907554],[-4.682968,-8.388164,4.541587,7.023423,-2.364564,-1.768782,-2.552929,9.429819,4.251898,4.473651],[1.826755,-0.402583,-4.449760,6.085580,8.808449,-6.208093,-0.773520,-8.200832,9.721577,2.815477],[-7.867533,2.476131,5.181626,7.735364,6.004632,8.608588,2.401976,-2.298891,-4.167979,6.897985],[-4.378340,1.367296,3.191731,4.796019,0.493842,-9.656115,-5.605996,-1.619769,9.105104,-8.463551],[7.511272,8.276588,0.846644,-1.125868,-0.425746,4.809043,-1.201090,1.961288,-4.148408,-4.191935],[2.866666,-5.659150,-1.965870,9.827873,-4.086754,-6.401701,-2.318977,-9.312230,-9.023954,2.455686]],[[-2.886354,1.011255,7.946960,-6.077135,5.443782,-1.878686,-0.550158,-1.128742,3.056158,-9.093131],[7.033246,7.831185,-9.135379,9.822485,7.727397,2.674706,2.397464,-0.834582,-2.365873,4.540913],[9.471903,-2.884246,-0.708353,-5.977490,6.658680,8.975010,3.468092,-8.447770,-8.049894,-3.168185],[-3.496583,4.463618,5.909363,-7.367241,2.068552,9.240538,6.402100,-1.347702,9.176868,-1.221925],[7.794351,1.583388,-9.985468,-4.788480,-3.446901,-8.179002,8.780542,-7.886490,9.825970,-2.830437],[-4.851785,8.872940,2.679517,8.505941,-1.659263,9.353419,4.913781,0.038025,-6.137282,-7.780998],[-7.300671,5.755735,8.386478,-4.954947,4.146931,2.677913,2.288714,2.981347,-6.605987,5.499423],[-0.552463,-3.947686,5.314895,-4.285341,8.218754,-9.374080,3.254587,2.014479,-8.784176,-7.421189],[-5.717370,1.221473,-5.102124,1.787299,-2.973350,-9.614684,3.118908,-2.565499,-9.262873,5.688671],[-2.622144,3.206930,2.253732,-0.418104,1.450054,2.918876,-4.301335,3.620163,-1.396612,4.957932],[9.037333,3.566565,-1.152432,4.480327,-0.013593,-3.283106,6.146853,7.061332,9.101533,-8.267889],[-0.795915,-0.955166,-1.310673,4.626773,-2.724480,1.585249,-4.114218,8.643385,7.592478,6.106065],[2.259712,-1.127946,-8.010334,8.819529,8.328625,-1.679489,-3.023861,-5.742646,-9.719765,3.292930]],[[-1.974909,-3.844845,8.047040,2.599019,-2.318702,9.068768,-2.812811,-0.026237,1.444065,-3.474800],[6.356813,-6.126309,-1.424306,6.807724,-9.689683,0.873412,7.664138,-9.717864,5.298460,5.294557],[-3.228871,9.774169,-8.352117,9.364837,-0.150395,-5.221926,-7.777031,0.223582,3.440505,8.593117],[9.357025,-4.661229,-3.229865,3.609591,-9.563476,-8.903384,4.525212,-5.941970,8.149100,8.710685],[3.282301,-4.078858,-9.059429,-1.949862,-3.768029,-3.689439,0.458199,-6.199239,7.933974,1.889098],[7.105932,-6.609705,-9.236543,-3.733602,9.127435,8.242630,-8.243504,-0.188490,3.467683,-8.766901],[9.878741,4.736369,-1.155829,-7.231569,0.057953,0.416530,6.370138,-5.073988,-9.015871,-7.299607],[-0.288876,7.255513,8.601635,-7.304381,-9.326702,-8.871109,7.336118,-5.042069,2.032684,4.133231],[2.305128,0.043920,-5.803982,-5.284005,7.521003,-2.012845,-9.997769,-1.135545,-3.917897,-3.717365],[6.017723,-9.033212,-3.159624,-1.522052,0.739291,-9.855546,9.140708,-2.912190,8.554625,-9.456329],[1.087622,5.540736,-0.799681,4.892400,-8.183057,-0.839604,-3.599638,-8.445937,4.173725,-4.316433],[-5.241524,2.791790,3.086888,4.969565,-5.781642,7.201876,2.936472,2.824236,-8.843410,-3.639462],[-9.542653,-7.752960,5.432263,1.558728,-4.714991,5.165837,7.559534,-6.202153,-3.495134,8.222159]],[[2.152255,-6.260042,5.901844,6.019516,-5.874602,-8.856215,-4.134561,1.974213,3.179082,-0.322086],[9.229516,-1.548716,3.732439,8.779486,3.767441,-7.741012,3.948635,4.430639,1.643180,-8.772389],[-2.648480,-6.683420,8.494176,-0.015825,0.790132,-8.227571,-8.840945,9.315062,5.651703,-2.975892],[9.742754,-2.670282,3.564980,-2.873663,-7.936472,7.248371,9.490854,4.577468,0.494627,-3.292613],[-8.483116,3.513844,0.937406,-5.252336,7.089828,3.097284,-4.624205,1.535080,0.789174,-9.077448],[-5.713426,-1.839980,1.013587,7.717017,2.874686,9.760997,-5.004441,0.349622,8.857765,4.636499],[-5.899145,-0.005857,-5.583897,-2.338414,4.517711,6.985666,-5.136924,0.071042,9.332004,5.467783],[-0.952846,-7.767263,4.416383,9.507577,-2.755356,-5.792640,7.678445,3.439602,-3.866371,-2.071503],[-4.179217,-2.839376,5.986079,-0.442707,-7.580726,-9.521695,8.243649,6.622504,-3.258854,7.821287],[1.055766,5.253468,-7.445070,-9.421360,-4.315801,-7.162101,-8.069613,-5.661173,4.874683,-6.177156],[-6.258102,-2.987250,-5.265395,-0.833888,-3.525004,1.677381,3.745167,5.949243,3.182002,8.351426],[-8.832693,-4.764502,-0.875345,-3.526881,8.901675,3.583152,7.062620,5.595334,1.218190,-0.614182],[-9.167476,-3.381694,-4.086151,9.775363,1.694441,-6.247742,9.800654,5.251025,0.545079,3.052018]],[[-6.589237,-3.514325,-6.559444,8.167100,1.477566,-9.273940,2.899084,-9.778545,-8.497799,6.126911],[-9.992782,5.429916,-7.010420,3.487692,-6.105231,6.829021,2.072084,6.459284,3.190615,7.412708],[-8.513372,-3.787021,-9.003505,-1.393967,2.978259,3.718146,8.914053,6.560203,3.287357,8.838493],[0.351152,-1.630697,-5.703763,-5.798606,9.923098,-3.492259,5.393160,8.979757,7.968314,-4.708778],[-7.452877,-3.429741,-8.891836,6.177278,-1.501913,-0.351794,8.881720,-2.766390,-7.149266,-9.172724],[4.442692,5.883105,3.083849,-3.635738,-5.039925,1.432880,-8.948246,-3.699338,8.522604,-3.429922],[-5.105374,5.943811,-9.112497,8.610561,2.648496,-6.477153,4.477148,6.204047,-2.585847,0.831568],[4.899020,3.762248,9.667532,-5.576437,-1.723133,-2.980450,3.038266,-3.738586,-1.572363,-4.296634],[7.603573,-5.430491,9.836812,-4.086199,2.219584,-6.862876,-6.415746,5.899838,-9.670109,6.662562],[-2.472051,1.070262,8.790941,3.145711,-5.400532,3.263016,-6.525387,-6.300103,-3.702132,-3.227068],[-4.376356,-8.401086,-2.210347,-7.939460,1.806418,1.187130,-2.806211,-2.683028,4.952359,3.208735],[9.481074,8.683403,-3.329350,5.375444,-7.773425,-5.114435,9.147776,-0.225092,-9.438872,-9.699448],[-8.917932,-5.667443,-8.321623,-4.916994,-8.866450,4.101080,8.789348,-9.703105,-9.326813,-9.461379]],[[0.689415,-0.368705,5.669769,-4.963647,1.585346,0.295244,6.008933,-4.460405,-4.024558,0.019744],[-7.287006,0.562073,8.187645,4.368024,5.290149,2.918492,4.598301,8.790883,-7.621569,-9.185236],[-9.511774,0.774810,6.141150,-8.122423,-5.232279,4.464470,-6.998403,-5.613701,-7.956940,-6.264777],[5.052470,-5.213355,0.189651,7.014472,3.347743,6.747692,-4.871400,6.143816,2.628280,5.177341],[2.431100,-7.601415,4.166155,-9.384366,5.063827,-7.045745,-8.466274,0.396277,-1.075049,2.402430],[-8.228369,-7.762649,7.148144,3.563426,2.398258,-5.490166,2.732324,-1.146614,-3.212198,-2.055987],[0.504185,-0.405761,2.919027,1.837813,3.705881,4.415889,-1.831018,-2.432741,-8.817294,-1.175353],[-0.959071,-5.709592,3.315576,4.965980,9.022174,7.841486,-4.366521,-8.784188,6.905681,5.275502],[-1.144102,9.679418,-2.716644,-4.673082,8.742028,-6.406635,-1.529060,7.520816,-4.169000,5.483706],[-5.009797,-8.019832,-7.892448,-4.847458,2.574019,-5.387374,-1.595905,-2.598260,2.379211,4.280777],[4.603358,2.572038,3.555144,8.140414,6.190345,4.496471,-6.202990,-6.144378,9.309214,-1.602327],[-2.695076,-8.163311,-4.735906,-4.796062,-0.090287,-4.021477,0.287516,1.790799,-8.070075,-5.179278],[9.390786,7.095647,-3.909274,-9.922541,-0.219433,-2.801334,-6.546241,-7.970057,6.587635,-6.472351]],[[-9.144833,1.738051,-3.335913,-7.295698,8.521051,-5.448594,9.839920,-4.094142,2.586324,9.872980],[-2.847148,5.460093,-5.727683,6.647897,-1.725914,7.205114,2.593144,-8.202041,7.157726,-3.557968],[-8.209584,4.754813,4.018108,0.477654,5.430218,-0.742131,-9.496768,-6.524613,0.877896,-5.383838],[4.424779,5.298164,-3.975548,8.763713,-3.975944,-4.935592,-3.924175,-0.813819,-3.669599,4.139632],[-4.479740,9.036973,2.096506,-5.190308,3.397591,-3.484569,-9.464121,8.706154,0.380862,7.632875],[8.141614,-6.832074,7.633570,4.871343,-2.326749,5.987492,-2.373061,5.855336,-7.430393,8.607853],[-2.753744,4.267269,1.180040,1.369193,9.485273,-1.489303,1.507983,-4.484478,-9.572619,-1.625509],[-9.714331,5.582093,-1.067088,-4.728030,-9.772291,-0.261980,6.309660,-7.456179,7.557474,-9.054699],[-0.255401,3.887406,8.051793,-0.679662,5.383330,6.734040,5.417766,-5.415151,0.183862,-5.296731],[-6.694295,8.305989,-4.078800,-6.327424,5.450501,-2.020762,-5.705734,5.740671,-8.389327,3.515944],[-3.826852,5.907628,3.374295,4.986298,0.864571,5.992568,3.383714,2.346858,-2.503496,7.740758],[-5.187850,8.725058,2.521069,6.036552,-6.207269,4.854489,6.656913,-9.561621,-8.443241,9.723810],[-7.939743,-3.451166,8.649152,2.176361,6.464058,-1.592350,4.206729,-1.170146,-6.730656,-6.222493]],[[-8.069538,-8.391321,-5.196970,2.836667,-5.692222,-4.080789,3.734283,-7.809188,5.235356,-4.461824],[-5.549564,-1.020321,-2.839474,-0.939584,-3.568721,9.858028,-1.306921,-3.367790,7.021957,-1.801297],[1.784351,-0.426443,9.472088,6.487472,-4.024893,4.572476,-0.403858,-5.813511,9.487046,-9.471849],[3.365161,-3.937402,3.088864,6.469571,-1.038094,-6.789429,-2.893777,-5.883956,-9.078779,-5.838528],[7.036920,1.433263,-3.499704,-3.032411,9.507710,7.187804,6.960723,-2.381089,0.458474,1.844315],[9.234216,0.657520,-4.635161,0.725302,8.304995,3.333298,-6.642287,0.274026,7.482941,-8.695528],[-3.142165,8.095611,9.340514,-5.654575,5.301655,7.787834,4.451287,6.704960,-7.502636,-9.843333],[-8.482455,6.792020,7.268178,0.725942,-3.310101,7.996607,-8.093286,-4.094976,-1.581962,-2.732061],[-2.007580,9.282668,-7.258509,8.020240,2.417366,-1.304082,-0.082536,-6.963675,-4.444323,-8.493177],[6.703843,2.152761,-3.427303,-3.876339,-3.363592,1.153274,-2.189994,0.128876,3.413471,8.815748],[-6.170460,-6.678730,0.077033,-5.688041,3.688690,1.757620,-7.186841,-3.473516,-2.420524,-9.117974],[7.809711,-4.086782,-3.450443,-3.638971,-9.180702,-7.668290,1.832133,2.200406,-4.748195,7.182328],[-6.193058,-4.110747,8.441109,-2.494871,1.144959,4.749660,-0.590984,-1.707795,1.194083,-0.195812]],[[6.609338,-4.628648,3.024445,4.567136,-0.237674,4.489570,1.651046,0.310307,-6.946171,2.670210],[-9.077736,-8.396478,-3.678748,5.114693,7.378473,0.831474,1.817640,-7.091321,-2.042728,-9.407030],[-7.125969,0.210878,7.735555,-9.161124,-5.735998,-8.330595,-7.676737,7.798732,9.583042,-5.814405],[-8.531273,9.065642,-4.886789,1.812089,-9.356374,1.561449,5.412532,-3.776124,4.351325,3.360628],[-0.790120,4.484328,-9.134587,5.925273,6.900328,4.734323,-4.279994,7.852052,-9.456976,2.648950],[-7.288362,9.819464,5.273994,9.264806,-8.710968,7.605836,-4.615153,-1.246735,6.117897,-6.532834],[7.349924,6.198680,5.198841,-7.414676,1.483383,-7.588796,-9.478692,6.095580,9.234315,4.078534],[1.026867,1.730814,5.315028,7.585328,2.180331,7.055350,1.972656,-5.015873,-6.968462,-5.966613],[-8.926807,7.410187,-2.385319,3.831676,7.304882,0.628240,8.332059,-3.817443,-4.676413,4.430827],[-3.536561,1.457114,6.414637,-7.434558,-2.526285,8.856523,9.688340,-7.716326,-8.909172,3.286339],[-9.168223,-4.114972,3.256755,-1.090263,-8.296015,-7.776850,-1.045431,-7.830254,9.308058,3.150996],[2.054858,6.269373,-6.863931,-9.678406,5.061895,-6.752886,4.541191,1.782718,-5.083299,-7.510409],[7.420804,5.317730,-6.260670,-0.477781,-0.213274,-3.355823,-6.765614,-0.402555,7.808067,2.201710]],[[-0.515007,-4.009719,1.132073,3.760656,7.753312,-3.046023,-5.592333,-6.043020,-5.806120,-0.608458],[4.165647,-7.405250,-5.335331,-2.680066,-5.821694,-7.566446,1.856897,-6.173586,-6.480370,-2.090073],[2.646756,8.652808,-7.560303,5.587853,-0.538871,9.277498,-5.578325,4.489733,-3.727052,-5.741875],[-0.296272,-9.989330,4.732333,-5.997325,-3.827905,3.574272,9.654414,3.080965,-9.216795,-8.805568],[-4.443327,-7.429272,-0.414315,-2.407136,3.162114,4.712779,0.386782,-9.784946,-1.702595,4.251474],[0.020168,-9.416375,5.103190,5.616001,-2.727828,-4.240623,7.270862,9.341657,-1.820751,0.047453],[-5.153056,5.886186,-4.659459,-7.149403,-9.815815,0.743667,-9.444785,2.845530,3.835355,-6.733765],[-9.423786,-2.757620,7.740978,2.736526,1.659396,-2.305547,6.575480,-1.586822,5.366775,-2.677075],[-3.644083,9.804689,-7.971574,-2.620715,1.150176,5.490542,0.175706,-8.651150,-8.911682,-3.902830],[-9.844329,0.635580,5.404848,2.233404,2.535017,-7.271556,5.805566,-7.707403,-2.945413,7.191770],[4.962670,-3.382710,-7.365482,-3.781731,-5.545354,8.362823,8.315968,1.720522,-5.547107,7.881609],[-5.182660,0.628451,5.488008,3.841478,-5.902701,-3.973735,-2.684889,-3.077848,7.868636,3.953289],[0.290636,-1.236882,7.429434,7.308698,-2.535665,2.362968,9.935658,-3.341023,0.041603,-0.580090]],[[-7.742122,0.916157,6.259954,4.467164,-3.110911,1.635393,5.058928,-2.853817,1.037647,-7.015059],[-6.200532,-6.934005,-7.067686,0.629069,5.694280,7.831243,-0.722044,-5.185911,-1.929341,-2.192391],[-8.142753,3.463160,0.448285,-5.529592,8.944667,-9.276362,9.185610,7.902239,3.300553,7.913292],[6.563324,-3.444366,2.951429,4.636784,-8.506154,5.411350,0.055966,1.017381,-9.897466,4.687218],[-2.612496,-0.796772,6.528084,-5.042614,-4.391395,6.126698,-1.046284,7.115039,-6.096508,-3.711709],[-7.013961,5.712881,-4.071050,-9.110120,-0.544573,-1.119145,0.018407,-0.829010,6.057281,5.887248],[-4.037503,8.730346,-7.491637,5.660927,3.011884,3.215665,5.532634,-1.869107,7.618540,-6.380250],[-9.218242,3.277404,9.082285,-2.577373,-8.405886,-2.620980,-7.529531,5.895525,-5.648817,1.716065],[-9.586506,9.679910,6.328612,6.041452,-9.807242,0.466180,9.628933,-0.928574,-2.441576,1.430000],[-3.667435,-9.933595,4.586958,9.289636,-4.967935,3.615298,-1.856695,-0.306775,-6.576636,-0.949538],[8.993195,-3.922743,-6.769894,-4.741307,7.132123,8.313429,8.307158,5.189055,-2.196669,8.281922],[9.312646,1.970044,6.632065,-3.510997,-2.973091,5.284303,-2.612386,-6.294729,-8.251434,2.062779],[-2.367439,-2.196323,-1.904056,-7.728757,-2.216144,2.906291,-3.292848,2.122992,-1.272058,-5.681037]],[[0.980946,7.494368,4.842737,-4.264261,-4.899791,9.771122,2.855824,-6.241015,4.274380,-6.140076],[-9.716031,-7.875532,-3.840888,6.609439,0.090078,2.512189,4.237117,-1.437377,-6.738367,-9.839172],[-8.826027,8.816085,6.835663,-5.018799,-3.301388,5.447945,-8.674206,-0.395218,1.221988,-1.134894],[0.702094,1.986295,-6.253770,2.253485,7.837193,6.483900,1.066292,0.133053,-9.829503,-5.639069],[-5.306640,-1.852943,9.079681,8.880190,-3.250212,3.382604,-1.492463,-5.265993,-5.135417,9.573200],[5.846924,4.246409,-4.787998,-3.674155,-3.335386,1.133879,-7.792850,-8.540058,-2.150218,-9.152749],[3.293914,-1.369405,5.946637,-3.516509,-4.575213,3.628721,-1.893110,9.891838,3.516755,7.472636],[-9.423689,-4.841694,-2.959010,-0.965484,-7.141920,8.632101,-5.388898,2.005343,-5.713728,8.866123],[-1.960259,2.731058,0.941332,2.959751,-1.423568,1.707181,9.374732,7.372864,-7.202604,8.775596],[-6.842427,-1.176279,-2.491107,-1.588553,9.781242,-2.379323,-0.797702,-5.862694,-3.473497,-2.885434],[-3.069292,4.581559,0.320022,-1.425468,-7.130756,4.261036,-5.575933,3.600108,1.804212,-9.952593],[4.764319,-9.240533,-5.453703,9.078535,-6.403157,0.020207,6.978138,7.809970,1.154077,-9.491258],[6.381578,-2.261956,4.240467,-3.528788,-2.422919,4.405557,3.050682,2.560610,-3.420164,-0.211819]],[[9.363615,-8.072775,-2.050491,1.606748,8.356635,1.552881,6.803925,-8.235502,7.575880,-7.398557],[6.391808,6.286308,0.477127,-5.813521,-0.350153,2.994505,-1.562081,-8.724031,9.483180,-6.637229],[-7.344313,9.699386,-0.268280,-0.483068,-6.541431,2.661336,5.701991,8.590918,5.167349,-1.227952],[-4.147043,3.143317,0.902490,-9.530898,-5.915443,6.087366,-8.164825,-3.100804,8.593454,9.273921],[6.889418,3.151118,7.994972,-3.439674,0.117414,-6.763068,-8.303080,-3.367579,-9.231992,-0.857847],[-3.676785,5.796299,-3.868677,7.931624,-8.939776,8.851993,0.731896,-5.498305,9.055185,6.571525],[-0.984899,3.072088,-3.385041,-8.931952,-3.857290,7.237021,3.507761,9.563141,-5.209187,8.168186],[2.262689,8.057217,0.697695,-2.271131,-0.105710,3.469546,1.150142,4.322983,2.702907,-0.897685],[-7.796272,-2.937955,-9.114665,7.425550,-4.698761,-2.942014,0.265088,-3.101508,6.060856,-1.831971],[-9.531038,-5.174831,-8.468060,6.974847,-8.738814,3.152535,7.802208,-4.942524,5.164234,5.229777],[-2.610135,-7.600666,9.660528,-2.437898,0.807372,-4.064939,0.650575,6.004333,-2.960936,3.524209],[2.314758,9.800493,-2.650560,-1.481451,6.305195,9.554053,1.598397,8.601228,-4.401705,-7.208250],[-0.661895,4.618295,0.298360,6.524032,-3.188600,-6.695534,3.708246,-4.915144,0.490893,-3.507451]],[[-2.831006,-7.029185,9.860508,-5.077390,-0.162553,4.968625,6.749452,-4.724060,3.161417,-8.516598],[-1.471584,2.719728,-5.251703,7.383470,7.239735,-5.311492,2.136008,4.682089,8.493755,-4.842509],[-5.308147,-4.670990,-0.745028,9.203431,6.034621,7.085278,-3.466578,5.477658,7.013054,9.194273],[-2.376399,-8.593338,-4.609599,-5.461050,-6.804326,9.483809,-4.368838,-6.913815,-7.442493,4.930703],[-6.162291,2.768171,1.850656,5.053767,6.006856,6.120314,6.916406,1.346209,-3.767121,0.848960],[-9.259304,3.601975,-6.301884,-8.222569,4.019904,-1.690304,-4.747942,0.345945,6.571271,-2.418829],[5.722459,-9.819279,-2.432639,-9.141339,-3.502076,0.811407,7.157723,9.809690,-6.440996,-6.495368],[8.014590,9.651120,5.937568,-6.763509,-4.812051,9.645016,-7.543418,-2.264104,-6.161350,9.201142],[-0.962350,1.199888,-9.474805,9.609205,-6.351625,-2.142240,3.056870,-6.840643,-4.476502,5.325426],[1.917788,-7.821498,-0.737761,-1.134995,-1.567028,3.718101,-8.074761,-3.428652,-9.289487,-3.977068],[8.409393,-1.233318,-9.755413,9.092810,0.099081,9.815493,-3.367621,8.748769,-0.786712,6.796173],[0.216155,1.246285,7.115382,-7.227865,-6.849206,9.071570,-4.293895,-5.256836,-8.597428,7.600963],[-3.923924,-3.332311,6.101369,9.171839,-6.798377,-8.595217,-9.237679,5.749572,2.363621,0.792980]],[[-7.975065,7.213416,-4.163795,-3.553055,-1.058264,6.783916,-2.623428,6.934476,6.004491,-2.168798],[3.393543,8.657134,-4.917689,0.618204,1.705209,5.041066,6.609948,-5.210046,-3.494660,-2.489648],[-4.833155,1.493085,-3.151893,-0.109249,-8.849455,9.858104,4.548925,6.421576,5.243907,4.249603],[6.719823,9.929613,-2.201193,-1.126142,-7.641667,5.226654,-5.793177,2.669174,9.242234,-9.145398],[-9.173574,1.449108,7.549463,-8.362159,5.641338,6.310887,-0.304443,-8.196859,-7.518934,-2.541456],[0.800827,3.165752,-0.354360,-2.919218,0.871551,7.693558,-9.350884,5.367198,6.048287,2.349670],[-1.472346,6.393408,0.836968,5.741298,0.529511,-2.397587,4.256750,-5.137243,-6.789475,4.853341],[-6.044301,-5.319488,6.588090,-4.683750,7.090566,9.175329,-6.115144,-1.791337,-4.818955,7.827296],[9.892909,5.190544,4.530234,6.168120,-5.272210,2.724657,3.259529,-7.668566,-9.808500,-4.397417],[-4.399719,6.163251,-7.951119,-5.737432,6.490783,-6.368514,9.043087,3.545777,-2.444956,-0.740184],[4.484522,0.885356,1.848095,1.702274,-4.478117,5.949338,6.781448,0.172943,9.834358,5.572898],[1.420179,5.818248,3.498949,0.266491,7.573838,-3.574171,-2.964566,-0.104915,7.100179,0.062058],[3.342607,-9.479413,3.015005,-9.608347,6.475072,0.585841,-2.256954,3.638768,8.495812,9.567216]]], dtype = "float64")#candidate|2248|(15, 13, 10)|const|float64
uop_2249 = relay.log(const_2248.astype('float64')) # shape=(15, 13, 10)
func_1703_call = mod.get_global_var('func_1703')
func_1706_call = mutated_mod.get_global_var('func_1706')
const_2263 = relay.const([[-8.812646,9.470090,-6.516910,2.700805],[5.650575,6.038295,-5.959204,-1.666593],[9.290642,2.106062,-4.325035,5.194687],[-1.186036,1.967008,7.680709,4.840158],[5.543481,7.394474,-5.668687,1.005759],[8.875183,3.315067,0.963541,-3.215489],[7.809883,9.773286,5.508444,-9.090575],[-1.739128,-5.406842,-9.381908,0.713841],[-8.808967,4.351252,8.376950,1.541516],[8.399665,-1.268600,-8.125387,4.262353],[-8.985642,1.252524,-8.168866,4.076286],[-3.708264,-8.788389,-0.162864,-2.406241],[-9.333057,6.847701,-7.666829,9.260941],[-4.002295,-5.275081,-7.130350,-3.195541],[-1.199820,-9.125753,-2.264274,7.968718],[4.664785,6.363551,5.334973,8.456620],[1.803618,1.587763,3.880636,6.595470],[-9.180483,-8.592023,-5.438149,-5.249595],[-3.156126,8.374388,-4.952995,5.437122],[-9.275332,0.514162,-9.731862,5.839683],[-4.904447,3.158872,2.473226,7.319998],[-9.678087,-0.442131,-7.403056,-7.028303],[2.528626,2.939498,-8.720608,-3.653501],[0.513107,9.416489,-5.981604,8.583957],[8.132197,-6.994677,-1.946840,6.532709],[9.684459,7.309381,-9.909192,-9.944514],[0.248900,3.582793,7.552642,-7.539296],[-4.122281,-2.597958,-7.792800,2.713591],[4.253156,9.562594,4.488122,-3.917640],[-4.318612,-5.541293,7.536165,4.875655],[6.585430,6.333048,-0.496615,7.092176],[7.956738,6.523544,-8.043430,1.223146],[-2.635734,0.833765,8.980411,-5.131330],[7.738037,-3.752839,6.981952,4.446785],[9.783110,9.491483,-9.742498,-1.308757],[2.341147,3.926061,-1.179951,9.136192],[9.788637,-2.729928,-9.019042,4.052118],[8.115817,4.675213,4.933701,7.356064],[1.497581,-8.017080,-4.601374,5.076408],[-4.578791,8.344773,2.000397,8.489437],[9.357338,-4.303296,-6.123470,4.104125],[2.491390,-7.101320,9.579079,9.911236],[3.373011,-2.206671,-7.446324,5.587653],[-5.745038,2.870929,0.045063,6.657464],[-5.518387,-2.295968,2.797211,5.234422],[-8.998639,3.656405,5.320553,-9.704153],[-3.798082,-2.631160,-9.142353,8.707808],[-6.751399,3.804668,0.309985,-6.302287],[-5.466111,-8.618448,-1.802841,-8.439138],[3.547272,-7.119126,3.498779,7.120230],[2.872545,-2.742759,6.131937,0.808018],[5.974010,0.774454,0.986761,-2.472854],[9.219716,7.083838,-0.360834,-2.466180],[9.417188,2.943987,-5.215543,-0.470907],[-3.870830,7.885330,-8.919104,-5.544789],[2.592876,-5.948931,6.961841,-4.298440],[0.683761,2.607725,-5.506945,4.931024],[-4.527652,-8.282622,-3.414911,1.666375],[7.887986,-6.951107,7.859638,1.146080],[0.252876,2.509600,6.824558,2.904064],[0.107340,-9.973201,-7.077260,8.812956],[-9.151409,1.859556,-7.531276,-6.910402],[-0.667495,6.361197,1.290176,-3.440602],[-3.801468,5.458900,-3.577573,-0.997337],[7.957808,4.820383,-6.681221,8.584773],[-8.981085,8.652946,4.469920,-1.056114],[1.591727,8.913703,9.357953,7.323979],[3.891845,3.228862,0.852940,4.406303],[-9.896196,-3.387195,2.556583,-0.445033],[9.408943,-9.862222,4.979009,-3.585406],[-2.394196,8.205748,9.278170,3.448215],[3.756291,-0.216727,-6.604626,-4.658943],[-3.053962,1.336477,-7.093185,3.951482],[-7.777298,-0.110016,7.269312,-0.974551],[-1.907870,1.434389,-6.956197,-8.943009],[9.280611,-9.572945,-5.784627,-2.266194],[6.579558,-3.770527,6.049139,6.338581],[3.186223,5.370836,-3.002455,-7.810619],[7.834596,8.502246,-1.707519,-3.590883],[-3.315554,9.816370,4.812312,-8.707312],[4.047784,-5.816330,-1.217741,-1.718996],[6.944513,-3.784570,6.093196,-7.024747],[-4.532907,-4.515165,3.276480,-4.160007],[6.717400,-1.584349,-9.895514,-6.693706],[4.438896,-2.015119,-3.904084,8.953188],[6.434391,-8.212033,-4.602504,7.833704],[-1.694034,9.755728,-6.743402,9.001285],[2.692837,-6.467063,-0.214538,7.885747],[5.841399,-6.205402,1.793391,4.338702],[6.404499,2.651267,-0.304580,3.670078],[3.689129,-3.256231,-7.021689,4.454346],[5.490033,0.520159,-6.929477,8.284978],[8.550628,-0.904798,4.372881,7.068232],[5.185556,-4.986891,3.456809,-0.746901],[-4.629877,3.629635,-9.776664,-5.113276],[-0.167081,-3.162943,6.278628,9.115647],[5.824593,0.387140,1.335698,5.835336],[7.075583,4.046719,8.576597,2.398578],[-9.273428,3.765271,-6.780191,7.720888],[2.357990,6.781325,0.791557,6.910490],[-6.828344,-8.276478,2.012328,-9.062581],[7.851489,-3.637517,1.711817,7.821073],[-9.133873,7.747383,-5.621903,1.396972],[-1.918492,-6.585400,8.249992,-9.286875],[-8.008205,-3.509435,-9.848094,6.823072],[-6.885503,4.770652,3.406395,2.871654],[4.708983,-4.286587,7.902960,7.611070],[6.089748,-3.437094,-8.874370,-4.275627],[5.464158,-9.947152,-8.445076,3.727000],[4.293450,-5.955431,3.777236,-6.785696]], dtype = "float64")#candidate|2263|(110, 4)|const|float64
call_2262 = relay.TupleGetItem(func_1703_call(relay.reshape(const_2263.astype('float64'), [8, 11, 5])), 0)
call_2264 = relay.TupleGetItem(func_1706_call(relay.reshape(const_2263.astype('float64'), [8, 11, 5])), 0)
output = relay.Tuple([uop_2249,call_2262,const_2263,])
output2 = relay.Tuple([uop_2249,call_2264,const_2263,])
func_2271 = relay.Function([], output)
mod['func_2271'] = func_2271
mod = relay.transform.InferType()(mod)
output = func_2271()
func_2272 = relay.Function([], output)
mutated_mod['func_2272'] = func_2272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_2336 = relay.TupleGetItem(func_2271_call(), 1)
call_2337 = relay.TupleGetItem(func_2272_call(), 1)
uop_2358 = relay.exp(call_2336.astype('float32')) # shape=(8, 11, 5)
uop_2360 = relay.exp(call_2337.astype('float32')) # shape=(8, 11, 5)
func_1908_call = mod.get_global_var('func_1908')
func_1912_call = mutated_mod.get_global_var('func_1912')
const_2364 = relay.const([-9,3,2,1,-7,-8,-10,-9,8,3,-1,4,-6,4,-1,5,6,5,-9,-7,-1,-9,1,-9,-1,9,-9,3,-1,7,10,10,-4,-3,3,9,-4,-7,6,5,10,9,-9,3,9,-2,3,-6,-8,2,-10,7,9,2,2,5,1,9,6,2,3,-6,-7,-5,-3,6,8,-9,7,-6,-9,9,3,-4,2,-4,-9,5,-3,10,-9,-9,-10,-6,10,-6,-3,10,4,6,-7,5,1,3,10,1,-10,8,9,-6,8,-9,-6,-8,1,8,-4,-8,-3,-10,4,4,-4,-3,6,3,1,4,10,-8,6,1,-1,5,-7,8,-10,7,-3,-8,-10,-3,-4,-8,9,-5,4,-4,-4,10,6,5,8,-8,2,2,-9,-3,-3,7,-7,-6,-10,-7,-9,-6,-2,-1,-4,-5,-6,-8,-3,-8,-2,-10,-9,9,7,2,4,3,2,8,2,2,-10,3,-1,-2,3,-9,10,-2,7,-5,3,-5,-1,-10,-8,-8,-1,4,1,-5,9,9,-4,-6,-4,-10,-10,-3,-1,1,3,8,2,6,-1,8,-4,9,7,-9,-8,-7,5,7,-10,5,-2,9,-6,-5,-5,9,1,9,5,6,-8,-2,-4,-1,1,-10,-1,-5,4,-6,-5,2,2,4,1,1,-5,-6,-3,-5,-5,5,4,4,2,-8,-6,-4,2,-6,-8,-6,-9,1,-1,6,1,-3,1,-2,-9,1,9,-6,3,-5,10,-5,-4,-2,-5,1,2,-1,-1,-8,-1,8,4,2,7,-10,1,-5,-4,-9,7,-4,-4,-4,6,-7,-10,-7,-8,-4,8,-1,9,-3,-5,1,2,3,-10,3,8,3,7,-2,10,-2,-10,-9,-9,4,-5,-9,10,-5,8,6,-1,4,8,-5,-10,9,9,10,8,-5,-9,-2,-6,-1,8,-2,6,-7,2,3,8,-1,-7,5,5,8,4,-4,8,7,-3,-5,7,-1,3,-10,-5,-7,3,10,4,1,10,8,-9,4,-6,-10,10,-1,-9,-5,3,7,-6,4,-4,7,8,-2,2,10,-6,10,-6,-2,-3,9,10,2,2,-7,-8,-2,2,7,3,-2,10,6,5,10,6,-4,5,4], dtype = "uint32")#candidate|2364|(420,)|const|uint32
const_2365 = relay.const([[-1.235541],[4.831662],[0.044105],[9.432494],[-1.406226],[-4.335749],[6.250254],[-2.630462],[-7.937717],[-5.136097],[-3.256286],[6.967486],[6.795325],[0.385504],[2.038206],[4.741927],[-2.823276],[-6.640419],[1.341259],[7.245393],[-2.337081],[-9.665054],[-1.427405],[2.471564],[-1.063150],[-6.558479],[5.095703],[-2.055379],[-0.554758],[-4.370072],[-5.201930],[3.085033],[-8.532493],[-5.423880],[2.089768],[1.843361],[1.687779],[1.073661],[1.188563],[-6.326537],[9.162724],[-0.528549],[-6.117960],[9.328295],[-4.429007],[-3.362861],[4.216275],[8.540076],[-9.557019],[9.662211],[-3.664292],[5.747963],[3.419205],[4.820437],[1.745483],[-1.220947],[-1.967020],[8.342234],[-9.963359],[4.443901],[-4.262533],[8.427194],[8.787146],[-1.544787],[-6.917717],[5.114951],[-5.704536],[1.853377],[-4.387616],[-6.076977],[-3.122327],[-3.397634],[9.538936],[-7.624344],[-4.885336],[3.743203],[4.979099],[-4.487077],[6.304556],[-5.153221],[-6.955961],[-0.241274],[6.758405],[-6.015889],[7.256048],[1.533586],[-8.108204],[-0.546200],[-2.568578],[6.214315],[1.465889],[3.827108],[8.834212],[7.081608],[-3.386830],[-1.209479],[-7.392248],[-8.480453],[-2.799204],[2.988563],[4.935490],[-1.462037],[-8.603610],[-2.530472],[7.767690],[9.961822],[-5.590973],[8.505038],[-3.630068],[-1.077062],[3.976924],[5.777533],[-9.568149],[1.257976],[9.112427],[-8.226999],[7.146707],[-9.801494],[6.245859],[-5.184629],[-9.818158],[5.729209],[7.427735],[-8.097341],[-0.045851],[-3.827790],[2.749908],[9.053249],[7.524408],[6.680510],[6.257027],[-2.478668],[-7.248589],[-8.203937],[5.233931],[-0.396449],[-0.017865],[-7.934867],[-1.266887],[7.358259],[5.501412],[-7.143484],[5.692637],[-8.448166],[-3.645409],[3.868700],[7.212412],[9.927075],[-2.020749],[-7.105402],[-0.580474],[3.062451],[-1.219631],[-3.800319],[-7.519320],[0.756044],[-3.954043],[2.041111],[1.572330],[-4.150161],[6.431863],[0.668977],[5.970768],[-4.996002],[-8.569319],[0.605019],[1.972384],[3.587416],[-8.453928],[-6.070456],[4.614190],[1.978447],[-8.668811],[-4.943953],[-1.581899],[3.014890],[-7.611131],[9.098545],[2.386461],[-5.606585],[-9.661371],[9.504987],[-7.046264],[3.550636],[-2.161804],[-4.423773],[-8.181360],[9.832707],[-2.030382],[-8.437041],[0.440686],[-0.223802],[7.693465],[9.033052],[3.721763],[-8.179688],[-3.398723],[0.451399],[7.641494],[8.506506],[-8.319052],[0.968935],[2.767532],[2.132194],[-1.463613],[7.448962],[-1.111624],[-2.760266],[3.784676],[-4.932528],[5.832673],[-2.707971],[-7.882551],[-0.442364],[-2.984212],[-1.103879],[2.350616],[1.211806],[-6.917446],[-0.097613],[8.590752],[-8.482591],[2.605946],[8.487445],[3.727753],[5.538797],[-3.088458],[-6.044215],[6.527773],[-7.377196],[-5.657777],[3.398886],[7.825853],[7.944035],[5.292217],[-0.076207],[6.788426],[-9.928667],[6.584452],[3.293145],[-5.469629],[5.336659],[-4.585072],[6.400545],[9.023211],[2.643058],[-2.169503],[1.952274],[-0.115509],[-0.653868],[3.121482],[-0.240378],[1.578304],[8.986937],[-3.112553],[8.829833],[-0.916853],[4.520290],[-4.421339],[-0.038030],[8.392369],[-1.677957],[-3.686666],[9.181893],[-4.391938],[1.881886],[-9.930407],[-2.245608],[-8.895305],[0.036902],[-7.871266],[5.915830],[6.696834],[1.957669],[-7.142826],[5.629581],[6.103642],[9.155878],[-9.806871],[-9.045542],[-1.888205],[-4.056513],[6.533380],[3.294347],[-8.215287],[-2.655392],[6.188371],[7.485599],[2.958470],[4.894486],[0.659788],[4.899658],[-9.838607],[-8.234193],[8.296451],[1.770728],[-9.292814],[-4.645422],[-1.333522],[-4.289605],[-8.773121],[1.898816],[-8.149478],[0.088643],[7.748042],[5.432082],[9.915638],[0.181434],[-5.102909],[-8.529331],[1.177984],[6.299128],[3.608656],[7.908274],[3.235657],[7.438306],[5.590702],[-0.504585],[0.666370],[6.864063],[-8.465641],[7.301823],[2.914620],[3.904288],[3.303155],[5.538910],[6.992995],[-0.258447],[-6.004112],[-7.984555],[2.578937],[-5.474670],[-9.931162],[3.627650],[-3.170737],[-8.108161],[3.039884],[-1.513323],[-2.685818],[-5.925253],[-4.953733],[-1.489704],[7.234385],[-2.653066],[7.927725],[7.764411],[-9.751176],[0.122894],[-3.494491],[3.370055],[3.951252],[6.263264],[4.085426],[2.715156],[7.437552],[5.934483],[4.471372],[0.905516],[5.436431],[-9.109214],[-9.105080],[3.883946],[4.928913],[4.333696],[1.971707],[-0.929754],[-5.493843],[-3.686963],[-1.575980],[-8.317795],[8.996928],[5.428399],[8.934675],[8.794418],[-3.611475],[9.758778],[-7.455784],[-6.579927],[8.940741],[6.929062],[-1.090066],[4.310129],[-2.990288],[-1.117069],[2.118381],[-0.813151],[9.318175],[0.428546],[9.767998],[7.865242],[6.570759],[-7.587624],[3.292522],[8.135390],[7.598782],[-6.607710],[7.154823],[-4.708710],[5.911369],[-1.218697],[5.658281],[3.463938],[-4.347762],[-5.799417],[-7.479802],[7.611608],[-1.475731],[0.845807],[-8.300770],[8.585564],[9.975865],[5.984693],[0.922622],[-6.212712],[4.094325],[-6.004649],[-0.017352],[3.407378],[-4.978434],[-7.559646],[8.264703],[-2.886575],[0.223208],[9.767651],[2.518306],[5.650912],[-7.645014],[8.716079],[4.912005],[-6.837348],[-9.834523],[8.512000],[9.372746],[6.632699],[-7.843870],[-5.510487],[7.233794],[-4.362884],[-1.665711],[4.641259],[-3.792371],[-0.268995],[3.177668],[-7.873349],[-9.823598],[0.164279],[6.191444],[2.878097],[1.142602],[6.531007],[-1.844405],[7.925335],[-1.416041],[-1.241933],[-2.815818],[-4.634717],[0.640177],[3.120587],[-8.968834],[7.171332],[7.970584],[7.569713],[4.683743],[7.296131],[6.747292],[0.259001],[-0.034023],[-0.784723],[-3.634766],[7.177033],[-1.232793],[5.454802],[-7.043023],[-4.961898],[-2.794957],[8.307322],[8.861027],[1.785068],[7.461503],[4.133103],[2.987791],[-7.984962],[-1.665585],[-3.999743],[-7.838514],[6.790391],[-4.659831],[-6.541747],[4.115029],[9.532190],[-7.061149],[6.383307],[-5.227484],[-2.018621],[6.406460],[-4.316586],[-2.934935],[-1.380296],[3.047118],[6.837599],[-7.124753],[-4.604823],[0.712259],[-3.284828],[-5.303236],[9.019349],[-2.251864],[-3.460066],[4.935826],[6.957442],[-5.018321],[0.564731],[-3.932576],[0.850735],[-0.286905],[3.798286],[9.183614],[7.873501],[-5.189715],[-8.964456],[-6.467164],[8.899785],[-6.545651],[7.745928],[0.880643],[9.207392],[-3.160007],[-7.630425],[-4.882625],[5.346162],[6.034529],[-5.164703],[-2.211049],[8.456757],[6.135700],[2.180729],[6.828550],[-5.296773],[-5.850515],[5.144699],[-7.015310],[-1.200691],[0.189527],[-5.613468],[-2.037212],[4.604820],[-0.702182],[7.949138],[1.311939],[-0.143639],[-5.413832],[-9.351876],[-2.644705],[4.174600],[-3.967796],[-3.732819],[0.455956],[-3.530526],[-5.896907],[1.524746],[-9.001962],[-9.813906],[-1.903271],[9.009785],[-5.494880],[-4.928652],[-2.160275],[2.824227],[4.250429],[1.264530],[7.024069],[7.234257],[-7.633694],[-0.840875],[-5.563621],[-7.447581],[-0.049771],[3.374055],[-0.561397],[-6.022762],[-8.751544],[1.124152],[-2.535560],[-9.801840],[9.077001],[0.817922],[4.658622],[-5.727407],[-7.316357],[-5.397846],[-3.667734],[6.711527],[4.060819],[1.917750],[-6.230439],[5.699784],[-3.141127],[6.240993],[0.847673],[-2.226881],[3.802420],[4.319026],[-7.722653],[9.497832],[-6.599943],[8.567668],[-0.197276],[3.153017],[-6.330242],[4.141710],[5.943246],[6.094947],[3.234896],[-0.159186],[-6.247618],[4.434768],[-5.681288],[9.117892],[-9.910221],[-3.789268],[-9.790727],[4.719525],[-9.447227],[3.035732],[6.444507],[4.724860],[3.716835],[-4.937756],[6.294941],[1.452358],[-9.745337],[-4.951824],[4.134450],[5.856017],[-0.527927],[3.554940],[-9.179962],[2.012054],[3.985653],[6.537621],[8.319175],[1.816220],[1.615786],[1.557889],[-5.352982],[1.339987],[1.584130],[-1.699938],[4.047698],[6.570209],[6.336125],[-6.417533],[2.560518],[-4.057182],[-1.338605],[-3.196601],[7.135191],[-7.419665],[7.000972],[2.579394],[-8.471596],[-5.090527],[-0.491831],[7.238940],[1.127229],[3.842970],[4.328356],[-7.529152],[0.154145],[6.241432],[-6.455187],[6.001485],[-7.910522],[-3.100061],[1.324858],[6.043029],[-2.583191],[-8.570266],[-6.685180],[-9.163101],[-9.577356],[-0.328738],[-4.298944],[-8.628224],[-5.695581],[6.308294],[5.989041],[-4.171941],[1.769060],[-9.101423],[-0.156275],[-2.301435],[7.923264],[-9.181302],[-2.644314],[4.730463],[-5.624472],[-2.101400],[-2.914211],[0.440839],[3.639496],[3.448131],[5.787407],[-9.204030],[2.798237],[-6.174470],[-2.065033],[-1.766825],[0.863118],[-7.216567],[-2.490496],[-7.238273],[1.273721],[7.369155],[0.975888],[-3.157639],[0.759488],[-6.991820],[1.031262],[4.882524],[3.102097],[9.227361],[7.677819],[2.715254],[-8.795457],[-0.753578],[-9.110151],[4.232651],[-8.664201],[5.416437],[7.582310],[-4.368517],[-0.764708],[-1.914183],[6.476402],[-3.596174],[2.734074],[-4.700654],[1.169011],[4.316125],[2.468989],[-3.896057],[-8.202256],[-9.285166],[-4.131055],[-4.421253],[4.687506],[7.073507],[3.740326],[-8.008559],[4.688290],[2.361749],[-1.168854],[4.444022],[-7.132670],[5.923141],[9.735618],[8.434630],[6.605939],[-1.175489],[1.670657],[-5.070563],[4.783998],[-9.473349],[2.371309],[1.308247],[0.705450],[1.509598],[-8.888420],[-0.808649],[4.932378],[6.662805],[4.459831],[-0.116003],[-9.465367],[9.935841],[0.559152],[-6.748108],[2.595389],[-9.474787],[6.878294],[1.037378],[-9.492700],[-6.940173],[-5.389613],[0.212209],[-7.526740],[-0.311577],[5.945328],[8.791394],[4.794056],[-2.179626],[-5.490086],[0.415618],[2.876035],[-5.476187],[2.503058],[-7.665870],[-9.716794],[-7.539933],[0.338837],[-4.975873],[-8.233637],[3.581046],[3.974712],[0.809985],[5.294461],[5.901501],[2.272718],[3.821131],[-6.345687],[6.664266],[-5.313854],[-5.623766],[9.899020],[5.137408],[-2.517660],[-3.976649],[-6.116652],[4.309606],[-9.537976],[-8.821868],[-6.045179],[3.394186],[-7.083343],[-4.395339],[-5.512872],[-9.992230],[6.591341],[4.233308],[9.296007],[8.229680],[-4.822905],[8.668061],[-9.176727],[-8.223831],[7.455103],[-7.248282],[2.753062],[0.270181],[9.895950],[-0.318407],[-3.644757],[-5.456631],[4.104575],[-6.007916],[-0.696396],[5.046003],[4.463158],[0.434322],[6.076250],[9.887222],[-2.976486],[-4.056860],[2.152888],[5.295392],[0.850075],[4.187928],[-9.324022],[-6.911630],[5.451829],[-7.894725],[-1.022528],[7.337192],[-8.483211],[4.490146],[-6.366903],[4.987173],[7.809227],[-6.120857],[3.281918],[2.864120],[-9.733305],[-6.039154],[-1.021661],[-3.290828],[5.452535],[6.142371],[-0.270458],[-3.517060],[3.480247],[-2.998438],[-5.376232],[-5.486502],[1.557331],[-4.413848],[-5.100650],[-7.994937],[-0.120797],[1.791115],[8.921529],[8.541544],[-2.259200],[-6.945162],[1.517984],[-3.410941],[4.356158],[-9.752564],[-1.395103],[0.299288],[-4.194164],[-1.117706],[6.573765],[9.422020],[-1.644776],[-6.952032],[-8.377693],[-8.675365],[-6.433061],[-2.778425],[3.878332],[-8.288911],[1.142969],[-2.588666],[7.493353],[-5.392515],[-4.222479],[-5.815155],[7.495113],[6.533023],[-4.847763],[1.144588],[5.921286],[0.507947],[-0.316190],[1.997737],[-7.106779],[-5.363160],[2.738585],[6.597356],[-8.932950],[-5.743418],[8.430245],[-2.261959],[-5.030319],[-9.202666],[2.200639],[5.392493],[0.874490],[-4.147023],[-6.027293],[-2.539710],[7.997640],[0.498196],[7.588150],[1.770607],[-3.215167],[-0.309050],[-8.425159],[-6.658226],[6.879809],[8.775904],[-6.581938],[2.469071],[-2.739667],[6.938401],[-6.493827],[6.033783],[9.645221],[-5.722798],[-2.820613],[-8.493850],[0.729869],[-0.052492],[-8.711495],[-1.640923],[7.379279],[-5.385159],[-6.540887],[3.950792],[-5.060851],[-5.536651],[-9.672031],[-3.809435],[-6.407508],[9.851815],[4.873171],[2.613835],[-2.951298],[-6.651801],[-3.113275],[-5.480668],[0.806223],[4.349859],[1.375392],[-9.391657],[9.153292],[-0.056621],[-8.243062],[2.658641],[9.124413],[7.090360],[9.515319],[5.161875],[-3.709758],[-8.634223],[-5.813567],[-9.577227],[2.675155],[4.897449],[9.907826],[-5.223023],[-4.953000],[-5.345358],[-2.136533],[0.279524],[-7.902466],[-2.724458],[3.878727],[-7.169837],[8.631435],[-5.046591],[5.731021],[8.125908],[-1.686108],[6.918183],[-3.574351],[4.313063],[-1.349231],[-9.351941],[2.203463],[-2.475869],[-5.047895],[0.107237],[-7.211204],[-6.274162],[-7.664058],[8.677512],[1.142954],[0.324342],[-2.727829],[4.596267],[-5.332695],[8.777903],[4.318661],[9.020320],[-6.650724],[-8.338591],[-5.482331],[-7.348067],[1.812340],[9.920259],[-7.090911],[-0.155818],[3.589972],[7.964199],[-8.152058],[4.331033],[5.217685],[-4.798640],[-2.723134],[-6.691075],[3.471299],[3.625495],[-9.042430],[1.100277],[-3.506224],[-5.958071],[1.046445],[2.191405],[-2.352751],[-8.931528],[8.178572],[5.532683],[7.274108],[8.426215],[-8.957286],[-6.422529],[2.580008],[8.623390],[2.886502],[6.542108],[4.192926],[-4.632156],[-7.041827],[-6.561493],[9.648034],[-3.936660],[-3.209164],[5.572373],[6.587514],[8.388424],[-5.271513],[5.578888],[6.513325],[-3.283592],[3.292313],[9.743208],[4.934555],[-2.089759],[1.787049],[-7.413662],[9.000044],[4.684918],[-5.532699],[8.390576],[-8.925351],[5.514016],[-5.767320],[-2.519380],[-2.300117],[3.908886],[-7.281146],[-6.321606],[-4.206055],[-1.924709],[1.554799],[-2.948822],[8.403750],[-1.108978],[5.334200],[9.889791],[-2.859240],[-6.311787],[8.977046],[5.781945],[6.765264],[-2.552477],[5.645616],[3.069403],[7.440892],[7.543990],[-9.079607],[2.767908],[3.469758],[-7.114421],[-8.003715],[-5.096599],[-0.719660],[3.689081],[9.724819],[0.933698],[7.526605],[6.369919],[3.691310],[8.467627],[-4.690536],[9.828242],[-5.754781],[-0.466718],[0.918043],[-7.773348],[-6.171188],[-9.129109],[-5.021330],[-2.874015],[-7.080576],[-4.555394],[4.112021],[-5.185478],[2.345408],[3.675413],[-7.804350],[-1.695161],[-2.565922],[6.036135],[6.309766],[3.628157],[-7.579590],[4.995935],[5.859894],[3.505211],[7.952084],[-2.966866],[8.747562],[7.874637],[-5.699709],[-2.578385],[-1.519486],[9.224195],[9.563633],[-8.285207],[8.900126],[-6.943602],[2.151055],[-3.133306],[5.405667],[2.223350],[4.348256],[-7.960969],[-9.167602],[8.208207],[-2.206837],[-4.907973],[9.330340],[0.955182],[-9.579478],[4.119542],[1.605685],[2.985376],[0.836194],[-8.476092],[7.753457],[-5.495672],[9.436630],[6.834227],[-5.228005],[-6.990819],[-4.190859],[3.436437],[-2.313956],[-8.802180],[-5.120812],[-7.615203],[7.086307],[4.579277],[2.182754],[-1.022249],[0.539509],[-5.344554],[1.501445],[-8.968201],[-0.289972],[-7.486095],[1.608194],[-5.745995],[0.346173],[-8.597016],[7.080286],[6.482303],[5.393255],[6.289825],[-5.325425],[1.695830],[-3.570347],[-9.854921],[-2.799192],[-4.588646],[0.569624],[2.378003],[-3.181410],[0.579698],[2.019903],[-9.617268],[-3.671081],[4.060374],[-9.043098],[5.573947],[-7.487790],[-7.474232],[-5.012168],[-9.207856],[2.707418],[3.585495],[-6.299401],[-6.640752],[9.739015],[-3.183916],[0.654562],[6.786106],[-7.757422],[0.744567],[7.769385],[-1.415695],[-8.252841],[1.307839],[6.890578],[2.045536],[-4.028872],[-3.939395],[2.038484],[4.093674],[-6.282954],[5.234647],[-8.170490],[3.473890],[-1.503283],[3.057753],[0.374486],[8.837778],[-4.560775],[-8.777738],[5.443110],[0.201580],[1.666423],[-2.134023],[-8.926336],[0.765626],[9.117961],[-0.533108],[4.385265],[-7.622106],[2.580736],[4.031464],[7.153725],[-0.639847],[7.269772],[-1.003209],[-4.273120],[-5.848873],[5.218615],[-0.864060],[9.870415],[-7.926795],[1.261938],[-3.577689],[-6.542941],[-7.034707],[7.555773],[5.564082],[-3.433331],[-6.539891],[-6.438244],[-9.923831],[-1.452457],[-3.444272],[5.267439],[5.944926],[-9.154504],[4.530524],[0.475146],[-3.329682],[2.612326],[9.430474],[9.698492],[2.035174],[-1.348788],[7.017291],[-7.064035],[5.940241],[9.059189],[-5.243559],[-9.415118],[8.674325],[1.141109],[-7.961853],[-5.597647],[8.386629],[7.365463],[-1.131614],[5.798416],[2.728233],[-4.303404],[-2.260486],[-0.829268],[4.875859],[-7.487224],[7.795944],[-6.483669],[2.237469],[3.025162],[-0.926218],[3.517239],[0.991784],[-6.317116],[4.215874],[-8.676121],[2.038816],[3.920038],[6.334280],[1.803564],[2.410783],[8.085130],[-8.671526],[9.300594],[2.844733],[-6.825872],[8.135685],[4.817620],[-8.639085],[-5.592430],[9.929202],[-7.444421],[1.547857],[7.482670],[-1.134387],[-1.388003],[-8.658162],[-8.376030],[0.201233],[-1.064280],[-1.619805],[-1.699077],[-2.776022],[2.340996],[0.604909],[-0.475820],[-9.249285],[4.389561],[9.137646],[-5.396913],[6.310478],[1.523507],[-2.363270],[-5.606998],[-9.711964],[9.515758],[9.362729],[-3.939689],[7.913242],[6.539574],[8.351374],[-9.063787],[-4.068156],[-9.082072],[-9.470599],[5.336263],[2.412032],[8.147910],[-2.602505],[2.989129],[-0.558755],[-2.657191],[-8.984114],[-1.096717],[-4.009525],[-5.285832],[0.125790],[6.543060],[-1.698434],[9.701664],[-7.955170],[-2.620972],[-0.437155],[-4.624251],[1.454928],[4.290358],[-0.908309],[-2.221217],[-9.964142],[-1.744710],[-3.343317],[-8.040518],[1.864116],[3.056481],[0.350265],[-4.257792],[-2.817704],[1.336398],[-1.441539],[6.930088],[4.382076],[-6.822071],[-0.698595],[-8.102947],[4.411502],[4.133431],[1.784922],[9.793835],[5.389738],[-7.628896],[-2.743135],[2.324652],[9.056560],[9.494617],[-1.683542],[-3.031735],[3.607327],[3.952738],[0.519276],[-1.186832],[-1.267824],[-4.764150],[1.001409],[3.072092],[-6.018070],[-3.308794],[-6.274598],[7.451759],[-5.630162],[-9.229281],[-3.537837],[9.264816],[8.114530],[1.684339],[-2.396061],[9.774358],[-5.123368],[3.873233],[4.331649],[-5.680220],[-5.888676],[-8.004945],[-4.405808],[3.778770],[-9.477237],[9.047243],[-9.168494],[-1.041978],[6.941917],[-2.050604],[7.719003],[8.824760],[8.738146],[-1.605024],[4.974703],[-9.394110],[3.509952],[-0.538343],[9.373320],[-2.285593],[8.085743],[-2.687603],[-3.310839],[4.874907],[-4.858653],[-1.813806],[8.959080],[3.129670],[-7.762880],[-5.754293],[5.768809],[2.603193],[4.136237],[-1.344143],[4.815023],[6.290442],[2.544710],[-0.567757],[-9.662132],[2.547075],[7.688837],[0.338531],[7.786799],[1.413957],[-5.589223],[9.599174],[2.490688],[-3.257910],[0.206836],[4.802723],[4.361420],[9.125400],[-4.822982],[3.556801],[-7.932372],[8.252021],[-4.584086],[-1.669391],[-7.449952],[6.126682],[3.332709],[-3.738723],[9.843053],[-1.987799],[5.092521],[-0.975627],[-1.505547],[5.364083],[5.860516],[8.136093],[-5.784722],[-2.362608],[9.500553],[-1.222274],[-5.153744],[-7.713461],[1.553034],[-3.715873],[8.672471],[5.530894],[-4.772282],[-9.792715],[7.172791],[3.244218],[-2.964981],[-9.815259],[-6.676678],[9.937112],[-7.067949],[9.345638],[0.485491],[-3.118702],[-1.692744],[6.451191],[6.855997],[-0.394298],[-4.331140],[-2.763393],[9.632804],[2.208113],[9.693812],[-3.406465],[-2.932803],[4.036874],[4.874978],[9.250152],[2.955906],[1.279864],[4.160622],[5.487374],[8.662034],[-2.499080],[-2.294036],[-8.605269],[0.024058],[5.317863],[4.669865],[-6.042053],[1.549676],[-5.914664],[-5.812074],[9.911922],[-3.130755],[7.992966],[-4.023246],[-5.242711],[-6.418109],[6.432529],[-5.365079],[-8.605613],[3.527518],[-2.135998],[6.427626],[-7.818764],[-2.210135],[-7.109964],[9.734304],[-1.279316],[-4.794292],[2.737363],[4.006009],[2.348938],[-2.674288],[-5.897181],[-7.370381],[-6.392767],[5.501605],[-7.063512],[6.815364],[0.391940],[-8.049856],[-0.670392],[-7.262526],[8.502602],[-4.059305],[9.178809],[-0.330994],[-2.544325],[1.686927],[8.554760],[7.458974],[-4.124167],[-8.262840],[-2.984110],[6.423272],[-3.523110],[5.759846],[4.623658],[8.518358],[-3.968199],[5.888434],[6.092248],[-7.092552],[0.571579],[0.071675],[8.969371],[-6.599766],[3.660331],[0.680975],[3.762200],[0.654540],[-3.485618],[-1.924800],[-3.716207],[-4.188664],[-1.076816],[-2.141480],[1.750436],[7.709464],[6.077170],[-6.653046],[4.704847],[-9.777828],[5.425375],[-1.010998],[-3.758585],[-5.398149],[-5.415203],[9.783132],[4.336832],[-0.194903],[5.348522],[5.043316],[4.972459],[9.586280],[1.606407],[-3.068963],[4.136633],[9.779855],[-3.681382],[3.583409],[-8.605576],[9.185767],[-5.205413],[2.050573],[-6.972190],[3.050223],[7.832322],[-0.430526],[3.552704],[8.464527],[9.576864],[-4.631551],[-8.390266],[-4.872114],[3.447480],[4.849200],[6.834461],[5.310807],[2.967567],[8.949849],[-5.046293],[-0.122585],[-0.019815],[-7.269465],[-5.093557],[-4.878778],[2.823514],[-0.948549],[2.209957],[-0.994233],[-2.282355],[-5.859398],[-7.113616],[-9.816609],[-7.622693],[7.371729],[-3.846761],[-5.459065],[3.201652],[4.064539],[-7.321868],[5.965200],[-6.817628],[2.803537],[-1.493899],[-3.203133]], dtype = "float32")#candidate|2365|(1728, 1)|const|float32
call_2363 = relay.TupleGetItem(func_1908_call(relay.reshape(const_2364.astype('uint32'), [6, 5, 14]), relay.reshape(const_2364.astype('uint32'), [6, 5, 14]), relay.reshape(const_2365.astype('float32'), [8, 216]), ), 3)
call_2366 = relay.TupleGetItem(func_1912_call(relay.reshape(const_2364.astype('uint32'), [6, 5, 14]), relay.reshape(const_2364.astype('uint32'), [6, 5, 14]), relay.reshape(const_2365.astype('float32'), [8, 216]), ), 3)
func_1056_call = mod.get_global_var('func_1056')
func_1059_call = mutated_mod.get_global_var('func_1059')
call_2367 = func_1056_call(relay.reshape(const_2364.astype('float64'), [14, 15, 2]))
call_2368 = func_1056_call(relay.reshape(const_2364.astype('float64'), [14, 15, 2]))
uop_2370 = relay.tan(call_2336.astype('float32')) # shape=(8, 11, 5)
uop_2372 = relay.tan(call_2337.astype('float32')) # shape=(8, 11, 5)
func_133_call = mod.get_global_var('func_133')
func_135_call = mutated_mod.get_global_var('func_135')
var_2377 = relay.var("var_2377", dtype = "float64", shape = (1, 270))#candidate|2377|(1, 270)|var|float64
call_2376 = relay.TupleGetItem(func_133_call(relay.reshape(var_2377.astype('float64'), [9, 10, 3])), 0)
call_2378 = relay.TupleGetItem(func_135_call(relay.reshape(var_2377.astype('float64'), [9, 10, 3])), 0)
uop_2379 = relay.acosh(uop_2358.astype('float64')) # shape=(8, 11, 5)
uop_2381 = relay.acosh(uop_2360.astype('float64')) # shape=(8, 11, 5)
func_1703_call = mod.get_global_var('func_1703')
func_1706_call = mutated_mod.get_global_var('func_1706')
call_2390 = relay.TupleGetItem(func_1703_call(relay.reshape(uop_2358.astype('float64'), [8, 11, 5])), 0)
call_2391 = relay.TupleGetItem(func_1706_call(relay.reshape(uop_2358.astype('float64'), [8, 11, 5])), 0)
var_2396 = relay.var("var_2396", dtype = "float64", shape = (8, 11, 5))#candidate|2396|(8, 11, 5)|var|float64
bop_2397 = relay.multiply(uop_2379.astype('uint16'), relay.reshape(var_2396.astype('uint16'), relay.shape_of(uop_2379))) # shape=(8, 11, 5)
bop_2400 = relay.multiply(uop_2381.astype('uint16'), relay.reshape(var_2396.astype('uint16'), relay.shape_of(uop_2381))) # shape=(8, 11, 5)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_2403 = relay.TupleGetItem(func_2271_call(), 0)
call_2404 = relay.TupleGetItem(func_2272_call(), 0)
func_133_call = mod.get_global_var('func_133')
func_135_call = mutated_mod.get_global_var('func_135')
call_2420 = relay.TupleGetItem(func_133_call(relay.reshape(var_2377.astype('float64'), [9, 10, 3])), 0)
call_2421 = relay.TupleGetItem(func_135_call(relay.reshape(var_2377.astype('float64'), [9, 10, 3])), 0)
bop_2422 = relay.left_shift(bop_2397.astype('int16'), relay.reshape(uop_2379.astype('int16'), relay.shape_of(bop_2397))) # shape=(8, 11, 5)
bop_2425 = relay.left_shift(bop_2400.astype('int16'), relay.reshape(uop_2381.astype('int16'), relay.shape_of(bop_2400))) # shape=(8, 11, 5)
func_951_call = mod.get_global_var('func_951')
func_956_call = mutated_mod.get_global_var('func_956')
const_2440 = relay.const([[True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False]], dtype = "bool")#candidate|2440|(1, 300)|const|bool
const_2441 = relay.const([9,-4,-9,6,-9,9,-3,2,2,7,-6,-10,10,9,-10,-3,-6,-2], dtype = "int16")#candidate|2441|(18,)|const|int16
call_2439 = relay.TupleGetItem(func_951_call(relay.reshape(const_2440.astype('bool'), [5, 5, 12]), relay.reshape(const_2440.astype('bool'), [5, 5, 12]), relay.reshape(const_2441.astype('int16'), [1, 18]), ), 0)
call_2442 = relay.TupleGetItem(func_956_call(relay.reshape(const_2440.astype('bool'), [5, 5, 12]), relay.reshape(const_2440.astype('bool'), [5, 5, 12]), relay.reshape(const_2441.astype('int16'), [1, 18]), ), 0)
var_2444 = relay.var("var_2444", dtype = "float64", shape = (8, 11, 5))#candidate|2444|(8, 11, 5)|var|float64
bop_2445 = relay.logical_and(uop_2379.astype('bool'), relay.reshape(var_2444.astype('bool'), relay.shape_of(uop_2379))) # shape=(8, 11, 5)
bop_2448 = relay.logical_and(uop_2381.astype('bool'), relay.reshape(var_2444.astype('bool'), relay.shape_of(uop_2381))) # shape=(8, 11, 5)
bop_2455 = relay.greater(uop_2379.astype('bool'), relay.reshape(bop_2445.astype('bool'), relay.shape_of(uop_2379))) # shape=(8, 11, 5)
bop_2458 = relay.greater(uop_2381.astype('bool'), relay.reshape(bop_2448.astype('bool'), relay.shape_of(uop_2381))) # shape=(8, 11, 5)
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
var_2467 = relay.var("var_2467", dtype = "uint32", shape = (810,))#candidate|2467|(810,)|var|uint32
call_2466 = relay.TupleGetItem(func_1313_call(relay.reshape(var_2467.astype('uint32'), [9, 15, 6])), 0)
call_2468 = relay.TupleGetItem(func_1315_call(relay.reshape(var_2467.astype('uint32'), [9, 15, 6])), 0)
output = relay.Tuple([call_2363,const_2364,const_2365,call_2367,uop_2370,call_2376,var_2377,call_2390,call_2403,call_2420,bop_2422,call_2439,const_2440,const_2441,bop_2455,call_2466,var_2467,])
output2 = relay.Tuple([call_2366,const_2364,const_2365,call_2368,uop_2372,call_2378,var_2377,call_2391,call_2404,call_2421,bop_2425,call_2442,const_2440,const_2441,bop_2458,call_2468,var_2467,])
func_2473 = relay.Function([var_2377,var_2396,var_2444,var_2467,], output)
mod['func_2473'] = func_2473
mod = relay.transform.InferType()(mod)
var_2474 = relay.var("var_2474", dtype = "float64", shape = (1, 270))#candidate|2474|(1, 270)|var|float64
var_2475 = relay.var("var_2475", dtype = "float64", shape = (8, 11, 5))#candidate|2475|(8, 11, 5)|var|float64
var_2476 = relay.var("var_2476", dtype = "float64", shape = (8, 11, 5))#candidate|2476|(8, 11, 5)|var|float64
var_2477 = relay.var("var_2477", dtype = "uint32", shape = (810,))#candidate|2477|(810,)|var|uint32
output = func_2473(var_2474,var_2475,var_2476,var_2477,)
func_2478 = relay.Function([var_2474,var_2475,var_2476,var_2477,], output)
mutated_mod['func_2478'] = func_2478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_2561 = relay.TupleGetItem(func_2271_call(), 1)
call_2562 = relay.TupleGetItem(func_2272_call(), 1)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_2572 = relay.TupleGetItem(func_2271_call(), 2)
call_2573 = relay.TupleGetItem(func_2272_call(), 2)
func_133_call = mod.get_global_var('func_133')
func_135_call = mutated_mod.get_global_var('func_135')
const_2583 = relay.const([-5.180679,1.323903,-1.880655,-7.060448,-6.108414,3.758372,3.928174,6.015974,-0.815379,-9.211680,6.976909,4.545496,2.971337,2.335790,5.428090,8.313244,-8.974269,-0.269736,5.607722,0.210395,-0.612213,-4.184401,-2.017850,9.625008,2.476152,2.860644,6.730721,-8.188359,6.404591,-9.569627,-5.569590,-0.772793,-6.529871,-2.517339,0.950711,8.709014,-3.891776,-9.216247,0.219464,7.109077,7.663434,0.687432,4.706244,0.872921,-4.745202,1.789491,-8.072396,0.255140,-5.913994,-0.696443,6.760536,9.430678,0.484961,2.558933,7.463280,6.481240,6.564859,-2.416475,-1.186520,0.528015,6.814318,-0.575537,-8.336637,-6.953765,0.813723,-8.184793,-5.922093,-1.705519,5.676505,9.927374,-6.871856,9.695507,3.783139,-9.726275,-3.329740,-1.975948,-6.871799,2.869137,-1.346122,-8.616937,-8.620760,8.613204,-3.389404,5.610397,5.574003,6.106056,7.168624,7.569690,-1.089732,4.378083,1.798843,-6.731674,-7.794732,-0.961104,4.887196,-0.503357,1.423597,-2.451938,6.151888,-0.659969,-5.428023,-5.147796,-9.425179,2.505307,3.623633,1.065767,-7.199903,-1.855672,7.750051,-3.445894,8.989284,8.387640,-7.682481,2.490508,2.934386,-4.161568,3.663903,3.898885,-9.635221,-3.770146,7.034574,-6.920131,3.817232,-0.473979,0.688870,4.039622,4.717065,1.485964,-2.265716,1.685654,-0.672259,-4.500997,-9.819082,-5.503268,-1.128799,-0.865897,-6.587273,8.958794,-1.719145,8.447893,-0.082576,-3.676828,4.558728,9.385305,-3.543744,9.650513,-8.885501,-4.474727,1.606149,1.148348,0.463035,-1.970142,-5.704942,1.138434,4.769081,-3.529701,6.692141,-1.058142,2.877403,6.591082,-0.707820,-1.600224,-5.933313,-0.923369,8.835099,2.491474,1.300639,6.998941,8.978268,-7.551968,6.137924,8.000282,-3.172758,6.467228,8.933529,4.965350,2.056536,4.153435,0.002512,0.330306,8.965934,4.692272,-3.168673,9.915058,-7.730850,5.901221,-8.173262,-5.285828,-4.967306,-4.049439,-2.998874,5.513904,-3.612516,9.904177,-2.033793,-6.499205,2.093924,0.155566,-1.558622,-1.854893,-8.513526,-5.915521,-7.449359,6.797030,-1.864523,-6.276990,-6.049165,-9.154136,-5.766890,-6.080895,5.690853,5.617335,-2.689046,-2.294643,6.559827,2.884455,-1.974326,-4.119563,6.771841,7.389950,-0.107294,-4.795336,-1.106377,9.774315,8.630574,7.125904,-1.275734,7.376877,8.046971,-4.676576,-7.024896,0.034756,2.795761,5.897801,8.870311,5.340575,6.087307,-4.636898,-7.384540,-6.593752,1.142023,-5.367644,-0.130039,1.427733,-1.895637,-0.517816,8.932677,7.992188,-3.665276,5.350113,-7.792601,5.080661,8.881194,8.566635,5.845968,4.076523,9.253679,-9.387033,0.054843,-2.442810,8.417716,2.191161,-7.573461,-3.709523,4.938880,-4.957127,-2.370579,1.105368,-0.532048,4.831164], dtype = "float64")#candidate|2583|(270,)|const|float64
call_2582 = relay.TupleGetItem(func_133_call(relay.reshape(const_2583.astype('float64'), [9, 10, 3])), 0)
call_2584 = relay.TupleGetItem(func_135_call(relay.reshape(const_2583.astype('float64'), [9, 10, 3])), 0)
output = relay.Tuple([call_2561,call_2572,call_2582,const_2583,])
output2 = relay.Tuple([call_2562,call_2573,call_2584,const_2583,])
func_2596 = relay.Function([], output)
mod['func_2596'] = func_2596
mod = relay.transform.InferType()(mod)
output = func_2596()
func_2597 = relay.Function([], output)
mutated_mod['func_2597'] = func_2597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2596_call = mod.get_global_var('func_2596')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_2620 = relay.TupleGetItem(func_2596_call(), 2)
call_2621 = relay.TupleGetItem(func_2597_call(), 2)
output = relay.Tuple([call_2620,])
output2 = relay.Tuple([call_2621,])
func_2625 = relay.Function([], output)
mod['func_2625'] = func_2625
mod = relay.transform.InferType()(mod)
mutated_mod['func_2625'] = func_2625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2625_call = mutated_mod.get_global_var('func_2625')
call_2626 = func_2625_call()
output = call_2626
func_2627 = relay.Function([], output)
mutated_mod['func_2627'] = func_2627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2625_call = mod.get_global_var('func_2625')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_2644 = relay.TupleGetItem(func_2625_call(), 0)
call_2645 = relay.TupleGetItem(func_2627_call(), 0)
output = call_2644
output2 = call_2645
func_2647 = relay.Function([], output)
mod['func_2647'] = func_2647
mod = relay.transform.InferType()(mod)
output = func_2647()
func_2648 = relay.Function([], output)
mutated_mod['func_2648'] = func_2648
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2663 = relay.const([[[-7,-5,7,2,-10,-9,-6,-6,3,-9],[7,-6,10,2,7,5,5,4,7,8],[-10,10,9,2,-6,-1,-6,4,8,-7],[-1,8,6,8,9,-3,-4,8,10,9],[10,-9,-8,2,8,-10,4,5,-1,3],[10,10,10,-9,-7,8,-10,-6,1,-6],[-7,-8,-6,3,5,-9,4,10,9,-6],[-10,4,1,-10,-7,-1,-5,-7,1,8],[4,4,-9,3,4,4,6,-5,7,-9]],[[-4,-9,1,-7,4,2,-7,7,9,-5],[1,-8,-7,-4,-8,7,7,-10,9,-3],[-5,2,-9,7,1,4,1,-9,-5,-1],[9,-7,-3,5,4,-5,-2,10,-6,-1],[9,10,-7,6,-3,-7,4,-7,10,-9],[9,-5,2,2,4,-6,-9,3,-5,-10],[-8,9,10,1,7,6,7,-6,-7,-7],[-2,-4,-9,-8,7,-1,6,1,7,8],[5,9,-7,8,-1,-5,-10,-5,7,3]],[[3,3,3,7,-7,3,1,1,-7,2],[-4,3,7,2,5,-9,9,-10,-5,4],[2,-1,1,10,1,-8,-2,-10,2,2],[7,-6,3,-1,-2,10,4,6,-1,5],[-2,-8,5,1,2,-5,-7,7,6,10],[-5,-2,10,-4,6,-5,-2,1,3,-7],[9,3,-2,6,8,-7,-4,2,7,-9],[5,1,8,-5,6,-3,-3,-1,-7,-4],[-4,-8,10,-4,-7,-9,-6,-10,-4,5]],[[-8,-7,7,7,-6,8,3,-8,-7,-9],[-5,5,-1,-6,-1,-5,1,9,9,-1],[8,-4,-5,-4,-3,7,3,1,-6,-7],[10,-3,5,9,7,-10,9,-7,-4,-7],[4,-7,5,-9,7,-7,9,9,3,9],[-10,-6,-2,-3,4,3,3,4,-10,-8],[-2,-5,6,-6,-6,8,3,4,7,-2],[-7,-10,7,-10,-9,-5,5,2,7,-10],[-5,8,-4,-5,-8,-3,-2,-7,7,7]],[[8,-8,5,4,-10,-3,-5,-4,3,-2],[-6,8,-10,-8,-4,6,8,-5,-6,5],[5,2,10,1,-7,4,9,-3,7,-9],[-10,-3,9,-1,8,10,5,5,9,-7],[-8,10,-3,10,6,-2,-2,-5,4,-5],[-4,-6,-6,4,-7,-2,4,-4,-6,-8],[4,9,7,-7,1,-3,-7,-4,2,-10],[9,-5,5,1,-4,2,-10,-5,6,-8],[-4,-10,2,7,1,2,-1,-6,-6,6]],[[7,9,-2,6,6,2,5,-4,7,-8],[9,2,-6,-6,5,-6,3,-2,2,10],[-2,-10,8,1,-5,6,8,6,8,10],[-6,-8,6,4,7,-7,-8,-3,1,4],[2,2,9,8,9,-1,-8,4,8,-1],[-1,4,-5,8,3,-4,1,9,-1,9],[8,-5,-8,10,4,-3,-8,-6,5,1],[-5,7,10,-8,-4,2,-9,-8,-5,-3],[10,6,2,-2,-6,-9,7,-9,-1,-7]],[[5,8,-6,1,5,-10,9,-2,10,9],[7,6,-3,9,1,-8,-5,10,-3,1],[-4,-2,1,-5,-9,4,4,10,-7,1],[4,4,-8,-1,7,10,6,-4,7,5],[-6,4,1,7,-4,5,10,9,6,-8],[3,4,-9,4,8,3,-10,-3,-2,8],[1,-4,-5,-6,5,3,1,7,8,5],[1,-1,5,-2,6,-1,-5,7,-9,2],[6,-2,-5,-4,-10,-8,-7,2,4,-6]],[[-7,-7,-5,-4,-7,10,4,-10,-1,-3],[-3,4,1,-1,1,7,-6,10,-9,6],[3,-1,10,-7,6,-3,-4,-1,2,-9],[-9,9,-1,7,-5,7,-10,4,-8,10],[2,4,-10,-10,7,3,6,-3,3,8],[-4,-6,1,-6,-1,-6,-2,7,-7,2],[6,2,-1,10,7,-4,3,7,7,7],[-10,1,3,-1,4,-6,3,6,-5,10],[6,-2,3,7,3,-8,-6,4,-6,10]],[[2,-4,-6,-1,-7,-2,4,-4,-5,6],[4,10,2,7,-1,-10,5,-8,-4,-1],[-9,-6,8,9,-10,3,1,-1,-9,3],[-7,3,-6,-2,-9,1,-5,10,-6,9],[5,9,-5,-9,9,2,-4,8,5,2],[3,1,-2,-1,1,-4,2,-2,-4,-9],[6,10,8,2,8,-9,-7,8,5,-10],[9,-3,-9,-8,-10,7,10,-6,5,-6],[-1,-5,7,-10,3,9,5,-3,-8,7]],[[-7,4,4,-8,7,4,-10,8,4,-10],[-9,-9,2,9,4,-10,2,10,5,7],[-3,1,1,1,-9,-2,-1,-5,4,6],[3,1,-9,1,1,5,-8,7,8,-5],[-10,-7,8,7,9,-4,-7,-8,-7,2],[9,-4,-6,8,-1,-10,10,4,-1,-3],[-4,3,-1,-10,1,8,1,-7,-7,10],[-8,10,10,-9,5,-3,9,2,6,10],[-6,-7,4,-6,9,-8,-8,8,-2,-1]],[[8,-8,10,9,-2,3,-9,4,4,-4],[-6,1,-1,-2,-5,4,6,4,-3,-2],[-4,-2,-7,8,-6,4,7,8,6,2],[4,9,-9,-4,6,9,10,4,-10,9],[-7,2,10,-3,-1,-10,-3,2,9,-6],[3,6,-9,-3,5,4,6,-5,5,3],[-2,-10,-1,9,-10,9,-2,-9,7,9],[1,-3,1,-3,5,2,-2,-4,-7,-5],[8,2,-8,3,10,-7,-5,-10,-8,3]],[[-1,-1,-9,6,-8,5,-6,7,6,1],[-10,-9,-9,-3,3,10,-1,9,-6,8],[-7,-1,1,-10,8,5,10,-6,4,-3],[3,1,4,8,6,-5,10,-7,-4,8],[-8,1,-8,4,4,8,-3,-5,-10,9],[8,8,-10,1,-6,5,3,-2,4,-2],[5,8,-1,-7,6,5,-7,-4,-2,2],[-5,1,-4,-10,9,9,-3,4,-9,-3],[4,-9,-4,10,9,5,-9,-3,-9,3]],[[2,-2,8,9,6,2,-1,-2,5,1],[4,-9,2,9,-2,9,-4,-1,6,10],[1,1,3,6,-7,-4,-5,-5,-5,-8],[9,-3,8,-5,-5,8,5,7,-5,7],[-4,-3,4,-5,4,-7,1,-4,-5,5],[4,-5,5,6,-9,-1,4,1,4,10],[-1,9,-9,3,3,-4,-3,3,-3,9],[-4,2,-6,7,-8,6,-3,1,1,6],[4,-1,10,-9,5,-2,10,-6,-8,-6]],[[1,6,-10,-6,3,-5,3,-5,9,4],[2,2,4,10,-2,-8,10,-7,-3,1],[6,-2,-1,-9,-9,-4,-3,-4,-8,-8],[-3,-5,2,-5,-6,10,4,8,7,6],[2,-6,8,-3,6,-9,10,2,-8,9],[-3,4,3,3,-1,7,-8,-2,4,-5],[7,-7,-9,-10,-6,-9,-10,-6,-6,4],[-7,5,-3,-4,-10,-7,-2,-5,3,-8],[-6,8,1,-10,5,6,-2,-9,-8,4]],[[-9,-9,3,-4,9,7,-10,-3,1,9],[7,9,-8,6,1,-8,-9,3,-8,2],[10,3,4,-10,9,-2,5,-6,2,-9],[-2,-3,-3,-4,-7,8,-6,7,9,5],[-5,2,10,2,-10,3,9,4,6,1],[-4,1,4,-2,-3,8,-3,7,10,5],[10,1,-6,1,3,-7,3,-1,-4,-7],[-7,7,7,5,-3,7,-8,3,5,10],[-8,-7,3,-7,10,-7,10,8,8,-5]],[[2,4,-2,6,3,-7,2,-1,3,-3],[-1,-7,4,10,-9,-3,-7,-2,8,-8],[5,1,1,-2,1,5,-6,4,-8,-2],[-9,9,-1,-9,-9,9,4,1,5,8],[-1,-9,7,-8,10,-3,6,7,1,8],[4,-5,-1,-2,2,-2,4,1,-9,-6],[1,-7,9,4,-1,1,-10,-4,5,-7],[7,-1,3,2,-2,-10,-8,-10,3,9],[6,1,-8,-7,10,-9,5,10,1,1]]], dtype = "int32")#candidate|2663|(16, 9, 10)|const|int32
var_2664 = relay.var("var_2664", dtype = "int32", shape = (16, 9, 10))#candidate|2664|(16, 9, 10)|var|int32
bop_2665 = relay.not_equal(const_2663.astype('bool'), relay.reshape(var_2664.astype('bool'), relay.shape_of(const_2663))) # shape=(16, 9, 10)
output = bop_2665
output2 = bop_2665
func_2668 = relay.Function([var_2664,], output)
mod['func_2668'] = func_2668
mod = relay.transform.InferType()(mod)
var_2669 = relay.var("var_2669", dtype = "int32", shape = (16, 9, 10))#candidate|2669|(16, 9, 10)|var|int32
output = func_2668(var_2669)
func_2670 = relay.Function([var_2669], output)
mutated_mod['func_2670'] = func_2670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2733 = relay.var("var_2733", dtype = "float32", shape = (4, 11, 11))#candidate|2733|(4, 11, 11)|var|float32
uop_2734 = relay.acos(var_2733.astype('float32')) # shape=(4, 11, 11)
uop_2758 = relay.log10(uop_2734.astype('float32')) # shape=(4, 11, 11)
var_2764 = relay.var("var_2764", dtype = "float32", shape = (4, 11, 11))#candidate|2764|(4, 11, 11)|var|float32
bop_2765 = relay.floor_mod(uop_2758.astype('float64'), relay.reshape(var_2764.astype('float64'), relay.shape_of(uop_2758))) # shape=(4, 11, 11)
output = relay.Tuple([bop_2765,])
output2 = relay.Tuple([bop_2765,])
func_2769 = relay.Function([var_2733,var_2764,], output)
mod['func_2769'] = func_2769
mod = relay.transform.InferType()(mod)
var_2770 = relay.var("var_2770", dtype = "float32", shape = (4, 11, 11))#candidate|2770|(4, 11, 11)|var|float32
var_2771 = relay.var("var_2771", dtype = "float32", shape = (4, 11, 11))#candidate|2771|(4, 11, 11)|var|float32
output = func_2769(var_2770,var_2771,)
func_2772 = relay.Function([var_2770,var_2771,], output)
mutated_mod['func_2772'] = func_2772
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2781 = relay.var("var_2781", dtype = "float32", shape = (3, 16, 13))#candidate|2781|(3, 16, 13)|var|float32
uop_2782 = relay.acos(var_2781.astype('float32')) # shape=(3, 16, 13)
bop_2786 = relay.greater(uop_2782.astype('bool'), relay.reshape(var_2781.astype('bool'), relay.shape_of(uop_2782))) # shape=(3, 16, 13)
uop_2794 = relay.sin(uop_2782.astype('float64')) # shape=(3, 16, 13)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
var_2801 = relay.var("var_2801", dtype = "float32", shape = (1, 192))#candidate|2801|(1, 192)|var|float32
call_2800 = relay.TupleGetItem(func_65_call(relay.reshape(var_2801.astype('float32'), [1, 12, 16])), 0)
call_2802 = relay.TupleGetItem(func_68_call(relay.reshape(var_2801.astype('float32'), [1, 12, 16])), 0)
output = relay.Tuple([bop_2786,uop_2794,call_2800,var_2801,])
output2 = relay.Tuple([bop_2786,uop_2794,call_2802,var_2801,])
func_2803 = relay.Function([var_2781,var_2801,], output)
mod['func_2803'] = func_2803
mod = relay.transform.InferType()(mod)
mutated_mod['func_2803'] = func_2803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2803_call = mutated_mod.get_global_var('func_2803')
var_2805 = relay.var("var_2805", dtype = "float32", shape = (3, 16, 13))#candidate|2805|(3, 16, 13)|var|float32
var_2806 = relay.var("var_2806", dtype = "float32", shape = (1, 192))#candidate|2806|(1, 192)|var|float32
call_2804 = func_2803_call(var_2805,var_2806,)
output = call_2804
func_2807 = relay.Function([var_2805,var_2806,], output)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2625_call = mod.get_global_var('func_2625')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_2830 = relay.TupleGetItem(func_2625_call(), 0)
call_2831 = relay.TupleGetItem(func_2627_call(), 0)
output = call_2830
output2 = call_2831
func_2840 = relay.Function([], output)
mod['func_2840'] = func_2840
mod = relay.transform.InferType()(mod)
output = func_2840()
func_2841 = relay.Function([], output)
mutated_mod['func_2841'] = func_2841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2840_call = mod.get_global_var('func_2840')
func_2841_call = mutated_mod.get_global_var('func_2841')
call_2904 = func_2840_call()
call_2905 = func_2840_call()
var_2909 = relay.var("var_2909", dtype = "float64", shape = (9, 10, 3))#candidate|2909|(9, 10, 3)|var|float64
bop_2910 = relay.greater_equal(call_2904.astype('bool'), relay.reshape(var_2909.astype('bool'), relay.shape_of(call_2904))) # shape=(9, 10, 3)
bop_2913 = relay.greater_equal(call_2905.astype('bool'), relay.reshape(var_2909.astype('bool'), relay.shape_of(call_2905))) # shape=(9, 10, 3)
func_2596_call = mod.get_global_var('func_2596')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_2922 = relay.TupleGetItem(func_2596_call(), 0)
call_2923 = relay.TupleGetItem(func_2597_call(), 0)
output = relay.Tuple([bop_2910,call_2922,])
output2 = relay.Tuple([bop_2913,call_2923,])
func_2928 = relay.Function([var_2909,], output)
mod['func_2928'] = func_2928
mod = relay.transform.InferType()(mod)
mutated_mod['func_2928'] = func_2928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2929 = relay.var("var_2929", dtype = "float64", shape = (9, 10, 3))#candidate|2929|(9, 10, 3)|var|float64
func_2928_call = mutated_mod.get_global_var('func_2928')
call_2930 = func_2928_call(var_2929)
output = call_2930
func_2931 = relay.Function([var_2929], output)
mutated_mod['func_2931'] = func_2931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2625_call = mod.get_global_var('func_2625')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_2944 = relay.TupleGetItem(func_2625_call(), 0)
call_2945 = relay.TupleGetItem(func_2627_call(), 0)
output = relay.Tuple([call_2944,])
output2 = relay.Tuple([call_2945,])
func_2954 = relay.Function([], output)
mod['func_2954'] = func_2954
mod = relay.transform.InferType()(mod)
output = func_2954()
func_2955 = relay.Function([], output)
mutated_mod['func_2955'] = func_2955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2840_call = mod.get_global_var('func_2840')
func_2841_call = mutated_mod.get_global_var('func_2841')
call_2961 = func_2840_call()
call_2962 = func_2840_call()
uop_2966 = relay.cos(call_2961.astype('float32')) # shape=(9, 10, 3)
uop_2968 = relay.cos(call_2962.astype('float32')) # shape=(9, 10, 3)
func_1213_call = mod.get_global_var('func_1213')
func_1218_call = mutated_mod.get_global_var('func_1218')
var_2985 = relay.var("var_2985", dtype = "uint32", shape = (147, 2))#candidate|2985|(147, 2)|var|uint32
var_2986 = relay.var("var_2986", dtype = "float32", shape = (1728,))#candidate|2986|(1728,)|var|float32
const_2987 = relay.const([-3.805313,-4.568955,-6.726412,6.183218,2.664521,0.734950,5.609398,-7.241491,-9.926989,-5.064388,9.639440,2.806213,-3.966465,1.270495,-8.602508,1.217437,6.856849,-8.519078,-6.903095,-1.468572,-1.241353,7.411251,-2.340352,-6.881644,3.954816,3.160941,-2.845174,-6.880375,5.100419,-1.042577,-2.832222,-6.799499,-5.306086,-6.153522,-0.438801,-6.397578,-6.958434,-0.556290,5.585043,-7.472013,0.272709,1.049886,-4.834262,8.426239,2.817935,-1.011399,0.904265,6.992312,8.759105,-6.621106,8.882904,-1.067056,-6.339059,-7.504665,5.280166,-0.619680,8.205529,-6.520916,2.554818,5.013382,-2.905251,5.236159,7.667708,4.830295,-5.317008,-9.422297,-0.230779,8.433182,-3.045569,3.228566,-2.230366,-3.444800,4.462420,-1.953330,-4.157914,-6.814224,3.221179,-7.111854,-9.443286,2.706076,0.864398,-2.351702,-1.313881,4.853308,-3.176507,-5.248705,-2.489945,-8.012333,-2.912527,3.499991,-3.395789,0.842705,7.045042,-5.944237,9.912808,-0.779658,-2.830137,-7.828668,-3.822409,8.565091,-6.582257,-1.067549,-2.320246,5.575356,1.985190,-9.021928,-3.308782,3.463591,1.592878,2.872591,8.277762,-0.504267,8.287611,-2.824907,-5.480053,-9.462184,2.439697,8.913753,0.352888,-7.411008,2.882366,-9.793887,-8.235531,4.800403,-6.640060,-0.725726,-6.543503,0.463118,-0.157934,-7.458458,2.645813,2.957832,3.309040,-1.480564,8.526337,9.400613,7.831613,-2.397127,8.566542,-9.759002,8.282810,7.643713,9.348367,8.621592,-0.246846,-9.610623,-3.582519,-6.224732,-0.779925,-9.646221,-0.274734,3.194096,6.425517,6.854766,0.272120,-9.565672,5.120857,1.170757,-0.582501,-6.442413,-6.727349,-7.199296,-1.887533,-3.672979,-2.510129,7.946013,-5.541434,-2.714195,-9.687570,-9.149682,1.110859,-4.234692,-4.408344,2.431445,-6.979661,4.987664,-8.231908,6.713620,-4.422856,-4.214552,-7.072739,5.084633,-3.966820,8.591840,-0.584605,-0.187345,-4.811430,-6.842506,-2.093848,-7.434868,2.236080,5.922087,1.072298,-1.414371,-3.167893,-1.752072,-3.805263,7.853820,-7.723341,-8.567039,-0.926146,-5.587348,5.134691,3.642569,7.334520,1.344680,0.015909,-4.154913,2.839508,6.707617,1.552320,9.835667,0.498698,-4.586054,2.518473,-4.786266,-6.574146,-8.123430,4.589586,8.771936,1.294245,2.900116,-2.458286,-5.734206,1.557792,8.502417,6.187458,-1.785964,-6.051552,-7.969895,8.135682,5.642866,-0.101702,-4.036251,-8.988080,-2.334400,-7.863028,-0.209300,1.175775,-1.843043,-9.523477,-0.693323,-5.880691,5.220824,4.611145,-9.119522,-4.298434,-4.763416,-4.201297,8.617119,4.579229,-4.117937,9.262752,-5.077140,7.692983,3.528986,-3.238337,-8.144885,6.098029,3.062920,4.436963,2.338364,-1.724502,-3.332063,-1.756013,1.575904,5.959641,4.213978,-0.023480,-6.978994,3.258649,-9.571759,0.550057,-7.302316,-0.614281,8.216367,-3.068761,7.116916,4.371790,3.677917,8.249247,7.018341,-9.018878,-9.135162,-5.596379,0.729255,-4.427416,8.989240,-8.528770,-2.607383,-8.167432,-9.107997,1.072115,6.345185,-9.471125,-2.773519,2.690162,-6.644079,6.532484,-2.172555,0.720969,7.215382,4.522871,3.440089,-4.145215,-1.482926,-5.592250,2.684524,2.372573,-6.184405,5.700379,7.423363,-6.642035,1.215925,-5.561508,8.410693,6.865736,-8.282151,1.700246,-6.848556,4.436703,-9.511086,5.500422,5.850754,-6.621659,-1.078848,6.675182,-6.581172,-4.284846,8.162808,-5.374512,-9.660190,5.184391,-5.369643,0.470887,-4.261433,-2.762628,-6.870846,2.007089,-8.666459,6.673199,7.263269,-1.106394,-2.028443,8.057324,-2.886905,-7.768845,5.189989,8.852136,-8.753660,-1.424474,1.705028,-1.468423,2.517749,-7.913699,8.636304,-4.386781,-2.628659,0.089523,3.456436,-1.574829,-5.225135,2.940053,-5.009112,9.614188,7.375646,1.068356,-4.055333,-1.115174,5.389775,8.172833,-2.099883,-9.544731,6.293689,7.527232,-0.146229,-1.891782,-2.299575,9.208269,-2.795133,1.974694,-9.971430,-9.106433,-0.454683,-7.409892,0.487081,9.553423,-5.411240,-2.064243,7.104970,-0.347421,4.512379,-1.362504,-9.311659,-3.987070,-3.868624,-2.487466,1.612513,-8.852035,0.200366,8.126834,-1.556465,-1.494078,-9.782467,-3.985950,-3.927207,-1.751806,9.286293,4.714063,-8.209072,-6.912751,-6.569684,9.250281,-3.334868,1.941214,5.149715,-3.432325,0.645813,-8.278786,-5.785843], dtype = "float64")#candidate|2987|(420,)|const|float64
call_2984 = relay.TupleGetItem(func_1213_call(relay.reshape(var_2985.astype('uint32'), [3, 7, 14]), relay.reshape(var_2986.astype('float32'), [9, 12, 16]), relay.reshape(const_2987.astype('float64'), [420,]), ), 3)
call_2988 = relay.TupleGetItem(func_1218_call(relay.reshape(var_2985.astype('uint32'), [3, 7, 14]), relay.reshape(var_2986.astype('float32'), [9, 12, 16]), relay.reshape(const_2987.astype('float64'), [420,]), ), 3)
func_2769_call = mod.get_global_var('func_2769')
func_2772_call = mutated_mod.get_global_var('func_2772')
var_2993 = relay.var("var_2993", dtype = "float32", shape = (484,))#candidate|2993|(484,)|var|float32
call_2992 = relay.TupleGetItem(func_2769_call(relay.reshape(var_2993.astype('float32'), [4, 11, 11]), relay.reshape(var_2993.astype('float32'), [4, 11, 11]), ), 0)
call_2994 = relay.TupleGetItem(func_2772_call(relay.reshape(var_2993.astype('float32'), [4, 11, 11]), relay.reshape(var_2993.astype('float32'), [4, 11, 11]), ), 0)
func_665_call = mod.get_global_var('func_665')
func_669_call = mutated_mod.get_global_var('func_669')
var_3000 = relay.var("var_3000", dtype = "uint16", shape = (720,))#candidate|3000|(720,)|var|uint16
call_2999 = relay.TupleGetItem(func_665_call(relay.reshape(var_3000.astype('uint16'), [12, 5, 12]), relay.reshape(var_3000.astype('uint16'), [12, 5, 12]), ), 0)
call_3001 = relay.TupleGetItem(func_669_call(relay.reshape(var_3000.astype('uint16'), [12, 5, 12]), relay.reshape(var_3000.astype('uint16'), [12, 5, 12]), ), 0)
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
var_3004 = relay.var("var_3004", dtype = "uint32", shape = (810,))#candidate|3004|(810,)|var|uint32
call_3003 = relay.TupleGetItem(func_1313_call(relay.reshape(var_3004.astype('uint32'), [9, 15, 6])), 1)
call_3005 = relay.TupleGetItem(func_1315_call(relay.reshape(var_3004.astype('uint32'), [9, 15, 6])), 1)
func_1908_call = mod.get_global_var('func_1908')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_3010 = relay.TupleGetItem(func_1908_call(relay.reshape(const_2987.astype('uint32'), [6, 5, 14]), relay.reshape(const_2987.astype('uint32'), [6, 5, 14]), relay.reshape(var_2986.astype('float32'), [8, 216]), ), 2)
call_3011 = relay.TupleGetItem(func_1912_call(relay.reshape(const_2987.astype('uint32'), [6, 5, 14]), relay.reshape(const_2987.astype('uint32'), [6, 5, 14]), relay.reshape(var_2986.astype('float32'), [8, 216]), ), 2)
uop_3027 = relay.sinh(uop_2966.astype('float64')) # shape=(9, 10, 3)
uop_3029 = relay.sinh(uop_2968.astype('float64')) # shape=(9, 10, 3)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_3052 = relay.TupleGetItem(func_2271_call(), 0)
call_3053 = relay.TupleGetItem(func_2272_call(), 0)
output = relay.Tuple([call_2984,var_2985,var_2986,const_2987,call_2992,var_2993,call_2999,var_3000,call_3003,var_3004,call_3010,uop_3027,call_3052,])
output2 = relay.Tuple([call_2988,var_2985,var_2986,const_2987,call_2994,var_2993,call_3001,var_3000,call_3005,var_3004,call_3011,uop_3029,call_3053,])
func_3054 = relay.Function([var_2985,var_2986,var_2993,var_3000,var_3004,], output)
mod['func_3054'] = func_3054
mod = relay.transform.InferType()(mod)
var_3055 = relay.var("var_3055", dtype = "uint32", shape = (147, 2))#candidate|3055|(147, 2)|var|uint32
var_3056 = relay.var("var_3056", dtype = "float32", shape = (1728,))#candidate|3056|(1728,)|var|float32
var_3057 = relay.var("var_3057", dtype = "float32", shape = (484,))#candidate|3057|(484,)|var|float32
var_3058 = relay.var("var_3058", dtype = "uint16", shape = (720,))#candidate|3058|(720,)|var|uint16
var_3059 = relay.var("var_3059", dtype = "uint32", shape = (810,))#candidate|3059|(810,)|var|uint32
output = func_3054(var_3055,var_3056,var_3057,var_3058,var_3059,)
func_3060 = relay.Function([var_3055,var_3056,var_3057,var_3058,var_3059,], output)
mutated_mod['func_3060'] = func_3060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2596_call = mod.get_global_var('func_2596')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_3064 = relay.TupleGetItem(func_2596_call(), 0)
call_3065 = relay.TupleGetItem(func_2597_call(), 0)
output = relay.Tuple([call_3064,])
output2 = relay.Tuple([call_3065,])
func_3074 = relay.Function([], output)
mod['func_3074'] = func_3074
mod = relay.transform.InferType()(mod)
mutated_mod['func_3074'] = func_3074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mutated_mod.get_global_var('func_3074')
call_3075 = func_3074_call()
output = call_3075
func_3076 = relay.Function([], output)
mutated_mod['func_3076'] = func_3076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2625_call = mod.get_global_var('func_2625')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_3085 = relay.TupleGetItem(func_2625_call(), 0)
call_3086 = relay.TupleGetItem(func_2627_call(), 0)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_3088 = relay.TupleGetItem(func_2271_call(), 2)
call_3089 = relay.TupleGetItem(func_2272_call(), 2)
output = relay.Tuple([call_3085,call_3088,])
output2 = relay.Tuple([call_3086,call_3089,])
func_3109 = relay.Function([], output)
mod['func_3109'] = func_3109
mod = relay.transform.InferType()(mod)
mutated_mod['func_3109'] = func_3109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3109_call = mutated_mod.get_global_var('func_3109')
call_3110 = func_3109_call()
output = call_3110
func_3111 = relay.Function([], output)
mutated_mod['func_3111'] = func_3111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3117 = relay.TupleGetItem(func_3074_call(), 0)
call_3118 = relay.TupleGetItem(func_3076_call(), 0)
func_1375_call = mod.get_global_var('func_1375')
func_1379_call = mutated_mod.get_global_var('func_1379')
const_3152 = relay.const(3, dtype = "int64")#candidate|3152|()|const|int64
const_3153 = relay.const([[-9,3],[-6,8],[1,6],[7,10],[7,-6],[-6,-6],[-7,9],[-1,10],[-5,-5],[3,3],[-3,5],[8,3],[-9,-6],[3,-10],[-1,10],[9,-3],[-2,9],[4,-7],[-9,-8],[-8,-4],[1,4],[2,-6],[-2,-4],[-6,-9],[-5,-4],[-10,-5],[-5,-10],[5,2],[4,2],[9,-8],[4,-5],[-10,1],[-3,-4],[5,-4],[4,3],[-7,-7],[-10,-6],[7,-1],[-9,3],[1,5],[-8,6],[10,-6],[-3,-6],[-4,1],[2,-5],[3,-7],[-2,-2],[-4,-6],[-5,8],[4,10],[2,8],[-6,4],[-6,6],[4,-4],[6,9],[2,-4],[2,2],[5,3],[-7,7],[-8,3],[9,5],[-3,-10],[-4,10],[-8,3],[-6,4],[-7,1],[8,7],[-1,1],[-10,-3],[-5,3],[-4,5],[5,2],[3,5],[4,3],[-5,7],[-1,-6],[-7,3],[2,3],[-8,9],[-8,-7],[6,-2],[7,2],[6,-8],[2,-9],[10,10],[9,-9],[-2,10],[-7,3],[-8,-6],[10,5],[-9,-4],[-6,9],[4,-8],[-3,-10],[3,-6],[-9,-8],[2,2],[-3,-8],[1,-3],[-5,-10],[2,-2],[7,1],[-5,2],[4,1],[-3,-9],[-1,9],[9,6],[6,2],[6,-4],[-7,-4],[-10,6],[-6,1],[1,8],[-7,1],[-2,-9],[-5,-8],[-7,3],[-5,-8],[-3,10],[-3,-3],[-1,4],[1,-5],[2,-1],[6,-7],[10,-1],[-9,2],[3,-5],[3,9],[-10,-3],[10,-4],[-1,-9],[-4,2],[-10,-1],[-1,-5],[6,-9],[10,4],[-2,-3],[-4,-3],[3,2],[2,-3],[8,-3],[8,-1],[10,3],[9,9],[6,-2],[-10,3],[-10,-3],[2,5],[2,7],[6,6],[10,-5],[9,-8],[8,3],[-6,-3],[5,7],[2,7],[1,-5],[4,4],[-1,10],[-3,-4],[8,-10],[6,-1],[9,-8],[1,8],[9,-9],[-5,6],[-2,-7],[-5,-7],[-2,9],[2,1],[-9,4],[-6,2],[-8,-10],[-5,-10],[-3,1],[1,2],[7,-1],[3,-10],[-1,-4],[9,-2],[-10,9],[-7,2],[9,7],[-3,3],[-2,1],[-4,-10],[7,2],[2,4],[-6,-7],[5,4],[-3,2],[-2,8],[-9,9],[-9,-10],[5,-4],[-6,8],[1,-7],[-5,10],[4,3],[-9,1],[-7,-1],[1,3],[-3,-4],[-5,-3],[8,-5],[-2,10],[-7,3],[-4,-3],[-5,9],[6,-4],[1,8],[-10,4],[-10,2],[4,-10],[-7,-8],[-9,3],[-7,-2],[6,-4],[3,5],[-2,3],[10,5],[-9,8],[10,-6],[8,3],[-2,2],[10,-9],[7,-8],[4,10],[7,9],[-10,10],[4,-7],[5,-10],[4,9],[8,-8],[-3,-4],[8,-3],[9,10],[9,-1],[8,-5],[-9,-2],[-9,-8],[-8,-3],[-5,-7],[1,7],[-2,-3],[-9,-5],[-2,9],[-7,6],[-1,-4],[3,1],[-4,-10],[-10,7],[3,4],[2,-8],[10,-8],[8,5],[-10,-2],[6,-2],[4,5],[8,6],[2,3],[9,-10],[1,-6],[-4,10],[-9,7],[-8,6],[-1,-7],[-3,-10],[5,10],[-7,1],[-10,6],[-7,6],[-1,-3],[-3,2],[-2,-1],[-4,-9],[-6,-10],[-9,10],[-9,3],[-5,4],[-3,-6],[8,8],[-8,4],[-2,2],[-3,-1],[-5,-4],[-7,10],[6,-7],[-3,-3],[10,-2],[2,2],[-10,-2],[-7,7],[-1,-6],[-8,10],[2,-2],[10,-5],[-9,-3],[-2,5],[-1,7],[9,2],[7,-8],[-4,-10],[6,1],[-7,8],[-5,9],[6,-3],[2,-5],[-8,-10],[-4,-1],[-7,-7],[10,8],[-6,5],[5,-3],[9,-8],[-8,3],[9,-10],[-10,-1],[9,-9],[-6,8],[3,-5],[9,-9],[-6,3],[-9,7],[-8,9],[7,6],[-8,4],[-3,-5],[-8,-5],[10,7],[-1,7],[5,-8],[-2,-2],[8,4],[-4,-9],[-3,-3],[7,-9],[-4,-3],[7,6],[8,8],[10,-9],[-9,-4],[5,1],[-10,-10],[4,3],[8,-4],[-8,8],[2,-5],[5,3],[-1,8],[-2,4],[5,6],[5,-9],[7,-7],[-4,8],[2,-10],[-9,2],[2,6],[9,6],[5,-7],[-3,-1],[-2,5],[5,3],[9,6],[-8,8],[6,-6],[5,3],[7,-10],[8,1],[2,-5],[-9,6],[-4,6],[1,-6],[1,4],[-5,5],[8,-2],[-7,-6],[9,7],[2,8],[6,-9],[-9,5],[-8,-5],[7,7],[-3,10],[4,-8],[7,-4],[9,-4],[5,1],[10,-3],[5,3],[8,-7],[-1,-1],[-5,9],[-4,-1],[-5,7],[2,-4],[-4,-1],[7,-2],[6,-7],[8,-1],[9,-5],[4,-4],[-2,-7],[-9,-7],[1,3],[-3,-4],[6,-5],[1,7],[7,3],[-9,10],[-7,8],[-9,-8],[-4,-10],[-8,6],[-8,-8],[1,1],[1,-1],[2,-4],[10,3],[-8,2],[4,8],[8,5],[9,7],[1,7],[-3,-2],[10,3],[9,-1],[-9,-8],[-5,-4],[-2,-9],[2,-10],[5,5],[-6,4],[-3,7],[-3,1],[-3,6],[7,1],[10,-10],[-5,7],[8,9],[-9,1],[9,5],[8,7],[-7,9],[6,-1],[7,1],[2,3],[10,-3],[6,10],[-3,9],[-3,3],[1,1],[-2,-4],[-6,5],[2,5],[10,8],[1,3],[-5,5],[9,7],[4,7],[-2,6],[-5,5],[9,-9],[9,6],[7,4],[-10,-1],[1,-10],[6,2],[8,8],[-9,1],[5,8],[9,-6],[1,-8],[10,-1],[7,-7],[-9,-5],[-7,8],[-7,5],[-1,6],[6,6],[-1,-8],[4,-6],[-1,6],[-4,-6],[-3,8],[-5,2],[7,-6],[9,8],[-6,4],[8,-5],[-5,-8],[3,1],[-10,7],[-3,1],[-8,-10],[-1,-8],[-7,-1],[4,-5],[-6,-7],[8,-6],[-6,-4],[-2,10],[-4,-7],[-1,1],[9,4],[-7,-2],[1,-3],[-9,7],[-4,6],[-6,5],[7,4],[-1,7],[-7,5],[9,7],[7,10],[1,-1],[8,10],[-4,-5],[-9,10],[-6,-1],[-9,8],[-4,-9],[-7,6],[6,-2],[7,-2],[6,-5],[-8,6],[3,8],[-4,1],[3,6],[10,-7],[-3,5],[-8,-2],[-2,-9],[1,4],[-3,-9],[9,2],[1,10],[-3,-10],[-6,6],[-9,10],[5,-4],[7,2],[10,-6],[1,-9],[-9,6],[7,-6],[-2,-9],[-1,4],[10,-2],[-6,6],[6,-5],[1,1],[-6,-2],[4,8],[-2,-7],[-7,9],[-1,-2],[-7,-4],[-2,2],[-6,3],[-2,5],[-5,-4],[-1,2],[-3,5],[1,-10],[-8,3],[-5,3],[-8,3],[1,7],[-10,-7],[-1,-1],[9,6],[-5,-10],[3,3],[8,1],[-10,7],[-2,-1],[7,-7],[6,-3],[-4,-7],[-9,2],[-10,-2],[-8,-4],[9,4],[-8,-8],[-3,-5],[3,-4],[-9,5],[-7,2],[1,4],[8,10],[3,-1],[-8,-8],[-3,10],[1,2],[4,-1],[-4,8],[6,-5],[-2,-4],[-10,6],[5,1],[-6,-4],[6,8],[1,2],[-2,-3],[2,5],[-4,1],[-5,3],[10,7],[-8,5],[-7,5],[4,-5],[8,5],[5,-6],[-2,-6],[1,-8],[-5,8],[-6,-7],[-6,10],[10,6],[-5,-9],[-4,1],[9,4],[7,2],[-7,-3],[-3,-5],[-3,-1],[-2,2],[-10,10],[-6,-10],[8,-7],[-6,-9],[3,-5],[2,-7],[8,-1],[-7,-10],[6,10],[10,-6],[-4,5],[6,-2],[-8,5],[-8,7],[4,-8],[1,-7],[7,8],[9,-8],[-1,-4],[9,-5],[-4,6],[-7,-10],[1,10],[-6,-10],[6,10],[3,8],[-1,10],[6,-4],[8,-2],[5,5],[-10,9],[-4,8],[-6,-3],[4,-3],[-2,4],[10,10],[-2,-4],[6,10],[-4,3],[7,-6],[-8,3],[10,9],[-1,-2],[5,-1],[-6,-3],[-4,-8],[1,6],[3,-2],[-3,-4],[-1,5],[-10,-2],[-10,-3],[10,7],[-6,-4],[-8,-6],[6,-1],[2,-2],[-10,4],[-7,-6],[-1,-1],[2,7],[-5,-8],[5,4],[-3,8],[4,-8],[-10,-6],[-9,2],[-1,5],[1,5],[4,2],[1,-9],[-3,-2],[1,-1],[2,-6],[2,-3],[10,-10],[1,-10],[-1,4],[-8,-6],[4,-8],[-8,3],[-8,3],[6,-5],[-5,9],[10,-10],[-10,5],[-9,-9],[-9,-5],[-7,8],[-7,7],[8,-2],[-5,-8],[-8,8],[-3,6],[-3,3],[5,10],[-6,9],[-9,9],[-8,-8],[-9,10],[5,7],[-10,-7],[1,5],[-8,8],[-3,-7],[3,10],[4,4],[4,-3],[1,-6],[3,4],[-3,-8],[3,-5],[2,9],[-8,7],[-6,-7],[5,1],[8,-7],[-3,6],[9,7],[1,8],[-3,-1],[7,5],[2,-6],[-10,5],[6,-10],[2,-5],[2,-2],[-3,8],[-1,-7],[10,-10],[3,-9],[2,-10],[7,-7],[8,9],[1,4],[-6,-2],[-3,3],[-2,-6],[-10,-6],[1,1],[10,7],[10,-7],[-1,-7],[-3,-4],[-7,-10],[2,1],[-2,-2],[-5,-9],[3,-2],[-3,-3],[1,-1],[-8,-3],[-2,1],[-10,3],[1,5],[10,-10],[1,5],[-2,8],[10,-2],[-4,1],[-9,-7],[-7,2],[-6,6],[8,-1],[10,5],[-8,-7],[-2,-7],[3,2],[4,-2],[-10,1],[-9,5],[2,10],[-6,4],[-6,2],[-10,-6],[-1,-7],[-8,6],[-5,-7],[1,-6],[8,5],[-9,-7],[1,-6],[-2,-6],[-3,-8],[3,-10],[-10,-5],[-8,5],[8,-1],[-10,3],[10,2],[4,-5],[-10,7],[-6,4],[-5,-8],[-1,-1],[3,-6],[-10,2],[-10,4],[-2,-10],[-5,-8],[3,8],[2,-1],[6,-3],[-3,2],[2,5],[-10,-8],[1,5],[-5,6],[6,8],[-7,2],[-2,-4],[8,8],[2,1],[-6,4],[-7,1],[3,-9],[-1,-6],[7,-4],[5,-4],[6,10],[-7,1],[10,-1],[6,8],[-1,-8],[-4,-3],[-4,-8],[6,1],[-3,-9],[-4,6],[-6,10],[10,1],[4,6],[-6,9],[-7,-7],[10,-5],[1,-5],[-6,8],[9,6],[-7,-3],[-8,9],[7,4],[-6,6],[-10,-10],[7,-3],[-8,5],[-10,-7],[9,8],[-8,-1],[-6,8],[7,9],[-7,6],[4,-4],[-4,-8],[-9,-3],[-4,6],[-9,-6],[4,-8],[-9,8],[-4,9],[8,10],[2,6],[4,2],[2,9],[-8,10],[-8,5],[-5,-5],[-7,-9],[-8,7],[-9,-3],[-4,-1],[6,-2],[3,-8],[-10,10],[6,-4],[-8,8],[-4,-7],[-9,5],[7,4],[6,-10],[7,1],[1,-1],[-7,-9],[-2,2],[-3,-8],[-1,-10],[1,-4],[9,7],[1,1],[1,8],[9,-6],[4,6],[9,2],[8,-8],[3,5],[7,-7],[-4,-2],[-2,-5],[-6,1],[-1,9],[-10,-7],[10,-7],[-1,-6],[8,9],[-4,7],[1,-7],[4,-9],[5,-4],[7,-5],[-9,2],[7,-8],[-1,-7],[8,-1],[9,-6],[-3,8],[2,-5],[3,6],[10,-4],[7,-4],[-1,-5],[8,-9],[-3,-7],[-9,6],[-7,10],[9,-4],[7,-8],[1,3],[6,4],[6,-8],[-8,5],[2,-9],[-2,-8],[7,10],[3,-8],[-3,-8],[-1,-10],[6,5],[-2,1],[4,2],[-1,7],[-6,1],[6,-4],[2,-5],[-4,1],[-4,4],[-1,-2],[5,10],[-6,-3],[3,-2],[5,7],[7,4],[8,3],[-4,-8],[2,-9],[-3,10],[-4,-4],[8,6],[-9,3],[-5,-9],[-2,5],[-7,-10],[-4,-5],[-6,8],[9,8],[5,3],[7,2],[-2,-8],[-3,-2],[-7,-1],[-1,-8],[3,-8],[-8,-2],[-10,-1],[-10,2],[-3,-8],[-3,-9],[3,3],[-6,1],[-9,-4],[3,3],[10,2],[-6,5],[5,8],[-6,-10],[6,-2],[-4,-4],[2,-9],[-3,-8],[-6,-6],[-7,4],[6,9],[10,10],[-3,-10],[5,-10],[-1,2],[1,8],[2,-10],[7,-10],[7,-5],[-9,2],[-7,-8],[4,9],[-9,1],[1,-7],[-3,2],[4,-3],[1,7],[4,3],[2,6],[-1,3],[-6,-10],[-4,-1],[-6,9],[5,3],[1,-6],[-9,-6],[2,9],[7,-1],[-6,9],[8,9],[3,7],[9,3],[-10,-4],[-10,2],[-4,-5],[-4,-5],[7,-2],[-6,-2],[6,-8],[-9,-6],[-2,8],[5,-5],[-2,2],[-7,8],[-3,-3],[-1,7],[-6,4],[-5,-4],[3,10],[3,-6],[6,-1],[-5,8],[-9,-6],[-8,10],[5,9],[6,-7],[-7,-6],[-2,3],[10,-10],[-1,4],[9,-2],[10,-1]], dtype = "int64")#candidate|3153|(1080, 2)|const|int64
call_3151 = relay.TupleGetItem(func_1375_call(relay.reshape(const_3152.astype('int64'), []), relay.reshape(const_3153.astype('int64'), [16, 9, 15]), ), 1)
call_3154 = relay.TupleGetItem(func_1379_call(relay.reshape(const_3152.astype('int64'), []), relay.reshape(const_3153.astype('int64'), [16, 9, 15]), ), 1)
bop_3155 = relay.greater_equal(const_3153.astype('bool'), const_3152.astype('bool')) # shape=(1080, 2)
bop_3159 = relay.bitwise_and(const_3152.astype('int32'), const_3153.astype('int32')) # shape=(1080, 2)
const_3162 = relay.const([[[-8,7,1,-1,10,4,7,-1,4,-3,-10,7,-4,7,-4],[9,1,-7,-3,-9,-2,-4,-10,3,-9,-8,1,7,4,1],[2,-9,-7,5,5,-3,-8,-8,-2,-6,-7,-1,2,6,-3],[-2,-8,-8,-9,2,-9,-1,-2,7,9,-8,-8,7,-9,3],[-9,-9,-8,-1,-1,3,10,9,4,-9,-9,-1,5,4,10],[-8,-4,7,5,1,3,-8,-9,-8,-2,7,-3,6,-6,-4],[10,9,-10,-8,-4,-2,2,-1,-6,-3,5,8,8,-8,8],[5,3,-4,8,-9,-8,3,-1,-2,-5,-3,-6,-10,7,-1],[9,5,-9,6,-8,4,-6,-9,-1,-1,-5,-9,-7,7,9]],[[1,5,-2,4,2,5,-9,2,7,8,-4,-4,5,-3,7],[10,10,3,-10,1,8,-9,-6,-4,8,3,-6,4,8,4],[7,-1,-1,-8,3,6,-7,10,-8,6,-8,-6,6,4,5],[-7,-3,-1,7,7,3,1,8,1,8,2,8,10,9,-8],[-3,-9,5,3,3,2,-3,4,-6,9,-6,-10,10,8,6],[-6,-1,7,6,10,10,-5,-6,-6,4,8,10,-4,-10,2],[8,-4,2,7,-1,-9,-10,6,1,-8,-9,7,-4,2,3],[9,1,-2,-5,2,9,-7,-6,-5,-6,4,-9,5,-1,-9],[-10,-8,4,-3,-3,6,-6,9,7,1,-6,9,5,3,2]],[[10,2,2,-10,-8,-1,2,-9,-1,6,-2,-6,-10,-6,9],[-4,-9,-9,-6,-7,1,-9,7,-6,8,2,-6,8,1,10],[-1,9,3,-4,-6,-3,1,1,-2,8,-9,-10,1,3,-4],[-4,-7,7,-2,1,2,-4,-8,10,-2,-9,-1,7,9,-7],[-3,7,3,-4,-5,-2,8,1,-3,-5,-1,5,5,7,-4],[-6,3,-8,9,3,6,-2,-1,10,6,-8,-2,-1,7,-3],[-10,9,-2,2,-9,-7,8,9,2,5,5,-5,10,-5,1],[9,5,-5,-5,10,1,8,7,-3,7,7,3,10,-7,2],[3,9,9,6,-2,9,2,-5,7,7,5,-5,-7,4,1]],[[2,-7,-1,7,-10,4,4,-9,6,-6,9,9,4,10,-10],[3,-3,2,-7,-3,-10,8,-6,3,-2,-7,2,4,3,-3],[-5,4,-9,3,-7,-4,-7,1,1,5,4,-4,-1,-2,4],[-7,4,-8,8,-6,10,-4,-2,10,8,9,-9,-8,-3,5],[6,8,-5,-10,8,10,7,4,-8,5,10,-9,8,1,8],[1,-2,-3,-5,-10,2,-10,-5,-2,-9,-10,-2,-9,-6,4],[-8,9,5,-7,-6,3,8,-9,-10,-5,-10,7,3,2,8],[-5,-10,6,-6,-6,-1,-2,-6,1,4,4,-2,5,9,-5],[3,3,4,-9,-4,5,-5,6,10,5,5,7,4,-3,9]],[[-10,-9,4,-4,-6,-7,6,7,-1,-1,-10,-10,6,-9,5],[-8,-10,9,2,6,-2,8,5,3,-4,-4,1,-3,6,-5],[-2,9,9,6,9,-1,5,2,7,-5,8,-5,-3,-7,10],[3,6,-4,8,-8,1,10,9,7,-5,-6,4,-5,8,8],[-5,-10,3,-8,3,9,-7,2,-3,3,1,-3,9,-4,2],[-6,4,-10,1,9,-5,-8,9,10,8,10,-3,6,2,10],[3,3,-4,-6,4,-7,-6,-1,6,7,-5,3,1,-1,-9],[-9,6,10,6,5,1,-8,8,2,-3,7,-7,7,8,-8],[-8,9,-8,6,-3,5,2,3,-5,5,5,7,10,9,-1]],[[-7,4,6,5,10,-10,3,8,-3,4,-2,-10,2,-2,-2],[-6,5,4,-5,-1,6,8,5,-7,1,-8,10,-2,10,3],[-1,10,10,5,-3,-8,2,-8,6,-7,9,-9,-5,-1,-7],[4,5,1,-8,-1,-7,-9,9,-5,-7,9,10,-4,1,10],[2,-5,8,2,-6,-8,-2,-1,-8,-5,3,-8,-3,7,-2],[5,3,-10,-8,8,5,-9,4,-7,8,-7,7,-3,-10,6],[9,5,-1,-2,7,-5,7,9,-5,4,-10,4,6,8,10],[-7,7,-3,-7,9,7,4,9,-7,-2,6,2,9,-7,-6],[-1,6,-7,6,3,7,1,-6,-7,-3,-4,10,8,5,-4]],[[-4,6,-5,-8,6,-6,5,-6,-8,-6,1,9,-7,9,-4],[-5,-10,-10,-3,-7,4,-3,3,-2,2,1,7,7,8,-9],[10,3,-4,-6,1,-7,-9,4,2,2,-1,9,10,5,1],[2,-6,1,8,-1,3,6,8,3,-5,4,-5,-7,9,4],[-3,-1,-3,-3,2,-2,9,6,-9,9,-3,1,10,-2,9],[10,4,3,6,8,7,4,9,7,-10,-1,1,-10,9,9],[9,10,-1,-1,-6,-6,1,10,1,-8,-4,-3,-1,6,-8],[-8,6,-2,-8,3,-6,-8,8,-8,3,-9,5,2,8,7],[-2,-3,-2,5,-2,7,-7,4,1,4,8,-9,-7,10,-8]],[[1,2,10,1,-8,-4,-10,8,-10,-7,-2,-10,-7,-3,-2],[4,3,-7,1,-6,2,4,5,-9,-10,1,-9,-5,8,5],[-9,5,-6,2,-2,-8,10,-10,3,-2,-4,-7,2,1,-7],[1,-7,7,9,-5,-8,9,7,5,-9,-5,9,-7,-3,4],[7,8,-2,-9,2,5,-9,10,-6,-5,3,9,3,7,-6],[-8,6,9,10,-2,4,-2,4,6,-8,-6,-5,5,10,-6],[4,-1,9,-10,-10,1,10,4,7,3,-4,-8,-3,-7,-6],[-1,-8,-1,-4,7,-5,-7,-6,-10,-2,-8,-3,5,9,1],[8,6,-6,-4,9,-6,2,9,6,-10,-2,7,7,1,8]],[[3,-6,2,7,-4,-7,-1,8,4,-9,6,-5,7,7,-7],[-2,2,9,-9,8,-3,8,4,1,-9,4,-2,-8,-8,8],[1,4,-7,-7,-9,10,2,3,-3,5,7,-9,8,-9,-4],[2,7,1,10,10,3,-1,-9,2,-1,6,-4,-6,-2,-9],[-1,6,-8,2,2,-7,-2,-1,-5,3,-10,5,-3,6,-5],[6,5,-6,6,1,7,-7,8,-2,-1,-10,-3,4,-5,5],[-7,-8,2,7,1,10,-8,9,-4,-1,-5,7,8,-7,-6],[-5,-5,7,-8,-7,-2,8,-3,8,-7,2,9,-3,-3,-2],[-3,1,-1,-7,-3,-9,-1,-5,-4,-2,1,3,5,9,-6]],[[-8,9,9,8,-10,-10,5,5,-8,2,-8,-3,-5,8,-8],[-4,-5,6,2,10,4,-2,-1,-9,-4,8,6,-6,2,4],[8,8,10,7,-7,-5,-7,10,-3,-9,-3,-10,10,9,-10],[4,10,3,-6,-1,9,6,4,6,-8,-6,-3,10,-2,7],[-10,2,-5,-10,-9,-5,-9,-4,10,10,-6,7,-3,-5,3],[-9,-5,5,-9,-2,-5,7,-2,7,-3,-8,-5,8,-1,5],[5,1,4,-9,-8,-1,1,-7,9,3,-2,10,-5,3,1],[3,1,-5,7,-10,-8,10,-9,10,-10,9,-1,7,-7,-3],[-10,6,10,8,7,6,9,3,-2,3,6,-4,-10,5,3]],[[8,4,-7,-7,-4,3,10,-6,9,7,-10,5,-10,-4,4],[2,-3,8,-3,-4,-9,-6,10,-3,-8,10,-1,-1,-2,5],[2,-10,4,-4,-2,3,-7,2,1,-6,-6,-8,-3,-10,-3],[3,-2,2,-10,4,-7,5,8,-3,5,-9,-8,-7,-5,8],[-4,5,3,-4,4,-8,7,-8,3,5,3,-8,-4,-3,-4],[8,3,5,-1,-10,-9,7,-4,-4,-8,-6,6,1,-10,8],[7,-3,-9,6,-9,6,-7,-7,-10,1,-9,-7,10,4,4],[6,-10,-2,7,-1,-6,-4,10,5,2,7,10,8,-2,2],[6,7,-4,5,5,-8,4,4,-3,3,-5,-9,-4,7,-9]],[[4,-6,1,8,-3,-3,5,-3,1,-10,-3,7,-1,9,9],[-8,5,-3,-6,-2,5,-8,-3,3,-8,10,-9,-5,10,-2],[-4,-1,4,5,7,7,-5,4,7,-1,2,8,10,4,9],[-8,-6,-4,-5,2,-6,-3,5,8,5,-9,-3,-8,4,3],[-8,8,10,-6,-9,-4,-7,-6,4,-6,-5,6,6,3,6],[3,4,7,3,6,2,-9,-7,-3,10,10,8,5,9,-2],[-1,6,8,9,9,-5,7,9,-2,-7,-4,10,-2,-6,3],[4,4,-9,-7,6,-6,-4,7,-9,8,1,-2,5,-6,-2],[10,-2,10,-7,-2,1,-5,4,-10,1,8,1,-5,-3,7]],[[9,-3,-2,-4,10,-3,5,7,10,-2,-5,-6,-2,1,1],[3,5,-3,-9,-7,3,1,8,9,3,-2,6,3,9,3],[3,-2,-2,-5,-1,1,2,4,-7,-1,-8,9,1,2,-9],[9,-3,-10,3,-7,8,8,1,4,-7,-10,-8,-9,-4,-6],[-7,3,-6,-6,-8,3,2,-10,7,1,-8,1,2,4,10],[-7,7,-7,-2,-1,-8,8,8,-3,1,9,4,5,7,-2],[-1,5,8,8,5,-2,-4,2,-10,4,-10,-1,10,-2,7],[-5,-2,4,-2,-10,4,1,4,-7,-10,-8,-6,7,-6,5],[1,-2,10,-3,-10,3,-6,-1,10,7,-1,-2,-3,-2,-6]],[[-2,7,-1,2,3,-8,-6,-1,-9,5,2,-8,-2,3,-1],[1,7,-9,-8,4,-3,-8,-1,3,1,-5,-3,-9,-5,9],[1,-9,-1,-9,-9,10,9,10,8,-9,3,-4,-6,-3,3],[-7,5,5,6,5,-10,7,5,-9,-3,4,4,-6,8,3],[5,-6,-8,6,-6,9,-8,-3,-6,-7,-5,-6,-6,-3,-4],[-6,8,9,4,10,-6,3,-7,-8,3,1,4,-8,2,5],[-8,4,4,4,9,-7,2,1,-8,-2,2,-2,-3,-7,4],[2,4,9,-1,5,6,-5,1,8,4,-2,-3,3,5,-10],[3,-2,-10,-2,-4,9,8,-8,1,-8,-4,-1,5,3,-3]],[[2,7,-2,2,5,2,6,9,7,-8,5,5,10,-10,-3],[-8,-1,-8,-1,9,-8,10,-9,6,1,2,7,-3,-1,-4],[8,-9,8,-1,10,4,9,10,5,5,-1,1,6,6,9],[-2,-1,-5,10,5,8,-6,5,6,-1,5,9,9,-2,-3],[-5,5,5,5,9,-5,-1,-3,-6,-6,1,-10,-7,-6,-6],[-7,3,8,-5,-5,-5,9,-1,4,-1,-8,-2,-3,-9,-8],[-9,5,1,9,-8,-8,5,1,-10,-7,7,-5,4,-10,8],[-10,-4,-8,10,-1,-4,-1,8,6,1,1,9,-9,-4,7],[-6,9,-2,7,6,10,4,-6,-7,10,-6,-8,-9,-9,5]],[[-4,-3,-4,-2,8,-6,-8,4,-5,-6,1,-8,-8,-7,9],[-3,4,8,4,9,-9,-2,7,1,-9,9,-1,-10,-1,8],[-8,4,8,1,3,-3,7,9,3,8,-9,3,-1,10,7],[-3,-10,6,9,9,-7,4,10,-10,5,7,2,-5,1,6],[-5,3,-5,5,-4,6,9,-7,-5,-5,4,4,2,-2,7],[2,-8,9,-4,7,-9,1,-3,10,-7,10,-7,-1,6,-3],[-3,6,2,5,10,-5,-7,8,7,9,10,-9,-6,7,6],[-4,7,-10,-5,-6,-1,3,-9,7,8,-2,-7,-7,-3,-4],[6,-8,8,-3,-5,8,-2,-3,10,9,-9,-8,3,-1,10]]], dtype = "int64")#candidate|3162|(16, 9, 15)|const|int64
bop_3163 = relay.mod(call_3151.astype('float32'), relay.reshape(const_3162.astype('float32'), relay.shape_of(call_3151))) # shape=(16, 9, 15)
bop_3166 = relay.mod(call_3154.astype('float32'), relay.reshape(const_3162.astype('float32'), relay.shape_of(call_3154))) # shape=(16, 9, 15)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3167 = relay.TupleGetItem(func_3074_call(), 0)
call_3168 = relay.TupleGetItem(func_3076_call(), 0)
output = relay.Tuple([call_3117,bop_3155,bop_3159,bop_3163,call_3167,])
output2 = relay.Tuple([call_3118,bop_3155,bop_3159,bop_3166,call_3168,])
func_3172 = relay.Function([], output)
mod['func_3172'] = func_3172
mod = relay.transform.InferType()(mod)
mutated_mod['func_3172'] = func_3172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mutated_mod.get_global_var('func_3172')
call_3173 = func_3172_call()
output = call_3173
func_3174 = relay.Function([], output)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3229 = relay.var("var_3229", dtype = "float32", shape = (8, 14, 4))#candidate|3229|(8, 14, 4)|var|float32
uop_3230 = relay.sigmoid(var_3229.astype('float32')) # shape=(8, 14, 4)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
var_3253 = relay.var("var_3253", dtype = "float32", shape = (192,))#candidate|3253|(192,)|var|float32
call_3252 = relay.TupleGetItem(func_65_call(relay.reshape(var_3253.astype('float32'), [1, 12, 16])), 0)
call_3254 = relay.TupleGetItem(func_68_call(relay.reshape(var_3253.astype('float32'), [1, 12, 16])), 0)
output = relay.Tuple([uop_3230,call_3252,var_3253,])
output2 = relay.Tuple([uop_3230,call_3254,var_3253,])
func_3263 = relay.Function([var_3229,var_3253,], output)
mod['func_3263'] = func_3263
mod = relay.transform.InferType()(mod)
mutated_mod['func_3263'] = func_3263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3263_call = mutated_mod.get_global_var('func_3263')
var_3265 = relay.var("var_3265", dtype = "float32", shape = (8, 14, 4))#candidate|3265|(8, 14, 4)|var|float32
var_3266 = relay.var("var_3266", dtype = "float32", shape = (192,))#candidate|3266|(192,)|var|float32
call_3264 = func_3263_call(var_3265,var_3266,)
output = call_3264
func_3267 = relay.Function([var_3265,var_3266,], output)
mutated_mod['func_3267'] = func_3267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3269 = relay.TupleGetItem(func_3074_call(), 0)
call_3270 = relay.TupleGetItem(func_3076_call(), 0)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
var_3274 = relay.var("var_3274", dtype = "float32", shape = (192,))#candidate|3274|(192,)|var|float32
call_3273 = relay.TupleGetItem(func_65_call(relay.reshape(var_3274.astype('float32'), [1, 12, 16])), 0)
call_3275 = relay.TupleGetItem(func_68_call(relay.reshape(var_3274.astype('float32'), [1, 12, 16])), 0)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3311 = relay.TupleGetItem(func_3172_call(), 2)
call_3312 = relay.TupleGetItem(func_3174_call(), 2)
func_2954_call = mod.get_global_var('func_2954')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_3316 = relay.TupleGetItem(func_2954_call(), 0)
call_3317 = relay.TupleGetItem(func_2955_call(), 0)
var_3329 = relay.var("var_3329", dtype = "float32", shape = (192,))#candidate|3329|(192,)|var|float32
bop_3330 = relay.multiply(var_3274.astype('int64'), relay.reshape(var_3329.astype('int64'), relay.shape_of(var_3274))) # shape=(192,)
output = relay.Tuple([call_3269,call_3273,call_3311,call_3316,bop_3330,])
output2 = relay.Tuple([call_3270,call_3275,call_3312,call_3317,bop_3330,])
func_3340 = relay.Function([var_3274,var_3329,], output)
mod['func_3340'] = func_3340
mod = relay.transform.InferType()(mod)
mutated_mod['func_3340'] = func_3340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3340_call = mutated_mod.get_global_var('func_3340')
var_3342 = relay.var("var_3342", dtype = "float32", shape = (192,))#candidate|3342|(192,)|var|float32
var_3343 = relay.var("var_3343", dtype = "float32", shape = (192,))#candidate|3343|(192,)|var|float32
call_3341 = func_3340_call(var_3342,var_3343,)
output = call_3341
func_3344 = relay.Function([var_3342,var_3343,], output)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_3369 = relay.TupleGetItem(func_2271_call(), 2)
call_3370 = relay.TupleGetItem(func_2272_call(), 2)
const_3387 = relay.const([[-1.166925,-8.004308,2.711566,-9.738886],[7.903123,7.189521,-8.197906,-8.107556],[3.199129,-5.172973,3.875284,-0.074299],[-1.340791,-6.796436,-7.066159,5.565485],[-2.763298,8.318094,-9.999881,-7.826526],[8.248642,4.399133,0.462328,5.586020],[8.911453,9.991374,-0.978202,0.301863],[6.141746,-3.482471,-6.262604,5.024471],[5.935383,-8.775903,-7.459038,-4.141393],[-9.581593,6.184037,6.752604,-5.596357],[-8.020071,-9.669434,-9.391620,3.098759],[3.548184,6.440725,-3.769753,-0.509267],[3.708026,2.180896,0.090698,0.379305],[4.843118,-8.124044,-1.773201,-8.403230],[-5.405319,9.740448,-1.125323,9.821293],[-4.912199,5.221909,7.948824,6.376419],[-2.427473,-4.580196,-2.318683,2.295524],[-2.450927,-8.008703,7.804212,1.126897],[5.989000,-0.602774,2.496784,2.605626],[-3.764641,-0.837339,-0.427657,1.066223],[0.642829,3.375027,0.342652,7.439228],[-2.329278,-1.583905,-6.602038,5.380580],[-9.464897,-4.841880,0.008309,-8.145861],[-5.949873,4.392364,-2.199345,-0.684568],[-0.270842,8.153471,-5.232888,2.840857],[-9.442422,-9.493567,6.253603,2.191548],[4.931867,-0.966251,4.172005,7.949409],[9.938488,7.961419,9.051667,4.004121],[3.196346,6.595249,-3.466662,-6.770575],[8.325112,2.300904,-8.405887,-8.946120],[-6.877605,2.248691,6.138234,-3.938487],[1.522967,-5.031226,5.184667,5.672498],[-7.801669,-9.778345,7.075472,-4.884551],[-2.916427,-0.451981,-9.531557,-5.632513],[3.286981,-4.154961,-7.628475,8.411755],[-3.314768,-8.494018,-7.726581,-0.957880],[2.906062,3.422793,5.722401,9.438321],[9.369422,8.478079,-0.012450,9.878450],[1.946833,7.637446,-3.536886,6.122338],[-1.247886,-4.487677,1.105303,-0.629757],[9.620535,-7.605465,4.932262,-2.864748],[2.117145,-1.313933,-6.809392,9.037309],[6.122921,5.817695,8.680459,6.974155],[5.618654,-9.691723,-2.263493,8.184852],[-1.489320,5.872210,2.781009,4.499283],[2.323325,-4.792840,3.106802,6.310823],[-6.695621,-9.764871,5.456887,-4.059395],[0.940048,-5.170883,7.563773,4.500435],[6.420875,9.894034,7.356294,6.326777],[-1.897858,-6.820937,8.008960,-7.396563],[-0.823687,0.641067,-7.938115,-0.431938],[5.282746,-7.224158,-8.048548,-8.488744],[-8.304104,-5.261299,-6.538187,-2.353938],[-8.128112,-4.952774,-5.656550,9.865399],[9.747796,-8.699572,-2.767753,4.794965],[9.213198,-5.582567,-7.083350,2.845891],[-6.423075,-3.154312,3.838221,2.273301],[0.519770,9.115470,9.212633,-4.472464],[-1.645735,-4.099640,-6.049830,-5.230429],[2.308329,2.109424,2.770409,-8.231004],[8.997986,9.835358,4.977320,-5.604843],[-5.690349,-5.705893,-2.796005,6.145121],[-4.780216,-1.797678,4.338173,-9.747472],[3.655797,-9.988923,9.322851,7.823195],[4.038823,1.220691,3.832095,4.240943],[-4.003233,4.253636,3.161175,8.284146],[7.019135,-7.307186,-2.807193,5.528888],[-4.834216,-5.037910,9.247312,-0.855213],[-0.841309,1.222616,1.975267,-2.005929],[4.960064,0.509978,-1.735835,-1.785879],[-4.140598,-5.873813,3.521173,-6.726958],[-8.619653,1.515478,-8.134372,-9.181185],[-3.250981,0.566467,9.091297,2.892449],[8.036971,3.001136,9.721500,8.698078],[-9.070915,-0.996158,-3.434785,9.354922],[3.363037,-2.899364,8.254817,1.883810],[-9.693594,9.367628,-8.756970,-1.314580],[6.901519,3.735307,5.549017,-5.142816],[-5.971022,-1.602791,-8.089734,5.518762],[-2.320610,6.760813,2.946133,3.420827],[5.972770,7.611647,3.632435,-1.992325],[3.782984,8.637829,-8.633643,-7.803791],[-2.108028,8.163650,-7.521055,0.896268],[-5.451141,-8.610999,1.062204,-8.631534],[0.633544,-3.937421,0.686969,6.685927],[-3.914858,-0.715862,2.474111,9.221763],[8.461175,-8.829566,-5.031515,-6.915042],[-6.055339,-3.386239,3.556341,0.726434],[-8.336710,8.036246,-0.378222,-0.493227],[-7.868411,8.955936,1.888058,1.491496],[-4.130667,-1.373100,1.375160,2.155517],[-4.817023,9.641311,-5.600240,-1.852967],[-4.716994,5.764919,-9.848395,7.527144],[-8.959434,-9.951529,-6.008200,-4.889373],[1.115558,5.731942,8.371615,1.681811],[-4.508417,4.345397,7.663704,3.438881],[-0.405346,-5.256151,-7.431284,9.630460],[-9.119465,-0.615350,8.101297,3.903532],[7.055285,-7.831157,-8.461783,-1.043822],[-6.337130,7.542312,5.117365,-3.662040],[1.994978,8.938870,-0.716231,-8.454584],[-8.817385,2.799346,4.891657,5.167686],[6.539587,-8.993875,0.243613,-7.698802],[-3.112807,9.488163,-7.724562,3.450985],[-6.594764,6.390293,7.452591,3.693363],[-8.471534,-9.165917,-1.363139,9.302702],[5.844552,4.905989,-3.596399,-6.074682],[0.720853,7.700221,3.778308,-3.689266],[2.443320,0.468502,1.666622,-8.907264],[8.253817,-6.348535,-6.430915,-9.533217]], dtype = "float64")#candidate|3387|(110, 4)|const|float64
bop_3388 = relay.power(call_3369.astype('float64'), relay.reshape(const_3387.astype('float64'), relay.shape_of(call_3369))) # shape=(110, 4)
bop_3391 = relay.power(call_3370.astype('float64'), relay.reshape(const_3387.astype('float64'), relay.shape_of(call_3370))) # shape=(110, 4)
bop_3394 = relay.less(call_3369.astype('bool'), relay.reshape(const_3387.astype('bool'), relay.shape_of(call_3369))) # shape=(110, 4)
bop_3397 = relay.less(call_3370.astype('bool'), relay.reshape(const_3387.astype('bool'), relay.shape_of(call_3370))) # shape=(110, 4)
output = relay.Tuple([bop_3388,bop_3394,])
output2 = relay.Tuple([bop_3391,bop_3397,])
func_3401 = relay.Function([], output)
mod['func_3401'] = func_3401
mod = relay.transform.InferType()(mod)
mutated_mod['func_3401'] = func_3401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3401_call = mutated_mod.get_global_var('func_3401')
call_3402 = func_3401_call()
output = call_3402
func_3403 = relay.Function([], output)
mutated_mod['func_3403'] = func_3403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3449 = relay.TupleGetItem(func_3074_call(), 0)
call_3450 = relay.TupleGetItem(func_3076_call(), 0)
output = relay.Tuple([call_3449,])
output2 = relay.Tuple([call_3450,])
func_3467 = relay.Function([], output)
mod['func_3467'] = func_3467
mod = relay.transform.InferType()(mod)
output = func_3467()
func_3468 = relay.Function([], output)
mutated_mod['func_3468'] = func_3468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2625_call = mod.get_global_var('func_2625')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_3477 = relay.TupleGetItem(func_2625_call(), 0)
call_3478 = relay.TupleGetItem(func_2627_call(), 0)
func_2625_call = mod.get_global_var('func_2625')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_3481 = relay.TupleGetItem(func_2625_call(), 0)
call_3482 = relay.TupleGetItem(func_2627_call(), 0)
uop_3490 = relay.atan(call_3481.astype('float32')) # shape=(9, 10, 3)
uop_3492 = relay.atan(call_3482.astype('float32')) # shape=(9, 10, 3)
func_3401_call = mod.get_global_var('func_3401')
func_3403_call = mutated_mod.get_global_var('func_3403')
call_3493 = relay.TupleGetItem(func_3401_call(), 0)
call_3494 = relay.TupleGetItem(func_3403_call(), 0)
func_2625_call = mod.get_global_var('func_2625')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_3495 = relay.TupleGetItem(func_2625_call(), 0)
call_3496 = relay.TupleGetItem(func_2627_call(), 0)
output = relay.Tuple([call_3477,uop_3490,call_3493,call_3495,])
output2 = relay.Tuple([call_3478,uop_3492,call_3494,call_3496,])
func_3497 = relay.Function([], output)
mod['func_3497'] = func_3497
mod = relay.transform.InferType()(mod)
output = func_3497()
func_3498 = relay.Function([], output)
mutated_mod['func_3498'] = func_3498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3533 = relay.TupleGetItem(func_3172_call(), 0)
call_3534 = relay.TupleGetItem(func_3174_call(), 0)
output = relay.Tuple([call_3533,])
output2 = relay.Tuple([call_3534,])
func_3576 = relay.Function([], output)
mod['func_3576'] = func_3576
mod = relay.transform.InferType()(mod)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3576_call = mutated_mod.get_global_var('func_3576')
call_3577 = func_3576_call()
output = call_3577
func_3578 = relay.Function([], output)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_3599 = relay.TupleGetItem(func_2271_call(), 1)
call_3600 = relay.TupleGetItem(func_2272_call(), 1)
output = relay.Tuple([call_3599,])
output2 = relay.Tuple([call_3600,])
func_3605 = relay.Function([], output)
mod['func_3605'] = func_3605
mod = relay.transform.InferType()(mod)
output = func_3605()
func_3606 = relay.Function([], output)
mutated_mod['func_3606'] = func_3606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3109_call = mod.get_global_var('func_3109')
func_3111_call = mutated_mod.get_global_var('func_3111')
call_3625 = relay.TupleGetItem(func_3109_call(), 1)
call_3626 = relay.TupleGetItem(func_3111_call(), 1)
uop_3627 = relay.log10(call_3625.astype('float64')) # shape=(110, 4)
uop_3629 = relay.log10(call_3626.astype('float64')) # shape=(110, 4)
output = relay.Tuple([uop_3627,])
output2 = relay.Tuple([uop_3629,])
func_3632 = relay.Function([], output)
mod['func_3632'] = func_3632
mod = relay.transform.InferType()(mod)
mutated_mod['func_3632'] = func_3632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3632_call = mutated_mod.get_global_var('func_3632')
call_3633 = func_3632_call()
output = call_3633
func_3634 = relay.Function([], output)
mutated_mod['func_3634'] = func_3634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3401_call = mod.get_global_var('func_3401')
func_3403_call = mutated_mod.get_global_var('func_3403')
call_3726 = relay.TupleGetItem(func_3401_call(), 1)
call_3727 = relay.TupleGetItem(func_3403_call(), 1)
func_587_call = mod.get_global_var('func_587')
func_590_call = mutated_mod.get_global_var('func_590')
const_3733 = relay.const([[2,-1,-8],[-2,4,8],[6,-9,9],[-4,1,3],[9,10,-1],[-1,2,9]], dtype = "int16")#candidate|3733|(6, 3)|const|int16
call_3732 = relay.TupleGetItem(func_587_call(relay.reshape(const_3733.astype('int16'), [2, 3, 3]), relay.reshape(const_3733.astype('int16'), [2, 3, 3]), ), 1)
call_3734 = relay.TupleGetItem(func_590_call(relay.reshape(const_3733.astype('int16'), [2, 3, 3]), relay.reshape(const_3733.astype('int16'), [2, 3, 3]), ), 1)
output = relay.Tuple([call_3726,call_3732,const_3733,])
output2 = relay.Tuple([call_3727,call_3734,const_3733,])
func_3766 = relay.Function([], output)
mod['func_3766'] = func_3766
mod = relay.transform.InferType()(mod)
mutated_mod['func_3766'] = func_3766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mutated_mod.get_global_var('func_3766')
call_3767 = func_3766_call()
output = call_3767
func_3768 = relay.Function([], output)
mutated_mod['func_3768'] = func_3768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3576_call = mod.get_global_var('func_3576')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_3782 = relay.TupleGetItem(func_3576_call(), 0)
call_3783 = relay.TupleGetItem(func_3578_call(), 0)
func_1375_call = mod.get_global_var('func_1375')
func_1379_call = mutated_mod.get_global_var('func_1379')
const_3790 = relay.const(-6, dtype = "int64")#candidate|3790|()|const|int64
var_3791 = relay.var("var_3791", dtype = "int64", shape = (2160,))#candidate|3791|(2160,)|var|int64
call_3789 = relay.TupleGetItem(func_1375_call(relay.reshape(const_3790.astype('int64'), []), relay.reshape(var_3791.astype('int64'), [16, 9, 15]), ), 1)
call_3792 = relay.TupleGetItem(func_1379_call(relay.reshape(const_3790.astype('int64'), []), relay.reshape(var_3791.astype('int64'), [16, 9, 15]), ), 1)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
const_3796 = relay.const([False,False,True,True,False,True], dtype = "bool")#candidate|3796|(6,)|const|bool
const_3797 = relay.const([True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False], dtype = "bool")#candidate|3797|(24,)|const|bool
call_3795 = relay.TupleGetItem(func_1725_call(relay.reshape(const_3796.astype('bool'), [2, 1, 3]), relay.reshape(const_3797.astype('bool'), [2, 4, 3]), ), 0)
call_3798 = relay.TupleGetItem(func_1728_call(relay.reshape(const_3796.astype('bool'), [2, 1, 3]), relay.reshape(const_3797.astype('bool'), [2, 4, 3]), ), 0)
uop_3808 = relay.atan(const_3797.astype('float32')) # shape=(24,)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3815 = relay.TupleGetItem(func_3074_call(), 0)
call_3816 = relay.TupleGetItem(func_3076_call(), 0)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3818 = relay.TupleGetItem(func_3074_call(), 0)
call_3819 = relay.TupleGetItem(func_3076_call(), 0)
uop_3845 = relay.acos(uop_3808.astype('float64')) # shape=(24,)
output = relay.Tuple([call_3782,call_3789,const_3790,var_3791,call_3795,const_3796,call_3815,call_3818,uop_3845,])
output2 = relay.Tuple([call_3783,call_3792,const_3790,var_3791,call_3798,const_3796,call_3816,call_3819,uop_3845,])
func_3849 = relay.Function([var_3791,], output)
mod['func_3849'] = func_3849
mod = relay.transform.InferType()(mod)
mutated_mod['func_3849'] = func_3849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3850 = relay.var("var_3850", dtype = "int64", shape = (2160,))#candidate|3850|(2160,)|var|int64
func_3849_call = mutated_mod.get_global_var('func_3849')
call_3851 = func_3849_call(var_3850)
output = call_3851
func_3852 = relay.Function([var_3850], output)
mutated_mod['func_3852'] = func_3852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2840_call = mod.get_global_var('func_2840')
func_2841_call = mutated_mod.get_global_var('func_2841')
call_3885 = func_2840_call()
call_3886 = func_2840_call()
func_2928_call = mod.get_global_var('func_2928')
func_2931_call = mutated_mod.get_global_var('func_2931')
call_3889 = relay.TupleGetItem(func_2928_call(relay.reshape(call_3885.astype('float64'), [9, 10, 3])), 1)
call_3890 = relay.TupleGetItem(func_2931_call(relay.reshape(call_3885.astype('float64'), [9, 10, 3])), 1)
output = relay.Tuple([call_3885,call_3889,])
output2 = relay.Tuple([call_3886,call_3890,])
func_3900 = relay.Function([], output)
mod['func_3900'] = func_3900
mod = relay.transform.InferType()(mod)
output = func_3900()
func_3901 = relay.Function([], output)
mutated_mod['func_3901'] = func_3901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
call_3971 = relay.TupleGetItem(func_3632_call(), 0)
call_3972 = relay.TupleGetItem(func_3634_call(), 0)
output = relay.Tuple([call_3971,])
output2 = relay.Tuple([call_3972,])
func_3976 = relay.Function([], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
mutated_mod['func_3976'] = func_3976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mutated_mod.get_global_var('func_3976')
call_3977 = func_3976_call()
output = call_3977
func_3978 = relay.Function([], output)
mutated_mod['func_3978'] = func_3978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4015 = relay.var("var_4015", dtype = "float64", shape = (15, 7, 13))#candidate|4015|(15, 7, 13)|var|float64
uop_4016 = relay.atanh(var_4015.astype('float64')) # shape=(15, 7, 13)
func_1213_call = mod.get_global_var('func_1213')
func_1218_call = mutated_mod.get_global_var('func_1218')
const_4028 = relay.const([[-1,10,6,6,4,9,-6,-4,6,-8,3,7,-6,-3,-8,-4,9,-9,-2,9,8,4,1,-1,-8,-1,6,-2,4,-1,-4,3,9,-10,-7,-8,5,3,2,4,-2,10],[-6,-8,-8,1,4,-7,6,-7,-4,-1,9,-8,5,-10,8,-5,-2,3,2,2,-9,-2,-6,-9,-5,1,2,4,1,6,-4,4,-4,6,2,-3,-6,-6,-5,3,5,4],[3,-9,-4,4,4,3,-6,3,6,-6,4,-3,9,8,9,-3,2,9,-5,-3,2,6,-5,-5,-8,1,5,10,1,-9,-2,5,2,-1,10,7,-9,1,5,-5,6,-2],[2,-6,2,3,8,1,5,-9,5,6,-3,10,-10,-9,-10,1,5,-5,3,-4,-10,-10,-6,-8,9,8,1,-7,4,-9,-9,6,-8,-2,1,-3,-10,5,-4,-8,7,4],[-4,8,7,2,-10,9,-1,10,-8,2,7,-3,-10,-5,-6,4,-10,-8,2,2,-8,1,-5,-1,5,2,-1,-5,7,-10,9,-3,-6,7,-8,-9,1,6,-10,-10,2,-9],[6,-8,3,5,9,2,-6,-3,-7,3,-4,-5,-9,1,8,8,3,-8,1,-8,-9,8,-9,-4,-5,8,7,4,-10,-9,5,2,-3,-4,-4,-7,-5,2,5,-4,-2,-2],[6,7,2,-6,-5,-7,-1,-5,5,7,6,-8,5,5,-4,10,-4,-8,5,5,2,-10,-5,7,-6,2,6,-5,1,10,-7,-7,-9,7,-7,-8,6,-2,-3,-9,-5,-3]], dtype = "uint32")#candidate|4028|(7, 42)|const|uint32
var_4029 = relay.var("var_4029", dtype = "float32", shape = (1728,))#candidate|4029|(1728,)|var|float32
var_4030 = relay.var("var_4030", dtype = "float64", shape = (1, 420))#candidate|4030|(1, 420)|var|float64
call_4027 = relay.TupleGetItem(func_1213_call(relay.reshape(const_4028.astype('uint32'), [3, 7, 14]), relay.reshape(var_4029.astype('float32'), [9, 12, 16]), relay.reshape(var_4030.astype('float64'), [420,]), ), 2)
call_4031 = relay.TupleGetItem(func_1218_call(relay.reshape(const_4028.astype('uint32'), [3, 7, 14]), relay.reshape(var_4029.astype('float32'), [9, 12, 16]), relay.reshape(var_4030.astype('float64'), [420,]), ), 2)
output = relay.Tuple([uop_4016,call_4027,const_4028,var_4029,var_4030,])
output2 = relay.Tuple([uop_4016,call_4031,const_4028,var_4029,var_4030,])
func_4035 = relay.Function([var_4015,var_4029,var_4030,], output)
mod['func_4035'] = func_4035
mod = relay.transform.InferType()(mod)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4035_call = mutated_mod.get_global_var('func_4035')
var_4037 = relay.var("var_4037", dtype = "float64", shape = (15, 7, 13))#candidate|4037|(15, 7, 13)|var|float64
var_4038 = relay.var("var_4038", dtype = "float32", shape = (1728,))#candidate|4038|(1728,)|var|float32
var_4039 = relay.var("var_4039", dtype = "float64", shape = (1, 420))#candidate|4039|(1, 420)|var|float64
call_4036 = func_4035_call(var_4037,var_4038,var_4039,)
output = call_4036
func_4040 = relay.Function([var_4037,var_4038,var_4039,], output)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4054 = relay.var("var_4054", dtype = "float32", shape = (11, 11, 6))#candidate|4054|(11, 11, 6)|var|float32
uop_4055 = relay.rsqrt(var_4054.astype('float32')) # shape=(11, 11, 6)
output = uop_4055
output2 = uop_4055
func_4070 = relay.Function([var_4054,], output)
mod['func_4070'] = func_4070
mod = relay.transform.InferType()(mod)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4071 = relay.var("var_4071", dtype = "float32", shape = (11, 11, 6))#candidate|4071|(11, 11, 6)|var|float32
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4072 = func_4070_call(var_4071)
output = call_4072
func_4073 = relay.Function([var_4071], output)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mod.get_global_var('func_2954')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_4117 = relay.TupleGetItem(func_2954_call(), 0)
call_4118 = relay.TupleGetItem(func_2955_call(), 0)
func_951_call = mod.get_global_var('func_951')
func_956_call = mutated_mod.get_global_var('func_956')
var_4122 = relay.var("var_4122", dtype = "bool", shape = (300,))#candidate|4122|(300,)|var|bool
var_4123 = relay.var("var_4123", dtype = "int16", shape = (18,))#candidate|4123|(18,)|var|int16
call_4121 = relay.TupleGetItem(func_951_call(relay.reshape(var_4122.astype('bool'), [5, 5, 12]), relay.reshape(var_4122.astype('bool'), [5, 5, 12]), relay.reshape(var_4123.astype('int16'), [1, 18]), ), 0)
call_4124 = relay.TupleGetItem(func_956_call(relay.reshape(var_4122.astype('bool'), [5, 5, 12]), relay.reshape(var_4122.astype('bool'), [5, 5, 12]), relay.reshape(var_4123.astype('int16'), [1, 18]), ), 0)
output = relay.Tuple([call_4117,call_4121,var_4122,var_4123,])
output2 = relay.Tuple([call_4118,call_4124,var_4122,var_4123,])
func_4126 = relay.Function([var_4122,var_4123,], output)
mod['func_4126'] = func_4126
mod = relay.transform.InferType()(mod)
mutated_mod['func_4126'] = func_4126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4126_call = mutated_mod.get_global_var('func_4126')
var_4128 = relay.var("var_4128", dtype = "bool", shape = (300,))#candidate|4128|(300,)|var|bool
var_4129 = relay.var("var_4129", dtype = "int16", shape = (18,))#candidate|4129|(18,)|var|int16
call_4127 = func_4126_call(var_4128,var_4129,)
output = call_4127
func_4130 = relay.Function([var_4128,var_4129,], output)
mutated_mod['func_4130'] = func_4130
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4142 = relay.var("var_4142", dtype = "float64", shape = (9, 3, 2))#candidate|4142|(9, 3, 2)|var|float64
uop_4143 = relay.sigmoid(var_4142.astype('float64')) # shape=(9, 3, 2)
func_1056_call = mod.get_global_var('func_1056')
func_1059_call = mutated_mod.get_global_var('func_1059')
const_4146 = relay.const([-6.206240,-5.689782,-5.843458,-8.577294,0.504459,0.023125,-7.590090,-5.886581,4.446474,6.386025,6.433834,-1.480590,5.310508,-4.868994,-3.884547,3.556366,4.533545,9.219243,-7.500379,-0.908077,7.917905,6.048652,-6.696206,2.234041,0.584700,3.475562,9.364134,-9.390882,-7.830035,4.379368,-1.584517,-6.064242,9.099587,1.929535,5.173751,2.589248,-4.505323,-7.940560,3.190335,-8.185881,-2.228388,4.184796,-0.298780,-6.319974,-1.255251,9.930676,-8.878007,-2.204890,9.395817,0.107405,1.299774,-9.261838,-0.245917,-3.850181,-6.749114,-2.663199,1.943372,-4.644614,1.827461,-7.223252,2.228814,-1.863551,6.901450,6.016220,7.351229,8.820444,2.571999,-3.989933,8.806805,9.304789,0.459186,-8.788847,5.515335,-9.117744,-2.905959,-9.042058,5.666268,0.961249,2.648828,1.390157,-3.165120,1.619554,-1.869715,8.156392,0.264366,-7.462199,-6.337718,0.928691,7.585482,-5.820877,-2.152244,4.692758,-6.755256,4.207384,6.838401,-4.807897,7.693081,-9.840509,7.012754,6.366917,-5.430962,5.733792,6.774997,7.596000,4.089881,-1.679526,-9.107477,9.649917,-4.892195,1.229904,2.264226,4.128233,8.972841,1.126584,3.131570,1.024427,-3.101725,-7.825356,4.022344,-2.405943,-5.952524,4.801512,7.874813,9.279507,9.229785,0.361319,-4.306856,7.976882,-8.422813,-7.451297,-1.805325,-5.339784,-4.284427,-2.586686,-2.962086,-4.025061,0.420925,6.883475,-2.013909,-3.724975,4.665578,9.110342,8.706809,-7.950267,5.828963,3.171158,-2.126753,-4.506863,9.003156,4.231744,2.787519,-1.552824,1.440211,5.068888,-0.319464,5.740529,-0.509952,6.605376,6.385790,0.236370,-2.006339,-1.603588,-7.151272,4.852026,8.028787,5.037765,5.052951,7.457776,-4.443553,-3.945469,5.115332,-7.700498,-5.074515,0.518348,9.256518,-0.193607,3.345099,6.254573,8.014991,6.687318,1.351730,-8.084582,-6.859850,8.784002,-1.367763,5.882643,6.848980,5.552233,2.822487,3.832864,-9.569881,-9.407349,9.194099,4.830261,5.018239,2.539158,-7.215223,0.635518,-8.019149,4.707520,-4.024687,-1.938182,-0.620714,-3.231460,-6.443725,2.641156,3.901193,-4.715454,2.751606,-8.132050,6.251522,9.529530,3.746921,-8.406990,4.294268,-2.987631,2.467318,7.426824,1.901908,0.885010,6.550426,-6.475702,8.144915,8.254198,-1.714872,7.882637,-4.761109,4.921238,1.955413,4.929884,1.513213,-5.579137,-4.385945,5.660455,5.980115,7.756265,8.201610,-5.372355,-3.884070,4.790034,6.840671,-5.518951,6.620166,3.593410,-5.296411,2.962909,-8.787244,-6.988997,5.784953,-6.470689,-0.489752,9.372194,3.137473,-2.062405,-4.984352,9.625945,-9.002020,0.117724,8.378143,-3.443268,3.162231,-0.602892,-5.731972,-5.321827,-3.213679,-4.731330,-2.727201,-9.388841,9.172066,8.116921,-4.636072,5.153232,2.031178,-4.891820,7.728042,-9.743498,-3.899386,7.552287,9.419738,-5.279646,-3.344557,-9.633362,-5.439631,2.750760,-2.590581,7.100025,4.987428,3.183256,2.413075,4.183975,3.815970,2.483974,-5.240218,-9.347389,-4.722735,2.058290,1.168427,6.737055,-0.455138,-7.743157,-5.601433,4.846305,-5.444661,-5.310788,-1.569379,3.697011,3.669133,4.500915,3.605878,6.969367,-9.401068,-8.103454,-9.595162,-2.723369,-4.747412,5.873923,-8.322424,-4.869153,-8.130979,5.414688,6.056334,-8.496653,9.740362,-5.119124,9.061245,5.766619,3.698722,7.927715,5.977868,-9.017077,-5.813568,-0.796400,4.839945,-7.658286,4.845579,-5.636349,-0.549355,1.106778,7.328704,-8.227506,9.050535,-0.414067,5.675890,2.549075,3.167262,2.332946,8.074455,5.595834,-2.209487,-9.724321,8.894507,-9.860130,6.543774,9.825755,-3.591133,6.963681,5.001926,-8.028007,-8.445083,-2.181479,0.701983,5.713067,6.078884,4.320737,-3.602949,-2.989988,2.761356,3.438923,-8.641130,3.148311,-7.076662,7.001550,-2.170712,5.168206,2.605354,5.469293,4.594322,8.263925,6.547053,-5.436977,3.893326,6.265611,-4.427973,3.114563,5.921853,1.029008,-3.594641,-1.316353,-8.982532,6.075861,5.029701,-9.111191,7.714714,6.470725,8.405890,2.199196,-4.129961,0.434591,8.404311,-0.548697,7.452101,3.537824,-9.855949,-0.171721,1.299806,-7.320507,-1.828363,0.640019,-0.618774,-7.470861,-5.788725,-2.437699,-8.622330,4.461112,4.015483,2.325446,3.852144,-2.527946,-2.493806,-8.433663], dtype = "float64")#candidate|4146|(420,)|const|float64
call_4145 = func_1056_call(relay.reshape(const_4146.astype('float64'), [14, 15, 2]))
call_4147 = func_1056_call(relay.reshape(const_4146.astype('float64'), [14, 15, 2]))
output = relay.Tuple([uop_4143,call_4145,const_4146,])
output2 = relay.Tuple([uop_4143,call_4147,const_4146,])
func_4152 = relay.Function([var_4142,], output)
mod['func_4152'] = func_4152
mod = relay.transform.InferType()(mod)
var_4153 = relay.var("var_4153", dtype = "float64", shape = (9, 3, 2))#candidate|4153|(9, 3, 2)|var|float64
output = func_4152(var_4153)
func_4154 = relay.Function([var_4153], output)
mutated_mod['func_4154'] = func_4154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3109_call = mod.get_global_var('func_3109')
func_3111_call = mutated_mod.get_global_var('func_3111')
call_4188 = relay.TupleGetItem(func_3109_call(), 1)
call_4189 = relay.TupleGetItem(func_3111_call(), 1)
output = relay.Tuple([call_4188,])
output2 = relay.Tuple([call_4189,])
func_4194 = relay.Function([], output)
mod['func_4194'] = func_4194
mod = relay.transform.InferType()(mod)
mutated_mod['func_4194'] = func_4194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4195 = func_4194_call()
output = call_4195
func_4196 = relay.Function([], output)
mutated_mod['func_4196'] = func_4196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3576_call = mod.get_global_var('func_3576')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_4263 = relay.TupleGetItem(func_3576_call(), 0)
call_4264 = relay.TupleGetItem(func_3578_call(), 0)
output = call_4263
output2 = call_4264
func_4267 = relay.Function([], output)
mod['func_4267'] = func_4267
mod = relay.transform.InferType()(mod)
mutated_mod['func_4267'] = func_4267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4267_call = mutated_mod.get_global_var('func_4267')
call_4268 = func_4267_call()
output = call_4268
func_4269 = relay.Function([], output)
mutated_mod['func_4269'] = func_4269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2596_call = mod.get_global_var('func_2596')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_4270 = relay.TupleGetItem(func_2596_call(), 0)
call_4271 = relay.TupleGetItem(func_2597_call(), 0)
output = call_4270
output2 = call_4271
func_4274 = relay.Function([], output)
mod['func_4274'] = func_4274
mod = relay.transform.InferType()(mod)
mutated_mod['func_4274'] = func_4274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4274_call = mutated_mod.get_global_var('func_4274')
call_4275 = func_4274_call()
output = call_4275
func_4276 = relay.Function([], output)
mutated_mod['func_4276'] = func_4276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4302 = relay.var("var_4302", dtype = "uint64", shape = (5, 4, 13))#candidate|4302|(5, 4, 13)|var|uint64
var_4303 = relay.var("var_4303", dtype = "uint64", shape = (5, 4, 13))#candidate|4303|(5, 4, 13)|var|uint64
bop_4304 = relay.bitwise_or(var_4302.astype('uint64'), relay.reshape(var_4303.astype('uint64'), relay.shape_of(var_4302))) # shape=(5, 4, 13)
func_4035_call = mod.get_global_var('func_4035')
func_4040_call = mutated_mod.get_global_var('func_4040')
const_4310 = relay.const([-9.775355,-2.562123,-6.088071,-8.076954,-7.292437,-3.847531,9.967286,7.451292,-2.207038,7.866731,-2.517759,3.899829,-7.807912,-2.142755,-9.760295,-2.339207,1.545104,-1.182285,-9.629445,-1.994799,2.073994,3.048271,-1.273959,9.987525,-1.912265,-1.140608,2.353823,-1.451939,-7.228197,-6.501523,-6.330421,-9.748997,9.513649,7.992850,4.776217,-4.149380,-1.133196,4.529610,9.957926,5.915905,9.499749,-0.932120,-1.072275,-1.231401,8.474098,5.122573,8.681737,2.674445,-5.033596,0.644875,9.217515,-6.365811,9.719641,-5.083413,3.401532,-7.556280,6.525993,6.900013,7.795454,9.829826,-0.191487,-4.118182,-7.497256,-8.846749,1.463841,-9.558380,-1.587198,-0.214948,-2.366463,-6.385770,9.410258,6.129411,6.324282,-7.229106,-7.058502,3.702538,-0.233437,1.616035,-5.879613,7.885514,8.849749,-7.877057,-1.719068,5.542095,7.415465,-0.694154,-0.648055,8.472066,8.388816,7.483011,4.296189,-0.115082,-5.758791,-0.231749,-9.491622,-5.525272,1.833074,2.631781,-0.004538,3.845292,-5.224580,-3.056893,7.730029,-7.784850,1.728519,-2.659183,-4.989034,-9.051001,-4.052245,6.614207,-7.161159,-0.926326,-3.845292,0.624328,-0.869098,-9.083847,4.372954,-0.360261,8.811274,6.676120,-4.623987,2.548540,-0.199195,9.102991,2.445447,3.594387,1.928668,1.640751,6.418822,-6.360564,6.647633,-6.843867,6.547626,7.481857,7.490484,4.202660,1.729117,2.369175,-1.864207,-8.632636,1.081723,9.010728,-4.283133,9.809955,2.398937,4.295778,-9.091071,6.038516,-6.906640,-5.664015,5.520855,5.652588,8.415989,2.256026,-4.419948,8.267507,3.499553,-5.773935,0.427588,-7.462260,3.197825,-0.062563,9.886656,1.142326,-5.631172,-0.713439,7.668947,-4.115563,-1.854884,-3.781709,-2.437482,-6.413674,-7.006588,5.705069,-9.410225,-8.436929,2.161648,-8.453127,6.186160,3.497841,5.973555,6.609073,5.229413,2.254118,7.848511,-0.923594,9.521149,-5.132856,8.109315,-5.867383,5.826268,9.234869,5.360634,2.459277,4.377995,-9.020087,-5.061684,8.035478,-3.256883,9.760636,-0.042797,0.344027,5.403449,4.191414,4.762628,-4.730797,3.006540,2.488856,9.574203,1.101338,1.633186,-9.510094,2.847308,-0.757326,-0.338808,-5.949033,0.855610,3.668618,9.331206,-7.879959,-6.423484,6.682576,-0.769486,-7.010597,6.964100,9.605466,0.857948,0.126253,4.664419,-1.815932,5.186087,9.591363,-9.413439,0.137841,2.884347,-8.256358,7.842677,3.430895,8.670666,2.115295,4.701228,6.498087,-3.654204,-3.736033,-0.564108,-0.664160,4.808187,0.059650,-1.312877,2.157601,-4.919308,7.322547,2.235267,8.666677,-0.609176,6.126705,6.486880,-8.291064,4.616525,-4.436896,-7.462243,-5.887075,-6.186948,3.144123,-6.978510,-8.514070,9.700199,-5.597262,9.475174,6.209435,6.657947,0.294411,9.853316,-1.305099,-0.628059,0.464905,7.497153,-1.477905,6.717777,-6.866590,-6.635119,-7.979580,-2.798761,-0.978463,-3.865823,4.755170,3.517972,4.096461,0.225915,3.527426,-4.023414,-1.776488,-5.221004,0.845495,-8.595045,-8.679092,-7.760364,-7.054221,7.100591,-7.801765,-1.084188,6.887098,2.381863,8.894074,9.411584,-0.615835,6.056834,5.644860,-6.703378,4.266292,9.733336,9.383074,-9.333483,-8.528744,3.771916,1.124215,8.772896,0.228420,0.948150,5.051785,0.541015,-3.457332,-2.236677,8.806679,-3.420310,0.998171,-7.087816,-2.394609,4.946591,-4.207061,6.161611,-2.445636,8.078509,2.110700,-8.312540,1.359749,9.762920,-5.456334,7.331330,-4.125099,-2.425286,5.170684,-4.736042,4.930951,7.153154,-6.587018,-6.592264,7.962906,-9.786816,-5.908336,4.473730,7.278011,-8.210648,-3.405070,8.073323,1.445566,-2.624331,-2.021193,-5.176511,-0.256972,0.545836,3.939888,-9.126032,1.645687,1.169485,2.283706,3.114117,8.238099,2.372710,-7.000396,-5.545083,-8.407410,-4.521763,-8.596635,6.897435,-0.185830,1.609713,-0.344891,-4.613250,5.931950,0.789667,-5.992546,9.759538,-7.829190,4.787698,6.009998,2.874473,3.790499,-2.337672,-3.319441,-2.983050,-8.037538,-2.383326,1.694377,2.142504,2.266998,-4.855131,3.239863,1.519137,-7.060035,-7.610381,6.949304,1.844916,-4.697332,-3.089472,8.538924,5.067219,-6.867254,-5.342726,7.316292,-6.709332,7.709203,-8.152302,-3.494319,-5.582906,9.252873,-3.935374,-2.015139,7.160885,5.408170,-6.471863,-1.200337,3.108334,8.616131,3.684658,3.112737,6.578478,-0.649594,4.569842,-8.217004,8.748104,6.805391,-9.927026,5.315097,-4.886869,4.626567,-2.741198,-9.017137,-0.544278,8.421334,-6.250323,-1.864496,9.487777,-2.548352,5.966908,0.539646,-5.162349,3.256792,-6.154669,-7.492395,8.388880,8.396410,5.896692,6.686766,-0.566844,8.370116,7.953372,-8.852896,-7.371229,-1.679770,2.196846,-3.839591,-5.220507,-9.509654,3.904128,2.322701,-9.026753,-3.934474,-4.805153,-0.029955,-9.745125,-7.242893,4.155545,3.064031,8.917975,0.100427,2.187098,-4.994779,0.977206,-8.257067,5.655818,-7.353932,2.134281,0.439268,-9.579854,-0.986902,-6.551932,8.330647,4.048058,7.733332,-4.146898,-1.545769,3.695504,5.420152,1.658338,1.584014,3.234666,0.274951,-8.085983,-6.533259,-4.088459,9.195486,3.135494,-3.257093,2.824317,5.807958,-9.515651,2.201336,-1.838218,3.518526,7.571342,-7.278841,-9.874889,9.216496,0.157087,7.623477,-0.354842,-5.401785,4.662739,-1.008361,-7.370338,-9.521522,3.112880,-9.749037,-3.682119,-4.256907,-7.702245,-8.951769,-5.566273,1.847197,-0.707170,6.266245,-5.640360,-7.101288,-8.525942,-5.148425,2.756278,3.685300,4.313049,-2.066694,9.306261,4.166892,-2.972964,-1.365350,1.415451,-2.571227,6.496771,-3.262646,9.574748,3.543919,8.785504,-3.848500,6.864043,-9.266679,-1.157617,-8.281195,7.455024,6.712469,-9.441133,-1.111189,-2.666265,0.290083,-3.262947,3.448636,-6.682507,1.061140,-7.281992,-3.956416,8.664919,-5.286519,-0.219548,-8.713384,-1.983321,0.428550,0.341764,-5.412602,-3.170733,0.471696,1.721201,-6.643079,-3.542556,-5.964325,5.425511,-8.678124,6.867094,-1.052093,1.020236,4.120749,9.818728,-4.862887,-2.416315,-0.536576,-6.426207,6.153475,-8.046798,-1.776023,2.172700,8.245065,6.832376,9.850779,4.419160,-9.389732,-7.790241,-4.227312,-4.465489,7.407666,-7.105507,9.560769,2.646698,-1.551642,-2.311074,-9.218489,5.394398,0.388295,0.756369,8.713053,-9.145695,-9.616131,0.763698,-0.626438,5.794531,-4.696524,2.927658,8.441801,-8.466041,-6.027668,-1.809940,-1.177709,5.141085,-5.423142,8.816377,5.143620,-4.419180,-7.983439,-4.068896,2.451241,-1.003224,4.773913,-3.023563,2.394633,6.645945,7.287100,-7.195825,3.403662,9.011965,2.063344,-9.716251,6.021073,-8.695692,-4.616140,-8.446549,-7.710203,-7.043947,1.313920,-3.123052,9.254989,-1.437842,5.343891,5.290108,-1.855568,4.565826,0.457871,-0.320099,-5.498489,-3.039632,-6.748071,-6.249114,-1.747082,-0.490597,9.379986,-0.536285,-0.708829,-5.223766,2.165710,8.281362,-2.727858,4.081092,-9.723966,-6.259088,-9.047620,3.204086,-7.547016,-9.668791,-6.223665,-8.201565,5.860616,8.218499,3.398259,-4.465994,2.422549,0.959275,-0.945548,0.173761,-3.657720,2.948558,-4.922163,5.680593,-7.793523,5.203239,2.340240,0.021987,-0.544554,-2.531301,-8.714490,0.067964,-9.540688,0.021804,5.304949,4.975253,2.413830,2.455405,-4.965338,-7.110086,-9.297862,7.299663,8.621618,-9.146456,8.940922,0.066946,9.690557,4.985248,2.926430,-0.706830,9.406384,1.824200,-7.031302,3.239367,8.236916,-2.630115,6.640741,9.108149,-0.029158,3.328169,7.992175,5.014545,1.803740,-6.106591,3.993211,6.856734,0.898020,4.886459,9.273369,-2.318033,-8.593197,-2.153842,-4.415485,-6.037288,-7.223885,4.055571,8.731973,-4.425797,4.004814,4.907318,-5.614111,-5.826060,7.923635,1.557602,-5.204955,-4.024876,-7.872969,-6.451119,-7.325416,0.884360,-5.444307,-5.432303,3.808107,-6.917295,-6.078497,-0.408985,0.963669,-7.356169,-8.212391,7.581839,2.436870,-3.853238,1.325628,-7.938271,2.231617,-0.367539,-2.140069,1.858753,2.252034,3.270169,-1.280492,-6.428057,-5.792847,-1.170979,9.341041,3.398580,2.633602,-5.952907,-6.137402,7.659590,0.705235,-1.490971,-2.359162,8.103709,8.699957,2.915964,-3.096862,1.202622,-9.578619,-1.631604,-3.300333,-6.698315,2.558466,-9.480145,-8.968967,0.874281,0.892301,6.467524,-3.176931,3.857664,5.831575,6.337799,5.982535,-4.403244,-6.812764,6.819633,-8.407450,8.426270,-8.124881,-1.992356,6.031938,-9.717524,3.630560,-7.205156,1.176604,4.372535,2.322952,-8.493357,-5.746844,-8.374215,7.572273,4.397856,-9.874326,5.667197,-9.803196,8.504253,-1.937513,-6.790899,5.736370,1.211429,-0.079558,-9.801416,5.547614,-8.670414,4.942533,-0.824063,-1.348927,7.207894,-8.625281,-6.825584,-2.886585,-5.300933,3.461691,-5.245412,-3.717532,7.554808,-4.373498,-2.005694,9.976994,4.097087,1.207063,8.957934,1.153790,-1.447940,-8.737784,-2.011778,-4.782853,2.233418,8.413505,1.449403,4.504547,4.060245,-6.197518,3.250747,-8.784175,-1.573636,-0.985434,-3.438498,-6.001505,-4.454415,8.085312,0.074103,5.104224,5.468137,-4.684828,-0.807193,-1.231617,-0.531683,8.541452,-3.416040,-3.404246,-8.580973,-3.279484,2.462892,6.748886,3.524475,-1.350394,8.823141,3.382863,2.254275,7.881018,5.802733,4.993296,-4.027902,5.720430,-2.482518,4.838020,9.417393,5.532606,0.743382,-6.655666,1.020883,5.352561,-7.840511,-7.967774,1.830601,-1.405619,7.164829,-4.150150,-9.912465,-1.443103,0.791548,5.900262,8.531660,6.405814,-2.674934,-9.405176,1.463589,-9.631496,-4.235018,0.273469,-6.417532,3.272768,4.055334,5.650706,3.059275,-5.153428,5.421142,8.821002,9.236397,6.987685,-3.695578,9.396285,-0.463925,-4.894020,-3.181043,-5.844940,3.774146,-2.609571,5.405391,-3.932864,2.844906,0.408467,1.309680,-7.392874,-0.053929,-2.261851,1.332589,-6.824593,0.110208,-8.607168,-3.815761,-9.587901,-9.690966,-7.186001,-8.955752,9.049348,9.635530,-6.825311,0.891204,8.462927,4.621609,2.998020,-3.578610,-6.002816,-3.822232,0.298481,3.774275,-0.109827,7.779937,8.762483,1.179551,0.442836,0.825315,1.294815,-0.007310,-1.734078,-8.759893,-2.991293,2.830050,-5.954879,-2.842388,-7.319943,4.389348,5.068844,0.707628,-4.895272,3.793212,-1.128669,-5.324954,-2.994318,-5.386826,-6.724724,-3.832123,1.093222,6.333403,9.047776,-5.650704,4.855856,-7.070682,-2.744046,4.579836,-3.163924,-5.940041,3.903159,2.074845,-2.694831,2.887359,-1.897615,3.942097,5.424264,-3.726811,-8.672310,8.234239,-4.472379,9.848915,0.787234,-1.260069,7.255449,-6.056043,5.263178,-9.604593,-4.023984,-2.468370,7.019811,-1.139748,-1.086067,2.534748,5.062731,-9.269612,-0.166638,-8.733718,-4.015867,-7.124819,-7.798129,-7.168419,-3.136464,1.778572,-9.026168,2.896826,2.903178,2.888764,-1.309891,6.888683,0.419928,-2.299979,9.153387,0.257504,6.642919,7.123796,4.004909,8.577013,7.148564,-0.451247,-5.946366,5.198665,5.916580,6.190244,-6.411887,-4.819385,-2.889043,0.760872,4.165285,9.606579,-4.624332,-4.042715,-2.245519,5.773302,-8.891589,-2.339246,-1.508494,3.064195,-0.075097,3.798518,7.779025,-0.194641,-2.617728,2.321016,-2.761870,-4.697386,5.034616,-1.701724,-8.593047,7.663785,3.133666,3.673285,-9.962771,-3.638524,8.915729,7.708242,5.398021,-2.999085,7.345851,8.966812,-8.408266,8.610931,5.582729,-2.787942,6.293171,-7.489338,6.524409,-2.850740,-1.119997,-7.129967,5.909034,-5.972553,9.185128,-3.762420,-4.628968,-2.813498,-9.596138,5.040030,-2.620892,7.872249,6.095293,-4.127161,-6.206291,-5.772068,6.111637,-1.643293,-2.344956,9.757025,-4.860897,3.430551,-6.967707,6.485060,1.083449,-5.334733,-2.781816,8.277417,1.347845,-7.730681,9.872660,6.259677,7.764108,4.087722,-8.491247,1.067294,-2.702812,-0.513063,4.580156,3.137185,-2.989142,-3.860453,-8.801963,-9.214483,9.005923,7.812513,-3.986283,-5.960802,-5.252288,8.228796,-2.903511,7.534096,6.276151,2.334868,-0.132282,8.763933,-2.316920,9.097500,-6.869861,3.365067,5.065846,-5.929357,8.307964,6.623227,-9.635437,-3.286448,-3.855406,3.713662,9.834189,-4.088809,-8.758296,-2.447401,3.079786,9.867871,-9.146971,6.047125,5.239455,6.114272,-5.710868,-0.494387,1.388428,-5.973355,6.430806,-3.803975,-0.418604,-4.018912,-9.337870,-8.341251,-7.738686,8.225244,-0.076096,-2.750090,-6.170222,-6.914193,1.693536,0.786635,2.939909,-8.610963,-8.617377,-2.472953,7.243467,4.563643,2.566171,1.663366,4.041097,-7.978691,7.930523,8.332629,-7.490004,0.182940,-1.435572,7.938313,-2.103740,-4.571318,-9.669459,3.698509,3.792596,2.354916,-3.984758,5.282324,-1.294689,5.340961,-0.753961,7.956592,-9.930201,-8.471102,-6.972152,2.188754,9.072845,3.644770,-8.669195,6.409181,1.865977,-1.026695,2.876595,8.209480,-3.198894,-5.994079,1.421028,8.011998,-1.914152,-9.951613,2.015330,6.993294,-8.024563,-7.682000,3.765280,-6.985029,0.793806,3.496157,-0.248974,-0.691504,0.572535,-2.278389,-1.530074,2.917953,7.662830,6.363402,0.482219,-3.689563,2.436612,-0.871296,-3.978030,1.839222,6.634667,9.186182,1.006203,-1.787336,-1.903463,6.686294,3.251260,3.340224,4.292515,1.710918,8.608783,-9.749653,9.238091,1.794175,2.844116,4.660545,8.007121,3.158496,-2.018354,-9.772105,-7.724939,9.232204,-5.893578,-9.104519,-3.658072,-0.508051,1.384902,-1.917459,5.745334,2.761166,0.274972,9.572434,9.918301,0.735567,7.765492,-5.844941,-4.906561,7.567771,-7.176796,-5.498974,3.324686,-6.107930,0.762245,9.589980,-7.547015,7.507108,2.656293,5.710871,9.320400,-1.666296,-7.013926,-4.368742,8.881657,9.179895,-7.663861,-7.843654,-9.524228,-3.004761,2.817638,-6.062512,-2.008853,9.448633,-8.493532,-1.440019,-5.811808,-1.735934,6.807377,6.439571,-0.878397,-1.526849,-1.412440,6.369103,3.347366,-5.692719,7.959170,7.176920,-7.124996,-2.676264,1.747515,4.287613,0.102191,-2.266972,-0.583675,6.939823,-8.844184,9.897788], dtype = "float64")#candidate|4310|(1365,)|const|float64
var_4311 = relay.var("var_4311", dtype = "float32", shape = (1728,))#candidate|4311|(1728,)|var|float32
const_4312 = relay.const([-0.647964,-9.906310,0.758428,4.336905,-2.758420,-1.710222,9.761997,-2.220199,-1.449813,-2.934549,-6.292272,0.650526,-8.331588,-4.636052,-8.862020,0.839260,-9.579002,-0.653403,-8.685369,-7.866819,-9.425209,-4.855853,5.197674,7.508080,4.044067,-0.447456,-2.486666,-3.985315,-4.528406,-2.899650,-4.782612,1.312465,2.431069,2.455514,-9.274148,-3.358634,-6.703966,-7.166768,-8.771423,-0.448922,1.710326,6.516507,-1.422997,6.903501,-7.544287,-0.898036,8.502510,-0.803288,7.361394,-8.105869,4.807117,-2.892648,5.323985,-1.629661,-9.776117,1.051849,2.225678,1.223539,7.830397,5.541877,-5.885917,-9.400860,3.149228,9.230282,-9.378590,-4.173696,-0.137847,-3.326850,1.874312,5.566373,6.730274,-5.947884,8.630685,-6.696380,-5.973042,9.704077,4.076937,-4.961442,-9.416227,6.873927,0.203798,-3.349567,-9.799560,0.368556,5.025082,-5.639628,-0.079196,-7.727069,-9.774554,-5.495313,-8.602044,-1.001455,2.782016,-1.026490,-4.668631,6.673004,-5.186385,0.741972,-6.792873,-9.655849,-0.001132,-1.603869,7.031222,-0.054862,3.495305,-2.789653,-5.376657,-1.953377,2.231178,1.106315,-2.787585,4.596594,0.234722,-8.586266,-5.772434,6.642748,1.919322,3.174792,-5.418331,-2.550030,-4.198486,8.165269,0.752575,-3.007116,1.382998,-4.028705,-0.611592,-3.918934,0.904150,0.946116,5.805835,-5.399952,-3.146727,-1.571948,5.657631,7.774227,6.784650,6.040584,-3.378349,-2.616976,3.098269,0.580901,-8.576280,8.637741,-6.089760,1.308747,-0.805654,-6.581160,5.083333,6.341026,-7.539058,-6.825977,-9.049923,-0.200216,-6.416558,-9.678324,-6.215210,2.150906,0.296410,-2.519620,-6.088280,9.849341,1.675278,0.826123,-8.086499,1.596385,6.010278,5.045883,5.796264,-1.492202,-9.411481,-8.421411,0.140077,4.217686,-6.025988,-1.204584,-0.239964,6.642707,-5.359909,-4.517402,-5.253297,2.981020,-1.873027,4.135518,-4.354123,3.557487,-1.594826,3.414805,1.167385,-9.529130,-9.670336,-7.320226,-4.520196,-3.325005,5.137132,-4.094287,5.323688,6.898964,-6.603791,0.915689,9.049058,1.806509,-7.056564,3.238166,6.098394,-2.578682,-9.352868,-4.619934,-6.830127,4.375900,-5.769073,1.959585,5.111536,7.385155,5.135390,5.333446,5.357790,-9.912334,0.800381,6.048087,0.282657,8.678591,1.154799,6.189462,-4.363200,1.428773,-9.499721,-4.678954,7.938011,3.673281,3.300364,2.808228,5.541521,-0.940357,0.675495,0.896240,5.238651,3.724208,7.098460,9.488517,7.004414,-4.153486,8.767359,-8.607799,-2.308387,-3.699794,-0.340461,-8.150767,6.430316,-9.501466,-8.921846,-1.746887,-7.080510,-7.847631,-7.594290,-4.009496,-9.614016,9.950295,1.584887,9.339654,8.697756,5.823464,1.713764,6.178555,8.658323,-1.604715,1.436440,4.462889,-3.234898,4.890461,8.030657,-5.131380,-1.142666,-1.255616,3.351255,1.435399,1.931138,-1.079801,-4.217934,2.017399,-8.011564,-7.928644,-2.340969,6.270118,1.222104,8.868789,-5.651851,3.702625,5.335457,7.106511,5.786935,7.141083,1.715774,1.681892,5.028623,0.041662,-6.704221,-8.092611,-1.216423,9.714361,-1.439836,-6.345361,6.070439,-8.106869,2.352471,5.914723,-4.482009,9.824252,3.293828,-8.371763,-2.681040,-3.147166,6.960209,5.927410,-6.726857,5.414402,-8.716069,-0.349394,5.930688,-8.321771,-1.721424,6.157440,5.453263,-0.330660,-4.544709,4.038563,0.830244,9.147327,-5.005907,-0.287827,-6.363559,-9.106653,8.887508,-4.882051,9.905033,-6.705881,-6.416549,-3.960246,-8.205114,-2.709785,9.504517,8.374767,2.188916,6.406037,-9.143926,2.698248,-8.918525,7.064543,-6.786724,-5.170696,-6.473588,0.988879,5.411664,-8.520073,-5.828655,-4.852061,3.337631,-8.682436,-6.638144,-9.264029,1.296588,6.238477,4.008233,-2.103689,-7.796401,2.530696,5.874086,-9.864685,4.759346,-5.402939,8.497040,7.719956,0.875421,-5.590219,-9.599395,-3.544081,-8.964634,2.189335,-9.829369,3.537000,-0.140591,7.975604,6.837003,-4.777973,9.412636,-8.954184,8.642577,8.437052,-0.273887,5.217026,-4.207050,-0.393936,6.941153,1.936190,2.163298,5.945456,0.953375,4.258310,-7.905954,3.561962,3.834326,-6.269474,-8.999736,6.867595,5.107284,7.776365,-3.913486,-9.633621,2.859592,2.436236,-8.303522,-9.454147,2.940890,-1.112367,-6.046711,3.155264,-8.179239,-9.503235,9.052111,7.236006], dtype = "float64")#candidate|4312|(420,)|const|float64
call_4309 = relay.TupleGetItem(func_4035_call(relay.reshape(const_4310.astype('float64'), [15, 7, 13]), relay.reshape(var_4311.astype('float32'), [1728,]), relay.reshape(const_4312.astype('float64'), [1, 420]), ), 1)
call_4313 = relay.TupleGetItem(func_4040_call(relay.reshape(const_4310.astype('float64'), [15, 7, 13]), relay.reshape(var_4311.astype('float32'), [1728,]), relay.reshape(const_4312.astype('float64'), [1, 420]), ), 1)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
const_4320 = relay.const([[True],[True],[False],[True],[False],[False]], dtype = "bool")#candidate|4320|(6, 1)|const|bool
var_4321 = relay.var("var_4321", dtype = "bool", shape = (24,))#candidate|4321|(24,)|var|bool
call_4319 = relay.TupleGetItem(func_1725_call(relay.reshape(const_4320.astype('bool'), [2, 1, 3]), relay.reshape(var_4321.astype('bool'), [2, 4, 3]), ), 0)
call_4322 = relay.TupleGetItem(func_1728_call(relay.reshape(const_4320.astype('bool'), [2, 1, 3]), relay.reshape(var_4321.astype('bool'), [2, 4, 3]), ), 0)
func_4070_call = mod.get_global_var('func_4070')
func_4073_call = mutated_mod.get_global_var('func_4073')
const_4324 = relay.const([2.515060,2.450637,4.871097,5.563378,0.424763,3.730477,3.557575,-9.091339,0.818113,6.400516,-8.989744,-8.048558,1.620467,9.672014,-8.236169,-8.284525,-2.325685,2.813627,-1.751653,0.912117,8.988622,3.955282,-8.689896,8.906584,9.965604,-1.223474,5.840073,-3.794296,-5.791121,2.384058,-6.016057,-8.462771,-7.888605,5.003974,-3.122953,-2.305316,1.499262,2.663976,6.431811,9.180603,0.453755,-3.886552,0.662459,1.182745,5.794556,-0.574723,2.236178,-2.089328,6.759626,-4.144523,-6.258410,1.697859,-4.311530,2.852158,8.827896,-4.148123,-6.822661,0.300978,3.912494,5.886282,-1.789854,4.509700,5.301123,9.628245,0.609198,-6.328945,-5.398659,3.178328,-2.183787,-0.838240,5.583128,2.934101,-8.005228,1.989381,8.890408,-2.318038,3.567449,3.371206,8.907508,4.948367,0.276949,-8.101901,5.157099,-1.853903,-7.893277,8.710290,-3.471653,-6.254527,8.823686,-7.297273,-7.837332,-0.686361,-9.646640,-0.314674,-3.004888,-7.354537,-8.786633,2.326885,-3.874560,9.601683,1.503108,9.451093,3.646423,-1.571934,9.339903,-3.990375,1.142373,8.136925,-4.884970,1.015795,1.281598,-6.625569,-9.360309,1.067213,-0.011557,2.430995,7.402030,6.636303,-7.371919,-8.811922,-4.449270,-8.819492,4.791994,-0.506938,0.678122,2.186917,0.225463,-0.382881,6.915442,8.015132,0.579841,6.732854,6.060729,7.274724,-9.730270,2.252906,-3.664711,-4.585902,-4.915386,-6.359466,-7.198701,-6.684202,5.303480,2.141205,3.173782,-0.100823,-4.897505,5.862992,-3.736438,9.974097,-9.024889,-2.527995,-8.849638,6.688941,5.774008,0.892522,8.470352,2.533047,-3.487893,6.717909,1.071674,-4.065575,-6.197436,1.807037,7.082882,3.049705,-5.735740,-6.673138,1.777677,3.371037,1.551745,-0.885434,-0.709131,-8.425132,7.962160,-0.080727,3.414816,-4.987107,3.552118,0.156481,-5.183812,-4.725610,-9.066963,-5.169330,-8.720588,-3.276442,-4.541013,-0.702977,-9.620060,8.773352,7.904293,3.351600,9.125991,-4.496505,8.492467,2.312568,-3.526697,-6.883941,-9.197299,-1.087084,-4.017400,3.314101,-4.250252,-4.001952,-4.619551,-8.578115,8.594347,-2.451866,0.128100,1.122014,-3.023337,-2.254656,6.322496,2.875304,0.035770,-0.599243,-5.055488,-1.339679,-0.361771,-2.474253,4.657976,-8.724133,-1.062657,2.740574,2.698371,-8.844236,6.696717,-8.429006,-2.952200,-4.011692,-9.496794,5.091025,-5.693273,4.353130,-7.186563,5.398167,-2.590112,9.614277,0.070441,-4.454660,2.940550,-7.979573,5.775547,2.302309,3.306876,-9.117792,3.485368,-3.463752,9.590399,-4.097206,4.994022,3.553951,4.057764,-4.317221,2.363171,0.440797,-7.094093,1.632721,-6.885785,4.929339,6.873971,0.682689,4.989251,-1.470471,9.684397,1.712205,0.417428,-1.658495,5.855628,8.211882,8.213850,8.641423,-8.378870,-1.734220,-4.541123,-5.036388,5.972468,-0.374852,-6.680142,5.563695,5.792429,-7.082395,-8.878117,6.188759,-8.493688,-4.987759,3.457546,6.474541,6.863273,-5.869846,0.495571,8.375952,0.455594,3.627195,-2.342118,9.338520,2.602445,-4.490033,3.720454,1.953700,-4.738038,9.085566,-6.242875,-4.235219,-1.833832,3.637157,7.223808,-1.310356,-5.288992,-9.924688,6.499764,-5.118210,-7.511855,-0.079822,-1.086484,7.061702,2.085656,-5.156027,2.570408,7.498296,3.077139,9.929038,0.802907,8.864187,6.220243,0.665015,-8.301259,-7.284054,-7.097389,-0.156482,-1.851578,-3.705950,-9.325477,2.771348,8.069883,-1.784464,7.280518,6.435689,1.965880,-4.009601,4.239512,6.918008,0.629800,-0.907570,-5.757725,-6.980602,-1.552061,6.289420,1.701502,-9.737599,3.948143,-1.531677,-4.371141,-0.166710,-3.809679,-9.884210,-7.221018,6.194353,9.402102,2.831098,-7.181969,5.067542,-3.396398,-2.178682,7.696808,-5.944613,2.948202,-9.980941,6.517601,6.246362,0.590293,5.025999,-8.287235,-2.952613,-2.672877,5.835617,5.121638,1.448429,9.106193,-9.740716,-9.267568,-4.639111,9.166384,5.252884,4.517403,-8.818163,-0.223786,-6.621290,3.000049,0.429463,-4.574854,-3.668744,9.015615,-7.360210,7.191531,7.314467,2.158017,0.476105,-6.243299,1.969918,-2.739361,2.914500,4.738663,8.499224,-1.641207,-4.046078,6.181629,-9.894501,-8.316765,-8.707837,0.842705,8.891991,4.000993,9.768580,7.158751,1.799303,5.611759,1.114017,-7.231122,8.953651,7.700428,8.226668,-1.666844,9.895557,-0.799929,8.711920,9.884450,7.454652,3.399171,1.868189,2.062371,-3.316970,2.670586,-9.545191,-8.867981,-4.395173,7.578579,8.663275,4.572843,1.468794,-3.155043,-4.518824,0.563709,-2.478678,-7.190952,-0.117882,-7.534605,-0.992420,-8.015341,0.766204,-4.579630,-2.749623,6.392669,-5.024354,-7.098798,2.598089,-6.293401,-7.597172,6.447728,-9.815660,-9.027400,1.178116,-6.456079,-9.618735,-3.415767,5.587127,1.077692,9.736333,6.610428,-6.479844,0.731055,-7.111873,4.081859,0.310846,9.012691,-2.293002,-4.234369,-4.531006,-5.656599,3.808334,-5.071240,8.700396,-2.617131,0.594465,-5.367655,0.444144,9.542262,3.164019,9.867793,4.707270,8.388035,-7.392320,4.873632,-6.768867,-0.142908,6.898399,-7.541930,-2.379997,9.410704,8.497098,7.712872,7.114830,-6.688568,3.833340,2.688682,8.633720,8.397964,6.564555,-5.626168,-4.315591,1.794281,-8.598941,-8.847816,4.930340,-8.512571,-3.973205,3.932529,-7.851351,-9.085668,4.728687,-4.144797,-6.929938,7.228523,-7.263561,2.401565,-5.173097,-9.703663,9.938672,9.224845,-3.860759,4.687593,-7.419794,-8.271998,-9.767849,-5.302512,1.699836,-8.713052,-5.009696,3.008675,-5.125605,7.173112,4.942123,5.010692,6.435767,6.102345,-8.396724,-6.789127,-4.253823,2.337453,4.011865,-1.438045,-2.688044,7.573681,-9.661187,4.069781,7.710174,8.644280,6.379209,8.166740,-8.761324,-1.911568,2.992247,8.900686,-1.365103,9.848007,-0.006595,-4.147778,-0.033772,-8.411772,-1.836869,1.512829,-5.200778,-6.669549,6.643575,-4.301536,6.253445,-4.078004,7.717020,-4.842249,-4.188479,-1.007873,5.868015,9.671986,-3.091419,1.608117,-0.315381,-7.156247,8.821739,-2.326896,7.829543,-8.556643,9.660973,9.813882,-3.342514,-5.009287,0.600966,-7.118610,2.446269,2.803785,3.146787,-5.556279,5.094495,-9.153838,-8.308345,-3.718268,-7.741669,-6.545844,8.655031,-9.319506,4.701031,8.258719,3.496018,4.038762,4.029243,-3.303542,1.066153,-5.581988,-4.263962,-5.313477,2.777373,-8.571673,7.208691,-2.368494,-2.604885,0.540850,0.407494,9.882623,-0.332964,-5.195872,9.815174,-7.566898,8.179284,6.547985,3.913818,-7.642087,-5.521997,-8.305854,5.119317,7.761192,-5.019480,2.931627,4.019646,-0.849949,-3.983497,7.056705,-2.206781,-0.358656,4.364930,8.044184,9.962216,3.965665,-8.153871,-7.067885,-8.424622,7.826801,-4.872352,1.174728,3.363312,1.228844,-0.380566,3.519242,-9.977969,-0.414215,-2.455590,-3.364688,-8.398098,6.377965,-5.009987,-4.279315,8.676633,9.177039,2.406874,3.903173,-2.408161,-7.763143,-9.696048,5.768531,2.603542,-1.585885,8.367623,-1.097562,-1.357282,-4.011009,3.909993,-1.887727,7.534534,-6.739220,-7.040922,6.432762,-3.667962,0.044114,-5.107369,6.136599,-2.019903,2.045264,-9.520364,2.538166,0.695742,0.675106,2.223199,-6.148348,1.797302,5.387774,-1.215675,3.944906,-4.712113,3.306779,9.791413,-5.603908,-8.212047,-7.578657,1.055126,-2.673693,5.984100,9.406472,1.735170,9.101746,-3.417485,-6.794817,-4.103499,7.788403,-8.930949,5.343330,8.114725,8.465489,6.359399], dtype = "float32")#candidate|4324|(726,)|const|float32
call_4323 = func_4070_call(relay.reshape(const_4324.astype('float32'), [11, 11, 6]))
call_4325 = func_4070_call(relay.reshape(const_4324.astype('float32'), [11, 11, 6]))
func_3605_call = mod.get_global_var('func_3605')
func_3606_call = mutated_mod.get_global_var('func_3606')
call_4333 = relay.TupleGetItem(func_3605_call(), 0)
call_4334 = relay.TupleGetItem(func_3606_call(), 0)
bop_4337 = relay.power(const_4320.astype('float32'), const_4324.astype('float32')) # shape=(6, 726)
bop_4344 = relay.bitwise_and(var_4303.astype('uint64'), relay.reshape(bop_4304.astype('uint64'), relay.shape_of(var_4303))) # shape=(5, 4, 13)
func_3605_call = mod.get_global_var('func_3605')
func_3606_call = mutated_mod.get_global_var('func_3606')
call_4347 = relay.TupleGetItem(func_3605_call(), 0)
call_4348 = relay.TupleGetItem(func_3606_call(), 0)
func_3340_call = mod.get_global_var('func_3340')
func_3344_call = mutated_mod.get_global_var('func_3344')
const_4351 = relay.const([-1.886473,-3.285873,1.167126,7.170530,-8.106350,8.264254,-5.790417,9.972527,-5.331467,1.979669,-7.551392,6.018699,-7.990205,-7.839630,2.121027,-6.635026,-7.578465,-3.953024,7.158396,7.408161,-1.608727,2.413826,9.768255,-6.026124,4.540582,-1.735209,1.567845,2.234186,4.831684,-4.304602,7.813150,6.570242,4.134385,1.413294,4.644268,-0.928075,9.167575,-8.559123,-1.049147,-4.079329,7.850819,4.934931,9.298498,-6.983444,-9.883581,3.748754,-6.799408,0.503937,-5.150060,-7.009632,1.076286,-7.209549,-3.712270,1.447945,6.847996,-8.432213,3.260923,9.071048,6.953526,5.754653,-4.828083,7.362888,8.486050,2.580849,-9.073298,-6.771171,-9.122193,-5.317416,0.395273,-4.862734,-9.700911,3.178759,-7.668420,-4.837599,4.658187,-3.157399,-4.396298,-3.475163,-9.219664,2.233308,4.681931,9.389825,-7.130768,-8.998730,9.533415,-7.467780,-0.872188,7.146483,1.637819,-0.186428,-3.175704,-9.546359,-3.198612,-9.649301,-3.479909,1.390733,7.599705,-8.632804,0.436597,-4.411990,7.372805,-2.753212,-7.652212,-2.039702,7.289258,-2.561717,5.659101,-8.637385,3.254824,3.596505,-1.459172,4.011756,9.947405,-4.375216,1.032585,9.116979,7.154581,-1.287425,-6.753149,9.978449,0.216219,3.815850,4.880012,-5.119847,-0.097683,-9.626843,3.104757,6.038609,5.997507,3.361552,-3.970217,0.697687,-5.043838,7.158453,5.692141,-1.426350,3.972675,7.024260,1.789020,6.160759,1.025265,-1.570609,-8.659191,8.853594,6.537840,-8.433695,-4.037552,-0.845808,0.344092,8.942196,-0.791842,7.779983,1.087757,-4.589009,-4.359278,-7.599736,-6.908825,-4.702815,-4.631311,-4.052237,-0.220668,2.436664,5.660132,2.335716,-2.112302,0.573139,-2.595959,-2.306883,8.897911,-8.342726,-5.432763,-7.547312,-2.349239,7.683670,-2.292735,-4.791904,-5.894210,9.648250,7.600406,-1.328006,5.648529,9.108612,-7.144841,3.657625,-1.362500,-7.954043,7.474168,0.326505,2.925363,-2.207348,3.159238,6.434881], dtype = "float32")#candidate|4351|(192,)|const|float32
call_4350 = relay.TupleGetItem(func_3340_call(relay.reshape(const_4351.astype('float32'), [192,]), relay.reshape(const_4351.astype('float32'), [192,]), ), 4)
call_4352 = relay.TupleGetItem(func_3344_call(relay.reshape(const_4351.astype('float32'), [192,]), relay.reshape(const_4351.astype('float32'), [192,]), ), 4)
output = relay.Tuple([call_4309,const_4310,var_4311,const_4312,call_4319,var_4321,call_4323,call_4333,bop_4337,bop_4344,call_4347,call_4350,const_4351,])
output2 = relay.Tuple([call_4313,const_4310,var_4311,const_4312,call_4322,var_4321,call_4325,call_4334,bop_4337,bop_4344,call_4348,call_4352,const_4351,])
func_4353 = relay.Function([var_4302,var_4303,var_4311,var_4321,], output)
mod['func_4353'] = func_4353
mod = relay.transform.InferType()(mod)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4353_call = mutated_mod.get_global_var('func_4353')
var_4355 = relay.var("var_4355", dtype = "uint64", shape = (5, 4, 13))#candidate|4355|(5, 4, 13)|var|uint64
var_4356 = relay.var("var_4356", dtype = "uint64", shape = (5, 4, 13))#candidate|4356|(5, 4, 13)|var|uint64
var_4357 = relay.var("var_4357", dtype = "float32", shape = (1728,))#candidate|4357|(1728,)|var|float32
var_4358 = relay.var("var_4358", dtype = "bool", shape = (24,))#candidate|4358|(24,)|var|bool
call_4354 = func_4353_call(var_4355,var_4356,var_4357,var_4358,)
output = call_4354
func_4359 = relay.Function([var_4355,var_4356,var_4357,var_4358,], output)
mutated_mod['func_4359'] = func_4359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mod.get_global_var('func_2954')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_4384 = relay.TupleGetItem(func_2954_call(), 0)
call_4385 = relay.TupleGetItem(func_2955_call(), 0)
func_951_call = mod.get_global_var('func_951')
func_956_call = mutated_mod.get_global_var('func_956')
const_4392 = relay.const([False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True], dtype = "bool")#candidate|4392|(300,)|const|bool
var_4393 = relay.var("var_4393", dtype = "int16", shape = (18,))#candidate|4393|(18,)|var|int16
call_4391 = relay.TupleGetItem(func_951_call(relay.reshape(const_4392.astype('bool'), [5, 5, 12]), relay.reshape(const_4392.astype('bool'), [5, 5, 12]), relay.reshape(var_4393.astype('int16'), [1, 18]), ), 4)
call_4394 = relay.TupleGetItem(func_956_call(relay.reshape(const_4392.astype('bool'), [5, 5, 12]), relay.reshape(const_4392.astype('bool'), [5, 5, 12]), relay.reshape(var_4393.astype('int16'), [1, 18]), ), 4)
var_4395 = relay.var("var_4395", dtype = "float64", shape = (9, 10, 3))#candidate|4395|(9, 10, 3)|var|float64
bop_4396 = relay.add(call_4384.astype('float32'), relay.reshape(var_4395.astype('float32'), relay.shape_of(call_4384))) # shape=(9, 10, 3)
bop_4399 = relay.add(call_4385.astype('float32'), relay.reshape(var_4395.astype('float32'), relay.shape_of(call_4385))) # shape=(9, 10, 3)
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
call_4402 = relay.TupleGetItem(func_3632_call(), 0)
call_4403 = relay.TupleGetItem(func_3634_call(), 0)
output = relay.Tuple([call_4391,const_4392,var_4393,bop_4396,call_4402,])
output2 = relay.Tuple([call_4394,const_4392,var_4393,bop_4399,call_4403,])
func_4406 = relay.Function([var_4393,var_4395,], output)
mod['func_4406'] = func_4406
mod = relay.transform.InferType()(mod)
var_4407 = relay.var("var_4407", dtype = "int16", shape = (18,))#candidate|4407|(18,)|var|int16
var_4408 = relay.var("var_4408", dtype = "float64", shape = (9, 10, 3))#candidate|4408|(9, 10, 3)|var|float64
output = func_4406(var_4407,var_4408,)
func_4409 = relay.Function([var_4407,var_4408,], output)
mutated_mod['func_4409'] = func_4409
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4414 = relay.const([[[7.503821,4.779838,5.089840,7.349986,-5.430858,-3.913368,-8.982336,0.836755,1.739084,5.980179,7.516688],[7.634248,2.224927,7.909300,-5.911740,-1.668329,-6.518482,2.166367,-6.570230,-0.538357,3.252808,9.264786],[-7.591771,9.802130,8.718039,-7.550103,7.012508,-7.159178,-5.225112,5.699965,-1.369624,-9.516668,-6.895796],[0.941117,-3.393691,3.295422,-7.347408,6.470089,7.048499,-8.926261,-4.062323,1.641773,-3.795267,-2.963739],[7.220291,7.927025,9.884615,-9.710337,-2.122167,-8.948756,-4.565964,-9.620866,-0.828301,5.031340,-8.513745],[7.589098,-3.060891,-3.387774,-9.345933,1.029270,5.877514,4.401969,-3.653757,-6.299678,6.853648,-3.015114],[-9.711817,0.881541,-8.231587,-2.529631,-2.336272,6.799148,-9.888440,-7.651201,-7.982102,-1.323475,-8.910360],[-5.812511,2.009654,2.335478,8.646498,-8.667714,-8.536918,1.987951,5.622192,-9.744756,8.979240,-4.244240],[0.724699,-2.744056,6.825647,8.606033,-8.674482,-7.666988,-4.084247,6.546366,5.537933,9.956976,1.051446],[4.274785,-2.106817,-9.752642,8.704554,3.315546,2.431393,4.971809,-0.596617,8.038962,-2.770907,6.098905],[3.445682,0.498338,-7.777711,5.640978,5.026090,-7.748480,-3.450852,5.448926,-9.451183,-3.459556,-7.225829]],[[-4.748575,5.343300,1.223891,4.888193,-4.389089,0.884485,-9.553284,8.203780,7.073386,-8.127827,-2.262326],[8.389578,-0.157990,3.381303,4.598286,-7.284477,-1.379847,7.447825,-1.690992,-8.199951,-7.941861,-8.931742],[-3.372242,-9.110119,-8.967872,6.076199,1.368154,-2.914298,-8.365705,-9.632865,9.599882,8.365965,-8.338960],[5.398344,-0.872175,-0.872839,-5.610990,3.754211,-8.614954,-9.657366,-8.759729,4.781617,-0.256035,2.018510],[3.778314,5.314776,5.708314,3.881507,2.194294,-3.087044,-8.417250,-0.067521,5.659568,2.489747,2.139235],[-8.650357,-1.342266,4.784585,5.166812,2.450497,8.150992,9.702464,-4.892501,-9.953155,0.496742,6.032588],[5.773686,-9.329793,5.862211,-9.067486,-0.543104,-4.315962,9.805646,9.858177,-7.378528,2.904400,9.163344],[-2.783678,3.477618,-0.817486,6.680224,9.320792,0.030806,3.292602,7.748496,-2.832427,-8.242136,-2.568084],[-4.174137,-4.587903,0.393780,-7.515305,-6.399716,-0.321223,-4.054576,7.414743,-7.326254,-4.229878,-0.560112],[-2.790056,-3.938992,2.830315,8.773947,-8.203410,-6.844674,-7.388830,-1.709272,-9.346836,-6.955133,7.498114],[8.833797,-0.220169,3.064158,-3.165110,8.403699,7.926573,1.462262,-6.099731,9.867238,-0.292051,-1.354620]],[[3.200493,-5.699092,4.457639,-1.640977,4.685095,5.688768,1.797240,-8.001442,0.428522,-9.845100,2.434752],[2.412095,-0.736400,-1.010885,-7.163172,3.050903,-7.783411,-8.889805,-8.001635,-8.618879,-9.563844,-6.774034],[-1.348381,4.724354,-0.688615,-5.734453,3.128672,6.175838,-1.865154,3.649081,-6.206293,-9.399412,-4.606959],[5.309714,2.260549,-5.426226,4.804073,4.279627,8.699083,5.808664,-3.402678,-3.193652,-9.865630,9.013292],[9.725671,1.807755,-1.362787,-2.232909,-9.640781,8.254035,4.310081,-1.043724,-1.353141,-6.524811,-1.559233],[0.997337,-0.203874,9.019711,-7.169528,1.644250,2.006760,8.078309,8.111705,-5.849363,5.670657,1.849155],[3.221711,-7.328369,-2.254721,8.352957,-0.044885,4.830855,-8.973833,2.783691,-4.929344,4.185316,-1.017313],[0.665007,-4.500786,4.414191,9.834262,7.308580,-1.852465,1.654482,-0.451117,-0.996595,8.079901,0.116257],[-5.354420,-0.344776,-6.726670,-6.241544,7.330803,-7.349322,7.846526,3.186609,-6.799884,8.190981,-5.171640],[1.198545,9.587710,-6.469231,-0.115993,1.066814,-8.731512,9.155967,3.123881,1.965273,7.432834,-6.526145],[-5.694729,9.319856,-6.802870,9.306837,6.378353,-0.807078,-6.656185,-9.814242,-0.568573,4.333709,1.000131]],[[8.965679,-0.941510,7.072077,-5.903795,-6.980721,-4.909739,-7.149165,-6.161623,2.998236,-6.940317,1.227109],[-5.171779,5.846952,2.983172,-1.018800,7.034217,8.185348,-3.167146,7.378147,-3.553275,7.138186,-6.804061],[-7.479952,-8.877475,-2.854666,3.572201,3.066130,1.557369,-9.975468,-0.485112,-3.600496,4.340613,7.516653],[-1.304034,-2.935091,1.144624,5.130288,8.682948,-8.316470,-2.858684,9.674023,-3.409127,1.077582,6.743074],[-5.249858,-3.586709,-2.937858,-5.919990,-5.390194,-8.761847,-3.324372,-1.991755,9.044310,5.391347,0.268971],[1.384236,3.733432,-0.429996,1.370444,-3.262468,3.131774,-7.171076,-4.883757,0.707309,-4.633813,-2.435663],[5.957072,-1.277724,-1.674728,5.513400,6.963797,-6.326748,-2.587819,-0.796323,7.218186,-4.050200,2.188620],[-0.428321,4.082343,-4.640830,7.090930,-1.809042,-1.593935,-1.748393,-6.187476,-2.703631,-9.747258,-4.866907],[2.150037,-8.226028,-5.356740,7.338818,-7.832240,6.027270,-7.877806,5.743249,-6.099948,-8.083912,-6.991618],[-0.465607,-5.114335,4.990610,1.877304,-5.531356,-9.697526,0.678810,1.610471,-8.403050,-0.599351,4.214137],[-3.917481,1.856504,9.534753,3.345746,-8.277813,-2.176610,-3.613164,1.754613,-5.260902,4.445810,-0.397722]],[[1.074323,1.701688,6.278774,5.178274,-2.914018,7.165747,9.349913,-4.951386,8.677957,-2.384902,3.548849],[0.721043,-2.371701,-9.551825,-8.653853,5.027372,-4.064422,3.873889,-1.354664,0.661051,-7.379016,-4.592368],[6.440853,-4.536734,0.665147,-5.784543,-9.548232,8.732137,8.999868,-0.189013,5.438009,5.788952,-7.803515],[7.053567,-4.530447,-5.416996,-8.758083,-0.919609,0.215930,-5.324199,6.110967,5.956442,-6.723649,-2.261458],[1.041925,7.215997,-2.200862,-0.252542,0.639511,-7.422516,-1.684847,2.578761,6.658524,-2.599326,-6.434516],[-8.903562,-1.848702,4.091123,-1.225179,-0.356450,-0.658679,-7.086168,4.386554,-9.613255,8.684569,-0.530005],[5.786674,-2.377594,4.973353,1.494962,1.947197,4.775716,0.064972,-8.109406,-7.152840,2.944423,-7.089205],[-1.073978,4.712465,-9.591117,0.912726,-4.391985,-7.792588,3.866140,-8.508964,-9.210574,-8.779863,7.740656],[-4.151222,-7.059232,-3.460348,-2.637065,5.917238,-2.239442,0.881780,3.711307,9.850894,4.571296,-4.173956],[0.023315,2.215048,-7.876068,3.192282,4.866306,2.779473,0.439415,-7.128149,-2.923159,-6.092548,-7.916754],[-0.973917,-3.254168,9.765225,5.817474,-1.641233,-1.724995,-2.585043,-6.095437,-0.857058,-7.559085,3.315259]],[[-4.548148,3.364982,9.058981,4.258429,3.672789,-4.266918,-9.094591,3.140617,1.834081,-3.151708,6.802702],[3.495807,5.465369,0.324811,4.094959,5.146165,-3.989829,0.300819,-9.316136,4.991499,-3.515607,3.519165],[-0.867464,-4.548573,-1.970789,2.991131,-4.475792,7.235762,5.156637,4.053285,0.705800,-3.965915,9.568593],[-0.353321,-1.156229,9.786216,0.976061,4.029217,4.151176,2.807791,0.837754,6.813616,1.118016,7.113255],[5.545793,-1.249669,0.549469,3.203982,-0.112366,-8.851944,3.420113,3.045277,-8.286093,-5.158900,-7.781153],[1.375334,9.887528,1.837567,-0.576555,7.635726,3.755606,-3.944151,-4.854577,3.024195,6.863127,5.647048],[7.627471,6.448603,-6.724950,3.286713,-5.260931,-0.739425,2.770809,-7.595062,-0.090877,-3.895702,4.414966],[-3.479156,-6.995737,-4.452955,8.002774,-7.195209,-4.874046,-1.462469,-3.470802,-6.076736,-9.017457,-6.425161],[-5.262657,7.301657,-2.320884,6.830287,4.593312,5.393616,1.558832,9.820763,3.236678,-6.990759,-0.705664],[-2.394641,-8.283534,1.610503,9.431111,0.731673,-5.686008,-7.701685,-6.607711,8.955777,7.749181,4.738752],[-9.579053,3.457960,-5.222066,-0.090595,-5.435663,8.919139,1.247430,-5.474348,-8.459521,-2.004816,-6.813107]],[[7.118456,-0.304640,-5.907833,4.953624,7.228539,1.146047,-6.831286,-0.234424,-2.132375,7.995375,3.496953],[-0.266070,-9.729915,3.940822,1.083186,8.909780,-4.069438,3.814277,-8.401928,-2.216272,6.298363,-9.910397],[-2.233943,-6.978628,-6.419408,-5.098482,-5.791851,4.362672,-9.978350,6.352187,-2.110222,-9.066959,3.086126],[-7.628472,7.631933,7.777374,-5.564707,-8.290658,-3.656576,6.348675,-4.389498,-9.773968,-9.216849,1.509376],[7.490463,-7.994719,-2.475864,-4.618837,0.828759,2.348915,-1.851146,6.630297,-3.671516,0.202866,-0.100579],[2.463193,-5.241186,6.684131,3.768681,2.255695,3.519803,3.774251,4.903809,4.401321,-3.831329,4.605547],[1.659869,7.698442,-4.469630,-8.939793,3.900095,9.599236,-1.187775,-0.571706,-0.862576,-0.898206,4.682336],[0.922591,9.373857,1.712628,8.144523,-6.487229,7.334939,-4.850079,-4.698056,-2.819110,7.568645,-7.793561],[-0.670837,0.158550,-1.700590,2.295013,6.518482,-7.904419,1.854576,-9.558489,-8.772836,-2.443248,-7.486552],[9.631834,0.424396,-7.528142,-1.180896,-5.723574,3.630593,6.809586,9.745971,-3.489312,9.002228,-2.019645],[-5.421904,8.548792,4.640377,8.668902,-1.248263,7.418760,-1.690013,-8.915314,-2.233599,-8.744342,0.046998]]], dtype = "float32")#candidate|4414|(7, 11, 11)|const|float32
uop_4415 = relay.sqrt(const_4414.astype('float32')) # shape=(7, 11, 11)
bop_4418 = relay.subtract(const_4414.astype('float64'), relay.reshape(uop_4415.astype('float64'), relay.shape_of(const_4414))) # shape=(7, 11, 11)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_4424 = relay.TupleGetItem(func_3172_call(), 1)
call_4425 = relay.TupleGetItem(func_3174_call(), 1)
func_2596_call = mod.get_global_var('func_2596')
func_2597_call = mutated_mod.get_global_var('func_2597')
call_4426 = relay.TupleGetItem(func_2596_call(), 1)
call_4427 = relay.TupleGetItem(func_2597_call(), 1)
output = relay.Tuple([bop_4418,call_4424,call_4426,])
output2 = relay.Tuple([bop_4418,call_4425,call_4427,])
func_4430 = relay.Function([], output)
mod['func_4430'] = func_4430
mod = relay.transform.InferType()(mod)
output = func_4430()
func_4431 = relay.Function([], output)
mutated_mod['func_4431'] = func_4431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_4439 = relay.TupleGetItem(func_3172_call(), 4)
call_4440 = relay.TupleGetItem(func_3174_call(), 4)
output = call_4439
output2 = call_4440
func_4444 = relay.Function([], output)
mod['func_4444'] = func_4444
mod = relay.transform.InferType()(mod)
mutated_mod['func_4444'] = func_4444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4444_call = mutated_mod.get_global_var('func_4444')
call_4445 = func_4444_call()
output = call_4445
func_4446 = relay.Function([], output)
mutated_mod['func_4446'] = func_4446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4274_call = mod.get_global_var('func_4274')
func_4276_call = mutated_mod.get_global_var('func_4276')
call_4474 = func_4274_call()
call_4475 = func_4274_call()
output = relay.Tuple([call_4474,])
output2 = relay.Tuple([call_4475,])
func_4479 = relay.Function([], output)
mod['func_4479'] = func_4479
mod = relay.transform.InferType()(mod)
mutated_mod['func_4479'] = func_4479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4479_call = mutated_mod.get_global_var('func_4479')
call_4480 = func_4479_call()
output = call_4480
func_4481 = relay.Function([], output)
mutated_mod['func_4481'] = func_4481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3109_call = mod.get_global_var('func_3109')
func_3111_call = mutated_mod.get_global_var('func_3111')
call_4513 = relay.TupleGetItem(func_3109_call(), 0)
call_4514 = relay.TupleGetItem(func_3111_call(), 0)
uop_4522 = relay.sqrt(call_4513.astype('float64')) # shape=(9, 10, 3)
uop_4524 = relay.sqrt(call_4514.astype('float64')) # shape=(9, 10, 3)
uop_4525 = relay.asin(uop_4522.astype('float32')) # shape=(9, 10, 3)
uop_4527 = relay.asin(uop_4524.astype('float32')) # shape=(9, 10, 3)
uop_4531 = relay.acosh(uop_4522.astype('float32')) # shape=(9, 10, 3)
uop_4533 = relay.acosh(uop_4524.astype('float32')) # shape=(9, 10, 3)
uop_4534 = relay.asinh(call_4513.astype('float32')) # shape=(9, 10, 3)
uop_4536 = relay.asinh(call_4514.astype('float32')) # shape=(9, 10, 3)
output = relay.Tuple([uop_4525,uop_4531,uop_4534,])
output2 = relay.Tuple([uop_4527,uop_4533,uop_4536,])
func_4537 = relay.Function([], output)
mod['func_4537'] = func_4537
mod = relay.transform.InferType()(mod)
mutated_mod['func_4537'] = func_4537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4537_call = mutated_mod.get_global_var('func_4537')
call_4538 = func_4537_call()
output = call_4538
func_4539 = relay.Function([], output)
mutated_mod['func_4539'] = func_4539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4267_call = mod.get_global_var('func_4267')
func_4269_call = mutated_mod.get_global_var('func_4269')
call_4566 = func_4267_call()
call_4567 = func_4267_call()
output = call_4566
output2 = call_4567
func_4601 = relay.Function([], output)
mod['func_4601'] = func_4601
mod = relay.transform.InferType()(mod)
mutated_mod['func_4601'] = func_4601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4601_call = mutated_mod.get_global_var('func_4601')
call_4602 = func_4601_call()
output = call_4602
func_4603 = relay.Function([], output)
mutated_mod['func_4603'] = func_4603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3576_call = mod.get_global_var('func_3576')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_4624 = relay.TupleGetItem(func_3576_call(), 0)
call_4625 = relay.TupleGetItem(func_3578_call(), 0)
var_4628 = relay.var("var_4628", dtype = "uint64", shape = (8, 11, 5))#candidate|4628|(8, 11, 5)|var|uint64
bop_4629 = relay.power(call_4624.astype('float32'), relay.reshape(var_4628.astype('float32'), relay.shape_of(call_4624))) # shape=(8, 11, 5)
bop_4632 = relay.power(call_4625.astype('float32'), relay.reshape(var_4628.astype('float32'), relay.shape_of(call_4625))) # shape=(8, 11, 5)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
var_4647 = relay.var("var_4647", dtype = "float32", shape = (192,))#candidate|4647|(192,)|var|float32
call_4646 = relay.TupleGetItem(func_65_call(relay.reshape(var_4647.astype('float32'), [1, 12, 16])), 0)
call_4648 = relay.TupleGetItem(func_68_call(relay.reshape(var_4647.astype('float32'), [1, 12, 16])), 0)
output = relay.Tuple([bop_4629,call_4646,var_4647,])
output2 = relay.Tuple([bop_4632,call_4648,var_4647,])
func_4656 = relay.Function([var_4628,var_4647,], output)
mod['func_4656'] = func_4656
mod = relay.transform.InferType()(mod)
var_4657 = relay.var("var_4657", dtype = "uint64", shape = (8, 11, 5))#candidate|4657|(8, 11, 5)|var|uint64
var_4658 = relay.var("var_4658", dtype = "float32", shape = (192,))#candidate|4658|(192,)|var|float32
output = func_4656(var_4657,var_4658,)
func_4659 = relay.Function([var_4657,var_4658,], output)
mutated_mod['func_4659'] = func_4659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4431_call = mutated_mod.get_global_var('func_4431')
call_4661 = relay.TupleGetItem(func_4430_call(), 2)
call_4662 = relay.TupleGetItem(func_4431_call(), 2)
func_3054_call = mod.get_global_var('func_3054')
func_3060_call = mutated_mod.get_global_var('func_3060')
const_4666 = relay.const([-7,-1,2,4,-10,-3,2,1,-1,-5,-6,-8,5,-4,-8,-9,3,3,-7,9,4,6,-5,9,5,-7,-2,-3,-4,5,3,-8,-6,-2,-2,10,4,-1,2,-6,-6,7,-8,9,7,-6,8,7,-9,-6,-9,-4,-10,-3,-6,9,-2,2,-5,1,-4,4,-5,5,9,4,8,2,-4,10,6,2,4,-7,6,4,-9,2,-1,-7,-10,2,-8,6,1,-9,-7,-2,-6,1,9,10,6,-1,10,-9,8,8,6,-5,2,-2,7,-10,-5,5,-10,3,8,5,1,-10,-5,-2,-4,8,4,-5,-7,6,-9,7,7,-5,3,6,-4,-2,7,-10,4,-7,1,1,-8,-2,-9,6,9,2,-1,-6,7,6,4,4,-5,4,4,5,-2,1,-4,-7,10,6,10,-8,2,2,1,1,9,-3,-3,-5,3,-6,4,-3,5,-6,1,-3,-10,-6,2,-7,5,2,-8,4,-4,2,6,-2,3,7,4,9,-6,4,-4,-7,-3,-8,-7,-4,-5,-8,-10,-1,8,8,-1,-7,2,4,-6,-7,-3,10,9,10,-8,4,-1,-10,-4,-3,7,-1,5,7,8,8,10,1,2,3,4,-6,2,-3,8,1,-8,-6,-10,4,-8,-9,-2,10,-4,2,2,-2,-7,3,1,-1,-8,3,2,6,-2,10,5,-6,3,-8,7,1,3,9,8,4,-7,-4,6,8,-6,2,8,-2,-7,8,-8,-9,-1,-6,6,-6,9,-1,1,5,-8,9,-4,-7,-1,6], dtype = "uint32")#candidate|4666|(294,)|const|uint32
const_4667 = relay.const([[8.584438],[2.377387],[-0.099706],[-4.668361],[7.106798],[-1.911035],[-2.970870],[-1.975045],[-5.834961],[-9.124294],[6.866339],[-3.331688],[0.601487],[0.771691],[-9.166918],[1.376059],[-6.238763],[8.164014],[7.637378],[-6.023017],[-4.621853],[-5.549635],[-6.986969],[5.400006],[7.025298],[5.035408],[-6.569749],[4.131341],[-7.204027],[7.891602],[-9.228510],[-7.256869],[-7.988834],[0.846502],[-1.287266],[-1.279021],[3.476641],[8.499611],[0.882317],[-5.380296],[-0.690359],[0.059492],[3.261611],[-7.703221],[0.187065],[-9.946050],[-0.272732],[-4.721696],[-4.931207],[-1.260900],[-0.092388],[8.787249],[-8.648090],[6.550220],[1.352931],[-8.692779],[-1.426952],[-1.344661],[-5.089072],[7.883495],[5.660085],[7.242247],[-1.203020],[-3.439126],[-3.556158],[7.952695],[2.815605],[-1.681164],[1.117398],[0.878146],[9.459270],[0.260987],[-4.336667],[-9.506971],[-8.126699],[-9.739342],[0.913137],[-7.506816],[-5.354137],[8.817273],[0.112474],[3.748622],[6.366066],[-1.003279],[9.283083],[-9.735845],[0.998320],[-9.951157],[3.393992],[-5.375289],[-0.458127],[3.845585],[5.648438],[-4.150512],[-5.391399],[-7.862329],[-6.199597],[-5.489990],[2.826262],[0.444794],[2.838751],[9.325846],[9.229647],[-3.637120],[-8.819546],[-6.681673],[9.419025],[7.490991],[1.847501],[-7.084732],[1.453391],[-8.971723],[-8.200293],[5.220443],[2.292968],[3.024139],[-6.482169],[-5.834307],[-3.562003],[5.358401],[6.785349],[-3.878090],[9.787499],[6.481758],[7.098909],[0.156649],[-2.151193],[-1.754945],[-6.688731],[-7.573219],[-9.860089],[-1.273855],[6.577012],[-0.261268],[2.626068],[-1.083552],[-3.517567],[-6.492350],[-6.774172],[-5.018244],[3.701903],[-8.771542],[6.165026],[1.082566],[4.735539],[-1.674275],[2.881007],[-9.710102],[0.366478],[-5.837504],[-8.931987],[3.616853],[0.219800],[8.723249],[-3.944064],[2.409476],[0.577975],[7.939970],[3.312850],[-2.461656],[0.287822],[-0.056753],[-0.617776],[0.157247],[-6.814331],[-4.832558],[-9.827419],[2.953939],[6.457875],[-8.859852],[-6.471440],[-3.710503],[7.374675],[3.235474],[-1.908900],[8.696724],[-4.866363],[-7.356249],[1.392590],[-7.842914],[3.670827],[-6.033447],[-8.222998],[-6.082227],[-1.510786],[0.462351],[-1.540856],[-0.221103],[-2.718915],[-0.609542],[-5.370592],[-9.716457],[-8.440567],[1.156448],[-2.271556],[8.138983],[-9.797632],[8.267241],[5.572663],[5.288404],[-1.370202],[-9.694635],[-8.243826],[0.996551],[-1.875065],[8.143587],[1.395175],[3.209410],[-0.066284],[5.751781],[-4.779950],[-0.207015],[4.947143],[-3.140392],[7.498787],[-7.778325],[-4.914802],[9.044881],[-1.900627],[3.232149],[-1.983906],[3.618393],[-7.038100],[2.528493],[2.957735],[7.872017],[5.752332],[-1.573214],[-9.269422],[5.876938],[-5.189832],[9.935713],[0.038113],[6.162134],[7.115184],[-9.360735],[0.657596],[-7.367353],[6.911322],[-0.314734],[-2.234806],[-2.849029],[-1.334570],[-0.948645],[1.051245],[-2.081626],[-3.927588],[6.746445],[-6.957213],[7.983023],[1.007264],[-0.909152],[6.361422],[0.132280],[-1.068360],[2.597215],[4.842884],[9.685188],[-1.052889],[-0.531701],[9.924962],[-5.631496],[2.949140],[3.128982],[-8.130745],[8.449022],[4.263984],[4.057450],[-4.109616],[1.642537],[-1.320566],[-2.572780],[-1.832505],[5.038389],[8.602230],[9.529615],[6.931388],[-8.883390],[8.240839],[-6.253433],[-8.895109],[7.962881],[0.056794],[-0.087178],[0.490491],[4.434515],[-3.983495],[-1.121799],[6.638834],[-8.088495],[7.561574],[9.623409],[5.267852],[3.493413],[-6.101378],[-1.659208],[-1.970315],[-1.406350],[-7.672541],[7.742247],[-3.012722],[-8.568787],[-9.182366],[7.276212],[-0.268605],[5.425548],[8.796763],[-5.776809],[-1.567846],[3.322461],[-7.580334],[-8.006171],[-9.658070],[-3.604173],[1.061549],[-0.250188],[-1.582164],[3.900721],[7.049624],[-4.148471],[-5.730121],[-2.207309],[3.922011],[-5.829177],[-3.985063],[-1.936652],[4.762941],[8.890538],[7.351194],[7.788858],[-9.521581],[-8.241105],[-4.035259],[6.226873],[-3.168609],[6.441833],[6.307522],[3.153586],[6.073660],[3.384061],[2.650532],[-3.405577],[-4.344371],[-6.279296],[2.050269],[-7.379875],[-8.424654],[0.449793],[-9.401614],[-0.201055],[-5.194266],[5.514211],[7.926687],[-4.025593],[-3.413829],[2.219845],[1.529321],[4.471834],[0.345022],[9.817617],[9.625315],[-9.804790],[-6.880788],[-6.526192],[1.515586],[-1.139548],[-1.794245],[1.034917],[-9.745328],[-9.115366],[6.188756],[-3.073242],[7.595542],[-3.948441],[-8.700914],[-7.529102],[-8.060044],[3.891312],[-4.361018],[4.923436],[-2.005490],[6.465728],[-4.827568],[7.901000],[7.165454],[3.332715],[4.740648],[8.816983],[9.890110],[4.506472],[-3.123821],[8.457380],[5.732461],[1.318324],[-6.210235],[6.369568],[-4.306879],[-9.180121],[0.532547],[9.499037],[5.729518],[-0.441739],[5.006749],[-8.956578],[5.627608],[-4.183832],[8.118100],[-9.578476],[-5.510944],[-5.448933],[6.064722],[1.120645],[-0.495028],[-2.653402],[3.614135],[-7.098564],[-5.077232],[4.873861],[0.991557],[7.909372],[-3.004986],[-5.951962],[0.735892],[-1.498295],[-2.242785],[5.993970],[-5.143130],[-8.830972],[-8.289785],[-0.771776],[-9.796546],[-3.829440],[6.535401],[-0.108752],[9.898404],[-2.439320],[9.056643],[9.835621],[8.512786],[-7.435589],[-1.825688],[0.320104],[6.081119],[-9.843827],[-9.041389],[7.671088],[1.776588],[-9.166809],[-6.540295],[2.554684],[-4.821249],[4.712280],[-1.352736],[-4.616978],[-9.850891],[-5.685221],[-6.094747],[5.768516],[6.619909],[5.850982],[-5.036295],[-7.081186],[6.285525],[1.021127],[-9.471693],[4.651762],[-3.041585],[-7.912336],[-7.630135],[-2.322452],[-6.125802],[6.951338],[9.761313],[-5.492993],[-2.488222],[-6.480321],[-9.683370],[5.908602],[5.249118],[6.488733],[7.608766],[-5.050900],[9.425796],[9.103280],[-8.438086],[-7.827794],[-1.061109],[6.126252],[-0.967912],[-2.391525],[-4.503149],[-2.963788],[1.441708],[-9.378430],[-3.647091],[-5.640287],[-9.331728],[8.822520],[-1.679997],[3.257802],[-8.168137],[6.672766],[-4.997092],[-0.423880],[-9.773972],[2.078122],[-7.504578],[9.349784],[9.234721],[-0.288640],[-0.976267],[-4.660210],[-0.760394],[-6.667385],[-5.294780],[2.628070],[-9.429937],[2.155299],[7.754554],[3.655672],[-5.558848],[-2.135544],[-0.518544],[-6.697039],[7.132089],[5.701655],[-2.684321],[7.192553],[0.029352],[2.735996],[8.939958],[8.740791],[3.065233],[-1.056560],[-9.074678],[-0.352285],[0.381981],[9.260690],[-6.012724],[2.507726],[1.183321],[3.081488],[-5.923022],[-8.134972],[7.747628],[9.127196],[-6.840403],[-4.080557],[8.402749],[-3.929738],[-6.677865],[-8.832588],[-2.172552],[-1.438762],[-4.477894],[-6.357677],[-5.832962],[8.386928],[-5.281487],[2.631002],[3.686057],[1.344427],[1.012894],[3.942885],[-7.758306],[-1.872112],[-8.042368],[-9.685647],[3.632697],[3.564959],[8.599247],[7.450770],[-1.569105],[-2.661179],[-4.005114],[-1.280887],[7.796110],[8.726645],[6.128233],[6.595692],[-2.960807],[-8.918798],[6.101429],[2.973838],[6.170270],[-8.523575],[5.550302],[8.104326],[-0.354082],[-7.890105],[4.977336],[-2.564240],[-8.544623],[5.704485],[-2.876796],[-0.876005],[-2.642903],[8.737739],[7.003180],[-1.534520],[1.980129],[8.317393],[-6.207996],[-7.251584],[1.243382],[7.960692],[0.674620],[4.571419],[2.009907],[0.755175],[6.058498],[5.080575],[2.151646],[9.935379],[0.368708],[6.014931],[-6.420924],[9.001639],[4.861572],[6.205086],[8.319790],[9.497854],[-1.734993],[-3.042892],[6.154057],[1.285639],[0.129245],[5.060177],[4.737230],[-8.969444],[-7.856595],[-9.946814],[-3.433316],[-3.036862],[7.537344],[-7.283153],[-9.654342],[-4.397359],[-8.076189],[0.361842],[-7.814864],[9.292278],[9.563349],[-1.517879],[8.432641],[5.322374],[3.480625],[1.611532],[-1.004525],[2.201177],[2.070019],[-9.347151],[-2.087171],[7.264772],[4.463457],[-0.157745],[2.884286],[-6.559154],[-7.399882],[-1.851982],[3.016040],[-9.092976],[8.845865],[-7.565217],[6.832573],[7.230230],[-5.598174],[-0.752124],[-8.230929],[2.142008],[-5.777392],[-8.594129],[8.277556],[-8.928373],[7.975199],[-6.852457],[2.328506],[5.206707],[-7.356863],[-1.648597],[-0.994663],[-5.390298],[1.724448],[5.001761],[-1.194034],[4.253060],[-8.001006],[0.697910],[-8.839229],[-4.609124],[-9.510158],[-2.396535],[8.350912],[-0.937314],[-2.567476],[8.997678],[-5.978950],[4.687942],[-7.986327],[-9.635726],[4.374021],[-4.977260],[7.212980],[-1.379947],[9.346826],[9.401279],[4.510156],[8.926318],[-1.424209],[-5.134326],[-2.902836],[6.442633],[6.823792],[-7.313078],[1.220758],[0.216634],[0.905057],[-2.964208],[4.996063],[-7.668002],[7.846325],[-8.319694],[-3.614361],[8.479857],[6.482526],[4.386041],[8.247520],[-9.903630],[8.102311],[7.956335],[4.771369],[3.942687],[-0.899735],[3.910510],[-5.318401],[-3.125656],[-4.032101],[-7.890405],[1.349715],[1.337255],[4.071667],[-7.321114],[3.011282],[-7.534458],[-9.968313],[3.195549],[-5.863481],[-4.748865],[-7.713682],[-6.473909],[5.211870],[6.207331],[2.839053],[-6.448812],[6.340669],[6.830586],[-3.127389],[-3.228377],[-7.032168],[-8.083237],[-6.219062],[0.643766],[9.985533],[8.093283],[8.901481],[-8.392219],[-7.163462],[-4.905441],[-4.626832],[-3.536144],[-6.654247],[-4.742485],[-2.717824],[-1.591439],[3.523124],[0.529918],[-6.250366],[-7.079281],[-4.594005],[-5.139591],[2.706637],[-4.320612],[-3.090632],[2.572845],[-2.079808],[-4.173615],[1.888420],[6.686163],[1.894096],[6.084639],[5.343004],[-9.466120],[5.880008],[0.159017],[-4.287341],[4.682429],[-4.870060],[-2.671452],[1.857612],[3.090552],[1.759416],[-7.843057],[9.130908],[-1.380800],[-6.195369],[9.528939],[-6.816882],[4.254499],[2.748206],[4.601772],[-5.064830],[6.159446],[7.961732],[8.935819],[-3.688015],[-5.678876],[7.127870],[-6.900196],[-3.959827],[2.642948],[-7.499529],[-8.772096],[7.702706],[-7.026096],[-4.677889],[-7.106453],[7.715910],[-7.108958],[2.415659],[1.855562],[-3.794106],[-0.882387],[-6.873683],[-2.459964],[9.467269],[1.173415],[8.241026],[1.104294],[-6.578393],[1.557637],[7.590025],[2.075315],[0.117197],[2.470891],[-2.871755],[-2.551422],[-7.092782],[-8.065429],[-1.168122],[-2.532141],[-9.014306],[7.054153],[4.561991],[-4.500112],[7.290692],[4.283529],[-4.296202],[6.554310],[-6.381431],[-2.843166],[7.458359],[2.328736],[7.090376],[-6.993465],[2.208624],[-7.996072],[7.341193],[4.182126],[-8.478892],[-2.713671],[2.632637],[-2.841020],[-7.042242],[6.089940],[1.916462],[4.649522],[0.118930],[-3.787712],[-5.468419],[-7.129367],[3.020092],[-3.144249],[-3.344626],[-0.097226],[3.338559],[-6.666716],[-5.137972],[-8.032419],[-8.555153],[8.302214],[-3.273454],[-0.061762],[2.305654],[-3.802627],[-8.169535],[0.458673],[0.508416],[-6.866645],[4.366894],[-4.305731],[8.998712],[3.916603],[-9.705261],[-7.192676],[-7.275948],[-6.721128],[4.109009],[-0.006274],[9.951076],[-0.721900],[2.164279],[-2.213202],[5.208484],[-4.327370],[4.612703],[-1.242945],[-3.735938],[-7.575937],[8.634202],[1.504575],[-0.046252],[-4.543435],[6.157389],[-3.960735],[-5.797212],[-3.646222],[9.545540],[-7.623889],[9.205656],[8.177419],[-3.250129],[7.322273],[-6.247758],[6.691283],[-2.405272],[5.909773],[-6.845736],[-7.833835],[-6.301882],[-6.833836],[-5.955845],[-5.179692],[1.906471],[-8.488566],[1.755327],[6.292751],[3.585765],[-6.959604],[-3.596219],[-4.964100],[4.028014],[8.815357],[4.886426],[4.751409],[3.306913],[-3.078944],[-0.059166],[6.050058],[-7.456370],[-5.172118],[4.049888],[1.585079],[-6.876527],[-1.878862],[8.066819],[2.542130],[-9.333738],[-9.001787],[2.329010],[2.554393],[1.603957],[-9.922851],[-4.290746],[-7.560650],[9.389042],[4.727598],[-8.698132],[-4.279604],[-9.451747],[-2.116670],[6.401246],[-2.983085],[-5.898279],[1.553215],[-2.888999],[-0.415524],[5.533155],[0.853634],[-8.419489],[-8.946970],[-8.923298],[5.619672],[-5.219950],[6.311253],[-2.488929],[-1.710406],[-6.825223],[-0.640983],[2.412860],[-8.993084],[-9.086935],[7.834607],[5.007540],[-9.356563],[-6.573257],[6.767990],[-4.384699],[-6.171366],[-5.188432],[6.036585],[5.435009],[-7.425372],[6.615985],[-9.718732],[4.353987],[-8.667169],[-1.002131],[4.752831],[3.011981],[8.971768],[-1.900694],[-1.819118],[8.125302],[5.681438],[7.916170],[1.270129],[-4.918952],[-6.323256],[-6.540348],[-7.313913],[4.542840],[2.918802],[-1.307583],[3.068530],[-6.686502],[-1.638548],[6.558159],[4.652169],[6.066486],[6.101761],[-1.728487],[8.303481],[-1.242540],[-7.624450],[-8.789503],[-0.727486],[4.923863],[4.533145],[-5.434496],[2.970655],[-5.429072],[0.591639],[4.293927],[-7.339359],[2.048035],[4.060584],[-7.536790],[-2.055084],[-7.255653],[8.299922],[1.470843],[-0.182807],[-6.674053],[0.009034],[-2.824804],[9.884134],[-1.680483],[-2.972721],[-9.594755],[-7.194298],[-1.096902],[6.434075],[-1.984250],[-9.984617],[-0.293733],[7.080019],[9.420806],[-2.305046],[-2.989482],[3.651212],[8.253925],[9.440531],[9.737654],[5.939136],[-3.251370],[-3.860288],[2.629831],[-3.435354],[3.361611],[-0.750325],[-0.044556],[-8.351370],[3.215597],[6.844200],[-7.764049],[-3.108288],[-8.048845],[9.744388],[4.422860],[5.595263],[-0.811633],[2.262879],[2.316244],[3.558917],[-9.752513],[-9.583586],[1.409748],[-2.736041],[6.387200],[-9.208434],[-6.489303],[9.727398],[-0.129880],[9.033886],[5.433147],[-3.057130],[-3.402216],[8.690153],[5.001203],[-0.036355],[-5.088842],[-4.020203],[6.216682],[-7.636484],[3.386730],[-9.854049],[3.671622],[-7.308090],[-5.701464],[-0.459758],[-4.579554],[7.352573],[-3.169391],[-9.040147],[8.982166],[4.868962],[0.809287],[-1.887302],[-4.839338],[1.467947],[9.622327],[-4.113251],[-3.463891],[9.313159],[-0.026368],[-6.194538],[-4.697607],[3.318627],[7.846283],[-9.920630],[-9.751151],[-3.634888],[1.026507],[1.596840],[-1.233515],[3.035051],[-6.038010],[-2.998907],[-2.247158],[-3.629287],[0.682462],[8.743248],[-8.972485],[-8.665147],[-2.186146],[5.687258],[-7.984923],[-3.108905],[-9.811671],[-9.636169],[3.910400],[-0.911697],[1.076371],[-6.793571],[-1.187635],[-8.099143],[2.643926],[9.129558],[-0.200603],[7.817101],[-0.748884],[8.359686],[1.876843],[9.048264],[7.035243],[-5.012121],[5.714230],[3.247355],[1.151446],[7.754334],[-2.510547],[-3.523091],[1.777525],[6.316782],[8.201426],[7.196609],[1.820028],[3.748707],[-3.974442],[-9.473007],[-7.730277],[-4.802108],[-6.731096],[-8.322785],[9.363609],[3.514581],[3.348865],[-4.609842],[-1.556504],[-5.266681],[-8.929506],[6.439902],[-9.726316],[-7.744342],[7.444402],[0.469553],[7.307121],[-9.852263],[2.094632],[-1.691408],[-7.746362],[-4.325062],[4.433039],[-7.415101],[-6.641944],[4.214414],[-3.025335],[8.828097],[7.834300],[-3.551118],[-4.829995],[-6.515364],[7.265610],[8.457241],[5.187228],[-0.594095],[-6.828546],[9.403410],[3.883446],[1.979946],[-4.806633],[-2.340301],[9.648854],[-1.002331],[-8.964586],[-8.432567],[-8.151562],[-9.249767],[9.747310],[-8.126714],[8.562314],[-8.198366],[0.512764],[7.052200],[7.962587],[-6.629519],[-9.018897],[5.425361],[-3.784564],[-4.717161],[-8.865214],[-9.978357],[-6.312683],[-0.450989],[-8.566500],[-3.131549],[4.240388],[1.604302],[3.522277],[3.907243],[1.671959],[-2.485067],[0.098439],[-7.483583],[6.998319],[-3.734198],[0.390102],[-0.955297],[3.086258],[0.681515],[2.367001],[-9.741952],[-1.982705],[6.989081],[-8.688665],[-9.294738],[7.414332],[8.631920],[-2.282464],[-4.432003],[3.417528],[4.028021],[5.989721],[-3.821772],[2.014850],[6.442974],[9.674350],[1.957814],[9.257647],[7.193653],[-8.768090],[-9.316834],[0.721174],[-7.269081],[4.098221],[7.024529],[0.917477],[5.772467],[3.993991],[9.902623],[5.212261],[5.606015],[-6.132443],[-9.215210],[-7.383099],[-2.001302],[6.686082],[-0.278253],[-0.696906],[1.998803],[9.063625],[-8.268427],[5.441007],[-7.993983],[6.841838],[6.821028],[-5.028803],[-2.812350],[-9.793767],[-9.350663],[-3.299808],[5.997396],[9.644409],[-4.747452],[-7.609561],[5.839569],[3.213063],[-4.189112],[2.288468],[7.671231],[-5.302429],[1.383387],[5.659114],[-7.931224],[-0.530068],[-6.258719],[5.810449],[7.412496],[1.367686],[-2.562911],[0.140390],[-2.216008],[-3.837954],[4.359161],[3.928009],[-1.525829],[-1.704838],[-5.920437],[2.371941],[2.117619],[9.246810],[0.854071],[6.166649],[-7.807206],[-3.701666],[-1.505749],[-6.226460],[-0.347728],[0.338398],[3.256156],[-5.379744],[-0.471187],[0.373701],[5.436564],[3.073653],[4.179445],[-3.439683],[3.368826],[7.545077],[4.926285],[1.464580],[6.804717],[-2.833037],[-4.679409],[4.497465],[-9.056760],[2.623456],[-9.560575],[8.202290],[-6.678918],[-4.337129],[6.645953],[-4.195507],[-4.014246],[-8.885768],[9.413304],[6.895525],[-9.135040],[0.756965],[6.624706],[-1.097041],[-5.066827],[2.918006],[-5.587596],[-4.065734],[5.520234],[-5.462802],[-6.811932],[-6.112334],[-0.897007],[-5.585467],[-6.540641],[-4.105355],[6.001858],[6.800865],[1.013515],[-1.410525],[8.973921],[-0.465485],[-3.269955],[-3.499217],[-7.723112],[-6.564034],[7.801842],[3.456027],[-5.589915],[-4.569369],[-7.667052],[3.040615],[-9.648211],[-3.357214],[-8.595154],[4.478784],[-1.452367],[9.034566],[3.664076],[9.621172],[1.479046],[-3.878109],[-5.656544],[-3.782437],[1.939879],[9.547194],[-5.526924],[7.942408],[9.477292],[-1.485990],[-0.150855],[4.724200],[6.263154],[5.756983],[5.995918],[-1.196631],[-4.717101],[4.965009],[0.044683],[7.606393],[-6.456763],[-7.069768],[3.303847],[4.094639],[4.574871],[-0.423978],[-3.069825],[4.796350],[0.519315],[-7.601100],[2.842109],[8.778790],[2.221488],[-6.993056],[-8.924399],[5.196846],[-9.961367],[0.267628],[2.775409],[-4.241805],[-3.228077],[-7.674690],[-0.066482],[9.859008],[-1.763117],[-6.762453],[-1.063694],[5.012262],[5.487247],[-7.524905],[-3.146204],[-2.832705],[2.872300],[-3.276185],[9.010104],[-1.716442],[-8.881936],[-1.169193],[-4.930767],[-4.581648],[8.040123],[-9.573610],[-4.356987],[3.363893],[8.440074],[5.745821],[9.529747],[-5.648398],[-4.961042],[4.213307],[4.957537],[0.355444],[-3.415652],[-1.980657],[8.481086],[2.503148],[-0.727819],[9.801320],[1.258958],[-9.153299],[-7.365335],[-6.979866],[5.271901],[9.031556],[-1.400774],[0.840412],[-1.411955],[3.183720],[-8.392407],[0.269777],[-2.108978],[-1.489628],[-9.146084],[8.242169],[-8.127847],[-0.728987],[2.081155],[-7.351388],[1.061766],[-8.209835],[-9.217183],[1.699229],[7.048032],[4.681848],[-7.945156],[7.265810],[9.248161],[1.537207],[3.263512],[-5.098642],[-0.111847],[3.496389],[6.987261],[8.063553],[3.569412],[-3.346063],[9.702900],[-1.138109],[-1.747165],[4.550219],[-0.488255],[0.054935],[-3.756801],[3.941945],[9.099803],[-5.846397],[-2.042677],[-6.516817],[3.587580],[-6.269386],[2.205687],[7.636793],[-8.649495],[1.082951],[1.311863],[8.644770],[-5.345916],[-9.275436],[-5.565374],[-4.018237],[5.575538],[3.555560],[-0.233649],[2.269956],[6.462493],[-8.724111],[7.138656],[-9.759525],[7.043680],[-5.510276],[-6.505606],[-4.536139],[0.164294],[3.335974],[-8.669049],[8.892387],[-1.484023],[7.492378],[-2.847008],[8.640806],[-0.463845],[8.756542],[5.527387],[6.859263],[1.110975],[1.976580],[-2.447746],[-2.237972],[-1.680963],[9.176139],[-8.768331],[-5.624796],[9.066053],[9.413855],[9.650010],[-4.104720],[3.207997],[4.555066],[9.686111],[3.136411],[-0.760736],[-9.699215],[8.987353],[-0.078239],[-0.002691],[-9.810245],[0.801062],[-2.080391],[0.685253],[-0.117823],[-3.181052],[-7.484550],[-6.910992],[-1.917523],[8.410312],[4.822212],[-6.604865],[-1.066666],[-2.674727],[-0.579705],[-5.772422],[8.751612],[0.284638],[-5.044589],[-1.592271],[5.848400],[0.559792],[-8.850602],[2.944050],[5.445613],[-2.106559],[2.497865],[-3.134127],[-2.181045],[-4.419420],[-3.763317],[-7.701431],[-3.295654],[7.296650],[-1.215353],[-1.301110],[-3.370965],[8.485353],[1.820901],[1.354592],[3.316535],[1.263869],[-2.836861],[-2.877924],[0.142810],[0.880455],[7.209945],[6.020254],[-8.688171],[4.810392],[-5.577887],[-9.632805],[1.231767],[7.663887],[7.966394],[-1.362564],[9.928983],[9.905288],[0.213089],[-3.155295],[-5.525453],[-3.052866],[1.119008],[-3.567596],[-5.887352],[-6.515206],[9.529969],[5.411629],[6.274486],[4.810747],[6.226137],[7.537753],[-2.386207],[5.246312],[2.355718],[-6.097669],[1.685064],[2.522590],[-9.185304],[-3.935218],[7.647044],[-7.275858],[-9.508533],[-9.480905],[-9.421478],[-5.135279],[1.199544],[-6.999046],[-3.001858],[4.959724],[-2.883261],[7.303356],[4.145850],[-5.407114],[-9.312502],[-6.194783],[-4.682527],[-9.896749],[7.526300],[-0.542126],[9.176823],[6.525194],[-5.349584],[-7.588976],[5.968369],[-9.358285]], dtype = "float32")#candidate|4667|(1728, 1)|const|float32
const_4668 = relay.const([8.837568,-0.538434,4.044887,3.881940,4.241918,-0.261969,-2.265079,9.431515,2.697356,-5.155663,-5.845159,-1.041480,4.466746,1.468470,6.123370,8.662495,2.182835,-7.544859,-2.632212,-1.255709,-5.075424,-9.087904,8.903176,-9.921517,9.385362,-4.639121,7.035143,2.962859,-4.204706,8.509173,-5.167428,-2.004024,-9.513890,6.534134,-4.090679,0.765095,-0.059511,-9.055431,0.616926,6.761352,3.712278,-3.409424,-4.924019,2.764275,9.769547,-1.967075,7.981227,2.496048,-7.147149,7.383798,-6.730167,3.211234,-7.080926,-7.423302,-8.581151,-5.919544,6.721093,-1.088390,7.184759,-3.635939,-5.701445,-3.032608,1.023963,6.973007,-8.254989,7.873867,5.485578,-5.673570,-7.479966,6.056540,-1.546093,-3.498491,1.508265,9.029576,3.111069,7.748390,7.104937,1.262937,6.486108,-7.764070,9.812687,-8.761587,-7.019490,0.282041,3.141732,4.833289,-8.400963,0.857654,-8.321100,-2.097851,0.973344,4.932751,-1.683882,2.701092,3.902168,4.298446,3.533122,-7.511943,-5.391767,-3.098125,-2.842215,7.170672,-0.046771,-4.226240,-3.311439,-3.258407,-6.139953,-6.910354,-4.177826,-7.543349,5.248121,2.821097,7.282896,-2.331433,5.210602,0.193484,-6.649625,-4.116768,-0.531010,1.635690,-4.657025,-9.385078,2.163906,1.673309,-6.313044,1.449327,8.663068,2.130468,-6.443100,1.603223,-5.789730,-6.373646,9.894923,4.896743,2.904134,-9.882359,-2.596324,6.645180,1.315362,-6.329341,-8.531755,2.779638,-7.552564,5.385275,-7.803170,-4.287391,5.020284,3.467093,0.294460,-9.051265,0.545482,-8.302189,0.232924,6.164239,-0.899425,5.833704,-1.702745,7.269795,0.685845,2.251501,2.212270,-6.094865,-3.322237,1.864498,5.864165,0.926241,8.550167,-5.493697,3.949233,6.668243,7.820215,-9.293906,-5.393158,-3.437606,-5.726137,2.142692,3.924178,2.992822,-8.603117,-0.413504,-7.203697,-7.241741,7.798083,7.334798,7.938726,5.474082,8.182898,-9.404673,2.965888,4.582370,-6.341819,5.214300,-3.527135,-4.237498,3.808930,-7.415174,-2.894051,3.557449,-7.528932,-7.478447,-0.730194,-4.352504,3.721941,7.858172,-3.566866,5.081517,8.530693,-1.119084,8.903509,-2.580157,8.206654,-2.383085,-7.625533,-8.802821,-4.280363,-1.284711,-6.885461,-5.327151,7.645637,-0.491131,-4.562595,-9.710193,-7.719205,-1.757712,9.265054,-2.423967,0.005643,-1.750348,1.184516,-0.089374,8.891406,-9.066575,-6.334437,-6.434656,-9.061554,3.199751,-3.456874,-4.429497,-2.158250,-4.326313,-7.585994,6.785688,9.930705,5.581116,-3.081408,2.569319,-6.181623,0.605154,-6.399380,-1.587191,-3.278336,-2.732520,2.392924,5.781542,2.237624,-7.051453,-3.711339,8.400336,6.021182,-5.983005,9.685201,-5.672620,6.970257,-8.155835,8.226248,-2.694429,-2.328064,-3.443743,-4.273113,1.481496,1.499920,3.142176,8.484007,3.405203,5.886786,-3.275239,6.935605,-7.684167,-8.805470,0.180418,6.141344,8.355351,-4.643344,2.277497,3.987167,-6.456221,-5.895151,9.682797,-3.447969,5.572798,-0.889557,-7.230953,-0.407795,7.516782,3.334643,-3.403015,-7.791141,-1.497092,1.275283,3.445646,8.683128,3.186068,8.596276,5.676748,0.706979,7.278359,4.878935,-0.751748,-8.681842,-2.952913,-7.523743,-1.804023,3.997345,4.821698,8.468389,2.213655,-3.104241,-9.670841,5.429371,0.254137,-0.930211,4.816972,6.090907,5.816864,1.087995,4.102810,-6.695478,-9.690810,4.524294,-8.487414,9.636905,0.233336,-7.589180,9.043142,5.034063,0.218050,-2.920355,4.840002,-7.540167,7.272929,9.252269,0.783665,4.337211,5.365809,7.576611,1.491361,1.962429,-0.291748,-0.386224,-6.607504,-1.266617,-4.872717,-2.495088,-8.139920,-9.654502,-1.806379,2.035933,-7.579273,9.391025,4.301299,7.862123,8.465561,6.182543,2.993017,-7.327572,8.056678,3.272412,3.304312,-6.065827,-4.004262,4.675473,-9.389026,-1.644744,7.514387,-5.784143,-2.671198,1.984792,-7.881254,1.479419,9.531426,2.181934,-4.991109,-3.100601,-0.399034,-1.593278,4.379430,1.022439,-5.724865,-7.864401,-6.268448,-4.881562,9.523330,-3.371285,-5.116776,1.343664,5.566254,-8.601774,3.521875,1.225754,4.477512,-9.376543,-7.607931,-1.804882,7.570802,-9.181608,9.966723,-5.677679,2.872630,0.664970,-9.933452,3.308677,8.529972,3.179041,-5.229123,1.213847,-4.938293,-4.582297,4.437237,3.249532,-1.602526,-5.677917,-2.511825,-8.134652,-1.459971,9.175900,-3.904603,-2.223874,6.548774,-6.568240,6.129097,9.116030,6.970919,-7.061434,9.652016,5.442446,6.627222,0.613253,-4.599147,9.545016,0.052301,2.644965,2.418223,-0.051569,8.525474,-6.793838,-4.353275,1.986390,-1.386828,-0.017308,9.507963,4.640606,-6.586647,3.113648,-1.949678,5.299566,0.311003,9.913068,-6.307564,7.622569,-4.889797,-2.558042,-8.388031,-9.897735,3.552392,-4.275859,-5.866690,-4.368823,-0.116771,8.647131,-9.710920,8.704545,7.241423,6.128142,-9.380304,2.965657,-1.579647,2.091395,7.462289,2.690907,-6.200374,-2.046790,9.990632,8.501676,-8.286503], dtype = "float32")#candidate|4668|(484,)|const|float32
var_4669 = relay.var("var_4669", dtype = "uint16", shape = (720,))#candidate|4669|(720,)|var|uint16
var_4670 = relay.var("var_4670", dtype = "uint32", shape = (810,))#candidate|4670|(810,)|var|uint32
call_4665 = relay.TupleGetItem(func_3054_call(relay.reshape(const_4666.astype('uint32'), [147, 2]), relay.reshape(const_4667.astype('float32'), [1728,]), relay.reshape(const_4668.astype('float32'), [484,]), relay.reshape(var_4669.astype('uint16'), [720,]), relay.reshape(var_4670.astype('uint32'), [810,]), ), 3)
call_4671 = relay.TupleGetItem(func_3060_call(relay.reshape(const_4666.astype('uint32'), [147, 2]), relay.reshape(const_4667.astype('float32'), [1728,]), relay.reshape(const_4668.astype('float32'), [484,]), relay.reshape(var_4669.astype('uint16'), [720,]), relay.reshape(var_4670.astype('uint32'), [810,]), ), 3)
output = relay.Tuple([call_4661,call_4665,const_4666,const_4667,const_4668,var_4669,var_4670,])
output2 = relay.Tuple([call_4662,call_4671,const_4666,const_4667,const_4668,var_4669,var_4670,])
func_4677 = relay.Function([var_4669,var_4670,], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mutated_mod.get_global_var('func_4677')
var_4679 = relay.var("var_4679", dtype = "uint16", shape = (720,))#candidate|4679|(720,)|var|uint16
var_4680 = relay.var("var_4680", dtype = "uint32", shape = (810,))#candidate|4680|(810,)|var|uint32
call_4678 = func_4677_call(var_4679,var_4680,)
output = call_4678
func_4681 = relay.Function([var_4679,var_4680,], output)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3109_call = mod.get_global_var('func_3109')
func_3111_call = mutated_mod.get_global_var('func_3111')
call_4770 = relay.TupleGetItem(func_3109_call(), 0)
call_4771 = relay.TupleGetItem(func_3111_call(), 0)
output = relay.Tuple([call_4770,])
output2 = relay.Tuple([call_4771,])
func_4773 = relay.Function([], output)
mod['func_4773'] = func_4773
mod = relay.transform.InferType()(mod)
mutated_mod['func_4773'] = func_4773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4773_call = mutated_mod.get_global_var('func_4773')
call_4774 = func_4773_call()
output = call_4774
func_4775 = relay.Function([], output)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_4776 = relay.TupleGetItem(func_3074_call(), 0)
call_4777 = relay.TupleGetItem(func_3076_call(), 0)
uop_4804 = relay.atanh(call_4776.astype('float32')) # shape=(8, 11, 5)
uop_4806 = relay.atanh(call_4777.astype('float32')) # shape=(8, 11, 5)
func_4601_call = mod.get_global_var('func_4601')
func_4603_call = mutated_mod.get_global_var('func_4603')
call_4809 = func_4601_call()
call_4810 = func_4601_call()
func_587_call = mod.get_global_var('func_587')
func_590_call = mutated_mod.get_global_var('func_590')
const_4816 = relay.const([[-9],[-2],[10],[-10],[8],[-8],[-10],[-1],[9],[3],[5],[-1],[8],[-6],[7],[6],[6],[8]], dtype = "int16")#candidate|4816|(18, 1)|const|int16
call_4815 = relay.TupleGetItem(func_587_call(relay.reshape(const_4816.astype('int16'), [2, 3, 3]), relay.reshape(const_4816.astype('int16'), [2, 3, 3]), ), 0)
call_4817 = relay.TupleGetItem(func_590_call(relay.reshape(const_4816.astype('int16'), [2, 3, 3]), relay.reshape(const_4816.astype('int16'), [2, 3, 3]), ), 0)
output = relay.Tuple([uop_4804,call_4809,call_4815,const_4816,])
output2 = relay.Tuple([uop_4806,call_4810,call_4817,const_4816,])
func_4829 = relay.Function([], output)
mod['func_4829'] = func_4829
mod = relay.transform.InferType()(mod)
output = func_4829()
func_4830 = relay.Function([], output)
mutated_mod['func_4830'] = func_4830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_4882 = relay.TupleGetItem(func_3172_call(), 0)
call_4883 = relay.TupleGetItem(func_3174_call(), 0)
output = relay.Tuple([call_4882,])
output2 = relay.Tuple([call_4883,])
func_4893 = relay.Function([], output)
mod['func_4893'] = func_4893
mod = relay.transform.InferType()(mod)
mutated_mod['func_4893'] = func_4893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mutated_mod.get_global_var('func_4893')
call_4894 = func_4893_call()
output = call_4894
func_4895 = relay.Function([], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4274_call = mod.get_global_var('func_4274')
func_4276_call = mutated_mod.get_global_var('func_4276')
call_4927 = func_4274_call()
call_4928 = func_4274_call()
uop_4931 = relay.cos(call_4927.astype('float32')) # shape=(8, 11, 5)
uop_4933 = relay.cos(call_4928.astype('float32')) # shape=(8, 11, 5)
output = uop_4931
output2 = uop_4933
func_4945 = relay.Function([], output)
mod['func_4945'] = func_4945
mod = relay.transform.InferType()(mod)
output = func_4945()
func_4946 = relay.Function([], output)
mutated_mod['func_4946'] = func_4946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4964 = relay.var("var_4964", dtype = "uint16", shape = (14, 4, 6))#candidate|4964|(14, 4, 6)|var|uint16
var_4965 = relay.var("var_4965", dtype = "uint16", shape = (14, 4, 6))#candidate|4965|(14, 4, 6)|var|uint16
bop_4966 = relay.less_equal(var_4964.astype('bool'), relay.reshape(var_4965.astype('bool'), relay.shape_of(var_4964))) # shape=(14, 4, 6)
func_4152_call = mod.get_global_var('func_4152')
func_4154_call = mutated_mod.get_global_var('func_4154')
var_4983 = relay.var("var_4983", dtype = "float64", shape = (3, 18))#candidate|4983|(3, 18)|var|float64
call_4982 = relay.TupleGetItem(func_4152_call(relay.reshape(var_4983.astype('float64'), [9, 3, 2])), 2)
call_4984 = relay.TupleGetItem(func_4154_call(relay.reshape(var_4983.astype('float64'), [9, 3, 2])), 2)
output = relay.Tuple([bop_4966,call_4982,var_4983,])
output2 = relay.Tuple([bop_4966,call_4984,var_4983,])
func_4986 = relay.Function([var_4964,var_4965,var_4983,], output)
mod['func_4986'] = func_4986
mod = relay.transform.InferType()(mod)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4986_call = mutated_mod.get_global_var('func_4986')
var_4988 = relay.var("var_4988", dtype = "uint16", shape = (14, 4, 6))#candidate|4988|(14, 4, 6)|var|uint16
var_4989 = relay.var("var_4989", dtype = "uint16", shape = (14, 4, 6))#candidate|4989|(14, 4, 6)|var|uint16
var_4990 = relay.var("var_4990", dtype = "float64", shape = (3, 18))#candidate|4990|(3, 18)|var|float64
call_4987 = func_4986_call(var_4988,var_4989,var_4990,)
output = call_4987
func_4991 = relay.Function([var_4988,var_4989,var_4990,], output)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5050 = relay.var("var_5050", dtype = "float64", shape = (3, 1, 7))#candidate|5050|(3, 1, 7)|var|float64
var_5051 = relay.var("var_5051", dtype = "float64", shape = (3, 6, 7))#candidate|5051|(3, 6, 7)|var|float64
bop_5052 = relay.floor_mod(var_5050.astype('float64'), var_5051.astype('float64')) # shape=(3, 6, 7)
uop_5055 = relay.atanh(var_5051.astype('float64')) # shape=(3, 6, 7)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_5057 = relay.TupleGetItem(func_2271_call(), 1)
call_5058 = relay.TupleGetItem(func_2272_call(), 1)
output = relay.Tuple([bop_5052,uop_5055,call_5057,])
output2 = relay.Tuple([bop_5052,uop_5055,call_5058,])
func_5062 = relay.Function([var_5050,var_5051,], output)
mod['func_5062'] = func_5062
mod = relay.transform.InferType()(mod)
var_5063 = relay.var("var_5063", dtype = "float64", shape = (3, 1, 7))#candidate|5063|(3, 1, 7)|var|float64
var_5064 = relay.var("var_5064", dtype = "float64", shape = (3, 6, 7))#candidate|5064|(3, 6, 7)|var|float64
output = func_5062(var_5063,var_5064,)
func_5065 = relay.Function([var_5063,var_5064,], output)
mutated_mod['func_5065'] = func_5065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3497_call = mod.get_global_var('func_3497')
func_3498_call = mutated_mod.get_global_var('func_3498')
call_5156 = relay.TupleGetItem(func_3497_call(), 1)
call_5157 = relay.TupleGetItem(func_3498_call(), 1)
output = relay.Tuple([call_5156,])
output2 = relay.Tuple([call_5157,])
func_5162 = relay.Function([], output)
mod['func_5162'] = func_5162
mod = relay.transform.InferType()(mod)
output = func_5162()
func_5163 = relay.Function([], output)
mutated_mod['func_5163'] = func_5163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4773_call = mod.get_global_var('func_4773')
func_4775_call = mutated_mod.get_global_var('func_4775')
call_5202 = relay.TupleGetItem(func_4773_call(), 0)
call_5203 = relay.TupleGetItem(func_4775_call(), 0)
output = relay.Tuple([call_5202,])
output2 = relay.Tuple([call_5203,])
func_5207 = relay.Function([], output)
mod['func_5207'] = func_5207
mod = relay.transform.InferType()(mod)
mutated_mod['func_5207'] = func_5207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5207_call = mutated_mod.get_global_var('func_5207')
call_5208 = func_5207_call()
output = call_5208
func_5209 = relay.Function([], output)
mutated_mod['func_5209'] = func_5209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5292 = relay.var("var_5292", dtype = "float64", shape = (5, 2, 12))#candidate|5292|(5, 2, 12)|var|float64
uop_5293 = relay.atanh(var_5292.astype('float64')) # shape=(5, 2, 12)
func_2668_call = mod.get_global_var('func_2668')
func_2670_call = mutated_mod.get_global_var('func_2670')
var_5315 = relay.var("var_5315", dtype = "int32", shape = (1440,))#candidate|5315|(1440,)|var|int32
call_5314 = func_2668_call(relay.reshape(var_5315.astype('int32'), [16, 9, 10]))
call_5316 = func_2668_call(relay.reshape(var_5315.astype('int32'), [16, 9, 10]))
func_1703_call = mod.get_global_var('func_1703')
func_1706_call = mutated_mod.get_global_var('func_1706')
var_5321 = relay.var("var_5321", dtype = "float64", shape = (440,))#candidate|5321|(440,)|var|float64
call_5320 = relay.TupleGetItem(func_1703_call(relay.reshape(var_5321.astype('float64'), [8, 11, 5])), 0)
call_5322 = relay.TupleGetItem(func_1706_call(relay.reshape(var_5321.astype('float64'), [8, 11, 5])), 0)
func_2840_call = mod.get_global_var('func_2840')
func_2841_call = mutated_mod.get_global_var('func_2841')
call_5328 = func_2840_call()
call_5329 = func_2840_call()
output = relay.Tuple([uop_5293,call_5314,var_5315,call_5320,var_5321,call_5328,])
output2 = relay.Tuple([uop_5293,call_5316,var_5315,call_5322,var_5321,call_5329,])
func_5330 = relay.Function([var_5292,var_5315,var_5321,], output)
mod['func_5330'] = func_5330
mod = relay.transform.InferType()(mod)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5330_call = mutated_mod.get_global_var('func_5330')
var_5332 = relay.var("var_5332", dtype = "float64", shape = (5, 2, 12))#candidate|5332|(5, 2, 12)|var|float64
var_5333 = relay.var("var_5333", dtype = "int32", shape = (1440,))#candidate|5333|(1440,)|var|int32
var_5334 = relay.var("var_5334", dtype = "float64", shape = (440,))#candidate|5334|(440,)|var|float64
call_5331 = func_5330_call(var_5332,var_5333,var_5334,)
output = call_5331
func_5335 = relay.Function([var_5332,var_5333,var_5334,], output)
mutated_mod['func_5335'] = func_5335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3497_call = mod.get_global_var('func_3497')
func_3498_call = mutated_mod.get_global_var('func_3498')
call_5337 = relay.TupleGetItem(func_3497_call(), 0)
call_5338 = relay.TupleGetItem(func_3498_call(), 0)
output = relay.Tuple([call_5337,])
output2 = relay.Tuple([call_5338,])
func_5341 = relay.Function([], output)
mod['func_5341'] = func_5341
mod = relay.transform.InferType()(mod)
mutated_mod['func_5341'] = func_5341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5341_call = mutated_mod.get_global_var('func_5341')
call_5342 = func_5341_call()
output = call_5342
func_5343 = relay.Function([], output)
mutated_mod['func_5343'] = func_5343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mod.get_global_var('func_4893')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_5360 = relay.TupleGetItem(func_4893_call(), 0)
call_5361 = relay.TupleGetItem(func_4895_call(), 0)
output = call_5360
output2 = call_5361
func_5387 = relay.Function([], output)
mod['func_5387'] = func_5387
mod = relay.transform.InferType()(mod)
mutated_mod['func_5387'] = func_5387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5387_call = mutated_mod.get_global_var('func_5387')
call_5388 = func_5387_call()
output = call_5388
func_5389 = relay.Function([], output)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4537_call = mod.get_global_var('func_4537')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_5424 = relay.TupleGetItem(func_4537_call(), 1)
call_5425 = relay.TupleGetItem(func_4539_call(), 1)
output = call_5424
output2 = call_5425
func_5452 = relay.Function([], output)
mod['func_5452'] = func_5452
mod = relay.transform.InferType()(mod)
output = func_5452()
func_5453 = relay.Function([], output)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_5490 = relay.TupleGetItem(func_4194_call(), 0)
call_5491 = relay.TupleGetItem(func_4196_call(), 0)
func_4070_call = mod.get_global_var('func_4070')
func_4073_call = mutated_mod.get_global_var('func_4073')
const_5537 = relay.const([7.091860,-1.949857,-7.605163,3.489486,-4.083435,-2.369423,-2.215586,4.411786,-0.967881,-0.419701,-1.227160,-1.384160,2.410707,-2.660127,6.281380,-9.468273,2.553187,-4.500630,6.539442,-0.245561,7.136298,4.866870,9.038918,4.824727,5.391566,-7.037222,-7.920686,8.404717,-6.402553,-1.028933,-0.719578,-0.018340,9.209492,7.056867,-1.662212,-0.869933,7.631326,4.585546,7.015786,-4.113353,7.398372,-5.159574,0.247918,8.320366,1.753961,9.253570,-0.304771,2.145672,-6.567672,-8.684822,-6.422177,-8.672555,-1.370400,-8.659390,-0.519902,-4.557061,4.953512,-3.064072,-1.992561,-3.672861,1.304945,2.176629,-3.780740,-8.249765,-8.740740,5.717384,1.037697,-1.245877,-9.814872,0.139535,8.581341,-8.934236,-1.302428,5.148190,-2.739205,-4.181656,4.163357,3.530808,-2.838435,-8.789644,-0.836375,0.675009,0.253130,4.046996,-8.615393,-7.314424,-3.999880,-7.754032,1.145024,6.907512,-5.117419,-8.969482,-7.495514,4.378360,6.628889,3.568167,3.100538,1.760643,-6.316703,-3.356967,-9.634789,-5.628764,0.981474,7.779000,-0.219060,-9.083712,1.918638,-9.305657,-4.889875,-3.503679,6.601610,0.142281,1.594564,0.371756,9.810793,-8.683000,-9.927189,-4.016917,-8.765099,4.396589,1.982412,6.496063,-5.126354,-7.736586,0.044735,-7.420725,-1.374354,0.256939,-2.463560,7.514446,2.580729,5.502489,-8.089276,4.724300,-6.179648,5.756163,5.411814,-1.076704,-2.836812,-5.637133,7.948598,-9.179380,9.855459,6.647797,-3.819562,7.368059,5.715696,7.006354,2.881605,-7.989344,4.368418,2.129869,-4.769154,-5.450204,-3.033810,-8.893069,2.767420,4.995854,-7.625573,3.101390,6.063929,-2.439097,2.457296,-8.623749,7.415305,-1.807778,-9.501721,4.179456,2.034469,0.947166,-4.979132,-4.931056,-7.137964,-1.048697,-3.563349,9.236511,1.451557,-0.349638,8.998034,7.570051,2.877169,-2.556443,0.993132,-2.929743,5.506846,-0.007380,8.786536,-6.817571,-6.283934,8.526080,-9.718872,-6.617331,-1.121670,-6.432522,4.735090,-3.776302,-1.953400,-2.678691,-2.538186,-0.770414,-6.098914,-0.389206,8.199219,9.722484,4.822823,9.015297,8.362827,1.737851,-8.843177,4.754071,3.652169,0.830354,-9.359021,6.686355,-9.384750,7.283362,-8.498526,5.031856,-6.629416,2.381087,5.842175,9.286064,-9.202721,-6.068153,-1.150702,-7.134625,-2.612246,4.407035,5.196238,9.091097,8.964608,-4.120261,-1.631765,3.839455,-1.161323,8.156757,8.032446,-0.258355,1.131164,9.971382,3.266914,-6.013097,3.478816,-1.391164,-8.933508,-4.099312,-6.644726,-1.879116,-6.575809,1.245101,-9.469202,-5.061126,8.293289,-8.573189,-9.708071,3.164923,2.776216,3.451950,8.310613,-3.003618,1.616235,4.877921,2.556917,2.725974,-3.093212,2.548674,6.933905,-5.568953,-9.801766,8.398465,-6.926536,-6.137415,-6.042214,-4.690860,-8.428853,-3.481334,-4.045445,8.628448,7.227144,3.861541,-9.078881,-9.922144,9.240422,-0.471262,6.405287,-2.260707,-1.917685,-7.413587,-8.492809,1.850528,9.704280,-8.180639,5.771869,3.514294,-8.166890,-4.595825,0.827792,-4.471835,-6.821819,0.368120,7.501996,8.994119,-1.971612,-2.616435,3.047465,1.995818,6.036182,-3.570126,-4.723431,6.681964,-6.845413,0.445703,9.956924,-8.125370,-9.333111,7.624591,2.777423,-8.223315,-2.735779,-8.416299,-7.001636,-6.087608,-6.761278,-7.113027,5.976404,0.690930,-7.506517,5.317736,5.385341,5.243525,0.763000,6.769533,5.449852,8.825854,-8.328092,2.334445,2.658507,0.480957,-8.379916,-7.679400,4.719856,-5.153421,-1.241761,3.493685,1.480698,-0.401672,-2.508880,-5.805119,8.381349,6.796946,7.435042,-2.224700,2.076740,-3.890068,8.050142,9.886353,7.812649,-1.888277,9.991682,0.609913,-8.633103,-1.546027,6.746367,2.873039,-3.728978,-8.697795,1.417752,-3.911750,-2.628612,9.654651,-3.953639,3.521244,-8.776991,1.454952,7.275103,-3.733215,-7.781150,-2.385074,5.679691,-2.602982,4.033541,-2.996411,9.603754,6.901215,2.871800,-8.066211,8.162011,5.673555,0.042983,4.513067,2.556602,6.403269,-8.134259,2.132130,7.217433,1.970674,3.371415,7.188641,6.602745,-8.427434,3.431796,-7.754024,-6.646284,-5.106990,-6.874340,3.884184,-0.212058,-7.451356,-4.825787,-7.409587,7.995384,-7.531705,6.368372,-9.835606,-6.181543,-6.146213,0.862113,-2.457336,-1.881822,9.667422,7.531707,4.561016,2.893903,-8.488890,3.217783,5.839519,3.491769,5.300461,-2.262707,1.568156,8.356089,-1.831230,-0.097076,-1.890716,-5.910378,6.395203,-7.870291,9.182091,-5.651841,-0.477052,-2.174328,4.622599,9.507851,5.562792,-0.265405,5.819732,-3.538692,-6.691236,-6.185437,7.978167,-5.822294,-7.227526,9.286204,9.466103,-5.422260,-8.043861,9.863489,-1.924388,-9.570942,-4.440761,-2.378600,-4.632222,-4.874066,9.893405,-9.686426,0.935317,7.654085,1.831086,0.850149,4.631993,-9.701142,-2.234393,1.560534,1.216190,-7.155075,-3.177699,2.246323,5.593999,3.124914,-1.458145,-9.834330,-2.074991,-5.854893,-5.350723,-2.013070,7.598821,0.425126,5.238695,-4.327642,2.494422,-5.838977,0.527017,-6.480559,8.280140,4.889753,8.421107,7.692958,2.085018,-8.071853,2.894332,7.753535,0.164447,6.416844,1.898716,4.535194,-0.179694,-4.031590,3.285214,0.974301,-5.395476,0.408707,-5.887074,-5.497683,-0.977776,3.727771,6.953147,-4.347830,-1.338213,2.877960,1.746311,-6.959653,7.707738,6.654294,9.618737,6.000840,9.524343,-1.258608,-2.268856,1.304685,8.462686,-7.267026,-3.089453,7.891068,-5.856790,-0.146613,-6.244733,-1.707839,-1.452505,-1.968675,-0.269094,2.150420,-6.661788,9.112946,-6.115378,7.627720,7.452162,2.297147,-1.858839,-8.592603,1.986807,-1.572932,3.408296,2.719990,-1.213095,-1.209985,-0.302820,-1.472592,0.913703,2.225284,7.362494,0.692203,-7.619745,-3.188185,2.942070,-5.761906,7.632035,-3.028601,8.747068,-4.484970,-4.767673,-9.067531,2.937200,9.174932,-3.309396,-5.956790,-6.368839,-1.764818,-1.853522,9.535553,-1.163620,7.166680,1.384343,-8.873908,4.957335,-3.578516,8.884411,-7.453960,-9.536131,1.598199,-4.440611,-0.699666,7.521707,-6.022336,9.228262,-9.918129,7.687002,9.574789,6.039920,0.799156,3.173654,-0.143557,-8.484537,5.622583,8.869814,2.593605,-2.809350,-9.113385,-4.494188,-7.102205,-1.735861,5.495758,-3.912082,-0.700764,4.778579,-0.768880,-8.525325,5.790505,-8.075628,0.966155,-4.734769,7.603448,-8.095231,-1.791662,-1.992971,-8.730529,6.142284,-2.749469,-3.664307,-3.783017,-8.952619,-7.498305,6.524142,7.930259,-4.668963,9.073535,4.165737,-4.039392,-2.492856,7.128761,5.607440,-6.483244,4.164827,-3.168364,0.690273,5.298069,2.558147,-5.113772,-1.345847,-6.017595,-7.291988,2.904421,2.472481,3.233514,-8.497668,-1.948119,-8.069602,1.363951,-1.255162,-5.689891,-5.187550,8.474888,9.044574,-6.015233,-4.940947,0.318746,2.213501,-4.436987,-6.940132,-2.089707,-3.399398,-0.697200,7.004818,7.543796,8.805172,-2.029859,3.674090,6.303067,5.803850,-8.206243,6.185475,5.942570,-1.900603,4.073101,5.672514,-5.958485,-0.399603,4.132789,-1.252442,7.560477,-1.412481,6.708156,-7.509196,-9.337400,-9.243285,4.140562,-5.259262,-4.149232,-4.540019,1.226798,-6.127943,-1.278722,-1.661989,-6.285267,-1.467073,-3.155945,8.908618,-1.494872,3.636449,-9.123380,-9.993632,6.369547,-2.776507,9.688132,9.189613,-9.645419,-7.081802,-6.605701,-0.867067,4.151623,6.990633,1.824935,5.271681,-0.368947,9.377901,0.013976,-2.906793], dtype = "float32")#candidate|5537|(726,)|const|float32
call_5536 = func_4070_call(relay.reshape(const_5537.astype('float32'), [11, 11, 6]))
call_5538 = func_4070_call(relay.reshape(const_5537.astype('float32'), [11, 11, 6]))
var_5549 = relay.var("var_5549", dtype = "float64", shape = (110, 4))#candidate|5549|(110, 4)|var|float64
bop_5550 = relay.subtract(call_5490.astype('float64'), relay.reshape(var_5549.astype('float64'), relay.shape_of(call_5490))) # shape=(110, 4)
bop_5553 = relay.subtract(call_5491.astype('float64'), relay.reshape(var_5549.astype('float64'), relay.shape_of(call_5491))) # shape=(110, 4)
uop_5554 = relay.asinh(var_5549.astype('float64')) # shape=(110, 4)
output = relay.Tuple([call_5536,const_5537,bop_5550,uop_5554,])
output2 = relay.Tuple([call_5538,const_5537,bop_5553,uop_5554,])
func_5556 = relay.Function([var_5549,], output)
mod['func_5556'] = func_5556
mod = relay.transform.InferType()(mod)
var_5557 = relay.var("var_5557", dtype = "float64", shape = (110, 4))#candidate|5557|(110, 4)|var|float64
output = func_5556(var_5557)
func_5558 = relay.Function([var_5557], output)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5162_call = mod.get_global_var('func_5162')
func_5163_call = mutated_mod.get_global_var('func_5163')
call_5591 = relay.TupleGetItem(func_5162_call(), 0)
call_5592 = relay.TupleGetItem(func_5163_call(), 0)
output = relay.Tuple([call_5591,])
output2 = relay.Tuple([call_5592,])
func_5597 = relay.Function([], output)
mod['func_5597'] = func_5597
mod = relay.transform.InferType()(mod)
mutated_mod['func_5597'] = func_5597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5597_call = mutated_mod.get_global_var('func_5597')
call_5598 = func_5597_call()
output = call_5598
func_5599 = relay.Function([], output)
mutated_mod['func_5599'] = func_5599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4431_call = mutated_mod.get_global_var('func_4431')
call_5614 = relay.TupleGetItem(func_4430_call(), 1)
call_5615 = relay.TupleGetItem(func_4431_call(), 1)
uop_5616 = relay.log10(call_5614.astype('float32')) # shape=(1080, 2)
uop_5618 = relay.log10(call_5615.astype('float32')) # shape=(1080, 2)
bop_5622 = relay.mod(call_5614.astype('float32'), relay.reshape(uop_5616.astype('float32'), relay.shape_of(call_5614))) # shape=(1080, 2)
bop_5625 = relay.mod(call_5615.astype('float32'), relay.reshape(uop_5618.astype('float32'), relay.shape_of(call_5615))) # shape=(1080, 2)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_5631 = relay.TupleGetItem(func_3172_call(), 3)
call_5632 = relay.TupleGetItem(func_3174_call(), 3)
output = relay.Tuple([bop_5622,call_5631,])
output2 = relay.Tuple([bop_5625,call_5632,])
func_5636 = relay.Function([], output)
mod['func_5636'] = func_5636
mod = relay.transform.InferType()(mod)
mutated_mod['func_5636'] = func_5636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5636_call = mutated_mod.get_global_var('func_5636')
call_5637 = func_5636_call()
output = call_5637
func_5638 = relay.Function([], output)
mutated_mod['func_5638'] = func_5638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5723 = relay.var("var_5723", dtype = "uint64", shape = ())#candidate|5723|()|var|uint64
var_5724 = relay.var("var_5724", dtype = "uint64", shape = (4, 2, 16))#candidate|5724|(4, 2, 16)|var|uint64
bop_5725 = relay.bitwise_and(var_5723.astype('uint64'), var_5724.astype('uint64')) # shape=(4, 2, 16)
func_5452_call = mod.get_global_var('func_5452')
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5736 = func_5452_call()
call_5737 = func_5452_call()
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_5738 = relay.TupleGetItem(func_3766_call(), 2)
call_5739 = relay.TupleGetItem(func_3768_call(), 2)
var_5740 = relay.var("var_5740", dtype = "float32", shape = (9, 10, 3))#candidate|5740|(9, 10, 3)|var|float32
bop_5741 = relay.less(call_5736.astype('bool'), relay.reshape(var_5740.astype('bool'), relay.shape_of(call_5736))) # shape=(9, 10, 3)
bop_5744 = relay.less(call_5737.astype('bool'), relay.reshape(var_5740.astype('bool'), relay.shape_of(call_5737))) # shape=(9, 10, 3)
func_3467_call = mod.get_global_var('func_3467')
func_3468_call = mutated_mod.get_global_var('func_3468')
call_5747 = relay.TupleGetItem(func_3467_call(), 0)
call_5748 = relay.TupleGetItem(func_3468_call(), 0)
output = relay.Tuple([bop_5725,call_5738,bop_5741,call_5747,])
output2 = relay.Tuple([bop_5725,call_5739,bop_5744,call_5748,])
func_5757 = relay.Function([var_5723,var_5724,var_5740,], output)
mod['func_5757'] = func_5757
mod = relay.transform.InferType()(mod)
mutated_mod['func_5757'] = func_5757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5757_call = mutated_mod.get_global_var('func_5757')
var_5759 = relay.var("var_5759", dtype = "uint64", shape = ())#candidate|5759|()|var|uint64
var_5760 = relay.var("var_5760", dtype = "uint64", shape = (4, 2, 16))#candidate|5760|(4, 2, 16)|var|uint64
var_5761 = relay.var("var_5761", dtype = "float32", shape = (9, 10, 3))#candidate|5761|(9, 10, 3)|var|float32
call_5758 = func_5757_call(var_5759,var_5760,var_5761,)
output = call_5758
func_5762 = relay.Function([var_5759,var_5760,var_5761,], output)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mod.get_global_var('func_4829')
func_4830_call = mutated_mod.get_global_var('func_4830')
call_5810 = relay.TupleGetItem(func_4829_call(), 3)
call_5811 = relay.TupleGetItem(func_4830_call(), 3)
output = call_5810
output2 = call_5811
func_5813 = relay.Function([], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5813_call = mutated_mod.get_global_var('func_5813')
call_5814 = func_5813_call()
output = call_5814
func_5815 = relay.Function([], output)
mutated_mod['func_5815'] = func_5815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4431_call = mutated_mod.get_global_var('func_4431')
call_5949 = relay.TupleGetItem(func_4430_call(), 1)
call_5950 = relay.TupleGetItem(func_4431_call(), 1)
output = call_5949
output2 = call_5950
func_5972 = relay.Function([], output)
mod['func_5972'] = func_5972
mod = relay.transform.InferType()(mod)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5972_call = mutated_mod.get_global_var('func_5972')
call_5973 = func_5972_call()
output = call_5973
func_5974 = relay.Function([], output)
mutated_mod['func_5974'] = func_5974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5597_call = mod.get_global_var('func_5597')
func_5599_call = mutated_mod.get_global_var('func_5599')
call_5977 = relay.TupleGetItem(func_5597_call(), 0)
call_5978 = relay.TupleGetItem(func_5599_call(), 0)
output = call_5977
output2 = call_5978
func_5989 = relay.Function([], output)
mod['func_5989'] = func_5989
mod = relay.transform.InferType()(mod)
output = func_5989()
func_5990 = relay.Function([], output)
mutated_mod['func_5990'] = func_5990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4431_call = mutated_mod.get_global_var('func_4431')
call_5995 = relay.TupleGetItem(func_4430_call(), 0)
call_5996 = relay.TupleGetItem(func_4431_call(), 0)
uop_5999 = relay.rsqrt(call_5995.astype('float32')) # shape=(7, 11, 11)
uop_6001 = relay.rsqrt(call_5996.astype('float32')) # shape=(7, 11, 11)
func_4601_call = mod.get_global_var('func_4601')
func_4603_call = mutated_mod.get_global_var('func_4603')
call_6006 = func_4601_call()
call_6007 = func_4601_call()
uop_6008 = relay.asin(uop_5999.astype('float64')) # shape=(7, 11, 11)
uop_6010 = relay.asin(uop_6001.astype('float64')) # shape=(7, 11, 11)
func_4986_call = mod.get_global_var('func_4986')
func_4991_call = mutated_mod.get_global_var('func_4991')
const_6013 = relay.const([5,-8,-3,-3,-2,-6,9,-9,-1,-6,-3,-3,-2,6,-10,-10,4,-7,-3,-7,7,-2,-9,5,-1,6,9,-3,-4,5,-8,8,2,-9,8,-2,1,3,6,2,10,-9,9,-10,-1,-4,-9,-10,-10,8,7,4,3,-10,5,6,1,-2,9,1,6,-10,-8,10,1,5,-7,10,4,10,-1,5,-4,-2,1,-3,-7,-4,5,-2,-1,6,5,1,-5,1,9,-10,4,-6,-3,2,3,-6,9,7,-8,9,1,5,10,2,1,-2,3,-10,8,8,-9,4,-6,-9,3,8,-9,-10,8,-10,-5,5,-10,-6,-8,-4,3,-4,-8,-5,-4,-7,-5,-2,10,-5,-4,-4,-5,7,-7,10,-8,10,1,8,-8,6,1,-8,2,5,6,-2,-10,-4,-1,-6,1,6,-1,7,9,-3,-3,-3,-6,3,-10,3,-4,-8,3,4,1,-8,-4,10,-8,8,-5,6,-1,-3,4,2,5,4,3,-4,10,5,-4,-9,-9,4,8,-7,-1,-2,6,-4,2,-1,-10,9,6,5,-2,-2,3,-7,8,-2,4,-5,-7,-3,8,6,-8,9,-3,-4,1,6,-6,5,-6,-4,-2,-3,7,-10,10,7,2,-4,10,-10,5,-5,10,4,8,6,-6,-8,5,-10,-5,6,2,-4,7,-3,9,-3,9,-5,-5,8,-2,-6,6,3,-2,-1,-9,9,7,8,2,-7,7,2,4,5,8,-2,-7,8,-6,-6,-1,2,-8,6,-10,-3,-6,2,4,-6,9,9,-3,-7,-3,5,-7,2,7,-5,4,3,2,-9,-3,1,3,9,-6,-8,-1,-4,9,-4,-5,-3,-9,-8,4,-9,4,-8,-1,-4,5,-7,4,5,-7,-10,-9,3,1,-9], dtype = "uint16")#candidate|6013|(336,)|const|uint16
const_6014 = relay.const([-9.824925,-7.761525,-7.541748,-9.395720,-6.847576,-4.398724,3.720928,-5.483495,-6.780965,-3.266407,-2.110057,8.778427,7.271202,-9.802680,6.026862,2.167651,3.392144,-8.628141,-1.662071,-1.075276,6.665692,-6.234590,-3.645546,8.416331,-3.550249,-4.835567,3.307709,-6.362469,-8.214938,-7.451039,-3.100011,-9.562914,1.311843,-2.085558,8.033351,-2.128904,6.186668,4.167644,8.143355,-7.672375,-9.311860,5.016187,3.212002,3.734325,-3.336888,1.979246,9.305926,-7.643921,2.736935,3.247359,7.246430,1.367561,-9.685841,3.493524], dtype = "float64")#candidate|6014|(54,)|const|float64
call_6012 = relay.TupleGetItem(func_4986_call(relay.reshape(const_6013.astype('uint16'), [14, 4, 6]), relay.reshape(const_6013.astype('uint16'), [14, 4, 6]), relay.reshape(const_6014.astype('float64'), [3, 18]), ), 0)
call_6015 = relay.TupleGetItem(func_4991_call(relay.reshape(const_6013.astype('uint16'), [14, 4, 6]), relay.reshape(const_6013.astype('uint16'), [14, 4, 6]), relay.reshape(const_6014.astype('float64'), [3, 18]), ), 0)
var_6021 = relay.var("var_6021", dtype = "float32", shape = (7, 11, 11))#candidate|6021|(7, 11, 11)|var|float32
bop_6022 = relay.logical_xor(uop_5999.astype('int32'), relay.reshape(var_6021.astype('int32'), relay.shape_of(uop_5999))) # shape=(7, 11, 11)
bop_6025 = relay.logical_xor(uop_6001.astype('int32'), relay.reshape(var_6021.astype('int32'), relay.shape_of(uop_6001))) # shape=(7, 11, 11)
output = relay.Tuple([call_6006,uop_6008,call_6012,const_6013,const_6014,bop_6022,])
output2 = relay.Tuple([call_6007,uop_6010,call_6015,const_6013,const_6014,bop_6025,])
func_6037 = relay.Function([var_6021,], output)
mod['func_6037'] = func_6037
mod = relay.transform.InferType()(mod)
mutated_mod['func_6037'] = func_6037
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6038 = relay.var("var_6038", dtype = "float32", shape = (7, 11, 11))#candidate|6038|(7, 11, 11)|var|float32
func_6037_call = mutated_mod.get_global_var('func_6037')
call_6039 = func_6037_call(var_6038)
output = call_6039
func_6040 = relay.Function([var_6038], output)
mutated_mod['func_6040'] = func_6040
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6090 = relay.var("var_6090", dtype = "int64", shape = (15, 14, 2))#candidate|6090|(15, 14, 2)|var|int64
const_6091 = relay.const([[[-1,3],[1,-8],[6,6],[5,-2],[5,-2],[-7,6],[-8,9],[-3,4],[-7,7],[-8,8],[-3,4],[10,-4],[1,-3],[3,-8]],[[10,-1],[-10,6],[3,-7],[6,-4],[4,6],[-3,-6],[-6,-3],[-10,2],[-10,-10],[-9,10],[-10,4],[4,5],[-6,-1],[-1,3]],[[6,6],[1,-6],[2,-3],[-4,6],[4,10],[-10,8],[-7,-4],[4,4],[7,7],[-10,1],[9,-7],[-1,-7],[-5,-2],[3,10]],[[9,-6],[5,-4],[-2,10],[-2,-5],[7,5],[7,10],[8,-6],[2,-9],[-1,-3],[-7,-7],[-5,-2],[-10,-9],[-1,2],[4,-9]],[[-5,-5],[10,-7],[1,7],[6,6],[3,-10],[6,-7],[-4,6],[-2,-4],[1,-4],[-3,4],[-3,-9],[-5,2],[-4,-10],[-6,7]],[[7,-9],[8,5],[-3,2],[10,-8],[-5,3],[4,7],[-10,8],[3,5],[9,-8],[-9,8],[-4,8],[4,-8],[-2,8],[-6,6]],[[1,1],[9,5],[-4,-5],[-8,5],[-3,7],[-8,8],[-5,8],[3,-7],[-7,-8],[8,4],[-8,5],[4,-7],[2,6],[-10,9]],[[-1,7],[10,8],[-4,-6],[2,4],[-1,-6],[-8,1],[9,-7],[-10,-4],[-5,4],[-5,-5],[-3,-3],[10,-4],[6,-3],[-5,4]],[[2,2],[-10,-4],[7,10],[-2,-3],[5,9],[3,8],[3,6],[8,1],[3,-1],[-10,-6],[2,-9],[3,9],[-5,-5],[2,-10]],[[5,-5],[7,-4],[-9,-1],[-1,-4],[-5,9],[-2,-5],[-9,-9],[-6,-9],[6,5],[-8,-2],[-3,4],[2,-8],[10,4],[-8,-2]],[[9,-9],[10,-5],[10,10],[8,-6],[6,6],[-9,-4],[2,4],[-7,8],[-8,3],[4,6],[10,5],[1,1],[-3,-7],[3,-3]],[[9,6],[4,4],[-2,-3],[4,10],[7,-4],[-7,6],[-3,-2],[4,5],[5,-1],[-7,2],[-1,6],[4,9],[-1,2],[7,-10]],[[2,-1],[9,2],[-7,-2],[10,-4],[9,-4],[5,-6],[6,8],[5,6],[-10,-4],[2,3],[-10,6],[9,1],[-1,10],[-8,-6]],[[-4,10],[2,7],[-4,1],[8,5],[-6,-10],[-2,-2],[-5,1],[-1,-10],[9,2],[-7,-5],[1,-6],[9,9],[-4,-2],[-1,9]],[[9,1],[-7,2],[-2,-9],[-5,-1],[10,7],[9,-5],[-6,-9],[-3,3],[10,-9],[7,-3],[8,-8],[-6,-1],[-8,-6],[-6,-10]]], dtype = "int64")#candidate|6091|(15, 14, 2)|const|int64
bop_6092 = relay.greater_equal(var_6090.astype('bool'), relay.reshape(const_6091.astype('bool'), relay.shape_of(var_6090))) # shape=(15, 14, 2)
output = bop_6092
output2 = bop_6092
func_6103 = relay.Function([var_6090,], output)
mod['func_6103'] = func_6103
mod = relay.transform.InferType()(mod)
var_6104 = relay.var("var_6104", dtype = "int64", shape = (15, 14, 2))#candidate|6104|(15, 14, 2)|var|int64
output = func_6103(var_6104)
func_6105 = relay.Function([var_6104], output)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_6117 = relay.TupleGetItem(func_4194_call(), 0)
call_6118 = relay.TupleGetItem(func_4196_call(), 0)
output = call_6117
output2 = call_6118
func_6131 = relay.Function([], output)
mod['func_6131'] = func_6131
mod = relay.transform.InferType()(mod)
output = func_6131()
func_6132 = relay.Function([], output)
mutated_mod['func_6132'] = func_6132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mod.get_global_var('func_2954')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_6341 = relay.TupleGetItem(func_2954_call(), 0)
call_6342 = relay.TupleGetItem(func_2955_call(), 0)
var_6355 = relay.var("var_6355", dtype = "float64", shape = (9, 10, 3))#candidate|6355|(9, 10, 3)|var|float64
bop_6356 = relay.subtract(call_6341.astype('int32'), relay.reshape(var_6355.astype('int32'), relay.shape_of(call_6341))) # shape=(9, 10, 3)
bop_6359 = relay.subtract(call_6342.astype('int32'), relay.reshape(var_6355.astype('int32'), relay.shape_of(call_6342))) # shape=(9, 10, 3)
bop_6361 = relay.greater(call_6341.astype('bool'), relay.reshape(bop_6356.astype('bool'), relay.shape_of(call_6341))) # shape=(9, 10, 3)
bop_6364 = relay.greater(call_6342.astype('bool'), relay.reshape(bop_6359.astype('bool'), relay.shape_of(call_6342))) # shape=(9, 10, 3)
uop_6377 = relay.log(var_6355.astype('float64')) # shape=(9, 10, 3)
func_5636_call = mod.get_global_var('func_5636')
func_5638_call = mutated_mod.get_global_var('func_5638')
call_6379 = relay.TupleGetItem(func_5636_call(), 0)
call_6380 = relay.TupleGetItem(func_5638_call(), 0)
func_4537_call = mod.get_global_var('func_4537')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_6391 = relay.TupleGetItem(func_4537_call(), 1)
call_6392 = relay.TupleGetItem(func_4539_call(), 1)
func_3340_call = mod.get_global_var('func_3340')
func_3344_call = mutated_mod.get_global_var('func_3344')
const_6395 = relay.const([6.024833,-5.277281,1.232663,-5.347159,-9.840375,-2.894040,-4.433786,5.466359,-3.746793,-8.247126,-8.560685,-0.843623,7.082226,2.807398,4.806727,-8.906662,9.851089,8.556130,8.928851,-5.532732,-3.427818,5.503907,2.831841,3.236086,-3.868607,-5.965154,0.159323,-6.677229,5.098865,-4.174869,6.737667,-4.180051,8.642155,5.817048,4.147353,0.753168,0.076729,-8.158306,1.209228,-3.450654,0.121815,-1.588866,0.708415,0.436961,3.870305,8.951835,-6.951361,7.247893,4.044664,-7.740777,9.496115,-0.977267,8.187518,9.083797,-0.029851,-0.766479,-9.534876,4.853411,4.353144,7.669972,-2.373564,9.127519,-5.660112,-2.866139,-5.732654,-9.913649,-4.078380,-6.330012,-5.708384,-3.564713,7.895079,-4.572527,-7.755627,6.641491,0.687396,-4.857363,7.989615,-5.734570,-1.351962,5.458395,-1.109320,-8.639296,4.557148,-5.163520,3.029385,-5.051015,4.625946,-8.062141,-6.525446,2.923477,-2.081052,6.506245,3.335092,7.426565,3.539719,-8.871765,5.899651,-0.245922,1.806511,-4.425743,-2.826709,1.859294,5.097538,6.632635,2.798063,3.439316,-0.825192,6.458641,4.101703,1.128067,-2.219800,-9.047890,8.950882,-2.323387,1.926568,9.308048,5.381559,5.463671,-9.027075,5.777253,9.782502,-2.247400,7.644254,8.501238,-4.653232,4.238567,3.812895,-2.222846,7.721593,3.211967,8.804380,-3.265620,-6.126682,-7.813011,-8.680888,-1.708715,-0.181311,7.970834,8.307496,-8.312892,9.813776,-1.297218,5.441052,4.264156,2.403986,3.534628,0.416617,0.155534,7.039300,5.454946,4.723504,6.242528,-5.177549,-6.340452,-8.263296,1.346584,-3.186309,-3.759069,4.526214,-1.506455,-5.541693,9.466557,5.716526,1.600744,-8.433412,-7.897679,4.122107,-0.017111,-8.489485,7.678399,9.582325,8.025552,-2.507448,-1.070863,0.241392,-5.416191,-1.458775,-5.691695,-2.074394,1.822523,-7.081200,4.908206,9.031741,3.866765,-0.221814,-4.109638,7.127261,0.342303,4.068973,7.321714,3.887216,6.741049], dtype = "float32")#candidate|6395|(192,)|const|float32
call_6394 = relay.TupleGetItem(func_3340_call(relay.reshape(const_6395.astype('float32'), [192,]), relay.reshape(const_6395.astype('float32'), [192,]), ), 1)
call_6396 = relay.TupleGetItem(func_3344_call(relay.reshape(const_6395.astype('float32'), [192,]), relay.reshape(const_6395.astype('float32'), [192,]), ), 1)
output = relay.Tuple([bop_6361,uop_6377,call_6379,call_6391,call_6394,const_6395,])
output2 = relay.Tuple([bop_6364,uop_6377,call_6380,call_6392,call_6396,const_6395,])
func_6400 = relay.Function([var_6355,], output)
mod['func_6400'] = func_6400
mod = relay.transform.InferType()(mod)
var_6401 = relay.var("var_6401", dtype = "float64", shape = (9, 10, 3))#candidate|6401|(9, 10, 3)|var|float64
output = func_6400(var_6401)
func_6402 = relay.Function([var_6401], output)
mutated_mod['func_6402'] = func_6402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4267_call = mod.get_global_var('func_4267')
func_4269_call = mutated_mod.get_global_var('func_4269')
call_6412 = func_4267_call()
call_6413 = func_4267_call()
output = call_6412
output2 = call_6413
func_6428 = relay.Function([], output)
mod['func_6428'] = func_6428
mod = relay.transform.InferType()(mod)
mutated_mod['func_6428'] = func_6428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6428_call = mutated_mod.get_global_var('func_6428')
call_6429 = func_6428_call()
output = call_6429
func_6430 = relay.Function([], output)
mutated_mod['func_6430'] = func_6430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4537_call = mod.get_global_var('func_4537')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_6434 = relay.TupleGetItem(func_4537_call(), 2)
call_6435 = relay.TupleGetItem(func_4539_call(), 2)
output = relay.Tuple([call_6434,])
output2 = relay.Tuple([call_6435,])
func_6436 = relay.Function([], output)
mod['func_6436'] = func_6436
mod = relay.transform.InferType()(mod)
mutated_mod['func_6436'] = func_6436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6436_call = mutated_mod.get_global_var('func_6436')
call_6437 = func_6436_call()
output = call_6437
func_6438 = relay.Function([], output)
mutated_mod['func_6438'] = func_6438
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6449 = relay.var("var_6449", dtype = "float32", shape = (16, 7, 12))#candidate|6449|(16, 7, 12)|var|float32
uop_6450 = relay.cos(var_6449.astype('float32')) # shape=(16, 7, 12)
output = uop_6450
output2 = uop_6450
func_6452 = relay.Function([var_6449,], output)
mod['func_6452'] = func_6452
mod = relay.transform.InferType()(mod)
var_6453 = relay.var("var_6453", dtype = "float32", shape = (16, 7, 12))#candidate|6453|(16, 7, 12)|var|float32
output = func_6452(var_6453)
func_6454 = relay.Function([var_6453], output)
mutated_mod['func_6454'] = func_6454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3401_call = mod.get_global_var('func_3401')
func_3403_call = mutated_mod.get_global_var('func_3403')
call_6466 = relay.TupleGetItem(func_3401_call(), 0)
call_6467 = relay.TupleGetItem(func_3403_call(), 0)
output = relay.Tuple([call_6466,])
output2 = relay.Tuple([call_6467,])
func_6471 = relay.Function([], output)
mod['func_6471'] = func_6471
mod = relay.transform.InferType()(mod)
output = func_6471()
func_6472 = relay.Function([], output)
mutated_mod['func_6472'] = func_6472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6131_call = mod.get_global_var('func_6131')
func_6132_call = mutated_mod.get_global_var('func_6132')
call_6492 = func_6131_call()
call_6493 = func_6131_call()
func_1213_call = mod.get_global_var('func_1213')
func_1218_call = mutated_mod.get_global_var('func_1218')
const_6505 = relay.const([-3,-7,-3,3,6,5,10,-4,7,2,5,2,-7,10,-2,-9,5,1,-4,-5,10,2,4,-7,-4,-10,-9,4,5,-1,10,-3,-3,2,1,-2,9,-2,-8,4,10,-10,-6,-2,-10,-1,-3,5,1,7,-7,2,1,-1,-1,-10,10,-9,-6,-1,-5,9,7,6,-3,7,-10,-8,-2,-9,-5,-5,10,-3,-4,3,7,7,-5,-9,8,8,6,10,-6,-1,7,-6,-10,3,5,3,-7,-3,7,-1,-1,-2,7,-5,10,-4,3,-4,-10,7,3,7,-4,4,-6,6,-6,-6,-10,-5,-8,5,-10,-6,-6,-8,-5,-10,-7,10,-9,-1,-5,-9,-8,3,-3,9,9,-6,10,-5,6,6,8,-7,2,-4,-4,2,-7,-10,-5,-4,8,-3,-1,-5,-4,2,-9,-10,8,-10,7,4,8,4,7,-2,-5,3,-3,-7,-1,8,-8,5,-4,-8,-8,5,-10,-1,-7,10,-8,-2,-3,-6,7,-8,-4,-3,-9,-1,5,5,9,2,1,-9,-7,9,-9,-6,-1,-3,7,-7,-7,5,6,-7,8,-10,3,9,2,2,3,10,-4,2,9,10,-8,7,-5,-1,-6,-3,2,-1,-7,8,2,-5,2,-2,7,-6,6,-8,-10,7,10,6,-1,-8,9,10,3,10,5,4,-3,-6,6,4,-5,-3,-3,8,-6,-4,-10,8,2,-9,-1,8,5,-5,-9,6,-1,8,-8,8,3,-8,-6,8,-6,4,2,-1,7,-10,8,10,-7,-3,-5,8,3,-10], dtype = "uint32")#candidate|6505|(294,)|const|uint32
var_6506 = relay.var("var_6506", dtype = "float32", shape = (864, 2))#candidate|6506|(864, 2)|var|float32
var_6507 = relay.var("var_6507", dtype = "float64", shape = (420,))#candidate|6507|(420,)|var|float64
call_6504 = relay.TupleGetItem(func_1213_call(relay.reshape(const_6505.astype('uint32'), [3, 7, 14]), relay.reshape(var_6506.astype('float32'), [9, 12, 16]), relay.reshape(var_6507.astype('float64'), [420,]), ), 4)
call_6508 = relay.TupleGetItem(func_1218_call(relay.reshape(const_6505.astype('uint32'), [3, 7, 14]), relay.reshape(var_6506.astype('float32'), [9, 12, 16]), relay.reshape(var_6507.astype('float64'), [420,]), ), 4)
var_6514 = relay.var("var_6514", dtype = "uint32", shape = (294,))#candidate|6514|(294,)|var|uint32
bop_6515 = relay.bitwise_and(const_6505.astype('int16'), relay.reshape(var_6514.astype('int16'), relay.shape_of(const_6505))) # shape=(294,)
func_3576_call = mod.get_global_var('func_3576')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_6528 = relay.TupleGetItem(func_3576_call(), 0)
call_6529 = relay.TupleGetItem(func_3578_call(), 0)
func_5813_call = mod.get_global_var('func_5813')
func_5815_call = mutated_mod.get_global_var('func_5815')
call_6543 = func_5813_call()
call_6544 = func_5813_call()
uop_6546 = relay.erf(var_6514.astype('float64')) # shape=(294,)
func_3576_call = mod.get_global_var('func_3576')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_6549 = relay.TupleGetItem(func_3576_call(), 0)
call_6550 = relay.TupleGetItem(func_3578_call(), 0)
var_6559 = relay.var("var_6559", dtype = "float64", shape = (294,))#candidate|6559|(294,)|var|float64
bop_6560 = relay.divide(uop_6546.astype('float32'), relay.reshape(var_6559.astype('float32'), relay.shape_of(uop_6546))) # shape=(294,)
func_3976_call = mod.get_global_var('func_3976')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_6568 = relay.TupleGetItem(func_3976_call(), 0)
call_6569 = relay.TupleGetItem(func_3978_call(), 0)
func_2647_call = mod.get_global_var('func_2647')
func_2648_call = mutated_mod.get_global_var('func_2648')
call_6573 = func_2647_call()
call_6574 = func_2647_call()
uop_6576 = relay.asin(call_6492.astype('float64')) # shape=(110, 4)
uop_6578 = relay.asin(call_6493.astype('float64')) # shape=(110, 4)
uop_6583 = relay.acos(uop_6546.astype('float32')) # shape=(294,)
output = relay.Tuple([call_6504,var_6506,var_6507,bop_6515,call_6528,call_6543,call_6549,bop_6560,call_6568,call_6573,uop_6576,uop_6583,])
output2 = relay.Tuple([call_6508,var_6506,var_6507,bop_6515,call_6529,call_6544,call_6550,bop_6560,call_6569,call_6574,uop_6578,uop_6583,])
func_6601 = relay.Function([var_6506,var_6507,var_6514,var_6559,], output)
mod['func_6601'] = func_6601
mod = relay.transform.InferType()(mod)
mutated_mod['func_6601'] = func_6601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6601_call = mutated_mod.get_global_var('func_6601')
var_6603 = relay.var("var_6603", dtype = "float32", shape = (864, 2))#candidate|6603|(864, 2)|var|float32
var_6604 = relay.var("var_6604", dtype = "float64", shape = (420,))#candidate|6604|(420,)|var|float64
var_6605 = relay.var("var_6605", dtype = "uint32", shape = (294,))#candidate|6605|(294,)|var|uint32
var_6606 = relay.var("var_6606", dtype = "float64", shape = (294,))#candidate|6606|(294,)|var|float64
call_6602 = func_6601_call(var_6603,var_6604,var_6605,var_6606,)
output = call_6602
func_6607 = relay.Function([var_6603,var_6604,var_6605,var_6606,], output)
mutated_mod['func_6607'] = func_6607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_6644 = func_5989_call()
call_6645 = func_5989_call()
output = relay.Tuple([call_6644,])
output2 = relay.Tuple([call_6645,])
func_6647 = relay.Function([], output)
mod['func_6647'] = func_6647
mod = relay.transform.InferType()(mod)
output = func_6647()
func_6648 = relay.Function([], output)
mutated_mod['func_6648'] = func_6648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5341_call = mod.get_global_var('func_5341')
func_5343_call = mutated_mod.get_global_var('func_5343')
call_6680 = relay.TupleGetItem(func_5341_call(), 0)
call_6681 = relay.TupleGetItem(func_5343_call(), 0)
var_6683 = relay.var("var_6683", dtype = "float64", shape = (9, 10, 3))#candidate|6683|(9, 10, 3)|var|float64
bop_6684 = relay.minimum(call_6680.astype('uint64'), relay.reshape(var_6683.astype('uint64'), relay.shape_of(call_6680))) # shape=(9, 10, 3)
bop_6687 = relay.minimum(call_6681.astype('uint64'), relay.reshape(var_6683.astype('uint64'), relay.shape_of(call_6681))) # shape=(9, 10, 3)
uop_6694 = relay.rsqrt(call_6680.astype('float64')) # shape=(9, 10, 3)
uop_6696 = relay.rsqrt(call_6681.astype('float64')) # shape=(9, 10, 3)
func_6400_call = mod.get_global_var('func_6400')
func_6402_call = mutated_mod.get_global_var('func_6402')
call_6708 = relay.TupleGetItem(func_6400_call(relay.reshape(uop_6694.astype('float64'), [9, 10, 3])), 4)
call_6709 = relay.TupleGetItem(func_6402_call(relay.reshape(uop_6694.astype('float64'), [9, 10, 3])), 4)
func_6471_call = mod.get_global_var('func_6471')
func_6472_call = mutated_mod.get_global_var('func_6472')
call_6712 = relay.TupleGetItem(func_6471_call(), 0)
call_6713 = relay.TupleGetItem(func_6472_call(), 0)
uop_6720 = relay.tan(uop_6694.astype('float32')) # shape=(9, 10, 3)
uop_6722 = relay.tan(uop_6696.astype('float32')) # shape=(9, 10, 3)
output = relay.Tuple([bop_6684,call_6708,call_6712,uop_6720,])
output2 = relay.Tuple([bop_6687,call_6709,call_6713,uop_6722,])
func_6724 = relay.Function([var_6683,], output)
mod['func_6724'] = func_6724
mod = relay.transform.InferType()(mod)
var_6725 = relay.var("var_6725", dtype = "float64", shape = (9, 10, 3))#candidate|6725|(9, 10, 3)|var|float64
output = func_6724(var_6725)
func_6726 = relay.Function([var_6725], output)
mutated_mod['func_6726'] = func_6726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5162_call = mod.get_global_var('func_5162')
func_5163_call = mutated_mod.get_global_var('func_5163')
call_6757 = relay.TupleGetItem(func_5162_call(), 0)
call_6758 = relay.TupleGetItem(func_5163_call(), 0)
var_6759 = relay.var("var_6759", dtype = "float32", shape = (9, 10, 3))#candidate|6759|(9, 10, 3)|var|float32
bop_6760 = relay.equal(call_6757.astype('bool'), relay.reshape(var_6759.astype('bool'), relay.shape_of(call_6757))) # shape=(9, 10, 3)
bop_6763 = relay.equal(call_6758.astype('bool'), relay.reshape(var_6759.astype('bool'), relay.shape_of(call_6758))) # shape=(9, 10, 3)
output = bop_6760
output2 = bop_6763
func_6766 = relay.Function([var_6759,], output)
mod['func_6766'] = func_6766
mod = relay.transform.InferType()(mod)
mutated_mod['func_6766'] = func_6766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6767 = relay.var("var_6767", dtype = "float32", shape = (9, 10, 3))#candidate|6767|(9, 10, 3)|var|float32
func_6766_call = mutated_mod.get_global_var('func_6766')
call_6768 = func_6766_call(var_6767)
output = call_6768
func_6769 = relay.Function([var_6767], output)
mutated_mod['func_6769'] = func_6769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6647_call = mod.get_global_var('func_6647')
func_6648_call = mutated_mod.get_global_var('func_6648')
call_6802 = relay.TupleGetItem(func_6647_call(), 0)
call_6803 = relay.TupleGetItem(func_6648_call(), 0)
var_6807 = relay.var("var_6807", dtype = "float32", shape = (9, 10, 3))#candidate|6807|(9, 10, 3)|var|float32
bop_6808 = relay.bitwise_and(call_6802.astype('uint8'), relay.reshape(var_6807.astype('uint8'), relay.shape_of(call_6802))) # shape=(9, 10, 3)
bop_6811 = relay.bitwise_and(call_6803.astype('uint8'), relay.reshape(var_6807.astype('uint8'), relay.shape_of(call_6803))) # shape=(9, 10, 3)
bop_6818 = relay.power(bop_6808.astype('float32'), relay.reshape(call_6802.astype('float32'), relay.shape_of(bop_6808))) # shape=(9, 10, 3)
bop_6821 = relay.power(bop_6811.astype('float32'), relay.reshape(call_6803.astype('float32'), relay.shape_of(bop_6811))) # shape=(9, 10, 3)
func_5387_call = mod.get_global_var('func_5387')
func_5389_call = mutated_mod.get_global_var('func_5389')
call_6824 = func_5387_call()
call_6825 = func_5387_call()
output = relay.Tuple([bop_6818,call_6824,])
output2 = relay.Tuple([bop_6821,call_6825,])
func_6828 = relay.Function([var_6807,], output)
mod['func_6828'] = func_6828
mod = relay.transform.InferType()(mod)
mutated_mod['func_6828'] = func_6828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6829 = relay.var("var_6829", dtype = "float32", shape = (9, 10, 3))#candidate|6829|(9, 10, 3)|var|float32
func_6828_call = mutated_mod.get_global_var('func_6828')
call_6830 = func_6828_call(var_6829)
output = call_6830
func_6831 = relay.Function([var_6829], output)
mutated_mod['func_6831'] = func_6831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3401_call = mod.get_global_var('func_3401')
func_3403_call = mutated_mod.get_global_var('func_3403')
call_6934 = relay.TupleGetItem(func_3401_call(), 0)
call_6935 = relay.TupleGetItem(func_3403_call(), 0)
output = relay.Tuple([call_6934,])
output2 = relay.Tuple([call_6935,])
func_6938 = relay.Function([], output)
mod['func_6938'] = func_6938
mod = relay.transform.InferType()(mod)
mutated_mod['func_6938'] = func_6938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6938_call = mutated_mod.get_global_var('func_6938')
call_6939 = func_6938_call()
output = call_6939
func_6940 = relay.Function([], output)
mutated_mod['func_6940'] = func_6940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4274_call = mod.get_global_var('func_4274')
func_4276_call = mutated_mod.get_global_var('func_4276')
call_7042 = func_4274_call()
call_7043 = func_4274_call()
output = relay.Tuple([call_7042,])
output2 = relay.Tuple([call_7043,])
func_7057 = relay.Function([], output)
mod['func_7057'] = func_7057
mod = relay.transform.InferType()(mod)
mutated_mod['func_7057'] = func_7057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7057_call = mutated_mod.get_global_var('func_7057')
call_7058 = func_7057_call()
output = call_7058
func_7059 = relay.Function([], output)
mutated_mod['func_7059'] = func_7059
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7086 = relay.var("var_7086", dtype = "float64", shape = (7, 14, 16))#candidate|7086|(7, 14, 16)|var|float64
uop_7087 = relay.erf(var_7086.astype('float64')) # shape=(7, 14, 16)
func_1375_call = mod.get_global_var('func_1375')
func_1379_call = mutated_mod.get_global_var('func_1379')
const_7094 = relay.const(8, dtype = "int64")#candidate|7094|()|const|int64
var_7095 = relay.var("var_7095", dtype = "int64", shape = (2160,))#candidate|7095|(2160,)|var|int64
call_7093 = relay.TupleGetItem(func_1375_call(relay.reshape(const_7094.astype('int64'), []), relay.reshape(var_7095.astype('int64'), [16, 9, 15]), ), 1)
call_7096 = relay.TupleGetItem(func_1379_call(relay.reshape(const_7094.astype('int64'), []), relay.reshape(var_7095.astype('int64'), [16, 9, 15]), ), 1)
func_2473_call = mod.get_global_var('func_2473')
func_2478_call = mutated_mod.get_global_var('func_2478')
const_7107 = relay.const([8.525785,-2.339018,-2.300172,9.602306,4.656042,-4.954092,0.074232,3.336492,0.120604,-3.901128,-2.662765,-3.480810,8.165114,-3.898920,8.287314,1.431033,-5.548673,3.371745,-3.250753,1.293488,-9.964050,-0.101049,3.039251,-3.565438,-6.969420,0.703469,-0.678371,9.669740,-6.898176,-2.160673,1.363240,-2.190087,8.282172,-4.992635,6.960010,7.834545,1.114858,4.722391,-4.324089,-5.304621,-1.230717,2.733291,8.146930,-7.882705,-1.065057,4.244399,2.875923,3.271767,9.824610,-2.960545,0.550616,5.782930,-9.265769,9.964904,-2.766426,0.116439,9.756067,0.858893,-4.445713,-7.438644,4.210884,-8.516221,-7.963111,3.555330,0.293472,-0.570676,-5.890738,-8.002702,-1.999490,0.529697,4.957179,0.820805,6.696649,9.083463,-0.512723,-2.311277,2.125992,-6.741584,-6.020904,9.705203,-5.960132,-2.015979,0.575589,4.915678,-6.717247,6.957066,5.536821,-1.661182,0.878419,-3.018635,8.080244,2.573079,5.097391,-6.286902,-7.087411,-9.347905,9.566899,6.841060,8.961734,-9.264761,9.519809,5.202586,-2.456578,1.774210,6.940332,-3.112745,-4.510286,3.040157,8.247129,2.671556,8.678557,-5.723584,-7.809062,-4.124691,-7.985306,8.113932,-7.040322,3.734785,-7.326610,-7.234434,-3.894853,-6.186570,2.916996,8.761775,-9.614631,-3.436525,-3.030679,-0.378442,-5.580934,-7.652554,-9.129085,-3.252345,-3.551860,1.326101,-3.254853,-4.457360,-5.950229,6.842667,-5.904190,6.517850,6.986933,-5.635244,-7.945738,-9.828774,1.807140,-3.696133,-0.946677,-3.437289,-1.843963,6.098482,-7.575462,1.763771,-1.160390,-1.082816,7.709325,7.615617,9.732421,-6.056902,6.428817,-3.115344,6.038241,-7.269727,2.352735,-9.428276,-0.451835,-5.588084,5.963037,-4.449430,-5.714471,-6.468582,-1.103074,-7.836172,-5.473215,7.982159,6.633542,-4.603179,-4.695664,-5.767372,-1.486428,2.044440,-4.052828,4.170704,-3.415766,7.435531,-5.247086,-7.648315,-1.798530,-7.149214,-6.101960,-1.717437,2.678022,-1.869464,2.181499,9.146243,-6.801854,-4.251335,-3.272064,-9.538057,8.656776,9.130718,-4.833258,-0.730781,-7.089428,3.297219,3.460511,-0.730437,-0.077257,-8.862189,0.575776,5.889822,5.801710,-1.858084,9.910628,-1.937186,-4.604274,-5.553166,4.366698,5.133539,1.398646,-7.676013,-7.094281,1.232769,-4.458645,-0.071189,0.699946,8.333173,-7.506575,-8.428915,-2.534498,-8.578247,-2.316118,3.870995,-4.770743,7.045523,7.461585,-6.550554,-0.142859,2.668697,9.155533,-6.670747,1.680947,6.017608,5.737641,-1.569478,-9.551810,6.202957,7.006719,2.478459,0.477234,-3.442974,-5.137620,0.116111,-1.671199,0.018683,-7.312827,8.721639,6.350760,6.899812,-9.641046,9.818515,5.155994,-3.110885,2.135456,-3.993620,-3.503582,-7.010132,3.644201,-3.795687,-4.466801,4.237060], dtype = "float64")#candidate|7107|(270,)|const|float64
const_7108 = relay.const([[-3.991530,8.362909,3.390993,-5.031113],[-2.831168,3.296857,-8.544114,7.001412],[7.382521,-3.024693,-6.727247,5.118895],[-9.322530,-7.071210,-8.216096,-2.309635],[-0.656728,-5.589468,-8.286041,8.134871],[-7.380552,6.385339,-7.807965,0.919706],[7.797926,6.758642,-8.218036,-4.602501],[-4.157441,-0.174597,0.919874,8.260164],[-7.155274,8.422739,-6.958721,5.134374],[-9.313890,6.099825,3.473522,-3.428623],[3.992233,0.130245,-5.582629,-8.912939],[-1.075618,2.926999,4.191097,4.126653],[-5.639152,8.437768,9.259596,-2.121133],[0.849546,8.783783,-2.427618,-0.400303],[9.316094,-3.406996,4.676506,-3.708515],[4.480563,1.598120,-4.369793,-4.534496],[6.743831,6.912341,2.749016,-1.543125],[-7.122085,2.218438,5.642538,-1.422020],[2.818425,1.848870,3.068567,0.211490],[3.671880,5.595364,6.194949,3.158486],[1.097022,-0.283134,-9.886391,-4.612239],[-0.960454,2.907271,4.556838,-4.998893],[-0.714471,2.596392,-3.066811,-4.681363],[6.872743,1.970867,-9.205409,9.982325],[-3.261456,-2.377951,2.289231,3.311349],[-2.769665,9.149594,-2.343511,0.922626],[0.599739,-2.015263,8.477394,-3.628200],[-1.477363,8.595581,-0.438453,0.979100],[-9.778301,7.327166,-0.202054,4.221350],[5.148628,-9.545315,2.702172,6.730633],[-5.313602,-8.254545,-9.412311,-9.659988],[-9.843644,2.581115,-7.139124,2.295189],[-0.978363,-5.158601,0.022623,-5.641258],[7.580618,-1.591263,-5.130834,9.350107],[6.328298,-0.973429,-6.476954,7.057823],[-5.919394,9.833268,9.294766,-2.029254],[3.445315,-8.026955,-9.109374,-3.253217],[5.431250,-3.520077,-6.728428,-6.737014],[4.193823,3.366604,5.676787,0.083108],[-8.993850,-2.212331,6.606577,2.157669],[-4.717556,-8.828957,-0.500635,-3.347148],[4.945838,3.047730,-5.386415,-8.406588],[-1.998508,-6.144839,-6.363239,-4.757583],[-7.468209,-1.874197,5.485490,3.088517],[9.961040,-7.410309,-2.035851,1.002510],[-1.760033,3.061245,-5.689373,-3.092170],[1.095719,-1.865388,-8.343232,-4.127732],[7.568173,2.058414,0.456038,-5.314034],[-2.161950,-0.137810,3.152153,-6.585171],[8.423203,0.363040,3.155924,-1.643789],[-3.300341,-4.935317,6.432721,8.062590],[8.789013,3.796862,5.843952,2.029262],[4.821957,-5.403207,5.895180,-5.645487],[-1.199071,-3.008629,2.086328,2.647845],[4.094529,0.220864,-3.471573,-3.375221],[1.650906,-3.792752,1.282370,-2.368865],[-2.525949,-6.873381,9.839779,-0.195621],[-7.927826,-2.698049,8.473163,7.410919],[3.503933,-5.527332,4.098003,-2.608801],[-0.859679,-0.653221,-8.645034,-3.879317],[8.877155,7.240896,7.928228,4.625965],[-3.293097,-2.265367,8.050870,9.728180],[-4.662908,-7.568354,-3.878765,-7.416065],[-1.560265,-1.065141,9.811969,0.084757],[3.245650,2.222490,-0.874642,-2.607584],[-5.912386,-6.683816,-4.065779,4.123023],[0.183814,5.423039,-9.217199,2.389526],[-8.397335,9.516090,-4.356825,-0.856252],[6.515953,6.446401,-0.634667,1.979894],[-5.460233,-1.447803,7.368300,7.909188],[-1.551578,-3.229271,-1.888862,8.704482],[2.596292,-8.960258,0.886053,-4.331255],[-8.197595,-0.830540,4.082374,-3.482887],[9.608517,4.562328,-5.023053,-1.912154],[2.657677,5.962787,-7.372269,-4.025666],[6.111761,7.379349,0.497356,-6.908278],[2.997739,3.570818,-2.024006,-7.607328],[-1.308677,-7.154262,-3.560805,3.675130],[1.495541,8.981993,0.346233,0.851503],[-9.541247,2.560518,-7.646352,-6.396946],[-0.764010,0.552935,0.269096,5.766519],[0.100021,-9.256593,-5.953557,5.747063],[-7.317665,8.150037,-6.563191,-6.933766],[3.077091,-0.597257,9.452774,-5.929876],[-5.457705,-2.654053,8.994635,-0.300407],[3.778055,1.673155,-5.227690,7.789772],[7.078797,3.953597,-5.711390,8.487397],[3.130317,3.421015,-0.517579,7.986332],[1.041862,-2.525840,4.326202,8.995178],[2.723722,-9.609344,1.492867,-4.710792],[-6.808351,-5.168527,5.955715,-5.126970],[-7.886837,-8.381551,7.297274,9.449656],[3.913421,-3.905722,-7.565610,-6.869565],[-3.580344,-1.885516,-1.201750,-9.488136],[-4.238216,6.145913,-9.121724,-6.141456],[-7.613478,5.595879,-0.373168,-7.877196],[-1.875178,-2.284981,9.814493,-9.379418],[8.481156,3.528964,7.818300,-3.261259],[7.877628,-6.788708,-6.146205,-6.049108],[3.924783,-3.034037,-1.621601,0.327773],[0.792331,-7.378034,-1.049259,-5.402057],[1.516207,-8.045605,-2.024964,-9.915653],[-9.550194,4.506119,2.043256,1.939472],[-0.576120,2.580544,7.566002,4.252789],[-0.722029,8.686109,5.939578,3.884555],[9.479171,1.330353,-0.339752,4.075217],[-6.231479,4.380025,-5.221065,-3.023669],[6.826562,-3.270769,8.746514,3.673048],[9.853100,-0.083319,5.348665,4.005788],[2.370251,-1.921627,-3.550299,6.192389]], dtype = "float64")#candidate|7108|(110, 4)|const|float64
var_7109 = relay.var("var_7109", dtype = "uint32", shape = (810,))#candidate|7109|(810,)|var|uint32
call_7106 = relay.TupleGetItem(func_2473_call(relay.reshape(const_7107.astype('float64'), [1, 270]), relay.reshape(const_7108.astype('float64'), [8, 11, 5]), relay.reshape(const_7108.astype('float64'), [8, 11, 5]), relay.reshape(var_7109.astype('uint32'), [810,]), ), 15)
call_7110 = relay.TupleGetItem(func_2478_call(relay.reshape(const_7107.astype('float64'), [1, 270]), relay.reshape(const_7108.astype('float64'), [8, 11, 5]), relay.reshape(const_7108.astype('float64'), [8, 11, 5]), relay.reshape(var_7109.astype('uint32'), [810,]), ), 15)
output = relay.Tuple([uop_7087,call_7093,const_7094,var_7095,call_7106,const_7107,const_7108,var_7109,])
output2 = relay.Tuple([uop_7087,call_7096,const_7094,var_7095,call_7110,const_7107,const_7108,var_7109,])
func_7124 = relay.Function([var_7086,var_7095,var_7109,], output)
mod['func_7124'] = func_7124
mod = relay.transform.InferType()(mod)
mutated_mod['func_7124'] = func_7124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mutated_mod.get_global_var('func_7124')
var_7126 = relay.var("var_7126", dtype = "float64", shape = (7, 14, 16))#candidate|7126|(7, 14, 16)|var|float64
var_7127 = relay.var("var_7127", dtype = "int64", shape = (2160,))#candidate|7127|(2160,)|var|int64
var_7128 = relay.var("var_7128", dtype = "uint32", shape = (810,))#candidate|7128|(810,)|var|uint32
call_7125 = func_7124_call(var_7126,var_7127,var_7128,)
output = call_7125
func_7129 = relay.Function([var_7126,var_7127,var_7128,], output)
mutated_mod['func_7129'] = func_7129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6131_call = mod.get_global_var('func_6131')
func_6132_call = mutated_mod.get_global_var('func_6132')
call_7208 = func_6131_call()
call_7209 = func_6131_call()
uop_7223 = relay.log(call_7208.astype('float64')) # shape=(110, 4)
uop_7225 = relay.log(call_7209.astype('float64')) # shape=(110, 4)
output = relay.Tuple([uop_7223,])
output2 = relay.Tuple([uop_7225,])
func_7227 = relay.Function([], output)
mod['func_7227'] = func_7227
mod = relay.transform.InferType()(mod)
mutated_mod['func_7227'] = func_7227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7227_call = mutated_mod.get_global_var('func_7227')
call_7228 = func_7227_call()
output = call_7228
func_7229 = relay.Function([], output)
mutated_mod['func_7229'] = func_7229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6472_call = mutated_mod.get_global_var('func_6472')
call_7251 = relay.TupleGetItem(func_6471_call(), 0)
call_7252 = relay.TupleGetItem(func_6472_call(), 0)
output = relay.Tuple([call_7251,])
output2 = relay.Tuple([call_7252,])
func_7254 = relay.Function([], output)
mod['func_7254'] = func_7254
mod = relay.transform.InferType()(mod)
output = func_7254()
func_7255 = relay.Function([], output)
mutated_mod['func_7255'] = func_7255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_7329 = func_5989_call()
call_7330 = func_5989_call()
func_587_call = mod.get_global_var('func_587')
func_590_call = mutated_mod.get_global_var('func_590')
var_7334 = relay.var("var_7334", dtype = "int16", shape = (18,))#candidate|7334|(18,)|var|int16
call_7333 = relay.TupleGetItem(func_587_call(relay.reshape(var_7334.astype('int16'), [2, 3, 3]), relay.reshape(var_7334.astype('int16'), [2, 3, 3]), ), 0)
call_7335 = relay.TupleGetItem(func_590_call(relay.reshape(var_7334.astype('int16'), [2, 3, 3]), relay.reshape(var_7334.astype('int16'), [2, 3, 3]), ), 0)
output = relay.Tuple([call_7329,call_7333,var_7334,])
output2 = relay.Tuple([call_7330,call_7335,var_7334,])
func_7336 = relay.Function([var_7334,], output)
mod['func_7336'] = func_7336
mod = relay.transform.InferType()(mod)
var_7337 = relay.var("var_7337", dtype = "int16", shape = (18,))#candidate|7337|(18,)|var|int16
output = func_7336(var_7337)
func_7338 = relay.Function([var_7337], output)
mutated_mod['func_7338'] = func_7338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7342 = relay.var("var_7342", dtype = "uint8", shape = ())#candidate|7342|()|var|uint8
const_7343 = relay.const([[[3,5,-5,9,7,3,6,5,7,2,-7,-5,10,4],[8,-5,-10,-5,1,8,-1,4,-4,-3,10,-10,2,10],[9,9,7,-10,-4,1,8,5,-2,-9,1,9,7,-8],[5,8,-3,-3,3,-7,-8,-4,10,8,-2,10,10,5]],[[-1,6,-5,3,-5,8,10,7,-4,4,2,-5,10,-8],[-7,8,7,5,10,10,4,5,3,-10,3,-8,8,9],[-9,8,7,-3,2,6,5,9,-4,-3,-6,-4,9,-6],[-7,8,-10,-3,4,3,5,-10,-7,-2,-5,10,10,-4]],[[7,-7,-3,-2,1,3,-3,-3,-10,-1,-4,-10,9,-4],[-5,9,6,-4,-3,5,-2,-1,-7,-3,9,-3,-8,4],[2,-8,4,-9,-5,3,-1,-4,-7,8,-1,-10,-5,-3],[-6,2,-5,-7,10,-1,-10,5,-1,4,5,-3,-3,7]],[[5,-2,-9,3,7,-4,7,-3,8,-8,-6,8,-6,-8],[-3,8,-8,-1,7,2,-3,4,-2,6,-3,-10,9,-10],[10,-4,4,-10,-2,-1,4,-4,10,6,-5,1,-9,8],[-2,2,8,-4,8,5,5,-9,-9,-6,3,10,-8,-5]],[[-3,-6,-3,6,6,2,-6,-4,-2,9,-7,10,-1,-7],[1,-8,5,3,4,-7,-1,-4,7,7,-10,3,-3,7],[-3,-5,-6,-3,6,-9,5,-1,-9,1,-1,-7,5,8],[5,4,-8,2,-3,-5,1,9,1,2,3,8,-2,-4]],[[-7,6,8,9,10,-9,8,-2,-9,-5,-9,2,10,5],[-7,10,-3,-5,6,-4,5,9,-9,-2,-10,-9,-4,10],[-3,10,7,-3,4,-9,1,-7,9,10,5,-6,-9,-3],[-8,-10,1,10,-8,6,10,-4,-1,7,-7,9,9,6]],[[-2,2,5,2,2,3,4,3,7,5,8,-9,9,6],[3,5,-4,-7,8,4,3,1,-7,1,2,3,8,-5],[-7,-4,-5,-8,-5,-8,6,5,1,5,10,3,2,4],[-5,-4,1,5,-8,-7,-9,7,8,3,8,7,-5,-10]],[[4,6,4,-6,-9,-1,3,9,-4,7,8,9,-1,-4],[7,-5,9,-4,1,-5,10,-7,-7,-7,3,-3,8,-7],[-10,-5,-6,-10,2,-5,4,5,-10,-7,7,6,-9,-10],[-10,-4,-9,-9,-1,-9,5,-8,-6,2,-5,10,2,1]],[[4,-6,10,7,3,4,7,1,-7,-2,1,-8,-3,-10],[2,-6,-5,-3,6,-8,-7,5,8,-7,-4,-10,3,3],[4,-2,-5,5,5,-8,-9,10,-9,-4,-8,3,-2,-6],[9,-2,3,1,4,-9,-5,8,3,2,2,10,8,1]],[[-4,-4,6,-8,-10,6,-5,3,-4,-4,10,1,-3,-1],[6,-1,-8,-5,-3,-3,2,-8,-6,6,3,-9,7,4],[-2,-3,6,-9,10,-9,9,-7,3,7,-8,9,3,4],[-7,4,-3,10,-2,4,-2,-7,6,1,1,7,1,3]],[[-6,-7,-7,-4,7,-2,2,-3,10,5,-3,-5,4,-6],[-10,10,7,-8,-8,5,-4,-4,-2,1,6,7,-4,-8],[4,5,2,-7,3,-3,8,6,-4,10,-9,7,-9,-7],[-9,-5,-8,9,8,-10,3,-3,9,3,-2,-9,-4,-6]],[[-5,7,-9,-8,-5,-6,-5,5,10,-7,7,-4,4,8],[2,-10,1,2,2,-5,-9,9,9,-9,9,-10,7,3],[-7,-7,9,9,-7,-7,3,5,7,3,7,7,-10,-2],[10,8,8,-8,5,8,8,-4,-9,2,-2,-4,-9,-4]],[[-7,-5,4,4,-9,1,-10,9,-4,1,-1,-3,-8,-3],[-7,5,5,-1,-3,3,7,-9,4,-5,10,-6,-8,5],[6,-4,-7,7,1,3,2,8,-1,-6,-3,-3,-8,-4],[-8,4,-7,6,-9,7,2,-2,5,6,6,-1,5,-2]],[[3,-3,4,-4,8,-6,3,-5,-1,-9,-6,2,-7,1],[-9,6,8,2,7,-5,-5,9,4,3,10,2,7,10],[-9,5,-3,-9,-2,-6,-6,-5,-4,9,10,-1,-1,10],[9,1,10,-5,1,-5,4,4,-4,10,-5,4,-10,8]],[[10,-1,-6,8,-10,-9,8,4,7,1,-6,9,-2,7],[-10,3,-2,2,7,-4,-4,8,10,3,1,-9,6,8],[-3,-2,-1,4,9,1,-5,-3,-1,10,-4,-9,6,1],[7,4,6,4,8,3,5,3,1,10,8,3,2,4]],[[1,-4,5,-2,-1,-10,-6,10,7,1,1,9,-1,9],[6,5,-9,8,6,-6,-6,-10,9,4,-3,-5,-6,2],[-9,-3,6,-2,9,-10,-10,4,5,8,3,-2,-7,-1],[-1,2,-5,5,-5,8,-7,-8,5,4,-5,-5,-4,-5]]], dtype = "uint8")#candidate|7343|(16, 4, 14)|const|uint8
bop_7344 = relay.bitwise_xor(var_7342.astype('uint8'), const_7343.astype('uint8')) # shape=(16, 4, 14)
output = relay.Tuple([bop_7344,])
output2 = relay.Tuple([bop_7344,])
func_7347 = relay.Function([var_7342,], output)
mod['func_7347'] = func_7347
mod = relay.transform.InferType()(mod)
var_7348 = relay.var("var_7348", dtype = "uint8", shape = ())#candidate|7348|()|var|uint8
output = func_7347(var_7348)
func_7349 = relay.Function([var_7348], output)
mutated_mod['func_7349'] = func_7349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6472_call = mutated_mod.get_global_var('func_6472')
call_7431 = relay.TupleGetItem(func_6471_call(), 0)
call_7432 = relay.TupleGetItem(func_6472_call(), 0)
func_4353_call = mod.get_global_var('func_4353')
func_4359_call = mutated_mod.get_global_var('func_4359')
const_7437 = relay.const([2,-6,5,-1,-4,-3,9,-4,-3,2,-5,-7,2,3,-1,7,8,-6,-1,-5,-6,-1,-2,-5,-8,-2,-3,3,-4,7,5,-9,-9,6,-10,7,9,4,3,-8,-8,3,1,9,4,-1,1,-2,2,10,-6,1,3,9,-5,-6,-7,-6,-6,-4,-10,7,-2,2,6,-10,-9,10,-6,-9,-5,-6,5,-1,-7,-1,-9,-8,9,6,4,-10,7,-6,-8,-4,1,5,1,8,10,-5,-10,-9,5,-6,3,9,-5,-3,-3,6,-8,-1,-7,-7,10,8,-4,-1,-6,5,1,9,2,-9,-8,8,-5,5,10,3,-3,-8,-1,8,-5,5,1,-4,-6,8,7,2,-7,-8,-10,-4,1,3,-2,9,4,-5,-10,7,-3,1,-3,6,3,-4,2,-7,-2,6,1,-1,-9,-1,-9,-4,5,4,2,5,-1,-10,7,-7,10,-2,9,6,-2,-9,-5,-5,2,-8,9,-2,2,-7,-9,-9,10,-10,5,-8,-2,1,-10,10,6,-6,3,9,-10,-8,1,-8,9,1,-3,-4,-4,6,9,-7,8,-2,-1,-6,-5,10,2,-8,-5,6,6,6,-4,7,2,10,7,-9,-3,9,-1,-8,6,-3,-5,-2,-10,-2,-3,-8,2,5,2,-8,-2,2,6,6,6,-5,-2,-1,-5,7,-3,-5,4,6,5,-8], dtype = "uint64")#candidate|7437|(260,)|const|uint64
var_7438 = relay.var("var_7438", dtype = "float32", shape = (288, 6))#candidate|7438|(288, 6)|var|float32
var_7439 = relay.var("var_7439", dtype = "bool", shape = (24,))#candidate|7439|(24,)|var|bool
call_7436 = relay.TupleGetItem(func_4353_call(relay.reshape(const_7437.astype('uint64'), [5, 4, 13]), relay.reshape(const_7437.astype('uint64'), [5, 4, 13]), relay.reshape(var_7438.astype('float32'), [1728,]), relay.reshape(var_7439.astype('bool'), [24,]), ), 4)
call_7440 = relay.TupleGetItem(func_4359_call(relay.reshape(const_7437.astype('uint64'), [5, 4, 13]), relay.reshape(const_7437.astype('uint64'), [5, 4, 13]), relay.reshape(var_7438.astype('float32'), [1728,]), relay.reshape(var_7439.astype('bool'), [24,]), ), 4)
output = relay.Tuple([call_7431,call_7436,const_7437,var_7438,var_7439,])
output2 = relay.Tuple([call_7432,call_7440,const_7437,var_7438,var_7439,])
func_7449 = relay.Function([var_7438,var_7439,], output)
mod['func_7449'] = func_7449
mod = relay.transform.InferType()(mod)
mutated_mod['func_7449'] = func_7449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7449_call = mutated_mod.get_global_var('func_7449')
var_7451 = relay.var("var_7451", dtype = "float32", shape = (288, 6))#candidate|7451|(288, 6)|var|float32
var_7452 = relay.var("var_7452", dtype = "bool", shape = (24,))#candidate|7452|(24,)|var|bool
call_7450 = func_7449_call(var_7451,var_7452,)
output = call_7450
func_7453 = relay.Function([var_7451,var_7452,], output)
mutated_mod['func_7453'] = func_7453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_7548 = relay.TupleGetItem(func_3074_call(), 0)
call_7549 = relay.TupleGetItem(func_3076_call(), 0)
output = call_7548
output2 = call_7549
func_7553 = relay.Function([], output)
mod['func_7553'] = func_7553
mod = relay.transform.InferType()(mod)
output = func_7553()
func_7554 = relay.Function([], output)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6131_call = mod.get_global_var('func_6131')
func_6132_call = mutated_mod.get_global_var('func_6132')
call_7573 = func_6131_call()
call_7574 = func_6131_call()
uop_7584 = relay.exp(call_7573.astype('float32')) # shape=(110, 4)
uop_7586 = relay.exp(call_7574.astype('float32')) # shape=(110, 4)
output = uop_7584
output2 = uop_7586
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

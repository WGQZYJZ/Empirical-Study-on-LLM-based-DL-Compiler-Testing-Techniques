==========mod==========
#[version = "0.0.5"]
def @func_3900() -> (Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), uint64]) {
  %0 = @func_2840() /* ty=Tensor[(9, 10, 3), float64] */;
  %1 = cast(%0, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %2 = reshape(%1, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %3 = @func_2928(%2) /* ty=(Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) */;
  %4 = %3.1;
  (%0, %4)
}

def @func_6131() -> Tensor[(110, 4), float64] {
  %5 = @func_4194() /* ty=(Tensor[(110, 4), float64],) */;
  %5.0
}

def @func_6428() -> Tensor[(8, 11, 5), uint64] {
  @func_4267() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_5757(%var_5723: uint64, %var_5724: Tensor[(4, 2, 16), uint64], %var_5740: Tensor[(9, 10, 3), float32]) -> (Tensor[(4, 2, 16), uint64], Tensor[(6, 3), int16], Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) {
  %6 = cast(%var_5723, dtype="uint64") /* ty=uint64 */;
  %7 = cast(%var_5724, dtype="uint64") /* ty=Tensor[(4, 2, 16), uint64] */;
  %8 = @func_3766() /* ty=(Tensor[(110, 4), bool], Tensor[(2, 3, 3), float32], Tensor[(6, 3), int16]) */;
  %9 = @func_5452() /* ty=Tensor[(9, 10, 3), float32] */;
  %10 = cast(%var_5740, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%9, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %14 = @func_3467() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %15 = bitwise_and(%6, %7) /* ty=Tensor[(4, 2, 16), uint64] */;
  %16 = %8.2;
  %17 = less(%12, %13) /* ty=Tensor[(9, 10, 3), bool] */;
  %18 = %14.0;
  (%15, %16, %17, %18)
}

def @func_7336(%var_7334: Tensor[(18), int16]) -> (Tensor[(9, 10, 3), float32], Tensor[(2, 3, 3), int16], Tensor[(18), int16]) {
  %19 = cast(%var_7334, dtype="int16") /* ty=Tensor[(18), int16] */;
  %20 = cast(%var_7334, dtype="int16") /* ty=Tensor[(18), int16] */;
  %21 = reshape(%19, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %22 = reshape(%20, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %23 = @func_587(%21, %22) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
  %24 = @func_5989() /* ty=Tensor[(9, 10, 3), float32] */;
  %25 = %23.0;
  (%24, %25, %var_7334)
}

def @func_4601() -> Tensor[(8, 11, 5), uint64] {
  @func_4267() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_4537() -> (Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) {
  %26 = @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */;
  %27 = %26.0;
  %28 = cast(%27, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %29 = sqrt(%28) /* ty=Tensor[(9, 10, 3), float64] */;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %31 = cast(%29, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %32 = cast(%27, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %33 = asin(%30) /* ty=Tensor[(9, 10, 3), float32] */;
  %34 = acosh(%31) /* ty=Tensor[(9, 10, 3), float32] */;
  %35 = asinh(%32) /* ty=Tensor[(9, 10, 3), float32] */;
  (%33, %34, %35)
}

def @func_5452() -> Tensor[(9, 10, 3), float32] {
  %36 = @func_4537() /* ty=(Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) */;
  %36.1
}

def @func_2625() -> (Tensor[(9, 10, 3), float64],) {
  %37 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %38 = %37.2;
  (%38,)
}

def @func_1703(%var_1687: Tensor[(8, 11, 5), float64]) -> (Tensor[(8, 11, 5), uint64],) {
  %39 = cast(%var_1687, dtype="float64") /* ty=Tensor[(8, 11, 5), float64] */;
  %40 = sqrt(%39) /* ty=Tensor[(8, 11, 5), float64] */;
  %41 = cast(%var_1687, dtype="uint64") /* ty=Tensor[(8, 11, 5), uint64] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="uint64") /* ty=Tensor[(8, 11, 5), uint64] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %45 = minimum(%43, %44) /* ty=Tensor[(8, 11, 5), uint64] */;
  (%45,)
}

def @func_3632() -> (Tensor[(110, 4), float64],) {
  %46 = @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */;
  %47 = %46.1;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %49 = log10(%48) /* ty=Tensor[(110, 4), float64] */;
  (%49,)
}

def @func_4267() -> Tensor[(8, 11, 5), uint64] {
  %50 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %50.0
}

def @func_5556(%var_5549: Tensor[(110, 4), float64]) -> (Tensor[(11, 11, 6), float32], Tensor[(726), float32], Tensor[(110, 4), float64], Tensor[(110, 4), float64]) {
  %51 = cast(meta[relay.Constant][0] /* ty=Tensor[(726), float32] */, dtype="float32") /* ty=Tensor[(726), float32] */;
  %52 = reshape(%51, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), float32] */;
  %53 = @func_4194() /* ty=(Tensor[(110, 4), float64],) */;
  %54 = %53.0;
  %55 = cast(%var_5549, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(2), int32] */;
  %57 = cast(%54, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %59 = cast(%var_5549, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %60 = @func_4070(%52) /* ty=Tensor[(11, 11, 6), float32] */;
  %61 = subtract(%57, %58) /* ty=Tensor[(110, 4), float64] */;
  %62 = asinh(%59) /* ty=Tensor[(110, 4), float64] */;
  (%60, meta[relay.Constant][0] /* ty=Tensor[(726), float32] */, %61, %62)
}

def @func_2668(%var_2664: Tensor[(16, 9, 10), int32]) -> Tensor[(16, 9, 10), bool] {
  %63 = cast(%var_2664, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
  %64 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(16, 9, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 9, 10), int32] */, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%65, %66) /* ty=Tensor[(16, 9, 10), bool] */
}

def @func_5972() -> Tensor[(1080, 2), bool] {
  %67 = @func_4430() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */;
  %67.1
}

def @func_4945() -> Tensor[(8, 11, 5), float32] {
  %68 = @func_4274() /* ty=Tensor[(8, 11, 5), uint64] */;
  %69 = cast(%68, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
  cos(%69) /* ty=Tensor[(8, 11, 5), float32] */
}

def @func_7553() -> Tensor[(8, 11, 5), uint64] {
  %70 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %70.0
}

def @func_5597() -> (Tensor[(9, 10, 3), float32],) {
  %71 = @func_5162() /* ty=(Tensor[(9, 10, 3), float32],) */;
  %72 = %71.0;
  (%72,)
}

def @func_2473(%var_2377: Tensor[(1, 270), float64], %var_2396: Tensor[(8, 11, 5), float64], %var_2444: Tensor[(8, 11, 5), float64], %var_2467: Tensor[(810), uint32]) -> (Tensor[(294), uint32], Tensor[(420), uint32], Tensor[(1728, 1), float32], Tensor[(14, 15, 2), float64], Tensor[(8, 11, 5), float32], Tensor[(9, 10, 3), float64], Tensor[(1, 270), float64], Tensor[(8, 11, 5), uint64], Tensor[(15, 13, 10), float64], Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), int16], Tensor[(5, 5, 12), bool], Tensor[(1, 300), bool], Tensor[(18), int16], Tensor[(8, 11, 5), bool], Tensor[(9, 15, 6), float64], Tensor[(810), uint32]) {
  %73 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %74 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(1728, 1), float32] */, dtype="float32") /* ty=Tensor[(1728, 1), float32] */;
  %76 = reshape(%73, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %77 = reshape(%74, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %78 = reshape(%75, newshape=[8, 216]) /* ty=Tensor[(8, 216), float32] */;
  %79 = @func_1908(%76, %77, %78) /* ty=(Tensor[(6, 5, 14), uint32], Tensor[(6, 5, 14), float32], Tensor[(9, 10, 3), float64], Tensor[(294), uint32], Tensor[(8, 216), float32]) */;
  %80 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), uint32] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %81 = reshape(%80, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), float64] */;
  %82 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %83 = %82.1;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
  %85 = cast(%var_2377, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %86 = reshape(%85, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %87 = @func_133(%86) /* ty=(Tensor[(9, 10, 3), float64],) */;
  %88 = cast(%83, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
  %89 = exp(%88) /* ty=Tensor[(8, 11, 5), float32] */;
  %90 = cast(%89, dtype="float64") /* ty=Tensor[(8, 11, 5), float64] */;
  %91 = reshape(%90, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
  %92 = @func_1703(%91) /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %93 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %94 = cast(%var_2377, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %95 = reshape(%94, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %96 = @func_133(%95) /* ty=(Tensor[(9, 10, 3), float64],) */;
  %97 = cast(%89, dtype="float64") /* ty=Tensor[(8, 11, 5), float64] */;
  %98 = acosh(%97) /* ty=Tensor[(8, 11, 5), float64] */;
  %99 = cast(%var_2396, dtype="uint16") /* ty=Tensor[(8, 11, 5), uint16] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="uint16") /* ty=Tensor[(8, 11, 5), uint16] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %103 = multiply(%101, %102) /* ty=Tensor[(8, 11, 5), uint16] */;
  %104 = cast(%98, dtype="int16") /* ty=Tensor[(8, 11, 5), int16] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="int16") /* ty=Tensor[(8, 11, 5), int16] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %108 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 300), bool] */, dtype="bool") /* ty=Tensor[(1, 300), bool] */;
  %109 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 300), bool] */, dtype="bool") /* ty=Tensor[(1, 300), bool] */;
  %110 = cast(meta[relay.Constant][5] /* ty=Tensor[(18), int16] */, dtype="int16") /* ty=Tensor[(18), int16] */;
  %111 = reshape(%108, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
  %112 = reshape(%109, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
  %113 = reshape(%110, newshape=[1, 18]) /* ty=Tensor[(1, 18), int16] */;
  %114 = @func_951(%111, %112, %113) /* ty=(Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) */;
  %115 = cast(%var_2444, dtype="bool") /* ty=Tensor[(8, 11, 5), bool] */;
  %116 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%98, dtype="bool") /* ty=Tensor[(8, 11, 5), bool] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %119 = logical_and(%117, %118) /* ty=Tensor[(8, 11, 5), bool] */;
  %120 = cast(%119, dtype="bool") /* ty=Tensor[(8, 11, 5), bool] */;
  %121 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%98, dtype="bool") /* ty=Tensor[(8, 11, 5), bool] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %124 = cast(%var_2467, dtype="uint32") /* ty=Tensor[(810), uint32] */;
  %125 = reshape(%124, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), uint32] */;
  %126 = @func_1313(%125) /* ty=(Tensor[(9, 15, 6), float64], Tensor[(9, 15, 6), float32]) */;
  %127 = %79.3;
  %128 = @func_1056(%81) /* ty=Tensor[(14, 15, 2), float64] */;
  %129 = tan(%84) /* ty=Tensor[(8, 11, 5), float32] */;
  %130 = %87.0;
  %131 = %92.0;
  %132 = %93.0;
  %133 = %96.0;
  %134 = left_shift(%106, %107) /* ty=Tensor[(8, 11, 5), int16] */;
  %135 = %114.0;
  %136 = greater(%122, %123) /* ty=Tensor[(8, 11, 5), bool] */;
  %137 = %126.0;
  (%127, meta[relay.Constant][2] /* ty=Tensor[(420), uint32] */, meta[relay.Constant][3] /* ty=Tensor[(1728, 1), float32] */, %128, %129, %130, %var_2377, %131, %132, %133, %134, %135, meta[relay.Constant][4] /* ty=Tensor[(1, 300), bool] */, meta[relay.Constant][5] /* ty=Tensor[(18), int16] */, %136, %137, %var_2467)
}

def @func_3497() -> (Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64]) {
  %138 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %139 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %140 = %139.0;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %142 = @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */;
  %143 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %144 = %138.0;
  %145 = atan(%141) /* ty=Tensor[(9, 10, 3), float32] */;
  %146 = %142.0;
  %147 = %143.0;
  (%144, %145, %146, %147)
}

def @func_7124(%var_7086: Tensor[(7, 14, 16), float64], %var_7095: Tensor[(2160), int64], %var_7109: Tensor[(810), uint32]) -> (Tensor[(7, 14, 16), float64], Tensor[(16, 9, 15), int64], int64, Tensor[(2160), int64], Tensor[(9, 15, 6), float64], Tensor[(270), float64], Tensor[(110, 4), float64], Tensor[(810), uint32]) {
  %148 = cast(%var_7086, dtype="float64") /* ty=Tensor[(7, 14, 16), float64] */;
  %149 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %150 = cast(%var_7095, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %151 = reshape(%149, newshape=[]) /* ty=int64 */;
  %152 = reshape(%150, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), int64] */;
  %153 = @func_1375(%151, %152) /* ty=(Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) */;
  %154 = cast(meta[relay.Constant][6] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %155 = cast(meta[relay.Constant][7] /* ty=Tensor[(110, 4), float64] */, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %156 = cast(meta[relay.Constant][7] /* ty=Tensor[(110, 4), float64] */, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %157 = cast(%var_7109, dtype="uint32") /* ty=Tensor[(810), uint32] */;
  %158 = reshape(%154, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %159 = reshape(%155, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
  %160 = reshape(%156, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
  %161 = reshape(%157, newshape=[810]) /* ty=Tensor[(810), uint32] */;
  %162 = @func_2473(%158, %159, %160, %161) /* ty=(Tensor[(294), uint32], Tensor[(420), uint32], Tensor[(1728, 1), float32], Tensor[(14, 15, 2), float64], Tensor[(8, 11, 5), float32], Tensor[(9, 10, 3), float64], Tensor[(1, 270), float64], Tensor[(8, 11, 5), uint64], Tensor[(15, 13, 10), float64], Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), int16], Tensor[(5, 5, 12), bool], Tensor[(1, 300), bool], Tensor[(18), int16], Tensor[(8, 11, 5), bool], Tensor[(9, 15, 6), float64], Tensor[(810), uint32]) */;
  %163 = erf(%148) /* ty=Tensor[(7, 14, 16), float64] */;
  %164 = %153.1;
  %165 = %162.15;
  (%163, %164, 8 /* ty=int64 */, %var_7095, %165, meta[relay.Constant][6] /* ty=Tensor[(270), float64] */, meta[relay.Constant][7] /* ty=Tensor[(110, 4), float64] */, %var_7109)
}

def @func_4406(%var_4393: Tensor[(18), int16], %var_4395: Tensor[(9, 10, 3), float64]) -> (Tensor[(5, 5, 12), float64], Tensor[(300), bool], Tensor[(18), int16], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64]) {
  %166 = cast(meta[relay.Constant][8] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %167 = cast(meta[relay.Constant][8] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %168 = cast(%var_4393, dtype="int16") /* ty=Tensor[(18), int16] */;
  %169 = reshape(%166, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
  %170 = reshape(%167, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
  %171 = reshape(%168, newshape=[1, 18]) /* ty=Tensor[(1, 18), int16] */;
  %172 = @func_951(%169, %170, %171) /* ty=(Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) */;
  %173 = @func_2954() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %174 = %173.0;
  %175 = cast(%var_4395, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%174, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %179 = @func_3632() /* ty=(Tensor[(110, 4), float64],) */;
  %180 = %172.4;
  %181 = add(%177, %178) /* ty=Tensor[(9, 10, 3), float32] */;
  %182 = %179.0;
  (%180, meta[relay.Constant][8] /* ty=Tensor[(300), bool] */, %var_4393, %181, %182)
}

def @func_5813() -> Tensor[(18, 1), int16] {
  %183 = @func_4829() /* ty=(Tensor[(8, 11, 5), float32], Tensor[(8, 11, 5), uint64], Tensor[(2, 3, 3), int16], Tensor[(18, 1), int16]) */;
  %183.3
}

def @func_7057() -> (Tensor[(8, 11, 5), uint64],) {
  %184 = @func_4274() /* ty=Tensor[(8, 11, 5), uint64] */;
  (%184,)
}

def @func_3172() -> (Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) {
  %185 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %186 = cast(meta[relay.Constant][9] /* ty=Tensor[(1080, 2), int64] */, dtype="bool") /* ty=Tensor[(1080, 2), bool] */;
  %187 = cast(3 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %188 = cast(3 /* ty=int64 */, dtype="int32") /* ty=int32 */;
  %189 = cast(meta[relay.Constant][9] /* ty=Tensor[(1080, 2), int64] */, dtype="int32") /* ty=Tensor[(1080, 2), int32] */;
  %190 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %191 = cast(meta[relay.Constant][9] /* ty=Tensor[(1080, 2), int64] */, dtype="int64") /* ty=Tensor[(1080, 2), int64] */;
  %192 = reshape(%190, newshape=[]) /* ty=int64 */;
  %193 = reshape(%191, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), int64] */;
  %194 = @func_1375(%192, %193) /* ty=(Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) */;
  %195 = %194.1;
  %196 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 9, 15), int64] */, dtype="float32") /* ty=Tensor[(16, 9, 15), float32] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%195, dtype="float32") /* ty=Tensor[(16, 9, 15), float32] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %200 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %201 = %185.0;
  %202 = greater_equal(%186, %187) /* ty=Tensor[(1080, 2), bool] */;
  %203 = bitwise_and(%188, %189) /* ty=Tensor[(1080, 2), int32] */;
  %204 = mod(%198, %199) /* ty=Tensor[(16, 9, 15), float32] */;
  %205 = %200.0;
  (%201, %202, %203, %204, %205)
}

def @func_587(%var_553: Tensor[(2, 3, 3), int16], %var_554: Tensor[(2, 3, 3), int16]) -> (Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) {
  %206 = cast(%var_554, dtype="int16") /* ty=Tensor[(2, 3, 3), int16] */;
  %207 = shape_of(%var_553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%var_553, dtype="int16") /* ty=Tensor[(2, 3, 3), int16] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %210 = cast(%var_554, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
  %211 = log2(%210) /* ty=Tensor[(2, 3, 3), float32] */;
  %212 = cast(%var_554, dtype="float64") /* ty=Tensor[(2, 3, 3), float64] */;
  %213 = exp(%212) /* ty=Tensor[(2, 3, 3), float64] */;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
  %215 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%211, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %218 = left_shift(%208, %209) /* ty=Tensor[(2, 3, 3), int16] */;
  %219 = floor_divide(%216, %217) /* ty=Tensor[(2, 3, 3), float32] */;
  (%218, %219)
}

def @func_3054(%var_2985: Tensor[(147, 2), uint32], %var_2986: Tensor[(1728), float32], %var_2993: Tensor[(484), float32], %var_3000: Tensor[(720), uint16], %var_3004: Tensor[(810), uint32]) -> (Tensor[(14, 15, 2), float64], Tensor[(147, 2), uint32], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(4, 11, 11), float64], Tensor[(484), float32], Tensor[(12, 5, 12), bool], Tensor[(720), uint16], Tensor[(9, 15, 6), float32], Tensor[(810), uint32], Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float64], Tensor[(15, 13, 10), float64]) {
  %220 = cast(%var_2985, dtype="uint32") /* ty=Tensor[(147, 2), uint32] */;
  %221 = cast(%var_2986, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %222 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %223 = reshape(%220, newshape=[3, 7, 14]) /* ty=Tensor[(3, 7, 14), uint32] */;
  %224 = reshape(%221, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float32] */;
  %225 = reshape(%222, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %226 = @func_1213(%223, %224, %225) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */;
  %227 = cast(%var_2993, dtype="float32") /* ty=Tensor[(484), float32] */;
  %228 = cast(%var_2993, dtype="float32") /* ty=Tensor[(484), float32] */;
  %229 = reshape(%227, newshape=[4, 11, 11]) /* ty=Tensor[(4, 11, 11), float32] */;
  %230 = reshape(%228, newshape=[4, 11, 11]) /* ty=Tensor[(4, 11, 11), float32] */;
  %231 = @func_2769(%229, %230) /* ty=(Tensor[(4, 11, 11), float64],) */;
  %232 = cast(%var_3000, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %233 = cast(%var_3000, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %234 = reshape(%232, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), uint16] */;
  %235 = reshape(%233, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), uint16] */;
  %236 = @func_665(%234, %235) /* ty=(Tensor[(12, 5, 12), bool],) */;
  %237 = cast(%var_3004, dtype="uint32") /* ty=Tensor[(810), uint32] */;
  %238 = reshape(%237, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), uint32] */;
  %239 = @func_1313(%238) /* ty=(Tensor[(9, 15, 6), float64], Tensor[(9, 15, 6), float32]) */;
  %240 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), float64] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %241 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), float64] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %242 = cast(%var_2986, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %243 = reshape(%240, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %244 = reshape(%241, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %245 = reshape(%242, newshape=[8, 216]) /* ty=Tensor[(8, 216), float32] */;
  %246 = @func_1908(%243, %244, %245) /* ty=(Tensor[(6, 5, 14), uint32], Tensor[(6, 5, 14), float32], Tensor[(9, 10, 3), float64], Tensor[(294), uint32], Tensor[(8, 216), float32]) */;
  %247 = @func_2840() /* ty=Tensor[(9, 10, 3), float64] */;
  %248 = cast(%247, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %249 = cos(%248) /* ty=Tensor[(9, 10, 3), float32] */;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %251 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %252 = %226.3;
  %253 = %231.0;
  %254 = %236.0;
  %255 = %239.1;
  %256 = %246.2;
  %257 = sinh(%250) /* ty=Tensor[(9, 10, 3), float64] */;
  %258 = %251.0;
  (%252, %var_2985, %var_2986, meta[relay.Constant][11] /* ty=Tensor[(420), float64] */, %253, %var_2993, %254, %var_3000, %255, %var_3004, %256, %257, %258)
}

def @func_2954() -> (Tensor[(9, 10, 3), float64],) {
  %259 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %260 = %259.0;
  (%260,)
}

def @func_1725(%var_1714: Tensor[(2, 1, 3), bool], %var_1715: Tensor[(2, 4, 3), bool]) -> (Tensor[(2, 4, 3), bool],) {
  %261 = cast(%var_1714, dtype="bool") /* ty=Tensor[(2, 1, 3), bool] */;
  %262 = cast(%var_1715, dtype="bool") /* ty=Tensor[(2, 4, 3), bool] */;
  %263 = logical_or(%261, %262) /* ty=Tensor[(2, 4, 3), bool] */;
  (%263,)
}

def @func_2647() -> Tensor[(9, 10, 3), float64] {
  %264 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %264.0
}

def @func_6601(%var_6506: Tensor[(864, 2), float32], %var_6507: Tensor[(420), float64], %var_6514: Tensor[(294), uint32], %var_6559: Tensor[(294), float64]) -> (Tensor[(420), float64], Tensor[(864, 2), float32], Tensor[(420), float64], Tensor[(294), int16], Tensor[(8, 11, 5), uint64], Tensor[(18, 1), int16], Tensor[(8, 11, 5), uint64], Tensor[(294), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64], Tensor[(294), float32]) {
  %265 = cast(meta[relay.Constant][12] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %266 = cast(%var_6506, dtype="float32") /* ty=Tensor[(864, 2), float32] */;
  %267 = cast(%var_6507, dtype="float64") /* ty=Tensor[(420), float64] */;
  %268 = reshape(%265, newshape=[3, 7, 14]) /* ty=Tensor[(3, 7, 14), uint32] */;
  %269 = reshape(%266, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float32] */;
  %270 = reshape(%267, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %271 = @func_1213(%268, %269, %270) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */;
  %272 = cast(%var_6514, dtype="int16") /* ty=Tensor[(294), int16] */;
  %273 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(294), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %274 = cast(meta[relay.Constant][12] /* ty=Tensor[(294), uint32] */, dtype="int16") /* ty=Tensor[(294), int16] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?), int16] */;
  %276 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %277 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %278 = cast(%var_6514, dtype="float64") /* ty=Tensor[(294), float64] */;
  %279 = erf(%278) /* ty=Tensor[(294), float64] */;
  %280 = cast(%var_6559, dtype="float32") /* ty=Tensor[(294), float32] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(1), int32] */;
  %282 = cast(%279, dtype="float32") /* ty=Tensor[(294), float32] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?), float32] */;
  %284 = @func_3976() /* ty=(Tensor[(110, 4), float64],) */;
  %285 = @func_6131() /* ty=Tensor[(110, 4), float64] */;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %287 = cast(%279, dtype="float32") /* ty=Tensor[(294), float32] */;
  %288 = %271.4;
  %289 = bitwise_and(%274, %275) /* ty=Tensor[(294), int16] */;
  %290 = %276.0;
  %291 = @func_5813() /* ty=Tensor[(18, 1), int16] */;
  %292 = %277.0;
  %293 = divide(%282, %283) /* ty=Tensor[(294), float32] */;
  %294 = %284.0;
  %295 = @func_2647() /* ty=Tensor[(9, 10, 3), float64] */;
  %296 = asin(%286) /* ty=Tensor[(110, 4), float64] */;
  %297 = acos(%287) /* ty=Tensor[(294), float32] */;
  (%288, %var_6506, %var_6507, %289, %290, %291, %292, %293, %294, %295, %296, %297)
}

def @func_3074() -> (Tensor[(8, 11, 5), uint64],) {
  %298 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %299 = %298.0;
  (%299,)
}

def @func_6766(%var_6759: Tensor[(9, 10, 3), float32]) -> Tensor[(9, 10, 3), bool] {
  %300 = @func_5162() /* ty=(Tensor[(9, 10, 3), float32],) */;
  %301 = %300.0;
  %302 = cast(%var_6759, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%304, %305) /* ty=Tensor[(9, 10, 3), bool] */
}

def @func_7254() -> (Tensor[(110, 4), float64],) {
  %306 = @func_6471() /* ty=(Tensor[(110, 4), float64],) */;
  %307 = %306.0;
  (%307,)
}

def @func_1375(%var_1352: int64, %var_1363: Tensor[(16, 9, 15), int64]) -> (Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) {
  %308 = cast(%var_1352, dtype="bool") /* ty=bool */;
  %309 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 9, 1), int64] */, dtype="bool") /* ty=Tensor[(16, 9, 1), bool] */;
  %310 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 9, 1), int64] */, dtype="int64") /* ty=Tensor[(16, 9, 1), int64] */;
  %311 = cast(%var_1363, dtype="int64") /* ty=Tensor[(16, 9, 15), int64] */;
  %312 = less(%308, %309) /* ty=Tensor[(16, 9, 1), bool] */;
  %313 = multiply(%310, %311) /* ty=Tensor[(16, 9, 15), int64] */;
  (%312, %313)
}

def @func_5062(%var_5050: Tensor[(3, 1, 7), float64], %var_5051: Tensor[(3, 6, 7), float64]) -> (Tensor[(3, 6, 7), float64], Tensor[(3, 6, 7), float64], Tensor[(8, 11, 5), uint64]) {
  %314 = cast(%var_5050, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
  %315 = cast(%var_5051, dtype="float64") /* ty=Tensor[(3, 6, 7), float64] */;
  %316 = cast(%var_5051, dtype="float64") /* ty=Tensor[(3, 6, 7), float64] */;
  %317 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %318 = floor_mod(%314, %315) /* ty=Tensor[(3, 6, 7), float64] */;
  %319 = atanh(%316) /* ty=Tensor[(3, 6, 7), float64] */;
  %320 = %317.1;
  (%318, %319, %320)
}

def @func_3766() -> (Tensor[(110, 4), bool], Tensor[(2, 3, 3), float32], Tensor[(6, 3), int16]) {
  %321 = @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */;
  %322 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 3), int16] */, dtype="int16") /* ty=Tensor[(6, 3), int16] */;
  %323 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 3), int16] */, dtype="int16") /* ty=Tensor[(6, 3), int16] */;
  %324 = reshape(%322, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %325 = reshape(%323, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %326 = @func_587(%324, %325) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
  %327 = %321.1;
  %328 = %326.1;
  (%327, %328, meta[relay.Constant][14] /* ty=Tensor[(6, 3), int16] */)
}

def @func_6471() -> (Tensor[(110, 4), float64],) {
  %329 = @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */;
  %330 = %329.0;
  (%330,)
}

def @func_5341() -> (Tensor[(9, 10, 3), float64],) {
  %331 = @func_3497() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64]) */;
  %332 = %331.0;
  (%332,)
}

def @func_4444() -> Tensor[(8, 11, 5), uint64] {
  %333 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %333.4
}

def @func_6400(%var_6355: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), bool], Tensor[(9, 10, 3), float64], Tensor[(1080, 2), float32], Tensor[(9, 10, 3), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
  %334 = @func_2954() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %335 = %334.0;
  %336 = cast(%var_6355, dtype="int32") /* ty=Tensor[(9, 10, 3), int32] */;
  %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%335, dtype="int32") /* ty=Tensor[(9, 10, 3), int32] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %340 = subtract(%338, %339) /* ty=Tensor[(9, 10, 3), int32] */;
  %341 = cast(%340, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %342 = shape_of(%335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%335, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %345 = cast(%var_6355, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %346 = @func_5636() /* ty=(Tensor[(1080, 2), float32], Tensor[(16, 9, 15), float32]) */;
  %347 = @func_4537() /* ty=(Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) */;
  %348 = cast(meta[relay.Constant][15] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %349 = cast(meta[relay.Constant][15] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %350 = reshape(%348, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %351 = reshape(%349, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %352 = @func_3340(%350, %351) /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1, 12, 16), float32], Tensor[(1080, 2), int32], Tensor[(9, 10, 3), float64], Tensor[(192), int64]) */;
  %353 = greater(%343, %344) /* ty=Tensor[(9, 10, 3), bool] */;
  %354 = log(%345) /* ty=Tensor[(9, 10, 3), float64] */;
  %355 = %346.0;
  %356 = %347.1;
  %357 = %352.1;
  (%353, %354, %355, %356, %357, meta[relay.Constant][15] /* ty=Tensor[(192), float32] */)
}

def @func_4829() -> (Tensor[(8, 11, 5), float32], Tensor[(8, 11, 5), uint64], Tensor[(2, 3, 3), int16], Tensor[(18, 1), int16]) {
  %358 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %359 = %358.0;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
  %361 = cast(meta[relay.Constant][16] /* ty=Tensor[(18, 1), int16] */, dtype="int16") /* ty=Tensor[(18, 1), int16] */;
  %362 = cast(meta[relay.Constant][16] /* ty=Tensor[(18, 1), int16] */, dtype="int16") /* ty=Tensor[(18, 1), int16] */;
  %363 = reshape(%361, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %364 = reshape(%362, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %365 = @func_587(%363, %364) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
  %366 = atanh(%360) /* ty=Tensor[(8, 11, 5), float32] */;
  %367 = @func_4601() /* ty=Tensor[(8, 11, 5), uint64] */;
  %368 = %365.0;
  (%366, %367, %368, meta[relay.Constant][16] /* ty=Tensor[(18, 1), int16] */)
}

def @func_6938() -> (Tensor[(110, 4), float64],) {
  %369 = @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */;
  %370 = %369.0;
  (%370,)
}

def @func_3340(%var_3274: Tensor[(192), float32], %var_3329: Tensor[(192), float32]) -> (Tensor[(8, 11, 5), uint64], Tensor[(1, 12, 16), float32], Tensor[(1080, 2), int32], Tensor[(9, 10, 3), float64], Tensor[(192), int64]) {
  %371 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %372 = cast(%var_3274, dtype="float32") /* ty=Tensor[(192), float32] */;
  %373 = reshape(%372, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %374 = @func_65(%373) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %375 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %376 = @func_2954() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %377 = cast(%var_3329, dtype="int64") /* ty=Tensor[(192), int64] */;
  %378 = shape_of(%var_3274, dtype="int32") /* ty=Tensor[(1), int32] */;
  %379 = cast(%var_3274, dtype="int64") /* ty=Tensor[(192), int64] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?), int64] */;
  %381 = %371.0;
  %382 = %374.0;
  %383 = %375.2;
  %384 = %376.0;
  %385 = multiply(%379, %380) /* ty=Tensor[(192), int64] */;
  (%381, %382, %383, %384, %385)
}

def @func_3849(%var_3791: Tensor[(2160), int64]) -> (Tensor[(8, 11, 5), uint64], Tensor[(16, 9, 15), int64], int64, Tensor[(2160), int64], Tensor[(2, 4, 3), bool], Tensor[(6), bool], Tensor[(8, 11, 5), uint64], Tensor[(8, 11, 5), uint64], Tensor[(24), float64]) {
  %386 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %387 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %388 = cast(%var_3791, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %389 = reshape(%387, newshape=[]) /* ty=int64 */;
  %390 = reshape(%388, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), int64] */;
  %391 = @func_1375(%389, %390) /* ty=(Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) */;
  %392 = cast(meta[relay.Constant][17] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %393 = cast(meta[relay.Constant][18] /* ty=Tensor[(24), bool] */, dtype="bool") /* ty=Tensor[(24), bool] */;
  %394 = reshape(%392, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), bool] */;
  %395 = reshape(%393, newshape=[2, 4, 3]) /* ty=Tensor[(2, 4, 3), bool] */;
  %396 = @func_1725(%394, %395) /* ty=(Tensor[(2, 4, 3), bool],) */;
  %397 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %398 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %399 = cast(meta[relay.Constant][18] /* ty=Tensor[(24), bool] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %400 = atan(%399) /* ty=Tensor[(24), float32] */;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(24), float64] */;
  %402 = %386.0;
  %403 = %391.1;
  %404 = %396.0;
  %405 = %397.0;
  %406 = %398.0;
  %407 = acos(%401) /* ty=Tensor[(24), float64] */;
  (%402, %403, -6 /* ty=int64 */, %var_3791, %404, meta[relay.Constant][17] /* ty=Tensor[(6), bool] */, %405, %406, %407)
}

def @func_7227() -> (Tensor[(110, 4), float64],) {
  %408 = @func_6131() /* ty=Tensor[(110, 4), float64] */;
  %409 = cast(%408, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %410 = log(%409) /* ty=Tensor[(110, 4), float64] */;
  (%410,)
}

def @func_1313(%var_1285: Tensor[(9, 15, 6), uint32]) -> (Tensor[(9, 15, 6), float64], Tensor[(9, 15, 6), float32]) {
  %411 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 15, 6), uint32] */, dtype="bool") /* ty=Tensor[(9, 15, 6), bool] */;
  %412 = shape_of(%var_1285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%var_1285, dtype="bool") /* ty=Tensor[(9, 15, 6), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = not_equal(%413, %414) /* ty=Tensor[(9, 15, 6), bool] */;
  %416 = cast(%415, dtype="float64") /* ty=Tensor[(9, 15, 6), float64] */;
  %417 = cast(%415, dtype="float32") /* ty=Tensor[(9, 15, 6), float32] */;
  %418 = asin(%416) /* ty=Tensor[(9, 15, 6), float64] */;
  %419 = log10(%417) /* ty=Tensor[(9, 15, 6), float32] */;
  (%418, %419)
}

def @func_5162() -> (Tensor[(9, 10, 3), float32],) {
  %420 = @func_3497() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64]) */;
  %421 = %420.1;
  (%421,)
}

def @func_4035(%var_4015: Tensor[(15, 7, 13), float64], %var_4029: Tensor[(1728), float32], %var_4030: Tensor[(1, 420), float64]) -> (Tensor[(15, 7, 13), float64], Tensor[(9, 12, 16), uint16], Tensor[(7, 42), uint32], Tensor[(1728), float32], Tensor[(1, 420), float64]) {
  %422 = cast(%var_4015, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %423 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 42), uint32] */, dtype="uint32") /* ty=Tensor[(7, 42), uint32] */;
  %424 = cast(%var_4029, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %425 = cast(%var_4030, dtype="float64") /* ty=Tensor[(1, 420), float64] */;
  %426 = reshape(%423, newshape=[3, 7, 14]) /* ty=Tensor[(3, 7, 14), uint32] */;
  %427 = reshape(%424, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float32] */;
  %428 = reshape(%425, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %429 = @func_1213(%426, %427, %428) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */;
  %430 = atanh(%422) /* ty=Tensor[(15, 7, 13), float64] */;
  %431 = %429.2;
  (%430, %431, meta[relay.Constant][20] /* ty=Tensor[(7, 42), uint32] */, %var_4029, %var_4030)
}

def @func_7347(%var_7342: uint8) -> (Tensor[(16, 4, 14), uint8],) {
  %432 = cast(%var_7342, dtype="uint8") /* ty=uint8 */;
  %433 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 4, 14), uint8] */, dtype="uint8") /* ty=Tensor[(16, 4, 14), uint8] */;
  %434 = bitwise_xor(%432, %433) /* ty=Tensor[(16, 4, 14), uint8] */;
  (%434,)
}

def @func_4986(%var_4964: Tensor[(14, 4, 6), uint16], %var_4965: Tensor[(14, 4, 6), uint16], %var_4983: Tensor[(3, 18), float64]) -> (Tensor[(14, 4, 6), bool], Tensor[(420), float64], Tensor[(3, 18), float64]) {
  %435 = cast(%var_4965, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
  %436 = shape_of(%var_4964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%var_4964, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %439 = cast(%var_4983, dtype="float64") /* ty=Tensor[(3, 18), float64] */;
  %440 = reshape(%439, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), float64] */;
  %441 = @func_4152(%440) /* ty=(Tensor[(9, 3, 2), float64], Tensor[(14, 15, 2), float64], Tensor[(420), float64]) */;
  %442 = less_equal(%437, %438) /* ty=Tensor[(14, 4, 6), bool] */;
  %443 = %441.2;
  (%442, %443, %var_4983)
}

def @func_6724(%var_6683: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), uint64], Tensor[(1, 12, 16), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float32]) {
  %444 = @func_5341() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %445 = %444.0;
  %446 = cast(%var_6683, dtype="uint64") /* ty=Tensor[(9, 10, 3), uint64] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="uint64") /* ty=Tensor[(9, 10, 3), uint64] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %450 = cast(%445, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %451 = rsqrt(%450) /* ty=Tensor[(9, 10, 3), float64] */;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %453 = reshape(%452, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %454 = @func_6400(%453) /* ty=(Tensor[(9, 10, 3), bool], Tensor[(9, 10, 3), float64], Tensor[(1080, 2), float32], Tensor[(9, 10, 3), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) */;
  %455 = @func_6471() /* ty=(Tensor[(110, 4), float64],) */;
  %456 = cast(%451, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %457 = minimum(%448, %449) /* ty=Tensor[(9, 10, 3), uint64] */;
  %458 = %454.4;
  %459 = %455.0;
  %460 = tan(%456) /* ty=Tensor[(9, 10, 3), float32] */;
  (%457, %458, %459, %460)
}

def @func_4353(%var_4302: Tensor[(5, 4, 13), uint64], %var_4303: Tensor[(5, 4, 13), uint64], %var_4311: Tensor[(1728), float32], %var_4321: Tensor[(24), bool]) -> (Tensor[(9, 12, 16), uint16], Tensor[(1365), float64], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(2, 4, 3), bool], Tensor[(24), bool], Tensor[(11, 11, 6), float32], Tensor[(8, 11, 5), uint64], Tensor[(6, 726), float32], Tensor[(5, 4, 13), uint64], Tensor[(8, 11, 5), uint64], Tensor[(192), int64], Tensor[(192), float32]) {
  %461 = cast(meta[relay.Constant][22] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %462 = cast(%var_4311, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %463 = cast(meta[relay.Constant][23] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %464 = reshape(%461, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %465 = reshape(%462, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
  %466 = reshape(%463, newshape=[1, 420]) /* ty=Tensor[(1, 420), float64] */;
  %467 = @func_4035(%464, %465, %466) /* ty=(Tensor[(15, 7, 13), float64], Tensor[(9, 12, 16), uint16], Tensor[(7, 42), uint32], Tensor[(1728), float32], Tensor[(1, 420), float64]) */;
  %468 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 1), bool] */, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %469 = cast(%var_4321, dtype="bool") /* ty=Tensor[(24), bool] */;
  %470 = reshape(%468, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), bool] */;
  %471 = reshape(%469, newshape=[2, 4, 3]) /* ty=Tensor[(2, 4, 3), bool] */;
  %472 = @func_1725(%470, %471) /* ty=(Tensor[(2, 4, 3), bool],) */;
  %473 = cast(meta[relay.Constant][25] /* ty=Tensor[(726), float32] */, dtype="float32") /* ty=Tensor[(726), float32] */;
  %474 = reshape(%473, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), float32] */;
  %475 = @func_3605() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %476 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 1), bool] */, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %477 = cast(meta[relay.Constant][25] /* ty=Tensor[(726), float32] */, dtype="float32") /* ty=Tensor[(726), float32] */;
  %478 = cast(%var_4303, dtype="uint64") /* ty=Tensor[(5, 4, 13), uint64] */;
  %479 = shape_of(%var_4302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%var_4302, dtype="uint64") /* ty=Tensor[(5, 4, 13), uint64] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %482 = bitwise_or(%480, %481) /* ty=Tensor[(5, 4, 13), uint64] */;
  %483 = cast(%482, dtype="uint64") /* ty=Tensor[(5, 4, 13), uint64] */;
  %484 = shape_of(%var_4303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%var_4303, dtype="uint64") /* ty=Tensor[(5, 4, 13), uint64] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %487 = @func_3605() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %488 = cast(meta[relay.Constant][26] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %489 = cast(meta[relay.Constant][26] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %490 = reshape(%488, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %491 = reshape(%489, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %492 = @func_3340(%490, %491) /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1, 12, 16), float32], Tensor[(1080, 2), int32], Tensor[(9, 10, 3), float64], Tensor[(192), int64]) */;
  %493 = %467.1;
  %494 = %472.0;
  %495 = @func_4070(%474) /* ty=Tensor[(11, 11, 6), float32] */;
  %496 = %475.0;
  %497 = power(%476, %477) /* ty=Tensor[(6, 726), float32] */;
  %498 = bitwise_and(%485, %486) /* ty=Tensor[(5, 4, 13), uint64] */;
  %499 = %487.0;
  %500 = %492.4;
  (%493, meta[relay.Constant][22] /* ty=Tensor[(1365), float64] */, %var_4311, meta[relay.Constant][23] /* ty=Tensor[(420), float64] */, %494, %var_4321, %495, %496, %497, %498, %499, %500, meta[relay.Constant][26] /* ty=Tensor[(192), float32] */)
}

def @func_6828(%var_6807: Tensor[(9, 10, 3), float32]) -> (Tensor[(9, 10, 3), float32], Tensor[(8, 11, 5), uint64]) {
  %501 = @func_6647() /* ty=(Tensor[(9, 10, 3), float32],) */;
  %502 = %501.0;
  %503 = cast(%var_6807, dtype="uint8") /* ty=Tensor[(9, 10, 3), uint8] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="uint8") /* ty=Tensor[(9, 10, 3), uint8] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %507 = bitwise_and(%505, %506) /* ty=Tensor[(9, 10, 3), uint8] */;
  %508 = cast(%502, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %512 = power(%510, %511) /* ty=Tensor[(9, 10, 3), float32] */;
  %513 = @func_5387() /* ty=Tensor[(8, 11, 5), uint64] */;
  (%512, %513)
}

def @func_4274() -> Tensor[(8, 11, 5), uint64] {
  %514 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %514.0
}

def @func_4479() -> (Tensor[(8, 11, 5), uint64],) {
  %515 = @func_4274() /* ty=Tensor[(8, 11, 5), uint64] */;
  (%515,)
}

def @func_5207() -> (Tensor[(9, 10, 3), float64],) {
  %516 = @func_4773() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %517 = %516.0;
  (%517,)
}

def @func_65(%var_62: Tensor[(1, 12, 16), float32]) -> (Tensor[(1, 12, 16), float32],) {
  %518 = cast(%var_62, dtype="float32") /* ty=Tensor[(1, 12, 16), float32] */;
  %519 = tan(%518) /* ty=Tensor[(1, 12, 16), float32] */;
  (%519,)
}

def @func_4152(%var_4142: Tensor[(9, 3, 2), float64]) -> (Tensor[(9, 3, 2), float64], Tensor[(14, 15, 2), float64], Tensor[(420), float64]) {
  %520 = cast(%var_4142, dtype="float64") /* ty=Tensor[(9, 3, 2), float64] */;
  %521 = cast(meta[relay.Constant][27] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %522 = reshape(%521, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), float64] */;
  %523 = sigmoid(%520) /* ty=Tensor[(9, 3, 2), float64] */;
  %524 = @func_1056(%522) /* ty=Tensor[(14, 15, 2), float64] */;
  (%523, %524, meta[relay.Constant][27] /* ty=Tensor[(420), float64] */)
}

def @func_4194() -> (Tensor[(110, 4), float64],) {
  %525 = @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */;
  %526 = %525.1;
  (%526,)
}

def @func_6037(%var_6021: Tensor[(7, 11, 11), float32]) -> (Tensor[(8, 11, 5), uint64], Tensor[(7, 11, 11), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint16], Tensor[(54), float64], Tensor[(7, 11, 11), int32]) {
  %527 = @func_4430() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */;
  %528 = %527.0;
  %529 = cast(%528, dtype="float32") /* ty=Tensor[(7, 11, 11), float32] */;
  %530 = rsqrt(%529) /* ty=Tensor[(7, 11, 11), float32] */;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(7, 11, 11), float64] */;
  %532 = cast(meta[relay.Constant][28] /* ty=Tensor[(336), uint16] */, dtype="uint16") /* ty=Tensor[(336), uint16] */;
  %533 = cast(meta[relay.Constant][28] /* ty=Tensor[(336), uint16] */, dtype="uint16") /* ty=Tensor[(336), uint16] */;
  %534 = cast(meta[relay.Constant][29] /* ty=Tensor[(54), float64] */, dtype="float64") /* ty=Tensor[(54), float64] */;
  %535 = reshape(%532, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint16] */;
  %536 = reshape(%533, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint16] */;
  %537 = reshape(%534, newshape=[3, 18]) /* ty=Tensor[(3, 18), float64] */;
  %538 = @func_4986(%535, %536, %537) /* ty=(Tensor[(14, 4, 6), bool], Tensor[(420), float64], Tensor[(3, 18), float64]) */;
  %539 = cast(%var_6021, dtype="int32") /* ty=Tensor[(7, 11, 11), int32] */;
  %540 = shape_of(%530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%530, dtype="int32") /* ty=Tensor[(7, 11, 11), int32] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %543 = @func_4601() /* ty=Tensor[(8, 11, 5), uint64] */;
  %544 = asin(%531) /* ty=Tensor[(7, 11, 11), float64] */;
  %545 = %538.0;
  %546 = logical_xor(%541, %542) /* ty=Tensor[(7, 11, 11), int32] */;
  (%543, %544, %545, meta[relay.Constant][28] /* ty=Tensor[(336), uint16] */, meta[relay.Constant][29] /* ty=Tensor[(54), float64] */, %546)
}

def @func_1908(%var_1881: Tensor[(6, 5, 14), uint32], %var_1882: Tensor[(6, 5, 14), uint32], %var_1904: Tensor[(8, 216), float32]) -> (Tensor[(6, 5, 14), uint32], Tensor[(6, 5, 14), float32], Tensor[(9, 10, 3), float64], Tensor[(294), uint32], Tensor[(8, 216), float32]) {
  %547 = cast(%var_1882, dtype="uint32") /* ty=Tensor[(6, 5, 14), uint32] */;
  %548 = shape_of(%var_1881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%var_1881, dtype="uint32") /* ty=Tensor[(6, 5, 14), uint32] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %551 = cast(%var_1881, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
  %552 = cast(meta[relay.Constant][30] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %553 = cast(%var_1904, dtype="float32") /* ty=Tensor[(8, 216), float32] */;
  %554 = cast(%var_1881, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
  %555 = reshape(%552, newshape=[3, 7, 14]) /* ty=Tensor[(3, 7, 14), uint32] */;
  %556 = reshape(%553, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float32] */;
  %557 = reshape(%554, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %558 = @func_1213(%555, %556, %557) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */;
  %559 = minimum(%549, %550) /* ty=Tensor[(6, 5, 14), uint32] */;
  %560 = cosh(%551) /* ty=Tensor[(6, 5, 14), float32] */;
  %561 = %558.5;
  (%559, %560, %561, meta[relay.Constant][30] /* ty=Tensor[(294), uint32] */, %var_1904)
}

def @func_3263(%var_3229: Tensor[(8, 14, 4), float32], %var_3253: Tensor[(192), float32]) -> (Tensor[(8, 14, 4), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
  %562 = cast(%var_3229, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %563 = cast(%var_3253, dtype="float32") /* ty=Tensor[(192), float32] */;
  %564 = reshape(%563, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %565 = @func_65(%564) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %566 = sigmoid(%562) /* ty=Tensor[(8, 14, 4), float32] */;
  %567 = %565.0;
  (%566, %567, %var_3253)
}

def @func_951(%var_916: Tensor[(5, 5, 12), bool], %var_917: Tensor[(5, 5, 12), bool], %var_925: Tensor[(1, 18), int16]) -> (Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) {
  %568 = cast(%var_917, dtype="bool") /* ty=Tensor[(5, 5, 12), bool] */;
  %569 = shape_of(%var_916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%var_916, dtype="bool") /* ty=Tensor[(5, 5, 12), bool] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %572 = cast(%var_925, dtype="int16") /* ty=Tensor[(1, 18), int16] */;
  %573 = cast(%var_925, dtype="int16") /* ty=Tensor[(1, 18), int16] */;
  %574 = reshape(%572, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %575 = reshape(%573, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %576 = @func_587(%574, %575) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
  %577 = cast(%var_925, dtype="int16") /* ty=Tensor[(1, 18), int16] */;
  %578 = cast(%var_925, dtype="int16") /* ty=Tensor[(1, 18), int16] */;
  %579 = reshape(%577, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %580 = reshape(%578, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %581 = @func_587(%579, %580) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
  %582 = cast(%var_917, dtype="float64") /* ty=Tensor[(5, 5, 12), float64] */;
  %583 = logical_or(%570, %571) /* ty=Tensor[(5, 5, 12), bool] */;
  %584 = %576.1;
  %585 = %581.0;
  %586 = asin(%582) /* ty=Tensor[(5, 5, 12), float64] */;
  (%583, %584, %var_925, %585, %586)
}

def @func_1056(%var_1050: Tensor[(14, 15, 2), float64]) -> Tensor[(14, 15, 2), float64] {
  %587 = cast(%var_1050, dtype="float64") /* ty=Tensor[(14, 15, 2), float64] */;
  cosh(%587) /* ty=Tensor[(14, 15, 2), float64] */
}

def @func_6452(%var_6449: Tensor[(16, 7, 12), float32]) -> Tensor[(16, 7, 12), float32] {
  %588 = cast(%var_6449, dtype="float32") /* ty=Tensor[(16, 7, 12), float32] */;
  cos(%588) /* ty=Tensor[(16, 7, 12), float32] */
}

def @func_5330(%var_5292: Tensor[(5, 2, 12), float64], %var_5315: Tensor[(1440), int32], %var_5321: Tensor[(440), float64]) -> (Tensor[(5, 2, 12), float64], Tensor[(16, 9, 10), bool], Tensor[(1440), int32], Tensor[(8, 11, 5), uint64], Tensor[(440), float64], Tensor[(9, 10, 3), float64]) {
  %589 = cast(%var_5292, dtype="float64") /* ty=Tensor[(5, 2, 12), float64] */;
  %590 = cast(%var_5315, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %591 = reshape(%590, newshape=[16, 9, 10]) /* ty=Tensor[(16, 9, 10), int32] */;
  %592 = cast(%var_5321, dtype="float64") /* ty=Tensor[(440), float64] */;
  %593 = reshape(%592, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
  %594 = @func_1703(%593) /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %595 = atanh(%589) /* ty=Tensor[(5, 2, 12), float64] */;
  %596 = @func_2668(%591) /* ty=Tensor[(16, 9, 10), bool] */;
  %597 = %594.0;
  %598 = @func_2840() /* ty=Tensor[(9, 10, 3), float64] */;
  (%595, %596, %var_5315, %597, %var_5321, %598)
}

def @func_4430() -> (Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) {
  %599 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 11), float32] */;
  %600 = sqrt(%599) /* ty=Tensor[(7, 11, 11), float32] */;
  %601 = cast(%600, dtype="float64") /* ty=Tensor[(7, 11, 11), float64] */;
  %602 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(7, 11, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 11, 11), float32] */, dtype="float64") /* ty=Tensor[(7, 11, 11), float64] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %605 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %606 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %607 = subtract(%603, %604) /* ty=Tensor[(7, 11, 11), float64] */;
  %608 = %605.1;
  %609 = %606.1;
  (%607, %608, %609)
}

def @func_3976() -> (Tensor[(110, 4), float64],) {
  %610 = @func_3632() /* ty=(Tensor[(110, 4), float64],) */;
  %611 = %610.0;
  (%611,)
}

def @func_4126(%var_4122: Tensor[(300), bool], %var_4123: Tensor[(18), int16]) -> (Tensor[(9, 10, 3), float64], Tensor[(5, 5, 12), bool], Tensor[(300), bool], Tensor[(18), int16]) {
  %612 = @func_2954() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %613 = cast(%var_4122, dtype="bool") /* ty=Tensor[(300), bool] */;
  %614 = cast(%var_4122, dtype="bool") /* ty=Tensor[(300), bool] */;
  %615 = cast(%var_4123, dtype="int16") /* ty=Tensor[(18), int16] */;
  %616 = reshape(%613, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
  %617 = reshape(%614, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
  %618 = reshape(%615, newshape=[1, 18]) /* ty=Tensor[(1, 18), int16] */;
  %619 = @func_951(%616, %617, %618) /* ty=(Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) */;
  %620 = %612.0;
  %621 = %619.0;
  (%620, %621, %var_4122, %var_4123)
}

def @func_2840() -> Tensor[(9, 10, 3), float64] {
  %622 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %622.0
}

def @func_4656(%var_4628: Tensor[(8, 11, 5), uint64], %var_4647: Tensor[(192), float32]) -> (Tensor[(8, 11, 5), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
  %623 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %624 = %623.0;
  %625 = cast(%var_4628, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%624, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %629 = cast(%var_4647, dtype="float32") /* ty=Tensor[(192), float32] */;
  %630 = reshape(%629, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %631 = @func_65(%630) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %632 = power(%627, %628) /* ty=Tensor[(8, 11, 5), float32] */;
  %633 = %631.0;
  (%632, %633, %var_4647)
}

def @func_6647() -> (Tensor[(9, 10, 3), float32],) {
  %634 = @func_5989() /* ty=Tensor[(9, 10, 3), float32] */;
  (%634,)
}

def @func_1213(%var_1136: Tensor[(3, 7, 14), uint32], %var_1159: Tensor[(9, 12, 16), float32], %var_1175: Tensor[(420), float64]) -> (Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) {
  %635 = cast(meta[relay.Constant][32] /* ty=Tensor[(3, 7, 14), uint32] */, dtype="uint32") /* ty=Tensor[(3, 7, 14), uint32] */;
  %636 = shape_of(%var_1136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %637 = cast(%var_1136, dtype="uint32") /* ty=Tensor[(3, 7, 14), uint32] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %639 = cast(meta[relay.Constant][33] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %640 = reshape(%639, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %641 = @func_65(%640) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %642 = %641.0;
  %643 = cast(%642, dtype="uint16") /* ty=Tensor[(1, 12, 16), uint16] */;
  %644 = cast(%var_1159, dtype="uint16") /* ty=Tensor[(9, 12, 16), uint16] */;
  %645 = cast(%var_1175, dtype="float64") /* ty=Tensor[(420), float64] */;
  %646 = reshape(%645, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), float64] */;
  %647 = cast(meta[relay.Constant][34] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %648 = reshape(%647, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %649 = @func_133(%648) /* ty=(Tensor[(9, 10, 3), float64],) */;
  %650 = cast(meta[relay.Constant][34] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %651 = reshape(%650, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %652 = @func_133(%651) /* ty=(Tensor[(9, 10, 3), float64],) */;
  %653 = cast(%642, dtype="float32") /* ty=Tensor[(1, 12, 16), float32] */;
  %654 = reshape(%653, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %655 = @func_65(%654) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %656 = multiply(%637, %638) /* ty=Tensor[(3, 7, 14), uint32] */;
  %657 = add(%643, %644) /* ty=Tensor[(9, 12, 16), uint16] */;
  %658 = @func_1056(%646) /* ty=Tensor[(14, 15, 2), float64] */;
  %659 = %649.0;
  %660 = %652.0;
  %661 = %655.0;
  (%656, meta[relay.Constant][33] /* ty=Tensor[(192), float32] */, %657, %658, %var_1175, %659, meta[relay.Constant][34] /* ty=Tensor[(270), float64] */, %660, %661)
}

def @func_7449(%var_7438: Tensor[(288, 6), float32], %var_7439: Tensor[(24), bool]) -> (Tensor[(110, 4), float64], Tensor[(2, 4, 3), bool], Tensor[(260), uint64], Tensor[(288, 6), float32], Tensor[(24), bool]) {
  %662 = @func_6471() /* ty=(Tensor[(110, 4), float64],) */;
  %663 = cast(meta[relay.Constant][35] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %664 = cast(meta[relay.Constant][35] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %665 = cast(%var_7438, dtype="float32") /* ty=Tensor[(288, 6), float32] */;
  %666 = cast(%var_7439, dtype="bool") /* ty=Tensor[(24), bool] */;
  %667 = reshape(%663, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), uint64] */;
  %668 = reshape(%664, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), uint64] */;
  %669 = reshape(%665, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
  %670 = reshape(%666, newshape=[24]) /* ty=Tensor[(24), bool] */;
  %671 = @func_4353(%667, %668, %669, %670) /* ty=(Tensor[(9, 12, 16), uint16], Tensor[(1365), float64], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(2, 4, 3), bool], Tensor[(24), bool], Tensor[(11, 11, 6), float32], Tensor[(8, 11, 5), uint64], Tensor[(6, 726), float32], Tensor[(5, 4, 13), uint64], Tensor[(8, 11, 5), uint64], Tensor[(192), int64], Tensor[(192), float32]) */;
  %672 = %662.0;
  %673 = %671.4;
  (%672, %673, meta[relay.Constant][35] /* ty=Tensor[(260), uint64] */, %var_7438, %var_7439)
}

def @func_5387() -> Tensor[(8, 11, 5), uint64] {
  %674 = @func_4893() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %674.0
}

def @func_2803(%var_2781: Tensor[(3, 16, 13), float32], %var_2801: Tensor[(1, 192), float32]) -> (Tensor[(3, 16, 13), bool], Tensor[(3, 16, 13), float64], Tensor[(1, 12, 16), float32], Tensor[(1, 192), float32]) {
  %675 = cast(%var_2781, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %676 = acos(%675) /* ty=Tensor[(3, 16, 13), float32] */;
  %677 = cast(%var_2781, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
  %678 = shape_of(%676, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%676, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = cast(%676, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
  %682 = cast(%var_2801, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
  %683 = reshape(%682, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %684 = @func_65(%683) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %685 = greater(%679, %680) /* ty=Tensor[(3, 16, 13), bool] */;
  %686 = sin(%681) /* ty=Tensor[(3, 16, 13), float64] */;
  %687 = %684.0;
  (%685, %686, %687, %var_2801)
}

def @func_133(%var_127: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), float64],) {
  %688 = cast(%var_127, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %689 = erf(%688) /* ty=Tensor[(9, 10, 3), float64] */;
  (%689,)
}

def @func_665(%var_655: Tensor[(12, 5, 12), uint16], %var_656: Tensor[(12, 5, 12), uint16]) -> (Tensor[(12, 5, 12), bool],) {
  %690 = cast(%var_656, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %691 = shape_of(%var_655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_655, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %694 = not_equal(%692, %693) /* ty=Tensor[(12, 5, 12), bool] */;
  (%694,)
}

def @func_4070(%var_4054: Tensor[(11, 11, 6), float32]) -> Tensor[(11, 11, 6), float32] {
  %695 = cast(%var_4054, dtype="float32") /* ty=Tensor[(11, 11, 6), float32] */;
  rsqrt(%695) /* ty=Tensor[(11, 11, 6), float32] */
}

def @main() -> Tensor[(110, 4), float32] {
  %696 = @func_6131() /* ty=Tensor[(110, 4), float64] */;
  %697 = cast(%696, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  exp(%697) /* ty=Tensor[(110, 4), float32] */
}

def @func_4677(%var_4669: Tensor[(720), uint16], %var_4670: Tensor[(810), uint32]) -> (Tensor[(110, 4), float64], Tensor[(420), float64], Tensor[(294), uint32], Tensor[(1728, 1), float32], Tensor[(484), float32], Tensor[(720), uint16], Tensor[(810), uint32]) {
  %698 = @func_4430() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */;
  %699 = cast(meta[relay.Constant][36] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %700 = cast(meta[relay.Constant][37] /* ty=Tensor[(1728, 1), float32] */, dtype="float32") /* ty=Tensor[(1728, 1), float32] */;
  %701 = cast(meta[relay.Constant][38] /* ty=Tensor[(484), float32] */, dtype="float32") /* ty=Tensor[(484), float32] */;
  %702 = cast(%var_4669, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %703 = cast(%var_4670, dtype="uint32") /* ty=Tensor[(810), uint32] */;
  %704 = reshape(%699, newshape=[147, 2]) /* ty=Tensor[(147, 2), uint32] */;
  %705 = reshape(%700, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
  %706 = reshape(%701, newshape=[484]) /* ty=Tensor[(484), float32] */;
  %707 = reshape(%702, newshape=[720]) /* ty=Tensor[(720), uint16] */;
  %708 = reshape(%703, newshape=[810]) /* ty=Tensor[(810), uint32] */;
  %709 = @func_3054(%704, %705, %706, %707, %708) /* ty=(Tensor[(14, 15, 2), float64], Tensor[(147, 2), uint32], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(4, 11, 11), float64], Tensor[(484), float32], Tensor[(12, 5, 12), bool], Tensor[(720), uint16], Tensor[(9, 15, 6), float32], Tensor[(810), uint32], Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float64], Tensor[(15, 13, 10), float64]) */;
  %710 = %698.2;
  %711 = %709.3;
  (%710, %711, meta[relay.Constant][36] /* ty=Tensor[(294), uint32] */, meta[relay.Constant][37] /* ty=Tensor[(1728, 1), float32] */, meta[relay.Constant][38] /* ty=Tensor[(484), float32] */, %var_4669, %var_4670)
}

def @func_3576() -> (Tensor[(8, 11, 5), uint64],) {
  %712 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %713 = %712.0;
  (%713,)
}

def @func_5989() -> Tensor[(9, 10, 3), float32] {
  %714 = @func_5597() /* ty=(Tensor[(9, 10, 3), float32],) */;
  %714.0
}

def @func_3605() -> (Tensor[(8, 11, 5), uint64],) {
  %715 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %716 = %715.1;
  (%716,)
}

def @func_3401() -> (Tensor[(110, 4), float64], Tensor[(110, 4), bool]) {
  %717 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %718 = %717.2;
  %719 = cast(meta[relay.Constant][39] /* ty=Tensor[(110, 4), float64] */, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(2), int32] */;
  %721 = cast(%718, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %723 = cast(meta[relay.Constant][39] /* ty=Tensor[(110, 4), float64] */, dtype="bool") /* ty=Tensor[(110, 4), bool] */;
  %724 = shape_of(%718, dtype="int32") /* ty=Tensor[(2), int32] */;
  %725 = cast(%718, dtype="bool") /* ty=Tensor[(110, 4), bool] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %727 = power(%721, %722) /* ty=Tensor[(110, 4), float64] */;
  %728 = less(%725, %726) /* ty=Tensor[(110, 4), bool] */;
  (%727, %728)
}

def @func_3467() -> (Tensor[(8, 11, 5), uint64],) {
  %729 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %730 = %729.0;
  (%730,)
}

def @func_3109() -> (Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) {
  %731 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %732 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %733 = %731.0;
  %734 = %732.2;
  (%733, %734)
}

def @func_2596() -> (Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) {
  %735 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %736 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %737 = cast(meta[relay.Constant][40] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %738 = reshape(%737, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %739 = @func_133(%738) /* ty=(Tensor[(9, 10, 3), float64],) */;
  %740 = %735.1;
  %741 = %736.2;
  %742 = %739.0;
  (%740, %741, %742, meta[relay.Constant][40] /* ty=Tensor[(270), float64] */)
}

def @func_2769(%var_2733: Tensor[(4, 11, 11), float32], %var_2764: Tensor[(4, 11, 11), float32]) -> (Tensor[(4, 11, 11), float64],) {
  %743 = cast(%var_2733, dtype="float32") /* ty=Tensor[(4, 11, 11), float32] */;
  %744 = acos(%743) /* ty=Tensor[(4, 11, 11), float32] */;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(4, 11, 11), float32] */;
  %746 = log10(%745) /* ty=Tensor[(4, 11, 11), float32] */;
  %747 = cast(%var_2764, dtype="float64") /* ty=Tensor[(4, 11, 11), float64] */;
  %748 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%746, dtype="float64") /* ty=Tensor[(4, 11, 11), float64] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %751 = floor_mod(%749, %750) /* ty=Tensor[(4, 11, 11), float64] */;
  (%751,)
}

def @func_2928(%var_2909: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) {
  %752 = @func_2840() /* ty=Tensor[(9, 10, 3), float64] */;
  %753 = cast(%var_2909, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%752, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %757 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %758 = greater_equal(%755, %756) /* ty=Tensor[(9, 10, 3), bool] */;
  %759 = %757.0;
  (%758, %759)
}

def @func_2271() -> (Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) {
  %760 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 10), float64] */;
  %761 = cast(meta[relay.Constant][42] /* ty=Tensor[(110, 4), float64] */, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %762 = reshape(%761, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
  %763 = @func_1703(%762) /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %764 = log(%760) /* ty=Tensor[(15, 13, 10), float64] */;
  %765 = %763.0;
  (%764, %765, meta[relay.Constant][42] /* ty=Tensor[(110, 4), float64] */)
}

def @func_5636() -> (Tensor[(1080, 2), float32], Tensor[(16, 9, 15), float32]) {
  %766 = @func_4430() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */;
  %767 = %766.1;
  %768 = cast(%767, dtype="float32") /* ty=Tensor[(1080, 2), float32] */;
  %769 = log10(%768) /* ty=Tensor[(1080, 2), float32] */;
  %770 = cast(%769, dtype="float32") /* ty=Tensor[(1080, 2), float32] */;
  %771 = shape_of(%767, dtype="int32") /* ty=Tensor[(2), int32] */;
  %772 = cast(%767, dtype="float32") /* ty=Tensor[(1080, 2), float32] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %774 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %775 = mod(%772, %773) /* ty=Tensor[(1080, 2), float32] */;
  %776 = %774.3;
  (%775, %776)
}

def @func_6103(%var_6090: Tensor[(15, 14, 2), int64]) -> Tensor[(15, 14, 2), bool] {
  %777 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 14, 2), int64] */, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %778 = shape_of(%var_6090, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%var_6090, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%779, %780) /* ty=Tensor[(15, 14, 2), bool] */
}

def @func_4773() -> (Tensor[(9, 10, 3), float64],) {
  %781 = @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */;
  %782 = %781.0;
  (%782,)
}

def @func_4893() -> (Tensor[(8, 11, 5), uint64],) {
  %783 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %784 = %783.0;
  (%784,)
}

def @func_6436() -> (Tensor[(9, 10, 3), float32],) {
  %785 = @func_4537() /* ty=(Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) */;
  %786 = %785.2;
  (%786,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4603() -> Tensor[(8, 11, 5), uint64] {
  @func_4601() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_2931(%var_2929: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) {
  @func_2928(%var_2929) /* ty=(Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) */
}

def @func_4946() -> Tensor[(8, 11, 5), float32] {
  %2 = fn () -> Tensor[(8, 11, 5), float32] {
    %0 = @func_4274() /* ty=Tensor[(8, 11, 5), uint64] */;
    %1 = cast(%0, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
    cos(%1) /* ty=Tensor[(8, 11, 5), float32] */
  };
  %2() /* ty=Tensor[(8, 11, 5), float32] */
}

def @func_6040(%var_6038: Tensor[(7, 11, 11), float32]) -> (Tensor[(8, 11, 5), uint64], Tensor[(7, 11, 11), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint16], Tensor[(54), float64], Tensor[(7, 11, 11), int32]) {
  @func_6037(%var_6038) /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(7, 11, 11), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint16], Tensor[(54), float64], Tensor[(7, 11, 11), int32]) */
}

def @func_4659(%var_4657: Tensor[(8, 11, 5), uint64], %var_4658: Tensor[(192), float32]) -> (Tensor[(8, 11, 5), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
  %14 = fn (%var_4628: Tensor[(8, 11, 5), uint64], %var_4647: Tensor[(192), float32]) -> (Tensor[(8, 11, 5), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
    %3 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
    %4 = %3.0;
    %5 = cast(%var_4628, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
    %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
    %7 = cast(%4, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
    %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %9 = cast(%var_4647, dtype="float32") /* ty=Tensor[(192), float32] */;
    %10 = reshape(%9, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
    %11 = @func_65(%10) /* ty=(Tensor[(1, 12, 16), float32],) */;
    %12 = power(%7, %8) /* ty=Tensor[(8, 11, 5), float32] */;
    %13 = %11.0;
    (%12, %13, %var_4647)
  };
  %14(%var_4657, %var_4658) /* ty=(Tensor[(8, 11, 5), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) */
}

def @func_5636() -> (Tensor[(1080, 2), float32], Tensor[(16, 9, 15), float32]) {
  %15 = @func_4430() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */;
  %16 = %15.1;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(1080, 2), float32] */;
  %18 = log10(%17) /* ty=Tensor[(1080, 2), float32] */;
  %19 = cast(%18, dtype="float32") /* ty=Tensor[(1080, 2), float32] */;
  %20 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
  %21 = cast(%16, dtype="float32") /* ty=Tensor[(1080, 2), float32] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %23 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %24 = mod(%21, %22) /* ty=Tensor[(1080, 2), float32] */;
  %25 = %23.3;
  (%24, %25)
}

def @func_4194() -> (Tensor[(110, 4), float64],) {
  %26 = @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */;
  %27 = %26.1;
  (%27,)
}

def @func_2625() -> (Tensor[(9, 10, 3), float64],) {
  %28 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %29 = %28.2;
  (%29,)
}

def @func_7554() -> Tensor[(8, 11, 5), uint64] {
  %31 = fn () -> Tensor[(8, 11, 5), uint64] {
    %30 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
    %30.0
  };
  %31() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_4267() -> Tensor[(8, 11, 5), uint64] {
  %32 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %32.0
}

def @func_6940() -> (Tensor[(110, 4), float64],) {
  @func_6938() /* ty=(Tensor[(110, 4), float64],) */
}

def @func_5762(%var_5759: uint64, %var_5760: Tensor[(4, 2, 16), uint64], %var_5761: Tensor[(9, 10, 3), float32]) -> (Tensor[(4, 2, 16), uint64], Tensor[(6, 3), int16], Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) {
  @func_5757(%var_5759, %var_5760, %var_5761) /* ty=(Tensor[(4, 2, 16), uint64], Tensor[(6, 3), int16], Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) */
}

def @func_5065(%var_5063: Tensor[(3, 1, 7), float64], %var_5064: Tensor[(3, 6, 7), float64]) -> (Tensor[(3, 6, 7), float64], Tensor[(3, 6, 7), float64], Tensor[(8, 11, 5), uint64]) {
  %40 = fn (%var_5050: Tensor[(3, 1, 7), float64], %var_5051: Tensor[(3, 6, 7), float64]) -> (Tensor[(3, 6, 7), float64], Tensor[(3, 6, 7), float64], Tensor[(8, 11, 5), uint64]) {
    %33 = cast(%var_5050, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
    %34 = cast(%var_5051, dtype="float64") /* ty=Tensor[(3, 6, 7), float64] */;
    %35 = cast(%var_5051, dtype="float64") /* ty=Tensor[(3, 6, 7), float64] */;
    %36 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
    %37 = floor_mod(%33, %34) /* ty=Tensor[(3, 6, 7), float64] */;
    %38 = atanh(%35) /* ty=Tensor[(3, 6, 7), float64] */;
    %39 = %36.1;
    (%37, %38, %39)
  };
  %40(%var_5063, %var_5064) /* ty=(Tensor[(3, 6, 7), float64], Tensor[(3, 6, 7), float64], Tensor[(8, 11, 5), uint64]) */
}

def @func_3578() -> (Tensor[(8, 11, 5), uint64],) {
  @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */
}

def @func_4895() -> (Tensor[(8, 11, 5), uint64],) {
  @func_4893() /* ty=(Tensor[(8, 11, 5), uint64],) */
}

def @func_5638() -> (Tensor[(1080, 2), float32], Tensor[(16, 9, 15), float32]) {
  @func_5636() /* ty=(Tensor[(1080, 2), float32], Tensor[(16, 9, 15), float32]) */
}

def @func_3172() -> (Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) {
  %41 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %42 = cast(meta[relay.Constant][0] /* ty=Tensor[(1080, 2), int64] */, dtype="bool") /* ty=Tensor[(1080, 2), bool] */;
  %43 = cast(3 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %44 = cast(3 /* ty=int64 */, dtype="int32") /* ty=int32 */;
  %45 = cast(meta[relay.Constant][0] /* ty=Tensor[(1080, 2), int64] */, dtype="int32") /* ty=Tensor[(1080, 2), int32] */;
  %46 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %47 = cast(meta[relay.Constant][0] /* ty=Tensor[(1080, 2), int64] */, dtype="int64") /* ty=Tensor[(1080, 2), int64] */;
  %48 = reshape(%46, newshape=[]) /* ty=int64 */;
  %49 = reshape(%47, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), int64] */;
  %50 = @func_1375(%48, %49) /* ty=(Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) */;
  %51 = %50.1;
  %52 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 9, 15), int64] */, dtype="float32") /* ty=Tensor[(16, 9, 15), float32] */;
  %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%51, dtype="float32") /* ty=Tensor[(16, 9, 15), float32] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %56 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %57 = %41.0;
  %58 = greater_equal(%42, %43) /* ty=Tensor[(1080, 2), bool] */;
  %59 = bitwise_and(%44, %45) /* ty=Tensor[(1080, 2), int32] */;
  %60 = mod(%54, %55) /* ty=Tensor[(16, 9, 15), float32] */;
  %61 = %56.0;
  (%57, %58, %59, %60, %61)
}

def @func_3901() -> (Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), uint64]) {
  %67 = fn () -> (Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), uint64]) {
    %62 = @func_2840() /* ty=Tensor[(9, 10, 3), float64] */;
    %63 = cast(%62, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
    %64 = reshape(%63, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
    %65 = @func_2928(%64) /* ty=(Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) */;
    %66 = %65.1;
    (%62, %66)
  };
  %67() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), uint64]) */
}

def @func_4035(%var_4015: Tensor[(15, 7, 13), float64], %var_4029: Tensor[(1728), float32], %var_4030: Tensor[(1, 420), float64]) -> (Tensor[(15, 7, 13), float64], Tensor[(9, 12, 16), uint16], Tensor[(7, 42), uint32], Tensor[(1728), float32], Tensor[(1, 420), float64]) {
  %68 = cast(%var_4015, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 42), uint32] */, dtype="uint32") /* ty=Tensor[(7, 42), uint32] */;
  %70 = cast(%var_4029, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %71 = cast(%var_4030, dtype="float64") /* ty=Tensor[(1, 420), float64] */;
  %72 = reshape(%69, newshape=[3, 7, 14]) /* ty=Tensor[(3, 7, 14), uint32] */;
  %73 = reshape(%70, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float32] */;
  %74 = reshape(%71, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %75 = @func_1213(%72, %73, %74) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */;
  %76 = atanh(%68) /* ty=Tensor[(15, 7, 13), float64] */;
  %77 = %75.2;
  (%76, %77, meta[relay.Constant][2] /* ty=Tensor[(7, 42), uint32] */, %var_4029, %var_4030)
}

def @func_3976() -> (Tensor[(110, 4), float64],) {
  %78 = @func_3632() /* ty=(Tensor[(110, 4), float64],) */;
  %79 = %78.0;
  (%79,)
}

def @func_7449(%var_7438: Tensor[(288, 6), float32], %var_7439: Tensor[(24), bool]) -> (Tensor[(110, 4), float64], Tensor[(2, 4, 3), bool], Tensor[(260), uint64], Tensor[(288, 6), float32], Tensor[(24), bool]) {
  %80 = @func_6471() /* ty=(Tensor[(110, 4), float64],) */;
  %81 = cast(meta[relay.Constant][3] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %82 = cast(meta[relay.Constant][3] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %83 = cast(%var_7438, dtype="float32") /* ty=Tensor[(288, 6), float32] */;
  %84 = cast(%var_7439, dtype="bool") /* ty=Tensor[(24), bool] */;
  %85 = reshape(%81, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), uint64] */;
  %86 = reshape(%82, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), uint64] */;
  %87 = reshape(%83, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
  %88 = reshape(%84, newshape=[24]) /* ty=Tensor[(24), bool] */;
  %89 = @func_4353(%85, %86, %87, %88) /* ty=(Tensor[(9, 12, 16), uint16], Tensor[(1365), float64], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(2, 4, 3), bool], Tensor[(24), bool], Tensor[(11, 11, 6), float32], Tensor[(8, 11, 5), uint64], Tensor[(6, 726), float32], Tensor[(5, 4, 13), uint64], Tensor[(8, 11, 5), uint64], Tensor[(192), int64], Tensor[(192), float32]) */;
  %90 = %80.0;
  %91 = %89.4;
  (%90, %91, meta[relay.Constant][3] /* ty=Tensor[(260), uint64] */, %var_7438, %var_7439)
}

def @func_1059(%var_1057: Tensor[(14, 15, 2), float64]) -> Tensor[(14, 15, 2), float64] {
  @func_1056(%var_1057) /* ty=Tensor[(14, 15, 2), float64] */
}

def @func_3468() -> (Tensor[(8, 11, 5), uint64],) {
  %94 = fn () -> (Tensor[(8, 11, 5), uint64],) {
    %92 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
    %93 = %92.0;
    (%93,)
  };
  %94() /* ty=(Tensor[(8, 11, 5), uint64],) */
}

def @func_3074() -> (Tensor[(8, 11, 5), uint64],) {
  %95 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %96 = %95.0;
  (%96,)
}

def @func_5341() -> (Tensor[(9, 10, 3), float64],) {
  %97 = @func_3497() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64]) */;
  %98 = %97.0;
  (%98,)
}

def @func_3340(%var_3274: Tensor[(192), float32], %var_3329: Tensor[(192), float32]) -> (Tensor[(8, 11, 5), uint64], Tensor[(1, 12, 16), float32], Tensor[(1080, 2), int32], Tensor[(9, 10, 3), float64], Tensor[(192), int64]) {
  %99 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %100 = cast(%var_3274, dtype="float32") /* ty=Tensor[(192), float32] */;
  %101 = reshape(%100, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %102 = @func_65(%101) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %103 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %104 = @func_2954() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %105 = cast(%var_3329, dtype="int64") /* ty=Tensor[(192), int64] */;
  %106 = shape_of(%var_3274, dtype="int32") /* ty=Tensor[(1), int32] */;
  %107 = cast(%var_3274, dtype="int64") /* ty=Tensor[(192), int64] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?), int64] */;
  %109 = %99.0;
  %110 = %102.0;
  %111 = %103.2;
  %112 = %104.0;
  %113 = multiply(%107, %108) /* ty=Tensor[(192), int64] */;
  (%109, %110, %111, %112, %113)
}

def @func_4073(%var_4071: Tensor[(11, 11, 6), float32]) -> Tensor[(11, 11, 6), float32] {
  @func_4070(%var_4071) /* ty=Tensor[(11, 11, 6), float32] */
}

def @func_3263(%var_3229: Tensor[(8, 14, 4), float32], %var_3253: Tensor[(192), float32]) -> (Tensor[(8, 14, 4), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
  %114 = cast(%var_3229, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %115 = cast(%var_3253, dtype="float32") /* ty=Tensor[(192), float32] */;
  %116 = reshape(%115, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %117 = @func_65(%116) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %118 = sigmoid(%114) /* ty=Tensor[(8, 14, 4), float32] */;
  %119 = %117.0;
  (%118, %119, %var_3253)
}

def @func_3768() -> (Tensor[(110, 4), bool], Tensor[(2, 3, 3), float32], Tensor[(6, 3), int16]) {
  @func_3766() /* ty=(Tensor[(110, 4), bool], Tensor[(2, 3, 3), float32], Tensor[(6, 3), int16]) */
}

def @func_4130(%var_4128: Tensor[(300), bool], %var_4129: Tensor[(18), int16]) -> (Tensor[(9, 10, 3), float64], Tensor[(5, 5, 12), bool], Tensor[(300), bool], Tensor[(18), int16]) {
  @func_4126(%var_4128, %var_4129) /* ty=(Tensor[(9, 10, 3), float64], Tensor[(5, 5, 12), bool], Tensor[(300), bool], Tensor[(18), int16]) */
}

def @func_3060(%var_3055: Tensor[(147, 2), uint32], %var_3056: Tensor[(1728), float32], %var_3057: Tensor[(484), float32], %var_3058: Tensor[(720), uint16], %var_3059: Tensor[(810), uint32]) -> (Tensor[(14, 15, 2), float64], Tensor[(147, 2), uint32], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(4, 11, 11), float64], Tensor[(484), float32], Tensor[(12, 5, 12), bool], Tensor[(720), uint16], Tensor[(9, 15, 6), float32], Tensor[(810), uint32], Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float64], Tensor[(15, 13, 10), float64]) {
  %159 = fn (%var_2985: Tensor[(147, 2), uint32], %var_2986: Tensor[(1728), float32], %var_2993: Tensor[(484), float32], %var_3000: Tensor[(720), uint16], %var_3004: Tensor[(810), uint32]) -> (Tensor[(14, 15, 2), float64], Tensor[(147, 2), uint32], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(4, 11, 11), float64], Tensor[(484), float32], Tensor[(12, 5, 12), bool], Tensor[(720), uint16], Tensor[(9, 15, 6), float32], Tensor[(810), uint32], Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float64], Tensor[(15, 13, 10), float64]) {
    %120 = cast(%var_2985, dtype="uint32") /* ty=Tensor[(147, 2), uint32] */;
    %121 = cast(%var_2986, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %123 = reshape(%120, newshape=[3, 7, 14]) /* ty=Tensor[(3, 7, 14), uint32] */;
    %124 = reshape(%121, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float32] */;
    %125 = reshape(%122, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %126 = @func_1213(%123, %124, %125) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */;
    %127 = cast(%var_2993, dtype="float32") /* ty=Tensor[(484), float32] */;
    %128 = cast(%var_2993, dtype="float32") /* ty=Tensor[(484), float32] */;
    %129 = reshape(%127, newshape=[4, 11, 11]) /* ty=Tensor[(4, 11, 11), float32] */;
    %130 = reshape(%128, newshape=[4, 11, 11]) /* ty=Tensor[(4, 11, 11), float32] */;
    %131 = @func_2769(%129, %130) /* ty=(Tensor[(4, 11, 11), float64],) */;
    %132 = cast(%var_3000, dtype="uint16") /* ty=Tensor[(720), uint16] */;
    %133 = cast(%var_3000, dtype="uint16") /* ty=Tensor[(720), uint16] */;
    %134 = reshape(%132, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), uint16] */;
    %135 = reshape(%133, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), uint16] */;
    %136 = @func_665(%134, %135) /* ty=(Tensor[(12, 5, 12), bool],) */;
    %137 = cast(%var_3004, dtype="uint32") /* ty=Tensor[(810), uint32] */;
    %138 = reshape(%137, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), uint32] */;
    %139 = @func_1313(%138) /* ty=(Tensor[(9, 15, 6), float64], Tensor[(9, 15, 6), float32]) */;
    %140 = cast(meta[relay.Constant][4] /* ty=Tensor[(420), float64] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %141 = cast(meta[relay.Constant][4] /* ty=Tensor[(420), float64] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %142 = cast(%var_2986, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %143 = reshape(%140, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
    %144 = reshape(%141, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
    %145 = reshape(%142, newshape=[8, 216]) /* ty=Tensor[(8, 216), float32] */;
    %146 = @func_1908(%143, %144, %145) /* ty=(Tensor[(6, 5, 14), uint32], Tensor[(6, 5, 14), float32], Tensor[(9, 10, 3), float64], Tensor[(294), uint32], Tensor[(8, 216), float32]) */;
    %147 = @func_2840() /* ty=Tensor[(9, 10, 3), float64] */;
    %148 = cast(%147, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
    %149 = cos(%148) /* ty=Tensor[(9, 10, 3), float32] */;
    %150 = cast(%149, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
    %151 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
    %152 = %126.3;
    %153 = %131.0;
    %154 = %136.0;
    %155 = %139.1;
    %156 = %146.2;
    %157 = sinh(%150) /* ty=Tensor[(9, 10, 3), float64] */;
    %158 = %151.0;
    (%152, %var_2985, %var_2986, meta[relay.Constant][4] /* ty=Tensor[(420), float64] */, %153, %var_2993, %154, %var_3000, %155, %var_3004, %156, %157, %158)
  };
  %159(%var_3055, %var_3056, %var_3057, %var_3058, %var_3059) /* ty=(Tensor[(14, 15, 2), float64], Tensor[(147, 2), uint32], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(4, 11, 11), float64], Tensor[(484), float32], Tensor[(12, 5, 12), bool], Tensor[(720), uint16], Tensor[(9, 15, 6), float32], Tensor[(810), uint32], Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float64], Tensor[(15, 13, 10), float64]) */
}

def @func_590(%var_588: Tensor[(2, 3, 3), int16], %var_589: Tensor[(2, 3, 3), int16]) -> (Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) {
  %174 = fn (%var_553: Tensor[(2, 3, 3), int16], %var_554: Tensor[(2, 3, 3), int16]) -> (Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) {
    %160 = cast(%var_554, dtype="int16") /* ty=Tensor[(2, 3, 3), int16] */;
    %161 = shape_of(%var_553, dtype="int32") /* ty=Tensor[(3), int32] */;
    %162 = cast(%var_553, dtype="int16") /* ty=Tensor[(2, 3, 3), int16] */;
    %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %164 = cast(%var_554, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
    %165 = log2(%164) /* ty=Tensor[(2, 3, 3), float32] */;
    %166 = cast(%var_554, dtype="float64") /* ty=Tensor[(2, 3, 3), float64] */;
    %167 = exp(%166) /* ty=Tensor[(2, 3, 3), float64] */;
    %168 = cast(%167, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
    %169 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %170 = cast(%165, dtype="float32") /* ty=Tensor[(2, 3, 3), float32] */;
    %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %172 = left_shift(%162, %163) /* ty=Tensor[(2, 3, 3), int16] */;
    %173 = floor_divide(%170, %171) /* ty=Tensor[(2, 3, 3), float32] */;
    (%172, %173)
  };
  %174(%var_588, %var_589) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */
}

def @func_4274() -> Tensor[(8, 11, 5), uint64] {
  %175 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %175.0
}

def @func_4991(%var_4988: Tensor[(14, 4, 6), uint16], %var_4989: Tensor[(14, 4, 6), uint16], %var_4990: Tensor[(3, 18), float64]) -> (Tensor[(14, 4, 6), bool], Tensor[(420), float64], Tensor[(3, 18), float64]) {
  @func_4986(%var_4988, %var_4989, %var_4990) /* ty=(Tensor[(14, 4, 6), bool], Tensor[(420), float64], Tensor[(3, 18), float64]) */
}

def @func_3606() -> (Tensor[(8, 11, 5), uint64],) {
  %178 = fn () -> (Tensor[(8, 11, 5), uint64],) {
    %176 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
    %177 = %176.1;
    (%177,)
  };
  %178() /* ty=(Tensor[(8, 11, 5), uint64],) */
}

def @func_2478(%var_2474: Tensor[(1, 270), float64], %var_2475: Tensor[(8, 11, 5), float64], %var_2476: Tensor[(8, 11, 5), float64], %var_2477: Tensor[(810), uint32]) -> (Tensor[(294), uint32], Tensor[(420), uint32], Tensor[(1728, 1), float32], Tensor[(14, 15, 2), float64], Tensor[(8, 11, 5), float32], Tensor[(9, 10, 3), float64], Tensor[(1, 270), float64], Tensor[(8, 11, 5), uint64], Tensor[(15, 13, 10), float64], Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), int16], Tensor[(5, 5, 12), bool], Tensor[(1, 300), bool], Tensor[(18), int16], Tensor[(8, 11, 5), bool], Tensor[(9, 15, 6), float64], Tensor[(810), uint32]) {
  %244 = fn (%var_2377: Tensor[(1, 270), float64], %var_2396: Tensor[(8, 11, 5), float64], %var_2444: Tensor[(8, 11, 5), float64], %var_2467: Tensor[(810), uint32]) -> (Tensor[(294), uint32], Tensor[(420), uint32], Tensor[(1728, 1), float32], Tensor[(14, 15, 2), float64], Tensor[(8, 11, 5), float32], Tensor[(9, 10, 3), float64], Tensor[(1, 270), float64], Tensor[(8, 11, 5), uint64], Tensor[(15, 13, 10), float64], Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), int16], Tensor[(5, 5, 12), bool], Tensor[(1, 300), bool], Tensor[(18), int16], Tensor[(8, 11, 5), bool], Tensor[(9, 15, 6), float64], Tensor[(810), uint32]) {
    %179 = cast(meta[relay.Constant][5] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %180 = cast(meta[relay.Constant][5] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %181 = cast(meta[relay.Constant][6] /* ty=Tensor[(1728, 1), float32] */, dtype="float32") /* ty=Tensor[(1728, 1), float32] */;
    %182 = reshape(%179, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
    %183 = reshape(%180, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
    %184 = reshape(%181, newshape=[8, 216]) /* ty=Tensor[(8, 216), float32] */;
    %185 = @func_1908(%182, %183, %184) /* ty=(Tensor[(6, 5, 14), uint32], Tensor[(6, 5, 14), float32], Tensor[(9, 10, 3), float64], Tensor[(294), uint32], Tensor[(8, 216), float32]) */;
    %186 = cast(meta[relay.Constant][5] /* ty=Tensor[(420), uint32] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %187 = reshape(%186, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), float64] */;
    %188 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
    %189 = %188.1;
    %190 = cast(%189, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
    %191 = cast(%var_2377, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
    %192 = reshape(%191, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
    %193 = @func_133(%192) /* ty=(Tensor[(9, 10, 3), float64],) */;
    %194 = cast(%189, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
    %195 = exp(%194) /* ty=Tensor[(8, 11, 5), float32] */;
    %196 = cast(%195, dtype="float64") /* ty=Tensor[(8, 11, 5), float64] */;
    %197 = reshape(%196, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
    %198 = @func_1703(%197) /* ty=(Tensor[(8, 11, 5), uint64],) */;
    %199 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
    %200 = cast(%var_2377, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
    %201 = reshape(%200, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
    %202 = @func_133(%201) /* ty=(Tensor[(9, 10, 3), float64],) */;
    %203 = cast(%195, dtype="float64") /* ty=Tensor[(8, 11, 5), float64] */;
    %204 = acosh(%203) /* ty=Tensor[(8, 11, 5), float64] */;
    %205 = cast(%var_2396, dtype="uint16") /* ty=Tensor[(8, 11, 5), uint16] */;
    %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %207 = cast(%204, dtype="uint16") /* ty=Tensor[(8, 11, 5), uint16] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %209 = multiply(%207, %208) /* ty=Tensor[(8, 11, 5), uint16] */;
    %210 = cast(%204, dtype="int16") /* ty=Tensor[(8, 11, 5), int16] */;
    %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
    %212 = cast(%209, dtype="int16") /* ty=Tensor[(8, 11, 5), int16] */;
    %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %214 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 300), bool] */, dtype="bool") /* ty=Tensor[(1, 300), bool] */;
    %215 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 300), bool] */, dtype="bool") /* ty=Tensor[(1, 300), bool] */;
    %216 = cast(meta[relay.Constant][8] /* ty=Tensor[(18), int16] */, dtype="int16") /* ty=Tensor[(18), int16] */;
    %217 = reshape(%214, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
    %218 = reshape(%215, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
    %219 = reshape(%216, newshape=[1, 18]) /* ty=Tensor[(1, 18), int16] */;
    %220 = @func_951(%217, %218, %219) /* ty=(Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) */;
    %221 = cast(%var_2444, dtype="bool") /* ty=Tensor[(8, 11, 5), bool] */;
    %222 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %223 = cast(%204, dtype="bool") /* ty=Tensor[(8, 11, 5), bool] */;
    %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %225 = logical_and(%223, %224) /* ty=Tensor[(8, 11, 5), bool] */;
    %226 = cast(%225, dtype="bool") /* ty=Tensor[(8, 11, 5), bool] */;
    %227 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%204, dtype="bool") /* ty=Tensor[(8, 11, 5), bool] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %230 = cast(%var_2467, dtype="uint32") /* ty=Tensor[(810), uint32] */;
    %231 = reshape(%230, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), uint32] */;
    %232 = @func_1313(%231) /* ty=(Tensor[(9, 15, 6), float64], Tensor[(9, 15, 6), float32]) */;
    %233 = %185.3;
    %234 = @func_1056(%187) /* ty=Tensor[(14, 15, 2), float64] */;
    %235 = tan(%190) /* ty=Tensor[(8, 11, 5), float32] */;
    %236 = %193.0;
    %237 = %198.0;
    %238 = %199.0;
    %239 = %202.0;
    %240 = left_shift(%212, %213) /* ty=Tensor[(8, 11, 5), int16] */;
    %241 = %220.0;
    %242 = greater(%228, %229) /* ty=Tensor[(8, 11, 5), bool] */;
    %243 = %232.0;
    (%233, meta[relay.Constant][5] /* ty=Tensor[(420), uint32] */, meta[relay.Constant][6] /* ty=Tensor[(1728, 1), float32] */, %234, %235, %236, %var_2377, %237, %238, %239, %240, %241, meta[relay.Constant][7] /* ty=Tensor[(1, 300), bool] */, meta[relay.Constant][8] /* ty=Tensor[(18), int16] */, %242, %243, %var_2467)
  };
  %244(%var_2474, %var_2475, %var_2476, %var_2477) /* ty=(Tensor[(294), uint32], Tensor[(420), uint32], Tensor[(1728, 1), float32], Tensor[(14, 15, 2), float64], Tensor[(8, 11, 5), float32], Tensor[(9, 10, 3), float64], Tensor[(1, 270), float64], Tensor[(8, 11, 5), uint64], Tensor[(15, 13, 10), float64], Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), int16], Tensor[(5, 5, 12), bool], Tensor[(1, 300), bool], Tensor[(18), int16], Tensor[(8, 11, 5), bool], Tensor[(9, 15, 6), float64], Tensor[(810), uint32]) */
}

def @func_5330(%var_5292: Tensor[(5, 2, 12), float64], %var_5315: Tensor[(1440), int32], %var_5321: Tensor[(440), float64]) -> (Tensor[(5, 2, 12), float64], Tensor[(16, 9, 10), bool], Tensor[(1440), int32], Tensor[(8, 11, 5), uint64], Tensor[(440), float64], Tensor[(9, 10, 3), float64]) {
  %245 = cast(%var_5292, dtype="float64") /* ty=Tensor[(5, 2, 12), float64] */;
  %246 = cast(%var_5315, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %247 = reshape(%246, newshape=[16, 9, 10]) /* ty=Tensor[(16, 9, 10), int32] */;
  %248 = cast(%var_5321, dtype="float64") /* ty=Tensor[(440), float64] */;
  %249 = reshape(%248, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
  %250 = @func_1703(%249) /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %251 = atanh(%245) /* ty=Tensor[(5, 2, 12), float64] */;
  %252 = @func_2668(%247) /* ty=Tensor[(16, 9, 10), bool] */;
  %253 = %250.0;
  %254 = @func_2840() /* ty=Tensor[(9, 10, 3), float64] */;
  (%251, %252, %var_5315, %253, %var_5321, %254)
}

def @func_1728(%var_1726: Tensor[(2, 1, 3), bool], %var_1727: Tensor[(2, 4, 3), bool]) -> (Tensor[(2, 4, 3), bool],) {
  %258 = fn (%var_1714: Tensor[(2, 1, 3), bool], %var_1715: Tensor[(2, 4, 3), bool]) -> (Tensor[(2, 4, 3), bool],) {
    %255 = cast(%var_1714, dtype="bool") /* ty=Tensor[(2, 1, 3), bool] */;
    %256 = cast(%var_1715, dtype="bool") /* ty=Tensor[(2, 4, 3), bool] */;
    %257 = logical_or(%255, %256) /* ty=Tensor[(2, 4, 3), bool] */;
    (%257,)
  };
  %258(%var_1726, %var_1727) /* ty=(Tensor[(2, 4, 3), bool],) */
}

def @func_6726(%var_6725: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), uint64], Tensor[(1, 12, 16), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float32]) {
  %276 = fn (%var_6683: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), uint64], Tensor[(1, 12, 16), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float32]) {
    %259 = @func_5341() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %260 = %259.0;
    %261 = cast(%var_6683, dtype="uint64") /* ty=Tensor[(9, 10, 3), uint64] */;
    %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
    %263 = cast(%260, dtype="uint64") /* ty=Tensor[(9, 10, 3), uint64] */;
    %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %265 = cast(%260, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
    %266 = rsqrt(%265) /* ty=Tensor[(9, 10, 3), float64] */;
    %267 = cast(%266, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
    %268 = reshape(%267, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
    %269 = @func_6400(%268) /* ty=(Tensor[(9, 10, 3), bool], Tensor[(9, 10, 3), float64], Tensor[(1080, 2), float32], Tensor[(9, 10, 3), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) */;
    %270 = @func_6471() /* ty=(Tensor[(110, 4), float64],) */;
    %271 = cast(%266, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
    %272 = minimum(%263, %264) /* ty=Tensor[(9, 10, 3), uint64] */;
    %273 = %269.4;
    %274 = %270.0;
    %275 = tan(%271) /* ty=Tensor[(9, 10, 3), float32] */;
    (%272, %273, %274, %275)
  };
  %276(%var_6725) /* ty=(Tensor[(9, 10, 3), uint64], Tensor[(1, 12, 16), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float32]) */
}

def @func_3766() -> (Tensor[(110, 4), bool], Tensor[(2, 3, 3), float32], Tensor[(6, 3), int16]) {
  %277 = @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */;
  %278 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 3), int16] */, dtype="int16") /* ty=Tensor[(6, 3), int16] */;
  %279 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 3), int16] */, dtype="int16") /* ty=Tensor[(6, 3), int16] */;
  %280 = reshape(%278, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %281 = reshape(%279, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %282 = @func_587(%280, %281) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
  %283 = %277.1;
  %284 = %282.1;
  (%283, %284, meta[relay.Constant][9] /* ty=Tensor[(6, 3), int16] */)
}

def @func_7338(%var_7337: Tensor[(18), int16]) -> (Tensor[(9, 10, 3), float32], Tensor[(2, 3, 3), int16], Tensor[(18), int16]) {
  %292 = fn (%var_7334: Tensor[(18), int16]) -> (Tensor[(9, 10, 3), float32], Tensor[(2, 3, 3), int16], Tensor[(18), int16]) {
    %285 = cast(%var_7334, dtype="int16") /* ty=Tensor[(18), int16] */;
    %286 = cast(%var_7334, dtype="int16") /* ty=Tensor[(18), int16] */;
    %287 = reshape(%285, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
    %288 = reshape(%286, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
    %289 = @func_587(%287, %288) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
    %290 = @func_5989() /* ty=Tensor[(9, 10, 3), float32] */;
    %291 = %289.0;
    (%290, %291, %var_7334)
  };
  %292(%var_7337) /* ty=(Tensor[(9, 10, 3), float32], Tensor[(2, 3, 3), int16], Tensor[(18), int16]) */
}

def @func_65(%var_62: Tensor[(1, 12, 16), float32]) -> (Tensor[(1, 12, 16), float32],) {
  %293 = cast(%var_62, dtype="float32") /* ty=Tensor[(1, 12, 16), float32] */;
  %294 = tan(%293) /* ty=Tensor[(1, 12, 16), float32] */;
  (%294,)
}

def @func_4479() -> (Tensor[(8, 11, 5), uint64],) {
  %295 = @func_4274() /* ty=Tensor[(8, 11, 5), uint64] */;
  (%295,)
}

def @func_68(%var_66: Tensor[(1, 12, 16), float32]) -> (Tensor[(1, 12, 16), float32],) {
  @func_65(%var_66) /* ty=(Tensor[(1, 12, 16), float32],) */
}

def @func_6648() -> (Tensor[(9, 10, 3), float32],) {
  %297 = fn () -> (Tensor[(9, 10, 3), float32],) {
    %296 = @func_5989() /* ty=Tensor[(9, 10, 3), float32] */;
    (%296,)
  };
  %297() /* ty=(Tensor[(9, 10, 3), float32],) */
}

def @func_1912(%var_1909: Tensor[(6, 5, 14), uint32], %var_1910: Tensor[(6, 5, 14), uint32], %var_1911: Tensor[(8, 216), float32]) -> (Tensor[(6, 5, 14), uint32], Tensor[(6, 5, 14), float32], Tensor[(9, 10, 3), float64], Tensor[(294), uint32], Tensor[(8, 216), float32]) {
  %313 = fn (%var_1881: Tensor[(6, 5, 14), uint32], %var_1882: Tensor[(6, 5, 14), uint32], %var_1904: Tensor[(8, 216), float32]) -> (Tensor[(6, 5, 14), uint32], Tensor[(6, 5, 14), float32], Tensor[(9, 10, 3), float64], Tensor[(294), uint32], Tensor[(8, 216), float32]) {
    %298 = cast(%var_1882, dtype="uint32") /* ty=Tensor[(6, 5, 14), uint32] */;
    %299 = shape_of(%var_1881, dtype="int32") /* ty=Tensor[(3), int32] */;
    %300 = cast(%var_1881, dtype="uint32") /* ty=Tensor[(6, 5, 14), uint32] */;
    %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %302 = cast(%var_1881, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
    %303 = cast(meta[relay.Constant][10] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
    %304 = cast(%var_1904, dtype="float32") /* ty=Tensor[(8, 216), float32] */;
    %305 = cast(%var_1881, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
    %306 = reshape(%303, newshape=[3, 7, 14]) /* ty=Tensor[(3, 7, 14), uint32] */;
    %307 = reshape(%304, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float32] */;
    %308 = reshape(%305, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %309 = @func_1213(%306, %307, %308) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */;
    %310 = minimum(%300, %301) /* ty=Tensor[(6, 5, 14), uint32] */;
    %311 = cosh(%302) /* ty=Tensor[(6, 5, 14), float32] */;
    %312 = %309.5;
    (%310, %311, %312, meta[relay.Constant][10] /* ty=Tensor[(294), uint32] */, %var_1904)
  };
  %313(%var_1909, %var_1910, %var_1911) /* ty=(Tensor[(6, 5, 14), uint32], Tensor[(6, 5, 14), float32], Tensor[(9, 10, 3), float64], Tensor[(294), uint32], Tensor[(8, 216), float32]) */
}

def @func_4677(%var_4669: Tensor[(720), uint16], %var_4670: Tensor[(810), uint32]) -> (Tensor[(110, 4), float64], Tensor[(420), float64], Tensor[(294), uint32], Tensor[(1728, 1), float32], Tensor[(484), float32], Tensor[(720), uint16], Tensor[(810), uint32]) {
  %314 = @func_4430() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */;
  %315 = cast(meta[relay.Constant][11] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %316 = cast(meta[relay.Constant][12] /* ty=Tensor[(1728, 1), float32] */, dtype="float32") /* ty=Tensor[(1728, 1), float32] */;
  %317 = cast(meta[relay.Constant][13] /* ty=Tensor[(484), float32] */, dtype="float32") /* ty=Tensor[(484), float32] */;
  %318 = cast(%var_4669, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %319 = cast(%var_4670, dtype="uint32") /* ty=Tensor[(810), uint32] */;
  %320 = reshape(%315, newshape=[147, 2]) /* ty=Tensor[(147, 2), uint32] */;
  %321 = reshape(%316, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
  %322 = reshape(%317, newshape=[484]) /* ty=Tensor[(484), float32] */;
  %323 = reshape(%318, newshape=[720]) /* ty=Tensor[(720), uint16] */;
  %324 = reshape(%319, newshape=[810]) /* ty=Tensor[(810), uint32] */;
  %325 = @func_3054(%320, %321, %322, %323, %324) /* ty=(Tensor[(14, 15, 2), float64], Tensor[(147, 2), uint32], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(4, 11, 11), float64], Tensor[(484), float32], Tensor[(12, 5, 12), bool], Tensor[(720), uint16], Tensor[(9, 15, 6), float32], Tensor[(810), uint32], Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float64], Tensor[(15, 13, 10), float64]) */;
  %326 = %314.2;
  %327 = %325.3;
  (%326, %327, meta[relay.Constant][11] /* ty=Tensor[(294), uint32] */, meta[relay.Constant][12] /* ty=Tensor[(1728, 1), float32] */, meta[relay.Constant][13] /* ty=Tensor[(484), float32] */, %var_4669, %var_4670)
}

def @func_1213(%var_1136: Tensor[(3, 7, 14), uint32], %var_1159: Tensor[(9, 12, 16), float32], %var_1175: Tensor[(420), float64]) -> (Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) {
  %328 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 7, 14), uint32] */, dtype="uint32") /* ty=Tensor[(3, 7, 14), uint32] */;
  %329 = shape_of(%var_1136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%var_1136, dtype="uint32") /* ty=Tensor[(3, 7, 14), uint32] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %332 = cast(meta[relay.Constant][15] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %333 = reshape(%332, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %334 = @func_65(%333) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="uint16") /* ty=Tensor[(1, 12, 16), uint16] */;
  %337 = cast(%var_1159, dtype="uint16") /* ty=Tensor[(9, 12, 16), uint16] */;
  %338 = cast(%var_1175, dtype="float64") /* ty=Tensor[(420), float64] */;
  %339 = reshape(%338, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), float64] */;
  %340 = cast(meta[relay.Constant][16] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %341 = reshape(%340, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %342 = @func_133(%341) /* ty=(Tensor[(9, 10, 3), float64],) */;
  %343 = cast(meta[relay.Constant][16] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %344 = reshape(%343, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
  %345 = @func_133(%344) /* ty=(Tensor[(9, 10, 3), float64],) */;
  %346 = cast(%335, dtype="float32") /* ty=Tensor[(1, 12, 16), float32] */;
  %347 = reshape(%346, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %348 = @func_65(%347) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %349 = multiply(%330, %331) /* ty=Tensor[(3, 7, 14), uint32] */;
  %350 = add(%336, %337) /* ty=Tensor[(9, 12, 16), uint16] */;
  %351 = @func_1056(%339) /* ty=Tensor[(14, 15, 2), float64] */;
  %352 = %342.0;
  %353 = %345.0;
  %354 = %348.0;
  (%349, meta[relay.Constant][15] /* ty=Tensor[(192), float32] */, %350, %351, %var_1175, %352, meta[relay.Constant][16] /* ty=Tensor[(270), float64] */, %353, %354)
}

def @func_956(%var_953: Tensor[(5, 5, 12), bool], %var_954: Tensor[(5, 5, 12), bool], %var_955: Tensor[(1, 18), int16]) -> (Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) {
  @func_951(%var_953, %var_954, %var_955) /* ty=(Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) */
}

def @func_2597() -> (Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) {
  %363 = fn () -> (Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) {
    %355 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
    %356 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
    %357 = cast(meta[relay.Constant][17] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %358 = reshape(%357, newshape=[9, 10, 3]) /* ty=Tensor[(9, 10, 3), float64] */;
    %359 = @func_133(%358) /* ty=(Tensor[(9, 10, 3), float64],) */;
    %360 = %355.1;
    %361 = %356.2;
    %362 = %359.0;
    (%360, %361, %362, meta[relay.Constant][17] /* ty=Tensor[(270), float64] */)
  };
  %363() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */
}

def @func_4444() -> Tensor[(8, 11, 5), uint64] {
  %364 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %364.4
}

def @func_3267(%var_3265: Tensor[(8, 14, 4), float32], %var_3266: Tensor[(192), float32]) -> (Tensor[(8, 14, 4), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
  @func_3263(%var_3265, %var_3266) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) */
}

def @func_2627() -> (Tensor[(9, 10, 3), float64],) {
  @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */
}

def @func_4539() -> (Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) {
  @func_4537() /* ty=(Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) */
}

def @func_6454(%var_6453: Tensor[(16, 7, 12), float32]) -> Tensor[(16, 7, 12), float32] {
  %366 = fn (%var_6449: Tensor[(16, 7, 12), float32]) -> Tensor[(16, 7, 12), float32] {
    %365 = cast(%var_6449, dtype="float32") /* ty=Tensor[(16, 7, 12), float32] */;
    cos(%365) /* ty=Tensor[(16, 7, 12), float32] */
  };
  %366(%var_6453) /* ty=Tensor[(16, 7, 12), float32] */
}

def @func_3498() -> (Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64]) {
  %377 = fn () -> (Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64]) {
    %367 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %368 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %369 = %368.0;
    %370 = cast(%369, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
    %371 = @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */;
    %372 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %373 = %367.0;
    %374 = atan(%370) /* ty=Tensor[(9, 10, 3), float32] */;
    %375 = %371.0;
    %376 = %372.0;
    (%373, %374, %375, %376)
  };
  %377() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64]) */
}

def @func_1706(%var_1704: Tensor[(8, 11, 5), float64]) -> (Tensor[(8, 11, 5), uint64],) {
  @func_1703(%var_1704) /* ty=(Tensor[(8, 11, 5), uint64],) */
}

def @func_4040(%var_4037: Tensor[(15, 7, 13), float64], %var_4038: Tensor[(1728), float32], %var_4039: Tensor[(1, 420), float64]) -> (Tensor[(15, 7, 13), float64], Tensor[(9, 12, 16), uint16], Tensor[(7, 42), uint32], Tensor[(1728), float32], Tensor[(1, 420), float64]) {
  @func_4035(%var_4037, %var_4038, %var_4039) /* ty=(Tensor[(15, 7, 13), float64], Tensor[(9, 12, 16), uint16], Tensor[(7, 42), uint32], Tensor[(1728), float32], Tensor[(1, 420), float64]) */
}

def @func_3632() -> (Tensor[(110, 4), float64],) {
  %378 = @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */;
  %379 = %378.1;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %381 = log10(%380) /* ty=Tensor[(110, 4), float64] */;
  (%381,)
}

def @func_3634() -> (Tensor[(110, 4), float64],) {
  @func_3632() /* ty=(Tensor[(110, 4), float64],) */
}

def @func_4893() -> (Tensor[(8, 11, 5), uint64],) {
  %382 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %383 = %382.0;
  (%383,)
}

def @func_135(%var_134: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), float64],) {
  %386 = fn (%var_127: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), float64],) {
    %384 = cast(%var_127, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
    %385 = erf(%384) /* ty=Tensor[(9, 10, 3), float64] */;
    (%385,)
  };
  %386(%var_134) /* ty=(Tensor[(9, 10, 3), float64],) */
}

def @func_4070(%var_4054: Tensor[(11, 11, 6), float32]) -> Tensor[(11, 11, 6), float32] {
  %387 = cast(%var_4054, dtype="float32") /* ty=Tensor[(11, 11, 6), float32] */;
  rsqrt(%387) /* ty=Tensor[(11, 11, 6), float32] */
}

def @func_4986(%var_4964: Tensor[(14, 4, 6), uint16], %var_4965: Tensor[(14, 4, 6), uint16], %var_4983: Tensor[(3, 18), float64]) -> (Tensor[(14, 4, 6), bool], Tensor[(420), float64], Tensor[(3, 18), float64]) {
  %388 = cast(%var_4965, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
  %389 = shape_of(%var_4964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%var_4964, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %392 = cast(%var_4983, dtype="float64") /* ty=Tensor[(3, 18), float64] */;
  %393 = reshape(%392, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), float64] */;
  %394 = @func_4152(%393) /* ty=(Tensor[(9, 3, 2), float64], Tensor[(14, 15, 2), float64], Tensor[(420), float64]) */;
  %395 = less_equal(%390, %391) /* ty=Tensor[(14, 4, 6), bool] */;
  %396 = %394.2;
  (%395, %396, %var_4983)
}

def @func_4830() -> (Tensor[(8, 11, 5), float32], Tensor[(8, 11, 5), uint64], Tensor[(2, 3, 3), int16], Tensor[(18, 1), int16]) {
  %408 = fn () -> (Tensor[(8, 11, 5), float32], Tensor[(8, 11, 5), uint64], Tensor[(2, 3, 3), int16], Tensor[(18, 1), int16]) {
    %397 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
    %398 = %397.0;
    %399 = cast(%398, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
    %400 = cast(meta[relay.Constant][18] /* ty=Tensor[(18, 1), int16] */, dtype="int16") /* ty=Tensor[(18, 1), int16] */;
    %401 = cast(meta[relay.Constant][18] /* ty=Tensor[(18, 1), int16] */, dtype="int16") /* ty=Tensor[(18, 1), int16] */;
    %402 = reshape(%400, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
    %403 = reshape(%401, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
    %404 = @func_587(%402, %403) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
    %405 = atanh(%399) /* ty=Tensor[(8, 11, 5), float32] */;
    %406 = @func_4601() /* ty=Tensor[(8, 11, 5), uint64] */;
    %407 = %404.0;
    (%405, %406, %407, meta[relay.Constant][18] /* ty=Tensor[(18, 1), int16] */)
  };
  %408() /* ty=(Tensor[(8, 11, 5), float32], Tensor[(8, 11, 5), uint64], Tensor[(2, 3, 3), int16], Tensor[(18, 1), int16]) */
}

def @func_6428() -> Tensor[(8, 11, 5), uint64] {
  @func_4267() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_2272() -> (Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) {
  %415 = fn () -> (Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) {
    %409 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 10), float64] */;
    %410 = cast(meta[relay.Constant][20] /* ty=Tensor[(110, 4), float64] */, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
    %411 = reshape(%410, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
    %412 = @func_1703(%411) /* ty=(Tensor[(8, 11, 5), uint64],) */;
    %413 = log(%409) /* ty=Tensor[(15, 13, 10), float64] */;
    %414 = %412.0;
    (%413, %414, meta[relay.Constant][20] /* ty=Tensor[(110, 4), float64] */)
  };
  %415() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */
}

def @func_4481() -> (Tensor[(8, 11, 5), uint64],) {
  @func_4479() /* ty=(Tensor[(8, 11, 5), uint64],) */
}

def @func_4775() -> (Tensor[(9, 10, 3), float64],) {
  @func_4773() /* ty=(Tensor[(9, 10, 3), float64],) */
}

def @func_3852(%var_3850: Tensor[(2160), int64]) -> (Tensor[(8, 11, 5), uint64], Tensor[(16, 9, 15), int64], int64, Tensor[(2160), int64], Tensor[(2, 4, 3), bool], Tensor[(6), bool], Tensor[(8, 11, 5), uint64], Tensor[(8, 11, 5), uint64], Tensor[(24), float64]) {
  @func_3849(%var_3850) /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(16, 9, 15), int64], int64, Tensor[(2160), int64], Tensor[(2, 4, 3), bool], Tensor[(6), bool], Tensor[(8, 11, 5), uint64], Tensor[(8, 11, 5), uint64], Tensor[(24), float64]) */
}

def @func_6438() -> (Tensor[(9, 10, 3), float32],) {
  @func_6436() /* ty=(Tensor[(9, 10, 3), float32],) */
}

def @func_669(%var_667: Tensor[(12, 5, 12), uint16], %var_668: Tensor[(12, 5, 12), uint16]) -> (Tensor[(12, 5, 12), bool],) {
  @func_665(%var_667, %var_668) /* ty=(Tensor[(12, 5, 12), bool],) */
}

def @func_2803(%var_2781: Tensor[(3, 16, 13), float32], %var_2801: Tensor[(1, 192), float32]) -> (Tensor[(3, 16, 13), bool], Tensor[(3, 16, 13), float64], Tensor[(1, 12, 16), float32], Tensor[(1, 192), float32]) {
  %416 = cast(%var_2781, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %417 = acos(%416) /* ty=Tensor[(3, 16, 13), float32] */;
  %418 = cast(%var_2781, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
  %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%417, dtype="bool") /* ty=Tensor[(3, 16, 13), bool] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %422 = cast(%417, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
  %423 = cast(%var_2801, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
  %424 = reshape(%423, newshape=[1, 12, 16]) /* ty=Tensor[(1, 12, 16), float32] */;
  %425 = @func_65(%424) /* ty=(Tensor[(1, 12, 16), float32],) */;
  %426 = greater(%420, %421) /* ty=Tensor[(3, 16, 13), bool] */;
  %427 = sin(%422) /* ty=Tensor[(3, 16, 13), float64] */;
  %428 = %425.0;
  (%426, %427, %428, %var_2801)
}

def @func_4196() -> (Tensor[(110, 4), float64],) {
  @func_4194() /* ty=(Tensor[(110, 4), float64],) */
}

def @func_6831(%var_6829: Tensor[(9, 10, 3), float32]) -> (Tensor[(9, 10, 3), float32], Tensor[(8, 11, 5), uint64]) {
  @func_6828(%var_6829) /* ty=(Tensor[(9, 10, 3), float32], Tensor[(8, 11, 5), uint64]) */
}

def @func_4353(%var_4302: Tensor[(5, 4, 13), uint64], %var_4303: Tensor[(5, 4, 13), uint64], %var_4311: Tensor[(1728), float32], %var_4321: Tensor[(24), bool]) -> (Tensor[(9, 12, 16), uint16], Tensor[(1365), float64], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(2, 4, 3), bool], Tensor[(24), bool], Tensor[(11, 11, 6), float32], Tensor[(8, 11, 5), uint64], Tensor[(6, 726), float32], Tensor[(5, 4, 13), uint64], Tensor[(8, 11, 5), uint64], Tensor[(192), int64], Tensor[(192), float32]) {
  %429 = cast(meta[relay.Constant][21] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %430 = cast(%var_4311, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %431 = cast(meta[relay.Constant][22] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %432 = reshape(%429, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %433 = reshape(%430, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
  %434 = reshape(%431, newshape=[1, 420]) /* ty=Tensor[(1, 420), float64] */;
  %435 = @func_4035(%432, %433, %434) /* ty=(Tensor[(15, 7, 13), float64], Tensor[(9, 12, 16), uint16], Tensor[(7, 42), uint32], Tensor[(1728), float32], Tensor[(1, 420), float64]) */;
  %436 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 1), bool] */, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %437 = cast(%var_4321, dtype="bool") /* ty=Tensor[(24), bool] */;
  %438 = reshape(%436, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), bool] */;
  %439 = reshape(%437, newshape=[2, 4, 3]) /* ty=Tensor[(2, 4, 3), bool] */;
  %440 = @func_1725(%438, %439) /* ty=(Tensor[(2, 4, 3), bool],) */;
  %441 = cast(meta[relay.Constant][24] /* ty=Tensor[(726), float32] */, dtype="float32") /* ty=Tensor[(726), float32] */;
  %442 = reshape(%441, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), float32] */;
  %443 = @func_3605() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %444 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 1), bool] */, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %445 = cast(meta[relay.Constant][24] /* ty=Tensor[(726), float32] */, dtype="float32") /* ty=Tensor[(726), float32] */;
  %446 = cast(%var_4303, dtype="uint64") /* ty=Tensor[(5, 4, 13), uint64] */;
  %447 = shape_of(%var_4302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%var_4302, dtype="uint64") /* ty=Tensor[(5, 4, 13), uint64] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %450 = bitwise_or(%448, %449) /* ty=Tensor[(5, 4, 13), uint64] */;
  %451 = cast(%450, dtype="uint64") /* ty=Tensor[(5, 4, 13), uint64] */;
  %452 = shape_of(%var_4303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%var_4303, dtype="uint64") /* ty=Tensor[(5, 4, 13), uint64] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %455 = @func_3605() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %456 = cast(meta[relay.Constant][25] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %457 = cast(meta[relay.Constant][25] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %458 = reshape(%456, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %459 = reshape(%457, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %460 = @func_3340(%458, %459) /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1, 12, 16), float32], Tensor[(1080, 2), int32], Tensor[(9, 10, 3), float64], Tensor[(192), int64]) */;
  %461 = %435.1;
  %462 = %440.0;
  %463 = @func_4070(%442) /* ty=Tensor[(11, 11, 6), float32] */;
  %464 = %443.0;
  %465 = power(%444, %445) /* ty=Tensor[(6, 726), float32] */;
  %466 = bitwise_and(%453, %454) /* ty=Tensor[(5, 4, 13), uint64] */;
  %467 = %455.0;
  %468 = %460.4;
  (%461, meta[relay.Constant][21] /* ty=Tensor[(1365), float64] */, %var_4311, meta[relay.Constant][22] /* ty=Tensor[(420), float64] */, %462, %var_4321, %463, %464, %465, %466, %467, %468, meta[relay.Constant][25] /* ty=Tensor[(192), float32] */)
}

def @func_4276() -> Tensor[(8, 11, 5), uint64] {
  @func_4274() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_6607(%var_6603: Tensor[(864, 2), float32], %var_6604: Tensor[(420), float64], %var_6605: Tensor[(294), uint32], %var_6606: Tensor[(294), float64]) -> (Tensor[(420), float64], Tensor[(864, 2), float32], Tensor[(420), float64], Tensor[(294), int16], Tensor[(8, 11, 5), uint64], Tensor[(18, 1), int16], Tensor[(8, 11, 5), uint64], Tensor[(294), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64], Tensor[(294), float32]) {
  @func_6601(%var_6603, %var_6604, %var_6605, %var_6606) /* ty=(Tensor[(420), float64], Tensor[(864, 2), float32], Tensor[(420), float64], Tensor[(294), int16], Tensor[(8, 11, 5), uint64], Tensor[(18, 1), int16], Tensor[(8, 11, 5), uint64], Tensor[(294), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64], Tensor[(294), float32]) */
}

def @func_6037(%var_6021: Tensor[(7, 11, 11), float32]) -> (Tensor[(8, 11, 5), uint64], Tensor[(7, 11, 11), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint16], Tensor[(54), float64], Tensor[(7, 11, 11), int32]) {
  %469 = @func_4430() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */;
  %470 = %469.0;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(7, 11, 11), float32] */;
  %472 = rsqrt(%471) /* ty=Tensor[(7, 11, 11), float32] */;
  %473 = cast(%472, dtype="float64") /* ty=Tensor[(7, 11, 11), float64] */;
  %474 = cast(meta[relay.Constant][26] /* ty=Tensor[(336), uint16] */, dtype="uint16") /* ty=Tensor[(336), uint16] */;
  %475 = cast(meta[relay.Constant][26] /* ty=Tensor[(336), uint16] */, dtype="uint16") /* ty=Tensor[(336), uint16] */;
  %476 = cast(meta[relay.Constant][27] /* ty=Tensor[(54), float64] */, dtype="float64") /* ty=Tensor[(54), float64] */;
  %477 = reshape(%474, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint16] */;
  %478 = reshape(%475, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint16] */;
  %479 = reshape(%476, newshape=[3, 18]) /* ty=Tensor[(3, 18), float64] */;
  %480 = @func_4986(%477, %478, %479) /* ty=(Tensor[(14, 4, 6), bool], Tensor[(420), float64], Tensor[(3, 18), float64]) */;
  %481 = cast(%var_6021, dtype="int32") /* ty=Tensor[(7, 11, 11), int32] */;
  %482 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%472, dtype="int32") /* ty=Tensor[(7, 11, 11), int32] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %485 = @func_4601() /* ty=Tensor[(8, 11, 5), uint64] */;
  %486 = asin(%473) /* ty=Tensor[(7, 11, 11), float64] */;
  %487 = %480.0;
  %488 = logical_xor(%483, %484) /* ty=Tensor[(7, 11, 11), int32] */;
  (%485, %486, %487, meta[relay.Constant][26] /* ty=Tensor[(336), uint16] */, meta[relay.Constant][27] /* ty=Tensor[(54), float64] */, %488)
}

def @func_2648() -> Tensor[(9, 10, 3), float64] {
  %490 = fn () -> Tensor[(9, 10, 3), float64] {
    %489 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %489.0
  };
  %490() /* ty=Tensor[(9, 10, 3), float64] */
}

def @func_3174() -> (Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) {
  @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */
}

def @func_4681(%var_4679: Tensor[(720), uint16], %var_4680: Tensor[(810), uint32]) -> (Tensor[(110, 4), float64], Tensor[(420), float64], Tensor[(294), uint32], Tensor[(1728, 1), float32], Tensor[(484), float32], Tensor[(720), uint16], Tensor[(810), uint32]) {
  @func_4677(%var_4679, %var_4680) /* ty=(Tensor[(110, 4), float64], Tensor[(420), float64], Tensor[(294), uint32], Tensor[(1728, 1), float32], Tensor[(484), float32], Tensor[(720), uint16], Tensor[(810), uint32]) */
}

def @func_5335(%var_5332: Tensor[(5, 2, 12), float64], %var_5333: Tensor[(1440), int32], %var_5334: Tensor[(440), float64]) -> (Tensor[(5, 2, 12), float64], Tensor[(16, 9, 10), bool], Tensor[(1440), int32], Tensor[(8, 11, 5), uint64], Tensor[(440), float64], Tensor[(9, 10, 3), float64]) {
  @func_5330(%var_5332, %var_5333, %var_5334) /* ty=(Tensor[(5, 2, 12), float64], Tensor[(16, 9, 10), bool], Tensor[(1440), int32], Tensor[(8, 11, 5), uint64], Tensor[(440), float64], Tensor[(9, 10, 3), float64]) */
}

def @func_5815() -> Tensor[(18, 1), int16] {
  @func_5813() /* ty=Tensor[(18, 1), int16] */
}

def @func_7227() -> (Tensor[(110, 4), float64],) {
  %491 = @func_6131() /* ty=Tensor[(110, 4), float64] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %493 = log(%492) /* ty=Tensor[(110, 4), float64] */;
  (%493,)
}

def @func_6105(%var_6104: Tensor[(15, 14, 2), int64]) -> Tensor[(15, 14, 2), bool] {
  %498 = fn (%var_6090: Tensor[(15, 14, 2), int64]) -> Tensor[(15, 14, 2), bool] {
    %494 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 14, 2), int64] */, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
    %495 = shape_of(%var_6090, dtype="int32") /* ty=Tensor[(3), int32] */;
    %496 = cast(%var_6090, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
    %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%496, %497) /* ty=Tensor[(15, 14, 2), bool] */
  };
  %498(%var_6104) /* ty=Tensor[(15, 14, 2), bool] */
}

def @func_4359(%var_4355: Tensor[(5, 4, 13), uint64], %var_4356: Tensor[(5, 4, 13), uint64], %var_4357: Tensor[(1728), float32], %var_4358: Tensor[(24), bool]) -> (Tensor[(9, 12, 16), uint16], Tensor[(1365), float64], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(2, 4, 3), bool], Tensor[(24), bool], Tensor[(11, 11, 6), float32], Tensor[(8, 11, 5), uint64], Tensor[(6, 726), float32], Tensor[(5, 4, 13), uint64], Tensor[(8, 11, 5), uint64], Tensor[(192), int64], Tensor[(192), float32]) {
  @func_4353(%var_4355, %var_4356, %var_4357, %var_4358) /* ty=(Tensor[(9, 12, 16), uint16], Tensor[(1365), float64], Tensor[(1728), float32], Tensor[(420), float64], Tensor[(2, 4, 3), bool], Tensor[(24), bool], Tensor[(11, 11, 6), float32], Tensor[(8, 11, 5), uint64], Tensor[(6, 726), float32], Tensor[(5, 4, 13), uint64], Tensor[(8, 11, 5), uint64], Tensor[(192), int64], Tensor[(192), float32]) */
}

def @func_7057() -> (Tensor[(8, 11, 5), uint64],) {
  %499 = @func_4274() /* ty=Tensor[(8, 11, 5), uint64] */;
  (%499,)
}

def @func_4431() -> (Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) {
  %511 = fn () -> (Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) {
    %500 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 11), float32] */;
    %501 = sqrt(%500) /* ty=Tensor[(7, 11, 11), float32] */;
    %502 = cast(%501, dtype="float64") /* ty=Tensor[(7, 11, 11), float64] */;
    %503 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(7, 11, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %504 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 11, 11), float32] */, dtype="float64") /* ty=Tensor[(7, 11, 11), float64] */;
    %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %506 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
    %507 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
    %508 = subtract(%504, %505) /* ty=Tensor[(7, 11, 11), float64] */;
    %509 = %506.1;
    %510 = %507.1;
    (%508, %509, %510)
  };
  %511() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */
}

def @func_2928(%var_2909: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) {
  %512 = @func_2840() /* ty=Tensor[(9, 10, 3), float64] */;
  %513 = cast(%var_2909, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %517 = @func_2596() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64]) */;
  %518 = greater_equal(%515, %516) /* ty=Tensor[(9, 10, 3), bool] */;
  %519 = %517.0;
  (%518, %519)
}

def @func_6436() -> (Tensor[(9, 10, 3), float32],) {
  %520 = @func_4537() /* ty=(Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) */;
  %521 = %520.2;
  (%521,)
}

def @func_4126(%var_4122: Tensor[(300), bool], %var_4123: Tensor[(18), int16]) -> (Tensor[(9, 10, 3), float64], Tensor[(5, 5, 12), bool], Tensor[(300), bool], Tensor[(18), int16]) {
  %522 = @func_2954() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %523 = cast(%var_4122, dtype="bool") /* ty=Tensor[(300), bool] */;
  %524 = cast(%var_4122, dtype="bool") /* ty=Tensor[(300), bool] */;
  %525 = cast(%var_4123, dtype="int16") /* ty=Tensor[(18), int16] */;
  %526 = reshape(%523, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
  %527 = reshape(%524, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
  %528 = reshape(%525, newshape=[1, 18]) /* ty=Tensor[(1, 18), int16] */;
  %529 = @func_951(%526, %527, %528) /* ty=(Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) */;
  %530 = %522.0;
  %531 = %529.0;
  (%530, %531, %var_4122, %var_4123)
}

def @func_3576() -> (Tensor[(8, 11, 5), uint64],) {
  %532 = @func_3172() /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1080, 2), bool], Tensor[(1080, 2), int32], Tensor[(16, 9, 15), float32], Tensor[(8, 11, 5), uint64]) */;
  %533 = %532.0;
  (%533,)
}

def @func_5389() -> Tensor[(8, 11, 5), uint64] {
  @func_5387() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_6601(%var_6506: Tensor[(864, 2), float32], %var_6507: Tensor[(420), float64], %var_6514: Tensor[(294), uint32], %var_6559: Tensor[(294), float64]) -> (Tensor[(420), float64], Tensor[(864, 2), float32], Tensor[(420), float64], Tensor[(294), int16], Tensor[(8, 11, 5), uint64], Tensor[(18, 1), int16], Tensor[(8, 11, 5), uint64], Tensor[(294), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64], Tensor[(294), float32]) {
  %534 = cast(meta[relay.Constant][30] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %535 = cast(%var_6506, dtype="float32") /* ty=Tensor[(864, 2), float32] */;
  %536 = cast(%var_6507, dtype="float64") /* ty=Tensor[(420), float64] */;
  %537 = reshape(%534, newshape=[3, 7, 14]) /* ty=Tensor[(3, 7, 14), uint32] */;
  %538 = reshape(%535, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), float32] */;
  %539 = reshape(%536, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %540 = @func_1213(%537, %538, %539) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */;
  %541 = cast(%var_6514, dtype="int16") /* ty=Tensor[(294), int16] */;
  %542 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(294), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %543 = cast(meta[relay.Constant][30] /* ty=Tensor[(294), uint32] */, dtype="int16") /* ty=Tensor[(294), int16] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?), int16] */;
  %545 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %546 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %547 = cast(%var_6514, dtype="float64") /* ty=Tensor[(294), float64] */;
  %548 = erf(%547) /* ty=Tensor[(294), float64] */;
  %549 = cast(%var_6559, dtype="float32") /* ty=Tensor[(294), float32] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(1), int32] */;
  %551 = cast(%548, dtype="float32") /* ty=Tensor[(294), float32] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?), float32] */;
  %553 = @func_3976() /* ty=(Tensor[(110, 4), float64],) */;
  %554 = @func_6131() /* ty=Tensor[(110, 4), float64] */;
  %555 = cast(%554, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %556 = cast(%548, dtype="float32") /* ty=Tensor[(294), float32] */;
  %557 = %540.4;
  %558 = bitwise_and(%543, %544) /* ty=Tensor[(294), int16] */;
  %559 = %545.0;
  %560 = @func_5813() /* ty=Tensor[(18, 1), int16] */;
  %561 = %546.0;
  %562 = divide(%551, %552) /* ty=Tensor[(294), float32] */;
  %563 = %553.0;
  %564 = @func_2647() /* ty=Tensor[(9, 10, 3), float64] */;
  %565 = asin(%555) /* ty=Tensor[(110, 4), float64] */;
  %566 = acos(%556) /* ty=Tensor[(294), float32] */;
  (%557, %var_6506, %var_6507, %558, %559, %560, %561, %562, %563, %564, %565, %566)
}

def @func_2670(%var_2669: Tensor[(16, 9, 10), int32]) -> Tensor[(16, 9, 10), bool] {
  %571 = fn (%var_2664: Tensor[(16, 9, 10), int32]) -> Tensor[(16, 9, 10), bool] {
    %567 = cast(%var_2664, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
    %568 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(16, 9, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %569 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 9, 10), int32] */, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
    %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%569, %570) /* ty=Tensor[(16, 9, 10), bool] */
  };
  %571(%var_2669) /* ty=Tensor[(16, 9, 10), bool] */
}

def @func_6828(%var_6807: Tensor[(9, 10, 3), float32]) -> (Tensor[(9, 10, 3), float32], Tensor[(8, 11, 5), uint64]) {
  %572 = @func_6647() /* ty=(Tensor[(9, 10, 3), float32],) */;
  %573 = %572.0;
  %574 = cast(%var_6807, dtype="uint8") /* ty=Tensor[(9, 10, 3), uint8] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="uint8") /* ty=Tensor[(9, 10, 3), uint8] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %578 = bitwise_and(%576, %577) /* ty=Tensor[(9, 10, 3), uint8] */;
  %579 = cast(%573, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%578, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %583 = power(%581, %582) /* ty=Tensor[(9, 10, 3), float32] */;
  %584 = @func_5387() /* ty=Tensor[(8, 11, 5), uint64] */;
  (%583, %584)
}

def @func_6769(%var_6767: Tensor[(9, 10, 3), float32]) -> Tensor[(9, 10, 3), bool] {
  @func_6766(%var_6767) /* ty=Tensor[(9, 10, 3), bool] */
}

def @func_6938() -> (Tensor[(110, 4), float64],) {
  %585 = @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */;
  %586 = %585.0;
  (%586,)
}

def @func_7453(%var_7451: Tensor[(288, 6), float32], %var_7452: Tensor[(24), bool]) -> (Tensor[(110, 4), float64], Tensor[(2, 4, 3), bool], Tensor[(260), uint64], Tensor[(288, 6), float32], Tensor[(24), bool]) {
  @func_7449(%var_7451, %var_7452) /* ty=(Tensor[(110, 4), float64], Tensor[(2, 4, 3), bool], Tensor[(260), uint64], Tensor[(288, 6), float32], Tensor[(24), bool]) */
}

def @func_5343() -> (Tensor[(9, 10, 3), float64],) {
  @func_5341() /* ty=(Tensor[(9, 10, 3), float64],) */
}

def @func_6472() -> (Tensor[(110, 4), float64],) {
  %589 = fn () -> (Tensor[(110, 4), float64],) {
    %587 = @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */;
    %588 = %587.0;
    (%588,)
  };
  %589() /* ty=(Tensor[(110, 4), float64],) */
}

def @func_4154(%var_4153: Tensor[(9, 3, 2), float64]) -> (Tensor[(9, 3, 2), float64], Tensor[(14, 15, 2), float64], Tensor[(420), float64]) {
  %595 = fn (%var_4142: Tensor[(9, 3, 2), float64]) -> (Tensor[(9, 3, 2), float64], Tensor[(14, 15, 2), float64], Tensor[(420), float64]) {
    %590 = cast(%var_4142, dtype="float64") /* ty=Tensor[(9, 3, 2), float64] */;
    %591 = cast(meta[relay.Constant][32] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %592 = reshape(%591, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), float64] */;
    %593 = sigmoid(%590) /* ty=Tensor[(9, 3, 2), float64] */;
    %594 = @func_1056(%592) /* ty=Tensor[(14, 15, 2), float64] */;
    (%593, %594, meta[relay.Constant][32] /* ty=Tensor[(420), float64] */)
  };
  %595(%var_4153) /* ty=(Tensor[(9, 3, 2), float64], Tensor[(14, 15, 2), float64], Tensor[(420), float64]) */
}

def @func_3401() -> (Tensor[(110, 4), float64], Tensor[(110, 4), bool]) {
  %596 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %597 = %596.2;
  %598 = cast(meta[relay.Constant][33] /* ty=Tensor[(110, 4), float64] */, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %599 = shape_of(%597, dtype="int32") /* ty=Tensor[(2), int32] */;
  %600 = cast(%597, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %602 = cast(meta[relay.Constant][33] /* ty=Tensor[(110, 4), float64] */, dtype="bool") /* ty=Tensor[(110, 4), bool] */;
  %603 = shape_of(%597, dtype="int32") /* ty=Tensor[(2), int32] */;
  %604 = cast(%597, dtype="bool") /* ty=Tensor[(110, 4), bool] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %606 = power(%600, %601) /* ty=Tensor[(110, 4), float64] */;
  %607 = less(%604, %605) /* ty=Tensor[(110, 4), bool] */;
  (%606, %607)
}

def @func_6132() -> Tensor[(110, 4), float64] {
  %609 = fn () -> Tensor[(110, 4), float64] {
    %608 = @func_4194() /* ty=(Tensor[(110, 4), float64],) */;
    %608.0
  };
  %609() /* ty=Tensor[(110, 4), float64] */
}

def @func_3403() -> (Tensor[(110, 4), float64], Tensor[(110, 4), bool]) {
  @func_3401() /* ty=(Tensor[(110, 4), float64], Tensor[(110, 4), bool]) */
}

def @func_3978() -> (Tensor[(110, 4), float64],) {
  @func_3976() /* ty=(Tensor[(110, 4), float64],) */
}

def @func_3076() -> (Tensor[(8, 11, 5), uint64],) {
  @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */
}

def @func_1056(%var_1050: Tensor[(14, 15, 2), float64]) -> Tensor[(14, 15, 2), float64] {
  %610 = cast(%var_1050, dtype="float64") /* ty=Tensor[(14, 15, 2), float64] */;
  cosh(%610) /* ty=Tensor[(14, 15, 2), float64] */
}

def @func_6430() -> Tensor[(8, 11, 5), uint64] {
  @func_6428() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_1218(%var_1215: Tensor[(3, 7, 14), uint32], %var_1216: Tensor[(9, 12, 16), float32], %var_1217: Tensor[(420), float64]) -> (Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) {
  @func_1213(%var_1215, %var_1216, %var_1217) /* ty=(Tensor[(3, 7, 14), uint32], Tensor[(192), float32], Tensor[(9, 12, 16), uint16], Tensor[(14, 15, 2), float64], Tensor[(420), float64], Tensor[(9, 10, 3), float64], Tensor[(270), float64], Tensor[(9, 10, 3), float64], Tensor[(1, 12, 16), float32]) */
}

def @func_2772(%var_2770: Tensor[(4, 11, 11), float32], %var_2771: Tensor[(4, 11, 11), float32]) -> (Tensor[(4, 11, 11), float64],) {
  %620 = fn (%var_2733: Tensor[(4, 11, 11), float32], %var_2764: Tensor[(4, 11, 11), float32]) -> (Tensor[(4, 11, 11), float64],) {
    %611 = cast(%var_2733, dtype="float32") /* ty=Tensor[(4, 11, 11), float32] */;
    %612 = acos(%611) /* ty=Tensor[(4, 11, 11), float32] */;
    %613 = cast(%612, dtype="float32") /* ty=Tensor[(4, 11, 11), float32] */;
    %614 = log10(%613) /* ty=Tensor[(4, 11, 11), float32] */;
    %615 = cast(%var_2764, dtype="float64") /* ty=Tensor[(4, 11, 11), float64] */;
    %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
    %617 = cast(%614, dtype="float64") /* ty=Tensor[(4, 11, 11), float64] */;
    %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %619 = floor_mod(%617, %618) /* ty=Tensor[(4, 11, 11), float64] */;
    (%619,)
  };
  %620(%var_2770, %var_2771) /* ty=(Tensor[(4, 11, 11), float64],) */
}

def @func_2841() -> Tensor[(9, 10, 3), float64] {
  %622 = fn () -> Tensor[(9, 10, 3), float64] {
    %621 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %621.0
  };
  %622() /* ty=Tensor[(9, 10, 3), float64] */
}

def @func_3111() -> (Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) {
  @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */
}

def @func_4446() -> Tensor[(8, 11, 5), uint64] {
  @func_4444() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_5990() -> Tensor[(9, 10, 3), float32] {
  %624 = fn () -> Tensor[(9, 10, 3), float32] {
    %623 = @func_5597() /* ty=(Tensor[(9, 10, 3), float32],) */;
    %623.0
  };
  %624() /* ty=Tensor[(9, 10, 3), float32] */
}

def @func_1703(%var_1687: Tensor[(8, 11, 5), float64]) -> (Tensor[(8, 11, 5), uint64],) {
  %625 = cast(%var_1687, dtype="float64") /* ty=Tensor[(8, 11, 5), float64] */;
  %626 = sqrt(%625) /* ty=Tensor[(8, 11, 5), float64] */;
  %627 = cast(%var_1687, dtype="uint64") /* ty=Tensor[(8, 11, 5), uint64] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="uint64") /* ty=Tensor[(8, 11, 5), uint64] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %631 = minimum(%629, %630) /* ty=Tensor[(8, 11, 5), uint64] */;
  (%631,)
}

def @func_1379(%var_1377: int64, %var_1378: Tensor[(16, 9, 15), int64]) -> (Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) {
  @func_1375(%var_1377, %var_1378) /* ty=(Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) */
}

def @func_951(%var_916: Tensor[(5, 5, 12), bool], %var_917: Tensor[(5, 5, 12), bool], %var_925: Tensor[(1, 18), int16]) -> (Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) {
  %632 = cast(%var_917, dtype="bool") /* ty=Tensor[(5, 5, 12), bool] */;
  %633 = shape_of(%var_916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%var_916, dtype="bool") /* ty=Tensor[(5, 5, 12), bool] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %636 = cast(%var_925, dtype="int16") /* ty=Tensor[(1, 18), int16] */;
  %637 = cast(%var_925, dtype="int16") /* ty=Tensor[(1, 18), int16] */;
  %638 = reshape(%636, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %639 = reshape(%637, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %640 = @func_587(%638, %639) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
  %641 = cast(%var_925, dtype="int16") /* ty=Tensor[(1, 18), int16] */;
  %642 = cast(%var_925, dtype="int16") /* ty=Tensor[(1, 18), int16] */;
  %643 = reshape(%641, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %644 = reshape(%642, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), int16] */;
  %645 = @func_587(%643, %644) /* ty=(Tensor[(2, 3, 3), int16], Tensor[(2, 3, 3), float32]) */;
  %646 = cast(%var_917, dtype="float64") /* ty=Tensor[(5, 5, 12), float64] */;
  %647 = logical_or(%634, %635) /* ty=Tensor[(5, 5, 12), bool] */;
  %648 = %640.1;
  %649 = %645.0;
  %650 = asin(%646) /* ty=Tensor[(5, 5, 12), float64] */;
  (%647, %648, %var_925, %649, %650)
}

def @func_3849(%var_3791: Tensor[(2160), int64]) -> (Tensor[(8, 11, 5), uint64], Tensor[(16, 9, 15), int64], int64, Tensor[(2160), int64], Tensor[(2, 4, 3), bool], Tensor[(6), bool], Tensor[(8, 11, 5), uint64], Tensor[(8, 11, 5), uint64], Tensor[(24), float64]) {
  %651 = @func_3576() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %652 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %653 = cast(%var_3791, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %654 = reshape(%652, newshape=[]) /* ty=int64 */;
  %655 = reshape(%653, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), int64] */;
  %656 = @func_1375(%654, %655) /* ty=(Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) */;
  %657 = cast(meta[relay.Constant][34] /* ty=Tensor[(6), bool] */, dtype="bool") /* ty=Tensor[(6), bool] */;
  %658 = cast(meta[relay.Constant][35] /* ty=Tensor[(24), bool] */, dtype="bool") /* ty=Tensor[(24), bool] */;
  %659 = reshape(%657, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), bool] */;
  %660 = reshape(%658, newshape=[2, 4, 3]) /* ty=Tensor[(2, 4, 3), bool] */;
  %661 = @func_1725(%659, %660) /* ty=(Tensor[(2, 4, 3), bool],) */;
  %662 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %663 = @func_3074() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %664 = cast(meta[relay.Constant][35] /* ty=Tensor[(24), bool] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %665 = atan(%664) /* ty=Tensor[(24), float32] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(24), float64] */;
  %667 = %651.0;
  %668 = %656.1;
  %669 = %661.0;
  %670 = %662.0;
  %671 = %663.0;
  %672 = acos(%666) /* ty=Tensor[(24), float64] */;
  (%667, %668, -6 /* ty=int64 */, %var_3791, %669, meta[relay.Constant][34] /* ty=Tensor[(6), bool] */, %670, %671, %672)
}

def @func_7255() -> (Tensor[(110, 4), float64],) {
  %675 = fn () -> (Tensor[(110, 4), float64],) {
    %673 = @func_6471() /* ty=(Tensor[(110, 4), float64],) */;
    %674 = %673.0;
    (%674,)
  };
  %675() /* ty=(Tensor[(110, 4), float64],) */
}

def @func_4601() -> Tensor[(8, 11, 5), uint64] {
  @func_4267() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_7229() -> (Tensor[(110, 4), float64],) {
  @func_7227() /* ty=(Tensor[(110, 4), float64],) */
}

def @func_4409(%var_4407: Tensor[(18), int16], %var_4408: Tensor[(9, 10, 3), float64]) -> (Tensor[(5, 5, 12), float64], Tensor[(300), bool], Tensor[(18), int16], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64]) {
  %693 = fn (%var_4393: Tensor[(18), int16], %var_4395: Tensor[(9, 10, 3), float64]) -> (Tensor[(5, 5, 12), float64], Tensor[(300), bool], Tensor[(18), int16], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64]) {
    %676 = cast(meta[relay.Constant][36] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
    %677 = cast(meta[relay.Constant][36] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
    %678 = cast(%var_4393, dtype="int16") /* ty=Tensor[(18), int16] */;
    %679 = reshape(%676, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
    %680 = reshape(%677, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), bool] */;
    %681 = reshape(%678, newshape=[1, 18]) /* ty=Tensor[(1, 18), int16] */;
    %682 = @func_951(%679, %680, %681) /* ty=(Tensor[(5, 5, 12), bool], Tensor[(2, 3, 3), float32], Tensor[(1, 18), int16], Tensor[(2, 3, 3), int16], Tensor[(5, 5, 12), float64]) */;
    %683 = @func_2954() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %684 = %683.0;
    %685 = cast(%var_4395, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
    %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
    %687 = cast(%684, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %689 = @func_3632() /* ty=(Tensor[(110, 4), float64],) */;
    %690 = %682.4;
    %691 = add(%687, %688) /* ty=Tensor[(9, 10, 3), float32] */;
    %692 = %689.0;
    (%690, meta[relay.Constant][36] /* ty=Tensor[(300), bool] */, %var_4393, %691, %692)
  };
  %693(%var_4407, %var_4408) /* ty=(Tensor[(5, 5, 12), float64], Tensor[(300), bool], Tensor[(18), int16], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64]) */
}

def @func_5597() -> (Tensor[(9, 10, 3), float32],) {
  %694 = @func_5162() /* ty=(Tensor[(9, 10, 3), float32],) */;
  %695 = %694.0;
  (%695,)
}

def @func_5209() -> (Tensor[(9, 10, 3), float64],) {
  @func_5207() /* ty=(Tensor[(9, 10, 3), float64],) */
}

def @func_6766(%var_6759: Tensor[(9, 10, 3), float32]) -> Tensor[(9, 10, 3), bool] {
  %696 = @func_5162() /* ty=(Tensor[(9, 10, 3), float32],) */;
  %697 = %696.0;
  %698 = cast(%var_6759, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%697, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%700, %701) /* ty=Tensor[(9, 10, 3), bool] */
}

def @func_5558(%var_5557: Tensor[(110, 4), float64]) -> (Tensor[(11, 11, 6), float32], Tensor[(726), float32], Tensor[(110, 4), float64], Tensor[(110, 4), float64]) {
  %714 = fn (%var_5549: Tensor[(110, 4), float64]) -> (Tensor[(11, 11, 6), float32], Tensor[(726), float32], Tensor[(110, 4), float64], Tensor[(110, 4), float64]) {
    %702 = cast(meta[relay.Constant][37] /* ty=Tensor[(726), float32] */, dtype="float32") /* ty=Tensor[(726), float32] */;
    %703 = reshape(%702, newshape=[11, 11, 6]) /* ty=Tensor[(11, 11, 6), float32] */;
    %704 = @func_4194() /* ty=(Tensor[(110, 4), float64],) */;
    %705 = %704.0;
    %706 = cast(%var_5549, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
    %707 = shape_of(%705, dtype="int32") /* ty=Tensor[(2), int32] */;
    %708 = cast(%705, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
    %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %710 = cast(%var_5549, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
    %711 = @func_4070(%703) /* ty=Tensor[(11, 11, 6), float32] */;
    %712 = subtract(%708, %709) /* ty=Tensor[(110, 4), float64] */;
    %713 = asinh(%710) /* ty=Tensor[(110, 4), float64] */;
    (%711, meta[relay.Constant][37] /* ty=Tensor[(726), float32] */, %712, %713)
  };
  %714(%var_5557) /* ty=(Tensor[(11, 11, 6), float32], Tensor[(726), float32], Tensor[(110, 4), float64], Tensor[(110, 4), float64]) */
}

def @func_4773() -> (Tensor[(9, 10, 3), float64],) {
  %715 = @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */;
  %716 = %715.0;
  (%716,)
}

def @func_5387() -> Tensor[(8, 11, 5), uint64] {
  %717 = @func_4893() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %717.0
}

def @func_665(%var_655: Tensor[(12, 5, 12), uint16], %var_656: Tensor[(12, 5, 12), uint16]) -> (Tensor[(12, 5, 12), bool],) {
  %718 = cast(%var_656, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %719 = shape_of(%var_655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%var_655, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %722 = not_equal(%720, %721) /* ty=Tensor[(12, 5, 12), bool] */;
  (%722,)
}

def @func_5163() -> (Tensor[(9, 10, 3), float32],) {
  %725 = fn () -> (Tensor[(9, 10, 3), float32],) {
    %723 = @func_3497() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(9, 10, 3), float32], Tensor[(110, 4), float64], Tensor[(9, 10, 3), float64]) */;
    %724 = %723.1;
    (%724,)
  };
  %725() /* ty=(Tensor[(9, 10, 3), float32],) */
}

def @func_7349(%var_7348: uint8) -> (Tensor[(16, 4, 14), uint8],) {
  %729 = fn (%var_7342: uint8) -> (Tensor[(16, 4, 14), uint8],) {
    %726 = cast(%var_7342, dtype="uint8") /* ty=uint8 */;
    %727 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 4, 14), uint8] */, dtype="uint8") /* ty=Tensor[(16, 4, 14), uint8] */;
    %728 = bitwise_xor(%726, %727) /* ty=Tensor[(16, 4, 14), uint8] */;
    (%728,)
  };
  %729(%var_7348) /* ty=(Tensor[(16, 4, 14), uint8],) */
}

def @func_5813() -> Tensor[(18, 1), int16] {
  %730 = @func_4829() /* ty=(Tensor[(8, 11, 5), float32], Tensor[(8, 11, 5), uint64], Tensor[(2, 3, 3), int16], Tensor[(18, 1), int16]) */;
  %730.3
}

def @func_6402(%var_6401: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), bool], Tensor[(9, 10, 3), float64], Tensor[(1080, 2), float32], Tensor[(9, 10, 3), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
  %755 = fn (%var_6355: Tensor[(9, 10, 3), float64]) -> (Tensor[(9, 10, 3), bool], Tensor[(9, 10, 3), float64], Tensor[(1080, 2), float32], Tensor[(9, 10, 3), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) {
    %731 = @func_2954() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %732 = %731.0;
    %733 = cast(%var_6355, dtype="int32") /* ty=Tensor[(9, 10, 3), int32] */;
    %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%732, dtype="int32") /* ty=Tensor[(9, 10, 3), int32] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %737 = subtract(%735, %736) /* ty=Tensor[(9, 10, 3), int32] */;
    %738 = cast(%737, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
    %739 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
    %740 = cast(%732, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %742 = cast(%var_6355, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
    %743 = @func_5636() /* ty=(Tensor[(1080, 2), float32], Tensor[(16, 9, 15), float32]) */;
    %744 = @func_4537() /* ty=(Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) */;
    %745 = cast(meta[relay.Constant][39] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %746 = cast(meta[relay.Constant][39] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %747 = reshape(%745, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %748 = reshape(%746, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %749 = @func_3340(%747, %748) /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1, 12, 16), float32], Tensor[(1080, 2), int32], Tensor[(9, 10, 3), float64], Tensor[(192), int64]) */;
    %750 = greater(%740, %741) /* ty=Tensor[(9, 10, 3), bool] */;
    %751 = log(%742) /* ty=Tensor[(9, 10, 3), float64] */;
    %752 = %743.0;
    %753 = %744.1;
    %754 = %749.1;
    (%750, %751, %752, %753, %754, meta[relay.Constant][39] /* ty=Tensor[(192), float32] */)
  };
  %755(%var_6401) /* ty=(Tensor[(9, 10, 3), bool], Tensor[(9, 10, 3), float64], Tensor[(1080, 2), float32], Tensor[(9, 10, 3), float32], Tensor[(1, 12, 16), float32], Tensor[(192), float32]) */
}

def @func_5599() -> (Tensor[(9, 10, 3), float32],) {
  @func_5597() /* ty=(Tensor[(9, 10, 3), float32],) */
}

def @main() -> Tensor[(110, 4), float32] {
  %756 = @func_6131() /* ty=Tensor[(110, 4), float64] */;
  %757 = cast(%756, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  exp(%757) /* ty=Tensor[(110, 4), float32] */
}

def @func_4269() -> Tensor[(8, 11, 5), uint64] {
  @func_4267() /* ty=Tensor[(8, 11, 5), uint64] */
}

def @func_7129(%var_7126: Tensor[(7, 14, 16), float64], %var_7127: Tensor[(2160), int64], %var_7128: Tensor[(810), uint32]) -> (Tensor[(7, 14, 16), float64], Tensor[(16, 9, 15), int64], int64, Tensor[(2160), int64], Tensor[(9, 15, 6), float64], Tensor[(270), float64], Tensor[(110, 4), float64], Tensor[(810), uint32]) {
  @func_7124(%var_7126, %var_7127, %var_7128) /* ty=(Tensor[(7, 14, 16), float64], Tensor[(16, 9, 15), int64], int64, Tensor[(2160), int64], Tensor[(9, 15, 6), float64], Tensor[(270), float64], Tensor[(110, 4), float64], Tensor[(810), uint32]) */
}

def @func_5207() -> (Tensor[(9, 10, 3), float64],) {
  %758 = @func_4773() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %759 = %758.0;
  (%759,)
}

def @func_5972() -> Tensor[(1080, 2), bool] {
  %760 = @func_4430() /* ty=(Tensor[(7, 11, 11), float64], Tensor[(1080, 2), bool], Tensor[(110, 4), float64]) */;
  %760.1
}

def @func_7124(%var_7086: Tensor[(7, 14, 16), float64], %var_7095: Tensor[(2160), int64], %var_7109: Tensor[(810), uint32]) -> (Tensor[(7, 14, 16), float64], Tensor[(16, 9, 15), int64], int64, Tensor[(2160), int64], Tensor[(9, 15, 6), float64], Tensor[(270), float64], Tensor[(110, 4), float64], Tensor[(810), uint32]) {
  %761 = cast(%var_7086, dtype="float64") /* ty=Tensor[(7, 14, 16), float64] */;
  %762 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %763 = cast(%var_7095, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %764 = reshape(%762, newshape=[]) /* ty=int64 */;
  %765 = reshape(%763, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), int64] */;
  %766 = @func_1375(%764, %765) /* ty=(Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) */;
  %767 = cast(meta[relay.Constant][40] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %768 = cast(meta[relay.Constant][41] /* ty=Tensor[(110, 4), float64] */, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %769 = cast(meta[relay.Constant][41] /* ty=Tensor[(110, 4), float64] */, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %770 = cast(%var_7109, dtype="uint32") /* ty=Tensor[(810), uint32] */;
  %771 = reshape(%767, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %772 = reshape(%768, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
  %773 = reshape(%769, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float64] */;
  %774 = reshape(%770, newshape=[810]) /* ty=Tensor[(810), uint32] */;
  %775 = @func_2473(%771, %772, %773, %774) /* ty=(Tensor[(294), uint32], Tensor[(420), uint32], Tensor[(1728, 1), float32], Tensor[(14, 15, 2), float64], Tensor[(8, 11, 5), float32], Tensor[(9, 10, 3), float64], Tensor[(1, 270), float64], Tensor[(8, 11, 5), uint64], Tensor[(15, 13, 10), float64], Tensor[(9, 10, 3), float64], Tensor[(8, 11, 5), int16], Tensor[(5, 5, 12), bool], Tensor[(1, 300), bool], Tensor[(18), int16], Tensor[(8, 11, 5), bool], Tensor[(9, 15, 6), float64], Tensor[(810), uint32]) */;
  %776 = erf(%761) /* ty=Tensor[(7, 14, 16), float64] */;
  %777 = %766.1;
  %778 = %775.15;
  (%776, %777, 8 /* ty=int64 */, %var_7095, %778, meta[relay.Constant][40] /* ty=Tensor[(270), float64] */, meta[relay.Constant][41] /* ty=Tensor[(110, 4), float64] */, %var_7109)
}

def @func_3344(%var_3342: Tensor[(192), float32], %var_3343: Tensor[(192), float32]) -> (Tensor[(8, 11, 5), uint64], Tensor[(1, 12, 16), float32], Tensor[(1080, 2), int32], Tensor[(9, 10, 3), float64], Tensor[(192), int64]) {
  @func_3340(%var_3342, %var_3343) /* ty=(Tensor[(8, 11, 5), uint64], Tensor[(1, 12, 16), float32], Tensor[(1080, 2), int32], Tensor[(9, 10, 3), float64], Tensor[(192), int64]) */
}

def @func_5757(%var_5723: uint64, %var_5724: Tensor[(4, 2, 16), uint64], %var_5740: Tensor[(9, 10, 3), float32]) -> (Tensor[(4, 2, 16), uint64], Tensor[(6, 3), int16], Tensor[(9, 10, 3), bool], Tensor[(8, 11, 5), uint64]) {
  %779 = cast(%var_5723, dtype="uint64") /* ty=uint64 */;
  %780 = cast(%var_5724, dtype="uint64") /* ty=Tensor[(4, 2, 16), uint64] */;
  %781 = @func_3766() /* ty=(Tensor[(110, 4), bool], Tensor[(2, 3, 3), float32], Tensor[(6, 3), int16]) */;
  %782 = @func_5452() /* ty=Tensor[(9, 10, 3), float32] */;
  %783 = cast(%var_5740, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%782, dtype="bool") /* ty=Tensor[(9, 10, 3), bool] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %787 = @func_3467() /* ty=(Tensor[(8, 11, 5), uint64],) */;
  %788 = bitwise_and(%779, %780) /* ty=Tensor[(4, 2, 16), uint64] */;
  %789 = %781.2;
  %790 = less(%785, %786) /* ty=Tensor[(9, 10, 3), bool] */;
  %791 = %787.0;
  (%788, %789, %790, %791)
}

def @func_2955() -> (Tensor[(9, 10, 3), float64],) {
  %794 = fn () -> (Tensor[(9, 10, 3), float64],) {
    %792 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
    %793 = %792.0;
    (%793,)
  };
  %794() /* ty=(Tensor[(9, 10, 3), float64],) */
}

def @func_1375(%var_1352: int64, %var_1363: Tensor[(16, 9, 15), int64]) -> (Tensor[(16, 9, 1), bool], Tensor[(16, 9, 15), int64]) {
  %795 = cast(%var_1352, dtype="bool") /* ty=bool */;
  %796 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 9, 1), int64] */, dtype="bool") /* ty=Tensor[(16, 9, 1), bool] */;
  %797 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 9, 1), int64] */, dtype="int64") /* ty=Tensor[(16, 9, 1), int64] */;
  %798 = cast(%var_1363, dtype="int64") /* ty=Tensor[(16, 9, 15), int64] */;
  %799 = less(%795, %796) /* ty=Tensor[(16, 9, 1), bool] */;
  %800 = multiply(%797, %798) /* ty=Tensor[(16, 9, 15), int64] */;
  (%799, %800)
}

def @func_1315(%var_1314: Tensor[(9, 15, 6), uint32]) -> (Tensor[(9, 15, 6), float64], Tensor[(9, 15, 6), float32]) {
  %810 = fn (%var_1285: Tensor[(9, 15, 6), uint32]) -> (Tensor[(9, 15, 6), float64], Tensor[(9, 15, 6), float32]) {
    %801 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 15, 6), uint32] */, dtype="bool") /* ty=Tensor[(9, 15, 6), bool] */;
    %802 = shape_of(%var_1285, dtype="int32") /* ty=Tensor[(3), int32] */;
    %803 = cast(%var_1285, dtype="bool") /* ty=Tensor[(9, 15, 6), bool] */;
    %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %805 = not_equal(%803, %804) /* ty=Tensor[(9, 15, 6), bool] */;
    %806 = cast(%805, dtype="float64") /* ty=Tensor[(9, 15, 6), float64] */;
    %807 = cast(%805, dtype="float32") /* ty=Tensor[(9, 15, 6), float32] */;
    %808 = asin(%806) /* ty=Tensor[(9, 15, 6), float64] */;
    %809 = log10(%807) /* ty=Tensor[(9, 15, 6), float32] */;
    (%808, %809)
  };
  %810(%var_1314) /* ty=(Tensor[(9, 15, 6), float64], Tensor[(9, 15, 6), float32]) */
}

def @func_4537() -> (Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) {
  %811 = @func_3109() /* ty=(Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) */;
  %812 = %811.0;
  %813 = cast(%812, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %814 = sqrt(%813) /* ty=Tensor[(9, 10, 3), float64] */;
  %815 = cast(%814, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %816 = cast(%814, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %817 = cast(%812, dtype="float32") /* ty=Tensor[(9, 10, 3), float32] */;
  %818 = asin(%815) /* ty=Tensor[(9, 10, 3), float32] */;
  %819 = acosh(%816) /* ty=Tensor[(9, 10, 3), float32] */;
  %820 = asinh(%817) /* ty=Tensor[(9, 10, 3), float32] */;
  (%818, %819, %820)
}

def @func_3109() -> (Tensor[(9, 10, 3), float64], Tensor[(110, 4), float64]) {
  %821 = @func_2625() /* ty=(Tensor[(9, 10, 3), float64],) */;
  %822 = @func_2271() /* ty=(Tensor[(15, 13, 10), float64], Tensor[(8, 11, 5), uint64], Tensor[(110, 4), float64]) */;
  %823 = %821.0;
  %824 = %822.2;
  (%823, %824)
}

def @func_7059() -> (Tensor[(8, 11, 5), uint64],) {
  @func_7057() /* ty=(Tensor[(8, 11, 5), uint64],) */
}

def @func_5453() -> Tensor[(9, 10, 3), float32] {
  %826 = fn () -> Tensor[(9, 10, 3), float32] {
    %825 = @func_4537() /* ty=(Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32], Tensor[(9, 10, 3), float32]) */;
    %825.1
  };
  %826() /* ty=Tensor[(9, 10, 3), float32] */
}

def @func_5974() -> Tensor[(1080, 2), bool] {
  @func_5972() /* ty=Tensor[(1080, 2), bool] */
}

def @func_2807(%var_2805: Tensor[(3, 16, 13), float32], %var_2806: Tensor[(1, 192), float32]) -> (Tensor[(3, 16, 13), bool], Tensor[(3, 16, 13), float64], Tensor[(1, 12, 16), float32], Tensor[(1, 192), float32]) {
  @func_2803(%var_2805, %var_2806) /* ty=(Tensor[(3, 16, 13), bool], Tensor[(3, 16, 13), float64], Tensor[(1, 12, 16), float32], Tensor[(1, 192), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

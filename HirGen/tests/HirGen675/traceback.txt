==========mod==========
#[version = "0.0.5"]
def @func_7674() -> (Tensor[(3, 7, 4), float64],) {
  %0 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_11030() -> Tensor[(3, 7, 4), float64] {
  %2 = @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */;
  %2.0
}

def @func_1391(%var_1382: Tensor[(1, 1, 9), float64], %var_1383: Tensor[(9, 9, 9), float64]) -> (Tensor[(9, 9, 9), float64],) {
  %3 = cast(%var_1382, dtype="float64") /* ty=Tensor[(1, 1, 9), float64] */;
  %4 = cast(%var_1383, dtype="float64") /* ty=Tensor[(9, 9, 9), float64] */;
  %5 = mod(%3, %4) /* ty=Tensor[(9, 9, 9), float64] */;
  (%5,)
}

def @func_16442() -> (Tensor[(3, 7, 4), float64],) {
  %6 = @func_11209() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %7 = %6.0;
  (%7,)
}

def @func_5355() -> Tensor[(3, 7, 4), float64] {
  %8 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %8.0
}

def @func_11391() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %9 = @func_6643() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %10 = %9.0;
  %11 = @func_7010() /* ty=Tensor[(3, 7, 4), float64] */;
  (%10, %11)
}

def @func_12212() -> Tensor[(3, 7, 4), float64] {
  %12 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %12.0
}

def @func_8883() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), uint8], Tensor[(3, 7, 4), float64]) {
  %13 = @func_5355() /* ty=Tensor[(3, 7, 4), float64] */;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %15 = reshape(%14, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %16 = @func_4171(%15) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
  %17 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %18 = %16.2;
  %19 = %17.0;
  (%13, %18, %19)
}

def @func_6013() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %20 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %21 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %22 = %20.0;
  %23 = %21.0;
  (%22, %23)
}

def @func_6460() -> Tensor[(3, 7, 4), float64] {
  %24 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %24.0
}

def @func_10504(%var_10470: Tensor[(315, 1), float32]) -> (Tensor[(168), float64], Tensor[(3, 7, 4), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(20, 4), float32], Tensor[(2288), float32], Tensor[(315, 1), float64]) {
  %25 = @func_8610() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(168), float64]) */;
  %26 = cast(meta[relay.Constant][0] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %27 = cast(%var_10470, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %28 = reshape(%26, newshape=[]) /* ty=int16 */;
  %29 = reshape(%27, newshape=[315, 1]) /* ty=Tensor[(315, 1), float32] */;
  %30 = @func_5597(%28, %29) /* ty=(Tensor[(14, ?, 5), int32], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(260, 1), float32], Tensor[(260), float32], Tensor[(315, 1), float32]) */;
  %31 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %34 = reshape(%32, newshape=[2, 40]) /* ty=Tensor[(2, 40), float32] */;
  %35 = reshape(%33, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %36 = @func_8445(%34, %35) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(12, 60), float32], Tensor[(2, 40), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), bool]) */;
  %37 = cast(%var_10470, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %38 = sqrt(%37) /* ty=Tensor[(315, 1), float32] */;
  %39 = cast(%38, dtype="float64") /* ty=Tensor[(315, 1), float64] */;
  %40 = %25.2;
  %41 = %30.4;
  %42 = @func_9757() /* ty=Tensor[(3, 7, 4), float64] */;
  %43 = %31.0;
  %44 = %36.1;
  %45 = log(%39) /* ty=Tensor[(315, 1), float64] */;
  (%40, %41, meta[relay.Constant][0] /* ty=int16 */, %42, %43, %44, meta[relay.Constant][1] /* ty=Tensor[(20, 4), float32] */, meta[relay.Constant][2] /* ty=Tensor[(2288), float32] */, %45)
}

def @func_189(%var_186: Tensor[(10, 13, 2), float32]) -> (Tensor[(10, 13, 2), float32],) {
  %46 = cast(%var_186, dtype="float32") /* ty=Tensor[(10, 13, 2), float32] */;
  %47 = sinh(%46) /* ty=Tensor[(10, 13, 2), float32] */;
  (%47,)
}

def @func_15647(%var_15619: uint32, %var_15620: Tensor[(900), uint32]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 10, 9), bool], uint32, Tensor[(900), uint32], Tensor[(3, 7, 4), float64]) {
  %48 = @func_6013() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %49 = cast(%var_15619, dtype="uint32") /* ty=uint32 */;
  %50 = cast(%var_15620, dtype="uint32") /* ty=Tensor[(900), uint32] */;
  %51 = reshape(%49, newshape=[]) /* ty=uint32 */;
  %52 = reshape(%50, newshape=[10, 10, 9]) /* ty=Tensor[(10, 10, 9), uint32] */;
  %53 = @func_7927(%51, %52) /* ty=(Tensor[(10, 10, 9), bool], Tensor[(3, 7, 4), float64]) */;
  %54 = %48.0;
  %55 = %53.0;
  %56 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  (%54, %55, %var_15619, %var_15620, %56)
}

def @func_13952() -> (Tensor[(3, 7, 4), float64],) {
  %57 = @func_13391() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %58 = %57.0;
  (%58,)
}

def @func_12630() -> Tensor[(3, 7, 4), float64] {
  @func_6528() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_8711() -> Tensor[(3, 7, 4), float64] {
  @func_7010() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_14590(%var_14579: Tensor[(2, 4, 10), float64], %var_14580: Tensor[(2, 4, 10), float64], %var_14584: Tensor[(2, 4, 10), float64]) -> (Tensor[(2, 4, 10), float64], Tensor[(2, 4, 10), uint8]) {
  %59 = cast(%var_14580, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  %60 = shape_of(%var_14579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%var_14579, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %63 = cast(%var_14584, dtype="uint8") /* ty=Tensor[(2, 4, 10), uint8] */;
  %64 = shape_of(%var_14580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%var_14580, dtype="uint8") /* ty=Tensor[(2, 4, 10), uint8] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %67 = power(%61, %62) /* ty=Tensor[(2, 4, 10), float64] */;
  %68 = left_shift(%65, %66) /* ty=Tensor[(2, 4, 10), uint8] */;
  (%67, %68)
}

def @func_9853() -> Tensor[(3, 7, 4), float64] {
  @func_6575() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_12752() -> Tensor[(3, 7, 4), float64] {
  %69 = @func_7311() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %69.0
}

def @func_7636() -> (Tensor[(3, 7, 4), float64],) {
  %70 = @func_7359() /* ty=Tensor[(3, 7, 4), float64] */;
  (%70,)
}

def @func_13712() -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) {
  %71 = @func_11761() /* ty=(Tensor[(3, 7, 4), bool],) */;
  %72 = %71.0;
  %73 = @func_12357() /* ty=Tensor[(3, 7, 4), float64] */;
  (%72, %73)
}

def @func_4695() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %74 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %75 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
  (%74, %75)
}

def @func_16369(%var_16341: Tensor[(7), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(900), uint32], Tensor[(168), float64]) {
  %76 = cast(%var_16341, dtype="float64") /* ty=Tensor[(7), float64] */;
  %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(900), uint32] */, dtype="uint32") /* ty=Tensor[(900), uint32] */;
  %78 = reshape(%76, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %79 = reshape(%77, newshape=[900]) /* ty=Tensor[(900), uint32] */;
  %80 = @func_15041(%78, %79) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(105), float64], uint32, Tensor[(900), uint32], int16) */;
  %81 = @func_8610() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(168), float64]) */;
  %82 = @func_16045() /* ty=Tensor[(3, 7, 4), float64] */;
  %83 = %80.2;
  %84 = %81.1;
  (%82, %83, %var_16341, meta[relay.Constant][3] /* ty=Tensor[(900), uint32] */, %84)
}

def @func_11083() -> Tensor[(3, 7, 4), float64] {
  %85 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %85.0
}

def @func_4023(%var_4015: Tensor[(9), float64], %var_4016: Tensor[(729), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) {
  %86 = cast(%var_4015, dtype="float64") /* ty=Tensor[(9), float64] */;
  %87 = cast(%var_4016, dtype="float64") /* ty=Tensor[(729), float64] */;
  %88 = reshape(%86, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %89 = reshape(%87, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %90 = @func_1391(%88, %89) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %91 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %92 = %90.0;
  (%91, %92, %var_4015, %var_4016)
}

def @func_12298() -> (Tensor[(3, 7, 4), float64], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) {
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %94 = cast(meta[relay.Constant][5] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %95 = reshape(%93, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
  %96 = reshape(%94, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %97 = @func_345(%95, %96) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %98 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %99 = @func_8711() /* ty=Tensor[(3, 7, 4), float64] */;
  %100 = %97.1;
  %101 = %98.1;
  (%99, %100, meta[relay.Constant][4] /* ty=Tensor[(315), float32] */, meta[relay.Constant][5] /* ty=Tensor[(260), float32] */, %101)
}

def @func_11019() -> (Tensor[(3, 7, 4), float64], int16, Tensor[(5, 1, 13), int16], Tensor[(65), int16]) {
  %102 = @func_9087() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %103 = @func_8137() /* ty=int16 */;
  %104 = cast(%103, dtype="int16") /* ty=int16 */;
  %105 = cast(meta[relay.Constant][6] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %106 = reshape(%104, newshape=[]) /* ty=int16 */;
  %107 = reshape(%105, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
  %108 = @func_472(%106, %107) /* ty=(Tensor[(5, 1, 13), int16],) */;
  %109 = %102.1;
  %110 = %108.0;
  (%109, %103, %110, meta[relay.Constant][6] /* ty=Tensor[(65), int16] */)
}

def @func_9209() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %111 = @func_7674() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %112 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  %113 = %111.0;
  (%112, %113)
}

def @func_2894(%var_2878: float32, %var_2879: Tensor[(16, 1), float32], %var_2891: Tensor[(70), float64]) -> (Tensor[(16, 1), float32], int16, Tensor[(70), float64]) {
  %114 = cast(%var_2878, dtype="float32") /* ty=float32 */;
  %115 = cast(%var_2879, dtype="float32") /* ty=Tensor[(16, 1), float32] */;
  %116 = cast(%var_2891, dtype="float64") /* ty=Tensor[(70), float64] */;
  %117 = cast(%var_2878, dtype="int16") /* ty=int16 */;
  %118 = reshape(%116, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %119 = reshape(%117, newshape=[]) /* ty=int16 */;
  %120 = @func_1127(%118, %119) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
  %121 = divide(%114, %115) /* ty=Tensor[(16, 1), float32] */;
  %122 = %120.3;
  (%121, %122, %var_2891)
}

def @func_6342() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %123 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %124 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %125 = %123.0;
  (%124, %125)
}

def @func_8445(%var_8397: Tensor[(2, 40), float32], %var_8426: Tensor[(16, 13, 11), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(12, 60), float32], Tensor[(2, 40), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), bool]) {
  %126 = @func_7406() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %128 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %129 = cast(%var_8397, dtype="float32") /* ty=Tensor[(2, 40), float32] */;
  %130 = reshape(%127, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
  %131 = reshape(%128, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
  %132 = reshape(%129, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %133 = @func_3443(%130, %131, %132) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) */;
  %134 = %133.1;
  %135 = cast(%var_8426, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%134, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %139 = @func_4842() /* ty=Tensor[(3, 7, 4), float64] */;
  %140 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %141 = %126.1;
  %142 = logical_or(%137, %138) /* ty=Tensor[(16, 13, 11), bool] */;
  (%139, %140, meta[relay.Constant][7] /* ty=Tensor[(12, 60), float32] */, %var_8397, %141, %142)
}

def @func_8340() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %143 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %144 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %145 = %143.0;
  %146 = %144.0;
  (%145, %146)
}

def @func_5278() -> Tensor[(3, 7, 4), float64] {
  %147 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %147.0
}

def @func_7359() -> Tensor[(3, 7, 4), float64] {
  @func_7111() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_11209() -> (Tensor[(3, 7, 4), float64],) {
  %148 = @func_9757() /* ty=Tensor[(3, 7, 4), float64] */;
  (%148,)
}

def @func_12357() -> Tensor[(3, 7, 4), float64] {
  %149 = @func_7311() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %149.0
}

def @func_10364() -> (Tensor[(3, 7, 4), float64], Tensor[(1, 13, 13), float32], Tensor[(169), float32], Tensor[(3, 7, 4), float64]) {
  %150 = @func_9402() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(7, 12, 15), float64]) */;
  %151 = cast(meta[relay.Constant][8] /* ty=Tensor[(169), float32] */, dtype="float32") /* ty=Tensor[(169), float32] */;
  %152 = reshape(%151, newshape=[1, 13, 13]) /* ty=Tensor[(1, 13, 13), float32] */;
  %153 = @func_4728(%152) /* ty=(Tensor[(1, 13, 13), float32], Tensor[(3, 14, 4), float64], Tensor[(84), float64], Tensor[(1, 13, 13), float64]) */;
  %154 = @func_4695() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %155 = %150.0;
  %156 = %153.0;
  %157 = %154.0;
  (%155, %156, meta[relay.Constant][8] /* ty=Tensor[(169), float32] */, %157)
}

def @func_472(%var_466: int16, %var_467: Tensor[(5, 1, 13), int16]) -> (Tensor[(5, 1, 13), int16],) {
  %158 = cast(%var_466, dtype="int16") /* ty=int16 */;
  %159 = cast(%var_467, dtype="int16") /* ty=Tensor[(5, 1, 13), int16] */;
  %160 = logical_xor(%158, %159) /* ty=Tensor[(5, 1, 13), int16] */;
  (%160,)
}

def @func_4657(%var_4638: Tensor[(6, 12, 6), uint16], %var_4639: Tensor[(6, 12, 6), uint16], %var_4654: Tensor[(168), float64]) -> (Tensor[(6, 12, 6), uint16], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
  %161 = cast(%var_4639, dtype="uint16") /* ty=Tensor[(6, 12, 6), uint16] */;
  %162 = shape_of(%var_4638, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_4638, dtype="uint16") /* ty=Tensor[(6, 12, 6), uint16] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %165 = cast(%var_4654, dtype="float64") /* ty=Tensor[(168), float64] */;
  %166 = reshape(%165, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
  %167 = @func_4039(%166) /* ty=(Tensor[(3, 14, 4), float64],) */;
  %168 = multiply(%163, %164) /* ty=Tensor[(6, 12, 6), uint16] */;
  %169 = %167.0;
  (%168, %169, %var_4654)
}

def @func_3951(%var_3922: Tensor[(80), float32], %var_3923: Tensor[(2288), float32], %var_3935: Tensor[(315), float32], %var_3936: Tensor[(65, 4), float32]) -> (Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) {
  %170 = cast(%var_3922, dtype="float32") /* ty=Tensor[(80), float32] */;
  %171 = cast(%var_3922, dtype="float32") /* ty=Tensor[(80), float32] */;
  %172 = cast(%var_3923, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %173 = reshape(%170, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %174 = reshape(%171, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %175 = reshape(%172, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %176 = @func_1543(%173, %174, %175) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */;
  %177 = cast(%var_3935, dtype="float32") /* ty=Tensor[(315), float32] */;
  %178 = cast(%var_3936, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %179 = reshape(%177, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
  %180 = reshape(%178, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %181 = @func_345(%179, %180) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %182 = cast(meta[relay.Constant][9] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %183 = cast(meta[relay.Constant][10] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %184 = reshape(%182, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %185 = reshape(%183, newshape=[]) /* ty=int16 */;
  %186 = @func_1127(%184, %185) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
  %187 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %188 = %187.0;
  %189 = cast(%188, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %190 = acos(%189) /* ty=Tensor[(3, 7, 4), float32] */;
  %191 = cast(%190, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %192 = %176.0;
  %193 = %181.1;
  %194 = %186.4;
  %195 = log(%191) /* ty=Tensor[(3, 7, 4), float64] */;
  (%192, %var_3922, %var_3923, %193, %var_3935, %var_3936, %194, meta[relay.Constant][9] /* ty=Tensor[(70), float64] */, meta[relay.Constant][10] /* ty=int16 */, %195)
}

def @func_5394() -> (Tensor[(3, 7, 4), float64],) {
  %196 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %197 = %196.0;
  (%197,)
}

def @func_12550(%var_12523: int16, %var_12526: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(315, 9), int32], int16, Tensor[(390), int16], Tensor[(80), float32], Tensor[(9), float64], Tensor[(3, 7, 4), float64], int16) {
  %198 = @func_10815() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %199 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %200 = cast(%var_12523, dtype="int16") /* ty=int16 */;
  %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %202 = cast(meta[relay.Constant][12] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %203 = cast(%var_12526, dtype="float64") /* ty=Tensor[(9), float64] */;
  %204 = reshape(%200, newshape=[]) /* ty=int16 */;
  %205 = reshape(%201, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), int16] */;
  %206 = reshape(%202, newshape=[1, 80]) /* ty=Tensor[(1, 80), float32] */;
  %207 = reshape(%203, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %208 = @func_12080(%204, %205, %206, %207) /* ty=(Tensor[(13, 15, 2), int16], Tensor[(1, 80), float32], Tensor[(315, 9), int32]) */;
  %209 = cast(%var_12526, dtype="float64") /* ty=Tensor[(9), float64] */;
  %210 = reshape(%209, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %211 = @func_9478(%210) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) */;
  %212 = @func_8915() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16) */;
  %213 = %198.0;
  %214 = @func_11083() /* ty=Tensor[(3, 7, 4), float64] */;
  %215 = %199.0;
  %216 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %217 = %208.2;
  %218 = %211.0;
  %219 = %212.2;
  (%213, %214, %215, %216, %217, %var_12523, meta[relay.Constant][11] /* ty=Tensor[(390), int16] */, meta[relay.Constant][12] /* ty=Tensor[(80), float32] */, %var_12526, %218, %219)
}

def @func_3629() -> Tensor[(3, 7, 4), float64] {
  %220 = cast(-0.852008f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %221 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  mod(%220, %221) /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_12136(%var_12127: Tensor[(3, 4, 14), uint16], %var_12128: Tensor[(3, 4, 14), uint16]) -> (Tensor[(3, 4, 14), uint16],) {
  %222 = cast(%var_12128, dtype="uint16") /* ty=Tensor[(3, 4, 14), uint16] */;
  %223 = shape_of(%var_12127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%var_12127, dtype="uint16") /* ty=Tensor[(3, 4, 14), uint16] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %226 = left_shift(%224, %225) /* ty=Tensor[(3, 4, 14), uint16] */;
  (%226,)
}

def @func_13540(%var_13504: Tensor[(1, 4, 16), float32]) -> (Tensor[(1, 4, 16), float32], Tensor[(6, 12, 6), uint16], Tensor[(2, 216), uint16], Tensor[(168), float64], Tensor[(3, 14, 4), float64], Tensor[(84, 1), float64]) {
  %227 = cast(%var_13504, dtype="float32") /* ty=Tensor[(1, 4, 16), float32] */;
  %228 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 216), uint16] */, dtype="uint16") /* ty=Tensor[(2, 216), uint16] */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 216), uint16] */, dtype="uint16") /* ty=Tensor[(2, 216), uint16] */;
  %230 = cast(meta[relay.Constant][15] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %231 = reshape(%228, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), uint16] */;
  %232 = reshape(%229, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), uint16] */;
  %233 = reshape(%230, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %234 = @func_4657(%231, %232, %233) /* ty=(Tensor[(6, 12, 6), uint16], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */;
  %235 = cast(meta[relay.Constant][16] /* ty=Tensor[(84, 1), float64] */, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
  %236 = reshape(%235, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %237 = @func_4171(%236) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
  %238 = log2(%227) /* ty=Tensor[(1, 4, 16), float32] */;
  %239 = %234.0;
  %240 = %237.0;
  (%238, %239, meta[relay.Constant][14] /* ty=Tensor[(2, 216), uint16] */, meta[relay.Constant][15] /* ty=Tensor[(168), float64] */, %240, meta[relay.Constant][16] /* ty=Tensor[(84, 1), float64] */)
}

def @func_14242() -> (Tensor[(3, 7, 4), bool],) {
  %241 = @func_13465() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) */;
  %242 = %241.2;
  (%242,)
}

def @func_9379() -> (Tensor[(3, 7, 4), float64],) {
  %243 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
  (%243,)
}

def @func_16107() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %244 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %245 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %246 = %244.0;
  %247 = @func_10415() /* ty=Tensor[(3, 7, 4), float64] */;
  %248 = %245.0;
  (%246, %247, %248)
}

def @func_16300() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %249 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %250 = %249.0;
  %251 = @func_15514() /* ty=Tensor[(3, 7, 4), float64] */;
  (%250, %251)
}

def @func_8029() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %252 = @func_5182() /* ty=Tensor[(3, 7, 4), float64] */;
  %253 = @func_6575() /* ty=Tensor[(3, 7, 4), float64] */;
  (%252, %253)
}

def @func_1331(%var_1328: Tensor[(16, 13, 11), float32]) -> (Tensor[(16, 13, 11), float32],) {
  %254 = cast(%var_1328, dtype="float32") /* ty=Tensor[(16, 13, 11), float32] */;
  %255 = tan(%254) /* ty=Tensor[(16, 13, 11), float32] */;
  (%255,)
}

def @func_13225() -> Tensor[(3, 7, 4), float64] {
  @func_4430() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7167(%var_7155: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %256 = @func_6198() /* ty=Tensor[(3, 7, 4), float64] */;
  %257 = cast(%256, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %258 = cast(%var_7155, dtype="float32") /* ty=Tensor[(260), float32] */;
  %259 = reshape(%257, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %260 = reshape(%258, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %261 = @func_4319(%259, %260) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %262 = %261.2;
  (%256, %262, %var_7155)
}

def @func_16062() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %263 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  %264 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
  (%263, %264)
}

def @func_9000() -> (int16, Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64]) {
  %265 = cast(meta[relay.Constant][17] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %266 = reshape(%265, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %267 = @func_7895(%266) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) */;
  %268 = cast(meta[relay.Constant][18] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %269 = reshape(%268, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %270 = @func_8090(%269) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(9, 81), float64], Tensor[(9), float64], Tensor[(9, 81), float64], int16, Tensor[(3, 7, 4), float64]) */;
  %271 = @func_8137() /* ty=int16 */;
  %272 = %267.0;
  %273 = %270.5;
  (%271, %272, meta[relay.Constant][17] /* ty=Tensor[(168), float64] */, %273, meta[relay.Constant][18] /* ty=Tensor[(9), float64] */)
}

def @func_345(%var_304: Tensor[(5, 9, 7), float32], %var_340: Tensor[(260), float32]) -> (Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %274 = cast(%var_304, dtype="float32") /* ty=Tensor[(5, 9, 7), float32] */;
  %275 = cast(%var_304, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
  %276 = cast(%var_340, dtype="float32") /* ty=Tensor[(260), float32] */;
  %277 = reshape(%276, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
  %278 = @func_189(%277) /* ty=(Tensor[(10, 13, 2), float32],) */;
  %279 = cosh(%274) /* ty=Tensor[(5, 9, 7), float32] */;
  %280 = acos(%275) /* ty=Tensor[(5, 9, 7), float64] */;
  %281 = %278.0;
  (%279, %280, %281, %var_340)
}

def @func_9583() -> Tensor[(3, 7, 4), float64] {
  %282 = @func_6013() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %282.1
}

def @func_5957() -> (Tensor[(3, 7, 4), float64],) {
  %283 = @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */;
  %284 = %283.0;
  (%284,)
}

def @func_12000() -> Tensor[(3, 7, 4), float64] {
  %285 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %285.0
}

def @func_15315() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %286 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %287 = %286.0;
  %288 = @func_12752() /* ty=Tensor[(3, 7, 4), float64] */;
  (%287, %288)
}

def @func_8814() -> Tensor[(3, 7, 4), float64] {
  %289 = @func_7406() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %289.1
}

def @func_14656() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %290 = @func_13925() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %291 = %290.0;
  %292 = @func_12000() /* ty=Tensor[(3, 7, 4), float64] */;
  (%291, %292)
}

def @func_7254(%var_7247: Tensor[(80), float32], %var_7248: Tensor[(2288), float32], %var_7249: Tensor[(315), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32]) {
  %293 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %294 = %293.0;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %296 = reshape(%295, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %297 = @func_7092(%296) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */;
  %298 = cast(%var_7247, dtype="float32") /* ty=Tensor[(80), float32] */;
  %299 = cast(%var_7248, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %300 = cast(%var_7249, dtype="float32") /* ty=Tensor[(315), float32] */;
  %301 = cast(meta[relay.Constant][19] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %302 = reshape(%298, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %303 = reshape(%299, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %304 = reshape(%300, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %305 = reshape(%301, newshape=[65, 4]) /* ty=Tensor[(65, 4), float32] */;
  %306 = @func_3951(%302, %303, %304, %305) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) */;
  %307 = %297.0;
  %308 = %306.2;
  (%294, %307, %308, %var_7247, %var_7248, %var_7249, meta[relay.Constant][19] /* ty=Tensor[(260), float32] */)
}

def @func_16045() -> Tensor[(3, 7, 4), float64] {
  %309 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %309.1
}

def @func_14744() -> (Tensor[(3, 7, 4), float64],) {
  %310 = @func_13391() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %311 = %310.0;
  (%311,)
}

def @func_4403() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %312 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %313 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %314 = %312.0;
  (%313, %314)
}

def @main(%var_16471: Tensor[(1, 315), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(96, 1), int16], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(?, 315), bool]) {
  %315 = @func_10702() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %316 = cast(meta[relay.Constant][20] /* ty=Tensor[(96, 1), int16] */, dtype="int16") /* ty=Tensor[(96, 1), int16] */;
  %317 = cast(meta[relay.Constant][20] /* ty=Tensor[(96, 1), int16] */, dtype="int16") /* ty=Tensor[(96, 1), int16] */;
  %318 = cast(%var_16471, dtype="float32") /* ty=Tensor[(1, 315), float32] */;
  %319 = cast(meta[relay.Constant][20] /* ty=Tensor[(96, 1), int16] */, dtype="float64") /* ty=Tensor[(96, 1), float64] */;
  %320 = reshape(%316, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), int16] */;
  %321 = reshape(%317, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), int16] */;
  %322 = reshape(%318, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %323 = reshape(%319, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), float64] */;
  %324 = @func_15268(%320, %321, %322, %323) /* ty=(Tensor[(4, 6, 4), int16], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(4, 6, 4), bool]) */;
  %325 = cast(%var_16471, dtype="float64") /* ty=Tensor[(1, 315), float64] */;
  %326 = sigmoid(%325) /* ty=Tensor[(1, 315), float64] */;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(1, 315), float64] */;
  %328 = sinh(%327) /* ty=Tensor[(1, 315), float64] */;
  %329 = cast(%326, dtype="float64") /* ty=Tensor[(1, 315), float64] */;
  %330 = rsqrt(%329) /* ty=Tensor[(1, 315), float64] */;
  %331 = cast(%330, dtype="bool") /* ty=Tensor[(1, 315), bool] */;
  %332 = shape_of(%328, dtype="int32") /* ty=Tensor[(2), int32] */;
  %333 = cast(%328, dtype="bool") /* ty=Tensor[(1, 315), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %335 = %315.0;
  %336 = %324.1;
  %337 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %338 = @func_15514() /* ty=Tensor[(3, 7, 4), float64] */;
  %339 = @func_16426() /* ty=Tensor[(3, 7, 4), float64] */;
  %340 = not_equal(%333, %334) /* ty=Tensor[(?, 315), bool] */;
  (%335, %336, meta[relay.Constant][20] /* ty=Tensor[(96, 1), int16] */, %337, %338, %339, %340)
}

def @func_15189() -> Tensor[(3, 7, 4), float64] {
  %341 = @func_11391() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %341.0
}

def @func_15590() -> (Tensor[(3, 7, 4), float64], Tensor[(8, 6, 14), float32], Tensor[(672), float32]) {
  %342 = cast(meta[relay.Constant][21] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %343 = reshape(%342, newshape=[8, 6, 14]) /* ty=Tensor[(8, 6, 14), float32] */;
  %344 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
  %345 = @func_11772(%343) /* ty=Tensor[(8, 6, 14), float32] */;
  (%344, %345, meta[relay.Constant][21] /* ty=Tensor[(672), float32] */)
}

def @func_7449() -> Tensor[(3, 7, 4), float64] {
  @func_5278() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7927(%var_7907: uint32, %var_7908: Tensor[(10, 10, 9), uint32]) -> (Tensor[(10, 10, 9), bool], Tensor[(3, 7, 4), float64]) {
  %346 = cast(%var_7907, dtype="bool") /* ty=bool */;
  %347 = cast(%var_7908, dtype="bool") /* ty=Tensor[(10, 10, 9), bool] */;
  %348 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %349 = not_equal(%346, %347) /* ty=Tensor[(10, 10, 9), bool] */;
  %350 = %348.0;
  (%349, %350)
}

def @func_9478(%var_9475: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) {
  %351 = @func_8521() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) */;
  %352 = cast(%var_9475, dtype="float64") /* ty=Tensor[(9), float64] */;
  %353 = cast(meta[relay.Constant][22] /* ty=Tensor[(729), float64] */, dtype="float64") /* ty=Tensor[(729), float64] */;
  %354 = reshape(%352, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %355 = reshape(%353, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %356 = @func_1391(%354, %355) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %357 = @func_5355() /* ty=Tensor[(3, 7, 4), float64] */;
  %358 = %351.1;
  %359 = %356.0;
  (%357, %358, %359, %var_9475, meta[relay.Constant][22] /* ty=Tensor[(729), float64] */)
}

def @func_8801(%var_8783: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
  %360 = cast(%var_8783, dtype="float64") /* ty=Tensor[(168), float64] */;
  %361 = reshape(%360, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
  %362 = @func_4039(%361) /* ty=(Tensor[(3, 14, 4), float64],) */;
  %363 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
  %364 = %362.0;
  (%363, %364, %var_8783)
}

def @func_10267() -> (Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(243, 3), bool]) {
  %365 = cast(meta[relay.Constant][23] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %366 = cast(meta[relay.Constant][24] /* ty=Tensor[(243, 3), float64] */, dtype="float64") /* ty=Tensor[(243, 3), float64] */;
  %367 = reshape(%365, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %368 = reshape(%366, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %369 = @func_1391(%367, %368) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %370 = %369.0;
  %371 = cast(%370, dtype="bool") /* ty=Tensor[(9, 9, 9), bool] */;
  %372 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(243, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %373 = cast(meta[relay.Constant][24] /* ty=Tensor[(243, 3), float64] */, dtype="bool") /* ty=Tensor[(243, 3), bool] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %375 = @func_9583() /* ty=Tensor[(3, 7, 4), float64] */;
  %376 = greater_equal(%373, %374) /* ty=Tensor[(243, 3), bool] */;
  (%375, meta[relay.Constant][23] /* ty=Tensor[(9), float64] */, %376)
}

def @func_12491() -> Tensor[(3, 7, 4), float64] {
  %377 = @func_9209() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %377.1
}

def @func_12815(%var_12797: Tensor[(720), float32], %var_12798: Tensor[(80), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32], Tensor[(3, 7, 4), float64]) {
  %378 = cast(%var_12797, dtype="float32") /* ty=Tensor[(720), float32] */;
  %379 = cast(%var_12798, dtype="float32") /* ty=Tensor[(80), float32] */;
  %380 = reshape(%378, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %381 = reshape(%379, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %382 = @func_10452(%380, %381) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32]) */;
  %383 = @func_5394() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %384 = @func_6198() /* ty=Tensor[(3, 7, 4), float64] */;
  %385 = %382.1;
  %386 = %383.0;
  (%384, %385, %var_12797, %var_12798, %386)
}

def @func_4527() -> (Tensor[(3, 7, 4), float64],) {
  %387 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %388 = %387.1;
  (%388,)
}

def @func_7611(%var_7592: Tensor[(3, 6, 2), float64], %var_7593: Tensor[(3, 6, 2), float64]) -> (Tensor[(3, 6, 2), float64],) {
  %389 = cast(%var_7593, dtype="float64") /* ty=Tensor[(3, 6, 2), float64] */;
  %390 = shape_of(%var_7592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%var_7592, dtype="float64") /* ty=Tensor[(3, 6, 2), float64] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %393 = divide(%391, %392) /* ty=Tensor[(3, 6, 2), float64] */;
  (%393,)
}

def @func_13101() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %394 = @func_11391() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %395 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %396 = %394.0;
  (%395, %396)
}

def @func_6643() -> (Tensor[(3, 7, 4), float64],) {
  %397 = @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */;
  %398 = %397.1;
  (%398,)
}

def @func_5634() -> (Tensor[(3, 7, 4), float64],) {
  %399 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
  (%399,)
}

def @func_4430() -> Tensor[(3, 7, 4), float64] {
  %400 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %400.0
}

def @func_6482() -> (Tensor[(3, 7, 4), float64],) {
  %401 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%401,)
}

def @func_9087() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %402 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %403 = cast(meta[relay.Constant][25] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %404 = reshape(%403, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
  %405 = @func_189(%404) /* ty=(Tensor[(10, 13, 2), float32],) */;
  %406 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %407 = %402.0;
  %408 = %405.0;
  (%406, %407, %408, meta[relay.Constant][25] /* ty=Tensor[(260), float32] */)
}

def @func_11951(%var_11797: Tensor[(15, 6, 11), int64], %var_11815: Tensor[(9), float64], %var_11893: Tensor[(260, 1), float32], %var_11913: Tensor[(15, 6, 11), float64]) -> (Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(27, 27), float64], Tensor[(243, 3), float32], int16, int16, Tensor[(260, 1), float32], Tensor[(15, 6, 11), float64]) {
  %409 = cast(%var_11815, dtype="float64") /* ty=Tensor[(9), float64] */;
  %410 = cast(meta[relay.Constant][26] /* ty=Tensor[(27, 27), float64] */, dtype="float64") /* ty=Tensor[(27, 27), float64] */;
  %411 = cast(-8 /* ty=int64 */, dtype="int16") /* ty=int16 */;
  %412 = reshape(%409, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %413 = reshape(%410, newshape=[729]) /* ty=Tensor[(729), float64] */;
  %414 = reshape(%411, newshape=[]) /* ty=int16 */;
  %415 = @func_9527(%412, %413, %414) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) */;
  %416 = cast(meta[relay.Constant][26] /* ty=Tensor[(27, 27), float64] */, dtype="bool") /* ty=Tensor[(27, 27), bool] */;
  %417 = reshape(%416, newshape=[243, 3]) /* ty=Tensor[(243, 3), bool] */;
  %418 = @func_11514(%417) /* ty=(Tensor[(243, 3), float32], Tensor[(243, 3), bool]) */;
  %419 = @func_8896() /* ty=(int16,) */;
  %420 = cast(%var_11893, dtype="float32") /* ty=Tensor[(260, 1), float32] */;
  %421 = reshape(%420, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %422 = @func_4786(%421) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(14, ?, 5), float64], Tensor[(70), float64], int16, Tensor[(260), float32], Tensor[(315), float32], Tensor[(260), float32]) */;
  %423 = cast(-8 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %424 = cast(%var_11797, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %425 = less(%423, %424) /* ty=Tensor[(15, 6, 11), bool] */;
  %426 = cast(%425, dtype="float32") /* ty=Tensor[(15, 6, 11), float32] */;
  %427 = erf(%426) /* ty=Tensor[(15, 6, 11), float32] */;
  %428 = cast(%427, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %429 = atanh(%428) /* ty=Tensor[(15, 6, 11), float64] */;
  %430 = cast(%var_11913, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %434 = not_equal(%432, %433) /* ty=Tensor[(15, 6, 11), bool] */;
  %435 = cast(%434, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %436 = %415.1;
  %437 = %418.0;
  %438 = %419.0;
  %439 = %422.3;
  %440 = cosh(%435) /* ty=Tensor[(15, 6, 11), float64] */;
  (%436, %var_11815, meta[relay.Constant][26] /* ty=Tensor[(27, 27), float64] */, %437, %438, %439, %var_11893, %440)
}

def @func_4728(%var_4713: Tensor[(1, 13, 13), float32]) -> (Tensor[(1, 13, 13), float32], Tensor[(3, 14, 4), float64], Tensor[(84), float64], Tensor[(1, 13, 13), float64]) {
  %441 = cast(%var_4713, dtype="float32") /* ty=Tensor[(1, 13, 13), float32] */;
  %442 = cast(meta[relay.Constant][27] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %443 = reshape(%442, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %444 = @func_4171(%443) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
  %445 = cast(%var_4713, dtype="float64") /* ty=Tensor[(1, 13, 13), float64] */;
  %446 = sinh(%441) /* ty=Tensor[(1, 13, 13), float32] */;
  %447 = %444.0;
  %448 = exp(%445) /* ty=Tensor[(1, 13, 13), float64] */;
  (%446, %447, meta[relay.Constant][27] /* ty=Tensor[(84), float64] */, %448)
}

def @func_15953() -> Tensor[(3, 7, 4), float64] {
  @func_5182() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_12833() -> Tensor[(260), float32] {
  %449 = @func_12298() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
  %449.3
}

def @func_3896() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %450 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %451 = cast(%450, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %452 = cosh(%451) /* ty=Tensor[(3, 7, 4), float64] */;
  %453 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  (%452, %453)
}

def @func_11255() -> (Tensor[(10, 5, 11), int16], Tensor[(3, 7, 4), float64]) {
  %454 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
  %455 = cos(%454) /* ty=Tensor[(10, 5, 11), float32] */;
  %456 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 5, 11), float32] */, dtype="int16") /* ty=Tensor[(10, 5, 11), int16] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%455, dtype="int16") /* ty=Tensor[(10, 5, 11), int16] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %460 = minimum(%458, %459) /* ty=Tensor[(10, 5, 11), int16] */;
  %461 = @func_9119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%460, %461)
}

def @func_5793() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) {
  %462 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %463 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %464 = @func_5278() /* ty=Tensor[(3, 7, 4), float64] */;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %466 = %462.0;
  %467 = %463.0;
  %468 = log2(%465) /* ty=Tensor[(3, 7, 4), float32] */;
  (%466, %467, %468)
}

def @func_13212() -> (Tensor[(12, 4, 9), float64],) {
  %469 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 4, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 9), float32] */;
  %470 = tan(%469) /* ty=Tensor[(12, 4, 9), float32] */;
  %471 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 4, 9), float32] */, dtype="float64") /* ty=Tensor[(12, 4, 9), float64] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="float64") /* ty=Tensor[(12, 4, 9), float64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %475 = floor_divide(%473, %474) /* ty=Tensor[(12, 4, 9), float64] */;
  (%475,)
}

def @func_4786(%var_4784: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(14, ?, 5), float64], Tensor[(70), float64], int16, Tensor[(260), float32], Tensor[(315), float32], Tensor[(260), float32]) {
  %476 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %477 = cast(meta[relay.Constant][30] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %478 = cast(meta[relay.Constant][31] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %479 = reshape(%477, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %480 = reshape(%478, newshape=[]) /* ty=int16 */;
  %481 = @func_1127(%479, %480) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
  %482 = cast(meta[relay.Constant][32] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %483 = cast(%var_4784, dtype="float32") /* ty=Tensor[(260), float32] */;
  %484 = reshape(%482, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
  %485 = reshape(%483, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %486 = @func_345(%484, %485) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %487 = %476.0;
  %488 = %481.0;
  %489 = %486.3;
  (%487, %488, meta[relay.Constant][30] /* ty=Tensor[(70), float64] */, meta[relay.Constant][31] /* ty=int16 */, %489, meta[relay.Constant][32] /* ty=Tensor[(315), float32] */, %var_4784)
}

def @func_14073() -> (Tensor[(3, 7, 4), float64],) {
  %490 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %491 = %490.0;
  (%491,)
}

def @func_4632() -> Tensor[(3, 7, 4), float64] {
  %492 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %492.0
}

def @func_13925() -> (Tensor[(3, 7, 4), float64],) {
  %493 = @func_10415() /* ty=Tensor[(3, 7, 4), float64] */;
  (%493,)
}

def @func_15094() -> Tensor[(3, 7, 4), float64] {
  @func_5119() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_5081() -> (Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) {
  %494 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %495 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %497 = cast(meta[relay.Constant][33] /* ty=Tensor[(130, 2), float32] */, dtype="float32") /* ty=Tensor[(130, 2), float32] */;
  %498 = reshape(%496, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %499 = reshape(%497, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %500 = @func_4319(%498, %499) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %501 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 7, 4), float64] */, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %502 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%495, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %505 = floor_divide(%503, %504) /* ty=Tensor[(3, 7, 4), float32] */;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %507 = sinh(%506) /* ty=Tensor[(3, 7, 4), float32] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %509 = cast(meta[relay.Constant][35] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %510 = cast(meta[relay.Constant][36] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %511 = reshape(%509, newshape=[]) /* ty=int16 */;
  %512 = reshape(%510, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
  %513 = @func_472(%511, %512) /* ty=(Tensor[(5, 1, 13), int16],) */;
  %514 = %494.0;
  %515 = %500.3;
  %516 = atanh(%508) /* ty=Tensor[(3, 7, 4), float64] */;
  %517 = %513.0;
  %518 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  (%514, %515, meta[relay.Constant][33] /* ty=Tensor[(130, 2), float32] */, %516, %517, meta[relay.Constant][35] /* ty=int16 */, meta[relay.Constant][36] /* ty=Tensor[(65), int16] */, %518)
}

def @func_9286(%var_9261: int16) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(13, 5), int16]) {
  %519 = @func_8214() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
  %520 = %519.1;
  %521 = cast(%520, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %522 = reshape(%521, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %523 = @func_4171(%522) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
  %524 = cast(%var_9261, dtype="int16") /* ty=int16 */;
  %525 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 5), int16] */, dtype="int16") /* ty=Tensor[(13, 5), int16] */;
  %526 = reshape(%524, newshape=[]) /* ty=int16 */;
  %527 = reshape(%525, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
  %528 = @func_472(%526, %527) /* ty=(Tensor[(5, 1, 13), int16],) */;
  %529 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %530 = %523.0;
  %531 = %528.0;
  (%529, %520, %530, %531, %var_9261, meta[relay.Constant][37] /* ty=Tensor[(13, 5), int16] */)
}

def @func_10863() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %532 = @func_7311() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %533 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
  %534 = %532.0;
  (%533, %534)
}

def @func_10538() -> Tensor[(3, 7, 4), float64] {
  @func_10415() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_5891() -> (Tensor[(3, 7, 4), float64],) {
  %535 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%535,)
}

def @func_3725(%var_3639: Tensor[(9), float64], %var_3640: Tensor[(9, 81), float64], %var_3711: int16) -> (Tensor[(9), float64], Tensor[(9, 81), float64], Tensor[(5, 1, 13), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float32]) {
  %536 = cast(%var_3640, dtype="float32") /* ty=Tensor[(9, 81), float32] */;
  %537 = cosh(%536) /* ty=Tensor[(9, 81), float32] */;
  %538 = cast(%var_3639, dtype="float64") /* ty=Tensor[(9), float64] */;
  %539 = cast(%var_3640, dtype="float64") /* ty=Tensor[(9, 81), float64] */;
  %540 = reshape(%538, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %541 = reshape(%539, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %542 = @func_1391(%540, %541) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %543 = %542.0;
  %544 = cast(%543, dtype="float64") /* ty=Tensor[(9, 9, 9), float64] */;
  %545 = shape_of(%537, dtype="int32") /* ty=Tensor[(2), int32] */;
  %546 = cast(%537, dtype="float64") /* ty=Tensor[(9, 81), float64] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %548 = cast(meta[relay.Constant][38] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %549 = cast(%var_3711, dtype="int16") /* ty=int16 */;
  %550 = reshape(%548, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %551 = reshape(%549, newshape=[]) /* ty=int16 */;
  %552 = @func_1127(%550, %551) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
  %553 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %554 = cast(%553, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %555 = atan(%554) /* ty=Tensor[(3, 7, 4), float64] */;
  %556 = cast(%555, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %557 = tan(%556) /* ty=Tensor[(3, 7, 4), float64] */;
  %558 = cast(%555, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%557, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %562 = power(%560, %561) /* ty=Tensor[(3, 7, 4), float32] */;
  %563 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %565 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%562, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %568 = minimum(%546, %547) /* ty=Tensor[(9, 81), float64] */;
  %569 = %552.2;
  %570 = floor_mod(%566, %567) /* ty=Tensor[(3, 7, 4), float32] */;
  (%var_3639, %568, %569, meta[relay.Constant][38] /* ty=Tensor[(70), float64] */, %var_3711, %570)
}

def @func_12867() -> (Tensor[(3, 7, 4), float64],) {
  %571 = @func_10789() /* ty=Tensor[(3, 7, 4), float64] */;
  (%571,)
}

def @func_4609(%var_4587: Tensor[(3, 7, 4), float64]) -> (Tensor[(7, 12, 15), float64], Tensor[(3, 7, 4), int64], Tensor[(3, 14, 4), float64], Tensor[(42, 4), float64], Tensor[(3, 7, 4), float64]) {
  %572 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %574 = reshape(%573, newshape=[7, 12, 1]) /* ty=Tensor[(7, 12, 1), float64] */;
  %575 = @func_3811(%574) /* ty=(Tensor[(7, 12, 15), float64],) */;
  %576 = cast(%var_4587, dtype="int64") /* ty=Tensor[(3, 7, 4), int64] */;
  %577 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%572, dtype="int64") /* ty=Tensor[(3, 7, 4), int64] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %580 = cast(meta[relay.Constant][39] /* ty=Tensor[(42, 4), float64] */, dtype="float64") /* ty=Tensor[(42, 4), float64] */;
  %581 = reshape(%580, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
  %582 = @func_4039(%581) /* ty=(Tensor[(3, 14, 4), float64],) */;
  %583 = %575.0;
  %584 = bitwise_xor(%578, %579) /* ty=Tensor[(3, 7, 4), int64] */;
  %585 = %582.0;
  %586 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  (%583, %584, %585, meta[relay.Constant][39] /* ty=Tensor[(42, 4), float64] */, %586)
}

def @func_7311() -> (Tensor[(3, 7, 4), float64],) {
  %587 = @func_5182() /* ty=Tensor[(3, 7, 4), float64] */;
  (%587,)
}

def @func_8521() -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) {
  %588 = @func_7971() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %589 = @func_8214() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
  %590 = %588.0;
  %591 = %589.2;
  (%590, %591)
}

def @func_5677() -> int16 {
  %592 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
  %592.5
}

def @func_7563() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], int16) {
  %593 = @func_5182() /* ty=Tensor[(3, 7, 4), float64] */;
  %594 = cast(%593, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %595 = reshape(%594, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %596 = @func_7092(%595) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */;
  %597 = %596.0;
  %598 = @func_5677() /* ty=int16 */;
  (%593, %597, %598)
}

def @func_11772(%var_11763: Tensor[(8, 6, 14), float32]) -> Tensor[(8, 6, 14), float32] {
  %599 = cast(%var_11763, dtype="float32") /* ty=Tensor[(8, 6, 14), float32] */;
  cosh(%599) /* ty=Tensor[(8, 6, 14), float32] */
}

def @func_9527(%var_9518: Tensor[(9), float64], %var_9519: Tensor[(729), float64], %var_9520: int16) -> (Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) {
  %600 = cast(%var_9518, dtype="float64") /* ty=Tensor[(9), float64] */;
  %601 = cast(%var_9519, dtype="float64") /* ty=Tensor[(729), float64] */;
  %602 = cast(%var_9520, dtype="int16") /* ty=int16 */;
  %603 = cast(meta[relay.Constant][40] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %604 = reshape(%600, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %605 = reshape(%601, newshape=[729]) /* ty=Tensor[(729), float64] */;
  %606 = reshape(%602, newshape=[]) /* ty=int16 */;
  %607 = reshape(%603, newshape=[1, 65]) /* ty=Tensor[(1, 65), int16] */;
  %608 = @func_7761(%604, %605, %606, %607) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(1, 65), int16]) */;
  %609 = @func_5182() /* ty=Tensor[(3, 7, 4), float64] */;
  %610 = %608.5;
  (%609, %610, %var_9518, %var_9519, %var_9520, meta[relay.Constant][40] /* ty=Tensor[(65), int16] */)
}

def @func_7010() -> Tensor[(3, 7, 4), float64] {
  %611 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %611.0
}

def @func_13270() -> (Tensor[(3, 7, 4), float64],) {
  %612 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%612,)
}

def @func_9449() -> (Tensor[(3, 7, 4), float64],) {
  %613 = @func_8814() /* ty=Tensor[(3, 7, 4), float64] */;
  (%613,)
}

def @func_7064() -> Tensor[(3, 7, 4), float64] {
  %614 = @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */;
  %614.1
}

def @func_10160(%var_10122: Tensor[(6, 8, 16), float32], %var_10139: float32, %var_10140: Tensor[(16), float32], %var_10141: Tensor[(70, 1), float64]) -> (int16, float32, Tensor[(16), float32], Tensor[(70, 1), float64], Tensor[(6, 8, 16), uint8]) {
  %615 = cast(%var_10139, dtype="float32") /* ty=float32 */;
  %616 = cast(%var_10140, dtype="float32") /* ty=Tensor[(16), float32] */;
  %617 = cast(%var_10141, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
  %618 = reshape(%615, newshape=[]) /* ty=float32 */;
  %619 = reshape(%616, newshape=[16, 1]) /* ty=Tensor[(16, 1), float32] */;
  %620 = reshape(%617, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %621 = @func_2894(%618, %619, %620) /* ty=(Tensor[(16, 1), float32], int16, Tensor[(70), float64]) */;
  %622 = cast(%var_10122, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %623 = sin(%622) /* ty=Tensor[(6, 8, 16), float32] */;
  %624 = cast(%var_10122, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%623, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %628 = power(%626, %627) /* ty=Tensor[(6, 8, 16), float32] */;
  %629 = cast(%628, dtype="uint8") /* ty=Tensor[(6, 8, 16), uint8] */;
  %630 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%623, dtype="uint8") /* ty=Tensor[(6, 8, 16), uint8] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %633 = %621.1;
  %634 = multiply(%631, %632) /* ty=Tensor[(6, 8, 16), uint8] */;
  (%633, %var_10139, %var_10140, %var_10141, %634)
}

def @func_10415() -> Tensor[(3, 7, 4), float64] {
  @func_8814() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_4319(%var_4302: Tensor[(3, 7, 4), float64], %var_4317: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %635 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %636 = cast(%var_4302, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%635, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %640 = cast(%var_4317, dtype="float32") /* ty=Tensor[(260), float32] */;
  %641 = reshape(%640, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
  %642 = @func_189(%641) /* ty=(Tensor[(10, 13, 2), float32],) */;
  %643 = equal(%638, %639) /* ty=Tensor[(3, 7, 4), bool] */;
  %644 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %645 = %642.0;
  (%643, %644, %645, %var_4317)
}

def @func_1543(%var_1524: Tensor[(8, 5, 2), float32], %var_1525: Tensor[(8, 5, 2), float32], %var_1532: Tensor[(2288), float32]) -> (Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) {
  %646 = cast(%var_1532, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %647 = reshape(%646, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %648 = @func_1331(%647) /* ty=(Tensor[(16, 13, 11), float32],) */;
  %649 = cast(%var_1525, dtype="float32") /* ty=Tensor[(8, 5, 2), float32] */;
  %650 = shape_of(%var_1524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%var_1524, dtype="float32") /* ty=Tensor[(8, 5, 2), float32] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %653 = add(%651, %652) /* ty=Tensor[(8, 5, 2), float32] */;
  %654 = cast(%653, dtype="bool") /* ty=Tensor[(8, 5, 2), bool] */;
  %655 = shape_of(%var_1525, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_1525, dtype="bool") /* ty=Tensor[(8, 5, 2), bool] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %658 = %648.0;
  %659 = less(%656, %657) /* ty=Tensor[(8, 5, 2), bool] */;
  (%658, %var_1532, %659)
}

def @func_5715() -> (Tensor[(3, 7, 4), float64],) {
  %660 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %661 = %660.0;
  (%661,)
}

def @func_10452(%var_10447: Tensor[(720), float32], %var_10448: Tensor[(80), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32]) {
  %662 = cast(%var_10447, dtype="float32") /* ty=Tensor[(720), float32] */;
  %663 = cast(%var_10447, dtype="float32") /* ty=Tensor[(720), float32] */;
  %664 = cast(%var_10448, dtype="float32") /* ty=Tensor[(80), float32] */;
  %665 = reshape(%662, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
  %666 = reshape(%663, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
  %667 = reshape(%664, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %668 = @func_3443(%665, %666, %667) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) */;
  %669 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %670 = %668.0;
  (%669, %670, %var_10447, %var_10448)
}

def @func_9055() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
  %671 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %672 = %671.0;
  %673 = cast(%672, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %674 = cast(meta[relay.Constant][41] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %675 = reshape(%673, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %676 = reshape(%674, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %677 = @func_4319(%675, %676) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %678 = @func_9000() /* ty=(int16, Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64]) */;
  %679 = @func_5278() /* ty=Tensor[(3, 7, 4), float64] */;
  %680 = cast(%679, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %681 = reshape(%680, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %682 = @func_4609(%681) /* ty=(Tensor[(7, 12, 15), float64], Tensor[(3, 7, 4), int64], Tensor[(3, 14, 4), float64], Tensor[(42, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %683 = %677.1;
  %684 = %678.2;
  %685 = %682.4;
  (%672, %683, meta[relay.Constant][41] /* ty=Tensor[(260), float32] */, %679, %684, %685)
}

def @func_6198() -> Tensor[(3, 7, 4), float64] {
  @func_5355() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_13430(%var_13414: Tensor[(80), float32], %var_13415: Tensor[(2, 1144), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(2, 40), float32], Tensor[(80), float32], Tensor[(2, 1144), float32]) {
  %686 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %687 = cast(%var_13414, dtype="float32") /* ty=Tensor[(80), float32] */;
  %688 = cast(%var_13415, dtype="float32") /* ty=Tensor[(2, 1144), float32] */;
  %689 = reshape(%687, newshape=[2, 40]) /* ty=Tensor[(2, 40), float32] */;
  %690 = reshape(%688, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %691 = @func_8445(%689, %690) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(12, 60), float32], Tensor[(2, 40), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), bool]) */;
  %692 = %686.1;
  %693 = %691.3;
  (%692, %693, %var_13414, %var_13415)
}

def @func_16426() -> Tensor[(3, 7, 4), float64] {
  %694 = @func_5394() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %694.0
}

def @func_14524() -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %695 = @func_8214() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
  %696 = %695.1;
  %697 = cast(%696, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %698 = cast(meta[relay.Constant][42] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %699 = reshape(%697, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %700 = reshape(%698, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %701 = @func_4319(%699, %700) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %702 = %701.2;
  (%696, %702, meta[relay.Constant][42] /* ty=Tensor[(260), float32] */)
}

def @func_7895(%var_7886: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
  %703 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %704 = cast(%var_7886, dtype="float64") /* ty=Tensor[(168), float64] */;
  %705 = reshape(%704, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %706 = @func_6137(%705) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */;
  %707 = @func_4695() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %708 = %703.0;
  %709 = %706.0;
  %710 = %707.0;
  (%708, %709, %var_7886, %710)
}

def @func_14378() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %711 = @func_7785() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %712 = @func_9119() /* ty=Tensor[(3, 7, 4), float64] */;
  %713 = %711.0;
  (%712, %713)
}

def @func_11984(%var_11959: Tensor[(8, 13, 4), float64]) -> (Tensor[(8, 13, 4), float64], Tensor[(8, 13, 4), float64]) {
  %714 = cast(%var_11959, dtype="float64") /* ty=Tensor[(8, 13, 4), float64] */;
  %715 = rsqrt(%714) /* ty=Tensor[(8, 13, 4), float64] */;
  %716 = cast(%715, dtype="float64") /* ty=Tensor[(8, 13, 4), float64] */;
  %717 = cast(%var_11959, dtype="float64") /* ty=Tensor[(8, 13, 4), float64] */;
  %718 = tan(%716) /* ty=Tensor[(8, 13, 4), float64] */;
  %719 = sin(%717) /* ty=Tensor[(8, 13, 4), float64] */;
  (%718, %719)
}

def @func_7971() -> (Tensor[(3, 7, 4), float64],) {
  %720 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
  (%720,)
}

def @func_10086(%var_10074: Tensor[(14, 6, 9), float32]) -> (Tensor[(14, 6, 9), float64],) {
  %721 = cast(%var_10074, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  %722 = sinh(%721) /* ty=Tensor[(14, 6, 9), float32] */;
  %723 = cast(%722, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
  %724 = rsqrt(%723) /* ty=Tensor[(14, 6, 9), float64] */;
  (%724,)
}

def @func_13391() -> (Tensor[(3, 7, 4), float64],) {
  %725 = @func_6643() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %726 = %725.0;
  (%726,)
}

def @func_15330() -> (Tensor[(3, 7, 4), float64],) {
  %727 = @func_11717() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %728 = %727.1;
  (%728,)
}

def @func_15041(%var_15029: Tensor[(7), float64], %var_15032: Tensor[(900), uint32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(105), float64], uint32, Tensor[(900), uint32], int16) {
  %729 = @func_14378() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %730 = @func_13712() /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */;
  %731 = cast(%var_15029, dtype="float64") /* ty=Tensor[(7), float64] */;
  %732 = cast(meta[relay.Constant][43] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %733 = cast(meta[relay.Constant][44] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %734 = cast(%var_15032, dtype="uint32") /* ty=Tensor[(900), uint32] */;
  %735 = reshape(%731, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), float64] */;
  %736 = reshape(%732, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %737 = reshape(%733, newshape=[]) /* ty=uint32 */;
  %738 = reshape(%734, newshape=[9, 100]) /* ty=Tensor[(9, 100), uint32] */;
  %739 = @func_13628(%735, %736, %737, %738) /* ty=(Tensor[(1, 15, 7), float64], Tensor[(3, 7, 4), float64], uint32, Tensor[(9, 100), uint32]) */;
  %740 = %729.1;
  %741 = %730.0;
  %742 = %739.0;
  %743 = @func_8137() /* ty=int16 */;
  (%740, %741, %742, %var_15029, meta[relay.Constant][43] /* ty=Tensor[(105), float64] */, meta[relay.Constant][44] /* ty=uint32 */, %var_15032, %743)
}

def @func_7111() -> Tensor[(3, 7, 4), float64] {
  %744 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %744.0
}

def @func_15894(%var_15892: Tensor[(1, 260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(84), float64], Tensor[(169), float32], Tensor[(3, 7, 4), float64], Tensor[(260), int16], Tensor[(1, 260), float32]) {
  %745 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %746 = cast(meta[relay.Constant][45] /* ty=Tensor[(169), float32] */, dtype="float32") /* ty=Tensor[(169), float32] */;
  %747 = reshape(%746, newshape=[1, 13, 13]) /* ty=Tensor[(1, 13, 13), float32] */;
  %748 = @func_4728(%747) /* ty=(Tensor[(1, 13, 13), float32], Tensor[(3, 14, 4), float64], Tensor[(84), float64], Tensor[(1, 13, 13), float64]) */;
  %749 = cast(%var_15892, dtype="float32") /* ty=Tensor[(1, 260), float32] */;
  %750 = reshape(%749, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %751 = @func_9561(%750) /* ty=(Tensor[(260), int16],) */;
  %752 = @func_9583() /* ty=Tensor[(3, 7, 4), float64] */;
  %753 = %745.0;
  %754 = %748.2;
  %755 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
  %756 = %751.0;
  (%752, %753, %754, meta[relay.Constant][45] /* ty=Tensor[(169), float32] */, %755, %756, %var_15892)
}

def @func_9757() -> Tensor[(3, 7, 4), float64] {
  %757 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %757.0
}

def @func_14489() -> Tensor[(3, 7, 4), float64] {
  %758 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %758.0
}

def @func_10815() -> (Tensor[(3, 7, 4), float64],) {
  %759 = @func_7449() /* ty=Tensor[(3, 7, 4), float64] */;
  (%759,)
}

def @func_14461() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %760 = @func_13712() /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */;
  %761 = @func_7064() /* ty=Tensor[(3, 7, 4), float64] */;
  %762 = %760.1;
  (%761, %762)
}

def @func_9159() -> (Tensor[(3, 7, 4), float64],) {
  %763 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %764 = %763.0;
  (%764,)
}

def @func_12442() -> Tensor[(3, 7, 4), float64] {
  %765 = @func_10702() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %765.0
}

def @func_4171(%var_4147: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) {
  %766 = cast(meta[relay.Constant][46] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %767 = reshape(%766, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
  %768 = @func_4039(%767) /* ty=(Tensor[(3, 14, 4), float64],) */;
  %769 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
  %770 = cast(%var_4147, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%769, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %774 = less_equal(%772, %773) /* ty=Tensor[(3, 7, 4), bool] */;
  %775 = cast(%769, dtype="uint8") /* ty=Tensor[(3, 7, 4), uint8] */;
  %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%774, dtype="uint8") /* ty=Tensor[(3, 7, 4), uint8] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %779 = %768.0;
  %780 = logical_xor(%777, %778) /* ty=Tensor[(3, 7, 4), uint8] */;
  (%779, meta[relay.Constant][46] /* ty=Tensor[(168), float64] */, %780)
}

def @func_8896() -> (int16,) {
  %781 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
  %782 = %781.5;
  (%782,)
}

def @func_9561(%var_9542: Tensor[(260), float32]) -> (Tensor[(260), int16],) {
  %783 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
  %784 = %783.1;
  %785 = cast(%var_9542, dtype="int16") /* ty=Tensor[(260), int16] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(1), int32] */;
  %787 = cast(%784, dtype="int16") /* ty=Tensor[(260), int16] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?), int16] */;
  %789 = right_shift(%787, %788) /* ty=Tensor[(260), int16] */;
  (%789,)
}

def @func_13465() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) {
  %790 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %791 = @func_9159() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %792 = @func_11761() /* ty=(Tensor[(3, 7, 4), bool],) */;
  %793 = %790.0;
  %794 = %791.0;
  %795 = %792.0;
  (%793, %794, %795)
}

def @func_5528(%var_5513: Tensor[(720), float32], %var_5515: Tensor[(88, 26), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(80), float32], Tensor[(720), float32], Tensor[(168), float64], Tensor[(88, 26), float32]) {
  %796 = cast(%var_5513, dtype="float32") /* ty=Tensor[(720), float32] */;
  %797 = cast(meta[relay.Constant][47] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %798 = cast(%var_5515, dtype="float32") /* ty=Tensor[(88, 26), float32] */;
  %799 = reshape(%796, newshape=[2, 360]) /* ty=Tensor[(2, 360), float32] */;
  %800 = reshape(%797, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %801 = reshape(%798, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %802 = @func_4277(%799, %800, %801) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2, 360), float32], Tensor[(80), float32], Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), int32]) */;
  %803 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  %804 = %802.5;
  (%803, %804, %var_5513, meta[relay.Constant][47] /* ty=Tensor[(168), float64] */, %var_5515)
}

def @func_8942() -> Tensor[(3, 7, 4), float64] {
  %805 = @func_6643() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %805.0
}

def @func_4842() -> Tensor[(3, 7, 4), float64] {
  @func_4632() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_13680() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %806 = @func_10364() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(1, 13, 13), float32], Tensor[(169), float32], Tensor[(3, 7, 4), float64]) */;
  %807 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
  %808 = %806.3;
  (%807, %808)
}

def @func_12690() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(14, 6, 9), float64], Tensor[(756), float32], Tensor[(3, 7, 4), float64]) {
  %809 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %810 = @func_7563() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], int16) */;
  %811 = @func_7971() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %812 = cast(meta[relay.Constant][48] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %813 = reshape(%812, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), float32] */;
  %814 = @func_10086(%813) /* ty=(Tensor[(14, 6, 9), float64],) */;
  %815 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %816 = %809.0;
  %817 = %810.0;
  %818 = %811.0;
  %819 = %814.0;
  %820 = %815.0;
  (%816, %817, %818, %819, meta[relay.Constant][48] /* ty=Tensor[(756), float32] */, %820)
}

def @func_6412() -> (Tensor[(3, 7, 4), float64],) {
  %821 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  (%821,)
}

def @func_9709(%var_9645: Tensor[(40, 2), float32], %var_9673: Tensor[(3, 3), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), float32], Tensor[(40, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 3), float64], Tensor[(729), float64], Tensor[(10, 13, 2), float32], Tensor[(315, 1), float32], Tensor[(5, 52), float32]) {
  %822 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %823 = cast(meta[relay.Constant][49] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %824 = reshape(%823, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %825 = @func_6689(%824) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) */;
  %826 = cast(meta[relay.Constant][50] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %827 = reshape(%826, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %828 = @func_1331(%827) /* ty=(Tensor[(16, 13, 11), float32],) */;
  %829 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %830 = cast(%var_9645, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %831 = cast(%var_9645, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %832 = %828.0;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(16, 13, 11), float32] */;
  %834 = reshape(%830, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %835 = reshape(%831, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %836 = reshape(%833, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %837 = @func_1543(%834, %835, %836) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */;
  %838 = @func_5677() /* ty=int16 */;
  %839 = cast(%var_9645, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %840 = cast(%838, dtype="float32") /* ty=float32 */;
  %841 = cast(%var_9673, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
  %842 = cast(meta[relay.Constant][51] /* ty=Tensor[(729), float64] */, dtype="float64") /* ty=Tensor[(729), float64] */;
  %843 = reshape(%841, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %844 = reshape(%842, newshape=[729]) /* ty=Tensor[(729), float64] */;
  %845 = @func_4023(%843, %844) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) */;
  %846 = cast(meta[relay.Constant][52] /* ty=Tensor[(315, 1), float32] */, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %847 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 52), float32] */, dtype="float32") /* ty=Tensor[(5, 52), float32] */;
  %848 = reshape(%846, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
  %849 = reshape(%847, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %850 = @func_345(%848, %849) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %851 = %822.0;
  %852 = %825.0;
  %853 = %829.1;
  %854 = %837.0;
  %855 = floor_mod(%839, %840) /* ty=Tensor[(40, 2), float32] */;
  %856 = %845.0;
  %857 = %850.2;
  (%851, %852, meta[relay.Constant][49] /* ty=Tensor[(168), float64] */, %832, meta[relay.Constant][50] /* ty=Tensor[(2288), float32] */, %853, %854, %855, %856, %var_9673, meta[relay.Constant][51] /* ty=Tensor[(729), float64] */, %857, meta[relay.Constant][52] /* ty=Tensor[(315, 1), float32] */, meta[relay.Constant][53] /* ty=Tensor[(5, 52), float32] */)
}

def @func_12080(%var_12054: int16, %var_12055: Tensor[(13, 15, 2), int16], %var_12061: Tensor[(1, 80), float32], %var_12062: Tensor[(9), float64]) -> (Tensor[(13, 15, 2), int16], Tensor[(1, 80), float32], Tensor[(315, 9), int32]) {
  %858 = cast(%var_12054, dtype="int16") /* ty=int16 */;
  %859 = cast(%var_12055, dtype="int16") /* ty=Tensor[(13, 15, 2), int16] */;
  %860 = cast(%var_12061, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %861 = cast(%var_12062, dtype="float64") /* ty=Tensor[(9), float64] */;
  %862 = reshape(%860, newshape=[40, 2]) /* ty=Tensor[(40, 2), float32] */;
  %863 = reshape(%861, newshape=[3, 3]) /* ty=Tensor[(3, 3), float64] */;
  %864 = @func_9709(%862, %863) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), float32], Tensor[(40, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 3), float64], Tensor[(729), float64], Tensor[(10, 13, 2), float32], Tensor[(315, 1), float32], Tensor[(5, 52), float32]) */;
  %865 = %864.12;
  %866 = cast(%865, dtype="int32") /* ty=Tensor[(315, 1), int32] */;
  %867 = cast(%var_12062, dtype="int32") /* ty=Tensor[(9), int32] */;
  %868 = multiply(%858, %859) /* ty=Tensor[(13, 15, 2), int16] */;
  %869 = bitwise_or(%866, %867) /* ty=Tensor[(315, 9), int32] */;
  (%868, %var_12061, %869)
}

def @func_8214() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) {
  %870 = @func_5394() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %871 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %872 = cast(meta[relay.Constant][54] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %873 = reshape(%872, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
  %874 = @func_189(%873) /* ty=(Tensor[(10, 13, 2), float32],) */;
  %875 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %876 = %870.0;
  %877 = %871.0;
  %878 = %874.0;
  %879 = %875.0;
  (%876, %877, %878, meta[relay.Constant][54] /* ty=Tensor[(260), float32] */, %879)
}

def @func_14051(%var_13987: float32, %var_13988: Tensor[(1, 15), float32], %var_14041: Tensor[(168), float64]) -> (Tensor[(1, 15), float32], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float64], Tensor[(3, 7, 4), int16], Tensor[(168), float64]) {
  %880 = cast(%var_13987, dtype="float32") /* ty=float32 */;
  %881 = cast(%var_13988, dtype="float32") /* ty=Tensor[(1, 15), float32] */;
  %882 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %883 = cast(meta[relay.Constant][55] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %884 = reshape(%883, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
  %885 = @func_189(%884) /* ty=(Tensor[(10, 13, 2), float32],) */;
  %886 = %885.0;
  %887 = cast(%886, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %888 = cast(%var_13987, dtype="float64") /* ty=float64 */;
  %889 = cast(%var_14041, dtype="float64") /* ty=Tensor[(168), float64] */;
  %890 = reshape(%889, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %891 = @func_6689(%890) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) */;
  %892 = floor_divide(%880, %881) /* ty=Tensor[(1, 15), float32] */;
  %893 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
  %894 = %882.1;
  %895 = divide(%887, %888) /* ty=Tensor[(10, 13, 2), float64] */;
  %896 = %891.2;
  (%892, %893, meta[relay.Constant][55] /* ty=Tensor[(260), float32] */, %894, %895, %896, %var_14041)
}

def @func_10721() -> Tensor[(3, 7, 4), float64] {
  %897 = @func_4695() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %897.0
}

def @func_8137() -> int16 {
  @func_5677() /* ty=int16 */
}

def @func_3811(%var_3775: Tensor[(7, 12, 1), float64]) -> (Tensor[(7, 12, 15), float64],) {
  %898 = cast(%var_3775, dtype="float64") /* ty=Tensor[(7, 12, 1), float64] */;
  %899 = cast(meta[relay.Constant][56] /* ty=Tensor[(7, 12, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 12, 15), float64] */;
  %900 = power(%898, %899) /* ty=Tensor[(7, 12, 15), float64] */;
  (%900,)
}

def @func_6689(%var_6662: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) {
  %901 = @func_6643() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %902 = cast(%var_6662, dtype="float64") /* ty=Tensor[(168), float64] */;
  %903 = reshape(%902, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %904 = @func_6137(%903) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */;
  %905 = %904.0;
  %906 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %907 = %906.0;
  %908 = cast(%907, dtype="int16") /* ty=Tensor[(3, 7, 4), int16] */;
  %909 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %910 = cast(%905, dtype="int16") /* ty=Tensor[(3, 7, 4), int16] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %912 = %901.0;
  %913 = multiply(%910, %911) /* ty=Tensor[(3, 7, 4), int16] */;
  %914 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
  (%912, %var_6662, %913, %914)
}

def @func_13831(%var_13793: Tensor[(80), float32], %var_13796: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16, Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %915 = @func_11761() /* ty=(Tensor[(3, 7, 4), bool],) */;
  %916 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %917 = @func_13391() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %918 = cast(%var_13793, dtype="float32") /* ty=Tensor[(80), float32] */;
  %919 = cast(meta[relay.Constant][57] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %920 = cast(meta[relay.Constant][58] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %921 = cast(%var_13796, dtype="float32") /* ty=Tensor[(260), float32] */;
  %922 = reshape(%918, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %923 = reshape(%919, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %924 = reshape(%920, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %925 = reshape(%921, newshape=[65, 4]) /* ty=Tensor[(65, 4), float32] */;
  %926 = @func_3951(%922, %923, %924, %925) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) */;
  %927 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %928 = %915.0;
  %929 = %916.0;
  %930 = %917.0;
  %931 = %926.8;
  %932 = %927.0;
  %933 = @func_9119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%928, %929, %930, %931, %var_13793, meta[relay.Constant][57] /* ty=Tensor[(2288), float32] */, meta[relay.Constant][58] /* ty=Tensor[(315), float32] */, %var_13796, %932, %933)
}

def @func_5597(%var_5565: int16, %var_5594: Tensor[(315, 1), float32]) -> (Tensor[(14, ?, 5), int32], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(260, 1), float32], Tensor[(260), float32], Tensor[(315, 1), float32]) {
  %934 = cast(meta[relay.Constant][59] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %935 = cast(%var_5565, dtype="int16") /* ty=int16 */;
  %936 = reshape(%934, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %937 = reshape(%935, newshape=[]) /* ty=int16 */;
  %938 = @func_1127(%936, %937) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
  %939 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %940 = cast(%939, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %941 = sqrt(%940) /* ty=Tensor[(3, 7, 4), float64] */;
  %942 = cast(%941, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %943 = @func_5394() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %944 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %945 = cast(meta[relay.Constant][60] /* ty=Tensor[(260, 1), float32] */, dtype="float32") /* ty=Tensor[(260, 1), float32] */;
  %946 = reshape(%945, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %947 = @func_4786(%946) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(14, ?, 5), float64], Tensor[(70), float64], int16, Tensor[(260), float32], Tensor[(315), float32], Tensor[(260), float32]) */;
  %948 = cast(%var_5594, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %949 = %947.4;
  %950 = cast(%949, dtype="float32") /* ty=Tensor[(260), float32] */;
  %951 = reshape(%948, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
  %952 = reshape(%950, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %953 = @func_345(%951, %952) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %954 = %938.1;
  %955 = log10(%942) /* ty=Tensor[(3, 7, 4), float64] */;
  %956 = %943.0;
  %957 = %944.0;
  %958 = %953.3;
  (%954, meta[relay.Constant][59] /* ty=Tensor[(70), float64] */, %var_5565, %955, %956, %957, %949, meta[relay.Constant][60] /* ty=Tensor[(260, 1), float32] */, %958, %var_5594)
}

def @func_16218() -> (Tensor[(3, 7, 4), float64],) {
  %959 = @func_13925() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %960 = %959.0;
  (%960,)
}

def @func_10702() -> (Tensor[(3, 7, 4), float64],) {
  %961 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %962 = %961.0;
  (%962,)
}

def @func_8915() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16) {
  %963 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %964 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %965 = @func_8896() /* ty=(int16,) */;
  %966 = %963.0;
  %967 = %964.0;
  %968 = %965.0;
  (%966, %967, %968)
}

def @func_14843() -> (int16, Tensor[(3, 7, 4), float64]) {
  %969 = @func_7674() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %970 = @func_5677() /* ty=int16 */;
  %971 = %969.0;
  (%970, %971)
}

def @func_10071() -> (int16,) {
  %972 = @func_10007() /* ty=int16 */;
  (%972,)
}

def @func_10216() -> (int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %973 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
  %974 = @func_7636() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %975 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %976 = %973.5;
  %977 = %974.0;
  %978 = %975.0;
  (%976, %977, %978)
}

def @func_7092(%var_7078: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) {
  %979 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %980 = %979.0;
  %981 = cast(%var_7078, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %982 = shape_of(%980, dtype="int32") /* ty=Tensor[(3), int32] */;
  %983 = cast(%980, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %985 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %986 = logical_or(%983, %984) /* ty=Tensor[(3, 7, 4), bool] */;
  %987 = %985.0;
  (%986, %987)
}

def @func_4277(%var_4256: Tensor[(2, 360), float32], %var_4260: Tensor[(168), float64], %var_4266: Tensor[(16, 13, 11), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2, 360), float32], Tensor[(80), float32], Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), int32]) {
  %988 = cast(%var_4256, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %989 = cast(%var_4256, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %990 = cast(meta[relay.Constant][62] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %991 = reshape(%988, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
  %992 = reshape(%989, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
  %993 = reshape(%990, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %994 = @func_3443(%991, %992, %993) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) */;
  %995 = cast(%var_4260, dtype="float64") /* ty=Tensor[(168), float64] */;
  %996 = reshape(%995, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
  %997 = @func_4039(%996) /* ty=(Tensor[(3, 14, 4), float64],) */;
  %998 = cast(meta[relay.Constant][61] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %999 = reshape(%998, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %1000 = @func_1331(%999) /* ty=(Tensor[(16, 13, 11), float32],) */;
  %1001 = %1000.0;
  %1002 = cast(%var_4266, dtype="int32") /* ty=Tensor[(16, 13, 11), int32] */;
  %1003 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1004 = cast(%1001, dtype="int32") /* ty=Tensor[(16, 13, 11), int32] */;
  %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1006 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %1007 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %1008 = %994.2;
  %1009 = %997.0;
  %1010 = right_shift(%1004, %1005) /* ty=Tensor[(16, 13, 11), int32] */;
  (%1006, %1007, meta[relay.Constant][61] /* ty=Tensor[(2288), float32] */, %1008, %var_4256, meta[relay.Constant][62] /* ty=Tensor[(80), float32] */, %1009, %var_4260, %1010)
}

def @func_5119() -> Tensor[(3, 7, 4), float64] {
  %1011 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1011.1
}

def @func_7785() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1012 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1013 = @func_4632() /* ty=Tensor[(3, 7, 4), float64] */;
  %1014 = %1012.0;
  (%1013, %1014)
}

def @func_4867(%var_4853: Tensor[(3, 7, 4), float64]) -> Tensor[(3, 7, 4), bool] {
  %1015 = @func_4695() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1016 = %1015.0;
  %1017 = cast(%var_4853, dtype="int64") /* ty=Tensor[(3, 7, 4), int64] */;
  %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%1016, dtype="int64") /* ty=Tensor[(3, 7, 4), int64] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1021 = bitwise_or(%1019, %1020) /* ty=Tensor[(3, 7, 4), int64] */;
  %1022 = cast(%var_4853, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %1023 = shape_of(%1021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(%1021, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1024, %1025) /* ty=Tensor[(3, 7, 4), bool] */
}

def @func_9119() -> Tensor[(3, 7, 4), float64] {
  %1026 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1026.0
}

def @func_9339() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) {
  %1027 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1028 = %1027.1;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %1030 = reshape(%1029, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %1031 = @func_4867(%1030) /* ty=Tensor[(3, 7, 4), bool] */;
  (%1028, %1031)
}

def @func_4039(%var_4032: Tensor[(3, 14, 4), float64]) -> (Tensor[(3, 14, 4), float64],) {
  %1032 = cast(%var_4032, dtype="float64") /* ty=Tensor[(3, 14, 4), float64] */;
  %1033 = log(%1032) /* ty=Tensor[(3, 14, 4), float64] */;
  (%1033,)
}

def @func_5332(%var_5320: Tensor[(2288), float32]) -> (int16, Tensor[(42, 2), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(168), float64], Tensor[(8, 5, 2), bool], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(3, 14, 4), float32]) {
  %1034 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
  %1035 = cast(meta[relay.Constant][63] /* ty=Tensor[(42, 2), float64] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
  %1036 = cast(meta[relay.Constant][64] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1037 = reshape(%1035, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %1038 = reshape(%1036, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %1039 = @func_4319(%1037, %1038) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %1040 = cast(meta[relay.Constant][63] /* ty=Tensor[(42, 2), float64] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
  %1041 = reshape(%1040, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %1042 = @func_4171(%1041) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
  %1043 = cast(meta[relay.Constant][65] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1044 = cast(meta[relay.Constant][65] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1045 = cast(%var_5320, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %1046 = reshape(%1043, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %1047 = reshape(%1044, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %1048 = reshape(%1045, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %1049 = @func_1543(%1046, %1047, %1048) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */;
  %1050 = cast(meta[relay.Constant][63] /* ty=Tensor[(42, 2), float64] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
  %1051 = reshape(%1050, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %1052 = @func_4609(%1051) /* ty=(Tensor[(7, 12, 15), float64], Tensor[(3, 7, 4), int64], Tensor[(3, 14, 4), float64], Tensor[(42, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1053 = %1052.2;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %1055 = log10(%1054) /* ty=Tensor[(3, 14, 4), float32] */;
  %1056 = cast(%1055, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %1057 = %1034.5;
  %1058 = %1039.2;
  %1059 = %1042.1;
  %1060 = %1049.2;
  %1061 = cos(%1056) /* ty=Tensor[(3, 14, 4), float32] */;
  (%1057, meta[relay.Constant][63] /* ty=Tensor[(42, 2), float64] */, %1058, meta[relay.Constant][64] /* ty=Tensor[(260), float32] */, %1059, %1060, meta[relay.Constant][65] /* ty=Tensor[(80), float32] */, %var_5320, %1061)
}

def @func_6834(%var_6802: Tensor[(3, 7, 4), float64], %var_6816: Tensor[(80), float32], %var_6817: Tensor[(2288), float32], %var_6818: Tensor[(5, 63), float32]) -> (Tensor[(3, 7, 4), int16], Tensor[(5, 9, 7), float64], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 63), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), int32], Tensor[(720), float32], Tensor[(168), float64]) {
  %1062 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1063 = %1062.0;
  %1064 = cast(%var_6802, dtype="int16") /* ty=Tensor[(3, 7, 4), int16] */;
  %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1066 = cast(%1063, dtype="int16") /* ty=Tensor[(3, 7, 4), int16] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1068 = cast(%var_6816, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1069 = cast(%var_6817, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %1070 = cast(%var_6818, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %1071 = cast(meta[relay.Constant][66] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1072 = reshape(%1068, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %1073 = reshape(%1069, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %1074 = reshape(%1070, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %1075 = reshape(%1071, newshape=[65, 4]) /* ty=Tensor[(65, 4), float32] */;
  %1076 = @func_3951(%1072, %1073, %1074, %1075) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) */;
  %1077 = cast(meta[relay.Constant][67] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1078 = cast(meta[relay.Constant][68] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1079 = cast(%var_6817, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %1080 = reshape(%1077, newshape=[2, 360]) /* ty=Tensor[(2, 360), float32] */;
  %1081 = reshape(%1078, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %1082 = reshape(%1079, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %1083 = @func_4277(%1080, %1081, %1082) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2, 360), float32], Tensor[(80), float32], Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), int32]) */;
  %1084 = maximum(%1066, %1067) /* ty=Tensor[(3, 7, 4), int16] */;
  %1085 = %1076.3;
  %1086 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %1087 = %1083.8;
  (%1084, %1085, %var_6816, %var_6817, %var_6818, meta[relay.Constant][66] /* ty=Tensor[(260), float32] */, %1086, %1087, meta[relay.Constant][67] /* ty=Tensor[(720), float32] */, meta[relay.Constant][68] /* ty=Tensor[(168), float64] */)
}

def @func_7861(%var_7833: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
  %1088 = cast(%var_7833, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1089 = reshape(%1088, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %1090 = @func_6689(%1089) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) */;
  %1091 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1092 = @func_4842() /* ty=Tensor[(3, 7, 4), float64] */;
  %1093 = %1090.0;
  %1094 = %1091.0;
  (%1092, %1093, %var_7833, %1094)
}

def @func_14943() -> (Tensor[(3, 7, 4), float64],) {
  %1095 = @func_7636() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1096 = %1095.0;
  (%1096,)
}

def @func_11717() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1097 = @func_10721() /* ty=Tensor[(3, 7, 4), float64] */;
  %1098 = @func_6575() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1097, %1098)
}

def @func_14426() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1099 = @func_9087() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %1100 = @func_14092() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1101 = @func_9853() /* ty=Tensor[(3, 7, 4), float64] */;
  %1102 = %1099.0;
  %1103 = %1100.0;
  (%1101, %1102, %1103)
}

def @func_12897() -> (Tensor[(3, 7, 4), float64],) {
  %1104 = @func_9583() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1104,)
}

def @func_9945(%var_9905: uint8, %var_9906: Tensor[(6, 16, 3), uint8]) -> (Tensor[(3, 7, 4), float64], Tensor[(6, 16, 3), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(6, 16, 3), float64]) {
  %1105 = cast(%var_9906, dtype="float32") /* ty=Tensor[(6, 16, 3), float32] */;
  %1106 = atan(%1105) /* ty=Tensor[(6, 16, 3), float32] */;
  %1107 = cast(%1106, dtype="float32") /* ty=Tensor[(6, 16, 3), float32] */;
  %1108 = @func_7636() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1109 = cast(%var_9905, dtype="uint8") /* ty=uint8 */;
  %1110 = cast(%var_9906, dtype="uint8") /* ty=Tensor[(6, 16, 3), uint8] */;
  %1111 = left_shift(%1109, %1110) /* ty=Tensor[(6, 16, 3), uint8] */;
  %1112 = cast(%1111, dtype="float64") /* ty=Tensor[(6, 16, 3), float64] */;
  %1113 = @func_6198() /* ty=Tensor[(3, 7, 4), float64] */;
  %1114 = sinh(%1107) /* ty=Tensor[(6, 16, 3), float32] */;
  %1115 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
  %1116 = %1108.0;
  %1117 = sigmoid(%1112) /* ty=Tensor[(6, 16, 3), float64] */;
  (%1113, %1114, %1115, %1116, %1117)
}

def @func_1127(%var_1096: Tensor[(14, 1, 5), float64], %var_1106: int16) -> (Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) {
  %1118 = cast(%var_1096, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %1119 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(14, 1, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(meta[relay.Constant][69] /* ty=Tensor[(14, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1122 = cast(meta[relay.Constant][69] /* ty=Tensor[(14, 1, 5), float64] */, dtype="int32") /* ty=Tensor[(14, 1, 5), int32] */;
  %1123 = shape_of(%var_1096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%var_1096, dtype="int32") /* ty=Tensor[(14, 1, 5), int32] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1126 = cast(%var_1106, dtype="int16") /* ty=int16 */;
  %1127 = cast(meta[relay.Constant][70] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %1128 = reshape(%1126, newshape=[]) /* ty=int16 */;
  %1129 = reshape(%1127, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
  %1130 = @func_472(%1128, %1129) /* ty=(Tensor[(5, 1, 13), int16],) */;
  %1131 = minimum(%1120, %1121) /* ty=Tensor[(14, ?, 5), float64] */;
  %1132 = right_shift(%1124, %1125) /* ty=Tensor[(14, ?, 5), int32] */;
  %1133 = %1130.0;
  (%1131, %1132, %1133, %var_1106, meta[relay.Constant][70] /* ty=Tensor[(65), int16] */)
}

def @func_13628(%var_13612: Tensor[(1, 1, 7), float64], %var_13613: Tensor[(1, 15, 7), float64], %var_13619: uint32, %var_13620: Tensor[(9, 100), uint32]) -> (Tensor[(1, 15, 7), float64], Tensor[(3, 7, 4), float64], uint32, Tensor[(9, 100), uint32]) {
  %1134 = cast(%var_13612, dtype="float64") /* ty=Tensor[(1, 1, 7), float64] */;
  %1135 = cast(%var_13613, dtype="float64") /* ty=Tensor[(1, 15, 7), float64] */;
  %1136 = cast(%var_13619, dtype="uint32") /* ty=uint32 */;
  %1137 = cast(%var_13620, dtype="uint32") /* ty=Tensor[(9, 100), uint32] */;
  %1138 = reshape(%1136, newshape=[]) /* ty=uint32 */;
  %1139 = reshape(%1137, newshape=[10, 10, 9]) /* ty=Tensor[(10, 10, 9), uint32] */;
  %1140 = @func_7927(%1138, %1139) /* ty=(Tensor[(10, 10, 9), bool], Tensor[(3, 7, 4), float64]) */;
  %1141 = add(%1134, %1135) /* ty=Tensor[(1, 15, 7), float64] */;
  %1142 = %1140.1;
  (%1141, %1142, %var_13619, %var_13620)
}

def @func_10007() -> int16 {
  %1143 = @func_8896() /* ty=(int16,) */;
  %1143.0
}

def @func_15677() -> (Tensor[(3, 7, 4), float64],) {
  %1144 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1145 = %1144.0;
  (%1145,)
}

def @func_15514() -> Tensor[(3, 7, 4), float64] {
  @func_7111() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_14474() -> Tensor[(3, 7, 4), float64] {
  @func_12491() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_8111() -> (Tensor[(3, 7, 4), float64],) {
  %1146 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1147 = %1146.1;
  (%1147,)
}

def @func_15481() -> (Tensor[(3, 7, 4), float64],) {
  %1148 = @func_10863() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1149 = %1148.1;
  (%1149,)
}

def @func_6137(%var_6133: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
  %1150 = cast(%var_6133, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1151 = reshape(%1150, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
  %1152 = @func_4039(%1151) /* ty=(Tensor[(3, 14, 4), float64],) */;
  %1153 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
  %1154 = %1152.0;
  (%1153, %1154, %var_6133)
}

def @func_13144(%var_13130: Tensor[(729), float64], %var_13131: int16, %var_13132: Tensor[(65), int16]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(65), uint16]) {
  %1155 = @func_7971() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1156 = cast(meta[relay.Constant][71] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1157 = cast(%var_13130, dtype="float64") /* ty=Tensor[(729), float64] */;
  %1158 = cast(%var_13131, dtype="int16") /* ty=int16 */;
  %1159 = cast(%var_13132, dtype="int16") /* ty=Tensor[(65), int16] */;
  %1160 = reshape(%1156, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %1161 = reshape(%1157, newshape=[729]) /* ty=Tensor[(729), float64] */;
  %1162 = reshape(%1158, newshape=[]) /* ty=int16 */;
  %1163 = reshape(%1159, newshape=[1, 65]) /* ty=Tensor[(1, 65), int16] */;
  %1164 = @func_7761(%1160, %1161, %1162, %1163) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(1, 65), int16]) */;
  %1165 = cast(%var_13132, dtype="uint16") /* ty=Tensor[(65), uint16] */;
  %1166 = cast(%var_13131, dtype="uint16") /* ty=uint16 */;
  %1167 = %1155.0;
  %1168 = %1164.4;
  %1169 = add(%1165, %1166) /* ty=Tensor[(65), uint16] */;
  (%1167, %1168, meta[relay.Constant][71] /* ty=Tensor[(9), float64] */, %var_13130, %1169)
}

def @func_6575() -> Tensor[(3, 7, 4), float64] {
  %1170 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1170.0
}

def @func_11514(%var_11492: Tensor[(243, 3), bool]) -> (Tensor[(243, 3), float32], Tensor[(243, 3), bool]) {
  %1171 = @func_10267() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(243, 3), bool]) */;
  %1172 = %1171.2;
  %1173 = cast(%var_11492, dtype="float32") /* ty=Tensor[(243, 3), float32] */;
  %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1175 = cast(%1172, dtype="float32") /* ty=Tensor[(243, 3), float32] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1177 = cast(%1172, dtype="bool") /* ty=Tensor[(243, 3), bool] */;
  %1178 = shape_of(%var_11492, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1179 = cast(%var_11492, dtype="bool") /* ty=Tensor[(243, 3), bool] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1181 = mod(%1175, %1176) /* ty=Tensor[(243, 3), float32] */;
  %1182 = less_equal(%1179, %1180) /* ty=Tensor[(243, 3), bool] */;
  (%1181, %1182)
}

def @func_12318() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1183 = @func_7359() /* ty=Tensor[(3, 7, 4), float64] */;
  %1184 = @func_8942() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1183, %1184)
}

def @func_15759() -> (Tensor[(3, 7, 4), float64], int16) {
  %1185 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1186 = @func_10071() /* ty=(int16,) */;
  %1187 = %1185.0;
  %1188 = %1186.0;
  (%1187, %1188)
}

def @func_3748() -> Tensor[(3, 7, 4), float64] {
  @func_3629() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_15927(%var_15916: Tensor[(260), float32]) -> (Tensor[(6, 15, 7), bool], Tensor[(105), float64], Tensor[(7), float64], Tensor[(900), uint32], Tensor[(260), int16], Tensor[(260), float32]) {
  %1189 = cast(meta[relay.Constant][72] /* ty=Tensor[(6, 15, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 7), float64] */;
  %1190 = acos(%1189) /* ty=Tensor[(6, 15, 7), float64] */;
  %1191 = cast(meta[relay.Constant][72] /* ty=Tensor[(6, 15, 7), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 7), bool] */;
  %1192 = shape_of(%1190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1193 = cast(%1190, dtype="bool") /* ty=Tensor[(6, 15, 7), bool] */;
  %1194 = dyn.reshape(%1191, %1192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1195 = cast(meta[relay.Constant][73] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %1196 = cast(meta[relay.Constant][74] /* ty=Tensor[(900), uint32] */, dtype="uint32") /* ty=Tensor[(900), uint32] */;
  %1197 = reshape(%1195, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %1198 = reshape(%1196, newshape=[900]) /* ty=Tensor[(900), uint32] */;
  %1199 = @func_15041(%1197, %1198) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(105), float64], uint32, Tensor[(900), uint32], int16) */;
  %1200 = cast(%var_15916, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1201 = reshape(%1200, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %1202 = @func_9561(%1201) /* ty=(Tensor[(260), int16],) */;
  %1203 = greater_equal(%1193, %1194) /* ty=Tensor[(6, 15, 7), bool] */;
  %1204 = %1199.4;
  %1205 = %1202.0;
  (%1203, %1204, meta[relay.Constant][73] /* ty=Tensor[(7), float64] */, meta[relay.Constant][74] /* ty=Tensor[(900), uint32] */, %1205, %var_15916)
}

def @func_7761(%var_7726: Tensor[(9), float64], %var_7727: Tensor[(729), float64], %var_7736: int16, %var_7737: Tensor[(1, 65), int16]) -> (Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(1, 65), int16]) {
  %1206 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1207 = cast(%var_7726, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1208 = cast(%var_7727, dtype="float64") /* ty=Tensor[(729), float64] */;
  %1209 = reshape(%1207, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %1210 = reshape(%1208, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %1211 = @func_1391(%1209, %1210) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %1212 = cast(%var_7736, dtype="int16") /* ty=int16 */;
  %1213 = cast(%var_7737, dtype="int16") /* ty=Tensor[(1, 65), int16] */;
  %1214 = reshape(%1212, newshape=[]) /* ty=int16 */;
  %1215 = reshape(%1213, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
  %1216 = @func_472(%1214, %1215) /* ty=(Tensor[(5, 1, 13), int16],) */;
  %1217 = %1206.0;
  %1218 = %1211.0;
  %1219 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %1220 = %1216.0;
  (%1217, %1218, %var_7726, %var_7727, %1219, %1220, %var_7736, %var_7737)
}

def @func_11761() -> (Tensor[(3, 7, 4), bool],) {
  %1221 = @func_7563() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], int16) */;
  %1222 = %1221.1;
  (%1222,)
}

def @func_14344() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1223 = @func_7064() /* ty=Tensor[(3, 7, 4), float64] */;
  %1224 = @func_9119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1223, %1224)
}

def @func_16187() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) {
  %1225 = @func_11717() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1226 = cast(meta[relay.Constant][75] /* ty=Tensor[(729), float64] */, dtype="float64") /* ty=Tensor[(729), float64] */;
  %1227 = cast(meta[relay.Constant][76] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1228 = cast(meta[relay.Constant][77] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %1229 = reshape(%1226, newshape=[729]) /* ty=Tensor[(729), float64] */;
  %1230 = reshape(%1227, newshape=[]) /* ty=int16 */;
  %1231 = reshape(%1228, newshape=[65]) /* ty=Tensor[(65), int16] */;
  %1232 = @func_13144(%1229, %1230, %1231) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(65), uint16]) */;
  %1233 = %1225.1;
  %1234 = %1232.1;
  (%1233, %1234, meta[relay.Constant][75] /* ty=Tensor[(729), float64] */, meta[relay.Constant][76] /* ty=int16 */, meta[relay.Constant][77] /* ty=Tensor[(65), int16] */)
}

def @func_15268(%var_15204: Tensor[(4, 6, 4), int16], %var_15205: Tensor[(4, 6, 4), int16], %var_15249: Tensor[(315), float32], %var_15258: Tensor[(4, 6, 4), float64]) -> (Tensor[(4, 6, 4), int16], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(4, 6, 4), bool]) {
  %1235 = cast(%var_15205, dtype="int16") /* ty=Tensor[(4, 6, 4), int16] */;
  %1236 = shape_of(%var_15204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1237 = cast(%var_15204, dtype="int16") /* ty=Tensor[(4, 6, 4), int16] */;
  %1238 = dyn.reshape(%1235, %1236, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1239 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1240 = cast(meta[relay.Constant][78] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1241 = cast(meta[relay.Constant][79] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %1242 = cast(%var_15249, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1243 = reshape(%1240, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %1244 = reshape(%1241, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %1245 = reshape(%1242, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %1246 = @func_7254(%1243, %1244, %1245) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32]) */;
  %1247 = cast(%var_15204, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
  %1248 = asinh(%1247) /* ty=Tensor[(4, 6, 4), float64] */;
  %1249 = cast(%var_15258, dtype="bool") /* ty=Tensor[(4, 6, 4), bool] */;
  %1250 = shape_of(%1248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1251 = cast(%1248, dtype="bool") /* ty=Tensor[(4, 6, 4), bool] */;
  %1252 = dyn.reshape(%1249, %1250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1253 = right_shift(%1237, %1238) /* ty=Tensor[(4, 6, 4), int16] */;
  %1254 = %1239.0;
  %1255 = %1246.6;
  %1256 = equal(%1251, %1252) /* ty=Tensor[(4, 6, 4), bool] */;
  (%1253, %1254, %1255, meta[relay.Constant][78] /* ty=Tensor[(80), float32] */, meta[relay.Constant][79] /* ty=Tensor[(2288), float32] */, %var_15249, %1256)
}

def @func_3443(%var_3428: Tensor[(15, 3, 16), float32], %var_3429: Tensor[(15, 3, 16), float32], %var_3438: Tensor[(80), float32]) -> (Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) {
  %1257 = cast(%var_3429, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
  %1258 = shape_of(%var_3428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1259 = cast(%var_3428, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
  %1260 = dyn.reshape(%1257, %1258, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1261 = cast(%var_3438, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1262 = cast(%var_3438, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1263 = cast(meta[relay.Constant][80] /* ty=Tensor[(88, 26), float32] */, dtype="float32") /* ty=Tensor[(88, 26), float32] */;
  %1264 = reshape(%1261, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %1265 = reshape(%1262, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %1266 = reshape(%1263, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %1267 = @func_1543(%1264, %1265, %1266) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */;
  %1268 = mod(%1259, %1260) /* ty=Tensor[(15, 3, 16), float32] */;
  %1269 = %1267.0;
  (%1268, %1269, %var_3438, meta[relay.Constant][80] /* ty=Tensor[(88, 26), float32] */)
}

def @func_7406() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1270 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1271 = @func_6575() /* ty=Tensor[(3, 7, 4), float64] */;
  %1272 = %1270.0;
  (%1271, %1272)
}

def @func_10789() -> Tensor[(3, 7, 4), float64] {
  %1273 = @func_9449() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1273.0
}

def @func_4892() -> (Tensor[(3, 7, 4), float64],) {
  %1274 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1275 = %1274.0;
  (%1275,)
}

def @func_5182() -> Tensor[(3, 7, 4), float64] {
  @func_4632() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_3905() -> Tensor[(3, 7, 4), float64] {
  %1276 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1276.1
}

def @func_9402() -> (Tensor[(3, 7, 4), float64], Tensor[(7, 12, 15), float64]) {
  %1277 = @func_8814() /* ty=Tensor[(3, 7, 4), float64] */;
  %1278 = cast(%1277, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %1279 = reshape(%1278, newshape=[7, 12, 1]) /* ty=Tensor[(7, 12, 1), float64] */;
  %1280 = @func_3811(%1279) /* ty=(Tensor[(7, 12, 15), float64],) */;
  %1281 = %1280.0;
  (%1277, %1281)
}

def @func_8090(%var_8078: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), bool], Tensor[(9, 81), float64], Tensor[(9), float64], Tensor[(9, 81), float64], int16, Tensor[(3, 7, 4), float64]) {
  %1282 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  %1283 = cast(meta[relay.Constant][81] /* ty=Tensor[(3, 7, 4), float64] */, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %1284 = shape_of(%1282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1285 = cast(%1282, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %1286 = dyn.reshape(%1283, %1284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1287 = cast(%var_8078, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1288 = cast(meta[relay.Constant][82] /* ty=Tensor[(9, 81), float64] */, dtype="float64") /* ty=Tensor[(9, 81), float64] */;
  %1289 = cast(meta[relay.Constant][83] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1290 = reshape(%1287, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %1291 = reshape(%1288, newshape=[9, 81]) /* ty=Tensor[(9, 81), float64] */;
  %1292 = reshape(%1289, newshape=[]) /* ty=int16 */;
  %1293 = @func_3725(%1290, %1291, %1292) /* ty=(Tensor[(9), float64], Tensor[(9, 81), float64], Tensor[(5, 1, 13), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float32]) */;
  %1294 = @func_7785() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1295 = logical_and(%1285, %1286) /* ty=Tensor[(3, 7, 4), bool] */;
  %1296 = %1293.1;
  %1297 = %1294.0;
  (%1295, %1296, %var_8078, meta[relay.Constant][82] /* ty=Tensor[(9, 81), float64] */, meta[relay.Constant][83] /* ty=int16 */, %1297)
}

def @func_6528() -> Tensor[(3, 7, 4), float64] {
  @func_5119() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_8610() -> (Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(168), float64]) {
  %1298 = cast(meta[relay.Constant][84] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1299 = reshape(%1298, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %1300 = @func_7895(%1299) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) */;
  %1301 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
  %1302 = %1300.2;
  (%1301, %1302, meta[relay.Constant][84] /* ty=Tensor[(168), float64] */)
}

def @func_10616() -> Tensor[(3, 7, 4), float64] {
  @func_7010() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7584() -> (Tensor[(3, 7, 4), float64],) {
  %1303 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1304 = %1303.0;
  (%1304,)
}

def @func_10891(%var_10866: Tensor[(1, 3, 6), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(?, 3, 6), int16], Tensor[(3, 7, 4), float64], Tensor[(1, 3, 6), float32]) {
  %1305 = cast(%var_10866, dtype="float64") /* ty=Tensor[(1, 3, 6), float64] */;
  %1306 = sin(%1305) /* ty=Tensor[(1, 3, 6), float64] */;
  %1307 = cast(meta[relay.Constant][85] /* ty=Tensor[(1, 3, 6), float64] */, dtype="int16") /* ty=Tensor[(1, 3, 6), int16] */;
  %1308 = shape_of(%1306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1309 = cast(%1306, dtype="int16") /* ty=Tensor[(1, 3, 6), int16] */;
  %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1311 = cast(meta[relay.Constant][85] /* ty=Tensor[(1, 3, 6), float64] */, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %1312 = @func_4842() /* ty=Tensor[(3, 7, 4), float64] */;
  %1313 = logical_xor(%1309, %1310) /* ty=Tensor[(?, 3, 6), int16] */;
  %1314 = @func_7449() /* ty=Tensor[(3, 7, 4), float64] */;
  %1315 = sinh(%1311) /* ty=Tensor[(1, 3, 6), float32] */;
  (%1312, %1313, %1314, %1315)
}

def @func_12988() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1316 = @func_8029() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1317 = @func_8883() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), uint8], Tensor[(3, 7, 4), float64]) */;
  %1318 = @func_12298() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
  %1319 = @func_8521() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) */;
  %1320 = @func_8521() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) */;
  %1321 = @func_12867() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1322 = %1316.1;
  %1323 = @func_10616() /* ty=Tensor[(3, 7, 4), float64] */;
  %1324 = %1317.0;
  %1325 = %1318.4;
  %1326 = @func_5355() /* ty=Tensor[(3, 7, 4), float64] */;
  %1327 = %1319.1;
  %1328 = %1320.0;
  %1329 = @func_12212() /* ty=Tensor[(3, 7, 4), float64] */;
  %1330 = %1321.0;
  (%1322, %1323, %1324, %1325, %1326, %1327, %1328, %1329, %1330)
}

def @func_14092() -> (Tensor[(3, 7, 4), float64],) {
  %1331 = @func_6198() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1331,)
}

def @func_10947() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1332 = @func_9209() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1333 = @func_6013() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1334 = %1332.1;
  %1335 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %1336 = %1333.0;
  (%1334, %1335, %1336)
}

def @func_13044() -> (Tensor[(3, 7, 4), float64],) {
  %1337 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1338 = %1337.0;
  (%1338,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12553(%var_12551: int16, %var_12552: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(315, 9), int32], int16, Tensor[(390), int16], Tensor[(80), float32], Tensor[(9), float64], Tensor[(3, 7, 4), float64], int16) {
  %22 = fn (%var_12523: int16, %var_12526: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(315, 9), int32], int16, Tensor[(390), int16], Tensor[(80), float32], Tensor[(9), float64], Tensor[(3, 7, 4), float64], int16) {
    %0 = @func_10815() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %2 = cast(%var_12523, dtype="int16") /* ty=int16 */;
    %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
    %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %5 = cast(%var_12526, dtype="float64") /* ty=Tensor[(9), float64] */;
    %6 = reshape(%2, newshape=[]) /* ty=int16 */;
    %7 = reshape(%3, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), int16] */;
    %8 = reshape(%4, newshape=[1, 80]) /* ty=Tensor[(1, 80), float32] */;
    %9 = reshape(%5, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %10 = @func_12080(%6, %7, %8, %9) /* ty=(Tensor[(13, 15, 2), int16], Tensor[(1, 80), float32], Tensor[(315, 9), int32]) */;
    %11 = cast(%var_12526, dtype="float64") /* ty=Tensor[(9), float64] */;
    %12 = reshape(%11, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %13 = @func_9478(%12) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) */;
    %14 = @func_8915() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16) */;
    %15 = %0.0;
    %16 = @func_11083() /* ty=Tensor[(3, 7, 4), float64] */;
    %17 = %1.0;
    %18 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
    %19 = %10.2;
    %20 = %13.0;
    %21 = %14.2;
    (%15, %16, %17, %18, %19, %var_12523, meta[relay.Constant][0] /* ty=Tensor[(390), int16] */, meta[relay.Constant][1] /* ty=Tensor[(80), float32] */, %var_12526, %20, %21)
  };
  %22(%var_12551, %var_12552) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(315, 9), int32], int16, Tensor[(390), int16], Tensor[(80), float32], Tensor[(9), float64], Tensor[(3, 7, 4), float64], int16) */
}

def @func_10703() -> (Tensor[(3, 7, 4), float64],) {
  %25 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %23 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %24 = %23.0;
    (%24,)
  };
  %25() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_5634() -> (Tensor[(3, 7, 4), float64],) {
  %26 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
  (%26,)
}

def @func_10507(%var_10505: Tensor[(315, 1), float32]) -> (Tensor[(168), float64], Tensor[(3, 7, 4), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(20, 4), float32], Tensor[(2288), float32], Tensor[(315, 1), float64]) {
  @func_10504(%var_10505) /* ty=(Tensor[(168), float64], Tensor[(3, 7, 4), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(20, 4), float32], Tensor[(2288), float32], Tensor[(315, 1), float64]) */
}

def @func_14461() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %27 = @func_13712() /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */;
  %28 = @func_7064() /* ty=Tensor[(3, 7, 4), float64] */;
  %29 = %27.1;
  (%28, %29)
}

def @func_3447(%var_3444: Tensor[(15, 3, 16), float32], %var_3445: Tensor[(15, 3, 16), float32], %var_3446: Tensor[(80), float32]) -> (Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) {
  %43 = fn (%var_3428: Tensor[(15, 3, 16), float32], %var_3429: Tensor[(15, 3, 16), float32], %var_3438: Tensor[(80), float32]) -> (Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) {
    %30 = cast(%var_3429, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
    %31 = shape_of(%var_3428, dtype="int32") /* ty=Tensor[(3), int32] */;
    %32 = cast(%var_3428, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %34 = cast(%var_3438, dtype="float32") /* ty=Tensor[(80), float32] */;
    %35 = cast(%var_3438, dtype="float32") /* ty=Tensor[(80), float32] */;
    %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(88, 26), float32] */, dtype="float32") /* ty=Tensor[(88, 26), float32] */;
    %37 = reshape(%34, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
    %38 = reshape(%35, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
    %39 = reshape(%36, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %40 = @func_1543(%37, %38, %39) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */;
    %41 = mod(%32, %33) /* ty=Tensor[(15, 3, 16), float32] */;
    %42 = %40.0;
    (%41, %42, %var_3438, meta[relay.Constant][2] /* ty=Tensor[(88, 26), float32] */)
  };
  %43(%var_3444, %var_3445, %var_3446) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) */
}

def @func_8523() -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) {
  @func_8521() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) */
}

def @func_3897() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %48 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %44 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
    %45 = cast(%44, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %46 = cosh(%45) /* ty=Tensor[(3, 7, 4), float64] */;
    %47 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
    (%46, %47)
  };
  %48() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_11516(%var_11515: Tensor[(243, 3), bool]) -> (Tensor[(243, 3), float32], Tensor[(243, 3), bool]) {
  %61 = fn (%var_11492: Tensor[(243, 3), bool]) -> (Tensor[(243, 3), float32], Tensor[(243, 3), bool]) {
    %49 = @func_10267() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(243, 3), bool]) */;
    %50 = %49.2;
    %51 = cast(%var_11492, dtype="float32") /* ty=Tensor[(243, 3), float32] */;
    %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(2), int32] */;
    %53 = cast(%50, dtype="float32") /* ty=Tensor[(243, 3), float32] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %55 = cast(%50, dtype="bool") /* ty=Tensor[(243, 3), bool] */;
    %56 = shape_of(%var_11492, dtype="int32") /* ty=Tensor[(2), int32] */;
    %57 = cast(%var_11492, dtype="bool") /* ty=Tensor[(243, 3), bool] */;
    %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %59 = mod(%53, %54) /* ty=Tensor[(243, 3), float32] */;
    %60 = less_equal(%57, %58) /* ty=Tensor[(243, 3), bool] */;
    (%59, %60)
  };
  %61(%var_11515) /* ty=(Tensor[(243, 3), float32], Tensor[(243, 3), bool]) */
}

def @func_7761(%var_7726: Tensor[(9), float64], %var_7727: Tensor[(729), float64], %var_7736: int16, %var_7737: Tensor[(1, 65), int16]) -> (Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(1, 65), int16]) {
  %62 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %63 = cast(%var_7726, dtype="float64") /* ty=Tensor[(9), float64] */;
  %64 = cast(%var_7727, dtype="float64") /* ty=Tensor[(729), float64] */;
  %65 = reshape(%63, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %66 = reshape(%64, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %67 = @func_1391(%65, %66) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %68 = cast(%var_7736, dtype="int16") /* ty=int16 */;
  %69 = cast(%var_7737, dtype="int16") /* ty=Tensor[(1, 65), int16] */;
  %70 = reshape(%68, newshape=[]) /* ty=int16 */;
  %71 = reshape(%69, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
  %72 = @func_472(%70, %71) /* ty=(Tensor[(5, 1, 13), int16],) */;
  %73 = %62.0;
  %74 = %67.0;
  %75 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %76 = %72.0;
  (%73, %74, %var_7726, %var_7727, %75, %76, %var_7736, %var_7737)
}

def @func_9159() -> (Tensor[(3, 7, 4), float64],) {
  %77 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %78 = %77.0;
  (%78,)
}

def @func_12444() -> Tensor[(3, 7, 4), float64] {
  @func_12442() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9088() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %86 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
    %79 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %81 = reshape(%80, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
    %82 = @func_189(%81) /* ty=(Tensor[(10, 13, 2), float32],) */;
    %83 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
    %84 = %79.0;
    %85 = %82.0;
    (%83, %84, %85, meta[relay.Constant][3] /* ty=Tensor[(260), float32] */)
  };
  %86() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */
}

def @func_14656() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %87 = @func_13925() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %88 = %87.0;
  %89 = @func_12000() /* ty=Tensor[(3, 7, 4), float64] */;
  (%88, %89)
}

def @func_16109() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_16107() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_8448(%var_8446: Tensor[(2, 40), float32], %var_8447: Tensor[(16, 13, 11), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(12, 60), float32], Tensor[(2, 40), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), bool]) {
  %107 = fn (%var_8397: Tensor[(2, 40), float32], %var_8426: Tensor[(16, 13, 11), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(12, 60), float32], Tensor[(2, 40), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), bool]) {
    %90 = @func_7406() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
    %92 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
    %93 = cast(%var_8397, dtype="float32") /* ty=Tensor[(2, 40), float32] */;
    %94 = reshape(%91, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
    %95 = reshape(%92, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
    %96 = reshape(%93, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %97 = @func_3443(%94, %95, %96) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) */;
    %98 = %97.1;
    %99 = cast(%var_8426, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
    %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
    %101 = cast(%98, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
    %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %103 = @func_4842() /* ty=Tensor[(3, 7, 4), float64] */;
    %104 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
    %105 = %90.1;
    %106 = logical_or(%101, %102) /* ty=Tensor[(16, 13, 11), bool] */;
    (%103, %104, meta[relay.Constant][4] /* ty=Tensor[(12, 60), float32] */, %var_8397, %105, %106)
  };
  %107(%var_8446, %var_8447) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(12, 60), float32], Tensor[(2, 40), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), bool]) */
}

def @func_12359() -> Tensor[(3, 7, 4), float64] {
  @func_12357() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_11762() -> (Tensor[(3, 7, 4), bool],) {
  %110 = fn () -> (Tensor[(3, 7, 4), bool],) {
    %108 = @func_7563() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], int16) */;
    %109 = %108.1;
    (%109,)
  };
  %110() /* ty=(Tensor[(3, 7, 4), bool],) */
}

def @func_6575() -> Tensor[(3, 7, 4), float64] {
  %111 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %111.0
}

def @func_12867() -> (Tensor[(3, 7, 4), float64],) {
  %112 = @func_10789() /* ty=Tensor[(3, 7, 4), float64] */;
  (%112,)
}

def @func_3951(%var_3922: Tensor[(80), float32], %var_3923: Tensor[(2288), float32], %var_3935: Tensor[(315), float32], %var_3936: Tensor[(65, 4), float32]) -> (Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) {
  %113 = cast(%var_3922, dtype="float32") /* ty=Tensor[(80), float32] */;
  %114 = cast(%var_3922, dtype="float32") /* ty=Tensor[(80), float32] */;
  %115 = cast(%var_3923, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %116 = reshape(%113, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %117 = reshape(%114, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
  %118 = reshape(%115, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %119 = @func_1543(%116, %117, %118) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */;
  %120 = cast(%var_3935, dtype="float32") /* ty=Tensor[(315), float32] */;
  %121 = cast(%var_3936, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %122 = reshape(%120, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
  %123 = reshape(%121, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %124 = @func_345(%122, %123) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %125 = cast(meta[relay.Constant][5] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %126 = cast(meta[relay.Constant][6] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %127 = reshape(%125, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %128 = reshape(%126, newshape=[]) /* ty=int16 */;
  %129 = @func_1127(%127, %128) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
  %130 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %131 = %130.0;
  %132 = cast(%131, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %133 = acos(%132) /* ty=Tensor[(3, 7, 4), float32] */;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %135 = %119.0;
  %136 = %124.1;
  %137 = %129.4;
  %138 = log(%134) /* ty=Tensor[(3, 7, 4), float64] */;
  (%135, %var_3922, %var_3923, %136, %var_3935, %var_3936, %137, meta[relay.Constant][5] /* ty=Tensor[(70), float64] */, meta[relay.Constant][6] /* ty=int16 */, %138)
}

def @func_8610() -> (Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(168), float64]) {
  %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %140 = reshape(%139, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %141 = @func_7895(%140) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) */;
  %142 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
  %143 = %141.2;
  (%142, %143, meta[relay.Constant][7] /* ty=Tensor[(168), float64] */)
}

def @func_4023(%var_4015: Tensor[(9), float64], %var_4016: Tensor[(729), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) {
  %144 = cast(%var_4015, dtype="float64") /* ty=Tensor[(9), float64] */;
  %145 = cast(%var_4016, dtype="float64") /* ty=Tensor[(729), float64] */;
  %146 = reshape(%144, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %147 = reshape(%145, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %148 = @func_1391(%146, %147) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %149 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %150 = %148.0;
  (%149, %150, %var_4015, %var_4016)
}

def @func_8943() -> Tensor[(3, 7, 4), float64] {
  %152 = fn () -> Tensor[(3, 7, 4), float64] {
    %151 = @func_6643() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %151.0
  };
  %152() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9449() -> (Tensor[(3, 7, 4), float64],) {
  %153 = @func_8814() /* ty=Tensor[(3, 7, 4), float64] */;
  (%153,)
}

def @func_14746() -> (Tensor[(3, 7, 4), float64],) {
  @func_14744() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_10504(%var_10470: Tensor[(315, 1), float32]) -> (Tensor[(168), float64], Tensor[(3, 7, 4), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(20, 4), float32], Tensor[(2288), float32], Tensor[(315, 1), float64]) {
  %154 = @func_8610() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(168), float64]) */;
  %155 = cast(meta[relay.Constant][8] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %156 = cast(%var_10470, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %157 = reshape(%155, newshape=[]) /* ty=int16 */;
  %158 = reshape(%156, newshape=[315, 1]) /* ty=Tensor[(315, 1), float32] */;
  %159 = @func_5597(%157, %158) /* ty=(Tensor[(14, ?, 5), int32], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(260, 1), float32], Tensor[(260), float32], Tensor[(315, 1), float32]) */;
  %160 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %161 = cast(meta[relay.Constant][9] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %162 = cast(meta[relay.Constant][10] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %163 = reshape(%161, newshape=[2, 40]) /* ty=Tensor[(2, 40), float32] */;
  %164 = reshape(%162, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %165 = @func_8445(%163, %164) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(12, 60), float32], Tensor[(2, 40), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), bool]) */;
  %166 = cast(%var_10470, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %167 = sqrt(%166) /* ty=Tensor[(315, 1), float32] */;
  %168 = cast(%167, dtype="float64") /* ty=Tensor[(315, 1), float64] */;
  %169 = %154.2;
  %170 = %159.4;
  %171 = @func_9757() /* ty=Tensor[(3, 7, 4), float64] */;
  %172 = %160.0;
  %173 = %165.1;
  %174 = log(%168) /* ty=Tensor[(315, 1), float64] */;
  (%169, %170, meta[relay.Constant][8] /* ty=int16 */, %171, %172, %173, meta[relay.Constant][9] /* ty=Tensor[(20, 4), float32] */, meta[relay.Constant][10] /* ty=Tensor[(2288), float32] */, %174)
}

def @func_13430(%var_13414: Tensor[(80), float32], %var_13415: Tensor[(2, 1144), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(2, 40), float32], Tensor[(80), float32], Tensor[(2, 1144), float32]) {
  %175 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %176 = cast(%var_13414, dtype="float32") /* ty=Tensor[(80), float32] */;
  %177 = cast(%var_13415, dtype="float32") /* ty=Tensor[(2, 1144), float32] */;
  %178 = reshape(%176, newshape=[2, 40]) /* ty=Tensor[(2, 40), float32] */;
  %179 = reshape(%177, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %180 = @func_8445(%178, %179) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(12, 60), float32], Tensor[(2, 40), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), bool]) */;
  %181 = %175.1;
  %182 = %180.3;
  (%181, %182, %var_13414, %var_13415)
}

def @func_11021() -> (Tensor[(3, 7, 4), float64], int16, Tensor[(5, 1, 13), int16], Tensor[(65), int16]) {
  @func_11019() /* ty=(Tensor[(3, 7, 4), float64], int16, Tensor[(5, 1, 13), int16], Tensor[(65), int16]) */
}

def @func_14526() -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  @func_14524() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */
}

def @func_6413() -> (Tensor[(3, 7, 4), float64],) {
  %184 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %183 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
    (%183,)
  };
  %184() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_15591() -> (Tensor[(3, 7, 4), float64], Tensor[(8, 6, 14), float32], Tensor[(672), float32]) {
  %189 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(8, 6, 14), float32], Tensor[(672), float32]) {
    %185 = cast(meta[relay.Constant][11] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %186 = reshape(%185, newshape=[8, 6, 14]) /* ty=Tensor[(8, 6, 14), float32] */;
    %187 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
    %188 = @func_11772(%186) /* ty=Tensor[(8, 6, 14), float32] */;
    (%187, %188, meta[relay.Constant][11] /* ty=Tensor[(672), float32] */)
  };
  %189() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(8, 6, 14), float32], Tensor[(672), float32]) */
}

def @func_9000() -> (int16, Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64]) {
  %190 = cast(meta[relay.Constant][12] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %191 = reshape(%190, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %192 = @func_7895(%191) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) */;
  %193 = cast(meta[relay.Constant][13] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %194 = reshape(%193, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %195 = @func_8090(%194) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(9, 81), float64], Tensor[(9), float64], Tensor[(9, 81), float64], int16, Tensor[(3, 7, 4), float64]) */;
  %196 = @func_8137() /* ty=int16 */;
  %197 = %192.0;
  %198 = %195.5;
  (%196, %197, meta[relay.Constant][12] /* ty=Tensor[(168), float64] */, %198, meta[relay.Constant][13] /* ty=Tensor[(9), float64] */)
}

def @func_4039(%var_4032: Tensor[(3, 14, 4), float64]) -> (Tensor[(3, 14, 4), float64],) {
  %199 = cast(%var_4032, dtype="float64") /* ty=Tensor[(3, 14, 4), float64] */;
  %200 = log(%199) /* ty=Tensor[(3, 14, 4), float64] */;
  (%200,)
}

def @func_7113() -> Tensor[(3, 7, 4), float64] {
  @func_7111() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_6839(%var_6835: Tensor[(3, 7, 4), float64], %var_6836: Tensor[(80), float32], %var_6837: Tensor[(2288), float32], %var_6838: Tensor[(5, 63), float32]) -> (Tensor[(3, 7, 4), int16], Tensor[(5, 9, 7), float64], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 63), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), int32], Tensor[(720), float32], Tensor[(168), float64]) {
  %227 = fn (%var_6802: Tensor[(3, 7, 4), float64], %var_6816: Tensor[(80), float32], %var_6817: Tensor[(2288), float32], %var_6818: Tensor[(5, 63), float32]) -> (Tensor[(3, 7, 4), int16], Tensor[(5, 9, 7), float64], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 63), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), int32], Tensor[(720), float32], Tensor[(168), float64]) {
    %201 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %202 = %201.0;
    %203 = cast(%var_6802, dtype="int16") /* ty=Tensor[(3, 7, 4), int16] */;
    %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
    %205 = cast(%202, dtype="int16") /* ty=Tensor[(3, 7, 4), int16] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %207 = cast(%var_6816, dtype="float32") /* ty=Tensor[(80), float32] */;
    %208 = cast(%var_6817, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %209 = cast(%var_6818, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
    %210 = cast(meta[relay.Constant][14] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %211 = reshape(%207, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %212 = reshape(%208, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %213 = reshape(%209, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %214 = reshape(%210, newshape=[65, 4]) /* ty=Tensor[(65, 4), float32] */;
    %215 = @func_3951(%211, %212, %213, %214) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) */;
    %216 = cast(meta[relay.Constant][15] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %217 = cast(meta[relay.Constant][16] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %218 = cast(%var_6817, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %219 = reshape(%216, newshape=[2, 360]) /* ty=Tensor[(2, 360), float32] */;
    %220 = reshape(%217, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %221 = reshape(%218, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
    %222 = @func_4277(%219, %220, %221) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2, 360), float32], Tensor[(80), float32], Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), int32]) */;
    %223 = maximum(%205, %206) /* ty=Tensor[(3, 7, 4), int16] */;
    %224 = %215.3;
    %225 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
    %226 = %222.8;
    (%223, %224, %var_6816, %var_6817, %var_6818, meta[relay.Constant][14] /* ty=Tensor[(260), float32] */, %225, %226, meta[relay.Constant][15] /* ty=Tensor[(720), float32] */, meta[relay.Constant][16] /* ty=Tensor[(168), float64] */)
  };
  %227(%var_6835, %var_6836, %var_6837, %var_6838) /* ty=(Tensor[(3, 7, 4), int16], Tensor[(5, 9, 7), float64], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 63), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), int32], Tensor[(720), float32], Tensor[(168), float64]) */
}

def @func_14595(%var_14592: Tensor[(2, 4, 10), float64], %var_14593: Tensor[(2, 4, 10), float64], %var_14594: Tensor[(2, 4, 10), float64]) -> (Tensor[(2, 4, 10), float64], Tensor[(2, 4, 10), uint8]) {
  @func_14590(%var_14592, %var_14593, %var_14594) /* ty=(Tensor[(2, 4, 10), float64], Tensor[(2, 4, 10), uint8]) */
}

def @func_8031() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_8029() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_4867(%var_4853: Tensor[(3, 7, 4), float64]) -> Tensor[(3, 7, 4), bool] {
  %228 = @func_4695() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %229 = %228.0;
  %230 = cast(%var_4853, dtype="int64") /* ty=Tensor[(3, 7, 4), int64] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%229, dtype="int64") /* ty=Tensor[(3, 7, 4), int64] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %234 = bitwise_or(%232, %233) /* ty=Tensor[(3, 7, 4), int64] */;
  %235 = cast(%var_4853, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%234, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%237, %238) /* ty=Tensor[(3, 7, 4), bool] */
}

def @func_6484() -> (Tensor[(3, 7, 4), float64],) {
  @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_10456(%var_10454: Tensor[(720), float32], %var_10455: Tensor[(80), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32]) {
  @func_10452(%var_10454, %var_10455) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32]) */
}

def @func_5715() -> (Tensor[(3, 7, 4), float64],) {
  %239 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %240 = %239.0;
  (%240,)
}

def @func_8803(%var_8802: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
  %246 = fn (%var_8783: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
    %241 = cast(%var_8783, dtype="float64") /* ty=Tensor[(168), float64] */;
    %242 = reshape(%241, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
    %243 = @func_4039(%242) /* ty=(Tensor[(3, 14, 4), float64],) */;
    %244 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
    %245 = %243.0;
    (%244, %245, %var_8783)
  };
  %246(%var_8802) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */
}

def @func_5357() -> Tensor[(3, 7, 4), float64] {
  @func_5355() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_10216() -> (int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %247 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
  %248 = @func_7636() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %249 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %250 = %247.5;
  %251 = %248.0;
  %252 = %249.0;
  (%250, %251, %252)
}

def @func_7169(%var_7168: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %260 = fn (%var_7155: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
    %253 = @func_6198() /* ty=Tensor[(3, 7, 4), float64] */;
    %254 = cast(%253, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %255 = cast(%var_7155, dtype="float32") /* ty=Tensor[(260), float32] */;
    %256 = reshape(%254, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %257 = reshape(%255, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %258 = @func_4319(%256, %257) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %259 = %258.2;
    (%253, %259, %var_7155)
  };
  %260(%var_7168) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */
}

def @func_3813(%var_3812: Tensor[(7, 12, 1), float64]) -> (Tensor[(7, 12, 15), float64],) {
  %264 = fn (%var_3775: Tensor[(7, 12, 1), float64]) -> (Tensor[(7, 12, 15), float64],) {
    %261 = cast(%var_3775, dtype="float64") /* ty=Tensor[(7, 12, 1), float64] */;
    %262 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 12, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 12, 15), float64] */;
    %263 = power(%261, %262) /* ty=Tensor[(7, 12, 15), float64] */;
    (%263,)
  };
  %264(%var_3812) /* ty=(Tensor[(7, 12, 15), float64],) */
}

def @func_13392() -> (Tensor[(3, 7, 4), float64],) {
  %267 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %265 = @func_6643() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %266 = %265.0;
    (%266,)
  };
  %267() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_9403() -> (Tensor[(3, 7, 4), float64], Tensor[(7, 12, 15), float64]) {
  %273 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(7, 12, 15), float64]) {
    %268 = @func_8814() /* ty=Tensor[(3, 7, 4), float64] */;
    %269 = cast(%268, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %270 = reshape(%269, newshape=[7, 12, 1]) /* ty=Tensor[(7, 12, 1), float64] */;
    %271 = @func_3811(%270) /* ty=(Tensor[(7, 12, 15), float64],) */;
    %272 = %271.0;
    (%268, %272)
  };
  %273() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(7, 12, 15), float64]) */
}

def @func_7361() -> Tensor[(3, 7, 4), float64] {
  @func_7359() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_16045() -> Tensor[(3, 7, 4), float64] {
  %274 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %274.1
}

def @func_5793() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) {
  %275 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %276 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %277 = @func_5278() /* ty=Tensor[(3, 7, 4), float64] */;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %279 = %275.0;
  %280 = %276.0;
  %281 = log2(%278) /* ty=Tensor[(3, 7, 4), float32] */;
  (%279, %280, %281)
}

def @func_10815() -> (Tensor[(3, 7, 4), float64],) {
  %282 = @func_7449() /* ty=Tensor[(3, 7, 4), float64] */;
  (%282,)
}

def @func_10617() -> Tensor[(3, 7, 4), float64] {
  %283 = fn () -> Tensor[(3, 7, 4), float64] {
    @func_7010() /* ty=Tensor[(3, 7, 4), float64] */
  };
  %283() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_10218() -> (int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_10216() /* ty=(int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_4843() -> Tensor[(3, 7, 4), float64] {
  %284 = fn () -> Tensor[(3, 7, 4), float64] {
    @func_4632() /* ty=Tensor[(3, 7, 4), float64] */
  };
  %284() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_11255() -> (Tensor[(10, 5, 11), int16], Tensor[(3, 7, 4), float64]) {
  %285 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
  %286 = cos(%285) /* ty=Tensor[(10, 5, 11), float32] */;
  %287 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 5, 11), float32] */, dtype="int16") /* ty=Tensor[(10, 5, 11), int16] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="int16") /* ty=Tensor[(10, 5, 11), int16] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %291 = minimum(%289, %290) /* ty=Tensor[(10, 5, 11), int16] */;
  %292 = @func_9119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%291, %292)
}

def @func_10268() -> (Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(243, 3), bool]) {
  %305 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(243, 3), bool]) {
    %293 = cast(meta[relay.Constant][19] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
    %294 = cast(meta[relay.Constant][20] /* ty=Tensor[(243, 3), float64] */, dtype="float64") /* ty=Tensor[(243, 3), float64] */;
    %295 = reshape(%293, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
    %296 = reshape(%294, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
    %297 = @func_1391(%295, %296) /* ty=(Tensor[(9, 9, 9), float64],) */;
    %298 = %297.0;
    %299 = cast(%298, dtype="bool") /* ty=Tensor[(9, 9, 9), bool] */;
    %300 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(243, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %301 = cast(meta[relay.Constant][20] /* ty=Tensor[(243, 3), float64] */, dtype="bool") /* ty=Tensor[(243, 3), bool] */;
    %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %303 = @func_9583() /* ty=Tensor[(3, 7, 4), float64] */;
    %304 = greater_equal(%301, %302) /* ty=Tensor[(243, 3), bool] */;
    (%303, meta[relay.Constant][19] /* ty=Tensor[(9), float64] */, %304)
  };
  %305() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(243, 3), bool]) */
}

def @func_15191() -> Tensor[(3, 7, 4), float64] {
  @func_15189() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_6691(%var_6690: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) {
  %320 = fn (%var_6662: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) {
    %306 = @func_6643() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %307 = cast(%var_6662, dtype="float64") /* ty=Tensor[(168), float64] */;
    %308 = reshape(%307, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %309 = @func_6137(%308) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */;
    %310 = %309.0;
    %311 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %312 = %311.0;
    %313 = cast(%312, dtype="int16") /* ty=Tensor[(3, 7, 4), int16] */;
    %314 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
    %315 = cast(%310, dtype="int16") /* ty=Tensor[(3, 7, 4), int16] */;
    %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %317 = %306.0;
    %318 = multiply(%315, %316) /* ty=Tensor[(3, 7, 4), int16] */;
    %319 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
    (%317, %var_6662, %318, %319)
  };
  %320(%var_6690) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) */
}

def @func_12214() -> Tensor[(3, 7, 4), float64] {
  @func_12212() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_5636() -> (Tensor[(3, 7, 4), float64],) {
  @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_7767(%var_7763: Tensor[(9), float64], %var_7764: Tensor[(729), float64], %var_7765: int16, %var_7766: Tensor[(1, 65), int16]) -> (Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(1, 65), int16]) {
  @func_7761(%var_7763, %var_7764, %var_7765, %var_7766) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(1, 65), int16]) */
}

def @func_7787() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_7785() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_14345() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %323 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %321 = @func_7064() /* ty=Tensor[(3, 7, 4), float64] */;
    %322 = @func_9119() /* ty=Tensor[(3, 7, 4), float64] */;
    (%321, %322)
  };
  %323() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_14489() -> Tensor[(3, 7, 4), float64] {
  %324 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %324.0
}

def @func_14073() -> (Tensor[(3, 7, 4), float64],) {
  %325 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %326 = %325.0;
  (%326,)
}

def @func_3630() -> Tensor[(3, 7, 4), float64] {
  %329 = fn () -> Tensor[(3, 7, 4), float64] {
    %327 = cast(-0.852008f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %328 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    mod(%327, %328) /* ty=Tensor[(3, 7, 4), float64] */
  };
  %329() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9161() -> (Tensor[(3, 7, 4), float64],) {
  @func_9159() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_5395() -> (Tensor[(3, 7, 4), float64],) {
  %332 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %330 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %331 = %330.0;
    (%331,)
  };
  %332() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_10817() -> (Tensor[(3, 7, 4), float64],) {
  @func_10815() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_8112() -> (Tensor[(3, 7, 4), float64],) {
  %335 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %333 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %334 = %333.1;
    (%334,)
  };
  %335() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_14379() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %339 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %336 = @func_7785() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %337 = @func_9119() /* ty=Tensor[(3, 7, 4), float64] */;
    %338 = %336.0;
    (%337, %338)
  };
  %339() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_8885() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), uint8], Tensor[(3, 7, 4), float64]) {
  @func_8883() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), uint8], Tensor[(3, 7, 4), float64]) */
}

def @func_8711() -> Tensor[(3, 7, 4), float64] {
  @func_7010() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_8090(%var_8078: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), bool], Tensor[(9, 81), float64], Tensor[(9), float64], Tensor[(9, 81), float64], int16, Tensor[(3, 7, 4), float64]) {
  %340 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  %341 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 7, 4), float64] */, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%340, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %345 = cast(%var_8078, dtype="float64") /* ty=Tensor[(9), float64] */;
  %346 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 81), float64] */, dtype="float64") /* ty=Tensor[(9, 81), float64] */;
  %347 = cast(meta[relay.Constant][24] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %348 = reshape(%345, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %349 = reshape(%346, newshape=[9, 81]) /* ty=Tensor[(9, 81), float64] */;
  %350 = reshape(%347, newshape=[]) /* ty=int16 */;
  %351 = @func_3725(%348, %349, %350) /* ty=(Tensor[(9), float64], Tensor[(9, 81), float64], Tensor[(5, 1, 13), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float32]) */;
  %352 = @func_7785() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %353 = logical_and(%343, %344) /* ty=Tensor[(3, 7, 4), bool] */;
  %354 = %351.1;
  %355 = %352.0;
  (%353, %354, %var_8078, meta[relay.Constant][23] /* ty=Tensor[(9, 81), float64] */, meta[relay.Constant][24] /* ty=int16 */, %355)
}

def @func_12140(%var_12138: Tensor[(3, 4, 14), uint16], %var_12139: Tensor[(3, 4, 14), uint16]) -> (Tensor[(3, 4, 14), uint16],) {
  @func_12136(%var_12138, %var_12139) /* ty=(Tensor[(3, 4, 14), uint16],) */
}

def @func_5280() -> Tensor[(3, 7, 4), float64] {
  @func_5278() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7614(%var_7612: Tensor[(3, 6, 2), float64], %var_7613: Tensor[(3, 6, 2), float64]) -> (Tensor[(3, 6, 2), float64],) {
  %361 = fn (%var_7592: Tensor[(3, 6, 2), float64], %var_7593: Tensor[(3, 6, 2), float64]) -> (Tensor[(3, 6, 2), float64],) {
    %356 = cast(%var_7593, dtype="float64") /* ty=Tensor[(3, 6, 2), float64] */;
    %357 = shape_of(%var_7592, dtype="int32") /* ty=Tensor[(3), int32] */;
    %358 = cast(%var_7592, dtype="float64") /* ty=Tensor[(3, 6, 2), float64] */;
    %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %360 = divide(%358, %359) /* ty=Tensor[(3, 6, 2), float64] */;
    (%360,)
  };
  %361(%var_7612, %var_7613) /* ty=(Tensor[(3, 6, 2), float64],) */
}

def @func_12491() -> Tensor[(3, 7, 4), float64] {
  %362 = @func_9209() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %362.1
}

def @func_15273(%var_15269: Tensor[(4, 6, 4), int16], %var_15270: Tensor[(4, 6, 4), int16], %var_15271: Tensor[(315), float32], %var_15272: Tensor[(4, 6, 4), float64]) -> (Tensor[(4, 6, 4), int16], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(4, 6, 4), bool]) {
  %385 = fn (%var_15204: Tensor[(4, 6, 4), int16], %var_15205: Tensor[(4, 6, 4), int16], %var_15249: Tensor[(315), float32], %var_15258: Tensor[(4, 6, 4), float64]) -> (Tensor[(4, 6, 4), int16], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(4, 6, 4), bool]) {
    %363 = cast(%var_15205, dtype="int16") /* ty=Tensor[(4, 6, 4), int16] */;
    %364 = shape_of(%var_15204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %365 = cast(%var_15204, dtype="int16") /* ty=Tensor[(4, 6, 4), int16] */;
    %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %367 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %368 = cast(meta[relay.Constant][25] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %369 = cast(meta[relay.Constant][26] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %370 = cast(%var_15249, dtype="float32") /* ty=Tensor[(315), float32] */;
    %371 = reshape(%368, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %372 = reshape(%369, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %373 = reshape(%370, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %374 = @func_7254(%371, %372, %373) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32]) */;
    %375 = cast(%var_15204, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
    %376 = asinh(%375) /* ty=Tensor[(4, 6, 4), float64] */;
    %377 = cast(%var_15258, dtype="bool") /* ty=Tensor[(4, 6, 4), bool] */;
    %378 = shape_of(%376, dtype="int32") /* ty=Tensor[(3), int32] */;
    %379 = cast(%376, dtype="bool") /* ty=Tensor[(4, 6, 4), bool] */;
    %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %381 = right_shift(%365, %366) /* ty=Tensor[(4, 6, 4), int16] */;
    %382 = %367.0;
    %383 = %374.6;
    %384 = equal(%379, %380) /* ty=Tensor[(4, 6, 4), bool] */;
    (%381, %382, %383, meta[relay.Constant][25] /* ty=Tensor[(80), float32] */, meta[relay.Constant][26] /* ty=Tensor[(2288), float32] */, %var_15249, %384)
  };
  %385(%var_15269, %var_15270, %var_15271, %var_15272) /* ty=(Tensor[(4, 6, 4), int16], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(4, 6, 4), bool]) */
}

def @func_7563() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], int16) {
  %386 = @func_5182() /* ty=Tensor[(3, 7, 4), float64] */;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %388 = reshape(%387, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %389 = @func_7092(%388) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */;
  %390 = %389.0;
  %391 = @func_5677() /* ty=int16 */;
  (%386, %390, %391)
}

def @func_13212() -> (Tensor[(12, 4, 9), float64],) {
  %392 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 4, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 9), float32] */;
  %393 = tan(%392) /* ty=Tensor[(12, 4, 9), float32] */;
  %394 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 4, 9), float32] */, dtype="float64") /* ty=Tensor[(12, 4, 9), float64] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="float64") /* ty=Tensor[(12, 4, 9), float64] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %398 = floor_divide(%396, %397) /* ty=Tensor[(12, 4, 9), float64] */;
  (%398,)
}

def @func_11083() -> Tensor[(3, 7, 4), float64] {
  %399 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %399.0
}

def @func_12357() -> Tensor[(3, 7, 4), float64] {
  %400 = @func_7311() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %400.0
}

def @func_13953() -> (Tensor[(3, 7, 4), float64],) {
  %403 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %401 = @func_13391() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %402 = %401.0;
    (%402,)
  };
  %403() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_14463() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_14461() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_11986(%var_11985: Tensor[(8, 13, 4), float64]) -> (Tensor[(8, 13, 4), float64], Tensor[(8, 13, 4), float64]) {
  %410 = fn (%var_11959: Tensor[(8, 13, 4), float64]) -> (Tensor[(8, 13, 4), float64], Tensor[(8, 13, 4), float64]) {
    %404 = cast(%var_11959, dtype="float64") /* ty=Tensor[(8, 13, 4), float64] */;
    %405 = rsqrt(%404) /* ty=Tensor[(8, 13, 4), float64] */;
    %406 = cast(%405, dtype="float64") /* ty=Tensor[(8, 13, 4), float64] */;
    %407 = cast(%var_11959, dtype="float64") /* ty=Tensor[(8, 13, 4), float64] */;
    %408 = tan(%406) /* ty=Tensor[(8, 13, 4), float64] */;
    %409 = sin(%407) /* ty=Tensor[(8, 13, 4), float64] */;
    (%408, %409)
  };
  %410(%var_11985) /* ty=(Tensor[(8, 13, 4), float64], Tensor[(8, 13, 4), float64]) */
}

def @func_14093() -> (Tensor[(3, 7, 4), float64],) {
  %412 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %411 = @func_6198() /* ty=Tensor[(3, 7, 4), float64] */;
    (%411,)
  };
  %412() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_16300() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %413 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %414 = %413.0;
  %415 = @func_15514() /* ty=Tensor[(3, 7, 4), float64] */;
  (%414, %415)
}

def @func_3730(%var_3727: Tensor[(9), float64], %var_3728: Tensor[(9, 81), float64], %var_3729: int16) -> (Tensor[(9), float64], Tensor[(9, 81), float64], Tensor[(5, 1, 13), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float32]) {
  @func_3725(%var_3727, %var_3728, %var_3729) /* ty=(Tensor[(9), float64], Tensor[(9, 81), float64], Tensor[(5, 1, 13), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float32]) */
}

def @func_9381() -> (Tensor[(3, 7, 4), float64],) {
  @func_9379() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_15679() -> (Tensor[(3, 7, 4), float64],) {
  @func_15677() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_10415() -> Tensor[(3, 7, 4), float64] {
  @func_8814() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_16444() -> (Tensor[(3, 7, 4), float64],) {
  @func_16442() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_10865() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_10863() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @main(%var_16471: Tensor[(1, 315), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(96, 1), int16], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(?, 315), bool]) {
  %416 = @func_10703() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %417 = cast(meta[relay.Constant][28] /* ty=Tensor[(96, 1), int16] */, dtype="int16") /* ty=Tensor[(96, 1), int16] */;
  %418 = cast(meta[relay.Constant][28] /* ty=Tensor[(96, 1), int16] */, dtype="int16") /* ty=Tensor[(96, 1), int16] */;
  %419 = cast(%var_16471, dtype="float32") /* ty=Tensor[(1, 315), float32] */;
  %420 = cast(meta[relay.Constant][28] /* ty=Tensor[(96, 1), int16] */, dtype="float64") /* ty=Tensor[(96, 1), float64] */;
  %421 = reshape(%417, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), int16] */;
  %422 = reshape(%418, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), int16] */;
  %423 = reshape(%419, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %424 = reshape(%420, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), float64] */;
  %425 = @func_15273(%421, %422, %423, %424) /* ty=(Tensor[(4, 6, 4), int16], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(4, 6, 4), bool]) */;
  %426 = cast(%var_16471, dtype="float64") /* ty=Tensor[(1, 315), float64] */;
  %427 = sigmoid(%426) /* ty=Tensor[(1, 315), float64] */;
  %428 = cast(%427, dtype="float64") /* ty=Tensor[(1, 315), float64] */;
  %429 = sinh(%428) /* ty=Tensor[(1, 315), float64] */;
  %430 = cast(%427, dtype="float64") /* ty=Tensor[(1, 315), float64] */;
  %431 = rsqrt(%430) /* ty=Tensor[(1, 315), float64] */;
  %432 = cast(%431, dtype="bool") /* ty=Tensor[(1, 315), bool] */;
  %433 = shape_of(%429, dtype="int32") /* ty=Tensor[(2), int32] */;
  %434 = cast(%429, dtype="bool") /* ty=Tensor[(1, 315), bool] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %436 = %416.0;
  %437 = %425.1;
  %438 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
  %439 = @func_15514() /* ty=Tensor[(3, 7, 4), float64] */;
  %440 = @func_16426() /* ty=Tensor[(3, 7, 4), float64] */;
  %441 = not_equal(%434, %435) /* ty=Tensor[(?, 315), bool] */;
  (%436, %437, meta[relay.Constant][28] /* ty=Tensor[(96, 1), int16] */, %438, %439, %440, %441)
}

def @func_13680() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %442 = @func_10364() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(1, 13, 13), float32], Tensor[(169), float32], Tensor[(3, 7, 4), float64]) */;
  %443 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
  %444 = %442.3;
  (%443, %444)
}

def @func_4870(%var_4868: Tensor[(3, 7, 4), float64]) -> Tensor[(3, 7, 4), bool] {
  @func_4867(%var_4868) /* ty=Tensor[(3, 7, 4), bool] */
}

def @func_7065() -> Tensor[(3, 7, 4), float64] {
  %446 = fn () -> Tensor[(3, 7, 4), float64] {
    %445 = @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */;
    %445.1
  };
  %446() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7861(%var_7833: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
  %447 = cast(%var_7833, dtype="float64") /* ty=Tensor[(168), float64] */;
  %448 = reshape(%447, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %449 = @func_6689(%448) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) */;
  %450 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %451 = @func_4842() /* ty=Tensor[(3, 7, 4), float64] */;
  %452 = %449.0;
  %453 = %450.0;
  (%451, %452, %var_7833, %453)
}

def @func_13144(%var_13130: Tensor[(729), float64], %var_13131: int16, %var_13132: Tensor[(65), int16]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(65), uint16]) {
  %454 = @func_7971() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %455 = cast(meta[relay.Constant][29] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %456 = cast(%var_13130, dtype="float64") /* ty=Tensor[(729), float64] */;
  %457 = cast(%var_13131, dtype="int16") /* ty=int16 */;
  %458 = cast(%var_13132, dtype="int16") /* ty=Tensor[(65), int16] */;
  %459 = reshape(%455, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %460 = reshape(%456, newshape=[729]) /* ty=Tensor[(729), float64] */;
  %461 = reshape(%457, newshape=[]) /* ty=int16 */;
  %462 = reshape(%458, newshape=[1, 65]) /* ty=Tensor[(1, 65), int16] */;
  %463 = @func_7761(%459, %460, %461, %462) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(1, 65), int16]) */;
  %464 = cast(%var_13132, dtype="uint16") /* ty=Tensor[(65), uint16] */;
  %465 = cast(%var_13131, dtype="uint16") /* ty=uint16 */;
  %466 = %454.0;
  %467 = %463.4;
  %468 = add(%464, %465) /* ty=Tensor[(65), uint16] */;
  (%466, %467, meta[relay.Constant][29] /* ty=Tensor[(9), float64] */, %var_13130, %468)
}

def @func_12001() -> Tensor[(3, 7, 4), float64] {
  %470 = fn () -> Tensor[(3, 7, 4), float64] {
    %469 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %469.0
  };
  %470() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_12988() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %471 = @func_8029() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %472 = @func_8883() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), uint8], Tensor[(3, 7, 4), float64]) */;
  %473 = @func_12298() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
  %474 = @func_8521() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) */;
  %475 = @func_8521() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) */;
  %476 = @func_12867() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %477 = %471.1;
  %478 = @func_10616() /* ty=Tensor[(3, 7, 4), float64] */;
  %479 = %472.0;
  %480 = %473.4;
  %481 = @func_5355() /* ty=Tensor[(3, 7, 4), float64] */;
  %482 = %474.1;
  %483 = %475.0;
  %484 = @func_12212() /* ty=Tensor[(3, 7, 4), float64] */;
  %485 = %476.0;
  (%477, %478, %479, %480, %481, %482, %483, %484, %485)
}

def @func_7313() -> (Tensor[(3, 7, 4), float64],) {
  @func_7311() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_9002() -> (int16, Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64]) {
  @func_9000() /* ty=(int16, Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64]) */
}

def @func_10160(%var_10122: Tensor[(6, 8, 16), float32], %var_10139: float32, %var_10140: Tensor[(16), float32], %var_10141: Tensor[(70, 1), float64]) -> (int16, float32, Tensor[(16), float32], Tensor[(70, 1), float64], Tensor[(6, 8, 16), uint8]) {
  %486 = cast(%var_10139, dtype="float32") /* ty=float32 */;
  %487 = cast(%var_10140, dtype="float32") /* ty=Tensor[(16), float32] */;
  %488 = cast(%var_10141, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
  %489 = reshape(%486, newshape=[]) /* ty=float32 */;
  %490 = reshape(%487, newshape=[16, 1]) /* ty=Tensor[(16, 1), float32] */;
  %491 = reshape(%488, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %492 = @func_2894(%489, %490, %491) /* ty=(Tensor[(16, 1), float32], int16, Tensor[(70), float64]) */;
  %493 = cast(%var_10122, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %494 = sin(%493) /* ty=Tensor[(6, 8, 16), float32] */;
  %495 = cast(%var_10122, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%494, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %499 = power(%497, %498) /* ty=Tensor[(6, 8, 16), float32] */;
  %500 = cast(%499, dtype="uint8") /* ty=Tensor[(6, 8, 16), uint8] */;
  %501 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%494, dtype="uint8") /* ty=Tensor[(6, 8, 16), uint8] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %504 = %492.1;
  %505 = multiply(%502, %503) /* ty=Tensor[(6, 8, 16), uint8] */;
  (%504, %var_10139, %var_10140, %var_10141, %505)
}

def @func_14658() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_14656() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_8029() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %506 = @func_5182() /* ty=Tensor[(3, 7, 4), float64] */;
  %507 = @func_6575() /* ty=Tensor[(3, 7, 4), float64] */;
  (%506, %507)
}

def @func_15045(%var_15043: Tensor[(7), float64], %var_15044: Tensor[(900), uint32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(105), float64], uint32, Tensor[(900), uint32], int16) {
  @func_15041(%var_15043, %var_15044) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(105), float64], uint32, Tensor[(900), uint32], int16) */
}

def @func_9561(%var_9542: Tensor[(260), float32]) -> (Tensor[(260), int16],) {
  %508 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
  %509 = %508.1;
  %510 = cast(%var_9542, dtype="int16") /* ty=Tensor[(260), int16] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(1), int32] */;
  %512 = cast(%509, dtype="int16") /* ty=Tensor[(260), int16] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?), int16] */;
  %514 = right_shift(%512, %513) /* ty=Tensor[(260), int16] */;
  (%514,)
}

def @func_2899(%var_2896: float32, %var_2897: Tensor[(16, 1), float32], %var_2898: Tensor[(70), float64]) -> (Tensor[(16, 1), float32], int16, Tensor[(70), float64]) {
  @func_2894(%var_2896, %var_2897, %var_2898) /* ty=(Tensor[(16, 1), float32], int16, Tensor[(70), float64]) */
}

def @func_5355() -> Tensor[(3, 7, 4), float64] {
  %515 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %515.0
}

def @func_10539() -> Tensor[(3, 7, 4), float64] {
  %516 = fn () -> Tensor[(3, 7, 4), float64] {
    @func_10415() /* ty=Tensor[(3, 7, 4), float64] */
  };
  %516() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_11019() -> (Tensor[(3, 7, 4), float64], int16, Tensor[(5, 1, 13), int16], Tensor[(65), int16]) {
  %517 = @func_9087() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %518 = @func_8137() /* ty=int16 */;
  %519 = cast(%518, dtype="int16") /* ty=int16 */;
  %520 = cast(meta[relay.Constant][30] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %521 = reshape(%519, newshape=[]) /* ty=int16 */;
  %522 = reshape(%520, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
  %523 = @func_472(%521, %522) /* ty=(Tensor[(5, 1, 13), int16],) */;
  %524 = %517.1;
  %525 = %523.0;
  (%524, %518, %525, meta[relay.Constant][30] /* ty=Tensor[(65), int16] */)
}

def @func_14844() -> (int16, Tensor[(3, 7, 4), float64]) {
  %529 = fn () -> (int16, Tensor[(3, 7, 4), float64]) {
    %526 = @func_7674() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %527 = @func_5677() /* ty=int16 */;
    %528 = %526.0;
    (%527, %528)
  };
  %529() /* ty=(int16, Tensor[(3, 7, 4), float64]) */
}

def @func_1547(%var_1544: Tensor[(8, 5, 2), float32], %var_1545: Tensor[(8, 5, 2), float32], %var_1546: Tensor[(2288), float32]) -> (Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) {
  %544 = fn (%var_1524: Tensor[(8, 5, 2), float32], %var_1525: Tensor[(8, 5, 2), float32], %var_1532: Tensor[(2288), float32]) -> (Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) {
    %530 = cast(%var_1532, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %531 = reshape(%530, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
    %532 = @func_1331(%531) /* ty=(Tensor[(16, 13, 11), float32],) */;
    %533 = cast(%var_1525, dtype="float32") /* ty=Tensor[(8, 5, 2), float32] */;
    %534 = shape_of(%var_1524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %535 = cast(%var_1524, dtype="float32") /* ty=Tensor[(8, 5, 2), float32] */;
    %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %537 = add(%535, %536) /* ty=Tensor[(8, 5, 2), float32] */;
    %538 = cast(%537, dtype="bool") /* ty=Tensor[(8, 5, 2), bool] */;
    %539 = shape_of(%var_1525, dtype="int32") /* ty=Tensor[(3), int32] */;
    %540 = cast(%var_1525, dtype="bool") /* ty=Tensor[(8, 5, 2), bool] */;
    %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %542 = %532.0;
    %543 = less(%540, %541) /* ty=Tensor[(8, 5, 2), bool] */;
    (%542, %var_1532, %543)
  };
  %544(%var_1544, %var_1545, %var_1546) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */
}

def @func_3906() -> Tensor[(3, 7, 4), float64] {
  %546 = fn () -> Tensor[(3, 7, 4), float64] {
    %545 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %545.1
  };
  %546() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7676() -> (Tensor[(3, 7, 4), float64],) {
  @func_7674() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_15650(%var_15648: uint32, %var_15649: Tensor[(900), uint32]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 10, 9), bool], uint32, Tensor[(900), uint32], Tensor[(3, 7, 4), float64]) {
  %556 = fn (%var_15619: uint32, %var_15620: Tensor[(900), uint32]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 10, 9), bool], uint32, Tensor[(900), uint32], Tensor[(3, 7, 4), float64]) {
    %547 = @func_6013() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %548 = cast(%var_15619, dtype="uint32") /* ty=uint32 */;
    %549 = cast(%var_15620, dtype="uint32") /* ty=Tensor[(900), uint32] */;
    %550 = reshape(%548, newshape=[]) /* ty=uint32 */;
    %551 = reshape(%549, newshape=[10, 10, 9]) /* ty=Tensor[(10, 10, 9), uint32] */;
    %552 = @func_7927(%550, %551) /* ty=(Tensor[(10, 10, 9), bool], Tensor[(3, 7, 4), float64]) */;
    %553 = %547.0;
    %554 = %552.0;
    %555 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
    (%553, %554, %var_15619, %var_15620, %555)
  };
  %556(%var_15648, %var_15649) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 10, 9), bool], uint32, Tensor[(900), uint32], Tensor[(3, 7, 4), float64]) */
}

def @func_4431() -> Tensor[(3, 7, 4), float64] {
  %558 = fn () -> Tensor[(3, 7, 4), float64] {
    %557 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %557.0
  };
  %558() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_12493() -> Tensor[(3, 7, 4), float64] {
  @func_12491() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7565() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], int16) {
  @func_7563() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], int16) */
}

def @func_6014() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %563 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %559 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %560 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %561 = %559.0;
    %562 = %560.0;
    (%561, %562)
  };
  %563() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_8342() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_8340() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_12442() -> Tensor[(3, 7, 4), float64] {
  %564 = @func_10702() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %564.0
}

def @func_14476() -> Tensor[(3, 7, 4), float64] {
  @func_14474() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9532(%var_9529: Tensor[(9), float64], %var_9530: Tensor[(729), float64], %var_9531: int16) -> (Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) {
  @func_9527(%var_9529, %var_9530, %var_9531) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) */
}

def @func_5957() -> (Tensor[(3, 7, 4), float64],) {
  %565 = @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */;
  %566 = %565.0;
  (%566,)
}

def @func_11085() -> Tensor[(3, 7, 4), float64] {
  @func_11083() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9451() -> (Tensor[(3, 7, 4), float64],) {
  @func_9449() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_13227() -> Tensor[(3, 7, 4), float64] {
  @func_13225() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_12753() -> Tensor[(3, 7, 4), float64] {
  %568 = fn () -> Tensor[(3, 7, 4), float64] {
    %567 = @func_7311() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %567.0
  };
  %568() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_15316() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %572 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %569 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %570 = %569.0;
    %571 = @func_12752() /* ty=Tensor[(3, 7, 4), float64] */;
    (%570, %571)
  };
  %572() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_3749() -> Tensor[(3, 7, 4), float64] {
  %573 = fn () -> Tensor[(3, 7, 4), float64] {
    @func_3629() /* ty=Tensor[(3, 7, 4), float64] */
  };
  %573() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_5183() -> Tensor[(3, 7, 4), float64] {
  %574 = fn () -> Tensor[(3, 7, 4), float64] {
    @func_4632() /* ty=Tensor[(3, 7, 4), float64] */
  };
  %574() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9948(%var_9946: uint8, %var_9947: Tensor[(6, 16, 3), uint8]) -> (Tensor[(3, 7, 4), float64], Tensor[(6, 16, 3), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(6, 16, 3), float64]) {
  %588 = fn (%var_9905: uint8, %var_9906: Tensor[(6, 16, 3), uint8]) -> (Tensor[(3, 7, 4), float64], Tensor[(6, 16, 3), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(6, 16, 3), float64]) {
    %575 = cast(%var_9906, dtype="float32") /* ty=Tensor[(6, 16, 3), float32] */;
    %576 = atan(%575) /* ty=Tensor[(6, 16, 3), float32] */;
    %577 = cast(%576, dtype="float32") /* ty=Tensor[(6, 16, 3), float32] */;
    %578 = @func_7636() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %579 = cast(%var_9905, dtype="uint8") /* ty=uint8 */;
    %580 = cast(%var_9906, dtype="uint8") /* ty=Tensor[(6, 16, 3), uint8] */;
    %581 = left_shift(%579, %580) /* ty=Tensor[(6, 16, 3), uint8] */;
    %582 = cast(%581, dtype="float64") /* ty=Tensor[(6, 16, 3), float64] */;
    %583 = @func_6198() /* ty=Tensor[(3, 7, 4), float64] */;
    %584 = sinh(%577) /* ty=Tensor[(6, 16, 3), float32] */;
    %585 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
    %586 = %578.0;
    %587 = sigmoid(%582) /* ty=Tensor[(6, 16, 3), float64] */;
    (%583, %584, %585, %586, %587)
  };
  %588(%var_9946, %var_9947) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(6, 16, 3), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(6, 16, 3), float64]) */
}

def @func_12212() -> Tensor[(3, 7, 4), float64] {
  %589 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %589.0
}

def @func_10073() -> (int16,) {
  @func_10071() /* ty=(int16,) */
}

def @func_16047() -> Tensor[(3, 7, 4), float64] {
  @func_16045() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_8815() -> Tensor[(3, 7, 4), float64] {
  %591 = fn () -> Tensor[(3, 7, 4), float64] {
    %590 = @func_7406() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %590.1
  };
  %591() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_13633(%var_13629: Tensor[(1, 1, 7), float64], %var_13630: Tensor[(1, 15, 7), float64], %var_13631: uint32, %var_13632: Tensor[(9, 100), uint32]) -> (Tensor[(1, 15, 7), float64], Tensor[(3, 7, 4), float64], uint32, Tensor[(9, 100), uint32]) {
  %601 = fn (%var_13612: Tensor[(1, 1, 7), float64], %var_13613: Tensor[(1, 15, 7), float64], %var_13619: uint32, %var_13620: Tensor[(9, 100), uint32]) -> (Tensor[(1, 15, 7), float64], Tensor[(3, 7, 4), float64], uint32, Tensor[(9, 100), uint32]) {
    %592 = cast(%var_13612, dtype="float64") /* ty=Tensor[(1, 1, 7), float64] */;
    %593 = cast(%var_13613, dtype="float64") /* ty=Tensor[(1, 15, 7), float64] */;
    %594 = cast(%var_13619, dtype="uint32") /* ty=uint32 */;
    %595 = cast(%var_13620, dtype="uint32") /* ty=Tensor[(9, 100), uint32] */;
    %596 = reshape(%594, newshape=[]) /* ty=uint32 */;
    %597 = reshape(%595, newshape=[10, 10, 9]) /* ty=Tensor[(10, 10, 9), uint32] */;
    %598 = @func_7927(%596, %597) /* ty=(Tensor[(10, 10, 9), bool], Tensor[(3, 7, 4), float64]) */;
    %599 = add(%592, %593) /* ty=Tensor[(1, 15, 7), float64] */;
    %600 = %598.1;
    (%599, %600, %var_13619, %var_13620)
  };
  %601(%var_13629, %var_13630, %var_13631, %var_13632) /* ty=(Tensor[(1, 15, 7), float64], Tensor[(3, 7, 4), float64], uint32, Tensor[(9, 100), uint32]) */
}

def @func_10088(%var_10087: Tensor[(14, 6, 9), float32]) -> (Tensor[(14, 6, 9), float64],) {
  %606 = fn (%var_10074: Tensor[(14, 6, 9), float32]) -> (Tensor[(14, 6, 9), float64],) {
    %602 = cast(%var_10074, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
    %603 = sinh(%602) /* ty=Tensor[(14, 6, 9), float32] */;
    %604 = cast(%603, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
    %605 = rsqrt(%604) /* ty=Tensor[(14, 6, 9), float64] */;
    (%605,)
  };
  %606(%var_10087) /* ty=(Tensor[(14, 6, 9), float64],) */
}

def @func_11775(%var_11773: Tensor[(8, 6, 14), float32]) -> Tensor[(8, 6, 14), float32] {
  @func_11772(%var_11773) /* ty=Tensor[(8, 6, 14), float32] */
}

def @func_8340() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %607 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %608 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %609 = %607.0;
  %610 = %608.0;
  (%609, %610)
}

def @func_16063() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %613 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %611 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
    %612 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
    (%611, %612)
  };
  %613() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_15041(%var_15029: Tensor[(7), float64], %var_15032: Tensor[(900), uint32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(105), float64], uint32, Tensor[(900), uint32], int16) {
  %614 = @func_14378() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %615 = @func_13712() /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */;
  %616 = cast(%var_15029, dtype="float64") /* ty=Tensor[(7), float64] */;
  %617 = cast(meta[relay.Constant][31] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %618 = cast(meta[relay.Constant][32] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %619 = cast(%var_15032, dtype="uint32") /* ty=Tensor[(900), uint32] */;
  %620 = reshape(%616, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), float64] */;
  %621 = reshape(%617, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %622 = reshape(%618, newshape=[]) /* ty=uint32 */;
  %623 = reshape(%619, newshape=[9, 100]) /* ty=Tensor[(9, 100), uint32] */;
  %624 = @func_13628(%620, %621, %622, %623) /* ty=(Tensor[(1, 15, 7), float64], Tensor[(3, 7, 4), float64], uint32, Tensor[(9, 100), uint32]) */;
  %625 = %614.1;
  %626 = %615.0;
  %627 = %624.0;
  %628 = @func_8137() /* ty=int16 */;
  (%625, %626, %627, %var_15029, meta[relay.Constant][31] /* ty=Tensor[(105), float64] */, meta[relay.Constant][32] /* ty=uint32 */, %var_15032, %628)
}

def @func_9288(%var_9287: int16) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(13, 5), int16]) {
  %642 = fn (%var_9261: int16) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(13, 5), int16]) {
    %629 = @func_8214() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
    %630 = %629.1;
    %631 = cast(%630, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %632 = reshape(%631, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %633 = @func_4171(%632) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
    %634 = cast(%var_9261, dtype="int16") /* ty=int16 */;
    %635 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 5), int16] */, dtype="int16") /* ty=Tensor[(13, 5), int16] */;
    %636 = reshape(%634, newshape=[]) /* ty=int16 */;
    %637 = reshape(%635, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
    %638 = @func_472(%636, %637) /* ty=(Tensor[(5, 1, 13), int16],) */;
    %639 = @func_6460() /* ty=Tensor[(3, 7, 4), float64] */;
    %640 = %633.0;
    %641 = %638.0;
    (%639, %630, %640, %641, %var_9261, meta[relay.Constant][33] /* ty=Tensor[(13, 5), int16] */)
  };
  %642(%var_9287) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(13, 5), int16]) */
}

def @func_14491() -> Tensor[(3, 7, 4), float64] {
  @func_14489() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7785() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %643 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %644 = @func_4632() /* ty=Tensor[(3, 7, 4), float64] */;
  %645 = %643.0;
  (%644, %645)
}

def @func_15953() -> Tensor[(3, 7, 4), float64] {
  @func_5182() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_4894() -> (Tensor[(3, 7, 4), float64],) {
  @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_13465() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) {
  %646 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %647 = @func_9159() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %648 = @func_11761() /* ty=(Tensor[(3, 7, 4), bool],) */;
  %649 = %646.0;
  %650 = %647.0;
  %651 = %648.0;
  (%649, %650, %651)
}

def @func_9527(%var_9518: Tensor[(9), float64], %var_9519: Tensor[(729), float64], %var_9520: int16) -> (Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) {
  %652 = cast(%var_9518, dtype="float64") /* ty=Tensor[(9), float64] */;
  %653 = cast(%var_9519, dtype="float64") /* ty=Tensor[(729), float64] */;
  %654 = cast(%var_9520, dtype="int16") /* ty=int16 */;
  %655 = cast(meta[relay.Constant][34] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %656 = reshape(%652, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %657 = reshape(%653, newshape=[729]) /* ty=Tensor[(729), float64] */;
  %658 = reshape(%654, newshape=[]) /* ty=int16 */;
  %659 = reshape(%655, newshape=[1, 65]) /* ty=Tensor[(1, 65), int16] */;
  %660 = @func_7761(%656, %657, %658, %659) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(1, 65), int16]) */;
  %661 = @func_5182() /* ty=Tensor[(3, 7, 4), float64] */;
  %662 = %660.5;
  (%661, %662, %var_9518, %var_9519, %var_9520, meta[relay.Constant][34] /* ty=Tensor[(65), int16] */)
}

def @func_9211() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_9209() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_5528(%var_5513: Tensor[(720), float32], %var_5515: Tensor[(88, 26), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(80), float32], Tensor[(720), float32], Tensor[(168), float64], Tensor[(88, 26), float32]) {
  %663 = cast(%var_5513, dtype="float32") /* ty=Tensor[(720), float32] */;
  %664 = cast(meta[relay.Constant][35] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %665 = cast(%var_5515, dtype="float32") /* ty=Tensor[(88, 26), float32] */;
  %666 = reshape(%663, newshape=[2, 360]) /* ty=Tensor[(2, 360), float32] */;
  %667 = reshape(%664, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %668 = reshape(%665, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
  %669 = @func_4277(%666, %667, %668) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2, 360), float32], Tensor[(80), float32], Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), int32]) */;
  %670 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  %671 = %669.5;
  (%670, %671, %var_5513, meta[relay.Constant][35] /* ty=Tensor[(168), float64] */, %var_5515)
}

def @func_14427() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %677 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %672 = @func_9087() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %673 = @func_14092() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %674 = @func_9853() /* ty=Tensor[(3, 7, 4), float64] */;
    %675 = %672.0;
    %676 = %673.0;
    (%674, %675, %676)
  };
  %677() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_6529() -> Tensor[(3, 7, 4), float64] {
  %678 = fn () -> Tensor[(3, 7, 4), float64] {
    @func_5119() /* ty=Tensor[(3, 7, 4), float64] */
  };
  %678() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9209() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %679 = @func_7674() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %680 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  %681 = %679.0;
  (%680, %681)
}

def @func_7449() -> Tensor[(3, 7, 4), float64] {
  @func_5278() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_10894(%var_10892: Tensor[(1, 3, 6), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(?, 3, 6), int16], Tensor[(3, 7, 4), float64], Tensor[(1, 3, 6), float32]) {
  @func_10891(%var_10892) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(?, 3, 6), int16], Tensor[(3, 7, 4), float64], Tensor[(1, 3, 6), float32]) */
}

def @func_7897(%var_7896: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
  %690 = fn (%var_7886: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
    %682 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %683 = cast(%var_7886, dtype="float64") /* ty=Tensor[(168), float64] */;
    %684 = reshape(%683, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %685 = @func_6137(%684) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */;
    %686 = @func_4695() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %687 = %682.0;
    %688 = %685.0;
    %689 = %686.0;
    (%687, %688, %var_7886, %689)
  };
  %690(%var_7896) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_6460() -> Tensor[(3, 7, 4), float64] {
  %691 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %691.0
}

def @func_10723() -> Tensor[(3, 7, 4), float64] {
  @func_10721() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_8137() -> int16 {
  @func_5677() /* ty=int16 */
}

def @func_192(%var_190: Tensor[(10, 13, 2), float32]) -> (Tensor[(10, 13, 2), float32],) {
  @func_189(%var_190) /* ty=(Tensor[(10, 13, 2), float32],) */
}

def @func_12632() -> Tensor[(3, 7, 4), float64] {
  @func_12630() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_14944() -> (Tensor[(3, 7, 4), float64],) {
  %694 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %692 = @func_7636() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %693 = %692.0;
    (%693,)
  };
  %694() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_6482() -> (Tensor[(3, 7, 4), float64],) {
  %695 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%695,)
}

def @func_11392() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %699 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %696 = @func_6643() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %697 = %696.0;
    %698 = @func_7010() /* ty=Tensor[(3, 7, 4), float64] */;
    (%697, %698)
  };
  %699() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_5532(%var_5530: Tensor[(720), float32], %var_5531: Tensor[(88, 26), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(80), float32], Tensor[(720), float32], Tensor[(168), float64], Tensor[(88, 26), float32]) {
  @func_5528(%var_5530, %var_5531) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(80), float32], Tensor[(720), float32], Tensor[(168), float64], Tensor[(88, 26), float32]) */
}

def @func_6198() -> Tensor[(3, 7, 4), float64] {
  @func_5355() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9564(%var_9562: Tensor[(260), float32]) -> (Tensor[(260), int16],) {
  @func_9561(%var_9562) /* ty=(Tensor[(260), int16],) */
}

def @func_12834() -> Tensor[(260), float32] {
  %701 = fn () -> Tensor[(260), float32] {
    %700 = @func_12298() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
    %700.3
  };
  %701() /* ty=Tensor[(260), float32] */
}

def @func_12690() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(14, 6, 9), float64], Tensor[(756), float32], Tensor[(3, 7, 4), float64]) {
  %702 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %703 = @func_7563() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], int16) */;
  %704 = @func_7971() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %705 = cast(meta[relay.Constant][36] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %706 = reshape(%705, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), float32] */;
  %707 = @func_10086(%706) /* ty=(Tensor[(14, 6, 9), float64],) */;
  %708 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %709 = %702.0;
  %710 = %703.0;
  %711 = %704.0;
  %712 = %707.0;
  %713 = %708.0;
  (%709, %710, %711, %712, meta[relay.Constant][36] /* ty=Tensor[(756), float32] */, %713)
}

def @func_12299() -> (Tensor[(3, 7, 4), float64], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) {
  %723 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) {
    %714 = cast(meta[relay.Constant][37] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %715 = cast(meta[relay.Constant][38] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %716 = reshape(%714, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
    %717 = reshape(%715, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %718 = @func_345(%716, %717) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %719 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %720 = @func_8711() /* ty=Tensor[(3, 7, 4), float64] */;
    %721 = %718.1;
    %722 = %719.1;
    (%720, %721, meta[relay.Constant][37] /* ty=Tensor[(315), float32] */, meta[relay.Constant][38] /* ty=Tensor[(260), float32] */, %722)
  };
  %723() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */
}

def @func_13101() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %724 = @func_11391() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %725 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %726 = %724.0;
  (%725, %726)
}

def @func_14242() -> (Tensor[(3, 7, 4), bool],) {
  %727 = @func_13465() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) */;
  %728 = %727.2;
  (%728,)
}

def @func_7674() -> (Tensor[(3, 7, 4), float64],) {
  %729 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %730 = %729.0;
  (%730,)
}

def @func_9854() -> Tensor[(3, 7, 4), float64] {
  %731 = fn () -> Tensor[(3, 7, 4), float64] {
    @func_6575() /* ty=Tensor[(3, 7, 4), float64] */
  };
  %731() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_10366() -> (Tensor[(3, 7, 4), float64], Tensor[(1, 13, 13), float32], Tensor[(169), float32], Tensor[(3, 7, 4), float64]) {
  @func_10364() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(1, 13, 13), float32], Tensor[(169), float32], Tensor[(3, 7, 4), float64]) */
}

def @func_16426() -> Tensor[(3, 7, 4), float64] {
  %732 = @func_5394() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %732.0
}

def @func_12319() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %735 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %733 = @func_7359() /* ty=Tensor[(3, 7, 4), float64] */;
    %734 = @func_8942() /* ty=Tensor[(3, 7, 4), float64] */;
    (%733, %734)
  };
  %735() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_12086(%var_12082: int16, %var_12083: Tensor[(13, 15, 2), int16], %var_12084: Tensor[(1, 80), float32], %var_12085: Tensor[(9), float64]) -> (Tensor[(13, 15, 2), int16], Tensor[(1, 80), float32], Tensor[(315, 9), int32]) {
  @func_12080(%var_12082, %var_12083, %var_12084, %var_12085) /* ty=(Tensor[(13, 15, 2), int16], Tensor[(1, 80), float32], Tensor[(315, 9), int32]) */
}

def @func_10891(%var_10866: Tensor[(1, 3, 6), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(?, 3, 6), int16], Tensor[(3, 7, 4), float64], Tensor[(1, 3, 6), float32]) {
  %736 = cast(%var_10866, dtype="float64") /* ty=Tensor[(1, 3, 6), float64] */;
  %737 = sin(%736) /* ty=Tensor[(1, 3, 6), float64] */;
  %738 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 3, 6), float64] */, dtype="int16") /* ty=Tensor[(1, 3, 6), int16] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="int16") /* ty=Tensor[(1, 3, 6), int16] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %742 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 3, 6), float64] */, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %743 = @func_4842() /* ty=Tensor[(3, 7, 4), float64] */;
  %744 = logical_xor(%740, %741) /* ty=Tensor[(?, 3, 6), int16] */;
  %745 = @func_7449() /* ty=Tensor[(3, 7, 4), float64] */;
  %746 = sinh(%742) /* ty=Tensor[(1, 3, 6), float32] */;
  (%743, %744, %745, %746)
}

def @func_476(%var_474: int16, %var_475: Tensor[(5, 1, 13), int16]) -> (Tensor[(5, 1, 13), int16],) {
  @func_472(%var_474, %var_475) /* ty=(Tensor[(5, 1, 13), int16],) */
}

def @func_4405() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_8713() -> Tensor[(3, 7, 4), float64] {
  @func_8711() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_14244() -> (Tensor[(3, 7, 4), bool],) {
  @func_14242() /* ty=(Tensor[(3, 7, 4), bool],) */
}

def @func_5121() -> Tensor[(3, 7, 4), float64] {
  @func_5119() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_16302() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_16300() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_11210() -> (Tensor[(3, 7, 4), float64],) {
  %748 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %747 = @func_9757() /* ty=Tensor[(3, 7, 4), float64] */;
    (%747,)
  };
  %748() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_12630() -> Tensor[(3, 7, 4), float64] {
  @func_6528() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_13434(%var_13432: Tensor[(80), float32], %var_13433: Tensor[(2, 1144), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(2, 40), float32], Tensor[(80), float32], Tensor[(2, 1144), float32]) {
  @func_13430(%var_13432, %var_13433) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(2, 40), float32], Tensor[(80), float32], Tensor[(2, 1144), float32]) */
}

def @func_6139(%var_6138: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
  %754 = fn (%var_6133: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
    %749 = cast(%var_6133, dtype="float64") /* ty=Tensor[(168), float64] */;
    %750 = reshape(%749, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
    %751 = @func_4039(%750) /* ty=(Tensor[(3, 14, 4), float64],) */;
    %752 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
    %753 = %751.0;
    (%752, %753, %var_6133)
  };
  %754(%var_6138) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */
}

def @func_189(%var_186: Tensor[(10, 13, 2), float32]) -> (Tensor[(10, 13, 2), float32],) {
  %755 = cast(%var_186, dtype="float32") /* ty=Tensor[(10, 13, 2), float32] */;
  %756 = sinh(%755) /* ty=Tensor[(10, 13, 2), float32] */;
  (%756,)
}

def @func_16107() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %757 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %758 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %759 = %757.0;
  %760 = @func_10415() /* ty=Tensor[(3, 7, 4), float64] */;
  %761 = %758.0;
  (%759, %760, %761)
}

def @func_12990() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_12988() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_1130(%var_1128: Tensor[(14, 1, 5), float64], %var_1129: int16) -> (Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) {
  %778 = fn (%var_1096: Tensor[(14, 1, 5), float64], %var_1106: int16) -> (Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) {
    %762 = cast(%var_1096, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
    %763 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(14, 1, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %766 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 1, 5), float64] */, dtype="int32") /* ty=Tensor[(14, 1, 5), int32] */;
    %767 = shape_of(%var_1096, dtype="int32") /* ty=Tensor[(3), int32] */;
    %768 = cast(%var_1096, dtype="int32") /* ty=Tensor[(14, 1, 5), int32] */;
    %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %770 = cast(%var_1106, dtype="int16") /* ty=int16 */;
    %771 = cast(meta[relay.Constant][41] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
    %772 = reshape(%770, newshape=[]) /* ty=int16 */;
    %773 = reshape(%771, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
    %774 = @func_472(%772, %773) /* ty=(Tensor[(5, 1, 13), int16],) */;
    %775 = minimum(%764, %765) /* ty=Tensor[(14, ?, 5), float64] */;
    %776 = right_shift(%768, %769) /* ty=Tensor[(14, ?, 5), int32] */;
    %777 = %774.0;
    (%775, %776, %777, %var_1106, meta[relay.Constant][41] /* ty=Tensor[(65), int16] */)
  };
  %778(%var_1128, %var_1129) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */
}

def @func_13834(%var_13832: Tensor[(80), float32], %var_13833: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16, Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %798 = fn (%var_13793: Tensor[(80), float32], %var_13796: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16, Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %779 = @func_11761() /* ty=(Tensor[(3, 7, 4), bool],) */;
    %780 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %781 = @func_13391() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %782 = cast(%var_13793, dtype="float32") /* ty=Tensor[(80), float32] */;
    %783 = cast(meta[relay.Constant][42] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %784 = cast(meta[relay.Constant][43] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %785 = cast(%var_13796, dtype="float32") /* ty=Tensor[(260), float32] */;
    %786 = reshape(%782, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %787 = reshape(%783, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %788 = reshape(%784, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %789 = reshape(%785, newshape=[65, 4]) /* ty=Tensor[(65, 4), float32] */;
    %790 = @func_3951(%786, %787, %788, %789) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) */;
    %791 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %792 = %779.0;
    %793 = %780.0;
    %794 = %781.0;
    %795 = %790.8;
    %796 = %791.0;
    %797 = @func_9119() /* ty=Tensor[(3, 7, 4), float64] */;
    (%792, %793, %794, %795, %var_13793, meta[relay.Constant][42] /* ty=Tensor[(2288), float32] */, meta[relay.Constant][43] /* ty=Tensor[(315), float32] */, %var_13796, %796, %797)
  };
  %798(%var_13832, %var_13833) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16, Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_10947() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %799 = @func_9209() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %800 = @func_6013() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %801 = %799.1;
  %802 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %803 = %800.0;
  (%801, %802, %803)
}

def @func_16428() -> Tensor[(3, 7, 4), float64] {
  @func_16426() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_6644() -> (Tensor[(3, 7, 4), float64],) {
  %806 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %804 = @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */;
    %805 = %804.1;
    (%805,)
  };
  %806() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_11719() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_11717() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_11257() -> (Tensor[(10, 5, 11), int16], Tensor[(3, 7, 4), float64]) {
  @func_11255() /* ty=(Tensor[(10, 5, 11), int16], Tensor[(3, 7, 4), float64]) */
}

def @func_7451() -> Tensor[(3, 7, 4), float64] {
  @func_7449() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7864(%var_7862: Tensor[(168), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
  @func_7861(%var_7862) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_5891() -> (Tensor[(3, 7, 4), float64],) {
  %807 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
  (%807,)
}

def @func_4696() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %810 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
    %808 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
    %809 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
    (%808, %809)
  };
  %810() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_8896() -> (int16,) {
  %811 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
  %812 = %811.5;
  (%812,)
}

def @func_13045() -> (Tensor[(3, 7, 4), float64],) {
  %815 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %813 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %814 = %813.0;
    (%814,)
  };
  %815() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_15095() -> Tensor[(3, 7, 4), float64] {
  %816 = fn () -> Tensor[(3, 7, 4), float64] {
    @func_5119() /* ty=Tensor[(3, 7, 4), float64] */
  };
  %816() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_7972() -> (Tensor[(3, 7, 4), float64],) {
  %818 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %817 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
    (%817,)
  };
  %818() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_5082() -> (Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) {
  %844 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) {
    %819 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %820 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
    %821 = cast(%820, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %822 = cast(meta[relay.Constant][44] /* ty=Tensor[(130, 2), float32] */, dtype="float32") /* ty=Tensor[(130, 2), float32] */;
    %823 = reshape(%821, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %824 = reshape(%822, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %825 = @func_4319(%823, %824) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %826 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 7, 4), float64] */, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
    %827 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
    %828 = cast(%820, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
    %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %830 = floor_divide(%828, %829) /* ty=Tensor[(3, 7, 4), float32] */;
    %831 = cast(%830, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
    %832 = sinh(%831) /* ty=Tensor[(3, 7, 4), float32] */;
    %833 = cast(%832, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %834 = cast(meta[relay.Constant][46] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %835 = cast(meta[relay.Constant][47] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
    %836 = reshape(%834, newshape=[]) /* ty=int16 */;
    %837 = reshape(%835, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), int16] */;
    %838 = @func_472(%836, %837) /* ty=(Tensor[(5, 1, 13), int16],) */;
    %839 = %819.0;
    %840 = %825.3;
    %841 = atanh(%833) /* ty=Tensor[(3, 7, 4), float64] */;
    %842 = %838.0;
    %843 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
    (%839, %840, meta[relay.Constant][44] /* ty=Tensor[(130, 2), float32] */, %841, %842, meta[relay.Constant][46] /* ty=int16 */, meta[relay.Constant][47] /* ty=Tensor[(65), int16] */, %843)
  };
  %844() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */
}

def @func_7094(%var_7093: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) {
  %854 = fn (%var_7078: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) {
    %845 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %846 = %845.0;
    %847 = cast(%var_7078, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
    %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(3), int32] */;
    %849 = cast(%846, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
    %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %851 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %852 = logical_or(%849, %850) /* ty=Tensor[(3, 7, 4), bool] */;
    %853 = %851.0;
    (%852, %853)
  };
  %854(%var_7093) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */
}

def @func_10364() -> (Tensor[(3, 7, 4), float64], Tensor[(1, 13, 13), float32], Tensor[(169), float32], Tensor[(3, 7, 4), float64]) {
  %855 = @func_9402() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(7, 12, 15), float64]) */;
  %856 = cast(meta[relay.Constant][48] /* ty=Tensor[(169), float32] */, dtype="float32") /* ty=Tensor[(169), float32] */;
  %857 = reshape(%856, newshape=[1, 13, 13]) /* ty=Tensor[(1, 13, 13), float32] */;
  %858 = @func_4728(%857) /* ty=(Tensor[(1, 13, 13), float32], Tensor[(3, 14, 4), float64], Tensor[(84), float64], Tensor[(1, 13, 13), float64]) */;
  %859 = @func_4695() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %860 = %855.0;
  %861 = %858.0;
  %862 = %859.0;
  (%860, %861, meta[relay.Constant][48] /* ty=Tensor[(169), float32] */, %862)
}

def @func_13467() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) {
  @func_13465() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) */
}

def @func_7931(%var_7929: uint32, %var_7930: Tensor[(10, 10, 9), uint32]) -> (Tensor[(10, 10, 9), bool], Tensor[(3, 7, 4), float64]) {
  @func_7927(%var_7929, %var_7930) /* ty=(Tensor[(10, 10, 9), bool], Tensor[(3, 7, 4), float64]) */
}

def @func_15514() -> Tensor[(3, 7, 4), float64] {
  @func_7111() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_13713() -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) {
  %866 = fn () -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) {
    %863 = @func_11761() /* ty=(Tensor[(3, 7, 4), bool],) */;
    %864 = %863.0;
    %865 = @func_12357() /* ty=Tensor[(3, 7, 4), float64] */;
    (%864, %865)
  };
  %866() /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */
}

def @func_9758() -> Tensor[(3, 7, 4), float64] {
  %868 = fn () -> Tensor[(3, 7, 4), float64] {
    %867 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %867.0
  };
  %868() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_10417() -> Tensor[(3, 7, 4), float64] {
  @func_10415() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_1333(%var_1332: Tensor[(16, 13, 11), float32]) -> (Tensor[(16, 13, 11), float32],) {
  %871 = fn (%var_1328: Tensor[(16, 13, 11), float32]) -> (Tensor[(16, 13, 11), float32],) {
    %869 = cast(%var_1328, dtype="float32") /* ty=Tensor[(16, 13, 11), float32] */;
    %870 = tan(%869) /* ty=Tensor[(16, 13, 11), float32] */;
    (%870,)
  };
  %871(%var_1332) /* ty=(Tensor[(16, 13, 11), float32],) */
}

def @func_4612(%var_4610: Tensor[(3, 7, 4), float64]) -> (Tensor[(7, 12, 15), float64], Tensor[(3, 7, 4), int64], Tensor[(3, 14, 4), float64], Tensor[(42, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_4609(%var_4610) /* ty=(Tensor[(7, 12, 15), float64], Tensor[(3, 7, 4), int64], Tensor[(3, 14, 4), float64], Tensor[(42, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_12136(%var_12127: Tensor[(3, 4, 14), uint16], %var_12128: Tensor[(3, 4, 14), uint16]) -> (Tensor[(3, 4, 14), uint16],) {
  %872 = cast(%var_12128, dtype="uint16") /* ty=Tensor[(3, 4, 14), uint16] */;
  %873 = shape_of(%var_12127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%var_12127, dtype="uint16") /* ty=Tensor[(3, 4, 14), uint16] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %876 = left_shift(%874, %875) /* ty=Tensor[(3, 4, 14), uint16] */;
  (%876,)
}

def @func_472(%var_466: int16, %var_467: Tensor[(5, 1, 13), int16]) -> (Tensor[(5, 1, 13), int16],) {
  %877 = cast(%var_466, dtype="int16") /* ty=int16 */;
  %878 = cast(%var_467, dtype="int16") /* ty=Tensor[(5, 1, 13), int16] */;
  %879 = logical_xor(%877, %878) /* ty=Tensor[(5, 1, 13), int16] */;
  (%879,)
}

def @func_7586() -> (Tensor[(3, 7, 4), float64],) {
  @func_7584() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_4892() -> (Tensor[(3, 7, 4), float64],) {
  %880 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %881 = %880.0;
  (%881,)
}

def @func_7111() -> Tensor[(3, 7, 4), float64] {
  %882 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %882.0
}

def @func_15481() -> (Tensor[(3, 7, 4), float64],) {
  %883 = @func_10863() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %884 = %883.1;
  (%884,)
}

def @func_7408() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_7406() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_6344() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_13149(%var_13146: Tensor[(729), float64], %var_13147: int16, %var_13148: Tensor[(65), int16]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(65), uint16]) {
  @func_13144(%var_13146, %var_13147, %var_13148) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(65), uint16]) */
}

def @func_12898() -> (Tensor[(3, 7, 4), float64],) {
  %886 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %885 = @func_9583() /* ty=Tensor[(3, 7, 4), float64] */;
    (%885,)
  };
  %886() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_14744() -> (Tensor[(3, 7, 4), float64],) {
  %887 = @func_13391() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %888 = %887.0;
  (%888,)
}

def @func_7011() -> Tensor[(3, 7, 4), float64] {
  %890 = fn () -> Tensor[(3, 7, 4), float64] {
    %889 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %889.0
  };
  %890() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_4403() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %891 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %892 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %893 = %891.0;
  (%892, %893)
}

def @func_7637() -> (Tensor[(3, 7, 4), float64],) {
  %895 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %894 = @func_7359() /* ty=Tensor[(3, 7, 4), float64] */;
    (%894,)
  };
  %895() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_10008() -> int16 {
  %897 = fn () -> int16 {
    %896 = @func_8896() /* ty=(int16,) */;
    %896.0
  };
  %897() /* ty=int16 */
}

def @func_10071() -> (int16,) {
  %898 = @func_10007() /* ty=int16 */;
  (%898,)
}

def @func_4042(%var_4040: Tensor[(3, 14, 4), float64]) -> (Tensor[(3, 14, 4), float64],) {
  @func_4039(%var_4040) /* ty=(Tensor[(3, 14, 4), float64],) */
}

def @func_13682() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_13680() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_3957(%var_3953: Tensor[(80), float32], %var_3954: Tensor[(2288), float32], %var_3955: Tensor[(315), float32], %var_3956: Tensor[(65, 4), float32]) -> (Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) {
  @func_3951(%var_3953, %var_3954, %var_3955, %var_3956) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) */
}

def @func_9584() -> Tensor[(3, 7, 4), float64] {
  %900 = fn () -> Tensor[(3, 7, 4), float64] {
    %899 = @func_6013() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %899.1
  };
  %900() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_15761() -> (Tensor[(3, 7, 4), float64], int16) {
  @func_15759() /* ty=(Tensor[(3, 7, 4), float64], int16) */
}

def @func_13225() -> Tensor[(3, 7, 4), float64] {
  @func_4430() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_4027(%var_4025: Tensor[(9), float64], %var_4026: Tensor[(729), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) {
  @func_4023(%var_4025, %var_4026) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) */
}

def @func_4632() -> Tensor[(3, 7, 4), float64] {
  %901 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %901.0
}

def @func_14075() -> (Tensor[(3, 7, 4), float64],) {
  @func_14073() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_5600(%var_5598: int16, %var_5599: Tensor[(315, 1), float32]) -> (Tensor[(14, ?, 5), int32], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(260, 1), float32], Tensor[(260), float32], Tensor[(315, 1), float32]) {
  %927 = fn (%var_5565: int16, %var_5594: Tensor[(315, 1), float32]) -> (Tensor[(14, ?, 5), int32], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(260, 1), float32], Tensor[(260), float32], Tensor[(315, 1), float32]) {
    %902 = cast(meta[relay.Constant][49] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
    %903 = cast(%var_5565, dtype="int16") /* ty=int16 */;
    %904 = reshape(%902, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
    %905 = reshape(%903, newshape=[]) /* ty=int16 */;
    %906 = @func_1127(%904, %905) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
    %907 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
    %908 = cast(%907, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %909 = sqrt(%908) /* ty=Tensor[(3, 7, 4), float64] */;
    %910 = cast(%909, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %911 = @func_5394() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %912 = @func_3896() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %913 = cast(meta[relay.Constant][50] /* ty=Tensor[(260, 1), float32] */, dtype="float32") /* ty=Tensor[(260, 1), float32] */;
    %914 = reshape(%913, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %915 = @func_4786(%914) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(14, ?, 5), float64], Tensor[(70), float64], int16, Tensor[(260), float32], Tensor[(315), float32], Tensor[(260), float32]) */;
    %916 = cast(%var_5594, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
    %917 = %915.4;
    %918 = cast(%917, dtype="float32") /* ty=Tensor[(260), float32] */;
    %919 = reshape(%916, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
    %920 = reshape(%918, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %921 = @func_345(%919, %920) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %922 = %906.1;
    %923 = log10(%910) /* ty=Tensor[(3, 7, 4), float64] */;
    %924 = %911.0;
    %925 = %912.0;
    %926 = %921.3;
    (%922, meta[relay.Constant][49] /* ty=Tensor[(70), float64] */, %var_5565, %923, %924, %925, %917, meta[relay.Constant][50] /* ty=Tensor[(260, 1), float32] */, %926, %var_5594)
  };
  %927(%var_5598, %var_5599) /* ty=(Tensor[(14, ?, 5), int32], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(260, 1), float32], Tensor[(260), float32], Tensor[(315, 1), float32]) */
}

def @func_8883() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), uint8], Tensor[(3, 7, 4), float64]) {
  %928 = @func_5355() /* ty=Tensor[(3, 7, 4), float64] */;
  %929 = cast(%928, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %930 = reshape(%929, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %931 = @func_4171(%930) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
  %932 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %933 = %931.2;
  %934 = %932.0;
  (%928, %933, %934)
}

def @func_4322(%var_4320: Tensor[(3, 7, 4), float64], %var_4321: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %946 = fn (%var_4302: Tensor[(3, 7, 4), float64], %var_4317: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
    %935 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
    %936 = cast(%var_4302, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
    %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
    %938 = cast(%935, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
    %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %940 = cast(%var_4317, dtype="float32") /* ty=Tensor[(260), float32] */;
    %941 = reshape(%940, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
    %942 = @func_189(%941) /* ty=(Tensor[(10, 13, 2), float32],) */;
    %943 = equal(%938, %939) /* ty=Tensor[(3, 7, 4), bool] */;
    %944 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
    %945 = %942.0;
    (%943, %944, %945, %var_4317)
  };
  %946(%var_4320, %var_4321) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */
}

def @func_3725(%var_3639: Tensor[(9), float64], %var_3640: Tensor[(9, 81), float64], %var_3711: int16) -> (Tensor[(9), float64], Tensor[(9, 81), float64], Tensor[(5, 1, 13), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float32]) {
  %947 = cast(%var_3640, dtype="float32") /* ty=Tensor[(9, 81), float32] */;
  %948 = cosh(%947) /* ty=Tensor[(9, 81), float32] */;
  %949 = cast(%var_3639, dtype="float64") /* ty=Tensor[(9), float64] */;
  %950 = cast(%var_3640, dtype="float64") /* ty=Tensor[(9, 81), float64] */;
  %951 = reshape(%949, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %952 = reshape(%950, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %953 = @func_1391(%951, %952) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %954 = %953.0;
  %955 = cast(%954, dtype="float64") /* ty=Tensor[(9, 9, 9), float64] */;
  %956 = shape_of(%948, dtype="int32") /* ty=Tensor[(2), int32] */;
  %957 = cast(%948, dtype="float64") /* ty=Tensor[(9, 81), float64] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %959 = cast(meta[relay.Constant][51] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %960 = cast(%var_3711, dtype="int16") /* ty=int16 */;
  %961 = reshape(%959, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %962 = reshape(%960, newshape=[]) /* ty=int16 */;
  %963 = @func_1127(%961, %962) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
  %964 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %965 = cast(%964, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %966 = atan(%965) /* ty=Tensor[(3, 7, 4), float64] */;
  %967 = cast(%966, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %968 = tan(%967) /* ty=Tensor[(3, 7, 4), float64] */;
  %969 = cast(%966, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %970 = shape_of(%968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%968, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %973 = power(%971, %972) /* ty=Tensor[(3, 7, 4), float32] */;
  %974 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %975 = cast(%974, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %976 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%973, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %979 = minimum(%957, %958) /* ty=Tensor[(9, 81), float64] */;
  %980 = %963.2;
  %981 = floor_mod(%977, %978) /* ty=Tensor[(3, 7, 4), float32] */;
  (%var_3639, %979, %980, meta[relay.Constant][51] /* ty=Tensor[(70), float64] */, %var_3711, %981)
}

def @func_10863() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %982 = @func_7311() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %983 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
  %984 = %982.0;
  (%983, %984)
}

def @func_12080(%var_12054: int16, %var_12055: Tensor[(13, 15, 2), int16], %var_12061: Tensor[(1, 80), float32], %var_12062: Tensor[(9), float64]) -> (Tensor[(13, 15, 2), int16], Tensor[(1, 80), float32], Tensor[(315, 9), int32]) {
  %985 = cast(%var_12054, dtype="int16") /* ty=int16 */;
  %986 = cast(%var_12055, dtype="int16") /* ty=Tensor[(13, 15, 2), int16] */;
  %987 = cast(%var_12061, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %988 = cast(%var_12062, dtype="float64") /* ty=Tensor[(9), float64] */;
  %989 = reshape(%987, newshape=[40, 2]) /* ty=Tensor[(40, 2), float32] */;
  %990 = reshape(%988, newshape=[3, 3]) /* ty=Tensor[(3, 3), float64] */;
  %991 = @func_9709(%989, %990) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), float32], Tensor[(40, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 3), float64], Tensor[(729), float64], Tensor[(10, 13, 2), float32], Tensor[(315, 1), float32], Tensor[(5, 52), float32]) */;
  %992 = %991.12;
  %993 = cast(%992, dtype="int32") /* ty=Tensor[(315, 1), int32] */;
  %994 = cast(%var_12062, dtype="int32") /* ty=Tensor[(9), int32] */;
  %995 = multiply(%985, %986) /* ty=Tensor[(13, 15, 2), int16] */;
  %996 = bitwise_or(%993, %994) /* ty=Tensor[(315, 9), int32] */;
  (%995, %var_12061, %996)
}

def @func_10949() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_10947() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_13271() -> (Tensor[(3, 7, 4), float64],) {
  %998 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %997 = @func_5119() /* ty=Tensor[(3, 7, 4), float64] */;
    (%997,)
  };
  %998() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_15896(%var_15895: Tensor[(1, 260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(84), float64], Tensor[(169), float32], Tensor[(3, 7, 4), float64], Tensor[(260), int16], Tensor[(1, 260), float32]) {
  %1011 = fn (%var_15892: Tensor[(1, 260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(84), float64], Tensor[(169), float32], Tensor[(3, 7, 4), float64], Tensor[(260), int16], Tensor[(1, 260), float32]) {
    %999 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1000 = cast(meta[relay.Constant][52] /* ty=Tensor[(169), float32] */, dtype="float32") /* ty=Tensor[(169), float32] */;
    %1001 = reshape(%1000, newshape=[1, 13, 13]) /* ty=Tensor[(1, 13, 13), float32] */;
    %1002 = @func_4728(%1001) /* ty=(Tensor[(1, 13, 13), float32], Tensor[(3, 14, 4), float64], Tensor[(84), float64], Tensor[(1, 13, 13), float64]) */;
    %1003 = cast(%var_15892, dtype="float32") /* ty=Tensor[(1, 260), float32] */;
    %1004 = reshape(%1003, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %1005 = @func_9561(%1004) /* ty=(Tensor[(260), int16],) */;
    %1006 = @func_9583() /* ty=Tensor[(3, 7, 4), float64] */;
    %1007 = %999.0;
    %1008 = %1002.2;
    %1009 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
    %1010 = %1005.0;
    (%1006, %1007, %1008, meta[relay.Constant][52] /* ty=Tensor[(169), float32] */, %1009, %1010, %var_15892)
  };
  %1011(%var_15895) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(84), float64], Tensor[(169), float32], Tensor[(3, 7, 4), float64], Tensor[(260), int16], Tensor[(1, 260), float32]) */
}

def @func_4634() -> Tensor[(3, 7, 4), float64] {
  @func_4632() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_345(%var_304: Tensor[(5, 9, 7), float32], %var_340: Tensor[(260), float32]) -> (Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %1012 = cast(%var_304, dtype="float32") /* ty=Tensor[(5, 9, 7), float32] */;
  %1013 = cast(%var_304, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
  %1014 = cast(%var_340, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1015 = reshape(%1014, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
  %1016 = @func_189(%1015) /* ty=(Tensor[(10, 13, 2), float32],) */;
  %1017 = cosh(%1012) /* ty=Tensor[(5, 9, 7), float32] */;
  %1018 = acos(%1013) /* ty=Tensor[(5, 9, 7), float64] */;
  %1019 = %1016.0;
  (%1017, %1018, %1019, %var_340)
}

def @func_5795() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) {
  @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */
}

def @func_10452(%var_10447: Tensor[(720), float32], %var_10448: Tensor[(80), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32]) {
  %1020 = cast(%var_10447, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1021 = cast(%var_10447, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1022 = cast(%var_10448, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1023 = reshape(%1020, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
  %1024 = reshape(%1021, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
  %1025 = reshape(%1022, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %1026 = @func_3443(%1023, %1024, %1025) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) */;
  %1027 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
  %1028 = %1026.0;
  (%1027, %1028, %var_10447, %var_10448)
}

def @func_15759() -> (Tensor[(3, 7, 4), float64], int16) {
  %1029 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1030 = @func_10071() /* ty=(int16,) */;
  %1031 = %1029.0;
  %1032 = %1030.0;
  (%1031, %1032)
}

def @func_14590(%var_14579: Tensor[(2, 4, 10), float64], %var_14580: Tensor[(2, 4, 10), float64], %var_14584: Tensor[(2, 4, 10), float64]) -> (Tensor[(2, 4, 10), float64], Tensor[(2, 4, 10), uint8]) {
  %1033 = cast(%var_14580, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  %1034 = shape_of(%var_14579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%var_14579, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1037 = cast(%var_14584, dtype="uint8") /* ty=Tensor[(2, 4, 10), uint8] */;
  %1038 = shape_of(%var_14580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1039 = cast(%var_14580, dtype="uint8") /* ty=Tensor[(2, 4, 10), uint8] */;
  %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1041 = power(%1035, %1036) /* ty=Tensor[(2, 4, 10), float64] */;
  %1042 = left_shift(%1039, %1040) /* ty=Tensor[(2, 4, 10), uint8] */;
  (%1041, %1042)
}

def @func_12692() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(14, 6, 9), float64], Tensor[(756), float32], Tensor[(3, 7, 4), float64]) {
  @func_12690() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(14, 6, 9), float64], Tensor[(756), float32], Tensor[(3, 7, 4), float64]) */
}

def @func_7258(%var_7255: Tensor[(80), float32], %var_7256: Tensor[(2288), float32], %var_7257: Tensor[(315), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32]) {
  %1059 = fn (%var_7247: Tensor[(80), float32], %var_7248: Tensor[(2288), float32], %var_7249: Tensor[(315), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32]) {
    %1043 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1044 = %1043.0;
    %1045 = cast(%1044, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %1046 = reshape(%1045, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1047 = @func_7092(%1046) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64]) */;
    %1048 = cast(%var_7247, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1049 = cast(%var_7248, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %1050 = cast(%var_7249, dtype="float32") /* ty=Tensor[(315), float32] */;
    %1051 = cast(meta[relay.Constant][53] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %1052 = reshape(%1048, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %1053 = reshape(%1049, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %1054 = reshape(%1050, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %1055 = reshape(%1051, newshape=[65, 4]) /* ty=Tensor[(65, 4), float32] */;
    %1056 = @func_3951(%1052, %1053, %1054, %1055) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(5, 9, 7), float64], Tensor[(315), float32], Tensor[(65, 4), float32], Tensor[(65), int16], Tensor[(70), float64], int16, Tensor[(3, 7, 4), float64]) */;
    %1057 = %1047.0;
    %1058 = %1056.2;
    (%1044, %1057, %1058, %var_7247, %var_7248, %var_7249, meta[relay.Constant][53] /* ty=Tensor[(260), float32] */)
  };
  %1059(%var_7255, %var_7256, %var_7257) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(315), float32], Tensor[(260), float32]) */
}

def @func_5334(%var_5333: Tensor[(2288), float32]) -> (int16, Tensor[(42, 2), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(168), float64], Tensor[(8, 5, 2), bool], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(3, 14, 4), float32]) {
  %1088 = fn (%var_5320: Tensor[(2288), float32]) -> (int16, Tensor[(42, 2), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(168), float64], Tensor[(8, 5, 2), bool], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(3, 14, 4), float32]) {
    %1060 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
    %1061 = cast(meta[relay.Constant][54] /* ty=Tensor[(42, 2), float64] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
    %1062 = cast(meta[relay.Constant][55] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %1063 = reshape(%1061, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1064 = reshape(%1062, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %1065 = @func_4319(%1063, %1064) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %1066 = cast(meta[relay.Constant][54] /* ty=Tensor[(42, 2), float64] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
    %1067 = reshape(%1066, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1068 = @func_4171(%1067) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
    %1069 = cast(meta[relay.Constant][56] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1070 = cast(meta[relay.Constant][56] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1071 = cast(%var_5320, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %1072 = reshape(%1069, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
    %1073 = reshape(%1070, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
    %1074 = reshape(%1071, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %1075 = @func_1543(%1072, %1073, %1074) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */;
    %1076 = cast(meta[relay.Constant][54] /* ty=Tensor[(42, 2), float64] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
    %1077 = reshape(%1076, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1078 = @func_4609(%1077) /* ty=(Tensor[(7, 12, 15), float64], Tensor[(3, 7, 4), int64], Tensor[(3, 14, 4), float64], Tensor[(42, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %1079 = %1078.2;
    %1080 = cast(%1079, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
    %1081 = log10(%1080) /* ty=Tensor[(3, 14, 4), float32] */;
    %1082 = cast(%1081, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
    %1083 = %1060.5;
    %1084 = %1065.2;
    %1085 = %1068.1;
    %1086 = %1075.2;
    %1087 = cos(%1082) /* ty=Tensor[(3, 14, 4), float32] */;
    (%1083, meta[relay.Constant][54] /* ty=Tensor[(42, 2), float64] */, %1084, meta[relay.Constant][55] /* ty=Tensor[(260), float32] */, %1085, %1086, meta[relay.Constant][56] /* ty=Tensor[(80), float32] */, %var_5320, %1087)
  };
  %1088(%var_5333) /* ty=(int16, Tensor[(42, 2), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(168), float64], Tensor[(8, 5, 2), bool], Tensor[(80), float32], Tensor[(2288), float32], Tensor[(3, 14, 4), float32]) */
}

def @func_14524() -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  %1089 = @func_8214() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
  %1090 = %1089.1;
  %1091 = cast(%1090, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %1092 = cast(meta[relay.Constant][57] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1093 = reshape(%1091, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
  %1094 = reshape(%1092, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %1095 = @func_4319(%1093, %1094) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
  %1096 = %1095.2;
  (%1090, %1096, meta[relay.Constant][57] /* ty=Tensor[(260), float32] */)
}

def @func_16442() -> (Tensor[(3, 7, 4), float64],) {
  %1097 = @func_11209() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1098 = %1097.0;
  (%1098,)
}

def @func_4173(%var_4172: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) {
  %1114 = fn (%var_4147: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) {
    %1099 = cast(meta[relay.Constant][58] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %1100 = reshape(%1099, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
    %1101 = @func_4039(%1100) /* ty=(Tensor[(3, 14, 4), float64],) */;
    %1102 = @func_3905() /* ty=Tensor[(3, 7, 4), float64] */;
    %1103 = cast(%var_4147, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
    %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1105 = cast(%1102, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
    %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1107 = less_equal(%1105, %1106) /* ty=Tensor[(3, 7, 4), bool] */;
    %1108 = cast(%1102, dtype="uint8") /* ty=Tensor[(3, 7, 4), uint8] */;
    %1109 = shape_of(%1107, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1110 = cast(%1107, dtype="uint8") /* ty=Tensor[(3, 7, 4), uint8] */;
    %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1112 = %1101.0;
    %1113 = logical_xor(%1110, %1111) /* ty=Tensor[(3, 7, 4), uint8] */;
    (%1112, meta[relay.Constant][58] /* ty=Tensor[(168), float64] */, %1113)
  };
  %1114(%var_4172) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */
}

def @func_4528() -> (Tensor[(3, 7, 4), float64],) {
  %1117 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %1115 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %1116 = %1115.1;
    (%1116,)
  };
  %1117() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_8612() -> (Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(168), float64]) {
  @func_8610() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(168), float64]) */
}

def @func_16372(%var_16370: Tensor[(7), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(900), uint32], Tensor[(168), float64]) {
  @func_16369(%var_16370) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(900), uint32], Tensor[(168), float64]) */
}

def @func_12869() -> (Tensor[(3, 7, 4), float64],) {
  @func_12867() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_11717() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1118 = @func_10721() /* ty=Tensor[(3, 7, 4), float64] */;
  %1119 = @func_6575() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1118, %1119)
}

def @func_8215() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) {
  %1130 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) {
    %1120 = @func_5394() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1121 = @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1122 = cast(meta[relay.Constant][59] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %1123 = reshape(%1122, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
    %1124 = @func_189(%1123) /* ty=(Tensor[(10, 13, 2), float32],) */;
    %1125 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %1126 = %1120.0;
    %1127 = %1121.0;
    %1128 = %1124.0;
    %1129 = %1125.0;
    (%1126, %1127, %1128, meta[relay.Constant][59] /* ty=Tensor[(260), float32] */, %1129)
  };
  %1130() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */
}

def @func_8093(%var_8091: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), bool], Tensor[(9, 81), float64], Tensor[(9), float64], Tensor[(9, 81), float64], int16, Tensor[(3, 7, 4), float64]) {
  @func_8090(%var_8091) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(9, 81), float64], Tensor[(9), float64], Tensor[(9, 81), float64], int16, Tensor[(3, 7, 4), float64]) */
}

def @func_7584() -> (Tensor[(3, 7, 4), float64],) {
  %1131 = @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1132 = %1131.0;
  (%1132,)
}

def @func_13214() -> (Tensor[(12, 4, 9), float64],) {
  @func_13212() /* ty=(Tensor[(12, 4, 9), float64],) */
}

def @func_9340() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) {
  %1138 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) {
    %1133 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %1134 = %1133.1;
    %1135 = cast(%1134, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %1136 = reshape(%1135, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1137 = @func_4867(%1136) /* ty=Tensor[(3, 7, 4), bool] */;
    (%1134, %1137)
  };
  %1138() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool]) */
}

def @func_14474() -> Tensor[(3, 7, 4), float64] {
  @func_12491() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_6462() -> Tensor[(3, 7, 4), float64] {
  @func_6460() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_6200() -> Tensor[(3, 7, 4), float64] {
  @func_6198() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_5717() -> (Tensor[(3, 7, 4), float64],) {
  @func_5715() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_4281(%var_4278: Tensor[(2, 360), float32], %var_4279: Tensor[(168), float64], %var_4280: Tensor[(16, 13, 11), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2, 360), float32], Tensor[(80), float32], Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), int32]) {
  %1162 = fn (%var_4256: Tensor[(2, 360), float32], %var_4260: Tensor[(168), float64], %var_4266: Tensor[(16, 13, 11), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2, 360), float32], Tensor[(80), float32], Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), int32]) {
    %1139 = cast(%var_4256, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
    %1140 = cast(%var_4256, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
    %1141 = cast(meta[relay.Constant][61] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1142 = reshape(%1139, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
    %1143 = reshape(%1140, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float32] */;
    %1144 = reshape(%1141, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %1145 = @func_3443(%1142, %1143, %1144) /* ty=(Tensor[(15, 3, 16), float32], Tensor[(16, 13, 11), float32], Tensor[(80), float32], Tensor[(88, 26), float32]) */;
    %1146 = cast(%var_4260, dtype="float64") /* ty=Tensor[(168), float64] */;
    %1147 = reshape(%1146, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
    %1148 = @func_4039(%1147) /* ty=(Tensor[(3, 14, 4), float64],) */;
    %1149 = cast(meta[relay.Constant][60] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %1150 = reshape(%1149, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
    %1151 = @func_1331(%1150) /* ty=(Tensor[(16, 13, 11), float32],) */;
    %1152 = %1151.0;
    %1153 = cast(%var_4266, dtype="int32") /* ty=Tensor[(16, 13, 11), int32] */;
    %1154 = shape_of(%1152, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1155 = cast(%1152, dtype="int32") /* ty=Tensor[(16, 13, 11), int32] */;
    %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1157 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
    %1158 = @func_3748() /* ty=Tensor[(3, 7, 4), float64] */;
    %1159 = %1145.2;
    %1160 = %1148.0;
    %1161 = right_shift(%1155, %1156) /* ty=Tensor[(16, 13, 11), int32] */;
    (%1157, %1158, meta[relay.Constant][60] /* ty=Tensor[(2288), float32] */, %1159, %var_4256, meta[relay.Constant][61] /* ty=Tensor[(80), float32] */, %1160, %var_4260, %1161)
  };
  %1162(%var_4278, %var_4279, %var_4280) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(2288), float32], Tensor[(80), float32], Tensor[(2, 360), float32], Tensor[(80), float32], Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), int32]) */
}

def @func_4788(%var_4787: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(14, ?, 5), float64], Tensor[(70), float64], int16, Tensor[(260), float32], Tensor[(315), float32], Tensor[(260), float32]) {
  %1177 = fn (%var_4784: Tensor[(260), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(14, ?, 5), float64], Tensor[(70), float64], int16, Tensor[(260), float32], Tensor[(315), float32], Tensor[(260), float32]) {
    %1163 = @func_4527() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1164 = cast(meta[relay.Constant][62] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
    %1165 = cast(meta[relay.Constant][63] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1166 = reshape(%1164, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
    %1167 = reshape(%1165, newshape=[]) /* ty=int16 */;
    %1168 = @func_1127(%1166, %1167) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
    %1169 = cast(meta[relay.Constant][64] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %1170 = cast(%var_4784, dtype="float32") /* ty=Tensor[(260), float32] */;
    %1171 = reshape(%1169, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
    %1172 = reshape(%1170, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %1173 = @func_345(%1171, %1172) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %1174 = %1163.0;
    %1175 = %1168.0;
    %1176 = %1173.3;
    (%1174, %1175, meta[relay.Constant][62] /* ty=Tensor[(70), float64] */, meta[relay.Constant][63] /* ty=int16 */, %1176, meta[relay.Constant][64] /* ty=Tensor[(315), float32] */, %var_4784)
  };
  %1177(%var_4787) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(14, ?, 5), float64], Tensor[(70), float64], int16, Tensor[(260), float32], Tensor[(315), float32], Tensor[(260), float32]) */
}

def @func_4730(%var_4729: Tensor[(1, 13, 13), float32]) -> (Tensor[(1, 13, 13), float32], Tensor[(3, 14, 4), float64], Tensor[(84), float64], Tensor[(1, 13, 13), float64]) {
  %1186 = fn (%var_4713: Tensor[(1, 13, 13), float32]) -> (Tensor[(1, 13, 13), float32], Tensor[(3, 14, 4), float64], Tensor[(84), float64], Tensor[(1, 13, 13), float64]) {
    %1178 = cast(%var_4713, dtype="float32") /* ty=Tensor[(1, 13, 13), float32] */;
    %1179 = cast(meta[relay.Constant][65] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %1180 = reshape(%1179, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1181 = @func_4171(%1180) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
    %1182 = cast(%var_4713, dtype="float64") /* ty=Tensor[(1, 13, 13), float64] */;
    %1183 = sinh(%1178) /* ty=Tensor[(1, 13, 13), float32] */;
    %1184 = %1181.0;
    %1185 = exp(%1182) /* ty=Tensor[(1, 13, 13), float64] */;
    (%1183, %1184, meta[relay.Constant][65] /* ty=Tensor[(84), float64] */, %1185)
  };
  %1186(%var_4729) /* ty=(Tensor[(1, 13, 13), float32], Tensor[(3, 14, 4), float64], Tensor[(84), float64], Tensor[(1, 13, 13), float64]) */
}

def @func_16369(%var_16341: Tensor[(7), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(900), uint32], Tensor[(168), float64]) {
  %1187 = cast(%var_16341, dtype="float64") /* ty=Tensor[(7), float64] */;
  %1188 = cast(meta[relay.Constant][66] /* ty=Tensor[(900), uint32] */, dtype="uint32") /* ty=Tensor[(900), uint32] */;
  %1189 = reshape(%1187, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %1190 = reshape(%1188, newshape=[900]) /* ty=Tensor[(900), uint32] */;
  %1191 = @func_15041(%1189, %1190) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(105), float64], uint32, Tensor[(900), uint32], int16) */;
  %1192 = @func_8610() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(168), float64]) */;
  %1193 = @func_16045() /* ty=Tensor[(3, 7, 4), float64] */;
  %1194 = %1191.2;
  %1195 = %1192.1;
  (%1193, %1194, %var_16341, meta[relay.Constant][66] /* ty=Tensor[(900), uint32] */, %1195)
}

def @func_12818(%var_12816: Tensor[(720), float32], %var_12817: Tensor[(80), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32], Tensor[(3, 7, 4), float64]) {
  %1205 = fn (%var_12797: Tensor[(720), float32], %var_12798: Tensor[(80), float32]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32], Tensor[(3, 7, 4), float64]) {
    %1196 = cast(%var_12797, dtype="float32") /* ty=Tensor[(720), float32] */;
    %1197 = cast(%var_12798, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1198 = reshape(%1196, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %1199 = reshape(%1197, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %1200 = @func_10452(%1198, %1199) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32]) */;
    %1201 = @func_5394() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1202 = @func_6198() /* ty=Tensor[(3, 7, 4), float64] */;
    %1203 = %1200.1;
    %1204 = %1201.0;
    (%1202, %1203, %var_12797, %var_12798, %1204)
  };
  %1205(%var_12816, %var_12817) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(15, 3, 16), float32], Tensor[(720), float32], Tensor[(80), float32], Tensor[(3, 7, 4), float64]) */
}

def @func_13542(%var_13541: Tensor[(1, 4, 16), float32]) -> (Tensor[(1, 4, 16), float32], Tensor[(6, 12, 6), uint16], Tensor[(2, 216), uint16], Tensor[(168), float64], Tensor[(3, 14, 4), float64], Tensor[(84, 1), float64]) {
  %1220 = fn (%var_13504: Tensor[(1, 4, 16), float32]) -> (Tensor[(1, 4, 16), float32], Tensor[(6, 12, 6), uint16], Tensor[(2, 216), uint16], Tensor[(168), float64], Tensor[(3, 14, 4), float64], Tensor[(84, 1), float64]) {
    %1206 = cast(%var_13504, dtype="float32") /* ty=Tensor[(1, 4, 16), float32] */;
    %1207 = cast(meta[relay.Constant][67] /* ty=Tensor[(2, 216), uint16] */, dtype="uint16") /* ty=Tensor[(2, 216), uint16] */;
    %1208 = cast(meta[relay.Constant][67] /* ty=Tensor[(2, 216), uint16] */, dtype="uint16") /* ty=Tensor[(2, 216), uint16] */;
    %1209 = cast(meta[relay.Constant][68] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %1210 = reshape(%1207, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), uint16] */;
    %1211 = reshape(%1208, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), uint16] */;
    %1212 = reshape(%1209, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %1213 = @func_4657(%1210, %1211, %1212) /* ty=(Tensor[(6, 12, 6), uint16], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */;
    %1214 = cast(meta[relay.Constant][69] /* ty=Tensor[(84, 1), float64] */, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
    %1215 = reshape(%1214, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1216 = @func_4171(%1215) /* ty=(Tensor[(3, 14, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), uint8]) */;
    %1217 = log2(%1206) /* ty=Tensor[(1, 4, 16), float32] */;
    %1218 = %1213.0;
    %1219 = %1216.0;
    (%1217, %1218, meta[relay.Constant][67] /* ty=Tensor[(2, 216), uint16] */, meta[relay.Constant][68] /* ty=Tensor[(168), float64] */, %1219, meta[relay.Constant][69] /* ty=Tensor[(84, 1), float64] */)
  };
  %1220(%var_13541) /* ty=(Tensor[(1, 4, 16), float32], Tensor[(6, 12, 6), uint16], Tensor[(2, 216), uint16], Tensor[(168), float64], Tensor[(3, 14, 4), float64], Tensor[(84, 1), float64]) */
}

def @func_15189() -> Tensor[(3, 7, 4), float64] {
  %1221 = @func_11391() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1221.0
}

def @func_5893() -> (Tensor[(3, 7, 4), float64],) {
  @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_10721() -> Tensor[(3, 7, 4), float64] {
  %1222 = @func_4695() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1222.0
}

def @func_7927(%var_7907: uint32, %var_7908: Tensor[(10, 10, 9), uint32]) -> (Tensor[(10, 10, 9), bool], Tensor[(3, 7, 4), float64]) {
  %1223 = cast(%var_7907, dtype="bool") /* ty=bool */;
  %1224 = cast(%var_7908, dtype="bool") /* ty=Tensor[(10, 10, 9), bool] */;
  %1225 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1226 = not_equal(%1223, %1224) /* ty=Tensor[(10, 10, 9), bool] */;
  %1227 = %1225.0;
  (%1226, %1227)
}

def @func_14056(%var_14053: float32, %var_14054: Tensor[(1, 15), float32], %var_14055: Tensor[(168), float64]) -> (Tensor[(1, 15), float32], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float64], Tensor[(3, 7, 4), int16], Tensor[(168), float64]) {
  @func_14051(%var_14053, %var_14054, %var_14055) /* ty=(Tensor[(1, 15), float32], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float64], Tensor[(3, 7, 4), int16], Tensor[(168), float64]) */
}

def @func_9120() -> Tensor[(3, 7, 4), float64] {
  %1229 = fn () -> Tensor[(3, 7, 4), float64] {
    %1228 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1228.0
  };
  %1229() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_6342() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1230 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1231 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %1232 = %1230.0;
  (%1231, %1232)
}

def @func_11951(%var_11797: Tensor[(15, 6, 11), int64], %var_11815: Tensor[(9), float64], %var_11893: Tensor[(260, 1), float32], %var_11913: Tensor[(15, 6, 11), float64]) -> (Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(27, 27), float64], Tensor[(243, 3), float32], int16, int16, Tensor[(260, 1), float32], Tensor[(15, 6, 11), float64]) {
  %1233 = cast(%var_11815, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1234 = cast(meta[relay.Constant][70] /* ty=Tensor[(27, 27), float64] */, dtype="float64") /* ty=Tensor[(27, 27), float64] */;
  %1235 = cast(-8 /* ty=int64 */, dtype="int16") /* ty=int16 */;
  %1236 = reshape(%1233, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %1237 = reshape(%1234, newshape=[729]) /* ty=Tensor[(729), float64] */;
  %1238 = reshape(%1235, newshape=[]) /* ty=int16 */;
  %1239 = @func_9527(%1236, %1237, %1238) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) */;
  %1240 = cast(meta[relay.Constant][70] /* ty=Tensor[(27, 27), float64] */, dtype="bool") /* ty=Tensor[(27, 27), bool] */;
  %1241 = reshape(%1240, newshape=[243, 3]) /* ty=Tensor[(243, 3), bool] */;
  %1242 = @func_11514(%1241) /* ty=(Tensor[(243, 3), float32], Tensor[(243, 3), bool]) */;
  %1243 = @func_8896() /* ty=(int16,) */;
  %1244 = cast(%var_11893, dtype="float32") /* ty=Tensor[(260, 1), float32] */;
  %1245 = reshape(%1244, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %1246 = @func_4786(%1245) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(14, ?, 5), float64], Tensor[(70), float64], int16, Tensor[(260), float32], Tensor[(315), float32], Tensor[(260), float32]) */;
  %1247 = cast(-8 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %1248 = cast(%var_11797, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %1249 = less(%1247, %1248) /* ty=Tensor[(15, 6, 11), bool] */;
  %1250 = cast(%1249, dtype="float32") /* ty=Tensor[(15, 6, 11), float32] */;
  %1251 = erf(%1250) /* ty=Tensor[(15, 6, 11), float32] */;
  %1252 = cast(%1251, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %1253 = atanh(%1252) /* ty=Tensor[(15, 6, 11), float64] */;
  %1254 = cast(%var_11913, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %1255 = shape_of(%1253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1256 = cast(%1253, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1258 = not_equal(%1256, %1257) /* ty=Tensor[(15, 6, 11), bool] */;
  %1259 = cast(%1258, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %1260 = %1239.1;
  %1261 = %1242.0;
  %1262 = %1243.0;
  %1263 = %1246.3;
  %1264 = cosh(%1259) /* ty=Tensor[(15, 6, 11), float64] */;
  (%1260, %var_11815, meta[relay.Constant][70] /* ty=Tensor[(27, 27), float64] */, %1261, %1262, %1263, %var_11893, %1264)
}

def @func_6577() -> Tensor[(3, 7, 4), float64] {
  @func_6575() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_2894(%var_2878: float32, %var_2879: Tensor[(16, 1), float32], %var_2891: Tensor[(70), float64]) -> (Tensor[(16, 1), float32], int16, Tensor[(70), float64]) {
  %1265 = cast(%var_2878, dtype="float32") /* ty=float32 */;
  %1266 = cast(%var_2879, dtype="float32") /* ty=Tensor[(16, 1), float32] */;
  %1267 = cast(%var_2891, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1268 = cast(%var_2878, dtype="int16") /* ty=int16 */;
  %1269 = reshape(%1267, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %1270 = reshape(%1268, newshape=[]) /* ty=int16 */;
  %1271 = @func_1127(%1269, %1270) /* ty=(Tensor[(14, ?, 5), float64], Tensor[(14, ?, 5), int32], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16]) */;
  %1272 = divide(%1265, %1266) /* ty=Tensor[(16, 1), float32] */;
  %1273 = %1271.3;
  (%1272, %1273, %var_2891)
}

def @func_11031() -> Tensor[(3, 7, 4), float64] {
  %1275 = fn () -> Tensor[(3, 7, 4), float64] {
    %1274 = @func_5793() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float32]) */;
    %1274.0
  };
  %1275() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_9379() -> (Tensor[(3, 7, 4), float64],) {
  %1276 = @func_6528() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1276,)
}

def @func_4661(%var_4658: Tensor[(6, 12, 6), uint16], %var_4659: Tensor[(6, 12, 6), uint16], %var_4660: Tensor[(168), float64]) -> (Tensor[(6, 12, 6), uint16], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
  %1286 = fn (%var_4638: Tensor[(6, 12, 6), uint16], %var_4639: Tensor[(6, 12, 6), uint16], %var_4654: Tensor[(168), float64]) -> (Tensor[(6, 12, 6), uint16], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) {
    %1277 = cast(%var_4639, dtype="uint16") /* ty=Tensor[(6, 12, 6), uint16] */;
    %1278 = shape_of(%var_4638, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1279 = cast(%var_4638, dtype="uint16") /* ty=Tensor[(6, 12, 6), uint16] */;
    %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1281 = cast(%var_4654, dtype="float64") /* ty=Tensor[(168), float64] */;
    %1282 = reshape(%1281, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
    %1283 = @func_4039(%1282) /* ty=(Tensor[(3, 14, 4), float64],) */;
    %1284 = multiply(%1279, %1280) /* ty=Tensor[(6, 12, 6), uint16] */;
    %1285 = %1283.0;
    (%1284, %1285, %var_4654)
  };
  %1286(%var_4658, %var_4659, %var_4660) /* ty=(Tensor[(6, 12, 6), uint16], Tensor[(3, 14, 4), float64], Tensor[(168), float64]) */
}

def @func_9478(%var_9475: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) {
  %1287 = @func_8521() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) */;
  %1288 = cast(%var_9475, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1289 = cast(meta[relay.Constant][71] /* ty=Tensor[(729), float64] */, dtype="float64") /* ty=Tensor[(729), float64] */;
  %1290 = reshape(%1288, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float64] */;
  %1291 = reshape(%1289, newshape=[9, 9, 9]) /* ty=Tensor[(9, 9, 9), float64] */;
  %1292 = @func_1391(%1290, %1291) /* ty=(Tensor[(9, 9, 9), float64],) */;
  %1293 = @func_5355() /* ty=Tensor[(3, 7, 4), float64] */;
  %1294 = %1287.1;
  %1295 = %1292.0;
  (%1293, %1294, %1295, %var_9475, meta[relay.Constant][71] /* ty=Tensor[(729), float64] */)
}

def @func_7359() -> Tensor[(3, 7, 4), float64] {
  @func_7111() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_10166(%var_10162: Tensor[(6, 8, 16), float32], %var_10163: float32, %var_10164: Tensor[(16), float32], %var_10165: Tensor[(70, 1), float64]) -> (int16, float32, Tensor[(16), float32], Tensor[(70, 1), float64], Tensor[(6, 8, 16), uint8]) {
  @func_10160(%var_10162, %var_10163, %var_10164, %var_10165) /* ty=(int16, float32, Tensor[(16), float32], Tensor[(70, 1), float64], Tensor[(6, 8, 16), uint8]) */
}

def @func_7406() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1296 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1297 = @func_6575() /* ty=Tensor[(3, 7, 4), float64] */;
  %1298 = %1296.0;
  (%1297, %1298)
}

def @func_16219() -> (Tensor[(3, 7, 4), float64],) {
  %1301 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %1299 = @func_13925() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1300 = %1299.0;
    (%1300,)
  };
  %1301() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_8917() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16) {
  @func_8915() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16) */
}

def @func_9712(%var_9710: Tensor[(40, 2), float32], %var_9711: Tensor[(3, 3), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), float32], Tensor[(40, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 3), float64], Tensor[(729), float64], Tensor[(10, 13, 2), float32], Tensor[(315, 1), float32], Tensor[(5, 52), float32]) {
  %1338 = fn (%var_9645: Tensor[(40, 2), float32], %var_9673: Tensor[(3, 3), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), float32], Tensor[(40, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 3), float64], Tensor[(729), float64], Tensor[(10, 13, 2), float32], Tensor[(315, 1), float32], Tensor[(5, 52), float32]) {
    %1302 = @func_6412() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1303 = cast(meta[relay.Constant][72] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %1304 = reshape(%1303, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %1305 = @func_6689(%1304) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) */;
    %1306 = cast(meta[relay.Constant][73] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %1307 = reshape(%1306, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float32] */;
    %1308 = @func_1331(%1307) /* ty=(Tensor[(16, 13, 11), float32],) */;
    %1309 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %1310 = cast(%var_9645, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
    %1311 = cast(%var_9645, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
    %1312 = %1308.0;
    %1313 = cast(%1312, dtype="float32") /* ty=Tensor[(16, 13, 11), float32] */;
    %1314 = reshape(%1310, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
    %1315 = reshape(%1311, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float32] */;
    %1316 = reshape(%1313, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %1317 = @func_1543(%1314, %1315, %1316) /* ty=(Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(8, 5, 2), bool]) */;
    %1318 = @func_5677() /* ty=int16 */;
    %1319 = cast(%var_9645, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
    %1320 = cast(%1318, dtype="float32") /* ty=float32 */;
    %1321 = cast(%var_9673, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
    %1322 = cast(meta[relay.Constant][74] /* ty=Tensor[(729), float64] */, dtype="float64") /* ty=Tensor[(729), float64] */;
    %1323 = reshape(%1321, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %1324 = reshape(%1322, newshape=[729]) /* ty=Tensor[(729), float64] */;
    %1325 = @func_4023(%1323, %1324) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) */;
    %1326 = cast(meta[relay.Constant][75] /* ty=Tensor[(315, 1), float32] */, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
    %1327 = cast(meta[relay.Constant][76] /* ty=Tensor[(5, 52), float32] */, dtype="float32") /* ty=Tensor[(5, 52), float32] */;
    %1328 = reshape(%1326, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
    %1329 = reshape(%1327, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %1330 = @func_345(%1328, %1329) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %1331 = %1302.0;
    %1332 = %1305.0;
    %1333 = %1309.1;
    %1334 = %1317.0;
    %1335 = floor_mod(%1319, %1320) /* ty=Tensor[(40, 2), float32] */;
    %1336 = %1325.0;
    %1337 = %1330.2;
    (%1331, %1332, meta[relay.Constant][72] /* ty=Tensor[(168), float64] */, %1312, meta[relay.Constant][73] /* ty=Tensor[(2288), float32] */, %1333, %1334, %1335, %1336, %var_9673, meta[relay.Constant][74] /* ty=Tensor[(729), float64] */, %1337, meta[relay.Constant][75] /* ty=Tensor[(315, 1), float32] */, meta[relay.Constant][76] /* ty=Tensor[(5, 52), float32] */)
  };
  %1338(%var_9710, %var_9711) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(16, 13, 11), float32], Tensor[(2288), float32], Tensor[(3, 7, 4), float64], Tensor[(16, 13, 11), float32], Tensor[(40, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(3, 3), float64], Tensor[(729), float64], Tensor[(10, 13, 2), float32], Tensor[(315, 1), float32], Tensor[(5, 52), float32]) */
}

def @func_15955() -> Tensor[(3, 7, 4), float64] {
  @func_15953() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_15483() -> (Tensor[(3, 7, 4), float64],) {
  @func_15481() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_16188() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) {
  %1349 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) {
    %1339 = @func_11717() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %1340 = cast(meta[relay.Constant][77] /* ty=Tensor[(729), float64] */, dtype="float64") /* ty=Tensor[(729), float64] */;
    %1341 = cast(meta[relay.Constant][78] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1342 = cast(meta[relay.Constant][79] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
    %1343 = reshape(%1340, newshape=[729]) /* ty=Tensor[(729), float64] */;
    %1344 = reshape(%1341, newshape=[]) /* ty=int16 */;
    %1345 = reshape(%1342, newshape=[65]) /* ty=Tensor[(65), int16] */;
    %1346 = @func_13144(%1343, %1344, %1345) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64], Tensor[(729), float64], Tensor[(65), uint16]) */;
    %1347 = %1339.1;
    %1348 = %1346.1;
    (%1347, %1348, meta[relay.Constant][77] /* ty=Tensor[(729), float64] */, meta[relay.Constant][78] /* ty=int16 */, meta[relay.Constant][79] /* ty=Tensor[(65), int16] */)
  };
  %1349() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(729), float64], int16, Tensor[(65), int16]) */
}

def @func_349(%var_347: Tensor[(5, 9, 7), float32], %var_348: Tensor[(260), float32]) -> (Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) {
  @func_345(%var_347, %var_348) /* ty=(Tensor[(5, 9, 7), float32], Tensor[(5, 9, 7), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */
}

def @func_5119() -> Tensor[(3, 7, 4), float64] {
  %1350 = @func_4403() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1350.1
}

def @func_13926() -> (Tensor[(3, 7, 4), float64],) {
  %1352 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %1351 = @func_10415() /* ty=Tensor[(3, 7, 4), float64] */;
    (%1351,)
  };
  %1352() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_8898() -> (int16,) {
  @func_8896() /* ty=(int16,) */
}

def @func_15677() -> (Tensor[(3, 7, 4), float64],) {
  %1353 = @func_5891() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_5678() -> int16 {
  %1356 = fn () -> int16 {
    %1355 = @func_5081() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(130, 2), float32], Tensor[(3, 7, 4), float64], Tensor[(5, 1, 13), int16], int16, Tensor[(65), int16], Tensor[(3, 7, 4), float64]) */;
    %1355.5
  };
  %1356() /* ty=int16 */
}

def @func_11957(%var_11953: Tensor[(15, 6, 11), int64], %var_11954: Tensor[(9), float64], %var_11955: Tensor[(260, 1), float32], %var_11956: Tensor[(15, 6, 11), float64]) -> (Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(27, 27), float64], Tensor[(243, 3), float32], int16, int16, Tensor[(260, 1), float32], Tensor[(15, 6, 11), float64]) {
  @func_11951(%var_11953, %var_11954, %var_11955, %var_11956) /* ty=(Tensor[(5, 1, 13), int16], Tensor[(9), float64], Tensor[(27, 27), float64], Tensor[(243, 3), float32], int16, int16, Tensor[(260, 1), float32], Tensor[(15, 6, 11), float64]) */
}

def @func_11772(%var_11763: Tensor[(8, 6, 14), float32]) -> Tensor[(8, 6, 14), float32] {
  %1357 = cast(%var_11763, dtype="float32") /* ty=Tensor[(8, 6, 14), float32] */;
  cosh(%1357) /* ty=Tensor[(8, 6, 14), float32] */
}

def @func_5278() -> Tensor[(3, 7, 4), float64] {
  %1358 = @func_4892() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1358.0
}

def @func_8915() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], int16) {
  %1359 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1360 = @func_5634() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1361 = @func_8896() /* ty=(int16,) */;
  %1362 = %1359.0;
  %1363 = %1360.0;
  %1364 = %1361.0;
  (%1362, %1363, %1364)
}

def @func_8521() -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32]) {
  %1365 = @func_7971() /* ty=(Tensor[(3, 7, 4), float64],) */;
  %1366 = @func_8214() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32], Tensor[(3, 7, 4), float64]) */;
  %1367 = %1365.0;
  %1368 = %1366.2;
  (%1367, %1368)
}

def @func_9481(%var_9479: Tensor[(9), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) {
  @func_9478(%var_9479) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(9, 9, 9), float64], Tensor[(9), float64], Tensor[(729), float64]) */
}

def @func_5959() -> (Tensor[(3, 7, 4), float64],) {
  @func_5957() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_10790() -> Tensor[(3, 7, 4), float64] {
  %1370 = fn () -> Tensor[(3, 7, 4), float64] {
    %1369 = @func_9449() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1369.0
  };
  %1370() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_15929(%var_15928: Tensor[(260), float32]) -> (Tensor[(6, 15, 7), bool], Tensor[(105), float64], Tensor[(7), float64], Tensor[(900), uint32], Tensor[(260), int16], Tensor[(260), float32]) {
  %1388 = fn (%var_15916: Tensor[(260), float32]) -> (Tensor[(6, 15, 7), bool], Tensor[(105), float64], Tensor[(7), float64], Tensor[(900), uint32], Tensor[(260), int16], Tensor[(260), float32]) {
    %1371 = cast(meta[relay.Constant][80] /* ty=Tensor[(6, 15, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 7), float64] */;
    %1372 = acos(%1371) /* ty=Tensor[(6, 15, 7), float64] */;
    %1373 = cast(meta[relay.Constant][80] /* ty=Tensor[(6, 15, 7), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 7), bool] */;
    %1374 = shape_of(%1372, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1375 = cast(%1372, dtype="bool") /* ty=Tensor[(6, 15, 7), bool] */;
    %1376 = dyn.reshape(%1373, %1374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1377 = cast(meta[relay.Constant][81] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
    %1378 = cast(meta[relay.Constant][82] /* ty=Tensor[(900), uint32] */, dtype="uint32") /* ty=Tensor[(900), uint32] */;
    %1379 = reshape(%1377, newshape=[7]) /* ty=Tensor[(7), float64] */;
    %1380 = reshape(%1378, newshape=[900]) /* ty=Tensor[(900), uint32] */;
    %1381 = @func_15041(%1379, %1380) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), bool], Tensor[(1, 15, 7), float64], Tensor[(7), float64], Tensor[(105), float64], uint32, Tensor[(900), uint32], int16) */;
    %1382 = cast(%var_15916, dtype="float32") /* ty=Tensor[(260), float32] */;
    %1383 = reshape(%1382, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %1384 = @func_9561(%1383) /* ty=(Tensor[(260), int16],) */;
    %1385 = greater_equal(%1375, %1376) /* ty=Tensor[(6, 15, 7), bool] */;
    %1386 = %1381.4;
    %1387 = %1384.0;
    (%1385, %1386, meta[relay.Constant][81] /* ty=Tensor[(7), float64] */, meta[relay.Constant][82] /* ty=Tensor[(900), uint32] */, %1387, %var_15916)
  };
  %1388(%var_15928) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(105), float64], Tensor[(7), float64], Tensor[(900), uint32], Tensor[(260), int16], Tensor[(260), float32]) */
}

def @func_7311() -> (Tensor[(3, 7, 4), float64],) {
  %1389 = @func_5182() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1389,)
}

def @func_15331() -> (Tensor[(3, 7, 4), float64],) {
  %1392 = fn () -> (Tensor[(3, 7, 4), float64],) {
    %1390 = @func_11717() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %1391 = %1390.1;
    (%1391,)
  };
  %1392() /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_8139() -> int16 {
  @func_8137() /* ty=int16 */
}

def @func_15516() -> Tensor[(3, 7, 4), float64] {
  @func_15514() /* ty=Tensor[(3, 7, 4), float64] */
}

def @func_13103() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) {
  @func_13101() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_9056() -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
  %1408 = fn () -> (Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) {
    %1393 = @func_6482() /* ty=(Tensor[(3, 7, 4), float64],) */;
    %1394 = %1393.0;
    %1395 = cast(%1394, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %1396 = cast(meta[relay.Constant][83] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %1397 = reshape(%1395, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1398 = reshape(%1396, newshape=[260]) /* ty=Tensor[(260), float32] */;
    %1399 = @func_4319(%1397, %1398) /* ty=(Tensor[(3, 7, 4), bool], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float32], Tensor[(260), float32]) */;
    %1400 = @func_9000() /* ty=(int16, Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64], Tensor[(9), float64]) */;
    %1401 = @func_5278() /* ty=Tensor[(3, 7, 4), float64] */;
    %1402 = cast(%1401, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %1403 = reshape(%1402, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), float64] */;
    %1404 = @func_4609(%1403) /* ty=(Tensor[(7, 12, 15), float64], Tensor[(3, 7, 4), int64], Tensor[(3, 14, 4), float64], Tensor[(42, 4), float64], Tensor[(3, 7, 4), float64]) */;
    %1405 = %1399.1;
    %1406 = %1400.2;
    %1407 = %1404.4;
    (%1394, %1405, meta[relay.Constant][83] /* ty=Tensor[(260), float32] */, %1401, %1406, %1407)
  };
  %1408() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), float64]) */
}

def @func_1394(%var_1392: Tensor[(1, 1, 9), float64], %var_1393: Tensor[(9, 9, 9), float64]) -> (Tensor[(9, 9, 9), float64],) {
  %1412 = fn (%var_1382: Tensor[(1, 1, 9), float64], %var_1383: Tensor[(9, 9, 9), float64]) -> (Tensor[(9, 9, 9), float64],) {
    %1409 = cast(%var_1382, dtype="float64") /* ty=Tensor[(1, 1, 9), float64] */;
    %1410 = cast(%var_1383, dtype="float64") /* ty=Tensor[(9, 9, 9), float64] */;
    %1411 = mod(%1409, %1410) /* ty=Tensor[(9, 9, 9), float64] */;
    (%1411,)
  };
  %1412(%var_1392, %var_1393) /* ty=(Tensor[(9, 9, 9), float64],) */
}

def @func_14051(%var_13987: float32, %var_13988: Tensor[(1, 15), float32], %var_14041: Tensor[(168), float64]) -> (Tensor[(1, 15), float32], Tensor[(3, 7, 4), float64], Tensor[(260), float32], Tensor[(3, 7, 4), float64], Tensor[(10, 13, 2), float64], Tensor[(3, 7, 4), int16], Tensor[(168), float64]) {
  %1413 = cast(%var_13987, dtype="float32") /* ty=float32 */;
  %1414 = cast(%var_13988, dtype="float32") /* ty=Tensor[(1, 15), float32] */;
  %1415 = @func_6342() /* ty=(Tensor[(3, 7, 4), float64], Tensor[(3, 7, 4), float64]) */;
  %1416 = cast(meta[relay.Constant][84] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1417 = reshape(%1416, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float32] */;
  %1418 = @func_189(%1417) /* ty=(Tensor[(10, 13, 2), float32],) */;
  %1419 = %1418.0;
  %1420 = cast(%1419, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %1421 = cast(%var_13987, dtype="float64") /* ty=float64 */;
  %1422 = cast(%var_14041, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1423 = reshape(%1422, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %1424 = @func_6689(%1423) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(168), float64], Tensor[(3, 7, 4), int16], Tensor[(3, 7, 4), float64]) */;
  %1425 = floor_divide(%1413, %1414) /* ty=Tensor[(1, 15), float32] */;
  %1426 = @func_7111() /* ty=Tensor[(3, 7, 4), float64] */;
  %1427 = %1415.1;
  %1428 = divide(%1420, %1421) /* ty=Tensor[(10, 13, 2), float64] */;
  %1429 = %1424.2;
  (%1425, %1426, meta[relay.Constant][84] /* ty=Tensor[(260), float32] */, %1427, %1428, %1429, %var_14041)
}

def @func_4609(%var_4587: Tensor[(3, 7, 4), float64]) -> (Tensor[(7, 12, 15), float64], Tensor[(3, 7, 4), int64], Tensor[(3, 14, 4), float64], Tensor[(42, 4), float64], Tensor[(3, 7, 4), float64]) {
  %1430 = @func_3629() /* ty=Tensor[(3, 7, 4), float64] */;
  %1431 = cast(%1430, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %1432 = reshape(%1431, newshape=[7, 12, 1]) /* ty=Tensor[(7, 12, 1), float64] */;
  %1433 = @func_3811(%1432) /* ty=(Tensor[(7, 12, 15), float64],) */;
  %1434 = cast(%var_4587, dtype="int64") /* ty=Tensor[(3, 7, 4), int64] */;
  %1435 = shape_of(%1430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1436 = cast(%1430, dtype="int64") /* ty=Tensor[(3, 7, 4), int64] */;
  %1437 = dyn.reshape(%1434, %1435, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1438 = cast(meta[relay.Constant][85] /* ty=Tensor[(42, 4), float64] */, dtype="float64") /* ty=Tensor[(42, 4), float64] */;
  %1439 = reshape(%1438, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), float64] */;
  %1440 = @func_4039(%1439) /* ty=(Tensor[(3, 14, 4), float64],) */;
  %1441 = %1433.0;
  %1442 = bitwise_xor(%1436, %1437) /* ty=Tensor[(3, 7, 4), int64] */;
  %1443 = %1440.0;
  %1444 = @func_4430() /* ty=Tensor[(3, 7, 4), float64] */;
  (%1441, %1442, %1443, meta[relay.Constant][85] /* ty=Tensor[(42, 4), float64] */, %1444)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen675/build/output.py", line 4595, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:49:38] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


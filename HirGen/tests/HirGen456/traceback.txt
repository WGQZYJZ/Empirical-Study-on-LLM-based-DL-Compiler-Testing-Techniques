==========mod==========
#[version = "0.0.5"]
def @func_4668() -> Tensor[(4, 9, 1), float32] {
  %0 = @func_3953() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %0.0
}

def @func_4610(%var_4602: Tensor[(12, 2, 1), uint16]) -> (Tensor[(12, 2, 1), uint16],) {
  %1 = cast(meta[relay.Constant][0] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %2 = cast(%var_4602, dtype="uint16") /* ty=Tensor[(12, 2, 1), uint16] */;
  %3 = multiply(%1, %2) /* ty=Tensor[(12, 2, 1), uint16] */;
  (%3,)
}

def @func_5842(%var_5838: Tensor[(1540), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
  %4 = cast(%var_5838, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %5 = reshape(%4, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %6 = @func_926(%5) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %7 = @func_2477() /* ty=Tensor[(4, 9, 1), float32] */;
  %8 = %6.2;
  (%7, %8, %var_5838)
}

def @func_5892() -> (Tensor[(4, 9, 12), int16],) {
  %9 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %10 = %9.1;
  %11 = cast(%10, dtype="int16") /* ty=Tensor[(4, 9, 1), int16] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 9, 12), float64] */, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
  %13 = subtract(%11, %12) /* ty=Tensor[(4, 9, 12), int16] */;
  (%13,)
}

def @func_3645(%var_3637: Tensor[(7, 16, 10), bool], %var_3638: Tensor[(7, 16, 10), bool]) -> Tensor[(7, 16, 10), bool] {
  %14 = cast(%var_3638, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %15 = shape_of(%var_3637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%var_3637, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%16, %17) /* ty=Tensor[(7, 16, 10), bool] */
}

def @func_2246(%var_2210: Tensor[(4, 7, 10), uint16], %var_2211: Tensor[(4, 7, 10), uint16], %var_2232: Tensor[(4, 7, 10), uint16]) -> (Tensor[(4, 7, 10), bool], Tensor[(4, 7, 10), float64]) {
  %18 = cast(%var_2232, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
  %19 = shape_of(%var_2210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%var_2210, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %22 = cast(%var_2211, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
  %23 = shape_of(%var_2210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%var_2210, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = less_equal(%24, %25) /* ty=Tensor[(4, 7, 10), bool] */;
  %27 = cast(%26, dtype="float32") /* ty=Tensor[(4, 7, 10), float32] */;
  %28 = sqrt(%27) /* ty=Tensor[(4, 7, 10), float32] */;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
  %30 = sigmoid(%29) /* ty=Tensor[(4, 7, 10), float64] */;
  %31 = cast(%var_2211, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%30, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %35 = greater(%20, %21) /* ty=Tensor[(4, 7, 10), bool] */;
  %36 = power(%33, %34) /* ty=Tensor[(4, 7, 10), float64] */;
  (%35, %36)
}

def @func_3165() -> (Tensor[(10, 14, 11), uint8], Tensor[(10, 14, 11), float32]) {
  %37 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %38 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %39 = %37.0;
  %40 = %38.0;
  (%39, %40)
}

def @func_5945(%var_5937: Tensor[(7, 5, 10), float64]) -> (Tensor[(7, 5, 10), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) {
  %41 = cast(%var_5937, dtype="float64") /* ty=Tensor[(7, 5, 10), float64] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(10368), int8] */, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %43 = reshape(%42, newshape=[4, 9, 288]) /* ty=Tensor[(4, 9, 288), int8] */;
  %44 = @func_1033(%43) /* ty=(Tensor[(4, 9, 288), float64],) */;
  %45 = sin(%41) /* ty=Tensor[(7, 5, 10), float64] */;
  %46 = %44.0;
  (%45, %46, meta[relay.Constant][2] /* ty=Tensor[(10368), int8] */)
}

def @func_1413(%var_1368: Tensor[(8, 9, 13), int16]) -> (Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) {
  %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 9, 13), int16] */, dtype="int16") /* ty=Tensor[(8, 9, 13), int16] */;
  %48 = shape_of(%var_1368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%var_1368, dtype="int16") /* ty=Tensor[(8, 9, 13), int16] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %52 = reshape(%51, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %53 = @func_1100(%52) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %54 = subtract(%49, %50) /* ty=Tensor[(8, 9, 13), int16] */;
  %55 = %53.0;
  (%54, %55, meta[relay.Constant][4] /* ty=Tensor[(792), float32] */)
}

def @func_3113(%var_3083: Tensor[(10368), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(180), float32], Tensor[(10368), int8], Tensor[(468, 2), int16], Tensor[(432), float32]) {
  %56 = @func_2698() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %58 = cast(%var_3083, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %59 = cast(meta[relay.Constant][6] /* ty=Tensor[(468, 2), int16] */, dtype="int16") /* ty=Tensor[(468, 2), int16] */;
  %60 = cast(meta[relay.Constant][7] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %61 = reshape(%57, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), float32] */;
  %62 = reshape(%58, newshape=[10368]) /* ty=Tensor[(10368), int8] */;
  %63 = reshape(%59, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %64 = reshape(%60, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float32] */;
  %65 = @func_1972(%61, %62, %63, %64) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %66 = %56.0;
  %67 = %65.15;
  (%66, %67, meta[relay.Constant][5] /* ty=Tensor[(180), float32] */, %var_3083, meta[relay.Constant][6] /* ty=Tensor[(468, 2), int16] */, meta[relay.Constant][7] /* ty=Tensor[(432), float32] */)
}

def @func_5293(%var_5276: Tensor[(7, 220), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float64], Tensor[(7, 220), float64]) {
  %68 = @func_5127() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(1540), float32]) */;
  %69 = %68.1;
  %70 = cast(%var_5276, dtype="uint64") /* ty=Tensor[(7, 220), uint64] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(2), int32] */;
  %72 = cast(%69, dtype="uint64") /* ty=Tensor[(7, 220), uint64] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %74 = logical_xor(%72, %73) /* ty=Tensor[(7, 220), uint64] */;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
  %76 = cast(%var_5276, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
  %77 = @func_3523() /* ty=Tensor[(4, 9, 1), float32] */;
  %78 = tan(%75) /* ty=Tensor[(7, 220), float64] */;
  %79 = acos(%76) /* ty=Tensor[(7, 220), float64] */;
  (%77, %78, %79)
}

def @func_3742(%var_3673: Tensor[(1540), float32], %var_3691: Tensor[(10368), int8]) -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1540), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8], Tensor[(4, 9, 1), float32]) {
  %80 = cast(%var_3673, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %81 = reshape(%80, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %82 = @func_926(%81) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %83 = %82.2;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %85 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
  %86 = cast(%85, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %87 = cast(%var_3673, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %88 = cast(%var_3691, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %89 = reshape(%88, newshape=[10368]) /* ty=Tensor[(10368), int8] */;
  %90 = @func_3367(%89) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(10, 14, 11), bool], Tensor[(936), int16], Tensor[(4, 9, 288), float64]) */;
  %91 = cos(%84) /* ty=Tensor[(10, 14, 11), float32] */;
  %92 = mod(%86, %87) /* ty=Tensor[(4, 9, 1540), float64] */;
  %93 = %90.4;
  %94 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  (%91, %92, %93, %var_3691, %94)
}

def @func_1076(%var_1042: Tensor[(16, 15, 9), bool], %var_1043: Tensor[(16, 15, 9), bool]) -> (Tensor[(16, 15, 9), bool],) {
  %95 = cast(%var_1043, dtype="bool") /* ty=Tensor[(16, 15, 9), bool] */;
  %96 = shape_of(%var_1042, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%var_1042, dtype="bool") /* ty=Tensor[(16, 15, 9), bool] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %99 = logical_or(%97, %98) /* ty=Tensor[(16, 15, 9), bool] */;
  (%99,)
}

def @func_1311() -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) {
  %100 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %101 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %102 = %101.0;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %104 = atanh(%103) /* ty=Tensor[(4, 9, 1), float64] */;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %106 = cast(%102, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %107 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%104, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %110 = floor_mod(%108, %109) /* ty=Tensor[(4, 9, ?), float64] */;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(4, 9, ?), float32] */;
  %112 = cast(meta[relay.Constant][8] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %113 = reshape(%112, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %114 = @func_1100(%113) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %115 = %100.4;
  %116 = erf(%105) /* ty=Tensor[(4, 9, 1), float64] */;
  %117 = sinh(%111) /* ty=Tensor[(4, 9, ?), float32] */;
  %118 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  %119 = %114.0;
  %120 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  (%115, %116, %117, %118, %119, meta[relay.Constant][8] /* ty=Tensor[(792), float32] */, %120)
}

def @func_2773() -> Tensor[(4, 9, 1), float64] {
  %121 = @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */;
  %122 = %121.2;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  atan(%123) /* ty=Tensor[(4, 9, 1), float64] */
}

def @func_926(%var_915: Tensor[(1540), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
  %124 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %125 = cast(%var_915, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %126 = cast(%var_915, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %127 = reshape(%125, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %128 = reshape(%126, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %129 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %130 = %124.1;
  %131 = @func_164(%127, %128) /* ty=Tensor[(10, 14, 11), float32] */;
  (%129, %130, %131, %var_915)
}

def @func_3523() -> Tensor[(4, 9, 1), float32] {
  %132 = @func_2063() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %132.0
}

def @func_280(%var_242: Tensor[(4, 9, 11), float32]) -> (Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) {
  %133 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %134 = cast(%133, dtype="int8") /* ty=Tensor[(4, 9, 1), int8] */;
  %135 = cast(%var_242, dtype="int8") /* ty=Tensor[(4, 9, 11), int8] */;
  %136 = cast(%var_242, dtype="float32") /* ty=Tensor[(4, 9, 11), float32] */;
  %137 = bitwise_and(%134, %135) /* ty=Tensor[(4, 9, 11), int8] */;
  %138 = sinh(%136) /* ty=Tensor[(4, 9, 11), float32] */;
  (%137, %138)
}

def @func_2172() -> (Tensor[(10, 14, 11), float64], Tensor[(4, 9, 288), int8]) {
  %139 = @func_2108() /* ty=(Tensor[(10, 14, 11), float32],) */;
  %140 = %139.0;
  %141 = cast(%140, dtype="float64") /* ty=Tensor[(10, 14, 11), float64] */;
  %142 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %143 = log2(%141) /* ty=Tensor[(10, 14, 11), float64] */;
  %144 = %142.3;
  (%143, %144)
}

def @func_5127() -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(1540), float32]) {
  %145 = cast(meta[relay.Constant][9] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %146 = reshape(%145, newshape=[7, 220]) /* ty=Tensor[(7, 220), float32] */;
  %147 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  %148 = @func_3043(%146) /* ty=Tensor[(7, 220), float32] */;
  (%147, %148, meta[relay.Constant][9] /* ty=Tensor[(1540), float32] */)
}

def @func_5657(%var_5624: Tensor[(14, 9, 11), uint8]) -> (Tensor[(14, 9, 11), bool], Tensor[(4, 9, ?), float32], Tensor[(396), float32], Tensor[(4, 9, 1), float32], Tensor[(14, 9, 11), float64]) {
  %149 = cast(%var_5624, dtype="bool") /* ty=Tensor[(14, 9, 11), bool] */;
  %150 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(14, 9, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 9, 11), uint8] */, dtype="bool") /* ty=Tensor[(14, 9, 11), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %153 = cast(meta[relay.Constant][11] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %154 = reshape(%153, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %155 = @func_1556(%154) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %156 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %157 = cast(%var_5624, dtype="float64") /* ty=Tensor[(14, 9, 11), float64] */;
  %158 = less(%151, %152) /* ty=Tensor[(14, 9, 11), bool] */;
  %159 = %155.1;
  %160 = %156.6;
  %161 = asin(%157) /* ty=Tensor[(14, 9, 11), float64] */;
  (%158, %159, meta[relay.Constant][11] /* ty=Tensor[(396), float32] */, %160, %161)
}

def @func_6081(%var_6071: Tensor[(396), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(396), float32]) {
  %162 = @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %163 = cast(%var_6071, dtype="float32") /* ty=Tensor[(396), float32] */;
  %164 = reshape(%163, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %165 = @func_1556(%164) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %166 = %162.0;
  %167 = %165.4;
  (%166, %167, %var_6071)
}

def @func_1350(%var_1318: Tensor[(6, 12, 16), bool]) -> (Tensor[(6, 12, 16), bool], Tensor[(7, 220), float32]) {
  %168 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 12, 16), bool] */, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %169 = shape_of(%var_1318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_1318, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %172 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %173 = logical_and(%170, %171) /* ty=Tensor[(6, 12, 16), bool] */;
  %174 = %172.0;
  (%173, %174)
}

def @func_429() -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) {
  %175 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %176 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  (%175, %176)
}

def @func_3465(%var_3458: Tensor[(1, 936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(936), int16], Tensor[(1, 936), float64]) {
  %177 = cast(%var_3458, dtype="int16") /* ty=Tensor[(1, 936), int16] */;
  %178 = reshape(%177, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %179 = @func_1710(%178) /* ty=(Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) */;
  %180 = cast(%var_3458, dtype="float64") /* ty=Tensor[(1, 936), float64] */;
  %181 = @func_2477() /* ty=Tensor[(4, 9, 1), float32] */;
  %182 = %179.2;
  %183 = atan(%180) /* ty=Tensor[(1, 936), float64] */;
  (%181, %182, %183)
}

def @func_2108() -> (Tensor[(10, 14, 11), float32],) {
  %184 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %185 = %184.1;
  (%185,)
}

def @func_3204() -> Tensor[(4, 9, 1), float32] {
  %186 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %186.0
}

def @func_194() -> Tensor[(4, 9, 1), float32] {
  %187 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  asin(%187) /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_164(%var_147: Tensor[(10, 14, 11), float32], %var_148: Tensor[(10, 14, 11), float32]) -> Tensor[(10, 14, 11), float32] {
  %188 = cast(%var_148, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %189 = shape_of(%var_147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%var_147, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%190, %191) /* ty=Tensor[(10, 14, 11), float32] */
}

def @func_2063() -> (Tensor[(4, 9, 1), float32],) {
  %192 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %193 = %192.0;
  (%193,)
}

def @func_653() -> (Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) {
  %194 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %195 = %194.5;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %197 = cast(%195, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %198 = reshape(%196, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %199 = reshape(%197, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %200 = @func_164(%198, %199) /* ty=Tensor[(10, 14, 11), float32] */;
  %201 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  (%195, %200, %201)
}

def @func_6292() -> Tensor[(4, 9, 1), float32] {
  %202 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %202.1
}

def @func_3893(%var_3890: Tensor[(288), uint8]) -> (Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) {
  %203 = cast(%var_3890, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %204 = cast(%var_3890, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %205 = reshape(%203, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %206 = reshape(%204, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %207 = @func_33(%205, %206) /* ty=(Tensor[(12, 12, 2), uint8],) */;
  %208 = @func_3523() /* ty=Tensor[(4, 9, 1), float32] */;
  %209 = %207.0;
  (%208, %209, %var_3890)
}

def @func_2445() -> Tensor[(7, 220), float32] {
  %210 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %210.0
}

def @func_2698() -> (Tensor[(4, 9, 1), float32],) {
  %211 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %212 = %211.3;
  (%212,)
}

def @func_5557(%var_5536: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), int16], Tensor[(4, 9, 1), float32]) {
  %213 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %214 = %213.4;
  %215 = cast(%var_5536, dtype="int16") /* ty=Tensor[(8, 11, 9), int16] */;
  %216 = shape_of(%214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%214, dtype="int16") /* ty=Tensor[(8, 11, 9), int16] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %219 = @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */;
  %220 = add(%217, %218) /* ty=Tensor[(8, 11, 9), int16] */;
  %221 = %219.1;
  (%220, %221)
}

def @func_1100(%var_1095: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), float32],) {
  %222 = cast(%var_1095, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %223 = cosh(%222) /* ty=Tensor[(8, 11, 9), float32] */;
  (%223,)
}

def @func_1216(%var_1200: Tensor[(4, 9, 288), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float32]) {
  %224 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %225 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %226 = %225.3;
  %227 = cast(%var_1200, dtype="float32") /* ty=Tensor[(4, 9, 288), float32] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%226, dtype="float32") /* ty=Tensor[(4, 9, 288), float32] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %231 = %224.2;
  %232 = power(%229, %230) /* ty=Tensor[(4, 9, 288), float32] */;
  (%231, %232)
}

def @func_2045(%var_2012: Tensor[(1540), float32], %var_2032: Tensor[(396), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32], Tensor[(8, 11, 9), float32], Tensor[(36, 22), float32], Tensor[(4, 9, 11), int8], Tensor[(396), float32], Tensor[(4, 9, 14), bool], Tensor[(4, 9, 1), float32]) {
  %233 = @func_2002() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 9, 1), float32]) */;
  %234 = cast(%var_2012, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %235 = cast(%var_2012, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %236 = reshape(%234, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %237 = reshape(%235, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %238 = cast(meta[relay.Constant][14] /* ty=Tensor[(36, 22), float32] */, dtype="float32") /* ty=Tensor[(36, 22), float32] */;
  %239 = reshape(%238, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %240 = @func_1100(%239) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %241 = cast(%var_2032, dtype="float32") /* ty=Tensor[(396), float32] */;
  %242 = reshape(%241, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
  %243 = @func_280(%242) /* ty=(Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) */;
  %244 = cast(%var_2032, dtype="float32") /* ty=Tensor[(396), float32] */;
  %245 = reshape(%244, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %246 = @func_1556(%245) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %247 = cast(%var_2012, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %248 = reshape(%247, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %249 = @func_926(%248) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %250 = %233.1;
  %251 = @func_164(%236, %237) /* ty=Tensor[(10, 14, 11), float32] */;
  %252 = %240.0;
  %253 = %243.0;
  %254 = %246.0;
  %255 = %249.1;
  (%250, %251, %var_2012, %252, meta[relay.Constant][14] /* ty=Tensor[(36, 22), float32] */, %253, %var_2032, %254, %255)
}

def @func_5482() -> (Tensor[(7, 220), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
  %256 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %257 = @func_2445() /* ty=Tensor[(7, 220), float32] */;
  %258 = @func_2477() /* ty=Tensor[(4, 9, 1), float32] */;
  %259 = %256.2;
  (%257, %258, %259)
}

def @func_5912(%var_5894: Tensor[(4, 8, 14), float32], %var_5895: Tensor[(4, 8, 14), float32]) -> (Tensor[(4, 8, 14), bool], Tensor[(4, 8, 14), float64]) {
  %260 = cast(%var_5895, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %261 = shape_of(%var_5894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%var_5894, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %264 = cast(%var_5894, dtype="float64") /* ty=Tensor[(4, 8, 14), float64] */;
  %265 = greater_equal(%262, %263) /* ty=Tensor[(4, 8, 14), bool] */;
  %266 = log(%264) /* ty=Tensor[(4, 8, 14), float64] */;
  (%265, %266)
}

def @func_5721() -> (Tensor[(7, 220), float64],) {
  %267 = @func_3392() /* ty=(Tensor[(7, 220), float32],) */;
  %268 = %267.0;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
  %270 = log(%269) /* ty=Tensor[(7, 220), float64] */;
  (%270,)
}

def @func_5765() -> (Tensor[(10, 14, 11), uint8], Tensor[(4, 9, ?), int16]) {
  %271 = @func_4263() /* ty=(Tensor[(4, 9, ?), int16], Tensor[(4, 9, ?), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) */;
  %272 = @func_2404() /* ty=Tensor[(10, 14, 11), uint8] */;
  %273 = %271.0;
  (%272, %273)
}

def @func_33(%var_19: Tensor[(12, 12, 2), uint8], %var_20: Tensor[(12, 12, 2), uint8]) -> (Tensor[(12, 12, 2), uint8],) {
  %274 = cast(%var_20, dtype="uint8") /* ty=Tensor[(12, 12, 2), uint8] */;
  %275 = shape_of(%var_19, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%var_19, dtype="uint8") /* ty=Tensor[(12, 12, 2), uint8] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %278 = bitwise_and(%276, %277) /* ty=Tensor[(12, 12, 2), uint8] */;
  (%278,)
}

def @func_3953() -> (Tensor[(4, 9, 1), float32],) {
  %279 = @func_2344() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %280 = %279.0;
  (%280,)
}

def @func_2404() -> Tensor[(10, 14, 11), uint8] {
  %281 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %281.0
}

def @func_6229() -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float64], Tensor[(4, 9, 1), float64]) {
  %282 = @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %283 = @func_5482() /* ty=(Tensor[(7, 220), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %284 = %283.2;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(10, 14, 11), float64] */;
  %286 = @func_2477() /* ty=Tensor[(4, 9, 1), float32] */;
  %287 = cast(%286, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %288 = @func_3204() /* ty=Tensor[(4, 9, 1), float32] */;
  %289 = @func_5518() /* ty=Tensor[(4, 9, 1), float32] */;
  %290 = %282.0;
  %291 = acos(%285) /* ty=Tensor[(10, 14, 11), float64] */;
  %292 = asinh(%287) /* ty=Tensor[(4, 9, 1), float64] */;
  (%288, %289, %290, %291, %292)
}

def @func_3863() -> (Tensor[(10, 14, 11), float32], Tensor[(8, 11, 9), float32], Tensor[(12, 66), float64]) {
  %293 = @func_2108() /* ty=(Tensor[(10, 14, 11), float32],) */;
  %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 66), float32] */, dtype="float32") /* ty=Tensor[(12, 66), float32] */;
  %295 = reshape(%294, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %296 = @func_1100(%295) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %297 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 66), float32] */, dtype="float64") /* ty=Tensor[(12, 66), float64] */;
  %298 = %293.0;
  %299 = %296.0;
  %300 = sin(%297) /* ty=Tensor[(12, 66), float64] */;
  (%298, %299, %300)
}

def @func_1033(%var_1010: Tensor[(4, 9, 288), int8]) -> (Tensor[(4, 9, 288), float64],) {
  %301 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %302 = %301.3;
  %303 = cast(%var_1010, dtype="uint16") /* ty=Tensor[(4, 9, 288), uint16] */;
  %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%302, dtype="uint16") /* ty=Tensor[(4, 9, 288), uint16] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %307 = right_shift(%305, %306) /* ty=Tensor[(4, 9, 288), uint16] */;
  %308 = cast(%307, dtype="float32") /* ty=Tensor[(4, 9, 288), float32] */;
  %309 = acosh(%308) /* ty=Tensor[(4, 9, 288), float32] */;
  %310 = cast(%307, dtype="int32") /* ty=Tensor[(4, 9, 288), int32] */;
  %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%309, dtype="int32") /* ty=Tensor[(4, 9, 288), int32] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %314 = logical_xor(%312, %313) /* ty=Tensor[(4, 9, 288), int32] */;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(4, 9, 288), float64] */;
  %316 = atanh(%315) /* ty=Tensor[(4, 9, 288), float64] */;
  (%316,)
}

def @func_4823(%var_4767: Tensor[(9, 10, 14), float64], %var_4815: Tensor[(14, 70), int32]) -> (Tensor[(9, 10, 14), float64], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), int32]) {
  %317 = cast(%var_4767, dtype="float64") /* ty=Tensor[(9, 10, 14), float64] */;
  %318 = asinh(%317) /* ty=Tensor[(9, 10, 14), float64] */;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(9, 10, 14), float64] */;
  %320 = @func_3863() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(8, 11, 9), float32], Tensor[(12, 66), float64]) */;
  %321 = cast(%var_4815, dtype="int32") /* ty=Tensor[(14, 70), int32] */;
  %322 = reshape(%321, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), int32] */;
  %323 = cos(%319) /* ty=Tensor[(9, 10, 14), float64] */;
  %324 = %320.0;
  %325 = @func_4298(%322) /* ty=Tensor[(10, 14, 7), float32] */;
  (%323, %324, %325, %var_4815)
}

def @func_1684() -> (Tensor[(4, 9, 1), float32],) {
  %326 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  (%326,)
}

def @func_5422(%var_5329: Tensor[(4, 9, 4), float32], %var_5417: Tensor[(4, 9, 4), float32]) -> (Tensor[(4, 9, 4), bool], Tensor[(4, 9, 1), float32], Tensor[(1540, 1), float32], Tensor[(12, 66), float64], Tensor[(4, 9, 4), int32]) {
  %327 = @func_4757() /* ty=Tensor[(4, 9, 1), float32] */;
  %328 = cast(%var_5329, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %329 = cast(%327, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %330 = cast(meta[relay.Constant][16] /* ty=Tensor[(1540, 1), float32] */, dtype="float32") /* ty=Tensor[(1540, 1), float32] */;
  %331 = reshape(%330, newshape=[7, 220]) /* ty=Tensor[(7, 220), float32] */;
  %332 = @func_5293(%331) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float64], Tensor[(7, 220), float64]) */;
  %333 = @func_3863() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(8, 11, 9), float32], Tensor[(12, 66), float64]) */;
  %334 = cast(%327, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %335 = cast(%var_5329, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %336 = power(%334, %335) /* ty=Tensor[(4, 9, 4), float32] */;
  %337 = cast(%336, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %338 = rsqrt(%337) /* ty=Tensor[(4, 9, 4), float32] */;
  %339 = cast(%338, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %340 = erf(%339) /* ty=Tensor[(4, 9, 4), float32] */;
  %341 = cast(%var_5417, dtype="int32") /* ty=Tensor[(4, 9, 4), int32] */;
  %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%340, dtype="int32") /* ty=Tensor[(4, 9, 4), int32] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %345 = greater(%328, %329) /* ty=Tensor[(4, 9, 4), bool] */;
  %346 = %332.0;
  %347 = %333.2;
  %348 = left_shift(%343, %344) /* ty=Tensor[(4, 9, 4), int32] */;
  (%345, %346, meta[relay.Constant][16] /* ty=Tensor[(1540, 1), float32] */, %347, %348)
}

def @func_110(%var_72: Tensor[(4, 4, 5), float32], %var_85: Tensor[(288), uint8]) -> (Tensor[(12, 12, 2), uint8], Tensor[(288), uint8], Tensor[(4, 4, 5), float32], Tensor[(12, 12, 2), uint8]) {
  %349 = cast(%var_85, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %350 = cast(%var_85, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %351 = reshape(%349, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %352 = reshape(%350, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %353 = @func_33(%351, %352) /* ty=(Tensor[(12, 12, 2), uint8],) */;
  %354 = cast(%var_72, dtype="float32") /* ty=Tensor[(4, 4, 5), float32] */;
  %355 = cosh(%354) /* ty=Tensor[(4, 4, 5), float32] */;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(4, 4, 5), float32] */;
  %357 = cast(%var_85, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %358 = cast(%var_85, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %359 = reshape(%357, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %360 = reshape(%358, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %361 = @func_33(%359, %360) /* ty=(Tensor[(12, 12, 2), uint8],) */;
  %362 = %353.0;
  %363 = acos(%356) /* ty=Tensor[(4, 4, 5), float32] */;
  %364 = %361.0;
  (%362, %var_85, %363, %364)
}

def @func_4124(%var_4107: Tensor[(4, 9, 5), uint32]) -> Tensor[(4, 9, 5), uint64] {
  %365 = @func_2698() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %366 = %365.0;
  %367 = cast(%366, dtype="uint32") /* ty=Tensor[(4, 9, 1), uint32] */;
  %368 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 9, 5), float32] */, dtype="uint32") /* ty=Tensor[(4, 9, 5), uint32] */;
  %369 = maximum(%367, %368) /* ty=Tensor[(4, 9, 5), uint32] */;
  %370 = cast(%var_4107, dtype="uint64") /* ty=Tensor[(4, 9, 5), uint64] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="uint64") /* ty=Tensor[(4, 9, 5), uint64] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%372, %373) /* ty=Tensor[(4, 9, 5), uint64] */
}

def @func_5783() -> (Tensor[(7, 220), float32],) {
  %374 = @func_5482() /* ty=(Tensor[(7, 220), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %375 = %374.0;
  (%375,)
}

def @func_6011() -> (Tensor[(4, 9, 1), float32],) {
  %376 = @func_3595() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) */;
  %377 = %376.0;
  (%377,)
}

def @func_2477() -> Tensor[(4, 9, 1), float32] {
  %378 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %378.0
}

def @func_2634(%var_2552: Tensor[(5, 10, 10), float64], %var_2553: Tensor[(5, 10, 10), float64], %var_2624: Tensor[(180), float32], %var_2626: Tensor[(936), int16], %var_2627: Tensor[(12, 36), float32]) -> (Tensor[(5, 10, 10), float32], Tensor[(36, 22), float32], Tensor[(7, 220), float32], Tensor[(396), float32], Tensor[(5, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(4, 9, 5), bool], Tensor[(180), float32], Tensor[(48, 216), int8], Tensor[(936), int16], Tensor[(12, 36), float32]) {
  %379 = cast(%var_2553, dtype="float64") /* ty=Tensor[(5, 10, 10), float64] */;
  %380 = shape_of(%var_2552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%var_2552, dtype="float64") /* ty=Tensor[(5, 10, 10), float64] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %383 = floor_divide(%381, %382) /* ty=Tensor[(5, 10, 10), float64] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(5, 10, 10), float32] */;
  %385 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 220), float32] */, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %386 = cast(meta[relay.Constant][19] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %387 = reshape(%385, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %388 = reshape(%386, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %389 = @func_2045(%387, %388) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32], Tensor[(8, 11, 9), float32], Tensor[(36, 22), float32], Tensor[(4, 9, 11), int8], Tensor[(396), float32], Tensor[(4, 9, 14), bool], Tensor[(4, 9, 1), float32]) */;
  %390 = cast(%var_2553, dtype="float64") /* ty=Tensor[(5, 10, 10), float64] */;
  %391 = sin(%390) /* ty=Tensor[(5, 10, 10), float64] */;
  %392 = cast(%391, dtype="float64") /* ty=Tensor[(5, 10, 10), float64] */;
  %393 = cast(%var_2552, dtype="float32") /* ty=Tensor[(5, 10, 10), float32] */;
  %394 = cast(%var_2624, dtype="float32") /* ty=Tensor[(180), float32] */;
  %395 = cast(meta[relay.Constant][20] /* ty=Tensor[(48, 216), int8] */, dtype="int8") /* ty=Tensor[(48, 216), int8] */;
  %396 = cast(%var_2626, dtype="int16") /* ty=Tensor[(936), int16] */;
  %397 = cast(%var_2627, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %398 = reshape(%394, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), float32] */;
  %399 = reshape(%395, newshape=[10368]) /* ty=Tensor[(10368), int8] */;
  %400 = reshape(%396, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %401 = reshape(%397, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float32] */;
  %402 = @func_1972(%398, %399, %400, %401) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %403 = cosh(%384) /* ty=Tensor[(5, 10, 10), float32] */;
  %404 = %389.4;
  %405 = cos(%392) /* ty=Tensor[(5, 10, 10), float64] */;
  %406 = tan(%393) /* ty=Tensor[(5, 10, 10), float32] */;
  %407 = %402.14;
  (%403, %404, meta[relay.Constant][18] /* ty=Tensor[(7, 220), float32] */, meta[relay.Constant][19] /* ty=Tensor[(396), float32] */, %405, %406, %407, %var_2624, meta[relay.Constant][20] /* ty=Tensor[(48, 216), int8] */, %var_2626, %var_2627)
}

def @func_2971(%var_2926: Tensor[(936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(72), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 12), int8], Tensor[(8, 11, 9), float32], Tensor[(8, 11, 9), float32], Tensor[(4, 9, 936), bool], Tensor[(4, 9, 1), float32]) {
  %408 = cast(meta[relay.Constant][21] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %409 = cast(meta[relay.Constant][21] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %410 = reshape(%408, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), float32] */;
  %411 = reshape(%409, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), float32] */;
  %412 = @func_773(%410, %411) /* ty=(Tensor[(12, 2, 3), int32], Tensor[(4, 9, 1), float32], Tensor[(12, 2, 3), float32]) */;
  %413 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %414 = cast(%413, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %415 = cosh(%414) /* ty=Tensor[(4, 9, 1), float64] */;
  %416 = cast(%415, dtype="int8") /* ty=Tensor[(4, 9, 1), int8] */;
  %417 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 9, 12), float64] */, dtype="int8") /* ty=Tensor[(4, 9, 12), int8] */;
  %418 = cast(%var_2926, dtype="int16") /* ty=Tensor[(936), int16] */;
  %419 = reshape(%418, newshape=[8, 9, 13]) /* ty=Tensor[(8, 9, 13), int16] */;
  %420 = @func_1413(%419) /* ty=(Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */;
  %421 = %420.1;
  %422 = cast(%421, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %423 = reshape(%422, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %424 = @func_1100(%423) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %425 = cast(%415, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %426 = rsqrt(%425) /* ty=Tensor[(4, 9, 1), float32] */;
  %427 = cast(%426, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %428 = cast(%var_2926, dtype="bool") /* ty=Tensor[(936), bool] */;
  %429 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
  %430 = %412.1;
  %431 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  %432 = bitwise_or(%416, %417) /* ty=Tensor[(4, 9, 12), int8] */;
  %433 = %424.0;
  %434 = not_equal(%427, %428) /* ty=Tensor[(4, 9, 936), bool] */;
  %435 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
  (%429, %430, meta[relay.Constant][21] /* ty=Tensor[(72), float32] */, %431, %432, %421, %433, %434, %435)
}

def @func_381(%var_374: Tensor[(154, 10), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(154, 10), float32], Tensor[(12, 12, 2), uint8], Tensor[(4, 72), uint8]) {
  %436 = cast(%var_374, dtype="float32") /* ty=Tensor[(154, 10), float32] */;
  %437 = cast(%var_374, dtype="float32") /* ty=Tensor[(154, 10), float32] */;
  %438 = reshape(%436, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %439 = reshape(%437, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %440 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 72), uint8] */, dtype="uint8") /* ty=Tensor[(4, 72), uint8] */;
  %441 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 72), uint8] */, dtype="uint8") /* ty=Tensor[(4, 72), uint8] */;
  %442 = reshape(%440, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %443 = reshape(%441, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %444 = @func_33(%442, %443) /* ty=(Tensor[(12, 12, 2), uint8],) */;
  %445 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %446 = @func_164(%438, %439) /* ty=Tensor[(10, 14, 11), float32] */;
  %447 = %444.0;
  (%445, %446, %var_374, %447, meta[relay.Constant][23] /* ty=Tensor[(4, 72), uint8] */)
}

def @func_514() -> Tensor[(4, 9, 1), float32] {
  @func_194() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_2299() -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) {
  %448 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %449 = @func_2063() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %450 = %449.0;
  %451 = cast(%450, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %452 = @func_2002() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 9, 1), float32]) */;
  %453 = cast(meta[relay.Constant][24] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %454 = cast(meta[relay.Constant][24] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %455 = cast(meta[relay.Constant][24] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %456 = reshape(%453, newshape=[4, 7, 10]) /* ty=Tensor[(4, 7, 10), uint16] */;
  %457 = reshape(%454, newshape=[4, 7, 10]) /* ty=Tensor[(4, 7, 10), uint16] */;
  %458 = reshape(%455, newshape=[4, 7, 10]) /* ty=Tensor[(4, 7, 10), uint16] */;
  %459 = @func_2246(%456, %457, %458) /* ty=(Tensor[(4, 7, 10), bool], Tensor[(4, 7, 10), float64]) */;
  %460 = %448.6;
  %461 = sigmoid(%451) /* ty=Tensor[(4, 9, 1), float32] */;
  %462 = %452.1;
  %463 = %459.0;
  (%460, %461, %462, %463, meta[relay.Constant][24] /* ty=Tensor[(280), uint16] */)
}

def @func_1972(%var_1777: Tensor[(4, 9, 5), float32], %var_1830: Tensor[(10368), int8], %var_1906: Tensor[(936), int16], %var_1941: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) {
  %464 = cast(meta[relay.Constant][25] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %465 = reshape(%464, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
  %466 = @func_280(%465) /* ty=(Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) */;
  %467 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %468 = cast(meta[relay.Constant][26] /* ty=Tensor[(154, 10), float32] */, dtype="float32") /* ty=Tensor[(154, 10), float32] */;
  %469 = reshape(%468, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %470 = @func_926(%469) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %471 = cast(%var_1830, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %472 = reshape(%471, newshape=[4, 9, 288]) /* ty=Tensor[(4, 9, 288), int8] */;
  %473 = @func_1033(%472) /* ty=(Tensor[(4, 9, 288), float64],) */;
  %474 = cast(%var_1777, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %475 = sinh(%474) /* ty=Tensor[(4, 9, 5), float64] */;
  %476 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  %477 = cast(%476, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %478 = cast(%var_1777, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %479 = power(%477, %478) /* ty=Tensor[(4, 9, 5), float64] */;
  %480 = cast(%479, dtype="int64") /* ty=Tensor[(4, 9, 5), int64] */;
  %481 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%475, dtype="int64") /* ty=Tensor[(4, 9, 5), int64] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %484 = cast(%var_1830, dtype="float32") /* ty=Tensor[(10368), float32] */;
  %485 = cast(%476, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %486 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %487 = cast(%var_1906, dtype="int16") /* ty=Tensor[(936), int16] */;
  %488 = reshape(%487, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %489 = @func_1710(%488) /* ty=(Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) */;
  %490 = cast(%475, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
  %491 = sigmoid(%490) /* ty=Tensor[(4, 9, 5), float32] */;
  %492 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  %493 = cast(%491, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
  %494 = cast(%492, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %495 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %496 = cast(%492, dtype="uint16") /* ty=Tensor[(4, 9, 1), uint16] */;
  %497 = cast(%var_1941, dtype="uint16") /* ty=Tensor[(4, 9, 12), uint16] */;
  %498 = cast(meta[relay.Constant][25] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %499 = reshape(%498, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %500 = @func_1556(%499) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %501 = %495.1;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %503 = reshape(%502, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %504 = @func_926(%503) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %505 = %466.1;
  %506 = %467.2;
  %507 = %470.0;
  %508 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %509 = %473.0;
  %510 = bitwise_or(%482, %483) /* ty=Tensor[(4, 9, 5), int64] */;
  %511 = floor_divide(%484, %485) /* ty=Tensor[(4, 9, 10368), float32] */;
  %512 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %513 = %486.0;
  %514 = %489.1;
  %515 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  %516 = logical_and(%493, %494) /* ty=Tensor[(4, 9, 5), bool] */;
  %517 = maximum(%496, %497) /* ty=Tensor[(4, 9, 12), uint16] */;
  %518 = %500.2;
  %519 = %504.2;
  (%505, meta[relay.Constant][25] /* ty=Tensor[(396), float32] */, %506, %507, meta[relay.Constant][26] /* ty=Tensor[(154, 10), float32] */, %508, %509, %510, %511, %512, %513, %514, %var_1906, %515, %516, %501, %517, %518, %519)
}

def @func_1556(%var_1508: Tensor[(6, 66), float32]) -> (Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) {
  %520 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  %521 = cast(%520, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %522 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 9, 14), float32] */, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %523 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %524 = cast(%var_1508, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %525 = reshape(%524, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
  %526 = @func_280(%525) /* ty=(Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) */;
  %527 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %528 = %527.4;
  %529 = cast(%528, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %530 = atan(%529) /* ty=Tensor[(10, 14, 11), float32] */;
  %531 = cast(%530, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %532 = cast(%530, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %533 = greater_equal(%521, %522) /* ty=Tensor[(4, 9, 14), bool] */;
  %534 = %523.2;
  %535 = %526.1;
  %536 = sin(%531) /* ty=Tensor[(10, 14, 11), float32] */;
  %537 = log10(%532) /* ty=Tensor[(10, 14, 11), float32] */;
  (%533, %534, %535, %var_1508, %536, %537)
}

def @func_2002() -> (Tensor[(4, 4, 5), float32], Tensor[(4, 9, 1), float32]) {
  %538 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %539 = %538.0;
  %540 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  (%539, %540)
}

def @func_4355() -> (Tensor[(4, 9, 1), float32],) {
  %541 = @func_3953() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %542 = %541.0;
  (%542,)
}

def @func_4401(%var_4392: Tensor[(50, 10), float64]) -> (Tensor[(4, 9, 1), float32], Tensor[(12, 36), float32], Tensor[(50, 10), float64], Tensor[(180), float32], Tensor[(6, 156), int16], Tensor[(432), float32], Tensor[(4, 9, 1), float32]) {
  %543 = @func_700() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %544 = cast(%var_4392, dtype="float64") /* ty=Tensor[(50, 10), float64] */;
  %545 = cast(%var_4392, dtype="float64") /* ty=Tensor[(50, 10), float64] */;
  %546 = cast(meta[relay.Constant][28] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %547 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 156), int16] */, dtype="int16") /* ty=Tensor[(6, 156), int16] */;
  %548 = cast(meta[relay.Constant][30] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %549 = reshape(%544, newshape=[5, 10, 10]) /* ty=Tensor[(5, 10, 10), float64] */;
  %550 = reshape(%545, newshape=[5, 10, 10]) /* ty=Tensor[(5, 10, 10), float64] */;
  %551 = reshape(%546, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %552 = reshape(%547, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %553 = reshape(%548, newshape=[12, 36]) /* ty=Tensor[(12, 36), float32] */;
  %554 = @func_2634(%549, %550, %551, %552, %553) /* ty=(Tensor[(5, 10, 10), float32], Tensor[(36, 22), float32], Tensor[(7, 220), float32], Tensor[(396), float32], Tensor[(5, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(4, 9, 5), bool], Tensor[(180), float32], Tensor[(48, 216), int8], Tensor[(936), int16], Tensor[(12, 36), float32]) */;
  %555 = @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %556 = %543.1;
  %557 = %554.10;
  %558 = %555.0;
  (%556, %557, %var_4392, meta[relay.Constant][28] /* ty=Tensor[(180), float32] */, meta[relay.Constant][29] /* ty=Tensor[(6, 156), int16] */, meta[relay.Constant][30] /* ty=Tensor[(432), float32] */, %558)
}

def @func_4985() -> (Tensor[(4, 9, 1), float32],) {
  %559 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %560 = %559.0;
  (%560,)
}

def @func_2344() -> (Tensor[(4, 9, 1), float32],) {
  %561 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  (%561,)
}

def @func_6146(%var_6137: Tensor[(980), int32]) -> (Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1386), bool], Tensor[(9, 10, 14), float64], Tensor[(1260), float64], Tensor[(980), int32]) {
  %562 = cast(meta[relay.Constant][31] /* ty=Tensor[(1386), uint8] */, dtype="uint8") /* ty=Tensor[(1386), uint8] */;
  %563 = reshape(%562, newshape=[14, 9, 11]) /* ty=Tensor[(14, 9, 11), uint8] */;
  %564 = @func_5657(%563) /* ty=(Tensor[(14, 9, 11), bool], Tensor[(4, 9, ?), float32], Tensor[(396), float32], Tensor[(4, 9, 1), float32], Tensor[(14, 9, 11), float64]) */;
  %565 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %566 = %565.1;
  %567 = cast(meta[relay.Constant][31] /* ty=Tensor[(1386), uint8] */, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %568 = cast(%566, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %569 = cast(meta[relay.Constant][32] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %570 = cast(%var_6137, dtype="int32") /* ty=Tensor[(980), int32] */;
  %571 = reshape(%569, newshape=[9, 10, 14]) /* ty=Tensor[(9, 10, 14), float64] */;
  %572 = reshape(%570, newshape=[14, 70]) /* ty=Tensor[(14, 70), int32] */;
  %573 = @func_4823(%571, %572) /* ty=(Tensor[(9, 10, 14), float64], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), int32]) */;
  %574 = %564.1;
  %575 = greater_equal(%567, %568) /* ty=Tensor[(4, 9, 1386), bool] */;
  %576 = %573.0;
  (%574, %575, %576, meta[relay.Constant][32] /* ty=Tensor[(1260), float64] */, %var_6137)
}

def @func_5506() -> (Tensor[(4, 9, ?), float32],) {
  %577 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %578 = %577.2;
  (%578,)
}

def @func_4298(%var_4286: Tensor[(10, 14, 7), int32]) -> Tensor[(10, 14, 7), float32] {
  %579 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 14, 7), int32] */, dtype="int32") /* ty=Tensor[(10, 14, 7), int32] */;
  %580 = shape_of(%var_4286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%var_4286, dtype="int32") /* ty=Tensor[(10, 14, 7), int32] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %583 = bitwise_xor(%581, %582) /* ty=Tensor[(10, 14, 7), int32] */;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(10, 14, 7), float32] */;
  erf(%584) /* ty=Tensor[(10, 14, 7), float32] */
}

def @func_4637() -> Tensor[(4, 9, 288), float64] {
  %585 = @func_4263() /* ty=(Tensor[(4, 9, ?), int16], Tensor[(4, 9, ?), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) */;
  %585.2
}

def @func_4263() -> (Tensor[(4, 9, ?), int16], Tensor[(4, 9, ?), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) {
  %586 = @func_3523() /* ty=Tensor[(4, 9, 1), float32] */;
  %587 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="int16") /* ty=Tensor[(4, 9, 1), int16] */;
  %590 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%586, dtype="int16") /* ty=Tensor[(4, 9, 1), int16] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %593 = cast(%588, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %594 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%586, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %597 = cast(meta[relay.Constant][34] /* ty=Tensor[(10368), int8] */, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %598 = reshape(%597, newshape=[4, 9, 288]) /* ty=Tensor[(4, 9, 288), int8] */;
  %599 = @func_1033(%598) /* ty=(Tensor[(4, 9, 288), float64],) */;
  %600 = multiply(%591, %592) /* ty=Tensor[(4, 9, ?), int16] */;
  %601 = floor_divide(%595, %596) /* ty=Tensor[(4, 9, ?), float64] */;
  %602 = %599.0;
  (%600, %601, %602, meta[relay.Constant][34] /* ty=Tensor[(10368), int8] */)
}

def @func_313(%var_307: float64, %var_308: Tensor[(1, 14), float64]) -> Tensor[(1, 14), bool] {
  %603 = cast(%var_307, dtype="bool") /* ty=bool */;
  %604 = cast(%var_308, dtype="bool") /* ty=Tensor[(1, 14), bool] */;
  less_equal(%603, %604) /* ty=Tensor[(1, 14), bool] */
}

def @func_4342() -> Tensor[(4, 9, 1), float32] {
  %605 = @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */;
  %605.0
}

def @func_5053(%var_5048: Tensor[(4, 9, 10), float64]) -> (Tensor[(4, 9, 10), bool],) {
  %606 = @func_2773() /* ty=Tensor[(4, 9, 1), float64] */;
  %607 = cast(%606, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %608 = cast(%var_5048, dtype="bool") /* ty=Tensor[(4, 9, 10), bool] */;
  %609 = logical_and(%607, %608) /* ty=Tensor[(4, 9, 10), bool] */;
  (%609,)
}

def @func_773(%var_719: Tensor[(12, 2, 3), float32], %var_720: Tensor[(12, 2, 3), float32]) -> (Tensor[(12, 2, 3), int32], Tensor[(4, 9, 1), float32], Tensor[(12, 2, 3), float32]) {
  %610 = cast(%var_719, dtype="int32") /* ty=Tensor[(12, 2, 3), int32] */;
  %611 = shape_of(%var_720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_720, dtype="int32") /* ty=Tensor[(12, 2, 3), int32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %614 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %615 = cast(%var_720, dtype="bool") /* ty=Tensor[(12, 2, 3), bool] */;
  %616 = shape_of(%var_719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%var_719, dtype="bool") /* ty=Tensor[(12, 2, 3), bool] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %619 = less(%617, %618) /* ty=Tensor[(12, 2, 3), bool] */;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(12, 2, 3), float32] */;
  %621 = right_shift(%612, %613) /* ty=Tensor[(12, 2, 3), int32] */;
  %622 = %614.1;
  %623 = erf(%620) /* ty=Tensor[(12, 2, 3), float32] */;
  (%621, %622, %623)
}

def @func_3807(%var_3784: Tensor[(16, 1, 10), float64], %var_3805: Tensor[(144, 2), uint8]) -> (Tensor[(16, 1, 10), bool], Tensor[(7, 16, 10), bool], Tensor[(1120), bool], Tensor[(7, 220), float32], Tensor[(288), uint8], Tensor[(80), float32], Tensor[(144, 2), uint8]) {
  %624 = cast(-6.37023f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %625 = cast(%var_3784, dtype="bool") /* ty=Tensor[(16, 1, 10), bool] */;
  %626 = cast(meta[relay.Constant][35] /* ty=Tensor[(1120), bool] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %627 = cast(meta[relay.Constant][35] /* ty=Tensor[(1120), bool] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %628 = reshape(%626, newshape=[7, 16, 10]) /* ty=Tensor[(7, 16, 10), bool] */;
  %629 = reshape(%627, newshape=[7, 16, 10]) /* ty=Tensor[(7, 16, 10), bool] */;
  %630 = cast(meta[relay.Constant][36] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %631 = cast(%var_3805, dtype="uint8") /* ty=Tensor[(144, 2), uint8] */;
  %632 = reshape(%630, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float32] */;
  %633 = reshape(%631, newshape=[288]) /* ty=Tensor[(288), uint8] */;
  %634 = @func_110(%632, %633) /* ty=(Tensor[(12, 12, 2), uint8], Tensor[(288), uint8], Tensor[(4, 4, 5), float32], Tensor[(12, 12, 2), uint8]) */;
  %635 = not_equal(%624, %625) /* ty=Tensor[(16, 1, 10), bool] */;
  %636 = @func_3645(%628, %629) /* ty=Tensor[(7, 16, 10), bool] */;
  %637 = @func_2445() /* ty=Tensor[(7, 220), float32] */;
  %638 = %634.1;
  (%635, %636, meta[relay.Constant][35] /* ty=Tensor[(1120), bool] */, %637, %638, meta[relay.Constant][36] /* ty=Tensor[(80), float32] */, %var_3805)
}

def @func_4757() -> Tensor[(4, 9, 1), float32] {
  @func_4668() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_3543() -> (Tensor[(4, 9, 1), float32],) {
  %639 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  (%639,)
}

def @func_3595() -> (Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) {
  %640 = @func_2698() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %641 = cast(meta[relay.Constant][37] /* ty=Tensor[(288), uint8] */, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %642 = cast(meta[relay.Constant][37] /* ty=Tensor[(288), uint8] */, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %643 = reshape(%641, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %644 = reshape(%642, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %645 = @func_33(%643, %644) /* ty=(Tensor[(12, 12, 2), uint8],) */;
  %646 = %640.0;
  %647 = %645.0;
  (%646, %647, meta[relay.Constant][37] /* ty=Tensor[(288), uint8] */)
}

def @func_577() -> (Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) {
  %648 = cast(meta[relay.Constant][38] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %649 = cast(meta[relay.Constant][39] /* ty=Tensor[(288), uint8] */, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %650 = reshape(%648, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float32] */;
  %651 = reshape(%649, newshape=[288]) /* ty=Tensor[(288), uint8] */;
  %652 = @func_110(%650, %651) /* ty=(Tensor[(12, 12, 2), uint8], Tensor[(288), uint8], Tensor[(4, 4, 5), float32], Tensor[(12, 12, 2), uint8]) */;
  %653 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %654 = %653.1;
  %655 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %657 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%654, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %660 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  %661 = cast(%660, dtype="int8") /* ty=Tensor[(4, 9, 1), int8] */;
  %662 = cast(meta[relay.Constant][39] /* ty=Tensor[(288), uint8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %663 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 220), float32] */, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %664 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 220), float32] */, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %665 = reshape(%663, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %666 = reshape(%664, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %667 = %652.2;
  %668 = power(%658, %659) /* ty=Tensor[(4, 9, ?), float32] */;
  %669 = left_shift(%661, %662) /* ty=Tensor[(4, 9, 288), int8] */;
  %670 = @func_164(%665, %666) /* ty=Tensor[(10, 14, 11), float32] */;
  (%667, meta[relay.Constant][38] /* ty=Tensor[(80), float32] */, %668, %669, %670, meta[relay.Constant][40] /* ty=Tensor[(7, 220), float32] */)
}

def @func_700() -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) {
  %671 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %672 = %671.4;
  %673 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  (%672, %673)
}

def @func_5195(%var_5170: Tensor[(1540), float32], %var_5178: Tensor[(180), float32], %var_5179: Tensor[(10368), int8], %var_5185: Tensor[(4, 9, 10368), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(1540), float32], Tensor[(180), float32], Tensor[(10368), int8], Tensor[(1, 936), int16], Tensor[(432), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 10368), float64]) {
  %674 = @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %675 = cast(%var_5170, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %676 = reshape(%675, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %677 = @func_926(%676) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %678 = @func_4985() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %679 = cast(%var_5178, dtype="float32") /* ty=Tensor[(180), float32] */;
  %680 = cast(%var_5179, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %681 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 936), int16] */, dtype="int16") /* ty=Tensor[(1, 936), int16] */;
  %682 = cast(meta[relay.Constant][42] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %683 = reshape(%679, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), float32] */;
  %684 = reshape(%680, newshape=[10368]) /* ty=Tensor[(10368), int8] */;
  %685 = reshape(%681, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %686 = reshape(%682, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float32] */;
  %687 = @func_1972(%683, %684, %685, %686) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %688 = %687.8;
  %689 = cast(%var_5185, dtype="float64") /* ty=Tensor[(4, 9, 10368), float64] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="float64") /* ty=Tensor[(4, 9, 10368), float64] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %693 = %674.0;
  %694 = %677.1;
  %695 = %678.0;
  %696 = mod(%691, %692) /* ty=Tensor[(4, 9, 10368), float64] */;
  (%693, %694, %var_5170, %var_5178, %var_5179, meta[relay.Constant][41] /* ty=Tensor[(1, 936), int16] */, meta[relay.Constant][42] /* ty=Tensor[(432), float32] */, %695, %696)
}

def @func_5598() -> (Tensor[(4, 9, 1), float32],) {
  %697 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %698 = %697.2;
  (%698,)
}

def @func_3367(%var_3337: Tensor[(10368), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(10, 14, 11), bool], Tensor[(936), int16], Tensor[(4, 9, 288), float64]) {
  %699 = @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */;
  %700 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %701 = cast(meta[relay.Constant][43] /* ty=Tensor[(936), int16] */, dtype="int16") /* ty=Tensor[(936), int16] */;
  %702 = reshape(%701, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %703 = @func_1710(%702) /* ty=(Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) */;
  %704 = cast(%var_3337, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %705 = reshape(%704, newshape=[4, 9, 288]) /* ty=Tensor[(4, 9, 288), int8] */;
  %706 = @func_1216(%705) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float32]) */;
  %707 = %706.1;
  %708 = cast(%var_3337, dtype="float64") /* ty=Tensor[(10368), float64] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%707, dtype="float64") /* ty=Tensor[(4, 9, 288), float64] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %712 = %699.2;
  %713 = %700.0;
  %714 = %703.0;
  %715 = floor_divide(%710, %711) /* ty=Tensor[(4, 9, 288), float64] */;
  (%712, %713, %714, meta[relay.Constant][43] /* ty=Tensor[(936), int16] */, %715)
}

def @func_3043(%var_3021: Tensor[(7, 220), float32]) -> Tensor[(7, 220), float32] {
  %716 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %717 = %716.0;
  %718 = cast(%717, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %719 = atanh(%718) /* ty=Tensor[(7, 220), float32] */;
  %720 = cast(%var_3021, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(2), int32] */;
  %722 = cast(%719, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %724 = divide(%722, %723) /* ty=Tensor[(7, 220), float32] */;
  %725 = cast(%724, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %726 = shape_of(%var_3021, dtype="int32") /* ty=Tensor[(2), int32] */;
  %727 = cast(%var_3021, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  power(%727, %728) /* ty=Tensor[(7, 220), float32] */
}

def @func_4598() -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
  %729 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %730 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
  %731 = %729.2;
  (%730, %731)
}

def @func_1179() -> Tensor[(4, 9, 1), float32] {
  %732 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %732.2
}

def @func_3244(%var_3229: Tensor[(936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(8, 9, 13), int16], Tensor[(936), int16], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
  %733 = cast(%var_3229, dtype="int16") /* ty=Tensor[(936), int16] */;
  %734 = reshape(%733, newshape=[8, 9, 13]) /* ty=Tensor[(8, 9, 13), int16] */;
  %735 = @func_1413(%734) /* ty=(Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */;
  %736 = cast(meta[relay.Constant][44] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %737 = cast(meta[relay.Constant][44] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %738 = reshape(%736, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %739 = reshape(%737, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %740 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
  %741 = %735.0;
  %742 = @func_164(%738, %739) /* ty=Tensor[(10, 14, 11), float32] */;
  (%740, %741, %var_3229, %742, meta[relay.Constant][44] /* ty=Tensor[(1540), float32] */)
}

def @func_1617() -> (Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
  %743 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %744 = %743.1;
  %745 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 14, 11), float32] */, dtype="uint8") /* ty=Tensor[(10, 14, 11), uint8] */;
  %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%744, dtype="uint8") /* ty=Tensor[(10, 14, 11), uint8] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %749 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %750 = cast(%744, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %751 = logical_xor(%747, %748) /* ty=Tensor[(10, 14, 11), uint8] */;
  %752 = %749.3;
  %753 = sqrt(%750) /* ty=Tensor[(10, 14, 11), float32] */;
  (%751, %752, %753)
}

def @func_4500() -> Tensor[(4, 9, 1), float32] {
  %754 = @func_3543() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %754.0
}

def @func_1710(%var_1701: Tensor[(936), int16]) -> (Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) {
  %755 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %756 = %755.0;
  %757 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 14, 11), uint8] */, dtype="bool") /* ty=Tensor[(10, 14, 11), bool] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="bool") /* ty=Tensor[(10, 14, 11), bool] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %761 = cast(%var_1701, dtype="int16") /* ty=Tensor[(936), int16] */;
  %762 = reshape(%761, newshape=[8, 9, 13]) /* ty=Tensor[(8, 9, 13), int16] */;
  %763 = @func_1413(%762) /* ty=(Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */;
  %764 = greater(%759, %760) /* ty=Tensor[(10, 14, 11), bool] */;
  %765 = %763.1;
  (%764, %765, %var_1701)
}

def @func_3392() -> (Tensor[(7, 220), float32],) {
  %766 = @func_2445() /* ty=Tensor[(7, 220), float32] */;
  (%766,)
}

def @func_4020(%var_3997: Tensor[(14, 10, 11), float64], %var_4002: Tensor[(2, 144), uint8]) -> (Tensor[(14, 10, 11), float64], Tensor[(80, 2), float64], Tensor[(2, 144), uint8], Tensor[(7, 220), int64]) {
  %767 = cast(%var_3997, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %768 = cast(meta[relay.Constant][47] /* ty=Tensor[(80, 2), float64] */, dtype="float64") /* ty=Tensor[(80, 2), float64] */;
  %769 = cast(%var_4002, dtype="uint8") /* ty=Tensor[(2, 144), uint8] */;
  %770 = reshape(%768, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), float64] */;
  %771 = reshape(%769, newshape=[144, 2]) /* ty=Tensor[(144, 2), uint8] */;
  %772 = @func_3807(%770, %771) /* ty=(Tensor[(16, 1, 10), bool], Tensor[(7, 16, 10), bool], Tensor[(1120), bool], Tensor[(7, 220), float32], Tensor[(288), uint8], Tensor[(80), float32], Tensor[(144, 2), uint8]) */;
  %773 = %772.3;
  %774 = cast(%var_3997, dtype="int64") /* ty=Tensor[(14, 10, 11), int64] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(2), int32] */;
  %776 = cast(%773, dtype="int64") /* ty=Tensor[(7, 220), int64] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %778 = log(%767) /* ty=Tensor[(14, 10, 11), float64] */;
  %779 = minimum(%776, %777) /* ty=Tensor[(7, 220), int64] */;
  (%778, meta[relay.Constant][47] /* ty=Tensor[(80, 2), float64] */, %var_4002, %779)
}

def @main() -> (Tensor[(4, 9, 288), float64],) {
  %780 = @func_4637() /* ty=Tensor[(4, 9, 288), float64] */;
  %781 = cast(%780, dtype="float64") /* ty=Tensor[(4, 9, 288), float64] */;
  %782 = asinh(%781) /* ty=Tensor[(4, 9, 288), float64] */;
  (%782,)
}

def @func_5868() -> Tensor[(4, 9, 1), float32] {
  %783 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %783.1
}

def @func_5518() -> Tensor[(4, 9, 1), float32] {
  %784 = @func_5127() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(1540), float32]) */;
  %784.0
}

def @func_959() -> Tensor[(4, 9, 1), float32] {
  @func_514() /* ty=Tensor[(4, 9, 1), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1415(%var_1414: Tensor[(8, 9, 13), int16]) -> (Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) {
  %9 = fn (%var_1368: Tensor[(8, 9, 13), int16]) -> (Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) {
    %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 9, 13), int16] */, dtype="int16") /* ty=Tensor[(8, 9, 13), int16] */;
    %1 = shape_of(%var_1368, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_1368, dtype="int16") /* ty=Tensor[(8, 9, 13), int16] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
    %5 = reshape(%4, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
    %6 = @func_1100(%5) /* ty=(Tensor[(8, 11, 9), float32],) */;
    %7 = subtract(%2, %3) /* ty=Tensor[(8, 9, 13), int16] */;
    %8 = %6.0;
    (%7, %8, meta[relay.Constant][1] /* ty=Tensor[(792), float32] */)
  };
  %9(%var_1414) /* ty=(Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */
}

def @func_5557(%var_5536: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), int16], Tensor[(4, 9, 1), float32]) {
  %10 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %11 = %10.4;
  %12 = cast(%var_5536, dtype="int16") /* ty=Tensor[(8, 11, 9), int16] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%11, dtype="int16") /* ty=Tensor[(8, 11, 9), int16] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %16 = @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */;
  %17 = add(%14, %15) /* ty=Tensor[(8, 11, 9), int16] */;
  %18 = %16.1;
  (%17, %18)
}

def @func_113(%var_111: Tensor[(4, 4, 5), float32], %var_112: Tensor[(288), uint8]) -> (Tensor[(12, 12, 2), uint8], Tensor[(288), uint8], Tensor[(4, 4, 5), float32], Tensor[(12, 12, 2), uint8]) {
  %35 = fn (%var_72: Tensor[(4, 4, 5), float32], %var_85: Tensor[(288), uint8]) -> (Tensor[(12, 12, 2), uint8], Tensor[(288), uint8], Tensor[(4, 4, 5), float32], Tensor[(12, 12, 2), uint8]) {
    %19 = cast(%var_85, dtype="uint8") /* ty=Tensor[(288), uint8] */;
    %20 = cast(%var_85, dtype="uint8") /* ty=Tensor[(288), uint8] */;
    %21 = reshape(%19, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
    %22 = reshape(%20, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
    %23 = @func_33(%21, %22) /* ty=(Tensor[(12, 12, 2), uint8],) */;
    %24 = cast(%var_72, dtype="float32") /* ty=Tensor[(4, 4, 5), float32] */;
    %25 = cosh(%24) /* ty=Tensor[(4, 4, 5), float32] */;
    %26 = cast(%25, dtype="float32") /* ty=Tensor[(4, 4, 5), float32] */;
    %27 = cast(%var_85, dtype="uint8") /* ty=Tensor[(288), uint8] */;
    %28 = cast(%var_85, dtype="uint8") /* ty=Tensor[(288), uint8] */;
    %29 = reshape(%27, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
    %30 = reshape(%28, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
    %31 = @func_33(%29, %30) /* ty=(Tensor[(12, 12, 2), uint8],) */;
    %32 = %23.0;
    %33 = acos(%26) /* ty=Tensor[(4, 4, 5), float32] */;
    %34 = %31.0;
    (%32, %var_85, %33, %34)
  };
  %35(%var_111, %var_112) /* ty=(Tensor[(12, 12, 2), uint8], Tensor[(288), uint8], Tensor[(4, 4, 5), float32], Tensor[(12, 12, 2), uint8]) */
}

def @func_5868() -> Tensor[(4, 9, 1), float32] {
  %36 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %36.1
}

def @func_960() -> Tensor[(4, 9, 1), float32] {
  %37 = fn () -> Tensor[(4, 9, 1), float32] {
    @func_514() /* ty=Tensor[(4, 9, 1), float32] */
  };
  %37() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_2250(%var_2247: Tensor[(4, 7, 10), uint16], %var_2248: Tensor[(4, 7, 10), uint16], %var_2249: Tensor[(4, 7, 10), uint16]) -> (Tensor[(4, 7, 10), bool], Tensor[(4, 7, 10), float64]) {
  %57 = fn (%var_2210: Tensor[(4, 7, 10), uint16], %var_2211: Tensor[(4, 7, 10), uint16], %var_2232: Tensor[(4, 7, 10), uint16]) -> (Tensor[(4, 7, 10), bool], Tensor[(4, 7, 10), float64]) {
    %38 = cast(%var_2232, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
    %39 = shape_of(%var_2210, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(%var_2210, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %42 = cast(%var_2211, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
    %43 = shape_of(%var_2210, dtype="int32") /* ty=Tensor[(3), int32] */;
    %44 = cast(%var_2210, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
    %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %46 = less_equal(%44, %45) /* ty=Tensor[(4, 7, 10), bool] */;
    %47 = cast(%46, dtype="float32") /* ty=Tensor[(4, 7, 10), float32] */;
    %48 = sqrt(%47) /* ty=Tensor[(4, 7, 10), float32] */;
    %49 = cast(%48, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
    %50 = sigmoid(%49) /* ty=Tensor[(4, 7, 10), float64] */;
    %51 = cast(%var_2211, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
    %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
    %53 = cast(%50, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %55 = greater(%40, %41) /* ty=Tensor[(4, 7, 10), bool] */;
    %56 = power(%53, %54) /* ty=Tensor[(4, 7, 10), float64] */;
    (%55, %56)
  };
  %57(%var_2247, %var_2248, %var_2249) /* ty=(Tensor[(4, 7, 10), bool], Tensor[(4, 7, 10), float64]) */
}

def @func_5508() -> (Tensor[(4, 9, ?), float32],) {
  @func_5506() /* ty=(Tensor[(4, 9, ?), float32],) */
}

def @func_3465(%var_3458: Tensor[(1, 936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(936), int16], Tensor[(1, 936), float64]) {
  %58 = cast(%var_3458, dtype="int16") /* ty=Tensor[(1, 936), int16] */;
  %59 = reshape(%58, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %60 = @func_1710(%59) /* ty=(Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) */;
  %61 = cast(%var_3458, dtype="float64") /* ty=Tensor[(1, 936), float64] */;
  %62 = @func_2477() /* ty=Tensor[(4, 9, 1), float32] */;
  %63 = %60.2;
  %64 = atan(%61) /* ty=Tensor[(1, 936), float64] */;
  (%62, %63, %64)
}

def @func_5560(%var_5558: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), int16], Tensor[(4, 9, 1), float32]) {
  @func_5557(%var_5558) /* ty=(Tensor[(8, 11, 9), int16], Tensor[(4, 9, 1), float32]) */
}

def @func_4637() -> Tensor[(4, 9, 288), float64] {
  %65 = @func_4263() /* ty=(Tensor[(4, 9, ?), int16], Tensor[(4, 9, ?), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) */;
  %65.2
}

def @func_3046(%var_3044: Tensor[(7, 220), float32]) -> Tensor[(7, 220), float32] {
  @func_3043(%var_3044) /* ty=Tensor[(7, 220), float32] */
}

def @func_4826(%var_4824: Tensor[(9, 10, 14), float64], %var_4825: Tensor[(14, 70), int32]) -> (Tensor[(9, 10, 14), float64], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), int32]) {
  %75 = fn (%var_4767: Tensor[(9, 10, 14), float64], %var_4815: Tensor[(14, 70), int32]) -> (Tensor[(9, 10, 14), float64], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), int32]) {
    %66 = cast(%var_4767, dtype="float64") /* ty=Tensor[(9, 10, 14), float64] */;
    %67 = asinh(%66) /* ty=Tensor[(9, 10, 14), float64] */;
    %68 = cast(%67, dtype="float64") /* ty=Tensor[(9, 10, 14), float64] */;
    %69 = @func_3863() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(8, 11, 9), float32], Tensor[(12, 66), float64]) */;
    %70 = cast(%var_4815, dtype="int32") /* ty=Tensor[(14, 70), int32] */;
    %71 = reshape(%70, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), int32] */;
    %72 = cos(%68) /* ty=Tensor[(9, 10, 14), float64] */;
    %73 = %69.0;
    %74 = @func_4298(%71) /* ty=Tensor[(10, 14, 7), float32] */;
    (%72, %73, %74, %var_4815)
  };
  %75(%var_4824, %var_4825) /* ty=(Tensor[(9, 10, 14), float64], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), int32]) */
}

def @func_4298(%var_4286: Tensor[(10, 14, 7), int32]) -> Tensor[(10, 14, 7), float32] {
  %76 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 14, 7), int32] */, dtype="int32") /* ty=Tensor[(10, 14, 7), int32] */;
  %77 = shape_of(%var_4286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_4286, dtype="int32") /* ty=Tensor[(10, 14, 7), int32] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %80 = bitwise_xor(%78, %79) /* ty=Tensor[(10, 14, 7), int32] */;
  %81 = cast(%80, dtype="float32") /* ty=Tensor[(10, 14, 7), float32] */;
  erf(%81) /* ty=Tensor[(10, 14, 7), float32] */
}

def @func_164(%var_147: Tensor[(10, 14, 11), float32], %var_148: Tensor[(10, 14, 11), float32]) -> Tensor[(10, 14, 11), float32] {
  %82 = cast(%var_148, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %83 = shape_of(%var_147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%var_147, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%84, %85) /* ty=Tensor[(10, 14, 11), float32] */
}

def @func_1618() -> (Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
  %97 = fn () -> (Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
    %86 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
    %87 = %86.1;
    %88 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 14, 11), float32] */, dtype="uint8") /* ty=Tensor[(10, 14, 11), uint8] */;
    %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
    %90 = cast(%87, dtype="uint8") /* ty=Tensor[(10, 14, 11), uint8] */;
    %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %92 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
    %93 = cast(%87, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
    %94 = logical_xor(%90, %91) /* ty=Tensor[(10, 14, 11), uint8] */;
    %95 = %92.3;
    %96 = sqrt(%93) /* ty=Tensor[(10, 14, 11), float32] */;
    (%94, %95, %96)
  };
  %97() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */
}

def @func_431() -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) {
  @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */
}

def @func_4357() -> (Tensor[(4, 9, 1), float32],) {
  @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_2172() -> (Tensor[(10, 14, 11), float64], Tensor[(4, 9, 288), int8]) {
  %98 = @func_2108() /* ty=(Tensor[(10, 14, 11), float32],) */;
  %99 = %98.0;
  %100 = cast(%99, dtype="float64") /* ty=Tensor[(10, 14, 11), float64] */;
  %101 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %102 = log2(%100) /* ty=Tensor[(10, 14, 11), float64] */;
  %103 = %101.3;
  (%102, %103)
}

def @func_4403(%var_4402: Tensor[(50, 10), float64]) -> (Tensor[(4, 9, 1), float32], Tensor[(12, 36), float32], Tensor[(50, 10), float64], Tensor[(180), float32], Tensor[(6, 156), int16], Tensor[(432), float32], Tensor[(4, 9, 1), float32]) {
  %120 = fn (%var_4392: Tensor[(50, 10), float64]) -> (Tensor[(4, 9, 1), float32], Tensor[(12, 36), float32], Tensor[(50, 10), float64], Tensor[(180), float32], Tensor[(6, 156), int16], Tensor[(432), float32], Tensor[(4, 9, 1), float32]) {
    %104 = @func_700() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
    %105 = cast(%var_4392, dtype="float64") /* ty=Tensor[(50, 10), float64] */;
    %106 = cast(%var_4392, dtype="float64") /* ty=Tensor[(50, 10), float64] */;
    %107 = cast(meta[relay.Constant][4] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %108 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 156), int16] */, dtype="int16") /* ty=Tensor[(6, 156), int16] */;
    %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %110 = reshape(%105, newshape=[5, 10, 10]) /* ty=Tensor[(5, 10, 10), float64] */;
    %111 = reshape(%106, newshape=[5, 10, 10]) /* ty=Tensor[(5, 10, 10), float64] */;
    %112 = reshape(%107, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %113 = reshape(%108, newshape=[936]) /* ty=Tensor[(936), int16] */;
    %114 = reshape(%109, newshape=[12, 36]) /* ty=Tensor[(12, 36), float32] */;
    %115 = @func_2634(%110, %111, %112, %113, %114) /* ty=(Tensor[(5, 10, 10), float32], Tensor[(36, 22), float32], Tensor[(7, 220), float32], Tensor[(396), float32], Tensor[(5, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(4, 9, 5), bool], Tensor[(180), float32], Tensor[(48, 216), int8], Tensor[(936), int16], Tensor[(12, 36), float32]) */;
    %116 = @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */;
    %117 = %104.1;
    %118 = %115.10;
    %119 = %116.0;
    (%117, %118, %var_4392, meta[relay.Constant][4] /* ty=Tensor[(180), float32] */, meta[relay.Constant][5] /* ty=Tensor[(6, 156), int16] */, meta[relay.Constant][6] /* ty=Tensor[(432), float32] */, %119)
  };
  %120(%var_4402) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(12, 36), float32], Tensor[(50, 10), float64], Tensor[(180), float32], Tensor[(6, 156), int16], Tensor[(432), float32], Tensor[(4, 9, 1), float32]) */
}

def @func_1103(%var_1101: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), float32],) {
  @func_1100(%var_1101) /* ty=(Tensor[(8, 11, 9), float32],) */
}

def @func_2405() -> Tensor[(10, 14, 11), uint8] {
  %122 = fn () -> Tensor[(10, 14, 11), uint8] {
    %121 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
    %121.0
  };
  %122() /* ty=Tensor[(10, 14, 11), uint8] */
}

def @func_2446() -> Tensor[(7, 220), float32] {
  %124 = fn () -> Tensor[(7, 220), float32] {
    %123 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
    %123.0
  };
  %124() /* ty=Tensor[(7, 220), float32] */
}

def @func_1100(%var_1095: Tensor[(8, 11, 9), float32]) -> (Tensor[(8, 11, 9), float32],) {
  %125 = cast(%var_1095, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %126 = cosh(%125) /* ty=Tensor[(8, 11, 9), float32] */;
  (%126,)
}

def @func_3116(%var_3114: Tensor[(10368), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(180), float32], Tensor[(10368), int8], Tensor[(468, 2), int16], Tensor[(432), float32]) {
  @func_3113(%var_3114) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(180), float32], Tensor[(10368), int8], Tensor[(468, 2), int16], Tensor[(432), float32]) */
}

def @func_2110() -> (Tensor[(10, 14, 11), float32],) {
  @func_2108() /* ty=(Tensor[(10, 14, 11), float32],) */
}

def @func_3204() -> Tensor[(4, 9, 1), float32] {
  %127 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %127.0
}

def @func_1216(%var_1200: Tensor[(4, 9, 288), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float32]) {
  %128 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %129 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %130 = %129.3;
  %131 = cast(%var_1200, dtype="float32") /* ty=Tensor[(4, 9, 288), float32] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="float32") /* ty=Tensor[(4, 9, 288), float32] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %135 = %128.2;
  %136 = power(%133, %134) /* ty=Tensor[(4, 9, 288), float32] */;
  (%135, %136)
}

def @func_5506() -> (Tensor[(4, 9, ?), float32],) {
  %137 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %138 = %137.2;
  (%138,)
}

def @func_5053(%var_5048: Tensor[(4, 9, 10), float64]) -> (Tensor[(4, 9, 10), bool],) {
  %139 = @func_2773() /* ty=Tensor[(4, 9, 1), float64] */;
  %140 = cast(%139, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %141 = cast(%var_5048, dtype="bool") /* ty=Tensor[(4, 9, 10), bool] */;
  %142 = logical_and(%140, %141) /* ty=Tensor[(4, 9, 10), bool] */;
  (%142,)
}

def @func_3544() -> (Tensor[(4, 9, 1), float32],) {
  %144 = fn () -> (Tensor[(4, 9, 1), float32],) {
    %143 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
    (%143,)
  };
  %144() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_4124(%var_4107: Tensor[(4, 9, 5), uint32]) -> Tensor[(4, 9, 5), uint64] {
  %145 = @func_2698() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %146 = %145.0;
  %147 = cast(%146, dtype="uint32") /* ty=Tensor[(4, 9, 1), uint32] */;
  %148 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 9, 5), float32] */, dtype="uint32") /* ty=Tensor[(4, 9, 5), uint32] */;
  %149 = maximum(%147, %148) /* ty=Tensor[(4, 9, 5), uint32] */;
  %150 = cast(%var_4107, dtype="uint64") /* ty=Tensor[(4, 9, 5), uint64] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%149, dtype="uint64") /* ty=Tensor[(4, 9, 5), uint64] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%152, %153) /* ty=Tensor[(4, 9, 5), uint64] */
}

def @func_3597() -> (Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) {
  @func_3595() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) */
}

def @func_5765() -> (Tensor[(10, 14, 11), uint8], Tensor[(4, 9, ?), int16]) {
  %154 = @func_4263() /* ty=(Tensor[(4, 9, ?), int16], Tensor[(4, 9, ?), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) */;
  %155 = @func_2404() /* ty=Tensor[(10, 14, 11), uint8] */;
  %156 = %154.0;
  (%155, %156)
}

def @func_3166() -> (Tensor[(10, 14, 11), uint8], Tensor[(10, 14, 11), float32]) {
  %161 = fn () -> (Tensor[(10, 14, 11), uint8], Tensor[(10, 14, 11), float32]) {
    %157 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
    %158 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
    %159 = %157.0;
    %160 = %158.0;
    (%159, %160)
  };
  %161() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(10, 14, 11), float32]) */
}

def @func_3367(%var_3337: Tensor[(10368), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(10, 14, 11), bool], Tensor[(936), int16], Tensor[(4, 9, 288), float64]) {
  %162 = @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */;
  %163 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %164 = cast(meta[relay.Constant][8] /* ty=Tensor[(936), int16] */, dtype="int16") /* ty=Tensor[(936), int16] */;
  %165 = reshape(%164, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %166 = @func_1710(%165) /* ty=(Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) */;
  %167 = cast(%var_3337, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %168 = reshape(%167, newshape=[4, 9, 288]) /* ty=Tensor[(4, 9, 288), int8] */;
  %169 = @func_1216(%168) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float32]) */;
  %170 = %169.1;
  %171 = cast(%var_3337, dtype="float64") /* ty=Tensor[(10368), float64] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%170, dtype="float64") /* ty=Tensor[(4, 9, 288), float64] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %175 = %162.2;
  %176 = %163.0;
  %177 = %166.0;
  %178 = floor_divide(%173, %174) /* ty=Tensor[(4, 9, 288), float64] */;
  (%175, %176, %177, meta[relay.Constant][8] /* ty=Tensor[(936), int16] */, %178)
}

def @func_6148(%var_6147: Tensor[(980), int32]) -> (Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1386), bool], Tensor[(9, 10, 14), float64], Tensor[(1260), float64], Tensor[(980), int32]) {
  %194 = fn (%var_6137: Tensor[(980), int32]) -> (Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1386), bool], Tensor[(9, 10, 14), float64], Tensor[(1260), float64], Tensor[(980), int32]) {
    %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(1386), uint8] */, dtype="uint8") /* ty=Tensor[(1386), uint8] */;
    %180 = reshape(%179, newshape=[14, 9, 11]) /* ty=Tensor[(14, 9, 11), uint8] */;
    %181 = @func_5657(%180) /* ty=(Tensor[(14, 9, 11), bool], Tensor[(4, 9, ?), float32], Tensor[(396), float32], Tensor[(4, 9, 1), float32], Tensor[(14, 9, 11), float64]) */;
    %182 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
    %183 = %182.1;
    %184 = cast(meta[relay.Constant][9] /* ty=Tensor[(1386), uint8] */, dtype="bool") /* ty=Tensor[(1386), bool] */;
    %185 = cast(%183, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
    %186 = cast(meta[relay.Constant][10] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %187 = cast(%var_6137, dtype="int32") /* ty=Tensor[(980), int32] */;
    %188 = reshape(%186, newshape=[9, 10, 14]) /* ty=Tensor[(9, 10, 14), float64] */;
    %189 = reshape(%187, newshape=[14, 70]) /* ty=Tensor[(14, 70), int32] */;
    %190 = @func_4823(%188, %189) /* ty=(Tensor[(9, 10, 14), float64], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), int32]) */;
    %191 = %181.1;
    %192 = greater_equal(%184, %185) /* ty=Tensor[(4, 9, 1386), bool] */;
    %193 = %190.0;
    (%191, %192, %193, meta[relay.Constant][10] /* ty=Tensor[(1260), float64] */, %var_6137)
  };
  %194(%var_6147) /* ty=(Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1386), bool], Tensor[(9, 10, 14), float64], Tensor[(1260), float64], Tensor[(980), int32]) */
}

def @func_5484() -> (Tensor[(7, 220), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
  @func_5482() /* ty=(Tensor[(7, 220), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */
}

def @func_5870() -> Tensor[(4, 9, 1), float32] {
  @func_5868() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_926(%var_915: Tensor[(1540), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
  %195 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %196 = cast(%var_915, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %197 = cast(%var_915, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %198 = reshape(%196, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %199 = reshape(%197, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %200 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %201 = %195.1;
  %202 = @func_164(%198, %199) /* ty=Tensor[(10, 14, 11), float32] */;
  (%200, %201, %202, %var_915)
}

def @func_4600() -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
  @func_4598() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */
}

def @func_2002() -> (Tensor[(4, 4, 5), float32], Tensor[(4, 9, 1), float32]) {
  %203 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %204 = %203.0;
  %205 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  (%204, %205)
}

def @func_4598() -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
  %206 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %207 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
  %208 = %206.2;
  (%207, %208)
}

def @func_5657(%var_5624: Tensor[(14, 9, 11), uint8]) -> (Tensor[(14, 9, 11), bool], Tensor[(4, 9, ?), float32], Tensor[(396), float32], Tensor[(4, 9, 1), float32], Tensor[(14, 9, 11), float64]) {
  %209 = cast(%var_5624, dtype="bool") /* ty=Tensor[(14, 9, 11), bool] */;
  %210 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(14, 9, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 9, 11), uint8] */, dtype="bool") /* ty=Tensor[(14, 9, 11), bool] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %213 = cast(meta[relay.Constant][12] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %214 = reshape(%213, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %215 = @func_1556(%214) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %216 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %217 = cast(%var_5624, dtype="float64") /* ty=Tensor[(14, 9, 11), float64] */;
  %218 = less(%211, %212) /* ty=Tensor[(14, 9, 11), bool] */;
  %219 = %215.1;
  %220 = %216.6;
  %221 = asin(%217) /* ty=Tensor[(14, 9, 11), float64] */;
  (%218, %219, meta[relay.Constant][12] /* ty=Tensor[(396), float32] */, %220, %221)
}

def @func_654() -> (Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) {
  %230 = fn () -> (Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) {
    %222 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
    %223 = %222.5;
    %224 = cast(%223, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
    %225 = cast(%223, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
    %226 = reshape(%224, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
    %227 = reshape(%225, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
    %228 = @func_164(%226, %227) /* ty=Tensor[(10, 14, 11), float32] */;
    %229 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
    (%223, %228, %229)
  };
  %230() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */
}

def @func_282(%var_281: Tensor[(4, 9, 11), float32]) -> (Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) {
  %237 = fn (%var_242: Tensor[(4, 9, 11), float32]) -> (Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) {
    %231 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
    %232 = cast(%231, dtype="int8") /* ty=Tensor[(4, 9, 1), int8] */;
    %233 = cast(%var_242, dtype="int8") /* ty=Tensor[(4, 9, 11), int8] */;
    %234 = cast(%var_242, dtype="float32") /* ty=Tensor[(4, 9, 11), float32] */;
    %235 = bitwise_and(%232, %233) /* ty=Tensor[(4, 9, 11), int8] */;
    %236 = sinh(%234) /* ty=Tensor[(4, 9, 11), float32] */;
    (%235, %236)
  };
  %237(%var_281) /* ty=(Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) */
}

def @func_2063() -> (Tensor[(4, 9, 1), float32],) {
  %238 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %239 = %238.0;
  (%239,)
}

def @func_5915(%var_5913: Tensor[(4, 8, 14), float32], %var_5914: Tensor[(4, 8, 14), float32]) -> (Tensor[(4, 8, 14), bool], Tensor[(4, 8, 14), float64]) {
  %247 = fn (%var_5894: Tensor[(4, 8, 14), float32], %var_5895: Tensor[(4, 8, 14), float32]) -> (Tensor[(4, 8, 14), bool], Tensor[(4, 8, 14), float64]) {
    %240 = cast(%var_5895, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
    %241 = shape_of(%var_5894, dtype="int32") /* ty=Tensor[(3), int32] */;
    %242 = cast(%var_5894, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %244 = cast(%var_5894, dtype="float64") /* ty=Tensor[(4, 8, 14), float64] */;
    %245 = greater_equal(%242, %243) /* ty=Tensor[(4, 8, 14), bool] */;
    %246 = log(%244) /* ty=Tensor[(4, 8, 14), float64] */;
    (%245, %246)
  };
  %247(%var_5913, %var_5914) /* ty=(Tensor[(4, 8, 14), bool], Tensor[(4, 8, 14), float64]) */
}

def @func_1978(%var_1974: Tensor[(4, 9, 5), float32], %var_1975: Tensor[(10368), int8], %var_1976: Tensor[(936), int16], %var_1977: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) {
  @func_1972(%var_1974, %var_1975, %var_1976, %var_1977) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) */
}

def @func_1353(%var_1351: Tensor[(6, 12, 16), bool]) -> (Tensor[(6, 12, 16), bool], Tensor[(7, 220), float32]) {
  @func_1350(%var_1351) /* ty=(Tensor[(6, 12, 16), bool], Tensor[(7, 220), float32]) */
}

def @func_1713(%var_1711: Tensor[(936), int16]) -> (Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) {
  @func_1710(%var_1711) /* ty=(Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) */
}

def @func_3746(%var_3744: Tensor[(1540), float32], %var_3745: Tensor[(10368), int8]) -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1540), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8], Tensor[(4, 9, 1), float32]) {
  @func_3742(%var_3744, %var_3745) /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1540), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8], Tensor[(4, 9, 1), float32]) */
}

def @func_5785() -> (Tensor[(7, 220), float32],) {
  @func_5783() /* ty=(Tensor[(7, 220), float32],) */
}

def @func_1035(%var_1034: Tensor[(4, 9, 288), int8]) -> (Tensor[(4, 9, 288), float64],) {
  %264 = fn (%var_1010: Tensor[(4, 9, 288), int8]) -> (Tensor[(4, 9, 288), float64],) {
    %248 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
    %249 = %248.3;
    %250 = cast(%var_1010, dtype="uint16") /* ty=Tensor[(4, 9, 288), uint16] */;
    %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
    %252 = cast(%249, dtype="uint16") /* ty=Tensor[(4, 9, 288), uint16] */;
    %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %254 = right_shift(%252, %253) /* ty=Tensor[(4, 9, 288), uint16] */;
    %255 = cast(%254, dtype="float32") /* ty=Tensor[(4, 9, 288), float32] */;
    %256 = acosh(%255) /* ty=Tensor[(4, 9, 288), float32] */;
    %257 = cast(%254, dtype="int32") /* ty=Tensor[(4, 9, 288), int32] */;
    %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
    %259 = cast(%256, dtype="int32") /* ty=Tensor[(4, 9, 288), int32] */;
    %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %261 = logical_xor(%259, %260) /* ty=Tensor[(4, 9, 288), int32] */;
    %262 = cast(%261, dtype="float64") /* ty=Tensor[(4, 9, 288), float64] */;
    %263 = atanh(%262) /* ty=Tensor[(4, 9, 288), float64] */;
    (%263,)
  };
  %264(%var_1034) /* ty=(Tensor[(4, 9, 288), float64],) */
}

def @func_3865() -> (Tensor[(10, 14, 11), float32], Tensor[(8, 11, 9), float32], Tensor[(12, 66), float64]) {
  @func_3863() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(8, 11, 9), float32], Tensor[(12, 66), float64]) */
}

def @func_2065() -> (Tensor[(4, 9, 1), float32],) {
  @func_2063() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_5722() -> (Tensor[(7, 220), float64],) {
  %269 = fn () -> (Tensor[(7, 220), float64],) {
    %265 = @func_3392() /* ty=(Tensor[(7, 220), float32],) */;
    %266 = %265.0;
    %267 = cast(%266, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
    %268 = log(%267) /* ty=Tensor[(7, 220), float64] */;
    (%268,)
  };
  %269() /* ty=(Tensor[(7, 220), float64],) */
}

def @func_3895(%var_3894: Tensor[(288), uint8]) -> (Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) {
  %277 = fn (%var_3890: Tensor[(288), uint8]) -> (Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) {
    %270 = cast(%var_3890, dtype="uint8") /* ty=Tensor[(288), uint8] */;
    %271 = cast(%var_3890, dtype="uint8") /* ty=Tensor[(288), uint8] */;
    %272 = reshape(%270, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
    %273 = reshape(%271, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
    %274 = @func_33(%272, %273) /* ty=(Tensor[(12, 12, 2), uint8],) */;
    %275 = @func_3523() /* ty=Tensor[(4, 9, 1), float32] */;
    %276 = %274.0;
    (%275, %276, %var_3890)
  };
  %277(%var_3894) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) */
}

def @func_4639() -> Tensor[(4, 9, 288), float64] {
  @func_4637() /* ty=Tensor[(4, 9, 288), float64] */
}

def @func_4301(%var_4299: Tensor[(10, 14, 7), int32]) -> Tensor[(10, 14, 7), float32] {
  @func_4298(%var_4299) /* ty=Tensor[(10, 14, 7), float32] */
}

def @func_5783() -> (Tensor[(7, 220), float32],) {
  %278 = @func_5482() /* ty=(Tensor[(7, 220), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %279 = %278.0;
  (%279,)
}

def @func_5426(%var_5424: Tensor[(4, 9, 4), float32], %var_5425: Tensor[(4, 9, 4), float32]) -> (Tensor[(4, 9, 4), bool], Tensor[(4, 9, 1), float32], Tensor[(1540, 1), float32], Tensor[(12, 66), float64], Tensor[(4, 9, 4), int32]) {
  @func_5422(%var_5424, %var_5425) /* ty=(Tensor[(4, 9, 4), bool], Tensor[(4, 9, 1), float32], Tensor[(1540, 1), float32], Tensor[(12, 66), float64], Tensor[(4, 9, 4), int32]) */
}

def @func_5767() -> (Tensor[(10, 14, 11), uint8], Tensor[(4, 9, ?), int16]) {
  @func_5765() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, ?), int16]) */
}

def @func_929(%var_927: Tensor[(1540), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
  @func_926(%var_927) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */
}

def @func_2775() -> Tensor[(4, 9, 1), float64] {
  @func_2773() /* ty=Tensor[(4, 9, 1), float64] */
}

def @func_5893() -> (Tensor[(4, 9, 12), int16],) {
  %285 = fn () -> (Tensor[(4, 9, 12), int16],) {
    %280 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
    %281 = %280.1;
    %282 = cast(%281, dtype="int16") /* ty=Tensor[(4, 9, 1), int16] */;
    %283 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 9, 12), float64] */, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
    %284 = subtract(%282, %283) /* ty=Tensor[(4, 9, 12), int16] */;
    (%284,)
  };
  %285() /* ty=(Tensor[(4, 9, 12), int16],) */
}

def @func_5201(%var_5197: Tensor[(1540), float32], %var_5198: Tensor[(180), float32], %var_5199: Tensor[(10368), int8], %var_5200: Tensor[(4, 9, 10368), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(1540), float32], Tensor[(180), float32], Tensor[(10368), int8], Tensor[(1, 936), int16], Tensor[(432), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 10368), float64]) {
  @func_5195(%var_5197, %var_5198, %var_5199, %var_5200) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(1540), float32], Tensor[(180), float32], Tensor[(10368), int8], Tensor[(1, 936), int16], Tensor[(432), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 10368), float64]) */
}

def @func_3863() -> (Tensor[(10, 14, 11), float32], Tensor[(8, 11, 9), float32], Tensor[(12, 66), float64]) {
  %286 = @func_2108() /* ty=(Tensor[(10, 14, 11), float32],) */;
  %287 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 66), float32] */, dtype="float32") /* ty=Tensor[(12, 66), float32] */;
  %288 = reshape(%287, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %289 = @func_1100(%288) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %290 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 66), float32] */, dtype="float64") /* ty=Tensor[(12, 66), float64] */;
  %291 = %286.0;
  %292 = %289.0;
  %293 = sin(%290) /* ty=Tensor[(12, 66), float64] */;
  (%291, %292, %293)
}

def @func_6230() -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float64], Tensor[(4, 9, 1), float64]) {
  %305 = fn () -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float64], Tensor[(4, 9, 1), float64]) {
    %294 = @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */;
    %295 = @func_5482() /* ty=(Tensor[(7, 220), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
    %296 = %295.2;
    %297 = cast(%296, dtype="float64") /* ty=Tensor[(10, 14, 11), float64] */;
    %298 = @func_2477() /* ty=Tensor[(4, 9, 1), float32] */;
    %299 = cast(%298, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
    %300 = @func_3204() /* ty=Tensor[(4, 9, 1), float32] */;
    %301 = @func_5518() /* ty=Tensor[(4, 9, 1), float32] */;
    %302 = %294.0;
    %303 = acos(%297) /* ty=Tensor[(10, 14, 11), float64] */;
    %304 = asinh(%299) /* ty=Tensor[(4, 9, 1), float64] */;
    (%300, %301, %302, %303, %304)
  };
  %305() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float64], Tensor[(4, 9, 1), float64]) */
}

def @func_2634(%var_2552: Tensor[(5, 10, 10), float64], %var_2553: Tensor[(5, 10, 10), float64], %var_2624: Tensor[(180), float32], %var_2626: Tensor[(936), int16], %var_2627: Tensor[(12, 36), float32]) -> (Tensor[(5, 10, 10), float32], Tensor[(36, 22), float32], Tensor[(7, 220), float32], Tensor[(396), float32], Tensor[(5, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(4, 9, 5), bool], Tensor[(180), float32], Tensor[(48, 216), int8], Tensor[(936), int16], Tensor[(12, 36), float32]) {
  %306 = cast(%var_2553, dtype="float64") /* ty=Tensor[(5, 10, 10), float64] */;
  %307 = shape_of(%var_2552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_2552, dtype="float64") /* ty=Tensor[(5, 10, 10), float64] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %310 = floor_divide(%308, %309) /* ty=Tensor[(5, 10, 10), float64] */;
  %311 = cast(%310, dtype="float32") /* ty=Tensor[(5, 10, 10), float32] */;
  %312 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 220), float32] */, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %313 = cast(meta[relay.Constant][16] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %314 = reshape(%312, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %315 = reshape(%313, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %316 = @func_2045(%314, %315) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32], Tensor[(8, 11, 9), float32], Tensor[(36, 22), float32], Tensor[(4, 9, 11), int8], Tensor[(396), float32], Tensor[(4, 9, 14), bool], Tensor[(4, 9, 1), float32]) */;
  %317 = cast(%var_2553, dtype="float64") /* ty=Tensor[(5, 10, 10), float64] */;
  %318 = sin(%317) /* ty=Tensor[(5, 10, 10), float64] */;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(5, 10, 10), float64] */;
  %320 = cast(%var_2552, dtype="float32") /* ty=Tensor[(5, 10, 10), float32] */;
  %321 = cast(%var_2624, dtype="float32") /* ty=Tensor[(180), float32] */;
  %322 = cast(meta[relay.Constant][17] /* ty=Tensor[(48, 216), int8] */, dtype="int8") /* ty=Tensor[(48, 216), int8] */;
  %323 = cast(%var_2626, dtype="int16") /* ty=Tensor[(936), int16] */;
  %324 = cast(%var_2627, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %325 = reshape(%321, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), float32] */;
  %326 = reshape(%322, newshape=[10368]) /* ty=Tensor[(10368), int8] */;
  %327 = reshape(%323, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %328 = reshape(%324, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float32] */;
  %329 = @func_1972(%325, %326, %327, %328) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %330 = cosh(%311) /* ty=Tensor[(5, 10, 10), float32] */;
  %331 = %316.4;
  %332 = cos(%319) /* ty=Tensor[(5, 10, 10), float64] */;
  %333 = tan(%320) /* ty=Tensor[(5, 10, 10), float32] */;
  %334 = %329.14;
  (%330, %331, meta[relay.Constant][15] /* ty=Tensor[(7, 220), float32] */, meta[relay.Constant][16] /* ty=Tensor[(396), float32] */, %332, %333, %334, %var_2624, meta[relay.Constant][17] /* ty=Tensor[(48, 216), int8] */, %var_2626, %var_2627)
}

def @func_2004() -> (Tensor[(4, 4, 5), float32], Tensor[(4, 9, 1), float32]) {
  @func_2002() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 9, 1), float32]) */
}

def @func_6011() -> (Tensor[(4, 9, 1), float32],) {
  %335 = @func_3595() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) */;
  %336 = %335.0;
  (%336,)
}

def @func_1080(%var_1078: Tensor[(16, 15, 9), bool], %var_1079: Tensor[(16, 15, 9), bool]) -> (Tensor[(16, 15, 9), bool],) {
  @func_1076(%var_1078, %var_1079) /* ty=(Tensor[(16, 15, 9), bool],) */
}

def @func_1180() -> Tensor[(4, 9, 1), float32] {
  %338 = fn () -> Tensor[(4, 9, 1), float32] {
    %337 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
    %337.2
  };
  %338() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_3043(%var_3021: Tensor[(7, 220), float32]) -> Tensor[(7, 220), float32] {
  %339 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %340 = %339.0;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %342 = atanh(%341) /* ty=Tensor[(7, 220), float32] */;
  %343 = cast(%var_3021, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(2), int32] */;
  %345 = cast(%342, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %347 = divide(%345, %346) /* ty=Tensor[(7, 220), float32] */;
  %348 = cast(%347, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %349 = shape_of(%var_3021, dtype="int32") /* ty=Tensor[(2), int32] */;
  %350 = cast(%var_3021, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  power(%350, %351) /* ty=Tensor[(7, 220), float32] */
}

def @func_5056(%var_5054: Tensor[(4, 9, 10), float64]) -> (Tensor[(4, 9, 10), bool],) {
  @func_5053(%var_5054) /* ty=(Tensor[(4, 9, 10), bool],) */
}

def @func_2108() -> (Tensor[(10, 14, 11), float32],) {
  %352 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %353 = %352.1;
  (%353,)
}

def @func_2048(%var_2046: Tensor[(1540), float32], %var_2047: Tensor[(396), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32], Tensor[(8, 11, 9), float32], Tensor[(36, 22), float32], Tensor[(4, 9, 11), int8], Tensor[(396), float32], Tensor[(4, 9, 14), bool], Tensor[(4, 9, 1), float32]) {
  %377 = fn (%var_2012: Tensor[(1540), float32], %var_2032: Tensor[(396), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32], Tensor[(8, 11, 9), float32], Tensor[(36, 22), float32], Tensor[(4, 9, 11), int8], Tensor[(396), float32], Tensor[(4, 9, 14), bool], Tensor[(4, 9, 1), float32]) {
    %354 = @func_2002() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 9, 1), float32]) */;
    %355 = cast(%var_2012, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %356 = cast(%var_2012, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %357 = reshape(%355, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
    %358 = reshape(%356, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
    %359 = cast(meta[relay.Constant][18] /* ty=Tensor[(36, 22), float32] */, dtype="float32") /* ty=Tensor[(36, 22), float32] */;
    %360 = reshape(%359, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
    %361 = @func_1100(%360) /* ty=(Tensor[(8, 11, 9), float32],) */;
    %362 = cast(%var_2032, dtype="float32") /* ty=Tensor[(396), float32] */;
    %363 = reshape(%362, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
    %364 = @func_280(%363) /* ty=(Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) */;
    %365 = cast(%var_2032, dtype="float32") /* ty=Tensor[(396), float32] */;
    %366 = reshape(%365, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
    %367 = @func_1556(%366) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */;
    %368 = cast(%var_2012, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %369 = reshape(%368, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
    %370 = @func_926(%369) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
    %371 = %354.1;
    %372 = @func_164(%357, %358) /* ty=Tensor[(10, 14, 11), float32] */;
    %373 = %361.0;
    %374 = %364.0;
    %375 = %367.0;
    %376 = %370.1;
    (%371, %372, %var_2012, %373, meta[relay.Constant][18] /* ty=Tensor[(36, 22), float32] */, %374, %var_2032, %375, %376)
  };
  %377(%var_2046, %var_2047) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32], Tensor[(8, 11, 9), float32], Tensor[(36, 22), float32], Tensor[(4, 9, 11), int8], Tensor[(396), float32], Tensor[(4, 9, 14), bool], Tensor[(4, 9, 1), float32]) */
}

def @func_5195(%var_5170: Tensor[(1540), float32], %var_5178: Tensor[(180), float32], %var_5179: Tensor[(10368), int8], %var_5185: Tensor[(4, 9, 10368), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(1540), float32], Tensor[(180), float32], Tensor[(10368), int8], Tensor[(1, 936), int16], Tensor[(432), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 10368), float64]) {
  %378 = @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %379 = cast(%var_5170, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %380 = reshape(%379, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %381 = @func_926(%380) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %382 = @func_4985() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %383 = cast(%var_5178, dtype="float32") /* ty=Tensor[(180), float32] */;
  %384 = cast(%var_5179, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %385 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 936), int16] */, dtype="int16") /* ty=Tensor[(1, 936), int16] */;
  %386 = cast(meta[relay.Constant][20] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %387 = reshape(%383, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), float32] */;
  %388 = reshape(%384, newshape=[10368]) /* ty=Tensor[(10368), int8] */;
  %389 = reshape(%385, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %390 = reshape(%386, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float32] */;
  %391 = @func_1972(%387, %388, %389, %390) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %392 = %391.8;
  %393 = cast(%var_5185, dtype="float64") /* ty=Tensor[(4, 9, 10368), float64] */;
  %394 = shape_of(%392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%392, dtype="float64") /* ty=Tensor[(4, 9, 10368), float64] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %397 = %378.0;
  %398 = %381.1;
  %399 = %382.0;
  %400 = mod(%395, %396) /* ty=Tensor[(4, 9, 10368), float64] */;
  (%397, %398, %var_5170, %var_5178, %var_5179, meta[relay.Constant][19] /* ty=Tensor[(1, 936), int16] */, meta[relay.Constant][20] /* ty=Tensor[(432), float32] */, %399, %400)
}

def @func_776(%var_774: Tensor[(12, 2, 3), float32], %var_775: Tensor[(12, 2, 3), float32]) -> (Tensor[(12, 2, 3), int32], Tensor[(4, 9, 1), float32], Tensor[(12, 2, 3), float32]) {
  %415 = fn (%var_719: Tensor[(12, 2, 3), float32], %var_720: Tensor[(12, 2, 3), float32]) -> (Tensor[(12, 2, 3), int32], Tensor[(4, 9, 1), float32], Tensor[(12, 2, 3), float32]) {
    %401 = cast(%var_719, dtype="int32") /* ty=Tensor[(12, 2, 3), int32] */;
    %402 = shape_of(%var_720, dtype="int32") /* ty=Tensor[(3), int32] */;
    %403 = cast(%var_720, dtype="int32") /* ty=Tensor[(12, 2, 3), int32] */;
    %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %405 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
    %406 = cast(%var_720, dtype="bool") /* ty=Tensor[(12, 2, 3), bool] */;
    %407 = shape_of(%var_719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %408 = cast(%var_719, dtype="bool") /* ty=Tensor[(12, 2, 3), bool] */;
    %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %410 = less(%408, %409) /* ty=Tensor[(12, 2, 3), bool] */;
    %411 = cast(%410, dtype="float32") /* ty=Tensor[(12, 2, 3), float32] */;
    %412 = right_shift(%403, %404) /* ty=Tensor[(12, 2, 3), int32] */;
    %413 = %405.1;
    %414 = erf(%411) /* ty=Tensor[(12, 2, 3), float32] */;
    (%412, %413, %414)
  };
  %415(%var_774, %var_775) /* ty=(Tensor[(12, 2, 3), int32], Tensor[(4, 9, 1), float32], Tensor[(12, 2, 3), float32]) */
}

def @func_6292() -> Tensor[(4, 9, 1), float32] {
  %416 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %416.1
}

def @func_6084(%var_6082: Tensor[(396), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(396), float32]) {
  @func_6081(%var_6082) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(396), float32]) */
}

def @func_5842(%var_5838: Tensor[(1540), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
  %417 = cast(%var_5838, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %418 = reshape(%417, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %419 = @func_926(%418) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %420 = @func_2477() /* ty=Tensor[(4, 9, 1), float32] */;
  %421 = %419.2;
  (%420, %421, %var_5838)
}

def @main() -> (Tensor[(4, 9, 288), float64],) {
  %422 = @func_4637() /* ty=Tensor[(4, 9, 288), float64] */;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(4, 9, 288), float64] */;
  %424 = asinh(%423) /* ty=Tensor[(4, 9, 288), float64] */;
  (%424,)
}

def @func_3645(%var_3637: Tensor[(7, 16, 10), bool], %var_3638: Tensor[(7, 16, 10), bool]) -> Tensor[(7, 16, 10), bool] {
  %425 = cast(%var_3638, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %426 = shape_of(%var_3637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%var_3637, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%427, %428) /* ty=Tensor[(7, 16, 10), bool] */
}

def @func_4355() -> (Tensor[(4, 9, 1), float32],) {
  %429 = @func_3953() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %430 = %429.0;
  (%430,)
}

def @func_1559(%var_1557: Tensor[(6, 66), float32]) -> (Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) {
  @func_1556(%var_1557) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */
}

def @func_1313() -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) {
  @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */
}

def @func_5422(%var_5329: Tensor[(4, 9, 4), float32], %var_5417: Tensor[(4, 9, 4), float32]) -> (Tensor[(4, 9, 4), bool], Tensor[(4, 9, 1), float32], Tensor[(1540, 1), float32], Tensor[(12, 66), float64], Tensor[(4, 9, 4), int32]) {
  %431 = @func_4757() /* ty=Tensor[(4, 9, 1), float32] */;
  %432 = cast(%var_5329, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %433 = cast(%431, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %434 = cast(meta[relay.Constant][21] /* ty=Tensor[(1540, 1), float32] */, dtype="float32") /* ty=Tensor[(1540, 1), float32] */;
  %435 = reshape(%434, newshape=[7, 220]) /* ty=Tensor[(7, 220), float32] */;
  %436 = @func_5293(%435) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float64], Tensor[(7, 220), float64]) */;
  %437 = @func_3863() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(8, 11, 9), float32], Tensor[(12, 66), float64]) */;
  %438 = cast(%431, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %439 = cast(%var_5329, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %440 = power(%438, %439) /* ty=Tensor[(4, 9, 4), float32] */;
  %441 = cast(%440, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %442 = rsqrt(%441) /* ty=Tensor[(4, 9, 4), float32] */;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %444 = erf(%443) /* ty=Tensor[(4, 9, 4), float32] */;
  %445 = cast(%var_5417, dtype="int32") /* ty=Tensor[(4, 9, 4), int32] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%444, dtype="int32") /* ty=Tensor[(4, 9, 4), int32] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %449 = greater(%432, %433) /* ty=Tensor[(4, 9, 4), bool] */;
  %450 = %436.0;
  %451 = %437.2;
  %452 = left_shift(%447, %448) /* ty=Tensor[(4, 9, 4), int32] */;
  (%449, %450, meta[relay.Constant][21] /* ty=Tensor[(1540, 1), float32] */, %451, %452)
}

def @func_3953() -> (Tensor[(4, 9, 1), float32],) {
  %453 = @func_2344() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %454 = %453.0;
  (%454,)
}

def @func_2301() -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) {
  @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */
}

def @func_5293(%var_5276: Tensor[(7, 220), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float64], Tensor[(7, 220), float64]) {
  %455 = @func_5127() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(1540), float32]) */;
  %456 = %455.1;
  %457 = cast(%var_5276, dtype="uint64") /* ty=Tensor[(7, 220), uint64] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(2), int32] */;
  %459 = cast(%456, dtype="uint64") /* ty=Tensor[(7, 220), uint64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %461 = logical_xor(%459, %460) /* ty=Tensor[(7, 220), uint64] */;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
  %463 = cast(%var_5276, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
  %464 = @func_3523() /* ty=Tensor[(4, 9, 1), float32] */;
  %465 = tan(%462) /* ty=Tensor[(7, 220), float64] */;
  %466 = acos(%463) /* ty=Tensor[(7, 220), float64] */;
  (%464, %465, %466)
}

def @func_429() -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) {
  %467 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %468 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  (%467, %468)
}

def @func_4263() -> (Tensor[(4, 9, ?), int16], Tensor[(4, 9, ?), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) {
  %469 = @func_3523() /* ty=Tensor[(4, 9, 1), float32] */;
  %470 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %471 = %470.0;
  %472 = cast(%471, dtype="int16") /* ty=Tensor[(4, 9, 1), int16] */;
  %473 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%469, dtype="int16") /* ty=Tensor[(4, 9, 1), int16] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %476 = cast(%471, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %477 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%469, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %480 = cast(meta[relay.Constant][22] /* ty=Tensor[(10368), int8] */, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %481 = reshape(%480, newshape=[4, 9, 288]) /* ty=Tensor[(4, 9, 288), int8] */;
  %482 = @func_1033(%481) /* ty=(Tensor[(4, 9, 288), float64],) */;
  %483 = multiply(%474, %475) /* ty=Tensor[(4, 9, ?), int16] */;
  %484 = floor_divide(%478, %479) /* ty=Tensor[(4, 9, ?), float64] */;
  %485 = %482.0;
  (%483, %484, %485, meta[relay.Constant][22] /* ty=Tensor[(10368), int8] */)
}

def @func_4265() -> (Tensor[(4, 9, ?), int16], Tensor[(4, 9, ?), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) {
  @func_4263() /* ty=(Tensor[(4, 9, ?), int16], Tensor[(4, 9, ?), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) */
}

def @func_384(%var_382: Tensor[(154, 10), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(154, 10), float32], Tensor[(12, 12, 2), uint8], Tensor[(4, 72), uint8]) {
  @func_381(%var_382) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(154, 10), float32], Tensor[(12, 12, 2), uint8], Tensor[(4, 72), uint8]) */
}

def @func_3649(%var_3647: Tensor[(7, 16, 10), bool], %var_3648: Tensor[(7, 16, 10), bool]) -> Tensor[(7, 16, 10), bool] {
  @func_3645(%var_3647, %var_3648) /* ty=Tensor[(7, 16, 10), bool] */
}

def @func_4024(%var_4022: Tensor[(14, 10, 11), float64], %var_4023: Tensor[(2, 144), uint8]) -> (Tensor[(14, 10, 11), float64], Tensor[(80, 2), float64], Tensor[(2, 144), uint8], Tensor[(7, 220), int64]) {
  @func_4020(%var_4022, %var_4023) /* ty=(Tensor[(14, 10, 11), float64], Tensor[(80, 2), float64], Tensor[(2, 144), uint8], Tensor[(7, 220), int64]) */
}

def @func_2479() -> Tensor[(4, 9, 1), float32] {
  @func_2477() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_2641(%var_2636: Tensor[(5, 10, 10), float64], %var_2637: Tensor[(5, 10, 10), float64], %var_2638: Tensor[(180), float32], %var_2639: Tensor[(936), int16], %var_2640: Tensor[(12, 36), float32]) -> (Tensor[(5, 10, 10), float32], Tensor[(36, 22), float32], Tensor[(7, 220), float32], Tensor[(396), float32], Tensor[(5, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(4, 9, 5), bool], Tensor[(180), float32], Tensor[(48, 216), int8], Tensor[(936), int16], Tensor[(12, 36), float32]) {
  @func_2634(%var_2636, %var_2637, %var_2638, %var_2639, %var_2640) /* ty=(Tensor[(5, 10, 10), float32], Tensor[(36, 22), float32], Tensor[(7, 220), float32], Tensor[(396), float32], Tensor[(5, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(4, 9, 5), bool], Tensor[(180), float32], Tensor[(48, 216), int8], Tensor[(936), int16], Tensor[(12, 36), float32]) */
}

def @func_4985() -> (Tensor[(4, 9, 1), float32],) {
  %486 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %487 = %486.0;
  (%487,)
}

def @func_577() -> (Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) {
  %488 = cast(meta[relay.Constant][23] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %489 = cast(meta[relay.Constant][24] /* ty=Tensor[(288), uint8] */, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %490 = reshape(%488, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float32] */;
  %491 = reshape(%489, newshape=[288]) /* ty=Tensor[(288), uint8] */;
  %492 = @func_110(%490, %491) /* ty=(Tensor[(12, 12, 2), uint8], Tensor[(288), uint8], Tensor[(4, 4, 5), float32], Tensor[(12, 12, 2), uint8]) */;
  %493 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %494 = %493.1;
  %495 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %496 = cast(%495, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %497 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%494, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %500 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  %501 = cast(%500, dtype="int8") /* ty=Tensor[(4, 9, 1), int8] */;
  %502 = cast(meta[relay.Constant][24] /* ty=Tensor[(288), uint8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %503 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 220), float32] */, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %504 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 220), float32] */, dtype="float32") /* ty=Tensor[(7, 220), float32] */;
  %505 = reshape(%503, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %506 = reshape(%504, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %507 = %492.2;
  %508 = power(%498, %499) /* ty=Tensor[(4, 9, ?), float32] */;
  %509 = left_shift(%501, %502) /* ty=Tensor[(4, 9, 288), int8] */;
  %510 = @func_164(%505, %506) /* ty=Tensor[(10, 14, 11), float32] */;
  (%507, meta[relay.Constant][23] /* ty=Tensor[(80), float32] */, %508, %509, %510, meta[relay.Constant][25] /* ty=Tensor[(7, 220), float32] */)
}

def @func_1219(%var_1217: Tensor[(4, 9, 288), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float32]) {
  @func_1216(%var_1217) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float32]) */
}

def @func_5128() -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(1540), float32]) {
  %515 = fn () -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(1540), float32]) {
    %511 = cast(meta[relay.Constant][26] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %512 = reshape(%511, newshape=[7, 220]) /* ty=Tensor[(7, 220), float32] */;
    %513 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
    %514 = @func_3043(%512) /* ty=Tensor[(7, 220), float32] */;
    (%513, %514, meta[relay.Constant][26] /* ty=Tensor[(1540), float32] */)
  };
  %515() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(1540), float32]) */
}

def @func_3206() -> Tensor[(4, 9, 1), float32] {
  @func_3204() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_1685() -> (Tensor[(4, 9, 1), float32],) {
  %517 = fn () -> (Tensor[(4, 9, 1), float32],) {
    %516 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
    (%516,)
  };
  %517() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_5296(%var_5294: Tensor[(7, 220), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float64], Tensor[(7, 220), float64]) {
  @func_5293(%var_5294) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float64], Tensor[(7, 220), float64]) */
}

def @func_2973(%var_2972: Tensor[(936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(72), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 12), int8], Tensor[(8, 11, 9), float32], Tensor[(8, 11, 9), float32], Tensor[(4, 9, 936), bool], Tensor[(4, 9, 1), float32]) {
  %546 = fn (%var_2926: Tensor[(936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(72), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 12), int8], Tensor[(8, 11, 9), float32], Tensor[(8, 11, 9), float32], Tensor[(4, 9, 936), bool], Tensor[(4, 9, 1), float32]) {
    %518 = cast(meta[relay.Constant][27] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %519 = cast(meta[relay.Constant][27] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %520 = reshape(%518, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), float32] */;
    %521 = reshape(%519, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), float32] */;
    %522 = @func_773(%520, %521) /* ty=(Tensor[(12, 2, 3), int32], Tensor[(4, 9, 1), float32], Tensor[(12, 2, 3), float32]) */;
    %523 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
    %524 = cast(%523, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
    %525 = cosh(%524) /* ty=Tensor[(4, 9, 1), float64] */;
    %526 = cast(%525, dtype="int8") /* ty=Tensor[(4, 9, 1), int8] */;
    %527 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 9, 12), float64] */, dtype="int8") /* ty=Tensor[(4, 9, 12), int8] */;
    %528 = cast(%var_2926, dtype="int16") /* ty=Tensor[(936), int16] */;
    %529 = reshape(%528, newshape=[8, 9, 13]) /* ty=Tensor[(8, 9, 13), int16] */;
    %530 = @func_1413(%529) /* ty=(Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */;
    %531 = %530.1;
    %532 = cast(%531, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
    %533 = reshape(%532, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
    %534 = @func_1100(%533) /* ty=(Tensor[(8, 11, 9), float32],) */;
    %535 = cast(%525, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
    %536 = rsqrt(%535) /* ty=Tensor[(4, 9, 1), float32] */;
    %537 = cast(%536, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
    %538 = cast(%var_2926, dtype="bool") /* ty=Tensor[(936), bool] */;
    %539 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
    %540 = %522.1;
    %541 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
    %542 = bitwise_or(%526, %527) /* ty=Tensor[(4, 9, 12), int8] */;
    %543 = %534.0;
    %544 = not_equal(%537, %538) /* ty=Tensor[(4, 9, 936), bool] */;
    %545 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
    (%539, %540, meta[relay.Constant][27] /* ty=Tensor[(72), float32] */, %541, %542, %531, %543, %544, %545)
  };
  %546(%var_2972) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(72), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 12), int8], Tensor[(8, 11, 9), float32], Tensor[(8, 11, 9), float32], Tensor[(4, 9, 936), bool], Tensor[(4, 9, 1), float32]) */
}

def @func_3468(%var_3466: Tensor[(1, 936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(936), int16], Tensor[(1, 936), float64]) {
  @func_3465(%var_3466) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(936), int16], Tensor[(1, 936), float64]) */
}

def @func_4758() -> Tensor[(4, 9, 1), float32] {
  %547 = fn () -> Tensor[(4, 9, 1), float32] {
    @func_4668() /* ty=Tensor[(4, 9, 1), float32] */
  };
  %547() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_6294() -> Tensor[(4, 9, 1), float32] {
  @func_6292() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_5660(%var_5658: Tensor[(14, 9, 11), uint8]) -> (Tensor[(14, 9, 11), bool], Tensor[(4, 9, ?), float32], Tensor[(396), float32], Tensor[(4, 9, 1), float32], Tensor[(14, 9, 11), float64]) {
  @func_5657(%var_5658) /* ty=(Tensor[(14, 9, 11), bool], Tensor[(4, 9, ?), float32], Tensor[(396), float32], Tensor[(4, 9, 1), float32], Tensor[(14, 9, 11), float64]) */
}

def @func_4612(%var_4611: Tensor[(12, 2, 1), uint16]) -> (Tensor[(12, 2, 1), uint16],) {
  %551 = fn (%var_4602: Tensor[(12, 2, 1), uint16]) -> (Tensor[(12, 2, 1), uint16],) {
    %548 = cast(meta[relay.Constant][29] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %549 = cast(%var_4602, dtype="uint16") /* ty=Tensor[(12, 2, 1), uint16] */;
    %550 = multiply(%548, %549) /* ty=Tensor[(12, 2, 1), uint16] */;
    (%550,)
  };
  %551(%var_4611) /* ty=(Tensor[(12, 2, 1), uint16],) */
}

def @func_4343() -> Tensor[(4, 9, 1), float32] {
  %553 = fn () -> Tensor[(4, 9, 1), float32] {
    %552 = @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */;
    %552.0
  };
  %553() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_5947(%var_5946: Tensor[(7, 5, 10), float64]) -> (Tensor[(7, 5, 10), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) {
  %560 = fn (%var_5937: Tensor[(7, 5, 10), float64]) -> (Tensor[(7, 5, 10), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) {
    %554 = cast(%var_5937, dtype="float64") /* ty=Tensor[(7, 5, 10), float64] */;
    %555 = cast(meta[relay.Constant][30] /* ty=Tensor[(10368), int8] */, dtype="int8") /* ty=Tensor[(10368), int8] */;
    %556 = reshape(%555, newshape=[4, 9, 288]) /* ty=Tensor[(4, 9, 288), int8] */;
    %557 = @func_1033(%556) /* ty=(Tensor[(4, 9, 288), float64],) */;
    %558 = sin(%554) /* ty=Tensor[(7, 5, 10), float64] */;
    %559 = %557.0;
    (%558, %559, meta[relay.Constant][30] /* ty=Tensor[(10368), int8] */)
  };
  %560(%var_5946) /* ty=(Tensor[(7, 5, 10), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8]) */
}

def @func_4020(%var_3997: Tensor[(14, 10, 11), float64], %var_4002: Tensor[(2, 144), uint8]) -> (Tensor[(14, 10, 11), float64], Tensor[(80, 2), float64], Tensor[(2, 144), uint8], Tensor[(7, 220), int64]) {
  %561 = cast(%var_3997, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %562 = cast(meta[relay.Constant][31] /* ty=Tensor[(80, 2), float64] */, dtype="float64") /* ty=Tensor[(80, 2), float64] */;
  %563 = cast(%var_4002, dtype="uint8") /* ty=Tensor[(2, 144), uint8] */;
  %564 = reshape(%562, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), float64] */;
  %565 = reshape(%563, newshape=[144, 2]) /* ty=Tensor[(144, 2), uint8] */;
  %566 = @func_3807(%564, %565) /* ty=(Tensor[(16, 1, 10), bool], Tensor[(7, 16, 10), bool], Tensor[(1120), bool], Tensor[(7, 220), float32], Tensor[(288), uint8], Tensor[(80), float32], Tensor[(144, 2), uint8]) */;
  %567 = %566.3;
  %568 = cast(%var_3997, dtype="int64") /* ty=Tensor[(14, 10, 11), int64] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(2), int32] */;
  %570 = cast(%567, dtype="int64") /* ty=Tensor[(7, 220), int64] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %572 = log(%561) /* ty=Tensor[(14, 10, 11), float64] */;
  %573 = minimum(%570, %571) /* ty=Tensor[(7, 220), int64] */;
  (%572, meta[relay.Constant][31] /* ty=Tensor[(80, 2), float64] */, %var_4002, %573)
}

def @func_579() -> (Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) {
  @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */
}

def @func_5482() -> (Tensor[(7, 220), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) {
  %574 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %575 = @func_2445() /* ty=Tensor[(7, 220), float32] */;
  %576 = @func_2477() /* ty=Tensor[(4, 9, 1), float32] */;
  %577 = %574.2;
  (%575, %576, %577)
}

def @func_2299() -> (Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) {
  %578 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %579 = @func_2063() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %580 = %579.0;
  %581 = cast(%580, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %582 = @func_2002() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(4, 9, 1), float32]) */;
  %583 = cast(meta[relay.Constant][32] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %584 = cast(meta[relay.Constant][32] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %585 = cast(meta[relay.Constant][32] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %586 = reshape(%583, newshape=[4, 7, 10]) /* ty=Tensor[(4, 7, 10), uint16] */;
  %587 = reshape(%584, newshape=[4, 7, 10]) /* ty=Tensor[(4, 7, 10), uint16] */;
  %588 = reshape(%585, newshape=[4, 7, 10]) /* ty=Tensor[(4, 7, 10), uint16] */;
  %589 = @func_2246(%586, %587, %588) /* ty=(Tensor[(4, 7, 10), bool], Tensor[(4, 7, 10), float64]) */;
  %590 = %578.6;
  %591 = sigmoid(%581) /* ty=Tensor[(4, 9, 1), float32] */;
  %592 = %582.1;
  %593 = %589.0;
  (%590, %591, %592, %593, meta[relay.Constant][32] /* ty=Tensor[(280), uint16] */)
}

def @func_2345() -> (Tensor[(4, 9, 1), float32],) {
  %595 = fn () -> (Tensor[(4, 9, 1), float32],) {
    %594 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
    (%594,)
  };
  %595() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_37(%var_35: Tensor[(12, 12, 2), uint8], %var_36: Tensor[(12, 12, 2), uint8]) -> (Tensor[(12, 12, 2), uint8],) {
  @func_33(%var_35, %var_36) /* ty=(Tensor[(12, 12, 2), uint8],) */
}

def @func_195() -> Tensor[(4, 9, 1), float32] {
  %597 = fn () -> Tensor[(4, 9, 1), float32] {
    %596 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
    asin(%596) /* ty=Tensor[(4, 9, 1), float32] */
  };
  %597() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_4668() -> Tensor[(4, 9, 1), float32] {
  %598 = @func_3953() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %598.0
}

def @func_700() -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) {
  %599 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %600 = %599.4;
  %601 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  (%600, %601)
}

def @func_4670() -> Tensor[(4, 9, 1), float32] {
  @func_4668() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_702() -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) {
  @func_700() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */
}

def @func_3524() -> Tensor[(4, 9, 1), float32] {
  %603 = fn () -> Tensor[(4, 9, 1), float32] {
    %602 = @func_2063() /* ty=(Tensor[(4, 9, 1), float32],) */;
    %602.0
  };
  %603() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_4987() -> (Tensor[(4, 9, 1), float32],) {
  @func_4985() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_1311() -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) {
  %604 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %605 = @func_429() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32]) */;
  %606 = %605.0;
  %607 = cast(%606, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %608 = atanh(%607) /* ty=Tensor[(4, 9, 1), float64] */;
  %609 = cast(%608, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %610 = cast(%606, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %611 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%608, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %614 = floor_mod(%612, %613) /* ty=Tensor[(4, 9, ?), float64] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(4, 9, ?), float32] */;
  %616 = cast(meta[relay.Constant][34] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %617 = reshape(%616, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %618 = @func_1100(%617) /* ty=(Tensor[(8, 11, 9), float32],) */;
  %619 = %604.4;
  %620 = erf(%609) /* ty=Tensor[(4, 9, 1), float64] */;
  %621 = sinh(%615) /* ty=Tensor[(4, 9, ?), float32] */;
  %622 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  %623 = %618.0;
  %624 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  (%619, %620, %621, %622, %623, meta[relay.Constant][34] /* ty=Tensor[(792), float32] */, %624)
}

def @func_3810(%var_3808: Tensor[(16, 1, 10), float64], %var_3809: Tensor[(144, 2), uint8]) -> (Tensor[(16, 1, 10), bool], Tensor[(7, 16, 10), bool], Tensor[(1120), bool], Tensor[(7, 220), float32], Tensor[(288), uint8], Tensor[(80), float32], Tensor[(144, 2), uint8]) {
  %640 = fn (%var_3784: Tensor[(16, 1, 10), float64], %var_3805: Tensor[(144, 2), uint8]) -> (Tensor[(16, 1, 10), bool], Tensor[(7, 16, 10), bool], Tensor[(1120), bool], Tensor[(7, 220), float32], Tensor[(288), uint8], Tensor[(80), float32], Tensor[(144, 2), uint8]) {
    %625 = cast(-6.37023f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %626 = cast(%var_3784, dtype="bool") /* ty=Tensor[(16, 1, 10), bool] */;
    %627 = cast(meta[relay.Constant][35] /* ty=Tensor[(1120), bool] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
    %628 = cast(meta[relay.Constant][35] /* ty=Tensor[(1120), bool] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
    %629 = reshape(%627, newshape=[7, 16, 10]) /* ty=Tensor[(7, 16, 10), bool] */;
    %630 = reshape(%628, newshape=[7, 16, 10]) /* ty=Tensor[(7, 16, 10), bool] */;
    %631 = cast(meta[relay.Constant][36] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %632 = cast(%var_3805, dtype="uint8") /* ty=Tensor[(144, 2), uint8] */;
    %633 = reshape(%631, newshape=[4, 4, 5]) /* ty=Tensor[(4, 4, 5), float32] */;
    %634 = reshape(%632, newshape=[288]) /* ty=Tensor[(288), uint8] */;
    %635 = @func_110(%633, %634) /* ty=(Tensor[(12, 12, 2), uint8], Tensor[(288), uint8], Tensor[(4, 4, 5), float32], Tensor[(12, 12, 2), uint8]) */;
    %636 = not_equal(%625, %626) /* ty=Tensor[(16, 1, 10), bool] */;
    %637 = @func_3645(%629, %630) /* ty=Tensor[(7, 16, 10), bool] */;
    %638 = @func_2445() /* ty=Tensor[(7, 220), float32] */;
    %639 = %635.1;
    (%636, %637, meta[relay.Constant][35] /* ty=Tensor[(1120), bool] */, %638, %639, meta[relay.Constant][36] /* ty=Tensor[(80), float32] */, %var_3805)
  };
  %640(%var_3808, %var_3809) /* ty=(Tensor[(16, 1, 10), bool], Tensor[(7, 16, 10), bool], Tensor[(1120), bool], Tensor[(7, 220), float32], Tensor[(288), uint8], Tensor[(80), float32], Tensor[(144, 2), uint8]) */
}

def @func_33(%var_19: Tensor[(12, 12, 2), uint8], %var_20: Tensor[(12, 12, 2), uint8]) -> (Tensor[(12, 12, 2), uint8],) {
  %641 = cast(%var_20, dtype="uint8") /* ty=Tensor[(12, 12, 2), uint8] */;
  %642 = shape_of(%var_19, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%var_19, dtype="uint8") /* ty=Tensor[(12, 12, 2), uint8] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %645 = bitwise_and(%643, %644) /* ty=Tensor[(12, 12, 2), uint8] */;
  (%645,)
}

def @func_515() -> Tensor[(4, 9, 1), float32] {
  %646 = fn () -> Tensor[(4, 9, 1), float32] {
    @func_194() /* ty=Tensor[(4, 9, 1), float32] */
  };
  %646() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_1556(%var_1508: Tensor[(6, 66), float32]) -> (Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) {
  %647 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  %648 = cast(%647, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %649 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 9, 14), float32] */, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %650 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %651 = cast(%var_1508, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %652 = reshape(%651, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
  %653 = @func_280(%652) /* ty=(Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) */;
  %654 = @func_577() /* ty=(Tensor[(4, 4, 5), float32], Tensor[(80), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 288), int8], Tensor[(10, 14, 11), float32], Tensor[(7, 220), float32]) */;
  %655 = %654.4;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %657 = atan(%656) /* ty=Tensor[(10, 14, 11), float32] */;
  %658 = cast(%657, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %659 = cast(%657, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %660 = greater_equal(%648, %649) /* ty=Tensor[(4, 9, 14), bool] */;
  %661 = %650.2;
  %662 = %653.1;
  %663 = sin(%658) /* ty=Tensor[(10, 14, 11), float32] */;
  %664 = log10(%659) /* ty=Tensor[(10, 14, 11), float32] */;
  (%660, %661, %662, %var_1508, %663, %664)
}

def @func_1076(%var_1042: Tensor[(16, 15, 9), bool], %var_1043: Tensor[(16, 15, 9), bool]) -> (Tensor[(16, 15, 9), bool],) {
  %665 = cast(%var_1043, dtype="bool") /* ty=Tensor[(16, 15, 9), bool] */;
  %666 = shape_of(%var_1042, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%var_1042, dtype="bool") /* ty=Tensor[(16, 15, 9), bool] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %669 = logical_or(%667, %668) /* ty=Tensor[(16, 15, 9), bool] */;
  (%669,)
}

def @func_4127(%var_4125: Tensor[(4, 9, 5), uint32]) -> Tensor[(4, 9, 5), uint64] {
  @func_4124(%var_4125) /* ty=Tensor[(4, 9, 5), uint64] */
}

def @func_2477() -> Tensor[(4, 9, 1), float32] {
  %670 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %670.0
}

def @func_2174() -> (Tensor[(10, 14, 11), float64], Tensor[(4, 9, 288), int8]) {
  @func_2172() /* ty=(Tensor[(10, 14, 11), float64], Tensor[(4, 9, 288), int8]) */
}

def @func_381(%var_374: Tensor[(154, 10), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(154, 10), float32], Tensor[(12, 12, 2), uint8], Tensor[(4, 72), uint8]) {
  %671 = cast(%var_374, dtype="float32") /* ty=Tensor[(154, 10), float32] */;
  %672 = cast(%var_374, dtype="float32") /* ty=Tensor[(154, 10), float32] */;
  %673 = reshape(%671, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %674 = reshape(%672, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
  %675 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 72), uint8] */, dtype="uint8") /* ty=Tensor[(4, 72), uint8] */;
  %676 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 72), uint8] */, dtype="uint8") /* ty=Tensor[(4, 72), uint8] */;
  %677 = reshape(%675, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %678 = reshape(%676, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %679 = @func_33(%677, %678) /* ty=(Tensor[(12, 12, 2), uint8],) */;
  %680 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %681 = @func_164(%673, %674) /* ty=Tensor[(10, 14, 11), float32] */;
  %682 = %679.0;
  (%680, %681, %var_374, %682, meta[relay.Constant][38] /* ty=Tensor[(4, 72), uint8] */)
}

def @func_5599() -> (Tensor[(4, 9, 1), float32],) {
  %685 = fn () -> (Tensor[(4, 9, 1), float32],) {
    %683 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
    %684 = %683.2;
    (%684,)
  };
  %685() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_1350(%var_1318: Tensor[(6, 12, 16), bool]) -> (Tensor[(6, 12, 16), bool], Tensor[(7, 220), float32]) {
  %686 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 12, 16), bool] */, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %687 = shape_of(%var_1318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%var_1318, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %690 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %691 = logical_and(%688, %689) /* ty=Tensor[(6, 12, 16), bool] */;
  %692 = %690.0;
  (%691, %692)
}

def @func_4500() -> Tensor[(4, 9, 1), float32] {
  %693 = @func_3543() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %693.0
}

def @func_4502() -> Tensor[(4, 9, 1), float32] {
  @func_4500() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_2699() -> (Tensor[(4, 9, 1), float32],) {
  %696 = fn () -> (Tensor[(4, 9, 1), float32],) {
    %694 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
    %695 = %694.3;
    (%695,)
  };
  %696() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_1710(%var_1701: Tensor[(936), int16]) -> (Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) {
  %697 = @func_1617() /* ty=(Tensor[(10, 14, 11), uint8], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32]) */;
  %698 = %697.0;
  %699 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 14, 11), uint8] */, dtype="bool") /* ty=Tensor[(10, 14, 11), bool] */;
  %700 = shape_of(%698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%698, dtype="bool") /* ty=Tensor[(10, 14, 11), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %703 = cast(%var_1701, dtype="int16") /* ty=Tensor[(936), int16] */;
  %704 = reshape(%703, newshape=[8, 9, 13]) /* ty=Tensor[(8, 9, 13), int16] */;
  %705 = @func_1413(%704) /* ty=(Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */;
  %706 = greater(%701, %702) /* ty=Tensor[(10, 14, 11), bool] */;
  %707 = %705.1;
  (%706, %707, %var_1701)
}

def @func_5519() -> Tensor[(4, 9, 1), float32] {
  %709 = fn () -> Tensor[(4, 9, 1), float32] {
    %708 = @func_5127() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(1540), float32]) */;
    %708.0
  };
  %709() /* ty=Tensor[(4, 9, 1), float32] */
}

def @func_2773() -> Tensor[(4, 9, 1), float64] {
  %710 = @func_2299() /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 7, 10), bool], Tensor[(280), uint16]) */;
  %711 = %710.2;
  %712 = cast(%711, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  atan(%712) /* ty=Tensor[(4, 9, 1), float64] */
}

def @func_316(%var_314: float64, %var_315: Tensor[(1, 14), float64]) -> Tensor[(1, 14), bool] {
  %715 = fn (%var_307: float64, %var_308: Tensor[(1, 14), float64]) -> Tensor[(1, 14), bool] {
    %713 = cast(%var_307, dtype="bool") /* ty=bool */;
    %714 = cast(%var_308, dtype="bool") /* ty=Tensor[(1, 14), bool] */;
    less_equal(%713, %714) /* ty=Tensor[(1, 14), bool] */
  };
  %715(%var_314, %var_315) /* ty=Tensor[(1, 14), bool] */
}

def @func_1972(%var_1777: Tensor[(4, 9, 5), float32], %var_1830: Tensor[(10368), int8], %var_1906: Tensor[(936), int16], %var_1941: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) {
  %716 = cast(meta[relay.Constant][41] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %717 = reshape(%716, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
  %718 = @func_280(%717) /* ty=(Tensor[(4, 9, 11), int8], Tensor[(4, 9, 11), float32]) */;
  %719 = @func_1311() /* ty=(Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float64], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(792), float32], Tensor[(4, 9, 1), float32]) */;
  %720 = cast(meta[relay.Constant][42] /* ty=Tensor[(154, 10), float32] */, dtype="float32") /* ty=Tensor[(154, 10), float32] */;
  %721 = reshape(%720, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %722 = @func_926(%721) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %723 = cast(%var_1830, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %724 = reshape(%723, newshape=[4, 9, 288]) /* ty=Tensor[(4, 9, 288), int8] */;
  %725 = @func_1033(%724) /* ty=(Tensor[(4, 9, 288), float64],) */;
  %726 = cast(%var_1777, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %727 = sinh(%726) /* ty=Tensor[(4, 9, 5), float64] */;
  %728 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  %729 = cast(%728, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %730 = cast(%var_1777, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %731 = power(%729, %730) /* ty=Tensor[(4, 9, 5), float64] */;
  %732 = cast(%731, dtype="int64") /* ty=Tensor[(4, 9, 5), int64] */;
  %733 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%727, dtype="int64") /* ty=Tensor[(4, 9, 5), int64] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %736 = cast(%var_1830, dtype="float32") /* ty=Tensor[(10368), float32] */;
  %737 = cast(%728, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %738 = @func_1684() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %739 = cast(%var_1906, dtype="int16") /* ty=Tensor[(936), int16] */;
  %740 = reshape(%739, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %741 = @func_1710(%740) /* ty=(Tensor[(10, 14, 11), bool], Tensor[(8, 11, 9), float32], Tensor[(936), int16]) */;
  %742 = cast(%727, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
  %743 = sigmoid(%742) /* ty=Tensor[(4, 9, 5), float32] */;
  %744 = @func_959() /* ty=Tensor[(4, 9, 1), float32] */;
  %745 = cast(%743, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
  %746 = cast(%744, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %747 = @func_653() /* ty=(Tensor[(7, 220), float32], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1), float32]) */;
  %748 = cast(%744, dtype="uint16") /* ty=Tensor[(4, 9, 1), uint16] */;
  %749 = cast(%var_1941, dtype="uint16") /* ty=Tensor[(4, 9, 12), uint16] */;
  %750 = cast(meta[relay.Constant][41] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %751 = reshape(%750, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %752 = @func_1556(%751) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %753 = %747.1;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %755 = reshape(%754, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %756 = @func_926(%755) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %757 = %718.1;
  %758 = %719.2;
  %759 = %722.0;
  %760 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %761 = %725.0;
  %762 = bitwise_or(%734, %735) /* ty=Tensor[(4, 9, 5), int64] */;
  %763 = floor_divide(%736, %737) /* ty=Tensor[(4, 9, 10368), float32] */;
  %764 = @func_194() /* ty=Tensor[(4, 9, 1), float32] */;
  %765 = %738.0;
  %766 = %741.1;
  %767 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  %768 = logical_and(%745, %746) /* ty=Tensor[(4, 9, 5), bool] */;
  %769 = maximum(%748, %749) /* ty=Tensor[(4, 9, 12), uint16] */;
  %770 = %752.2;
  %771 = %756.2;
  (%757, meta[relay.Constant][41] /* ty=Tensor[(396), float32] */, %758, %759, meta[relay.Constant][42] /* ty=Tensor[(154, 10), float32] */, %760, %761, %762, %763, %764, %765, %766, %var_1906, %767, %768, %753, %769, %770, %771)
}

def @func_5845(%var_5843: Tensor[(1540), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
  @func_5842(%var_5843) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */
}

def @func_6013() -> (Tensor[(4, 9, 1), float32],) {
  @func_6011() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_168(%var_166: Tensor[(10, 14, 11), float32], %var_167: Tensor[(10, 14, 11), float32]) -> Tensor[(10, 14, 11), float32] {
  @func_164(%var_166, %var_167) /* ty=Tensor[(10, 14, 11), float32] */
}

def @func_3595() -> (Tensor[(4, 9, 1), float32], Tensor[(12, 12, 2), uint8], Tensor[(288), uint8]) {
  %772 = @func_2698() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %773 = cast(meta[relay.Constant][43] /* ty=Tensor[(288), uint8] */, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %774 = cast(meta[relay.Constant][43] /* ty=Tensor[(288), uint8] */, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %775 = reshape(%773, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %776 = reshape(%774, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint8] */;
  %777 = @func_33(%775, %776) /* ty=(Tensor[(12, 12, 2), uint8],) */;
  %778 = %772.0;
  %779 = %777.0;
  (%778, %779, meta[relay.Constant][43] /* ty=Tensor[(288), uint8] */)
}

def @func_3742(%var_3673: Tensor[(1540), float32], %var_3691: Tensor[(10368), int8]) -> (Tensor[(10, 14, 11), float32], Tensor[(4, 9, 1540), float64], Tensor[(4, 9, 288), float64], Tensor[(10368), int8], Tensor[(4, 9, 1), float32]) {
  %780 = cast(%var_3673, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %781 = reshape(%780, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %782 = @func_926(%781) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */;
  %783 = %782.2;
  %784 = cast(%783, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %785 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(4, 9, 1), float64] */;
  %787 = cast(%var_3673, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %788 = cast(%var_3691, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %789 = reshape(%788, newshape=[10368]) /* ty=Tensor[(10368), int8] */;
  %790 = @func_3367(%789) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(10, 14, 11), bool], Tensor[(936), int16], Tensor[(4, 9, 288), float64]) */;
  %791 = cos(%784) /* ty=Tensor[(10, 14, 11), float32] */;
  %792 = mod(%786, %787) /* ty=Tensor[(4, 9, 1540), float64] */;
  %793 = %790.4;
  %794 = @func_514() /* ty=Tensor[(4, 9, 1), float32] */;
  (%791, %792, %793, %var_3691, %794)
}

def @func_3370(%var_3368: Tensor[(10368), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(10, 14, 11), bool], Tensor[(936), int16], Tensor[(4, 9, 288), float64]) {
  @func_3367(%var_3368) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(7, 220), float32], Tensor[(10, 14, 11), bool], Tensor[(936), int16], Tensor[(4, 9, 288), float64]) */
}

def @func_3955() -> (Tensor[(4, 9, 1), float32],) {
  @func_3953() /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_3113(%var_3083: Tensor[(10368), int8]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(180), float32], Tensor[(10368), int8], Tensor[(468, 2), int16], Tensor[(432), float32]) {
  %795 = @func_2698() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %796 = cast(meta[relay.Constant][44] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %797 = cast(%var_3083, dtype="int8") /* ty=Tensor[(10368), int8] */;
  %798 = cast(meta[relay.Constant][45] /* ty=Tensor[(468, 2), int16] */, dtype="int16") /* ty=Tensor[(468, 2), int16] */;
  %799 = cast(meta[relay.Constant][46] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %800 = reshape(%796, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), float32] */;
  %801 = reshape(%797, newshape=[10368]) /* ty=Tensor[(10368), int8] */;
  %802 = reshape(%798, newshape=[936]) /* ty=Tensor[(936), int16] */;
  %803 = reshape(%799, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float32] */;
  %804 = @func_1972(%800, %801, %802, %803) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(396), float32], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 1), float32], Tensor[(154, 10), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 288), float64], Tensor[(4, 9, 5), int64], Tensor[(4, 9, 10368), float32], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 1), float32], Tensor[(8, 11, 9), float32], Tensor[(936), int16], Tensor[(4, 9, 1), float32], Tensor[(4, 9, 5), bool], Tensor[(10, 14, 11), float32], Tensor[(4, 9, 12), uint16], Tensor[(4, 9, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %805 = %795.0;
  %806 = %804.15;
  (%805, %806, meta[relay.Constant][44] /* ty=Tensor[(180), float32] */, %var_3083, meta[relay.Constant][45] /* ty=Tensor[(468, 2), int16] */, meta[relay.Constant][46] /* ty=Tensor[(432), float32] */)
}

def @func_3246(%var_3245: Tensor[(936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(8, 9, 13), int16], Tensor[(936), int16], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
  %817 = fn (%var_3229: Tensor[(936), int16]) -> (Tensor[(4, 9, 1), float32], Tensor[(8, 9, 13), int16], Tensor[(936), int16], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) {
    %807 = cast(%var_3229, dtype="int16") /* ty=Tensor[(936), int16] */;
    %808 = reshape(%807, newshape=[8, 9, 13]) /* ty=Tensor[(8, 9, 13), int16] */;
    %809 = @func_1413(%808) /* ty=(Tensor[(8, 9, 13), int16], Tensor[(8, 11, 9), float32], Tensor[(792), float32]) */;
    %810 = cast(meta[relay.Constant][47] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %811 = cast(meta[relay.Constant][47] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %812 = reshape(%810, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
    %813 = reshape(%811, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float32] */;
    %814 = @func_1179() /* ty=Tensor[(4, 9, 1), float32] */;
    %815 = %809.0;
    %816 = @func_164(%812, %813) /* ty=Tensor[(10, 14, 11), float32] */;
    (%814, %815, %var_3229, %816, meta[relay.Constant][47] /* ty=Tensor[(1540), float32] */)
  };
  %817(%var_3245) /* ty=(Tensor[(4, 9, 1), float32], Tensor[(8, 9, 13), int16], Tensor[(936), int16], Tensor[(10, 14, 11), float32], Tensor[(1540), float32]) */
}

def @func_6081(%var_6071: Tensor[(396), float32]) -> (Tensor[(4, 9, 1), float32], Tensor[(10, 14, 11), float32], Tensor[(396), float32]) {
  %818 = @func_4355() /* ty=(Tensor[(4, 9, 1), float32],) */;
  %819 = cast(%var_6071, dtype="float32") /* ty=Tensor[(396), float32] */;
  %820 = reshape(%819, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %821 = @func_1556(%820) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(4, 9, ?), float32], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32], Tensor[(10, 14, 11), float32], Tensor[(10, 14, 11), float32]) */;
  %822 = %818.0;
  %823 = %821.4;
  (%822, %823, %var_6071)
}

def @func_3393() -> (Tensor[(7, 220), float32],) {
  %825 = fn () -> (Tensor[(7, 220), float32],) {
    %824 = @func_2445() /* ty=Tensor[(7, 220), float32] */;
    (%824,)
  };
  %825() /* ty=(Tensor[(7, 220), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

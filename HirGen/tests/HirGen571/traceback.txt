==========mod==========
#[version = "0.0.5"]
def @func_4182() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) {
  %0 = @func_3933() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %3 = reshape(%2, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
  %4 = @func_1920(%3) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %5 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %6 = %4.2;
  %7 = %5.0;
  (%1, %6, %7)
}

def @func_7721() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %8 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %9 = %8.2;
  %10 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  %11 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  (%9, %10, %11)
}

def @func_8949() -> (Tensor[(7, 5, 11), float64], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) {
  %12 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %15 = reshape(%13, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
  %16 = reshape(%14, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
  %17 = %12.1;
  %18 = @func_2239(%15, %16) /* ty=Tensor[(12, 13, 3), bool] */;
  (%17, %18, meta[relay.Constant][0] /* ty=Tensor[(468), int32] */)
}

def @func_4489(%var_4473: Tensor[(7, 13, 4), bool], %var_4474: Tensor[(7, 13, 4), bool]) -> (Tensor[(7, 13, 4), bool],) {
  %19 = cast(%var_4474, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
  %20 = shape_of(%var_4473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%var_4473, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %23 = logical_or(%21, %22) /* ty=Tensor[(7, 13, 4), bool] */;
  (%23,)
}

def @func_7974(%var_7943: Tensor[(11, 2, 2), float32], %var_7960: Tensor[(2), uint32]) -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(2), uint32], Tensor[(11, 2, 2), float32]) {
  %24 = cast(%var_7960, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %25 = reshape(%24, newshape=[2]) /* ty=Tensor[(2), uint32] */;
  %26 = @func_6095(%25) /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
  %27 = cast(%var_7943, dtype="float32") /* ty=Tensor[(11, 2, 2), float32] */;
  %28 = erf(%27) /* ty=Tensor[(11, 2, 2), float32] */;
  %29 = cast(%28, dtype="float32") /* ty=Tensor[(11, 2, 2), float32] */;
  %30 = @func_3168() /* ty=Tensor[(7, 5, 11), float64] */;
  %31 = %26.3;
  %32 = atanh(%29) /* ty=Tensor[(11, 2, 2), float32] */;
  (%30, %31, %var_7960, %32)
}

def @func_10770() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %33 = @func_6176() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(55, 7), float64] */, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
  %35 = reshape(%34, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float64] */;
  %36 = @func_3699() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) */;
  %37 = %33.0;
  %38 = @func_6659(%35) /* ty=Tensor[(7, 5, 11), bool] */;
  %39 = @func_3168() /* ty=Tensor[(7, 5, 11), float64] */;
  %40 = %36.4;
  (%37, %38, meta[relay.Constant][1] /* ty=Tensor[(55, 7), float64] */, %39, %40)
}

def @func_4197(%var_4192: Tensor[(1, 2), uint32], %var_4193: Tensor[(1, 2), uint32]) -> Tensor[(?, 2), bool] {
  %41 = cast(%var_4193, dtype="bool") /* ty=Tensor[(1, 2), bool] */;
  %42 = shape_of(%var_4192, dtype="int32") /* ty=Tensor[(2), int32] */;
  %43 = cast(%var_4192, dtype="bool") /* ty=Tensor[(1, 2), bool] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  not_equal(%43, %44) /* ty=Tensor[(?, 2), bool] */
}

def @func_2515() -> (Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) {
  %45 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %48 = reshape(%46, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
  %49 = reshape(%47, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
  %50 = %45.0;
  %51 = @func_2239(%48, %49) /* ty=Tensor[(12, 13, 3), bool] */;
  (%50, %51, meta[relay.Constant][2] /* ty=Tensor[(468), int32] */)
}

def @func_1695() -> (Tensor[(576), int8],) {
  %52 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %53 = %52.0;
  (%53,)
}

def @func_5762(%var_5730: uint8, %var_5731: Tensor[(14, 1, 9), uint8]) -> (Tensor[(14, 1, 9), uint8], Tensor[(576), int8], Tensor[(14, 1, 9), float32]) {
  %54 = cast(%var_5730, dtype="uint8") /* ty=uint8 */;
  %55 = cast(%var_5731, dtype="uint8") /* ty=Tensor[(14, 1, 9), uint8] */;
  %56 = cast(%var_5731, dtype="float32") /* ty=Tensor[(14, 1, 9), float32] */;
  %57 = erf(%56) /* ty=Tensor[(14, 1, 9), float32] */;
  %58 = cast(%57, dtype="float32") /* ty=Tensor[(14, 1, 9), float32] */;
  %59 = bitwise_or(%54, %55) /* ty=Tensor[(14, 1, 9), uint8] */;
  %60 = @func_2010() /* ty=Tensor[(576), int8] */;
  %61 = asinh(%58) /* ty=Tensor[(14, 1, 9), float32] */;
  (%59, %60, %61)
}

def @func_1210() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) {
  %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %63 = reshape(%62, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %64 = @func_934(%63) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %65 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %66 = %64.2;
  (%65, %66, meta[relay.Constant][3] /* ty=Tensor[(576), int8] */)
}

def @func_8356() -> Tensor[(576), int8] {
  @func_2010() /* ty=Tensor[(576), int8] */
}

def @func_1433() -> (Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %67 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %68 = cast(%67, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %69 = sqrt(%68) /* ty=Tensor[(7, 5, 11), float32] */;
  %70 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  (%69, %70)
}

def @func_1500() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %71 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %72 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %73 = %71.2;
  %74 = %72.1;
  (%73, %74)
}

def @func_4984(%var_4904: Tensor[(5, 5, 11), float32], %var_4954: Tensor[(1350), uint8]) -> (Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) {
  %75 = @func_3570() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %76 = %75.0;
  %77 = cast(%var_4904, dtype="int64") /* ty=Tensor[(5, 5, 11), int64] */;
  %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%76, dtype="int64") /* ty=Tensor[(5, 5, 11), int64] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %81 = cast(meta[relay.Constant][4] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %82 = reshape(%81, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %83 = @func_907(%82) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %84 = @func_2567() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %85 = %84.1;
  %86 = cast(%85, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %87 = reshape(%86, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float64] */;
  %88 = @func_3922(%87) /* ty=Tensor[(7, 5, 11), uint8] */;
  %89 = cast(%85, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%88, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %93 = @func_4667() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
  %94 = cast(%var_4954, dtype="uint8") /* ty=Tensor[(1350), uint8] */;
  %95 = %83.1;
  %96 = cast(%95, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %97 = reshape(%94, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), uint8] */;
  %98 = reshape(%96, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %99 = @func_2598(%97, %98) /* ty=(Tensor[(6, 15, 15), uint8], Tensor[(12, 12, 4), float32], Tensor[(576), int8]) */;
  %100 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %101 = add(%79, %80) /* ty=Tensor[(5, 5, 11), int64] */;
  %102 = power(%91, %92) /* ty=Tensor[(7, 5, 11), float32] */;
  %103 = %93.2;
  %104 = %99.1;
  %105 = %100.2;
  (%101, %95, meta[relay.Constant][4] /* ty=Tensor[(576), int8] */, %102, %103, %104, %var_4954, %105)
}

def @func_2024() -> (Tensor[(576), int8],) {
  %106 = @func_1695() /* ty=(Tensor[(576), int8],) */;
  %107 = %106.0;
  (%107,)
}

def @func_1319() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float32]) {
  %108 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %109 = %108.1;
  %110 = cast(%109, dtype="int8") /* ty=Tensor[(576), int8] */;
  %111 = reshape(%110, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %112 = @func_800(%111) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %113 = %112.2;
  (%109, %113)
}

def @func_5491() -> (Tensor[(5, 5, 11), float64],) {
  %114 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %115 = %114.0;
  %116 = cast(%115, dtype="float64") /* ty=Tensor[(5, 5, 11), float64] */;
  %117 = asin(%116) /* ty=Tensor[(5, 5, 11), float64] */;
  (%117,)
}

def @func_4537() -> Tensor[(7, 5, 11), float64] {
  @func_3168() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_5224(%var_5197: Tensor[(2), uint32]) -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(468), int32], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(2), uint32], Tensor[(7, 5, 11), float32]) {
  %118 = @func_4032() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %119 = @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %120 = @func_2515() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */;
  %121 = @func_2024() /* ty=(Tensor[(576), int8],) */;
  %122 = cast(%var_5197, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %123 = reshape(%122, newshape=[2]) /* ty=Tensor[(2), uint32] */;
  %124 = @func_4331(%123) /* ty=(Tensor[(576), float32], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(5, 5, 11), float32]) */;
  %125 = @func_2200() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %126 = %118.0;
  %127 = %119.2;
  %128 = %120.2;
  %129 = %121.0;
  %130 = %124.4;
  %131 = %125.0;
  (%126, %127, %128, %129, %130, %var_5197, %131)
}

def @func_8792() -> Tensor[(7, 5, 11), float64] {
  @func_3168() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_7903() -> Tensor[(5, 5, 11), float32] {
  %132 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %132.0
}

def @func_9524(%var_9510: float64) -> Tensor[(15, 6, 9), float64] {
  %133 = cast(%var_9510, dtype="float64") /* ty=float64 */;
  %134 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 9), float64] */;
  subtract(%133, %134) /* ty=Tensor[(15, 6, 9), float64] */
}

def @func_1673() -> (Tensor[(5, 5, 11), float32],) {
  %135 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  (%135,)
}

def @func_7265(%var_7260: Tensor[(2, 9, 5), int32], %var_7261: Tensor[(2, 9, 5), int32]) -> Tensor[(2, 9, 5), bool] {
  %136 = cast(%var_7261, dtype="bool") /* ty=Tensor[(2, 9, 5), bool] */;
  %137 = shape_of(%var_7260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_7260, dtype="bool") /* ty=Tensor[(2, 9, 5), bool] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%138, %139) /* ty=Tensor[(2, 9, 5), bool] */
}

def @func_8826() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %140 = @func_8255() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %141 = @func_7140() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %142 = %140.0;
  %143 = %141.0;
  (%142, %143)
}

def @func_4694() -> Tensor[(468), int32] {
  %144 = @func_2515() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */;
  %144.2
}

def @func_3922(%var_3915: Tensor[(7, 5, 11), float64]) -> Tensor[(7, 5, 11), uint8] {
  %145 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
  %146 = cast(%var_3915, dtype="uint8") /* ty=Tensor[(7, 5, 11), uint8] */;
  %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%145, dtype="uint8") /* ty=Tensor[(7, 5, 11), uint8] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%148, %149) /* ty=Tensor[(7, 5, 11), uint8] */
}

def @func_9462() -> (Tensor[(7, 5, 11), float64],) {
  %150 = @func_4382() /* ty=Tensor[(7, 5, 11), float64] */;
  (%150,)
}

def @func_10292() -> (Tensor[(576), int8], Tensor[(468), int32], Tensor[(7, 5, 11), float64]) {
  %151 = @func_5311() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */;
  %152 = @func_9362() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(468), int32]) */;
  %153 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %154 = %151.1;
  %155 = %152.1;
  %156 = %153.2;
  (%154, %155, %156)
}

def @func_4382() -> Tensor[(7, 5, 11), float64] {
  %157 = @func_4182() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %157.0
}

def @func_800(%var_790: Tensor[(576), int8]) -> (Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) {
  %158 = cast(%var_790, dtype="int8") /* ty=Tensor[(576), int8] */;
  %159 = cast(%var_790, dtype="int8") /* ty=Tensor[(576), int8] */;
  %160 = reshape(%158, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %161 = reshape(%159, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %162 = @func_582(%160, %161) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %163 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %164 = %163.0;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %166 = %162.0;
  %167 = cosh(%165) /* ty=Tensor[(7, 5, 11), float32] */;
  (%166, %var_790, %167)
}

def @func_4820(%var_4752: Tensor[(3, 13, 14), float64]) -> (Tensor[(5, 5, 11), float32], Tensor[(3, 13, 14), bool], Tensor[(576), int8], Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %168 = cast(%var_4752, dtype="float64") /* ty=Tensor[(3, 13, 14), float64] */;
  %169 = asin(%168) /* ty=Tensor[(3, 13, 14), float64] */;
  %170 = cast(%var_4752, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %171 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%169, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %174 = @func_4667() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
  %175 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
  %176 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  %177 = cast(%176, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %178 = reshape(%177, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %179 = @func_2771(%178) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */;
  %180 = @func_3482() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %181 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %182 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %183 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %184 = less_equal(%172, %173) /* ty=Tensor[(3, 13, 14), bool] */;
  %185 = %174.1;
  %186 = %175.2;
  %187 = %179.0;
  %188 = %180.0;
  %189 = %181.1;
  %190 = %182.0;
  %191 = %183.0;
  (%176, %184, %185, %186, %187, %188, %189, %190, %191)
}

def @func_5339(%var_5315: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), uint8], Tensor[(7, 5, 11), float64]) {
  %192 = @func_2200() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %193 = %192.2;
  %194 = cast(%var_5315, dtype="uint8") /* ty=Tensor[(7, 5, 11), uint8] */;
  %195 = shape_of(%193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(%193, dtype="uint8") /* ty=Tensor[(7, 5, 11), uint8] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %198 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %199 = logical_xor(%196, %197) /* ty=Tensor[(7, 5, 11), uint8] */;
  %200 = %198.1;
  (%199, %200)
}

def @func_6874(%var_6855: Tensor[(576), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int8], Tensor[(576), int8], Tensor[(16, 6, 4), float64], Tensor[(12, 32), float64]) {
  %201 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %202 = %201.0;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %204 = cast(%var_6855, dtype="int8") /* ty=Tensor[(576), int8] */;
  %205 = reshape(%203, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %206 = reshape(%204, newshape=[1, 576]) /* ty=Tensor[(1, 576), int8] */;
  %207 = @func_3085(%205, %206) /* ty=(Tensor[(12, 13, 3), bool], Tensor[(5, 5, 11), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(1, 576), int8], Tensor[(6, 96), bool], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(13, 11, 6), float64], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float32]) */;
  %208 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 32), float64] */, dtype="float64") /* ty=Tensor[(12, 32), float64] */;
  %209 = reshape(%208, newshape=[16, 6, 4]) /* ty=Tensor[(16, 6, 4), float64] */;
  %210 = %207.1;
  %211 = @func_6399(%209) /* ty=Tensor[(16, 6, 4), float64] */;
  (%202, %210, %var_6855, %211, meta[relay.Constant][6] /* ty=Tensor[(12, 32), float64] */)
}

def @func_6399(%var_6386: Tensor[(16, 6, 4), float64]) -> Tensor[(16, 6, 4), float64] {
  %212 = cast(%var_6386, dtype="float64") /* ty=Tensor[(16, 6, 4), float64] */;
  cosh(%212) /* ty=Tensor[(16, 6, 4), float64] */
}

def @func_3422() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %213 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %214 = %213.0;
  %215 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
  (%214, %215)
}

def @func_6114() -> (Tensor[(7, 5, 11), float64],) {
  %216 = @func_3434() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %217 = %216.0;
  (%217,)
}

def @func_9901(%var_9896: Tensor[(6, 13, 11), uint8], %var_9897: Tensor[(6, 13, 11), uint8]) -> Tensor[(6, 13, 11), bool] {
  %218 = cast(%var_9897, dtype="bool") /* ty=Tensor[(6, 13, 11), bool] */;
  %219 = shape_of(%var_9896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%var_9896, dtype="bool") /* ty=Tensor[(6, 13, 11), bool] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%220, %221) /* ty=Tensor[(6, 13, 11), bool] */
}

def @func_6562() -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %222 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
  %223 = @func_1695() /* ty=(Tensor[(576), int8],) */;
  %224 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %225 = @func_6362() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %226 = %222.0;
  %227 = %223.0;
  %228 = %224.0;
  %229 = %225.0;
  %230 = @func_6238() /* ty=Tensor[(7, 5, 11), float64] */;
  (%226, %227, %228, %229, %230)
}

def @func_6706() -> (Tensor[(7, 5, 11), float64],) {
  %231 = @func_4032() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %232 = %231.2;
  (%232,)
}

def @func_2371() -> Tensor[(5, 5, 11), float32] {
  @func_1531() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_6799() -> Tensor[(?, 2), bool] {
  %233 = @func_5603() /* ty=(Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
  %233.1
}

def @func_8658() -> Tensor[(576), int8] {
  %234 = @func_5603() /* ty=(Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
  %234.0
}

def @func_907(%var_899: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) {
  %235 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %236 = cast(%var_899, dtype="int8") /* ty=Tensor[(576), int8] */;
  %237 = reshape(%236, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %238 = @func_639(%237) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */;
  %239 = %235.0;
  %240 = %238.3;
  (%239, %240, %var_899)
}

def @func_4408() -> Tensor[(5, 5, 5), float32] {
  %241 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 5), float32] */;
  sqrt(%241) /* ty=Tensor[(5, 5, 5), float32] */
}

def @func_1553() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
  %242 = cast(meta[relay.Constant][8] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %243 = reshape(%242, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %244 = @func_934(%243) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %245 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  %246 = %244.2;
  (%245, %246, meta[relay.Constant][8] /* ty=Tensor[(576), int8] */)
}

def @func_639(%var_620: Tensor[(576), int8]) -> (Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) {
  %247 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 11, 6), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
  %248 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
  %249 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
  %250 = reshape(%248, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %251 = reshape(%249, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %252 = @func_582(%250, %251) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %253 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
  %254 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
  %255 = reshape(%253, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %256 = reshape(%254, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %257 = @func_582(%255, %256) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %258 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
  %259 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
  %260 = reshape(%258, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %261 = reshape(%259, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %262 = @func_582(%260, %261) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %263 = acosh(%247) /* ty=Tensor[(13, 11, 6), float64] */;
  %264 = %252.2;
  %265 = %257.0;
  %266 = %262.0;
  (%263, %264, %var_620, %265, %266)
}

def @func_5573() -> Tensor[(7, 5, 11), float64] {
  %267 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %267.0
}

def @func_6060() -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
  %268 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %269 = @func_3734() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %270 = %268.0;
  %271 = %269.0;
  %272 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  (%270, %271, %272)
}

def @func_7076(%var_7074: Tensor[(72, 8), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(72, 8), int8]) {
  %273 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %274 = cast(%var_7074, dtype="int8") /* ty=Tensor[(72, 8), int8] */;
  %275 = reshape(%274, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %276 = @func_1066(%275) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */;
  %277 = @func_2371() /* ty=Tensor[(5, 5, 11), float32] */;
  %278 = %273.0;
  %279 = %276.0;
  (%277, %278, %279, %var_7074)
}

def @func_7856() -> (Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8]) {
  %280 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %281 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %282 = %280.0;
  %283 = %281.1;
  (%282, %283)
}

def @func_1032() -> Tensor[(7, 5, 11), float64] {
  %284 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %284.0
}

def @main(%var_10892: Tensor[(27, 50), uint8]) -> (Tensor[(5, 5, 11), float32], Tensor[(27, 50), uint8], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), float64]) {
  %285 = @func_3811() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %286 = cast(%var_10892, dtype="uint8") /* ty=Tensor[(27, 50), uint8] */;
  %287 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(27, 50), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %288 = cast(meta[relay.Constant][10] /* ty=Tensor[(27, 50), uint8] */, dtype="uint8") /* ty=Tensor[(27, 50), uint8] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %290 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %291 = %285.0;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %293 = cast(meta[relay.Constant][10] /* ty=Tensor[(27, 50), uint8] */, dtype="uint8") /* ty=Tensor[(27, 50), uint8] */;
  %294 = reshape(%292, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %295 = reshape(%293, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %296 = @func_4984(%294, %295) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */;
  %297 = %296.1;
  %298 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 12, 4), int8] */, dtype="int16") /* ty=Tensor[(12, 12, 4), int16] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="int16") /* ty=Tensor[(12, 12, 4), int16] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %302 = logical_xor(%300, %301) /* ty=Tensor[(12, 12, 4), int16] */;
  %303 = cast(%297, dtype="float64") /* ty=Tensor[(12, 12, 4), float64] */;
  %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%302, dtype="float64") /* ty=Tensor[(12, 12, 4), float64] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %307 = minimum(%288, %289) /* ty=Tensor[(27, 50), uint8] */;
  %308 = %290.1;
  %309 = floor_divide(%305, %306) /* ty=Tensor[(12, 12, 4), float64] */;
  (%291, %307, %308, %309)
}

def @func_3434() -> (Tensor[(7, 5, 11), float64],) {
  %310 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %311 = %310.0;
  (%311,)
}

def @func_6176() -> (Tensor[(5, 5, 11), float32],) {
  %312 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %313 = %312.0;
  (%313,)
}

def @func_8496() -> (Tensor[(7, 5, 11), float64],) {
  %314 = @func_3699() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) */;
  %315 = %314.3;
  (%315,)
}

def @func_6628() -> (Tensor[(7, 5, 11), float64],) {
  %316 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
  (%316,)
}

def @func_8420() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(12, 13, 3), float64]) {
  %317 = @func_7395() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */;
  %318 = @func_5725() /* ty=(Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) */;
  %319 = %318.0;
  %320 = cast(%319, dtype="float64") /* ty=Tensor[(12, 13, 3), float64] */;
  %321 = log10(%320) /* ty=Tensor[(12, 13, 3), float64] */;
  %322 = cast(%321, dtype="float64") /* ty=Tensor[(12, 13, 3), float64] */;
  %323 = @func_7813() /* ty=Tensor[(7, 5, 11), float64] */;
  %324 = %317.1;
  %325 = tan(%322) /* ty=Tensor[(12, 13, 3), float64] */;
  (%323, %324, %325)
}

def @func_3372() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
  %326 = @func_2337() /* ty=Tensor[(576), int8] */;
  %327 = @func_2672() /* ty=Tensor[(5, 5, 11), float32] */;
  (%326, %327)
}

def @func_1118() -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) {
  %328 = cast(meta[relay.Constant][12] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %329 = reshape(%328, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %330 = @func_907(%329) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %331 = cast(meta[relay.Constant][12] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %332 = reshape(%331, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %333 = @func_1066(%332) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */;
  %334 = cast(meta[relay.Constant][12] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %335 = reshape(%334, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %336 = @func_1066(%335) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */;
  %337 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %338 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %339 = %330.1;
  %340 = %333.0;
  %341 = %336.2;
  %342 = %337.0;
  (%338, %339, meta[relay.Constant][12] /* ty=Tensor[(576), int8] */, %340, %341, %342)
}

def @func_8638() -> (Tensor[(7, 5, 11), float64],) {
  %343 = @func_6562() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %344 = %343.3;
  (%344,)
}

def @func_6095(%var_6079: Tensor[(2), uint32]) -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
  %345 = cast(%var_6079, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %346 = reshape(%345, newshape=[2]) /* ty=Tensor[(2), uint32] */;
  %347 = @func_5224(%346) /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(468), int32], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(2), uint32], Tensor[(7, 5, 11), float32]) */;
  %348 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %349 = @func_5034() /* ty=Tensor[(576), int8] */;
  %350 = %347.0;
  %351 = %348.1;
  (%349, %350, %var_6079, %351)
}

def @func_2200() -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %352 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %353 = %352.1;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %355 = @func_2024() /* ty=(Tensor[(576), int8],) */;
  %356 = @func_1841() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %357 = log2(%354) /* ty=Tensor[(7, 5, 11), float32] */;
  %358 = %355.0;
  %359 = %356.0;
  (%357, %358, %359)
}

def @func_9614() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %360 = @func_8851() /* ty=(Tensor[(576), int8],) */;
  %361 = @func_6628() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %362 = %360.0;
  %363 = %361.0;
  (%362, %363)
}

def @func_3085(%var_2897: Tensor[(5, 5, 11), float32], %var_2918: Tensor[(1, 576), int8]) -> (Tensor[(12, 13, 3), bool], Tensor[(5, 5, 11), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(1, 576), int8], Tensor[(6, 96), bool], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(13, 11, 6), float64], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float32]) {
  %364 = @func_2515() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */;
  %365 = @func_2371() /* ty=Tensor[(5, 5, 11), float32] */;
  %366 = cast(%var_2897, dtype="int8") /* ty=Tensor[(5, 5, 11), int8] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="int8") /* ty=Tensor[(5, 5, 11), int8] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %370 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %371 = cast(%var_2918, dtype="int8") /* ty=Tensor[(1, 576), int8] */;
  %372 = reshape(%371, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %373 = @func_800(%372) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %374 = cast(%var_2918, dtype="int8") /* ty=Tensor[(1, 576), int8] */;
  %375 = cast(%var_2918, dtype="float32") /* ty=Tensor[(1, 576), float32] */;
  %376 = reshape(%374, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %377 = reshape(%375, newshape=[6, 96]) /* ty=Tensor[(6, 96), float32] */;
  %378 = @func_1747(%376, %377) /* ty=(Tensor[(6, 96), float32], Tensor[(6, 96), bool]) */;
  %379 = cast(%var_2897, dtype="float64") /* ty=Tensor[(5, 5, 11), float64] */;
  %380 = log2(%379) /* ty=Tensor[(5, 5, 11), float64] */;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %382 = @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %383 = @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %384 = %378.1;
  %385 = cast(%384, dtype="int8") /* ty=Tensor[(6, 96), int8] */;
  %386 = reshape(%385, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %387 = @func_639(%386) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */;
  %388 = cast(%380, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %389 = %387.4;
  %390 = cast(%389, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %391 = reshape(%390, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %392 = @func_800(%391) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %393 = cast(%384, dtype="int8") /* ty=Tensor[(6, 96), int8] */;
  %394 = reshape(%393, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %395 = @func_1066(%394) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */;
  %396 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %397 = cast(%var_2918, dtype="int8") /* ty=Tensor[(1, 576), int8] */;
  %398 = reshape(%397, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %399 = @func_639(%398) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */;
  %400 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %401 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %402 = %364.1;
  %403 = maximum(%368, %369) /* ty=Tensor[(5, 5, 11), int8] */;
  %404 = %370.1;
  %405 = %373.2;
  %406 = exp(%381) /* ty=Tensor[(5, 5, 11), float32] */;
  %407 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %408 = %382.1;
  %409 = %383.0;
  %410 = log10(%388) /* ty=Tensor[(5, 5, 11), float32] */;
  %411 = %392.1;
  %412 = %395.1;
  %413 = %396.0;
  %414 = @func_2337() /* ty=Tensor[(576), int8] */;
  %415 = %399.0;
  %416 = %400.4;
  %417 = %401.0;
  (%402, %403, %404, %405, %var_2918, %384, %406, %407, %408, %409, %389, %410, %411, %412, %413, %414, %415, %416, %417)
}

def @func_6362() -> (Tensor[(7, 5, 11), float64],) {
  %418 = @func_3877() /* ty=Tensor[(7, 5, 11), float64] */;
  (%418,)
}

def @func_8386() -> (Tensor[(5, 5, 11), float64],) {
  %419 = @func_5491() /* ty=(Tensor[(5, 5, 11), float64],) */;
  %420 = %419.0;
  (%420,)
}

def @func_9386() -> Tensor[(576), int8] {
  @func_7516() /* ty=Tensor[(576), int8] */
}

def @func_3933() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %421 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %422 = %421.2;
  %423 = @func_2800() /* ty=Tensor[(7, 5, 11), float64] */;
  (%422, %423)
}

def @func_8851() -> (Tensor[(576), int8],) {
  %424 = @func_6487() /* ty=Tensor[(576), int8] */;
  (%424,)
}

def @func_9066() -> Tensor[(5, 5, 5), float32] {
  @func_4408() /* ty=Tensor[(5, 5, 5), float32] */
}

def @func_6487() -> Tensor[(576), int8] {
  %425 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %425.0
}

def @func_8464(%var_8430: Tensor[(14, 15, 13), bool]) -> (Tensor[(14, 15, 13), bool], Tensor[(576), int8], Tensor[(14, 15, 13), float32], Tensor[(5, 5, 11), float32]) {
  %426 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %427 = cast(%var_8430, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
  %428 = cast(%var_8430, dtype="float32") /* ty=Tensor[(14, 15, 13), float32] */;
  %429 = logical_or(%426, %427) /* ty=Tensor[(14, 15, 13), bool] */;
  %430 = @func_2010() /* ty=Tensor[(576), int8] */;
  %431 = acosh(%428) /* ty=Tensor[(14, 15, 13), float32] */;
  %432 = @func_7903() /* ty=Tensor[(5, 5, 11), float32] */;
  (%429, %430, %431, %432)
}

def @func_5897(%var_5827: Tensor[(385), float64], %var_5861: Tensor[(1350), uint8]) -> (Tensor[(5, 5, 11), bool], Tensor[(7, 5, 11), uint8], Tensor[(385), float64], Tensor[(7, 5, 11), float32], Tensor[(1350), uint8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %433 = @func_3848() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %434 = %433.0;
  %435 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 5, 11), float32] */, dtype="bool") /* ty=Tensor[(5, 5, 11), bool] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%434, dtype="bool") /* ty=Tensor[(5, 5, 11), bool] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %439 = cast(%var_5827, dtype="float64") /* ty=Tensor[(385), float64] */;
  %440 = reshape(%439, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float64] */;
  %441 = cast(%434, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %442 = cast(%var_5861, dtype="uint8") /* ty=Tensor[(1350), uint8] */;
  %443 = reshape(%441, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %444 = reshape(%442, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %445 = @func_4984(%443, %444) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */;
  %446 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %447 = cast(%434, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %448 = reshape(%447, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %449 = @func_2771(%448) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */;
  %450 = logical_or(%437, %438) /* ty=Tensor[(5, 5, 11), bool] */;
  %451 = @func_3922(%440) /* ty=Tensor[(7, 5, 11), uint8] */;
  %452 = %445.3;
  %453 = %446.0;
  %454 = %449.1;
  %455 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  (%450, %451, %var_5827, %452, %var_5861, %453, %454, %455)
}

def @func_10101(%var_10088: Tensor[(5, 5, 11), float32]) -> Tensor[(5, 5, 11), float32] {
  %456 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %457 = %456.0;
  %458 = cast(%var_10088, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%460, %461) /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_1254() -> (Tensor[(5, 5, 11), float32],) {
  %462 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %463 = sqrt(%462) /* ty=Tensor[(5, 5, 11), float32] */;
  (%463,)
}

def @func_3570() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %464 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %465 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %466 = %464.0;
  %467 = %465.1;
  (%466, %467)
}

def @func_3699() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) {
  %468 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %469 = %468.1;
  %470 = cast(%469, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %471 = @func_3434() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %472 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %473 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
  %474 = rsqrt(%470) /* ty=Tensor[(7, 5, 11), float64] */;
  %475 = %471.0;
  %476 = @func_2800() /* ty=Tensor[(7, 5, 11), float64] */;
  %477 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
  %478 = %472.0;
  (%473, %474, %475, %476, %477, %478)
}

def @func_3848() -> (Tensor[(5, 5, 11), float32],) {
  %479 = @func_2672() /* ty=Tensor[(5, 5, 11), float32] */;
  (%479,)
}

def @func_2155() -> Tensor[(7, 5, 11), float64] {
  %480 = @func_1841() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %480.0
}

def @func_5311() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8]) {
  %481 = @func_4537() /* ty=Tensor[(7, 5, 11), float64] */;
  %482 = @func_5034() /* ty=Tensor[(576), int8] */;
  (%481, %482)
}

def @func_7231() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(36, 16), int8]) {
  %483 = cast(meta[relay.Constant][15] /* ty=Tensor[(36, 16), int8] */, dtype="int8") /* ty=Tensor[(36, 16), int8] */;
  %484 = reshape(%483, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %485 = @func_907(%484) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %486 = @func_3877() /* ty=Tensor[(7, 5, 11), float64] */;
  %487 = %485.0;
  (%486, %487, meta[relay.Constant][15] /* ty=Tensor[(36, 16), int8] */)
}

def @func_10013(%var_10003: Tensor[(6, 96), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float64]) {
  %488 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %489 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
  %490 = %489.1;
  %491 = @func_3877() /* ty=Tensor[(7, 5, 11), float64] */;
  %492 = cast(%491, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %493 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%490, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %496 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %497 = cast(%var_10003, dtype="int8") /* ty=Tensor[(6, 96), int8] */;
  %498 = reshape(%497, newshape=[72, 8]) /* ty=Tensor[(72, 8), int8] */;
  %499 = @func_7076(%498) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(72, 8), int8]) */;
  %500 = @func_8386() /* ty=(Tensor[(5, 5, 11), float64],) */;
  %501 = %488.0;
  %502 = divide(%494, %495) /* ty=Tensor[(7, 5, 11), float32] */;
  %503 = %496.0;
  %504 = %499.0;
  %505 = %500.0;
  (%501, %502, %503, %504, %var_10003, %505)
}

def @func_4667() -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
  %506 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
  %507 = @func_3372() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %508 = cast(meta[relay.Constant][16] /* ty=Tensor[(2), uint32] */, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %509 = cast(meta[relay.Constant][16] /* ty=Tensor[(2), uint32] */, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %510 = reshape(%508, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %511 = reshape(%509, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %512 = %506.0;
  %513 = %507.0;
  %514 = @func_4197(%510, %511) /* ty=Tensor[(?, 2), bool] */;
  %515 = @func_2800() /* ty=Tensor[(7, 5, 11), float64] */;
  (%512, %513, %514, meta[relay.Constant][16] /* ty=Tensor[(2), uint32] */, %515)
}

def @func_10837(%var_10826: Tensor[(90), int32]) -> (Tensor[(5, 5, 11), float32], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) {
  %516 = @func_6060() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %517 = cast(%var_10826, dtype="int32") /* ty=Tensor[(90), int32] */;
  %518 = cast(%var_10826, dtype="int32") /* ty=Tensor[(90), int32] */;
  %519 = reshape(%517, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), int32] */;
  %520 = reshape(%518, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), int32] */;
  %521 = %516.0;
  %522 = @func_7265(%519, %520) /* ty=Tensor[(2, 9, 5), bool] */;
  (%521, %522, %var_10826)
}

def @func_2239(%var_2232: Tensor[(12, 13, 3), int32], %var_2233: Tensor[(12, 13, 3), int32]) -> Tensor[(12, 13, 3), bool] {
  %523 = cast(%var_2233, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %524 = shape_of(%var_2232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%var_2232, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%525, %526) /* ty=Tensor[(12, 13, 3), bool] */
}

def @func_2294() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
  %527 = @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %528 = @func_2010() /* ty=Tensor[(576), int8] */;
  %529 = %527.0;
  (%528, %529)
}

def @func_6785() -> (Tensor[(7, 5, 11), float32],) {
  %530 = @func_2809() /* ty=(Tensor[(7, 5, 11), float32],) */;
  %531 = %530.0;
  (%531,)
}

def @func_10687() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(385), float32]) {
  %532 = @func_9018() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %533 = cast(meta[relay.Constant][17] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %534 = reshape(%533, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
  %535 = @func_1920(%534) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %536 = %532.1;
  %537 = %535.2;
  (%536, %537, meta[relay.Constant][17] /* ty=Tensor[(385), float32] */)
}

def @func_7644() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(2), uint32]) {
  %538 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %539 = @func_4514() /* ty=Tensor[(7, 5, 11), float64] */;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %541 = reshape(%540, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
  %542 = @func_1920(%541) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %543 = @func_4667() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
  %544 = %538.0;
  %545 = %542.2;
  %546 = %543.3;
  (%544, %539, %545, %546)
}

def @func_934(%var_931: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
  %547 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %548 = %547.0;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %550 = cast(%var_931, dtype="int8") /* ty=Tensor[(576), int8] */;
  %551 = reshape(%550, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %552 = @func_639(%551) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */;
  %553 = acos(%549) /* ty=Tensor[(7, 5, 11), float32] */;
  %554 = %552.2;
  (%553, %554, %var_931)
}

def @func_3734() -> (Tensor[(5, 5, 11), float32],) {
  %555 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  (%555,)
}

def @func_6749(%var_6744: Tensor[(13, 10, 9), int16], %var_6745: Tensor[(13, 10, 9), int16]) -> Tensor[(13, 10, 9), bool] {
  %556 = cast(%var_6745, dtype="bool") /* ty=Tensor[(13, 10, 9), bool] */;
  %557 = shape_of(%var_6744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %558 = cast(%var_6744, dtype="bool") /* ty=Tensor[(13, 10, 9), bool] */;
  %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%558, %559) /* ty=Tensor[(13, 10, 9), bool] */
}

def @func_7516() -> Tensor[(576), int8] {
  %560 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %560.0
}

def @func_736() -> (Tensor[(7, 5, 11), float64],) {
  %561 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %562 = atan(%561) /* ty=Tensor[(7, 5, 11), float64] */;
  (%562,)
}

def @func_1066(%var_1051: Tensor[(6, 96), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) {
  %563 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %564 = cast(%var_1051, dtype="int8") /* ty=Tensor[(6, 96), int8] */;
  %565 = reshape(%564, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %566 = @func_934(%565) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %567 = %563.0;
  %568 = %566.2;
  (%567, %568, %var_1051)
}

def @func_1779() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %569 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %570 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %571 = %569.1;
  %572 = %570.0;
  (%571, %572)
}

def @func_2010() -> Tensor[(576), int8] {
  %573 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %573.1
}

def @func_1747(%var_1722: Tensor[(6, 96), int8], %var_1732: Tensor[(6, 96), float32]) -> (Tensor[(6, 96), float32], Tensor[(6, 96), bool]) {
  %574 = cast(%var_1722, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %575 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %576 = %575.4;
  %577 = cast(%var_1722, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(2), int32] */;
  %579 = cast(%576, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %581 = maximum(%579, %580) /* ty=Tensor[(6, 96), float32] */;
  %582 = cast(%var_1732, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(2), int32] */;
  %584 = cast(%581, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %586 = erf(%574) /* ty=Tensor[(6, 96), float32] */;
  %587 = not_equal(%584, %585) /* ty=Tensor[(6, 96), bool] */;
  (%586, %587)
}

def @func_9362() -> (Tensor[(5, 5, 11), float32], Tensor[(468), int32]) {
  %588 = @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %589 = %588.0;
  %590 = @func_4694() /* ty=Tensor[(468), int32] */;
  (%589, %590)
}

def @func_2771(%var_2749: Tensor[(5, 5, 11), float32]) -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
  %591 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  %592 = cast(%var_2749, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %596 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %597 = floor_divide(%594, %595) /* ty=Tensor[(5, 5, 11), float32] */;
  %598 = %596.2;
  (%597, %598)
}

def @func_5554() -> Tensor[(5, 5, 11), float32] {
  %599 = @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %599.2
}

def @func_10809(%var_10779: Tensor[(135, 10), uint8]) -> Tensor[(135, 10), float32] {
  %600 = @func_10153() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(?, 2), bool], Tensor[(275), float32], Tensor[(135, 10), uint8]) */;
  %601 = %600.4;
  %602 = cast(%var_10779, dtype="bool") /* ty=Tensor[(135, 10), bool] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(2), int32] */;
  %604 = cast(%601, dtype="bool") /* ty=Tensor[(135, 10), bool] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %606 = less(%604, %605) /* ty=Tensor[(135, 10), bool] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(135, 10), float32] */;
  %608 = shape_of(%601, dtype="int32") /* ty=Tensor[(2), int32] */;
  %609 = cast(%601, dtype="float32") /* ty=Tensor[(135, 10), float32] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  power(%609, %610) /* ty=Tensor[(135, 10), float32] */
}

def @func_8991() -> (Tensor[(7, 5, 11), float64],) {
  %611 = @func_8420() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(12, 13, 3), float64]) */;
  %612 = %611.0;
  (%612,)
}

def @func_10506(%var_10400: Tensor[(16, 7, 13), bool]) -> (Tensor[(16, 6, 4), float64], Tensor[(384), float64], Tensor[(7, 5, 11), float32], Tensor[(16, 7, 13), float32], Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %613 = cast(meta[relay.Constant][19] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %614 = reshape(%613, newshape=[16, 6, 4]) /* ty=Tensor[(16, 6, 4), float64] */;
  %615 = @func_9107() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %616 = cast(%var_10400, dtype="bool") /* ty=Tensor[(16, 7, 13), bool] */;
  %617 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(16, 7, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 7, 13), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 13), bool] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %620 = logical_or(%618, %619) /* ty=Tensor[(16, 7, 13), bool] */;
  %621 = cast(%620, dtype="float32") /* ty=Tensor[(16, 7, 13), float32] */;
  %622 = tan(%621) /* ty=Tensor[(16, 7, 13), float32] */;
  %623 = cast(%622, dtype="float32") /* ty=Tensor[(16, 7, 13), float32] */;
  %624 = cosh(%623) /* ty=Tensor[(16, 7, 13), float32] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(16, 7, 13), float32] */;
  %626 = @func_3699() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) */;
  %627 = @func_7856() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8]) */;
  %628 = @func_9294() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %629 = @func_6399(%614) /* ty=Tensor[(16, 6, 4), float64] */;
  %630 = %615.0;
  %631 = asin(%625) /* ty=Tensor[(16, 7, 13), float32] */;
  %632 = %626.0;
  %633 = %627.1;
  %634 = %628.0;
  %635 = @func_2800() /* ty=Tensor[(7, 5, 11), float64] */;
  (%629, meta[relay.Constant][19] /* ty=Tensor[(384), float64] */, %630, %631, %632, %633, %634, %635)
}

def @func_2672() -> Tensor[(5, 5, 11), float32] {
  @func_2371() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_2080() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) {
  %636 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %637 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %638 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %639 = %636.0;
  %640 = %637.0;
  %641 = %638.1;
  (%639, %640, %641)
}

def @func_1000(%var_990: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(576), int8]) {
  %642 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %643 = cast(%var_990, dtype="int8") /* ty=Tensor[(576), int8] */;
  %644 = cast(%var_990, dtype="int8") /* ty=Tensor[(576), int8] */;
  %645 = reshape(%643, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %646 = reshape(%644, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %647 = @func_582(%645, %646) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %648 = %647.0;
  %649 = cast(%648, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %650 = reshape(%649, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %651 = @func_907(%650) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %652 = %642.0;
  %653 = %651.2;
  (%652, %648, %var_990, %653)
}

def @func_8124() -> (Tensor[(7, 5, 11), float32],) {
  %654 = @func_2809() /* ty=(Tensor[(7, 5, 11), float32],) */;
  %655 = %654.0;
  (%655,)
}

def @func_8735(%var_8719: Tensor[(11, 2, 7), uint16]) -> Tensor[(11, 2, 7), bool] {
  %656 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 2, 7), uint16] */, dtype="uint16") /* ty=Tensor[(1, 2, 7), uint16] */;
  %657 = cast(%var_8719, dtype="uint16") /* ty=Tensor[(11, 2, 7), uint16] */;
  %658 = logical_xor(%656, %657) /* ty=Tensor[(11, 2, 7), uint16] */;
  %659 = cast(%658, dtype="bool") /* ty=Tensor[(11, 2, 7), bool] */;
  %660 = shape_of(%var_8719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%var_8719, dtype="bool") /* ty=Tensor[(11, 2, 7), bool] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%661, %662) /* ty=Tensor[(11, 2, 7), bool] */
}

def @func_5021(%var_5016: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), float32] {
  %663 = cast(%var_5016, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  atan(%663) /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_1598() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %664 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %665 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %666 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %667 = %664.1;
  %668 = %665.5;
  %669 = %666.0;
  (%667, %668, %669)
}

def @func_3158() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
  %670 = @func_2024() /* ty=(Tensor[(576), int8],) */;
  %671 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %672 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %673 = %670.0;
  %674 = %671.0;
  %675 = %672.1;
  (%673, %674, %675)
}

def @func_1976() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %676 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %677 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  %678 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %679 = %676.0;
  (%677, %678, %679)
}

def @func_7352() -> (Tensor[(5, 5, 11), float32],) {
  %680 = @func_4351() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %681 = %680.0;
  (%681,)
}

def @func_9795() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(275), float32]) {
  %682 = @func_8496() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %683 = cast(meta[relay.Constant][22] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
  %684 = reshape(%683, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %685 = @func_3719(%684) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %686 = %682.0;
  %687 = %685.0;
  (%686, %687, meta[relay.Constant][22] /* ty=Tensor[(275), float32] */)
}

def @func_8372() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
  %688 = @func_7395() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */;
  %689 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %690 = %688.1;
  %691 = %689.2;
  (%690, %691)
}

def @func_4351() -> (Tensor[(5, 5, 11), float32],) {
  %692 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %693 = %692.1;
  (%693,)
}

def @func_6289() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %694 = @func_3811() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %695 = %694.0;
  %696 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
  (%695, %696)
}

def @func_9107() -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
  %697 = @func_8124() /* ty=(Tensor[(7, 5, 11), float32],) */;
  %698 = @func_1695() /* ty=(Tensor[(576), int8],) */;
  %699 = %697.0;
  %700 = @func_5034() /* ty=Tensor[(576), int8] */;
  %701 = %698.0;
  (%699, %700, %701)
}

def @func_3482() -> (Tensor[(7, 5, 11), float64],) {
  %702 = @func_2567() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %703 = %702.1;
  (%703,)
}

def @func_5034() -> Tensor[(576), int8] {
  %704 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %704.2
}

def @func_7455() -> (Tensor[(11, 12, 11), float64], Tensor[(7, 5, 11), float64]) {
  %705 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 11), float64] */;
  %706 = tan(%705) /* ty=Tensor[(11, 12, 11), float64] */;
  %707 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  (%706, %707)
}

def @func_8028(%var_8005: Tensor[(15, 6, 2), uint8], %var_8006: Tensor[(15, 6, 2), uint8]) -> (Tensor[(15, 6, 2), bool], Tensor[(576), int8]) {
  %708 = cast(%var_8006, dtype="bool") /* ty=Tensor[(15, 6, 2), bool] */;
  %709 = shape_of(%var_8005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%var_8005, dtype="bool") /* ty=Tensor[(15, 6, 2), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %712 = greater_equal(%710, %711) /* ty=Tensor[(15, 6, 2), bool] */;
  %713 = @func_6487() /* ty=Tensor[(576), int8] */;
  (%712, %713)
}

def @func_9018() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %714 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %715 = %714.3;
  %716 = @func_2371() /* ty=Tensor[(5, 5, 11), float32] */;
  (%715, %716)
}

def @func_7414() -> Tensor[(5, 5, 11), int64] {
  %717 = @func_6322() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int64]) */;
  %717.1
}

def @func_9210(%var_9127: Tensor[(7, 5, 11), float64]) -> (Tensor[(576), int8], Tensor[(7, 5, 11), bool], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %718 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %719 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %720 = %719.0;
  %721 = cast(%var_9127, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %725 = %718.0;
  %726 = cast(%725, dtype="int8") /* ty=Tensor[(576), int8] */;
  %727 = reshape(%726, newshape=[72, 8]) /* ty=Tensor[(72, 8), int8] */;
  %728 = @func_7076(%727) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(72, 8), int8]) */;
  %729 = not_equal(%723, %724) /* ty=Tensor[(7, 5, 11), bool] */;
  %730 = @func_5573() /* ty=Tensor[(7, 5, 11), float64] */;
  %731 = @func_4382() /* ty=Tensor[(7, 5, 11), float64] */;
  %732 = %728.1;
  (%725, %729, %730, %731, %732)
}

def @func_7395() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8]) {
  %733 = @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %734 = @func_4382() /* ty=Tensor[(7, 5, 11), float64] */;
  %735 = %733.0;
  (%734, %735)
}

def @func_7548(%var_7538: Tensor[(13, 10, 9), float32]) -> Tensor[(13, 10, 9), float32] {
  %736 = cast(%var_7538, dtype="float32") /* ty=Tensor[(13, 10, 9), float32] */;
  acosh(%736) /* ty=Tensor[(13, 10, 9), float32] */
}

def @func_8299(%var_8279: Tensor[(2112), uint32], %var_8287: Tensor[(2), bool]) -> (Tensor[(5, 5, 11), float64], Tensor[(468), int32], Tensor[(12, 16, 11), bool], Tensor[(2112), uint32], Tensor[(7, 5, 11), float64], Tensor[(2), bool]) {
  %737 = @func_5491() /* ty=(Tensor[(5, 5, 11), float64],) */;
  %738 = cast(%var_8279, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %739 = cast(%var_8279, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %740 = reshape(%738, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), uint32] */;
  %741 = reshape(%739, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), uint32] */;
  %742 = cast(%var_8287, dtype="bool") /* ty=Tensor[(2), bool] */;
  %743 = reshape(%742, newshape=[1, 2]) /* ty=Tensor[(1, 2), bool] */;
  %744 = @func_8089(%743) /* ty=(Tensor[(?, 2), float32], Tensor[(7, 5, 11), float64], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) */;
  %745 = %737.0;
  %746 = @func_4694() /* ty=Tensor[(468), int32] */;
  %747 = @func_703(%740, %741) /* ty=Tensor[(12, 16, 11), bool] */;
  %748 = %744.1;
  (%745, %746, %747, %var_8279, %748, %var_8287)
}

def @func_10180() -> (Tensor[(7, 5, 11), float64],) {
  %749 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %750 = %749.1;
  (%750,)
}

def @func_7771(%var_7759: Tensor[(1, 385), float64]) -> (Tensor[(5, 5, 11), int64], Tensor[(7, 5, 11), uint8], Tensor[(1, 385), float64], Tensor[(1350), uint8]) {
  %751 = cast(%var_7759, dtype="float64") /* ty=Tensor[(1, 385), float64] */;
  %752 = cast(meta[relay.Constant][24] /* ty=Tensor[(1350), uint8] */, dtype="uint8") /* ty=Tensor[(1350), uint8] */;
  %753 = reshape(%751, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %754 = reshape(%752, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %755 = @func_5897(%753, %754) /* ty=(Tensor[(5, 5, 11), bool], Tensor[(7, 5, 11), uint8], Tensor[(385), float64], Tensor[(7, 5, 11), float32], Tensor[(1350), uint8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %756 = @func_7414() /* ty=Tensor[(5, 5, 11), int64] */;
  %757 = %755.1;
  (%756, %757, %var_7759, meta[relay.Constant][24] /* ty=Tensor[(1350), uint8] */)
}

def @func_6238() -> Tensor[(7, 5, 11), float64] {
  @func_4537() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_3168() -> Tensor[(7, 5, 11), float64] {
  @func_2155() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_7140() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %758 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %759 = %758.0;
  %760 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  (%759, %760)
}

def @func_2337() -> Tensor[(576), int8] {
  @func_2010() /* ty=Tensor[(576), int8] */
}

def @func_5725() -> (Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) {
  %761 = cast(meta[relay.Constant][25] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %762 = cast(meta[relay.Constant][25] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %763 = reshape(%761, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
  %764 = reshape(%762, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
  %765 = @func_3811() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %766 = %765.0;
  %767 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 5, 11), float32] */, dtype="int64") /* ty=Tensor[(5, 5, 11), int64] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="int64") /* ty=Tensor[(5, 5, 11), int64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %771 = cast(meta[relay.Constant][27] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
  %772 = reshape(%771, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), int64] */;
  %773 = @func_4614(%772) /* ty=(Tensor[(11, 3, 16), int64], Tensor[(11, 3, 16), bool], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(385), float32]) */;
  %774 = %773.1;
  %775 = cast(meta[relay.Constant][27] /* ty=Tensor[(528), int64] */, dtype="int16") /* ty=Tensor[(528), int16] */;
  %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%774, dtype="int16") /* ty=Tensor[(11, 3, 16), int16] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %779 = @func_2239(%763, %764) /* ty=Tensor[(12, 13, 3), bool] */;
  %780 = left_shift(%769, %770) /* ty=Tensor[(5, 5, 11), int64] */;
  %781 = logical_xor(%777, %778) /* ty=Tensor[(11, 3, 16), int16] */;
  (%779, meta[relay.Constant][25] /* ty=Tensor[(468), int32] */, %780, %781)
}

def @func_3719(%var_3708: Tensor[(5, 5, 11), float32]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
  %782 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %783 = %782.0;
  %784 = cast(%var_3708, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%783, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %788 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %789 = divide(%786, %787) /* ty=Tensor[(5, 5, 11), float32] */;
  %790 = %788.1;
  (%789, %790)
}

def @func_6322() -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int64]) {
  %791 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %792 = @func_5725() /* ty=(Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) */;
  %793 = %791.0;
  %794 = %792.2;
  (%793, %794)
}

def @func_8332() -> Tensor[(5, 5, 11), float32] {
  %795 = @func_2567() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %795.0
}

def @func_4086(%var_4069: Tensor[(385, 1), float64]) -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), uint8], Tensor[(385, 1), float64], Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
  %796 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %797 = cast(%var_4069, dtype="float64") /* ty=Tensor[(385, 1), float64] */;
  %798 = reshape(%797, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float64] */;
  %799 = @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %800 = @func_3922(%798) /* ty=Tensor[(7, 5, 11), uint8] */;
  %801 = cast(%800, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %802 = reshape(%801, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
  %803 = @func_1920(%802) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %804 = %796.0;
  %805 = %799.2;
  %806 = %803.1;
  (%804, %800, %var_4069, %805, %806)
}

def @func_1531() -> Tensor[(5, 5, 11), float32] {
  %807 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %807.0
}

def @func_8089(%var_8057: Tensor[(1, 2), bool]) -> (Tensor[(?, 2), float32], Tensor[(7, 5, 11), float64], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) {
  %808 = @func_6799() /* ty=Tensor[(?, 2), bool] */;
  %809 = cast(%var_8057, dtype="float32") /* ty=Tensor[(1, 2), float32] */;
  %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(2), int32] */;
  %811 = cast(%808, dtype="float32") /* ty=Tensor[(?, 2), float32] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %813 = cast(meta[relay.Constant][28] /* ty=Tensor[(90), int32] */, dtype="int32") /* ty=Tensor[(90), int32] */;
  %814 = cast(meta[relay.Constant][28] /* ty=Tensor[(90), int32] */, dtype="int32") /* ty=Tensor[(90), int32] */;
  %815 = reshape(%813, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), int32] */;
  %816 = reshape(%814, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), int32] */;
  %817 = power(%811, %812) /* ty=Tensor[(?, 2), float32] */;
  %818 = @func_3168() /* ty=Tensor[(7, 5, 11), float64] */;
  %819 = @func_7265(%815, %816) /* ty=Tensor[(2, 9, 5), bool] */;
  (%817, %818, %819, meta[relay.Constant][28] /* ty=Tensor[(90), int32] */)
}

def @func_9679(%var_9652: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), bool],) {
  %820 = @func_8991() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %821 = %820.0;
  %822 = cast(%var_9652, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%821, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %826 = equal(%824, %825) /* ty=Tensor[(7, 5, 11), bool] */;
  (%826,)
}

def @func_9890(%var_9852: Tensor[(1, 3, 10), float32]) -> (Tensor[(2, 3, 10), float32], Tensor[(12, 16, 11), bool], Tensor[(2112), uint32], Tensor[(2, 3, 10), bool], Tensor[(5, 5, 5), float32], Tensor[(2, 3, 10), float32]) {
  %827 = cast(%var_9852, dtype="float32") /* ty=Tensor[(1, 3, 10), float32] */;
  %828 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 10), float32] */;
  %829 = cast(meta[relay.Constant][30] /* ty=Tensor[(2112), uint32] */, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %830 = cast(meta[relay.Constant][30] /* ty=Tensor[(2112), uint32] */, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %831 = reshape(%829, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), uint32] */;
  %832 = reshape(%830, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), uint32] */;
  %833 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 10), float32] */;
  %834 = log10(%833) /* ty=Tensor[(2, 3, 10), float32] */;
  %835 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 3, 10), float32] */, dtype="bool") /* ty=Tensor[(2, 3, 10), bool] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%834, dtype="bool") /* ty=Tensor[(2, 3, 10), bool] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %839 = cast(%834, dtype="float32") /* ty=Tensor[(2, 3, 10), float32] */;
  %840 = divide(%827, %828) /* ty=Tensor[(2, 3, 10), float32] */;
  %841 = @func_703(%831, %832) /* ty=Tensor[(12, 16, 11), bool] */;
  %842 = equal(%837, %838) /* ty=Tensor[(2, 3, 10), bool] */;
  %843 = @func_9066() /* ty=Tensor[(5, 5, 5), float32] */;
  %844 = sin(%839) /* ty=Tensor[(2, 3, 10), float32] */;
  (%840, %841, meta[relay.Constant][30] /* ty=Tensor[(2112), uint32] */, %842, %843, %844)
}

def @func_10153() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(?, 2), bool], Tensor[(275), float32], Tensor[(135, 10), uint8]) {
  %845 = @func_6362() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %846 = @func_7721() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %847 = cast(meta[relay.Constant][32] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
  %848 = cast(meta[relay.Constant][33] /* ty=Tensor[(135, 10), uint8] */, dtype="uint8") /* ty=Tensor[(135, 10), uint8] */;
  %849 = reshape(%847, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %850 = reshape(%848, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %851 = @func_4984(%849, %850) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */;
  %852 = %845.0;
  %853 = %846.0;
  %854 = %851.4;
  (%852, %853, %854, meta[relay.Constant][32] /* ty=Tensor[(275), float32] */, meta[relay.Constant][33] /* ty=Tensor[(135, 10), uint8] */)
}

def @func_9771() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(11, 12, 11), float64]) {
  %855 = @func_4032() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %856 = @func_8851() /* ty=(Tensor[(576), int8],) */;
  %857 = @func_7455() /* ty=(Tensor[(11, 12, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %858 = %855.1;
  %859 = %856.0;
  %860 = %857.0;
  (%858, %859, %860)
}

def @func_10215() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), int64]) {
  %861 = @func_8520() /* ty=Tensor[(7, 5, 11), float64] */;
  %862 = @func_7414() /* ty=Tensor[(5, 5, 11), int64] */;
  (%861, %862)
}

def @func_6659(%var_6649: Tensor[(7, 5, 11), float64]) -> Tensor[(7, 5, 11), bool] {
  %863 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %864 = %863.1;
  %865 = cast(%var_6649, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%864, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%867, %868) /* ty=Tensor[(7, 5, 11), bool] */
}

def @func_6180() -> Tensor[(576), int8] {
  %869 = @func_5449() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), float32], Tensor[(576), int8]) */;
  %869.0
}

def @func_10377() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %870 = @func_6628() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %871 = @func_6176() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %872 = @func_7395() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */;
  %873 = %870.0;
  %874 = %871.0;
  %875 = %872.0;
  (%873, %874, %875)
}

def @func_2598(%var_2590: Tensor[(6, 15, 15), uint8], %var_2595: Tensor[(576), int8]) -> (Tensor[(6, 15, 15), uint8], Tensor[(12, 12, 4), float32], Tensor[(576), int8]) {
  %876 = cast(%var_2590, dtype="uint8") /* ty=Tensor[(6, 15, 15), uint8] */;
  %877 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="uint8") /* ty=Tensor[(6, 15, 15), uint8] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %880 = cast(%var_2595, dtype="int8") /* ty=Tensor[(576), int8] */;
  %881 = cast(%var_2595, dtype="int8") /* ty=Tensor[(576), int8] */;
  %882 = reshape(%880, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %883 = reshape(%881, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %884 = @func_582(%882, %883) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %885 = bitwise_and(%878, %879) /* ty=Tensor[(6, 15, 15), uint8] */;
  %886 = %884.2;
  (%885, %886, %var_2595)
}

def @func_7162() -> Tensor[(5, 5, 11), float32] {
  %887 = @func_6060() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %887.2
}

def @func_2663() -> (Tensor[(5, 5, 11), float32],) {
  %888 = @func_2515() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */;
  %889 = %888.0;
  %890 = cast(%889, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %891 = rsqrt(%890) /* ty=Tensor[(5, 5, 11), float32] */;
  (%891,)
}

def @func_4514() -> Tensor[(7, 5, 11), float64] {
  @func_2155() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_2800() -> Tensor[(7, 5, 11), float64] {
  %892 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %893 = cast(%892, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  log(%893) /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_4032() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %894 = @func_2024() /* ty=(Tensor[(576), int8],) */;
  %895 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %896 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %897 = %894.0;
  %898 = %895.0;
  %899 = %896.0;
  (%897, %898, %899)
}

def @func_10631() -> (Tensor[(7, 5, 11), float64],) {
  %900 = @func_6706() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %901 = %900.0;
  (%901,)
}

def @func_8255() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %902 = @func_6706() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %903 = @func_6706() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %904 = %902.0;
  %905 = %903.0;
  (%904, %905)
}

def @func_6904() -> (Tensor[(7, 5, 11), float32],) {
  %906 = @func_2809() /* ty=(Tensor[(7, 5, 11), float32],) */;
  %907 = %906.0;
  (%907,)
}

def @func_2809() -> (Tensor[(7, 5, 11), float32],) {
  %908 = @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %909 = %908.1;
  (%909,)
}

def @func_8520() -> Tensor[(7, 5, 11), float64] {
  %910 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %910.1
}

def @func_7315() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %911 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %912 = %911.2;
  %913 = @func_7162() /* ty=Tensor[(5, 5, 11), float32] */;
  (%912, %913)
}

def @func_3877() -> Tensor[(7, 5, 11), float64] {
  %914 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %914.0
}

def @func_7813() -> Tensor[(7, 5, 11), float64] {
  %915 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %915.1
}

def @func_5603() -> (Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
  %916 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %917 = cast(meta[relay.Constant][35] /* ty=Tensor[(2), uint32] */, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %918 = cast(meta[relay.Constant][35] /* ty=Tensor[(2), uint32] */, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %919 = reshape(%917, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %920 = reshape(%918, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %921 = %916.0;
  %922 = cast(%921, dtype="int8") /* ty=Tensor[(576), int8] */;
  %923 = reshape(%922, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %924 = @func_907(%923) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %925 = @func_4197(%919, %920) /* ty=Tensor[(?, 2), bool] */;
  %926 = %924.0;
  (%921, %925, meta[relay.Constant][35] /* ty=Tensor[(2), uint32] */, %926)
}

def @func_10547(%var_10545: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(275), float32], Tensor[(576), int8]) {
  %927 = cast(meta[relay.Constant][36] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
  %928 = cast(%var_10545, dtype="int8") /* ty=Tensor[(576), int8] */;
  %929 = reshape(%927, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %930 = reshape(%928, newshape=[1, 576]) /* ty=Tensor[(1, 576), int8] */;
  %931 = @func_3085(%929, %930) /* ty=(Tensor[(12, 13, 3), bool], Tensor[(5, 5, 11), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(1, 576), int8], Tensor[(6, 96), bool], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(13, 11, 6), float64], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float32]) */;
  %932 = @func_4514() /* ty=Tensor[(7, 5, 11), float64] */;
  %933 = %931.11;
  (%932, %933, meta[relay.Constant][36] /* ty=Tensor[(275), float32] */, %var_10545)
}

def @func_1920(%var_1885: Tensor[(7, 5, 11), float32]) -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %934 = cast(meta[relay.Constant][37] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %935 = reshape(%934, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %936 = @func_907(%935) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %937 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %938 = cast(%var_1885, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %939 = erf(%938) /* ty=Tensor[(7, 5, 11), float64] */;
  %940 = cast(%939, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %941 = acosh(%940) /* ty=Tensor[(7, 5, 11), float32] */;
  %942 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %943 = %942.0;
  %944 = cast(%var_1885, dtype="uint16") /* ty=Tensor[(7, 5, 11), uint16] */;
  %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %946 = cast(%943, dtype="uint16") /* ty=Tensor[(7, 5, 11), uint16] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %948 = subtract(%946, %947) /* ty=Tensor[(7, 5, 11), uint16] */;
  %949 = cast(%948, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %950 = shape_of(%941, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%941, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %953 = %936.0;
  %954 = %937.2;
  %955 = floor_mod(%951, %952) /* ty=Tensor[(7, 5, 11), float64] */;
  (%953, meta[relay.Constant][37] /* ty=Tensor[(576), int8] */, %954, %955)
}

def @func_1841() -> (Tensor[(7, 5, 11), float64],) {
  %956 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %957 = %956.1;
  (%957,)
}

def @func_9336() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
  %958 = @func_6176() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %959 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
  %960 = %958.0;
  %961 = %959.2;
  (%960, %961)
}

def @func_7045(%var_6967: Tensor[(6, 7, 11), uint8], %var_6988: Tensor[(6, 10, 11), float32]) -> (Tensor[(576), int8], Tensor[(12, 12, 4), float32], Tensor[(275), float32], Tensor[(1, 1350), uint8], Tensor[(576), int8], Tensor[(6, 7, 11), uint16], Tensor[(1350), uint8], Tensor[(385), float64], Tensor[(576), int8], Tensor[(6, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), int64], Tensor[(6, 10, 11), int16]) {
  %962 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %963 = cast(meta[relay.Constant][38] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
  %964 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 1350), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1350), uint8] */;
  %965 = reshape(%963, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %966 = reshape(%964, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %967 = @func_4984(%965, %966) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */;
  %968 = @func_5449() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), float32], Tensor[(576), int8]) */;
  %969 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 1, 11), uint8] */, dtype="uint16") /* ty=Tensor[(6, 1, 11), uint16] */;
  %970 = cast(%var_6967, dtype="uint16") /* ty=Tensor[(6, 7, 11), uint16] */;
  %971 = cast(meta[relay.Constant][41] /* ty=Tensor[(385), float64] */, dtype="float64") /* ty=Tensor[(385), float64] */;
  %972 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 1350), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1350), uint8] */;
  %973 = reshape(%971, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %974 = reshape(%972, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %975 = @func_5897(%973, %974) /* ty=(Tensor[(5, 5, 11), bool], Tensor[(7, 5, 11), uint8], Tensor[(385), float64], Tensor[(7, 5, 11), float32], Tensor[(1350), uint8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %976 = %968.0;
  %977 = cast(%976, dtype="int8") /* ty=Tensor[(576), int8] */;
  %978 = reshape(%977, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %979 = @func_934(%978) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %980 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 10, 11), uint8] */, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
  %981 = rsqrt(%980) /* ty=Tensor[(6, 10, 11), float64] */;
  %982 = cast(%981, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
  %983 = sin(%982) /* ty=Tensor[(6, 10, 11), float32] */;
  %984 = cast(%983, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
  %985 = acosh(%984) /* ty=Tensor[(6, 10, 11), float32] */;
  %986 = cast(%985, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
  %987 = cast(%var_6988, dtype="int8") /* ty=Tensor[(6, 10, 11), int8] */;
  %988 = shape_of(%983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%983, dtype="int8") /* ty=Tensor[(6, 10, 11), int8] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %991 = maximum(%989, %990) /* ty=Tensor[(6, 10, 11), int8] */;
  %992 = cast(%991, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
  %993 = @func_2200() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %994 = @func_5725() /* ty=(Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) */;
  %995 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 1, 11), uint8] */, dtype="bool") /* ty=Tensor[(6, 1, 11), bool] */;
  %996 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 10, 11), uint8] */, dtype="bool") /* ty=Tensor[(6, 10, 11), bool] */;
  %997 = equal(%995, %996) /* ty=Tensor[(6, 10, 11), bool] */;
  %998 = cast(%997, dtype="bool") /* ty=Tensor[(6, 10, 11), bool] */;
  %999 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 1, 11), uint8] */, dtype="bool") /* ty=Tensor[(6, 1, 11), bool] */;
  %1000 = greater_equal(%998, %999) /* ty=Tensor[(6, 10, 11), bool] */;
  %1001 = cast(%1000, dtype="int16") /* ty=Tensor[(6, 10, 11), int16] */;
  %1002 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1003 = cast(%981, dtype="int16") /* ty=Tensor[(6, 10, 11), int16] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1005 = %962.2;
  %1006 = %967.5;
  %1007 = right_shift(%969, %970) /* ty=Tensor[(6, 7, 11), uint16] */;
  %1008 = %975.4;
  %1009 = %979.2;
  %1010 = sinh(%986) /* ty=Tensor[(6, 10, 11), float32] */;
  %1011 = sqrt(%992) /* ty=Tensor[(6, 10, 11), float64] */;
  %1012 = %993.2;
  %1013 = %994.2;
  %1014 = logical_xor(%1003, %1004) /* ty=Tensor[(6, 10, 11), int16] */;
  (%1005, %1006, meta[relay.Constant][38] /* ty=Tensor[(275), float32] */, meta[relay.Constant][39] /* ty=Tensor[(1, 1350), uint8] */, %976, %1007, %1008, meta[relay.Constant][41] /* ty=Tensor[(385), float64] */, %1009, %1010, %1011, %1012, %1013, %1014)
}

def @func_2567() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %1015 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %1016 = @func_2371() /* ty=Tensor[(5, 5, 11), float32] */;
  %1017 = %1015.1;
  (%1016, %1017)
}

def @func_9294() -> (Tensor[(5, 5, 11), float32],) {
  %1018 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1019 = %1018.0;
  (%1019,)
}

def @func_4614(%var_4569: Tensor[(11, 3, 16), int64]) -> (Tensor[(11, 3, 16), int64], Tensor[(11, 3, 16), bool], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(385), float32]) {
  %1020 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 3, 16), int64] */, dtype="int64") /* ty=Tensor[(11, 3, 16), int64] */;
  %1021 = shape_of(%var_4569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%var_4569, dtype="int64") /* ty=Tensor[(11, 3, 16), int64] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1024 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 3, 16), int64] */, dtype="bool") /* ty=Tensor[(11, 3, 16), bool] */;
  %1025 = shape_of(%var_4569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1026 = cast(%var_4569, dtype="bool") /* ty=Tensor[(11, 3, 16), bool] */;
  %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1028 = @func_3372() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %1029 = cast(meta[relay.Constant][44] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %1030 = reshape(%1029, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
  %1031 = @func_1920(%1030) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %1032 = maximum(%1022, %1023) /* ty=Tensor[(11, 3, 16), int64] */;
  %1033 = greater_equal(%1026, %1027) /* ty=Tensor[(11, 3, 16), bool] */;
  %1034 = %1028.0;
  %1035 = %1031.0;
  (%1032, %1033, %1034, %1035, meta[relay.Constant][44] /* ty=Tensor[(385), float32] */)
}

def @func_4331(%var_4323: Tensor[(2), uint32]) -> (Tensor[(576), float32], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(5, 5, 11), float32]) {
  %1036 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %1037 = %1036.0;
  %1038 = cast(%1037, dtype="float32") /* ty=Tensor[(576), float32] */;
  %1039 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1040 = cast(%var_4323, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %1041 = cast(%var_4323, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %1042 = reshape(%1040, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %1043 = reshape(%1041, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %1044 = sqrt(%1038) /* ty=Tensor[(576), float32] */;
  %1045 = %1039.0;
  %1046 = @func_2010() /* ty=Tensor[(576), int8] */;
  %1047 = @func_4197(%1042, %1043) /* ty=Tensor[(?, 2), bool] */;
  %1048 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  (%1044, %1045, %1046, %1047, %var_4323, %1048)
}

def @func_703(%var_681: Tensor[(12, 16, 11), uint32], %var_682: Tensor[(12, 16, 11), uint32]) -> Tensor[(12, 16, 11), bool] {
  %1049 = cast(%var_682, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
  %1050 = shape_of(%var_681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1051 = cast(%var_681, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1051, %1052) /* ty=Tensor[(12, 16, 11), bool] */
}

def @func_9438() -> Tensor[(7, 5, 11), float64] {
  %1053 = @func_8420() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(12, 13, 3), float64]) */;
  %1053.0
}

def @func_3206() -> Tensor[(5, 5, 11), float32] {
  %1054 = @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1054.0
}

def @func_8589() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %1055 = @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1056 = %1055.0;
  %1057 = cast(%1056, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %1058 = reshape(%1057, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %1059 = @func_2771(%1058) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */;
  %1060 = @func_7352() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1061 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %1062 = %1059.1;
  %1063 = %1060.0;
  %1064 = %1061.0;
  %1065 = @func_6238() /* ty=Tensor[(7, 5, 11), float64] */;
  (%1056, %1062, %1063, %1064, %1065)
}

def @func_582(%var_505: Tensor[(12, 12, 4), int8], %var_506: Tensor[(12, 12, 4), int8]) -> (Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) {
  %1066 = cast(%var_506, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %1067 = shape_of(%var_505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(%var_505, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1070 = cast(%var_506, dtype="float32") /* ty=Tensor[(12, 12, 4), float32] */;
  %1071 = atanh(%1070) /* ty=Tensor[(12, 12, 4), float32] */;
  %1072 = cast(%1071, dtype="float32") /* ty=Tensor[(12, 12, 4), float32] */;
  %1073 = asinh(%1072) /* ty=Tensor[(12, 12, 4), float32] */;
  %1074 = cast(%1073, dtype="float64") /* ty=Tensor[(12, 12, 4), float64] */;
  %1075 = cast(%1073, dtype="float32") /* ty=Tensor[(12, 12, 4), float32] */;
  %1076 = minimum(%1068, %1069) /* ty=Tensor[(12, 12, 4), int8] */;
  %1077 = sigmoid(%1074) /* ty=Tensor[(12, 12, 4), float64] */;
  %1078 = acosh(%1075) /* ty=Tensor[(12, 12, 4), float32] */;
  (%1076, %1077, %1078)
}

def @func_5449() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), float32], Tensor[(576), int8]) {
  %1079 = @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %1080 = %1079.0;
  %1081 = cast(%1080, dtype="int8") /* ty=Tensor[(576), int8] */;
  %1082 = cast(%1080, dtype="float32") /* ty=Tensor[(576), float32] */;
  %1083 = reshape(%1081, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %1084 = reshape(%1082, newshape=[6, 96]) /* ty=Tensor[(6, 96), float32] */;
  %1085 = @func_1747(%1083, %1084) /* ty=(Tensor[(6, 96), float32], Tensor[(6, 96), bool]) */;
  %1086 = %1085.1;
  %1087 = cast(%1086, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %1088 = acosh(%1087) /* ty=Tensor[(6, 96), float32] */;
  %1089 = cast(%1086, dtype="int64") /* ty=Tensor[(6, 96), int64] */;
  %1090 = shape_of(%1088, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1091 = cast(%1088, dtype="int64") /* ty=Tensor[(6, 96), int64] */;
  %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1093 = logical_xor(%1091, %1092) /* ty=Tensor[(6, 96), int64] */;
  %1094 = cast(%1088, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %1095 = shape_of(%1093, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1096 = cast(%1093, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1098 = @func_1695() /* ty=(Tensor[(576), int8],) */;
  %1099 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %1100 = floor_mod(%1096, %1097) /* ty=Tensor[(6, 96), float32] */;
  %1101 = %1098.0;
  (%1080, %1099, %1100, %1101)
}

def @func_3811() -> (Tensor[(5, 5, 11), float32],) {
  %1102 = @func_2672() /* ty=Tensor[(5, 5, 11), float32] */;
  %1103 = cast(%1102, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %1104 = atanh(%1103) /* ty=Tensor[(5, 5, 11), float32] */;
  (%1104,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5227(%var_5225: Tensor[(2), uint32]) -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(468), int32], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(2), uint32], Tensor[(7, 5, 11), float32]) {
  @func_5224(%var_5225) /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(468), int32], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(2), uint32], Tensor[(7, 5, 11), float32]) */
}

def @func_6877(%var_6875: Tensor[(576), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int8], Tensor[(576), int8], Tensor[(16, 6, 4), float64], Tensor[(12, 32), float64]) {
  @func_6874(%var_6875) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int8], Tensor[(576), int8], Tensor[(16, 6, 4), float64], Tensor[(12, 32), float64]) */
}

def @func_9892(%var_9891: Tensor[(1, 3, 10), float32]) -> (Tensor[(2, 3, 10), float32], Tensor[(12, 16, 11), bool], Tensor[(2112), uint32], Tensor[(2, 3, 10), bool], Tensor[(5, 5, 5), float32], Tensor[(2, 3, 10), float32]) {
  %18 = fn (%var_9852: Tensor[(1, 3, 10), float32]) -> (Tensor[(2, 3, 10), float32], Tensor[(12, 16, 11), bool], Tensor[(2112), uint32], Tensor[(2, 3, 10), bool], Tensor[(5, 5, 5), float32], Tensor[(2, 3, 10), float32]) {
    %0 = cast(%var_9852, dtype="float32") /* ty=Tensor[(1, 3, 10), float32] */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 10), float32] */;
    %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(2112), uint32] */, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
    %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(2112), uint32] */, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
    %4 = reshape(%2, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), uint32] */;
    %5 = reshape(%3, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), uint32] */;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 10), float32] */;
    %7 = log10(%6) /* ty=Tensor[(2, 3, 10), float32] */;
    %8 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 3, 10), float32] */, dtype="bool") /* ty=Tensor[(2, 3, 10), bool] */;
    %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
    %10 = cast(%7, dtype="bool") /* ty=Tensor[(2, 3, 10), bool] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %12 = cast(%7, dtype="float32") /* ty=Tensor[(2, 3, 10), float32] */;
    %13 = divide(%0, %1) /* ty=Tensor[(2, 3, 10), float32] */;
    %14 = @func_703(%4, %5) /* ty=Tensor[(12, 16, 11), bool] */;
    %15 = equal(%10, %11) /* ty=Tensor[(2, 3, 10), bool] */;
    %16 = @func_9066() /* ty=Tensor[(5, 5, 5), float32] */;
    %17 = sin(%12) /* ty=Tensor[(2, 3, 10), float32] */;
    (%13, %14, meta[relay.Constant][1] /* ty=Tensor[(2112), uint32] */, %15, %16, %17)
  };
  %18(%var_9891) /* ty=(Tensor[(2, 3, 10), float32], Tensor[(12, 16, 11), bool], Tensor[(2112), uint32], Tensor[(2, 3, 10), bool], Tensor[(5, 5, 5), float32], Tensor[(2, 3, 10), float32]) */
}

def @func_3424() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_4695() -> Tensor[(468), int32] {
  %20 = fn () -> Tensor[(468), int32] {
    %19 = @func_2515() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */;
    %19.2
  };
  %20() /* ty=Tensor[(468), int32] */
}

def @func_10506(%var_10400: Tensor[(16, 7, 13), bool]) -> (Tensor[(16, 6, 4), float64], Tensor[(384), float64], Tensor[(7, 5, 11), float32], Tensor[(16, 7, 13), float32], Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %21 = cast(meta[relay.Constant][3] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %22 = reshape(%21, newshape=[16, 6, 4]) /* ty=Tensor[(16, 6, 4), float64] */;
  %23 = @func_9107() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %24 = cast(%var_10400, dtype="bool") /* ty=Tensor[(16, 7, 13), bool] */;
  %25 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 7, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 7, 13), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 13), bool] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %28 = logical_or(%26, %27) /* ty=Tensor[(16, 7, 13), bool] */;
  %29 = cast(%28, dtype="float32") /* ty=Tensor[(16, 7, 13), float32] */;
  %30 = tan(%29) /* ty=Tensor[(16, 7, 13), float32] */;
  %31 = cast(%30, dtype="float32") /* ty=Tensor[(16, 7, 13), float32] */;
  %32 = cosh(%31) /* ty=Tensor[(16, 7, 13), float32] */;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(16, 7, 13), float32] */;
  %34 = @func_3699() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) */;
  %35 = @func_7856() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8]) */;
  %36 = @func_9294() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %37 = @func_6399(%22) /* ty=Tensor[(16, 6, 4), float64] */;
  %38 = %23.0;
  %39 = asin(%33) /* ty=Tensor[(16, 7, 13), float32] */;
  %40 = %34.0;
  %41 = %35.1;
  %42 = %36.0;
  %43 = @func_2800() /* ty=Tensor[(7, 5, 11), float64] */;
  (%37, meta[relay.Constant][3] /* ty=Tensor[(384), float64] */, %38, %39, %40, %41, %42, %43)
}

def @func_10015(%var_10014: Tensor[(6, 96), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float64]) {
  %62 = fn (%var_10003: Tensor[(6, 96), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float64]) {
    %44 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %45 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
    %46 = %45.1;
    %47 = @func_3877() /* ty=Tensor[(7, 5, 11), float64] */;
    %48 = cast(%47, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
    %49 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%46, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %52 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %53 = cast(%var_10003, dtype="int8") /* ty=Tensor[(6, 96), int8] */;
    %54 = reshape(%53, newshape=[72, 8]) /* ty=Tensor[(72, 8), int8] */;
    %55 = @func_7076(%54) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(72, 8), int8]) */;
    %56 = @func_8386() /* ty=(Tensor[(5, 5, 11), float64],) */;
    %57 = %44.0;
    %58 = divide(%50, %51) /* ty=Tensor[(7, 5, 11), float32] */;
    %59 = %52.0;
    %60 = %55.0;
    %61 = %56.0;
    (%57, %58, %59, %60, %var_10003, %61)
  };
  %62(%var_10014) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float64]) */
}

def @func_3736() -> (Tensor[(5, 5, 11), float32],) {
  @func_3734() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_1600() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */
}

def @func_4667() -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
  %63 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
  %64 = @func_3372() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %65 = cast(meta[relay.Constant][5] /* ty=Tensor[(2), uint32] */, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %66 = cast(meta[relay.Constant][5] /* ty=Tensor[(2), uint32] */, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %67 = reshape(%65, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %68 = reshape(%66, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %69 = %63.0;
  %70 = %64.0;
  %71 = @func_4197(%67, %68) /* ty=Tensor[(?, 2), bool] */;
  %72 = @func_2800() /* ty=Tensor[(7, 5, 11), float64] */;
  (%69, %70, %71, meta[relay.Constant][5] /* ty=Tensor[(2), uint32] */, %72)
}

def @func_3879() -> Tensor[(7, 5, 11), float64] {
  @func_3877() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_1841() -> (Tensor[(7, 5, 11), float64],) {
  %73 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %74 = %73.1;
  (%74,)
}

def @func_1069(%var_1067: Tensor[(6, 96), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) {
  @func_1066(%var_1067) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */
}

def @func_1598() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %75 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %76 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %77 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %78 = %75.1;
  %79 = %76.5;
  %80 = %77.0;
  (%78, %79, %80)
}

def @func_5035() -> Tensor[(576), int8] {
  %82 = fn () -> Tensor[(576), int8] {
    %81 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
    %81.2
  };
  %82() /* ty=Tensor[(576), int8] */
}

def @func_9796() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(275), float32]) {
  %89 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(275), float32]) {
    %83 = @func_8496() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %84 = cast(meta[relay.Constant][6] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
    %85 = reshape(%84, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
    %86 = @func_3719(%85) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
    %87 = %83.0;
    %88 = %86.0;
    (%87, %88, meta[relay.Constant][6] /* ty=Tensor[(275), float32] */)
  };
  %89() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(275), float32]) */
}

def @func_641(%var_640: Tensor[(576), int8]) -> (Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) {
  %110 = fn (%var_620: Tensor[(576), int8]) -> (Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) {
    %90 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 11, 6), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
    %91 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
    %92 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
    %93 = reshape(%91, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
    %94 = reshape(%92, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
    %95 = @func_582(%93, %94) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
    %96 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
    %97 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
    %98 = reshape(%96, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
    %99 = reshape(%97, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
    %100 = @func_582(%98, %99) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
    %101 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
    %102 = cast(%var_620, dtype="int8") /* ty=Tensor[(576), int8] */;
    %103 = reshape(%101, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
    %104 = reshape(%102, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
    %105 = @func_582(%103, %104) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
    %106 = acosh(%90) /* ty=Tensor[(13, 11, 6), float64] */;
    %107 = %95.2;
    %108 = %100.0;
    %109 = %105.0;
    (%106, %107, %var_620, %108, %109)
  };
  %110(%var_640) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */
}

def @func_5492() -> (Tensor[(5, 5, 11), float64],) {
  %115 = fn () -> (Tensor[(5, 5, 11), float64],) {
    %111 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
    %112 = %111.0;
    %113 = cast(%112, dtype="float64") /* ty=Tensor[(5, 5, 11), float64] */;
    %114 = asin(%113) /* ty=Tensor[(5, 5, 11), float64] */;
    (%114,)
  };
  %115() /* ty=(Tensor[(5, 5, 11), float64],) */
}

def @func_2598(%var_2590: Tensor[(6, 15, 15), uint8], %var_2595: Tensor[(576), int8]) -> (Tensor[(6, 15, 15), uint8], Tensor[(12, 12, 4), float32], Tensor[(576), int8]) {
  %116 = cast(%var_2590, dtype="uint8") /* ty=Tensor[(6, 15, 15), uint8] */;
  %117 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 15, 15), uint8] */, dtype="uint8") /* ty=Tensor[(6, 15, 15), uint8] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %120 = cast(%var_2595, dtype="int8") /* ty=Tensor[(576), int8] */;
  %121 = cast(%var_2595, dtype="int8") /* ty=Tensor[(576), int8] */;
  %122 = reshape(%120, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %123 = reshape(%121, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %124 = @func_582(%122, %123) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %125 = bitwise_and(%118, %119) /* ty=Tensor[(6, 15, 15), uint8] */;
  %126 = %124.2;
  (%125, %126, %var_2595)
}

def @func_8852() -> (Tensor[(576), int8],) {
  %128 = fn () -> (Tensor[(576), int8],) {
    %127 = @func_6487() /* ty=Tensor[(576), int8] */;
    (%127,)
  };
  %128() /* ty=(Tensor[(576), int8],) */
}

def @func_8827() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %133 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
    %129 = @func_8255() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %130 = @func_7140() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %131 = %129.0;
    %132 = %130.0;
    (%131, %132)
  };
  %133() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */
}

def @func_3085(%var_2897: Tensor[(5, 5, 11), float32], %var_2918: Tensor[(1, 576), int8]) -> (Tensor[(12, 13, 3), bool], Tensor[(5, 5, 11), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(1, 576), int8], Tensor[(6, 96), bool], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(13, 11, 6), float64], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float32]) {
  %134 = @func_2515() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */;
  %135 = @func_2371() /* ty=Tensor[(5, 5, 11), float32] */;
  %136 = cast(%var_2897, dtype="int8") /* ty=Tensor[(5, 5, 11), int8] */;
  %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%135, dtype="int8") /* ty=Tensor[(5, 5, 11), int8] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %140 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %141 = cast(%var_2918, dtype="int8") /* ty=Tensor[(1, 576), int8] */;
  %142 = reshape(%141, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %143 = @func_800(%142) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %144 = cast(%var_2918, dtype="int8") /* ty=Tensor[(1, 576), int8] */;
  %145 = cast(%var_2918, dtype="float32") /* ty=Tensor[(1, 576), float32] */;
  %146 = reshape(%144, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %147 = reshape(%145, newshape=[6, 96]) /* ty=Tensor[(6, 96), float32] */;
  %148 = @func_1747(%146, %147) /* ty=(Tensor[(6, 96), float32], Tensor[(6, 96), bool]) */;
  %149 = cast(%var_2897, dtype="float64") /* ty=Tensor[(5, 5, 11), float64] */;
  %150 = log2(%149) /* ty=Tensor[(5, 5, 11), float64] */;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %152 = @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %153 = @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %154 = %148.1;
  %155 = cast(%154, dtype="int8") /* ty=Tensor[(6, 96), int8] */;
  %156 = reshape(%155, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %157 = @func_639(%156) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */;
  %158 = cast(%150, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %159 = %157.4;
  %160 = cast(%159, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %161 = reshape(%160, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %162 = @func_800(%161) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %163 = cast(%154, dtype="int8") /* ty=Tensor[(6, 96), int8] */;
  %164 = reshape(%163, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %165 = @func_1066(%164) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */;
  %166 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %167 = cast(%var_2918, dtype="int8") /* ty=Tensor[(1, 576), int8] */;
  %168 = reshape(%167, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %169 = @func_639(%168) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */;
  %170 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %171 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %172 = %134.1;
  %173 = maximum(%138, %139) /* ty=Tensor[(5, 5, 11), int8] */;
  %174 = %140.1;
  %175 = %143.2;
  %176 = exp(%151) /* ty=Tensor[(5, 5, 11), float32] */;
  %177 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %178 = %152.1;
  %179 = %153.0;
  %180 = log10(%158) /* ty=Tensor[(5, 5, 11), float32] */;
  %181 = %162.1;
  %182 = %165.1;
  %183 = %166.0;
  %184 = @func_2337() /* ty=Tensor[(576), int8] */;
  %185 = %169.0;
  %186 = %170.4;
  %187 = %171.0;
  (%172, %173, %174, %175, %var_2918, %154, %176, %177, %178, %179, %159, %180, %181, %182, %183, %184, %185, %186, %187)
}

def @func_6182() -> Tensor[(576), int8] {
  @func_6180() /* ty=Tensor[(576), int8] */
}

def @func_4410() -> Tensor[(5, 5, 5), float32] {
  @func_4408() /* ty=Tensor[(5, 5, 5), float32] */
}

def @func_6874(%var_6855: Tensor[(576), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int8], Tensor[(576), int8], Tensor[(16, 6, 4), float64], Tensor[(12, 32), float64]) {
  %188 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %189 = %188.0;
  %190 = cast(%189, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %191 = cast(%var_6855, dtype="int8") /* ty=Tensor[(576), int8] */;
  %192 = reshape(%190, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %193 = reshape(%191, newshape=[1, 576]) /* ty=Tensor[(1, 576), int8] */;
  %194 = @func_3085(%192, %193) /* ty=(Tensor[(12, 13, 3), bool], Tensor[(5, 5, 11), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(1, 576), int8], Tensor[(6, 96), bool], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(13, 11, 6), float64], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float32]) */;
  %195 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 32), float64] */, dtype="float64") /* ty=Tensor[(12, 32), float64] */;
  %196 = reshape(%195, newshape=[16, 6, 4]) /* ty=Tensor[(16, 6, 4), float64] */;
  %197 = %194.1;
  %198 = @func_6399(%196) /* ty=Tensor[(16, 6, 4), float64] */;
  (%189, %197, %var_6855, %198, meta[relay.Constant][9] /* ty=Tensor[(12, 32), float64] */)
}

def @func_1780() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %203 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
    %199 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %200 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %201 = %199.1;
    %202 = %200.0;
    (%201, %202)
  };
  %203() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */
}

def @func_1554() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
  %209 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
    %204 = cast(meta[relay.Constant][10] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
    %205 = reshape(%204, newshape=[576]) /* ty=Tensor[(576), int8] */;
    %206 = @func_934(%205) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
    %207 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
    %208 = %206.2;
    (%207, %208, meta[relay.Constant][10] /* ty=Tensor[(576), int8] */)
  };
  %209() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */
}

def @func_6707() -> (Tensor[(7, 5, 11), float64],) {
  %212 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %210 = @func_4032() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %211 = %210.2;
    (%211,)
  };
  %212() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_8590() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %224 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
    %213 = @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %214 = %213.0;
    %215 = cast(%214, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
    %216 = reshape(%215, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
    %217 = @func_2771(%216) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */;
    %218 = @func_7352() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %219 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %220 = %217.1;
    %221 = %218.0;
    %222 = %219.0;
    %223 = @func_6238() /* ty=Tensor[(7, 5, 11), float64] */;
    (%214, %220, %221, %222, %223)
  };
  %224() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_3168() -> Tensor[(7, 5, 11), float64] {
  @func_2155() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_1212() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) {
  @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */
}

def @func_2011() -> Tensor[(576), int8] {
  %226 = fn () -> Tensor[(576), int8] {
    %225 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
    %225.1
  };
  %226() /* ty=Tensor[(576), int8] */
}

def @func_800(%var_790: Tensor[(576), int8]) -> (Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) {
  %227 = cast(%var_790, dtype="int8") /* ty=Tensor[(576), int8] */;
  %228 = cast(%var_790, dtype="int8") /* ty=Tensor[(576), int8] */;
  %229 = reshape(%227, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %230 = reshape(%228, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %231 = @func_582(%229, %230) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %232 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %233 = %232.0;
  %234 = cast(%233, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %235 = %231.0;
  %236 = cosh(%234) /* ty=Tensor[(7, 5, 11), float32] */;
  (%235, %var_790, %236)
}

def @func_5762(%var_5730: uint8, %var_5731: Tensor[(14, 1, 9), uint8]) -> (Tensor[(14, 1, 9), uint8], Tensor[(576), int8], Tensor[(14, 1, 9), float32]) {
  %237 = cast(%var_5730, dtype="uint8") /* ty=uint8 */;
  %238 = cast(%var_5731, dtype="uint8") /* ty=Tensor[(14, 1, 9), uint8] */;
  %239 = cast(%var_5731, dtype="float32") /* ty=Tensor[(14, 1, 9), float32] */;
  %240 = erf(%239) /* ty=Tensor[(14, 1, 9), float32] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(14, 1, 9), float32] */;
  %242 = bitwise_or(%237, %238) /* ty=Tensor[(14, 1, 9), uint8] */;
  %243 = @func_2010() /* ty=Tensor[(576), int8] */;
  %244 = asinh(%241) /* ty=Tensor[(14, 1, 9), float32] */;
  (%242, %243, %244)
}

def @func_1531() -> Tensor[(5, 5, 11), float32] {
  %245 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %245.0
}

def @func_1034() -> Tensor[(7, 5, 11), float64] {
  @func_1032() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_7774(%var_7772: Tensor[(1, 385), float64]) -> (Tensor[(5, 5, 11), int64], Tensor[(7, 5, 11), uint8], Tensor[(1, 385), float64], Tensor[(1350), uint8]) {
  @func_7771(%var_7772) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(7, 5, 11), uint8], Tensor[(1, 385), float64], Tensor[(1350), uint8]) */
}

def @func_10377() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %246 = @func_6628() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %247 = @func_6176() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %248 = @func_7395() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */;
  %249 = %246.0;
  %250 = %247.0;
  %251 = %248.0;
  (%249, %250, %251)
}

def @func_5575() -> Tensor[(7, 5, 11), float64] {
  @func_5573() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_6291() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  @func_6289() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_9213(%var_9211: Tensor[(7, 5, 11), float64]) -> (Tensor[(576), int8], Tensor[(7, 5, 11), bool], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  @func_9210(%var_9211) /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), bool], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */
}

def @func_9616() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  @func_9614() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */
}

def @func_9438() -> Tensor[(7, 5, 11), float64] {
  %252 = @func_8420() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(12, 13, 3), float64]) */;
  %252.0
}

def @func_10154() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(?, 2), bool], Tensor[(275), float32], Tensor[(135, 10), uint8]) {
  %263 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(?, 2), bool], Tensor[(275), float32], Tensor[(135, 10), uint8]) {
    %253 = @func_6362() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %254 = @func_7721() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %255 = cast(meta[relay.Constant][11] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
    %256 = cast(meta[relay.Constant][12] /* ty=Tensor[(135, 10), uint8] */, dtype="uint8") /* ty=Tensor[(135, 10), uint8] */;
    %257 = reshape(%255, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
    %258 = reshape(%256, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
    %259 = @func_4984(%257, %258) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */;
    %260 = %253.0;
    %261 = %254.0;
    %262 = %259.4;
    (%260, %261, %262, meta[relay.Constant][11] /* ty=Tensor[(275), float32] */, meta[relay.Constant][12] /* ty=Tensor[(135, 10), uint8] */)
  };
  %263() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(?, 2), bool], Tensor[(275), float32], Tensor[(135, 10), uint8]) */
}

def @func_9614() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %264 = @func_8851() /* ty=(Tensor[(576), int8],) */;
  %265 = @func_6628() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %266 = %264.0;
  %267 = %265.0;
  (%266, %267)
}

def @func_10379() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  @func_10377() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_6289() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %268 = @func_3811() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %269 = %268.0;
  %270 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
  (%269, %270)
}

def @func_8387() -> (Tensor[(5, 5, 11), float64],) {
  %273 = fn () -> (Tensor[(5, 5, 11), float64],) {
    %271 = @func_5491() /* ty=(Tensor[(5, 5, 11), float64],) */;
    %272 = %271.0;
    (%272,)
  };
  %273() /* ty=(Tensor[(5, 5, 11), float64],) */
}

def @func_8373() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
  %278 = fn () -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
    %274 = @func_7395() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */;
    %275 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
    %276 = %274.1;
    %277 = %275.2;
    (%276, %277)
  };
  %278() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */
}

def @func_6180() -> Tensor[(576), int8] {
  %279 = @func_5449() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), float32], Tensor[(576), int8]) */;
  %279.0
}

def @func_8420() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(12, 13, 3), float64]) {
  %280 = @func_7395() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */;
  %281 = @func_5725() /* ty=(Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) */;
  %282 = %281.0;
  %283 = cast(%282, dtype="float64") /* ty=Tensor[(12, 13, 3), float64] */;
  %284 = log10(%283) /* ty=Tensor[(12, 13, 3), float64] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(12, 13, 3), float64] */;
  %286 = @func_7813() /* ty=Tensor[(7, 5, 11), float64] */;
  %287 = %280.1;
  %288 = tan(%285) /* ty=Tensor[(12, 13, 3), float64] */;
  (%286, %287, %288)
}

def @func_9526(%var_9525: float64) -> Tensor[(15, 6, 9), float64] {
  %291 = fn (%var_9510: float64) -> Tensor[(15, 6, 9), float64] {
    %289 = cast(%var_9510, dtype="float64") /* ty=float64 */;
    %290 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 9), float64] */;
    subtract(%289, %290) /* ty=Tensor[(15, 6, 9), float64] */
  };
  %291(%var_9525) /* ty=Tensor[(15, 6, 9), float64] */
}

def @func_706(%var_704: Tensor[(12, 16, 11), uint32], %var_705: Tensor[(12, 16, 11), uint32]) -> Tensor[(12, 16, 11), bool] {
  %296 = fn (%var_681: Tensor[(12, 16, 11), uint32], %var_682: Tensor[(12, 16, 11), uint32]) -> Tensor[(12, 16, 11), bool] {
    %292 = cast(%var_682, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
    %293 = shape_of(%var_681, dtype="int32") /* ty=Tensor[(3), int32] */;
    %294 = cast(%var_681, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
    %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%294, %295) /* ty=Tensor[(12, 16, 11), bool] */
  };
  %296(%var_704, %var_705) /* ty=Tensor[(12, 16, 11), bool] */
}

def @func_10689() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(385), float32]) {
  @func_10687() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(385), float32]) */
}

def @func_7518() -> Tensor[(576), int8] {
  @func_7516() /* ty=Tensor[(576), int8] */
}

def @func_10549(%var_10548: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(275), float32], Tensor[(576), int8]) {
  %304 = fn (%var_10545: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(275), float32], Tensor[(576), int8]) {
    %297 = cast(meta[relay.Constant][14] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
    %298 = cast(%var_10545, dtype="int8") /* ty=Tensor[(576), int8] */;
    %299 = reshape(%297, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
    %300 = reshape(%298, newshape=[1, 576]) /* ty=Tensor[(1, 576), int8] */;
    %301 = @func_3085(%299, %300) /* ty=(Tensor[(12, 13, 3), bool], Tensor[(5, 5, 11), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(1, 576), int8], Tensor[(6, 96), bool], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(13, 11, 6), float64], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float32]) */;
    %302 = @func_4514() /* ty=Tensor[(7, 5, 11), float64] */;
    %303 = %301.11;
    (%302, %303, meta[relay.Constant][14] /* ty=Tensor[(275), float32] */, %var_10545)
  };
  %304(%var_10548) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(275), float32], Tensor[(576), int8]) */
}

def @func_8422() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(12, 13, 3), float64]) {
  @func_8420() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(12, 13, 3), float64]) */
}

def @func_9018() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %305 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %306 = %305.3;
  %307 = @func_2371() /* ty=Tensor[(5, 5, 11), float32] */;
  (%306, %307)
}

def @func_10632() -> (Tensor[(7, 5, 11), float64],) {
  %310 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %308 = @func_6706() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %309 = %308.0;
    (%309,)
  };
  %310() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_7232() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(36, 16), int8]) {
  %316 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(36, 16), int8]) {
    %311 = cast(meta[relay.Constant][15] /* ty=Tensor[(36, 16), int8] */, dtype="int8") /* ty=Tensor[(36, 16), int8] */;
    %312 = reshape(%311, newshape=[576]) /* ty=Tensor[(576), int8] */;
    %313 = @func_907(%312) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
    %314 = @func_3877() /* ty=Tensor[(7, 5, 11), float64] */;
    %315 = %313.0;
    (%314, %315, meta[relay.Constant][15] /* ty=Tensor[(36, 16), int8] */)
  };
  %316() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(36, 16), int8]) */
}

def @func_2080() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) {
  %317 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %318 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %319 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %320 = %317.0;
  %321 = %318.0;
  %322 = %319.1;
  (%320, %321, %322)
}

def @func_8091(%var_8090: Tensor[(1, 2), bool]) -> (Tensor[(?, 2), float32], Tensor[(7, 5, 11), float64], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) {
  %335 = fn (%var_8057: Tensor[(1, 2), bool]) -> (Tensor[(?, 2), float32], Tensor[(7, 5, 11), float64], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) {
    %323 = @func_6799() /* ty=Tensor[(?, 2), bool] */;
    %324 = cast(%var_8057, dtype="float32") /* ty=Tensor[(1, 2), float32] */;
    %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(2), int32] */;
    %326 = cast(%323, dtype="float32") /* ty=Tensor[(?, 2), float32] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %328 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), int32] */, dtype="int32") /* ty=Tensor[(90), int32] */;
    %329 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), int32] */, dtype="int32") /* ty=Tensor[(90), int32] */;
    %330 = reshape(%328, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), int32] */;
    %331 = reshape(%329, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), int32] */;
    %332 = power(%326, %327) /* ty=Tensor[(?, 2), float32] */;
    %333 = @func_3168() /* ty=Tensor[(7, 5, 11), float64] */;
    %334 = @func_7265(%330, %331) /* ty=Tensor[(2, 9, 5), bool] */;
    (%332, %333, %334, meta[relay.Constant][16] /* ty=Tensor[(90), int32] */)
  };
  %335(%var_8090) /* ty=(Tensor[(?, 2), float32], Tensor[(7, 5, 11), float64], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) */
}

def @func_4493(%var_4491: Tensor[(7, 13, 4), bool], %var_4492: Tensor[(7, 13, 4), bool]) -> (Tensor[(7, 13, 4), bool],) {
  @func_4489(%var_4491, %var_4492) /* ty=(Tensor[(7, 13, 4), bool],) */
}

def @func_8334() -> Tensor[(5, 5, 11), float32] {
  @func_8332() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_6799() -> Tensor[(?, 2), bool] {
  %336 = @func_5603() /* ty=(Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
  %336.1
}

def @func_3848() -> (Tensor[(5, 5, 11), float32],) {
  %337 = @func_2672() /* ty=Tensor[(5, 5, 11), float32] */;
  (%337,)
}

def @func_586(%var_584: Tensor[(12, 12, 4), int8], %var_585: Tensor[(12, 12, 4), int8]) -> (Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) {
  @func_582(%var_584, %var_585) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */
}

def @func_4333(%var_4332: Tensor[(2), uint32]) -> (Tensor[(576), float32], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(5, 5, 11), float32]) {
  %351 = fn (%var_4323: Tensor[(2), uint32]) -> (Tensor[(576), float32], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(5, 5, 11), float32]) {
    %338 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
    %339 = %338.0;
    %340 = cast(%339, dtype="float32") /* ty=Tensor[(576), float32] */;
    %341 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %342 = cast(%var_4323, dtype="uint32") /* ty=Tensor[(2), uint32] */;
    %343 = cast(%var_4323, dtype="uint32") /* ty=Tensor[(2), uint32] */;
    %344 = reshape(%342, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
    %345 = reshape(%343, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
    %346 = sqrt(%340) /* ty=Tensor[(576), float32] */;
    %347 = %341.0;
    %348 = @func_2010() /* ty=Tensor[(576), int8] */;
    %349 = @func_4197(%344, %345) /* ty=Tensor[(?, 2), bool] */;
    %350 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
    (%346, %347, %348, %349, %var_4323, %350)
  };
  %351(%var_4332) /* ty=(Tensor[(576), float32], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(5, 5, 11), float32]) */
}

def @func_4034() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  @func_4032() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */
}

def @func_909(%var_908: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) {
  %358 = fn (%var_899: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) {
    %352 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %353 = cast(%var_899, dtype="int8") /* ty=Tensor[(576), int8] */;
    %354 = reshape(%353, newshape=[576]) /* ty=Tensor[(576), int8] */;
    %355 = @func_639(%354) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */;
    %356 = %352.0;
    %357 = %355.3;
    (%356, %357, %var_899)
  };
  %358(%var_908) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */
}

def @func_3158() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
  %359 = @func_2024() /* ty=(Tensor[(576), int8],) */;
  %360 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %361 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %362 = %359.0;
  %363 = %360.0;
  %364 = %361.1;
  (%362, %363, %364)
}

def @func_6801() -> Tensor[(?, 2), bool] {
  @func_6799() /* ty=Tensor[(?, 2), bool] */
}

def @func_8950() -> (Tensor[(7, 5, 11), float64], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) {
  %372 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) {
    %365 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %366 = cast(meta[relay.Constant][17] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
    %367 = cast(meta[relay.Constant][17] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
    %368 = reshape(%366, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
    %369 = reshape(%367, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
    %370 = %365.1;
    %371 = @func_2239(%368, %369) /* ty=Tensor[(12, 13, 3), bool] */;
    (%370, %371, meta[relay.Constant][17] /* ty=Tensor[(468), int32] */)
  };
  %372() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */
}

def @func_4032() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %373 = @func_2024() /* ty=(Tensor[(576), int8],) */;
  %374 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %375 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %376 = %373.0;
  %377 = %374.0;
  %378 = %375.0;
  (%376, %377, %378)
}

def @func_9772() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(11, 12, 11), float64]) {
  %385 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(11, 12, 11), float64]) {
    %379 = @func_4032() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %380 = @func_8851() /* ty=(Tensor[(576), int8],) */;
    %381 = @func_7455() /* ty=(Tensor[(11, 12, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %382 = %379.1;
    %383 = %380.0;
    %384 = %381.0;
    (%382, %383, %384)
  };
  %385() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(11, 12, 11), float64]) */
}

def @func_7905() -> Tensor[(5, 5, 11), float32] {
  @func_7903() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_1502() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */
}

def @func_9107() -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
  %386 = @func_8124() /* ty=(Tensor[(7, 5, 11), float32],) */;
  %387 = @func_1695() /* ty=(Tensor[(576), int8],) */;
  %388 = %386.0;
  %389 = @func_5034() /* ty=Tensor[(576), int8] */;
  %390 = %387.0;
  (%388, %389, %390)
}

def @func_2026() -> (Tensor[(576), int8],) {
  @func_2024() /* ty=(Tensor[(576), int8],) */
}

def @func_934(%var_931: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
  %391 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %392 = %391.0;
  %393 = cast(%392, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %394 = cast(%var_931, dtype="int8") /* ty=Tensor[(576), int8] */;
  %395 = reshape(%394, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %396 = @func_639(%395) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(12, 12, 4), float32], Tensor[(576), int8], Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), int8]) */;
  %397 = acos(%393) /* ty=Tensor[(7, 5, 11), float32] */;
  %398 = %396.2;
  (%397, %398, %var_931)
}

def @func_6115() -> (Tensor[(7, 5, 11), float64],) {
  %401 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %399 = @func_3434() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %400 = %399.0;
    (%400,)
  };
  %401() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_1923(%var_1921: Tensor[(7, 5, 11), float32]) -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  @func_1920(%var_1921) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */
}

def @func_6324() -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int64]) {
  @func_6322() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int64]) */
}

def @func_8125() -> (Tensor[(7, 5, 11), float32],) {
  %404 = fn () -> (Tensor[(7, 5, 11), float32],) {
    %402 = @func_2809() /* ty=(Tensor[(7, 5, 11), float32],) */;
    %403 = %402.0;
    (%403,)
  };
  %404() /* ty=(Tensor[(7, 5, 11), float32],) */
}

def @func_2200() -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %405 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %406 = %405.1;
  %407 = cast(%406, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %408 = @func_2024() /* ty=(Tensor[(576), int8],) */;
  %409 = @func_1841() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %410 = log2(%407) /* ty=Tensor[(7, 5, 11), float32] */;
  %411 = %408.0;
  %412 = %409.0;
  (%410, %411, %412)
}

def @func_3089(%var_3087: Tensor[(5, 5, 11), float32], %var_3088: Tensor[(1, 576), int8]) -> (Tensor[(12, 13, 3), bool], Tensor[(5, 5, 11), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(1, 576), int8], Tensor[(6, 96), bool], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(13, 11, 6), float64], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float32]) {
  @func_3085(%var_3087, %var_3088) /* ty=(Tensor[(12, 13, 3), bool], Tensor[(5, 5, 11), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(1, 576), int8], Tensor[(6, 96), bool], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(13, 11, 6), float64], Tensor[(6, 96), int8], Tensor[(5, 5, 11), float32]) */
}

def @func_7268(%var_7266: Tensor[(2, 9, 5), int32], %var_7267: Tensor[(2, 9, 5), int32]) -> Tensor[(2, 9, 5), bool] {
  %417 = fn (%var_7260: Tensor[(2, 9, 5), int32], %var_7261: Tensor[(2, 9, 5), int32]) -> Tensor[(2, 9, 5), bool] {
    %413 = cast(%var_7261, dtype="bool") /* ty=Tensor[(2, 9, 5), bool] */;
    %414 = shape_of(%var_7260, dtype="int32") /* ty=Tensor[(3), int32] */;
    %415 = cast(%var_7260, dtype="bool") /* ty=Tensor[(2, 9, 5), bool] */;
    %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%415, %416) /* ty=Tensor[(2, 9, 5), bool] */
  };
  %417(%var_7266, %var_7267) /* ty=Tensor[(2, 9, 5), bool] */
}

def @func_8991() -> (Tensor[(7, 5, 11), float64],) {
  %418 = @func_8420() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(12, 13, 3), float64]) */;
  %419 = %418.0;
  (%419,)
}

def @func_7815() -> Tensor[(7, 5, 11), float64] {
  @func_7813() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_7722() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %424 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
    %420 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %421 = %420.2;
    %422 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
    %423 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
    (%421, %422, %423)
  };
  %424() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_10839(%var_10838: Tensor[(90), int32]) -> (Tensor[(5, 5, 11), float32], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) {
  %432 = fn (%var_10826: Tensor[(90), int32]) -> (Tensor[(5, 5, 11), float32], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) {
    %425 = @func_6060() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
    %426 = cast(%var_10826, dtype="int32") /* ty=Tensor[(90), int32] */;
    %427 = cast(%var_10826, dtype="int32") /* ty=Tensor[(90), int32] */;
    %428 = reshape(%426, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), int32] */;
    %429 = reshape(%427, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), int32] */;
    %430 = %425.0;
    %431 = @func_7265(%428, %429) /* ty=Tensor[(2, 9, 5), bool] */;
    (%430, %431, %var_10826)
  };
  %432(%var_10838) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) */
}

def @main(%var_10892: Tensor[(27, 50), uint8]) -> (Tensor[(5, 5, 11), float32], Tensor[(27, 50), uint8], Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), float64]) {
  %433 = @func_3813() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %434 = cast(%var_10892, dtype="uint8") /* ty=Tensor[(27, 50), uint8] */;
  %435 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(27, 50), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %436 = cast(meta[relay.Constant][18] /* ty=Tensor[(27, 50), uint8] */, dtype="uint8") /* ty=Tensor[(27, 50), uint8] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %438 = @func_2296() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %439 = @func_3811() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %440 = %439.0;
  %441 = cast(%440, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %442 = cast(meta[relay.Constant][18] /* ty=Tensor[(27, 50), uint8] */, dtype="uint8") /* ty=Tensor[(27, 50), uint8] */;
  %443 = reshape(%441, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %444 = reshape(%442, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %445 = @func_4988(%443, %444) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */;
  %446 = %445.1;
  %447 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 12, 4), int8] */, dtype="int16") /* ty=Tensor[(12, 12, 4), int16] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%446, dtype="int16") /* ty=Tensor[(12, 12, 4), int16] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %451 = logical_xor(%449, %450) /* ty=Tensor[(12, 12, 4), int16] */;
  %452 = cast(%446, dtype="float64") /* ty=Tensor[(12, 12, 4), float64] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="float64") /* ty=Tensor[(12, 12, 4), float64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %456 = %433.0;
  %457 = minimum(%436, %437) /* ty=Tensor[(27, 50), uint8] */;
  %458 = %438.1;
  %459 = floor_divide(%454, %455) /* ty=Tensor[(12, 12, 4), float64] */;
  (%456, %457, %458, %459)
}

def @func_1674() -> (Tensor[(5, 5, 11), float32],) {
  %461 = fn () -> (Tensor[(5, 5, 11), float32],) {
    %460 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
    (%460,)
  };
  %461() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_3484() -> (Tensor[(7, 5, 11), float64],) {
  @func_3482() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_7813() -> Tensor[(7, 5, 11), float64] {
  %462 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %462.1
}

def @func_6177() -> (Tensor[(5, 5, 11), float32],) {
  %465 = fn () -> (Tensor[(5, 5, 11), float32],) {
    %463 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %464 = %463.0;
    (%464,)
  };
  %465() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_8737(%var_8736: Tensor[(11, 2, 7), uint16]) -> Tensor[(11, 2, 7), bool] {
  %473 = fn (%var_8719: Tensor[(11, 2, 7), uint16]) -> Tensor[(11, 2, 7), bool] {
    %466 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 2, 7), uint16] */, dtype="uint16") /* ty=Tensor[(1, 2, 7), uint16] */;
    %467 = cast(%var_8719, dtype="uint16") /* ty=Tensor[(11, 2, 7), uint16] */;
    %468 = logical_xor(%466, %467) /* ty=Tensor[(11, 2, 7), uint16] */;
    %469 = cast(%468, dtype="bool") /* ty=Tensor[(11, 2, 7), bool] */;
    %470 = shape_of(%var_8719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %471 = cast(%var_8719, dtype="bool") /* ty=Tensor[(11, 2, 7), bool] */;
    %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%471, %472) /* ty=Tensor[(11, 2, 7), bool] */
  };
  %473(%var_8736) /* ty=Tensor[(11, 2, 7), bool] */
}

def @func_8993() -> (Tensor[(7, 5, 11), float64],) {
  @func_8991() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_8031(%var_8029: Tensor[(15, 6, 2), uint8], %var_8030: Tensor[(15, 6, 2), uint8]) -> (Tensor[(15, 6, 2), bool], Tensor[(576), int8]) {
  %480 = fn (%var_8005: Tensor[(15, 6, 2), uint8], %var_8006: Tensor[(15, 6, 2), uint8]) -> (Tensor[(15, 6, 2), bool], Tensor[(576), int8]) {
    %474 = cast(%var_8006, dtype="bool") /* ty=Tensor[(15, 6, 2), bool] */;
    %475 = shape_of(%var_8005, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%var_8005, dtype="bool") /* ty=Tensor[(15, 6, 2), bool] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %478 = greater_equal(%476, %477) /* ty=Tensor[(15, 6, 2), bool] */;
    %479 = @func_6487() /* ty=Tensor[(576), int8] */;
    (%478, %479)
  };
  %480(%var_8029, %var_8030) /* ty=(Tensor[(15, 6, 2), bool], Tensor[(576), int8]) */
}

def @func_1256() -> (Tensor[(5, 5, 11), float32],) {
  @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_1843() -> (Tensor[(7, 5, 11), float64],) {
  @func_1841() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_4353() -> (Tensor[(5, 5, 11), float32],) {
  @func_4351() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_6563() -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %490 = fn () -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
    %481 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
    %482 = @func_1695() /* ty=(Tensor[(576), int8],) */;
    %483 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
    %484 = @func_6362() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %485 = %481.0;
    %486 = %482.0;
    %487 = %483.0;
    %488 = %484.0;
    %489 = @func_6238() /* ty=Tensor[(7, 5, 11), float64] */;
    (%485, %486, %487, %488, %489)
  };
  %490() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */
}

def @func_6785() -> (Tensor[(7, 5, 11), float32],) {
  %491 = @func_2809() /* ty=(Tensor[(7, 5, 11), float32],) */;
  %492 = %491.0;
  (%492,)
}

def @func_1032() -> Tensor[(7, 5, 11), float64] {
  %493 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %493.0
}

def @func_7354() -> (Tensor[(5, 5, 11), float32],) {
  @func_7352() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_3722(%var_3720: Tensor[(5, 5, 11), float32]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
  @func_3719(%var_3720) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */
}

def @func_7316() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %497 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
    %494 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %495 = %494.2;
    %496 = @func_7162() /* ty=Tensor[(5, 5, 11), float32] */;
    (%495, %496)
  };
  %497() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */
}

def @func_9296() -> (Tensor[(5, 5, 11), float32],) {
  @func_9294() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_4538() -> Tensor[(7, 5, 11), float64] {
  %498 = fn () -> Tensor[(7, 5, 11), float64] {
    @func_3168() /* ty=Tensor[(7, 5, 11), float64] */
  };
  %498() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_10509(%var_10507: Tensor[(16, 7, 13), bool]) -> (Tensor[(16, 6, 4), float64], Tensor[(384), float64], Tensor[(7, 5, 11), float32], Tensor[(16, 7, 13), float32], Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  @func_10506(%var_10507) /* ty=(Tensor[(16, 6, 4), float64], Tensor[(384), float64], Tensor[(7, 5, 11), float32], Tensor[(16, 7, 13), float32], Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_9337() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
  %503 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
    %499 = @func_6176() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %500 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
    %501 = %499.0;
    %502 = %500.2;
    (%501, %502)
  };
  %503() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */
}

def @func_9067() -> Tensor[(5, 5, 5), float32] {
  %504 = fn () -> Tensor[(5, 5, 5), float32] {
    @func_4408() /* ty=Tensor[(5, 5, 5), float32] */
  };
  %504() /* ty=Tensor[(5, 5, 5), float32] */
}

def @func_6906() -> (Tensor[(7, 5, 11), float32],) {
  @func_6904() /* ty=(Tensor[(7, 5, 11), float32],) */
}

def @func_6629() -> (Tensor[(7, 5, 11), float64],) {
  %506 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %505 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
    (%505,)
  };
  %506() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_3811() -> (Tensor[(5, 5, 11), float32],) {
  %507 = @func_2672() /* ty=Tensor[(5, 5, 11), float32] */;
  %508 = cast(%507, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %509 = atanh(%508) /* ty=Tensor[(5, 5, 11), float32] */;
  (%509,)
}

def @func_1120() -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) {
  @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */
}

def @func_2568() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %513 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
    %510 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
    %511 = @func_2371() /* ty=Tensor[(5, 5, 11), float32] */;
    %512 = %510.1;
    (%511, %512)
  };
  %513() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_6488() -> Tensor[(576), int8] {
  %515 = fn () -> Tensor[(576), int8] {
    %514 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
    %514.0
  };
  %515() /* ty=Tensor[(576), int8] */
}

def @func_9462() -> (Tensor[(7, 5, 11), float64],) {
  %516 = @func_4382() /* ty=Tensor[(7, 5, 11), float64] */;
  (%516,)
}

def @func_803(%var_801: Tensor[(576), int8]) -> (Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) {
  @func_800(%var_801) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */
}

def @func_2082() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) {
  @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */
}

def @func_10293() -> (Tensor[(576), int8], Tensor[(468), int32], Tensor[(7, 5, 11), float64]) {
  %523 = fn () -> (Tensor[(576), int8], Tensor[(468), int32], Tensor[(7, 5, 11), float64]) {
    %517 = @func_5311() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */;
    %518 = @func_9362() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(468), int32]) */;
    %519 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %520 = %517.1;
    %521 = %518.1;
    %522 = %519.2;
    (%520, %521, %522)
  };
  %523() /* ty=(Tensor[(576), int8], Tensor[(468), int32], Tensor[(7, 5, 11), float64]) */
}

def @func_4617(%var_4615: Tensor[(11, 3, 16), int64]) -> (Tensor[(11, 3, 16), int64], Tensor[(11, 3, 16), bool], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(385), float32]) {
  @func_4614(%var_4615) /* ty=(Tensor[(11, 3, 16), int64], Tensor[(11, 3, 16), bool], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(385), float32]) */
}

def @func_5312() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8]) {
  %526 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8]) {
    %524 = @func_4537() /* ty=Tensor[(7, 5, 11), float64] */;
    %525 = @func_5034() /* ty=Tensor[(576), int8] */;
    (%524, %525)
  };
  %526() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */
}

def @func_2665() -> (Tensor[(5, 5, 11), float32],) {
  @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_1210() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) {
  %527 = cast(meta[relay.Constant][21] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %528 = reshape(%527, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %529 = @func_934(%528) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %530 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %531 = %529.2;
  (%530, %531, meta[relay.Constant][21] /* ty=Tensor[(576), int8] */)
}

def @func_1500() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %532 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %533 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %534 = %532.2;
  %535 = %533.1;
  (%534, %535)
}

def @func_738() -> (Tensor[(7, 5, 11), float64],) {
  @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_7416() -> Tensor[(5, 5, 11), int64] {
  @func_7414() /* ty=Tensor[(5, 5, 11), int64] */
}

def @func_1696() -> (Tensor[(576), int8],) {
  %538 = fn () -> (Tensor[(576), int8],) {
    %536 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
    %537 = %536.0;
    (%537,)
  };
  %538() /* ty=(Tensor[(576), int8],) */
}

def @func_7516() -> Tensor[(576), int8] {
  %539 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %539.0
}

def @func_8520() -> Tensor[(7, 5, 11), float64] {
  %540 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %540.1
}

def @func_7414() -> Tensor[(5, 5, 11), int64] {
  %541 = @func_6322() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int64]) */;
  %541.1
}

def @func_3170() -> Tensor[(7, 5, 11), float64] {
  @func_3168() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_7645() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(2), uint32]) {
  %551 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(2), uint32]) {
    %542 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %543 = @func_4514() /* ty=Tensor[(7, 5, 11), float64] */;
    %544 = cast(%543, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
    %545 = reshape(%544, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
    %546 = @func_1920(%545) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
    %547 = @func_4667() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
    %548 = %542.0;
    %549 = %546.2;
    %550 = %547.3;
    (%548, %543, %549, %550)
  };
  %551() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(2), uint32]) */
}

def @func_3160() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
  @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */
}

def @func_5605() -> (Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
  @func_5603() /* ty=(Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */
}

def @func_6661(%var_6660: Tensor[(7, 5, 11), float64]) -> Tensor[(7, 5, 11), bool] {
  %558 = fn (%var_6649: Tensor[(7, 5, 11), float64]) -> Tensor[(7, 5, 11), bool] {
    %552 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
    %553 = %552.1;
    %554 = cast(%var_6649, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
    %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
    %556 = cast(%553, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
    %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%556, %557) /* ty=Tensor[(7, 5, 11), bool] */
  };
  %558(%var_6660) /* ty=Tensor[(7, 5, 11), bool] */
}

def @func_8659() -> Tensor[(576), int8] {
  %560 = fn () -> Tensor[(576), int8] {
    %559 = @func_5603() /* ty=(Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
    %559.0
  };
  %560() /* ty=Tensor[(576), int8] */
}

def @func_4086(%var_4069: Tensor[(385, 1), float64]) -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), uint8], Tensor[(385, 1), float64], Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
  %561 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %562 = cast(%var_4069, dtype="float64") /* ty=Tensor[(385, 1), float64] */;
  %563 = reshape(%562, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float64] */;
  %564 = @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %565 = @func_3922(%563) /* ty=Tensor[(7, 5, 11), uint8] */;
  %566 = cast(%565, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %567 = reshape(%566, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
  %568 = @func_1920(%567) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %569 = %561.0;
  %570 = %564.2;
  %571 = %568.1;
  (%569, %565, %var_4069, %570, %571)
}

def @func_4197(%var_4192: Tensor[(1, 2), uint32], %var_4193: Tensor[(1, 2), uint32]) -> Tensor[(?, 2), bool] {
  %572 = cast(%var_4193, dtype="bool") /* ty=Tensor[(1, 2), bool] */;
  %573 = shape_of(%var_4192, dtype="int32") /* ty=Tensor[(2), int32] */;
  %574 = cast(%var_4192, dtype="bool") /* ty=Tensor[(1, 2), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  not_equal(%574, %575) /* ty=Tensor[(?, 2), bool] */
}

def @func_1319() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float32]) {
  %576 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %577 = %576.1;
  %578 = cast(%577, dtype="int8") /* ty=Tensor[(576), int8] */;
  %579 = reshape(%578, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %580 = @func_800(%579) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %581 = %580.2;
  (%577, %581)
}

def @func_9363() -> (Tensor[(5, 5, 11), float32], Tensor[(468), int32]) {
  %585 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(468), int32]) {
    %582 = @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %583 = %582.0;
    %584 = @func_4694() /* ty=Tensor[(468), int32] */;
    (%583, %584)
  };
  %585() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(468), int32]) */
}

def @func_5339(%var_5315: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), uint8], Tensor[(7, 5, 11), float64]) {
  %586 = @func_2200() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %587 = %586.2;
  %588 = cast(%var_5315, dtype="uint8") /* ty=Tensor[(7, 5, 11), uint8] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%587, dtype="uint8") /* ty=Tensor[(7, 5, 11), uint8] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %592 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %593 = logical_xor(%590, %591) /* ty=Tensor[(7, 5, 11), uint8] */;
  %594 = %592.1;
  (%593, %594)
}

def @func_2371() -> Tensor[(5, 5, 11), float32] {
  @func_1531() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_1254() -> (Tensor[(5, 5, 11), float32],) {
  %595 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %596 = sqrt(%595) /* ty=Tensor[(5, 5, 11), float32] */;
  (%596,)
}

def @func_5450() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), float32], Tensor[(576), int8]) {
  %620 = fn () -> (Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), float32], Tensor[(576), int8]) {
    %597 = @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
    %598 = %597.0;
    %599 = cast(%598, dtype="int8") /* ty=Tensor[(576), int8] */;
    %600 = cast(%598, dtype="float32") /* ty=Tensor[(576), float32] */;
    %601 = reshape(%599, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
    %602 = reshape(%600, newshape=[6, 96]) /* ty=Tensor[(6, 96), float32] */;
    %603 = @func_1747(%601, %602) /* ty=(Tensor[(6, 96), float32], Tensor[(6, 96), bool]) */;
    %604 = %603.1;
    %605 = cast(%604, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
    %606 = acosh(%605) /* ty=Tensor[(6, 96), float32] */;
    %607 = cast(%604, dtype="int64") /* ty=Tensor[(6, 96), int64] */;
    %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(2), int32] */;
    %609 = cast(%606, dtype="int64") /* ty=Tensor[(6, 96), int64] */;
    %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %611 = logical_xor(%609, %610) /* ty=Tensor[(6, 96), int64] */;
    %612 = cast(%606, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
    %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(2), int32] */;
    %614 = cast(%611, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
    %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %616 = @func_1695() /* ty=(Tensor[(576), int8],) */;
    %617 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
    %618 = floor_mod(%614, %615) /* ty=Tensor[(6, 96), float32] */;
    %619 = %616.0;
    (%598, %617, %618, %619)
  };
  %620() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), float32], Tensor[(576), int8]) */
}

def @func_7858() -> (Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8]) {
  @func_7856() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8]) */
}

def @func_4822(%var_4821: Tensor[(3, 13, 14), float64]) -> (Tensor[(5, 5, 11), float32], Tensor[(3, 13, 14), bool], Tensor[(576), int8], Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %645 = fn (%var_4752: Tensor[(3, 13, 14), float64]) -> (Tensor[(5, 5, 11), float32], Tensor[(3, 13, 14), bool], Tensor[(576), int8], Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
    %621 = cast(%var_4752, dtype="float64") /* ty=Tensor[(3, 13, 14), float64] */;
    %622 = asin(%621) /* ty=Tensor[(3, 13, 14), float64] */;
    %623 = cast(%var_4752, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
    %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
    %625 = cast(%622, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
    %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %627 = @func_4667() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
    %628 = @func_2080() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(576), int8]) */;
    %629 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
    %631 = reshape(%630, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
    %632 = @func_2771(%631) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */;
    %633 = @func_3482() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %634 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
    %635 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %636 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %637 = less_equal(%625, %626) /* ty=Tensor[(3, 13, 14), bool] */;
    %638 = %627.1;
    %639 = %628.2;
    %640 = %632.0;
    %641 = %633.0;
    %642 = %634.1;
    %643 = %635.0;
    %644 = %636.0;
    (%629, %637, %638, %639, %640, %641, %642, %643, %644)
  };
  %645(%var_4821) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(3, 13, 14), bool], Tensor[(576), int8], Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_5224(%var_5197: Tensor[(2), uint32]) -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(468), int32], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(2), uint32], Tensor[(7, 5, 11), float32]) {
  %646 = @func_4032() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %647 = @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %648 = @func_2515() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */;
  %649 = @func_2024() /* ty=(Tensor[(576), int8],) */;
  %650 = cast(%var_5197, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %651 = reshape(%650, newshape=[2]) /* ty=Tensor[(2), uint32] */;
  %652 = @func_4331(%651) /* ty=(Tensor[(576), float32], Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(5, 5, 11), float32]) */;
  %653 = @func_2200() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %654 = %646.0;
  %655 = %647.2;
  %656 = %648.2;
  %657 = %649.0;
  %658 = %652.4;
  %659 = %653.0;
  (%654, %655, %656, %657, %658, %var_5197, %659)
}

def @func_10811(%var_10810: Tensor[(135, 10), uint8]) -> Tensor[(135, 10), float32] {
  %671 = fn (%var_10779: Tensor[(135, 10), uint8]) -> Tensor[(135, 10), float32] {
    %660 = @func_10153() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(?, 2), bool], Tensor[(275), float32], Tensor[(135, 10), uint8]) */;
    %661 = %660.4;
    %662 = cast(%var_10779, dtype="bool") /* ty=Tensor[(135, 10), bool] */;
    %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(2), int32] */;
    %664 = cast(%661, dtype="bool") /* ty=Tensor[(135, 10), bool] */;
    %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %666 = less(%664, %665) /* ty=Tensor[(135, 10), bool] */;
    %667 = cast(%666, dtype="float32") /* ty=Tensor[(135, 10), float32] */;
    %668 = shape_of(%661, dtype="int32") /* ty=Tensor[(2), int32] */;
    %669 = cast(%661, dtype="float32") /* ty=Tensor[(135, 10), float32] */;
    %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    power(%669, %670) /* ty=Tensor[(135, 10), float32] */
  };
  %671(%var_10810) /* ty=Tensor[(135, 10), float32] */
}

def @func_2202() -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  @func_2200() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */
}

def @func_6363() -> (Tensor[(7, 5, 11), float64],) {
  %673 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %672 = @func_3877() /* ty=Tensor[(7, 5, 11), float64] */;
    (%672,)
  };
  %673() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_736() -> (Tensor[(7, 5, 11), float64],) {
  %674 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %675 = atan(%674) /* ty=Tensor[(7, 5, 11), float64] */;
  (%675,)
}

def @func_10215() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), int64]) {
  %676 = @func_8520() /* ty=Tensor[(7, 5, 11), float64] */;
  %677 = @func_7414() /* ty=Tensor[(5, 5, 11), int64] */;
  (%676, %677)
}

def @func_7550(%var_7549: Tensor[(13, 10, 9), float32]) -> Tensor[(13, 10, 9), float32] {
  %679 = fn (%var_7538: Tensor[(13, 10, 9), float32]) -> Tensor[(13, 10, 9), float32] {
    %678 = cast(%var_7538, dtype="float32") /* ty=Tensor[(13, 10, 9), float32] */;
    acosh(%678) /* ty=Tensor[(13, 10, 9), float32] */
  };
  %679(%var_7549) /* ty=Tensor[(13, 10, 9), float32] */
}

def @func_2810() -> (Tensor[(7, 5, 11), float32],) {
  %682 = fn () -> (Tensor[(7, 5, 11), float32],) {
    %680 = @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
    %681 = %680.1;
    (%681,)
  };
  %682() /* ty=(Tensor[(7, 5, 11), float32],) */
}

def @func_4089(%var_4087: Tensor[(385, 1), float64]) -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), uint8], Tensor[(385, 1), float64], Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
  @func_4086(%var_4087) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), uint8], Tensor[(385, 1), float64], Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */
}

def @func_6787() -> (Tensor[(7, 5, 11), float32],) {
  @func_6785() /* ty=(Tensor[(7, 5, 11), float32],) */
}

def @func_7395() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8]) {
  %683 = @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */;
  %684 = @func_4382() /* ty=Tensor[(7, 5, 11), float64] */;
  %685 = %683.0;
  (%684, %685)
}

def @func_3719(%var_3708: Tensor[(5, 5, 11), float32]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
  %686 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %687 = %686.0;
  %688 = cast(%var_3708, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %692 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %693 = divide(%690, %691) /* ty=Tensor[(5, 5, 11), float32] */;
  %694 = %692.1;
  (%693, %694)
}

def @func_9020() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  @func_9018() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */
}

def @func_5023(%var_5022: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), float32] {
  %696 = fn (%var_5016: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), float32] {
    %695 = cast(%var_5016, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
    atan(%695) /* ty=Tensor[(7, 11, 6), float32] */
  };
  %696(%var_5022) /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_6061() -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
  %702 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) {
    %697 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %698 = @func_3734() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %699 = %697.0;
    %700 = %698.0;
    %701 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
    (%699, %700, %701)
  };
  %702() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */
}

def @func_3572() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  @func_3570() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_4183() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) {
  %711 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) {
    %703 = @func_3933() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %704 = %703.0;
    %705 = cast(%704, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
    %706 = reshape(%705, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
    %707 = @func_1920(%706) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
    %708 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
    %709 = %707.2;
    %710 = %708.0;
    (%704, %709, %710)
  };
  %711() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */
}

def @func_7163() -> Tensor[(5, 5, 11), float32] {
  %713 = fn () -> Tensor[(5, 5, 11), float32] {
    %712 = @func_6060() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
    %712.2
  };
  %713() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_1321() -> (Tensor[(576), int8], Tensor[(7, 5, 11), float32]) {
  @func_1319() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float32]) */
}

def @func_4383() -> Tensor[(7, 5, 11), float64] {
  %715 = fn () -> Tensor[(7, 5, 11), float64] {
    %714 = @func_4182() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
    %714.0
  };
  %715() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_582(%var_505: Tensor[(12, 12, 4), int8], %var_506: Tensor[(12, 12, 4), int8]) -> (Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) {
  %716 = cast(%var_506, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %717 = shape_of(%var_505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%var_505, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %720 = cast(%var_506, dtype="float32") /* ty=Tensor[(12, 12, 4), float32] */;
  %721 = atanh(%720) /* ty=Tensor[(12, 12, 4), float32] */;
  %722 = cast(%721, dtype="float32") /* ty=Tensor[(12, 12, 4), float32] */;
  %723 = asinh(%722) /* ty=Tensor[(12, 12, 4), float32] */;
  %724 = cast(%723, dtype="float64") /* ty=Tensor[(12, 12, 4), float64] */;
  %725 = cast(%723, dtype="float32") /* ty=Tensor[(12, 12, 4), float32] */;
  %726 = minimum(%718, %719) /* ty=Tensor[(12, 12, 4), int8] */;
  %727 = sigmoid(%724) /* ty=Tensor[(12, 12, 4), float64] */;
  %728 = acosh(%725) /* ty=Tensor[(12, 12, 4), float32] */;
  (%726, %727, %728)
}

def @func_9440() -> Tensor[(7, 5, 11), float64] {
  @func_9438() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_2663() -> (Tensor[(5, 5, 11), float32],) {
  %729 = @func_2515() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */;
  %730 = %729.0;
  %731 = cast(%730, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %732 = rsqrt(%731) /* ty=Tensor[(5, 5, 11), float32] */;
  (%732,)
}

def @func_10181() -> (Tensor[(7, 5, 11), float64],) {
  %735 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %733 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %734 = %733.1;
    (%734,)
  };
  %735() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_9464() -> (Tensor[(7, 5, 11), float64],) {
  @func_9462() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_4988(%var_4986: Tensor[(5, 5, 11), float32], %var_4987: Tensor[(1350), uint8]) -> (Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) {
  @func_4984(%var_4986, %var_4987) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */
}

def @func_1978() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */
}

def @func_5901(%var_5899: Tensor[(385), float64], %var_5900: Tensor[(1350), uint8]) -> (Tensor[(5, 5, 11), bool], Tensor[(7, 5, 11), uint8], Tensor[(385), float64], Tensor[(7, 5, 11), float32], Tensor[(1350), uint8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  @func_5897(%var_5899, %var_5900) /* ty=(Tensor[(5, 5, 11), bool], Tensor[(7, 5, 11), uint8], Tensor[(385), float64], Tensor[(7, 5, 11), float32], Tensor[(1350), uint8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */
}

def @func_8793() -> Tensor[(7, 5, 11), float64] {
  %736 = fn () -> Tensor[(7, 5, 11), float64] {
    @func_3168() /* ty=Tensor[(7, 5, 11), float64] */
  };
  %736() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_6752(%var_6750: Tensor[(13, 10, 9), int16], %var_6751: Tensor[(13, 10, 9), int16]) -> Tensor[(13, 10, 9), bool] {
  %741 = fn (%var_6744: Tensor[(13, 10, 9), int16], %var_6745: Tensor[(13, 10, 9), int16]) -> Tensor[(13, 10, 9), bool] {
    %737 = cast(%var_6745, dtype="bool") /* ty=Tensor[(13, 10, 9), bool] */;
    %738 = shape_of(%var_6744, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%var_6744, dtype="bool") /* ty=Tensor[(13, 10, 9), bool] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%739, %740) /* ty=Tensor[(13, 10, 9), bool] */
  };
  %741(%var_6750, %var_6751) /* ty=Tensor[(13, 10, 9), bool] */
}

def @func_9387() -> Tensor[(576), int8] {
  %742 = fn () -> Tensor[(576), int8] {
    @func_7516() /* ty=Tensor[(576), int8] */
  };
  %742() /* ty=Tensor[(576), int8] */
}

def @func_9210(%var_9127: Tensor[(7, 5, 11), float64]) -> (Tensor[(576), int8], Tensor[(7, 5, 11), bool], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %743 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %744 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %745 = %744.0;
  %746 = cast(%var_9127, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %750 = %743.0;
  %751 = cast(%750, dtype="int8") /* ty=Tensor[(576), int8] */;
  %752 = reshape(%751, newshape=[72, 8]) /* ty=Tensor[(72, 8), int8] */;
  %753 = @func_7076(%752) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(72, 8), int8]) */;
  %754 = not_equal(%748, %749) /* ty=Tensor[(7, 5, 11), bool] */;
  %755 = @func_5573() /* ty=Tensor[(7, 5, 11), float64] */;
  %756 = @func_4382() /* ty=Tensor[(7, 5, 11), float64] */;
  %757 = %753.1;
  (%750, %754, %755, %756, %757)
}

def @func_7048(%var_7046: Tensor[(6, 7, 11), uint8], %var_7047: Tensor[(6, 10, 11), float32]) -> (Tensor[(576), int8], Tensor[(12, 12, 4), float32], Tensor[(275), float32], Tensor[(1, 1350), uint8], Tensor[(576), int8], Tensor[(6, 7, 11), uint16], Tensor[(1350), uint8], Tensor[(385), float64], Tensor[(576), int8], Tensor[(6, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), int64], Tensor[(6, 10, 11), int16]) {
  %811 = fn (%var_6967: Tensor[(6, 7, 11), uint8], %var_6988: Tensor[(6, 10, 11), float32]) -> (Tensor[(576), int8], Tensor[(12, 12, 4), float32], Tensor[(275), float32], Tensor[(1, 1350), uint8], Tensor[(576), int8], Tensor[(6, 7, 11), uint16], Tensor[(1350), uint8], Tensor[(385), float64], Tensor[(576), int8], Tensor[(6, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), int64], Tensor[(6, 10, 11), int16]) {
    %758 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
    %759 = cast(meta[relay.Constant][24] /* ty=Tensor[(275), float32] */, dtype="float32") /* ty=Tensor[(275), float32] */;
    %760 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 1350), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1350), uint8] */;
    %761 = reshape(%759, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
    %762 = reshape(%760, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
    %763 = @func_4984(%761, %762) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */;
    %764 = @func_5449() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), float32], Tensor[(576), int8]) */;
    %765 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 1, 11), uint8] */, dtype="uint16") /* ty=Tensor[(6, 1, 11), uint16] */;
    %766 = cast(%var_6967, dtype="uint16") /* ty=Tensor[(6, 7, 11), uint16] */;
    %767 = cast(meta[relay.Constant][27] /* ty=Tensor[(385), float64] */, dtype="float64") /* ty=Tensor[(385), float64] */;
    %768 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 1350), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1350), uint8] */;
    %769 = reshape(%767, newshape=[385]) /* ty=Tensor[(385), float64] */;
    %770 = reshape(%768, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
    %771 = @func_5897(%769, %770) /* ty=(Tensor[(5, 5, 11), bool], Tensor[(7, 5, 11), uint8], Tensor[(385), float64], Tensor[(7, 5, 11), float32], Tensor[(1350), uint8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
    %772 = %764.0;
    %773 = cast(%772, dtype="int8") /* ty=Tensor[(576), int8] */;
    %774 = reshape(%773, newshape=[576]) /* ty=Tensor[(576), int8] */;
    %775 = @func_934(%774) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
    %776 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 10, 11), uint8] */, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
    %777 = rsqrt(%776) /* ty=Tensor[(6, 10, 11), float64] */;
    %778 = cast(%777, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
    %779 = sin(%778) /* ty=Tensor[(6, 10, 11), float32] */;
    %780 = cast(%779, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
    %781 = acosh(%780) /* ty=Tensor[(6, 10, 11), float32] */;
    %782 = cast(%781, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
    %783 = cast(%var_6988, dtype="int8") /* ty=Tensor[(6, 10, 11), int8] */;
    %784 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
    %785 = cast(%779, dtype="int8") /* ty=Tensor[(6, 10, 11), int8] */;
    %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %787 = maximum(%785, %786) /* ty=Tensor[(6, 10, 11), int8] */;
    %788 = cast(%787, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
    %789 = @func_2200() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
    %790 = @func_5725() /* ty=(Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) */;
    %791 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 1, 11), uint8] */, dtype="bool") /* ty=Tensor[(6, 1, 11), bool] */;
    %792 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 10, 11), uint8] */, dtype="bool") /* ty=Tensor[(6, 10, 11), bool] */;
    %793 = equal(%791, %792) /* ty=Tensor[(6, 10, 11), bool] */;
    %794 = cast(%793, dtype="bool") /* ty=Tensor[(6, 10, 11), bool] */;
    %795 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 1, 11), uint8] */, dtype="bool") /* ty=Tensor[(6, 1, 11), bool] */;
    %796 = greater_equal(%794, %795) /* ty=Tensor[(6, 10, 11), bool] */;
    %797 = cast(%796, dtype="int16") /* ty=Tensor[(6, 10, 11), int16] */;
    %798 = shape_of(%777, dtype="int32") /* ty=Tensor[(3), int32] */;
    %799 = cast(%777, dtype="int16") /* ty=Tensor[(6, 10, 11), int16] */;
    %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %801 = %758.2;
    %802 = %763.5;
    %803 = right_shift(%765, %766) /* ty=Tensor[(6, 7, 11), uint16] */;
    %804 = %771.4;
    %805 = %775.2;
    %806 = sinh(%782) /* ty=Tensor[(6, 10, 11), float32] */;
    %807 = sqrt(%788) /* ty=Tensor[(6, 10, 11), float64] */;
    %808 = %789.2;
    %809 = %790.2;
    %810 = logical_xor(%799, %800) /* ty=Tensor[(6, 10, 11), int16] */;
    (%801, %802, meta[relay.Constant][24] /* ty=Tensor[(275), float32] */, meta[relay.Constant][25] /* ty=Tensor[(1, 1350), uint8] */, %772, %803, %804, meta[relay.Constant][27] /* ty=Tensor[(385), float64] */, %805, %806, %807, %808, %809, %810)
  };
  %811(%var_7046, %var_7047) /* ty=(Tensor[(576), int8], Tensor[(12, 12, 4), float32], Tensor[(275), float32], Tensor[(1, 1350), uint8], Tensor[(576), int8], Tensor[(6, 7, 11), uint16], Tensor[(1350), uint8], Tensor[(385), float64], Tensor[(576), int8], Tensor[(6, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), int64], Tensor[(6, 10, 11), int16]) */
}

def @func_3813() -> (Tensor[(5, 5, 11), float32],) {
  @func_3811() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_5726() -> (Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) {
  %833 = fn () -> (Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) {
    %812 = cast(meta[relay.Constant][29] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
    %813 = cast(meta[relay.Constant][29] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
    %814 = reshape(%812, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
    %815 = reshape(%813, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
    %816 = @func_3811() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %817 = %816.0;
    %818 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 5, 11), float32] */, dtype="int64") /* ty=Tensor[(5, 5, 11), int64] */;
    %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(3), int32] */;
    %820 = cast(%817, dtype="int64") /* ty=Tensor[(5, 5, 11), int64] */;
    %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %822 = cast(meta[relay.Constant][31] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
    %823 = reshape(%822, newshape=[11, 3, 16]) /* ty=Tensor[(11, 3, 16), int64] */;
    %824 = @func_4614(%823) /* ty=(Tensor[(11, 3, 16), int64], Tensor[(11, 3, 16), bool], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(385), float32]) */;
    %825 = %824.1;
    %826 = cast(meta[relay.Constant][31] /* ty=Tensor[(528), int64] */, dtype="int16") /* ty=Tensor[(528), int16] */;
    %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
    %828 = cast(%825, dtype="int16") /* ty=Tensor[(11, 3, 16), int16] */;
    %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %830 = @func_2239(%814, %815) /* ty=Tensor[(12, 13, 3), bool] */;
    %831 = left_shift(%820, %821) /* ty=Tensor[(5, 5, 11), int64] */;
    %832 = logical_xor(%828, %829) /* ty=Tensor[(11, 3, 16), int16] */;
    (%830, meta[relay.Constant][29] /* ty=Tensor[(468), int32] */, %831, %832)
  };
  %833() /* ty=(Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) */
}

def @func_3700() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) {
  %845 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) {
    %834 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %835 = %834.1;
    %836 = cast(%835, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
    %837 = @func_3434() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %838 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %839 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
    %840 = rsqrt(%836) /* ty=Tensor[(7, 5, 11), float64] */;
    %841 = %837.0;
    %842 = @func_2800() /* ty=Tensor[(7, 5, 11), float64] */;
    %843 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
    %844 = %838.0;
    (%839, %840, %841, %842, %843, %844)
  };
  %845() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) */
}

def @func_7141() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %849 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
    %846 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
    %847 = %846.0;
    %848 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
    (%847, %848)
  };
  %849() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_1920(%var_1885: Tensor[(7, 5, 11), float32]) -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %850 = cast(meta[relay.Constant][32] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %851 = reshape(%850, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %852 = @func_907(%851) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %853 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %854 = cast(%var_1885, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %855 = erf(%854) /* ty=Tensor[(7, 5, 11), float64] */;
  %856 = cast(%855, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %857 = acosh(%856) /* ty=Tensor[(7, 5, 11), float32] */;
  %858 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %859 = %858.0;
  %860 = cast(%var_1885, dtype="uint16") /* ty=Tensor[(7, 5, 11), uint16] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%859, dtype="uint16") /* ty=Tensor[(7, 5, 11), uint16] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %864 = subtract(%862, %863) /* ty=Tensor[(7, 5, 11), uint16] */;
  %865 = cast(%864, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %866 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%857, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %869 = %852.0;
  %870 = %853.2;
  %871 = floor_mod(%867, %868) /* ty=Tensor[(7, 5, 11), float64] */;
  (%869, meta[relay.Constant][32] /* ty=Tensor[(576), int8] */, %870, %871)
}

def @func_6097(%var_6096: Tensor[(2), uint32]) -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
  %879 = fn (%var_6079: Tensor[(2), uint32]) -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
    %872 = cast(%var_6079, dtype="uint32") /* ty=Tensor[(2), uint32] */;
    %873 = reshape(%872, newshape=[2]) /* ty=Tensor[(2), uint32] */;
    %874 = @func_5224(%873) /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(468), int32], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(2), uint32], Tensor[(7, 5, 11), float32]) */;
    %875 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %876 = @func_5034() /* ty=Tensor[(576), int8] */;
    %877 = %874.0;
    %878 = %875.1;
    (%876, %877, %var_6079, %878)
  };
  %879(%var_6096) /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */
}

def @func_8255() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %880 = @func_6706() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %881 = @func_6706() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %882 = %880.0;
  %883 = %881.0;
  (%882, %883)
}

def @func_6240() -> Tensor[(7, 5, 11), float64] {
  @func_6238() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_1003(%var_1001: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(576), int8]) {
  @func_1000(%var_1001) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(576), int8]) */
}

def @func_10771() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %892 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
    %884 = @func_6176() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %885 = cast(meta[relay.Constant][33] /* ty=Tensor[(55, 7), float64] */, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
    %886 = reshape(%885, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float64] */;
    %887 = @func_3699() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) */;
    %888 = %884.0;
    %889 = @func_6659(%886) /* ty=Tensor[(7, 5, 11), bool] */;
    %890 = @func_3168() /* ty=Tensor[(7, 5, 11), float64] */;
    %891 = %887.4;
    (%888, %889, meta[relay.Constant][33] /* ty=Tensor[(55, 7), float64] */, %890, %891)
  };
  %892() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */
}

def @func_8303(%var_8301: Tensor[(2112), uint32], %var_8302: Tensor[(2), bool]) -> (Tensor[(5, 5, 11), float64], Tensor[(468), int32], Tensor[(12, 16, 11), bool], Tensor[(2112), uint32], Tensor[(7, 5, 11), float64], Tensor[(2), bool]) {
  @func_8299(%var_8301, %var_8302) /* ty=(Tensor[(5, 5, 11), float64], Tensor[(468), int32], Tensor[(12, 16, 11), bool], Tensor[(2112), uint32], Tensor[(7, 5, 11), float64], Tensor[(2), bool]) */
}

def @func_2338() -> Tensor[(576), int8] {
  %893 = fn () -> Tensor[(576), int8] {
    @func_2010() /* ty=Tensor[(576), int8] */
  };
  %893() /* ty=Tensor[(576), int8] */
}

def @func_1750(%var_1748: Tensor[(6, 96), int8], %var_1749: Tensor[(6, 96), float32]) -> (Tensor[(6, 96), float32], Tensor[(6, 96), bool]) {
  %908 = fn (%var_1722: Tensor[(6, 96), int8], %var_1732: Tensor[(6, 96), float32]) -> (Tensor[(6, 96), float32], Tensor[(6, 96), bool]) {
    %894 = cast(%var_1722, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
    %895 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
    %896 = %895.4;
    %897 = cast(%var_1722, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
    %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(2), int32] */;
    %899 = cast(%896, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
    %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %901 = maximum(%899, %900) /* ty=Tensor[(6, 96), float32] */;
    %902 = cast(%var_1732, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
    %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(2), int32] */;
    %904 = cast(%901, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
    %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %906 = erf(%894) /* ty=Tensor[(6, 96), float32] */;
    %907 = not_equal(%904, %905) /* ty=Tensor[(6, 96), bool] */;
    (%906, %907)
  };
  %908(%var_1748, %var_1749) /* ty=(Tensor[(6, 96), float32], Tensor[(6, 96), bool]) */
}

def @func_1533() -> Tensor[(5, 5, 11), float32] {
  @func_1531() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_1118() -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) {
  %909 = cast(meta[relay.Constant][34] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %910 = reshape(%909, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %911 = @func_907(%910) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %912 = cast(meta[relay.Constant][34] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %913 = reshape(%912, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %914 = @func_1066(%913) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */;
  %915 = cast(meta[relay.Constant][34] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %916 = reshape(%915, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
  %917 = @func_1066(%916) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */;
  %918 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %919 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %920 = %911.1;
  %921 = %914.0;
  %922 = %917.2;
  %923 = %918.0;
  (%919, %920, meta[relay.Constant][34] /* ty=Tensor[(576), int8] */, %921, %922, %923)
}

def @func_1976() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) {
  %924 = @func_1553() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %925 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  %926 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  %927 = %924.0;
  (%925, %926, %927)
}

def @func_2296() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
  @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */
}

def @func_937(%var_935: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
  @func_934(%var_935) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */
}

def @func_3877() -> Tensor[(7, 5, 11), float64] {
  %928 = @func_1779() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
  %928.0
}

def @func_6904() -> (Tensor[(7, 5, 11), float32],) {
  %929 = @func_2809() /* ty=(Tensor[(7, 5, 11), float32],) */;
  %930 = %929.0;
  (%930,)
}

def @func_3435() -> (Tensor[(7, 5, 11), float64],) {
  %933 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %931 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
    %932 = %931.0;
    (%932,)
  };
  %933() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_7078(%var_7077: Tensor[(72, 8), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(72, 8), int8]) {
  %941 = fn (%var_7074: Tensor[(72, 8), int8]) -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(72, 8), int8]) {
    %934 = @func_3422() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
    %935 = cast(%var_7074, dtype="int8") /* ty=Tensor[(72, 8), int8] */;
    %936 = reshape(%935, newshape=[6, 96]) /* ty=Tensor[(6, 96), int8] */;
    %937 = @func_1066(%936) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) */;
    %938 = @func_2371() /* ty=Tensor[(5, 5, 11), float32] */;
    %939 = %934.0;
    %940 = %937.0;
    (%938, %939, %940, %var_7074)
  };
  %941(%var_7077) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(72, 8), int8]) */
}

def @func_9904(%var_9902: Tensor[(6, 13, 11), uint8], %var_9903: Tensor[(6, 13, 11), uint8]) -> Tensor[(6, 13, 11), bool] {
  %946 = fn (%var_9896: Tensor[(6, 13, 11), uint8], %var_9897: Tensor[(6, 13, 11), uint8]) -> Tensor[(6, 13, 11), bool] {
    %942 = cast(%var_9897, dtype="bool") /* ty=Tensor[(6, 13, 11), bool] */;
    %943 = shape_of(%var_9896, dtype="int32") /* ty=Tensor[(3), int32] */;
    %944 = cast(%var_9896, dtype="bool") /* ty=Tensor[(6, 13, 11), bool] */;
    %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%944, %945) /* ty=Tensor[(6, 13, 11), bool] */
  };
  %946(%var_9902, %var_9903) /* ty=Tensor[(6, 13, 11), bool] */
}

def @func_2773(%var_2772: Tensor[(5, 5, 11), float32]) -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
  %955 = fn (%var_2749: Tensor[(5, 5, 11), float32]) -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8]) {
    %947 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
    %948 = cast(%var_2749, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
    %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
    %950 = cast(%947, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
    %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %952 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
    %953 = floor_divide(%950, %951) /* ty=Tensor[(5, 5, 11), float32] */;
    %954 = %952.2;
    (%953, %954)
  };
  %955(%var_2772) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */
}

def @func_3422() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %956 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %957 = %956.0;
  %958 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
  (%957, %958)
}

def @func_3850() -> (Tensor[(5, 5, 11), float32],) {
  @func_3848() /* ty=(Tensor[(5, 5, 11), float32],) */
}

def @func_4489(%var_4473: Tensor[(7, 13, 4), bool], %var_4474: Tensor[(7, 13, 4), bool]) -> (Tensor[(7, 13, 4), bool],) {
  %959 = cast(%var_4474, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
  %960 = shape_of(%var_4473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %961 = cast(%var_4473, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %963 = logical_or(%961, %962) /* ty=Tensor[(7, 13, 4), bool] */;
  (%963,)
}

def @func_6401(%var_6400: Tensor[(16, 6, 4), float64]) -> Tensor[(16, 6, 4), float64] {
  %965 = fn (%var_6386: Tensor[(16, 6, 4), float64]) -> Tensor[(16, 6, 4), float64] {
    %964 = cast(%var_6386, dtype="float64") /* ty=Tensor[(16, 6, 4), float64] */;
    cosh(%964) /* ty=Tensor[(16, 6, 4), float64] */
  };
  %965(%var_6400) /* ty=Tensor[(16, 6, 4), float64] */
}

def @func_6322() -> (Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), int64]) {
  %966 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %967 = @func_5725() /* ty=(Tensor[(12, 13, 3), bool], Tensor[(468), int32], Tensor[(5, 5, 11), int64], Tensor[(11, 3, 16), int16]) */;
  %968 = %966.0;
  %969 = %967.2;
  (%968, %969)
}

def @func_10687() -> (Tensor[(5, 5, 11), float32], Tensor[(576), int8], Tensor[(385), float32]) {
  %970 = @func_9018() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %971 = cast(meta[relay.Constant][35] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %972 = reshape(%971, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
  %973 = @func_1920(%972) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %974 = %970.1;
  %975 = %973.2;
  (%974, %975, meta[relay.Constant][35] /* ty=Tensor[(385), float32] */)
}

def @func_8332() -> Tensor[(5, 5, 11), float32] {
  %976 = @func_2567() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %976.0
}

def @func_5603() -> (Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
  %977 = @func_2294() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %978 = cast(meta[relay.Constant][36] /* ty=Tensor[(2), uint32] */, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %979 = cast(meta[relay.Constant][36] /* ty=Tensor[(2), uint32] */, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %980 = reshape(%978, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %981 = reshape(%979, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint32] */;
  %982 = %977.0;
  %983 = cast(%982, dtype="int8") /* ty=Tensor[(576), int8] */;
  %984 = reshape(%983, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %985 = @func_907(%984) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %986 = @func_4197(%980, %981) /* ty=Tensor[(?, 2), bool] */;
  %987 = %985.0;
  (%982, %986, meta[relay.Constant][36] /* ty=Tensor[(2), uint32] */, %987)
}

def @func_8522() -> Tensor[(7, 5, 11), float64] {
  @func_8520() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_5766(%var_5764: uint8, %var_5765: Tensor[(14, 1, 9), uint8]) -> (Tensor[(14, 1, 9), uint8], Tensor[(576), int8], Tensor[(14, 1, 9), float32]) {
  @func_5762(%var_5764, %var_5765) /* ty=(Tensor[(14, 1, 9), uint8], Tensor[(576), int8], Tensor[(14, 1, 9), float32]) */
}

def @func_2602(%var_2600: Tensor[(6, 15, 15), uint8], %var_2601: Tensor[(576), int8]) -> (Tensor[(6, 15, 15), uint8], Tensor[(12, 12, 4), float32], Tensor[(576), int8]) {
  @func_2598(%var_2600, %var_2601) /* ty=(Tensor[(6, 15, 15), uint8], Tensor[(12, 12, 4), float32], Tensor[(576), int8]) */
}

def @func_2801() -> Tensor[(7, 5, 11), float64] {
  %990 = fn () -> Tensor[(7, 5, 11), float64] {
    %988 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
    %989 = cast(%988, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
    log(%989) /* ty=Tensor[(7, 5, 11), float64] */
  };
  %990() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_1434() -> (Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %995 = fn () -> (Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
    %991 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
    %992 = cast(%991, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
    %993 = sqrt(%992) /* ty=Tensor[(7, 5, 11), float32] */;
    %994 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
    (%993, %994)
  };
  %995() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */
}

def @func_1000(%var_990: Tensor[(576), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(576), int8]) {
  %996 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %997 = cast(%var_990, dtype="int8") /* ty=Tensor[(576), int8] */;
  %998 = cast(%var_990, dtype="int8") /* ty=Tensor[(576), int8] */;
  %999 = reshape(%997, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %1000 = reshape(%998, newshape=[12, 12, 4]) /* ty=Tensor[(12, 12, 4), int8] */;
  %1001 = @func_582(%999, %1000) /* ty=(Tensor[(12, 12, 4), int8], Tensor[(12, 12, 4), float64], Tensor[(12, 12, 4), float32]) */;
  %1002 = %1001.0;
  %1003 = cast(%1002, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %1004 = reshape(%1003, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %1005 = @func_907(%1004) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %1006 = %996.0;
  %1007 = %1005.2;
  (%1006, %1002, %var_990, %1007)
}

def @func_4201(%var_4199: Tensor[(1, 2), uint32], %var_4200: Tensor[(1, 2), uint32]) -> Tensor[(?, 2), bool] {
  @func_4197(%var_4199, %var_4200) /* ty=Tensor[(?, 2), bool] */
}

def @func_7771(%var_7759: Tensor[(1, 385), float64]) -> (Tensor[(5, 5, 11), int64], Tensor[(7, 5, 11), uint8], Tensor[(1, 385), float64], Tensor[(1350), uint8]) {
  %1008 = cast(%var_7759, dtype="float64") /* ty=Tensor[(1, 385), float64] */;
  %1009 = cast(meta[relay.Constant][37] /* ty=Tensor[(1350), uint8] */, dtype="uint8") /* ty=Tensor[(1350), uint8] */;
  %1010 = reshape(%1008, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %1011 = reshape(%1009, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %1012 = @func_5897(%1010, %1011) /* ty=(Tensor[(5, 5, 11), bool], Tensor[(7, 5, 11), uint8], Tensor[(385), float64], Tensor[(7, 5, 11), float32], Tensor[(1350), uint8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %1013 = @func_7414() /* ty=Tensor[(5, 5, 11), int64] */;
  %1014 = %1012.1;
  (%1013, %1014, %var_7759, meta[relay.Constant][37] /* ty=Tensor[(1350), uint8] */)
}

def @func_3207() -> Tensor[(5, 5, 11), float32] {
  %1016 = fn () -> Tensor[(5, 5, 11), float32] {
    %1015 = @func_2663() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %1015.0
  };
  %1016() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_4669() -> (Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) {
  @func_4667() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */
}

def @func_5573() -> Tensor[(7, 5, 11), float64] {
  %1017 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %1017.0
}

def @func_3570() -> (Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) {
  %1018 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1019 = @func_1500() /* ty=(Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %1020 = %1018.0;
  %1021 = %1019.1;
  (%1020, %1021)
}

def @func_8257() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  @func_8255() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */
}

def @func_6238() -> Tensor[(7, 5, 11), float64] {
  @func_4537() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_3734() -> (Tensor[(5, 5, 11), float32],) {
  %1022 = @func_1531() /* ty=Tensor[(5, 5, 11), float32] */;
  (%1022,)
}

def @func_7397() -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8]) {
  @func_7395() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8]) */
}

def @func_8639() -> (Tensor[(7, 5, 11), float64],) {
  %1025 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %1023 = @func_6562() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %1024 = %1023.3;
    (%1024,)
  };
  %1025() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_10217() -> (Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), int64]) {
  @func_10215() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), int64]) */
}

def @func_8357() -> Tensor[(576), int8] {
  %1026 = fn () -> Tensor[(576), int8] {
    @func_2010() /* ty=Tensor[(576), int8] */
  };
  %1026() /* ty=Tensor[(576), int8] */
}

def @func_2672() -> Tensor[(5, 5, 11), float32] {
  @func_2371() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_3373() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
  %1029 = fn () -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
    %1027 = @func_2337() /* ty=Tensor[(576), int8] */;
    %1028 = @func_2672() /* ty=Tensor[(5, 5, 11), float32] */;
    (%1027, %1028)
  };
  %1029() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */
}

def @func_2242(%var_2240: Tensor[(12, 13, 3), int32], %var_2241: Tensor[(12, 13, 3), int32]) -> Tensor[(12, 13, 3), bool] {
  %1034 = fn (%var_2232: Tensor[(12, 13, 3), int32], %var_2233: Tensor[(12, 13, 3), int32]) -> Tensor[(12, 13, 3), bool] {
    %1030 = cast(%var_2233, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
    %1031 = shape_of(%var_2232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1032 = cast(%var_2232, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
    %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1032, %1033) /* ty=Tensor[(12, 13, 3), bool] */
  };
  %1034(%var_2240, %var_2241) /* ty=Tensor[(12, 13, 3), bool] */
}

def @func_4408() -> Tensor[(5, 5, 5), float32] {
  %1035 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 5), float32] */;
  sqrt(%1035) /* ty=Tensor[(5, 5, 5), float32] */
}

def @func_10103(%var_10102: Tensor[(5, 5, 11), float32]) -> Tensor[(5, 5, 11), float32] {
  %1042 = fn (%var_10088: Tensor[(5, 5, 11), float32]) -> Tensor[(5, 5, 11), float32] {
    %1036 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %1037 = %1036.0;
    %1038 = cast(%var_10088, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
    %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1040 = cast(%1037, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
    %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%1040, %1041) /* ty=Tensor[(5, 5, 11), float32] */
  };
  %1042(%var_10102) /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_1066(%var_1051: Tensor[(6, 96), int8]) -> (Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(6, 96), int8]) {
  %1043 = @func_736() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %1044 = cast(%var_1051, dtype="int8") /* ty=Tensor[(6, 96), int8] */;
  %1045 = reshape(%1044, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %1046 = @func_934(%1045) /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */;
  %1047 = %1043.0;
  %1048 = %1046.2;
  (%1047, %1048, %var_1051)
}

def @func_7903() -> Tensor[(5, 5, 11), float32] {
  %1049 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1049.0
}

def @func_3934() -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
  %1053 = fn () -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) {
    %1050 = @func_1598() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */;
    %1051 = %1050.2;
    %1052 = @func_2800() /* ty=Tensor[(7, 5, 11), float64] */;
    (%1051, %1052)
  };
  %1053() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64]) */
}

def @func_2156() -> Tensor[(7, 5, 11), float64] {
  %1055 = fn () -> Tensor[(7, 5, 11), float64] {
    %1054 = @func_1841() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %1054.0
  };
  %1055() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_5342(%var_5340: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), uint8], Tensor[(7, 5, 11), float64]) {
  @func_5339(%var_5340) /* ty=(Tensor[(7, 5, 11), uint8], Tensor[(7, 5, 11), float64]) */
}

def @func_3482() -> (Tensor[(7, 5, 11), float64],) {
  %1056 = @func_2567() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %1057 = %1056.1;
  (%1057,)
}

def @func_8466(%var_8465: Tensor[(14, 15, 13), bool]) -> (Tensor[(14, 15, 13), bool], Tensor[(576), int8], Tensor[(14, 15, 13), float32], Tensor[(5, 5, 11), float32]) {
  %1065 = fn (%var_8430: Tensor[(14, 15, 13), bool]) -> (Tensor[(14, 15, 13), bool], Tensor[(576), int8], Tensor[(14, 15, 13), float32], Tensor[(5, 5, 11), float32]) {
    %1058 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1059 = cast(%var_8430, dtype="bool") /* ty=Tensor[(14, 15, 13), bool] */;
    %1060 = cast(%var_8430, dtype="float32") /* ty=Tensor[(14, 15, 13), float32] */;
    %1061 = logical_or(%1058, %1059) /* ty=Tensor[(14, 15, 13), bool] */;
    %1062 = @func_2010() /* ty=Tensor[(576), int8] */;
    %1063 = acosh(%1060) /* ty=Tensor[(14, 15, 13), float32] */;
    %1064 = @func_7903() /* ty=Tensor[(5, 5, 11), float32] */;
    (%1061, %1062, %1063, %1064)
  };
  %1065(%var_8465) /* ty=(Tensor[(14, 15, 13), bool], Tensor[(576), int8], Tensor[(14, 15, 13), float32], Tensor[(5, 5, 11), float32]) */
}

def @func_4614(%var_4569: Tensor[(11, 3, 16), int64]) -> (Tensor[(11, 3, 16), int64], Tensor[(11, 3, 16), bool], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(385), float32]) {
  %1066 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 3, 16), int64] */, dtype="int64") /* ty=Tensor[(11, 3, 16), int64] */;
  %1067 = shape_of(%var_4569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(%var_4569, dtype="int64") /* ty=Tensor[(11, 3, 16), int64] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1070 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 3, 16), int64] */, dtype="bool") /* ty=Tensor[(11, 3, 16), bool] */;
  %1071 = shape_of(%var_4569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1072 = cast(%var_4569, dtype="bool") /* ty=Tensor[(11, 3, 16), bool] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1074 = @func_3372() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32]) */;
  %1075 = cast(meta[relay.Constant][40] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %1076 = reshape(%1075, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float32] */;
  %1077 = @func_1920(%1076) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) */;
  %1078 = maximum(%1068, %1069) /* ty=Tensor[(11, 3, 16), int64] */;
  %1079 = greater_equal(%1072, %1073) /* ty=Tensor[(11, 3, 16), bool] */;
  %1080 = %1074.0;
  %1081 = %1077.0;
  (%1078, %1079, %1080, %1081, meta[relay.Constant][40] /* ty=Tensor[(385), float32] */)
}

def @func_4984(%var_4904: Tensor[(5, 5, 11), float32], %var_4954: Tensor[(1350), uint8]) -> (Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) {
  %1082 = @func_3570() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %1083 = %1082.0;
  %1084 = cast(%var_4904, dtype="int64") /* ty=Tensor[(5, 5, 11), int64] */;
  %1085 = shape_of(%1083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1086 = cast(%1083, dtype="int64") /* ty=Tensor[(5, 5, 11), int64] */;
  %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1088 = cast(meta[relay.Constant][41] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %1089 = reshape(%1088, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %1090 = @func_907(%1089) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8]) */;
  %1091 = @func_2567() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %1092 = %1091.1;
  %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %1094 = reshape(%1093, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float64] */;
  %1095 = @func_3922(%1094) /* ty=Tensor[(7, 5, 11), uint8] */;
  %1096 = cast(%1092, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %1097 = shape_of(%1095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1098 = cast(%1095, dtype="float32") /* ty=Tensor[(7, 5, 11), float32] */;
  %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1100 = @func_4667() /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(?, 2), bool], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
  %1101 = cast(%var_4954, dtype="uint8") /* ty=Tensor[(1350), uint8] */;
  %1102 = %1090.1;
  %1103 = cast(%1102, dtype="int8") /* ty=Tensor[(12, 12, 4), int8] */;
  %1104 = reshape(%1101, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), uint8] */;
  %1105 = reshape(%1103, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %1106 = @func_2598(%1104, %1105) /* ty=(Tensor[(6, 15, 15), uint8], Tensor[(12, 12, 4), float32], Tensor[(576), int8]) */;
  %1107 = @func_1210() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(576), int8], Tensor[(576), int8]) */;
  %1108 = add(%1086, %1087) /* ty=Tensor[(5, 5, 11), int64] */;
  %1109 = power(%1098, %1099) /* ty=Tensor[(7, 5, 11), float32] */;
  %1110 = %1100.2;
  %1111 = %1106.1;
  %1112 = %1107.2;
  (%1108, %1102, meta[relay.Constant][41] /* ty=Tensor[(576), int8] */, %1109, %1110, %1111, %var_4954, %1112)
}

def @func_9681(%var_9680: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), bool],) {
  %1120 = fn (%var_9652: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), bool],) {
    %1113 = @func_8991() /* ty=(Tensor[(7, 5, 11), float64],) */;
    %1114 = %1113.0;
    %1115 = cast(%var_9652, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
    %1116 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1117 = cast(%1114, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
    %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1119 = equal(%1117, %1118) /* ty=Tensor[(7, 5, 11), bool] */;
    (%1119,)
  };
  %1120(%var_9680) /* ty=(Tensor[(7, 5, 11), bool],) */
}

def @func_2373() -> Tensor[(5, 5, 11), float32] {
  @func_2371() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_2294() -> (Tensor[(576), int8], Tensor[(5, 5, 11), float32]) {
  %1121 = @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
  %1122 = @func_2010() /* ty=Tensor[(576), int8] */;
  %1123 = %1121.0;
  (%1122, %1123)
}

def @func_2024() -> (Tensor[(576), int8],) {
  %1124 = @func_1695() /* ty=(Tensor[(576), int8],) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_5555() -> Tensor[(5, 5, 11), float32] {
  %1127 = fn () -> Tensor[(5, 5, 11), float32] {
    %1126 = @func_1976() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(7, 5, 11), float64], Tensor[(5, 5, 11), float32]) */;
    %1126.2
  };
  %1127() /* ty=Tensor[(5, 5, 11), float32] */
}

def @func_7456() -> (Tensor[(11, 12, 11), float64], Tensor[(7, 5, 11), float64]) {
  %1131 = fn () -> (Tensor[(11, 12, 11), float64], Tensor[(7, 5, 11), float64]) {
    %1128 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 11), float64] */;
    %1129 = tan(%1128) /* ty=Tensor[(11, 12, 11), float64] */;
    %1130 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
    (%1129, %1130)
  };
  %1131() /* ty=(Tensor[(11, 12, 11), float64], Tensor[(7, 5, 11), float64]) */
}

def @func_7352() -> (Tensor[(5, 5, 11), float32],) {
  %1132 = @func_4351() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_9109() -> (Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) {
  @func_9107() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(576), int8]) */
}

def @func_9294() -> (Tensor[(5, 5, 11), float32],) {
  %1134 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1135 = %1134.0;
  (%1135,)
}

def @func_4515() -> Tensor[(7, 5, 11), float64] {
  %1136 = fn () -> Tensor[(7, 5, 11), float64] {
    @func_2155() /* ty=Tensor[(7, 5, 11), float64] */
  };
  %1136() /* ty=Tensor[(7, 5, 11), float64] */
}

def @func_7977(%var_7975: Tensor[(11, 2, 2), float32], %var_7976: Tensor[(2), uint32]) -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(2), uint32], Tensor[(11, 2, 2), float32]) {
  %1146 = fn (%var_7943: Tensor[(11, 2, 2), float32], %var_7960: Tensor[(2), uint32]) -> (Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(2), uint32], Tensor[(11, 2, 2), float32]) {
    %1137 = cast(%var_7960, dtype="uint32") /* ty=Tensor[(2), uint32] */;
    %1138 = reshape(%1137, newshape=[2]) /* ty=Tensor[(2), uint32] */;
    %1139 = @func_6095(%1138) /* ty=(Tensor[(576), int8], Tensor[(576), int8], Tensor[(2), uint32], Tensor[(7, 5, 11), float64]) */;
    %1140 = cast(%var_7943, dtype="float32") /* ty=Tensor[(11, 2, 2), float32] */;
    %1141 = erf(%1140) /* ty=Tensor[(11, 2, 2), float32] */;
    %1142 = cast(%1141, dtype="float32") /* ty=Tensor[(11, 2, 2), float32] */;
    %1143 = @func_3168() /* ty=Tensor[(7, 5, 11), float64] */;
    %1144 = %1139.3;
    %1145 = atanh(%1142) /* ty=Tensor[(11, 2, 2), float32] */;
    (%1143, %1144, %var_7960, %1145)
  };
  %1146(%var_7975, %var_7976) /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(2), uint32], Tensor[(11, 2, 2), float32]) */
}

def @func_2516() -> (Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) {
  %1154 = fn () -> (Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) {
    %1147 = @func_1254() /* ty=(Tensor[(5, 5, 11), float32],) */;
    %1148 = cast(meta[relay.Constant][43] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
    %1149 = cast(meta[relay.Constant][43] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
    %1150 = reshape(%1148, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
    %1151 = reshape(%1149, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), int32] */;
    %1152 = %1147.0;
    %1153 = @func_2239(%1150, %1151) /* ty=Tensor[(12, 13, 3), bool] */;
    (%1152, %1153, meta[relay.Constant][43] /* ty=Tensor[(468), int32] */)
  };
  %1154() /* ty=(Tensor[(5, 5, 11), float32], Tensor[(12, 13, 3), bool], Tensor[(468), int32]) */
}

def @func_7856() -> (Tensor[(5, 5, 11), float32], Tensor[(12, 12, 4), int8]) {
  %1155 = @func_1673() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1156 = @func_1118() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float64], Tensor[(6, 96), int8], Tensor[(7, 5, 11), float64]) */;
  %1157 = %1155.0;
  %1158 = %1156.1;
  (%1157, %1158)
}

def @func_3924(%var_3923: Tensor[(7, 5, 11), float64]) -> Tensor[(7, 5, 11), uint8] {
  %1164 = fn (%var_3915: Tensor[(7, 5, 11), float64]) -> Tensor[(7, 5, 11), uint8] {
    %1159 = @func_2155() /* ty=Tensor[(7, 5, 11), float64] */;
    %1160 = cast(%var_3915, dtype="uint8") /* ty=Tensor[(7, 5, 11), uint8] */;
    %1161 = shape_of(%1159, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1162 = cast(%1159, dtype="uint8") /* ty=Tensor[(7, 5, 11), uint8] */;
    %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    right_shift(%1162, %1163) /* ty=Tensor[(7, 5, 11), uint8] */
  };
  %1164(%var_3923) /* ty=Tensor[(7, 5, 11), uint8] */
}

def @func_4351() -> (Tensor[(5, 5, 11), float32],) {
  %1165 = @func_3158() /* ty=(Tensor[(576), int8], Tensor[(5, 5, 11), float32], Tensor[(5, 5, 11), float32]) */;
  %1166 = %1165.1;
  (%1166,)
}

def @func_8299(%var_8279: Tensor[(2112), uint32], %var_8287: Tensor[(2), bool]) -> (Tensor[(5, 5, 11), float64], Tensor[(468), int32], Tensor[(12, 16, 11), bool], Tensor[(2112), uint32], Tensor[(7, 5, 11), float64], Tensor[(2), bool]) {
  %1167 = @func_5491() /* ty=(Tensor[(5, 5, 11), float64],) */;
  %1168 = cast(%var_8279, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %1169 = cast(%var_8279, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %1170 = reshape(%1168, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), uint32] */;
  %1171 = reshape(%1169, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), uint32] */;
  %1172 = cast(%var_8287, dtype="bool") /* ty=Tensor[(2), bool] */;
  %1173 = reshape(%1172, newshape=[1, 2]) /* ty=Tensor[(1, 2), bool] */;
  %1174 = @func_8089(%1173) /* ty=(Tensor[(?, 2), float32], Tensor[(7, 5, 11), float64], Tensor[(2, 9, 5), bool], Tensor[(90), int32]) */;
  %1175 = %1167.0;
  %1176 = @func_4694() /* ty=Tensor[(468), int32] */;
  %1177 = @func_703(%1170, %1171) /* ty=Tensor[(12, 16, 11), bool] */;
  %1178 = %1174.1;
  (%1175, %1176, %1177, %var_8279, %1178, %var_8287)
}

def @func_8497() -> (Tensor[(7, 5, 11), float64],) {
  %1181 = fn () -> (Tensor[(7, 5, 11), float64],) {
    %1179 = @func_3699() /* ty=(Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), float32]) */;
    %1180 = %1179.3;
    (%1180,)
  };
  %1181() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_5897(%var_5827: Tensor[(385), float64], %var_5861: Tensor[(1350), uint8]) -> (Tensor[(5, 5, 11), bool], Tensor[(7, 5, 11), uint8], Tensor[(385), float64], Tensor[(7, 5, 11), float32], Tensor[(1350), uint8], Tensor[(7, 5, 11), float32], Tensor[(576), int8], Tensor[(7, 5, 11), float64]) {
  %1182 = @func_3848() /* ty=(Tensor[(5, 5, 11), float32],) */;
  %1183 = %1182.0;
  %1184 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 5, 11), float32] */, dtype="bool") /* ty=Tensor[(5, 5, 11), bool] */;
  %1185 = shape_of(%1183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1186 = cast(%1183, dtype="bool") /* ty=Tensor[(5, 5, 11), bool] */;
  %1187 = dyn.reshape(%1184, %1185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1188 = cast(%var_5827, dtype="float64") /* ty=Tensor[(385), float64] */;
  %1189 = reshape(%1188, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), float64] */;
  %1190 = cast(%1183, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %1191 = cast(%var_5861, dtype="uint8") /* ty=Tensor[(1350), uint8] */;
  %1192 = reshape(%1190, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %1193 = reshape(%1191, newshape=[1350]) /* ty=Tensor[(1350), uint8] */;
  %1194 = @func_4984(%1192, %1193) /* ty=(Tensor[(5, 5, 11), int64], Tensor[(12, 12, 4), int8], Tensor[(576), int8], Tensor[(7, 5, 11), float32], Tensor[(?, 2), bool], Tensor[(12, 12, 4), float32], Tensor[(1350), uint8], Tensor[(576), int8]) */;
  %1195 = @func_1433() /* ty=(Tensor[(7, 5, 11), float32], Tensor[(7, 5, 11), float64]) */;
  %1196 = cast(%1183, dtype="float32") /* ty=Tensor[(5, 5, 11), float32] */;
  %1197 = reshape(%1196, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), float32] */;
  %1198 = @func_2771(%1197) /* ty=(Tensor[(5, 5, 11), float32], Tensor[(576), int8]) */;
  %1199 = logical_or(%1186, %1187) /* ty=Tensor[(5, 5, 11), bool] */;
  %1200 = @func_3922(%1189) /* ty=Tensor[(7, 5, 11), uint8] */;
  %1201 = %1194.3;
  %1202 = %1195.0;
  %1203 = %1198.1;
  %1204 = @func_1032() /* ty=Tensor[(7, 5, 11), float64] */;
  (%1199, %1200, %var_5827, %1201, %var_5861, %1202, %1203, %1204)
}

def @func_2674() -> Tensor[(5, 5, 11), float32] {
  @func_2672() /* ty=Tensor[(5, 5, 11), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen571/build/output.py", line 3768, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:34:13] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


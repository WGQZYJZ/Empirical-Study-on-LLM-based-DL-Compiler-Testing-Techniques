import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_134 = relay.const(4, dtype = "int8")#candidate|134|()|const|int8
var_135 = relay.var("var_135", dtype = "int8", shape = (12, 9, 13))#candidate|135|(12, 9, 13)|var|int8
bop_136 = relay.add(const_134.astype('int8'), var_135.astype('int8')) # shape=(12, 9, 13)
uop_170 = relay.log10(bop_136.astype('float64')) # shape=(12, 9, 13)
output = uop_170
output2 = uop_170
func_174 = relay.Function([var_135,], output)
mod['func_174'] = func_174
mod = relay.transform.InferType()(mod)
var_175 = relay.var("var_175", dtype = "int8", shape = (12, 9, 13))#candidate|175|(12, 9, 13)|var|int8
output = func_174(var_175)
func_176 = relay.Function([var_175], output)
mutated_mod['func_176'] = func_176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_419 = relay.var("var_419", dtype = "float64", shape = (1, 6, 5))#candidate|419|(1, 6, 5)|var|float64
uop_420 = relay.sin(var_419.astype('float64')) # shape=(1, 6, 5)
output = relay.Tuple([uop_420,])
output2 = relay.Tuple([uop_420,])
func_428 = relay.Function([var_419,], output)
mod['func_428'] = func_428
mod = relay.transform.InferType()(mod)
var_429 = relay.var("var_429", dtype = "float64", shape = (1, 6, 5))#candidate|429|(1, 6, 5)|var|float64
output = func_428(var_429)
func_430 = relay.Function([var_429], output)
mutated_mod['func_430'] = func_430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_690 = relay.var("var_690", dtype = "int64", shape = (3, 6, 11))#candidate|690|(3, 6, 11)|var|int64
var_691 = relay.var("var_691", dtype = "int64", shape = (3, 6, 11))#candidate|691|(3, 6, 11)|var|int64
bop_692 = relay.logical_xor(var_690.astype('int64'), relay.reshape(var_691.astype('int64'), relay.shape_of(var_690))) # shape=(3, 6, 11)
uop_699 = relay.exp(var_690.astype('float32')) # shape=(3, 6, 11)
output = relay.Tuple([bop_692,uop_699,])
output2 = relay.Tuple([bop_692,uop_699,])
func_713 = relay.Function([var_690,var_691,], output)
mod['func_713'] = func_713
mod = relay.transform.InferType()(mod)
mutated_mod['func_713'] = func_713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_713_call = mutated_mod.get_global_var('func_713')
var_715 = relay.var("var_715", dtype = "int64", shape = (3, 6, 11))#candidate|715|(3, 6, 11)|var|int64
var_716 = relay.var("var_716", dtype = "int64", shape = (3, 6, 11))#candidate|716|(3, 6, 11)|var|int64
call_714 = func_713_call(var_715,var_716,)
output = call_714
func_717 = relay.Function([var_715,var_716,], output)
mutated_mod['func_717'] = func_717
mutated_mod = relay.transform.InferType()(mutated_mod)
var_747 = relay.var("var_747", dtype = "uint16", shape = (13, 13, 5))#candidate|747|(13, 13, 5)|var|uint16
const_748 = relay.const([[[8,-3,-4,2,4],[-3,-1,5,5,2],[7,-4,7,7,-5],[-1,9,-7,4,4],[-7,7,6,-6,9],[4,-8,-9,6,6],[-2,-6,4,3,5],[6,-8,2,8,-4],[-5,-2,-7,-7,-4],[-6,-3,-9,-6,-5],[-4,2,7,-4,3],[-9,-8,-1,-2,8],[1,-6,6,1,10]],[[2,-6,-5,-2,7],[1,-2,-9,-4,1],[-8,-7,9,2,7],[6,5,8,7,1],[3,-10,-10,10,-3],[-5,-5,7,-10,-6],[8,-8,3,5,6],[-4,9,-8,4,-1],[10,9,-2,1,-3],[9,-8,8,-5,-1],[-10,-1,-10,6,-8],[-2,6,-4,-8,-2],[-2,4,-10,-1,-5]],[[5,9,4,7,-7],[8,-1,-1,-5,-2],[1,8,5,-8,-2],[-3,8,-4,-3,-2],[-6,-10,-7,4,1],[8,3,5,-3,-6],[-6,3,3,8,-10],[6,3,3,-8,-9],[-6,-9,3,8,-9],[-3,5,2,-5,4],[1,1,6,1,2],[3,8,-8,-7,9],[3,2,-9,-6,5]],[[10,-9,-9,5,-1],[1,-7,-5,10,-9],[10,10,-10,6,-5],[-5,6,-6,-1,2],[-9,5,2,9,3],[-2,2,5,-2,9],[2,2,7,3,-10],[9,10,7,3,-5],[-6,9,8,1,5],[-7,3,6,-9,10],[-4,1,5,5,4],[4,6,1,9,1],[-3,2,-8,-7,-7]],[[-6,-6,-4,-7,-8],[-8,4,-8,-7,-6],[-3,-9,-4,-3,-5],[8,1,10,-4,4],[-9,-6,6,7,-3],[4,-3,-10,9,10],[4,-7,1,-10,-6],[8,-7,-8,2,-8],[8,2,-4,-8,6],[9,5,4,-3,2],[-9,5,-9,-10,-6],[-8,2,-6,2,9],[2,-9,4,-5,-8]],[[-8,-1,2,6,1],[-4,-6,6,-3,6],[6,2,6,-9,-4],[-10,-3,-3,-1,10],[-1,-2,3,1,-6],[-9,-4,10,-8,-1],[-7,5,1,6,9],[7,-2,-8,-7,-10],[5,-9,-2,-9,9],[7,10,-5,-1,7],[1,-1,1,6,10],[2,7,4,-10,2],[-2,3,-10,-5,3]],[[1,5,5,-3,5],[8,7,-7,-5,-4],[6,7,-10,-10,-7],[6,-7,2,-9,4],[8,-1,5,8,5],[-6,-9,-10,1,-3],[-5,8,2,-3,-7],[-6,6,10,5,1],[1,3,-2,9,5],[4,3,-1,4,-7],[-10,5,-8,9,-4],[-5,2,3,3,9],[-3,7,5,-10,-3]],[[-9,10,10,1,-3],[-4,10,-6,-9,-6],[-6,-1,7,-2,-4],[-6,1,9,3,-3],[-6,7,-2,-2,2],[1,-9,3,-8,-4],[4,-5,5,-6,-5],[7,7,-9,4,10],[-9,6,-3,3,5],[-4,-7,-4,3,1],[1,9,-9,-7,-10],[-3,-9,-5,9,6],[5,-3,-8,-5,6]],[[-1,3,7,10,8],[-2,-9,9,5,-3],[-4,-10,-1,5,-1],[1,10,-4,7,-10],[4,-6,-4,6,-5],[-10,-7,5,9,5],[10,2,1,6,9],[-3,-7,5,-5,3],[-2,-8,-3,9,4],[-4,10,-4,-1,9],[6,5,2,-7,3],[-9,-4,3,4,1],[-4,2,-2,-4,-9]],[[-7,6,10,-1,7],[8,-8,6,10,-1],[-6,8,8,-4,-7],[7,8,3,3,7],[-8,7,9,-7,-1],[-2,3,5,-1,8],[-4,1,8,1,8],[1,-7,3,-10,-5],[-7,10,-6,-5,-5],[-7,8,2,2,7],[-3,7,7,-6,-10],[-1,-7,-9,5,-1],[9,-1,6,2,9]],[[1,10,-2,7,7],[8,-6,-9,7,1],[6,6,6,1,1],[1,-1,-9,1,2],[5,6,-2,-8,-8],[-7,-10,2,-6,-8],[-2,-10,-10,-8,6],[9,-8,5,-1,-1],[4,3,-2,4,7],[-6,10,4,4,1],[9,-3,6,-1,3],[-7,-1,-2,5,-4],[7,3,-7,-7,8]],[[2,9,-6,-5,3],[-10,-6,-1,5,-6],[10,10,-1,2,-7],[6,-8,7,2,-3],[-2,5,4,-10,-2],[10,10,-7,5,8],[10,3,1,-3,2],[7,-9,-3,8,1],[-2,4,-1,4,8],[1,-8,-5,-4,1],[6,-1,-2,-7,-10],[2,1,3,-7,-1],[-10,3,5,-6,-10]],[[-7,7,-3,-4,9],[1,5,9,8,-6],[-1,9,4,-5,3],[7,2,-7,1,7],[7,-3,-4,2,-8],[-8,5,-6,3,7],[-7,-7,-8,-5,-8],[-1,10,7,8,-5],[8,-9,3,1,-5],[4,-5,-10,-5,-2],[-7,10,-8,-3,-6],[7,4,-8,9,4],[8,-7,-1,3,-4]]], dtype = "uint16")#candidate|748|(13, 13, 5)|const|uint16
bop_749 = relay.right_shift(var_747.astype('uint16'), relay.reshape(const_748.astype('uint16'), relay.shape_of(var_747))) # shape=(13, 13, 5)
func_713_call = mod.get_global_var('func_713')
func_717_call = mutated_mod.get_global_var('func_717')
const_755 = relay.const([[7,-3],[-8,-7],[9,-4],[-7,4],[5,-5],[-7,-8],[-5,4],[6,-3],[8,9],[8,4],[6,-10],[5,10],[8,-4],[8,2],[3,-9],[6,4],[-9,9],[-7,-5],[-10,-5],[-9,-5],[-2,-1],[-1,8],[-1,-2],[8,-10],[-9,4],[-1,-10],[-2,-8],[-1,7],[1,6],[3,7],[10,2],[7,6],[-10,-3],[-7,-3],[-9,-1],[3,-4],[8,-6],[5,-6],[5,4],[9,-10],[-10,9],[6,-6],[3,5],[-7,-8],[-10,-5],[-2,-1],[-8,-10],[3,-5],[3,-10],[-8,-5],[-6,-4],[-9,8],[-1,-6],[4,9],[-10,-9],[9,8],[8,2],[-6,6],[5,-7],[-4,-6],[9,-9],[7,7],[7,4],[9,-7],[-2,2],[5,-4],[-8,5],[-7,9],[2,1],[8,-1],[-3,10],[-7,-9],[-7,8],[1,-2],[-2,-2],[-7,7],[1,-3],[5,3],[-6,-9],[1,3],[3,9],[3,2],[8,6],[-9,9],[10,-10],[-3,-2],[7,6],[-3,5],[2,9],[-7,3],[-9,3],[2,9],[-3,9],[-1,4],[4,5],[9,-5],[-7,-6],[-7,2],[-10,3]], dtype = "int64")#candidate|755|(99, 2)|const|int64
call_754 = relay.TupleGetItem(func_713_call(relay.reshape(const_755.astype('int64'), [3, 6, 11]), relay.reshape(const_755.astype('int64'), [3, 6, 11]), ), 1)
call_756 = relay.TupleGetItem(func_717_call(relay.reshape(const_755.astype('int64'), [3, 6, 11]), relay.reshape(const_755.astype('int64'), [3, 6, 11]), ), 1)
output = relay.Tuple([bop_749,call_754,const_755,])
output2 = relay.Tuple([bop_749,call_756,const_755,])
func_759 = relay.Function([var_747,], output)
mod['func_759'] = func_759
mod = relay.transform.InferType()(mod)
var_760 = relay.var("var_760", dtype = "uint16", shape = (13, 13, 5))#candidate|760|(13, 13, 5)|var|uint16
output = func_759(var_760)
func_761 = relay.Function([var_760], output)
mutated_mod['func_761'] = func_761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_863 = relay.var("var_863", dtype = "float32", shape = (13, 4, 9))#candidate|863|(13, 4, 9)|var|float32
uop_864 = relay.acos(var_863.astype('float32')) # shape=(13, 4, 9)
output = relay.Tuple([uop_864,])
output2 = relay.Tuple([uop_864,])
func_868 = relay.Function([var_863,], output)
mod['func_868'] = func_868
mod = relay.transform.InferType()(mod)
mutated_mod['func_868'] = func_868
mutated_mod = relay.transform.InferType()(mutated_mod)
var_869 = relay.var("var_869", dtype = "float32", shape = (13, 4, 9))#candidate|869|(13, 4, 9)|var|float32
func_868_call = mutated_mod.get_global_var('func_868')
call_870 = func_868_call(var_869)
output = call_870
func_871 = relay.Function([var_869], output)
mutated_mod['func_871'] = func_871
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1016 = relay.const([[[1,9,-2,-6,-1,8,8,-5,-1,-4,-1,-9,-6,3,4],[-5,5,-8,8,7,10,7,5,7,-2,1,5,-6,-7,-6],[8,-3,-5,1,4,5,3,-6,-8,4,-3,5,-7,8,9],[-4,-5,-1,9,-6,-2,-10,6,3,8,-4,-4,-8,10,-4],[10,-8,-8,-7,-5,-1,5,1,-7,5,-4,6,-8,9,-10],[6,5,-5,7,10,-7,6,-4,5,-1,-7,-9,-5,7,4],[-8,-7,6,-6,8,-2,8,-6,7,6,-2,-5,7,-10,3],[-2,-2,-6,5,-9,9,-7,-1,1,-6,8,-9,-1,-10,-1],[-2,-5,-5,5,2,-4,-7,-10,-4,8,10,-8,-8,5,1],[-2,10,9,8,-7,10,-3,-10,7,6,6,1,4,4,-7],[7,7,-7,-5,10,7,-1,7,5,-7,-9,-6,-6,10,-2],[-6,8,-6,-10,2,-3,10,-9,-9,-2,5,9,4,2,9],[2,-2,-9,-5,-9,8,6,-10,-8,-7,-5,-2,2,4,-9],[-7,-6,-1,-7,-3,3,-2,1,4,-9,10,1,-10,7,10]],[[-5,-8,6,-8,-8,-1,2,2,5,5,-4,2,6,-2,-4],[-10,9,-3,-7,-10,-2,6,6,9,3,-9,-6,4,-1,-4],[1,7,4,-7,-9,-8,9,6,3,9,7,2,-9,7,7],[8,-7,-7,2,-4,10,3,7,7,3,5,-5,5,-7,5],[-6,-9,-5,6,2,-10,3,6,-3,9,8,-7,-2,7,7],[-3,-3,5,-1,-7,10,-9,-9,4,-7,-9,8,-8,-8,-2],[-8,-7,-7,9,1,3,3,6,-7,5,3,9,-8,4,3],[-3,10,2,-10,5,8,7,-4,-3,-5,-4,-2,2,1,8],[-1,-7,-8,-8,3,-2,-5,-2,3,-9,6,7,-8,8,4],[-5,6,7,2,-4,3,6,6,7,5,-8,-9,7,-3,-7],[10,3,6,9,9,5,-1,10,-2,7,-4,6,-7,3,9],[-6,-3,-6,2,9,1,3,-8,7,1,7,8,-1,8,6],[3,10,-2,-5,4,-6,-1,-6,4,-8,9,2,-9,-4,-6],[-8,-2,-5,7,-9,-5,5,-5,-4,6,4,7,3,-1,-7]],[[-7,8,-3,4,-4,-10,-9,4,6,3,-9,-9,4,-4,-1],[6,6,-7,-8,9,-5,10,4,8,-9,3,-9,-6,-4,-2],[1,-3,1,-8,-9,10,5,-8,3,10,8,-1,8,3,-10],[-7,2,-10,7,3,-4,-2,4,-10,7,-10,5,-3,1,-5],[1,-9,-1,8,-6,4,4,1,-5,7,-2,8,-8,-10,-6],[-7,-8,-2,7,5,-10,3,6,-4,-4,-4,5,4,2,2],[3,-9,-8,-8,-10,8,5,-6,7,3,-8,-8,8,8,-9],[1,10,1,-10,10,-5,2,2,-10,-5,-10,7,-9,9,-6],[-8,10,-7,-3,-1,9,-3,-3,-8,-4,5,7,10,-8,3],[-9,3,8,-10,8,-8,-5,-9,-6,3,-9,3,-2,-2,-6],[-4,-8,4,-8,-9,-4,-5,-7,-1,-1,-4,5,-6,2,5],[7,-3,-8,-10,-9,-5,5,-4,-6,5,1,8,7,-1,4],[-7,7,5,-4,6,-4,-8,2,-1,-9,6,8,-4,-7,-1],[2,1,5,9,-1,-5,-5,-5,-5,7,-7,-1,-6,7,1]],[[4,8,-3,3,4,-6,-10,2,-9,-6,-10,-9,7,8,-9],[-3,-2,-10,6,8,7,9,-6,5,-7,-2,-5,7,-6,-5],[4,10,9,-1,-5,-4,-3,-4,-3,4,1,6,7,-5,8],[10,9,8,-3,-2,-9,5,-1,-3,-7,6,-5,1,8,6],[7,10,9,-4,8,-3,6,1,6,-2,10,-10,-2,8,-8],[-6,2,10,3,-6,-2,7,6,5,-1,4,7,-8,-6,1],[-1,-8,4,-6,2,7,10,3,-4,-9,-7,8,-8,7,3],[7,-4,8,-1,-4,-6,-8,-6,6,1,-3,-10,-4,-7,4],[8,3,6,-9,-6,1,-3,10,-2,-7,2,3,3,4,-10],[-2,-2,10,8,5,2,8,7,-3,4,3,-2,-2,6,6],[6,6,-5,-6,-6,9,-6,-3,6,-1,-8,10,1,-4,10],[2,-10,-4,7,-9,10,2,6,-9,1,-7,-2,-8,9,-9],[4,4,2,-10,-7,-3,-9,-5,8,1,1,8,-3,6,8],[2,9,-7,-4,-1,8,-2,-8,-3,-8,-6,10,-4,-2,-6]],[[8,-4,4,1,8,2,5,-2,10,9,-2,9,-3,-7,-5],[-5,3,-1,1,-6,5,7,-4,3,6,2,-9,10,-3,-6],[1,3,-1,2,8,2,-8,5,10,3,-2,-4,7,-2,2],[-1,9,9,-10,-3,9,-4,-6,6,-7,-2,8,-1,-1,-7],[2,7,6,3,-9,6,6,4,1,6,2,6,-3,7,9],[-6,-6,4,1,7,6,7,-5,3,-4,3,-6,-8,-7,2],[8,9,-1,5,-10,1,6,-7,-10,7,9,1,-1,4,-3],[6,-4,-7,-5,6,-5,-3,-6,1,1,1,-10,-7,1,-10],[10,8,-8,1,-7,1,6,2,6,-10,-3,-9,5,-7,7],[-3,-1,1,5,-5,8,4,-1,6,2,-6,-8,2,-1,2],[-4,5,7,9,9,-6,-1,3,-9,-1,6,7,-2,-9,-6],[1,7,9,3,8,1,2,-4,-8,-5,-3,-6,-9,9,-1],[1,7,7,4,4,-5,3,9,-10,2,5,8,-8,-2,-5],[4,-7,5,-6,8,-8,7,8,-1,-2,-6,10,10,1,5]],[[-7,3,9,-9,-5,-7,10,6,-9,-6,2,5,6,-10,-9],[4,-3,1,-4,-6,-9,-4,6,-7,-9,-3,-5,-4,6,-9],[-8,-3,1,-10,-6,8,1,4,-3,2,4,-6,-8,9,4],[-10,-2,-1,7,-1,-10,-8,-2,10,-5,-1,10,5,8,3],[-3,-4,6,-1,-7,-5,3,7,10,-3,10,4,-3,-9,5],[5,-4,7,2,-4,2,7,-5,-3,4,9,-1,-5,4,-7],[7,-8,-9,-3,-3,-2,-6,-2,-5,-7,-2,2,-9,-10,-4],[-1,9,2,-4,-10,1,4,1,8,3,-5,-2,-6,8,4],[-3,3,-6,-9,-9,1,-1,7,3,9,1,-8,-3,-5,-2],[-2,-6,8,-9,6,6,-10,-4,-8,-2,-2,-1,7,-9,-4],[3,-8,3,5,-3,-10,8,-5,-6,-9,1,5,-4,-5,-9],[3,-9,3,9,1,-8,-2,-2,-1,1,1,3,-4,-2,-9],[-10,-1,7,10,-1,-7,-4,5,7,8,-8,-2,7,-8,-6],[10,-1,-6,6,-4,7,-5,-2,10,-8,9,-9,5,-10,-7]],[[-1,-4,-7,-3,-8,-7,10,-9,4,-4,-8,-8,-6,3,7],[-4,-6,-1,1,-3,10,-6,-3,3,-4,2,9,-9,5,3],[-3,-8,-7,9,2,-9,-5,3,9,9,-2,-3,1,8,-5],[7,9,-4,-6,-4,-8,-1,9,-3,1,-2,-1,3,-9,9],[3,-10,9,9,-9,-4,-10,-10,-2,-7,-4,-3,2,-8,-7],[4,1,4,-10,-7,-10,7,-7,-6,1,1,10,10,-10,-4],[-5,8,-4,8,-5,-4,6,-4,-8,4,-4,7,-9,-10,5],[-5,-4,-8,3,-2,-1,-5,6,1,-8,7,10,-7,-9,7],[1,-6,-4,1,10,-8,-10,9,-10,1,-7,-1,-2,-7,5],[9,-3,1,1,5,-5,-2,5,2,2,-3,-4,6,-3,9],[5,4,-2,7,6,3,-6,8,-6,5,4,7,-4,-3,5],[5,-7,2,-3,-3,3,-2,-2,-10,-1,-8,-5,-4,-9,-8],[-1,8,1,9,9,4,-7,2,-7,10,9,4,5,5,-6],[-10,-5,7,8,-1,-6,-2,-3,2,7,9,-2,-10,-2,-10]],[[-5,7,1,-5,8,8,2,8,-4,-5,-4,5,-7,2,-9],[8,-3,3,7,-4,5,-8,2,10,8,-5,8,-8,-4,-4],[1,6,-5,9,-6,-8,5,-7,3,2,-3,-2,8,5,8],[-4,1,6,-10,9,-10,-8,4,3,-3,7,-4,8,-10,-4],[4,9,2,3,-4,10,1,10,-3,3,10,1,-10,3,-2],[8,9,-1,-7,-2,9,5,-8,-3,8,9,5,-9,9,-5],[-3,8,4,-2,6,-2,-4,2,3,-4,-3,-8,-5,5,1],[8,7,-7,-7,-4,10,7,4,-7,9,8,6,-2,3,6],[7,9,10,-5,-4,10,-4,8,-8,-4,8,-9,-8,-5,8],[6,-5,-9,2,2,4,9,-10,-7,2,5,5,-4,5,-3],[-3,10,3,-3,-5,10,8,7,-6,8,8,-10,9,6,-5],[9,-8,-8,-6,8,7,-1,7,2,-4,3,-4,-5,-9,7],[9,-4,2,-10,2,-2,-5,-3,-2,-8,-5,-8,-6,-4,-3],[-10,6,7,-7,-10,4,9,8,-4,9,7,-4,5,-10,-6]],[[-9,-3,-4,4,-9,2,8,-5,-5,7,10,10,-2,4,3],[5,8,-8,2,4,8,-7,9,-5,10,10,7,-5,-6,-1],[1,-2,3,9,-4,7,9,2,-5,-6,-6,-6,-8,-2,-2],[-3,6,-9,-5,-4,-1,5,-4,-2,2,5,-4,-3,-6,5],[7,-10,-3,-5,7,-1,10,-2,3,-7,-10,4,-7,-6,-3],[8,1,6,7,6,1,-6,-5,7,-10,2,-9,4,5,-7],[-3,2,-5,1,10,-7,5,1,-10,8,5,2,6,9,7],[2,3,7,-10,9,6,-10,9,-2,2,-1,-10,2,-8,-7],[-9,9,3,-9,4,5,-3,-10,-8,1,2,8,2,8,-5],[7,6,-5,1,1,1,3,1,-6,8,9,-9,4,1,3],[8,9,7,-2,9,2,-1,5,2,1,9,2,10,-9,-7],[-6,-2,9,-8,-6,6,8,6,-9,3,8,1,9,-3,2],[-9,-7,3,10,6,-10,-5,10,-10,-10,1,6,-8,-5,1],[3,8,-1,-5,-4,-5,5,-3,-3,-6,-5,-1,-8,3,-9]],[[3,-4,-3,3,4,-1,2,-2,1,-7,6,-3,-2,-5,-4],[-1,6,9,-10,7,10,4,-4,-8,-2,1,6,5,4,-6],[4,-9,-3,-2,-3,-9,-7,-6,1,-5,8,9,1,-3,-3],[5,-6,-10,3,4,-10,-8,7,-7,9,-1,9,10,-5,-5],[3,10,6,-10,1,-4,10,10,-7,8,-1,4,1,2,-8],[6,8,-3,-5,3,9,-9,-1,-8,7,6,-5,10,4,-3],[8,6,-5,-8,3,6,-9,3,-5,-8,-9,10,7,-1,9],[-5,-3,-1,-1,-1,-10,-8,-4,-9,-4,-9,5,8,-7,-3],[2,3,3,6,-5,-10,-3,-4,-1,-6,-3,-7,-2,8,-3],[8,-1,3,-7,7,5,6,6,-5,-6,4,-5,6,6,-9],[-7,6,-9,3,7,7,7,-10,-5,2,5,9,-6,9,10],[-5,-6,6,-2,-1,-9,3,-4,-1,-9,10,-10,5,-7,10],[-4,-4,-7,-6,-9,10,-7,-4,-7,10,9,-3,3,4,4],[-7,10,9,-4,-6,3,-9,-10,-1,-7,6,-5,4,9,-7]]], dtype = "uint8")#candidate|1016|(10, 14, 15)|const|uint8
var_1017 = relay.var("var_1017", dtype = "uint8", shape = (10, 14, 15))#candidate|1017|(10, 14, 15)|var|uint8
bop_1018 = relay.bitwise_or(const_1016.astype('uint8'), relay.reshape(var_1017.astype('uint8'), relay.shape_of(const_1016))) # shape=(10, 14, 15)
func_759_call = mod.get_global_var('func_759')
func_761_call = mutated_mod.get_global_var('func_761')
var_1028 = relay.var("var_1028", dtype = "uint16", shape = (845,))#candidate|1028|(845,)|var|uint16
call_1027 = relay.TupleGetItem(func_759_call(relay.reshape(var_1028.astype('uint16'), [13, 13, 5])), 0)
call_1029 = relay.TupleGetItem(func_761_call(relay.reshape(var_1028.astype('uint16'), [13, 13, 5])), 0)
uop_1030 = relay.exp(const_1016.astype('float64')) # shape=(10, 14, 15)
output = relay.Tuple([bop_1018,call_1027,var_1028,uop_1030,])
output2 = relay.Tuple([bop_1018,call_1029,var_1028,uop_1030,])
func_1038 = relay.Function([var_1017,var_1028,], output)
mod['func_1038'] = func_1038
mod = relay.transform.InferType()(mod)
mutated_mod['func_1038'] = func_1038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1038_call = mutated_mod.get_global_var('func_1038')
var_1040 = relay.var("var_1040", dtype = "uint8", shape = (10, 14, 15))#candidate|1040|(10, 14, 15)|var|uint8
var_1041 = relay.var("var_1041", dtype = "uint16", shape = (845,))#candidate|1041|(845,)|var|uint16
call_1039 = func_1038_call(var_1040,var_1041,)
output = call_1039
func_1042 = relay.Function([var_1040,var_1041,], output)
mutated_mod['func_1042'] = func_1042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1143 = relay.var("var_1143", dtype = "uint64", shape = (2, 9, 5))#candidate|1143|(2, 9, 5)|var|uint64
var_1144 = relay.var("var_1144", dtype = "uint64", shape = (2, 9, 5))#candidate|1144|(2, 9, 5)|var|uint64
bop_1145 = relay.greater_equal(var_1143.astype('bool'), relay.reshape(var_1144.astype('bool'), relay.shape_of(var_1143))) # shape=(2, 9, 5)
output = bop_1145
output2 = bop_1145
func_1150 = relay.Function([var_1143,var_1144,], output)
mod['func_1150'] = func_1150
mod = relay.transform.InferType()(mod)
mutated_mod['func_1150'] = func_1150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1150_call = mutated_mod.get_global_var('func_1150')
var_1152 = relay.var("var_1152", dtype = "uint64", shape = (2, 9, 5))#candidate|1152|(2, 9, 5)|var|uint64
var_1153 = relay.var("var_1153", dtype = "uint64", shape = (2, 9, 5))#candidate|1153|(2, 9, 5)|var|uint64
call_1151 = func_1150_call(var_1152,var_1153,)
output = call_1151
func_1154 = relay.Function([var_1152,var_1153,], output)
mutated_mod['func_1154'] = func_1154
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1268 = relay.const([[[-7.438986,9.683666,-5.583396,4.497505],[2.341798,5.836050,1.086670,9.862533],[1.758615,-4.972983,6.356145,-2.735063],[7.098768,3.651852,-4.186884,-7.857337],[8.135658,3.522405,-0.105539,7.027896],[6.916310,-6.782942,3.519358,-2.696475],[1.218030,-4.026553,6.672563,-4.047839],[-8.148547,-2.427399,-5.367937,-5.440909],[5.291965,9.023341,-8.044719,8.112228],[6.225748,4.110382,-2.492662,0.966804],[-8.727931,-3.125187,-1.571825,0.791016],[-6.863916,-5.490389,-1.303037,8.340737],[-1.089126,6.217079,5.723985,-6.744143],[-3.984323,3.929813,-3.656571,-4.552072],[-4.348872,-2.350234,4.490357,-1.477485]],[[-1.236968,-1.107021,2.585768,-7.512662],[6.515827,-5.384344,-6.692655,4.174246],[-9.597186,2.483305,-7.225488,-7.759301],[3.133862,8.253271,-1.614793,-2.022788],[-6.554238,2.838027,-2.420451,0.923719],[-2.970913,-0.752416,0.861543,8.840579],[-5.297031,-5.855633,0.274992,-9.044431],[5.130627,8.100726,5.434367,-4.846310],[7.578499,1.749694,1.622266,9.266810],[-5.941327,0.325316,5.785119,-8.358167],[6.430591,-6.759705,8.649492,4.666648],[5.106237,-7.450445,5.594024,-9.499951],[-5.390420,-6.962580,4.142302,0.247819],[-2.613778,5.092324,-8.663057,0.666309],[-3.894377,-0.889772,-7.661939,-1.160300]],[[-9.949829,-2.581262,-6.454191,-5.327184],[-3.807096,-0.344407,-3.512339,-2.288053],[-5.527217,8.337112,1.548079,7.136560],[-3.896322,3.256552,9.709650,-3.313137],[-8.151063,2.441925,-8.599431,5.927334],[2.063648,-3.065464,-4.868326,-2.027005],[-0.199349,1.064192,-8.352240,3.557934],[-7.113831,-0.853903,-4.265369,3.426078],[7.770231,8.838353,6.131493,8.997370],[4.565733,-3.700323,-8.599695,-9.607052],[-0.046472,-3.912264,-2.058403,-7.631652],[-3.115928,1.555749,4.229777,6.213444],[7.991396,-4.029478,6.893614,2.273388],[1.480160,-2.603094,-4.319000,-9.218028],[-5.952184,-1.319762,-0.719258,5.908912]],[[9.698145,-3.099982,-5.175602,3.717018],[-3.034125,-7.781073,0.307455,-9.465141],[2.983773,-0.217549,-0.153993,6.885316],[0.045375,8.018378,-6.179941,-5.899807],[7.226968,-1.723853,-0.067101,-5.475349],[-0.427659,7.685264,-2.475994,-8.219727],[-5.702909,-6.261594,-6.907164,-6.404341],[6.019473,9.375586,-7.037638,8.832685],[-2.976325,6.796576,8.073929,-1.258233],[-6.083878,-8.127893,8.234211,8.701595],[4.783004,-0.412534,2.254763,-2.461579],[1.460485,-5.131899,6.016729,9.259442],[5.010788,6.943790,-9.089486,-5.506864],[0.879978,-6.517101,-2.992312,-1.701462],[4.576690,3.488412,1.607798,5.513207]],[[3.876630,5.487883,4.260117,6.581253],[9.577801,5.391760,-0.270083,4.200955],[-3.422920,-3.650480,6.164076,3.871653],[-1.574106,0.810490,-1.290221,-9.967457],[-8.633290,-3.200123,-6.920047,-4.606499],[-4.831386,-6.742866,-8.479124,-4.456572],[7.425627,9.500558,-5.192447,0.561987],[3.372259,-0.957280,1.864740,2.842094],[-6.988637,5.906408,4.464555,3.832357],[4.560531,-4.029807,3.588189,6.231876],[-4.307637,4.846916,5.403464,2.293384],[2.300584,-6.466182,-1.770535,-7.052574],[0.312957,1.005370,4.833242,1.978438],[-1.992475,-5.616266,-8.484657,-0.566765],[-6.450406,6.561257,-4.485949,-3.226611]],[[9.247725,-9.620247,2.959890,-1.064910],[-7.394404,2.406995,-1.458460,1.822057],[9.866914,-6.314724,0.338969,-9.463583],[-3.556108,8.658443,-2.646586,-6.888875],[-8.716821,7.528380,3.955675,-0.639026],[9.029350,-1.277131,-0.745929,6.844207],[8.827711,-0.024830,-2.442962,3.880666],[-5.330139,-7.622731,-3.557781,-4.316582],[2.836374,-0.073406,-1.237243,7.758892],[2.458138,2.586428,7.132792,6.448120],[6.787083,8.125326,-2.620059,-6.446946],[5.292903,5.749942,-5.952664,-6.855403],[7.756049,-2.314317,9.766320,9.584758],[3.195863,7.652151,7.638540,-4.376013],[-0.243603,9.357690,-2.983515,9.428803]],[[-2.903417,9.960960,5.289106,-7.305205],[0.922512,-7.026978,-7.264352,9.792917],[-6.750301,-7.906832,3.472703,-2.688100],[-4.673381,-7.812911,-1.131295,-8.289860],[-4.072368,2.276386,4.567407,-0.713389],[-3.225842,-6.361538,-8.755988,0.626259],[-2.075964,3.671986,-6.842005,9.930818],[4.833918,7.773945,2.414556,-0.372787],[1.640867,0.732696,6.807882,6.961393],[-4.521003,8.432252,7.999991,-4.111860],[-2.182210,8.223499,9.261308,-3.389324],[-4.848507,-6.971757,1.634219,6.388053],[-7.156571,-5.324215,-0.048936,-6.566839],[5.789007,-0.350956,-6.838315,-6.088095],[-7.996014,7.657696,-8.004820,-4.853363]],[[0.254651,-5.696464,7.368599,0.169834],[6.973762,3.285744,-5.898321,-1.444612],[9.571698,-2.612303,5.101965,0.307577],[6.645326,-3.209421,-7.805088,-8.644227],[0.333691,-0.448641,5.779785,8.082544],[6.780352,-7.513202,-4.425861,6.704003],[8.501140,7.181548,-0.849671,-3.643690],[2.111444,3.022703,8.017166,5.738272],[2.538601,6.345400,0.172934,4.110656],[-9.608353,-4.801234,-0.369084,-7.002384],[-2.056993,0.982741,-1.072941,-3.801419],[-6.687118,5.589221,0.708916,-9.627590],[1.591284,4.975116,-8.520213,0.313103],[2.100890,8.338001,-7.355128,5.077517],[2.106168,4.686805,8.524517,8.985137]],[[-3.002843,8.485882,7.315706,-0.837882],[-8.644996,-5.887479,-3.271671,5.574419],[7.272969,9.412771,-1.960205,-7.281695],[8.797851,-3.676633,2.914417,-3.992543],[-0.511547,-7.475650,-8.182393,-3.231866],[-0.477088,5.799191,6.468656,-8.235580],[-6.122108,-4.021696,5.827292,-3.436685],[-5.775626,5.646060,1.410892,6.692157],[5.503216,3.254546,-8.723843,-6.581379],[-7.331316,2.101217,-0.266001,0.199693],[-6.184716,-8.168885,-9.998608,-9.361188],[3.921975,6.605709,-7.630631,-6.550283],[-1.018476,7.754755,-3.872857,9.761487],[3.236883,-4.276896,3.322246,-3.668860],[4.613524,1.569253,-0.965660,-2.023408]],[[4.681207,-0.256051,2.501718,1.619872],[-2.223535,-0.788627,3.454487,-7.161159],[7.020022,-4.848714,-1.123374,-7.175523],[1.223638,4.259113,3.521678,8.876580],[6.675482,-2.873782,1.643842,-4.383245],[-4.926739,-4.349954,8.368580,3.638846],[7.910596,1.969496,-5.432465,0.379158],[7.252209,8.079974,-3.878058,7.487688],[-1.185591,-2.362370,1.240467,-4.676575],[-9.515804,5.324654,2.465504,-2.722098],[4.655701,-3.155673,8.102545,0.218291],[-2.485289,2.840352,-6.357312,0.851470],[7.851406,-1.422563,-7.647188,-9.369356],[0.015521,-3.970586,-0.275587,5.777550],[-2.521839,-7.900087,3.241100,-3.231381]],[[-8.968762,-5.482220,-5.646399,-0.796445],[-6.345311,2.068977,7.996084,3.971090],[6.399928,1.772597,-3.934230,2.132116],[-2.363227,-3.338108,-6.854871,0.823557],[-6.183125,4.931938,1.198773,-7.692969],[-2.799316,3.189128,-5.286025,-6.598986],[-8.359194,4.670315,-1.990723,-4.989137],[-4.263733,-5.852564,4.021720,-0.066577],[5.041611,1.693541,6.069012,-1.146133],[1.345970,5.522942,-7.528695,1.985699],[3.598679,4.437821,-0.533682,-0.015594],[-2.947608,8.942353,-3.781851,-4.670867],[9.380056,3.521918,5.990397,-0.359921],[7.397908,-0.001556,8.119500,-8.266059],[6.191045,-2.309204,4.435963,-9.657184]],[[0.515866,-4.535149,4.349255,5.768836],[-7.219553,4.709534,6.263925,-5.788364],[0.942982,-1.389426,-2.837531,5.828421],[3.074528,7.293212,-1.947423,-4.079519],[5.615263,-8.390226,2.956269,7.682923],[-6.402693,-1.429950,-7.368114,-8.753035],[7.951460,-5.588693,5.198347,0.474077],[0.820952,-6.949231,9.562451,7.881221],[3.236355,4.555638,-5.349417,-4.394564],[-1.322000,-7.033808,5.818362,-0.428209],[3.358804,-7.291679,6.625107,9.277524],[2.518037,-5.379641,6.384664,7.628915],[4.234203,1.671376,-3.914502,-0.433122],[-2.709316,7.401601,4.271656,7.804404],[7.495997,-1.139299,2.809858,3.430268]]], dtype = "float32")#candidate|1268|(12, 15, 4)|const|float32
const_1269 = relay.const([[[9.940522,-3.630792,3.716533,-2.578804],[9.603583,-5.896548,7.814698,-5.999912],[-8.277523,-9.907949,-7.114750,3.089268],[-8.069280,7.026952,4.364003,-4.346735],[7.875037,-5.418616,-0.086005,9.086573],[9.308259,-1.706010,0.535253,4.969160],[-9.096804,3.761573,1.919042,0.327009],[3.324237,-0.689123,0.061297,-5.225125],[0.852021,2.085577,4.079316,1.280832],[-4.867559,6.093085,-6.714385,7.422919],[-4.277006,8.273408,-9.688868,-4.732951],[8.667906,-3.342587,6.711447,7.788910],[1.534774,-3.574263,-8.910272,8.080697],[9.508600,-7.843080,-3.123699,5.717831],[-9.672712,-5.588964,2.125132,-3.884716]],[[5.089337,-2.684307,3.993903,3.692618],[-9.368530,8.580390,3.567377,-7.293460],[9.013547,-5.050205,-0.549738,7.401344],[1.993758,9.101882,-9.733183,4.028310],[0.397907,-7.297546,-2.496640,3.088537],[1.964116,0.204406,-3.760275,-2.697167],[-7.038041,9.841789,-2.197260,8.721347],[-9.248891,-0.468504,-4.192159,9.482872],[8.502767,1.652531,3.440713,7.445531],[2.052817,-4.808932,-8.474451,-7.647720],[4.880669,4.618544,-8.886526,7.982975],[-1.337923,5.831591,-1.883292,-0.542886],[-5.070508,3.726340,-8.324668,-8.190897],[7.478106,2.939313,6.267377,-7.247363],[9.961477,-1.746760,-1.479212,2.040881]],[[-0.756806,8.129003,9.488249,-5.881035],[5.533743,6.154601,-7.947181,-9.740361],[-3.004925,7.216625,9.778634,9.921305],[-6.904092,-4.203269,4.883864,8.641154],[-2.098047,-9.066898,-6.424894,8.117533],[-7.128737,1.532944,-9.064494,-9.337970],[-1.484412,1.773408,0.929720,-8.993777],[-2.582248,-0.323124,-5.115893,9.207073],[6.588588,-6.187060,0.041617,0.321819],[1.614088,-6.672623,-3.396834,-4.593480],[7.605652,-0.766009,-2.658129,-1.557476],[5.314082,1.338212,-0.965073,-4.420576],[-9.844262,0.275510,-2.233520,-1.325243],[0.462845,-3.967857,4.937810,-4.643142],[-7.617711,-7.422552,-0.232095,0.892875]],[[4.657677,3.659781,-9.365787,5.914011],[0.256302,-9.522858,-0.411766,1.618721],[0.896779,0.689526,-8.468458,0.843114],[1.701966,-7.162739,-7.542946,6.646987],[-3.591028,9.694018,9.661560,1.419390],[0.815905,-9.558118,-7.981890,-9.829094],[6.691129,1.046436,6.291116,-5.370272],[-9.025322,-3.670904,3.360733,-5.503712],[5.670831,-9.451822,5.613192,7.113522],[9.863862,-0.411676,7.503351,9.637310],[-6.351022,-9.205577,-1.859840,-2.830082],[8.646008,9.843025,4.861612,-4.204726],[-3.817545,4.263913,9.878182,-6.955650],[-5.329454,-9.012287,4.903091,8.272828],[-6.652035,-1.177208,-1.966437,3.935197]],[[7.287163,-7.082518,5.370724,4.592122],[2.431162,6.695384,3.385303,2.299952],[-4.157569,9.228836,-3.864122,9.017847],[2.176246,4.715439,1.712707,8.679269],[5.128695,1.169353,6.713158,-9.559073],[1.426954,8.206815,-2.661953,-8.127474],[-1.611730,-3.600090,-3.971106,-6.396367],[7.480353,-3.312527,-1.037896,-0.330806],[2.500282,-9.979115,-2.282815,-1.863285],[-5.706914,7.471000,-2.380875,1.425838],[1.122059,0.301510,-0.376086,0.231556],[6.146129,-6.950255,-9.482366,-6.630470],[-2.560810,-8.508751,0.875600,-1.734008],[-4.798345,-8.466740,3.105250,9.591509],[-6.656714,9.767627,-6.912346,-8.054104]],[[-2.542520,-4.242156,8.694119,-8.408443],[0.349951,1.140180,8.670719,2.705241],[3.647647,5.028991,6.743252,5.524391],[7.207370,-4.952762,-2.022856,-8.254210],[7.474979,0.208101,0.163441,-7.375214],[-7.854621,9.776624,3.565087,5.418291],[8.099003,-3.360793,9.881535,-6.678515],[-6.494427,3.543365,1.832227,1.296336],[-6.904796,-3.853676,-5.123417,-9.048093],[-5.587372,8.512967,-3.457611,-9.891532],[1.797573,7.509902,-2.755458,1.871623],[-9.474276,5.581458,-9.407351,2.563193],[0.010936,-1.281393,-8.173772,-7.622705],[6.673681,7.445652,-6.708483,1.175649],[-8.260691,6.073395,-8.345781,3.596792]],[[8.605987,-1.498596,6.211111,-5.394288],[1.430401,-9.171305,7.335522,-1.590194],[-0.879639,2.266782,4.114627,-5.890370],[3.677131,5.438667,8.012835,-7.932286],[9.185684,-0.840418,-4.453936,-9.357442],[-0.378705,-0.375920,7.740574,-6.222810],[-0.337625,5.329273,-0.987819,7.460893],[9.914318,1.935600,9.544495,3.405257],[-3.684905,1.480641,-6.977418,7.817801],[-2.306199,-1.883029,-0.730967,-2.514476],[-6.723391,8.538224,0.684693,-6.432868],[9.122746,6.980802,-8.385579,4.002270],[4.588049,8.923463,-2.308254,-2.407607],[-1.785430,9.113308,2.998284,7.792468],[2.599392,-0.792878,3.186218,3.437457]],[[-9.019204,1.347099,1.234562,1.003147],[6.506958,-8.919159,2.631473,3.766617],[4.847324,8.933601,-1.132572,3.634255],[6.674255,-0.349101,-3.656194,3.163421],[7.625246,3.228448,3.718764,0.399972],[-8.686591,0.404232,-6.136448,2.997544],[3.555652,-9.916975,-2.402380,5.173399],[3.663252,-7.267520,8.214465,-8.290738],[2.957646,2.322158,-2.000791,4.527568],[-7.529560,0.680276,3.138721,-6.650746],[1.771356,-0.158771,-7.991733,9.802456],[-3.114823,-7.646452,6.086267,-7.256380],[-7.655488,4.294082,-9.260776,5.319413],[8.738148,4.085293,-1.726355,6.313320],[-5.977890,5.991833,6.677651,-0.560411]],[[-1.908413,9.751825,5.515679,-7.790845],[9.708477,-2.305505,8.540207,-6.329519],[-6.783313,9.321825,-4.708756,-2.171388],[2.894320,5.026688,-0.292365,-5.194912],[-9.819161,-4.984193,4.761992,-4.622042],[6.045303,-7.962713,-1.390948,9.552925],[-2.588256,5.714105,-3.767561,7.122843],[5.705610,-0.668069,-7.061968,6.295705],[3.216812,-3.955896,-2.832760,1.960581],[4.967760,-6.910244,1.456475,2.798584],[9.680707,-5.694519,-9.915486,2.990946],[-8.953208,-0.315853,-6.351827,-4.898937],[2.827587,-5.006672,0.463892,2.861935],[0.582837,-2.098557,-5.630828,-3.241162],[6.282466,8.208860,-1.135514,0.166365]],[[-4.492160,0.922585,6.640048,-6.550809],[-9.593784,4.894259,7.495327,-8.824281],[-5.248800,1.602668,-6.453754,-3.752072],[-4.962089,-8.087504,-7.494404,8.537463],[8.272915,0.782926,-3.291572,9.546989],[-8.182549,-4.084757,-5.300113,-3.325527],[-4.177773,9.978001,3.558001,-4.946317],[8.235251,-4.909143,-4.274994,-0.176090],[-9.016793,9.439027,-0.229940,7.452809],[8.251498,-0.244056,1.103740,-4.598488],[-3.061413,-0.532944,-8.043374,8.525440],[8.918714,9.922476,1.786187,1.443090],[-4.133583,7.935127,-5.671814,8.723060],[-7.258410,3.380175,7.617471,3.477901],[4.332504,0.722950,-6.951521,7.837602]],[[4.452450,-2.625277,-8.454776,-8.490007],[-8.637793,8.563053,0.827709,-5.841504],[-8.459879,0.998384,5.419274,8.290906],[-0.319792,-5.779049,1.938409,0.047484],[4.965949,-2.949138,6.176909,-5.648373],[-4.097433,-0.701642,-1.437135,7.590614],[-2.732345,-9.351819,-9.899198,-8.717702],[8.373384,5.375810,-2.058164,0.957375],[-9.312614,-0.886449,-6.618103,0.334034],[-0.683916,-3.421452,-3.751947,-9.381207],[-4.576608,6.156957,-5.497650,-6.407814],[-7.987822,6.997163,-3.227222,-8.508966],[-0.745027,-8.714783,9.296036,4.307087],[-6.108624,8.498678,3.122388,0.463525],[-5.689480,-5.876559,9.859453,-3.546534]],[[2.670312,-5.647028,-9.707477,-6.376276],[8.822186,-2.563310,1.352469,1.493953],[7.085543,-7.646492,-1.469303,3.094910],[-0.694639,3.770056,-9.112449,-9.079038],[8.473076,7.778088,1.318997,-9.394485],[-5.714024,-9.869304,-7.350015,0.618698],[-5.857477,0.226911,-0.511294,7.173746],[-4.033216,-3.950683,0.338614,-1.362496],[7.148209,-9.355037,-2.762349,-3.396195],[7.276093,-9.243176,-3.884979,-6.830108],[3.228570,7.362690,-5.702337,6.861445],[8.345475,5.334182,-1.740013,-6.493483],[5.544064,-5.044375,8.038174,-2.922348],[4.136459,9.372689,1.527959,-3.452206],[2.233628,-1.608171,8.507519,-6.873784]]], dtype = "float32")#candidate|1269|(12, 15, 4)|const|float32
bop_1270 = relay.minimum(const_1268.astype('float32'), relay.reshape(const_1269.astype('float32'), relay.shape_of(const_1268))) # shape=(12, 15, 4)
uop_1273 = relay.cosh(const_1269.astype('float32')) # shape=(12, 15, 4)
func_428_call = mod.get_global_var('func_428')
func_430_call = mutated_mod.get_global_var('func_430')
const_1276 = relay.const([[9.849314],[2.253367],[-0.633621],[-5.107223],[0.424299],[0.989580],[4.056905],[2.919818],[3.211510],[9.720761],[-6.878065],[0.049428],[8.529799],[-3.031303],[0.775270],[8.094954],[2.580211],[2.659577],[8.460457],[9.545845],[9.897609],[-8.558578],[-3.449886],[-3.376719],[-3.323781],[6.254502],[-2.804609],[0.467298],[-1.174509],[5.149844]], dtype = "float64")#candidate|1276|(30, 1)|const|float64
call_1275 = relay.TupleGetItem(func_428_call(relay.reshape(const_1276.astype('float64'), [1, 6, 5])), 0)
call_1277 = relay.TupleGetItem(func_430_call(relay.reshape(const_1276.astype('float64'), [1, 6, 5])), 0)
output = relay.Tuple([bop_1270,uop_1273,call_1275,const_1276,])
output2 = relay.Tuple([bop_1270,uop_1273,call_1277,const_1276,])
func_1282 = relay.Function([], output)
mod['func_1282'] = func_1282
mod = relay.transform.InferType()(mod)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1283 = func_1282_call()
output = call_1283
func_1284 = relay.Function([], output)
mutated_mod['func_1284'] = func_1284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1290 = relay.TupleGetItem(func_1282_call(), 1)
call_1291 = relay.TupleGetItem(func_1284_call(), 1)
func_1038_call = mod.get_global_var('func_1038')
func_1042_call = mutated_mod.get_global_var('func_1042')
const_1316 = relay.const([1,-6,6,-9,1,-6,3,-7,-7,4,-5,-5,9,5,5,9,-5,-6,8,-10,7,8,-9,-6,3,2,-9,2,-3,3,2,6,4,8,7,3,-5,-4,5,-1,-2,-4,-9,2,3,2,5,3,-9,-1,9,10,6,8,-6,8,1,-10,10,4,5,-9,5,-10,-2,-3,-7,-7,-9,-4,6,-4,8,7,5,-9,1,-3,-1,3,5,6,-10,-7,-8,3,-7,-10,10,2,3,6,-1,-10,-3,6,8,-2,-7,-5,-3,10,7,4,-9,1,-6,-6,9,9,-7,-1,-9,3,-3,-2,9,6,-1,-1,5,-4,2,-9,-6,-2,5,9,-8,9,-1,8,4,5,-4,-10,10,-1,-4,3,1,4,-1,-8,-3,10,2,3,-4,1,-7,-9,5,-1,-2,-10,2,-7,-4,1,5,-1,-1,-1,7,3,5,2,1,10,8,6,-1,-4,-7,-4,6,9,4,-2,-6,-4,6,2,9,-3,-1,8,10,-8,-7,-1,-10,10,-2,2,7,10,1,-3,1,7,2,5,9,3,6,1,-6,-7,-3,-8,-4,-4,-10,5,-2,5,-2,-8,-2,9,8,-1,10,5,-8,4,3,8,4,7,8,9,-10,2,-9,1,2,-2,-1,-6,1,-10,-7,-10,-2,4,-6,-1,-2,-2,6,10,5,-8,10,5,5,8,4,2,4,7,1,-10,-10,3,4,-4,5,7,-8,-9,-10,5,-6,1,5,3,5,-6,-4,3,-4,8,8,9,10,1,6,3,2,-3,1,2,9,-2,-9,-10,-9,6,-6,5,4,5,9,3,3,10,-2,-1,-10,-4,10,-6,4,6,9,-3,7,-3,7,2,2,5,4,-6,1,-7,-6,9,7,8,-9,10,-9,4,1,-6,-6,8,7,6,6,8,-8,-9,-4,-2,-10,-9,-7,6,9,-10,3,6,-4,1,-8,1,7,1,-7,-6,-9,-5,-10,-6,-3,1,-6,9,1,-1,8,-3,2,-8,-10,7,9,-8,4,-5,2,-4,-5,10,2,3,3,-7,-3,-7,7,-4,5,5,-6,6,-8,-6,-7,9,10,-1,1,2,-3,8,-1,8,4,5,4,10,6,-7,6,2,9,1,-1,3,-1,4,1,8,-5,-7,-8,3,5,-9,-7,7,4,5,10,-9,-6,3,-5,5,5,9,1,9,3,8,-9,-5,4,10,5,-7,6,-10,-10,-1,9,2,3,9,-9,5,4,3,-9,4,-6,-8,-10,3,3,8,-3,1,2,-1,7,-1,7,2,10,-3,8,9,8,-1,4,-1,10,3,2,-4,-2,-3,-2,-7,1,-9,9,-7,7,-8,-7,-10,-2,10,-8,4,-1,1,2,-4,-7,-1,8,-5,-6,-8,3,2,2,1,6,4,-4,9,-4,-8,7,-9,-9,-1,-9,-10,8,8,-3,10,6,-5,8,8,-10,-2,6,-1,8,-2,1,-9,-3,7,-8,5,2,6,-5,-3,-1,-9,8,3,-2,-1,6,-1,7,-7,6,10,-2,-1,9,2,-1,-8,-1,-7,8,5,9,5,4,10,-1,-2,-7,10,9,7,-2,-10,-7,-7,4,1,8,9,5,5,-2,-9,-2,-4,-10,10,7,7,9,-1,6,8,5,7,9,-7,9,-9,-6,9,-5,10,-2,-7,8,6,7,7,1,3,-6,-10,-8,-3,5,10,4,3,-6,-7,-8,10,6,9,-1,-7,5,-1,8,7,7,-3,-7,7,7,-8,6,2,5,-9,-6,-5,-4,5,-2,7,-10,-10,-9,10,2,2,-8,-2,-6,1,-7,-4,-5,-5,3,-6,-2,-10,3,6,-2,5,-1,-2,8,-10,10,-6,-4,1,2,-10,4,-5,4,4,8,-5,-6,7,-10,9,-2,6,7,-3,5,-3,-7,-5,8,6,-9,-4,-8,9,7,-10,2,-4,5,5,-5,8,7,-1,-5,10,8,8,-4,-5,-4,7,-3,2,10,-10,8,-7,3,1,-4,1,4,1,-8,-6,-1,6,-5,4,10,2,-3,-4,-6,-4,5,-6,7,-4,2,-7,6,-1,-6,8,-10,-5,-1,9,5,10,3,6,3,-6,1,-2,-9,-9,7,-2,-10,-1,-5,8,6,-9,-6,-8,6,-6,7,3,8,-2,9,-3,10,-2,6,6,-10,10,9,-4,2,-1,5,-9,-6,-9,7,-6,8,4,7,-4,5,2,-4,9,6,8,-4,6,8,-6,9,-3,-7,-9,-5,1,8,5,10,7,4,7,2,7,-9,6,5,3,6,-6,6,2,9,-6,-1,-4,10,-10,-5,4,-2,-1,10,6,-7,-7,-10,-7,-6,9,-7,2,-4,-10,1,-2,4,7,9,-2,-8,9,9,8,-10,3,-9,5,-7,-2,-8,-1,-8,-10,4,1,-10,9,-8,-5,3,6,-4,5,7,-2,-10,9,1,-2,1,6,-8,1,1,4,7,-6,-2,-2,6,6,-7,5,6,5,-3,-9,6,-6,-9,1,-2,-6,-5,5,-2,-1,-10,9,4,-3,6,9,-5,9,5,9,6,-4,-2,4,2,7,10,7,-1,-2,-6,9,3,-5,-7,-8,10,3,10,7,5,-3,-1,10,5,-9,2,-4,5,5,-4,4,-2,-7,6,-4,8,-7,-10,-1,8,5,7,5,1,-3,-1,-10,-3,7,8,10,1,-7,4,-5,9,2,-1,7,7,6,8,-4,10,-10,-3,8,-10,4,-4,-8,-10,8,-7,3,6,5,5,7,-1,8,9,-7,-1,-3,-9,-8,1,-2,1,-6,5,3,3,9,-8,7,5,6,-6,-10,2,-3,4,-5,1,3,5,9,-7,1,7,3,-3,-7,10,3,5,-6,1,5,-5,9,-6,5,9,9,3,8,-10,4,-2,3,10,8,3,7,-4,5,7,3,7,3,-3,5,-6,5,-3,-7,10,-8,1,-8,-4,-4,4,-8,-1,-10,-10,8,-3,3,-3,-2,-8,-3,-6,5,-5,-10,6,1,-8,2,7,3,-4,9,9,-8,2,7,4,7,-10,-10,6,4,4,10,-7,-5,-1,8,-6,6,-10,5,4,-5,10,1,-9,-9,-10,-6,4,-7,6,5,-4,9,6,9,-9,-2,-10,-4,-7,-3,2,3,-1,-10,-8,10,-8,7,4,-3,10,1,-10,10,9,-6,3,6,-2,2,3,-1,2,4,3,10,-3,-5,9,10,-9,9,-6,7,-5,-7,4,9,7,3,-9,3,-7,6,-4,-3,3,-6,-1,6,-3,-4,2,-2,-7,8,9,9,-2,3,1,10,10,-2,8,-8,-4,5,-6,-4,-1,10,-8,7,3,-7,-7,-10,-4,9,4,-10,-2,2,-3,2,3,-5,2,-10,-3,1,5,-9,6,10,7,-6,-6,-6,7,4,-9,-10,10,-6,-8,-4,-8,3,-1,4,4,5,-8,-10,9,6,10,1,-5,-4,3,5,1,7,-2,7,9,-5,-5,6,8,3,6,-9,-10,4,-3,5,9,-3,3,7,4,-2,7,-2,-8,3,9,-6,7,2,-3,1,1,4,-5,-7,-3,5,-7,-4,-4,-10,9,1,8,-5,2,-4,1,8,-7,5,4,-1,-9,-5,-2,-5,2,8,-1,2,8,-8,-2,-4,-1,-10,-9,7,5,-10,-8,-9,-2,2,-7,-9,-8,5,3,-10,8,-9,-2,4,10,-4,8,-1,-10,4,-7,4,9,-7,1,-7,1,6,2,-1,-6,3,10,-4,6,8,2,9,3,4,-5,-3,-6,-10,-10,3,7,10,9,-8,4,8,-1,-7,-3,8,-1,4,3,10,-6,9,-8,-3,-5,-3,8,-4,8,-3,2,1,-6,5,-3,-1,7,-4,-1,3,7,-4,7,6,-7,6,-2,-7,6,-6,-4,-7,10,-5,6,6,3,-2,8,-6,9,-8,-1,-9,-6,5,5,2,-1,8,-6,3,-6,10,3,1,-9,2,4,6,-10,2,3,1,-3,-1,5,8,1,5,5,-5,-5,-4,-10,-10,3,6,-6,-10,-7,-9,7,4,-7,-1,5,7,-2,-8,3,-1,-10,2,5,6,-3,4,2,7,7,2,-3,-1,-1,-7,8,9,-6,-7,-3,3,-10,7,5,1,-3,3,5,-2,6,9,7,6,-10,-4,-8,8,-4,-9,-10,-2,-5,-8,-10,7,10,-3,-5,-10,-2,8,1,-7,3,-3,-6,6,1,-2,-4,8,4,-1,-2,5,-5,-5,1,3,-6,8,3,-3,-10,5,5,-10,-7,-9,-3,-3,7,7,8,5,8,5,-9,-4,-5,-7,-2,-9,-1,8,-3,4,-6,10,-3,-9,-10,2,5,2,-5,-2,7,6,10,-4,4,4,1,6,-9,-4,-1,10,-2,-8,3,-4,1,-10,5,-5,2,-10,3,6,1,3,-8,-8,7,-7,-5,-1,-4,-9,-3,-9,2,-7,-5,7,6,-8,4,7,3,10,-7,-6,1,2,-8,8,-10,6,-1,1,-2,-2,-4,-6,4,-7,-6,-4,10,1,-8,-9,8,-2,-8,-6,2,7,-8,-5,10,5,-8,-4,-6,-6,6,3,-1,-2,-9,-1,8,-7,10,9,7,-7,5,-1,6,5,5,3,4,8,4,4,-5,8,-4,-7,-3,6,-6,10,8,-4,-5,10,-2,3,-8,-8,10,10,5,5,-4,7,-1,1,-4,2,-2,9,3,-2,10,3,9,4,-5,-5,3,8,-9,-1,6,4,-8,-5,-6,-1,8,8,1,3,-4,-4,10,-9,5,-4,5,-10,-1,-5,2,5,4,-9,-7,1,-1,-8,-9,2,9,6,3,9,8,1,2,2,-3,-8,-3,2,6,-7,-7,10,4,-9,1,-1,4,1,-9,-9,-3,-3,-10,4,-4,-2,7,-6,9,8,-7,-8,-10,-6,-3,-1,4,5,-8,-1,-10,-5,6,-10,9,4,4,7,-3,4,8,2,-1,7,6,4,-10,4,10,-2,9,-5,7,10,-4,4,10,-3,3,-10,7,-6,3,-4,2,-2,-3,-8,8,10,10,4,-2,-1,-7,5,-7,5,-10,2,7,7,-10,10,-10,-2,6,2,-2,-4,-8,-5,1,4,10,-5,2,7,-4,-2,7,9,-9,-1,6,10,-6,10,6,9,9,-3,6,5,-6,6,-2,-7,8,1,-5,9,-9,-9,2,-1,1,-4,-5,-9,-7,-4,-2,7,9,3,1,5,2,3,3,-6,1,3,10,-6,-7,-3,1,8,-8,-6,-4,6,-7,9,-6,-4,7,-4,-9,2,-3,4,7,-6,4,3,-4,-3,10,3,-9,5,-4,2,9,9,3,6,7,2,-5,-9,-5,-2,-6,-3,1,2,-6,9,2,-5,-3,-2,4,-10,-2,10,3,2,-8,-6,-2,-4,-7,-4,-3,6,2,4,4,5,-5,3,8,7,2,-4,-4,-5,-3,1,-7,-4,5,-5,4,-6,6,4,7,-9,-5,-5,1,-1,8,2,9,4,-2,4,10,4,1,9,9,9,9,4,-6,4,-7,1,10,1,-6,-9,-6,10,1,7,5,4,4,4,3,5,-2,-7,2,6,2,4], dtype = "uint8")#candidate|1316|(2100,)|const|uint8
var_1317 = relay.var("var_1317", dtype = "uint16", shape = (1, 845))#candidate|1317|(1, 845)|var|uint16
call_1315 = relay.TupleGetItem(func_1038_call(relay.reshape(const_1316.astype('uint8'), [10, 14, 15]), relay.reshape(var_1317.astype('uint16'), [845,]), ), 2)
call_1318 = relay.TupleGetItem(func_1042_call(relay.reshape(const_1316.astype('uint8'), [10, 14, 15]), relay.reshape(var_1317.astype('uint16'), [845,]), ), 2)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1319 = relay.TupleGetItem(func_1282_call(), 3)
call_1320 = relay.TupleGetItem(func_1284_call(), 3)
func_428_call = mod.get_global_var('func_428')
func_430_call = mutated_mod.get_global_var('func_430')
call_1321 = relay.TupleGetItem(func_428_call(relay.reshape(call_1319.astype('float64'), [1, 6, 5])), 0)
call_1322 = relay.TupleGetItem(func_430_call(relay.reshape(call_1319.astype('float64'), [1, 6, 5])), 0)
func_1150_call = mod.get_global_var('func_1150')
func_1154_call = mutated_mod.get_global_var('func_1154')
var_1336 = relay.var("var_1336", dtype = "uint64", shape = (3, 30))#candidate|1336|(3, 30)|var|uint64
call_1335 = func_1150_call(relay.reshape(var_1336.astype('uint64'), [2, 9, 5]), relay.reshape(var_1336.astype('uint64'), [2, 9, 5]), )
call_1337 = func_1150_call(relay.reshape(var_1336.astype('uint64'), [2, 9, 5]), relay.reshape(var_1336.astype('uint64'), [2, 9, 5]), )
uop_1342 = relay.asinh(var_1336.astype('float32')) # shape=(3, 30)
func_1150_call = mod.get_global_var('func_1150')
func_1154_call = mutated_mod.get_global_var('func_1154')
call_1350 = func_1150_call(relay.reshape(uop_1342.astype('uint64'), [2, 9, 5]), relay.reshape(call_1335.astype('uint64'), [2, 9, 5]), )
call_1351 = func_1150_call(relay.reshape(uop_1342.astype('uint64'), [2, 9, 5]), relay.reshape(call_1335.astype('uint64'), [2, 9, 5]), )
output = relay.Tuple([call_1290,call_1315,const_1316,var_1317,call_1319,call_1321,call_1335,uop_1342,call_1350,])
output2 = relay.Tuple([call_1291,call_1318,const_1316,var_1317,call_1320,call_1322,call_1337,uop_1342,call_1351,])
func_1356 = relay.Function([var_1317,var_1336,], output)
mod['func_1356'] = func_1356
mod = relay.transform.InferType()(mod)
var_1357 = relay.var("var_1357", dtype = "uint16", shape = (1, 845))#candidate|1357|(1, 845)|var|uint16
var_1358 = relay.var("var_1358", dtype = "uint64", shape = (3, 30))#candidate|1358|(3, 30)|var|uint64
output = func_1356(var_1357,var_1358,)
func_1359 = relay.Function([var_1357,var_1358,], output)
mutated_mod['func_1359'] = func_1359
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1361 = relay.const([[[False,False,True,True,True,True,False,False,False],[False,True,True,False,False,True,False,True,False],[False,True,False,True,True,False,False,False,True],[False,True,True,False,False,False,True,True,True],[False,True,True,False,False,False,True,False,False],[True,False,True,True,True,True,True,False,False],[True,False,False,False,False,False,False,False,False],[False,False,True,True,False,False,False,True,False],[True,False,True,True,True,True,True,True,False],[False,False,False,False,False,True,True,False,True],[True,False,False,True,False,False,False,True,False],[False,False,True,True,True,False,False,False,True]],[[True,True,False,False,True,True,False,False,True],[True,True,True,True,False,False,True,True,False],[True,True,False,True,True,False,True,False,True],[True,False,True,False,False,True,True,False,False],[False,False,False,True,False,True,False,True,True],[False,False,False,True,True,True,True,False,True],[True,True,True,False,False,False,True,True,False],[False,False,False,True,False,False,True,True,False],[True,True,True,False,False,True,True,True,False],[False,False,True,True,True,False,True,True,True],[True,False,False,True,True,False,True,False,False],[True,True,True,False,False,False,True,True,False]],[[True,False,True,True,False,True,False,False,False],[True,True,True,False,False,False,False,True,True],[False,False,True,False,True,False,True,True,True],[True,True,False,False,False,False,True,True,False],[True,False,False,True,True,True,True,True,True],[True,True,False,False,True,False,True,True,False],[True,False,True,False,True,False,False,True,False],[False,True,False,True,False,False,True,True,True],[True,False,False,False,True,True,True,True,False],[True,False,True,True,False,True,True,False,False],[True,True,False,False,True,True,False,False,True],[False,False,False,True,True,True,True,True,False]],[[False,False,False,False,False,False,True,True,False],[False,False,True,False,False,False,False,False,True],[True,False,False,False,False,False,True,True,True],[False,False,False,False,False,True,False,False,True],[True,True,False,True,True,True,False,True,True],[False,False,True,False,True,True,False,False,True],[False,True,False,True,True,False,True,True,False],[False,False,False,True,True,True,False,False,False],[True,True,True,False,True,True,True,True,True],[False,True,True,True,True,False,True,False,True],[True,False,False,True,False,False,True,False,True],[False,False,False,False,True,True,True,True,False]]], dtype = "bool")#candidate|1361|(4, 12, 9)|const|bool
var_1362 = relay.var("var_1362", dtype = "bool", shape = (4, 12, 9))#candidate|1362|(4, 12, 9)|var|bool
bop_1363 = relay.logical_or(const_1361.astype('bool'), relay.reshape(var_1362.astype('bool'), relay.shape_of(const_1361))) # shape=(4, 12, 9)
bop_1371 = relay.bitwise_and(bop_1363.astype('int64'), relay.reshape(const_1361.astype('int64'), relay.shape_of(bop_1363))) # shape=(4, 12, 9)
func_428_call = mod.get_global_var('func_428')
func_430_call = mutated_mod.get_global_var('func_430')
var_1375 = relay.var("var_1375", dtype = "float64", shape = (30,))#candidate|1375|(30,)|var|float64
call_1374 = relay.TupleGetItem(func_428_call(relay.reshape(var_1375.astype('float64'), [1, 6, 5])), 0)
call_1376 = relay.TupleGetItem(func_430_call(relay.reshape(var_1375.astype('float64'), [1, 6, 5])), 0)
func_428_call = mod.get_global_var('func_428')
func_430_call = mutated_mod.get_global_var('func_430')
call_1378 = relay.TupleGetItem(func_428_call(relay.reshape(call_1374.astype('float64'), [1, 6, 5])), 0)
call_1379 = relay.TupleGetItem(func_430_call(relay.reshape(call_1374.astype('float64'), [1, 6, 5])), 0)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1385 = relay.TupleGetItem(func_1282_call(), 3)
call_1386 = relay.TupleGetItem(func_1284_call(), 3)
func_868_call = mod.get_global_var('func_868')
func_871_call = mutated_mod.get_global_var('func_871')
const_1389 = relay.const([[7.705313,3.360505,-8.090545,-3.313090,0.226042,-7.494771,0.323487,8.456713,-9.592794,3.152230,-8.626657,5.092889,-9.746096,-9.744840,-0.008605,-4.999515,-2.851277,9.363816,-0.194066,0.323529,-8.387837,-1.453876,-8.074146,-0.211472,3.280433,8.480948,2.964594,1.997307,2.557968,-8.521304,5.103851,-4.406036,5.810848,9.958278,6.374471,8.463362,-5.582965,-9.256730,5.654344,5.118874,-5.913545,-0.793568,-9.016558,0.047776,6.988865,5.229694,-6.990833,3.269785,8.355388,-1.037063,7.174525,-7.635486,4.424447,-4.436507,-9.290835,0.029528,2.042463,-1.312468,9.128691,2.184720,-7.195537,-5.122428,-8.700439,-8.772915,-9.904610,7.719541,-5.906835,6.970277,-9.552113,-0.649134,9.076100,4.906671,7.395354,-1.168044,-1.880690,2.496831,-1.306479,0.646034],[0.762772,-6.721212,-9.534533,-6.378750,-5.809729,2.755562,7.664498,1.469122,0.306358,8.337570,-7.705881,-1.135325,-5.383012,7.542710,5.431731,0.396727,-6.079711,-5.041009,1.739859,8.181818,-0.714086,-1.561695,-3.117585,-6.408215,3.260244,-3.286546,-3.331565,-2.779478,1.953707,8.789633,-9.655885,3.429474,1.931455,-7.552798,-3.317611,-8.632919,-5.074216,6.179645,-2.079789,-2.463334,0.665428,9.113591,5.256837,-3.470875,-8.575506,1.579366,1.713496,4.847522,-9.004624,8.022088,-6.964242,6.444723,6.524474,7.101655,1.103956,6.620431,3.274566,-4.689526,-5.323987,6.160943,-6.461090,5.247560,8.854712,-4.570103,-2.234481,8.808369,0.642814,1.080298,2.759024,-8.892657,4.710928,7.723001,4.581181,6.980450,0.541751,-6.026715,-1.838821,5.499660],[-1.173237,4.655212,6.010862,1.132892,-3.725230,8.036847,-9.072254,-0.682087,5.171060,-5.095976,5.571395,-5.025562,-5.236213,-9.624730,3.607044,-6.685768,-5.764092,-1.347188,-2.025427,-1.679120,2.155599,-7.436309,-6.064355,4.135680,7.608246,-9.676537,0.864214,2.187365,4.811066,-6.228815,7.892519,-9.300958,3.487748,8.885374,1.404627,-0.835597,-2.508167,-9.631379,3.454707,-3.703596,2.537177,2.036462,-3.161257,-0.646255,-2.892574,-4.267881,8.178368,0.645862,5.888355,4.201346,6.079098,1.514826,-3.299707,-6.377128,6.440799,-0.546698,3.962708,-6.072734,-8.263182,2.703478,5.239955,-0.676862,-4.148805,6.735512,2.847260,-6.851219,-5.588051,-6.893060,8.496592,-0.037624,5.889424,9.837876,-3.116251,-6.123040,-6.196672,-3.350021,2.256850,7.444235],[-2.492060,-2.732455,3.420308,-4.686267,-2.052285,-5.201979,7.906167,9.867221,-5.838036,4.508680,-6.711586,1.897163,9.750522,-9.176665,6.143247,0.804301,5.559674,9.347011,-0.206937,-6.938839,-6.042679,8.054158,-4.385796,-0.673513,2.910329,3.082623,-5.045429,7.753022,-6.873577,-4.808835,0.520345,-9.776782,8.579645,9.090239,2.806501,8.410745,-3.372623,-2.810341,4.559443,5.293987,-1.659639,-2.445061,-8.524166,7.886626,3.314995,-7.543509,0.757648,1.926568,-1.963993,-7.191646,1.152482,4.186337,-1.804740,-7.247585,-0.398272,6.653439,-5.299243,3.434041,3.977881,-2.910700,0.593205,9.158875,2.437491,6.734990,5.359602,2.046841,8.920050,-3.558877,-0.594578,8.135522,3.274324,-7.967207,-7.258662,-5.143031,-6.953180,8.739806,8.265798,-4.148764],[8.253478,-6.000598,6.938927,7.788531,-5.437973,1.051450,-2.335972,9.333122,0.768069,-2.855772,-4.052100,9.478452,8.055480,-3.540295,9.063896,4.185241,-6.252669,4.525145,5.302300,1.285992,-4.021653,7.700952,6.456607,-7.555293,-2.288038,4.993815,9.394695,0.658348,9.642738,8.929930,-3.030845,7.977402,-6.958121,-1.120603,-6.330849,2.206703,-5.738590,8.996318,-0.252853,-7.115201,-3.881609,2.170759,-7.625794,-5.554591,-0.453948,-7.187439,-9.581167,8.648170,-8.702050,4.322496,1.834456,-6.522656,5.417205,-1.001847,9.358928,-4.148998,-8.614686,-4.993341,-5.605837,-0.291873,-6.865642,7.383902,-1.876558,-0.785015,-7.833335,5.750921,-5.053194,-8.911229,-6.205097,9.533435,2.490644,4.535913,8.149321,7.990424,4.279568,-7.076720,-3.343722,-5.567032],[7.053260,-4.123703,-7.031945,8.777203,8.491154,-3.311997,-8.291631,9.341614,5.445693,0.508152,-6.326760,-4.110271,-1.468145,-4.713979,-7.797422,-3.058304,9.760045,-8.159685,-5.823899,-4.435383,4.078048,5.402640,2.352011,1.404816,-9.424599,2.506866,8.599049,-5.281226,3.417600,2.918446,6.706467,5.827823,-5.818111,5.436347,8.955573,-7.224152,-2.791082,4.393928,-1.715112,9.132595,2.016395,-6.648949,-3.428054,3.497051,1.049992,-0.043767,-1.010722,5.626749,8.396226,4.391558,-9.183416,8.546048,-4.631917,-6.575812,8.880899,1.338436,1.814548,-1.595336,-0.943841,3.983224,-8.887213,-6.172335,8.048044,0.443646,-8.578379,4.519190,-9.419788,-5.812880,6.771214,2.263823,-9.284197,-5.278116,-6.608891,1.342450,-2.056533,-3.395173,-8.599025,9.572865]], dtype = "float32")#candidate|1389|(6, 78)|const|float32
call_1388 = relay.TupleGetItem(func_868_call(relay.reshape(const_1389.astype('float32'), [13, 4, 9])), 0)
call_1390 = relay.TupleGetItem(func_871_call(relay.reshape(const_1389.astype('float32'), [13, 4, 9])), 0)
func_759_call = mod.get_global_var('func_759')
func_761_call = mutated_mod.get_global_var('func_761')
const_1398 = relay.const([[8,-10,-1,-9,4,-6,-6,8,-5,2,6,-8,-8],[-1,-6,2,3,7,4,-5,-3,-9,-8,-2,-6,10],[4,10,-9,-10,10,-3,8,6,-5,2,2,9,-8],[4,-7,-3,-4,-3,-4,10,-9,-6,2,-8,-3,-6],[-4,6,6,-6,-6,-6,-2,3,-1,9,-9,-6,-8],[-9,9,-5,-10,2,3,-1,-9,-9,-5,8,-9,-8],[3,-9,-2,-2,-4,1,10,-10,-3,1,-9,2,5],[1,-6,-2,5,-10,10,6,-10,7,-10,2,7,5],[4,-9,-7,10,-1,4,4,3,-5,7,7,5,1],[3,1,-6,-5,-1,-7,-6,5,-6,-4,-2,-9,-6],[5,6,-9,7,-8,4,-8,-6,7,-3,3,-1,8],[10,4,-6,7,6,2,7,-4,3,-3,-7,2,3],[9,4,7,7,-10,-2,-4,5,2,7,-3,10,-9],[8,-8,9,-5,5,7,-5,4,3,6,5,2,-5],[-2,10,-1,5,7,7,4,-6,-5,-7,-10,6,-8],[5,-2,-4,-5,-6,-1,8,-4,2,10,-9,2,-3],[-6,-10,9,-6,-8,-5,-5,1,-1,-5,-7,-3,8],[-1,9,3,-2,-4,8,4,-10,-1,2,-2,5,10],[-4,-7,8,-3,2,4,8,-7,-8,4,-1,-5,-9],[10,4,-5,4,3,2,8,-1,-7,10,7,8,8],[-6,-4,9,8,3,-2,-5,-8,-10,-10,9,-1,-5],[7,-10,3,-9,1,-3,1,-4,5,-9,-8,-9,1],[-10,-7,1,-8,-10,-6,-10,-6,8,10,-2,3,8],[-8,2,5,2,-6,-7,-3,-5,-5,-6,9,10,-7],[-2,2,4,7,1,-9,-5,7,9,-8,-7,-3,-7],[6,-10,10,3,-4,-5,-6,-4,-1,-10,-8,8,-7],[-2,-7,-3,-6,6,-6,9,-8,2,1,9,-4,10],[-9,-9,-3,-9,10,3,-4,4,-8,4,7,1,4],[2,10,10,-2,8,-2,6,-8,1,-8,3,-10,-5],[3,-7,-6,4,2,-5,-7,-10,1,-4,-4,8,10],[9,8,-6,-10,7,1,1,-9,8,1,-6,3,-9],[5,-9,1,-4,2,10,-5,7,10,9,-6,5,2],[-10,-1,2,-10,-2,8,2,8,-1,10,-8,6,2],[-4,-9,-10,3,-2,9,5,5,-9,-3,-8,1,2],[8,9,-10,-7,-1,-2,8,9,-7,9,10,-8,5],[9,2,5,9,-10,-9,2,3,6,9,9,2,8],[5,6,2,6,-7,5,-7,9,-1,-7,4,-6,-9],[-8,4,-4,2,1,-7,7,9,2,-7,3,-3,-4],[2,-1,-6,3,-5,-9,10,8,-8,-1,-6,-3,7],[3,-6,6,-9,-10,-8,-7,1,9,-5,-9,3,-9],[7,4,-10,2,7,4,9,-3,7,7,5,1,2],[-2,-2,-5,-7,-2,9,-2,6,-2,-2,-9,2,-8],[3,-6,1,-1,3,3,7,6,1,-2,-6,1,9],[8,7,10,-7,-4,-6,-5,-3,8,6,-7,2,4],[-6,-7,-7,10,-2,2,7,-10,-3,2,3,-5,6],[6,3,-7,6,-8,10,5,-6,-1,-4,-6,8,-2],[-9,-2,1,2,-9,-5,-4,6,-10,-4,-9,-9,-8],[2,4,10,1,10,-9,7,3,3,-6,-9,-3,1],[10,6,7,-7,-10,-6,-9,4,-9,8,-5,-9,-1],[7,3,-7,-10,-2,-9,-7,6,-1,-10,-2,7,10],[2,-5,8,-8,-10,4,6,-8,-7,-7,10,9,-4],[-10,-1,-5,10,8,1,-10,9,-2,2,-3,7,-3],[7,-7,-2,-3,7,-8,7,-6,-9,1,2,4,-3],[4,-6,-7,10,-3,-10,7,-4,8,-10,2,-3,-9],[6,9,-2,-1,2,3,-3,4,5,-5,-8,-2,7],[8,-7,-5,2,-6,8,7,7,-4,6,-8,-1,2],[5,-6,8,-2,-2,-9,10,-3,3,10,7,4,2],[-6,4,10,2,4,1,6,-5,-2,-10,-5,4,-7],[-7,-6,-3,-2,2,8,8,-3,-10,-4,6,9,-10],[1,10,-5,-6,-6,7,6,9,-3,-8,6,7,-10],[-6,9,3,-10,-5,-10,9,-2,5,4,-1,-1,-5],[-4,8,5,5,4,3,3,-10,-1,-10,-3,-10,-8],[-6,-10,9,5,-10,-3,-4,4,-10,7,9,-9,10],[3,1,-1,-2,9,-6,9,7,-2,-1,-10,3,-1],[7,1,-1,9,8,10,2,-1,6,-6,-6,-3,5]], dtype = "uint16")#candidate|1398|(65, 13)|const|uint16
call_1397 = relay.TupleGetItem(func_759_call(relay.reshape(const_1398.astype('uint16'), [13, 13, 5])), 1)
call_1399 = relay.TupleGetItem(func_761_call(relay.reshape(const_1398.astype('uint16'), [13, 13, 5])), 1)
func_1038_call = mod.get_global_var('func_1038')
func_1042_call = mutated_mod.get_global_var('func_1042')
var_1403 = relay.var("var_1403", dtype = "uint8", shape = (1, 2100))#candidate|1403|(1, 2100)|var|uint8
call_1402 = relay.TupleGetItem(func_1038_call(relay.reshape(var_1403.astype('uint8'), [10, 14, 15]), relay.reshape(const_1398.astype('uint16'), [845,]), ), 3)
call_1404 = relay.TupleGetItem(func_1042_call(relay.reshape(var_1403.astype('uint8'), [10, 14, 15]), relay.reshape(const_1398.astype('uint16'), [845,]), ), 3)
var_1410 = relay.var("var_1410", dtype = "uint16", shape = (65, 13))#candidate|1410|(65, 13)|var|uint16
bop_1411 = relay.multiply(const_1398.astype('uint32'), relay.reshape(var_1410.astype('uint32'), relay.shape_of(const_1398))) # shape=(65, 13)
func_759_call = mod.get_global_var('func_759')
func_761_call = mutated_mod.get_global_var('func_761')
call_1414 = relay.TupleGetItem(func_759_call(relay.reshape(bop_1411.astype('uint16'), [13, 13, 5])), 0)
call_1415 = relay.TupleGetItem(func_761_call(relay.reshape(bop_1411.astype('uint16'), [13, 13, 5])), 0)
const_1422 = relay.const([[-5.407156,1.694131],[2.140576,-7.225422],[-1.873935,-8.317743],[-7.267312,7.766366],[-4.350708,-0.973275],[7.799353,7.402678],[-3.221459,-8.647458],[-5.690214,6.003501],[2.566904,-1.777515],[-2.645806,6.758786],[6.527791,6.419166],[1.352600,1.155145],[-5.963796,-8.806720],[-2.508605,-6.465277],[-0.857545,-7.936630],[-9.338707,-8.576916],[-4.684885,-7.228657],[0.385041,0.670091],[-9.684973,-6.211429],[7.328702,6.240148],[-9.175947,-2.543095],[4.787348,7.406849],[4.899598,1.339502],[8.962424,1.223980],[-4.770363,-1.538432],[6.499080,-8.963126],[-1.257767,2.578332],[-8.758910,-8.020505],[-8.754434,-5.672141],[2.669929,-7.071859]], dtype = "float64")#candidate|1422|(30, 2)|const|float64
bop_1423 = relay.maximum(call_1385.astype('int32'), const_1422.astype('int32')) # shape=(30, 2)
bop_1426 = relay.maximum(call_1386.astype('int32'), const_1422.astype('int32')) # shape=(30, 2)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1428 = relay.TupleGetItem(func_1282_call(), 3)
call_1429 = relay.TupleGetItem(func_1284_call(), 3)
output = relay.Tuple([bop_1371,call_1374,var_1375,call_1378,call_1388,const_1389,call_1397,call_1402,var_1403,bop_1411,call_1414,bop_1423,call_1428,])
output2 = relay.Tuple([bop_1371,call_1376,var_1375,call_1379,call_1390,const_1389,call_1399,call_1404,var_1403,bop_1411,call_1415,bop_1426,call_1429,])
func_1441 = relay.Function([var_1362,var_1375,var_1403,var_1410,], output)
mod['func_1441'] = func_1441
mod = relay.transform.InferType()(mod)
mutated_mod['func_1441'] = func_1441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1441_call = mutated_mod.get_global_var('func_1441')
var_1443 = relay.var("var_1443", dtype = "bool", shape = (4, 12, 9))#candidate|1443|(4, 12, 9)|var|bool
var_1444 = relay.var("var_1444", dtype = "float64", shape = (30,))#candidate|1444|(30,)|var|float64
var_1445 = relay.var("var_1445", dtype = "uint8", shape = (1, 2100))#candidate|1445|(1, 2100)|var|uint8
var_1446 = relay.var("var_1446", dtype = "uint16", shape = (65, 13))#candidate|1446|(65, 13)|var|uint16
call_1442 = func_1441_call(var_1443,var_1444,var_1445,var_1446,)
output = call_1442
func_1447 = relay.Function([var_1443,var_1444,var_1445,var_1446,], output)
mutated_mod['func_1447'] = func_1447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1482 = relay.TupleGetItem(func_1282_call(), 2)
call_1483 = relay.TupleGetItem(func_1284_call(), 2)
uop_1484 = relay.sigmoid(call_1482.astype('float32')) # shape=(1, 6, 5)
uop_1486 = relay.sigmoid(call_1483.astype('float32')) # shape=(1, 6, 5)
bop_1490 = relay.minimum(call_1482.astype('uint8'), relay.reshape(uop_1484.astype('uint8'), relay.shape_of(call_1482))) # shape=(1, 6, 5)
bop_1493 = relay.minimum(call_1483.astype('uint8'), relay.reshape(uop_1486.astype('uint8'), relay.shape_of(call_1483))) # shape=(1, 6, 5)
func_868_call = mod.get_global_var('func_868')
func_871_call = mutated_mod.get_global_var('func_871')
const_1495 = relay.const([3.494461,-5.093137,-8.227401,-3.587540,4.181543,-0.219040,3.107035,0.124288,1.552453,-3.991242,-3.454618,9.346055,1.285537,-1.174355,-8.591411,-3.421694,9.638954,4.641233,-8.803760,-5.050434,-7.558668,-6.540411,9.140150,-7.606816,-6.538114,-4.724116,8.608423,-5.241618,9.923177,6.974421,-9.274087,7.585251,-6.689058,2.469422,-7.507550,5.576664,-7.155866,1.790765,9.484500,6.342351,-3.692862,-7.217942,0.731293,5.726848,5.922678,-2.184852,-2.306502,-9.133041,3.352643,2.141905,2.673017,-0.554165,9.821700,9.716775,6.317244,-1.486031,5.268365,3.982180,-7.066691,8.382286,6.546752,0.731954,-9.271066,5.731766,7.696837,9.307917,9.453929,4.735876,7.981929,5.167757,4.275683,8.768548,-8.890171,9.653055,0.605157,-4.080559,8.325940,-4.838824,7.154279,1.702390,4.744199,-5.085020,-2.942965,1.759281,-8.327464,3.663654,-0.493514,-7.253274,3.902436,7.353840,9.064919,-5.598575,0.203963,-7.342212,-4.179719,-1.361625,-9.313257,-2.348914,-8.480769,2.611152,-8.257247,-1.471754,6.149246,6.993516,-5.859507,5.258401,-2.203497,-6.356128,-5.517899,8.515091,-8.559482,-2.364886,-5.398238,-9.069746,-6.349669,6.191526,-0.185310,-0.857622,2.131168,-2.761181,-4.873247,4.273944,0.044502,2.897568,-7.191987,-6.832682,-7.224984,5.068885,2.318504,6.866881,4.609419,-0.346213,-6.561586,3.734215,-8.348398,2.738518,4.981221,-1.529435,0.194979,3.820944,-3.579852,-9.068793,-8.723774,9.411215,5.889874,-7.336551,9.317346,-2.467637,3.786660,7.953723,-2.169563,-4.174244,6.356572,-7.024589,-2.393335,-5.241702,-6.135646,3.743615,4.958758,-1.973190,0.703157,0.144047,-9.498655,-5.936926,-8.157475,2.255944,8.795730,-5.042889,-9.748044,6.583160,-6.417334,8.880892,-5.056445,-6.580146,0.448526,0.048886,8.764639,-3.175092,-8.774325,2.547540,-4.983384,1.364479,-4.765647,8.132206,2.903808,-6.565744,-8.332255,-1.172934,-5.032066,-7.681425,9.798463,5.413704,8.938791,-6.845310,-9.809102,-5.515753,1.207714,-3.543315,6.416268,-4.052726,-2.557722,8.881701,8.108052,-9.480956,-4.075638,7.258861,-0.623536,-1.803159,-3.580234,6.406928,-3.645850,-8.741840,-8.489596,3.290763,-6.681418,-5.344826,-9.965165,4.541685,0.643004,-5.471127,3.674894,5.540502,-0.807787,8.028341,7.090043,7.702710,-6.492300,6.233652,2.222170,-1.193667,-0.751515,-8.901274,-0.120676,-2.899369,6.632816,5.817082,8.705325,-3.085173,-2.315647,-3.732303,6.706479,6.509976,1.315051,-4.472676,-6.635889,-4.077692,4.642123,0.359224,0.685864,7.530374,-9.036543,0.320173,4.859162,5.144475,2.247587,1.791058,-0.510203,-5.281638,3.485966,-1.880303,5.526162,5.513077,1.972458,5.537415,-6.542465,-8.569700,7.338526,-5.655629,6.197246,5.467468,-8.292828,2.280194,2.770037,-4.288966,-5.555674,-3.130597,-1.330484,-3.519862,5.939672,-8.396897,-5.111540,-6.612498,-0.174560,8.904064,6.983052,-4.658489,0.335415,-1.462056,7.523918,-9.219685,9.871055,8.843501,-7.491380,6.024770,6.715194,9.011319,-6.049909,-3.812063,6.110612,8.362093,-3.551832,-9.202387,3.534175,-0.661262,3.041873,7.254948,-8.613636,-0.679557,-2.473086,-1.887838,5.172014,-8.195675,3.980297,-0.851898,-3.388995,9.267489,4.073226,-6.524264,-5.180862,8.631032,5.427881,-1.721191,-2.908464,-3.506341,7.850455,-3.215662,1.582394,-9.462502,3.537300,4.777778,-6.856838,-8.421007,-0.183222,3.350009,-6.444948,-2.012999,5.285681,3.651638,-1.185075,-8.041930,-4.514392,-0.035957,8.772364,-3.956630,-3.565137,-7.745848,7.439466,-8.950225,-7.665937,-8.843686,0.589385,-7.683137,-0.352668,-0.490909,-0.467802,-9.193115,4.103437,-2.443494,1.749544,-2.679582,-6.650798,9.114134,4.299491,0.247323,3.325242,-2.500699,-1.014760,7.052133,-4.298347,5.137492,-5.089967,7.590529,4.165824,5.789031,7.858355,-5.464112,-2.032824,4.927620,1.417830,3.052549,-1.012041,9.898104,6.807370,8.708829,-2.387542,-7.418424,-1.677931,8.407221,5.797767,3.062786,-0.732469,-4.562150,5.174875,-7.140379,-7.036851,8.744798,-4.527946,8.839507,5.621489,0.250623,-1.349181,-9.431576,-2.355096,-9.054018,-1.277959,-4.774739,0.657109,-3.732878,-7.077047,6.909416,-3.920491,8.629040,-5.040245,-6.879822,-9.789845,7.424817,0.887099,9.017148,5.116184,1.466020,9.350193,-8.153633,-9.882761,1.027598,-8.156808,9.798419,8.880345,8.699050,-7.232417,1.292604,6.253882,8.027207,3.221513,-3.060974,-8.856922,-2.557833,8.296551,-1.246072,4.492330,-0.759025,-2.356193,5.032966,5.101416,3.732285,-3.459061,-1.069501,-7.555490,3.522245,-9.300737,-0.588992,4.306518,1.652321,-6.493620,8.238435,6.953848,5.995256,9.556899,-9.708081,9.862351,-9.719457,-5.132088,7.934103,-0.150036,-2.616520,9.476622,7.483331,-4.222651,2.791058], dtype = "float32")#candidate|1495|(468,)|const|float32
call_1494 = relay.TupleGetItem(func_868_call(relay.reshape(const_1495.astype('float32'), [13, 4, 9])), 0)
call_1496 = relay.TupleGetItem(func_871_call(relay.reshape(const_1495.astype('float32'), [13, 4, 9])), 0)
func_759_call = mod.get_global_var('func_759')
func_761_call = mutated_mod.get_global_var('func_761')
var_1499 = relay.var("var_1499", dtype = "uint16", shape = (845,))#candidate|1499|(845,)|var|uint16
call_1498 = relay.TupleGetItem(func_759_call(relay.reshape(var_1499.astype('uint16'), [13, 13, 5])), 1)
call_1500 = relay.TupleGetItem(func_761_call(relay.reshape(var_1499.astype('uint16'), [13, 13, 5])), 1)
output = relay.Tuple([bop_1490,call_1494,const_1495,call_1498,var_1499,])
output2 = relay.Tuple([bop_1493,call_1496,const_1495,call_1500,var_1499,])
func_1507 = relay.Function([var_1499,], output)
mod['func_1507'] = func_1507
mod = relay.transform.InferType()(mod)
var_1508 = relay.var("var_1508", dtype = "uint16", shape = (845,))#candidate|1508|(845,)|var|uint16
output = func_1507(var_1508)
func_1509 = relay.Function([var_1508], output)
mutated_mod['func_1509'] = func_1509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1540 = relay.TupleGetItem(func_1282_call(), 3)
call_1541 = relay.TupleGetItem(func_1284_call(), 3)
func_174_call = mod.get_global_var('func_174')
func_176_call = mutated_mod.get_global_var('func_176')
const_1567 = relay.const([-8,10,4,-3,8,-10,-5,-8,4,2,-4,2,4,5,5,-7,9,-5,5,-7,-2,-10,6,10,5,-7,-4,-8,-8,4,-4,-6,-8,-4,-9,-6,6,5,-5,1,10,-8,8,-3,-10,10,5,7,-9,6,1,-8,-9,10,-2,5,-10,-6,-2,7,-3,-6,-4,-4,3,10,4,-3,-5,-9,6,8,-7,-6,-1,-1,-9,5,-1,8,-2,7,8,-1,3,-1,3,4,-4,-9,3,-1,10,-10,8,-2,-6,-6,-9,9,-6,10,10,9,8,10,1,-6,9,9,-3,8,4,-6,-3,-6,9,-6,3,4,-5,-3,-6,-7,-4,-2,1,-8,4,-7,-3,5,10,1,-9,3,9,-2,4,10,10,-8,-2,6,-4,-4,-8,9,10,-3,6,7,-1,-10,10,6,-4,1,-3,-3,-3,-4,-5,1,4,6,-10,-5,2,10,7,-4,-2,-6,-3,2,7,-9,10,8,3,-3,-7,-8,4,-2,3,10,10,-10,7,1,1,-4,1,4,8,-9,-8,7,-4,-2,5,-2,-10,-10,-8,10,-10,-10,-10,4,-4,4,-1,-3,-2,-2,7,-1,-8,-5,-9,-6,1,1,2,9,10,9,6,6,7,4,4,2,-4,10,1,-4,6,4,-3,-6,-8,-6,-5,2,-2,5,-10,10,3,9,8,8,1,1,-5,-6,-2,-5,5,-10,-4,3,-3,9,-4,1,4,-7,-1,8,7,-7,8,-7,-1,-2,-1,10,9,-9,-8,7,10,-6,4,7,9,2,7,-10,6,5,6,-3,-5,-8,-5,-6,10,-7,5,6,7,-3,7,5,7,3,5,10,10,-4,4,-3,-1,7,-4,4,-10,8,-10,1,2,1,-9,9,1,-4,3,-7,8,2,8,-7,-3,-4,-9,2,-8,-1,4,-6,-3,-9,-10,3,-2,-3,-3,7,-7,-10,-7,-2,-3,-1,2,3,-8,2,-9,-7,1,1,10,9,10,-6,10,-1,-10,2,-8,5,-7,5,3,-7,9,6,6,7,-3,-3,10,5,-6,9,-4,-1,3,-9,7,-9,-3,-6,-2,-5,7,-7,-1,6,-1,-3,-1,-8,-10,1,2,-6,6,-4,-6,-3,-8,-9,-7,8,9,-5,-6,3,9,-5,-5,-5,-4,1,-1,-2,-7,10,5,-3,7,-3,10,-9,1,9,-5,-8,5,-9,-4,-5,-4,-6,-1,3,5,-3,3,6,-5,9,1,-1,7,-3,2,3,-3,7,7,3,8,-9,-9,-7,9,-6,-5,7,8,-2,-7,10,-3,-3,-9,-2,-4,7,5,-10,2,-3,5,-9,-9,5,8,-6,-4,-1,7,9,-6,7,-2,6,-2,-1,10,-10,-10,6,2,-9,1,9,-7,9,7,-5,-2,-3,3,-9,-5,-3,-6,3,9,6,3,-7,-6,-4,-4,-1,1,1,9,6,-1,-9,7,6,-5,7,-10,6,3,-8,-10,-7,5,6,8,-10,-2,7,-2,-5,-7,-4,-7,2,2,-10,9,5,5,-1,-5,3,1,-7,5,9,4,-1,-4,4,-3,8,2,-7,7,2,-9,9,7,3,8,5,3,-7,-7,3,-7,-3,8,-8,7,7,6,-6,-2,4,10,5,5,10,-5,3,6,5,-5,-9,2,2,1,-1,-6,-4,6,10,3,3,-5,-2,-2,6,-9,-2,10,10,-4,6,-8,6,2,-3,-8,-5,-3,-7,-3,4,8,2,2,1,5,-5,10,4,9,-8,-6,-1,9,5,9,-1,-5,-8,7,10,9,-2,7,2,5,-3,3,1,-10,-2,-4,-7,-8,-6,4,-6,1,3,-5,-2,-5,5,-8,7,-3,-8,-4,7,-10,6,9,9,1,6,7,8,2,9,10,-8,5,-1,1,-10,9,8,-7,7,-1,5,10,9,7,-4,3,9,9,6,7,2,-1,5,-7,7,-3,5,6,-9,-1,-1,6,4,-1,5,6,4,-6,-7,-9,-3,7,-8,-2,-7,2,9,9,3,-2,7,-6,5,-10,-6,-9,3,-5,-10,-10,1,-6,-9,-2,4,-1,-3,-2,10,3,10,5,7,-8,8,-5,-1,-9,-7,-5,6,1,-2,2,-4,-7,8,-10,1,-3,6,-8,-10,-7,8,7,7,-5,-1,-2,1,-1,-3,-3,1,-3,-5,-5,-6,9,6,7,-6,-4,-9,-3,-10,-9,-9,5,-8,10,9,-8,10,10,5,-9,10,-9,-2,9,-1,4,1,-2,8,-2,-7,-4,8,-3,1,-6,-5,-2,-9,10,-9,10,4,9,-3,-10,3,-7,8,-6,10,-2,6,6,4,5,-10,1,6,7,3,10,-1,-5,-7,-10,4,5,-7,-5,-7,-2,7,3,5,5,-7,-2,-3,7,-9,-8,10,-2,2,-8,2,-8,-5,-4,-10,6,5,-6,-6,-10,-2,9,2,1,-1,-5,-6,9,5,-2,2,10,8,6,1,-1,4,6,-1,2,-3,2,1,3,-7,-10,-4,6,8,-8,-10,1,8,2,4,1,10,-9,9,8,8,6,-10,-4,6,7,-10,2,10,9,-7,-1,6,-9,-3,-10,6,-5,-10,-5,2,4,2,1,-9,6,-1,-2,-1,1,-9,7,8,-10,-10,7,-8,-5,7,4,6,-10,9,5,3,5,10,-5,-3,-9,1,6,-6,-2,7,-9,-6,-4,-10,-6,-7,-7,3,7,9,9,-3,1,-6,-2,-9,-7,-1,9,-10,-6,-5,5,-5,2,-10,7,-7,-1,-1,7,-6,-4,-5,-8,-9,-5,-7,2,3,-9,-6,4,-5,8,2,6,2,-4,-5,6,-9,10,-9,10,-6,-7,-5,8,10,6,3,-9,-3,2,5,4,8,2,4,-1,10,3,-9,-5,-6,10,-2,2,1,-5,-3,2,3,-9,3,9,8,-9,2,-7,-5,-8,3,4,8,-10,-8,-2,-6,10,-3,-3,1,-9,9,3,-10,-3,-1,-8,-8,-9,3,-9,-4,-8,-10,-7,6,5,-9,-9,9,3,1,-8,2,-9,-9,-3,9,-10,-4,-1,-3,4,-5,3,7,4,9,-8,9,7,-6,-1,-4,6,-7,6,5,2,-3,6,10,9,-1,-2,4,10,-4,7,-3,-5,3,-10,3,10,6,-7,5,-8,3,-9,-1,-9,10,-4,2,-3,5,3,7,8,-9,-10,3,5,9,-4,-4,9,10,9,5,5,7,-9,-1,-8,4,-7,7,2,5,-8,9,-5,1,1,5,-7,5,-7,-5,-9,6,-3,-9,10,-10,-4,-8,-10,-2,6,-10,-2,-10,-3,7,-5,9,5,-4,-1,5,-5,-4,-1,-9,-6,1,6,-8,-10,5,5,3,2,-6,2,-10,-4,6,-3,-4,6,8,9,-2,-10,-4,1,-6,5,-9,3,5,-6,-3,-6,1,-2,-3,-4,2,4,-10,3,9,7,-4,9,-8,-10,7,5,9,6,10,9,-7,-8,-7,4,9,-5,-4,2,-3,-10,-10,8,-2,-1,8,4,10,-4,-3,4,2,4,-6,-5,-9,-1,1,8,6,8,9,1,4,-8,-4,8,2,1,6,-8,2,-6,9,-6,5,-10,6,6,7,-6,6,8,-3,7,4,6,5,6,-10,-8,6,1,-1,1,-9,-2,10,3,6,5,-5,3,7,-1,-4,1,-1,6,-7,2,6,3,4,1,7,-10,-9,10,4,10,-2,-10,3,-7,-2,10,-2,4,-10,6,1,8,8,-3,-1,10,5], dtype = "int8")#candidate|1567|(1404,)|const|int8
call_1566 = func_174_call(relay.reshape(const_1567.astype('int8'), [12, 9, 13]))
call_1568 = func_174_call(relay.reshape(const_1567.astype('int8'), [12, 9, 13]))
output = relay.Tuple([call_1540,call_1566,const_1567,])
output2 = relay.Tuple([call_1541,call_1568,const_1567,])
func_1576 = relay.Function([], output)
mod['func_1576'] = func_1576
mod = relay.transform.InferType()(mod)
mutated_mod['func_1576'] = func_1576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mutated_mod.get_global_var('func_1576')
call_1577 = func_1576_call()
output = call_1577
func_1578 = relay.Function([], output)
mutated_mod['func_1578'] = func_1578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1650 = relay.TupleGetItem(func_1282_call(), 3)
call_1651 = relay.TupleGetItem(func_1284_call(), 3)
func_428_call = mod.get_global_var('func_428')
func_430_call = mutated_mod.get_global_var('func_430')
call_1656 = relay.TupleGetItem(func_428_call(relay.reshape(call_1650.astype('float64'), [1, 6, 5])), 0)
call_1657 = relay.TupleGetItem(func_430_call(relay.reshape(call_1650.astype('float64'), [1, 6, 5])), 0)
func_1441_call = mod.get_global_var('func_1441')
func_1447_call = mutated_mod.get_global_var('func_1447')
var_1667 = relay.var("var_1667", dtype = "bool", shape = (432,))#candidate|1667|(432,)|var|bool
const_1668 = relay.const([[-1,5,8,-10,-3,7,8,-2,-9,-7,4,6,9,-10,10,-9,6,10,-2,-7,3,-8,9,-3,10,3,-2,-4,7,-5,3,7,-8,5,7,-6,-5,-1,-8,-7,6,4,9,1,9,-4,-10,4,-7,-9,-3,5,1,4,-2,-8,1,8,-10,-9,-5,-3,-1,10,-8,-2,-3,-8,-3,-4,3,5,3,-7,10,-4,-6,-9,-6,7,-7,-2,8,-7,-2,7,-2,-1,-4,2,4,-1,2,1,9,9,-9,-8,-1,-9,5,-10,10,6,2,2,-1,-8,2,-1,7,9,-1,4,-4,-6,-1,-10,8,7,-3,5,1,-8,-3,6,-9,8,3,-1,-7,8,3,-10,-1,10,5,9,-7,9,-6,-1,-9,4,-1,9,-3,-3,-2,-7,10,-10,-3,1,7,-1,6,-9,-9,8,-9,-5,3,-9,2,1,-5,9,1,-9,3,-1,-2,-5,-3,-10,-2,-5,6,4,-1,-2,-6,-6,2,-5,-5,-3,9,9,-2,2,-5,-1,-10,1,-9,-10,3,-4,-1,-7,7,7,-9,-8,5,-7,7,-3,10,-10,6,-6,8,-1,8,9,-7,3,-1,9,1,10,1,-6,-7,1,-8,10,6,-5,9,-2,-10,-4,-4,-9,-8,-2,2,1,-6,-3,-7,10,-4,8,1,-2,4,4,-1,-2,3,8,-2,7,1,-2,-2,-2,1,4,1,-3,-3,3,-1,5,-1,-1,3,-2,-7,3,-9,8,6,-2,-9,3,1,8,-3,7,-9,6,4,6,-2,-3,-7,-3,-4,-1,-9,4,10,-3,6,-6,8,-9,-10,4,-6,-7,7,-6,-4,-3,-1,4,-9,-6,-8,-2,-4,9,-7,-8,-1,4,4,10,-8,2,7,3,-4,5,-9,8,-9,9,-1,7,-3,-1,-4,6,1,-1,3,-6,-1,9,-7,5,-6,-2,-5,-1,3,-7,3,6,3,-2,-9,1,1,-2,-7,-6,5,-1,8,-1,4,-5,3,-10,-9,1,5,10,4,-4,-10,5,10,-8,-8,9,-6,10,6,-4,-4,-4,8,5,-5,4,-1,5,-5,-10,-9,-8,1,-2,7,3,2,-2,-1,-4,-6,-6,-7,8,1,4,7,6,-9,-7,6,-2,7,-1,-9,-7,-3,-3,1,2,-9,3,-10,4,-7,8,2,6,-1,10,-3,-8,9,7,-1,1,7,6,4,7,-4,7,-2,-9,-9,7,-5,8,-4,-3,6,-7,-9,10,-6,7,1,-7,-6,-8,-3,-8,-9,4,1,-8,-1,-2,9,-4,-9,4,6,5,-8,-8,9,1,10,1,3,2,4,4,6,-8,-10,6,-6,7,-5,6,9,-2,-5,4,-10,-1,10,10,5,2,-4,1,-9,-5,3,8,3,3,-3,-5,5,9,-1,-3,1,-10,-6,-7,9,-9,5,4,-9,5,6,-5,6,-8,7,1,-9,-2,-4,-9,-3,5,10,-8,-6,9,3,-5,-9,5,-6,-3,1,-1,-8,-10,-3,-1,-4,-9,1,4,-5,-6,2,10,10,-5,1,-8,8,-10,-2,-3,-1,7,-4,10,10,4,7,-9,9,10,10,9,-5,-1,1,3,10,-3,-3,-4,7,2,-1,-1,-5,-10,-8,-6,-7,1,-3,-7,-6,-7,-3,1,-8,6,-4,-2,7,-5,-1,1,10,-6,-8,-5,-5,-5,-3,2,1,-3,-4,-5,4,-7,3,-5,-2,5,3,-6,2,1,-2,-9,9,-8,-6,4,-5,7,3,-10,-2,-4,-6,-5,6,6,-9,10,8,10,1,3,9,3,-1,-4,9,-10,-2,5,-3,5,5,-7,-3,6,3,7,1,-1,-6,-7,-4,-10,-4,-4,6,-6,-5,6,1,10,-3,-5,1,-9,2,-2,3,-3,-6,3,-6,-5,-1,9,-2,8,-9,10,-9,-7,-4,-7,2,5,9,-2,-8,-8,-9,-3,-7,8,3,10,-6,-3,7,-1,-4,-6,6,-5,-6,-3,9,8,4,6,4,9,2,-2,6,7,-10,10,-3,-8,10,-4,7,9,-5,-1,8,9,-6,10,-4,1,-9,10,7,-9,-3,-8,-4,-4,-1,-10,-6,10,3,3,4,-1,-4,3,3,10,6,6,6,-2,4,-5,-4,10,4,3,7,1,9,5,-9,-7,5,-6,1,8,-2,6,8,1,9,-2,-2,-8,-8,-2,-9,3,-10,7,-8,9,-7,-8,-10,9,-5,-6,3,-7,-10,-9,5,7,2,9,8,-2,2,2,-10,-1,-1,1,4,4,-6,5,6,9,5,-9,-5,-9,-2,-8,3,7,-8,-5,-6,-6,-3,-4,-2,-8,10,-1,-8,-1,-3,-3,10,-8,8,-3,-4,7,-2,8,-1,-3,4,5,4,2,-6,-2,7,-7,5,1,10,9,-6,-10,-3,-9,4,-9,-9,4,10,-4,-9,-1,-2,4,-10,-6,1,-7,-8,1,10,10,3,-7,-3,-9,1,-7,-4,-6,5,5,9,-10,6,-7,-5,8,-3,2,-7,6,-3,-2,3,5,10,-6,10,4,-9,-4,9,2,-10,-6,5,6,5,9,6,8,2,4,9,-9,2,5,-7,3,-1,-4,-3,6,-8,7,-7,-9,8,2,-3,10,-6,5,9,-3,-9,9,-7,9,8,-7,-3,-5,-10,-10,9,6,-2,1,1,4,-2,1,7,-5,5,1,8,9,-6,1,-1,-3,2,-6,9,-2,-4,8,-4,-8,5,-7,7,5,8,-1,4,2,7,10,2,4,-6,9,7,7,7,7,3,-9,9,-10,3,1,-3,-3,3,-1,2,-7,9,1,1,2,-1,4,3,2,-9,-6,-4,-7,8,3,10,-7,5,5,-7,9,1,7,-1,-2,2,3,8,-10,-10,6,-5,10,-4,-6,-3,-6,-10,10,2,2,-1,9,-4,8,3,5,1,-10,10,4,2,-8,5,-4,10,-2,-2,10,9,10,-4,-2,10,-9,-7,-2,5,3,-9,-8,4,2,8,-2,2,10,6,-2,-3,5,-4,-1,10,-8,3,-10,3,-3,-5,-9,-4,4,1,8,-7,-6,-1,-7,-2,-2,10,-2,-5,5,9,-9,-2,-4,-1,7,-5,-8,-1,-9,-3,-10,4,-5,8,-9,3,-9,-2,-8,-5,-4,9,9,8,-6,9,-3,9,-2,-9,1,10,1,-3,9,-3,10,-5,-3,-5,6,-7,8,9,1,2,4,-4,-8,-3,6,-7,9,3,7,-2,-5,9,3,5,8,9,-1,-6,-1,5,-4,-2,-6,-6,7,3,-7,5,-4,5,8,-3,-7,10,-7,-5,-9,3,-6,-6,7,2,6,5,8,2,-5,8,6,-2,-3,4,-6,7,8,-2,5,-10,-3,-10,6,-10,-9,-7,-6,-7,-7,-1,10,4,3,4,4,-10,-10,2,4,-10,-10,-7,-7,-5,7,-7,6,-6,1,-7,-5,-4,7,2,-5,4,9,-2,-6,-1,7,-2,1,-3,8,-7,-9,8,6,9,2,9,-7,-8,-9,7,-8,10,7,-4,-5,9,-4,2,-7,-1,6,-2,10,5,-10,-5,1,10,1,4,4,2,10,-6,-6,-8,7,-5,-2,8,3,10,1,6,3,9,-5,3,-4,-4,8,-3,2,5,8,-5,7,7,-7,-9,4,6,-9,-7,-2,3,3,-8,-2,8,-4,-3,10,10,-4,6,9,9,4,8,5,7,-7,-2,8,1,4,-5,-3,-10,6,-6,1,-10,9,1,3,-3,-5,-9,8,-4,-3,7,-6,2,-4,-6,4,-9,7,-9,10,-9,1,-7,-2,-9,4,1,-4,1,-3,-2,2,-10,-3,-9,2,-9,8,10,-1,-4,-7,-2,-10,-9,-9,-10,4,1,-8,4,8,3,-3,7,3,6,6,3,2,-1,-4,-3,-10,8,3,-9,7,-9,4,2,-7,9,10,-1,5,3,-4,2,1,3,-3,-6,-4,-1,-1,6,-3,3,-1,6,-8,-7,-7,6,8,3,10,2,-4,-2,5,-5,7,2,4,-3,-6,5,-9,1,-10,1,-4,6,7,5,8,-2,9,2,-3,6,-7,-5,3,6,-10,5,-3,4,-1,-3,10,-5,-9,-2,3,-2,-2,7,-2,-1,3,8,9,5,2,10,-1,-1,-5,5,-5,-8,-3,-2,-1,9,9,9,1,7,-10,-5,3,3,1,5,4,-10,-2,4,-3,7,-2,9,10,7,2,-3,10,-4,6,6,5,-9,-8,2,5,5,-8,3,10,-10,-3,-9,2,3,-3,10,-5,-8,-1,6,2,5,8,1,-7,-2,5,3,-5,5,-7,9,-5,7,-9,-4,-6,2,5,2,4,2,5,7,6,-9,9,5,5,10,6,-5,-2,-8,2,-9,-6,-6,-10,1,6,-7,8,-9,-7,-6,-4,7,10,3,9,-6,6,-6,-6,-10,-8,7,2,-8,-8,2,-5,-8,-6,7,-6,10,7,-8,-4,-5,-7,10,-2,-8,5,2,1,-7,2,2,-8,-10,10,-8,-6,9,-7,5,-9,10,3,6,-2,10,-8,4,9,-1,-3,3,1,-5,3,10,2,-8,9,-10,-8,9,-5,1,10,-2,10,2,-9,2,8,-4,1,5,5,-5,6,-10,-8,6,5,-8,-5,-8,9,6,1,8,-3,4,-8,2,2,8,5,5,-4,-4,-5,-3,4,2,1,-9,-4,-2,-1,-10,-8,-10,-4,4,-10,-7,3,-1,-1,-4,4,-5,-6,1,-3,8,-9,6,-5,-3,9,10,-10,-8,-4,3,6,6,-9,9,10,-3,8,-2,10,-8,5,-2,8,8,-2,2,3,10,-5,-3,-6,3,8,7,-3,8,4,7,-9,8,9,3,-7,1,-2,8,1,-2,-9,6,7,-3,5,6,6,9,-3,-5,-3,-4,-1,5,-4,-2,7,8,-3,6,1,-3,-4,-2,3,7,6,-3,2,10,4,-10,9,6,8,-1,1,-8,4,-2,-9,-3,10,3,-3,-1,-4,-9,-8,-6,-6,-9,-9,-4,9,10,-6,-5,10,-2,3,-1,4,-2,6,1,5,8,7,8,9,5,4,4,8,-8,-9,9,-2,4,-9,9,6,-9,-1,-10,7,-8,5,-5,-9,-5,-6,10,5,6,-10,7,4,1,-3,8,6,10,-9,4,10,6,4,-3,-9,-3,6,9,4,-7,-10,-6,2,-8,3,-1,-1,-10,-3,6,-4,5,6,9,-3,-8,1,7,-10,-6,-7,5,-4,-7,-9,-10,-1,-4,6,-9,-10,-2,-9,-6,-4,-3,1,-2,-4,-3,1,8,6,-9,5,-3,-2,-8,4,3,8,10,3,-6,1,2,1,-2,-1,-1,-8,1,-9,-5,3,-10,4,-10,-4,-6,4,-4,7,5,-8,4,3,8,-4,-5,-10,8,5,-3,-4,3,-6,-6,5,-2,-10,-1,-4,4,-3,-7,-2,-9,4,-7,10,8,-8,-10,6,10,-10,8,1,6,-9,-6,-9,-9,6,3,7,-3,-6,10,7,-9,-8,-5,-6,-2,3,5,3,-6,1,7,3,-3,-5,2,-10,8,-5,-6,3,6,-7,1,7,1,9,6,-9,10,9,-5,10,-6,8,7,-1,9,-6,-8,-8]], dtype = "uint8")#candidate|1668|(1, 2100)|const|uint8
var_1669 = relay.var("var_1669", dtype = "uint16", shape = (845,))#candidate|1669|(845,)|var|uint16
call_1666 = relay.TupleGetItem(func_1441_call(relay.reshape(var_1667.astype('bool'), [4, 12, 9]), relay.reshape(call_1650.astype('float64'), [30,]), relay.reshape(const_1668.astype('uint8'), [1, 2100]), relay.reshape(var_1669.astype('uint16'), [65, 13]), ), 10)
call_1670 = relay.TupleGetItem(func_1447_call(relay.reshape(var_1667.astype('bool'), [4, 12, 9]), relay.reshape(call_1650.astype('float64'), [30,]), relay.reshape(const_1668.astype('uint8'), [1, 2100]), relay.reshape(var_1669.astype('uint16'), [65, 13]), ), 10)
bop_1676 = relay.floor_mod(const_1668.astype('float64'), call_1650.astype('float64')) # shape=(30, 2100)
bop_1679 = relay.floor_mod(const_1668.astype('float64'), call_1651.astype('float64')) # shape=(30, 2100)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1682 = relay.TupleGetItem(func_1282_call(), 2)
call_1683 = relay.TupleGetItem(func_1284_call(), 2)
output = relay.Tuple([call_1656,call_1666,var_1667,var_1669,bop_1676,call_1682,])
output2 = relay.Tuple([call_1657,call_1670,var_1667,var_1669,bop_1679,call_1683,])
func_1693 = relay.Function([var_1667,var_1669,], output)
mod['func_1693'] = func_1693
mod = relay.transform.InferType()(mod)
var_1694 = relay.var("var_1694", dtype = "bool", shape = (432,))#candidate|1694|(432,)|var|bool
var_1695 = relay.var("var_1695", dtype = "uint16", shape = (845,))#candidate|1695|(845,)|var|uint16
output = func_1693(var_1694,var_1695,)
func_1696 = relay.Function([var_1694,var_1695,], output)
mutated_mod['func_1696'] = func_1696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mod.get_global_var('func_1576')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_1715 = relay.TupleGetItem(func_1576_call(), 1)
call_1716 = relay.TupleGetItem(func_1578_call(), 1)
func_759_call = mod.get_global_var('func_759')
func_761_call = mutated_mod.get_global_var('func_761')
var_1721 = relay.var("var_1721", dtype = "uint16", shape = (845,))#candidate|1721|(845,)|var|uint16
call_1720 = relay.TupleGetItem(func_759_call(relay.reshape(var_1721.astype('uint16'), [13, 13, 5])), 1)
call_1722 = relay.TupleGetItem(func_761_call(relay.reshape(var_1721.astype('uint16'), [13, 13, 5])), 1)
func_868_call = mod.get_global_var('func_868')
func_871_call = mutated_mod.get_global_var('func_871')
var_1732 = relay.var("var_1732", dtype = "float32", shape = (468,))#candidate|1732|(468,)|var|float32
call_1731 = relay.TupleGetItem(func_868_call(relay.reshape(var_1732.astype('float32'), [13, 4, 9])), 0)
call_1733 = relay.TupleGetItem(func_871_call(relay.reshape(var_1732.astype('float32'), [13, 4, 9])), 0)
func_713_call = mod.get_global_var('func_713')
func_717_call = mutated_mod.get_global_var('func_717')
call_1739 = relay.TupleGetItem(func_713_call(relay.reshape(call_1720.astype('int64'), [3, 6, 11]), relay.reshape(call_1720.astype('int64'), [3, 6, 11]), ), 1)
call_1740 = relay.TupleGetItem(func_717_call(relay.reshape(call_1720.astype('int64'), [3, 6, 11]), relay.reshape(call_1720.astype('int64'), [3, 6, 11]), ), 1)
func_1576_call = mod.get_global_var('func_1576')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_1748 = relay.TupleGetItem(func_1576_call(), 1)
call_1749 = relay.TupleGetItem(func_1578_call(), 1)
func_1576_call = mod.get_global_var('func_1576')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_1779 = relay.TupleGetItem(func_1576_call(), 0)
call_1780 = relay.TupleGetItem(func_1578_call(), 0)
output = relay.Tuple([call_1715,call_1720,var_1721,call_1731,var_1732,call_1739,call_1748,call_1779,])
output2 = relay.Tuple([call_1716,call_1722,var_1721,call_1733,var_1732,call_1740,call_1749,call_1780,])
func_1781 = relay.Function([var_1721,var_1732,], output)
mod['func_1781'] = func_1781
mod = relay.transform.InferType()(mod)
var_1782 = relay.var("var_1782", dtype = "uint16", shape = (845,))#candidate|1782|(845,)|var|uint16
var_1783 = relay.var("var_1783", dtype = "float32", shape = (468,))#candidate|1783|(468,)|var|float32
output = func_1781(var_1782,var_1783,)
func_1784 = relay.Function([var_1782,var_1783,], output)
mutated_mod['func_1784'] = func_1784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1796 = relay.TupleGetItem(func_1282_call(), 2)
call_1797 = relay.TupleGetItem(func_1284_call(), 2)
const_1798 = relay.const([[[8.152737,-5.454243,-7.814516,5.483534,-9.573071],[0.124798,-3.556632,-2.908061,-9.370563,-4.168443],[-9.101185,1.972901,-9.476181,3.571486,2.018277],[-3.937896,-0.555406,9.785063,9.015122,2.167502],[6.666574,7.308477,6.972108,0.869853,6.532812],[-8.303744,0.752909,-4.930502,4.795697,1.353151]]], dtype = "float64")#candidate|1798|(1, 6, 5)|const|float64
bop_1799 = relay.maximum(call_1796.astype('uint16'), relay.reshape(const_1798.astype('uint16'), relay.shape_of(call_1796))) # shape=(1, 6, 5)
bop_1802 = relay.maximum(call_1797.astype('uint16'), relay.reshape(const_1798.astype('uint16'), relay.shape_of(call_1797))) # shape=(1, 6, 5)
var_1804 = relay.var("var_1804", dtype = "float64", shape = (1, 6, 5))#candidate|1804|(1, 6, 5)|var|float64
bop_1805 = relay.bitwise_and(const_1798.astype('uint16'), relay.reshape(var_1804.astype('uint16'), relay.shape_of(const_1798))) # shape=(1, 6, 5)
output = relay.Tuple([bop_1799,bop_1805,])
output2 = relay.Tuple([bop_1802,bop_1805,])
func_1811 = relay.Function([var_1804,], output)
mod['func_1811'] = func_1811
mod = relay.transform.InferType()(mod)
mutated_mod['func_1811'] = func_1811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1812 = relay.var("var_1812", dtype = "float64", shape = (1, 6, 5))#candidate|1812|(1, 6, 5)|var|float64
func_1811_call = mutated_mod.get_global_var('func_1811')
call_1813 = func_1811_call(var_1812)
output = call_1813
func_1814 = relay.Function([var_1812], output)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_1913 = relay.TupleGetItem(func_1282_call(), 1)
call_1914 = relay.TupleGetItem(func_1284_call(), 1)
output = relay.Tuple([call_1913,])
output2 = relay.Tuple([call_1914,])
func_1932 = relay.Function([], output)
mod['func_1932'] = func_1932
mod = relay.transform.InferType()(mod)
mutated_mod['func_1932'] = func_1932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mutated_mod.get_global_var('func_1932')
call_1933 = func_1932_call()
output = call_1933
func_1934 = relay.Function([], output)
mutated_mod['func_1934'] = func_1934
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1950 = relay.const([[[4.402717,3.271109,-5.670293,5.337006,-0.985819,9.921626,-8.975448,-1.977368,-6.776241,0.732781]],[[-7.187090,0.753107,-9.207844,-7.848215,-4.209350,-2.195017,6.072428,-6.938791,7.307556,-4.544272]],[[5.868349,5.394727,-2.510070,9.531386,-2.361762,8.422958,-0.961323,6.501879,2.236829,-8.249174]],[[2.116699,0.844068,-8.853509,7.811515,-1.015964,6.876896,6.032910,2.339024,6.182849,-8.921153]],[[-9.075663,-6.942462,4.726877,3.764195,7.359121,-5.855342,-0.579733,1.637525,0.133123,6.753265]],[[-8.501147,0.642022,4.726087,5.617306,-1.025995,-2.137350,-2.427478,7.454477,-2.476200,-6.271108]],[[-3.922617,3.655522,5.318232,-1.585466,4.155727,-0.444682,-2.220280,6.482002,-5.842317,-9.003508]],[[-7.219218,0.495547,-3.070739,-8.163578,-3.597619,-8.091951,7.545234,7.435225,0.971937,8.076654]],[[8.454356,-8.999541,-0.045124,1.778635,8.727492,6.932408,-7.903695,-1.818030,6.630304,-0.635424]],[[8.534887,0.125985,-6.971247,2.105211,-0.865473,-4.383061,-5.585868,1.119885,-3.072229,-3.645626]],[[3.128656,3.316069,-0.651274,-3.058336,6.881186,7.275998,6.887378,1.478245,-4.977487,8.457421]],[[-1.122655,-1.726657,3.251424,4.485518,4.984941,3.642213,2.360472,-0.567812,-9.246572,3.595726]],[[5.697741,-3.304292,2.629972,-6.042482,1.725075,-5.829365,2.716158,-0.923319,5.156355,-9.822884]],[[0.201596,3.259671,7.092104,5.446731,-0.180155,6.240797,5.969712,-0.803380,8.500904,-7.802328]],[[8.290177,-2.957315,-6.874967,0.387379,-8.606172,-2.223748,9.957293,-2.967178,4.649205,-7.632848]],[[3.544846,-3.658160,6.717869,8.321522,8.174386,1.249641,1.855363,-6.145626,2.772793,3.870942]]], dtype = "float32")#candidate|1950|(16, 1, 10)|const|float32
const_1951 = relay.const([[[8.757202,3.437327,7.226967,-2.468928,3.340896,-8.706110,8.613932,-5.832367,5.756045,4.261601]],[[7.747676,-4.059448,5.296616,6.644055,6.329020,3.737550,-4.370484,-0.289780,-7.611509,-0.696836]],[[2.651606,2.720527,3.419026,7.587266,3.165734,9.231728,-6.124199,9.923895,9.181348,6.502640]],[[-0.241600,6.494017,0.767833,-4.007015,-4.403104,-2.473042,7.154706,-1.296733,8.679367,-4.826938]],[[2.995524,9.196091,4.051956,0.506904,5.341264,-5.296121,-2.106043,3.168876,0.212557,1.141045]],[[-6.920608,5.061174,1.561105,-7.265652,4.988875,-7.983576,-2.735562,5.417454,-7.817636,-6.951929]],[[8.079764,1.221965,-7.621181,9.639447,8.311907,5.868902,-7.186185,3.426321,2.943189,-5.630528]],[[-8.897015,4.022172,5.399579,4.790481,9.639395,9.751730,-6.019969,-5.432886,1.075837,-9.988633]],[[9.267644,1.460953,-6.351906,4.640359,-5.931345,-4.806159,-3.004787,-0.899267,-8.598353,-7.586519]],[[3.341922,-1.213880,-9.068318,6.217609,6.832736,-6.889748,4.962352,-3.022799,4.320847,3.485983]],[[-4.594461,-4.041301,1.996257,-3.429871,-7.454237,-1.271874,-9.132262,3.382177,0.174942,9.241998]],[[-1.556422,0.527562,7.697637,6.221759,-1.230174,-3.688822,0.202391,4.741262,4.482568,-0.495581]],[[-3.313822,-8.252110,-6.429942,-6.547743,-0.414328,-0.797116,7.972346,-6.625625,1.810567,8.964410]],[[0.914662,-1.813725,3.825224,0.335349,6.850933,-1.753643,-4.764931,7.681084,8.266499,5.387323]],[[3.948343,-2.940416,3.029252,6.716458,6.280171,-5.592453,-0.211061,2.132055,6.004943,8.081338]],[[-0.062180,-4.890036,-5.219026,5.862574,7.375260,7.330337,-9.563504,-7.736441,-4.799733,9.906364]]], dtype = "float32")#candidate|1951|(16, 1, 10)|const|float32
bop_1952 = relay.add(const_1950.astype('float32'), relay.reshape(const_1951.astype('float32'), relay.shape_of(const_1950))) # shape=(16, 1, 10)
func_1150_call = mod.get_global_var('func_1150')
func_1154_call = mutated_mod.get_global_var('func_1154')
var_1959 = relay.var("var_1959", dtype = "uint64", shape = (90, 1))#candidate|1959|(90, 1)|var|uint64
call_1958 = func_1150_call(relay.reshape(var_1959.astype('uint64'), [2, 9, 5]), relay.reshape(var_1959.astype('uint64'), [2, 9, 5]), )
call_1960 = func_1150_call(relay.reshape(var_1959.astype('uint64'), [2, 9, 5]), relay.reshape(var_1959.astype('uint64'), [2, 9, 5]), )
uop_1963 = relay.log2(var_1959.astype('float32')) # shape=(90, 1)
output = relay.Tuple([bop_1952,call_1958,uop_1963,])
output2 = relay.Tuple([bop_1952,call_1960,uop_1963,])
func_1970 = relay.Function([var_1959,], output)
mod['func_1970'] = func_1970
mod = relay.transform.InferType()(mod)
mutated_mod['func_1970'] = func_1970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1971 = relay.var("var_1971", dtype = "uint64", shape = (90, 1))#candidate|1971|(90, 1)|var|uint64
func_1970_call = mutated_mod.get_global_var('func_1970')
call_1972 = func_1970_call(var_1971)
output = call_1972
func_1973 = relay.Function([var_1971], output)
mutated_mod['func_1973'] = func_1973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_2010 = relay.TupleGetItem(func_1932_call(), 0)
call_2011 = relay.TupleGetItem(func_1934_call(), 0)
output = relay.Tuple([call_2010,])
output2 = relay.Tuple([call_2011,])
func_2030 = relay.Function([], output)
mod['func_2030'] = func_2030
mod = relay.transform.InferType()(mod)
output = func_2030()
func_2031 = relay.Function([], output)
mutated_mod['func_2031'] = func_2031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mod.get_global_var('func_1576')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_2056 = relay.TupleGetItem(func_1576_call(), 1)
call_2057 = relay.TupleGetItem(func_1578_call(), 1)
output = call_2056
output2 = call_2057
func_2060 = relay.Function([], output)
mod['func_2060'] = func_2060
mod = relay.transform.InferType()(mod)
mutated_mod['func_2060'] = func_2060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mutated_mod.get_global_var('func_2060')
call_2061 = func_2060_call()
output = call_2061
func_2062 = relay.Function([], output)
mutated_mod['func_2062'] = func_2062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_2088 = relay.TupleGetItem(func_2030_call(), 0)
call_2089 = relay.TupleGetItem(func_2031_call(), 0)
var_2101 = relay.var("var_2101", dtype = "float32", shape = (12, 15, 4))#candidate|2101|(12, 15, 4)|var|float32
bop_2102 = relay.left_shift(call_2088.astype('uint64'), relay.reshape(var_2101.astype('uint64'), relay.shape_of(call_2088))) # shape=(12, 15, 4)
bop_2105 = relay.left_shift(call_2089.astype('uint64'), relay.reshape(var_2101.astype('uint64'), relay.shape_of(call_2089))) # shape=(12, 15, 4)
uop_2107 = relay.log2(call_2088.astype('float64')) # shape=(12, 15, 4)
uop_2109 = relay.log2(call_2089.astype('float64')) # shape=(12, 15, 4)
output = relay.Tuple([bop_2102,uop_2107,])
output2 = relay.Tuple([bop_2105,uop_2109,])
func_2115 = relay.Function([var_2101,], output)
mod['func_2115'] = func_2115
mod = relay.transform.InferType()(mod)
mutated_mod['func_2115'] = func_2115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2116 = relay.var("var_2116", dtype = "float32", shape = (12, 15, 4))#candidate|2116|(12, 15, 4)|var|float32
func_2115_call = mutated_mod.get_global_var('func_2115')
call_2117 = func_2115_call(var_2116)
output = call_2117
func_2118 = relay.Function([var_2116], output)
mutated_mod['func_2118'] = func_2118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_2142 = func_2060_call()
call_2143 = func_2060_call()
func_1038_call = mod.get_global_var('func_1038')
func_1042_call = mutated_mod.get_global_var('func_1042')
const_2152 = relay.const([[-4,2,-2,-1,-2,-8,1,-5,4,-2,3,-1,-1,10,10,-8,6,-6,8,7,-2,-4,-6,-9,10,-3,-9,8,9,-1,-5,1,10,-10,-5,-10,-1,9,-1,10,-2,-6,9,2,3,-7,4,-10,7,3,-8,-8,7,-8,8,4,3,4,6,-2,-9,5,-6,8,-4,5,5,-1,-3,-3,-9,2,4,5,-1,-9,3,4,1,-3,4,-9,1,1,10,-4,8,-2,1,-4,-2,3,-9,5,10,6,-7,-2,6,-4,-5,7,6,8,5,-10,-5,2,-1,-5,-6,4,6,6,7,-8,10,-8,3,6,7,2,-10,-5,3,1,-1,-5,-8,6,-10,-8,10,-9,-1,8,10,8,-6,10,-5,1,3,-4,8,6,6,10,-1,6,3,-8,6,2,2,-5,10,-4,3,-4,10,3,-6,-10,2,-7,-2,8,2,1,-10,1,-4,5,-5,-10,-10,8,8,5,6,4,8,7,2,3,6,-5,1,8,10,-10,3,-10,-8,10,6,3,8,3,-7,5,2,-4,10,10,9,2,-10,2,5,3,8,5,-5,9,7,-5,-1,-4,10,1,-8,1,5,-7,7,-2,-7,4,-7,3,-4,3,-9,6,-4,9,10,-1,5,-5,-9,1,6,-7,-8,-7,1,10,10,7,5,-6,-8,-1,-5,9,-5,-10,-6,4,-7,8,4,8,-4,-7,-3,-5,2,-5,-2,10,5,-8,7,6,-6,2,10,3,-4,-4,-5,-7,-5,-3,1,2,-3,8,4,-4,6,-8,3,-4,-4,-4,-7,6,-7,7,-2,3,-9,5,-5,-4,4,-9,3,-4,2,-6,10,9,2,-5,-6,2,-7,1,-8,3,6,1,-5,-8,4,6,-7,3,-2,6,5,7,6,6,-4,-6,-2,2,1,-6,4,-10,6,10,10,-10,-5,8,7,-3,-6,-1,-7,8,1,-4,-6,7,6,2,5,-2,8,-10,-8,6,-6,-2,10,-1,-4,7,7,-1,-1,-2,4,-7,-6,9,-1,-7,4,8,-1,-6,-3,-2,4,5,8,-2,-1,-7,5,2,5,-3,-1,4,1,7,-10,4,4,-1,-7,7,3,7,-3,4,-2,-6,9,7,7,-3,4,-3,9,3,9,5,3,10,5,-2,2,-2,-10,-2,-2,6,-4,-6,-4,-10,6,-5,-9,3,-8,3,-6,10,3,-3,-6,-2,-7,-3,5,2,-9,10,-1,-4,-1,8,1,1,9,-10,2,-5,-8,8,2,-5,-8,-8,8,-9,-8,-6,6,-4,3,1,-4,2,5,-5,9,-5,-5,-7,7,-3,4,4,7,6,2,5,4,-7,-5,-5,2,-5,-4,-1,-10,-6,4,-6,-9,-2,10,8,3,2,-10,4,8,1,2,3,-6,6,-10,-10,-5,-2,8,-8,5,-10,-6,7,4,5,9,7,8,3,10,-9,-6,9,-10,8,8,10,-2,5,6,1,-10,9,6,6,-7,-2,-5,-10,9,-2,-4,8,-1,2,-6,1,5,-4,3,-8,6,-3,10,-7,1,-5,-2,-1,-7,8,-9,-9,-10,7,4,4,-5,2,2,4,1,-8,-2,5,3,-3,6,-7,5,-10,9,-1,-2,-8,2,-8,1,7,-5,3,8,10,-9,10,9,5,5,2,8,-2,4,-5,-5,10,-5,-8,2,8,-5,5,8,3,7,9,-7,-8,-2,-8,7,9,-5,-6,-4,-8,3,-4,5,-2,-3,10,5,-3,-2,6,-2,-3,1,-4,6,-4,5,-7,5,3,-4,10,-2,6,5,-5,-6,-4,10,2,7,-2,-5,-3,2,-10,10,6,4,-5,-6,6,1,-9,-7,4,8,-6,-8,-5],[6,7,-9,7,-6,2,7,6,-9,8,7,-2,9,-9,-9,-7,2,-3,6,-4,-4,-8,4,8,8,-9,-7,9,-1,3,5,-4,-4,7,7,-6,-8,4,8,-7,-8,-1,-9,3,1,9,5,-2,-10,-9,-10,10,9,2,-9,-4,-5,-4,-7,4,2,-3,-5,-8,-4,4,1,-4,1,8,4,7,-8,4,7,-3,-9,7,-3,-1,-1,-3,-2,-7,-4,10,-8,7,-9,1,-9,6,5,2,-8,5,1,-6,-8,5,-7,-1,-4,-10,9,9,-8,-6,8,-10,-4,-8,4,7,4,-5,-4,5,-5,1,6,2,4,-6,-7,-1,-1,5,2,9,-1,-6,-9,5,5,7,-7,-5,8,-3,8,-7,2,6,3,9,-8,-1,9,-2,-5,6,-8,2,2,3,1,1,-2,-7,-2,1,5,-8,9,7,-9,-5,-5,4,-4,9,9,-7,9,-5,2,1,-7,2,-1,1,3,10,5,-5,-3,2,-6,-2,-7,-4,-3,6,7,10,-8,-9,-7,9,3,10,-8,-9,-5,9,-7,1,-1,-4,7,-6,4,-6,-6,-4,-6,-6,-9,1,5,-6,-5,4,3,6,-1,5,-10,8,-5,-7,-7,7,10,-7,-2,-9,9,-4,-3,-4,-3,-2,1,10,-2,-7,2,2,6,8,2,4,3,6,8,-4,1,5,6,8,-2,5,-10,5,8,-3,-1,4,5,-3,9,6,-5,-4,6,-1,8,2,4,-6,-1,3,-8,-9,6,-7,-1,-7,-4,7,4,8,-3,3,-8,-10,-10,4,-9,-2,-4,9,2,2,-8,3,7,7,-2,9,-9,-2,9,8,8,2,9,-7,-9,4,-8,-3,-10,6,1,3,-2,1,-8,1,7,10,-5,6,6,3,-8,-2,7,10,3,5,6,-1,5,2,3,7,-9,-2,-2,10,1,8,-9,-3,-10,10,-6,-4,-10,2,-8,-3,-3,-3,-10,-7,-6,9,1,-8,10,-9,-8,5,9,3,-8,8,1,-6,-4,-2,-6,-6,2,-2,-3,-9,3,-10,3,4,2,-1,-1,6,10,8,10,4,9,6,-6,2,1,4,7,-7,7,-6,7,-8,1,-2,9,4,-4,9,-7,9,-4,4,-2,2,9,10,9,10,5,2,-1,-1,9,3,10,4,9,-7,8,-2,7,-2,1,10,-5,-9,1,9,1,-3,-8,-7,4,-9,3,-7,3,-1,-3,-2,3,5,1,-3,-10,5,3,4,-6,-8,-4,9,6,6,1,8,-9,-10,-8,5,7,-5,-2,8,4,6,4,-9,-7,2,1,4,4,2,-4,2,-7,-4,8,6,1,-1,-7,-9,-3,2,2,6,9,10,5,7,-8,2,4,-7,-9,-1,-7,3,-1,8,1,9,-3,3,2,-1,-10,6,8,10,2,-6,-2,-10,3,8,1,-6,-8,-2,9,-1,-4,-3,-8,2,4,8,-6,-3,-6,5,-8,-4,9,9,9,9,4,-10,4,-4,-1,-8,-3,-7,10,8,2,6,-10,-1,4,-4,1,3,-7,8,1,6,5,-3,-7,4,-5,-3,7,3,4,-4,-1,-2,3,-6,-4,-8,-8,-5,-2,-4,-1,-1,3,-4,1,-1,4,-1,-3,-3,1,-7,2,4,1,10,-7,2,5,4,-3,-8,-10,4,-8,-10,8,-8,9,4,-1,4,7,5,-2,-8,6,4,5,-9,6,-1,-9,5,-4,8,3,-3,-7,-2,1,-8,4,-5,9,-1,5,7,3,-4,1,2,5,4,-6,-3,-6,4,-2,-10,-2,3,-5,3,-4,-6,-10,-9,-4,7,1,6,10,9,8,-2,-4,-2,-5,8,-4,4,-5,-7],[8,-10,3,-8,6,6,1,-6,2,6,3,-9,-10,-10,-6,1,-2,-4,-7,-1,-4,-8,-4,-9,-4,-6,-9,-5,7,-4,-4,-10,-8,-3,-9,-9,-1,7,3,4,3,4,6,-10,7,-8,9,-9,-2,-1,9,5,6,9,-10,-7,-4,4,2,-3,-8,-2,-8,-5,5,5,-5,-6,-2,10,-10,4,8,4,-4,1,-9,-10,-5,-9,-10,-6,5,-7,9,-1,-2,2,3,-2,-4,-8,5,10,-4,2,-5,10,-2,-9,4,-9,4,-8,7,3,-2,-4,10,7,-7,9,-7,6,-6,10,4,8,-3,5,6,-3,1,-7,5,7,3,6,5,-9,6,2,-3,7,7,-9,-2,-5,-4,-5,6,-1,-8,-1,8,5,-3,1,7,3,-10,9,7,-4,-6,-9,3,-1,6,5,4,-5,6,1,6,7,8,-7,-10,5,-1,8,2,-8,-1,-2,2,-10,-5,-2,-6,-6,-7,-9,-3,-2,-9,-10,-10,-9,1,6,1,4,10,9,-6,-2,6,-9,6,-3,2,5,-2,-2,8,-8,7,-8,-9,5,-2,10,8,8,3,-8,7,-6,10,3,10,-10,5,-4,-5,-2,7,6,3,9,5,10,3,-2,8,10,1,4,7,2,8,10,8,-1,8,-9,-9,7,-7,-2,8,-10,3,-7,-4,4,-3,-7,8,3,8,-1,1,7,-10,-4,3,7,9,-6,-3,3,5,-8,-10,1,3,4,-3,-3,-2,-1,-10,-10,-2,-10,-9,10,4,8,-7,1,2,-3,8,10,-10,4,-7,6,5,4,-10,-7,-10,-8,6,8,-5,-5,-6,3,-3,-7,5,2,1,3,10,-6,7,-7,3,10,-6,-1,9,-10,2,5,-1,5,-4,-3,-10,-5,5,1,9,6,-6,8,10,10,-5,9,-3,-10,-5,-3,4,-6,-10,-6,8,-4,8,2,2,-2,-8,-5,-5,9,-9,-7,-10,1,7,1,-1,10,9,-9,-3,-1,10,-3,10,5,6,-2,2,-8,-3,4,6,-3,-7,7,1,-2,-4,6,-7,-5,10,9,3,2,-8,9,-4,8,-5,1,5,-7,-8,-6,3,-10,-1,6,10,-1,8,-10,-6,-4,-7,7,10,-2,-8,-7,-10,-3,-10,6,-10,-6,-10,-3,-9,7,3,8,9,-4,-10,5,10,4,10,-9,8,-9,4,-7,8,-10,8,-4,10,2,-1,-2,7,-10,-8,7,6,6,-7,-4,-7,-6,4,1,-10,-6,2,-3,-5,-7,-3,9,-10,1,10,-10,2,1,8,10,7,-10,-5,1,7,3,2,-1,-8,8,8,4,-6,3,-9,1,-10,-8,-5,7,4,-3,-3,-7,-7,-9,-6,4,-10,-7,2,8,10,-9,2,6,7,4,-4,-2,-7,5,-8,7,-9,-8,4,-5,1,-1,1,2,-7,-1,-7,-3,8,10,-10,-3,-1,10,-8,-2,-10,-5,-10,-10,-1,-9,5,-3,-1,-8,-9,-8,5,-8,2,5,4,-4,7,1,-6,-6,-4,6,1,-8,9,3,-3,-9,2,8,4,-10,5,-10,-4,4,7,-5,5,1,9,-10,-6,1,4,5,1,-10,-9,-9,-7,2,4,2,-3,5,-8,6,3,1,-7,5,4,-6,6,-5,-10,-8,-6,-6,-5,1,-6,-7,-4,-8,5,-9,-1,-1,10,-1,-4,-7,-1,-9,3,-2,-9,-2,7,4,-5,10,-7,4,-6,-2,-6,-3,9,7,-4,-3,-6,-5,-4,5,-1,-5,6,10,4,4,-10,-9,9,-2,-3,-5,9,3,9,1,3,-2,5,4,-5,-1,5,3,6,-6,-10,1,3,3,2,-5,9,-5,-3,-6,-7,-3]], dtype = "uint8")#candidate|2152|(3, 700)|const|uint8
const_2153 = relay.const([[-2,4,3,3,9,5,6,8,-10,5,8,2,1,-10,3,-10,2,-6,-9,-9,3,-10,6,1,2,-3,-1,-8,2,5,-5,-10,-6,2,-5,4,6,1,10,9,7,-4,-8,-1,8,6,1,-2,2,4,4,-9,2,6,1,-5,9,9,2,8,5,5,9,5,-1],[3,9,-10,2,-4,-9,-1,10,6,9,-2,-9,10,-6,1,6,-3,-6,5,-6,8,9,8,9,-1,-9,3,-4,5,-10,7,10,2,-2,-3,7,8,1,7,-9,8,-3,-3,6,7,4,-3,-4,10,3,6,5,7,-9,7,3,3,8,5,6,9,7,-4,-6,-9],[-8,-8,1,10,-10,-8,-4,-10,-9,-6,8,6,-7,8,-5,-4,-2,-7,-10,2,5,2,1,4,9,-6,3,-4,-2,-8,1,-1,6,5,6,7,-7,3,-3,1,-6,10,-9,-2,9,8,-1,3,9,-5,-7,-8,-1,6,7,7,2,-5,-4,-2,6,-4,-10,-4,7],[2,2,-10,-1,1,2,3,7,-7,-4,5,10,5,-6,-7,-10,7,-10,-7,1,-1,5,-9,2,3,-4,6,-8,3,1,5,10,-5,8,3,1,-4,-10,9,6,9,-2,3,-5,-4,-8,-10,-2,1,7,9,10,6,-6,-3,9,-4,7,1,-8,8,5,-4,-3,6],[9,-9,1,-8,-2,-3,2,-2,-7,-1,-9,10,-9,10,9,3,3,4,9,3,2,-2,3,5,8,-6,-7,2,1,7,10,-6,3,-7,4,2,5,-2,8,2,-3,5,-5,3,1,-7,-9,-3,5,-5,-1,-6,-2,7,-6,-8,-7,9,1,9,-4,-2,9,5,5],[-6,-8,-3,3,-2,8,9,4,9,-2,9,5,8,7,2,5,8,-2,-6,2,-5,-8,6,-4,9,-3,9,10,-6,3,6,-5,1,-7,2,5,-10,4,4,10,4,-2,5,-2,-8,8,1,10,1,-1,7,-2,6,10,4,5,-7,-2,-10,1,9,2,3,4,-9],[6,-10,10,4,7,-4,-5,1,1,-2,-9,-4,-3,-1,10,1,-6,6,-8,-8,8,9,-2,1,-4,-8,5,2,-8,2,-4,3,5,-8,10,8,-7,-3,9,-2,8,4,1,-1,10,6,8,6,1,-8,9,10,3,2,-9,5,-4,3,4,4,-7,9,-10,-1,-8],[-1,-7,2,-6,3,9,-5,6,10,-9,-5,-5,-4,-1,5,5,6,-10,-1,-5,2,-2,-8,-2,-10,3,9,-2,-4,-9,-4,-6,8,1,2,6,9,-10,10,-7,7,8,9,-1,4,-1,-6,-1,5,-6,7,3,-1,4,7,2,1,-9,1,-1,-10,3,3,2,5],[7,1,-9,4,-4,5,4,7,6,5,-10,2,-3,-9,-5,5,6,5,-8,9,2,9,9,1,-1,3,-3,9,1,3,2,-9,5,4,-3,-7,-8,-10,2,10,-10,-9,9,-9,5,6,1,6,1,9,-4,10,-3,-8,-4,10,-3,-6,-6,1,-6,-9,-6,3,6],[3,10,-3,-4,10,9,-3,-1,-3,4,8,-4,-9,3,-8,-3,10,-2,6,2,-5,8,-3,7,-5,1,2,-2,4,2,4,-2,-9,-7,-2,1,-10,-7,5,9,6,-5,5,-9,3,-10,-7,3,-9,-10,-9,-2,9,4,-3,6,-2,8,-8,-6,-8,-10,-3,10,-3],[-4,-1,-3,-6,-8,1,10,7,-3,-5,-8,7,10,10,1,8,8,-2,2,10,-8,-6,-4,-6,-9,-6,-6,4,-5,3,10,1,-5,-10,2,-8,1,-9,-8,10,6,4,-10,-7,3,-9,5,4,7,-6,-4,-1,10,-7,-5,-6,4,-2,-8,-7,8,7,-10,-3,3],[-9,-4,1,2,-4,9,-5,-10,7,-5,1,4,7,9,2,9,-10,-4,9,-10,-3,3,-4,-7,2,-7,5,1,7,4,-1,-3,-6,-3,-4,-7,4,7,2,-8,5,-7,9,4,9,5,3,-2,-6,-5,10,5,10,1,-5,-6,6,-1,-1,-1,5,10,-4,6,-7],[-10,2,10,-9,-6,2,5,3,-5,2,-7,-1,-6,9,-7,-4,-3,4,8,6,8,-4,-10,-8,5,2,-1,-9,10,-1,-4,5,9,5,-1,-1,-1,-1,-6,-7,-2,-1,1,-10,-7,9,-5,-1,4,-4,-8,-5,2,1,6,8,-6,1,-10,10,3,9,4,6,7]], dtype = "uint16")#candidate|2153|(13, 65)|const|uint16
call_2151 = relay.TupleGetItem(func_1038_call(relay.reshape(const_2152.astype('uint8'), [10, 14, 15]), relay.reshape(const_2153.astype('uint16'), [845,]), ), 1)
call_2154 = relay.TupleGetItem(func_1042_call(relay.reshape(const_2152.astype('uint8'), [10, 14, 15]), relay.reshape(const_2153.astype('uint16'), [845,]), ), 1)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_2155 = relay.TupleGetItem(func_1932_call(), 0)
call_2156 = relay.TupleGetItem(func_1934_call(), 0)
output = relay.Tuple([call_2142,call_2151,const_2152,const_2153,call_2155,])
output2 = relay.Tuple([call_2143,call_2154,const_2152,const_2153,call_2156,])
func_2158 = relay.Function([], output)
mod['func_2158'] = func_2158
mod = relay.transform.InferType()(mod)
mutated_mod['func_2158'] = func_2158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mutated_mod.get_global_var('func_2158')
call_2159 = func_2158_call()
output = call_2159
func_2160 = relay.Function([], output)
mutated_mod['func_2160'] = func_2160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_2249 = func_2060_call()
call_2250 = func_2060_call()
output = relay.Tuple([call_2249,])
output2 = relay.Tuple([call_2250,])
func_2255 = relay.Function([], output)
mod['func_2255'] = func_2255
mod = relay.transform.InferType()(mod)
mutated_mod['func_2255'] = func_2255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2255_call = mutated_mod.get_global_var('func_2255')
call_2256 = func_2255_call()
output = call_2256
func_2257 = relay.Function([], output)
mutated_mod['func_2257'] = func_2257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_2279 = relay.TupleGetItem(func_1932_call(), 0)
call_2280 = relay.TupleGetItem(func_1934_call(), 0)
output = call_2279
output2 = call_2280
func_2282 = relay.Function([], output)
mod['func_2282'] = func_2282
mod = relay.transform.InferType()(mod)
output = func_2282()
func_2283 = relay.Function([], output)
mutated_mod['func_2283'] = func_2283
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2356 = relay.const([[[4,10,10,-1,5,-9,3,-4],[8,10,2,-7,2,-1,9,-8],[7,-9,7,8,-1,-4,-8,1],[-10,3,2,2,-7,-4,-6,-1],[10,2,2,-1,4,9,-4,9],[1,9,-9,7,3,4,2,2],[5,-9,-3,-10,-6,8,-9,-5],[6,-2,-4,-3,-10,6,-10,4],[-4,2,3,-2,-1,10,-7,8],[6,10,-1,-7,-10,5,-1,7],[1,-1,-1,5,5,-2,10,-10],[2,-6,-5,-5,6,-4,8,2],[-3,6,-10,-6,8,-9,-7,-5],[-9,1,-2,8,4,-4,-5,2],[3,-10,10,-8,-5,7,6,-9]],[[2,8,6,-3,7,-3,-6,-8],[4,2,5,4,-8,2,-4,-8],[2,-2,1,-9,3,-1,-8,7],[-9,5,10,-6,2,-2,-10,5],[-8,10,-2,-8,-10,3,-5,9],[-1,8,6,10,1,-6,-4,-2],[-10,2,1,7,6,-1,-2,7],[-7,-5,-10,-2,-8,-3,-1,-7],[-7,-3,6,2,-3,4,-7,9],[7,-8,-10,7,1,2,-5,3],[7,-10,9,6,-9,7,3,-2],[1,-7,-10,-1,-4,-3,4,-3],[-3,4,7,1,-2,3,-6,6],[-5,-2,-7,8,-8,2,-6,-2],[8,-10,-8,4,-1,5,-2,-9]],[[-4,-3,-4,4,-1,-5,-3,-7],[-5,-9,-8,-4,10,10,-2,8],[-8,7,-2,-5,1,-2,-8,-7],[-6,7,9,-4,-3,-10,3,-9],[1,-4,-10,5,-10,-6,-8,1],[-1,-9,-10,-1,9,-5,9,5],[3,2,10,-3,-6,7,3,-9],[6,7,3,8,7,-6,1,-6],[-1,-6,-8,9,7,10,-4,6],[-9,8,9,5,3,-4,-3,9],[-9,-4,3,2,3,-1,1,9],[-10,-1,4,5,-7,2,-9,5],[5,6,-7,9,10,-7,1,10],[-2,8,-7,5,-4,-6,-7,3],[-2,-1,7,9,4,-10,-1,-4]],[[-1,10,9,-6,2,6,-4,-5],[-9,-5,8,6,9,7,-6,2],[-7,-7,-8,9,-4,-3,-5,-5],[5,-3,-6,-5,4,-5,-6,10],[-1,-10,-10,1,6,-4,-2,-7],[1,-2,-10,-1,10,5,-5,9],[-1,-5,8,7,-1,6,2,-2],[5,1,2,10,-10,-10,-1,10],[-8,5,10,9,-4,7,-10,10],[-7,-1,-3,-3,-5,9,-9,-7],[2,2,-3,7,8,5,5,3],[4,-10,-4,-1,5,-6,7,-1],[5,-4,6,8,-5,2,-6,-3],[9,-9,-8,2,10,-8,-1,-9],[4,-7,-5,4,9,2,-1,8]],[[-2,-4,9,4,4,-8,2,-3],[1,9,-8,5,-9,5,-6,1],[-9,-6,1,-10,3,1,-5,4],[-8,-1,-3,4,-5,-3,1,7],[-7,10,5,4,-8,-5,-1,9],[9,-8,6,6,10,-2,-3,2],[-4,-9,-4,8,10,-5,2,2],[1,8,1,-9,-5,-3,10,10],[8,4,4,4,-7,7,-2,-5],[-7,10,-8,1,10,4,7,-3],[-5,9,-8,5,3,-7,1,1],[4,7,10,5,-10,-9,3,4],[-8,-1,-9,4,-10,-10,-2,8],[2,-5,-3,-4,9,2,5,10],[-10,-10,9,2,6,8,-10,-3]],[[4,-7,-8,10,4,9,-7,-3],[-2,-5,-8,10,-8,1,7,-2],[-1,5,-10,9,4,-3,1,-7],[10,5,10,1,4,-10,7,-9],[3,-2,-1,-6,10,-6,-5,5],[-7,-3,-4,9,-8,8,-10,-6],[4,-5,8,8,1,1,8,-1],[-6,4,-9,-9,-1,-4,5,4],[-5,-4,10,-3,7,7,9,2],[2,-5,-8,-10,3,-10,2,-10],[10,-2,-6,-1,6,-8,-4,10],[6,-7,-2,-1,-10,3,-4,-3],[-7,-5,9,-5,2,1,2,3],[7,-2,8,-3,-4,-2,-1,3],[9,10,3,-2,9,-4,5,8]],[[-7,10,-4,4,1,-6,-3,2],[-6,10,8,-8,-5,7,-10,-1],[-5,-2,6,-7,-6,-1,2,2],[6,1,6,-2,-2,3,3,-8],[-5,-7,8,7,-7,-2,-2,10],[6,1,-1,-5,1,2,1,4],[10,-6,5,2,-4,4,-9,-3],[6,-9,8,-9,-1,4,-2,-10],[10,-1,-1,-9,-7,2,-7,-3],[8,9,7,6,-10,-1,-7,-7],[7,3,2,5,-5,7,10,7],[1,6,8,7,-2,-2,-1,5],[-6,-6,-10,-8,-7,-1,5,7],[-5,-6,-6,-1,-5,-7,-2,2],[3,-8,10,10,-3,4,-8,-5]]], dtype = "int64")#candidate|2356|(7, 15, 8)|const|int64
const_2357 = relay.const([[[-2,-3,-10,2,10,4,1,7],[2,9,10,1,10,-10,5,10],[-2,6,7,6,6,-3,-5,4],[-2,5,10,-3,-7,5,-8,-1],[-10,-4,5,-4,2,-7,-8,2],[-6,1,6,-8,-10,7,10,10],[-7,6,-6,4,-8,3,-1,-7],[6,3,-3,-5,6,2,-1,5],[-9,-3,-3,-1,7,-8,-2,7],[2,-8,-3,-9,8,-6,-4,-9],[5,-7,9,9,5,6,10,-3],[-5,9,-7,-8,2,6,-8,10],[-6,-2,-5,1,-6,-7,-2,1],[3,-5,10,7,-1,7,-7,3],[-4,-8,-5,10,8,10,-8,-7]],[[-2,-3,-8,-6,3,-10,-2,2],[7,-4,-1,-4,2,10,6,2],[2,2,-8,-10,-2,9,-3,-10],[3,5,-10,4,6,5,1,-9],[5,-2,-2,3,-3,9,-5,10],[-5,-1,-7,-1,9,4,5,3],[-7,-4,9,2,-2,-10,10,-5],[5,1,1,3,-8,-1,2,-3],[-1,7,-4,10,10,3,9,4],[-3,6,-7,-5,-7,5,2,-8],[5,-3,-6,5,2,-7,-3,7],[-6,-4,-1,7,7,7,2,-2],[-3,-5,7,-5,7,2,-3,-8],[1,3,10,1,-5,-9,-8,-3],[-6,-9,8,6,6,-7,-8,-9]],[[6,-2,-3,8,-3,-5,7,-1],[-6,-10,2,2,-3,-8,-4,9],[-8,-8,3,-9,2,7,-1,4],[7,-4,7,1,-4,10,-4,10],[9,-3,6,1,7,7,6,-7],[-7,-4,-8,-6,-3,-2,7,-9],[10,3,7,3,-1,1,-4,-10],[9,5,10,2,10,-10,-6,7],[4,-3,3,-4,8,2,4,-3],[10,2,1,-3,8,2,-4,-1],[9,9,9,6,9,-9,2,5],[10,-1,-1,-6,10,2,-8,-2],[4,1,-5,1,7,-8,-10,2],[-2,4,7,-2,-1,3,-5,8],[-8,-5,10,-8,5,-7,-1,-8]],[[-1,-6,-4,7,3,5,-5,-9],[6,8,1,-2,-2,-3,7,5],[4,6,10,-5,1,10,5,-1],[-7,-6,4,5,8,-10,1,-10],[-5,-5,10,-7,-2,-9,8,9],[-10,4,-4,10,8,6,5,6],[-4,6,-1,-5,10,1,7,-5],[-8,8,9,5,-10,-9,-6,-7],[-6,-4,-6,1,6,-5,-5,-7],[1,-6,-7,-10,-1,-4,-3,-7],[3,-7,2,-4,1,9,-4,-10],[4,-5,-4,-8,5,-2,-2,-9],[-2,-4,4,3,1,-3,10,10],[-7,5,-2,-8,4,7,-1,-2],[3,-9,8,-10,4,4,7,10]],[[-8,9,7,-1,7,10,6,-5],[10,4,6,4,9,5,-1,2],[-9,3,8,10,4,5,2,7],[-6,9,-6,3,1,1,-5,3],[-4,2,2,9,-4,4,-6,9],[3,-3,8,-4,6,-5,10,4],[6,-8,-2,2,1,3,8,-9],[-7,-10,8,6,-9,4,-10,-7],[-8,5,-2,-5,5,-2,7,4],[4,9,-5,-8,7,-8,-10,-1],[10,8,3,4,-9,-10,8,10],[-7,-5,-5,1,-3,-7,1,-1],[6,-2,-3,8,3,-2,-4,-4],[-3,-5,10,-10,-2,7,-7,-6],[-10,-5,-5,8,-10,10,3,5]],[[2,4,-6,6,1,3,2,2],[-6,-6,9,10,4,-3,5,-3],[-10,9,-9,-3,-8,8,-4,3],[-7,-2,5,-6,-1,6,-1,-10],[-5,-6,-6,7,-5,-4,-7,-10],[8,-1,-3,3,-9,9,9,-10],[10,1,7,10,2,5,-10,4],[-7,2,3,6,-6,2,4,-2],[-10,-10,2,10,-3,3,-10,-5],[3,8,5,-10,9,-8,5,-7],[6,1,1,-2,-6,10,-4,-4],[-2,-7,-8,-10,10,-10,-2,10],[-8,6,2,-4,6,4,-8,-9],[3,-9,-4,6,9,-8,4,-10],[9,-10,5,9,7,-3,4,-7]],[[-9,-7,-7,8,-10,-8,-4,-7],[-6,4,-10,-5,6,3,-2,-8],[7,6,8,-10,8,-5,8,-5],[-8,6,-2,6,-6,10,7,1],[-3,8,8,-2,-5,1,8,8],[5,-5,-2,4,9,-8,-2,-2],[3,-6,7,-1,4,8,8,-7],[7,-7,-4,8,5,-2,4,-1],[6,-10,-7,7,-3,-5,-2,-3],[8,-9,10,-6,3,5,-1,-4],[6,-2,-7,8,6,8,-10,7],[10,10,3,-9,3,-6,10,3],[-6,-1,-2,2,4,5,2,2],[8,-3,8,-9,-6,5,-7,-2],[-1,-7,-3,2,8,3,-9,-1]]], dtype = "int64")#candidate|2357|(7, 15, 8)|const|int64
bop_2358 = relay.minimum(const_2356.astype('int64'), relay.reshape(const_2357.astype('int64'), relay.shape_of(const_2356))) # shape=(7, 15, 8)
output = relay.Tuple([bop_2358,])
output2 = relay.Tuple([bop_2358,])
func_2363 = relay.Function([], output)
mod['func_2363'] = func_2363
mod = relay.transform.InferType()(mod)
output = func_2363()
func_2364 = relay.Function([], output)
mutated_mod['func_2364'] = func_2364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2374 = relay.var("var_2374", dtype = "float32", shape = (15, 3, 7))#candidate|2374|(15, 3, 7)|var|float32
uop_2375 = relay.log10(var_2374.astype('float32')) # shape=(15, 3, 7)
func_759_call = mod.get_global_var('func_759')
func_761_call = mutated_mod.get_global_var('func_761')
var_2391 = relay.var("var_2391", dtype = "uint16", shape = (1, 845))#candidate|2391|(1, 845)|var|uint16
call_2390 = relay.TupleGetItem(func_759_call(relay.reshape(var_2391.astype('uint16'), [13, 13, 5])), 1)
call_2392 = relay.TupleGetItem(func_761_call(relay.reshape(var_2391.astype('uint16'), [13, 13, 5])), 1)
bop_2397 = relay.power(uop_2375.astype('float32'), relay.reshape(var_2374.astype('float32'), relay.shape_of(uop_2375))) # shape=(15, 3, 7)
func_2115_call = mod.get_global_var('func_2115')
func_2118_call = mutated_mod.get_global_var('func_2118')
var_2408 = relay.var("var_2408", dtype = "float32", shape = (720,))#candidate|2408|(720,)|var|float32
call_2407 = relay.TupleGetItem(func_2115_call(relay.reshape(var_2408.astype('float32'), [12, 15, 4])), 0)
call_2409 = relay.TupleGetItem(func_2118_call(relay.reshape(var_2408.astype('float32'), [12, 15, 4])), 0)
func_2158_call = mod.get_global_var('func_2158')
func_2160_call = mutated_mod.get_global_var('func_2160')
call_2413 = relay.TupleGetItem(func_2158_call(), 0)
call_2414 = relay.TupleGetItem(func_2160_call(), 0)
output = relay.Tuple([call_2390,var_2391,bop_2397,call_2407,var_2408,call_2413,])
output2 = relay.Tuple([call_2392,var_2391,bop_2397,call_2409,var_2408,call_2414,])
func_2421 = relay.Function([var_2374,var_2391,var_2408,], output)
mod['func_2421'] = func_2421
mod = relay.transform.InferType()(mod)
var_2422 = relay.var("var_2422", dtype = "float32", shape = (15, 3, 7))#candidate|2422|(15, 3, 7)|var|float32
var_2423 = relay.var("var_2423", dtype = "uint16", shape = (1, 845))#candidate|2423|(1, 845)|var|uint16
var_2424 = relay.var("var_2424", dtype = "float32", shape = (720,))#candidate|2424|(720,)|var|float32
output = func_2421(var_2422,var_2423,var_2424,)
func_2425 = relay.Function([var_2422,var_2423,var_2424,], output)
mutated_mod['func_2425'] = func_2425
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2434 = relay.const([[[5,-5,6,-6,-3,-10,-3,8,-5,-1,1],[-1,-7,5,-5,1,8,2,-3,1,-1,7],[-1,1,8,-7,6,-7,2,-10,-8,8,-6],[-10,-9,5,1,5,8,9,8,6,-3,-6],[3,-3,8,9,-2,-2,-1,2,-2,-5,10],[8,-10,-1,-5,2,-4,3,4,7,4,-8],[10,-6,-4,-3,-4,4,5,-9,-6,-10,-5],[4,8,7,1,-4,5,1,10,-6,5,8],[-7,2,-9,-6,7,6,-9,7,10,9,1],[3,-6,-6,10,2,-5,3,-9,10,8,3],[-1,-7,4,-4,-8,8,7,8,10,-9,6],[-10,-2,3,6,-7,-8,6,10,7,-9,3],[-1,-7,1,-7,-9,-4,-7,1,4,-10,10],[-4,-8,-8,8,-4,2,-9,5,-4,2,5]],[[4,3,-2,2,-9,-2,-9,-3,-2,3,8],[1,-7,8,-10,9,9,-5,4,-4,-4,-1],[7,-8,-5,-4,-3,6,9,-1,9,6,3],[10,9,-4,10,-5,-3,7,6,-9,-8,10],[1,8,-3,-7,-4,-6,10,-5,7,-1,-7],[-8,-2,3,-4,-9,6,2,-10,8,5,-6],[-5,-9,-4,-5,-7,-3,10,10,1,-6,7],[-8,6,-10,3,-9,-8,3,7,3,10,4],[2,-3,-5,1,8,8,9,-8,3,-1,4],[-3,1,-6,1,-1,5,-7,-5,-4,-10,-9],[-8,1,4,4,-5,8,2,7,3,-6,1],[1,-2,1,5,2,8,-7,-7,-2,-8,10],[-4,1,4,8,-1,-5,5,-6,7,6,-5],[-10,5,-5,-2,-3,4,6,3,7,-4,-8]],[[8,9,-4,-5,-1,-1,8,-9,3,-9,-6],[-6,10,3,-6,4,5,-3,10,7,-2,-8],[-6,-3,7,-7,6,1,5,-1,-5,6,8],[-8,-7,2,5,2,-6,-2,4,7,-3,7],[4,-10,10,-6,5,-9,-1,4,2,9,10],[1,1,5,8,-3,-7,-1,8,7,3,8],[8,10,-9,-8,-10,-4,-8,-4,-2,-1,9],[9,-1,-3,-4,-8,4,-4,5,-3,-10,-6],[9,-7,7,1,1,-3,4,-7,-6,3,-3],[4,-9,-2,5,7,10,-4,-3,-4,3,-9],[5,7,10,-3,9,10,-4,6,10,3,1],[-8,-10,-9,2,-2,-5,-8,1,8,9,-9],[-10,-4,2,4,-5,-8,-7,-2,6,-5,4],[-5,-7,6,-1,-10,-2,5,4,-7,-2,-7]],[[-3,-5,2,-9,-3,3,9,5,6,3,2],[4,-7,-8,-6,-5,6,10,-2,-6,5,-5],[1,-4,-7,-7,-5,8,1,-1,3,-8,8],[6,-6,6,-2,-4,3,1,5,3,-8,5],[9,8,4,2,3,3,-2,1,-2,-8,4],[-6,-7,2,10,-7,-3,-2,3,10,-1,7],[6,7,4,-10,5,7,5,-9,7,5,-3],[7,-10,-1,-4,6,6,-7,-9,9,2,-7],[-5,3,2,-2,-6,10,9,-9,-2,4,-8],[-10,-7,2,7,8,6,6,9,3,-8,-1],[6,2,5,-10,7,10,9,5,1,-9,-5],[3,2,1,-2,-9,-4,-8,6,-4,8,-7],[7,-4,-5,3,8,6,-5,4,-1,6,3],[-8,2,4,-7,-6,4,3,2,1,-4,-4]],[[6,-4,10,-6,-2,3,-6,3,-9,8,-8],[3,6,2,3,-7,-3,-7,1,-5,6,8],[-7,7,-7,-9,7,6,10,-5,5,1,5],[10,-9,-8,5,1,4,-9,-5,7,-4,9],[-1,4,-6,-4,3,6,1,9,7,-1,9],[3,8,-10,-5,6,-3,1,-5,2,-1,2],[-10,1,2,-10,9,5,-5,2,3,-5,-8],[8,3,3,-8,-9,7,-8,1,-10,-3,-10],[1,10,7,2,4,-1,10,3,9,8,2],[-3,-4,-3,-7,7,4,3,3,-9,5,-3],[3,5,-8,8,-7,-2,3,9,-6,-9,2],[-4,-7,-1,2,-9,10,7,-7,7,-5,8],[-4,-1,3,-3,-3,-1,7,-5,6,3,8],[-3,2,-2,10,-6,-6,5,6,4,4,-10]],[[-7,-1,8,8,-4,2,2,-5,-3,7,8],[9,-1,-3,-10,7,7,2,-1,-1,3,3],[9,-8,-8,10,-8,-10,-3,5,8,-3,-1],[10,5,-9,7,4,9,-8,8,3,-8,6],[-7,-3,4,-10,10,6,-3,6,4,-8,3],[-10,-4,6,7,1,4,1,-1,10,2,9],[-1,-9,-4,-10,1,-5,-4,-6,4,6,-3],[-3,-9,8,-10,-1,9,-6,7,7,5,-4],[4,1,-9,-5,6,-9,-2,10,-3,3,-1],[4,-4,-7,-6,9,10,9,6,2,-3,-1],[-9,6,-4,-5,-5,-4,-1,-9,9,-6,-5],[8,8,-7,4,-5,-9,-4,-8,-7,-7,4],[-1,4,1,10,-6,1,-10,-6,-6,-7,2],[9,10,6,8,-7,5,8,-5,5,-7,-7]],[[5,-1,-6,8,-10,1,5,-1,-9,2,4],[-1,-8,-10,3,4,-1,-8,3,-5,3,5],[3,-8,6,6,10,7,-4,-5,-4,-4,5],[-2,-10,-1,2,8,4,8,8,10,-1,-9],[5,1,-4,6,9,-8,-4,-9,-7,-6,6],[2,7,-5,-10,3,-10,-7,-1,4,1,-8],[-10,-5,-7,7,4,9,-1,10,-9,-7,9],[-3,-6,-10,-8,-4,-7,-5,-8,8,-2,-3],[-3,2,-8,-3,4,-7,5,-7,-8,-3,-10],[9,-1,-1,-6,-3,7,-3,6,-2,-3,1],[6,3,9,-7,4,-6,-5,-5,-1,-9,6],[5,-7,-2,-4,10,-1,2,-9,-8,6,-8],[-2,3,-1,-2,-6,1,-2,6,8,-5,-9],[10,9,10,5,-8,1,8,4,3,9,-3]],[[-8,8,-5,6,2,-1,-7,8,-1,9,-6],[7,9,9,-3,10,1,7,2,9,1,-7],[-5,10,-9,-9,8,-6,8,-4,8,-2,1],[-7,3,9,8,-4,-8,8,-5,-4,-6,7],[-8,3,-6,-6,-4,-2,-9,-3,-6,9,-3],[-3,7,-9,-10,5,1,5,-4,-6,6,-7],[10,1,9,10,-8,-10,10,7,8,-9,3],[8,-7,-6,-6,-5,3,2,9,-3,5,-3],[3,-5,6,-1,10,-6,4,7,7,6,-9],[3,8,-4,-9,8,-8,4,10,1,-3,-4],[-1,8,-2,-9,3,-10,9,-6,2,-2,-8],[2,-10,-8,2,-1,-3,-2,-3,10,4,-7],[-6,1,6,10,-10,3,-7,-4,-3,5,-5],[-10,7,-4,-10,6,-3,-5,2,4,10,-1]],[[-8,-8,-1,-4,-10,-5,-6,10,10,-3,-2],[-2,6,6,3,2,4,2,-3,-2,-3,-9],[-5,-5,6,-8,8,3,-7,-7,8,-4,9],[8,2,-4,4,-4,-6,-4,6,-1,1,6],[4,-8,5,3,-8,6,10,5,-5,2,5],[-4,-7,5,8,6,9,4,-8,7,-7,-5],[5,2,-8,-3,-2,6,-9,-7,-6,-9,-9],[-8,10,-2,-10,-6,7,-7,2,-8,5,4],[-4,-3,4,-5,4,9,-9,-3,-7,4,-8],[-9,-10,-5,-2,1,7,-8,5,-5,7,5],[4,6,10,7,2,-6,-4,7,9,-2,1],[9,-3,7,8,-7,3,-6,-5,8,-1,-8],[-7,-1,-3,7,4,2,-2,-9,-2,-5,-10],[-5,-3,2,9,-1,7,5,6,5,-7,9]],[[-5,-2,-5,-9,5,1,9,4,-3,6,-6],[1,-2,3,-3,-1,-3,3,-7,4,-8,-3],[-8,5,-1,-3,-2,8,1,5,8,-2,10],[-8,10,10,8,-7,10,10,-4,8,-7,2],[-10,10,7,-8,7,-4,1,-7,9,5,-7],[-1,-10,-9,-7,-3,-9,4,6,3,-9,2],[-2,9,4,-1,1,-6,-2,5,5,6,-2],[-2,-2,4,9,-1,7,-2,-4,-6,6,-7],[4,-10,2,4,6,-4,10,-2,-4,-10,3],[-3,-7,-3,10,3,-1,-4,-9,-7,-6,-5],[-9,-7,-10,-5,1,1,9,-10,5,3,-6],[-9,9,10,-8,-4,-2,1,8,-4,-4,-6],[8,-1,9,8,-5,2,6,-9,-9,-1,-4],[10,8,10,8,6,1,-10,3,8,7,-10]],[[-2,-7,-4,1,-3,-9,-4,3,-4,-9,-6],[7,-6,-7,-3,-6,-8,7,3,7,6,7],[6,3,8,-6,10,4,-6,-9,-8,5,9],[-7,9,-8,-1,-6,-4,-6,2,7,-3,8],[-1,-10,1,4,-7,-2,-4,-1,7,1,-10],[-6,-7,4,5,9,10,-5,-5,3,-10,10],[7,-1,1,-10,7,3,8,-3,-1,8,-2],[-4,-2,10,-2,-7,2,-7,-8,-3,-2,10],[-6,-4,-3,-10,-3,-1,3,-6,10,6,-1],[-4,-2,5,-5,-4,6,-10,10,6,-6,8],[-8,4,8,-1,-5,-8,-4,-10,8,10,2],[4,9,5,7,-3,-10,5,9,8,3,-10],[1,-7,-4,4,6,7,-10,-1,6,3,10],[-5,-4,-2,1,5,2,4,9,-9,7,-8]],[[-8,1,-2,-1,2,1,1,6,-7,-7,-3],[2,-8,-4,-7,-10,-3,9,7,10,-8,-7],[6,2,-4,-2,-7,-8,-5,9,-7,9,2],[-9,-7,-8,2,3,-9,-1,1,10,8,-4],[10,-7,4,1,3,3,-7,-7,6,-8,5],[8,3,-6,3,3,5,2,-3,5,1,8],[-1,-8,4,-2,5,5,-7,8,4,3,9],[-9,6,-8,4,-6,10,-1,-10,-1,2,-3],[-10,-7,10,2,-5,2,8,10,-8,6,10],[10,8,-5,9,9,8,-2,8,-8,8,8],[-1,-8,5,-5,-1,7,8,2,-1,-7,-9],[-7,-4,3,6,9,-10,-6,-1,1,8,1],[-1,1,6,-3,8,3,7,-5,-7,-2,-1],[1,-9,-4,-2,1,8,7,2,8,-2,-2]],[[-6,3,9,-10,2,-2,6,10,-9,-1,-4],[2,10,6,10,10,4,1,9,-4,5,-3],[-10,-8,5,9,-10,5,-10,2,10,-7,-7],[6,2,-8,5,-9,-6,7,8,9,6,10],[9,-5,-5,-1,-1,-8,-8,9,8,10,4],[-3,3,2,10,-5,-3,-5,-1,1,-5,4],[-5,-7,-10,7,8,10,-6,3,4,4,-8],[-6,-7,-10,5,-6,-8,3,1,4,2,3],[8,-3,-1,10,5,-8,-4,-5,-6,-9,-3],[2,2,3,10,1,9,-10,10,2,9,-8],[-2,-2,-1,1,-3,7,-9,-1,-8,8,-8],[-2,2,4,5,4,6,-6,-7,2,-9,7],[-1,10,-5,-9,-1,-1,-2,-2,-10,4,2],[-2,6,1,5,7,8,-5,8,-8,-4,9]]], dtype = "uint8")#candidate|2434|(13, 14, 11)|const|uint8
var_2435 = relay.var("var_2435", dtype = "uint8", shape = (13, 14, 11))#candidate|2435|(13, 14, 11)|var|uint8
bop_2436 = relay.bitwise_and(const_2434.astype('uint8'), relay.reshape(var_2435.astype('uint8'), relay.shape_of(const_2434))) # shape=(13, 14, 11)
output = relay.Tuple([bop_2436,])
output2 = relay.Tuple([bop_2436,])
func_2461 = relay.Function([var_2435,], output)
mod['func_2461'] = func_2461
mod = relay.transform.InferType()(mod)
mutated_mod['func_2461'] = func_2461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2462 = relay.var("var_2462", dtype = "uint8", shape = (13, 14, 11))#candidate|2462|(13, 14, 11)|var|uint8
func_2461_call = mutated_mod.get_global_var('func_2461')
call_2463 = func_2461_call(var_2462)
output = call_2463
func_2464 = relay.Function([var_2462], output)
mutated_mod['func_2464'] = func_2464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2468 = relay.var("var_2468", dtype = "float64", shape = (10, 5, 9))#candidate|2468|(10, 5, 9)|var|float64
var_2469 = relay.var("var_2469", dtype = "float64", shape = (10, 5, 9))#candidate|2469|(10, 5, 9)|var|float64
bop_2470 = relay.subtract(var_2468.astype('float64'), relay.reshape(var_2469.astype('float64'), relay.shape_of(var_2468))) # shape=(10, 5, 9)
func_2060_call = mod.get_global_var('func_2060')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_2485 = func_2060_call()
call_2486 = func_2060_call()
func_2158_call = mod.get_global_var('func_2158')
func_2160_call = mutated_mod.get_global_var('func_2160')
call_2490 = relay.TupleGetItem(func_2158_call(), 1)
call_2491 = relay.TupleGetItem(func_2160_call(), 1)
var_2497 = relay.var("var_2497", dtype = "uint16", shape = (13, 13, 5))#candidate|2497|(13, 13, 5)|var|uint16
bop_2498 = relay.bitwise_or(call_2490.astype('int64'), relay.reshape(var_2497.astype('int64'), relay.shape_of(call_2490))) # shape=(13, 13, 5)
bop_2501 = relay.bitwise_or(call_2491.astype('int64'), relay.reshape(var_2497.astype('int64'), relay.shape_of(call_2491))) # shape=(13, 13, 5)
func_1576_call = mod.get_global_var('func_1576')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_2505 = relay.TupleGetItem(func_1576_call(), 1)
call_2506 = relay.TupleGetItem(func_1578_call(), 1)
uop_2516 = relay.asin(bop_2470.astype('float64')) # shape=(10, 5, 9)
bop_2518 = relay.logical_or(uop_2516.astype('bool'), relay.reshape(bop_2470.astype('bool'), relay.shape_of(uop_2516))) # shape=(10, 5, 9)
func_1970_call = mod.get_global_var('func_1970')
func_1973_call = mutated_mod.get_global_var('func_1973')
var_2532 = relay.var("var_2532", dtype = "uint64", shape = (90,))#candidate|2532|(90,)|var|uint64
call_2531 = relay.TupleGetItem(func_1970_call(relay.reshape(var_2532.astype('uint64'), [90, 1])), 0)
call_2533 = relay.TupleGetItem(func_1973_call(relay.reshape(var_2532.astype('uint64'), [90, 1])), 0)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_2535 = relay.TupleGetItem(func_2030_call(), 0)
call_2536 = relay.TupleGetItem(func_2031_call(), 0)
func_1970_call = mod.get_global_var('func_1970')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_2537 = relay.TupleGetItem(func_1970_call(relay.reshape(var_2532.astype('uint64'), [90, 1])), 2)
call_2538 = relay.TupleGetItem(func_1973_call(relay.reshape(var_2532.astype('uint64'), [90, 1])), 2)
const_2539 = relay.const([[[3.803716,9.397687,-3.084481,-9.618578,5.063292,-0.699732,-5.568278,7.591396,-5.644388],[-9.934312,3.426272,-2.372377,5.423037,-1.268502,1.863802,-3.366080,-7.328420,2.316459],[-0.794649,-3.566735,-6.387133,3.171547,-7.256799,7.487683,-2.931495,3.894892,2.700136],[7.593580,8.698141,4.231771,-0.538454,-5.458872,8.211283,4.102563,5.802997,2.765696],[-1.945608,-8.579738,-5.666181,9.030803,3.693897,-8.663423,-2.927108,6.672847,-3.257260]],[[0.459643,-1.117783,0.086140,8.184945,6.310156,-9.745296,-0.382884,-4.180591,-6.655530],[-0.576425,1.719351,-2.461434,-9.534084,-4.439651,-2.987157,-1.329468,5.429726,0.089802],[-7.468146,6.922622,5.253339,9.736284,-7.654460,-9.054055,-1.882837,-5.288356,6.464062],[9.418386,-9.309600,0.299034,-8.592078,-1.931661,6.618512,1.374637,-4.624881,6.735703],[-0.173335,4.429689,-7.781164,0.417123,-9.178741,4.289267,-1.828301,0.544019,-5.249870]],[[-4.481081,7.893003,-5.057456,-8.910370,-3.718280,-4.713718,2.740025,-9.546291,5.063684],[-4.011343,7.669544,-4.328408,-4.745774,-7.021370,1.263143,1.588254,4.069378,-5.372287],[1.965535,8.560625,8.528375,3.574955,0.134627,0.139955,9.581866,6.326559,-6.838472],[7.010612,5.011395,9.155981,-7.553755,-3.814180,2.414589,9.154243,2.708663,-0.100873],[-8.513979,0.183336,-7.883785,-0.023085,0.540002,-4.818915,2.731083,-2.491459,3.700435]],[[-7.809877,-9.285538,-1.600340,9.746984,-1.700729,-4.630852,-0.857436,7.215192,-0.628081],[-3.291709,2.089400,4.545303,-8.194884,2.027118,5.458842,-8.963085,-2.278771,-7.863490],[-7.873424,-8.121772,-4.400229,0.062801,6.943535,3.103180,-0.513051,-1.105635,3.698896],[-0.688933,-7.945768,-1.405326,-4.886009,3.910674,-8.372223,8.128433,-2.082604,7.027667],[6.054462,7.817688,5.543984,-3.889340,-4.433306,0.069556,-6.738171,6.271094,3.588319]],[[-1.374159,-6.280302,-4.420231,7.492716,4.958208,3.108833,7.186113,-6.677630,7.801954],[1.955406,6.002123,-5.299687,0.913946,-5.791950,-2.131886,-3.182378,-0.604268,-0.702108],[3.714353,-3.865807,0.807831,-9.052515,-1.206209,7.189600,-1.190812,-4.447859,4.844728],[1.353154,6.513489,4.136897,9.325939,0.784810,5.479683,7.929756,3.589480,5.995067],[3.353229,6.676797,-1.717047,-0.317000,0.989844,7.006696,5.797369,3.737620,-2.939157]],[[-1.363759,5.646013,1.162424,-3.042494,3.725997,0.957955,-1.076369,-4.579014,-6.239330],[5.113293,-1.702887,7.564943,2.149029,-0.759675,-3.777867,6.836828,-7.307691,-3.618554],[6.037771,-3.806133,-5.896435,-5.544519,5.213926,9.693883,8.910536,-4.603092,1.491657],[7.804870,-1.856285,-2.551133,9.943445,-1.236756,-1.162595,0.600900,1.844992,-6.505667],[8.246850,-1.196968,-0.278486,9.858312,-7.771012,6.583217,5.282265,-9.036907,-4.696074]],[[-9.270867,1.143001,2.280908,7.869430,8.572154,9.671485,0.288608,-5.554812,9.355281],[7.042559,5.241280,-8.628927,4.548288,8.193462,1.384862,-7.654798,2.841681,-7.789018],[2.404629,-4.568242,-6.577021,1.657855,-2.665522,-9.629566,-9.997989,-8.600386,2.434555],[-9.397141,0.155835,2.104563,8.862412,-1.785997,0.647012,8.888154,5.927473,0.064353],[3.237749,8.708463,6.900125,9.875941,3.567118,6.991697,-2.993567,2.412204,5.378760]],[[8.600141,0.071358,-5.110945,-8.300867,3.576414,1.039420,-6.765603,8.436399,-4.078436],[0.564589,-5.468339,-3.440532,7.474757,5.086382,-6.124666,3.862867,4.762392,0.794510],[0.956029,-2.936138,3.989118,-5.939712,-4.176312,4.985926,-8.570609,0.341902,8.031409],[-1.305838,-9.916157,-1.934533,-1.109165,-8.485582,-3.503026,7.074123,-3.361684,-6.174395],[0.699491,1.555014,7.691554,8.612986,8.481023,-1.887575,-6.842080,6.797994,9.739771]],[[4.055148,-5.513144,9.014879,3.255722,-9.395208,-5.518858,-3.065087,2.663590,-0.824428],[-8.211914,-4.062813,-8.270750,5.108330,6.956324,4.250916,-2.812809,1.249404,1.661871],[1.981933,2.427415,-7.605735,-9.091888,-7.449443,-5.181509,-9.642118,-0.100393,-1.729119],[-3.234931,5.896082,-6.321047,-7.919939,8.406288,9.236962,-5.481029,8.686440,0.697339],[-7.739368,-7.784610,7.284993,0.115718,-2.603219,5.390000,-7.496495,-1.485925,7.007242]],[[-0.095949,0.068942,1.211462,-5.867681,1.481216,-6.807792,4.586952,-6.880136,2.949015],[-5.575453,-6.380321,-1.382114,4.970396,8.335527,-0.954156,6.150974,-2.776473,-6.122433],[9.457902,4.006586,-8.923554,4.111220,-7.086298,-2.204298,-9.309700,-9.951567,5.694754],[-5.350094,1.605505,-1.041099,-7.515626,1.324831,-0.355173,1.478637,-3.495008,-1.505892],[-5.449948,6.233465,6.091680,-3.152845,-7.367856,-1.255215,5.122539,5.084522,-3.973919]]], dtype = "float64")#candidate|2539|(10, 5, 9)|const|float64
bop_2540 = relay.maximum(uop_2516.astype('int16'), relay.reshape(const_2539.astype('int16'), relay.shape_of(uop_2516))) # shape=(10, 5, 9)
bop_2546 = relay.not_equal(bop_2540.astype('bool'), relay.reshape(bop_2470.astype('bool'), relay.shape_of(bop_2540))) # shape=(10, 5, 9)
var_2553 = relay.var("var_2553", dtype = "bool", shape = (10, 5, 9))#candidate|2553|(10, 5, 9)|var|bool
bop_2554 = relay.logical_and(bop_2546.astype('bool'), relay.reshape(var_2553.astype('bool'), relay.shape_of(bop_2546))) # shape=(10, 5, 9)
func_1356_call = mod.get_global_var('func_1356')
func_1359_call = mutated_mod.get_global_var('func_1359')
call_2570 = relay.TupleGetItem(func_1356_call(relay.reshape(var_2497.astype('uint16'), [1, 845]), relay.reshape(var_2532.astype('uint64'), [3, 30]), ), 5)
call_2571 = relay.TupleGetItem(func_1359_call(relay.reshape(var_2497.astype('uint16'), [1, 845]), relay.reshape(var_2532.astype('uint64'), [3, 30]), ), 5)
var_2590 = relay.var("var_2590", dtype = "bool", shape = (10, 5, 9))#candidate|2590|(10, 5, 9)|var|bool
bop_2591 = relay.minimum(bop_2554.astype('float32'), relay.reshape(var_2590.astype('float32'), relay.shape_of(bop_2554))) # shape=(10, 5, 9)
uop_2613 = relay.erf(var_2590.astype('float64')) # shape=(10, 5, 9)
output = relay.Tuple([call_2485,bop_2498,call_2505,bop_2518,call_2531,var_2532,call_2535,call_2537,call_2570,bop_2591,uop_2613,])
output2 = relay.Tuple([call_2486,bop_2501,call_2506,bop_2518,call_2533,var_2532,call_2536,call_2538,call_2571,bop_2591,uop_2613,])
func_2615 = relay.Function([var_2468,var_2469,var_2497,var_2532,var_2553,var_2590,], output)
mod['func_2615'] = func_2615
mod = relay.transform.InferType()(mod)
mutated_mod['func_2615'] = func_2615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2615_call = mutated_mod.get_global_var('func_2615')
var_2617 = relay.var("var_2617", dtype = "float64", shape = (10, 5, 9))#candidate|2617|(10, 5, 9)|var|float64
var_2618 = relay.var("var_2618", dtype = "float64", shape = (10, 5, 9))#candidate|2618|(10, 5, 9)|var|float64
var_2619 = relay.var("var_2619", dtype = "uint16", shape = (13, 13, 5))#candidate|2619|(13, 13, 5)|var|uint16
var_2620 = relay.var("var_2620", dtype = "uint64", shape = (90,))#candidate|2620|(90,)|var|uint64
var_2621 = relay.var("var_2621", dtype = "bool", shape = (10, 5, 9))#candidate|2621|(10, 5, 9)|var|bool
var_2622 = relay.var("var_2622", dtype = "bool", shape = (10, 5, 9))#candidate|2622|(10, 5, 9)|var|bool
call_2616 = func_2615_call(var_2617,var_2618,var_2619,var_2620,var_2621,var_2622,)
output = call_2616
func_2623 = relay.Function([var_2617,var_2618,var_2619,var_2620,var_2621,var_2622,], output)
mutated_mod['func_2623'] = func_2623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_2630 = relay.TupleGetItem(func_2030_call(), 0)
call_2631 = relay.TupleGetItem(func_2031_call(), 0)
func_1781_call = mod.get_global_var('func_1781')
func_1784_call = mutated_mod.get_global_var('func_1784')
const_2654 = relay.const([-3,4,-2,1,1,-4,8,-5,-9,9,-5,-6,9,-8,-1,1,1,8,-8,-7,2,1,3,4,-10,5,-5,8,3,8,10,10,7,-3,6,3,3,7,-1,7,-3,-7,-5,10,-10,4,2,-1,1,-5,6,-4,-3,7,9,5,8,10,-6,5,-1,-8,-4,-1,5,-1,-3,1,7,9,-2,10,6,-5,-10,-2,1,3,1,10,9,8,-8,9,-7,-3,-3,-10,1,-3,8,-2,-7,4,-1,7,-8,4,-6,-3,-1,3,-9,3,10,3,-3,-9,-1,2,9,-2,4,7,8,4,-8,1,2,9,2,-2,-8,9,5,-3,-1,-3,10,-7,-10,8,-10,5,-5,-5,-8,-5,-9,-6,-8,-3,6,7,6,6,5,-5,-3,8,-7,-8,-2,-1,-9,-7,8,7,-6,9,8,-1,9,9,-8,-1,-10,2,-2,-2,2,8,-9,-5,9,10,-1,-2,7,-2,8,10,4,1,4,9,-5,7,1,-1,-6,-10,2,-7,3,1,-5,-1,-2,-7,8,-10,2,-6,-9,-5,-2,2,-5,10,-8,-9,-4,2,-5,-10,-2,5,-10,-8,2,6,8,-5,-8,-3,9,-9,-4,-9,-9,-3,1,-6,-9,-2,8,2,-7,-9,3,1,-5,5,3,-10,2,5,1,6,6,10,7,7,10,-9,9,-7,2,4,3,-6,-7,-8,-2,8,-4,1,-2,-7,6,7,8,10,5,3,-9,-3,-2,5,-7,4,-3,5,5,10,-10,9,-1,7,-4,-4,-1,-9,9,-7,-9,10,-7,-7,-8,4,-4,-5,-1,-2,3,7,-2,7,10,-10,6,-1,6,5,-7,-4,-1,7,-3,6,5,-10,-10,8,10,9,7,-8,9,9,-2,6,-3,-3,2,-10,5,-3,6,4,-7,-1,6,7,3,-1,8,8,10,6,3,8,8,2,1,10,-3,-2,10,-4,5,10,3,-3,-9,5,-6,9,-6,-6,9,7,-6,-8,-2,3,-8,-1,9,3,4,10,-3,-4,2,-10,-7,-2,7,3,-2,7,7,10,3,-6,3,8,6,7,-3,10,3,5,2,1,2,6,9,7,-1,-10,-8,-2,-2,4,-7,5,6,2,-6,4,5,7,-9,-6,5,5,-6,-10,8,-4,-10,-7,-7,-4,5,2,9,-2,4,-9,5,4,2,10,10,7,2,-6,-4,-3,10,9,-3,-8,-10,-7,10,8,7,-4,-3,9,-6,4,7,10,-1,7,-1,-2,-9,-10,10,2,6,-4,-8,4,-8,-5,6,-4,-4,10,5,8,10,-4,-6,8,2,-2,-7,-6,7,-1,7,-9,-6,10,-2,7,8,2,10,7,6,-4,-8,-7,2,-5,5,1,4,5,10,7,3,-2,-3,-5,-8,9,9,-10,-8,-9,-10,4,-4,9,-1,3,-10,-9,4,2,-2,10,9,-4,7,-1,6,3,6,-5,10,3,3,-3,-5,-2,5,10,-4,-4,8,9,1,-5,6,4,-7,8,-8,-10,-5,1,6,8,8,2,5,1,5,-3,-5,7,-5,-4,5,7,8,-3,-1,-4,-3,6,-10,-6,-2,-6,-7,1,-9,4,-10,-5,10,3,-9,4,-7,-1,-7,2,5,10,-2,-3,-7,4,-9,6,-8,-5,-9,-8,9,-1,-6,8,2,5,-9,4,7,-5,-8,-10,-1,-3,3,-5,1,-9,-1,-8,6,-7,-2,-3,1,-7,-9,7,-1,-10,-2,-7,3,1,4,6,-5,-5,6,-7,-5,7,-1,-4,5,-5,9,1,7,-3,-3,10,-4,4,4,8,-6,-3,-1,9,1,4,-7,9,9,6,-4,8,3,9,-5,-9,2,-10,-9,1,-5,9,10,-8,3,-10,2,3,2,-5,9,-8,7,5,6,-7,1,-3,-5,9,-4,-3,9,-4,-9,9,-2,-2,4,-5,3,3,10,-4,-6,-3,4,-1,-5,5,3,-4,1,-5,3,-7,-4,10,-6,-8,-9,-7,8,-7,10,-7,-6,-9,8,1,-4,10,1,-3,-6,1,2,2,5,-3,1,-9,4,3,-2,3,-5,5,5,-4,8,10,-5,-2,-2,-7,-8,2,-4,1,-9,5,9,1,9,7,-1,9,-7,-6,7,-4,10,4,10,4,-2,-3,-9,5,10,-7,-8,6,-7,-8,6,7,7,3,-7,-5,6,-1,4,4,9,2,-6,-5,-1,-5,-5,4,-6,-9,4,3,4,4,10,-2,9,-8,-2], dtype = "uint16")#candidate|2654|(845,)|const|uint16
var_2655 = relay.var("var_2655", dtype = "float32", shape = (78, 6))#candidate|2655|(78, 6)|var|float32
call_2653 = relay.TupleGetItem(func_1781_call(relay.reshape(const_2654.astype('uint16'), [845,]), relay.reshape(var_2655.astype('float32'), [468,]), ), 6)
call_2656 = relay.TupleGetItem(func_1784_call(relay.reshape(const_2654.astype('uint16'), [845,]), relay.reshape(var_2655.astype('float32'), [468,]), ), 6)
const_2661 = relay.const([[7.642320,7.919545,5.851064,9.672220,2.864393,9.712879],[-3.229330,-0.493914,-8.905633,-6.895179,0.491673,0.562076],[7.956049,5.942360,-9.028553,8.601183,6.778217,7.548911],[3.543636,4.990965,3.335897,4.878244,9.990881,-4.176049],[1.323529,-1.246307,-9.879668,5.569815,-2.889316,-7.861874],[0.696522,-9.340373,-0.777748,-9.877436,7.458214,-8.628351],[-1.514358,-9.817239,6.323245,9.209184,0.983810,0.030301],[2.186266,3.017687,-8.230134,-9.395704,6.616196,-3.789043],[-6.759794,-3.362344,-1.766386,1.503636,-0.443223,-9.280106],[-0.107638,-8.143609,8.646752,-2.544332,5.230362,2.312371],[7.363569,5.124304,-6.966967,-1.508823,-0.477058,-0.372567],[0.704663,9.376711,0.660279,2.515485,-2.224917,-2.295553],[-3.479004,-8.368600,-7.927741,5.649039,-1.572217,6.917913],[-8.189804,9.120547,-4.625830,6.189807,2.662168,4.455094],[-2.332487,8.969174,6.664696,-3.751802,-3.555900,5.267813],[-2.357376,-9.230842,9.358594,-7.082784,8.835331,2.626878],[0.290855,0.218692,2.867847,-2.532997,3.721641,-6.349004],[8.319847,-9.796506,-9.670488,-1.505496,-8.749355,3.246074],[-2.807246,7.082750,4.895495,3.994006,6.559092,-9.499207],[-4.111331,-1.072455,-5.973373,-1.449280,-8.728751,9.002155],[-7.886668,1.558659,-3.016390,-2.686376,-3.165316,-7.289416],[-8.093832,7.298764,-0.829402,3.644707,-0.152264,-9.570683],[-7.947746,-7.915034,-5.646031,4.023091,3.988069,4.310105],[3.397610,1.885029,-0.007026,-7.143562,3.001478,-0.444472],[8.463667,-3.656319,-0.369651,-2.979216,7.118447,0.425360],[-5.446217,-9.845701,6.998941,8.915325,-2.152644,4.043731],[-3.355007,2.694691,9.729488,7.191545,3.418837,-2.396864],[-7.084896,0.644495,0.376504,6.900032,0.055398,7.627739],[-9.853774,-3.413031,3.599656,0.792624,4.023768,-5.047250],[-6.513852,0.167700,2.193018,5.351943,-3.503288,-8.354165],[5.941481,2.688151,0.961771,-3.680227,5.025547,-5.735402],[-0.934399,-3.038926,3.193169,-9.856866,-4.678429,5.321447],[4.534595,9.105782,3.330228,0.471851,-5.054179,-0.055903],[0.799823,0.801733,7.627100,-8.380788,7.055097,7.981216],[1.361524,-1.403211,5.944144,5.255869,8.883919,-3.927298],[-7.991988,0.852457,-1.349685,6.978472,-8.369963,-4.302755],[-0.924495,9.812904,8.817169,-5.995626,-2.878223,-8.765803],[6.558067,-0.410741,-0.860120,3.734790,-2.906290,5.146046],[-6.506078,7.869592,1.011700,-3.188426,-9.640228,6.739621],[-6.211371,-3.081689,2.175028,-6.673744,-4.699403,7.164949],[4.933490,-4.795530,9.094427,-0.653444,-2.992413,9.043456],[9.389924,7.103352,4.832815,1.443510,3.488363,4.020545],[-7.229134,7.559067,-6.670942,-7.575903,3.785082,-8.254195],[-8.470665,9.060226,-3.158687,3.736868,-8.906443,4.398865],[8.467483,-6.538059,-3.233628,4.544177,0.948539,7.558480],[0.358406,-9.308786,-6.383393,-8.373970,1.831741,8.784713],[-3.107849,-0.107087,-4.573409,-4.241305,-0.661336,-2.769974],[-3.796678,-3.203619,-2.732384,-7.916338,1.583753,-4.356423],[3.739241,-6.821904,-4.693767,-8.559058,-9.679264,-3.111870],[-2.789811,6.103187,7.813309,6.409913,1.950878,5.594498],[7.196116,-4.327438,-8.973419,0.891860,6.792559,7.449732],[5.314316,-6.488963,-1.648830,-9.916556,9.953708,3.734351],[8.507399,9.868859,-2.526754,-0.629865,-3.864026,-9.014668],[-3.363638,-6.580172,-7.195273,9.903279,7.139512,8.165341],[-6.094091,-8.754087,7.449721,-7.757750,-5.213540,-0.380040],[9.058342,-2.079515,5.550966,-1.632466,-4.487202,8.303622],[-7.286290,2.622206,-3.089266,0.137438,-6.978848,-9.258370],[-3.523944,3.505453,-1.228519,5.721883,-0.072162,3.836492],[6.925764,8.830508,-7.503120,-8.467010,-9.830983,-5.552035],[-9.725563,6.019218,3.308441,8.951432,5.493694,-4.076538],[-2.887247,7.452207,-5.250417,-7.527643,-5.748118,8.347949],[-2.951855,-0.375303,6.521431,0.184906,-1.161989,9.241173],[-2.222365,0.035293,4.887204,-4.497535,-3.566412,-7.458402],[-7.355168,-0.764719,9.447748,-5.942597,0.958115,-6.942267],[2.874215,-8.200060,-5.713578,-2.314372,-1.116547,-6.651281],[4.059568,8.249283,-8.774329,-7.316918,-1.024214,-4.945104],[5.836718,4.474496,9.599876,4.778181,3.602916,-5.258283],[3.894624,1.515046,7.613003,9.120651,-1.902625,-4.166155],[3.013255,1.044325,5.557541,9.225461,-8.943506,7.092599],[-5.372306,3.547824,-8.878737,4.350391,-1.725062,-1.582226],[0.440088,-8.181201,-7.343883,-1.585024,-5.348080,-6.990244],[1.499165,-6.845055,-0.270564,7.863292,-7.614393,9.757566],[8.321292,1.702951,5.285572,0.258353,3.214928,-1.743182],[-8.011986,1.023863,-3.243874,-3.179452,8.941766,-1.725441],[-8.698323,-0.881109,-3.279431,4.906003,5.838028,9.989206],[-0.750261,0.066315,-1.936969,-9.957284,-9.822475,7.722219],[5.177327,2.517552,-4.602262,-2.080582,9.358690,-4.389704],[-9.877439,7.570946,-5.753893,-6.664537,3.327061,-9.371951]], dtype = "float32")#candidate|2661|(78, 6)|const|float32
bop_2662 = relay.minimum(var_2655.astype('uint32'), relay.reshape(const_2661.astype('uint32'), relay.shape_of(var_2655))) # shape=(78, 6)
func_174_call = mod.get_global_var('func_174')
func_176_call = mutated_mod.get_global_var('func_176')
call_2681 = func_174_call(relay.reshape(call_2653.astype('int8'), [12, 9, 13]))
call_2682 = func_174_call(relay.reshape(call_2653.astype('int8'), [12, 9, 13]))
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_2695 = relay.TupleGetItem(func_1932_call(), 0)
call_2696 = relay.TupleGetItem(func_1934_call(), 0)
uop_2699 = relay.exp(call_2653.astype('float64')) # shape=(12, 9, 13)
uop_2701 = relay.exp(call_2656.astype('float64')) # shape=(12, 9, 13)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_2703 = relay.TupleGetItem(func_1932_call(), 0)
call_2704 = relay.TupleGetItem(func_1934_call(), 0)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_2706 = func_2282_call()
call_2707 = func_2282_call()
output = relay.Tuple([call_2630,const_2654,bop_2662,call_2681,call_2695,uop_2699,call_2703,call_2706,])
output2 = relay.Tuple([call_2631,const_2654,bop_2662,call_2682,call_2696,uop_2701,call_2704,call_2707,])
func_2708 = relay.Function([var_2655,], output)
mod['func_2708'] = func_2708
mod = relay.transform.InferType()(mod)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2709 = relay.var("var_2709", dtype = "float32", shape = (78, 6))#candidate|2709|(78, 6)|var|float32
func_2708_call = mutated_mod.get_global_var('func_2708')
call_2710 = func_2708_call(var_2709)
output = call_2710
func_2711 = relay.Function([var_2709], output)
mutated_mod['func_2711'] = func_2711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mod.get_global_var('func_1576')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_2715 = relay.TupleGetItem(func_1576_call(), 2)
call_2716 = relay.TupleGetItem(func_1578_call(), 2)
output = call_2715
output2 = call_2716
func_2721 = relay.Function([], output)
mod['func_2721'] = func_2721
mod = relay.transform.InferType()(mod)
mutated_mod['func_2721'] = func_2721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2721_call = mutated_mod.get_global_var('func_2721')
call_2722 = func_2721_call()
output = call_2722
func_2723 = relay.Function([], output)
mutated_mod['func_2723'] = func_2723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2364_call = mutated_mod.get_global_var('func_2364')
call_2738 = relay.TupleGetItem(func_2363_call(), 0)
call_2739 = relay.TupleGetItem(func_2364_call(), 0)
uop_2743 = relay.atan(call_2738.astype('float64')) # shape=(7, 15, 8)
uop_2745 = relay.atan(call_2739.astype('float64')) # shape=(7, 15, 8)
output = uop_2743
output2 = uop_2745
func_2748 = relay.Function([], output)
mod['func_2748'] = func_2748
mod = relay.transform.InferType()(mod)
output = func_2748()
func_2749 = relay.Function([], output)
mutated_mod['func_2749'] = func_2749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_2753 = relay.TupleGetItem(func_1932_call(), 0)
call_2754 = relay.TupleGetItem(func_1934_call(), 0)
output = call_2753
output2 = call_2754
func_2762 = relay.Function([], output)
mod['func_2762'] = func_2762
mod = relay.transform.InferType()(mod)
output = func_2762()
func_2763 = relay.Function([], output)
mutated_mod['func_2763'] = func_2763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2721_call = mod.get_global_var('func_2721')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_2781 = func_2721_call()
call_2782 = func_2721_call()
func_428_call = mod.get_global_var('func_428')
func_430_call = mutated_mod.get_global_var('func_430')
var_2791 = relay.var("var_2791", dtype = "float64", shape = (30,))#candidate|2791|(30,)|var|float64
call_2790 = relay.TupleGetItem(func_428_call(relay.reshape(var_2791.astype('float64'), [1, 6, 5])), 0)
call_2792 = relay.TupleGetItem(func_430_call(relay.reshape(var_2791.astype('float64'), [1, 6, 5])), 0)
bop_2798 = relay.equal(call_2790.astype('bool'), relay.reshape(var_2791.astype('bool'), relay.shape_of(call_2790))) # shape=(1, 6, 5)
bop_2801 = relay.equal(call_2792.astype('bool'), relay.reshape(var_2791.astype('bool'), relay.shape_of(call_2792))) # shape=(1, 6, 5)
var_2805 = relay.var("var_2805", dtype = "int8", shape = (1404,))#candidate|2805|(1404,)|var|int8
bop_2806 = relay.logical_and(call_2781.astype('bool'), relay.reshape(var_2805.astype('bool'), relay.shape_of(call_2781))) # shape=(1404,)
bop_2809 = relay.logical_and(call_2782.astype('bool'), relay.reshape(var_2805.astype('bool'), relay.shape_of(call_2782))) # shape=(1404,)
output = relay.Tuple([bop_2798,bop_2806,])
output2 = relay.Tuple([bop_2801,bop_2809,])
func_2816 = relay.Function([var_2791,var_2805,], output)
mod['func_2816'] = func_2816
mod = relay.transform.InferType()(mod)
var_2817 = relay.var("var_2817", dtype = "float64", shape = (30,))#candidate|2817|(30,)|var|float64
var_2818 = relay.var("var_2818", dtype = "int8", shape = (1404,))#candidate|2818|(1404,)|var|int8
output = func_2816(var_2817,var_2818,)
func_2819 = relay.Function([var_2817,var_2818,], output)
mutated_mod['func_2819'] = func_2819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_2849 = func_2282_call()
call_2850 = func_2282_call()
output = call_2849
output2 = call_2850
func_2858 = relay.Function([], output)
mod['func_2858'] = func_2858
mod = relay.transform.InferType()(mod)
mutated_mod['func_2858'] = func_2858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2858_call = mutated_mod.get_global_var('func_2858')
call_2859 = func_2858_call()
output = call_2859
func_2860 = relay.Function([], output)
mutated_mod['func_2860'] = func_2860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2160_call = mutated_mod.get_global_var('func_2160')
call_2868 = relay.TupleGetItem(func_2158_call(), 1)
call_2869 = relay.TupleGetItem(func_2160_call(), 1)
func_1150_call = mod.get_global_var('func_1150')
func_1154_call = mutated_mod.get_global_var('func_1154')
const_2887 = relay.const([4,2,-1,-4,2,-10,3,9,1,-7,5,-10,-4,-8,-10,5,-9,6,9,6,2,-8,-7,10,-10,-1,-10,-10,7,7,6,-3,-6,4,1,-7,-6,-7,-3,-1,5,-10,4,-7,9,-8,3,10,2,-7,4,5,10,-4,-10,-7,-8,8,-8,-3,-9,2,4,-3,5,-7,-3,-8,-4,-3,-7,9,-9,9,2,-4,3,-2,7,-3,-5,-1,3,-9,-2,-3,-5,8,7,-1], dtype = "uint64")#candidate|2887|(90,)|const|uint64
call_2886 = func_1150_call(relay.reshape(const_2887.astype('uint64'), [2, 9, 5]), relay.reshape(const_2887.astype('uint64'), [2, 9, 5]), )
call_2888 = func_1150_call(relay.reshape(const_2887.astype('uint64'), [2, 9, 5]), relay.reshape(const_2887.astype('uint64'), [2, 9, 5]), )
func_2115_call = mod.get_global_var('func_2115')
func_2118_call = mutated_mod.get_global_var('func_2118')
var_2893 = relay.var("var_2893", dtype = "float32", shape = (720,))#candidate|2893|(720,)|var|float32
call_2892 = relay.TupleGetItem(func_2115_call(relay.reshape(var_2893.astype('float32'), [12, 15, 4])), 0)
call_2894 = relay.TupleGetItem(func_2118_call(relay.reshape(var_2893.astype('float32'), [12, 15, 4])), 0)
func_1811_call = mod.get_global_var('func_1811')
func_1814_call = mutated_mod.get_global_var('func_1814')
const_2901 = relay.const([[3.238967,9.943903,-3.598524],[-8.396252,-4.587571,7.140662],[-5.431137,3.250085,-8.796864],[0.426959,0.487819,-8.118019],[-3.064902,6.676465,1.155245],[0.505675,-7.921868,-1.388430],[6.464377,8.861781,6.042913],[3.366900,2.653676,7.252725],[-4.613005,4.023442,-5.118370],[5.251850,3.148432,3.245979]], dtype = "float64")#candidate|2901|(10, 3)|const|float64
call_2900 = relay.TupleGetItem(func_1811_call(relay.reshape(const_2901.astype('float64'), [1, 6, 5])), 1)
call_2902 = relay.TupleGetItem(func_1814_call(relay.reshape(const_2901.astype('float64'), [1, 6, 5])), 1)
bop_2904 = relay.power(call_2886.astype('float32'), relay.reshape(const_2887.astype('float32'), relay.shape_of(call_2886))) # shape=(2, 9, 5)
bop_2907 = relay.power(call_2888.astype('float32'), relay.reshape(const_2887.astype('float32'), relay.shape_of(call_2888))) # shape=(2, 9, 5)
func_2158_call = mod.get_global_var('func_2158')
func_2160_call = mutated_mod.get_global_var('func_2160')
call_2917 = relay.TupleGetItem(func_2158_call(), 3)
call_2918 = relay.TupleGetItem(func_2160_call(), 3)
func_2721_call = mod.get_global_var('func_2721')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_2920 = func_2721_call()
call_2921 = func_2721_call()
func_2748_call = mod.get_global_var('func_2748')
func_2749_call = mutated_mod.get_global_var('func_2749')
call_2924 = func_2748_call()
call_2925 = func_2748_call()
func_428_call = mod.get_global_var('func_428')
func_430_call = mutated_mod.get_global_var('func_430')
call_2926 = relay.TupleGetItem(func_428_call(relay.reshape(call_2900.astype('float64'), [1, 6, 5])), 0)
call_2927 = relay.TupleGetItem(func_430_call(relay.reshape(call_2900.astype('float64'), [1, 6, 5])), 0)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_2954 = relay.TupleGetItem(func_1282_call(), 3)
call_2955 = relay.TupleGetItem(func_1284_call(), 3)
output = relay.Tuple([call_2868,call_2892,var_2893,call_2900,const_2901,bop_2904,call_2917,call_2920,call_2924,call_2926,call_2954,])
output2 = relay.Tuple([call_2869,call_2894,var_2893,call_2902,const_2901,bop_2907,call_2918,call_2921,call_2925,call_2927,call_2955,])
func_2965 = relay.Function([var_2893,], output)
mod['func_2965'] = func_2965
mod = relay.transform.InferType()(mod)
mutated_mod['func_2965'] = func_2965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2966 = relay.var("var_2966", dtype = "float32", shape = (720,))#candidate|2966|(720,)|var|float32
func_2965_call = mutated_mod.get_global_var('func_2965')
call_2967 = func_2965_call(var_2966)
output = call_2967
func_2968 = relay.Function([var_2966], output)
mutated_mod['func_2968'] = func_2968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_2977 = func_2282_call()
call_2978 = func_2282_call()
output = relay.Tuple([call_2977,])
output2 = relay.Tuple([call_2978,])
func_2983 = relay.Function([], output)
mod['func_2983'] = func_2983
mod = relay.transform.InferType()(mod)
mutated_mod['func_2983'] = func_2983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2983_call = mutated_mod.get_global_var('func_2983')
call_2984 = func_2983_call()
output = call_2984
func_2985 = relay.Function([], output)
mutated_mod['func_2985'] = func_2985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2986 = relay.var("var_2986", dtype = "int8", shape = (4, 10, 5))#candidate|2986|(4, 10, 5)|var|int8
var_2987 = relay.var("var_2987", dtype = "int8", shape = (4, 10, 5))#candidate|2987|(4, 10, 5)|var|int8
bop_2988 = relay.not_equal(var_2986.astype('bool'), relay.reshape(var_2987.astype('bool'), relay.shape_of(var_2986))) # shape=(4, 10, 5)
bop_3002 = relay.multiply(var_2986.astype('float64'), relay.reshape(bop_2988.astype('float64'), relay.shape_of(var_2986))) # shape=(4, 10, 5)
output = relay.Tuple([bop_3002,])
output2 = relay.Tuple([bop_3002,])
func_3014 = relay.Function([var_2986,var_2987,], output)
mod['func_3014'] = func_3014
mod = relay.transform.InferType()(mod)
mutated_mod['func_3014'] = func_3014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3014_call = mutated_mod.get_global_var('func_3014')
var_3016 = relay.var("var_3016", dtype = "int8", shape = (4, 10, 5))#candidate|3016|(4, 10, 5)|var|int8
var_3017 = relay.var("var_3017", dtype = "int8", shape = (4, 10, 5))#candidate|3017|(4, 10, 5)|var|int8
call_3015 = func_3014_call(var_3016,var_3017,)
output = call_3015
func_3018 = relay.Function([var_3016,var_3017,], output)
mutated_mod['func_3018'] = func_3018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_3053 = relay.TupleGetItem(func_1282_call(), 1)
call_3054 = relay.TupleGetItem(func_1284_call(), 1)
func_428_call = mod.get_global_var('func_428')
func_430_call = mutated_mod.get_global_var('func_430')
var_3056 = relay.var("var_3056", dtype = "float64", shape = (30,))#candidate|3056|(30,)|var|float64
call_3055 = relay.TupleGetItem(func_428_call(relay.reshape(var_3056.astype('float64'), [1, 6, 5])), 0)
call_3057 = relay.TupleGetItem(func_430_call(relay.reshape(var_3056.astype('float64'), [1, 6, 5])), 0)
func_1038_call = mod.get_global_var('func_1038')
func_1042_call = mutated_mod.get_global_var('func_1042')
const_3061 = relay.const([[4,-6,-10,-9,-4,10,-10,3,-8,-5,-3,-1,-2,-9,8,5,-5,-10,-5,-5,2,8,8,5,-6,-8,-7,-2,-3,-3,-10,-10,-9,-2,-1,-5,4,4,7,-7,-10,-3,-5,7,-6,6,-1,1,-1,8,1,3,-7,5,-6,8,-1,-2,4,4,-4,-5,1,6,-10,1,8,-5,3,-8,6,5,-6,2,10,9,-8,-8,-10,-8,7,-10,-5,9,-6,-7,4,10,2,-10,-9,6,-1,6,-9,10,6,-10,-6,9,7,-6,9,-2,1,-3,9,10,4,-1,-10,8,2,7,8,-2,3,9,-6,-4,1,7,-7,-1,-5,-3,-7,3,10,9,-7,6,-1,-1,-3,3,-2,-5,-1,1,3,1,6,9,-3,7,-1,9,7,-8,4,-6,6,-7,-2,-1,4,-4,3,10,4,-5,10,7,-3,-8,6,5,-7,-7,3,-3,9,9,3,-7,5,-1,3,2,3,-4,4,-3,4,-8,-7,3,-8,-7,10,-7,-3,1,8,-3,-3,-2,-8,6,4,-8,4,-10,-4,3,-10,-10,-1,-10,-6,10,1,4,8,1,5,6,3,-4,-10,2,7,4,4,-7,-8,-10,10,8,6,-1,-3,2,2,4,1,3,-9,-6,-10,5,-9,-6,-9,-6,-8,-7,5,-6,3,10,-7,4,9,-2,10,-6,2,-7,-8,7,-3,8,2,-6,5,1,-8,-9,4,7,-9,-6,-8,-4,-7,4,-5,-9,-6,4,-10,3,-1,-6,-4,-2,9,-3,-10,-3,8,-10,-8,2,1,-5,-2,-10,5,-1,-10,-1,2,5,-3,-2,8,5,-8,-1,-4,1,-9,10,-6,10,-7,-6,-8,-10,3,-3,-1,-6,7,9,4,-9,10,6,2,5,-8,6,-4,-9,10,8,4,2,3,-5,1,1,-3,1,-2,3,-7,-8,-9,10,10,-1,-3,-8,-4,5,-4,9,1,3,6,3,-8,6,9,5,5,-6,8,-5,6,8,-4,9,8,-9,9,10,5,5,10,-5,-7,-3,4,7,-10,2,-5,1,5,10,4,-3,3,-2,9,10,-8,-3,3,-2,7,6,7,7,-7,-5,-6,9,8,4,1,-5,9,1,8,-4,9,6,5,-7,-10,-3,-3,-8,4,-8,8,-3,-1,-8,10,-3,1,-5,3,-9,8,-1,-6,4,1,-4,7,-3,-4,5,-2,-2,-10,-1,1,-7,-4,2,7,10,7,-4,-3,-3,1,-10,-8,8,-1,2,9,-3,-10,-2,10,-5,-8,-3,10,-10,4,4,4,10,8,-9,1,-9,8,8,-3,-7,3,-4,6,2,3,3,-7,-3,5,4,-6,9,-6,2,-1,10,10,7,-7,-7,-6,-8,-3,1,-4,4,-10,4,1,5,6,7,1,-4,-6,9,-3,-6,1,-4,4,5,-2,-10,-6,6,2,1,-1,2,-8,-9,9,7,5,-4,-9,3,-1,-4,-7,10,6,-1,-6,4,5,7,1,3,-5,-6,-10,-6,1,-8,2,6,-9,7,-1,1,4,-9,2,-4,-10,3,-1,-1,-1,-1,-6,3,5,3,10,-3,4,1,7,-4,8,-9,6,-3,8,10,-2,-1,2,4,-2,8,2,-3,-5,-6,-6,-3,-2,9,-10,-5,-3,-1,2,9,-4,-9,6,-5,-1,-5,-5,-9,-7,-8,9,-9,-2,9,6,8,-3,-8,1,10,-6,10,5,10,-10,-9,4,1,-8,9,-6,-8,4,-10,1,10,6,9,-9,-3,1,-8,-2,10,9,6,6,6,9,-6,7,8,-6,-7,7,-6,4,3,2,5,-3,-7,-6,9,-1,6,3,-5,2,-7,-4,9,-6,-3,6,-2,-1,-7,3,2,3,4,-3,-6,-1,-6,-8,2,-7,-4,2,-9,-4,8,2,-1,-10,-2,6,-8,3,-1,-8,4,-7,-8,6,-10,6,8,-9,-5,-6,2,5,10,-5,-10,3,8,-4,-8,4,1,-9,-9,7,-9,-9,4,10,-3,-4,-8,8,-10,-2,3,10,7,-2,-10,-8,-2,8,2,-10,3,-7,5,-6,-8,-3,6,4,3,-8,4,9,-5,-2,7,2,-7,2,6,7,8,-6,5,6,7,10,3,5,-10,-5,-8,8,9,9,10,1,10,-10,9,-3,-3,-6,-6,-4,-10,3,7,-5,-3,-2,-2,1,-2,7,9,6,6,-8,-4,9,1,-2,-5,-5,-1,1,3,5,3,5,-3,5,6,2,-6,-6,2,5,6,8,-10,3,1,7,2,-5,6,4,3,-3,-4,-6,-8,-8,3,-4,-4,-4,-6,8,-6,3,-3,5,-3,-3,-7,5,-9,10,8,-5,-2,7,2,8,-8,-2,-7,5,3,-7,8,-8,7,-1,3,-7,-6,2,10,6,10,7,4,9,3,-10,2,-9,5,1,-5,4,3,-9,-8,8,-4,-9,-8,-6,8,1,-3,6,2,7,-8,-9,10,5,-5,-8,-10,7,-7,1,6,-3,4,-8,-9,-4,-7,9,10,-5,-8,4,-10,-8,-2,10,2,-9,-5,3,-2,-2,-9,-6,6,6,4,2,8,9,-10,2,-4,-8,-7,-2,9,8,4,9,-5,6,4,1,9,-4,1,-10,-6,-2,9,-4,8,8,-7,-4,1,-10,-7,7,-3,4,8,8,2,8,6,2,5,-5,-7,3,-6,-5,5,10,4,3,8,5,-5,-1,-7,2,3,2,-6,-7,9,-9,3,-6,3,-8,-3,1,8,-7,-5,6,-8,-7,5,-9,6,-3,-7,-6,8,-1,9,-9,4,-1,-8,-8,-7,-3,8,9,9,-5,-10,-7,6,-9,2,3,7,6,3,4,-8,2,-8,-2,-2,-7,9,-9,2,2,-10,-9,-1,2,10,3,2,5,-8,-1,5,3,2,1,-1,-7,9,8,4,5,-6,3,6,10,-7,4,-6,10,-8,1,5,2,7,-8,-10,6,-3,-5,-7,5,-5,9,-8,1,-1,9,4,4,1,-4,-4,8,9,6,-10,3,-4,1,3,-9,-6,-10,8,-2,5,2,6,5,-3,3,-6,1,1,1,3,8,-8,8,2,7,-7,7,8,1,4,5,2,-9,7,7,-2,7,-3,10,-6,5,7,-9,3,-6,-3,9,8,-8,-2,7,10,-5,-1,-10,-3,2,-4,-5,-8,6,-6,7,-6,1,2,3,-1,4,-5,-9,-9,10,-10,2,10,1,4,-9,5,-10,7,-10,4,-8,-10,9,8,3,-8,7,-5,-1,-6,-1,10,9,-7,-6,5,-1,-3,-4,-4,10,-4,-10,-5,9,-3,4,4,-3,-4,-3,2,-4,6,5,-7,-2,4,-9,2,2,-8,1,2,4,-10,5,-3,-7,6,-9,-9,-3,2,1,8,9,10,8,1,-5,9,5,10,-10,-5,9,-9,-6,2,5,1,-6,6,-2,-5,10,-9,-5,8,-5,-4,7,-9,-4,-2,-3,-7,-5,-4,-1,-4,-3,7,-3,-3,8,-5,1,-1,4,-6,-8,5,-5,10,8,-7,8,8,9,-2,-9,3,10,6,7,1,4,-9,-7,-3,5,-5,-3,6,6,-8,-4,6,-7,8,-4,-1,6,-9,9,5,3,-8,-3,-8,-2,-4,1,2,2,-2,-8,-7,3,7,-10,-7,-2,-9,9,6,8,-10,1,5,-4,2,-9,8,6,5,8,9,7,7,-7,-7,-4,-2,-1,-10,5,8,-2,-6,-10,6,-3,9,5,3,-10,7,-1,3,-5,6,-5,-5,-1,-9,4,-8,-2,-6,-5,-9,1,-1,4,-4,-6,-10,-7,2,-6,6,8,-6,2,-9,10,4,-5,-6,10,9,-2,-9,-4,6,1,1,-7,2,-8,10,1,3,-8,5,9,-4,-3,-2,3,8,-10,-5,-5,-10,-8,-4,4,-4,-4,-2,1,8,8,-10,7,-7,6,-8,9,-5,-8,-5,-4,-7,-6,-5,-5,-10,2,6,-7,-8,2,-5,4,7,8,-6,-3,-5,2,-7,-5,-1,-8,-8,-7,9,2,2,5,-2,3,9,3,-4,-6,-1,7,-7,9,1,2,5,3,4,7,3,3,6,6,2,-9,2,-5,3,2,9,-4,-10,2,-5,9,10,1,-10,4,-8,5,2,-9,-3,7,-7,-8,7,10,-10,-3,-2,4,1,4,-4,-9,8,-9,1,4,-8,4,2,-1,-4,3,-9,8,7,-9,-10,5,-8,-10,4,-6,6,-10,-3,-1,5,5,-10,-4,-4,8,-3,1,-9,10,-4,-6,4,9,8,6,-5,-9,-3,-2,6,-10,-6,10,-1,1,-5,-4,-4,10,-4,-5,-7,-3,-7,-7,8,-4,8,10,-6,-5,-7,-2,3,-2,8,7,4,-6,-5,-6,2,-7,-5,10,-5,2,3,2,-8,4,-2,3,-10,-6,4,10,-3,-6,2,-10,2,-1,-8,4,7,-3,-8,-6,-5,-5,-6,5,-10,8,1,-10,-1,-10,4,-6,2,2,4,-10,10,-8,-8,6,5,1,5,9,-4,7,-2,1,-2,4,8,-5,-7,7,-7,7,-8,-8,-4,8,-5,-6,-8,9,-9,-6,-6,7,5,3,4,3,-10,6,-7,2,9,-9,4,-9,-4,9,-7,5,8,-5,8,8,-7,4,9,8,-3,-7,6,1,10,-9,-6,-10,-4,1,-2,-2,3,5,-3,10,-9,-4,-2,6,-6,-10,1,1,6,9,-2,7,8,-7,-4,-6,5,-9,-6,-8,1,-7,9,-10,-1,-3,10,8,1,-7,-4,5,3,-6,-8,-3,2,1,-9,6,-10,3,-8,-5,6,-3,5,10,1,-8,10,-10,-1,-6,4,2,-3,-1,6,10,-10,-4,1,2,2,5,-1,-6,7,-5,-4,-4,-2,7,-3,-1,10,-7,-1,-6,-8,5,-5,-4,-5,-3,7,-7,4,-8,1,-1,5,3,-8,-1,10,-6,8,-7,-10,-3,10,6,4,-3,3,7,4,8,-10,6,6,7,5,-9,4,4,2,8,-5,-2,-4,8,10,10,4,2,-10,-6,-2,-10,6,2,3,3,-2,-6,-3,-6,2,-5,-10,6,7,-6,6,-7,1,10,1,4,8,10,6,-4,-10,5,-7,3,-3,-5,5,1,3,-2,5,-8,5,4,-1,-8,-9,-4,-5,2,-4,-7,9,6,9,6,3,-7,-1,-8,1,-5,10,-1,-4,3,10,-10,-9,-10,-4,10,-10,4,10,-4,-1,-3,8,-5,5,-4,-9,-3,-9,-7,-9,10,6,1,-9,6,5,10,1,10,7,-2,-6,-5,8,-10,8,10,-8,-9,7,-7,-5,8,6,4,9,10,-1,-10,8,9,2,2,-10,6,-6,-2,2,9,-7,1,-8,-3,9,-1,-7,-3,-10,8,-5,9,-7,-4,-2,-9,7,7,3,8,7,-9,10,3,8,-3,-6,-6,-3,2,-5,-4,-10,-10,5,7,7,-6,9,-8,3,-9,4,-9,-8,-2,-3,7,-1,8,-5,8,2,-1,-5,9,-2,6,8,5,-8,10,5,-5,-8,-2,10,7,4,-7,8,-9,-6,6,-10,-1,10,-10,-1,-1,7,-4,-3,-1,8,8,-3,6,-3]], dtype = "uint8")#candidate|3061|(1, 2100)|const|uint8
const_3062 = relay.const([-5,-4,8,-10,-8,-9,-6,2,-3,-6,2,-9,-2,6,9,-1,-8,1,-8,6,-6,10,8,-9,6,2,-1,3,-7,-1,2,5,8,5,-9,-3,-8,6,5,-6,1,9,10,5,2,-6,-1,-4,6,-6,-2,1,10,-5,3,9,1,7,-1,9,-10,8,7,-10,-1,10,-5,-3,-8,-1,-10,-6,10,2,-8,7,-7,1,6,7,-8,-3,9,8,-4,10,-3,5,-2,7,8,-9,-8,9,2,3,4,-2,2,8,-1,10,-7,-7,1,-10,-7,-6,-9,-1,10,10,-2,4,-4,-1,-5,9,7,-2,10,-9,-2,4,-9,-10,-10,2,-5,-5,-3,4,-9,-1,-8,5,4,7,-9,7,7,-9,-10,-9,9,3,-2,1,7,8,-4,7,8,-6,-6,-7,10,2,-6,6,6,-9,-4,10,2,-9,2,6,2,7,5,-3,-9,-7,-5,-10,10,-1,-10,8,-10,10,-4,2,-6,-6,-4,-6,-3,7,5,2,7,-2,6,-10,-6,10,5,-8,2,4,2,-8,4,-4,1,8,1,6,9,-4,6,-7,-6,6,8,4,1,-4,7,5,3,-7,-3,-2,1,-9,1,-10,2,7,-5,9,-4,10,-10,9,-8,8,1,6,-7,1,-5,-7,6,-9,6,6,9,-9,-2,-2,7,6,1,2,-10,-10,-3,-4,-2,1,-8,-7,-4,8,7,10,2,-1,-7,3,-3,2,1,-6,-8,-10,-5,-5,-3,9,-3,-3,-5,7,5,-9,4,-6,-7,7,-1,-2,-4,-7,10,-9,5,7,4,1,-4,10,4,-1,8,6,5,-6,-7,-9,9,1,8,3,9,-3,-6,9,9,-1,-9,6,7,6,7,10,-3,-3,8,-5,9,10,-9,5,10,-4,-3,7,-6,-1,-10,2,-3,-4,-10,5,-5,7,5,-3,-6,-8,-1,8,-9,2,-1,3,-9,4,-6,-1,6,-6,-9,-6,9,-5,-8,-8,1,6,-6,5,-8,7,8,6,7,4,2,-1,5,-1,-9,10,1,-2,-7,-4,-6,8,10,-9,-5,-3,7,7,-1,3,-7,10,10,-5,-10,3,-2,1,4,-1,5,7,-9,1,5,10,10,-10,-3,-9,-7,-9,3,3,2,-6,1,10,-2,-9,-7,-8,10,-7,-6,8,-7,2,-6,7,10,-6,1,-10,7,7,-10,-10,5,-5,-6,-2,-9,4,9,3,7,10,-5,8,-10,5,1,10,5,-9,-8,5,-7,-3,8,-8,7,-2,10,4,6,2,7,7,9,4,-9,7,5,2,9,-10,-10,1,-4,-10,6,-10,-5,-6,3,4,-6,7,10,-7,-1,-5,1,1,-3,-8,4,-2,6,-3,-8,2,5,-7,9,6,-3,1,9,1,-4,10,8,-6,10,5,4,1,-7,8,4,-7,5,3,1,-7,-7,-10,-9,-9,-4,8,-4,-1,9,6,-1,2,-3,1,3,7,-5,4,3,-4,10,9,2,4,9,-7,-4,-8,6,-1,7,8,4,7,-7,-8,-4,-10,5,8,-5,6,-3,-8,-4,-9,-6,-5,9,10,3,-3,-5,1,-1,5,5,-5,6,9,-2,-2,-5,1,-9,10,-8,-6,9,2,8,6,-9,-2,-4,-6,9,-5,3,8,6,3,-2,9,-8,-1,-10,-2,6,5,-4,8,-9,8,10,3,4,4,-4,-7,-5,1,-3,-6,6,1,-4,-5,-6,4,-9,-4,2,-10,10,-1,6,-10,-4,10,-2,1,-1,-7,-1,5,-10,4,-6,10,-2,10,-2,6,1,-7,-8,6,-7,8,-6,10,1,-7,10,2,-8,-1,5,8,5,8,6,-5,-1,-10,6,-4,-6,2,8,-10,-8,-7,-10,10,10,9,2,-8,-6,9,-10,9,-3,4,6,-8,-6,-7,1,2,-5,-7,6,9,6,6,-2,4,5,-9,-3,-7,-3,7,-2,-5,-1,-6,-10,3,-5,-1,-3,4,-2,-2,9,6,-4,8,-2,-4,7,-4,-5,2,5,8,-8,-9,-3,-7,-8,6,6,7,7,2,1,3,-2,-7,10,-8,-6,-9,8,5,1,-10,-5,6,10,8,-4,9,-5,7,-10,4,-2,8,10,-7,-5,9,-6,10,3,-7,-8,-6,-1,-8,8,8,6,-3,9,9,-9,-2,5,8,1,-6,-10,-1,5,-3,-3,4,-8,8,-9,1,-7,-2,6,-8,-5,-5,-7,7,8,-7,-2,-2,10,-6,-7], dtype = "uint16")#candidate|3062|(845,)|const|uint16
call_3060 = relay.TupleGetItem(func_1038_call(relay.reshape(const_3061.astype('uint8'), [10, 14, 15]), relay.reshape(const_3062.astype('uint16'), [845,]), ), 1)
call_3063 = relay.TupleGetItem(func_1042_call(relay.reshape(const_3061.astype('uint8'), [10, 14, 15]), relay.reshape(const_3062.astype('uint16'), [845,]), ), 1)
output = relay.Tuple([call_3053,call_3055,var_3056,call_3060,const_3061,const_3062,])
output2 = relay.Tuple([call_3054,call_3057,var_3056,call_3063,const_3061,const_3062,])
func_3067 = relay.Function([var_3056,], output)
mod['func_3067'] = func_3067
mod = relay.transform.InferType()(mod)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3068 = relay.var("var_3068", dtype = "float64", shape = (30,))#candidate|3068|(30,)|var|float64
func_3067_call = mutated_mod.get_global_var('func_3067')
call_3069 = func_3067_call(var_3068)
output = call_3069
func_3070 = relay.Function([var_3068], output)
mutated_mod['func_3070'] = func_3070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_3133 = relay.TupleGetItem(func_2030_call(), 0)
call_3134 = relay.TupleGetItem(func_2031_call(), 0)
func_2115_call = mod.get_global_var('func_2115')
func_2118_call = mutated_mod.get_global_var('func_2118')
call_3142 = relay.TupleGetItem(func_2115_call(relay.reshape(call_3133.astype('float32'), [12, 15, 4])), 1)
call_3143 = relay.TupleGetItem(func_2118_call(relay.reshape(call_3133.astype('float32'), [12, 15, 4])), 1)
output = relay.Tuple([call_3133,call_3142,])
output2 = relay.Tuple([call_3134,call_3143,])
func_3171 = relay.Function([], output)
mod['func_3171'] = func_3171
mod = relay.transform.InferType()(mod)
mutated_mod['func_3171'] = func_3171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mutated_mod.get_global_var('func_3171')
call_3172 = func_3171_call()
output = call_3172
func_3173 = relay.Function([], output)
mutated_mod['func_3173'] = func_3173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2762_call = mod.get_global_var('func_2762')
func_2763_call = mutated_mod.get_global_var('func_2763')
call_3273 = func_2762_call()
call_3274 = func_2762_call()
output = call_3273
output2 = call_3274
func_3292 = relay.Function([], output)
mod['func_3292'] = func_3292
mod = relay.transform.InferType()(mod)
output = func_3292()
func_3293 = relay.Function([], output)
mutated_mod['func_3293'] = func_3293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3292_call = mod.get_global_var('func_3292')
func_3293_call = mutated_mod.get_global_var('func_3293')
call_3298 = func_3292_call()
call_3299 = func_3292_call()
uop_3332 = relay.atanh(call_3298.astype('float32')) # shape=(12, 15, 4)
uop_3334 = relay.atanh(call_3299.astype('float32')) # shape=(12, 15, 4)
output = uop_3332
output2 = uop_3334
func_3339 = relay.Function([], output)
mod['func_3339'] = func_3339
mod = relay.transform.InferType()(mod)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mutated_mod.get_global_var('func_3339')
call_3340 = func_3339_call()
output = call_3340
func_3341 = relay.Function([], output)
mutated_mod['func_3341'] = func_3341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3353 = relay.var("var_3353", dtype = "float32", shape = (16, 12, 14))#candidate|3353|(16, 12, 14)|var|float32
const_3354 = relay.const([[[-5.965485,-0.993245,-3.456327,-7.612153,-6.347858,-3.768425,6.470923,-2.900676,7.642082,-3.181796,-2.013079,1.717619,3.038841,-3.317836],[7.744457,-6.821363,-5.609723,1.045856,-1.458060,-8.734708,2.113165,-8.440245,8.230286,3.046373,2.231862,-9.620463,-3.605902,-3.638410],[0.037769,-3.593901,-8.142057,-8.669999,1.088550,3.733973,7.642695,-9.165028,3.295273,-6.180743,-5.500143,4.079651,6.170778,1.390809],[3.440247,-5.605058,-5.901761,4.634150,9.045504,6.450794,-6.351982,-2.324307,-2.394973,-7.225274,7.550812,-2.431140,-0.780435,2.156726],[2.076048,2.232297,-7.677468,7.884768,1.621876,-7.969615,4.011655,4.856194,-8.901102,9.079526,8.627554,-9.440182,-7.724498,-9.415957],[2.387422,5.431801,-9.064842,2.135181,-1.802842,9.858410,-3.893499,-8.868836,5.850750,4.319652,3.349737,9.021400,-3.680967,8.223764],[-8.674879,9.704256,2.809999,1.802080,3.323815,-4.913188,6.028920,4.567891,6.064449,6.844077,-9.121735,5.423042,-6.958180,-3.132038],[-3.400013,3.623312,1.783267,-8.730149,6.332279,-2.043165,5.110352,-9.878429,-3.726123,-0.398618,8.787954,-5.399919,-0.639828,6.550051],[-2.292069,4.009524,4.479563,-6.331233,5.260831,2.826376,-1.264405,2.336360,9.394421,-9.890259,-6.443410,2.503460,9.460218,4.109775],[0.462597,-9.592323,-9.416943,7.389478,-8.641834,-2.585059,-9.404374,9.490605,7.721624,-2.949745,-4.736238,-0.073069,9.212317,7.071945],[4.427199,-6.420844,2.432869,9.322067,-1.283188,-4.327121,-6.881228,-9.249629,-3.877386,2.011152,0.895435,-9.961787,-7.735503,-9.448213],[4.753624,-4.082525,-7.045161,4.223057,3.489738,9.211488,3.328987,9.918267,-0.955627,5.059154,1.388774,-4.714094,-1.054205,-7.881118]],[[4.868835,4.277472,-9.470298,0.611970,-2.543360,6.854174,9.673863,-0.689487,-6.073058,-9.393426,3.586259,5.817324,-9.183736,1.345422],[3.344410,-5.298625,-5.804284,7.377227,1.924271,6.776442,0.242410,-0.086291,2.245999,-0.851297,-0.587251,-1.425699,-4.106327,-8.213161],[1.924200,3.321096,1.182457,3.245326,9.859982,9.975890,-1.999649,8.142050,1.755318,-6.469607,-9.113278,-3.901804,-1.228957,-6.480216],[-9.972348,4.508541,4.084335,-4.278936,-5.318748,-8.072744,-9.547214,0.321799,2.048092,7.242994,-3.518186,2.656233,-3.303712,5.573771],[6.030188,0.393923,-7.481105,4.139841,2.344772,-0.484209,-4.852117,-6.098126,-3.504336,3.328937,-2.547144,-0.053009,-6.444967,1.086607],[8.350353,0.067272,-3.413736,9.650491,-7.650811,-4.691855,-8.015112,0.567720,-8.355563,-9.553861,9.790535,-7.416623,-9.120926,-3.836187],[-4.518712,1.682986,-9.185752,-5.654985,9.184762,2.578635,8.959042,6.414918,8.108558,-1.431951,-8.470622,-8.997719,-4.982401,1.380295],[-8.908239,1.357539,8.177010,-8.854900,-3.970569,7.908583,-7.237965,3.638972,-3.308414,-1.781829,4.581676,3.274635,3.033269,-8.758451],[-8.494239,-7.390457,2.253344,-5.545020,-5.807157,6.338870,7.966040,-9.140847,6.598432,0.655192,-4.257655,5.643680,-8.610816,-7.797448],[8.956030,9.730068,-6.414932,-0.891611,-2.530853,8.048798,7.879881,3.412347,1.938496,2.802656,2.328816,-0.022331,-4.673223,7.831564],[2.374002,-5.550796,-7.428575,-4.033691,9.636802,6.417023,7.419881,-1.698721,5.919033,-3.017507,0.703969,3.688302,-3.090707,-5.548331],[-6.210776,-4.097952,8.979922,-1.966279,-8.134511,8.629780,3.607349,0.605533,3.798182,9.220170,2.523711,8.338651,5.907792,1.925559]],[[-6.312244,-3.432553,-7.662443,-4.996970,6.789859,1.589373,-1.173769,9.485195,3.842649,-0.366274,-2.045043,1.710790,5.211107,-3.001059],[-1.469505,1.866700,-5.019705,5.443182,-8.088326,-1.242583,-6.501952,5.663509,-9.648900,-4.809561,-2.544502,-5.235735,-6.122484,-7.822333],[-6.579422,7.656464,5.241780,-2.790789,-4.591368,-6.082536,1.612776,4.885852,-2.698278,-4.562169,6.585076,1.739269,-3.833520,3.944979],[7.798697,-6.343093,-1.520176,-7.189269,-1.756001,0.622836,-8.537435,9.910926,6.711392,3.464898,-2.244971,-5.077279,-3.456567,2.127720],[-7.916679,-1.485986,-2.541003,0.769793,-2.360944,-6.101280,-0.029198,8.901502,2.891335,7.334400,1.116346,9.619162,-4.403764,-5.258563],[9.924008,5.075047,-6.235270,3.626243,6.247625,3.726530,6.577578,-7.749962,-2.237127,-5.975707,4.844364,-3.694542,8.946308,-0.057977],[0.801135,-8.572866,-9.854542,-2.622279,3.577571,3.806271,4.562682,-5.628676,3.114212,-6.573707,7.485637,7.451659,-1.260081,8.934454],[8.758864,-2.869254,-6.806752,0.506993,-0.280552,4.906502,-9.355320,-4.010087,-3.651494,-3.394727,-3.943571,5.014212,2.331081,-5.149957],[-3.603129,9.997446,8.635008,-5.827305,5.540656,-0.652800,-7.515861,4.935829,-5.482398,-0.229134,1.125148,-1.582056,2.182912,9.421065],[0.355028,7.012930,0.441198,8.728472,-6.364213,9.638673,-4.507138,1.532177,8.823731,0.877992,3.685548,-4.716801,-4.931320,-8.039656],[-2.226620,-6.503838,1.847971,7.867340,6.351992,4.822265,6.542017,5.733949,-3.283361,-7.367021,8.401926,0.959925,6.503525,9.697495],[5.573761,9.295873,4.809297,8.167126,1.479131,-1.300741,0.762075,-1.954303,-2.698408,-3.979373,0.429078,-4.316804,-2.774410,8.572142]],[[-7.932075,9.560541,-7.992639,4.738262,8.551631,-4.791672,-9.442926,2.458730,-1.231747,-3.282995,9.147507,9.695429,7.108554,0.362777],[7.561440,3.099106,-0.480330,2.112082,3.360539,-3.643354,0.652763,-5.622520,5.904790,-7.361856,5.816466,-4.944721,1.709470,8.850594],[-3.285443,8.805735,4.079604,8.089482,5.042309,-9.694513,3.709333,8.172206,4.334763,-6.294695,7.392453,-7.281485,0.136758,3.424183],[-9.935191,0.495605,-4.780783,9.929134,8.777812,2.254260,8.201992,-7.101290,-5.296771,-2.515256,5.458586,8.501814,5.137240,7.992436],[-2.187257,2.661082,-4.249080,5.176361,8.279054,-7.265324,7.259769,-2.606270,-9.166253,-4.754538,-6.113474,-7.262810,2.646928,6.351556],[-1.577643,-0.365818,8.569346,4.166262,-5.158886,-7.935234,9.495948,5.194316,-6.736264,-1.559017,-2.999157,-1.368134,3.928167,-7.432557],[-2.410153,5.378736,-0.444281,7.264644,6.850363,3.658369,-6.695666,-0.163662,4.603159,-1.953207,3.665704,-1.533702,9.176482,-8.048359],[7.321875,-5.939849,-7.576425,-4.258344,7.716045,8.156931,8.236512,-4.996820,-5.811331,7.566811,-1.319885,-4.380137,-5.751996,2.934400],[9.816938,-8.529049,-6.472293,-6.708630,-5.608746,-0.638889,-9.590310,5.106399,-5.960494,6.825687,-4.923813,-8.582457,1.644965,-5.875803],[7.624445,3.146862,7.444765,-6.580099,-5.492359,9.419077,8.727714,-6.183606,0.087094,4.550479,-1.483417,-8.466805,-7.610862,5.790941],[9.299567,7.625181,-7.448126,4.762943,5.551335,0.027168,-2.076270,-8.308510,-9.073791,-9.774677,-0.475226,-6.424482,-6.790450,8.953658],[2.286257,-6.608244,-7.491049,-7.496272,8.240424,5.274137,0.725326,-3.496711,6.945149,5.574651,-1.669878,8.355177,-7.551843,9.335335]],[[-4.026315,4.724188,7.406943,6.191335,5.624584,-7.690906,7.784808,6.663080,5.405548,8.822117,2.185333,-8.900086,-6.738899,-4.059915],[4.638311,0.442456,7.568018,-8.777039,3.270409,-0.692322,2.341655,9.377922,-2.189963,5.563304,-8.471577,-8.374394,2.039820,4.969953],[-4.089151,-0.819728,1.447385,-2.125114,-9.785490,-0.422685,-5.520788,7.870143,5.779975,-7.067990,5.843200,0.985147,-7.761243,6.594271],[8.272425,8.934878,2.387867,9.260678,-6.588501,1.253911,-2.290925,-3.168498,-2.279706,-5.489503,-9.996087,-6.966969,-6.071719,6.702538],[0.899760,4.514727,-4.383962,9.374611,-7.157451,-0.804164,-0.300296,-7.516612,0.628513,6.108478,-4.889478,-5.025267,-5.677960,-0.523154],[-2.683133,-7.562418,4.934731,-2.891883,-9.501341,9.142365,3.198626,1.572698,1.250468,-2.812978,-8.670243,-8.219561,-8.804699,1.485242],[2.231058,6.065635,-4.418018,-6.116630,7.667563,0.799183,-9.245023,3.877120,-9.236471,2.353187,-0.567356,0.235636,7.884752,4.864824],[-1.458682,-4.044804,-1.862073,4.465800,7.809205,-9.455352,4.894303,9.050234,-0.121401,5.178716,4.147132,-8.260514,-9.626677,7.619758],[-6.144381,2.640851,9.228281,-6.928010,-0.301626,-6.784175,2.342068,-8.881911,-7.334201,-5.875580,-5.439053,-4.756439,-9.393962,0.785938],[-0.299106,-5.162961,7.866596,0.253266,-2.684285,3.721788,2.034175,-1.293421,-5.518743,4.337421,-2.221529,-2.680601,1.081837,8.912451],[0.822369,6.658762,7.833068,-6.816987,1.496577,3.866795,-2.623530,-3.812094,7.277605,-9.290151,-7.762779,-6.708761,-5.429605,8.435629],[3.494946,5.960551,-6.507587,-6.803545,9.334718,-6.886667,-5.816353,-7.723267,-8.763022,7.761832,0.779292,-2.499235,1.226304,2.642717]],[[0.733827,-7.382577,1.066707,7.728423,-5.741069,3.296522,0.359056,-4.293048,1.498246,-4.558094,-9.816493,9.316926,6.099591,9.771959],[6.181187,-4.804818,0.049947,5.290432,9.922220,-9.568346,5.576154,2.903154,-6.833136,-1.635237,-9.491895,4.189233,-1.690643,-3.061938],[-8.506550,7.345305,-4.085082,-4.757014,-2.791304,-7.896321,2.045740,7.316958,-3.413483,1.525958,-3.317387,3.068001,-3.729410,6.395021],[2.032897,-0.396847,7.611976,7.611386,-4.131805,-0.039292,-8.144263,-2.914948,7.160465,-5.441956,-7.805113,-3.518529,9.697212,4.649643],[8.396417,6.946558,-7.707591,-8.432438,1.036737,-2.629391,-6.752911,-4.966967,2.452860,-1.475570,-2.053467,7.477677,-6.665913,0.407543],[5.132172,6.471591,-5.185047,9.752917,-0.149414,-6.850785,-1.025530,8.339713,5.719490,4.858823,-9.696072,-7.573401,-9.296436,2.012935],[0.988617,-0.833479,0.130196,8.662744,-5.033879,3.615547,4.055588,-5.315376,-8.455474,-9.202323,5.578468,-7.221314,9.161069,-5.345675],[-8.943184,-7.322684,8.149857,-1.098422,-8.671372,-4.906270,7.397038,8.657860,8.142820,-3.612404,-6.853077,-8.986063,-3.196532,7.508698],[5.197091,3.254865,-2.614637,9.472158,-8.419016,-2.344177,-8.130242,-3.094980,-8.476440,-1.656253,8.926141,2.905253,0.976555,-8.078535],[1.974149,3.805507,5.704560,-5.041971,-4.919272,6.392315,-9.106811,6.822574,-6.496765,-4.321931,4.646221,0.850935,5.895595,-5.793339],[-1.192200,-3.316992,4.820268,-0.251957,-3.560873,-9.977507,-8.133890,1.699287,7.858633,2.682816,-2.808542,0.216652,-7.342874,4.961324],[2.826517,-7.199529,-4.945164,8.968235,-8.622351,-6.269559,9.610625,3.931089,7.464438,-1.342220,4.254391,-8.906918,7.737256,-2.669628]],[[-4.200489,7.516555,5.476797,1.584668,-8.861857,1.010380,-4.785631,2.569221,-6.780816,-4.072301,2.990499,6.295627,-7.853569,3.090566],[5.348298,-1.649993,5.431076,7.304623,3.729258,-6.547225,-2.022231,9.339156,1.839281,-8.679388,4.000022,4.499687,2.168933,-2.858046],[6.138797,3.051699,3.406266,-5.120175,2.390122,2.162421,7.842842,-4.079981,-9.805777,-0.395256,-6.307826,6.612442,5.601491,-5.422893],[2.465618,6.394547,-8.499282,9.384704,-9.745236,-2.835850,-7.438001,-5.275218,6.381732,9.003469,-3.000170,-2.377865,-6.558398,7.911936],[-9.653448,-1.028836,-7.093375,-1.844993,-4.741143,-5.581348,-6.348869,-7.373160,-7.626287,-3.670023,7.887181,2.549952,8.311189,-3.188124],[-8.936752,-2.364589,0.825623,-0.032774,-7.548361,1.232710,8.082328,4.500317,-2.682866,-7.201539,-8.858372,6.324196,-6.939223,-3.086789],[-7.825047,6.281613,-2.910741,9.441621,-0.033134,8.932372,4.657333,8.300995,-2.287095,-1.552258,-8.648377,3.841254,3.753247,-8.825758],[-5.459007,6.396009,2.136721,4.091837,-7.882787,9.729909,-8.230018,4.393811,2.284005,-3.092377,7.345355,7.137845,2.430650,2.431283],[9.608512,-6.281673,-3.507426,-0.906205,-6.223897,5.357569,-5.418848,2.144694,7.454896,-7.121848,6.523969,-9.634577,7.222025,-2.023662],[-7.626233,8.199504,2.702725,9.400792,-8.974995,5.457306,4.294913,8.677759,-8.267808,5.827975,-5.975327,-9.528405,-8.281404,-7.953640],[-3.118924,4.813186,-1.872176,-8.708006,-6.115779,2.294784,8.795910,-8.307142,7.354014,2.061405,-5.103844,7.370494,-5.245930,0.431675],[-0.298079,3.237071,-8.021313,-7.575794,6.486575,8.185572,-0.792209,-3.740353,0.981422,2.286581,3.954041,-5.531135,4.040515,-3.412347]],[[-4.965856,-7.973902,6.517551,5.681379,-3.029661,9.999133,1.452552,-1.602545,7.289242,1.619487,1.612992,-8.024786,3.216674,-5.704253],[-9.219444,1.409383,-4.141952,-9.382313,8.403964,-0.588854,7.407943,5.340807,-7.538295,-6.339459,7.913318,-0.460753,-7.334970,2.852554],[-5.107391,-9.070507,-2.547814,7.812841,-0.701759,-0.809636,9.967337,0.834767,-8.745671,3.757108,-7.221123,4.162253,-0.178334,-7.336774],[-3.733543,-5.502910,-9.072241,6.924402,-2.493208,7.495258,-9.217943,-1.277048,-3.292620,-9.935381,8.644824,4.479310,-4.047074,6.388670],[5.065852,0.483301,9.822765,-0.641796,3.520300,-0.255907,-7.477641,-1.963839,1.822920,-4.996304,-7.630840,7.542461,3.335260,-2.671306],[2.082878,-6.997033,8.901145,-5.944225,3.990716,-0.110055,-6.212157,2.354162,8.383911,-1.743974,-8.335901,-6.815192,5.414035,-9.818901],[6.989241,-6.383306,-3.627245,9.593086,1.519874,-1.585805,-9.552313,2.484518,8.608926,5.873080,-0.609132,-5.853775,-5.811383,9.287913],[-1.136769,-7.324528,-3.571193,-4.744489,7.822321,3.238434,9.421773,-6.564937,-1.036956,-6.745718,-2.322055,-5.230895,3.813368,4.330273],[-5.452404,-5.099915,0.364292,-8.643009,0.072073,-6.072095,-4.585069,4.912785,-8.119220,2.624155,3.247365,-3.912035,5.847603,-6.761779],[7.337212,-1.203874,1.615285,-5.426137,-1.682375,-1.882041,0.227532,-8.821415,-6.028069,5.180394,3.605531,-3.305402,5.369203,-3.229323],[6.560537,8.591587,5.137808,-7.964227,-2.806732,4.851535,7.186597,9.595670,-8.899218,-1.482613,0.916800,3.200018,-0.849021,-1.884387],[7.155505,-7.897288,8.764079,0.510929,-7.842861,6.642749,4.821988,7.020044,9.370810,4.907713,-9.289390,-5.796203,-3.770529,6.852618]],[[7.177112,-8.042823,-5.831489,-4.063890,-5.205272,-2.249759,8.759421,-7.893802,-5.640071,-7.717924,-0.419065,-5.417268,0.731947,-6.779647],[-9.176951,1.511835,0.744066,-9.826740,-0.726627,-7.035755,9.382380,8.617194,-3.473476,1.314509,2.474886,-7.683720,1.615910,1.575669],[-7.391077,-1.602400,0.670800,-5.450499,8.279444,-0.492198,0.598111,7.935815,-2.389144,-7.691189,-7.051129,0.069973,6.139512,3.537329],[-9.045154,0.155378,-5.488787,-1.671128,3.008301,1.651293,4.111615,1.786872,-6.625334,7.717882,4.111991,3.591934,9.884713,-8.101617],[8.738036,-3.001601,-3.021123,-4.003463,0.065327,-2.801409,0.826953,-2.874298,9.413734,-0.780749,-6.301525,-8.590042,5.171999,8.046223],[8.595285,6.019890,8.683930,-7.898639,1.948562,-6.136060,5.372365,-5.343958,-2.746378,-7.857963,-5.889260,0.047454,-8.490839,-9.549050],[-7.741836,8.102605,7.231942,-7.834569,-4.525340,-9.058200,8.095786,-3.116839,6.139187,2.969874,9.532704,-4.441398,-5.918167,-3.598802],[9.939315,-3.497132,-9.554379,0.355802,-5.211776,-9.523650,4.853407,4.490515,-1.690613,9.131911,-4.446781,0.825154,-3.556561,1.560656],[-2.226827,-2.068751,-7.442467,5.633027,-8.839110,2.042305,-2.537117,0.163563,-3.852140,-6.622842,-9.667623,6.486023,-8.201528,4.963464],[-3.544914,-4.269137,-5.135393,-3.919627,5.874548,-5.658129,9.085686,1.822549,8.148636,0.886143,9.437124,-0.295975,9.539244,-8.524108],[1.843812,6.190984,-7.766172,-8.280657,-0.405678,7.117963,-2.596519,2.915950,8.550802,8.702112,2.478876,1.776194,-6.749536,-6.961856],[7.792358,8.914058,-8.375705,-8.696741,-0.613236,-4.743836,0.843599,8.269612,7.097355,9.253672,8.962088,8.821734,7.471049,2.467776]],[[2.891802,-2.141865,-8.094216,6.115406,-1.628182,8.643135,-8.947945,5.591879,2.324947,9.396674,1.308581,-6.649407,0.855949,3.902532],[-3.101232,-1.479299,-8.820833,-2.336425,-8.722065,-9.169599,5.308570,-3.235516,4.002565,6.212907,-4.178796,9.601647,-2.126033,-7.166946],[5.675530,-1.355076,-9.793886,6.081512,7.043733,3.752588,4.430666,-8.946475,7.086059,-0.678634,-2.212165,8.731076,-4.427943,-5.453547],[-3.501429,-3.530456,-5.739297,0.253054,9.056433,-2.519766,-6.429208,8.919105,7.524392,-3.375498,-9.034740,1.106787,8.527753,1.373668],[9.850402,-8.896876,-8.339199,1.285082,0.609554,7.556093,-5.669231,-0.156810,4.575108,-9.872709,7.082964,3.214635,-2.241101,2.240015],[4.116219,7.512491,-5.427411,5.316675,3.878817,-9.477814,4.928980,2.417925,0.651953,5.961438,4.465988,0.242811,-0.897941,-7.094464],[2.556805,-2.803404,-5.639916,0.540687,2.637422,6.224749,6.012118,-3.646949,4.543109,-0.888723,8.805386,1.102395,-2.411478,8.149212],[0.624775,5.082858,7.909087,-6.806307,9.200441,6.338969,-1.742551,2.338193,-1.275886,-6.320821,-1.393648,-5.312449,-8.708604,-1.619396],[-2.616437,-0.028865,-2.056171,-8.484490,5.850337,8.771872,-3.431650,-6.317856,-1.019883,-8.078638,3.360444,-6.555877,-9.166318,4.236867],[0.734783,7.417694,5.743548,0.404262,5.801698,-6.090684,-1.416900,0.421986,-8.406661,4.377959,-9.352867,0.444202,5.548892,1.388106],[-0.621398,-3.196684,-9.381960,4.855406,3.719928,0.429576,-5.011478,-6.224079,-2.636311,0.183086,5.461735,8.597552,-7.977926,3.711555],[-2.267347,4.849275,3.727091,-5.167368,9.649476,3.379805,4.147579,5.046386,-0.734947,-5.710913,-2.814331,4.420887,3.475847,5.886303]],[[4.224884,8.595783,0.086361,-5.954960,-6.985044,-3.998224,-9.445059,9.914781,0.823069,8.024296,-7.607888,-9.455103,7.823907,-7.296677],[-6.045112,5.903636,-3.651334,6.310657,8.536909,-7.543410,1.558106,-0.655231,-7.051763,8.849612,-9.088173,-6.729457,-7.002771,2.032407],[-3.266435,-7.636403,8.817424,1.002268,-6.029611,7.534120,-3.463496,-6.807189,4.455941,-8.509702,-4.025272,6.947939,-6.220640,2.273623],[-7.052982,6.305374,-7.842521,8.330420,0.032335,2.246810,2.137305,9.734183,-8.112431,6.360502,-7.939923,6.259961,4.274550,-2.868424],[-8.098470,8.959867,-3.051882,-4.564897,-8.073206,6.962240,-3.114084,-2.936253,3.503264,4.138840,9.524249,8.771013,-4.062201,-3.825212],[8.694523,-4.707874,-1.517964,-1.717931,-8.345800,3.380718,-5.892246,-6.806935,3.822225,2.133773,-8.526724,-9.051144,3.616571,-8.142585],[-8.099769,-9.675201,1.765503,-1.002354,-9.885479,-4.047326,1.181438,0.659368,-5.351565,-7.976380,-5.078542,5.753708,-6.533888,-5.134089],[3.492336,-2.959065,7.505317,-7.033294,4.511055,-7.080142,7.763744,-0.457406,-9.763656,3.360511,1.071853,-3.070760,7.928146,-4.944956],[2.292919,7.199628,9.667911,2.475669,-3.604943,4.441549,-2.508644,1.540642,8.356828,-6.026486,-2.788868,-4.315454,4.091536,5.857319],[-7.079197,-4.550235,7.612281,0.996854,9.736332,2.635575,-1.998561,3.063356,9.208077,-7.444879,-0.438511,-6.720689,-9.786301,-2.515893],[-7.050396,-7.544888,-1.681867,-2.414522,8.040028,-8.423035,-6.524963,-8.889881,6.329868,5.767791,2.000161,7.232344,-8.437054,-9.933137],[-3.613471,-8.673085,-3.876814,-1.978625,-3.814516,-2.182877,-9.797451,-8.360193,5.544487,7.057910,5.141195,1.696490,-7.658367,-5.591187]],[[-7.137924,-8.909664,-5.297542,4.142101,3.695073,5.643247,4.809187,7.950559,-9.003047,-2.677219,3.108763,-1.399244,2.808063,7.189524],[-5.519198,-3.560964,-1.953583,-5.544949,-6.210232,4.221285,7.145317,9.890881,2.596374,-3.197370,-9.211306,9.310939,-0.852150,-9.451772],[5.459068,9.143135,-3.873959,-3.978170,-7.939896,9.656380,6.302475,5.948150,1.540541,9.262359,0.060684,-8.593793,-1.424384,9.589204],[-3.779933,-0.543200,6.973278,1.542317,-7.347903,-8.744274,-1.444648,4.235246,1.032367,-0.905761,2.344893,2.379661,0.581282,-2.419657],[6.290669,-9.771880,-8.783728,0.242662,2.058342,8.562301,-2.394171,-5.818411,1.379401,-9.316805,-0.819947,6.411828,-1.005963,3.760369],[-9.177781,-1.977954,5.373724,1.656332,2.343669,-6.812498,-9.329936,-9.550442,2.136432,8.918761,-8.952073,2.672694,2.799363,-0.462203],[2.749149,2.208231,-2.286693,6.688294,9.244837,1.730659,4.172577,2.572234,5.710580,3.976477,-6.777443,4.453029,-0.972604,-0.853554],[8.924177,-7.160087,-2.237899,-9.714680,4.809744,-4.430968,7.090159,2.495211,5.795424,-0.950542,3.884848,-9.575873,-7.570091,-2.808542],[-3.428157,-3.210526,-2.492991,1.138276,1.210691,3.533007,3.635293,7.269175,4.109760,-1.953800,7.786513,3.864126,-0.324785,-3.166754],[4.803346,3.551001,8.018284,1.319063,-3.106684,-8.673912,-3.562790,-9.708752,-0.504524,-4.478014,9.756270,-9.236393,4.257861,5.657199],[2.613778,6.098219,-2.721955,4.693584,-0.074869,7.743041,1.850425,-9.001770,2.651394,6.739486,-5.024962,0.867483,-0.163360,-8.812156],[6.632723,7.201887,-2.917639,8.544616,-8.669116,-7.205471,7.438885,2.023898,-2.419480,8.268930,4.347382,7.787271,-0.084551,2.847109]],[[-2.479494,5.806901,8.572722,3.061798,9.856774,-0.039289,8.388424,-1.695555,1.118191,7.304160,-5.576868,2.168035,1.861164,7.057683],[-8.134606,3.445606,5.318513,-1.221355,4.435171,-3.713917,7.990733,-3.971651,0.701832,6.723669,1.197433,-9.955178,2.817557,0.658696],[-2.462469,8.822842,7.121327,-1.263209,1.526348,6.020095,-7.855480,8.504703,-9.165173,-3.152346,-3.209303,-5.821012,-6.598579,9.497676],[8.675852,-5.863335,-5.504627,-4.419841,-8.085472,-1.469269,1.131301,8.286838,9.496351,1.741836,-1.495756,2.980222,-9.334913,-5.479936],[9.806679,-2.363826,-1.246097,-2.973223,-8.540983,-9.750265,0.424886,-7.877119,-6.383204,-7.324918,-3.695827,-9.972146,2.631448,-8.665257],[1.776834,-2.258706,-0.471648,9.614879,-3.531884,4.725235,-8.095289,2.010692,-2.975814,2.741239,3.097846,-4.281772,4.512143,9.052424],[8.277376,-4.647048,-1.416122,5.918465,-0.566444,-7.207731,-1.272728,1.172263,8.883792,9.432116,2.143938,9.822087,-4.069007,-7.006371],[-0.500817,0.245973,6.014144,-3.561446,-0.784560,5.835187,0.245930,7.987245,7.586799,-3.469864,-1.239414,5.638607,-5.794161,-5.057070],[-3.076226,4.977897,-4.457081,-5.768469,-8.954087,-6.318902,-1.425883,7.169470,1.493252,-0.362325,-9.094380,8.948207,-8.523341,-4.401968],[5.782062,1.039190,4.535843,-5.341348,4.120960,-4.616542,-7.487053,5.282213,-0.829780,-1.513879,9.500956,-5.545065,4.295220,-8.585232],[-5.758068,6.370251,-8.852031,-4.799828,5.532385,3.872552,5.464291,-6.653272,-4.273548,2.464390,9.295190,-6.805171,-3.861749,-7.827356],[5.826511,3.664575,3.364660,9.284271,8.258246,1.411079,4.363561,-2.595912,-1.271780,-8.215782,-3.785113,6.825904,4.751292,-8.351154]],[[6.974029,7.142199,-2.640894,-9.961715,9.562016,0.396283,8.303739,8.156483,7.934465,-1.866272,2.999415,1.960844,-6.875164,7.482213],[-3.661415,1.837404,-7.584953,-6.783691,9.821407,-4.788096,1.704418,7.808831,-5.092464,9.435436,-3.176661,-3.403360,-9.525422,0.939005],[-3.120643,-1.349101,9.478045,-9.942433,-8.484826,-2.768919,-3.742289,0.068811,-6.973659,-6.243733,8.658188,-0.121403,2.983893,7.765436],[-5.705260,-5.427003,7.996910,-3.652963,-4.474064,-8.427789,9.614428,-3.285701,4.951289,0.397263,4.370054,4.799499,3.664761,-4.580664],[-7.269302,-7.645547,3.298323,4.752176,0.415520,9.323408,5.982422,3.134295,-3.963152,-9.143255,2.730840,9.673457,7.221988,1.234702],[-7.989289,-7.656803,-7.175550,-4.277013,7.775536,-5.485713,4.046335,9.174871,-2.125865,5.181480,-7.145716,-3.866397,-0.746468,-2.410132],[-5.237425,-6.567517,-9.027774,2.674457,-7.577276,-3.243299,-2.485505,-5.956358,-6.494361,-2.274026,-7.884520,7.051918,2.303885,-2.996767],[5.963900,3.276035,3.442239,-2.256667,-3.313332,-7.713595,1.555754,9.450934,6.674279,6.766335,9.485527,-4.982408,-2.933905,-9.409722],[-9.009214,4.931206,-4.008168,1.981254,-9.652425,7.419811,-8.218540,7.598338,-5.805095,8.614033,2.429368,7.675062,-4.128863,-8.528626],[2.574556,-5.895037,-3.903299,9.854481,-0.205067,-8.097607,-6.692830,-6.660897,5.895385,4.935520,-3.005335,7.276892,6.190831,-9.410787],[4.541429,-1.534410,4.680245,-8.680804,-8.359848,-8.060671,-6.742604,-3.626715,-2.195388,2.262989,-9.259671,2.174297,8.061099,-6.692099],[4.702159,-2.108101,-6.787690,8.518141,2.565346,1.120813,8.029166,6.610209,-8.072088,1.945746,-5.133965,-4.512325,5.202701,4.977931]],[[-6.192950,2.669070,-1.852765,-7.572639,0.749894,-4.109095,1.150487,-6.797161,-8.525823,3.348035,5.200432,1.021963,2.562831,3.115560],[-4.094831,-3.645917,-2.832052,-2.430356,5.405499,8.687835,1.630773,-0.681695,4.758299,5.443757,-3.764036,-0.798558,2.574805,3.415863],[8.142882,7.294677,6.664769,2.675715,-4.623690,-2.883945,-8.908564,-3.114673,6.818073,2.991399,4.133951,-4.676769,1.423644,-1.904671],[1.159790,8.997300,-9.303525,-7.527828,-9.955449,6.842382,7.852116,2.784204,-7.104163,5.586117,-5.709587,-6.983476,-8.534790,1.674194],[-6.025405,-7.225366,7.132170,-5.975114,0.199535,3.858559,-8.848397,-3.569575,-6.345483,-5.284728,2.004295,-1.941271,-5.750104,7.006985],[-0.354015,-3.598206,-9.593415,-1.570073,-1.754524,2.833253,1.951764,-5.880297,-7.318432,7.389132,-4.178513,0.644901,-2.700808,4.160515],[-0.568365,5.142489,7.684009,6.403441,-1.556387,5.073370,9.946158,-4.422217,3.978228,-7.822331,1.812530,-9.717861,3.524680,1.337993],[3.274958,-4.579783,-7.338059,-4.990681,7.224746,1.793388,1.098810,7.962291,-4.133218,7.519413,-9.181216,0.502026,-6.601995,1.437382],[2.276338,6.209471,4.971969,-2.392922,0.694443,8.616422,4.173155,-6.519032,0.977073,2.289107,-8.623390,7.491896,-2.315010,-2.704412],[-0.316246,9.364998,7.117755,-8.509995,-3.074257,-8.796190,-0.601881,9.671264,-2.503714,-0.569753,7.376281,4.470251,1.897807,-1.469893],[0.858315,-7.375252,-0.015229,1.836880,-9.318696,-4.786597,9.950007,-6.976876,-6.841998,2.195681,3.893278,-0.720402,3.543845,-4.469088],[-5.159297,-1.354421,-5.315569,2.875735,-4.536093,-4.375346,-6.698825,-1.190907,6.599147,5.478958,-7.682688,-8.472205,0.432439,-7.323602]],[[7.422739,9.698323,3.627215,4.487924,-7.317512,-6.600531,-8.394879,2.347094,9.729776,-2.328522,-8.907533,-3.396903,-4.221388,-9.570722],[3.195460,-3.042340,-3.152077,-6.005458,3.475242,6.715351,-1.850931,4.245111,-9.533091,7.999757,-0.661385,-1.370366,-9.864241,7.599712],[1.050207,-1.444726,-1.433302,3.296833,-6.656367,-7.769733,-9.919325,0.721345,9.171201,6.675450,6.129913,0.841909,-8.402115,-9.839335],[-6.068045,5.561295,0.385400,-3.779155,-5.092120,-6.045826,3.909264,-7.667977,-5.960404,-6.357560,-3.421047,0.336588,-6.950419,8.071397],[-1.380523,0.179528,8.456481,6.825105,-9.992280,-2.071381,6.184539,8.105760,1.562498,-0.623388,4.269716,7.082504,-7.203524,6.867882],[8.134336,9.728079,-2.666446,-4.716543,2.462660,4.006084,4.564976,-0.656754,-9.842238,6.439934,-1.521434,-7.412503,-3.309901,4.031684],[-7.266750,-4.414681,-8.275374,-2.953830,-0.670514,-4.484943,-6.039674,-8.170678,-1.956524,-7.921728,-3.566379,-1.328278,-4.801611,2.364798],[1.075024,1.425838,7.763591,4.687118,-6.686079,0.763915,8.228705,-9.564791,1.265765,4.000487,-4.332370,-6.535329,-2.557670,8.137446],[7.611009,3.164477,2.890801,8.637537,-6.646357,-0.037479,-1.847993,-6.083216,-9.811672,2.142270,5.283478,3.276787,-2.223857,-8.610877],[-3.298866,9.245755,-0.384173,-0.829587,-4.315709,7.334636,3.307579,2.023184,0.761055,8.962750,-1.559917,1.663147,8.648523,3.085393],[-9.322737,-8.024050,7.294473,3.797151,2.436000,-6.047259,9.308965,-6.726886,1.843557,-3.162556,0.582172,-5.050687,-6.442539,2.849834],[-0.172135,6.523713,1.497510,-5.242289,-0.980414,-1.652042,7.646372,5.694023,-1.868555,1.283445,8.106780,-5.225010,3.209624,-9.480729]]], dtype = "float32")#candidate|3354|(16, 12, 14)|const|float32
bop_3355 = relay.mod(var_3353.astype('float32'), relay.reshape(const_3354.astype('float32'), relay.shape_of(var_3353))) # shape=(16, 12, 14)
output = bop_3355
output2 = bop_3355
func_3358 = relay.Function([var_3353,], output)
mod['func_3358'] = func_3358
mod = relay.transform.InferType()(mod)
var_3359 = relay.var("var_3359", dtype = "float32", shape = (16, 12, 14))#candidate|3359|(16, 12, 14)|var|float32
output = func_3358(var_3359)
func_3360 = relay.Function([var_3359], output)
mutated_mod['func_3360'] = func_3360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2160_call = mutated_mod.get_global_var('func_2160')
call_3369 = relay.TupleGetItem(func_2158_call(), 0)
call_3370 = relay.TupleGetItem(func_2160_call(), 0)
func_3358_call = mod.get_global_var('func_3358')
func_3360_call = mutated_mod.get_global_var('func_3360')
var_3394 = relay.var("var_3394", dtype = "float32", shape = (4, 672))#candidate|3394|(4, 672)|var|float32
call_3393 = func_3358_call(relay.reshape(var_3394.astype('float32'), [16, 12, 14]))
call_3395 = func_3358_call(relay.reshape(var_3394.astype('float32'), [16, 12, 14]))
uop_3396 = relay.sqrt(var_3394.astype('float64')) # shape=(4, 672)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_3403 = relay.TupleGetItem(func_1282_call(), 1)
call_3404 = relay.TupleGetItem(func_1284_call(), 1)
var_3405 = relay.var("var_3405", dtype = "float64", shape = (4, 672))#candidate|3405|(4, 672)|var|float64
bop_3406 = relay.logical_or(uop_3396.astype('bool'), relay.reshape(var_3405.astype('bool'), relay.shape_of(uop_3396))) # shape=(4, 672)
func_1693_call = mod.get_global_var('func_1693')
func_1696_call = mutated_mod.get_global_var('func_1696')
const_3410 = relay.const([True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True], dtype = "bool")#candidate|3410|(432,)|const|bool
const_3411 = relay.const([3,1,-9,5,-4,-5,9,-8,-3,-10,8,-8,-2,1,5,-8,-1,2,-3,-5,8,-1,-7,5,7,8,-9,-4,-7,8,4,-10,6,-6,1,-7,3,-5,-6,10,-6,-1,-9,6,2,7,2,1,-1,7,8,10,2,2,8,3,2,-10,9,-4,2,6,-1,1,4,6,6,3,-3,-7,-7,-4,-4,-10,2,5,7,7,-8,2,10,8,-5,-3,-8,-9,3,-5,-10,10,-9,4,-6,-4,1,10,3,7,-1,-6,3,5,9,-2,5,10,9,-1,-7,3,10,-9,-1,1,-7,2,-2,-7,-7,1,1,7,5,6,3,-10,-3,8,-7,8,7,5,7,2,1,5,5,3,-9,4,8,-7,-4,7,-5,5,-4,-1,2,-2,-7,4,-10,3,-6,5,2,-5,6,-6,-8,3,3,1,-9,8,-4,9,-9,-7,-1,9,4,-10,7,-3,8,6,-2,-7,-4,5,7,-3,-8,1,1,-5,-7,7,-2,10,-6,3,5,-7,5,4,7,10,8,-9,3,-5,-8,6,-1,-3,-3,5,8,-5,-5,7,-8,9,6,6,1,-2,2,-2,2,-9,2,3,7,3,10,-4,-4,-6,-3,2,2,7,-1,6,-6,10,-3,8,-4,-2,2,5,-10,-8,1,-1,5,-8,8,-10,1,2,5,-1,-2,3,8,-2,7,5,2,-3,-5,3,-5,8,5,9,2,10,5,-10,9,3,-1,-6,-6,2,-1,5,-2,-3,4,8,6,-2,1,-3,-3,6,9,-9,-4,4,-9,-3,-3,7,-2,3,-5,6,6,-4,-10,-5,6,-1,6,-8,-6,6,-9,5,10,-7,3,-10,-5,-8,-7,-3,8,5,-9,10,6,-5,9,-6,7,5,-9,9,-9,10,-1,-1,6,4,1,-3,10,-9,9,9,1,8,-6,7,-5,3,1,-6,2,-6,-3,-9,10,-1,5,5,-3,9,9,7,4,-1,-4,6,6,-8,-5,-2,-4,2,-3,7,-9,7,4,-5,2,7,-10,3,-7,4,9,-4,9,4,4,-9,-2,4,-10,6,2,9,4,-9,6,-2,-9,10,6,-3,-9,-5,1,-7,-8,-5,4,-4,8,1,9,9,-4,10,-2,10,5,2,-7,-9,2,5,7,-6,5,1,3,-5,-10,6,-8,-5,4,-1,6,3,-3,4,10,-9,7,2,-1,-6,-2,4,3,-2,-7,-7,4,-1,-10,9,2,8,7,9,7,-10,2,-6,1,1,5,-1,7,6,-4,9,2,-7,-5,10,4,10,1,-10,-6,-2,-6,-9,-4,2,9,-6,-7,3,-9,-6,10,10,2,8,10,10,-5,-1,-4,-9,-4,-6,-7,-5,-10,3,6,5,-3,7,-5,1,4,8,-5,-10,1,-10,-5,-9,7,-8,3,-3,6,-2,-7,-10,-3,8,3,-8,8,-5,4,-9,-3,-6,-10,-5,-10,-7,7,7,-6,-9,7,-5,7,7,3,-2,4,-5,10,-1,6,-7,-5,-5,3,2,-3,-6,-7,2,10,-4,-6,9,8,6,7,-9,2,-5,-9,-5,-4,-5,-6,8,-10,10,-3,2,8,7,3,-8,-9,-10,-10,1,7,-4,2,9,-6,8,8,3,9,-1,-4,-7,-4,9,3,-9,-7,-5,4,-1,-5,-10,-2,-10,2,3,-2,9,1,-1,10,-7,10,-8,-8,-7,-1,-5,-1,-3,-8,-9,1,8,5,-6,-9,6,7,-6,-4,-7,1,7,10,-4,-8,-9,-10,1,-8,2,4,-7,-3,-7,7,1,9,-9,-8,7,6,7,5,-1,6,10,-3,-2,-1,3,-4,-7,2,4,-9,-8,-7,2,2,6,-9,10,5,-10,3,-6,8,2,9,10,6,-6,-2,6,-2,-3,-1,6,-7,10,-2,8,10,-1,-5,1,-8,6,-3,-3,-7,7,9,1,2,7,10,5,5,-10,-5,-4,8,-3,2,-8,-2,6,10,1,-9,-5,2,-10,4,-9,-1,-3,5,-1,-4,6,4,1,-9,6,-9,-6,1,-1,-6,-5,5,7,4,7,-7,-5,-4,6,7,3,5,8,-5,-10,-9,-9,2,4,-6,-5,-5,5,-5,3,3,7,-5,-3,-5,-5,-7,-1,-2,7,10,-10,-2,-2,-4,-8,-3,6,-3,-10,1,5,10,10,-4,10,1,-7,-5,-10,6,-7,-7,8,-3,10,-4,3,-2,-7,-10,-10,-7,3,-8,10,-3,6,3,1,2], dtype = "uint16")#candidate|3411|(845,)|const|uint16
call_3409 = relay.TupleGetItem(func_1693_call(relay.reshape(const_3410.astype('bool'), [432,]), relay.reshape(const_3411.astype('uint16'), [845,]), ), 1)
call_3412 = relay.TupleGetItem(func_1696_call(relay.reshape(const_3410.astype('bool'), [432,]), relay.reshape(const_3411.astype('uint16'), [845,]), ), 1)
func_3292_call = mod.get_global_var('func_3292')
func_3293_call = mutated_mod.get_global_var('func_3293')
call_3414 = func_3292_call()
call_3415 = func_3292_call()
var_3420 = relay.var("var_3420", dtype = "float64", shape = (4, 672))#candidate|3420|(4, 672)|var|float64
bop_3421 = relay.subtract(uop_3396.astype('uint8'), relay.reshape(var_3420.astype('uint8'), relay.shape_of(uop_3396))) # shape=(4, 672)
var_3426 = relay.var("var_3426", dtype = "bool", shape = (4, 672))#candidate|3426|(4, 672)|var|bool
bop_3427 = relay.greater(bop_3406.astype('bool'), relay.reshape(var_3426.astype('bool'), relay.shape_of(bop_3406))) # shape=(4, 672)
output = relay.Tuple([call_3369,call_3393,call_3403,call_3409,const_3410,const_3411,call_3414,bop_3421,bop_3427,])
output2 = relay.Tuple([call_3370,call_3395,call_3404,call_3412,const_3410,const_3411,call_3415,bop_3421,bop_3427,])
func_3437 = relay.Function([var_3394,var_3405,var_3420,var_3426,], output)
mod['func_3437'] = func_3437
mod = relay.transform.InferType()(mod)
var_3438 = relay.var("var_3438", dtype = "float32", shape = (4, 672))#candidate|3438|(4, 672)|var|float32
var_3439 = relay.var("var_3439", dtype = "float64", shape = (4, 672))#candidate|3439|(4, 672)|var|float64
var_3440 = relay.var("var_3440", dtype = "float64", shape = (4, 672))#candidate|3440|(4, 672)|var|float64
var_3441 = relay.var("var_3441", dtype = "bool", shape = (4, 672))#candidate|3441|(4, 672)|var|bool
output = func_3437(var_3438,var_3439,var_3440,var_3441,)
func_3442 = relay.Function([var_3438,var_3439,var_3440,var_3441,], output)
mutated_mod['func_3442'] = func_3442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_3470 = func_3339_call()
call_3471 = func_3339_call()
output = relay.Tuple([call_3470,])
output2 = relay.Tuple([call_3471,])
func_3478 = relay.Function([], output)
mod['func_3478'] = func_3478
mod = relay.transform.InferType()(mod)
output = func_3478()
func_3479 = relay.Function([], output)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3292_call = mod.get_global_var('func_3292')
func_3293_call = mutated_mod.get_global_var('func_3293')
call_3496 = func_3292_call()
call_3497 = func_3292_call()
uop_3503 = relay.atan(call_3496.astype('float32')) # shape=(12, 15, 4)
uop_3505 = relay.atan(call_3497.astype('float32')) # shape=(12, 15, 4)
output = relay.Tuple([uop_3503,])
output2 = relay.Tuple([uop_3505,])
func_3511 = relay.Function([], output)
mod['func_3511'] = func_3511
mod = relay.transform.InferType()(mod)
mutated_mod['func_3511'] = func_3511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mutated_mod.get_global_var('func_3511')
call_3512 = func_3511_call()
output = call_3512
func_3513 = relay.Function([], output)
mutated_mod['func_3513'] = func_3513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_3537 = func_2060_call()
call_3538 = func_2060_call()
output = relay.Tuple([call_3537,])
output2 = relay.Tuple([call_3538,])
func_3539 = relay.Function([], output)
mod['func_3539'] = func_3539
mod = relay.transform.InferType()(mod)
output = func_3539()
func_3540 = relay.Function([], output)
mutated_mod['func_3540'] = func_3540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_3568 = func_3339_call()
call_3569 = func_3339_call()
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_3575 = relay.TupleGetItem(func_1932_call(), 0)
call_3576 = relay.TupleGetItem(func_1934_call(), 0)
output = relay.Tuple([call_3568,call_3575,])
output2 = relay.Tuple([call_3569,call_3576,])
func_3591 = relay.Function([], output)
mod['func_3591'] = func_3591
mod = relay.transform.InferType()(mod)
output = func_3591()
func_3592 = relay.Function([], output)
mutated_mod['func_3592'] = func_3592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mod.get_global_var('func_3511')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_3604 = relay.TupleGetItem(func_3511_call(), 0)
call_3605 = relay.TupleGetItem(func_3513_call(), 0)
const_3615 = relay.const([[[-4.204852,2.502386,-2.734415,9.503478],[-6.678332,0.209831,-9.643717,-3.301680],[9.526199,-1.322586,6.991958,-4.700929],[9.604962,4.324970,3.021661,3.084687],[1.574020,4.727646,4.417161,-9.590450],[4.015462,4.136298,4.257131,7.466733],[-7.330340,-3.927929,-4.275035,3.008306],[0.212729,-6.823445,-5.913341,-1.071684],[6.549322,7.850912,-3.980134,-9.965338],[-2.942684,7.733790,-4.342421,-3.535346],[-8.991369,-8.957687,3.061968,3.285485],[-6.856414,1.078058,0.888178,5.307579],[-4.713282,-0.760422,-6.875306,-2.253057],[-1.067541,5.744419,-2.399293,3.800597],[-4.219745,-6.766198,-5.306721,-5.494826]],[[3.256686,5.744815,9.081262,1.534101],[7.811364,-6.995849,2.902886,-2.093839],[7.650076,-3.300887,-7.165776,-0.514974],[1.698255,-5.840594,-5.918055,-8.812210],[9.965823,6.258858,-4.383544,-9.514226],[-6.757071,-5.255801,6.192722,4.739880],[-0.627767,-6.426327,-0.425090,3.708560],[1.496232,5.720566,5.290496,-6.288747],[9.576254,6.631354,-9.366176,4.039189],[6.865251,-2.329937,9.218128,6.806818],[2.148603,-2.021533,-5.855101,6.318410],[1.607602,-3.892297,4.233349,6.178938],[-7.213532,-9.303752,-8.334905,2.908395],[6.981282,-6.448048,2.777847,-0.859210],[-6.580415,-6.590699,4.201851,-3.241993]],[[-2.149393,9.748191,6.849252,-3.800643],[3.454850,8.822856,8.838192,1.320484],[-1.217164,1.376667,2.229085,5.811839],[-5.560850,7.205410,7.070492,-1.290234],[-4.586007,7.097338,9.095749,1.955203],[9.081108,-1.915828,8.155759,5.762911],[-1.528057,2.865010,4.030507,6.325835],[5.175146,5.734004,-9.761987,-7.142425],[2.454073,2.142472,-4.878169,1.644659],[7.577746,-4.492350,-2.473430,-2.022331],[-1.134969,-2.029459,-0.203454,6.219604],[-0.185826,9.350312,-1.621592,9.292778],[6.411301,-3.659888,0.553622,1.303219],[-2.797665,9.516138,-8.195972,1.419958],[-5.317022,-2.237996,5.185998,-8.159226]],[[-1.102715,-8.056860,5.556113,-3.636973],[-6.135681,-0.249750,-5.066227,-0.610551],[5.875957,3.924657,-3.092251,-5.347902],[3.654131,7.087237,-0.083436,-0.532605],[0.967241,-1.851051,7.389991,-9.485454],[1.588285,5.481035,-1.719726,-1.850103],[-7.818136,5.081603,-3.960650,2.071481],[-7.708358,-5.574238,-2.258499,4.339063],[-4.113863,-5.646448,-3.351325,2.905223],[-6.628709,-5.389164,6.698104,-6.538643],[-1.615274,-0.863448,-8.722988,-3.541720],[-6.253278,6.527894,-7.304285,9.867761],[-7.181887,-1.865353,-2.644027,1.306311],[-5.610607,9.309783,-4.879932,2.762137],[-3.737295,-5.559517,5.114083,1.467008]],[[8.303757,-4.863707,-5.626743,-6.276354],[-9.616866,1.360439,9.096371,3.392121],[-4.560683,5.381672,-6.558770,-8.736107],[-3.523153,7.598723,7.531438,2.970903],[-5.890410,-7.543994,5.004872,6.315644],[2.621192,-8.646454,0.614075,3.036126],[5.873548,4.565829,5.318980,-6.458356],[-8.026006,-5.628019,-2.965679,-4.597115],[2.457176,4.156068,-6.598755,-0.186372],[-7.768021,-2.928863,-3.590121,3.048066],[-2.335695,-2.158794,-0.481118,8.322481],[-4.228606,1.333301,9.461844,7.112623],[-9.899215,-7.554241,-4.663071,4.536995],[1.817164,-2.843208,4.704808,6.642222],[-1.877373,6.995253,-4.495076,9.381688]],[[-1.228970,-0.074278,1.823864,8.600953],[-4.954845,-0.606733,-3.386196,9.578913],[4.740248,-9.298357,-5.521349,-4.676330],[3.039701,3.892207,-1.911963,-6.305049],[1.721203,-6.590009,1.034867,0.780929],[0.682472,-4.326748,0.440513,-6.989175],[8.796322,9.881446,-8.963285,1.283648],[2.017927,-1.324156,7.688254,4.714814],[9.688757,3.239963,0.532337,-7.286660],[-7.296250,-3.136400,7.699156,-4.871699],[6.339143,-6.434871,3.000694,8.549792],[-5.508755,-6.159337,9.255745,6.776369],[-6.604829,0.047499,2.775020,-6.093180],[-6.643605,2.607872,1.361066,-9.205501],[9.525714,6.713279,-8.430576,9.712596]],[[-2.323544,8.097022,7.030190,-6.133736],[5.046821,4.575864,2.724180,4.223786],[2.596235,3.074506,-1.541189,3.024448],[-5.517781,5.398557,-7.659898,-3.924089],[-4.757972,-3.506896,-8.511588,8.199484],[-8.155074,-9.488951,5.166154,2.990115],[-2.529701,2.280726,-8.369479,-5.004102],[6.465929,-5.821604,-4.349047,-6.961113],[-1.755864,6.236382,6.831801,-8.506080],[0.600396,-3.028767,-6.418752,9.038410],[-3.587244,-3.319505,-7.562450,-5.620381],[-4.802474,2.931243,4.233377,2.931531],[-0.707943,-6.378635,-0.760087,7.822053],[7.116584,-9.016197,8.457167,-7.594136],[-8.624428,-7.849778,6.557445,9.050441]],[[5.962938,-3.625788,-6.529249,-8.781642],[-1.345633,8.651840,-0.623661,4.850269],[-7.997210,0.462461,9.837414,4.000079],[-1.975973,-5.825618,-7.651598,8.281505],[-2.773434,-5.397461,-9.299322,9.816577],[0.760072,7.343917,6.338750,3.003472],[-1.712367,6.081034,-8.500681,2.933710],[9.402789,-5.318896,1.439458,6.505196],[-0.136593,0.002020,0.625787,0.267101],[7.485225,-2.027283,0.411843,-4.997106],[-2.907323,-2.796451,-4.621832,-9.869525],[2.997832,-0.413323,-3.291573,4.103125],[4.039131,4.427965,7.836251,-5.563260],[3.927146,-4.480186,-7.002875,-8.406633],[-6.659109,-0.403553,3.731949,-8.236866]],[[3.972514,2.877689,1.066215,-6.657492],[8.182380,4.069317,9.597089,7.873243],[-4.132449,7.159917,-5.824158,5.676668],[-7.364504,-4.060233,-1.666320,5.554272],[5.081872,-0.115231,2.869406,2.216421],[-2.256696,8.455313,-8.306943,5.725852],[-3.060815,-0.861456,-9.520769,-9.830168],[6.843666,-5.310754,3.872301,3.390473],[4.519167,1.515392,3.728593,4.924510],[0.191250,5.565491,-1.317061,-5.474882],[1.639007,8.661816,3.946724,1.591536],[-2.978765,-7.038864,3.026943,-5.019689],[2.180782,5.332627,3.771058,8.832371],[0.831456,-4.937059,6.189872,9.899797],[7.248365,-4.195766,-3.561856,0.498885]],[[-0.130155,-7.802334,-0.732305,-9.703103],[7.243916,-4.483431,-5.730266,1.937374],[-0.329736,0.266871,6.053456,-5.656361],[-5.014936,2.840251,-2.732791,6.856676],[-8.648924,-6.454956,3.591346,6.136262],[-8.411126,1.260913,8.661746,7.011870],[-3.122365,8.633857,6.762776,7.424938],[-6.723403,-5.553682,2.177513,7.478200],[1.280825,-1.878575,-3.623724,0.370322],[0.593944,-7.158475,-9.708341,-2.844483],[-2.872767,-6.107272,-5.717662,5.867243],[-6.722796,6.826446,-1.201152,0.368223],[5.705901,-8.312423,6.156407,-1.572222],[-8.669555,1.339996,-9.266923,1.126372],[2.333471,-1.888704,2.906509,7.764138]],[[6.703980,-7.880461,3.741965,-6.941672],[4.495611,1.829622,-8.524539,-9.298949],[-9.412252,5.576117,3.825760,2.201539],[-6.397716,-3.861891,-5.753424,9.730044],[0.248599,5.869316,-8.876717,5.834885],[-6.836754,-4.993586,-3.311546,6.758210],[2.386924,-3.119164,7.905804,8.667470],[7.190463,-0.932185,8.040919,-9.034896],[0.316627,-9.660987,3.463499,8.472533],[-2.418515,-2.333602,-7.310952,8.923314],[9.909470,0.341444,4.388890,-8.191338],[-3.212536,-8.943441,7.415761,-3.741569],[-8.734815,-3.970076,-5.097553,8.932625],[9.527697,-0.993275,0.366033,7.062293],[5.375587,-4.853508,-0.655658,2.076392]],[[1.370078,-4.258072,-3.170190,4.182573],[8.074356,-3.234029,0.657034,-0.338757],[-6.766898,6.809636,-7.137723,-8.103266],[4.336552,6.311877,0.508774,-7.917945],[-1.039356,7.149778,-0.366912,-8.405089],[-6.004672,7.316785,-9.770882,9.679839],[-6.910143,3.434122,7.114293,-9.515785],[-8.820811,-8.295682,6.907453,-3.552324],[-5.850317,-5.945243,-3.799796,-5.779846],[-1.778511,-1.630672,-2.739324,7.852738],[-0.222269,2.974495,-4.642428,-3.159413],[0.537033,-5.163381,-8.727336,9.926191],[1.910376,6.639435,-9.402369,-7.446669],[0.271126,6.896631,-0.562493,1.689781],[8.858784,6.286046,-0.754134,-3.201486]]], dtype = "float32")#candidate|3615|(12, 15, 4)|const|float32
bop_3616 = relay.greater_equal(call_3604.astype('bool'), relay.reshape(const_3615.astype('bool'), relay.shape_of(call_3604))) # shape=(12, 15, 4)
bop_3619 = relay.greater_equal(call_3605.astype('bool'), relay.reshape(const_3615.astype('bool'), relay.shape_of(call_3605))) # shape=(12, 15, 4)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_3620 = func_2282_call()
call_3621 = func_2282_call()
func_2115_call = mod.get_global_var('func_2115')
func_2118_call = mutated_mod.get_global_var('func_2118')
call_3640 = relay.TupleGetItem(func_2115_call(relay.reshape(bop_3616.astype('float32'), [12, 15, 4])), 0)
call_3641 = relay.TupleGetItem(func_2118_call(relay.reshape(bop_3616.astype('float32'), [12, 15, 4])), 0)
func_2615_call = mod.get_global_var('func_2615')
func_2623_call = mutated_mod.get_global_var('func_2623')
var_3648 = relay.var("var_3648", dtype = "float64", shape = (1, 450))#candidate|3648|(1, 450)|var|float64
const_3649 = relay.const([[1,8,5,-3,-4,-1,4,6,5,-9,-9,9,-5],[3,4,9,3,3,1,-6,-3,-6,4,-9,9,4],[-7,10,-3,-3,-10,-6,-2,-10,7,10,5,-10,-7],[8,5,6,2,-3,-10,-5,1,-1,10,-7,-1,10],[-4,-5,-7,7,-4,5,-8,2,-7,8,8,-10,-3],[7,4,10,-6,-9,9,-7,8,8,10,-5,8,-6],[5,5,3,-1,-9,-6,-7,10,-10,6,8,-7,-5],[7,6,-10,-9,8,-8,2,-2,-4,3,5,-10,-3],[-7,9,3,-5,-9,-9,-9,4,-7,-5,-3,8,-3],[-1,-5,3,7,4,-10,-8,-4,-9,5,2,-8,-1],[-6,-8,3,5,-8,-10,2,4,2,1,10,-1,-5],[-6,-8,5,7,6,-7,-8,9,7,-1,-1,2,9],[4,-8,10,4,-3,5,-6,-10,2,-7,5,2,6],[8,-9,-1,-6,-4,1,6,8,-5,-4,7,-2,-9],[-10,-2,-6,4,7,8,2,-10,9,8,1,2,-8],[-1,5,9,1,-2,4,-10,-1,6,10,10,-6,-7],[-4,10,1,-4,3,2,9,-9,-1,-7,9,8,9],[-9,8,2,6,-6,5,-3,-5,2,-10,8,2,-6],[9,10,-3,5,-6,5,-8,1,1,2,9,-2,7],[-2,5,9,1,-4,-8,-6,-3,-8,-2,-6,3,10],[4,-2,-4,-9,10,7,-5,6,7,10,2,4,-5],[8,-10,1,-4,6,-7,1,1,1,-6,-3,-8,6],[1,6,8,-5,6,-4,-8,10,-5,5,6,4,-2],[6,10,-1,-10,8,-5,-10,-6,1,7,1,2,-8],[1,-2,-10,4,10,2,4,-2,10,10,-6,-4,-4],[-5,-9,5,-6,3,-7,10,4,-9,-2,7,-5,-10],[2,4,-8,-2,-3,-9,4,-6,10,-10,8,3,2],[-1,-9,-8,6,-6,-10,-3,5,-1,-5,2,3,-10],[-1,10,-4,-10,4,3,9,-6,8,-1,3,-4,1],[6,7,-6,2,2,8,9,10,-4,3,-8,-3,-8],[3,7,-9,9,-2,6,2,9,10,2,2,-8,5],[-10,5,5,9,3,6,3,10,1,7,-9,-8,8],[-6,4,10,-2,-1,4,-10,7,-2,3,10,-1,-3],[-6,3,10,-8,-1,-10,5,9,-1,-6,-6,-9,-10],[4,-7,-6,-10,5,-6,-6,-3,-1,8,-6,10,9],[4,-6,8,8,9,-6,-2,-8,-6,-7,-1,-5,-10],[-1,-7,-6,-8,-5,-2,-2,8,-9,1,-9,2,-5],[-8,-5,5,9,-4,-3,9,1,-3,-2,10,-9,1],[-9,-8,9,9,4,-9,8,-10,-8,-10,-2,-1,-4],[-8,-4,-3,-3,1,8,-5,6,5,-7,-4,6,5],[9,-2,1,-5,8,-9,-10,-10,-10,1,9,9,-3],[-5,9,6,-8,-8,-8,-3,1,-7,2,-9,4,-8],[8,-3,10,-1,-9,-4,5,5,5,2,-2,6,8],[-8,-7,-7,6,7,7,-5,-7,3,-1,7,-10,3],[-10,10,6,10,6,2,9,-8,-9,3,1,8,-8],[-1,8,2,3,-3,10,6,-5,10,8,-10,-10,-3],[-3,-7,7,-1,2,-2,3,-5,3,3,-8,1,10],[2,-6,-4,-7,-2,-9,-9,6,5,9,4,-1,-7],[9,-6,-1,10,-3,-8,7,5,3,-6,-7,10,-3],[7,3,-3,-4,-1,7,-2,-10,-1,2,-5,-1,-6],[4,-6,10,10,-1,-6,-10,-10,10,7,4,-9,5],[-1,-4,7,-3,-4,-10,6,5,-6,9,-4,-8,1],[9,6,3,-2,-6,-5,-4,10,3,-3,8,-5,-5],[-7,10,-5,-7,4,-10,-7,5,-3,-10,3,1,-4],[-7,-7,10,5,2,-10,3,-9,10,9,-7,-6,-7],[10,7,8,-5,-8,9,-4,5,1,5,1,7,3],[-4,1,-8,-1,7,2,-6,-6,6,-7,-3,1,8],[5,3,9,5,-9,3,1,-1,5,-3,-6,10,-10],[-2,2,2,-5,-3,2,-4,-4,-3,10,-6,-3,5],[-8,3,-7,8,6,7,4,-6,2,7,1,-1,-4],[-4,-5,-8,-4,-10,7,2,-7,5,-1,-8,-2,-8],[-7,-4,5,-9,6,5,10,5,-5,-1,8,-4,6],[3,-8,-1,-2,-5,-2,1,-6,10,-4,-3,3,-1],[-9,-3,8,-3,9,-1,-6,1,-5,-5,-9,-6,1],[-9,-5,-7,-5,9,8,-10,-5,-1,-1,8,3,6]], dtype = "uint16")#candidate|3649|(65, 13)|const|uint16
var_3650 = relay.var("var_3650", dtype = "uint64", shape = (90,))#candidate|3650|(90,)|var|uint64
call_3647 = relay.TupleGetItem(func_2615_call(relay.reshape(var_3648.astype('float64'), [10, 5, 9]), relay.reshape(var_3648.astype('float64'), [10, 5, 9]), relay.reshape(const_3649.astype('uint16'), [13, 13, 5]), relay.reshape(var_3650.astype('uint64'), [90,]), relay.reshape(var_3648.astype('bool'), [10, 5, 9]), relay.reshape(var_3648.astype('bool'), [10, 5, 9]), ), 7)
call_3651 = relay.TupleGetItem(func_2623_call(relay.reshape(var_3648.astype('float64'), [10, 5, 9]), relay.reshape(var_3648.astype('float64'), [10, 5, 9]), relay.reshape(const_3649.astype('uint16'), [13, 13, 5]), relay.reshape(var_3650.astype('uint64'), [90,]), relay.reshape(var_3648.astype('bool'), [10, 5, 9]), relay.reshape(var_3648.astype('bool'), [10, 5, 9]), ), 7)
func_713_call = mod.get_global_var('func_713')
func_717_call = mutated_mod.get_global_var('func_717')
var_3654 = relay.var("var_3654", dtype = "int64", shape = (198,))#candidate|3654|(198,)|var|int64
call_3653 = relay.TupleGetItem(func_713_call(relay.reshape(var_3654.astype('int64'), [3, 6, 11]), relay.reshape(var_3654.astype('int64'), [3, 6, 11]), ), 1)
call_3655 = relay.TupleGetItem(func_717_call(relay.reshape(var_3654.astype('int64'), [3, 6, 11]), relay.reshape(var_3654.astype('int64'), [3, 6, 11]), ), 1)
output = relay.Tuple([bop_3616,call_3620,call_3640,call_3647,var_3648,const_3649,var_3650,call_3653,var_3654,])
output2 = relay.Tuple([bop_3619,call_3621,call_3641,call_3651,var_3648,const_3649,var_3650,call_3655,var_3654,])
func_3657 = relay.Function([var_3648,var_3650,var_3654,], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
var_3658 = relay.var("var_3658", dtype = "float64", shape = (1, 450))#candidate|3658|(1, 450)|var|float64
var_3659 = relay.var("var_3659", dtype = "uint64", shape = (90,))#candidate|3659|(90,)|var|uint64
var_3660 = relay.var("var_3660", dtype = "int64", shape = (198,))#candidate|3660|(198,)|var|int64
output = func_3657(var_3658,var_3659,var_3660,)
func_3661 = relay.Function([var_3658,var_3659,var_3660,], output)
mutated_mod['func_3661'] = func_3661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3755 = relay.var("var_3755", dtype = "uint32", shape = (11, 5, 8))#candidate|3755|(11, 5, 8)|var|uint32
var_3756 = relay.var("var_3756", dtype = "uint32", shape = (11, 5, 8))#candidate|3756|(11, 5, 8)|var|uint32
bop_3757 = relay.less(var_3755.astype('bool'), relay.reshape(var_3756.astype('bool'), relay.shape_of(var_3755))) # shape=(11, 5, 8)
uop_3762 = relay.acosh(var_3755.astype('float32')) # shape=(11, 5, 8)
func_3437_call = mod.get_global_var('func_3437')
func_3442_call = mutated_mod.get_global_var('func_3442')
const_3765 = relay.const([4.993908,-8.552873,-6.237004,0.760311,6.048725,-7.001836,-2.406255,1.476152,-0.057814,8.575260,3.570836,3.264198,-2.367578,-6.660381,1.591131,8.498214,-2.693437,8.784198,-7.323158,-1.021420,2.356564,7.518697,9.263045,-4.110973,-4.007188,6.570680,-2.505563,7.025803,-6.597856,6.114730,3.878550,-5.265476,-0.696365,8.931739,-7.433897,-8.575065,-1.535971,3.905603,-6.623317,7.200189,0.025049,8.456220,9.336989,1.342526,-0.816292,-0.713713,5.076604,1.674704,-9.750820,-7.927454,-0.561635,7.325446,1.063622,7.353235,-7.893007,-3.505545,3.887744,1.131993,7.998827,-1.181165,4.454680,8.687509,1.102235,-6.659719,5.252899,5.778458,-2.066580,7.505257,5.262382,7.215418,2.265795,-6.386143,6.601197,-4.039539,-3.091091,2.087691,4.438787,-7.482053,3.442551,-2.898518,5.240901,9.542458,-8.568082,8.299319,1.678045,7.867248,5.943009,9.750341,-6.701839,1.819005,2.184635,-9.349774,7.664983,0.050341,-5.601426,-3.181288,8.457441,8.462917,-9.922150,-8.474441,9.169634,-9.423290,7.026921,-6.239909,0.216549,-1.904073,-2.090471,2.296166,2.041659,-1.441276,0.394625,3.954817,-2.801793,-6.814547,-9.407720,-2.317603,9.389405,-9.489795,2.021980,-0.501022,-5.981916,4.427914,7.575155,-1.334394,6.300964,-4.694657,2.075837,-8.182107,-1.467543,-6.443453,1.506641,6.020548,-6.513016,7.645619,-8.994624,-6.767767,-7.312759,3.411979,5.660686,-9.711418,-6.148097,7.543595,-3.321088,-7.769143,-4.494702,2.445290,5.363276,-1.662474,-0.409049,5.199848,8.749792,1.388000,5.393942,-0.663045,1.577561,-5.713624,3.546985,1.245304,3.660725,0.425224,1.594606,1.270510,1.725326,-8.150515,7.218380,-9.525073,4.375206,-9.577130,-5.962672,0.826615,7.643822,8.252515,8.718996,-0.474660,-3.817842,4.405266,9.519890,9.282333,-8.559251,-1.457508,8.129958,6.371472,2.650828,-4.334838,-5.920840,9.805015,6.194915,-9.245517,1.387971,6.637427,-9.547930,7.373389,5.395530,-1.351846,-4.103000,1.349894,4.932044,2.817760,-9.632876,-3.579365,0.626180,-8.565240,5.390742,-5.180337,5.480188,-4.955927,-6.201385,0.163631,-7.896938,7.052276,8.903205,5.879481,9.983188,6.384711,-7.370581,-9.603315,2.942379,-0.694460,-4.293038,8.916979,-3.939093,7.482977,-5.548295,-0.157170,1.165923,3.639041,-0.272880,3.774930,5.044406,7.375685,5.097805,-1.139079,-6.996368,6.268726,4.164807,-2.603875,-7.199886,-3.175504,3.462877,-8.494214,-8.860004,3.063510,-7.375420,8.134145,8.537009,3.772488,-9.420497,0.386123,-4.474943,8.622115,1.424927,6.117725,-3.903359,-8.312193,-1.265482,-0.119533,3.788562,9.442643,-8.174890,4.091464,6.972407,-5.189172,-5.488940,-3.302064,-0.641861,-4.688001,1.543535,-4.568361,8.537218,7.511375,6.837067,7.021762,2.854541,-8.902681,6.856135,5.446967,-0.032199,-5.263424,5.286454,6.782240,2.668159,-4.085858,3.801399,-0.780312,4.360340,-7.778834,3.821654,5.138059,-9.925443,-0.324338,-4.981121,-7.536085,-6.382464,9.306495,0.456090,6.071269,0.479603,3.560476,-0.150448,0.724298,-6.001186,-6.399019,9.584183,-1.031842,4.523651,6.504210,3.886633,-3.099901,8.002432,8.906239,-9.818849,2.963703,-7.772767,-0.454129,-4.433139,3.886298,9.380076,-6.301415,5.707650,-6.432033,8.196570,-3.759389,2.846611,-4.185587,9.456281,6.750062,4.469667,0.759998,-6.779016,-2.694471,1.821881,4.818059,-5.573164,-9.669583,-8.096906,-3.163263,-3.364430,-9.117108,-8.987225,-1.434141,7.443316,3.483430,-0.917125,-7.348287,7.939415,1.045509,-2.072825,7.665928,-5.405094,9.242817,5.096315,6.933894,-9.609500,3.322123,-7.593975,-4.538358,-2.169782,-7.415416,-0.773329,3.121302,-0.046211,7.415415,4.371815,4.080292,-2.062910,-4.284768,-5.251536,0.030890,-6.740438,4.496454,9.816684,-5.622287,-9.834093,-8.029246,1.622284,-9.718136,5.397426,4.394901,-0.254543,-7.171373,9.530329,-3.090997,-5.951028,-7.839127,4.696829,-1.257782,-8.066832,-1.162265,1.518087,5.829539,-4.280681,-1.583894,6.211703,-8.717311,-1.737465,-2.321556,4.116533,-9.434300,3.513132,-2.755735,-4.121450,5.370140,8.020584,0.606680,-2.619216,-9.750566,-6.849394,-3.670728,-2.443430,-6.798970,-7.705677,-4.335109,7.289329,4.839290,1.225600,7.670243,-4.354048,-5.548906,-3.691834,0.443279,6.032822,0.586968,-3.308996,9.869007,-3.879121,-9.763530,8.568123,4.033642,3.097362,6.310060,-3.569127,-5.202424,7.508720,5.193786,9.560561,-3.233856,-0.566743,-9.585410,-2.358524,4.667887,9.130626,1.088448,-7.687590,-2.886184,8.810982,-5.967549,-7.643969,1.262967,-8.542042,-0.823707,0.715682,-1.689193,-3.830011,-1.465433,-3.244367,-6.466651,1.182823,-5.228710,-1.307970,7.215674,-6.121183,6.109173,2.020656,-6.113781,4.316162,8.848431,-3.118333,-3.171815,-3.699488,7.687824,-1.064679,8.010424,7.131620,4.376224,-3.836928,4.733095,8.033876,7.358493,3.811033,-6.397643,-3.857081,6.495478,1.030440,-6.434807,8.518328,-0.338268,0.885751,4.180194,-8.104903,-2.296667,-6.891690,0.507473,-2.594456,-0.121752,0.536290,7.952846,-4.311562,-6.612143,-4.242458,5.294813,-7.894575,-8.756795,8.390230,-6.832655,-1.688476,-4.053733,-9.747383,-0.891054,1.565209,7.058929,9.552748,-9.463022,0.933898,2.314040,9.775796,7.938882,6.143462,7.982652,-9.483977,-1.717941,-8.248074,7.435027,-5.719623,-5.675742,-5.690105,-8.404297,-3.498572,5.018607,8.048201,9.897345,0.326530,-6.710105,-8.423732,-3.328535,3.643939,-5.277620,2.260106,7.783277,5.131969,4.053996,6.649950,-9.601572,3.779062,6.811145,-8.135538,5.513812,-3.450741,-7.960066,-4.897510,1.142220,1.743685,7.655952,1.350890,8.356396,-9.665231,-3.059839,-3.632871,3.963348,-4.065069,6.994147,-9.995424,-0.715415,-9.001583,2.845489,1.254286,5.401386,-2.608385,-9.480850,6.055388,6.140557,-1.790579,4.594918,-1.674933,-1.143680,8.255021,6.375346,0.495187,-2.451578,7.575825,-5.109437,-8.865948,0.532609,-8.619038,-2.950624,0.767791,-3.030715,3.262337,2.436540,-2.971777,-6.490045,8.785186,0.625004,-0.077100,-6.823177,-7.272701,-0.915195,-9.708648,9.030855,8.827506,-2.972567,7.548018,1.563598,-9.481301,-0.831401,-8.830948,8.091328,9.596678,-4.980732,-1.893415,2.238544,9.118663,-6.963719,3.789123,7.808176,7.790951,-9.424604,-1.493715,-8.724734,-5.971520,7.046956,1.094221,-8.201692,-9.840011,-5.690892,5.526775,0.593645,-5.924573,0.356856,2.870027,-5.282286,-7.190591,-5.326153,-2.726259,-1.613788,3.831230,-5.624124,-2.503457,4.666144,9.351229,4.728411,6.052163,-3.319652,-1.885390,-3.399398,-8.125970,2.542057,8.151156,9.978808,-7.919944,-3.165403,0.257654,-3.634115,0.904476,-8.595080,-9.871293,0.335253,-4.314778,4.036735,7.772559,6.590120,-7.440137,5.630372,-8.631273,-8.604175,-9.037523,-7.708552,2.231574,3.257730,9.918572,7.601458,4.502361,9.625153,-8.363641,0.041191,-5.315893,2.178122,8.698626,-2.295258,9.517905,-1.551347,4.165285,-6.195844,6.524308,5.002178,4.462632,-7.456039,-7.692332,2.236166,-5.601598,-0.737928,6.548520,-5.221970,-5.704963,-6.126353,2.571326,1.018405,9.282145,5.498815,7.905752,4.613452,7.097450,-5.103413,-4.926186,1.845334,-3.897281,2.946964,2.727369,-4.986382,9.114026,-1.445038,6.387043,9.708158,4.196848,8.879028,-6.016584,1.913187,3.223072,8.991571,5.284968,-6.920437,-6.549206,1.605249,0.288735,-8.937943,-5.145849,7.536280,-4.411832,2.058954,9.586891,6.433794,5.062403,-9.341029,-4.280633,-7.983942,-2.954496,0.541643,6.962245,-4.924875,-7.480141,2.085383,3.802973,-1.748798,3.166021,1.234473,-3.354920,-0.693817,-0.669284,-9.641533,-3.924465,-3.634494,-3.553691,-7.680780,5.251440,-3.519400,9.330319,-7.612851,1.205413,-3.098057,-3.732526,7.207385,-8.308503,9.158301,-5.377160,8.853860,-9.663058,2.207444,6.506277,-6.945905,7.090679,-8.414312,-2.508323,5.808383,6.451466,3.759009,-3.082986,5.790363,-4.925865,6.288515,-0.310618,-1.952929,-0.698705,8.726112,7.361426,-5.913024,8.831947,4.770009,-7.448868,3.147724,-8.228050,8.137497,3.232688,-8.390754,0.239340,8.302512,-5.125175,2.814609,5.133089,0.061414,-2.733259,4.947086,-1.472286,-0.232852,-7.415111,7.960772,-5.579351,3.303229,6.080496,1.905925,7.611559,-3.419301,-4.924811,-4.571963,9.869087,-2.396322,-8.408805,3.088227,-3.219775,8.577724,3.837893,-5.869780,8.873578,4.719694,1.651305,-5.235651,3.237712,-4.698623,-0.340284,-2.386310,-6.954188,0.123715,-4.060700,-0.258504,-6.948487,2.749422,-9.512135,7.223972,2.307779,-0.354628,-0.241263,3.942589,5.813202,5.722552,5.236707,6.010868,7.065296,-9.286271,5.974532,-2.106281,-7.355908,1.526378,6.941248,-0.001963,-3.656436,1.200158,0.377123,-6.386446,2.622486,-7.986616,4.475081,-0.146665,4.417152,8.514739,1.694731,-2.047272,3.824821,-0.907368,4.061879,-4.371014,7.126124,-1.394982,-0.523256,-1.638214,-7.529608,-1.536605,-1.038134,-1.131517,8.641588,8.015498,-7.156093,-0.743066,3.784764,-2.044785,-7.966973,-5.344949,5.894557,-1.906667,-7.183424,0.617230,-6.506261,-9.883358,-9.242519,-9.615181,-0.861297,0.807067,9.680476,3.976230,-5.213725,5.138819,-6.207256,9.070845,-7.330126,7.601677,-3.470457,-3.772509,1.301250,2.818613,9.352099,0.431715,8.984620,-3.994379,0.190168,-9.833806,-3.241425,-6.734561,8.092829,-4.480086,7.258464,-9.402287,-2.019495,-8.662864,-1.229329,3.833340,6.948319,9.789303,7.035484,-1.573787,3.459934,3.725551,-3.008038,-5.325036,7.644989,-1.282776,6.651607,-9.662917,3.691664,5.698739,-9.638022,3.849980,2.827586,3.421186,9.737408,0.273225,-6.729085,-8.644056,-7.192889,-8.957024,6.133847,0.955972,-6.264116,-1.267687,-2.552959,4.390350,-4.471132,9.190318,0.067111,7.607722,-7.605203,-2.046331,2.621229,5.502504,0.505340,5.711305,-1.679833,5.007630,-7.788061,-2.927893,9.087734,8.634903,3.331813,-7.436653,7.297207,9.429812,-8.558010,-4.214672,-1.449437,-1.947816,-5.255472,-5.600094,-7.991043,1.859799,8.847600,9.790158,4.049681,-9.285470,9.176052,8.729597,-7.796984,-5.113059,-3.491339,-5.447859,4.799537,7.640518,-2.212530,-0.167744,4.942334,3.025085,-1.615229,-4.426411,-4.844801,-8.679792,1.434240,-2.465019,-7.176237,-8.944836,-2.411020,3.087873,0.072902,3.313390,-3.283926,-0.124172,0.648171,-9.314120,8.147833,3.799321,6.638893,2.184689,0.001320,1.927409,4.906512,7.072471,-9.470155,8.930156,6.035406,-9.500196,-8.702528,4.527172,-9.699175,9.156985,-4.927895,9.010618,-8.022396,-9.552438,7.545228,2.937799,-1.325161,-3.972377,0.510347,-8.211053,-2.928307,-8.666913,-0.965239,-1.919291,1.737470,-0.448290,-1.722117,-8.029423,-9.069950,-6.279819,-8.857182,-1.821726,-1.050258,9.328185,-8.049762,-2.176805,-2.932531,-2.569959,4.251561,-5.653919,-2.297704,-2.799714,-2.568051,-3.777972,-8.904171,-9.277302,-0.584847,3.317056,4.407596,6.195240,-2.862032,-3.803369,-3.472385,5.949182,3.260860,8.551003,-1.049232,-1.272341,-8.770241,-6.154551,-4.996898,7.955684,7.560780,6.672267,8.291467,6.378635,9.472674,1.786652,-2.748524,4.917505,-6.958682,2.570507,-2.166510,3.224717,-2.783823,7.182907,0.718235,-1.863112,9.492753,0.521890,-5.355003,9.858311,5.502092,8.895021,4.360587,4.369124,2.725850,7.362737,0.655309,-5.735837,-9.313884,-4.618096,-5.567369,-2.477541,-5.535747,0.416796,-6.246290,-0.917430,5.972632,3.005885,-6.585078,-5.793002,-0.278695,-5.030790,-6.537750,9.993323,-3.953845,-1.581890,-9.686038,1.961700,5.991086,8.035943,4.148506,8.180619,-6.593645,6.673338,8.097106,-9.145693,5.414077,3.583326,-7.055248,-2.376330,-8.079272,0.541160,-1.044442,-5.991032,6.424107,2.257004,3.408676,8.029624,-9.208544,4.399540,-7.323340,3.687112,-1.963253,-5.183521,0.765058,1.718474,7.142514,2.033659,7.751585,7.808172,3.762077,7.156005,1.806667,-6.854900,-2.746545,-9.342517,-9.878620,-3.959062,-3.920467,6.103264,-8.525072,-8.150534,1.611002,6.951577,0.482461,-7.010863,3.655932,7.876943,-7.937926,-6.239782,4.039967,-9.739316,-2.781609,-3.240987,5.494082,5.185456,5.111804,5.454606,0.901456,7.911779,-3.774020,2.509620,-8.069680,-6.062057,7.843848,8.591810,0.639389,-2.666339,-7.583430,3.607173,-2.349484,4.545835,-3.452858,-8.909126,9.149652,-5.119103,0.160336,-3.428033,-3.655577,2.729028,9.615730,7.470474,-0.875296,1.545434,-8.532039,-9.548899,3.101205,-6.843463,-1.215198,5.801988,0.528397,3.399508,1.018274,-7.268081,2.866856,6.883126,-6.119796,8.811548,-4.431891,1.468779,4.895593,8.446834,-8.671322,-6.387011,3.459033,-3.939693,7.655609,9.150222,2.475985,4.442843,8.047858,-3.420683,8.044287,-8.027018,-5.914051,-6.015782,2.964120,-1.172126,-3.467143,6.790461,-2.464527,-6.663812,8.416475,-5.025488,5.780192,8.276982,2.869793,-6.122595,-4.454754,-5.140617,-9.934214,-5.036579,7.227088,7.530293,-7.950528,6.562926,9.918493,-2.472406,8.354041,5.772858,-1.049821,-8.845795,-9.842296,-5.690783,8.969453,1.596527,-6.459101,-0.240842,-0.790537,9.464557,-5.179085,7.600878,-5.926092,-7.387070,4.813792,-3.124306,6.342413,2.668461,1.773797,-2.895124,-9.213974,-0.026338,6.720148,-2.643951,8.574304,-0.508231,-0.692990,2.589362,-6.993549,0.482023,9.819433,6.656046,-6.534754,7.660992,7.508888,-9.584470,0.245122,-8.943140,8.657715,4.507152,-8.236320,-6.673241,7.966374,9.953176,-1.104419,3.511514,-3.236347,-7.684950,0.501347,-9.030743,6.298636,5.315236,9.344093,8.657715,-1.873849,7.627350,7.608900,-2.221336,0.828124,-6.313568,-4.517587,-0.428847,-6.787820,3.222440,-0.292493,-4.330028,-2.315581,-4.607733,9.925315,1.346494,-3.334901,-2.391914,-9.705266,8.246578,-0.531100,1.906501,4.508241,9.786653,-1.573512,-2.383218,-3.899888,-8.359878,-4.467098,0.643656,9.672583,2.659817,1.806772,5.713465,-7.953742,-9.527582,-0.852245,9.997743,3.662760,3.091786,4.655730,-5.132369,6.503519,4.140031,1.615973,9.259832,1.764125,6.849221,8.402968,-0.827427,1.388980,-0.164971,5.908991,6.757058,2.271729,-6.727616,-0.173497,-8.563930,-3.334088,9.221615,-1.056963,-2.079027,-6.296980,0.115585,-2.253681,6.583049,-8.711851,5.968022,-9.644217,-7.874120,3.097469,-8.943825,0.514882,1.952477,-7.317546,7.883344,-1.406341,-0.968849,5.253634,-5.747938,-7.313904,2.327485,4.530003,-1.951059,-4.694135,8.704343,1.291440,1.244365,5.407039,-7.243217,-1.000703,-8.800856,1.639401,0.920350,-9.511937,-3.959481,9.532299,4.217000,-6.124474,-2.552055,-1.855436,6.075346,-7.866003,-4.436436,7.423603,0.301249,5.770678,-6.029223,3.466880,8.562612,9.114698,-8.406912,-7.368506,-9.246381,6.016642,8.759639,-5.183415,1.885814,9.950114,-3.215124,3.249374,-4.105702,-7.481575,7.864241,-0.438450,9.447677,6.573785,4.560757,-1.323506,-2.268626,-3.724797,0.504195,-9.619126,1.889081,3.917721,3.742614,-1.027503,3.878350,-3.433990,-8.263566,9.930360,8.276617,6.475604,-6.567786,-4.377544,4.232584,-0.961434,5.875164,4.383158,5.320676,5.538604,6.810003,-1.611543,-9.314173,-5.131408,-7.627195,-5.737690,-9.391118,-9.094381,0.753786,5.758500,2.203132,-7.819990,7.939040,-1.144917,-0.581207,5.629298,3.355348,-7.219295,-3.745916,-9.956458,-4.016467,-2.663394,-4.072071,-3.854646,2.644839,-1.690636,9.203845,-8.936366,-2.242157,8.004772,-4.292395,0.847003,3.284355,7.252036,-1.259831,-4.421682,-2.746165,9.310764,0.457686,4.914431,7.181702,2.353865,-9.407841,4.967208,-3.126435,5.998190,1.792364,-1.389005,-2.104993,9.397240,8.295387,1.972005,-0.250621,-7.736063,-6.748954,6.504888,3.168833,1.319212,-1.504938,0.294106,6.063019,0.769250,9.365438,8.967842,0.843826,-5.956136,-8.043045,-4.091993,-4.776437,-8.071598,-4.431699,-0.221782,0.611636,2.123116,9.707780,-2.633949,1.343990,4.773209,-1.601489,-6.789088,1.801421,-2.056300,2.505480,1.139687,-6.519096,-3.733777,7.246786,-6.970563,-9.868292,-5.825148,-5.699303,8.606761,-2.543941,-7.706586,5.371783,-2.779859,5.652151,7.158947,5.355184,-3.269006,-3.319357,3.443757,-5.775448,-6.860050,6.779945,-2.717283,-1.006449,-3.948056,-9.247778,5.143614,2.388745,5.545753,-3.620607,4.106647,1.838299,8.972472,9.602238,8.011057,4.127521,-2.049020,-8.019170,-3.901464,-1.076199,1.169032,-4.607651,2.184687,-3.752726,-8.407626,5.912568,-5.500588,-8.421519,-4.832991,-7.220788,3.338536,-5.767911,1.538228,-7.955273,7.021172,-4.998847,7.183774,5.587382,-3.490345,7.877936,-0.718664,5.159263,4.361527,4.441605,3.854197,4.007225,3.555595,-3.393018,-0.755204,-0.231651,-8.843414,-7.075024,0.993777,-1.770388,0.166617,6.571562,-6.524644,1.609894,-1.223478,8.247416,-4.471576,-7.382660,-7.309474,-2.010557,4.770683,-4.681307,7.863296,1.088102,-2.389092,6.831728,-6.559134,-6.363443,8.645827,-6.977759,-3.773159,7.121232,8.182444,-3.736269,-0.035860,-4.952626,9.400358,0.815799,-9.279922,-5.914802,-4.794986,-2.410211,-1.918080,2.224710,-5.937086,1.824872,-5.635021,-3.542399,-5.872002,7.669271,9.830975,-7.371058,3.195657,-1.365334,-0.715402,-3.004728,-9.309505,9.790906,5.661592,-0.917978,3.548547,-5.825111,-7.418354,2.452334,8.820313,7.700538,-9.034572,-7.174046,-1.716086,0.344568,0.883445,4.613923,8.344142,-2.527060,-9.734075,-2.640305,-5.701313,1.284478,5.275169,7.037871,3.966184,-5.775840,-2.202624,4.125217,5.996082,7.435895,5.152194,-1.344004,-4.258172,2.873359,8.347533,-5.733518,1.634024,-5.379433,-4.103315,5.034032,-8.862201,7.905511,-4.641433,1.079028,-4.964124,-1.445927,-1.051719,-8.942766,3.008996,6.258588,9.728394,-6.747701,7.361960,-5.037864,-6.423637,9.272443,1.354854,4.880052,-8.956757,5.251649,-6.800203,-8.015705,-7.336900,0.995401,-9.406815,-7.882367,-7.555460,-7.062933,3.817092,9.173505,4.139042,-3.922793,5.373395,-3.431982,1.398886,-9.108892,-0.227190,-3.757847,1.604815,-2.138541,-1.201701,-7.191052,-5.310447,-5.658455,7.049646,2.797008,-7.936313,6.921453,-1.542511,5.894320,7.181342,7.220734,-7.385563,-7.309904,9.605181,-6.643055,1.887128,-3.915187,2.938221,2.921155,-0.955808,3.397885,-0.080418,-9.610986,0.732724,-7.954066,-6.406376,-4.834498,8.545319,-6.985959,0.960452,-6.685179,1.312417,-0.110736,4.769163,2.295181,9.585847,0.114561,9.821466,-3.054093,1.645766,3.003702,-9.708946,5.156108,-9.571269,-4.559078,-9.872154,-2.726769,9.782164,-8.005810,-8.480652,-2.031268,7.331775,-7.625776,1.342137,4.941038,5.288040,-7.144095,-2.839956,-5.269992,-3.266988,-8.807192,6.855432,-8.277847,-7.331611,-2.716524,3.664282,-7.982168,-1.885313,6.947299,1.362192,-0.045317,-9.310696,-8.358483,-9.283735,9.852522,5.551879,3.698284,4.710383,7.708898,2.132563,-6.708191,-3.824492,4.174027,5.307655,-2.418001,8.495369,-6.719642,-6.043087,-3.085576,6.865895,8.554076,1.906121,5.359183,-4.504105,-4.655855,-6.113715,-6.111778,0.768279,9.714118,8.328466,2.597267,3.705320,-1.111181,-4.037269,-0.756521,-1.309870,-6.433672,5.343408,-2.371739,-5.802396,4.135655,-9.116359,6.357090,6.178752,-0.045933,8.777019,5.018502,6.343274,-5.653778,-2.818245,8.595885,-9.301484,-6.959282,-9.358568,4.451717,-6.104272,2.729742,5.773440,-2.755019,-2.616751,7.985936,6.498335,-8.766402,-0.188577,-8.682964,1.563325,2.795280,-7.640975,4.674296,8.455415,2.699823,4.631969,-0.670193,-1.411663,8.558668,9.692137,-2.741244,1.604583,-6.894894,3.856945,-0.084397,-6.092744,-5.867389,-0.080673,7.857918,-4.332185,5.451297,-6.573545,-2.436393,-2.033914,4.803377,-1.586268,-2.050591,-5.737159,0.179505,-0.346576,-5.435284,-0.157588,5.580784,9.367384,-1.671083,0.418860,2.839831,7.690834,-5.732494,-0.132541,7.356762,8.614346,-2.755078,-4.777217,7.035703,-5.466484,-0.699797,-1.817632,3.450061,-2.213228,-1.590629,6.085549,4.351866,1.482913,-5.157084,0.243194,7.454502,-5.170849,-7.152080,5.938109,9.643783,-0.505112,-8.361273,5.492549,-1.155344,5.478567,9.513406,-1.167073,2.707295,9.921183,2.517846,-4.300818,4.345481,5.471356,6.274202,-3.197221,-3.407591,-7.977589,1.870989,-4.590393,-7.222344,-5.888194,-6.544740,-8.767729,8.736102,2.675626,2.636682,1.173701,-8.554065,-2.219650,2.036433,-8.967558,5.425151,6.630394,-4.875827,-5.305998,8.030061,1.049277,-8.566002,-0.054796,5.042714,-9.185725,3.768561,8.185747,-6.542137,6.310062,-0.634437,0.077462,6.216921,9.434015,-6.581801,-4.906728,-4.873322,0.234972,9.206238,-3.620745,-7.578475,6.940064,-9.058451,6.142841,2.836790,8.294981,2.136972,5.063365,0.036016,-3.171784,6.118619,0.464442,-7.750143,-4.119255,-7.327521,-4.801413,7.709064,-0.347696,7.476326,2.966064,1.505673,-0.710939,7.429025,0.215471,-9.175504,1.313497,-3.194619,-3.922717,2.881020,-9.716240,3.848308,-7.837215,8.481138,7.699249,9.870483,5.594917,0.588943,0.683492,1.448929,3.248448,-5.386053,5.679800,9.086304,-4.370730,-1.281767,1.826511,6.168428,6.299274,-6.999520,7.627504,4.297181,-4.561740,2.588919,2.995929,-9.284222,-2.338992,0.753122,9.298110,0.471117,-1.156305,4.791952,-0.080257,6.570831,2.619529,-7.207076,4.942194,0.431019,-2.237074,8.039388,2.465164,-9.225067,8.553073,-8.120572,-1.446259,-4.677796,9.993570,-1.249687,-9.382193,7.411442,-9.620841,0.815112,6.277342,0.626058,9.317876,-1.762619,4.256991,-0.107525,-6.088053,4.218818,4.645384,1.176529,1.669365,-4.385107,-7.621269,1.378870,7.279994,-5.436820,0.046086,-5.057497,8.782274,-2.312081,0.551478,1.692909,6.320534,-2.831034,-6.805597,2.489713,-2.195409,1.039224,-3.724179,3.272354,3.542823,-7.242594,2.148133,9.945143,9.844125,3.449460,7.575062,1.768204,-8.615091,2.198218,3.751704,-3.698755,-4.199765,-8.527360,3.553233,-2.035464,-1.094798,1.039315,1.486497,-6.258431,-6.907787,4.120097,-9.457633,-7.019433,-2.313938,6.525604,7.317591,9.285402,3.018764,-1.254104,6.361970,-3.629406,8.670514,-8.018359,-5.586054,-3.251193,-7.839333,-6.959157,-1.976881,3.578741,-0.896079,-7.097338,8.137354,7.405713,-2.223439,5.156704,-9.443120,6.497341,4.883405,-4.650100,-3.049538,4.857530,-3.377210,8.355636,-6.844857,-1.334466,4.476775,-5.661291,-8.663387,2.436354,8.336415,4.566085,-3.980201,-1.295840,-6.296877,-6.771771,1.685566,8.049374,1.522335,-2.515234,-5.916223,3.713232,6.310746,-2.064408,1.655815,-4.007130,-1.441984,7.164235,-8.227392,-3.770504,-4.803763,0.394012,-1.814376,-7.201165,5.425952,-4.801892,8.681735,3.068678,8.865232,-9.823902,-2.785003,-5.329925,-6.827718,1.224506,7.302148,3.224174,-6.447026,2.390840,-8.282451,2.385135,-8.534832,6.718576,3.992088,-5.312123,-2.549625,8.051034,-3.838843,7.333850,9.002806,8.682242,-1.658664,9.634696,-7.424859,-0.021855,-6.195636,-3.776715,1.677686,-7.136605,1.082042,1.671773,7.508007,-2.859445,-8.544367,1.444495,-3.212963,-3.407464,3.538158,-6.851219,-9.654091,-2.856468,-8.928496,1.530488,-4.128344,-0.709709,3.433934,7.978128,-6.346667,-4.879917,4.291447,4.419215,-9.345185,3.776026,5.932047,0.954610,-9.888440,-7.149395,1.509151,-6.007859,8.791915,1.431839,-6.289245,8.276027,-8.227153,-0.693409,0.416242,2.286023,6.654730,-9.015811,-5.663008,7.457909,5.933460,3.006934,8.215477,5.647531,-0.025581,2.027402,3.934209,-1.643742,-6.215984,-6.529714,-9.809164,-5.255450,-6.666568,-3.898984,-4.844313,5.112723,6.329773,-9.923496,-9.338598,4.251536,-2.033353,8.237367,2.274600,2.928475,-0.980140,-2.010694,-5.280925,2.748819,6.320404,6.860382,0.074723,8.360085,-9.883148,7.530741,4.200250,1.546219,-3.871741,-8.018105,-8.099372,3.382758,7.498480,4.720945,-5.221591,-1.013688,-1.677508,-2.444816,-7.223357,-0.167121,7.114858,1.368447,-3.814378,3.231919,5.023322,9.073232,1.474487,5.435683,-0.885538,-0.117675,0.752983,-5.854075,1.884801,7.894858,-5.932236,-4.148673,8.424501,7.069822,-4.167677,-8.179436,-3.303821,-7.349997,9.503320,-3.510767,-0.884447,-7.094780,8.153352,-1.572742,6.126077,-7.671395,8.229849,-9.687612,-8.276946,5.903347,-7.985819,-2.337275,6.704374,-6.161612,-1.024066,-8.329933,-6.662037,-6.682949,8.128039,-6.777727,-6.005312,-4.275562,4.819341,6.256474,-6.944372,-6.647069,-7.663368,5.276777,2.486224,-8.131040,-8.184793,5.203016,-3.785852,-2.272944,-6.308710,-5.390354,3.001304,-1.262949,4.285341,-6.180993,-9.440115,-0.776989,-0.574077,-9.679643,-9.882794,2.763901,0.142823,8.181985,4.967181,2.811854,-6.566821,-7.955944,5.223071,-1.713882,-8.031423,-8.984223,0.306525,-1.138574,6.283500,-5.169569,1.494065,-6.293973,-9.680062,-5.428363,-8.460187,4.747296,-6.425410,-4.421199,-0.887974,-6.624569,-2.100564,-6.130247,-2.433934,9.144342,2.557910,2.401936,0.663621,-5.288861,5.707660,1.819732,-8.791923,-4.810927,3.274667,-6.912729,5.421232,-3.110610,-3.683807,7.130972,5.890472,-1.683629,-9.558851,-9.701849,5.570598,5.584987,3.562848,-8.853836,0.920772,-7.804014,-1.910247,3.824744,-5.944484,0.805973,-7.028294,6.651118,6.783839,-1.255859,0.442186,8.665215,9.807919,7.867952,-6.092192,3.971728,-6.067122,-7.203005,-7.860164,-3.666328,9.156181,8.510477,-0.350825,-8.647541,-3.132789,-8.666063,5.925809,3.777804,-9.970842,2.942334,-0.346362,0.809672,7.208255,9.016478,4.832085,-0.076650,5.169029,-6.915738,-4.177241,5.102971,4.856204,-7.057545,-1.325959,-2.837463,-9.680364,6.872427,-5.023880,3.754673,-8.760910,5.210075,-3.676938,-4.514792,-7.942146,9.791527,1.634573,0.067652,-1.250828,8.787292,6.331258,-5.772965,-4.668045,2.606622,-1.233775,-3.946409,3.649753,-7.132608,0.649701,-0.883795,9.980317,-9.788326,-4.765394,3.009686,4.813310,4.524807,-2.762316,-7.198754,6.552416,8.040836,-7.816156,-5.389330,-6.117431,1.370625,-4.095079,6.422776,1.431898,-5.486477,4.398128,1.241155,3.074993,-0.731782,-8.740824,-3.016596,-0.725083,4.890632,1.182122,-6.574030,-1.176686,7.516943,9.106082,-8.406358,-5.154175,7.926455,-4.274852,-0.067443,1.735585,-7.500699,3.709143,-9.455611,-1.087448,-1.786366,8.563448,5.365690,-8.757006,-3.834375,5.001217,-9.189262,-8.382377,-3.795447,-8.167515,-8.642582,3.901066,7.900164,7.083741,-3.326822,2.423961,5.879834,3.639855,-7.401320,8.661870,-1.101071,5.601979,-6.080829,-7.786854,7.305961,9.345818,-9.955777,-3.936512,0.363457,8.814017,2.807175,-5.605080,-3.171007,-8.442171,1.652632,3.182015,-0.222778,-5.421575,-5.726473,4.636624,-0.119300,6.056161,7.029339,-5.287286,3.840092,-9.691143,1.014490,9.321771,6.811774,-1.477852,1.739724,-3.334692,5.729250,-6.232961,3.804059,3.360045,-6.103851,-8.725788,-6.760953,-9.679893,8.098406,-7.231931,3.257361,-9.726816,4.226578,4.498814,-2.515375,5.768181,1.350226,-8.923680,7.756375,-7.443395,-8.387360,-0.414141,5.394651,8.924425,4.103474,7.166756,6.020849,4.930390,7.587671,-2.847804,-5.880353,3.424476,1.791850,-1.667625,4.997500,5.588430,-8.241836,-4.444547,-7.986075,-3.056911,7.964039,4.537827,6.173897,-7.428983,2.607193,-9.454166,-4.289992,3.361450,4.733290,-0.947009,-8.469885,3.894425,3.149307,4.897185,1.447911,-5.340158,7.760076,5.676424,-3.435857,6.470050,-7.305353,-8.577547,2.963461,7.434945,3.081102,3.866368,8.791700,-6.406487,-1.644286,-2.564234,5.450196,6.859305,-9.595946,1.660523,-4.049164,3.671789,0.647605], dtype = "float32")#candidate|3765|(2688,)|const|float32
call_3764 = relay.TupleGetItem(func_3437_call(relay.reshape(const_3765.astype('float32'), [4, 672]), relay.reshape(const_3765.astype('float64'), [4, 672]), relay.reshape(const_3765.astype('float64'), [4, 672]), relay.reshape(const_3765.astype('bool'), [4, 672]), ), 4)
call_3766 = relay.TupleGetItem(func_3442_call(relay.reshape(const_3765.astype('float32'), [4, 672]), relay.reshape(const_3765.astype('float64'), [4, 672]), relay.reshape(const_3765.astype('float64'), [4, 672]), relay.reshape(const_3765.astype('bool'), [4, 672]), ), 4)
output = relay.Tuple([bop_3757,uop_3762,call_3764,const_3765,])
output2 = relay.Tuple([bop_3757,uop_3762,call_3766,const_3765,])
func_3769 = relay.Function([var_3755,var_3756,], output)
mod['func_3769'] = func_3769
mod = relay.transform.InferType()(mod)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mutated_mod.get_global_var('func_3769')
var_3771 = relay.var("var_3771", dtype = "uint32", shape = (11, 5, 8))#candidate|3771|(11, 5, 8)|var|uint32
var_3772 = relay.var("var_3772", dtype = "uint32", shape = (11, 5, 8))#candidate|3772|(11, 5, 8)|var|uint32
call_3770 = func_3769_call(var_3771,var_3772,)
output = call_3770
func_3773 = relay.Function([var_3771,var_3772,], output)
mutated_mod['func_3773'] = func_3773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2255_call = mod.get_global_var('func_2255')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_3775 = relay.TupleGetItem(func_2255_call(), 0)
call_3776 = relay.TupleGetItem(func_2257_call(), 0)
var_3780 = relay.var("var_3780", dtype = "float64", shape = (12, 9, 13))#candidate|3780|(12, 9, 13)|var|float64
bop_3781 = relay.greater_equal(call_3775.astype('bool'), relay.reshape(var_3780.astype('bool'), relay.shape_of(call_3775))) # shape=(12, 9, 13)
bop_3784 = relay.greater_equal(call_3776.astype('bool'), relay.reshape(var_3780.astype('bool'), relay.shape_of(call_3776))) # shape=(12, 9, 13)
output = relay.Tuple([bop_3781,])
output2 = relay.Tuple([bop_3784,])
func_3786 = relay.Function([var_3780,], output)
mod['func_3786'] = func_3786
mod = relay.transform.InferType()(mod)
var_3787 = relay.var("var_3787", dtype = "float64", shape = (12, 9, 13))#candidate|3787|(12, 9, 13)|var|float64
output = func_3786(var_3787)
func_3788 = relay.Function([var_3787], output)
mutated_mod['func_3788'] = func_3788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3539_call = mod.get_global_var('func_3539')
func_3540_call = mutated_mod.get_global_var('func_3540')
call_3821 = relay.TupleGetItem(func_3539_call(), 0)
call_3822 = relay.TupleGetItem(func_3540_call(), 0)
func_3657_call = mod.get_global_var('func_3657')
func_3661_call = mutated_mod.get_global_var('func_3661')
var_3830 = relay.var("var_3830", dtype = "float64", shape = (450,))#candidate|3830|(450,)|var|float64
var_3831 = relay.var("var_3831", dtype = "uint64", shape = (90,))#candidate|3831|(90,)|var|uint64
var_3832 = relay.var("var_3832", dtype = "int64", shape = (3, 66))#candidate|3832|(3, 66)|var|int64
call_3829 = relay.TupleGetItem(func_3657_call(relay.reshape(var_3830.astype('float64'), [1, 450]), relay.reshape(var_3831.astype('uint64'), [90,]), relay.reshape(var_3832.astype('int64'), [198,]), ), 5)
call_3833 = relay.TupleGetItem(func_3661_call(relay.reshape(var_3830.astype('float64'), [1, 450]), relay.reshape(var_3831.astype('uint64'), [90,]), relay.reshape(var_3832.astype('int64'), [198,]), ), 5)
uop_3834 = relay.log2(call_3821.astype('float64')) # shape=(12, 9, 13)
uop_3836 = relay.log2(call_3822.astype('float64')) # shape=(12, 9, 13)
func_2060_call = mod.get_global_var('func_2060')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_3847 = func_2060_call()
call_3848 = func_2060_call()
func_3769_call = mod.get_global_var('func_3769')
func_3773_call = mutated_mod.get_global_var('func_3773')
const_3870 = relay.const([5,7,5,-6,5,9,4,2,3,-5,4,-2,5,-3,-2,-3,2,-2,9,-5,-1,10,6,-9,-4,5,6,-4,3,-6,-4,3,2,3,5,-6,2,4,-8,1,7,9,-3,4,2,2,10,-4,-3,4,4,-4,7,-8,-1,8,-5,1,2,6,5,2,3,10,2,4,5,6,-6,-9,-5,4,4,10,1,1,-3,-3,-8,2,8,-8,6,9,10,10,4,5,-9,7,-10,8,-1,10,8,9,-10,1,1,-7,-7,-6,2,3,8,-3,-8,2,4,7,5,-9,5,10,-1,8,-5,3,8,9,5,4,5,-3,7,-2,-7,9,1,9,6,2,-4,7,10,-7,9,10,-7,-2,2,9,5,1,-7,9,-10,5,5,-7,9,4,5,-2,5,-9,8,-6,7,-8,-2,10,-10,-7,8,-2,7,-4,9,7,10,3,-7,2,10,10,8,5,6,3,-7,-10,-10,-9,2,3,3,3,-6,-3,2,-8,5,8,-5,-5,3,-7,4,4,-1,10,-4,1,6,6,-1,-10,-8,-10,-9,-5,2,7,-7,2,7,-1,4,1,-8,-10,3,-7,-10,4,-2,2,-1,8,2,-6,-1,-10,-1,-5,-1,-9,-6,-3,-3,-6,6,-1,-8,4,8,-9,-9,5,3,8,-6,-6,3,-1,-8,3,8,10,-2,8,-6,-10,7,2,5,3,7,4,-3,-8,5,-3,-5,8,7,7,4,-6,-3,2,10,-9,-9,9,-9,10,-8,6,-6,-1,2,-6,-5,9,5,-6,-9,2,-8,-7,-7,3,-2,9,5,2,-7,-6,-5,4,8,-4,5,-2,-8,1,8,3,3,7,-3,7,-9,4,-10,3,8,-3,-3,7,-8,9,2,-3,3,5,10,5,7,-5,-10,4,-8,-1,6,4,-6,-7,4,-5,3,-10,4,-4,7,-7,-10,4,-10,10,-5,-7,5,1,-7,6,-6,10,-4,-10,-6,7,-10,5,-8,-7,7,-5,-9,4,1,-3,-8,7,-1,-4,-6,4,-4,7,6,-6,-9,9,-7,5,3,-7,4,5,-2,2,-10,5,9,-9,-9,8,-5,-7,10,-2,-9,5,4,-7,-9,-6,9,-6,-5,-3,-9,2,8,8,-9,-2,-1,2,-1,2,1,-10,7,-9,10,-9], dtype = "uint32")#candidate|3870|(440,)|const|uint32
call_3869 = relay.TupleGetItem(func_3769_call(relay.reshape(const_3870.astype('uint32'), [11, 5, 8]), relay.reshape(const_3870.astype('uint32'), [11, 5, 8]), ), 3)
call_3871 = relay.TupleGetItem(func_3773_call(relay.reshape(const_3870.astype('uint32'), [11, 5, 8]), relay.reshape(const_3870.astype('uint32'), [11, 5, 8]), ), 3)
uop_3873 = relay.acos(var_3832.astype('float64')) # shape=(3, 66)
uop_3875 = relay.sinh(uop_3873.astype('float64')) # shape=(3, 66)
output = relay.Tuple([call_3829,var_3830,var_3831,uop_3834,call_3847,call_3869,const_3870,uop_3875,])
output2 = relay.Tuple([call_3833,var_3830,var_3831,uop_3836,call_3848,call_3871,const_3870,uop_3875,])
func_3878 = relay.Function([var_3830,var_3831,var_3832,], output)
mod['func_3878'] = func_3878
mod = relay.transform.InferType()(mod)
mutated_mod['func_3878'] = func_3878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3878_call = mutated_mod.get_global_var('func_3878')
var_3880 = relay.var("var_3880", dtype = "float64", shape = (450,))#candidate|3880|(450,)|var|float64
var_3881 = relay.var("var_3881", dtype = "uint64", shape = (90,))#candidate|3881|(90,)|var|uint64
var_3882 = relay.var("var_3882", dtype = "int64", shape = (3, 66))#candidate|3882|(3, 66)|var|int64
call_3879 = func_3878_call(var_3880,var_3881,var_3882,)
output = call_3879
func_3883 = relay.Function([var_3880,var_3881,var_3882,], output)
mutated_mod['func_3883'] = func_3883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_3899 = relay.TupleGetItem(func_1282_call(), 3)
call_3900 = relay.TupleGetItem(func_1284_call(), 3)
func_3511_call = mod.get_global_var('func_3511')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_3905 = relay.TupleGetItem(func_3511_call(), 0)
call_3906 = relay.TupleGetItem(func_3513_call(), 0)
output = relay.Tuple([call_3899,call_3905,])
output2 = relay.Tuple([call_3900,call_3906,])
func_3911 = relay.Function([], output)
mod['func_3911'] = func_3911
mod = relay.transform.InferType()(mod)
output = func_3911()
func_3912 = relay.Function([], output)
mutated_mod['func_3912'] = func_3912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2762_call = mod.get_global_var('func_2762')
func_2763_call = mutated_mod.get_global_var('func_2763')
call_3953 = func_2762_call()
call_3954 = func_2762_call()
uop_3956 = relay.erf(call_3953.astype('float64')) # shape=(12, 15, 4)
uop_3958 = relay.erf(call_3954.astype('float64')) # shape=(12, 15, 4)
func_2421_call = mod.get_global_var('func_2421')
func_2425_call = mutated_mod.get_global_var('func_2425')
const_3964 = relay.const([4.181062,6.979769,9.135755,4.582545,3.279981,-5.189075,-5.379104,-5.547111,4.551491,-0.044643,8.783724,-0.840205,4.023960,-2.397548,-8.345595,0.286870,4.630551,-7.980033,1.902330,-2.585546,4.896736,-2.982195,-1.218296,-9.792155,-4.233472,8.842150,1.982336,-2.490457,-3.033662,2.685591,6.399196,-6.239999,3.942838,8.569499,-7.473401,-6.661937,-5.443246,2.097740,7.490243,-1.484567,6.809160,-3.412919,9.567392,5.146691,6.714308,8.806448,7.455160,3.556067,-2.858330,-3.312782,2.423901,-5.062079,7.569870,-9.897172,2.911194,-2.100101,8.110238,2.211933,0.319985,-6.697222,-4.963696,5.931222,-2.688299,-0.383170,3.052290,8.507412,1.982466,7.570784,-1.990301,-9.832367,-1.678468,-5.638438,8.218373,5.778015,-4.044004,0.729621,3.926074,4.137429,1.868369,-6.507231,-7.199270,4.878009,3.042462,-8.514464,0.688701,-1.135253,8.113093,7.494619,-8.425428,0.655337,-9.860103,7.031701,-7.697735,2.223379,1.216686,-1.565983,-4.991006,1.390386,-8.200911,9.856377,-5.453033,-3.169169,-7.667306,-3.804868,-7.324075,9.278882,-5.704706,-1.808604,1.223550,9.855056,2.541699,-1.017909,2.068681,1.429409,1.433090,7.459538,-5.982647,6.956912,4.403771,-0.460288,-1.964545,8.384176,-1.751365,7.096156,9.533898,-1.146134,-9.231891,-2.775111,7.351074,-8.117344,-8.419166,-0.693154,9.454544,6.593354,-9.632580,-2.773939,-9.473836,1.458872,0.839216,-3.769478,2.531555,7.024903,-5.728749,-2.808343,6.361759,-1.856101,-8.239803,6.947484,6.738274,5.813850,-6.527739,-6.216099,6.684519,3.152351,-7.698450,7.361270,6.388741,2.964729,9.630491,0.074363,-5.023277,-7.975745,-1.342988,-0.287923,8.884720,8.643583,8.016433,-6.372100,-8.004894,9.934165,9.410255,-9.785386,4.530490,-4.114906,7.986639,-6.509714,-2.791261,0.268217,-6.533531,-9.526116,3.240775,9.131800,9.170059,6.960347,0.496970,-9.367659,3.691347,4.024177,-8.467799,3.708425,4.947768,-9.806047,8.729397,7.937680,3.716515,4.332396,5.496573,-2.903326,-9.601693,-9.246444,-0.086364,-2.042768,-8.885566,6.537182,-1.014643,-9.393368,-3.760568,7.175545,-1.468517,2.602755,-1.739291,-5.153615,8.324741,-7.968836,-0.689947,5.152785,3.291635,4.153229,-8.296465,-4.840938,1.860180,-9.102748,9.987884,6.787783,-6.260762,-2.807754,6.840750,7.480916,6.206540,-5.669748,-6.502952,-6.052532,-8.163670,7.529526,-0.472712,9.309574,9.178158,7.429705,1.008605,-8.062537,9.497815,-5.750726,-8.775486,8.560915,8.620327,0.605876,-8.723625,0.332683,1.801501,6.449046,-8.378253,-6.091629,-0.997420,3.585500,-6.653178,-5.672422,-8.485638,0.789888,-2.971275,-6.957459,-9.128573,6.033168,9.904116,3.358122,-7.022650,7.108179,8.724564,-3.361487,1.863275,0.688048,5.540742,-6.008281,-6.087912,-4.754804,-6.418612,-9.296812,8.502599,5.678745,-9.262139,5.787040,0.936813,-0.618007,-8.233011,8.568746,-8.963319,-3.330193,-1.681049,2.595962,-3.642856,0.454808,-1.307155,3.363235,0.825237,-4.067491,-6.778181,-3.408154,-3.821893,-3.826246,7.422153,3.152205,4.823304,-9.796966,-3.657947,-8.142301,4.915077,8.446212,-1.540231,5.981203,-5.521965,6.631462,-9.016563,-3.738387,-6.699931,5.855709,-2.292773], dtype = "float32")#candidate|3964|(315,)|const|float32
const_3965 = relay.const([7,9,-4,-10,5,-1,10,10,-2,1,-9,4,1,9,1,3,8,2,4,-8,9,-8,5,8,10,-7,-8,-9,2,-2,-3,-3,-9,-3,-8,-4,10,10,1,3,7,-10,-10,5,4,9,6,-10,-8,10,6,4,7,1,10,-9,5,-6,-6,-9,10,-10,1,-3,-3,-4,6,-4,2,1,9,-10,9,9,9,-8,7,5,-7,8,1,10,-10,4,-8,-5,-7,1,-3,1,-2,10,6,9,6,-5,9,-6,-10,2,-5,6,4,-8,-2,6,6,3,-1,-7,-10,-4,8,2,2,7,-3,-9,-2,1,-6,8,-2,5,-3,-2,5,-6,8,2,-3,7,-3,10,-5,-1,-9,2,10,-7,-10,-8,5,-9,-9,2,1,8,6,-9,-3,2,9,-5,1,-2,3,7,1,2,8,-3,-1,-3,1,10,4,5,-5,-2,2,-7,-1,4,10,-3,-8,-7,7,10,6,1,-1,3,5,-2,1,-4,2,6,4,10,6,-2,7,-1,3,3,8,-10,3,-2,1,-9,-5,-5,-2,2,-10,3,8,2,-7,5,-3,8,9,2,-7,-3,6,3,2,-8,-2,4,6,-1,-3,8,-5,3,6,4,-8,10,-4,2,10,10,10,4,-10,-8,-3,-8,-1,-2,10,-4,2,2,7,-4,5,-1,-8,10,-9,-10,3,1,-10,-4,-1,-9,-2,-1,-9,8,-10,9,-3,7,-9,4,-6,-9,10,-9,2,5,10,-5,-2,-3,3,10,2,7,4,-5,-8,9,8,10,7,-3,1,6,-2,-4,2,2,1,7,-1,-10,-7,-7,-6,-4,-10,1,-7,-5,-7,-6,2,5,7,3,-6,-7,1,-9,-10,-1,10,-4,-9,3,-7,-7,9,6,-5,4,-9,6,6,8,-6,6,1,10,8,-7,6,-6,5,-1,-9,4,7,-10,3,8,-9,7,4,-1,3,-7,-2,-4,-5,1,-1,3,-3,10,1,9,-2,-9,4,-9,9,-7,-1,10,-7,9,6,-5,-5,6,3,-7,2,1,7,2,-10,-9,-2,-6,-9,-5,8,-3,5,10,-7,-2,6,-2,7,-9,4,7,-6,-5,9,2,-9,2,-6,-3,1,9,-1,10,-8,-5,8,8,-7,3,-2,5,9,9,-10,-10,8,-10,-4,-8,-1,5,-5,5,6,7,-2,3,-10,9,-5,-2,-2,-5,-3,7,6,-3,-4,4,-8,-10,-5,-2,-5,4,-1,6,-9,10,-4,5,-8,2,1,-2,8,7,-4,8,-1,-3,1,8,8,3,4,1,-10,-3,-8,-8,-6,-10,6,-4,-10,-1,-4,-2,-6,4,5,-1,-10,-4,7,7,-8,6,2,-1,6,-5,1,-3,-2,-7,4,-10,10,3,7,-3,-4,9,8,2,3,4,-3,-3,4,2,5,2,-7,5,4,10,-6,6,10,9,5,1,10,5,-1,-4,10,-4,-1,-2,6,3,-1,-9,6,6,1,9,9,-9,-10,1,-9,6,3,-2,-10,-4,-3,1,8,1,5,3,4,6,-5,6,3,1,-2,6,8,-2,-10,-10,-8,-10,-3,-9,-6,-2,4,-4,-2,3,-10,7,-9,-10,-9,9,-3,2,-3,2,-8,2,-2,10,-3,-9,2,-2,-2,1,-5,1,-1,-2,6,6,8,-7,-4,6,8,2,-1,2,-9,7,5,-1,-10,3,-7,-9,6,-5,1,-10,7,2,8,-3,8,10,9,4,-4,-5,-5,-6,-2,-5,-4,-5,-9,-3,10,-4,8,-6,3,6,6,-8,10,3,-7,-7,3,6,-7,-9,-4,7,-4,1,-2,5,-2,8,7,4,-10,-6,10,-5,10,-4,-6,10,-6,7,10,8,5,4,7,-7,-8,2,-7,-7,-10,5,3,-5,-8,9,-4,-10,4,2,-3,-10,6,-10,-6,1,-7,-1,-4,1,9,-10,8,-4,5,4,7,-10,6,5,7,10,-6,6,9,2,9,3,-1,2,4,-5,-1,-3,6,-9,-8,7,-1,-4,2,8,-7,1,-9,5,8,-4,4,4,-7,-3,1,7,-6,-2,-6,-10,-3,-10,-1,-6,4,7,-7,-9,5,7,5,10,6,10,4,4,8,-2,10,9,9,-5,-1,3,8,4,6,7,-7,4,6,3,-4,4,-4,-10,-2,-9,9,1,-2,5,10,-9,-8,2,-3,-9,-9,-10,7,-6,-5,4,-7,-3,9,-8,-9,-7,2,-2,-4,1,-3,6,3], dtype = "uint16")#candidate|3965|(845,)|const|uint16
call_3963 = relay.TupleGetItem(func_2421_call(relay.reshape(const_3964.astype('float32'), [15, 3, 7]), relay.reshape(const_3965.astype('uint16'), [1, 845]), relay.reshape(call_3953.astype('float32'), [720,]), ), 1)
call_3966 = relay.TupleGetItem(func_2425_call(relay.reshape(const_3964.astype('float32'), [15, 3, 7]), relay.reshape(const_3965.astype('uint16'), [1, 845]), relay.reshape(call_3953.astype('float32'), [720,]), ), 1)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_3968 = relay.TupleGetItem(func_3171_call(), 1)
call_3969 = relay.TupleGetItem(func_3173_call(), 1)
func_3657_call = mod.get_global_var('func_3657')
func_3661_call = mutated_mod.get_global_var('func_3661')
const_3973 = relay.const([[-2.898357,-0.042816,-4.111333,-9.139062,9.088392,-8.753165,-4.675425,7.581371,6.736270],[5.343554,7.368429,5.420684,7.192833,-4.344976,6.655132,-8.550591,-2.020472,-5.085126],[4.842755,1.193911,5.332139,-4.819549,-9.044350,-3.062374,-6.233049,2.012553,0.931869],[4.444299,-9.319231,-9.070331,-0.281583,9.519187,-7.092980,5.731327,-4.536528,-9.177374],[-1.373896,7.553910,7.499498,2.746251,6.043849,4.758745,3.833088,0.813273,6.457448],[2.203170,-6.330124,-1.166744,-4.313020,-8.234222,-3.080025,0.423067,-1.116128,-1.352092],[-6.779605,2.321975,-8.987951,-6.052684,3.268161,0.138804,9.141918,-4.056073,1.479900],[-2.569148,-3.330705,-3.189085,-8.907081,9.450857,-3.115952,-9.326314,7.836625,-0.111313],[-9.067494,6.684476,-3.349792,-9.442055,6.831016,-9.951173,5.363795,6.485020,4.641040],[4.745415,0.223367,-0.419712,-5.612477,-7.921077,-6.721535,5.222236,1.837151,-4.562951],[-5.771691,5.827692,4.857044,-7.806247,3.272412,-2.578704,-8.141029,-0.759198,4.764146],[7.225682,2.702550,8.429460,7.315124,-3.669840,-7.082334,-5.193616,-7.920162,-0.848203],[9.561528,-2.574269,-3.727663,-8.885777,-9.959182,-8.109578,0.865364,5.687759,6.099612],[9.199353,-1.718497,9.782407,-8.578612,9.144082,-6.800257,2.606981,-9.775230,-0.923971],[-7.399089,9.970996,4.727038,-2.553422,-8.077014,3.660159,3.531015,-6.954933,-2.226080],[-0.039812,1.009151,9.742003,6.627984,-0.923622,1.185597,8.016545,6.734376,-8.585211],[-0.353140,4.554448,6.996909,9.394127,7.352145,-9.358364,9.401938,2.922775,-8.239222],[-7.947489,8.156904,8.976312,3.329935,-7.036936,-2.970073,4.979113,-2.539254,2.148855],[1.713860,-7.132511,-5.519340,2.353751,6.631347,-1.772601,4.992767,5.135297,5.586494],[8.607805,7.990820,4.513605,3.921017,7.113297,-4.747230,1.328228,0.460855,-4.662176],[-5.216164,4.926098,-5.557829,6.670739,0.745930,-1.481615,0.174777,6.051091,-8.789213],[-0.212900,-9.614691,3.098231,-5.097209,-4.794084,-8.626687,3.412759,-7.949430,-0.403737],[3.919385,3.552588,-5.327090,7.420351,2.622336,5.369441,-5.626524,0.165480,7.846820],[3.754159,4.291232,0.293688,-3.835805,-4.012697,1.771005,-8.924675,-6.117722,5.403227],[4.523012,6.723901,-4.638271,-2.990221,-7.719618,7.382879,-5.273802,-3.780051,-2.736139],[6.458033,-0.775595,-6.017671,-9.632690,-9.959707,-6.735020,-4.035949,7.436068,-2.613483],[-9.924084,-8.511657,1.074678,-3.460459,-5.259625,8.453119,-8.907092,4.773467,1.843325],[-9.331567,-0.275844,-7.192947,7.057526,1.754233,-5.143619,-0.586646,-5.818270,-4.672436],[-8.232175,-5.332640,4.817999,1.071518,-0.202478,-1.694683,-5.118344,-2.733902,-2.677164],[6.942010,1.784877,-0.661177,8.429398,-3.359651,0.677837,2.417892,0.261449,-8.391369],[5.025823,-1.729005,-7.595687,8.597911,4.148424,-7.210374,7.401595,2.212411,-3.720446],[-2.138107,-7.581040,5.297549,9.673391,1.527878,-9.677300,4.257985,-5.887129,-2.301995],[0.397621,5.376894,3.142487,-4.184528,-3.618552,0.869253,2.809448,-2.870403,-6.327269],[7.579727,-5.794711,-9.202843,-9.854902,-4.513832,7.852980,8.970990,4.647852,3.252776],[-6.160350,3.430276,-8.910734,7.841767,-1.253085,8.010882,-1.470778,1.996724,-5.736605],[4.609193,8.023175,3.589943,-0.429535,5.279914,8.609010,-7.244016,-5.645540,-0.902965],[-6.087791,-3.156366,9.878210,6.685896,-7.043051,-8.036656,-8.458063,2.807483,-1.287536],[-8.315044,-1.632168,-4.431351,6.911808,4.423385,-0.111390,-6.319580,-1.624499,9.982406],[-8.594034,6.964398,7.611369,8.961177,6.732722,-9.458213,7.404923,5.374197,-0.589354],[-8.050879,-8.982547,-8.365280,0.041439,-1.626803,5.726920,-1.576862,-6.602311,6.732278],[5.045119,-6.005748,4.575731,-4.179436,0.785012,-3.636253,3.407705,7.741569,2.215874],[-1.411689,-4.807571,-4.945135,6.783024,-1.703309,-9.889561,2.677756,-9.934923,-3.228451],[-2.905881,6.911841,-0.074327,-3.681396,-6.482690,-3.925116,5.449155,-5.962144,2.818204],[0.481863,6.047946,-3.969332,7.255549,-9.459058,9.328186,-8.420228,4.042460,-6.999011],[9.958681,-9.506512,-6.013696,3.469718,9.939689,-8.743025,-2.434117,7.067389,1.430616],[6.568202,-2.170876,-6.983426,6.577930,9.581886,-9.091257,-3.832281,-7.292702,3.696732],[0.582111,-6.787552,4.378499,5.031046,4.386172,8.780651,7.884808,7.543177,-4.754793],[5.921194,-2.232167,4.798236,-5.265377,9.965048,-3.158251,-9.228531,1.467545,-1.502891],[2.184701,6.302268,8.413882,0.028552,9.126094,-5.270945,-0.926073,7.144266,-0.565247],[-0.616443,3.042225,-0.663717,-9.269761,6.686854,3.681005,-8.900514,-6.603108,3.544572]], dtype = "float64")#candidate|3973|(50, 9)|const|float64
const_3974 = relay.const([[-2,-3,10,3,8,-5],[3,-4,6,1,-5,9],[-7,10,2,-4,3,-9],[-9,-8,-6,-1,10,1],[7,6,-9,7,5,1],[9,4,-5,8,5,-1],[8,3,9,2,6,-9],[-2,-10,-8,-6,10,-1],[-5,1,5,-5,5,-1],[-2,2,10,2,2,10],[-6,-6,-6,-1,6,-1],[3,-3,1,-3,-6,10],[10,9,7,1,4,8],[-6,9,1,2,5,2],[-9,9,-4,3,-5,6]], dtype = "uint64")#candidate|3974|(15, 6)|const|uint64
var_3975 = relay.var("var_3975", dtype = "int64", shape = (198, 1))#candidate|3975|(198, 1)|var|int64
call_3972 = relay.TupleGetItem(func_3657_call(relay.reshape(const_3973.astype('float64'), [1, 450]), relay.reshape(const_3974.astype('uint64'), [90,]), relay.reshape(var_3975.astype('int64'), [198,]), ), 4)
call_3976 = relay.TupleGetItem(func_3661_call(relay.reshape(const_3973.astype('float64'), [1, 450]), relay.reshape(const_3974.astype('uint64'), [90,]), relay.reshape(var_3975.astype('int64'), [198,]), ), 4)
func_2983_call = mod.get_global_var('func_2983')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_3993 = relay.TupleGetItem(func_2983_call(), 0)
call_3994 = relay.TupleGetItem(func_2985_call(), 0)
bop_3999 = relay.add(const_3964.astype('uint32'), var_3975.astype('uint32')) # shape=(198, 315)
output = relay.Tuple([uop_3956,call_3963,const_3965,call_3968,call_3972,const_3973,const_3974,call_3993,bop_3999,])
output2 = relay.Tuple([uop_3958,call_3966,const_3965,call_3969,call_3976,const_3973,const_3974,call_3994,bop_3999,])
func_4003 = relay.Function([var_3975,], output)
mod['func_4003'] = func_4003
mod = relay.transform.InferType()(mod)
mutated_mod['func_4003'] = func_4003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4004 = relay.var("var_4004", dtype = "int64", shape = (198, 1))#candidate|4004|(198, 1)|var|int64
func_4003_call = mutated_mod.get_global_var('func_4003')
call_4005 = func_4003_call(var_4004)
output = call_4005
func_4006 = relay.Function([var_4004], output)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3911_call = mod.get_global_var('func_3911')
func_3912_call = mutated_mod.get_global_var('func_3912')
call_4027 = relay.TupleGetItem(func_3911_call(), 0)
call_4028 = relay.TupleGetItem(func_3912_call(), 0)
func_2255_call = mod.get_global_var('func_2255')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_4044 = relay.TupleGetItem(func_2255_call(), 0)
call_4045 = relay.TupleGetItem(func_2257_call(), 0)
output = relay.Tuple([call_4027,call_4044,])
output2 = relay.Tuple([call_4028,call_4045,])
func_4051 = relay.Function([], output)
mod['func_4051'] = func_4051
mod = relay.transform.InferType()(mod)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mutated_mod.get_global_var('func_4051')
call_4052 = func_4051_call()
output = call_4052
func_4053 = relay.Function([], output)
mutated_mod['func_4053'] = func_4053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2983_call = mod.get_global_var('func_2983')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_4071 = relay.TupleGetItem(func_2983_call(), 0)
call_4072 = relay.TupleGetItem(func_2985_call(), 0)
output = call_4071
output2 = call_4072
func_4073 = relay.Function([], output)
mod['func_4073'] = func_4073
mod = relay.transform.InferType()(mod)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4073_call = mutated_mod.get_global_var('func_4073')
call_4074 = func_4073_call()
output = call_4074
func_4075 = relay.Function([], output)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mod.get_global_var('func_3511')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_4095 = relay.TupleGetItem(func_3511_call(), 0)
call_4096 = relay.TupleGetItem(func_3513_call(), 0)
output = call_4095
output2 = call_4096
func_4101 = relay.Function([], output)
mod['func_4101'] = func_4101
mod = relay.transform.InferType()(mod)
output = func_4101()
func_4102 = relay.Function([], output)
mutated_mod['func_4102'] = func_4102
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4112 = relay.const([[[4,-2],[1,-8],[-10,-2],[4,-8],[-2,-4],[4,9],[3,7],[-7,3],[-10,-8],[9,-3],[-6,4],[2,3],[-10,-3],[10,10],[-2,-7]],[[-1,-10],[3,1],[6,5],[-8,-2],[-10,-6],[-1,5],[-3,-7],[4,-5],[4,8],[-7,-3],[3,-7],[-4,-3],[3,7],[10,-7],[8,9]],[[-10,9],[-4,-1],[-5,6],[-10,-3],[1,1],[7,9],[-1,-10],[2,1],[8,6],[-6,-2],[1,1],[10,-8],[-9,-6],[8,-4],[6,5]],[[5,-10],[7,-6],[-2,4],[-8,-7],[-10,-1],[5,-5],[-5,-1],[3,8],[6,-3],[-5,6],[7,3],[4,4],[-6,-2],[4,-5],[4,-9]],[[5,-7],[7,-4],[6,4],[-9,-9],[-8,8],[9,6],[-7,2],[10,-10],[-9,8],[6,-2],[1,8],[-2,4],[1,5],[-9,-3],[3,-10]],[[7,10],[7,-3],[9,7],[-9,1],[-5,3],[-4,-8],[-1,-1],[-6,-9],[-1,6],[6,-10],[5,8],[-4,9],[-3,-5],[-3,10],[-4,10]],[[2,-3],[-8,-10],[10,-3],[1,3],[10,7],[4,-10],[7,-1],[-3,-2],[-10,-7],[-6,5],[8,3],[9,7],[5,3],[-5,8],[-3,4]],[[-2,10],[-1,-10],[-5,-3],[5,4],[-1,5],[4,7],[1,1],[6,1],[-2,-8],[7,10],[-5,4],[-8,-3],[-9,6],[6,-3],[9,-2]],[[-1,-1],[-1,6],[8,-1],[10,2],[6,-8],[6,8],[-7,9],[-7,1],[4,-1],[-4,5],[4,7],[-1,-5],[-6,2],[6,4],[-3,1]]], dtype = "int8")#candidate|4112|(9, 15, 2)|const|int8
const_4113 = relay.const([[[1,8],[-5,-8],[8,-7],[7,-7],[-7,-4],[-7,-8],[-9,-2],[-2,5],[-4,9],[5,-4],[9,10],[-7,-2],[3,-5],[-1,1],[-5,1]],[[1,-3],[8,8],[-1,10],[6,-7],[8,7],[-5,2],[-5,-8],[-5,10],[-6,2],[-6,9],[3,-1],[-9,3],[-8,-9],[-3,3],[-5,10]],[[1,-5],[-4,-10],[7,10],[-1,2],[9,-9],[6,-10],[-10,-8],[-3,4],[-10,-10],[6,-5],[-3,7],[-7,-6],[-4,1],[-5,-8],[-5,2]],[[9,-3],[-5,-3],[7,5],[4,6],[3,-8],[-8,-7],[-2,-10],[3,9],[5,1],[9,2],[4,7],[-1,1],[-4,-1],[10,7],[-4,2]],[[-8,1],[5,5],[8,9],[5,3],[-9,-2],[-3,-5],[-2,6],[-9,5],[-9,1],[8,7],[3,9],[-4,-6],[5,3],[-4,3],[-1,3]],[[-9,-5],[3,-2],[2,-7],[7,-3],[-6,-1],[-8,3],[5,9],[6,5],[-10,-4],[8,4],[-7,-7],[8,-5],[-10,7],[3,1],[7,3]],[[1,1],[-10,-6],[4,10],[-2,-6],[-8,7],[7,7],[6,-7],[9,-8],[-10,4],[5,2],[-10,1],[-1,4],[-9,-7],[-3,-8],[2,1]],[[7,-2],[8,1],[-5,-5],[5,-7],[-4,-6],[-2,-9],[7,3],[3,3],[-5,9],[2,-9],[10,2],[-9,-4],[1,-3],[-4,7],[2,-3]],[[6,-6],[-2,4],[-2,-10],[6,-2],[2,5],[-7,-6],[5,-6],[-3,-1],[-6,2],[2,1],[9,-8],[5,10],[-7,3],[-5,9],[-2,6]]], dtype = "int8")#candidate|4113|(9, 15, 2)|const|int8
bop_4114 = relay.greater_equal(const_4112.astype('bool'), relay.reshape(const_4113.astype('bool'), relay.shape_of(const_4112))) # shape=(9, 15, 2)
func_2965_call = mod.get_global_var('func_2965')
func_2968_call = mutated_mod.get_global_var('func_2968')
const_4120 = relay.const([6.951058,9.391774,-0.622980,9.676899,-9.181600,-3.453849,1.115827,-5.718799,-1.211247,-9.646784,-3.415179,8.468073,-5.905845,-1.922913,-3.447107,-9.979566,4.086828,-5.640761,0.169589,3.013131,9.805444,-5.583811,-9.823457,6.286881,7.262418,-1.929671,2.683577,-6.811698,1.613027,2.898364,-9.178681,1.969197,-4.565545,-3.930136,3.975743,3.502280,0.298474,6.896733,-9.054976,-1.364043,3.612863,-2.211610,-4.234142,-1.731001,4.059575,-9.983223,1.240872,6.199963,3.618236,0.919908,2.446996,5.187090,-4.741570,2.709069,0.348812,-0.335142,-9.353611,3.400454,9.652411,-9.245500,-7.477504,5.645466,5.456964,5.784825,-4.227661,4.669434,1.305184,-0.509782,-6.003646,-3.295196,0.797433,-9.387685,1.181531,3.321674,9.967793,3.340300,-4.005819,6.346575,2.762582,-5.144441,2.127750,-5.681489,-4.254320,4.459890,-9.622661,-7.919109,-0.382689,8.966161,-7.960472,4.226997,-6.473773,4.824664,4.496013,-8.362639,9.182565,-2.942145,0.493508,9.766401,0.200992,-4.833228,7.728848,5.477750,2.185465,1.717648,3.924224,2.462065,-3.748512,-4.579367,2.139368,-4.001723,1.478603,2.522739,6.822140,-6.056510,9.146177,-5.278024,1.417420,3.893697,-2.918362,0.810879,9.178848,-4.846027,7.496620,2.824257,5.097816,-4.654850,-4.733158,2.501835,-3.707419,-2.268480,-9.526100,-3.313998,-9.106365,-0.649587,0.169299,5.138297,-4.009749,-5.025410,-4.560275,-6.308338,5.191275,3.877105,0.001820,-4.466452,-4.949640,3.463483,5.741636,5.111212,2.874469,5.693829,5.663461,2.483540,-3.436295,5.181971,5.597301,-8.872703,-9.820032,-4.839189,5.960056,-1.050377,7.344268,-2.253180,0.594359,8.283826,-3.451858,0.019084,9.986534,2.460230,-4.674652,-7.238909,9.025392,7.967932,-1.606228,4.767074,-9.610024,-5.381244,7.551899,-3.345803,-5.482876,-4.309494,-0.785728,-8.605281,-1.006878,6.782610,-8.764826,6.491272,4.267287,-0.385135,-2.735238,9.227256,7.597479,8.407167,-2.051093,7.434239,6.128051,6.370711,-2.643289,5.827348,-0.196804,6.783366,-5.385402,-4.644073,7.597724,-3.006912,-8.614618,-3.037151,3.893799,-1.908115,-9.468098,-3.002740,4.329014,1.143887,6.719458,2.232581,-7.773236,-0.594685,1.929893,-4.710925,9.584948,-4.393039,-2.025582,4.188931,-2.745250,4.252179,-7.845049,-3.294610,-6.823282,8.374161,-7.667692,2.433046,6.904908,-8.431294,-7.793602,-0.694568,0.742511,9.924726,2.882321,9.170782,-9.156419,-7.319376,-2.693891,2.480735,1.941082,-9.983486,1.024762,-4.751694,4.052330,8.763524,6.781988,-9.301274,-9.225380,-2.581619,-6.495178,-7.600070,-8.574683,1.160368,5.229997,1.537313,7.417572,0.951894,6.770472,-7.865145,-8.503597,-2.950848,0.677909,-7.043773,-8.670032,3.770680,-3.045776,-2.261703,0.978607,2.406362,-6.589633,8.918421,-8.792738,-9.414802,-6.390538,-8.854053,-3.798575,-6.205954,2.147547,9.492997,0.534216,1.480161,-4.917952,-6.769619,4.733540,9.441074,6.101615,-3.700607,5.243568,1.003029,6.615193,-0.151512,8.580746,8.355249,9.231298,-9.945055,9.290656,-1.694656,1.391599,1.171492,-8.758783,-1.168457,1.518222,0.162801,8.466955,-7.526785,-9.153867,-4.388698,7.913273,7.961576,7.363231,5.147438,5.857798,-5.783056,3.780123,1.107211,-9.511029,5.986864,-8.788019,-8.613874,4.185707,-5.199260,5.605202,6.357036,-0.949019,5.930027,2.036461,3.086975,-1.469043,9.571285,5.406434,5.135346,1.924259,-4.856835,9.056792,7.455602,3.983638,8.836048,0.356559,-9.454792,1.329023,4.616143,-2.901276,3.604666,-5.697255,-2.173251,3.760667,-0.929979,-3.837675,6.195497,3.507707,7.516810,-7.052903,-1.915345,7.159159,-3.395430,-5.659396,8.700831,-3.718422,-1.141360,-4.558564,-1.659317,-4.190165,-1.189332,8.697897,3.093560,-4.427650,-8.877686,3.125766,-7.999902,2.210013,1.285269,-3.565662,-7.621114,3.543676,-6.803663,-3.170279,6.049849,4.422700,8.856275,2.840525,9.761940,1.202749,2.610229,-9.710549,-5.165503,-8.896602,-6.396733,-4.865889,6.458950,2.196054,6.595313,-4.455548,-3.375037,-6.932983,1.940466,-3.046474,-6.614330,-2.898305,-5.699631,8.169470,-1.763510,-4.276438,5.714921,6.493635,-3.847054,-1.297561,-6.235628,9.440419,-5.661735,7.327043,1.692657,-1.930021,4.431997,4.689217,-8.928510,-8.643021,-7.930542,7.182406,-6.604486,-0.929987,6.350336,-0.973746,-9.769545,-4.917336,-0.828928,-9.362558,-0.886573,4.761337,2.030408,3.568005,7.335788,-0.928179,7.320891,4.947824,-5.176056,-5.026088,-7.792633,-6.236855,-1.252911,5.506196,-7.741794,3.140522,2.675781,-7.386513,2.644652,-0.829287,-9.783138,4.118422,-7.151533,9.158638,-1.925894,-5.798930,-6.116637,8.438263,2.065906,6.556667,-8.062329,-3.716250,2.523891,-3.693260,1.234199,-6.938842,6.955042,9.635721,-3.910411,2.361973,-8.414592,-2.953169,-0.007506,-1.501272,-3.898965,6.976202,-7.255126,-9.550583,-6.913279,-9.526688,7.304998,0.637874,-0.467801,-6.941742,4.751613,-0.961444,4.108460,1.657383,-2.983870,-1.311383,1.870774,-2.655237,7.329939,-6.269330,9.407888,2.504920,8.618121,-2.722495,6.654701,-6.665137,-0.794486,0.902985,6.766240,3.048131,-9.607350,4.040773,5.944473,7.604552,-0.536397,-4.527562,-8.429059,5.917768,8.443262,-8.438431,-7.422997,3.551583,3.855038,0.545601,4.226841,-6.266016,-5.585301,-7.348103,4.329654,-7.225408,9.660956,-6.290352,1.002555,3.445260,9.946483,2.591698,-2.614433,-6.958283,7.848762,2.759790,-6.541430,-8.480258,9.398620,-2.417501,-2.942765,-8.555520,0.561020,-4.610210,-7.466507,3.757390,2.322498,-7.356324,-7.022350,5.567023,-0.683949,-1.537494,-4.140794,3.051911,2.922135,2.330292,-8.651632,6.872810,-0.777166,-9.197790,3.223541,-9.320725,7.891832,6.860699,3.562936,4.946568,7.276119,-6.829395,0.953565,6.367237,0.345942,-6.892918,-5.018469,0.087850,7.148508,-2.389274,-7.598583,8.194088,9.943848,0.551047,1.559292,-6.616718,-4.079803,4.544777,-0.943748,2.540063,4.362875,4.798695,0.538106,-1.259874,5.517371,-3.233203,4.083508,7.136880,-4.206888,6.643880,7.400218,-3.594065,-7.865822,9.742802,-4.308149,-6.020643,5.934745,6.932526,-8.551324,3.149469,-3.595539,8.428067,-8.392484,-6.224103,0.531815,-0.745705,8.100671,7.366826,-7.029831,-4.124317,1.982172,-4.248432,8.078999,4.767162,8.332273,4.328449,-4.095308,0.192727,7.746492,3.010100,3.541943,7.050461,-9.506123,-5.433140,-8.690055,9.391815,9.804741,-9.793131,-2.519112,0.999600,-0.163477,2.040768,6.914136,2.706064,2.385670,-8.518024,3.351604,3.538671,-6.263949,-5.772914,7.856675,-3.517596,-4.505605,7.515907,-0.837693,-1.953795,6.580188,-1.636440,2.788315,1.286384,-7.952399,1.975401,4.684460,-4.698342,2.788128,-8.271552,-3.392549,9.717783,4.890760,0.336991,5.310424,3.421597,-6.917374,-4.505874,3.343604,-5.357405,7.583247,5.369884,-1.993064,-4.689584,8.352146,-1.885224,5.265776,-8.612682,-5.877950,-8.434280,4.897473,-1.471402,4.162770,7.849326,-8.319033,8.219862,-0.504307,9.678517,-8.993334,-9.938560,-1.633758,1.395982,-6.938296,9.453522,-2.212866,3.478699,2.279687,9.277430,-5.071050,9.037214,-2.072423,-5.175455,-8.313009,9.243585,9.098158,-8.363960,6.881341,0.475655,4.099993,-9.302834,-7.797058,2.478186,-1.023322,0.504713,-4.973683,6.205134,7.709507,8.135068,3.327951,-9.791997,-9.326030], dtype = "float32")#candidate|4120|(720,)|const|float32
call_4119 = relay.TupleGetItem(func_2965_call(relay.reshape(const_4120.astype('float32'), [720,])), 10)
call_4121 = relay.TupleGetItem(func_2968_call(relay.reshape(const_4120.astype('float32'), [720,])), 10)
output = relay.Tuple([bop_4114,call_4119,const_4120,])
output2 = relay.Tuple([bop_4114,call_4121,const_4120,])
func_4125 = relay.Function([], output)
mod['func_4125'] = func_4125
mod = relay.transform.InferType()(mod)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mutated_mod.get_global_var('func_4125')
call_4126 = func_4125_call()
output = call_4126
func_4127 = relay.Function([], output)
mutated_mod['func_4127'] = func_4127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3591_call = mod.get_global_var('func_3591')
func_3592_call = mutated_mod.get_global_var('func_3592')
call_4156 = relay.TupleGetItem(func_3591_call(), 1)
call_4157 = relay.TupleGetItem(func_3592_call(), 1)
func_759_call = mod.get_global_var('func_759')
func_761_call = mutated_mod.get_global_var('func_761')
const_4159 = relay.const([[-5],[7],[-9],[7],[9],[3],[-6],[-2],[-7],[7],[-1],[6],[10],[10],[7],[-5],[7],[2],[-8],[-4],[-8],[6],[5],[-4],[-9],[2],[2],[3],[-1],[-3],[3],[1],[-7],[7],[-1],[4],[-8],[-1],[8],[-5],[-6],[10],[-8],[9],[-6],[-8],[-10],[6],[-1],[7],[-4],[9],[-1],[4],[6],[8],[-6],[-8],[-1],[-4],[9],[3],[-10],[-9],[4],[2],[6],[1],[-4],[7],[-4],[-1],[-5],[-7],[-6],[-1],[-2],[6],[-7],[-6],[8],[-10],[-1],[-2],[-6],[6],[5],[-2],[-6],[5],[1],[-7],[-4],[6],[8],[2],[-10],[-10],[3],[-8],[2],[1],[-9],[8],[-4],[-7],[2],[-8],[7],[-6],[8],[10],[-2],[8],[6],[-6],[-10],[-6],[4],[4],[8],[4],[7],[4],[8],[10],[-10],[3],[-5],[-9],[9],[-7],[-6],[7],[6],[9],[7],[2],[5],[-8],[10],[8],[-10],[-3],[-2],[-4],[-10],[9],[4],[8],[-9],[6],[10],[10],[5],[-10],[-7],[6],[1],[-10],[2],[3],[5],[-1],[-8],[-2],[6],[5],[-7],[-1],[4],[-9],[2],[-6],[-5],[-6],[-2],[-10],[-3],[-7],[10],[9],[7],[-1],[-10],[9],[6],[5],[-3],[10],[7],[4],[7],[6],[7],[-10],[-5],[2],[-7],[-8],[-5],[-1],[7],[8],[-6],[10],[4],[-5],[-2],[-2],[6],[-5],[-3],[5],[-7],[-8],[-2],[-3],[4],[-10],[10],[8],[-6],[7],[-5],[6],[-1],[6],[-7],[5],[-6],[8],[2],[8],[3],[-10],[8],[8],[-10],[1],[-6],[-1],[-7],[4],[-8],[7],[1],[-1],[-7],[1],[-6],[4],[7],[-9],[1],[-6],[-8],[-5],[-4],[8],[7],[5],[1],[1],[2],[9],[-10],[-4],[-6],[-6],[5],[-3],[9],[-8],[8],[-4],[-1],[5],[4],[1],[9],[-5],[-4],[-10],[4],[-7],[-9],[1],[-10],[-2],[7],[7],[4],[4],[-1],[3],[-7],[-1],[-7],[-3],[-8],[-9],[-1],[-5],[-3],[3],[-3],[-10],[4],[5],[10],[-5],[6],[8],[-6],[6],[1],[1],[8],[-5],[2],[-1],[-10],[-10],[-6],[10],[-2],[-3],[-3],[-4],[1],[-5],[7],[-6],[-1],[-6],[-1],[-8],[1],[-7],[-2],[10],[-4],[-4],[3],[-7],[8],[-9],[-7],[10],[8],[-3],[-6],[-3],[-8],[1],[-7],[-5],[6],[-9],[-7],[-5],[8],[10],[1],[-7],[7],[-1],[10],[9],[2],[7],[-2],[2],[2],[-7],[8],[6],[8],[-5],[-9],[9],[2],[-10],[-1],[10],[8],[5],[-4],[8],[-8],[6],[6],[4],[-9],[2],[-1],[3],[-8],[8],[9],[-5],[7],[-9],[-6],[-6],[-1],[-2],[4],[1],[-7],[1],[-4],[3],[-7],[-3],[9],[5],[9],[9],[-10],[-2],[9],[8],[-10],[-9],[1],[-6],[6],[9],[8],[-2],[-2],[-5],[3],[-6],[10],[2],[10],[3],[8],[-8],[3],[6],[-3],[3],[-8],[10],[-3],[9],[-10],[-9],[-3],[-10],[-2],[4],[6],[-2],[7],[-6],[-2],[-2],[7],[-10],[-9],[-8],[-6],[-3],[-9],[-1],[-5],[-2],[-6],[-10],[10],[-1],[-7],[5],[-7],[6],[-4],[8],[1],[-6],[-4],[1],[1],[-2],[6],[9],[-8],[-10],[-5],[10],[-10],[9],[9],[5],[-9],[-10],[9],[4],[-3],[-6],[-6],[6],[-7],[-10],[-5],[-6],[5],[10],[-7],[3],[5],[10],[-5],[1],[-1],[-8],[4],[-3],[-4],[5],[3],[4],[-1],[1],[-9],[-3],[-10],[-8],[7],[4],[8],[9],[9],[5],[6],[5],[-3],[7],[-5],[-1],[5],[-9],[-7],[1],[-8],[-6],[-10],[-8],[-8],[4],[-5],[3],[-10],[-4],[-9],[9],[9],[8],[-7],[-1],[-7],[-9],[1],[-5],[2],[-3],[10],[5],[-6],[-5],[3],[10],[4],[-7],[-8],[-3],[-5],[-1],[-2],[5],[8],[1],[6],[8],[-8],[-9],[-6],[3],[7],[-10],[8],[2],[-6],[10],[-1],[-3],[3],[-7],[-3],[-2],[-9],[-10],[-10],[-7],[-2],[-5],[-10],[4],[10],[-5],[-8],[-2],[-2],[3],[5],[4],[6],[10],[-8],[-6],[2],[3],[-8],[10],[-2],[1],[-1],[5],[1],[1],[-1],[9],[-1],[-7],[6],[9],[5],[-1],[-10],[1],[6],[-2],[-2],[-2],[-2],[10],[-8],[-5],[9],[-7],[-5],[2],[10],[-3],[4],[2],[5],[-7],[-10],[-3],[-2],[10],[-1],[10],[-8],[5],[-5],[5],[10],[-8],[1],[6],[-2],[6],[-4],[6],[9],[7],[-10],[-2],[-5],[-2],[-3],[8],[3],[10],[3],[-2],[9],[-9],[-7],[10],[-1],[-8],[5],[7],[-8],[-10],[4],[-6],[3],[-2],[4],[-5],[4],[-7],[-9],[8],[3],[10],[5],[-7],[6],[6],[5],[-8],[-10],[9],[8],[10],[-8],[-4],[-3],[6],[8],[5],[5],[8],[9],[-3],[6],[7],[6],[1],[-7],[-8],[7],[1],[-2],[-9],[7],[4],[7],[-3],[-6],[3],[8],[7],[5],[7],[-8],[-7],[7],[-4],[-9],[9],[-6],[-5],[-7],[-1],[3],[-4],[-5],[6],[-10],[2],[-8],[-2],[6],[-3],[-10],[10],[5],[8],[4],[-4],[3],[-9],[-10],[8],[9],[-9],[-8],[-1],[-8],[1],[7],[3],[5],[-6],[3],[5],[8],[6],[-10],[-10],[-4],[-6],[-10],[7],[1],[6],[-7],[10],[2],[-2],[-5],[-3],[-2],[3],[-3],[3],[-1],[-8],[-5],[-1],[-2],[4],[7],[3],[9],[-6],[-4],[-7],[8],[-10],[-4],[8],[1],[-8],[-2],[-3],[-7],[-6],[-1],[6],[6],[-4],[1],[-7],[-3]], dtype = "uint16")#candidate|4159|(845, 1)|const|uint16
call_4158 = relay.TupleGetItem(func_759_call(relay.reshape(const_4159.astype('uint16'), [13, 13, 5])), 2)
call_4160 = relay.TupleGetItem(func_761_call(relay.reshape(const_4159.astype('uint16'), [13, 13, 5])), 2)
uop_4174 = relay.sinh(call_4158.astype('float32')) # shape=(99, 2)
uop_4176 = relay.sinh(call_4160.astype('float32')) # shape=(99, 2)
output = relay.Tuple([call_4156,const_4159,uop_4174,])
output2 = relay.Tuple([call_4157,const_4159,uop_4176,])
func_4185 = relay.Function([], output)
mod['func_4185'] = func_4185
mod = relay.transform.InferType()(mod)
mutated_mod['func_4185'] = func_4185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4185_call = mutated_mod.get_global_var('func_4185')
call_4186 = func_4185_call()
output = call_4186
func_4187 = relay.Function([], output)
mutated_mod['func_4187'] = func_4187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2160_call = mutated_mod.get_global_var('func_2160')
call_4211 = relay.TupleGetItem(func_2158_call(), 1)
call_4212 = relay.TupleGetItem(func_2160_call(), 1)
output = call_4211
output2 = call_4212
func_4217 = relay.Function([], output)
mod['func_4217'] = func_4217
mod = relay.transform.InferType()(mod)
mutated_mod['func_4217'] = func_4217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4217_call = mutated_mod.get_global_var('func_4217')
call_4218 = func_4217_call()
output = call_4218
func_4219 = relay.Function([], output)
mutated_mod['func_4219'] = func_4219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_4247 = func_3339_call()
call_4248 = func_3339_call()
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_4266 = func_2282_call()
call_4267 = func_2282_call()
func_2748_call = mod.get_global_var('func_2748')
func_2749_call = mutated_mod.get_global_var('func_2749')
call_4268 = func_2748_call()
call_4269 = func_2748_call()
output = relay.Tuple([call_4247,call_4266,call_4268,])
output2 = relay.Tuple([call_4248,call_4267,call_4269,])
func_4272 = relay.Function([], output)
mod['func_4272'] = func_4272
mod = relay.transform.InferType()(mod)
output = func_4272()
func_4273 = relay.Function([], output)
mutated_mod['func_4273'] = func_4273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mod.get_global_var('func_3478')
func_3479_call = mutated_mod.get_global_var('func_3479')
call_4300 = relay.TupleGetItem(func_3478_call(), 0)
call_4301 = relay.TupleGetItem(func_3479_call(), 0)
uop_4302 = relay.rsqrt(call_4300.astype('float32')) # shape=(12, 15, 4)
uop_4304 = relay.rsqrt(call_4301.astype('float32')) # shape=(12, 15, 4)
var_4307 = relay.var("var_4307", dtype = "float32", shape = (12, 15, 4))#candidate|4307|(12, 15, 4)|var|float32
bop_4308 = relay.floor_mod(call_4300.astype('float32'), relay.reshape(var_4307.astype('float32'), relay.shape_of(call_4300))) # shape=(12, 15, 4)
bop_4311 = relay.floor_mod(call_4301.astype('float32'), relay.reshape(var_4307.astype('float32'), relay.shape_of(call_4301))) # shape=(12, 15, 4)
func_2762_call = mod.get_global_var('func_2762')
func_2763_call = mutated_mod.get_global_var('func_2763')
call_4312 = func_2762_call()
call_4313 = func_2762_call()
func_4217_call = mod.get_global_var('func_4217')
func_4219_call = mutated_mod.get_global_var('func_4219')
call_4319 = func_4217_call()
call_4320 = func_4217_call()
func_174_call = mod.get_global_var('func_174')
func_176_call = mutated_mod.get_global_var('func_176')
var_4329 = relay.var("var_4329", dtype = "int8", shape = (1, 1404))#candidate|4329|(1, 1404)|var|int8
call_4328 = func_174_call(relay.reshape(var_4329.astype('int8'), [12, 9, 13]))
call_4330 = func_174_call(relay.reshape(var_4329.astype('int8'), [12, 9, 13]))
output = relay.Tuple([uop_4302,bop_4308,call_4312,call_4319,call_4328,var_4329,])
output2 = relay.Tuple([uop_4304,bop_4311,call_4313,call_4320,call_4330,var_4329,])
func_4331 = relay.Function([var_4307,var_4329,], output)
mod['func_4331'] = func_4331
mod = relay.transform.InferType()(mod)
mutated_mod['func_4331'] = func_4331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4331_call = mutated_mod.get_global_var('func_4331')
var_4333 = relay.var("var_4333", dtype = "float32", shape = (12, 15, 4))#candidate|4333|(12, 15, 4)|var|float32
var_4334 = relay.var("var_4334", dtype = "int8", shape = (1, 1404))#candidate|4334|(1, 1404)|var|int8
call_4332 = func_4331_call(var_4333,var_4334,)
output = call_4332
func_4335 = relay.Function([var_4333,var_4334,], output)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2255_call = mod.get_global_var('func_2255')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_4352 = relay.TupleGetItem(func_2255_call(), 0)
call_4353 = relay.TupleGetItem(func_2257_call(), 0)
func_2421_call = mod.get_global_var('func_2421')
func_2425_call = mutated_mod.get_global_var('func_2425')
const_4357 = relay.const([9.013343,-7.499861,8.035872,-0.474425,0.486854,-5.026129,-0.530472,-6.895729,7.855117,9.926445,-4.354264,-8.612397,4.165916,-5.858763,-3.505845,1.107710,-3.901739,-1.708180,9.732569,-4.242096,-6.585401,1.881447,-7.366744,-5.021255,-7.934961,8.546265,-1.610016,-4.478484,7.252251,6.066077,-5.033794,6.308660,-7.924594,-5.735356,-6.628953,-5.804089,-3.766705,4.420953,6.796844,-2.630415,4.407126,9.585171,8.559592,-2.366335,-3.050240,-0.149160,-4.648659,7.863462,2.160148,-3.827565,-1.229973,9.800474,-2.418147,-0.099029,-1.850833,5.739472,-5.663106,7.441360,-6.206265,9.555441,2.844804,-9.354382,3.778618,-0.016956,7.393954,5.042779,-2.831676,-0.472015,2.381642,-9.734105,3.407887,-8.720854,-9.457726,5.318307,8.192373,5.792392,6.017234,-7.882019,-5.839426,0.947537,-0.794664,2.117182,0.975349,1.540695,-8.576822,-7.466963,-2.349730,-4.915483,9.278126,0.100953,-8.197059,4.414801,-4.040116,-7.821741,5.745522,2.294135,-6.810083,-1.830118,-9.036345,5.998638,2.523643,1.226857,-5.977998,8.493007,2.665793,-6.910322,7.745455,5.378459,4.672769,-3.424490,-3.287530,-4.501790,9.981773,-8.299996,3.419453,-8.045208,-8.085479,-5.638473,7.890668,-8.843495,-8.876339,-8.344428,-1.910647,-5.284901,-6.839755,-1.081800,-7.253725,1.169723,4.192653,4.791391,4.215370,-6.747847,8.306864,-0.317470,-6.694879,-8.586270,3.417777,-6.724723,-4.838245,-7.493920,-5.497323,3.345609,8.049882,-6.791307,1.632077,6.917909,1.981459,-3.366222,-8.196049,-3.919561,3.670031,-2.162217,8.648951,-9.285835,3.461713,-4.189311,-8.447732,-5.049985,5.492650,-2.820308,-2.196736,9.150744,4.337907,3.805760,6.385389,-5.925603,-1.656142,9.341050,-4.945881,7.319012,-8.419596,7.718545,-8.532672,9.606606,-4.758848,-6.916327,4.140651,-3.605748,9.844549,8.654451,0.337400,3.549817,-7.940886,-2.543843,-4.126041,-1.203178,8.568519,1.039324,2.699679,4.328439,8.158562,-3.376048,-6.254189,2.244270,-0.608004,-7.576236,6.069555,5.355599,-0.838720,-5.777791,-4.383054,-4.963447,-7.766885,1.355462,-4.741374,9.898658,-4.926041,-6.914146,-7.802906,-0.426937,-1.998419,9.817768,-2.854287,2.277167,-1.060641,4.223059,-8.687385,-5.720161,-2.617125,-2.270275,7.297033,-4.240082,-1.523642,-8.415121,-4.301163,8.874344,5.412124,-6.845460,-3.827910,-3.249068,7.700390,8.670812,4.320272,-8.731437,6.350337,-7.819733,-6.604419,-0.998539,-1.627618,-8.294763,4.643533,1.316657,-8.157447,-8.662681,-6.045643,0.419988,-6.322490,1.721892,-9.809401,6.468640,3.250523,-1.758276,-8.806086,-2.653201,8.419035,-6.150317,-5.000675,6.982423,7.331997,3.184006,9.661268,-0.426668,6.220534,5.042025,0.145187,2.921649,9.385462,9.270629,-9.627029,-5.716894,-1.262879,-6.305573,-7.864872,2.075831,9.072280,1.772706,9.065514,6.764164,-1.520190,-4.001450,5.956083,-1.340077,-4.376371,3.511717,8.769978,-4.568776,-8.475467,-6.843413,1.088832,-4.812020,8.629089,3.454058,7.706178,7.027676,3.743662,-7.672432,-8.316182,3.254266,-0.225464,7.424355,-7.956466,3.369924,6.370744,-0.535459,5.558377,1.981962,-4.160670,2.283340,9.550112,8.050124,-5.872726,-3.429683,-1.086624,0.086109,-4.577901], dtype = "float32")#candidate|4357|(315,)|const|float32
var_4358 = relay.var("var_4358", dtype = "uint16", shape = (845,))#candidate|4358|(845,)|var|uint16
const_4359 = relay.const([[-0.241323,-1.781923],[6.729043,0.668127],[-2.565971,8.572039],[-5.500782,5.369962],[-8.138713,0.326702],[-8.441674,0.718450],[0.549195,-1.068921],[-6.705985,5.236925],[-9.210872,-9.423878],[4.487278,6.815716],[-7.235405,-1.995890],[-9.082474,-0.868856],[6.308303,0.290988],[5.302742,4.420724],[2.907862,-4.831935],[9.760205,-4.888305],[2.738776,1.185435],[-3.799398,1.746973],[5.502889,1.128810],[3.147893,-3.951162],[2.944600,-9.409777],[5.580420,1.923372],[5.307437,-3.983977],[8.931502,5.745742],[8.651782,3.809710],[4.849775,5.762055],[4.015231,-1.658560],[-2.129281,5.305626],[-2.791732,-0.430904],[5.421745,-8.913081],[-8.385966,2.029920],[2.953507,-5.805181],[3.838587,7.849560],[-2.777910,4.944436],[2.954303,3.077205],[8.628322,-0.018674],[-9.062800,8.541066],[-8.536012,1.941317],[-8.563246,8.333288],[2.272073,9.163999],[6.483619,8.387816],[2.772819,9.402071],[-6.920841,-0.702636],[1.926557,3.142051],[0.913163,8.801954],[-2.522804,-4.208350],[4.393052,-0.046191],[-9.153091,8.735163],[-9.437758,6.782072],[-2.197605,6.252378],[2.553965,-2.584576],[-6.086180,3.409629],[-8.365500,9.785834],[2.645229,9.504837],[1.434029,3.151543],[9.358511,-4.518092],[5.232933,9.953296],[-7.497025,-5.370269],[-0.075016,9.746045],[-1.688912,7.591110],[5.790416,8.370316],[-0.143458,-8.380179],[-9.560976,2.886046],[-4.371323,-9.862060],[-6.468579,3.145792],[-8.973859,-1.376378],[-4.782491,6.538519],[-4.437281,5.614687],[8.386227,-7.533315],[-1.999014,-8.219728],[-0.454245,-4.742622],[1.228696,-3.844279],[0.327568,-1.111605],[1.726458,-0.091332],[-9.505720,-5.199389],[-8.508770,0.468144],[-3.065510,-7.615830],[-7.245384,-3.808515],[-5.979375,1.580469],[2.051173,8.403700],[-8.385851,-8.816222],[3.516612,0.442395],[-7.390922,-5.610479],[-8.159813,-3.418341],[-7.167277,8.878301],[2.787026,2.633513],[-3.054492,0.966016],[8.338044,-1.328203],[0.140859,3.775271],[-8.656643,-5.618797],[5.878804,9.288346],[-5.212737,-5.782794],[-6.873061,9.202595],[8.223254,-6.039491],[-0.288844,2.951859],[-1.648692,5.422643],[-0.602381,-3.995331],[1.328494,7.386429],[-5.501422,-0.389856],[0.023382,4.796561],[-6.569230,5.808676],[2.927238,-5.854863],[-8.943678,6.491777],[6.285048,-2.431268],[-1.603620,-1.651091],[6.086701,-6.630454],[4.274793,2.720881],[5.470283,-9.743665],[1.647652,-5.060310],[1.806259,-6.205234],[-6.258038,4.798434],[-4.425744,-3.593976],[-6.327876,0.184469],[-0.045313,1.952858],[-4.978151,-8.691157],[5.347246,-2.200619],[7.926796,-5.908555],[5.439291,-0.192275],[-7.452836,7.268881],[3.596479,8.748529],[2.634070,9.417859],[-0.867146,4.618611],[5.945216,2.233618],[-1.226172,-3.366615],[-9.684706,5.795188],[0.409818,9.576062],[7.499830,5.914038],[-9.577624,-0.247553],[0.271677,-3.054088],[7.034884,-8.513268],[6.700712,4.732471],[8.417148,6.560372],[-5.445433,6.570220],[-8.846815,-5.855261],[-6.455772,-2.235590],[-3.229179,-4.913915],[3.659792,-5.766276],[-0.473315,8.248474],[-3.628459,7.413201],[-3.140307,3.240829],[8.443201,2.791856],[6.421228,3.313959],[6.486893,5.864707],[3.588047,4.167785],[-5.672494,7.636053],[-9.032027,-5.478736],[8.583037,7.163551],[2.554760,9.213447],[0.447194,-3.284846],[-7.371234,-3.401996],[-3.285069,5.986513],[9.470811,-4.444476],[-1.453379,-2.816550],[-3.589955,8.339358],[3.574593,-9.817486],[3.685558,1.092726],[-7.756008,-7.632791],[-8.196647,-5.164471],[-7.217937,-1.758783],[-2.357534,3.362544],[-6.673373,0.895744],[-1.863289,-4.248080],[6.268562,-9.076523],[-7.420547,-1.979174],[-6.564979,5.295394],[0.281845,9.519634],[-7.022698,-6.932837],[-4.869755,6.282738],[1.523791,8.240104],[-3.502026,2.083413],[-8.607337,-8.541951],[-0.049766,3.469111],[3.219684,5.674602],[-6.100624,-3.711945],[-5.357987,9.289412],[-3.035054,2.086589],[-5.280943,-9.953752],[-4.801995,-6.428185],[8.828513,-3.621126],[1.870134,-9.930777],[-7.705765,-7.626601],[-4.802177,5.743959],[7.054367,5.891769],[-4.945805,2.703695],[-7.923377,2.551384],[-3.920983,4.755418],[-3.030850,9.489199],[-3.365643,4.323431],[0.805513,1.864875],[-4.317142,-6.887876],[-0.552759,-4.799939],[-7.201609,7.821025],[1.615677,8.950668],[-2.277773,0.994586],[-8.597018,5.213462],[6.830675,-9.059054],[-7.417948,-2.545058],[-2.354129,-4.995498],[5.941290,2.531001],[-4.462958,-6.548900],[0.126549,8.268189],[-1.044462,7.913002],[0.296695,1.495944],[0.687113,4.340384],[-6.277418,-5.924284],[-0.534416,2.819611],[8.128798,1.096066],[8.650885,7.361283],[-1.352328,-0.661677],[-6.506068,2.331959],[-6.253977,-3.965246],[-3.296692,7.681907],[0.177160,-7.415060],[-5.620337,1.161685],[-1.416536,-2.912680],[-0.617639,7.268181],[-3.177859,-5.708238],[5.368416,8.990354],[-3.953851,6.448694],[5.681671,0.347287],[-8.541993,9.324199],[2.895219,8.331647],[8.260735,5.199268],[6.640582,-5.696784],[8.454927,-5.976418],[8.258685,-2.719982],[1.967375,-7.923274],[2.810989,-2.975598],[8.234486,-4.385776],[-7.163823,4.041500],[4.991203,-8.578892],[9.102187,1.953569],[3.958857,4.755426],[7.771189,-5.510185],[4.823173,1.264120],[2.978085,-4.651925],[8.198343,9.167211],[-4.653752,-0.225379],[-3.111071,4.412691],[1.556929,-4.870504],[-0.075886,4.457533],[9.435731,5.398497],[3.461149,0.615847],[-3.770296,9.023483],[8.001662,5.809883],[6.521202,6.922686],[-8.460826,7.138945],[3.827344,-6.540823],[0.218777,6.093033],[-4.242646,4.443003],[-0.068725,-0.433833],[3.355494,-3.112258],[-3.522460,-8.539650],[0.105894,1.913017],[-1.086408,-6.352651],[-3.553577,-8.680207],[-7.539008,1.864325],[-0.505450,-2.353904],[1.278603,9.049770],[2.637170,6.058068],[4.524093,3.747540],[-9.856951,3.459491],[-5.971158,-8.207904],[-2.952194,-8.009813],[0.054373,5.290427],[0.235821,-1.796157],[-5.313503,5.509428],[5.855791,-2.067838],[-6.813074,-1.509944],[-5.769883,-8.685644],[3.613481,-5.852141],[0.464546,-5.999583],[-9.697578,-6.555748],[-9.791117,-7.368533],[-5.768781,-4.929164],[5.967373,-2.163232],[-9.418138,-1.308341],[-6.619037,6.383907],[9.694889,-5.427041],[2.764975,7.795188],[-1.346122,8.854182],[-7.643624,-0.042230],[1.881107,1.066358],[0.297977,-8.368193],[-7.868608,-9.749103],[5.535826,-9.461433],[5.543571,9.869861],[3.959670,-7.527100],[-2.680885,-3.747728],[-7.909790,0.474736],[9.517340,-9.817522],[6.396921,4.773390],[5.907818,-8.630687],[9.920632,4.069633],[6.485007,3.669908],[-8.396484,6.319559],[7.805907,9.328072],[-1.785078,5.169622],[4.022962,-5.423869],[5.169635,-7.353349],[4.796021,1.213354],[4.480718,-8.877621],[-6.406469,-1.519456],[1.529315,7.578698],[1.335026,-7.390042],[-7.031379,-4.199980],[1.848794,-6.460482],[-2.713920,5.121981],[0.334028,-9.803059],[-5.893875,-9.642615],[2.432998,5.132297],[-8.083471,3.644935],[0.809510,1.962091],[-4.096262,-5.141940],[-5.752081,-6.911391],[7.975190,-1.976548],[-5.818272,-9.451957],[2.553249,3.669141],[9.481993,-7.809168],[-2.092730,6.124637],[7.926771,8.549763],[-8.120545,-6.448175],[-5.509537,6.763475],[-3.546185,-3.860228],[3.043840,5.928090],[0.447093,9.884096],[4.499773,-0.988933],[6.954502,-0.923043],[-1.413909,-1.531479],[6.990141,1.579293],[5.770262,7.442719],[6.052574,2.349301],[-1.233771,4.537366],[5.521579,-3.415851],[-5.836988,-1.229141],[9.643986,2.300635],[-9.487917,-4.697161],[-4.753886,9.603168],[2.722562,8.836366],[4.177926,5.225810],[-7.005672,6.788551],[0.935010,-8.510502],[9.007014,3.677348],[7.749825,-6.782405],[2.682154,2.964421],[1.033397,8.549502],[-1.272551,9.547889],[3.990668,3.460944],[5.981451,-0.480756],[1.856553,5.136448],[5.821899,3.145489],[7.829689,3.349811],[-6.307608,-9.077228],[3.988209,-9.011004],[-3.364236,4.113620],[-2.007169,9.452764],[-0.971079,-6.444030],[2.415884,-3.259563],[8.510544,3.036318],[8.738722,5.111223]], dtype = "float32")#candidate|4359|(360, 2)|const|float32
call_4356 = relay.TupleGetItem(func_2421_call(relay.reshape(const_4357.astype('float32'), [15, 3, 7]), relay.reshape(var_4358.astype('uint16'), [1, 845]), relay.reshape(const_4359.astype('float32'), [720,]), ), 0)
call_4360 = relay.TupleGetItem(func_2425_call(relay.reshape(const_4357.astype('float32'), [15, 3, 7]), relay.reshape(var_4358.astype('uint16'), [1, 845]), relay.reshape(const_4359.astype('float32'), [720,]), ), 0)
func_3511_call = mod.get_global_var('func_3511')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_4363 = relay.TupleGetItem(func_3511_call(), 0)
call_4364 = relay.TupleGetItem(func_3513_call(), 0)
output = relay.Tuple([call_4352,call_4356,const_4357,var_4358,const_4359,call_4363,])
output2 = relay.Tuple([call_4353,call_4360,const_4357,var_4358,const_4359,call_4364,])
func_4368 = relay.Function([var_4358,], output)
mod['func_4368'] = func_4368
mod = relay.transform.InferType()(mod)
var_4369 = relay.var("var_4369", dtype = "uint16", shape = (845,))#candidate|4369|(845,)|var|uint16
output = func_4368(var_4369)
func_4370 = relay.Function([var_4369], output)
mutated_mod['func_4370'] = func_4370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_4395 = func_2282_call()
call_4396 = func_2282_call()
func_3014_call = mod.get_global_var('func_3014')
func_3018_call = mutated_mod.get_global_var('func_3018')
const_4398 = relay.const([-8,5,-7,-4,4,4,6,-3,-8,-4,7,8,-6,-5,7,4,-2,7,-3,-6,6,4,-7,6,7,-6,-9,6,7,-6,7,10,-10,-1,-9,-9,-6,-6,9,-8,-1,1,-1,7,-10,4,4,7,2,-6,-6,5,-9,-2,-2,-5,7,5,4,-5,7,-2,-5,7,-6,8,10,-3,-2,-7,7,7,9,3,-6,-10,10,-3,8,10,-3,-7,2,1,-6,8,4,9,-9,-9,-1,-7,-10,3,10,-3,2,7,-1,-7,9,-10,3,6,-10,-7,5,-1,6,-4,-7,-1,-8,-4,9,4,7,10,-3,-3,5,-3,4,5,8,-8,6,-6,10,-3,-1,8,1,9,-8,7,2,4,-4,8,10,-6,9,-3,2,-9,-1,3,5,-5,4,-6,2,6,3,-9,-2,-1,9,-2,-8,-5,6,-4,-2,5,1,-4,-3,2,-4,9,5,9,-4,6,9,-2,1,-7,-4,-9,-6,-1,-3,5,3,-5,5,-4,-4,10,4,-8,9,8,-10,10,1,-4], dtype = "int8")#candidate|4398|(200,)|const|int8
call_4397 = relay.TupleGetItem(func_3014_call(relay.reshape(const_4398.astype('int8'), [4, 10, 5]), relay.reshape(const_4398.astype('int8'), [4, 10, 5]), ), 0)
call_4399 = relay.TupleGetItem(func_3018_call(relay.reshape(const_4398.astype('int8'), [4, 10, 5]), relay.reshape(const_4398.astype('int8'), [4, 10, 5]), ), 0)
func_4101_call = mod.get_global_var('func_4101')
func_4102_call = mutated_mod.get_global_var('func_4102')
call_4408 = func_4101_call()
call_4409 = func_4101_call()
output = relay.Tuple([call_4395,call_4397,const_4398,call_4408,])
output2 = relay.Tuple([call_4396,call_4399,const_4398,call_4409,])
func_4423 = relay.Function([], output)
mod['func_4423'] = func_4423
mod = relay.transform.InferType()(mod)
output = func_4423()
func_4424 = relay.Function([], output)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2983_call = mod.get_global_var('func_2983')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_4454 = relay.TupleGetItem(func_2983_call(), 0)
call_4455 = relay.TupleGetItem(func_2985_call(), 0)
func_3539_call = mod.get_global_var('func_3539')
func_3540_call = mutated_mod.get_global_var('func_3540')
call_4492 = relay.TupleGetItem(func_3539_call(), 0)
call_4493 = relay.TupleGetItem(func_3540_call(), 0)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_4507 = relay.TupleGetItem(func_3171_call(), 1)
call_4508 = relay.TupleGetItem(func_3173_call(), 1)
bop_4513 = relay.greater(call_4454.astype('bool'), relay.reshape(call_4507.astype('bool'), relay.shape_of(call_4454))) # shape=(12, 15, 4)
bop_4516 = relay.greater(call_4455.astype('bool'), relay.reshape(call_4508.astype('bool'), relay.shape_of(call_4455))) # shape=(12, 15, 4)
uop_4531 = relay.tan(call_4454.astype('float32')) # shape=(12, 15, 4)
uop_4533 = relay.tan(call_4455.astype('float32')) # shape=(12, 15, 4)
output = relay.Tuple([call_4492,bop_4513,uop_4531,])
output2 = relay.Tuple([call_4493,bop_4516,uop_4533,])
func_4535 = relay.Function([], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
output = func_4535()
func_4536 = relay.Function([], output)
mutated_mod['func_4536'] = func_4536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_4559 = relay.TupleGetItem(func_3171_call(), 0)
call_4560 = relay.TupleGetItem(func_3173_call(), 0)
output = relay.Tuple([call_4559,])
output2 = relay.Tuple([call_4560,])
func_4567 = relay.Function([], output)
mod['func_4567'] = func_4567
mod = relay.transform.InferType()(mod)
mutated_mod['func_4567'] = func_4567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mutated_mod.get_global_var('func_4567')
call_4568 = func_4567_call()
output = call_4568
func_4569 = relay.Function([], output)
mutated_mod['func_4569'] = func_4569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mod.get_global_var('func_1576')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_4585 = relay.TupleGetItem(func_1576_call(), 2)
call_4586 = relay.TupleGetItem(func_1578_call(), 2)
output = call_4585
output2 = call_4586
func_4608 = relay.Function([], output)
mod['func_4608'] = func_4608
mod = relay.transform.InferType()(mod)
output = func_4608()
func_4609 = relay.Function([], output)
mutated_mod['func_4609'] = func_4609
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4646 = relay.const([[[-7.673935],[-2.187338],[4.178017],[9.771720],[9.295275],[-4.815548],[-8.109549],[-3.530087],[3.440647]],[[-7.602348],[6.767588],[-9.892608],[-0.811285],[-2.427761],[-5.991185],[0.250751],[4.874981],[6.055414]],[[-1.706726],[0.894619],[-2.308756],[9.768675],[8.452453],[2.256869],[-1.082882],[7.859285],[9.874963]],[[4.982353],[6.458836],[7.868860],[6.023948],[-6.259835],[3.390782],[7.471225],[9.949166],[6.796931]],[[-4.192221],[-4.401482],[7.567532],[9.691184],[-3.444245],[6.936875],[-9.320871],[0.970950],[-4.783588]],[[-9.564301],[-3.186473],[-3.812122],[-4.732185],[7.998132],[-3.167804],[1.842981],[-9.196433],[5.886256]]], dtype = "float32")#candidate|4646|(6, 9, 1)|const|float32
uop_4647 = relay.tan(const_4646.astype('float32')) # shape=(6, 9, 1)
output = relay.Tuple([uop_4647,])
output2 = relay.Tuple([uop_4647,])
func_4653 = relay.Function([], output)
mod['func_4653'] = func_4653
mod = relay.transform.InferType()(mod)
mutated_mod['func_4653'] = func_4653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4653_call = mutated_mod.get_global_var('func_4653')
call_4654 = func_4653_call()
output = call_4654
func_4655 = relay.Function([], output)
mutated_mod['func_4655'] = func_4655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2255_call = mod.get_global_var('func_2255')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_4680 = relay.TupleGetItem(func_2255_call(), 0)
call_4681 = relay.TupleGetItem(func_2257_call(), 0)
func_2762_call = mod.get_global_var('func_2762')
func_2763_call = mutated_mod.get_global_var('func_2763')
call_4683 = func_2762_call()
call_4684 = func_2762_call()
func_1356_call = mod.get_global_var('func_1356')
func_1359_call = mutated_mod.get_global_var('func_1359')
const_4691 = relay.const([[6,-8,7,8,3,4,-6,-10,-4,-4,5,9,4],[9,-2,5,-2,-10,-7,8,-10,6,7,-3,-7,10],[-8,7,6,6,-9,-7,6,-4,6,4,2,-5,6],[-10,4,-4,10,6,7,8,-5,-9,-2,5,-4,-7],[-9,-5,-8,-5,-6,7,-10,4,7,5,6,-2,-4],[-10,5,5,8,6,-7,-2,-2,1,-4,-1,-6,10],[8,-2,-10,-3,8,9,-1,5,8,3,6,1,-6],[10,9,-3,3,-1,8,8,-3,-5,1,-2,-9,6],[6,7,2,-5,-7,-7,-8,3,-4,3,5,-2,9],[-5,9,-6,-1,-1,8,1,6,8,-8,-9,2,-10],[3,-5,-5,3,-10,-3,1,3,9,7,-3,1,-5],[-4,4,6,-5,10,-9,-8,-1,1,4,-1,9,-10],[2,6,4,6,5,5,-1,3,-9,9,1,-10,-6],[-10,1,-9,-3,-4,-8,-5,2,-4,7,3,8,4],[3,-6,8,-4,-8,-4,10,6,-8,-3,-2,-3,4],[-5,-7,-4,4,9,-8,3,-8,6,6,-7,4,-5],[7,-5,4,-3,-8,3,-7,-6,-9,-10,7,-6,10],[9,3,10,4,1,3,10,1,3,-10,-6,7,6],[3,-7,7,-5,-10,2,-10,1,-7,3,8,9,-5],[7,-10,-6,-4,6,-6,2,7,9,7,1,3,-5],[9,9,10,6,8,2,2,3,-8,6,-9,3,7],[3,7,10,-3,-2,4,2,9,-4,-4,10,2,-9],[3,8,-7,7,-10,-10,10,5,-9,8,4,10,8],[2,-8,-2,7,8,-2,8,5,-6,-9,9,-1,7],[-8,5,-8,8,10,-6,10,10,10,6,5,10,-5],[3,5,-1,-8,-1,-3,-2,-8,9,10,-2,5,-6],[1,4,5,2,-9,5,7,-2,6,3,-2,-2,2],[-3,-3,9,6,-10,3,1,2,9,-5,-2,-7,-4],[9,-9,9,2,-4,-6,4,-1,7,-9,9,10,9],[4,-9,2,4,1,-7,7,-1,2,-10,-4,-5,10],[1,10,2,-5,-4,-8,-2,4,-9,-1,-6,8,5],[7,-5,6,6,7,1,10,-10,-6,7,-4,-2,1],[-9,8,-2,-6,1,-4,-9,5,-4,-7,-5,-9,-2],[-3,7,4,4,1,-6,-5,-10,-4,-2,1,5,-2],[-1,-5,3,9,1,-7,-5,10,-7,8,6,6,-10],[5,5,6,-6,10,8,-9,-5,1,-7,1,8,1],[9,5,6,-5,-5,8,-1,-3,10,-5,10,-4,8],[1,3,3,1,1,6,-10,-8,-6,-9,-7,3,-5],[-9,2,-4,-7,-4,1,6,5,-2,7,-1,9,2],[-10,-8,-7,-6,6,1,9,2,3,5,-4,-10,5],[1,-3,9,-5,-10,6,1,-6,-3,-8,-6,-7,-8],[8,-9,1,-8,-3,10,6,2,6,1,-4,8,3],[4,6,10,-9,-6,1,5,-3,-3,4,10,-7,-3],[-7,-4,6,-10,-9,4,-1,8,-6,-5,-7,7,-2],[-3,-8,-3,-9,7,6,-6,10,-2,-2,-3,3,-9],[-6,4,-5,-10,-3,-10,-9,-8,6,9,3,9,2],[-6,-1,7,-3,-9,6,-1,-10,3,-10,6,4,6],[-9,-5,-8,-7,-5,-8,3,-7,5,-2,-3,-6,-8],[10,8,-1,10,7,8,7,-8,2,-2,-2,8,-4],[9,-3,4,8,9,8,-7,7,1,-9,-9,-10,-1],[-8,6,-2,-3,3,10,9,3,1,4,-5,2,-2],[8,-1,-4,-10,4,7,-8,-5,4,-8,-3,8,8],[10,9,10,4,6,4,-10,9,4,-8,4,4,8],[2,5,-1,-2,9,-6,5,2,-10,-6,10,6,10],[9,-3,-3,2,7,-5,4,10,6,3,-5,-10,4],[10,7,10,-5,-2,-10,-8,-10,7,-6,5,4,-2],[3,-7,-2,-6,10,3,-9,-6,9,-9,7,-2,-2],[-5,-5,5,-8,4,1,9,6,-7,-8,7,8,-6],[-1,-8,-5,1,-1,-7,-9,1,1,-3,3,-5,4],[-8,-7,7,-5,2,1,10,-10,-3,8,-10,5,9],[7,10,-5,6,-5,9,-10,-1,-4,3,6,4,-1],[4,-10,-5,-6,-10,5,2,-9,-1,-3,1,3,-3],[1,4,4,7,2,2,-7,8,8,-2,-4,7,-5],[-7,4,7,9,-9,-9,10,-8,-9,7,-5,-9,4],[-9,-1,1,3,9,-5,9,-3,10,-2,-8,-3,8]], dtype = "uint16")#candidate|4691|(65, 13)|const|uint16
const_4692 = relay.const([-6,1,6,-10,-1,4,-2,10,1,-2,9,-1,-4,-3,2,-2,-7,-4,6,-9,8,8,-2,-1,-4,-4,-8,-1,9,7,-7,2,1,-8,3,-5,-1,-10,1,-6,8,-7,6,9,3,-1,-2,-6,-2,-1,2,-5,-6,7,-10,-2,6,-5,7,-10,-9,-1,-7,-5,9,-3,1,-5,-4,-6,-7,3,8,-8,1,5,10,-10,-5,5,2,-7,5,-1,6,7,6,9,-7,8], dtype = "uint64")#candidate|4692|(90,)|const|uint64
call_4690 = relay.TupleGetItem(func_1356_call(relay.reshape(const_4691.astype('uint16'), [1, 845]), relay.reshape(const_4692.astype('uint64'), [3, 30]), ), 2)
call_4693 = relay.TupleGetItem(func_1359_call(relay.reshape(const_4691.astype('uint16'), [1, 845]), relay.reshape(const_4692.astype('uint64'), [3, 30]), ), 2)
output = relay.Tuple([call_4680,call_4683,call_4690,const_4691,const_4692,])
output2 = relay.Tuple([call_4681,call_4684,call_4693,const_4691,const_4692,])
func_4694 = relay.Function([], output)
mod['func_4694'] = func_4694
mod = relay.transform.InferType()(mod)
mutated_mod['func_4694'] = func_4694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mutated_mod.get_global_var('func_4694')
call_4695 = func_4694_call()
output = call_4695
func_4696 = relay.Function([], output)
mutated_mod['func_4696'] = func_4696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_4713 = relay.TupleGetItem(func_1932_call(), 0)
call_4714 = relay.TupleGetItem(func_1934_call(), 0)
output = relay.Tuple([call_4713,])
output2 = relay.Tuple([call_4714,])
func_4719 = relay.Function([], output)
mod['func_4719'] = func_4719
mod = relay.transform.InferType()(mod)
output = func_4719()
func_4720 = relay.Function([], output)
mutated_mod['func_4720'] = func_4720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4272_call = mod.get_global_var('func_4272')
func_4273_call = mutated_mod.get_global_var('func_4273')
call_4783 = relay.TupleGetItem(func_4272_call(), 1)
call_4784 = relay.TupleGetItem(func_4273_call(), 1)
output = call_4783
output2 = call_4784
func_4796 = relay.Function([], output)
mod['func_4796'] = func_4796
mod = relay.transform.InferType()(mod)
mutated_mod['func_4796'] = func_4796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mutated_mod.get_global_var('func_4796')
call_4797 = func_4796_call()
output = call_4797
func_4798 = relay.Function([], output)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4217_call = mod.get_global_var('func_4217')
func_4219_call = mutated_mod.get_global_var('func_4219')
call_4808 = func_4217_call()
call_4809 = func_4217_call()
func_4101_call = mod.get_global_var('func_4101')
func_4102_call = mutated_mod.get_global_var('func_4102')
call_4810 = func_4101_call()
call_4811 = func_4101_call()
output = relay.Tuple([call_4808,call_4810,])
output2 = relay.Tuple([call_4809,call_4811,])
func_4824 = relay.Function([], output)
mod['func_4824'] = func_4824
mod = relay.transform.InferType()(mod)
output = func_4824()
func_4825 = relay.Function([], output)
mutated_mod['func_4825'] = func_4825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4824_call = mod.get_global_var('func_4824')
func_4825_call = mutated_mod.get_global_var('func_4825')
call_4913 = relay.TupleGetItem(func_4824_call(), 1)
call_4914 = relay.TupleGetItem(func_4825_call(), 1)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_4918 = func_4796_call()
call_4919 = func_4796_call()
func_3067_call = mod.get_global_var('func_3067')
func_3070_call = mutated_mod.get_global_var('func_3070')
var_4926 = relay.var("var_4926", dtype = "float64", shape = (30,))#candidate|4926|(30,)|var|float64
call_4925 = relay.TupleGetItem(func_3067_call(relay.reshape(var_4926.astype('float64'), [30,])), 1)
call_4927 = relay.TupleGetItem(func_3070_call(relay.reshape(var_4926.astype('float64'), [30,])), 1)
uop_4939 = relay.asinh(call_4925.astype('float32')) # shape=(1, 6, 5)
uop_4941 = relay.asinh(call_4927.astype('float32')) # shape=(1, 6, 5)
output = relay.Tuple([call_4913,call_4918,var_4926,uop_4939,])
output2 = relay.Tuple([call_4914,call_4919,var_4926,uop_4941,])
func_4944 = relay.Function([var_4926,], output)
mod['func_4944'] = func_4944
mod = relay.transform.InferType()(mod)
mutated_mod['func_4944'] = func_4944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4945 = relay.var("var_4945", dtype = "float64", shape = (30,))#candidate|4945|(30,)|var|float64
func_4944_call = mutated_mod.get_global_var('func_4944')
call_4946 = func_4944_call(var_4945)
output = call_4946
func_4947 = relay.Function([var_4945], output)
mutated_mod['func_4947'] = func_4947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mod.get_global_var('func_3171')
func_3173_call = mutated_mod.get_global_var('func_3173')
call_5011 = relay.TupleGetItem(func_3171_call(), 0)
call_5012 = relay.TupleGetItem(func_3173_call(), 0)
func_2461_call = mod.get_global_var('func_2461')
func_2464_call = mutated_mod.get_global_var('func_2464')
const_5024 = relay.const([[-7,-1,-1,6,-1,-7,-10,10,6,-7,1,-6,-5,-8],[4,-2,-6,-10,8,-9,2,-9,-8,10,-3,2,5,4],[8,-10,-1,3,-7,-6,-9,-5,-10,3,5,4,2,-4],[6,9,-8,-8,5,-8,-6,-1,-9,6,-3,1,-2,-6],[3,-1,5,-4,-1,4,4,8,8,5,-6,-1,9,6],[7,4,-3,-8,5,3,-2,1,9,-6,-1,-6,-1,7],[-7,9,-7,3,-10,-8,4,-2,-8,-4,4,-6,10,-1],[7,9,3,9,3,-9,4,9,-1,-4,-1,8,8,-10],[5,9,1,7,6,-5,-9,-1,4,-1,-10,-5,-5,8],[-8,2,-2,-7,-9,-9,2,5,8,2,-7,-8,8,-9],[8,-6,8,2,-1,2,-5,8,-5,-7,-10,-7,-4,5],[8,-4,-3,-7,-10,-8,-7,-2,3,10,-4,1,7,-2],[-2,-2,-1,9,7,-5,-4,-10,7,-5,-4,8,-3,-2],[6,-1,1,9,10,-7,5,-5,-7,1,-7,-2,-3,-8],[9,7,4,-4,-1,-8,-4,-7,-7,9,7,7,8,6],[-10,-8,-6,8,2,6,6,2,1,10,-4,-1,3,-7],[-7,-4,9,10,6,-7,10,10,1,8,5,-7,9,2],[-8,-2,-1,-4,10,-8,-9,-5,-2,7,-10,3,-2,-6],[10,2,-6,1,-3,-10,8,-9,4,-8,-8,-8,-9,-6],[1,2,10,9,8,-5,-6,4,-4,-5,-7,-7,-7,5],[-5,-6,3,-10,-2,6,3,-3,-8,-5,1,1,2,-5],[2,-6,1,7,-8,4,8,-9,3,9,8,4,-3,-7],[4,5,-4,-6,1,-10,10,10,-5,-10,3,-2,5,-2],[2,5,-3,-3,-9,1,-2,-2,4,4,-1,10,6,-4],[-9,-3,-6,-8,-9,6,-9,2,8,6,4,-1,-4,10],[4,-5,2,3,-6,-9,-1,-7,-1,-4,10,1,9,10],[5,-7,6,2,-10,8,-6,-3,1,9,-6,9,4,2],[3,9,6,9,-8,1,-9,-1,5,4,-3,-8,-6,7],[-8,-3,4,1,8,1,-4,-3,1,-8,8,-2,2,10],[-8,10,-7,-7,7,-1,1,-10,-4,5,-6,2,4,-7],[-6,8,5,10,-1,4,-6,-2,7,-9,4,6,1,-8],[-4,3,3,3,-7,3,-9,-5,-10,-1,8,7,6,-4],[1,-1,-6,-6,6,-8,-2,3,7,-8,3,-5,-9,-5],[-6,-3,-2,2,9,-8,9,9,6,-5,-10,-2,-2,3],[9,-8,8,2,6,-7,-3,-1,10,4,-2,1,-1,4],[-9,-5,-7,-3,-4,5,10,4,-5,-8,7,-5,10,-2],[10,-4,-4,-9,-2,8,-9,6,2,-7,-5,6,-8,2],[6,10,-9,-6,3,-6,10,-3,-6,2,-8,-7,-5,-6],[1,-10,-1,6,5,5,-9,-5,6,2,6,9,7,7],[-8,-5,-1,9,-5,6,-7,10,-3,-7,-4,8,-4,-3],[5,-3,3,2,-4,9,-6,-1,-5,10,-7,-4,7,10],[1,2,-3,8,2,-1,-3,-8,-5,-1,-10,-6,-8,-8],[4,-6,-1,-2,-5,10,2,-6,4,-5,10,9,9,-7],[-8,1,2,9,-8,-6,3,10,9,-4,9,4,-5,9],[10,10,10,-2,-1,-6,5,-3,9,-8,1,-3,-9,-10],[-10,10,-7,-10,4,-1,-6,-5,2,1,-3,-2,-9,5],[-4,6,-5,5,-7,-1,10,7,1,-9,1,-6,7,9],[5,-7,10,-4,-2,-7,6,1,9,4,-1,5,-2,-8],[-9,8,10,2,1,-5,6,1,7,10,9,10,-8,3],[5,1,-8,-7,-4,-8,-6,-7,4,-4,9,9,-9,-1],[-3,7,6,4,-6,-2,-2,7,-5,2,-2,10,-2,3],[-9,10,-9,-2,4,-6,-6,3,1,8,4,-5,6,-10],[-6,2,7,7,-9,-10,-2,-5,9,6,8,5,-4,10],[6,8,3,7,-2,-8,3,5,-8,-6,10,6,6,2],[2,9,2,-9,-7,-6,1,1,-6,1,-7,-1,-1,-7],[-6,8,-10,5,-6,8,-3,4,10,9,-2,-10,-9,5],[5,10,10,-1,-5,-4,-5,6,-7,-1,6,5,-2,6],[-3,3,5,-1,-1,5,1,9,-2,-1,5,-7,1,8],[6,-7,7,7,5,-6,10,-4,-3,-6,-8,-5,10,6],[4,7,10,-9,5,-8,5,5,-7,6,-4,4,-1,6],[3,-5,6,8,-5,2,4,10,-3,-5,-6,10,-7,-1],[-5,2,-7,-4,-8,-8,1,4,-9,5,9,-2,-2,2],[-9,8,8,-2,6,9,-10,8,6,-5,6,4,-1,-8],[-1,2,3,-3,-9,-9,3,-8,4,2,-6,2,-8,-7],[7,2,6,-7,4,-4,-9,8,1,-2,-10,5,-3,7],[-7,10,10,1,6,8,2,-2,5,10,6,2,-10,1],[6,-5,-4,7,9,-3,8,4,5,8,8,7,3,9],[6,5,9,5,8,-1,-1,-1,-6,-6,3,-1,3,-4],[-9,8,-2,-9,6,8,7,-9,4,5,7,10,-7,-10],[1,7,-6,5,-9,-2,-8,8,-10,4,-9,3,-10,3],[-4,-8,-8,4,9,3,-2,4,5,-7,-9,6,-8,1],[2,7,-8,10,9,9,3,-5,-8,7,1,6,-3,-7],[1,-2,3,-8,2,8,-2,-9,-10,2,-5,9,4,-3],[8,-9,7,4,1,-2,10,6,6,6,2,-2,-8,-1],[8,9,-6,-7,-2,-5,-2,7,5,-1,7,-7,-9,5],[1,10,-2,7,1,-10,-4,-5,-2,-8,6,-7,9,3],[2,5,-4,3,6,-1,-4,2,-8,6,-9,-6,-4,-9],[5,-10,10,10,-2,7,3,-7,-8,6,-5,-5,-5,-1],[-2,-1,-2,7,6,-3,10,-6,-7,1,9,-3,-8,-1],[7,-1,2,-9,-2,-6,4,7,-9,-9,6,-4,-5,-9],[5,-5,2,3,-9,6,-9,-10,-4,-6,-9,-1,-5,10],[-2,-3,9,-9,-6,-2,-5,6,5,-6,2,1,-7,6],[7,-3,7,6,-6,6,9,8,-10,-7,-10,-1,-7,6],[5,7,10,-3,-6,2,7,-3,-9,10,5,4,2,-10],[10,-4,-7,-8,-1,-5,-3,-8,-8,7,-1,-5,-6,-2],[6,9,7,2,-6,-3,3,-3,-7,-7,1,-2,-10,-1],[-8,7,6,-10,1,8,-2,6,1,6,-10,4,-8,4],[-3,-6,-9,-5,-1,7,-6,-3,6,-8,7,-4,6,8],[4,1,8,-8,-2,-3,7,9,3,-4,9,5,-5,-5],[-8,-6,-7,-10,6,-4,-1,3,5,3,-4,-8,-10,-3],[3,-9,-10,-1,-4,2,9,8,2,-7,-7,-6,9,6],[-6,-8,6,10,-2,1,-2,-6,8,8,-7,-7,-9,-5],[-7,-10,1,-4,3,1,2,1,-6,4,1,3,9,4],[5,6,2,6,4,-8,-3,4,2,1,2,-1,-7,5],[-6,-4,8,-6,-8,6,4,8,-5,-3,10,3,7,-7],[10,-10,8,-9,6,1,-8,5,-2,-7,7,-4,-4,-9],[2,-7,7,-9,3,-5,3,-4,-2,-3,2,-3,-2,4],[-5,10,8,-2,-7,1,-10,1,-10,-4,-4,1,9,-4],[1,8,4,5,-7,8,7,6,-4,1,-3,-8,-4,-4],[-1,5,-10,-9,-2,6,-1,-5,-2,8,-7,-9,5,-9],[6,-3,4,10,2,-6,-6,-6,-7,-9,-2,-4,-5,-1],[-10,-1,-6,3,4,-1,5,-3,-4,-9,-9,-9,-5,-2],[-5,3,5,-2,-2,-8,10,-3,1,-5,-6,-5,3,8],[6,-10,-4,8,1,-10,-7,-9,10,-2,-9,-5,3,10],[3,-6,9,-9,3,2,-7,6,1,-1,-9,-1,1,-5],[-5,2,4,-6,-6,-6,4,2,2,-7,5,-3,10,5],[3,6,7,-5,-8,4,8,4,9,5,-5,-6,10,-7],[5,-2,3,6,7,-1,-4,8,4,-6,-9,-4,-5,5],[10,-8,7,5,9,2,-3,-1,-5,-1,-3,1,9,-8],[-8,10,6,-6,9,5,-3,5,7,4,-9,2,-1,-5],[2,5,-6,-9,2,-7,7,8,-8,-5,-1,8,4,-1],[5,-5,9,7,4,8,-3,6,7,-7,9,10,3,-9],[8,-1,-5,-1,8,-10,6,-8,-4,-7,8,-6,8,-6],[-5,-7,4,7,-6,-6,6,9,-5,-9,1,2,1,-8],[-7,9,9,7,6,5,-2,-8,-6,-10,-4,-3,-6,4],[-4,-8,7,3,3,-1,3,1,-6,6,6,4,9,-4],[-2,-4,-1,9,10,-7,-1,-4,-4,-2,5,-4,-5,10],[-8,1,-3,10,7,-5,3,-4,10,-1,-4,-7,-2,-10],[1,-3,4,-3,-8,2,-2,6,7,-10,-7,-1,7,-2],[1,9,3,3,5,4,-8,-1,-3,6,7,9,8,-7],[-10,-5,10,-2,-6,-10,-2,-6,-3,9,-4,-8,-10,4],[-6,6,-9,-6,-6,2,5,5,-6,-6,-8,5,-1,-2],[7,-10,9,9,-8,7,-3,-6,-8,-6,9,-3,10,-8],[8,-1,-6,-8,-8,2,-9,-9,-7,3,-3,-2,-4,1],[3,-2,-7,-6,3,-9,10,-8,-8,5,2,-3,-8,9],[-7,3,-8,-1,-7,2,-2,2,10,-4,5,-6,-7,1],[-1,5,-1,-8,-3,-5,-7,-10,-8,4,10,-8,7,-3],[-2,-10,-7,3,-3,-8,-1,7,-2,10,9,7,3,-8],[1,7,-8,-6,-3,-4,9,5,6,9,-10,7,-4,1],[-2,-8,-10,6,-3,4,1,-2,-1,2,10,-7,-2,-10],[-3,-4,9,7,8,-7,6,-4,-1,-9,3,4,-3,-4],[7,3,-6,-4,10,4,7,-6,-7,9,-9,4,10,-7],[-9,9,-6,8,1,7,-3,9,6,-4,8,-3,-4,10],[3,6,-10,-9,-9,-8,-9,2,-10,4,8,9,1,-4],[-8,-8,2,2,1,8,-10,-2,5,-1,-7,-1,2,3],[-3,-8,-1,-2,8,-7,-7,3,-3,-6,-9,3,1,2],[-7,7,-2,-3,-9,8,-10,8,-1,-7,-6,-3,10,-2],[4,-4,-9,-1,6,-3,-8,2,-5,-5,3,-1,5,-5],[-1,-5,5,6,-10,4,-2,1,-8,-9,-7,-7,8,-9],[-1,-7,-5,9,-2,3,-3,-10,-4,6,3,-4,2,1],[9,-1,8,7,10,1,-1,4,1,-1,-4,-6,-4,9],[4,-4,-2,5,2,-1,-8,-4,7,4,-3,-5,-2,8],[-1,-2,5,-10,-2,4,9,-8,-10,-5,-4,6,-4,6]], dtype = "uint8")#candidate|5024|(143, 14)|const|uint8
call_5023 = relay.TupleGetItem(func_2461_call(relay.reshape(const_5024.astype('uint8'), [13, 14, 11])), 0)
call_5025 = relay.TupleGetItem(func_2464_call(relay.reshape(const_5024.astype('uint8'), [13, 14, 11])), 0)
uop_5035 = relay.exp(const_5024.astype('float64')) # shape=(143, 14)
func_4824_call = mod.get_global_var('func_4824')
func_4825_call = mutated_mod.get_global_var('func_4825')
call_5045 = relay.TupleGetItem(func_4824_call(), 1)
call_5046 = relay.TupleGetItem(func_4825_call(), 1)
bop_5051 = relay.power(uop_5035.astype('float32'), relay.reshape(call_5023.astype('float32'), relay.shape_of(uop_5035))) # shape=(143, 14)
bop_5054 = relay.power(uop_5035.astype('float32'), relay.reshape(call_5025.astype('float32'), relay.shape_of(uop_5035))) # shape=(143, 14)
bop_5060 = relay.less_equal(bop_5051.astype('bool'), relay.reshape(uop_5035.astype('bool'), relay.shape_of(bop_5051))) # shape=(143, 14)
bop_5063 = relay.less_equal(bop_5054.astype('bool'), relay.reshape(uop_5035.astype('bool'), relay.shape_of(bop_5054))) # shape=(143, 14)
bop_5075 = relay.greater_equal(bop_5051.astype('bool'), relay.reshape(bop_5060.astype('bool'), relay.shape_of(bop_5051))) # shape=(143, 14)
bop_5078 = relay.greater_equal(bop_5054.astype('bool'), relay.reshape(bop_5063.astype('bool'), relay.shape_of(bop_5054))) # shape=(143, 14)
uop_5084 = relay.sin(bop_5075.astype('float32')) # shape=(143, 14)
uop_5086 = relay.sin(bop_5078.astype('float32')) # shape=(143, 14)
bop_5087 = relay.add(bop_5051.astype('int32'), relay.reshape(bop_5075.astype('int32'), relay.shape_of(bop_5051))) # shape=(143, 14)
bop_5090 = relay.add(bop_5054.astype('int32'), relay.reshape(bop_5078.astype('int32'), relay.shape_of(bop_5054))) # shape=(143, 14)
output = relay.Tuple([call_5011,call_5045,uop_5084,bop_5087,])
output2 = relay.Tuple([call_5012,call_5046,uop_5086,bop_5090,])
func_5097 = relay.Function([], output)
mod['func_5097'] = func_5097
mod = relay.transform.InferType()(mod)
mutated_mod['func_5097'] = func_5097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5097_call = mutated_mod.get_global_var('func_5097')
call_5098 = func_5097_call()
output = call_5098
func_5099 = relay.Function([], output)
mutated_mod['func_5099'] = func_5099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_5186 = relay.TupleGetItem(func_4535_call(), 0)
call_5187 = relay.TupleGetItem(func_4536_call(), 0)
output = call_5186
output2 = call_5187
func_5190 = relay.Function([], output)
mod['func_5190'] = func_5190
mod = relay.transform.InferType()(mod)
mutated_mod['func_5190'] = func_5190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mutated_mod.get_global_var('func_5190')
call_5191 = func_5190_call()
output = call_5191
func_5192 = relay.Function([], output)
mutated_mod['func_5192'] = func_5192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2364_call = mutated_mod.get_global_var('func_2364')
call_5223 = relay.TupleGetItem(func_2363_call(), 0)
call_5224 = relay.TupleGetItem(func_2364_call(), 0)
func_3358_call = mod.get_global_var('func_3358')
func_3360_call = mutated_mod.get_global_var('func_3360')
var_5226 = relay.var("var_5226", dtype = "float32", shape = (1, 2688))#candidate|5226|(1, 2688)|var|float32
call_5225 = func_3358_call(relay.reshape(var_5226.astype('float32'), [16, 12, 14]))
call_5227 = func_3358_call(relay.reshape(var_5226.astype('float32'), [16, 12, 14]))
func_1038_call = mod.get_global_var('func_1038')
func_1042_call = mutated_mod.get_global_var('func_1042')
var_5230 = relay.var("var_5230", dtype = "uint8", shape = (3, 700))#candidate|5230|(3, 700)|var|uint8
var_5231 = relay.var("var_5231", dtype = "uint16", shape = (845,))#candidate|5231|(845,)|var|uint16
call_5229 = relay.TupleGetItem(func_1038_call(relay.reshape(var_5230.astype('uint8'), [10, 14, 15]), relay.reshape(var_5231.astype('uint16'), [845,]), ), 2)
call_5232 = relay.TupleGetItem(func_1042_call(relay.reshape(var_5230.astype('uint8'), [10, 14, 15]), relay.reshape(var_5231.astype('uint16'), [845,]), ), 2)
output = relay.Tuple([call_5223,call_5225,var_5226,call_5229,var_5230,var_5231,])
output2 = relay.Tuple([call_5224,call_5227,var_5226,call_5232,var_5230,var_5231,])
func_5251 = relay.Function([var_5226,var_5230,var_5231,], output)
mod['func_5251'] = func_5251
mod = relay.transform.InferType()(mod)
var_5252 = relay.var("var_5252", dtype = "float32", shape = (1, 2688))#candidate|5252|(1, 2688)|var|float32
var_5253 = relay.var("var_5253", dtype = "uint8", shape = (3, 700))#candidate|5253|(3, 700)|var|uint8
var_5254 = relay.var("var_5254", dtype = "uint16", shape = (845,))#candidate|5254|(845,)|var|uint16
output = func_5251(var_5252,var_5253,var_5254,)
func_5255 = relay.Function([var_5252,var_5253,var_5254,], output)
mutated_mod['func_5255'] = func_5255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5265 = relay.var("var_5265", dtype = "float32", shape = (2, 3, 4))#candidate|5265|(2, 3, 4)|var|float32
var_5266 = relay.var("var_5266", dtype = "float32", shape = (2, 3, 4))#candidate|5266|(2, 3, 4)|var|float32
bop_5267 = relay.divide(var_5265.astype('float32'), relay.reshape(var_5266.astype('float32'), relay.shape_of(var_5265))) # shape=(2, 3, 4)
output = bop_5267
output2 = bop_5267
func_5279 = relay.Function([var_5265,var_5266,], output)
mod['func_5279'] = func_5279
mod = relay.transform.InferType()(mod)
mutated_mod['func_5279'] = func_5279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5279_call = mutated_mod.get_global_var('func_5279')
var_5281 = relay.var("var_5281", dtype = "float32", shape = (2, 3, 4))#candidate|5281|(2, 3, 4)|var|float32
var_5282 = relay.var("var_5282", dtype = "float32", shape = (2, 3, 4))#candidate|5282|(2, 3, 4)|var|float32
call_5280 = func_5279_call(var_5281,var_5282,)
output = call_5280
func_5283 = relay.Function([var_5281,var_5282,], output)
mutated_mod['func_5283'] = func_5283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mod.get_global_var('func_3478')
func_3479_call = mutated_mod.get_global_var('func_3479')
call_5301 = relay.TupleGetItem(func_3478_call(), 0)
call_5302 = relay.TupleGetItem(func_3479_call(), 0)
output = relay.Tuple([call_5301,])
output2 = relay.Tuple([call_5302,])
func_5303 = relay.Function([], output)
mod['func_5303'] = func_5303
mod = relay.transform.InferType()(mod)
output = func_5303()
func_5304 = relay.Function([], output)
mutated_mod['func_5304'] = func_5304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mod.get_global_var('func_3478')
func_3479_call = mutated_mod.get_global_var('func_3479')
call_5322 = relay.TupleGetItem(func_3478_call(), 0)
call_5323 = relay.TupleGetItem(func_3479_call(), 0)
output = call_5322
output2 = call_5323
func_5334 = relay.Function([], output)
mod['func_5334'] = func_5334
mod = relay.transform.InferType()(mod)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5334_call = mutated_mod.get_global_var('func_5334')
call_5335 = func_5334_call()
output = call_5335
func_5336 = relay.Function([], output)
mutated_mod['func_5336'] = func_5336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_5415 = func_4796_call()
call_5416 = func_4796_call()
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_5417 = func_4796_call()
call_5418 = func_4796_call()
func_4073_call = mod.get_global_var('func_4073')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_5419 = func_4073_call()
call_5420 = func_4073_call()
func_4101_call = mod.get_global_var('func_4101')
func_4102_call = mutated_mod.get_global_var('func_4102')
call_5426 = func_4101_call()
call_5427 = func_4101_call()
func_3511_call = mod.get_global_var('func_3511')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_5429 = relay.TupleGetItem(func_3511_call(), 0)
call_5430 = relay.TupleGetItem(func_3513_call(), 0)
output = relay.Tuple([call_5415,call_5417,call_5419,call_5426,call_5429,])
output2 = relay.Tuple([call_5416,call_5418,call_5420,call_5427,call_5430,])
func_5431 = relay.Function([], output)
mod['func_5431'] = func_5431
mod = relay.transform.InferType()(mod)
output = func_5431()
func_5432 = relay.Function([], output)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_5461 = func_2060_call()
call_5462 = func_2060_call()
output = relay.Tuple([call_5461,])
output2 = relay.Tuple([call_5462,])
func_5471 = relay.Function([], output)
mod['func_5471'] = func_5471
mod = relay.transform.InferType()(mod)
output = func_5471()
func_5472 = relay.Function([], output)
mutated_mod['func_5472'] = func_5472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4424_call = mutated_mod.get_global_var('func_4424')
call_5525 = relay.TupleGetItem(func_4423_call(), 3)
call_5526 = relay.TupleGetItem(func_4424_call(), 3)
const_5531 = relay.const([[[1.420362,0.951081,5.269503,-5.291609],[-5.561630,-5.272424,5.129285,-4.516336],[-0.469610,-6.284553,3.033857,-4.449594],[3.244448,0.675370,4.856388,-9.299700],[2.296888,5.175276,-7.904542,-2.196718],[-0.594148,9.134174,7.855004,5.108061],[-9.874547,6.540850,-0.528437,3.130080],[3.277495,1.481281,8.660414,9.356422],[1.817741,9.388923,-4.438357,9.747061],[-2.634465,6.542601,-3.547142,9.661830],[-8.494261,4.983664,-2.165179,0.671112],[7.997391,9.834997,-4.418012,-0.205272],[6.961316,1.216313,5.207807,-0.072297],[2.309957,-9.300233,6.401218,5.135417],[-5.277796,-4.540279,6.475080,-5.140610]],[[1.887638,7.737704,-1.427296,4.489698],[8.315906,-6.008323,2.984967,-0.319608],[-0.400937,8.704846,9.888337,0.598794],[7.235453,-8.949432,7.075648,8.793263],[-9.395209,5.208375,-6.718549,7.113077],[2.167466,7.025754,-1.789594,-2.576135],[-9.607959,-9.309767,-0.376491,8.827342],[-6.862519,-5.120967,9.928017,-3.725303],[-4.847880,-9.935573,-8.170854,-8.866794],[4.327347,7.082106,2.848581,-4.590573],[2.562259,9.747033,9.763671,7.858924],[6.578356,7.323137,7.805131,-1.349873],[3.230733,0.733763,-2.008777,-4.794905],[7.354953,-3.930209,5.161984,-4.210000],[3.742276,-5.136042,-6.072714,-0.281643]],[[5.937722,-8.861140,3.410682,-8.507118],[-3.301979,6.502994,3.025128,-7.328227],[8.614110,9.205006,-3.655312,9.429863],[-3.786717,-6.239243,6.487791,-8.905200],[-7.860941,6.028736,7.364572,1.008947],[4.120927,9.118162,-8.053866,0.521411],[-8.394960,-0.920406,-8.330193,-1.395148],[2.288356,-3.017238,-9.314110,0.881473],[0.551331,-8.416394,-5.977093,-0.909580],[-4.508296,-4.954492,-2.300339,-9.507309],[-9.412219,9.438018,-8.884237,1.682454],[-1.233005,-2.417139,-3.587816,7.205831],[5.491017,4.686561,7.489190,4.063410],[6.263625,-6.252489,-1.677990,-4.042817],[7.582292,4.470582,5.088334,6.670914]],[[-6.599778,-6.963412,3.395871,3.864295],[-7.871493,-3.522545,-6.836411,4.609689],[8.620092,2.721932,4.933627,2.881409],[0.279195,-9.711010,1.639720,-8.484335],[-1.684444,4.129601,1.498755,-9.588266],[7.986177,8.354505,-6.989565,4.926805],[3.967027,9.765540,-3.377222,6.269835],[-9.528745,-2.358988,-9.878906,7.740588],[-3.442399,-9.813346,0.473041,5.627767],[-9.741765,2.663153,1.346059,-5.497409],[3.886125,9.660627,-2.788623,-2.160534],[2.090181,5.405706,9.529534,-3.386730],[3.708141,5.468329,7.577275,3.728839],[-9.140310,-2.480533,8.002081,-5.697292],[8.227504,-5.141151,-6.557191,-5.582582]],[[2.820713,7.405376,-0.452105,-8.293097],[5.053312,4.420226,-7.065522,-6.225886],[9.946463,7.295727,9.539315,8.609171],[8.476526,1.042836,-4.387296,9.586574],[0.143052,7.743673,-2.850464,4.212384],[5.895587,-1.281942,5.963155,-0.426398],[-6.725417,8.496352,9.890753,-9.815974],[-6.652874,8.252460,4.146774,-2.570110],[2.515595,-4.670897,-8.096534,5.473715],[-7.434195,2.623559,-1.958179,-5.747425],[9.512758,3.013486,9.168345,-8.762161],[6.310159,-6.023621,-5.635192,6.229585],[-3.266586,-3.154911,4.605997,5.213097],[6.893896,0.828190,-5.551154,-6.567989],[0.265578,8.065230,9.453365,-7.407974]],[[7.485388,2.246449,7.370395,9.522649],[5.719499,-9.047919,-4.114132,-6.471978],[3.418837,0.734939,-4.039968,2.250989],[9.539405,-6.872174,-4.317599,6.513821],[3.878564,-8.615672,7.104938,2.424070],[0.285859,0.602934,7.373244,2.109332],[7.274967,-6.594266,2.337860,0.684018],[-0.410643,8.400209,-3.435818,-1.495046],[-8.065706,0.839369,5.848166,-2.864261],[-2.245755,-0.866291,8.749760,-9.507200],[-8.074887,-4.548658,4.049536,0.083262],[2.958898,-6.248963,5.022263,-2.163622],[0.691792,-6.280253,-6.050787,5.288507],[-0.079466,-1.680132,-0.187649,0.157314],[9.575245,-1.712706,4.697816,4.147085]],[[-8.164198,0.823764,-5.193301,5.087864],[5.717850,-0.255373,-6.903496,-4.829769],[7.099337,8.953136,-8.311806,1.523639],[-8.251043,-7.058176,4.747863,4.296906],[9.828600,3.279694,-1.211304,-3.636003],[-1.630735,4.455716,-7.182216,-6.760412],[-9.650494,8.763196,-9.041782,-2.945541],[-6.724657,-1.364921,-0.282492,-7.185589],[-8.663769,-5.254972,-8.846197,-3.237181],[7.975020,-7.635955,-0.180889,-8.848817],[-7.532786,4.272438,-0.696299,7.709066],[-8.314946,-2.704148,0.057124,-2.196991],[-9.916069,-1.136572,7.746681,-2.362356],[-5.914452,5.393507,6.300726,2.077509],[4.588149,-5.272870,3.622006,3.543029]],[[2.308429,-2.177549,-0.511407,9.974608],[4.336732,8.156633,-6.547607,-8.744423],[-4.862598,0.121495,0.212799,4.491630],[3.422566,-0.070763,-3.842648,-1.502565],[3.213380,-4.774631,-3.515789,-4.544383],[-7.138767,-5.640860,8.087593,5.420997],[-8.390104,9.293192,-4.313750,9.323300],[-7.629199,-0.620914,6.035874,0.775690],[9.928512,-7.603642,6.700375,-0.420266],[-9.787772,-5.712012,0.896365,-9.564948],[7.293199,2.948605,-0.089155,8.798778],[-9.034502,6.662623,0.854150,-6.675102],[7.117209,-8.972599,6.559272,-3.467315],[7.068360,-0.731350,-2.966875,2.308348],[-2.928306,1.794205,6.221603,-9.051012]],[[-4.810685,4.319537,-7.125916,9.239037],[-1.467319,-1.453859,-5.035735,4.281106],[7.469749,-9.936183,-1.260882,4.128549],[-4.453128,-2.728274,-3.419076,2.469445],[-9.696393,-5.015645,-9.270124,-6.154568],[5.367253,-2.155133,1.900962,2.614991],[3.372150,3.108365,4.316421,4.562243],[9.598899,5.951384,-2.451435,0.957822],[3.143659,8.816018,5.368219,-8.985766],[-1.715433,-2.303983,3.414119,-2.204093],[0.437658,-4.507007,3.007277,-8.162818],[4.742430,-8.441114,-1.289747,7.579167],[3.475848,9.630595,-0.008446,5.787501],[-3.705923,0.848922,7.914161,3.026892],[9.624779,-9.754087,1.165465,6.479140]],[[-0.867897,-1.390843,6.144798,1.929727],[-0.408230,1.708316,-2.958800,2.362078],[-1.578804,-4.362575,-5.795835,-1.359474],[-1.039538,-9.804636,1.807784,-0.561893],[9.483468,-9.247436,-3.782686,8.097424],[-7.791794,-1.561957,6.004172,-5.268941],[-4.801295,-6.130020,-0.073376,-3.993268],[9.589898,-7.349916,-7.677408,-4.729198],[0.979516,9.531291,-6.913860,-6.504704],[0.741574,-8.352580,-1.433355,2.802272],[4.623936,3.908448,-5.249087,-0.688619],[2.323990,5.120540,-6.188598,1.960354],[-7.681879,7.327788,-9.568126,-4.748567],[-8.552456,-8.967480,6.542496,9.614207],[6.130619,-2.315972,-4.392647,1.045563]],[[7.504391,-9.879739,3.054540,7.147762],[-0.972126,-1.241838,-0.378069,-0.101691],[5.015211,6.895084,-0.065661,-0.675888],[0.309805,-0.621545,1.611687,3.843636],[-9.012625,-0.822667,-6.126041,4.691991],[3.596691,7.632836,-7.573175,-6.904279],[-4.266381,-5.518794,0.914606,1.693443],[7.883488,-9.794710,1.560737,7.248396],[0.229127,2.214798,1.614328,-1.513302],[0.718377,-8.073312,-2.670588,1.408176],[-1.466350,0.838283,-7.710749,3.701600],[-1.081464,3.033760,8.352816,9.630779],[-7.536439,-8.608023,-4.742769,-4.076980],[-3.443784,6.971889,-4.044454,-4.140962],[8.965156,-3.428600,-3.902634,8.179142]],[[2.332618,-7.944157,-1.910805,-2.486085],[2.481115,-2.753380,1.465899,1.345504],[-5.440755,-6.479392,3.432587,5.415812],[7.962091,5.779678,7.820720,-0.912411],[6.129012,-9.386190,7.703058,-9.992033],[7.380083,-8.272052,-8.877526,7.750905],[-4.883648,8.284826,-8.173570,-3.507898],[-3.094096,4.065429,3.809667,-7.701677],[-5.161369,-7.093105,2.242970,-8.418987],[1.576317,-3.926679,-2.319535,-2.479856],[6.049102,3.418879,2.299861,6.309850],[9.306850,2.730513,0.904303,4.849959],[-4.140471,6.303570,-9.096307,4.422681],[-9.206637,5.655316,4.827614,6.125352],[2.672720,-3.738857,8.969745,-9.513052]]], dtype = "float32")#candidate|5531|(12, 15, 4)|const|float32
bop_5532 = relay.not_equal(call_5525.astype('bool'), relay.reshape(const_5531.astype('bool'), relay.shape_of(call_5525))) # shape=(12, 15, 4)
bop_5535 = relay.not_equal(call_5526.astype('bool'), relay.reshape(const_5531.astype('bool'), relay.shape_of(call_5526))) # shape=(12, 15, 4)
output = relay.Tuple([bop_5532,])
output2 = relay.Tuple([bop_5535,])
func_5536 = relay.Function([], output)
mod['func_5536'] = func_5536
mod = relay.transform.InferType()(mod)
mutated_mod['func_5536'] = func_5536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5536_call = mutated_mod.get_global_var('func_5536')
call_5537 = func_5536_call()
output = call_5537
func_5538 = relay.Function([], output)
mutated_mod['func_5538'] = func_5538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5630 = relay.var("var_5630", dtype = "uint16", shape = (3, 12, 13))#candidate|5630|(3, 12, 13)|var|uint16
var_5631 = relay.var("var_5631", dtype = "uint16", shape = (3, 12, 13))#candidate|5631|(3, 12, 13)|var|uint16
bop_5632 = relay.logical_xor(var_5630.astype('uint16'), relay.reshape(var_5631.astype('uint16'), relay.shape_of(var_5630))) # shape=(3, 12, 13)
func_3437_call = mod.get_global_var('func_3437')
func_3442_call = mutated_mod.get_global_var('func_3442')
const_5640 = relay.const([7.285906,-8.773299,0.686234,-1.744877,9.702223,7.202828,7.145701,-6.015797,-7.989916,-6.606406,6.675861,-6.264268,-8.768992,9.874021,-5.265245,8.623279,1.141713,-9.476977,-4.579334,-6.828109,-4.721913,-8.846255,-0.601846,-2.248896,-9.880234,9.280288,6.016617,8.608326,6.046518,-2.481268,-8.156344,2.748729,8.232015,-9.528433,-4.669769,9.582577,-2.395215,-6.802803,4.234446,-4.330233,4.486585,0.094155,0.171330,-0.454350,0.708468,-0.004239,8.975543,-1.940569,0.059067,-9.895377,5.290595,-9.499847,-3.320683,4.832712,-6.502286,4.788950,3.153568,-2.674002,9.244134,1.068382,7.381821,-5.226193,0.709033,-6.094091,-0.680628,-8.164534,-4.756967,3.364947,-1.071661,-4.576070,-9.987610,-9.029874,-9.993390,-8.552149,-7.827624,1.536401,4.479641,-8.075408,-8.827493,-8.769617,4.381829,-8.697261,4.995202,-2.279152,-5.501357,-9.711194,-2.492059,1.590898,-7.569672,0.174907,5.164248,-2.079191,-6.174028,-0.589998,3.130135,6.945262,2.899521,3.593508,-4.793110,-0.628204,-1.620752,6.985538,-4.527855,-6.560269,6.932532,8.763782,-2.393696,5.417797,-3.603773,1.068340,-7.566484,-6.661435,-6.235817,4.539219,-3.711198,-9.890577,-2.197949,1.096641,-3.781340,7.269626,5.258894,-5.083611,7.876524,1.458111,7.657189,4.793213,5.460779,-1.497248,5.111762,-8.523583,6.440220,0.175976,5.788192,-8.228089,-1.649017,1.696101,-1.994174,8.668084,1.708314,4.139776,1.891965,0.777634,8.489259,-0.775691,6.941424,-2.715701,3.265846,-5.867340,-7.117056,-2.838043,3.366353,7.547093,-8.285414,4.965304,1.482056,-3.209174,7.742704,4.963634,6.270071,-0.293665,6.833742,-4.323272,-9.317044,2.050113,7.998084,3.498358,2.456100,3.909330,7.030620,8.906431,1.987421,4.795990,3.191306,9.163936,-2.105575,9.328164,-7.340004,9.159735,4.968227,-5.002074,-3.021846,6.574658,-4.249351,6.902433,8.429802,-2.525605,9.081321,3.240707,-6.679414,9.473591,-5.879307,-2.376149,-1.304777,0.021879,-3.994124,1.433046,8.191067,-3.844233,1.263037,1.997625,0.573261,1.095778,0.097825,1.540173,-6.883009,7.846753,-9.937763,8.180745,2.048905,-6.510354,-4.927684,-8.537287,-1.393471,2.084356,7.041329,-2.739026,-4.719609,1.755060,-0.588976,-5.107903,2.690261,-0.279935,1.216420,9.910595,-3.084033,8.878757,2.309188,7.453460,-8.930815,6.866718,0.279019,-4.826159,6.461100,-5.726390,5.365111,-6.695199,-3.425034,-4.104431,4.760485,-7.533028,4.497505,-8.601055,2.470186,-3.126316,7.142769,6.225130,1.092741,-5.892173,6.404800,-6.306921,0.877760,-3.933596,4.194311,-4.499023,-2.090237,8.603751,-8.023007,-7.679909,1.991845,5.045911,-6.847651,7.732445,9.697885,-6.459565,-5.194163,4.352574,-7.369602,7.352988,-2.344141,-0.420572,-5.691087,-1.784451,8.344691,4.483288,0.233092,6.117819,5.456664,9.016561,9.060798,-1.321802,-5.610228,1.532347,8.624815,1.249906,-0.821158,-5.246760,3.517907,7.793700,1.496790,2.521252,-7.383500,-0.837476,6.774927,-9.448231,6.198842,1.469037,-0.383718,-0.189264,0.099287,4.616393,7.531542,2.570272,-3.175144,-8.954266,2.368656,-5.031310,-8.036205,8.586439,-4.608174,-1.985914,-6.786175,6.925773,3.688437,-4.175779,4.583618,-8.398918,0.023669,8.510698,6.525116,7.393731,9.057154,-8.729557,-1.506230,-9.786924,4.696842,8.201613,-4.739362,-5.241108,-1.410885,-3.113935,-0.536945,8.550148,-5.691745,1.078244,-3.230093,-0.405368,-1.221838,3.865302,0.828588,8.126671,2.144337,-5.866157,9.581719,5.106015,-4.677151,-5.162338,-1.037633,-2.044078,-4.824703,-5.026817,7.482218,8.981218,1.442240,-5.677631,-2.005816,7.696659,-1.043284,5.923353,-1.901317,-5.533517,-4.824539,1.047318,-7.531227,-3.378243,0.332083,6.977942,1.809027,-9.437852,2.809830,8.884169,-2.326389,0.347764,4.389519,4.976108,2.091604,-3.091207,-4.633341,9.307105,9.163254,7.863811,-9.057088,2.622919,3.267367,9.605744,9.575473,-6.232862,3.722739,-2.161821,-1.261324,4.368577,2.603295,-4.715893,2.321904,-6.931977,6.467484,-2.101599,-2.330399,7.911953,6.923271,4.074865,-9.225322,4.360638,2.269258,-3.893602,7.694079,-6.835447,6.177308,-8.037754,-1.522312,1.454684,-4.367895,9.545906,-8.465265,3.961687,2.208912,-7.938771,-7.665868,-5.276714,5.356985,-7.955071,-4.489523,-2.845882,5.595658,-3.701858,0.333904,9.119648,8.621885,0.970994,2.565202,-0.055148,6.611157,-4.698879,-3.101094,3.082868,5.686605,-4.185902,-1.275670,3.942949,2.627797,3.185910,-6.327312,-0.055794,-9.812842,0.678296,-4.647788,-9.452669,-2.748254,-8.091052,8.255213,-5.683195,8.159264,-7.413453,2.369327,4.059515,-2.023815,-6.929899,8.350146,-5.160427,-0.669201,6.610245,8.206847,-0.571605,6.514691,-6.139041,-7.875470,1.237057,8.001156,-7.008193,-3.519215,4.047136,-5.799482,9.472828,2.221613,8.480425,7.878324,-5.401903,9.760032,-1.630218,9.852121,0.304688,7.649666,8.681569,5.611266,-0.442330,6.562610,-8.861313,9.267340,8.445045,3.785098,-6.222727,-8.615288,-5.850306,7.115830,-8.186959,9.410537,-8.748581,-8.253369,-4.980546,8.948701,1.465150,-6.531571,5.492727,4.110752,-6.071720,4.068028,3.554637,-9.384299,0.009716,-2.721921,-2.024870,-7.672498,5.156643,7.947276,-0.843765,-1.833845,9.817799,5.686510,-5.502871,-3.329576,0.635085,9.427757,1.949014,-2.851563,8.381752,-0.764805,9.355077,-3.044267,7.189653,-6.370957,8.643680,-0.206791,0.513110,4.718438,-1.103405,0.596366,6.359263,1.469800,-6.253257,-3.340539,-4.472423,7.727111,8.343879,-1.939989,8.192368,-2.282963,4.325471,-5.914289,-0.746972,-6.814492,8.066959,-2.218963,-8.596282,3.953932,-1.036148,-5.558910,-3.434554,-5.361231,-1.755091,-8.282425,8.907055,-7.288957,8.585655,8.611152,-5.244817,2.538055,9.736042,-7.289687,4.198144,-8.837424,2.401394,-9.709648,7.970401,9.702969,-2.175554,4.187713,-5.410994,-8.899276,-5.418158,3.119527,-1.703409,-9.851790,6.988131,9.878504,-7.118958,-3.109351,0.549621,4.743531,5.046610,-9.277902,1.425470,6.382130,6.822436,3.502720,8.169628,-9.203566,0.887309,-3.599605,3.534464,8.780060,8.402507,-5.794296,8.824394,5.204895,-9.868047,-0.356898,-8.683438,-8.790280,0.663280,3.137337,-3.990027,-7.843529,3.177623,-3.891090,1.305804,-0.378189,1.197305,7.048697,2.071903,0.774414,-2.753903,6.972453,9.369870,-9.683394,7.707517,-0.845807,1.528069,-9.839512,4.181255,7.797908,-3.287282,4.777902,-5.448829,-3.197681,-2.917819,-3.998891,3.770655,4.971746,1.329045,-1.566830,2.611591,-4.439727,8.983024,9.448770,-7.526718,5.701374,2.587988,-2.674415,9.189813,3.958721,6.522158,-1.436711,7.654566,7.983749,5.519937,1.507317,-2.943055,2.118233,-3.710782,-7.701152,-5.404474,-1.744653,7.601562,6.549600,6.306505,-7.402610,-0.539282,-3.713223,-9.244132,-8.368514,5.151832,-4.149452,-1.805762,8.388294,2.915192,4.356077,-7.204259,0.453684,-8.683198,-8.879771,8.625319,-3.475141,-0.373390,0.170727,1.728214,-0.094140,4.377611,-8.977826,2.571589,5.957693,-3.044999,-4.079330,-2.271877,-8.641324,-2.772060,-2.129251,2.248569,-8.423513,3.141075,-7.410025,6.400802,4.059586,4.555959,-8.568474,-0.427201,2.408416,-4.458815,1.426461,6.634007,-4.121068,-5.832634,6.620635,5.173507,4.600964,7.358502,6.115781,3.292726,-6.577813,8.866538,5.335311,-3.743164,-2.826979,-4.458699,5.169367,4.937470,3.149577,-4.704985,3.738325,-5.606467,3.664392,-6.383311,2.810196,8.457948,-7.097667,-8.965548,-3.931851,5.913058,-5.577903,-3.767919,3.655081,5.958978,-3.046345,-6.194887,3.609540,-4.081405,-1.451067,-2.643988,-4.533944,5.779762,-3.017415,-0.987727,-9.122973,3.340678,8.582426,-1.618658,6.841858,-5.307578,-8.557102,2.044162,2.481646,-0.070985,-6.615836,3.446582,-2.000506,1.233712,4.290236,-6.888293,2.676139,-6.044616,2.244682,-9.153609,-7.305968,-7.474556,1.580469,-1.986259,-9.009136,-7.543678,4.019075,2.958761,4.553434,-8.791183,1.876390,-2.116884,-2.037671,9.376592,-4.676914,-1.100413,-5.602252,7.220113,-6.407217,6.748812,-7.338267,0.005346,7.018640,7.253405,-6.300665,4.974727,-3.242440,-4.813375,-9.481330,1.360258,8.068068,8.578539,-5.620153,4.966718,6.802909,3.600321,6.350305,8.315393,-4.084176,3.623232,7.816198,-7.797290,-8.877099,-0.730029,-2.103996,3.865258,-7.349493,-4.240684,5.832564,3.220413,-5.117413,-9.089701,-6.085097,-1.348695,3.058649,9.438996,6.680283,-7.839598,-8.998413,-4.110671,-7.829892,1.720614,3.615233,-7.701669,9.868071,8.312177,-1.929977,8.787150,9.418649,8.299068,7.909606,1.267521,-3.599446,4.273869,9.709298,-2.273920,2.553695,-5.745056,5.360237,-1.670255,-3.784250,-3.503619,1.376360,6.631957,0.764123,1.383403,5.699149,6.575438,5.581520,0.290634,9.796028,-3.553998,9.933774,5.120502,8.262180,5.207087,2.356769,9.109605,-1.241482,0.741913,0.896682,-2.419448,-0.646748,9.229679,-2.473520,-8.749638,-6.008131,1.976706,5.829531,-1.873696,-6.251850,-5.149313,5.263155,-1.495376,8.898418,4.169234,5.293297,0.249686,-8.372144,9.949986,7.528469,-3.911911,-6.012593,8.479794,-2.699939,4.589583,-0.221909,-7.950102,7.460197,8.912356,-3.744690,4.365980,-9.546592,1.932497,0.787267,-9.440111,-9.013506,-4.865568,-2.900046,-6.435814,5.153432,7.318898,-3.242050,5.755855,-8.747829,-9.510036,-5.398351,-8.021136,-4.731463,5.771244,-3.452329,0.221252,-0.337645,-3.196811,2.971161,4.500503,-7.895832,-4.420698,-1.981369,-6.972880,-2.444240,0.520744,-9.236647,-2.026880,-8.757361,2.003346,7.903939,1.522953,-8.870370,-3.443787,8.983965,6.088724,-9.214569,-4.648175,8.002319,9.081053,1.705746,-1.085053,3.509389,-1.647104,-5.941368,-6.756711,-2.248588,3.342296,8.720577,8.431891,0.342340,-7.507619,-6.398748,-0.704554,7.617091,-4.457041,0.702005,1.949702,0.732535,-0.617188,5.874715,4.146813,-3.569452,-9.020985,-4.260974,-7.958138,-1.076291,4.044076,6.985523,6.782453,8.974601,7.195440,-9.235675,1.604597,5.024584,-8.778349,3.877991,-7.373479,-9.383808,7.900936,-2.487139,4.005598,2.178781,-2.338818,-4.383558,6.439744,6.307193,-1.990053,1.519711,9.876509,9.788659,1.973580,8.231647,8.156232,0.060479,-5.146248,-2.981570,-6.791967,-9.440020,9.158303,-3.907950,-1.538579,6.822029,-7.897474,7.900814,5.563673,6.062209,8.143046,6.606480,-1.251857,8.637408,-8.852696,-6.761134,5.638191,1.901533,-8.257377,-8.784034,5.336090,3.809038,-9.559273,4.622807,-4.392213,4.841449,0.584794,-9.514388,4.304496,-1.332326,2.421782,-1.631495,3.997230,3.623967,-8.105747,2.498021,-9.886084,6.413199,0.340508,-5.989027,5.205002,2.075344,-3.233495,-6.927630,7.231448,-5.400603,-6.392588,-1.300106,-9.800513,7.812728,5.662910,7.673718,7.194260,-3.176344,8.593279,-9.189766,-3.564145,-9.428499,2.068501,-9.283036,8.862418,-0.107117,-7.413122,-5.767919,-8.648452,1.212735,-8.816262,1.451929,1.618664,-5.717180,0.939961,4.586008,-3.502629,-0.753091,-4.265575,-0.263601,1.081178,9.996471,4.400660,0.717435,4.105141,2.024012,3.990580,-0.396628,4.661644,4.875846,2.366324,-7.889506,-2.178718,-8.554556,-4.569968,6.249561,7.392263,1.616243,-2.649780,-8.863624,2.078841,8.449171,4.400480,8.310059,-9.577000,8.845353,6.747205,8.876435,-1.274726,-7.697433,-5.014340,8.225706,2.687002,2.261163,6.015696,4.032855,3.839017,8.751586,-6.340286,5.921567,1.517913,8.280703,5.269316,3.688463,-6.600214,-6.529752,2.302583,-2.902464,-5.234614,-5.057382,4.210474,-6.468576,-2.303791,3.242622,-3.245290,3.205480,7.135464,-1.421372,2.135662,3.534016,8.639320,-9.770264,0.840627,3.218240,-4.152980,9.355961,-0.890972,6.205708,1.223839,7.758219,8.460944,8.766846,0.375811,0.520611,7.965947,-0.781836,-1.049407,2.168688,6.378478,6.196260,-5.401164,-0.671296,-1.965899,5.107256,-6.979121,1.626969,1.651584,6.631562,-4.130350,9.972420,4.823605,9.461804,3.524367,0.897148,6.407473,-5.422139,7.639817,-2.680404,-1.523305,4.217153,0.920839,1.599122,5.218127,3.031611,8.091902,-4.464324,7.174702,3.193647,-1.026642,7.911806,4.491072,-3.719995,-2.172585,9.341975,-7.799159,-0.331498,6.270616,4.220532,-6.429380,2.841573,2.372010,-4.652488,6.577244,9.387574,-2.116678,0.348360,4.684711,-6.945805,5.578859,-2.718674,-8.446794,6.659014,-9.898993,-6.629251,3.941786,4.668248,0.361738,4.780745,7.475492,3.199237,-0.375597,4.852107,-7.380401,8.622202,8.471905,5.417191,-4.259549,-6.370773,5.814102,9.975840,-3.691332,-9.957304,-4.614772,-7.158777,-0.912500,8.252041,-9.354965,-5.640639,-2.375815,-4.008462,-0.691029,6.302182,-2.976360,7.032018,8.480469,5.945235,1.408092,3.948091,1.018384,0.545745,1.698508,-1.041309,-9.032645,-2.019193,9.551483,-8.629107,8.402896,-9.164910,6.831671,4.874760,7.350252,-8.940432,-6.246725,-6.401757,2.955121,-7.206806,7.767380,4.987551,8.849522,-6.708268,-9.348986,-4.595930,4.935216,-0.618900,6.747442,5.227786,-5.610887,7.295301,8.313168,-9.632464,-5.721134,-8.969640,-3.792927,7.136309,7.863024,-3.286319,-7.583113,0.406575,9.887274,6.110586,-8.849390,5.478573,-9.133554,9.977627,4.993020,7.721238,-7.017107,2.919370,7.792410,3.402799,-4.981450,-8.230201,-5.290734,-3.162372,6.277094,-5.842917,-9.996020,-7.059876,3.291075,2.203520,-5.867073,-2.005026,-8.467901,5.942257,-3.970949,-0.792992,-3.583942,1.696688,7.222892,-8.674394,9.491707,-8.134809,2.568383,2.048080,-3.897131,5.953773,4.363470,-9.857201,1.813705,6.999063,-8.362640,-5.053177,-2.703757,0.414403,-1.755624,1.796228,2.275323,5.889392,-7.470369,1.392609,9.433005,6.863394,-5.602554,-3.519451,7.574831,6.549137,-6.812425,-5.377360,1.591796,-5.155031,-4.684025,-8.897892,5.444433,-2.818640,-3.851237,-9.580679,-4.492476,-4.105314,5.169889,-4.801774,-4.034010,-5.455648,1.339561,2.601437,6.530808,-9.203577,9.572017,9.271686,6.740131,3.063827,5.179294,1.149493,8.460335,-6.504072,2.908092,-3.305582,-5.665966,-8.894532,4.154845,-0.045841,6.616231,-1.877912,7.534079,9.585273,6.748536,-2.994206,-1.024446,-2.259486,2.534117,4.399919,7.866455,-4.636257,-4.741068,-7.293233,4.473128,-1.056210,2.894640,0.814836,-2.949333,6.806331,8.024013,-1.410637,-4.571355,-8.524248,5.834805,-0.708012,4.234252,-5.393403,1.735940,4.146895,-7.007863,1.201621,3.389317,-4.297453,5.530720,7.620033,-5.401651,-4.753700,4.703501,-1.804753,-0.265536,5.593868,-2.401975,-0.685030,-4.880252,-6.030622,1.175966,3.484593,-6.094776,0.249201,5.610586,5.115513,-9.509257,-1.240535,-8.751362,2.127443,9.153599,-0.432024,-5.765445,0.263108,-0.786703,2.205711,1.102605,-5.495993,8.452423,4.381589,5.519357,-3.761196,1.506487,0.188150,5.593599,-2.323268,5.866516,-7.069801,2.804706,7.948082,3.903849,-2.207437,0.097264,0.288759,-4.415654,3.623148,7.276751,2.022092,0.999423,-6.044702,1.458901,6.046859,6.281587,9.943328,-9.578905,-8.277022,6.563346,-3.245218,-3.757231,3.918209,2.805219,-2.559565,-1.980822,5.680756,-8.836887,8.257817,-3.278539,-4.265391,-1.596577,9.171286,-1.258854,2.252432,-2.060561,-5.009778,6.212682,8.019917,4.510710,6.040456,1.653649,0.259595,-0.812379,-4.380825,3.146700,-3.503188,-4.126881,-5.332231,7.944615,-2.665024,-6.879161,-1.966631,3.657553,-0.765442,1.069027,-2.686805,-8.509076,-4.208132,-2.854116,0.572676,-8.905005,-6.458545,6.370335,6.956072,-8.249697,-7.201618,9.422615,-4.839642,-9.406585,3.500122,-9.156303,9.185556,1.424091,8.519298,-1.446066,0.035375,-3.348206,7.998912,9.832615,-5.099871,-8.538629,-0.140220,-6.172341,-8.714720,5.748777,-0.006804,-8.377011,-7.593834,-5.821822,6.237592,-3.900344,1.554043,-1.249078,3.117174,3.852589,1.841942,-1.267120,3.641592,-8.980438,-6.132935,3.636904,6.901447,-5.493441,7.777249,6.307728,9.567440,-1.745958,-9.993494,7.784682,-3.395504,-4.930359,-4.207643,1.583636,8.440593,-1.384895,8.201993,-7.944327,5.679121,-4.260792,2.132344,3.779246,1.595329,0.669283,5.371022,8.983341,-4.836531,0.521251,2.258137,-8.065885,2.718867,-9.434266,2.024809,2.750981,7.104967,5.609680,-4.925868,4.648656,-5.054071,3.337077,1.788705,1.826443,-4.631689,-9.793196,1.482445,-9.504970,6.746725,6.088694,-8.790645,7.650471,-9.402806,-9.262060,-1.709516,5.146993,0.771439,-8.527235,7.641972,-4.225858,-3.919144,7.579469,2.091138,-6.914788,-6.140097,7.239325,8.903316,-1.425083,-5.081056,-9.975032,-3.419581,9.202263,-2.082113,-1.576282,-0.419638,-5.359890,-4.834586,-8.320871,4.466863,-1.176834,6.260407,-1.718935,6.272875,-5.946878,-9.661502,-5.283169,-6.993779,-6.150308,9.318737,4.780314,3.863473,-3.902965,7.008387,7.015627,-3.566895,4.188901,-2.087783,-7.931413,-7.928600,9.506779,3.338222,-8.827210,3.298325,-6.316755,0.933934,-7.207087,5.793603,-9.485026,-3.372980,-6.328155,-5.095236,-1.642250,9.027939,-7.001916,7.081909,-0.687053,0.374581,3.128895,8.382172,3.730441,4.320734,8.588046,-3.056479,7.824914,-9.097893,0.390946,0.908294,7.700030,-6.840467,1.325941,2.938298,-4.914175,-5.222399,8.514965,-5.409443,-7.270845,0.601036,-0.893258,-0.502780,-3.779466,1.864144,9.654458,1.202966,-0.311875,-4.132407,5.332445,2.940377,-4.777078,4.594241,-4.160296,-3.747364,1.736317,-0.235307,9.434750,-0.903000,9.177339,-2.256135,-3.514574,2.564070,1.864754,-7.981998,8.064060,3.025199,8.416376,-0.308199,-0.908061,0.997205,-9.232997,0.840122,-2.272363,1.999015,-2.938881,-2.556743,8.429730,4.330271,9.745635,6.695219,2.384099,-8.658621,-4.978365,-3.738208,3.654133,-4.688241,-0.911837,5.726517,0.051991,-5.271591,-6.006690,4.128176,9.070901,4.135503,-0.666125,9.444532,2.452814,6.731289,-8.890017,-4.654047,9.706653,7.335431,-0.008381,-1.790624,7.075001,3.152446,3.312631,9.847928,6.431615,3.530933,-0.978839,-8.199557,-1.344892,5.768696,9.076078,-8.403930,-5.905373,-9.162007,-0.051760,2.508626,-4.256541,-9.149039,8.691419,-5.138397,-7.441316,-8.619131,-6.503941,-7.413945,-7.018948,-8.961919,9.110453,-7.115986,-2.816866,-5.160779,9.178192,2.647721,1.739401,6.871171,0.241171,8.537722,7.940633,-6.541144,-8.740974,-0.280630,-8.779819,9.823531,2.914246,-0.375940,-4.214005,4.210028,-0.666846,2.661494,-6.978749,-0.672083,-0.236466,2.204820,5.992411,-6.994645,-4.416309,9.795047,2.834558,-0.948010,-3.421179,-9.445646,7.568643,7.556583,-5.423106,4.634425,4.402002,3.987561,-2.692463,-8.775801,-9.869905,2.939503,6.483549,-4.040277,9.989720,-7.968874,5.905930,0.052861,-8.464206,-9.078672,4.089010,9.389451,7.049839,0.216489,9.668041,6.723307,-4.743955,-9.480219,7.898168,-2.416829,9.578737,7.361279,5.948900,0.032070,0.538726,5.305114,-8.956333,3.503438,9.707582,2.982704,-0.196978,-8.118461,1.827310,6.612315,7.778506,-1.820291,-4.180680,1.827701,-6.042582,2.064101,-9.860516,-1.086471,3.687078,-1.512361,-9.915379,6.254844,3.739961,8.512837,-7.349639,7.380577,-3.625166,-9.593162,0.497747,9.428733,-9.727545,3.689332,3.701778,7.732558,-7.484597,2.545022,4.692824,4.262869,-5.548046,-5.451784,4.975066,7.997545,3.385152,-4.709257,4.055878,-1.002857,-0.756313,5.316935,3.192394,-9.150580,-0.033153,6.824630,-7.126470,-2.839136,8.719558,2.731150,8.079608,6.455500,-5.729776,3.021826,8.979087,-4.785586,-1.231652,5.215875,-4.507040,3.236416,1.349408,6.430562,5.617291,-8.116446,-9.912960,-7.739749,-3.116306,-8.792536,8.811614,2.227172,6.669847,3.731940,8.899021,9.090570,-9.792870,-6.623611,5.657097,-0.938613,-6.022205,-5.638907,-7.469555,-6.793596,-4.913617,-4.034988,-7.331230,-5.210250,6.712179,3.034783,-5.011704,-2.997440,9.475447,-9.759690,-8.179338,-4.481285,7.788796,2.059265,7.065173,2.590038,-9.647146,3.287284,2.944151,-1.809972,8.632954,3.326472,8.677994,0.232942,-0.963336,8.297816,-6.172727,4.060080,-2.242001,8.919288,-1.141279,6.968086,-9.420197,-0.210258,-9.762114,-4.717672,-9.790469,3.780049,-4.601941,7.529728,-7.091257,2.575298,-3.055349,6.399419,-6.966665,-2.800783,9.417127,4.063609,-8.158480,9.417817,2.889169,8.011149,1.387137,2.702139,2.424737,-5.672716,7.637536,-9.147428,8.897495,9.820891,-9.649397,-7.198935,3.377025,-1.315236,3.312633,0.344489,9.946455,4.319603,9.686973,-8.564537,7.096256,2.220505,2.677684,-8.410847,0.323109,-7.807845,3.089958,0.248480,-2.903015,-9.460702,6.083446,-3.119847,-0.767579,5.523494,-2.530408,-5.085955,-9.320831,8.742614,1.312393,-4.880566,4.433941,7.328412,-1.136788,8.692811,-1.480502,-5.833617,6.357710,-6.331681,-5.436169,-5.858210,-0.940833,-6.387564,-7.583951,-3.486665,2.339263,-5.496800,4.780435,1.345591,-6.691389,-2.300047,7.195505,-9.906269,-5.092964,-8.492091,-1.898632,6.184210,-5.818974,5.558590,7.997298,-8.169183,8.440925,8.293064,-8.803647,-6.000297,-3.200782,4.232954,4.627320,-8.633007,8.326221,8.897060,0.793525,-0.897049,-4.738076,-3.267318,6.980747,1.669825,0.926255,9.889464,9.055674,-4.007969,-2.962164,7.801912,9.134621,7.575205,7.300730,-7.918298,-7.336194,-4.174176,5.703049,-8.589111,7.514631,9.182736,7.141924,6.596726,-6.855403,-0.698459,7.751733,-1.919239,3.141641,8.573049,-6.628988,-9.750934,-1.536084,-2.387252,3.731802,-3.578879,-0.525583,-8.460817,-6.033617,-7.505144,4.277971,-0.923259,5.077282,-0.110069,-3.234471,7.047507,2.291678,4.493843,-1.891683,0.603059,4.736317,-9.689670,1.036008,6.796025,-9.596937,-8.069250,-0.646962,3.911680,-6.502330,-6.259172,8.904299,0.879418,6.668957,4.718787,-2.814838,-3.813196,-5.266854,2.346025,4.685199,-3.848174,5.941248,3.106515,1.238082,4.108750,-7.769041,-4.228080,0.742245,0.729719,2.035454,-2.772315,8.701016,8.771559,5.131275,-2.914995,0.405809,8.792841,0.520413,-8.429917,4.136510,-0.202156,3.057234,2.866168,8.964641,-5.196748,7.732753,-0.483453,8.115909,6.039941,2.307856,0.095720,-3.751726,4.702252,8.196953,-0.833018,1.887737,8.976279,6.508067,4.726804,8.132124,6.139779,-2.465917,0.339942,1.675212,-7.606276,-8.769301,5.035506,-4.816220,8.843562,-6.597913,-1.957990,-1.939509,9.826905,4.763703,-5.701647,-1.558804,3.272770,-0.170617,-2.467777,4.147470,-2.583191,-1.780804,-2.325763,-5.309886,-8.856107,4.381192,-8.750997,-4.318703,-7.539984,-7.489488,-5.085499,-3.271469,4.772622,8.968223,6.401542,-4.881179,-3.444808,0.105184,-9.598556,-5.825802,5.836730,2.178711,-4.449284,2.164480,6.298648,8.107588,-1.189176,-5.180288,-2.397369,8.649303,-8.767390,9.689912,-2.726155,-7.000898,-3.014400,1.628032,-4.062474,9.420999,6.808183,0.452895,-3.605669,-0.031278,6.086117,-5.875659,-6.651055,8.121373,-6.345112,-7.523275,5.020304,9.787418,2.496982,2.022668,9.452126,-9.351350,7.556666,-7.310158,9.646382,-3.637434,3.088175,-6.061860,-4.609408,-3.578073,3.216341,9.288941,4.613917,-5.771231,-0.465692,2.247837,8.398182,-6.707413,1.007530,-6.184996,2.219030,3.618485,-5.922185,7.731190,8.010390,3.511137,-9.061216,-5.637827,3.326907,-6.928378,-7.686710,3.022002,-1.889930,7.187939,-8.108716,-4.522119,-2.352176,-3.954822,7.825558,-8.703236,-1.000039,1.757787,-5.920764,-2.254705,0.954362,8.477480,-0.773008,0.702275,-6.308158,1.729237,-5.491192,7.407464,0.868685,3.228514,2.024279,-4.026624,1.105396,-1.835914,7.103075,4.759655,7.396008,-0.946202,-4.631136,-2.757835,-5.781752,3.414889,1.471570,-7.376191,3.506928,-9.988510,7.051083,-5.972149,-8.305675,-3.645555,3.955907,-8.758456,1.509401,5.003408,-9.294229,-6.778032,2.378425,-9.872305,-0.114716,1.553115,-8.787445,-9.775937,-4.173136,6.486502,3.131381,-1.559191,3.051965,-4.123463,-6.444493,-5.025187,4.274252,4.068872,3.493010,-3.552080,-8.596204,1.206836,9.225898,-3.365013,-4.854504,-3.197783,-3.382190,-5.150205,-6.266496,-8.709791,-6.302743,9.819786,8.268402,-3.968574,-6.534303,9.462885,1.170356,-7.437664,-0.208730,-3.076737,-2.475264,4.470503,-1.575024,-4.295042,-4.786055,3.856372,-1.860095,-8.612040,4.421064,-9.693922,6.012441,6.138572,-6.575420,3.166212,-3.332824,3.053098,7.715866,2.049410,-4.331100,-7.064683,-2.781457,-2.633542,-2.947695,4.940419,4.680387,-0.786671,2.119116,2.136876,4.470463,-5.390777,8.821025,-2.516799,-8.669516,-2.782901,2.972031,7.077209,-9.433220,-7.256765,8.440018,-8.523957,7.699354,3.552693,-0.663115,-1.007279,-3.580829,-0.452285,-0.505385,-3.579577,-2.863345,-6.873929,6.782043,-1.512589,8.502150,-2.093734,-6.973904,5.531300,3.303097,-9.525696,-6.288249,5.146379,1.700035,-8.337790,-6.123844,8.716162,2.546682,0.606720,6.700316,-7.960045,-0.175424,6.259596,5.320012,6.532235,-3.117240,4.755385,-5.965161,7.238412,-1.703120,-9.318079,-5.018369,1.026684,8.036840,-9.501553,-3.102638,8.871901,0.974118,7.381507,6.679914,-3.530062,-8.160407,-8.628547,-5.983004,1.619635,5.833767,-2.767060,0.848498,9.382114,-4.761165,2.823241,-9.946801,1.893047,-8.512291,1.688571,9.633056,4.419011,7.799599,0.267897,1.060502,-0.904350,-7.731092,-0.828961,-7.289605,-2.559554,4.892473,-8.604515,-8.334572,3.830550,-5.698891,-8.729972,-4.757433,-3.806723,-8.812094,-8.785514,-1.088433,-9.353413,5.156056,-3.759238,3.851765,-8.230564,-9.260049,-2.072375,-3.143032,7.941080,-1.508291,9.159813,7.292829,-5.216300,2.353764,5.792785,8.193601,-0.621910,-4.136500,0.001118,7.273825,-0.099121,-3.364189,-8.252249,2.276880,5.279729,7.420103,-3.220464,-7.527624,-4.531388,7.939593,2.111052,-5.582028,8.218654,-7.428039,-2.830483,-7.368588,-4.205500,0.802930,-4.719816,-5.263045,4.572593,-5.030349,2.019663,-0.280211,-4.467443,0.803717,3.465858,7.350329,0.284357,2.777962,7.010649,-8.351874,-2.408539,-5.695628,-4.227750,-0.385777,-2.112244,-7.638903,-0.927990,-6.029346,-6.550985,-0.115720,1.320088,8.552777,-3.682306,-1.218404,-2.840524,2.283098,-9.670453,0.455824,-9.175325,-7.825994,-1.832908,-8.767405,-5.737590,9.220553,0.642678,-6.948153,4.628268,1.690533,-0.606104,3.370866,-3.324678,0.403181,-2.107566,-3.955249,-8.806634,-4.970538,5.916046,3.868718,6.235537,-1.156085,9.679546,7.214907,-8.062925,-0.635408,-4.835872,-4.746047,-3.661124,7.932380,-6.676448,7.104112,9.101843,-5.759866,9.600416,-2.150171,-9.842756,3.025536,2.600257,4.456895,5.757415,-9.683397,9.249884,-5.124701,-4.677883,9.833041,7.857522,6.419756,-0.418528,9.933399,-6.829611,-4.666736,8.263288,-0.332152,-7.351448,-5.102803,3.415285,9.614939,1.827551,-7.371862,8.280918,7.580295,-6.160101,2.225431,-3.958993,-8.502522,-4.608035,0.423633,-4.308584,-3.805350,7.857827,-8.292147,4.342891,-1.460972,-0.688193,-6.510498,-1.955823,-2.762532,6.023105,1.552254,6.631211,-8.363920,-9.817409,2.240924,6.146864,1.888413,-2.977022,1.470960,1.802456,3.077044,-8.983601,5.356706,0.724523,4.997420,-5.505196,-5.587628,2.800764,7.271005,-5.463570,-5.372757,1.297185,7.032441,-2.137359,3.796164,-1.818214,5.734657,0.556320,0.371731,-1.218369,0.114175,5.549982,-9.180233,-4.897629,-3.422934,-5.415876,-3.807305,-9.854848,-8.221375,-0.662211,-6.153853,-0.028006,0.774421,-7.877371,-4.979016,1.728703,3.755305,8.851003,8.483886,-2.589981,-8.606148,8.916599,-0.750873,-5.288665,-7.110236,-2.025084], dtype = "float32")#candidate|5640|(2688,)|const|float32
call_5639 = relay.TupleGetItem(func_3437_call(relay.reshape(const_5640.astype('float32'), [4, 672]), relay.reshape(const_5640.astype('float64'), [4, 672]), relay.reshape(const_5640.astype('float64'), [4, 672]), relay.reshape(const_5640.astype('bool'), [4, 672]), ), 3)
call_5641 = relay.TupleGetItem(func_3442_call(relay.reshape(const_5640.astype('float32'), [4, 672]), relay.reshape(const_5640.astype('float64'), [4, 672]), relay.reshape(const_5640.astype('float64'), [4, 672]), relay.reshape(const_5640.astype('bool'), [4, 672]), ), 3)
func_4003_call = mod.get_global_var('func_4003')
func_4006_call = mutated_mod.get_global_var('func_4006')
var_5654 = relay.var("var_5654", dtype = "int64", shape = (198, 1))#candidate|5654|(198, 1)|var|int64
call_5653 = relay.TupleGetItem(func_4003_call(relay.reshape(var_5654.astype('int64'), [198, 1])), 6)
call_5655 = relay.TupleGetItem(func_4006_call(relay.reshape(var_5654.astype('int64'), [198, 1])), 6)
func_4567_call = mod.get_global_var('func_4567')
func_4569_call = mutated_mod.get_global_var('func_4569')
call_5660 = relay.TupleGetItem(func_4567_call(), 0)
call_5661 = relay.TupleGetItem(func_4569_call(), 0)
var_5685 = relay.var("var_5685", dtype = "uint16", shape = (3, 12, 13))#candidate|5685|(3, 12, 13)|var|uint16
bop_5686 = relay.less_equal(var_5631.astype('bool'), relay.reshape(var_5685.astype('bool'), relay.shape_of(var_5631))) # shape=(3, 12, 13)
output = relay.Tuple([bop_5632,call_5639,const_5640,call_5653,var_5654,call_5660,bop_5686,])
output2 = relay.Tuple([bop_5632,call_5641,const_5640,call_5655,var_5654,call_5661,bop_5686,])
func_5689 = relay.Function([var_5630,var_5631,var_5654,var_5685,], output)
mod['func_5689'] = func_5689
mod = relay.transform.InferType()(mod)
mutated_mod['func_5689'] = func_5689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5689_call = mutated_mod.get_global_var('func_5689')
var_5691 = relay.var("var_5691", dtype = "uint16", shape = (3, 12, 13))#candidate|5691|(3, 12, 13)|var|uint16
var_5692 = relay.var("var_5692", dtype = "uint16", shape = (3, 12, 13))#candidate|5692|(3, 12, 13)|var|uint16
var_5693 = relay.var("var_5693", dtype = "int64", shape = (198, 1))#candidate|5693|(198, 1)|var|int64
var_5694 = relay.var("var_5694", dtype = "uint16", shape = (3, 12, 13))#candidate|5694|(3, 12, 13)|var|uint16
call_5690 = func_5689_call(var_5691,var_5692,var_5693,var_5694,)
output = call_5690
func_5695 = relay.Function([var_5691,var_5692,var_5693,var_5694,], output)
mutated_mod['func_5695'] = func_5695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5536_call = mod.get_global_var('func_5536')
func_5538_call = mutated_mod.get_global_var('func_5538')
call_5706 = relay.TupleGetItem(func_5536_call(), 0)
call_5707 = relay.TupleGetItem(func_5538_call(), 0)
output = relay.Tuple([call_5706,])
output2 = relay.Tuple([call_5707,])
func_5715 = relay.Function([], output)
mod['func_5715'] = func_5715
mod = relay.transform.InferType()(mod)
mutated_mod['func_5715'] = func_5715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5715_call = mutated_mod.get_global_var('func_5715')
call_5716 = func_5715_call()
output = call_5716
func_5717 = relay.Function([], output)
mutated_mod['func_5717'] = func_5717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5471_call = mod.get_global_var('func_5471')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_5737 = relay.TupleGetItem(func_5471_call(), 0)
call_5738 = relay.TupleGetItem(func_5472_call(), 0)
output = relay.Tuple([call_5737,])
output2 = relay.Tuple([call_5738,])
func_5776 = relay.Function([], output)
mod['func_5776'] = func_5776
mod = relay.transform.InferType()(mod)
mutated_mod['func_5776'] = func_5776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5776_call = mutated_mod.get_global_var('func_5776')
call_5777 = func_5776_call()
output = call_5777
func_5778 = relay.Function([], output)
mutated_mod['func_5778'] = func_5778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_5836 = relay.TupleGetItem(func_4125_call(), 0)
call_5837 = relay.TupleGetItem(func_4127_call(), 0)
output = call_5836
output2 = call_5837
func_5840 = relay.Function([], output)
mod['func_5840'] = func_5840
mod = relay.transform.InferType()(mod)
output = func_5840()
func_5841 = relay.Function([], output)
mutated_mod['func_5841'] = func_5841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4272_call = mod.get_global_var('func_4272')
func_4273_call = mutated_mod.get_global_var('func_4273')
call_5871 = relay.TupleGetItem(func_4272_call(), 2)
call_5872 = relay.TupleGetItem(func_4273_call(), 2)
output = relay.Tuple([call_5871,])
output2 = relay.Tuple([call_5872,])
func_5874 = relay.Function([], output)
mod['func_5874'] = func_5874
mod = relay.transform.InferType()(mod)
mutated_mod['func_5874'] = func_5874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5874_call = mutated_mod.get_global_var('func_5874')
call_5875 = func_5874_call()
output = call_5875
func_5876 = relay.Function([], output)
mutated_mod['func_5876'] = func_5876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mod.get_global_var('func_4567')
func_4569_call = mutated_mod.get_global_var('func_4569')
call_5886 = relay.TupleGetItem(func_4567_call(), 0)
call_5887 = relay.TupleGetItem(func_4569_call(), 0)
func_5279_call = mod.get_global_var('func_5279')
func_5283_call = mutated_mod.get_global_var('func_5283')
var_5910 = relay.var("var_5910", dtype = "float32", shape = (24,))#candidate|5910|(24,)|var|float32
call_5909 = func_5279_call(relay.reshape(var_5910.astype('float32'), [2, 3, 4]), relay.reshape(var_5910.astype('float32'), [2, 3, 4]), )
call_5911 = func_5279_call(relay.reshape(var_5910.astype('float32'), [2, 3, 4]), relay.reshape(var_5910.astype('float32'), [2, 3, 4]), )
func_4653_call = mod.get_global_var('func_4653')
func_4655_call = mutated_mod.get_global_var('func_4655')
call_5934 = relay.TupleGetItem(func_4653_call(), 0)
call_5935 = relay.TupleGetItem(func_4655_call(), 0)
output = relay.Tuple([call_5886,call_5909,var_5910,call_5934,])
output2 = relay.Tuple([call_5887,call_5911,var_5910,call_5935,])
func_5936 = relay.Function([var_5910,], output)
mod['func_5936'] = func_5936
mod = relay.transform.InferType()(mod)
mutated_mod['func_5936'] = func_5936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5937 = relay.var("var_5937", dtype = "float32", shape = (24,))#candidate|5937|(24,)|var|float32
func_5936_call = mutated_mod.get_global_var('func_5936')
call_5938 = func_5936_call(var_5937)
output = call_5938
func_5939 = relay.Function([var_5937], output)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4101_call = mod.get_global_var('func_4101')
func_4102_call = mutated_mod.get_global_var('func_4102')
call_5966 = func_4101_call()
call_5967 = func_4101_call()
func_4423_call = mod.get_global_var('func_4423')
func_4424_call = mutated_mod.get_global_var('func_4424')
call_5975 = relay.TupleGetItem(func_4423_call(), 3)
call_5976 = relay.TupleGetItem(func_4424_call(), 3)
output = relay.Tuple([call_5966,call_5975,])
output2 = relay.Tuple([call_5967,call_5976,])
func_5986 = relay.Function([], output)
mod['func_5986'] = func_5986
mod = relay.transform.InferType()(mod)
output = func_5986()
func_5987 = relay.Function([], output)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_6009 = func_2282_call()
call_6010 = func_2282_call()
uop_6036 = relay.cos(call_6009.astype('float32')) # shape=(12, 15, 4)
uop_6038 = relay.cos(call_6010.astype('float32')) # shape=(12, 15, 4)
func_5986_call = mod.get_global_var('func_5986')
func_5987_call = mutated_mod.get_global_var('func_5987')
call_6045 = relay.TupleGetItem(func_5986_call(), 1)
call_6046 = relay.TupleGetItem(func_5987_call(), 1)
func_713_call = mod.get_global_var('func_713')
func_717_call = mutated_mod.get_global_var('func_717')
const_6052 = relay.const([3,-1,1,-9,2,6,-8,8,3,-6,-6,2,-7,-1,5,9,10,-7,2,3,-9,-5,-7,7,-4,10,-7,-3,-1,9,-10,2,-8,10,-6,-5,3,-1,4,10,-1,6,-3,4,5,10,2,5,2,2,-10,10,-9,-4,1,3,-4,-1,9,-3,-1,-10,-4,2,2,-5,-3,4,5,8,-1,9,-9,-4,-8,-5,-1,-1,-1,4,-1,4,1,-7,-7,6,8,-5,6,7,8,4,-8,8,-1,3,-9,-5,6,-1,-9,-2,2,5,-7,-3,-4,-6,-3,-2,-7,6,1,-6,-3,1,-4,10,10,-4,-6,2,6,-4,4,-5,2,-5,-1,1,2,8,7,-1,-1,-2,6,1,-3,2,3,-8,-9,8,-6,5,-3,3,3,6,3,-3,3,-10,8,-6,1,4,9,-1,-10,-4,-3,4,-2,-8,-8,5,-4,2,1,1,-1,2,-6,6,3,-1,-6,-2,5,7,-2,9,-9,6,-6,-2,3,-9,-8,6,-3,-10,4,-9,-2,4], dtype = "int64")#candidate|6052|(198,)|const|int64
call_6051 = relay.TupleGetItem(func_713_call(relay.reshape(const_6052.astype('int64'), [3, 6, 11]), relay.reshape(const_6052.astype('int64'), [3, 6, 11]), ), 0)
call_6053 = relay.TupleGetItem(func_717_call(relay.reshape(const_6052.astype('int64'), [3, 6, 11]), relay.reshape(const_6052.astype('int64'), [3, 6, 11]), ), 0)
output = relay.Tuple([uop_6036,call_6045,call_6051,const_6052,])
output2 = relay.Tuple([uop_6038,call_6046,call_6053,const_6052,])
func_6096 = relay.Function([], output)
mod['func_6096'] = func_6096
mod = relay.transform.InferType()(mod)
mutated_mod['func_6096'] = func_6096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6096_call = mutated_mod.get_global_var('func_6096')
call_6097 = func_6096_call()
output = call_6097
func_6098 = relay.Function([], output)
mutated_mod['func_6098'] = func_6098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mod.get_global_var('func_3478')
func_3479_call = mutated_mod.get_global_var('func_3479')
call_6116 = relay.TupleGetItem(func_3478_call(), 0)
call_6117 = relay.TupleGetItem(func_3479_call(), 0)
func_2816_call = mod.get_global_var('func_2816')
func_2819_call = mutated_mod.get_global_var('func_2819')
const_6121 = relay.const([-1.136575,-2.164783,5.381093,0.587279,-1.730336,9.793426,-5.951079,2.813990,-4.226134,8.438239,2.291786,-2.787184,-8.057580,0.434981,-8.848630,8.094701,-3.357106,6.744476,-1.748685,4.321603,-4.972319,-7.500438,5.315266,9.071833,4.057774,9.929427,9.402096,-8.085045,-0.274237,-5.837082], dtype = "float64")#candidate|6121|(30,)|const|float64
const_6122 = relay.const([3,5,-4,7,9,-8,7,-4,-6,6,-3,3,-5,-1,3,8,5,-5,8,-8,-2,-10,4,8,2,10,-5,5,9,6,9,-6,-9,5,5,-6,2,7,-2,10,3,9,-2,7,-2,3,-10,10,-2,-7,-10,7,9,-2,3,6,1,-1,10,6,2,7,-10,1,2,10,-3,8,3,4,1,9,3,-6,-9,-9,2,4,3,-4,3,8,3,9,-5,1,1,9,1,1,10,2,3,5,-1,-2,-5,2,8,3,2,-1,-5,1,8,7,-9,9,6,10,3,4,2,-5,7,4,-3,6,-3,-5,6,-8,-4,9,-3,9,-10,-3,1,1,-7,9,7,-7,2,-3,5,-3,10,-8,2,-10,-2,-3,2,-1,8,-8,-7,7,-8,-8,-2,3,5,-7,-1,-7,10,6,-3,-1,-8,6,-4,5,-3,-7,3,1,3,7,4,9,-6,-8,-1,-2,7,-6,-10,3,3,-2,-9,-6,-10,-8,-7,-10,9,3,-6,1,-2,-4,-8,-8,6,9,3,-10,10,-9,5,1,-7,8,-7,9,-5,-2,2,6,-1,5,-2,-9,5,9,-5,-7,-3,10,-3,-1,-3,-3,-4,3,4,1,5,8,6,-3,8,-7,-5,2,5,-6,6,-3,10,8,-6,-2,9,-4,-5,-7,-6,-3,1,-9,-9,-9,6,-7,-10,10,4,-10,10,-9,2,10,-2,9,10,-4,-2,-6,-4,3,-8,1,-7,-8,-6,3,-4,-6,-8,2,2,7,-8,4,-5,-8,-2,-6,4,7,10,-8,5,-3,-10,2,-4,7,3,-5,-10,3,4,2,-3,7,-9,2,-8,10,1,-1,-1,6,-10,2,4,2,3,5,3,3,-9,-7,-9,7,8,-4,6,1,-3,-6,8,-4,-1,9,4,-7,7,10,-10,-8,2,-7,4,-4,3,-3,-9,-2,-9,-6,6,-6,9,1,-2,10,-10,4,-7,10,-10,2,3,4,6,-5,-5,-5,6,4,4,-1,10,-8,-6,8,-5,-7,-4,-10,-3,5,5,-2,6,6,1,4,-5,-8,-3,8,7,-6,-8,-3,9,-9,-8,5,9,3,3,1,2,-10,8,-2,-3,7,-3,2,-8,8,6,-1,-7,6,4,7,-9,-10,2,3,10,-9,-4,-7,-6,10,10,-8,8,4,-1,7,-7,6,-8,-9,3,-1,10,9,5,-7,-3,-2,9,4,-9,10,9,-7,7,5,-3,6,6,-9,-7,6,1,2,3,2,6,-8,-7,1,-1,3,3,-5,-7,10,1,5,-1,6,2,6,9,4,-10,-10,-1,5,4,-5,-6,-4,-10,-3,-5,-4,6,-6,5,10,5,8,-3,-4,-5,-8,3,-8,-1,3,-9,-3,-9,1,-1,1,1,3,-10,-2,5,6,2,-10,-6,-6,-10,-3,10,-4,4,-6,-3,-10,-8,-10,4,1,-1,-8,-6,3,5,-6,9,-7,-5,8,4,3,-2,-4,-10,-2,-8,9,7,1,-9,9,6,10,9,-1,6,4,10,6,-5,-10,-1,8,-2,-1,5,-6,-6,-6,4,9,-3,10,10,-3,4,-9,-4,-2,7,7,3,-7,-2,7,10,8,8,-7,3,5,-5,4,-5,-6,-10,-6,-8,6,-6,6,7,-9,3,5,-6,-5,7,8,6,4,-9,-8,5,-7,-7,7,8,-8,2,6,4,-6,-1,-2,-10,-2,9,8,-6,-3,1,-6,5,-1,-9,-4,-10,-3,5,-7,-4,-8,9,-6,-2,-7,-10,3,8,4,-2,-10,7,3,-1,-8,1,9,-3,-6,-6,7,5,1,5,1,-4,-2,-4,-2,7,-1,8,-10,-5,-6,-9,-6,7,8,-5,-1,-9,9,-10,-8,2,7,9,3,-2,-6,-3,5,-10,-4,-1,-3,8,4,2,4,3,-8,-7,-10,-1,1,-7,-6,1,-3,2,5,-7,-7,2,6,5,10,6,-2,-6,-3,-9,-1,6,5,1,10,-8,8,-10,-7,-10,-6,9,-5,3,8,-6,4,-5,2,6,4,8,-4,-8,-3,8,-7,9,1,-10,4,2,-8,5,-4,3,-5,-2,1,-9,-2,-6,-5,-1,-7,-7,-8,8,-5,7,6,-7,-1,1,1,-8,1,2,-9,2,5,-6,8,1,9,-1,8,-7,9,10,-1,4,2,-8,8,-6,9,8,-8,-9,4,3,1,10,-9,1,1,-2,9,4,9,-2,4,4,-6,-10,-6,-4,-2,-9,7,2,3,-2,1,-4,6,9,-6,1,-7,-4,-1,-1,5,7,-8,-1,-1,7,-9,-4,-7,-2,-5,6,-3,4,1,8,-5,-9,3,8,-2,-8,8,-5,-3,7,-1,10,3,7,-3,-9,1,-3,-7,8,10,4,10,-10,-8,2,9,-3,-8,-8,7,-9,-5,-3,-7,-6,9,-2,9,3,-10,9,7,-4,2,5,-9,-8,-7,9,-1,1,-2,8,-5,-1,6,-4,9,7,8,-3,-4,-1,9,7,4,-10,10,-10,-1,-10,8,-9,2,2,-5,8,3,4,-9,2,8,-10,9,3,-10,6,-7,-6,-8,8,3,-7,-5,-10,4,10,3,-2,9,-2,-10,-8,1,7,-4,7,1,6,6,2,6,-4,3,1,3,2,2,-2,6,4,-4,-9,-6,-3,-9,-2,9,5,-2,-6,2,10,-10,8,-2,5,-5,1,9,6,2,-4,6,3,-8,4,-8,5,-7,-3,-7,-4,-3,6,2,-10,1,-5,7,-4,-8,-6,-3,4,4,-8,6,-5,-9,-2,2,5,-8,-8,-8,-2,1,3,-9,-3,-6,5,-4,-10,-1,4,-4,5,-7,9,-5,2,-8,-1,5,3,-4,-1,1,1,-6,3,4,-4,-3,8,5,-6,-8,2,-1,-3,5,5,-9,-8,-3,-5,-3,10,3,3,-10,2,8,-1,1,7,-10,-6,1,4,-8,-3,-9,6,4,3,-10,4,-9,6,1,-9,-6,-1,-10,-2,-5,7,1,9,3,-9,-5,1,-8,-7,10,9,3,-4,-7,9,-5,-6,-10,-2,-5,5,4,7,3,-10,-9,1,-10,-5,3,-9,-10,5,-9,4,5,-7,5,2,7,-5,2,-8,-10,9,7,-4,-2,9,-5,9,-2,1,-10,9,5,-4,7,9,-7,5,-6,-2,-9,4,-2,3,1,3,-9,9,-4,10,8,-3,6,10,-6,-2,3,-8,-9,3,7,1,8,-9,-6,-6,-8,1,6,8,6,-6,6,-8,-4,-6,6,-8,-9,9,-10,10,-3,-2,6,8,9,-3,-7,-3,3,-6,7,5,5,-3,-8,-10,6,7,-1,-4,-10,-9,-1,2,2,-2,1,6,1,10,-2,8,2,10,2,-8,-2,-3,-9,-6,10,9,7,-9,5,-8,10,5,-3,7,-8,2,-4,-4,8,4,-1,-1,-10,-7,-8,10,-2,9,-1,-3,-3,-10,7,-2,5,5,10,-4,-4,5,-7,9,-1,7,7,10,4,-9,-5,6,-6,6,6,-6,5,4,6,3,4,-9,9,-4,-9,-2,3,-4,10,7,-2,-6,-6,-8,4,10,-1,-10,8,1,-7,2,4,3,6,10,4,-6,8,3,-5,-1,-3,7,7,1,-5,-7,6,3,-1,1,-2,-6,-1,4,3,6,-8,-9,3,10,10,-4,-7,-2,3,4,10,-6,8,-1,-5,8,10,-8,-7,8,6,-8,1,9,-3,9,-2,6,-5,2,-4,3,2], dtype = "int8")#candidate|6122|(1404,)|const|int8
call_6120 = relay.TupleGetItem(func_2816_call(relay.reshape(const_6121.astype('float64'), [30,]), relay.reshape(const_6122.astype('int8'), [1404,]), ), 0)
call_6123 = relay.TupleGetItem(func_2819_call(relay.reshape(const_6121.astype('float64'), [30,]), relay.reshape(const_6122.astype('int8'), [1404,]), ), 0)
func_2816_call = mod.get_global_var('func_2816')
func_2819_call = mutated_mod.get_global_var('func_2819')
call_6126 = relay.TupleGetItem(func_2816_call(relay.reshape(call_6120.astype('float64'), [30,]), relay.reshape(const_6122.astype('int8'), [1404,]), ), 0)
call_6127 = relay.TupleGetItem(func_2819_call(relay.reshape(call_6120.astype('float64'), [30,]), relay.reshape(const_6122.astype('int8'), [1404,]), ), 0)
func_5776_call = mod.get_global_var('func_5776')
func_5778_call = mutated_mod.get_global_var('func_5778')
call_6140 = relay.TupleGetItem(func_5776_call(), 0)
call_6141 = relay.TupleGetItem(func_5778_call(), 0)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_6145 = func_2282_call()
call_6146 = func_2282_call()
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_6162 = relay.TupleGetItem(func_2030_call(), 0)
call_6163 = relay.TupleGetItem(func_2031_call(), 0)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_6167 = func_3339_call()
call_6168 = func_3339_call()
func_4423_call = mod.get_global_var('func_4423')
func_4424_call = mutated_mod.get_global_var('func_4424')
call_6170 = relay.TupleGetItem(func_4423_call(), 2)
call_6171 = relay.TupleGetItem(func_4424_call(), 2)
output = relay.Tuple([call_6116,call_6120,const_6121,const_6122,call_6126,call_6140,call_6145,call_6162,call_6167,call_6170,])
output2 = relay.Tuple([call_6117,call_6123,const_6121,const_6122,call_6127,call_6141,call_6146,call_6163,call_6168,call_6171,])
func_6172 = relay.Function([], output)
mod['func_6172'] = func_6172
mod = relay.transform.InferType()(mod)
output = func_6172()
func_6173 = relay.Function([], output)
mutated_mod['func_6173'] = func_6173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3911_call = mod.get_global_var('func_3911')
func_3912_call = mutated_mod.get_global_var('func_3912')
call_6191 = relay.TupleGetItem(func_3911_call(), 0)
call_6192 = relay.TupleGetItem(func_3912_call(), 0)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_6195 = relay.TupleGetItem(func_1932_call(), 0)
call_6196 = relay.TupleGetItem(func_1934_call(), 0)
output = relay.Tuple([call_6191,call_6195,])
output2 = relay.Tuple([call_6192,call_6196,])
func_6205 = relay.Function([], output)
mod['func_6205'] = func_6205
mod = relay.transform.InferType()(mod)
mutated_mod['func_6205'] = func_6205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6205_call = mutated_mod.get_global_var('func_6205')
call_6206 = func_6205_call()
output = call_6206
func_6207 = relay.Function([], output)
mutated_mod['func_6207'] = func_6207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mod.get_global_var('func_4567')
func_4569_call = mutated_mod.get_global_var('func_4569')
call_6216 = relay.TupleGetItem(func_4567_call(), 0)
call_6217 = relay.TupleGetItem(func_4569_call(), 0)
output = relay.Tuple([call_6216,])
output2 = relay.Tuple([call_6217,])
func_6237 = relay.Function([], output)
mod['func_6237'] = func_6237
mod = relay.transform.InferType()(mod)
mutated_mod['func_6237'] = func_6237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6237_call = mutated_mod.get_global_var('func_6237')
call_6238 = func_6237_call()
output = call_6238
func_6239 = relay.Function([], output)
mutated_mod['func_6239'] = func_6239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5715_call = mod.get_global_var('func_5715')
func_5717_call = mutated_mod.get_global_var('func_5717')
call_6275 = relay.TupleGetItem(func_5715_call(), 0)
call_6276 = relay.TupleGetItem(func_5717_call(), 0)
func_5986_call = mod.get_global_var('func_5986')
func_5987_call = mutated_mod.get_global_var('func_5987')
call_6286 = relay.TupleGetItem(func_5986_call(), 0)
call_6287 = relay.TupleGetItem(func_5987_call(), 0)
output = relay.Tuple([call_6275,call_6286,])
output2 = relay.Tuple([call_6276,call_6287,])
func_6291 = relay.Function([], output)
mod['func_6291'] = func_6291
mod = relay.transform.InferType()(mod)
output = func_6291()
func_6292 = relay.Function([], output)
mutated_mod['func_6292'] = func_6292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mod.get_global_var('func_5986')
func_5987_call = mutated_mod.get_global_var('func_5987')
call_6340 = relay.TupleGetItem(func_5986_call(), 0)
call_6341 = relay.TupleGetItem(func_5987_call(), 0)
func_4003_call = mod.get_global_var('func_4003')
func_4006_call = mutated_mod.get_global_var('func_4006')
const_6351 = relay.const([1,-3,-4,-1,-10,9,-8,4,7,-8,2,-7,-4,7,-4,-6,-8,9,-5,-8,-5,9,-6,-5,-10,-1,7,-7,2,9,-10,2,7,1,-4,-9,6,10,-8,4,-2,-10,-4,-7,5,-4,-4,-5,10,3,5,-2,-9,-4,9,-4,-2,1,-3,2,-6,-3,3,-3,3,6,7,10,2,2,-9,-4,1,7,-4,10,-3,4,10,-10,3,-1,-6,6,-5,1,5,5,3,-9,-8,8,-3,-9,10,-6,-9,-3,9,5,10,-8,-3,10,-2,2,-8,-3,-5,-4,4,-9,-8,-10,-4,3,-10,6,1,-9,4,4,6,-1,-2,7,4,10,8,10,-4,-3,-3,8,-6,-6,-10,2,-8,6,-7,-7,-9,-2,-7,-9,7,-5,-5,-6,-2,3,5,-10,6,4,-1,4,-7,8,-3,3,1,2,-3,-6,1,8,5,-8,6,-6,-2,-8,9,3,3,1,5,9,-2,-2,-6,-6,8,4,7,-2,10,-7,8,-10,7,-6,-7,-2,-1,1], dtype = "int64")#candidate|6351|(198,)|const|int64
call_6350 = relay.TupleGetItem(func_4003_call(relay.reshape(const_6351.astype('int64'), [198, 1])), 3)
call_6352 = relay.TupleGetItem(func_4006_call(relay.reshape(const_6351.astype('int64'), [198, 1])), 3)
output = relay.Tuple([call_6340,call_6350,const_6351,])
output2 = relay.Tuple([call_6341,call_6352,const_6351,])
func_6355 = relay.Function([], output)
mod['func_6355'] = func_6355
mod = relay.transform.InferType()(mod)
mutated_mod['func_6355'] = func_6355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6355_call = mutated_mod.get_global_var('func_6355')
call_6356 = func_6355_call()
output = call_6356
func_6357 = relay.Function([], output)
mutated_mod['func_6357'] = func_6357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_6429 = relay.TupleGetItem(func_1282_call(), 0)
call_6430 = relay.TupleGetItem(func_1284_call(), 0)
func_4073_call = mod.get_global_var('func_4073')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_6450 = func_4073_call()
call_6451 = func_4073_call()
func_3292_call = mod.get_global_var('func_3292')
func_3293_call = mutated_mod.get_global_var('func_3293')
call_6461 = func_3292_call()
call_6462 = func_3292_call()
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_6471 = func_2282_call()
call_6472 = func_2282_call()
func_3769_call = mod.get_global_var('func_3769')
func_3773_call = mutated_mod.get_global_var('func_3773')
const_6485 = relay.const([[9,-9,-3,8,2,-7,-4,-5,-1,-7,-2,-6,2,-3,-9,-10,-2,7,-5,-7,2,10,-1,2,-4,6,1,-8,-1,7,5,8,-4,5,1,-4,8,-2,3,-10,10,2,7,6,1,9,9,-3,2,2,-2,6,-4,-6,2,-3,-1,6,5,7,5,3,-1,1,-6,7,-9,7,-1,10,10,-6,8,-2,-3,-2,5,6,-4,1,10,-10,-3,4,-2,9,-8,7,-8,1,-8,-4,8,10,7,-4,1,5,4,10,-4,10,-6,9,5,-7,-3,-5,1,5,-9,4,-6,6,10,6,6,7,-2,-6,-4,-10,-4,-10,-10,-4,5,-1,-6,-8,2,2,1,-8,4,10,8,7,-4,-10,1,5,9,6,10,4,10,-8,5,-4,3,-9,3,-7,-2,-3,-9,8,4,-5,-9,-6,7,2,3,1,9,9,5,-8,10,-9,-2,7,4,-10,-5,4,4,3,1,5,5,1,-7,6,-2,8,-5,-2,9,4,10,-5,3,4,-4,-5,3,9,-6,-9,2,-4,4,-6,8,6,-9,6,9,-7,9,1,7,-3,-5,-9,2,5,-9,-9,-2,-7,-8,-2,-3,1,10,-5,10,-8,-4,3,2,4,-1,-10,-9,-4,10,-5,7,-4,-6,2,10,-2,-10,-2,6,-6,10,10,3,-8,1,3,-7,-5,-9,-2,8,5,10,-2,3,3,-2,-3,-10,7,4,1,8,-6,-2,5,-2,-2,8,-1,10,4,-9,-8,-10,2,6,5,7,10,-2,3,-5,-8,-7,-6,5,10,9,-2,-4,2,8,-3,-9,-6,7,-4,-4,-7,-3,1,-3,9,10,10,8,5,9,2,-10,10,-10,4,-9,7,4,-8,-9,-10,2,5,9,-7,8,6,-8,7,-1,3,2,1,-10,-2,8,9,1,2,-6,8,-8,1,-3,3,-9,-5,8,6,5,-6,9,6,1,-10,9,-10,6,-3,2,-2,-6,-2,3,10,-6,-4,4,-5,-8,-2,6,-5,5,-9,8,8,10,-6,-5,-2,5,-6,-6,3,-9,-2,-7,7,-5,-9,-10,6,-6,-3,-1,4,1,-6,-2,-10,6,-7,-8,-6,-3,-7,1,-4,-4,-10,2,-2,3,-9,-8,7,2,8,-8,-5,1,-3,3,-1,-4,3,-4,-10]], dtype = "uint32")#candidate|6485|(1, 440)|const|uint32
call_6484 = relay.TupleGetItem(func_3769_call(relay.reshape(const_6485.astype('uint32'), [11, 5, 8]), relay.reshape(const_6485.astype('uint32'), [11, 5, 8]), ), 0)
call_6486 = relay.TupleGetItem(func_3773_call(relay.reshape(const_6485.astype('uint32'), [11, 5, 8]), relay.reshape(const_6485.astype('uint32'), [11, 5, 8]), ), 0)
func_6237_call = mod.get_global_var('func_6237')
func_6239_call = mutated_mod.get_global_var('func_6239')
call_6488 = relay.TupleGetItem(func_6237_call(), 0)
call_6489 = relay.TupleGetItem(func_6239_call(), 0)
bop_6491 = relay.logical_xor(const_6485.astype('int32'), relay.reshape(call_6484.astype('int32'), relay.shape_of(const_6485))) # shape=(1, 440)
bop_6494 = relay.logical_xor(const_6485.astype('int32'), relay.reshape(call_6486.astype('int32'), relay.shape_of(const_6485))) # shape=(1, 440)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_6496 = func_4796_call()
call_6497 = func_4796_call()
bop_6511 = relay.maximum(const_6485.astype('uint64'), relay.reshape(bop_6491.astype('uint64'), relay.shape_of(const_6485))) # shape=(1, 440)
bop_6514 = relay.maximum(const_6485.astype('uint64'), relay.reshape(bop_6494.astype('uint64'), relay.shape_of(const_6485))) # shape=(1, 440)
bop_6529 = relay.logical_and(bop_6511.astype('bool'), relay.reshape(bop_6491.astype('bool'), relay.shape_of(bop_6511))) # shape=(1, 440)
bop_6532 = relay.logical_and(bop_6514.astype('bool'), relay.reshape(bop_6494.astype('bool'), relay.shape_of(bop_6514))) # shape=(1, 440)
output = relay.Tuple([call_6429,call_6450,call_6461,call_6471,call_6488,call_6496,bop_6529,])
output2 = relay.Tuple([call_6430,call_6451,call_6462,call_6472,call_6489,call_6497,bop_6532,])
func_6533 = relay.Function([], output)
mod['func_6533'] = func_6533
mod = relay.transform.InferType()(mod)
output = func_6533()
func_6534 = relay.Function([], output)
mutated_mod['func_6534'] = func_6534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5776_call = mod.get_global_var('func_5776')
func_5778_call = mutated_mod.get_global_var('func_5778')
call_6571 = relay.TupleGetItem(func_5776_call(), 0)
call_6572 = relay.TupleGetItem(func_5778_call(), 0)
func_3014_call = mod.get_global_var('func_3014')
func_3018_call = mutated_mod.get_global_var('func_3018')
const_6575 = relay.const([10,9,-6,5,-1,-1,7,7,-6,-1,-6,6,4,-4,-3,-4,-10,4,5,-5,8,-1,10,5,10,-6,6,6,-9,6,7,4,-4,5,-10,6,-6,4,-4,-3,-6,1,-2,-2,9,-4,-2,6,-9,-3,-1,8,5,7,-3,-4,-1,3,-1,-4,-6,9,-9,2,-7,-6,8,-8,-7,2,5,-1,10,10,8,6,-6,-10,9,10,10,6,1,-1,-9,10,-1,-2,2,6,10,4,6,-9,-9,-3,-9,9,3,10,-4,-7,3,10,3,-7,-8,9,6,-9,10,-6,-10,-1,-4,6,3,-5,-3,4,-8,1,2,10,-1,-5,-2,10,-7,-7,-3,-8,-8,-5,-7,9,9,-1,-1,1,1,-2,8,-7,4,5,-8,-8,-6,-7,3,8,7,3,2,1,9,-8,-7,1,8,-1,-8,3,1,7,-8,-5,6,-3,3,4,7,-8,-7,-6,-6,-3,5,10,-6,3,6,8,-8,-10,5,1,-4,-8,2,5,-2,-4,-4,6,-5,-5,7,-1], dtype = "int8")#candidate|6575|(200,)|const|int8
call_6574 = relay.TupleGetItem(func_3014_call(relay.reshape(const_6575.astype('int8'), [4, 10, 5]), relay.reshape(const_6575.astype('int8'), [4, 10, 5]), ), 0)
call_6576 = relay.TupleGetItem(func_3018_call(relay.reshape(const_6575.astype('int8'), [4, 10, 5]), relay.reshape(const_6575.astype('int8'), [4, 10, 5]), ), 0)
func_5936_call = mod.get_global_var('func_5936')
func_5939_call = mutated_mod.get_global_var('func_5939')
const_6601 = relay.const([1.292952,-7.037467,-2.050396,-9.484114,0.783704,-9.265069,2.258400,7.978050,-0.359360,-2.564456,3.973296,-1.518821,-0.946244,-1.858309,-2.789789,8.458309,5.235267,2.123567,9.273232,6.576654,-1.163440,5.713920,-2.492883,8.779785], dtype = "float32")#candidate|6601|(24,)|const|float32
call_6600 = relay.TupleGetItem(func_5936_call(relay.reshape(const_6601.astype('float32'), [24,])), 2)
call_6602 = relay.TupleGetItem(func_5939_call(relay.reshape(const_6601.astype('float32'), [24,])), 2)
func_3657_call = mod.get_global_var('func_3657')
func_3661_call = mutated_mod.get_global_var('func_3661')
const_6614 = relay.const([8.637355,4.432344,4.569075,-3.640910,2.284690,-5.495846,1.798514,-9.820741,1.303125,6.009413,-6.865225,9.378636,-1.053825,-1.080218,6.998199,8.024532,-6.305769,-6.106314,-5.765649,3.209410,7.952962,-9.018693,9.027197,-4.630369,0.305316,0.581810,-0.735097,2.882529,5.458077,-4.248567,4.259074,-7.032131,-2.947536,-7.355760,1.831856,-5.609858,7.845959,7.271786,3.873653,6.882632,-6.540740,-4.857034,7.661745,4.664004,7.112932,7.748529,-6.548664,-5.958281,-0.038856,3.318300,-5.719106,2.375919,-9.969166,-8.327467,-3.576532,0.468195,-4.651225,0.995564,6.823135,5.366856,-4.049944,-4.529977,-6.744220,6.215877,0.332292,-9.295151,-5.090052,7.526875,5.689135,-1.737852,0.284125,-9.556144,1.696225,9.021831,-7.716264,3.444413,2.665102,6.541383,-8.938752,6.900948,-2.393436,6.827693,0.814169,6.570542,-3.958160,-2.574459,5.148486,-1.162857,-6.638639,-2.849712,-2.406725,3.734055,1.521048,1.771342,2.547751,2.252192,-6.504970,-9.967567,8.130347,-8.661920,8.071578,4.439456,6.649812,4.700628,0.040018,4.945091,0.408131,4.709572,0.970267,-6.742887,1.015895,-1.623754,-0.872136,2.962891,9.813907,0.084776,-9.737633,9.673268,-4.018852,1.864395,-8.035581,6.325816,0.510470,-1.154870,3.618782,7.552148,-1.188681,9.244655,-8.839962,-4.321421,-4.840633,-6.534588,-7.602416,4.797539,-9.824374,-5.261402,4.443233,-9.324800,9.420827,4.686129,4.814779,9.447782,9.672783,-7.960991,-7.717845,2.323230,6.066722,9.250097,7.602929,-4.056517,-6.185695,8.594319,7.875491,-2.257208,-6.645332,5.722280,7.851299,-5.815002,6.823512,-5.677408,6.409979,1.854084,-1.763903,4.465518,6.182191,4.532797,-7.494992,8.309037,9.290353,-5.456662,0.921321,4.683773,1.373635,0.994186,9.867801,-4.403459,1.062272,3.491791,-8.919820,-4.400665,-4.831323,5.283588,-3.276160,-6.527426,1.473176,1.044525,5.102390,3.968116,-2.790206,8.942186,-1.899771,9.809652,6.147723,6.537853,8.992531,7.256184,-1.641375,-3.405240,7.667709,-9.185963,-3.660167,-8.547836,-8.540557,-3.212192,-5.305047,-5.956875,1.981758,1.126127,-4.480283,-4.298382,-1.856967,-9.587718,7.416137,0.655907,0.785159,8.753433,7.103412,9.109341,3.341372,6.092681,-6.702315,-1.681686,4.081008,-0.872733,2.011126,5.582320,6.650038,-1.389860,-8.182796,8.676858,4.128190,4.170141,-2.461912,-2.200712,-4.894409,-1.122016,-9.817874,-0.649017,-4.391839,6.946113,-1.987273,0.911748,-6.888209,-1.228395,5.337422,3.345448,-0.344717,2.130565,2.415640,-2.910285,7.636224,-8.864102,8.860823,2.222164,-7.522053,2.466582,7.634138,-9.484074,-0.872853,3.727723,-1.931999,-0.446325,2.190345,-7.092405,-9.036003,4.107256,8.499757,1.626548,-3.544481,-9.529750,1.867272,1.368425,-3.810221,3.897813,-8.126391,-8.700554,9.575409,5.171444,-0.816848,4.036507,-7.518834,5.629713,9.954984,8.268229,6.932602,-0.446784,8.490191,-5.980291,3.149180,7.260591,-4.882898,-5.617309,-8.518950,-3.501551,2.536620,1.204807,-2.401927,9.881019,1.661670,-7.230063,-1.599645,-3.749794,-6.028596,2.488240,-4.072455,-5.414037,-0.176709,-8.176209,-7.385645,-8.989467,-5.895760,-6.016581,-2.573638,-2.302135,-1.102634,-7.851769,1.231235,-4.190700,6.933596,9.930886,-1.179210,-7.136952,5.283635,-7.805352,-4.290718,9.222464,-5.969959,4.748479,-8.880199,1.894215,-3.685190,5.648432,-7.218623,-9.819970,-3.185001,2.624981,1.271598,8.777152,-0.005145,-1.171419,-3.202648,6.578945,8.151473,7.954490,0.291713,-2.296895,3.515211,6.231082,-5.525182,7.200028,-2.462038,2.892563,0.716256,-8.521296,-8.658426,-1.199507,-9.673331,-9.569593,-6.460908,7.400956,-3.498080,-8.498319,-0.611917,7.266654,8.103272,9.153744,1.077415,6.576646,1.138571,-5.615879,-6.756311,6.706671,-8.726395,8.683408,9.535648,-6.882558,-2.216510,0.756565,5.185894,8.583683,-6.534527,-8.828096,-5.563871,-0.258888,8.179204,6.934050,2.659340,-3.427950,-0.566812,-2.015431,9.733271,7.160187,3.874292,-5.904292,8.611749,5.582243,-3.227773,4.632772,7.163236,-2.453759,-7.371591,9.426669,-8.370505,-7.994126,1.542201,1.546066,2.644325,-2.875957,6.439418,5.957120,8.020426,-1.649297,-3.411571,-4.500036,4.084155,-3.245913,-6.070872,8.127728,-3.434590,-0.133225,8.832047,-5.742719,-1.807696,6.983683,7.935662,0.088454,-5.442727,-0.665590,8.871436,-5.225796,3.862919,4.836907,-3.456310,6.808790,-6.030843,-2.513462,1.615334,-9.334854,-7.991737,5.534412,6.497878,-8.163702,8.122211,-4.996163,4.407164,5.907354,-4.195905,-1.527611,-9.181255,7.264149], dtype = "float64")#candidate|6614|(450,)|const|float64
const_6615 = relay.const([6,-10,1,9,7,-3,-7,4,2,-10,-2,-7,-2,1,-8,8,-6,-8,-2,-8,1,10,4,8,5,-8,2,9,10,-6,8,2,-4,-10,-7,7,-2,4,10,-2,1,-1,7,6,10,6,6,2,8,8,10,3,-2,-8,10,-9,-1,-5,10,8,3,-8,3,1,-1,9,6,-3,-9,-1,2,2,-2,-4,8,2,7,2,-9,-3,2,2,-2,-6,-8,3,-9,-5,-4,3], dtype = "uint64")#candidate|6615|(90,)|const|uint64
var_6616 = relay.var("var_6616", dtype = "int64", shape = (198,))#candidate|6616|(198,)|var|int64
call_6613 = relay.TupleGetItem(func_3657_call(relay.reshape(const_6614.astype('float64'), [1, 450]), relay.reshape(const_6615.astype('uint64'), [90,]), relay.reshape(var_6616.astype('int64'), [198,]), ), 2)
call_6617 = relay.TupleGetItem(func_3661_call(relay.reshape(const_6614.astype('float64'), [1, 450]), relay.reshape(const_6615.astype('uint64'), [90,]), relay.reshape(var_6616.astype('int64'), [198,]), ), 2)
output = relay.Tuple([call_6571,call_6574,const_6575,call_6600,const_6601,call_6613,const_6614,const_6615,var_6616,])
output2 = relay.Tuple([call_6572,call_6576,const_6575,call_6602,const_6601,call_6617,const_6614,const_6615,var_6616,])
func_6638 = relay.Function([var_6616,], output)
mod['func_6638'] = func_6638
mod = relay.transform.InferType()(mod)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6639 = relay.var("var_6639", dtype = "int64", shape = (198,))#candidate|6639|(198,)|var|int64
func_6638_call = mutated_mod.get_global_var('func_6638')
call_6640 = func_6638_call(var_6639)
output = call_6640
func_6641 = relay.Function([var_6639], output)
mutated_mod['func_6641'] = func_6641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4653_call = mod.get_global_var('func_4653')
func_4655_call = mutated_mod.get_global_var('func_4655')
call_6675 = relay.TupleGetItem(func_4653_call(), 0)
call_6676 = relay.TupleGetItem(func_4655_call(), 0)
uop_6684 = relay.sin(call_6675.astype('float32')) # shape=(6, 9, 1)
uop_6686 = relay.sin(call_6676.astype('float32')) # shape=(6, 9, 1)
bop_6689 = relay.less(uop_6684.astype('bool'), relay.reshape(call_6675.astype('bool'), relay.shape_of(uop_6684))) # shape=(6, 9, 1)
bop_6692 = relay.less(uop_6686.astype('bool'), relay.reshape(call_6676.astype('bool'), relay.shape_of(uop_6686))) # shape=(6, 9, 1)
output = relay.Tuple([bop_6689,])
output2 = relay.Tuple([bop_6692,])
func_6699 = relay.Function([], output)
mod['func_6699'] = func_6699
mod = relay.transform.InferType()(mod)
mutated_mod['func_6699'] = func_6699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6699_call = mutated_mod.get_global_var('func_6699')
call_6700 = func_6699_call()
output = call_6700
func_6701 = relay.Function([], output)
mutated_mod['func_6701'] = func_6701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5431_call = mod.get_global_var('func_5431')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_6714 = relay.TupleGetItem(func_5431_call(), 0)
call_6715 = relay.TupleGetItem(func_5432_call(), 0)
output = call_6714
output2 = call_6715
func_6717 = relay.Function([], output)
mod['func_6717'] = func_6717
mod = relay.transform.InferType()(mod)
output = func_6717()
func_6718 = relay.Function([], output)
mutated_mod['func_6718'] = func_6718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5471_call = mod.get_global_var('func_5471')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_6719 = relay.TupleGetItem(func_5471_call(), 0)
call_6720 = relay.TupleGetItem(func_5472_call(), 0)
func_1811_call = mod.get_global_var('func_1811')
func_1814_call = mutated_mod.get_global_var('func_1814')
var_6727 = relay.var("var_6727", dtype = "float64", shape = (30,))#candidate|6727|(30,)|var|float64
call_6726 = relay.TupleGetItem(func_1811_call(relay.reshape(var_6727.astype('float64'), [1, 6, 5])), 1)
call_6728 = relay.TupleGetItem(func_1814_call(relay.reshape(var_6727.astype('float64'), [1, 6, 5])), 1)
func_5840_call = mod.get_global_var('func_5840')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_6735 = func_5840_call()
call_6736 = func_5840_call()
func_3437_call = mod.get_global_var('func_3437')
func_3442_call = mutated_mod.get_global_var('func_3442')
const_6739 = relay.const([[-1.722480,-5.994483,-5.200143,9.313412,-0.885103,4.610667,-0.677839,5.678826,-3.963214,6.838056,-4.637046,-1.667443,0.791871,0.403541,-5.548418,5.908818,9.264399,-8.956120,-0.684389,4.597301,-0.602671,5.679817,9.513245,-7.104039,-9.705439,-8.625509,-7.838047,-3.852509,-7.069200,8.600763,-7.733146,-9.634781,-5.914094,-1.936714,-6.175762,5.211463,-3.581255,9.491523,-9.856146,1.928016,-1.205796,2.124337,0.083611,-4.665241,-2.270227,-1.937557,-7.182839,-6.069426,3.048898,-6.827105,-8.057370,-9.459245,-6.987520,-1.077944,9.219722,8.165252,8.042487,-8.670692,5.450142,9.381941,9.611366,-7.588665,-6.726740,-8.451493,7.586383,0.738095,6.838715,-0.240647,-1.057212,-5.448146,3.496185,0.106064,-2.861787,7.192208,-6.363641,9.095692,-5.277718,-4.108412,-8.547047,-2.071277,7.233347,-9.308967,-0.405852,-5.633429,8.250867,-0.260517,-6.826741,-4.097461,-3.469068,-3.238689,-7.994015,-3.109200,-3.288218,3.435480,7.249456,-1.342333,1.344682,5.300246,-6.209130,-1.949757,-6.982714,-9.975197,-1.846102,-1.689280,-0.763067,-5.558814,-5.173903,6.425892,2.675526,-0.836173,-4.625318,1.422088],[3.620806,3.311438,-3.953597,7.924026,5.759800,4.406387,-2.353778,-3.404989,3.262590,8.738342,5.457372,-6.086721,5.979469,5.223775,7.487506,-5.261987,-4.339414,-8.357962,2.036269,9.543373,4.583004,5.906806,-0.446794,-9.535680,-4.328160,-4.383096,-7.707205,-0.527379,9.494806,-9.648220,-2.876266,3.803016,-4.071783,7.539356,6.296278,-4.361381,0.105429,4.057387,3.264069,2.966510,1.885153,6.023403,-0.443255,-8.114267,-6.707387,1.643985,2.089436,7.118568,-7.333976,9.044484,3.064837,2.345393,6.301608,0.932171,-5.270188,-3.709499,-5.470737,-3.805363,2.501228,-0.452527,1.602508,-6.798926,-2.232394,-1.067143,-2.750939,-4.403179,-4.134260,8.139106,-9.242916,-8.677861,5.396467,5.263874,5.136882,8.578921,-9.263210,-5.264351,3.596093,-4.688567,-9.054776,-3.013322,-8.321076,-4.258665,-9.903021,7.544631,-0.355908,-8.242271,-7.029651,1.871783,4.491497,5.594987,-2.000293,9.642852,-5.661634,2.179481,-7.497846,-5.729893,4.896147,3.336213,-1.688307,-9.355143,2.449627,-2.581143,-9.028308,3.456264,-3.346179,7.056427,-2.991163,-0.327473,-4.343785,6.089041,-0.383208,-2.040389],[-7.212480,0.799201,-8.940518,-7.242566,-3.622995,3.305879,-4.344257,-9.238043,5.237602,-4.808864,-6.816438,0.443764,-6.021601,-8.909036,-0.790154,-1.423095,-7.417545,2.456593,-6.341289,-3.279452,-3.196754,0.738148,-1.446154,-5.637885,-5.108702,7.780948,9.245951,1.381868,3.483685,-2.705721,-5.414515,3.858843,0.157270,7.588364,-9.033914,-7.124834,-3.639872,0.145750,-6.817352,-7.125271,-0.211057,3.562451,-5.227469,-5.463655,-0.510398,5.338867,3.515325,-3.922702,9.568416,-4.246635,0.818263,2.713977,1.245647,1.421241,-6.803662,-7.441800,7.446522,-6.289022,-1.238821,-3.058891,-6.552101,-9.504026,-8.311947,-5.970635,-6.625809,7.194322,7.594783,8.147212,2.709946,-3.034502,1.535744,0.339375,7.405363,-6.569679,-5.183043,-9.873425,6.728709,-9.319246,8.860964,8.132195,-3.127336,-0.320264,9.323950,-7.022484,-5.355979,-6.812364,5.727216,-9.103917,-3.082845,-9.895618,2.166725,3.548755,2.323996,-5.589112,-7.601232,1.812774,-6.677042,-3.515204,7.586300,4.841216,-4.480447,0.500710,8.692425,-7.879207,7.241717,-2.214716,7.988342,8.257971,3.468163,-6.771072,5.832136,-7.834490],[1.445667,-4.643111,0.700437,-2.552136,9.976531,4.614367,0.953698,-2.369422,3.879676,-3.726944,-3.779527,2.240029,6.443778,0.641408,7.354946,8.181935,3.240386,-7.860675,1.701525,-0.077676,-0.757536,2.657759,3.510315,-6.927692,-0.616581,0.149517,-8.354185,-2.213788,-9.564891,9.067793,-4.768263,-4.437080,-8.430315,-6.949346,3.606758,-4.065319,1.958059,-3.693467,-7.842408,9.555993,0.774857,0.718309,8.342334,6.534210,-3.339960,-7.984927,4.845187,-1.449642,4.290705,5.045800,3.327713,-8.312433,8.202397,7.457087,-3.840386,-8.232613,1.387440,3.480711,-8.010189,0.974057,1.807101,3.671039,-1.591363,-2.420615,-8.444023,8.667064,-0.553192,-4.012524,-4.714773,4.276807,-7.685560,-6.644707,7.559129,7.464828,-1.706411,-1.730929,-6.716387,9.964827,0.379153,-6.352437,8.031991,1.643208,3.407835,-7.792121,3.764161,-9.674341,1.273090,-0.731153,8.208712,-9.934667,-6.974114,4.921071,-7.479970,9.756525,7.326659,-7.983905,8.402607,-6.095581,1.611790,-2.532094,-7.681472,7.772308,2.430545,-3.885115,6.652629,5.837858,-4.560865,-9.529634,9.618306,-7.090011,1.171524,3.424384],[2.868252,0.722228,-0.116271,8.051863,8.158142,4.765021,-9.818862,2.121279,-8.011931,3.962742,9.884474,-2.108255,-4.608335,6.930899,6.307762,-6.854645,-8.365180,1.597691,-2.466426,8.773924,7.057889,-1.660444,2.912539,2.401497,-2.161574,-9.562053,-6.099944,-9.579774,2.591010,-0.985691,3.322995,0.955859,3.470616,-2.447563,-5.344005,9.728670,-6.512965,5.482935,0.762375,-3.994286,-2.423535,3.699408,8.768123,1.192055,-9.876863,2.022926,-7.565022,7.089883,2.941568,2.279820,-5.285247,-6.028129,7.838792,-7.152167,-1.728096,-7.843243,6.776181,-0.394860,-4.190479,6.715915,0.532749,-7.476911,-7.137371,5.540499,7.742972,1.128138,5.636475,7.360192,6.381498,1.280744,-2.651414,-1.079427,-1.949941,-7.438755,-7.346319,5.049978,-1.378890,-6.631966,1.022068,-9.967219,-6.043608,-4.972565,6.675585,-4.205749,9.649040,0.365146,-7.848122,7.027774,-9.685773,9.461568,-7.380165,-6.517656,-7.004356,2.993861,8.230998,-2.184478,3.193918,5.725294,-5.310858,3.593855,-5.602814,6.797677,1.418421,5.421765,-4.940079,-0.364591,1.400282,1.225664,6.024500,0.357587,8.438754,9.987462],[4.468341,0.077646,-9.600545,0.617032,3.394136,6.026154,-1.559903,-7.383023,7.642868,8.692771,-1.637620,-0.187172,6.036960,-6.376942,-0.533258,7.990691,-1.068406,2.395964,2.242614,7.734060,-4.152699,7.829748,3.251725,8.992664,5.698738,9.101023,-3.474556,8.335794,-7.735975,-2.989016,5.334122,-3.046657,-6.861000,6.910742,-8.462573,0.273687,1.643105,1.425744,-7.457922,-8.474329,4.036100,1.636204,7.524570,4.735119,-9.365568,-2.571949,8.605662,-3.133977,6.016916,-2.807242,-2.351310,-9.483176,-8.679830,5.419220,-8.776483,-3.751897,7.175094,7.536600,8.733310,-3.094148,-8.035305,8.280065,0.215646,-5.332810,8.006063,4.076343,-2.296276,-1.332417,0.537220,9.088087,5.674371,-3.505617,-2.477700,3.323164,-3.414087,0.152239,6.785609,1.770008,-7.505259,2.934144,-1.480640,-2.782298,-8.514646,7.033958,-1.951858,2.404685,1.618081,-6.447220,-1.572163,5.981819,-0.759580,3.002140,9.918317,-8.195576,-2.758573,-0.659858,-7.894426,4.118842,8.088749,4.455076,-2.681028,2.045117,-0.245874,7.211547,9.352961,5.593081,8.753414,4.182930,2.289752,8.139805,4.121945,-6.684308],[-8.829245,-1.177378,9.506435,7.939865,8.855145,8.619657,-4.016895,-1.086760,4.899441,8.494332,-8.982330,8.468187,3.560745,-4.761134,-5.532735,-2.007252,-9.203880,-7.153445,-5.694773,8.397291,-7.954490,0.979172,0.193349,3.120940,-9.053911,-5.397766,8.404473,-7.458778,-9.158915,-1.113304,-0.877886,9.453642,1.977152,-3.984369,7.180894,3.165579,-3.042920,-9.134613,-4.877984,-5.105776,0.864121,-7.985461,-2.672033,5.549230,4.761685,-0.946952,-0.536415,-5.832324,2.695302,-8.417198,5.795954,5.859991,-7.294860,7.666438,9.379132,4.020895,-4.558023,6.098455,1.258150,7.555678,-8.863389,-2.399892,9.380682,0.775600,4.096345,6.924690,7.133915,-9.360219,0.110999,7.589403,6.901154,5.882393,-6.712033,-9.678618,7.231517,-0.942007,0.231621,-1.698147,0.689925,-6.077557,1.550817,0.758467,-2.046119,2.836608,-3.798830,-2.596506,1.487387,1.391001,-2.564650,1.225196,-4.452538,-6.270799,-1.154892,-5.086384,-7.497523,-8.376947,7.719105,-1.383653,0.179917,1.874212,-8.766695,4.861334,6.083105,2.064391,5.048746,2.313851,-7.360342,2.947343,-1.576803,8.816119,-7.170438,5.636723],[8.674809,3.417793,9.551105,-0.472568,-4.365423,1.885396,7.058359,-4.447020,-8.932062,-3.627287,4.862618,8.410805,0.163177,-2.821743,0.590702,5.740062,5.321353,9.879990,7.470145,7.566733,-1.399435,1.349216,6.156027,-5.396039,7.652035,6.654992,-6.856928,4.344526,6.587911,-0.024846,5.772983,8.721664,-0.777507,9.621698,3.950541,-5.716676,8.372671,7.159142,2.638076,-4.411299,-9.742294,6.327495,4.138169,-3.846011,-4.429433,6.057215,2.064976,-1.047615,2.439439,9.283840,-6.751102,-1.050228,-9.007649,1.113452,2.240252,-1.762981,3.929713,4.653751,-5.336917,7.929670,-0.487021,-8.878302,8.515359,4.792492,-3.193209,4.033380,-9.946081,8.692275,7.754114,-8.711057,-9.838842,-4.205442,-5.831107,-8.469349,-3.107038,0.264379,-3.272316,-6.871032,1.057152,4.156808,-6.519541,-2.646271,-1.576200,8.943138,-9.942188,0.626453,6.538637,-0.085099,9.554127,-6.591280,-5.455882,-5.462410,-9.173484,7.337648,-5.921681,5.552187,6.154792,-2.835619,0.069807,-0.130928,4.603416,0.163064,4.476932,4.691346,-1.012576,-8.365615,2.890886,-9.007774,7.611858,5.462003,-7.534482,2.680143],[7.726446,2.990825,9.201685,-7.934325,0.860042,9.826015,-6.287663,7.016408,2.849096,3.638719,-7.132207,-6.348220,4.647160,-2.753710,-8.912559,-7.234927,2.156273,9.195775,2.634282,1.597418,5.760387,6.873624,9.113434,-0.759125,7.310903,-8.784383,2.310856,8.884130,-1.717661,-3.673903,1.479541,-9.684056,2.260650,-5.913022,-6.815054,9.453031,-2.090523,5.711516,-1.061586,-7.322461,2.179209,6.226840,6.524166,-1.909061,-4.244071,7.361151,8.646937,-1.255736,1.217880,4.522825,2.245017,9.955802,0.610536,9.507026,-8.727232,2.993869,-4.459188,2.618643,-1.627238,-1.188682,-1.166118,-1.739241,1.397982,-4.502667,9.109733,-4.414800,7.300855,7.829002,-6.052693,-5.158240,-2.984257,5.169757,-2.810056,5.785623,-6.696100,-0.517295,6.358064,-2.784050,3.252680,8.693478,-8.035905,5.485633,1.968255,-6.305156,-9.580643,-1.262874,9.318032,9.905885,-2.191640,-2.161740,-5.044458,-0.193086,3.242936,7.030629,3.915482,-6.108116,-8.823721,1.771464,-2.323503,-6.334513,-2.362889,9.742180,-8.285320,-0.904778,6.143607,2.185619,6.261757,5.685390,-0.010153,8.449521,7.064999,0.766341],[-3.137954,7.649639,-6.399233,8.568266,2.181454,-7.665201,5.401434,-1.458062,5.980939,4.056067,2.727750,-7.673354,8.432178,-5.566730,2.905338,-3.396441,-3.243443,-5.290727,5.944606,-6.960664,-1.237929,-9.850336,5.858364,6.555500,-0.222524,7.347870,9.141081,3.288859,4.819457,-1.000921,1.360118,-0.347580,-0.263073,6.990171,-2.705765,-0.142171,-8.004071,4.228275,-1.531905,2.337813,6.259796,-3.814763,-3.416379,3.905860,8.287392,-0.058515,-2.299241,4.547683,5.097711,6.825899,-8.893920,-1.966335,-2.829926,-3.356448,-1.187446,-1.791658,-9.444634,9.061629,-1.956309,-4.760140,-8.845729,1.146511,-7.613159,7.990585,2.195445,4.334735,8.754442,-2.228751,2.094797,-3.295999,-6.989784,4.752354,3.235480,4.021213,4.409118,-8.599490,-2.235304,7.785502,-6.966544,-5.338887,1.188861,3.901535,-3.314383,-0.431103,-7.457486,9.625070,8.712384,0.702182,7.165901,0.218902,-5.787638,-6.849256,7.547157,6.899366,4.833802,4.268422,-9.213593,9.432569,-6.847140,-2.534418,-8.032888,-3.108707,7.619810,-9.054184,-3.389059,1.667779,9.457112,-8.226326,6.201529,-4.771454,3.267084,3.792252],[-8.713293,-4.638738,2.257031,0.402443,6.866342,2.999192,6.301419,8.910145,9.379169,0.628722,0.282713,2.201484,5.199852,8.774500,7.151261,-3.040368,2.750477,2.495896,-3.458497,-2.164449,-7.549593,-5.458623,4.350961,4.300033,-0.583577,-1.991828,-2.027627,1.206641,7.284209,5.962721,5.032761,0.077265,-8.552364,8.789579,6.173998,-3.682444,-2.055910,-1.684538,3.696425,-0.243921,-5.881381,3.261037,6.887768,-6.313852,5.506177,6.500760,-3.506445,8.540372,2.331436,6.102685,-5.552977,-4.468475,-6.846546,-4.107713,5.854990,7.034591,4.708472,-0.312356,9.623424,-2.674915,-9.217131,-2.422257,-9.120690,-9.935420,-7.882818,-3.267078,1.413342,4.727818,9.536778,4.548213,7.384810,-3.726349,0.241445,3.332102,-4.104490,7.136895,5.294875,3.944641,1.760299,-4.918573,5.645172,-8.037474,8.379385,-0.430284,-4.842698,3.493601,-4.379711,-3.304736,1.141600,9.899774,6.183743,-4.499870,-5.119309,-1.268363,5.311749,2.506001,-4.450381,-7.049036,-1.158954,-6.077688,-8.459270,-3.272299,-4.369121,3.229282,-4.264531,2.311371,1.131711,-6.360970,2.743898,-7.309868,0.070889,9.884679],[0.555886,-5.147636,-5.230437,-0.664687,-9.910843,9.328756,-8.380917,-7.456636,6.862430,-6.231519,-7.600055,-0.751793,-2.115851,-9.695797,1.251542,6.009528,6.738959,-6.093399,-5.918268,0.868634,1.358652,2.947351,3.069048,-6.676738,0.544195,5.865320,6.687089,8.275949,-2.199288,-3.653157,9.361346,0.857729,9.648375,-4.697208,-9.073800,-5.782688,5.917689,0.352055,-6.398342,8.516517,8.723332,9.899379,5.763097,-2.091309,-6.565666,1.558301,-8.400545,6.494005,-1.445935,4.947843,9.798989,-9.666102,-9.376175,0.965787,9.234320,-4.145928,9.874198,8.978010,9.569527,9.176639,-6.410755,1.081124,2.993968,-4.046726,5.565253,-3.489910,-8.980843,3.057086,0.556994,8.937825,0.285207,6.276325,9.798228,3.272129,-2.349213,-3.289505,0.198953,9.487731,-2.614455,-0.498367,2.295149,-9.362134,2.987436,-4.923362,-7.796595,9.611983,-7.832092,3.774026,-7.081396,-2.707388,8.606460,9.178947,-9.506767,3.718519,7.584745,-2.576694,-3.241659,-0.328317,-0.350476,-0.785344,-2.620449,6.307964,-8.232640,-0.215384,9.920999,0.449768,3.603255,-2.473734,5.383483,2.649349,9.123986,-4.676002],[-9.778870,-5.291096,7.460572,-1.366250,-7.851362,-8.657118,-1.423736,2.738190,0.759300,-4.746095,-3.096356,2.419321,-1.569583,-8.339853,-7.302884,8.651197,3.260504,-6.367650,8.211862,-0.166499,-3.674448,-2.112504,2.018075,-9.581441,8.935852,6.243861,2.976638,2.459503,3.555161,-4.425670,-8.289126,8.471843,3.343816,5.996623,-4.927083,-2.330068,-7.871450,0.647593,7.207893,8.308212,-1.903238,-3.014457,2.144863,0.673989,2.927183,-1.232398,2.329810,9.224814,4.861038,9.811055,-6.340991,-5.585174,9.279623,-1.193134,-8.078077,6.966203,-0.739731,-9.150000,4.888549,0.485568,2.877615,6.658441,4.911161,5.893661,8.299758,-2.027183,9.874650,-9.296665,-2.274078,1.441422,-7.998443,1.341906,-6.957790,-7.188728,8.034436,-5.058214,-5.660464,4.329256,-2.305168,-4.649276,-5.770709,6.000003,-5.558961,-5.493407,-7.609938,4.263248,-0.905577,3.728225,-1.881570,-8.081157,0.277384,4.667144,-4.193294,1.531981,4.683907,-6.761224,-9.240383,1.136634,-0.987209,8.033824,5.682818,8.927273,0.317978,-0.839195,1.388167,5.799706,6.670641,-0.269424,-9.277387,-9.674321,9.911360,3.784252],[-8.147617,-5.260099,-9.311224,2.226678,-1.058690,4.855450,-7.187966,-3.847909,-5.840267,-6.261013,-4.850738,-0.328603,7.718480,-4.351466,8.303910,-3.881818,6.554888,-6.324399,7.666626,4.998938,4.306661,9.305521,8.975758,0.458640,-5.300791,1.476926,-9.925070,4.971928,0.053435,-0.071772,0.389727,-2.021258,-4.099480,-9.420605,9.843704,5.257025,-0.411705,-0.269016,-9.110651,3.001882,7.027185,9.715942,-6.214287,2.818772,4.456465,9.014919,7.463915,6.541251,-4.568271,3.514640,7.132824,-0.460239,6.364891,0.187531,-0.700166,-7.134171,-5.353703,1.073819,-3.481389,-4.020636,1.011204,-1.797028,1.589497,-3.662234,5.307506,0.789422,-0.178680,-4.713929,-9.677299,-8.443833,5.312746,7.335996,-6.373804,-6.995906,9.832252,-9.077717,-8.591010,1.481392,-8.129165,-5.294413,9.341145,0.241904,3.538095,-8.679046,3.826604,5.248823,1.763439,-3.932387,3.865943,0.221922,2.693983,7.216048,-9.503677,-9.002899,-3.494431,2.815077,-8.786993,-5.485206,-0.583089,-7.797510,3.288756,-1.254475,-8.143721,-0.284688,-4.438019,-9.551567,-2.150603,3.359183,0.009690,4.045588,-8.177433,0.560693],[8.740438,8.789963,-6.693816,-8.247187,6.207495,9.436732,7.742814,6.854773,2.585535,-5.380275,-2.008236,-7.754501,0.067255,0.668526,-6.086768,-3.505416,-1.506691,-3.317285,0.420094,-4.268044,6.169933,-8.233040,-1.464362,-9.935420,-9.246407,8.898811,5.846433,-3.845149,0.698307,-9.535831,-9.579467,-1.582773,-3.540799,-2.090138,0.975320,-6.548058,-5.614265,3.105920,9.578393,-8.830396,-6.953050,-3.946936,4.523318,-3.346942,-6.116704,3.128837,-0.373692,-3.156906,-4.071972,-1.436440,6.157428,-6.504000,-1.206677,-1.059745,-4.428007,3.044848,-2.559319,-9.309057,-1.433172,6.176794,2.779890,6.990602,-6.897968,4.770517,-4.474608,-1.463259,-4.214138,3.007975,-4.561572,-0.769273,-1.040456,-0.480388,8.705999,9.950538,0.560903,5.069934,5.670907,-0.106334,-5.565455,-7.402775,-8.864723,-0.666153,2.220236,8.458874,-0.700913,-2.487237,7.740663,2.404594,3.569266,-4.326645,6.211975,-0.876264,-0.444476,-2.157657,-6.158931,-0.751464,6.535829,5.742390,-5.072398,5.646096,6.882469,-6.303404,-7.581229,4.009492,-0.529576,-0.074682,1.353335,-7.894546,-6.970363,-9.855622,2.058309,3.161798],[-7.786502,5.780949,4.269866,1.978443,0.063873,1.474997,9.789469,7.077493,-5.418235,-8.407857,-4.373059,3.846935,4.829165,4.908570,-8.168815,-4.069948,-0.102742,-1.728234,-2.365857,-6.968547,8.791604,7.308695,-3.978846,-9.707031,-6.874590,6.806321,8.059270,3.512667,-5.693952,1.726004,4.536960,1.947562,8.561157,0.452683,1.202682,8.789937,7.100654,-9.346297,-8.527654,-0.535489,4.189290,3.748191,8.361125,6.779419,-7.167798,-4.147866,-0.867645,1.570095,2.743732,6.456667,-5.591799,3.366138,1.775362,2.311984,-7.369834,4.398155,8.262823,-7.071134,5.492218,9.659695,-8.018734,-2.365346,2.809990,4.640587,-9.060344,-2.305760,4.464423,1.826833,4.580401,-7.261624,-7.337605,5.304334,9.246658,-5.134324,3.483897,-5.915494,-3.538070,1.702977,-8.863546,-0.726952,8.997888,5.674098,6.683978,-9.707881,8.667834,-4.044574,-4.082813,-0.872130,-0.200231,-3.482896,-7.028304,4.521588,6.040918,-0.755053,0.285334,0.205291,8.550976,-3.517103,5.243309,1.603936,8.591114,-5.947379,8.794877,3.689660,-1.501412,-0.974857,-1.488267,7.303025,-1.389886,7.896376,-3.351726,-4.591542],[2.928781,-4.238226,0.580636,-6.061783,-0.587817,-9.718002,5.759792,2.873524,-9.992258,-3.584216,8.668540,-5.205651,3.874382,-3.533807,-6.884407,-6.782258,5.723286,-7.090862,-2.901143,0.703982,-3.361632,1.683758,-3.715389,1.611289,-2.731206,0.515051,3.185013,7.922955,-0.625881,-2.185301,-7.814210,-6.834131,-5.254989,3.578910,7.174005,5.756482,-4.397207,0.968054,3.695762,7.957182,-7.857224,0.126988,1.143095,3.285595,-2.334031,-3.334789,-8.070479,-0.741520,-0.190802,1.929026,6.568786,5.523391,3.533153,-3.497689,4.782880,-3.132689,-8.799773,4.919289,-6.877194,7.167143,-5.747328,-6.890581,5.031352,0.563397,-2.092905,1.608644,1.833758,0.721713,-9.437324,3.559014,-7.356410,1.474383,-9.375949,-2.823683,1.579657,1.738034,5.068879,-1.859368,3.874306,-8.179163,8.448212,0.228655,-4.998782,7.173575,-9.869832,-0.658412,2.653693,2.744048,-9.223350,-5.508629,-8.093059,-0.997464,2.659461,-4.661438,-3.742072,-1.318092,-8.793290,2.646887,4.001907,3.884185,0.935038,-5.637892,-1.897388,-3.049067,2.729049,-8.600419,0.616834,8.205447,-2.614584,3.587893,9.533131,-1.963965],[9.443495,-1.802603,-7.527459,-6.398380,-3.206742,-3.709221,-7.873252,9.800281,-1.227816,6.616705,-2.607922,-3.500643,-4.652451,-9.992301,-0.658128,-3.224224,-8.319526,-2.110667,-2.006898,-7.040115,6.500764,5.875299,-2.545741,9.075435,9.222602,-5.980665,6.227020,-4.528948,-7.508793,0.271610,5.281302,-8.360099,9.546953,-0.664761,3.497248,-4.458206,-1.535439,-7.396298,-9.824466,6.766279,1.138933,-2.380376,-9.833343,-0.144231,6.302005,7.687737,4.529792,-2.541410,-8.788132,1.352147,7.927735,-8.322048,8.275257,-3.283641,-0.950143,0.761372,7.372076,0.697848,-4.678936,-6.494104,0.319893,-9.454568,6.774863,6.720616,-8.792180,0.728834,-7.508199,7.522362,1.820796,-6.674011,8.390226,5.193574,6.549074,-0.486449,-3.863903,3.963850,2.724683,0.578293,-3.029523,-6.139153,5.831020,-4.387760,-0.522199,1.736398,-3.961235,1.777784,-5.931118,-9.076780,1.828635,7.255073,-8.398222,-4.952636,6.936377,-9.406051,-5.264061,-4.265317,0.792901,-5.090483,-5.759143,5.325153,1.883755,-4.999435,2.324266,7.164436,4.892618,-9.460234,5.676832,9.426399,-0.785619,-4.129561,6.840507,-6.706514],[5.303806,-4.162760,5.198640,-0.370282,-5.332479,-5.312145,-9.765359,2.422307,-1.319850,0.993794,-7.738143,-2.753354,-0.500889,2.312555,1.095796,-1.805888,-8.140044,-7.384726,-3.038692,-3.097141,6.818473,-2.452845,-7.867280,-1.277886,-7.601816,-4.773228,-5.955866,6.474772,0.723231,-5.078827,8.193457,-1.092014,0.453683,4.872147,5.923650,4.314083,-1.272155,-3.124204,2.463985,5.276730,-7.154116,-6.684045,7.750523,-9.794625,-6.141982,0.678294,3.224897,-3.963459,2.394523,3.618836,1.230313,8.022894,-9.592748,5.215405,-6.789687,6.149452,-9.144763,-0.222879,-3.585254,2.642003,7.285760,-7.573113,-4.677160,-9.089377,-0.482247,-2.738690,-9.784690,8.804976,-3.159473,-4.474229,5.532620,5.421594,9.647235,8.218780,-6.902652,-7.543227,-8.365293,2.006159,3.717934,-8.297456,2.650464,-3.465399,-8.870842,-5.116619,-9.934488,-1.866532,1.737149,6.965074,0.990966,-3.162754,7.085425,2.494029,8.895631,-1.346858,-5.028462,-9.336728,-8.365456,3.212244,-1.984054,2.318484,-7.990249,-0.261355,4.796789,-6.916299,6.622747,6.930813,-0.195526,-6.466376,6.022954,-6.043140,1.398850,9.589627],[6.739167,-5.985852,-7.376024,-0.006109,7.458702,-0.760795,5.308404,2.066123,9.070996,4.579913,-0.920873,0.600356,2.281522,3.353807,-4.411254,-7.513403,-8.213203,1.100093,-2.600757,0.957755,7.507632,-1.113912,0.006431,2.453667,-5.896620,-0.187455,-9.823820,-4.077087,2.856465,-3.778242,-0.256095,-9.677264,3.670925,-7.766659,3.100137,-0.652509,7.316601,4.114955,-7.182720,-8.680235,-2.466979,8.986814,-7.558038,-5.206154,-3.368310,-2.351800,2.238368,3.086683,-5.284133,-2.919534,0.535109,-2.453559,0.320703,0.577500,-2.803321,4.736415,-6.881370,7.530219,-6.905323,4.933562,-4.408985,-7.886023,-7.601416,6.377513,8.450218,-6.296019,-9.366738,8.423380,0.668370,7.945682,-0.279988,-7.233667,-7.264233,-9.986341,0.060273,7.360457,9.750613,5.591003,2.106860,-4.303283,-2.245703,6.819384,-3.648488,-5.861795,-3.817744,6.357802,-4.830693,1.522577,-9.164049,-4.229299,7.306692,9.248768,3.662245,-7.106912,0.120240,4.020571,-5.923009,-2.212492,4.252102,-9.039873,5.511522,1.304517,4.356887,-2.800659,-2.910815,0.920334,-6.685736,-4.663409,4.640235,-2.265032,2.508490,-9.206261],[-7.585090,-1.612916,1.831873,6.011683,5.257385,5.724738,-9.885526,-6.438278,-3.516430,-1.223897,-8.609336,-1.866884,-9.639985,8.267512,-5.196507,4.029360,-0.496835,-0.541578,-1.058825,-3.783215,-6.993431,-9.121964,4.022579,2.933523,-9.886200,-0.980180,-3.174572,-8.848107,4.232063,4.565560,1.146888,1.886737,-2.990753,9.801775,7.871985,-3.940593,0.781554,-9.562546,4.031564,-4.176454,-3.499816,0.264392,3.060483,2.137413,8.277762,-1.190211,8.177192,-2.928536,-2.599183,-7.867075,-3.526363,9.847803,6.916255,-8.338641,-1.007342,-9.971347,-8.156258,9.671824,0.477159,-1.468059,6.863581,8.146631,-9.879820,4.729478,1.966955,9.456938,-9.268465,-2.826977,-8.174762,1.582908,2.966169,5.146972,7.288394,-5.427079,3.637444,8.515639,4.390695,6.227238,-4.655997,-2.412353,-4.787566,9.264022,2.577665,-1.895430,6.276000,-8.221753,8.389458,-3.288258,-9.421211,4.612303,2.890444,5.013922,4.976905,4.502242,4.441527,-9.506437,5.900120,-6.899014,4.243632,-8.686117,-1.741803,8.243131,8.047589,-4.244099,-0.089462,0.949985,-7.591225,1.643624,-4.370987,-1.818403,-4.950688,7.176129],[-5.815409,-5.105720,1.192553,-4.611310,0.480846,7.242873,1.174982,3.254139,-8.161491,-6.516947,7.768616,-9.413335,-6.939010,3.538829,1.884099,-6.411850,-8.847939,5.322042,4.564448,-3.425347,-0.933788,2.724303,0.145715,6.511403,-0.921458,9.116143,3.107866,1.282070,-6.212446,7.655360,6.766980,1.741673,-7.209049,9.310393,9.753093,8.855211,-6.381521,1.346413,1.162851,1.580661,-3.944858,6.477064,-8.003925,5.858706,3.524415,5.224569,-5.202998,-3.059271,7.152532,5.307490,1.915435,-2.387621,3.233103,-0.762277,2.000605,-1.105071,-3.463208,9.178298,-9.652584,9.004095,2.047655,4.565319,8.320640,6.592990,3.254281,5.188500,4.797890,-0.064854,-9.959345,8.028541,-2.219748,4.761912,9.135581,-5.940941,-1.696827,4.660305,-1.398321,0.275670,-0.998715,-0.781261,3.469612,5.552644,-4.201535,-4.812710,-2.022873,-7.354202,2.643356,0.475317,-5.007121,9.208247,5.185550,0.831178,5.806038,5.604197,7.403341,3.011534,-0.679345,3.342786,8.073163,4.998648,0.647427,-7.754898,8.429907,6.555342,6.500722,-8.906822,1.397888,-6.151607,6.690151,-6.540110,-2.083592,1.765145],[-0.763933,8.132824,-6.510176,8.120575,-0.037999,0.711765,3.399104,3.234814,7.620269,9.010165,0.098892,7.472139,-9.889467,5.003661,2.241762,1.211750,0.796915,8.269721,7.082872,5.084146,8.731659,3.622882,2.821404,6.623280,0.068198,4.900763,2.522598,7.805473,6.744469,-6.592872,7.490058,-5.717354,-8.361742,6.681444,6.725667,1.308665,4.880317,6.711238,2.821624,4.100400,-5.323376,-7.002658,2.228374,9.733372,-6.693253,4.386133,1.708135,8.388124,-9.756893,5.519593,8.876287,-0.526233,5.418910,-8.097981,-4.717464,7.159218,-5.423072,-8.481705,8.412454,-0.205592,2.122632,-2.041664,-0.712954,-7.659013,-2.952974,-4.415302,-5.142414,-0.884050,-7.397913,2.082316,-3.613558,5.892551,-9.901437,-8.820230,1.417795,9.038909,-2.537482,1.338600,9.832108,4.079529,5.294940,-7.944994,-1.341651,-2.249148,8.756132,-5.392270,-2.341263,-1.321081,0.892443,5.089398,-6.985177,-7.707434,-2.330981,8.492893,0.177093,3.859636,-4.894652,0.174199,-8.132075,9.291197,0.624759,2.688582,-9.174907,-1.939255,-5.658982,-3.371747,-1.241841,2.281181,4.640592,5.763441,-0.665217,7.346220],[-5.254842,1.490451,-3.918879,-7.504485,-6.753236,-9.899759,8.972947,6.710132,-2.466311,-2.459600,-8.744671,3.195918,-0.032488,-1.315517,7.115991,0.598701,-8.416863,-1.260086,-4.982416,-8.343278,-5.522821,0.646584,0.639887,3.193706,-6.906927,4.070782,9.603210,-0.968740,3.302952,-3.003169,6.314208,-3.995360,7.967762,-5.051137,2.764366,-4.691597,5.149834,7.705475,-1.230407,-6.007716,6.161682,8.818303,-2.006120,-5.468045,0.696032,-8.572264,1.779019,-4.129811,8.014889,-1.225351,-5.092391,-9.751825,-4.020008,-9.819002,-1.655903,5.563092,-0.484791,4.962215,5.167841,-0.821673,-1.676355,9.939700,1.223854,-4.633050,-7.264377,5.919783,-9.530988,3.658583,-2.273308,1.269756,-2.070860,-5.516769,-1.639039,-4.651052,1.104665,-3.973963,5.891340,5.118786,1.258985,-3.037917,-8.266639,-2.809797,5.858710,8.725280,-5.276962,9.191659,-8.005956,1.994530,2.018870,-5.389837,9.953435,-0.547916,-3.058165,6.568560,-3.085883,1.532034,-4.573313,9.522499,8.995552,4.549844,8.683039,0.565628,-5.764306,-8.940457,-1.702079,-5.526428,2.691859,-2.610350,8.139177,-1.177691,9.895852,-6.102229]], dtype = "float32")#candidate|6739|(24, 112)|const|float32
call_6738 = relay.TupleGetItem(func_3437_call(relay.reshape(const_6739.astype('float32'), [4, 672]), relay.reshape(const_6739.astype('float64'), [4, 672]), relay.reshape(const_6739.astype('float64'), [4, 672]), relay.reshape(const_6739.astype('bool'), [4, 672]), ), 2)
call_6740 = relay.TupleGetItem(func_3442_call(relay.reshape(const_6739.astype('float32'), [4, 672]), relay.reshape(const_6739.astype('float64'), [4, 672]), relay.reshape(const_6739.astype('float64'), [4, 672]), relay.reshape(const_6739.astype('bool'), [4, 672]), ), 2)
func_759_call = mod.get_global_var('func_759')
func_761_call = mutated_mod.get_global_var('func_761')
var_6760 = relay.var("var_6760", dtype = "uint16", shape = (845,))#candidate|6760|(845,)|var|uint16
call_6759 = relay.TupleGetItem(func_759_call(relay.reshape(var_6760.astype('uint16'), [13, 13, 5])), 1)
call_6761 = relay.TupleGetItem(func_761_call(relay.reshape(var_6760.astype('uint16'), [13, 13, 5])), 1)
output = relay.Tuple([call_6719,call_6726,var_6727,call_6735,call_6738,const_6739,call_6759,var_6760,])
output2 = relay.Tuple([call_6720,call_6728,var_6727,call_6736,call_6740,const_6739,call_6761,var_6760,])
func_6771 = relay.Function([var_6727,var_6760,], output)
mod['func_6771'] = func_6771
mod = relay.transform.InferType()(mod)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6771_call = mutated_mod.get_global_var('func_6771')
var_6773 = relay.var("var_6773", dtype = "float64", shape = (30,))#candidate|6773|(30,)|var|float64
var_6774 = relay.var("var_6774", dtype = "uint16", shape = (845,))#candidate|6774|(845,)|var|uint16
call_6772 = func_6771_call(var_6773,var_6774,)
output = call_6772
func_6775 = relay.Function([var_6773,var_6774,], output)
mutated_mod['func_6775'] = func_6775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6096_call = mod.get_global_var('func_6096')
func_6098_call = mutated_mod.get_global_var('func_6098')
call_6846 = relay.TupleGetItem(func_6096_call(), 0)
call_6847 = relay.TupleGetItem(func_6098_call(), 0)
output = relay.Tuple([call_6846,])
output2 = relay.Tuple([call_6847,])
func_6852 = relay.Function([], output)
mod['func_6852'] = func_6852
mod = relay.transform.InferType()(mod)
mutated_mod['func_6852'] = func_6852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6852_call = mutated_mod.get_global_var('func_6852')
call_6853 = func_6852_call()
output = call_6853
func_6854 = relay.Function([], output)
mutated_mod['func_6854'] = func_6854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_6866 = func_2060_call()
call_6867 = func_2060_call()
func_1970_call = mod.get_global_var('func_1970')
func_1973_call = mutated_mod.get_global_var('func_1973')
const_6869 = relay.const([-4,-8,1,8,2,-10,4,1,-5,10,-10,8,-4,-9,4,8,8,-3,-5,-9,-6,5,4,-6,7,-8,-10,-6,-7,9,-4,-9,2,-3,10,-4,-10,-6,5,5,1,2,10,-4,-4,10,9,-10,1,7,-3,10,2,-10,-10,-10,6,10,1,-5,-6,-10,-4,7,-4,-9,-7,-2,6,3,-5,-5,-6,-1,9,-1,10,-4,-4,2,-5,-4,-1,-9,-8,-1,7,8,-10,-10], dtype = "uint64")#candidate|6869|(90,)|const|uint64
call_6868 = relay.TupleGetItem(func_1970_call(relay.reshape(const_6869.astype('uint64'), [90, 1])), 2)
call_6870 = relay.TupleGetItem(func_1973_call(relay.reshape(const_6869.astype('uint64'), [90, 1])), 2)
output = relay.Tuple([call_6866,call_6868,const_6869,])
output2 = relay.Tuple([call_6867,call_6870,const_6869,])
func_6871 = relay.Function([], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
mutated_mod['func_6871'] = func_6871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6871_call = mutated_mod.get_global_var('func_6871')
call_6872 = func_6871_call()
output = call_6872
func_6873 = relay.Function([], output)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_6879 = relay.TupleGetItem(func_4125_call(), 0)
call_6880 = relay.TupleGetItem(func_4127_call(), 0)
var_6885 = relay.var("var_6885", dtype = "bool", shape = (9, 15, 2))#candidate|6885|(9, 15, 2)|var|bool
bop_6886 = relay.maximum(call_6879.astype('int8'), relay.reshape(var_6885.astype('int8'), relay.shape_of(call_6879))) # shape=(9, 15, 2)
bop_6889 = relay.maximum(call_6880.astype('int8'), relay.reshape(var_6885.astype('int8'), relay.shape_of(call_6880))) # shape=(9, 15, 2)
func_2748_call = mod.get_global_var('func_2748')
func_2749_call = mutated_mod.get_global_var('func_2749')
call_6894 = func_2748_call()
call_6895 = func_2748_call()
bop_6896 = relay.subtract(bop_6886.astype('int8'), relay.reshape(call_6879.astype('int8'), relay.shape_of(bop_6886))) # shape=(9, 15, 2)
bop_6899 = relay.subtract(bop_6889.astype('int8'), relay.reshape(call_6880.astype('int8'), relay.shape_of(bop_6889))) # shape=(9, 15, 2)
uop_6904 = relay.exp(bop_6896.astype('float32')) # shape=(9, 15, 2)
uop_6906 = relay.exp(bop_6899.astype('float32')) # shape=(9, 15, 2)
bop_6917 = relay.right_shift(uop_6904.astype('int64'), relay.reshape(bop_6886.astype('int64'), relay.shape_of(uop_6904))) # shape=(9, 15, 2)
bop_6920 = relay.right_shift(uop_6906.astype('int64'), relay.reshape(bop_6889.astype('int64'), relay.shape_of(uop_6906))) # shape=(9, 15, 2)
func_2115_call = mod.get_global_var('func_2115')
func_2118_call = mutated_mod.get_global_var('func_2118')
var_6927 = relay.var("var_6927", dtype = "float32", shape = (720,))#candidate|6927|(720,)|var|float32
call_6926 = relay.TupleGetItem(func_2115_call(relay.reshape(var_6927.astype('float32'), [12, 15, 4])), 1)
call_6928 = relay.TupleGetItem(func_2118_call(relay.reshape(var_6927.astype('float32'), [12, 15, 4])), 1)
output = relay.Tuple([call_6894,bop_6917,call_6926,var_6927,])
output2 = relay.Tuple([call_6895,bop_6920,call_6928,var_6927,])
func_6936 = relay.Function([var_6885,var_6927,], output)
mod['func_6936'] = func_6936
mod = relay.transform.InferType()(mod)
var_6937 = relay.var("var_6937", dtype = "bool", shape = (9, 15, 2))#candidate|6937|(9, 15, 2)|var|bool
var_6938 = relay.var("var_6938", dtype = "float32", shape = (720,))#candidate|6938|(720,)|var|float32
output = func_6936(var_6937,var_6938,)
func_6939 = relay.Function([var_6937,var_6938,], output)
mutated_mod['func_6939'] = func_6939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4424_call = mutated_mod.get_global_var('func_4424')
call_6991 = relay.TupleGetItem(func_4423_call(), 3)
call_6992 = relay.TupleGetItem(func_4424_call(), 3)
output = relay.Tuple([call_6991,])
output2 = relay.Tuple([call_6992,])
func_6993 = relay.Function([], output)
mod['func_6993'] = func_6993
mod = relay.transform.InferType()(mod)
output = func_6993()
func_6994 = relay.Function([], output)
mutated_mod['func_6994'] = func_6994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6699_call = mod.get_global_var('func_6699')
func_6701_call = mutated_mod.get_global_var('func_6701')
call_7000 = relay.TupleGetItem(func_6699_call(), 0)
call_7001 = relay.TupleGetItem(func_6701_call(), 0)
output = relay.Tuple([call_7000,])
output2 = relay.Tuple([call_7001,])
func_7004 = relay.Function([], output)
mod['func_7004'] = func_7004
mod = relay.transform.InferType()(mod)
output = func_7004()
func_7005 = relay.Function([], output)
mutated_mod['func_7005'] = func_7005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_7009 = relay.TupleGetItem(func_4051_call(), 1)
call_7010 = relay.TupleGetItem(func_4053_call(), 1)
func_6993_call = mod.get_global_var('func_6993')
func_6994_call = mutated_mod.get_global_var('func_6994')
call_7015 = relay.TupleGetItem(func_6993_call(), 0)
call_7016 = relay.TupleGetItem(func_6994_call(), 0)
output = relay.Tuple([call_7009,call_7015,])
output2 = relay.Tuple([call_7010,call_7016,])
func_7022 = relay.Function([], output)
mod['func_7022'] = func_7022
mod = relay.transform.InferType()(mod)
mutated_mod['func_7022'] = func_7022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7022_call = mutated_mod.get_global_var('func_7022')
call_7023 = func_7022_call()
output = call_7023
func_7024 = relay.Function([], output)
mutated_mod['func_7024'] = func_7024
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7104 = relay.const([[[-3.653398],[-0.337160]],[[-2.551224],[1.472250]],[[1.431624],[7.318891]],[[-7.461298],[3.364869]],[[1.349482],[5.265872]],[[8.931730],[-9.125269]],[[6.090768],[8.742523]],[[-4.042377],[-9.589539]],[[3.303697],[-9.466782]],[[9.861406],[1.682834]],[[-4.202879],[-6.005798]],[[7.266817],[-8.709772]],[[-0.692384],[4.085757]],[[0.479388],[-9.223343]],[[-8.586725],[4.446812]]], dtype = "float64")#candidate|7104|(15, 2, 1)|const|float64
uop_7105 = relay.log(const_7104.astype('float64')) # shape=(15, 2, 1)
output = relay.Tuple([uop_7105,])
output2 = relay.Tuple([uop_7105,])
func_7107 = relay.Function([], output)
mod['func_7107'] = func_7107
mod = relay.transform.InferType()(mod)
output = func_7107()
func_7108 = relay.Function([], output)
mutated_mod['func_7108'] = func_7108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6871_call = mod.get_global_var('func_6871')
func_6873_call = mutated_mod.get_global_var('func_6873')
call_7127 = relay.TupleGetItem(func_6871_call(), 2)
call_7128 = relay.TupleGetItem(func_6873_call(), 2)
output = relay.Tuple([call_7127,])
output2 = relay.Tuple([call_7128,])
func_7130 = relay.Function([], output)
mod['func_7130'] = func_7130
mod = relay.transform.InferType()(mod)
mutated_mod['func_7130'] = func_7130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7130_call = mutated_mod.get_global_var('func_7130')
call_7131 = func_7130_call()
output = call_7131
func_7132 = relay.Function([], output)
mutated_mod['func_7132'] = func_7132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6355_call = mod.get_global_var('func_6355')
func_6357_call = mutated_mod.get_global_var('func_6357')
call_7140 = relay.TupleGetItem(func_6355_call(), 0)
call_7141 = relay.TupleGetItem(func_6357_call(), 0)
output = call_7140
output2 = call_7141
func_7159 = relay.Function([], output)
mod['func_7159'] = func_7159
mod = relay.transform.InferType()(mod)
output = func_7159()
func_7160 = relay.Function([], output)
mutated_mod['func_7160'] = func_7160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4217_call = mod.get_global_var('func_4217')
func_4219_call = mutated_mod.get_global_var('func_4219')
call_7164 = func_4217_call()
call_7165 = func_4217_call()
func_1781_call = mod.get_global_var('func_1781')
func_1784_call = mutated_mod.get_global_var('func_1784')
const_7184 = relay.const([[-0.816659],[-6.580537],[7.108899],[5.602909],[-1.452104],[-7.402197],[-1.002430],[-3.228124],[8.330935],[-5.736135],[-8.304106],[-9.030790],[0.853169],[6.633811],[-9.865034],[9.919050],[3.390011],[-2.197598],[-0.887900],[0.276620],[0.874377],[1.694336],[1.895840],[0.351586],[-5.597187],[9.369970],[8.018359],[5.294903],[5.390598],[1.285415],[-8.878793],[-8.340686],[-0.659343],[-5.032772],[-3.934557],[3.064910],[-9.253336],[0.569516],[-5.046355],[-2.175513],[-5.630587],[3.516814],[1.215886],[-9.774396],[9.737249],[0.023898],[8.671943],[0.582078],[-1.810080],[-7.633823],[8.620281],[-2.918856],[2.257523],[-3.096471],[7.242147],[-2.795009],[-9.260880],[8.602015],[-6.135371],[-0.746499],[7.453736],[-7.684315],[2.432989],[-4.942765],[5.524511],[-5.575136],[5.946754],[-8.119990],[6.177912],[-1.905915],[9.039084],[-1.885170],[9.894089],[-5.432989],[-7.644964],[4.576694],[-1.544533],[-5.818889],[-8.287762],[3.593600],[1.461137],[-1.479181],[-4.158964],[2.316498],[3.516375],[-1.227218],[-4.350838],[-4.177662],[6.712406],[-6.746799],[3.566551],[8.330822],[9.742145],[7.382217],[2.091943],[7.534915],[0.394959],[0.536241],[8.203739],[4.519757],[-0.781830],[4.526434],[-3.012530],[-9.102201],[-2.496471],[8.448324],[2.457194],[4.111640],[-4.852786],[-9.750887],[1.016893],[3.155034],[0.823919],[8.562242],[9.606630],[-2.433241],[-7.395888],[9.302874],[3.157325],[-7.872928],[-0.614383],[-2.572050],[2.753113],[-0.858788],[-2.439936],[6.249242],[-1.927236],[-4.525350],[3.365915],[-9.468912],[-0.101398],[-1.309654],[2.012540],[-5.289269],[-7.655624],[-3.552520],[-6.765552],[-2.099795],[5.733436],[-2.422015],[1.550468],[3.392199],[-0.381892],[0.523042],[5.428012],[-3.719061],[-8.316611],[8.527085],[-9.952456],[0.168697],[-0.379132],[4.533957],[-6.160194],[-4.287057],[-9.131464],[5.636994],[-1.762074],[-4.324838],[1.549287],[-9.655646],[1.959514],[-5.506826],[-4.484034],[1.789475],[1.666599],[0.770331],[0.678330],[3.655056],[-4.320763],[5.952091],[-5.812866],[-0.279586],[0.956905],[6.244139],[-8.256325],[-0.566337],[-5.928121],[-7.787462],[-3.545802],[-5.174733],[-2.565347],[4.151687],[-3.397187],[5.051827],[8.727947],[-9.242393],[3.704165],[-8.910760],[6.646543],[5.270893],[-2.223585],[4.086831],[0.331740],[0.406065],[-8.910388],[1.685382],[3.524574],[-8.139659],[9.339383],[-2.282782],[-5.684903],[-3.863135],[5.644986],[-7.564700],[-3.774194],[-9.828005],[4.829085],[-6.585233],[6.632536],[-5.933406],[2.017401],[-7.914358],[5.985282],[-7.575724],[-9.565890],[7.156059],[0.917953],[1.179213],[-0.956541],[1.860098],[3.431963],[9.309539],[-8.951989],[8.187939],[0.854127],[7.278842],[-2.170008],[7.905148],[-1.342411],[-4.119134],[-5.852898],[8.296074],[-1.115776],[-1.199788],[-9.984473],[3.023321],[-6.528201],[6.680202],[-6.539116],[-2.578681],[-4.912810],[-6.146025],[-7.714572],[-3.418336],[-8.313484],[1.313660],[-5.335543],[-6.586777],[1.292211],[-4.925816],[7.216418],[-0.878541],[-7.592296],[-5.012655],[-2.975973],[6.166300],[-9.289360],[3.861408],[3.861404],[5.714794],[6.020472],[3.625513],[1.238103],[-8.586679],[-0.875172],[-4.287261],[-7.442344],[6.571661],[-5.072043],[-1.883982],[3.851662],[-5.857997],[4.095408],[-1.159011],[1.762434],[-1.276482],[-5.920024],[1.831034],[-4.839589],[5.969728],[-1.285344],[-8.602453],[-3.862182],[0.039940],[5.889085],[6.807852],[3.529805],[-5.435078],[-0.725337],[-1.196332],[-7.209561],[-6.662066],[-3.234685],[-7.918133],[4.112061],[4.710685],[5.285491],[-3.731411],[-8.750569],[0.845765],[6.168201],[-1.633470],[-7.394776],[-0.693461],[7.059816],[-9.591119],[9.265234],[-7.501813],[-5.673215],[-5.517731],[-7.138814],[6.005533],[3.002026],[1.220227],[-5.445497],[5.059687],[-1.833891],[-4.243383],[-8.933003],[3.886266],[4.653673],[9.219349],[-5.240323],[-9.968457],[-8.233511],[-1.290737],[8.103300],[5.807350],[1.696187],[-0.459814],[5.919512],[-2.104839],[4.541009],[-3.763228],[5.201070],[0.745475],[4.855499],[1.111877],[-3.269405],[4.061736],[8.572336],[-5.674926],[8.916324],[5.021561],[-1.720388],[-1.848209],[-6.321477],[4.162068],[-9.868961],[8.518220],[7.828539],[-6.563320],[-6.936190],[-2.702327],[-9.047262],[4.058829],[3.801429],[-2.069736],[6.340714],[-6.324681],[3.394256],[9.709021],[3.375010],[1.754942],[-1.493943],[7.910491],[3.223622],[7.695735],[7.287998],[-1.091025],[6.980700],[0.034258],[1.400724],[2.486632],[-1.175045],[6.371973],[1.627150],[3.895725],[9.759522],[-6.657719],[4.876912],[-6.310685],[4.086833],[-4.940114],[1.822477],[-8.768801],[7.526170],[-8.684717],[4.718042],[8.071928],[2.791829],[7.184099],[-9.426468],[0.604684],[7.817503],[9.847133],[8.668102],[8.695779],[6.548795],[7.801596],[5.034249],[8.257181],[-5.476247],[1.749814],[-1.138654],[1.495991],[7.451489],[-0.777927],[4.936600],[-2.064813],[7.231774],[7.981328],[3.095410],[0.545343],[3.487213],[3.611782],[4.003627],[3.685244],[-8.226020],[2.067996],[9.282735],[-0.659943],[-9.067577],[-7.735253],[-5.859442],[-6.578504],[3.692710],[-8.091241],[7.127656],[1.320385],[4.957313],[5.180912],[-9.248746],[-4.108973],[6.960278],[2.740280],[-4.630121],[-1.898535],[-1.123893],[-6.425872],[7.178046],[-4.091823],[-5.812550],[6.634354],[-1.908077],[-4.998627],[3.322905],[-9.707976],[-1.719078],[4.129874],[9.744016],[3.165926],[-9.295603],[-7.359573],[-2.536314],[-2.492943],[3.966492],[-2.946750],[5.449546],[6.308589],[0.314927],[1.956241],[6.186982],[-3.351516],[-8.008633],[-7.700862],[-6.904331],[6.901931]], dtype = "float32")#candidate|7184|(468, 1)|const|float32
call_7183 = relay.TupleGetItem(func_1781_call(relay.reshape(call_7164.astype('uint16'), [845,]), relay.reshape(const_7184.astype('float32'), [468,]), ), 6)
call_7185 = relay.TupleGetItem(func_1784_call(relay.reshape(call_7164.astype('uint16'), [845,]), relay.reshape(const_7184.astype('float32'), [468,]), ), 6)
output = relay.Tuple([call_7164,call_7183,const_7184,])
output2 = relay.Tuple([call_7165,call_7185,const_7184,])
func_7186 = relay.Function([], output)
mod['func_7186'] = func_7186
mod = relay.transform.InferType()(mod)
mutated_mod['func_7186'] = func_7186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7186_call = mutated_mod.get_global_var('func_7186')
call_7187 = func_7186_call()
output = call_7187
func_7188 = relay.Function([], output)
mutated_mod['func_7188'] = func_7188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7234 = relay.var("var_7234", dtype = "int8", shape = (5, 12, 11))#candidate|7234|(5, 12, 11)|var|int8
const_7235 = relay.const([[[5,6,-1,2,-5,2,-7,7,-9,-5,7],[9,-9,-9,-1,3,-4,-5,5,8,-4,6],[-7,-5,-2,-7,10,-2,9,1,8,7,2],[-6,9,5,-4,5,7,-8,-2,8,1,8],[3,-9,5,2,9,-4,-2,4,-1,-7,-10],[-7,-10,-4,-5,10,-4,-9,-6,-6,-1,-5],[-9,-10,9,1,4,4,3,4,10,7,4],[5,-9,7,1,-4,3,3,3,1,-1,3],[3,-1,-3,1,6,-9,6,6,8,-8,-6],[-2,4,-8,10,-9,1,8,-10,-1,-4,3],[6,7,-1,-6,-5,-8,6,4,-7,9,-2],[-10,-5,-1,3,8,5,-5,10,5,-2,4]],[[9,3,10,-2,10,-5,4,5,1,-7,9],[-7,3,-4,-5,10,6,-7,-7,9,10,-4],[1,4,-1,10,-4,8,-9,2,-1,-7,8],[-5,3,-2,-9,1,-4,-2,5,4,9,7],[-2,-1,1,-2,-1,4,3,1,10,4,5],[10,9,1,6,5,7,5,-5,-9,-5,2],[-8,-2,3,4,-3,1,-10,2,-10,-6,-5],[9,7,8,-10,2,3,6,-1,5,-7,-7],[-9,-1,-8,-10,-7,4,-6,7,-3,3,4],[-4,-2,-8,7,3,6,7,-2,-6,-7,-4],[3,10,-10,-3,-4,9,6,-4,5,-9,3],[5,-6,-6,-3,5,-2,5,-7,6,5,-7]],[[3,6,-9,10,-2,7,8,-10,-4,1,9],[7,6,9,-9,4,10,-1,-4,10,8,5],[-1,-10,-9,2,-9,-8,-4,-4,-5,-6,-8],[-3,10,10,1,3,-2,8,4,-1,-8,-7],[8,-7,2,2,-2,2,-8,-9,10,2,5],[-3,-1,3,5,-4,-3,-10,4,-5,-6,-8],[1,-5,9,3,9,-4,-4,2,9,4,8],[-7,7,9,-8,10,-4,10,-4,9,3,-6],[2,-6,-5,-5,6,5,1,-7,-1,-8,-1],[10,5,9,-3,-3,-4,-8,-7,9,-4,-7],[8,-5,10,-6,4,-6,-5,7,1,-5,-6],[1,-5,-9,3,-3,1,-2,3,-3,5,-8]],[[-6,8,-2,10,5,3,2,-6,-7,7,-9],[2,6,3,-5,-2,5,-8,-3,6,2,8],[9,-10,-5,8,-6,9,6,-5,-2,-3,7],[3,2,7,-9,7,-9,6,-3,-1,5,-3],[2,3,3,1,9,-9,3,6,-3,10,9],[-9,2,-3,9,-9,2,-3,10,-6,-7,-2],[2,-4,3,8,-2,6,4,1,3,-4,-2],[1,-10,2,1,2,4,-8,-2,8,-1,7],[4,-1,-10,4,-2,5,-10,-1,-9,-4,-9],[-9,-9,2,-3,-7,1,-6,3,-4,-6,6],[3,9,-8,-6,-7,5,-4,-10,-10,-8,5],[1,-5,-2,1,7,3,6,10,8,9,-5]],[[-2,3,-2,-2,-4,-6,7,2,-5,-2,6],[10,1,1,-3,4,9,-9,8,-9,-6,3],[-2,1,-5,-6,2,5,5,-3,4,8,-5],[-6,10,-5,-10,-8,-5,-10,2,1,1,7],[-6,6,10,-3,1,-7,-7,-5,-3,1,-4],[10,8,-1,-9,-7,-1,-5,7,5,9,8],[6,-3,8,9,-5,-1,-10,2,-3,4,-1],[4,-7,5,10,-2,-9,-5,8,-1,1,-6],[6,-2,-8,-2,5,7,4,-10,7,1,4],[3,8,-5,-9,1,10,4,-2,-4,-4,-1],[-5,3,10,8,-7,-7,8,-7,-2,2,-4],[9,7,-2,-6,-7,3,-7,-3,-10,7,-7]]], dtype = "int8")#candidate|7235|(5, 12, 11)|const|int8
bop_7236 = relay.bitwise_and(var_7234.astype('int8'), relay.reshape(const_7235.astype('int8'), relay.shape_of(var_7234))) # shape=(5, 12, 11)
output = bop_7236
output2 = bop_7236
func_7259 = relay.Function([var_7234,], output)
mod['func_7259'] = func_7259
mod = relay.transform.InferType()(mod)
mutated_mod['func_7259'] = func_7259
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7260 = relay.var("var_7260", dtype = "int8", shape = (5, 12, 11))#candidate|7260|(5, 12, 11)|var|int8
func_7259_call = mutated_mod.get_global_var('func_7259')
call_7261 = func_7259_call(var_7260)
output = call_7261
func_7262 = relay.Function([var_7260], output)
mutated_mod['func_7262'] = func_7262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6871_call = mod.get_global_var('func_6871')
func_6873_call = mutated_mod.get_global_var('func_6873')
call_7289 = relay.TupleGetItem(func_6871_call(), 1)
call_7290 = relay.TupleGetItem(func_6873_call(), 1)
func_2461_call = mod.get_global_var('func_2461')
func_2464_call = mutated_mod.get_global_var('func_2464')
const_7292 = relay.const([-6,3,-1,-6,-8,5,7,2,-8,-1,-8,-5,10,4,-4,5,2,-5,-1,-5,-8,-4,-2,-2,-9,-5,9,-4,2,8,-10,7,3,6,5,-10,2,7,-10,-4,9,-6,9,-9,5,-8,-2,-9,-7,8,6,4,-4,2,9,1,-3,-8,4,-5,7,-5,8,-4,9,-8,2,3,-2,-7,10,7,-4,6,-2,-10,4,-8,9,7,5,-3,5,10,10,8,-5,3,-2,9,10,3,-5,6,4,-4,-9,6,4,3,5,-5,-6,4,-7,-10,-4,-3,-5,-5,-2,-9,-7,-5,3,4,-7,2,7,-1,-9,-3,5,4,-5,-8,7,6,-4,-2,8,7,-4,9,5,8,-3,8,7,10,10,-8,7,10,4,-10,-1,8,-8,-9,-8,-10,5,1,-2,5,8,1,-7,9,-5,4,6,1,2,6,4,3,5,-5,-4,7,4,-1,10,-2,7,-1,9,-6,4,1,9,9,-7,-9,5,-4,5,-9,5,10,-7,-4,4,7,1,6,-3,4,-1,10,-10,-6,2,-9,-7,9,-1,2,3,3,-9,-6,8,-2,-2,9,-1,-6,-10,-9,6,-3,-3,2,6,9,-6,10,4,3,6,-7,-6,-9,-10,5,8,-10,-5,-6,8,8,2,-8,-2,4,4,3,6,6,2,-3,9,3,8,5,-7,-1,-1,-7,9,-10,-5,-3,-7,-9,10,1,-5,-5,6,-10,3,3,-8,8,4,-2,-1,9,6,8,10,-9,-4,10,2,-4,-9,10,9,-9,-8,-1,-8,8,8,1,-5,-5,-5,-10,4,4,3,3,4,7,2,2,8,-3,-5,-8,-7,1,9,8,7,9,8,6,-3,-5,-10,-5,6,-7,-6,-1,-10,-4,-6,-2,-4,7,-2,-5,5,-10,-6,3,6,-3,7,-5,6,3,10,7,6,-8,-6,-3,-3,-3,-9,3,8,-8,-1,1,-10,1,10,6,1,-4,6,-7,-2,10,-9,-5,-10,-2,-5,8,7,-5,-7,-5,-6,-7,-8,-1,-5,2,-3,-10,1,2,7,9,-9,-5,9,7,10,-8,-10,-1,-10,-8,-1,8,4,-5,-1,-7,3,9,3,-7,-3,3,4,6,-10,-8,7,-2,5,-2,-4,-9,2,-10,7,9,-4,1,8,-1,4,-9,5,-1,-9,-9,3,-1,-7,1,-10,-1,-3,-10,10,9,-3,4,-10,-10,-8,-3,6,-8,-4,-4,7,9,-8,3,2,-1,-2,3,-9,-2,-10,10,10,-9,-6,9,10,5,6,-5,10,1,2,6,7,-10,5,-4,-1,9,8,3,7,6,-8,2,-1,-1,-9,6,-9,2,10,10,9,-9,9,-4,1,-2,3,8,8,-6,-10,-2,1,-2,-10,-10,-2,-5,-10,9,-9,2,-4,-7,-4,7,7,1,-3,-7,-5,-1,6,10,-5,7,10,7,4,4,8,9,3,1,5,1,5,-9,-8,-4,9,-8,-5,-3,-8,6,-10,-9,-7,3,8,-3,5,-3,2,7,-3,10,-9,-6,10,3,6,-7,4,-6,3,5,-3,3,8,-9,-7,6,4,3,3,-5,9,4,1,6,-1,-4,-1,-4,-8,-9,-3,-9,8,-10,9,2,1,-1,-9,-8,2,-7,-10,-2,-5,3,6,5,-5,5,-4,2,-6,-8,2,5,8,6,2,-6,1,-5,3,-2,-6,-4,5,-4,1,-6,-7,-6,3,-3,-2,-4,-8,1,-10,2,10,-4,4,-8,1,-5,-4,-1,4,4,3,-10,-8,6,4,1,4,2,5,-2,-3,5,9,-4,10,-9,-7,-7,10,2,1,-9,-1,4,1,4,-2,-1,5,-4,-5,-9,9,-9,9,-4,-5,5,6,-1,5,10,4,-8,9,3,2,6,10,-2,-7,9,-1,-7,4,-3,5,4,-7,8,4,-9,5,-2,3,4,-2,1,7,-10,5,-10,1,10,8,-5,9,-1,-1,9,-6,-5,8,-2,3,-6,9,9,-1,7,6,2,-8,-2,-7,-7,6,3,-6,-8,9,7,9,-8,-6,-10,9,-10,6,-7,2,7,-6,3,7,10,5,-6,5,5,-10,-4,8,7,-5,-6,-10,9,5,-7,1,-10,9,1,9,5,-2,10,4,-3,-2,10,-3,-10,-8,9,-6,-6,-5,9,4,3,5,-5,1,-10,6,-6,8,7,3,-5,-5,6,-7,-5,-10,-8,-4,-6,2,7,-7,-9,1,8,2,-2,4,8,-2,-6,-1,-9,-9,9,2,-1,3,3,6,5,-7,-4,7,-4,-4,5,-5,2,9,7,-1,10,8,5,5,9,-1,2,-6,-10,9,10,8,-9,-5,-8,-7,-10,10,-9,5,6,5,-3,8,-3,-7,-10,7,1,8,-10,-8,9,4,-2,8,-7,9,3,-3,2,-9,8,4,10,1,-8,-8,4,7,-3,7,7,9,-3,6,4,-2,3,-4,-7,-3,-1,-3,3,4,-4,-5,6,1,-6,-9,-6,5,-6,-2,-1,9,6,-8,10,4,-10,5,2,-9,4,-1,8,10,2,-8,-9,-4,7,-3,-1,-2,-9,-10,2,-9,9,7,-3,-3,8,-7,-6,-1,2,-1,4,-7,10,-4,-9,1,3,7,-4,1,10,1,3,-9,8,10,-3,7,-6,-6,-3,3,4,2,-8,9,2,-4,-4,10,2,5,8,-1,-2,9,3,-1,-4,4,-7,10,5,-4,6,10,-7,7,9,-10,-4,-8,5,-5,-4,10,4,-1,-3,-7,-1,1,3,5,-6,7,-6,-7,6,-9,-1,-2,-9,3,9,3,6,-10,-1,-3,10,7,6,-8,-5,5,-5,2,-1,6,-2,4,2,-9,10,2,-5,-7,-2,-5,3,-5,-8,-4,10,1,-10,4,-10,7,-6,-10,-7,-1,-4,-5,6,-7,7,-3,3,10,10,5,8,10,10,-6,6,3,-4,9,8,-6,9,-1,5,6,-7,7,-3,-1,6,-10,-5,-4,-3,10,-1,8,6,-4,3,8,9,7,-2,-6,6,-3,-1,1,-2,-7,7,-2,-5,6,6,-9,-9,8,-5,-4,-10,-1,3,-7,2,7,9,4,8,3,-4,-9,-1,6,3,8,-6,6,-2,6,7,7,3,-10,-1,-4,-5,8,2,-3,-8,10,-1,-5,9,1,5,2,9,-8,4,3,-5,-7,-9,-1,3,-10,8,-1,7,5,-10,-9,-8,7,-8,-3,-5,9,-3,10,-2,4,8,-8,-7,-6,-7,-6,-3,-9,5,-6,-4,-4,-7,-5,-9,-10,-2,1,-9,-6,5,3,5,10,8,2,-5,9,3,1,-10,-8,-7,-4,5,5,4,-9,-4,10,-7,1,9,3,3,5,-7,8,9,2,-1,-5,7,-3,4,-10,-8,-4,1,10,-3,9,-5,4,6,9,3,2,9,-8,3,-6,10,-5,-7,-7,9,8,1,-9,8,-6,-3,2,6,-6,9,-7,10,-10,-8,-7,10,-2,-7,-10,8,-9,-6,4,10,-10,-2,6,2,10,2,8,3,7,-10,7,2,-8,7,-10,-2,6,9,7,-9,-3,4,-4,-3,7,7,1,1,8,3,-7,-10,8,-6,-3,4,7,-1,-3,2,-8,-3,10,10,2,-10,8,-3,-1,3,-3,4,-3,2,7,-5,5,-6,3,-7,-9,5,6,4,-6,-1,-4,-10,-10,-6,-8,-2,10,-10,-3,-10,-1,-10,3,-4,10,8,2,4,10,-9,-10,1,-10,-3,-7,7,-7,7,-8,-9,-8,-4,-2,-2,-6,-9,1,-6,-1,6,-3,-8,-8,2,-5,6,-5,4,1,-10,-7,5,10,-1,-4,3,-7,-10,5,3,-3,5,-3,7,-7,5,9,3,3,4,-8,5,-7,2,-8,-6,-8,-1,2,-7,9,4,-1,-9,9,-2,-10,4,-3,-1,-5,-4,-8,6,-6,-10,4,-3,10,-1,-7,8,1,5,10,7,-3,-10,7,-2,8,8,-3,-1,4,2,5,9,3,2,-1,1,-9,6,9,-8,7,1,8,-5,-3,6,-10,-6,2,-8,-6,-9,-2,-10,3,7,6,4,-9,-8,7,-2,8,9,7,-5,6,9,-8,-8,1,-5,-3,-10,-7,7,-2,-10,-1,2,-6,-3,10,-2,-3,3,6,-10,4,-3,8,-6,1,3,-5,-9,2,5,6,-2,8,2,3,2,3,10,-5,2,-2,-5,-1,-10,-6,7,-2,2,6,1,7,-9,-9,2,5,10,-10,-6,1,4,-1,-1,9,3,7,-5,9,3,-2,4,8,5,-10,8,7,9,4,10,-1,-1,7,3,9,-6,2,10,-3,-9,-6,-2,-3,-2,1,2,-3,2,-8,-5,-2,2,10,-5,7,-6,3,7,-1,2,-10,-5,7,2,2,-4,10,-10,6,-3,-1,7,9,1,4,3,8,-7,-5,10,-8,-6,10,7,3,-8,-1,10,10,3,7,-8,-3,-9,5,8,6,2,-9,-2,10,-9,-7,-2,-2,-5,-10,3,-9,4,4,7,-5,5,-7,8,-9,8,-6,6,-7,7,3,3,-4,6,-8,-9,-2,-8,-3,6,-3,-9,7,9,6,3,5,3,-4,9,-4,6,-3,4,-1,8,-7,5,4,-9,-9,10,-10,-5,-2,10,-1,1,-3,9,-9,7,6,1,-3,10,5,-10,-3,-3,9,2,-10,-5,-1,-6,-5,-6,5,3,-8,-2,3,9,-6,2,6,5,-6,-10,7,5,8,-5,1,-1,-8,-3,4,8,6,5,-1,-9,-3,6,-2,-3,4,-3,5,3,6,6,-2,10,-4,10,-5,6,8,1,-3,-2,4,2,-9,3,-5,-3,-5,2,8,-7,-3,-5,3,2,-10,-2,10,-4,-1,2,7,-10,10,2,-6,-5,1,1,-5,9,7,-2,7,6,4,-3,-7,3,-5,-9,3,-1,3,-10,6,4,3,2,1,-8,-10,-5,-4,-4,3,-1,7,-5,-5,-7,-4,-4,-8,-9,-6,5,9,-3,-8,3,2,2,-5,10,-9,1,-9,-4,-3,7,1,-7,3,5,-9,-5,-2,10,3,9,6,-9,9,3,8,1,-3,-2,-8,-10,-5,8,3,7,8,9,-10,-3,4,8,8,-3,-10,9,-4,-7,-5,8,-2,3,-5,-8,-3,-1,-8,8,2,9,8,2,-9,1,-3,-2,-6,-9,-9,5,7,-10,-6,-1,10,10,9,10,-10,-2,1,-10,-8,9,5,1,1,8,-10,6,8,7,-2,7,-7,-7,-2,-5,-7,10,-10,3,-2,9,-10,1,-2,7,-7,-8,-3,3,1,8,4,-9,10,-6,-4,6,9,-4], dtype = "uint8")#candidate|7292|(2002,)|const|uint8
call_7291 = relay.TupleGetItem(func_2461_call(relay.reshape(const_7292.astype('uint8'), [13, 14, 11])), 0)
call_7293 = relay.TupleGetItem(func_2464_call(relay.reshape(const_7292.astype('uint8'), [13, 14, 11])), 0)
func_2762_call = mod.get_global_var('func_2762')
func_2763_call = mutated_mod.get_global_var('func_2763')
call_7297 = func_2762_call()
call_7298 = func_2762_call()
func_1441_call = mod.get_global_var('func_1441')
func_1447_call = mutated_mod.get_global_var('func_1447')
const_7312 = relay.const([[False,False,True,True],[False,False,True,True],[False,True,False,False],[True,True,True,True],[True,True,True,True],[False,True,False,False],[True,False,False,True],[True,False,False,True],[False,True,True,True],[False,False,False,False],[False,False,True,True],[False,False,True,True],[False,False,False,False],[False,True,False,True],[True,True,False,False],[True,False,False,True],[False,True,False,False],[True,False,False,True],[True,True,True,True],[False,False,False,False],[False,False,False,False],[True,True,False,True],[False,False,True,True],[True,True,False,True],[False,True,True,False],[True,True,True,False],[True,False,True,True],[False,True,True,True],[False,True,True,True],[False,True,False,False],[False,False,True,True],[True,False,False,False],[True,True,False,False],[False,True,True,True],[False,False,False,False],[False,True,True,False],[True,True,True,True],[False,False,False,False],[False,True,True,True],[True,True,True,False],[False,True,True,True],[True,False,False,True],[False,True,True,False],[False,True,False,True],[False,False,True,False],[False,True,True,False],[False,False,True,False],[False,True,False,False],[False,True,True,True],[True,False,False,False],[True,False,False,True],[True,True,True,True],[True,False,True,True],[True,False,True,True],[True,False,True,True],[True,False,True,False],[True,True,True,True],[True,False,True,False],[False,True,True,True],[False,False,False,True],[False,True,False,True],[False,True,True,True],[False,False,False,True],[False,True,True,False],[False,True,True,True],[True,False,True,True],[True,True,False,False],[True,False,True,False],[True,False,True,True],[True,False,False,True],[True,False,True,True],[False,False,True,False],[True,False,False,False],[False,True,True,False],[False,True,False,False],[True,True,False,True],[True,True,False,True],[False,True,False,True],[True,True,False,True],[False,False,False,True],[False,False,False,True],[True,True,True,False],[True,True,False,False],[False,False,True,False],[True,False,True,True],[True,True,False,False],[True,True,False,True],[True,False,False,True],[False,False,False,True],[False,True,True,True],[False,True,True,True],[True,True,True,True],[True,False,False,False],[True,True,False,False],[False,False,True,True],[False,False,False,False],[False,True,False,False],[False,True,True,True],[True,True,False,False],[False,True,True,True],[True,False,True,False],[True,True,True,True],[False,False,False,False],[False,False,True,True],[True,True,True,False],[False,True,True,True],[False,True,False,False],[False,True,True,True]], dtype = "bool")#candidate|7312|(108, 4)|const|bool
var_7313 = relay.var("var_7313", dtype = "float64", shape = (30,))#candidate|7313|(30,)|var|float64
var_7314 = relay.var("var_7314", dtype = "uint8", shape = (2100,))#candidate|7314|(2100,)|var|uint8
var_7315 = relay.var("var_7315", dtype = "uint16", shape = (845,))#candidate|7315|(845,)|var|uint16
call_7311 = relay.TupleGetItem(func_1441_call(relay.reshape(const_7312.astype('bool'), [4, 12, 9]), relay.reshape(var_7313.astype('float64'), [30,]), relay.reshape(var_7314.astype('uint8'), [1, 2100]), relay.reshape(var_7315.astype('uint16'), [65, 13]), ), 5)
call_7316 = relay.TupleGetItem(func_1447_call(relay.reshape(const_7312.astype('bool'), [4, 12, 9]), relay.reshape(var_7313.astype('float64'), [30,]), relay.reshape(var_7314.astype('uint8'), [1, 2100]), relay.reshape(var_7315.astype('uint16'), [65, 13]), ), 5)
var_7317 = relay.var("var_7317", dtype = "uint8", shape = (2002,))#candidate|7317|(2002,)|var|uint8
bop_7318 = relay.mod(const_7292.astype('float32'), relay.reshape(var_7317.astype('float32'), relay.shape_of(const_7292))) # shape=(2002,)
uop_7325 = relay.cos(const_7312.astype('float32')) # shape=(108, 4)
var_7329 = relay.var("var_7329", dtype = "float32", shape = (6, 78))#candidate|7329|(6, 78)|var|float32
bop_7330 = relay.floor_divide(call_7311.astype('float64'), relay.reshape(var_7329.astype('float64'), relay.shape_of(call_7311))) # shape=(6, 78)
bop_7333 = relay.floor_divide(call_7316.astype('float64'), relay.reshape(var_7329.astype('float64'), relay.shape_of(call_7316))) # shape=(6, 78)
output = relay.Tuple([call_7289,call_7291,call_7297,var_7313,var_7314,var_7315,bop_7318,uop_7325,bop_7330,])
output2 = relay.Tuple([call_7290,call_7293,call_7298,var_7313,var_7314,var_7315,bop_7318,uop_7325,bop_7333,])
func_7334 = relay.Function([var_7313,var_7314,var_7315,var_7317,var_7329,], output)
mod['func_7334'] = func_7334
mod = relay.transform.InferType()(mod)
var_7335 = relay.var("var_7335", dtype = "float64", shape = (30,))#candidate|7335|(30,)|var|float64
var_7336 = relay.var("var_7336", dtype = "uint8", shape = (2100,))#candidate|7336|(2100,)|var|uint8
var_7337 = relay.var("var_7337", dtype = "uint16", shape = (845,))#candidate|7337|(845,)|var|uint16
var_7338 = relay.var("var_7338", dtype = "uint8", shape = (2002,))#candidate|7338|(2002,)|var|uint8
var_7339 = relay.var("var_7339", dtype = "float32", shape = (6, 78))#candidate|7339|(6, 78)|var|float32
output = func_7334(var_7335,var_7336,var_7337,var_7338,var_7339,)
func_7340 = relay.Function([var_7335,var_7336,var_7337,var_7338,var_7339,], output)
mutated_mod['func_7340'] = func_7340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_7349 = relay.TupleGetItem(func_2030_call(), 0)
call_7350 = relay.TupleGetItem(func_2031_call(), 0)
func_7130_call = mod.get_global_var('func_7130')
func_7132_call = mutated_mod.get_global_var('func_7132')
call_7375 = relay.TupleGetItem(func_7130_call(), 0)
call_7376 = relay.TupleGetItem(func_7132_call(), 0)
output = relay.Tuple([call_7349,call_7375,])
output2 = relay.Tuple([call_7350,call_7376,])
func_7377 = relay.Function([], output)
mod['func_7377'] = func_7377
mod = relay.transform.InferType()(mod)
mutated_mod['func_7377'] = func_7377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7377_call = mutated_mod.get_global_var('func_7377')
call_7378 = func_7377_call()
output = call_7378
func_7379 = relay.Function([], output)
mutated_mod['func_7379'] = func_7379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mod.get_global_var('func_1282')
func_1284_call = mutated_mod.get_global_var('func_1284')
call_7405 = relay.TupleGetItem(func_1282_call(), 2)
call_7406 = relay.TupleGetItem(func_1284_call(), 2)
func_1038_call = mod.get_global_var('func_1038')
func_1042_call = mutated_mod.get_global_var('func_1042')
const_7412 = relay.const([-1,5,4,-3,-7,9,-7,6,5,-6,9,10,-5,6,6,-1,-4,2,-8,-5,3,-6,5,10,3,8,3,-3,8,4,9,-8,4,10,-7,6,1,2,5,7,2,-7,-3,3,4,-3,3,-5,-5,10,2,-2,9,8,-8,9,10,2,10,5,3,6,-3,-4,6,8,9,2,4,3,4,-1,-9,10,-10,-5,4,8,4,6,5,9,-4,3,10,-3,9,-3,-8,-10,-7,-3,8,-8,3,-6,8,6,6,-3,7,-3,9,-5,-8,-7,-9,5,2,-4,7,-5,3,8,-1,8,-4,-2,-8,10,-1,-10,-5,-10,8,2,-3,-2,-10,-8,9,1,-8,6,10,-1,-3,3,-5,5,-8,1,-7,8,1,-8,-3,-6,2,8,-8,-6,9,6,-4,-7,9,-4,9,4,9,2,1,-4,10,8,10,-6,1,2,5,8,5,2,3,6,8,-3,-6,3,-10,1,-2,8,10,-1,-9,-3,-10,-8,9,-4,-2,7,3,-1,8,2,8,5,1,-5,4,5,-2,-6,9,-9,6,-8,-5,-3,-2,5,6,9,8,8,-3,8,7,8,6,8,3,-5,4,1,5,-5,-8,10,10,9,-2,1,-5,-7,6,4,-1,8,-9,3,-5,-4,-5,-10,-2,-10,-8,-6,-2,3,-8,7,-8,-9,2,-10,10,-1,-6,-2,7,-3,-5,-7,1,4,9,-3,4,3,-1,4,-4,-8,5,-1,4,-9,-4,-7,-6,-6,-2,-1,8,4,-6,-1,-5,-3,9,-3,9,-3,8,-7,10,-1,-2,-9,-8,-10,-3,-7,1,9,7,4,-1,8,-6,-4,-10,-9,9,3,-4,4,-5,8,-2,-8,8,-6,1,-8,10,-5,9,1,5,7,-6,-1,-1,-8,5,-3,-10,-1,2,-9,-5,3,2,4,-9,-1,2,-5,-8,-8,-9,-7,10,1,9,-6,-6,-8,2,-10,-3,-7,10,7,-7,4,-8,4,-8,9,4,-10,4,-3,-2,-9,-1,-1,10,-2,5,-2,6,10,-10,-1,-6,-9,1,-9,2,-9,6,-7,-7,3,6,6,1,5,-5,-8,-7,3,8,2,-2,4,-10,6,1,-1,3,6,-1,7,-7,-9,1,-4,-4,8,9,5,4,-7,1,1,-7,-9,-10,-6,-1,-5,7,-1,8,-8,-3,6,-4,-4,3,10,4,10,-8,-3,3,1,-9,-2,2,-4,3,-4,-3,6,4,7,7,-2,-4,-2,-4,9,-5,-10,1,4,4,-2,6,4,-6,-8,8,8,8,1,4,5,10,-8,9,-4,-2,9,-6,10,6,7,-1,-10,-4,2,10,9,5,1,-1,-9,3,5,-3,-5,4,-6,4,5,-6,8,-6,-8,-6,7,5,-2,-3,2,-1,-6,-7,-1,6,-3,-5,-10,1,2,-8,5,-2,-4,6,-1,-2,-4,-7,4,-3,8,9,8,8,5,8,1,-1,-5,10,-5,-2,1,-4,-7,-1,4,6,10,-10,2,-9,8,-8,6,-10,10,10,5,6,2,8,-9,-5,-8,4,-5,-3,-2,7,-8,-8,8,2,3,-5,7,-10,8,5,-2,-8,-1,-9,3,-2,-2,-1,-10,6,-3,10,-6,8,6,2,4,5,10,-10,-10,5,-3,-2,9,8,-9,-4,1,-1,-7,4,-4,9,-5,-8,-3,4,-7,-1,-4,-10,1,10,-8,-8,-5,-6,-3,2,6,-10,-10,7,3,-6,8,2,2,1,4,-2,-2,-7,-7,-3,-8,4,-9,9,-8,1,-3,-7,-4,2,6,6,-6,4,-1,-6,2,-8,10,5,2,-4,-8,7,-9,-9,-5,-4,-5,2,-7,-6,8,-2,-1,6,4,8,3,3,6,-7,-6,-4,1,-8,6,-7,-5,-3,-7,-10,1,2,-7,5,10,6,7,6,6,6,5,-6,-4,9,-2,-2,-8,6,-3,9,-7,7,5,-1,7,-2,-3,-5,9,-6,-4,3,-5,9,2,-9,-5,2,-2,-8,2,-1,8,2,1,-8,8,-1,10,1,8,-2,8,10,1,-7,9,10,8,-5,-1,6,-6,-6,-6,10,-7,-6,8,-3,5,-2,1,-4,-5,8,3,9,10,6,10,-10,8,-4,-4,-5,-8,-5,-8,-6,7,-1,9,-10,3,4,1,2,2,8,-2,4,2,9,-8,5,10,-6,5,-9,-3,2,9,-5,-8,6,8,10,-9,9,5,-1,-9,-3,6,-3,-6,-4,8,5,-4,8,1,3,-8,-5,8,7,4,4,-3,-10,-9,-4,-6,5,-10,-4,-2,8,1,2,-9,7,-2,-5,7,3,-10,4,-6,5,-1,-6,8,-4,9,-6,-6,4,-5,4,6,7,4,3,-10,7,-9,-6,-1,6,6,-8,9,2,-5,-6,-4,9,6,-10,-2,10,2,-10,8,-2,-10,-7,-2,-2,5,-10,-3,-7,-10,-7,-5,-6,5,-1,2,7,2,10,5,3,-10,-9,1,-1,-2,-5,-5,4,-7,-3,6,10,4,-6,-1,-8,-3,3,-10,6,5,9,-4,-10,-5,9,-2,1,-10,6,-7,2,1,1,2,-5,9,-6,6,4,-8,-5,4,8,-3,5,9,10,-3,-3,-8,-1,-2,-2,3,-10,-2,3,10,-10,-10,-5,-2,-8,5,1,10,2,1,10,1,6,4,-9,-5,-9,8,3,-8,7,4,7,-2,-8,5,8,10,1,-3,10,1,-2,-3,1,6,5,5,-6,2,-1,-1,-3,3,7,-4,6,4,6,-1,-1,4,8,9,-10,7,-6,-10,-3,4,-9,-5,-6,2,-8,-1,-3,4,-6,-5,-4,8,5,10,1,6,-2,6,1,2,-3,8,-5,7,-5,-8,7,8,1,1,-2,3,-9,-4,7,8,6,-5,-10,4,5,4,-5,-5,2,10,3,2,2,-10,9,-10,6,7,8,-3,1,-4,-2,5,-4,-2,8,-9,-7,1,1,-4,-9,-4,2,9,-5,-2,-1,-2,1,4,-5,10,-1,1,-4,-10,-6,7,2,-5,-8,-3,-5,-6,7,6,2,-8,-6,-7,-6,3,-1,-1,-6,-7,3,-7,-5,3,-2,7,-4,7,6,2,10,3,8,4,10,10,1,2,-10,-9,-5,-6,-1,-10,-8,-8,-2,10,7,-3,5,-10,9,-4,8,-1,10,-1,2,-10,8,9,-1,7,4,4,-1,8,8,-1,7,-7,-1,2,2,6,-9,7,5,-9,1,-8,10,6,-2,-4,9,8,2,5,-3,3,7,4,-3,1,-6,10,-7,-6,3,9,-5,-4,-8,-2,-10,-3,-6,-9,9,5,-10,-3,-1,-7,-3,6,3,5,-9,-2,-4,5,3,-9,3,10,-8,2,6,-4,6,-4,-10,-2,-8,7,1,-1,6,-9,-1,6,-5,-1,-8,7,4,4,-4,2,-1,3,-3,-6,-4,9,3,-7,4,9,-4,9,-10,2,9,8,-5,2,7,6,-1,7,2,4,3,-9,10,4,1,3,-2,-8,2,-6,7,10,-8,-4,2,-6,9,-9,1,8,9,-2,4,9,-1,7,-6,-4,4,3,-3,-9,4,1,1,-9,-3,-3,-10,-5,5,7,-8,6,-10,-8,-7,7,-6,9,2,-10,-9,-3,5,-10,-7,4,1,-7,-6,-5,-1,6,-5,-5,-3,3,7,-10,2,-5,-10,-6,6,3,-6,6,-3,5,9,6,-6,-3,2,7,5,5,-8,6,4,-7,8,-10,-8,-10,6,7,4,8,5,-2,-7,6,7,9,-1,-2,2,1,-6,4,-8,7,-3,8,10,8,6,-3,6,-2,8,8,-5,-9,10,6,-8,-10,8,1,-9,-5,3,-7,10,7,-5,-10,-4,3,4,-1,-2,5,10,-10,-3,5,-3,-6,-4,-2,8,9,-3,-3,2,9,-7,-6,10,-6,-10,-10,3,-5,9,-6,-1,6,-9,-1,4,-5,-6,-6,6,9,4,9,5,6,1,-10,1,6,-4,-1,9,-9,-6,1,-8,-7,10,-2,10,-1,-4,-3,9,-2,-6,-3,-8,10,-7,5,-9,-10,8,8,-1,-9,3,9,3,5,4,-4,10,6,3,3,-4,5,-6,-10,-3,2,-2,8,-2,-5,-10,-9,-3,8,-8,9,5,-6,6,-9,-6,7,-2,3,7,-2,-5,9,-8,3,9,2,6,8,5,-5,8,10,6,-6,9,3,-1,-3,1,-6,10,6,-7,9,10,4,-5,-10,6,-5,-3,1,3,2,-10,2,-8,5,3,-9,8,-2,8,6,-9,-10,-1,6,-5,-8,1,-6,-10,-6,6,7,9,-9,-3,-2,9,-5,-3,4,3,2,4,5,-8,7,6,-10,-3,-5,-5,9,9,4,-8,9,-2,5,8,8,-1,-1,-8,6,-9,8,-8,-8,2,8,-10,-1,-7,-8,8,-2,-2,-8,4,-10,4,9,-6,6,8,-9,-10,-1,-9,-1,-7,-8,6,7,-9,-4,-8,5,-9,3,-5,-6,-3,2,-7,8,6,5,1,5,-3,-3,4,-5,8,-8,8,-10,2,2,-4,5,6,5,2,-7,1,-5,9,7,6,4,1,7,-5,3,9,3,-8,1,10,-4,-10,-5,-9,-8,-8,-10,-4,2,-6,-1,3,-10,-4,-10,1,-7,-4,-9,7,-9,8,5,6,3,10,-9,-10,3,-4,-10,6,-5,2,-3,-1,-3,2,3,3,4,-10,8,3,-5,4,-1,3,-1,10,-1,8,10,-1,-10,8,2,8,-9,-1,8,-8,-6,-5,-5,4,-5,-9,2,9,6,7,-5,-8,-6,9,-4,4,-7,8,-3,-7,5,-5,-7,3,2,-3,-5,-3,2,8,8,-10,9,8,-10,-2,2,2,-10,5,4,-10,1,-3,-5,2,1,10,-10,3,5,5,-3,-9,1,-6,3,8,-9,-10,-10,-6,6,2,-6,6,-2,-1,7,9,-5,6,1,6,5,-2,10,-7,-8,2,5,7,8,-4,7,6,-8,-4,6,-1,-5,7,5,-2,2,6,4,7,-1,-9,-4,-2,9,5,5,-8,1,8,9,8,5,-9,7,-3,6,-7,-8,7,7,3,-8,-4,8,2,3,-7,3,-9,3,-9,3,1,8,-9,8,9,-4,-4,7,10,-5,10,4,-8,-1,-5,-4,-6,-4,7,6,9,-1,4,8,-5,10,3,-5,2,8,10,4,4,10,2,-9,8,4,7,-6,5,10,-2,8,2,-1,-10,10,-5,-9,-6,9,-10,6,5,10,7,-9,-4,5,7,-8,-1,2,9,-4,-2,1,-6,-7,-8,-2,-6,6,-9,8,4,-2,-4,-2,8,8,-9,-1,-5,-5,-7,7,-7,7,-1,2,1,-4,-8,6,2,-5,-4,-5,9,9,6,-1,-7,9,-3,5,4,-7,-6,10,10,1,4,-10,-6,8,4,-7,8,-1,8,5,5,-4,-8,1,10,1,-7,-8,1,-7,5,-6,-1,-6,-2,8,-6,8,-9,-1,10,4,4,-2,-7,-7,-4,-7,-7,1,5,-7,-6,-4,-6,5,-8,5,2,-4,6,-1,-4,5,-3,-3,8,1,6,10,-10,-10,-5,-10], dtype = "uint8")#candidate|7412|(2100,)|const|uint8
var_7413 = relay.var("var_7413", dtype = "uint16", shape = (845,))#candidate|7413|(845,)|var|uint16
call_7411 = relay.TupleGetItem(func_1038_call(relay.reshape(const_7412.astype('uint8'), [10, 14, 15]), relay.reshape(var_7413.astype('uint16'), [845,]), ), 0)
call_7414 = relay.TupleGetItem(func_1042_call(relay.reshape(const_7412.astype('uint8'), [10, 14, 15]), relay.reshape(var_7413.astype('uint16'), [845,]), ), 0)
output = relay.Tuple([call_7405,call_7411,const_7412,var_7413,])
output2 = relay.Tuple([call_7406,call_7414,const_7412,var_7413,])
func_7417 = relay.Function([var_7413,], output)
mod['func_7417'] = func_7417
mod = relay.transform.InferType()(mod)
mutated_mod['func_7417'] = func_7417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7418 = relay.var("var_7418", dtype = "uint16", shape = (845,))#candidate|7418|(845,)|var|uint16
func_7417_call = mutated_mod.get_global_var('func_7417')
call_7419 = func_7417_call(var_7418)
output = call_7419
func_7420 = relay.Function([var_7418], output)
mutated_mod['func_7420'] = func_7420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mod.get_global_var('func_5986')
func_5987_call = mutated_mod.get_global_var('func_5987')
call_7427 = relay.TupleGetItem(func_5986_call(), 1)
call_7428 = relay.TupleGetItem(func_5987_call(), 1)
uop_7434 = relay.asin(call_7427.astype('float32')) # shape=(12, 15, 4)
uop_7436 = relay.asin(call_7428.astype('float32')) # shape=(12, 15, 4)
output = uop_7434
output2 = uop_7436
func_7439 = relay.Function([], output)
mod['func_7439'] = func_7439
mod = relay.transform.InferType()(mod)
output = func_7439()
func_7440 = relay.Function([], output)
mutated_mod['func_7440'] = func_7440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7448 = relay.var("var_7448", dtype = "uint64", shape = (4, 6, 12))#candidate|7448|(4, 6, 12)|var|uint64
var_7449 = relay.var("var_7449", dtype = "uint64", shape = (4, 6, 12))#candidate|7449|(4, 6, 12)|var|uint64
bop_7450 = relay.logical_xor(var_7448.astype('uint64'), relay.reshape(var_7449.astype('uint64'), relay.shape_of(var_7448))) # shape=(4, 6, 12)
output = relay.Tuple([bop_7450,])
output2 = relay.Tuple([bop_7450,])
func_7453 = relay.Function([var_7448,var_7449,], output)
mod['func_7453'] = func_7453
mod = relay.transform.InferType()(mod)
mutated_mod['func_7453'] = func_7453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7453_call = mutated_mod.get_global_var('func_7453')
var_7455 = relay.var("var_7455", dtype = "uint64", shape = (4, 6, 12))#candidate|7455|(4, 6, 12)|var|uint64
var_7456 = relay.var("var_7456", dtype = "uint64", shape = (4, 6, 12))#candidate|7456|(4, 6, 12)|var|uint64
call_7454 = func_7453_call(var_7455,var_7456,)
output = call_7454
func_7457 = relay.Function([var_7455,var_7456,], output)
mutated_mod['func_7457'] = func_7457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4073_call = mod.get_global_var('func_4073')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_7532 = func_4073_call()
call_7533 = func_4073_call()
func_2983_call = mod.get_global_var('func_2983')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_7544 = relay.TupleGetItem(func_2983_call(), 0)
call_7545 = relay.TupleGetItem(func_2985_call(), 0)
output = relay.Tuple([call_7532,call_7544,])
output2 = relay.Tuple([call_7533,call_7545,])
func_7547 = relay.Function([], output)
mod['func_7547'] = func_7547
mod = relay.transform.InferType()(mod)
mutated_mod['func_7547'] = func_7547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7547_call = mutated_mod.get_global_var('func_7547')
call_7548 = func_7547_call()
output = call_7548
func_7549 = relay.Function([], output)
mutated_mod['func_7549'] = func_7549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6355_call = mod.get_global_var('func_6355')
func_6357_call = mutated_mod.get_global_var('func_6357')
call_7559 = relay.TupleGetItem(func_6355_call(), 2)
call_7560 = relay.TupleGetItem(func_6357_call(), 2)
output = call_7559
output2 = call_7560
func_7580 = relay.Function([], output)
mod['func_7580'] = func_7580
mod = relay.transform.InferType()(mod)
output = func_7580()
func_7581 = relay.Function([], output)
mutated_mod['func_7581'] = func_7581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3292_call = mod.get_global_var('func_3292')
func_3293_call = mutated_mod.get_global_var('func_3293')
call_7627 = func_3292_call()
call_7628 = func_3292_call()
output = call_7627
output2 = call_7628
func_7643 = relay.Function([], output)
mod['func_7643'] = func_7643
mod = relay.transform.InferType()(mod)
output = func_7643()
func_7644 = relay.Function([], output)
mutated_mod['func_7644'] = func_7644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_7650 = relay.TupleGetItem(func_4051_call(), 1)
call_7651 = relay.TupleGetItem(func_4053_call(), 1)
func_3292_call = mod.get_global_var('func_3292')
func_3293_call = mutated_mod.get_global_var('func_3293')
call_7655 = func_3292_call()
call_7656 = func_3292_call()
output = relay.Tuple([call_7650,call_7655,])
output2 = relay.Tuple([call_7651,call_7656,])
func_7659 = relay.Function([], output)
mod['func_7659'] = func_7659
mod = relay.transform.InferType()(mod)
mutated_mod['func_7659'] = func_7659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7659_call = mutated_mod.get_global_var('func_7659')
call_7660 = func_7659_call()
output = call_7660
func_7661 = relay.Function([], output)
mutated_mod['func_7661'] = func_7661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6096_call = mod.get_global_var('func_6096')
func_6098_call = mutated_mod.get_global_var('func_6098')
call_7870 = relay.TupleGetItem(func_6096_call(), 2)
call_7871 = relay.TupleGetItem(func_6098_call(), 2)
output = relay.Tuple([call_7870,])
output2 = relay.Tuple([call_7871,])
func_7872 = relay.Function([], output)
mod['func_7872'] = func_7872
mod = relay.transform.InferType()(mod)
mutated_mod['func_7872'] = func_7872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7872_call = mutated_mod.get_global_var('func_7872')
call_7873 = func_7872_call()
output = call_7873
func_7874 = relay.Function([], output)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4424_call = mutated_mod.get_global_var('func_4424')
call_7898 = relay.TupleGetItem(func_4423_call(), 1)
call_7899 = relay.TupleGetItem(func_4424_call(), 1)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_7907 = relay.TupleGetItem(func_4694_call(), 4)
call_7908 = relay.TupleGetItem(func_4696_call(), 4)
uop_7913 = relay.asin(call_7898.astype('float64')) # shape=(4, 10, 5)
uop_7915 = relay.asin(call_7899.astype('float64')) # shape=(4, 10, 5)
uop_7921 = relay.sin(uop_7913.astype('float32')) # shape=(4, 10, 5)
uop_7923 = relay.sin(uop_7915.astype('float32')) # shape=(4, 10, 5)
output = relay.Tuple([call_7907,uop_7921,])
output2 = relay.Tuple([call_7908,uop_7923,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

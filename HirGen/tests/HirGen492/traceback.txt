==========mod==========
#[version = "0.0.5"]
def @func_8638() -> (Tensor[(15, 11, 15), float64],) {
  %0 = @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1 = %0.1;
  (%1,)
}

def @func_1695(%var_1690: Tensor[(15, 11, 15), float64]) -> Tensor[(15, 11, 15), int8] {
  %2 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %3 = %2.0;
  %4 = cast(%var_1690, dtype="int8") /* ty=Tensor[(15, 11, 15), int8] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%3, dtype="int8") /* ty=Tensor[(15, 11, 15), int8] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_xor(%6, %7) /* ty=Tensor[(15, 11, 15), int8] */
}

def @func_8086() -> Tensor[(15, 11, 15), bool] {
  %8 = @func_6044() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %8.0
}

def @func_2475() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %9 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %10 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %11 = %9.2;
  %12 = %10.1;
  (%11, %12)
}

def @func_4338() -> (Tensor[(15, 11, 15), int64],) {
  %13 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %14 = %13.0;
  (%14,)
}

def @func_9063() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %15 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %16 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %17 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %18 = %15.1;
  %19 = %16.1;
  %20 = %17.1;
  (%18, %19, %20)
}

def @func_12747() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %21 = @func_2646() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %22 = @func_4338() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %23 = %21.2;
  %24 = %22.0;
  (%23, %24)
}

def @func_11524() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) {
  %25 = @func_3257() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %26 = %25.0;
  %27 = @func_3442() /* ty=Tensor[(15, 11, 15), float64] */;
  (%26, %27)
}

def @func_9697(%var_9667: Tensor[(275), int32]) -> (Tensor[(15, 11, 15), uint8], Tensor[(5, 5, 11), int32], Tensor[(275), int32], Tensor[(12, 4, 15), float32], Tensor[(720), int64]) {
  %28 = @func_9601() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) */;
  %29 = cast(%var_9667, dtype="int32") /* ty=Tensor[(275), int32] */;
  %30 = reshape(%29, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), int32] */;
  %31 = @func_3837(%30) /* ty=(Tensor[(5, 5, 11), int32],) */;
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(720), int64] */, dtype="int64") /* ty=Tensor[(720), int64] */;
  %33 = reshape(%32, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int64] */;
  %34 = @func_8613(%33) /* ty=(Tensor[(12, 4, 15), bool], Tensor[(16, 1, 14), float64], Tensor[(224), float64], Tensor[(12, 4, 15), float32]) */;
  %35 = %28.0;
  %36 = %31.0;
  %37 = %34.3;
  (%35, %36, %var_9667, %37, meta[relay.Constant][0] /* ty=Tensor[(720), int64] */)
}

def @func_5781(%var_5778: Tensor[(13, 21), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64]) {
  %38 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %39 = cast(%var_5778, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %40 = @func_5144() /* ty=Tensor[(15, 11, 15), float64] */;
  %41 = cast(%40, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %42 = reshape(%39, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %43 = reshape(%41, newshape=[2475]) /* ty=Tensor[(2475), bool] */;
  %44 = @func_2842(%42, %43) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */;
  %45 = %38.0;
  %46 = %44.0;
  (%40, %45, %46, %var_5778)
}

def @func_10024() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %47 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %48 = @func_8457() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %49 = %47.1;
  %50 = %48.4;
  %51 = @func_5436() /* ty=Tensor[(15, 11, 15), float64] */;
  (%49, %50, %51)
}

def @func_6138(%var_6103: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), float64], Tensor[(2366), int64]) {
  %52 = @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %53 = @func_2475() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %54 = cast(%var_6103, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %55 = cast(%var_6103, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %56 = reshape(%54, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), uint16] */;
  %57 = reshape(%55, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), uint16] */;
  %58 = @func_3859(%56, %57) /* ty=(Tensor[(11, 15, 16), bool], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64]) */;
  %59 = cast(meta[relay.Constant][1] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %60 = reshape(%59, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %61 = @func_4522(%60) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) */;
  %62 = %52.0;
  %63 = %53.1;
  %64 = %58.1;
  %65 = %61.2;
  (%62, %63, %64, %var_6103, %65, meta[relay.Constant][1] /* ty=Tensor[(2366), int64] */)
}

def @func_10072() -> (Tensor[(15, 11, 15), bool],) {
  %66 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %67 = %66.3;
  (%67,)
}

def @func_1903() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
  %68 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %69 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %70 = %69.0;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(15, 11, 15), float32] */;
  %72 = @func_1438() /* ty=Tensor[(15, 11, 15), bool] */;
  %73 = cast(%72, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %74 = reshape(%73, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
  %75 = cast(%72, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %76 = reshape(%75, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %77 = @func_405(%76) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %78 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %79 = %68.1;
  %80 = rsqrt(%71) /* ty=Tensor[(15, 11, 15), float32] */;
  %81 = @func_1695(%74) /* ty=Tensor[(15, 11, 15), int8] */;
  %82 = %77.0;
  %83 = %78.0;
  (%79, %72, %80, %81, %82, %83)
}

def @func_2983() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %84 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %85 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %86 = %84.2;
  %87 = cast(%86, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %88 = cast(%86, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %89 = reshape(%87, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %90 = reshape(%88, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %91 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %92 = %85.1;
  %93 = @func_20(%89, %90) /* ty=Tensor[(15, 11, 15), bool] */;
  %94 = %91.1;
  (%86, %92, %93, %94)
}

def @func_3927(%var_3886: Tensor[(7, 14, 16), uint16], %var_3887: Tensor[(7, 14, 16), uint16]) -> (Tensor[(7, 14, 16), bool], Tensor[(7, 14, 16), float64], Tensor[(7, 14, 16), float64]) {
  %95 = cast(%var_3886, dtype="bool") /* ty=Tensor[(7, 14, 16), bool] */;
  %96 = shape_of(%var_3887, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%var_3887, dtype="bool") /* ty=Tensor[(7, 14, 16), bool] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %99 = cast(%var_3887, dtype="bool") /* ty=Tensor[(7, 14, 16), bool] */;
  %100 = shape_of(%var_3886, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_3886, dtype="bool") /* ty=Tensor[(7, 14, 16), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %103 = equal(%101, %102) /* ty=Tensor[(7, 14, 16), bool] */;
  %104 = cast(%103, dtype="float64") /* ty=Tensor[(7, 14, 16), float64] */;
  %105 = asinh(%104) /* ty=Tensor[(7, 14, 16), float64] */;
  %106 = cast(%105, dtype="float64") /* ty=Tensor[(7, 14, 16), float64] */;
  %107 = cast(%105, dtype="float64") /* ty=Tensor[(7, 14, 16), float64] */;
  %108 = less(%97, %98) /* ty=Tensor[(7, 14, 16), bool] */;
  %109 = sigmoid(%106) /* ty=Tensor[(7, 14, 16), float64] */;
  %110 = atan(%107) /* ty=Tensor[(7, 14, 16), float64] */;
  (%108, %109, %110)
}

def @func_859() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %111 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %112 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %113 = %111.2;
  %114 = %112.3;
  (%113, %114)
}

def @func_7414() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %115 = @func_6044() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %116 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
  %117 = %115.0;
  (%116, %117)
}

def @func_5954() -> (Tensor[(15, 11, 15), float64],) {
  %118 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %119 = %118.0;
  (%119,)
}

def @func_14042(%var_14019: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %120 = cast(%var_14019, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
  %121 = @func_3482() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %122 = cos(%120) /* ty=Tensor[(5, 14, 4), float64] */;
  %123 = @func_8921() /* ty=Tensor[(15, 11, 15), bool] */;
  %124 = %121.0;
  (%122, %123, %124)
}

def @func_8171() -> Tensor[(15, 11, 15), bool] {
  %125 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %125.0
}

def @func_14083(%var_14067: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 11, 15), float64]) {
  %126 = cast(%var_14067, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %127 = cos(%126) /* ty=Tensor[(3, 7, 4), float64] */;
  %128 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
  (%127, %128)
}

def @func_5144() -> Tensor[(15, 11, 15), float64] {
  @func_1170() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_6279() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %129 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %130 = @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %131 = @func_4160() /* ty=Tensor[(15, 11, 15), float64] */;
  %132 = %129.0;
  %133 = %130.1;
  (%131, %132, %133)
}

def @func_2159(%var_2101: Tensor[(4, 7, 8), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) {
  %134 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %135 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %136 = cast(%var_2101, dtype="float64") /* ty=Tensor[(4, 7, 8), float64] */;
  %137 = sigmoid(%136) /* ty=Tensor[(4, 7, 8), float64] */;
  %138 = cast(%var_2101, dtype="float64") /* ty=Tensor[(4, 7, 8), float64] */;
  %139 = sin(%138) /* ty=Tensor[(4, 7, 8), float64] */;
  %140 = cast(%139, dtype="uint16") /* ty=Tensor[(4, 7, 8), uint16] */;
  %141 = shape_of(%137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%137, dtype="uint16") /* ty=Tensor[(4, 7, 8), uint16] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %144 = cast(%137, dtype="int64") /* ty=Tensor[(4, 7, 8), int64] */;
  %145 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%139, dtype="int64") /* ty=Tensor[(4, 7, 8), int64] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %148 = bitwise_or(%146, %147) /* ty=Tensor[(4, 7, 8), int64] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(4, 7, 8), float32] */;
  %150 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%139, dtype="float32") /* ty=Tensor[(4, 7, 8), float32] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %153 = %134.1;
  %154 = %135.0;
  %155 = left_shift(%142, %143) /* ty=Tensor[(4, 7, 8), uint16] */;
  %156 = maximum(%151, %152) /* ty=Tensor[(4, 7, 8), float32] */;
  (%153, %154, %155, %156)
}

def @func_8750() -> Tensor[(15, 11, 15), bool] {
  @func_1438() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_4493(%var_4487: Tensor[(11, 5, 3), float32]) -> (Tensor[(11, 5, 3), float32],) {
  %157 = cast(%var_4487, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %158 = exp(%157) /* ty=Tensor[(11, 5, 3), float32] */;
  (%158,)
}

def @func_9141() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %159 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %160 = @func_8402() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %161 = @func_6589() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %162 = %159.0;
  %163 = @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */;
  %164 = %160.0;
  %165 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
  %166 = %161.1;
  (%162, %163, %164, %165, %166)
}

def @func_9601() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) {
  %167 = @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */;
  %168 = @func_8367() /* ty=Tensor[(15, 11, 15), float64] */;
  (%167, %168)
}

def @func_5172() -> (Tensor[(15, 11, 15), float64],) {
  %169 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %170 = %169.0;
  (%170,)
}

def @func_15113() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %171 = @func_7875() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %172 = @func_14962() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %173 = @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %174 = %171.1;
  %175 = %172.0;
  %176 = %173.1;
  (%174, %175, %176)
}

def @func_9158() -> (Tensor[(15, 11, 15), float64],) {
  %177 = @func_8367() /* ty=Tensor[(15, 11, 15), float64] */;
  (%177,)
}

def @func_7101() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %178 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %179 = %178.1;
  %180 = @func_4160() /* ty=Tensor[(15, 11, 15), float64] */;
  (%179, %180)
}

def @func_11242() -> (Tensor[(15, 11, 15), float64],) {
  %181 = @func_6189() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int8]) */;
  %182 = %181.0;
  (%182,)
}

def @func_6498() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
  %183 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %184 = @func_5323() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %185 = %183.2;
  %186 = %184.1;
  (%185, %186)
}

def @func_11476() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %187 = @func_7936() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %188 = @func_8839() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), bool]) */;
  %189 = %187.0;
  %190 = %188.4;
  (%189, %190)
}

def @func_9737() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %191 = @func_6546() /* ty=Tensor[(15, 11, 15), bool] */;
  %192 = @func_5436() /* ty=Tensor[(15, 11, 15), float64] */;
  (%191, %192)
}

def @func_7471() -> Tensor[(15, 11, 15), float64] {
  %193 = @func_6717() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %193.2
}

def @func_10824() -> Tensor[(15, 11, 15), bool] {
  %194 = @func_7805() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %194.0
}

def @func_12283() -> (Tensor[(15, 11, 15), float64],) {
  %195 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %196 = %195.1;
  (%196,)
}

def @func_8948() -> (Tensor[(2475, 1), uint32],) {
  %197 = @func_8233() /* ty=(Tensor[(2475, 1), uint32],) */;
  %198 = %197.0;
  (%198,)
}

def @func_12890(%var_12848: Tensor[(8, 14, 16), float64]) -> (Tensor[(8, 14, 16), float32], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(8, 14, 16), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) {
  %199 = cast(%var_12848, dtype="float64") /* ty=Tensor[(8, 14, 16), float64] */;
  %200 = erf(%199) /* ty=Tensor[(8, 14, 16), float64] */;
  %201 = cast(%var_12848, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %205 = @func_11476() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %206 = cast(%200, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %207 = tan(%206) /* ty=Tensor[(8, 14, 16), float32] */;
  %208 = cast(%207, dtype="float64") /* ty=Tensor[(8, 14, 16), float64] */;
  %209 = cast(meta[relay.Constant][2] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %210 = cast(meta[relay.Constant][2] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %211 = reshape(%209, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %212 = reshape(%210, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %213 = @func_2512(%211, %212) /* ty=(Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) */;
  %214 = mod(%203, %204) /* ty=Tensor[(8, 14, 16), float32] */;
  %215 = @func_9552() /* ty=Tensor[(15, 11, 15), int64] */;
  %216 = %205.1;
  %217 = exp(%208) /* ty=Tensor[(8, 14, 16), float64] */;
  %218 = %213.3;
  (%214, %215, %216, %217, %218, meta[relay.Constant][2] /* ty=Tensor[(2340), uint32] */)
}

def @func_12949() -> Tensor[(15, 11, 15), float64] {
  %219 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %219.2
}

def @func_3098() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %220 = @func_3054() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %221 = %220.0;
  %222 = cast(%221, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %223 = reshape(%222, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %224 = @func_405(%223) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %225 = %224.0;
  (%221, %225)
}

def @func_1438() -> Tensor[(15, 11, 15), bool] {
  %226 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %226.0
}

def @func_6444() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %227 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %228 = %227.0;
  %229 = @func_2391() /* ty=Tensor[(15, 11, 15), float64] */;
  (%228, %229)
}

def @func_13351() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(2, 5, 16), float64], Tensor[(2475), uint32]) {
  %230 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %231 = @func_11913() /* ty=(Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float64]) */;
  %232 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
  %233 = %230.0;
  %234 = @func_11602() /* ty=Tensor[(15, 11, 15), bool] */;
  %235 = %231.2;
  %236 = %232.3;
  (%233, %234, %235, %236)
}

def @func_10561() -> (Tensor[(15, 11, 15), float64],) {
  %237 = @func_7600() /* ty=Tensor[(15, 11, 15), float64] */;
  (%237,)
}

def @func_11277() -> (Tensor[(2475, 1), uint32], Tensor[(224), float64], Tensor[(2340), uint32]) {
  %238 = @func_8233() /* ty=(Tensor[(2475, 1), uint32],) */;
  %239 = cast(meta[relay.Constant][3] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %240 = cast(meta[relay.Constant][3] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %241 = reshape(%239, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %242 = reshape(%240, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %243 = @func_2512(%241, %242) /* ty=(Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) */;
  %244 = %238.0;
  %245 = %243.2;
  (%244, %245, meta[relay.Constant][3] /* ty=Tensor[(2340), uint32] */)
}

def @func_1755() -> Tensor[(15, 11, 15), bool] {
  %246 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %246.2
}

def @func_2646() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %247 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %248 = %247.0;
  %249 = cast(%248, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %250 = reshape(%249, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
  %251 = @func_1592(%250) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %252 = @func_2310() /* ty=Tensor[(15, 11, 15), bool] */;
  %253 = %251.2;
  (%248, %252, %253)
}

def @func_10646(%var_10639: Tensor[(11, 4, 6), uint64], %var_10640: Tensor[(11, 4, 6), uint64]) -> (Tensor[(11, 4, 6), uint64],) {
  %254 = cast(%var_10640, dtype="uint64") /* ty=Tensor[(11, 4, 6), uint64] */;
  %255 = shape_of(%var_10639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%var_10639, dtype="uint64") /* ty=Tensor[(11, 4, 6), uint64] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %258 = left_shift(%256, %257) /* ty=Tensor[(11, 4, 6), uint64] */;
  (%258,)
}

def @func_12972() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %259 = @func_5954() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %260 = @func_4211() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %261 = %259.0;
  %262 = %260.1;
  (%261, %262)
}

def @func_8613(%var_8588: Tensor[(12, 4, 15), int64]) -> (Tensor[(12, 4, 15), bool], Tensor[(16, 1, 14), float64], Tensor[(224), float64], Tensor[(12, 4, 15), float32]) {
  %263 = cast(7 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %264 = cast(%var_8588, dtype="bool") /* ty=Tensor[(12, 4, 15), bool] */;
  %265 = cast(meta[relay.Constant][4] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %266 = reshape(%265, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), float64] */;
  %267 = cast(%var_8588, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
  %268 = less_equal(%263, %264) /* ty=Tensor[(12, 4, 15), bool] */;
  %269 = @func_6730(%266) /* ty=Tensor[(16, 1, 14), float64] */;
  %270 = sigmoid(%267) /* ty=Tensor[(12, 4, 15), float32] */;
  (%268, %269, meta[relay.Constant][4] /* ty=Tensor[(224), float64] */, %270)
}

def @func_10423() -> Tensor[(15, 11, 15), uint8] {
  %271 = @func_5109() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32]) */;
  %271.1
}

def @func_1321() -> Tensor[(15, 11, 15), bool] {
  %272 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %272.4
}

def @func_8554() -> (Tensor[(15, 11, 15), float64],) {
  %273 = @func_6953() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %274 = %273.0;
  (%274,)
}

def @func_5622() -> (Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) {
  %275 = cast(meta[relay.Constant][6] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %276 = cast(meta[relay.Constant][5] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %277 = reshape(%276, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
  %278 = @func_2159(%277) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
  %279 = %278.0;
  %280 = cast(%279, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %281 = reshape(%275, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %282 = reshape(%280, newshape=[2475]) /* ty=Tensor[(2475), bool] */;
  %283 = @func_2842(%281, %282) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */;
  %284 = %283.2;
  %285 = cast(%279, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %286 = shape_of(%284, dtype="int32") /* ty=Tensor[(1), int32] */;
  %287 = cast(%284, dtype="uint32") /* ty=Tensor[(2475), uint32] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %289 = @func_2181() /* ty=Tensor[(15, 11, 15), float64] */;
  %290 = bitwise_xor(%287, %288) /* ty=Tensor[(2475), uint32] */;
  (%289, meta[relay.Constant][5] /* ty=Tensor[(224), float64] */, meta[relay.Constant][6] /* ty=Tensor[(273), float64] */, %290)
}

def @func_13672(%var_13665: Tensor[(16, 11, 15), bool]) -> (Tensor[(16, 11, 15), bool],) {
  %291 = cast(%var_13665, dtype="bool") /* ty=Tensor[(16, 11, 15), bool] */;
  %292 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(16, 11, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 11, 15), bool] */, dtype="bool") /* ty=Tensor[(16, 11, 15), bool] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %295 = logical_and(%293, %294) /* ty=Tensor[(16, 11, 15), bool] */;
  (%295,)
}

def @func_4399() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %296 = @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
  %297 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %298 = %296.0;
  %299 = @func_2391() /* ty=Tensor[(15, 11, 15), float64] */;
  %300 = @func_4160() /* ty=Tensor[(15, 11, 15), float64] */;
  %301 = %297.1;
  %302 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
  (%298, %299, %300, %301, %302)
}

def @func_13118() -> (Tensor[(2475, 1), uint32],) {
  %303 = @func_8233() /* ty=(Tensor[(2475, 1), uint32],) */;
  %304 = %303.0;
  (%304,)
}

def @func_12689() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %305 = @func_8935() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %306 = @func_7140() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) */;
  %307 = @func_5130() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %308 = @func_10708() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %309 = %305.0;
  %310 = %306.1;
  %311 = %307.0;
  %312 = %308.0;
  (%309, %310, %311, %312)
}

def @func_13871() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64]) {
  %313 = @func_10561() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %314 = @func_6900() /* ty=(Tensor[(13, 15, 12), float64], Tensor[(15, 11, 15), bool]) */;
  %315 = @func_7600() /* ty=Tensor[(15, 11, 15), float64] */;
  %316 = %313.0;
  %317 = %314.0;
  (%315, %316, %317)
}

def @func_7805() -> (Tensor[(15, 11, 15), bool],) {
  %318 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %319 = %318.0;
  (%319,)
}

def @func_1448() -> (Tensor[(15, 11, 15), float64],) {
  %320 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %321 = %320.0;
  (%321,)
}

def @func_1124() -> (Tensor[(15, 11, 15), float64],) {
  %322 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %323 = %322.0;
  (%323,)
}

def @func_5130() -> (Tensor[(15, 11, 15), bool],) {
  %324 = @func_3054() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %325 = %324.0;
  (%325,)
}

def @func_14014() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8]) {
  %326 = @func_12237() /* ty=Tensor[(15, 11, 15), bool] */;
  %327 = @func_6874() /* ty=Tensor[(15, 11, 15), uint8] */;
  (%326, %327)
}

def @func_15407(%var_15395: Tensor[(6, 3, 3), float64]) -> Tensor[(6, 3, 3), float32] {
  %328 = cast(%var_15395, dtype="float64") /* ty=Tensor[(6, 3, 3), float64] */;
  %329 = sqrt(%328) /* ty=Tensor[(6, 3, 3), float64] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(6, 3, 3), float32] */;
  tan(%330) /* ty=Tensor[(6, 3, 3), float32] */
}

def @func_7936() -> (Tensor[(15, 11, 15), bool],) {
  %331 = @func_5245() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %332 = %331.1;
  (%332,)
}

def @func_14943() -> Tensor[(15, 11, 15), bool] {
  %333 = @func_10708() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %333.0
}

def @func_3482() -> (Tensor[(15, 11, 15), float64],) {
  %334 = @func_2181() /* ty=Tensor[(15, 11, 15), float64] */;
  (%334,)
}

def @func_11309() -> Tensor[(15, 11, 15), bool] {
  %335 = @func_7826() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %335.0
}

def @func_7875() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %336 = @func_7826() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %337 = @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %338 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %339 = %336.1;
  %340 = %337.0;
  %341 = %338.0;
  (%339, %340, %341)
}

def @func_8233() -> (Tensor[(2475, 1), uint32],) {
  %342 = @func_5989() /* ty=(Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), float64]) */;
  %343 = %342.0;
  (%343,)
}

def @func_6364() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %344 = @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %345 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %346 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %347 = %344.1;
  %348 = %345.0;
  %349 = %346.1;
  (%347, %348, %349)
}

def @func_11969() -> Tensor[(15, 11, 15), float64] {
  %350 = @func_9158() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %350.0
}

def @func_12045(%var_12030: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(2640), float64]) {
  %351 = cast(meta[relay.Constant][8] /* ty=Tensor[(2640), uint16] */, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %352 = reshape(%351, newshape=[2640]) /* ty=Tensor[(2640), uint16] */;
  %353 = @func_6138(%352) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), float64], Tensor[(2366), int64]) */;
  %354 = @func_8935() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %355 = cast(%var_12030, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %356 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(2640), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %357 = cast(meta[relay.Constant][8] /* ty=Tensor[(2640), uint16] */, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %359 = cast(meta[relay.Constant][8] /* ty=Tensor[(2640), uint16] */, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %360 = @func_2391() /* ty=Tensor[(15, 11, 15), float64] */;
  %361 = @func_10895() /* ty=Tensor[(15, 11, 15), bool] */;
  %362 = %353.1;
  %363 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
  %364 = @func_3442() /* ty=Tensor[(15, 11, 15), float64] */;
  %365 = %354.0;
  %366 = right_shift(%357, %358) /* ty=Tensor[(2640), uint16] */;
  %367 = @func_8171() /* ty=Tensor[(15, 11, 15), bool] */;
  %368 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
  %369 = log10(%359) /* ty=Tensor[(2640), float64] */;
  (%360, %361, %362, %363, %364, %365, %366, %367, %368, %369)
}

def @func_8744() -> Tensor[(15, 11, 15), float64] {
  @func_3442() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_6849() -> Tensor[(15, 11, 15), float64] {
  %370 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %370.0
}

def @func_8402() -> (Tensor[(15, 11, 15), float32],) {
  %371 = @func_5323() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %372 = %371.0;
  (%372,)
}

def @func_10519() -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool]) {
  %373 = @func_9141() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %374 = @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %375 = %373.2;
  %376 = %374.0;
  (%375, %376)
}

def @func_9611() -> Tensor[(15, 11, 15), float64] {
  %377 = @func_8935() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %377.0
}

def @func_11708() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool]) {
  %378 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %379 = @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */;
  %380 = %378.6;
  (%379, %380)
}

def @func_6874() -> Tensor[(15, 11, 15), uint8] {
  %381 = @func_5109() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32]) */;
  %381.1
}

def @func_9814() -> (Tensor[(15, 11, 15), bool],) {
  %382 = @func_6717() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %383 = %382.0;
  (%383,)
}

def @func_1275() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %384 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %385 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %386 = %384.0;
  %387 = %385.5;
  (%386, %387)
}

def @func_13635() -> Tensor[(15, 11, 15), int64] {
  %388 = @func_7502() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %388.1
}

def @func_405(%var_391: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), int64],) {
  %389 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %390 = %389.3;
  %391 = cast(%var_391, dtype="int64") /* ty=Tensor[(15, 11, 15), int64] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%390, dtype="int64") /* ty=Tensor[(15, 11, 15), int64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %395 = left_shift(%393, %394) /* ty=Tensor[(15, 11, 15), int64] */;
  (%395,)
}

def @func_10859() -> Tensor[(15, 11, 15), float64] {
  @func_7600() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_3426() -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) {
  %396 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %397 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %398 = %396.0;
  %399 = %397.5;
  (%398, %399)
}

def @func_13320() -> (Tensor[(15, 11, 15), float64],) {
  %400 = @func_11969() /* ty=Tensor[(15, 11, 15), float64] */;
  (%400,)
}

def @func_13541() -> (Tensor[(15, 11, 15), bool], Tensor[(224), float64]) {
  %401 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
  %402 = @func_8086() /* ty=Tensor[(15, 11, 15), bool] */;
  %403 = %401.1;
  (%402, %403)
}

def @func_12824() -> (Tensor[(15, 11, 15), float64],) {
  %404 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
  (%404,)
}

def @func_4472(%var_4445: Tensor[(2475), bool]) -> (Tensor[(7, 13, 16), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(2475), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %405 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 13, 16), float32] */, dtype="float32") /* ty=Tensor[(7, 13, 16), float32] */;
  %406 = cosh(%405) /* ty=Tensor[(7, 13, 16), float32] */;
  %407 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 13, 16), float32] */, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %411 = cast(meta[relay.Constant][10] /* ty=Tensor[(39, 7), float64] */, dtype="float64") /* ty=Tensor[(39, 7), float64] */;
  %412 = cast(%var_4445, dtype="bool") /* ty=Tensor[(2475), bool] */;
  %413 = reshape(%411, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %414 = reshape(%412, newshape=[2475]) /* ty=Tensor[(2475), bool] */;
  %415 = @func_2842(%413, %414) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */;
  %416 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %417 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %418 = add(%409, %410) /* ty=Tensor[(7, 13, 16), float64] */;
  %419 = %415.0;
  %420 = %416.1;
  %421 = %417.0;
  (%418, %419, meta[relay.Constant][10] /* ty=Tensor[(39, 7), float64] */, %var_4445, %420, %421)
}

def @func_367() -> (Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %422 = cast(meta[relay.Constant][11] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
  %423 = cast(meta[relay.Constant][11] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
  %424 = reshape(%422, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %425 = reshape(%423, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %426 = @func_20(%424, %425) /* ty=Tensor[(15, 11, 15), bool] */;
  %427 = cast(%426, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %428 = cast(meta[relay.Constant][11] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
  %429 = reshape(%427, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %430 = reshape(%428, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %431 = cast(meta[relay.Constant][11] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
  %432 = cast(%426, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %433 = reshape(%431, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %434 = reshape(%432, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %435 = @func_20(%433, %434) /* ty=Tensor[(15, 11, 15), bool] */;
  %436 = cast(%435, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %437 = cast(%426, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %438 = reshape(%436, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %439 = reshape(%437, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %440 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %441 = log10(%440) /* ty=Tensor[(13, 13, 10), float32] */;
  %442 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 13, 10), float32] */, dtype="uint16") /* ty=Tensor[(13, 13, 10), uint16] */;
  %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%441, dtype="uint16") /* ty=Tensor[(13, 13, 10), uint16] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %446 = left_shift(%444, %445) /* ty=Tensor[(13, 13, 10), uint16] */;
  %447 = cast(%446, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %448 = cos(%447) /* ty=Tensor[(13, 13, 10), float32] */;
  %449 = cast(%448, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %450 = cast(%435, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %451 = @func_20(%438, %439) /* ty=Tensor[(15, 11, 15), bool] */;
  %452 = cast(%451, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %453 = reshape(%450, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %454 = reshape(%452, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %455 = cast(meta[relay.Constant][11] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
  %456 = cast(meta[relay.Constant][11] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
  %457 = reshape(%455, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %458 = reshape(%456, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %459 = @func_20(%429, %430) /* ty=Tensor[(15, 11, 15), bool] */;
  %460 = cast(%459, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %461 = cast(%435, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %462 = reshape(%460, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %463 = reshape(%461, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %464 = @func_20(%462, %463) /* ty=Tensor[(15, 11, 15), bool] */;
  %465 = cast(%464, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %466 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%435, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %469 = sin(%449) /* ty=Tensor[(13, 13, 10), float32] */;
  %470 = @func_20(%453, %454) /* ty=Tensor[(15, 11, 15), bool] */;
  %471 = @func_20(%457, %458) /* ty=Tensor[(15, 11, 15), bool] */;
  %472 = subtract(%467, %468) /* ty=Tensor[(15, 11, 15), float64] */;
  (%426, meta[relay.Constant][11] /* ty=Tensor[(2475, 1), uint32] */, %459, %451, %469, %470, %471, %472)
}

def @func_4954() -> (Tensor[(15, 11, 15), bool], Tensor[(2475, ?), bool]) {
  %473 = @func_3054() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %474 = @func_3782() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), float64]) */;
  %475 = %473.0;
  %476 = %474.2;
  (%475, %476)
}

def @func_15389() -> Tensor[(15, 11, 15), bool] {
  @func_1438() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_3837(%var_3829: Tensor[(5, 5, 11), int32]) -> (Tensor[(5, 5, 11), int32],) {
  %477 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %478 = cast(%var_3829, dtype="int32") /* ty=Tensor[(5, 5, 11), int32] */;
  %479 = right_shift(%477, %478) /* ty=Tensor[(5, 5, 11), int32] */;
  (%479,)
}

def @func_10930() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %480 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %481 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %482 = %480.0;
  %483 = %481.1;
  (%482, %483)
}

def @func_4522(%var_4501: Tensor[(13, 13, 14), int64]) -> (Tensor[(13, 13, 14), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) {
  %484 = cast(-6 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %485 = cast(%var_4501, dtype="bool") /* ty=Tensor[(13, 13, 14), bool] */;
  %486 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %487 = @func_3200() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %488 = less(%484, %485) /* ty=Tensor[(13, 13, 14), bool] */;
  %489 = %486.3;
  %490 = %487.1;
  (%488, %489, %490)
}

def @func_1991() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %491 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %492 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %493 = %491.1;
  %494 = %492.0;
  %495 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
  (%493, %494, %495)
}

def @func_6298() -> Tensor[(15, 11, 15), bool] {
  %496 = @func_5043() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %496.0
}

def @func_4111() -> Tensor[(15, 11, 15), float64] {
  %497 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %497.0
}

def @func_12471() -> Tensor[(15, 11, 15), float64] {
  %498 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %498.1
}

def @func_6044() -> (Tensor[(15, 11, 15), bool],) {
  %499 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
  (%499,)
}

def @func_6589() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %500 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %501 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
  %502 = %500.1;
  %503 = %501.1;
  (%502, %503)
}

def @func_538() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %504 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %507 = cast(%505, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %508 = cast(%505, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %509 = reshape(%507, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %510 = reshape(%508, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %511 = cast(%505, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %512 = reshape(%511, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %513 = @func_405(%512) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %514 = log(%506) /* ty=Tensor[(15, 11, 15), float64] */;
  %515 = cast(%514, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %516 = reshape(%515, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %517 = @func_405(%516) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %518 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %519 = cast(%505, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %520 = @func_20(%509, %510) /* ty=Tensor[(15, 11, 15), bool] */;
  %521 = cast(%520, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %522 = reshape(%519, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %523 = reshape(%521, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %524 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %525 = %524.2;
  %526 = cast(%525, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %527 = %513.0;
  %528 = cast(%527, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %529 = reshape(%526, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %530 = reshape(%528, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %531 = cast(%505, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %532 = cast(%525, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %533 = reshape(%531, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %534 = reshape(%532, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %535 = cast(%505, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %536 = %518.3;
  %537 = cast(%536, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %538 = reshape(%535, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %539 = reshape(%537, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %540 = %517.0;
  %541 = @func_20(%522, %523) /* ty=Tensor[(15, 11, 15), bool] */;
  %542 = @func_20(%529, %530) /* ty=Tensor[(15, 11, 15), bool] */;
  %543 = @func_20(%533, %534) /* ty=Tensor[(15, 11, 15), bool] */;
  %544 = @func_20(%538, %539) /* ty=Tensor[(15, 11, 15), bool] */;
  (%514, %520, %527, %540, %536, %541, %525, %542, %543, %544)
}

def @func_11879() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %545 = @func_9265() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %546 = @func_8171() /* ty=Tensor[(15, 11, 15), bool] */;
  %547 = %545.1;
  (%546, %547)
}

def @func_14595() -> (Tensor[(15, 11, 15), float64],) {
  %548 = @func_12824() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %549 = %548.0;
  (%549,)
}

def @func_3013() -> Tensor[(15, 11, 15), float64] {
  %550 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %550.0
}

def @func_8020() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8]) {
  %551 = @func_7235() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %552 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %553 = @func_6298() /* ty=Tensor[(15, 11, 15), bool] */;
  %554 = %551.1;
  %555 = %552.3;
  (%553, %554, %555)
}

def @func_2282(%var_2267: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) {
  %556 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %557 = %556.3;
  %558 = cast(%var_2267, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%557, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %562 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(15, 11, 15), float32] */;
  %565 = greater(%560, %561) /* ty=Tensor[(15, 11, 15), bool] */;
  %566 = sigmoid(%564) /* ty=Tensor[(15, 11, 15), float32] */;
  (%565, %566)
}

def @func_7826() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %567 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %568 = %567.1;
  %569 = @func_6849() /* ty=Tensor[(15, 11, 15), float64] */;
  (%568, %569)
}

def @func_10895() -> Tensor[(15, 11, 15), bool] {
  %570 = @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %570.2
}

def @func_8691() -> Tensor[(15, 11, 15), uint8] {
  @func_6874() /* ty=Tensor[(15, 11, 15), uint8] */
}

def @func_2450() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %571 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %572 = %571.0;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %574 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %575 = %574.1;
  %576 = cast(%575, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %577 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%572, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %580 = equal(%578, %579) /* ty=Tensor[(15, 11, 15), bool] */;
  %581 = cast(%580, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %582 = reshape(%581, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %583 = @func_2088(%582) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %584 = log2(%573) /* ty=Tensor[(15, 11, 15), float64] */;
  %585 = %583.1;
  (%584, %580, %585)
}

def @func_11761() -> Tensor[(15, 11, 15), float64] {
  %586 = @func_6279() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %586.0
}

def @func_9806() -> Tensor[(15, 11, 15), bool] {
  %587 = @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
  %587.2
}

def @func_9937() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(7, 13, 3), float32], Tensor[(15, 11, 15), float64]) {
  %588 = @func_5954() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %589 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %590 = @func_4813() /* ty=(Tensor[(7, 13, 3), float32],) */;
  %591 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %592 = %588.0;
  %593 = %589.0;
  %594 = %590.0;
  %595 = %591.0;
  (%592, %593, %594, %595)
}

def @func_10484() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %596 = @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %597 = @func_10210() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %598 = %596.1;
  %599 = %597.0;
  (%598, %599)
}

def @func_13187() -> Tensor[(273), float64] {
  @func_11789() /* ty=Tensor[(273), float64] */
}

def @func_2842(%var_2827: Tensor[(7, 13, 3), float64], %var_2833: Tensor[(2475), bool]) -> (Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) {
  %600 = cast(%var_2827, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %601 = cast(%var_2833, dtype="bool") /* ty=Tensor[(2475), bool] */;
  %602 = reshape(%601, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %603 = @func_2282(%602) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) */;
  %604 = exp(%600) /* ty=Tensor[(7, 13, 3), float64] */;
  %605 = %603.0;
  (%604, %605, %var_2833)
}

def @func_9441() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int8]) {
  %606 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %607 = @func_8020() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8]) */;
  %608 = %606.0;
  %609 = %607.2;
  (%608, %609)
}

def @func_2181() -> Tensor[(15, 11, 15), float64] {
  %610 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %610.0
}

def @func_13423() -> (Tensor[(15, 11, 15), bool],) {
  %611 = @func_11879() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %612 = %611.0;
  (%612,)
}

def @func_2682() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %613 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %614 = %613.1;
  %615 = @func_1438() /* ty=Tensor[(15, 11, 15), bool] */;
  (%614, %615)
}

def @func_6953() -> (Tensor[(15, 11, 15), float64],) {
  %616 = @func_6444() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %617 = %616.0;
  (%617,)
}

def @func_14565(%var_14552: Tensor[(9, 11, 12), uint32], %var_14553: Tensor[(9, 11, 12), uint32]) -> (Tensor[(9, 11, 12), uint32], Tensor[(15, 11, 15), float64]) {
  %618 = cast(%var_14553, dtype="uint32") /* ty=Tensor[(9, 11, 12), uint32] */;
  %619 = shape_of(%var_14552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_14552, dtype="uint32") /* ty=Tensor[(9, 11, 12), uint32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %622 = maximum(%620, %621) /* ty=Tensor[(9, 11, 12), uint32] */;
  %623 = @func_11969() /* ty=Tensor[(15, 11, 15), float64] */;
  (%622, %623)
}

def @func_3591(%var_3545: Tensor[(14, 3, 3), float32]) -> (Tensor[(14, 3, 3), float32], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %624 = cast(%var_3545, dtype="float32") /* ty=Tensor[(14, 3, 3), float32] */;
  %625 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %626 = @func_2330() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %627 = @func_2475() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %628 = acos(%624) /* ty=Tensor[(14, 3, 3), float32] */;
  %629 = %625.3;
  %630 = %626.0;
  %631 = %627.1;
  (%628, %629, %630, %631)
}

def @func_4160() -> Tensor[(15, 11, 15), float64] {
  %632 = @func_2330() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %632.0
}

def @func_5053() -> Tensor[(15, 11, 15), float64] {
  @func_1369() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_10708() -> (Tensor[(15, 11, 15), bool],) {
  %633 = @func_6717() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %634 = %633.0;
  (%634,)
}

def @func_14360(%var_14329: Tensor[(11, 5, 13), float32]) -> (Tensor[(11, 5, 13), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %635 = cast(%var_14329, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
  %636 = asin(%635) /* ty=Tensor[(11, 5, 13), float32] */;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
  %638 = shape_of(%var_14329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%var_14329, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = @func_7543() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %642 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %643 = less(%639, %640) /* ty=Tensor[(11, 5, 13), bool] */;
  %644 = %641.0;
  %645 = %642.0;
  (%643, %644, %645)
}

def @func_5907() -> Tensor[(15, 11, 15), bool] {
  %646 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %646.1
}

def @func_4211() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %647 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %648 = %647.1;
  %649 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %650 = %649.2;
  %651 = cast(%650, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %652 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%648, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %655 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %656 = mod(%653, %654) /* ty=Tensor[(15, 11, 15), float64] */;
  %657 = %655.1;
  (%656, %657)
}

def @func_7543() -> (Tensor[(15, 11, 15), float64],) {
  %658 = @func_7536() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %659 = %658.1;
  (%659,)
}

def @func_1170() -> Tensor[(15, 11, 15), float64] {
  %660 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %660.0
}

def @func_7841() -> Tensor[(15, 11, 15), bool] {
  @func_2310() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_3257() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %661 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %662 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %663 = %661.3;
  %664 = %662.0;
  %665 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
  (%663, %664, %665)
}

def @func_5569(%var_5540: Tensor[(104), float64]) -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool], Tensor[(104), float64], Tensor[(15, 11, 15), bool]) {
  %666 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %667 = cast(%var_5540, dtype="float64") /* ty=Tensor[(104), float64] */;
  %668 = reshape(%667, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), float64] */;
  %669 = @func_5466(%668) /* ty=(Tensor[(13, 2, 4), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) */;
  %670 = %666.2;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %672 = reshape(%671, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
  %673 = @func_1592(%672) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %674 = %669.2;
  %675 = %673.2;
  (%670, %674, %var_5540, %675)
}

def @func_14715() -> Tensor[(15, 11, 15), float64] {
  %676 = @func_8554() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %676.0
}

def @func_3715() -> (Tensor[(15, 11, 15), int64],) {
  %677 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %678 = %677.1;
  (%678,)
}

def @func_5466(%var_5446: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) {
  %679 = cast(%var_5446, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  %680 = log10(%679) /* ty=Tensor[(13, 2, 4), float64] */;
  %681 = cast(%var_5446, dtype="bool") /* ty=Tensor[(13, 2, 4), bool] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%680, dtype="bool") /* ty=Tensor[(13, 2, 4), bool] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %685 = @func_3098() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %686 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %687 = not_equal(%683, %684) /* ty=Tensor[(13, 2, 4), bool] */;
  %688 = %685.1;
  %689 = %686.2;
  (%687, %688, %689)
}

def @func_14855() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %690 = @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %691 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %692 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %693 = %690.0;
  %694 = %691.0;
  %695 = %692.1;
  (%693, %694, %695)
}

def @func_8921() -> Tensor[(15, 11, 15), bool] {
  %696 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %696.1
}

def @func_11378() -> (Tensor[(15, 11, 15), int64],) {
  %697 = @func_10314() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float32]) */;
  %698 = %697.0;
  (%698,)
}

def @func_6546() -> Tensor[(15, 11, 15), bool] {
  @func_5907() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_11035(%var_11027: Tensor[(7, 14, 14), int8], %var_11028: Tensor[(7, 14, 14), int8]) -> Tensor[(7, 14, 14), int8] {
  %699 = cast(%var_11028, dtype="int8") /* ty=Tensor[(7, 14, 14), int8] */;
  %700 = shape_of(%var_11027, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%var_11027, dtype="int8") /* ty=Tensor[(7, 14, 14), int8] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%701, %702) /* ty=Tensor[(7, 14, 14), int8] */
}

def @func_20(%var_12: Tensor[(15, 11, 15), uint32], %var_13: Tensor[(15, 11, 15), uint32]) -> Tensor[(15, 11, 15), bool] {
  %703 = cast(%var_13, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %704 = shape_of(%var_12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%var_12, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%705, %706) /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_4842() -> (Tensor[(15, 11, 15), int64],) {
  %707 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %708 = %707.0;
  (%708,)
}

def @func_14500() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), uint8]) {
  %709 = @func_6225() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(273), float32]) */;
  %710 = %709.0;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %712 = reshape(%711, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
  %713 = @func_10519() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool]) */;
  %714 = @func_1695(%712) /* ty=Tensor[(15, 11, 15), int8] */;
  %715 = %713.0;
  %716 = @func_6874() /* ty=Tensor[(15, 11, 15), uint8] */;
  (%710, %714, %715, %716)
}

def @func_12144() -> Tensor[(15, 11, 15), float64] {
  %717 = @func_7543() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %717.0
}

def @func_10720() -> (Tensor[(15, 11, 15), bool],) {
  %718 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %719 = %718.3;
  (%719,)
}

def @main(%var_15609: Tensor[(7, 5, 2), float32]) -> (Tensor[(7, 5, 2), float32], Tensor[(7, 5, 2), float32]) {
  %720 = cast(%var_15609, dtype="float32") /* ty=Tensor[(7, 5, 2), float32] */;
  %721 = cast(%var_15609, dtype="float32") /* ty=Tensor[(7, 5, 2), float32] */;
  %722 = cos(%720) /* ty=Tensor[(7, 5, 2), float32] */;
  %723 = sigmoid(%721) /* ty=Tensor[(7, 5, 2), float32] */;
  (%722, %723)
}

def @func_8203(%var_8185: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) {
  %724 = @func_7841() /* ty=Tensor[(15, 11, 15), bool] */;
  %725 = cast(%var_8185, dtype="int8") /* ty=Tensor[(15, 11, 15), int8] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%724, dtype="int8") /* ty=Tensor[(15, 11, 15), int8] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %729 = add(%727, %728) /* ty=Tensor[(15, 11, 15), int8] */;
  %730 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
  (%729, %730)
}

def @func_14164() -> (Tensor[(15, 11, 15), bool],) {
  %731 = @func_7805() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %732 = %731.0;
  (%732,)
}

def @func_15189() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8]) {
  %733 = @func_8744() /* ty=Tensor[(15, 11, 15), float64] */;
  %734 = @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */;
  (%733, %734)
}

def @func_8839() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), bool]) {
  %735 = @func_4266() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %736 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %737 = @func_3098() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %738 = @func_4954() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, ?), bool]) */;
  %739 = %735.0;
  %740 = %736.3;
  %741 = %737.1;
  %742 = %738.1;
  %743 = @func_6546() /* ty=Tensor[(15, 11, 15), bool] */;
  (%739, %740, %741, %742, %743)
}

def @func_10143() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %744 = @func_5323() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %745 = %744.2;
  %746 = @func_8171() /* ty=Tensor[(15, 11, 15), bool] */;
  (%745, %746)
}

def @func_14054() -> Tensor[(15, 11, 15), float32] {
  %747 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %747.0
}

def @func_6717() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %748 = @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %749 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
  %750 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
  %751 = %748.0;
  (%749, %750, %751)
}

def @func_8457() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %752 = @func_8171() /* ty=Tensor[(15, 11, 15), bool] */;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %754 = reshape(%753, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %755 = @func_8203(%754) /* ty=(Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) */;
  %756 = @func_7414() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %757 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %758 = %755.1;
  %759 = @func_3013() /* ty=Tensor[(15, 11, 15), float64] */;
  %760 = %756.1;
  %761 = %757.0;
  %762 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
  (%752, %758, %759, %760, %761, %762)
}

def @func_11949(%var_11932: Tensor[(4, 6, 6), float64]) -> (Tensor[(4, 6, 6), float64], Tensor[(11, 4, 6), uint64], Tensor[(264), uint64]) {
  %763 = cast(%var_11932, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %764 = log(%763) /* ty=Tensor[(4, 6, 6), float64] */;
  %765 = cast(%var_11932, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %769 = cast(meta[relay.Constant][13] /* ty=Tensor[(264), uint64] */, dtype="uint64") /* ty=Tensor[(264), uint64] */;
  %770 = cast(meta[relay.Constant][13] /* ty=Tensor[(264), uint64] */, dtype="uint64") /* ty=Tensor[(264), uint64] */;
  %771 = reshape(%769, newshape=[11, 4, 6]) /* ty=Tensor[(11, 4, 6), uint64] */;
  %772 = reshape(%770, newshape=[11, 4, 6]) /* ty=Tensor[(11, 4, 6), uint64] */;
  %773 = @func_10646(%771, %772) /* ty=(Tensor[(11, 4, 6), uint64],) */;
  %774 = maximum(%767, %768) /* ty=Tensor[(4, 6, 6), float64] */;
  %775 = %773.0;
  (%774, %775, meta[relay.Constant][13] /* ty=Tensor[(264), uint64] */)
}

def @func_12912() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %776 = @func_12783() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %777 = @func_4842() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %778 = %776.1;
  %779 = %777.0;
  (%778, %779)
}

def @func_14910() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %780 = @func_14855() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %781 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  %782 = %780.0;
  %783 = @func_4111() /* ty=Tensor[(15, 11, 15), float64] */;
  %784 = @func_2310() /* ty=Tensor[(15, 11, 15), bool] */;
  (%781, %782, %783, %784)
}

def @func_14518() -> Tensor[(15, 11, 15), bool] {
  @func_1755() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_4813() -> (Tensor[(7, 13, 3), float32],) {
  %785 = @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
  %786 = %785.3;
  %787 = cast(%786, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %788 = cosh(%787) /* ty=Tensor[(7, 13, 3), float64] */;
  %789 = cast(%788, dtype="float32") /* ty=Tensor[(7, 13, 3), float32] */;
  %790 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%786, dtype="float32") /* ty=Tensor[(7, 13, 3), float32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %793 = mod(%791, %792) /* ty=Tensor[(7, 13, 3), float32] */;
  %794 = cast(%793, dtype="float32") /* ty=Tensor[(7, 13, 3), float32] */;
  %795 = sigmoid(%794) /* ty=Tensor[(7, 13, 3), float32] */;
  (%795,)
}

def @func_1000() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) {
  %796 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %797 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %798 = %797.2;
  %799 = cast(%798, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %800 = %796.1;
  %801 = cast(%800, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %802 = cast(%800, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %803 = reshape(%801, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %804 = reshape(%802, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %805 = @func_20(%803, %804) /* ty=Tensor[(15, 11, 15), bool] */;
  %806 = cast(%805, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %807 = reshape(%799, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %808 = reshape(%806, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %809 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %810 = %809.1;
  %811 = cast(%805, dtype="uint8") /* ty=Tensor[(15, 11, 15), uint8] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="uint8") /* ty=Tensor[(15, 11, 15), uint8] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %815 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %816 = %815.4;
  %817 = cast(%816, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %818 = atan(%817) /* ty=Tensor[(13, 13, 10), float32] */;
  %819 = cast(%816, dtype="uint8") /* ty=Tensor[(13, 13, 10), uint8] */;
  %820 = shape_of(%818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%818, dtype="uint8") /* ty=Tensor[(13, 13, 10), uint8] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %823 = multiply(%821, %822) /* ty=Tensor[(13, 13, 10), uint8] */;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %825 = shape_of(%818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%818, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %828 = @func_20(%807, %808) /* ty=Tensor[(15, 11, 15), bool] */;
  %829 = logical_xor(%813, %814) /* ty=Tensor[(15, 11, 15), uint8] */;
  %830 = divide(%826, %827) /* ty=Tensor[(13, 13, 10), float32] */;
  (%800, %798, %828, %829, %830)
}

def @func_2354() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %831 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %832 = @func_1438() /* ty=Tensor[(15, 11, 15), bool] */;
  %833 = %831.4;
  (%832, %833)
}

def @func_10210() -> (Tensor[(15, 11, 15), bool],) {
  %834 = @func_7235() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %835 = %834.1;
  (%835,)
}

def @func_6225() -> (Tensor[(15, 11, 15), bool], Tensor[(273), float32]) {
  %836 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
  %837 = %836.2;
  %838 = cast(%837, dtype="float32") /* ty=Tensor[(273), float32] */;
  %839 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  %840 = atanh(%838) /* ty=Tensor[(273), float32] */;
  (%839, %840)
}

def @func_2088(%var_2067: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %841 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  %842 = cast(%var_2067, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%841, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %846 = floor_mod(%844, %845) /* ty=Tensor[(15, 11, 15), float64] */;
  %847 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
  (%846, %847)
}

def @func_2220() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %848 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %849 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
  %850 = %848.0;
  (%849, %850)
}

def @func_15523() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %851 = @func_10210() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %852 = @func_5907() /* ty=Tensor[(15, 11, 15), bool] */;
  %853 = %851.0;
  %854 = @func_9552() /* ty=Tensor[(15, 11, 15), int64] */;
  (%852, %853, %854)
}

def @func_2391() -> Tensor[(15, 11, 15), float64] {
  @func_1170() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_14648() -> (Tensor[(224), float64], Tensor[(15, 11, 15), int64], Tensor[(2475), bool]) {
  %855 = @func_11277() /* ty=(Tensor[(2475, 1), uint32], Tensor[(224), float64], Tensor[(2340), uint32]) */;
  %856 = cast(meta[relay.Constant][14] /* ty=Tensor[(2475), bool] */, dtype="bool") /* ty=Tensor[(2475), bool] */;
  %857 = reshape(%856, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %858 = @func_405(%857) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %859 = %855.1;
  %860 = %858.0;
  (%859, %860, meta[relay.Constant][14] /* ty=Tensor[(2475), bool] */)
}

def @func_13479(%var_13476: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64], Tensor[(2640), uint16]) {
  %861 = @func_4009() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) */;
  %862 = cast(%var_13476, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %863 = cast(%var_13476, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %864 = reshape(%862, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), uint16] */;
  %865 = reshape(%863, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), uint16] */;
  %866 = @func_3859(%864, %865) /* ty=(Tensor[(11, 15, 16), bool], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64]) */;
  %867 = @func_11188() /* ty=Tensor[(15, 11, 15), uint8] */;
  %868 = %861.0;
  %869 = %866.2;
  (%867, %868, %869, %var_13476)
}

def @func_7502() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %870 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %871 = @func_4338() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %872 = %870.1;
  %873 = %871.0;
  (%872, %873)
}

def @func_1424() -> (Tensor[(15, 11, 15), float64],) {
  %874 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %875 = %874.3;
  %876 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 11, 15), bool] */, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %877 = shape_of(%875, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%875, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %880 = floor_divide(%878, %879) /* ty=Tensor[(15, 11, 15), float64] */;
  (%880,)
}

def @func_4908(%var_4893: Tensor[(224), float64]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(4, 7, 8), int32]) {
  %881 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %882 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %883 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %884 = cast(%var_4893, dtype="float64") /* ty=Tensor[(224), float64] */;
  %885 = reshape(%884, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
  %886 = @func_2159(%885) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
  %887 = %886.2;
  %888 = cast(%var_4893, dtype="int32") /* ty=Tensor[(224), int32] */;
  %889 = shape_of(%887, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%887, dtype="int32") /* ty=Tensor[(4, 7, 8), int32] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %892 = %881.0;
  %893 = @func_2310() /* ty=Tensor[(15, 11, 15), bool] */;
  %894 = %882.0;
  %895 = %883.3;
  %896 = bitwise_and(%890, %891) /* ty=Tensor[(4, 7, 8), int32] */;
  (%892, %893, %894, %895, %896)
}

def @func_12417(%var_12324: Tensor[(112, 2), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(112, 2), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %897 = cast(%var_12324, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %898 = reshape(%897, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
  %899 = @func_2159(%898) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
  %900 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %901 = @func_7471() /* ty=Tensor[(15, 11, 15), float64] */;
  %902 = %899.1;
  %903 = @func_11761() /* ty=Tensor[(15, 11, 15), float64] */;
  %904 = %900.0;
  (%901, %902, %var_12324, %903, %904)
}

def @func_11602() -> Tensor[(15, 11, 15), bool] {
  %905 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %905.6
}

def @func_7140() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) {
  %906 = @func_6498() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %907 = cast(meta[relay.Constant][16] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %908 = reshape(%907, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
  %909 = @func_2159(%908) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
  %910 = %906.1;
  %911 = %909.0;
  (%910, %911, meta[relay.Constant][16] /* ty=Tensor[(224), float64] */)
}

def @func_12783() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %912 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
  %913 = @func_3013() /* ty=Tensor[(15, 11, 15), float64] */;
  %914 = %912.1;
  (%913, %914)
}

def @func_4009() -> (Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) {
  %915 = @func_2475() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %916 = cast(meta[relay.Constant][17] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %917 = cast(meta[relay.Constant][17] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %918 = reshape(%916, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %919 = reshape(%917, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %920 = @func_2512(%918, %919) /* ty=(Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) */;
  %921 = %915.0;
  %922 = %920.3;
  (%921, %922, meta[relay.Constant][17] /* ty=Tensor[(2340), uint32] */)
}

def @func_8935() -> (Tensor[(15, 11, 15), float64],) {
  %923 = @func_5436() /* ty=Tensor[(15, 11, 15), float64] */;
  (%923,)
}

def @func_11913() -> (Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float64]) {
  %924 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 5, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %925 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(2, 5, 16), float64] */;
  %926 = log2(%925) /* ty=Tensor[(2, 5, 16), float64] */;
  %927 = cast(%926, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %928 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(2, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 5, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %931 = cast(%926, dtype="float64") /* ty=Tensor[(2, 5, 16), float64] */;
  %932 = log(%924) /* ty=Tensor[(2, 5, 16), float32] */;
  %933 = minimum(%929, %930) /* ty=Tensor[(2, 5, 16), float32] */;
  %934 = log10(%931) /* ty=Tensor[(2, 5, 16), float64] */;
  (%932, %933, %934)
}

def @func_6604() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %935 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
  %936 = @func_3442() /* ty=Tensor[(15, 11, 15), float64] */;
  (%935, %936)
}

def @func_11789() -> Tensor[(273), float64] {
  %937 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
  %937.2
}

def @func_2705() -> (Tensor[(15, 11, 15), float32],) {
  %938 = @func_2646() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %939 = %938.1;
  %940 = cast(%939, dtype="float32") /* ty=Tensor[(15, 11, 15), float32] */;
  %941 = erf(%940) /* ty=Tensor[(15, 11, 15), float32] */;
  (%941,)
}

def @func_13443() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %942 = @func_8554() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %943 = %942.0;
  %944 = @func_5436() /* ty=Tensor[(15, 11, 15), float64] */;
  (%943, %944)
}

def @func_11025() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %945 = @func_6498() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %946 = @func_10423() /* ty=Tensor[(15, 11, 15), uint8] */;
  %947 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
  %948 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
  %949 = @func_6458() /* ty=Tensor[(15, 11, 15), bool] */;
  %950 = %945.1;
  (%946, %947, %948, %949, %950)
}

def @func_13168() -> (Tensor[(15, 11, 15), float64],) {
  %951 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
  %952 = %951.1;
  (%952,)
}

def @func_12312() -> Tensor[(15, 11, 15), float64] {
  %953 = @func_7140() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) */;
  %953.1
}

def @func_15231() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8]) {
  %954 = @func_12312() /* ty=Tensor[(15, 11, 15), float64] */;
  %955 = @func_10423() /* ty=Tensor[(15, 11, 15), uint8] */;
  (%954, %955)
}

def @func_1369() -> Tensor[(15, 11, 15), float64] {
  %956 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  exp(%957) /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_10314() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float32]) {
  %958 = @func_9441() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int8]) */;
  %959 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %960 = %958.0;
  %961 = %959.0;
  (%960, %961)
}

def @func_13101() -> (Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) {
  %962 = @func_11025() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %963 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %964 = %963.4;
  %965 = cast(%964, dtype="float64") /* ty=Tensor[(13, 13, 10), float64] */;
  %966 = cosh(%965) /* ty=Tensor[(13, 13, 10), float64] */;
  %967 = cast(%966, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %968 = %962.0;
  %969 = asinh(%967) /* ty=Tensor[(13, 13, 10), float32] */;
  (%968, %969)
}

def @func_6802(%var_6789: Tensor[(12, 14, 5), int32]) -> Tensor[(12, 14, 5), int32] {
  %970 = cast(%var_6789, dtype="int32") /* ty=Tensor[(12, 14, 5), int32] */;
  %971 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(12, 14, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %972 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 14, 5), int32] */, dtype="int32") /* ty=Tensor[(12, 14, 5), int32] */;
  %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%972, %973) /* ty=Tensor[(12, 14, 5), int32] */
}

def @func_7654() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(104, 1), float64]) {
  %974 = @func_6498() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %975 = %974.0;
  %976 = cast(%975, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %977 = reshape(%976, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %978 = @func_2088(%977) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %979 = cast(meta[relay.Constant][20] /* ty=Tensor[(104, 1), float64] */, dtype="float64") /* ty=Tensor[(104, 1), float64] */;
  %980 = reshape(%979, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %981 = @func_5569(%980) /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool], Tensor[(104), float64], Tensor[(15, 11, 15), bool]) */;
  %982 = %978.1;
  %983 = %981.1;
  (%975, %982, %983, meta[relay.Constant][20] /* ty=Tensor[(104, 1), float64] */)
}

def @func_5436() -> Tensor[(15, 11, 15), float64] {
  %984 = @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %984.1
}

def @func_12448(%var_12425: Tensor[(1, 16, 12), uint16], %var_12426: Tensor[(2, 16, 12), uint16]) -> (Tensor[(2, 16, 12), uint16], Tensor[(1, 16, 12), float64], Tensor[(15, 11, 15), uint8]) {
  %985 = cast(%var_12425, dtype="uint16") /* ty=Tensor[(1, 16, 12), uint16] */;
  %986 = cast(%var_12426, dtype="uint16") /* ty=Tensor[(2, 16, 12), uint16] */;
  %987 = cast(%var_12425, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %988 = @func_11524() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) */;
  %989 = bitwise_and(%985, %986) /* ty=Tensor[(2, 16, 12), uint16] */;
  %990 = exp(%987) /* ty=Tensor[(1, 16, 12), float64] */;
  %991 = %988.0;
  (%989, %990, %991)
}

def @func_11139(%var_11121: Tensor[(8, 5, 6), int64], %var_11122: Tensor[(8, 5, 6), int64]) -> (Tensor[(8, 5, 6), bool], Tensor[(15, 11, 15), bool]) {
  %992 = cast(%var_11122, dtype="int64") /* ty=Tensor[(8, 5, 6), int64] */;
  %993 = shape_of(%var_11121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%var_11121, dtype="int64") /* ty=Tensor[(8, 5, 6), int64] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %996 = bitwise_and(%994, %995) /* ty=Tensor[(8, 5, 6), int64] */;
  %997 = cast(%var_11121, dtype="bool") /* ty=Tensor[(8, 5, 6), bool] */;
  %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%996, dtype="bool") /* ty=Tensor[(8, 5, 6), bool] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1001 = @func_5816() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) */;
  %1002 = logical_and(%999, %1000) /* ty=Tensor[(8, 5, 6), bool] */;
  %1003 = %1001.1;
  (%1002, %1003)
}

def @func_9514(%var_9501: Tensor[(1, 5, 1), float64]) -> (Tensor[(16, 5, 11), int8],) {
  %1004 = cast(%var_9501, dtype="float64") /* ty=Tensor[(1, 5, 1), float64] */;
  %1005 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %1006 = floor_mod(%1004, %1005) /* ty=Tensor[(16, 5, 11), float64] */;
  %1007 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 5, 11), float64] */, dtype="int8") /* ty=Tensor[(16, 5, 11), int8] */;
  %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%1006, dtype="int8") /* ty=Tensor[(16, 5, 11), int8] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1011 = right_shift(%1009, %1010) /* ty=Tensor[(16, 5, 11), int8] */;
  (%1011,)
}

def @func_7600() -> Tensor[(15, 11, 15), float64] {
  %1012 = @func_7543() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1012.0
}

def @func_2512(%var_2480: Tensor[(13, 15, 12), uint32], %var_2481: Tensor[(13, 15, 12), uint32]) -> (Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) {
  %1013 = cast(%var_2481, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
  %1014 = shape_of(%var_2480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(%var_2480, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1017 = cast(meta[relay.Constant][22] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1018 = reshape(%1017, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
  %1019 = @func_2159(%1018) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
  %1020 = cast(%var_2480, dtype="float64") /* ty=Tensor[(13, 15, 12), float64] */;
  %1021 = less(%1015, %1016) /* ty=Tensor[(13, 15, 12), bool] */;
  %1022 = %1019.1;
  %1023 = atanh(%1020) /* ty=Tensor[(13, 15, 12), float64] */;
  (%1021, %1022, meta[relay.Constant][22] /* ty=Tensor[(224), float64] */, %1023)
}

def @func_5989() -> (Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), float64]) {
  %1024 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1025 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1026 = %1024.1;
  %1027 = %1025.1;
  (%1026, %1027)
}

def @func_15019(%var_14994: Tensor[(2475), uint32]) -> (Tensor[(2475), uint16], Tensor[(2475), float32]) {
  %1028 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
  %1029 = %1028.3;
  %1030 = cast(%var_14994, dtype="uint16") /* ty=Tensor[(2475), uint16] */;
  %1031 = shape_of(%1029, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1032 = cast(%1029, dtype="uint16") /* ty=Tensor[(2475), uint16] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1034 = cast(%var_14994, dtype="float32") /* ty=Tensor[(2475), float32] */;
  %1035 = sinh(%1034) /* ty=Tensor[(2475), float32] */;
  %1036 = cast(%1035, dtype="float32") /* ty=Tensor[(2475), float32] */;
  %1037 = minimum(%1032, %1033) /* ty=Tensor[(2475), uint16] */;
  %1038 = log2(%1036) /* ty=Tensor[(2475), float32] */;
  (%1037, %1038)
}

def @func_7301() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %1039 = @func_5816() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) */;
  %1040 = @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %1041 = %1039.1;
  %1042 = %1040.1;
  (%1041, %1042)
}

def @func_3782() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), float64]) {
  %1043 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1044 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
  %1045 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1046 = %1045.1;
  %1047 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1048 = %1047.1;
  %1049 = cast(%1048, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1050 = shape_of(%1046, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1051 = cast(%1046, dtype="bool") /* ty=Tensor[(2475, 1), bool] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1053 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1054 = %1043.0;
  %1055 = %1044.0;
  %1056 = greater_equal(%1051, %1052) /* ty=Tensor[(2475, ?), bool] */;
  %1057 = %1053.0;
  (%1054, %1055, %1056, %1057)
}

def @func_7235() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1058 = @func_6589() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1059 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %1060 = %1058.1;
  %1061 = %1059.0;
  (%1060, %1061)
}

def @func_11232() -> (Tensor[(15, 11, 15), bool],) {
  %1062 = @func_2983() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1063 = %1062.0;
  (%1063,)
}

def @func_6189() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int8]) {
  %1064 = @func_2181() /* ty=Tensor[(15, 11, 15), float64] */;
  %1065 = cast(%1064, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %1066 = reshape(%1065, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
  %1067 = @func_1695(%1066) /* ty=Tensor[(15, 11, 15), int8] */;
  (%1064, %1067)
}

def @func_7189() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1068 = @func_2330() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1069 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1070 = %1068.0;
  %1071 = %1069.0;
  (%1070, %1071)
}

def @func_6730(%var_6723: Tensor[(16, 1, 14), float64]) -> Tensor[(16, 1, 14), float64] {
  %1072 = cast(%var_6723, dtype="float64") /* ty=Tensor[(16, 1, 14), float64] */;
  sqrt(%1072) /* ty=Tensor[(16, 1, 14), float64] */
}

def @func_4266() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1073 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1074 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
  %1075 = %1073.0;
  (%1074, %1075)
}

def @func_3442() -> Tensor[(15, 11, 15), float64] {
  @func_1170() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_1592(%var_1581: Tensor[(15, 11, 15), float64]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %1076 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
  %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(15, 11, 15), float32] */;
  %1078 = log10(%1077) /* ty=Tensor[(15, 11, 15), float32] */;
  %1079 = cast(%1078, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %1080 = tan(%1079) /* ty=Tensor[(15, 11, 15), float64] */;
  %1081 = cast(%1080, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %1082 = cosh(%1081) /* ty=Tensor[(15, 11, 15), float64] */;
  %1083 = cast(%var_1581, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%1082, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1087 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
  %1088 = not_equal(%1085, %1086) /* ty=Tensor[(15, 11, 15), bool] */;
  %1089 = @func_1438() /* ty=Tensor[(15, 11, 15), bool] */;
  (%1087, %1088, %1089)
}

def @func_3054() -> (Tensor[(15, 11, 15), bool],) {
  %1090 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
  (%1090,)
}

def @func_2330() -> (Tensor[(15, 11, 15), float64],) {
  %1091 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  %1092 = cast(%1091, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %1093 = sqrt(%1092) /* ty=Tensor[(15, 11, 15), float64] */;
  (%1093,)
}

def @func_3859(%var_3847: Tensor[(11, 15, 16), uint16], %var_3855: Tensor[(11, 15, 16), uint16]) -> (Tensor[(11, 15, 16), bool], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64]) {
  %1094 = cast(%var_3847, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
  %1095 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(11, 15, 16), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1096 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 15, 16), uint16] */, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1098 = cast(%var_3855, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %1099 = shape_of(%var_3847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(%var_3847, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1102 = greater(%1096, %1097) /* ty=Tensor[(11, 15, 16), bool] */;
  %1103 = @func_2181() /* ty=Tensor[(15, 11, 15), float64] */;
  %1104 = power(%1100, %1101) /* ty=Tensor[(11, 15, 16), float64] */;
  (%1102, %1103, %1104)
}

def @func_5323() -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1105 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
  %1106 = @func_2983() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1107 = %1105.0;
  %1108 = %1106.3;
  %1109 = @func_4160() /* ty=Tensor[(15, 11, 15), float64] */;
  (%1107, %1108, %1109)
}

def @func_9552() -> Tensor[(15, 11, 15), int64] {
  %1110 = @func_7502() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %1110.1
}

def @func_7714() -> Tensor[(15, 11, 15), int64] {
  %1111 = @func_4338() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %1111.0
}

def @func_5816() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) {
  %1112 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %1113 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %1114 = %1112.1;
  %1115 = %1113.3;
  (%1114, %1115)
}

def @func_14962() -> (Tensor[(15, 11, 15), bool],) {
  %1116 = @func_7936() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %1117 = %1116.0;
  (%1117,)
}

def @func_8864() -> Tensor[(15, 11, 15), int64] {
  @func_7714() /* ty=Tensor[(15, 11, 15), int64] */
}

def @func_1822() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1118 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
  %1119 = cast(%1118, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1120 = cast(%1118, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1121 = reshape(%1119, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1122 = reshape(%1120, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1123 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1124 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %1125 = @func_20(%1121, %1122) /* ty=Tensor[(15, 11, 15), bool] */;
  %1126 = %1123.0;
  %1127 = %1124.0;
  (%1118, %1125, %1126, %1127)
}

def @func_13251() -> (Tensor[(15, 11, 15), float32],) {
  %1128 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %1129 = %1128.0;
  (%1129,)
}

def @func_12135() -> (Tensor[(15, 11, 15), int64],) {
  %1130 = @func_7502() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %1131 = %1130.1;
  (%1131,)
}

def @func_14421() -> Tensor[(15, 11, 15), float64] {
  %1132 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %1132.0
}

def @func_10632() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1133 = @func_3200() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %1134 = @func_2475() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %1135 = %1133.1;
  %1136 = %1134.0;
  (%1135, %1136)
}

def @func_10727() -> (Tensor[(15, 11, 15), uint8],) {
  %1137 = @func_6874() /* ty=Tensor[(15, 11, 15), uint8] */;
  (%1137,)
}

def @func_4619() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1138 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1139 = @func_3442() /* ty=Tensor[(15, 11, 15), float64] */;
  %1140 = %1138.0;
  (%1139, %1140)
}

def @func_5109() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32]) {
  %1141 = @func_2983() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1142 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %1143 = @func_3782() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), float64]) */;
  %1144 = %1141.3;
  %1145 = %1142.3;
  %1146 = %1143.1;
  (%1144, %1145, %1146)
}

def @func_1158() -> Tensor[(15, 11, 15), bool] {
  %1147 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %1147.0
}

def @func_10793() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) {
  %1148 = @func_6639() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %1149 = @func_6717() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %1150 = @func_8402() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %1151 = %1148.0;
  %1152 = %1149.0;
  %1153 = %1150.0;
  (%1151, %1152, %1153)
}

def @func_7536() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
  %1154 = @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
  %1155 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %1156 = %1154.1;
  %1157 = %1155.5;
  (%1156, %1157)
}

def @func_15365() -> (Tensor[(15, 11, 15), bool], Tensor[(2475), uint16], Tensor[(224), float64]) {
  %1158 = @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %1159 = %1158.2;
  %1160 = cast(%1159, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1161 = reshape(%1160, newshape=[2475]) /* ty=Tensor[(2475), uint32] */;
  %1162 = @func_15019(%1161) /* ty=(Tensor[(2475), uint16], Tensor[(2475), float32]) */;
  %1163 = @func_7140() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) */;
  %1164 = %1162.0;
  %1165 = %1163.2;
  (%1159, %1164, %1165)
}

def @func_3695() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) {
  %1166 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %1167 = %1166.0;
  %1168 = cast(%1167, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1169 = reshape(%1168, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %1170 = @func_405(%1169) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %1171 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1172 = cast(meta[relay.Constant][24] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1173 = cast(%1167, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1174 = reshape(%1172, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %1175 = reshape(%1173, newshape=[2475]) /* ty=Tensor[(2475), bool] */;
  %1176 = @func_2842(%1174, %1175) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */;
  %1177 = %1170.0;
  %1178 = %1171.1;
  %1179 = %1176.0;
  (%1167, %1177, %1178, %1179, meta[relay.Constant][24] /* ty=Tensor[(273), float64] */)
}

def @func_5043() -> (Tensor[(15, 11, 15), bool],) {
  %1180 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  (%1180,)
}

def @func_5245() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1181 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1182 = @func_2646() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1183 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1184 = %1181.3;
  %1185 = %1182.2;
  %1186 = %1183.0;
  %1187 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
  (%1184, %1185, %1186, %1187)
}

def @func_6639() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1188 = @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1189 = %1188.1;
  %1190 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
  (%1189, %1190)
}

def @func_6900() -> (Tensor[(13, 15, 12), float64], Tensor[(15, 11, 15), bool]) {
  %1191 = @func_4009() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) */;
  %1192 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1193 = %1191.1;
  %1194 = %1192.2;
  (%1193, %1194)
}

def @func_2310() -> Tensor[(15, 11, 15), bool] {
  %1195 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %1195.1
}

def @func_2810() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %1196 = @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %1197 = %1196.1;
  %1198 = cast(%1197, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %1199 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %1200 = %1199.2;
  %1201 = cast(%1200, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1202 = reshape(%1201, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %1203 = @func_2282(%1202) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) */;
  %1204 = asin(%1198) /* ty=Tensor[(15, 11, 15), float64] */;
  %1205 = %1203.0;
  (%1204, %1200, %1205)
}

def @func_6458() -> Tensor[(15, 11, 15), bool] {
  %1206 = @func_5245() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %1206.1
}

def @func_11396() -> Tensor[(15, 11, 15), int64] {
  %1207 = @func_8839() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), bool]) */;
  %1207.2
}

def @func_13901(%var_13879: Tensor[(2, 15, 16), float32]) -> (Tensor[(2, 15, 16), float32], Tensor[(15, 11, 15), float64]) {
  %1208 = cast(%var_13879, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %1209 = @func_13443() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %1210 = erf(%1208) /* ty=Tensor[(2, 15, 16), float32] */;
  %1211 = %1209.0;
  (%1210, %1211)
}

def @func_9265() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1212 = @func_9063() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1213 = @func_8457() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1214 = %1212.0;
  %1215 = %1213.4;
  (%1214, %1215)
}

def @func_11556() -> Tensor[(15, 11, 15), bool] {
  %1216 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %1216.0
}

def @func_3200() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1217 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1218 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1219 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  %1220 = %1217.2;
  %1221 = @func_2391() /* ty=Tensor[(15, 11, 15), float64] */;
  %1222 = %1218.0;
  (%1219, %1220, %1221, %1222)
}

def @func_11188() -> Tensor[(15, 11, 15), uint8] {
  @func_10423() /* ty=Tensor[(15, 11, 15), uint8] */
}

def @func_7738() -> (Tensor[(15, 11, 15), float64],) {
  %1223 = @func_6849() /* ty=Tensor[(15, 11, 15), float64] */;
  (%1223,)
}

def @func_8367() -> Tensor[(15, 11, 15), float64] {
  @func_5053() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_9301() -> (Tensor[(15, 11, 15), float64],) {
  %1224 = @func_8554() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1225 = %1224.0;
  (%1225,)
}

def @func_12237() -> Tensor[(15, 11, 15), bool] {
  @func_10895() /* ty=Tensor[(15, 11, 15), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11710() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool]) {
  @func_11708() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool]) */
}

def @func_2476() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %4 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
    %0 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %1 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
    %2 = %0.2;
    %3 = %1.1;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */
}

def @func_4011() -> (Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) {
  @func_4009() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) */
}

def @func_6500() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
  @func_6498() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */
}

def @func_7843() -> Tensor[(15, 11, 15), bool] {
  @func_7841() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_7936() -> (Tensor[(15, 11, 15), bool],) {
  %5 = @func_5245() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %6 = %5.1;
  (%6,)
}

def @func_13353() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(2, 5, 16), float64], Tensor[(2475), uint32]) {
  @func_13351() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(2, 5, 16), float64], Tensor[(2475), uint32]) */
}

def @func_13119() -> (Tensor[(2475, 1), uint32],) {
  %9 = fn () -> (Tensor[(2475, 1), uint32],) {
    %7 = @func_8233() /* ty=(Tensor[(2475, 1), uint32],) */;
    %8 = %7.0;
    (%8,)
  };
  %9() /* ty=(Tensor[(2475, 1), uint32],) */
}

def @func_12748() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %14 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
    %10 = @func_2646() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %11 = @func_4338() /* ty=(Tensor[(15, 11, 15), int64],) */;
    %12 = %10.2;
    %13 = %11.0;
    (%12, %13)
  };
  %14() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */
}

def @func_4524(%var_4523: Tensor[(13, 13, 14), int64]) -> (Tensor[(13, 13, 14), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) {
  %22 = fn (%var_4501: Tensor[(13, 13, 14), int64]) -> (Tensor[(13, 13, 14), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) {
    %15 = cast(-6 /* ty=int64 */, dtype="bool") /* ty=bool */;
    %16 = cast(%var_4501, dtype="bool") /* ty=Tensor[(13, 13, 14), bool] */;
    %17 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
    %18 = @func_3200() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %19 = less(%15, %16) /* ty=Tensor[(13, 13, 14), bool] */;
    %20 = %17.3;
    %21 = %18.1;
    (%19, %20, %21)
  };
  %22(%var_4523) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) */
}

def @func_13187() -> Tensor[(273), float64] {
  @func_11789() /* ty=Tensor[(273), float64] */
}

def @func_8367() -> Tensor[(15, 11, 15), float64] {
  @func_5053() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_5989() -> (Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), float64]) {
  %23 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %24 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %25 = %23.1;
  %26 = %24.1;
  (%25, %26)
}

def @func_10895() -> Tensor[(15, 11, 15), bool] {
  %27 = @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %27.2
}

def @func_1697(%var_1696: Tensor[(15, 11, 15), float64]) -> Tensor[(15, 11, 15), int8] {
  %34 = fn (%var_1690: Tensor[(15, 11, 15), float64]) -> Tensor[(15, 11, 15), int8] {
    %28 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %29 = %28.0;
    %30 = cast(%var_1690, dtype="int8") /* ty=Tensor[(15, 11, 15), int8] */;
    %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
    %32 = cast(%29, dtype="int8") /* ty=Tensor[(15, 11, 15), int8] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_xor(%32, %33) /* ty=Tensor[(15, 11, 15), int8] */
  };
  %34(%var_1696) /* ty=Tensor[(15, 11, 15), int8] */
}

def @func_4161() -> Tensor[(15, 11, 15), float64] {
  %36 = fn () -> Tensor[(15, 11, 15), float64] {
    %35 = @func_2330() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %35.0
  };
  %36() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_5173() -> (Tensor[(15, 11, 15), float64],) {
  %39 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %37 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %38 = %37.0;
    (%38,)
  };
  %39() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_7190() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %44 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %40 = @func_2330() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %41 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %42 = %40.0;
    %43 = %41.0;
    (%42, %43)
  };
  %44() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_1171() -> Tensor[(15, 11, 15), float64] {
  %46 = fn () -> Tensor[(15, 11, 15), float64] {
    %45 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %45.0
  };
  %46() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_13253() -> (Tensor[(15, 11, 15), float32],) {
  @func_13251() /* ty=(Tensor[(15, 11, 15), float32],) */
}

def @func_7841() -> Tensor[(15, 11, 15), bool] {
  @func_2310() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_13482(%var_13480: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64], Tensor[(2640), uint16]) {
  @func_13479(%var_13480) /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64], Tensor[(2640), uint16]) */
}

def @func_14565(%var_14552: Tensor[(9, 11, 12), uint32], %var_14553: Tensor[(9, 11, 12), uint32]) -> (Tensor[(9, 11, 12), uint32], Tensor[(15, 11, 15), float64]) {
  %47 = cast(%var_14553, dtype="uint32") /* ty=Tensor[(9, 11, 12), uint32] */;
  %48 = shape_of(%var_14552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%var_14552, dtype="uint32") /* ty=Tensor[(9, 11, 12), uint32] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %51 = maximum(%49, %50) /* ty=Tensor[(9, 11, 12), uint32] */;
  %52 = @func_11969() /* ty=Tensor[(15, 11, 15), float64] */;
  (%51, %52)
}

def @func_14595() -> (Tensor[(15, 11, 15), float64],) {
  %53 = @func_12824() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %54 = %53.0;
  (%54,)
}

def @func_11380() -> (Tensor[(15, 11, 15), int64],) {
  @func_11378() /* ty=(Tensor[(15, 11, 15), int64],) */
}

def @func_14911() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %60 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
    %55 = @func_14855() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %56 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
    %57 = %55.0;
    %58 = @func_4111() /* ty=Tensor[(15, 11, 15), float64] */;
    %59 = @func_2310() /* ty=Tensor[(15, 11, 15), bool] */;
    (%56, %57, %58, %59)
  };
  %60() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_4400() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %68 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
    %61 = @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
    %62 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %63 = %61.0;
    %64 = @func_2391() /* ty=Tensor[(15, 11, 15), float64] */;
    %65 = @func_4160() /* ty=Tensor[(15, 11, 15), float64] */;
    %66 = %62.1;
    %67 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
    (%63, %64, %65, %66, %67)
  };
  %68() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_2282(%var_2267: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) {
  %69 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %70 = %69.3;
  %71 = cast(%var_2267, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %75 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %76 = %75.0;
  %77 = cast(%76, dtype="float32") /* ty=Tensor[(15, 11, 15), float32] */;
  %78 = greater(%73, %74) /* ty=Tensor[(15, 11, 15), bool] */;
  %79 = sigmoid(%77) /* ty=Tensor[(15, 11, 15), float32] */;
  (%78, %79)
}

def @func_3715() -> (Tensor[(15, 11, 15), int64],) {
  %80 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %81 = %80.1;
  (%81,)
}

def @func_14856() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %88 = fn () -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %82 = @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %83 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %84 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %85 = %82.0;
    %86 = %83.0;
    %87 = %84.1;
    (%85, %86, %87)
  };
  %88() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_15189() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8]) {
  %89 = @func_8744() /* ty=Tensor[(15, 11, 15), float64] */;
  %90 = @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */;
  (%89, %90)
}

def @func_9603() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) {
  @func_9601() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) */
}

def @func_11708() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool]) {
  %91 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %92 = @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */;
  %93 = %91.6;
  (%92, %93)
}

def @func_6444() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %94 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %95 = %94.0;
  %96 = @func_2391() /* ty=Tensor[(15, 11, 15), float64] */;
  (%95, %96)
}

def @func_11233() -> (Tensor[(15, 11, 15), bool],) {
  %99 = fn () -> (Tensor[(15, 11, 15), bool],) {
    %97 = @func_2983() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %98 = %97.0;
    (%98,)
  };
  %99() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_3056() -> (Tensor[(15, 11, 15), bool],) {
  @func_3054() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_6300() -> Tensor[(15, 11, 15), bool] {
  @func_6298() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_5324() -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %105 = fn () -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %100 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
    %101 = @func_2983() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %102 = %100.0;
    %103 = %101.3;
    %104 = @func_4160() /* ty=Tensor[(15, 11, 15), float64] */;
    (%102, %103, %104)
  };
  %105() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_10727() -> (Tensor[(15, 11, 15), uint8],) {
  %106 = @func_6874() /* ty=Tensor[(15, 11, 15), uint8] */;
  (%106,)
}

def @func_368() -> (Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %158 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %107 = cast(meta[relay.Constant][0] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
    %108 = cast(meta[relay.Constant][0] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
    %109 = reshape(%107, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %110 = reshape(%108, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %111 = @func_20(%109, %110) /* ty=Tensor[(15, 11, 15), bool] */;
    %112 = cast(%111, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %113 = cast(meta[relay.Constant][0] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
    %114 = reshape(%112, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %115 = reshape(%113, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %116 = cast(meta[relay.Constant][0] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
    %117 = cast(%111, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %118 = reshape(%116, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %119 = reshape(%117, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %120 = @func_20(%118, %119) /* ty=Tensor[(15, 11, 15), bool] */;
    %121 = cast(%120, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %122 = cast(%111, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %123 = reshape(%121, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %124 = reshape(%122, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %125 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
    %126 = log10(%125) /* ty=Tensor[(13, 13, 10), float32] */;
    %127 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 13, 10), float32] */, dtype="uint16") /* ty=Tensor[(13, 13, 10), uint16] */;
    %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
    %129 = cast(%126, dtype="uint16") /* ty=Tensor[(13, 13, 10), uint16] */;
    %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %131 = left_shift(%129, %130) /* ty=Tensor[(13, 13, 10), uint16] */;
    %132 = cast(%131, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
    %133 = cos(%132) /* ty=Tensor[(13, 13, 10), float32] */;
    %134 = cast(%133, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
    %135 = cast(%120, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %136 = @func_20(%123, %124) /* ty=Tensor[(15, 11, 15), bool] */;
    %137 = cast(%136, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %138 = reshape(%135, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %139 = reshape(%137, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %140 = cast(meta[relay.Constant][0] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
    %141 = cast(meta[relay.Constant][0] /* ty=Tensor[(2475, 1), uint32] */, dtype="uint32") /* ty=Tensor[(2475, 1), uint32] */;
    %142 = reshape(%140, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %143 = reshape(%141, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %144 = @func_20(%114, %115) /* ty=Tensor[(15, 11, 15), bool] */;
    %145 = cast(%144, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %146 = cast(%120, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %147 = reshape(%145, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %148 = reshape(%146, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %149 = @func_20(%147, %148) /* ty=Tensor[(15, 11, 15), bool] */;
    %150 = cast(%149, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %151 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %152 = cast(%120, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %154 = sin(%134) /* ty=Tensor[(13, 13, 10), float32] */;
    %155 = @func_20(%138, %139) /* ty=Tensor[(15, 11, 15), bool] */;
    %156 = @func_20(%142, %143) /* ty=Tensor[(15, 11, 15), bool] */;
    %157 = subtract(%152, %153) /* ty=Tensor[(15, 11, 15), float64] */;
    (%111, meta[relay.Constant][0] /* ty=Tensor[(2475, 1), uint32] */, %144, %136, %154, %155, %156, %157)
  };
  %158() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_10316() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float32]) {
  @func_10314() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float32]) */
}

def @func_13423() -> (Tensor[(15, 11, 15), bool],) {
  %159 = @func_11879() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %160 = %159.0;
  (%160,)
}

def @func_2845(%var_2843: Tensor[(7, 13, 3), float64], %var_2844: Tensor[(2475), bool]) -> (Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) {
  %167 = fn (%var_2827: Tensor[(7, 13, 3), float64], %var_2833: Tensor[(2475), bool]) -> (Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) {
    %161 = cast(%var_2827, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
    %162 = cast(%var_2833, dtype="bool") /* ty=Tensor[(2475), bool] */;
    %163 = reshape(%162, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
    %164 = @func_2282(%163) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) */;
    %165 = exp(%161) /* ty=Tensor[(7, 13, 3), float64] */;
    %166 = %164.0;
    (%165, %166, %var_2833)
  };
  %167(%var_2843, %var_2844) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */
}

def @func_7544() -> (Tensor[(15, 11, 15), float64],) {
  %170 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %168 = @func_7536() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
    %169 = %168.1;
    (%169,)
  };
  %170() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_6366() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_7876() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %177 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
    %171 = @func_7826() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %172 = @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %173 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
    %174 = %171.1;
    %175 = %172.0;
    %176 = %173.0;
    (%174, %175, %176)
  };
  %177() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */
}

def @func_4267() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %181 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %178 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %179 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
    %180 = %178.0;
    (%179, %180)
  };
  %181() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_5130() -> (Tensor[(15, 11, 15), bool],) {
  %182 = @func_3054() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %183 = %182.0;
  (%183,)
}

def @func_9699(%var_9698: Tensor[(275), int32]) -> (Tensor[(15, 11, 15), uint8], Tensor[(5, 5, 11), int32], Tensor[(275), int32], Tensor[(12, 4, 15), float32], Tensor[(720), int64]) {
  %194 = fn (%var_9667: Tensor[(275), int32]) -> (Tensor[(15, 11, 15), uint8], Tensor[(5, 5, 11), int32], Tensor[(275), int32], Tensor[(12, 4, 15), float32], Tensor[(720), int64]) {
    %184 = @func_9601() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) */;
    %185 = cast(%var_9667, dtype="int32") /* ty=Tensor[(275), int32] */;
    %186 = reshape(%185, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), int32] */;
    %187 = @func_3837(%186) /* ty=(Tensor[(5, 5, 11), int32],) */;
    %188 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), int64] */, dtype="int64") /* ty=Tensor[(720), int64] */;
    %189 = reshape(%188, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int64] */;
    %190 = @func_8613(%189) /* ty=(Tensor[(12, 4, 15), bool], Tensor[(16, 1, 14), float64], Tensor[(224), float64], Tensor[(12, 4, 15), float32]) */;
    %191 = %184.0;
    %192 = %187.0;
    %193 = %190.3;
    (%191, %192, %var_9667, %193, meta[relay.Constant][2] /* ty=Tensor[(720), int64] */)
  };
  %194(%var_9698) /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(5, 5, 11), int32], Tensor[(275), int32], Tensor[(12, 4, 15), float32], Tensor[(720), int64]) */
}

def @func_9443() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int8]) {
  @func_9441() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int8]) */
}

def @func_14166() -> (Tensor[(15, 11, 15), bool],) {
  @func_14164() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_1426() -> (Tensor[(15, 11, 15), float64],) {
  @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_4475(%var_4473: Tensor[(2475), bool]) -> (Tensor[(7, 13, 16), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(2475), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_4472(%var_4473) /* ty=(Tensor[(7, 13, 16), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(2475), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_2707() -> (Tensor[(15, 11, 15), float32],) {
  @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */
}

def @func_9441() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int8]) {
  %195 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %196 = @func_8020() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8]) */;
  %197 = %195.0;
  %198 = %196.2;
  (%197, %198)
}

def @func_8205(%var_8204: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) {
  %206 = fn (%var_8185: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) {
    %199 = @func_7841() /* ty=Tensor[(15, 11, 15), bool] */;
    %200 = cast(%var_8185, dtype="int8") /* ty=Tensor[(15, 11, 15), int8] */;
    %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%199, dtype="int8") /* ty=Tensor[(15, 11, 15), int8] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %204 = add(%202, %203) /* ty=Tensor[(15, 11, 15), int8] */;
    %205 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
    (%204, %205)
  };
  %206(%var_8204) /* ty=(Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) */
}

def @func_10860() -> Tensor[(15, 11, 15), float64] {
  %207 = fn () -> Tensor[(15, 11, 15), float64] {
    @func_7600() /* ty=Tensor[(15, 11, 15), float64] */
  };
  %207() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_12783() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %208 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
  %209 = @func_3013() /* ty=Tensor[(15, 11, 15), float64] */;
  %210 = %208.1;
  (%209, %210)
}

def @func_11526() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) {
  @func_11524() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) */
}

def @func_13903(%var_13902: Tensor[(2, 15, 16), float32]) -> (Tensor[(2, 15, 16), float32], Tensor[(15, 11, 15), float64]) {
  %215 = fn (%var_13879: Tensor[(2, 15, 16), float32]) -> (Tensor[(2, 15, 16), float32], Tensor[(15, 11, 15), float64]) {
    %211 = cast(%var_13879, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
    %212 = @func_13443() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %213 = erf(%211) /* ty=Tensor[(2, 15, 16), float32] */;
    %214 = %212.0;
    (%213, %214)
  };
  %215(%var_13902) /* ty=(Tensor[(2, 15, 16), float32], Tensor[(15, 11, 15), float64]) */
}

def @func_1904() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
  %232 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
    %216 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %217 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
    %218 = %217.0;
    %219 = cast(%218, dtype="float32") /* ty=Tensor[(15, 11, 15), float32] */;
    %220 = @func_1438() /* ty=Tensor[(15, 11, 15), bool] */;
    %221 = cast(%220, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %222 = reshape(%221, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
    %223 = cast(%220, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
    %224 = reshape(%223, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
    %225 = @func_405(%224) /* ty=(Tensor[(15, 11, 15), int64],) */;
    %226 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %227 = %216.1;
    %228 = rsqrt(%219) /* ty=Tensor[(15, 11, 15), float32] */;
    %229 = @func_1695(%222) /* ty=Tensor[(15, 11, 15), int8] */;
    %230 = %225.0;
    %231 = %226.0;
    (%227, %220, %228, %229, %230, %231)
  };
  %232() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */
}

def @func_9065() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  @func_9063() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_6460() -> Tensor[(15, 11, 15), bool] {
  @func_6458() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_7938() -> (Tensor[(15, 11, 15), bool],) {
  @func_7936() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_9302() -> (Tensor[(15, 11, 15), float64],) {
  %235 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %233 = @func_8554() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %234 = %233.0;
    (%234,)
  };
  %235() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_14422() -> Tensor[(15, 11, 15), float64] {
  %237 = fn () -> Tensor[(15, 11, 15), float64] {
    %236 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %236.0
  };
  %237() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_3930(%var_3928: Tensor[(7, 14, 16), uint16], %var_3929: Tensor[(7, 14, 16), uint16]) -> (Tensor[(7, 14, 16), bool], Tensor[(7, 14, 16), float64], Tensor[(7, 14, 16), float64]) {
  %254 = fn (%var_3886: Tensor[(7, 14, 16), uint16], %var_3887: Tensor[(7, 14, 16), uint16]) -> (Tensor[(7, 14, 16), bool], Tensor[(7, 14, 16), float64], Tensor[(7, 14, 16), float64]) {
    %238 = cast(%var_3886, dtype="bool") /* ty=Tensor[(7, 14, 16), bool] */;
    %239 = shape_of(%var_3887, dtype="int32") /* ty=Tensor[(3), int32] */;
    %240 = cast(%var_3887, dtype="bool") /* ty=Tensor[(7, 14, 16), bool] */;
    %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %242 = cast(%var_3887, dtype="bool") /* ty=Tensor[(7, 14, 16), bool] */;
    %243 = shape_of(%var_3886, dtype="int32") /* ty=Tensor[(3), int32] */;
    %244 = cast(%var_3886, dtype="bool") /* ty=Tensor[(7, 14, 16), bool] */;
    %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %246 = equal(%244, %245) /* ty=Tensor[(7, 14, 16), bool] */;
    %247 = cast(%246, dtype="float64") /* ty=Tensor[(7, 14, 16), float64] */;
    %248 = asinh(%247) /* ty=Tensor[(7, 14, 16), float64] */;
    %249 = cast(%248, dtype="float64") /* ty=Tensor[(7, 14, 16), float64] */;
    %250 = cast(%248, dtype="float64") /* ty=Tensor[(7, 14, 16), float64] */;
    %251 = less(%240, %241) /* ty=Tensor[(7, 14, 16), bool] */;
    %252 = sigmoid(%249) /* ty=Tensor[(7, 14, 16), float64] */;
    %253 = atan(%250) /* ty=Tensor[(7, 14, 16), float64] */;
    (%251, %252, %253)
  };
  %254(%var_3928, %var_3929) /* ty=(Tensor[(7, 14, 16), bool], Tensor[(7, 14, 16), float64], Tensor[(7, 14, 16), float64]) */
}

def @func_8935() -> (Tensor[(15, 11, 15), float64],) {
  %255 = @func_5436() /* ty=Tensor[(15, 11, 15), float64] */;
  (%255,)
}

def @func_10424() -> Tensor[(15, 11, 15), uint8] {
  %257 = fn () -> Tensor[(15, 11, 15), uint8] {
    %256 = @func_5109() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32]) */;
    %256.1
  };
  %257() /* ty=Tensor[(15, 11, 15), uint8] */
}

def @func_13675(%var_13673: Tensor[(16, 11, 15), bool]) -> (Tensor[(16, 11, 15), bool],) {
  @func_13672(%var_13673) /* ty=(Tensor[(16, 11, 15), bool],) */
}

def @func_2091(%var_2089: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_2088(%var_2089) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_7141() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) {
  %264 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) {
    %258 = @func_6498() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
    %259 = cast(meta[relay.Constant][3] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %260 = reshape(%259, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
    %261 = @func_2159(%260) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
    %262 = %258.1;
    %263 = %261.0;
    (%262, %263, meta[relay.Constant][3] /* ty=Tensor[(224), float64] */)
  };
  %264() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) */
}

def @func_11602() -> Tensor[(15, 11, 15), bool] {
  %265 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %265.6
}

def @func_11913() -> (Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float64]) {
  %266 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 5, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %267 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(2, 5, 16), float64] */;
  %268 = log2(%267) /* ty=Tensor[(2, 5, 16), float64] */;
  %269 = cast(%268, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %270 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(2, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 5, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %273 = cast(%268, dtype="float64") /* ty=Tensor[(2, 5, 16), float64] */;
  %274 = log(%266) /* ty=Tensor[(2, 5, 16), float32] */;
  %275 = minimum(%271, %272) /* ty=Tensor[(2, 5, 16), float32] */;
  %276 = log10(%273) /* ty=Tensor[(2, 5, 16), float64] */;
  (%274, %275, %276)
}

def @func_8087() -> Tensor[(15, 11, 15), bool] {
  %278 = fn () -> Tensor[(15, 11, 15), bool] {
    %277 = @func_6044() /* ty=(Tensor[(15, 11, 15), bool],) */;
    %277.0
  };
  %278() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_13101() -> (Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) {
  %279 = @func_11025() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %280 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %281 = %280.4;
  %282 = cast(%281, dtype="float64") /* ty=Tensor[(13, 13, 10), float64] */;
  %283 = cosh(%282) /* ty=Tensor[(13, 13, 10), float64] */;
  %284 = cast(%283, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %285 = %279.0;
  %286 = asinh(%284) /* ty=Tensor[(13, 13, 10), float32] */;
  (%285, %286)
}

def @func_3098() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %287 = @func_3054() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %288 = %287.0;
  %289 = cast(%288, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %290 = reshape(%289, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %291 = @func_405(%290) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %292 = %291.0;
  (%288, %292)
}

def @func_10563() -> (Tensor[(15, 11, 15), float64],) {
  @func_10561() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_9063() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %293 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %294 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %295 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %296 = %293.1;
  %297 = %294.1;
  %298 = %295.1;
  (%296, %297, %298)
}

def @func_12890(%var_12848: Tensor[(8, 14, 16), float64]) -> (Tensor[(8, 14, 16), float32], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(8, 14, 16), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) {
  %299 = cast(%var_12848, dtype="float64") /* ty=Tensor[(8, 14, 16), float64] */;
  %300 = erf(%299) /* ty=Tensor[(8, 14, 16), float64] */;
  %301 = cast(%var_12848, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%300, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %305 = @func_11476() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %306 = cast(%300, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %307 = tan(%306) /* ty=Tensor[(8, 14, 16), float32] */;
  %308 = cast(%307, dtype="float64") /* ty=Tensor[(8, 14, 16), float64] */;
  %309 = cast(meta[relay.Constant][5] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %310 = cast(meta[relay.Constant][5] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %311 = reshape(%309, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %312 = reshape(%310, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %313 = @func_2512(%311, %312) /* ty=(Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) */;
  %314 = mod(%303, %304) /* ty=Tensor[(8, 14, 16), float32] */;
  %315 = @func_9552() /* ty=Tensor[(15, 11, 15), int64] */;
  %316 = %305.1;
  %317 = exp(%308) /* ty=Tensor[(8, 14, 16), float64] */;
  %318 = %313.3;
  (%314, %315, %316, %317, %318, meta[relay.Constant][5] /* ty=Tensor[(2340), uint32] */)
}

def @func_14962() -> (Tensor[(15, 11, 15), bool],) {
  %319 = @func_7936() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %320 = %319.0;
  (%320,)
}

def @func_5437() -> Tensor[(15, 11, 15), float64] {
  %322 = fn () -> Tensor[(15, 11, 15), float64] {
    %321 = @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %321.1
  };
  %322() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_6364() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %323 = @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %324 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %325 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %326 = %323.1;
  %327 = %324.0;
  %328 = %325.1;
  (%326, %327, %328)
}

def @func_3695() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) {
  %329 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %332 = reshape(%331, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %333 = @func_405(%332) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %334 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %335 = cast(meta[relay.Constant][6] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %336 = cast(%330, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %337 = reshape(%335, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %338 = reshape(%336, newshape=[2475]) /* ty=Tensor[(2475), bool] */;
  %339 = @func_2842(%337, %338) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */;
  %340 = %333.0;
  %341 = %334.1;
  %342 = %339.0;
  (%330, %340, %341, %342, meta[relay.Constant][6] /* ty=Tensor[(273), float64] */)
}

def @func_7472() -> Tensor[(15, 11, 15), float64] {
  %344 = fn () -> Tensor[(15, 11, 15), float64] {
    %343 = @func_6717() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %343.2
  };
  %344() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_3717() -> (Tensor[(15, 11, 15), int64],) {
  @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */
}

def @func_8458() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %356 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %345 = @func_8171() /* ty=Tensor[(15, 11, 15), bool] */;
    %346 = cast(%345, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
    %347 = reshape(%346, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
    %348 = @func_8203(%347) /* ty=(Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) */;
    %349 = @func_7414() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %350 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %351 = %348.1;
    %352 = @func_3013() /* ty=Tensor[(15, 11, 15), float64] */;
    %353 = %349.1;
    %354 = %350.0;
    %355 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
    (%345, %351, %352, %353, %354, %355)
  };
  %356() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_24(%var_22: Tensor[(15, 11, 15), uint32], %var_23: Tensor[(15, 11, 15), uint32]) -> Tensor[(15, 11, 15), bool] {
  @func_20(%var_22, %var_23) /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_10897() -> Tensor[(15, 11, 15), bool] {
  @func_10895() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_2354() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %357 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %358 = @func_1438() /* ty=Tensor[(15, 11, 15), bool] */;
  %359 = %357.4;
  (%358, %359)
}

def @func_14964() -> (Tensor[(15, 11, 15), bool],) {
  @func_14962() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_12690() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %368 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
    %360 = @func_8935() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %361 = @func_7140() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) */;
    %362 = @func_5130() /* ty=(Tensor[(15, 11, 15), bool],) */;
    %363 = @func_10708() /* ty=(Tensor[(15, 11, 15), bool],) */;
    %364 = %360.0;
    %365 = %361.1;
    %366 = %362.0;
    %367 = %363.0;
    (%364, %365, %366, %367)
  };
  %368() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_12237() -> Tensor[(15, 11, 15), bool] {
  @func_10895() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_5144() -> Tensor[(15, 11, 15), float64] {
  @func_1170() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_10212() -> (Tensor[(15, 11, 15), bool],) {
  @func_10210() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_5571(%var_5570: Tensor[(104), float64]) -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool], Tensor[(104), float64], Tensor[(15, 11, 15), bool]) {
  %379 = fn (%var_5540: Tensor[(104), float64]) -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool], Tensor[(104), float64], Tensor[(15, 11, 15), bool]) {
    %369 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
    %370 = cast(%var_5540, dtype="float64") /* ty=Tensor[(104), float64] */;
    %371 = reshape(%370, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), float64] */;
    %372 = @func_5466(%371) /* ty=(Tensor[(13, 2, 4), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) */;
    %373 = %369.2;
    %374 = cast(%373, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %375 = reshape(%374, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
    %376 = @func_1592(%375) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %377 = %372.2;
    %378 = %376.2;
    (%373, %377, %var_5540, %378)
  };
  %379(%var_5570) /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool], Tensor[(104), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_6141(%var_6139: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), float64], Tensor[(2366), int64]) {
  @func_6138(%var_6139) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), float64], Tensor[(2366), int64]) */
}

def @func_2983() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %380 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %381 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %382 = %380.2;
  %383 = cast(%382, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %384 = cast(%382, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %385 = reshape(%383, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %386 = reshape(%384, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %387 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %388 = %381.1;
  %389 = @func_20(%385, %386) /* ty=Tensor[(15, 11, 15), bool] */;
  %390 = %387.1;
  (%382, %388, %389, %390)
}

def @main(%var_15609: Tensor[(7, 5, 2), float32]) -> (Tensor[(7, 5, 2), float32], Tensor[(7, 5, 2), float32]) {
  %391 = cast(%var_15609, dtype="float32") /* ty=Tensor[(7, 5, 2), float32] */;
  %392 = cast(%var_15609, dtype="float32") /* ty=Tensor[(7, 5, 2), float32] */;
  %393 = cos(%391) /* ty=Tensor[(7, 5, 2), float32] */;
  %394 = sigmoid(%392) /* ty=Tensor[(7, 5, 2), float32] */;
  (%393, %394)
}

def @func_14716() -> Tensor[(15, 11, 15), float64] {
  %396 = fn () -> Tensor[(15, 11, 15), float64] {
    %395 = @func_8554() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %395.0
  };
  %396() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_13873() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64]) {
  @func_13871() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64]) */
}

def @func_5622() -> (Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) {
  %397 = cast(meta[relay.Constant][8] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %398 = cast(meta[relay.Constant][7] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %399 = reshape(%398, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
  %400 = @func_2159(%399) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
  %401 = %400.0;
  %402 = cast(%401, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %403 = reshape(%397, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %404 = reshape(%402, newshape=[2475]) /* ty=Tensor[(2475), bool] */;
  %405 = @func_2842(%403, %404) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */;
  %406 = %405.2;
  %407 = cast(%401, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(1), int32] */;
  %409 = cast(%406, dtype="uint32") /* ty=Tensor[(2475), uint32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %411 = @func_2181() /* ty=Tensor[(15, 11, 15), float64] */;
  %412 = bitwise_xor(%409, %410) /* ty=Tensor[(2475), uint32] */;
  (%411, meta[relay.Constant][7] /* ty=Tensor[(224), float64] */, meta[relay.Constant][8] /* ty=Tensor[(273), float64] */, %412)
}

def @func_6591() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  @func_6589() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_8615(%var_8614: Tensor[(12, 4, 15), int64]) -> (Tensor[(12, 4, 15), bool], Tensor[(16, 1, 14), float64], Tensor[(224), float64], Tensor[(12, 4, 15), float32]) {
  %421 = fn (%var_8588: Tensor[(12, 4, 15), int64]) -> (Tensor[(12, 4, 15), bool], Tensor[(16, 1, 14), float64], Tensor[(224), float64], Tensor[(12, 4, 15), float32]) {
    %413 = cast(7 /* ty=int64 */, dtype="bool") /* ty=bool */;
    %414 = cast(%var_8588, dtype="bool") /* ty=Tensor[(12, 4, 15), bool] */;
    %415 = cast(meta[relay.Constant][9] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %416 = reshape(%415, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), float64] */;
    %417 = cast(%var_8588, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
    %418 = less_equal(%413, %414) /* ty=Tensor[(12, 4, 15), bool] */;
    %419 = @func_6730(%416) /* ty=Tensor[(16, 1, 14), float64] */;
    %420 = sigmoid(%417) /* ty=Tensor[(12, 4, 15), float32] */;
    (%418, %419, meta[relay.Constant][9] /* ty=Tensor[(224), float64] */, %420)
  };
  %421(%var_8614) /* ty=(Tensor[(12, 4, 15), bool], Tensor[(16, 1, 14), float64], Tensor[(224), float64], Tensor[(12, 4, 15), float32]) */
}

def @func_2812() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_2285(%var_2283: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) {
  @func_2282(%var_2283) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) */
}

def @func_11242() -> (Tensor[(15, 11, 15), float64],) {
  %422 = @func_6189() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int8]) */;
  %423 = %422.0;
  (%423,)
}

def @func_9267() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  @func_9265() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_13672(%var_13665: Tensor[(16, 11, 15), bool]) -> (Tensor[(16, 11, 15), bool],) {
  %424 = cast(%var_13665, dtype="bool") /* ty=Tensor[(16, 11, 15), bool] */;
  %425 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(16, 11, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 11, 15), bool] */, dtype="bool") /* ty=Tensor[(16, 11, 15), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %428 = logical_and(%426, %427) /* ty=Tensor[(16, 11, 15), bool] */;
  (%428,)
}

def @func_10521() -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool]) {
  @func_10519() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool]) */
}

def @func_9265() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %429 = @func_9063() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %430 = @func_8457() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %431 = %429.0;
  %432 = %430.4;
  (%431, %432)
}

def @func_11880() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %436 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
    %433 = @func_9265() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %434 = @func_8171() /* ty=Tensor[(15, 11, 15), bool] */;
    %435 = %433.1;
    (%434, %435)
  };
  %436() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_9601() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) {
  %437 = @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */;
  %438 = @func_8367() /* ty=Tensor[(15, 11, 15), float64] */;
  (%437, %438)
}

def @func_12451(%var_12449: Tensor[(1, 16, 12), uint16], %var_12450: Tensor[(2, 16, 12), uint16]) -> (Tensor[(2, 16, 12), uint16], Tensor[(1, 16, 12), float64], Tensor[(15, 11, 15), uint8]) {
  %446 = fn (%var_12425: Tensor[(1, 16, 12), uint16], %var_12426: Tensor[(2, 16, 12), uint16]) -> (Tensor[(2, 16, 12), uint16], Tensor[(1, 16, 12), float64], Tensor[(15, 11, 15), uint8]) {
    %439 = cast(%var_12425, dtype="uint16") /* ty=Tensor[(1, 16, 12), uint16] */;
    %440 = cast(%var_12426, dtype="uint16") /* ty=Tensor[(2, 16, 12), uint16] */;
    %441 = cast(%var_12425, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %442 = @func_11524() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) */;
    %443 = bitwise_and(%439, %440) /* ty=Tensor[(2, 16, 12), uint16] */;
    %444 = exp(%441) /* ty=Tensor[(1, 16, 12), float64] */;
    %445 = %442.0;
    (%443, %444, %445)
  };
  %446(%var_12449, %var_12450) /* ty=(Tensor[(2, 16, 12), uint16], Tensor[(1, 16, 12), float64], Tensor[(15, 11, 15), uint8]) */
}

def @func_8948() -> (Tensor[(2475, 1), uint32],) {
  %447 = @func_8233() /* ty=(Tensor[(2475, 1), uint32],) */;
  %448 = %447.0;
  (%448,)
}

def @func_12913() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %453 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
    %449 = @func_12783() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %450 = @func_4842() /* ty=(Tensor[(15, 11, 15), int64],) */;
    %451 = %449.1;
    %452 = %450.0;
    (%451, %452)
  };
  %453() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */
}

def @func_7827() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %457 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %454 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %455 = %454.1;
    %456 = @func_6849() /* ty=Tensor[(15, 11, 15), float64] */;
    (%455, %456)
  };
  %457() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_14056() -> Tensor[(15, 11, 15), float32] {
  @func_14054() /* ty=Tensor[(15, 11, 15), float32] */
}

def @func_14945() -> Tensor[(15, 11, 15), bool] {
  @func_14943() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_15366() -> (Tensor[(15, 11, 15), bool], Tensor[(2475), uint16], Tensor[(224), float64]) {
  %466 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(2475), uint16], Tensor[(224), float64]) {
    %458 = @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %459 = %458.2;
    %460 = cast(%459, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %461 = reshape(%460, newshape=[2475]) /* ty=Tensor[(2475), uint32] */;
    %462 = @func_15019(%461) /* ty=(Tensor[(2475), uint16], Tensor[(2475), float32]) */;
    %463 = @func_7140() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) */;
    %464 = %462.0;
    %465 = %463.2;
    (%459, %464, %465)
  };
  %466() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475), uint16], Tensor[(224), float64]) */
}

def @func_2648() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  @func_2646() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_6604() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %467 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
  %468 = @func_3442() /* ty=Tensor[(15, 11, 15), float64] */;
  (%467, %468)
}

def @func_2331() -> (Tensor[(15, 11, 15), float64],) {
  %472 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %469 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
    %470 = cast(%469, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %471 = sqrt(%470) /* ty=Tensor[(15, 11, 15), float64] */;
    (%471,)
  };
  %472() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_3200() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %473 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %474 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %475 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  %476 = %473.2;
  %477 = @func_2391() /* ty=Tensor[(15, 11, 15), float64] */;
  %478 = %474.0;
  (%475, %476, %477, %478)
}

def @func_4814() -> (Tensor[(7, 13, 3), float32],) {
  %490 = fn () -> (Tensor[(7, 13, 3), float32],) {
    %479 = @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
    %480 = %479.3;
    %481 = cast(%480, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
    %482 = cosh(%481) /* ty=Tensor[(7, 13, 3), float64] */;
    %483 = cast(%482, dtype="float32") /* ty=Tensor[(7, 13, 3), float32] */;
    %484 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(%480, dtype="float32") /* ty=Tensor[(7, 13, 3), float32] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %487 = mod(%485, %486) /* ty=Tensor[(7, 13, 3), float32] */;
    %488 = cast(%487, dtype="float32") /* ty=Tensor[(7, 13, 3), float32] */;
    %489 = sigmoid(%488) /* ty=Tensor[(7, 13, 3), float32] */;
    (%489,)
  };
  %490() /* ty=(Tensor[(7, 13, 3), float32],) */
}

def @func_7301() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %491 = @func_5816() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) */;
  %492 = @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %493 = %491.1;
  %494 = %492.1;
  (%493, %494)
}

def @func_11278() -> (Tensor[(2475, 1), uint32], Tensor[(224), float64], Tensor[(2340), uint32]) {
  %503 = fn () -> (Tensor[(2475, 1), uint32], Tensor[(224), float64], Tensor[(2340), uint32]) {
    %495 = @func_8233() /* ty=(Tensor[(2475, 1), uint32],) */;
    %496 = cast(meta[relay.Constant][11] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
    %497 = cast(meta[relay.Constant][11] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
    %498 = reshape(%496, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
    %499 = reshape(%497, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
    %500 = @func_2512(%498, %499) /* ty=(Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) */;
    %501 = %495.0;
    %502 = %500.2;
    (%501, %502, meta[relay.Constant][11] /* ty=Tensor[(2340), uint32] */)
  };
  %503() /* ty=(Tensor[(2475, 1), uint32], Tensor[(224), float64], Tensor[(2340), uint32]) */
}

def @func_12471() -> Tensor[(15, 11, 15), float64] {
  %504 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %504.1
}

def @func_13103() -> (Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) {
  @func_13101() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */
}

def @func_14597() -> (Tensor[(15, 11, 15), float64],) {
  @func_14595() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_5468(%var_5467: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) {
  %516 = fn (%var_5446: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) {
    %505 = cast(%var_5446, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
    %506 = log10(%505) /* ty=Tensor[(13, 2, 4), float64] */;
    %507 = cast(%var_5446, dtype="bool") /* ty=Tensor[(13, 2, 4), bool] */;
    %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
    %509 = cast(%506, dtype="bool") /* ty=Tensor[(13, 2, 4), bool] */;
    %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %511 = @func_3098() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
    %512 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %513 = not_equal(%509, %510) /* ty=Tensor[(13, 2, 4), bool] */;
    %514 = %511.1;
    %515 = %512.2;
    (%513, %514, %515)
  };
  %516(%var_5467) /* ty=(Tensor[(13, 2, 4), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) */
}

def @func_10634() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_10632() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_2450() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %517 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %518 = %517.0;
  %519 = cast(%518, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %520 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %521 = %520.1;
  %522 = cast(%521, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %523 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%518, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %526 = equal(%524, %525) /* ty=Tensor[(15, 11, 15), bool] */;
  %527 = cast(%526, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %528 = reshape(%527, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %529 = @func_2088(%528) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %530 = log2(%519) /* ty=Tensor[(15, 11, 15), float64] */;
  %531 = %529.1;
  (%530, %526, %531)
}

def @func_10144() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %535 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
    %532 = @func_5323() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %533 = %532.2;
    %534 = @func_8171() /* ty=Tensor[(15, 11, 15), bool] */;
    (%533, %534)
  };
  %535() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_9738() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %538 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %536 = @func_6546() /* ty=Tensor[(15, 11, 15), bool] */;
    %537 = @func_5436() /* ty=Tensor[(15, 11, 15), float64] */;
    (%536, %537)
  };
  %538() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_13189() -> Tensor[(273), float64] {
  @func_13187() /* ty=Tensor[(273), float64] */
}

def @func_10646(%var_10639: Tensor[(11, 4, 6), uint64], %var_10640: Tensor[(11, 4, 6), uint64]) -> (Tensor[(11, 4, 6), uint64],) {
  %539 = cast(%var_10640, dtype="uint64") /* ty=Tensor[(11, 4, 6), uint64] */;
  %540 = shape_of(%var_10639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%var_10639, dtype="uint64") /* ty=Tensor[(11, 4, 6), uint64] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %543 = left_shift(%541, %542) /* ty=Tensor[(11, 4, 6), uint64] */;
  (%543,)
}

def @func_8937() -> (Tensor[(15, 11, 15), float64],) {
  @func_8935() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_1824() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_13425() -> (Tensor[(15, 11, 15), bool],) {
  @func_13423() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_12973() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %548 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
    %544 = @func_5954() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %545 = @func_4211() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %546 = %544.0;
    %547 = %545.1;
    (%546, %547)
  };
  %548() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_13351() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(2, 5, 16), float64], Tensor[(2475), uint32]) {
  %549 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %550 = @func_11913() /* ty=(Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float64]) */;
  %551 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
  %552 = %549.0;
  %553 = @func_11602() /* ty=Tensor[(15, 11, 15), bool] */;
  %554 = %550.2;
  %555 = %551.3;
  (%552, %553, %554, %555)
}

def @func_10210() -> (Tensor[(15, 11, 15), bool],) {
  %556 = @func_7235() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %557 = %556.1;
  (%557,)
}

def @func_8020() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8]) {
  %558 = @func_7235() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %559 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
  %560 = @func_6298() /* ty=Tensor[(15, 11, 15), bool] */;
  %561 = %558.1;
  %562 = %559.3;
  (%560, %561, %562)
}

def @func_10485() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %567 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
    %563 = @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %564 = @func_10210() /* ty=(Tensor[(15, 11, 15), bool],) */;
    %565 = %563.1;
    %566 = %564.0;
    (%565, %566)
  };
  %567() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_14014() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8]) {
  %568 = @func_12237() /* ty=Tensor[(15, 11, 15), bool] */;
  %569 = @func_6874() /* ty=Tensor[(15, 11, 15), uint8] */;
  (%568, %569)
}

def @func_11143(%var_11141: Tensor[(8, 5, 6), int64], %var_11142: Tensor[(8, 5, 6), int64]) -> (Tensor[(8, 5, 6), bool], Tensor[(15, 11, 15), bool]) {
  @func_11139(%var_11141, %var_11142) /* ty=(Tensor[(8, 5, 6), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_2646() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %570 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %571 = %570.0;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %573 = reshape(%572, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
  %574 = @func_1592(%573) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %575 = @func_2310() /* ty=Tensor[(15, 11, 15), bool] */;
  %576 = %574.2;
  (%571, %575, %576)
}

def @func_10708() -> (Tensor[(15, 11, 15), bool],) {
  %577 = @func_6717() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %578 = %577.0;
  (%578,)
}

def @func_11915() -> (Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float64]) {
  @func_11913() /* ty=(Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float64]) */
}

def @func_1594(%var_1593: Tensor[(15, 11, 15), float64]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %593 = fn (%var_1581: Tensor[(15, 11, 15), float64]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
    %579 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
    %580 = cast(%579, dtype="float32") /* ty=Tensor[(15, 11, 15), float32] */;
    %581 = log10(%580) /* ty=Tensor[(15, 11, 15), float32] */;
    %582 = cast(%581, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %583 = tan(%582) /* ty=Tensor[(15, 11, 15), float64] */;
    %584 = cast(%583, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %585 = cosh(%584) /* ty=Tensor[(15, 11, 15), float64] */;
    %586 = cast(%var_1581, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
    %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
    %588 = cast(%585, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %590 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
    %591 = not_equal(%588, %589) /* ty=Tensor[(15, 11, 15), bool] */;
    %592 = @func_1438() /* ty=Tensor[(15, 11, 15), bool] */;
    (%590, %591, %592)
  };
  %593(%var_1593) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_2159(%var_2101: Tensor[(4, 7, 8), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) {
  %594 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %595 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %596 = cast(%var_2101, dtype="float64") /* ty=Tensor[(4, 7, 8), float64] */;
  %597 = sigmoid(%596) /* ty=Tensor[(4, 7, 8), float64] */;
  %598 = cast(%var_2101, dtype="float64") /* ty=Tensor[(4, 7, 8), float64] */;
  %599 = sin(%598) /* ty=Tensor[(4, 7, 8), float64] */;
  %600 = cast(%599, dtype="uint16") /* ty=Tensor[(4, 7, 8), uint16] */;
  %601 = shape_of(%597, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(%597, dtype="uint16") /* ty=Tensor[(4, 7, 8), uint16] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %604 = cast(%597, dtype="int64") /* ty=Tensor[(4, 7, 8), int64] */;
  %605 = shape_of(%599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%599, dtype="int64") /* ty=Tensor[(4, 7, 8), int64] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %608 = bitwise_or(%606, %607) /* ty=Tensor[(4, 7, 8), int64] */;
  %609 = cast(%608, dtype="float32") /* ty=Tensor[(4, 7, 8), float32] */;
  %610 = shape_of(%599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%599, dtype="float32") /* ty=Tensor[(4, 7, 8), float32] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %613 = %594.1;
  %614 = %595.0;
  %615 = left_shift(%602, %603) /* ty=Tensor[(4, 7, 8), uint16] */;
  %616 = maximum(%611, %612) /* ty=Tensor[(4, 7, 8), float32] */;
  (%613, %614, %615, %616)
}

def @func_8369() -> Tensor[(15, 11, 15), float64] {
  @func_8367() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_6641() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_6639() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_1277() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_3593(%var_3592: Tensor[(14, 3, 3), float32]) -> (Tensor[(14, 3, 3), float32], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %625 = fn (%var_3545: Tensor[(14, 3, 3), float32]) -> (Tensor[(14, 3, 3), float32], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
    %617 = cast(%var_3545, dtype="float32") /* ty=Tensor[(14, 3, 3), float32] */;
    %618 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
    %619 = @func_2330() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %620 = @func_2475() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
    %621 = acos(%617) /* ty=Tensor[(14, 3, 3), float32] */;
    %622 = %618.3;
    %623 = %619.0;
    %624 = %620.1;
    (%621, %622, %623, %624)
  };
  %625(%var_3592) /* ty=(Tensor[(14, 3, 3), float32], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */
}

def @func_5110() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32]) {
  %632 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32]) {
    %626 = @func_2983() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %627 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
    %628 = @func_3782() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), float64]) */;
    %629 = %626.3;
    %630 = %627.3;
    %631 = %628.1;
    (%629, %630, %631)
  };
  %632() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32]) */
}

def @func_5816() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) {
  %633 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %634 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %635 = %633.1;
  %636 = %634.3;
  (%635, %636)
}

def @func_8866() -> Tensor[(15, 11, 15), int64] {
  @func_8864() /* ty=Tensor[(15, 11, 15), int64] */
}

def @func_2515(%var_2513: Tensor[(13, 15, 12), uint32], %var_2514: Tensor[(13, 15, 12), uint32]) -> (Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) {
  %648 = fn (%var_2480: Tensor[(13, 15, 12), uint32], %var_2481: Tensor[(13, 15, 12), uint32]) -> (Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) {
    %637 = cast(%var_2481, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
    %638 = shape_of(%var_2480, dtype="int32") /* ty=Tensor[(3), int32] */;
    %639 = cast(%var_2480, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
    %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %641 = cast(meta[relay.Constant][12] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %642 = reshape(%641, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
    %643 = @func_2159(%642) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
    %644 = cast(%var_2480, dtype="float64") /* ty=Tensor[(13, 15, 12), float64] */;
    %645 = less(%639, %640) /* ty=Tensor[(13, 15, 12), bool] */;
    %646 = %643.1;
    %647 = atanh(%644) /* ty=Tensor[(13, 15, 12), float64] */;
    (%645, %646, meta[relay.Constant][12] /* ty=Tensor[(224), float64] */, %647)
  };
  %648(%var_2513, %var_2514) /* ty=(Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) */
}

def @func_8022() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8]) {
  @func_8020() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8]) */
}

def @func_15115() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  @func_15113() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_6954() -> (Tensor[(15, 11, 15), float64],) {
  %651 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %649 = @func_6444() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %650 = %649.0;
    (%650,)
  };
  %651() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_3427() -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) {
  %656 = fn () -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) {
    %652 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
    %653 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
    %654 = %652.0;
    %655 = %653.5;
    (%654, %655)
  };
  %656() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */
}

def @func_1424() -> (Tensor[(15, 11, 15), float64],) {
  %657 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %658 = %657.3;
  %659 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 11, 15), bool] */, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%658, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %663 = floor_divide(%661, %662) /* ty=Tensor[(15, 11, 15), float64] */;
  (%663,)
}

def @func_12285() -> (Tensor[(15, 11, 15), float64],) {
  @func_12283() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_5908() -> Tensor[(15, 11, 15), bool] {
  %665 = fn () -> Tensor[(15, 11, 15), bool] {
    %664 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %664.1
  };
  %665() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_2162(%var_2160: Tensor[(4, 7, 8), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) {
  @func_2159(%var_2160) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */
}

def @func_3859(%var_3847: Tensor[(11, 15, 16), uint16], %var_3855: Tensor[(11, 15, 16), uint16]) -> (Tensor[(11, 15, 16), bool], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64]) {
  %666 = cast(%var_3847, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
  %667 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(11, 15, 16), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 15, 16), uint16] */, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = cast(%var_3855, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %671 = shape_of(%var_3847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_3847, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %674 = greater(%668, %669) /* ty=Tensor[(11, 15, 16), bool] */;
  %675 = @func_2181() /* ty=Tensor[(15, 11, 15), float64] */;
  %676 = power(%672, %673) /* ty=Tensor[(11, 15, 16), float64] */;
  (%674, %675, %676)
}

def @func_6446() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_6444() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_2182() -> Tensor[(15, 11, 15), float64] {
  %678 = fn () -> Tensor[(15, 11, 15), float64] {
    %677 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %677.0
  };
  %678() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_11398() -> Tensor[(15, 11, 15), int64] {
  @func_11396() /* ty=Tensor[(15, 11, 15), int64] */
}

def @func_7655() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(104, 1), float64]) {
  %689 = fn () -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(104, 1), float64]) {
    %679 = @func_6498() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
    %680 = %679.0;
    %681 = cast(%680, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
    %682 = reshape(%681, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
    %683 = @func_2088(%682) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %684 = cast(meta[relay.Constant][15] /* ty=Tensor[(104, 1), float64] */, dtype="float64") /* ty=Tensor[(104, 1), float64] */;
    %685 = reshape(%684, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %686 = @func_5569(%685) /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool], Tensor[(104), float64], Tensor[(15, 11, 15), bool]) */;
    %687 = %683.1;
    %688 = %686.1;
    (%680, %687, %688, meta[relay.Constant][15] /* ty=Tensor[(104, 1), float64] */)
  };
  %689() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(104, 1), float64]) */
}

def @func_12144() -> Tensor[(15, 11, 15), float64] {
  %690 = @func_7543() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %690.0
}

def @func_2705() -> (Tensor[(15, 11, 15), float32],) {
  %691 = @func_2646() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %692 = %691.1;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(15, 11, 15), float32] */;
  %694 = erf(%693) /* ty=Tensor[(15, 11, 15), float32] */;
  (%694,)
}

def @func_12313() -> Tensor[(15, 11, 15), float64] {
  %696 = fn () -> Tensor[(15, 11, 15), float64] {
    %695 = @func_7140() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(224), float64]) */;
    %695.1
  };
  %696() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_4213() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  @func_4211() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_12826() -> (Tensor[(15, 11, 15), float64],) {
  @func_12824() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_10314() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float32]) {
  %697 = @func_9441() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int8]) */;
  %698 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %699 = %697.0;
  %700 = %698.0;
  (%699, %700)
}

def @func_5783(%var_5782: Tensor[(13, 21), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64]) {
  %710 = fn (%var_5778: Tensor[(13, 21), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64]) {
    %701 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
    %702 = cast(%var_5778, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %703 = @func_5144() /* ty=Tensor[(15, 11, 15), float64] */;
    %704 = cast(%703, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
    %705 = reshape(%702, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
    %706 = reshape(%704, newshape=[2475]) /* ty=Tensor[(2475), bool] */;
    %707 = @func_2842(%705, %706) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */;
    %708 = %701.0;
    %709 = %707.0;
    (%703, %708, %709, %var_5778)
  };
  %710(%var_5782) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64], Tensor[(7, 13, 3), float64], Tensor[(13, 21), float64]) */
}

def @func_12949() -> Tensor[(15, 11, 15), float64] {
  %711 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %711.2
}

def @func_15523() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %712 = @func_10210() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %713 = @func_5907() /* ty=Tensor[(15, 11, 15), bool] */;
  %714 = %712.0;
  %715 = @func_9552() /* ty=Tensor[(15, 11, 15), int64] */;
  (%713, %714, %715)
}

def @func_6902() -> (Tensor[(13, 15, 12), float64], Tensor[(15, 11, 15), bool]) {
  @func_6900() /* ty=(Tensor[(13, 15, 12), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_7237() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  @func_7235() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_15113() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %716 = @func_7875() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %717 = @func_14962() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %718 = @func_6364() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %719 = %716.1;
  %720 = %717.0;
  %721 = %718.1;
  (%719, %720, %721)
}

def @func_12824() -> (Tensor[(15, 11, 15), float64],) {
  %722 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
  (%722,)
}

def @func_6639() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %723 = @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %724 = %723.1;
  %725 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
  (%724, %725)
}

def @func_15390() -> Tensor[(15, 11, 15), bool] {
  %726 = fn () -> Tensor[(15, 11, 15), bool] {
    @func_1438() /* ty=Tensor[(15, 11, 15), bool] */
  };
  %726() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_15021(%var_15020: Tensor[(2475), uint32]) -> (Tensor[(2475), uint16], Tensor[(2475), float32]) {
  %738 = fn (%var_14994: Tensor[(2475), uint32]) -> (Tensor[(2475), uint16], Tensor[(2475), float32]) {
    %727 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
    %728 = %727.3;
    %729 = cast(%var_14994, dtype="uint16") /* ty=Tensor[(2475), uint16] */;
    %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(1), int32] */;
    %731 = cast(%728, dtype="uint16") /* ty=Tensor[(2475), uint16] */;
    %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %733 = cast(%var_14994, dtype="float32") /* ty=Tensor[(2475), float32] */;
    %734 = sinh(%733) /* ty=Tensor[(2475), float32] */;
    %735 = cast(%734, dtype="float32") /* ty=Tensor[(2475), float32] */;
    %736 = minimum(%731, %732) /* ty=Tensor[(2475), uint16] */;
    %737 = log2(%735) /* ty=Tensor[(2475), float32] */;
    (%736, %737)
  };
  %738(%var_15020) /* ty=(Tensor[(2475), uint16], Tensor[(2475), float32]) */
}

def @func_6802(%var_6789: Tensor[(12, 14, 5), int32]) -> Tensor[(12, 14, 5), int32] {
  %739 = cast(%var_6789, dtype="int32") /* ty=Tensor[(12, 14, 5), int32] */;
  %740 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(12, 14, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 14, 5), int32] */, dtype="int32") /* ty=Tensor[(12, 14, 5), int32] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%741, %742) /* ty=Tensor[(12, 14, 5), int32] */
}

def @func_12047(%var_12046: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(2640), float64]) {
  %762 = fn (%var_12030: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(2640), float64]) {
    %743 = cast(meta[relay.Constant][17] /* ty=Tensor[(2640), uint16] */, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
    %744 = reshape(%743, newshape=[2640]) /* ty=Tensor[(2640), uint16] */;
    %745 = @func_6138(%744) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), float64], Tensor[(2366), int64]) */;
    %746 = @func_8935() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %747 = cast(%var_12030, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
    %748 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(2640), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %749 = cast(meta[relay.Constant][17] /* ty=Tensor[(2640), uint16] */, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
    %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %751 = cast(meta[relay.Constant][17] /* ty=Tensor[(2640), uint16] */, dtype="float64") /* ty=Tensor[(2640), float64] */;
    %752 = @func_2391() /* ty=Tensor[(15, 11, 15), float64] */;
    %753 = @func_10895() /* ty=Tensor[(15, 11, 15), bool] */;
    %754 = %745.1;
    %755 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
    %756 = @func_3442() /* ty=Tensor[(15, 11, 15), float64] */;
    %757 = %746.0;
    %758 = right_shift(%749, %750) /* ty=Tensor[(2640), uint16] */;
    %759 = @func_8171() /* ty=Tensor[(15, 11, 15), bool] */;
    %760 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
    %761 = log10(%751) /* ty=Tensor[(2640), float64] */;
    (%752, %753, %754, %755, %756, %757, %758, %759, %760, %761)
  };
  %762(%var_12046) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(2640), float64]) */
}

def @func_14569(%var_14567: Tensor[(9, 11, 12), uint32], %var_14568: Tensor[(9, 11, 12), uint32]) -> (Tensor[(9, 11, 12), uint32], Tensor[(15, 11, 15), float64]) {
  @func_14565(%var_14567, %var_14568) /* ty=(Tensor[(9, 11, 12), uint32], Tensor[(15, 11, 15), float64]) */
}

def @func_6606() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_1449() -> (Tensor[(15, 11, 15), float64],) {
  %765 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %763 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %764 = %763.0;
    (%764,)
  };
  %765() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_9517(%var_9515: Tensor[(1, 5, 1), float64]) -> (Tensor[(16, 5, 11), int8],) {
  @func_9514(%var_9515) /* ty=(Tensor[(16, 5, 11), int8],) */
}

def @func_6189() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int8]) {
  %766 = @func_2181() /* ty=Tensor[(15, 11, 15), float64] */;
  %767 = cast(%766, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %768 = reshape(%767, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
  %769 = @func_1695(%768) /* ty=Tensor[(15, 11, 15), int8] */;
  (%766, %769)
}

def @func_10561() -> (Tensor[(15, 11, 15), float64],) {
  %770 = @func_7600() /* ty=Tensor[(15, 11, 15), float64] */;
  (%770,)
}

def @func_10073() -> (Tensor[(15, 11, 15), bool],) {
  %773 = fn () -> (Tensor[(15, 11, 15), bool],) {
    %771 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %772 = %771.3;
    (%772,)
  };
  %773() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_13251() -> (Tensor[(15, 11, 15), float32],) {
  %774 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %775 = %774.0;
  (%775,)
}

def @func_3863(%var_3861: Tensor[(11, 15, 16), uint16], %var_3862: Tensor[(11, 15, 16), uint16]) -> (Tensor[(11, 15, 16), bool], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64]) {
  @func_3859(%var_3861, %var_3862) /* ty=(Tensor[(11, 15, 16), bool], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64]) */
}

def @func_6458() -> Tensor[(15, 11, 15), bool] {
  %776 = @func_5245() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %776.1
}

def @func_8950() -> (Tensor[(2475, 1), uint32],) {
  @func_8948() /* ty=(Tensor[(2475, 1), uint32],) */
}

def @func_2310() -> Tensor[(15, 11, 15), bool] {
  %777 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %777.1
}

def @func_6589() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %778 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %779 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
  %780 = %778.1;
  %781 = %779.1;
  (%780, %781)
}

def @func_4211() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %782 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %783 = %782.1;
  %784 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %785 = %784.2;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %787 = shape_of(%783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%783, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %790 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %791 = mod(%788, %789) /* ty=Tensor[(15, 11, 15), float64] */;
  %792 = %790.1;
  (%791, %792)
}

def @func_11476() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %793 = @func_7936() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %794 = @func_8839() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), bool]) */;
  %795 = %793.0;
  %796 = %794.4;
  (%795, %796)
}

def @func_6498() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
  %797 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %798 = @func_5323() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %799 = %797.2;
  %800 = %798.1;
  (%799, %800)
}

def @func_6875() -> Tensor[(15, 11, 15), uint8] {
  %802 = fn () -> Tensor[(15, 11, 15), uint8] {
    %801 = @func_5109() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32]) */;
    %801.1
  };
  %802() /* ty=Tensor[(15, 11, 15), uint8] */
}

def @func_2088(%var_2067: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %803 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  %804 = cast(%var_2067, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%803, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %808 = floor_mod(%806, %807) /* ty=Tensor[(15, 11, 15), float64] */;
  %809 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
  (%808, %809)
}

def @func_5132() -> (Tensor[(15, 11, 15), bool],) {
  @func_5130() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_1126() -> (Tensor[(15, 11, 15), float64],) {
  @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_1438() -> Tensor[(15, 11, 15), bool] {
  %810 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %810.0
}

def @func_2392() -> Tensor[(15, 11, 15), float64] {
  %811 = fn () -> Tensor[(15, 11, 15), float64] {
    @func_1170() /* ty=Tensor[(15, 11, 15), float64] */
  };
  %811() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_10632() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %812 = @func_3200() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %813 = @func_2475() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %814 = %812.1;
  %815 = %813.0;
  (%814, %815)
}

def @func_6850() -> Tensor[(15, 11, 15), float64] {
  %817 = fn () -> Tensor[(15, 11, 15), float64] {
    %816 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %816.0
  };
  %817() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_13168() -> (Tensor[(15, 11, 15), float64],) {
  %818 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
  %819 = %818.1;
  (%819,)
}

def @func_13170() -> (Tensor[(15, 11, 15), float64],) {
  @func_13168() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_9612() -> Tensor[(15, 11, 15), float64] {
  %821 = fn () -> Tensor[(15, 11, 15), float64] {
    %820 = @func_8935() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %820.0
  };
  %821() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_5043() -> (Tensor[(15, 11, 15), bool],) {
  %822 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
  (%822,)
}

def @func_7504() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  @func_7502() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */
}

def @func_14016() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8]) {
  @func_14014() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8]) */
}

def @func_1370() -> Tensor[(15, 11, 15), float64] {
  %825 = fn () -> Tensor[(15, 11, 15), float64] {
    %823 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
    %824 = cast(%823, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    exp(%824) /* ty=Tensor[(15, 11, 15), float64] */
  };
  %825() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_12951() -> Tensor[(15, 11, 15), float64] {
  @func_12949() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_3259() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  @func_3257() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_10519() -> (Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool]) {
  %826 = @func_9141() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %827 = @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %828 = %826.2;
  %829 = %827.0;
  (%828, %829)
}

def @func_11557() -> Tensor[(15, 11, 15), bool] {
  %831 = fn () -> Tensor[(15, 11, 15), bool] {
    %830 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
    %830.0
  };
  %831() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_4843() -> (Tensor[(15, 11, 15), int64],) {
  %834 = fn () -> (Tensor[(15, 11, 15), int64],) {
    %832 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
    %833 = %832.0;
    (%833,)
  };
  %834() /* ty=(Tensor[(15, 11, 15), int64],) */
}

def @func_14650() -> (Tensor[(224), float64], Tensor[(15, 11, 15), int64], Tensor[(2475), bool]) {
  @func_14648() /* ty=(Tensor[(224), float64], Tensor[(15, 11, 15), int64], Tensor[(2475), bool]) */
}

def @func_3444() -> Tensor[(15, 11, 15), float64] {
  @func_3442() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_8751() -> Tensor[(15, 11, 15), bool] {
  %835 = fn () -> Tensor[(15, 11, 15), bool] {
    @func_1438() /* ty=Tensor[(15, 11, 15), bool] */
  };
  %835() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_4621() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_5991() -> (Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), float64]) {
  @func_5989() /* ty=(Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), float64]) */
}

def @func_6900() -> (Tensor[(13, 15, 12), float64], Tensor[(15, 11, 15), bool]) {
  %836 = @func_4009() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) */;
  %837 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %838 = %836.1;
  %839 = %837.2;
  (%838, %839)
}

def @func_860() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %844 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
    %840 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %841 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %842 = %840.2;
    %843 = %841.3;
    (%842, %843)
  };
  %844() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */
}

def @func_4495(%var_4494: Tensor[(11, 5, 3), float32]) -> (Tensor[(11, 5, 3), float32],) {
  %847 = fn (%var_4487: Tensor[(11, 5, 3), float32]) -> (Tensor[(11, 5, 3), float32],) {
    %845 = cast(%var_4487, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
    %846 = exp(%845) /* ty=Tensor[(11, 5, 3), float32] */;
    (%846,)
  };
  %847(%var_4494) /* ty=(Tensor[(11, 5, 3), float32],) */
}

def @func_4112() -> Tensor[(15, 11, 15), float64] {
  %849 = fn () -> Tensor[(15, 11, 15), float64] {
    %848 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %848.0
  };
  %849() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_7601() -> Tensor[(15, 11, 15), float64] {
  %851 = fn () -> Tensor[(15, 11, 15), float64] {
    %850 = @func_7543() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %850.0
  };
  %851() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_10710() -> (Tensor[(15, 11, 15), bool],) {
  @func_10708() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_11762() -> Tensor[(15, 11, 15), float64] {
  %853 = fn () -> Tensor[(15, 11, 15), float64] {
    %852 = @func_6279() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
    %852.0
  };
  %853() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_13871() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64]) {
  %854 = @func_10561() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %855 = @func_6900() /* ty=(Tensor[(13, 15, 12), float64], Tensor[(15, 11, 15), bool]) */;
  %856 = @func_7600() /* ty=Tensor[(15, 11, 15), float64] */;
  %857 = %854.0;
  %858 = %855.0;
  (%856, %857, %858)
}

def @func_14519() -> Tensor[(15, 11, 15), bool] {
  %859 = fn () -> Tensor[(15, 11, 15), bool] {
    @func_1755() /* ty=Tensor[(15, 11, 15), bool] */
  };
  %859() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_2985() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  @func_2983() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_10729() -> (Tensor[(15, 11, 15), uint8],) {
  @func_10727() /* ty=(Tensor[(15, 11, 15), uint8],) */
}

def @func_1757() -> Tensor[(15, 11, 15), bool] {
  @func_1755() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_11604() -> Tensor[(15, 11, 15), bool] {
  @func_11602() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_1322() -> Tensor[(15, 11, 15), bool] {
  %861 = fn () -> Tensor[(15, 11, 15), bool] {
    %860 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %860.4
  };
  %861() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_4339() -> (Tensor[(15, 11, 15), int64],) {
  %864 = fn () -> (Tensor[(15, 11, 15), int64],) {
    %862 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
    %863 = %862.0;
    (%863,)
  };
  %864() /* ty=(Tensor[(15, 11, 15), int64],) */
}

def @func_1159() -> Tensor[(15, 11, 15), bool] {
  %866 = fn () -> Tensor[(15, 11, 15), bool] {
    %865 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
    %865.0
  };
  %866() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_5955() -> (Tensor[(15, 11, 15), float64],) {
  %869 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %867 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %868 = %867.0;
    (%868,)
  };
  %869() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_2683() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %873 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
    %870 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %871 = %870.1;
    %872 = @func_1438() /* ty=Tensor[(15, 11, 15), bool] */;
    (%871, %872)
  };
  %873() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_12419(%var_12418: Tensor[(112, 2), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(112, 2), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %882 = fn (%var_12324: Tensor[(112, 2), float64]) -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(112, 2), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %874 = cast(%var_12324, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
    %875 = reshape(%874, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
    %876 = @func_2159(%875) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
    %877 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %878 = @func_7471() /* ty=Tensor[(15, 11, 15), float64] */;
    %879 = %876.1;
    %880 = @func_11761() /* ty=Tensor[(15, 11, 15), float64] */;
    %881 = %877.0;
    (%878, %879, %var_12324, %880, %881)
  };
  %882(%var_12418) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(112, 2), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_15525() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  @func_15523() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */
}

def @func_8691() -> Tensor[(15, 11, 15), uint8] {
  @func_6874() /* ty=Tensor[(15, 11, 15), uint8] */
}

def @func_8864() -> Tensor[(15, 11, 15), int64] {
  @func_7714() /* ty=Tensor[(15, 11, 15), int64] */
}

def @func_7715() -> Tensor[(15, 11, 15), int64] {
  %884 = fn () -> Tensor[(15, 11, 15), int64] {
    %883 = @func_4338() /* ty=(Tensor[(15, 11, 15), int64],) */;
    %883.0
  };
  %884() /* ty=Tensor[(15, 11, 15), int64] */
}

def @func_11396() -> Tensor[(15, 11, 15), int64] {
  %885 = @func_8839() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), bool]) */;
  %885.2
}

def @func_9553() -> Tensor[(15, 11, 15), int64] {
  %887 = fn () -> Tensor[(15, 11, 15), int64] {
    %886 = @func_7502() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
    %886.1
  };
  %887() /* ty=Tensor[(15, 11, 15), int64] */
}

def @func_12146() -> Tensor[(15, 11, 15), float64] {
  @func_12144() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_13479(%var_13476: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64], Tensor[(2640), uint16]) {
  %888 = @func_4009() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) */;
  %889 = cast(%var_13476, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %890 = cast(%var_13476, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %891 = reshape(%889, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), uint16] */;
  %892 = reshape(%890, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), uint16] */;
  %893 = @func_3859(%891, %892) /* ty=(Tensor[(11, 15, 16), bool], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64]) */;
  %894 = @func_11188() /* ty=Tensor[(15, 11, 15), uint8] */;
  %895 = %888.0;
  %896 = %893.2;
  (%894, %895, %896, %var_13476)
}

def @func_11311() -> Tensor[(15, 11, 15), bool] {
  @func_11309() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_4009() -> (Tensor[(15, 11, 15), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) {
  %897 = @func_2475() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %898 = cast(meta[relay.Constant][18] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %899 = cast(meta[relay.Constant][18] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %900 = reshape(%898, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %901 = reshape(%899, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), uint32] */;
  %902 = @func_2512(%900, %901) /* ty=(Tensor[(13, 15, 12), bool], Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(13, 15, 12), float64]) */;
  %903 = %897.0;
  %904 = %902.3;
  (%903, %904, meta[relay.Constant][18] /* ty=Tensor[(2340), uint32] */)
}

def @func_9807() -> Tensor[(15, 11, 15), bool] {
  %906 = fn () -> Tensor[(15, 11, 15), bool] {
    %905 = @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
    %905.2
  };
  %906() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_6138(%var_6103: Tensor[(2640), uint16]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64], Tensor[(2640), uint16], Tensor[(15, 11, 15), float64], Tensor[(2366), int64]) {
  %907 = @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %908 = @func_2475() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */;
  %909 = cast(%var_6103, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %910 = cast(%var_6103, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %911 = reshape(%909, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), uint16] */;
  %912 = reshape(%910, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), uint16] */;
  %913 = @func_3859(%911, %912) /* ty=(Tensor[(11, 15, 16), bool], Tensor[(15, 11, 15), float64], Tensor[(11, 15, 16), float64]) */;
  %914 = cast(meta[relay.Constant][19] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %915 = reshape(%914, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %916 = @func_4522(%915) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float64]) */;
  %917 = %907.0;
  %918 = %908.1;
  %919 = %913.1;
  %920 = %916.2;
  (%917, %918, %919, %var_6103, %920, meta[relay.Constant][19] /* ty=Tensor[(2366), int64] */)
}

def @func_1001() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) {
  %956 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) {
    %921 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %922 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %923 = %922.2;
    %924 = cast(%923, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %925 = %921.1;
    %926 = cast(%925, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %927 = cast(%925, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %928 = reshape(%926, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %929 = reshape(%927, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %930 = @func_20(%928, %929) /* ty=Tensor[(15, 11, 15), bool] */;
    %931 = cast(%930, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
    %932 = reshape(%924, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %933 = reshape(%931, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
    %934 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %935 = %934.1;
    %936 = cast(%930, dtype="uint8") /* ty=Tensor[(15, 11, 15), uint8] */;
    %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
    %938 = cast(%935, dtype="uint8") /* ty=Tensor[(15, 11, 15), uint8] */;
    %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %940 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %941 = %940.4;
    %942 = cast(%941, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
    %943 = atan(%942) /* ty=Tensor[(13, 13, 10), float32] */;
    %944 = cast(%941, dtype="uint8") /* ty=Tensor[(13, 13, 10), uint8] */;
    %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
    %946 = cast(%943, dtype="uint8") /* ty=Tensor[(13, 13, 10), uint8] */;
    %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %948 = multiply(%946, %947) /* ty=Tensor[(13, 13, 10), uint8] */;
    %949 = cast(%948, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
    %950 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
    %951 = cast(%943, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
    %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %953 = @func_20(%932, %933) /* ty=Tensor[(15, 11, 15), bool] */;
    %954 = logical_xor(%938, %939) /* ty=Tensor[(15, 11, 15), uint8] */;
    %955 = divide(%951, %952) /* ty=Tensor[(13, 13, 10), float32] */;
    (%925, %923, %953, %954, %955)
  };
  %956() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */
}

def @func_6298() -> Tensor[(15, 11, 15), bool] {
  %957 = @func_5043() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %957.0
}

def @func_7537() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
  %962 = fn () -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) {
    %958 = @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
    %959 = @func_1903() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
    %960 = %958.1;
    %961 = %959.5;
    (%960, %961)
  };
  %962() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */
}

def @func_2452() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_14044(%var_14043: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %968 = fn (%var_14019: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %963 = cast(%var_14019, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
    %964 = @func_3482() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %965 = cos(%963) /* ty=Tensor[(5, 14, 4), float64] */;
    %966 = @func_8921() /* ty=Tensor[(15, 11, 15), bool] */;
    %967 = %964.0;
    (%965, %966, %967)
  };
  %968(%var_14043) /* ty=(Tensor[(5, 14, 4), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_1440() -> Tensor[(15, 11, 15), bool] {
  @func_1438() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_2810() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %969 = @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %970 = %969.1;
  %971 = cast(%970, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %972 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %973 = %972.2;
  %974 = cast(%973, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %975 = reshape(%974, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %976 = @func_2282(%975) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) */;
  %977 = asin(%971) /* ty=Tensor[(15, 11, 15), float64] */;
  %978 = %976.0;
  (%977, %973, %978)
}

def @func_6045() -> (Tensor[(15, 11, 15), bool],) {
  %980 = fn () -> (Tensor[(15, 11, 15), bool],) {
    %979 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
    (%979,)
  };
  %980() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_11189() -> Tensor[(15, 11, 15), uint8] {
  %981 = fn () -> Tensor[(15, 11, 15), uint8] {
    @func_10423() /* ty=Tensor[(15, 11, 15), uint8] */
  };
  %981() /* ty=Tensor[(15, 11, 15), uint8] */
}

def @func_14085(%var_14084: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 11, 15), float64]) {
  %985 = fn (%var_14067: Tensor[(3, 7, 4), float64]) -> (Tensor[(3, 7, 4), float64], Tensor[(15, 11, 15), float64]) {
    %982 = cast(%var_14067, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %983 = cos(%982) /* ty=Tensor[(3, 7, 4), float64] */;
    %984 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
    (%983, %984)
  };
  %985(%var_14084) /* ty=(Tensor[(3, 7, 4), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_10650(%var_10648: Tensor[(11, 4, 6), uint64], %var_10649: Tensor[(11, 4, 6), uint64]) -> (Tensor[(11, 4, 6), uint64],) {
  @func_10646(%var_10648, %var_10649) /* ty=(Tensor[(11, 4, 6), uint64],) */
}

def @func_1755() -> Tensor[(15, 11, 15), bool] {
  %986 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %986.2
}

def @func_4472(%var_4445: Tensor[(2475), bool]) -> (Tensor[(7, 13, 16), float64], Tensor[(7, 13, 3), float64], Tensor[(39, 7), float64], Tensor[(2475), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %987 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 13, 16), float32] */, dtype="float32") /* ty=Tensor[(7, 13, 16), float32] */;
  %988 = cosh(%987) /* ty=Tensor[(7, 13, 16), float32] */;
  %989 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 13, 16), float32] */, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
  %990 = shape_of(%988, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(%988, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %993 = cast(meta[relay.Constant][21] /* ty=Tensor[(39, 7), float64] */, dtype="float64") /* ty=Tensor[(39, 7), float64] */;
  %994 = cast(%var_4445, dtype="bool") /* ty=Tensor[(2475), bool] */;
  %995 = reshape(%993, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %996 = reshape(%994, newshape=[2475]) /* ty=Tensor[(2475), bool] */;
  %997 = @func_2842(%995, %996) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(15, 11, 15), bool], Tensor[(2475), bool]) */;
  %998 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %999 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1000 = add(%991, %992) /* ty=Tensor[(7, 13, 16), float64] */;
  %1001 = %997.0;
  %1002 = %998.1;
  %1003 = %999.0;
  (%1000, %1001, meta[relay.Constant][21] /* ty=Tensor[(39, 7), float64] */, %var_4445, %1002, %1003)
}

def @func_11478() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  @func_11476() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_6718() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1008 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %1004 = @func_4619() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %1005 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
    %1006 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
    %1007 = %1004.0;
    (%1005, %1006, %1007)
  };
  %1008() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_9938() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(7, 13, 3), float32], Tensor[(15, 11, 15), float64]) {
  %1017 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(7, 13, 3), float32], Tensor[(15, 11, 15), float64]) {
    %1009 = @func_5954() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1010 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
    %1011 = @func_4813() /* ty=(Tensor[(7, 13, 3), float32],) */;
    %1012 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1013 = %1009.0;
    %1014 = %1010.0;
    %1015 = %1011.0;
    %1016 = %1012.0;
    (%1013, %1014, %1015, %1016)
  };
  %1017() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(7, 13, 3), float32], Tensor[(15, 11, 15), float64]) */
}

def @func_10825() -> Tensor[(15, 11, 15), bool] {
  %1019 = fn () -> Tensor[(15, 11, 15), bool] {
    %1018 = @func_7805() /* ty=(Tensor[(15, 11, 15), bool],) */;
    %1018.0
  };
  %1019() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_12283() -> (Tensor[(15, 11, 15), float64],) {
  %1020 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %1021 = %1020.1;
  (%1021,)
}

def @func_9159() -> (Tensor[(15, 11, 15), float64],) {
  %1023 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %1022 = @func_8367() /* ty=Tensor[(15, 11, 15), float64] */;
    (%1022,)
  };
  %1023() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_10025() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %1029 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %1024 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %1025 = @func_8457() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %1026 = %1024.1;
    %1027 = %1025.4;
    %1028 = @func_5436() /* ty=Tensor[(15, 11, 15), float64] */;
    (%1026, %1027, %1028)
  };
  %1029() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_2356() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */
}

def @func_10931() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %1034 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %1030 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %1031 = @func_2220() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %1032 = %1030.0;
    %1033 = %1031.1;
    (%1032, %1033)
  };
  %1034() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_13321() -> (Tensor[(15, 11, 15), float64],) {
  %1036 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %1035 = @func_11969() /* ty=Tensor[(15, 11, 15), float64] */;
    (%1035,)
  };
  %1036() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_14648() -> (Tensor[(224), float64], Tensor[(15, 11, 15), int64], Tensor[(2475), bool]) {
  %1037 = @func_11277() /* ty=(Tensor[(2475, 1), uint32], Tensor[(224), float64], Tensor[(2340), uint32]) */;
  %1038 = cast(meta[relay.Constant][22] /* ty=Tensor[(2475), bool] */, dtype="bool") /* ty=Tensor[(2475), bool] */;
  %1039 = reshape(%1038, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %1040 = @func_405(%1039) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %1041 = %1037.1;
  %1042 = %1040.0;
  (%1041, %1042, meta[relay.Constant][22] /* ty=Tensor[(2475), bool] */)
}

def @func_3783() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), float64]) {
  %1058 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), float64]) {
    %1043 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1044 = @func_3426() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64]) */;
    %1045 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %1046 = %1045.1;
    %1047 = @func_2810() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %1048 = %1047.1;
    %1049 = cast(%1048, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
    %1050 = shape_of(%1046, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1051 = cast(%1046, dtype="bool") /* ty=Tensor[(2475, 1), bool] */;
    %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1053 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1054 = %1043.0;
    %1055 = %1044.0;
    %1056 = greater_equal(%1051, %1052) /* ty=Tensor[(2475, ?), bool] */;
    %1057 = %1053.0;
    (%1054, %1055, %1056, %1057)
  };
  %1058() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_5818() -> (Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) {
  @func_5816() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) */
}

def @func_8555() -> (Tensor[(15, 11, 15), float64],) {
  %1061 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %1059 = @func_6953() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1060 = %1059.0;
    (%1060,)
  };
  %1061() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_11949(%var_11932: Tensor[(4, 6, 6), float64]) -> (Tensor[(4, 6, 6), float64], Tensor[(11, 4, 6), uint64], Tensor[(264), uint64]) {
  %1062 = cast(%var_11932, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %1063 = log(%1062) /* ty=Tensor[(4, 6, 6), float64] */;
  %1064 = cast(%var_11932, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1066 = cast(%1063, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1068 = cast(meta[relay.Constant][23] /* ty=Tensor[(264), uint64] */, dtype="uint64") /* ty=Tensor[(264), uint64] */;
  %1069 = cast(meta[relay.Constant][23] /* ty=Tensor[(264), uint64] */, dtype="uint64") /* ty=Tensor[(264), uint64] */;
  %1070 = reshape(%1068, newshape=[11, 4, 6]) /* ty=Tensor[(11, 4, 6), uint64] */;
  %1071 = reshape(%1069, newshape=[11, 4, 6]) /* ty=Tensor[(11, 4, 6), uint64] */;
  %1072 = @func_10646(%1070, %1071) /* ty=(Tensor[(11, 4, 6), uint64],) */;
  %1073 = maximum(%1066, %1067) /* ty=Tensor[(4, 6, 6), float64] */;
  %1074 = %1072.0;
  (%1073, %1074, meta[relay.Constant][23] /* ty=Tensor[(264), uint64] */)
}

def @func_15232() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8]) {
  %1077 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8]) {
    %1075 = @func_12312() /* ty=Tensor[(15, 11, 15), float64] */;
    %1076 = @func_10423() /* ty=Tensor[(15, 11, 15), uint8] */;
    (%1075, %1076)
  };
  %1077() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8]) */
}

def @func_6733(%var_6731: Tensor[(16, 1, 14), float64]) -> Tensor[(16, 1, 14), float64] {
  @func_6730(%var_6731) /* ty=Tensor[(16, 1, 14), float64] */
}

def @func_7415() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1081 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
    %1078 = @func_6044() /* ty=(Tensor[(15, 11, 15), bool],) */;
    %1079 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
    %1080 = %1078.0;
    (%1079, %1080)
  };
  %1081() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_3483() -> (Tensor[(15, 11, 15), float64],) {
  %1083 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %1082 = @func_2181() /* ty=Tensor[(15, 11, 15), float64] */;
    (%1082,)
  };
  %1083() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_1822() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1084 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
  %1085 = cast(%1084, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1086 = cast(%1084, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1087 = reshape(%1085, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1088 = reshape(%1086, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1089 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1090 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %1091 = @func_20(%1087, %1088) /* ty=Tensor[(15, 11, 15), bool] */;
  %1092 = %1089.0;
  %1093 = %1090.0;
  (%1084, %1091, %1092, %1093)
}

def @func_10720() -> (Tensor[(15, 11, 15), bool],) {
  %1094 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1095 = %1094.3;
  (%1095,)
}

def @func_540() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_6547() -> Tensor[(15, 11, 15), bool] {
  %1096 = fn () -> Tensor[(15, 11, 15), bool] {
    @func_5907() /* ty=Tensor[(15, 11, 15), bool] */
  };
  %1096() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_7303() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_11309() -> Tensor[(15, 11, 15), bool] {
  %1097 = @func_7826() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1097.0
}

def @func_3100() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  @func_3098() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */
}

def @func_4955() -> (Tensor[(15, 11, 15), bool], Tensor[(2475, ?), bool]) {
  %1102 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(2475, ?), bool]) {
    %1098 = @func_3054() /* ty=(Tensor[(15, 11, 15), bool],) */;
    %1099 = @func_3782() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float32], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), float64]) */;
    %1100 = %1098.0;
    %1101 = %1099.2;
    (%1100, %1101)
  };
  %1102() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, ?), bool]) */
}

def @func_5146() -> Tensor[(15, 11, 15), float64] {
  @func_5144() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_12136() -> (Tensor[(15, 11, 15), int64],) {
  %1105 = fn () -> (Tensor[(15, 11, 15), int64],) {
    %1103 = @func_7502() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
    %1104 = %1103.1;
    (%1104,)
  };
  %1105() /* ty=(Tensor[(15, 11, 15), int64],) */
}

def @func_11378() -> (Tensor[(15, 11, 15), int64],) {
  %1106 = @func_10314() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float32]) */;
  %1107 = %1106.0;
  (%1107,)
}

def @func_6805(%var_6803: Tensor[(12, 14, 5), int32]) -> Tensor[(12, 14, 5), int32] {
  @func_6802(%var_6803) /* ty=Tensor[(12, 14, 5), int32] */
}

def @func_11139(%var_11121: Tensor[(8, 5, 6), int64], %var_11122: Tensor[(8, 5, 6), int64]) -> (Tensor[(8, 5, 6), bool], Tensor[(15, 11, 15), bool]) {
  %1108 = cast(%var_11122, dtype="int64") /* ty=Tensor[(8, 5, 6), int64] */;
  %1109 = shape_of(%var_11121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1110 = cast(%var_11121, dtype="int64") /* ty=Tensor[(8, 5, 6), int64] */;
  %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1112 = bitwise_and(%1110, %1111) /* ty=Tensor[(8, 5, 6), int64] */;
  %1113 = cast(%var_11121, dtype="bool") /* ty=Tensor[(8, 5, 6), bool] */;
  %1114 = shape_of(%1112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1115 = cast(%1112, dtype="bool") /* ty=Tensor[(8, 5, 6), bool] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1117 = @func_5816() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool]) */;
  %1118 = logical_and(%1115, %1116) /* ty=Tensor[(8, 5, 6), bool] */;
  %1119 = %1117.1;
  (%1118, %1119)
}

def @func_6226() -> (Tensor[(15, 11, 15), bool], Tensor[(273), float32]) {
  %1125 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(273), float32]) {
    %1120 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
    %1121 = %1120.2;
    %1122 = cast(%1121, dtype="float32") /* ty=Tensor[(273), float32] */;
    %1123 = @func_1755() /* ty=Tensor[(15, 11, 15), bool] */;
    %1124 = atanh(%1122) /* ty=Tensor[(273), float32] */;
    (%1123, %1124)
  };
  %1125() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(273), float32]) */
}

def @func_5054() -> Tensor[(15, 11, 15), float64] {
  %1126 = fn () -> Tensor[(15, 11, 15), float64] {
    @func_1369() /* ty=Tensor[(15, 11, 15), float64] */
  };
  %1126() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_6279() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  %1127 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1128 = @func_2354() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
  %1129 = @func_4160() /* ty=Tensor[(15, 11, 15), float64] */;
  %1130 = %1127.0;
  %1131 = %1128.1;
  (%1129, %1130, %1131)
}

def @func_4910(%var_4909: Tensor[(224), float64]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(4, 7, 8), int32]) {
  %1148 = fn (%var_4893: Tensor[(224), float64]) -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(4, 7, 8), int32]) {
    %1132 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %1133 = @func_3715() /* ty=(Tensor[(15, 11, 15), int64],) */;
    %1134 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %1135 = cast(%var_4893, dtype="float64") /* ty=Tensor[(224), float64] */;
    %1136 = reshape(%1135, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), float64] */;
    %1137 = @func_2159(%1136) /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(4, 7, 8), uint16], Tensor[(4, 7, 8), float32]) */;
    %1138 = %1137.2;
    %1139 = cast(%var_4893, dtype="int32") /* ty=Tensor[(224), int32] */;
    %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1141 = cast(%1138, dtype="int32") /* ty=Tensor[(4, 7, 8), int32] */;
    %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1143 = %1132.0;
    %1144 = @func_2310() /* ty=Tensor[(15, 11, 15), bool] */;
    %1145 = %1133.0;
    %1146 = %1134.3;
    %1147 = bitwise_and(%1141, %1142) /* ty=Tensor[(4, 7, 8), int32] */;
    (%1143, %1144, %1145, %1146, %1147)
  };
  %1148(%var_4909) /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(4, 7, 8), int32]) */
}

def @func_6191() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int8]) {
  @func_6189() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int8]) */
}

def @func_11970() -> Tensor[(15, 11, 15), float64] {
  %1150 = fn () -> Tensor[(15, 11, 15), float64] {
    %1149 = @func_9158() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1149.0
  };
  %1150() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_538() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) {
  %1151 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1152 = %1151.0;
  %1153 = cast(%1152, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %1154 = cast(%1152, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1155 = cast(%1152, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1156 = reshape(%1154, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1157 = reshape(%1155, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1158 = cast(%1152, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1159 = reshape(%1158, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %1160 = @func_405(%1159) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %1161 = log(%1153) /* ty=Tensor[(15, 11, 15), float64] */;
  %1162 = cast(%1161, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1163 = reshape(%1162, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), bool] */;
  %1164 = @func_405(%1163) /* ty=(Tensor[(15, 11, 15), int64],) */;
  %1165 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1166 = cast(%1152, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1167 = @func_20(%1156, %1157) /* ty=Tensor[(15, 11, 15), bool] */;
  %1168 = cast(%1167, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1169 = reshape(%1166, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1170 = reshape(%1168, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1171 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1172 = %1171.2;
  %1173 = cast(%1172, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1174 = %1160.0;
  %1175 = cast(%1174, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1176 = reshape(%1173, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1177 = reshape(%1175, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1178 = cast(%1152, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1179 = cast(%1172, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1180 = reshape(%1178, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1181 = reshape(%1179, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1182 = cast(%1152, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1183 = %1165.3;
  %1184 = cast(%1183, dtype="uint32") /* ty=Tensor[(15, 11, 15), uint32] */;
  %1185 = reshape(%1182, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1186 = reshape(%1184, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), uint32] */;
  %1187 = %1164.0;
  %1188 = @func_20(%1169, %1170) /* ty=Tensor[(15, 11, 15), bool] */;
  %1189 = @func_20(%1176, %1177) /* ty=Tensor[(15, 11, 15), bool] */;
  %1190 = @func_20(%1180, %1181) /* ty=Tensor[(15, 11, 15), bool] */;
  %1191 = @func_20(%1185, %1186) /* ty=Tensor[(15, 11, 15), bool] */;
  (%1161, %1167, %1174, %1187, %1183, %1188, %1172, %1189, %1190, %1191)
}

def @func_7739() -> (Tensor[(15, 11, 15), float64],) {
  %1193 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %1192 = @func_6849() /* ty=Tensor[(15, 11, 15), float64] */;
    (%1192,)
  };
  %1193() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_9514(%var_9501: Tensor[(1, 5, 1), float64]) -> (Tensor[(16, 5, 11), int8],) {
  %1194 = cast(%var_9501, dtype="float64") /* ty=Tensor[(1, 5, 1), float64] */;
  %1195 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %1196 = floor_mod(%1194, %1195) /* ty=Tensor[(16, 5, 11), float64] */;
  %1197 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 5, 11), float64] */, dtype="int8") /* ty=Tensor[(16, 5, 11), int8] */;
  %1198 = shape_of(%1196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1199 = cast(%1196, dtype="int8") /* ty=Tensor[(16, 5, 11), int8] */;
  %1200 = dyn.reshape(%1197, %1198, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1201 = right_shift(%1199, %1200) /* ty=Tensor[(16, 5, 11), int8] */;
  (%1201,)
}

def @func_14362(%var_14361: Tensor[(11, 5, 13), float32]) -> (Tensor[(11, 5, 13), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1213 = fn (%var_14329: Tensor[(11, 5, 13), float32]) -> (Tensor[(11, 5, 13), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %1202 = cast(%var_14329, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
    %1203 = asin(%1202) /* ty=Tensor[(11, 5, 13), float32] */;
    %1204 = cast(%1203, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
    %1205 = shape_of(%var_14329, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1206 = cast(%var_14329, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
    %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1208 = @func_7543() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1209 = @func_1424() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1210 = less(%1206, %1207) /* ty=Tensor[(11, 5, 13), bool] */;
    %1211 = %1208.0;
    %1212 = %1209.0;
    (%1210, %1211, %1212)
  };
  %1213(%var_14361) /* ty=(Tensor[(11, 5, 13), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_7103() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_7101() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_8403() -> (Tensor[(15, 11, 15), float32],) {
  %1216 = fn () -> (Tensor[(15, 11, 15), float32],) {
    %1214 = @func_5323() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %1215 = %1214.0;
    (%1215,)
  };
  %1216() /* ty=(Tensor[(15, 11, 15), float32],) */
}

def @func_10722() -> (Tensor[(15, 11, 15), bool],) {
  @func_10720() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_5045() -> (Tensor[(15, 11, 15), bool],) {
  @func_5043() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_7807() -> (Tensor[(15, 11, 15), bool],) {
  @func_7805() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_8745() -> Tensor[(15, 11, 15), float64] {
  %1217 = fn () -> Tensor[(15, 11, 15), float64] {
    @func_3442() /* ty=Tensor[(15, 11, 15), float64] */
  };
  %1217() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_14164() -> (Tensor[(15, 11, 15), bool],) {
  %1218 = @func_7805() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %1219 = %1218.0;
  (%1219,)
}

def @func_20(%var_12: Tensor[(15, 11, 15), uint32], %var_13: Tensor[(15, 11, 15), uint32]) -> Tensor[(15, 11, 15), bool] {
  %1220 = cast(%var_13, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1221 = shape_of(%var_12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1222 = cast(%var_12, dtype="bool") /* ty=Tensor[(15, 11, 15), bool] */;
  %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1222, %1223) /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_1124() -> (Tensor[(15, 11, 15), float64],) {
  %1224 = @func_538() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1225 = %1224.0;
  (%1225,)
}

def @func_10795() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) {
  @func_10793() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) */
}

def @func_13636() -> Tensor[(15, 11, 15), int64] {
  %1227 = fn () -> Tensor[(15, 11, 15), int64] {
    %1226 = @func_7502() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
    %1226.1
  };
  %1227() /* ty=Tensor[(15, 11, 15), int64] */
}

def @func_12893(%var_12891: Tensor[(8, 14, 16), float64]) -> (Tensor[(8, 14, 16), float32], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(8, 14, 16), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) {
  @func_12890(%var_12891) /* ty=(Tensor[(8, 14, 16), float32], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(8, 14, 16), float64], Tensor[(13, 15, 12), float64], Tensor[(2340), uint32]) */
}

def @func_3442() -> Tensor[(15, 11, 15), float64] {
  @func_1170() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_6730(%var_6723: Tensor[(16, 1, 14), float64]) -> Tensor[(16, 1, 14), float64] {
  %1228 = cast(%var_6723, dtype="float64") /* ty=Tensor[(16, 1, 14), float64] */;
  sqrt(%1228) /* ty=Tensor[(16, 1, 14), float64] */
}

def @func_8639() -> (Tensor[(15, 11, 15), float64],) {
  %1231 = fn () -> (Tensor[(15, 11, 15), float64],) {
    %1229 = @func_6604() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %1230 = %1229.1;
    (%1230,)
  };
  %1231() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_15409(%var_15408: Tensor[(6, 3, 3), float64]) -> Tensor[(6, 3, 3), float32] {
  %1235 = fn (%var_15395: Tensor[(6, 3, 3), float64]) -> Tensor[(6, 3, 3), float32] {
    %1232 = cast(%var_15395, dtype="float64") /* ty=Tensor[(6, 3, 3), float64] */;
    %1233 = sqrt(%1232) /* ty=Tensor[(6, 3, 3), float64] */;
    %1234 = cast(%1233, dtype="float32") /* ty=Tensor[(6, 3, 3), float32] */;
    tan(%1234) /* ty=Tensor[(6, 3, 3), float32] */
  };
  %1235(%var_15408) /* ty=Tensor[(6, 3, 3), float32] */
}

def @func_8840() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), bool]) {
  %1245 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), bool]) {
    %1236 = @func_4266() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %1237 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %1238 = @func_3098() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
    %1239 = @func_4954() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, ?), bool]) */;
    %1240 = %1236.0;
    %1241 = %1237.3;
    %1242 = %1238.1;
    %1243 = %1239.1;
    %1244 = @func_6546() /* ty=Tensor[(15, 11, 15), bool] */;
    (%1240, %1241, %1242, %1243, %1244)
  };
  %1245() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(2475, ?), bool], Tensor[(15, 11, 15), bool]) */
}

def @func_11952(%var_11950: Tensor[(4, 6, 6), float64]) -> (Tensor[(4, 6, 6), float64], Tensor[(11, 4, 6), uint64], Tensor[(264), uint64]) {
  @func_11949(%var_11950) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(11, 4, 6), uint64], Tensor[(264), uint64]) */
}

def @func_12785() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_12783() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_8234() -> (Tensor[(2475, 1), uint32],) {
  %1248 = fn () -> (Tensor[(2475, 1), uint32],) {
    %1246 = @func_5989() /* ty=(Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), float64]) */;
    %1247 = %1246.0;
    (%1247,)
  };
  %1248() /* ty=(Tensor[(2475, 1), uint32],) */
}

def @func_14501() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), uint8]) {
  %1257 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), uint8]) {
    %1249 = @func_6225() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(273), float32]) */;
    %1250 = %1249.0;
    %1251 = cast(%1250, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %1252 = reshape(%1251, newshape=[15, 11, 15]) /* ty=Tensor[(15, 11, 15), float64] */;
    %1253 = @func_10519() /* ty=(Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), bool]) */;
    %1254 = @func_1695(%1252) /* ty=Tensor[(15, 11, 15), int8] */;
    %1255 = %1253.0;
    %1256 = @func_6874() /* ty=Tensor[(15, 11, 15), uint8] */;
    (%1250, %1254, %1255, %1256)
  };
  %1257() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), uint8]) */
}

def @func_11038(%var_11036: Tensor[(7, 14, 14), int8], %var_11037: Tensor[(7, 14, 14), int8]) -> Tensor[(7, 14, 14), int8] {
  %1262 = fn (%var_11027: Tensor[(7, 14, 14), int8], %var_11028: Tensor[(7, 14, 14), int8]) -> Tensor[(7, 14, 14), int8] {
    %1258 = cast(%var_11028, dtype="int8") /* ty=Tensor[(7, 14, 14), int8] */;
    %1259 = shape_of(%var_11027, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1260 = cast(%var_11027, dtype="int8") /* ty=Tensor[(7, 14, 14), int8] */;
    %1261 = dyn.reshape(%1258, %1259, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    multiply(%1260, %1261) /* ty=Tensor[(7, 14, 14), int8] */
  };
  %1262(%var_11036, %var_11037) /* ty=Tensor[(7, 14, 14), int8] */
}

def @func_3202() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  @func_3200() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_12239() -> Tensor[(15, 11, 15), bool] {
  @func_12237() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_1992() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1268 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
    %1263 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %1264 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1265 = %1263.1;
    %1266 = %1264.0;
    %1267 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
    (%1265, %1266, %1267)
  };
  %1268() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_5624() -> (Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) {
  @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */
}

def @func_3257() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %1269 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %1270 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %1271 = %1269.3;
  %1272 = %1270.0;
  %1273 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
  (%1271, %1272, %1273)
}

def @func_7805() -> (Tensor[(15, 11, 15), bool],) {
  %1274 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
  %1275 = %1274.0;
  (%1275,)
}

def @func_10793() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float32]) {
  %1276 = @func_6639() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %1277 = @func_6717() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
  %1278 = @func_8402() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %1279 = %1276.0;
  %1280 = %1277.0;
  %1281 = %1278.0;
  (%1279, %1280, %1281)
}

def @func_9815() -> (Tensor[(15, 11, 15), bool],) {
  %1284 = fn () -> (Tensor[(15, 11, 15), bool],) {
    %1282 = @func_6717() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */;
    %1283 = %1282.0;
    (%1283,)
  };
  %1284() /* ty=(Tensor[(15, 11, 15), bool],) */
}

def @func_8172() -> Tensor[(15, 11, 15), bool] {
  %1286 = fn () -> Tensor[(15, 11, 15), bool] {
    %1285 = @func_7301() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %1285.0
  };
  %1286() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_2312() -> Tensor[(15, 11, 15), bool] {
  @func_2310() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_3014() -> Tensor[(15, 11, 15), float64] {
  %1288 = fn () -> Tensor[(15, 11, 15), float64] {
    %1287 = @func_1275() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
    %1287.0
  };
  %1288() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_12473() -> Tensor[(15, 11, 15), float64] {
  @func_12471() /* ty=Tensor[(15, 11, 15), float64] */
}

def @func_15191() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8]) {
  @func_15189() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), uint8]) */
}

def @func_7502() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) {
  %1289 = @func_1822() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %1290 = @func_4338() /* ty=(Tensor[(15, 11, 15), int64],) */;
  %1291 = %1289.1;
  %1292 = %1290.0;
  (%1291, %1292)
}

def @func_14054() -> Tensor[(15, 11, 15), float32] {
  %1293 = @func_2705() /* ty=(Tensor[(15, 11, 15), float32],) */;
  %1293.0
}

def @func_3839(%var_3838: Tensor[(5, 5, 11), int32]) -> (Tensor[(5, 5, 11), int32],) {
  %1297 = fn (%var_3829: Tensor[(5, 5, 11), int32]) -> (Tensor[(5, 5, 11), int32],) {
    %1294 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %1295 = cast(%var_3829, dtype="int32") /* ty=Tensor[(5, 5, 11), int32] */;
    %1296 = right_shift(%1294, %1295) /* ty=Tensor[(5, 5, 11), int32] */;
    (%1296,)
  };
  %1297(%var_3838) /* ty=(Tensor[(5, 5, 11), int32],) */
}

def @func_7101() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1298 = @func_1991() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */;
  %1299 = %1298.1;
  %1300 = @func_4160() /* ty=Tensor[(15, 11, 15), float64] */;
  (%1299, %1300)
}

def @func_407(%var_406: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), int64],) {
  %1308 = fn (%var_391: Tensor[(15, 11, 15), bool]) -> (Tensor[(15, 11, 15), int64],) {
    %1301 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %1302 = %1301.3;
    %1303 = cast(%var_391, dtype="int64") /* ty=Tensor[(15, 11, 15), int64] */;
    %1304 = shape_of(%1302, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1305 = cast(%1302, dtype="int64") /* ty=Tensor[(15, 11, 15), int64] */;
    %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1307 = left_shift(%1305, %1306) /* ty=Tensor[(15, 11, 15), int64] */;
    (%1307,)
  };
  %1308(%var_406) /* ty=(Tensor[(15, 11, 15), int64],) */
}

def @func_11244() -> (Tensor[(15, 11, 15), float64],) {
  @func_11242() /* ty=(Tensor[(15, 11, 15), float64],) */
}

def @func_6281() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) {
  @func_6279() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), int64]) */
}

def @func_13542() -> (Tensor[(15, 11, 15), bool], Tensor[(224), float64]) {
  %1312 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(224), float64]) {
    %1309 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
    %1310 = @func_8086() /* ty=Tensor[(15, 11, 15), bool] */;
    %1311 = %1309.1;
    (%1310, %1311)
  };
  %1312() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(224), float64]) */
}

def @func_13444() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1316 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %1313 = @func_8554() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1314 = %1313.0;
    %1315 = @func_5436() /* ty=Tensor[(15, 11, 15), float64] */;
    (%1314, %1315)
  };
  %1316() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_9142() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1325 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %1317 = @func_859() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64]) */;
    %1318 = @func_8402() /* ty=(Tensor[(15, 11, 15), float32],) */;
    %1319 = @func_6589() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %1320 = %1317.0;
    %1321 = @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */;
    %1322 = %1318.0;
    %1323 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
    %1324 = %1319.1;
    (%1320, %1321, %1322, %1323, %1324)
  };
  %1325() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float32], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_8693() -> Tensor[(15, 11, 15), uint8] {
  @func_8691() /* ty=Tensor[(15, 11, 15), uint8] */
}

def @func_7235() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1326 = @func_6589() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1327 = @func_1000() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), uint8], Tensor[(13, 13, 10), float32]) */;
  %1328 = %1326.1;
  %1329 = %1327.0;
  (%1328, %1329)
}

def @func_5246() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1337 = fn () -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
    %1330 = @func_4399() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %1331 = @func_2646() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %1332 = @func_2450() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
    %1333 = %1330.3;
    %1334 = %1331.2;
    %1335 = %1332.0;
    %1336 = @func_1321() /* ty=Tensor[(15, 11, 15), bool] */;
    (%1333, %1334, %1335, %1336)
  };
  %1337() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) */
}

def @func_8922() -> Tensor[(15, 11, 15), bool] {
  %1339 = fn () -> Tensor[(15, 11, 15), bool] {
    %1338 = @func_2682() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool]) */;
    %1338.1
  };
  %1339() /* ty=Tensor[(15, 11, 15), bool] */
}

def @func_1275() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool]) {
  %1340 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1341 = @func_367() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(2475, 1), uint32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(13, 13, 10), float32], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1342 = %1340.0;
  %1343 = %1341.5;
  (%1342, %1343)
}

def @func_2221() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1347 = fn () -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
    %1344 = @func_1124() /* ty=(Tensor[(15, 11, 15), float64],) */;
    %1345 = @func_1170() /* ty=Tensor[(15, 11, 15), float64] */;
    %1346 = %1344.0;
    (%1345, %1346)
  };
  %1347() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) */
}

def @func_11524() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64]) {
  %1348 = @func_3257() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */;
  %1349 = %1348.0;
  %1350 = @func_3442() /* ty=Tensor[(15, 11, 15), float64] */;
  (%1349, %1350)
}

def @func_11026() -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
  %1357 = fn () -> (Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) {
    %1351 = @func_6498() /* ty=(Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), float64]) */;
    %1352 = @func_10423() /* ty=Tensor[(15, 11, 15), uint8] */;
    %1353 = @func_5053() /* ty=Tensor[(15, 11, 15), float64] */;
    %1354 = @func_1369() /* ty=Tensor[(15, 11, 15), float64] */;
    %1355 = @func_6458() /* ty=Tensor[(15, 11, 15), bool] */;
    %1356 = %1351.1;
    (%1352, %1353, %1354, %1355, %1356)
  };
  %1357() /* ty=(Tensor[(15, 11, 15), uint8], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), float64]) */
}

def @func_3697() -> (Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) {
  @func_3695() /* ty=(Tensor[(15, 11, 15), bool], Tensor[(15, 11, 15), int64], Tensor[(15, 11, 15), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */
}

def @func_11790() -> Tensor[(273), float64] {
  %1359 = fn () -> Tensor[(273), float64] {
    %1358 = @func_5622() /* ty=(Tensor[(15, 11, 15), float64], Tensor[(224), float64], Tensor[(273), float64], Tensor[(2475), uint32]) */;
    %1358.2
  };
  %1359() /* ty=Tensor[(273), float64] */
}

def @func_3054() -> (Tensor[(15, 11, 15), bool],) {
  %1360 = @func_1158() /* ty=Tensor[(15, 11, 15), bool] */;
  (%1360,)
}

def @func_4619() -> (Tensor[(15, 11, 15), float64], Tensor[(15, 11, 15), float64]) {
  %1361 = @func_1448() /* ty=(Tensor[(15, 11, 15), float64],) */;
  %1362 = @func_3442() /* ty=Tensor[(15, 11, 15), float64] */;
  %1363 = %1361.0;
  (%1362, %1363)
}

def @func_14943() -> Tensor[(15, 11, 15), bool] {
  %1364 = @func_10708() /* ty=(Tensor[(15, 11, 15), bool],) */;
  %1364.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen492/build/output.py:4955: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen492/build/output.py", line 4960, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(70) tvmgen_default_fused_cos_kernel0(float* __restrict__ T_cos, float* __restrict__ placeholder) {
  T_cos[(((int)threadIdx.x))] = __cosf(placeholder[(((int)threadIdx.x))]);
}

extern "C" __global__ void __launch_bounds__(70) tvmgen_default_fused_sigmoid_kernel0(float* __restrict__ T_sigmoid, float* __restrict__ placeholder) {
  T_sigmoid[(((int)threadIdx.x))] = (1.000000e+00f / (1.000000e+00f + __expf((0.000000e+00f - placeholder[(((int)threadIdx.x))]))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


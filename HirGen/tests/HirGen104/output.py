import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_351 = relay.var("var_351", dtype = "float32", shape = (12, 14, 7))#candidate|351|(12, 14, 7)|var|float32
var_352 = relay.var("var_352", dtype = "float32", shape = (12, 14, 7))#candidate|352|(12, 14, 7)|var|float32
bop_353 = relay.divide(var_351.astype('float32'), relay.reshape(var_352.astype('float32'), relay.shape_of(var_351))) # shape=(12, 14, 7)
output = relay.Tuple([bop_353,])
output2 = relay.Tuple([bop_353,])
func_364 = relay.Function([var_351,var_352,], output)
mod['func_364'] = func_364
mod = relay.transform.InferType()(mod)
mutated_mod['func_364'] = func_364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_364_call = mutated_mod.get_global_var('func_364')
var_366 = relay.var("var_366", dtype = "float32", shape = (12, 14, 7))#candidate|366|(12, 14, 7)|var|float32
var_367 = relay.var("var_367", dtype = "float32", shape = (12, 14, 7))#candidate|367|(12, 14, 7)|var|float32
call_365 = func_364_call(var_366,var_367,)
output = call_365
func_368 = relay.Function([var_366,var_367,], output)
mutated_mod['func_368'] = func_368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_410 = relay.var("var_410", dtype = "uint32", shape = (10, 9, 8))#candidate|410|(10, 9, 8)|var|uint32
var_411 = relay.var("var_411", dtype = "uint32", shape = (10, 9, 8))#candidate|411|(10, 9, 8)|var|uint32
bop_412 = relay.less_equal(var_410.astype('bool'), relay.reshape(var_411.astype('bool'), relay.shape_of(var_410))) # shape=(10, 9, 8)
output = relay.Tuple([bop_412,])
output2 = relay.Tuple([bop_412,])
func_421 = relay.Function([var_410,var_411,], output)
mod['func_421'] = func_421
mod = relay.transform.InferType()(mod)
var_422 = relay.var("var_422", dtype = "uint32", shape = (10, 9, 8))#candidate|422|(10, 9, 8)|var|uint32
var_423 = relay.var("var_423", dtype = "uint32", shape = (10, 9, 8))#candidate|423|(10, 9, 8)|var|uint32
output = func_421(var_422,var_423,)
func_424 = relay.Function([var_422,var_423,], output)
mutated_mod['func_424'] = func_424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_452 = relay.var("var_452", dtype = "uint8", shape = (6, 15, 12))#candidate|452|(6, 15, 12)|var|uint8
const_453 = relay.const([[[-9,9,7,8,-2,-6,7,-9,10,8,-9,2],[-5,-8,-3,10,-5,3,-2,1,7,-7,3,-7],[-8,-6,-3,-10,3,9,-6,9,7,3,-2,3],[6,-4,-8,2,5,4,6,-8,-1,6,-5,-1],[8,-4,-10,10,7,-7,-4,-10,6,-6,-9,3],[3,-9,8,-3,-6,7,-3,4,-10,6,9,-10],[1,9,-2,2,-6,4,-5,-10,-5,8,1,-10],[4,-4,2,-10,-10,5,-5,-7,-1,5,-1,6],[-2,-6,8,-4,1,-5,-2,8,-6,-5,-3,2],[-5,-10,1,-4,2,-8,3,-5,9,-9,-7,-4],[1,5,-4,-8,3,-9,5,9,-1,-2,-8,1],[6,-10,-7,9,-8,10,1,-4,5,1,5,9],[-7,-2,-7,4,-3,8,3,-7,-2,-4,4,-7],[9,1,10,-10,3,3,5,5,6,-7,3,-1],[-1,-7,-10,6,-4,5,-8,-2,7,9,5,-7]],[[9,1,7,4,6,1,-6,9,-3,-4,9,2],[-3,7,6,10,-9,-5,4,2,-3,-8,-1,10],[1,-7,-10,-4,1,-3,-7,-10,6,1,-7,2],[10,-10,6,7,2,8,2,-6,-5,-9,4,7],[7,1,-2,3,-2,-3,10,8,3,-7,7,-9],[4,3,7,7,-9,-7,1,3,4,-2,7,10],[5,8,-1,-4,-4,3,8,-5,-10,8,-4,-5],[-10,-5,-8,-8,2,-4,-2,8,-5,7,-4,-8],[7,-8,-10,1,1,-6,1,-1,-9,-6,3,-9],[8,10,10,-8,8,10,-8,-8,7,7,10,-2],[3,2,-3,-2,8,-5,-4,5,-9,-9,-6,-6],[-1,-2,3,1,-2,-9,3,6,-7,-2,-3,10],[4,1,-6,-4,1,9,-9,-7,-3,-6,2,-10],[4,-10,8,3,1,3,-10,-6,4,5,6,-4],[2,5,-5,-5,-6,-10,-4,10,6,5,-10,-8]],[[-8,8,7,-5,4,-3,5,-10,2,9,10,3],[3,-1,-3,-7,-2,-7,9,-7,1,1,-9,-1],[10,9,9,7,4,-5,7,-9,9,9,9,-10],[-8,-8,-4,8,-1,6,-10,4,-1,10,2,-10],[-5,-8,4,5,-3,-1,-6,-2,7,-8,1,1],[-10,-1,-2,5,1,-2,-3,9,1,-2,-8,-3],[2,-3,5,6,-7,-10,-9,6,10,5,6,9],[1,-4,6,5,3,1,-2,-3,-4,-9,10,3],[5,3,-9,9,-4,2,-4,-5,4,3,3,-8],[3,-9,5,4,9,1,10,9,-5,-3,7,4],[-6,-1,6,-5,7,3,8,-9,-5,-5,10,-10],[-7,4,2,7,-8,6,-6,-5,7,-2,-5,1],[3,8,4,-8,2,-4,1,-10,-10,5,7,10],[7,-8,4,6,-9,-1,-4,-1,5,9,-9,-7],[5,-6,9,6,-7,-10,-6,-10,-3,-8,-4,-1]],[[6,-4,-1,5,-10,-8,-6,-9,-9,-6,7,3],[-7,-7,2,9,-10,-3,4,6,-9,-7,9,8],[4,6,-9,3,10,8,-10,9,8,2,2,-7],[4,-5,-7,2,8,5,7,-3,8,8,-8,9],[-9,-9,-10,-1,8,7,9,-9,9,4,1,-6],[1,-6,-1,7,7,10,-10,-2,-6,-4,-10,4],[6,-9,7,6,9,9,9,9,-9,3,-1,10],[6,4,6,9,-8,-8,6,-5,8,-5,7,2],[5,7,-2,3,10,4,-7,-9,3,-8,-3,-2],[-6,-7,4,-10,7,-5,2,-7,-7,-10,5,-7],[-7,5,-9,-9,7,7,5,10,-5,-1,5,1],[8,-8,1,1,-4,7,5,-8,4,-2,3,3],[7,4,1,-5,7,3,-9,-5,1,6,-10,6],[10,-4,-8,-8,2,-6,-7,3,-4,-1,1,8],[10,7,10,5,-9,-2,8,3,-4,-5,2,7]],[[6,-1,-6,10,4,-7,9,4,-4,7,6,4],[-1,-1,10,-8,-5,-5,1,8,-3,2,10,-1],[2,-6,10,-8,-10,-3,-8,7,4,-6,-7,10],[3,1,-10,6,2,2,-2,2,-1,2,-10,3],[-9,8,-5,-6,-2,10,1,4,9,-5,6,3],[-6,7,4,-9,10,10,6,4,5,10,3,9],[-9,3,4,5,2,6,-1,-8,-2,8,4,-6],[9,7,1,4,-2,5,4,8,1,2,8,-5],[-10,-8,7,5,9,8,8,10,-10,6,7,1],[-7,-2,-5,-7,9,9,-9,-2,6,10,1,-4],[5,4,-5,9,-8,-10,7,-9,-3,2,3,-2],[-1,3,-2,-2,8,-8,3,-6,10,5,3,4],[10,-10,10,-4,-4,-5,-5,-3,5,7,-3,-8],[-8,2,6,-7,-2,1,-9,-4,-5,1,-8,-4],[-8,-2,5,3,4,7,1,-6,1,6,-4,6]],[[9,-9,2,3,-6,10,-6,7,10,10,7,6],[-3,1,5,9,5,-3,3,8,1,-5,4,-7],[-5,8,2,2,-8,-5,10,-9,3,-3,-9,10],[-10,-9,6,-9,-2,2,10,-9,7,-3,7,-4],[-5,-7,-10,4,-9,-4,-8,5,-9,2,-1,10],[-5,4,7,2,-7,-4,-5,6,-1,10,-3,-7],[-2,-2,2,-10,8,-10,-2,-7,-3,-5,-1,-6],[-1,-2,-3,-5,-2,9,-2,2,3,-5,6,5],[4,10,10,10,2,4,-2,2,9,-9,-8,-2],[-5,-7,8,-10,3,8,6,5,-9,-3,1,9],[7,-2,3,10,-1,-10,-1,3,-10,9,10,-4],[-4,-2,-4,-4,10,-10,8,-10,-6,-7,-1,-3],[3,9,-6,2,1,5,-6,-10,3,-1,7,1],[2,-2,-8,5,9,-3,-6,4,-1,-5,-8,-3],[-5,3,6,9,1,2,-8,-3,1,-1,2,-6]]], dtype = "uint8")#candidate|453|(6, 15, 12)|const|uint8
bop_454 = relay.logical_xor(var_452.astype('uint8'), relay.reshape(const_453.astype('uint8'), relay.shape_of(var_452))) # shape=(6, 15, 12)
output = relay.Tuple([bop_454,])
output2 = relay.Tuple([bop_454,])
func_459 = relay.Function([var_452,], output)
mod['func_459'] = func_459
mod = relay.transform.InferType()(mod)
mutated_mod['func_459'] = func_459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_460 = relay.var("var_460", dtype = "uint8", shape = (6, 15, 12))#candidate|460|(6, 15, 12)|var|uint8
func_459_call = mutated_mod.get_global_var('func_459')
call_461 = func_459_call(var_460)
output = call_461
func_462 = relay.Function([var_460], output)
mutated_mod['func_462'] = func_462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_878 = relay.var("var_878", dtype = "uint32", shape = (9, 7, 2))#candidate|878|(9, 7, 2)|var|uint32
var_879 = relay.var("var_879", dtype = "uint32", shape = (9, 7, 2))#candidate|879|(9, 7, 2)|var|uint32
bop_880 = relay.not_equal(var_878.astype('bool'), relay.reshape(var_879.astype('bool'), relay.shape_of(var_878))) # shape=(9, 7, 2)
uop_897 = relay.rsqrt(var_878.astype('float64')) # shape=(9, 7, 2)
var_899 = relay.var("var_899", dtype = "float64", shape = (9, 7, 2))#candidate|899|(9, 7, 2)|var|float64
bop_900 = relay.less_equal(uop_897.astype('bool'), relay.reshape(var_899.astype('bool'), relay.shape_of(uop_897))) # shape=(9, 7, 2)
output = relay.Tuple([bop_880,bop_900,])
output2 = relay.Tuple([bop_880,bop_900,])
func_904 = relay.Function([var_878,var_879,var_899,], output)
mod['func_904'] = func_904
mod = relay.transform.InferType()(mod)
var_905 = relay.var("var_905", dtype = "uint32", shape = (9, 7, 2))#candidate|905|(9, 7, 2)|var|uint32
var_906 = relay.var("var_906", dtype = "uint32", shape = (9, 7, 2))#candidate|906|(9, 7, 2)|var|uint32
var_907 = relay.var("var_907", dtype = "float64", shape = (9, 7, 2))#candidate|907|(9, 7, 2)|var|float64
output = func_904(var_905,var_906,var_907,)
func_908 = relay.Function([var_905,var_906,var_907,], output)
mutated_mod['func_908'] = func_908
mutated_mod = relay.transform.InferType()(mutated_mod)
var_940 = relay.var("var_940", dtype = "float64", shape = (5, 2, 11))#candidate|940|(5, 2, 11)|var|float64
uop_941 = relay.log2(var_940.astype('float64')) # shape=(5, 2, 11)
output = relay.Tuple([uop_941,])
output2 = relay.Tuple([uop_941,])
func_945 = relay.Function([var_940,], output)
mod['func_945'] = func_945
mod = relay.transform.InferType()(mod)
mutated_mod['func_945'] = func_945
mutated_mod = relay.transform.InferType()(mutated_mod)
var_946 = relay.var("var_946", dtype = "float64", shape = (5, 2, 11))#candidate|946|(5, 2, 11)|var|float64
func_945_call = mutated_mod.get_global_var('func_945')
call_947 = func_945_call(var_946)
output = call_947
func_948 = relay.Function([var_946], output)
mutated_mod['func_948'] = func_948
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1092 = relay.var("var_1092", dtype = "float32", shape = (10, 5, 7))#candidate|1092|(10, 5, 7)|var|float32
uop_1093 = relay.acosh(var_1092.astype('float32')) # shape=(10, 5, 7)
output = uop_1093
output2 = uop_1093
func_1095 = relay.Function([var_1092,], output)
mod['func_1095'] = func_1095
mod = relay.transform.InferType()(mod)
mutated_mod['func_1095'] = func_1095
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1096 = relay.var("var_1096", dtype = "float32", shape = (10, 5, 7))#candidate|1096|(10, 5, 7)|var|float32
func_1095_call = mutated_mod.get_global_var('func_1095')
call_1097 = func_1095_call(var_1096)
output = call_1097
func_1098 = relay.Function([var_1096], output)
mutated_mod['func_1098'] = func_1098
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1270 = relay.var("var_1270", dtype = "int32", shape = ())#candidate|1270|()|var|int32
var_1271 = relay.var("var_1271", dtype = "int32", shape = (12, 2, 11))#candidate|1271|(12, 2, 11)|var|int32
bop_1272 = relay.greater(var_1270.astype('bool'), var_1271.astype('bool')) # shape=(12, 2, 11)
func_459_call = mod.get_global_var('func_459')
func_462_call = mutated_mod.get_global_var('func_462')
var_1282 = relay.var("var_1282", dtype = "uint8", shape = (1080,))#candidate|1282|(1080,)|var|uint8
call_1281 = relay.TupleGetItem(func_459_call(relay.reshape(var_1282.astype('uint8'), [6, 15, 12])), 0)
call_1283 = relay.TupleGetItem(func_462_call(relay.reshape(var_1282.astype('uint8'), [6, 15, 12])), 0)
output = relay.Tuple([bop_1272,call_1281,var_1282,])
output2 = relay.Tuple([bop_1272,call_1283,var_1282,])
func_1292 = relay.Function([var_1270,var_1271,var_1282,], output)
mod['func_1292'] = func_1292
mod = relay.transform.InferType()(mod)
var_1293 = relay.var("var_1293", dtype = "int32", shape = ())#candidate|1293|()|var|int32
var_1294 = relay.var("var_1294", dtype = "int32", shape = (12, 2, 11))#candidate|1294|(12, 2, 11)|var|int32
var_1295 = relay.var("var_1295", dtype = "uint8", shape = (1080,))#candidate|1295|(1080,)|var|uint8
output = func_1292(var_1293,var_1294,var_1295,)
func_1296 = relay.Function([var_1293,var_1294,var_1295,], output)
mutated_mod['func_1296'] = func_1296
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1535 = relay.const([[[9,-5,8,-4,-2,-7,1,3,-5,10],[4,1,-8,-4,9,-4,5,-5,-7,9],[-6,-10,-8,-1,-1,-9,6,10,9,4],[-9,10,8,-8,6,6,4,9,10,-2],[-2,5,-1,3,2,-9,8,4,-5,-2],[-10,5,4,-3,-3,-5,-8,-4,-5,8],[-6,8,-8,-9,5,-6,-2,8,-2,-2],[7,-1,-8,-3,-1,2,-10,9,-3,3],[-2,6,7,-1,6,-5,1,-10,-10,-3],[6,8,8,-5,8,10,6,-7,9,-3],[3,7,-5,-4,2,8,5,-5,3,-3],[-10,4,-8,-9,9,1,2,-8,7,-2]],[[9,6,-5,-6,-10,1,3,-6,-6,-1],[8,9,-2,-7,-6,5,-10,-3,1,-5],[-10,3,-4,8,7,-5,1,-5,10,1],[4,3,-8,-2,8,2,-4,3,7,7],[1,6,-7,-5,6,3,4,5,4,3],[-5,-2,-1,6,-8,-1,-7,1,10,9],[1,-6,-9,9,8,-7,-6,-1,-6,6],[-2,-5,1,-10,-1,7,-2,7,3,5],[7,-6,3,-9,-4,6,-9,4,-6,-3],[5,7,4,-7,9,10,-7,8,-4,10],[-1,6,7,3,4,8,-7,-7,10,-10],[9,6,8,6,10,-10,2,2,5,3]],[[-3,-1,8,1,-3,7,-3,-5,-7,-3],[-7,-10,8,-10,-7,-6,-6,1,4,-1],[5,6,3,8,-4,-8,3,-2,10,-8],[7,-9,1,-6,-4,-2,9,6,1,3],[-7,6,7,-3,-10,-3,-4,-9,-2,10],[3,4,1,-5,8,-8,9,6,-2,2],[-9,8,-7,10,3,7,3,-10,-5,-7],[-3,9,10,7,-4,5,-5,-9,-1,6],[-1,2,6,6,-6,-6,9,2,-9,-1],[-9,-6,-1,-1,-4,-6,9,8,-9,7],[-9,-6,-8,-8,-7,-2,9,-5,3,-3],[-10,-3,-9,4,-7,-3,6,7,-8,-3]],[[-7,-3,2,-7,3,-5,10,-2,1,7],[9,-6,-9,-8,-9,-4,-7,3,7,6],[1,-5,-1,2,-4,-2,10,7,3,8],[10,10,-9,7,-4,-7,4,8,10,-9],[-10,7,-3,1,4,1,3,9,6,-9],[-9,-7,-10,-2,6,3,6,-6,-8,6],[8,6,-9,-5,-3,5,-3,-8,-9,1],[2,1,-8,7,-4,8,8,-5,-8,-2],[-9,4,-1,-4,1,-8,-3,-2,-4,7],[-10,1,-6,7,-9,7,-5,-9,-1,1],[-2,6,-5,-8,-7,-6,9,-7,6,-1],[2,-4,-8,7,9,3,4,9,-8,-8]],[[-2,-2,-6,8,-4,8,8,4,6,-5],[-9,6,-8,3,-2,10,7,-6,2,4],[2,3,3,-6,-9,4,1,-1,7,-6],[-5,4,2,-7,-6,2,3,10,1,7],[-8,9,-2,-8,-4,-7,-3,-3,3,-9],[10,-6,7,1,1,9,10,7,-8,-1],[1,1,9,1,1,8,5,4,-10,-9],[4,8,-8,6,-4,-8,4,-1,1,-4],[5,-6,8,2,9,-6,-1,-7,-3,-7],[-9,-2,-2,6,8,-10,2,3,9,7],[-9,1,9,-1,10,-9,-2,-3,-3,-10],[9,-6,-9,2,-6,-4,-3,-5,4,7]],[[3,-4,-5,9,-6,-1,-2,-7,-5,7],[-9,6,-7,-4,-6,-4,7,4,-4,1],[6,6,-10,7,3,7,-8,-4,6,5],[-9,3,-8,9,3,-6,4,5,7,1],[9,-2,3,-1,5,2,-6,9,3,-9],[-10,5,7,9,-3,5,-8,-8,-4,1],[4,1,-8,7,-10,8,-9,5,-3,1],[-5,-10,3,6,-9,-5,10,-5,10,-10],[6,2,10,-5,-2,-1,-3,1,-10,-3],[6,4,-6,4,10,-8,-9,6,-8,2],[-5,8,-5,4,-8,6,5,-9,8,-8],[-7,-7,-7,-6,1,-4,3,6,2,7]],[[7,3,-5,4,8,-2,-10,-1,-1,1],[-7,10,-8,-9,-6,-10,10,-6,8,8],[6,10,10,-3,10,-5,-3,-6,3,3],[2,4,-7,-6,-4,10,4,-6,-3,7],[4,-10,-7,8,-4,9,4,-9,-8,7],[-9,2,7,10,-6,3,7,7,-2,3],[-7,5,10,4,6,9,-8,-9,-6,7],[3,2,-5,-5,-5,4,-5,-3,2,-2],[-7,-4,-10,2,-3,10,8,8,-10,-10],[-5,6,5,4,7,8,5,-10,6,-2],[10,-6,3,-2,9,9,10,4,5,5],[-2,-7,-6,3,-9,-2,5,9,-4,-3]],[[5,-8,7,2,-2,5,1,-2,-9,10],[7,8,2,10,-10,-10,4,2,2,3],[-5,7,-2,-5,-1,10,-7,-10,8,6],[2,5,-5,-7,-2,-10,-1,-5,5,4],[4,-6,4,1,-9,-2,-2,6,5,-4],[-6,-6,-1,-9,-10,6,9,-7,9,7],[-5,-8,-7,6,-10,10,5,4,-6,4],[-6,-8,-2,7,4,-1,4,-8,6,4],[-4,-3,-10,-7,-9,-10,1,9,-4,-7],[10,-7,-7,-7,9,-10,-6,4,-9,-10],[-1,-1,-10,-8,-7,-3,2,3,-7,6],[-2,10,9,-3,4,5,6,8,8,-2]],[[-10,4,-7,5,9,-9,-6,-10,3,-1],[9,-2,4,2,-3,-9,-9,7,1,-9],[1,-5,7,4,-1,6,-3,-4,8,10],[-10,8,-3,-9,-7,7,6,-7,-9,4],[-5,9,-1,-6,-1,-4,-5,-4,5,3],[10,2,-3,-1,-9,2,5,4,6,-7],[-6,10,1,-10,-5,-10,6,-3,10,-3],[8,5,-9,-1,10,-2,9,8,5,-8],[-2,5,10,-6,3,1,7,5,6,-10],[6,-3,-5,-6,-10,1,3,-9,-8,-5],[-6,-10,-4,-8,-5,-7,2,5,-10,10],[-5,1,8,3,4,-5,-6,-1,4,-9]],[[10,1,5,-9,-8,4,-9,3,4,3],[4,8,7,-10,-1,-1,4,-2,5,-5],[-10,6,3,-7,5,-5,-10,-1,-2,-7],[10,3,7,5,5,-6,-9,6,-4,-9],[5,-10,-6,-3,1,-1,-7,5,8,-9],[-1,9,9,-4,-10,-2,8,1,2,-10],[3,4,-4,5,8,-4,-9,1,-10,-1],[-9,-5,-6,10,-10,2,2,5,-4,9],[-4,-3,7,3,8,-8,-10,3,-7,5],[-3,-1,3,-2,-6,-9,5,-7,5,-10],[5,-9,10,10,-4,7,10,-2,-5,9],[5,-4,-9,5,-1,6,-2,3,-6,-9]],[[6,8,5,-10,-4,2,7,2,-6,-10],[1,-5,1,-4,10,7,-1,-5,-5,-5],[-4,-10,2,8,6,-7,6,-9,9,-5],[-9,7,9,8,-7,-5,-1,-3,-5,-1],[3,-10,-1,7,4,-10,-8,5,-9,3],[6,-8,-3,10,-3,10,10,-4,-9,-10],[5,-6,-7,2,3,-3,-5,6,1,5],[6,10,5,8,7,5,-9,6,-3,3],[6,-3,-6,-9,4,1,-9,-7,-4,-8],[-2,-4,-5,9,1,-2,-10,7,5,-1],[10,-10,-2,3,3,-7,-6,7,3,9],[-10,10,7,3,3,-2,7,-4,-10,-5]],[[10,-9,-4,8,-2,9,8,-1,-7,9],[-8,5,-5,-4,-7,2,-2,-4,7,4],[-10,1,-2,-3,7,-3,4,-2,-8,-8],[5,4,10,4,1,7,10,-9,10,-3],[5,2,3,-2,10,8,1,3,-10,-7],[6,2,1,10,5,-6,1,-2,2,7],[-6,-7,5,-8,-8,5,10,10,1,3],[-5,-8,9,-1,6,2,1,10,-9,10],[-3,3,-4,-5,3,1,-8,-4,-9,-7],[1,8,9,7,-6,7,-1,5,3,10],[-7,-6,2,-4,-3,7,-2,-5,2,-1],[8,-10,-10,6,-4,-1,-1,-7,-7,3]],[[2,5,4,-7,3,-9,-7,3,3,-1],[10,-9,1,4,-5,-9,7,-2,-5,9],[6,10,-6,-1,6,7,5,5,-10,-3],[5,3,-3,3,4,7,-10,1,2,7],[5,-4,-8,4,9,6,-7,-6,-5,-2],[2,9,8,10,-4,-8,10,9,2,-7],[-1,4,3,-2,-10,-9,2,4,8,2],[10,-10,3,-8,3,5,-2,3,9,-6],[-10,1,1,-3,-9,2,4,-10,3,1],[7,1,-5,7,-10,2,5,1,9,8],[9,-9,-4,-8,-9,3,5,7,8,3],[-4,7,8,-9,4,-7,7,-3,-5,8]],[[-2,-1,-6,-8,-2,-2,7,10,-9,-4],[-8,5,-5,8,1,-3,8,-1,-4,-7],[-1,-5,-10,4,3,4,9,7,-8,-5],[1,-6,-3,3,8,-4,-1,-5,-3,2],[-9,9,6,3,1,6,7,2,1,-7],[-7,7,-9,1,-3,10,-1,-1,5,2],[-3,9,-10,-10,-6,9,-6,-3,9,9],[-9,4,-5,9,-9,5,9,2,5,-2],[8,4,8,-1,1,6,6,-2,-7,3],[3,-7,-2,-4,2,-7,5,-4,-9,9],[4,4,7,5,8,-9,-3,-3,-7,1],[-1,10,2,-1,1,-2,5,-9,1,-6]]], dtype = "uint16")#candidate|1535|(14, 12, 10)|const|uint16
var_1536 = relay.var("var_1536", dtype = "uint16", shape = (14, 12, 10))#candidate|1536|(14, 12, 10)|var|uint16
bop_1537 = relay.left_shift(const_1535.astype('uint16'), relay.reshape(var_1536.astype('uint16'), relay.shape_of(const_1535))) # shape=(14, 12, 10)
uop_1555 = relay.acos(var_1536.astype('float64')) # shape=(14, 12, 10)
func_1095_call = mod.get_global_var('func_1095')
func_1098_call = mutated_mod.get_global_var('func_1098')
const_1563 = relay.const([0.783849,-8.868559,5.959785,-3.470128,-1.906985,4.190571,0.439123,-0.066306,-8.555348,8.447435,-7.555636,-8.906796,2.988015,-3.832744,-2.339338,9.277250,-0.419102,-0.322314,-2.889999,-4.966426,4.647683,2.424495,5.500919,-5.798494,-5.845069,-6.169121,7.207185,-3.198955,-8.606326,0.848292,-5.755565,-2.658231,-6.078058,-9.995316,-7.620634,-2.916704,-2.407129,-7.192839,0.994484,0.179691,-4.331966,8.156344,-1.627992,-2.935453,-9.054225,1.358663,-4.203787,-9.020189,9.097934,-0.068745,4.082049,5.078991,-8.301329,-6.815070,-9.059360,0.559139,5.703657,-3.009454,-6.745545,4.424234,-9.027384,6.376327,-4.718022,-1.144186,-5.761238,2.967222,1.137658,-1.298732,-1.831388,1.361684,-3.000150,-8.169047,6.986636,-8.908495,6.808506,1.367238,-9.154205,5.316026,-3.495412,-1.408450,-3.204725,-0.351932,-6.917947,8.694382,6.395762,-9.003499,3.992161,-0.936811,1.412850,6.966984,-5.160162,3.646945,4.018114,8.278228,-2.513883,0.284157,-2.009835,-6.735752,-2.409183,1.594523,-1.161922,5.643050,-1.585002,6.467202,-6.924377,0.389766,6.439305,-4.541184,9.645553,-3.315345,6.627748,-5.171126,0.949981,5.830872,-6.546651,-1.021805,-6.536798,-9.435141,7.844152,-7.005739,-2.515452,-7.059479,-9.299708,6.414954,-5.044647,6.251855,8.072221,3.549463,-3.579999,-0.349656,-4.265160,-1.178666,-0.273021,1.377402,-2.161430,-4.444844,4.899702,-3.696220,6.416852,0.727074,2.178477,3.884477,-9.316227,3.415755,5.403131,9.348730,-4.771356,-4.579124,0.615383,-7.772693,-5.483071,-4.895489,2.100316,5.665697,-9.968299,2.850103,-9.912181,-9.276842,7.370753,1.157335,6.234220,-5.467021,-3.231863,7.929525,5.255284,9.693328,-9.619681,9.218567,-3.091376,-8.756770,-7.848520,-1.957597,-6.725232,4.789879,5.493353,9.412595,-5.917878,-7.229102,-3.946692,-7.655884,-5.381738,0.894766,5.433107,-7.946897,-2.219326,9.580705,-0.597177,7.269291,-0.762142,5.343958,3.572227,4.430076,-6.500116,3.517409,4.245764,-8.316053,1.575132,-8.752245,2.035014,3.322669,7.696720,-3.102216,-3.266633,-9.412110,-7.156697,-7.563454,-0.842859,6.864217,-7.621691,-8.489671,-5.701895,4.617575,-9.446083,0.352367,-5.652753,5.864276,5.901596,-9.208726,8.401065,-7.131304,-2.028549,-9.911513,-1.320210,4.719913,-1.446950,-5.734345,2.886359,-4.546558,6.445462,0.017052,-3.808863,8.087609,-6.413330,-7.729823,2.609106,1.362192,5.249815,-4.903953,-0.069204,-9.040734,9.792713,3.277855,-8.064485,4.804940,5.158556,-2.998298,2.000198,0.233038,7.612883,-0.624066,7.153850,-6.356538,0.316034,-5.342829,-0.407081,-8.498818,-8.688009,-1.596489,7.727079,-6.017908,-7.144138,8.065593,2.759606,2.028124,-7.840860,4.861268,-5.105024,-8.449659,-0.263025,4.911686,-8.107709,0.932323,6.187439,7.392809,4.227610,-3.070483,-9.684134,0.687779,-0.332609,-5.887249,-9.958458,-9.075813,0.789021,-6.591809,-4.352279,7.749449,2.281796,4.028502,-7.821819,-8.972959,-7.941265,-5.021469,-0.030523,-2.043814,-1.855632,0.392639,-8.427838,1.317775,-9.203819,-2.310833,2.078265,0.284246,-7.459282,-4.069229,-0.441644,-9.641493,2.427377,6.953644,-9.514225,-2.900939,7.965892,-2.197225,-4.860079,8.865686,8.701561,6.959441,4.620406,-7.162098,6.419807,3.851657,3.401374,-8.830381,-9.090143,-6.556248,-6.932102,6.394056,-9.781677,7.923376,-6.548746,6.229459,-4.722949,-5.839143,-1.094436,4.339032,3.986338,1.176317,-6.901631,6.558700,1.978937,-7.164901,9.033265,7.938151,6.276256,-3.855145,-8.224986,9.318499,-6.336860,-7.862317,-3.647558,-0.908351], dtype = "float32")#candidate|1563|(350,)|const|float32
call_1562 = func_1095_call(relay.reshape(const_1563.astype('float32'), [10, 5, 7]))
call_1564 = func_1095_call(relay.reshape(const_1563.astype('float32'), [10, 5, 7]))
func_945_call = mod.get_global_var('func_945')
func_948_call = mutated_mod.get_global_var('func_948')
const_1568 = relay.const([-7.388014,-3.922678,9.365856,-8.032712,7.372968,2.262171,6.258644,7.292990,-8.519076,-9.235553,-1.575570,1.164293,0.033286,9.174341,-7.497035,7.990097,7.753537,1.786031,1.306062,1.881424,-3.532377,-3.083944,6.512461,-3.373152,-2.040429,1.214141,-2.077673,-3.065356,-1.288223,-3.922341,-1.516140,4.139806,5.255181,-2.770348,-4.784256,-1.679270,9.781194,-9.124422,-5.945969,-8.124627,3.021142,9.733589,2.047690,-5.375596,-8.203757,-9.289793,-0.447455,-9.745544,-3.440145,-0.946183,-5.380027,-5.253223,-0.057255,-8.251671,4.878849,6.850858,-8.272555,-8.633207,-9.643213,5.451361,4.297629,0.646347,8.871553,-8.952792,0.749422,7.118232,9.454974,2.938235,-2.465311,-6.110330,-5.514606,0.915049,1.215330,-2.154596,-1.959477,-6.167994,-4.238959,3.053405,8.325921,1.158601,-2.757183,-6.325538,-3.159568,4.736434,-7.622616,7.731192,-3.577133,9.506556,-8.039151,9.285187,-8.086973,3.197044,-2.989815,-3.948124,-5.121870,-3.161305,-3.677964,-5.192402,-2.773271,-7.844501,3.071061,8.987727,-9.446518,8.880702,8.848242,1.643474,-3.371486,-1.658643,6.730806,-7.862409], dtype = "float64")#candidate|1568|(110,)|const|float64
call_1567 = relay.TupleGetItem(func_945_call(relay.reshape(const_1568.astype('float64'), [5, 2, 11])), 0)
call_1569 = relay.TupleGetItem(func_948_call(relay.reshape(const_1568.astype('float64'), [5, 2, 11])), 0)
func_364_call = mod.get_global_var('func_364')
func_368_call = mutated_mod.get_global_var('func_368')
var_1573 = relay.var("var_1573", dtype = "float32", shape = (1176,))#candidate|1573|(1176,)|var|float32
call_1572 = relay.TupleGetItem(func_364_call(relay.reshape(var_1573.astype('float32'), [12, 14, 7]), relay.reshape(var_1573.astype('float32'), [12, 14, 7]), ), 0)
call_1574 = relay.TupleGetItem(func_368_call(relay.reshape(var_1573.astype('float32'), [12, 14, 7]), relay.reshape(var_1573.astype('float32'), [12, 14, 7]), ), 0)
func_364_call = mod.get_global_var('func_364')
func_368_call = mutated_mod.get_global_var('func_368')
call_1580 = relay.TupleGetItem(func_364_call(relay.reshape(var_1573.astype('float32'), [12, 14, 7]), relay.reshape(var_1573.astype('float32'), [12, 14, 7]), ), 0)
call_1581 = relay.TupleGetItem(func_368_call(relay.reshape(var_1573.astype('float32'), [12, 14, 7]), relay.reshape(var_1573.astype('float32'), [12, 14, 7]), ), 0)
var_1592 = relay.var("var_1592", dtype = "float64", shape = (14, 12, 10))#candidate|1592|(14, 12, 10)|var|float64
bop_1593 = relay.floor_mod(uop_1555.astype('float32'), relay.reshape(var_1592.astype('float32'), relay.shape_of(uop_1555))) # shape=(14, 12, 10)
output = relay.Tuple([bop_1537,call_1562,const_1563,call_1567,const_1568,call_1572,var_1573,call_1580,bop_1593,])
output2 = relay.Tuple([bop_1537,call_1564,const_1563,call_1569,const_1568,call_1574,var_1573,call_1581,bop_1593,])
func_1601 = relay.Function([var_1536,var_1573,var_1592,], output)
mod['func_1601'] = func_1601
mod = relay.transform.InferType()(mod)
mutated_mod['func_1601'] = func_1601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1601_call = mutated_mod.get_global_var('func_1601')
var_1603 = relay.var("var_1603", dtype = "uint16", shape = (14, 12, 10))#candidate|1603|(14, 12, 10)|var|uint16
var_1604 = relay.var("var_1604", dtype = "float32", shape = (1176,))#candidate|1604|(1176,)|var|float32
var_1605 = relay.var("var_1605", dtype = "float64", shape = (14, 12, 10))#candidate|1605|(14, 12, 10)|var|float64
call_1602 = func_1601_call(var_1603,var_1604,var_1605,)
output = call_1602
func_1606 = relay.Function([var_1603,var_1604,var_1605,], output)
mutated_mod['func_1606'] = func_1606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1628 = relay.var("var_1628", dtype = "bool", shape = (14, 5, 7))#candidate|1628|(14, 5, 7)|var|bool
var_1629 = relay.var("var_1629", dtype = "bool", shape = (14, 5, 7))#candidate|1629|(14, 5, 7)|var|bool
bop_1630 = relay.logical_and(var_1628.astype('bool'), relay.reshape(var_1629.astype('bool'), relay.shape_of(var_1628))) # shape=(14, 5, 7)
func_904_call = mod.get_global_var('func_904')
func_908_call = mutated_mod.get_global_var('func_908')
var_1640 = relay.var("var_1640", dtype = "uint32", shape = (126,))#candidate|1640|(126,)|var|uint32
call_1639 = relay.TupleGetItem(func_904_call(relay.reshape(var_1640.astype('uint32'), [9, 7, 2]), relay.reshape(var_1640.astype('uint32'), [9, 7, 2]), relay.reshape(var_1640.astype('float64'), [9, 7, 2]), ), 0)
call_1641 = relay.TupleGetItem(func_908_call(relay.reshape(var_1640.astype('uint32'), [9, 7, 2]), relay.reshape(var_1640.astype('uint32'), [9, 7, 2]), relay.reshape(var_1640.astype('float64'), [9, 7, 2]), ), 0)
output = relay.Tuple([bop_1630,call_1639,var_1640,])
output2 = relay.Tuple([bop_1630,call_1641,var_1640,])
func_1647 = relay.Function([var_1628,var_1629,var_1640,], output)
mod['func_1647'] = func_1647
mod = relay.transform.InferType()(mod)
var_1648 = relay.var("var_1648", dtype = "bool", shape = (14, 5, 7))#candidate|1648|(14, 5, 7)|var|bool
var_1649 = relay.var("var_1649", dtype = "bool", shape = (14, 5, 7))#candidate|1649|(14, 5, 7)|var|bool
var_1650 = relay.var("var_1650", dtype = "uint32", shape = (126,))#candidate|1650|(126,)|var|uint32
output = func_1647(var_1648,var_1649,var_1650,)
func_1651 = relay.Function([var_1648,var_1649,var_1650,], output)
mutated_mod['func_1651'] = func_1651
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1653 = relay.const([[[-4.539367,3.429644,-8.207667,5.383037,4.662046],[7.102382,-9.144861,-6.326001,-2.237038,-6.407514],[3.250381,1.411499,-4.002488,6.056188,-5.669931],[-3.822841,-0.067870,-9.613578,-0.768059,-7.052399],[0.666220,9.618147,-9.706062,-3.010864,9.542511],[-1.940625,-2.806727,-8.643438,-6.460375,-1.299592],[-2.962396,3.739863,6.431602,7.277775,-8.218350],[0.534495,-2.546997,3.495331,-6.943706,6.537799],[-8.541988,3.911581,-0.494488,1.203010,8.615204],[8.039953,1.186066,-4.210672,1.025208,-8.873237],[4.571638,3.342524,-6.497383,-7.444895,-8.068096],[-7.370286,0.563609,3.887076,7.889840,-1.108616],[3.650282,7.874659,2.798383,3.375328,3.187281],[-2.359617,4.314389,-0.268283,-7.847012,-0.650880],[0.077154,2.401200,-9.012298,-4.664137,4.368651]],[[-7.321299,-4.657190,0.722365,9.166063,-9.006871],[-7.182607,6.698200,-8.351233,-0.830401,8.943787],[-2.695399,1.111508,4.829901,-2.081618,-9.329283],[5.483549,-1.086140,-4.318346,8.279409,-6.342689],[-0.897812,-8.481452,-5.531802,-2.248977,0.284204],[-1.568205,-1.514554,5.654896,4.096093,1.420095],[4.655707,0.309309,-3.532231,-3.580490,8.033907],[-3.047049,9.578912,-9.357785,5.650341,-3.075025],[-5.082776,-6.964846,6.357221,-3.755574,-2.348870],[-5.229070,-5.342669,4.474959,4.007183,-1.209728],[3.241436,-4.284351,2.994085,-8.180622,6.569148],[3.717260,7.070060,-7.747961,3.843946,-7.953592],[-9.897948,-5.817252,-2.040823,-4.303602,2.303832],[-9.402959,4.818674,5.054572,9.571055,8.311379],[3.446128,-3.504942,6.993738,4.437516,-2.458690]]], dtype = "float32")#candidate|1653|(2, 15, 5)|const|float32
uop_1654 = relay.cosh(const_1653.astype('float32')) # shape=(2, 15, 5)
bop_1659 = relay.floor_divide(uop_1654.astype('float32'), relay.reshape(const_1653.astype('float32'), relay.shape_of(uop_1654))) # shape=(2, 15, 5)
func_1601_call = mod.get_global_var('func_1601')
func_1606_call = mutated_mod.get_global_var('func_1606')
const_1664 = relay.const([2,-8,8,3,-3,4,6,9,-7,-6,7,-1,-9,2,8,1,1,-7,5,2,-8,8,-2,-1,-3,10,-5,1,-8,5,-2,6,-6,-10,-4,-1,-3,-6,9,5,-6,-3,6,4,7,-9,-6,2,-7,6,-9,4,7,6,-9,7,-6,6,-4,-5,10,2,9,1,-8,-7,-4,-6,3,7,3,-7,6,-10,-4,3,-2,-3,1,-9,10,4,9,5,2,-3,-9,5,-4,8,-3,-5,8,-6,-1,-7,-2,-5,3,-2,3,1,8,9,-2,-3,8,7,-5,6,-9,6,-4,-2,-10,-1,4,7,9,-5,3,-5,7,10,7,7,-8,9,4,10,-8,7,4,-3,9,3,7,4,2,-3,7,6,4,1,7,-10,-4,-6,-2,-3,-6,-3,-6,4,-9,8,-8,5,-10,-10,8,1,-8,10,3,-8,-2,1,-8,-6,3,-6,8,2,6,2,-3,-5,9,8,-9,-2,-9,-8,9,5,8,2,-3,-2,8,2,-9,2,-2,-10,9,1,5,5,3,-6,3,7,-4,-4,6,-4,5,-1,-6,-8,-4,-3,10,5,-9,-6,-10,-8,-3,7,-8,-2,-6,-2,7,7,10,-2,-7,-4,9,9,-3,2,-7,5,9,-2,4,9,-5,5,-8,6,6,-2,-1,4,7,-2,-4,-4,6,-2,-10,-2,-9,10,3,-5,-7,-4,9,4,4,2,3,-5,-2,9,-9,-6,-9,-8,-2,3,-9,10,5,-3,10,-8,-1,-9,-9,-4,-9,-7,-5,-1,7,8,1,5,2,6,5,-2,-7,7,9,-4,-2,-9,7,5,3,3,1,-1,-6,-4,3,7,-7,7,8,8,-4,8,-6,7,-4,7,-8,8,-7,7,8,-1,-10,5,-10,9,-10,9,-8,9,-9,-9,5,3,2,4,-3,7,1,-3,-6,9,9,-4,-6,-9,9,10,-7,-8,2,-7,6,10,7,-2,-6,-1,-9,-2,-9,-8,10,4,2,4,-5,8,-8,-1,-2,10,-4,-2,5,9,-6,-2,-8,4,10,3,3,-9,10,6,4,1,-6,-4,9,-4,-10,-3,-5,-8,9,4,-3,-10,4,-6,-1,-8,-9,9,6,5,2,-6,-7,5,6,-5,-2,-1,-3,5,-1,3,7,-8,-7,-1,-10,-7,-1,-2,-2,3,6,-8,-10,-4,-8,-5,-1,8,-7,-9,5,-6,10,1,-9,-4,10,-3,-9,-5,6,-3,-2,-4,-9,-6,9,-9,1,1,-6,-4,-8,-9,4,5,-4,8,9,-5,-5,5,4,-4,-5,5,-9,10,-6,6,4,1,-2,-4,-2,-1,1,-10,-1,-1,9,-10,5,-8,8,2,-7,-10,3,-10,-4,-2,7,3,8,6,10,-6,5,-5,-9,-7,-1,5,-2,8,6,-4,-2,2,-10,7,-4,6,-6,4,-9,2,-9,-3,2,10,1,-10,10,-3,10,-2,-3,-4,9,-4,9,8,1,-9,-3,10,5,-9,3,7,1,8,10,-5,-7,7,5,4,-7,10,3,5,1,3,5,-7,-1,-2,-4,10,-6,-7,-4,-8,5,-2,7,6,-1,-9,-1,3,-1,3,-4,7,1,2,9,6,-9,2,-4,-3,7,1,8,10,-1,-5,5,8,9,1,1,10,4,5,2,4,9,7,-9,9,1,6,7,2,-5,4,10,7,7,3,9,-9,1,10,-5,2,4,-2,4,-8,8,-7,5,-4,6,-2,-5,7,-6,-7,-7,-7,-9,-5,2,3,7,-10,-6,5,-2,-10,7,-2,-6,6,-10,-6,9,-5,7,2,-10,6,-5,-9,-9,3,-6,-1,-5,-6,9,7,5,10,10,6,4,-9,5,7,6,-4,-6,5,-1,8,4,9,-7,-3,-2,-10,-5,7,-6,-5,-4,-5,3,4,2,5,9,-7,-4,-7,3,5,8,-7,-6,-7,3,-3,-1,-2,2,10,3,2,-2,-6,-8,-3,2,-9,4,1,7,4,4,2,3,-7,-1,-6,8,8,-4,10,-10,-6,-4,-2,2,8,1,-2,-2,-3,-8,6,2,1,2,1,2,-6,4,-7,3,-4,7,-9,5,-2,10,8,-9,-5,10,-4,-3,9,10,6,5,-10,-4,-1,-10,1,-10,-1,7,3,3,-2,-10,6,8,5,-1,-6,-5,-3,2,4,-2,3,2,9,-3,-2,1,-5,9,4,7,5,9,-5,-2,2,-6,7,1,3,-6,-5,4,-10,1,1,6,-10,-3,-7,-5,-3,6,-9,4,8,-9,-9,-4,4,-2,3,-2,-2,-7,-4,-8,3,4,10,6,-10,-1,-7,-9,-10,9,-9,-6,8,2,6,-6,3,-5,-8,10,-5,8,-8,5,7,3,5,-9,-5,-2,8,-1,9,-5,-6,-6,6,5,10,3,-3,3,8,-10,10,5,3,-10,-2,9,2,3,7,3,9,5,2,2,8,2,-8,-8,3,-1,-5,-6,-6,-4,-6,-2,-10,-7,-3,-4,-2,10,5,9,6,-4,-2,7,-7,3,-7,-8,-10,-1,3,5,-4,-5,3,-7,-6,9,1,-8,-4,-2,5,-9,-7,9,6,7,-1,10,-8,10,-8,-4,4,7,-2,-10,-1,4,-9,-9,-7,6,-1,-1,-1,-3,-1,-8,-10,4,4,-8,2,4,-5,6,-1,1,9,3,4,-1,-4,1,-1,-5,-8,1,-7,1,10,-5,8,-7,9,-8,-7,-1,5,-6,-6,3,-5,5,-1,-7,4,4,-9,10,10,-2,-5,7,-4,8,3,7,-10,-4,-1,-2,3,6,8,10,3,4,-5,-10,3,1,3,-5,-10,-4,10,-3,-3,-6,6,8,10,-9,-4,-5,1,4,-2,7,-10,1,8,-4,5,-3,-10,2,4,6,-4,-4,5,-9,6,6,-6,5,-3,6,-1,-10,-1,-10,6,10,4,-5,9,-5,9,-1,10,-10,7,2,-4,-10,5,-7,-5,-10,-10,-10,-6,-7,8,-9,-4,-1,4,10,6,-10,-1,3,-5,-6,8,7,-3,-1,2,9,-9,-8,6,1,-9,2,-2,-5,7,-4,-9,9,7,3,9,5,2,3,3,-9,-8,2,5,-7,-1,5,5,-2,-3,-10,-6,-10,-10,6,8,-4,6,4,-3,2,-3,-6,3,1,-4,8,-7,10,-3,1,-4,8,2,1,-5,1,-4,-8,-6,2,-9,-10,9,6,-8,3,-5,-2,-3,4,8,5,2,-6,2,8,8,-10,8,1,6,-8,7,7,2,7,9,-9,-7,9,5,-3,-5,-2,-2,9,-10,-10,-6,6,-10,-6,-9,10,-4,-7,6,3,-4,4,-9,5,-1,-6,-2,3,-7,1,-7,-4,-1,9,-1,-1,-9,-3,10,-10,3,-8,-8,8,-3,3,-3,-1,6,-2,-4,5,9,-2,8,-2,7,9,-4,-3,8,-6,-1,-5,-9,-7,1,-4,2,9,-7,-2,-2,2,-9,-2,-10,-10,-5,1,2,-5,-2,3,-5,3,-3,8,7,1,4,-3,-10,-9,-5,-9,8,2,-4,-3,5,-5,-10,-6,-3,-3,8,3,-8,-5,3,-2,1,-1,8,6,-10,4,3,7,4,-5,5,-2,-10,-7,-4,-6,-2,-10,10,4,6,-10,-7,-7,8,-5,9,7,6,-4,3,-3,-8,-5,-10,10,6,-7,8,4,-5,2,-6,-5,3,3,3,2,1,-10,8,-9,2,9,-1,8,2,1,-1,10,-8,-1,-1,2,10,-2,-4,5,8,-5,-7,-4,5,6,-2,9,9,2,-2,-1,8,3,4,-7,-3,1,7,6,-1,-9,1,6,7,2,-2,-6,-6,-2,8,-5,4,-9,-3,7,9,8,4,-2,10,2,6,-4,-6,5,8,5,7,-6,-2,4,-7,-3,-4,1,8,-8,1,9,10,1,5,1,1,2,-10,-7,9,-9,-5,-7,-6,-9,8,-4,1,6,3,-8,7,-10,-8,-8,-6,-10,-9,-6,-5,-2,3,1,3,-8,7,5,-9,4,3,-4,9,2,4,-3,-4,-2,-2,9,-10,-4,-4,-2,-5,10,-8,-8,10,-5,1,5,-4,10,-10,1,-5,-9,-5,2,5,9,8,-10,-1,-5,4,6,9,-6,-5,10,-4,-1,-10,-1,6,-10,-9,-5,7,3,-1,1,-6,-10,-4,3,1,-6,-6,6,9,8,-8,10,-10,7,3,3,3,-2,-6,-4,8,6,7,8,1,3,7,-3,8,2,7,3,-9,-6,2,1,-10,-6,10,4,-9,1,2,-5,-3,4,-2,-2,3,-5,-8,5,-5,8,4,-7,8,-1,1,3,-4,-5,-3,7,-5,-1,1,4,6,3,1,-4,-9,3,10,-5,-4,-1,7,5,4,-6,3,-3,1,10,6,-5,7,-5,6,3,10,7,2,3,7,3,1,-10,9,-4,-3,10,-9,-9,6,-2,-6,6,-8,-5,8,6,1,-2,5,-9,-7,10,-5,8,1], dtype = "uint16")#candidate|1664|(1680,)|const|uint16
var_1665 = relay.var("var_1665", dtype = "float32", shape = (1, 1176))#candidate|1665|(1, 1176)|var|float32
call_1663 = relay.TupleGetItem(func_1601_call(relay.reshape(const_1664.astype('uint16'), [14, 12, 10]), relay.reshape(var_1665.astype('float32'), [1176,]), relay.reshape(const_1664.astype('float64'), [14, 12, 10]), ), 6)
call_1666 = relay.TupleGetItem(func_1606_call(relay.reshape(const_1664.astype('uint16'), [14, 12, 10]), relay.reshape(var_1665.astype('float32'), [1176,]), relay.reshape(const_1664.astype('float64'), [14, 12, 10]), ), 6)
output = relay.Tuple([bop_1659,call_1663,const_1664,var_1665,])
output2 = relay.Tuple([bop_1659,call_1666,const_1664,var_1665,])
func_1674 = relay.Function([var_1665,], output)
mod['func_1674'] = func_1674
mod = relay.transform.InferType()(mod)
var_1675 = relay.var("var_1675", dtype = "float32", shape = (1, 1176))#candidate|1675|(1, 1176)|var|float32
output = func_1674(var_1675)
func_1676 = relay.Function([var_1675], output)
mutated_mod['func_1676'] = func_1676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1696 = relay.var("var_1696", dtype = "uint8", shape = (9, 12, 7))#candidate|1696|(9, 12, 7)|var|uint8
var_1697 = relay.var("var_1697", dtype = "uint8", shape = (9, 12, 7))#candidate|1697|(9, 12, 7)|var|uint8
bop_1698 = relay.maximum(var_1696.astype('uint8'), relay.reshape(var_1697.astype('uint8'), relay.shape_of(var_1696))) # shape=(9, 12, 7)
func_1095_call = mod.get_global_var('func_1095')
func_1098_call = mutated_mod.get_global_var('func_1098')
const_1702 = relay.const([5.581585,-9.616295,5.205956,-5.021188,-8.495189,6.124589,0.406293,-6.701343,5.269483,-8.075307,-5.894065,2.187801,6.079518,5.141241,-5.632667,2.162697,-9.944273,-4.914816,-3.904499,0.391939,6.305882,-3.339250,-6.349863,7.073035,8.164181,-1.261880,7.344540,5.879059,7.865967,4.075982,-9.075150,-3.725851,7.391079,-5.376562,7.674898,-2.118979,-1.054867,1.812981,8.452226,0.980144,-7.127813,-2.713885,4.142387,1.501157,-6.028691,-1.805136,9.801024,4.065731,4.069021,1.700413,-1.457575,3.345597,-5.874899,7.260902,0.716110,4.364158,-8.465287,3.491012,2.244125,8.099804,-9.452127,-7.527163,-6.106689,-2.551434,-6.056800,-6.909816,9.269442,5.080859,-9.384671,3.211871,7.169452,7.343721,3.494045,-3.942288,0.278048,-9.881973,0.190554,-2.540531,9.492377,-4.578552,-4.537289,-9.021786,-7.184733,3.940348,-3.895428,8.576191,6.492492,-2.756205,6.520002,-2.151834,-0.356135,-6.544995,5.075488,5.063679,3.600497,-8.485823,-5.605326,6.457472,1.096854,3.884763,-9.983792,2.802555,5.989276,-6.180873,-1.159523,-3.229280,9.601131,4.787173,2.752184,1.767269,-2.546715,-6.712422,-6.612929,8.943972,-8.603848,-3.509972,4.470207,2.590415,4.787996,-0.260895,-6.137616,-0.946378,2.395205,-7.197682,-7.918922,-6.306562,-2.205789,5.015965,-6.608012,-7.115683,7.944097,2.813285,-0.958125,1.343690,-1.727087,-8.741413,-6.647402,0.321063,-4.949886,-6.172584,6.583904,0.369670,5.545894,2.400017,9.120154,1.237700,-3.010175,-9.509973,9.143883,-2.727777,2.963549,-0.045094,6.578065,5.888081,2.963370,-1.068076,-2.856571,-9.199457,-0.146951,-2.179946,8.876005,-9.384723,-6.283398,0.560152,-6.002321,-7.734704,-0.366221,-7.044945,-0.204996,5.065145,9.549054,-6.426842,3.025857,-4.221911,-0.552091,7.286986,-0.003053,4.007531,-9.275396,-8.556600,-8.623907,-3.728134,4.196410,-2.821686,5.542150,8.440755,0.392258,-0.934443,5.825348,-2.849056,9.140060,2.010287,3.618163,6.913882,5.656333,4.100085,-5.970056,-0.041547,-8.156247,8.945629,-0.234818,-4.270024,-5.690645,-5.176318,5.213459,-4.834303,1.992633,-7.650564,-2.958328,-0.716428,6.851296,-8.134530,-4.977375,3.215864,0.124663,-0.467011,-6.118422,-6.084440,1.040741,-2.003591,5.857588,-1.163387,-3.275669,-5.769911,-0.590200,9.056537,-0.813216,6.819138,-7.454408,2.303695,7.515114,-2.845699,-5.473239,-2.855730,0.870612,7.301201,8.185062,5.732722,-1.303695,6.448334,9.943109,1.262032,-2.854933,-9.598807,2.554093,-7.366719,8.666221,-9.746955,4.847548,7.149489,7.752378,-3.289320,-1.397514,1.151751,9.209788,0.104309,8.227471,-9.919234,5.115169,-5.631242,-0.339722,8.418528,9.196165,9.437627,4.730083,-1.856890,1.599523,0.878662,-0.848961,2.612830,6.386813,-6.638426,8.517987,-2.789128,7.687759,9.615566,-7.261001,2.053071,0.495754,-3.988219,-4.653152,9.041689,5.416582,0.791114,7.941727,6.903064,-6.805885,5.516277,-0.263767,-1.332985,6.924864,9.479870,5.994833,5.032690,-3.529955,3.466352,-1.883719,-5.476746,0.900238,-1.097242,-8.715776,-4.812427,1.861655,-9.125596,3.588653,-6.076585,6.756258,-0.896082,-4.432052,1.466443,-6.385033,6.016480,4.624568,-2.908793,-2.294603,-1.228601,7.908707,7.272162,-2.012956,-6.314787,-8.987567,-0.348855,8.951360,-9.248265,0.294317,-5.136700,-9.498088,-0.907829,7.759220,5.162822,0.819493,2.443091,-6.952232,-3.719267,-7.919190,-8.809492,6.962031,-8.233202,-9.623292,-3.116133,-6.955970,4.896072,8.549124,8.616669,-7.639256,-3.145420,-8.227690,-3.301805,-9.795102,0.508862], dtype = "float32")#candidate|1702|(350,)|const|float32
call_1701 = func_1095_call(relay.reshape(const_1702.astype('float32'), [10, 5, 7]))
call_1703 = func_1095_call(relay.reshape(const_1702.astype('float32'), [10, 5, 7]))
func_459_call = mod.get_global_var('func_459')
func_462_call = mutated_mod.get_global_var('func_462')
const_1719 = relay.const([-1,1,-8,-5,-1,-5,5,3,1,10,3,7,1,7,1,-6,8,6,6,-9,6,-8,-9,10,9,2,-7,9,10,2,6,4,9,2,-5,-4,6,-10,1,7,-2,-9,5,7,-6,9,-8,5,-2,3,-9,-8,7,2,-10,9,7,10,-7,-9,5,6,10,-9,10,2,8,-6,8,4,-6,-9,-2,7,6,-2,-6,2,-2,10,4,-3,2,9,7,9,6,-8,-4,8,5,-1,-10,8,-8,4,-2,6,6,7,9,-9,-1,5,-6,-7,5,-3,-3,-7,-1,2,-9,1,-4,-1,2,7,-8,1,5,4,-8,-7,8,-3,-6,-4,5,-2,-2,1,-2,-9,3,6,-2,10,-7,-4,-10,4,3,-2,-5,-9,-7,3,1,2,6,1,-6,9,-9,-8,9,6,-4,-2,5,6,-2,-1,-2,6,-1,-7,2,-2,-8,-10,4,9,-8,-7,-4,5,1,-10,1,3,5,-8,-4,7,-3,-9,7,-7,2,-8,-6,-2,-10,-1,8,-4,-4,1,-5,1,7,4,-1,7,-6,8,9,-8,2,-4,5,-5,-10,-8,7,2,-1,-8,-9,4,3,7,5,2,7,10,-2,3,-3,7,-2,6,7,-4,2,-2,-3,6,6,-5,-2,7,2,-7,2,-7,-5,6,8,8,1,4,1,-9,-7,-10,-1,-4,8,8,-7,2,9,-6,7,6,6,-1,-9,1,-7,5,-9,-9,-2,7,-1,3,-5,6,3,-2,-3,3,5,7,9,10,-3,-5,7,6,10,-7,-8,-1,-6,-9,7,-2,-10,-4,5,6,-4,-4,-4,-8,-2,9,9,-3,2,5,-6,2,10,-2,2,2,1,-5,-8,7,-8,-2,-6,-2,-8,8,6,9,-7,-10,1,3,1,6,2,1,-2,7,-1,8,7,-5,-7,-10,7,3,5,-1,5,6,-5,-7,2,-6,-4,2,4,6,-4,-8,-10,1,7,2,3,1,-8,4,-4,-3,-9,-10,4,4,6,-9,3,2,5,-3,-5,-6,-5,-1,3,7,-10,-4,-7,-2,-10,-7,-2,2,6,-6,10,-2,-2,-3,-8,8,-1,4,-1,-9,7,4,9,-7,-1,-4,2,-7,-10,1,5,7,10,-2,-8,-1,-10,-4,-1,4,1,7,5,-8,-6,-4,-8,7,-2,8,1,-5,-4,-2,10,-9,3,4,1,2,3,-10,-6,-7,-5,10,-6,-9,-6,5,6,-6,-1,-6,2,-10,5,-6,-9,1,9,2,-8,6,-3,-9,9,9,-6,2,6,-5,-4,-1,-5,6,6,1,-10,-10,-10,-3,4,8,-8,2,-4,4,9,10,-8,1,-6,-7,-1,-1,-6,1,10,-4,2,2,-2,-4,2,6,-2,-3,9,-7,9,-3,-6,-6,4,5,-5,-1,-5,-5,-1,-6,-8,-3,1,7,-2,6,3,-4,-2,-2,-8,-4,-8,-10,2,1,-5,4,6,5,-2,-4,2,3,-9,-3,-9,-1,-5,-5,-7,4,-3,-7,2,5,-4,8,-8,-4,-7,7,-3,3,7,5,-6,-5,1,-6,-5,-6,1,-9,-6,-8,-7,9,1,-7,1,4,3,4,3,-9,-10,-9,1,-10,10,-2,-2,8,4,-4,9,2,-9,-8,-6,-1,1,9,-8,3,-6,-7,-7,-4,2,9,7,-5,-8,9,1,-2,9,-6,-10,-7,5,7,-10,-6,10,-4,-5,-5,6,-8,-3,-1,2,1,8,10,-3,5,9,-6,5,6,-10,4,5,3,2,10,1,8,9,-5,7,6,1,5,-1,-9,-3,7,3,-6,3,-9,-7,-6,-6,-1,-10,1,8,-1,-6,-9,1,7,-5,-9,10,3,-6,4,-9,-7,1,-2,1,-7,2,-7,2,-7,8,-3,5,-6,6,-2,-6,-4,6,-5,9,-5,-9,-6,-8,-8,-10,-7,-9,-5,-2,8,8,4,-9,-1,4,-1,-10,-4,9,-7,2,-1,4,4,5,-5,-5,8,-9,-4,7,-5,-10,5,10,-8,3,-5,-7,4,-2,-6,-9,5,-5,2,4,-9,8,-4,4,-3,3,-8,9,-2,-3,2,-7,10,5,4,-9,4,6,6,-1,-9,-8,-3,-8,-10,7,3,-8,-6,6,10,2,5,-3,-6,-1,-7,1,-8,6,2,-1,-9,-7,-3,2,10,-9,-2,5,5,4,-9,-3,-5,-6,-6,1,7,8,-1,-5,-6,6,-5,5,-1,3,5,-6,6,-7,-10,-8,6,-8,8,-10,6,-10,10,-10,-4,8,8,2,-5,-8,7,3,2,2,3,-2,-9,9,-10,10,-1,-5,-4,6,-6,-6,10,6,-1,10,10,2,-6,9,-1,2,-9,2,4,5,-2,-10,-10,-4,5,-4,10,4,-8,-2,2,-10,2,6,-2,3,2,8,-2,-3,-8,1,3,-4,6,10,1,-3,-4,7,2,1,7,-7,4,5,-7,2,10,10,3,8,-10,6,-9,-1,5,4,3,-1,1,9,-10,9,6,-8,9,-2,4,-2,-3,6,5,1,3,-5,8,6,6,10,3,2,3,-1,-3,1,-8,-5,-9,2,-10,8,-2,10,10,-9,-7,4,-6,6,-2,7,-6,-4,1,-8,-3,-3,-3,-3,2,-5,-5,-10,8,10,4,9,-2,-6,-8,-7,5,8,-2,10,-2,-4,5,-8,1,2,-7,-9,3,1,-2,-2,8,-4,10,-6,-10,-1,-6,8,9,5,9,5,1,-3,4,-9,-7,3,-8,2,-9,3,-6,-3,8,-2,-3,-1,3,-7,-9,-9,1,6,3,7,2,9,8,-4,-1,-5,1,7,10,-1,2,5,-6,-3,10,-10,10,2,-3,-6,1,9,7,-8,-9,6,-10,5,4,4,-9], dtype = "uint8")#candidate|1719|(1080,)|const|uint8
call_1718 = relay.TupleGetItem(func_459_call(relay.reshape(const_1719.astype('uint8'), [6, 15, 12])), 0)
call_1720 = relay.TupleGetItem(func_462_call(relay.reshape(const_1719.astype('uint8'), [6, 15, 12])), 0)
bop_1739 = relay.left_shift(var_1696.astype('uint16'), relay.reshape(bop_1698.astype('uint16'), relay.shape_of(var_1696))) # shape=(9, 12, 7)
bop_1742 = relay.floor_divide(bop_1739.astype('float64'), relay.reshape(bop_1698.astype('float64'), relay.shape_of(bop_1739))) # shape=(9, 12, 7)
uop_1745 = relay.erf(bop_1742.astype('float64')) # shape=(9, 12, 7)
output = relay.Tuple([call_1701,const_1702,call_1718,const_1719,uop_1745,])
output2 = relay.Tuple([call_1703,const_1702,call_1720,const_1719,uop_1745,])
func_1761 = relay.Function([var_1696,var_1697,], output)
mod['func_1761'] = func_1761
mod = relay.transform.InferType()(mod)
mutated_mod['func_1761'] = func_1761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1761_call = mutated_mod.get_global_var('func_1761')
var_1763 = relay.var("var_1763", dtype = "uint8", shape = (9, 12, 7))#candidate|1763|(9, 12, 7)|var|uint8
var_1764 = relay.var("var_1764", dtype = "uint8", shape = (9, 12, 7))#candidate|1764|(9, 12, 7)|var|uint8
call_1762 = func_1761_call(var_1763,var_1764,)
output = call_1762
func_1765 = relay.Function([var_1763,var_1764,], output)
mutated_mod['func_1765'] = func_1765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1893 = relay.var("var_1893", dtype = "float32", shape = (3, 10, 4))#candidate|1893|(3, 10, 4)|var|float32
uop_1894 = relay.sinh(var_1893.astype('float32')) # shape=(3, 10, 4)
output = relay.Tuple([uop_1894,])
output2 = relay.Tuple([uop_1894,])
func_1896 = relay.Function([var_1893,], output)
mod['func_1896'] = func_1896
mod = relay.transform.InferType()(mod)
var_1897 = relay.var("var_1897", dtype = "float32", shape = (3, 10, 4))#candidate|1897|(3, 10, 4)|var|float32
output = func_1896(var_1897)
func_1898 = relay.Function([var_1897], output)
mutated_mod['func_1898'] = func_1898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1925 = relay.var("var_1925", dtype = "float64", shape = (5, 9, 3))#candidate|1925|(5, 9, 3)|var|float64
uop_1926 = relay.atanh(var_1925.astype('float64')) # shape=(5, 9, 3)
output = uop_1926
output2 = uop_1926
func_1932 = relay.Function([var_1925,], output)
mod['func_1932'] = func_1932
mod = relay.transform.InferType()(mod)
mutated_mod['func_1932'] = func_1932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1933 = relay.var("var_1933", dtype = "float64", shape = (5, 9, 3))#candidate|1933|(5, 9, 3)|var|float64
func_1932_call = mutated_mod.get_global_var('func_1932')
call_1934 = func_1932_call(var_1933)
output = call_1934
func_1935 = relay.Function([var_1933], output)
mutated_mod['func_1935'] = func_1935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2341 = relay.var("var_2341", dtype = "uint64", shape = (9, 8, 13))#candidate|2341|(9, 8, 13)|var|uint64
var_2342 = relay.var("var_2342", dtype = "uint64", shape = (9, 8, 13))#candidate|2342|(9, 8, 13)|var|uint64
bop_2343 = relay.greater(var_2341.astype('bool'), relay.reshape(var_2342.astype('bool'), relay.shape_of(var_2341))) # shape=(9, 8, 13)
func_1932_call = mod.get_global_var('func_1932')
func_1935_call = mutated_mod.get_global_var('func_1935')
const_2360 = relay.const([9.566885,9.332240,8.987488,8.678594,-6.347180,1.473222,1.008661,-8.871702,-5.006053,-6.578307,7.190173,2.073382,5.352762,6.989820,4.274989,-2.473143,-5.222563,9.525144,4.289188,-6.311595,-4.156740,-7.443871,0.777854,0.974871,-1.364810,-0.579676,-7.076757,-8.529446,2.931039,-9.004389,9.956195,-6.345358,-1.169818,4.777083,-2.466043,-9.474802,3.515933,-0.535216,5.917757,6.033157,-2.019165,3.477875,0.030770,-7.676365,0.699605,1.277017,-6.132834,-8.993240,-5.378565,-1.851080,3.781998,0.077289,2.722759,-0.933994,5.934407,-4.054199,7.496494,0.968093,-3.371881,-9.038564,-9.948000,-0.794108,4.755745,-8.531044,-4.404811,-7.685610,6.163530,2.892585,-0.355019,4.308297,4.006202,3.352074,1.901796,3.366663,-5.629912,-1.004150,-3.458448,9.831867,9.731603,0.574225,-1.391713,-5.755436,8.665267,-1.818325,6.466316,-2.111512,-3.975675,2.269637,-8.454992,2.192461,-4.615421,0.998775,-6.850985,-4.672739,-9.535777,5.836392,-9.674587,-3.786744,1.073481,1.543643,-8.044128,0.805960,8.310024,4.281852,-0.749738,-5.407950,-5.570000,5.750833,9.767462,-6.238981,1.238306,-2.073567,9.835610,3.823224,-7.091323,1.997654,-0.405894,3.690115,-5.825446,4.188107,9.813944,6.774133,-0.285923,-5.417648,4.869375,7.880813,-0.996282,-0.775897,6.718127,7.374083,-3.844633,-0.957082,1.824013,-1.839144,-7.846428], dtype = "float64")#candidate|2360|(135,)|const|float64
call_2359 = func_1932_call(relay.reshape(const_2360.astype('float64'), [5, 9, 3]))
call_2361 = func_1932_call(relay.reshape(const_2360.astype('float64'), [5, 9, 3]))
uop_2362 = relay.cos(call_2359.astype('float64')) # shape=(5, 9, 3)
uop_2364 = relay.cos(call_2361.astype('float64')) # shape=(5, 9, 3)
bop_2368 = relay.logical_and(uop_2362.astype('bool'), relay.reshape(call_2359.astype('bool'), relay.shape_of(uop_2362))) # shape=(5, 9, 3)
bop_2371 = relay.logical_and(uop_2364.astype('bool'), relay.reshape(call_2361.astype('bool'), relay.shape_of(uop_2364))) # shape=(5, 9, 3)
bop_2374 = relay.floor_mod(uop_2362.astype('float64'), relay.reshape(call_2359.astype('float64'), relay.shape_of(uop_2362))) # shape=(5, 9, 3)
bop_2377 = relay.floor_mod(uop_2364.astype('float64'), relay.reshape(call_2361.astype('float64'), relay.shape_of(uop_2364))) # shape=(5, 9, 3)
output = relay.Tuple([bop_2343,const_2360,bop_2368,bop_2374,])
output2 = relay.Tuple([bop_2343,const_2360,bop_2371,bop_2377,])
func_2385 = relay.Function([var_2341,var_2342,], output)
mod['func_2385'] = func_2385
mod = relay.transform.InferType()(mod)
mutated_mod['func_2385'] = func_2385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2385_call = mutated_mod.get_global_var('func_2385')
var_2387 = relay.var("var_2387", dtype = "uint64", shape = (9, 8, 13))#candidate|2387|(9, 8, 13)|var|uint64
var_2388 = relay.var("var_2388", dtype = "uint64", shape = (9, 8, 13))#candidate|2388|(9, 8, 13)|var|uint64
call_2386 = func_2385_call(var_2387,var_2388,)
output = call_2386
func_2389 = relay.Function([var_2387,var_2388,], output)
mutated_mod['func_2389'] = func_2389
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2505 = relay.const([[[4.183138,-9.969834,-4.037365],[4.606494,-2.462010,6.040302],[-3.778780,-8.579214,-5.009355],[-1.621551,-5.486375,-5.835411],[8.323526,4.253753,6.006006],[-5.264557,6.835461,-1.065063],[-4.285326,-2.268668,2.260801],[6.011654,-7.469091,-6.092990]],[[7.786755,-7.771348,3.302300],[-5.785585,2.861242,-0.475896],[-6.430145,1.778195,4.914649],[-0.265896,-0.665440,-4.379563],[-4.848025,8.280662,-7.006653],[9.103314,-2.273224,0.830307],[8.816303,-1.570460,9.070509],[6.528187,7.251012,-5.940325]],[[2.626602,-4.101595,0.305709],[2.901244,-7.858775,7.669477],[3.287459,2.012157,-0.303123],[7.643881,-3.289224,-2.167913],[-3.919553,2.272359,-5.534986],[9.519555,-7.521833,1.165406],[-0.352449,6.393547,-4.404264],[2.823758,-0.559655,0.921535]],[[2.390540,-3.192654,1.473905],[-0.832835,-9.146218,0.608594],[9.454481,-6.156886,0.540693],[9.583726,9.572996,-7.158632],[6.740645,0.459381,-2.450283],[-3.990856,4.939648,8.327006],[8.823064,7.754898,-2.026394],[7.172008,3.124032,6.639990]],[[3.691171,-5.371628,-0.647141],[-8.769412,0.227721,7.475934],[4.725052,3.981736,-7.175033],[4.644854,-5.125507,4.683516],[9.523335,-7.733102,8.921382],[8.425864,7.784697,4.262558],[1.957431,8.461242,8.561823],[-0.436909,3.901270,5.903002]]], dtype = "float32")#candidate|2505|(5, 8, 3)|const|float32
uop_2506 = relay.atan(const_2505.astype('float32')) # shape=(5, 8, 3)
uop_2510 = relay.tan(const_2505.astype('float64')) # shape=(5, 8, 3)
output = relay.Tuple([uop_2506,uop_2510,])
output2 = relay.Tuple([uop_2506,uop_2510,])
func_2525 = relay.Function([], output)
mod['func_2525'] = func_2525
mod = relay.transform.InferType()(mod)
mutated_mod['func_2525'] = func_2525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mutated_mod.get_global_var('func_2525')
call_2526 = func_2525_call()
output = call_2526
func_2527 = relay.Function([], output)
mutated_mod['func_2527'] = func_2527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_2607 = relay.TupleGetItem(func_2525_call(), 1)
call_2608 = relay.TupleGetItem(func_2527_call(), 1)
var_2609 = relay.var("var_2609", dtype = "float64", shape = (5, 8, 3))#candidate|2609|(5, 8, 3)|var|float64
bop_2610 = relay.right_shift(call_2607.astype('uint32'), relay.reshape(var_2609.astype('uint32'), relay.shape_of(call_2607))) # shape=(5, 8, 3)
bop_2613 = relay.right_shift(call_2608.astype('uint32'), relay.reshape(var_2609.astype('uint32'), relay.shape_of(call_2608))) # shape=(5, 8, 3)
func_1896_call = mod.get_global_var('func_1896')
func_1898_call = mutated_mod.get_global_var('func_1898')
call_2616 = relay.TupleGetItem(func_1896_call(relay.reshape(call_2607.astype('float32'), [3, 10, 4])), 0)
call_2617 = relay.TupleGetItem(func_1898_call(relay.reshape(call_2607.astype('float32'), [3, 10, 4])), 0)
func_1761_call = mod.get_global_var('func_1761')
func_1765_call = mutated_mod.get_global_var('func_1765')
var_2628 = relay.var("var_2628", dtype = "uint8", shape = (756,))#candidate|2628|(756,)|var|uint8
call_2627 = relay.TupleGetItem(func_1761_call(relay.reshape(var_2628.astype('uint8'), [9, 12, 7]), relay.reshape(var_2628.astype('uint8'), [9, 12, 7]), ), 2)
call_2629 = relay.TupleGetItem(func_1765_call(relay.reshape(var_2628.astype('uint8'), [9, 12, 7]), relay.reshape(var_2628.astype('uint8'), [9, 12, 7]), ), 2)
output = relay.Tuple([bop_2610,call_2616,call_2627,var_2628,])
output2 = relay.Tuple([bop_2613,call_2617,call_2629,var_2628,])
func_2630 = relay.Function([var_2609,var_2628,], output)
mod['func_2630'] = func_2630
mod = relay.transform.InferType()(mod)
var_2631 = relay.var("var_2631", dtype = "float64", shape = (5, 8, 3))#candidate|2631|(5, 8, 3)|var|float64
var_2632 = relay.var("var_2632", dtype = "uint8", shape = (756,))#candidate|2632|(756,)|var|uint8
output = func_2630(var_2631,var_2632,)
func_2633 = relay.Function([var_2631,var_2632,], output)
mutated_mod['func_2633'] = func_2633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2715 = relay.var("var_2715", dtype = "uint32", shape = ())#candidate|2715|()|var|uint32
var_2716 = relay.var("var_2716", dtype = "uint32", shape = (8, 1, 14))#candidate|2716|(8, 1, 14)|var|uint32
bop_2717 = relay.less(var_2715.astype('bool'), var_2716.astype('bool')) # shape=(8, 1, 14)
output = bop_2717
output2 = bop_2717
func_2731 = relay.Function([var_2715,var_2716,], output)
mod['func_2731'] = func_2731
mod = relay.transform.InferType()(mod)
mutated_mod['func_2731'] = func_2731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2731_call = mutated_mod.get_global_var('func_2731')
var_2733 = relay.var("var_2733", dtype = "uint32", shape = ())#candidate|2733|()|var|uint32
var_2734 = relay.var("var_2734", dtype = "uint32", shape = (8, 1, 14))#candidate|2734|(8, 1, 14)|var|uint32
call_2732 = func_2731_call(var_2733,var_2734,)
output = call_2732
func_2735 = relay.Function([var_2733,var_2734,], output)
mutated_mod['func_2735'] = func_2735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_2784 = relay.TupleGetItem(func_2525_call(), 0)
call_2785 = relay.TupleGetItem(func_2527_call(), 0)
func_2385_call = mod.get_global_var('func_2385')
func_2389_call = mutated_mod.get_global_var('func_2389')
const_2799 = relay.const([[2],[9],[-8],[-5],[8],[4],[-4],[-2],[-4],[7],[-4],[4],[9],[-9],[1],[-7],[-7],[-6],[5],[-3],[7],[9],[-8],[-4],[-3],[-4],[-1],[-6],[8],[-9],[3],[4],[4],[-6],[-1],[-4],[-8],[-2],[5],[7],[-8],[-5],[-3],[-9],[8],[-2],[4],[2],[7],[-7],[-9],[-9],[-3],[1],[8],[5],[3],[4],[3],[-7],[-1],[-2],[6],[-3],[2],[-3],[10],[-7],[-2],[8],[-8],[-3],[3],[7],[3],[6],[4],[9],[2],[4],[1],[-4],[-7],[3],[-1],[7],[-5],[2],[-2],[-3],[2],[8],[-7],[-5],[10],[-2],[5],[1],[9],[3],[-4],[3],[5],[-7],[-2],[-9],[-2],[-2],[6],[8],[7],[7],[6],[-5],[-2],[8],[1],[5],[-5],[-10],[-5],[-3],[9],[-5],[-3],[9],[3],[-3],[3],[-5],[-8],[-3],[4],[-4],[2],[-8],[-6],[5],[-8],[-8],[-5],[2],[-6],[8],[-3],[-6],[-8],[2],[9],[-1],[-10],[10],[-1],[1],[9],[-2],[-10],[-2],[-9],[6],[5],[-5],[-3],[5],[2],[2],[6],[-8],[-9],[8],[-10],[-2],[-7],[7],[-5],[10],[-6],[-3],[1],[-10],[-3],[-5],[-4],[-5],[3],[1],[-6],[-6],[-7],[10],[7],[-4],[-4],[-2],[6],[-10],[-4],[-7],[1],[3],[9],[-1],[-7],[7],[1],[8],[7],[1],[-10],[10],[6],[-4],[-8],[-1],[4],[5],[10],[-8],[3],[10],[5],[2],[-1],[-7],[7],[-4],[9],[3],[10],[-6],[-10],[10],[7],[6],[5],[5],[-6],[-6],[-9],[8],[10],[7],[2],[5],[-6],[8],[2],[-5],[-6],[-10],[-8],[3],[-2],[-3],[-1],[7],[4],[1],[3],[-10],[6],[6],[-6],[10],[1],[2],[-7],[-5],[5],[-9],[8],[-10],[-9],[-10],[6],[3],[10],[4],[10],[7],[-4],[-1],[6],[-9],[2],[9],[-2],[-4],[-9],[-5],[-8],[1],[-8],[3],[8],[7],[1],[-2],[-6],[7],[-9],[-9],[5],[-3],[-10],[1],[5],[-6],[-6],[-8],[1],[8],[-7],[-8],[-3],[2],[1],[-4],[7],[-1],[6],[-4],[4],[3],[-1],[6],[-10],[5],[-9],[10],[-7],[-6],[6],[-3],[7],[-9],[-5],[-1],[3],[1],[-7],[-7],[5],[6],[-2],[-6],[1],[-5],[9],[-9],[3],[-9],[-8],[-9],[6],[-6],[-7],[4],[4],[6],[6],[-5],[3],[5],[2],[-10],[9],[5],[-2],[2],[-2],[-5],[-1],[3],[-6],[-3],[10],[-3],[-10],[6],[-10],[6],[6],[1],[-6],[7],[1],[-9],[8],[-10],[-2],[1],[1],[-6],[10],[-2],[10],[2],[-1],[-5],[-5],[-5],[4],[-9],[-7],[-9],[1],[10],[1],[4],[9],[4],[6],[-7],[-10],[-4],[-5],[-1],[2],[-9],[2],[7],[-7],[-7],[4],[-10],[7],[-4],[3],[-2],[4],[-9],[-6],[5],[-2],[-8],[-2],[10],[-1],[-8],[8],[1],[3],[10],[7],[-10],[-1],[-9],[9],[6],[8],[-8],[6],[-2],[2],[-3],[-9],[6],[10],[-9],[-2],[-9],[7],[-2],[1],[8],[10],[4],[1],[-5],[7],[5],[-2],[1],[1],[-10],[-10],[-5],[-8],[3],[-5],[-1],[-8],[-10],[-2],[-4],[-3],[-8],[-2],[-9],[-8],[3],[2],[4],[7],[1],[8],[-6],[8],[7],[-1],[2],[10],[10],[-6],[4],[-2],[1],[6],[-3],[-3],[-4],[8],[-9],[-6],[-8],[-5],[-2],[8],[-8],[5],[-10],[8],[-10],[-7],[9],[7],[2],[5],[-4],[8],[-9],[-4],[-10],[7],[9],[-10],[8],[10],[-2],[10],[8],[-7],[5],[-2],[3],[2],[-2],[7],[9],[10],[5],[-6],[-7],[10],[3],[1],[7],[4],[7],[2],[-5],[-6],[-1],[1],[-8],[-7],[-10],[-7],[-9],[-8],[-6],[6],[6],[7],[5],[5],[-6],[-8],[-5],[-6],[-9],[-5],[7],[-8],[10],[-3],[-5],[-2],[-8],[-4],[8],[4],[2],[10],[9],[10],[10],[9],[-9],[6],[-2],[-6],[7],[-6],[4],[-9],[-9],[8],[-4],[-9],[-6],[-3],[4],[4],[8],[3],[-6],[-7],[-4],[7],[4],[4],[-10],[7],[3],[-7],[4],[-3],[-3],[-2],[-6],[2],[-3],[-4],[-3],[6],[-8],[5],[5],[2],[-9],[-6],[10],[-1],[-8],[-3],[-9],[6],[-4],[-8],[-3],[6],[-9],[7],[-4],[-3],[-7],[-6],[-10],[-9],[2],[-3],[-7],[-3],[-1],[-9],[7],[6],[-8],[-9],[4],[-5],[-1],[-10],[-8],[9],[1],[10],[-5],[8],[-4],[-10],[2],[-7],[1],[-3],[10],[-5],[-9],[-1],[-4],[-6],[6],[-2],[9],[-5],[-8],[-3],[3],[3],[8],[8],[-3],[8],[-8],[10],[3],[4],[4],[-8],[-7],[-5],[2],[-7],[8],[8],[3],[-5],[-8],[10],[-5],[-5],[-8],[6],[8],[-4],[-9],[-2],[-7],[-5],[-7],[4],[-10],[8],[-3],[4],[-1],[-4],[10],[1],[-6],[-3],[-6],[-5],[3],[9],[-4],[2],[1],[9],[-2],[-1],[4],[2],[-9],[-1],[9],[-9],[10],[9],[5],[-5],[-2],[-2],[9],[-10],[6],[4],[9],[1],[-10],[-3],[8],[-6],[-8],[-4],[-5],[-2],[8],[-4],[5],[5],[-5],[1],[-4],[2],[-7],[-5],[-6],[5],[-7],[9],[-2],[1],[-4],[4],[-8],[3],[10],[7],[-6],[-10],[-3],[10],[-5],[5],[8],[4],[-4],[-7],[-1],[-10],[-1],[-2],[8],[-9],[-8],[9],[-1],[1],[6],[9],[-8],[3],[9],[10],[10],[-9],[-4],[-6],[-10],[-9],[1],[8],[-9],[-1],[6],[10],[-3],[6],[2],[2],[-8],[4],[3],[6],[-4],[-10],[7],[8],[-10],[2],[9],[10],[4],[3],[-3],[-7],[-7],[-5],[-1],[-2],[10],[-2],[3],[-10],[1],[6],[5],[-1],[1],[-4],[-9],[5],[3],[4],[3],[-1],[-9],[7],[-4],[-6],[-2],[-2],[-8],[5],[-7],[6],[-1],[9],[1],[10],[-1],[-6],[-5],[-6],[-1],[-2],[5],[-9],[9],[4],[4],[-1],[1],[10],[7],[-7],[-2],[-3],[-7],[6],[9],[2],[-3],[9],[-4],[9],[5],[6],[4],[-1],[8],[9],[2],[-9],[-1],[8],[2],[-6],[-2],[7],[1],[5],[-8]], dtype = "uint64")#candidate|2799|(936, 1)|const|uint64
call_2798 = relay.TupleGetItem(func_2385_call(relay.reshape(const_2799.astype('uint64'), [9, 8, 13]), relay.reshape(const_2799.astype('uint64'), [9, 8, 13]), ), 0)
call_2800 = relay.TupleGetItem(func_2389_call(relay.reshape(const_2799.astype('uint64'), [9, 8, 13]), relay.reshape(const_2799.astype('uint64'), [9, 8, 13]), ), 0)
func_904_call = mod.get_global_var('func_904')
func_908_call = mutated_mod.get_global_var('func_908')
var_2811 = relay.var("var_2811", dtype = "uint32", shape = (126,))#candidate|2811|(126,)|var|uint32
call_2810 = relay.TupleGetItem(func_904_call(relay.reshape(var_2811.astype('uint32'), [9, 7, 2]), relay.reshape(var_2811.astype('uint32'), [9, 7, 2]), relay.reshape(var_2811.astype('float64'), [9, 7, 2]), ), 0)
call_2812 = relay.TupleGetItem(func_908_call(relay.reshape(var_2811.astype('uint32'), [9, 7, 2]), relay.reshape(var_2811.astype('uint32'), [9, 7, 2]), relay.reshape(var_2811.astype('float64'), [9, 7, 2]), ), 0)
output = relay.Tuple([call_2784,call_2798,const_2799,call_2810,var_2811,])
output2 = relay.Tuple([call_2785,call_2800,const_2799,call_2812,var_2811,])
func_2813 = relay.Function([var_2811,], output)
mod['func_2813'] = func_2813
mod = relay.transform.InferType()(mod)
var_2814 = relay.var("var_2814", dtype = "uint32", shape = (126,))#candidate|2814|(126,)|var|uint32
output = func_2813(var_2814)
func_2815 = relay.Function([var_2814], output)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2931 = relay.var("var_2931", dtype = "uint32", shape = (6, 11, 4))#candidate|2931|(6, 11, 4)|var|uint32
var_2932 = relay.var("var_2932", dtype = "uint32", shape = (6, 11, 4))#candidate|2932|(6, 11, 4)|var|uint32
bop_2933 = relay.not_equal(var_2931.astype('bool'), relay.reshape(var_2932.astype('bool'), relay.shape_of(var_2931))) # shape=(6, 11, 4)
output = bop_2933
output2 = bop_2933
func_2938 = relay.Function([var_2931,var_2932,], output)
mod['func_2938'] = func_2938
mod = relay.transform.InferType()(mod)
mutated_mod['func_2938'] = func_2938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2938_call = mutated_mod.get_global_var('func_2938')
var_2940 = relay.var("var_2940", dtype = "uint32", shape = (6, 11, 4))#candidate|2940|(6, 11, 4)|var|uint32
var_2941 = relay.var("var_2941", dtype = "uint32", shape = (6, 11, 4))#candidate|2941|(6, 11, 4)|var|uint32
call_2939 = func_2938_call(var_2940,var_2941,)
output = call_2939
func_2942 = relay.Function([var_2940,var_2941,], output)
mutated_mod['func_2942'] = func_2942
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3071 = relay.const(-5, dtype = "uint64")#candidate|3071|()|const|uint64
const_3072 = relay.const([[[3,3,-8,-7,3,7,8,8,9,-3,-9,-5,-7,-1,-2,10]],[[-3,-3,6,-6,-9,-9,-3,3,3,10,-1,6,-1,8,8,-1]],[[1,-5,-6,-7,4,-4,-3,10,2,-5,7,10,2,3,6,-2]],[[8,5,6,8,8,-8,6,-6,-10,-1,4,-6,9,-6,-3,-3]],[[4,4,-10,2,4,-6,8,1,2,-6,3,-5,-1,-7,-9,-7]],[[8,5,-4,5,-8,10,-4,-5,-1,5,3,6,8,2,6,2]],[[-1,-2,-5,4,-10,1,-5,10,-9,2,2,-8,3,-10,9,5]],[[-1,6,-5,-1,-5,9,-1,6,4,4,5,-10,3,-9,4,-4]],[[-10,2,1,10,-8,-5,-8,10,8,9,7,-4,-9,-3,-5,-9]],[[7,10,-5,-1,-9,-1,-7,8,3,9,-7,10,-5,1,10,-5]]], dtype = "uint64")#candidate|3072|(10, 1, 16)|const|uint64
bop_3073 = relay.logical_xor(const_3071.astype('uint64'), const_3072.astype('uint64')) # shape=(10, 1, 16)
func_421_call = mod.get_global_var('func_421')
func_424_call = mutated_mod.get_global_var('func_424')
const_3094 = relay.const([-7,8,-2,-10,-1,-10,-9,7,6,-7,-3,7,1,8,-6,4,1,-3,-2,-1,-9,-5,2,8,7,-6,-10,-2,-7,-3,-5,-8,6,9,-4,1,3,-6,10,-3,-1,-9,4,-2,-2,-5,9,-3,-5,-4,-5,4,3,-3,4,-9,-6,8,2,10,6,-10,1,1,-10,-4,-2,-4,-8,7,4,-1,-8,10,-10,3,8,-10,-9,-4,5,-7,-10,-1,10,2,-6,4,-1,-4,-5,-6,2,-1,-6,1,6,-6,9,-5,-5,-2,-10,-7,-9,4,7,6,-6,2,1,-1,1,3,7,10,-3,-5,9,5,-2,-1,-9,-10,-3,6,6,-2,7,9,-3,5,1,10,9,-7,2,-4,8,-7,6,6,-1,1,6,-3,8,5,-6,-9,-10,-10,8,-5,-7,7,6,-7,4,6,-5,8,-4,3,10,9,-10,-2,10,-5,10,10,5,-2,5,-8,-6,6,-3,-4,-2,-1,-9,-1,10,7,7,-5,-7,1,4,2,10,-2,8,-6,-6,-3,9,5,3,1,-1,2,1,10,7,-5,-2,9,-2,2,-1,-4,-10,-2,-3,3,-9,-4,2,-8,-9,-5,-2,1,-1,-2,8,5,-5,3,1,-5,-4,-3,-4,5,-3,-4,-7,9,-10,2,-6,-9,7,-10,9,1,6,-10,-2,-4,5,10,-7,-2,7,-6,-3,6,7,8,-3,1,-2,2,6,-9,-5,7,-5,8,2,-6,9,5,-10,-5,-4,4,9,-8,-1,-10,-5,8,-3,-3,-2,-2,-3,-10,1,-5,4,-1,-5,-10,7,1,-6,-3,7,5,-4,-2,-5,-9,-10,3,6,-6,6,-7,7,-6,-9,1,-4,-7,3,-7,-6,7,5,-9,-6,3,-3,7,-8,-1,2,5,6,4,5,-10,-10,-4,-6,5,8,-4,-6,-8,-3,-1,1,-3,-10,-8,10,4,4,-2,-3,-10,3,-3,-6,3,-2,-8,-10,9,10,5,-5,10,8,-10,9,3,6,2,7,-3,2,1,2,2,-9,-2,5,-6,5,6,-7,-9,5,7,9,-2,-1,4,4,5,-2,-10,10,2,3,1,-6,-3,2,-2,9,-3,-6,-6,-3,-4,10,4,1,7,-3,-5,9,-10,9,-3,6,3,-2,-4,9,-4,3,3,5,9,-10,-8,2,1,2,2,-1,1,3,2,3,-5,3,10,9,5,4,10,3,-9,-7,-2,7,6,9,4,-4,-6,-8,-5,6,6,-5,-5,-8,-3,7,-5,-9,4,1,-9,8,1,4,1,-8,-7,3,-3,-6,6,-2,-10,4,-2,-4,7,8,8,-6,9,7,-8,8,1,-8,1,-10,4,5,-8,-6,-2,6,4,10,5,9,-8,-5,-5,8,4,7,3,-3,-4,7,-3,6,5,1,3,-3,9,2,2,1,9,5,3,-2,-9,3,-3,7,4,8,-10,-10,1,-4,-1,3,7,1,-8,-7,3,-6,8,6,1,-9,7,1,-1,-4,-2,-10,5,-10,-4,7,-6,8,6,6,-8,-10,6,4,8,10,3,10,-3,8,-7,7,-7,7,-8,3,-8,10,6,-1,-10,-4,-3,10,5,5,2,-5,-8,-4,-3,-10,-2,5,4,2,-9,6,3,9,-5,-7,-8,-8,5,3,-9,-9,3,2,-1,1,3,5,-5,-3,1,-7,-4,-5,7,5,1,10,9,3,-6,-4,-4,-6,-5,9,-9,-5,1,2,-8,-5,-10,-2,7,-10,10,4,3,2,9,4,-10,-2,10,1,10,6,-1,10,-4,2,4,-9,-6,-5,-4,6,9,-7,2,7,-3,4,3,-3,6,-2,-1,-7,4,3,-4,-4,-7,-4,-10,-2,5,-1,10,5,7,-6,10,7,-9,4,9,8,10,6,-2,6,-4,4,-9,2,8], dtype = "uint32")#candidate|3094|(720,)|const|uint32
call_3093 = relay.TupleGetItem(func_421_call(relay.reshape(const_3094.astype('uint32'), [10, 9, 8]), relay.reshape(const_3094.astype('uint32'), [10, 9, 8]), ), 0)
call_3095 = relay.TupleGetItem(func_424_call(relay.reshape(const_3094.astype('uint32'), [10, 9, 8]), relay.reshape(const_3094.astype('uint32'), [10, 9, 8]), ), 0)
func_459_call = mod.get_global_var('func_459')
func_462_call = mutated_mod.get_global_var('func_462')
const_3110 = relay.const([-5,-7,-9,7,-1,2,7,-7,5,5,8,10,8,7,6,2,-10,10,-5,7,-1,8,-4,-7,10,3,-3,-1,10,-5,-3,10,5,-3,4,-8,9,-4,-8,2,-1,8,-9,9,7,8,10,-1,5,-7,4,-5,-1,5,-10,-9,-3,-4,-4,-4,8,10,9,3,7,-6,-5,-3,-9,-8,-7,-9,4,5,-8,-10,2,-4,-3,-6,9,3,-2,-2,7,2,-7,-6,-6,-8,9,-1,-7,-3,-4,-5,10,6,-8,-5,-8,-1,-9,5,-8,-10,-10,10,-5,-2,-2,1,6,-6,-8,9,9,1,9,-3,-1,-5,-3,-2,10,7,-2,-5,-6,3,1,9,4,-8,-10,-9,4,-3,1,-7,-1,6,-5,-4,-2,-6,-10,5,-9,-8,-3,-9,1,8,-9,-6,1,6,2,8,6,7,1,4,4,-6,-7,6,8,3,-10,10,10,9,5,-6,-3,8,4,1,-4,-6,3,2,-7,1,-3,-9,6,-6,5,-1,-4,2,3,-7,2,7,-5,-1,3,10,-2,10,4,6,-8,8,7,10,-3,6,-10,5,9,10,7,-9,-8,4,5,-5,-8,-4,3,5,-3,-5,2,-10,3,5,1,-8,5,3,3,-4,1,6,-4,-1,-9,-9,6,6,-9,-1,6,-9,1,-2,2,-3,-4,8,-9,-2,-7,1,-10,5,9,10,-5,-8,-3,-9,6,9,-1,7,-9,-8,10,2,-8,9,-2,5,-8,-4,-3,5,4,-9,-2,-5,-5,-7,-2,-7,7,8,-5,-9,-5,-5,5,-8,-5,-4,-3,-9,-3,5,5,-6,8,-2,-8,-9,3,3,-3,8,10,-6,-2,1,-1,-1,-8,1,-2,2,-5,4,2,-7,-10,4,7,-3,5,4,-2,-4,-3,-8,-9,6,-1,1,8,8,-3,6,-4,-6,-4,-7,-5,-9,-6,-3,9,-9,10,4,10,-3,-4,-2,9,7,10,10,-5,-4,-5,-7,6,5,-8,1,-10,-2,5,-5,1,6,8,-7,-6,-5,9,7,8,1,-8,-7,-1,5,2,-8,1,-6,-3,-1,5,-2,-6,2,-1,-3,7,7,8,4,1,-4,-8,-1,-5,-10,6,7,-8,-9,3,-8,-1,-10,9,10,-6,2,7,4,6,4,-5,6,-9,-2,9,3,-9,1,-7,-1,7,6,9,-8,4,-6,3,2,-9,4,-8,-7,2,-6,1,3,-3,4,6,6,1,9,-6,-8,5,4,-1,-10,-1,5,6,-1,-4,10,4,2,-7,-1,-1,-9,-1,10,4,-8,-8,6,-8,2,2,5,-7,-3,-9,-9,-3,7,-3,-7,-8,-1,-7,-2,-6,10,8,5,-2,2,-5,2,-1,-4,-7,-1,-8,-3,3,-2,10,8,7,5,-2,-1,-10,-4,3,7,-9,-6,3,1,-7,-7,-5,6,8,1,8,8,-6,-1,10,-10,-8,-7,-10,-9,3,3,-2,-2,-10,-4,-9,-8,-5,-6,9,-6,-6,10,-3,-10,-6,4,4,10,-1,4,-9,6,3,8,8,9,-9,10,7,-6,-7,-10,-10,-6,-7,2,-5,9,-8,10,-5,2,7,3,5,6,4,2,-8,-5,-9,2,-3,3,-2,-1,-3,8,-6,3,-4,1,7,-2,-2,-4,5,-6,-1,-2,-4,-7,-8,7,9,5,-3,1,-2,8,1,-6,10,-5,-2,3,1,-3,6,-3,3,8,4,5,4,1,-5,-2,-2,-5,7,2,-7,-7,8,8,7,7,-7,9,-6,-7,-1,8,-7,10,3,3,9,-7,-1,-8,2,2,-8,1,5,-6,6,-10,1,10,-9,7,3,5,-8,-4,6,10,-9,9,6,10,1,8,9,-7,-10,-8,-6,-7,-6,5,-9,8,-5,-3,4,4,5,-9,-1,-5,-3,-4,-8,3,3,9,-4,-1,-6,9,-10,-7,-8,-1,5,10,3,-6,6,-6,-1,1,6,2,6,3,-6,-3,9,3,-2,-1,-6,5,-10,1,7,-5,-5,6,2,-9,10,-5,8,4,-9,-4,-3,7,1,5,1,3,-10,-9,-8,1,2,6,1,1,-4,7,5,3,1,8,-9,-7,-1,9,5,-7,7,-9,5,10,-5,9,2,-10,1,6,8,-6,2,-10,9,-5,3,5,-4,-7,4,10,1,3,-7,-1,4,6,5,2,3,10,-1,-4,-2,3,9,3,3,-2,-7,-5,-10,-5,-7,1,-4,6,6,10,10,-5,9,9,-6,-2,1,3,2,-6,-9,-9,-10,10,-4,5,4,-3,9,-4,-2,-9,-8,4,-2,-9,9,-4,4,4,-4,1,8,2,-7,-2,5,-2,6,2,-6,1,-10,4,-8,-1,-7,2,-10,3,-1,6,8,10,2,2,-7,-5,9,-1,8,-1,6,-8,-8,-2,8,8,6,10,1,7,-6,-5,2,1,-5,4,-8,8,3,-6,9,-7,-1,4,10,10,-6,8,-10,-9,-3,-8,5,-6,7,-3,5,1,6,10,9,-9,-4,4,-8,-10,-7,-2,4,5,10,-8,-6,3,-6,-10,-10,9,-8,1,-7,-8,9,9,10,5,-9,-6,-3,1,-9,-4,9,-6,-8,4,-8,-2,-4,10,-4,-5,9,-10,-10,4,1,10,-3,7,-5,-9,-5,8,1,-5,-3,7,-2,6,9,3,8,-10,-2,-4,-7,-8,3,2,-3,10,7,-10,6,3,6,5,-9,-6,-9,-8,3,-9,-3,2,-9,-6,10,7,3,-1,-6,-4,-1,-10,1,9,7,2,-10,-7,-9,-7,-10,6,6,2,-4,-1,-9,5,10,-3,1,-6,-2,-2,-6,9,-5,1,2,5,2,-1,6,10,-10,-10,10,4,9,-2,-6,2,6,3], dtype = "uint8")#candidate|3110|(1080,)|const|uint8
call_3109 = relay.TupleGetItem(func_459_call(relay.reshape(const_3110.astype('uint8'), [6, 15, 12])), 0)
call_3111 = relay.TupleGetItem(func_462_call(relay.reshape(const_3110.astype('uint8'), [6, 15, 12])), 0)
bop_3112 = relay.floor_divide(bop_3073.astype('float64'), relay.reshape(const_3072.astype('float64'), relay.shape_of(bop_3073))) # shape=(10, 1, 16)
output = relay.Tuple([call_3093,const_3094,call_3109,const_3110,bop_3112,])
output2 = relay.Tuple([call_3095,const_3094,call_3111,const_3110,bop_3112,])
func_3141 = relay.Function([], output)
mod['func_3141'] = func_3141
mod = relay.transform.InferType()(mod)
output = func_3141()
func_3142 = relay.Function([], output)
mutated_mod['func_3142'] = func_3142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3153 = relay.TupleGetItem(func_3141_call(), 0)
call_3154 = relay.TupleGetItem(func_3142_call(), 0)
output = relay.Tuple([call_3153,])
output2 = relay.Tuple([call_3154,])
func_3155 = relay.Function([], output)
mod['func_3155'] = func_3155
mod = relay.transform.InferType()(mod)
mutated_mod['func_3155'] = func_3155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3155_call = mutated_mod.get_global_var('func_3155')
call_3156 = func_3155_call()
output = call_3156
func_3157 = relay.Function([], output)
mutated_mod['func_3157'] = func_3157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_3158 = relay.TupleGetItem(func_2525_call(), 1)
call_3159 = relay.TupleGetItem(func_2527_call(), 1)
uop_3171 = relay.asin(call_3158.astype('float64')) # shape=(5, 8, 3)
uop_3173 = relay.asin(call_3159.astype('float64')) # shape=(5, 8, 3)
uop_3177 = relay.atanh(uop_3171.astype('float32')) # shape=(5, 8, 3)
uop_3179 = relay.atanh(uop_3173.astype('float32')) # shape=(5, 8, 3)
func_1601_call = mod.get_global_var('func_1601')
func_1606_call = mutated_mod.get_global_var('func_1606')
var_3184 = relay.var("var_3184", dtype = "uint16", shape = (4, 420))#candidate|3184|(4, 420)|var|uint16
const_3185 = relay.const([9.122623,-9.355358,-6.107707,2.155070,-7.541320,-2.800690,8.297530,-0.681809,0.495185,-7.440840,-7.650512,1.448857,6.292850,3.747768,-4.225813,-3.750198,6.824866,-2.568772,-8.428203,5.777481,1.208923,-5.855151,7.727598,3.770549,4.640019,-9.811338,-7.489957,-6.119557,-3.585275,6.101925,-9.781407,-8.438352,-2.150656,9.403794,1.630551,9.125551,-3.668475,9.948868,4.791035,-3.956585,-7.151760,-4.249549,-1.264283,-4.847172,-6.507198,6.023910,9.628217,3.760706,0.619468,-0.947850,9.818023,9.585667,0.116133,3.215423,-3.015321,-4.377156,9.190422,4.550933,5.969502,-0.248639,8.757004,-3.794936,-4.562305,4.846325,-9.972956,-4.571384,0.476963,4.306239,-2.029611,3.067440,-2.249452,4.209678,3.322040,-0.615660,-8.333258,-2.037867,-3.371235,-5.199802,-4.007289,-1.900334,2.873949,-0.859008,3.334024,9.935964,9.479841,-6.587340,-7.488533,5.954257,-3.769442,8.604524,-3.375050,8.029351,-4.721317,2.105060,3.280027,-2.435831,-3.002644,2.717915,-8.916335,3.483455,-1.375125,-7.913599,6.525570,-1.963132,4.068171,-1.700671,4.160399,-0.973999,0.941671,3.898506,-2.607452,2.112611,-7.344306,-3.927906,-1.840257,-8.082358,8.432333,2.427621,-0.447156,-1.465783,3.354588,-4.682883,-0.633834,0.062146,-4.124696,-9.683307,-2.367994,-4.652542,4.901409,1.682720,-8.406839,-4.759320,-6.959851,4.055264,4.894281,-1.681522,-4.643558,1.033088,-9.204603,7.655106,0.391728,6.912596,3.039759,7.649875,-5.693261,-3.113290,-6.717232,-2.818067,3.896088,-0.381048,2.404101,7.953797,3.649059,9.127476,4.303824,-9.476967,-3.388391,-8.852145,7.128328,-4.198654,7.018701,3.704007,8.866200,-3.909468,4.686336,0.114328,-7.262934,-8.482500,-8.731593,8.503879,-4.186658,-1.259910,4.071297,1.592278,-5.856586,-6.480828,-0.277652,-2.965598,4.688537,-0.083308,7.365826,2.021573,5.641874,2.040888,8.871170,3.139979,-6.744594,3.061732,9.228744,1.769009,-3.669828,4.323621,3.384885,3.197209,-4.637549,4.871094,1.793817,8.570696,-9.565149,-7.958904,2.139746,-5.136840,-9.648705,8.489671,-6.715096,1.032136,-4.606031,8.749801,-6.245357,-6.313663,6.917152,-0.164387,8.158596,4.574326,-8.317838,5.795122,1.481498,-9.953126,8.840654,4.099619,-9.348394,6.689496,2.879260,-0.610878,5.852027,8.151373,-2.478987,3.088132,3.706149,8.633165,3.877467,-5.118478,-2.972105,-8.341137,-0.588128,3.144063,-7.732858,-7.870736,-9.617159,-9.899232,7.989064,-9.334717,0.412936,6.481298,-3.155142,2.458639,-7.949540,-3.085800,-6.260601,-4.099033,9.593614,0.727336,-2.698352,6.427704,-5.697426,-9.012541,9.206540,1.481126,5.314777,-1.197551,1.389282,9.807997,6.324776,5.208598,-7.303367,-8.081072,3.901473,6.071770,9.625169,-5.954892,-4.892927,-3.736074,4.027103,1.887130,-7.055899,-7.820987,4.930650,6.758950,-1.493497,-6.681728,9.164716,-9.102168,-8.695676,-9.019939,-4.419090,9.592946,-4.844904,5.564854,1.194142,-6.532066,-1.068335,4.981741,-8.422752,-3.615311,9.019053,8.526123,2.307856,-9.590965,9.573002,-2.498147,6.685649,2.449135,5.580464,-9.097858,3.810581,-8.751318,7.200169,9.237832,0.244116,-5.292609,-7.828568,1.382631,6.809894,3.519842,-5.064643,8.326012,9.072348,0.657745,6.176046,9.838796,-6.235765,-1.739349,1.633682,8.476827,2.518352,-2.017781,2.871820,0.849808,2.117022,-1.887247,-6.278381,2.377710,-6.663159,-9.989824,-1.389893,-4.571596,-4.970730,5.380990,-8.428914,-1.291281,-5.662844,4.755190,-2.403025,3.634840,0.243775,1.565586,5.395564,7.758212,-7.000935,5.361271,1.743054,9.929161,-4.313148,6.617428,-3.791844,-0.319042,-8.141190,-3.956385,-7.726843,-7.364404,0.346527,-2.160261,3.404478,-0.334961,3.048223,-0.215781,7.008374,-0.744566,-3.850590,-1.322145,5.836669,-3.567551,-9.582607,-2.601708,-9.382011,-3.522774,9.834070,-9.527436,-7.289621,-6.740764,-3.046319,-4.254811,-7.255630,3.753790,1.656431,2.761783,-8.205650,-0.256405,2.418489,3.658970,-6.982619,4.921640,-2.411541,-6.599511,3.562610,7.386813,6.119162,0.389782,-2.213380,1.252183,9.679654,1.844082,-3.574241,-9.094156,-6.184682,6.713896,-3.498202,-0.230186,-9.332314,5.935427,3.456544,7.552756,7.653914,8.939388,6.369406,1.912514,4.564952,-6.726264,-9.412189,6.701841,-9.870496,1.077417,-3.045483,-9.299657,-7.165930,-7.416720,-4.354133,4.167165,-2.508095,9.478767,4.259933,-0.149183,4.290462,-8.562233,-3.869648,4.108011,-8.132865,3.970176,-3.245427,2.476013,9.829889,4.950201,3.765325,9.518424,4.129361,3.132727,7.400853,9.294566,-0.966039,6.432125,-4.550099,4.060887,9.174332,4.512097,-5.282993,5.025015,-1.112589,4.418220,8.359388,2.258377,-0.102190,4.984799,0.929752,-5.129417,-0.884786,-4.708034,-8.819043,6.213259,-5.366849,-1.695591,3.870183,-4.930216,-9.019417,4.891312,4.750783,-1.877272,7.928013,0.388990,-8.683161,-1.166930,1.374428,7.457708,-5.411883,-4.844672,4.800751,-0.113630,-2.415479,-8.694755,-0.888655,-9.131344,4.357366,5.980055,-3.828451,9.877913,1.409751,4.704726,-7.732879,-8.956179,7.042638,1.909624,8.057823,6.417083,-2.122735,-1.332673,3.890734,-6.848429,7.475344,1.772921,0.084283,8.194994,-7.457823,2.314169,7.643160,7.416509,-4.682344,-7.017349,-4.782896,4.176864,3.388915,-5.837100,-2.232894,4.728904,-5.012760,1.010654,5.957039,-5.794646,7.015779,-4.961357,-6.761660,5.055471,-5.512083,-8.083814,0.573662,-2.408914,-9.931147,9.599577,1.050274,-1.060441,8.687588,8.416240,-2.211155,-9.843504,-8.935968,2.882999,6.700278,7.775452,-9.430033,-5.509036,-7.141007,-5.590977,3.360521,5.845640,5.471570,0.870794,-0.538499,0.038412,-6.962461,-3.969937,9.968137,9.132129,8.192984,-4.237439,5.512114,9.185348,4.691057,-6.118665,-7.008486,-9.147148,5.315362,-2.941212,-0.664343,0.808661,-3.605170,2.738321,4.018883,-8.091291,-9.641672,-9.117966,7.310534,5.593371,9.248560,-7.441624,0.731514,3.736241,-8.440923,-4.282343,-5.271907,1.963924,-7.532306,-0.611741,-1.655809,-9.580217,0.251876,-5.286921,-8.905667,-3.831015,7.126068,2.795703,0.551179,6.978995,7.077519,-9.993276,6.856159,-9.550410,3.219589,1.835526,0.498877,-3.308712,-4.148039,4.767695,-2.861599,4.586516,-9.843366,-0.427104,7.687475,6.233266,-0.936927,-1.245340,-7.022493,9.533844,6.362696,3.314411,-2.592285,-8.374438,-2.345681,2.007693,1.434755,-6.886823,-1.070372,6.899337,-5.153787,-7.384091,-9.756750,7.697957,4.648099,-3.527329,7.670675,5.726622,3.930551,8.649132,6.858296,-9.048337,0.744190,0.064658,-5.378054,4.016076,2.859049,2.398453,6.479766,-2.553851,1.037816,2.629451,-8.235662,-9.804449,-7.483215,2.990621,-4.045458,-4.371826,-8.544903,4.412174,-5.569291,-8.940574,-2.300652,-1.246689,-9.289048,-1.449748,0.144209,-5.828336,-3.327804,-2.691212,-5.183903,9.680973,7.082574,-4.816383,5.505185,-5.203300,2.565144,9.835653,-4.871556,4.852512,5.229073,-8.089202,6.808962,-1.243957,9.876353,6.503474,9.643261,7.499376,-1.154807,-8.381359,6.891437,-9.922454,6.524551,3.441109,0.949219,-4.963364,-1.642717,9.298256,-8.932834,-3.392254,-2.934675,2.875890,-5.864606,6.441190,7.334680,-2.209707,-7.220658,1.987326,-8.587327,-2.934816,6.540984,-3.001180,0.698022,7.420882,-0.359911,-5.330324,7.073254,-1.807708,-6.448952,6.424726,6.137913,-0.116605,-4.520608,-0.981054,-1.723271,-0.185448,6.324586,-1.200235,-8.447106,-6.144549,6.791425,-6.814033,5.961279,-0.616602,-9.664412,9.825165,8.929254,6.534128,8.951860,-7.356573,-1.325728,4.518170,-5.753892,3.325218,4.576709,9.121287,-5.152700,-0.296173,-7.580431,0.824776,-1.613589,-0.076441,-7.654028,3.725252,9.842852,-2.140275,-6.859221,-7.507957,1.247353,6.864063,3.269617,6.858968,-0.499118,2.725235,-8.801709,5.002463,5.793602,-6.088005,-4.509075,6.849624,4.780954,5.423554,2.486812,-1.730556,3.912110,-8.296116,-2.325958,-1.400798,2.484994,8.084056,-7.817224,-6.188590,4.699642,-1.785872,-5.022847,3.132097,0.518093,4.592567,-9.574464,2.936503,2.800771,0.765579,9.303387,5.399193,6.943600,-0.833318,6.872797,-6.665687,9.284963,-4.816163,-4.527390,1.435963,7.565946,6.001274,3.743380,1.519215,-8.762501,-0.117786,3.176283,-1.826709,9.668152,-7.392288,6.228982,0.184081,9.105454,-3.186108,2.154770,5.297025,-3.590239,6.702041,4.535571,-1.422774,0.925721,8.327748,-3.110876,8.811849,-8.559743,1.531278,-9.348042,-6.107418,-4.434326,-4.882271,1.206358,-5.093734,-2.780742,5.386639,0.059500,1.904508,-6.381766,0.136938,-6.145510,-9.841240,-2.095594,-2.845797,-2.991044,8.002844,0.175272,5.764310,3.085134,-9.458689,1.877976,-1.087928,2.600980,1.670334,-1.404522,6.195474,2.499913,-9.976291,2.834319,8.278847,5.908909,-7.908962,-0.906983,6.631189,-8.095638,5.837209,9.671878,-2.910817,9.891890,7.809179,-1.491100,-6.976407,-8.899555,1.341645,2.590248,-2.955473,3.564359,7.523643,-3.742306,-4.405853,-7.319774,-2.773672,3.945503,-0.502392,-0.860642,-7.391544,-8.427827,-4.494992,4.931435,-2.468764,-5.079561,-4.227241,-5.348478,7.432618,-7.194729,8.258319,9.942981,8.365512,-0.638626,9.415842,0.737866,9.682690,-0.145712,-1.374126,2.630668,-6.655421,9.526693,-9.831562,-3.660516,-7.521957,3.954071,6.091470,5.908311,1.703227,6.418729,-2.216706,-1.363545,-5.352168,-0.561400,5.615160,-7.799273,5.341106,-5.500352,2.868592,-3.070986,9.605478,5.650369,-5.094005,7.554104,-9.619827,2.291365,8.646050,-6.375616,-8.074425,9.532266,-3.277615,-2.505882,2.290241,6.857881,4.121471,2.866139,6.189753,-5.268751,3.244759,4.618264,-7.324620,6.265408,0.113025,5.192336,-2.311698,8.197240,-2.468276,-3.034440,-4.843412,-5.381848,2.972463,-3.207041,-6.114171,0.757869,0.215843,6.186500,8.690994,8.453465,-1.387380,-1.445632,1.565310,-4.804231,2.468745,-9.736045,-6.549629,-5.895577,-1.316481,1.765563,5.488600,-0.826462,1.203847,-1.688321,-0.391251,5.798900,-3.903751,8.610560,4.129933,-5.374536,3.268823,-8.245123,6.757967,6.758238,-6.293099,7.877150,3.620558,-9.730616,2.231922,5.893624,-1.108238,3.884587,2.100295,8.340307,-8.114529,4.222285,-4.707705,6.396380,-3.808123,7.070237,6.650219,-3.281395,-6.433730,-3.514207,9.069688,-0.839083,-8.119177,9.530094,-2.543417,0.947006,-8.888057,-9.199772,-8.197847,-6.041941,2.583393,7.513350,-8.884538,4.255056,-2.418512,5.975951,-1.635514,-2.296227,2.251903,-4.483209,-5.650586,-8.406952,-0.521483,9.281513,-9.893275,-6.562200,6.021948,3.327972,2.528142,-4.641829,-6.113007,-9.049933,2.529052,8.814907,-6.707697,9.235895,7.460974,3.751683,-7.009212,6.423535,-7.194934,-2.829944,9.713461,-3.787668,6.087122,9.800461,-0.953816,-1.544275,-2.505374,-2.066195,0.829723,8.461329,9.168166,-8.311302,4.923667,-4.377297,0.048452,3.228311,-9.462927,-0.887102,-6.116617,8.361670,8.049411,9.198734,-4.472003,-2.325894,2.284546,-6.103803,-6.531901,-5.299354,-6.913757,4.624701,-5.375736,5.901400,-0.654910,-2.070602,1.201743,2.375732,8.580497,-4.114592,-4.454096,9.418262,-8.030109,-9.665954,-9.695839,-4.291913,-8.231877,3.494206,-2.810251,8.954781,-5.382986,0.554228,-3.255320,-4.945646,5.384938,4.826495,9.489972,2.737100,-0.651583,-3.827516,8.135812,-0.759918,-6.318229,-6.755299,-8.519388,-3.465788,2.920527,-7.076462,-2.376260,2.750974,3.289848,-0.457515,8.792256,-1.133264,4.995865,-6.592845,6.362690,-8.723615,-9.135192,-2.088927,2.337195,9.520583,-5.919168,-0.951833,-2.173308,7.642148,-7.144845,-8.207593,4.864411,6.739836,3.229216,0.929149,-2.743379,4.314136,-1.289537,8.139553,-5.473461,-6.480625,-6.636305,3.940031,-4.709127,-9.405933,-6.283258,-9.107105,4.464771,5.539436,-9.708967,1.543139,-7.129569,1.432010,-6.893851,-1.307859,-3.275589,-9.020881,1.884933,5.123742,-3.773504,-2.113103,0.383985,-6.710975,6.226730,1.298637,9.835204,-5.022958,5.798851,-8.007543,5.993600,-0.574811,-8.738380], dtype = "float32")#candidate|3185|(1176,)|const|float32
call_3183 = relay.TupleGetItem(func_1601_call(relay.reshape(var_3184.astype('uint16'), [14, 12, 10]), relay.reshape(const_3185.astype('float32'), [1176,]), relay.reshape(var_3184.astype('float64'), [14, 12, 10]), ), 3)
call_3186 = relay.TupleGetItem(func_1606_call(relay.reshape(var_3184.astype('uint16'), [14, 12, 10]), relay.reshape(const_3185.astype('float32'), [1176,]), relay.reshape(var_3184.astype('float64'), [14, 12, 10]), ), 3)
func_1601_call = mod.get_global_var('func_1601')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_3187 = relay.TupleGetItem(func_1601_call(relay.reshape(var_3184.astype('uint16'), [14, 12, 10]), relay.reshape(const_3185.astype('float32'), [1176,]), relay.reshape(var_3184.astype('float64'), [14, 12, 10]), ), 4)
call_3188 = relay.TupleGetItem(func_1606_call(relay.reshape(var_3184.astype('uint16'), [14, 12, 10]), relay.reshape(const_3185.astype('float32'), [1176,]), relay.reshape(var_3184.astype('float64'), [14, 12, 10]), ), 4)
func_1601_call = mod.get_global_var('func_1601')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_3191 = relay.TupleGetItem(func_1601_call(relay.reshape(var_3184.astype('uint16'), [14, 12, 10]), relay.reshape(const_3185.astype('float32'), [1176,]), relay.reshape(var_3184.astype('float64'), [14, 12, 10]), ), 6)
call_3192 = relay.TupleGetItem(func_1606_call(relay.reshape(var_3184.astype('uint16'), [14, 12, 10]), relay.reshape(const_3185.astype('float32'), [1176,]), relay.reshape(var_3184.astype('float64'), [14, 12, 10]), ), 6)
bop_3200 = relay.logical_or(uop_3177.astype('bool'), relay.reshape(uop_3171.astype('bool'), relay.shape_of(uop_3177))) # shape=(5, 8, 3)
bop_3203 = relay.logical_or(uop_3179.astype('bool'), relay.reshape(uop_3173.astype('bool'), relay.shape_of(uop_3179))) # shape=(5, 8, 3)
output = relay.Tuple([call_3183,var_3184,const_3185,call_3187,call_3191,bop_3200,])
output2 = relay.Tuple([call_3186,var_3184,const_3185,call_3188,call_3192,bop_3203,])
func_3208 = relay.Function([var_3184,], output)
mod['func_3208'] = func_3208
mod = relay.transform.InferType()(mod)
var_3209 = relay.var("var_3209", dtype = "uint16", shape = (4, 420))#candidate|3209|(4, 420)|var|uint16
output = func_3208(var_3209)
func_3210 = relay.Function([var_3209], output)
mutated_mod['func_3210'] = func_3210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_3261 = relay.TupleGetItem(func_2525_call(), 0)
call_3262 = relay.TupleGetItem(func_2527_call(), 0)
uop_3266 = relay.cosh(call_3261.astype('float32')) # shape=(5, 8, 3)
uop_3268 = relay.cosh(call_3262.astype('float32')) # shape=(5, 8, 3)
output = relay.Tuple([uop_3266,])
output2 = relay.Tuple([uop_3268,])
func_3277 = relay.Function([], output)
mod['func_3277'] = func_3277
mod = relay.transform.InferType()(mod)
mutated_mod['func_3277'] = func_3277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3277_call = mutated_mod.get_global_var('func_3277')
call_3278 = func_3277_call()
output = call_3278
func_3279 = relay.Function([], output)
mutated_mod['func_3279'] = func_3279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_3296 = relay.TupleGetItem(func_2525_call(), 0)
call_3297 = relay.TupleGetItem(func_2527_call(), 0)
uop_3310 = relay.erf(call_3296.astype('float32')) # shape=(5, 8, 3)
uop_3312 = relay.erf(call_3297.astype('float32')) # shape=(5, 8, 3)
func_2938_call = mod.get_global_var('func_2938')
func_2942_call = mutated_mod.get_global_var('func_2942')
var_3317 = relay.var("var_3317", dtype = "uint32", shape = (264,))#candidate|3317|(264,)|var|uint32
call_3316 = func_2938_call(relay.reshape(var_3317.astype('uint32'), [6, 11, 4]), relay.reshape(var_3317.astype('uint32'), [6, 11, 4]), )
call_3318 = func_2938_call(relay.reshape(var_3317.astype('uint32'), [6, 11, 4]), relay.reshape(var_3317.astype('uint32'), [6, 11, 4]), )
output = relay.Tuple([uop_3310,call_3316,var_3317,])
output2 = relay.Tuple([uop_3312,call_3318,var_3317,])
func_3319 = relay.Function([var_3317,], output)
mod['func_3319'] = func_3319
mod = relay.transform.InferType()(mod)
mutated_mod['func_3319'] = func_3319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3320 = relay.var("var_3320", dtype = "uint32", shape = (264,))#candidate|3320|(264,)|var|uint32
func_3319_call = mutated_mod.get_global_var('func_3319')
call_3321 = func_3319_call(var_3320)
output = call_3321
func_3322 = relay.Function([var_3320], output)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3354 = relay.TupleGetItem(func_3141_call(), 0)
call_3355 = relay.TupleGetItem(func_3142_call(), 0)
output = call_3354
output2 = call_3355
func_3356 = relay.Function([], output)
mod['func_3356'] = func_3356
mod = relay.transform.InferType()(mod)
output = func_3356()
func_3357 = relay.Function([], output)
mutated_mod['func_3357'] = func_3357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3364 = relay.TupleGetItem(func_3141_call(), 3)
call_3365 = relay.TupleGetItem(func_3142_call(), 3)
output = relay.Tuple([call_3364,])
output2 = relay.Tuple([call_3365,])
func_3378 = relay.Function([], output)
mod['func_3378'] = func_3378
mod = relay.transform.InferType()(mod)
output = func_3378()
func_3379 = relay.Function([], output)
mutated_mod['func_3379'] = func_3379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3155_call = mod.get_global_var('func_3155')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3412 = relay.TupleGetItem(func_3155_call(), 0)
call_3413 = relay.TupleGetItem(func_3157_call(), 0)
output = call_3412
output2 = call_3413
func_3417 = relay.Function([], output)
mod['func_3417'] = func_3417
mod = relay.transform.InferType()(mod)
mutated_mod['func_3417'] = func_3417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mutated_mod.get_global_var('func_3417')
call_3418 = func_3417_call()
output = call_3418
func_3419 = relay.Function([], output)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_3454 = relay.TupleGetItem(func_2525_call(), 1)
call_3455 = relay.TupleGetItem(func_2527_call(), 1)
uop_3460 = relay.cos(call_3454.astype('float64')) # shape=(5, 8, 3)
uop_3462 = relay.cos(call_3455.astype('float64')) # shape=(5, 8, 3)
func_3155_call = mod.get_global_var('func_3155')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3464 = relay.TupleGetItem(func_3155_call(), 0)
call_3465 = relay.TupleGetItem(func_3157_call(), 0)
bop_3468 = relay.floor_divide(uop_3460.astype('float32'), relay.reshape(call_3454.astype('float32'), relay.shape_of(uop_3460))) # shape=(5, 8, 3)
bop_3471 = relay.floor_divide(uop_3462.astype('float32'), relay.reshape(call_3455.astype('float32'), relay.shape_of(uop_3462))) # shape=(5, 8, 3)
func_2630_call = mod.get_global_var('func_2630')
func_2633_call = mutated_mod.get_global_var('func_2633')
const_3473 = relay.const([-1,-1,-1,-7,4,-1,4,5,4,7,9,9,-6,-1,3,3,6,2,-7,-6,-6,-7,9,-10,5,6,-5,-9,5,-2,-1,-2,-9,4,3,6,-7,2,4,-8,1,-2,-1,7,-2,-2,-4,-1,9,10,5,3,-8,9,-5,10,1,2,2,5,10,10,-2,-8,6,2,1,-5,-8,-10,1,1,-1,-3,-4,-8,8,10,-9,-10,6,8,7,8,-10,-10,-10,3,6,4,-6,8,-2,-3,-7,-8,5,2,-3,-7,1,-4,-10,2,-2,-10,1,-2,6,-6,8,-6,1,-7,10,-7,-3,10,7,3,-10,-10,9,-6,7,10,7,10,-5,4,3,4,4,1,-8,3,-7,9,-4,3,-8,-9,-8,-4,-8,-8,-2,8,10,7,6,-4,-10,-1,7,-6,-6,9,-5,-8,-1,-5,3,-7,7,-9,-4,5,7,10,1,-8,-2,2,-9,-2,1,3,3,6,-6,2,-9,3,5,1,-1,3,-5,-1,-5,7,10,-9,2,2,2,5,1,9,-3,-1,1,-6,-7,3,9,2,-1,-2,-8,-8,-8,-4,-3,6,5,-8,9,5,2,2,7,1,-4,-9,-9,5,-2,-6,-3,-2,-10,-7,6,-7,-7,2,-2,3,7,-10,-1,-4,3,-1,-4,5,3,1,1,10,8,5,6,-5,10,-3,-10,5,9,-10,-8,5,6,-3,-7,-8,-6,4,-8,8,4,-10,-8,-8,10,-10,-2,2,-2,-8,7,-3,-8,6,5,6,5,6,1,-8,1,-1,-2,2,5,4,-5,-8,1,-8,10,-8,10,-6,-7,1,-2,-10,5,-10,-3,4,-1,-2,8,1,-6,1,-10,-6,-1,4,1,-10,7,7,-4,1,-5,8,-4,3,7,-7,-3,5,-2,-9,-4,-7,9,-2,-9,8,5,-9,-8,-1,6,-3,1,-3,8,5,-3,4,8,-4,-10,-1,2,-6,-2,-5,-6,-7,8,-1,-4,-10,-1,-8,2,-6,-6,-9,-8,-9,1,1,4,-4,10,1,-2,-10,9,1,-1,6,-7,8,-10,-10,-10,-8,-8,7,10,1,-10,4,-8,1,-6,-7,-1,-10,1,-2,8,-7,4,6,3,7,-8,-3,8,6,-2,-8,-9,2,6,-2,5,3,-5,-5,-6,-4,-5,-3,-2,8,-3,6,5,-3,-5,-7,6,10,-9,-2,9,-3,2,9,4,-9,-6,-8,-7,1,-6,10,8,-5,-7,6,-2,2,3,-7,3,-6,3,1,7,-1,10,-6,5,7,-10,-10,2,-4,7,3,-9,10,-7,5,-1,-8,10,-1,-7,7,-1,-8,10,7,-7,-5,1,2,6,-1,-4,10,-3,8,-9,-9,-1,3,-1,7,5,4,-9,4,-4,2,4,-1,-3,10,2,-2,6,-4,-10,-5,-3,8,7,-7,9,-8,-1,3,-6,4,10,-2,-3,-3,5,5,9,2,-9,7,-8,2,-4,1,-8,9,-5,6,5,-1,7,2,3,-2,-5,-10,-5,-4,9,-8,-2,-7,-6,-5,2,5,5,-7,-3,1,-9,-3,-5,-1,2,-3,6,3,3,-7,5,-6,1,-7,4,4,-10,8,-6,4,-10,-4,7,8,-5,-8,-7,9,10,2,-5,-7,-7,-2,4,1,-3,10,-2,3,-5,6,-5,-2,2,-9,2,3,9,-2,-3,6,-8,7,7,7,-1,6,9,-3,1,7,-7,3,-8,-8,-8,9,3,5,-8,-3,-7,-6,-4,7,-2,9,7,-5,8,7,2,-1,-2,6,-1,8,6,4,5,-5,6,-6,9,9,7,-5,-10,3,-5,1,-7,-3,4,-3,9,-6,4,-9,5,2,3,-2,-4,-6,-5,-4,-7,5,6,-10,8,1,10,-4,-7,-7,-4,3,6,-4,8,3,-6,-7,-6,7,-5,-5,10,9,8,10,-7,-7,-4,-3,-10,8,-5,-8,3,5,6,10,1,-5,-7,10,-8,8,9,-6,6,-5,-8,1,8,7,6,-2,-9,6,2,2], dtype = "uint8")#candidate|3473|(756,)|const|uint8
call_3472 = relay.TupleGetItem(func_2630_call(relay.reshape(bop_3468.astype('float64'), [5, 8, 3]), relay.reshape(const_3473.astype('uint8'), [756,]), ), 2)
call_3474 = relay.TupleGetItem(func_2633_call(relay.reshape(bop_3468.astype('float64'), [5, 8, 3]), relay.reshape(const_3473.astype('uint8'), [756,]), ), 2)
output = relay.Tuple([call_3464,bop_3468,call_3472,const_3473,])
output2 = relay.Tuple([call_3465,bop_3471,call_3474,const_3473,])
func_3476 = relay.Function([], output)
mod['func_3476'] = func_3476
mod = relay.transform.InferType()(mod)
mutated_mod['func_3476'] = func_3476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3476_call = mutated_mod.get_global_var('func_3476')
call_3477 = func_3476_call()
output = call_3477
func_3478 = relay.Function([], output)
mutated_mod['func_3478'] = func_3478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3155_call = mod.get_global_var('func_3155')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3479 = relay.TupleGetItem(func_3155_call(), 0)
call_3480 = relay.TupleGetItem(func_3157_call(), 0)
var_3483 = relay.var("var_3483", dtype = "bool", shape = (10, 9, 8))#candidate|3483|(10, 9, 8)|var|bool
bop_3484 = relay.bitwise_or(call_3479.astype('int32'), relay.reshape(var_3483.astype('int32'), relay.shape_of(call_3479))) # shape=(10, 9, 8)
bop_3487 = relay.bitwise_or(call_3480.astype('int32'), relay.reshape(var_3483.astype('int32'), relay.shape_of(call_3480))) # shape=(10, 9, 8)
func_2813_call = mod.get_global_var('func_2813')
func_2815_call = mutated_mod.get_global_var('func_2815')
var_3501 = relay.var("var_3501", dtype = "uint32", shape = (126,))#candidate|3501|(126,)|var|uint32
call_3500 = relay.TupleGetItem(func_2813_call(relay.reshape(var_3501.astype('uint32'), [126,])), 0)
call_3502 = relay.TupleGetItem(func_2815_call(relay.reshape(var_3501.astype('uint32'), [126,])), 0)
func_1292_call = mod.get_global_var('func_1292')
func_1296_call = mutated_mod.get_global_var('func_1296')
var_3504 = relay.var("var_3504", dtype = "int32", shape = ())#candidate|3504|()|var|int32
var_3505 = relay.var("var_3505", dtype = "int32", shape = (264,))#candidate|3505|(264,)|var|int32
const_3506 = relay.const([9,1,8,9,4,-5,-9,4,7,-7,-9,-10,-1,-4,-5,9,7,-4,-1,8,-10,-6,7,4,7,2,10,-5,-3,1,3,3,-2,-4,-2,10,7,-3,-5,10,-10,-8,-6,-1,-9,6,2,2,8,9,-8,4,-5,2,3,4,6,-4,-4,-9,7,4,7,-7,2,7,-7,7,-7,3,-3,-5,-6,9,-4,-2,-8,-4,4,1,7,8,-6,-5,-6,-3,5,5,-9,-3,7,-5,4,1,1,4,8,4,-8,9,7,-2,1,6,-4,-4,4,7,1,6,7,-9,-3,-1,2,-5,-3,3,-4,4,8,10,-7,10,4,9,-5,8,-3,-8,-10,-6,-10,9,-10,6,2,9,-3,-7,-4,-10,-7,6,-9,7,-9,-4,-3,-5,-5,10,6,-7,8,-8,4,-1,8,3,4,-7,-2,-2,-4,-8,7,-6,-9,6,9,-2,-3,4,-2,9,6,9,-6,4,9,9,-10,-10,8,-8,9,-1,-5,-4,-3,-3,6,8,-4,-2,-2,6,7,-5,-4,-3,-3,5,-1,-4,-1,-3,10,1,-2,4,5,10,-10,9,7,4,6,7,10,2,-2,-8,-6,6,-3,4,2,2,-10,-3,2,-7,9,-6,7,8,-2,-2,7,-6,8,-10,7,-2,4,-2,-3,5,-4,10,-10,3,-7,10,-2,-6,-8,1,-2,-2,8,-1,4,-2,-8,10,-1,9,7,-3,8,9,10,3,3,-8,-1,2,6,2,6,-1,-4,-8,2,9,-3,-7,-8,-6,-8,-4,1,2,9,1,-7,-4,-5,-9,-4,-8,-7,-3,-7,-8,1,-4,7,10,-2,-3,5,10,-10,8,9,4,-3,1,-3,-7,-10,-7,-8,2,1,-1,-3,-6,-9,-8,2,-2,-8,-5,3,-7,4,9,2,4,-5,10,3,10,2,-10,-1,-9,7,-1,-7,-3,-2,-5,-2,-8,3,4,5,9,3,2,-2,-2,-7,9,-3,5,5,-2,8,-3,-9,8,-2,-3,-8,6,8,-9,2,8,-2,-3,-2,3,6,-2,4,10,1,-10,6,9,5,8,-7,5,9,6,4,5,7,6,9,9,7,9,5,-9,7,8,-4,-3,2,6,9,7,-9,9,-6,10,-8,-7,8,-3,-3,-8,5,-10,1,6,-5,7,-5,2,5,-5,10,5,-9,-4,1,-9,-5,5,3,9,-4,10,3,1,3,-2,-7,4,7,-8,1,-5,6,-6,1,7,-2,-7,10,-6,3,9,-4,7,2,-8,-5,-1,2,8,-1,-3,3,-9,-7,7,2,1,8,7,-5,10,9,9,-9,7,3,4,-9,6,-7,-5,8,4,3,-3,-10,8,-6,-5,3,4,3,1,-10,-7,9,-7,7,2,-7,-10,-10,8,-5,-1,-4,-6,5,-8,-4,4,-6,-2,-4,-7,-7,-8,7,-3,9,-3,-2,-2,8,-2,5,-8,8,-6,-2,1,-1,-8,-5,3,6,-8,6,-5,-10,-7,-6,-5,-2,-7,7,-6,9,9,5,-9,-9,-1,-9,-9,5,3,10,-6,-1,9,-2,-8,-6,-4,-8,-4,-4,-2,-1,-1,9,-10,3,3,8,4,4,-1,-9,-3,-2,4,2,-6,-8,-3,-10,-6,-8,7,-9,-8,-2,-5,-5,-8,3,-10,9,-2,-4,4,6,9,6,-10,6,10,-6,-9,-1,-10,10,-1,-8,5,-8,6,-8,-7,-10,3,-4,5,8,-5,-10,5,-4,8,1,-4,4,-10,4,9,4,-1,5,-2,-10,1,-1,2,5,5,-5,3,-8,2,-2,-9,4,-9,-6,3,-8,-7,-3,4,1,3,10,-5,-1,-4,1,1,3,-6,1,-6,6,-9,4,-6,-7,-1,7,7,5,4,3,1,7,5,-7,-8,4,-3,-5,5,9,6,4,-5,5,4,7,3,5,2,9,-6,-1,3,-9,5,6,6,-7,8,-2,-9,2,-3,-10,-10,8,3,-6,-5,-7,-2,4,-3,-9,-4,-5,-10,-6,3,-9,-8,8,4,8,-6,-2,7,6,-8,1,8,6,3,2,-2,1,-7,9,-3,-3,-3,-9,10,8,-2,1,-5,9,-10,5,1,-10,-5,2,-8,-6,9,-1,3,-10,-10,-5,9,-4,7,1,-7,8,1,-1,6,-2,-5,7,-4,-2,-7,9,5,3,7,9,6,-8,-9,6,6,-10,10,-10,-2,9,3,5,3,9,-1,-4,6,-4,10,-10,-9,-1,8,5,4,-1,-2,-5,4,3,-2,4,10,3,-9,8,3,-9,9,-3,6,1,10,-2,-2,10,3,-4,-2,-1,-1,-9,6,-7,1,-1,-4,4,-10,8,1,-10,4,7,2,-8,-9,-9,-6,2,-6,4,-7,6,5,1,-4,2,4,3,-9,1,10,3,-4,-3,9,-10,6,-6,-10,6,-10,1,8,-2,-6,5,10,-4,-4,-7,-4,1,-5,-8,-4,10,-5,-7,-8,1,1,2,5,-8,-2,-6,-5,4,-4,6,1,9,8,10,-7,10,1,9,-7,-7,-3,-5,9,-8,-6,-10,-10,-2,7,4,6,-9,-5,3,5,-1,4,-9,-9,-8,1,1,-7,2,6,-5,8,-1,4,5,7,-10,-3,-6,5,-7,-9,10,1,9,7,-2,-10,10,-9,3,-2,-7,-9,-7,-6,-1,-3,3,2,-3,-6,6,10,-9,-10,6,-5,-6,5,-1,10,-8,-4,8,2,6,10,5,-5,-10,-9,4,-7,-2,-6,5,-6,10,3,5,1,5,-1,-1,9,1,6,-3,8,7,-8,-9,-5,-2,6,6,-9,9,3,8,1,-1,-7,-2,-10,8,-1,-10,-5,-7,-2,-10,-5,-2,-1,10,10,-1,-6,1,-1,-3,5], dtype = "uint8")#candidate|3506|(1080,)|const|uint8
call_3503 = relay.TupleGetItem(func_1292_call(relay.reshape(var_3504.astype('int32'), []), relay.reshape(var_3505.astype('int32'), [12, 2, 11]), relay.reshape(const_3506.astype('uint8'), [1080,]), ), 2)
call_3507 = relay.TupleGetItem(func_1296_call(relay.reshape(var_3504.astype('int32'), []), relay.reshape(var_3505.astype('int32'), [12, 2, 11]), relay.reshape(const_3506.astype('uint8'), [1080,]), ), 2)
output = relay.Tuple([bop_3484,call_3500,var_3501,call_3503,var_3504,var_3505,const_3506,])
output2 = relay.Tuple([bop_3487,call_3502,var_3501,call_3507,var_3504,var_3505,const_3506,])
func_3510 = relay.Function([var_3483,var_3501,var_3504,var_3505,], output)
mod['func_3510'] = func_3510
mod = relay.transform.InferType()(mod)
mutated_mod['func_3510'] = func_3510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3510_call = mutated_mod.get_global_var('func_3510')
var_3512 = relay.var("var_3512", dtype = "bool", shape = (10, 9, 8))#candidate|3512|(10, 9, 8)|var|bool
var_3513 = relay.var("var_3513", dtype = "uint32", shape = (126,))#candidate|3513|(126,)|var|uint32
var_3514 = relay.var("var_3514", dtype = "int32", shape = ())#candidate|3514|()|var|int32
var_3515 = relay.var("var_3515", dtype = "int32", shape = (264,))#candidate|3515|(264,)|var|int32
call_3511 = func_3510_call(var_3512,var_3513,var_3514,var_3515,)
output = call_3511
func_3516 = relay.Function([var_3512,var_3513,var_3514,var_3515,], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3155_call = mod.get_global_var('func_3155')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3537 = relay.TupleGetItem(func_3155_call(), 0)
call_3538 = relay.TupleGetItem(func_3157_call(), 0)
var_3541 = relay.var("var_3541", dtype = "bool", shape = (10, 9, 8))#candidate|3541|(10, 9, 8)|var|bool
bop_3542 = relay.subtract(call_3537.astype('float64'), relay.reshape(var_3541.astype('float64'), relay.shape_of(call_3537))) # shape=(10, 9, 8)
bop_3545 = relay.subtract(call_3538.astype('float64'), relay.reshape(var_3541.astype('float64'), relay.shape_of(call_3538))) # shape=(10, 9, 8)
output = bop_3542
output2 = bop_3545
func_3546 = relay.Function([var_3541,], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
mutated_mod['func_3546'] = func_3546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3547 = relay.var("var_3547", dtype = "bool", shape = (10, 9, 8))#candidate|3547|(10, 9, 8)|var|bool
func_3546_call = mutated_mod.get_global_var('func_3546')
call_3548 = func_3546_call(var_3547)
output = call_3548
func_3549 = relay.Function([var_3547], output)
mutated_mod['func_3549'] = func_3549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3356_call = mod.get_global_var('func_3356')
func_3357_call = mutated_mod.get_global_var('func_3357')
call_3599 = func_3356_call()
call_3600 = func_3356_call()
var_3603 = relay.var("var_3603", dtype = "bool", shape = (10, 9, 8))#candidate|3603|(10, 9, 8)|var|bool
bop_3604 = relay.add(call_3599.astype('float64'), relay.reshape(var_3603.astype('float64'), relay.shape_of(call_3599))) # shape=(10, 9, 8)
bop_3607 = relay.add(call_3600.astype('float64'), relay.reshape(var_3603.astype('float64'), relay.shape_of(call_3600))) # shape=(10, 9, 8)
output = bop_3604
output2 = bop_3607
func_3608 = relay.Function([var_3603,], output)
mod['func_3608'] = func_3608
mod = relay.transform.InferType()(mod)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3609 = relay.var("var_3609", dtype = "bool", shape = (10, 9, 8))#candidate|3609|(10, 9, 8)|var|bool
func_3608_call = mutated_mod.get_global_var('func_3608')
call_3610 = func_3608_call(var_3609)
output = call_3610
func_3611 = relay.Function([var_3609], output)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3277_call = mod.get_global_var('func_3277')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3657 = relay.TupleGetItem(func_3277_call(), 0)
call_3658 = relay.TupleGetItem(func_3279_call(), 0)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3671 = func_3417_call()
call_3672 = func_3417_call()
const_3680 = relay.const([[[True,True,True,False,False,True,False,False],[True,False,True,False,True,False,False,False],[False,False,False,False,False,True,True,False],[False,False,True,False,True,False,False,False],[False,True,True,False,False,True,False,True],[True,True,True,False,True,True,False,True],[False,False,True,False,False,True,False,False],[True,True,False,False,False,True,False,False],[False,True,False,True,False,False,False,False]],[[True,False,False,True,True,True,False,True],[True,False,False,True,True,False,False,False],[False,False,False,False,True,False,False,False],[False,False,True,False,False,True,False,True],[True,True,False,True,False,True,False,True],[True,False,True,False,True,True,False,True],[True,False,True,True,False,True,True,False],[True,False,True,True,True,True,False,True],[False,True,False,False,False,False,False,True]],[[True,True,True,False,False,True,True,True],[True,False,False,True,True,True,False,False],[True,True,True,True,False,True,False,True],[False,False,True,False,False,True,True,True],[False,False,True,False,True,False,False,False],[False,False,False,True,False,False,True,True],[True,False,False,True,False,False,False,False],[False,False,True,True,True,False,False,False],[True,False,False,False,False,False,True,True]],[[True,True,False,True,True,False,False,False],[False,True,True,False,True,False,True,False],[False,False,True,True,False,True,True,True],[True,False,False,False,False,True,True,True],[False,True,False,True,True,True,True,False],[False,False,False,True,False,True,True,False],[True,False,False,False,False,True,True,True],[True,True,True,False,False,False,True,False],[False,False,True,True,True,False,True,True]],[[True,False,False,True,True,False,False,True],[False,False,True,False,True,False,False,True],[False,True,True,False,False,False,True,False],[False,False,True,True,True,True,False,False],[True,True,True,False,True,True,True,True],[True,False,False,True,True,False,False,True],[True,True,True,True,True,False,True,False],[True,True,True,False,False,False,False,True],[True,True,True,False,True,True,True,False]],[[True,True,True,False,True,True,True,True],[False,True,False,False,True,False,False,False],[True,True,False,True,True,False,False,False],[False,True,False,True,False,False,True,False],[True,True,False,True,False,False,False,True],[True,False,True,False,False,True,True,True],[False,True,False,False,False,False,False,False],[False,True,True,False,True,False,False,False],[True,True,True,False,True,True,True,False]],[[False,False,False,False,True,True,False,True],[True,False,True,True,True,False,True,True],[True,False,True,False,False,False,False,False],[True,False,False,False,True,True,False,True],[True,False,False,False,False,False,True,True],[False,True,False,True,True,True,False,False],[True,False,False,True,False,False,True,True],[False,True,True,False,False,True,True,True],[True,True,True,True,True,True,False,False]],[[False,False,True,True,True,False,True,False],[False,True,False,False,True,True,True,False],[True,False,False,True,True,True,True,False],[True,False,False,False,True,False,False,True],[True,False,False,False,False,True,True,False],[False,True,False,False,False,True,False,True],[True,False,True,False,True,False,False,False],[False,False,True,False,True,True,True,False],[True,False,False,True,True,True,True,False]],[[False,True,False,True,False,False,False,True],[False,True,True,True,True,False,False,False],[False,True,False,True,False,True,True,False],[True,False,True,True,True,True,True,False],[False,True,True,True,True,True,False,True],[True,False,False,False,False,False,False,False],[True,False,False,False,False,True,False,True],[True,True,False,True,False,True,True,True],[False,False,False,True,True,False,False,False]],[[False,True,True,False,True,True,True,True],[False,True,True,False,False,True,True,False],[False,False,True,True,True,False,False,False],[False,False,True,True,False,False,False,True],[True,True,True,False,False,False,True,False],[True,False,False,False,True,False,False,False],[False,True,True,True,True,True,True,True],[True,True,False,True,True,False,False,False],[True,False,False,False,False,False,False,False]]], dtype = "bool")#candidate|3680|(10, 9, 8)|const|bool
bop_3681 = relay.mod(call_3671.astype('float32'), relay.reshape(const_3680.astype('float32'), relay.shape_of(call_3671))) # shape=(10, 9, 8)
bop_3684 = relay.mod(call_3672.astype('float32'), relay.reshape(const_3680.astype('float32'), relay.shape_of(call_3672))) # shape=(10, 9, 8)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_3688 = relay.TupleGetItem(func_2525_call(), 0)
call_3689 = relay.TupleGetItem(func_2527_call(), 0)
bop_3690 = relay.greater_equal(const_3680.astype('bool'), relay.reshape(call_3671.astype('bool'), relay.shape_of(const_3680))) # shape=(10, 9, 8)
bop_3693 = relay.greater_equal(const_3680.astype('bool'), relay.reshape(call_3672.astype('bool'), relay.shape_of(const_3680))) # shape=(10, 9, 8)
output = relay.Tuple([call_3657,bop_3681,call_3688,bop_3690,])
output2 = relay.Tuple([call_3658,bop_3684,call_3689,bop_3693,])
func_3703 = relay.Function([], output)
mod['func_3703'] = func_3703
mod = relay.transform.InferType()(mod)
mutated_mod['func_3703'] = func_3703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3703_call = mutated_mod.get_global_var('func_3703')
call_3704 = func_3703_call()
output = call_3704
func_3705 = relay.Function([], output)
mutated_mod['func_3705'] = func_3705
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3733 = relay.const([[[-8.403742],[0.322778],[-3.601824],[-6.607432],[-5.428644],[3.199159],[-8.900416],[-5.559865],[-3.848925],[-3.147540],[1.783401]],[[-4.798142],[7.928576],[3.057971],[-8.670191],[-9.047814],[-4.528303],[-8.893757],[4.744457],[8.813921],[1.726065],[-7.373579]],[[0.683200],[-7.564811],[-2.876716],[-8.851865],[3.284682],[-4.981365],[-9.969542],[8.444150],[7.810638],[5.670267],[6.971115]],[[-5.365212],[4.337620],[5.951725],[-7.383893],[-4.132069],[-3.229731],[-8.481392],[7.923919],[-9.695376],[2.649390],[-8.351684]],[[-2.056251],[8.940103],[0.042660],[5.772867],[-4.147763],[-1.094039],[8.366346],[-7.746905],[2.828030],[5.621217],[2.848788]],[[-4.414921],[4.294705],[5.987094],[-5.496737],[-9.027115],[-2.219891],[-2.982524],[0.480352],[-3.796812],[8.378315],[9.875948]],[[-7.676738],[-3.568222],[-2.185397],[6.176266],[1.197713],[-4.516473],[-6.938824],[-5.221957],[3.872917],[5.512033],[-6.783789]],[[-4.955548],[-1.873729],[8.764553],[9.266089],[-9.499034],[-6.133941],[7.952789],[0.762694],[4.102211],[0.376692],[6.629496]],[[7.552695],[-8.777890],[-0.588008],[-4.454924],[5.453690],[-2.273397],[-2.335759],[5.278528],[-6.731597],[4.955116],[-8.421297]]], dtype = "float32")#candidate|3733|(9, 11, 1)|const|float32
uop_3734 = relay.atanh(const_3733.astype('float32')) # shape=(9, 11, 1)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3743 = func_3417_call()
call_3744 = func_3417_call()
bop_3745 = relay.divide(uop_3734.astype('float32'), relay.reshape(const_3733.astype('float32'), relay.shape_of(uop_3734))) # shape=(9, 11, 1)
func_2813_call = mod.get_global_var('func_2813')
func_2815_call = mutated_mod.get_global_var('func_2815')
const_3749 = relay.const([4,9,10,3,2,-7,8,-4,-3,2,-5,-5,-8,2,-7,-8,-4,-10,-5,-6,-9,-1,2,5,-4,-5,-9,3,-7,5,-10,8,-10,-8,1,1,8,-5,9,-6,-9,10,-3,5,-8,5,5,-9,2,-1,3,1,6,-2,7,8,10,6,-2,3,-1,-5,-2,3,-6,-6,-6,8,6,9,-9,1,-4,1,8,-4,-2,7,-7,-9,5,-10,4,-5,2,-6,-10,10,-6,7,-7,-4,4,-5,4,-4,1,3,3,-8,3,-8,2,4,9,3,6,6,-1,-1,-5,5,10,-1,-6,-10,2,-10,5,4,9,1,5,5,8,-10], dtype = "uint32")#candidate|3749|(126,)|const|uint32
call_3748 = relay.TupleGetItem(func_2813_call(relay.reshape(const_3749.astype('uint32'), [126,])), 1)
call_3750 = relay.TupleGetItem(func_2815_call(relay.reshape(const_3749.astype('uint32'), [126,])), 1)
output = relay.Tuple([call_3743,bop_3745,call_3748,const_3749,])
output2 = relay.Tuple([call_3744,bop_3745,call_3750,const_3749,])
func_3756 = relay.Function([], output)
mod['func_3756'] = func_3756
mod = relay.transform.InferType()(mod)
mutated_mod['func_3756'] = func_3756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3756_call = mutated_mod.get_global_var('func_3756')
call_3757 = func_3756_call()
output = call_3757
func_3758 = relay.Function([], output)
mutated_mod['func_3758'] = func_3758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3155_call = mod.get_global_var('func_3155')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3787 = relay.TupleGetItem(func_3155_call(), 0)
call_3788 = relay.TupleGetItem(func_3157_call(), 0)
func_2813_call = mod.get_global_var('func_2813')
func_2815_call = mutated_mod.get_global_var('func_2815')
var_3793 = relay.var("var_3793", dtype = "uint32", shape = (126,))#candidate|3793|(126,)|var|uint32
call_3792 = relay.TupleGetItem(func_2813_call(relay.reshape(var_3793.astype('uint32'), [126,])), 2)
call_3794 = relay.TupleGetItem(func_2815_call(relay.reshape(var_3793.astype('uint32'), [126,])), 2)
output = relay.Tuple([call_3787,call_3792,var_3793,])
output2 = relay.Tuple([call_3788,call_3794,var_3793,])
func_3809 = relay.Function([var_3793,], output)
mod['func_3809'] = func_3809
mod = relay.transform.InferType()(mod)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3810 = relay.var("var_3810", dtype = "uint32", shape = (126,))#candidate|3810|(126,)|var|uint32
func_3809_call = mutated_mod.get_global_var('func_3809')
call_3811 = func_3809_call(var_3810)
output = call_3811
func_3812 = relay.Function([var_3810], output)
mutated_mod['func_3812'] = func_3812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3155_call = mod.get_global_var('func_3155')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3817 = relay.TupleGetItem(func_3155_call(), 0)
call_3818 = relay.TupleGetItem(func_3157_call(), 0)
func_3277_call = mod.get_global_var('func_3277')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3827 = relay.TupleGetItem(func_3277_call(), 0)
call_3828 = relay.TupleGetItem(func_3279_call(), 0)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3834 = func_3417_call()
call_3835 = func_3417_call()
func_1674_call = mod.get_global_var('func_1674')
func_1676_call = mutated_mod.get_global_var('func_1676')
const_3855 = relay.const([[3.773360,5.444205,-1.195817,-4.776266,-0.422134,-4.163274,-1.009578,-2.926352,1.786120,-9.706244,-3.325091,8.100053,0.806708,2.999706,4.126831,0.369973,0.695760,-5.053356,0.828517,-5.410148,5.659467,-0.854712,2.327435,-6.028527,0.678031,-6.179373,-3.211571,-0.253310,-9.445828,1.896085,-4.923012,7.385113,5.670310,-7.684467,-9.542775,-6.870046,3.781989,-6.248875,3.025960,4.153265,2.075243,-7.722092,8.540298,9.865187,4.293545,-1.842025,-5.452021,3.074261,7.728640,-2.508288,-5.852630,0.001969,9.968583,2.788431,9.156830,5.405137,-2.386407,-2.336664,-3.483543,6.288059,-8.218205,-7.015108,0.669025,-9.962600,3.487757,8.866871,-9.149894,5.331113,-2.886922,-1.255288,-0.767553,-8.433520,-9.664795,-5.053727,9.565409,-9.606061,5.837937,-8.752964,-6.942958,3.572163,0.298237,0.541198,-0.202719,1.317920,0.264786,-2.641863,-7.039792,-4.584768,6.710825,2.996996,6.112474,-5.102909,-7.766653,5.746179,6.269712,-5.788775,5.499372,-5.857207,3.115201,-3.149287,-0.346323,-6.653753,-3.701762,2.609886,7.760730,-4.122197,-0.280215,-9.334908,4.949577,2.202136,-0.703857,2.537513,7.836549,9.867098,4.400909,-2.657227,-4.324585,-1.632754,6.882647,-3.623475,0.999159,9.279788,6.552291,-4.822078,-7.575099,-1.045561,-7.082154,-1.761405,5.736435,-2.968577,-2.964508,-5.105905,6.570694,7.589785,-2.800160,8.828300,-3.122929,0.500307,-4.528989,-1.115746,3.814347,-1.772449,-4.963316,-5.240436,-6.168950,-3.275885,9.747433,-3.670254,-5.192170,6.463892,3.039089,-5.616481,-4.475961,-0.597516,5.582497,5.974639,9.700049,-9.033820,-0.016123,4.638567,6.007939,0.853578,9.581865,6.951874,7.667763,-8.280650,-2.204613,-5.996852,4.582823,0.446576,2.086071,3.673172,-2.023695,-7.325546,-8.298975,-2.215316,-2.686872,-9.669073,4.421192,1.553943,9.689812,8.822570,-7.832322,-7.292691,-2.752989,-7.047922,-6.546701,-8.235327,-1.224663,3.998169,8.666385,-7.104088,-3.648644,0.877129,7.027946,-2.167006],[-1.262866,-7.634277,-2.166881,-7.156933,-5.747808,-2.571633,0.028570,-3.517372,-3.369437,-8.758199,5.708244,3.751713,-2.773037,3.238486,1.985054,-1.249563,4.066194,-5.544803,0.600531,0.652104,5.492891,-4.414327,-6.392195,-4.831055,-1.095013,-9.741204,-5.834544,3.634185,-4.738895,-9.311018,4.723064,-6.959381,4.824942,-5.379684,2.016478,-2.100307,6.135059,8.999151,2.920483,-8.993460,8.029044,8.477445,-9.067748,-5.977650,8.798878,-2.238878,9.868545,-5.270113,2.598691,2.289219,-3.818029,-0.638595,-0.932133,6.152611,5.240350,0.335785,4.363933,-5.918011,-7.037974,-7.505141,2.460617,-2.598583,1.845412,5.820749,5.144759,-5.771025,9.091613,9.223334,-4.144369,2.781531,4.962091,-9.757001,-8.206082,-3.009663,0.214986,-5.382407,-0.204998,4.267278,9.638647,-6.071729,7.228515,-1.307421,9.431665,-3.932083,6.237534,-5.298817,7.307230,5.292093,6.485985,-2.721445,-3.866902,-2.880412,3.743072,9.266880,-3.534739,1.568856,-1.590371,-4.777986,5.570209,0.800923,7.556811,3.697435,5.793306,-5.631555,6.638753,7.472902,5.161501,-2.032281,-2.072995,-8.112895,4.556015,-0.257232,3.581335,-1.821124,-5.195005,5.455213,5.402972,-3.702442,0.918328,6.865118,2.807976,5.004247,-3.604542,0.533803,8.347850,-1.115447,4.513435,-4.343067,1.418458,0.977697,-8.301144,2.014430,-7.320060,-8.450555,-3.985720,-3.665874,1.769289,6.321582,5.925075,-4.816543,-1.013875,5.282266,4.031479,-1.125579,-3.715997,-5.487987,3.775693,-7.247591,0.255283,1.122298,9.074457,2.745855,2.755138,-9.894331,1.025976,9.741898,1.844472,0.511305,-1.782949,-0.825305,-1.287173,-1.770969,-3.037487,5.553440,8.087220,-6.758909,-0.035640,8.664960,-7.937917,-1.608595,-7.913514,1.609180,-3.657298,3.711797,-8.554072,-7.763180,-6.437624,-8.458122,8.830737,7.762296,8.833592,7.519803,7.380627,7.725335,9.218816,-0.243782,-8.154034,9.489353,-1.051547,0.680519,-3.213038,1.492445,-8.514633,-6.907916,0.424223,8.007241],[0.477110,-6.961416,8.376333,-0.832707,0.526462,2.514188,-8.688511,7.923971,5.942961,6.275376,-1.610485,-9.886641,4.200297,-9.614569,-9.909552,5.895766,9.827773,0.851297,3.396423,2.406509,-2.904910,-7.906535,0.805588,1.778465,4.775075,3.410098,-4.080821,-8.643096,-6.265180,-2.364261,-6.696586,-3.916593,-5.024228,9.190802,1.545719,-9.704877,4.456963,-9.892073,-5.386865,8.477913,-8.353809,4.135789,-5.326559,-2.026535,9.850667,-5.465091,-6.897067,5.143937,-1.120045,8.357623,9.580670,5.747736,-7.123599,9.117494,1.077459,-9.942524,6.178466,-2.066003,-1.613552,-2.168206,-3.107365,8.928225,8.971791,1.832912,4.091421,3.085738,-2.146426,1.155442,-8.902281,-7.525745,7.690623,-8.406697,-7.659681,1.467665,7.702767,-9.574877,-8.399153,8.341503,-6.598111,8.648785,8.858951,-7.153020,8.331941,-2.698101,2.672670,1.970406,-6.165478,2.266578,0.895037,2.950522,8.792634,-6.136314,9.302436,9.672735,-9.037940,-8.692065,-4.625766,6.245895,-0.019542,5.074823,-7.696666,5.114893,-5.980712,-0.632202,0.661174,6.554860,7.678649,-2.588337,2.711059,6.409802,-3.605409,3.182062,-1.628735,-3.665232,-6.593941,-6.404112,-5.883373,3.861961,9.056094,-9.374042,1.336551,6.796157,6.077776,-1.303784,3.067391,-6.595551,4.216849,-6.788790,5.105587,-2.767034,1.618148,-0.392229,-5.416214,-6.408676,6.474779,-0.915492,-0.398489,-5.944963,9.207790,-3.261816,-1.800097,-7.096002,-2.579819,0.858339,6.851649,-2.653885,6.715066,8.257840,-2.746996,2.326655,-7.970572,2.977809,2.531420,5.385484,-4.678991,4.991570,-9.095175,-9.452072,6.128690,-0.611309,7.841614,4.023729,-7.362383,8.135001,-9.554583,-1.767625,-2.955683,-6.200828,2.748459,8.150737,6.092706,-1.009872,-2.359496,4.378647,2.348445,2.314330,-2.665150,3.518944,1.924688,3.590825,2.731144,-7.964747,7.417857,1.770898,-0.082909,-6.489108,2.835665,-7.517123,8.138999,3.660264,0.855054,-2.826087,2.801935,-8.157065,-2.159976,4.877831],[-6.165554,3.907318,-3.212488,-9.824857,7.672518,-5.593940,-6.535969,1.499091,-1.779808,-2.243152,6.940523,9.882164,-9.402152,7.974486,-0.465573,-0.353984,-9.542793,-9.174645,-8.966832,-5.732216,-7.332476,-3.034850,1.987630,-8.956299,4.760063,5.896139,2.284700,9.973521,9.537287,-0.478887,4.293254,-3.098866,3.283897,-3.262300,2.332483,5.214115,-0.260124,-4.313614,2.280199,4.674857,3.110321,4.760560,-0.514619,-9.250326,1.704948,2.965193,1.122447,1.381689,-5.433244,-8.848571,-9.329915,7.419633,-5.561747,-2.933827,4.742884,-9.996324,-9.803616,5.928293,-9.203173,-0.488365,4.564406,4.740899,9.192994,8.594005,-7.258151,-6.721953,1.890610,9.005217,1.712996,-5.963204,-1.319627,-3.950346,-7.150019,5.437840,4.630650,4.525209,0.029768,-5.194782,7.356572,-9.571315,8.000958,-4.045903,5.068582,-5.684373,3.703484,4.489495,9.770225,-2.477108,2.388938,1.598367,-4.766415,5.232970,5.964855,-3.144674,0.918836,-2.127887,7.015050,-8.305088,4.558437,-1.865761,6.199301,-5.206455,9.134046,-7.073228,-5.391140,9.901805,-9.914784,-7.546957,-2.186693,-2.665289,7.042903,1.359557,8.604426,3.765147,-8.783585,4.517386,3.342198,6.457826,4.299307,-8.851218,0.990297,-5.597076,-3.541561,9.891399,6.783945,8.715714,-6.990652,-6.737416,-2.339602,-6.395208,3.483440,-7.780282,5.095743,0.058048,3.439585,-5.032364,4.140440,1.142462,9.217214,7.372703,-8.437637,-0.211203,1.844707,3.426111,-9.288446,-3.224829,8.095217,4.784854,-1.436963,5.221790,-8.193780,-7.608363,-6.628616,0.548802,-4.538956,0.352445,8.745859,-1.976320,-2.405468,-3.224226,0.967927,-1.824764,7.593775,-6.104329,-6.519427,-3.421257,7.134993,-1.462908,-8.316064,-1.203200,-1.877350,4.747210,9.846756,-2.020332,5.087535,-0.102727,-2.511379,-4.377603,-6.684497,7.586932,-2.537842,0.090802,9.941339,-4.024622,-7.759738,-0.867022,-1.869059,-3.917237,0.793052,3.747838,-0.018250,-8.426600,-2.297937,-7.133465,0.743047,7.157836],[2.988189,5.930334,-9.706667,-4.558394,-2.786630,-4.471244,7.878937,-9.700917,3.709046,4.797689,-2.082657,-1.847798,-9.576203,0.651513,1.183326,-3.040002,-3.199876,2.861452,6.356283,9.058846,-3.139260,-6.428206,-7.791817,9.613407,-8.877760,5.112330,-1.740021,3.810610,4.163050,-6.280136,0.802058,7.828243,-1.528752,-3.383778,4.089388,-0.904294,1.021282,9.477438,3.423527,-6.866512,4.072095,-9.534096,3.501944,2.052931,0.374319,3.871778,-6.700999,-8.022122,7.392835,-6.236155,-8.064256,3.742665,5.050319,4.208809,0.387912,-2.052308,-9.981488,-9.324094,-4.050853,-5.549981,3.333372,-5.235536,-1.837546,-1.248480,2.039723,-0.636485,5.391426,-3.031330,-8.530673,-2.060115,9.344033,1.713736,9.994461,2.959506,7.523798,9.310882,-6.088008,-5.196293,-8.400949,-7.359017,3.725828,0.607437,-9.919356,8.293550,-2.840986,-2.736244,-2.985427,7.036110,6.863324,8.554493,-3.264445,4.603379,-0.686258,0.057344,8.517034,-2.079340,3.256191,5.671653,4.588941,-8.953731,-9.013953,0.926331,-0.444521,8.167670,-7.849266,-7.252027,8.047850,5.171813,7.645941,9.306303,-5.653858,1.515470,9.186336,-4.520377,5.413202,-5.403458,0.408368,-2.183141,-0.104093,-0.193010,-9.734695,4.658860,-3.559072,2.240654,-8.672426,-7.164574,8.212385,-7.241933,0.658465,0.470470,1.191361,-1.616328,-5.799928,3.949410,-1.961110,1.473214,-3.776631,5.820488,2.513079,5.053511,7.438763,-5.812400,3.115370,3.541118,3.063047,-8.534886,4.375425,-8.367757,0.131217,-9.350365,1.136417,5.052378,5.478317,-2.427149,5.839271,-5.334199,-7.978761,1.324596,7.511199,-3.285312,-2.058009,4.603876,5.903400,3.838374,9.101621,0.700228,6.642810,2.268346,3.665472,9.802717,0.142359,0.983283,-7.403064,8.494465,1.945201,7.027629,-6.167761,0.753321,-3.523196,2.381999,1.027001,-2.062015,3.440120,6.320936,2.327079,1.022722,-3.978337,-2.797416,-3.585800,-1.883238,4.669155,3.500958,-5.759709,-8.324783,7.133997,6.407583],[-9.035525,0.230498,5.985047,-8.127142,0.684891,2.591418,-5.059541,-9.127762,6.826330,-4.088640,-7.133331,0.507709,8.906400,6.165310,3.291270,5.440343,-7.378646,5.942044,1.153939,3.224835,8.470458,-6.004320,-2.008288,-9.948849,5.884497,4.867112,-5.204690,-8.036219,-5.096014,-9.323500,-0.733852,1.122806,-6.246429,-3.980444,-7.649259,-6.821844,-9.369126,1.453851,-6.154153,0.118288,-3.940909,6.366815,2.613029,-5.471431,-2.235409,6.733257,-2.464018,1.085482,0.957784,-3.804561,3.120311,1.054149,8.433732,6.379403,9.764775,9.860340,0.179484,-3.763748,3.870560,-2.296891,-0.476131,-3.752187,-8.058735,9.114612,-3.619974,1.542592,2.937769,1.946691,6.674244,-1.758201,3.374152,-2.485449,-2.632974,8.441998,-0.500281,1.807180,2.504818,5.512738,-8.525156,4.812507,7.376893,-0.210629,-1.104931,8.365266,-0.753977,-8.483321,-3.817373,-7.889830,7.788108,-4.218351,5.639483,-7.567208,8.962508,-0.604508,0.262540,-6.434708,-4.524899,0.020533,0.681580,-8.152077,-8.076213,3.488368,-7.829485,6.627691,-2.033421,5.557803,-9.845487,-5.526842,6.982113,6.050436,8.897932,3.702022,-5.102539,-9.648208,-0.551646,-4.808151,6.935206,8.887462,1.901655,3.339247,-2.680714,-1.077674,8.445396,-4.494293,6.560413,2.923517,-8.983032,9.692312,4.140474,-9.640033,-5.075768,-8.860609,-6.158142,0.458073,-6.615734,4.904168,3.374440,3.117027,1.534258,-0.383990,6.056429,1.468444,-8.741558,7.181627,-8.470512,4.408929,-3.898482,-8.980102,8.129705,-2.193513,-5.920921,-9.988492,6.013658,-0.936172,-5.700487,-0.754494,-6.884555,5.521887,-7.278796,-5.938182,-3.757104,9.373961,5.441399,0.111868,-7.034589,0.359305,-7.840469,-6.465687,1.489883,-4.479880,9.893175,-7.531898,-9.086660,7.022452,-5.900199,8.864524,6.645128,2.064382,-1.260993,-8.414303,-5.240765,2.229876,1.371709,7.200513,3.872516,-6.841947,-5.861359,-9.985346,-0.412475,4.935243,-7.425135,9.105152,8.019526,-7.822647,-9.518718,-3.817214]], dtype = "float32")#candidate|3855|(6, 196)|const|float32
call_3854 = relay.TupleGetItem(func_1674_call(relay.reshape(const_3855.astype('float32'), [1, 1176])), 3)
call_3856 = relay.TupleGetItem(func_1676_call(relay.reshape(const_3855.astype('float32'), [1, 1176])), 3)
output = relay.Tuple([call_3817,call_3827,call_3834,call_3854,const_3855,])
output2 = relay.Tuple([call_3818,call_3828,call_3835,call_3856,const_3855,])
func_3861 = relay.Function([], output)
mod['func_3861'] = func_3861
mod = relay.transform.InferType()(mod)
output = func_3861()
func_3862 = relay.Function([], output)
mutated_mod['func_3862'] = func_3862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_3881 = relay.TupleGetItem(func_3378_call(), 0)
call_3882 = relay.TupleGetItem(func_3379_call(), 0)
output = relay.Tuple([call_3881,])
output2 = relay.Tuple([call_3882,])
func_3885 = relay.Function([], output)
mod['func_3885'] = func_3885
mod = relay.transform.InferType()(mod)
output = func_3885()
func_3886 = relay.Function([], output)
mutated_mod['func_3886'] = func_3886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3861_call = mod.get_global_var('func_3861')
func_3862_call = mutated_mod.get_global_var('func_3862')
call_3896 = relay.TupleGetItem(func_3861_call(), 1)
call_3897 = relay.TupleGetItem(func_3862_call(), 1)
output = relay.Tuple([call_3896,])
output2 = relay.Tuple([call_3897,])
func_3928 = relay.Function([], output)
mod['func_3928'] = func_3928
mod = relay.transform.InferType()(mod)
output = func_3928()
func_3929 = relay.Function([], output)
mutated_mod['func_3929'] = func_3929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3935 = relay.var("var_3935", dtype = "bool", shape = ())#candidate|3935|()|var|bool
var_3936 = relay.var("var_3936", dtype = "bool", shape = (9, 3, 8))#candidate|3936|(9, 3, 8)|var|bool
bop_3937 = relay.logical_and(var_3935.astype('bool'), var_3936.astype('bool')) # shape=(9, 3, 8)
output = relay.Tuple([bop_3937,])
output2 = relay.Tuple([bop_3937,])
func_3944 = relay.Function([var_3935,var_3936,], output)
mod['func_3944'] = func_3944
mod = relay.transform.InferType()(mod)
mutated_mod['func_3944'] = func_3944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3944_call = mutated_mod.get_global_var('func_3944')
var_3946 = relay.var("var_3946", dtype = "bool", shape = ())#candidate|3946|()|var|bool
var_3947 = relay.var("var_3947", dtype = "bool", shape = (9, 3, 8))#candidate|3947|(9, 3, 8)|var|bool
call_3945 = func_3944_call(var_3946,var_3947,)
output = call_3945
func_3948 = relay.Function([var_3946,var_3947,], output)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3928_call = mod.get_global_var('func_3928')
func_3929_call = mutated_mod.get_global_var('func_3929')
call_3959 = relay.TupleGetItem(func_3928_call(), 0)
call_3960 = relay.TupleGetItem(func_3929_call(), 0)
output = call_3959
output2 = call_3960
func_3969 = relay.Function([], output)
mod['func_3969'] = func_3969
mod = relay.transform.InferType()(mod)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mutated_mod.get_global_var('func_3969')
call_3970 = func_3969_call()
output = call_3970
func_3971 = relay.Function([], output)
mutated_mod['func_3971'] = func_3971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3861_call = mod.get_global_var('func_3861')
func_3862_call = mutated_mod.get_global_var('func_3862')
call_3983 = relay.TupleGetItem(func_3861_call(), 3)
call_3984 = relay.TupleGetItem(func_3862_call(), 3)
uop_3993 = relay.sin(call_3983.astype('float32')) # shape=(1, 1176)
uop_3995 = relay.sin(call_3984.astype('float32')) # shape=(1, 1176)
output = relay.Tuple([uop_3993,])
output2 = relay.Tuple([uop_3995,])
func_4010 = relay.Function([], output)
mod['func_4010'] = func_4010
mod = relay.transform.InferType()(mod)
mutated_mod['func_4010'] = func_4010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4010_call = mutated_mod.get_global_var('func_4010')
call_4011 = func_4010_call()
output = call_4011
func_4012 = relay.Function([], output)
mutated_mod['func_4012'] = func_4012
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4018 = relay.var("var_4018", dtype = "int64", shape = (3, 7, 3))#candidate|4018|(3, 7, 3)|var|int64
var_4019 = relay.var("var_4019", dtype = "int64", shape = (3, 7, 3))#candidate|4019|(3, 7, 3)|var|int64
bop_4020 = relay.add(var_4018.astype('int64'), relay.reshape(var_4019.astype('int64'), relay.shape_of(var_4018))) # shape=(3, 7, 3)
output = bop_4020
output2 = bop_4020
func_4025 = relay.Function([var_4018,var_4019,], output)
mod['func_4025'] = func_4025
mod = relay.transform.InferType()(mod)
var_4026 = relay.var("var_4026", dtype = "int64", shape = (3, 7, 3))#candidate|4026|(3, 7, 3)|var|int64
var_4027 = relay.var("var_4027", dtype = "int64", shape = (3, 7, 3))#candidate|4027|(3, 7, 3)|var|int64
output = func_4025(var_4026,var_4027,)
func_4028 = relay.Function([var_4026,var_4027,], output)
mutated_mod['func_4028'] = func_4028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4033 = relay.var("var_4033", dtype = "float32", shape = (7, 12, 9))#candidate|4033|(7, 12, 9)|var|float32
uop_4034 = relay.rsqrt(var_4033.astype('float32')) # shape=(7, 12, 9)
output = uop_4034
output2 = uop_4034
func_4041 = relay.Function([var_4033,], output)
mod['func_4041'] = func_4041
mod = relay.transform.InferType()(mod)
mutated_mod['func_4041'] = func_4041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4042 = relay.var("var_4042", dtype = "float32", shape = (7, 12, 9))#candidate|4042|(7, 12, 9)|var|float32
func_4041_call = mutated_mod.get_global_var('func_4041')
call_4043 = func_4041_call(var_4042)
output = call_4043
func_4044 = relay.Function([var_4042], output)
mutated_mod['func_4044'] = func_4044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3861_call = mod.get_global_var('func_3861')
func_3862_call = mutated_mod.get_global_var('func_3862')
call_4086 = relay.TupleGetItem(func_3861_call(), 4)
call_4087 = relay.TupleGetItem(func_3862_call(), 4)
output = relay.Tuple([call_4086,])
output2 = relay.Tuple([call_4087,])
func_4089 = relay.Function([], output)
mod['func_4089'] = func_4089
mod = relay.transform.InferType()(mod)
output = func_4089()
func_4090 = relay.Function([], output)
mutated_mod['func_4090'] = func_4090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3861_call = mod.get_global_var('func_3861')
func_3862_call = mutated_mod.get_global_var('func_3862')
call_4098 = relay.TupleGetItem(func_3861_call(), 0)
call_4099 = relay.TupleGetItem(func_3862_call(), 0)
func_4010_call = mod.get_global_var('func_4010')
func_4012_call = mutated_mod.get_global_var('func_4012')
call_4113 = relay.TupleGetItem(func_4010_call(), 0)
call_4114 = relay.TupleGetItem(func_4012_call(), 0)
func_364_call = mod.get_global_var('func_364')
func_368_call = mutated_mod.get_global_var('func_368')
call_4117 = relay.TupleGetItem(func_364_call(relay.reshape(call_4113.astype('float32'), [12, 14, 7]), relay.reshape(call_4113.astype('float32'), [12, 14, 7]), ), 0)
call_4118 = relay.TupleGetItem(func_368_call(relay.reshape(call_4113.astype('float32'), [12, 14, 7]), relay.reshape(call_4113.astype('float32'), [12, 14, 7]), ), 0)
var_4121 = relay.var("var_4121", dtype = "float32", shape = (12, 14, 7))#candidate|4121|(12, 14, 7)|var|float32
bop_4122 = relay.multiply(call_4117.astype('uint8'), relay.reshape(var_4121.astype('uint8'), relay.shape_of(call_4117))) # shape=(12, 14, 7)
bop_4125 = relay.multiply(call_4118.astype('uint8'), relay.reshape(var_4121.astype('uint8'), relay.shape_of(call_4118))) # shape=(12, 14, 7)
func_3141_call = mod.get_global_var('func_3141')
func_3142_call = mutated_mod.get_global_var('func_3142')
call_4128 = relay.TupleGetItem(func_3141_call(), 4)
call_4129 = relay.TupleGetItem(func_3142_call(), 4)
output = relay.Tuple([call_4098,call_4113,bop_4122,call_4128,])
output2 = relay.Tuple([call_4099,call_4114,bop_4125,call_4129,])
func_4137 = relay.Function([var_4121,], output)
mod['func_4137'] = func_4137
mod = relay.transform.InferType()(mod)
var_4138 = relay.var("var_4138", dtype = "float32", shape = (12, 14, 7))#candidate|4138|(12, 14, 7)|var|float32
output = func_4137(var_4138)
func_4139 = relay.Function([var_4138], output)
mutated_mod['func_4139'] = func_4139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mod.get_global_var('func_3885')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_4211 = relay.TupleGetItem(func_3885_call(), 0)
call_4212 = relay.TupleGetItem(func_3886_call(), 0)
func_3546_call = mod.get_global_var('func_3546')
func_3549_call = mutated_mod.get_global_var('func_3549')
const_4223 = relay.const([[False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,True]], dtype = "bool")#candidate|4223|(1, 720)|const|bool
call_4222 = func_3546_call(relay.reshape(const_4223.astype('bool'), [10, 9, 8]))
call_4224 = func_3546_call(relay.reshape(const_4223.astype('bool'), [10, 9, 8]))
output = relay.Tuple([call_4211,call_4222,const_4223,])
output2 = relay.Tuple([call_4212,call_4224,const_4223,])
func_4231 = relay.Function([], output)
mod['func_4231'] = func_4231
mod = relay.transform.InferType()(mod)
output = func_4231()
func_4232 = relay.Function([], output)
mutated_mod['func_4232'] = func_4232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3928_call = mod.get_global_var('func_3928')
func_3929_call = mutated_mod.get_global_var('func_3929')
call_4252 = relay.TupleGetItem(func_3928_call(), 0)
call_4253 = relay.TupleGetItem(func_3929_call(), 0)
func_3809_call = mod.get_global_var('func_3809')
func_3812_call = mutated_mod.get_global_var('func_3812')
const_4260 = relay.const([[-8,-2,-7,-10,-6,-6,-5,-3,-1,-8,1,3,7,4,-2,1,-9,9,-3,6,8,-10,-9,9,-8,-1,4,-8,5,-6,4,1,2,1,10,7,-9,10,1,-10,-6,-9],[-4,-1,1,-8,-7,-10,8,4,-9,4,7,-8,5,9,-8,4,-9,10,2,-5,-6,6,6,-2,1,3,-1,-8,8,10,8,-9,-8,-7,9,-9,-8,-1,-9,7,10,-7],[10,9,-5,-7,2,-7,7,3,7,4,-1,8,-9,-9,5,-10,-3,3,10,8,6,-4,-1,-2,1,4,1,3,6,-9,-7,-6,-9,-10,-10,3,-6,-2,6,-7,-10,-10]], dtype = "uint32")#candidate|4260|(3, 42)|const|uint32
call_4259 = relay.TupleGetItem(func_3809_call(relay.reshape(const_4260.astype('uint32'), [126,])), 1)
call_4261 = relay.TupleGetItem(func_3812_call(relay.reshape(const_4260.astype('uint32'), [126,])), 1)
output = relay.Tuple([call_4252,call_4259,const_4260,])
output2 = relay.Tuple([call_4253,call_4261,const_4260,])
func_4262 = relay.Function([], output)
mod['func_4262'] = func_4262
mod = relay.transform.InferType()(mod)
output = func_4262()
func_4263 = relay.Function([], output)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3756_call = mod.get_global_var('func_3756')
func_3758_call = mutated_mod.get_global_var('func_3758')
call_4304 = relay.TupleGetItem(func_3756_call(), 3)
call_4305 = relay.TupleGetItem(func_3758_call(), 3)
const_4335 = relay.const([9,-2,-3,-8,-6,4,9,2,10,-5,-7,7,-3,8,-5,1,-6,-10,7,-4,6,7,-1,1,-4,-4,1,-4,-8,-4,-7,7,-2,-6,5,-2,-10,-8,9,-4,-8,-4,2,3,-2,3,2,5,-6,-2,1,-4,2,-3,1,-4,8,8,-7,9,8,9,1,5,-6,-8,9,-9,-4,-4,2,4,7,1,2,5,4,-3,9,2,-3,2,4,6,6,5,-7,7,10,10,-9,-6,-1,8,5,3,2,-1,-9,-6,-7,2,-9,-10,6,-3,-6,-8,7,7,5,1,7,6,1,10,5,3,-8,5,6,-1,-8,-1,2,-9], dtype = "uint32")#candidate|4335|(126,)|const|uint32
bop_4336 = relay.greater(call_4304.astype('bool'), relay.reshape(const_4335.astype('bool'), relay.shape_of(call_4304))) # shape=(126,)
bop_4339 = relay.greater(call_4305.astype('bool'), relay.reshape(const_4335.astype('bool'), relay.shape_of(call_4305))) # shape=(126,)
func_421_call = mod.get_global_var('func_421')
func_424_call = mutated_mod.get_global_var('func_424')
var_4343 = relay.var("var_4343", dtype = "uint32", shape = (4, 180))#candidate|4343|(4, 180)|var|uint32
call_4342 = relay.TupleGetItem(func_421_call(relay.reshape(var_4343.astype('uint32'), [10, 9, 8]), relay.reshape(var_4343.astype('uint32'), [10, 9, 8]), ), 0)
call_4344 = relay.TupleGetItem(func_424_call(relay.reshape(var_4343.astype('uint32'), [10, 9, 8]), relay.reshape(var_4343.astype('uint32'), [10, 9, 8]), ), 0)
func_4010_call = mod.get_global_var('func_4010')
func_4012_call = mutated_mod.get_global_var('func_4012')
call_4347 = relay.TupleGetItem(func_4010_call(), 0)
call_4348 = relay.TupleGetItem(func_4012_call(), 0)
func_1601_call = mod.get_global_var('func_1601')
func_1606_call = mutated_mod.get_global_var('func_1606')
var_4359 = relay.var("var_4359", dtype = "uint16", shape = (1, 1680))#candidate|4359|(1, 1680)|var|uint16
call_4358 = relay.TupleGetItem(func_1601_call(relay.reshape(var_4359.astype('uint16'), [14, 12, 10]), relay.reshape(call_4347.astype('float32'), [1176,]), relay.reshape(var_4359.astype('float64'), [14, 12, 10]), ), 6)
call_4360 = relay.TupleGetItem(func_1606_call(relay.reshape(var_4359.astype('uint16'), [14, 12, 10]), relay.reshape(call_4347.astype('float32'), [1176,]), relay.reshape(var_4359.astype('float64'), [14, 12, 10]), ), 6)
output = relay.Tuple([bop_4336,call_4342,var_4343,call_4347,call_4358,var_4359,])
output2 = relay.Tuple([bop_4339,call_4344,var_4343,call_4348,call_4360,var_4359,])
func_4386 = relay.Function([var_4343,var_4359,], output)
mod['func_4386'] = func_4386
mod = relay.transform.InferType()(mod)
var_4387 = relay.var("var_4387", dtype = "uint32", shape = (4, 180))#candidate|4387|(4, 180)|var|uint32
var_4388 = relay.var("var_4388", dtype = "uint16", shape = (1, 1680))#candidate|4388|(1, 1680)|var|uint16
output = func_4386(var_4387,var_4388,)
func_4389 = relay.Function([var_4387,var_4388,], output)
mutated_mod['func_4389'] = func_4389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3356_call = mod.get_global_var('func_3356')
func_3357_call = mutated_mod.get_global_var('func_3357')
call_4403 = func_3356_call()
call_4404 = func_3356_call()
func_3356_call = mod.get_global_var('func_3356')
func_3357_call = mutated_mod.get_global_var('func_3357')
call_4405 = func_3356_call()
call_4406 = func_3356_call()
output = relay.Tuple([call_4403,call_4405,])
output2 = relay.Tuple([call_4404,call_4406,])
func_4411 = relay.Function([], output)
mod['func_4411'] = func_4411
mod = relay.transform.InferType()(mod)
mutated_mod['func_4411'] = func_4411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4411_call = mutated_mod.get_global_var('func_4411')
call_4412 = func_4411_call()
output = call_4412
func_4413 = relay.Function([], output)
mutated_mod['func_4413'] = func_4413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3861_call = mod.get_global_var('func_3861')
func_3862_call = mutated_mod.get_global_var('func_3862')
call_4439 = relay.TupleGetItem(func_3861_call(), 3)
call_4440 = relay.TupleGetItem(func_3862_call(), 3)
uop_4443 = relay.log(call_4439.astype('float32')) # shape=(1, 1176)
uop_4445 = relay.log(call_4440.astype('float32')) # shape=(1, 1176)
uop_4446 = relay.exp(uop_4443.astype('float64')) # shape=(1, 1176)
uop_4448 = relay.exp(uop_4445.astype('float64')) # shape=(1, 1176)
uop_4458 = relay.cosh(uop_4446.astype('float32')) # shape=(1, 1176)
uop_4460 = relay.cosh(uop_4448.astype('float32')) # shape=(1, 1176)
func_3809_call = mod.get_global_var('func_3809')
func_3812_call = mutated_mod.get_global_var('func_3812')
var_4462 = relay.var("var_4462", dtype = "uint32", shape = (126,))#candidate|4462|(126,)|var|uint32
call_4461 = relay.TupleGetItem(func_3809_call(relay.reshape(var_4462.astype('uint32'), [126,])), 2)
call_4463 = relay.TupleGetItem(func_3812_call(relay.reshape(var_4462.astype('uint32'), [126,])), 2)
func_904_call = mod.get_global_var('func_904')
func_908_call = mutated_mod.get_global_var('func_908')
call_4472 = relay.TupleGetItem(func_904_call(relay.reshape(call_4461.astype('uint32'), [9, 7, 2]), relay.reshape(call_4461.astype('uint32'), [9, 7, 2]), relay.reshape(call_4461.astype('float64'), [9, 7, 2]), ), 1)
call_4473 = relay.TupleGetItem(func_908_call(relay.reshape(call_4461.astype('uint32'), [9, 7, 2]), relay.reshape(call_4461.astype('uint32'), [9, 7, 2]), relay.reshape(call_4461.astype('float64'), [9, 7, 2]), ), 1)
output = relay.Tuple([uop_4458,call_4461,var_4462,call_4472,])
output2 = relay.Tuple([uop_4460,call_4463,var_4462,call_4473,])
func_4493 = relay.Function([var_4462,], output)
mod['func_4493'] = func_4493
mod = relay.transform.InferType()(mod)
var_4494 = relay.var("var_4494", dtype = "uint32", shape = (126,))#candidate|4494|(126,)|var|uint32
output = func_4493(var_4494)
func_4495 = relay.Function([var_4494], output)
mutated_mod['func_4495'] = func_4495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3703_call = mod.get_global_var('func_3703')
func_3705_call = mutated_mod.get_global_var('func_3705')
call_4546 = relay.TupleGetItem(func_3703_call(), 0)
call_4547 = relay.TupleGetItem(func_3705_call(), 0)
func_1292_call = mod.get_global_var('func_1292')
func_1296_call = mutated_mod.get_global_var('func_1296')
const_4549 = relay.const(-6, dtype = "int32")#candidate|4549|()|const|int32
const_4550 = relay.const([5,6,1,1,9,2,-2,9,-7,-10,4,3,4,3,2,-3,-6,-6,-5,10,4,-5,1,8,-3,-7,10,2,-9,-2,-10,9,-6,-5,-3,-6,-9,3,9,1,10,8,7,4,4,8,-4,10,-3,2,1,5,1,9,-9,-1,-8,1,-8,3,4,5,-8,8,1,-9,8,-10,2,-8,-2,2,-9,-7,-9,-8,-2,8,10,-3,-8,1,6,6,5,-1,-4,-8,7,9,-8,6,1,-9,-2,10,-5,-5,-4,-1,6,5,6,-2,-9,-8,9,6,-7,-9,-5,8,-9,3,3,-2,7,-8,9,7,-2,-6,8,-1,4,6,10,-1,9,4,-7,1,-2,-8,-3,-10,1,-8,-5,-6,10,10,9,2,-3,-10,-3,-6,-1,5,-9,-1,-10,-9,-9,-5,10,10,7,7,-8,-4,-7,-5,5,4,-6,6,3,2,2,-10,5,2,-2,5,6,-1,10,-3,8,8,-2,10,10,7,1,6,7,-1,-9,-1,8,7,-9,-2,10,1,-4,1,-4,8,6,-3,-2,-4,-3,-5,8,-10,6,4,-9,2,-5,-9,-9,-6,9,-10,6,-3,8,1,-3,2,10,-7,-2,-4,2,-8,10,-8,3,-1,9,-7,3,-2,6,8,-10,7,-4,1,-6,-6,10,5,-9,10,2,6,5,4,2,7,6,5,7,-3,4,-7], dtype = "int32")#candidate|4550|(264,)|const|int32
const_4551 = relay.const([-8,1,-4,-7,-8,8,6,-5,3,-9,1,-2,-6,6,-1,-8,-5,10,1,10,2,3,-8,-10,-10,-9,2,-5,-8,-6,10,-1,-2,-4,8,2,2,5,4,10,2,-4,1,-7,-10,1,6,5,-10,-2,-3,-8,2,4,1,-9,-3,1,2,-4,-8,2,-4,-5,8,-7,-2,3,-10,-9,10,6,-2,-7,3,-9,-4,-9,10,7,9,-6,-8,-4,-7,-9,-10,-10,2,-7,9,-7,6,3,10,-3,-1,10,9,8,-7,-5,-2,9,4,-10,-3,8,-3,-7,-1,3,-9,-1,-7,6,-6,2,8,3,-9,-7,-9,6,-7,6,1,-10,-2,-1,-4,4,-8,9,10,-9,6,-5,-2,9,-2,-7,-6,-7,2,9,5,-5,2,10,-7,-2,7,-7,8,10,3,-5,4,7,-10,-1,2,9,-9,9,-9,6,8,-7,-9,8,-4,-1,5,-6,4,1,3,-1,8,-8,-3,-5,10,-9,8,-1,10,-1,-9,1,4,9,-9,-10,4,-6,-4,8,-2,3,2,-2,-7,7,-2,9,-10,3,-3,-6,3,-2,2,9,4,-4,7,1,1,-9,-8,-8,7,8,6,-4,6,4,-5,2,6,-8,-1,6,-8,-4,-3,5,-6,1,6,9,-3,-4,5,-10,1,5,-6,6,7,-2,-4,2,9,10,-1,1,-1,2,10,-6,-9,-3,-1,3,-10,-8,-2,-2,6,-8,10,-10,-4,-6,6,3,4,-4,-6,-5,-2,1,-5,-4,-7,-7,2,10,2,10,10,3,1,3,4,6,-2,7,3,10,4,9,-7,-3,6,8,7,2,-9,-7,-2,9,3,-1,9,-6,-1,10,5,6,5,7,-5,9,-5,-9,3,-1,5,-1,-3,7,4,-1,-9,8,1,5,6,4,-4,8,-2,-4,-1,3,-3,-8,-8,-6,6,-2,-9,6,2,-9,-4,4,6,-5,2,-8,8,2,5,-2,1,-7,-10,-10,-3,-9,-3,-5,2,5,7,10,1,9,1,-6,-3,7,-8,-6,-3,9,1,-7,3,-8,7,-4,-2,-6,-4,7,7,-3,-8,-5,-7,1,8,10,1,-2,5,-9,-8,-10,-7,-4,-1,-9,-7,4,-1,-1,-2,-10,8,-3,7,10,7,2,8,-10,2,-2,4,-4,-8,5,7,-2,9,-9,-7,4,2,-10,1,-1,-9,-5,-6,9,-5,5,2,-8,-3,7,-8,6,6,-10,5,-3,6,-7,-6,-8,3,-2,9,5,-5,-3,-3,2,-2,8,8,2,-9,4,-7,6,-6,-2,8,-6,-10,-7,8,2,-4,9,-4,-3,10,-10,-2,7,-5,-2,6,6,-8,9,-4,8,-5,-9,-6,4,4,2,-10,-5,-10,8,8,4,-8,-4,7,-2,6,3,-6,7,1,-9,10,8,2,6,1,-5,-4,-3,8,-3,-7,-6,3,6,-7,-7,-8,9,-10,-9,6,3,-3,-10,2,-7,2,-3,-1,9,3,-6,-10,10,-1,-2,-4,-8,-1,-10,-4,3,2,-10,-6,-2,-6,1,-5,-7,-1,5,6,-2,2,2,-1,-3,-3,-8,4,8,-10,8,-2,-6,-8,8,-4,2,4,-5,9,10,1,-10,7,4,9,-7,-1,-3,3,2,6,5,-10,-7,-8,-10,4,-3,8,-2,-1,7,1,-10,5,-2,-8,1,7,8,6,4,7,-2,-7,3,1,-2,2,-7,-6,6,-5,-3,-6,10,8,-1,-5,4,-5,-10,7,-1,5,-5,-6,-6,-9,-7,-1,-8,-5,8,10,-10,8,-5,3,3,-5,-1,-9,-6,-10,-5,10,-4,10,4,1,-9,5,4,-2,-8,-5,-10,9,-5,6,10,3,2,-5,7,10,4,2,5,-7,10,5,-10,-5,1,-7,1,6,-7,-10,6,-2,7,-10,-7,9,-3,-9,-7,10,-8,-1,-8,2,8,10,4,-4,-6,-7,-5,2,9,1,-6,5,7,-2,-3,-10,6,4,-4,3,5,2,-6,-6,-6,2,7,5,-3,6,-1,8,-8,9,3,1,4,7,-8,7,-1,5,4,9,8,5,6,9,8,-6,-4,8,-2,9,8,-3,5,-7,9,8,3,-9,9,-3,-9,-7,-9,2,7,-1,-9,4,-4,5,-6,3,6,-8,-3,3,3,-7,-4,4,-2,8,9,7,2,-9,5,-10,7,8,-3,1,3,-8,9,-10,-7,6,2,-3,5,5,-5,1,-4,-1,-1,5,-2,-1,-7,6,9,1,-5,-8,-6,10,-9,-3,-9,-2,-9,-4,-1,4,6,-1,-1,-8,9,-7,-8,-6,8,-10,4,-7,10,-3,-6,7,8,1,-2,-6,-7,-6,9,-2,1,-4,-7,-9,-2,-7,3,10,-4,9,-2,-7,-9,3,-4,7,-10,-4,3,3,-10,-2,4,2,-5,-6,-9,3,7,-8,-3,-10,-7,10,-10,3,-3,2,-9,9,-7,-10,-9,4,10,-7,-6,-6,1,-3,8,2,-1,1,9,3,-5,4,-7,-10,-2,-10,5,-3,1,-9,2,-10,-6,-2,-3,2,-1,1,-7,-4,9,-9,-9,3,8,1,-3,-2,4,-3,2,-4,-2,-10,-8,-7,-10,3,9,-1,8,-7,-3,-10,-5,-3,-6,10,5,-6,6,-2,-8,-8,-9,-3,1,7,-1,10,-10,2,1,4,6,9,-3,-10,5,9,-7,2,4,-1,-8,10,-3,4,8,1,9,-6,2,3,-4,-1,7,-8,-5,-6,7,3,-10,-7,6,-2,8,7,-6,7,-5,10,6,-2,4,-5,4,2,-4,4,-6,5,4,6,-6,-9,-3,-4,-6,1,-4,10,2,-4,10,-6,-4,-2,7,-10,1,4,8,-5,4,-4,-10,-8,6], dtype = "uint8")#candidate|4551|(1080,)|const|uint8
call_4548 = relay.TupleGetItem(func_1292_call(relay.reshape(const_4549.astype('int32'), []), relay.reshape(const_4550.astype('int32'), [12, 2, 11]), relay.reshape(const_4551.astype('uint8'), [1080,]), ), 1)
call_4552 = relay.TupleGetItem(func_1296_call(relay.reshape(const_4549.astype('int32'), []), relay.reshape(const_4550.astype('int32'), [12, 2, 11]), relay.reshape(const_4551.astype('uint8'), [1080,]), ), 1)
func_3885_call = mod.get_global_var('func_3885')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_4558 = relay.TupleGetItem(func_3885_call(), 0)
call_4559 = relay.TupleGetItem(func_3886_call(), 0)
uop_4569 = relay.sqrt(call_4548.astype('float32')) # shape=(6, 15, 12)
uop_4571 = relay.sqrt(call_4552.astype('float32')) # shape=(6, 15, 12)
func_2938_call = mod.get_global_var('func_2938')
func_2942_call = mutated_mod.get_global_var('func_2942')
call_4594 = func_2938_call(relay.reshape(const_4550.astype('uint32'), [6, 11, 4]), relay.reshape(const_4550.astype('uint32'), [6, 11, 4]), )
call_4595 = func_2938_call(relay.reshape(const_4550.astype('uint32'), [6, 11, 4]), relay.reshape(const_4550.astype('uint32'), [6, 11, 4]), )
uop_4603 = relay.log2(call_4548.astype('float64')) # shape=(6, 15, 12)
uop_4605 = relay.log2(call_4552.astype('float64')) # shape=(6, 15, 12)
func_2385_call = mod.get_global_var('func_2385')
func_2389_call = mutated_mod.get_global_var('func_2389')
const_4618 = relay.const([-2,7,3,-6,2,2,8,5,5,4,-8,-7,7,3,5,-10,6,-1,-3,-3,9,-3,3,6,3,-9,5,3,6,-6,10,8,-5,-3,7,5,3,-1,-7,-4,9,3,-1,-5,-10,8,1,6,-6,-6,6,9,1,-6,8,-9,3,-2,8,-1,-10,-10,6,7,-6,-7,8,2,5,-8,-7,-2,10,-7,3,9,-9,-6,-7,-1,8,5,-3,5,-6,2,3,6,-8,-4,-2,-6,-3,10,-5,-5,8,-9,9,-10,1,10,6,7,-2,-6,-5,-7,-3,10,-7,-3,5,5,-7,10,-9,-2,-8,-10,2,-5,10,-5,9,3,8,-1,7,8,-3,4,1,-6,4,9,5,1,8,-8,-1,2,-8,-4,-1,1,-1,5,-10,2,8,-8,-7,-8,-6,3,9,9,-10,-4,-7,6,-1,-9,1,-3,-3,4,1,-7,8,4,-7,9,-8,-8,-10,-3,5,-10,-5,7,-5,10,-3,-4,-8,10,-3,-1,-2,6,-5,-2,10,9,6,-3,-7,8,-1,10,-1,3,1,-5,-6,6,-9,-2,-2,-4,6,-1,2,2,-2,-3,7,8,-1,-3,-5,8,9,5,-10,-2,-8,-9,2,6,-6,-10,-4,-2,-3,-1,8,-4,-1,8,8,8,-3,-8,10,3,-2,2,-1,-2,1,-3,-3,6,6,5,-4,-1,2,5,5,2,1,5,8,6,-1,8,8,9,-8,9,9,-2,-1,-5,-3,6,-10,-5,8,-10,10,2,4,1,6,-5,-10,-6,-3,7,-7,-1,-4,5,-8,1,-3,-6,-6,10,-9,-5,-3,9,-1,2,-1,-2,7,-9,4,-3,-4,-3,-9,10,-9,4,7,6,4,-3,10,2,-7,-4,-10,6,-9,-4,-4,-4,-3,-5,-6,8,10,4,9,9,4,6,4,2,3,-2,2,1,6,6,6,1,7,8,-9,3,2,-1,-1,10,9,-4,9,8,1,9,-10,-5,-6,-3,10,10,5,-10,4,-10,-3,-8,2,-8,-2,2,7,-10,-2,10,9,4,3,10,-6,-2,7,-1,-8,1,6,-3,-3,-8,6,-7,-7,-10,-6,8,3,1,10,10,-1,-7,6,-1,-2,6,-4,4,-7,-2,7,7,7,-3,-9,4,-3,6,10,-2,4,-2,-4,-2,3,6,-3,1,10,-9,-6,-7,-6,10,-10,-10,-4,-5,-1,9,-2,-3,7,-4,-9,-6,-6,3,7,7,8,2,-2,-8,7,-4,-2,3,-4,-6,10,5,6,9,3,-9,-5,-3,-9,7,-10,-4,-1,-4,3,-7,4,10,-10,-3,5,4,-2,-7,9,6,9,4,6,5,1,-2,-4,5,9,8,10,4,-2,5,-6,-1,-3,-3,6,-8,-1,-2,-3,10,-4,8,2,-8,-2,6,-7,3,5,-9,-5,5,-9,1,-3,6,9,3,-5,-8,5,-6,-2,-2,-4,-7,10,-5,1,3,-6,1,-2,-1,-7,-5,-2,5,-10,2,-10,1,10,-10,-3,-5,3,-6,-2,3,5,-10,-9,-4,3,-2,-2,-6,-10,-3,1,-10,6,9,-5,5,-2,-9,-1,-1,9,-1,6,-3,-4,-9,-6,1,-7,10,-5,-1,10,-8,-5,7,-2,-4,6,7,6,6,5,6,8,-3,10,7,-6,-1,6,4,8,8,-7,-5,9,7,-9,-7,10,9,5,-10,-3,-3,-10,-8,-7,4,1,5,1,5,8,6,-1,-7,-10,-7,-7,5,9,10,2,-8,-3,5,6,5,-2,-1,5,9,-5,10,9,1,-9,-2,5,3,4,4,-10,5,10,-6,5,2,-4,-4,-8,-10,6,-7,3,-8,10,8,-3,-1,-10,7,4,5,-2,2,-4,8,-6,2,6,8,-4,-5,1,9,5,-9,7,-7,-3,-8,1,8,2,-1,-9,-4,7,-1,5,2,-8,-9,4,-4,4,5,-2,5,4,10,-6,10,6,-2,1,-1,2,4,7,-5,3,-6,-5,-7,-10,-6,-5,-10,6,-2,-5,-6,4,-4,-1,1,9,9,2,-4,-6,7,-5,-2,8,-9,-8,9,-6,-2,2,-3,3,-4,1,-5,8,-8,-8,5,-4,-8,-9,4,-2,4,-10,-4,10,-7,-7,10,4,-8,10,-10,-8,-9,-9,-4,-1,-4,7,3,-5,-10,3,-8,10,1,1,-6,-2,-8,8,-2,10,10,-6,-5,-3,3,-7,-3,9,6,-7,-3,-5,-2,2,-2,1,-10,-4,8,-3,3,4,-4,-2,-6,-3,8,7,3,-3,4,6,1,-2,-9,-1,-3,-2,9,9,3,-2,2,-2,-1,-9,-10,-10,8,9,-4,-2,5,-8,-8,-8,9,-3,-1,3,1,-8,8,10,-9,3,-9,-4,1,-7,-9,3,4,6,-10,-9,4,1,-5,-9,-2,-2,9,7,10,-2,-10,-4,10,2,-2,2,8,9,4,2,10,9,1,-1,2,9,-8,-8,4,8,-3,-1,4,6,6], dtype = "uint64")#candidate|4618|(936,)|const|uint64
call_4617 = relay.TupleGetItem(func_2385_call(relay.reshape(const_4618.astype('uint64'), [9, 8, 13]), relay.reshape(const_4618.astype('uint64'), [9, 8, 13]), ), 0)
call_4619 = relay.TupleGetItem(func_2389_call(relay.reshape(const_4618.astype('uint64'), [9, 8, 13]), relay.reshape(const_4618.astype('uint64'), [9, 8, 13]), ), 0)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_4637 = func_3969_call()
call_4638 = func_3969_call()
func_3356_call = mod.get_global_var('func_3356')
func_3357_call = mutated_mod.get_global_var('func_3357')
call_4643 = func_3356_call()
call_4644 = func_3356_call()
uop_4647 = relay.asin(uop_4603.astype('float64')) # shape=(6, 15, 12)
uop_4649 = relay.asin(uop_4605.astype('float64')) # shape=(6, 15, 12)
output = relay.Tuple([call_4546,const_4549,const_4550,const_4551,call_4558,uop_4569,call_4594,call_4617,const_4618,call_4637,call_4643,uop_4647,])
output2 = relay.Tuple([call_4547,const_4549,const_4550,const_4551,call_4559,uop_4571,call_4595,call_4619,const_4618,call_4638,call_4644,uop_4649,])
func_4650 = relay.Function([], output)
mod['func_4650'] = func_4650
mod = relay.transform.InferType()(mod)
output = func_4650()
func_4651 = relay.Function([], output)
mutated_mod['func_4651'] = func_4651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4689 = relay.var("var_4689", dtype = "float64", shape = (9, 4, 4))#candidate|4689|(9, 4, 4)|var|float64
var_4690 = relay.var("var_4690", dtype = "float64", shape = (9, 4, 4))#candidate|4690|(9, 4, 4)|var|float64
bop_4691 = relay.floor_mod(var_4689.astype('float64'), relay.reshape(var_4690.astype('float64'), relay.shape_of(var_4689))) # shape=(9, 4, 4)
uop_4697 = relay.log2(bop_4691.astype('float64')) # shape=(9, 4, 4)
uop_4705 = relay.asinh(bop_4691.astype('float32')) # shape=(9, 4, 4)
func_3703_call = mod.get_global_var('func_3703')
func_3705_call = mutated_mod.get_global_var('func_3705')
call_4710 = relay.TupleGetItem(func_3703_call(), 2)
call_4711 = relay.TupleGetItem(func_3705_call(), 2)
uop_4712 = relay.sqrt(uop_4705.astype('float32')) # shape=(9, 4, 4)
func_2938_call = mod.get_global_var('func_2938')
func_2942_call = mutated_mod.get_global_var('func_2942')
const_4721 = relay.const([-4,-4,-6,-2,-7,-3,3,-5,-2,6,-4,7,2,8,-2,2,10,6,-8,3,9,-8,-9,1,4,5,-4,-4,4,10,-9,-4,10,-6,-10,6,4,2,-6,7,4,-10,6,-7,-7,8,9,4,-4,2,9,3,-3,-7,2,1,-5,4,-4,-4,6,-5,-8,8,1,-5,-9,2,-5,-9,2,-3,-10,10,8,4,-6,10,-10,-5,10,9,-2,9,9,-6,-9,-8,6,2,-2,7,-5,-3,7,6,-1,7,6,-3,-8,-8,8,6,5,-9,2,8,-4,2,10,1,3,-5,7,-5,-6,10,2,1,1,6,-5,3,-5,5,3,7,5,4,-1,-7,-4,3,2,-3,4,-8,-2,-10,-8,-2,-2,-6,2,-9,10,2,-2,2,-10,6,-4,5,-7,-5,-10,5,-8,1,10,-5,-5,-8,3,-10,5,-7,2,9,6,4,2,2,-10,-2,-2,-5,-5,5,-1,2,-2,-6,-2,-6,10,-6,1,4,10,4,-6,-8,-9,10,-7,7,1,6,10,-2,3,-5,-8,6,9,-8,8,-6,7,9,6,7,-1,1,-6,2,-2,2,7,8,9,-1,-1,3,2,-4,-8,-8,-4,10,3,-9,-10,5,-10,-5,8,-5,-2,-9,-10,3,-3,-7,-9,7,1,-6,-9,-10,3,-8,-9,2,-1,6,-3,1,9,5,7,1], dtype = "uint32")#candidate|4721|(264,)|const|uint32
call_4720 = func_2938_call(relay.reshape(const_4721.astype('uint32'), [6, 11, 4]), relay.reshape(const_4721.astype('uint32'), [6, 11, 4]), )
call_4722 = func_2938_call(relay.reshape(const_4721.astype('uint32'), [6, 11, 4]), relay.reshape(const_4721.astype('uint32'), [6, 11, 4]), )
output = relay.Tuple([uop_4697,call_4710,uop_4712,call_4720,const_4721,])
output2 = relay.Tuple([uop_4697,call_4711,uop_4712,call_4722,const_4721,])
func_4728 = relay.Function([var_4689,var_4690,], output)
mod['func_4728'] = func_4728
mod = relay.transform.InferType()(mod)
var_4729 = relay.var("var_4729", dtype = "float64", shape = (9, 4, 4))#candidate|4729|(9, 4, 4)|var|float64
var_4730 = relay.var("var_4730", dtype = "float64", shape = (9, 4, 4))#candidate|4730|(9, 4, 4)|var|float64
output = func_4728(var_4729,var_4730,)
func_4731 = relay.Function([var_4729,var_4730,], output)
mutated_mod['func_4731'] = func_4731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_4809 = relay.TupleGetItem(func_4262_call(), 1)
call_4810 = relay.TupleGetItem(func_4263_call(), 1)
uop_4818 = relay.cos(call_4809.astype('float32')) # shape=(936, 1)
uop_4820 = relay.cos(call_4810.astype('float32')) # shape=(936, 1)
bop_4826 = relay.floor_mod(uop_4818.astype('float32'), relay.reshape(call_4809.astype('float32'), relay.shape_of(uop_4818))) # shape=(936, 1)
bop_4829 = relay.floor_mod(uop_4820.astype('float32'), relay.reshape(call_4810.astype('float32'), relay.shape_of(uop_4820))) # shape=(936, 1)
func_4493_call = mod.get_global_var('func_4493')
func_4495_call = mutated_mod.get_global_var('func_4495')
const_4834 = relay.const([-7,5,-8,10,5,10,7,8,1,-8,8,9,-8,-9,5,-3,1,-2,7,10,9,-9,-7,2,-4,-1,4,-10,-5,9,-5,2,2,-4,-4,-3,6,9,1,-1,4,9,4,-4,2,-10,-8,2,-4,1,3,-3,7,2,5,-5,9,-9,-7,3,6,8,-6,6,-7,8,-10,-8,-4,7,4,-10,-9,-6,-4,8,4,6,6,-8,8,2,-10,6,-1,-5,8,9,-8,4,6,4,7,8,3,-8,-5,-2,3,8,3,-10,-3,-6,4,3,-3,-9,-8,-6,4,-5,-6,-3,4,-4,9,8,3,-10,-6,-6,-1,-9,-2,3], dtype = "uint32")#candidate|4834|(126,)|const|uint32
call_4833 = relay.TupleGetItem(func_4493_call(relay.reshape(const_4834.astype('uint32'), [126,])), 3)
call_4835 = relay.TupleGetItem(func_4495_call(relay.reshape(const_4834.astype('uint32'), [126,])), 3)
output = relay.Tuple([bop_4826,call_4833,const_4834,])
output2 = relay.Tuple([bop_4829,call_4835,const_4834,])
func_4838 = relay.Function([], output)
mod['func_4838'] = func_4838
mod = relay.transform.InferType()(mod)
output = func_4838()
func_4839 = relay.Function([], output)
mutated_mod['func_4839'] = func_4839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_4865 = func_3969_call()
call_4866 = func_3969_call()
func_904_call = mod.get_global_var('func_904')
func_908_call = mutated_mod.get_global_var('func_908')
var_4872 = relay.var("var_4872", dtype = "uint32", shape = (126, 1))#candidate|4872|(126, 1)|var|uint32
call_4871 = relay.TupleGetItem(func_904_call(relay.reshape(var_4872.astype('uint32'), [9, 7, 2]), relay.reshape(var_4872.astype('uint32'), [9, 7, 2]), relay.reshape(var_4872.astype('float64'), [9, 7, 2]), ), 1)
call_4873 = relay.TupleGetItem(func_908_call(relay.reshape(var_4872.astype('uint32'), [9, 7, 2]), relay.reshape(var_4872.astype('uint32'), [9, 7, 2]), relay.reshape(var_4872.astype('float64'), [9, 7, 2]), ), 1)
output = relay.Tuple([call_4865,call_4871,var_4872,])
output2 = relay.Tuple([call_4866,call_4873,var_4872,])
func_4874 = relay.Function([var_4872,], output)
mod['func_4874'] = func_4874
mod = relay.transform.InferType()(mod)
mutated_mod['func_4874'] = func_4874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4875 = relay.var("var_4875", dtype = "uint32", shape = (126, 1))#candidate|4875|(126, 1)|var|uint32
func_4874_call = mutated_mod.get_global_var('func_4874')
call_4876 = func_4874_call(var_4875)
output = call_4876
func_4877 = relay.Function([var_4875], output)
mutated_mod['func_4877'] = func_4877
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4884 = relay.const([[[6.179946,-5.480377,-9.529367,-8.703430,-9.080414,7.124511,5.613501,0.057230,-5.478875,-6.945261,-8.836462,2.170588,-6.117392,1.838795,0.032905]],[[8.757248,3.387021,5.348837,8.006921,5.565703,-2.794860,-8.919099,3.725620,5.368283,0.833627,-1.838843,-9.672722,0.985638,-6.012655,-4.674605]],[[-7.211618,-4.201725,-0.503017,5.300600,9.427554,1.026537,6.304515,1.326710,6.205306,-6.870928,3.489157,6.409493,-4.564367,-1.748131,3.286748]]], dtype = "float32")#candidate|4884|(3, 1, 15)|const|float32
uop_4885 = relay.sin(const_4884.astype('float32')) # shape=(3, 1, 15)
var_4891 = relay.var("var_4891", dtype = "float32", shape = (3, 2, 15))#candidate|4891|(3, 2, 15)|var|float32
bop_4892 = relay.add(const_4884.astype('float32'), var_4891.astype('float32')) # shape=(3, 2, 15)
const_4905 = relay.constdtype = "float32")#candidate|4905|(3, 5, 15)|const|float32
bop_4906 = relay.greater_equal(uop_4885.astype('bool'), const_4905.astype('bool')) # shape=(3, 5, 15)
output = relay.Tuple([bop_4892,bop_4906,])
output2 = relay.Tuple([bop_4892,bop_4906,])
func_4912 = relay.Function([var_4891,], output)
mod['func_4912'] = func_4912
mod = relay.transform.InferType()(mod)
var_4913 = relay.var("var_4913", dtype = "float32", shape = (3, 2, 15))#candidate|4913|(3, 2, 15)|var|float32
output = func_4912(var_4913)
func_4914 = relay.Function([var_4913], output)
mutated_mod['func_4914'] = func_4914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3756_call = mod.get_global_var('func_3756')
func_3758_call = mutated_mod.get_global_var('func_3758')
call_4933 = relay.TupleGetItem(func_3756_call(), 1)
call_4934 = relay.TupleGetItem(func_3758_call(), 1)
output = relay.Tuple([call_4933,])
output2 = relay.Tuple([call_4934,])
func_4935 = relay.Function([], output)
mod['func_4935'] = func_4935
mod = relay.transform.InferType()(mod)
output = func_4935()
func_4936 = relay.Function([], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3703_call = mod.get_global_var('func_3703')
func_3705_call = mutated_mod.get_global_var('func_3705')
call_4969 = relay.TupleGetItem(func_3703_call(), 1)
call_4970 = relay.TupleGetItem(func_3705_call(), 1)
func_2385_call = mod.get_global_var('func_2385')
func_2389_call = mutated_mod.get_global_var('func_2389')
var_4979 = relay.var("var_4979", dtype = "uint64", shape = (936,))#candidate|4979|(936,)|var|uint64
call_4978 = relay.TupleGetItem(func_2385_call(relay.reshape(var_4979.astype('uint64'), [9, 8, 13]), relay.reshape(var_4979.astype('uint64'), [9, 8, 13]), ), 0)
call_4980 = relay.TupleGetItem(func_2389_call(relay.reshape(var_4979.astype('uint64'), [9, 8, 13]), relay.reshape(var_4979.astype('uint64'), [9, 8, 13]), ), 0)
func_3319_call = mod.get_global_var('func_3319')
func_3322_call = mutated_mod.get_global_var('func_3322')
var_4982 = relay.var("var_4982", dtype = "uint32", shape = (264,))#candidate|4982|(264,)|var|uint32
call_4981 = relay.TupleGetItem(func_3319_call(relay.reshape(var_4982.astype('uint32'), [264,])), 0)
call_4983 = relay.TupleGetItem(func_3322_call(relay.reshape(var_4982.astype('uint32'), [264,])), 0)
output = relay.Tuple([call_4969,call_4978,var_4979,call_4981,var_4982,])
output2 = relay.Tuple([call_4970,call_4980,var_4979,call_4983,var_4982,])
func_4987 = relay.Function([var_4979,var_4982,], output)
mod['func_4987'] = func_4987
mod = relay.transform.InferType()(mod)
var_4988 = relay.var("var_4988", dtype = "uint64", shape = (936,))#candidate|4988|(936,)|var|uint64
var_4989 = relay.var("var_4989", dtype = "uint32", shape = (264,))#candidate|4989|(264,)|var|uint32
output = func_4987(var_4988,var_4989,)
func_4990 = relay.Function([var_4988,var_4989,], output)
mutated_mod['func_4990'] = func_4990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_4992 = func_3417_call()
call_4993 = func_3417_call()
output = relay.Tuple([call_4992,])
output2 = relay.Tuple([call_4993,])
func_5028 = relay.Function([], output)
mod['func_5028'] = func_5028
mod = relay.transform.InferType()(mod)
mutated_mod['func_5028'] = func_5028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5028_call = mutated_mod.get_global_var('func_5028')
call_5029 = func_5028_call()
output = call_5029
func_5030 = relay.Function([], output)
mutated_mod['func_5030'] = func_5030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5084 = relay.var("var_5084", dtype = "float32", shape = (7, 12, 5))#candidate|5084|(7, 12, 5)|var|float32
uop_5085 = relay.rsqrt(var_5084.astype('float32')) # shape=(7, 12, 5)
func_4041_call = mod.get_global_var('func_4041')
func_4044_call = mutated_mod.get_global_var('func_4044')
const_5092 = relay.const([7.867282,5.110021,8.691197,1.362319,1.594122,-6.099450,6.519308,8.499497,-5.782633,8.920233,-8.282927,-0.402608,-4.309203,-2.155742,-8.537915,1.604456,-8.291674,-6.842866,-1.485167,3.886537,-6.788932,-1.089075,1.304039,6.540537,-5.714176,3.874899,-0.185488,-6.505044,2.596709,-3.229284,-3.402846,3.904571,3.448684,-5.749753,1.344630,5.844688,5.199413,-5.606681,9.413800,-7.956583,-8.589225,-6.835795,1.013991,-4.549196,-1.298891,1.778711,-8.123315,0.230864,-1.284398,-8.544810,-2.190018,-8.422967,7.154080,-0.821999,-6.563091,-3.015610,6.107331,3.336478,8.243961,1.577642,8.047498,6.859793,0.746966,2.828020,-0.564844,0.211302,2.342255,8.004149,-6.226092,0.693284,-8.072909,-5.628182,-4.513684,2.151423,2.240933,7.454790,9.605760,-7.837787,-7.392380,-9.577950,4.366528,0.560975,2.038262,1.532857,-5.327046,8.489705,0.998592,-0.334021,8.638178,0.378220,-9.403049,0.880044,8.465300,-5.537356,1.165330,8.178771,2.104210,9.265935,7.082555,-3.668226,4.049095,-7.626816,4.649472,7.251502,-2.011860,4.533587,9.180092,-9.534165,3.086394,-5.502553,-4.633947,3.009666,-7.345340,-2.951279,-2.911368,-4.583447,-5.780201,-6.020398,5.289381,4.633686,-7.692743,8.426866,5.615910,7.940790,-6.219593,-3.598589,6.124465,-1.137263,-7.245533,0.434609,-3.752646,1.015540,-6.461931,-5.535232,1.048323,-7.162759,4.565972,4.633024,6.155344,0.208790,2.993980,-1.106820,7.417385,-3.722118,-8.610901,-0.229571,3.366762,2.723320,0.158991,-0.725869,0.849244,4.720341,-0.798443,-8.770515,4.949421,2.929186,8.399314,3.661212,3.706391,-0.715310,6.563515,-2.079618,-7.010739,-3.400150,4.105525,-2.688330,7.805315,9.940199,1.930084,-3.193702,5.934451,2.388479,4.881007,-8.958475,-4.615792,-0.456188,7.122731,1.913674,3.101371,-3.072977,-4.678037,1.356862,-2.175210,7.069028,-2.188775,-0.854381,1.666287,-2.192564,-2.253886,8.021353,-9.595553,-8.181139,-1.454900,8.674636,3.830475,3.236668,9.040045,-0.849109,9.775173,1.782469,7.112645,-1.407558,1.859242,0.966095,9.200059,-5.790538,4.660478,8.280079,-3.469911,0.738015,-5.749178,1.041467,4.597950,1.686720,3.053062,7.708006,-7.097091,-3.742694,-2.409931,8.258609,-1.189092,0.799929,-0.711417,-2.204094,-0.816878,4.480032,-9.489210,-6.358992,-6.904634,-3.877781,-7.625969,-6.628042,5.761007,-0.514434,-7.471151,4.667039,4.708343,-0.523875,-4.573859,4.184182,-6.089354,6.312714,8.254997,3.737918,-6.335164,-7.733784,5.235445,0.396864,5.849206,-3.326026,-4.884892,-6.127151,3.769330,7.594301,6.994373,-6.017898,0.295076,-7.257961,6.179980,-1.465995,-3.895930,-0.700738,3.802668,-1.508615,9.506235,5.582570,3.714495,2.412560,-9.796456,-6.369541,1.449777,-6.744785,-4.079460,-2.729477,-7.641279,0.970988,5.638260,-7.297008,-8.974750,4.711736,0.205130,6.322356,-2.288550,5.611694,8.478015,1.844478,-1.481740,-9.082331,-6.053714,-1.518848,8.981546,6.079185,9.373216,-1.859533,0.168065,0.834380,-5.836989,4.462170,-5.030983,3.070425,-2.906289,-9.346214,-1.610111,9.483806,9.942998,1.539349,-5.837511,6.458857,-9.917427,9.195099,9.626221,2.924991,2.283349,5.671619,9.730628,1.159586,3.120928,8.635572,-5.731906,-4.580172,-4.651453,4.225685,1.806634,5.222934,-0.983471,7.683034,3.919413,8.343101,3.707720,-5.819010,1.923642,-2.762604,-6.011538,8.085474,-4.704389,-3.235523,6.136490,8.700101,6.289399,1.635655,8.267076,9.005826,9.310620,2.629162,1.025483,5.448173,-9.585177,9.551602,5.124306,8.930187,9.933249,3.847233,4.558707,1.902525,5.332942,-4.091509,1.625500,6.391288,-9.455920,7.537719,2.229269,1.033498,-3.566625,-9.697100,6.218130,2.343457,6.050436,3.622491,-4.994986,2.015762,2.231164,-0.787656,-2.507229,3.483679,1.725635,-1.202864,-4.868755,-2.992067,8.016210,-4.637603,-3.594772,7.619141,-4.256852,6.905582,0.104794,-8.821933,-7.326328,0.624192,6.880772,-3.379187,5.005823,6.828378,-7.672042,-6.710332,-7.671003,-4.662447,-1.931485,-8.050113,-2.407245,9.466250,2.407805,7.108560,4.461897,-5.247943,2.425346,6.099018,6.401960,-5.993752,-1.638507,9.039783,-2.638197,5.772199,5.840436,4.782693,1.903841,5.375713,2.230281,9.522534,8.949024,5.320188,-6.018243,5.191175,5.603912,0.134139,-7.609474,-0.688849,-7.248549,-6.244072,6.762435,7.087101,-2.293097,2.998860,7.647733,-0.840396,-5.086843,-9.607919,-9.688672,4.311382,0.935172,7.724799,4.908216,-9.132898,-8.679643,-7.297851,5.202537,-3.619857,-9.988527,2.848007,-5.663841,9.259340,1.521576,9.484038,1.138652,3.225326,7.393566,5.957480,-3.381950,-7.540326,-6.615507,-8.802262,7.149051,8.343037,6.659960,0.504840,0.471448,-9.583020,-2.867605,-8.187267,-5.089156,4.130739,5.727847,1.377883,-1.563196,-6.828912,-0.091565,-9.773101,8.785886,7.691001,-2.223096,0.289394,7.822259,-6.917098,5.723407,-3.372340,-1.874323,-3.489077,-1.203754,7.459681,8.114671,2.907969,0.864426,0.371044,2.513698,5.696058,-4.530492,1.252924,-4.216717,1.579159,1.683089,-8.775010,7.622229,5.660677,-8.763797,1.968439,-7.527150,8.075595,-3.846160,-3.178614,0.384584,-6.946383,-1.993393,-1.628277,6.028164,8.522671,6.408112,0.491806,-5.995344,-9.123246,6.567474,-8.539793,-6.451014,3.852067,5.769291,-9.960975,9.618471,-4.589769,8.264344,1.823369,-1.094812,4.737241,-9.235678,1.744691,8.763859,0.450026,0.989037,-4.674642,1.327749,-5.230216,8.173074,6.994165,2.430532,3.645106,-7.064468,-7.056300,6.789395,-9.059218,-9.490180,-5.015285,5.820191,-7.007824,7.447249,-9.300893,4.247231,0.784807,-3.391828,2.334760,-4.867915,-0.412492,3.650518,-4.027507,-1.510426,-5.544086,-8.134835,-8.953018,-6.658788,-9.359848,8.612470,-1.846971,1.873608,6.798478,6.743692,-1.343301,8.437003,-4.978670,0.643061,8.298974,-2.442648,-2.707628,-7.720220,-2.573840,1.507371,2.450227,-4.821424,6.907030,8.546675,6.293199,-1.906621,6.531573,-9.943382,-9.572314,-5.609011,3.115950,-7.780275,5.719901,-4.256235,9.397493,-5.568865,-3.037598,4.375455,-4.486105,-2.294177,3.355715,6.545633,1.019514,-3.339110,4.937431,1.148997,0.539815,-4.694247,5.297308,7.469266,2.456753,7.393224,-7.465646,9.575686,8.565801,-7.760246,-9.269824,0.697892,5.010532,-7.493864,-0.895207,1.689294,0.898972,-6.960012,-1.394131,9.415422,5.017084,8.032614,9.782932,1.351881,-1.567802,5.693460,4.195756,-0.574802,0.546853,-7.433050,9.780100,0.381852,2.782091,1.120743,0.571666,3.687193,5.851703,-2.357657,-1.344170,7.123131,9.924202,5.028691,-4.698847,8.941207,-8.043097,2.352905,9.390218,-6.344046,9.798882,-0.106212,2.558102,8.807809,-1.934678,6.298530,0.914197,-7.758665,-4.674992,-7.113786,6.041125,-7.572770,9.783509,6.977985,-5.726595,2.110509,5.355581,0.942219,-9.152235,5.045088,-3.705149,9.118300,-6.229012,6.944960,6.261541,6.710451,3.475966,2.704879,7.860469,-6.119883,-4.104103,7.517455,8.762505,-1.225979,-2.202204,9.575083,2.084288,-1.141865,-9.339626,-1.708382,5.168389,-7.717868,4.428614,9.658713,3.966262,-5.273774,-9.617389,5.331351,-4.968975,0.561639,-6.118927,-5.986855,0.461426,8.109996,-1.001128,5.775711,4.587911,-4.585403,2.424191,7.448752,9.868523,7.513202,-9.497657,-9.004163,-8.749599,4.206301,-3.373965,-8.537088,-0.017727,4.144350,2.782983,3.450890,-6.905402,3.209972,0.340884,-3.688843,1.389034,-0.321930,1.948528,-5.925939,-1.699979,-8.159582,1.105969,-0.918775,-3.458214,-8.448828,6.852029,-4.532777,-6.247217,1.310980,-8.030343,-2.243171,2.639490,8.650674,1.182476,5.708615,4.090370,-2.340505,-0.576808,1.618551,-7.524956], dtype = "float32")#candidate|5092|(756,)|const|float32
call_5091 = func_4041_call(relay.reshape(const_5092.astype('float32'), [7, 12, 9]))
call_5093 = func_4041_call(relay.reshape(const_5092.astype('float32'), [7, 12, 9]))
func_4089_call = mod.get_global_var('func_4089')
func_4090_call = mutated_mod.get_global_var('func_4090')
call_5094 = relay.TupleGetItem(func_4089_call(), 0)
call_5095 = relay.TupleGetItem(func_4090_call(), 0)
bop_5099 = relay.less(call_5091.astype('bool'), relay.reshape(const_5092.astype('bool'), relay.shape_of(call_5091))) # shape=(7, 12, 9)
bop_5102 = relay.less(call_5093.astype('bool'), relay.reshape(const_5092.astype('bool'), relay.shape_of(call_5093))) # shape=(7, 12, 9)
bop_5107 = relay.equal(uop_5085.astype('bool'), relay.reshape(var_5084.astype('bool'), relay.shape_of(uop_5085))) # shape=(7, 12, 5)
output = relay.Tuple([call_5094,bop_5099,bop_5107,])
output2 = relay.Tuple([call_5095,bop_5102,bop_5107,])
func_5110 = relay.Function([var_5084,], output)
mod['func_5110'] = func_5110
mod = relay.transform.InferType()(mod)
mutated_mod['func_5110'] = func_5110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5111 = relay.var("var_5111", dtype = "float32", shape = (7, 12, 5))#candidate|5111|(7, 12, 5)|var|float32
func_5110_call = mutated_mod.get_global_var('func_5110')
call_5112 = func_5110_call(var_5111)
output = call_5112
func_5113 = relay.Function([var_5111], output)
mutated_mod['func_5113'] = func_5113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3476_call = mod.get_global_var('func_3476')
func_3478_call = mutated_mod.get_global_var('func_3478')
call_5167 = relay.TupleGetItem(func_3476_call(), 2)
call_5168 = relay.TupleGetItem(func_3478_call(), 2)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_5169 = func_3417_call()
call_5170 = func_3417_call()
uop_5173 = relay.tan(call_5167.astype('float32')) # shape=(6, 15, 12)
uop_5175 = relay.tan(call_5168.astype('float32')) # shape=(6, 15, 12)
output = relay.Tuple([call_5169,uop_5173,])
output2 = relay.Tuple([call_5170,uop_5175,])
func_5179 = relay.Function([], output)
mod['func_5179'] = func_5179
mod = relay.transform.InferType()(mod)
mutated_mod['func_5179'] = func_5179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5179_call = mutated_mod.get_global_var('func_5179')
call_5180 = func_5179_call()
output = call_5180
func_5181 = relay.Function([], output)
mutated_mod['func_5181'] = func_5181
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5212 = relay.const([[[-4,-6,-6,10,-6,-5,-5,6],[-3,-10,-9,3,10,4,-3,-3],[-1,5,-9,9,10,-10,6,-10],[8,5,-2,-9,-6,-2,-7,-7],[1,6,-5,-7,8,1,3,3],[3,1,6,-10,10,3,-4,-6],[10,-8,6,3,-3,9,8,-9],[2,6,9,2,7,-9,-4,9],[8,3,5,1,10,5,-6,9],[-6,7,3,9,3,-5,4,2],[-1,9,1,-3,-1,-9,5,-6],[2,-10,-3,5,6,4,3,-5]],[[1,2,5,-2,-6,-5,6,-5],[5,3,2,-3,-7,-8,2,-9],[-7,-4,-8,9,5,8,5,10],[-7,-7,1,7,4,-10,-1,9],[10,10,-10,-4,7,8,5,4],[-1,9,1,-9,3,3,-10,2],[8,10,5,4,-7,-3,-10,-2],[-8,-2,9,3,-5,-8,9,-5],[-3,6,2,-7,-4,-1,7,-7],[6,-1,-5,1,-1,2,-8,-8],[3,-9,7,4,-6,8,-8,-8],[8,-3,6,-10,-2,8,1,-3]],[[3,9,-7,3,-10,9,-8,4],[10,7,-3,4,1,-7,1,9],[1,-4,-5,-4,-8,2,-3,1],[6,-9,9,6,9,-4,-5,-4],[5,7,-7,-2,3,2,-10,9],[-3,7,-4,-3,8,1,2,-2],[-5,4,9,8,2,7,-3,10],[-5,-9,1,1,-1,5,-10,-8],[-5,9,-10,7,7,4,10,-9],[2,-5,-1,-4,-3,-4,7,9],[8,-7,7,2,8,5,1,-5],[1,6,8,-4,9,3,-2,8]],[[-2,-10,-9,-2,-8,2,-8,-10],[7,-1,-6,-6,-3,-10,3,6],[-3,4,-9,-6,3,4,-7,2],[-2,8,10,-2,-5,1,-10,-3],[3,4,6,-7,-10,-2,-9,2],[1,-9,6,-5,6,8,3,9],[-1,-8,-5,-7,7,-3,-6,-8],[-4,8,-10,10,-9,4,-10,-9],[-7,7,1,-6,-3,-5,-3,6],[1,7,8,-1,-4,10,7,-4],[-6,8,-2,8,-3,-4,7,6],[-5,1,-10,4,-7,-7,-6,1]],[[-9,9,-3,-7,-1,5,-1,6],[-3,3,1,-7,-4,5,5,-1],[-4,8,-7,-4,-5,6,1,6],[-3,7,-8,2,-9,9,-2,-10],[3,2,4,10,-8,-9,-10,-2],[6,7,-4,-4,-8,8,-5,6],[8,-8,5,-4,-6,-9,8,9],[1,-5,-9,-7,-4,-6,-3,7],[-10,4,6,-8,10,7,1,1],[-6,-8,-7,-9,-9,-2,-7,4],[7,-3,-7,-3,10,-5,8,4],[4,6,-6,2,1,-8,4,-6]],[[-1,2,-1,2,-5,-4,-3,-6],[10,-8,-10,-2,4,-1,-9,9],[-7,-7,-6,-2,6,-7,-6,-7],[6,3,-6,6,2,-10,6,2],[-2,4,7,-10,-3,5,-9,-6],[-8,2,-1,-5,8,7,-7,-7],[-7,7,-6,1,6,-9,-6,2],[3,7,-2,8,-10,-4,-3,5],[2,5,3,-7,2,1,-10,-4],[-7,-8,5,-1,-2,-3,-5,-4],[2,-7,7,-3,-2,7,-7,7],[-3,-3,3,-3,-8,-8,5,-2]],[[-5,-4,-2,1,1,-8,-10,4],[-1,2,-2,7,-1,5,-8,5],[-5,-6,-7,-5,-9,-9,-7,2],[2,10,-7,6,-1,-6,-9,4],[1,2,-1,8,-9,8,-2,6],[4,-9,-4,-1,-5,5,7,7],[1,5,8,1,10,5,-8,7],[-6,3,9,-6,10,-8,3,2],[-7,-8,-10,-2,6,2,6,-6],[-6,-4,-4,1,2,-10,7,10],[10,-10,-7,-3,-8,7,-6,8],[-3,-7,3,-2,1,1,-3,-3]],[[1,5,4,10,-3,-7,1,9],[8,-2,5,-7,5,4,10,-3],[1,-8,-6,-6,-5,-5,10,10],[-1,-10,-6,3,-6,-3,4,-7],[6,9,-4,-10,-10,3,9,8],[6,6,-5,-5,-8,7,-6,9],[10,3,-5,-2,6,-6,1,-6],[-4,-8,3,-9,-4,3,3,-2],[-9,8,6,2,-7,10,4,4],[-10,8,8,2,-6,-9,-8,1],[-6,3,10,7,-6,7,2,-10],[4,6,7,-3,5,-1,5,-10]],[[10,-4,-9,-8,-7,-6,6,3],[-6,-1,9,8,-8,-6,-1,-3],[-10,-1,-7,7,-6,6,1,-2],[-10,-1,-9,-2,-8,-9,7,-9],[-10,-9,1,-10,8,-7,-5,5],[-5,4,-5,-2,-7,1,-4,10],[-3,10,4,9,8,-9,6,-8],[-2,5,-9,2,10,9,-6,-8],[7,-10,-10,2,-6,10,-7,-3],[3,8,-8,7,4,2,6,-8],[1,-5,-7,-8,-10,-5,1,7],[9,-7,6,5,-1,-9,-10,-9]]], dtype = "int16")#candidate|5212|(9, 12, 8)|const|int16
var_5213 = relay.var("var_5213", dtype = "int16", shape = (9, 12, 8))#candidate|5213|(9, 12, 8)|var|int16
bop_5214 = relay.add(const_5212.astype('int16'), relay.reshape(var_5213.astype('int16'), relay.shape_of(const_5212))) # shape=(9, 12, 8)
output = relay.Tuple([bop_5214,])
output2 = relay.Tuple([bop_5214,])
func_5221 = relay.Function([var_5213,], output)
mod['func_5221'] = func_5221
mod = relay.transform.InferType()(mod)
var_5222 = relay.var("var_5222", dtype = "int16", shape = (9, 12, 8))#candidate|5222|(9, 12, 8)|var|int16
output = func_5221(var_5222)
func_5223 = relay.Function([var_5222], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4411_call = mod.get_global_var('func_4411')
func_4413_call = mutated_mod.get_global_var('func_4413')
call_5265 = relay.TupleGetItem(func_4411_call(), 1)
call_5266 = relay.TupleGetItem(func_4413_call(), 1)
func_3756_call = mod.get_global_var('func_3756')
func_3758_call = mutated_mod.get_global_var('func_3758')
call_5277 = relay.TupleGetItem(func_3756_call(), 3)
call_5278 = relay.TupleGetItem(func_3758_call(), 3)
output = relay.Tuple([call_5265,call_5277,])
output2 = relay.Tuple([call_5266,call_5278,])
func_5284 = relay.Function([], output)
mod['func_5284'] = func_5284
mod = relay.transform.InferType()(mod)
mutated_mod['func_5284'] = func_5284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5284_call = mutated_mod.get_global_var('func_5284')
call_5285 = func_5284_call()
output = call_5285
func_5286 = relay.Function([], output)
mutated_mod['func_5286'] = func_5286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3155_call = mod.get_global_var('func_3155')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_5310 = relay.TupleGetItem(func_3155_call(), 0)
call_5311 = relay.TupleGetItem(func_3157_call(), 0)
func_4025_call = mod.get_global_var('func_4025')
func_4028_call = mutated_mod.get_global_var('func_4028')
const_5315 = relay.const([-3,8,7,9,7,6,6,6,-5,6,-9,7,-1,-5,9,-5,-3,8,-7,8,3,-1,-7,8,10,-2,-4,10,-7,10,-9,10,-7,3,-7,7,6,-8,7,-5,-7,7,-5,7,-1,9,1,3,-8,-4,-9,5,-9,8,-9,4,-9,7,7,5,-2,-8,-6], dtype = "int64")#candidate|5315|(63,)|const|int64
call_5314 = func_4025_call(relay.reshape(const_5315.astype('int64'), [3, 7, 3]), relay.reshape(const_5315.astype('int64'), [3, 7, 3]), )
call_5316 = func_4025_call(relay.reshape(const_5315.astype('int64'), [3, 7, 3]), relay.reshape(const_5315.astype('int64'), [3, 7, 3]), )
func_4411_call = mod.get_global_var('func_4411')
func_4413_call = mutated_mod.get_global_var('func_4413')
call_5326 = relay.TupleGetItem(func_4411_call(), 1)
call_5327 = relay.TupleGetItem(func_4413_call(), 1)
output = relay.Tuple([call_5310,call_5314,const_5315,call_5326,])
output2 = relay.Tuple([call_5311,call_5316,const_5315,call_5327,])
func_5328 = relay.Function([], output)
mod['func_5328'] = func_5328
mod = relay.transform.InferType()(mod)
output = func_5328()
func_5329 = relay.Function([], output)
mutated_mod['func_5329'] = func_5329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_5346 = relay.TupleGetItem(func_2525_call(), 1)
call_5347 = relay.TupleGetItem(func_2527_call(), 1)
var_5356 = relay.var("var_5356", dtype = "float64", shape = (5, 8, 3))#candidate|5356|(5, 8, 3)|var|float64
bop_5357 = relay.bitwise_and(call_5346.astype('int16'), relay.reshape(var_5356.astype('int16'), relay.shape_of(call_5346))) # shape=(5, 8, 3)
bop_5360 = relay.bitwise_and(call_5347.astype('int16'), relay.reshape(var_5356.astype('int16'), relay.shape_of(call_5347))) # shape=(5, 8, 3)
output = relay.Tuple([bop_5357,])
output2 = relay.Tuple([bop_5360,])
func_5361 = relay.Function([var_5356,], output)
mod['func_5361'] = func_5361
mod = relay.transform.InferType()(mod)
var_5362 = relay.var("var_5362", dtype = "float64", shape = (5, 8, 3))#candidate|5362|(5, 8, 3)|var|float64
output = func_5361(var_5362)
func_5363 = relay.Function([var_5362], output)
mutated_mod['func_5363'] = func_5363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4010_call = mod.get_global_var('func_4010')
func_4012_call = mutated_mod.get_global_var('func_4012')
call_5384 = relay.TupleGetItem(func_4010_call(), 0)
call_5385 = relay.TupleGetItem(func_4012_call(), 0)
func_1647_call = mod.get_global_var('func_1647')
func_1651_call = mutated_mod.get_global_var('func_1651')
var_5414 = relay.var("var_5414", dtype = "bool", shape = (490,))#candidate|5414|(490,)|var|bool
var_5415 = relay.var("var_5415", dtype = "uint32", shape = (126,))#candidate|5415|(126,)|var|uint32
call_5413 = relay.TupleGetItem(func_1647_call(relay.reshape(var_5414.astype('bool'), [14, 5, 7]), relay.reshape(var_5414.astype('bool'), [14, 5, 7]), relay.reshape(var_5415.astype('uint32'), [126,]), ), 0)
call_5416 = relay.TupleGetItem(func_1651_call(relay.reshape(var_5414.astype('bool'), [14, 5, 7]), relay.reshape(var_5414.astype('bool'), [14, 5, 7]), relay.reshape(var_5415.astype('uint32'), [126,]), ), 0)
func_4411_call = mod.get_global_var('func_4411')
func_4413_call = mutated_mod.get_global_var('func_4413')
call_5428 = relay.TupleGetItem(func_4411_call(), 0)
call_5429 = relay.TupleGetItem(func_4413_call(), 0)
func_3756_call = mod.get_global_var('func_3756')
func_3758_call = mutated_mod.get_global_var('func_3758')
call_5432 = relay.TupleGetItem(func_3756_call(), 3)
call_5433 = relay.TupleGetItem(func_3758_call(), 3)
output = relay.Tuple([call_5384,call_5413,var_5414,var_5415,call_5428,call_5432,])
output2 = relay.Tuple([call_5385,call_5416,var_5414,var_5415,call_5429,call_5433,])
func_5438 = relay.Function([var_5414,var_5415,], output)
mod['func_5438'] = func_5438
mod = relay.transform.InferType()(mod)
var_5439 = relay.var("var_5439", dtype = "bool", shape = (490,))#candidate|5439|(490,)|var|bool
var_5440 = relay.var("var_5440", dtype = "uint32", shape = (126,))#candidate|5440|(126,)|var|uint32
output = func_5438(var_5439,var_5440,)
func_5441 = relay.Function([var_5439,var_5440,], output)
mutated_mod['func_5441'] = func_5441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mod.get_global_var('func_5328')
func_5329_call = mutated_mod.get_global_var('func_5329')
call_5455 = relay.TupleGetItem(func_5328_call(), 1)
call_5456 = relay.TupleGetItem(func_5329_call(), 1)
func_3356_call = mod.get_global_var('func_3356')
func_3357_call = mutated_mod.get_global_var('func_3357')
call_5460 = func_3356_call()
call_5461 = func_3356_call()
const_5462 = relay.const([[[False,False,False,True,False,True,False,True],[True,False,True,False,False,False,True,True],[False,True,True,True,True,True,False,False],[True,True,True,True,False,True,True,True],[False,True,False,False,True,True,True,False],[True,False,False,True,False,True,False,False],[False,False,False,True,True,False,False,False],[False,True,False,False,True,True,True,True],[True,False,True,False,True,False,False,False]],[[True,False,True,True,True,True,False,True],[True,False,True,False,False,True,True,False],[False,True,True,True,False,False,False,True],[False,True,True,True,False,True,True,True],[True,False,False,False,False,False,False,True],[False,True,False,True,False,True,True,False],[False,False,False,False,True,False,False,True],[False,True,True,False,True,False,True,False],[True,True,True,True,False,True,False,False]],[[False,False,True,False,True,True,False,True],[True,False,False,False,True,False,False,True],[True,True,True,False,True,False,True,False],[True,False,True,True,True,False,False,True],[False,True,True,False,False,True,True,False],[False,True,False,True,True,False,False,True],[True,True,True,True,True,False,True,False],[False,True,False,True,True,False,False,True],[True,True,True,False,True,True,False,True]],[[False,False,False,False,True,False,True,False],[True,False,True,False,True,True,False,True],[False,False,True,True,False,True,False,False],[True,False,False,False,True,False,True,True],[False,True,True,True,True,False,False,False],[True,True,False,False,False,False,True,False],[True,False,True,True,False,False,True,True],[False,True,True,True,True,False,False,False],[True,False,True,False,False,True,False,True]],[[True,False,True,True,False,True,False,True],[True,True,True,True,True,False,False,True],[False,True,False,True,True,True,True,False],[True,True,False,True,False,False,True,True],[False,False,True,True,True,True,False,True],[False,True,False,False,False,True,True,False],[False,False,True,False,True,True,False,False],[False,True,True,False,True,False,False,False],[True,True,True,False,False,True,True,False]],[[True,False,False,True,True,False,True,True],[False,False,True,True,True,False,True,True],[True,False,False,False,True,False,False,False],[True,True,False,True,True,False,True,False],[False,False,True,True,False,False,False,False],[False,False,True,False,False,False,True,True],[False,True,True,True,True,False,True,False],[True,False,True,False,False,True,False,False],[True,True,True,True,True,True,True,False]],[[True,False,False,True,False,True,False,False],[True,False,False,False,False,True,True,True],[True,False,False,True,True,False,True,False],[False,False,True,True,False,False,True,True],[False,True,True,False,True,True,True,False],[True,True,False,True,False,True,True,False],[False,True,True,True,True,True,False,True],[True,True,True,True,False,False,True,False],[False,False,True,True,True,False,True,True]],[[True,True,False,True,True,True,True,True],[False,True,False,False,False,False,True,True],[False,False,True,False,True,False,False,True],[False,True,False,True,True,True,False,False],[False,True,False,True,False,True,False,True],[False,True,True,False,True,False,False,True],[True,True,True,False,True,False,True,True],[True,True,False,True,False,True,True,False],[False,True,False,False,True,False,True,True]],[[True,False,False,True,True,False,False,False],[True,False,False,False,False,True,True,True],[False,True,False,False,False,False,False,False],[True,False,True,False,True,False,False,False],[True,False,True,False,False,False,False,True],[False,False,True,False,True,False,True,True],[True,False,True,False,False,True,False,True],[False,True,False,True,False,False,True,True],[False,True,True,False,True,True,True,True]],[[True,False,True,False,False,False,True,True],[False,False,True,False,True,False,False,True],[True,False,False,True,False,False,False,False],[True,True,False,False,False,True,True,True],[True,False,True,True,False,False,False,True],[False,False,True,False,False,True,True,True],[True,False,True,True,False,True,True,True],[True,True,True,True,False,False,True,True],[False,False,False,False,True,True,True,True]]], dtype = "bool")#candidate|5462|(10, 9, 8)|const|bool
bop_5463 = relay.left_shift(call_5460.astype('uint32'), relay.reshape(const_5462.astype('uint32'), relay.shape_of(call_5460))) # shape=(10, 9, 8)
bop_5466 = relay.left_shift(call_5461.astype('uint32'), relay.reshape(const_5462.astype('uint32'), relay.shape_of(call_5461))) # shape=(10, 9, 8)
func_4987_call = mod.get_global_var('func_4987')
func_4990_call = mutated_mod.get_global_var('func_4990')
const_5468 = relay.const([5,-4,-2,-2,5,-5,-2,6,-3,-4,2,-7,-8,-7,9,3,-7,1,-7,6,-10,6,9,-2,10,1,9,-8,-8,-7,9,10,-8,-3,-5,-8,4,-7,-3,-5,8,-7,-5,-5,-10,-9,2,-6,2,7,10,2,-7,-7,9,-5,8,-3,-7,-8,-1,-7,-8,-5,-2,-8,6,-8,-9,5,-7,-5,2,-7,-6,-3,2,10,-3,-2,5,-1,10,-4,-6,-6,-9,7,-9,-10,9,-2,5,3,-6,5,5,-2,7,3,-7,8,10,-7,2,-3,-1,4,-8,-6,-1,6,8,10,-6,-1,-10,10,4,8,-5,7,-8,3,-9,10,9,6,6,3,9,-6,2,-8,3,2,-10,3,-3,4,5,-2,2,4,-3,1,-10,10,2,8,-7,3,-3,-5,-5,8,5,-8,7,-2,-8,4,-1,-10,4,8,10,9,10,-10,3,8,-8,-2,8,-7,10,-2,8,1,2,5,3,-7,-8,-9,-7,-8,5,3,-7,-8,4,5,4,3,-7,9,-4,4,-7,2,2,-10,3,10,6,8,-10,1,1,1,4,-10,10,10,-7,-1,4,5,7,-9,3,-10,-10,-8,-6,-1,-1,-9,-6,-8,1,1,-3,3,2,-2,9,10,4,2,-7,10,-5,10,-8,-4,8,-2,-4,2,9,2,9,-7,10,-4,-10,4,5,-9,-2,10,8,4,9,1,3,3,-7,-6,-8,3,-7,5,3,-3,-7,-9,-4,-1,1,10,5,-6,4,9,-2,-1,-3,1,2,-3,6,8,-6,-5,-8,1,-8,8,-10,-5,-3,-3,5,-2,-7,-10,8,-5,4,1,4,-9,-10,-6,6,-3,8,-7,10,-1,-6,-10,-8,9,4,4,-2,2,-10,2,-10,8,3,-10,-5,-9,-6,5,5,-4,4,1,-2,7,1,-1,8,-8,5,5,-3,-8,7,-10,7,-5,3,4,9,1,-5,-1,-2,-8,-7,4,9,-6,5,-1,10,-1,10,-2,1,8,-4,2,8,-10,1,4,7,-8,-7,-7,5,-2,5,5,-5,-5,4,6,5,8,1,-8,3,3,7,7,-7,-8,-4,2,7,-10,-3,2,4,6,1,6,-1,2,-8,-9,-9,-1,9,-4,-1,7,3,-5,-9,-2,6,2,6,5,-6,-1,3,-10,7,1,8,-3,-5,-8,9,5,-8,3,5,-8,-4,6,2,2,-9,9,-8,10,1,10,-8,5,3,9,-6,9,-9,9,-8,-3,1,6,-2,-5,-2,5,1,5,-8,4,-3,-3,-5,-6,-3,-1,8,-6,-4,5,9,8,-10,5,-9,-1,9,7,-8,10,9,-10,9,-9,-8,-10,6,6,-1,5,10,-2,-4,5,-1,7,-6,-9,2,9,4,-6,7,10,3,-8,5,-1,9,3,1,-10,-5,-4,-6,-7,-4,3,-3,9,-10,8,-7,4,-7,7,-7,6,5,10,-3,-2,-10,-8,1,10,4,-7,-8,-8,10,-2,-2,8,10,-9,-5,-2,9,7,-7,1,4,4,-1,-7,-8,7,-9,9,4,-2,10,-5,4,-1,10,4,-10,-8,-1,-3,5,-10,6,4,9,1,2,2,-8,8,-3,-2,9,5,4,-10,7,-3,-3,-2,-7,-4,7,-6,9,2,6,-6,-3,-8,2,-6,-10,-1,-8,-5,-6,-3,-7,1,-4,-9,-9,9,9,-1,-5,-7,5,-8,-2,5,4,-2,-8,-8,-8,-3,1,8,-9,-8,-3,-9,-4,1,-2,6,4,-6,3,-5,10,-5,-1,-10,2,-5,4,5,-3,-7,-3,-10,3,9,1,-6,-3,-3,-5,-5,2,6,-5,5,7,4,5,7,1,5,-2,-2,-3,7,9,-7,-3,-6,-1,-8,-5,8,-6,9,3,-9,4,-9,-8,4,-10,6,-1,-4,5,3,-4,-1,8,-8,-5,-5,8,-5,2,-2,8,8,2,6,-5,9,-9,-10,2,9,4,-6,10,7,-9,-6,8,-10,9,-8,-4,4,7,2,3,-7,-5,-9,2,-9,-4,-2,3,3,-8,6,7,-5,5,4,-9,5,3,1,10,8,8,-6,-2,3,-9,-1,-9,1,-4,-2,-5,6,-2,5,8,-6,5,-7,3,8,9,8,-6,1,-5,2,1,8,-7,-5,-8,1,-5,10,-8,-1,8,4,10,3,-8,5,-4,-3,8,8,-9,9,7,3,8,4,-5,1,2,9,8,1,9,-5,-10,-2,1,-6,-3,-6,4,8,-8,5,10,2,-9,1,7,-4,-8,7,-10,-10,1,-3,-7,4,-7,-7,-4,6,-2,-3,5,-5,6,2,6,-10,-9,-1,3,2,-6,-8,8,6,-4,-10,-8,2,8,1,-8,-10,-3,3,-8,-7,-4,7,-10,-3,-3,3,-7,-5,-1,-10,7,-5,-2,-8,3,-7,8,-8,-8,-5,3,10,3,6,4,-4,-9,3,9,-4,-5,-1,6,3,10,4,-6,-3,2,6,9,-6], dtype = "uint64")#candidate|5468|(936,)|const|uint64
var_5469 = relay.var("var_5469", dtype = "uint32", shape = (264,))#candidate|5469|(264,)|var|uint32
call_5467 = relay.TupleGetItem(func_4987_call(relay.reshape(const_5468.astype('uint64'), [936,]), relay.reshape(var_5469.astype('uint32'), [264,]), ), 4)
call_5470 = relay.TupleGetItem(func_4990_call(relay.reshape(const_5468.astype('uint64'), [936,]), relay.reshape(var_5469.astype('uint32'), [264,]), ), 4)
output = relay.Tuple([call_5455,bop_5463,call_5467,const_5468,var_5469,])
output2 = relay.Tuple([call_5456,bop_5466,call_5470,const_5468,var_5469,])
func_5476 = relay.Function([var_5469,], output)
mod['func_5476'] = func_5476
mod = relay.transform.InferType()(mod)
var_5477 = relay.var("var_5477", dtype = "uint32", shape = (264,))#candidate|5477|(264,)|var|uint32
output = func_5476(var_5477)
func_5478 = relay.Function([var_5477], output)
mutated_mod['func_5478'] = func_5478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4411_call = mod.get_global_var('func_4411')
func_4413_call = mutated_mod.get_global_var('func_4413')
call_5490 = relay.TupleGetItem(func_4411_call(), 0)
call_5491 = relay.TupleGetItem(func_4413_call(), 0)
func_3944_call = mod.get_global_var('func_3944')
func_3948_call = mutated_mod.get_global_var('func_3948')
var_5509 = relay.var("var_5509", dtype = "bool", shape = ())#candidate|5509|()|var|bool
var_5510 = relay.var("var_5510", dtype = "bool", shape = (216,))#candidate|5510|(216,)|var|bool
call_5508 = relay.TupleGetItem(func_3944_call(relay.reshape(var_5509.astype('bool'), []), relay.reshape(var_5510.astype('bool'), [9, 3, 8]), ), 0)
call_5511 = relay.TupleGetItem(func_3948_call(relay.reshape(var_5509.astype('bool'), []), relay.reshape(var_5510.astype('bool'), [9, 3, 8]), ), 0)
func_3861_call = mod.get_global_var('func_3861')
func_3862_call = mutated_mod.get_global_var('func_3862')
call_5519 = relay.TupleGetItem(func_3861_call(), 2)
call_5520 = relay.TupleGetItem(func_3862_call(), 2)
func_1095_call = mod.get_global_var('func_1095')
func_1098_call = mutated_mod.get_global_var('func_1098')
var_5524 = relay.var("var_5524", dtype = "float32", shape = (5, 70))#candidate|5524|(5, 70)|var|float32
call_5523 = func_1095_call(relay.reshape(var_5524.astype('float32'), [10, 5, 7]))
call_5525 = func_1095_call(relay.reshape(var_5524.astype('float32'), [10, 5, 7]))
uop_5526 = relay.sinh(call_5519.astype('float32')) # shape=(10, 9, 8)
uop_5528 = relay.sinh(call_5520.astype('float32')) # shape=(10, 9, 8)
func_3546_call = mod.get_global_var('func_3546')
func_3549_call = mutated_mod.get_global_var('func_3549')
call_5539 = func_3546_call(relay.reshape(call_5519.astype('bool'), [10, 9, 8]))
call_5540 = func_3546_call(relay.reshape(call_5519.astype('bool'), [10, 9, 8]))
output = relay.Tuple([call_5490,call_5508,var_5509,var_5510,call_5523,var_5524,uop_5526,call_5539,])
output2 = relay.Tuple([call_5491,call_5511,var_5509,var_5510,call_5525,var_5524,uop_5528,call_5540,])
func_5541 = relay.Function([var_5509,var_5510,var_5524,], output)
mod['func_5541'] = func_5541
mod = relay.transform.InferType()(mod)
var_5542 = relay.var("var_5542", dtype = "bool", shape = ())#candidate|5542|()|var|bool
var_5543 = relay.var("var_5543", dtype = "bool", shape = (216,))#candidate|5543|(216,)|var|bool
var_5544 = relay.var("var_5544", dtype = "float32", shape = (5, 70))#candidate|5544|(5, 70)|var|float32
output = func_5541(var_5542,var_5543,var_5544,)
func_5545 = relay.Function([var_5542,var_5543,var_5544,], output)
mutated_mod['func_5545'] = func_5545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4839_call = mutated_mod.get_global_var('func_4839')
call_5553 = relay.TupleGetItem(func_4838_call(), 2)
call_5554 = relay.TupleGetItem(func_4839_call(), 2)
func_3703_call = mod.get_global_var('func_3703')
func_3705_call = mutated_mod.get_global_var('func_3705')
call_5555 = relay.TupleGetItem(func_3703_call(), 1)
call_5556 = relay.TupleGetItem(func_3705_call(), 1)
output = relay.Tuple([call_5553,call_5555,])
output2 = relay.Tuple([call_5554,call_5556,])
func_5562 = relay.Function([], output)
mod['func_5562'] = func_5562
mod = relay.transform.InferType()(mod)
mutated_mod['func_5562'] = func_5562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5562_call = mutated_mod.get_global_var('func_5562')
call_5563 = func_5562_call()
output = call_5563
func_5564 = relay.Function([], output)
mutated_mod['func_5564'] = func_5564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4935_call = mod.get_global_var('func_4935')
func_4936_call = mutated_mod.get_global_var('func_4936')
call_5575 = relay.TupleGetItem(func_4935_call(), 0)
call_5576 = relay.TupleGetItem(func_4936_call(), 0)
uop_5592 = relay.exp(call_5575.astype('float32')) # shape=(9, 11, 1)
uop_5594 = relay.exp(call_5576.astype('float32')) # shape=(9, 11, 1)
var_5603 = relay.var("var_5603", dtype = "float32", shape = (9, 11, 4))#candidate|5603|(9, 11, 4)|var|float32
bop_5604 = relay.add(call_5575.astype('int8'), var_5603.astype('int8')) # shape=(9, 11, 4)
bop_5607 = relay.add(call_5576.astype('int8'), var_5603.astype('int8')) # shape=(9, 11, 4)
uop_5623 = relay.tan(bop_5604.astype('float32')) # shape=(9, 11, 4)
uop_5625 = relay.tan(bop_5607.astype('float32')) # shape=(9, 11, 4)
uop_5631 = relay.sin(uop_5592.astype('float64')) # shape=(9, 11, 1)
uop_5633 = relay.sin(uop_5594.astype('float64')) # shape=(9, 11, 1)
const_5639 = relay.const([[[2.702343,-8.023830,5.656737,-4.013059],[2.273274,6.149100,5.847979,2.791938],[-2.459406,-1.593924,3.783645,-7.060183],[-5.490312,6.725419,1.988034,-1.144574],[-1.661576,5.664959,9.208954,6.631595],[5.877173,-0.908666,-8.634160,-7.909000],[-2.846181,5.512228,-0.601021,-3.349806],[-0.460391,0.590874,-5.541355,5.521900],[-9.913029,-7.929759,-5.461075,0.502179],[-6.488438,-7.436326,0.011101,2.694976],[5.180089,4.603299,0.499719,1.272989]],[[-6.387772,0.211199,-7.516983,7.916467],[2.102356,-9.734097,-6.846088,0.066149],[0.417402,8.608538,5.716737,-2.899574],[8.737612,-4.615489,6.354925,-7.990457],[-8.475484,-4.028756,-7.339628,-0.669613],[-5.250441,3.612847,-3.452007,1.713073],[4.710382,-2.557420,-7.124233,4.605811],[-1.607203,-4.115611,3.235482,0.745120],[-0.767619,-9.575576,-6.653469,1.830162],[8.954821,8.083592,3.376621,-7.728060],[3.434238,1.752271,2.746300,2.976131]],[[-5.029975,-4.615767,-4.499262,-1.632125],[5.676486,-5.102978,5.679590,-6.944031],[-6.156515,-1.355264,9.575670,-7.014554],[7.463011,-8.420565,7.126798,-8.434587],[1.165596,5.854026,6.763868,-3.398302],[9.276807,-3.618648,-4.063269,6.158622],[-5.676649,9.158407,-1.173666,-0.170139],[3.235502,4.816452,-0.456570,2.003309],[-5.824077,0.129970,-0.426517,-7.131622],[-4.178167,-6.288473,-5.251128,-1.205457],[2.265370,-1.336371,8.384440,6.000262]],[[6.505670,4.509565,-5.364806,5.247046],[-2.396160,-5.468032,-5.310861,-0.925597],[6.826603,-6.524124,-3.408389,-1.109947],[-8.330901,-9.647492,4.432040,-9.751068],[-6.747727,-6.376891,-8.884214,6.488481],[4.351358,9.596717,-2.747953,-4.537151],[-2.941087,8.024068,6.211306,-2.771169],[-1.240885,-7.002772,-2.156054,-6.757694],[-3.064069,-7.152816,-8.182112,6.957606],[2.788357,-0.664077,-0.427167,-3.696856],[7.443083,-9.242421,3.858544,-8.990992]],[[4.308172,-2.076940,8.341212,-4.746401],[5.545283,7.826911,-8.898948,4.615848],[5.774307,0.871078,9.710633,0.481786],[-9.126830,7.509606,-3.589300,6.919214],[-6.375661,-2.334830,4.404012,-4.544450],[0.701590,-3.009485,-0.436131,6.373864],[0.671422,-6.622589,-6.217550,8.125908],[8.053002,8.578051,-6.477428,7.788425],[-3.278094,8.120230,-0.652716,-7.462210],[4.800035,4.571195,8.314811,2.977181],[3.233849,0.302038,7.738872,-6.428489]],[[8.754280,5.676360,0.255491,1.320376],[-7.541847,4.595578,-7.502470,-8.289178],[-2.427628,2.446723,-0.026959,9.252921],[-3.097660,-6.454572,2.076456,-5.737289],[-8.464809,9.523660,-7.633550,1.915322],[2.720655,8.450521,-3.453151,2.997069],[6.959812,-8.226977,0.032188,-5.117413],[-4.922644,-8.429657,9.242527,0.248143],[-8.632852,8.225383,4.076897,1.302615],[1.295223,-5.450425,-3.386544,2.887413],[-1.684464,3.151483,2.101469,-1.940160]],[[-4.086753,1.645994,5.506848,2.285192],[0.361122,8.322645,7.888795,0.648449],[6.899469,8.354919,4.366315,-5.732020],[-7.229721,-6.659982,7.744481,-5.960014],[0.418036,9.350161,-4.130306,-5.361566],[-6.855593,-8.072492,-3.423947,-6.049946],[6.365081,4.021305,-1.248597,-6.251168],[5.599421,-3.664483,0.283467,3.714808],[3.693183,-6.464322,1.858891,0.459917],[-4.743247,-7.793449,-2.755676,-7.122025],[-0.240523,-5.575837,2.075838,4.112756]],[[6.901549,4.793363,-4.489836,5.100247],[-5.403067,6.786821,-0.701068,5.764518],[-3.765133,1.768000,-0.476097,-3.428691],[5.657863,-6.852196,-3.390549,-8.641080],[1.995392,-2.517287,-0.262875,7.763322],[3.195721,-6.339921,-7.594882,-3.091407],[1.984012,2.938849,-8.981659,-2.939898],[-9.387705,-7.845841,5.866398,1.490518],[1.209429,-9.467143,3.431238,-0.447063],[6.589643,7.969685,-1.045130,-6.230062],[1.094399,1.591025,-2.847478,-3.838019]],[[-7.285836,4.942050,4.948294,3.666112],[-4.740683,-3.626150,8.095707,4.239726],[0.127602,-3.348367,-6.916049,-6.773591],[-1.120688,7.375528,9.304018,-5.254940],[7.928492,0.256596,-7.042375,6.539831],[8.730663,-2.619792,-8.248212,9.743444],[-2.031490,8.623170,-6.351806,2.287599],[1.371242,3.441855,-6.307484,8.585519],[0.022829,-7.651025,9.364651,7.787607],[2.310431,5.007838,9.093557,0.972601],[8.100011,-2.869286,-4.121521,-1.944728]]], dtype = "float32")#candidate|5639|(9, 11, 4)|const|float32
bop_5640 = relay.bitwise_xor(uop_5623.astype('uint16'), relay.reshape(const_5639.astype('uint16'), relay.shape_of(uop_5623))) # shape=(9, 11, 4)
bop_5643 = relay.bitwise_xor(uop_5625.astype('uint16'), relay.reshape(const_5639.astype('uint16'), relay.shape_of(uop_5625))) # shape=(9, 11, 4)
bop_5658 = relay.floor_divide(uop_5631.astype('float32'), bop_5640.astype('float32')) # shape=(9, 11, 4)
bop_5661 = relay.floor_divide(uop_5633.astype('float32'), bop_5643.astype('float32')) # shape=(9, 11, 4)
output = bop_5658
output2 = bop_5661
func_5666 = relay.Function([var_5603,], output)
mod['func_5666'] = func_5666
mod = relay.transform.InferType()(mod)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5667 = relay.var("var_5667", dtype = "float32", shape = (9, 11, 4))#candidate|5667|(9, 11, 4)|var|float32
func_5666_call = mutated_mod.get_global_var('func_5666')
call_5668 = func_5666_call(var_5667)
output = call_5668
func_5669 = relay.Function([var_5667], output)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5682 = relay.var("var_5682", dtype = "int32", shape = (9, 5, 1))#candidate|5682|(9, 5, 1)|var|int32
var_5683 = relay.var("var_5683", dtype = "int32", shape = (9, 5, 3))#candidate|5683|(9, 5, 3)|var|int32
bop_5684 = relay.logical_xor(var_5682.astype('int32'), var_5683.astype('int32')) # shape=(9, 5, 3)
uop_5688 = relay.log2(var_5683.astype('float64')) # shape=(9, 5, 3)
output = relay.Tuple([bop_5684,uop_5688,])
output2 = relay.Tuple([bop_5684,uop_5688,])
func_5691 = relay.Function([var_5682,var_5683,], output)
mod['func_5691'] = func_5691
mod = relay.transform.InferType()(mod)
mutated_mod['func_5691'] = func_5691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5691_call = mutated_mod.get_global_var('func_5691')
var_5693 = relay.var("var_5693", dtype = "int32", shape = (9, 5, 1))#candidate|5693|(9, 5, 1)|var|int32
var_5694 = relay.var("var_5694", dtype = "int32", shape = (9, 5, 3))#candidate|5694|(9, 5, 3)|var|int32
call_5692 = func_5691_call(var_5693,var_5694,)
output = call_5692
func_5695 = relay.Function([var_5693,var_5694,], output)
mutated_mod['func_5695'] = func_5695
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5702 = relay.const([[[0.485437,6.204009],[-0.061660,-9.689793],[-7.713019,3.119292],[-0.170880,-7.719118],[1.414951,-6.734858],[3.250198,7.574426],[-9.868094,-7.456131],[1.554178,4.975368],[-4.935231,4.917515],[-7.781937,7.668911],[-7.857298,-0.363860],[9.251885,2.451281],[-4.434409,7.991570],[9.491781,7.697152],[1.759578,-5.820437]],[[6.317368,5.048432],[-7.394862,-8.377489],[1.082176,7.348501],[-6.311717,-6.736438],[-1.366825,0.034096],[2.753964,-7.091522],[4.877395,-4.281857],[3.408952,1.227008],[-9.741850,4.128063],[-0.345783,-0.146397],[9.308649,3.284980],[2.733798,7.802683],[-9.684875,-2.892489],[5.481405,-2.330388],[-4.714717,2.969990]],[[7.580136,-6.796996],[-8.386758,-0.301356],[5.191753,-0.764417],[-4.764706,5.452862],[5.671129,6.841868],[9.606729,-4.139140],[6.831011,7.282723],[0.128373,5.373068],[9.213997,3.907279],[2.768414,-7.922023],[-3.376420,0.911655],[5.275252,-6.140036],[-0.205675,-8.086678],[9.900680,-7.204969],[9.063140,5.737694]]], dtype = "float32")#candidate|5702|(3, 15, 2)|const|float32
uop_5703 = relay.atan(const_5702.astype('float32')) # shape=(3, 15, 2)
uop_5707 = relay.cos(uop_5703.astype('float64')) # shape=(3, 15, 2)
var_5720 = relay.var("var_5720", dtype = "float64", shape = (3, 15, 2))#candidate|5720|(3, 15, 2)|var|float64
bop_5721 = relay.right_shift(uop_5707.astype('int32'), relay.reshape(var_5720.astype('int32'), relay.shape_of(uop_5707))) # shape=(3, 15, 2)
bop_5730 = relay.less_equal(uop_5703.astype('bool'), relay.reshape(const_5702.astype('bool'), relay.shape_of(uop_5703))) # shape=(3, 15, 2)
bop_5739 = relay.logical_and(bop_5721.astype('bool'), relay.reshape(uop_5703.astype('bool'), relay.shape_of(bop_5721))) # shape=(3, 15, 2)
output = relay.Tuple([bop_5730,bop_5739,])
output2 = relay.Tuple([bop_5730,bop_5739,])
func_5742 = relay.Function([var_5720,], output)
mod['func_5742'] = func_5742
mod = relay.transform.InferType()(mod)
mutated_mod['func_5742'] = func_5742
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5743 = relay.var("var_5743", dtype = "float64", shape = (3, 15, 2))#candidate|5743|(3, 15, 2)|var|float64
func_5742_call = mutated_mod.get_global_var('func_5742')
call_5744 = func_5742_call(var_5743)
output = call_5744
func_5745 = relay.Function([var_5743], output)
mutated_mod['func_5745'] = func_5745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_5791 = relay.TupleGetItem(func_3378_call(), 0)
call_5792 = relay.TupleGetItem(func_3379_call(), 0)
uop_5796 = relay.asinh(call_5791.astype('float32')) # shape=(1080,)
uop_5798 = relay.asinh(call_5792.astype('float32')) # shape=(1080,)
output = uop_5796
output2 = uop_5798
func_5800 = relay.Function([], output)
mod['func_5800'] = func_5800
mod = relay.transform.InferType()(mod)
mutated_mod['func_5800'] = func_5800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5800_call = mutated_mod.get_global_var('func_5800')
call_5801 = func_5800_call()
output = call_5801
func_5802 = relay.Function([], output)
mutated_mod['func_5802'] = func_5802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_5815 = func_3417_call()
call_5816 = func_3417_call()
output = call_5815
output2 = call_5816
func_5823 = relay.Function([], output)
mod['func_5823'] = func_5823
mod = relay.transform.InferType()(mod)
mutated_mod['func_5823'] = func_5823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5823_call = mutated_mod.get_global_var('func_5823')
call_5824 = func_5823_call()
output = call_5824
func_5825 = relay.Function([], output)
mutated_mod['func_5825'] = func_5825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4839_call = mutated_mod.get_global_var('func_4839')
call_5838 = relay.TupleGetItem(func_4838_call(), 0)
call_5839 = relay.TupleGetItem(func_4839_call(), 0)
var_5841 = relay.var("var_5841", dtype = "float32", shape = (936, 3))#candidate|5841|(936, 3)|var|float32
bop_5842 = relay.multiply(call_5838.astype('int32'), var_5841.astype('int32')) # shape=(936, 3)
bop_5845 = relay.multiply(call_5839.astype('int32'), var_5841.astype('int32')) # shape=(936, 3)
func_2630_call = mod.get_global_var('func_2630')
func_2633_call = mutated_mod.get_global_var('func_2633')
var_5847 = relay.var("var_5847", dtype = "float64", shape = (120,))#candidate|5847|(120,)|var|float64
var_5848 = relay.var("var_5848", dtype = "uint8", shape = (3, 252))#candidate|5848|(3, 252)|var|uint8
call_5846 = relay.TupleGetItem(func_2630_call(relay.reshape(var_5847.astype('float64'), [5, 8, 3]), relay.reshape(var_5848.astype('uint8'), [756,]), ), 0)
call_5849 = relay.TupleGetItem(func_2633_call(relay.reshape(var_5847.astype('float64'), [5, 8, 3]), relay.reshape(var_5848.astype('uint8'), [756,]), ), 0)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_5853 = relay.TupleGetItem(func_3378_call(), 0)
call_5854 = relay.TupleGetItem(func_3379_call(), 0)
func_459_call = mod.get_global_var('func_459')
func_462_call = mutated_mod.get_global_var('func_462')
call_5857 = relay.TupleGetItem(func_459_call(relay.reshape(call_5853.astype('uint8'), [6, 15, 12])), 0)
call_5858 = relay.TupleGetItem(func_462_call(relay.reshape(call_5853.astype('uint8'), [6, 15, 12])), 0)
var_5872 = relay.var("var_5872", dtype = "float32", shape = (936, 4))#candidate|5872|(936, 4)|var|float32
bop_5873 = relay.subtract(call_5838.astype('uint8'), var_5872.astype('uint8')) # shape=(936, 4)
bop_5876 = relay.subtract(call_5839.astype('uint8'), var_5872.astype('uint8')) # shape=(936, 4)
func_4137_call = mod.get_global_var('func_4137')
func_4139_call = mutated_mod.get_global_var('func_4139')
const_5884 = relay.const([-1.207805,3.161791,6.623615,5.555694,2.696420,-4.744028,8.408271,5.814173,-1.247164,-6.303445,-8.935419,-1.833747,3.022618,4.067940,-1.568074,-5.470856,2.370580,-4.444551,-3.091388,2.680277,-3.443938,-8.364225,-8.326028,-7.574840,-8.380425,-3.957504,-7.960172,3.728242,-6.013051,-3.744501,-4.564554,9.558982,-3.243956,-0.638720,1.228658,-2.430262,4.372920,3.603887,1.429029,-0.174638,-7.343871,-8.246480,-0.379944,-3.383756,-3.466982,0.360482,1.521418,8.114054,-9.096817,-7.833236,3.759720,-4.699471,9.338079,-0.099294,1.956940,-1.451876,3.748154,-7.274328,-5.810464,-5.850133,2.779614,7.618148,-0.151436,0.720050,-5.138975,-7.661642,-7.507212,2.365619,-7.695528,-7.998994,-0.908550,2.556840,6.508856,6.623937,5.509842,6.666109,8.360627,7.827930,3.488703,7.121379,4.659698,4.442455,-9.908479,7.856694,-9.054025,-1.465193,7.937257,-1.095997,-8.968039,-0.951591,4.446987,-6.272678,5.669843,-4.351349,-4.628671,-0.995711,0.426305,-9.227406,-8.276737,-7.308173,1.153376,-4.817215,-3.151954,-3.705665,-8.832093,-4.705576,-5.831730,4.124539,8.373881,-2.045994,6.195491,7.602506,-0.936476,-4.856082,4.071366,0.974941,0.245799,2.831042,-5.544888,-7.799400,0.889790,-4.135178,-2.841277,2.902385,8.505612,3.369226,-5.560686,9.161747,-9.704889,-0.919152,-9.288049,4.812459,1.439678,1.695385,-2.050960,-6.222305,4.606656,7.742196,-6.011522,0.681005,-5.269687,-5.742051,2.355051,4.982720,4.055844,0.985183,6.847459,-1.076542,-3.761686,-0.928548,8.174604,-7.462485,0.186323,-3.318760,-4.781009,3.410897,6.974969,2.751785,3.635066,-1.086090,-7.162543,-4.270755,-4.761315,-0.913829,-4.254286,6.869760,-1.804293,-9.116846,6.455558,5.238686,-4.461479,-9.652764,1.640989,-7.702687,-8.892161,9.654166,4.236878,-1.602082,-0.116112,-8.285009,8.330241,8.828276,2.205866,8.520125,-5.949695,-5.697908,5.378781,-9.193873,-5.259418,1.221361,-4.487357,-6.782994,-2.453519,2.581742,3.514761,-7.868038,-1.073796,-4.492939,3.280816,-3.854399,0.718465,7.557962,-9.916966,6.217510,-6.966654,3.982364,0.094550,-2.065986,3.312389,2.976210,1.131707,2.267167,3.501958,0.649960,-5.409755,-5.564976,-0.281043,-7.922324,-9.149201,-8.760747,1.982996,3.744529,7.978724,-5.000076,7.224486,2.609241,5.878596,-4.285668,1.267657,-6.100187,-7.894078,7.186851,-3.513744,9.539336,2.889856,3.723426,9.296613,6.833686,9.846139,2.701561,3.964318,9.456518,-6.821495,9.466244,-1.027299,0.007767,7.149842,7.397145,-5.724693,-1.528706,-8.510437,-2.677369,-8.993055,-4.849369,-6.481588,-5.639710,7.111028,-8.233037,-4.948572,2.589570,5.310738,5.494494,1.480405,-0.273142,5.159650,1.065206,3.347907,2.958184,4.843832,9.101899,-2.130418,-3.181210,5.782268,4.759507,-1.956783,-5.346931,9.583605,-1.470157,3.576529,-8.350700,5.060347,-7.674177,-1.728483,-9.647563,-6.233561,7.960177,-5.910579,-9.008594,-8.824821,3.827534,-5.998257,8.555301,0.163176,-4.945815,-6.056275,0.813611,-1.142297,-8.819253,7.862869,-8.080599,-0.130596,-1.401432,0.735503,8.290332,-2.941132,6.290712,-8.673105,-4.634421,-9.745259,-8.316286,-7.176490,0.474250,-1.525431,3.485883,-0.611136,7.422902,2.767220,1.788337,-3.867399,-3.223351,0.126610,2.824488,-5.461470,7.707436,-0.700455,-5.675245,2.826799,9.550194,6.263540,-8.373062,-3.909281,0.172014,2.917859,5.626751,7.347147,9.118171,4.520799,-9.849304,-8.245130,-8.447643,-0.815303,2.201955,-7.816216,8.801963,6.198940,-5.590495,0.976047,4.152498,-6.338029,-2.544404,8.103634,6.691775,-6.388625,-8.283623,8.277938,1.356156,9.349664,-4.297297,2.691514,-6.430347,5.860822,-8.846378,-4.616354,1.218726,-8.231579,-1.943393,9.980822,-0.701641,5.260168,6.678010,-0.030163,-0.665578,9.510874,6.194871,-5.813507,-3.335786,-6.901471,-9.996611,-1.953675,-1.354407,6.440854,-4.953658,-9.572503,-6.510350,-7.733181,-7.794214,-7.029773,-2.258214,4.818777,-2.641410,8.090399,3.723926,-3.734307,-6.062078,-0.481451,8.800740,1.070093,-8.727996,5.548085,-6.021716,-6.332997,-4.368988,3.998868,2.771461,-2.975592,3.056954,-4.574795,-7.104810,-1.904897,0.766607,8.801979,9.277292,1.992002,-0.601109,-0.261164,-7.992112,4.642587,-3.633861,0.642166,-1.225566,3.653682,-6.805717,-2.930630,-5.450428,2.732013,5.728796,2.485419,-1.423364,7.330302,5.159542,2.398604,-6.560149,-6.867232,6.131475,-9.026359,2.082851,5.501095,3.049395,-2.778962,2.115907,-1.222460,-7.415204,9.049956,-2.166107,8.143493,-1.136529,1.539493,-4.895721,4.440050,4.725669,4.846685,-8.870296,-2.577151,-5.970885,3.915256,4.183373,1.581425,9.261331,-2.729353,7.441149,9.773386,-0.206894,-0.395428,-0.984883,-1.975610,-2.942168,7.438476,7.707240,-4.426362,-8.380763,9.641343,2.497374,-1.917980,5.553777,-2.683545,-4.703770,-2.568476,-7.611782,9.744791,9.696558,8.917711,1.115319,-7.598502,-0.762851,5.388483,-8.265163,-9.883620,8.558798,0.442042,2.738116,0.271932,8.446350,-9.377842,-9.963033,5.606286,-5.994788,3.527865,5.716962,-9.703941,3.222896,-9.388339,-1.966042,4.510814,1.635815,-5.327604,6.731253,4.954522,2.696914,-3.938573,6.566057,9.378379,-9.242090,-2.566278,-9.171661,-7.745388,-2.612556,-6.038003,9.336172,-5.136856,-2.626333,-8.614271,-5.162278,-3.154513,7.984644,8.960659,-0.309164,-2.978720,-4.152836,-0.875944,7.075316,-3.456074,-5.323614,-9.743470,-1.736288,-7.458072,3.363700,-8.437665,-4.755933,-1.636262,-1.168383,1.691787,-1.508172,3.857324,-9.238777,-0.419007,-6.970136,7.004461,8.990800,2.187786,-0.530720,-2.616104,-0.581607,5.546448,1.320002,-1.795925,1.367293,0.596226,-3.633204,-7.005398,-5.848377,-5.797064,4.617496,0.065915,-7.740099,4.894536,0.650316,-2.358611,-8.602601,-8.991596,4.367300,5.615393,-6.722506,5.808515,-3.723850,3.748618,-2.630927,9.871686,8.738061,-3.675848,4.418921,-9.592734,0.950033,-1.610644,-1.229418,6.513204,-7.541626,0.941722,5.959791,8.217492,-5.279499,2.354496,-8.623194,9.139759,9.103670,8.997590,7.534074,1.663617,3.652607,-3.615135,0.856126,5.756929,0.784348,-6.343726,4.026641,-7.977327,3.398487,-1.647324,-2.142160,3.700966,3.365351,0.875035,9.766010,6.033386,-9.904090,-6.120764,-2.272075,0.221153,-9.309777,-6.752691,0.573352,-3.814193,-7.048713,5.713800,-1.501903,4.773736,9.972601,-6.199100,4.913491,5.223595,6.096954,6.664188,-7.037397,3.769432,1.756642,-5.348320,-2.937001,5.099806,-1.213869,-7.595414,3.621725,-3.566749,-5.386317,5.497690,8.136969,9.737432,9.430708,-0.555404,-4.977991,-2.875901,7.858659,-0.360169,3.199963,9.605942,-6.831334,-2.919798,9.261788,6.590732,9.920438,3.146997,8.096620,-2.405131,-3.276305,-0.525563,-5.129240,-8.590165,-0.931576,-9.165801,-1.196192,3.855765,6.686289,-4.375974,-2.443998,-8.577354,0.503105,-9.173684,-1.331350,5.343945,7.249999,1.449590,-6.340463,-8.347355,3.656597,8.603703,-7.048623,-4.292748,-7.100916,-1.970945,-5.879572,0.630665,-9.135654,6.168675,-3.165761,6.676365,-7.392360,4.139356,-1.056439,9.657557,-1.915657,8.123905,5.930124,-3.196716,8.171798,3.991379,6.240543,4.465830,-8.682576,2.388183,7.687027,9.317176,0.957792,-4.676142,-5.319275,1.283779,-2.439804,8.625778,3.555714,-7.138698,-3.935053,-5.109582,-3.195034,5.151695,-4.775482,8.304445,-6.069932,-6.910580,4.063240,1.459259,-5.245036,2.272349,-5.522012,6.165573,-5.358052,-8.545191,6.846060,7.715533,-9.564401,-4.002786,9.558272,-6.486640,-2.341258,5.711233,1.172094,6.307538,-2.409502,0.938915,6.436814,-5.390187,-4.526999,-1.621461,2.231172,0.020625,0.864936,1.526143,4.857543,-8.030081,-2.985926,1.038136,-4.313589,9.132861,5.017265,8.187202,6.633036,8.609260,-0.847991,6.695812,0.777156,0.420478,8.878353,6.179551,-3.397288,-0.969456,7.403013,6.632971,5.398338,-1.008638,4.709164,5.869003,6.151221,-8.579919,5.498359,-9.831452,-4.015326,2.321748,-1.191102,-2.950802,-6.912601,8.380084,-4.735017,7.571878,3.665222,4.556604,-5.576140,-1.116125,6.918438,2.802588,-5.214519,3.888091,-3.006698,-1.928839,1.991703,6.298598,-3.227141,2.825462,4.770762,-9.027178,1.837547,9.143688,-7.766366,4.045502,-1.268571,-3.229459,-8.360377,9.914578,-5.212765,6.453663,-0.240153,9.728826,5.510490,-5.372061,-2.599591,-0.907155,-7.624429,0.983178,0.657371,-5.377187,7.219069,-7.578914,-1.392799,-7.977922,-2.934788,-7.812005,1.450308,4.298862,-4.130612,4.515812,-3.166361,-4.277277,-6.006890,1.432412,5.716732,9.403293,6.628592,-8.765174,-6.270070,-8.215514,8.219133,8.964860,8.120785,0.365100,-4.757698,-2.854543,-1.715877,8.811032,-2.740094,-3.278932,-7.028926,-5.604516,-6.358640,0.267188,-6.300723,2.977122,-6.323964,-4.848867,0.118477,-4.264162,-8.346333,-4.220611,5.320993,5.120148,-5.917788,2.774333,-8.649455,-5.407226,8.621789,7.387816,-0.048756,2.982382,4.249044,-8.240745,6.651998,7.214155,2.764465,0.447383,8.573166,-1.281105,-6.301455,7.897365,5.893765,4.964218,3.076750,-0.705559,5.343143,6.743471,2.347397,3.535410,-9.833115,2.904529,-2.679438,-3.176525,4.365619,-1.486778,3.007199,-9.499056,9.143877,0.466271,-1.147839,-7.582447,8.221922,8.728363,3.539518,0.059310,1.689003,9.664173,5.276767,5.020430,-2.472829,0.559608,9.746354,4.530941,8.037626,-2.398537,-0.975920,-7.848513,-7.720202,2.992646,-7.436260,5.435538,2.590275,-4.542621,-6.981418,9.728798,6.805746,-4.542815,4.130517,4.997285,-7.515720,-2.408605,5.957832,-2.372414,-1.453703,5.089939,8.782301,-7.529205,-9.095139,9.869058,2.683938,7.941593,3.816124,8.264369,7.929838,-1.746459,-2.372551,5.357876,1.951518,6.565841,1.768505,-7.396471,0.319365,6.761220,0.530120,7.951020,1.735588,4.791788,-4.669039,5.072419,-3.772278,-4.673690,7.794430,-1.798368,4.068670,-1.347929,-6.503255,8.938946,-9.204863,9.947401,-2.210312,-0.325134,-4.072403,-0.378111,-6.551300,-9.798725,9.320224,-4.682552,-9.387630,3.825819,-1.551862,-9.361488,2.306609,4.603236,-7.156803,7.269333,9.320293,1.933438,-3.739666,-6.458724,7.190779,0.796175,1.755080,2.967670,-4.179272,-2.687620,3.325405,0.281282,-7.648667,-7.681482,-9.722673,5.025229,3.016912,7.314449,4.875922,-1.167423,-2.552415,1.854042,6.779788,-7.228994,-9.224978,4.551735,6.613869,-6.965777,7.408772,4.709947,-0.033273,6.006469,3.416118,0.354526,-9.932677,9.290914,2.330452,8.068933,-5.185973,-2.512625,-8.625999,-9.130869,5.940733,7.342920,3.393522,-7.465730,-4.202370,4.336904,-9.369287,-2.933734,-3.037778,5.703876,-4.486840,9.206026,-5.825011,0.750306,7.763377,2.822994,-0.733340,2.359551,8.432313,-6.463836,3.809445,9.935348,-2.303686,-3.754626,7.460188,3.123163,-5.213853,-8.605060,-0.555331,5.715156,1.656275,-3.335835,-7.558757,8.052330,3.953515,6.049275,1.247591,-5.900221,-3.901033,4.525526,6.092946,0.583104,6.775872,-0.212560,-5.197439,7.314495,-3.122044,8.469870,9.960559,-1.008748,-3.224037,4.355166,-3.398731,-6.014636,-6.294857,3.168612,-0.197151,-9.707124,-3.354300,1.514692,-4.710317,2.178988,0.458264,3.157991,5.147617,7.581808,4.756886,-5.712244,7.819059,-3.434643,-8.377116,6.878964,6.751556,-1.695939,-9.356293,-2.900030,-9.322857,-2.400197,-7.806636,-5.016709,7.097716,-0.228829,-7.063263,1.971150,6.407825,8.260858,6.150160,-1.171516,-1.057415,-0.377990,-1.915074,-8.630016,-5.085432,-5.132545,-8.414910,2.593871,8.937261,1.518674,-9.630728,9.725423,-3.169916,7.268142,9.839500,-8.605882,-4.916306,-0.969412,8.744142,3.946511,8.619967,4.369260,-8.629031,-3.030589,-2.683586,3.283991,-2.301926,-2.640304,5.555733,-2.771863,7.715493,0.912482,6.257678,-3.300547,-9.847574,4.639065,-9.060472,0.534416,0.082349,-6.743712,2.383455,-1.132828,-1.939625,4.405982,-4.550746,-5.589142,-1.220500,6.126729,4.064588,0.973215,4.639761,-6.299142,4.335534,-7.307982,1.153099], dtype = "float32")#candidate|5884|(1176,)|const|float32
call_5883 = relay.TupleGetItem(func_4137_call(relay.reshape(const_5884.astype('float32'), [12, 14, 7])), 2)
call_5885 = relay.TupleGetItem(func_4139_call(relay.reshape(const_5884.astype('float32'), [12, 14, 7])), 2)
func_1601_call = mod.get_global_var('func_1601')
func_1606_call = mutated_mod.get_global_var('func_1606')
const_5887 = relay.const([[-9,-1,1,-5,-5,-6,-7,-7,8,-5,-7,-6,10,7,3,3,6,6,6,-2,8,10,-9,-2,-9,1,-3,-1,10,-6,-3,6,5,-9,-5,5,-10,-9,-10,-7,10,-6,-2,8,9,6,5,1,4,-2,-2,-2,-2,1,-2,2,4,-4,7,2,-6,-7,-10,10,10,-5,-10,5,8,3,-6,-1,-3,9,-7,-5,9,5,-10,-5,8,3,9,-10,-7,8,-8,-4,-3,10,-3,-6,-8,-6,-7,-9,3,5,-3,10,7,-1,-4,-5,-7,-1,-1,5,-8,-8,-3,10,-10,-9,-1,10,4,3,4,7,5,4,-4,3,-1,9,-7,-10,-5,9,6,3,1,-10,-8,-6,8,6,10,-6,-10,3,-3,6,1,-3,5,1,-6,10,-9,-4,8,-8,9,7,8,-9,-4,8,-10,-6,-9,-8,-9,6,5,-4,-9,-1,-10,-8,-10,-9,1,4,10,-4,-9,5,-1,6,2,8,6,-10,10,5,4,-6,3,6,-2,-6,5,8,2,-3,-6,6,2,6,-3,-2,7,3,10,7,2,-4,5,-4,-6,1,-7,3,10,-1,-2,-9,-3,-1,2,6,1,10,9,-1,10,-6,9,-6,9,-2,-10,-10,-3,-7,-6,10,10,1,3,-6,-8,-10,4,-7,-1,3,-2,-6,3,2,6,-7,2,-8,4,10,8,8,-5,-4,6,10,10,4,9,3,10,2,7,-8,5,4,7,-7,7,-1,-9,-2,6,2,-2,9,-2,3,-4,-4,-1,4,8,-2,-3,9,-1,10,-7,-3,7,2,-4,3,-7,6,-3,6,2,-10,1,6,2,-1,10,7,-5,-9,3,-8,-8,8,5,-7,-4,-3,-8,-8,6,-7,-3,-6,-5,-9,4,9,-2,-5,3,-5,9,-3,-6,7,-2,10,1,8,-10,6,-4,6,-4,-4,-3,5,6,10,10,-8,2,-2,6,10,-6,-8,1,-8,-8,-1,1,4,-5,3,-10,2,1,-8,3,-10,4,9,5,10,10,-4,-9,-2,3,-2,8,-8,7,5,1,10,5,-1,-9,-6,4,1,10,-8,1,-7,-3,8,-10,1,-10,9,10,-8,2,-9,-3,8,4,-6],[5,3,-8,-9,4,10,-10,-9,-8,1,-10,4,1,-5,-9,9,4,-3,3,-1,-1,10,9,-4,-6,-6,-5,10,-4,10,-7,9,-3,6,-2,4,7,5,-5,2,1,-10,10,-2,-6,-10,-1,6,1,9,-6,-7,7,8,10,-5,-10,9,6,4,4,-5,-5,7,1,-9,1,2,9,-1,-2,10,-3,1,10,1,1,9,7,2,-3,6,7,1,-10,5,-1,3,5,1,-1,-1,8,-8,7,-2,-1,6,8,5,2,-1,8,4,10,-1,8,5,4,-1,-3,3,1,5,-9,-9,-2,-3,-8,4,-4,1,8,8,-9,-3,1,-8,7,4,-6,8,-5,8,10,1,6,-6,8,-6,-6,-9,9,1,-3,-6,8,-6,-5,-8,6,-10,1,-9,-1,-6,-6,-4,-2,-2,10,3,2,-2,-4,3,-2,-2,-1,4,6,9,-4,-10,9,-3,-2,6,-4,2,-1,-7,9,7,-10,2,-10,-1,-5,1,3,-1,-8,8,7,1,-4,-4,10,3,-2,-8,-5,7,8,-3,9,5,-3,3,-2,2,7,-10,-7,6,7,2,-3,-3,-6,-3,2,-6,2,7,-6,-1,-4,7,-4,-3,-7,3,5,-2,-2,-7,4,9,3,-9,6,-9,10,4,-10,-5,5,10,5,2,-8,4,-2,-9,1,-1,7,7,-9,1,9,10,-3,-5,-2,-8,6,2,4,-3,9,-2,-6,-6,-2,-8,-3,7,7,-6,1,-9,5,4,-3,4,1,-10,5,-5,3,7,2,-3,8,-9,-5,-3,-2,-10,6,-6,-2,-7,2,-3,5,-2,6,5,-9,10,-3,-4,1,-9,-10,5,3,8,-2,-2,-2,4,-4,-9,-3,6,-3,-2,-6,1,-8,-9,-8,8,-1,9,-7,-1,-1,-5,-1,-10,-1,9,5,-7,-8,-6,5,-6,-4,-10,-7,-5,3,-3,-9,9,7,-1,-9,5,-5,4,5,-4,5,2,-5,8,-7,2,-6,-7,-10,5,-7,7,-1,9,10,-5,-9,5,-5,2,6,7,-5,-4,3,4,-10,-1,1,5,7,-6,-8,-10,8,5,6,-7,-8,-3,10,10,-8,1,3,3,-7,-6,-2,1],[8,3,10,4,10,-9,-7,-2,-2,-8,-10,-4,-10,5,-7,-3,4,1,-7,-2,-6,-9,9,-10,4,-5,9,-3,-10,-2,-5,-3,2,-3,-3,-5,-5,2,8,7,9,8,1,-6,2,-7,-4,7,6,-2,6,-6,6,7,1,7,5,-8,1,-7,-4,1,7,-4,10,2,7,-7,7,6,7,7,-1,8,1,-4,-10,-2,4,9,-4,-8,-10,-6,8,-6,5,6,-8,-7,-10,3,7,8,-3,-3,-8,10,5,-7,-7,-9,6,-10,2,1,-8,3,-10,-5,7,-2,1,5,7,1,6,-8,-5,-5,4,10,-10,9,3,-3,-4,-5,6,-10,-5,8,-1,2,-3,-5,-4,-10,8,-4,-3,-1,-1,-1,8,1,2,-5,-8,-1,5,-9,-2,1,8,1,2,10,8,-2,3,-2,-5,-10,-3,3,8,6,10,-2,-3,-4,4,-8,-7,1,-6,-7,-9,5,7,-9,-1,-6,2,-1,-10,-2,1,7,2,10,-8,-10,-3,8,-4,-8,5,6,-4,4,4,-8,-6,6,10,8,4,-6,7,-8,4,6,10,7,-10,7,7,-2,-8,-4,4,-10,-2,-5,2,-1,-9,-6,-10,-2,5,6,-3,-6,-5,-3,2,7,-10,6,8,-10,4,-8,10,5,-7,9,7,5,6,3,1,-6,6,5,-7,1,-1,-6,-8,8,1,-7,3,-2,-10,-10,7,-2,-8,-7,3,8,6,7,-4,1,-2,-6,10,5,3,3,-1,-2,-3,6,6,10,-10,8,-1,1,-9,8,7,1,1,1,-8,-3,-2,7,-4,2,3,10,-10,7,8,-1,1,4,-8,5,7,-9,10,-7,-2,-10,8,8,1,-7,3,3,-2,7,3,7,4,9,1,-8,-2,7,8,-7,-3,7,2,1,8,-3,-1,-1,4,9,-5,-8,5,6,-3,2,5,1,9,1,-9,8,-5,-5,10,-6,-10,9,-10,-1,-8,-8,-10,10,10,-7,-8,-8,-6,1,6,-9,2,2,-5,-4,5,5,8,5,9,-6,10,7,7,-2,-7,-9,-10,-10,5,-7,-3,-8,-10,-10,6,3,10,-2,1,-9,-6,7,1,-3,1,-9],[-4,7,9,-2,-1,-2,8,7,-9,-8,-7,3,2,6,-9,8,-9,9,10,4,-8,-4,10,8,10,-4,-2,-4,-4,10,5,-9,2,-4,-1,8,5,-8,5,-4,-3,-3,7,1,-8,-7,10,-7,5,-9,-10,-8,8,9,3,10,2,-10,1,-2,-4,-1,-6,7,2,10,2,6,-3,5,6,1,-1,9,-4,-2,-10,1,5,-7,-3,-8,4,-6,7,-4,-1,3,6,5,-2,8,-1,-8,-8,-3,4,7,3,7,-7,5,4,9,9,-1,2,-3,-10,-9,-9,-1,-6,-1,6,-1,8,10,-3,3,-4,4,-6,8,1,-4,2,3,8,6,-3,6,2,-3,-8,8,-1,-7,-1,-2,-4,3,6,5,10,-7,-10,-4,2,9,4,-1,2,-3,-4,-7,3,-6,6,10,-5,-10,-1,-1,-2,4,-10,2,-4,-8,9,-7,-3,-9,6,-6,-10,10,-1,-6,-1,-2,5,4,-8,-8,-6,-9,-9,10,2,8,4,-5,7,9,-2,-1,-4,8,7,-1,2,6,2,7,-3,8,-3,4,4,9,4,-5,-5,4,-1,-7,-7,-4,-10,-5,-8,-2,-5,2,-10,7,1,4,-7,9,3,10,-10,9,5,-5,-6,-3,-3,-10,6,-9,-9,2,-3,-3,1,-8,-8,-3,2,6,-6,9,-6,4,-6,6,6,-3,-2,-5,10,4,-10,-10,4,10,-7,-1,10,2,6,3,-9,-3,3,-4,1,8,4,4,6,-7,-5,-5,-4,4,8,-4,-6,-9,-4,1,-10,7,-6,1,-8,-6,-9,-9,9,-4,3,-5,-6,-5,7,6,-4,1,-7,-4,1,8,-3,4,2,-1,8,1,10,4,3,-7,6,-9,-2,-8,4,-4,6,-1,6,3,-7,5,4,9,3,4,-5,2,7,10,-7,10,-2,2,-2,9,-1,9,8,-3,-3,10,-2,-3,2,4,-10,1,-5,8,-7,-5,5,-6,-1,4,9,-9,-4,-4,8,6,-10,9,-9,3,6,-8,3,4,4,5,1,6,8,4,6,3,-6,-3,9,-4,-5,6,6,-1,9,6,2,7,-10,6,-2,3,-3,-6,-2,7,-3,-7,-6,-1]], dtype = "uint16")#candidate|5887|(4, 420)|const|uint16
call_5886 = relay.TupleGetItem(func_1601_call(relay.reshape(const_5887.astype('uint16'), [14, 12, 10]), relay.reshape(call_5883.astype('float32'), [1176,]), relay.reshape(const_5887.astype('float64'), [14, 12, 10]), ), 8)
call_5888 = relay.TupleGetItem(func_1606_call(relay.reshape(const_5887.astype('uint16'), [14, 12, 10]), relay.reshape(call_5883.astype('float32'), [1176,]), relay.reshape(const_5887.astype('float64'), [14, 12, 10]), ), 8)
func_4137_call = mod.get_global_var('func_4137')
func_4139_call = mutated_mod.get_global_var('func_4139')
call_5891 = relay.TupleGetItem(func_4137_call(relay.reshape(const_5884.astype('float32'), [12, 14, 7])), 3)
call_5892 = relay.TupleGetItem(func_4139_call(relay.reshape(const_5884.astype('float32'), [12, 14, 7])), 3)
bop_5893 = relay.bitwise_xor(bop_5873.astype('int32'), call_5838.astype('int32')) # shape=(936, 4)
bop_5896 = relay.bitwise_xor(bop_5876.astype('int32'), call_5839.astype('int32')) # shape=(936, 4)
bop_5897 = relay.less_equal(call_5838.astype('bool'), var_5841.astype('bool')) # shape=(936, 3)
bop_5900 = relay.less_equal(call_5839.astype('bool'), var_5841.astype('bool')) # shape=(936, 3)
func_4650_call = mod.get_global_var('func_4650')
func_4651_call = mutated_mod.get_global_var('func_4651')
call_5904 = relay.TupleGetItem(func_4650_call(), 6)
call_5905 = relay.TupleGetItem(func_4651_call(), 6)
func_4041_call = mod.get_global_var('func_4041')
func_4044_call = mutated_mod.get_global_var('func_4044')
call_5914 = func_4041_call(relay.reshape(var_5848.astype('float32'), [7, 12, 9]))
call_5915 = func_4041_call(relay.reshape(var_5848.astype('float32'), [7, 12, 9]))
func_5361_call = mod.get_global_var('func_5361')
func_5363_call = mutated_mod.get_global_var('func_5363')
call_5916 = relay.TupleGetItem(func_5361_call(relay.reshape(var_5847.astype('float64'), [5, 8, 3])), 0)
call_5917 = relay.TupleGetItem(func_5363_call(relay.reshape(var_5847.astype('float64'), [5, 8, 3])), 0)
output = relay.Tuple([bop_5842,call_5846,var_5847,var_5848,call_5853,call_5857,call_5883,const_5884,call_5886,const_5887,call_5891,bop_5893,bop_5897,call_5904,call_5914,call_5916,])
output2 = relay.Tuple([bop_5845,call_5849,var_5847,var_5848,call_5854,call_5858,call_5885,const_5884,call_5888,const_5887,call_5892,bop_5896,bop_5900,call_5905,call_5915,call_5917,])
func_5921 = relay.Function([var_5841,var_5847,var_5848,var_5872,], output)
mod['func_5921'] = func_5921
mod = relay.transform.InferType()(mod)
var_5922 = relay.var("var_5922", dtype = "float32", shape = (936, 3))#candidate|5922|(936, 3)|var|float32
var_5923 = relay.var("var_5923", dtype = "float64", shape = (120,))#candidate|5923|(120,)|var|float64
var_5924 = relay.var("var_5924", dtype = "uint8", shape = (3, 252))#candidate|5924|(3, 252)|var|uint8
var_5925 = relay.var("var_5925", dtype = "float32", shape = (936, 4))#candidate|5925|(936, 4)|var|float32
output = func_5921(var_5922,var_5923,var_5924,var_5925,)
func_5926 = relay.Function([var_5922,var_5923,var_5924,var_5925,], output)
mutated_mod['func_5926'] = func_5926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_5981 = func_3417_call()
call_5982 = func_3417_call()
uop_5991 = relay.log2(call_5981.astype('float32')) # shape=(10, 9, 8)
uop_5993 = relay.log2(call_5982.astype('float32')) # shape=(10, 9, 8)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_6009 = func_3969_call()
call_6010 = func_3969_call()
output = relay.Tuple([uop_5991,call_6009,])
output2 = relay.Tuple([uop_5993,call_6010,])
func_6011 = relay.Function([], output)
mod['func_6011'] = func_6011
mod = relay.transform.InferType()(mod)
output = func_6011()
func_6012 = relay.Function([], output)
mutated_mod['func_6012'] = func_6012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4231_call = mod.get_global_var('func_4231')
func_4232_call = mutated_mod.get_global_var('func_4232')
call_6015 = relay.TupleGetItem(func_4231_call(), 2)
call_6016 = relay.TupleGetItem(func_4232_call(), 2)
var_6028 = relay.var("var_6028", dtype = "bool", shape = (9, 720))#candidate|6028|(9, 720)|var|bool
bop_6029 = relay.mod(call_6015.astype('float64'), var_6028.astype('float64')) # shape=(9, 720)
bop_6032 = relay.mod(call_6016.astype('float64'), var_6028.astype('float64')) # shape=(9, 720)
func_3141_call = mod.get_global_var('func_3141')
func_3142_call = mutated_mod.get_global_var('func_3142')
call_6036 = relay.TupleGetItem(func_3141_call(), 2)
call_6037 = relay.TupleGetItem(func_3142_call(), 2)
output = relay.Tuple([bop_6029,call_6036,])
output2 = relay.Tuple([bop_6032,call_6037,])
func_6054 = relay.Function([var_6028,], output)
mod['func_6054'] = func_6054
mod = relay.transform.InferType()(mod)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6055 = relay.var("var_6055", dtype = "bool", shape = (9, 720))#candidate|6055|(9, 720)|var|bool
func_6054_call = mutated_mod.get_global_var('func_6054')
call_6056 = func_6054_call(var_6055)
output = call_6056
func_6057 = relay.Function([var_6055], output)
mutated_mod['func_6057'] = func_6057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5823_call = mod.get_global_var('func_5823')
func_5825_call = mutated_mod.get_global_var('func_5825')
call_6059 = func_5823_call()
call_6060 = func_5823_call()
func_3277_call = mod.get_global_var('func_3277')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_6073 = relay.TupleGetItem(func_3277_call(), 0)
call_6074 = relay.TupleGetItem(func_3279_call(), 0)
uop_6117 = relay.asinh(call_6073.astype('float64')) # shape=(5, 8, 3)
uop_6119 = relay.asinh(call_6074.astype('float64')) # shape=(5, 8, 3)
output = relay.Tuple([call_6059,uop_6117,])
output2 = relay.Tuple([call_6060,uop_6119,])
func_6129 = relay.Function([], output)
mod['func_6129'] = func_6129
mod = relay.transform.InferType()(mod)
output = func_6129()
func_6130 = relay.Function([], output)
mutated_mod['func_6130'] = func_6130
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6155 = relay.var("var_6155", dtype = "float64", shape = (10, 12, 6))#candidate|6155|(10, 12, 6)|var|float64
uop_6156 = relay.asinh(var_6155.astype('float64')) # shape=(10, 12, 6)
func_3809_call = mod.get_global_var('func_3809')
func_3812_call = mutated_mod.get_global_var('func_3812')
var_6160 = relay.var("var_6160", dtype = "uint32", shape = (126,))#candidate|6160|(126,)|var|uint32
call_6159 = relay.TupleGetItem(func_3809_call(relay.reshape(var_6160.astype('uint32'), [126,])), 1)
call_6161 = relay.TupleGetItem(func_3812_call(relay.reshape(var_6160.astype('uint32'), [126,])), 1)
var_6164 = relay.var("var_6164", dtype = "uint64", shape = (936, 1))#candidate|6164|(936, 1)|var|uint64
bop_6165 = relay.greater(call_6159.astype('bool'), relay.reshape(var_6164.astype('bool'), relay.shape_of(call_6159))) # shape=(936, 1)
bop_6168 = relay.greater(call_6161.astype('bool'), relay.reshape(var_6164.astype('bool'), relay.shape_of(call_6161))) # shape=(936, 1)
uop_6169 = relay.sqrt(uop_6156.astype('float64')) # shape=(10, 12, 6)
func_5221_call = mod.get_global_var('func_5221')
func_5223_call = mutated_mod.get_global_var('func_5223')
const_6176 = relay.const([1,9,-3,5,6,-4,4,-1,10,2,-10,-5,7,2,-10,10,-6,1,8,3,-9,-7,1,-10,8,5,10,3,-9,5,-1,3,2,7,10,-7,9,2,10,2,-5,9,9,5,8,9,4,7,6,7,-5,6,6,5,1,-7,-6,-4,-8,-3,10,6,-4,10,-8,-7,-3,7,3,7,-1,10,1,-10,-4,7,-5,-8,7,-10,-8,8,-1,1,8,8,10,-5,-6,2,-10,-4,4,-5,-3,-6,3,2,-10,8,9,-9,7,-2,1,-3,-10,7,10,-5,-8,-3,8,4,8,-7,-9,-8,2,-9,1,-3,8,7,3,-10,4,1,3,-9,9,-8,4,-7,5,9,-10,8,-6,6,6,2,3,9,1,7,-8,10,-10,-8,7,-2,2,4,3,-9,8,-9,5,7,8,5,8,7,6,-4,5,-9,3,6,3,-7,5,4,-3,-3,4,6,5,9,-9,4,6,-2,7,9,1,3,-1,3,7,-7,-8,-10,-6,-6,-9,-10,6,-7,8,-4,-1,5,3,8,-6,10,7,8,-10,-2,-5,-5,-6,3,-8,5,4,-3,-9,-9,-5,-10,-1,-10,1,10,-6,-6,-9,8,-5,-9,2,8,-5,8,-7,6,7,9,-10,5,-7,-8,-9,6,-9,3,-10,-7,-7,7,-5,2,-1,-1,3,6,-8,-6,3,1,8,-7,6,-3,9,6,5,8,-10,-8,7,-3,-10,-4,-3,-7,2,9,-8,-8,4,-2,2,6,9,5,8,4,8,-3,4,2,-3,-1,-3,9,3,-8,-9,8,-8,7,2,-6,-9,3,-8,-9,-8,-4,-1,10,-2,2,-1,-1,-3,7,-8,-10,-1,-2,10,1,-6,-8,-6,3,-7,1,-5,-8,-9,-8,5,5,10,4,3,-5,10,5,4,-6,-5,8,7,10,1,4,3,2,1,3,-1,2,-4,7,-7,10,10,-3,5,3,-1,-2,10,-8,-1,-4,1,-6,-3,4,8,3,3,-2,-7,-4,6,3,-3,-9,-3,-9,-9,1,9,-3,1,-2,-9,-5,-1,-7,7,5,2,-4,-8,-1,-9,-10,-8,-3,8,3,10,-6,-7,2,-2,3,2,10,2,7,-4,8,-10,10,6,5,-1,1,-1,-3,-9,-6,-6,10,-8,7,-2,3,-8,9,-6,2,-5,-5,-7,1,5,-6,6,6,3,-5,10,8,-10,-2,3,-2,-8,-7,5,2,7,-8,-3,6,-10,10,8,-8,7,5,-3,-10,-3,-7,-7,8,-6,-7,-5,-5,-4,4,5,2,-9,5,1,-6,-4,-7,-3,-5,3,8,-4,2,-1,2,6,1,-9,9,2,6,-8,9,8,-10,7,-1,-4,9,-9,3,-4,-1,9,-3,-5,6,-4,7,-8,-6,-7,-6,-10,-6,7,-2,-2,-4,-3,1,-7,-3,4,4,-9,9,-7,-4,-1,6,10,8,3,2,-8,5,-3,-6,-10,-9,3,4,-2,-7,-1,-2,2,-2,2,2,8,-7,8,8,-6,-9,-4,8,-3,2,7,4,3,-4,-1,-7,4,10,7,-3,4,1,7,7,-2,4,10,-9,-8,-10,-9,-8,8,8,5,-6,1,8,-7,-8,1,-8,-3,-5,-2,-10,9,8,5,3,-5,-8,8,-6,10,-4,9,-3,1,-5,-3,7,-2,-9,1,8,1,-4,-3,-4,8,3,9,2,-4,-4,2,8,8,-1,-1,7,-5,1,-3,1,10,-9,-2,9,-7,-2,6,-3,9,-5,2,-2,-5,9,9,-9,5,-8,-2,2,3,8,-6,-6,-4,-5,3,7,2,5,-5,-10,6,-7,8,8,3,-1,-7,-2,-9,1,-8,-9,-4,2,1,-10,-4,5,-4,1,9,4,10,10,7,-1,-8,5,-5,1,-3,-4,6,6,4,-9,3,10,-1,3,10,3,4,-1,-7,6,-1,-6,2,9,3,-9,-1,-10,-9,-2,-6,-10,3,1,2,-1,-10,10,-8,5,6,8,3,2,10,5,-9,6,4,3,7,-9,-10,6,-7,-1,-5,2,6,1,6,-2,1,-6,-7,9,4,10,6,-3,-7,7,3,1,1,-5,-10,-1,-7,3,7,-10,1,-4,8,-1,-2,-8,-6,-6,2,6,-10,-2,4,-3,-9,-2,6,9,-3,-8,9,-2,6,-3,-9,10,-6,8,-10,-2,7,1,-10,-7,1,8,3,6,-7,-10,8,8,4,7,-1,3,5,-1,-6,-9,-4,-8,8,8,3,-4,8,6,-9,4,-3,8,-2,-2,7,-7,10,-2,1,6], dtype = "int16")#candidate|6176|(864,)|const|int16
call_6175 = relay.TupleGetItem(func_5221_call(relay.reshape(const_6176.astype('int16'), [9, 12, 8])), 0)
call_6177 = relay.TupleGetItem(func_5223_call(relay.reshape(const_6176.astype('int16'), [9, 12, 8])), 0)
bop_6181 = relay.logical_xor(uop_6156.astype('int8'), relay.reshape(uop_6169.astype('int8'), relay.shape_of(uop_6156))) # shape=(10, 12, 6)
output = relay.Tuple([var_6160,bop_6165,call_6175,const_6176,bop_6181,])
output2 = relay.Tuple([var_6160,bop_6168,call_6177,const_6176,bop_6181,])
F = relay.Function([var_6155,var_6160,var_6164,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6155,var_6160,var_6164,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

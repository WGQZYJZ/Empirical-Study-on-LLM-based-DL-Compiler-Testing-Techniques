==========mod==========
#[version = "0.0.5"]
def @func_4961(%var_4958: Tensor[(104), float64], %var_4959: Tensor[(5, 30), float64]) -> (Tensor[(315), int8], Tensor[(240), int8], Tensor[(1, 585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(1, 104), float64], Tensor[(104), float64], Tensor[(5, 30), float64]) {
  %0 = @func_3881() /* ty=(Tensor[(315), int8], Tensor[(15, 6, 2), float32], Tensor[(315), int16], Tensor[(6, 270), bool]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 585), float64] */, dtype="float64") /* ty=Tensor[(1, 585), float64] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 585), float64] */, dtype="float64") /* ty=Tensor[(1, 585), float64] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(140), uint64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %4 = cast(meta[relay.Constant][2] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %5 = reshape(%1, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %6 = reshape(%2, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %7 = reshape(%3, newshape=[140]) /* ty=Tensor[(140), uint64] */;
  %8 = reshape(%4, newshape=[7, 6]) /* ty=Tensor[(7, 6), float32] */;
  %9 = @func_3968(%5, %6, %7, %8) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %11 = cast(%var_4958, dtype="float64") /* ty=Tensor[(104), float64] */;
  %12 = cast(%var_4959, dtype="float64") /* ty=Tensor[(5, 30), float64] */;
  %13 = reshape(%10, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %14 = reshape(%11, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
  %15 = reshape(%12, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %16 = @func_3048(%13, %14, %15) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) */;
  %17 = %0.0;
  %18 = %9.6;
  %19 = %16.4;
  (%17, %18, meta[relay.Constant][0] /* ty=Tensor[(1, 585), float64] */, meta[relay.Constant][1] /* ty=Tensor[(140), uint64] */, meta[relay.Constant][2] /* ty=Tensor[(42), float32] */, %19, %var_4958, %var_4959)
}

def @func_7020() -> Tensor[(15, 7, 3), float32] {
  @func_2498() /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_6740(%var_6734: Tensor[(5, 9, 12), float32]) -> Tensor[(5, 9, 12), bool] {
  %20 = cast(%var_6734, dtype="float32") /* ty=Tensor[(5, 9, 12), float32] */;
  %21 = atan(%20) /* ty=Tensor[(5, 9, 12), float32] */;
  %22 = cast(%var_6734, dtype="bool") /* ty=Tensor[(5, 9, 12), bool] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="bool") /* ty=Tensor[(5, 9, 12), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%24, %25) /* ty=Tensor[(5, 9, 12), bool] */
}

def @func_3137() -> Tensor[(15, 7, 3), float32] {
  %26 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %26.0
}

def @func_7209(%var_7182: Tensor[(240), int8], %var_7183: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(42), float32], Tensor[(42), float32], Tensor[(240), int8], Tensor[(104), float64], Tensor[(15, 7, 3), float32]) {
  %27 = cast(meta[relay.Constant][3] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %28 = cast(%var_7182, dtype="int8") /* ty=Tensor[(240), int8] */;
  %29 = cast(%var_7183, dtype="float64") /* ty=Tensor[(104), float64] */;
  %30 = reshape(%27, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %31 = reshape(%28, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %32 = reshape(%29, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %33 = @func_2916(%30, %31, %32) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
  %34 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %35 = @func_4257() /* ty=Tensor[(315), int16] */;
  %36 = %33.2;
  %37 = %34.1;
  (%35, %36, meta[relay.Constant][3] /* ty=Tensor[(42), float32] */, %var_7182, %var_7183, %37)
}

def @func_2772() -> Tensor[(315), int16] {
  @func_2162() /* ty=Tensor[(315), int16] */
}

def @func_1143(%var_1120: Tensor[(15, 7, 3), int16]) -> Tensor[(15, 7, 3), float32] {
  %38 = cast(%var_1120, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
  %39 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(15, 7, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 7, 3), int16] */, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %42 = bitwise_or(%40, %41) /* ty=Tensor[(15, 7, 3), int16] */;
  %43 = cast(%var_1120, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%42, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %47 = less_equal(%45, %46) /* ty=Tensor[(15, 7, 3), bool] */;
  %48 = cast(%47, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
  cosh(%48) /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_3006(%var_2999: Tensor[(10, 5, 3), float64], %var_3000: Tensor[(10, 5, 3), float64]) -> (Tensor[(10, 5, 3), float64], Tensor[(15, 7, 3), float64]) {
  %49 = cast(%var_3000, dtype="float64") /* ty=Tensor[(10, 5, 3), float64] */;
  %50 = shape_of(%var_2999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%var_2999, dtype="float64") /* ty=Tensor[(10, 5, 3), float64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %53 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
  %54 = multiply(%51, %52) /* ty=Tensor[(10, 5, 3), float64] */;
  %55 = %53.1;
  (%54, %55)
}

def @func_3460(%var_3425: Tensor[(2, 1, 1), uint64], %var_3426: Tensor[(2, 5, 14), uint64]) -> (Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) {
  %56 = cast(%var_3425, dtype="uint64") /* ty=Tensor[(2, 1, 1), uint64] */;
  %57 = cast(%var_3426, dtype="uint64") /* ty=Tensor[(2, 5, 14), uint64] */;
  %58 = cast(meta[relay.Constant][5] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %59 = reshape(%58, newshape=[7, 16, 4]) /* ty=Tensor[(7, 16, 4), float32] */;
  %60 = @func_1029(%59) /* ty=(Tensor[(7, 16, 4), float32],) */;
  %61 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %62 = left_shift(%56, %57) /* ty=Tensor[(2, 5, 14), uint64] */;
  %63 = %60.0;
  %64 = %61.0;
  (%62, %63, meta[relay.Constant][5] /* ty=Tensor[(448), float32] */, %64)
}

def @func_3155() -> (Tensor[(315), int16],) {
  %65 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %66 = %65.0;
  (%66,)
}

def @func_3048(%var_3034: Tensor[(42), float32], %var_3036: Tensor[(1, 104), float64], %var_3040: Tensor[(150), float64]) -> (Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) {
  %67 = cast(%var_3034, dtype="float32") /* ty=Tensor[(42), float32] */;
  %68 = cast(meta[relay.Constant][6] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %69 = cast(%var_3036, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %70 = reshape(%67, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %71 = reshape(%68, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %72 = reshape(%69, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %73 = @func_2916(%70, %71, %72) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
  %74 = cast(%var_3040, dtype="float64") /* ty=Tensor[(150), float64] */;
  %75 = cast(%var_3040, dtype="float64") /* ty=Tensor[(150), float64] */;
  %76 = reshape(%74, newshape=[10, 5, 3]) /* ty=Tensor[(10, 5, 3), float64] */;
  %77 = reshape(%75, newshape=[10, 5, 3]) /* ty=Tensor[(10, 5, 3), float64] */;
  %78 = @func_3006(%76, %77) /* ty=(Tensor[(10, 5, 3), float64], Tensor[(15, 7, 3), float64]) */;
  %79 = @func_2200() /* ty=Tensor[(315), int16] */;
  %80 = %73.1;
  %81 = %78.1;
  (%79, %80, %var_3034, meta[relay.Constant][6] /* ty=Tensor[(240), int8] */, %var_3036, %81, %var_3040)
}

def @func_5822(%var_5816: Tensor[(448), float32], %var_5817: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(448), float32], Tensor[(104), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(2, 208), float64]) {
  %82 = @func_5345() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %83 = cast(%var_5816, dtype="float32") /* ty=Tensor[(448), float32] */;
  %84 = cast(%var_5817, dtype="float64") /* ty=Tensor[(104), float64] */;
  %85 = cast(meta[relay.Constant][7] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %86 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %87 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 208), float64] */, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
  %88 = reshape(%83, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %89 = reshape(%84, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %90 = reshape(%85, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %91 = reshape(%86, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %92 = reshape(%87, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %93 = @func_2715(%88, %89, %90, %91, %92) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(315), int16], Tensor[(104), float64], Tensor[(30, 6), float32], Tensor[(240), uint64], Tensor[(315), int16], Tensor[(416), uint64], Tensor[(448), int16]) */;
  %94 = %82.0;
  %95 = %93.1;
  (%94, %95, %var_5816, %var_5817, meta[relay.Constant][7] /* ty=Tensor[(180), float32] */, meta[relay.Constant][8] /* ty=Tensor[(240), uint64] */, meta[relay.Constant][9] /* ty=Tensor[(2, 208), float64] */)
}

def @func_5956(%var_5936: Tensor[(338, 2), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(13, 13, 4), float32], Tensor[(338, 2), bool], Tensor[(338, 2), bool]) {
  %96 = @func_4335() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %97 = cast(meta[relay.Constant][10] /* ty=Tensor[(338, 2), uint64] */, dtype="uint64") /* ty=Tensor[(338, 2), uint64] */;
  %98 = reshape(%97, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), uint64] */;
  %99 = @func_5896(%98) /* ty=(Tensor[(13, 13, 4), bool], Tensor[(13, 13, 4), float32]) */;
  %100 = cast(%var_5936, dtype="bool") /* ty=Tensor[(338, 2), bool] */;
  %101 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(338, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %102 = cast(meta[relay.Constant][10] /* ty=Tensor[(338, 2), uint64] */, dtype="bool") /* ty=Tensor[(338, 2), bool] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %104 = cast(%var_5936, dtype="bool") /* ty=Tensor[(338, 2), bool] */;
  %105 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(338, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %106 = cast(meta[relay.Constant][10] /* ty=Tensor[(338, 2), uint64] */, dtype="bool") /* ty=Tensor[(338, 2), bool] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %108 = %96.0;
  %109 = %99.1;
  %110 = logical_and(%102, %103) /* ty=Tensor[(338, 2), bool] */;
  %111 = equal(%106, %107) /* ty=Tensor[(338, 2), bool] */;
  (%108, %109, %110, %111)
}

def @func_7507() -> Tensor[(315), int16] {
  %112 = @func_4914() /* ty=(Tensor[(315), int16],) */;
  %112.0
}

def @func_4595(%var_4590: Tensor[(315), int16]) -> (Tensor[(315), bool],) {
  %113 = @func_3416() /* ty=Tensor[(315), int16] */;
  %114 = cast(%var_4590, dtype="bool") /* ty=Tensor[(315), bool] */;
  %115 = shape_of(%113, dtype="int32") /* ty=Tensor[(1), int32] */;
  %116 = cast(%113, dtype="bool") /* ty=Tensor[(315), bool] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?), bool] */;
  %118 = logical_or(%116, %117) /* ty=Tensor[(315), bool] */;
  (%118,)
}

def @func_7120(%var_7102: Tensor[(2), uint64], %var_7103: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(7, 16, 4), float32]) {
  %119 = cast(%var_7102, dtype="uint64") /* ty=Tensor[(2), uint64] */;
  %120 = cast(%var_7103, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %121 = reshape(%119, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), uint64] */;
  %122 = reshape(%120, newshape=[2, 5, 14]) /* ty=Tensor[(2, 5, 14), uint64] */;
  %123 = @func_3460(%121, %122) /* ty=(Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) */;
  %124 = %123.1;
  %125 = cast(%124, dtype="float32") /* ty=Tensor[(7, 16, 4), float32] */;
  %126 = @func_5227() /* ty=Tensor[(315), int16] */;
  %127 = asin(%125) /* ty=Tensor[(7, 16, 4), float32] */;
  (%126, %var_7102, %var_7103, %127)
}

def @func_6881(%var_6865: int64) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(42), float32], Tensor[(14, 3), float32], Tensor[(240), int8], Tensor[(1, 104), float64]) {
  %128 = cast(%var_6865, dtype="int64") /* ty=int64 */;
  %129 = reshape(%128, newshape=[]) /* ty=int64 */;
  %130 = @func_4388(%129) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %131 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 3), float32] */;
  %132 = cast(meta[relay.Constant][12] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %133 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %134 = reshape(%131, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %135 = reshape(%132, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %136 = reshape(%133, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %137 = @func_2916(%134, %135, %136) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
  %138 = @func_5404() /* ty=Tensor[(15, 7, 3), float32] */;
  %139 = %130.1;
  %140 = %137.2;
  (%138, %139, %var_6865, %140, meta[relay.Constant][11] /* ty=Tensor[(14, 3), float32] */, meta[relay.Constant][12] /* ty=Tensor[(240), int8] */, meta[relay.Constant][13] /* ty=Tensor[(1, 104), float64] */)
}

def @func_2715(%var_2653: Tensor[(448), float32], %var_2667: Tensor[(104), float64], %var_2669: Tensor[(30, 6), float32], %var_2670: Tensor[(240), uint64], %var_2687: Tensor[(416), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(315), int16], Tensor[(104), float64], Tensor[(30, 6), float32], Tensor[(240), uint64], Tensor[(315), int16], Tensor[(416), uint64], Tensor[(448), int16]) {
  %141 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %142 = cast(%var_2667, dtype="float64") /* ty=Tensor[(104), float64] */;
  %143 = cast(meta[relay.Constant][15] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %144 = cast(meta[relay.Constant][15] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %145 = cast(%var_2669, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %146 = cast(%var_2670, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %147 = reshape(%142, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %148 = reshape(%143, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %149 = reshape(%144, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %150 = reshape(%145, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %151 = reshape(%146, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %152 = @func_1900(%147, %148, %149, %150, %151) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
  %153 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %154 = cast(%var_2687, dtype="uint64") /* ty=Tensor[(416), uint64] */;
  %155 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(416), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %156 = cast(meta[relay.Constant][15] /* ty=Tensor[(416), float64] */, dtype="uint64") /* ty=Tensor[(416), uint64] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %158 = cast(meta[relay.Constant][14] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %159 = cast(%var_2653, dtype="float32") /* ty=Tensor[(448), float32] */;
  %160 = reshape(%158, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %161 = reshape(%159, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %162 = @func_2038(%160, %161) /* ty=(Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(120, 2), uint64], Tensor[(3, 16, 9), bool], Tensor[(432), float32], Tensor[(448), float32], Tensor[(7, 16, 4), float32]) */;
  %163 = %162.6;
  %164 = cast(%163, dtype="int16") /* ty=Tensor[(7, 16, 4), int16] */;
  %165 = shape_of(%var_2653, dtype="int32") /* ty=Tensor[(1), int32] */;
  %166 = cast(%var_2653, dtype="int16") /* ty=Tensor[(448), int16] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?), int16] */;
  %168 = %141.1;
  %169 = %152.1;
  %170 = %153.1;
  %171 = bitwise_xor(%156, %157) /* ty=Tensor[(416), uint64] */;
  %172 = left_shift(%166, %167) /* ty=Tensor[(448), int16] */;
  (%168, meta[relay.Constant][14] /* ty=Tensor[(432), float32] */, %169, %var_2667, %var_2669, %var_2670, %170, %171, %172)
}

def @func_5040() -> Tensor[(15, 7, 3), float32] {
  %173 = @func_3137() /* ty=Tensor[(15, 7, 3), float32] */;
  %174 = cast(%173, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
  log10(%174) /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_4798(%var_4783: Tensor[(315), int16]) -> (Tensor[(315), int8], Tensor[(315), int8]) {
  %175 = @func_3076() /* ty=Tensor[(315), int16] */;
  %176 = cast(%var_4783, dtype="int8") /* ty=Tensor[(315), int8] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(1), int32] */;
  %178 = cast(%175, dtype="int8") /* ty=Tensor[(315), int8] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?), int8] */;
  %180 = @func_3881() /* ty=(Tensor[(315), int8], Tensor[(15, 6, 2), float32], Tensor[(315), int16], Tensor[(6, 270), bool]) */;
  %181 = bitwise_and(%178, %179) /* ty=Tensor[(315), int8] */;
  %182 = %180.0;
  (%181, %182)
}

def @func_2480() -> (Tensor[(15, 7, 3), float32],) {
  %183 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %184 = %183.1;
  (%184,)
}

def @func_1954(%var_1943: Tensor[(42, 1), float32], %var_1946: Tensor[(42, 5), float32]) -> (Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42, 5), int8]) {
  %185 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %186 = cast(%var_1943, dtype="float32") /* ty=Tensor[(42, 1), float32] */;
  %187 = reshape(%186, newshape=[2, 3, 7]) /* ty=Tensor[(2, 3, 7), float32] */;
  %188 = @func_134(%187) /* ty=(Tensor[(2, 3, 7), float64],) */;
  %189 = cast(%var_1943, dtype="int8") /* ty=Tensor[(42, 1), int8] */;
  %190 = cast(%var_1946, dtype="int8") /* ty=Tensor[(42, 5), int8] */;
  %191 = %185.0;
  %192 = %188.0;
  %193 = left_shift(%189, %190) /* ty=Tensor[(42, 5), int8] */;
  (%191, %192, %193)
}

def @func_3756() -> Tensor[(315), int16] {
  %194 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %194.0
}

def @func_4388(%var_4367: int64) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
  %195 = cast(%var_4367, dtype="int64") /* ty=int64 */;
  %196 = cast(meta[relay.Constant][16] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %197 = reshape(%195, newshape=[]) /* ty=int64 */;
  %198 = reshape(%196, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %199 = @func_2429(%197, %198) /* ty=(Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %200 = @func_3137() /* ty=Tensor[(15, 7, 3), float32] */;
  %201 = %199.1;
  (%200, %201, %var_4367, meta[relay.Constant][16] /* ty=Tensor[(1620), int64] */)
}

def @func_7929() -> (Tensor[(315), int16],) {
  %202 = @func_3401() /* ty=(Tensor[(315), int16],) */;
  %203 = %202.0;
  (%203,)
}

def @func_6523() -> (Tensor[(16, 14), float64],) {
  %204 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 14), float64] */;
  %205 = log(%204) /* ty=Tensor[(16, 14), float64] */;
  (%205,)
}

def @func_3881() -> (Tensor[(315), int8], Tensor[(15, 6, 2), float32], Tensor[(315), int16], Tensor[(6, 270), bool]) {
  %206 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
  %207 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %208 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 270), int64] */, dtype="int64") /* ty=Tensor[(6, 270), int64] */;
  %209 = reshape(%207, newshape=[]) /* ty=int64 */;
  %210 = reshape(%208, newshape=[9, 12, 15]) /* ty=Tensor[(9, 12, 15), int64] */;
  %211 = @func_347(%209, %210) /* ty=(Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) */;
  %212 = cast(4 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %213 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 270), int64] */, dtype="bool") /* ty=Tensor[(6, 270), bool] */;
  %214 = %206.0;
  %215 = %211.3;
  %216 = @func_3416() /* ty=Tensor[(315), int16] */;
  %217 = logical_or(%212, %213) /* ty=Tensor[(6, 270), bool] */;
  (%214, %215, %216, %217)
}

def @func_7321() -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float32], Tensor[(676), uint64]) {
  %218 = @func_4633() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %219 = cast(meta[relay.Constant][19] /* ty=Tensor[(676), uint64] */, dtype="uint64") /* ty=Tensor[(676), uint64] */;
  %220 = reshape(%219, newshape=[338, 2]) /* ty=Tensor[(338, 2), uint64] */;
  %221 = @func_5956(%220) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(13, 13, 4), float32], Tensor[(338, 2), bool], Tensor[(338, 2), bool]) */;
  %222 = %218.0;
  %223 = @func_5227() /* ty=Tensor[(315), int16] */;
  %224 = %221.0;
  (%222, %223, %224, meta[relay.Constant][19] /* ty=Tensor[(676), uint64] */)
}

def @func_3667() -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32]) {
  %225 = @func_3401() /* ty=(Tensor[(315), int16],) */;
  %226 = %225.0;
  %227 = @func_3137() /* ty=Tensor[(15, 7, 3), float32] */;
  (%226, %227)
}

def @func_5711(%var_5699: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(140), uint64], Tensor[(104), float64], Tensor[(150), float64], Tensor[(2, 120), float64], Tensor[(42), float32]) {
  %228 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %229 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 120), uint64] */, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %230 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 120), uint64] */, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %231 = reshape(%229, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %232 = reshape(%230, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %233 = @func_1368(%231, %232) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */;
  %234 = cast(%var_5699, dtype="float64") /* ty=Tensor[(104), float64] */;
  %235 = cast(meta[relay.Constant][21] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %236 = reshape(%234, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %237 = reshape(%235, newshape=[5, 30]) /* ty=Tensor[(5, 30), float64] */;
  %238 = @func_4961(%236, %237) /* ty=(Tensor[(315), int8], Tensor[(240), int8], Tensor[(1, 585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(1, 104), float64], Tensor[(104), float64], Tensor[(5, 30), float64]) */;
  %239 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 120), uint64] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %240 = atanh(%239) /* ty=Tensor[(2, 120), float32] */;
  %241 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 120), uint64] */, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(2), int32] */;
  %243 = cast(%240, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %245 = divide(%243, %244) /* ty=Tensor[(2, 120), float64] */;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %247 = sigmoid(%246) /* ty=Tensor[(2, 120), float32] */;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %249 = cast(%var_5699, dtype="float64") /* ty=Tensor[(104), float64] */;
  %250 = cast(meta[relay.Constant][21] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %251 = reshape(%249, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %252 = reshape(%250, newshape=[5, 30]) /* ty=Tensor[(5, 30), float64] */;
  %253 = @func_4961(%251, %252) /* ty=(Tensor[(315), int8], Tensor[(240), int8], Tensor[(1, 585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(1, 104), float64], Tensor[(104), float64], Tensor[(5, 30), float64]) */;
  %254 = %228.0;
  %255 = %233.1;
  %256 = %238.3;
  %257 = rsqrt(%248) /* ty=Tensor[(2, 120), float64] */;
  %258 = %253.4;
  (%254, %255, %256, %var_5699, meta[relay.Constant][21] /* ty=Tensor[(150), float64] */, %257, %258)
}

def @main(%var_8449: Tensor[(1, 240), uint64], %var_8450: Tensor[(1620), int64], %var_8458: Tensor[(11, 240), uint64]) -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1620), int64], Tensor[(11, 240), bool], Tensor[(11, 240), uint16]) {
  %259 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %260 = @func_3416() /* ty=Tensor[(315), int16] */;
  %261 = cast(%260, dtype="int16") /* ty=Tensor[(315), int16] */;
  %262 = cast(%var_8449, dtype="uint64") /* ty=Tensor[(1, 240), uint64] */;
  %263 = cast(%var_8450, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %264 = reshape(%261, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %265 = reshape(%262, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %266 = reshape(%263, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %267 = @func_3248(%264, %265, %266) /* ty=(Tensor[(315), bool], Tensor[(13, 8, 4), float64], Tensor[(104), float64], Tensor[(208, 2), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %268 = cast(%var_8449, dtype="bool") /* ty=Tensor[(1, 240), bool] */;
  %269 = cast(%var_8458, dtype="bool") /* ty=Tensor[(11, 240), bool] */;
  %270 = cast(%var_8449, dtype="uint16") /* ty=Tensor[(1, 240), uint16] */;
  %271 = cast(%var_8458, dtype="uint16") /* ty=Tensor[(11, 240), uint16] */;
  %272 = %259.0;
  %273 = %267.2;
  %274 = greater_equal(%268, %269) /* ty=Tensor[(11, 240), bool] */;
  %275 = bitwise_xor(%270, %271) /* ty=Tensor[(11, 240), uint16] */;
  (%260, %272, %273, %var_8450, %274, %275)
}

def @func_4633() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %276 = @func_3667() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %277 = @func_2162() /* ty=Tensor[(315), int16] */;
  %278 = %276.0;
  (%277, %278)
}

def @func_4540() -> Tensor[(315), int16] {
  @func_4257() /* ty=Tensor[(315), int16] */
}

def @func_2560() -> (Tensor[(315), int8], Tensor[(15, 7, 3), float64]) {
  %279 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %280 = %279.1;
  %281 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %282 = %281.1;
  %283 = cast(%282, dtype="int8") /* ty=Tensor[(15, 7, 3), int8] */;
  %284 = shape_of(%280, dtype="int32") /* ty=Tensor[(1), int32] */;
  %285 = cast(%280, dtype="int8") /* ty=Tensor[(315), int8] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?), int8] */;
  %287 = cast(%282, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %288 = minimum(%285, %286) /* ty=Tensor[(315), int8] */;
  %289 = sinh(%287) /* ty=Tensor[(15, 7, 3), float64] */;
  (%288, %289)
}

def @func_3968(%var_3906: Tensor[(3, 13, 15), float64], %var_3907: Tensor[(3, 13, 15), float64], %var_3955: Tensor[(140), uint64], %var_3961: Tensor[(7, 6), float32]) -> (Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) {
  %290 = @func_3401() /* ty=(Tensor[(315), int16],) */;
  %291 = cast(%var_3907, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
  %292 = shape_of(%var_3906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%var_3906, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %295 = floor_mod(%293, %294) /* ty=Tensor[(3, 13, 15), float64] */;
  %296 = cast(%var_3907, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
  %297 = shape_of(%295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%295, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %300 = cast(meta[relay.Constant][22] /* ty=Tensor[(2), uint64] */, dtype="uint64") /* ty=Tensor[(2), uint64] */;
  %301 = cast(%var_3955, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %302 = reshape(%300, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), uint64] */;
  %303 = reshape(%301, newshape=[2, 5, 14]) /* ty=Tensor[(2, 5, 14), uint64] */;
  %304 = @func_3460(%302, %303) /* ty=(Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) */;
  %305 = cast(%var_3961, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
  %306 = cast(meta[relay.Constant][23] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %307 = cast(meta[relay.Constant][24] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %308 = reshape(%305, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %309 = reshape(%306, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
  %310 = reshape(%307, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %311 = @func_3048(%308, %309, %310) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) */;
  %312 = %290.0;
  %313 = equal(%298, %299) /* ty=Tensor[(3, 13, 15), bool] */;
  %314 = @func_2200() /* ty=Tensor[(315), int16] */;
  %315 = %304.2;
  %316 = %311.3;
  (%312, %313, %314, %315, meta[relay.Constant][22] /* ty=Tensor[(2), uint64] */, %var_3955, %316, %var_3961, meta[relay.Constant][23] /* ty=Tensor[(104), float64] */, meta[relay.Constant][24] /* ty=Tensor[(150), float64] */)
}

def @func_2946() -> (Tensor[(15, 7, 3), float32],) {
  %317 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
  (%317,)
}

def @func_5318() -> (Tensor[(13, 3, 11), float64],) {
  %318 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 3, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
  %319 = sin(%318) /* ty=Tensor[(13, 3, 11), float64] */;
  (%319,)
}

def @func_1728(%var_1706: Tensor[(3, 16, 9), float32], %var_1717: Tensor[(4, 112), float32]) -> (Tensor[(7, 16, 4), float32], Tensor[(4, 112), float32], Tensor[(3, 16, 9), bool]) {
  %320 = cast(%var_1717, dtype="float32") /* ty=Tensor[(4, 112), float32] */;
  %321 = reshape(%320, newshape=[7, 16, 4]) /* ty=Tensor[(7, 16, 4), float32] */;
  %322 = @func_1029(%321) /* ty=(Tensor[(7, 16, 4), float32],) */;
  %323 = cast(%var_1706, dtype="float32") /* ty=Tensor[(3, 16, 9), float32] */;
  %324 = log(%323) /* ty=Tensor[(3, 16, 9), float32] */;
  %325 = cast(%324, dtype="float64") /* ty=Tensor[(3, 16, 9), float64] */;
  %326 = cos(%325) /* ty=Tensor[(3, 16, 9), float64] */;
  %327 = cast(%var_1706, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %331 = %322.0;
  %332 = not_equal(%329, %330) /* ty=Tensor[(3, 16, 9), bool] */;
  (%331, %var_1717, %332)
}

def @func_2162() -> Tensor[(315), int16] {
  %333 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %333.2
}

def @func_2429(%var_2408: int64, %var_2409: Tensor[(1620), int64]) -> (Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
  %334 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %335 = %334.2;
  %336 = cast(%335, dtype="float64") /* ty=Tensor[(315), float64] */;
  %337 = cast(%var_2408, dtype="int64") /* ty=int64 */;
  %338 = cast(%var_2409, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %339 = reshape(%337, newshape=[]) /* ty=int64 */;
  %340 = reshape(%338, newshape=[9, 12, 15]) /* ty=Tensor[(9, 12, 15), int64] */;
  %341 = @func_347(%339, %340) /* ty=(Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) */;
  %342 = atanh(%336) /* ty=Tensor[(315), float64] */;
  %343 = %341.0;
  (%342, %343, %var_2408, %var_2409)
}

def @func_2038(%var_2027: Tensor[(432), float32], %var_2028: Tensor[(448), float32]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(120, 2), uint64], Tensor[(3, 16, 9), bool], Tensor[(432), float32], Tensor[(448), float32], Tensor[(7, 16, 4), float32]) {
  %344 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %345 = cast(meta[relay.Constant][26] /* ty=Tensor[(120, 2), uint64] */, dtype="uint64") /* ty=Tensor[(120, 2), uint64] */;
  %346 = cast(meta[relay.Constant][26] /* ty=Tensor[(120, 2), uint64] */, dtype="uint64") /* ty=Tensor[(120, 2), uint64] */;
  %347 = reshape(%345, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %348 = reshape(%346, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %349 = @func_1368(%347, %348) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */;
  %350 = cast(%var_2027, dtype="float32") /* ty=Tensor[(432), float32] */;
  %351 = cast(%var_2028, dtype="float32") /* ty=Tensor[(448), float32] */;
  %352 = reshape(%350, newshape=[3, 16, 9]) /* ty=Tensor[(3, 16, 9), float32] */;
  %353 = reshape(%351, newshape=[4, 112]) /* ty=Tensor[(4, 112), float32] */;
  %354 = @func_1728(%352, %353) /* ty=(Tensor[(7, 16, 4), float32], Tensor[(4, 112), float32], Tensor[(3, 16, 9), bool]) */;
  %355 = cast(%var_2028, dtype="float32") /* ty=Tensor[(448), float32] */;
  %356 = reshape(%355, newshape=[7, 16, 4]) /* ty=Tensor[(7, 16, 4), float32] */;
  %357 = @func_1029(%356) /* ty=(Tensor[(7, 16, 4), float32],) */;
  %358 = %344.0;
  %359 = %349.1;
  %360 = %354.2;
  %361 = %357.0;
  (%358, %359, meta[relay.Constant][26] /* ty=Tensor[(120, 2), uint64] */, %360, %var_2027, %var_2028, %361)
}

def @func_3076() -> Tensor[(315), int16] {
  @func_2772() /* ty=Tensor[(315), int16] */
}

def @func_3993() -> (Tensor[(315), int16],) {
  %362 = @func_3076() /* ty=Tensor[(315), int16] */;
  (%362,)
}

def @func_4742(%var_4727: Tensor[(15, 7, 3), float64]) -> (Tensor[(15, 7, 3), uint64], Tensor[(315), int16]) {
  %363 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
  %364 = %363.1;
  %365 = cast(%var_4727, dtype="uint64") /* ty=Tensor[(15, 7, 3), uint64] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%364, dtype="uint64") /* ty=Tensor[(15, 7, 3), uint64] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %369 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %370 = right_shift(%367, %368) /* ty=Tensor[(15, 7, 3), uint64] */;
  %371 = %369.0;
  (%370, %371)
}

def @func_4225(%var_4220: Tensor[(42), float32], %var_4221: Tensor[(210), float32]) -> (Tensor[(315), bool], Tensor[(315), int16], Tensor[(42), float32], Tensor[(210), float32]) {
  %372 = @func_3155() /* ty=(Tensor[(315), int16],) */;
  %373 = %372.0;
  %374 = cast(meta[relay.Constant][27] /* ty=Tensor[(315), int16] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(1), int32] */;
  %376 = cast(%373, dtype="bool") /* ty=Tensor[(315), bool] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?), bool] */;
  %378 = cast(%var_4220, dtype="float32") /* ty=Tensor[(42), float32] */;
  %379 = cast(%var_4221, dtype="float32") /* ty=Tensor[(210), float32] */;
  %380 = reshape(%378, newshape=[42, 1]) /* ty=Tensor[(42, 1), float32] */;
  %381 = reshape(%379, newshape=[42, 5]) /* ty=Tensor[(42, 5), float32] */;
  %382 = @func_1954(%380, %381) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42, 5), int8]) */;
  %383 = equal(%376, %377) /* ty=Tensor[(315), bool] */;
  %384 = %382.0;
  (%383, %384, %var_4220, %var_4221)
}

def @func_1700() -> (Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) {
  %385 = cast(3.4729f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %386 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 7, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 11), float64] */;
  %387 = cast(meta[relay.Constant][29] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %388 = reshape(%387, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), int16] */;
  %389 = floor_mod(%385, %386) /* ty=Tensor[(2, 7, 11), float64] */;
  %390 = @func_1143(%388) /* ty=Tensor[(15, 7, 3), float32] */;
  (%389, %390, meta[relay.Constant][29] /* ty=Tensor[(315), int16] */)
}

def @func_4257() -> Tensor[(315), int16] {
  @func_2772() /* ty=Tensor[(315), int16] */
}

def @func_4826() -> Tensor[(315), float32] {
  %391 = @func_3155() /* ty=(Tensor[(315), int16],) */;
  %392 = %391.0;
  %393 = cast(%392, dtype="float32") /* ty=Tensor[(315), float32] */;
  sinh(%393) /* ty=Tensor[(315), float32] */
}

def @func_7798(%var_7792: Tensor[(2, 11, 10), uint16], %var_7793: Tensor[(2, 11, 10), uint16]) -> (Tensor[(2, 11, 10), uint16],) {
  %394 = cast(%var_7793, dtype="uint16") /* ty=Tensor[(2, 11, 10), uint16] */;
  %395 = shape_of(%var_7792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%var_7792, dtype="uint16") /* ty=Tensor[(2, 11, 10), uint16] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %398 = add(%396, %397) /* ty=Tensor[(2, 11, 10), uint16] */;
  (%398,)
}

def @func_5565(%var_5559: Tensor[(320), float64]) -> (Tensor[(315), float32], Tensor[(5, 8, 8), float64], float64, Tensor[(320), float64]) {
  %399 = cast(1.20781f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %400 = cast(%var_5559, dtype="float64") /* ty=Tensor[(320), float64] */;
  %401 = reshape(%399, newshape=[]) /* ty=float64 */;
  %402 = reshape(%400, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %403 = @func_4826() /* ty=Tensor[(315), float32] */;
  %404 = @func_5364(%401, %402) /* ty=Tensor[(5, 8, 8), float64] */;
  (%403, %404, 1.20781f64 /* ty=float64 */, %var_5559)
}

def @func_2156(%var_2143: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), int32],) {
  %405 = cast(%var_2143, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %406 = tan(%405) /* ty=Tensor[(7, 11, 4), float64] */;
  %407 = cast(%var_2143, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %411 = logical_xor(%409, %410) /* ty=Tensor[(7, 11, 4), int32] */;
  (%411,)
}

def @func_6688() -> (Tensor[(315), int16],) {
  %412 = @func_3993() /* ty=(Tensor[(315), int16],) */;
  %413 = %412.0;
  (%413,)
}

def @func_3248(%var_3205: Tensor[(315), int16], %var_3237: Tensor[(240), uint64], %var_3244: Tensor[(1620), int64]) -> (Tensor[(315), bool], Tensor[(13, 8, 4), float64], Tensor[(104), float64], Tensor[(208, 2), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
  %414 = @func_3155() /* ty=(Tensor[(315), int16],) */;
  %415 = %414.0;
  %416 = cast(%var_3205, dtype="bool") /* ty=Tensor[(315), bool] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(1), int32] */;
  %418 = cast(%415, dtype="bool") /* ty=Tensor[(315), bool] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?), bool] */;
  %420 = cast(meta[relay.Constant][30] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %421 = cast(meta[relay.Constant][31] /* ty=Tensor[(208, 2), float64] */, dtype="float64") /* ty=Tensor[(208, 2), float64] */;
  %422 = cast(meta[relay.Constant][31] /* ty=Tensor[(208, 2), float64] */, dtype="float64") /* ty=Tensor[(208, 2), float64] */;
  %423 = cast(meta[relay.Constant][32] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %424 = cast(%var_3237, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %425 = reshape(%420, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %426 = reshape(%421, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %427 = reshape(%422, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %428 = reshape(%423, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %429 = reshape(%424, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %430 = @func_1900(%425, %426, %427, %428, %429) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
  %431 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %432 = cast(%var_3244, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %433 = reshape(%431, newshape=[]) /* ty=int64 */;
  %434 = reshape(%432, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %435 = @func_2429(%433, %434) /* ty=(Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %436 = less(%418, %419) /* ty=Tensor[(315), bool] */;
  %437 = %430.5;
  %438 = %435.1;
  (%436, %437, meta[relay.Constant][30] /* ty=Tensor[(104), float64] */, meta[relay.Constant][31] /* ty=Tensor[(208, 2), float64] */, meta[relay.Constant][32] /* ty=Tensor[(180), float32] */, %var_3237, %438, -8 /* ty=int64 */, %var_3244)
}

def @func_5364(%var_5358: float64, %var_5359: Tensor[(5, 8, 8), float64]) -> Tensor[(5, 8, 8), float64] {
  %439 = cast(%var_5358, dtype="float64") /* ty=float64 */;
  %440 = cast(%var_5359, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  power(%439, %440) /* ty=Tensor[(5, 8, 8), float64] */
}

def @func_1368(%var_1354: Tensor[(10, 4, 6), uint64], %var_1355: Tensor[(10, 4, 6), uint64]) -> (Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) {
  %441 = cast(%var_1355, dtype="bool") /* ty=Tensor[(10, 4, 6), bool] */;
  %442 = shape_of(%var_1354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_1354, dtype="bool") /* ty=Tensor[(10, 4, 6), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = cast(%var_1355, dtype="float32") /* ty=Tensor[(10, 4, 6), float32] */;
  %446 = exp(%445) /* ty=Tensor[(10, 4, 6), float32] */;
  %447 = cast(%446, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
  %448 = less_equal(%443, %444) /* ty=Tensor[(10, 4, 6), bool] */;
  %449 = erf(%447) /* ty=Tensor[(10, 4, 6), float64] */;
  (%448, %449)
}

def @func_4679() -> (Tensor[(315), int16],) {
  %450 = @func_2162() /* ty=Tensor[(315), int16] */;
  (%450,)
}

def @func_1208(%var_1201: Tensor[(15, 9, 10), uint16]) -> (Tensor[(15, 9, 10), bool],) {
  %451 = cast(%var_1201, dtype="bool") /* ty=Tensor[(15, 9, 10), bool] */;
  %452 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(15, 9, 10), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 9, 10), uint16] */, dtype="bool") /* ty=Tensor[(15, 9, 10), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = greater_equal(%453, %454) /* ty=Tensor[(15, 9, 10), bool] */;
  (%455,)
}

def @func_2606(%var_2593: Tensor[(2, 12, 10), int8], %var_2594: Tensor[(2, 12, 10), int8]) -> Tensor[(2, 12, 10), int8] {
  %456 = cast(%var_2594, dtype="int8") /* ty=Tensor[(2, 12, 10), int8] */;
  %457 = shape_of(%var_2593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%var_2593, dtype="int8") /* ty=Tensor[(2, 12, 10), int8] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%458, %459) /* ty=Tensor[(2, 12, 10), int8] */
}

def @func_1758() -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32]) {
  %460 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %461 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %462 = %460.2;
  %463 = %461.1;
  (%462, %463)
}

def @func_4146(%var_4127: float32, %var_4140: Tensor[(42), float32], %var_4141: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(11, 12, 1), bool], float32, Tensor[(33, 4), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(42), float32], Tensor[(104), float64], Tensor[(150), float64]) {
  %464 = cast(%var_4127, dtype="float32") /* ty=float32 */;
  %465 = cast(meta[relay.Constant][34] /* ty=Tensor[(33, 4), float32] */, dtype="float32") /* ty=Tensor[(33, 4), float32] */;
  %466 = reshape(%464, newshape=[]) /* ty=float32 */;
  %467 = reshape(%465, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
  %468 = cast(%var_4140, dtype="float32") /* ty=Tensor[(42), float32] */;
  %469 = cast(%var_4141, dtype="float64") /* ty=Tensor[(104), float64] */;
  %470 = cast(meta[relay.Constant][35] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %471 = reshape(%468, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %472 = reshape(%469, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
  %473 = reshape(%470, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %474 = @func_3048(%471, %472, %473) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) */;
  %475 = @func_2162() /* ty=Tensor[(315), int16] */;
  %476 = @func_325(%466, %467) /* ty=Tensor[(11, 12, 1), bool] */;
  %477 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
  %478 = %474.0;
  (%475, %476, %var_4127, meta[relay.Constant][34] /* ty=Tensor[(33, 4), float32] */, %477, %478, %var_4140, %var_4141, meta[relay.Constant][35] /* ty=Tensor[(150), float64] */)
}

def @func_2200() -> Tensor[(315), int16] {
  @func_2162() /* ty=Tensor[(315), int16] */
}

def @func_1029(%var_1023: Tensor[(7, 16, 4), float32]) -> (Tensor[(7, 16, 4), float32],) {
  %479 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 16, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 4), float32] */;
  %480 = shape_of(%var_1023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%var_1023, dtype="float32") /* ty=Tensor[(7, 16, 4), float32] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %483 = divide(%481, %482) /* ty=Tensor[(7, 16, 4), float32] */;
  (%483,)
}

def @func_5771(%var_5762: Tensor[(104), float64], %var_5763: Tensor[(416), float64], %var_5764: Tensor[(90, 2), float32], %var_5765: Tensor[(240), uint64]) -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(104), float64], Tensor[(416), float64], Tensor[(90, 2), float32], Tensor[(240), uint64], Tensor[(315), int16]) {
  %484 = cast(%var_5762, dtype="float64") /* ty=Tensor[(104), float64] */;
  %485 = cast(%var_5763, dtype="float64") /* ty=Tensor[(416), float64] */;
  %486 = cast(%var_5763, dtype="float64") /* ty=Tensor[(416), float64] */;
  %487 = cast(%var_5764, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %488 = cast(%var_5765, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %489 = reshape(%484, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %490 = reshape(%485, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %491 = reshape(%486, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %492 = reshape(%487, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %493 = reshape(%488, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %494 = @func_1900(%489, %490, %491, %492, %493) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
  %495 = @func_3756() /* ty=Tensor[(315), int16] */;
  %496 = %494.1;
  %497 = @func_5227() /* ty=Tensor[(315), int16] */;
  (%495, %496, %var_5762, %var_5763, %var_5764, %var_5765, %497)
}

def @func_3689() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %498 = @func_3155() /* ty=(Tensor[(315), int16],) */;
  %499 = @func_3416() /* ty=Tensor[(315), int16] */;
  %500 = %498.0;
  (%499, %500)
}

def @func_5404() -> Tensor[(15, 7, 3), float32] {
  %501 = @func_4335() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %501.0
}

def @func_6839() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %502 = @func_2200() /* ty=Tensor[(315), int16] */;
  %503 = @func_4257() /* ty=Tensor[(315), int16] */;
  (%502, %503)
}

def @func_5148(%var_5135: Tensor[(15, 7, 3), float32]) -> Tensor[(15, 7, 3), bool] {
  %504 = @func_5040() /* ty=Tensor[(15, 7, 3), float32] */;
  %505 = cast(%var_5135, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %506 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%504, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%507, %508) /* ty=Tensor[(15, 7, 3), bool] */
}

def @func_5111() -> (Tensor[(15, 7, 3), float32],) {
  %509 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %510 = %509.0;
  (%510,)
}

def @func_2498() -> Tensor[(15, 7, 3), float32] {
  %511 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %511.0
}

def @func_5989() -> Tensor[(315), int16] {
  %512 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %512.0
}

def @func_5868() -> Tensor[(15, 7, 3), float32] {
  %513 = @func_5111() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %513.0
}

def @func_4490(%var_4473: Tensor[(42, 1), float32]) -> (Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(42, 1), float32]) {
  %514 = @func_2200() /* ty=Tensor[(315), int16] */;
  %515 = cast(%514, dtype="float32") /* ty=Tensor[(315), float32] */;
  %516 = cast(%var_4473, dtype="float32") /* ty=Tensor[(42, 1), float32] */;
  %517 = reshape(%515, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float32] */;
  %518 = reshape(%516, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %519 = @func_4459(%517, %518) /* ty=(Tensor[(15, 7, 3), uint8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(315), int16]) */;
  %520 = %519.3;
  (%514, %520, %var_4473)
}

def @func_5750(%var_5739: Tensor[(240), uint64]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(240), uint64]) {
  %521 = cast(%var_5739, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %522 = cast(%var_5739, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %523 = reshape(%521, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %524 = reshape(%522, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %525 = @func_1368(%523, %524) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */;
  %526 = @func_5227() /* ty=Tensor[(315), int16] */;
  %527 = %525.1;
  (%526, %527, %var_5739)
}

def @func_6406(%var_6370: Tensor[(42), float32], %var_6376: Tensor[(42, 13), float64]) -> (Tensor[(4, 11, 11), bool], Tensor[(42), float32], Tensor[(42, 13), uint8]) {
  %528 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(4, 11, 11), bool] */;
  %529 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(4, 11, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(4, 11, 11), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %532 = cast(%var_6370, dtype="float32") /* ty=Tensor[(42), float32] */;
  %533 = reshape(%532, newshape=[42, 1]) /* ty=Tensor[(42, 1), float32] */;
  %534 = @func_4490(%533) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(42, 1), float32]) */;
  %535 = %534.2;
  %536 = cast(%535, dtype="float64") /* ty=Tensor[(42, 1), float64] */;
  %537 = exp(%536) /* ty=Tensor[(42, 1), float64] */;
  %538 = cast(%537, dtype="uint8") /* ty=Tensor[(42, 1), uint8] */;
  %539 = cast(%var_6376, dtype="uint8") /* ty=Tensor[(42, 13), uint8] */;
  %540 = logical_or(%530, %531) /* ty=Tensor[(4, 11, 11), bool] */;
  %541 = bitwise_xor(%538, %539) /* ty=Tensor[(42, 13), uint8] */;
  (%540, %var_6370, %541)
}

def @func_7160() -> (Tensor[(15, 7, 3), float32],) {
  %542 = @func_5404() /* ty=Tensor[(15, 7, 3), float32] */;
  (%542,)
}

def @func_8292() -> (Tensor[(315), int16], Tensor[(315), bool], Tensor[(315), float32]) {
  %543 = @func_3401() /* ty=(Tensor[(315), int16],) */;
  %544 = @func_2772() /* ty=Tensor[(315), int16] */;
  %545 = @func_3689() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %546 = %545.0;
  %547 = cast(%546, dtype="bool") /* ty=Tensor[(315), bool] */;
  %548 = shape_of(%544, dtype="int32") /* ty=Tensor[(1), int32] */;
  %549 = cast(%544, dtype="bool") /* ty=Tensor[(315), bool] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?), bool] */;
  %551 = cast(%544, dtype="float32") /* ty=Tensor[(315), float32] */;
  %552 = %543.0;
  %553 = greater_equal(%549, %550) /* ty=Tensor[(315), bool] */;
  %554 = rsqrt(%551) /* ty=Tensor[(315), float32] */;
  (%552, %553, %554)
}

def @func_3485() -> (Tensor[(315), int16],) {
  %555 = @func_3416() /* ty=Tensor[(315), int16] */;
  (%555,)
}

def @func_8437(%var_8431: Tensor[(220), uint16]) -> (Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float64], Tensor[(2, 11, 10), uint16], Tensor[(220), uint16]) {
  %556 = @func_7020() /* ty=Tensor[(15, 7, 3), float32] */;
  %557 = cast(%556, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %558 = log2(%557) /* ty=Tensor[(15, 7, 3), float64] */;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %560 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%556, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %563 = cast(%558, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %564 = cast(%var_8431, dtype="uint16") /* ty=Tensor[(220), uint16] */;
  %565 = cast(%var_8431, dtype="uint16") /* ty=Tensor[(220), uint16] */;
  %566 = reshape(%564, newshape=[2, 11, 10]) /* ty=Tensor[(2, 11, 10), uint16] */;
  %567 = reshape(%565, newshape=[2, 11, 10]) /* ty=Tensor[(2, 11, 10), uint16] */;
  %568 = @func_7798(%566, %567) /* ty=(Tensor[(2, 11, 10), uint16],) */;
  %569 = multiply(%561, %562) /* ty=Tensor[(15, 7, 3), float64] */;
  %570 = tan(%563) /* ty=Tensor[(15, 7, 3), float64] */;
  %571 = %568.0;
  (%569, %570, %571, %var_8431)
}

def @func_2929(%var_2924: Tensor[(10, 2, 11), bool], %var_2925: Tensor[(10, 2, 11), bool]) -> (Tensor[(10, 2, 11), bool],) {
  %572 = cast(%var_2925, dtype="bool") /* ty=Tensor[(10, 2, 11), bool] */;
  %573 = shape_of(%var_2924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_2924, dtype="bool") /* ty=Tensor[(10, 2, 11), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %576 = logical_or(%574, %575) /* ty=Tensor[(10, 2, 11), bool] */;
  (%576,)
}

def @func_8157(%var_8131: Tensor[(15, 7, 3), float32]) -> (Tensor[(15, 7, 3), bool], Tensor[(15, 7, 3), float32]) {
  %577 = @func_7160() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %578 = %577.0;
  %579 = cast(%var_8131, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%578, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %583 = @func_2946() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %584 = logical_or(%581, %582) /* ty=Tensor[(15, 7, 3), bool] */;
  %585 = %583.0;
  (%584, %585)
}

def @func_6160(%var_6068: uint8, %var_6069: Tensor[(1, 8, 16), uint8], %var_6098: Tensor[(13, 8, 16), uint8], %var_6148: Tensor[(308), float64]) -> (Tensor[(13, 3, 11), float64], Tensor[(13, 8, 16), bool], Tensor[(132), float32], Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(14, 8, 16), int16], Tensor[(7, 11, 4), int32], Tensor[(308), float64], Tensor[(315), int16], Tensor[(11, 12, 3), bool]) {
  %586 = @func_5318() /* ty=(Tensor[(13, 3, 11), float64],) */;
  %587 = cast(%var_6068, dtype="uint8") /* ty=uint8 */;
  %588 = cast(%var_6069, dtype="uint8") /* ty=Tensor[(1, 8, 16), uint8] */;
  %589 = maximum(%587, %588) /* ty=Tensor[(1, 8, 16), uint8] */;
  %590 = cast(%589, dtype="bool") /* ty=Tensor[(1, 8, 16), bool] */;
  %591 = cast(%var_6098, dtype="bool") /* ty=Tensor[(13, 8, 16), bool] */;
  %592 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
  %593 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
  %594 = @func_5345() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %595 = cast(%589, dtype="int16") /* ty=Tensor[(1, 8, 16), int16] */;
  %596 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 8, 16), uint8] */, dtype="int16") /* ty=Tensor[(14, 8, 16), int16] */;
  %597 = cast(%var_6148, dtype="float64") /* ty=Tensor[(308), float64] */;
  %598 = reshape(%597, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %599 = @func_2156(%598) /* ty=(Tensor[(7, 11, 4), int32],) */;
  %600 = @func_4294() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %601 = cast(%var_6068, dtype="float32") /* ty=float32 */;
  %602 = cast(meta[relay.Constant][39] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %603 = reshape(%601, newshape=[]) /* ty=float32 */;
  %604 = reshape(%602, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
  %605 = @func_325(%603, %604) /* ty=Tensor[(11, 12, 1), bool] */;
  %606 = cast(%605, dtype="bool") /* ty=Tensor[(11, 12, 1), bool] */;
  %607 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 12, 3), bool] */, dtype="bool") /* ty=Tensor[(11, 12, 3), bool] */;
  %608 = %586.0;
  %609 = greater_equal(%590, %591) /* ty=Tensor[(13, 8, 16), bool] */;
  %610 = %592.1;
  %611 = %593.1;
  %612 = %594.0;
  %613 = @func_2772() /* ty=Tensor[(315), int16] */;
  %614 = maximum(%595, %596) /* ty=Tensor[(14, 8, 16), int16] */;
  %615 = %599.0;
  %616 = %600.1;
  %617 = greater(%606, %607) /* ty=Tensor[(11, 12, 3), bool] */;
  (%608, %609, meta[relay.Constant][39] /* ty=Tensor[(132), float32] */, %610, %611, %612, %613, %614, %615, %var_6148, %616, %617)
}

def @func_2807(%var_2800: Tensor[(104), float64], %var_2803: Tensor[(120, 2), uint64]) -> (Tensor[(15, 7, 3), float64], Tensor[(180), bool], Tensor[(104), float64], Tensor[(416), float64], Tensor[(180), float32], Tensor[(120, 2), uint64]) {
  %618 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %621 = cast(%var_2800, dtype="float64") /* ty=Tensor[(104), float64] */;
  %622 = cast(meta[relay.Constant][42] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %623 = cast(meta[relay.Constant][42] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %624 = cast(meta[relay.Constant][43] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %625 = cast(%var_2803, dtype="uint64") /* ty=Tensor[(120, 2), uint64] */;
  %626 = reshape(%621, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %627 = reshape(%622, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %628 = reshape(%623, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %629 = reshape(%624, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %630 = reshape(%625, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %631 = @func_1900(%626, %627, %628, %629, %630) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
  %632 = atan(%620) /* ty=Tensor[(15, 7, 3), float64] */;
  %633 = %631.4;
  (%632, %633, %var_2800, meta[relay.Constant][42] /* ty=Tensor[(416), float64] */, meta[relay.Constant][43] /* ty=Tensor[(180), float32] */, %var_2803)
}

def @func_2916(%var_2851: Tensor[(42), float32], %var_2856: Tensor[(240), int8], %var_2905: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) {
  %634 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %635 = %634.0;
  %636 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %638 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%635, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = cast(%var_2851, dtype="float32") /* ty=Tensor[(42), float32] */;
  %642 = reshape(%641, newshape=[2, 3, 7]) /* ty=Tensor[(2, 3, 7), float32] */;
  %643 = @func_134(%642) /* ty=(Tensor[(2, 3, 7), float64],) */;
  %644 = cast(%var_2856, dtype="int8") /* ty=Tensor[(240), int8] */;
  %645 = cast(%var_2856, dtype="int8") /* ty=Tensor[(240), int8] */;
  %646 = reshape(%644, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), int8] */;
  %647 = reshape(%645, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), int8] */;
  %648 = cast(%636, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
  %649 = acosh(%648) /* ty=Tensor[(15, 7, 3), float32] */;
  %650 = cast(%649, dtype="uint32") /* ty=Tensor[(15, 7, 3), uint32] */;
  %651 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%636, dtype="uint32") /* ty=Tensor[(15, 7, 3), uint32] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %654 = add(%652, %653) /* ty=Tensor[(15, 7, 3), uint32] */;
  %655 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 7, 3), uint32] */, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %659 = mod(%657, %658) /* ty=Tensor[(15, 7, 3), float64] */;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %661 = acos(%660) /* ty=Tensor[(15, 7, 3), float64] */;
  %662 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%661, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %666 = cast(%var_2905, dtype="float64") /* ty=Tensor[(104), float64] */;
  %667 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 416), float64] */, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
  %668 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 416), float64] */, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
  %669 = cast(meta[relay.Constant][47] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %670 = @func_2606(%646, %647) /* ty=Tensor[(2, 12, 10), int8] */;
  %671 = cast(%670, dtype="uint64") /* ty=Tensor[(2, 12, 10), uint64] */;
  %672 = reshape(%666, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %673 = reshape(%667, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %674 = reshape(%668, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %675 = reshape(%669, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %676 = reshape(%671, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %677 = @func_1900(%672, %673, %674, %675, %676) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
  %678 = equal(%639, %640) /* ty=Tensor[(15, 7, 3), bool] */;
  %679 = %643.0;
  %680 = subtract(%664, %665) /* ty=Tensor[(15, 7, 3), float64] */;
  %681 = %677.1;
  (%678, %679, %var_2851, %670, %var_2856, %680, %681, %var_2905, meta[relay.Constant][46] /* ty=Tensor[(1, 416), float64] */, meta[relay.Constant][47] /* ty=Tensor[(180), float32] */)
}

def @func_8358() -> Tensor[(315), int16] {
  %682 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %682.0
}

def @func_7967() -> (Tensor[(315), int16], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) {
  %683 = @func_7929() /* ty=(Tensor[(315), int16],) */;
  %684 = cast(meta[relay.Constant][48] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %685 = reshape(%684, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), float32] */;
  %686 = @func_218(%685) /* ty=(Tensor[(15, 6, 2), float32],) */;
  %687 = %683.0;
  %688 = %686.0;
  (%687, %688, meta[relay.Constant][48] /* ty=Tensor[(180), float32] */)
}

def @func_7688() -> Tensor[(315), int16] {
  @func_4540() /* ty=Tensor[(315), int16] */
}

def @func_1900(%var_1808: Tensor[(13, 8, 1), float64], %var_1809: Tensor[(13, 8, 4), float64], %var_1837: Tensor[(13, 8, 4), float64], %var_1878: Tensor[(180), float32], %var_1894: Tensor[(240), uint64]) -> (Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) {
  %689 = cast(%var_1809, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %690 = shape_of(%var_1837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%var_1837, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %693 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %694 = cast(%var_1837, dtype="bool") /* ty=Tensor[(13, 8, 4), bool] */;
  %695 = shape_of(%var_1809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%var_1809, dtype="bool") /* ty=Tensor[(13, 8, 4), bool] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %698 = greater(%696, %697) /* ty=Tensor[(13, 8, 4), bool] */;
  %699 = cast(%698, dtype="float32") /* ty=Tensor[(13, 8, 4), float32] */;
  %700 = cast(%var_1808, dtype="float32") /* ty=Tensor[(13, 8, 1), float32] */;
  %701 = cast(meta[relay.Constant][49] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %702 = reshape(%701, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), float32] */;
  %703 = @func_218(%702) /* ty=(Tensor[(15, 6, 2), float32],) */;
  %704 = cast(%var_1878, dtype="bool") /* ty=Tensor[(180), bool] */;
  %705 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(180), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %706 = cast(meta[relay.Constant][49] /* ty=Tensor[(180), float32] */, dtype="bool") /* ty=Tensor[(180), bool] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?), bool] */;
  %708 = cast(%var_1808, dtype="float64") /* ty=Tensor[(13, 8, 1), float64] */;
  %709 = cast(%var_1809, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %710 = floor_mod(%708, %709) /* ty=Tensor[(13, 8, 4), float64] */;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %712 = log(%711) /* ty=Tensor[(13, 8, 4), float64] */;
  %713 = cast(%712, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %714 = cast(%var_1894, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %715 = cast(%var_1894, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %716 = reshape(%714, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %717 = reshape(%715, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %718 = @func_1368(%716, %717) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */;
  %719 = floor_divide(%691, %692) /* ty=Tensor[(13, 8, 4), float64] */;
  %720 = %693.2;
  %721 = mod(%699, %700) /* ty=Tensor[(13, 8, 4), float32] */;
  %722 = %703.0;
  %723 = greater_equal(%706, %707) /* ty=Tensor[(180), bool] */;
  %724 = exp(%713) /* ty=Tensor[(13, 8, 4), float64] */;
  %725 = %718.0;
  (%719, %720, %721, %722, %723, %724, %725, %var_1894)
}

def @func_4335() -> (Tensor[(15, 7, 3), float32],) {
  %726 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
  (%726,)
}

def @func_3731(%var_3712: Tensor[(240), int8], %var_3713: Tensor[(104), float64], %var_3717: Tensor[(2), uint64], %var_3718: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(1, 416), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(104), float64], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64]) {
  %727 = @func_3401() /* ty=(Tensor[(315), int16],) */;
  %728 = cast(meta[relay.Constant][50] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %729 = cast(%var_3712, dtype="int8") /* ty=Tensor[(240), int8] */;
  %730 = cast(%var_3713, dtype="float64") /* ty=Tensor[(104), float64] */;
  %731 = reshape(%728, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %732 = reshape(%729, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %733 = reshape(%730, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %734 = @func_2916(%731, %732, %733) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
  %735 = cast(%var_3717, dtype="uint64") /* ty=Tensor[(2), uint64] */;
  %736 = cast(%var_3718, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %737 = reshape(%735, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), uint64] */;
  %738 = reshape(%736, newshape=[2, 5, 14]) /* ty=Tensor[(2, 5, 14), uint64] */;
  %739 = @func_3460(%737, %738) /* ty=(Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) */;
  %740 = %727.0;
  %741 = %734.8;
  %742 = %739.2;
  (%740, %741, meta[relay.Constant][50] /* ty=Tensor[(42), float32] */, %var_3712, %var_3713, %742, %var_3717, %var_3718)
}

def @func_2229() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %743 = @func_2162() /* ty=Tensor[(315), int16] */;
  %744 = @func_2162() /* ty=Tensor[(315), int16] */;
  (%743, %744)
}

def @func_5896(%var_5871: Tensor[(13, 13, 4), uint64]) -> (Tensor[(13, 13, 4), bool], Tensor[(13, 13, 4), float32]) {
  %745 = cast(meta[relay.Constant][51] /* ty=Tensor[(13, 13, 4), uint64] */, dtype="bool") /* ty=Tensor[(13, 13, 4), bool] */;
  %746 = shape_of(%var_5871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%var_5871, dtype="bool") /* ty=Tensor[(13, 13, 4), bool] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %749 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 13, 4), uint64] */, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
  %750 = shape_of(%var_5871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%var_5871, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %753 = less(%747, %748) /* ty=Tensor[(13, 13, 4), bool] */;
  %754 = multiply(%751, %752) /* ty=Tensor[(13, 13, 4), float32] */;
  (%753, %754)
}

def @func_6233() -> (Tensor[(13, 3, 11), float64],) {
  %755 = @func_5318() /* ty=(Tensor[(13, 3, 11), float64],) */;
  %756 = %755.0;
  (%756,)
}

def @func_1605(%var_1589: Tensor[(10, 10, 10), float32], %var_1590: Tensor[(10, 10, 10), float32]) -> (Tensor[(10, 10, 10), float32], Tensor[(10, 10, 10), bool]) {
  %757 = cast(%var_1590, dtype="float32") /* ty=Tensor[(10, 10, 10), float32] */;
  %758 = shape_of(%var_1589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%var_1589, dtype="float32") /* ty=Tensor[(10, 10, 10), float32] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %761 = cast(%var_1589, dtype="bool") /* ty=Tensor[(10, 10, 10), bool] */;
  %762 = shape_of(%var_1590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%var_1590, dtype="bool") /* ty=Tensor[(10, 10, 10), bool] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %765 = floor_divide(%759, %760) /* ty=Tensor[(10, 10, 10), float32] */;
  %766 = greater_equal(%763, %764) /* ty=Tensor[(10, 10, 10), bool] */;
  (%765, %766)
}

def @func_3416() -> Tensor[(315), int16] {
  %767 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %767.0
}

def @func_2976(%var_2965: Tensor[(7, 13, 13), float32]) -> Tensor[(7, 13, 13), float32] {
  %768 = cast(%var_2965, dtype="float32") /* ty=Tensor[(7, 13, 13), float32] */;
  sin(%768) /* ty=Tensor[(7, 13, 13), float32] */
}

def @func_5227() -> Tensor[(315), int16] {
  %769 = @func_3155() /* ty=(Tensor[(315), int16],) */;
  %769.0
}

def @func_677(%var_639: Tensor[(2, 11, 2), float64], %var_645: int64) -> (Tensor[(15, 6, 2), float32], int64, Tensor[(1620), int64], Tensor[(2, 11, 2), float32], Tensor[(11, 12, 1), bool], Tensor[(132), float32], Tensor[(11, 12, 1), bool]) {
  %770 = cast(%var_645, dtype="int64") /* ty=int64 */;
  %771 = cast(meta[relay.Constant][53] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %772 = reshape(%770, newshape=[]) /* ty=int64 */;
  %773 = reshape(%771, newshape=[9, 12, 15]) /* ty=Tensor[(9, 12, 15), int64] */;
  %774 = @func_347(%772, %773) /* ty=(Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) */;
  %775 = cast(%var_639, dtype="float64") /* ty=Tensor[(2, 11, 2), float64] */;
  %776 = log2(%775) /* ty=Tensor[(2, 11, 2), float64] */;
  %777 = cast(%var_639, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%776, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %781 = cast(%var_645, dtype="float32") /* ty=float32 */;
  %782 = cast(meta[relay.Constant][54] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %783 = reshape(%781, newshape=[]) /* ty=float32 */;
  %784 = reshape(%782, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
  %785 = cast(%var_645, dtype="float32") /* ty=float32 */;
  %786 = @func_325(%783, %784) /* ty=Tensor[(11, 12, 1), bool] */;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(11, 12, 1), float32] */;
  %788 = reshape(%785, newshape=[]) /* ty=float32 */;
  %789 = reshape(%787, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
  %790 = %774.3;
  %791 = floor_mod(%779, %780) /* ty=Tensor[(2, 11, 2), float32] */;
  %792 = @func_325(%788, %789) /* ty=Tensor[(11, 12, 1), bool] */;
  (%790, %var_645, meta[relay.Constant][53] /* ty=Tensor[(1620), int64] */, %791, %786, meta[relay.Constant][54] /* ty=Tensor[(132), float32] */, %792)
}

def @func_4109(%var_4052: Tensor[(15, 7, 3), float32], %var_4074: Tensor[(1, 132), float32], %var_4085: Tensor[(70, 2), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(11, 12, 1), bool], float32, Tensor[(1, 132), float32], Tensor[(7, 6), float32], Tensor[(195, 3), float64], Tensor[(70, 2), uint64], Tensor[(42), float32]) {
  %793 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %794 = %793.0;
  %795 = cast(%var_4052, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%794, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %799 = bitwise_and(%797, %798) /* ty=Tensor[(15, 7, 3), int16] */;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
  %801 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%794, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %804 = cast(0.178919f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %805 = cast(%var_4074, dtype="float32") /* ty=Tensor[(1, 132), float32] */;
  %806 = reshape(%804, newshape=[]) /* ty=float32 */;
  %807 = reshape(%805, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
  %808 = cast(meta[relay.Constant][55] /* ty=Tensor[(195, 3), float64] */, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
  %809 = cast(meta[relay.Constant][55] /* ty=Tensor[(195, 3), float64] */, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
  %810 = cast(%var_4085, dtype="uint64") /* ty=Tensor[(70, 2), uint64] */;
  %811 = cast(meta[relay.Constant][56] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %812 = reshape(%808, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %813 = reshape(%809, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %814 = reshape(%810, newshape=[140]) /* ty=Tensor[(140), uint64] */;
  %815 = reshape(%811, newshape=[7, 6]) /* ty=Tensor[(7, 6), float32] */;
  %816 = @func_3968(%812, %813, %814, %815) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %817 = floor_divide(%802, %803) /* ty=Tensor[(15, 7, 3), float32] */;
  %818 = @func_325(%806, %807) /* ty=Tensor[(11, 12, 1), bool] */;
  %819 = %816.7;
  (%817, %818, 0.178919f /* ty=float32 */, %var_4074, %819, meta[relay.Constant][55] /* ty=Tensor[(195, 3), float64] */, %var_4085, meta[relay.Constant][56] /* ty=Tensor[(42), float32] */)
}

def @func_4294() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %820 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %821 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %822 = %820.0;
  %823 = %821.0;
  (%822, %823)
}

def @func_5345() -> (Tensor[(15, 7, 3), float32],) {
  %824 = @func_2946() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %825 = %824.0;
  (%825,)
}

def @func_218(%var_215: Tensor[(15, 6, 2), float32]) -> (Tensor[(15, 6, 2), float32],) {
  %826 = cast(%var_215, dtype="float32") /* ty=Tensor[(15, 6, 2), float32] */;
  %827 = sin(%826) /* ty=Tensor[(15, 6, 2), float32] */;
  (%827,)
}

def @func_6481(%var_6468: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(104), bool], Tensor[(42), float32]) {
  %828 = cast(meta[relay.Constant][57] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %829 = cast(meta[relay.Constant][58] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %830 = cast(meta[relay.Constant][59] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %831 = reshape(%828, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %832 = reshape(%829, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %833 = reshape(%830, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %834 = @func_2916(%831, %832, %833) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
  %835 = cast(%var_6468, dtype="bool") /* ty=Tensor[(104), bool] */;
  %836 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(104), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %837 = cast(meta[relay.Constant][59] /* ty=Tensor[(104), float64] */, dtype="bool") /* ty=Tensor[(104), bool] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?), bool] */;
  %839 = cast(meta[relay.Constant][57] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %840 = @func_5040() /* ty=Tensor[(15, 7, 3), float32] */;
  %841 = %834.3;
  %842 = less(%837, %838) /* ty=Tensor[(104), bool] */;
  %843 = sinh(%839) /* ty=Tensor[(42), float32] */;
  (%840, %841, meta[relay.Constant][58] /* ty=Tensor[(240), int8] */, %842, %843)
}

def @func_6609() -> Tensor[(315), int16] {
  %844 = @func_3155() /* ty=(Tensor[(315), int16],) */;
  %844.0
}

def @func_6647() -> (Tensor[(15, 7, 3), float32], Tensor[(315), int16]) {
  %845 = @func_5040() /* ty=Tensor[(15, 7, 3), float32] */;
  %846 = @func_2162() /* ty=Tensor[(315), int16] */;
  (%845, %846)
}

def @func_6998() -> (Tensor[(13, 3, 11), float64],) {
  %847 = @func_5318() /* ty=(Tensor[(13, 3, 11), float64],) */;
  %848 = %847.0;
  (%848,)
}

def @func_7440(%var_7363: Tensor[(315), float32]) -> (Tensor[(16, 14), float64], Tensor[(315), float32], Tensor[(2, 12, 10), int8], Tensor[(104), float64], Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float64]) {
  %849 = @func_6523() /* ty=(Tensor[(16, 14), float64],) */;
  %850 = cast(meta[relay.Constant][60] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %851 = reshape(%850, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %852 = @func_6481(%851) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(104), bool], Tensor[(42), float32]) */;
  %853 = @func_4914() /* ty=(Tensor[(315), int16],) */;
  %854 = cast(%var_7363, dtype="float32") /* ty=Tensor[(315), float32] */;
  %855 = reshape(%854, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float32] */;
  %856 = @func_5148(%855) /* ty=Tensor[(15, 7, 3), bool] */;
  %857 = cast(%856, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %858 = %849.0;
  %859 = %852.1;
  %860 = %853.0;
  %861 = @func_2162() /* ty=Tensor[(315), int16] */;
  %862 = log(%857) /* ty=Tensor[(15, 7, 3), float64] */;
  (%858, %var_7363, %859, meta[relay.Constant][60] /* ty=Tensor[(104), float64] */, %860, %861, %862)
}

def @func_7618() -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(315), int16], Tensor[(315), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(104), float64]) {
  %863 = @func_4679() /* ty=(Tensor[(315), int16],) */;
  %864 = @func_4633() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %865 = %864.1;
  %866 = cast(%865, dtype="float32") /* ty=Tensor[(315), float32] */;
  %867 = reshape(%866, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %868 = @func_7440(%867) /* ty=(Tensor[(16, 14), float64], Tensor[(315), float32], Tensor[(2, 12, 10), int8], Tensor[(104), float64], Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float64]) */;
  %869 = @func_4335() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %870 = cast(meta[relay.Constant][61] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %871 = reshape(%870, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %872 = @func_5711(%871) /* ty=(Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(140), uint64], Tensor[(104), float64], Tensor[(150), float64], Tensor[(2, 120), float64], Tensor[(42), float32]) */;
  %873 = @func_3416() /* ty=Tensor[(315), int16] */;
  %874 = %863.0;
  %875 = %868.1;
  %876 = %869.0;
  %877 = %872.0;
  (%873, %874, %865, %875, %876, %877, meta[relay.Constant][61] /* ty=Tensor[(104), float64] */)
}

def @func_3401() -> (Tensor[(315), int16],) {
  %878 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %879 = %878.2;
  (%879,)
}

def @func_5491(%var_5480: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(104), float64], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(7, 6), float32]) {
  %880 = @func_3689() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %881 = cast(meta[relay.Constant][62] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %882 = cast(meta[relay.Constant][62] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %883 = cast(%var_5480, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %884 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
  %885 = reshape(%881, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %886 = reshape(%882, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %887 = reshape(%883, newshape=[140]) /* ty=Tensor[(140), uint64] */;
  %888 = reshape(%884, newshape=[7, 6]) /* ty=Tensor[(7, 6), float32] */;
  %889 = @func_3968(%885, %886, %887, %888) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %890 = %880.1;
  %891 = %889.8;
  (%890, %891, meta[relay.Constant][62] /* ty=Tensor[(585), float64] */, %var_5480, meta[relay.Constant][63] /* ty=Tensor[(7, 6), float32] */)
}

def @func_5310() -> (Tensor[(315), int16], Tensor[(15, 6, 2), float32], Tensor[(1, 180), float32]) {
  %892 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %893 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 180), float32] */, dtype="float32") /* ty=Tensor[(1, 180), float32] */;
  %894 = reshape(%893, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), float32] */;
  %895 = @func_218(%894) /* ty=(Tensor[(15, 6, 2), float32],) */;
  %896 = %892.0;
  %897 = %895.0;
  (%896, %897, meta[relay.Constant][64] /* ty=Tensor[(1, 180), float32] */)
}

def @func_134(%var_119: Tensor[(2, 3, 7), float32]) -> (Tensor[(2, 3, 7), float64],) {
  %898 = cast(meta[relay.Constant][65] /* ty=Tensor[(2, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 7), float32] */;
  %899 = cos(%898) /* ty=Tensor[(2, 3, 7), float32] */;
  %900 = cast(%var_119, dtype="float64") /* ty=Tensor[(2, 3, 7), float64] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%899, dtype="float64") /* ty=Tensor[(2, 3, 7), float64] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %904 = mod(%902, %903) /* ty=Tensor[(2, 3, 7), float64] */;
  (%904,)
}

def @func_6327(%var_6316: Tensor[(315), int16], %var_6319: Tensor[(448), float32], %var_6322: Tensor[(4, 104), float64]) -> (Tensor[(2, 7, 11), float64], Tensor[(42), float32], Tensor[(104), float64], Tensor[(104), float64], Tensor[(42), int16], Tensor[(315), bool], Tensor[(315), int16], Tensor[(30, 6), float32], Tensor[(448), float32], Tensor[(180), float32], Tensor[(2, 120), uint64], Tensor[(4, 104), float64]) {
  %905 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %906 = cast(3.68076f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %907 = cast(meta[relay.Constant][66] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %908 = cast(meta[relay.Constant][67] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %909 = reshape(%906, newshape=[]) /* ty=float32 */;
  %910 = reshape(%907, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %911 = reshape(%908, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %912 = @func_4146(%909, %910, %911) /* ty=(Tensor[(315), int16], Tensor[(11, 12, 1), bool], float32, Tensor[(33, 4), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(42), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %913 = cast(3.68076f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %914 = cast(meta[relay.Constant][66] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %915 = cast(meta[relay.Constant][67] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %916 = reshape(%913, newshape=[]) /* ty=float32 */;
  %917 = reshape(%914, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %918 = reshape(%915, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %919 = @func_4146(%916, %917, %918) /* ty=(Tensor[(315), int16], Tensor[(11, 12, 1), bool], float32, Tensor[(33, 4), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(42), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %920 = cast(meta[relay.Constant][66] /* ty=Tensor[(42), float32] */, dtype="int16") /* ty=Tensor[(42), int16] */;
  %921 = cast(3.68076f /* ty=float32 */, dtype="int16") /* ty=int16 */;
  %922 = cast(%var_6316, dtype="int16") /* ty=Tensor[(315), int16] */;
  %923 = reshape(%922, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %924 = @func_4595(%923) /* ty=(Tensor[(315), bool],) */;
  %925 = cast(%var_6319, dtype="float32") /* ty=Tensor[(448), float32] */;
  %926 = %919.7;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(104), float64] */;
  %928 = cast(meta[relay.Constant][68] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %929 = cast(meta[relay.Constant][69] /* ty=Tensor[(2, 120), uint64] */, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %930 = cast(%var_6322, dtype="float64") /* ty=Tensor[(4, 104), float64] */;
  %931 = reshape(%925, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %932 = reshape(%927, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %933 = reshape(%928, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %934 = reshape(%929, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %935 = reshape(%930, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %936 = @func_2715(%931, %932, %933, %934, %935) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(315), int16], Tensor[(104), float64], Tensor[(30, 6), float32], Tensor[(240), uint64], Tensor[(315), int16], Tensor[(416), uint64], Tensor[(448), int16]) */;
  %937 = %905.0;
  %938 = %912.6;
  %939 = bitwise_xor(%920, %921) /* ty=Tensor[(42), int16] */;
  %940 = %924.0;
  %941 = %936.4;
  (%937, %938, meta[relay.Constant][67] /* ty=Tensor[(104), float64] */, %926, %939, %940, %var_6316, %941, %var_6319, meta[relay.Constant][68] /* ty=Tensor[(180), float32] */, meta[relay.Constant][69] /* ty=Tensor[(2, 120), uint64] */, %var_6322)
}

def @func_4459(%var_4415: Tensor[(15, 7, 3), float32], %var_4434: Tensor[(42), float32]) -> (Tensor[(15, 7, 3), uint8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(315), int16]) {
  %942 = @func_3667() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %943 = %942.1;
  %944 = cast(%var_4415, dtype="uint8") /* ty=Tensor[(15, 7, 3), uint8] */;
  %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %946 = cast(%943, dtype="uint8") /* ty=Tensor[(15, 7, 3), uint8] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %948 = cast(%943, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %949 = @func_3993() /* ty=(Tensor[(315), int16],) */;
  %950 = cast(meta[relay.Constant][70] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %951 = cast(meta[relay.Constant][70] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %952 = cast(meta[relay.Constant][71] /* ty=Tensor[(140), uint64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %953 = cast(%var_4434, dtype="float32") /* ty=Tensor[(42), float32] */;
  %954 = reshape(%950, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %955 = reshape(%951, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %956 = reshape(%952, newshape=[140]) /* ty=Tensor[(140), uint64] */;
  %957 = reshape(%953, newshape=[7, 6]) /* ty=Tensor[(7, 6), float32] */;
  %958 = @func_3968(%954, %955, %956, %957) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %959 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %960 = maximum(%946, %947) /* ty=Tensor[(15, 7, 3), uint8] */;
  %961 = cos(%948) /* ty=Tensor[(15, 7, 3), float64] */;
  %962 = %949.0;
  %963 = %958.1;
  %964 = %959.2;
  (%960, %961, %962, %963, meta[relay.Constant][70] /* ty=Tensor[(585), float64] */, meta[relay.Constant][71] /* ty=Tensor[(140), uint64] */, %var_4434, %964)
}

def @func_6776() -> (Tensor[(15, 7, 3), float32],) {
  %965 = @func_6647() /* ty=(Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %966 = %965.0;
  (%966,)
}

def @func_8041(%var_8022: int64, %var_8034: Tensor[(240, 1), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64], Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(1620), int64], Tensor[(240, 1), uint64]) {
  %967 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %968 = cast(%var_8022, dtype="int64") /* ty=int64 */;
  %969 = cast(meta[relay.Constant][72] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %970 = reshape(%968, newshape=[]) /* ty=int64 */;
  %971 = reshape(%969, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %972 = @func_2429(%970, %971) /* ty=(Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %973 = cast(meta[relay.Constant][73] /* ty=Tensor[(2), uint64] */, dtype="uint64") /* ty=Tensor[(2), uint64] */;
  %974 = cast(meta[relay.Constant][74] /* ty=Tensor[(140), uint64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %975 = reshape(%973, newshape=[2]) /* ty=Tensor[(2), uint64] */;
  %976 = reshape(%974, newshape=[140]) /* ty=Tensor[(140), uint64] */;
  %977 = @func_7120(%975, %976) /* ty=(Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(7, 16, 4), float32]) */;
  %978 = %967.1;
  %979 = cast(%978, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
  %980 = cast(%var_8034, dtype="uint64") /* ty=Tensor[(240, 1), uint64] */;
  %981 = cast(meta[relay.Constant][72] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %982 = reshape(%979, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %983 = reshape(%980, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %984 = reshape(%981, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %985 = @func_3248(%982, %983, %984) /* ty=(Tensor[(315), bool], Tensor[(13, 8, 4), float64], Tensor[(104), float64], Tensor[(208, 2), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %986 = %972.1;
  %987 = %977.0;
  %988 = %985.8;
  (%978, %986, %var_8022, meta[relay.Constant][72] /* ty=Tensor[(1620), int64] */, %987, meta[relay.Constant][73] /* ty=Tensor[(2), uint64] */, meta[relay.Constant][74] /* ty=Tensor[(140), uint64] */, %988, %var_8034)
}

def @func_325(%var_320: float32, %var_321: Tensor[(11, 12, 1), float32]) -> Tensor[(11, 12, 1), bool] {
  %989 = cast(%var_320, dtype="bool") /* ty=bool */;
  %990 = cast(%var_321, dtype="bool") /* ty=Tensor[(11, 12, 1), bool] */;
  not_equal(%989, %990) /* ty=Tensor[(11, 12, 1), bool] */
}

def @func_347(%var_333: int64, %var_334: Tensor[(9, 12, 15), int64]) -> (Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) {
  %991 = cast(%var_333, dtype="int64") /* ty=int64 */;
  %992 = cast(%var_334, dtype="int64") /* ty=Tensor[(9, 12, 15), int64] */;
  %993 = cast(meta[relay.Constant][75] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %994 = reshape(%993, newshape=[2, 3, 7]) /* ty=Tensor[(2, 3, 7), float32] */;
  %995 = @func_134(%994) /* ty=(Tensor[(2, 3, 7), float64],) */;
  %996 = cast(meta[relay.Constant][76] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %997 = reshape(%996, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), float32] */;
  %998 = @func_218(%997) /* ty=(Tensor[(15, 6, 2), float32],) */;
  %999 = logical_xor(%991, %992) /* ty=Tensor[(9, 12, 15), int64] */;
  %1000 = %995.0;
  %1001 = %998.0;
  (%999, %1000, meta[relay.Constant][75] /* ty=Tensor[(42), float32] */, %1001, meta[relay.Constant][76] /* ty=Tensor[(180), float32] */)
}

def @func_3297(%var_3264: Tensor[(315), int16], %var_3285: Tensor[(315), int16]) -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32], Tensor[(315), uint16]) {
  %1002 = @func_2200() /* ty=Tensor[(315), int16] */;
  %1003 = cast(%var_3264, dtype="int16") /* ty=Tensor[(315), int16] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1005 = cast(%1002, dtype="int16") /* ty=Tensor[(315), int16] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1007 = cast(%var_3285, dtype="uint16") /* ty=Tensor[(315), uint16] */;
  %1008 = shape_of(%1002, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1009 = cast(%1002, dtype="uint16") /* ty=Tensor[(315), uint16] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1011 = bitwise_xor(%1005, %1006) /* ty=Tensor[(315), int16] */;
  %1012 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
  %1013 = right_shift(%1009, %1010) /* ty=Tensor[(315), uint16] */;
  (%1011, %1012, %1013)
}

def @func_4914() -> (Tensor[(315), int16],) {
  %1014 = @func_2772() /* ty=Tensor[(315), int16] */;
  (%1014,)
}

def @func_2241(%var_2234: Tensor[(3, 10, 4), bool]) -> Tensor[(3, 10, 4), bool] {
  %1015 = cast(meta[relay.Constant][77] /* ty=Tensor[(3, 10, 4), bool] */, dtype="bool") /* ty=Tensor[(3, 10, 4), bool] */;
  %1016 = shape_of(%var_2234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%var_2234, dtype="bool") /* ty=Tensor[(3, 10, 4), bool] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1017, %1018) /* ty=Tensor[(3, 10, 4), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_134(%var_119: Tensor[(2, 3, 7), float32]) -> (Tensor[(2, 3, 7), float64],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 7), float32] */;
  %1 = cos(%0) /* ty=Tensor[(2, 3, 7), float32] */;
  %2 = cast(%var_119, dtype="float64") /* ty=Tensor[(2, 3, 7), float64] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="float64") /* ty=Tensor[(2, 3, 7), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %6 = mod(%4, %5) /* ty=Tensor[(2, 3, 7), float64] */;
  (%6,)
}

def @func_4390(%var_4389: int64) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
  %14 = fn (%var_4367: int64) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
    %7 = cast(%var_4367, dtype="int64") /* ty=int64 */;
    %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
    %9 = reshape(%7, newshape=[]) /* ty=int64 */;
    %10 = reshape(%8, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
    %11 = @func_2429(%9, %10) /* ty=(Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
    %12 = @func_3137() /* ty=Tensor[(15, 7, 3), float32] */;
    %13 = %11.1;
    (%12, %13, %var_4367, meta[relay.Constant][1] /* ty=Tensor[(1620), int64] */)
  };
  %14(%var_4389) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */
}

def @func_5405() -> Tensor[(15, 7, 3), float32] {
  %16 = fn () -> Tensor[(15, 7, 3), float32] {
    %15 = @func_4335() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %15.0
  };
  %16() /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_2163() -> Tensor[(315), int16] {
  %18 = fn () -> Tensor[(315), int16] {
    %17 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
    %17.2
  };
  %18() /* ty=Tensor[(315), int16] */
}

def @func_2946() -> (Tensor[(15, 7, 3), float32],) {
  %19 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
  (%19,)
}

def @func_2562() -> (Tensor[(315), int8], Tensor[(15, 7, 3), float64]) {
  @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */
}

def @func_3137() -> Tensor[(15, 7, 3), float32] {
  %20 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %20.0
}

def @func_7321() -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float32], Tensor[(676), uint64]) {
  %21 = @func_4633() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(676), uint64] */, dtype="uint64") /* ty=Tensor[(676), uint64] */;
  %23 = reshape(%22, newshape=[338, 2]) /* ty=Tensor[(338, 2), uint64] */;
  %24 = @func_5956(%23) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(13, 13, 4), float32], Tensor[(338, 2), bool], Tensor[(338, 2), bool]) */;
  %25 = %21.0;
  %26 = @func_5227() /* ty=Tensor[(315), int16] */;
  %27 = %24.0;
  (%25, %26, %27, meta[relay.Constant][2] /* ty=Tensor[(676), uint64] */)
}

def @func_4296() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  @func_4294() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */
}

def @func_6998() -> (Tensor[(13, 3, 11), float64],) {
  %28 = @func_5318() /* ty=(Tensor[(13, 3, 11), float64],) */;
  %29 = %28.0;
  (%29,)
}

def @func_7120(%var_7102: Tensor[(2), uint64], %var_7103: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(7, 16, 4), float32]) {
  %30 = cast(%var_7102, dtype="uint64") /* ty=Tensor[(2), uint64] */;
  %31 = cast(%var_7103, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %32 = reshape(%30, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), uint64] */;
  %33 = reshape(%31, newshape=[2, 5, 14]) /* ty=Tensor[(2, 5, 14), uint64] */;
  %34 = @func_3460(%32, %33) /* ty=(Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) */;
  %35 = %34.1;
  %36 = cast(%35, dtype="float32") /* ty=Tensor[(7, 16, 4), float32] */;
  %37 = @func_5227() /* ty=Tensor[(315), int16] */;
  %38 = asin(%36) /* ty=Tensor[(7, 16, 4), float32] */;
  (%37, %var_7102, %var_7103, %38)
}

def @func_3048(%var_3034: Tensor[(42), float32], %var_3036: Tensor[(1, 104), float64], %var_3040: Tensor[(150), float64]) -> (Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) {
  %39 = cast(%var_3034, dtype="float32") /* ty=Tensor[(42), float32] */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %41 = cast(%var_3036, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %42 = reshape(%39, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %43 = reshape(%40, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %44 = reshape(%41, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %45 = @func_2916(%42, %43, %44) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
  %46 = cast(%var_3040, dtype="float64") /* ty=Tensor[(150), float64] */;
  %47 = cast(%var_3040, dtype="float64") /* ty=Tensor[(150), float64] */;
  %48 = reshape(%46, newshape=[10, 5, 3]) /* ty=Tensor[(10, 5, 3), float64] */;
  %49 = reshape(%47, newshape=[10, 5, 3]) /* ty=Tensor[(10, 5, 3), float64] */;
  %50 = @func_3006(%48, %49) /* ty=(Tensor[(10, 5, 3), float64], Tensor[(15, 7, 3), float64]) */;
  %51 = @func_2200() /* ty=Tensor[(315), int16] */;
  %52 = %45.1;
  %53 = %50.1;
  (%51, %52, %var_3034, meta[relay.Constant][3] /* ty=Tensor[(240), int8] */, %var_3036, %53, %var_3040)
}

def @func_3297(%var_3264: Tensor[(315), int16], %var_3285: Tensor[(315), int16]) -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32], Tensor[(315), uint16]) {
  %54 = @func_2200() /* ty=Tensor[(315), int16] */;
  %55 = cast(%var_3264, dtype="int16") /* ty=Tensor[(315), int16] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(1), int32] */;
  %57 = cast(%54, dtype="int16") /* ty=Tensor[(315), int16] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?), int16] */;
  %59 = cast(%var_3285, dtype="uint16") /* ty=Tensor[(315), uint16] */;
  %60 = shape_of(%54, dtype="int32") /* ty=Tensor[(1), int32] */;
  %61 = cast(%54, dtype="uint16") /* ty=Tensor[(315), uint16] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %63 = bitwise_xor(%57, %58) /* ty=Tensor[(315), int16] */;
  %64 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
  %65 = right_shift(%61, %62) /* ty=Tensor[(315), uint16] */;
  (%63, %64, %65)
}

def @func_2499() -> Tensor[(15, 7, 3), float32] {
  %67 = fn () -> Tensor[(15, 7, 3), float32] {
    %66 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %66.0
  };
  %67() /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_1700() -> (Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) {
  %68 = cast(3.4729f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 7, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 11), float64] */;
  %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %71 = reshape(%70, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), int16] */;
  %72 = floor_mod(%68, %69) /* ty=Tensor[(2, 7, 11), float64] */;
  %73 = @func_1143(%71) /* ty=Tensor[(15, 7, 3), float32] */;
  (%72, %73, meta[relay.Constant][5] /* ty=Tensor[(315), int16] */)
}

def @func_4259() -> Tensor[(315), int16] {
  @func_4257() /* ty=Tensor[(315), int16] */
}

def @func_8440(%var_8438: Tensor[(220), uint16]) -> (Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float64], Tensor[(2, 11, 10), uint16], Tensor[(220), uint16]) {
  @func_8437(%var_8438) /* ty=(Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float64], Tensor[(2, 11, 10), uint16], Tensor[(220), uint16]) */
}

def @func_6742(%var_6741: Tensor[(5, 9, 12), float32]) -> Tensor[(5, 9, 12), bool] {
  %80 = fn (%var_6734: Tensor[(5, 9, 12), float32]) -> Tensor[(5, 9, 12), bool] {
    %74 = cast(%var_6734, dtype="float32") /* ty=Tensor[(5, 9, 12), float32] */;
    %75 = atan(%74) /* ty=Tensor[(5, 9, 12), float32] */;
    %76 = cast(%var_6734, dtype="bool") /* ty=Tensor[(5, 9, 12), bool] */;
    %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
    %78 = cast(%75, dtype="bool") /* ty=Tensor[(5, 9, 12), bool] */;
    %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%78, %79) /* ty=Tensor[(5, 9, 12), bool] */
  };
  %80(%var_6741) /* ty=Tensor[(5, 9, 12), bool] */
}

def @func_8157(%var_8131: Tensor[(15, 7, 3), float32]) -> (Tensor[(15, 7, 3), bool], Tensor[(15, 7, 3), float32]) {
  %81 = @func_7160() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %82 = %81.0;
  %83 = cast(%var_8131, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = @func_2946() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %88 = logical_or(%85, %86) /* ty=Tensor[(15, 7, 3), bool] */;
  %89 = %87.0;
  (%88, %89)
}

def @func_4597(%var_4596: Tensor[(315), int16]) -> (Tensor[(315), bool],) {
  %96 = fn (%var_4590: Tensor[(315), int16]) -> (Tensor[(315), bool],) {
    %90 = @func_3416() /* ty=Tensor[(315), int16] */;
    %91 = cast(%var_4590, dtype="bool") /* ty=Tensor[(315), bool] */;
    %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(1), int32] */;
    %93 = cast(%90, dtype="bool") /* ty=Tensor[(315), bool] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?), bool] */;
    %95 = logical_or(%93, %94) /* ty=Tensor[(315), bool] */;
    (%95,)
  };
  %96(%var_4596) /* ty=(Tensor[(315), bool],) */
}

def @func_3994() -> (Tensor[(315), int16],) {
  %98 = fn () -> (Tensor[(315), int16],) {
    %97 = @func_3076() /* ty=Tensor[(315), int16] */;
    (%97,)
  };
  %98() /* ty=(Tensor[(315), int16],) */
}

def @func_4294() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %99 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %100 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %101 = %99.0;
  %102 = %100.0;
  (%101, %102)
}

def @func_4635() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  @func_4633() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */
}

def @func_3401() -> (Tensor[(315), int16],) {
  %103 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %104 = %103.2;
  (%104,)
}

def @func_3010(%var_3008: Tensor[(10, 5, 3), float64], %var_3009: Tensor[(10, 5, 3), float64]) -> (Tensor[(10, 5, 3), float64], Tensor[(15, 7, 3), float64]) {
  @func_3006(%var_3008, %var_3009) /* ty=(Tensor[(10, 5, 3), float64], Tensor[(15, 7, 3), float64]) */
}

def @func_2433(%var_2431: int64, %var_2432: Tensor[(1620), int64]) -> (Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
  @func_2429(%var_2431, %var_2432) /* ty=(Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */
}

def @func_5714(%var_5712: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(140), uint64], Tensor[(104), float64], Tensor[(150), float64], Tensor[(2, 120), float64], Tensor[(42), float32]) {
  @func_5711(%var_5712) /* ty=(Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(140), uint64], Tensor[(104), float64], Tensor[(150), float64], Tensor[(2, 120), float64], Tensor[(42), float32]) */
}

def @func_2481() -> (Tensor[(15, 7, 3), float32],) {
  %107 = fn () -> (Tensor[(15, 7, 3), float32],) {
    %105 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
    %106 = %105.1;
    (%106,)
  };
  %107() /* ty=(Tensor[(15, 7, 3), float32],) */
}

def @func_1731(%var_1729: Tensor[(3, 16, 9), float32], %var_1730: Tensor[(4, 112), float32]) -> (Tensor[(7, 16, 4), float32], Tensor[(4, 112), float32], Tensor[(3, 16, 9), bool]) {
  %121 = fn (%var_1706: Tensor[(3, 16, 9), float32], %var_1717: Tensor[(4, 112), float32]) -> (Tensor[(7, 16, 4), float32], Tensor[(4, 112), float32], Tensor[(3, 16, 9), bool]) {
    %108 = cast(%var_1717, dtype="float32") /* ty=Tensor[(4, 112), float32] */;
    %109 = reshape(%108, newshape=[7, 16, 4]) /* ty=Tensor[(7, 16, 4), float32] */;
    %110 = @func_1029(%109) /* ty=(Tensor[(7, 16, 4), float32],) */;
    %111 = cast(%var_1706, dtype="float32") /* ty=Tensor[(3, 16, 9), float32] */;
    %112 = log(%111) /* ty=Tensor[(3, 16, 9), float32] */;
    %113 = cast(%112, dtype="float64") /* ty=Tensor[(3, 16, 9), float64] */;
    %114 = cos(%113) /* ty=Tensor[(3, 16, 9), float64] */;
    %115 = cast(%var_1706, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
    %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
    %117 = cast(%114, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
    %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %119 = %110.0;
    %120 = not_equal(%117, %118) /* ty=Tensor[(3, 16, 9), bool] */;
    (%119, %var_1717, %120)
  };
  %121(%var_1729, %var_1730) /* ty=(Tensor[(7, 16, 4), float32], Tensor[(4, 112), float32], Tensor[(3, 16, 9), bool]) */
}

def @func_4540() -> Tensor[(315), int16] {
  @func_4257() /* ty=Tensor[(315), int16] */
}

def @func_6610() -> Tensor[(315), int16] {
  %123 = fn () -> Tensor[(315), int16] {
    %122 = @func_3155() /* ty=(Tensor[(315), int16],) */;
    %122.0
  };
  %123() /* ty=Tensor[(315), int16] */
}

def @func_2810(%var_2808: Tensor[(104), float64], %var_2809: Tensor[(120, 2), uint64]) -> (Tensor[(15, 7, 3), float64], Tensor[(180), bool], Tensor[(104), float64], Tensor[(416), float64], Tensor[(180), float32], Tensor[(120, 2), uint64]) {
  %140 = fn (%var_2800: Tensor[(104), float64], %var_2803: Tensor[(120, 2), uint64]) -> (Tensor[(15, 7, 3), float64], Tensor[(180), bool], Tensor[(104), float64], Tensor[(416), float64], Tensor[(180), float32], Tensor[(120, 2), uint64]) {
    %124 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %125 = %124.0;
    %126 = cast(%125, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
    %127 = cast(%var_2800, dtype="float64") /* ty=Tensor[(104), float64] */;
    %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %130 = cast(meta[relay.Constant][7] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %131 = cast(%var_2803, dtype="uint64") /* ty=Tensor[(120, 2), uint64] */;
    %132 = reshape(%127, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
    %133 = reshape(%128, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %134 = reshape(%129, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %135 = reshape(%130, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %136 = reshape(%131, newshape=[240]) /* ty=Tensor[(240), uint64] */;
    %137 = @func_1900(%132, %133, %134, %135, %136) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
    %138 = atan(%126) /* ty=Tensor[(15, 7, 3), float64] */;
    %139 = %137.4;
    (%138, %139, %var_2800, meta[relay.Constant][6] /* ty=Tensor[(416), float64] */, meta[relay.Constant][7] /* ty=Tensor[(180), float32] */, %var_2803)
  };
  %140(%var_2808, %var_2809) /* ty=(Tensor[(15, 7, 3), float64], Tensor[(180), bool], Tensor[(104), float64], Tensor[(416), float64], Tensor[(180), float32], Tensor[(120, 2), uint64]) */
}

def @func_680(%var_678: Tensor[(2, 11, 2), float64], %var_679: int64) -> (Tensor[(15, 6, 2), float32], int64, Tensor[(1620), int64], Tensor[(2, 11, 2), float32], Tensor[(11, 12, 1), bool], Tensor[(132), float32], Tensor[(11, 12, 1), bool]) {
  %164 = fn (%var_639: Tensor[(2, 11, 2), float64], %var_645: int64) -> (Tensor[(15, 6, 2), float32], int64, Tensor[(1620), int64], Tensor[(2, 11, 2), float32], Tensor[(11, 12, 1), bool], Tensor[(132), float32], Tensor[(11, 12, 1), bool]) {
    %141 = cast(%var_645, dtype="int64") /* ty=int64 */;
    %142 = cast(meta[relay.Constant][8] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
    %143 = reshape(%141, newshape=[]) /* ty=int64 */;
    %144 = reshape(%142, newshape=[9, 12, 15]) /* ty=Tensor[(9, 12, 15), int64] */;
    %145 = @func_347(%143, %144) /* ty=(Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) */;
    %146 = cast(%var_639, dtype="float64") /* ty=Tensor[(2, 11, 2), float64] */;
    %147 = log2(%146) /* ty=Tensor[(2, 11, 2), float64] */;
    %148 = cast(%var_639, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
    %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(%147, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %152 = cast(%var_645, dtype="float32") /* ty=float32 */;
    %153 = cast(meta[relay.Constant][9] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %154 = reshape(%152, newshape=[]) /* ty=float32 */;
    %155 = reshape(%153, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
    %156 = cast(%var_645, dtype="float32") /* ty=float32 */;
    %157 = @func_325(%154, %155) /* ty=Tensor[(11, 12, 1), bool] */;
    %158 = cast(%157, dtype="float32") /* ty=Tensor[(11, 12, 1), float32] */;
    %159 = reshape(%156, newshape=[]) /* ty=float32 */;
    %160 = reshape(%158, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
    %161 = %145.3;
    %162 = floor_mod(%150, %151) /* ty=Tensor[(2, 11, 2), float32] */;
    %163 = @func_325(%159, %160) /* ty=Tensor[(11, 12, 1), bool] */;
    (%161, %var_645, meta[relay.Constant][8] /* ty=Tensor[(1620), int64] */, %162, %157, meta[relay.Constant][9] /* ty=Tensor[(132), float32] */, %163)
  };
  %164(%var_678, %var_679) /* ty=(Tensor[(15, 6, 2), float32], int64, Tensor[(1620), int64], Tensor[(2, 11, 2), float32], Tensor[(11, 12, 1), bool], Tensor[(132), float32], Tensor[(11, 12, 1), bool]) */
}

def @func_5989() -> Tensor[(315), int16] {
  %165 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %165.0
}

def @func_1143(%var_1120: Tensor[(15, 7, 3), int16]) -> Tensor[(15, 7, 3), float32] {
  %166 = cast(%var_1120, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
  %167 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(15, 7, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 7, 3), int16] */, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %170 = bitwise_or(%168, %169) /* ty=Tensor[(15, 7, 3), int16] */;
  %171 = cast(%var_1120, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%170, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %175 = less_equal(%173, %174) /* ty=Tensor[(15, 7, 3), bool] */;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
  cosh(%176) /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_6235() -> (Tensor[(13, 3, 11), float64],) {
  @func_6233() /* ty=(Tensor[(13, 3, 11), float64],) */
}

def @func_6839() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %177 = @func_2200() /* ty=Tensor[(315), int16] */;
  %178 = @func_4257() /* ty=Tensor[(315), int16] */;
  (%177, %178)
}

def @func_5711(%var_5699: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(140), uint64], Tensor[(104), float64], Tensor[(150), float64], Tensor[(2, 120), float64], Tensor[(42), float32]) {
  %179 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %180 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 120), uint64] */, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %181 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 120), uint64] */, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %182 = reshape(%180, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %183 = reshape(%181, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %184 = @func_1368(%182, %183) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */;
  %185 = cast(%var_5699, dtype="float64") /* ty=Tensor[(104), float64] */;
  %186 = cast(meta[relay.Constant][12] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %187 = reshape(%185, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %188 = reshape(%186, newshape=[5, 30]) /* ty=Tensor[(5, 30), float64] */;
  %189 = @func_4961(%187, %188) /* ty=(Tensor[(315), int8], Tensor[(240), int8], Tensor[(1, 585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(1, 104), float64], Tensor[(104), float64], Tensor[(5, 30), float64]) */;
  %190 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 120), uint64] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %191 = atanh(%190) /* ty=Tensor[(2, 120), float32] */;
  %192 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 120), uint64] */, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(2), int32] */;
  %194 = cast(%191, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %196 = divide(%194, %195) /* ty=Tensor[(2, 120), float64] */;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %198 = sigmoid(%197) /* ty=Tensor[(2, 120), float32] */;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %200 = cast(%var_5699, dtype="float64") /* ty=Tensor[(104), float64] */;
  %201 = cast(meta[relay.Constant][12] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %202 = reshape(%200, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %203 = reshape(%201, newshape=[5, 30]) /* ty=Tensor[(5, 30), float64] */;
  %204 = @func_4961(%202, %203) /* ty=(Tensor[(315), int8], Tensor[(240), int8], Tensor[(1, 585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(1, 104), float64], Tensor[(104), float64], Tensor[(5, 30), float64]) */;
  %205 = %179.0;
  %206 = %184.1;
  %207 = %189.3;
  %208 = rsqrt(%199) /* ty=Tensor[(2, 120), float64] */;
  %209 = %204.4;
  (%205, %206, %207, %var_5699, meta[relay.Constant][12] /* ty=Tensor[(150), float64] */, %208, %209)
}

def @func_6525() -> (Tensor[(16, 14), float64],) {
  @func_6523() /* ty=(Tensor[(16, 14), float64],) */
}

def @func_1702() -> (Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) {
  @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */
}

def @func_3883() -> (Tensor[(315), int8], Tensor[(15, 6, 2), float32], Tensor[(315), int16], Tensor[(6, 270), bool]) {
  @func_3881() /* ty=(Tensor[(315), int8], Tensor[(15, 6, 2), float32], Tensor[(315), int16], Tensor[(6, 270), bool]) */
}

def @func_1029(%var_1023: Tensor[(7, 16, 4), float32]) -> (Tensor[(7, 16, 4), float32],) {
  %210 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 16, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 4), float32] */;
  %211 = shape_of(%var_1023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%var_1023, dtype="float32") /* ty=Tensor[(7, 16, 4), float32] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %214 = divide(%212, %213) /* ty=Tensor[(7, 16, 4), float32] */;
  (%214,)
}

def @func_4742(%var_4727: Tensor[(15, 7, 3), float64]) -> (Tensor[(15, 7, 3), uint64], Tensor[(315), int16]) {
  %215 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
  %216 = %215.1;
  %217 = cast(%var_4727, dtype="uint64") /* ty=Tensor[(15, 7, 3), uint64] */;
  %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%216, dtype="uint64") /* ty=Tensor[(15, 7, 3), uint64] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %221 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %222 = right_shift(%219, %220) /* ty=Tensor[(15, 7, 3), uint64] */;
  %223 = %221.0;
  (%222, %223)
}

def @func_8358() -> Tensor[(315), int16] {
  %224 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %224.0
}

def @func_6647() -> (Tensor[(15, 7, 3), float32], Tensor[(315), int16]) {
  %225 = @func_5040() /* ty=Tensor[(15, 7, 3), float32] */;
  %226 = @func_2162() /* ty=Tensor[(315), int16] */;
  (%225, %226)
}

def @func_1759() -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32]) {
  %231 = fn () -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32]) {
    %227 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
    %228 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
    %229 = %227.2;
    %230 = %228.1;
    (%229, %230)
  };
  %231() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */
}

def @func_2429(%var_2408: int64, %var_2409: Tensor[(1620), int64]) -> (Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
  %232 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %233 = %232.2;
  %234 = cast(%233, dtype="float64") /* ty=Tensor[(315), float64] */;
  %235 = cast(%var_2408, dtype="int64") /* ty=int64 */;
  %236 = cast(%var_2409, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %237 = reshape(%235, newshape=[]) /* ty=int64 */;
  %238 = reshape(%236, newshape=[9, 12, 15]) /* ty=Tensor[(9, 12, 15), int64] */;
  %239 = @func_347(%237, %238) /* ty=(Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) */;
  %240 = atanh(%234) /* ty=Tensor[(315), float64] */;
  %241 = %239.0;
  (%240, %241, %var_2408, %var_2409)
}

def @func_5868() -> Tensor[(15, 7, 3), float32] {
  %242 = @func_5111() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %242.0
}

def @func_8294() -> (Tensor[(315), int16], Tensor[(315), bool], Tensor[(315), float32]) {
  @func_8292() /* ty=(Tensor[(315), int16], Tensor[(315), bool], Tensor[(315), float32]) */
}

def @func_1208(%var_1201: Tensor[(15, 9, 10), uint16]) -> (Tensor[(15, 9, 10), bool],) {
  %243 = cast(%var_1201, dtype="bool") /* ty=Tensor[(15, 9, 10), bool] */;
  %244 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(15, 9, 10), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 9, 10), uint16] */, dtype="bool") /* ty=Tensor[(15, 9, 10), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %247 = greater_equal(%245, %246) /* ty=Tensor[(15, 9, 10), bool] */;
  (%247,)
}

def @func_1900(%var_1808: Tensor[(13, 8, 1), float64], %var_1809: Tensor[(13, 8, 4), float64], %var_1837: Tensor[(13, 8, 4), float64], %var_1878: Tensor[(180), float32], %var_1894: Tensor[(240), uint64]) -> (Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) {
  %248 = cast(%var_1809, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %249 = shape_of(%var_1837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%var_1837, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %252 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %253 = cast(%var_1837, dtype="bool") /* ty=Tensor[(13, 8, 4), bool] */;
  %254 = shape_of(%var_1809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%var_1809, dtype="bool") /* ty=Tensor[(13, 8, 4), bool] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %257 = greater(%255, %256) /* ty=Tensor[(13, 8, 4), bool] */;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(13, 8, 4), float32] */;
  %259 = cast(%var_1808, dtype="float32") /* ty=Tensor[(13, 8, 1), float32] */;
  %260 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %261 = reshape(%260, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), float32] */;
  %262 = @func_218(%261) /* ty=(Tensor[(15, 6, 2), float32],) */;
  %263 = cast(%var_1878, dtype="bool") /* ty=Tensor[(180), bool] */;
  %264 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %265 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, dtype="bool") /* ty=Tensor[(180), bool] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?), bool] */;
  %267 = cast(%var_1808, dtype="float64") /* ty=Tensor[(13, 8, 1), float64] */;
  %268 = cast(%var_1809, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %269 = floor_mod(%267, %268) /* ty=Tensor[(13, 8, 4), float64] */;
  %270 = cast(%269, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %271 = log(%270) /* ty=Tensor[(13, 8, 4), float64] */;
  %272 = cast(%271, dtype="float64") /* ty=Tensor[(13, 8, 4), float64] */;
  %273 = cast(%var_1894, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %274 = cast(%var_1894, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %275 = reshape(%273, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %276 = reshape(%274, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %277 = @func_1368(%275, %276) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */;
  %278 = floor_divide(%250, %251) /* ty=Tensor[(13, 8, 4), float64] */;
  %279 = %252.2;
  %280 = mod(%258, %259) /* ty=Tensor[(13, 8, 4), float32] */;
  %281 = %262.0;
  %282 = greater_equal(%265, %266) /* ty=Tensor[(180), bool] */;
  %283 = exp(%272) /* ty=Tensor[(13, 8, 4), float64] */;
  %284 = %277.0;
  (%278, %279, %280, %281, %282, %283, %284, %var_1894)
}

def @func_2721(%var_2716: Tensor[(448), float32], %var_2717: Tensor[(104), float64], %var_2718: Tensor[(30, 6), float32], %var_2719: Tensor[(240), uint64], %var_2720: Tensor[(416), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(315), int16], Tensor[(104), float64], Tensor[(30, 6), float32], Tensor[(240), uint64], Tensor[(315), int16], Tensor[(416), uint64], Tensor[(448), int16]) {
  %317 = fn (%var_2653: Tensor[(448), float32], %var_2667: Tensor[(104), float64], %var_2669: Tensor[(30, 6), float32], %var_2670: Tensor[(240), uint64], %var_2687: Tensor[(416), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(315), int16], Tensor[(104), float64], Tensor[(30, 6), float32], Tensor[(240), uint64], Tensor[(315), int16], Tensor[(416), uint64], Tensor[(448), int16]) {
    %285 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
    %286 = cast(%var_2667, dtype="float64") /* ty=Tensor[(104), float64] */;
    %287 = cast(meta[relay.Constant][17] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %288 = cast(meta[relay.Constant][17] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %289 = cast(%var_2669, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
    %290 = cast(%var_2670, dtype="uint64") /* ty=Tensor[(240), uint64] */;
    %291 = reshape(%286, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
    %292 = reshape(%287, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %293 = reshape(%288, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %294 = reshape(%289, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %295 = reshape(%290, newshape=[240]) /* ty=Tensor[(240), uint64] */;
    %296 = @func_1900(%291, %292, %293, %294, %295) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
    %297 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
    %298 = cast(%var_2687, dtype="uint64") /* ty=Tensor[(416), uint64] */;
    %299 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(416), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %300 = cast(meta[relay.Constant][17] /* ty=Tensor[(416), float64] */, dtype="uint64") /* ty=Tensor[(416), uint64] */;
    %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %302 = cast(meta[relay.Constant][16] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %303 = cast(%var_2653, dtype="float32") /* ty=Tensor[(448), float32] */;
    %304 = reshape(%302, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %305 = reshape(%303, newshape=[448]) /* ty=Tensor[(448), float32] */;
    %306 = @func_2038(%304, %305) /* ty=(Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(120, 2), uint64], Tensor[(3, 16, 9), bool], Tensor[(432), float32], Tensor[(448), float32], Tensor[(7, 16, 4), float32]) */;
    %307 = %306.6;
    %308 = cast(%307, dtype="int16") /* ty=Tensor[(7, 16, 4), int16] */;
    %309 = shape_of(%var_2653, dtype="int32") /* ty=Tensor[(1), int32] */;
    %310 = cast(%var_2653, dtype="int16") /* ty=Tensor[(448), int16] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?), int16] */;
    %312 = %285.1;
    %313 = %296.1;
    %314 = %297.1;
    %315 = bitwise_xor(%300, %301) /* ty=Tensor[(416), uint64] */;
    %316 = left_shift(%310, %311) /* ty=Tensor[(448), int16] */;
    (%312, meta[relay.Constant][16] /* ty=Tensor[(432), float32] */, %313, %var_2667, %var_2669, %var_2670, %314, %315, %316)
  };
  %317(%var_2716, %var_2717, %var_2718, %var_2719, %var_2720) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(315), int16], Tensor[(104), float64], Tensor[(30, 6), float32], Tensor[(240), uint64], Tensor[(315), int16], Tensor[(416), uint64], Tensor[(448), int16]) */
}

def @func_6649() -> (Tensor[(15, 7, 3), float32], Tensor[(315), int16]) {
  @func_6647() /* ty=(Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */
}

def @func_6689() -> (Tensor[(315), int16],) {
  %320 = fn () -> (Tensor[(315), int16],) {
    %318 = @func_3993() /* ty=(Tensor[(315), int16],) */;
    %319 = %318.0;
    (%319,)
  };
  %320() /* ty=(Tensor[(315), int16],) */
}

def @func_4827() -> Tensor[(315), float32] {
  %324 = fn () -> Tensor[(315), float32] {
    %321 = @func_3155() /* ty=(Tensor[(315), int16],) */;
    %322 = %321.0;
    %323 = cast(%322, dtype="float32") /* ty=Tensor[(315), float32] */;
    sinh(%323) /* ty=Tensor[(315), float32] */
  };
  %324() /* ty=Tensor[(315), float32] */
}

def @func_2038(%var_2027: Tensor[(432), float32], %var_2028: Tensor[(448), float32]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(120, 2), uint64], Tensor[(3, 16, 9), bool], Tensor[(432), float32], Tensor[(448), float32], Tensor[(7, 16, 4), float32]) {
  %325 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %326 = cast(meta[relay.Constant][18] /* ty=Tensor[(120, 2), uint64] */, dtype="uint64") /* ty=Tensor[(120, 2), uint64] */;
  %327 = cast(meta[relay.Constant][18] /* ty=Tensor[(120, 2), uint64] */, dtype="uint64") /* ty=Tensor[(120, 2), uint64] */;
  %328 = reshape(%326, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %329 = reshape(%327, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %330 = @func_1368(%328, %329) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */;
  %331 = cast(%var_2027, dtype="float32") /* ty=Tensor[(432), float32] */;
  %332 = cast(%var_2028, dtype="float32") /* ty=Tensor[(448), float32] */;
  %333 = reshape(%331, newshape=[3, 16, 9]) /* ty=Tensor[(3, 16, 9), float32] */;
  %334 = reshape(%332, newshape=[4, 112]) /* ty=Tensor[(4, 112), float32] */;
  %335 = @func_1728(%333, %334) /* ty=(Tensor[(7, 16, 4), float32], Tensor[(4, 112), float32], Tensor[(3, 16, 9), bool]) */;
  %336 = cast(%var_2028, dtype="float32") /* ty=Tensor[(448), float32] */;
  %337 = reshape(%336, newshape=[7, 16, 4]) /* ty=Tensor[(7, 16, 4), float32] */;
  %338 = @func_1029(%337) /* ty=(Tensor[(7, 16, 4), float32],) */;
  %339 = %325.0;
  %340 = %330.1;
  %341 = %335.2;
  %342 = %338.0;
  (%339, %340, meta[relay.Constant][18] /* ty=Tensor[(120, 2), uint64] */, %341, %var_2027, %var_2028, %342)
}

def @func_7440(%var_7363: Tensor[(315), float32]) -> (Tensor[(16, 14), float64], Tensor[(315), float32], Tensor[(2, 12, 10), int8], Tensor[(104), float64], Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float64]) {
  %343 = @func_6523() /* ty=(Tensor[(16, 14), float64],) */;
  %344 = cast(meta[relay.Constant][19] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %345 = reshape(%344, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %346 = @func_6481(%345) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(104), bool], Tensor[(42), float32]) */;
  %347 = @func_4914() /* ty=(Tensor[(315), int16],) */;
  %348 = cast(%var_7363, dtype="float32") /* ty=Tensor[(315), float32] */;
  %349 = reshape(%348, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float32] */;
  %350 = @func_5148(%349) /* ty=Tensor[(15, 7, 3), bool] */;
  %351 = cast(%350, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %352 = %343.0;
  %353 = %346.1;
  %354 = %347.0;
  %355 = @func_2162() /* ty=Tensor[(315), int16] */;
  %356 = log(%351) /* ty=Tensor[(15, 7, 3), float64] */;
  (%352, %var_7363, %353, meta[relay.Constant][19] /* ty=Tensor[(104), float64] */, %354, %355, %356)
}

def @func_3418() -> Tensor[(315), int16] {
  @func_3416() /* ty=Tensor[(315), int16] */
}

def @func_7124(%var_7122: Tensor[(2), uint64], %var_7123: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(7, 16, 4), float32]) {
  @func_7120(%var_7122, %var_7123) /* ty=(Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(7, 16, 4), float32]) */
}

def @func_3139() -> Tensor[(15, 7, 3), float32] {
  @func_3137() /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_2929(%var_2924: Tensor[(10, 2, 11), bool], %var_2925: Tensor[(10, 2, 11), bool]) -> (Tensor[(10, 2, 11), bool],) {
  %357 = cast(%var_2925, dtype="bool") /* ty=Tensor[(10, 2, 11), bool] */;
  %358 = shape_of(%var_2924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_2924, dtype="bool") /* ty=Tensor[(10, 2, 11), bool] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %361 = logical_or(%359, %360) /* ty=Tensor[(10, 2, 11), bool] */;
  (%361,)
}

def @func_4964(%var_4962: Tensor[(104), float64], %var_4963: Tensor[(5, 30), float64]) -> (Tensor[(315), int8], Tensor[(240), int8], Tensor[(1, 585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(1, 104), float64], Tensor[(104), float64], Tensor[(5, 30), float64]) {
  %382 = fn (%var_4958: Tensor[(104), float64], %var_4959: Tensor[(5, 30), float64]) -> (Tensor[(315), int8], Tensor[(240), int8], Tensor[(1, 585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(1, 104), float64], Tensor[(104), float64], Tensor[(5, 30), float64]) {
    %362 = @func_3881() /* ty=(Tensor[(315), int8], Tensor[(15, 6, 2), float32], Tensor[(315), int16], Tensor[(6, 270), bool]) */;
    %363 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 585), float64] */, dtype="float64") /* ty=Tensor[(1, 585), float64] */;
    %364 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 585), float64] */, dtype="float64") /* ty=Tensor[(1, 585), float64] */;
    %365 = cast(meta[relay.Constant][21] /* ty=Tensor[(140), uint64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
    %366 = cast(meta[relay.Constant][22] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %367 = reshape(%363, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
    %368 = reshape(%364, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
    %369 = reshape(%365, newshape=[140]) /* ty=Tensor[(140), uint64] */;
    %370 = reshape(%366, newshape=[7, 6]) /* ty=Tensor[(7, 6), float32] */;
    %371 = @func_3968(%367, %368, %369, %370) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
    %372 = cast(meta[relay.Constant][22] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %373 = cast(%var_4958, dtype="float64") /* ty=Tensor[(104), float64] */;
    %374 = cast(%var_4959, dtype="float64") /* ty=Tensor[(5, 30), float64] */;
    %375 = reshape(%372, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %376 = reshape(%373, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
    %377 = reshape(%374, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %378 = @func_3048(%375, %376, %377) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) */;
    %379 = %362.0;
    %380 = %371.6;
    %381 = %378.4;
    (%379, %380, meta[relay.Constant][20] /* ty=Tensor[(1, 585), float64] */, meta[relay.Constant][21] /* ty=Tensor[(140), uint64] */, meta[relay.Constant][22] /* ty=Tensor[(42), float32] */, %381, %var_4958, %var_4959)
  };
  %382(%var_4962, %var_4963) /* ty=(Tensor[(315), int8], Tensor[(240), int8], Tensor[(1, 585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(1, 104), float64], Tensor[(104), float64], Tensor[(5, 30), float64]) */
}

def @func_1608(%var_1606: Tensor[(10, 10, 10), float32], %var_1607: Tensor[(10, 10, 10), float32]) -> (Tensor[(10, 10, 10), float32], Tensor[(10, 10, 10), bool]) {
  %393 = fn (%var_1589: Tensor[(10, 10, 10), float32], %var_1590: Tensor[(10, 10, 10), float32]) -> (Tensor[(10, 10, 10), float32], Tensor[(10, 10, 10), bool]) {
    %383 = cast(%var_1590, dtype="float32") /* ty=Tensor[(10, 10, 10), float32] */;
    %384 = shape_of(%var_1589, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%var_1589, dtype="float32") /* ty=Tensor[(10, 10, 10), float32] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %387 = cast(%var_1589, dtype="bool") /* ty=Tensor[(10, 10, 10), bool] */;
    %388 = shape_of(%var_1590, dtype="int32") /* ty=Tensor[(3), int32] */;
    %389 = cast(%var_1590, dtype="bool") /* ty=Tensor[(10, 10, 10), bool] */;
    %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %391 = floor_divide(%385, %386) /* ty=Tensor[(10, 10, 10), float32] */;
    %392 = greater_equal(%389, %390) /* ty=Tensor[(10, 10, 10), bool] */;
    (%391, %392)
  };
  %393(%var_1606, %var_1607) /* ty=(Tensor[(10, 10, 10), float32], Tensor[(10, 10, 10), bool]) */
}

def @func_2244(%var_2242: Tensor[(3, 10, 4), bool]) -> Tensor[(3, 10, 4), bool] {
  @func_2241(%var_2242) /* ty=Tensor[(3, 10, 4), bool] */
}

def @func_3463(%var_3461: Tensor[(2, 1, 1), uint64], %var_3462: Tensor[(2, 5, 14), uint64]) -> (Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) {
  %403 = fn (%var_3425: Tensor[(2, 1, 1), uint64], %var_3426: Tensor[(2, 5, 14), uint64]) -> (Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) {
    %394 = cast(%var_3425, dtype="uint64") /* ty=Tensor[(2, 1, 1), uint64] */;
    %395 = cast(%var_3426, dtype="uint64") /* ty=Tensor[(2, 5, 14), uint64] */;
    %396 = cast(meta[relay.Constant][23] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
    %397 = reshape(%396, newshape=[7, 16, 4]) /* ty=Tensor[(7, 16, 4), float32] */;
    %398 = @func_1029(%397) /* ty=(Tensor[(7, 16, 4), float32],) */;
    %399 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
    %400 = left_shift(%394, %395) /* ty=Tensor[(2, 5, 14), uint64] */;
    %401 = %398.0;
    %402 = %399.0;
    (%400, %401, meta[relay.Constant][23] /* ty=Tensor[(448), float32] */, %402)
  };
  %403(%var_3461, %var_3462) /* ty=(Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) */
}

def @func_8360() -> Tensor[(315), int16] {
  @func_8358() /* ty=Tensor[(315), int16] */
}

def @func_5491(%var_5480: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(104), float64], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(7, 6), float32]) {
  %404 = @func_3689() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %405 = cast(meta[relay.Constant][24] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %406 = cast(meta[relay.Constant][24] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %407 = cast(%var_5480, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %408 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
  %409 = reshape(%405, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %410 = reshape(%406, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
  %411 = reshape(%407, newshape=[140]) /* ty=Tensor[(140), uint64] */;
  %412 = reshape(%408, newshape=[7, 6]) /* ty=Tensor[(7, 6), float32] */;
  %413 = @func_3968(%409, %410, %411, %412) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %414 = %404.1;
  %415 = %413.8;
  (%414, %415, meta[relay.Constant][24] /* ty=Tensor[(585), float64] */, %var_5480, meta[relay.Constant][25] /* ty=Tensor[(7, 6), float32] */)
}

def @func_5345() -> (Tensor[(15, 7, 3), float32],) {
  %416 = @func_2946() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %417 = %416.0;
  (%417,)
}

def @func_5956(%var_5936: Tensor[(338, 2), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(13, 13, 4), float32], Tensor[(338, 2), bool], Tensor[(338, 2), bool]) {
  %418 = @func_4335() /* ty=(Tensor[(15, 7, 3), float32],) */;
  %419 = cast(meta[relay.Constant][26] /* ty=Tensor[(338, 2), uint64] */, dtype="uint64") /* ty=Tensor[(338, 2), uint64] */;
  %420 = reshape(%419, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), uint64] */;
  %421 = @func_5896(%420) /* ty=(Tensor[(13, 13, 4), bool], Tensor[(13, 13, 4), float32]) */;
  %422 = cast(%var_5936, dtype="bool") /* ty=Tensor[(338, 2), bool] */;
  %423 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(338, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %424 = cast(meta[relay.Constant][26] /* ty=Tensor[(338, 2), uint64] */, dtype="bool") /* ty=Tensor[(338, 2), bool] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %426 = cast(%var_5936, dtype="bool") /* ty=Tensor[(338, 2), bool] */;
  %427 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(338, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %428 = cast(meta[relay.Constant][26] /* ty=Tensor[(338, 2), uint64] */, dtype="bool") /* ty=Tensor[(338, 2), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %430 = %418.0;
  %431 = %421.1;
  %432 = logical_and(%424, %425) /* ty=Tensor[(338, 2), bool] */;
  %433 = equal(%428, %429) /* ty=Tensor[(338, 2), bool] */;
  (%430, %431, %432, %433)
}

def @func_5042() -> Tensor[(15, 7, 3), float32] {
  @func_5040() /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_2920(%var_2917: Tensor[(42), float32], %var_2918: Tensor[(240), int8], %var_2919: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) {
  %482 = fn (%var_2851: Tensor[(42), float32], %var_2856: Tensor[(240), int8], %var_2905: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) {
    %434 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %435 = %434.0;
    %436 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
    %437 = cast(%436, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
    %438 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
    %439 = cast(%435, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
    %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %441 = cast(%var_2851, dtype="float32") /* ty=Tensor[(42), float32] */;
    %442 = reshape(%441, newshape=[2, 3, 7]) /* ty=Tensor[(2, 3, 7), float32] */;
    %443 = @func_134(%442) /* ty=(Tensor[(2, 3, 7), float64],) */;
    %444 = cast(%var_2856, dtype="int8") /* ty=Tensor[(240), int8] */;
    %445 = cast(%var_2856, dtype="int8") /* ty=Tensor[(240), int8] */;
    %446 = reshape(%444, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), int8] */;
    %447 = reshape(%445, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), int8] */;
    %448 = cast(%436, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
    %449 = acosh(%448) /* ty=Tensor[(15, 7, 3), float32] */;
    %450 = cast(%449, dtype="uint32") /* ty=Tensor[(15, 7, 3), uint32] */;
    %451 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
    %452 = cast(%436, dtype="uint32") /* ty=Tensor[(15, 7, 3), uint32] */;
    %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %454 = add(%452, %453) /* ty=Tensor[(15, 7, 3), uint32] */;
    %455 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 7, 3), uint32] */, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
    %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(%454, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %459 = mod(%457, %458) /* ty=Tensor[(15, 7, 3), float64] */;
    %460 = cast(%459, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
    %461 = acos(%460) /* ty=Tensor[(15, 7, 3), float64] */;
    %462 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
    %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
    %464 = cast(%461, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
    %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %466 = cast(%var_2905, dtype="float64") /* ty=Tensor[(104), float64] */;
    %467 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 416), float64] */, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
    %468 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 416), float64] */, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
    %469 = cast(meta[relay.Constant][30] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %470 = @func_2606(%446, %447) /* ty=Tensor[(2, 12, 10), int8] */;
    %471 = cast(%470, dtype="uint64") /* ty=Tensor[(2, 12, 10), uint64] */;
    %472 = reshape(%466, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
    %473 = reshape(%467, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %474 = reshape(%468, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %475 = reshape(%469, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %476 = reshape(%471, newshape=[240]) /* ty=Tensor[(240), uint64] */;
    %477 = @func_1900(%472, %473, %474, %475, %476) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
    %478 = equal(%439, %440) /* ty=Tensor[(15, 7, 3), bool] */;
    %479 = %443.0;
    %480 = subtract(%464, %465) /* ty=Tensor[(15, 7, 3), float64] */;
    %481 = %477.1;
    (%478, %479, %var_2851, %470, %var_2856, %480, %481, %var_2905, meta[relay.Constant][29] /* ty=Tensor[(1, 416), float64] */, meta[relay.Constant][30] /* ty=Tensor[(180), float32] */)
  };
  %482(%var_2917, %var_2918, %var_2919) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */
}

def @func_7619() -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(315), int16], Tensor[(315), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(104), float64]) {
  %498 = fn () -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(315), int16], Tensor[(315), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(104), float64]) {
    %483 = @func_4679() /* ty=(Tensor[(315), int16],) */;
    %484 = @func_4633() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
    %485 = %484.1;
    %486 = cast(%485, dtype="float32") /* ty=Tensor[(315), float32] */;
    %487 = reshape(%486, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %488 = @func_7440(%487) /* ty=(Tensor[(16, 14), float64], Tensor[(315), float32], Tensor[(2, 12, 10), int8], Tensor[(104), float64], Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float64]) */;
    %489 = @func_4335() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %490 = cast(meta[relay.Constant][31] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %491 = reshape(%490, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %492 = @func_5711(%491) /* ty=(Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(140), uint64], Tensor[(104), float64], Tensor[(150), float64], Tensor[(2, 120), float64], Tensor[(42), float32]) */;
    %493 = @func_3416() /* ty=Tensor[(315), int16] */;
    %494 = %483.0;
    %495 = %488.1;
    %496 = %489.0;
    %497 = %492.0;
    (%493, %494, %485, %495, %496, %497, meta[relay.Constant][31] /* ty=Tensor[(104), float64] */)
  };
  %498() /* ty=(Tensor[(315), int16], Tensor[(315), int16], Tensor[(315), int16], Tensor[(315), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(104), float64]) */
}

def @func_3248(%var_3205: Tensor[(315), int16], %var_3237: Tensor[(240), uint64], %var_3244: Tensor[(1620), int64]) -> (Tensor[(315), bool], Tensor[(13, 8, 4), float64], Tensor[(104), float64], Tensor[(208, 2), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
  %499 = @func_3155() /* ty=(Tensor[(315), int16],) */;
  %500 = %499.0;
  %501 = cast(%var_3205, dtype="bool") /* ty=Tensor[(315), bool] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(1), int32] */;
  %503 = cast(%500, dtype="bool") /* ty=Tensor[(315), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?), bool] */;
  %505 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %506 = cast(meta[relay.Constant][33] /* ty=Tensor[(208, 2), float64] */, dtype="float64") /* ty=Tensor[(208, 2), float64] */;
  %507 = cast(meta[relay.Constant][33] /* ty=Tensor[(208, 2), float64] */, dtype="float64") /* ty=Tensor[(208, 2), float64] */;
  %508 = cast(meta[relay.Constant][34] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %509 = cast(%var_3237, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %510 = reshape(%505, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %511 = reshape(%506, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %512 = reshape(%507, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %513 = reshape(%508, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %514 = reshape(%509, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %515 = @func_1900(%510, %511, %512, %513, %514) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
  %516 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %517 = cast(%var_3244, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %518 = reshape(%516, newshape=[]) /* ty=int64 */;
  %519 = reshape(%517, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %520 = @func_2429(%518, %519) /* ty=(Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %521 = less(%503, %504) /* ty=Tensor[(315), bool] */;
  %522 = %515.5;
  %523 = %520.1;
  (%521, %522, meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, meta[relay.Constant][33] /* ty=Tensor[(208, 2), float64] */, meta[relay.Constant][34] /* ty=Tensor[(180), float32] */, %var_3237, %523, -8 /* ty=int64 */, %var_3244)
}

def @func_5320() -> (Tensor[(13, 3, 11), float64],) {
  @func_5318() /* ty=(Tensor[(13, 3, 11), float64],) */
}

def @func_6777() -> (Tensor[(15, 7, 3), float32],) {
  %526 = fn () -> (Tensor[(15, 7, 3), float32],) {
    %524 = @func_6647() /* ty=(Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
    %525 = %524.0;
    (%525,)
  };
  %526() /* ty=(Tensor[(15, 7, 3), float32],) */
}

def @func_3736(%var_3732: Tensor[(240), int8], %var_3733: Tensor[(104), float64], %var_3734: Tensor[(2), uint64], %var_3735: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(1, 416), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(104), float64], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64]) {
  %543 = fn (%var_3712: Tensor[(240), int8], %var_3713: Tensor[(104), float64], %var_3717: Tensor[(2), uint64], %var_3718: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(1, 416), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(104), float64], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64]) {
    %527 = @func_3401() /* ty=(Tensor[(315), int16],) */;
    %528 = cast(meta[relay.Constant][35] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %529 = cast(%var_3712, dtype="int8") /* ty=Tensor[(240), int8] */;
    %530 = cast(%var_3713, dtype="float64") /* ty=Tensor[(104), float64] */;
    %531 = reshape(%528, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %532 = reshape(%529, newshape=[240]) /* ty=Tensor[(240), int8] */;
    %533 = reshape(%530, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %534 = @func_2916(%531, %532, %533) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
    %535 = cast(%var_3717, dtype="uint64") /* ty=Tensor[(2), uint64] */;
    %536 = cast(%var_3718, dtype="uint64") /* ty=Tensor[(140), uint64] */;
    %537 = reshape(%535, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), uint64] */;
    %538 = reshape(%536, newshape=[2, 5, 14]) /* ty=Tensor[(2, 5, 14), uint64] */;
    %539 = @func_3460(%537, %538) /* ty=(Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) */;
    %540 = %527.0;
    %541 = %534.8;
    %542 = %539.2;
    (%540, %541, meta[relay.Constant][35] /* ty=Tensor[(42), float32] */, %var_3712, %var_3713, %542, %var_3717, %var_3718)
  };
  %543(%var_3732, %var_3733, %var_3734, %var_3735) /* ty=(Tensor[(315), int16], Tensor[(1, 416), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(104), float64], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64]) */
}

def @func_5347() -> (Tensor[(15, 7, 3), float32],) {
  @func_5345() /* ty=(Tensor[(15, 7, 3), float32],) */
}

def @func_3253(%var_3250: Tensor[(315), int16], %var_3251: Tensor[(240), uint64], %var_3252: Tensor[(1620), int64]) -> (Tensor[(315), bool], Tensor[(13, 8, 4), float64], Tensor[(104), float64], Tensor[(208, 2), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) {
  @func_3248(%var_3250, %var_3251, %var_3252) /* ty=(Tensor[(315), bool], Tensor[(13, 8, 4), float64], Tensor[(104), float64], Tensor[(208, 2), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */
}

def @func_329(%var_327: float32, %var_328: Tensor[(11, 12, 1), float32]) -> Tensor[(11, 12, 1), bool] {
  @func_325(%var_327, %var_328) /* ty=Tensor[(11, 12, 1), bool] */
}

def @func_137(%var_135: Tensor[(2, 3, 7), float32]) -> (Tensor[(2, 3, 7), float64],) {
  @func_134(%var_135) /* ty=(Tensor[(2, 3, 7), float64],) */
}

def @func_4150(%var_4147: float32, %var_4148: Tensor[(42), float32], %var_4149: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(11, 12, 1), bool], float32, Tensor[(33, 4), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(42), float32], Tensor[(104), float64], Tensor[(150), float64]) {
  %559 = fn (%var_4127: float32, %var_4140: Tensor[(42), float32], %var_4141: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(11, 12, 1), bool], float32, Tensor[(33, 4), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(42), float32], Tensor[(104), float64], Tensor[(150), float64]) {
    %544 = cast(%var_4127, dtype="float32") /* ty=float32 */;
    %545 = cast(meta[relay.Constant][36] /* ty=Tensor[(33, 4), float32] */, dtype="float32") /* ty=Tensor[(33, 4), float32] */;
    %546 = reshape(%544, newshape=[]) /* ty=float32 */;
    %547 = reshape(%545, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
    %548 = cast(%var_4140, dtype="float32") /* ty=Tensor[(42), float32] */;
    %549 = cast(%var_4141, dtype="float64") /* ty=Tensor[(104), float64] */;
    %550 = cast(meta[relay.Constant][37] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %551 = reshape(%548, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %552 = reshape(%549, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
    %553 = reshape(%550, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %554 = @func_3048(%551, %552, %553) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) */;
    %555 = @func_2162() /* ty=Tensor[(315), int16] */;
    %556 = @func_325(%546, %547) /* ty=Tensor[(11, 12, 1), bool] */;
    %557 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
    %558 = %554.0;
    (%555, %556, %var_4127, meta[relay.Constant][36] /* ty=Tensor[(33, 4), float32] */, %557, %558, %var_4140, %var_4141, meta[relay.Constant][37] /* ty=Tensor[(150), float64] */)
  };
  %559(%var_4147, %var_4148, %var_4149) /* ty=(Tensor[(315), int16], Tensor[(11, 12, 1), bool], float32, Tensor[(33, 4), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(42), float32], Tensor[(104), float64], Tensor[(150), float64]) */
}

def @func_5112() -> (Tensor[(15, 7, 3), float32],) {
  %562 = fn () -> (Tensor[(15, 7, 3), float32],) {
    %560 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %561 = %560.0;
    (%561,)
  };
  %562() /* ty=(Tensor[(15, 7, 3), float32],) */
}

def @func_2948() -> (Tensor[(15, 7, 3), float32],) {
  @func_2946() /* ty=(Tensor[(15, 7, 3), float32],) */
}

def @func_2933(%var_2931: Tensor[(10, 2, 11), bool], %var_2932: Tensor[(10, 2, 11), bool]) -> (Tensor[(10, 2, 11), bool],) {
  @func_2929(%var_2931, %var_2932) /* ty=(Tensor[(10, 2, 11), bool],) */
}

def @func_4462(%var_4460: Tensor[(15, 7, 3), float32], %var_4461: Tensor[(42), float32]) -> (Tensor[(15, 7, 3), uint8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(315), int16]) {
  %586 = fn (%var_4415: Tensor[(15, 7, 3), float32], %var_4434: Tensor[(42), float32]) -> (Tensor[(15, 7, 3), uint8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(315), int16]) {
    %563 = @func_3667() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
    %564 = %563.1;
    %565 = cast(%var_4415, dtype="uint8") /* ty=Tensor[(15, 7, 3), uint8] */;
    %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
    %567 = cast(%564, dtype="uint8") /* ty=Tensor[(15, 7, 3), uint8] */;
    %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %569 = cast(%564, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
    %570 = @func_3993() /* ty=(Tensor[(315), int16],) */;
    %571 = cast(meta[relay.Constant][38] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
    %572 = cast(meta[relay.Constant][38] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
    %573 = cast(meta[relay.Constant][39] /* ty=Tensor[(140), uint64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
    %574 = cast(%var_4434, dtype="float32") /* ty=Tensor[(42), float32] */;
    %575 = reshape(%571, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
    %576 = reshape(%572, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
    %577 = reshape(%573, newshape=[140]) /* ty=Tensor[(140), uint64] */;
    %578 = reshape(%574, newshape=[7, 6]) /* ty=Tensor[(7, 6), float32] */;
    %579 = @func_3968(%575, %576, %577, %578) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
    %580 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
    %581 = maximum(%567, %568) /* ty=Tensor[(15, 7, 3), uint8] */;
    %582 = cos(%569) /* ty=Tensor[(15, 7, 3), float64] */;
    %583 = %570.0;
    %584 = %579.1;
    %585 = %580.2;
    (%581, %582, %583, %584, meta[relay.Constant][38] /* ty=Tensor[(585), float64] */, meta[relay.Constant][39] /* ty=Tensor[(140), uint64] */, %var_4434, %585)
  };
  %586(%var_4460, %var_4461) /* ty=(Tensor[(15, 7, 3), uint8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(315), int16]) */
}

def @func_3156() -> (Tensor[(315), int16],) {
  %589 = fn () -> (Tensor[(315), int16],) {
    %587 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
    %588 = %587.0;
    (%588,)
  };
  %589() /* ty=(Tensor[(315), int16],) */
}

def @func_3416() -> Tensor[(315), int16] {
  %590 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %590.0
}

def @func_8041(%var_8022: int64, %var_8034: Tensor[(240, 1), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64], Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(1620), int64], Tensor[(240, 1), uint64]) {
  %591 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %592 = cast(%var_8022, dtype="int64") /* ty=int64 */;
  %593 = cast(meta[relay.Constant][40] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %594 = reshape(%592, newshape=[]) /* ty=int64 */;
  %595 = reshape(%593, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %596 = @func_2429(%594, %595) /* ty=(Tensor[(315), float64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %597 = cast(meta[relay.Constant][41] /* ty=Tensor[(2), uint64] */, dtype="uint64") /* ty=Tensor[(2), uint64] */;
  %598 = cast(meta[relay.Constant][42] /* ty=Tensor[(140), uint64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %599 = reshape(%597, newshape=[2]) /* ty=Tensor[(2), uint64] */;
  %600 = reshape(%598, newshape=[140]) /* ty=Tensor[(140), uint64] */;
  %601 = @func_7120(%599, %600) /* ty=(Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(7, 16, 4), float32]) */;
  %602 = %591.1;
  %603 = cast(%602, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
  %604 = cast(%var_8034, dtype="uint64") /* ty=Tensor[(240, 1), uint64] */;
  %605 = cast(meta[relay.Constant][40] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %606 = reshape(%603, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %607 = reshape(%604, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %608 = reshape(%605, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %609 = @func_3248(%606, %607, %608) /* ty=(Tensor[(315), bool], Tensor[(13, 8, 4), float64], Tensor[(104), float64], Tensor[(208, 2), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %610 = %596.1;
  %611 = %601.0;
  %612 = %609.8;
  (%602, %610, %var_8022, meta[relay.Constant][40] /* ty=Tensor[(1620), int64] */, %611, meta[relay.Constant][41] /* ty=Tensor[(2), uint64] */, meta[relay.Constant][42] /* ty=Tensor[(140), uint64] */, %612, %var_8034)
}

def @func_5568(%var_5566: Tensor[(320), float64]) -> (Tensor[(315), float32], Tensor[(5, 8, 8), float64], float64, Tensor[(320), float64]) {
  @func_5565(%var_5566) /* ty=(Tensor[(315), float32], Tensor[(5, 8, 8), float64], float64, Tensor[(320), float64]) */
}

def @func_6332(%var_6329: Tensor[(315), int16], %var_6330: Tensor[(448), float32], %var_6331: Tensor[(4, 104), float64]) -> (Tensor[(2, 7, 11), float64], Tensor[(42), float32], Tensor[(104), float64], Tensor[(104), float64], Tensor[(42), int16], Tensor[(315), bool], Tensor[(315), int16], Tensor[(30, 6), float32], Tensor[(448), float32], Tensor[(180), float32], Tensor[(2, 120), uint64], Tensor[(4, 104), float64]) {
  @func_6327(%var_6329, %var_6330, %var_6331) /* ty=(Tensor[(2, 7, 11), float64], Tensor[(42), float32], Tensor[(104), float64], Tensor[(104), float64], Tensor[(42), int16], Tensor[(315), bool], Tensor[(315), int16], Tensor[(30, 6), float32], Tensor[(448), float32], Tensor[(180), float32], Tensor[(2, 120), uint64], Tensor[(4, 104), float64]) */
}

def @func_4337() -> (Tensor[(15, 7, 3), float32],) {
  @func_4335() /* ty=(Tensor[(15, 7, 3), float32],) */
}

def @func_5312() -> (Tensor[(315), int16], Tensor[(15, 6, 2), float32], Tensor[(1, 180), float32]) {
  @func_5310() /* ty=(Tensor[(315), int16], Tensor[(15, 6, 2), float32], Tensor[(1, 180), float32]) */
}

def @func_2609(%var_2607: Tensor[(2, 12, 10), int8], %var_2608: Tensor[(2, 12, 10), int8]) -> Tensor[(2, 12, 10), int8] {
  %617 = fn (%var_2593: Tensor[(2, 12, 10), int8], %var_2594: Tensor[(2, 12, 10), int8]) -> Tensor[(2, 12, 10), int8] {
    %613 = cast(%var_2594, dtype="int8") /* ty=Tensor[(2, 12, 10), int8] */;
    %614 = shape_of(%var_2593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %615 = cast(%var_2593, dtype="int8") /* ty=Tensor[(2, 12, 10), int8] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_or(%615, %616) /* ty=Tensor[(2, 12, 10), int8] */
  };
  %617(%var_2607, %var_2608) /* ty=Tensor[(2, 12, 10), int8] */
}

def @func_2772() -> Tensor[(315), int16] {
  @func_2162() /* ty=Tensor[(315), int16] */
}

def @func_7443(%var_7441: Tensor[(315), float32]) -> (Tensor[(16, 14), float64], Tensor[(315), float32], Tensor[(2, 12, 10), int8], Tensor[(104), float64], Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float64]) {
  @func_7440(%var_7441) /* ty=(Tensor[(16, 14), float64], Tensor[(315), float32], Tensor[(2, 12, 10), int8], Tensor[(104), float64], Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float64]) */
}

def @func_4745(%var_4743: Tensor[(15, 7, 3), float64]) -> (Tensor[(15, 7, 3), uint64], Tensor[(315), int16]) {
  @func_4742(%var_4743) /* ty=(Tensor[(15, 7, 3), uint64], Tensor[(315), int16]) */
}

def @func_6233() -> (Tensor[(13, 3, 11), float64],) {
  %618 = @func_5318() /* ty=(Tensor[(13, 3, 11), float64],) */;
  %619 = %618.0;
  (%619,)
}

def @func_1032(%var_1030: Tensor[(7, 16, 4), float32]) -> (Tensor[(7, 16, 4), float32],) {
  @func_1029(%var_1030) /* ty=(Tensor[(7, 16, 4), float32],) */
}

def @func_3689() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %620 = @func_3155() /* ty=(Tensor[(315), int16],) */;
  %621 = @func_3416() /* ty=Tensor[(315), int16] */;
  %622 = %620.0;
  (%621, %622)
}

def @func_6406(%var_6370: Tensor[(42), float32], %var_6376: Tensor[(42, 13), float64]) -> (Tensor[(4, 11, 11), bool], Tensor[(42), float32], Tensor[(42, 13), uint8]) {
  %623 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(4, 11, 11), bool] */;
  %624 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(4, 11, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(4, 11, 11), bool] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %627 = cast(%var_6370, dtype="float32") /* ty=Tensor[(42), float32] */;
  %628 = reshape(%627, newshape=[42, 1]) /* ty=Tensor[(42, 1), float32] */;
  %629 = @func_4490(%628) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(42, 1), float32]) */;
  %630 = %629.2;
  %631 = cast(%630, dtype="float64") /* ty=Tensor[(42, 1), float64] */;
  %632 = exp(%631) /* ty=Tensor[(42, 1), float64] */;
  %633 = cast(%632, dtype="uint8") /* ty=Tensor[(42, 1), uint8] */;
  %634 = cast(%var_6376, dtype="uint8") /* ty=Tensor[(42, 13), uint8] */;
  %635 = logical_or(%625, %626) /* ty=Tensor[(4, 11, 11), bool] */;
  %636 = bitwise_xor(%633, %634) /* ty=Tensor[(42, 13), uint8] */;
  (%635, %var_6370, %636)
}

def @func_5776(%var_5772: Tensor[(104), float64], %var_5773: Tensor[(416), float64], %var_5774: Tensor[(90, 2), float32], %var_5775: Tensor[(240), uint64]) -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(104), float64], Tensor[(416), float64], Tensor[(90, 2), float32], Tensor[(240), uint64], Tensor[(315), int16]) {
  %651 = fn (%var_5762: Tensor[(104), float64], %var_5763: Tensor[(416), float64], %var_5764: Tensor[(90, 2), float32], %var_5765: Tensor[(240), uint64]) -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(104), float64], Tensor[(416), float64], Tensor[(90, 2), float32], Tensor[(240), uint64], Tensor[(315), int16]) {
    %637 = cast(%var_5762, dtype="float64") /* ty=Tensor[(104), float64] */;
    %638 = cast(%var_5763, dtype="float64") /* ty=Tensor[(416), float64] */;
    %639 = cast(%var_5763, dtype="float64") /* ty=Tensor[(416), float64] */;
    %640 = cast(%var_5764, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
    %641 = cast(%var_5765, dtype="uint64") /* ty=Tensor[(240), uint64] */;
    %642 = reshape(%637, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
    %643 = reshape(%638, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %644 = reshape(%639, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %645 = reshape(%640, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %646 = reshape(%641, newshape=[240]) /* ty=Tensor[(240), uint64] */;
    %647 = @func_1900(%642, %643, %644, %645, %646) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */;
    %648 = @func_3756() /* ty=Tensor[(315), int16] */;
    %649 = %647.1;
    %650 = @func_5227() /* ty=Tensor[(315), int16] */;
    (%648, %649, %var_5762, %var_5763, %var_5764, %var_5765, %650)
  };
  %651(%var_5772, %var_5773, %var_5774, %var_5775) /* ty=(Tensor[(315), int16], Tensor[(315), int16], Tensor[(104), float64], Tensor[(416), float64], Tensor[(90, 2), float32], Tensor[(240), uint64], Tensor[(315), int16]) */
}

def @func_1958(%var_1956: Tensor[(42, 1), float32], %var_1957: Tensor[(42, 5), float32]) -> (Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42, 5), int8]) {
  @func_1954(%var_1956, %var_1957) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42, 5), int8]) */
}

def @func_1907(%var_1902: Tensor[(13, 8, 1), float64], %var_1903: Tensor[(13, 8, 4), float64], %var_1904: Tensor[(13, 8, 4), float64], %var_1905: Tensor[(180), float32], %var_1906: Tensor[(240), uint64]) -> (Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) {
  @func_1900(%var_1902, %var_1903, %var_1904, %var_1905, %var_1906) /* ty=(Tensor[(13, 8, 4), float64], Tensor[(315), int16], Tensor[(13, 8, 4), float32], Tensor[(15, 6, 2), float32], Tensor[(180), bool], Tensor[(13, 8, 4), float64], Tensor[(10, 4, 6), bool], Tensor[(240), uint64]) */
}

def @func_5318() -> (Tensor[(13, 3, 11), float64],) {
  %652 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 3, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
  %653 = sin(%652) /* ty=Tensor[(13, 3, 11), float64] */;
  (%653,)
}

def @func_3077() -> Tensor[(315), int16] {
  %654 = fn () -> Tensor[(315), int16] {
    @func_2772() /* ty=Tensor[(315), int16] */
  };
  %654() /* ty=Tensor[(315), int16] */
}

def @func_3006(%var_2999: Tensor[(10, 5, 3), float64], %var_3000: Tensor[(10, 5, 3), float64]) -> (Tensor[(10, 5, 3), float64], Tensor[(15, 7, 3), float64]) {
  %655 = cast(%var_3000, dtype="float64") /* ty=Tensor[(10, 5, 3), float64] */;
  %656 = shape_of(%var_2999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%var_2999, dtype="float64") /* ty=Tensor[(10, 5, 3), float64] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %659 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
  %660 = multiply(%657, %658) /* ty=Tensor[(10, 5, 3), float64] */;
  %661 = %659.1;
  (%660, %661)
}

def @func_5753(%var_5751: Tensor[(240), uint64]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(240), uint64]) {
  @func_5750(%var_5751) /* ty=(Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(240), uint64]) */
}

def @func_5959(%var_5957: Tensor[(338, 2), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(13, 13, 4), float32], Tensor[(338, 2), bool], Tensor[(338, 2), bool]) {
  @func_5956(%var_5957) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(13, 13, 4), float32], Tensor[(338, 2), bool], Tensor[(338, 2), bool]) */
}

def @func_6884(%var_6882: int64) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(42), float32], Tensor[(14, 3), float32], Tensor[(240), int8], Tensor[(1, 104), float64]) {
  @func_6881(%var_6882) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(42), float32], Tensor[(14, 3), float32], Tensor[(240), int8], Tensor[(1, 104), float64]) */
}

def @func_8045(%var_8043: int64, %var_8044: Tensor[(240, 1), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64], Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(1620), int64], Tensor[(240, 1), uint64]) {
  @func_8041(%var_8043, %var_8044) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64], Tensor[(315), int16], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(1620), int64], Tensor[(240, 1), uint64]) */
}

def @func_3403() -> (Tensor[(315), int16],) {
  @func_3401() /* ty=(Tensor[(315), int16],) */
}

def @func_2560() -> (Tensor[(315), int8], Tensor[(15, 7, 3), float64]) {
  %662 = @func_2229() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %663 = %662.1;
  %664 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %665 = %664.1;
  %666 = cast(%665, dtype="int8") /* ty=Tensor[(15, 7, 3), int8] */;
  %667 = shape_of(%663, dtype="int32") /* ty=Tensor[(1), int32] */;
  %668 = cast(%663, dtype="int8") /* ty=Tensor[(315), int8] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?), int8] */;
  %670 = cast(%665, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %671 = minimum(%668, %669) /* ty=Tensor[(315), int8] */;
  %672 = sinh(%670) /* ty=Tensor[(15, 7, 3), float64] */;
  (%671, %672)
}

def @func_6410(%var_6408: Tensor[(42), float32], %var_6409: Tensor[(42, 13), float64]) -> (Tensor[(4, 11, 11), bool], Tensor[(42), float32], Tensor[(42, 13), uint8]) {
  @func_6406(%var_6408, %var_6409) /* ty=(Tensor[(4, 11, 11), bool], Tensor[(42), float32], Tensor[(42, 13), uint8]) */
}

def @func_6327(%var_6316: Tensor[(315), int16], %var_6319: Tensor[(448), float32], %var_6322: Tensor[(4, 104), float64]) -> (Tensor[(2, 7, 11), float64], Tensor[(42), float32], Tensor[(104), float64], Tensor[(104), float64], Tensor[(42), int16], Tensor[(315), bool], Tensor[(315), int16], Tensor[(30, 6), float32], Tensor[(448), float32], Tensor[(180), float32], Tensor[(2, 120), uint64], Tensor[(4, 104), float64]) {
  %673 = @func_1700() /* ty=(Tensor[(2, 7, 11), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16]) */;
  %674 = cast(3.68076f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %675 = cast(meta[relay.Constant][46] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %676 = cast(meta[relay.Constant][47] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %677 = reshape(%674, newshape=[]) /* ty=float32 */;
  %678 = reshape(%675, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %679 = reshape(%676, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %680 = @func_4146(%677, %678, %679) /* ty=(Tensor[(315), int16], Tensor[(11, 12, 1), bool], float32, Tensor[(33, 4), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(42), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %681 = cast(3.68076f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %682 = cast(meta[relay.Constant][46] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %683 = cast(meta[relay.Constant][47] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %684 = reshape(%681, newshape=[]) /* ty=float32 */;
  %685 = reshape(%682, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %686 = reshape(%683, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %687 = @func_4146(%684, %685, %686) /* ty=(Tensor[(315), int16], Tensor[(11, 12, 1), bool], float32, Tensor[(33, 4), float32], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(42), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
  %688 = cast(meta[relay.Constant][46] /* ty=Tensor[(42), float32] */, dtype="int16") /* ty=Tensor[(42), int16] */;
  %689 = cast(3.68076f /* ty=float32 */, dtype="int16") /* ty=int16 */;
  %690 = cast(%var_6316, dtype="int16") /* ty=Tensor[(315), int16] */;
  %691 = reshape(%690, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %692 = @func_4595(%691) /* ty=(Tensor[(315), bool],) */;
  %693 = cast(%var_6319, dtype="float32") /* ty=Tensor[(448), float32] */;
  %694 = %687.7;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(104), float64] */;
  %696 = cast(meta[relay.Constant][48] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %697 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 120), uint64] */, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %698 = cast(%var_6322, dtype="float64") /* ty=Tensor[(4, 104), float64] */;
  %699 = reshape(%693, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %700 = reshape(%695, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %701 = reshape(%696, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %702 = reshape(%697, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %703 = reshape(%698, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %704 = @func_2715(%699, %700, %701, %702, %703) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(315), int16], Tensor[(104), float64], Tensor[(30, 6), float32], Tensor[(240), uint64], Tensor[(315), int16], Tensor[(416), uint64], Tensor[(448), int16]) */;
  %705 = %673.0;
  %706 = %680.6;
  %707 = bitwise_xor(%688, %689) /* ty=Tensor[(42), int16] */;
  %708 = %692.0;
  %709 = %704.4;
  (%705, %706, meta[relay.Constant][47] /* ty=Tensor[(104), float64] */, %694, %707, %708, %var_6316, %709, %var_6319, meta[relay.Constant][48] /* ty=Tensor[(180), float32] */, meta[relay.Constant][49] /* ty=Tensor[(2, 120), uint64] */, %var_6322)
}

def @func_7160() -> (Tensor[(15, 7, 3), float32],) {
  %710 = @func_5404() /* ty=Tensor[(15, 7, 3), float32] */;
  (%710,)
}

def @func_7929() -> (Tensor[(315), int16],) {
  %711 = @func_3401() /* ty=(Tensor[(315), int16],) */;
  %712 = %711.0;
  (%712,)
}

def @func_1954(%var_1943: Tensor[(42, 1), float32], %var_1946: Tensor[(42, 5), float32]) -> (Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42, 5), int8]) {
  %713 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %714 = cast(%var_1943, dtype="float32") /* ty=Tensor[(42, 1), float32] */;
  %715 = reshape(%714, newshape=[2, 3, 7]) /* ty=Tensor[(2, 3, 7), float32] */;
  %716 = @func_134(%715) /* ty=(Tensor[(2, 3, 7), float64],) */;
  %717 = cast(%var_1943, dtype="int8") /* ty=Tensor[(42, 1), int8] */;
  %718 = cast(%var_1946, dtype="int8") /* ty=Tensor[(42, 5), int8] */;
  %719 = %713.0;
  %720 = %716.0;
  %721 = left_shift(%717, %718) /* ty=Tensor[(42, 5), int8] */;
  (%719, %720, %721)
}

def @func_2202() -> Tensor[(315), int16] {
  @func_2200() /* ty=Tensor[(315), int16] */
}

def @func_4915() -> (Tensor[(315), int16],) {
  %723 = fn () -> (Tensor[(315), int16],) {
    %722 = @func_2772() /* ty=Tensor[(315), int16] */;
    (%722,)
  };
  %723() /* ty=(Tensor[(315), int16],) */
}

def @func_2230() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %726 = fn () -> (Tensor[(315), int16], Tensor[(315), int16]) {
    %724 = @func_2162() /* ty=Tensor[(315), int16] */;
    %725 = @func_2162() /* ty=Tensor[(315), int16] */;
    (%724, %725)
  };
  %726() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */
}

def @func_4492(%var_4491: Tensor[(42, 1), float32]) -> (Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(42, 1), float32]) {
  %734 = fn (%var_4473: Tensor[(42, 1), float32]) -> (Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(42, 1), float32]) {
    %727 = @func_2200() /* ty=Tensor[(315), int16] */;
    %728 = cast(%727, dtype="float32") /* ty=Tensor[(315), float32] */;
    %729 = cast(%var_4473, dtype="float32") /* ty=Tensor[(42, 1), float32] */;
    %730 = reshape(%728, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float32] */;
    %731 = reshape(%729, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %732 = @func_4459(%730, %731) /* ty=(Tensor[(15, 7, 3), uint8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(42), float32], Tensor[(315), int16]) */;
    %733 = %732.3;
    (%727, %733, %var_4473)
  };
  %734(%var_4491) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(42, 1), float32]) */
}

def @func_3301(%var_3299: Tensor[(315), int16], %var_3300: Tensor[(315), int16]) -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32], Tensor[(315), uint16]) {
  @func_3297(%var_3299, %var_3300) /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32], Tensor[(315), uint16]) */
}

def @func_7162() -> (Tensor[(15, 7, 3), float32],) {
  @func_7160() /* ty=(Tensor[(15, 7, 3), float32],) */
}

def @func_5565(%var_5559: Tensor[(320), float64]) -> (Tensor[(315), float32], Tensor[(5, 8, 8), float64], float64, Tensor[(320), float64]) {
  %735 = cast(1.20781f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %736 = cast(%var_5559, dtype="float64") /* ty=Tensor[(320), float64] */;
  %737 = reshape(%735, newshape=[]) /* ty=float64 */;
  %738 = reshape(%736, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %739 = @func_4826() /* ty=Tensor[(315), float32] */;
  %740 = @func_5364(%737, %738) /* ty=Tensor[(5, 8, 8), float64] */;
  (%739, %740, 1.20781f64 /* ty=float64 */, %var_5559)
}

def @func_4257() -> Tensor[(315), int16] {
  @func_2772() /* ty=Tensor[(315), int16] */
}

def @func_5991() -> Tensor[(315), int16] {
  @func_5989() /* ty=Tensor[(315), int16] */
}

def @func_5040() -> Tensor[(15, 7, 3), float32] {
  %741 = @func_3137() /* ty=Tensor[(15, 7, 3), float32] */;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
  log10(%742) /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_3486() -> (Tensor[(315), int16],) {
  %744 = fn () -> (Tensor[(315), int16],) {
    %743 = @func_3416() /* ty=Tensor[(315), int16] */;
    (%743,)
  };
  %744() /* ty=(Tensor[(315), int16],) */
}

def @func_7931() -> (Tensor[(315), int16],) {
  @func_7929() /* ty=(Tensor[(315), int16],) */
}

def @func_5494(%var_5492: Tensor[(140), uint64]) -> (Tensor[(315), int16], Tensor[(104), float64], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(7, 6), float32]) {
  @func_5491(%var_5492) /* ty=(Tensor[(315), int16], Tensor[(104), float64], Tensor[(585), float64], Tensor[(140), uint64], Tensor[(7, 6), float32]) */
}

def @func_7968() -> (Tensor[(315), int16], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) {
  %751 = fn () -> (Tensor[(315), int16], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) {
    %745 = @func_7929() /* ty=(Tensor[(315), int16],) */;
    %746 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %747 = reshape(%746, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), float32] */;
    %748 = @func_218(%747) /* ty=(Tensor[(15, 6, 2), float32],) */;
    %749 = %745.0;
    %750 = %748.0;
    (%749, %750, meta[relay.Constant][50] /* ty=Tensor[(180), float32] */)
  };
  %751() /* ty=(Tensor[(315), int16], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) */
}

def @func_3668() -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32]) {
  %755 = fn () -> (Tensor[(315), int16], Tensor[(15, 7, 3), float32]) {
    %752 = @func_3401() /* ty=(Tensor[(315), int16],) */;
    %753 = %752.0;
    %754 = @func_3137() /* ty=Tensor[(15, 7, 3), float32] */;
    (%753, %754)
  };
  %755() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */
}

def @func_7212(%var_7210: Tensor[(240), int8], %var_7211: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(42), float32], Tensor[(42), float32], Tensor[(240), int8], Tensor[(104), float64], Tensor[(15, 7, 3), float32]) {
  %767 = fn (%var_7182: Tensor[(240), int8], %var_7183: Tensor[(104), float64]) -> (Tensor[(315), int16], Tensor[(42), float32], Tensor[(42), float32], Tensor[(240), int8], Tensor[(104), float64], Tensor[(15, 7, 3), float32]) {
    %756 = cast(meta[relay.Constant][51] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %757 = cast(%var_7182, dtype="int8") /* ty=Tensor[(240), int8] */;
    %758 = cast(%var_7183, dtype="float64") /* ty=Tensor[(104), float64] */;
    %759 = reshape(%756, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %760 = reshape(%757, newshape=[240]) /* ty=Tensor[(240), int8] */;
    %761 = reshape(%758, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %762 = @func_2916(%759, %760, %761) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
    %763 = @func_1758() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
    %764 = @func_4257() /* ty=Tensor[(315), int16] */;
    %765 = %762.2;
    %766 = %763.1;
    (%764, %765, meta[relay.Constant][51] /* ty=Tensor[(42), float32] */, %var_7182, %var_7183, %766)
  };
  %767(%var_7210, %var_7211) /* ty=(Tensor[(315), int16], Tensor[(42), float32], Tensor[(42), float32], Tensor[(240), int8], Tensor[(104), float64], Tensor[(15, 7, 3), float32]) */
}

def @func_8437(%var_8431: Tensor[(220), uint16]) -> (Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float64], Tensor[(2, 11, 10), uint16], Tensor[(220), uint16]) {
  %768 = @func_7020() /* ty=Tensor[(15, 7, 3), float32] */;
  %769 = cast(%768, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %770 = log2(%769) /* ty=Tensor[(15, 7, 3), float64] */;
  %771 = cast(%770, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %772 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%768, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %775 = cast(%770, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %776 = cast(%var_8431, dtype="uint16") /* ty=Tensor[(220), uint16] */;
  %777 = cast(%var_8431, dtype="uint16") /* ty=Tensor[(220), uint16] */;
  %778 = reshape(%776, newshape=[2, 11, 10]) /* ty=Tensor[(2, 11, 10), uint16] */;
  %779 = reshape(%777, newshape=[2, 11, 10]) /* ty=Tensor[(2, 11, 10), uint16] */;
  %780 = @func_7798(%778, %779) /* ty=(Tensor[(2, 11, 10), uint16],) */;
  %781 = multiply(%773, %774) /* ty=Tensor[(15, 7, 3), float64] */;
  %782 = tan(%775) /* ty=Tensor[(15, 7, 3), float64] */;
  %783 = %780.0;
  (%781, %782, %783, %var_8431)
}

def @func_7798(%var_7792: Tensor[(2, 11, 10), uint16], %var_7793: Tensor[(2, 11, 10), uint16]) -> (Tensor[(2, 11, 10), uint16],) {
  %784 = cast(%var_7793, dtype="uint16") /* ty=Tensor[(2, 11, 10), uint16] */;
  %785 = shape_of(%var_7792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%var_7792, dtype="uint16") /* ty=Tensor[(2, 11, 10), uint16] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %788 = add(%786, %787) /* ty=Tensor[(2, 11, 10), uint16] */;
  (%788,)
}

def @func_3758() -> Tensor[(315), int16] {
  @func_3756() /* ty=Tensor[(315), int16] */
}

def @func_3691() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  @func_3689() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */
}

def @func_3756() -> Tensor[(315), int16] {
  %789 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %789.0
}

def @func_6483(%var_6482: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(104), bool], Tensor[(42), float32]) {
  %806 = fn (%var_6468: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(104), bool], Tensor[(42), float32]) {
    %790 = cast(meta[relay.Constant][52] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %791 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
    %792 = cast(meta[relay.Constant][54] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %793 = reshape(%790, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %794 = reshape(%791, newshape=[240]) /* ty=Tensor[(240), int8] */;
    %795 = reshape(%792, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %796 = @func_2916(%793, %794, %795) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
    %797 = cast(%var_6468, dtype="bool") /* ty=Tensor[(104), bool] */;
    %798 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(104), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %799 = cast(meta[relay.Constant][54] /* ty=Tensor[(104), float64] */, dtype="bool") /* ty=Tensor[(104), bool] */;
    %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?), bool] */;
    %801 = cast(meta[relay.Constant][52] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %802 = @func_5040() /* ty=Tensor[(15, 7, 3), float32] */;
    %803 = %796.3;
    %804 = less(%799, %800) /* ty=Tensor[(104), bool] */;
    %805 = sinh(%801) /* ty=Tensor[(42), float32] */;
    (%802, %803, meta[relay.Constant][53] /* ty=Tensor[(240), int8] */, %804, %805)
  };
  %806(%var_6482) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(104), bool], Tensor[(42), float32]) */
}

def @func_221(%var_219: Tensor[(15, 6, 2), float32]) -> (Tensor[(15, 6, 2), float32],) {
  @func_218(%var_219) /* ty=(Tensor[(15, 6, 2), float32],) */
}

def @func_325(%var_320: float32, %var_321: Tensor[(11, 12, 1), float32]) -> Tensor[(11, 12, 1), bool] {
  %807 = cast(%var_320, dtype="bool") /* ty=bool */;
  %808 = cast(%var_321, dtype="bool") /* ty=Tensor[(11, 12, 1), bool] */;
  not_equal(%807, %808) /* ty=Tensor[(11, 12, 1), bool] */
}

def @func_4113(%var_4110: Tensor[(15, 7, 3), float32], %var_4111: Tensor[(1, 132), float32], %var_4112: Tensor[(70, 2), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(11, 12, 1), bool], float32, Tensor[(1, 132), float32], Tensor[(7, 6), float32], Tensor[(195, 3), float64], Tensor[(70, 2), uint64], Tensor[(42), float32]) {
  %836 = fn (%var_4052: Tensor[(15, 7, 3), float32], %var_4074: Tensor[(1, 132), float32], %var_4085: Tensor[(70, 2), uint64]) -> (Tensor[(15, 7, 3), float32], Tensor[(11, 12, 1), bool], float32, Tensor[(1, 132), float32], Tensor[(7, 6), float32], Tensor[(195, 3), float64], Tensor[(70, 2), uint64], Tensor[(42), float32]) {
    %809 = @func_2480() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %810 = %809.0;
    %811 = cast(%var_4052, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
    %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
    %813 = cast(%810, dtype="int16") /* ty=Tensor[(15, 7, 3), int16] */;
    %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %815 = bitwise_and(%813, %814) /* ty=Tensor[(15, 7, 3), int16] */;
    %816 = cast(%815, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
    %817 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
    %818 = cast(%810, dtype="float32") /* ty=Tensor[(15, 7, 3), float32] */;
    %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %820 = cast(0.178919f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %821 = cast(%var_4074, dtype="float32") /* ty=Tensor[(1, 132), float32] */;
    %822 = reshape(%820, newshape=[]) /* ty=float32 */;
    %823 = reshape(%821, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
    %824 = cast(meta[relay.Constant][55] /* ty=Tensor[(195, 3), float64] */, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
    %825 = cast(meta[relay.Constant][55] /* ty=Tensor[(195, 3), float64] */, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
    %826 = cast(%var_4085, dtype="uint64") /* ty=Tensor[(70, 2), uint64] */;
    %827 = cast(meta[relay.Constant][56] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %828 = reshape(%824, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
    %829 = reshape(%825, newshape=[3, 13, 15]) /* ty=Tensor[(3, 13, 15), float64] */;
    %830 = reshape(%826, newshape=[140]) /* ty=Tensor[(140), uint64] */;
    %831 = reshape(%827, newshape=[7, 6]) /* ty=Tensor[(7, 6), float32] */;
    %832 = @func_3968(%828, %829, %830, %831) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */;
    %833 = floor_divide(%818, %819) /* ty=Tensor[(15, 7, 3), float32] */;
    %834 = @func_325(%822, %823) /* ty=Tensor[(11, 12, 1), bool] */;
    %835 = %832.7;
    (%833, %834, 0.178919f /* ty=float32 */, %var_4074, %835, meta[relay.Constant][55] /* ty=Tensor[(195, 3), float64] */, %var_4085, meta[relay.Constant][56] /* ty=Tensor[(42), float32] */)
  };
  %836(%var_4110, %var_4111, %var_4112) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(11, 12, 1), bool], float32, Tensor[(1, 132), float32], Tensor[(7, 6), float32], Tensor[(195, 3), float64], Tensor[(70, 2), uint64], Tensor[(42), float32]) */
}

def @func_5898(%var_5897: Tensor[(13, 13, 4), uint64]) -> (Tensor[(13, 13, 4), bool], Tensor[(13, 13, 4), float32]) {
  %847 = fn (%var_5871: Tensor[(13, 13, 4), uint64]) -> (Tensor[(13, 13, 4), bool], Tensor[(13, 13, 4), float32]) {
    %837 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 13, 4), uint64] */, dtype="bool") /* ty=Tensor[(13, 13, 4), bool] */;
    %838 = shape_of(%var_5871, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%var_5871, dtype="bool") /* ty=Tensor[(13, 13, 4), bool] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %841 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 13, 4), uint64] */, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
    %842 = shape_of(%var_5871, dtype="int32") /* ty=Tensor[(3), int32] */;
    %843 = cast(%var_5871, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
    %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %845 = less(%839, %840) /* ty=Tensor[(13, 13, 4), bool] */;
    %846 = multiply(%843, %844) /* ty=Tensor[(13, 13, 4), float32] */;
    (%845, %846)
  };
  %847(%var_5897) /* ty=(Tensor[(13, 13, 4), bool], Tensor[(13, 13, 4), float32]) */
}

def @func_350(%var_348: int64, %var_349: Tensor[(9, 12, 15), int64]) -> (Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) {
  %859 = fn (%var_333: int64, %var_334: Tensor[(9, 12, 15), int64]) -> (Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) {
    %848 = cast(%var_333, dtype="int64") /* ty=int64 */;
    %849 = cast(%var_334, dtype="int64") /* ty=Tensor[(9, 12, 15), int64] */;
    %850 = cast(meta[relay.Constant][59] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %851 = reshape(%850, newshape=[2, 3, 7]) /* ty=Tensor[(2, 3, 7), float32] */;
    %852 = @func_134(%851) /* ty=(Tensor[(2, 3, 7), float64],) */;
    %853 = cast(meta[relay.Constant][60] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %854 = reshape(%853, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), float32] */;
    %855 = @func_218(%854) /* ty=(Tensor[(15, 6, 2), float32],) */;
    %856 = logical_xor(%848, %849) /* ty=Tensor[(9, 12, 15), int64] */;
    %857 = %852.0;
    %858 = %855.0;
    (%856, %857, meta[relay.Constant][59] /* ty=Tensor[(42), float32] */, %858, meta[relay.Constant][60] /* ty=Tensor[(180), float32] */)
  };
  %859(%var_348, %var_349) /* ty=(Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) */
}

def @func_5310() -> (Tensor[(315), int16], Tensor[(15, 6, 2), float32], Tensor[(1, 180), float32]) {
  %860 = @func_3485() /* ty=(Tensor[(315), int16],) */;
  %861 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 180), float32] */, dtype="float32") /* ty=Tensor[(1, 180), float32] */;
  %862 = reshape(%861, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), float32] */;
  %863 = @func_218(%862) /* ty=(Tensor[(15, 6, 2), float32],) */;
  %864 = %860.0;
  %865 = %863.0;
  (%864, %865, meta[relay.Constant][61] /* ty=Tensor[(1, 180), float32] */)
}

def @func_6881(%var_6865: int64) -> (Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(42), float32], Tensor[(14, 3), float32], Tensor[(240), int8], Tensor[(1, 104), float64]) {
  %866 = cast(%var_6865, dtype="int64") /* ty=int64 */;
  %867 = reshape(%866, newshape=[]) /* ty=int64 */;
  %868 = @func_4388(%867) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %869 = cast(meta[relay.Constant][62] /* ty=Tensor[(14, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 3), float32] */;
  %870 = cast(meta[relay.Constant][63] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %871 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %872 = reshape(%869, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %873 = reshape(%870, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %874 = reshape(%871, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %875 = @func_2916(%872, %873, %874) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(2, 12, 10), int8], Tensor[(240), int8], Tensor[(15, 7, 3), float64], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1, 416), float64], Tensor[(180), float32]) */;
  %876 = @func_5404() /* ty=Tensor[(15, 7, 3), float32] */;
  %877 = %868.1;
  %878 = %875.2;
  (%876, %877, %var_6865, %878, meta[relay.Constant][62] /* ty=Tensor[(14, 3), float32] */, meta[relay.Constant][63] /* ty=Tensor[(240), int8] */, meta[relay.Constant][64] /* ty=Tensor[(1, 104), float64] */)
}

def @func_7323() -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float32], Tensor[(676), uint64]) {
  @func_7321() /* ty=(Tensor[(315), int16], Tensor[(315), int16], Tensor[(15, 7, 3), float32], Tensor[(676), uint64]) */
}

def @func_7690() -> Tensor[(315), int16] {
  @func_7688() /* ty=Tensor[(315), int16] */
}

def @func_6523() -> (Tensor[(16, 14), float64],) {
  %879 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 14), float64] */;
  %880 = log(%879) /* ty=Tensor[(16, 14), float64] */;
  (%880,)
}

def @func_4800(%var_4799: Tensor[(315), int16]) -> (Tensor[(315), int8], Tensor[(315), int8]) {
  %889 = fn (%var_4783: Tensor[(315), int16]) -> (Tensor[(315), int8], Tensor[(315), int8]) {
    %881 = @func_3076() /* ty=Tensor[(315), int16] */;
    %882 = cast(%var_4783, dtype="int8") /* ty=Tensor[(315), int8] */;
    %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(1), int32] */;
    %884 = cast(%881, dtype="int8") /* ty=Tensor[(315), int8] */;
    %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?), int8] */;
    %886 = @func_3881() /* ty=(Tensor[(315), int8], Tensor[(15, 6, 2), float32], Tensor[(315), int16], Tensor[(6, 270), bool]) */;
    %887 = bitwise_and(%884, %885) /* ty=Tensor[(315), int8] */;
    %888 = %886.0;
    (%887, %888)
  };
  %889(%var_4799) /* ty=(Tensor[(315), int8], Tensor[(315), int8]) */
}

def @func_7802(%var_7800: Tensor[(2, 11, 10), uint16], %var_7801: Tensor[(2, 11, 10), uint16]) -> (Tensor[(2, 11, 10), uint16],) {
  @func_7798(%var_7800, %var_7801) /* ty=(Tensor[(2, 11, 10), uint16],) */
}

def @func_4542() -> Tensor[(315), int16] {
  @func_4540() /* ty=Tensor[(315), int16] */
}

def @func_1371(%var_1369: Tensor[(10, 4, 6), uint64], %var_1370: Tensor[(10, 4, 6), uint64]) -> (Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) {
  %899 = fn (%var_1354: Tensor[(10, 4, 6), uint64], %var_1355: Tensor[(10, 4, 6), uint64]) -> (Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) {
    %890 = cast(%var_1355, dtype="bool") /* ty=Tensor[(10, 4, 6), bool] */;
    %891 = shape_of(%var_1354, dtype="int32") /* ty=Tensor[(3), int32] */;
    %892 = cast(%var_1354, dtype="bool") /* ty=Tensor[(10, 4, 6), bool] */;
    %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %894 = cast(%var_1355, dtype="float32") /* ty=Tensor[(10, 4, 6), float32] */;
    %895 = exp(%894) /* ty=Tensor[(10, 4, 6), float32] */;
    %896 = cast(%895, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
    %897 = less_equal(%892, %893) /* ty=Tensor[(10, 4, 6), bool] */;
    %898 = erf(%896) /* ty=Tensor[(10, 4, 6), float64] */;
    (%897, %898)
  };
  %899(%var_1369, %var_1370) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */
}

def @func_2774() -> Tensor[(315), int16] {
  @func_2772() /* ty=Tensor[(315), int16] */
}

def @func_3053(%var_3050: Tensor[(42), float32], %var_3051: Tensor[(1, 104), float64], %var_3052: Tensor[(150), float64]) -> (Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) {
  @func_3048(%var_3050, %var_3051, %var_3052) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) */
}

def @func_4680() -> (Tensor[(315), int16],) {
  %901 = fn () -> (Tensor[(315), int16],) {
    %900 = @func_2162() /* ty=Tensor[(315), int16] */;
    (%900,)
  };
  %901() /* ty=(Tensor[(315), int16],) */
}

def @func_6165(%var_6161: uint8, %var_6162: Tensor[(1, 8, 16), uint8], %var_6163: Tensor[(13, 8, 16), uint8], %var_6164: Tensor[(308), float64]) -> (Tensor[(13, 3, 11), float64], Tensor[(13, 8, 16), bool], Tensor[(132), float32], Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(14, 8, 16), int16], Tensor[(7, 11, 4), int32], Tensor[(308), float64], Tensor[(315), int16], Tensor[(11, 12, 3), bool]) {
  %934 = fn (%var_6068: uint8, %var_6069: Tensor[(1, 8, 16), uint8], %var_6098: Tensor[(13, 8, 16), uint8], %var_6148: Tensor[(308), float64]) -> (Tensor[(13, 3, 11), float64], Tensor[(13, 8, 16), bool], Tensor[(132), float32], Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(14, 8, 16), int16], Tensor[(7, 11, 4), int32], Tensor[(308), float64], Tensor[(315), int16], Tensor[(11, 12, 3), bool]) {
    %902 = @func_5318() /* ty=(Tensor[(13, 3, 11), float64],) */;
    %903 = cast(%var_6068, dtype="uint8") /* ty=uint8 */;
    %904 = cast(%var_6069, dtype="uint8") /* ty=Tensor[(1, 8, 16), uint8] */;
    %905 = maximum(%903, %904) /* ty=Tensor[(1, 8, 16), uint8] */;
    %906 = cast(%905, dtype="bool") /* ty=Tensor[(1, 8, 16), bool] */;
    %907 = cast(%var_6098, dtype="bool") /* ty=Tensor[(13, 8, 16), bool] */;
    %908 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
    %909 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
    %910 = @func_5345() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %911 = cast(%905, dtype="int16") /* ty=Tensor[(1, 8, 16), int16] */;
    %912 = cast(meta[relay.Constant][67] /* ty=Tensor[(14, 8, 16), uint8] */, dtype="int16") /* ty=Tensor[(14, 8, 16), int16] */;
    %913 = cast(%var_6148, dtype="float64") /* ty=Tensor[(308), float64] */;
    %914 = reshape(%913, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
    %915 = @func_2156(%914) /* ty=(Tensor[(7, 11, 4), int32],) */;
    %916 = @func_4294() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
    %917 = cast(%var_6068, dtype="float32") /* ty=float32 */;
    %918 = cast(meta[relay.Constant][66] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %919 = reshape(%917, newshape=[]) /* ty=float32 */;
    %920 = reshape(%918, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
    %921 = @func_325(%919, %920) /* ty=Tensor[(11, 12, 1), bool] */;
    %922 = cast(%921, dtype="bool") /* ty=Tensor[(11, 12, 1), bool] */;
    %923 = cast(meta[relay.Constant][68] /* ty=Tensor[(11, 12, 3), bool] */, dtype="bool") /* ty=Tensor[(11, 12, 3), bool] */;
    %924 = %902.0;
    %925 = greater_equal(%906, %907) /* ty=Tensor[(13, 8, 16), bool] */;
    %926 = %908.1;
    %927 = %909.1;
    %928 = %910.0;
    %929 = @func_2772() /* ty=Tensor[(315), int16] */;
    %930 = maximum(%911, %912) /* ty=Tensor[(14, 8, 16), int16] */;
    %931 = %915.0;
    %932 = %916.1;
    %933 = greater(%922, %923) /* ty=Tensor[(11, 12, 3), bool] */;
    (%924, %925, meta[relay.Constant][66] /* ty=Tensor[(132), float32] */, %926, %927, %928, %929, %930, %931, %var_6148, %932, %933)
  };
  %934(%var_6161, %var_6162, %var_6163, %var_6164) /* ty=(Tensor[(13, 3, 11), float64], Tensor[(13, 8, 16), bool], Tensor[(132), float32], Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float64], Tensor[(15, 7, 3), float32], Tensor[(315), int16], Tensor[(14, 8, 16), int16], Tensor[(7, 11, 4), int32], Tensor[(308), float64], Tensor[(315), int16], Tensor[(11, 12, 3), bool]) */
}

def @func_1146(%var_1144: Tensor[(15, 7, 3), int16]) -> Tensor[(15, 7, 3), float32] {
  @func_1143(%var_1144) /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_8160(%var_8158: Tensor[(15, 7, 3), float32]) -> (Tensor[(15, 7, 3), bool], Tensor[(15, 7, 3), float32]) {
  @func_8157(%var_8158) /* ty=(Tensor[(15, 7, 3), bool], Tensor[(15, 7, 3), float32]) */
}

def @func_8292() -> (Tensor[(315), int16], Tensor[(315), bool], Tensor[(315), float32]) {
  %935 = @func_3401() /* ty=(Tensor[(315), int16],) */;
  %936 = @func_2772() /* ty=Tensor[(315), int16] */;
  %937 = @func_3689() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */;
  %938 = %937.0;
  %939 = cast(%938, dtype="bool") /* ty=Tensor[(315), bool] */;
  %940 = shape_of(%936, dtype="int32") /* ty=Tensor[(1), int32] */;
  %941 = cast(%936, dtype="bool") /* ty=Tensor[(315), bool] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?), bool] */;
  %943 = cast(%936, dtype="float32") /* ty=Tensor[(315), float32] */;
  %944 = %935.0;
  %945 = greater_equal(%941, %942) /* ty=Tensor[(315), bool] */;
  %946 = rsqrt(%943) /* ty=Tensor[(315), float32] */;
  (%944, %945, %946)
}

def @func_218(%var_215: Tensor[(15, 6, 2), float32]) -> (Tensor[(15, 6, 2), float32],) {
  %947 = cast(%var_215, dtype="float32") /* ty=Tensor[(15, 6, 2), float32] */;
  %948 = sin(%947) /* ty=Tensor[(15, 6, 2), float32] */;
  (%948,)
}

def @func_2158(%var_2157: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), int32],) {
  %956 = fn (%var_2143: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), int32],) {
    %949 = cast(%var_2143, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
    %950 = tan(%949) /* ty=Tensor[(7, 11, 4), float64] */;
    %951 = cast(%var_2143, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
    %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
    %953 = cast(%950, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
    %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %955 = logical_xor(%953, %954) /* ty=Tensor[(7, 11, 4), int32] */;
    (%955,)
  };
  %956(%var_2157) /* ty=(Tensor[(7, 11, 4), int32],) */
}

def @main(%var_8449: Tensor[(1, 240), uint64], %var_8450: Tensor[(1620), int64], %var_8458: Tensor[(11, 240), uint64]) -> (Tensor[(315), int16], Tensor[(315), int16], Tensor[(104), float64], Tensor[(1620), int64], Tensor[(11, 240), bool], Tensor[(11, 240), uint16]) {
  %957 = @func_3486() /* ty=(Tensor[(315), int16],) */;
  %958 = @func_3416() /* ty=Tensor[(315), int16] */;
  %959 = cast(%958, dtype="int16") /* ty=Tensor[(315), int16] */;
  %960 = cast(%var_8449, dtype="uint64") /* ty=Tensor[(1, 240), uint64] */;
  %961 = cast(%var_8450, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %962 = reshape(%959, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %963 = reshape(%960, newshape=[240]) /* ty=Tensor[(240), uint64] */;
  %964 = reshape(%961, newshape=[1620]) /* ty=Tensor[(1620), int64] */;
  %965 = @func_3253(%962, %963, %964) /* ty=(Tensor[(315), bool], Tensor[(13, 8, 4), float64], Tensor[(104), float64], Tensor[(208, 2), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(9, 12, 15), int64], int64, Tensor[(1620), int64]) */;
  %966 = cast(%var_8449, dtype="bool") /* ty=Tensor[(1, 240), bool] */;
  %967 = cast(%var_8458, dtype="bool") /* ty=Tensor[(11, 240), bool] */;
  %968 = cast(%var_8449, dtype="uint16") /* ty=Tensor[(1, 240), uint16] */;
  %969 = cast(%var_8458, dtype="uint16") /* ty=Tensor[(11, 240), uint16] */;
  %970 = @func_3416() /* ty=Tensor[(315), int16] */;
  %971 = %957.0;
  %972 = %965.2;
  %973 = greater_equal(%966, %967) /* ty=Tensor[(11, 240), bool] */;
  %974 = bitwise_xor(%968, %969) /* ty=Tensor[(11, 240), uint16] */;
  (%970, %971, %972, %var_8450, %973, %974)
}

def @func_3881() -> (Tensor[(315), int8], Tensor[(15, 6, 2), float32], Tensor[(315), int16], Tensor[(6, 270), bool]) {
  %975 = @func_2560() /* ty=(Tensor[(315), int8], Tensor[(15, 7, 3), float64]) */;
  %976 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %977 = cast(meta[relay.Constant][69] /* ty=Tensor[(6, 270), int64] */, dtype="int64") /* ty=Tensor[(6, 270), int64] */;
  %978 = reshape(%976, newshape=[]) /* ty=int64 */;
  %979 = reshape(%977, newshape=[9, 12, 15]) /* ty=Tensor[(9, 12, 15), int64] */;
  %980 = @func_347(%978, %979) /* ty=(Tensor[(9, 12, 15), int64], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(15, 6, 2), float32], Tensor[(180), float32]) */;
  %981 = cast(4 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %982 = cast(meta[relay.Constant][69] /* ty=Tensor[(6, 270), int64] */, dtype="bool") /* ty=Tensor[(6, 270), bool] */;
  %983 = %975.0;
  %984 = %980.3;
  %985 = @func_3416() /* ty=Tensor[(315), int16] */;
  %986 = logical_or(%981, %982) /* ty=Tensor[(6, 270), bool] */;
  (%983, %984, %985, %986)
}

def @func_5364(%var_5358: float64, %var_5359: Tensor[(5, 8, 8), float64]) -> Tensor[(5, 8, 8), float64] {
  %987 = cast(%var_5358, dtype="float64") /* ty=float64 */;
  %988 = cast(%var_5359, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  power(%987, %988) /* ty=Tensor[(5, 8, 8), float64] */
}

def @func_4228(%var_4226: Tensor[(42), float32], %var_4227: Tensor[(210), float32]) -> (Tensor[(315), bool], Tensor[(315), int16], Tensor[(42), float32], Tensor[(210), float32]) {
  %1002 = fn (%var_4220: Tensor[(42), float32], %var_4221: Tensor[(210), float32]) -> (Tensor[(315), bool], Tensor[(315), int16], Tensor[(42), float32], Tensor[(210), float32]) {
    %989 = @func_3155() /* ty=(Tensor[(315), int16],) */;
    %990 = %989.0;
    %991 = cast(meta[relay.Constant][70] /* ty=Tensor[(315), int16] */, dtype="bool") /* ty=Tensor[(315), bool] */;
    %992 = shape_of(%990, dtype="int32") /* ty=Tensor[(1), int32] */;
    %993 = cast(%990, dtype="bool") /* ty=Tensor[(315), bool] */;
    %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?), bool] */;
    %995 = cast(%var_4220, dtype="float32") /* ty=Tensor[(42), float32] */;
    %996 = cast(%var_4221, dtype="float32") /* ty=Tensor[(210), float32] */;
    %997 = reshape(%995, newshape=[42, 1]) /* ty=Tensor[(42, 1), float32] */;
    %998 = reshape(%996, newshape=[42, 5]) /* ty=Tensor[(42, 5), float32] */;
    %999 = @func_1954(%997, %998) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42, 5), int8]) */;
    %1000 = equal(%993, %994) /* ty=Tensor[(315), bool] */;
    %1001 = %999.0;
    (%1000, %1001, %var_4220, %var_4221)
  };
  %1002(%var_4226, %var_4227) /* ty=(Tensor[(315), bool], Tensor[(315), int16], Tensor[(42), float32], Tensor[(210), float32]) */
}

def @func_5870() -> Tensor[(15, 7, 3), float32] {
  @func_5868() /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_2241(%var_2234: Tensor[(3, 10, 4), bool]) -> Tensor[(3, 10, 4), bool] {
  %1003 = cast(meta[relay.Constant][71] /* ty=Tensor[(3, 10, 4), bool] */, dtype="bool") /* ty=Tensor[(3, 10, 4), bool] */;
  %1004 = shape_of(%var_2234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%var_2234, dtype="bool") /* ty=Tensor[(3, 10, 4), bool] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1005, %1006) /* ty=Tensor[(3, 10, 4), bool] */
}

def @func_6841() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  @func_6839() /* ty=(Tensor[(315), int16], Tensor[(315), int16]) */
}

def @func_4335() -> (Tensor[(15, 7, 3), float32],) {
  %1007 = @func_2498() /* ty=Tensor[(15, 7, 3), float32] */;
  (%1007,)
}

def @func_5750(%var_5739: Tensor[(240), uint64]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(240), uint64]) {
  %1008 = cast(%var_5739, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %1009 = cast(%var_5739, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %1010 = reshape(%1008, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %1011 = reshape(%1009, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), uint64] */;
  %1012 = @func_1368(%1010, %1011) /* ty=(Tensor[(10, 4, 6), bool], Tensor[(10, 4, 6), float64]) */;
  %1013 = @func_5227() /* ty=Tensor[(315), int16] */;
  %1014 = %1012.1;
  (%1013, %1014, %var_5739)
}

def @func_2200() -> Tensor[(315), int16] {
  @func_2162() /* ty=Tensor[(315), int16] */
}

def @func_5825(%var_5823: Tensor[(448), float32], %var_5824: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(448), float32], Tensor[(104), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(2, 208), float64]) {
  %1029 = fn (%var_5816: Tensor[(448), float32], %var_5817: Tensor[(104), float64]) -> (Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(448), float32], Tensor[(104), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(2, 208), float64]) {
    %1015 = @func_5345() /* ty=(Tensor[(15, 7, 3), float32],) */;
    %1016 = cast(%var_5816, dtype="float32") /* ty=Tensor[(448), float32] */;
    %1017 = cast(%var_5817, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1018 = cast(meta[relay.Constant][72] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %1019 = cast(meta[relay.Constant][73] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
    %1020 = cast(meta[relay.Constant][74] /* ty=Tensor[(2, 208), float64] */, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
    %1021 = reshape(%1016, newshape=[448]) /* ty=Tensor[(448), float32] */;
    %1022 = reshape(%1017, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %1023 = reshape(%1018, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
    %1024 = reshape(%1019, newshape=[240]) /* ty=Tensor[(240), uint64] */;
    %1025 = reshape(%1020, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %1026 = @func_2715(%1021, %1022, %1023, %1024, %1025) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(315), int16], Tensor[(104), float64], Tensor[(30, 6), float32], Tensor[(240), uint64], Tensor[(315), int16], Tensor[(416), uint64], Tensor[(448), int16]) */;
    %1027 = %1015.0;
    %1028 = %1026.1;
    (%1027, %1028, %var_5816, %var_5817, meta[relay.Constant][72] /* ty=Tensor[(180), float32] */, meta[relay.Constant][73] /* ty=Tensor[(240), uint64] */, meta[relay.Constant][74] /* ty=Tensor[(2, 208), float64] */)
  };
  %1029(%var_5823, %var_5824) /* ty=(Tensor[(15, 7, 3), float32], Tensor[(432), float32], Tensor[(448), float32], Tensor[(104), float64], Tensor[(180), float32], Tensor[(240), uint64], Tensor[(2, 208), float64]) */
}

def @func_5150(%var_5149: Tensor[(15, 7, 3), float32]) -> Tensor[(15, 7, 3), bool] {
  %1035 = fn (%var_5135: Tensor[(15, 7, 3), float32]) -> Tensor[(15, 7, 3), bool] {
    %1030 = @func_5040() /* ty=Tensor[(15, 7, 3), float32] */;
    %1031 = cast(%var_5135, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
    %1032 = shape_of(%1030, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1033 = cast(%1030, dtype="bool") /* ty=Tensor[(15, 7, 3), bool] */;
    %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%1033, %1034) /* ty=Tensor[(15, 7, 3), bool] */
  };
  %1035(%var_5149) /* ty=Tensor[(15, 7, 3), bool] */
}

def @func_7021() -> Tensor[(15, 7, 3), float32] {
  %1036 = fn () -> Tensor[(15, 7, 3), float32] {
    @func_2498() /* ty=Tensor[(15, 7, 3), float32] */
  };
  %1036() /* ty=Tensor[(15, 7, 3), float32] */
}

def @func_4633() -> (Tensor[(315), int16], Tensor[(315), int16]) {
  %1037 = @func_3667() /* ty=(Tensor[(315), int16], Tensor[(15, 7, 3), float32]) */;
  %1038 = @func_2162() /* ty=Tensor[(315), int16] */;
  %1039 = %1037.0;
  (%1038, %1039)
}

def @func_7000() -> (Tensor[(13, 3, 11), float64],) {
  @func_6998() /* ty=(Tensor[(13, 3, 11), float64],) */
}

def @func_5368(%var_5366: float64, %var_5367: Tensor[(5, 8, 8), float64]) -> Tensor[(5, 8, 8), float64] {
  @func_5364(%var_5366, %var_5367) /* ty=Tensor[(5, 8, 8), float64] */
}

def @func_1211(%var_1209: Tensor[(15, 9, 10), uint16]) -> (Tensor[(15, 9, 10), bool],) {
  @func_1208(%var_1209) /* ty=(Tensor[(15, 9, 10), bool],) */
}

def @func_7508() -> Tensor[(315), int16] {
  %1041 = fn () -> Tensor[(315), int16] {
    %1040 = @func_4914() /* ty=(Tensor[(315), int16],) */;
    %1040.0
  };
  %1041() /* ty=Tensor[(315), int16] */
}

def @func_3973(%var_3969: Tensor[(3, 13, 15), float64], %var_3970: Tensor[(3, 13, 15), float64], %var_3971: Tensor[(140), uint64], %var_3972: Tensor[(7, 6), float32]) -> (Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) {
  %1069 = fn (%var_3906: Tensor[(3, 13, 15), float64], %var_3907: Tensor[(3, 13, 15), float64], %var_3955: Tensor[(140), uint64], %var_3961: Tensor[(7, 6), float32]) -> (Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) {
    %1042 = @func_3401() /* ty=(Tensor[(315), int16],) */;
    %1043 = cast(%var_3907, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
    %1044 = shape_of(%var_3906, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1045 = cast(%var_3906, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
    %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1047 = floor_mod(%1045, %1046) /* ty=Tensor[(3, 13, 15), float64] */;
    %1048 = cast(%var_3907, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
    %1049 = shape_of(%1047, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1050 = cast(%1047, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
    %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1052 = cast(meta[relay.Constant][75] /* ty=Tensor[(2), uint64] */, dtype="uint64") /* ty=Tensor[(2), uint64] */;
    %1053 = cast(%var_3955, dtype="uint64") /* ty=Tensor[(140), uint64] */;
    %1054 = reshape(%1052, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), uint64] */;
    %1055 = reshape(%1053, newshape=[2, 5, 14]) /* ty=Tensor[(2, 5, 14), uint64] */;
    %1056 = @func_3460(%1054, %1055) /* ty=(Tensor[(2, 5, 14), uint64], Tensor[(7, 16, 4), float32], Tensor[(448), float32], Tensor[(315), int16]) */;
    %1057 = cast(%var_3961, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
    %1058 = cast(meta[relay.Constant][76] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1059 = cast(meta[relay.Constant][77] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %1060 = reshape(%1057, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %1061 = reshape(%1058, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
    %1062 = reshape(%1059, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %1063 = @func_3048(%1060, %1061, %1062) /* ty=(Tensor[(315), int16], Tensor[(2, 3, 7), float64], Tensor[(42), float32], Tensor[(240), int8], Tensor[(1, 104), float64], Tensor[(15, 7, 3), float64], Tensor[(150), float64]) */;
    %1064 = %1042.0;
    %1065 = equal(%1050, %1051) /* ty=Tensor[(3, 13, 15), bool] */;
    %1066 = @func_2200() /* ty=Tensor[(315), int16] */;
    %1067 = %1056.2;
    %1068 = %1063.3;
    (%1064, %1065, %1066, %1067, meta[relay.Constant][75] /* ty=Tensor[(2), uint64] */, %var_3955, %1068, %var_3961, meta[relay.Constant][76] /* ty=Tensor[(104), float64] */, meta[relay.Constant][77] /* ty=Tensor[(150), float64] */)
  };
  %1069(%var_3969, %var_3970, %var_3971, %var_3972) /* ty=(Tensor[(315), int16], Tensor[(3, 13, 15), bool], Tensor[(315), int16], Tensor[(448), float32], Tensor[(2), uint64], Tensor[(140), uint64], Tensor[(240), int8], Tensor[(7, 6), float32], Tensor[(104), float64], Tensor[(150), float64]) */
}

def @func_2042(%var_2040: Tensor[(432), float32], %var_2041: Tensor[(448), float32]) -> (Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(120, 2), uint64], Tensor[(3, 16, 9), bool], Tensor[(432), float32], Tensor[(448), float32], Tensor[(7, 16, 4), float32]) {
  @func_2038(%var_2040, %var_2041) /* ty=(Tensor[(315), int16], Tensor[(10, 4, 6), float64], Tensor[(120, 2), uint64], Tensor[(3, 16, 9), bool], Tensor[(432), float32], Tensor[(448), float32], Tensor[(7, 16, 4), float32]) */
}

def @func_7688() -> Tensor[(315), int16] {
  @func_4540() /* ty=Tensor[(315), int16] */
}

def @func_5228() -> Tensor[(315), int16] {
  %1071 = fn () -> Tensor[(315), int16] {
    %1070 = @func_3155() /* ty=(Tensor[(315), int16],) */;
    %1070.0
  };
  %1071() /* ty=Tensor[(315), int16] */
}

def @func_2978(%var_2977: Tensor[(7, 13, 13), float32]) -> Tensor[(7, 13, 13), float32] {
  %1073 = fn (%var_2965: Tensor[(7, 13, 13), float32]) -> Tensor[(7, 13, 13), float32] {
    %1072 = cast(%var_2965, dtype="float32") /* ty=Tensor[(7, 13, 13), float32] */;
    sin(%1072) /* ty=Tensor[(7, 13, 13), float32] */
  };
  %1073(%var_2977) /* ty=Tensor[(7, 13, 13), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The Relay type checker is unable to show the following types match.
In particular `Tensor[(15, 7, 3), int16]` does not match `Tensor[(15, 7, 3), float32]`

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_3819() -> (Tensor[(2, 16, 4), uint64],) {
  %0 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%0,)
}

def @func_1639(%var_1628: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  %1 = cast(%var_1628, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %2 = reshape(%1, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %5 = reshape(%3, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %6 = reshape(%4, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %7 = @func_1597() /* ty=Tensor[(360), float64] */;
  %8 = @func_729(%2) /* ty=Tensor[(15, 15, 9), float64] */;
  %9 = @func_1010(%5, %6) /* ty=Tensor[(7, 15, 3), float64] */;
  (%7, %8, %var_1628, %9, meta[relay.Constant][0] /* ty=Tensor[(315), float32] */)
}

def @func_8492() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(21), uint8], Tensor[(273), uint8]) {
  %10 = @func_7153() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %11 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(21), uint8] */, dtype="uint8") /* ty=Tensor[(21), uint8] */;
  %13 = cast(meta[relay.Constant][2] /* ty=Tensor[(273), uint8] */, dtype="uint8") /* ty=Tensor[(273), uint8] */;
  %14 = reshape(%12, newshape=[7, 1, 3]) /* ty=Tensor[(7, 1, 3), uint8] */;
  %15 = reshape(%13, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), uint8] */;
  %16 = @func_8458(%14, %15) /* ty=(Tensor[(7, 13, 3), uint8], Tensor[(1728), int64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 12, 9), float64], Tensor[(360), float64]) */;
  %17 = %10.1;
  %18 = %11.0;
  %19 = %16.2;
  (%17, %18, %19, meta[relay.Constant][1] /* ty=Tensor[(21), uint8] */, meta[relay.Constant][2] /* ty=Tensor[(273), uint8] */)
}

def @func_3755() -> (Tensor[(2, 16, 4), uint64],) {
  %20 = @func_2079() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%20,)
}

def @func_11138() -> Tensor[(2, 16, 4), uint64] {
  @func_7338() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_8588() -> Tensor[(2, 16, 4), uint64] {
  %21 = @func_5911() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %21.4
}

def @func_10031() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %22 = @func_8711() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %23 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %24 = %22.0;
  %25 = %23.2;
  (%24, %25)
}

def @func_4529(%var_4493: Tensor[(2025), float64], %var_4509: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), uint8], Tensor[(2025), float32]) {
  %26 = @func_4298() /* ty=(Tensor[(360), float64],) */;
  %27 = cast(%var_4493, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %28 = reshape(%27, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float64] */;
  %29 = cast(meta[relay.Constant][3] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %30 = reshape(%29, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float32] */;
  %31 = cast(%var_4509, dtype="uint8") /* ty=Tensor[(2025), uint8] */;
  %32 = shape_of(%var_4493, dtype="int32") /* ty=Tensor[(1), int32] */;
  %33 = cast(%var_4493, dtype="uint8") /* ty=Tensor[(2025), uint8] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %35 = cast(%var_4509, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %36 = cosh(%35) /* ty=Tensor[(2025), float64] */;
  %37 = cast(%36, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %38 = %26.0;
  %39 = @func_729(%28) /* ty=Tensor[(15, 15, 9), float64] */;
  %40 = @func_2305(%30) /* ty=Tensor[(11, 15, 8), float32] */;
  %41 = left_shift(%33, %34) /* ty=Tensor[(2025), uint8] */;
  %42 = atan(%37) /* ty=Tensor[(2025), float32] */;
  (%38, %39, %40, meta[relay.Constant][3] /* ty=Tensor[(1320), float32] */, %41, %42)
}

def @func_3847() -> Tensor[(2, 16, 4), uint64] {
  %43 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %43.0
}

def @func_10536(%var_10529: int16, %var_10530: Tensor[(10, 12, 1), int16]) -> Tensor[(10, 12, 1), int16] {
  %44 = cast(%var_10529, dtype="int16") /* ty=int16 */;
  %45 = cast(%var_10530, dtype="int16") /* ty=Tensor[(10, 12, 1), int16] */;
  multiply(%44, %45) /* ty=Tensor[(10, 12, 1), int16] */
}

def @func_4600() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %46 = @func_3391() /* ty=Tensor[(360), float64] */;
  %47 = @func_3050() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%46, %47)
}

def @func_12033(%var_12020: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64], Tensor[(12), float64], Tensor[(48), float64]) {
  %48 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %49 = @func_4790() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %50 = cast(meta[relay.Constant][4] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %51 = cast(%var_12020, dtype="float64") /* ty=Tensor[(48), float64] */;
  %52 = reshape(%50, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %53 = reshape(%51, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %54 = @func_6615(%52, %53) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(48), float64], float64, Tensor[(12), float64], Tensor[(48), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %55 = %48.0;
  %56 = %49.0;
  %57 = %54.0;
  (%55, %56, %57, meta[relay.Constant][4] /* ty=Tensor[(12), float64] */, %var_12020)
}

def @func_8762(%var_8719: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %58 = @func_8335() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %59 = cast(%var_8719, dtype="float32") /* ty=Tensor[(256), float32] */;
  %60 = reshape(%59, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %61 = @func_4562(%60) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), float32]) */;
  %62 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %63 = @func_6653() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %64 = %58.0;
  %65 = %61.1;
  %66 = %62.0;
  %67 = %63.0;
  (%64, %65, %var_8719, %66, %67)
}

def @func_2385() -> Tensor[(2, 16, 4), uint64] {
  @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_12619(%var_12616: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
  %68 = cast(%var_12616, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  rsqrt(%68) /* ty=Tensor[(12, 12, 13), float64] */
}

def @func_2708() -> Tensor[(2, 16, 4), uint64] {
  @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6154() -> Tensor[(2, 16, 4), uint64] {
  %69 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %69.0
}

def @func_8865(%var_8863: Tensor[(9, 225), float64]) -> (Tensor[(2, 3, 8), int8], Tensor[(11, 15, 8), float32], Tensor[(9, 225), float64]) {
  %70 = @func_3129() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) */;
  %71 = cast(%var_8863, dtype="float64") /* ty=Tensor[(9, 225), float64] */;
  %72 = cast(%var_8863, dtype="float64") /* ty=Tensor[(9, 225), float64] */;
  %73 = reshape(%71, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %74 = reshape(%72, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %75 = @func_4529(%73, %74) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), uint8], Tensor[(2025), float32]) */;
  %76 = %70.1;
  %77 = %75.2;
  (%76, %77, %var_8863)
}

def @func_4035() -> Tensor[(2, 16, 4), uint64] {
  @func_3986() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_3050() -> Tensor[(2, 16, 4), uint64] {
  %78 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %78.0
}

def @func_7790() -> (Tensor[(2, 16, 4), uint64],) {
  %79 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %80 = %79.0;
  (%80,)
}

def @func_2190(%var_2181: Tensor[(2025), float64], %var_2188: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  %81 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 16, 4), uint64] */, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %86 = cast(%var_2181, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %87 = reshape(%86, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float64] */;
  %88 = cast(%var_2188, dtype="float32") /* ty=Tensor[(315), float32] */;
  %89 = cast(%var_2188, dtype="float32") /* ty=Tensor[(315), float32] */;
  %90 = reshape(%88, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %91 = reshape(%89, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %92 = greater_equal(%84, %85) /* ty=Tensor[(2, 16, 4), bool] */;
  %93 = @func_729(%87) /* ty=Tensor[(15, 15, 9), float64] */;
  %94 = @func_1010(%90, %91) /* ty=Tensor[(7, 15, 3), float64] */;
  (%92, %93, %var_2181, %94, %var_2188)
}

def @func_12170() -> Tensor[(2, 16, 4), uint64] {
  @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5589(%var_5577: float64, %var_5578: Tensor[(1, 12), float64], %var_5579: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(1, 2, 6), bool], float64, Tensor[(1, 12), float64], Tensor[(48), float64], Tensor[(4, 15, 1), float64]) {
  %95 = cast(meta[relay.Constant][6] /* ty=Tensor[(1386), float64] */, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %96 = reshape(%95, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float64] */;
  %97 = @func_3563(%96) /* ty=(Tensor[(9, 14, 11), uint8],) */;
  %98 = cast(%var_5577, dtype="float64") /* ty=float64 */;
  %99 = cast(%var_5578, dtype="float64") /* ty=Tensor[(1, 12), float64] */;
  %100 = cast(%var_5579, dtype="float64") /* ty=Tensor[(48), float64] */;
  %101 = reshape(%98, newshape=[]) /* ty=float64 */;
  %102 = reshape(%99, newshape=[1, 2, 6]) /* ty=Tensor[(1, 2, 6), float64] */;
  %103 = reshape(%100, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %104 = @func_4247(%101, %102, %103) /* ty=(Tensor[(1, 2, 6), bool], Tensor[(4, 2, 6), bool]) */;
  %105 = @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */;
  %106 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  %107 = %97.0;
  %108 = %104.0;
  %109 = %105.0;
  (%106, %107, meta[relay.Constant][6] /* ty=Tensor[(1386), float64] */, %108, %var_5577, %var_5578, %var_5579, %109)
}

def @func_9171() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64]) {
  %110 = @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */;
  %111 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %112 = %110.1;
  %113 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
  %114 = %111.7;
  (%112, %113, %114)
}

def @func_7761(%var_7739: Tensor[(2, 16, 4), float32]) -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float64]) {
  %115 = @func_3745() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %116 = %115.2;
  %117 = cast(%var_7739, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%116, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %121 = cast(%116, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %122 = power(%119, %120) /* ty=Tensor[(2, 16, 4), float32] */;
  %123 = cosh(%121) /* ty=Tensor[(2, 16, 4), float64] */;
  (%122, %123)
}

def @func_3986() -> Tensor[(2, 16, 4), uint64] {
  @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6130(%var_6124: Tensor[(256, 9), float32]) -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float32], Tensor[(256, 9), float32]) {
  %124 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(256, 1), float32] */, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
  %126 = reshape(%125, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %127 = @func_4562(%126) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), float32]) */;
  %128 = cast(meta[relay.Constant][7] /* ty=Tensor[(256, 1), float32] */, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
  %129 = cast(%var_6124, dtype="float32") /* ty=Tensor[(256, 9), float32] */;
  %130 = %124.0;
  %131 = %127.3;
  %132 = floor_mod(%128, %129) /* ty=Tensor[(256, 9), float32] */;
  (%130, %131, %132)
}

def @main() -> (Tensor[(14, 1, 5), float64],) {
  %133 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %134 = cos(%133) /* ty=Tensor[(14, 1, 5), float64] */;
  (%134,)
}

def @func_9959() -> (Tensor[(12, 3, 6), float32], Tensor[(11, 15, 8), float32], Tensor[(2025), float64], Tensor[(2, 16, 4), uint32], Tensor[(180, 2), float32]) {
  %135 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 3, 6), float32] */;
  %136 = cast(meta[relay.Constant][10] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %137 = reshape(%136, newshape=[9, 225]) /* ty=Tensor[(9, 225), float64] */;
  %138 = @func_8865(%137) /* ty=(Tensor[(2, 3, 8), int8], Tensor[(11, 15, 8), float32], Tensor[(9, 225), float64]) */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(180, 2), float64] */, dtype="float64") /* ty=Tensor[(180, 2), float64] */;
  %140 = reshape(%139, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float64] */;
  %141 = @func_1064(%140) /* ty=(Tensor[(4, 10, 9), float64],) */;
  %142 = %141.0;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(4, 10, 9), float32] */;
  %144 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(180, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %145 = cast(meta[relay.Constant][11] /* ty=Tensor[(180, 2), float64] */, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %147 = rsqrt(%135) /* ty=Tensor[(12, 3, 6), float32] */;
  %148 = %138.1;
  %149 = @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */;
  %150 = floor_divide(%145, %146) /* ty=Tensor[(180, 2), float32] */;
  (%147, %148, meta[relay.Constant][10] /* ty=Tensor[(2025), float64] */, %149, %150)
}

def @func_7055(%var_6995: Tensor[(5, 14, 12), bool], %var_6996: Tensor[(5, 14, 12), bool], %var_7019: Tensor[(1320), float32]) -> (Tensor[(5, 14, 12), bool], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64]) {
  %151 = cast(%var_6996, dtype="bool") /* ty=Tensor[(5, 14, 12), bool] */;
  %152 = shape_of(%var_6995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%var_6995, dtype="bool") /* ty=Tensor[(5, 14, 12), bool] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %155 = cast(%var_7019, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %156 = reshape(%155, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float32] */;
  %157 = cast(%var_6996, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
  %158 = log(%157) /* ty=Tensor[(5, 14, 12), float64] */;
  %159 = cast(%158, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
  %160 = logical_or(%153, %154) /* ty=Tensor[(5, 14, 12), bool] */;
  %161 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  %162 = @func_2305(%156) /* ty=Tensor[(11, 15, 8), float32] */;
  %163 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
  %164 = sinh(%159) /* ty=Tensor[(5, 14, 12), float64] */;
  (%160, %161, %162, %var_7019, %163, %164)
}

def @func_1597() -> Tensor[(360), float64] {
  %165 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %165.6
}

def @func_12364(%var_12354: float32, %var_12355: Tensor[(256), float32]) -> (Tensor[(273), uint8], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) {
  %166 = cast(%var_12354, dtype="float32") /* ty=float32 */;
  %167 = cast(%var_12355, dtype="float32") /* ty=Tensor[(256), float32] */;
  %168 = reshape(%166, newshape=[]) /* ty=float32 */;
  %169 = reshape(%167, newshape=[8, 32]) /* ty=Tensor[(8, 32), float32] */;
  %170 = @func_380(%168, %169) /* ty=(Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) */;
  %171 = @func_10942() /* ty=Tensor[(273), uint8] */;
  %172 = %170.1;
  (%171, %172, %var_12354, %var_12355)
}

def @func_5740(%var_5729: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) {
  %173 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %174 = cast(-4.20439f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %175 = cast(%var_5729, dtype="float32") /* ty=Tensor[(256), float32] */;
  %176 = reshape(%174, newshape=[]) /* ty=float32 */;
  %177 = reshape(%175, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), float32] */;
  %178 = %173.0;
  %179 = @func_232(%176, %177) /* ty=Tensor[(16, 2, 8), float32] */;
  (%178, %179, -4.20439f /* ty=float32 */, %var_5729)
}

def @func_4692(%var_4679: Tensor[(14, 12, 5), float64], %var_4686: Tensor[(128), uint64]) -> (Tensor[(14, 12, 5), float32], Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(14, 12, 5), float64]) {
  %180 = cast(%var_4679, dtype="float32") /* ty=Tensor[(14, 12, 5), float32] */;
  %181 = cast(%var_4686, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %182 = reshape(%181, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
  %183 = @func_1845(%182) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %184 = cast(%var_4679, dtype="float64") /* ty=Tensor[(14, 12, 5), float64] */;
  %185 = atanh(%184) /* ty=Tensor[(14, 12, 5), float64] */;
  %186 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 12, 5), float64] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="float64") /* ty=Tensor[(14, 12, 5), float64] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %190 = atan(%180) /* ty=Tensor[(14, 12, 5), float32] */;
  %191 = %183.0;
  %192 = floor_divide(%188, %189) /* ty=Tensor[(14, 12, 5), float64] */;
  (%190, %191, %var_4686, %192)
}

def @func_4287() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %193 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %194 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  %195 = %193.1;
  (%194, %195)
}

def @func_10527() -> (Tensor[(2, 16, 4), uint32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(14, 3, 14), float64], Tensor[(14, 42), float64]) {
  %196 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %197 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %198 = @func_6096() /* ty=(Tensor[(2, 16, 4), float64], Tensor[(48), float64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %199 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 42), float64] */, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %200 = reshape(%199, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), float64] */;
  %201 = @func_8664() /* ty=Tensor[(2, 16, 4), uint32] */;
  %202 = %196.0;
  %203 = %197.0;
  %204 = %198.0;
  %205 = @func_10319() /* ty=Tensor[(2, 16, 4), uint64] */;
  %206 = @func_7887(%200) /* ty=Tensor[(14, 3, 14), float64] */;
  (%201, %202, %203, %204, %205, %206, meta[relay.Constant][13] /* ty=Tensor[(14, 42), float64] */)
}

def @func_2426(%var_2423: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(15, 10, 2), float32], Tensor[(300), float32], Tensor[(2025), float64]) {
  %207 = cast(meta[relay.Constant][14] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %208 = cast(%var_2423, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %209 = reshape(%207, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
  %210 = reshape(%208, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %211 = @func_2220(%209, %210) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(15, 15, 9), float64], Tensor[(2025), float64]) */;
  %212 = @func_2079() /* ty=Tensor[(2, 16, 4), uint64] */;
  %213 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %214 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
  %215 = %211.0;
  (%212, %213, %214, %215, meta[relay.Constant][14] /* ty=Tensor[(300), float32] */, %var_2423)
}

def @func_5242() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) {
  %216 = @func_4959() /* ty=(Tensor[(360), float64],) */;
  %217 = cast(meta[relay.Constant][15] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %218 = reshape(%217, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %219 = @func_3969(%218) /* ty=(Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %220 = %216.0;
  %221 = %219.3;
  (%220, %221, meta[relay.Constant][15] /* ty=Tensor[(256), float32] */)
}

def @func_4045() -> Tensor[(2, 16, 4), uint64] {
  @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_232(%var_192: float32, %var_193: Tensor[(16, 2, 8), float32]) -> Tensor[(16, 2, 8), float32] {
  %222 = cast(%var_193, dtype="float32") /* ty=Tensor[(16, 2, 8), float32] */;
  %223 = erf(%222) /* ty=Tensor[(16, 2, 8), float32] */;
  %224 = cast(%var_192, dtype="float32") /* ty=float32 */;
  %225 = cast(%var_193, dtype="float32") /* ty=Tensor[(16, 2, 8), float32] */;
  %226 = power(%224, %225) /* ty=Tensor[(16, 2, 8), float32] */;
  %227 = cast(%226, dtype="int64") /* ty=Tensor[(16, 2, 8), int64] */;
  %228 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%223, dtype="int64") /* ty=Tensor[(16, 2, 8), int64] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %231 = bitwise_or(%229, %230) /* ty=Tensor[(16, 2, 8), int64] */;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(16, 2, 8), float32] */;
  exp(%232) /* ty=Tensor[(16, 2, 8), float32] */
}

def @func_4562(%var_4554: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), float32]) {
  %233 = @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %234 = cast(%var_4554, dtype="float32") /* ty=Tensor[(256), float32] */;
  %235 = reshape(%234, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %236 = @func_3969(%235) /* ty=(Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %237 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %238 = %233.0;
  %239 = %236.5;
  %240 = %237.0;
  (%238, %239, %var_4554, %240)
}

def @func_5068(%var_5047: Tensor[(7, 1, 12), float32]) -> (Tensor[(7, 1, 12), float32], Tensor[(315), float32], Tensor[(2025), float64], Tensor[(315), float32]) {
  %241 = cast(%var_5047, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
  %242 = cast(meta[relay.Constant][16] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %243 = cast(meta[relay.Constant][17] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %244 = reshape(%242, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %245 = reshape(%243, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %246 = @func_2190(%244, %245) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %247 = acos(%241) /* ty=Tensor[(7, 1, 12), float32] */;
  %248 = %246.4;
  (%247, %248, meta[relay.Constant][16] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][17] /* ty=Tensor[(315), float32] */)
}

def @func_6520(%var_6505: Tensor[(9, 225), float64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(9, 225), float64], Tensor[(14, 15, 2), bool], Tensor[(5, 84), uint8]) {
  %249 = @func_5308() /* ty=(Tensor[(360), float64],) */;
  %250 = @func_5020() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %251 = cast(%var_6505, dtype="float64") /* ty=Tensor[(9, 225), float64] */;
  %252 = reshape(%251, newshape=[1, 2025]) /* ty=Tensor[(1, 2025), float64] */;
  %253 = @func_3671(%252) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(1, 2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %254 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 84), uint8] */, dtype="uint8") /* ty=Tensor[(5, 84), uint8] */;
  %255 = reshape(%254, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), uint8] */;
  %256 = @func_2912(%255) /* ty=(Tensor[(14, 15, 2), uint8], Tensor[(14, 15, 2), bool]) */;
  %257 = %249.0;
  %258 = %250.0;
  %259 = %253.0;
  %260 = %256.1;
  (%257, %258, %259, %var_6505, %260, meta[relay.Constant][18] /* ty=Tensor[(5, 84), uint8] */)
}

def @func_8393() -> (Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64], Tensor[(60, 14), bool], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %261 = cast(meta[relay.Constant][19] /* ty=Tensor[(60, 14), bool] */, dtype="bool") /* ty=Tensor[(60, 14), bool] */;
  %262 = cast(meta[relay.Constant][19] /* ty=Tensor[(60, 14), bool] */, dtype="bool") /* ty=Tensor[(60, 14), bool] */;
  %263 = cast(meta[relay.Constant][20] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %264 = reshape(%261, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), bool] */;
  %265 = reshape(%262, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), bool] */;
  %266 = reshape(%263, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %267 = @func_7055(%264, %265, %266) /* ty=(Tensor[(5, 14, 12), bool], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64]) */;
  %268 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %269 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
  %270 = %267.5;
  %271 = %268.0;
  %272 = @func_3847() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%269, %270, meta[relay.Constant][19] /* ty=Tensor[(60, 14), bool] */, meta[relay.Constant][20] /* ty=Tensor[(1320), float32] */, %271, %272)
}

def @func_8928() -> (Tensor[(2, 16, 4), uint64],) {
  %273 = @func_7338() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%273,)
}

def @func_3803() -> Tensor[(2, 16, 4), uint64] {
  %274 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %274.1
}

def @func_1506() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) {
  %275 = cast(meta[relay.Constant][21] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %276 = cast(meta[relay.Constant][21] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %277 = reshape(%275, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %278 = reshape(%276, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %279 = @func_1010(%277, %278) /* ty=Tensor[(7, 15, 3), float64] */;
  %280 = cast(%279, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %281 = cast(meta[relay.Constant][21] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %282 = reshape(%280, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %283 = reshape(%281, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %284 = cast(meta[relay.Constant][22] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %285 = reshape(%284, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float64] */;
  %286 = @func_1064(%285) /* ty=(Tensor[(4, 10, 9), float64],) */;
  %287 = %286.0;
  %288 = cast(%287, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
  %289 = reshape(%288, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float64] */;
  %290 = @func_1064(%289) /* ty=(Tensor[(4, 10, 9), float64],) */;
  %291 = cast(meta[relay.Constant][21] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %292 = cast(%279, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %293 = reshape(%291, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %294 = reshape(%292, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %295 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  %296 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  %297 = @func_1010(%282, %283) /* ty=Tensor[(7, 15, 3), float64] */;
  %298 = %290.0;
  %299 = @func_1010(%293, %294) /* ty=Tensor[(7, 15, 3), float64] */;
  (%295, %296, %279, meta[relay.Constant][21] /* ty=Tensor[(315), float32] */, %297, %287, meta[relay.Constant][22] /* ty=Tensor[(360), float64] */, %298, %299)
}

def @func_4959() -> (Tensor[(360), float64],) {
  %300 = @func_4600() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %301 = %300.0;
  (%301,)
}

def @func_9045(%var_9021: Tensor[(2025), float64], %var_9022: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(315), float32], Tensor[(840), float64]) {
  %302 = cast(meta[relay.Constant][23] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %303 = @func_6878() /* ty=Tensor[(2, 16, 4), uint64] */;
  %304 = cast(%303, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
  %305 = reshape(%302, newshape=[14, 12, 5]) /* ty=Tensor[(14, 12, 5), float64] */;
  %306 = reshape(%304, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %307 = @func_4692(%305, %306) /* ty=(Tensor[(14, 12, 5), float32], Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(14, 12, 5), float64]) */;
  %308 = cast(%var_9021, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %309 = cast(%var_9022, dtype="float32") /* ty=Tensor[(315), float32] */;
  %310 = reshape(%308, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %311 = reshape(%309, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %312 = @func_2190(%310, %311) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %313 = cast(meta[relay.Constant][23] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %314 = %307.2;
  %315 = %312.1;
  %316 = sin(%313) /* ty=Tensor[(840), float64] */;
  (%303, %314, %315, %var_9021, %var_9022, %316)
}

def @func_3401() -> (Tensor[(2, 16, 4), uint64],) {
  %317 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%317,)
}

def @func_10319() -> Tensor[(2, 16, 4), uint64] {
  @func_6581() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_12636() -> (Tensor[(2, 16, 4), uint64],) {
  %318 = @func_7521() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %319 = %318.1;
  (%319,)
}

def @func_12571(%var_12561: Tensor[(50, 6), int8], %var_12569: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(2, 10, 15), int8], Tensor[(50, 6), int8], Tensor[(300), float32], Tensor[(2025), float64]) {
  %320 = @func_4959() /* ty=(Tensor[(360), float64],) */;
  %321 = cast(%var_12561, dtype="int8") /* ty=Tensor[(50, 6), int8] */;
  %322 = reshape(%321, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), int8] */;
  %323 = cast(%var_12569, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %324 = reshape(%323, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %325 = @func_2426(%324) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(15, 10, 2), float32], Tensor[(300), float32], Tensor[(2025), float64]) */;
  %326 = %320.0;
  %327 = @func_9486(%322) /* ty=Tensor[(2, 10, 15), int8] */;
  %328 = %325.4;
  (%326, %327, %var_12561, %328, %var_12569)
}

def @func_6960(%var_6942: Tensor[(16, 12, 9), int64], %var_6943: Tensor[(16, 12, 9), int64]) -> (Tensor[(16, 12, 9), int64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %329 = cast(%var_6943, dtype="int64") /* ty=Tensor[(16, 12, 9), int64] */;
  %330 = shape_of(%var_6942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_6942, dtype="int64") /* ty=Tensor[(16, 12, 9), int64] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %333 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %334 = maximum(%331, %332) /* ty=Tensor[(16, 12, 9), int64] */;
  %335 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %336 = %333.0;
  (%334, %335, %336)
}

def @func_6424(%var_6364: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) {
  %337 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %338 = @func_5020() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %339 = cast(%var_6364, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %340 = cast(%var_6364, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %341 = reshape(%339, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %342 = reshape(%340, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %343 = @func_4529(%341, %342) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), uint8], Tensor[(2025), float32]) */;
  %344 = @func_5129() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %345 = @func_5710() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) */;
  %346 = %337.0;
  %347 = %338.0;
  %348 = %343.0;
  %349 = %344.0;
  %350 = %345.1;
  (%346, %347, %348, %var_6364, %349, %350)
}

def @func_6577() -> (Tensor[(2, 16, 4), uint64],) {
  %351 = @func_4287() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %352 = %351.1;
  (%352,)
}

def @func_4298() -> (Tensor[(360), float64],) {
  %353 = @func_3391() /* ty=Tensor[(360), float64] */;
  (%353,)
}

def @func_10891(%var_10862: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64]) {
  %354 = @func_5710() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) */;
  %355 = cast(6.56403f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %356 = cast(%var_10862, dtype="float32") /* ty=Tensor[(256), float32] */;
  %357 = reshape(%355, newshape=[]) /* ty=float32 */;
  %358 = reshape(%356, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %359 = @func_1359(%357, %358) /* ty=(Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32]) */;
  %360 = @func_9171() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64]) */;
  %361 = %354.0;
  %362 = %359.1;
  %363 = %360.0;
  (%361, %362, 6.56403f /* ty=float32 */, %var_10862, %363)
}

def @func_1798() -> (Tensor[(2, 16, 4), float32], Tensor[(315), float32]) {
  %364 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %365 = %364.0;
  %366 = cast(%365, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %367 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %368 = asinh(%366) /* ty=Tensor[(2, 16, 4), float32] */;
  %369 = %367.3;
  (%368, %369)
}

def @func_5710() -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) {
  %370 = @func_4298() /* ty=(Tensor[(360), float64],) */;
  %371 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  %372 = %370.0;
  (%371, %372)
}

def @func_11476() -> (Tensor[(2, 16, 4), uint64],) {
  %373 = @func_6271() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %374 = %373.0;
  (%374,)
}

def @func_12505() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(1, 15, 9), float64]) {
  %375 = @func_7731() /* ty=(Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) */;
  %376 = @func_10139() /* ty=Tensor[(2, 16, 4), uint64] */;
  %377 = @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */;
  %378 = %375.0;
  (%376, %377, %378)
}

def @func_11061() -> (Tensor[(2, 16, 4), uint64],) {
  %379 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%379,)
}

def @func_3333() -> (Tensor[(2, 16, 4), uint64],) {
  %380 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%380,)
}

def @func_4906() -> (Tensor[(2, 16, 4), uint64],) {
  %381 = @func_3012() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %382 = %381.0;
  (%382,)
}

def @func_2990(%var_2958: Tensor[(2, 16, 4), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint16], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
  %383 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %385 = erf(%384) /* ty=Tensor[(2, 16, 4), float32] */;
  %386 = cast(%385, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %387 = tan(%386) /* ty=Tensor[(2, 16, 4), float64] */;
  %388 = cast(%var_2958, dtype="uint16") /* ty=Tensor[(2, 16, 4), uint16] */;
  %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%387, dtype="uint16") /* ty=Tensor[(2, 16, 4), uint16] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %392 = cast(%var_2958, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %393 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%383, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %396 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %397 = cast(%387, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %398 = log10(%397) /* ty=Tensor[(2, 16, 4), float64] */;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %400 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
  %401 = right_shift(%390, %391) /* ty=Tensor[(2, 16, 4), uint16] */;
  %402 = floor_mod(%394, %395) /* ty=Tensor[(2, 16, 4), float64] */;
  %403 = %396.2;
  %404 = asin(%399) /* ty=Tensor[(2, 16, 4), float64] */;
  (%400, %401, %402, %403, %404)
}

def @func_4806() -> Tensor[(2, 16, 4), uint64] {
  %405 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %405.1
}

def @func_10438() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %406 = @func_8018() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %407 = %406.0;
  %408 = @func_4834() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%407, %408)
}

def @func_8218(%var_8163: Tensor[(16, 3, 1), float32], %var_8212: Tensor[(1386), float64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(48), float64]) {
  %409 = cast(meta[relay.Constant][24] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %410 = reshape(%409, newshape=[9, 225]) /* ty=Tensor[(9, 225), float64] */;
  %411 = @func_6520(%410) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(9, 225), float64], Tensor[(14, 15, 2), bool], Tensor[(5, 84), uint8]) */;
  %412 = cast(%var_8163, dtype="float32") /* ty=Tensor[(16, 3, 1), float32] */;
  %413 = atan(%412) /* ty=Tensor[(16, 3, 1), float32] */;
  %414 = cast(%413, dtype="bool") /* ty=Tensor[(16, 3, 1), bool] */;
  %415 = cast(meta[relay.Constant][24] /* ty=Tensor[(2025), float64] */, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %416 = cast(%var_8212, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %417 = reshape(%416, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float64] */;
  %418 = @func_3563(%417) /* ty=(Tensor[(9, 14, 11), uint8],) */;
  %419 = @func_6096() /* ty=(Tensor[(2, 16, 4), float64], Tensor[(48), float64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %420 = @func_1597() /* ty=Tensor[(360), float64] */;
  %421 = %411.1;
  %422 = less_equal(%414, %415) /* ty=Tensor[(16, 3, 2025), bool] */;
  %423 = %418.0;
  %424 = %419.1;
  (%420, %421, %422, %423, %var_8212, %424)
}

def @func_7827() -> Tensor[(4, 15, 1), float64] {
  %425 = @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */;
  %425.0
}

def @func_4476() -> (Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(2, 16, 4), uint64]) {
  %426 = @func_3745() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %427 = @func_1798() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */;
  %428 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %429 = %426.1;
  %430 = %427.1;
  %431 = %428.0;
  (%429, %430, %431)
}

def @func_5820() -> Tensor[(2, 16, 4), float32] {
  %432 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %432.0
}

def @func_3299(%var_3264: Tensor[(6, 2, 16), uint32], %var_3265: Tensor[(6, 2, 16), uint32], %var_3270: Tensor[(2025), float64]) -> (Tensor[(6, 2, 16), uint32], Tensor[(6, 2, 16), bool], Tensor[(15, 15, 9), int16], Tensor[(15, 15, 9), bool]) {
  %433 = cast(%var_3265, dtype="uint32") /* ty=Tensor[(6, 2, 16), uint32] */;
  %434 = shape_of(%var_3264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%var_3264, dtype="uint32") /* ty=Tensor[(6, 2, 16), uint32] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %437 = cast(%var_3265, dtype="bool") /* ty=Tensor[(6, 2, 16), bool] */;
  %438 = shape_of(%var_3264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%var_3264, dtype="bool") /* ty=Tensor[(6, 2, 16), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = cast(%var_3270, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %442 = reshape(%441, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float64] */;
  %443 = @func_729(%442) /* ty=Tensor[(15, 15, 9), float64] */;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %445 = sin(%444) /* ty=Tensor[(15, 15, 9), float32] */;
  %446 = cast(%var_3270, dtype="int16") /* ty=Tensor[(2025), int16] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="int16") /* ty=Tensor[(15, 15, 9), int16] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %450 = cast(%var_3270, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %451 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%445, dtype="bool") /* ty=Tensor[(15, 15, 9), bool] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %454 = bitwise_or(%435, %436) /* ty=Tensor[(6, 2, 16), uint32] */;
  %455 = equal(%439, %440) /* ty=Tensor[(6, 2, 16), bool] */;
  %456 = left_shift(%448, %449) /* ty=Tensor[(15, 15, 9), int16] */;
  %457 = logical_and(%452, %453) /* ty=Tensor[(15, 15, 9), bool] */;
  (%454, %455, %456, %457)
}

def @func_6259() -> (Tensor[(2, 16, 4), uint32], Tensor[(360), float64]) {
  %458 = @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */;
  %459 = @func_3391() /* ty=Tensor[(360), float64] */;
  (%458, %459)
}

def @func_4671(%var_4657: Tensor[(1, 420), uint8]) -> (Tensor[(2, 16, 4), uint64], Tensor[(14, 15, 2), uint8], Tensor[(1, 420), uint8], Tensor[(2, 16, 4), uint64]) {
  %460 = cast(%var_4657, dtype="uint8") /* ty=Tensor[(1, 420), uint8] */;
  %461 = reshape(%460, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), uint8] */;
  %462 = @func_2912(%461) /* ty=(Tensor[(14, 15, 2), uint8], Tensor[(14, 15, 2), bool]) */;
  %463 = @func_3986() /* ty=Tensor[(2, 16, 4), uint64] */;
  %464 = %462.0;
  %465 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%463, %464, %var_4657, %465)
}

def @func_1532() -> Tensor[(2, 16, 4), uint64] {
  %466 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %466.1
}

def @func_5308() -> (Tensor[(360), float64],) {
  %467 = @func_3391() /* ty=Tensor[(360), float64] */;
  (%467,)
}

def @func_7521() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %468 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %469 = %468.0;
  %470 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%469, %470)
}

def @func_9782(%var_9775: Tensor[(12), float64]) -> (Tensor[(360), float64], Tensor[(4, 2, 6), bool], float64, Tensor[(12), float64], Tensor[(48), float64]) {
  %471 = cast(8.5476f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %472 = cast(%var_9775, dtype="float64") /* ty=Tensor[(12), float64] */;
  %473 = cast(meta[relay.Constant][25] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %474 = reshape(%471, newshape=[]) /* ty=float64 */;
  %475 = reshape(%472, newshape=[1, 2, 6]) /* ty=Tensor[(1, 2, 6), float64] */;
  %476 = reshape(%473, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %477 = @func_4247(%474, %475, %476) /* ty=(Tensor[(1, 2, 6), bool], Tensor[(4, 2, 6), bool]) */;
  %478 = @func_5933() /* ty=Tensor[(360), float64] */;
  %479 = %477.1;
  (%478, %479, 8.5476f64 /* ty=float64 */, %var_9775, meta[relay.Constant][25] /* ty=Tensor[(48), float64] */)
}

def @func_11484() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %480 = @func_7731() /* ty=(Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) */;
  %481 = @func_8018() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %482 = %480.1;
  %483 = %481.2;
  (%482, %483)
}

def @func_4410(%var_4401: Tensor[(10, 15, 11), float32]) -> Tensor[(10, 15, 11), float32] {
  %484 = cast(%var_4401, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
  exp(%484) /* ty=Tensor[(10, 15, 11), float32] */
}

def @func_6581() -> Tensor[(2, 16, 4), uint64] {
  @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_12686() -> (Tensor[(2, 16, 4), uint64],) {
  %485 = @func_12450() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) */;
  %486 = %485.0;
  (%486,)
}

def @func_12898() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %487 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %488 = @func_6271() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %489 = %487.0;
  %490 = %488.0;
  (%489, %490)
}

def @func_6724(%var_6721: Tensor[(13, 2, 13), float32]) -> (Tensor[(13, 2, 13), float32],) {
  %491 = cast(%var_6721, dtype="float32") /* ty=Tensor[(13, 2, 13), float32] */;
  %492 = tan(%491) /* ty=Tensor[(13, 2, 13), float32] */;
  (%492,)
}

def @func_2491() -> (Tensor[(2, 16, 4), float32],) {
  %493 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  %494 = cast(%493, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %495 = sinh(%494) /* ty=Tensor[(2, 16, 4), float32] */;
  (%495,)
}

def @func_11009(%var_10981: Tensor[(1386), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(48), float64], Tensor[(48), float32], Tensor[(1386), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 15, 1), float64]) {
  %496 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %497 = @func_6199() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %498 = cast(meta[relay.Constant][26] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %499 = cast(%var_10981, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %500 = reshape(%498, newshape=[16, 3, 1]) /* ty=Tensor[(16, 3, 1), float32] */;
  %501 = reshape(%499, newshape=[1386]) /* ty=Tensor[(1386), float64] */;
  %502 = @func_8218(%500, %501) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(48), float64]) */;
  %503 = @func_4287() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %504 = @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */;
  %505 = %496.0;
  %506 = %497.1;
  %507 = %502.5;
  %508 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  %509 = %503.1;
  %510 = %504.0;
  (%505, %506, %507, meta[relay.Constant][26] /* ty=Tensor[(48), float32] */, %var_10981, %508, %509, %510)
}

def @func_10846() -> Tensor[(2, 16, 4), uint64] {
  %511 = @func_3129() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) */;
  %511.0
}

def @func_11761() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %512 = @func_8711() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %513 = %512.0;
  %514 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%513, %514)
}

def @func_2634(%var_2601: Tensor[(2, 3, 8), float64]) -> Tensor[(2, 3, 8), int8] {
  %515 = cast(%var_2601, dtype="float64") /* ty=Tensor[(2, 3, 8), float64] */;
  %516 = sigmoid(%515) /* ty=Tensor[(2, 3, 8), float64] */;
  %517 = cast(%var_2601, dtype="int8") /* ty=Tensor[(2, 3, 8), int8] */;
  %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%516, dtype="int8") /* ty=Tensor[(2, 3, 8), int8] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_xor(%519, %520) /* ty=Tensor[(2, 3, 8), int8] */
}

def @func_7954(%var_7942: Tensor[(1, 315), float32]) -> (Tensor[(360), float64], Tensor[(4, 15, 1), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], float32, Tensor[(2, 16, 4), bool], Tensor[(135, 15), float64], Tensor[(1, 315), float32]) {
  %521 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %522 = @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */;
  %523 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %524 = cast(5.10016f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %525 = reshape(%524, newshape=[]) /* ty=float32 */;
  %526 = @func_2038(%525) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), bool], Tensor[(16, 3, 10), float64], float32, Tensor[(8, 32), float32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %527 = cast(meta[relay.Constant][27] /* ty=Tensor[(135, 15), float64] */, dtype="float64") /* ty=Tensor[(135, 15), float64] */;
  %528 = cast(%var_7942, dtype="float32") /* ty=Tensor[(1, 315), float32] */;
  %529 = reshape(%527, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %530 = reshape(%528, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %531 = @func_2190(%529, %530) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %532 = %521.0;
  %533 = %522.0;
  %534 = @func_6581() /* ty=Tensor[(2, 16, 4), uint64] */;
  %535 = %523.0;
  %536 = %526.5;
  %537 = %531.0;
  (%532, %533, %534, %535, %536, 5.10016f /* ty=float32 */, %537, meta[relay.Constant][27] /* ty=Tensor[(135, 15), float64] */, %var_7942)
}

def @func_6939() -> Tensor[(360), float64] {
  %538 = @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */;
  %538.0
}

def @func_4978() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %539 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %540 = @func_3391() /* ty=Tensor[(360), float64] */;
  %541 = %539.2;
  (%540, %541)
}

def @func_1359(%var_1308: float32, %var_1309: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32]) {
  %542 = cast(%var_1308, dtype="float32") /* ty=float32 */;
  %543 = cast(%var_1309, dtype="float32") /* ty=Tensor[(256), float32] */;
  %544 = reshape(%542, newshape=[]) /* ty=float32 */;
  %545 = reshape(%543, newshape=[8, 32]) /* ty=Tensor[(8, 32), float32] */;
  %546 = @func_380(%544, %545) /* ty=(Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) */;
  %547 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  %548 = %546.2;
  (%547, %548, %var_1308, %var_1309)
}

def @func_5295() -> Tensor[(2, 16, 4), uint64] {
  @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_7648(%var_7624: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  %549 = cast(%var_7624, dtype="float32") /* ty=Tensor[(315), float32] */;
  %550 = cast(%var_7624, dtype="float32") /* ty=Tensor[(315), float32] */;
  %551 = reshape(%549, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %552 = reshape(%550, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %553 = @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */;
  %554 = @func_1010(%551, %552) /* ty=Tensor[(7, 15, 3), float64] */;
  (%553, %554, %var_7624)
}

def @func_10074() -> Tensor[(2, 16, 4), uint64] {
  @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_10603() -> Tensor[(2, 16, 4), uint64] {
  %555 = @func_5129() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %555.0
}

def @func_9746(%var_9719: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], Tensor[(256), float32], Tensor[(2, 16, 4), uint64]) {
  %556 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %557 = cast(%var_9719, dtype="float32") /* ty=Tensor[(256), float32] */;
  %558 = reshape(%557, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %559 = @func_5740(%558) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) */;
  %560 = %556.0;
  %561 = %559.1;
  %562 = @func_5792() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%560, %561, %var_9719, %562)
}

def @func_9282() -> Tensor[(2, 16, 4), float32] {
  %563 = @func_1798() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */;
  %563.0
}

def @func_10632() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %564 = @func_4476() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(2, 16, 4), uint64]) */;
  %565 = @func_1597() /* ty=Tensor[(360), float64] */;
  %566 = %564.2;
  (%565, %566)
}

def @func_12296() -> (Tensor[(2, 16, 4), uint32], Tensor[(2, 16, 4), uint64]) {
  %567 = @func_10527() /* ty=(Tensor[(2, 16, 4), uint32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(14, 3, 14), float64], Tensor[(14, 42), float64]) */;
  %568 = @func_9328() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %569 = %567.0;
  %570 = %568.0;
  (%569, %570)
}

def @func_3129() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) {
  %571 = cast(meta[relay.Constant][28] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %572 = reshape(%571, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %573 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  %574 = @func_2634(%572) /* ty=Tensor[(2, 3, 8), int8] */;
  (%573, %574, meta[relay.Constant][28] /* ty=Tensor[(48), float64] */)
}

def @func_5792() -> Tensor[(2, 16, 4), uint64] {
  @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_7887(%var_7880: Tensor[(14, 3, 14), float64]) -> Tensor[(14, 3, 14), float64] {
  %575 = cast(%var_7880, dtype="float64") /* ty=Tensor[(14, 3, 14), float64] */;
  sigmoid(%575) /* ty=Tensor[(14, 3, 14), float64] */
}

def @func_12097() -> (Tensor[(2, 16, 4), uint64],) {
  %576 = @func_4790() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %577 = %576.1;
  (%577,)
}

def @func_6573() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %578 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %579 = %578.2;
  %580 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%579, %580)
}

def @func_9486(%var_9451: Tensor[(2, 10, 15), int8]) -> Tensor[(2, 10, 15), int8] {
  %581 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 10, 15), int8] */, dtype="int8") /* ty=Tensor[(2, 10, 15), int8] */;
  %582 = shape_of(%var_9451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_9451, dtype="int8") /* ty=Tensor[(2, 10, 15), int8] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%583, %584) /* ty=Tensor[(2, 10, 15), int8] */
}

def @func_1845(%var_1827: Tensor[(2, 16, 4), uint64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %585 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %586 = %585.0;
  %587 = cast(%var_1827, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%586, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %591 = not_equal(%589, %590) /* ty=Tensor[(2, 16, 4), bool] */;
  %592 = cast(%591, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %593 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %594 = sin(%592) /* ty=Tensor[(2, 16, 4), float32] */;
  (%593, %594)
}

def @func_4195(%var_4186: Tensor[(2, 16, 4), uint64]) -> Tensor[(2, 16, 4), float64] {
  %595 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %596 = %595.1;
  %597 = cast(%var_4186, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%596, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%599, %600) /* ty=Tensor[(2, 16, 4), float64] */
}

def @func_10942() -> Tensor[(273), uint8] {
  %601 = @func_8492() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(21), uint8], Tensor[(273), uint8]) */;
  %601.4
}

def @func_11337() -> (Tensor[(2, 16, 4), uint64],) {
  %602 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%602,)
}

def @func_5542() -> (Tensor[(4, 15, 1), float64],) {
  %603 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(4, 15, 1), float64] */;
  %604 = asinh(%603) /* ty=Tensor[(4, 15, 1), float64] */;
  (%604,)
}

def @func_8711() -> (Tensor[(2, 16, 4), uint64],) {
  %605 = @func_7435() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %606 = %605.0;
  (%606,)
}

def @func_12715() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(1320), float32]) {
  %607 = cast(meta[relay.Constant][31] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %608 = reshape(%607, newshape=[6, 220]) /* ty=Tensor[(6, 220), float32] */;
  %609 = @func_5529(%608) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(11, 15, 8), float32], Tensor[(6, 220), float32]) */;
  %610 = @func_6759() /* ty=Tensor[(2, 16, 4), uint64] */;
  %611 = %609.0;
  (%610, %611, meta[relay.Constant][31] /* ty=Tensor[(1320), float32] */)
}

def @func_7489() -> Tensor[(360), float64] {
  @func_6939() /* ty=Tensor[(360), float64] */
}

def @func_4790() -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
  %612 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %613 = %612.0;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %615 = acos(%614) /* ty=Tensor[(2, 16, 4), float32] */;
  %616 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%615, %616)
}

def @func_3012() -> (Tensor[(2, 16, 4), uint64],) {
  %617 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%617,)
}

def @func_8335() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %618 = @func_8147() /* ty=Tensor[(2, 16, 4), uint64] */;
  %619 = cast(%618, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %620 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
  %621 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
  %622 = log(%619) /* ty=Tensor[(2, 16, 4), float32] */;
  (%620, %621, %622)
}

def @func_11372(%var_11362: Tensor[(12, 15, 6), float32]) -> Tensor[(12, 15, 6), float32] {
  %623 = cast(%var_11362, dtype="float32") /* ty=Tensor[(12, 15, 6), float32] */;
  exp(%623) /* ty=Tensor[(12, 15, 6), float32] */
}

def @func_10125(%var_10081: Tensor[(1, 15, 3), float32]) -> (Tensor[(1, 15, 3), float32], Tensor[(1, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(1, 15, 3), float64]) {
  %624 = cast(%var_10081, dtype="float32") /* ty=Tensor[(1, 15, 3), float32] */;
  %625 = cast(%var_10081, dtype="float32") /* ty=Tensor[(1, 15, 3), float32] */;
  %626 = cast(%var_10081, dtype="float64") /* ty=Tensor[(1, 15, 3), float64] */;
  %627 = sigmoid(%624) /* ty=Tensor[(1, 15, 3), float32] */;
  %628 = cosh(%625) /* ty=Tensor[(1, 15, 3), float32] */;
  %629 = @func_10074() /* ty=Tensor[(2, 16, 4), uint64] */;
  %630 = atanh(%626) /* ty=Tensor[(1, 15, 3), float64] */;
  (%627, %628, %629, %630)
}

def @func_6906(%var_6904: Tensor[(128), uint64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), float32], Tensor[(128), uint64]) {
  %631 = @func_6259() /* ty=(Tensor[(2, 16, 4), uint32], Tensor[(360), float64]) */;
  %632 = cast(%var_6904, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %633 = reshape(%632, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
  %634 = @func_1845(%633) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %635 = %631.1;
  %636 = %634.1;
  (%635, %636, %var_6904)
}

def @func_3579() -> Tensor[(2, 16, 4), uint64] {
  %637 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %637.0
}

def @func_380(%var_362: float32, %var_363: Tensor[(8, 32), float32]) -> (Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) {
  %638 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
  %639 = cosh(%638) /* ty=Tensor[(16, 3, 10), float64] */;
  %640 = cast(%639, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
  %641 = cast(%var_362, dtype="float32") /* ty=float32 */;
  %642 = cast(%var_363, dtype="float32") /* ty=Tensor[(8, 32), float32] */;
  %643 = reshape(%641, newshape=[]) /* ty=float32 */;
  %644 = reshape(%642, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), float32] */;
  %645 = rsqrt(%640) /* ty=Tensor[(16, 3, 10), float64] */;
  %646 = @func_232(%643, %644) /* ty=Tensor[(16, 2, 8), float32] */;
  (%645, %646, %var_362, %var_363)
}

def @func_3563(%var_3553: Tensor[(9, 14, 11), float64]) -> (Tensor[(9, 14, 11), uint8],) {
  %647 = cast(%var_3553, dtype="float64") /* ty=Tensor[(9, 14, 11), float64] */;
  %648 = cos(%647) /* ty=Tensor[(9, 14, 11), float64] */;
  %649 = cast(%var_3553, dtype="uint8") /* ty=Tensor[(9, 14, 11), uint8] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%648, dtype="uint8") /* ty=Tensor[(9, 14, 11), uint8] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %653 = minimum(%651, %652) /* ty=Tensor[(9, 14, 11), uint8] */;
  (%653,)
}

def @func_1653() -> (Tensor[(2, 16, 4), uint64],) {
  %654 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%654,)
}

def @func_5129() -> (Tensor[(2, 16, 4), uint64],) {
  %655 = @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%655,)
}

def @func_6096() -> (Tensor[(2, 16, 4), float64], Tensor[(48), float64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %656 = @func_3819() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %657 = %656.0;
  %658 = cast(%657, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %659 = cast(meta[relay.Constant][33] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %660 = reshape(%659, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float64] */;
  %661 = @func_3503(%660) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64], Tensor[(2, 16, 4), uint64]) */;
  %662 = @func_5206() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %663 = exp(%658) /* ty=Tensor[(2, 16, 4), float64] */;
  %664 = %661.4;
  %665 = %662.0;
  (%663, %664, meta[relay.Constant][33] /* ty=Tensor[(360), float64] */, %665)
}

def @func_7153() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %666 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %667 = %666.1;
  %668 = @func_6581() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%667, %668)
}

def @func_10775(%var_10737: Tensor[(1320), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), float64], Tensor[(300), float32], Tensor[(2025), float64]) {
  %669 = @func_8518() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %670 = %669.1;
  %671 = cast(%670, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %672 = reshape(%671, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), float32] */;
  %673 = @func_7761(%672) /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float64]) */;
  %674 = @func_6271() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %675 = cast(%var_10737, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %676 = reshape(%675, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float32] */;
  %677 = cast(meta[relay.Constant][34] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %678 = cast(meta[relay.Constant][35] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %679 = reshape(%677, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
  %680 = reshape(%678, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %681 = @func_2220(%679, %680) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(15, 15, 9), float64], Tensor[(2025), float64]) */;
  %682 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  %683 = %673.1;
  %684 = %674.0;
  %685 = @func_2305(%676) /* ty=Tensor[(11, 15, 8), float32] */;
  %686 = %681.2;
  (%682, %670, %683, %684, %685, %var_10737, %686, meta[relay.Constant][34] /* ty=Tensor[(300), float32] */, meta[relay.Constant][35] /* ty=Tensor[(2025), float64] */)
}

def @func_10139() -> Tensor[(2, 16, 4), uint64] {
  %687 = @func_9328() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %687.0
}

def @func_12850() -> Tensor[(2, 16, 4), uint64] {
  @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_3391() -> Tensor[(360), float64] {
  @func_1597() /* ty=Tensor[(360), float64] */
}

def @func_3184(%var_3179: Tensor[(2, 16, 4), uint64]) -> (Tensor[(2, 16, 4), uint16],) {
  %688 = @func_3012() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %689 = %688.0;
  %690 = cast(%var_3179, dtype="uint16") /* ty=Tensor[(2, 16, 4), uint16] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="uint16") /* ty=Tensor[(2, 16, 4), uint16] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %694 = left_shift(%692, %693) /* ty=Tensor[(2, 16, 4), uint16] */;
  (%694,)
}

def @func_2912(%var_2893: Tensor[(14, 15, 2), uint8]) -> (Tensor[(14, 15, 2), uint8], Tensor[(14, 15, 2), bool]) {
  %695 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 15, 1), uint8] */, dtype="uint8") /* ty=Tensor[(14, 15, 1), uint8] */;
  %696 = cast(%var_2893, dtype="uint8") /* ty=Tensor[(14, 15, 2), uint8] */;
  %697 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 15, 2), uint8] */, dtype="bool") /* ty=Tensor[(14, 15, 2), bool] */;
  %698 = shape_of(%var_2893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%var_2893, dtype="bool") /* ty=Tensor[(14, 15, 2), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %701 = multiply(%695, %696) /* ty=Tensor[(14, 15, 2), uint8] */;
  %702 = logical_or(%699, %700) /* ty=Tensor[(14, 15, 2), bool] */;
  (%701, %702)
}

def @func_6878() -> Tensor[(2, 16, 4), uint64] {
  @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_9131() -> (Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1, 1386), float64], Tensor[(360), float64], Tensor[(2025), float64]) {
  %703 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 1386), float64] */, dtype="float64") /* ty=Tensor[(1, 1386), float64] */;
  %704 = reshape(%703, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float64] */;
  %705 = @func_3563(%704) /* ty=(Tensor[(9, 14, 11), uint8],) */;
  %706 = cast(meta[relay.Constant][39] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %707 = reshape(%706, newshape=[9, 225]) /* ty=Tensor[(9, 225), float64] */;
  %708 = @func_6520(%707) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(9, 225), float64], Tensor[(14, 15, 2), bool], Tensor[(5, 84), uint8]) */;
  %709 = @func_3579() /* ty=Tensor[(2, 16, 4), uint64] */;
  %710 = %705.0;
  %711 = %708.0;
  (%709, %710, meta[relay.Constant][38] /* ty=Tensor[(1, 1386), float64] */, %711, meta[relay.Constant][39] /* ty=Tensor[(2025), float64] */)
}

def @func_13065() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(13, 2, 13), float32], Tensor[(338, 1), float32]) {
  %712 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %713 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %714 = cast(meta[relay.Constant][40] /* ty=Tensor[(338, 1), float32] */, dtype="float32") /* ty=Tensor[(338, 1), float32] */;
  %715 = reshape(%714, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), float32] */;
  %716 = @func_6724(%715) /* ty=(Tensor[(13, 2, 13), float32],) */;
  %717 = @func_4834() /* ty=Tensor[(2, 16, 4), uint64] */;
  %718 = %712.0;
  %719 = %713.1;
  %720 = %716.0;
  (%717, %718, %719, %720, meta[relay.Constant][40] /* ty=Tensor[(338, 1), float32] */)
}

def @func_3745() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %721 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %722 = @func_1798() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */;
  %723 = %721.0;
  %724 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %725 = %722.0;
  (%723, %724, %725)
}

def @func_12795() -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64]) {
  %726 = @func_6199() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %727 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %728 = cast(meta[relay.Constant][41] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %729 = reshape(%728, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %730 = @func_1639(%729) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %731 = %730.3;
  %732 = cast(%731, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %733 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %734 = %726.1;
  %735 = %727.0;
  %736 = exp(%732) /* ty=Tensor[(7, 15, 3), float32] */;
  %737 = %733.0;
  (%734, meta[relay.Constant][41] /* ty=Tensor[(2025), float64] */, %735, %736, %737)
}

def @func_4834() -> Tensor[(2, 16, 4), uint64] {
  @func_3847() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5529(%var_5496: Tensor[(6, 220), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(11, 15, 8), float32], Tensor[(6, 220), float32]) {
  %738 = @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */;
  %739 = cast(%var_5496, dtype="float32") /* ty=Tensor[(6, 220), float32] */;
  %740 = reshape(%739, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float32] */;
  %741 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
  %742 = %738.2;
  %743 = @func_2305(%740) /* ty=Tensor[(11, 15, 8), float32] */;
  (%741, %742, %743, %var_5496)
}

def @func_7233(%var_7169: Tensor[(6, 3, 8), int32], %var_7170: Tensor[(6, 3, 8), int32], %var_7215: float32, %var_7216: Tensor[(256), float32]) -> (Tensor[(6, 3, 8), int32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(6, 3, 8), float64], Tensor[(2, 16, 4), uint64]) {
  %744 = cast(%var_7170, dtype="int32") /* ty=Tensor[(6, 3, 8), int32] */;
  %745 = shape_of(%var_7169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%var_7169, dtype="int32") /* ty=Tensor[(6, 3, 8), int32] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %748 = @func_6573() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %749 = cast(%var_7215, dtype="float32") /* ty=float32 */;
  %750 = cast(%var_7216, dtype="float32") /* ty=Tensor[(256), float32] */;
  %751 = reshape(%749, newshape=[]) /* ty=float32 */;
  %752 = reshape(%750, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), float32] */;
  %753 = cast(%var_7170, dtype="float32") /* ty=Tensor[(6, 3, 8), float32] */;
  %754 = atanh(%753) /* ty=Tensor[(6, 3, 8), float32] */;
  %755 = cast(%754, dtype="float64") /* ty=Tensor[(6, 3, 8), float64] */;
  %756 = right_shift(%746, %747) /* ty=Tensor[(6, 3, 8), int32] */;
  %757 = @func_6878() /* ty=Tensor[(2, 16, 4), uint64] */;
  %758 = %748.0;
  %759 = @func_232(%751, %752) /* ty=Tensor[(16, 2, 8), float32] */;
  %760 = exp(%755) /* ty=Tensor[(6, 3, 8), float64] */;
  %761 = @func_4035() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%756, %757, %758, %759, %var_7215, %var_7216, %760, %761)
}

def @func_13112() -> (Tensor[(360), float64], Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float32]) {
  %762 = @func_11278() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %763 = @func_8518() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %764 = @func_3391() /* ty=Tensor[(360), float64] */;
  %765 = %762.0;
  %766 = %763.0;
  (%764, %765, %766)
}

def @func_13161(%var_13144: Tensor[(3, 7, 16), uint32], %var_13145: Tensor[(3, 7, 16), uint32]) -> (Tensor[(3, 7, 16), uint32], Tensor[(3, 7, 16), float32], Tensor[(2, 16, 4), float32]) {
  %767 = cast(%var_13145, dtype="uint32") /* ty=Tensor[(3, 7, 16), uint32] */;
  %768 = shape_of(%var_13144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%var_13144, dtype="uint32") /* ty=Tensor[(3, 7, 16), uint32] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %771 = cast(%var_13145, dtype="float64") /* ty=Tensor[(3, 7, 16), float64] */;
  %772 = sinh(%771) /* ty=Tensor[(3, 7, 16), float64] */;
  %773 = cast(%772, dtype="float32") /* ty=Tensor[(3, 7, 16), float32] */;
  %774 = bitwise_xor(%769, %770) /* ty=Tensor[(3, 7, 16), uint32] */;
  %775 = sigmoid(%773) /* ty=Tensor[(3, 7, 16), float32] */;
  %776 = @func_5820() /* ty=Tensor[(2, 16, 4), float32] */;
  (%774, %775, %776)
}

def @func_7435() -> (Tensor[(2, 16, 4), uint64],) {
  %777 = @func_2079() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%777,)
}

def @func_4247(%var_4229: float64, %var_4230: Tensor[(1, 2, 6), float64], %var_4238: Tensor[(4, 2, 6), float64]) -> (Tensor[(1, 2, 6), bool], Tensor[(4, 2, 6), bool]) {
  %778 = cast(%var_4229, dtype="bool") /* ty=bool */;
  %779 = cast(%var_4230, dtype="bool") /* ty=Tensor[(1, 2, 6), bool] */;
  %780 = cast(%var_4230, dtype="bool") /* ty=Tensor[(1, 2, 6), bool] */;
  %781 = cast(%var_4238, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %782 = less(%778, %779) /* ty=Tensor[(1, 2, 6), bool] */;
  %783 = not_equal(%780, %781) /* ty=Tensor[(4, 2, 6), bool] */;
  (%782, %783)
}

def @func_9328() -> (Tensor[(2, 16, 4), uint64],) {
  %784 = @func_6573() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %785 = %784.0;
  (%785,)
}

def @func_11644() -> Tensor[(2, 16, 4), float32] {
  %786 = @func_6573() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  atanh(%788) /* ty=Tensor[(2, 16, 4), float32] */
}

def @func_11925() -> Tensor[(2, 16, 4), uint64] {
  @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_10276(%var_10269: Tensor[(48, 1), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(48, 1), float32], Tensor[(1386), float64]) {
  %789 = @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %790 = cast(%var_10269, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %791 = cast(meta[relay.Constant][42] /* ty=Tensor[(1386), float64] */, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %792 = reshape(%790, newshape=[16, 3, 1]) /* ty=Tensor[(16, 3, 1), float32] */;
  %793 = reshape(%791, newshape=[1386]) /* ty=Tensor[(1386), float64] */;
  %794 = @func_8218(%792, %793) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(48), float64]) */;
  %795 = %789.0;
  %796 = %794.2;
  (%795, %796, %var_10269, meta[relay.Constant][42] /* ty=Tensor[(1386), float64] */)
}

def @func_6653() -> (Tensor[(2, 16, 4), float32],) {
  %797 = @func_5820() /* ty=Tensor[(2, 16, 4), float32] */;
  (%797,)
}

def @func_2079() -> Tensor[(2, 16, 4), uint64] {
  %798 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %798.0
}

def @func_1295() -> Tensor[(2, 16, 4), uint64] {
  %799 = cast(meta[relay.Constant][43] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %800 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 16, 4), uint64] */, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
  bitwise_xor(%799, %800) /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4158() -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
  %801 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %802 = %801.0;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %804 = @func_3819() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %805 = sigmoid(%803) /* ty=Tensor[(2, 16, 4), float32] */;
  %806 = %804.0;
  (%805, %806)
}

def @func_5911() -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %807 = @func_3819() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %808 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %809 = @func_4806() /* ty=Tensor[(2, 16, 4), uint64] */;
  %810 = @func_3391() /* ty=Tensor[(360), float64] */;
  %811 = %807.0;
  %812 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %813 = %808.0;
  (%809, %810, %811, %812, %813)
}

def @func_12832() -> (Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(27, 75), float64], Tensor[(315, 1), float32]) {
  %814 = @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */;
  %815 = cast(meta[relay.Constant][45] /* ty=Tensor[(27, 75), float64] */, dtype="float64") /* ty=Tensor[(27, 75), float64] */;
  %816 = cast(meta[relay.Constant][46] /* ty=Tensor[(315, 1), float32] */, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %817 = reshape(%815, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %818 = reshape(%816, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %819 = @func_2190(%817, %818) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %820 = %814.1;
  %821 = %819.4;
  (%820, %821, meta[relay.Constant][45] /* ty=Tensor[(27, 75), float64] */, meta[relay.Constant][46] /* ty=Tensor[(315, 1), float32] */)
}

def @func_729(%var_719: Tensor[(15, 15, 9), float64]) -> Tensor[(15, 15, 9), float64] {
  %822 = cast(%var_719, dtype="float64") /* ty=Tensor[(15, 15, 9), float64] */;
  rsqrt(%822) /* ty=Tensor[(15, 15, 9), float64] */
}

def @func_1010(%var_1000: Tensor[(7, 15, 3), float32], %var_1003: Tensor[(7, 15, 3), float32]) -> Tensor[(7, 15, 3), float64] {
  %823 = cast(%var_1000, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %824 = atanh(%823) /* ty=Tensor[(7, 15, 3), float32] */;
  %825 = cast(%var_1003, dtype="float64") /* ty=Tensor[(7, 15, 3), float64] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="float64") /* ty=Tensor[(7, 15, 3), float64] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%827, %828) /* ty=Tensor[(7, 15, 3), float64] */
}

def @func_8664() -> Tensor[(2, 16, 4), uint32] {
  @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */
}

def @func_9538() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %829 = @func_8018() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %830 = @func_4600() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %831 = %829.0;
  %832 = %830.1;
  (%831, %832)
}

def @func_8518() -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
  %833 = @func_1798() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */;
  %834 = @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %835 = %833.0;
  %836 = %834.0;
  (%835, %836)
}

def @func_6759() -> Tensor[(2, 16, 4), uint64] {
  %837 = @func_3745() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %837.1
}

def @func_9682(%var_9658: Tensor[(105, 3), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(4, 15, 1), float64], Tensor[(105, 3), float32], Tensor[(135, 15), float64], Tensor[(2, 16, 4), uint32]) {
  %838 = cast(%var_9658, dtype="float32") /* ty=Tensor[(105, 3), float32] */;
  %839 = reshape(%838, newshape=[1, 315]) /* ty=Tensor[(1, 315), float32] */;
  %840 = @func_7954(%839) /* ty=(Tensor[(360), float64], Tensor[(4, 15, 1), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], float32, Tensor[(2, 16, 4), bool], Tensor[(135, 15), float64], Tensor[(1, 315), float32]) */;
  %841 = %840.7;
  %842 = cast(%841, dtype="float64") /* ty=Tensor[(135, 15), float64] */;
  %843 = @func_8348() /* ty=Tensor[(2, 16, 4), uint64] */;
  %844 = @func_7827() /* ty=Tensor[(4, 15, 1), float64] */;
  %845 = acos(%842) /* ty=Tensor[(135, 15), float64] */;
  %846 = @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */;
  (%843, %844, %var_9658, %845, %846)
}

def @func_1698() -> Tensor[(2, 16, 4), uint64] {
  @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5972() -> Tensor[(2, 16, 4), uint32] {
  %847 = @func_5020() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %848 = %847.0;
  %849 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 16, 4), uint64] */, dtype="uint32") /* ty=Tensor[(2, 16, 4), uint32] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="uint32") /* ty=Tensor[(2, 16, 4), uint32] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%851, %852) /* ty=Tensor[(2, 16, 4), uint32] */
}

def @func_6679() -> Tensor[(2, 16, 4), uint64] {
  @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_2220(%var_2204: Tensor[(15, 10, 2), float32], %var_2210: Tensor[(2025), float64]) -> (Tensor[(15, 10, 2), float32], Tensor[(15, 15, 9), float64], Tensor[(2025), float64]) {
  %853 = cast(%var_2204, dtype="float32") /* ty=Tensor[(15, 10, 2), float32] */;
  %854 = cast(%var_2210, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %855 = reshape(%854, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %856 = @func_1639(%855) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %857 = atanh(%853) /* ty=Tensor[(15, 10, 2), float32] */;
  %858 = %856.1;
  (%857, %858, %var_2210)
}

def @func_9806() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %859 = @func_9328() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %860 = %859.0;
  %861 = @func_3986() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%860, %861)
}

def @func_8458(%var_8401: Tensor[(7, 1, 3), uint8], %var_8402: Tensor[(7, 13, 3), uint8]) -> (Tensor[(7, 13, 3), uint8], Tensor[(1728), int64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 12, 9), float64], Tensor[(360), float64]) {
  %862 = cast(%var_8401, dtype="uint8") /* ty=Tensor[(7, 1, 3), uint8] */;
  %863 = cast(%var_8402, dtype="uint8") /* ty=Tensor[(7, 13, 3), uint8] */;
  %864 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %865 = cast(meta[relay.Constant][48] /* ty=Tensor[(1728), int64] */, dtype="int64") /* ty=Tensor[(1728), int64] */;
  %866 = cast(meta[relay.Constant][48] /* ty=Tensor[(1728), int64] */, dtype="int64") /* ty=Tensor[(1728), int64] */;
  %867 = reshape(%865, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), int64] */;
  %868 = reshape(%866, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), int64] */;
  %869 = @func_6960(%867, %868) /* ty=(Tensor[(16, 12, 9), int64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %870 = %869.0;
  %871 = cast(%870, dtype="float64") /* ty=Tensor[(16, 12, 9), float64] */;
  %872 = @func_4959() /* ty=(Tensor[(360), float64],) */;
  %873 = multiply(%862, %863) /* ty=Tensor[(7, 13, 3), uint8] */;
  %874 = %864.0;
  %875 = @func_8348() /* ty=Tensor[(2, 16, 4), uint64] */;
  %876 = sigmoid(%871) /* ty=Tensor[(16, 12, 9), float64] */;
  %877 = %872.0;
  (%873, meta[relay.Constant][48] /* ty=Tensor[(1728), int64] */, %874, %875, %876, %877)
}

def @func_13181(%var_13175: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) {
  %878 = cast(%var_13175, dtype="float64") /* ty=Tensor[(48), float64] */;
  %879 = reshape(%878, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %880 = @func_4035() /* ty=Tensor[(2, 16, 4), uint64] */;
  %881 = @func_2634(%879) /* ty=Tensor[(2, 3, 8), int8] */;
  (%880, %881, %var_13175)
}

def @func_13289() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %882 = @func_9328() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %883 = @func_12795() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64]) */;
  %884 = %882.0;
  %885 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
  %886 = %883.0;
  (%884, %885, %886)
}

def @func_5020() -> (Tensor[(2, 16, 4), uint64],) {
  %887 = @func_3129() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) */;
  %888 = %887.0;
  (%888,)
}

def @func_11831() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %889 = @func_8928() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %890 = @func_11800() /* ty=Tensor[(2, 16, 4), uint64] */;
  %891 = %889.0;
  %892 = @func_11138() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%890, %891, %892)
}

def @func_11278() -> (Tensor[(2, 16, 4), float32],) {
  %893 = @func_9282() /* ty=Tensor[(2, 16, 4), float32] */;
  (%893,)
}

def @func_1946() -> Tensor[(2, 16, 4), uint64] {
  @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_11428(%var_11415: Tensor[(7, 3, 12), int32]) -> Tensor[(7, 3, 12), float64] {
  %894 = cast(%var_11415, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %895 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(7, 3, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 3, 12), int32] */, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = not_equal(%896, %897) /* ty=Tensor[(7, 3, 12), bool] */;
  %899 = cast(%var_11415, dtype="float64") /* ty=Tensor[(7, 3, 12), float64] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%898, dtype="float64") /* ty=Tensor[(7, 3, 12), float64] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%901, %902) /* ty=Tensor[(7, 3, 12), float64] */
}

def @func_11800() -> Tensor[(2, 16, 4), uint64] {
  %903 = @func_7435() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %903.0
}

def @func_2816() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %904 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %905 = @func_2079() /* ty=Tensor[(2, 16, 4), uint64] */;
  %906 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  %907 = %904.1;
  (%905, %906, %907)
}

def @func_8147() -> Tensor[(2, 16, 4), uint64] {
  @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_3671(%var_3630: Tensor[(1, 2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(1, 2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %908 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
  %909 = cast(%908, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
  %910 = reshape(%909, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
  %911 = @func_1845(%910) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %912 = cast(%var_3630, dtype="float64") /* ty=Tensor[(1, 2025), float64] */;
  %913 = reshape(%912, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %914 = @func_2426(%913) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(15, 10, 2), float32], Tensor[(300), float32], Tensor[(2025), float64]) */;
  %915 = cast(%908, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %916 = %911.0;
  %917 = %914.5;
  %918 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
  %919 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
  %920 = cos(%915) /* ty=Tensor[(2, 16, 4), float32] */;
  (%916, %917, %var_3630, %918, %919, %920)
}

def @func_8348() -> Tensor[(2, 16, 4), uint64] {
  @func_8147() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_12336() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %921 = @func_10319() /* ty=Tensor[(2, 16, 4), uint64] */;
  %922 = @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%921, %922)
}

def @func_2038(%var_2018: float32) -> (Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), bool], Tensor[(16, 3, 10), float64], float32, Tensor[(8, 32), float32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %923 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %924 = %923.0;
  %925 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %926 = %925.0;
  %927 = cast(%926, dtype="int16") /* ty=Tensor[(2, 16, 4), int16] */;
  %928 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%924, dtype="int16") /* ty=Tensor[(2, 16, 4), int16] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %931 = bitwise_and(%929, %930) /* ty=Tensor[(2, 16, 4), int16] */;
  %932 = cast(%931, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %933 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%924, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %936 = cast(%926, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %937 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%924, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %940 = cast(%var_2018, dtype="float32") /* ty=float32 */;
  %941 = cast(meta[relay.Constant][50] /* ty=Tensor[(8, 32), float32] */, dtype="float32") /* ty=Tensor[(8, 32), float32] */;
  %942 = reshape(%940, newshape=[]) /* ty=float32 */;
  %943 = reshape(%941, newshape=[8, 32]) /* ty=Tensor[(8, 32), float32] */;
  %944 = @func_380(%942, %943) /* ty=(Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) */;
  %945 = logical_and(%934, %935) /* ty=Tensor[(2, 16, 4), bool] */;
  %946 = logical_or(%938, %939) /* ty=Tensor[(2, 16, 4), bool] */;
  %947 = %944.0;
  %948 = @func_1597() /* ty=Tensor[(360), float64] */;
  %949 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%945, %946, %947, %var_2018, meta[relay.Constant][50] /* ty=Tensor[(8, 32), float32] */, %948, %949)
}

def @func_7717(%var_7710: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %950 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %951 = cast(%var_7710, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %952 = reshape(%951, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %953 = @func_1639(%952) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %954 = %950.1;
  %955 = %953.2;
  (%954, %955, %var_7710)
}

def @func_12450() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
  %956 = @func_5710() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) */;
  %957 = %956.0;
  %958 = cast(%957, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
  %959 = reshape(%958, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
  %960 = @func_4195(%959) /* ty=Tensor[(2, 16, 4), float64] */;
  (%957, %960)
}

def @func_3969(%var_3916: Tensor[(256), float32]) -> (Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %961 = cast(7.85965f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %962 = cast(%var_3916, dtype="float32") /* ty=Tensor[(256), float32] */;
  %963 = reshape(%961, newshape=[]) /* ty=float32 */;
  %964 = reshape(%962, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), float32] */;
  %965 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %966 = @func_3050() /* ty=Tensor[(2, 16, 4), uint64] */;
  %967 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %968 = %967.0;
  %969 = cast(%968, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %970 = shape_of(%966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%966, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %973 = @func_3819() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %974 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %975 = %974.4;
  %976 = cast(%975, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %977 = sigmoid(%976) /* ty=Tensor[(7, 15, 3), float32] */;
  %978 = cast(%977, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %979 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %980 = @func_232(%963, %964) /* ty=Tensor[(16, 2, 8), float32] */;
  %981 = %965.0;
  %982 = mod(%971, %972) /* ty=Tensor[(2, 16, 4), float64] */;
  %983 = %973.0;
  %984 = log(%978) /* ty=Tensor[(7, 15, 3), float32] */;
  %985 = %979.2;
  %986 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%980, 7.85965f /* ty=float32 */, %var_3916, %981, %982, %983, %984, %985, %986)
}

def @func_9212() -> (Tensor[(1, 15, 9), float64],) {
  %987 = @func_7731() /* ty=(Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) */;
  %988 = %987.0;
  (%988,)
}

def @func_2733() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %989 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %990 = %989.1;
  %991 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%990, %991)
}

def @func_3503(%var_3434: Tensor[(4, 10, 9), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64], Tensor[(2, 16, 4), uint64]) {
  %992 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %993 = %992.7;
  %994 = cast(%var_3434, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%993, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %998 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %999 = cast(meta[relay.Constant][51] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1000 = reshape(%999, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %1001 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %1002 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %1003 = divide(%996, %997) /* ty=Tensor[(4, 10, 9), float64] */;
  %1004 = %998.0;
  %1005 = @func_2634(%1000) /* ty=Tensor[(2, 3, 8), int8] */;
  %1006 = %1001.0;
  (%1002, %1003, %1004, %1005, meta[relay.Constant][51] /* ty=Tensor[(48), float64] */, %1006)
}

def @func_7338() -> Tensor[(2, 16, 4), uint64] {
  @func_5295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5933() -> Tensor[(360), float64] {
  %1007 = @func_4959() /* ty=(Tensor[(360), float64],) */;
  %1007.0
}

def @func_11987(%var_11981: float32) -> (Tensor[(360), float64], Tensor[(273), uint8], float32, Tensor[(520), uint16], float32) {
  %1008 = @func_8492() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(21), uint8], Tensor[(273), uint8]) */;
  %1009 = cast(meta[relay.Constant][52] /* ty=Tensor[(520), uint16] */, dtype="uint16") /* ty=Tensor[(520), uint16] */;
  %1010 = cast(%var_11981, dtype="float32") /* ty=float32 */;
  %1011 = reshape(%1009, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint16] */;
  %1012 = reshape(%1010, newshape=[]) /* ty=float32 */;
  %1013 = @func_2459(%1011, %1012) /* ty=(Tensor[(8, 13, 5), uint16], Tensor[(8, 32), float32], float32) */;
  %1014 = @func_6939() /* ty=Tensor[(360), float64] */;
  %1015 = %1008.4;
  %1016 = %1013.2;
  (%1014, %1015, %1016, meta[relay.Constant][52] /* ty=Tensor[(520), uint16] */, %var_11981)
}

def @func_12550() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %1017 = @func_8335() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %1018 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %1019 = %1017.0;
  %1020 = %1018.0;
  %1021 = @func_4806() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%1019, %1020, %1021)
}

def @func_10239(%var_10178: Tensor[(2025), float64], %var_10234: Tensor[(144), int32], %var_10236: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(192), uint32], Tensor[(15, 15, 9), bool], Tensor[(2, 16, 4), uint64], Tensor[(144), int32], float32, Tensor[(256), float32]) {
  %1022 = @func_7521() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %1023 = cast(meta[relay.Constant][53] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %1024 = cast(meta[relay.Constant][53] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %1025 = cast(%var_10178, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1026 = reshape(%1023, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), uint32] */;
  %1027 = reshape(%1024, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), uint32] */;
  %1028 = reshape(%1025, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1029 = @func_3299(%1026, %1027, %1028) /* ty=(Tensor[(6, 2, 16), uint32], Tensor[(6, 2, 16), bool], Tensor[(15, 15, 9), int16], Tensor[(15, 15, 9), bool]) */;
  %1030 = %1029.2;
  %1031 = cast(%var_10178, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %1032 = shape_of(%1030, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1033 = cast(%1030, dtype="bool") /* ty=Tensor[(15, 15, 9), bool] */;
  %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1035 = cast(%var_10234, dtype="int32") /* ty=Tensor[(144), int32] */;
  %1036 = cast(%var_10234, dtype="int32") /* ty=Tensor[(144), int32] */;
  %1037 = cast(4.02461f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1038 = cast(%var_10236, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1039 = reshape(%1035, newshape=[6, 3, 8]) /* ty=Tensor[(6, 3, 8), int32] */;
  %1040 = reshape(%1036, newshape=[6, 3, 8]) /* ty=Tensor[(6, 3, 8), int32] */;
  %1041 = reshape(%1037, newshape=[]) /* ty=float32 */;
  %1042 = reshape(%1038, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %1043 = @func_7233(%1039, %1040, %1041, %1042) /* ty=(Tensor[(6, 3, 8), int32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(6, 3, 8), float64], Tensor[(2, 16, 4), uint64]) */;
  %1044 = %1022.1;
  %1045 = less_equal(%1033, %1034) /* ty=Tensor[(15, 15, 9), bool] */;
  %1046 = %1043.7;
  (%1044, meta[relay.Constant][53] /* ty=Tensor[(192), uint32] */, %1045, %1046, %var_10234, 4.02461f /* ty=float32 */, %var_10236)
}

def @func_2305(%var_2300: Tensor[(11, 15, 8), float32]) -> Tensor[(11, 15, 8), float32] {
  %1047 = cast(%var_2300, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  acos(%1047) /* ty=Tensor[(11, 15, 8), float32] */
}

def @func_5206() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %1048 = @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %1049 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %1050 = %1048.0;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_12161() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
  %1052 = @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */;
  %1053 = cast(%1052, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
  %1054 = reshape(%1053, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
  %1055 = @func_5933() /* ty=Tensor[(360), float64] */;
  %1056 = @func_4195(%1054) /* ty=Tensor[(2, 16, 4), float64] */;
  (%1055, %1052, %1056)
}

def @func_13022() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %1057 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %1058 = @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */;
  %1059 = %1057.0;
  (%1058, %1059)
}

def @func_6271() -> (Tensor[(2, 16, 4), uint64],) {
  %1060 = @func_6199() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %1061 = %1060.1;
  (%1061,)
}

def @func_6199() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %1062 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %1063 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %1064 = %1062.1;
  %1065 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %1066 = %1063.0;
  (%1064, %1065, %1066)
}

def @func_11155(%var_11146: Tensor[(9, 14, 9), int32]) -> Tensor[(9, 14, 9), int32] {
  %1067 = cast(meta[relay.Constant][54] /* ty=Tensor[(9, 14, 9), int32] */, dtype="int32") /* ty=Tensor[(9, 14, 9), int32] */;
  %1068 = shape_of(%var_11146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%var_11146, dtype="int32") /* ty=Tensor[(9, 14, 9), int32] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_or(%1069, %1070) /* ty=Tensor[(9, 14, 9), int32] */
}

def @func_1064(%var_1060: Tensor[(4, 10, 9), float64]) -> (Tensor[(4, 10, 9), float64],) {
  %1071 = cast(%var_1060, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
  %1072 = log(%1071) /* ty=Tensor[(4, 10, 9), float64] */;
  (%1072,)
}

def @func_6615(%var_6606: Tensor[(12), float64], %var_6607: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(48), float64], float64, Tensor[(12), float64], Tensor[(48), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  %1073 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %1074 = cast(-8.25889f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1075 = cast(%var_6606, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1076 = cast(%var_6607, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1077 = reshape(%1074, newshape=[]) /* ty=float64 */;
  %1078 = reshape(%1075, newshape=[1, 12]) /* ty=Tensor[(1, 12), float64] */;
  %1079 = reshape(%1076, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1080 = @func_5589(%1077, %1078, %1079) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(1, 2, 6), bool], float64, Tensor[(1, 12), float64], Tensor[(48), float64], Tensor[(4, 15, 1), float64]) */;
  %1081 = cast(meta[relay.Constant][55] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1082 = cast(meta[relay.Constant][55] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1083 = reshape(%1081, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %1084 = reshape(%1082, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %1085 = %1073.1;
  %1086 = %1080.6;
  %1087 = @func_1010(%1083, %1084) /* ty=Tensor[(7, 15, 3), float64] */;
  (%1085, %1086, -8.25889f64 /* ty=float64 */, %var_6606, %var_6607, %1087, meta[relay.Constant][55] /* ty=Tensor[(315), float32] */)
}

def @func_7731() -> (Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) {
  %1088 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 9), float64] */;
  %1089 = @func_4476() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(2, 16, 4), uint64]) */;
  %1090 = asinh(%1088) /* ty=Tensor[(1, 15, 9), float64] */;
  %1091 = %1089.2;
  (%1090, %1091)
}

def @func_2459(%var_2449: Tensor[(8, 13, 5), uint16], %var_2455: float32) -> (Tensor[(8, 13, 5), uint16], Tensor[(8, 32), float32], float32) {
  %1092 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 13, 5), uint16] */, dtype="uint16") /* ty=Tensor[(8, 13, 5), uint16] */;
  %1093 = shape_of(%var_2449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%var_2449, dtype="uint16") /* ty=Tensor[(8, 13, 5), uint16] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1096 = cast(%var_2455, dtype="float32") /* ty=float32 */;
  %1097 = reshape(%1096, newshape=[]) /* ty=float32 */;
  %1098 = @func_2038(%1097) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), bool], Tensor[(16, 3, 10), float64], float32, Tensor[(8, 32), float32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %1099 = add(%1094, %1095) /* ty=Tensor[(8, 13, 5), uint16] */;
  %1100 = %1098.4;
  (%1099, %1100, %var_2455)
}

def @func_8018() -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %1101 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %1102 = @func_4298() /* ty=(Tensor[(360), float64],) */;
  %1103 = %1101.0;
  %1104 = cast(%1103, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
  %1105 = reshape(%1104, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
  %1106 = @func_1845(%1105) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %1107 = %1102.0;
  %1108 = %1106.0;
  (%1103, %1107, %1108)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1362(%var_1360: float32, %var_1361: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32]) {
  %7 = fn (%var_1308: float32, %var_1309: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32]) {
    %0 = cast(%var_1308, dtype="float32") /* ty=float32 */;
    %1 = cast(%var_1309, dtype="float32") /* ty=Tensor[(256), float32] */;
    %2 = reshape(%0, newshape=[]) /* ty=float32 */;
    %3 = reshape(%1, newshape=[8, 32]) /* ty=Tensor[(8, 32), float32] */;
    %4 = @func_380(%2, %3) /* ty=(Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) */;
    %5 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
    %6 = %4.2;
    (%5, %6, %var_1308, %var_1309)
  };
  %7(%var_1360, %var_1361) /* ty=(Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32]) */
}

def @func_13024() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_13022() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_5794() -> Tensor[(2, 16, 4), uint64] {
  @func_5792() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5911() -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %8 = @func_3819() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %9 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %10 = @func_4806() /* ty=Tensor[(2, 16, 4), uint64] */;
  %11 = @func_3391() /* ty=Tensor[(360), float64] */;
  %12 = %8.0;
  %13 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %14 = %9.0;
  (%10, %11, %12, %13, %14)
}

def @func_3986() -> Tensor[(2, 16, 4), uint64] {
  @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6273() -> (Tensor[(2, 16, 4), uint64],) {
  @func_6271() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_13067() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(13, 2, 13), float32], Tensor[(338, 1), float32]) {
  @func_13065() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(13, 2, 13), float32], Tensor[(338, 1), float32]) */
}

def @func_8221(%var_8219: Tensor[(16, 3, 1), float32], %var_8220: Tensor[(1386), float64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(48), float64]) {
  %31 = fn (%var_8163: Tensor[(16, 3, 1), float32], %var_8212: Tensor[(1386), float64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(48), float64]) {
    %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %16 = reshape(%15, newshape=[9, 225]) /* ty=Tensor[(9, 225), float64] */;
    %17 = @func_6520(%16) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(9, 225), float64], Tensor[(14, 15, 2), bool], Tensor[(5, 84), uint8]) */;
    %18 = cast(%var_8163, dtype="float32") /* ty=Tensor[(16, 3, 1), float32] */;
    %19 = atan(%18) /* ty=Tensor[(16, 3, 1), float32] */;
    %20 = cast(%19, dtype="bool") /* ty=Tensor[(16, 3, 1), bool] */;
    %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(2025), float64] */, dtype="bool") /* ty=Tensor[(2025), bool] */;
    %22 = cast(%var_8212, dtype="float64") /* ty=Tensor[(1386), float64] */;
    %23 = reshape(%22, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float64] */;
    %24 = @func_3563(%23) /* ty=(Tensor[(9, 14, 11), uint8],) */;
    %25 = @func_6096() /* ty=(Tensor[(2, 16, 4), float64], Tensor[(48), float64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %26 = @func_1597() /* ty=Tensor[(360), float64] */;
    %27 = %17.1;
    %28 = less_equal(%20, %21) /* ty=Tensor[(16, 3, 2025), bool] */;
    %29 = %24.0;
    %30 = %25.1;
    (%26, %27, %28, %29, %var_8212, %30)
  };
  %31(%var_8219, %var_8220) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(48), float64]) */
}

def @func_10279(%var_10277: Tensor[(48, 1), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(48, 1), float32], Tensor[(1386), float64]) {
  @func_10276(%var_10277) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(48, 1), float32], Tensor[(1386), float64]) */
}

def @func_5242() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) {
  %32 = @func_4959() /* ty=(Tensor[(360), float64],) */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %34 = reshape(%33, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %35 = @func_3969(%34) /* ty=(Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %36 = %32.0;
  %37 = %35.3;
  (%36, %37, meta[relay.Constant][1] /* ty=Tensor[(256), float32] */)
}

def @func_3013() -> (Tensor[(2, 16, 4), uint64],) {
  %39 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %38 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%38,)
  };
  %39() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_10075() -> Tensor[(2, 16, 4), uint64] {
  %40 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %40() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6960(%var_6942: Tensor[(16, 12, 9), int64], %var_6943: Tensor[(16, 12, 9), int64]) -> (Tensor[(16, 12, 9), int64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %41 = cast(%var_6943, dtype="int64") /* ty=Tensor[(16, 12, 9), int64] */;
  %42 = shape_of(%var_6942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%var_6942, dtype="int64") /* ty=Tensor[(16, 12, 9), int64] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %45 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %46 = maximum(%43, %44) /* ty=Tensor[(16, 12, 9), int64] */;
  %47 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %48 = %45.0;
  (%46, %47, %48)
}

def @func_5972() -> Tensor[(2, 16, 4), uint32] {
  %49 = @func_5020() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %50 = %49.0;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 16, 4), uint64] */, dtype="uint32") /* ty=Tensor[(2, 16, 4), uint32] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%50, dtype="uint32") /* ty=Tensor[(2, 16, 4), uint32] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%53, %54) /* ty=Tensor[(2, 16, 4), uint32] */
}

def @func_6424(%var_6364: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) {
  %55 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %56 = @func_5020() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %57 = cast(%var_6364, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %58 = cast(%var_6364, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %59 = reshape(%57, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %60 = reshape(%58, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %61 = @func_4529(%59, %60) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), uint8], Tensor[(2025), float32]) */;
  %62 = @func_5129() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %63 = @func_5710() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) */;
  %64 = %55.0;
  %65 = %56.0;
  %66 = %61.0;
  %67 = %62.0;
  %68 = %63.1;
  (%64, %65, %66, %var_6364, %67, %68)
}

def @func_13022() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %69 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %70 = @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */;
  %71 = %69.0;
  (%70, %71)
}

def @func_2307(%var_2306: Tensor[(11, 15, 8), float32]) -> Tensor[(11, 15, 8), float32] {
  %73 = fn (%var_2300: Tensor[(11, 15, 8), float32]) -> Tensor[(11, 15, 8), float32] {
    %72 = cast(%var_2300, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
    acos(%72) /* ty=Tensor[(11, 15, 8), float32] */
  };
  %73(%var_2306) /* ty=Tensor[(11, 15, 8), float32] */
}

def @func_8394() -> (Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64], Tensor[(60, 14), bool], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %86 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64], Tensor[(60, 14), bool], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(60, 14), bool] */, dtype="bool") /* ty=Tensor[(60, 14), bool] */;
    %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(60, 14), bool] */, dtype="bool") /* ty=Tensor[(60, 14), bool] */;
    %76 = cast(meta[relay.Constant][4] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %77 = reshape(%74, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), bool] */;
    %78 = reshape(%75, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), bool] */;
    %79 = reshape(%76, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %80 = @func_7055(%77, %78, %79) /* ty=(Tensor[(5, 14, 12), bool], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64]) */;
    %81 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %82 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
    %83 = %80.5;
    %84 = %81.0;
    %85 = @func_3847() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%82, %83, meta[relay.Constant][3] /* ty=Tensor[(60, 14), bool] */, meta[relay.Constant][4] /* ty=Tensor[(1320), float32] */, %84, %85)
  };
  %86() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64], Tensor[(60, 14), bool], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_12852() -> Tensor[(2, 16, 4), uint64] {
  @func_12850() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6619(%var_6617: Tensor[(12), float64], %var_6618: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(48), float64], float64, Tensor[(12), float64], Tensor[(48), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  @func_6615(%var_6617, %var_6618) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(48), float64], float64, Tensor[(12), float64], Tensor[(48), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */
}

def @func_1064(%var_1060: Tensor[(4, 10, 9), float64]) -> (Tensor[(4, 10, 9), float64],) {
  %87 = cast(%var_1060, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
  %88 = log(%87) /* ty=Tensor[(4, 10, 9), float64] */;
  (%88,)
}

def @func_4907() -> (Tensor[(2, 16, 4), uint64],) {
  %91 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %89 = @func_3012() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %90 = %89.0;
    (%90,)
  };
  %91() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_4671(%var_4657: Tensor[(1, 420), uint8]) -> (Tensor[(2, 16, 4), uint64], Tensor[(14, 15, 2), uint8], Tensor[(1, 420), uint8], Tensor[(2, 16, 4), uint64]) {
  %92 = cast(%var_4657, dtype="uint8") /* ty=Tensor[(1, 420), uint8] */;
  %93 = reshape(%92, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), uint8] */;
  %94 = @func_2912(%93) /* ty=(Tensor[(14, 15, 2), uint8], Tensor[(14, 15, 2), bool]) */;
  %95 = @func_3986() /* ty=Tensor[(2, 16, 4), uint64] */;
  %96 = %94.0;
  %97 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%95, %96, %var_4657, %97)
}

def @func_8148() -> Tensor[(2, 16, 4), uint64] {
  %98 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %98() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6653() -> (Tensor[(2, 16, 4), float32],) {
  %99 = @func_5820() /* ty=Tensor[(2, 16, 4), float32] */;
  (%99,)
}

def @func_7233(%var_7169: Tensor[(6, 3, 8), int32], %var_7170: Tensor[(6, 3, 8), int32], %var_7215: float32, %var_7216: Tensor[(256), float32]) -> (Tensor[(6, 3, 8), int32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(6, 3, 8), float64], Tensor[(2, 16, 4), uint64]) {
  %100 = cast(%var_7170, dtype="int32") /* ty=Tensor[(6, 3, 8), int32] */;
  %101 = shape_of(%var_7169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%var_7169, dtype="int32") /* ty=Tensor[(6, 3, 8), int32] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %104 = @func_6573() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %105 = cast(%var_7215, dtype="float32") /* ty=float32 */;
  %106 = cast(%var_7216, dtype="float32") /* ty=Tensor[(256), float32] */;
  %107 = reshape(%105, newshape=[]) /* ty=float32 */;
  %108 = reshape(%106, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), float32] */;
  %109 = cast(%var_7170, dtype="float32") /* ty=Tensor[(6, 3, 8), float32] */;
  %110 = atanh(%109) /* ty=Tensor[(6, 3, 8), float32] */;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(6, 3, 8), float64] */;
  %112 = right_shift(%102, %103) /* ty=Tensor[(6, 3, 8), int32] */;
  %113 = @func_6878() /* ty=Tensor[(2, 16, 4), uint64] */;
  %114 = %104.0;
  %115 = @func_232(%107, %108) /* ty=Tensor[(16, 2, 8), float32] */;
  %116 = exp(%111) /* ty=Tensor[(6, 3, 8), float64] */;
  %117 = @func_4035() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%112, %113, %114, %115, %var_7215, %var_7216, %116, %117)
}

def @func_11802() -> Tensor[(2, 16, 4), uint64] {
  @func_11800() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_1532() -> Tensor[(2, 16, 4), uint64] {
  %118 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %118.1
}

def @func_9746(%var_9719: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], Tensor[(256), float32], Tensor[(2, 16, 4), uint64]) {
  %119 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %120 = cast(%var_9719, dtype="float32") /* ty=Tensor[(256), float32] */;
  %121 = reshape(%120, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %122 = @func_5740(%121) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) */;
  %123 = %119.0;
  %124 = %122.1;
  %125 = @func_5792() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%123, %124, %var_9719, %125)
}

def @func_12832() -> (Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(27, 75), float64], Tensor[(315, 1), float32]) {
  %126 = @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */;
  %127 = cast(meta[relay.Constant][5] /* ty=Tensor[(27, 75), float64] */, dtype="float64") /* ty=Tensor[(27, 75), float64] */;
  %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(315, 1), float32] */, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %129 = reshape(%127, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %130 = reshape(%128, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %131 = @func_2190(%129, %130) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %132 = %126.1;
  %133 = %131.4;
  (%132, %133, meta[relay.Constant][5] /* ty=Tensor[(27, 75), float64] */, meta[relay.Constant][6] /* ty=Tensor[(315, 1), float32] */)
}

def @func_3565(%var_3564: Tensor[(9, 14, 11), float64]) -> (Tensor[(9, 14, 11), uint8],) {
  %141 = fn (%var_3553: Tensor[(9, 14, 11), float64]) -> (Tensor[(9, 14, 11), uint8],) {
    %134 = cast(%var_3553, dtype="float64") /* ty=Tensor[(9, 14, 11), float64] */;
    %135 = cos(%134) /* ty=Tensor[(9, 14, 11), float64] */;
    %136 = cast(%var_3553, dtype="uint8") /* ty=Tensor[(9, 14, 11), uint8] */;
    %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
    %138 = cast(%135, dtype="uint8") /* ty=Tensor[(9, 14, 11), uint8] */;
    %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %140 = minimum(%138, %139) /* ty=Tensor[(9, 14, 11), uint8] */;
    (%140,)
  };
  %141(%var_3564) /* ty=(Tensor[(9, 14, 11), uint8],) */
}

def @func_4792() -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
  @func_4790() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */
}

def @func_4565(%var_4563: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), float32]) {
  @func_4562(%var_4563) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), float32]) */
}

def @func_10127(%var_10126: Tensor[(1, 15, 3), float32]) -> (Tensor[(1, 15, 3), float32], Tensor[(1, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(1, 15, 3), float64]) {
  %149 = fn (%var_10081: Tensor[(1, 15, 3), float32]) -> (Tensor[(1, 15, 3), float32], Tensor[(1, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(1, 15, 3), float64]) {
    %142 = cast(%var_10081, dtype="float32") /* ty=Tensor[(1, 15, 3), float32] */;
    %143 = cast(%var_10081, dtype="float32") /* ty=Tensor[(1, 15, 3), float32] */;
    %144 = cast(%var_10081, dtype="float64") /* ty=Tensor[(1, 15, 3), float64] */;
    %145 = sigmoid(%142) /* ty=Tensor[(1, 15, 3), float32] */;
    %146 = cosh(%143) /* ty=Tensor[(1, 15, 3), float32] */;
    %147 = @func_10074() /* ty=Tensor[(2, 16, 4), uint64] */;
    %148 = atanh(%144) /* ty=Tensor[(1, 15, 3), float64] */;
    (%145, %146, %147, %148)
  };
  %149(%var_10126) /* ty=(Tensor[(1, 15, 3), float32], Tensor[(1, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(1, 15, 3), float64]) */
}

def @func_11763() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_11761() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_10847() -> Tensor[(2, 16, 4), uint64] {
  %151 = fn () -> Tensor[(2, 16, 4), uint64] {
    %150 = @func_3129() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) */;
    %150.0
  };
  %151() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_8336() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %157 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
    %152 = @func_8147() /* ty=Tensor[(2, 16, 4), uint64] */;
    %153 = cast(%152, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %154 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
    %155 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
    %156 = log(%153) /* ty=Tensor[(2, 16, 4), float32] */;
    (%154, %155, %156)
  };
  %157() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */
}

def @func_3050() -> Tensor[(2, 16, 4), uint64] {
  %158 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %158.0
}

def @func_9133() -> (Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1, 1386), float64], Tensor[(360), float64], Tensor[(2025), float64]) {
  @func_9131() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1, 1386), float64], Tensor[(360), float64], Tensor[(2025), float64]) */
}

def @func_2223(%var_2221: Tensor[(15, 10, 2), float32], %var_2222: Tensor[(2025), float64]) -> (Tensor[(15, 10, 2), float32], Tensor[(15, 15, 9), float64], Tensor[(2025), float64]) {
  %165 = fn (%var_2204: Tensor[(15, 10, 2), float32], %var_2210: Tensor[(2025), float64]) -> (Tensor[(15, 10, 2), float32], Tensor[(15, 15, 9), float64], Tensor[(2025), float64]) {
    %159 = cast(%var_2204, dtype="float32") /* ty=Tensor[(15, 10, 2), float32] */;
    %160 = cast(%var_2210, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %161 = reshape(%160, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %162 = @func_1639(%161) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
    %163 = atanh(%159) /* ty=Tensor[(15, 10, 2), float32] */;
    %164 = %162.1;
    (%163, %164, %var_2210)
  };
  %165(%var_2221, %var_2222) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(15, 15, 9), float64], Tensor[(2025), float64]) */
}

def @func_12170() -> Tensor[(2, 16, 4), uint64] {
  @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5740(%var_5729: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) {
  %166 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %167 = cast(-4.20439f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %168 = cast(%var_5729, dtype="float32") /* ty=Tensor[(256), float32] */;
  %169 = reshape(%167, newshape=[]) /* ty=float32 */;
  %170 = reshape(%168, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), float32] */;
  %171 = %166.0;
  %172 = @func_232(%169, %170) /* ty=Tensor[(16, 2, 8), float32] */;
  (%171, %172, -4.20439f /* ty=float32 */, %var_5729)
}

def @func_12550() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %173 = @func_8335() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %174 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %175 = %173.0;
  %176 = %174.0;
  %177 = @func_4806() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%175, %176, %177)
}

def @func_12368(%var_12366: float32, %var_12367: Tensor[(256), float32]) -> (Tensor[(273), uint8], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) {
  @func_12364(%var_12366, %var_12367) /* ty=(Tensor[(273), uint8], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) */
}

def @func_12834() -> (Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(27, 75), float64], Tensor[(315, 1), float32]) {
  @func_12832() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(27, 75), float64], Tensor[(315, 1), float32]) */
}

def @func_383(%var_381: float32, %var_382: Tensor[(8, 32), float32]) -> (Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) {
  %187 = fn (%var_362: float32, %var_363: Tensor[(8, 32), float32]) -> (Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) {
    %178 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
    %179 = cosh(%178) /* ty=Tensor[(16, 3, 10), float64] */;
    %180 = cast(%179, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
    %181 = cast(%var_362, dtype="float32") /* ty=float32 */;
    %182 = cast(%var_363, dtype="float32") /* ty=Tensor[(8, 32), float32] */;
    %183 = reshape(%181, newshape=[]) /* ty=float32 */;
    %184 = reshape(%182, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), float32] */;
    %185 = rsqrt(%180) /* ty=Tensor[(16, 3, 10), float64] */;
    %186 = @func_232(%183, %184) /* ty=Tensor[(16, 2, 8), float32] */;
    (%185, %186, %var_362, %var_363)
  };
  %187(%var_381, %var_382) /* ty=(Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) */
}

def @func_11157(%var_11156: Tensor[(9, 14, 9), int32]) -> Tensor[(9, 14, 9), int32] {
  %192 = fn (%var_11146: Tensor[(9, 14, 9), int32]) -> Tensor[(9, 14, 9), int32] {
    %188 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 14, 9), int32] */, dtype="int32") /* ty=Tensor[(9, 14, 9), int32] */;
    %189 = shape_of(%var_11146, dtype="int32") /* ty=Tensor[(3), int32] */;
    %190 = cast(%var_11146, dtype="int32") /* ty=Tensor[(9, 14, 9), int32] */;
    %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    bitwise_or(%190, %191) /* ty=Tensor[(9, 14, 9), int32] */
  };
  %192(%var_11156) /* ty=Tensor[(9, 14, 9), int32] */
}

def @func_8868(%var_8866: Tensor[(9, 225), float64]) -> (Tensor[(2, 3, 8), int8], Tensor[(11, 15, 8), float32], Tensor[(9, 225), float64]) {
  @func_8865(%var_8866) /* ty=(Tensor[(2, 3, 8), int8], Tensor[(11, 15, 8), float32], Tensor[(9, 225), float64]) */
}

def @func_2492() -> (Tensor[(2, 16, 4), float32],) {
  %196 = fn () -> (Tensor[(2, 16, 4), float32],) {
    %193 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
    %194 = cast(%193, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %195 = sinh(%194) /* ty=Tensor[(2, 16, 4), float32] */;
    (%195,)
  };
  %196() /* ty=(Tensor[(2, 16, 4), float32],) */
}

def @func_5913() -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_5911() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_3401() -> (Tensor[(2, 16, 4), uint64],) {
  %197 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%197,)
}

def @func_8348() -> Tensor[(2, 16, 4), uint64] {
  @func_8147() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4197(%var_4196: Tensor[(2, 16, 4), uint64]) -> Tensor[(2, 16, 4), float64] {
  %204 = fn (%var_4186: Tensor[(2, 16, 4), uint64]) -> Tensor[(2, 16, 4), float64] {
    %198 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %199 = %198.1;
    %200 = cast(%var_4186, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
    %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%199, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%202, %203) /* ty=Tensor[(2, 16, 4), float64] */
  };
  %204(%var_4196) /* ty=Tensor[(2, 16, 4), float64] */
}

def @func_10139() -> Tensor[(2, 16, 4), uint64] {
  %205 = @func_9328() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %205.0
}

def @func_6879() -> Tensor[(2, 16, 4), uint64] {
  %206 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %206() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_11138() -> Tensor[(2, 16, 4), uint64] {
  @func_7338() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_3579() -> Tensor[(2, 16, 4), uint64] {
  %207 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %207.0
}

def @func_13164(%var_13162: Tensor[(3, 7, 16), uint32], %var_13163: Tensor[(3, 7, 16), uint32]) -> (Tensor[(3, 7, 16), uint32], Tensor[(3, 7, 16), float32], Tensor[(2, 16, 4), float32]) {
  %218 = fn (%var_13144: Tensor[(3, 7, 16), uint32], %var_13145: Tensor[(3, 7, 16), uint32]) -> (Tensor[(3, 7, 16), uint32], Tensor[(3, 7, 16), float32], Tensor[(2, 16, 4), float32]) {
    %208 = cast(%var_13145, dtype="uint32") /* ty=Tensor[(3, 7, 16), uint32] */;
    %209 = shape_of(%var_13144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %210 = cast(%var_13144, dtype="uint32") /* ty=Tensor[(3, 7, 16), uint32] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %212 = cast(%var_13145, dtype="float64") /* ty=Tensor[(3, 7, 16), float64] */;
    %213 = sinh(%212) /* ty=Tensor[(3, 7, 16), float64] */;
    %214 = cast(%213, dtype="float32") /* ty=Tensor[(3, 7, 16), float32] */;
    %215 = bitwise_xor(%210, %211) /* ty=Tensor[(3, 7, 16), uint32] */;
    %216 = sigmoid(%214) /* ty=Tensor[(3, 7, 16), float32] */;
    %217 = @func_5820() /* ty=Tensor[(2, 16, 4), float32] */;
    (%215, %216, %217)
  };
  %218(%var_13162, %var_13163) /* ty=(Tensor[(3, 7, 16), uint32], Tensor[(3, 7, 16), float32], Tensor[(2, 16, 4), float32]) */
}

def @func_4978() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %219 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %220 = @func_3391() /* ty=Tensor[(360), float64] */;
  %221 = %219.2;
  (%220, %221)
}

def @func_5070(%var_5069: Tensor[(7, 1, 12), float32]) -> (Tensor[(7, 1, 12), float32], Tensor[(315), float32], Tensor[(2025), float64], Tensor[(315), float32]) {
  %230 = fn (%var_5047: Tensor[(7, 1, 12), float32]) -> (Tensor[(7, 1, 12), float32], Tensor[(315), float32], Tensor[(2025), float64], Tensor[(315), float32]) {
    %222 = cast(%var_5047, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
    %223 = cast(meta[relay.Constant][9] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %224 = cast(meta[relay.Constant][10] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %225 = reshape(%223, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %226 = reshape(%224, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %227 = @func_2190(%225, %226) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
    %228 = acos(%222) /* ty=Tensor[(7, 1, 12), float32] */;
    %229 = %227.4;
    (%228, %229, meta[relay.Constant][9] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][10] /* ty=Tensor[(315), float32] */)
  };
  %230(%var_5069) /* ty=(Tensor[(7, 1, 12), float32], Tensor[(315), float32], Tensor[(2025), float64], Tensor[(315), float32]) */
}

def @func_11989(%var_11988: float32) -> (Tensor[(360), float64], Tensor[(273), uint8], float32, Tensor[(520), uint16], float32) {
  %240 = fn (%var_11981: float32) -> (Tensor[(360), float64], Tensor[(273), uint8], float32, Tensor[(520), uint16], float32) {
    %231 = @func_8492() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(21), uint8], Tensor[(273), uint8]) */;
    %232 = cast(meta[relay.Constant][11] /* ty=Tensor[(520), uint16] */, dtype="uint16") /* ty=Tensor[(520), uint16] */;
    %233 = cast(%var_11981, dtype="float32") /* ty=float32 */;
    %234 = reshape(%232, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint16] */;
    %235 = reshape(%233, newshape=[]) /* ty=float32 */;
    %236 = @func_2459(%234, %235) /* ty=(Tensor[(8, 13, 5), uint16], Tensor[(8, 32), float32], float32) */;
    %237 = @func_6939() /* ty=Tensor[(360), float64] */;
    %238 = %231.4;
    %239 = %236.2;
    (%237, %238, %239, meta[relay.Constant][11] /* ty=Tensor[(520), uint16] */, %var_11981)
  };
  %240(%var_11988) /* ty=(Tensor[(360), float64], Tensor[(273), uint8], float32, Tensor[(520), uint16], float32) */
}

def @func_12795() -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64]) {
  %241 = @func_6199() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %242 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %243 = cast(meta[relay.Constant][12] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %244 = reshape(%243, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %245 = @func_1639(%244) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %246 = %245.3;
  %247 = cast(%246, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %248 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %249 = %241.1;
  %250 = %242.0;
  %251 = exp(%247) /* ty=Tensor[(7, 15, 3), float32] */;
  %252 = %248.0;
  (%249, meta[relay.Constant][12] /* ty=Tensor[(2025), float64] */, %250, %251, %252)
}

def @func_4835() -> Tensor[(2, 16, 4), uint64] {
  %253 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_3847() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %253() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5821() -> Tensor[(2, 16, 4), float32] {
  %255 = fn () -> Tensor[(2, 16, 4), float32] {
    %254 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
    %254.0
  };
  %255() /* ty=Tensor[(2, 16, 4), float32] */
}

def @func_5743(%var_5741: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) {
  @func_5740(%var_5741) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) */
}

def @func_2080() -> Tensor[(2, 16, 4), uint64] {
  %257 = fn () -> Tensor[(2, 16, 4), uint64] {
    %256 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %256.0
  };
  %257() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5208() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  @func_5206() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */
}

def @func_2816() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %258 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %259 = @func_2079() /* ty=Tensor[(2, 16, 4), uint64] */;
  %260 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  %261 = %258.1;
  (%259, %260, %261)
}

def @func_4960() -> (Tensor[(360), float64],) {
  %264 = fn () -> (Tensor[(360), float64],) {
    %262 = @func_4600() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %263 = %262.0;
    (%263,)
  };
  %264() /* ty=(Tensor[(360), float64],) */
}

def @func_12172() -> Tensor[(2, 16, 4), uint64] {
  @func_12170() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6427(%var_6425: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) {
  @func_6424(%var_6425) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) */
}

def @func_5129() -> (Tensor[(2, 16, 4), uint64],) {
  %265 = @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%265,)
}

def @func_10439() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %269 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %266 = @func_8018() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %267 = %266.0;
    %268 = @func_4834() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%267, %268)
  };
  %269() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_3299(%var_3264: Tensor[(6, 2, 16), uint32], %var_3265: Tensor[(6, 2, 16), uint32], %var_3270: Tensor[(2025), float64]) -> (Tensor[(6, 2, 16), uint32], Tensor[(6, 2, 16), bool], Tensor[(15, 15, 9), int16], Tensor[(15, 15, 9), bool]) {
  %270 = cast(%var_3265, dtype="uint32") /* ty=Tensor[(6, 2, 16), uint32] */;
  %271 = shape_of(%var_3264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%var_3264, dtype="uint32") /* ty=Tensor[(6, 2, 16), uint32] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %274 = cast(%var_3265, dtype="bool") /* ty=Tensor[(6, 2, 16), bool] */;
  %275 = shape_of(%var_3264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%var_3264, dtype="bool") /* ty=Tensor[(6, 2, 16), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %278 = cast(%var_3270, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %279 = reshape(%278, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float64] */;
  %280 = @func_729(%279) /* ty=Tensor[(15, 15, 9), float64] */;
  %281 = cast(%280, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %282 = sin(%281) /* ty=Tensor[(15, 15, 9), float32] */;
  %283 = cast(%var_3270, dtype="int16") /* ty=Tensor[(2025), int16] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%282, dtype="int16") /* ty=Tensor[(15, 15, 9), int16] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %287 = cast(%var_3270, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %288 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%282, dtype="bool") /* ty=Tensor[(15, 15, 9), bool] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %291 = bitwise_or(%272, %273) /* ty=Tensor[(6, 2, 16), uint32] */;
  %292 = equal(%276, %277) /* ty=Tensor[(6, 2, 16), bool] */;
  %293 = left_shift(%285, %286) /* ty=Tensor[(15, 15, 9), int16] */;
  %294 = logical_and(%289, %290) /* ty=Tensor[(15, 15, 9), bool] */;
  (%291, %292, %293, %294)
}

def @func_12505() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(1, 15, 9), float64]) {
  %295 = @func_7731() /* ty=(Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) */;
  %296 = @func_10139() /* ty=Tensor[(2, 16, 4), uint64] */;
  %297 = @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */;
  %298 = %295.0;
  (%296, %297, %298)
}

def @func_11646() -> Tensor[(2, 16, 4), float32] {
  @func_11644() /* ty=Tensor[(2, 16, 4), float32] */
}

def @func_13065() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(13, 2, 13), float32], Tensor[(338, 1), float32]) {
  %299 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %300 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %301 = cast(meta[relay.Constant][13] /* ty=Tensor[(338, 1), float32] */, dtype="float32") /* ty=Tensor[(338, 1), float32] */;
  %302 = reshape(%301, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), float32] */;
  %303 = @func_6724(%302) /* ty=(Tensor[(13, 2, 13), float32],) */;
  %304 = @func_4834() /* ty=Tensor[(2, 16, 4), uint64] */;
  %305 = %299.0;
  %306 = %300.1;
  %307 = %303.0;
  (%304, %305, %306, %307, meta[relay.Constant][13] /* ty=Tensor[(338, 1), float32] */)
}

def @func_3503(%var_3434: Tensor[(4, 10, 9), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64], Tensor[(2, 16, 4), uint64]) {
  %308 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %309 = %308.7;
  %310 = cast(%var_3434, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
  %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%309, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %314 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %315 = cast(meta[relay.Constant][14] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %316 = reshape(%315, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %317 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %318 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %319 = divide(%312, %313) /* ty=Tensor[(4, 10, 9), float64] */;
  %320 = %314.0;
  %321 = @func_2634(%316) /* ty=Tensor[(2, 3, 8), int8] */;
  %322 = %317.0;
  (%318, %319, %320, %321, meta[relay.Constant][14] /* ty=Tensor[(48), float64] */, %322)
}

def @func_1296() -> Tensor[(2, 16, 4), uint64] {
  %325 = fn () -> Tensor[(2, 16, 4), uint64] {
    %323 = cast(meta[relay.Constant][15] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %324 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 16, 4), uint64] */, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
    bitwise_xor(%323, %324) /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %325() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_12451() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
  %331 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
    %326 = @func_5710() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) */;
    %327 = %326.0;
    %328 = cast(%327, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
    %329 = reshape(%328, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
    %330 = @func_4195(%329) /* ty=Tensor[(2, 16, 4), float64] */;
    (%327, %330)
  };
  %331() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) */
}

def @func_9749(%var_9747: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], Tensor[(256), float32], Tensor[(2, 16, 4), uint64]) {
  @func_9746(%var_9747) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], Tensor[(256), float32], Tensor[(2, 16, 4), uint64]) */
}

def @main() -> (Tensor[(14, 1, 5), float64],) {
  %332 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %333 = cos(%332) /* ty=Tensor[(14, 1, 5), float64] */;
  (%333,)
}

def @func_1653() -> (Tensor[(2, 16, 4), uint64],) {
  %334 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%334,)
}

def @func_6574() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %338 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %335 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %336 = %335.2;
    %337 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%336, %337)
  };
  %338() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_2915(%var_2913: Tensor[(14, 15, 2), uint8]) -> (Tensor[(14, 15, 2), uint8], Tensor[(14, 15, 2), bool]) {
  @func_2912(%var_2913) /* ty=(Tensor[(14, 15, 2), uint8], Tensor[(14, 15, 2), bool]) */
}

def @func_1534() -> Tensor[(2, 16, 4), uint64] {
  @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_3755() -> (Tensor[(2, 16, 4), uint64],) {
  %339 = @func_2079() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%339,)
}

def @func_13183(%var_13182: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) {
  %344 = fn (%var_13175: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) {
    %340 = cast(%var_13175, dtype="float64") /* ty=Tensor[(48), float64] */;
    %341 = reshape(%340, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
    %342 = @func_4035() /* ty=Tensor[(2, 16, 4), uint64] */;
    %343 = @func_2634(%341) /* ty=Tensor[(2, 3, 8), int8] */;
    (%342, %343, %var_13175)
  };
  %344(%var_13182) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) */
}

def @func_12033(%var_12020: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64], Tensor[(12), float64], Tensor[(48), float64]) {
  %345 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %346 = @func_4790() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %347 = cast(meta[relay.Constant][18] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %348 = cast(%var_12020, dtype="float64") /* ty=Tensor[(48), float64] */;
  %349 = reshape(%347, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %350 = reshape(%348, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %351 = @func_6615(%349, %350) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(48), float64], float64, Tensor[(12), float64], Tensor[(48), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %352 = %345.0;
  %353 = %346.0;
  %354 = %351.0;
  (%352, %353, %354, meta[relay.Constant][18] /* ty=Tensor[(12), float64] */, %var_12020)
}

def @func_12619(%var_12616: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
  %355 = cast(%var_12616, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  rsqrt(%355) /* ty=Tensor[(12, 12, 13), float64] */
}

def @func_7731() -> (Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) {
  %356 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 9), float64] */;
  %357 = @func_4476() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(2, 16, 4), uint64]) */;
  %358 = asinh(%356) /* ty=Tensor[(1, 15, 9), float64] */;
  %359 = %357.2;
  (%358, %359)
}

def @func_12638() -> (Tensor[(2, 16, 4), uint64],) {
  @func_12636() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_6655() -> (Tensor[(2, 16, 4), float32],) {
  @func_6653() /* ty=(Tensor[(2, 16, 4), float32],) */
}

def @func_11831() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %360 = @func_8928() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %361 = @func_11800() /* ty=Tensor[(2, 16, 4), uint64] */;
  %362 = %360.0;
  %363 = @func_11138() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%361, %362, %363)
}

def @func_7521() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %364 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %365 = %364.0;
  %366 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%365, %366)
}

def @func_3969(%var_3916: Tensor[(256), float32]) -> (Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %367 = cast(7.85965f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %368 = cast(%var_3916, dtype="float32") /* ty=Tensor[(256), float32] */;
  %369 = reshape(%367, newshape=[]) /* ty=float32 */;
  %370 = reshape(%368, newshape=[16, 2, 8]) /* ty=Tensor[(16, 2, 8), float32] */;
  %371 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %372 = @func_3050() /* ty=Tensor[(2, 16, 4), uint64] */;
  %373 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %374 = %373.0;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %376 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%372, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %379 = @func_3819() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %380 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %381 = %380.4;
  %382 = cast(%381, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %383 = sigmoid(%382) /* ty=Tensor[(7, 15, 3), float32] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %385 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %386 = @func_232(%369, %370) /* ty=Tensor[(16, 2, 8), float32] */;
  %387 = %371.0;
  %388 = mod(%377, %378) /* ty=Tensor[(2, 16, 4), float64] */;
  %389 = %379.0;
  %390 = log(%384) /* ty=Tensor[(7, 15, 3), float32] */;
  %391 = %385.2;
  %392 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%386, 7.85965f /* ty=float32 */, %var_3916, %387, %388, %389, %390, %391, %392)
}

def @func_4045() -> Tensor[(2, 16, 4), uint64] {
  @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_11430(%var_11429: Tensor[(7, 3, 12), int32]) -> Tensor[(7, 3, 12), float64] {
  %402 = fn (%var_11415: Tensor[(7, 3, 12), int32]) -> Tensor[(7, 3, 12), float64] {
    %393 = cast(%var_11415, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
    %394 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(7, 3, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %395 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 3, 12), int32] */, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
    %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %397 = not_equal(%395, %396) /* ty=Tensor[(7, 3, 12), bool] */;
    %398 = cast(%var_11415, dtype="float64") /* ty=Tensor[(7, 3, 12), float64] */;
    %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
    %400 = cast(%397, dtype="float64") /* ty=Tensor[(7, 3, 12), float64] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%400, %401) /* ty=Tensor[(7, 3, 12), float64] */
  };
  %402(%var_11429) /* ty=Tensor[(7, 3, 12), float64] */
}

def @func_10536(%var_10529: int16, %var_10530: Tensor[(10, 12, 1), int16]) -> Tensor[(10, 12, 1), int16] {
  %403 = cast(%var_10529, dtype="int16") /* ty=int16 */;
  %404 = cast(%var_10530, dtype="int16") /* ty=Tensor[(10, 12, 1), int16] */;
  multiply(%403, %404) /* ty=Tensor[(10, 12, 1), int16] */
}

def @func_4412(%var_4411: Tensor[(10, 15, 11), float32]) -> Tensor[(10, 15, 11), float32] {
  %406 = fn (%var_4401: Tensor[(10, 15, 11), float32]) -> Tensor[(10, 15, 11), float32] {
    %405 = cast(%var_4401, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
    exp(%405) /* ty=Tensor[(10, 15, 11), float32] */
  };
  %406(%var_4411) /* ty=Tensor[(10, 15, 11), float32] */
}

def @func_6724(%var_6721: Tensor[(13, 2, 13), float32]) -> (Tensor[(13, 2, 13), float32],) {
  %407 = cast(%var_6721, dtype="float32") /* ty=Tensor[(13, 2, 13), float32] */;
  %408 = tan(%407) /* ty=Tensor[(13, 2, 13), float32] */;
  (%408,)
}

def @func_3581() -> Tensor[(2, 16, 4), uint64] {
  @func_3579() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_11061() -> (Tensor[(2, 16, 4), uint64],) {
  %409 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%409,)
}

def @func_9329() -> (Tensor[(2, 16, 4), uint64],) {
  %412 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %410 = @func_6573() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %411 = %410.0;
    (%411,)
  };
  %412() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_5935() -> Tensor[(360), float64] {
  @func_5933() /* ty=Tensor[(360), float64] */
}

def @func_10320() -> Tensor[(2, 16, 4), uint64] {
  %413 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_6581() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %413() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_7733() -> (Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) {
  @func_7731() /* ty=(Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_9212() -> (Tensor[(1, 15, 9), float64],) {
  %414 = @func_7731() /* ty=(Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) */;
  %415 = %414.0;
  (%415,)
}

def @func_2193(%var_2191: Tensor[(2025), float64], %var_2192: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  %430 = fn (%var_2181: Tensor[(2025), float64], %var_2188: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
    %416 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
    %417 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 16, 4), uint64] */, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
    %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
    %419 = cast(%416, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
    %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %421 = cast(%var_2181, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %422 = reshape(%421, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float64] */;
    %423 = cast(%var_2188, dtype="float32") /* ty=Tensor[(315), float32] */;
    %424 = cast(%var_2188, dtype="float32") /* ty=Tensor[(315), float32] */;
    %425 = reshape(%423, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %426 = reshape(%424, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %427 = greater_equal(%419, %420) /* ty=Tensor[(2, 16, 4), bool] */;
    %428 = @func_729(%422) /* ty=Tensor[(15, 15, 9), float64] */;
    %429 = @func_1010(%425, %426) /* ty=Tensor[(7, 15, 3), float64] */;
    (%427, %428, %var_2181, %429, %var_2188)
  };
  %430(%var_2191, %var_2192) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */
}

def @func_6727(%var_6725: Tensor[(13, 2, 13), float32]) -> (Tensor[(13, 2, 13), float32],) {
  @func_6724(%var_6725) /* ty=(Tensor[(13, 2, 13), float32],) */
}

def @func_8589() -> Tensor[(2, 16, 4), uint64] {
  %432 = fn () -> Tensor[(2, 16, 4), uint64] {
    %431 = @func_5911() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %431.4
  };
  %432() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5297() -> Tensor[(2, 16, 4), uint64] {
  @func_5295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5244() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) {
  @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */
}

def @func_7523() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_7521() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_2387() -> Tensor[(2, 16, 4), uint64] {
  @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4602() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  @func_4600() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_8711() -> (Tensor[(2, 16, 4), uint64],) {
  %433 = @func_7435() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %434 = %433.0;
  (%434,)
}

def @func_4247(%var_4229: float64, %var_4230: Tensor[(1, 2, 6), float64], %var_4238: Tensor[(4, 2, 6), float64]) -> (Tensor[(1, 2, 6), bool], Tensor[(4, 2, 6), bool]) {
  %435 = cast(%var_4229, dtype="bool") /* ty=bool */;
  %436 = cast(%var_4230, dtype="bool") /* ty=Tensor[(1, 2, 6), bool] */;
  %437 = cast(%var_4230, dtype="bool") /* ty=Tensor[(1, 2, 6), bool] */;
  %438 = cast(%var_4238, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %439 = less(%435, %436) /* ty=Tensor[(1, 2, 6), bool] */;
  %440 = not_equal(%437, %438) /* ty=Tensor[(4, 2, 6), bool] */;
  (%439, %440)
}

def @func_5542() -> (Tensor[(4, 15, 1), float64],) {
  %441 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(4, 15, 1), float64] */;
  %442 = asinh(%441) /* ty=Tensor[(4, 15, 1), float64] */;
  (%442,)
}

def @func_6578() -> (Tensor[(2, 16, 4), uint64],) {
  %445 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %443 = @func_4287() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %444 = %443.1;
    (%444,)
  };
  %445() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_731(%var_730: Tensor[(15, 15, 9), float64]) -> Tensor[(15, 15, 9), float64] {
  %447 = fn (%var_719: Tensor[(15, 15, 9), float64]) -> Tensor[(15, 15, 9), float64] {
    %446 = cast(%var_719, dtype="float64") /* ty=Tensor[(15, 15, 9), float64] */;
    rsqrt(%446) /* ty=Tensor[(15, 15, 9), float64] */
  };
  %447(%var_730) /* ty=Tensor[(15, 15, 9), float64] */
}

def @func_7763(%var_7762: Tensor[(2, 16, 4), float32]) -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float64]) {
  %457 = fn (%var_7739: Tensor[(2, 16, 4), float32]) -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float64]) {
    %448 = @func_3745() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %449 = %448.2;
    %450 = cast(%var_7739, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %452 = cast(%449, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %454 = cast(%449, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
    %455 = power(%452, %453) /* ty=Tensor[(2, 16, 4), float32] */;
    %456 = cosh(%454) /* ty=Tensor[(2, 16, 4), float64] */;
    (%455, %456)
  };
  %457(%var_7762) /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float64]) */
}

def @func_8350() -> Tensor[(2, 16, 4), uint64] {
  @func_8348() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_12297() -> (Tensor[(2, 16, 4), uint32], Tensor[(2, 16, 4), uint64]) {
  %462 = fn () -> (Tensor[(2, 16, 4), uint32], Tensor[(2, 16, 4), uint64]) {
    %458 = @func_10527() /* ty=(Tensor[(2, 16, 4), uint32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(14, 3, 14), float64], Tensor[(14, 42), float64]) */;
    %459 = @func_9328() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %460 = %458.0;
    %461 = %459.0;
    (%460, %461)
  };
  %462() /* ty=(Tensor[(2, 16, 4), uint32], Tensor[(2, 16, 4), uint64]) */
}

def @func_1655() -> (Tensor[(2, 16, 4), uint64],) {
  @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_3757() -> (Tensor[(2, 16, 4), uint64],) {
  @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_7340() -> Tensor[(2, 16, 4), uint64] {
  @func_7338() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_7790() -> (Tensor[(2, 16, 4), uint64],) {
  %463 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %464 = %463.0;
  (%464,)
}

def @func_11140() -> Tensor[(2, 16, 4), uint64] {
  @func_11138() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5594(%var_5591: float64, %var_5592: Tensor[(1, 12), float64], %var_5593: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(1, 2, 6), bool], float64, Tensor[(1, 12), float64], Tensor[(48), float64], Tensor[(4, 15, 1), float64]) {
  @func_5589(%var_5591, %var_5592, %var_5593) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(1, 2, 6), bool], float64, Tensor[(1, 12), float64], Tensor[(48), float64], Tensor[(4, 15, 1), float64]) */
}

def @func_3391() -> Tensor[(360), float64] {
  @func_1597() /* ty=Tensor[(360), float64] */
}

def @func_11476() -> (Tensor[(2, 16, 4), uint64],) {
  %465 = @func_6271() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %466 = %465.0;
  (%466,)
}

def @func_12161() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
  %467 = @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */;
  %468 = cast(%467, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
  %469 = reshape(%468, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
  %470 = @func_5933() /* ty=Tensor[(360), float64] */;
  %471 = @func_4195(%469) /* ty=Tensor[(2, 16, 4), float64] */;
  (%470, %467, %471)
}

def @func_10634() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  @func_10632() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_5974() -> Tensor[(2, 16, 4), uint32] {
  @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */
}

def @func_7650(%var_7649: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  %478 = fn (%var_7624: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
    %472 = cast(%var_7624, dtype="float32") /* ty=Tensor[(315), float32] */;
    %473 = cast(%var_7624, dtype="float32") /* ty=Tensor[(315), float32] */;
    %474 = reshape(%472, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %475 = reshape(%473, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %476 = @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */;
    %477 = @func_1010(%474, %475) /* ty=Tensor[(7, 15, 3), float64] */;
    (%476, %477, %var_7624)
  };
  %478(%var_7649) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */
}

def @func_12336() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %479 = @func_10319() /* ty=Tensor[(2, 16, 4), uint64] */;
  %480 = @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%479, %480)
}

def @func_7889(%var_7888: Tensor[(14, 3, 14), float64]) -> Tensor[(14, 3, 14), float64] {
  %482 = fn (%var_7880: Tensor[(14, 3, 14), float64]) -> Tensor[(14, 3, 14), float64] {
    %481 = cast(%var_7880, dtype="float64") /* ty=Tensor[(14, 3, 14), float64] */;
    sigmoid(%481) /* ty=Tensor[(14, 3, 14), float64] */
  };
  %482(%var_7888) /* ty=Tensor[(14, 3, 14), float64] */
}

def @func_12098() -> (Tensor[(2, 16, 4), uint64],) {
  %485 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %483 = @func_4790() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
    %484 = %483.1;
    (%484,)
  };
  %485() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_9214() -> (Tensor[(1, 15, 9), float64],) {
  @func_9212() /* ty=(Tensor[(1, 15, 9), float64],) */
}

def @func_8929() -> (Tensor[(2, 16, 4), uint64],) {
  %487 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %486 = @func_7338() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%486,)
  };
  %487() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_5710() -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) {
  %488 = @func_4298() /* ty=(Tensor[(360), float64],) */;
  %489 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
  %490 = %488.0;
  (%489, %490)
}

def @func_3506(%var_3504: Tensor[(4, 10, 9), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64], Tensor[(2, 16, 4), uint64]) {
  @func_3503(%var_3504) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_10032() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %495 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %491 = @func_8711() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %492 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %493 = %491.0;
    %494 = %492.2;
    (%493, %494)
  };
  %495() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_11644() -> Tensor[(2, 16, 4), float32] {
  %496 = @func_6573() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %497 = %496.0;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  atanh(%498) /* ty=Tensor[(2, 16, 4), float32] */
}

def @func_1010(%var_1000: Tensor[(7, 15, 3), float32], %var_1003: Tensor[(7, 15, 3), float32]) -> Tensor[(7, 15, 3), float64] {
  %499 = cast(%var_1000, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %500 = atanh(%499) /* ty=Tensor[(7, 15, 3), float32] */;
  %501 = cast(%var_1003, dtype="float64") /* ty=Tensor[(7, 15, 3), float64] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="float64") /* ty=Tensor[(7, 15, 3), float64] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%503, %504) /* ty=Tensor[(7, 15, 3), float64] */
}

def @func_4807() -> Tensor[(2, 16, 4), uint64] {
  %506 = fn () -> Tensor[(2, 16, 4), uint64] {
    %505 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
    %505.1
  };
  %506() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5308() -> (Tensor[(360), float64],) {
  %507 = @func_3391() /* ty=Tensor[(360), float64] */;
  (%507,)
}

def @func_7059(%var_7056: Tensor[(5, 14, 12), bool], %var_7057: Tensor[(5, 14, 12), bool], %var_7058: Tensor[(1320), float32]) -> (Tensor[(5, 14, 12), bool], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64]) {
  %522 = fn (%var_6995: Tensor[(5, 14, 12), bool], %var_6996: Tensor[(5, 14, 12), bool], %var_7019: Tensor[(1320), float32]) -> (Tensor[(5, 14, 12), bool], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64]) {
    %508 = cast(%var_6996, dtype="bool") /* ty=Tensor[(5, 14, 12), bool] */;
    %509 = shape_of(%var_6995, dtype="int32") /* ty=Tensor[(3), int32] */;
    %510 = cast(%var_6995, dtype="bool") /* ty=Tensor[(5, 14, 12), bool] */;
    %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %512 = cast(%var_7019, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %513 = reshape(%512, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float32] */;
    %514 = cast(%var_6996, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
    %515 = log(%514) /* ty=Tensor[(5, 14, 12), float64] */;
    %516 = cast(%515, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
    %517 = logical_or(%510, %511) /* ty=Tensor[(5, 14, 12), bool] */;
    %518 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
    %519 = @func_2305(%513) /* ty=Tensor[(11, 15, 8), float32] */;
    %520 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
    %521 = sinh(%516) /* ty=Tensor[(5, 14, 12), float64] */;
    (%517, %518, %519, %var_7019, %520, %521)
  };
  %522(%var_7056, %var_7057, %var_7058) /* ty=(Tensor[(5, 14, 12), bool], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2, 16, 4), uint64], Tensor[(5, 14, 12), float64]) */
}

def @func_12338() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_12336() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_2040(%var_2039: float32) -> (Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), bool], Tensor[(16, 3, 10), float64], float32, Tensor[(8, 32), float32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %550 = fn (%var_2018: float32) -> (Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), bool], Tensor[(16, 3, 10), float64], float32, Tensor[(8, 32), float32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
    %523 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %524 = %523.0;
    %525 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %526 = %525.0;
    %527 = cast(%526, dtype="int16") /* ty=Tensor[(2, 16, 4), int16] */;
    %528 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %529 = cast(%524, dtype="int16") /* ty=Tensor[(2, 16, 4), int16] */;
    %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %531 = bitwise_and(%529, %530) /* ty=Tensor[(2, 16, 4), int16] */;
    %532 = cast(%531, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
    %533 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(%524, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %536 = cast(%526, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
    %537 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %538 = cast(%524, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %540 = cast(%var_2018, dtype="float32") /* ty=float32 */;
    %541 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 32), float32] */, dtype="float32") /* ty=Tensor[(8, 32), float32] */;
    %542 = reshape(%540, newshape=[]) /* ty=float32 */;
    %543 = reshape(%541, newshape=[8, 32]) /* ty=Tensor[(8, 32), float32] */;
    %544 = @func_380(%542, %543) /* ty=(Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) */;
    %545 = logical_and(%534, %535) /* ty=Tensor[(2, 16, 4), bool] */;
    %546 = logical_or(%538, %539) /* ty=Tensor[(2, 16, 4), bool] */;
    %547 = %544.0;
    %548 = @func_1597() /* ty=Tensor[(360), float64] */;
    %549 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%545, %546, %547, %var_2018, meta[relay.Constant][23] /* ty=Tensor[(8, 32), float32] */, %548, %549)
  };
  %550(%var_2039) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), bool], Tensor[(16, 3, 10), float64], float32, Tensor[(8, 32), float32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_5933() -> Tensor[(360), float64] {
  %551 = @func_4959() /* ty=(Tensor[(360), float64],) */;
  %551.0
}

def @func_6939() -> Tensor[(360), float64] {
  %552 = @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */;
  %552.0
}

def @func_9539() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %557 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %553 = @func_8018() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %554 = @func_4600() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %555 = %553.0;
    %556 = %554.1;
    (%555, %556)
  };
  %557() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_13112() -> (Tensor[(360), float64], Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float32]) {
  %558 = @func_11278() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %559 = @func_8518() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %560 = @func_3391() /* ty=Tensor[(360), float64] */;
  %561 = %558.0;
  %562 = %559.0;
  (%560, %561, %562)
}

def @func_6680() -> Tensor[(2, 16, 4), uint64] {
  %563 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %563() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_9048(%var_9046: Tensor[(2025), float64], %var_9047: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(315), float32], Tensor[(840), float64]) {
  %579 = fn (%var_9021: Tensor[(2025), float64], %var_9022: Tensor[(315), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(315), float32], Tensor[(840), float64]) {
    %564 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %565 = @func_6878() /* ty=Tensor[(2, 16, 4), uint64] */;
    %566 = cast(%565, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
    %567 = reshape(%564, newshape=[14, 12, 5]) /* ty=Tensor[(14, 12, 5), float64] */;
    %568 = reshape(%566, newshape=[128]) /* ty=Tensor[(128), uint64] */;
    %569 = @func_4692(%567, %568) /* ty=(Tensor[(14, 12, 5), float32], Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(14, 12, 5), float64]) */;
    %570 = cast(%var_9021, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %571 = cast(%var_9022, dtype="float32") /* ty=Tensor[(315), float32] */;
    %572 = reshape(%570, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %573 = reshape(%571, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %574 = @func_2190(%572, %573) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
    %575 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %576 = %569.2;
    %577 = %574.1;
    %578 = sin(%575) /* ty=Tensor[(840), float64] */;
    (%565, %576, %577, %var_9021, %var_9022, %578)
  };
  %579(%var_9046, %var_9047) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(315), float32], Tensor[(840), float64]) */
}

def @func_9684(%var_9683: Tensor[(105, 3), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(4, 15, 1), float64], Tensor[(105, 3), float32], Tensor[(135, 15), float64], Tensor[(2, 16, 4), uint32]) {
  %589 = fn (%var_9658: Tensor[(105, 3), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(4, 15, 1), float64], Tensor[(105, 3), float32], Tensor[(135, 15), float64], Tensor[(2, 16, 4), uint32]) {
    %580 = cast(%var_9658, dtype="float32") /* ty=Tensor[(105, 3), float32] */;
    %581 = reshape(%580, newshape=[1, 315]) /* ty=Tensor[(1, 315), float32] */;
    %582 = @func_7954(%581) /* ty=(Tensor[(360), float64], Tensor[(4, 15, 1), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], float32, Tensor[(2, 16, 4), bool], Tensor[(135, 15), float64], Tensor[(1, 315), float32]) */;
    %583 = %582.7;
    %584 = cast(%583, dtype="float64") /* ty=Tensor[(135, 15), float64] */;
    %585 = @func_8348() /* ty=Tensor[(2, 16, 4), uint64] */;
    %586 = @func_7827() /* ty=Tensor[(4, 15, 1), float64] */;
    %587 = acos(%584) /* ty=Tensor[(135, 15), float64] */;
    %588 = @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */;
    (%585, %586, %var_9658, %587, %588)
  };
  %589(%var_9683) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(4, 15, 1), float64], Tensor[(105, 3), float32], Tensor[(135, 15), float64], Tensor[(2, 16, 4), uint32]) */
}

def @func_3804() -> Tensor[(2, 16, 4), uint64] {
  %591 = fn () -> Tensor[(2, 16, 4), uint64] {
    %590 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %590.1
  };
  %591() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_3187(%var_3185: Tensor[(2, 16, 4), uint64]) -> (Tensor[(2, 16, 4), uint16],) {
  @func_3184(%var_3185) /* ty=(Tensor[(2, 16, 4), uint16],) */
}

def @func_4288() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %595 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %592 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
    %593 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
    %594 = %592.1;
    (%593, %594)
  };
  %595() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_3988() -> Tensor[(2, 16, 4), uint64] {
  @func_3986() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4600() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %596 = @func_3391() /* ty=Tensor[(360), float64] */;
  %597 = @func_3050() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%596, %597)
}

def @func_11478() -> (Tensor[(2, 16, 4), uint64],) {
  @func_11476() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_5131() -> (Tensor[(2, 16, 4), uint64],) {
  @func_5129() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_12507() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(1, 15, 9), float64]) {
  @func_12505() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(1, 15, 9), float64]) */
}

def @func_6133(%var_6131: Tensor[(256, 9), float32]) -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float32], Tensor[(256, 9), float32]) {
  @func_6130(%var_6131) /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float32], Tensor[(256, 9), float32]) */
}

def @func_6096() -> (Tensor[(2, 16, 4), float64], Tensor[(48), float64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %598 = @func_3819() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %599 = %598.0;
  %600 = cast(%599, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
  %601 = cast(meta[relay.Constant][25] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %602 = reshape(%601, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float64] */;
  %603 = @func_3503(%602) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64], Tensor[(2, 16, 4), uint64]) */;
  %604 = @func_5206() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %605 = exp(%600) /* ty=Tensor[(2, 16, 4), float64] */;
  %606 = %603.4;
  %607 = %604.0;
  (%605, %606, meta[relay.Constant][25] /* ty=Tensor[(360), float64] */, %607)
}

def @func_3673(%var_3672: Tensor[(1, 2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(1, 2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %621 = fn (%var_3630: Tensor[(1, 2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(1, 2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
    %608 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
    %609 = cast(%608, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
    %610 = reshape(%609, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
    %611 = @func_1845(%610) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %612 = cast(%var_3630, dtype="float64") /* ty=Tensor[(1, 2025), float64] */;
    %613 = reshape(%612, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %614 = @func_2426(%613) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(15, 10, 2), float32], Tensor[(300), float32], Tensor[(2025), float64]) */;
    %615 = cast(%608, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %616 = %611.0;
    %617 = %614.5;
    %618 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
    %619 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
    %620 = cos(%615) /* ty=Tensor[(2, 16, 4), float32] */;
    (%616, %617, %var_3630, %618, %619, %620)
  };
  %621(%var_3672) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(1, 2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */
}

def @func_2637(%var_2635: Tensor[(2, 3, 8), float64]) -> Tensor[(2, 3, 8), int8] {
  @func_2634(%var_2635) /* ty=Tensor[(2, 3, 8), int8] */
}

def @func_4300() -> (Tensor[(360), float64],) {
  @func_4298() /* ty=(Tensor[(360), float64],) */
}

def @func_7153() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %622 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %623 = %622.1;
  %624 = @func_6581() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%623, %624)
}

def @func_12850() -> Tensor[(2, 16, 4), uint64] {
  @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_5531(%var_5530: Tensor[(6, 220), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(11, 15, 8), float32], Tensor[(6, 220), float32]) {
  %631 = fn (%var_5496: Tensor[(6, 220), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(11, 15, 8), float32], Tensor[(6, 220), float32]) {
    %625 = @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */;
    %626 = cast(%var_5496, dtype="float32") /* ty=Tensor[(6, 220), float32] */;
    %627 = reshape(%626, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float32] */;
    %628 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
    %629 = %625.2;
    %630 = @func_2305(%627) /* ty=Tensor[(11, 15, 8), float32] */;
    (%628, %629, %630, %var_5496)
  };
  %631(%var_5530) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(11, 15, 8), float32], Tensor[(6, 220), float32]) */
}

def @func_7957(%var_7955: Tensor[(1, 315), float32]) -> (Tensor[(360), float64], Tensor[(4, 15, 1), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], float32, Tensor[(2, 16, 4), bool], Tensor[(135, 15), float64], Tensor[(1, 315), float32]) {
  @func_7954(%var_7955) /* ty=(Tensor[(360), float64], Tensor[(4, 15, 1), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], float32, Tensor[(2, 16, 4), bool], Tensor[(135, 15), float64], Tensor[(1, 315), float32]) */
}

def @func_1598() -> Tensor[(360), float64] {
  %633 = fn () -> Tensor[(360), float64] {
    %632 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
    %632.6
  };
  %633() /* ty=Tensor[(360), float64] */
}

def @func_12036(%var_12034: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64], Tensor[(12), float64], Tensor[(48), float64]) {
  @func_12033(%var_12034) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64], Tensor[(12), float64], Tensor[(48), float64]) */
}

def @func_9807() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %637 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %634 = @func_9328() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %635 = %634.0;
    %636 = @func_3986() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%635, %636)
  };
  %637() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_4674(%var_4672: Tensor[(1, 420), uint8]) -> (Tensor[(2, 16, 4), uint64], Tensor[(14, 15, 2), uint8], Tensor[(1, 420), uint8], Tensor[(2, 16, 4), uint64]) {
  @func_4671(%var_4672) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(14, 15, 2), uint8], Tensor[(1, 420), uint8], Tensor[(2, 16, 4), uint64]) */
}

def @func_10777(%var_10776: Tensor[(1320), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), float64], Tensor[(300), float32], Tensor[(2025), float64]) {
  %656 = fn (%var_10737: Tensor[(1320), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), float64], Tensor[(300), float32], Tensor[(2025), float64]) {
    %638 = @func_8518() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
    %639 = %638.1;
    %640 = cast(%639, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %641 = reshape(%640, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), float32] */;
    %642 = @func_7761(%641) /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float64]) */;
    %643 = @func_6271() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %644 = cast(%var_10737, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %645 = reshape(%644, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float32] */;
    %646 = cast(meta[relay.Constant][26] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
    %647 = cast(meta[relay.Constant][27] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %648 = reshape(%646, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
    %649 = reshape(%647, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %650 = @func_2220(%648, %649) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(15, 15, 9), float64], Tensor[(2025), float64]) */;
    %651 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
    %652 = %642.1;
    %653 = %643.0;
    %654 = @func_2305(%645) /* ty=Tensor[(11, 15, 8), float32] */;
    %655 = %650.2;
    (%651, %639, %652, %653, %654, %var_10737, %655, meta[relay.Constant][26] /* ty=Tensor[(300), float32] */, meta[relay.Constant][27] /* ty=Tensor[(2025), float64] */)
  };
  %656(%var_10776) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), float64], Tensor[(300), float32], Tensor[(2025), float64]) */
}

def @func_9960() -> (Tensor[(12, 3, 6), float32], Tensor[(11, 15, 8), float32], Tensor[(2025), float64], Tensor[(2, 16, 4), uint32], Tensor[(180, 2), float32]) {
  %673 = fn () -> (Tensor[(12, 3, 6), float32], Tensor[(11, 15, 8), float32], Tensor[(2025), float64], Tensor[(2, 16, 4), uint32], Tensor[(180, 2), float32]) {
    %657 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 3, 6), float32] */;
    %658 = cast(meta[relay.Constant][29] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %659 = reshape(%658, newshape=[9, 225]) /* ty=Tensor[(9, 225), float64] */;
    %660 = @func_8865(%659) /* ty=(Tensor[(2, 3, 8), int8], Tensor[(11, 15, 8), float32], Tensor[(9, 225), float64]) */;
    %661 = cast(meta[relay.Constant][30] /* ty=Tensor[(180, 2), float64] */, dtype="float64") /* ty=Tensor[(180, 2), float64] */;
    %662 = reshape(%661, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float64] */;
    %663 = @func_1064(%662) /* ty=(Tensor[(4, 10, 9), float64],) */;
    %664 = %663.0;
    %665 = cast(%664, dtype="float32") /* ty=Tensor[(4, 10, 9), float32] */;
    %666 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(180, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %667 = cast(meta[relay.Constant][30] /* ty=Tensor[(180, 2), float64] */, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
    %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %669 = rsqrt(%657) /* ty=Tensor[(12, 3, 6), float32] */;
    %670 = %660.1;
    %671 = @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */;
    %672 = floor_divide(%667, %668) /* ty=Tensor[(180, 2), float32] */;
    (%669, %670, meta[relay.Constant][29] /* ty=Tensor[(2025), float64] */, %671, %672)
  };
  %673() /* ty=(Tensor[(12, 3, 6), float32], Tensor[(11, 15, 8), float32], Tensor[(2025), float64], Tensor[(2, 16, 4), uint32], Tensor[(180, 2), float32]) */
}

def @func_10141() -> Tensor[(2, 16, 4), uint64] {
  @func_10139() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_1848(%var_1846: Tensor[(2, 16, 4), uint64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  @func_1845(%var_1846) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */
}

def @func_4252(%var_4249: float64, %var_4250: Tensor[(1, 2, 6), float64], %var_4251: Tensor[(4, 2, 6), float64]) -> (Tensor[(1, 2, 6), bool], Tensor[(4, 2, 6), bool]) {
  @func_4247(%var_4249, %var_4250, %var_4251) /* ty=(Tensor[(1, 2, 6), bool], Tensor[(4, 2, 6), bool]) */
}

def @func_235(%var_233: float32, %var_234: Tensor[(16, 2, 8), float32]) -> Tensor[(16, 2, 8), float32] {
  %685 = fn (%var_192: float32, %var_193: Tensor[(16, 2, 8), float32]) -> Tensor[(16, 2, 8), float32] {
    %674 = cast(%var_193, dtype="float32") /* ty=Tensor[(16, 2, 8), float32] */;
    %675 = erf(%674) /* ty=Tensor[(16, 2, 8), float32] */;
    %676 = cast(%var_192, dtype="float32") /* ty=float32 */;
    %677 = cast(%var_193, dtype="float32") /* ty=Tensor[(16, 2, 8), float32] */;
    %678 = power(%676, %677) /* ty=Tensor[(16, 2, 8), float32] */;
    %679 = cast(%678, dtype="int64") /* ty=Tensor[(16, 2, 8), int64] */;
    %680 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
    %681 = cast(%675, dtype="int64") /* ty=Tensor[(16, 2, 8), int64] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %683 = bitwise_or(%681, %682) /* ty=Tensor[(16, 2, 8), int64] */;
    %684 = cast(%683, dtype="float32") /* ty=Tensor[(16, 2, 8), float32] */;
    exp(%684) /* ty=Tensor[(16, 2, 8), float32] */
  };
  %685(%var_233, %var_234) /* ty=Tensor[(16, 2, 8), float32] */
}

def @func_6964(%var_6962: Tensor[(16, 12, 9), int64], %var_6963: Tensor[(16, 12, 9), int64]) -> (Tensor[(16, 12, 9), int64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  @func_6960(%var_6962, %var_6963) /* ty=(Tensor[(16, 12, 9), int64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */
}

def @func_10632() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %686 = @func_4476() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(2, 16, 4), uint64]) */;
  %687 = @func_1597() /* ty=Tensor[(360), float64] */;
  %688 = %686.2;
  (%687, %688)
}

def @func_8019() -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  %697 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
    %689 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %690 = @func_4298() /* ty=(Tensor[(360), float64],) */;
    %691 = %689.0;
    %692 = cast(%691, dtype="uint64") /* ty=Tensor[(2, 16, 4), uint64] */;
    %693 = reshape(%692, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
    %694 = @func_1845(%693) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %695 = %690.0;
    %696 = %694.0;
    (%691, %695, %696)
  };
  %697() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_9173() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64]) {
  @func_9171() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64]) */
}

def @func_4036() -> Tensor[(2, 16, 4), uint64] {
  %698 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_3986() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %698() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6941() -> Tensor[(360), float64] {
  @func_6939() /* ty=Tensor[(360), float64] */
}

def @func_10944() -> Tensor[(273), uint8] {
  @func_10942() /* ty=Tensor[(273), uint8] */
}

def @func_8764(%var_8763: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %709 = fn (%var_8719: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
    %699 = @func_8335() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %700 = cast(%var_8719, dtype="float32") /* ty=Tensor[(256), float32] */;
    %701 = reshape(%700, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %702 = @func_4562(%701) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), float32]) */;
    %703 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %704 = @func_6653() /* ty=(Tensor[(2, 16, 4), float32],) */;
    %705 = %699.0;
    %706 = %702.1;
    %707 = %703.0;
    %708 = %704.0;
    (%705, %706, %var_8719, %707, %708)
  };
  %709(%var_8763) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */
}

def @func_12163() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
  @func_12161() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) */
}

def @func_2992(%var_2991: Tensor[(2, 16, 4), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint16], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
  %732 = fn (%var_2958: Tensor[(2, 16, 4), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint16], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) {
    %710 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
    %711 = cast(%710, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %712 = erf(%711) /* ty=Tensor[(2, 16, 4), float32] */;
    %713 = cast(%712, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
    %714 = tan(%713) /* ty=Tensor[(2, 16, 4), float64] */;
    %715 = cast(%var_2958, dtype="uint16") /* ty=Tensor[(2, 16, 4), uint16] */;
    %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
    %717 = cast(%714, dtype="uint16") /* ty=Tensor[(2, 16, 4), uint16] */;
    %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %719 = cast(%var_2958, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
    %720 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%710, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %723 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %724 = cast(%714, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
    %725 = log10(%724) /* ty=Tensor[(2, 16, 4), float64] */;
    %726 = cast(%725, dtype="float64") /* ty=Tensor[(2, 16, 4), float64] */;
    %727 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
    %728 = right_shift(%717, %718) /* ty=Tensor[(2, 16, 4), uint16] */;
    %729 = floor_mod(%721, %722) /* ty=Tensor[(2, 16, 4), float64] */;
    %730 = %723.2;
    %731 = asin(%726) /* ty=Tensor[(2, 16, 4), float64] */;
    (%727, %728, %729, %730, %731)
  };
  %732(%var_2991) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint16], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) */
}

def @func_12898() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %733 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %734 = @func_6271() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %735 = %733.0;
  %736 = %734.0;
  (%735, %736)
}

def @func_6271() -> (Tensor[(2, 16, 4), uint64],) {
  %737 = @func_6199() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %738 = %737.1;
  (%738,)
}

def @func_11761() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %739 = @func_8711() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %740 = %739.0;
  %741 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%740, %741)
}

def @func_1067(%var_1065: Tensor[(4, 10, 9), float64]) -> (Tensor[(4, 10, 9), float64],) {
  @func_1064(%var_1065) /* ty=(Tensor[(4, 10, 9), float64],) */
}

def @func_1947() -> Tensor[(2, 16, 4), uint64] {
  %742 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %742() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_6260() -> (Tensor[(2, 16, 4), uint32], Tensor[(360), float64]) {
  %745 = fn () -> (Tensor[(2, 16, 4), uint32], Tensor[(360), float64]) {
    %743 = @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */;
    %744 = @func_3391() /* ty=Tensor[(360), float64] */;
    (%743, %744)
  };
  %745() /* ty=(Tensor[(2, 16, 4), uint32], Tensor[(360), float64]) */
}

def @func_6761() -> Tensor[(2, 16, 4), uint64] {
  @func_6759() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4476() -> (Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(2, 16, 4), uint64]) {
  %746 = @func_3745() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %747 = @func_1798() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */;
  %748 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %749 = %746.1;
  %750 = %747.1;
  %751 = %748.0;
  (%749, %750, %751)
}

def @func_7954(%var_7942: Tensor[(1, 315), float32]) -> (Tensor[(360), float64], Tensor[(4, 15, 1), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], float32, Tensor[(2, 16, 4), bool], Tensor[(135, 15), float64], Tensor[(1, 315), float32]) {
  %752 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %753 = @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */;
  %754 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %755 = cast(5.10016f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %756 = reshape(%755, newshape=[]) /* ty=float32 */;
  %757 = @func_2038(%756) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), bool], Tensor[(16, 3, 10), float64], float32, Tensor[(8, 32), float32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %758 = cast(meta[relay.Constant][31] /* ty=Tensor[(135, 15), float64] */, dtype="float64") /* ty=Tensor[(135, 15), float64] */;
  %759 = cast(%var_7942, dtype="float32") /* ty=Tensor[(1, 315), float32] */;
  %760 = reshape(%758, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %761 = reshape(%759, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %762 = @func_2190(%760, %761) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
  %763 = %752.0;
  %764 = %753.0;
  %765 = @func_6581() /* ty=Tensor[(2, 16, 4), uint64] */;
  %766 = %754.0;
  %767 = %757.5;
  %768 = %762.0;
  (%763, %764, %765, %766, %767, 5.10016f /* ty=float32 */, %768, meta[relay.Constant][31] /* ty=Tensor[(135, 15), float64] */, %var_7942)
}

def @func_2385() -> Tensor[(2, 16, 4), uint64] {
  @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_1014(%var_1012: Tensor[(7, 15, 3), float32], %var_1013: Tensor[(7, 15, 3), float32]) -> Tensor[(7, 15, 3), float64] {
  @func_1010(%var_1012, %var_1013) /* ty=Tensor[(7, 15, 3), float64] */
}

def @func_5792() -> Tensor[(2, 16, 4), uint64] {
  @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_11063() -> (Tensor[(2, 16, 4), uint64],) {
  @func_11061() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_3745() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %769 = @func_3333() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %770 = @func_1798() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */;
  %771 = %769.0;
  %772 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %773 = %770.0;
  (%771, %772, %773)
}

def @func_4158() -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
  %774 = @func_3755() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %775 = %774.0;
  %776 = cast(%775, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %777 = @func_3819() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %778 = sigmoid(%776) /* ty=Tensor[(2, 16, 4), float32] */;
  %779 = %777.0;
  (%778, %779)
}

def @func_1642(%var_1640: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  @func_1639(%var_1640) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */
}

def @func_12575(%var_12573: Tensor[(50, 6), int8], %var_12574: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(2, 10, 15), int8], Tensor[(50, 6), int8], Tensor[(300), float32], Tensor[(2025), float64]) {
  @func_12571(%var_12573, %var_12574) /* ty=(Tensor[(360), float64], Tensor[(2, 10, 15), int8], Tensor[(50, 6), int8], Tensor[(300), float32], Tensor[(2025), float64]) */
}

def @func_6154() -> Tensor[(2, 16, 4), uint64] {
  %780 = @func_2733() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %780.0
}

def @func_2912(%var_2893: Tensor[(14, 15, 2), uint8]) -> (Tensor[(14, 15, 2), uint8], Tensor[(14, 15, 2), bool]) {
  %781 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 15, 1), uint8] */, dtype="uint8") /* ty=Tensor[(14, 15, 1), uint8] */;
  %782 = cast(%var_2893, dtype="uint8") /* ty=Tensor[(14, 15, 2), uint8] */;
  %783 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 15, 2), uint8] */, dtype="bool") /* ty=Tensor[(14, 15, 2), bool] */;
  %784 = shape_of(%var_2893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%var_2893, dtype="bool") /* ty=Tensor[(14, 15, 2), bool] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %787 = multiply(%781, %782) /* ty=Tensor[(14, 15, 2), uint8] */;
  %788 = logical_or(%785, %786) /* ty=Tensor[(14, 15, 2), bool] */;
  (%787, %788)
}

def @func_9282() -> Tensor[(2, 16, 4), float32] {
  %789 = @func_1798() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */;
  %789.0
}

def @func_12797() -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64]) {
  @func_12795() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64]) */
}

def @func_2634(%var_2601: Tensor[(2, 3, 8), float64]) -> Tensor[(2, 3, 8), int8] {
  %790 = cast(%var_2601, dtype="float64") /* ty=Tensor[(2, 3, 8), float64] */;
  %791 = sigmoid(%790) /* ty=Tensor[(2, 3, 8), float64] */;
  %792 = cast(%var_2601, dtype="int8") /* ty=Tensor[(2, 3, 8), int8] */;
  %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%791, dtype="int8") /* ty=Tensor[(2, 3, 8), int8] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_xor(%794, %795) /* ty=Tensor[(2, 3, 8), int8] */
}

def @func_6098() -> (Tensor[(2, 16, 4), float64], Tensor[(48), float64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  @func_6096() /* ty=(Tensor[(2, 16, 4), float64], Tensor[(48), float64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_6759() -> Tensor[(2, 16, 4), uint64] {
  %796 = @func_3745() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
  %796.1
}

def @func_1700() -> Tensor[(2, 16, 4), uint64] {
  @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_11279() -> (Tensor[(2, 16, 4), float32],) {
  %798 = fn () -> (Tensor[(2, 16, 4), float32],) {
    %797 = @func_9282() /* ty=Tensor[(2, 16, 4), float32] */;
    (%797,)
  };
  %798() /* ty=(Tensor[(2, 16, 4), float32],) */
}

def @func_12715() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(1320), float32]) {
  %799 = cast(meta[relay.Constant][34] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %800 = reshape(%799, newshape=[6, 220]) /* ty=Tensor[(6, 220), float32] */;
  %801 = @func_5529(%800) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(11, 15, 8), float32], Tensor[(6, 220), float32]) */;
  %802 = @func_6759() /* ty=Tensor[(2, 16, 4), uint64] */;
  %803 = %801.0;
  (%802, %803, meta[relay.Constant][34] /* ty=Tensor[(1320), float32] */)
}

def @func_6522(%var_6521: Tensor[(9, 225), float64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(9, 225), float64], Tensor[(14, 15, 2), bool], Tensor[(5, 84), uint8]) {
  %816 = fn (%var_6505: Tensor[(9, 225), float64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(9, 225), float64], Tensor[(14, 15, 2), bool], Tensor[(5, 84), uint8]) {
    %804 = @func_5308() /* ty=(Tensor[(360), float64],) */;
    %805 = @func_5020() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %806 = cast(%var_6505, dtype="float64") /* ty=Tensor[(9, 225), float64] */;
    %807 = reshape(%806, newshape=[1, 2025]) /* ty=Tensor[(1, 2025), float64] */;
    %808 = @func_3671(%807) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(1, 2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %809 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 84), uint8] */, dtype="uint8") /* ty=Tensor[(5, 84), uint8] */;
    %810 = reshape(%809, newshape=[14, 15, 2]) /* ty=Tensor[(14, 15, 2), uint8] */;
    %811 = @func_2912(%810) /* ty=(Tensor[(14, 15, 2), uint8], Tensor[(14, 15, 2), bool]) */;
    %812 = %804.0;
    %813 = %805.0;
    %814 = %808.0;
    %815 = %811.1;
    (%812, %813, %814, %var_6505, %815, meta[relay.Constant][35] /* ty=Tensor[(5, 84), uint8] */)
  };
  %816(%var_6521) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(9, 225), float64], Tensor[(14, 15, 2), bool], Tensor[(5, 84), uint8]) */
}

def @func_3820() -> (Tensor[(2, 16, 4), uint64],) {
  %818 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %817 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%817,)
  };
  %818() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_11926() -> Tensor[(2, 16, 4), uint64] {
  %819 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %819() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_9131() -> (Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1, 1386), float64], Tensor[(360), float64], Tensor[(2025), float64]) {
  %820 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 1386), float64] */, dtype="float64") /* ty=Tensor[(1, 1386), float64] */;
  %821 = reshape(%820, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float64] */;
  %822 = @func_3563(%821) /* ty=(Tensor[(9, 14, 11), uint8],) */;
  %823 = cast(meta[relay.Constant][37] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %824 = reshape(%823, newshape=[9, 225]) /* ty=Tensor[(9, 225), float64] */;
  %825 = @func_6520(%824) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(9, 225), float64], Tensor[(14, 15, 2), bool], Tensor[(5, 84), uint8]) */;
  %826 = @func_3579() /* ty=Tensor[(2, 16, 4), uint64] */;
  %827 = %822.0;
  %828 = %825.0;
  (%826, %827, meta[relay.Constant][36] /* ty=Tensor[(1, 1386), float64] */, %828, meta[relay.Constant][37] /* ty=Tensor[(2025), float64] */)
}

def @func_1799() -> (Tensor[(2, 16, 4), float32], Tensor[(315), float32]) {
  %835 = fn () -> (Tensor[(2, 16, 4), float32], Tensor[(315), float32]) {
    %829 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %830 = %829.0;
    %831 = cast(%830, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %832 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
    %833 = asinh(%831) /* ty=Tensor[(2, 16, 4), float32] */;
    %834 = %832.3;
    (%833, %834)
  };
  %835() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */
}

def @func_11800() -> Tensor[(2, 16, 4), uint64] {
  %836 = @func_7435() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %836.0
}

def @func_2818() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_10243(%var_10240: Tensor[(2025), float64], %var_10241: Tensor[(144), int32], %var_10242: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(192), uint32], Tensor[(15, 15, 9), bool], Tensor[(2, 16, 4), uint64], Tensor[(144), int32], float32, Tensor[(256), float32]) {
  %862 = fn (%var_10178: Tensor[(2025), float64], %var_10234: Tensor[(144), int32], %var_10236: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(192), uint32], Tensor[(15, 15, 9), bool], Tensor[(2, 16, 4), uint64], Tensor[(144), int32], float32, Tensor[(256), float32]) {
    %837 = @func_7521() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %838 = cast(meta[relay.Constant][38] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
    %839 = cast(meta[relay.Constant][38] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
    %840 = cast(%var_10178, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %841 = reshape(%838, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), uint32] */;
    %842 = reshape(%839, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), uint32] */;
    %843 = reshape(%840, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %844 = @func_3299(%841, %842, %843) /* ty=(Tensor[(6, 2, 16), uint32], Tensor[(6, 2, 16), bool], Tensor[(15, 15, 9), int16], Tensor[(15, 15, 9), bool]) */;
    %845 = %844.2;
    %846 = cast(%var_10178, dtype="bool") /* ty=Tensor[(2025), bool] */;
    %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
    %848 = cast(%845, dtype="bool") /* ty=Tensor[(15, 15, 9), bool] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %850 = cast(%var_10234, dtype="int32") /* ty=Tensor[(144), int32] */;
    %851 = cast(%var_10234, dtype="int32") /* ty=Tensor[(144), int32] */;
    %852 = cast(4.02461f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %853 = cast(%var_10236, dtype="float32") /* ty=Tensor[(256), float32] */;
    %854 = reshape(%850, newshape=[6, 3, 8]) /* ty=Tensor[(6, 3, 8), int32] */;
    %855 = reshape(%851, newshape=[6, 3, 8]) /* ty=Tensor[(6, 3, 8), int32] */;
    %856 = reshape(%852, newshape=[]) /* ty=float32 */;
    %857 = reshape(%853, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %858 = @func_7233(%854, %855, %856, %857) /* ty=(Tensor[(6, 3, 8), int32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(6, 3, 8), float64], Tensor[(2, 16, 4), uint64]) */;
    %859 = %837.1;
    %860 = less_equal(%848, %849) /* ty=Tensor[(15, 15, 9), bool] */;
    %861 = %858.7;
    (%859, meta[relay.Constant][38] /* ty=Tensor[(192), uint32] */, %860, %861, %var_10234, 4.02461f /* ty=float32 */, %var_10236)
  };
  %862(%var_10240, %var_10241, %var_10242) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(192), uint32], Tensor[(15, 15, 9), bool], Tensor[(2, 16, 4), uint64], Tensor[(144), int32], float32, Tensor[(256), float32]) */
}

def @func_10276(%var_10269: Tensor[(48, 1), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(48, 1), float32], Tensor[(1386), float64]) {
  %863 = @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %864 = cast(%var_10269, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %865 = cast(meta[relay.Constant][39] /* ty=Tensor[(1386), float64] */, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %866 = reshape(%864, newshape=[16, 3, 1]) /* ty=Tensor[(16, 3, 1), float32] */;
  %867 = reshape(%865, newshape=[1386]) /* ty=Tensor[(1386), float64] */;
  %868 = @func_8218(%866, %867) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(48), float64]) */;
  %869 = %863.0;
  %870 = %868.2;
  (%869, %870, %var_10269, meta[relay.Constant][39] /* ty=Tensor[(1386), float64] */)
}

def @func_8713() -> (Tensor[(2, 16, 4), uint64],) {
  @func_8711() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_12717() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(1320), float32]) {
  @func_12715() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(1320), float32]) */
}

def @func_7719(%var_7718: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %877 = fn (%var_7710: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2025), float64]) {
    %871 = @func_2816() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %872 = cast(%var_7710, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %873 = reshape(%872, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %874 = @func_1639(%873) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) */;
    %875 = %871.1;
    %876 = %874.2;
    (%875, %876, %var_7710)
  };
  %877(%var_7718) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_6130(%var_6124: Tensor[(256, 9), float32]) -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float32], Tensor[(256, 9), float32]) {
  %878 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %879 = cast(meta[relay.Constant][40] /* ty=Tensor[(256, 1), float32] */, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
  %880 = reshape(%879, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %881 = @func_4562(%880) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), float32]) */;
  %882 = cast(meta[relay.Constant][40] /* ty=Tensor[(256, 1), float32] */, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
  %883 = cast(%var_6124, dtype="float32") /* ty=Tensor[(256, 9), float32] */;
  %884 = %878.0;
  %885 = %881.3;
  %886 = floor_mod(%882, %883) /* ty=Tensor[(256, 9), float32] */;
  (%884, %885, %886)
}

def @func_2734() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %890 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %887 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
    %888 = %887.1;
    %889 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%888, %889)
  };
  %890() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_3747() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  @func_3745() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */
}

def @func_9782(%var_9775: Tensor[(12), float64]) -> (Tensor[(360), float64], Tensor[(4, 2, 6), bool], float64, Tensor[(12), float64], Tensor[(48), float64]) {
  %891 = cast(8.5476f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %892 = cast(%var_9775, dtype="float64") /* ty=Tensor[(12), float64] */;
  %893 = cast(meta[relay.Constant][41] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %894 = reshape(%891, newshape=[]) /* ty=float64 */;
  %895 = reshape(%892, newshape=[1, 2, 6]) /* ty=Tensor[(1, 2, 6), float64] */;
  %896 = reshape(%893, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %897 = @func_4247(%894, %895, %896) /* ty=(Tensor[(1, 2, 6), bool], Tensor[(4, 2, 6), bool]) */;
  %898 = @func_5933() /* ty=Tensor[(360), float64] */;
  %899 = %897.1;
  (%898, %899, 8.5476f64 /* ty=float64 */, %var_9775, meta[relay.Constant][41] /* ty=Tensor[(48), float64] */)
}

def @func_5712() -> (Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) {
  @func_5710() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) */
}

def @func_13290() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %905 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
    %900 = @func_9328() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %901 = @func_12795() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2025), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64]) */;
    %902 = %900.0;
    %903 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
    %904 = %901.0;
    (%902, %903, %904)
  };
  %905() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_10605() -> Tensor[(2, 16, 4), uint64] {
  @func_10603() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4160() -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
  @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */
}

def @func_6199() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %906 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %907 = @func_4158() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */;
  %908 = %906.1;
  %909 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %910 = %907.0;
  (%908, %909, %910)
}

def @func_12552() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_12550() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_12686() -> (Tensor[(2, 16, 4), uint64],) {
  %911 = @func_12450() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64]) */;
  %912 = %911.0;
  (%912,)
}

def @func_8865(%var_8863: Tensor[(9, 225), float64]) -> (Tensor[(2, 3, 8), int8], Tensor[(11, 15, 8), float32], Tensor[(9, 225), float64]) {
  %913 = @func_3129() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) */;
  %914 = cast(%var_8863, dtype="float64") /* ty=Tensor[(9, 225), float64] */;
  %915 = cast(%var_8863, dtype="float64") /* ty=Tensor[(9, 225), float64] */;
  %916 = reshape(%914, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %917 = reshape(%915, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %918 = @func_4529(%916, %917) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), uint8], Tensor[(2025), float32]) */;
  %919 = %913.1;
  %920 = %918.2;
  (%919, %920, %var_8863)
}

def @func_4478() -> (Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(2, 16, 4), uint64]) {
  @func_4476() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(315), float32], Tensor[(2, 16, 4), uint64]) */
}

def @func_6582() -> Tensor[(2, 16, 4), uint64] {
  %921 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %921() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_8461(%var_8459: Tensor[(7, 1, 3), uint8], %var_8460: Tensor[(7, 13, 3), uint8]) -> (Tensor[(7, 13, 3), uint8], Tensor[(1728), int64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 12, 9), float64], Tensor[(360), float64]) {
  %938 = fn (%var_8401: Tensor[(7, 1, 3), uint8], %var_8402: Tensor[(7, 13, 3), uint8]) -> (Tensor[(7, 13, 3), uint8], Tensor[(1728), int64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 12, 9), float64], Tensor[(360), float64]) {
    %922 = cast(%var_8401, dtype="uint8") /* ty=Tensor[(7, 1, 3), uint8] */;
    %923 = cast(%var_8402, dtype="uint8") /* ty=Tensor[(7, 13, 3), uint8] */;
    %924 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %925 = cast(meta[relay.Constant][42] /* ty=Tensor[(1728), int64] */, dtype="int64") /* ty=Tensor[(1728), int64] */;
    %926 = cast(meta[relay.Constant][42] /* ty=Tensor[(1728), int64] */, dtype="int64") /* ty=Tensor[(1728), int64] */;
    %927 = reshape(%925, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), int64] */;
    %928 = reshape(%926, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), int64] */;
    %929 = @func_6960(%927, %928) /* ty=(Tensor[(16, 12, 9), int64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %930 = %929.0;
    %931 = cast(%930, dtype="float64") /* ty=Tensor[(16, 12, 9), float64] */;
    %932 = @func_4959() /* ty=(Tensor[(360), float64],) */;
    %933 = multiply(%922, %923) /* ty=Tensor[(7, 13, 3), uint8] */;
    %934 = %924.0;
    %935 = @func_8348() /* ty=Tensor[(2, 16, 4), uint64] */;
    %936 = sigmoid(%931) /* ty=Tensor[(16, 12, 9), float64] */;
    %937 = %932.0;
    (%933, meta[relay.Constant][42] /* ty=Tensor[(1728), int64] */, %934, %935, %936, %937)
  };
  %938(%var_8459, %var_8460) /* ty=(Tensor[(7, 13, 3), uint8], Tensor[(1728), int64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 12, 9), float64], Tensor[(360), float64]) */
}

def @func_3184(%var_3179: Tensor[(2, 16, 4), uint64]) -> (Tensor[(2, 16, 4), uint16],) {
  %939 = @func_3012() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %940 = %939.0;
  %941 = cast(%var_3179, dtype="uint16") /* ty=Tensor[(2, 16, 4), uint16] */;
  %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%940, dtype="uint16") /* ty=Tensor[(2, 16, 4), uint16] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %945 = left_shift(%943, %944) /* ty=Tensor[(2, 16, 4), uint16] */;
  (%945,)
}

def @func_11486() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_11484() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_12688() -> (Tensor[(2, 16, 4), uint64],) {
  @func_12686() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_7239(%var_7235: Tensor[(6, 3, 8), int32], %var_7236: Tensor[(6, 3, 8), int32], %var_7237: float32, %var_7238: Tensor[(256), float32]) -> (Tensor[(6, 3, 8), int32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(6, 3, 8), float64], Tensor[(2, 16, 4), uint64]) {
  @func_7233(%var_7235, %var_7236, %var_7237, %var_7238) /* ty=(Tensor[(6, 3, 8), int32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(6, 3, 8), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_8665() -> Tensor[(2, 16, 4), uint32] {
  %946 = fn () -> Tensor[(2, 16, 4), uint32] {
    @func_5972() /* ty=Tensor[(2, 16, 4), uint32] */
  };
  %946() /* ty=Tensor[(2, 16, 4), uint32] */
}

def @func_10603() -> Tensor[(2, 16, 4), uint64] {
  %947 = @func_5129() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %947.0
}

def @func_8492() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(21), uint8], Tensor[(273), uint8]) {
  %948 = @func_7153() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %949 = @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %950 = cast(meta[relay.Constant][43] /* ty=Tensor[(21), uint8] */, dtype="uint8") /* ty=Tensor[(21), uint8] */;
  %951 = cast(meta[relay.Constant][44] /* ty=Tensor[(273), uint8] */, dtype="uint8") /* ty=Tensor[(273), uint8] */;
  %952 = reshape(%950, newshape=[7, 1, 3]) /* ty=Tensor[(7, 1, 3), uint8] */;
  %953 = reshape(%951, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), uint8] */;
  %954 = @func_8458(%952, %953) /* ty=(Tensor[(7, 13, 3), uint8], Tensor[(1728), int64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 12, 9), float64], Tensor[(360), float64]) */;
  %955 = %948.1;
  %956 = %949.0;
  %957 = %954.2;
  (%955, %956, %957, meta[relay.Constant][43] /* ty=Tensor[(21), uint8] */, meta[relay.Constant][44] /* ty=Tensor[(273), uint8] */)
}

def @func_2709() -> Tensor[(2, 16, 4), uint64] {
  %958 = fn () -> Tensor[(2, 16, 4), uint64] {
    @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */
  };
  %958() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_7435() -> (Tensor[(2, 16, 4), uint64],) {
  %959 = @func_2079() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%959,)
}

def @func_3972(%var_3970: Tensor[(256), float32]) -> (Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_3969(%var_3970) /* ty=(Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_1507() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) {
  %985 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) {
    %960 = cast(meta[relay.Constant][45] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %961 = cast(meta[relay.Constant][45] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %962 = reshape(%960, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %963 = reshape(%961, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %964 = @func_1010(%962, %963) /* ty=Tensor[(7, 15, 3), float64] */;
    %965 = cast(%964, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
    %966 = cast(meta[relay.Constant][45] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %967 = reshape(%965, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %968 = reshape(%966, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %969 = cast(meta[relay.Constant][46] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %970 = reshape(%969, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float64] */;
    %971 = @func_1064(%970) /* ty=(Tensor[(4, 10, 9), float64],) */;
    %972 = %971.0;
    %973 = cast(%972, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
    %974 = reshape(%973, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), float64] */;
    %975 = @func_1064(%974) /* ty=(Tensor[(4, 10, 9), float64],) */;
    %976 = cast(meta[relay.Constant][45] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %977 = cast(%964, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
    %978 = reshape(%976, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %979 = reshape(%977, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %980 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
    %981 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
    %982 = @func_1010(%967, %968) /* ty=Tensor[(7, 15, 3), float64] */;
    %983 = %975.0;
    %984 = @func_1010(%978, %979) /* ty=Tensor[(7, 15, 3), float64] */;
    (%980, %981, %964, meta[relay.Constant][45] /* ty=Tensor[(315), float32] */, %982, %972, meta[relay.Constant][46] /* ty=Tensor[(360), float64] */, %983, %984)
  };
  %985() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */
}

def @func_5310() -> (Tensor[(360), float64],) {
  @func_5308() /* ty=(Tensor[(360), float64],) */
}

def @func_5589(%var_5577: float64, %var_5578: Tensor[(1, 12), float64], %var_5579: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(1, 2, 6), bool], float64, Tensor[(1, 12), float64], Tensor[(48), float64], Tensor[(4, 15, 1), float64]) {
  %986 = cast(meta[relay.Constant][47] /* ty=Tensor[(1386), float64] */, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %987 = reshape(%986, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float64] */;
  %988 = @func_3563(%987) /* ty=(Tensor[(9, 14, 11), uint8],) */;
  %989 = cast(%var_5577, dtype="float64") /* ty=float64 */;
  %990 = cast(%var_5578, dtype="float64") /* ty=Tensor[(1, 12), float64] */;
  %991 = cast(%var_5579, dtype="float64") /* ty=Tensor[(48), float64] */;
  %992 = reshape(%989, newshape=[]) /* ty=float64 */;
  %993 = reshape(%990, newshape=[1, 2, 6]) /* ty=Tensor[(1, 2, 6), float64] */;
  %994 = reshape(%991, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %995 = @func_4247(%992, %993, %994) /* ty=(Tensor[(1, 2, 6), bool], Tensor[(4, 2, 6), bool]) */;
  %996 = @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */;
  %997 = @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */;
  %998 = %988.0;
  %999 = %995.0;
  %1000 = %996.0;
  (%997, %998, meta[relay.Constant][47] /* ty=Tensor[(1386), float64] */, %999, %var_5577, %var_5578, %var_5579, %1000)
}

def @func_2428(%var_2427: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(15, 10, 2), float32], Tensor[(300), float32], Tensor[(2025), float64]) {
  %1010 = fn (%var_2423: Tensor[(2025), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(15, 10, 2), float32], Tensor[(300), float32], Tensor[(2025), float64]) {
    %1001 = cast(meta[relay.Constant][48] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
    %1002 = cast(%var_2423, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %1003 = reshape(%1001, newshape=[15, 10, 2]) /* ty=Tensor[(15, 10, 2), float32] */;
    %1004 = reshape(%1002, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %1005 = @func_2220(%1003, %1004) /* ty=(Tensor[(15, 10, 2), float32], Tensor[(15, 15, 9), float64], Tensor[(2025), float64]) */;
    %1006 = @func_2079() /* ty=Tensor[(2, 16, 4), uint64] */;
    %1007 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
    %1008 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
    %1009 = %1005.0;
    (%1006, %1007, %1008, %1009, meta[relay.Constant][48] /* ty=Tensor[(300), float32] */, %var_2423)
  };
  %1010(%var_2427) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(15, 10, 2), float32], Tensor[(300), float32], Tensor[(2025), float64]) */
}

def @func_4790() -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
  %1011 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %1012 = %1011.0;
  %1013 = cast(%1012, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %1014 = acos(%1013) /* ty=Tensor[(2, 16, 4), float32] */;
  %1015 = @func_2385() /* ty=Tensor[(2, 16, 4), uint64] */;
  (%1014, %1015)
}

def @func_6201() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  @func_6199() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */
}

def @func_7437() -> (Tensor[(2, 16, 4), uint64],) {
  @func_7435() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_12636() -> (Tensor[(2, 16, 4), uint64],) {
  %1016 = @func_7521() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %1017 = %1016.1;
  (%1017,)
}

def @func_6908(%var_6907: Tensor[(128), uint64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), float32], Tensor[(128), uint64]) {
  %1024 = fn (%var_6904: Tensor[(128), uint64]) -> (Tensor[(360), float64], Tensor[(2, 16, 4), float32], Tensor[(128), uint64]) {
    %1018 = @func_6259() /* ty=(Tensor[(2, 16, 4), uint32], Tensor[(360), float64]) */;
    %1019 = cast(%var_6904, dtype="uint64") /* ty=Tensor[(128), uint64] */;
    %1020 = reshape(%1019, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
    %1021 = @func_1845(%1020) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %1022 = %1018.1;
    %1023 = %1021.1;
    (%1022, %1023, %var_6904)
  };
  %1024(%var_6907) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), float32], Tensor[(128), uint64]) */
}

def @func_7155() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_7153() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_10942() -> Tensor[(273), uint8] {
  %1025 = @func_8492() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(21), uint8], Tensor[(273), uint8]) */;
  %1025.4
}

def @func_5021() -> (Tensor[(2, 16, 4), uint64],) {
  %1028 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %1026 = @func_3129() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) */;
    %1027 = %1026.0;
    (%1027,)
  };
  %1028() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_4298() -> (Tensor[(360), float64],) {
  %1029 = @func_3391() /* ty=Tensor[(360), float64] */;
  (%1029,)
}

def @func_3304(%var_3301: Tensor[(6, 2, 16), uint32], %var_3302: Tensor[(6, 2, 16), uint32], %var_3303: Tensor[(2025), float64]) -> (Tensor[(6, 2, 16), uint32], Tensor[(6, 2, 16), bool], Tensor[(15, 15, 9), int16], Tensor[(15, 15, 9), bool]) {
  @func_3299(%var_3301, %var_3302, %var_3303) /* ty=(Tensor[(6, 2, 16), uint32], Tensor[(6, 2, 16), bool], Tensor[(15, 15, 9), int16], Tensor[(15, 15, 9), bool]) */
}

def @func_1698() -> Tensor[(2, 16, 4), uint64] {
  @func_1295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4529(%var_4493: Tensor[(2025), float64], %var_4509: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), uint8], Tensor[(2025), float32]) {
  %1030 = @func_4298() /* ty=(Tensor[(360), float64],) */;
  %1031 = cast(%var_4493, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1032 = reshape(%1031, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float64] */;
  %1033 = cast(meta[relay.Constant][49] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %1034 = reshape(%1033, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float32] */;
  %1035 = cast(%var_4509, dtype="uint8") /* ty=Tensor[(2025), uint8] */;
  %1036 = shape_of(%var_4493, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1037 = cast(%var_4493, dtype="uint8") /* ty=Tensor[(2025), uint8] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1039 = cast(%var_4509, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1040 = cosh(%1039) /* ty=Tensor[(2025), float64] */;
  %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1042 = %1030.0;
  %1043 = @func_729(%1032) /* ty=Tensor[(15, 15, 9), float64] */;
  %1044 = @func_2305(%1034) /* ty=Tensor[(11, 15, 8), float32] */;
  %1045 = left_shift(%1037, %1038) /* ty=Tensor[(2025), uint8] */;
  %1046 = atan(%1041) /* ty=Tensor[(2025), float32] */;
  (%1042, %1043, %1044, meta[relay.Constant][49] /* ty=Tensor[(1320), float32] */, %1045, %1046)
}

def @func_6156() -> Tensor[(2, 16, 4), uint64] {
  @func_6154() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_10893(%var_10892: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64]) {
  %1057 = fn (%var_10862: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64]) {
    %1047 = @func_5710() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64]) */;
    %1048 = cast(6.56403f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1049 = cast(%var_10862, dtype="float32") /* ty=Tensor[(256), float32] */;
    %1050 = reshape(%1048, newshape=[]) /* ty=float32 */;
    %1051 = reshape(%1049, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %1052 = @func_1359(%1050, %1051) /* ty=(Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32]) */;
    %1053 = @func_9171() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64]) */;
    %1054 = %1047.0;
    %1055 = %1052.1;
    %1056 = %1053.0;
    (%1054, %1055, 6.56403f /* ty=float32 */, %var_10862, %1056)
  };
  %1057(%var_10892) /* ty=(Tensor[(2, 16, 4), uint64], float32, float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64]) */
}

def @func_5544() -> (Tensor[(4, 15, 1), float64],) {
  @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */
}

def @func_5295() -> Tensor[(2, 16, 4), uint64] {
  @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_8519() -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
  %1062 = fn () -> (Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) {
    %1058 = @func_1798() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(315), float32]) */;
    %1059 = @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %1060 = %1058.0;
    %1061 = %1059.0;
    (%1060, %1061)
  };
  %1062() /* ty=(Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), uint64]) */
}

def @func_9488(%var_9487: Tensor[(2, 10, 15), int8]) -> Tensor[(2, 10, 15), int8] {
  %1067 = fn (%var_9451: Tensor[(2, 10, 15), int8]) -> Tensor[(2, 10, 15), int8] {
    %1063 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 10, 15), int8] */, dtype="int8") /* ty=Tensor[(2, 10, 15), int8] */;
    %1064 = shape_of(%var_9451, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1065 = cast(%var_9451, dtype="int8") /* ty=Tensor[(2, 10, 15), int8] */;
    %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    right_shift(%1065, %1066) /* ty=Tensor[(2, 10, 15), int8] */
  };
  %1067(%var_9487) /* ty=Tensor[(2, 10, 15), int8] */
}

def @func_1845(%var_1827: Tensor[(2, 16, 4), uint64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %1068 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %1069 = %1068.0;
  %1070 = cast(%var_1827, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %1071 = shape_of(%1069, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1072 = cast(%1069, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1074 = not_equal(%1072, %1073) /* ty=Tensor[(2, 16, 4), bool] */;
  %1075 = cast(%1074, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %1076 = @func_1698() /* ty=Tensor[(2, 16, 4), uint64] */;
  %1077 = sin(%1075) /* ty=Tensor[(2, 16, 4), float32] */;
  (%1076, %1077)
}

def @func_7338() -> Tensor[(2, 16, 4), uint64] {
  @func_5295() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4533(%var_4531: Tensor[(2025), float64], %var_4532: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), uint8], Tensor[(2025), float32]) {
  @func_4529(%var_4531, %var_4532) /* ty=(Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(11, 15, 8), float32], Tensor[(1320), float32], Tensor[(2025), uint8], Tensor[(2025), float32]) */
}

def @func_12622(%var_12620: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
  @func_12619(%var_12620) /* ty=Tensor[(12, 12, 13), float64] */
}

def @func_9171() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 10, 9), float64]) {
  %1078 = @func_5242() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32]) */;
  %1079 = @func_1506() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float64], Tensor[(315), float32], Tensor[(7, 15, 3), float64], Tensor[(4, 10, 9), float64], Tensor[(360), float64], Tensor[(4, 10, 9), float64], Tensor[(7, 15, 3), float64]) */;
  %1080 = %1078.1;
  %1081 = @func_2708() /* ty=Tensor[(2, 16, 4), uint64] */;
  %1082 = %1079.7;
  (%1080, %1081, %1082)
}

def @func_12571(%var_12561: Tensor[(50, 6), int8], %var_12569: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(2, 10, 15), int8], Tensor[(50, 6), int8], Tensor[(300), float32], Tensor[(2025), float64]) {
  %1083 = @func_4959() /* ty=(Tensor[(360), float64],) */;
  %1084 = cast(%var_12561, dtype="int8") /* ty=Tensor[(50, 6), int8] */;
  %1085 = reshape(%1084, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), int8] */;
  %1086 = cast(%var_12569, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1087 = reshape(%1086, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1088 = @func_2426(%1087) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(15, 10, 2), float32], Tensor[(300), float32], Tensor[(2025), float64]) */;
  %1089 = %1083.0;
  %1090 = @func_9486(%1085) /* ty=Tensor[(2, 10, 15), int8] */;
  %1091 = %1088.4;
  (%1089, %1090, %var_12561, %1091, %var_12569)
}

def @func_3403() -> (Tensor[(2, 16, 4), uint64],) {
  @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_4047() -> Tensor[(2, 16, 4), uint64] {
  @func_4045() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_10528() -> (Tensor[(2, 16, 4), uint32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(14, 3, 14), float64], Tensor[(14, 42), float64]) {
  %1103 = fn () -> (Tensor[(2, 16, 4), uint32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(14, 3, 14), float64], Tensor[(14, 42), float64]) {
    %1092 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %1093 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %1094 = @func_6096() /* ty=(Tensor[(2, 16, 4), float64], Tensor[(48), float64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %1095 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 42), float64] */, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
    %1096 = reshape(%1095, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), float64] */;
    %1097 = @func_8664() /* ty=Tensor[(2, 16, 4), uint32] */;
    %1098 = %1092.0;
    %1099 = %1093.0;
    %1100 = %1094.0;
    %1101 = @func_10319() /* ty=Tensor[(2, 16, 4), uint64] */;
    %1102 = @func_7887(%1096) /* ty=Tensor[(14, 3, 14), float64] */;
    (%1097, %1098, %1099, %1100, %1101, %1102, meta[relay.Constant][51] /* ty=Tensor[(14, 42), float64] */)
  };
  %1103() /* ty=(Tensor[(2, 16, 4), uint32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(14, 3, 14), float64], Tensor[(14, 42), float64]) */
}

def @func_8494() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(21), uint8], Tensor[(273), uint8]) {
  @func_8492() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(21), uint8], Tensor[(273), uint8]) */
}

def @func_11833() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_11831() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_13114() -> (Tensor[(360), float64], Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float32]) {
  @func_13112() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), float32], Tensor[(2, 16, 4), float32]) */
}

def @func_7828() -> Tensor[(4, 15, 1), float64] {
  %1105 = fn () -> Tensor[(4, 15, 1), float64] {
    %1104 = @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */;
    %1104.0
  };
  %1105() /* ty=Tensor[(4, 15, 1), float64] */
}

def @func_5206() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) {
  %1106 = @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %1107 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %1108 = %1106.0;
  %1109 = %1107.0;
  (%1108, %1109)
}

def @func_3334() -> (Tensor[(2, 16, 4), uint64],) {
  %1111 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %1110 = @func_1532() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%1110,)
  };
  %1111() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_3848() -> Tensor[(2, 16, 4), uint64] {
  %1113 = fn () -> Tensor[(2, 16, 4), uint64] {
    %1112 = @func_1653() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %1112.0
  };
  %1113() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_4980() -> (Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) {
  @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */
}

def @func_1639(%var_1628: Tensor[(2025), float64]) -> (Tensor[(360), float64], Tensor[(15, 15, 9), float64], Tensor[(2025), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  %1114 = cast(%var_1628, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1115 = reshape(%1114, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float64] */;
  %1116 = cast(meta[relay.Constant][52] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1117 = cast(meta[relay.Constant][52] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1118 = reshape(%1116, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %1119 = reshape(%1117, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %1120 = @func_1597() /* ty=Tensor[(360), float64] */;
  %1121 = @func_729(%1115) /* ty=Tensor[(15, 15, 9), float64] */;
  %1122 = @func_1010(%1118, %1119) /* ty=Tensor[(7, 15, 3), float64] */;
  (%1120, %1121, %var_1628, %1122, meta[relay.Constant][52] /* ty=Tensor[(315), float32] */)
}

def @func_3130() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) {
  %1127 = fn () -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) {
    %1123 = cast(meta[relay.Constant][53] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1124 = reshape(%1123, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
    %1125 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
    %1126 = @func_2634(%1124) /* ty=Tensor[(2, 3, 8), int8] */;
    (%1125, %1126, meta[relay.Constant][53] /* ty=Tensor[(48), float64] */)
  };
  %1127() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 3, 8), int8], Tensor[(48), float64]) */
}

def @func_3393() -> Tensor[(360), float64] {
  @func_3391() /* ty=Tensor[(360), float64] */
}

def @func_2462(%var_2460: Tensor[(8, 13, 5), uint16], %var_2461: float32) -> (Tensor[(8, 13, 5), uint16], Tensor[(8, 32), float32], float32) {
  %1137 = fn (%var_2449: Tensor[(8, 13, 5), uint16], %var_2455: float32) -> (Tensor[(8, 13, 5), uint16], Tensor[(8, 32), float32], float32) {
    %1128 = cast(meta[relay.Constant][54] /* ty=Tensor[(8, 13, 5), uint16] */, dtype="uint16") /* ty=Tensor[(8, 13, 5), uint16] */;
    %1129 = shape_of(%var_2449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1130 = cast(%var_2449, dtype="uint16") /* ty=Tensor[(8, 13, 5), uint16] */;
    %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1132 = cast(%var_2455, dtype="float32") /* ty=float32 */;
    %1133 = reshape(%1132, newshape=[]) /* ty=float32 */;
    %1134 = @func_2038(%1133) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), bool], Tensor[(16, 3, 10), float64], float32, Tensor[(8, 32), float32], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
    %1135 = add(%1130, %1131) /* ty=Tensor[(8, 13, 5), uint16] */;
    %1136 = %1134.4;
    (%1135, %1136, %var_2455)
  };
  %1137(%var_2460, %var_2461) /* ty=(Tensor[(8, 13, 5), uint16], Tensor[(8, 32), float32], float32) */
}

def @func_11374(%var_11373: Tensor[(12, 15, 6), float32]) -> Tensor[(12, 15, 6), float32] {
  %1139 = fn (%var_11362: Tensor[(12, 15, 6), float32]) -> Tensor[(12, 15, 6), float32] {
    %1138 = cast(%var_11362, dtype="float32") /* ty=Tensor[(12, 15, 6), float32] */;
    exp(%1138) /* ty=Tensor[(12, 15, 6), float32] */
  };
  %1139(%var_11373) /* ty=Tensor[(12, 15, 6), float32] */
}

def @func_11338() -> (Tensor[(2, 16, 4), uint64],) {
  %1141 = fn () -> (Tensor[(2, 16, 4), uint64],) {
    %1140 = @func_3803() /* ty=Tensor[(2, 16, 4), uint64] */;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

def @func_4695(%var_4693: Tensor[(14, 12, 5), float64], %var_4694: Tensor[(128), uint64]) -> (Tensor[(14, 12, 5), float32], Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(14, 12, 5), float64]) {
  %1155 = fn (%var_4679: Tensor[(14, 12, 5), float64], %var_4686: Tensor[(128), uint64]) -> (Tensor[(14, 12, 5), float32], Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(14, 12, 5), float64]) {
    %1142 = cast(%var_4679, dtype="float32") /* ty=Tensor[(14, 12, 5), float32] */;
    %1143 = cast(%var_4686, dtype="uint64") /* ty=Tensor[(128), uint64] */;
    %1144 = reshape(%1143, newshape=[2, 16, 4]) /* ty=Tensor[(2, 16, 4), uint64] */;
    %1145 = @func_1845(%1144) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %1146 = cast(%var_4679, dtype="float64") /* ty=Tensor[(14, 12, 5), float64] */;
    %1147 = atanh(%1146) /* ty=Tensor[(14, 12, 5), float64] */;
    %1148 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 12, 5), float64] */;
    %1149 = shape_of(%1147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1150 = cast(%1147, dtype="float64") /* ty=Tensor[(14, 12, 5), float64] */;
    %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1152 = atan(%1142) /* ty=Tensor[(14, 12, 5), float32] */;
    %1153 = %1145.0;
    %1154 = floor_divide(%1150, %1151) /* ty=Tensor[(14, 12, 5), float64] */;
    (%1152, %1153, %var_4686, %1154)
  };
  %1155(%var_4693, %var_4694) /* ty=(Tensor[(14, 12, 5), float32], Tensor[(2, 16, 4), uint64], Tensor[(128), uint64], Tensor[(14, 12, 5), float64]) */
}

def @func_12364(%var_12354: float32, %var_12355: Tensor[(256), float32]) -> (Tensor[(273), uint8], Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32]) {
  %1156 = cast(%var_12354, dtype="float32") /* ty=float32 */;
  %1157 = cast(%var_12355, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1158 = reshape(%1156, newshape=[]) /* ty=float32 */;
  %1159 = reshape(%1157, newshape=[8, 32]) /* ty=Tensor[(8, 32), float32] */;
  %1160 = @func_380(%1158, %1159) /* ty=(Tensor[(16, 3, 10), float64], Tensor[(16, 2, 8), float32], float32, Tensor[(8, 32), float32]) */;
  %1161 = @func_10942() /* ty=Tensor[(273), uint8] */;
  %1162 = %1160.1;
  (%1161, %1162, %var_12354, %var_12355)
}

def @func_9785(%var_9783: Tensor[(12), float64]) -> (Tensor[(360), float64], Tensor[(4, 2, 6), bool], float64, Tensor[(12), float64], Tensor[(48), float64]) {
  @func_9782(%var_9783) /* ty=(Tensor[(360), float64], Tensor[(4, 2, 6), bool], float64, Tensor[(12), float64], Tensor[(48), float64]) */
}

def @func_10540(%var_10538: int16, %var_10539: Tensor[(10, 12, 1), int16]) -> Tensor[(10, 12, 1), int16] {
  @func_10536(%var_10538, %var_10539) /* ty=Tensor[(10, 12, 1), int16] */
}

def @func_11011(%var_11010: Tensor[(1386), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(48), float64], Tensor[(48), float32], Tensor[(1386), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 15, 1), float64]) {
  %1178 = fn (%var_10981: Tensor[(1386), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(48), float64], Tensor[(48), float32], Tensor[(1386), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 15, 1), float64]) {
    %1163 = @func_4906() /* ty=(Tensor[(2, 16, 4), uint64],) */;
    %1164 = @func_6199() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float32]) */;
    %1165 = cast(meta[relay.Constant][56] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1166 = cast(%var_10981, dtype="float64") /* ty=Tensor[(1386), float64] */;
    %1167 = reshape(%1165, newshape=[16, 3, 1]) /* ty=Tensor[(16, 3, 1), float32] */;
    %1168 = reshape(%1166, newshape=[1386]) /* ty=Tensor[(1386), float64] */;
    %1169 = @func_8218(%1167, %1168) /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64], Tensor[(16, 3, 2025), bool], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(48), float64]) */;
    %1170 = @func_4287() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
    %1171 = @func_5542() /* ty=(Tensor[(4, 15, 1), float64],) */;
    %1172 = %1163.0;
    %1173 = %1164.1;
    %1174 = %1169.5;
    %1175 = @func_1946() /* ty=Tensor[(2, 16, 4), uint64] */;
    %1176 = %1170.1;
    %1177 = %1171.0;
    (%1172, %1173, %1174, meta[relay.Constant][56] /* ty=Tensor[(48), float32] */, %var_10981, %1175, %1176, %1177)
  };
  %1178(%var_11010) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(48), float64], Tensor[(48), float32], Tensor[(1386), float64], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(4, 15, 1), float64]) */
}

def @func_7490() -> Tensor[(360), float64] {
  %1179 = fn () -> Tensor[(360), float64] {
    @func_6939() /* ty=Tensor[(360), float64] */
  };
  %1179() /* ty=Tensor[(360), float64] */
}

def @func_12900() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  @func_12898() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */
}

def @func_6615(%var_6606: Tensor[(12), float64], %var_6607: Tensor[(48), float64]) -> (Tensor[(2, 16, 4), uint64], Tensor[(48), float64], float64, Tensor[(12), float64], Tensor[(48), float64], Tensor[(7, 15, 3), float64], Tensor[(315), float32]) {
  %1180 = @func_4978() /* ty=(Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %1181 = cast(-8.25889f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1182 = cast(%var_6606, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1183 = cast(%var_6607, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1184 = reshape(%1181, newshape=[]) /* ty=float64 */;
  %1185 = reshape(%1182, newshape=[1, 12]) /* ty=Tensor[(1, 12), float64] */;
  %1186 = reshape(%1183, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1187 = @func_5589(%1184, %1185, %1186) /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(9, 14, 11), uint8], Tensor[(1386), float64], Tensor[(1, 2, 6), bool], float64, Tensor[(1, 12), float64], Tensor[(48), float64], Tensor[(4, 15, 1), float64]) */;
  %1188 = cast(meta[relay.Constant][57] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1189 = cast(meta[relay.Constant][57] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1190 = reshape(%1188, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %1191 = reshape(%1189, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %1192 = %1180.1;
  %1193 = %1187.6;
  %1194 = @func_1010(%1190, %1191) /* ty=Tensor[(7, 15, 3), float64] */;
  (%1192, %1193, -8.25889f64 /* ty=float64 */, %var_6606, %var_6607, %1194, meta[relay.Constant][57] /* ty=Tensor[(315), float32] */)
}

def @func_11484() -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) {
  %1195 = @func_7731() /* ty=(Tensor[(1, 15, 9), float64], Tensor[(2, 16, 4), uint64]) */;
  %1196 = @func_8018() /* ty=(Tensor[(2, 16, 4), uint64], Tensor[(360), float64], Tensor[(2, 16, 4), uint64]) */;
  %1197 = %1195.1;
  %1198 = %1196.2;
  (%1197, %1198)
}

def @func_3052() -> Tensor[(2, 16, 4), uint64] {
  @func_3050() /* ty=Tensor[(2, 16, 4), uint64] */
}

def @func_9284() -> Tensor[(2, 16, 4), float32] {
  @func_9282() /* ty=Tensor[(2, 16, 4), float32] */
}

def @func_4562(%var_4554: Tensor[(256), float32]) -> (Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64], Tensor[(256), float32], Tensor[(2, 16, 4), float32]) {
  %1199 = @func_3401() /* ty=(Tensor[(2, 16, 4), uint64],) */;
  %1200 = cast(%var_4554, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1201 = reshape(%1200, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %1202 = @func_3969(%1201) /* ty=(Tensor[(16, 2, 8), float32], float32, Tensor[(256), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), float64], Tensor[(2, 16, 4), uint64], Tensor[(7, 15, 3), float32], Tensor[(2, 16, 4), uint64], Tensor[(2, 16, 4), uint64]) */;
  %1203 = @func_2491() /* ty=(Tensor[(2, 16, 4), float32],) */;
  %1204 = %1199.0;
  %1205 = %1202.5;
  %1206 = %1203.0;
  (%1204, %1205, %var_4554, %1206)
}

def @func_7792() -> (Tensor[(2, 16, 4), uint64],) {
  @func_7790() /* ty=(Tensor[(2, 16, 4), uint64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen551/build/output.py:4261: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen551/build/output.py:4266: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen551/build/output.py:4285: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')

===================================
#[version = "0.0.5"]
def @main() -> ((Tensor[(14, 1, 5), float64],), ()) {
  let %x = meta[relay.Constant][0] /* ty=Tensor[(14, 1, 5), float64] */;
  let %x1 = zeros_like(%x);
  let %x2 = (%x,);
  %0 = zeros(shape=[14, 1, 5], dtype="float64");
  let %x3 = (%0,);
  %1 = ones(shape=[14, 1, 5], dtype="float64");
  %2 = (%1,);
  %3 = %2.0;
  %4 = (
    let %x4 = add(%x1, %3);
    ()
  );
  (%x2, %4)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen551/build/output.py", line 4290, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(70) tvmgen_default_fused_zeros_kernel0(double* __restrict__ T_full) {
  T_full[(((int)threadIdx.x))] = 0.000000e+00;
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


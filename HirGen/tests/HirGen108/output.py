import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_56 = relay.const([[[4.345486,5.559490,7.855620,4.744776,-6.553506,-4.384753,1.862557,-2.609539,3.939417,-5.317947,7.376296,6.797324,5.640736,4.826132,-7.555347,-3.068122],[-0.127061,-7.930980,3.639293,-1.772616,-8.032936,7.590623,6.866542,4.248130,-2.319663,-7.654097,-9.069977,-2.715050,3.774968,6.389974,-4.519400,5.832471],[-8.164296,-7.887045,2.243638,1.749222,0.765948,9.103153,6.749318,-7.772410,1.791361,1.293313,-9.683752,0.374268,3.549411,8.694603,-0.812452,-3.767633],[-4.747680,-0.812616,6.733512,9.205387,-9.660026,-8.453523,8.499441,0.997132,9.782997,-9.136965,-4.294095,1.738293,4.004408,-8.764759,-5.193186,-5.792690],[0.424454,-4.647796,-2.702645,-3.144751,4.371080,-5.552686,8.690117,2.546897,-6.516905,-7.724463,0.840199,-5.814965,-6.565099,-8.903049,-5.738580,-8.636560],[4.921133,-5.938621,-1.862560,1.601662,6.330344,7.925044,6.813696,7.227025,-5.654563,5.415365,-3.595811,-7.736249,-1.654604,1.226978,3.033019,-5.212032],[-7.337615,9.170462,3.833436,-9.987708,-4.172322,3.842822,-4.955014,-0.734167,-1.630369,-6.726085,3.597899,-8.320359,4.286758,-5.579871,6.599401,-5.653820],[-7.392056,-8.943674,-7.165902,-5.748514,-4.036479,-6.478690,4.467210,-0.314094,-4.699501,-6.123793,3.488097,9.900257,-8.916473,-4.924815,6.671542,1.223330]],[[-2.331772,1.993186,9.048990,2.166248,-0.535200,-2.319999,-5.184131,6.579958,-6.409628,8.872977,-5.911114,-8.798397,-1.474084,-4.156582,2.726995,3.820275],[-1.627397,-3.830595,5.244575,9.624693,-8.088815,7.568082,-9.410868,3.262577,-5.408341,1.406650,-5.670614,5.890040,-8.699083,-1.470717,0.943273,4.598095],[-9.922726,5.423141,7.745003,6.791482,4.728463,7.601868,-5.045214,-4.938742,2.383844,3.146795,5.363135,-9.778796,2.620007,-4.642451,6.270849,-5.979364],[1.677485,0.920060,-0.753068,-7.654085,8.411533,-8.100441,4.695007,-8.222148,-7.990775,-8.815225,-8.532156,0.482874,8.538089,-5.860746,8.449405,-3.692904],[3.416764,1.760548,7.769459,7.337712,6.476720,-6.294186,-2.934884,2.556796,-1.943908,-3.064109,0.803547,-0.026498,3.291669,1.480790,7.738056,-9.977010],[8.947822,7.149121,5.942042,1.596953,-9.042766,8.299049,-2.169937,1.475442,-0.920774,1.697382,8.734268,-9.020077,-7.824835,5.147146,-7.524756,-4.000960],[8.687861,-4.681496,-9.035458,-7.137710,4.508939,6.378777,-8.711919,-5.143849,7.742342,-2.662098,-4.984923,2.810929,-1.920860,-4.065293,-8.063183,-0.313087],[-5.616689,1.515313,-8.520062,3.700423,8.234697,7.827969,5.925590,8.033429,3.778192,7.866583,-3.663400,8.197311,3.186768,1.084364,-4.370573,-8.268697]],[[-8.280564,-2.661733,9.470459,-5.769649,-8.414958,-4.501400,-6.469352,-6.121500,-9.502596,6.315881,1.599198,7.113944,-0.176012,-5.307008,3.692008,-9.507008],[-0.864725,-4.749227,-8.580335,8.388541,6.347446,6.610118,1.849377,1.917399,6.125757,-2.079808,5.726917,-4.452351,4.328775,6.447054,9.239903,-8.794490],[-4.879092,9.929967,-4.946056,6.471762,-6.991578,6.149993,4.411145,1.538687,0.164967,3.508092,-7.122112,-9.418693,-5.974747,-4.046763,3.252604,-5.950517],[6.865029,5.165358,-1.752391,6.012216,7.548541,-5.824668,-6.188242,0.500797,9.656028,-9.347778,-5.117635,8.105052,-9.955207,-7.510172,6.972969,4.093485],[-6.657159,-8.095875,-8.100576,-1.144150,-5.757535,-9.926021,-9.717872,-2.553710,-4.589336,8.517674,2.444528,2.468050,-5.780446,-0.685761,-0.603907,2.513871],[-3.236328,5.968359,7.316595,-0.799795,-2.592260,-8.570911,-5.110728,5.965833,-8.199173,-1.015656,4.460339,6.978842,9.262886,4.086378,-5.015258,4.047704],[-0.232546,8.213768,-1.691709,8.082880,-1.555093,2.901343,-3.150065,3.997350,-2.181352,3.960293,3.859174,5.163280,-7.245885,4.658934,4.676544,9.918416],[5.339024,-1.905964,-8.794127,1.983828,0.236376,4.936555,0.630228,-4.019524,-3.909109,7.470819,8.483153,1.083244,-8.789815,-7.340938,9.796388,1.949697]],[[-7.508979,-5.673221,-4.023620,8.929418,-0.565529,3.297666,7.342322,7.487978,2.637937,7.023412,-7.727703,-3.514297,4.994587,-2.818981,-2.374521,-0.984044],[5.796350,9.820734,-4.751742,-6.551996,-0.724793,-9.129349,3.105900,8.388630,-0.658924,6.100894,1.065641,2.840060,-8.634987,2.727656,-0.571057,3.661024],[-6.990683,7.459312,4.296051,-0.906612,4.338126,9.341800,-9.546269,-0.334866,-5.707898,7.921149,3.387221,-4.123051,0.470239,5.917334,7.138480,1.850637],[8.394054,-2.463710,-0.211477,-6.487789,8.329279,1.350212,9.831082,9.781826,7.627368,0.487058,8.953030,7.357586,-0.332949,-5.353651,8.807730,0.520158],[-1.117776,-2.159822,-6.996246,5.914408,-7.068326,-2.086414,-0.707765,2.746226,-6.423153,-1.363136,2.478646,-6.104019,-0.297517,8.585221,9.502662,6.014509],[6.514523,-4.865945,-9.555548,1.918853,-9.859636,-8.818292,8.080112,3.135540,1.675849,-8.556176,6.937070,-0.909990,3.817245,6.818834,-0.254698,0.433345],[-6.183009,-2.761840,5.113141,-1.656419,1.427636,-1.866205,-9.377701,-1.990221,0.008641,-8.860048,-7.516772,6.254412,3.407116,-7.126781,6.780414,4.093381],[6.551829,-1.447119,6.975555,2.218437,-3.338443,-8.433524,9.386597,-0.133470,1.575294,8.981609,6.817624,4.726834,2.639200,-7.669177,4.846021,9.666534]],[[6.069759,7.124959,-7.329666,1.360302,-5.552987,3.228697,9.968791,3.977328,7.998094,-4.735760,8.900352,5.251306,5.409024,2.778657,1.219581,7.784312],[-4.327395,4.775933,0.535653,2.472025,-4.333968,6.449952,-4.150814,-3.645812,1.313918,-0.512711,6.901758,-6.266527,-3.708548,1.419699,-4.504960,-4.755799],[-0.320310,5.382291,1.868402,7.573521,4.077517,4.125819,9.059344,2.256600,-3.578119,8.756968,6.981895,-8.290402,2.583635,6.983099,-4.495629,0.816241],[-2.465247,6.985635,5.492982,5.381996,7.516190,7.605127,3.787208,-3.755835,-0.589798,6.077150,9.567013,1.835537,4.675634,-7.732869,7.775041,-7.722774],[-3.667162,7.250167,6.244759,-9.343992,7.323740,4.657594,5.994784,-1.204068,-1.259304,8.211756,1.097331,-1.757447,-3.674484,-6.727065,-7.216518,8.647494],[-1.619225,3.476466,3.711231,6.387653,9.778275,9.880926,-0.620422,-1.592001,2.508870,-0.133159,0.134493,-8.734747,1.313210,4.861477,0.204336,-0.919125],[7.331724,6.818795,9.598166,2.755150,-1.911408,2.408229,-8.749119,0.302453,-8.737413,-9.755561,-5.981323,1.063092,0.848036,-8.977051,3.033076,2.973749],[-0.279858,1.102123,1.442347,-2.072602,-8.855257,-4.591846,6.105641,-7.178005,5.704679,5.711845,0.010334,4.897319,7.019793,-4.438182,-2.148260,9.967131]],[[-2.811325,-4.747082,0.718975,0.162325,4.876854,-5.764627,2.956754,-6.669338,3.957268,7.870530,-3.405720,-5.264056,-3.479988,-6.670439,-4.012750,3.907038],[-7.249466,-2.278169,-4.140237,4.321827,2.266701,-4.270781,1.265799,7.691038,3.208749,8.505227,3.575324,5.894808,-3.529089,-4.822251,-7.263385,-2.902506],[2.756035,-4.169190,-3.156255,1.944893,-8.368170,1.363216,-9.070604,-2.932428,2.828191,4.532618,8.285333,-6.479970,-1.261081,-0.180653,-2.045395,-3.047153],[7.129941,3.399085,-4.424400,9.554811,-3.161612,-7.801457,4.865400,-7.012902,3.591299,6.836766,0.953393,-0.152586,-0.639210,-4.991707,1.103678,8.305717],[3.755268,3.550957,1.245557,-2.249871,3.566302,8.921670,-5.807880,4.231429,4.731578,-6.558052,-8.888148,1.490321,-7.472018,0.879522,-0.127756,-2.581299],[7.066881,8.858078,0.140116,-6.323694,1.350563,6.324301,-4.823118,3.597428,-4.485750,-3.028674,-2.156766,4.481912,5.412801,7.709813,1.763652,3.135489],[3.975583,-2.583439,2.291126,3.518398,-4.488213,-0.347296,2.867883,-1.233086,0.248116,-9.248320,-2.291036,-2.134712,-7.366047,7.775878,-9.017250,-0.180013],[-9.436934,-4.157664,7.252904,-8.379883,-4.265548,-5.023293,-5.788290,6.998989,2.099700,9.289368,-7.146693,5.473844,1.849683,-7.656215,-1.730283,2.245250]],[[0.119485,-6.801013,7.343027,-3.596059,9.225427,0.405972,-9.263403,1.208068,-5.017442,7.931616,2.414499,8.469479,-3.162343,-3.952069,-8.625980,8.459138],[3.155203,5.428388,-6.125409,-6.635169,-6.326087,9.765510,1.522565,4.444429,5.725805,-1.330427,8.283465,-3.721421,0.806660,-1.136730,-4.033984,-7.294275],[5.560505,9.127105,1.357832,4.813477,4.801749,-7.902629,-5.637105,3.165224,1.713444,-8.888885,7.695926,-7.174596,6.083016,5.462650,-4.796017,7.477487],[9.593620,6.056974,-1.020258,-6.955473,0.457544,-2.783800,-6.845398,6.781940,8.578230,9.278400,-0.278218,-3.070548,-3.981096,-4.169416,7.591598,1.898895],[-3.029379,7.406099,8.836803,-1.350540,9.937973,-0.414260,-1.806406,5.022173,7.853281,7.015361,-2.913275,3.526333,4.552530,6.879770,3.359990,9.310911],[5.875756,2.248187,-7.466014,4.635815,-1.932859,-9.534420,9.669763,6.795698,-5.421296,6.147107,-5.121793,7.817042,-5.180831,-9.843091,1.650843,8.778089],[-8.905319,-0.327228,-8.613150,-9.599271,4.239005,-5.760152,-9.991436,-0.314380,-0.157767,2.892518,-8.238266,-1.148745,4.347507,6.153575,-2.956738,0.436358],[8.158063,1.769772,4.809112,-4.336792,-1.668099,-4.224602,-6.142068,4.949664,-7.973694,5.729020,-7.546808,0.598370,-9.127559,-1.962321,5.921331,-0.314832]],[[9.954959,-8.490189,9.586253,-6.784641,0.435782,3.984236,0.048001,-4.147295,3.720928,-2.165736,9.437639,-0.025359,-1.672671,-9.472360,-3.481814,-5.233074],[8.121406,7.519343,-4.634686,-7.197475,-6.394708,8.975776,5.750895,3.898341,-1.223133,-1.366419,3.252637,6.256103,7.280928,5.517152,-8.143744,-6.852459],[-3.777750,7.979133,9.778500,0.413751,8.402610,8.976503,-4.187573,2.644093,-3.864547,6.209498,-5.830803,-0.460649,-6.867511,-4.931723,5.527339,-7.173919],[-7.455299,-7.540252,-6.534417,9.742131,0.697075,-5.839781,7.085049,-8.799005,9.300789,1.684693,-6.643257,9.929600,9.182455,-2.721932,-0.471378,-7.397086],[-3.718636,-4.744938,-2.203275,-8.836772,-9.759903,-3.798594,-7.179809,-1.337690,-7.193328,-2.095143,4.021573,3.906069,7.350322,8.643150,4.861278,-5.666956],[1.967046,-2.521561,-0.669780,7.568737,0.776690,-9.568398,-6.446591,8.567932,-5.943175,7.901059,2.977491,-3.578471,-0.169857,2.088431,3.228507,2.269065],[-0.812396,3.655285,-1.307341,-9.881549,-5.352590,-4.220244,7.912396,3.937914,2.078873,6.435035,0.924341,5.149556,9.930519,0.635890,-7.688569,3.160069],[-4.672316,9.704075,1.977031,-5.836476,-6.249114,-5.290888,-6.218362,5.887176,9.260160,6.797741,-9.513098,-1.543532,7.807672,-7.142919,1.586792,-2.265171]],[[-0.910448,-2.461559,0.182702,2.084778,5.975479,0.464518,4.504044,8.539290,5.546061,-1.498394,6.988547,-5.843042,-8.817258,-2.832751,-1.013874,-6.681017],[-1.269327,4.670409,2.092459,4.971021,-9.038365,5.418152,6.592694,-8.436906,4.293068,-2.724757,-5.177643,5.596895,-4.102328,-2.032063,-1.039808,5.913668],[7.191344,9.895679,-6.297604,-9.437403,7.582237,-5.792190,-6.742979,-7.968742,0.282127,5.230506,8.329812,8.471455,-6.205241,-7.243872,-0.192259,-1.550446],[-5.259846,-0.058180,-2.289657,-5.517848,-7.044034,5.986166,5.464146,-5.508347,-7.377797,-8.834623,-2.659487,2.976936,1.498862,-0.150569,-5.038735,-5.855865],[-3.753789,5.266435,0.109127,-1.356983,-2.279758,-7.172978,1.221346,5.270815,-8.980218,7.849106,4.062826,-5.125379,1.686204,-0.773993,8.304607,-9.225353],[9.092112,-6.923475,0.752390,2.758850,-6.195295,-4.402617,-7.538581,-3.574710,2.560238,-9.187630,-6.691341,-5.967765,4.063476,1.556272,5.975833,-4.101097],[2.988429,2.587390,1.433774,7.083889,-1.084047,-2.788876,7.166649,-8.625898,-4.908994,4.561335,9.782241,-4.435923,-1.804953,0.639202,-2.399729,-5.254706],[-8.827410,-0.416881,-2.889842,-9.870121,9.152512,-4.744530,1.671411,-1.626580,8.814354,-3.517654,1.464738,7.410280,0.502177,8.345882,-2.123395,6.879429]],[[1.369249,-0.500319,0.080985,-4.442258,4.065996,5.917362,9.052432,4.371071,1.843701,3.202043,-4.122618,-3.786065,7.846231,6.393852,-5.232462,2.327330],[3.695880,7.906916,-6.776392,2.208190,-4.906546,-9.115537,-7.476831,-9.825118,9.434779,-0.235273,-7.824053,8.583920,-6.704759,2.805122,-4.477465,-5.413036],[5.328723,-7.623717,-2.117013,8.893022,1.103870,-2.458440,1.095001,9.505825,9.641890,6.025836,2.458170,5.458562,2.032557,-0.094839,1.542785,5.845254],[-3.669692,-2.045414,-3.795004,-3.909628,2.528952,8.404879,9.054503,-4.270715,2.350194,4.914901,-5.673039,-6.042805,3.796536,2.215840,-6.935287,6.421590],[9.794319,5.274291,-9.085254,8.242859,-3.952644,-2.574106,6.052637,-3.807438,-2.895378,1.342309,9.350577,0.233705,-4.371085,0.983341,3.291065,-8.291476],[9.831261,-4.691275,0.537852,7.921329,9.976506,0.729047,-1.179682,8.596996,4.947850,-1.573214,-6.281058,-0.031365,-1.263232,8.232512,-1.600965,-6.193092],[4.238387,5.173145,-5.071813,9.578390,0.570177,2.229798,-6.985210,-4.610328,7.336964,-0.804660,-9.371679,3.106346,4.678795,5.947629,-1.739331,2.391998],[-0.139964,-4.677075,0.797503,-7.937236,-5.397800,5.695140,-3.633812,6.348093,-4.917450,-4.045694,-8.270525,9.235917,-1.009501,2.092236,9.457998,5.949552]],[[-3.047731,-8.769087,8.276165,-9.618663,-6.024099,-5.503524,0.112063,4.579264,-2.648047,5.882182,1.787235,-8.536337,6.148466,-6.916795,-9.064421,-7.421267],[1.231648,-1.969458,-5.676637,-6.345552,-0.731620,6.660590,-1.435919,4.602159,-6.403353,2.322830,-7.641485,-0.479809,-6.260525,-3.085658,-0.310586,5.215426],[5.701118,-7.736450,-1.253627,8.596361,4.896785,-6.067678,4.274355,-0.720960,-4.981117,7.733230,7.225445,-7.937503,-8.158735,-5.206034,-1.650999,-1.580570],[-1.801383,2.504723,5.067108,2.386213,3.754754,7.021012,-0.798780,4.434619,9.331604,9.683845,-5.754250,-8.705746,-2.056859,9.726271,-7.677892,-5.426281],[-3.902157,9.293526,-1.090678,-2.050829,2.835769,-1.461822,-7.963135,-0.151907,-4.458456,-0.764316,-9.742887,5.692400,-7.059303,3.455540,-3.043543,5.032614],[5.336222,8.066644,4.279521,1.205956,5.261865,-1.825643,0.443571,5.648285,-6.319786,-0.398112,5.707428,1.836328,-0.715573,-5.078526,0.172043,8.348412],[5.270032,-2.107379,3.843755,8.958025,-7.471611,-7.632586,-5.931338,1.298047,6.291806,5.838722,-8.058757,-5.306534,0.104077,2.166267,-4.251876,8.092543],[0.344001,3.626924,-2.440006,6.079164,-0.523864,-3.795532,-6.885841,-1.201266,-3.257937,-9.396283,-3.949483,8.087385,2.307750,-3.102867,-8.293577,3.316921]],[[-7.415832,-0.709291,3.290044,5.737601,2.844317,9.334551,8.736461,0.855580,2.006117,-5.513132,7.170729,-6.309185,8.319788,-4.452895,-7.622481,0.614856],[-5.511504,3.932882,-9.359679,-2.352953,8.028881,0.847124,1.021108,-0.213583,-2.371425,-5.909576,-6.427942,-4.517325,-0.330532,7.237183,3.109164,0.298204],[-2.560070,0.833283,7.771143,-6.910049,8.212617,9.062850,7.118731,-1.211960,4.511167,4.789077,5.929377,3.474438,-2.371574,-8.766548,9.229923,-2.436738],[8.754156,-1.863621,9.884221,7.453077,-5.396234,5.672962,-0.559832,1.536478,-3.169876,2.926387,6.065345,5.382158,-6.638230,6.725847,4.532827,3.345636],[9.171221,6.128852,5.528402,-4.665024,-2.717448,7.004817,3.050572,-4.853826,7.399379,9.065342,-9.238560,-1.590629,-4.480212,-3.665666,9.288863,-4.977126],[-8.200311,0.540484,-6.114450,1.514093,1.208497,6.925196,-8.260835,1.994181,-9.821611,-3.517922,4.379582,1.370066,-8.706068,-1.783103,2.326183,-3.553884],[-4.072241,8.661070,8.250348,7.918111,7.548465,7.669811,-8.128284,9.170596,3.591698,1.172696,9.783653,5.430460,6.054345,9.986633,-5.778663,-1.460325],[-8.096035,-9.746384,-9.916414,-2.064066,-7.113164,1.107305,-3.539360,1.448217,-4.219252,2.356273,6.339595,3.722792,-0.998071,-4.238663,3.030368,5.712393]],[[-5.490020,1.043596,-8.253656,3.537888,-4.982938,0.224624,0.533735,-1.564917,-1.121682,5.696584,-7.938382,-3.040212,-2.003014,-2.604741,8.872245,0.520775],[6.318698,-2.559819,-0.735501,-8.663356,8.225519,-7.001321,0.274028,-0.398317,-8.868252,8.064877,4.448758,2.180646,-9.656645,3.930974,6.241541,-5.781684],[3.426118,-3.432906,-7.924310,-7.386358,9.955033,-7.679550,-4.617720,-3.980500,3.313759,9.156092,3.933412,-6.233296,-8.119952,1.068857,-8.217740,-9.101565],[-0.734148,8.156956,-3.665997,-7.365936,-2.102879,-9.973658,-3.693958,1.291409,-4.996289,-4.211805,9.052570,-4.477400,-6.092764,-6.147101,0.567809,-2.876962],[2.883680,-4.892931,-7.164507,5.875963,5.322476,7.260066,-1.703734,2.804639,4.219136,-1.883189,-1.284537,9.677962,-2.627977,5.060757,-2.196552,-0.269003],[-5.887345,7.933098,9.677360,4.311126,-6.125470,-5.810973,-1.566155,-3.758979,8.428088,-8.865476,6.960497,-9.259059,0.217759,6.443746,-9.874635,-8.263193],[-7.403517,7.449730,-7.961682,-1.786883,4.410446,-9.038509,5.579075,0.139433,3.401016,-9.764433,8.373580,3.584302,5.837579,9.588522,-2.415007,-0.162673],[9.090257,-2.115310,-7.584905,0.941099,-8.761162,0.684635,-5.808717,-3.175215,7.168962,-2.352139,-8.731926,6.823203,-2.946004,1.891920,-9.406916,5.147918]]], dtype = "float64")#candidate|56|(13, 8, 16)|const|float64
const_57 = relay.constdtype = "float64")#candidate|57|(13, 8, 16)|const|float64
bop_58 = relay.divide(const_56.astype('float64'), relay.reshape(const_57.astype('float64'), relay.shape_of(const_56))) # shape=(13, 8, 16)
output = bop_58
output2 = bop_58
func_61 = relay.Function([], output)
mod['func_61'] = func_61
mod = relay.transform.InferType()(mod)
mutated_mod['func_61'] = func_61
mutated_mod = relay.transform.InferType()(mutated_mod)
func_61_call = mutated_mod.get_global_var('func_61')
call_62 = func_61_call()
output = call_62
func_63 = relay.Function([], output)
mutated_mod['func_63'] = func_63
mutated_mod = relay.transform.InferType()(mutated_mod)
var_73 = relay.var("var_73", dtype = "uint8", shape = (15, 5, 10))#candidate|73|(15, 5, 10)|var|uint8
var_74 = relay.var("var_74", dtype = "uint8", shape = (15, 5, 10))#candidate|74|(15, 5, 10)|var|uint8
bop_75 = relay.equal(var_73.astype('bool'), relay.reshape(var_74.astype('bool'), relay.shape_of(var_73))) # shape=(15, 5, 10)
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_78 = func_61_call()
call_79 = func_61_call()
output = relay.Tuple([bop_75,call_78,])
output2 = relay.Tuple([bop_75,call_79,])
func_81 = relay.Function([var_73,var_74,], output)
mod['func_81'] = func_81
mod = relay.transform.InferType()(mod)
var_82 = relay.var("var_82", dtype = "uint8", shape = (15, 5, 10))#candidate|82|(15, 5, 10)|var|uint8
var_83 = relay.var("var_83", dtype = "uint8", shape = (15, 5, 10))#candidate|83|(15, 5, 10)|var|uint8
output = func_81(var_82,var_83,)
func_84 = relay.Function([var_82,var_83,], output)
mutated_mod['func_84'] = func_84
mutated_mod = relay.transform.InferType()(mutated_mod)
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_163 = func_61_call()
call_164 = func_61_call()
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_169 = func_61_call()
call_170 = func_61_call()
output = relay.Tuple([call_163,call_169,])
output2 = relay.Tuple([call_164,call_170,])
func_173 = relay.Function([], output)
mod['func_173'] = func_173
mod = relay.transform.InferType()(mod)
output = func_173()
func_174 = relay.Function([], output)
mutated_mod['func_174'] = func_174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_173_call = mod.get_global_var('func_173')
func_174_call = mutated_mod.get_global_var('func_174')
call_204 = relay.TupleGetItem(func_173_call(), 0)
call_205 = relay.TupleGetItem(func_174_call(), 0)
output = call_204
output2 = call_205
func_206 = relay.Function([], output)
mod['func_206'] = func_206
mod = relay.transform.InferType()(mod)
output = func_206()
func_207 = relay.Function([], output)
mutated_mod['func_207'] = func_207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_206_call = mod.get_global_var('func_206')
func_207_call = mutated_mod.get_global_var('func_207')
call_213 = func_206_call()
call_214 = func_206_call()
output = call_213
output2 = call_214
func_215 = relay.Function([], output)
mod['func_215'] = func_215
mod = relay.transform.InferType()(mod)
mutated_mod['func_215'] = func_215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_215_call = mutated_mod.get_global_var('func_215')
call_216 = func_215_call()
output = call_216
func_217 = relay.Function([], output)
mutated_mod['func_217'] = func_217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_266 = func_215_call()
call_267 = func_215_call()
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_269 = func_61_call()
call_270 = func_61_call()
uop_275 = relay.atanh(call_266.astype('float64')) # shape=(13, 8, 16)
uop_277 = relay.atanh(call_267.astype('float64')) # shape=(13, 8, 16)
output = relay.Tuple([call_269,uop_275,])
output2 = relay.Tuple([call_270,uop_277,])
func_288 = relay.Function([], output)
mod['func_288'] = func_288
mod = relay.transform.InferType()(mod)
output = func_288()
func_289 = relay.Function([], output)
mutated_mod['func_289'] = func_289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_293 = func_215_call()
call_294 = func_215_call()
output = call_293
output2 = call_294
func_296 = relay.Function([], output)
mod['func_296'] = func_296
mod = relay.transform.InferType()(mod)
mutated_mod['func_296'] = func_296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_296_call = mutated_mod.get_global_var('func_296')
call_297 = func_296_call()
output = call_297
func_298 = relay.Function([], output)
mutated_mod['func_298'] = func_298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_288_call = mod.get_global_var('func_288')
func_289_call = mutated_mod.get_global_var('func_289')
call_306 = relay.TupleGetItem(func_288_call(), 1)
call_307 = relay.TupleGetItem(func_289_call(), 1)
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_309 = func_215_call()
call_310 = func_215_call()
output = relay.Tuple([call_306,call_309,])
output2 = relay.Tuple([call_307,call_310,])
func_313 = relay.Function([], output)
mod['func_313'] = func_313
mod = relay.transform.InferType()(mod)
output = func_313()
func_314 = relay.Function([], output)
mutated_mod['func_314'] = func_314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_323 = func_215_call()
call_324 = func_215_call()
func_206_call = mod.get_global_var('func_206')
func_207_call = mutated_mod.get_global_var('func_207')
call_327 = func_206_call()
call_328 = func_206_call()
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
call_332 = func_296_call()
call_333 = func_296_call()
output = relay.Tuple([call_323,call_327,call_332,])
output2 = relay.Tuple([call_324,call_328,call_333,])
func_335 = relay.Function([], output)
mod['func_335'] = func_335
mod = relay.transform.InferType()(mod)
mutated_mod['func_335'] = func_335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_335_call = mutated_mod.get_global_var('func_335')
call_336 = func_335_call()
output = call_336
func_337 = relay.Function([], output)
mutated_mod['func_337'] = func_337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_351 = func_215_call()
call_352 = func_215_call()
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_378 = func_61_call()
call_379 = func_61_call()
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_389 = func_215_call()
call_390 = func_215_call()
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_392 = func_215_call()
call_393 = func_215_call()
output = relay.Tuple([call_351,call_378,call_389,call_392,])
output2 = relay.Tuple([call_352,call_379,call_390,call_393,])
func_394 = relay.Function([], output)
mod['func_394'] = func_394
mod = relay.transform.InferType()(mod)
output = func_394()
func_395 = relay.Function([], output)
mutated_mod['func_395'] = func_395
mutated_mod = relay.transform.InferType()(mutated_mod)
const_401 = relay.const([[[-2.391600,-2.377770,-4.996413],[8.097767,2.768819,8.508288],[-8.168250,5.558018,-2.598920],[-5.599360,4.951149,9.760719],[-1.558141,-9.576400,2.152478],[-4.943974,-2.101685,1.817015],[-8.722385,-5.574106,1.011099],[-0.907390,-9.629713,0.441412],[-0.705325,1.282246,-7.423739]],[[-5.481875,5.538054,-6.674699],[1.025240,-6.455101,-9.922381],[-1.599773,-3.804973,-7.723993],[-5.970987,0.878695,-9.879845],[0.670170,-6.430930,1.592044],[-5.925999,0.508740,-5.549692],[-8.638625,9.155078,2.778130],[-8.413653,-4.325449,-5.660521],[9.470392,8.116531,-0.352446]],[[1.336085,-6.453937,-9.888668],[-1.327507,3.726672,-1.703494],[-0.625257,3.218704,7.715632],[9.690360,-5.166552,7.763580],[-7.927525,5.255684,8.955101],[7.741414,-2.009191,6.632460],[3.639878,7.651655,0.277603],[3.596017,-3.477648,4.475474],[0.961399,4.323318,-6.104628]]], dtype = "float64")#candidate|401|(3, 9, 3)|const|float64
uop_402 = relay.log(const_401.astype('float64')) # shape=(3, 9, 3)
output = uop_402
output2 = uop_402
func_415 = relay.Function([], output)
mod['func_415'] = func_415
mod = relay.transform.InferType()(mod)
mutated_mod['func_415'] = func_415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mutated_mod.get_global_var('func_415')
call_416 = func_415_call()
output = call_416
func_417 = relay.Function([], output)
mutated_mod['func_417'] = func_417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_288_call = mod.get_global_var('func_288')
func_289_call = mutated_mod.get_global_var('func_289')
call_510 = relay.TupleGetItem(func_288_call(), 0)
call_511 = relay.TupleGetItem(func_289_call(), 0)
output = relay.Tuple([call_510,])
output2 = relay.Tuple([call_511,])
func_521 = relay.Function([], output)
mod['func_521'] = func_521
mod = relay.transform.InferType()(mod)
mutated_mod['func_521'] = func_521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_521_call = mutated_mod.get_global_var('func_521')
call_522 = func_521_call()
output = call_522
func_523 = relay.Function([], output)
mutated_mod['func_523'] = func_523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_173_call = mod.get_global_var('func_173')
func_174_call = mutated_mod.get_global_var('func_174')
call_524 = relay.TupleGetItem(func_173_call(), 1)
call_525 = relay.TupleGetItem(func_174_call(), 1)
output = call_524
output2 = call_525
func_542 = relay.Function([], output)
mod['func_542'] = func_542
mod = relay.transform.InferType()(mod)
mutated_mod['func_542'] = func_542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_542_call = mutated_mod.get_global_var('func_542')
call_543 = func_542_call()
output = call_543
func_544 = relay.Function([], output)
mutated_mod['func_544'] = func_544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_521_call = mod.get_global_var('func_521')
func_523_call = mutated_mod.get_global_var('func_523')
call_570 = relay.TupleGetItem(func_521_call(), 0)
call_571 = relay.TupleGetItem(func_523_call(), 0)
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_575 = func_61_call()
call_576 = func_61_call()
func_81_call = mod.get_global_var('func_81')
func_84_call = mutated_mod.get_global_var('func_84')
const_583 = relay.const([-1,-8,3,-6,-6,-4,-1,-10,-3,9,-9,-10,-4,-2,-2,4,-4,-6,-10,9,5,7,-2,4,-9,7,6,3,-10,-3,-2,4,9,10,4,-7,5,-7,-10,-2,4,1,9,-9,8,9,-1,3,7,-1,-5,2,-2,-8,-1,-5,10,-2,7,7,-5,5,-1,6,-4,-1,-7,10,3,4,-8,7,-3,6,4,7,-10,-5,-3,-1,2,-9,-6,-8,6,-2,-9,2,-2,5,-10,5,-7,4,-5,-8,-8,6,5,-4,-6,-5,7,-8,-6,7,5,7,-4,1,-8,6,7,10,6,5,2,8,7,-10,-10,10,-9,-9,-10,4,-3,-3,-2,2,-9,-3,-7,2,-8,-1,-9,8,-10,3,-1,-7,5,5,-5,9,-4,-6,-3,8,-1,4,10,8,-10,7,5,-6,-5,2,-7,-3,3,-3,10,-10,10,10,5,-7,10,8,9,-10,4,4,2,2,9,-10,5,-9,-3,5,9,-4,-8,-4,8,-3,5,2,7,1,-9,6,-2,-9,5,4,5,-3,-4,-10,-3,3,-2,-5,10,8,8,3,10,8,5,-7,4,5,-9,8,-10,9,-7,3,-2,-7,3,-4,-4,-8,4,1,-7,4,3,-9,-5,5,5,-9,6,-9,8,4,6,2,7,-10,2,-2,7,6,-10,-4,-8,3,-9,-3,-8,8,8,5,-5,-10,8,10,3,-7,-8,1,-4,-9,9,-9,-8,-10,-6,2,10,8,5,-3,-7,-3,-1,-8,1,7,9,6,2,-6,10,2,9,8,-10,-4,1,-2,4,-5,-9,-2,8,-8,5,-1,-1,7,-2,5,5,-1,-7,-7,4,5,-6,-4,6,-5,5,5,8,5,6,6,-7,6,-1,-6,-8,-2,7,-1,5,3,-3,-3,2,-2,8,-8,6,-1,-10,4,8,-2,-2,-8,-10,-7,9,3,10,10,3,4,-3,-6,2,8,-8,4,5,6,-1,10,5,-3,-1,4,8,-5,3,-3,3,-4,6,-8,-10,-8,-7,2,4,-10,6,-10,4,-7,-5,1,-6,9,-4,2,-3,-4,-9,-4,-2,9,-10,4,2,-10,-6,7,7,1,-4,3,3,8,4,6,-6,-3,2,8,-1,-3,9,-8,-5,-8,-9,-6,8,6,-6,7,-5,-8,-8,-3,5,7,-5,2,1,10,-1,-4,-10,3,3,8,10,9,2,-8,-7,3,-7,3,-7,2,1,8,-8,-7,-3,-1,1,-1,-1,2,-2,-3,1,9,-10,7,6,-5,8,-5,9,2,-7,4,9,-9,2,10,-7,3,-9,-1,8,9,-7,7,-2,7,1,9,-9,3,-8,7,3,5,2,6,1,6,-10,4,-1,1,-2,3,7,-5,10,-2,-3,4,-4,-7,-6,3,-5,7,-9,7,-9,3,6,-2,-9,9,3,9,-6,2,-9,-7,5,-8,4,-4,-6,10,-4,-6,9,4,1,-1,10,-8,-10,1,10,-8,7,-9,10,2,-4,-4,4,-4,1,-1,-9,-8,-3,-6,2,-9,-7,-9,10,10,10,4,2,-10,-3,4,9,5,-2,-8,7,3,-8,1,-4,1,-5,-9,-6,1,-1,3,6,-3,-9,5,8,9,10,5,3,7,2,-6,-6,-8,-2,8,-1,10,-4,5,3,-10,-6,-9,1,-6,4,3,-10,9,-4,-2,10,4,-7,5,-2,6,-10,-6,1,-5,-5,4,-9,-9,-2,7,-5,5,9,3,-7,-1,4,-7,9,-7,-2,2,-6,4,4,-1,4,10,-7,9,3,-10,-7,-9,3,-3,-9,-6,-5,-4,-4,7,-10,-3,1,-1,-10,-9,-10,-3,6,-7,10,1,-4,4,1,-5,-8,10,-10,2,-3,-9,3,5,-8,6,4,3,4,5,9,-8,10,-6,8,2,-3,2,5,-5,2,2,1,-3,5,2,-9,2,-8,-8,8,-6,3,7,7,-10,5,6,-7,3,-8,7,5,5,-6,10,4,-5], dtype = "uint8")#candidate|583|(750,)|const|uint8
call_582 = relay.TupleGetItem(func_81_call(relay.reshape(const_583.astype('uint8'), [15, 5, 10]), relay.reshape(const_583.astype('uint8'), [15, 5, 10]), ), 0)
call_584 = relay.TupleGetItem(func_84_call(relay.reshape(const_583.astype('uint8'), [15, 5, 10]), relay.reshape(const_583.astype('uint8'), [15, 5, 10]), ), 0)
output = relay.Tuple([call_570,call_575,call_582,const_583,])
output2 = relay.Tuple([call_571,call_576,call_584,const_583,])
func_591 = relay.Function([], output)
mod['func_591'] = func_591
mod = relay.transform.InferType()(mod)
mutated_mod['func_591'] = func_591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mutated_mod.get_global_var('func_591')
call_592 = func_591_call()
output = call_592
func_593 = relay.Function([], output)
mutated_mod['func_593'] = func_593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_632 = relay.var("var_632", dtype = "uint32", shape = (6, 5, 7))#candidate|632|(6, 5, 7)|var|uint32
var_633 = relay.var("var_633", dtype = "uint32", shape = (6, 5, 7))#candidate|633|(6, 5, 7)|var|uint32
bop_634 = relay.bitwise_and(var_632.astype('uint32'), relay.reshape(var_633.astype('uint32'), relay.shape_of(var_632))) # shape=(6, 5, 7)
output = relay.Tuple([bop_634,])
output2 = relay.Tuple([bop_634,])
func_650 = relay.Function([var_632,var_633,], output)
mod['func_650'] = func_650
mod = relay.transform.InferType()(mod)
var_651 = relay.var("var_651", dtype = "uint32", shape = (6, 5, 7))#candidate|651|(6, 5, 7)|var|uint32
var_652 = relay.var("var_652", dtype = "uint32", shape = (6, 5, 7))#candidate|652|(6, 5, 7)|var|uint32
output = func_650(var_651,var_652,)
func_653 = relay.Function([var_651,var_652,], output)
mutated_mod['func_653'] = func_653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_173_call = mod.get_global_var('func_173')
func_174_call = mutated_mod.get_global_var('func_174')
call_671 = relay.TupleGetItem(func_173_call(), 1)
call_672 = relay.TupleGetItem(func_174_call(), 1)
var_676 = relay.var("var_676", dtype = "float64", shape = (13, 8, 16))#candidate|676|(13, 8, 16)|var|float64
bop_677 = relay.greater(call_671.astype('bool'), relay.reshape(var_676.astype('bool'), relay.shape_of(call_671))) # shape=(13, 8, 16)
bop_680 = relay.greater(call_672.astype('bool'), relay.reshape(var_676.astype('bool'), relay.shape_of(call_672))) # shape=(13, 8, 16)
const_685 = relay.constdtype = "float64")#candidate|685|(13, 8, 16)|const|float64
bop_686 = relay.mod(var_676.astype('float32'), relay.reshape(const_685.astype('float32'), relay.shape_of(var_676))) # shape=(13, 8, 16)
output = relay.Tuple([bop_677,bop_686,])
output2 = relay.Tuple([bop_680,bop_686,])
func_689 = relay.Function([var_676,], output)
mod['func_689'] = func_689
mod = relay.transform.InferType()(mod)
var_690 = relay.var("var_690", dtype = "float64", shape = (13, 8, 16))#candidate|690|(13, 8, 16)|var|float64
output = func_689(var_690)
func_691 = relay.Function([var_690], output)
mutated_mod['func_691'] = func_691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_721 = relay.var("var_721", dtype = "int64", shape = (4, 14, 8))#candidate|721|(4, 14, 8)|var|int64
var_722 = relay.var("var_722", dtype = "int64", shape = (4, 14, 8))#candidate|722|(4, 14, 8)|var|int64
bop_723 = relay.less(var_721.astype('bool'), relay.reshape(var_722.astype('bool'), relay.shape_of(var_721))) # shape=(4, 14, 8)
func_650_call = mod.get_global_var('func_650')
func_653_call = mutated_mod.get_global_var('func_653')
const_732 = relay.const([-1,9,5,-5,-9,-10,-4,4,-4,5,5,-1,-8,2,-9,4,-4,-5,1,1,10,-10,10,4,-10,-5,-7,-2,3,6,-4,1,-5,8,6,-8,1,-1,-2,2,6,-5,-4,-7,2,7,4,-8,4,-5,-7,7,10,8,-4,4,-10,2,7,-10,-3,-8,5,-5,4,-1,4,-1,-9,8,1,-3,10,-2,-7,9,9,8,-5,-7,5,-2,-8,-5,9,-10,5,1,1,4,8,-7,-3,3,7,7,-7,-1,1,2,9,-2,5,2,9,-3,1,3,4,2,-7,-3,9,1,-2,-1,5,7,-7,8,-7,10,-1,-2,1,6,4,-6,3,-2,-10,-6,-6,-9,-4,-6,5,8,1,1,-3,-1,6,7,-5,-6,2,4,-7,-1,-7,1,-3,10,-9,5,9,7,3,7,-5,-3,-5,6,-9,4,-4,-1,-5,8,-3,-6,-8,8,-8,-7,7,1,8,-5,-6,2,5,-4,4,6,6,-2,4,-6,-6,-5,-5,-7,6,8,3,2,5,10,-10,9,-8,-10,10,5,9,8,-8,6], dtype = "uint32")#candidate|732|(210,)|const|uint32
call_731 = relay.TupleGetItem(func_650_call(relay.reshape(const_732.astype('uint32'), [6, 5, 7]), relay.reshape(const_732.astype('uint32'), [6, 5, 7]), ), 0)
call_733 = relay.TupleGetItem(func_653_call(relay.reshape(const_732.astype('uint32'), [6, 5, 7]), relay.reshape(const_732.astype('uint32'), [6, 5, 7]), ), 0)
func_335_call = mod.get_global_var('func_335')
func_337_call = mutated_mod.get_global_var('func_337')
call_737 = relay.TupleGetItem(func_335_call(), 1)
call_738 = relay.TupleGetItem(func_337_call(), 1)
func_81_call = mod.get_global_var('func_81')
func_84_call = mutated_mod.get_global_var('func_84')
var_743 = relay.var("var_743", dtype = "uint8", shape = (1, 750))#candidate|743|(1, 750)|var|uint8
call_742 = relay.TupleGetItem(func_81_call(relay.reshape(var_743.astype('uint8'), [15, 5, 10]), relay.reshape(var_743.astype('uint8'), [15, 5, 10]), ), 0)
call_744 = relay.TupleGetItem(func_84_call(relay.reshape(var_743.astype('uint8'), [15, 5, 10]), relay.reshape(var_743.astype('uint8'), [15, 5, 10]), ), 0)
func_206_call = mod.get_global_var('func_206')
func_207_call = mutated_mod.get_global_var('func_207')
call_750 = func_206_call()
call_751 = func_206_call()
uop_754 = relay.erf(var_721.astype('float64')) # shape=(4, 14, 8)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
call_759 = func_296_call()
call_760 = func_296_call()
output = relay.Tuple([bop_723,call_731,const_732,call_737,call_742,var_743,call_750,uop_754,call_759,])
output2 = relay.Tuple([bop_723,call_733,const_732,call_738,call_744,var_743,call_751,uop_754,call_760,])
func_772 = relay.Function([var_721,var_722,var_743,], output)
mod['func_772'] = func_772
mod = relay.transform.InferType()(mod)
var_773 = relay.var("var_773", dtype = "int64", shape = (4, 14, 8))#candidate|773|(4, 14, 8)|var|int64
var_774 = relay.var("var_774", dtype = "int64", shape = (4, 14, 8))#candidate|774|(4, 14, 8)|var|int64
var_775 = relay.var("var_775", dtype = "uint8", shape = (1, 750))#candidate|775|(1, 750)|var|uint8
output = func_772(var_773,var_774,var_775,)
func_776 = relay.Function([var_773,var_774,var_775,], output)
mutated_mod['func_776'] = func_776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_313_call = mod.get_global_var('func_313')
func_314_call = mutated_mod.get_global_var('func_314')
call_780 = relay.TupleGetItem(func_313_call(), 0)
call_781 = relay.TupleGetItem(func_314_call(), 0)
output = relay.Tuple([call_780,])
output2 = relay.Tuple([call_781,])
func_804 = relay.Function([], output)
mod['func_804'] = func_804
mod = relay.transform.InferType()(mod)
mutated_mod['func_804'] = func_804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mutated_mod.get_global_var('func_804')
call_805 = func_804_call()
output = call_805
func_806 = relay.Function([], output)
mutated_mod['func_806'] = func_806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_820 = func_215_call()
call_821 = func_215_call()
output = relay.Tuple([call_820,])
output2 = relay.Tuple([call_821,])
func_833 = relay.Function([], output)
mod['func_833'] = func_833
mod = relay.transform.InferType()(mod)
output = func_833()
func_834 = relay.Function([], output)
mutated_mod['func_834'] = func_834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mod.get_global_var('func_415')
func_417_call = mutated_mod.get_global_var('func_417')
call_844 = func_415_call()
call_845 = func_415_call()
const_846 = relay.const([[[-7.612329,9.813451,7.739290],[8.425478,-3.687645,-4.527777],[-9.967717,2.961329,4.037892],[-6.535434,-7.226941,3.399240],[0.012580,7.334560,-6.326512],[-1.471155,-5.512304,7.072850],[-2.770310,2.673907,7.624186],[6.730313,-3.775490,3.817932],[-8.412451,-4.078623,-2.124819]],[[-6.486407,6.545182,-2.398437],[-0.194999,-4.998902,-3.066498],[1.428365,-6.864602,0.946730],[-2.045510,2.655048,5.665133],[-7.570998,-9.194275,9.453749],[-3.444696,-8.309755,5.586088],[-5.331597,1.534598,-1.853184],[-1.795889,-8.033129,-2.116407],[8.269991,9.140521,6.497531]],[[9.760739,-7.413621,-3.327855],[-5.564408,-3.269162,-7.281163],[0.650404,2.091694,2.332660],[-7.110496,0.499693,-0.134203],[1.971661,2.819402,0.821448],[9.663755,-1.416256,-3.713268],[7.735152,-7.865657,-3.114152],[5.482919,3.235013,-5.028754],[4.566960,-9.500437,-6.325891]]], dtype = "float64")#candidate|846|(3, 9, 3)|const|float64
bop_847 = relay.divide(call_844.astype('float32'), relay.reshape(const_846.astype('float32'), relay.shape_of(call_844))) # shape=(3, 9, 3)
bop_850 = relay.divide(call_845.astype('float32'), relay.reshape(const_846.astype('float32'), relay.shape_of(call_845))) # shape=(3, 9, 3)
output = relay.Tuple([bop_847,])
output2 = relay.Tuple([bop_850,])
func_856 = relay.Function([], output)
mod['func_856'] = func_856
mod = relay.transform.InferType()(mod)
output = func_856()
func_857 = relay.Function([], output)
mutated_mod['func_857'] = func_857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_833_call = mod.get_global_var('func_833')
func_834_call = mutated_mod.get_global_var('func_834')
call_880 = relay.TupleGetItem(func_833_call(), 0)
call_881 = relay.TupleGetItem(func_834_call(), 0)
func_288_call = mod.get_global_var('func_288')
func_289_call = mutated_mod.get_global_var('func_289')
call_884 = relay.TupleGetItem(func_288_call(), 0)
call_885 = relay.TupleGetItem(func_289_call(), 0)
func_689_call = mod.get_global_var('func_689')
func_691_call = mutated_mod.get_global_var('func_691')
call_888 = relay.TupleGetItem(func_689_call(relay.reshape(call_884.astype('float64'), [13, 8, 16])), 1)
call_889 = relay.TupleGetItem(func_691_call(relay.reshape(call_884.astype('float64'), [13, 8, 16])), 1)
uop_902 = relay.sin(call_888.astype('float32')) # shape=(13, 8, 16)
uop_904 = relay.sin(call_889.astype('float32')) # shape=(13, 8, 16)
func_394_call = mod.get_global_var('func_394')
func_395_call = mutated_mod.get_global_var('func_395')
call_911 = relay.TupleGetItem(func_394_call(), 1)
call_912 = relay.TupleGetItem(func_395_call(), 1)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_930 = relay.TupleGetItem(func_804_call(), 0)
call_931 = relay.TupleGetItem(func_806_call(), 0)
bop_935 = relay.equal(uop_902.astype('bool'), relay.reshape(call_930.astype('bool'), relay.shape_of(uop_902))) # shape=(13, 8, 16)
bop_938 = relay.equal(uop_904.astype('bool'), relay.reshape(call_931.astype('bool'), relay.shape_of(uop_904))) # shape=(13, 8, 16)
output = relay.Tuple([call_880,call_884,call_911,bop_935,])
output2 = relay.Tuple([call_881,call_885,call_912,bop_938,])
func_940 = relay.Function([], output)
mod['func_940'] = func_940
mod = relay.transform.InferType()(mod)
output = func_940()
func_941 = relay.Function([], output)
mutated_mod['func_941'] = func_941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mod.get_global_var('func_415')
func_417_call = mutated_mod.get_global_var('func_417')
call_952 = func_415_call()
call_953 = func_415_call()
output = relay.Tuple([call_952,])
output2 = relay.Tuple([call_953,])
func_960 = relay.Function([], output)
mod['func_960'] = func_960
mod = relay.transform.InferType()(mod)
mutated_mod['func_960'] = func_960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_960_call = mutated_mod.get_global_var('func_960')
call_961 = func_960_call()
output = call_961
func_962 = relay.Function([], output)
mutated_mod['func_962'] = func_962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_960_call = mod.get_global_var('func_960')
func_962_call = mutated_mod.get_global_var('func_962')
call_970 = relay.TupleGetItem(func_960_call(), 0)
call_971 = relay.TupleGetItem(func_962_call(), 0)
func_394_call = mod.get_global_var('func_394')
func_395_call = mutated_mod.get_global_var('func_395')
call_972 = relay.TupleGetItem(func_394_call(), 3)
call_973 = relay.TupleGetItem(func_395_call(), 3)
output = relay.Tuple([call_970,call_972,])
output2 = relay.Tuple([call_971,call_973,])
func_990 = relay.Function([], output)
mod['func_990'] = func_990
mod = relay.transform.InferType()(mod)
output = func_990()
func_991 = relay.Function([], output)
mutated_mod['func_991'] = func_991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_990_call = mod.get_global_var('func_990')
func_991_call = mutated_mod.get_global_var('func_991')
call_1034 = relay.TupleGetItem(func_990_call(), 0)
call_1035 = relay.TupleGetItem(func_991_call(), 0)
func_772_call = mod.get_global_var('func_772')
func_776_call = mutated_mod.get_global_var('func_776')
var_1062 = relay.var("var_1062", dtype = "int64", shape = (448,))#candidate|1062|(448,)|var|int64
var_1063 = relay.var("var_1063", dtype = "uint8", shape = (1, 750))#candidate|1063|(1, 750)|var|uint8
call_1061 = relay.TupleGetItem(func_772_call(relay.reshape(var_1062.astype('int64'), [4, 14, 8]), relay.reshape(var_1062.astype('int64'), [4, 14, 8]), relay.reshape(var_1063.astype('uint8'), [1, 750]), ), 2)
call_1064 = relay.TupleGetItem(func_776_call(relay.reshape(var_1062.astype('int64'), [4, 14, 8]), relay.reshape(var_1062.astype('int64'), [4, 14, 8]), relay.reshape(var_1063.astype('uint8'), [1, 750]), ), 2)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
call_1067 = func_296_call()
call_1068 = func_296_call()
func_521_call = mod.get_global_var('func_521')
func_523_call = mutated_mod.get_global_var('func_523')
call_1069 = relay.TupleGetItem(func_521_call(), 0)
call_1070 = relay.TupleGetItem(func_523_call(), 0)
func_960_call = mod.get_global_var('func_960')
func_962_call = mutated_mod.get_global_var('func_962')
call_1072 = relay.TupleGetItem(func_960_call(), 0)
call_1073 = relay.TupleGetItem(func_962_call(), 0)
output = relay.Tuple([call_1034,call_1061,var_1062,var_1063,call_1067,call_1069,call_1072,])
output2 = relay.Tuple([call_1035,call_1064,var_1062,var_1063,call_1068,call_1070,call_1073,])
func_1078 = relay.Function([var_1062,var_1063,], output)
mod['func_1078'] = func_1078
mod = relay.transform.InferType()(mod)
mutated_mod['func_1078'] = func_1078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1078_call = mutated_mod.get_global_var('func_1078')
var_1080 = relay.var("var_1080", dtype = "int64", shape = (448,))#candidate|1080|(448,)|var|int64
var_1081 = relay.var("var_1081", dtype = "uint8", shape = (1, 750))#candidate|1081|(1, 750)|var|uint8
call_1079 = func_1078_call(var_1080,var_1081,)
output = call_1079
func_1082 = relay.Function([var_1080,var_1081,], output)
mutated_mod['func_1082'] = func_1082
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1108 = relay.const([[[-8.545523,-4.349876,4.118348,4.074657,-8.385635,-8.631922,0.457243,-2.408365,-3.643775],[-8.470064,-5.686037,6.452949,6.313207,-4.369065,-1.339554,-6.174197,7.339748,2.515479],[1.662507,1.036495,8.227347,-3.687276,0.020068,-1.986046,-0.489292,-9.940690,8.882830],[-8.610923,7.144115,-4.607561,3.901766,-8.880801,4.821436,4.990195,-9.567773,-7.732997],[-7.033580,-3.954509,4.065931,7.053549,9.055983,-1.538882,9.230985,-8.331558,8.136286],[-2.065656,2.677306,-2.064438,5.459109,6.972971,-5.641099,2.398038,-4.680351,-5.145090],[-6.820624,4.803919,1.474267,-5.003434,4.845486,6.042654,4.389659,0.604483,4.210844],[3.675003,2.751274,-2.762145,-6.399553,-4.020969,-0.108205,2.411771,3.599588,-2.705826],[-6.899367,4.209158,5.143206,8.748409,2.159137,-8.389163,-7.984965,1.624016,-9.357768],[7.237574,6.836318,-4.244341,-0.041489,-2.495570,-0.207765,3.437681,8.138923,-2.370879]],[[2.066449,-8.641332,-7.759858,2.441392,-2.052986,-2.737348,9.030639,-6.181151,-4.131336],[-2.032433,-0.441053,-1.829638,8.309775,6.576349,-8.819916,-9.543419,1.750253,-5.435262],[9.139233,-7.323858,-4.281818,-4.167054,-8.648565,-1.638370,4.320681,-1.172734,0.983074],[7.436369,-0.638081,-6.791585,-4.691582,-9.917400,5.615268,-2.108517,2.186849,-7.001185],[2.966408,3.400189,9.310711,-1.093792,-5.713999,-8.864316,9.260179,-9.764925,5.952300],[6.266376,3.671486,0.700455,-4.463078,5.035110,8.015363,-5.912460,7.295678,-0.282697],[2.746314,7.194685,9.600763,-8.702447,4.491696,-6.624215,0.117610,0.762605,-9.363310],[4.857093,-7.407940,-6.334015,-2.672560,-9.576087,-7.087780,3.822303,-0.081692,7.464934],[-2.157525,-8.938370,-7.554650,-8.926010,-1.431438,3.410286,1.897845,-3.886056,0.536575],[1.201054,7.893827,9.010576,-0.686728,4.398948,-2.628233,2.201528,-5.149597,-0.115643]],[[-3.689556,-7.722462,-6.803137,6.723812,-4.772336,7.667012,-7.062392,-9.256724,6.925912],[1.612967,-3.311614,-4.068881,7.039514,6.403228,2.979195,1.961493,2.623192,7.342510],[8.932069,8.195404,-5.391388,3.128214,0.878395,-6.867928,-4.709756,-6.412723,-5.037453],[8.690418,-4.442263,-7.177385,-0.321850,-9.922447,2.256495,-5.386256,-0.738441,7.409716],[-1.592667,-4.929150,-7.906571,-8.501473,-4.072283,5.512972,3.112406,0.592147,5.043793],[-9.141658,8.367940,3.297395,-3.724408,8.359005,9.631878,1.031133,6.116907,1.444028],[-5.186153,-9.035038,7.976467,7.677485,-5.019668,-4.230641,-0.159506,-3.998372,8.232893],[6.698928,8.918151,7.818688,7.763355,-4.937947,-2.645289,-4.348791,-8.621624,7.011640],[-7.347247,-9.832448,6.184503,-9.697867,3.933641,6.427133,2.506757,-3.333213,5.289008],[0.653788,-7.715112,-4.654032,-2.551523,8.334270,0.628053,-9.235948,-8.672347,1.637140]],[[1.035868,0.804744,-9.735363,-7.196577,2.610369,-8.844689,-5.807392,1.579263,5.845132],[4.206218,-8.646666,-4.990079,4.873297,6.452019,-7.634408,-6.550762,3.452199,-7.877554],[-6.221022,5.506117,-2.544275,3.935259,3.771948,3.845586,-9.711697,-8.740198,-9.984469],[-1.905431,5.243761,0.092591,-2.267616,-3.649521,8.904971,6.408225,5.837355,-0.039530],[-8.905026,-2.714979,-7.828525,6.370224,-7.526259,-7.996532,-5.306834,-7.765052,-1.912782],[2.873204,6.060264,-8.974714,9.894376,4.560485,-6.644348,-8.786625,9.045561,5.630758],[-6.660227,-0.392562,-6.205685,9.582518,9.507223,3.268994,2.745604,9.918909,-0.564914],[-4.566368,2.597567,-0.989601,3.390230,8.049899,2.542051,-7.022570,8.139166,-9.859672],[0.158920,-4.338130,0.482059,4.260915,7.783312,-7.615270,-9.712739,0.979244,-9.133931],[-0.708780,-3.852666,-6.687531,-5.119949,8.043320,2.661877,2.817016,-8.885582,9.834187]],[[1.293027,-5.866601,8.640116,-5.218405,4.332922,-2.138919,6.166769,3.491924,-1.999166],[2.921467,6.370809,-3.994724,-1.983620,5.273515,9.528852,1.176334,1.191160,7.323756],[-5.230357,6.694001,8.434635,3.269555,-5.742596,-9.285881,-7.076120,6.969980,3.390091],[-9.764326,0.191650,-1.920607,-9.727904,-4.576431,5.866017,8.296616,6.464591,-1.403162],[-9.080213,-3.031368,-5.698014,9.698261,-1.226920,-6.452001,-9.651814,-4.603249,6.326898],[-9.378553,-3.690197,0.710281,0.926677,8.918141,7.387841,3.610711,4.215599,-6.884828],[6.053781,-7.174325,-7.381892,2.811019,8.498764,6.226582,-3.793236,-1.251284,-3.988104],[-6.754816,-1.444419,-4.427362,7.326488,9.180776,4.924114,0.421270,5.809700,1.381027],[-3.522043,-6.713322,-8.799731,-4.171978,-7.812859,0.327028,9.986270,-2.575355,4.210807],[0.179661,-9.911560,5.570113,5.228735,-5.087505,-6.421084,-1.516912,-8.158219,-1.567589]],[[-4.804777,2.496733,5.417161,7.150936,0.384029,2.371711,9.218471,3.518951,5.419229],[7.432485,1.401872,-8.075249,1.013762,0.109594,2.367171,-9.527675,-6.704181,-8.067050],[-6.347577,-6.474435,6.006879,-9.837394,4.185876,0.566336,-0.970401,0.338573,-6.704698],[3.425342,-3.274318,-0.282901,-7.970757,-3.274997,-5.172668,0.837212,-1.841711,-6.136172],[2.451846,-8.366447,1.608029,0.669970,9.952303,1.340249,-6.391089,1.884169,0.940001],[2.827225,2.657692,6.984749,-0.037410,-3.073743,-9.590789,0.210982,-1.051038,-1.412157],[2.713445,3.823853,-6.880723,-6.250777,-1.838046,-4.198780,6.849020,3.174720,5.569220],[7.864799,4.024834,-6.946338,-4.737639,8.247166,-9.163280,-9.183597,-6.231181,-4.013620],[3.793616,8.634158,-6.478353,5.619727,1.325398,-3.175177,4.993909,4.596224,-7.535044],[9.285925,0.728400,1.232858,-0.823394,4.862074,1.809372,-3.010779,-6.110507,-8.503652]],[[0.568227,0.556829,8.447072,2.437917,8.537310,4.209537,-8.512251,-8.474112,-1.048189],[7.226747,-4.293532,4.092857,-1.422261,-5.840184,8.353131,-5.539189,-0.188580,-4.957155],[9.660388,2.007051,-1.848797,-7.956967,0.755360,-9.225259,-4.992371,-0.569160,-3.853969],[5.154264,6.755008,1.931638,-4.357471,3.860292,2.804345,-9.711296,0.159652,8.441045],[7.008818,5.419802,5.389113,-8.488049,7.066764,-0.334297,-8.747010,3.433105,6.998988],[-1.133308,-2.982688,-5.439811,7.221936,-0.117609,-5.906287,-2.632300,-0.899843,-0.645556],[9.998204,9.089746,-1.643018,-1.566504,5.560900,-0.829501,8.505460,6.382921,3.909065],[6.609745,-4.761671,7.417010,-1.029830,-2.321344,4.325772,-2.216059,3.493373,-2.674400],[8.311237,-2.761139,-3.522746,6.422822,-9.205483,6.005541,-1.791050,-4.883054,-8.410194],[-7.363787,-7.399250,0.461210,4.973860,-0.116960,-1.299475,-3.797904,-6.847334,-8.048317]]], dtype = "float64")#candidate|1108|(7, 10, 9)|const|float64
uop_1109 = relay.rsqrt(const_1108.astype('float64')) # shape=(7, 10, 9)
output = uop_1109
output2 = uop_1109
func_1115 = relay.Function([], output)
mod['func_1115'] = func_1115
mod = relay.transform.InferType()(mod)
output = func_1115()
func_1116 = relay.Function([], output)
mutated_mod['func_1116'] = func_1116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_542_call = mod.get_global_var('func_542')
func_544_call = mutated_mod.get_global_var('func_544')
call_1145 = func_542_call()
call_1146 = func_542_call()
output = relay.Tuple([call_1145,])
output2 = relay.Tuple([call_1146,])
func_1149 = relay.Function([], output)
mod['func_1149'] = func_1149
mod = relay.transform.InferType()(mod)
mutated_mod['func_1149'] = func_1149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1149_call = mutated_mod.get_global_var('func_1149')
call_1150 = func_1149_call()
output = call_1150
func_1151 = relay.Function([], output)
mutated_mod['func_1151'] = func_1151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_990_call = mod.get_global_var('func_990')
func_991_call = mutated_mod.get_global_var('func_991')
call_1152 = relay.TupleGetItem(func_990_call(), 0)
call_1153 = relay.TupleGetItem(func_991_call(), 0)
uop_1154 = relay.asinh(call_1152.astype('float32')) # shape=(3, 9, 3)
uop_1156 = relay.asinh(call_1153.astype('float32')) # shape=(3, 9, 3)
bop_1165 = relay.bitwise_and(uop_1154.astype('uint16'), relay.reshape(call_1152.astype('uint16'), relay.shape_of(uop_1154))) # shape=(3, 9, 3)
bop_1168 = relay.bitwise_and(uop_1156.astype('uint16'), relay.reshape(call_1153.astype('uint16'), relay.shape_of(uop_1156))) # shape=(3, 9, 3)
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_1195 = func_61_call()
call_1196 = func_61_call()
output = relay.Tuple([bop_1165,call_1195,])
output2 = relay.Tuple([bop_1168,call_1196,])
func_1197 = relay.Function([], output)
mod['func_1197'] = func_1197
mod = relay.transform.InferType()(mod)
output = func_1197()
func_1198 = relay.Function([], output)
mutated_mod['func_1198'] = func_1198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_542_call = mod.get_global_var('func_542')
func_544_call = mutated_mod.get_global_var('func_544')
call_1201 = func_542_call()
call_1202 = func_542_call()
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1203 = func_1115_call()
call_1204 = func_1115_call()
output = relay.Tuple([call_1201,call_1203,])
output2 = relay.Tuple([call_1202,call_1204,])
func_1229 = relay.Function([], output)
mod['func_1229'] = func_1229
mod = relay.transform.InferType()(mod)
mutated_mod['func_1229'] = func_1229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mutated_mod.get_global_var('func_1229')
call_1230 = func_1229_call()
output = call_1230
func_1231 = relay.Function([], output)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mod.get_global_var('func_415')
func_417_call = mutated_mod.get_global_var('func_417')
call_1266 = func_415_call()
call_1267 = func_415_call()
output = call_1266
output2 = call_1267
func_1284 = relay.Function([], output)
mod['func_1284'] = func_1284
mod = relay.transform.InferType()(mod)
output = func_1284()
func_1285 = relay.Function([], output)
mutated_mod['func_1285'] = func_1285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1149_call = mod.get_global_var('func_1149')
func_1151_call = mutated_mod.get_global_var('func_1151')
call_1301 = relay.TupleGetItem(func_1149_call(), 0)
call_1302 = relay.TupleGetItem(func_1151_call(), 0)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_1303 = relay.TupleGetItem(func_591_call(), 2)
call_1304 = relay.TupleGetItem(func_593_call(), 2)
const_1307 = relay.const([[[False,False,True,False,True,False,True,True,True,True],[False,False,False,False,False,True,False,False,False,False],[False,False,True,True,True,True,True,True,True,False],[True,True,False,False,True,True,True,False,True,False],[True,True,False,False,True,True,True,False,True,True]],[[False,False,True,False,True,False,True,False,True,False],[True,False,True,True,True,False,True,False,True,False],[False,False,True,False,False,True,True,False,True,True],[True,True,True,True,True,False,True,True,False,True],[True,True,True,True,True,False,True,False,False,False]],[[False,False,True,True,True,True,False,False,True,True],[True,True,True,False,False,False,False,True,True,True],[False,True,False,False,False,True,False,True,True,True],[False,True,True,True,True,False,False,True,True,False],[True,False,True,False,True,True,False,True,False,False]],[[False,True,True,True,True,True,False,True,False,False],[False,False,True,False,True,False,False,False,False,True],[False,True,False,True,True,True,False,True,False,False],[True,True,True,False,False,False,True,False,False,False],[False,False,False,False,False,False,False,True,False,False]],[[False,False,True,False,True,False,True,True,False,False],[True,True,True,True,False,True,True,True,True,True],[True,False,False,False,False,False,False,False,True,False],[True,False,False,False,False,True,True,False,False,True],[False,True,False,True,False,False,False,False,False,True]],[[True,True,True,True,True,True,False,True,False,True],[True,True,True,True,True,False,False,False,False,False],[True,False,False,False,True,False,False,True,False,False],[False,False,False,False,True,True,True,True,True,True],[True,False,False,False,False,False,False,False,False,False]],[[True,False,False,True,False,True,True,False,False,False],[True,True,False,True,True,True,False,False,True,True],[False,False,False,False,False,False,False,True,False,True],[True,True,True,False,False,True,True,False,True,False],[False,False,True,False,True,False,True,False,False,False]],[[True,False,False,True,True,True,True,True,False,False],[False,True,True,True,True,False,False,True,False,False],[True,False,False,False,False,False,False,True,False,False],[False,True,True,False,True,False,True,False,True,True],[False,False,True,False,True,False,False,False,True,False]],[[False,False,False,False,False,False,False,False,True,False],[True,True,False,False,False,True,False,True,True,True],[True,False,True,False,False,True,False,False,True,False],[False,True,False,False,True,True,False,False,True,True],[False,False,True,False,False,True,True,False,False,True]],[[False,True,True,True,True,True,False,False,True,True],[False,True,False,False,True,False,True,True,False,True],[False,False,True,True,True,False,False,False,False,True],[True,False,False,False,False,False,True,False,False,False],[False,False,True,False,False,False,False,False,True,False]],[[True,False,True,False,True,False,False,False,False,True],[True,False,True,True,False,True,True,False,False,True],[False,False,True,False,False,False,False,True,False,False],[True,True,False,False,True,True,False,False,True,True],[True,False,True,False,False,True,False,True,True,False]],[[True,False,False,False,False,False,False,False,True,False],[False,True,True,False,True,True,False,False,True,True],[True,False,False,False,False,False,True,False,True,True],[False,False,True,False,True,True,True,True,True,False],[False,False,True,True,False,True,False,False,True,True]],[[False,False,True,False,False,False,False,True,False,True],[False,True,False,True,True,True,False,False,False,False],[True,False,False,False,False,False,True,False,True,False],[False,True,False,True,True,False,True,True,False,False],[False,False,True,False,False,False,True,False,True,False]],[[False,False,False,False,False,False,True,False,True,False],[False,True,True,True,False,False,True,False,True,True],[False,True,False,True,False,False,True,True,False,False],[True,True,False,False,True,True,False,False,True,True],[False,True,False,True,False,True,True,False,True,False]],[[True,True,False,True,False,False,True,True,True,False],[False,True,True,False,True,False,True,True,True,False],[True,True,False,True,True,False,False,False,False,True],[True,False,False,True,True,False,True,True,False,False],[True,False,True,False,False,False,False,False,False,True]]], dtype = "bool")#candidate|1307|(15, 5, 10)|const|bool
bop_1308 = relay.bitwise_and(call_1303.astype('int64'), relay.reshape(const_1307.astype('int64'), relay.shape_of(call_1303))) # shape=(15, 5, 10)
bop_1311 = relay.bitwise_and(call_1304.astype('int64'), relay.reshape(const_1307.astype('int64'), relay.shape_of(call_1304))) # shape=(15, 5, 10)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_1313 = relay.TupleGetItem(func_804_call(), 0)
call_1314 = relay.TupleGetItem(func_806_call(), 0)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1319 = func_1115_call()
call_1320 = func_1115_call()
func_856_call = mod.get_global_var('func_856')
func_857_call = mutated_mod.get_global_var('func_857')
call_1322 = relay.TupleGetItem(func_856_call(), 0)
call_1323 = relay.TupleGetItem(func_857_call(), 0)
output = relay.Tuple([call_1301,bop_1308,call_1313,call_1319,call_1322,])
output2 = relay.Tuple([call_1302,bop_1311,call_1314,call_1320,call_1323,])
func_1324 = relay.Function([], output)
mod['func_1324'] = func_1324
mod = relay.transform.InferType()(mod)
output = func_1324()
func_1325 = relay.Function([], output)
mutated_mod['func_1325'] = func_1325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1326 = relay.var("var_1326", dtype = "float64", shape = ())#candidate|1326|()|var|float64
var_1327 = relay.var("var_1327", dtype = "float64", shape = (12, 13, 14))#candidate|1327|(12, 13, 14)|var|float64
bop_1328 = relay.floor_mod(var_1326.astype('float64'), var_1327.astype('float64')) # shape=(12, 13, 14)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
call_1335 = func_296_call()
call_1336 = func_296_call()
func_81_call = mod.get_global_var('func_81')
func_84_call = mutated_mod.get_global_var('func_84')
const_1340 = relay.const([-8,-1,6,6,7,5,5,-8,7,3,3,-4,-10,-6,-4,3,3,2,-9,-7,-10,-8,4,-4,-8,-5,-10,-9,-1,-5,5,-7,-9,-8,-9,-7,-9,4,1,-2,-4,-9,9,-7,2,-3,7,7,-9,6,-2,-7,-8,-2,-8,9,3,-6,-7,-3,2,-7,-8,-7,-7,-6,-8,10,3,-6,-6,3,-4,-4,-2,9,6,5,10,2,-6,8,3,-1,-8,7,3,-7,-9,-9,1,4,-4,3,10,-1,4,-2,7,-3,-2,3,10,-4,3,9,9,-1,-2,-9,10,1,-9,-10,6,-3,4,4,6,-5,9,-10,5,5,4,10,-4,-7,-3,1,-2,8,10,4,-9,-2,-10,9,4,3,-8,3,5,6,8,-9,-2,10,6,8,10,-4,-4,6,-8,7,5,7,1,9,-1,-2,3,6,4,7,-8,4,5,-10,-2,-1,9,6,3,9,-4,-8,-3,-8,-10,2,-5,10,10,-5,10,-7,5,-9,9,-2,-3,9,7,-4,2,7,-6,-9,8,7,1,-7,9,5,-7,8,9,5,-5,-5,7,-4,10,9,7,-7,2,-5,1,-7,-4,8,4,-1,4,-6,9,-4,-3,-6,1,-9,7,-1,1,-9,-7,-10,4,-2,7,-9,-9,-5,8,-3,7,1,5,4,-2,-4,-4,9,-8,-6,8,1,-10,8,-10,-8,-4,-2,-1,-8,1,-9,8,3,-7,-1,4,-2,2,6,-2,10,-3,6,1,4,-8,9,1,2,-10,-4,-6,-1,-8,-2,-1,-6,-5,6,-8,7,5,4,7,7,8,4,-8,4,-1,-6,-9,7,-9,-9,5,-5,-2,-10,2,8,9,-7,8,4,-10,-4,-5,2,-5,-10,-6,5,-3,-9,-10,-8,1,-7,7,-10,2,-5,-6,8,7,-6,-5,1,5,5,-6,-4,8,-8,3,-3,4,9,-6,-5,-8,-8,-1,-3,8,10,10,-3,-7,5,-8,2,-8,-4,-1,9,-8,-2,-3,-3,-2,-9,1,3,2,8,8,-4,3,1,6,5,5,3,2,-3,3,9,1,-1,-1,4,9,4,-7,7,-4,-7,10,1,10,-8,-3,6,-10,8,6,-9,-4,-8,-9,-4,9,-6,-3,-1,-8,-5,-8,6,6,9,7,-8,4,-2,10,8,9,-8,-10,5,-10,10,9,-7,-1,8,6,-1,-1,3,-10,3,-6,2,-10,7,-5,-1,2,-1,6,-1,5,-3,6,10,-1,-5,-1,-5,2,-4,-1,-3,-3,-6,-6,-1,2,7,-4,-3,-9,-3,3,-3,2,-6,-2,-5,-5,-6,-1,-2,-3,-8,8,-3,10,-7,-6,10,8,10,-6,7,-8,-2,9,10,5,-2,-1,-7,-1,-4,5,-6,3,-4,-2,10,-3,-9,-6,-6,-10,1,-3,2,5,2,1,4,5,3,-9,9,5,4,-8,-2,7,2,4,-4,2,-10,6,-9,1,8,4,2,5,3,-6,-4,10,5,-1,-4,6,8,-7,-3,-8,8,6,3,8,7,-1,-1,8,-5,-6,2,3,6,-6,8,-9,7,-10,7,6,-4,-4,8,-10,10,3,9,-1,-8,3,-10,6,-10,-8,4,10,3,-2,7,-7,9,-9,6,5,-7,-1,3,-6,2,9,-10,-4,4,-5,8,-7,1,-5,-8,-2,1,3,1,-6,-3,-10,5,-5,2,1,1,-6,6,9,4,-8,-7,8,10,4,8,-4,10,3,9,-1,-1,-3,10,10,5,8,9,-1,-9,-2,-1,-1,8,-4,-7,-7,3,7,2,-9,7,9,5,-7,-7,3,-5,-8,6,10,-8,-4,-5,-6,10,3,3,5,4,-2,1,6,10,1,-7,-1,-7,5,10,8,5,9,-5,-7,6,-9,-7,-5,10,-4,6,-1,-2,7,-6,-2,-8,10,-7,2,6,-2,-8,-9,2,5,-9,-5,3,-3,-6,-9,-7,-8,3,8,3,4,7,-2,-7,1,3,8,-7], dtype = "uint8")#candidate|1340|(750,)|const|uint8
call_1339 = relay.TupleGetItem(func_81_call(relay.reshape(const_1340.astype('uint8'), [15, 5, 10]), relay.reshape(const_1340.astype('uint8'), [15, 5, 10]), ), 1)
call_1341 = relay.TupleGetItem(func_84_call(relay.reshape(const_1340.astype('uint8'), [15, 5, 10]), relay.reshape(const_1340.astype('uint8'), [15, 5, 10]), ), 1)
uop_1358 = relay.erf(call_1335.astype('float32')) # shape=(13, 8, 16)
uop_1360 = relay.erf(call_1336.astype('float32')) # shape=(13, 8, 16)
uop_1363 = relay.log10(call_1335.astype('float64')) # shape=(13, 8, 16)
uop_1365 = relay.log10(call_1336.astype('float64')) # shape=(13, 8, 16)
output = relay.Tuple([bop_1328,call_1339,const_1340,uop_1358,uop_1363,])
output2 = relay.Tuple([bop_1328,call_1341,const_1340,uop_1360,uop_1365,])
func_1379 = relay.Function([var_1326,var_1327,], output)
mod['func_1379'] = func_1379
mod = relay.transform.InferType()(mod)
mutated_mod['func_1379'] = func_1379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1379_call = mutated_mod.get_global_var('func_1379')
var_1381 = relay.var("var_1381", dtype = "float64", shape = ())#candidate|1381|()|var|float64
var_1382 = relay.var("var_1382", dtype = "float64", shape = (12, 13, 14))#candidate|1382|(12, 13, 14)|var|float64
call_1380 = func_1379_call(var_1381,var_1382,)
output = call_1380
func_1383 = relay.Function([var_1381,var_1382,], output)
mutated_mod['func_1383'] = func_1383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_1402 = relay.TupleGetItem(func_591_call(), 1)
call_1403 = relay.TupleGetItem(func_593_call(), 1)
func_689_call = mod.get_global_var('func_689')
func_691_call = mutated_mod.get_global_var('func_691')
call_1405 = relay.TupleGetItem(func_689_call(relay.reshape(call_1402.astype('float64'), [13, 8, 16])), 0)
call_1406 = relay.TupleGetItem(func_691_call(relay.reshape(call_1402.astype('float64'), [13, 8, 16])), 0)
func_1379_call = mod.get_global_var('func_1379')
func_1383_call = mutated_mod.get_global_var('func_1383')
var_1413 = relay.var("var_1413", dtype = "float64", shape = ())#candidate|1413|()|var|float64
var_1414 = relay.var("var_1414", dtype = "float64", shape = (2184, 1))#candidate|1414|(2184, 1)|var|float64
call_1412 = relay.TupleGetItem(func_1379_call(relay.reshape(var_1413.astype('float64'), []), relay.reshape(var_1414.astype('float64'), [12, 13, 14]), ), 4)
call_1415 = relay.TupleGetItem(func_1383_call(relay.reshape(var_1413.astype('float64'), []), relay.reshape(var_1414.astype('float64'), [12, 13, 14]), ), 4)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_1434 = relay.TupleGetItem(func_1229_call(), 1)
call_1435 = relay.TupleGetItem(func_1231_call(), 1)
uop_1440 = relay.sinh(call_1434.astype('float64')) # shape=(7, 10, 9)
uop_1442 = relay.sinh(call_1435.astype('float64')) # shape=(7, 10, 9)
output = relay.Tuple([call_1402,call_1405,call_1412,var_1413,var_1414,uop_1440,])
output2 = relay.Tuple([call_1403,call_1406,call_1415,var_1413,var_1414,uop_1442,])
func_1447 = relay.Function([var_1413,var_1414,], output)
mod['func_1447'] = func_1447
mod = relay.transform.InferType()(mod)
mutated_mod['func_1447'] = func_1447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1447_call = mutated_mod.get_global_var('func_1447')
var_1449 = relay.var("var_1449", dtype = "float64", shape = ())#candidate|1449|()|var|float64
var_1450 = relay.var("var_1450", dtype = "float64", shape = (2184, 1))#candidate|1450|(2184, 1)|var|float64
call_1448 = func_1447_call(var_1449,var_1450,)
output = call_1448
func_1451 = relay.Function([var_1449,var_1450,], output)
mutated_mod['func_1451'] = func_1451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_1468 = relay.TupleGetItem(func_804_call(), 0)
call_1469 = relay.TupleGetItem(func_806_call(), 0)
func_335_call = mod.get_global_var('func_335')
func_337_call = mutated_mod.get_global_var('func_337')
call_1478 = relay.TupleGetItem(func_335_call(), 1)
call_1479 = relay.TupleGetItem(func_337_call(), 1)
output = relay.Tuple([call_1468,call_1478,])
output2 = relay.Tuple([call_1469,call_1479,])
func_1484 = relay.Function([], output)
mod['func_1484'] = func_1484
mod = relay.transform.InferType()(mod)
output = func_1484()
func_1485 = relay.Function([], output)
mutated_mod['func_1485'] = func_1485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_1501 = func_61_call()
call_1502 = func_61_call()
output = call_1501
output2 = call_1502
func_1504 = relay.Function([], output)
mod['func_1504'] = func_1504
mod = relay.transform.InferType()(mod)
output = func_1504()
func_1505 = relay.Function([], output)
mutated_mod['func_1505'] = func_1505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1617 = relay.var("var_1617", dtype = "float32", shape = (1, 4))#candidate|1617|(1, 4)|var|float32
uop_1618 = relay.log2(var_1617.astype('float32')) # shape=(1, 4)
output = relay.Tuple([uop_1618,])
output2 = relay.Tuple([uop_1618,])
func_1620 = relay.Function([var_1617,], output)
mod['func_1620'] = func_1620
mod = relay.transform.InferType()(mod)
mutated_mod['func_1620'] = func_1620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1621 = relay.var("var_1621", dtype = "float32", shape = (1, 4))#candidate|1621|(1, 4)|var|float32
func_1620_call = mutated_mod.get_global_var('func_1620')
call_1622 = func_1620_call(var_1621)
output = call_1622
func_1623 = relay.Function([var_1621], output)
mutated_mod['func_1623'] = func_1623
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1632 = relay.const([[[0.227096,4.150710,-4.985522,-5.291394,3.368329,9.628221,0.455811,-1.616981,3.535657,1.511261,0.806198,3.933413],[-9.363502,-4.079103,4.619976,0.868921,-0.511062,4.514627,-8.194155,-1.059939,7.390185,6.611903,2.135857,2.012818],[4.388825,6.403913,-2.983376,-0.791754,6.323813,0.589980,-6.964504,4.868742,3.855294,8.081096,-6.718134,-6.822929],[7.663056,5.696595,3.592108,-4.926220,0.662953,9.886582,-4.252790,-3.916262,-0.912008,-9.092824,-5.815647,3.931162],[-1.274373,-2.339918,6.330324,2.411279,-1.827207,4.956836,6.424843,-9.834574,8.743226,-1.606270,9.252641,8.453452],[-2.490309,-2.558858,-2.317578,-8.229714,-6.768981,3.928211,6.122570,3.272470,4.694631,-1.744330,-3.887158,7.405677],[-4.536409,8.747950,-0.280839,-3.037356,-2.178976,-2.728925,-1.523252,8.937139,3.069767,-5.969574,6.842800,-6.572269],[-3.884146,9.644314,-0.249797,-8.292237,-9.058390,-1.991892,2.824523,2.067749,-9.299480,-9.599311,7.463975,7.800912],[-8.259230,8.079582,0.987782,7.066715,-7.327973,-6.647632,4.955265,-8.833308,-9.894809,1.904911,6.072740,0.116209],[-2.252791,-2.707271,-6.194986,-1.407895,-7.853080,-1.134512,3.874672,3.970693,2.490480,-9.633486,9.673578,-4.063364],[-5.814449,9.006242,3.097194,3.289145,-4.944012,6.255304,4.391250,3.432779,9.566510,-3.414935,0.062673,8.427019],[3.630098,-6.126515,-4.136340,7.025325,-2.958704,-0.851384,4.914847,6.653764,5.146067,-5.188479,-3.827826,-4.900310],[-0.323338,-9.825598,8.116437,-4.171671,-4.918553,9.106882,1.847731,8.462481,5.551783,9.459455,6.402447,-8.796414],[4.145210,5.476844,-7.876674,-8.201801,-7.896355,2.911878,-0.152043,8.828958,-6.685450,7.868648,5.017142,9.736937],[-8.865774,7.512026,8.426169,-6.448986,1.131890,-5.723996,-1.103802,-3.851529,2.306390,-5.692466,0.101264,-2.259042]],[[-1.457396,3.785618,-8.192383,-4.922963,-6.847402,-0.892580,7.882854,-0.276300,3.876886,-6.131370,2.704868,-1.424053],[-2.404162,-2.063608,-1.410023,4.494131,-7.253252,-0.637627,7.231619,8.586372,4.761563,3.338010,1.477778,4.151596],[-4.052338,-5.561605,-6.284625,0.461351,7.268596,-4.075354,-7.270754,-0.912394,-8.628781,-6.300883,9.878002,0.169527],[4.954034,4.129834,2.701429,4.800656,-2.463959,4.474679,9.939348,-8.651826,7.851081,-4.990839,-4.923681,-0.769723],[-8.937812,1.706152,6.693779,-8.670446,7.211747,6.054827,-1.242793,6.775028,-9.496317,9.963110,4.726835,-4.176803],[-4.637261,-8.414600,5.057501,5.585313,0.257647,0.491440,-9.542514,-9.597212,4.301261,-5.392239,-7.162382,-1.315338],[-9.490915,-7.392313,6.382368,-1.688228,-5.450187,2.514268,-9.907898,4.131226,3.384103,-0.997298,-7.988786,2.825609],[-1.912614,5.839625,2.999095,9.035100,5.207724,1.705861,-3.857770,-1.520892,4.655424,-6.080440,-3.073117,9.472918],[-4.580816,7.230537,-7.764152,-5.941475,-5.336522,-9.511655,1.319141,-5.389460,6.915064,-5.215698,8.504154,-0.649600],[-7.681852,-0.972942,-2.133310,-3.836616,3.559912,8.952931,-6.680076,-6.664815,7.954685,3.841571,-0.036311,7.961979],[2.170017,7.552278,-6.871697,2.170532,-2.430480,-8.134861,-4.235086,4.785523,-0.443054,4.597260,-2.912820,-2.967259],[-8.191936,3.199005,2.283743,5.336918,-5.477511,1.793930,-4.121898,6.151068,5.096041,-9.340729,-4.841718,8.346771],[-7.941914,9.501805,0.613221,2.287633,0.399498,-6.433527,0.729501,-4.344406,7.388451,4.427789,-3.516565,-1.721969],[-3.666269,0.239634,8.342907,3.348809,-6.175575,-7.508662,-4.310446,6.777918,-9.656322,-8.000822,6.887649,7.928971],[9.928675,3.023688,1.751634,8.414378,-0.472399,-0.046921,6.585604,9.189687,5.334406,5.700066,0.313596,1.623075]],[[2.800441,-2.702342,-9.442178,3.093133,-8.809304,-0.797298,-1.775013,7.260755,-9.360262,-1.934995,4.919732,0.742007],[-6.171814,9.476094,-5.372175,7.197651,-6.998229,-4.293481,-2.802914,-4.082228,-0.803657,-2.748377,-8.419115,3.276135],[-0.530231,6.890583,-0.594082,-3.189469,0.580799,-0.355025,-8.601721,0.378029,7.965068,-1.775230,0.570500,-7.421842],[4.660898,2.443640,-2.832340,-4.192549,-0.341951,2.774065,0.913234,1.628222,3.901878,-1.322615,-7.961326,-6.843781],[2.011100,3.364968,-5.373820,0.796309,-2.409425,2.246785,4.187986,0.363028,6.704351,-4.318448,-2.983471,-6.828486],[-3.430308,-6.734021,-7.079344,-0.204416,2.186806,9.148070,-3.130120,9.370503,7.483095,7.281494,-5.280730,-5.757420],[3.315613,-0.507505,7.112164,2.799268,2.724633,-6.399281,3.027939,-7.131632,-5.316247,-3.447068,-0.295170,5.120640],[-9.166635,-3.499968,-3.365515,4.052854,-3.820018,6.557364,-6.864984,4.761396,-2.532011,9.058865,-3.479649,-8.449976],[7.762729,4.085488,-0.554395,0.525733,-1.571123,-6.693159,5.636198,-7.114514,7.471064,3.228302,5.407478,-7.716292],[-3.747019,8.349682,1.118167,6.184137,-9.500608,-9.394647,2.195117,0.290059,8.985496,-3.706642,8.908170,-6.950401],[4.674972,-8.250406,-2.664408,-4.099078,0.149758,-6.478384,-9.669957,1.693701,-4.573829,1.402384,-0.736268,1.822992],[-5.320914,-3.061968,4.037314,5.584182,-0.680718,5.709931,-6.704230,1.019548,7.926955,-9.501186,9.898500,-3.544340],[6.790007,8.266606,-1.131832,7.390643,7.617426,5.555828,1.285785,0.234179,-9.135713,-7.500994,-5.754778,-5.793774],[1.986887,1.918650,0.944251,0.334305,-0.849029,-6.685683,3.706532,6.149650,0.860529,9.626181,3.402587,-5.114853],[1.954434,-5.195406,-2.615872,1.747862,2.562573,-3.238049,-5.786170,3.453071,-5.459434,-0.476009,-2.797891,-0.996534]],[[-1.770858,-5.968097,-1.197516,4.084907,9.022067,-1.679437,3.922391,-3.961778,-3.152312,5.607279,-5.482358,8.798583],[-8.582472,-3.916496,-1.289714,-5.833083,9.761884,-2.909263,2.787335,5.924327,-7.074991,-1.537927,-2.969717,-7.793354],[8.444926,2.314175,2.199710,-7.616121,-9.416087,-6.811292,-6.604084,0.608831,1.571160,3.652877,-8.808487,4.631165],[-7.009240,-6.121670,-1.027645,-2.283133,-2.894334,2.166044,-3.349016,7.751360,0.503361,9.758925,-8.212009,0.809689],[6.967102,-1.839873,3.286710,-7.426174,2.171999,-3.167153,1.328722,7.035273,9.107533,1.499854,-6.672792,-0.321532],[-4.742945,9.092222,9.240724,-3.150677,-3.901615,-4.208181,0.356397,6.812899,2.061672,-5.736413,-8.366370,-9.174722],[9.904553,-0.059998,-3.576789,1.996915,-7.103679,9.839396,0.475951,-9.871625,-9.716053,4.875773,1.539829,-0.648979],[4.002567,-2.876918,-0.770394,4.386447,-9.785641,4.544678,-2.997828,-9.881733,-0.914868,-1.233467,2.541532,7.787027],[6.965001,6.422026,1.212034,4.531590,8.799029,1.771854,-2.766654,2.730196,-4.122057,6.206204,6.266277,7.641281],[5.196995,8.998683,7.667935,-9.907608,4.578590,3.332327,1.735464,1.875270,-7.180944,-1.985206,2.934676,-1.080697],[8.550580,4.035432,1.626261,-3.825306,-9.778662,9.008189,-6.930355,8.955056,-1.287628,-8.286845,3.350662,-3.640406],[-0.511712,7.468154,-1.608432,6.544564,5.115858,-5.710768,-6.460338,-4.586836,-7.089472,-3.301214,1.004041,-8.387642],[-5.816814,-3.404520,2.835863,-6.951724,5.893622,4.100556,5.915262,5.298446,6.423214,2.453579,-0.528021,1.430378],[2.337673,3.203332,3.312864,-2.439425,9.741126,5.852833,0.667807,-2.896418,3.560222,-2.557468,9.583199,-9.423437],[9.639707,-4.272725,1.445580,-6.687203,9.287208,1.629524,-6.516953,-4.896363,-4.305240,-6.126723,8.103451,8.289162]],[[-9.655160,2.282566,9.057749,5.807697,9.827792,5.070103,2.649484,-8.467214,9.781515,7.054133,4.272541,9.888219],[7.997413,-8.700755,2.885699,-9.730662,4.543284,0.650138,9.698977,-0.510358,-5.181354,5.497457,4.037584,-4.618546],[0.523970,-7.296017,8.182114,9.981516,2.058285,-6.329686,8.472027,8.818084,-8.268624,8.176178,5.336407,3.044355],[4.843619,3.298218,-7.358751,-6.228285,6.993493,-8.308674,-9.971320,4.329428,1.307138,-5.535760,-5.609736,-6.487775],[-8.735214,-5.657141,8.375546,8.376857,-0.838972,7.764079,-3.620918,8.541605,7.238020,1.762195,7.082129,3.030927],[-3.893854,3.391073,7.004871,9.183377,9.782102,4.117347,4.898954,-7.799579,4.870034,-9.581521,0.483370,9.420993],[-3.996226,-2.210391,-3.880888,-0.709352,-1.318463,6.607373,0.618271,2.137988,6.952875,0.866030,-1.294031,-2.797945],[-1.253386,2.579759,-9.775295,-1.418946,8.190840,-4.883642,-7.213877,-3.986666,-5.606411,8.155536,9.171285,4.880922],[9.631080,3.790752,-3.009821,-4.020278,0.642098,-7.757786,-4.264853,-0.857862,4.767396,8.950680,6.838000,-2.731238],[-7.226170,-9.769192,7.690858,-0.509400,-9.408359,-9.171931,5.469578,4.023515,-0.699498,4.284948,-9.469779,2.610433],[-8.827757,-2.856347,-4.472137,-1.971099,-0.278761,-6.248492,-6.296317,-1.169576,8.514354,9.204488,0.852859,0.726158],[-9.177817,9.448372,-0.124669,-8.606379,2.932567,-7.247521,-7.158999,-0.723067,2.706476,-1.717910,6.429689,7.856680],[3.929051,-4.462760,7.080022,-4.501570,-2.303185,2.926366,-2.836838,2.342738,-5.873198,-8.101177,-3.276272,9.295275],[3.590436,4.607170,-7.907146,0.470948,2.902175,3.270876,2.146723,-8.108540,0.275058,-0.165455,-5.970507,1.504589],[-8.318839,6.954139,2.593487,-2.583779,-7.191829,7.544564,-4.164627,-9.704449,-6.770755,0.076448,1.900970,1.058376]],[[7.744232,8.933003,-7.134784,-6.344449,-8.813733,2.856738,-5.465075,-0.821003,-4.758534,9.368052,4.770597,-3.731112],[7.899774,2.095883,-1.382861,8.326444,9.925234,4.233932,-2.256694,-3.095563,5.022102,-6.380004,9.835503,-0.510268],[-8.535659,5.019529,6.412463,-6.946480,5.504490,5.549474,-5.521402,4.925837,7.045146,1.665044,-8.144346,-8.272609],[-8.500760,9.015746,-6.568363,0.616156,0.803510,-2.988215,-4.755639,-8.658046,-7.424371,3.476844,-2.532302,-6.482918],[9.546612,8.020724,9.435295,2.041143,-4.630274,-3.450827,-1.690895,-3.131748,-1.429348,-4.510832,9.512398,-0.024193],[4.538828,-7.781387,-7.970338,1.504156,8.071656,0.169538,3.458938,-5.032034,3.203106,-1.402369,-5.553317,2.088631],[2.800106,7.123621,-0.314833,-0.575204,-1.178460,-0.149620,-6.999553,-1.028248,-6.055483,-4.662231,6.329502,-6.032289],[5.021416,-0.959380,1.133035,-8.364812,-5.993140,7.052489,0.245163,-9.606060,-3.738467,-2.858990,-1.036166,-5.547396],[-8.169519,-1.941990,3.599669,-9.821584,9.840832,-2.568588,4.212982,6.572761,1.928854,-2.568851,4.096645,-7.707686],[3.892275,-8.295049,7.311624,0.141972,3.201265,4.243716,-5.887044,-0.146863,7.659596,-4.087095,9.847045,-3.980849],[-5.143226,-0.495749,5.875569,5.879125,2.532834,-6.591742,2.940621,4.303260,-8.035767,2.855814,-4.466576,-6.232572],[0.252972,-4.405954,9.411294,8.334561,-7.860513,9.958004,-9.858047,-9.892320,-7.656093,-6.027270,-4.542789,-3.911500],[6.569850,9.409380,6.367609,3.060271,-1.292290,-2.348513,-2.548219,1.116949,1.327404,-4.882480,-2.498843,9.370409],[0.286078,-3.712258,7.496094,-6.770371,-1.229539,1.408920,-3.972394,-9.928690,-3.192945,-0.926425,-0.810080,8.200578],[-0.172526,4.742270,2.503463,2.513513,0.224228,-2.469731,-4.604643,0.254331,2.644537,7.533320,5.715180,-0.819424]],[[-8.128427,-2.461191,5.608227,-0.229846,0.437539,-5.516707,-6.894156,6.132919,6.638409,0.168443,1.765379,-6.056152],[6.038149,-7.668704,-8.739613,-1.553760,7.525084,3.879466,4.059202,-9.473431,-8.686326,9.455271,-5.003422,-0.490846],[-5.094392,2.151044,-6.623158,-1.456231,9.109891,-3.919652,-1.224583,-7.432085,1.503685,-7.370023,1.446705,1.893773],[8.869160,2.209550,2.182300,6.159711,8.260092,0.519050,-1.230325,5.796070,-3.002963,4.425325,-5.031213,-1.570544],[-3.885806,-9.007845,0.619071,5.337630,-6.711691,-2.972153,-8.209747,-9.753987,9.113260,8.958731,3.860382,5.217244],[-6.211022,-4.415637,3.889308,-2.079204,8.390804,4.702841,-9.418691,5.674530,9.632520,-3.313284,1.882415,7.771797],[0.678644,4.339304,7.117976,-5.491812,9.572461,0.223667,-7.423499,-9.988251,-2.048375,-9.035808,-5.845676,-3.420229],[-0.247103,1.377007,9.213343,-1.484544,9.712675,0.392644,-3.988584,-8.503030,6.172968,-7.629752,5.415608,7.480492],[6.086306,-1.584937,-2.947573,3.859036,-4.049144,-0.459722,-9.088258,-3.195682,-6.943494,-8.354614,6.692191,4.260322],[-1.594450,-1.916542,-3.591158,-2.864992,-4.969329,-8.537068,0.069303,9.916662,-0.489619,2.840775,-8.570791,1.538216],[5.005980,0.266724,-4.065480,7.268679,0.552500,4.445918,-2.372216,9.005870,-2.102025,1.492793,8.814684,5.113117],[-6.495024,-1.872227,-2.182583,-1.055902,-9.625143,2.171416,-9.594932,3.162530,-2.662519,7.156512,-6.737713,4.367835],[-7.783683,-3.871951,6.687559,-4.963625,-0.257141,-7.977452,-1.755010,2.227811,2.050715,5.730085,4.773381,4.082719],[5.117430,-5.512792,2.856527,9.845093,-8.578968,3.284196,3.076656,-4.454229,8.581944,3.890755,7.623538,-2.442776],[2.220026,-6.976265,-6.964281,-1.354316,-2.688731,-2.350758,0.097500,-4.052523,3.958650,8.154036,8.165713,4.596038]],[[1.427568,-7.407180,0.133686,6.978917,-7.631789,5.252197,9.204833,2.818598,2.871291,7.217101,1.472626,-7.464533],[6.582912,9.575118,2.084261,1.047133,2.686391,5.679508,-7.655800,6.993742,-4.820245,-1.034355,5.746301,-7.569464],[8.417081,2.317581,2.916109,5.191591,9.882563,2.938225,5.746500,4.133689,-5.151107,2.085934,1.546250,4.134016],[-9.956809,9.188069,5.762805,-3.771332,4.980328,8.147667,6.927436,-0.866849,-8.296770,-6.722971,-5.495690,-6.536342],[-4.579967,-9.403864,8.813457,-0.631838,2.298609,9.800120,4.656865,8.184669,5.563066,1.018781,9.280831,7.558170],[8.286940,-4.029879,-7.978190,-0.880818,-8.964163,-5.639035,-1.548339,7.532537,8.995469,4.491371,-2.135959,1.923652],[9.311596,3.899018,-3.957567,-0.074581,-9.220584,-1.005419,-0.112877,5.122568,8.489544,-5.873707,-5.530282,4.282520],[-2.819797,-8.735455,5.293220,-1.571058,-2.220723,3.613191,-3.691473,-1.244811,-7.680361,4.365313,5.321938,-6.005372],[3.395961,6.772816,-5.501865,0.962964,2.122148,-6.457322,3.284213,3.877653,-4.002765,9.735071,0.728397,5.566988],[-9.758064,-4.049274,6.307214,-3.747642,8.773875,7.809560,-5.100059,-4.582117,-7.012258,-9.231585,1.277844,-9.637095],[-5.713895,-3.014904,9.739341,-5.329466,9.923941,-6.392280,6.204402,9.538988,-9.398508,-9.397811,4.806209,-0.218447],[2.940077,2.395584,-6.884682,-4.198118,6.015245,-0.592855,-7.472195,-7.661077,0.267544,8.470646,3.733715,7.177441],[1.916507,-1.393068,-7.892165,-3.685272,8.845432,-6.726509,9.884905,2.496721,-4.915395,-4.005996,-2.409616,-8.960897],[4.704183,-4.254811,-6.607051,-4.915913,1.100292,-2.835743,8.807735,-9.441849,-0.853601,-8.536307,2.524046,2.348393],[-1.205171,0.194385,-8.257880,-2.137243,9.004781,4.512527,6.935856,1.099330,-9.889269,-0.956719,-6.129878,5.390631]],[[-0.044342,7.272454,8.134818,0.675922,-5.855020,-3.398914,-6.710896,-4.562705,9.405670,0.111137,0.157108,3.025702],[-7.916987,6.788876,-8.882998,1.845919,-5.308050,9.556517,1.140872,1.389576,1.021189,1.382739,7.893992,6.757449],[0.783739,5.965394,3.214074,-7.615916,-1.929141,-9.336498,-9.690868,4.604894,-5.668141,-4.905764,0.810953,1.381224],[6.676886,-3.298964,-3.818800,1.562544,-6.656619,-8.081041,-5.711397,8.588406,-8.301516,6.683454,-7.033158,-1.255118],[4.199222,-5.408374,-2.764680,6.468650,-5.259069,-2.879425,3.305591,-4.954121,-0.164514,8.774439,-2.851047,-3.669819],[8.895197,7.641281,-3.181445,-5.608038,7.573495,1.094702,6.706723,5.598749,-2.333489,-7.610466,-8.488886,-6.658978],[-8.651150,2.071656,-4.809604,6.838955,3.881760,2.847468,-5.604502,-7.971067,4.648828,-2.144237,-1.257982,-9.712777],[4.883150,0.147187,-3.084868,7.664638,2.152564,4.761678,-6.943750,9.264731,3.935288,9.481278,9.928595,9.142286],[6.317483,2.998023,-9.837371,3.299127,-9.362386,4.640975,-3.099813,0.072380,0.059847,3.693925,-8.196800,5.965379],[-1.695740,9.104592,-1.214354,-3.252127,-6.783939,-5.587290,5.779762,0.888378,-5.777744,-6.559656,5.682221,-8.732669],[-9.200067,-9.211689,2.462479,4.011977,-8.113972,3.387547,0.010442,4.557010,9.679392,-7.903755,1.320847,-1.771387],[-3.386948,-9.653716,9.178391,-1.049007,-6.537419,-6.408536,0.683696,9.199673,-2.377977,-8.340847,-4.902315,-9.593521],[1.244340,8.982942,-8.811232,-9.392052,-2.185943,-4.279437,-8.469150,-4.044559,9.374637,-1.445746,-8.983342,-3.087170],[-0.781346,-5.512929,-1.076101,-8.770577,-8.070429,-8.459366,6.271358,2.579809,6.160340,6.660901,3.382679,1.649443],[-7.413611,2.306094,5.373680,-8.985523,-6.777406,9.387245,4.417021,8.282357,6.798683,-7.526471,-7.846566,-5.078380]],[[0.249556,6.489314,3.934080,0.095481,-3.458110,-1.071970,-8.984509,4.922927,-9.031780,-1.556688,-9.733388,7.458758],[7.182519,1.044456,3.443582,-7.784960,1.612468,0.274181,-4.564996,5.601419,3.055750,-0.348314,-4.266403,3.061731],[-4.110130,-9.566128,3.875895,-7.694425,3.105058,-1.667138,-2.875786,5.920379,5.106853,-1.198365,8.066502,-6.689199],[-5.345385,-7.333923,5.805603,8.957243,9.945846,-2.084688,3.091067,-5.856349,-1.570225,6.055428,0.513767,4.616861],[-4.552528,-9.872789,1.857691,-9.064471,1.115459,-4.404337,-1.203018,2.693741,5.829654,-6.328690,-1.004469,7.550118],[-4.511710,3.926262,9.512691,-1.142352,2.444629,1.629991,8.350234,-7.042806,-7.245919,6.756265,-2.855677,8.538127],[1.174039,-3.697525,-1.252031,-7.275458,-8.552855,-0.192849,-5.242947,2.496688,7.334442,-4.428804,0.756011,2.769627],[9.133275,-7.119558,7.252534,5.845843,-1.642606,0.857626,9.267434,5.805088,0.160102,8.454736,-6.091193,8.967761],[1.787696,-7.449503,-9.307769,6.676822,6.981015,5.606908,8.602295,1.305063,-9.514160,-4.196431,-3.218611,-9.382901],[3.001509,-2.550351,-7.818057,4.529196,3.873343,-7.037274,8.488904,-1.690028,-4.535387,-8.985658,-1.524724,3.955085],[-5.264499,7.466695,6.446341,-0.197932,4.630447,-2.282654,8.280813,-3.637220,3.783766,-7.099291,-6.946303,1.474879],[5.315790,-3.996294,8.827772,-4.650735,9.950369,4.229849,9.024050,4.541671,-3.079681,2.679728,0.258422,-2.355374],[-8.688325,9.855321,7.872755,0.047650,-5.024324,2.283594,3.885177,1.514811,2.129132,0.815617,2.942482,2.082953],[-6.392218,9.860954,-4.151454,0.473095,-0.083588,9.545896,7.508709,-9.177114,-8.176411,-7.626486,-3.277239,-1.410628],[-0.729178,-5.275871,-1.767992,9.872916,-8.085493,-8.746675,-5.716077,-6.695026,2.962971,4.377415,-9.068960,-2.063773]],[[2.494480,7.506279,8.032953,3.882727,1.593008,3.633051,8.398545,9.688908,3.027429,5.790292,3.534927,-4.727010],[4.331967,2.644675,-1.666543,8.888013,-9.483139,9.171769,-6.307400,5.813160,-2.373574,-6.724631,4.639012,-7.729233],[3.448713,7.065416,7.109680,7.814407,9.908988,-7.163538,1.401377,1.159229,-4.632226,8.620142,3.945231,3.931761],[9.124066,5.466101,3.231442,7.828847,0.662030,5.902336,-6.591479,-4.355552,1.123127,1.330240,-7.255510,7.728891],[5.165603,2.118698,5.179203,1.225646,-7.438418,-1.862855,-7.472938,5.979897,-8.889154,-2.509508,5.076464,-5.170304],[8.106056,1.682833,-3.059090,4.886864,4.266899,-9.541835,8.513125,2.621573,-0.702456,5.750913,5.340703,5.698677],[3.852782,9.409266,-2.069479,6.221417,5.329381,6.150943,1.641992,-1.996003,9.617563,-9.423248,-5.239723,9.796978],[1.554804,3.578534,1.511813,-4.587308,-6.423141,7.964738,2.761297,-6.350945,-9.050380,-4.602399,-9.130216,-4.519713],[4.005701,-3.703798,8.141242,-4.060243,-5.739662,6.233396,-1.684765,-4.477001,5.138439,8.161014,4.056224,-4.225998],[6.334732,5.599561,4.842945,-1.579053,-3.271366,-2.349180,-8.267076,-7.174464,-9.261748,-8.160724,7.361419,1.457307],[-5.506901,7.646199,-6.238042,7.205967,-3.369781,-7.867343,8.483426,-0.356699,7.469697,8.240293,-9.128194,2.019243],[8.797583,2.798605,-7.536227,-3.044829,-5.469078,-4.367357,2.297781,-0.822008,3.080091,0.917029,0.800526,-4.512603],[-9.287226,-9.930260,-8.688252,4.795366,5.419981,-8.447958,3.832825,2.560284,1.949551,-9.432775,3.029628,-9.976857],[4.515847,6.976624,-4.285358,-0.905551,6.470676,0.350678,-4.537813,-6.991274,0.555708,2.403926,1.874493,-6.083553],[3.370297,4.988015,-8.246350,2.484288,6.561445,-7.346938,-4.382342,-5.221521,-8.393999,8.358986,-9.394030,-4.525140]],[[5.603040,-7.069144,-1.162045,3.104221,8.762176,2.544628,-2.361175,-1.213541,5.755299,4.066532,3.673453,-6.209519],[6.664971,-7.239714,1.879672,-9.697935,-2.179096,4.936089,5.903783,-6.787664,3.632726,-6.272438,-9.372246,5.511698],[-5.237625,-1.667599,-0.702986,9.229074,-8.952701,8.472841,-0.928778,-5.002409,-9.969235,-8.362874,-2.987792,-4.235835],[-4.326786,-7.926793,3.975603,-7.268984,-8.782726,2.877473,6.592358,5.275412,-4.375139,5.307860,-3.335137,-2.941095],[8.160765,-9.634310,4.433406,1.056760,-4.480058,7.743168,1.382992,2.138794,-3.957778,-2.970125,9.197914,8.306464],[-3.444235,-4.088731,5.805555,1.360261,6.551324,-2.198959,1.937952,-0.859181,2.517751,6.619167,-5.212960,6.684771],[-8.917568,-8.052070,1.256745,0.330122,2.679403,-4.511323,-1.992819,5.054086,7.909972,1.535703,-9.474048,-7.279801],[6.157491,-2.373200,-3.509585,-2.504092,-5.306741,-6.812482,-5.282904,6.085326,-0.524585,-7.458411,-6.151996,-8.263254],[-6.882018,-1.013990,-3.709281,-5.099185,-4.353620,1.406671,-8.368080,6.027397,-7.860670,-1.798526,-5.735721,-3.035138],[8.625427,9.608540,9.460570,-9.879309,3.333047,-5.524738,2.351381,2.040210,2.338133,7.214488,-4.573954,-9.374429],[-4.649467,-0.626842,7.518846,4.398802,5.155781,-4.422860,7.869175,-1.321073,1.819467,-3.492661,-6.459090,-4.355996],[-8.584489,1.873862,8.771333,3.774510,5.597336,-5.986555,2.354555,7.009131,-6.041986,8.897306,-6.174186,1.639344],[-0.184037,3.845119,9.689394,-9.039852,2.391356,7.204667,-6.039902,-1.834357,-9.040707,-5.069261,7.051473,-2.594465],[0.789543,4.827066,-3.349762,8.857650,-6.730126,3.190775,-2.700623,8.591577,0.928554,-6.013297,5.342471,6.985332],[1.192802,8.567194,-2.166864,2.961622,4.060988,1.625643,6.141284,-6.043532,0.278362,4.048513,-6.075752,9.446547]],[[3.885213,5.693846,1.814365,-0.105666,-8.086550,7.069345,-5.898202,-2.635100,7.469000,1.278842,-7.986876,-0.635224],[8.439646,4.973469,-6.638729,9.967093,0.635435,-0.761425,-1.255217,8.134454,6.021448,4.667572,0.793001,2.474224],[4.936793,0.003132,0.065071,-8.215655,-9.154177,-6.563765,-7.761566,-7.909027,-9.558475,-2.856978,-0.249933,2.971061],[-9.657608,8.505389,-4.377397,-2.746995,0.663499,2.006706,1.230629,0.492578,8.111693,-5.854186,4.452091,1.868979],[-8.569519,-9.013648,-0.690621,-1.375321,-6.588325,-7.733038,-7.855279,4.901957,8.691749,-5.056531,-1.700161,-8.167746],[2.393942,2.345737,3.894598,-4.410249,1.110363,-6.272696,-6.979810,-2.545350,-6.108678,7.744310,-2.368475,-8.248109],[6.791510,-2.197742,-6.747728,-8.025974,-2.397431,7.243148,-7.310119,6.386874,-9.890384,1.690232,-6.902158,-7.876901],[2.318358,9.491016,-7.232472,2.240811,8.238785,1.466811,-4.660675,0.357179,4.774799,-2.089448,8.244851,4.047078],[-9.850798,-5.280297,8.084520,2.130049,3.312793,-2.610164,8.220745,9.380318,9.587478,-6.958163,-2.314516,-1.994289],[-8.074724,-6.231254,-4.415508,-3.053417,-4.976331,8.295756,8.270147,-1.874006,-6.988258,-0.682704,-9.517581,-8.316892],[-9.634198,6.407379,-0.621202,-2.986697,5.492058,-4.109780,5.939143,-3.138211,-0.665960,8.965691,-5.582037,-3.601141],[-5.931542,-9.417814,-7.779598,-3.218386,-6.263828,-0.062096,-0.296137,7.742417,8.420673,4.550390,-3.389610,-7.807183],[-9.831352,-3.903618,-6.543497,5.389306,0.753121,4.174038,-0.296268,-9.144652,-2.333485,7.178818,-8.434785,-2.072373],[2.261460,-0.427294,1.067629,-9.714685,-3.451138,-3.605703,8.548401,5.983949,-0.648789,-3.196929,-3.240041,3.463193],[8.772917,7.080884,7.765045,2.128560,-8.211841,3.085078,6.419170,7.129868,-9.578723,-0.863864,8.287931,1.345563]],[[-1.426792,-3.324033,-5.739577,2.874184,-4.273786,8.282079,-7.479225,-8.292653,-7.280416,-5.201609,8.071658,7.526036],[-2.547165,0.716228,8.119700,8.401967,1.966819,7.619748,0.513714,6.392104,8.546271,6.854969,-2.149206,-9.736487],[0.952717,-4.740478,-7.237251,9.896773,5.641385,-4.156972,7.529140,-4.646514,7.272546,-9.014097,0.815750,6.837689],[9.434753,-7.069791,-8.803314,-2.787372,-1.396483,3.956305,5.562223,8.934700,1.550648,7.217048,2.012560,2.511169],[2.444880,7.962546,-5.870393,-4.762789,9.979902,4.756969,4.553551,-5.981266,-4.014694,9.271441,-4.193635,-8.150269],[-8.478538,-6.490130,7.063039,2.177304,4.881557,7.566463,1.519182,0.800570,2.272989,-6.968227,5.929838,-1.986307],[-8.572830,8.132182,-0.707670,0.882283,2.915069,-9.613496,3.511457,-5.820702,-9.967824,-2.237750,2.000740,-8.284701],[-8.612458,0.568196,6.565906,2.845575,8.628200,-2.429820,-1.403962,0.247535,0.130955,2.096778,0.625614,-0.548012],[1.271959,9.513147,-8.377916,8.697044,-0.102877,-1.745111,-6.580516,-8.791343,-2.867573,1.452546,-2.314343,1.218837],[-5.392281,-1.502368,-8.636042,9.626130,-2.052695,-4.503060,0.757539,7.727508,-1.400005,8.814845,-1.258468,9.565040],[2.922574,0.192010,0.899527,5.966135,5.295562,1.470640,-9.692189,-5.060835,3.502006,-6.508910,-4.582882,-5.603233],[3.368164,-6.795359,0.857547,7.195541,-0.225406,-0.204655,1.043100,-2.243793,-7.111636,-2.649479,-9.343375,1.756051],[3.963703,-4.539234,9.269418,-3.711065,1.586853,-1.646895,-7.954279,4.789990,9.103668,-9.336051,3.012103,6.423572],[-1.972411,6.814769,-3.536284,-0.921815,-0.938980,-2.329646,-5.819098,-6.622225,8.433657,-9.945480,-1.770395,-0.652908],[-0.760480,-2.702167,3.556182,3.559142,7.783864,8.828426,4.884890,5.989316,-3.912353,2.453236,0.332437,-1.606488]]], dtype = "float64")#candidate|1632|(14, 15, 12)|const|float64
uop_1633 = relay.log(const_1632.astype('float64')) # shape=(14, 15, 12)
output = relay.Tuple([uop_1633,])
output2 = relay.Tuple([uop_1633,])
func_1639 = relay.Function([], output)
mod['func_1639'] = func_1639
mod = relay.transform.InferType()(mod)
output = func_1639()
func_1640 = relay.Function([], output)
mutated_mod['func_1640'] = func_1640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_1646 = relay.TupleGetItem(func_1197_call(), 0)
call_1647 = relay.TupleGetItem(func_1198_call(), 0)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_1654 = relay.TupleGetItem(func_1229_call(), 0)
call_1655 = relay.TupleGetItem(func_1231_call(), 0)
output = relay.Tuple([call_1646,call_1654,])
output2 = relay.Tuple([call_1647,call_1655,])
func_1666 = relay.Function([], output)
mod['func_1666'] = func_1666
mod = relay.transform.InferType()(mod)
output = func_1666()
func_1667 = relay.Function([], output)
mutated_mod['func_1667'] = func_1667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_206_call = mod.get_global_var('func_206')
func_207_call = mutated_mod.get_global_var('func_207')
call_1678 = func_206_call()
call_1679 = func_206_call()
func_173_call = mod.get_global_var('func_173')
func_174_call = mutated_mod.get_global_var('func_174')
call_1683 = relay.TupleGetItem(func_173_call(), 0)
call_1684 = relay.TupleGetItem(func_174_call(), 0)
output = relay.Tuple([call_1678,call_1683,])
output2 = relay.Tuple([call_1679,call_1684,])
func_1691 = relay.Function([], output)
mod['func_1691'] = func_1691
mod = relay.transform.InferType()(mod)
mutated_mod['func_1691'] = func_1691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1691_call = mutated_mod.get_global_var('func_1691')
call_1692 = func_1691_call()
output = call_1692
func_1693 = relay.Function([], output)
mutated_mod['func_1693'] = func_1693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_173_call = mod.get_global_var('func_173')
func_174_call = mutated_mod.get_global_var('func_174')
call_1731 = relay.TupleGetItem(func_173_call(), 1)
call_1732 = relay.TupleGetItem(func_174_call(), 1)
func_856_call = mod.get_global_var('func_856')
func_857_call = mutated_mod.get_global_var('func_857')
call_1735 = relay.TupleGetItem(func_856_call(), 0)
call_1736 = relay.TupleGetItem(func_857_call(), 0)
func_81_call = mod.get_global_var('func_81')
func_84_call = mutated_mod.get_global_var('func_84')
var_1755 = relay.var("var_1755", dtype = "uint8", shape = (750,))#candidate|1755|(750,)|var|uint8
call_1754 = relay.TupleGetItem(func_81_call(relay.reshape(var_1755.astype('uint8'), [15, 5, 10]), relay.reshape(var_1755.astype('uint8'), [15, 5, 10]), ), 1)
call_1756 = relay.TupleGetItem(func_84_call(relay.reshape(var_1755.astype('uint8'), [15, 5, 10]), relay.reshape(var_1755.astype('uint8'), [15, 5, 10]), ), 1)
func_521_call = mod.get_global_var('func_521')
func_523_call = mutated_mod.get_global_var('func_523')
call_1758 = relay.TupleGetItem(func_521_call(), 0)
call_1759 = relay.TupleGetItem(func_523_call(), 0)
output = relay.Tuple([call_1731,call_1735,call_1754,var_1755,call_1758,])
output2 = relay.Tuple([call_1732,call_1736,call_1756,var_1755,call_1759,])
func_1770 = relay.Function([var_1755,], output)
mod['func_1770'] = func_1770
mod = relay.transform.InferType()(mod)
var_1771 = relay.var("var_1771", dtype = "uint8", shape = (750,))#candidate|1771|(750,)|var|uint8
output = func_1770(var_1771)
func_1772 = relay.Function([var_1771], output)
mutated_mod['func_1772'] = func_1772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_335_call = mod.get_global_var('func_335')
func_337_call = mutated_mod.get_global_var('func_337')
call_1792 = relay.TupleGetItem(func_335_call(), 2)
call_1793 = relay.TupleGetItem(func_337_call(), 2)
uop_1797 = relay.acosh(call_1792.astype('float32')) # shape=(13, 8, 16)
uop_1799 = relay.acosh(call_1793.astype('float32')) # shape=(13, 8, 16)
uop_1801 = relay.asinh(uop_1797.astype('float32')) # shape=(13, 8, 16)
uop_1803 = relay.asinh(uop_1799.astype('float32')) # shape=(13, 8, 16)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_1823 = func_1504_call()
call_1824 = func_1504_call()
func_313_call = mod.get_global_var('func_313')
func_314_call = mutated_mod.get_global_var('func_314')
call_1833 = relay.TupleGetItem(func_313_call(), 1)
call_1834 = relay.TupleGetItem(func_314_call(), 1)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1847 = func_1115_call()
call_1848 = func_1115_call()
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1849 = func_1115_call()
call_1850 = func_1115_call()
bop_1851 = relay.power(uop_1801.astype('float64'), relay.reshape(uop_1797.astype('float64'), relay.shape_of(uop_1801))) # shape=(13, 8, 16)
bop_1854 = relay.power(uop_1803.astype('float64'), relay.reshape(uop_1799.astype('float64'), relay.shape_of(uop_1803))) # shape=(13, 8, 16)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
call_1857 = func_296_call()
call_1858 = func_296_call()
output = relay.Tuple([call_1823,call_1833,call_1847,call_1849,bop_1851,call_1857,])
output2 = relay.Tuple([call_1824,call_1834,call_1848,call_1850,bop_1854,call_1858,])
func_1868 = relay.Function([], output)
mod['func_1868'] = func_1868
mod = relay.transform.InferType()(mod)
output = func_1868()
func_1869 = relay.Function([], output)
mutated_mod['func_1869'] = func_1869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1149_call = mod.get_global_var('func_1149')
func_1151_call = mutated_mod.get_global_var('func_1151')
call_1870 = relay.TupleGetItem(func_1149_call(), 0)
call_1871 = relay.TupleGetItem(func_1151_call(), 0)
func_1484_call = mod.get_global_var('func_1484')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_1876 = relay.TupleGetItem(func_1484_call(), 0)
call_1877 = relay.TupleGetItem(func_1485_call(), 0)
uop_1886 = relay.cos(call_1876.astype('float64')) # shape=(13, 8, 16)
uop_1888 = relay.cos(call_1877.astype('float64')) # shape=(13, 8, 16)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_1913 = relay.TupleGetItem(func_591_call(), 2)
call_1914 = relay.TupleGetItem(func_593_call(), 2)
output = relay.Tuple([call_1870,uop_1886,call_1913,])
output2 = relay.Tuple([call_1871,uop_1888,call_1914,])
func_1923 = relay.Function([], output)
mod['func_1923'] = func_1923
mod = relay.transform.InferType()(mod)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mutated_mod.get_global_var('func_1923')
call_1924 = func_1923_call()
output = call_1924
func_1925 = relay.Function([], output)
mutated_mod['func_1925'] = func_1925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1944 = relay.var("var_1944", dtype = "uint32", shape = ())#candidate|1944|()|var|uint32
var_1945 = relay.var("var_1945", dtype = "uint32", shape = (14, 14, 11))#candidate|1945|(14, 14, 11)|var|uint32
bop_1946 = relay.logical_xor(var_1944.astype('uint32'), var_1945.astype('uint32')) # shape=(14, 14, 11)
output = relay.Tuple([bop_1946,])
output2 = relay.Tuple([bop_1946,])
func_1952 = relay.Function([var_1944,var_1945,], output)
mod['func_1952'] = func_1952
mod = relay.transform.InferType()(mod)
mutated_mod['func_1952'] = func_1952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mutated_mod.get_global_var('func_1952')
var_1954 = relay.var("var_1954", dtype = "uint32", shape = ())#candidate|1954|()|var|uint32
var_1955 = relay.var("var_1955", dtype = "uint32", shape = (14, 14, 11))#candidate|1955|(14, 14, 11)|var|uint32
call_1953 = func_1952_call(var_1954,var_1955,)
output = call_1953
func_1956 = relay.Function([var_1954,var_1955,], output)
mutated_mod['func_1956'] = func_1956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1979 = relay.var("var_1979", dtype = "float32", shape = (14, 8, 11))#candidate|1979|(14, 8, 11)|var|float32
uop_1980 = relay.acosh(var_1979.astype('float32')) # shape=(14, 8, 11)
output = uop_1980
output2 = uop_1980
func_1982 = relay.Function([var_1979,], output)
mod['func_1982'] = func_1982
mod = relay.transform.InferType()(mod)
var_1983 = relay.var("var_1983", dtype = "float32", shape = (14, 8, 11))#candidate|1983|(14, 8, 11)|var|float32
output = func_1982(var_1983)
func_1984 = relay.Function([var_1983], output)
mutated_mod['func_1984'] = func_1984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2018 = relay.var("var_2018", dtype = "float64", shape = (9, 15, 11))#candidate|2018|(9, 15, 11)|var|float64
uop_2019 = relay.erf(var_2018.astype('float64')) # shape=(9, 15, 11)
uop_2021 = relay.sqrt(uop_2019.astype('float64')) # shape=(9, 15, 11)
output = relay.Tuple([uop_2021,])
output2 = relay.Tuple([uop_2021,])
func_2031 = relay.Function([var_2018,], output)
mod['func_2031'] = func_2031
mod = relay.transform.InferType()(mod)
mutated_mod['func_2031'] = func_2031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2032 = relay.var("var_2032", dtype = "float64", shape = (9, 15, 11))#candidate|2032|(9, 15, 11)|var|float64
func_2031_call = mutated_mod.get_global_var('func_2031')
call_2033 = func_2031_call(var_2032)
output = call_2033
func_2034 = relay.Function([var_2032], output)
mutated_mod['func_2034'] = func_2034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_542_call = mod.get_global_var('func_542')
func_544_call = mutated_mod.get_global_var('func_544')
call_2111 = func_542_call()
call_2112 = func_542_call()
output = call_2111
output2 = call_2112
func_2113 = relay.Function([], output)
mod['func_2113'] = func_2113
mod = relay.transform.InferType()(mod)
mutated_mod['func_2113'] = func_2113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2113_call = mutated_mod.get_global_var('func_2113')
call_2114 = func_2113_call()
output = call_2114
func_2115 = relay.Function([], output)
mutated_mod['func_2115'] = func_2115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_960_call = mod.get_global_var('func_960')
func_962_call = mutated_mod.get_global_var('func_962')
call_2124 = relay.TupleGetItem(func_960_call(), 0)
call_2125 = relay.TupleGetItem(func_962_call(), 0)
func_960_call = mod.get_global_var('func_960')
func_962_call = mutated_mod.get_global_var('func_962')
call_2145 = relay.TupleGetItem(func_960_call(), 0)
call_2146 = relay.TupleGetItem(func_962_call(), 0)
func_1691_call = mod.get_global_var('func_1691')
func_1693_call = mutated_mod.get_global_var('func_1693')
call_2147 = relay.TupleGetItem(func_1691_call(), 0)
call_2148 = relay.TupleGetItem(func_1693_call(), 0)
uop_2152 = relay.acos(call_2124.astype('float32')) # shape=(3, 9, 3)
uop_2154 = relay.acos(call_2125.astype('float32')) # shape=(3, 9, 3)
output = relay.Tuple([call_2145,call_2147,uop_2152,])
output2 = relay.Tuple([call_2146,call_2148,uop_2154,])
func_2161 = relay.Function([], output)
mod['func_2161'] = func_2161
mod = relay.transform.InferType()(mod)
output = func_2161()
func_2162 = relay.Function([], output)
mutated_mod['func_2162'] = func_2162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1324_call = mod.get_global_var('func_1324')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_2170 = relay.TupleGetItem(func_1324_call(), 4)
call_2171 = relay.TupleGetItem(func_1325_call(), 4)
func_689_call = mod.get_global_var('func_689')
func_691_call = mutated_mod.get_global_var('func_691')
const_2185 = relay.const([[-8.951223,1.783668,3.452725,-7.809369,2.794766,4.675025,5.425121,3.550622,-4.181632,9.381766,-8.077871,-8.510651,-9.222654,4.490467,-1.959076,-4.102734,5.543514,3.601184,-9.044086,9.324854,-7.903490,7.950973,3.395541,2.264522,-3.633677,-2.110081,0.604764,1.795662,-2.260312,-9.906001,0.882212,6.194888],[-6.453138,6.983406,0.307471,-4.816998,4.092209,6.144972,8.996817,4.192944,9.672415,-9.832675,-4.822415,-0.719522,-1.150268,8.768692,6.286972,-7.633280,-0.256269,-3.335861,-7.472250,9.260236,-1.279933,4.006824,5.506240,-1.961882,-7.584815,4.097274,-7.245708,2.603670,-1.028324,-2.938416,9.294416,1.214143],[1.998937,1.618547,3.479438,0.996245,-9.133774,2.199663,3.666131,-2.700407,-4.761038,-9.744632,-4.201282,0.573119,4.839245,-6.082827,4.413192,-5.174677,-8.515885,-2.292336,-2.090482,8.891950,-4.107371,-6.569217,-4.930710,2.829705,1.260058,-5.054655,4.416305,-5.226207,5.346400,-7.871798,8.938387,2.147753],[-5.130068,4.053125,-3.919917,5.321501,6.093336,-1.576769,4.805561,-1.722860,-6.226153,-5.565324,-6.669442,-4.363005,9.073255,-6.138188,0.819016,-7.884730,-0.106422,-6.434837,2.663015,9.710759,4.919489,-0.430460,-3.898690,0.128663,6.391185,-4.101585,3.741184,-7.265107,6.263931,7.562775,-6.707797,3.945833],[1.402111,4.472054,5.985605,2.801263,0.667415,6.053933,-5.753850,-2.157272,-7.382090,1.340959,7.101656,5.201567,3.161948,7.479290,-1.483130,-2.727795,-5.717286,-9.209126,-2.049239,-5.626644,-9.083749,7.792995,6.562617,-7.467517,2.544698,3.044719,2.844651,0.994640,5.498118,0.294718,8.612523,3.146044],[2.302587,-6.378596,2.498022,2.942728,-2.960399,-8.526434,-7.604793,-8.729992,-9.928321,-3.184468,-6.995117,-9.630253,-1.558342,8.258213,1.246843,7.692670,1.638909,9.123108,8.530869,-7.490782,1.193582,1.132644,5.906841,6.140579,2.183498,-9.045396,-2.343989,0.658721,-2.054780,-5.079781,6.232211,-5.990588],[2.664500,2.153719,4.409353,4.113555,-8.209847,-6.846238,-5.172436,5.293157,-7.218751,0.379826,6.693006,1.929578,8.744321,7.330919,-0.580561,7.449626,0.755290,-0.975385,-8.614293,-1.582869,-5.846180,8.034780,-3.753817,-3.364581,-1.746738,2.813711,-8.580520,0.549734,7.835569,-1.002961,-0.936394,5.575820],[-4.892569,-7.144861,2.560332,2.612025,-0.535876,-7.074581,0.406224,5.022609,-4.925429,5.884227,4.215964,9.091925,-6.550893,-4.236435,6.295619,-4.266364,7.582859,9.405724,6.797473,-8.579259,0.599781,6.021158,3.571774,-9.561809,0.601754,-2.530074,-7.079104,3.851830,8.081367,2.820888,-0.069081,-7.587303],[7.148373,-8.055292,-1.914209,-2.431772,-2.182369,7.882961,-7.193118,1.797906,0.945200,-2.439783,4.210800,-0.605325,-2.368295,-2.469999,-1.143124,-3.058163,-3.350763,-4.871166,-8.026801,-0.806751,-5.785541,-0.093161,9.624719,9.267877,-5.077043,-5.735304,2.640305,-7.944182,-8.131575,-5.361006,-0.307962,-0.399537],[-6.476299,4.088353,7.638410,6.122538,4.644906,-2.787720,6.064043,-2.882690,-7.350340,-5.371421,9.106841,2.085001,7.258028,-1.983513,-0.401525,-9.224412,-4.407162,4.891768,1.728943,4.313496,0.887866,5.259001,6.092774,-7.540637,-8.020667,-5.445967,1.685198,9.712886,0.960026,-7.638512,3.073630,-4.933660],[4.946462,5.228378,-4.399264,3.602205,1.312593,9.413681,-4.598727,-6.774602,-5.070062,8.242202,-6.329360,-9.911830,-1.885313,0.809480,3.157718,8.642458,-7.248150,6.537130,-4.946453,-5.341141,6.409818,-5.122350,3.957004,-5.879767,4.321159,5.687908,-1.441562,-5.572004,4.874624,-0.749461,4.548462,4.031683],[0.794155,5.538560,1.172266,6.555089,1.843156,7.187600,-5.956706,-4.913824,6.075850,7.102468,2.538155,-8.101731,6.588614,3.675973,2.681763,-9.360487,9.273731,-9.777795,2.437764,9.838587,9.441510,6.836700,-0.580634,-2.744883,-5.038593,7.465850,3.520349,-0.759407,6.979911,2.715797,-7.286481,5.966797],[9.560879,-4.476107,2.108909,1.476518,-9.434608,-9.455005,-9.094558,-8.342345,-8.126546,-1.578200,-5.261361,-2.261582,-3.275240,-2.817652,-6.610864,-7.496177,2.721729,-3.778292,-2.929846,1.032122,7.314527,1.588909,-1.961202,-8.713235,-9.901297,-6.507403,3.716802,-6.899813,9.606461,-9.535599,-3.806457,2.243469],[3.886164,-4.398932,-8.099318,7.333194,3.287767,9.585868,-9.799076,-3.217621,2.378397,8.667490,6.129056,-0.287252,-4.548170,-0.324868,-5.577172,-7.750693,-0.307480,9.849105,5.129865,-5.974125,-9.229341,-5.750927,8.711982,3.549041,-4.317570,1.496227,-0.583313,-6.882324,-2.467299,9.177533,-7.950527,-5.643048],[-1.867554,4.334461,-0.001505,-6.216726,-6.922496,-2.607979,0.708726,-1.668679,-3.656561,6.973885,5.208256,-3.110025,4.240797,-3.116771,4.385315,-8.444044,7.960600,9.035740,6.245346,-2.436842,2.591328,5.313701,-0.371239,-8.947925,6.070725,7.096718,0.170708,-7.963851,8.758419,-3.158519,6.318429,-3.112963],[0.694213,8.352278,7.620670,-1.997412,-1.081403,2.260138,7.331284,0.719102,0.727657,2.769627,-8.563192,1.569338,8.895934,4.716422,-6.940267,2.159069,5.646664,-5.023301,-3.251402,0.725549,-9.664865,1.469241,-8.307561,-1.431127,4.752142,-3.588624,5.628951,2.215835,-3.345067,-7.611114,-1.592650,-5.904926],[-4.265299,-6.473703,7.712358,3.124094,-1.901486,4.849472,6.440229,-5.685200,3.249513,2.125022,2.040441,7.719882,4.933523,-8.490604,6.418870,5.713639,-8.700256,-8.690647,-1.095128,5.815980,-8.540846,0.552384,0.970354,-8.818782,3.704283,9.249097,-7.279784,-1.986900,-8.880930,6.347679,7.005834,0.762823],[-4.219512,8.850115,7.494557,5.911464,5.582035,-0.733037,2.529509,9.842368,-4.188698,0.579689,-0.273109,-3.685894,-7.600741,-7.051675,-8.888215,1.750532,-7.935667,5.804554,-9.153595,5.103738,-9.556239,-5.963096,0.116494,-9.279024,-5.279626,-1.742173,7.312444,-2.868849,4.485548,1.043176,-2.172082,-2.872255],[7.015321,6.835519,4.379837,0.315162,-6.703857,7.036630,4.488081,8.589226,7.481793,-2.054419,-8.721478,-8.906816,-9.874066,2.619602,6.036247,2.413703,-7.010593,-5.931008,2.817803,6.374819,2.199152,0.650864,-1.209704,-2.695316,7.291730,-8.940061,3.192545,9.001813,-9.324093,5.196041,-1.443679,-0.792042],[2.759196,-4.703274,-9.602886,-7.293306,-6.155995,-0.363158,-7.618804,-8.532307,-4.411901,3.921506,-4.681910,1.930576,7.849645,-0.994674,6.669466,-6.574769,6.260945,5.168657,-7.482757,3.841377,-6.249062,4.098924,-9.494917,-1.569543,-0.199692,2.447283,-8.387415,4.693607,1.716934,3.986652,-3.461396,7.528083],[0.997457,6.435166,-2.534772,-1.598091,7.836411,3.432649,-0.592910,-9.640977,4.532184,3.267910,-7.448189,9.680029,-8.663781,-7.811508,6.551951,-6.123957,-4.181131,-6.316618,-3.871045,6.718943,8.710084,7.769366,-1.371189,-0.377652,2.808054,8.890771,7.002607,3.648490,-1.317513,-1.913520,7.535271,-0.770069],[3.763820,-4.892817,7.476989,7.405784,-7.392484,-5.165109,-6.390688,-1.797871,-1.606123,4.450430,4.853839,8.939331,-9.804443,2.601237,-5.097589,4.927926,-8.801002,3.670975,-6.131134,-4.353623,-7.265606,0.242845,-5.717104,-8.674731,-9.960709,-7.996949,3.489803,9.200554,2.045584,5.825157,-0.850938,8.227637],[0.075877,-9.860134,5.657313,-1.822001,-9.604577,-3.774387,-1.481691,6.553055,-9.081932,-5.729559,-7.716519,5.391806,-8.946924,4.998972,-4.247091,3.277423,-3.064701,4.123699,0.628613,6.747623,4.670302,-9.262822,-9.936941,-6.508885,5.350779,-7.304245,-7.541779,4.185568,9.969706,1.212421,-6.834942,5.157427],[6.391513,-9.680476,-8.694510,-3.764225,-9.975976,4.441621,-3.922014,8.240858,-4.036539,4.912083,-7.072152,9.243960,-2.054498,6.576057,-4.175034,0.298937,9.692291,-7.357898,6.970402,2.428611,1.523155,-2.811742,5.368432,2.301952,-2.546162,-5.590540,6.740578,-1.058279,8.358023,-4.324677,-3.739453,4.997253],[-8.677146,6.913394,-3.145241,5.471937,-0.601732,7.763725,0.369065,8.635659,-6.036006,-5.026782,-9.101256,5.474972,-8.383676,9.265009,3.420545,-8.331641,-2.509060,2.484013,1.565723,-3.648605,-7.835269,8.731923,-9.107539,9.903756,-4.980483,-0.883115,-1.686253,-9.667860,-9.238068,6.860325,-6.703663,9.463298],[-6.789299,4.240319,8.627273,3.516885,-6.478104,2.120589,6.419443,3.023662,0.671840,-9.995013,1.324951,-6.730412,-4.889926,7.168731,-4.302860,5.016292,2.400752,-2.072704,-8.489087,-9.371319,-5.441090,4.334139,1.511650,0.531751,5.370457,-8.907057,3.315765,-2.786779,5.764843,-5.290829,-7.032465,-1.469858],[0.158878,-6.146563,-4.115271,-0.164838,-0.495164,-5.342539,-1.566061,-4.481643,-3.762845,-5.955159,-6.848651,1.234470,-9.057898,8.776068,-2.615224,-5.352051,-3.887419,5.014044,2.259037,0.745523,-0.014854,4.830828,8.349033,-6.787564,2.041689,3.616600,6.695890,1.365062,1.533740,-3.659756,-3.852856,0.166124],[2.348057,6.746164,-8.397383,-0.502798,-1.618009,6.626536,-4.158761,4.875536,-8.896094,4.508381,-1.269964,1.567859,8.064270,7.619342,-3.598201,-4.341260,4.095829,-5.976544,-4.697909,-1.944216,4.147507,-1.958361,2.786639,3.152295,8.060560,2.093786,1.508972,5.951894,-3.721164,-8.354833,4.787914,-0.953830],[-9.358854,-4.868707,-7.497569,2.395592,-7.794748,2.622645,-4.568007,1.620922,4.791261,3.151122,0.393460,3.242929,3.958732,-6.977203,-5.332461,0.873466,8.402175,3.063450,2.932007,3.718309,-5.772798,1.294051,5.443906,-6.590006,-0.764041,4.666521,-8.893062,2.605833,-9.184850,-5.718606,8.991290,5.467386],[6.711611,-8.724291,-8.121828,-5.140693,-6.503855,8.354228,-8.629859,-1.079244,0.448959,-5.802615,-2.065787,6.464359,7.796216,7.508798,8.919214,-4.389925,6.935459,6.792593,-2.645638,-1.530800,-7.100206,4.427628,-9.156229,1.396979,8.997796,6.323672,1.303000,4.503491,9.881531,6.213356,7.261147,1.115410],[-8.392415,-1.822894,1.580769,0.052958,-7.148010,-9.952434,-5.200784,-5.775185,-7.349298,0.116977,-6.205965,-8.829307,0.552784,4.459118,9.609206,9.293639,7.339094,0.468069,0.348958,-9.157714,9.354789,-8.274900,-8.216410,7.127200,-3.885337,8.454768,8.170490,-8.360837,3.976524,-3.735357,3.562034,8.164574],[9.271346,0.866836,7.072207,4.096715,-4.573261,4.511125,-4.873647,0.662486,9.843434,-2.516521,0.794791,-9.170759,-7.117678,0.692031,-9.082962,-9.648557,6.844845,-8.734143,-2.044434,1.228053,2.787269,2.004922,-1.519412,0.154937,8.086101,-6.925195,-4.050691,-2.665028,1.756604,-0.879849,-5.565203,-9.202209],[-5.589724,-1.891000,-0.424413,-7.523366,-1.080353,2.763657,-0.622112,6.033144,-1.863802,-2.048538,-5.236951,9.822143,4.051395,1.963840,0.158714,0.260587,1.388641,-4.038859,-5.379337,7.234145,-8.013168,4.998348,5.532016,8.129787,-8.474175,1.514928,-6.189762,1.203981,-4.748571,7.817338,-7.464844,-8.176230],[-8.950552,5.434583,3.632571,-5.478518,7.861093,-0.047416,-5.005136,7.203806,-3.940290,9.030112,6.736466,-2.812289,0.353484,6.241401,-5.958925,2.895117,-5.965448,4.393220,-5.658694,-0.900123,0.453523,-6.238238,-1.831424,4.159496,-9.408930,3.817313,0.688500,-0.508155,5.625850,-8.171392,1.203649,-6.122250],[-0.467545,7.100922,5.459930,-7.823550,-9.301611,-0.784981,-6.481238,6.289244,-6.357921,9.092788,-5.925691,3.617710,5.919714,-6.506560,4.928125,7.819558,-1.774947,-4.868396,-2.834383,2.599652,-2.513251,3.386201,0.892674,8.946274,2.769723,6.957753,-1.098001,9.169612,-0.570041,-5.771850,-4.177645,3.604368],[-9.609971,1.938740,-5.624739,-8.377690,-4.788126,-1.605926,-4.406537,-3.418134,-4.038878,-0.769904,-7.996928,-5.699921,5.193558,-9.340496,-3.768234,-7.322483,-9.693795,8.224148,-5.998898,2.259412,0.599747,-6.071429,9.169298,3.824029,-3.197243,5.783228,8.728369,4.424138,-2.374284,8.841576,1.200706,-4.436787],[2.843757,0.452974,8.687886,-2.332651,-8.449462,-7.219945,2.441856,1.053094,0.231038,-2.999968,-4.348262,5.495431,-3.388464,-1.411791,5.371473,4.818556,-1.218802,-6.682188,4.283745,1.660845,-1.536618,5.906311,7.443405,8.242658,1.582718,-0.882159,-7.459333,8.634013,-7.952356,-2.459310,-3.983226,-0.869587],[-9.389315,-0.937933,0.037144,0.012543,9.343774,-2.005326,0.714429,-3.946962,8.286149,8.671605,-6.963474,-5.796905,-1.799673,-0.322766,-0.458824,0.674439,-1.266562,-1.327652,2.521998,8.403244,8.689827,-5.076640,2.086928,5.733975,2.757069,-7.574643,9.122775,-6.123325,-9.518864,-2.945958,0.433614,3.924702],[6.095687,1.939464,-8.109533,-0.329572,-8.417258,-3.795627,1.565298,6.191240,-6.600713,-5.772935,-8.435390,3.680037,-5.988041,-6.091911,-1.670017,4.517945,9.284095,-9.475307,4.759968,3.007764,4.145598,6.113033,-4.341935,2.349027,6.804530,-6.637701,-9.642790,-3.495000,-7.714684,-6.978843,-1.092577,-5.878801],[1.388496,3.020597,9.370030,-1.259965,2.618010,3.757260,-3.310421,-3.853713,3.439666,-0.613677,8.408632,-6.379410,1.244154,-1.586086,-7.300302,8.827735,2.588445,-8.038234,-2.981142,-6.364806,-9.280917,5.176074,-3.674142,-9.011064,-9.700035,-0.111312,8.112886,7.517142,2.944118,9.774420,9.474038,0.662109],[9.415733,1.498368,6.261911,3.117296,-4.428253,-6.543756,7.124057,-1.752881,1.856790,0.480874,7.139960,6.897002,-5.788281,-4.255382,-4.892815,-5.359390,9.781681,6.981878,3.657218,-4.366217,7.144111,4.633712,-5.844973,-6.421605,-1.705902,-1.702952,8.247012,-6.582443,-4.623036,6.596469,3.962626,3.815203],[5.576642,0.767907,8.053865,-2.009542,-7.881607,0.200650,9.195795,4.062081,6.390939,9.900748,6.166170,-7.451630,-2.704956,-2.172524,-7.012876,-7.304500,-8.090876,-1.174006,-3.841281,-2.095929,-0.691693,7.824052,-1.396447,9.798007,-0.499174,-1.184225,8.221147,-2.577822,-9.111033,5.171655,-4.830759,-6.075483],[3.438171,-1.688281,-2.448869,-9.854616,7.092023,-6.240923,-4.413531,1.934916,8.957697,4.194016,1.602437,-8.947157,-7.541976,-8.868870,-1.066000,-9.036299,1.279887,5.017601,0.366923,0.135686,2.063535,-3.787129,2.599221,-9.448924,8.473810,0.953125,0.737923,-6.488316,9.394253,-2.037434,-5.305856,2.541707],[-8.954841,9.407347,9.625309,-6.818972,-8.678324,-2.287151,-0.734357,-2.065661,-3.978245,-1.043809,-1.484867,-8.583897,5.492722,6.632470,3.337631,-5.677240,1.901117,1.540048,-1.722315,4.004474,5.244644,-0.742592,-4.062593,2.655597,4.488126,7.102216,8.147925,6.950076,-5.213766,-2.140948,-2.237204,8.335065],[-5.631920,-7.557556,-8.130421,3.594357,7.008353,-7.303948,0.580653,2.732910,4.944874,-0.574832,-5.637681,-7.472787,-0.437074,-7.368684,0.719700,-4.154486,-4.909326,-5.423192,-6.201002,-9.409353,4.276657,4.493688,2.521479,7.421372,5.801232,3.948685,-2.620408,2.030635,-4.647392,5.753160,7.475127,0.933020],[-3.238793,4.123556,7.951237,-5.066593,-5.773014,8.559062,-6.008452,-8.005123,-8.385897,3.862033,6.229830,8.778733,-5.992660,4.004924,-7.216948,-0.678074,-7.961277,6.519131,0.479469,6.074895,-8.312662,9.801444,9.780134,-3.348732,1.571890,-2.428836,-1.624149,-6.369706,-7.634076,8.304761,-6.982092,7.951703],[2.456194,8.129569,0.377057,-4.685696,1.578845,-4.973112,1.594069,9.648832,0.460564,-5.321368,3.013985,-4.304860,-1.312522,3.600736,6.648888,-7.112139,4.470190,-4.519044,-7.666719,-6.571979,-2.041523,-4.251150,-1.182405,5.766142,-5.608933,2.946562,-8.917533,3.398067,2.840810,-3.360106,-1.916243,2.434739],[-6.037387,-2.609111,-6.433918,-8.311517,8.731041,7.266224,-1.483323,4.819932,-1.926303,6.712079,8.560600,6.272876,5.077602,6.463043,-4.980766,4.226067,-8.805184,8.076940,2.717613,-9.701314,2.106686,-2.562484,-1.265092,-5.849120,-8.982235,7.525077,-5.250751,1.910745,-4.030132,1.643786,0.345342,4.091666],[-1.465160,0.575176,3.685519,6.782855,3.558365,-8.812907,7.609994,-1.807065,-6.838394,2.410903,-7.981232,-1.628181,-1.891391,-1.288593,7.824287,4.049527,-0.284736,8.784904,-9.358746,-6.252304,-8.717077,5.367836,9.589369,0.298909,-2.218879,1.060264,2.302690,4.992802,3.067550,-2.057777,-3.047993,2.982073],[-8.417200,-2.938189,0.346513,-2.138106,7.271043,1.178674,5.832014,4.190012,-2.462548,-5.233277,-6.398891,3.122057,2.614561,-2.297156,3.061443,1.395439,-6.273363,7.065704,-4.019736,9.446718,5.104661,0.126341,-6.670833,-7.224371,1.946873,-5.998687,3.974101,3.968493,2.619976,-3.851666,5.033722,-1.684285],[9.291351,1.593477,2.245517,1.257915,-2.693494,4.943615,6.748573,8.392472,7.040324,2.098569,6.552678,1.709421,-6.008226,0.947203,4.957592,-4.014440,3.342092,2.934703,-7.616907,-1.795943,9.376499,3.398202,5.378342,0.223622,9.955523,4.251239,3.397845,3.721008,-6.613044,-9.352225,4.587904,-3.112506],[-5.823217,7.376887,2.106623,6.435879,-8.445596,6.561870,4.259290,-9.512543,1.123908,6.047229,-9.018610,3.627029,-5.442014,5.622548,-9.011081,-5.530145,8.514154,5.167853,0.498086,9.412654,-0.153282,-7.676751,1.839648,-0.781241,-2.826663,3.327509,-9.453834,-4.495468,-6.599408,-0.330574,6.117395,-2.628743]], dtype = "float64")#candidate|2185|(52, 32)|const|float64
call_2184 = relay.TupleGetItem(func_689_call(relay.reshape(const_2185.astype('float64'), [13, 8, 16])), 1)
call_2186 = relay.TupleGetItem(func_691_call(relay.reshape(const_2185.astype('float64'), [13, 8, 16])), 1)
func_960_call = mod.get_global_var('func_960')
func_962_call = mutated_mod.get_global_var('func_962')
call_2209 = relay.TupleGetItem(func_960_call(), 0)
call_2210 = relay.TupleGetItem(func_962_call(), 0)
func_1770_call = mod.get_global_var('func_1770')
func_1772_call = mutated_mod.get_global_var('func_1772')
var_2212 = relay.var("var_2212", dtype = "uint8", shape = (1, 750))#candidate|2212|(1, 750)|var|uint8
call_2211 = relay.TupleGetItem(func_1770_call(relay.reshape(var_2212.astype('uint8'), [750,])), 2)
call_2213 = relay.TupleGetItem(func_1772_call(relay.reshape(var_2212.astype('uint8'), [750,])), 2)
output = relay.Tuple([call_2170,call_2184,const_2185,call_2209,call_2211,var_2212,])
output2 = relay.Tuple([call_2171,call_2186,const_2185,call_2210,call_2213,var_2212,])
func_2216 = relay.Function([var_2212,], output)
mod['func_2216'] = func_2216
mod = relay.transform.InferType()(mod)
mutated_mod['func_2216'] = func_2216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2217 = relay.var("var_2217", dtype = "uint8", shape = (1, 750))#candidate|2217|(1, 750)|var|uint8
func_2216_call = mutated_mod.get_global_var('func_2216')
call_2218 = func_2216_call(var_2217)
output = call_2218
func_2219 = relay.Function([var_2217], output)
mutated_mod['func_2219'] = func_2219
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2265 = relay.var("var_2265", dtype = "float64", shape = (15, 13, 3))#candidate|2265|(15, 13, 3)|var|float64
uop_2266 = relay.erf(var_2265.astype('float64')) # shape=(15, 13, 3)
output = uop_2266
output2 = uop_2266
func_2269 = relay.Function([var_2265,], output)
mod['func_2269'] = func_2269
mod = relay.transform.InferType()(mod)
var_2270 = relay.var("var_2270", dtype = "float64", shape = (15, 13, 3))#candidate|2270|(15, 13, 3)|var|float64
output = func_2269(var_2270)
func_2271 = relay.Function([var_2270], output)
mutated_mod['func_2271'] = func_2271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1324_call = mod.get_global_var('func_1324')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_2279 = relay.TupleGetItem(func_1324_call(), 3)
call_2280 = relay.TupleGetItem(func_1325_call(), 3)
output = relay.Tuple([call_2279,])
output2 = relay.Tuple([call_2280,])
func_2281 = relay.Function([], output)
mod['func_2281'] = func_2281
mod = relay.transform.InferType()(mod)
mutated_mod['func_2281'] = func_2281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mutated_mod.get_global_var('func_2281')
call_2282 = func_2281_call()
output = call_2282
func_2283 = relay.Function([], output)
mutated_mod['func_2283'] = func_2283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_2304 = relay.TupleGetItem(func_804_call(), 0)
call_2305 = relay.TupleGetItem(func_806_call(), 0)
output = call_2304
output2 = call_2305
func_2307 = relay.Function([], output)
mod['func_2307'] = func_2307
mod = relay.transform.InferType()(mod)
mutated_mod['func_2307'] = func_2307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2307_call = mutated_mod.get_global_var('func_2307')
call_2308 = func_2307_call()
output = call_2308
func_2309 = relay.Function([], output)
mutated_mod['func_2309'] = func_2309
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2326 = relay.const([[[-8,-2],[-1,4],[-3,3],[-7,-6],[-4,-4],[8,-4],[4,-2],[2,8],[7,8],[4,-9],[3,2],[4,4],[10,1]],[[-8,3],[-9,-8],[10,-10],[-7,-4],[-2,-7],[-6,-6],[8,10],[-10,6],[-6,-1],[-3,-5],[-4,-10],[5,9],[9,-4]],[[-6,7],[2,1],[-10,9],[3,2],[-8,9],[-6,-2],[-2,-10],[-8,6],[-7,-9],[-2,-1],[7,-10],[-2,6],[-3,-4]],[[5,10],[9,-8],[6,-3],[9,-10],[-2,3],[2,10],[8,-6],[3,10],[7,5],[1,7],[7,10],[1,7],[2,-3]],[[-5,-10],[8,-6],[9,-1],[7,4],[-9,-7],[10,4],[-7,5],[1,6],[10,1],[-4,-1],[2,-9],[7,-8],[6,-7]]], dtype = "uint8")#candidate|2326|(5, 13, 2)|const|uint8
var_2327 = relay.var("var_2327", dtype = "uint8", shape = (5, 13, 2))#candidate|2327|(5, 13, 2)|var|uint8
bop_2328 = relay.minimum(const_2326.astype('uint8'), relay.reshape(var_2327.astype('uint8'), relay.shape_of(const_2326))) # shape=(5, 13, 2)
uop_2332 = relay.sinh(var_2327.astype('float32')) # shape=(5, 13, 2)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_2334 = relay.TupleGetItem(func_1197_call(), 1)
call_2335 = relay.TupleGetItem(func_1198_call(), 1)
output = relay.Tuple([bop_2328,uop_2332,call_2334,])
output2 = relay.Tuple([bop_2328,uop_2332,call_2335,])
func_2336 = relay.Function([var_2327,], output)
mod['func_2336'] = func_2336
mod = relay.transform.InferType()(mod)
mutated_mod['func_2336'] = func_2336
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2337 = relay.var("var_2337", dtype = "uint8", shape = (5, 13, 2))#candidate|2337|(5, 13, 2)|var|uint8
func_2336_call = mutated_mod.get_global_var('func_2336')
call_2338 = func_2336_call(var_2337)
output = call_2338
func_2339 = relay.Function([var_2337], output)
mutated_mod['func_2339'] = func_2339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_394_call = mod.get_global_var('func_394')
func_395_call = mutated_mod.get_global_var('func_395')
call_2386 = relay.TupleGetItem(func_394_call(), 2)
call_2387 = relay.TupleGetItem(func_395_call(), 2)
output = relay.Tuple([call_2386,])
output2 = relay.Tuple([call_2387,])
func_2388 = relay.Function([], output)
mod['func_2388'] = func_2388
mod = relay.transform.InferType()(mod)
output = func_2388()
func_2389 = relay.Function([], output)
mutated_mod['func_2389'] = func_2389
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2406 = relay.const([[[7,-5,-4,7,3,9,-1,-1,-1,-1,-8,-9,4,2,-2],[-5,10,6,-8,-3,6,-7,3,3,2,-2,-1,-9,-1,-4],[-1,-4,1,-4,4,-10,-1,9,-6,-9,-8,-3,2,-5,-3],[7,-10,-7,-2,-9,-10,7,9,7,-10,-6,-7,-7,-2,-1]],[[-3,-3,1,5,-2,-10,-7,-6,-4,-2,1,-3,8,7,-6],[7,9,4,9,-3,-4,-3,-1,7,-4,-2,-6,3,-6,-6],[-1,2,10,-3,-5,-9,-9,-2,-3,-8,8,2,-4,10,7],[2,8,1,-10,-8,-9,8,1,-10,8,3,-7,-2,2,-1]],[[-9,-9,7,-8,2,-3,-4,3,-10,-2,-3,6,2,9,9],[4,-2,-6,3,-7,-9,8,-3,1,-5,4,9,-6,-6,-6],[-6,3,-5,9,5,3,-8,9,1,5,-2,4,6,4,-6],[9,1,1,2,-4,-6,1,7,5,10,5,-10,-7,8,10]],[[-2,-5,-10,-10,6,1,10,-6,-4,8,5,-9,-2,-1,6],[4,10,-10,8,7,4,6,10,1,-6,-9,2,-6,-2,7],[-8,-5,-2,3,7,-6,7,-4,-7,-2,-4,4,7,-2,-8],[-9,2,7,9,6,9,6,5,5,-5,-6,6,-6,-1,3]],[[9,-6,-4,-5,-4,-10,4,-10,-5,10,10,10,-8,-10,-7],[6,3,-7,6,3,-2,4,-2,-4,9,-9,-1,-4,7,8],[7,2,-8,8,-8,6,7,-7,-6,5,6,-2,-3,8,10],[-6,9,-6,6,3,-6,-5,10,-9,-2,10,8,-4,10,-5]],[[-5,-9,8,3,1,9,8,-10,3,-5,-6,2,10,-7,6],[-3,2,9,-7,-7,10,-8,7,9,9,-6,2,1,3,-2],[-1,-2,-9,6,-3,6,6,-4,-4,-6,8,10,-1,1,8],[-3,-10,-3,-7,-7,-9,-8,7,-1,-6,3,-8,-3,3,-2]],[[-7,1,1,-6,-2,-1,-6,-9,10,5,6,1,3,4,-7],[-9,1,-4,6,3,5,-1,2,7,10,9,1,10,3,4],[-10,6,4,8,-4,-10,-6,1,2,1,9,8,9,6,3],[1,2,7,-1,-8,7,-3,10,10,-9,4,10,-8,1,10]],[[-3,-7,2,2,10,-8,9,-1,-3,-1,-3,-2,8,-3,-5],[2,6,4,-7,3,8,6,3,6,-10,10,-5,-6,2,3],[4,7,9,10,-10,3,2,-5,9,-1,-2,2,-3,10,10],[5,1,4,5,-3,-6,-5,10,-3,3,9,7,3,-2,9]],[[6,-5,-8,-6,4,-10,-8,9,6,8,-10,-7,8,10,10],[-1,-5,-3,7,8,9,-10,-4,6,4,1,10,-10,-7,6],[10,-4,-6,-10,6,-2,7,-5,-4,-2,6,-2,-3,-5,-5],[-6,10,1,-8,-7,-8,-3,-5,-5,1,7,3,6,-2,-6]],[[3,3,3,9,5,-8,-7,8,-9,-2,2,-10,9,-3,-8],[-9,3,4,7,7,-9,5,-6,-9,7,9,-1,8,-6,2],[-2,-5,-4,-10,2,3,4,9,-10,-7,2,-10,-5,-4,9],[-5,8,5,8,-2,-3,-4,-2,7,3,-3,-1,7,-9,-9]],[[6,9,-5,-5,2,-5,-2,-1,10,-8,-3,-8,-2,-10,-8],[9,-2,-10,-7,-2,-2,-1,4,9,-2,-10,8,9,5,-2],[8,-10,2,-1,-5,-7,10,1,1,-9,-9,-10,-7,8,10],[-8,1,-1,6,-3,5,-7,-7,-10,-8,-3,-9,5,-2,9]],[[-1,2,-3,-7,5,1,10,-6,6,-7,-4,-3,-3,-9,9],[9,-7,4,-4,-10,-2,10,6,-1,1,-7,8,9,6,8],[-8,-7,-8,4,1,10,4,5,7,2,-4,6,-1,-3,3],[-4,8,5,-10,5,-4,7,6,-9,10,4,2,-5,-5,10]],[[10,10,-5,4,-5,-9,8,6,-9,-9,-6,-10,5,1,-6],[9,-7,5,-3,7,2,4,3,-3,4,-1,7,9,9,-3],[3,2,-8,-1,-8,6,8,7,1,-6,-4,-5,10,-4,-6],[-5,-8,10,-4,6,3,9,3,3,-5,-10,5,1,-1,-4]],[[1,-7,-6,2,10,-1,1,4,-5,-1,5,-1,-9,6,7],[-9,1,5,5,-5,-7,-9,6,4,2,6,-7,10,9,-5],[7,-5,2,-6,-7,-5,9,5,-9,9,-2,-1,-3,-4,10],[-1,7,-7,-5,-7,6,-9,8,-2,-2,-10,-7,-5,5,-3]],[[3,2,-9,9,4,10,-10,4,-4,-6,-7,-1,9,-5,7],[9,-1,8,-2,5,4,5,-6,-3,7,-7,6,-9,5,-9],[-1,2,9,-1,8,-8,-5,8,4,-2,-1,-5,8,-9,-9],[5,7,1,7,7,-10,-10,8,8,1,2,10,6,3,-3]],[[6,-10,5,-8,-5,-8,2,2,7,-3,-10,10,-4,10,-4],[10,8,4,3,-6,9,-3,-3,4,-5,-10,-3,4,5,-7],[-6,-10,8,10,7,10,-1,8,8,-5,10,7,-4,-3,7],[-9,-6,9,-4,-7,-4,-7,-10,8,9,-2,-9,-2,-1,3]]], dtype = "int64")#candidate|2406|(16, 4, 15)|const|int64
var_2407 = relay.var("var_2407", dtype = "int64", shape = (16, 4, 15))#candidate|2407|(16, 4, 15)|var|int64
bop_2408 = relay.bitwise_or(const_2406.astype('int64'), relay.reshape(var_2407.astype('int64'), relay.shape_of(const_2406))) # shape=(16, 4, 15)
output = bop_2408
output2 = bop_2408
func_2424 = relay.Function([var_2407,], output)
mod['func_2424'] = func_2424
mod = relay.transform.InferType()(mod)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2425 = relay.var("var_2425", dtype = "int64", shape = (16, 4, 15))#candidate|2425|(16, 4, 15)|var|int64
func_2424_call = mutated_mod.get_global_var('func_2424')
call_2426 = func_2424_call(var_2425)
output = call_2426
func_2427 = relay.Function([var_2425], output)
mutated_mod['func_2427'] = func_2427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
call_2448 = func_296_call()
call_2449 = func_296_call()
output = call_2448
output2 = call_2449
func_2469 = relay.Function([], output)
mod['func_2469'] = func_2469
mod = relay.transform.InferType()(mod)
mutated_mod['func_2469'] = func_2469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mutated_mod.get_global_var('func_2469')
call_2470 = func_2469_call()
output = call_2470
func_2471 = relay.Function([], output)
mutated_mod['func_2471'] = func_2471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_2551 = relay.TupleGetItem(func_2161_call(), 2)
call_2552 = relay.TupleGetItem(func_2162_call(), 2)
func_542_call = mod.get_global_var('func_542')
func_544_call = mutated_mod.get_global_var('func_544')
call_2553 = func_542_call()
call_2554 = func_542_call()
output = relay.Tuple([call_2551,call_2553,])
output2 = relay.Tuple([call_2552,call_2554,])
func_2563 = relay.Function([], output)
mod['func_2563'] = func_2563
mod = relay.transform.InferType()(mod)
output = func_2563()
func_2564 = relay.Function([], output)
mutated_mod['func_2564'] = func_2564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1667_call = mutated_mod.get_global_var('func_1667')
call_2572 = relay.TupleGetItem(func_1666_call(), 0)
call_2573 = relay.TupleGetItem(func_1667_call(), 0)
const_2582 = relay.const([[[2,-3,2],[10,5,10],[-2,-5,-7],[5,10,-3],[-10,-2,2],[6,3,-9],[-9,8,7],[-9,-6,1],[-1,7,2]],[[2,7,-4],[-3,4,-2],[-8,2,-4],[4,9,10],[-3,-6,-4],[10,-10,-9],[7,9,-7],[-4,1,-3],[-6,-10,6]],[[5,-3,-2],[1,5,9],[8,-6,-1],[7,10,-3],[4,-9,-6],[-6,-6,4],[-8,-10,-6],[6,8,2],[-7,-5,6]]], dtype = "uint16")#candidate|2582|(3, 9, 3)|const|uint16
bop_2583 = relay.logical_and(call_2572.astype('bool'), relay.reshape(const_2582.astype('bool'), relay.shape_of(call_2572))) # shape=(3, 9, 3)
bop_2586 = relay.logical_and(call_2573.astype('bool'), relay.reshape(const_2582.astype('bool'), relay.shape_of(call_2573))) # shape=(3, 9, 3)
bop_2612 = relay.left_shift(call_2572.astype('int8'), relay.reshape(bop_2583.astype('int8'), relay.shape_of(call_2572))) # shape=(3, 9, 3)
bop_2615 = relay.left_shift(call_2573.astype('int8'), relay.reshape(bop_2586.astype('int8'), relay.shape_of(call_2573))) # shape=(3, 9, 3)
func_1078_call = mod.get_global_var('func_1078')
func_1082_call = mutated_mod.get_global_var('func_1082')
const_2625 = relay.const([-9,-7,-10,7,9,-5,5,-4,-7,5,-2,-8,-9,-9,-1,5,1,6,-10,-9,4,9,-7,8,10,9,-4,6,1,-6,4,-4,-3,6,-5,2,8,-1,-6,10,2,-8,6,8,1,-2,7,-2,8,6,5,-3,3,8,2,-5,-7,9,-1,1,-4,9,-8,-2,10,-10,-7,-8,8,10,-3,-4,-10,-6,-1,2,-9,-7,-1,5,-6,-4,9,-1,-7,-7,-6,3,-4,-6,5,2,-9,4,7,-1,6,6,-9,-2,-8,9,10,9,-2,-10,-4,-4,1,-3,7,1,-1,-9,-4,9,10,5,1,-3,-10,1,-7,-7,2,7,5,-3,3,-1,2,8,-9,1,8,4,-9,1,1,-6,-9,-2,-9,5,6,-8,5,10,8,3,-7,3,3,4,4,-6,-1,9,5,3,-7,8,8,3,9,-3,4,-4,1,-2,-8,-8,-9,10,-1,3,-5,-10,-3,2,-1,-10,-2,-4,2,10,4,-8,6,-7,2,-5,-5,1,-9,9,9,-7,-4,6,6,-4,5,-5,2,10,-4,-1,1,6,-5,2,-4,5,-1,-4,8,-9,-1,-5,-8,5,1,2,7,2,5,-6,-4,-9,-3,-3,-10,-3,9,-4,-5,1,-2,-8,3,1,-5,-8,-9,3,9,-4,-8,-10,6,-6,-10,7,-9,2,-6,-1,1,1,8,3,-1,6,3,8,9,-10,-8,2,-5,-3,-9,-3,6,2,9,-1,2,10,3,-7,-10,1,6,-9,-8,-2,-9,-9,9,8,7,-8,7,6,-6,2,10,5,-7,-4,9,3,-3,2,2,-1,1,9,7,-8,8,8,1,3,2,-2,5,10,6,9,-1,-8,-10,-10,2,-2,8,-8,7,-9,-9,9,-8,2,-10,3,-3,-6,10,4,4,4,-5,-4,-4,-1,-4,8,1,8,-5,5,-4,3,-6,5,2,-3,2,9,-10,10,3,6,10,-5,4,2,-10,-1,-3,-6,6,2,-7,-3,-1,1,-2,8,-2,6,-5,-4,-5,-1,1,-3,-7,4,-6,-10,-1,9,-7,-5,1,7,-10,-9,5,-3,-7,3,3,-9,4,4,-8,1,1,8,-5,-8,-3,-10,-8,5,3,-1,-5,3,-10,7,1,7,3,-6,8,5,-2,2,-10,-9,-6,7,-3,-1,9,-2,7,6,3,-10,7,-6], dtype = "int64")#candidate|2625|(448,)|const|int64
var_2626 = relay.var("var_2626", dtype = "uint8", shape = (750,))#candidate|2626|(750,)|var|uint8
call_2624 = relay.TupleGetItem(func_1078_call(relay.reshape(const_2625.astype('int64'), [448,]), relay.reshape(var_2626.astype('uint8'), [1, 750]), ), 2)
call_2627 = relay.TupleGetItem(func_1082_call(relay.reshape(const_2625.astype('int64'), [448,]), relay.reshape(var_2626.astype('uint8'), [1, 750]), ), 2)
output = relay.Tuple([bop_2612,call_2624,const_2625,var_2626,])
output2 = relay.Tuple([bop_2615,call_2627,const_2625,var_2626,])
func_2638 = relay.Function([var_2626,], output)
mod['func_2638'] = func_2638
mod = relay.transform.InferType()(mod)
var_2639 = relay.var("var_2639", dtype = "uint8", shape = (750,))#candidate|2639|(750,)|var|uint8
output = func_2638(var_2639)
func_2640 = relay.Function([var_2639], output)
mutated_mod['func_2640'] = func_2640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1324_call = mod.get_global_var('func_1324')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_2650 = relay.TupleGetItem(func_1324_call(), 0)
call_2651 = relay.TupleGetItem(func_1325_call(), 0)
func_2216_call = mod.get_global_var('func_2216')
func_2219_call = mutated_mod.get_global_var('func_2219')
var_2675 = relay.var("var_2675", dtype = "uint8", shape = (10, 75))#candidate|2675|(10, 75)|var|uint8
call_2674 = relay.TupleGetItem(func_2216_call(relay.reshape(var_2675.astype('uint8'), [1, 750])), 2)
call_2676 = relay.TupleGetItem(func_2219_call(relay.reshape(var_2675.astype('uint8'), [1, 750])), 2)
output = relay.Tuple([call_2650,call_2674,var_2675,])
output2 = relay.Tuple([call_2651,call_2676,var_2675,])
func_2683 = relay.Function([var_2675,], output)
mod['func_2683'] = func_2683
mod = relay.transform.InferType()(mod)
var_2684 = relay.var("var_2684", dtype = "uint8", shape = (10, 75))#candidate|2684|(10, 75)|var|uint8
output = func_2683(var_2684)
func_2685 = relay.Function([var_2684], output)
mutated_mod['func_2685'] = func_2685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1484_call = mod.get_global_var('func_1484')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_2697 = relay.TupleGetItem(func_1484_call(), 0)
call_2698 = relay.TupleGetItem(func_1485_call(), 0)
func_689_call = mod.get_global_var('func_689')
func_691_call = mutated_mod.get_global_var('func_691')
call_2700 = relay.TupleGetItem(func_689_call(relay.reshape(call_2697.astype('float64'), [13, 8, 16])), 0)
call_2701 = relay.TupleGetItem(func_691_call(relay.reshape(call_2697.astype('float64'), [13, 8, 16])), 0)
uop_2728 = relay.exp(call_2697.astype('float64')) # shape=(13, 8, 16)
uop_2730 = relay.exp(call_2698.astype('float64')) # shape=(13, 8, 16)
bop_2734 = relay.logical_xor(call_2700.astype('int16'), relay.reshape(call_2697.astype('int16'), relay.shape_of(call_2700))) # shape=(13, 8, 16)
bop_2737 = relay.logical_xor(call_2701.astype('int16'), relay.reshape(call_2698.astype('int16'), relay.shape_of(call_2701))) # shape=(13, 8, 16)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
call_2738 = func_2113_call()
call_2739 = func_2113_call()
func_1447_call = mod.get_global_var('func_1447')
func_1451_call = mutated_mod.get_global_var('func_1451')
const_2749 = relay.const(4.821650, dtype = "float64")#candidate|2749|()|const|float64
const_2750 = relay.const([7.386973,-0.787200,-3.894641,-1.613877,-9.517732,6.400678,7.825774,-1.210332,6.340824,0.456043,1.386105,-5.543437,-6.422345,-6.581904,0.714456,9.143148,-7.321747,8.616975,5.586590,-1.300694,0.414188,8.945122,2.640595,-9.057756,4.165573,-0.838619,-3.502376,7.840574,3.655290,-7.467047,1.989088,5.707002,-8.741752,-0.128325,-6.138768,5.468505,2.499714,9.212057,-6.435032,4.180673,0.126204,-7.419496,-9.420525,-5.095698,-4.822677,1.162990,0.704465,1.014271,2.243330,7.618217,5.775455,5.126510,0.339889,5.390830,-8.838905,8.816303,4.175560,3.585509,-3.989105,8.914652,3.730645,-4.925508,9.628355,-0.295984,3.377368,-5.894023,-1.176413,9.467227,-1.471003,3.208955,7.803180,8.845044,-2.825089,1.281951,-1.034865,1.689515,6.073420,-4.280511,-5.020364,0.985995,-2.563687,-7.507621,7.461278,-8.991128,-2.520270,-8.656415,0.613495,-0.515588,6.408481,-1.175289,-1.816488,5.014960,9.145400,-9.279224,-9.624038,1.600071,-6.816131,2.240320,-2.448656,3.142673,4.677432,-4.845150,6.679331,-2.777699,-3.706790,2.692070,6.134872,-5.318814,-3.606680,-4.849382,-4.524789,-0.972023,2.620523,-2.562931,9.855235,-5.759704,-0.528023,4.109063,-3.541816,-0.179632,-0.104163,4.951628,-6.063510,-6.011236,1.005154,9.918651,4.390938,-8.197531,5.936613,-8.131322,-7.505611,7.444250,4.599253,2.642789,-0.092085,9.417111,7.179875,-0.234414,-1.584079,-3.856298,9.295875,-5.747254,8.368546,2.758213,7.300751,-6.177323,6.245258,-9.854343,-0.101558,-3.651565,8.710358,-1.027816,-0.035892,-2.241909,3.965277,-3.678113,-5.965534,5.625789,7.612570,-2.077005,-8.464841,9.816137,-5.513811,2.954170,6.675729,-0.011726,0.983588,3.323176,0.721374,-8.535215,-7.687112,-4.861085,3.579199,6.273043,-1.091198,-4.702019,-8.840627,-7.186197,9.126657,8.019859,0.139749,-3.781586,-6.425037,5.587262,7.800828,4.526052,-4.099965,3.975425,5.366902,2.961705,-2.227656,8.284297,1.923545,-3.410530,8.097174,7.918686,9.489277,0.959921,4.973576,3.090208,-4.287870,-3.793990,-8.812844,2.462078,-5.733254,-7.366010,-6.294108,0.342295,1.975138,-2.681423,-1.087434,-9.848837,6.374922,4.722017,-0.218422,-7.701508,7.774579,7.423853,-9.207820,-9.453673,7.985171,5.889083,-5.589622,7.867183,-6.429200,-9.949170,9.517941,-9.297025,-0.159618,0.866062,9.292251,7.474247,3.773376,-4.481796,1.748489,-9.474383,8.360378,-8.501862,4.655417,-8.660916,-2.861751,-9.209361,6.390565,-5.972999,-3.056202,-1.514450,5.960313,9.279554,-5.367805,-6.195911,-6.295774,2.377591,1.781709,6.278489,4.264512,-9.317187,-9.684925,-9.882762,-6.592292,7.473993,-2.659705,-0.122261,6.450337,-2.030934,3.445868,-0.481820,-1.995770,-0.039111,4.755493,-8.256504,4.871387,-1.799634,5.600261,2.301184,-7.558338,-8.241483,-6.754606,-8.588472,-8.058051,4.884485,-2.232351,0.322750,4.021035,-3.172121,7.170387,-5.753828,5.010071,-2.273955,8.560599,-0.354293,-7.024591,-2.824433,7.133750,5.581162,-6.045707,-1.195787,-9.333971,9.455239,5.799380,-0.247709,-1.470959,3.077461,-7.074397,-4.460818,7.046012,4.349485,5.766441,-8.593760,-1.232908,7.801384,-6.975741,9.047380,2.668619,0.338666,-9.158873,-3.344002,-6.154354,0.456196,3.944567,-7.401233,-1.607338,4.060095,1.714468,7.823091,5.677239,-5.231713,-6.175095,-1.338564,-2.403858,-6.889409,7.891557,7.362671,-9.021722,-1.692830,-3.279451,-3.563675,-4.100466,5.599076,0.182897,-6.935311,7.600401,-4.797226,-6.726132,6.305746,-6.183261,-3.945841,-7.861664,2.894944,-1.395318,6.526915,-5.921833,2.399678,8.167985,6.962142,6.706302,8.528976,-0.218207,-2.397168,-8.454668,-8.384815,0.510512,-8.267136,-3.961058,-7.457329,-5.299396,-2.758349,5.541555,6.571398,-9.896335,8.582297,-4.979369,-9.183906,6.296254,-2.081260,-7.336248,-7.849625,1.621084,-9.054931,8.491847,-2.165338,-2.766819,-4.563080,-2.104524,-6.612199,-3.875682,8.891856,-6.293967,-7.560361,-9.869767,7.391941,0.039029,4.224001,-0.071197,-6.702799,-2.063472,2.912943,0.266451,0.148532,-9.410050,-3.730799,5.389375,5.588691,2.636705,4.991658,-0.017192,8.961557,3.176441,-5.525974,-6.159831,8.308275,3.637947,6.815588,-0.992510,8.643460,-2.507521,-5.013622,3.342178,6.384257,6.189751,-2.382590,1.923335,7.709072,-1.113984,-4.326848,-7.389632,-6.129077,4.272830,1.243549,-8.898365,-8.307487,-7.005878,-6.053947,-8.612690,9.281743,5.761964,-3.901372,8.845335,8.720595,2.887743,-6.158287,7.437632,-1.671758,-7.273526,-6.389730,-8.144023,1.146232,1.989301,-5.834964,1.115412,2.479463,8.024398,5.418167,0.361881,7.423389,-9.932046,2.042070,-7.483130,-1.137527,1.407377,2.675909,7.956310,-6.983891,-4.217683,8.112503,-3.877479,-6.829497,-4.628021,-4.179450,-8.272674,-9.854959,1.094172,-6.963173,7.406247,-6.749437,-0.490428,-9.920002,-5.851624,-3.973038,4.826499,-2.072370,1.141864,-2.060979,-7.745311,4.901054,-5.490380,-3.221884,7.818216,6.546195,7.213599,8.854787,8.255166,-9.134221,1.285400,-3.444996,-4.973477,-6.215705,-7.021669,0.302681,-1.179326,8.644269,-0.047327,-4.585132,0.593789,9.758828,-9.441379,-8.265977,-6.857323,9.643299,5.977755,6.760131,1.550652,9.629900,-2.557559,-8.744726,-6.573965,1.369401,1.240910,-4.165632,4.650605,-7.156046,1.048382,3.457037,1.489011,2.964401,-8.304710,-9.433371,-8.969001,5.736572,-7.994260,7.320555,-9.424882,5.336275,0.573245,-5.404660,3.790387,-3.977998,3.817852,2.039126,-1.078379,5.243725,4.945358,-1.694056,-7.625497,-7.634779,-7.574673,3.191440,-5.324773,-6.386251,-5.509271,-9.444373,4.952535,-7.185900,-2.174631,6.509760,-6.327661,6.293364,-7.935066,-8.523620,-9.896607,7.871635,-6.111453,7.081348,-9.159136,-4.733729,-6.871226,-5.814643,7.093098,-4.975691,-8.783980,8.722803,-0.060995,-5.014098,-3.723855,4.550254,1.412709,2.957377,7.575259,-7.546811,8.555089,0.596743,0.260556,8.811390,-6.403710,-0.642177,-1.850991,-0.571749,7.698072,3.322349,0.245175,-7.666982,-8.009397,-8.551203,-3.812901,8.096001,-8.854946,9.661443,-1.671285,-4.467471,-8.524065,-9.817155,-1.809095,5.358179,2.004176,-9.432058,-0.365977,-3.792053,-1.468400,-8.562919,8.227660,-6.898989,-7.582234,-0.060184,2.615771,-4.286114,0.306745,-0.912824,1.405946,1.682999,-3.326006,3.773381,-0.724151,8.658451,-9.334733,1.717887,6.873521,0.245747,4.098976,1.414711,8.644007,-9.660957,-7.884014,-7.426131,9.145665,-1.598859,3.957779,-4.834564,0.304149,2.543362,4.190235,-2.507468,-9.742209,3.580806,2.355469,-7.859869,-6.633628,4.550221,2.921074,-7.081475,-8.452297,3.187610,-2.649546,0.507954,7.989220,2.660024,-9.283207,-3.360985,-9.694110,-0.722266,-6.356560,-3.051836,-5.343982,1.244506,7.146790,-8.828389,-7.996191,-8.484312,6.802325,1.160613,-2.015030,9.425894,-9.351871,0.494836,2.235999,-1.072369,8.207864,-7.418457,-0.960637,2.198231,3.966495,8.030541,7.857597,-2.318141,-6.947825,-3.202077,3.425123,5.760801,7.500405,-8.610524,-1.232242,-7.713076,0.657960,0.352311,-5.031710,5.546600,-8.972917,4.248741,-6.301765,-1.835811,8.827711,8.273796,3.100558,-8.538333,-0.266428,6.721178,6.515816,-0.450277,4.804202,7.127209,-2.916968,4.237906,1.345049,3.560241,6.612811,-3.684689,-6.409678,0.228526,-7.513978,-2.683230,-1.776334,-7.170996,2.318670,-8.509841,-8.410518,-8.435689,-8.869467,-0.121984,-8.343202,-8.227709,9.712055,2.706479,-5.323221,6.527618,-2.902313,0.994470,-3.236339,0.891620,-2.894318,-8.702062,9.018568,-7.050863,-8.778064,7.820607,-7.311601,-4.671727,5.073107,0.836270,-6.757310,-9.159299,-7.243377,6.238751,1.646775,-5.125214,-8.896315,3.645612,5.720407,-9.984406,-6.910076,-5.557849,6.766491,-1.151251,-3.253916,-0.339861,7.589619,-0.849367,9.720182,-0.302906,-8.817106,-1.342804,2.662264,-6.921692,4.011036,-6.711000,-8.602050,-0.140083,-3.988467,-6.382396,-5.000162,4.955578,-2.223141,7.291688,-0.868118,-2.613218,-0.163654,1.770097,-2.477514,-6.661070,-8.239725,0.319541,-7.804600,-9.255882,6.487189,0.399297,-9.954716,9.302218,-2.766383,-1.914483,-9.145390,8.897859,2.914788,-0.456898,-9.894000,-0.819030,0.513037,-3.648738,5.778111,-1.811712,3.533269,8.620279,1.947890,-6.560737,1.362299,-8.207796,-3.687224,5.004686,-6.161049,7.703350,-9.669308,-5.281567,-8.527925,4.916651,2.417588,-9.142437,-8.558417,-3.564506,-5.371583,2.283678,9.958400,3.024543,-2.625248,-7.126672,-3.290866,1.466964,1.574677,-2.384451,-0.265751,1.784419,-5.756054,9.001435,5.493882,-3.749413,-4.198385,-6.413270,4.112629,3.678045,-6.550966,-6.348852,-2.985064,8.689436,4.615270,6.393135,-5.096654,-3.152711,-1.034116,9.431886,7.610249,0.537978,0.238528,-1.043982,4.443975,-9.860620,2.419158,-9.684017,0.549182,5.516742,3.140629,-7.879227,3.856446,-3.205970,-4.689354,-0.346681,0.760046,-9.994466,5.466209,1.708205,-0.109175,-4.544724,5.590266,6.698982,-7.098236,2.134630,3.636796,2.623220,-8.987642,-2.724877,7.820607,1.898041,-2.765562,-9.780009,-0.833575,-0.542698,8.492025,-9.050403,7.837476,5.552878,-0.408838,-6.787638,2.357588,-1.027210,5.308252,-7.870001,2.481226,-4.870943,4.353738,1.949340,-6.808166,8.253168,-5.905164,-1.563537,4.232539,-4.378981,1.944854,-4.483191,-6.202036,-7.944685,0.358460,2.442562,-4.210606,5.453125,-3.543146,4.411060,-9.079379,-7.895652,-0.790950,3.855009,2.634608,5.178296,-9.631460,6.599294,9.616617,-0.088977,-9.460982,8.555138,5.998194,6.830201,-9.662406,5.622126,1.647563,2.049587,-1.404040,3.492648,-6.594084,-4.169177,-8.828958,-0.218906,-4.396572,8.726980,-9.276165,8.479813,1.437995,8.126646,-5.729725,-7.465699,-0.546004,0.624597,-6.106992,-6.539565,-6.550005,8.725405,-9.619853,-5.674675,7.109714,-1.717271,-2.751950,3.824437,-4.227929,5.857311,3.071031,-9.850667,-3.279239,6.819321,-7.223534,0.989569,-8.246581,-2.747775,-5.618418,9.590582,-4.325121,2.638101,-1.638590,-3.494857,5.518041,5.341834,6.176514,1.326845,1.743425,4.707961,-7.890124,-6.610723,8.199033,-6.149344,2.533607,6.390294,9.742176,0.493913,-2.290205,-3.299757,2.268743,-5.811989,5.526061,-2.578011,-7.712918,-0.188417,8.699162,-4.354635,8.540459,-1.706291,-6.862649,-8.357683,0.734621,9.277294,7.741529,7.079616,9.684807,-2.333945,2.376785,-8.273178,-0.581584,9.464477,0.187402,-9.542784,-7.264304,-1.533057,6.632077,-8.492555,-6.430590,-5.416006,7.078604,-8.993371,4.039851,6.301148,-8.386175,9.235853,-3.152690,-0.096456,-4.361011,1.692066,7.593803,1.692460,-8.327933,9.710096,-5.715066,6.102901,-5.759067,-5.008046,-7.988973,-5.555899,8.934480,7.946395,-8.705795,-2.921297,-7.991991,9.698819,8.302742,-9.687960,-5.255670,-1.772599,7.372393,-7.036885,5.926603,-3.877302,-1.441612,-2.946023,-4.587723,-9.319145,3.403669,7.361899,-9.574208,-7.662571,0.678576,4.745427,-4.923326,-0.811596,2.464436,7.190237,-4.113222,-2.755487,0.338516,-4.221942,-3.525235,-9.440901,1.467683,-8.732573,6.080677,2.131199,5.785369,-0.656659,-5.861172,-7.251190,-9.499924,1.971525,1.018650,8.771632,-1.329107,-8.051863,-3.715941,5.872024,-3.352710,5.841572,-5.571210,-4.279845,-8.907190,4.127073,-7.595412,-0.935958,-8.487572,1.192469,-4.811762,-6.168641,-2.276566,9.596096,7.964001,1.669241,-3.821974,4.421759,9.124280,1.023315,4.590090,2.441861,-7.989890,-2.913527,5.084218,-4.771683,-7.063196,-8.618817,0.256048,-0.970209,-2.414778,-0.894588,-3.390633,1.908811,4.974798,2.070962,-9.447062,-3.626616,4.817590,1.878464,-5.710899,-0.333496,-5.859400,-4.912863,-5.757695,-7.700549,-9.215429,-2.043245,7.218991,-1.078688,-2.046976,2.842133,-1.685862,0.435786,-3.794957,-8.827387,-8.615174,3.694503,-4.504081,-6.418482,-1.677436,7.368438,4.748642,-7.316191,-2.719372,8.084480,-0.445076,6.519103,9.648239,-0.730739,3.607618,-0.469710,3.608053,-9.443876,6.134174,4.785830,8.913220,-4.226523,-1.880869,4.664204,-5.133267,8.960724,0.060723,7.349682,3.244853,-1.810610,5.811665,-0.556763,6.395223,-0.351937,1.454665,-6.539615,-1.519161,6.209673,2.719720,8.423597,9.520744,2.894452,3.349616,0.581422,-1.268240,4.385408,8.254676,4.865879,-7.615617,3.471781,3.204225,1.625661,6.375675,-6.196598,6.174231,-8.572049,-6.086915,-5.959595,-8.971116,-0.799933,2.599573,-8.879203,2.596822,6.074830,3.984179,4.885220,7.060915,1.779370,9.336135,1.402042,5.145271,4.123842,7.613567,-7.217958,-2.925904,0.153690,-2.638780,-3.841726,3.281828,-3.551531,-8.618204,2.785812,-4.405605,-5.237880,-5.441557,-0.878099,3.825658,3.537300,5.647408,2.662558,-3.061530,-4.714457,-2.224628,-3.966169,-8.131750,3.531073,-7.552735,-2.925675,4.214193,-1.836548,4.289321,7.328803,-2.699967,2.745524,-6.405562,5.544046,6.607495,-2.774477,-1.118454,8.820744,4.062681,-9.909917,7.158700,-2.407315,7.726028,-2.073732,6.463277,-1.369507,-9.209835,-4.982286,-5.444660,2.725641,3.245241,1.962655,-1.610769,-0.495675,4.143199,2.923107,-7.838411,2.025320,-3.684514,-4.444142,-0.629278,-9.312945,-0.944017,6.564517,-0.723544,6.456310,-1.432564,-7.899076,0.391944,-4.043707,2.579900,-8.622498,1.250413,0.947185,9.327093,-5.086833,-9.333146,2.920888,3.186478,0.369873,2.731621,4.207406,-1.753863,7.669085,-9.210939,-5.475922,7.787175,6.823129,9.243111,9.632642,-5.408501,-9.307265,-6.193900,-4.147153,-6.164434,0.384079,-9.311045,-0.511938,-2.467302,-9.257027,3.670298,-7.369663,3.034044,-5.437611,5.798639,-2.670176,8.946342,-6.966729,-0.853852,0.214548,9.412953,-3.043438,1.200767,-4.447939,-8.838882,-5.305415,4.282875,6.616137,4.881258,5.162853,6.833486,-2.092615,-5.620178,-9.724399,7.618707,-0.892656,-6.572477,-0.534258,8.034134,-5.703865,-7.781364,0.002841,7.645129,-5.804767,-3.329733,5.289866,7.953233,-0.417107,0.880304,-4.255117,-9.279090,4.728488,-9.418084,-3.907476,-0.038948,2.206795,-6.961387,-5.336836,1.304287,-6.783579,2.095747,3.188373,3.869625,-2.416512,-4.656745,-2.957579,6.248184,-4.023748,7.030519,4.630331,8.343300,-4.947266,-4.242958,4.878586,-7.191427,8.312500,-7.658078,-0.322306,5.568803,-3.514111,-6.338771,-4.235018,-4.257350,0.981085,-4.324475,5.775948,3.683036,2.786776,-3.257364,-4.567181,-2.071909,-8.655876,-6.867737,-2.658454,-1.375563,-0.470556,6.661899,-2.983173,5.531611,-9.579147,8.563499,2.302787,8.513393,-8.211326,8.822690,-9.466350,-2.658789,-7.465014,-9.185011,-1.837376,1.818704,4.667872,-2.753552,-3.994065,4.079484,3.743523,-0.758027,1.819320,8.146640,-3.028611,-5.481245,-7.434126,1.826117,-0.716840,4.036241,-1.468525,8.467973,-2.526734,-2.319790,7.017205,5.096774,-0.407215,6.810110,7.675412,4.790949,1.741101,7.673639,-0.537662,6.182656,-1.141276,-3.744539,7.070800,-6.188087,5.069796,3.965348,-7.896108,0.435878,-1.250477,-3.343650,1.055290,0.071032,-1.340325,-4.869111,-2.388553,3.800491,-7.174983,8.305928,5.346355,7.080750,-8.064034,4.919599,3.359396,3.927716,2.634170,-6.929156,0.194567,9.648745,-5.360119,6.111761,0.922692,1.759027,-9.521775,-9.836938,-6.153436,-7.863940,-7.694346,6.064012,-1.922982,9.433681,-2.519731,-5.322393,-7.534079,0.768717,4.414282,8.580857,1.122642,-3.777595,4.047615,3.530782,8.063707,5.992322,8.991647,6.701146,1.203428,5.385493,-2.740684,-7.936817,-6.291408,0.502709,-8.521500,-5.881431,9.974825,4.628979,8.074427,-6.147524,-0.633898,-5.422237,-8.836402,1.260716,1.665022,-7.304630,-0.351935,-4.204166,-5.572848,-4.536054,-4.742145,5.736923,2.739852,-6.925791,9.945580,7.117480,-9.647736,-6.019824,-1.145675,2.929319,-3.609687,4.513269,-8.483947,0.993071,-5.352966,3.071370,2.048410,-2.249286,7.440944,8.110067,-3.993547,-5.246354,0.482386,9.444212,-8.894820,6.964025,-1.032847,4.451799,-7.461480,-5.058286,-3.843396,5.665557,-4.405517,-0.831309,-0.305753,-8.040112,1.465766,-0.156845,4.612335,-2.650801,-0.030731,6.607480,-5.115799,1.181771,8.019271,2.823708,5.690088,3.109215,5.576594,4.476119,-3.626112,-8.472077,-8.090221,-5.925965,-8.111684,4.862418,-4.057349,-6.702080,1.003225,9.151857,6.850434,-2.012757,8.369765,-5.176548,7.292830,-8.861129,8.606226,6.412831,1.401687,-0.267569,-0.011765,-4.079790,-6.119945,-6.149346,-7.610905,-4.909343,-7.705252,-6.394069,3.428638,-1.531056,-6.131887,-4.837196,8.588799,2.733943,8.266138,7.547169,0.330821,-7.729310,-6.240401,0.378977,-2.953401,-7.722078,-7.471720,-9.249566,0.023174,7.627596,1.168552,7.277615,7.178930,-7.024368,-2.200006,6.616225,1.490151,4.106635,-0.877976,2.971813,9.804243,2.341457,-8.982305,7.931651,9.765304,-6.124217,-3.916609,2.608550,-5.730970,-9.238224,6.468992,9.782840,6.352669,-3.548048,2.278345,-0.150728,6.215728,5.822517,6.983662,6.131771,0.707887,0.831379,-4.391896,7.416046,-6.104511,6.770579,5.495212,7.152642,-5.041134,-9.004653,9.805682,-4.404330,6.097973,-7.570506,-3.241579,8.640096,3.442458,6.899575,4.416312,2.255738,-2.349275,-3.905936,6.594275,-4.743307,7.476668,2.530241,9.479625,-3.840756,0.329047,9.614898,-0.394123,6.801282,6.182518,5.787264,-6.221199,5.974771,-5.811624,-6.266647,3.573703,0.174845,-5.431551,2.703388,-6.086830,-9.851874,-5.838770,3.980258,-0.295391,3.477247,0.309570,-1.347216,9.079248,-2.817381,1.947483,2.419712,1.151767,-9.705783,3.521242,7.145718,2.115415,-7.126598,5.780966,-3.988024,-5.775837,4.997169,2.955569,6.867805,8.842571,-3.571772,3.149147,4.057194,-0.914951,-9.858578,1.319895,3.773087,1.094687,2.583500,9.103017,-3.327787,2.499931,5.827109,3.101351,8.150984,-4.400140,-7.950690,9.483734,-8.126200,3.429389,2.365655,-9.760246,6.138125,-1.393726,-9.141358,-4.478742,-3.142416,-6.977474,-0.328564,-5.054808,4.894645,7.341884,-4.710747,7.927435,-3.784840,0.201165,-4.304406,-8.631364,6.079044,-6.447280,-6.564458,-2.226038,-1.383764,-1.827782,8.803607,-8.692901,4.122496,-2.404466,-1.416195,-1.966603,-4.575467,-7.845000,1.192461,-0.772990,-2.648820,-0.813686,5.828131,4.918294,-8.837497,8.862367,-5.330859,-3.977356,5.788481,-0.560353,-4.816381,7.293400,-5.763284,0.444682,-4.073818,6.440304,-2.054488,-5.877944,-4.713945,0.450721,7.764906,-2.155983,-1.120025,-9.013422,9.785721,6.033420,9.240396,-8.190390,6.725706,-6.063309,2.959214,-0.055215,2.185115,-0.796450,-0.328860,-4.166635,-9.091670,7.191913,0.308403,-0.838560,-1.399871,4.841246,-5.956529,-3.884229,3.179689,-9.037295,-4.754238,8.917021,8.536845,2.949574,4.030673,2.394150,0.944337,2.270994,-1.593684,5.816221,7.722709,5.385832,6.185520,4.048406,-5.334981,9.753031,-7.267899,-2.598743,-1.906389,0.140914,-4.374532,3.058982,-3.749760,-4.182860,3.515320,3.742988,-2.900840,-8.223366,-2.370965,3.518284,1.817820,9.233109,1.240445,5.309346,-2.214718,6.551156,-4.167966,-6.649537,7.186084,2.278851,-3.370376,-3.787243,9.706784,-8.137071,-4.321283,-5.269218,9.548581,-5.737349,-3.304016,-4.709984,-6.232776,0.827163,5.782117,3.619575,-0.406987,6.161968,-9.325784,-0.353243,-1.495867,4.316685,-8.848017,8.347749,-3.501806,-1.535250,6.540764,4.676551,-5.563059,-6.754454,-8.029217,9.041437,1.058509,6.646788,-0.586386,5.791966,2.538001,1.580311,9.358191,7.823505,-6.160580,-1.583318,-8.728103,-7.808917,-5.350311,-1.854309,-8.491622,2.731770,-5.476630,7.587363,-5.032654,-9.338049,-4.162011,7.294313,-3.782370,9.492615,-2.806201,-6.447873,2.279717,-8.035432,-0.774391,-2.960343,-8.104457,-7.846221,-7.454675,1.442133,-0.628634,-9.788373,9.864252,-9.348387,-7.028351,7.345044,1.024874,-4.278251,-9.521158,-4.798783,9.074541,0.862281,5.773028,7.415056,-2.356742,-6.257108,-5.035670,9.827121,8.578383,6.250607,1.557097,-4.266526,-2.808738,8.760642,8.539669,2.142807,-6.493372,-1.807675,-1.957371,4.651581,-6.697264,-8.867844,2.941513,4.265831,4.584593,-6.208951,0.645250,-9.680119,9.257461,-5.457750,8.289636,-0.822120,-1.662424,2.090631,-8.842138,5.790325,8.632447,4.536008,3.862341,8.188995,3.742527,7.123956,-5.108152,-9.725067,9.445467,9.702514,1.429159,-9.466548,-5.527998,-2.503224,5.930542,-1.955027,4.698301,1.826266,-8.998478,-1.308148,-2.038244,-2.267788,4.338181,3.609366,6.247232,0.633173,-6.066175,-3.105087,-2.517748,0.640671,7.357721,-9.061763,4.253322,1.989150,-4.510110,7.299656,-1.213837,8.316168,-0.369251,-2.888419,8.547696,-9.872936,-3.467492,4.260079,-0.528387,-7.226563,-9.095766,-5.705892,-7.625190,0.675900,5.681071,8.623665,-0.865572,6.108729,1.261118,-3.010167,-2.793617,-0.352694,7.218932,5.619445,-8.437206,0.439543,-3.317338,-7.103030,-6.151118,5.462020,-5.676882,9.505797,4.199066,-9.677623,-6.231266,-5.209018,3.454371,3.620110,-5.094380,-7.158617,-7.482423,3.769329,-1.908094,0.674512,3.176852,-0.999408,-0.421094,-9.289090,0.897631,-8.252166,3.884225,-1.972314,-3.589545,2.762577,-1.039088,5.428021,-9.818736,1.272129,9.248754,6.310088,9.345940,-2.870572,9.754073,2.951772,3.082006,-7.409711,-8.157962,-4.213954,8.545694,8.486733,9.526115,-4.852898,2.830326,-4.934319,2.043921,6.950990,-6.808866,-3.430274,-4.695281,-0.610509,6.368516,-4.849702,2.573627,-6.896360,3.177923,-6.869223,4.617016,-6.009679,-2.273451,8.723348,-9.576172,-4.334904,-2.340141,-6.461646,-8.327800,0.565120,3.848514,-6.286120,-6.661693,2.075518,-0.384588,-6.449878,1.337937,3.706890,-5.619562,0.877205,7.666337,2.475559,-4.792842,5.230001,-9.017752,-8.271407,-2.664111,-9.355448,-8.222918,-3.859069,5.711369,-0.051936,2.079891,-8.998255,-8.356850,-2.681037,0.868549,3.334968,1.485887,-0.760300,7.712524,-3.710531,6.575436,-2.976597,-5.852932,7.259518,-4.264576,-1.929856,4.032877,2.633701,-4.004755,7.791514,4.367318,4.521451,3.669452,-2.339761,3.008822,7.225608,4.232561,-7.396501,-5.709053,8.673568,8.348870,4.640544,-9.818375,-6.212899,-0.540417,-7.819903,-0.254300,9.596723,9.288896,6.007677,-9.790806,-4.219798,-8.181227,4.382254,-0.059949,4.813441,2.063751,-5.767771,9.448975,-5.900926,-2.518177,9.121211,9.037560,8.441695,-7.948570,6.181525,7.000830,-5.792465], dtype = "float64")#candidate|2750|(2184,)|const|float64
call_2748 = relay.TupleGetItem(func_1447_call(relay.reshape(const_2749.astype('float64'), []), relay.reshape(const_2750.astype('float64'), [2184, 1]), ), 1)
call_2751 = relay.TupleGetItem(func_1451_call(relay.reshape(const_2749.astype('float64'), []), relay.reshape(const_2750.astype('float64'), [2184, 1]), ), 1)
output = relay.Tuple([uop_2728,bop_2734,call_2738,call_2748,const_2749,const_2750,])
output2 = relay.Tuple([uop_2730,bop_2737,call_2739,call_2751,const_2749,const_2750,])
func_2752 = relay.Function([], output)
mod['func_2752'] = func_2752
mod = relay.transform.InferType()(mod)
output = func_2752()
func_2753 = relay.Function([], output)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2791 = relay.const([[[8,-9],[-5,-2],[3,1],[-1,4],[4,9],[-7,3],[9,-2],[10,-4]],[[-8,-1],[-9,7],[6,-3],[-10,-5],[3,8],[-8,-3],[2,4],[7,-10]],[[-3,7],[7,-4],[-4,2],[-6,-10],[2,-8],[10,9],[-7,4],[3,9]],[[9,9],[-2,9],[-4,9],[7,-10],[9,1],[-9,1],[-3,10],[-9,3]],[[-6,3],[7,-1],[-10,-10],[2,-8],[-8,-8],[9,-3],[-4,-10],[5,-2]],[[8,-7],[5,6],[10,4],[8,1],[-3,2],[-10,-6],[-1,9],[2,5]]], dtype = "int32")#candidate|2791|(6, 8, 2)|const|int32
var_2792 = relay.var("var_2792", dtype = "int32", shape = (6, 8, 2))#candidate|2792|(6, 8, 2)|var|int32
bop_2793 = relay.bitwise_or(const_2791.astype('int32'), relay.reshape(var_2792.astype('int32'), relay.shape_of(const_2791))) # shape=(6, 8, 2)
bop_2796 = relay.not_equal(const_2791.astype('bool'), relay.reshape(var_2792.astype('bool'), relay.shape_of(const_2791))) # shape=(6, 8, 2)
func_1666_call = mod.get_global_var('func_1666')
func_1667_call = mutated_mod.get_global_var('func_1667')
call_2799 = relay.TupleGetItem(func_1666_call(), 0)
call_2800 = relay.TupleGetItem(func_1667_call(), 0)
bop_2809 = relay.bitwise_and(bop_2796.astype('int64'), relay.reshape(var_2792.astype('int64'), relay.shape_of(bop_2796))) # shape=(6, 8, 2)
func_940_call = mod.get_global_var('func_940')
func_941_call = mutated_mod.get_global_var('func_941')
call_2815 = relay.TupleGetItem(func_940_call(), 1)
call_2816 = relay.TupleGetItem(func_941_call(), 1)
bop_2817 = relay.less_equal(var_2792.astype('bool'), relay.reshape(const_2791.astype('bool'), relay.shape_of(var_2792))) # shape=(6, 8, 2)
output = relay.Tuple([bop_2793,call_2799,bop_2809,call_2815,bop_2817,])
output2 = relay.Tuple([bop_2793,call_2800,bop_2809,call_2816,bop_2817,])
func_2822 = relay.Function([var_2792,], output)
mod['func_2822'] = func_2822
mod = relay.transform.InferType()(mod)
var_2823 = relay.var("var_2823", dtype = "int32", shape = (6, 8, 2))#candidate|2823|(6, 8, 2)|var|int32
output = func_2822(var_2823)
func_2824 = relay.Function([var_2823], output)
mutated_mod['func_2824'] = func_2824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_61_call = mod.get_global_var('func_61')
func_63_call = mutated_mod.get_global_var('func_63')
call_2879 = func_61_call()
call_2880 = func_61_call()
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_2896 = relay.TupleGetItem(func_2752_call(), 3)
call_2897 = relay.TupleGetItem(func_2753_call(), 3)
output = relay.Tuple([call_2879,call_2896,])
output2 = relay.Tuple([call_2880,call_2897,])
func_2908 = relay.Function([], output)
mod['func_2908'] = func_2908
mod = relay.transform.InferType()(mod)
mutated_mod['func_2908'] = func_2908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2908_call = mutated_mod.get_global_var('func_2908')
call_2909 = func_2908_call()
output = call_2909
func_2910 = relay.Function([], output)
mutated_mod['func_2910'] = func_2910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2908_call = mod.get_global_var('func_2908')
func_2910_call = mutated_mod.get_global_var('func_2910')
call_2913 = relay.TupleGetItem(func_2908_call(), 0)
call_2914 = relay.TupleGetItem(func_2910_call(), 0)
output = call_2913
output2 = call_2914
func_2927 = relay.Function([], output)
mod['func_2927'] = func_2927
mod = relay.transform.InferType()(mod)
mutated_mod['func_2927'] = func_2927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2927_call = mutated_mod.get_global_var('func_2927')
call_2928 = func_2927_call()
output = call_2928
func_2929 = relay.Function([], output)
mutated_mod['func_2929'] = func_2929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2933 = relay.var("var_2933", dtype = "float64", shape = (7, 6, 1))#candidate|2933|(7, 6, 1)|var|float64
uop_2934 = relay.cos(var_2933.astype('float64')) # shape=(7, 6, 1)
output = uop_2934
output2 = uop_2934
func_2937 = relay.Function([var_2933,], output)
mod['func_2937'] = func_2937
mod = relay.transform.InferType()(mod)
mutated_mod['func_2937'] = func_2937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2938 = relay.var("var_2938", dtype = "float64", shape = (7, 6, 1))#candidate|2938|(7, 6, 1)|var|float64
func_2937_call = mutated_mod.get_global_var('func_2937')
call_2939 = func_2937_call(var_2938)
output = call_2939
func_2940 = relay.Function([var_2938], output)
mutated_mod['func_2940'] = func_2940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
call_2997 = func_2113_call()
call_2998 = func_2113_call()
func_288_call = mod.get_global_var('func_288')
func_289_call = mutated_mod.get_global_var('func_289')
call_3030 = relay.TupleGetItem(func_288_call(), 0)
call_3031 = relay.TupleGetItem(func_289_call(), 0)
output = relay.Tuple([call_2997,call_3030,])
output2 = relay.Tuple([call_2998,call_3031,])
func_3032 = relay.Function([], output)
mod['func_3032'] = func_3032
mod = relay.transform.InferType()(mod)
mutated_mod['func_3032'] = func_3032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3032_call = mutated_mod.get_global_var('func_3032')
call_3033 = func_3032_call()
output = call_3033
func_3034 = relay.Function([], output)
mutated_mod['func_3034'] = func_3034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_3058 = func_1504_call()
call_3059 = func_1504_call()
output = call_3058
output2 = call_3059
func_3060 = relay.Function([], output)
mod['func_3060'] = func_3060
mod = relay.transform.InferType()(mod)
output = func_3060()
func_3061 = relay.Function([], output)
mutated_mod['func_3061'] = func_3061
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3097 = relay.const([[[-5,7,-10,-3,-10,-3,9,5,5,-5,-6,1,-3,-10,5,-2],[-6,-6,6,5,8,-2,-7,6,-8,4,-5,6,6,-10,-4,3],[1,-6,-1,-2,6,-5,-2,9,-10,-4,10,5,-7,-6,7,-9],[-1,7,4,2,-5,7,5,-7,-8,10,-2,1,9,-8,-9,7],[4,5,-5,-9,1,10,-3,1,-10,9,-3,9,10,-8,-6,2],[-1,7,-3,8,6,9,7,-1,8,-6,2,5,-5,-4,8,-3],[2,-4,-10,-8,2,-4,-7,3,6,-8,-7,10,-8,4,-10,-4],[9,-9,2,-5,-7,3,-5,9,6,-8,2,4,4,-5,-7,9],[1,-4,7,9,-10,8,-9,-5,-8,-9,-2,-10,10,-3,8,-4],[-3,-4,-8,6,5,3,3,-2,-2,-9,3,3,9,-2,-1,6],[5,-4,-2,2,2,-3,3,4,-6,2,-6,-3,-2,-4,1,4],[-9,-8,-9,-10,6,-6,9,-4,6,-2,-10,7,-2,-6,-10,-9]],[[-1,2,7,-10,7,2,7,1,-10,4,-10,4,4,4,-2,-7],[-2,-10,-2,2,6,5,9,-5,-1,-1,-3,-4,6,-5,1,-1],[2,1,-4,5,-8,3,6,-8,-10,7,-5,2,-9,2,-10,2],[-6,8,-8,10,-1,3,5,-4,10,8,-2,-9,-9,10,3,3],[-7,-1,-2,-2,6,-4,-7,-3,2,4,-4,-5,-3,-4,9,8],[-8,2,10,5,-9,6,-9,-3,-2,5,10,-1,-4,-1,-2,-2],[10,10,-8,-7,-6,-5,3,6,-6,3,8,1,9,-9,-3,-1],[5,-4,-10,1,3,1,-5,3,-7,-7,10,-8,-10,-2,-8,-7],[-6,-9,3,2,-8,-3,-1,4,3,-2,-9,-2,7,-5,6,-1],[4,-1,-10,4,10,-10,-4,-7,-6,-9,-1,-8,-2,-5,-5,-5],[6,8,10,3,1,-1,8,3,-8,10,1,8,-1,6,-1,8],[6,3,-8,-8,-2,6,-8,3,-9,-5,-3,6,8,-1,-2,6]]], dtype = "uint16")#candidate|3097|(2, 12, 16)|const|uint16
const_3098 = relay.const([[[1,-4,2,1,10,-10,5,-8,1,2,-6,-4,8,-9,3,2],[4,2,-9,8,4,-10,3,-7,10,2,6,-7,1,1,-4,7],[-8,-3,-3,-8,1,7,-6,10,6,1,9,-4,-4,6,7,-7],[4,4,5,6,8,9,8,9,3,-5,10,7,-6,3,6,-10],[1,8,6,1,-9,-9,10,-2,1,-7,9,-4,-7,-10,-8,1],[-6,7,-5,9,9,-3,-7,-3,-2,-9,4,-6,2,-4,-6,-4],[-6,-6,9,6,-3,-8,4,9,4,7,-1,9,-8,-6,9,-7],[-8,9,8,7,6,2,-7,-10,-8,8,-9,-3,-1,-1,6,9],[-3,-5,-4,2,8,-4,4,-5,-10,-4,-2,-7,-5,-7,-8,-8],[3,-2,6,10,8,10,-7,-6,7,-9,-6,-4,-7,-3,7,6],[7,-8,-1,-8,4,1,-10,-10,7,-8,6,-4,-4,7,-10,-1],[2,9,-10,2,-4,7,10,-3,-7,-9,-6,7,2,3,-7,-1]],[[6,4,-9,-9,-9,-7,6,-5,-2,7,7,-9,-7,3,7,-5],[-5,8,-5,-7,5,-3,-3,-3,3,2,-5,-9,1,6,-7,2],[2,-6,-9,1,-4,-7,5,1,-4,-5,3,-9,9,4,-8,8],[6,-9,4,3,6,-6,-3,-6,1,4,-9,-10,-10,-2,3,-10],[-3,-6,-9,-8,2,-6,2,-10,7,-7,-6,-3,-1,7,-7,5],[-6,-1,-1,-3,-3,-5,-3,6,-10,-4,-9,-5,6,-6,-8,4],[-1,2,4,-4,4,-1,-6,-7,-1,-5,10,5,-1,-8,2,-5],[-1,-7,-2,-3,2,-5,3,7,3,-6,-1,8,2,10,-1,6],[-2,6,-4,2,3,6,-7,9,6,-2,6,6,-5,-1,1,-6],[-2,9,-1,4,8,7,-5,-7,4,8,7,-8,-2,9,-10,-8],[-9,-10,8,2,4,-5,-8,7,-2,-1,-9,-3,10,4,-9,4],[-9,-8,-6,5,10,8,2,7,2,-3,7,-2,10,-10,-10,6]]], dtype = "uint16")#candidate|3098|(2, 12, 16)|const|uint16
bop_3099 = relay.multiply(const_3097.astype('uint16'), relay.reshape(const_3098.astype('uint16'), relay.shape_of(const_3097))) # shape=(2, 12, 16)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_3109 = relay.TupleGetItem(func_1229_call(), 0)
call_3110 = relay.TupleGetItem(func_1231_call(), 0)
bop_3114 = relay.greater(const_3098.astype('bool'), relay.reshape(const_3097.astype('bool'), relay.shape_of(const_3098))) # shape=(2, 12, 16)
uop_3123 = relay.sinh(bop_3099.astype('float64')) # shape=(2, 12, 16)
func_772_call = mod.get_global_var('func_772')
func_776_call = mutated_mod.get_global_var('func_776')
var_3139 = relay.var("var_3139", dtype = "int64", shape = (448,))#candidate|3139|(448,)|var|int64
const_3140 = relay.const([2,-10,8,6,4,8,-7,8,-7,-3,3,-7,-5,-6,-8,4,4,-10,9,2,5,-9,-2,-10,7,7,7,-6,5,-7,-3,-4,2,9,-8,-9,2,-5,2,-5,-1,10,6,-10,10,-5,-6,-9,-3,-4,-1,3,-8,10,-4,-10,7,2,-7,-8,8,9,-2,-6,9,5,-2,3,-7,-1,-8,-5,-4,2,-7,-8,6,3,-8,-3,9,-8,4,-3,6,1,7,-1,-3,2,-5,-9,2,9,8,-8,7,10,-9,4,8,-7,3,8,3,10,-2,9,8,5,-7,5,-9,7,9,-1,-9,2,8,-10,9,9,8,7,-5,1,3,7,-2,-10,-8,-8,1,2,9,10,-3,-1,-8,-6,9,4,5,6,6,10,6,2,9,7,-8,-8,-10,10,7,1,-3,-10,6,8,3,-7,-6,-8,-5,-5,-4,1,-1,-1,7,6,7,-10,1,9,8,3,-7,10,-6,2,-7,-3,6,-7,-6,-6,-9,9,6,4,-4,-9,7,-10,4,4,-6,10,-1,-8,-1,9,1,-10,6,3,10,-8,1,2,9,-9,-1,1,-7,8,-1,6,4,3,9,-7,-7,-7,-2,-8,-3,10,-5,7,-7,-9,-1,-4,-2,-7,2,9,-1,-10,5,6,2,-3,4,-10,-6,-1,6,4,-10,-1,6,-2,8,10,9,-1,-1,-1,-6,-5,-1,-9,-2,7,5,6,9,8,1,3,3,2,-10,-8,3,-1,2,3,7,9,7,-3,5,-6,-7,-8,-4,-4,-5,-3,8,5,5,5,8,-2,-9,-3,-6,1,-9,6,1,-8,-6,7,4,-5,9,-1,-6,-4,-7,1,8,-9,-3,4,6,-2,-2,6,2,7,3,-10,10,-6,-1,-10,-9,9,5,5,5,6,10,-7,5,-6,1,-9,-10,-8,10,-3,1,10,-7,-7,-4,-4,-5,7,-5,8,10,7,-2,4,-6,-10,1,3,7,-2,3,7,7,9,10,-7,7,-10,-2,-1,-1,5,5,2,8,-4,10,-2,-9,6,-10,-8,9,-6,-4,9,-1,1,-2,7,7,-4,5,3,-7,-3,-3,4,3,-5,8,-4,10,-3,8,-4,-3,3,2,-2,-4,8,8,-1,5,-7,10,1,9,-2,-6,-6,-3,-7,-5,-8,5,-6,9,3,-3,-6,-6,-5,-3,-3,-5,7,8,-7,-4,1,10,-2,7,4,8,7,6,-8,-10,7,-2,3,10,-4,-4,6,4,-4,5,-3,5,8,1,-2,1,-6,6,4,1,2,4,-1,8,-9,1,-8,1,2,4,-3,-5,-7,-2,9,-10,1,1,-2,5,-1,-3,-7,-3,-6,-2,1,2,8,-10,9,10,-5,2,-9,9,5,9,8,-10,-10,-5,-8,8,1,5,-7,2,7,9,10,7,2,9,7,-4,2,7,-6,-7,10,-9,-8,-1,4,10,10,1,-3,-3,10,7,-7,-3,9,2,-4,8,-1,-5,-9,-8,2,10,-10,6,-10,-3,7,-4,7,-8,8,-1,5,5,-2,-2,4,2,6,-5,2,5,-5,-6,6,3,9,4,-1,9,-2,10,6,-10,-9,-9,5,10,5,-2,1,-3,-1,-8,6,8,10,-5,-9,9,2,-10,-1,8,-8,7,8,-4,8,1,-9,3,-6,-6,-3,-4,-2,-3,5,-9,4,4,5,-10,8,-9,2,-6,10,5,4,10,2,-9,7,-9,5,4,9,-4,-7,4,5,-10,-2,8,-2,4,-4,-10,2,-3,-3,10,10,9,-7,9,-4,6,-1,4,3,-9,10,7,1,2,6,7,5,3,2,-3,10,2,4,-7,1,-1,7,6,7,-3,-9,-8,8,-6,3,7,-9,-5,3,9,7,-7,-7,2,1,6,10,2,-3,-8,-10,-10,-4,-3,6,-2,-1,7,4,-1,-9,-4,-8,6,-7,-10,1,-7,6,3,1,6,6,9,7,4,-4,4,7,7,-6,10,-8], dtype = "uint8")#candidate|3140|(750,)|const|uint8
call_3138 = relay.TupleGetItem(func_772_call(relay.reshape(var_3139.astype('int64'), [4, 14, 8]), relay.reshape(var_3139.astype('int64'), [4, 14, 8]), relay.reshape(const_3140.astype('uint8'), [1, 750]), ), 6)
call_3141 = relay.TupleGetItem(func_776_call(relay.reshape(var_3139.astype('int64'), [4, 14, 8]), relay.reshape(var_3139.astype('int64'), [4, 14, 8]), relay.reshape(const_3140.astype('uint8'), [1, 750]), ), 6)
output = relay.Tuple([call_3109,bop_3114,uop_3123,call_3138,var_3139,const_3140,])
output2 = relay.Tuple([call_3110,bop_3114,uop_3123,call_3141,var_3139,const_3140,])
func_3142 = relay.Function([var_3139,], output)
mod['func_3142'] = func_3142
mod = relay.transform.InferType()(mod)
mutated_mod['func_3142'] = func_3142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3143 = relay.var("var_3143", dtype = "int64", shape = (448,))#candidate|3143|(448,)|var|int64
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3144 = func_3142_call(var_3143)
output = call_3144
func_3145 = relay.Function([var_3143], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1640_call = mutated_mod.get_global_var('func_1640')
call_3158 = relay.TupleGetItem(func_1639_call(), 0)
call_3159 = relay.TupleGetItem(func_1640_call(), 0)
func_1149_call = mod.get_global_var('func_1149')
func_1151_call = mutated_mod.get_global_var('func_1151')
call_3167 = relay.TupleGetItem(func_1149_call(), 0)
call_3168 = relay.TupleGetItem(func_1151_call(), 0)
output = relay.Tuple([call_3158,call_3167,])
output2 = relay.Tuple([call_3159,call_3168,])
func_3170 = relay.Function([], output)
mod['func_3170'] = func_3170
mod = relay.transform.InferType()(mod)
mutated_mod['func_3170'] = func_3170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mutated_mod.get_global_var('func_3170')
call_3171 = func_3170_call()
output = call_3171
func_3172 = relay.Function([], output)
mutated_mod['func_3172'] = func_3172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mod.get_global_var('func_415')
func_417_call = mutated_mod.get_global_var('func_417')
call_3208 = func_415_call()
call_3209 = func_415_call()
uop_3212 = relay.exp(call_3208.astype('float32')) # shape=(3, 9, 3)
uop_3214 = relay.exp(call_3209.astype('float32')) # shape=(3, 9, 3)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_3228 = relay.TupleGetItem(func_1197_call(), 1)
call_3229 = relay.TupleGetItem(func_1198_call(), 1)
func_3060_call = mod.get_global_var('func_3060')
func_3061_call = mutated_mod.get_global_var('func_3061')
call_3237 = func_3060_call()
call_3238 = func_3060_call()
output = relay.Tuple([uop_3212,call_3228,call_3237,])
output2 = relay.Tuple([uop_3214,call_3229,call_3238,])
func_3249 = relay.Function([], output)
mod['func_3249'] = func_3249
mod = relay.transform.InferType()(mod)
output = func_3249()
func_3250 = relay.Function([], output)
mutated_mod['func_3250'] = func_3250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mod.get_global_var('func_415')
func_417_call = mutated_mod.get_global_var('func_417')
call_3251 = func_415_call()
call_3252 = func_415_call()
var_3254 = relay.var("var_3254", dtype = "float64", shape = (3, 9, 3))#candidate|3254|(3, 9, 3)|var|float64
bop_3255 = relay.mod(call_3251.astype('float32'), relay.reshape(var_3254.astype('float32'), relay.shape_of(call_3251))) # shape=(3, 9, 3)
bop_3258 = relay.mod(call_3252.astype('float32'), relay.reshape(var_3254.astype('float32'), relay.shape_of(call_3252))) # shape=(3, 9, 3)
bop_3264 = relay.add(var_3254.astype('uint8'), relay.reshape(call_3251.astype('uint8'), relay.shape_of(var_3254))) # shape=(3, 9, 3)
bop_3267 = relay.add(var_3254.astype('uint8'), relay.reshape(call_3252.astype('uint8'), relay.shape_of(var_3254))) # shape=(3, 9, 3)
uop_3268 = relay.tan(var_3254.astype('float64')) # shape=(3, 9, 3)
output = relay.Tuple([bop_3255,bop_3264,uop_3268,])
output2 = relay.Tuple([bop_3258,bop_3267,uop_3268,])
func_3278 = relay.Function([var_3254,], output)
mod['func_3278'] = func_3278
mod = relay.transform.InferType()(mod)
var_3279 = relay.var("var_3279", dtype = "float64", shape = (3, 9, 3))#candidate|3279|(3, 9, 3)|var|float64
output = func_3278(var_3279)
func_3280 = relay.Function([var_3279], output)
mutated_mod['func_3280'] = func_3280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2307_call = mod.get_global_var('func_2307')
func_2309_call = mutated_mod.get_global_var('func_2309')
call_3319 = func_2307_call()
call_3320 = func_2307_call()
func_2927_call = mod.get_global_var('func_2927')
func_2929_call = mutated_mod.get_global_var('func_2929')
call_3321 = func_2927_call()
call_3322 = func_2927_call()
func_206_call = mod.get_global_var('func_206')
func_207_call = mutated_mod.get_global_var('func_207')
call_3361 = func_206_call()
call_3362 = func_206_call()
output = relay.Tuple([call_3319,call_3321,call_3361,])
output2 = relay.Tuple([call_3320,call_3322,call_3362,])
func_3380 = relay.Function([], output)
mod['func_3380'] = func_3380
mod = relay.transform.InferType()(mod)
mutated_mod['func_3380'] = func_3380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3380_call = mutated_mod.get_global_var('func_3380')
call_3381 = func_3380_call()
output = call_3381
func_3382 = relay.Function([], output)
mutated_mod['func_3382'] = func_3382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2908_call = mod.get_global_var('func_2908')
func_2910_call = mutated_mod.get_global_var('func_2910')
call_3383 = relay.TupleGetItem(func_2908_call(), 0)
call_3384 = relay.TupleGetItem(func_2910_call(), 0)
output = call_3383
output2 = call_3384
func_3388 = relay.Function([], output)
mod['func_3388'] = func_3388
mod = relay.transform.InferType()(mod)
mutated_mod['func_3388'] = func_3388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mutated_mod.get_global_var('func_3388')
call_3389 = func_3388_call()
output = call_3389
func_3390 = relay.Function([], output)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_3427 = func_1115_call()
call_3428 = func_1115_call()
output = call_3427
output2 = call_3428
func_3434 = relay.Function([], output)
mod['func_3434'] = func_3434
mod = relay.transform.InferType()(mod)
mutated_mod['func_3434'] = func_3434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mutated_mod.get_global_var('func_3434')
call_3435 = func_3434_call()
output = call_3435
func_3436 = relay.Function([], output)
mutated_mod['func_3436'] = func_3436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_521_call = mod.get_global_var('func_521')
func_523_call = mutated_mod.get_global_var('func_523')
call_3509 = relay.TupleGetItem(func_521_call(), 0)
call_3510 = relay.TupleGetItem(func_523_call(), 0)
var_3528 = relay.var("var_3528", dtype = "float64", shape = (13, 8, 16))#candidate|3528|(13, 8, 16)|var|float64
bop_3529 = relay.floor_divide(call_3509.astype('float64'), relay.reshape(var_3528.astype('float64'), relay.shape_of(call_3509))) # shape=(13, 8, 16)
bop_3532 = relay.floor_divide(call_3510.astype('float64'), relay.reshape(var_3528.astype('float64'), relay.shape_of(call_3510))) # shape=(13, 8, 16)
func_856_call = mod.get_global_var('func_856')
func_857_call = mutated_mod.get_global_var('func_857')
call_3540 = relay.TupleGetItem(func_856_call(), 0)
call_3541 = relay.TupleGetItem(func_857_call(), 0)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_3549 = relay.TupleGetItem(func_2161_call(), 1)
call_3550 = relay.TupleGetItem(func_2162_call(), 1)
output = relay.Tuple([bop_3529,call_3540,call_3549,])
output2 = relay.Tuple([bop_3532,call_3541,call_3550,])
func_3554 = relay.Function([var_3528,], output)
mod['func_3554'] = func_3554
mod = relay.transform.InferType()(mod)
mutated_mod['func_3554'] = func_3554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3555 = relay.var("var_3555", dtype = "float64", shape = (13, 8, 16))#candidate|3555|(13, 8, 16)|var|float64
func_3554_call = mutated_mod.get_global_var('func_3554')
call_3556 = func_3554_call(var_3555)
output = call_3556
func_3557 = relay.Function([var_3555], output)
mutated_mod['func_3557'] = func_3557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_3590 = relay.TupleGetItem(func_804_call(), 0)
call_3591 = relay.TupleGetItem(func_806_call(), 0)
output = relay.Tuple([call_3590,])
output2 = relay.Tuple([call_3591,])
func_3607 = relay.Function([], output)
mod['func_3607'] = func_3607
mod = relay.transform.InferType()(mod)
mutated_mod['func_3607'] = func_3607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3607_call = mutated_mod.get_global_var('func_3607')
call_3608 = func_3607_call()
output = call_3608
func_3609 = relay.Function([], output)
mutated_mod['func_3609'] = func_3609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_394_call = mod.get_global_var('func_394')
func_395_call = mutated_mod.get_global_var('func_395')
call_3672 = relay.TupleGetItem(func_394_call(), 0)
call_3673 = relay.TupleGetItem(func_395_call(), 0)
output = relay.Tuple([call_3672,])
output2 = relay.Tuple([call_3673,])
func_3703 = relay.Function([], output)
mod['func_3703'] = func_3703
mod = relay.transform.InferType()(mod)
output = func_3703()
func_3704 = relay.Function([], output)
mutated_mod['func_3704'] = func_3704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3703_call = mod.get_global_var('func_3703')
func_3704_call = mutated_mod.get_global_var('func_3704')
call_3733 = relay.TupleGetItem(func_3703_call(), 0)
call_3734 = relay.TupleGetItem(func_3704_call(), 0)
output = call_3733
output2 = call_3734
func_3737 = relay.Function([], output)
mod['func_3737'] = func_3737
mod = relay.transform.InferType()(mod)
output = func_3737()
func_3738 = relay.Function([], output)
mutated_mod['func_3738'] = func_3738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3741 = relay.var("var_3741", dtype = "float32", shape = (12, 7))#candidate|3741|(12, 7)|var|float32
uop_3742 = relay.acos(var_3741.astype('float32')) # shape=(12, 7)
output = relay.Tuple([uop_3742,])
output2 = relay.Tuple([uop_3742,])
func_3746 = relay.Function([var_3741,], output)
mod['func_3746'] = func_3746
mod = relay.transform.InferType()(mod)
mutated_mod['func_3746'] = func_3746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3747 = relay.var("var_3747", dtype = "float32", shape = (12, 7))#candidate|3747|(12, 7)|var|float32
func_3746_call = mutated_mod.get_global_var('func_3746')
call_3748 = func_3746_call(var_3747)
output = call_3748
func_3749 = relay.Function([var_3747], output)
mutated_mod['func_3749'] = func_3749
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3775 = relay.const([[[3,8,9,-4,-4,-9],[6,-3,6,9,4,-3],[-6,-2,4,-10,-4,-4],[2,-5,5,-9,10,10],[-6,10,-10,3,-7,-4],[-10,9,5,-6,-1,3],[7,-9,-4,4,9,-9],[7,4,6,-5,4,-10],[-7,-6,-9,6,-1,-4],[-5,4,-2,-6,7,-1],[10,9,9,-5,-8,-7],[-9,7,-8,-4,9,1],[-3,10,-7,-2,8,2]],[[-5,-6,-7,-3,5,-6],[-1,8,-10,-3,7,2],[-6,-2,-10,-2,1,-9],[10,-5,-10,-8,3,4],[8,-8,-1,-1,-9,-3],[-7,-5,4,7,5,-9],[-4,7,4,3,-9,6],[-3,8,10,-2,-6,-9],[10,4,-9,10,9,-3],[9,4,-8,7,-9,-5],[6,-8,-4,-3,-5,10],[10,-7,7,4,7,1],[10,9,5,-8,3,3]],[[5,4,3,-3,-5,-1],[-2,8,5,-5,9,4],[-1,-5,10,-4,2,-6],[3,7,2,10,-5,3],[10,-4,-3,-3,1,-9],[-5,-10,4,-1,7,-6],[-10,-3,5,-4,4,-3],[6,-3,5,-10,8,7],[-5,-8,-8,1,1,2],[8,2,-6,2,3,1],[-9,8,10,-9,4,7],[-10,-10,2,8,2,3],[4,-9,3,5,-2,9]],[[-8,9,6,6,6,-6],[9,-8,3,-8,7,4],[-9,1,-3,5,1,-5],[-2,2,6,4,-3,8],[-4,-10,6,-2,-4,8],[7,9,7,-4,5,-7],[-5,10,-5,-3,5,-1],[-9,7,10,-1,9,5],[-5,5,5,3,-4,8],[-1,8,6,10,4,1],[3,9,3,7,2,-8],[-5,9,-5,-1,-9,6],[-8,-3,4,-6,-3,8]],[[-10,-3,-9,1,3,-7],[8,9,-7,-3,1,-9],[7,3,-2,-5,8,-7],[1,2,10,4,-5,5],[10,-9,1,8,-3,9],[2,10,-4,-6,8,10],[-7,-6,-7,-4,-7,8],[1,6,-4,1,-1,-5],[-1,9,-7,5,-1,-6],[-2,-7,-5,8,2,-2],[-1,4,6,-4,-8,-4],[9,-1,-4,3,1,-6],[-9,-2,8,-7,7,-10]],[[1,-9,6,8,-7,-10],[-7,-5,-6,-7,-5,4],[-5,2,-2,-6,-6,-2],[10,-10,8,-6,-4,7],[3,-3,-3,2,9,1],[-8,-4,3,7,-5,-2],[6,2,-2,9,1,6],[10,3,3,1,-4,-6],[-1,2,-9,-1,-4,-6],[-9,2,9,-5,7,8],[-3,-1,-4,-6,9,10],[-2,-4,3,-5,-9,4],[6,-8,-9,-10,9,-1]],[[-8,7,5,-7,2,5],[5,10,8,3,5,-4],[-2,-7,10,2,-5,5],[-8,-6,6,-6,3,5],[1,-5,1,-9,6,2],[5,3,-4,-7,5,-5],[-7,1,8,-1,-6,-3],[6,10,1,-7,5,-6],[2,-3,9,7,-8,5],[-6,5,1,-9,-4,-8],[-10,-1,6,-3,-1,5],[-4,-5,1,-8,-4,-1],[3,-1,-10,9,-5,4]]], dtype = "int8")#candidate|3775|(7, 13, 6)|const|int8
var_3776 = relay.var("var_3776", dtype = "int8", shape = (7, 13, 6))#candidate|3776|(7, 13, 6)|var|int8
bop_3777 = relay.greater(const_3775.astype('bool'), relay.reshape(var_3776.astype('bool'), relay.shape_of(const_3775))) # shape=(7, 13, 6)
uop_3783 = relay.cosh(const_3775.astype('float32')) # shape=(7, 13, 6)
bop_3790 = relay.logical_or(uop_3783.astype('bool'), relay.reshape(const_3775.astype('bool'), relay.shape_of(uop_3783))) # shape=(7, 13, 6)
output = relay.Tuple([bop_3777,bop_3790,])
output2 = relay.Tuple([bop_3777,bop_3790,])
func_3799 = relay.Function([var_3776,], output)
mod['func_3799'] = func_3799
mod = relay.transform.InferType()(mod)
var_3800 = relay.var("var_3800", dtype = "int8", shape = (7, 13, 6))#candidate|3800|(7, 13, 6)|var|int8
output = func_3799(var_3800)
func_3801 = relay.Function([var_3800], output)
mutated_mod['func_3801'] = func_3801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1640_call = mutated_mod.get_global_var('func_1640')
call_3947 = relay.TupleGetItem(func_1639_call(), 0)
call_3948 = relay.TupleGetItem(func_1640_call(), 0)
output = relay.Tuple([call_3947,])
output2 = relay.Tuple([call_3948,])
func_3987 = relay.Function([], output)
mod['func_3987'] = func_3987
mod = relay.transform.InferType()(mod)
mutated_mod['func_3987'] = func_3987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3987_call = mutated_mod.get_global_var('func_3987')
call_3988 = func_3987_call()
output = call_3988
func_3989 = relay.Function([], output)
mutated_mod['func_3989'] = func_3989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4014 = relay.var("var_4014", dtype = "float64", shape = ())#candidate|4014|()|var|float64
const_4015 = relay.const([[[-5.594227,-1.489538,-9.166419,-8.122529,3.526561,3.607331,6.319902,-8.897188,-0.403339,5.219675,-3.619713,-9.641841,-8.660357,9.020945],[8.274935,-8.562642,4.339005,9.725835,-5.783831,-6.654308,9.796954,8.389712,-7.237066,3.180644,2.075073,8.541838,6.782375,5.446321],[0.880927,-7.951624,7.877016,-8.963580,7.516189,-9.490609,7.856424,0.174453,1.941363,9.602862,-0.174576,-8.864837,5.891441,8.516705],[5.459884,-0.129795,6.129016,7.036306,8.413104,-9.687026,0.052819,-2.028798,0.176343,4.791782,-1.961851,-3.256295,3.471849,-3.266895]],[[6.338021,6.880941,-4.282786,0.703229,-3.984511,4.713840,-9.471479,-8.096738,-0.555639,-6.710095,3.753862,-9.580962,7.222717,-3.559372],[2.133862,9.210236,7.879432,2.206082,4.441047,4.909213,2.392955,3.032399,-7.377462,7.877422,1.121193,3.855575,2.276662,-5.917997],[-9.792624,-0.655798,-4.072646,-3.645782,-2.349871,7.051744,-8.982740,-7.594932,7.730511,7.675219,0.457671,5.552603,5.261510,1.424198],[-5.624540,7.602635,4.825821,9.927012,0.660118,0.420727,1.179565,2.295381,5.616604,-5.206038,-2.351447,9.749560,-8.373523,-1.558018]],[[3.791511,3.382477,7.385607,-1.724186,-3.217866,-6.745602,-9.290258,0.630824,0.722667,1.886625,-8.205469,4.841793,-6.228610,5.848713],[6.544669,-3.119012,4.504609,8.843702,-7.170056,8.049043,8.242841,-1.772475,7.637268,5.392210,6.888490,-9.214972,-8.585843,-4.728083],[-0.851442,-6.144077,0.006677,-4.015855,-1.357843,6.042509,1.208507,9.658590,0.187057,-7.256123,1.296231,6.134817,8.076106,8.234055],[2.914694,-9.379804,6.916521,-2.975075,9.313766,6.096951,-7.629581,-0.780598,-7.052641,-7.760538,7.226462,-6.709713,-5.303562,7.104786]],[[6.419022,-0.658131,-7.051327,-9.254016,4.444101,-6.738385,1.515140,-5.606921,8.257382,-8.043257,-2.968809,7.883604,2.780303,-4.679960],[0.313345,3.501757,-3.597774,6.769199,-2.308921,-3.136132,-9.491916,-2.164222,1.563436,8.056264,8.419636,-5.419679,-4.631085,-9.655724],[9.221977,-4.976866,-7.505532,-2.980374,0.885857,-0.837857,0.212396,9.287122,1.260189,-3.608778,-5.538150,9.930013,3.000326,7.852359],[1.223436,1.042453,-2.938949,3.418718,-1.087564,-6.841562,-0.548387,7.058185,8.693326,8.325726,9.361715,4.403823,-4.048640,7.390716]],[[-0.321771,7.234432,-1.918675,6.763696,-9.323487,-6.491799,-2.000438,-9.377798,5.855122,-5.049133,-3.450805,4.392200,5.880503,6.421595],[-6.557943,5.682673,4.226393,-4.609350,-9.538345,3.167323,1.428643,0.985209,-3.787568,-7.883074,9.750371,-5.891937,-7.474285,5.903030],[9.624516,2.439929,-8.457736,-2.128010,-7.099783,5.533940,-4.271930,7.409692,-9.835781,6.287368,7.033403,-6.515739,9.822501,-2.560273],[4.324691,9.552251,2.516347,-6.100295,-3.688770,6.814956,8.830060,7.590324,8.154581,5.295715,4.158677,-9.485690,-5.301036,7.090458]],[[-9.828978,-0.235589,-4.664990,-9.383271,-5.461339,5.865083,2.049198,8.128147,9.898767,5.549073,-9.068997,2.305919,5.753425,-3.992536],[-9.508573,7.292719,5.248521,-9.590975,-8.556566,7.728057,4.385634,6.743192,-3.876677,-2.258154,5.664389,-9.021436,-3.672963,9.874300],[-3.360969,-1.921572,6.861138,4.115971,0.635885,-9.438984,-6.217569,-7.433353,-4.195990,-3.099241,6.045719,1.856419,-5.541554,-7.385424],[0.449632,9.299728,3.788521,-4.510804,8.460476,3.573669,-5.970126,-0.172266,-4.677220,-0.124297,-1.586984,4.153840,6.632837,-4.600217]],[[-6.783523,6.298743,-9.726182,9.486046,-9.674260,5.883169,5.521939,-4.156891,-8.206846,-0.183778,2.666402,-1.593498,-8.758303,7.014022],[-3.310734,7.162816,-1.218779,-8.253872,5.976237,-2.656619,2.695001,-1.957385,0.138214,-3.820638,1.885954,-2.309427,-2.079196,2.774906],[-4.349138,-1.447421,-5.543245,4.651384,-0.884983,-4.242589,-4.809702,9.659678,-2.977540,-1.904771,-1.170052,5.158787,-3.959764,6.102598],[-9.989773,9.776176,2.115920,5.163982,0.627038,2.568576,-6.687734,-4.065740,-9.935529,6.863428,3.302884,-0.225459,-8.391009,0.217035]],[[9.821962,6.530212,3.505207,-6.215554,3.927505,4.176400,5.481938,-6.204688,-6.930877,-6.972345,6.372243,8.813633,0.138068,-8.254690],[3.235346,-6.998170,-7.279571,5.842085,-3.676621,5.680465,3.625999,9.087437,2.270168,3.233741,-4.486447,-3.958029,6.006112,-1.507448],[-0.352343,-0.467664,-6.629486,-8.662233,4.959057,7.700283,-2.043051,6.334121,7.826223,-6.820494,-4.893523,-5.889652,2.832139,-4.021549],[-7.149006,7.459989,-1.843591,-5.317931,4.429052,7.802897,-7.031514,-2.684055,3.559937,9.644614,-4.236561,8.539464,0.194154,2.362005]],[[3.869850,9.730164,-0.957939,-6.895995,-8.936309,-1.771388,3.275421,-7.912594,-1.189517,-2.680775,-7.462303,-3.594565,8.681127,-3.704226],[8.605177,2.050412,1.824557,-4.143427,-0.363173,-4.146846,0.049334,-4.488712,7.811449,5.773644,3.454693,2.398704,2.035858,4.222261],[-1.381635,0.757878,3.896511,-0.897389,5.878831,7.629083,7.783042,-0.846060,-2.189149,5.999292,-3.856469,9.892000,5.564754,6.845562],[-4.473017,0.323410,-6.858615,-5.846925,-5.476456,1.296580,4.496417,0.929119,-2.784142,2.832216,-6.066311,-9.634339,9.805520,-6.814546]],[[1.778926,6.168964,-4.796579,-0.642550,5.956248,6.413418,3.291583,2.917347,2.840491,6.447484,3.135927,-5.453700,1.275604,-5.103221],[-9.053516,3.865802,-1.377746,9.243491,-8.577403,-2.375523,-1.536745,7.500148,-4.267987,-0.600878,8.019959,2.923586,-1.971675,-3.646686],[3.242699,7.822862,0.696612,0.966832,4.551275,0.277113,-7.960838,-9.611155,9.718376,-8.839069,-9.108522,6.050491,-3.272527,-6.190538],[-0.949192,-0.516261,1.112980,8.021940,1.622800,2.329572,3.184569,-4.416831,-4.893912,-6.835649,-9.262042,1.240654,4.764397,-1.791303]],[[0.728872,-6.432734,8.958701,3.181353,-2.789703,9.361533,7.476431,4.759278,3.779810,-2.035980,-4.602567,4.301806,1.364748,3.878147],[9.023850,-4.465415,9.777270,-1.790377,-0.907202,6.559039,-3.286357,-2.248129,6.126819,-8.446721,6.562620,-3.189827,0.945415,-2.946850],[-0.521038,4.169720,5.948507,9.384791,6.476615,3.808532,1.613186,-0.224038,9.192300,-4.907921,-2.612076,-8.957658,6.749228,9.307580],[-8.260776,-2.073348,-5.361701,3.010765,4.549524,-1.080855,-6.298127,-9.511910,-1.829270,-0.309501,0.803790,6.747852,4.993603,1.246131]]], dtype = "float64")#candidate|4015|(11, 4, 14)|const|float64
bop_4016 = relay.minimum(var_4014.astype('float64'), const_4015.astype('float64')) # shape=(11, 4, 14)
output = relay.Tuple([bop_4016,])
output2 = relay.Tuple([bop_4016,])
func_4021 = relay.Function([var_4014,], output)
mod['func_4021'] = func_4021
mod = relay.transform.InferType()(mod)
var_4022 = relay.var("var_4022", dtype = "float64", shape = ())#candidate|4022|()|var|float64
output = func_4021(var_4022)
func_4023 = relay.Function([var_4022], output)
mutated_mod['func_4023'] = func_4023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4045 = relay.var("var_4045", dtype = "uint8", shape = (9, 8, 14))#candidate|4045|(9, 8, 14)|var|uint8
var_4046 = relay.var("var_4046", dtype = "uint8", shape = (9, 8, 14))#candidate|4046|(9, 8, 14)|var|uint8
bop_4047 = relay.bitwise_and(var_4045.astype('uint8'), relay.reshape(var_4046.astype('uint8'), relay.shape_of(var_4045))) # shape=(9, 8, 14)
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_4051 = relay.TupleGetItem(func_3249_call(), 1)
call_4052 = relay.TupleGetItem(func_3250_call(), 1)
var_4053 = relay.var("var_4053", dtype = "uint8", shape = (9, 8, 14))#candidate|4053|(9, 8, 14)|var|uint8
bop_4054 = relay.right_shift(var_4046.astype('int8'), relay.reshape(var_4053.astype('int8'), relay.shape_of(var_4046))) # shape=(9, 8, 14)
output = relay.Tuple([bop_4047,call_4051,bop_4054,])
output2 = relay.Tuple([bop_4047,call_4052,bop_4054,])
func_4062 = relay.Function([var_4045,var_4046,var_4053,], output)
mod['func_4062'] = func_4062
mod = relay.transform.InferType()(mod)
mutated_mod['func_4062'] = func_4062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4062_call = mutated_mod.get_global_var('func_4062')
var_4064 = relay.var("var_4064", dtype = "uint8", shape = (9, 8, 14))#candidate|4064|(9, 8, 14)|var|uint8
var_4065 = relay.var("var_4065", dtype = "uint8", shape = (9, 8, 14))#candidate|4065|(9, 8, 14)|var|uint8
var_4066 = relay.var("var_4066", dtype = "uint8", shape = (9, 8, 14))#candidate|4066|(9, 8, 14)|var|uint8
call_4063 = func_4062_call(var_4064,var_4065,var_4066,)
output = call_4063
func_4067 = relay.Function([var_4064,var_4065,var_4066,], output)
mutated_mod['func_4067'] = func_4067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_4084 = relay.TupleGetItem(func_3249_call(), 1)
call_4085 = relay.TupleGetItem(func_3250_call(), 1)
output = call_4084
output2 = call_4085
func_4090 = relay.Function([], output)
mod['func_4090'] = func_4090
mod = relay.transform.InferType()(mod)
output = func_4090()
func_4091 = relay.Function([], output)
mutated_mod['func_4091'] = func_4091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_4213 = relay.TupleGetItem(func_3249_call(), 1)
call_4214 = relay.TupleGetItem(func_3250_call(), 1)
output = relay.Tuple([call_4213,])
output2 = relay.Tuple([call_4214,])
func_4221 = relay.Function([], output)
mod['func_4221'] = func_4221
mod = relay.transform.InferType()(mod)
mutated_mod['func_4221'] = func_4221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4221_call = mutated_mod.get_global_var('func_4221')
call_4222 = func_4221_call()
output = call_4222
func_4223 = relay.Function([], output)
mutated_mod['func_4223'] = func_4223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1324_call = mod.get_global_var('func_1324')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_4286 = relay.TupleGetItem(func_1324_call(), 3)
call_4287 = relay.TupleGetItem(func_1325_call(), 3)
var_4291 = relay.var("var_4291", dtype = "float64", shape = (7, 10, 9))#candidate|4291|(7, 10, 9)|var|float64
bop_4292 = relay.maximum(call_4286.astype('int8'), relay.reshape(var_4291.astype('int8'), relay.shape_of(call_4286))) # shape=(7, 10, 9)
bop_4295 = relay.maximum(call_4287.astype('int8'), relay.reshape(var_4291.astype('int8'), relay.shape_of(call_4287))) # shape=(7, 10, 9)
func_1639_call = mod.get_global_var('func_1639')
func_1640_call = mutated_mod.get_global_var('func_1640')
call_4298 = relay.TupleGetItem(func_1639_call(), 0)
call_4299 = relay.TupleGetItem(func_1640_call(), 0)
output = relay.Tuple([bop_4292,call_4298,])
output2 = relay.Tuple([bop_4295,call_4299,])
func_4303 = relay.Function([var_4291,], output)
mod['func_4303'] = func_4303
mod = relay.transform.InferType()(mod)
mutated_mod['func_4303'] = func_4303
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4304 = relay.var("var_4304", dtype = "float64", shape = (7, 10, 9))#candidate|4304|(7, 10, 9)|var|float64
func_4303_call = mutated_mod.get_global_var('func_4303')
call_4305 = func_4303_call(var_4304)
output = call_4305
func_4306 = relay.Function([var_4304], output)
mutated_mod['func_4306'] = func_4306
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4430 = relay.var("var_4430", dtype = "bool", shape = ())#candidate|4430|()|var|bool
var_4431 = relay.var("var_4431", dtype = "bool", shape = (12, 9, 9))#candidate|4431|(12, 9, 9)|var|bool
bop_4432 = relay.logical_or(var_4430.astype('bool'), var_4431.astype('bool')) # shape=(12, 9, 9)
bop_4447 = relay.less(bop_4432.astype('bool'), relay.reshape(var_4431.astype('bool'), relay.shape_of(bop_4432))) # shape=(12, 9, 9)
uop_4455 = relay.atan(bop_4432.astype('float64')) # shape=(12, 9, 9)
output = relay.Tuple([bop_4447,uop_4455,])
output2 = relay.Tuple([bop_4447,uop_4455,])
func_4457 = relay.Function([var_4430,var_4431,], output)
mod['func_4457'] = func_4457
mod = relay.transform.InferType()(mod)
mutated_mod['func_4457'] = func_4457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4457_call = mutated_mod.get_global_var('func_4457')
var_4459 = relay.var("var_4459", dtype = "bool", shape = ())#candidate|4459|()|var|bool
var_4460 = relay.var("var_4460", dtype = "bool", shape = (12, 9, 9))#candidate|4460|(12, 9, 9)|var|bool
call_4458 = func_4457_call(var_4459,var_4460,)
output = call_4458
func_4461 = relay.Function([var_4459,var_4460,], output)
mutated_mod['func_4461'] = func_4461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_833_call = mod.get_global_var('func_833')
func_834_call = mutated_mod.get_global_var('func_834')
call_4533 = relay.TupleGetItem(func_833_call(), 0)
call_4534 = relay.TupleGetItem(func_834_call(), 0)
output = call_4533
output2 = call_4534
func_4535 = relay.Function([], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
output = func_4535()
func_4536 = relay.Function([], output)
mutated_mod['func_4536'] = func_4536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_4540 = relay.TupleGetItem(func_2281_call(), 0)
call_4541 = relay.TupleGetItem(func_2283_call(), 0)
uop_4542 = relay.sqrt(call_4540.astype('float32')) # shape=(7, 10, 9)
uop_4544 = relay.sqrt(call_4541.astype('float32')) # shape=(7, 10, 9)
const_4545 = relay.const([[[-6.194701,-3.024341,-1.017699,9.795319,-0.684089,-3.823146,5.061893,-9.933019,-3.843834],[5.474098,5.688690,-2.894238,8.756142,-5.760056,-5.156339,1.723164,0.345586,-0.556560],[-8.646190,1.877482,-2.161896,9.954301,-0.950453,7.930446,8.985740,9.805957,-9.183441],[6.267488,-1.640111,-3.298073,6.257833,5.169780,-6.787386,-7.858911,1.336096,6.566787],[-4.934745,9.396673,-6.267527,4.450580,2.075187,-6.376585,-2.043757,-2.587067,-7.890059],[7.929828,-8.759930,-6.131407,9.596677,4.851956,6.418284,-7.338544,-9.084721,-5.002428],[4.458938,-8.236837,6.867685,-0.510507,-5.220946,-3.035229,-3.191939,9.619411,-5.853043],[8.103048,-3.365114,-9.520164,6.468728,0.271193,6.774914,-6.391162,4.159679,7.198582],[7.238512,-2.833400,-6.869235,-3.786211,0.684136,-9.933337,-6.911286,9.648175,-6.012174],[-0.593647,-3.471037,1.361855,9.862047,-9.527006,-7.046866,0.080468,-8.878469,-3.256263]],[[-8.231104,7.935971,-1.060060,4.076031,7.902026,4.517792,7.284988,6.669275,-0.730396],[1.360485,-9.514039,-1.362247,6.757781,-8.699204,-1.494654,0.549359,-2.942218,-4.854454],[-6.097962,1.562005,-0.947820,3.782744,-2.933606,1.643165,-1.340075,-6.346389,4.853606],[9.439756,7.627386,-6.726396,-1.472834,-8.798131,-8.887801,5.641361,3.993656,-1.766446],[-8.531330,1.995837,-4.041853,8.778455,5.970443,1.030790,-4.235604,2.724360,-3.366700],[2.669127,8.843179,9.447039,-6.327886,-2.688019,5.754755,6.289385,7.011628,-0.005438],[-4.821166,-5.361270,-5.220238,-4.944417,-2.045278,-2.932227,6.323980,-5.847187,9.673032],[-5.525390,-6.133954,8.561173,9.265759,0.897063,1.121069,-3.341146,3.188936,1.291542],[-7.847402,1.066734,-8.517882,6.424416,8.747811,-5.413693,-1.798842,6.420449,-2.707303],[-3.768585,6.827660,-3.991418,-3.123698,-4.278386,6.635897,8.302179,0.435820,-6.405703]],[[-7.380797,1.410605,2.213241,-7.425148,-6.397163,4.779855,7.392353,-3.465786,2.086269],[2.541175,3.468817,-8.257020,-0.660250,-2.550785,-8.044217,6.416963,2.004396,-9.502741],[-4.731112,-2.779166,-6.506835,8.939525,2.208891,3.154301,-3.029440,-5.616334,-1.197963],[-8.097185,-1.264787,6.518452,-6.571955,9.363260,8.930825,-8.213924,8.608653,9.999260],[-4.205584,3.773051,-6.037862,3.550385,7.424324,7.005533,-6.841103,-9.745804,-3.398517],[2.180274,-1.054306,-0.862511,-1.432206,-1.298303,5.612133,-9.180492,-3.409535,-4.383593],[-9.593043,-7.472981,0.579447,5.140875,8.944341,8.623392,7.202834,-0.483911,6.097705],[-2.275989,-6.932370,4.696541,-7.874263,8.851753,5.900767,3.848920,3.276248,-7.504283],[3.835084,-6.858302,3.277297,8.538449,-1.260706,2.732912,-9.979292,-5.496575,-2.749610],[1.117996,4.501498,9.986884,-0.252036,-6.943459,-2.544533,-7.918442,-6.802312,5.700388]],[[-2.406356,6.782013,-6.676428,0.458852,-1.765883,6.544704,2.496289,8.331059,-8.022408],[-2.906635,6.606532,-9.872112,8.094479,-4.622160,-6.579607,8.183291,-4.947207,5.976319],[9.416568,1.831599,-0.582694,-0.341234,5.494246,-7.380303,3.340979,-8.351727,2.736278],[-9.695954,-9.708908,4.284265,-2.116297,2.102903,3.696317,-9.843879,3.071732,-7.124638],[-3.519420,-1.383159,-3.873731,5.236418,9.098282,-7.036847,4.462457,6.945609,3.368196],[-9.967062,9.782006,-7.549326,-9.295394,-9.001860,5.696417,-5.994516,1.360156,1.546666],[7.864402,7.686536,6.794139,-7.530281,1.216860,-8.448111,-7.694721,-5.010385,-7.049341],[-4.928611,4.924295,8.307258,5.058998,9.578552,-5.762841,-3.725909,5.452343,-9.893229],[5.848598,1.060105,-0.101603,-1.173458,-8.700669,-3.504559,3.974494,-6.706836,2.032445],[7.305168,3.352228,-9.149302,-1.981596,9.939712,-5.579542,-1.405544,-0.349347,-4.755445]],[[9.006016,8.371788,-8.245747,-3.101167,-1.693377,-5.459547,-7.852792,-4.012305,-8.117751],[9.131729,1.115094,9.896296,-5.157568,-4.594232,1.408184,0.641405,6.252692,8.723604],[2.015134,3.582340,-7.190528,9.984781,-7.619007,-9.071303,-3.515261,5.486615,-0.915322],[-8.783248,-6.023394,-4.274344,5.579399,-5.132885,-3.071298,-7.655537,0.584731,-0.354949],[-5.514069,1.500324,5.521925,4.617348,9.396825,-8.399435,8.411482,4.105667,6.655493],[-2.947320,3.905786,5.834455,-9.349578,3.621937,4.241599,1.739043,-1.027723,-9.741594],[-0.529521,2.908548,-2.663446,4.855165,-1.079282,3.953427,-6.347626,0.989458,-4.433032],[-6.857997,-3.960093,5.425176,0.915193,6.466978,8.285172,9.962699,-5.203487,5.131680],[-4.666327,-7.369178,0.598540,-4.827295,2.017352,-7.558845,-3.192178,-1.546277,-4.315175],[0.559463,-3.770149,8.747184,-1.662003,1.888794,-7.836110,-1.090110,-8.664376,9.532850]],[[-1.332673,2.065750,7.268981,-3.391065,-6.020800,0.777201,-0.644450,-2.732591,8.220646],[-8.390757,6.872146,-2.910700,-5.341264,-2.362402,-1.487180,6.436407,-4.815453,-9.399429],[-4.146229,1.923773,-4.419181,6.070275,2.221651,3.220717,-8.537192,0.264726,-7.430922],[5.825489,-3.543720,0.769109,2.409293,9.850871,7.353309,-1.677908,-1.376933,2.432197],[-4.061954,3.465485,-7.553165,-1.016197,-8.555425,-3.101046,-2.124178,-4.246674,-4.216823],[5.323246,-3.402221,7.903020,-2.722211,7.591545,3.166842,8.841628,5.701503,-0.042071],[-7.697590,-9.954569,-2.107677,9.144724,-5.347768,4.781975,6.764693,4.268213,0.494344],[0.163980,-5.196462,7.814609,9.151023,4.716708,3.727567,7.304823,-8.909193,6.997119],[-5.440236,8.534294,-9.116374,5.618116,7.073518,5.922531,2.433728,6.158144,8.298712],[-2.707293,7.934442,7.781656,7.980074,-5.496830,6.942812,-6.857385,-1.167088,-1.238482]],[[-2.797466,-6.056473,-2.466266,-7.893598,3.757993,8.028887,-6.943548,8.732947,6.729764],[4.902414,8.311023,7.143577,4.907113,0.599281,8.486101,-1.677693,1.647307,-5.828848],[-3.139728,-1.842128,-5.090437,-0.689551,2.926676,-9.238008,-2.936993,3.599452,-3.070141],[-5.716517,-7.603184,3.189308,-2.453373,2.856885,9.473938,7.854478,-4.866709,4.092828],[-4.415570,-7.380110,8.939084,-1.098244,-2.185014,-6.628553,-7.876335,-4.735706,-4.883913],[3.259578,0.742883,-5.463936,-7.659344,-4.843202,0.955672,3.580378,7.951304,4.249260],[-4.465042,-1.407038,9.579684,3.112863,-5.061095,-0.807286,-1.473747,3.757796,-2.876969],[-4.572978,8.085650,-1.610300,-2.667487,-6.687643,0.005310,-3.047296,-5.859505,-7.261612],[8.480885,7.616552,5.227644,-1.461607,2.367090,5.494144,-3.711731,-1.899769,-2.546964],[-7.426883,-8.583621,-5.433591,7.023431,-8.942459,5.100913,7.877850,-8.154717,-2.972896]]], dtype = "float32")#candidate|4545|(7, 10, 9)|const|float32
bop_4546 = relay.bitwise_xor(uop_4542.astype('uint64'), relay.reshape(const_4545.astype('uint64'), relay.shape_of(uop_4542))) # shape=(7, 10, 9)
bop_4549 = relay.bitwise_xor(uop_4544.astype('uint64'), relay.reshape(const_4545.astype('uint64'), relay.shape_of(uop_4544))) # shape=(7, 10, 9)
uop_4552 = relay.atanh(bop_4546.astype('float64')) # shape=(7, 10, 9)
uop_4554 = relay.atanh(bop_4549.astype('float64')) # shape=(7, 10, 9)
func_1639_call = mod.get_global_var('func_1639')
func_1640_call = mutated_mod.get_global_var('func_1640')
call_4555 = relay.TupleGetItem(func_1639_call(), 0)
call_4556 = relay.TupleGetItem(func_1640_call(), 0)
func_990_call = mod.get_global_var('func_990')
func_991_call = mutated_mod.get_global_var('func_991')
call_4562 = relay.TupleGetItem(func_990_call(), 1)
call_4563 = relay.TupleGetItem(func_991_call(), 1)
func_3060_call = mod.get_global_var('func_3060')
func_3061_call = mutated_mod.get_global_var('func_3061')
call_4573 = func_3060_call()
call_4574 = func_3060_call()
output = relay.Tuple([uop_4552,call_4555,call_4562,call_4573,])
output2 = relay.Tuple([uop_4554,call_4556,call_4563,call_4574,])
func_4585 = relay.Function([], output)
mod['func_4585'] = func_4585
mod = relay.transform.InferType()(mod)
output = func_4585()
func_4586 = relay.Function([], output)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_4589 = func_2469_call()
call_4590 = func_2469_call()
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_4593 = func_3388_call()
call_4594 = func_3388_call()
output = relay.Tuple([call_4589,call_4593,])
output2 = relay.Tuple([call_4590,call_4594,])
func_4596 = relay.Function([], output)
mod['func_4596'] = func_4596
mod = relay.transform.InferType()(mod)
mutated_mod['func_4596'] = func_4596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4596_call = mutated_mod.get_global_var('func_4596')
call_4597 = func_4596_call()
output = call_4597
func_4598 = relay.Function([], output)
mutated_mod['func_4598'] = func_4598
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4599 = relay.const([[[9,-4,10,6,-5,5,1,1,-5,4,-5,-7],[8,3,-9,-9,-10,5,-2,9,5,1,10,-5],[-6,-8,-7,-5,10,-8,-4,9,9,6,-2,-1],[9,-4,3,-7,-10,9,-1,-2,-4,-1,-7,-2],[2,-10,-5,3,4,-6,-9,-5,9,8,-10,-2],[-1,1,-1,4,5,8,-4,5,-10,-4,-5,10],[3,-3,-8,-5,7,-7,-1,2,7,-5,2,-1]],[[-2,-1,-2,-10,-9,-5,-9,8,-8,-4,7,2],[-5,7,8,2,-10,8,6,-8,2,-3,-6,9],[-7,-3,-7,10,-4,1,-4,-2,6,8,-10,8],[-2,5,4,-1,6,-5,9,-7,4,-2,1,-5],[-6,10,1,-9,10,10,9,3,5,8,-7,4],[-3,2,-4,2,1,-5,-9,-5,10,3,5,5],[-7,-4,6,-8,6,-2,8,-8,7,1,-2,6]],[[-10,-1,6,4,9,-10,6,5,-7,-2,-2,-3],[-6,4,9,-9,-9,-3,-8,-10,5,-1,7,4],[-4,8,7,-4,6,-10,-8,-3,1,3,4,-6],[3,-1,3,4,-10,-3,6,9,-5,-8,-1,-1],[-6,2,8,-1,5,-1,7,-8,-10,5,8,1],[-4,6,9,-10,2,4,-1,-2,7,7,-1,-1],[5,10,-2,7,-9,3,-10,2,6,5,3,4]],[[-3,3,7,6,2,5,8,-9,-3,-2,5,9],[1,9,-1,3,-5,7,-10,3,-2,5,-10,-4],[9,8,-1,-7,10,6,8,-3,-6,6,7,10],[-10,7,3,3,-1,-6,-7,-7,-9,-8,2,2],[4,-4,7,-10,10,7,3,3,-10,-6,-4,-3],[6,1,-3,-4,1,9,1,-5,7,4,1,-3],[10,7,2,8,9,6,10,-10,7,9,9,10]],[[-7,5,4,6,-9,10,2,1,-5,5,6,-6],[-5,2,-10,-9,1,-4,3,-8,4,-6,-6,-8],[-4,6,-8,-3,-9,6,-1,8,-10,6,-2,-8],[4,3,-10,1,-5,4,-1,-6,-5,-2,7,8],[-2,-3,-1,-3,4,5,8,-10,2,6,-2,-4],[5,5,5,1,10,-2,-4,7,2,4,9,2],[-9,-5,-3,9,-6,-3,-8,8,8,-10,-8,2]],[[3,9,1,1,4,-2,6,6,-6,3,-3,3],[-5,-6,1,1,6,-4,-5,-9,-3,-5,-2,1],[10,-1,6,-8,6,2,-2,3,-6,4,-4,-8],[2,7,4,2,-1,9,-7,-6,1,-10,2,-10],[10,8,5,-2,9,10,7,-7,5,4,5,2],[-10,8,8,10,1,4,4,-10,-7,-6,2,-3],[-1,6,-8,3,-5,-10,10,10,10,5,4,-8]],[[-8,7,10,-9,-10,-9,7,8,5,-2,-10,8],[10,3,-1,-9,5,-2,-8,6,-8,-8,-8,-7],[-6,2,5,5,3,1,9,6,-6,1,-1,-3],[3,-6,-10,6,1,-2,-7,-4,-5,6,-3,-9],[3,4,-6,-5,-10,10,1,4,3,10,10,-10],[-9,10,1,2,7,7,4,-2,2,-2,7,9],[-1,10,3,8,-6,-5,-8,-10,4,8,-1,10]],[[-2,10,-8,9,-8,-3,-9,-4,-1,-4,7,-4],[3,-8,-6,-2,3,-10,-9,-2,-8,-9,-8,-3],[-3,10,1,2,7,2,8,-2,6,-2,10,3],[1,-6,6,-9,-8,-10,2,5,-9,5,-3,-8],[8,3,6,-8,9,-7,5,3,-5,-2,-4,-8],[-6,-10,-9,-7,10,5,-7,4,-6,10,-7,5],[-7,-10,-6,3,1,-2,-4,7,8,-2,4,-10]],[[5,4,-4,-3,-9,-1,9,-8,7,-1,6,3],[-10,8,10,-6,9,-6,-2,3,10,-6,-8,-1],[4,-4,-2,6,-3,-5,2,8,3,6,1,-5],[-3,-3,-7,6,6,2,10,-9,-2,-5,-8,-8],[7,6,-3,-2,-4,-9,-7,10,6,3,-10,10],[9,-6,10,-7,8,-6,4,7,-1,9,-1,5],[-3,-5,3,4,-1,-8,-4,10,8,-3,4,-2]],[[-6,6,4,-7,10,-1,-9,4,5,3,-8,-3],[10,3,-6,10,-8,1,8,8,-4,-10,3,-5],[9,-2,-2,5,3,-8,3,-2,4,2,3,-9],[-10,-10,-4,-5,-2,10,-4,-7,-3,7,-5,-8],[4,3,1,-2,1,-7,-6,10,9,-3,-4,-1],[7,4,9,-1,1,10,-5,4,6,-3,-4,-2],[2,8,-8,-5,-9,7,1,2,-1,4,5,-2]]], dtype = "int16")#candidate|4599|(10, 7, 12)|const|int16
var_4600 = relay.var("var_4600", dtype = "int16", shape = (10, 7, 12))#candidate|4600|(10, 7, 12)|var|int16
bop_4601 = relay.multiply(const_4599.astype('int16'), relay.reshape(var_4600.astype('int16'), relay.shape_of(const_4599))) # shape=(10, 7, 12)
output = bop_4601
output2 = bop_4601
func_4613 = relay.Function([var_4600,], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
var_4614 = relay.var("var_4614", dtype = "int16", shape = (10, 7, 12))#candidate|4614|(10, 7, 12)|var|int16
output = func_4613(var_4614)
func_4615 = relay.Function([var_4614], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4657 = relay.const([[[-4.108994,6.519601,7.982091,-0.408883,9.799900,9.607378,-9.772203,5.217536,-2.302858,-0.253757,4.363359],[4.956171,-3.675090,9.760000,-4.708519,-3.622626,5.263956,0.578577,9.146368,3.644065,-5.268324,-7.248665],[3.530037,-0.611404,-9.849030,1.862720,7.170522,7.636919,-7.564349,3.059897,5.714314,8.078275,-5.398109],[9.741183,-8.612851,-8.430409,4.813334,6.636872,-7.160810,-0.288769,-9.575608,-9.991134,-3.755363,4.941703],[-7.570551,1.015343,-1.147264,-5.427325,0.399147,-7.217911,-7.776570,1.422350,-5.102316,2.507765,-0.797297],[4.400470,6.681141,-3.074333,-7.205790,-0.980531,8.026192,-2.944283,-4.087159,-0.669877,9.463942,7.065776],[3.632482,5.963883,-3.199357,-1.455290,6.206143,5.470666,-0.935756,-9.335364,-3.613956,8.733215,3.841685],[5.561640,1.671027,6.650383,2.445353,-8.478552,0.678541,-2.618566,-3.777496,-6.882037,-6.547076,-4.693487],[-3.564633,9.506691,7.660194,-0.659126,7.707854,-7.753562,6.488336,6.643046,9.557640,1.585025,4.446901],[-3.525359,-1.804410,4.385244,-5.064595,9.742047,4.651244,3.605966,-2.255538,9.110870,-0.566789,-1.531728],[6.614598,-2.427797,0.996009,-2.988659,2.549250,5.202038,7.029106,-1.866474,-0.115023,-0.913229,6.481568],[3.379955,5.458933,7.412589,-9.972138,8.079620,5.870301,-6.346647,4.613473,3.915404,2.525963,9.129895],[-7.231642,7.099834,1.854371,-5.227868,2.468478,-2.325151,-5.071034,-2.059532,1.293112,-3.120730,9.392297],[-3.795907,4.605199,5.203667,-7.731144,-0.803886,5.621511,6.269450,4.956367,0.651125,9.289099,-0.327017],[8.832609,1.789369,-1.444540,4.030057,-9.124416,9.637132,7.279436,7.429573,5.108042,-0.610851,9.004776],[6.448005,4.192437,6.088358,8.683702,-5.180165,6.872218,1.326774,-8.045535,5.018494,-0.061275,-6.806414]],[[-4.819010,7.342677,0.709767,-9.858192,-6.606628,-9.489361,-2.567202,-1.364715,2.206031,-2.414295,-7.992893],[-1.804480,-7.380262,-0.471420,-0.663637,-0.356748,-7.482959,-7.141199,-4.661945,-7.713428,9.476343,-3.814417],[-3.263605,7.823466,-6.548991,-0.789782,8.350383,9.364336,9.370431,9.092280,-3.478732,-1.852677,5.011627],[9.965107,9.548055,-1.978720,-9.057006,-7.831858,-2.038232,-1.359332,7.205678,2.367919,2.549180,-4.992226],[-0.584206,3.274540,9.101245,3.580170,-3.271129,-6.229710,-4.968832,-5.170562,-7.453230,-6.402370,-1.620063],[8.930843,3.717177,5.770940,7.299888,9.570156,4.006210,-2.610206,-8.177868,0.570298,-3.991464,-1.636053],[1.241490,2.958389,6.475103,-6.256633,-6.423065,2.548226,-7.466921,4.153884,-2.372791,-3.807557,8.210508],[2.512932,-1.240362,-0.807194,-0.716250,-0.520593,-1.465632,6.160202,0.663855,5.568661,1.763394,4.173691],[8.996838,4.656392,-9.553326,3.285596,5.704582,8.275507,-7.608013,-4.992833,2.120925,-9.206412,2.114186],[3.863056,5.286259,-6.233049,-3.157696,-5.499941,-1.902704,4.039226,9.567993,-3.905160,5.839228,9.007705],[-5.413595,3.698845,-8.072495,2.859775,7.321136,-1.260597,2.251940,-9.412752,-9.254631,-2.285502,-6.185145],[7.789229,-4.919207,-4.742948,-3.091227,0.849505,-9.082143,-0.928355,-7.052707,-6.693451,-4.216613,-7.395029],[9.299563,3.132587,-2.908550,1.083631,-3.749150,-5.328528,-8.760279,-0.536000,-6.496680,5.146393,-3.055708],[5.433465,2.638814,5.247210,-2.274145,-3.023532,-6.318611,-0.680208,0.230098,0.240211,-9.739629,-3.812693],[0.040886,2.614121,8.861195,-0.645565,-2.644923,-2.066141,7.187023,-2.741312,-6.567252,4.563564,-5.448670],[4.496085,8.848360,6.049791,-4.596885,4.417754,6.338582,-5.725094,7.002872,-9.079176,-6.342038,-2.054586]]], dtype = "float32")#candidate|4657|(2, 16, 11)|const|float32
var_4658 = relay.var("var_4658", dtype = "float32", shape = (2, 16, 11))#candidate|4658|(2, 16, 11)|var|float32
bop_4659 = relay.floor_divide(const_4657.astype('float32'), relay.reshape(var_4658.astype('float32'), relay.shape_of(const_4657))) # shape=(2, 16, 11)
output = bop_4659
output2 = bop_4659
func_4662 = relay.Function([var_4658,], output)
mod['func_4662'] = func_4662
mod = relay.transform.InferType()(mod)
mutated_mod['func_4662'] = func_4662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4663 = relay.var("var_4663", dtype = "float32", shape = (2, 16, 11))#candidate|4663|(2, 16, 11)|var|float32
func_4662_call = mutated_mod.get_global_var('func_4662')
call_4664 = func_4662_call(var_4663)
output = call_4664
func_4665 = relay.Function([var_4663], output)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_833_call = mod.get_global_var('func_833')
func_834_call = mutated_mod.get_global_var('func_834')
call_4705 = relay.TupleGetItem(func_833_call(), 0)
call_4706 = relay.TupleGetItem(func_834_call(), 0)
func_940_call = mod.get_global_var('func_940')
func_941_call = mutated_mod.get_global_var('func_941')
call_4707 = relay.TupleGetItem(func_940_call(), 3)
call_4708 = relay.TupleGetItem(func_941_call(), 3)
output = relay.Tuple([call_4705,call_4707,])
output2 = relay.Tuple([call_4706,call_4708,])
func_4712 = relay.Function([], output)
mod['func_4712'] = func_4712
mod = relay.transform.InferType()(mod)
output = func_4712()
func_4713 = relay.Function([], output)
mutated_mod['func_4713'] = func_4713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_4764 = relay.TupleGetItem(func_591_call(), 3)
call_4765 = relay.TupleGetItem(func_593_call(), 3)
output = relay.Tuple([call_4764,])
output2 = relay.Tuple([call_4765,])
func_4773 = relay.Function([], output)
mod['func_4773'] = func_4773
mod = relay.transform.InferType()(mod)
output = func_4773()
func_4774 = relay.Function([], output)
mutated_mod['func_4774'] = func_4774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4829 = relay.var("var_4829", dtype = "float64", shape = (1, 4, 9))#candidate|4829|(1, 4, 9)|var|float64
uop_4830 = relay.log10(var_4829.astype('float64')) # shape=(1, 4, 9)
func_4613_call = mod.get_global_var('func_4613')
func_4615_call = mutated_mod.get_global_var('func_4615')
var_4837 = relay.var("var_4837", dtype = "int16", shape = (12, 70))#candidate|4837|(12, 70)|var|int16
call_4836 = func_4613_call(relay.reshape(var_4837.astype('int16'), [10, 7, 12]))
call_4838 = func_4613_call(relay.reshape(var_4837.astype('int16'), [10, 7, 12]))
output = relay.Tuple([uop_4830,call_4836,var_4837,])
output2 = relay.Tuple([uop_4830,call_4838,var_4837,])
func_4857 = relay.Function([var_4829,var_4837,], output)
mod['func_4857'] = func_4857
mod = relay.transform.InferType()(mod)
mutated_mod['func_4857'] = func_4857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4857_call = mutated_mod.get_global_var('func_4857')
var_4859 = relay.var("var_4859", dtype = "float64", shape = (1, 4, 9))#candidate|4859|(1, 4, 9)|var|float64
var_4860 = relay.var("var_4860", dtype = "int16", shape = (12, 70))#candidate|4860|(12, 70)|var|int16
call_4858 = func_4857_call(var_4859,var_4860,)
output = call_4858
func_4861 = relay.Function([var_4859,var_4860,], output)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_4879 = relay.TupleGetItem(func_2281_call(), 0)
call_4880 = relay.TupleGetItem(func_2283_call(), 0)
uop_4881 = relay.sin(call_4879.astype('float32')) # shape=(7, 10, 9)
uop_4883 = relay.sin(call_4880.astype('float32')) # shape=(7, 10, 9)
output = uop_4881
output2 = uop_4883
func_4886 = relay.Function([], output)
mod['func_4886'] = func_4886
mod = relay.transform.InferType()(mod)
output = func_4886()
func_4887 = relay.Function([], output)
mutated_mod['func_4887'] = func_4887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_4922 = relay.TupleGetItem(func_804_call(), 0)
call_4923 = relay.TupleGetItem(func_806_call(), 0)
func_206_call = mod.get_global_var('func_206')
func_207_call = mutated_mod.get_global_var('func_207')
call_4930 = func_206_call()
call_4931 = func_206_call()
func_940_call = mod.get_global_var('func_940')
func_941_call = mutated_mod.get_global_var('func_941')
call_4935 = relay.TupleGetItem(func_940_call(), 1)
call_4936 = relay.TupleGetItem(func_941_call(), 1)
output = relay.Tuple([call_4922,call_4930,call_4935,])
output2 = relay.Tuple([call_4923,call_4931,call_4936,])
func_4944 = relay.Function([], output)
mod['func_4944'] = func_4944
mod = relay.transform.InferType()(mod)
mutated_mod['func_4944'] = func_4944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mutated_mod.get_global_var('func_4944')
call_4945 = func_4944_call()
output = call_4945
func_4946 = relay.Function([], output)
mutated_mod['func_4946'] = func_4946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_288_call = mod.get_global_var('func_288')
func_289_call = mutated_mod.get_global_var('func_289')
call_5085 = relay.TupleGetItem(func_288_call(), 1)
call_5086 = relay.TupleGetItem(func_289_call(), 1)
func_4857_call = mod.get_global_var('func_4857')
func_4861_call = mutated_mod.get_global_var('func_4861')
const_5090 = relay.const([[5.744411,-6.713904],[-7.007003,0.076933],[7.613119,9.029634],[-9.624080,4.731704],[-6.879283,-9.874691],[9.627155,9.525566],[-3.700891,2.003803],[8.825475,1.038092],[-5.731393,-4.011426],[0.688547,8.828115],[0.951694,-7.405872],[-9.171611,8.280849],[-0.305635,2.095990],[-3.058694,9.150964],[2.504188,-8.568760],[-6.775588,0.262478],[0.518113,9.224430],[5.512691,2.130219]], dtype = "float64")#candidate|5090|(18, 2)|const|float64
var_5091 = relay.var("var_5091", dtype = "int16", shape = (1, 840))#candidate|5091|(1, 840)|var|int16
call_5089 = relay.TupleGetItem(func_4857_call(relay.reshape(const_5090.astype('float64'), [1, 4, 9]), relay.reshape(var_5091.astype('int16'), [12, 70]), ), 1)
call_5092 = relay.TupleGetItem(func_4861_call(relay.reshape(const_5090.astype('float64'), [1, 4, 9]), relay.reshape(var_5091.astype('int16'), [12, 70]), ), 1)
output = relay.Tuple([call_5085,call_5089,const_5090,var_5091,])
output2 = relay.Tuple([call_5086,call_5092,const_5090,var_5091,])
func_5101 = relay.Function([var_5091,], output)
mod['func_5101'] = func_5101
mod = relay.transform.InferType()(mod)
var_5102 = relay.var("var_5102", dtype = "int16", shape = (1, 840))#candidate|5102|(1, 840)|var|int16
output = func_5101(var_5102)
func_5103 = relay.Function([var_5102], output)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mod.get_global_var('func_1923')
func_1925_call = mutated_mod.get_global_var('func_1925')
call_5202 = relay.TupleGetItem(func_1923_call(), 2)
call_5203 = relay.TupleGetItem(func_1925_call(), 2)
uop_5208 = relay.asin(call_5202.astype('float64')) # shape=(15, 5, 10)
uop_5210 = relay.asin(call_5203.astype('float64')) # shape=(15, 5, 10)
func_4303_call = mod.get_global_var('func_4303')
func_4306_call = mutated_mod.get_global_var('func_4306')
const_5214 = relay.const([9.580072,0.373408,-7.142187,-8.652382,-9.317267,1.144023,-6.700786,-4.981273,2.295160,-7.292379,-4.766430,1.488499,-4.057911,-6.012384,-8.816527,-2.744986,-1.007816,-9.902912,-9.446622,9.877662,7.903587,-4.739280,-3.958801,-8.535860,9.080309,-8.704298,3.233294,-7.685897,3.195895,-5.833568,6.889840,7.415578,-9.632437,-1.453261,5.980121,3.573059,-4.652820,-4.579175,7.748851,-3.302218,5.287432,-4.946161,2.653568,-2.020998,-6.582962,-1.902290,-3.368153,6.292734,-5.895429,5.802784,7.458597,-9.246064,-3.470134,5.560224,6.011684,-7.237660,-9.551407,-1.365110,5.085789,-0.305404,5.549871,5.251444,2.656122,-4.243033,-2.477387,4.267247,-7.685719,5.390896,-0.978050,-7.090390,0.120265,8.862471,-6.521454,0.314825,-2.260062,3.847309,-4.508834,3.303333,6.444493,3.013904,3.867579,-1.884133,-3.052348,-6.804227,-4.157589,4.729650,-9.937695,7.954985,-2.544496,-6.838022,-7.383453,-3.785060,4.455136,-3.767286,0.421449,-2.480142,-4.956557,-0.766068,5.397725,-5.754885,-0.477700,3.287128,-8.508221,6.706817,0.603659,7.221659,1.006473,-3.826175,-3.259009,2.366435,3.271964,-1.940442,-6.936517,-9.289323,-9.112264,2.843565,-0.630125,0.880981,3.666518,1.468995,-8.883335,6.269014,-6.092686,-4.451237,-1.904724,-1.666415,-6.480088,-4.208023,-1.547388,-3.424736,2.646356,5.690297,-4.921462,-7.906937,9.839908,-4.186564,-4.511899,8.066024,2.339877,8.808415,0.370666,3.796644,6.076782,9.290504,3.231437,-0.769165,1.839432,-5.840920,-3.767389,-6.648850,7.167857,4.353979,-8.466987,-4.627608,4.224586,4.575141,-9.506137,-1.316586,-7.756365,6.614947,1.639300,-4.985725,8.253982,-3.140275,5.439723,7.121650,7.862080,5.395607,4.019415,4.434245,4.508489,6.136144,-0.495545,6.068044,6.953613,-4.967819,-0.603752,-8.373477,3.378783,4.891179,7.421339,1.226212,-0.318555,-2.753180,3.741987,-5.333642,-8.772607,-5.025966,7.028062,-4.361886,-4.312902,2.738992,8.262921,-5.702499,-9.995147,-4.406203,-5.528222,-8.657817,-9.211812,-9.424347,-3.025353,-5.130333,-2.304224,2.979605,1.465361,8.461487,-8.693725,-0.081315,-0.248636,2.344028,6.031658,-6.085536,3.781480,-0.701405,3.639040,4.657004,6.341316,-0.837447,-7.137380,5.325600,3.956487,6.674220,2.639594,-7.547695,-6.618456,-9.349602,7.736073,7.387562,2.415263,-7.499483,-1.017124,-2.402307,9.686272,-2.387792,2.357646,1.752923,-8.999732,-5.361762,6.842082,1.461178,-1.386244,4.878922,-0.203570,4.468812,-8.571727,-2.939277,5.672410,-5.666329,0.534662,9.690436,-6.922390,-8.680705,2.967280,-7.739192,9.796655,9.443466,6.261709,3.562767,4.162856,6.484476,-0.487751,4.069931,-4.190885,-6.218717,-3.858331,-4.634797,8.091044,9.489608,-4.848116,3.938268,2.448755,9.465521,1.852064,-7.081639,2.505843,-3.862928,8.178507,-3.560707,9.316953,1.829843,-8.725270,-6.131742,-6.643706,-6.201370,7.921450,-2.369890,-2.749556,2.898305,-9.522827,5.220054,6.544182,4.918667,3.960897,-2.805700,3.924602,-8.880285,-3.222142,7.291016,-9.722886,0.862897,1.211444,-3.806785,8.987176,6.033041,5.020618,-7.176668,-3.679381,2.033370,1.996708,-1.569465,6.174201,-2.403049,5.658677,0.252744,5.094161,8.549504,-2.288391,8.782610,0.165597,-8.568702,0.258254,8.856524,-9.852444,5.619083,-8.139786,-9.014569,-6.822658,5.177426,-5.710729,6.359533,3.732429,-8.953776,-1.518115,-0.755902,-7.383191,-6.734798,8.211149,5.681459,-0.032121,9.817181,-4.395453,-2.990271,-4.859729,-0.499705,-5.174269,-3.515814,-8.430390,-4.655264,-6.062073,-5.850915,2.933471,-4.467733,-9.018573,-7.329684,-2.974232,-4.263865,-9.109098,3.167013,-8.648051,7.390923,9.751234,2.616913,4.946714,-6.159076,-4.260116,-8.302279,4.722498,-3.366343,8.830077,-6.133290,-7.448253,-3.612804,-1.901536,5.555156,-8.707308,0.843117,-3.466087,1.729817,-6.604262,-3.630616,1.058425,-0.125666,0.443005,-3.025781,-6.675718,9.042512,8.266339,5.139368,4.953792,0.687622,0.430535,-2.563142,2.807313,2.819664,1.411295,-8.064912,5.092350,-4.950166,3.946087,2.660438,3.045603,-6.940151,-9.959667,-2.164779,-5.202509,3.137013,3.273015,3.626453,-9.634699,-6.147778,-6.268743,-2.806782,-7.990489,6.368407,2.263619,0.137228,7.073937,-6.798359,7.847647,0.855797,-3.097017,8.102243,-0.169922,-7.920561,-1.200197,4.367956,8.884508,-6.338989,-1.915660,7.252792,-5.891025,-0.253805,-2.415921,6.389016,-4.686113,0.699649,-5.436513,-0.369795,7.815595,8.137521,4.499110,5.024533,-9.763751,-3.806497,2.071785,-7.993728,-4.341411,9.880298,1.643177,-1.776342,5.131847,-5.846478,5.718139,2.756958,4.595299,-3.294478,9.341809,8.289438,2.312555,-8.316703,3.596836,-2.209652,2.437651,-4.369966,-7.816911,-1.289627,-1.072845,3.930212,7.254756,2.923725,4.240075,-5.774329,9.376208,-4.676009,5.763525,7.912375,-0.495216,8.985611,2.465928,-3.351504,-4.542059,8.077623,-5.528556,-5.983506,5.212705,-5.554390,7.349559,1.521256,9.302444,0.007422,-3.348120,2.174450,-6.797589,9.606001,0.901024,-1.087406,-5.975979,-3.455017,-4.168056,5.381081,-8.536828,6.419499,-6.353615,-4.016168,-9.746784,-2.822757,-6.377602,3.892934,-3.998617,-5.878723,8.777460,-7.778776,2.646304,-1.912244,5.181510,5.896972,9.775587,-5.977146,-9.925339,4.942974,-7.533162,1.616979,-5.637053,-9.999623,6.882051,-2.090670,9.264994,5.652576,7.770904,-3.744763,6.164663,3.661671,-3.401375,-3.876452,-6.286355,-5.543053,8.468341,-2.513811,-3.825707,7.121897,8.930698,-4.457934,-7.632174,0.138839,7.147095,-4.200687,-0.553497,-2.789956,3.903876,9.779298,-5.723979,4.621940,6.109816,6.442269,-5.127938,-0.659308,-0.240387,-0.300294,-5.386051,4.234142,5.035975,-6.811690,9.392286,6.899882,1.895575,-1.552212,-3.520586,4.098434,8.161199,4.804302,4.077013,-4.836469,5.199185,-0.385245,-6.778429,7.210775,-8.412001,8.457456,-8.568231,-2.478915,3.026052,-1.111025,-4.143984,-5.823004,-4.819123,8.602329,4.493377,-4.687186,-6.366763,-8.098858,-8.348467,5.703601,9.403156,-8.042225,2.602998,9.900928,4.481711,-5.043345,7.709134,-2.320710,-8.508027,-5.121292,5.267206,-9.535935,6.772772,-4.505942,0.738241,-8.573126,3.003697,-6.738011,-6.379161,4.066489,6.922865,9.581648,-8.820199,6.949598,-5.643394,-1.229547,-0.229822,9.632218,9.328627,1.329993,7.817264,9.790121,-1.449855,6.388189,0.232520,-8.513062,-6.689955,-0.393659], dtype = "float64")#candidate|5214|(630,)|const|float64
call_5213 = relay.TupleGetItem(func_4303_call(relay.reshape(const_5214.astype('float64'), [7, 10, 9])), 1)
call_5215 = relay.TupleGetItem(func_4306_call(relay.reshape(const_5214.astype('float64'), [7, 10, 9])), 1)
func_1666_call = mod.get_global_var('func_1666')
func_1667_call = mutated_mod.get_global_var('func_1667')
call_5217 = relay.TupleGetItem(func_1666_call(), 0)
call_5218 = relay.TupleGetItem(func_1667_call(), 0)
output = relay.Tuple([uop_5208,call_5213,const_5214,call_5217,])
output2 = relay.Tuple([uop_5210,call_5215,const_5214,call_5218,])
func_5223 = relay.Function([], output)
mod['func_5223'] = func_5223
mod = relay.transform.InferType()(mod)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5223_call = mutated_mod.get_global_var('func_5223')
call_5224 = func_5223_call()
output = call_5224
func_5225 = relay.Function([], output)
mutated_mod['func_5225'] = func_5225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1640_call = mutated_mod.get_global_var('func_1640')
call_5234 = relay.TupleGetItem(func_1639_call(), 0)
call_5235 = relay.TupleGetItem(func_1640_call(), 0)
output = relay.Tuple([call_5234,])
output2 = relay.Tuple([call_5235,])
func_5237 = relay.Function([], output)
mod['func_5237'] = func_5237
mod = relay.transform.InferType()(mod)
mutated_mod['func_5237'] = func_5237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5237_call = mutated_mod.get_global_var('func_5237')
call_5238 = func_5237_call()
output = call_5238
func_5239 = relay.Function([], output)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4773_call = mod.get_global_var('func_4773')
func_4774_call = mutated_mod.get_global_var('func_4774')
call_5254 = relay.TupleGetItem(func_4773_call(), 0)
call_5255 = relay.TupleGetItem(func_4774_call(), 0)
output = call_5254
output2 = call_5255
func_5284 = relay.Function([], output)
mod['func_5284'] = func_5284
mod = relay.transform.InferType()(mod)
mutated_mod['func_5284'] = func_5284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5284_call = mutated_mod.get_global_var('func_5284')
call_5285 = func_5284_call()
output = call_5285
func_5286 = relay.Function([], output)
mutated_mod['func_5286'] = func_5286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1324_call = mod.get_global_var('func_1324')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_5313 = relay.TupleGetItem(func_1324_call(), 4)
call_5314 = relay.TupleGetItem(func_1325_call(), 4)
func_3060_call = mod.get_global_var('func_3060')
func_3061_call = mutated_mod.get_global_var('func_3061')
call_5315 = func_3060_call()
call_5316 = func_3060_call()
var_5321 = relay.var("var_5321", dtype = "float64", shape = (13, 8, 16))#candidate|5321|(13, 8, 16)|var|float64
bop_5322 = relay.minimum(call_5315.astype('int16'), relay.reshape(var_5321.astype('int16'), relay.shape_of(call_5315))) # shape=(13, 8, 16)
bop_5325 = relay.minimum(call_5316.astype('int16'), relay.reshape(var_5321.astype('int16'), relay.shape_of(call_5316))) # shape=(13, 8, 16)
output = relay.Tuple([call_5313,bop_5322,])
output2 = relay.Tuple([call_5314,bop_5325,])
func_5328 = relay.Function([var_5321,], output)
mod['func_5328'] = func_5328
mod = relay.transform.InferType()(mod)
var_5329 = relay.var("var_5329", dtype = "float64", shape = (13, 8, 16))#candidate|5329|(13, 8, 16)|var|float64
output = func_5328(var_5329)
func_5330 = relay.Function([var_5329], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3032_call = mod.get_global_var('func_3032')
func_3034_call = mutated_mod.get_global_var('func_3034')
call_5344 = relay.TupleGetItem(func_3032_call(), 0)
call_5345 = relay.TupleGetItem(func_3034_call(), 0)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_5362 = relay.TupleGetItem(func_2161_call(), 1)
call_5363 = relay.TupleGetItem(func_2162_call(), 1)
func_990_call = mod.get_global_var('func_990')
func_991_call = mutated_mod.get_global_var('func_991')
call_5376 = relay.TupleGetItem(func_990_call(), 1)
call_5377 = relay.TupleGetItem(func_991_call(), 1)
output = relay.Tuple([call_5344,call_5362,call_5376,])
output2 = relay.Tuple([call_5345,call_5363,call_5377,])
func_5379 = relay.Function([], output)
mod['func_5379'] = func_5379
mod = relay.transform.InferType()(mod)
mutated_mod['func_5379'] = func_5379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mutated_mod.get_global_var('func_5379')
call_5380 = func_5379_call()
output = call_5380
func_5381 = relay.Function([], output)
mutated_mod['func_5381'] = func_5381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_990_call = mod.get_global_var('func_990')
func_991_call = mutated_mod.get_global_var('func_991')
call_5385 = relay.TupleGetItem(func_990_call(), 0)
call_5386 = relay.TupleGetItem(func_991_call(), 0)
func_2638_call = mod.get_global_var('func_2638')
func_2640_call = mutated_mod.get_global_var('func_2640')
var_5398 = relay.var("var_5398", dtype = "uint8", shape = (750,))#candidate|5398|(750,)|var|uint8
call_5397 = relay.TupleGetItem(func_2638_call(relay.reshape(var_5398.astype('uint8'), [750,])), 3)
call_5399 = relay.TupleGetItem(func_2640_call(relay.reshape(var_5398.astype('uint8'), [750,])), 3)
output = relay.Tuple([call_5385,call_5397,var_5398,])
output2 = relay.Tuple([call_5386,call_5399,var_5398,])
func_5405 = relay.Function([var_5398,], output)
mod['func_5405'] = func_5405
mod = relay.transform.InferType()(mod)
mutated_mod['func_5405'] = func_5405
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5406 = relay.var("var_5406", dtype = "uint8", shape = (750,))#candidate|5406|(750,)|var|uint8
func_5405_call = mutated_mod.get_global_var('func_5405')
call_5407 = func_5405_call(var_5406)
output = call_5407
func_5408 = relay.Function([var_5406], output)
mutated_mod['func_5408'] = func_5408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_394_call = mod.get_global_var('func_394')
func_395_call = mutated_mod.get_global_var('func_395')
call_5423 = relay.TupleGetItem(func_394_call(), 0)
call_5424 = relay.TupleGetItem(func_395_call(), 0)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_5434 = relay.TupleGetItem(func_2161_call(), 0)
call_5435 = relay.TupleGetItem(func_2162_call(), 0)
func_2269_call = mod.get_global_var('func_2269')
func_2271_call = mutated_mod.get_global_var('func_2271')
const_5466 = relay.const([7.430316,-5.210103,-5.192907,-7.802907,-1.892672,-7.788522,0.628036,0.499995,-1.302675,-5.260565,-3.776490,-5.101521,-8.905136,5.322888,6.874983,2.647523,1.731210,4.120360,7.950061,-0.965545,-1.036661,-8.985667,7.600154,5.664106,3.025899,2.451794,-1.095883,3.525024,-7.813720,-7.002283,1.862924,-2.934122,-1.512689,-4.677831,-8.631637,2.430359,1.550437,-8.357216,-6.042278,0.393227,4.386831,4.420993,-6.736380,-0.482850,4.476846,-1.467810,-3.982193,-2.899774,-6.328946,-6.253543,8.918204,3.657191,9.850004,3.240706,6.750044,-6.511309,-2.394661,-8.697434,-0.065914,6.247462,-6.794777,-3.735412,-2.605378,3.571924,4.157700,4.084973,8.623856,-1.323769,-7.199068,-7.655148,-9.806831,-9.427845,-3.208837,9.003218,0.989416,5.624326,-2.608736,-7.208094,-2.502459,0.626072,7.339920,-6.389976,-1.590039,-6.805790,3.766501,-4.133675,6.499396,-1.128183,-5.558543,-4.249004,-2.807343,0.758468,0.951195,7.182386,3.080965,5.206673,-5.844384,4.070567,-7.754950,4.715294,7.594396,4.914143,4.367670,-6.111357,6.964770,5.258816,-6.086581,-0.297110,7.143687,3.808232,8.856645,4.419509,9.673085,-6.466208,-6.952722,0.522399,9.150818,-8.665350,-3.537028,-2.145349,4.291081,3.032049,-7.085891,2.109270,6.517609,-6.239119,-5.893892,-6.898288,8.834236,1.287587,9.112785,5.640890,-5.712701,7.390716,-8.773382,-5.286865,5.488796,-0.741557,-7.879027,9.099018,-6.253039,-6.880118,-3.049229,-5.121309,1.632176,5.927244,-8.850958,6.320008,3.675261,1.687762,5.728264,0.944263,1.701668,-2.189154,-5.756008,-1.083457,-4.972331,5.538169,9.045295,-2.842272,1.058589,3.706856,-6.170102,-8.287190,1.621585,7.303103,-2.200619,-1.371511,-4.813395,6.566699,-7.826156,-7.532755,-6.188644,4.800341,8.608179,-4.800944,-1.654853,8.382738,-7.349878,-4.972551,4.263362,-7.701582,-0.383065,-9.013059,-6.218891,7.306317,9.397885,9.754515,0.833007,1.985415,-8.035973,-0.748066,-3.849171,3.256242,3.887413,-7.749242,0.850325,-7.819586,0.244437,0.805351,-8.897699,4.725829,-3.466372,6.388257,4.567402,-1.224040,-3.412741,-5.939086,-1.535449,-1.219519,8.818743,8.736827,5.239265,5.021830,-9.483466,-6.016807,6.539462,-2.551683,-9.499844,-1.048031,-4.938332,6.670497,3.355209,5.698653,7.603472,0.874992,1.788348,-7.698308,4.772640,8.816326,-1.079982,-0.807152,8.642786,4.773145,4.752654,-6.050298,-1.668451,-9.666559,5.954425,-5.708884,6.010411,-2.202437,-9.418003,-0.358210,-8.893569,9.305128,8.996790,-3.284348,-3.354573,7.276078,2.094437,6.648230,2.693691,9.223544,-7.295131,-1.503162,-9.157146,-2.706722,7.757232,-8.853860,-4.652717,-4.111955,4.891726,7.966891,-2.148938,3.863440,-0.613424,5.214914,0.949387,-2.856531,-2.821236,9.242135,1.460416,2.003248,-5.343375,-9.736608,3.953316,0.482840,-8.780936,-3.232489,9.599499,-5.297981,9.990634,9.512612,8.612581,-4.476292,-0.096498,-8.910732,0.771190,-2.893651,9.300952,-4.254935,4.507142,6.537391,-7.390329,-6.882661,-6.521091,6.635897,4.166994,-7.599038,7.652114,-4.341474,-2.219136,7.884681,3.171001,-6.665873,8.835981,6.933748,-0.500762,-5.703127,8.273903,-6.652032,2.118908,5.220710,-9.681530,2.603510,-5.630196,-6.333880,-0.199564,-7.770890,4.500470,-6.728311,4.252189,-2.247181,6.172534,5.990359,6.004378,-9.423421,3.401870,4.251764,3.578915,4.959888,1.101324,-7.025901,-3.568088,4.648866,6.939745,-7.630809,1.018027,-0.469077,8.228248,9.214896,0.653303,8.465255,7.103350,9.869419,-7.129823,-9.064383,-1.436707,8.132075,7.405116,-7.524284,6.410415,-7.208849,1.247903,1.286656,-4.553532,-3.281224,-0.778348,-0.074719,-9.766025,-8.847272,3.501643,-0.817086,5.974655,-5.190472,-7.165882,-9.291684,7.325659,1.398776,7.256064,3.121208,5.626247,-0.356980,3.787329,-4.984359,-6.854304,-2.368982,1.469697,9.690342,7.318934,-7.005843,-8.644155,0.980671,2.445184,5.701639,1.861829,-1.063911,-2.116999,-3.474698,8.678496,1.107818,5.315120,0.062652,1.424220,1.248578,-4.163265,-7.635148,-2.828393,-3.660469,-6.330212,1.529114,-5.616621,0.225854,-5.114154,4.714551,-4.137264,9.658285,-4.287301,-6.013155,2.049521,-7.442334,2.378545,-1.539107,-3.826117,6.112545,-6.369701,-0.582660,-8.115807,5.190271,0.468440,7.452680,-8.611593,8.250280,3.931193,-1.479925,-8.194698,6.789093,1.475882,8.957512,-3.717717,6.028456,4.254809,-7.514230,3.908783,-2.707006,-7.670648,-2.873038,-5.395996,7.332774,7.486740,-4.024596,5.015821,-7.881471,-8.666965,-9.469848,-3.199670,3.686265,-4.775300,-6.251947,-0.187469,-5.161228,-9.483793,7.669701,2.926463,-6.540732,-5.329852,-7.544360,-2.850731,-4.074993,-3.138864,-0.880984,-4.941289,7.625894,0.654332,-4.671629,-9.873590,-7.045303,1.631133,-9.720014,-4.666129,-0.039422,2.011447,-4.048958,9.705921,-4.232697,-9.219925,-0.689725,2.702037,8.550414,1.944837,-9.256878,-5.779187,-1.123142,-3.610793,-3.603703,-8.133148,2.215758,4.160339,0.165030,-3.142475,3.387531,-6.843296,-7.898320,9.512439,-0.044730,7.600405,-7.429236,5.370342,-6.785428,8.555041,9.366709,7.723782,-1.877609,-9.328979,7.569189,1.475548,3.204650,-7.693956,7.398732,0.213024,9.368338,-1.323247,9.968095,-5.479498,2.917143,-7.186338,8.150248,1.665098,6.848508,-7.879534,1.631267,0.571034,0.119127,-6.203174,5.967241,8.253141,-7.585789,-3.081188,3.425097,2.265338,6.568261,3.630928,6.243429,-3.888868,9.002128,8.667593,-7.421164,5.191963,4.733508,5.993636,-2.649164,9.998348,-1.936690,-8.594059,-6.597696,7.085154,9.833359,4.774093,6.649677,9.567583,-0.813939,2.619265,0.632761,-7.122705,-1.013499,1.794967,-1.862480,-0.901388,2.617274,9.479804,-9.363087,1.941673,8.820696,2.126027,-6.569855,5.125539,2.444967,4.740280,-9.657269,0.610093,4.225329,5.107581,6.965912,3.492471,-5.271165,7.878999,3.421163,-0.515494,8.268123,9.758178,7.303144,-1.406892,-9.840910,1.336574], dtype = "float64")#candidate|5466|(585,)|const|float64
call_5465 = func_2269_call(relay.reshape(const_5466.astype('float64'), [15, 13, 3]))
call_5467 = func_2269_call(relay.reshape(const_5466.astype('float64'), [15, 13, 3]))
func_415_call = mod.get_global_var('func_415')
func_417_call = mutated_mod.get_global_var('func_417')
call_5478 = func_415_call()
call_5479 = func_415_call()
output = relay.Tuple([call_5423,call_5434,call_5465,const_5466,call_5478,])
output2 = relay.Tuple([call_5424,call_5435,call_5467,const_5466,call_5479,])
func_5482 = relay.Function([], output)
mod['func_5482'] = func_5482
mod = relay.transform.InferType()(mod)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5482_call = mutated_mod.get_global_var('func_5482')
call_5483 = func_5482_call()
output = call_5483
func_5484 = relay.Function([], output)
mutated_mod['func_5484'] = func_5484
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5512 = relay.const([[[4,-2,6,2,10,-10,-2],[-10,-2,-6,-8,9,4,-10],[4,2,5,-2,3,-3,-7],[-3,5,6,6,4,-6,7],[-6,-8,6,-10,-3,4,-8],[1,3,4,9,-3,2,10],[-10,-10,6,9,-10,-3,-3],[1,7,5,-7,-5,-9,-1],[8,10,10,6,-10,6,-8],[-2,-9,2,-4,5,8,-10],[-10,7,-4,-8,7,-8,1],[-6,4,-9,1,-8,-10,8],[1,-4,-1,-1,-10,-9,4],[-7,-3,3,-10,-10,-6,8]],[[9,6,6,-3,5,-3,-4],[5,10,-5,4,10,-2,7],[-7,6,2,8,-5,6,8],[6,-2,1,2,6,-4,2],[-5,4,1,-9,-5,1,-9],[-10,8,8,1,-3,5,-1],[-4,-3,-9,2,-8,-2,-2],[-2,2,8,10,-10,-7,-3],[10,9,6,-4,10,6,-1],[-10,-3,-3,-6,7,-9,8],[1,8,5,7,3,8,-1],[3,3,4,8,3,8,-10],[8,-3,-9,-2,2,10,3],[9,10,-4,5,-1,5,7]],[[-5,-10,-6,3,8,4,5],[3,1,9,-2,-4,-1,2],[-8,-9,7,-7,-4,2,4],[-10,-9,-6,-5,-2,8,-5],[-3,-4,7,4,-3,-9,-1],[-7,-7,3,-9,6,4,2],[4,-10,6,7,-7,7,4],[-7,9,10,-10,-1,2,5],[-5,-7,-6,-7,-10,4,-9],[-9,9,8,9,-3,10,10],[-1,-9,3,7,-10,-2,1],[10,-8,-3,-5,6,-8,3],[-5,2,-1,4,5,-3,-10],[-7,-10,-10,-8,-7,3,-6]],[[-4,-9,-5,7,-1,10,-6],[1,10,6,-9,-10,9,-9],[-5,-5,8,-10,-4,9,-9],[1,3,-1,4,-3,-4,-7],[4,-7,-2,8,8,-3,6],[-10,-10,-2,5,-6,-1,-9],[5,9,-5,-8,1,-7,5],[-1,-1,-8,4,-5,-3,7],[1,-8,3,6,4,-4,-4],[-3,-2,-2,7,-7,-9,-9],[3,-8,-1,5,-4,1,6],[2,-10,-9,-9,-7,-10,-7],[-7,5,2,8,-10,7,-3],[1,-6,9,7,-8,10,5]],[[2,-1,10,-10,-9,-6,-1],[-2,-1,-4,-7,-3,-3,-3],[6,3,3,6,-9,-6,5],[7,4,10,4,2,-9,6],[-4,6,-10,-10,2,6,4],[-2,-5,5,-10,-5,-1,4],[2,3,-2,7,-8,4,-5],[-3,-6,8,-6,3,9,8],[4,1,5,-1,-5,-8,-9],[4,7,-3,-4,6,-3,6],[6,-2,-8,-6,9,2,10],[-8,4,-3,1,6,8,-5],[-9,-4,7,-5,1,9,-1],[-3,-1,-9,2,8,9,-9]],[[5,9,7,1,9,10,-9],[1,8,-10,4,-5,-3,-10],[-6,9,-4,-7,2,-4,4],[-1,3,-3,-6,1,4,6],[9,-10,-6,-8,9,-1,1],[-2,-1,8,-6,4,-3,2],[1,5,-8,8,-3,-4,10],[-3,-3,6,7,8,2,-5],[-7,2,-9,-1,-1,-8,-5],[-9,8,-6,7,4,5,-7],[-4,-3,1,2,-2,4,-3],[-8,-7,-1,-8,-7,-8,-9],[5,-9,-8,1,-8,9,9],[3,-8,-8,7,1,8,-8]],[[-8,-9,-3,-1,1,-2,8],[-10,7,-7,-2,1,8,-3],[-9,-3,8,-10,-2,-3,5],[-3,9,10,-5,-4,-3,6],[-6,-8,-2,3,-2,-2,-6],[-7,-4,-5,-4,-10,3,-5],[8,8,10,10,6,1,-8],[4,2,8,4,9,-10,6],[-5,-10,2,-1,-3,-4,6],[-8,-10,2,-6,8,-6,7],[-9,9,-1,9,6,-6,10],[-9,7,5,-2,1,-7,-7],[7,-1,4,-2,-1,-10,10],[-10,-8,-9,8,2,10,9]],[[4,2,-9,-10,7,10,3],[-8,6,3,9,-6,-5,9],[6,5,-2,-3,-4,-4,7],[10,3,-10,8,-10,-7,-3],[9,-10,-8,6,3,-2,4],[-7,-9,-10,-7,-1,6,-1],[2,-7,-4,9,-3,-1,-6],[-5,-1,1,1,4,4,4],[-1,-4,7,-5,2,2,-8],[-4,-7,5,3,-10,9,-4],[-9,2,-3,4,-10,2,2],[-7,-8,3,2,-5,-5,-9],[9,7,4,-8,8,7,-1],[-9,-5,-3,1,-10,5,-10]],[[-10,-5,4,5,-1,-3,8],[-6,10,-2,-6,-8,3,2],[3,8,-10,-10,-3,10,-1],[5,-6,-8,8,3,-7,3],[-9,7,6,7,8,-10,-6],[7,7,9,-2,-10,-7,6],[-4,-3,5,-8,7,7,-3],[-8,-7,-8,-6,-8,2,-1],[-10,4,-8,-8,-8,4,-10],[-1,-7,-3,6,1,-8,2],[-6,2,2,10,4,-4,2],[10,-8,6,1,-2,-3,-9],[-1,-5,-4,2,3,-5,-10],[1,-7,-6,3,-2,5,9]],[[6,-1,9,-3,2,-6,-9],[-4,-9,1,-6,-9,-10,3],[-7,-5,10,-2,-1,1,-2],[10,7,-10,-9,-10,-9,5],[-2,-5,1,-1,-6,-2,-8],[2,-10,-1,8,-3,2,3],[-2,1,7,2,5,-2,6],[10,9,-4,-8,-5,-6,-3],[-2,10,-5,10,6,-1,-5],[4,9,7,-9,6,-8,4],[-1,-4,1,9,-4,7,8],[3,-3,9,2,-9,-7,-8],[9,-10,-9,3,10,-6,-10],[-6,-5,4,-7,-7,8,-2]],[[2,-1,4,-1,-6,2,8],[-2,-3,7,-7,-5,5,-3],[-9,-8,-7,-3,-10,1,-1],[-4,3,7,4,5,6,-4],[-1,4,4,-2,-10,-9,9],[6,4,-1,8,4,-4,1],[-10,-3,-4,2,8,8,-9],[8,-8,10,-6,3,-8,4],[-8,4,-2,9,-3,-5,-5],[8,-9,-3,-3,-2,-3,3],[-2,5,-3,-9,7,10,-1],[10,-7,1,7,4,-9,8],[-1,-5,-7,-6,3,-5,5],[10,-10,1,3,5,8,-9]],[[-8,-10,8,-6,8,-5,-7],[-1,6,8,6,-5,-3,-8],[-10,9,3,-6,5,-6,-2],[-5,-3,-3,10,5,1,2],[10,5,6,-5,3,10,1],[-10,8,6,-4,10,-8,-9],[-5,-3,2,5,3,-6,1],[-2,-1,7,-10,1,-2,7],[6,-9,8,7,1,7,-2],[-8,-1,7,-7,-3,9,-10],[-5,-9,2,3,1,9,4],[5,2,-10,6,-5,2,-9],[-2,-10,-5,-7,8,-6,-1],[-10,-2,2,-10,7,8,8]],[[-9,-10,5,7,10,4,5],[-8,6,3,5,-4,-8,1],[-2,-7,-8,-4,-9,-3,-9],[7,-9,-2,7,5,-3,-6],[-9,-8,-10,3,-3,10,-2],[-9,2,-4,-4,-5,2,-2],[-8,-7,-9,-9,-1,6,-1],[-6,-9,-3,4,1,-4,9],[-6,-2,-1,-3,-5,9,5],[9,-2,-1,1,-2,-1,-3],[9,10,2,4,-4,-6,-9],[4,10,2,-10,3,-4,6],[-9,-10,-10,-6,4,-8,6],[7,8,-1,-9,-10,-5,2]]], dtype = "uint32")#candidate|5512|(13, 14, 7)|const|uint32
var_5513 = relay.var("var_5513", dtype = "uint32", shape = (13, 14, 7))#candidate|5513|(13, 14, 7)|var|uint32
bop_5514 = relay.add(const_5512.astype('uint32'), relay.reshape(var_5513.astype('uint32'), relay.shape_of(const_5512))) # shape=(13, 14, 7)
output = relay.Tuple([bop_5514,])
output2 = relay.Tuple([bop_5514,])
func_5517 = relay.Function([var_5513,], output)
mod['func_5517'] = func_5517
mod = relay.transform.InferType()(mod)
mutated_mod['func_5517'] = func_5517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5518 = relay.var("var_5518", dtype = "uint32", shape = (13, 14, 7))#candidate|5518|(13, 14, 7)|var|uint32
func_5517_call = mutated_mod.get_global_var('func_5517')
call_5519 = func_5517_call(var_5518)
output = call_5519
func_5520 = relay.Function([var_5518], output)
mutated_mod['func_5520'] = func_5520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5526 = relay.var("var_5526", dtype = "int32", shape = (3, 10, 12))#candidate|5526|(3, 10, 12)|var|int32
const_5527 = relay.const([[[10,-3,-10,-3,-9,-4,5,8,4,-10,-8,-5],[-8,1,-6,4,-8,8,3,6,6,-10,6,8],[1,-6,-10,2,-5,-2,7,-9,-2,-1,-10,-9],[-5,-7,7,2,3,7,-8,-5,-1,6,-10,2],[-3,7,10,-10,-4,-9,-4,1,8,3,6,-2],[3,-4,2,7,9,-9,-1,-5,5,8,-2,7],[6,9,-7,8,9,-7,9,6,-7,6,-1,-4],[2,6,-10,7,4,-9,-5,5,10,4,-3,7],[5,-9,-4,-5,-5,-2,5,-5,5,3,1,-5],[7,4,10,-3,7,-3,5,9,10,-6,-1,5]],[[-3,6,-6,8,-10,7,-4,-7,10,-1,-8,4],[-2,-5,1,8,10,-1,5,-4,-4,5,9,8],[-9,-6,-1,-7,3,5,3,2,-7,2,4,5],[4,5,-9,5,-4,-7,5,6,-5,4,4,1],[-10,-3,8,-2,7,8,-10,6,-5,-9,-8,-8],[7,2,9,3,6,-4,4,-7,-3,7,-7,9],[7,-2,-2,9,-4,1,4,-5,-9,-7,6,6],[-10,-7,7,10,-2,10,-5,-3,1,4,-7,-8],[-9,3,-10,7,1,6,9,-3,-8,-5,5,-4],[4,-10,1,9,-2,7,1,-1,-7,-10,2,-7]],[[10,5,-2,10,1,6,9,-3,-10,-4,-4,1],[1,-8,-7,-5,-7,-2,3,4,5,7,-7,-4],[9,-8,-2,-4,2,-6,-7,8,1,-6,6,-8],[1,-5,-6,-7,-9,-7,6,4,5,9,-10,7],[-8,6,4,5,1,-6,-8,-1,-10,8,2,-3],[1,-9,10,-2,1,-4,-4,-10,8,-10,-9,-3],[-1,-4,-2,-10,-9,-2,6,-9,2,4,4,-10],[10,-1,3,9,-7,-5,-9,2,3,-1,9,-10],[5,8,-7,-2,-8,-9,8,-5,10,4,4,-9],[1,9,-10,-3,-2,6,9,10,2,-10,-7,3]]], dtype = "int32")#candidate|5527|(3, 10, 12)|const|int32
bop_5528 = relay.bitwise_or(var_5526.astype('int32'), relay.reshape(const_5527.astype('int32'), relay.shape_of(var_5526))) # shape=(3, 10, 12)
uop_5532 = relay.exp(bop_5528.astype('float32')) # shape=(3, 10, 12)
func_1639_call = mod.get_global_var('func_1639')
func_1640_call = mutated_mod.get_global_var('func_1640')
call_5545 = relay.TupleGetItem(func_1639_call(), 0)
call_5546 = relay.TupleGetItem(func_1640_call(), 0)
func_689_call = mod.get_global_var('func_689')
func_691_call = mutated_mod.get_global_var('func_691')
const_5549 = relay.const([8.346190,-1.798349,5.516281,3.040131,7.291046,6.934444,-9.737237,-4.073363,9.977117,1.544558,-2.791421,-8.271433,-3.604977,-7.370979,-6.674367,1.855458,-3.383950,-7.029175,0.861938,9.692472,-5.307010,-8.423230,6.852142,-7.823177,-3.313158,-5.242012,3.737359,-0.322532,-6.856649,-9.760196,-1.618851,3.615454,9.470245,-2.925900,9.167775,7.276021,9.030191,-5.752298,5.222918,6.372740,4.710387,-1.728385,-9.811892,-0.993160,-7.160038,3.665000,-8.722271,6.154896,4.764900,-4.662274,7.268280,-6.981916,-5.767901,8.165177,9.651224,6.886813,-6.886894,1.346229,8.246557,-9.580491,-1.456962,-7.405379,-0.199233,-3.083916,1.083461,-3.185009,6.813865,6.967240,8.894132,7.655641,4.344015,6.079607,-5.532463,-2.241982,-7.005152,0.495100,5.564437,-1.624953,1.486560,9.255864,7.901243,3.858039,-0.536434,-3.493782,2.387422,-0.113643,8.116116,8.450864,-0.432479,6.803976,-3.504388,-1.607259,-8.120052,7.133375,7.314843,-6.818797,-2.215345,7.573902,6.297953,-7.909476,1.114175,9.079795,8.426172,8.013574,1.533650,-5.712234,9.624323,8.039343,1.922296,-3.843557,6.956093,-7.421817,-4.656655,-9.435640,9.720389,4.089512,3.321310,4.938179,1.222513,-5.281584,5.814072,-1.511121,5.716863,-8.775000,-0.899184,-9.952946,-1.462922,9.028724,-9.951504,-3.586937,-0.411127,7.942181,-6.776811,-3.991204,2.813531,-3.049522,-2.623440,5.892027,-4.832141,-0.865723,-5.847033,-3.970956,5.371324,-1.731304,2.608347,-0.167693,-1.370502,2.383715,-0.001303,-2.648736,0.676625,6.739919,2.516838,4.056219,-4.852597,-8.882269,-3.216055,5.732471,-7.179259,-8.790030,-4.687488,5.629489,-8.022814,-7.269243,5.831605,-1.273294,8.168006,-3.091131,-6.683269,4.864102,0.068587,-2.252673,-7.531949,-2.022558,8.562934,9.156510,3.221977,-1.228625,4.649236,-0.884803,4.693137,3.531545,-2.514722,8.881323,-2.067433,-6.286274,-3.149029,3.768292,-2.867634,3.218482,-8.436460,-7.484428,0.459609,1.486377,8.047987,0.397217,-4.042801,0.058706,-3.370974,-0.628944,5.637855,3.841264,9.194164,2.920136,-6.592988,0.774725,8.696879,-4.084459,-2.325929,1.790795,5.177696,-9.836465,-4.910983,6.920359,-2.231610,2.800067,-3.865327,9.504418,1.018169,0.518064,0.638688,4.786863,-1.484379,0.025664,7.300044,-5.687209,-1.631639,9.251277,4.018674,8.062650,-4.644377,0.154446,9.357726,-0.193609,9.082674,-4.482715,-1.557082,6.973539,4.352294,4.954884,-0.294478,-1.017046,-5.178384,0.580341,-9.406061,2.642416,3.543565,6.843286,8.954783,3.343292,3.115996,3.808915,2.050758,2.924068,3.236501,-5.008063,-3.971617,-9.272444,-2.242471,-9.906002,4.639478,3.301940,0.483285,6.523358,-4.275839,6.253962,2.731626,5.429090,-5.336525,4.731535,7.605083,1.640359,-2.958055,-2.958260,3.940544,4.968126,-0.661637,6.794540,0.229816,-9.831552,6.423544,-5.503939,-6.897966,-8.088412,-0.581038,-3.467424,9.012073,0.180490,-6.352330,-6.157674,0.772264,-5.981176,-5.265489,2.190534,-3.130653,9.754823,5.837531,-2.635718,4.231751,-3.619086,4.598098,2.346044,-0.542871,-1.047074,-2.746562,-1.657312,7.421094,4.219378,-6.725096,3.766050,-0.196048,3.914862,-6.934049,6.648941,-8.421764,2.249426,-5.107979,-0.567874,-4.186354,2.220266,8.801042,-8.018632,-5.602229,-5.978098,-6.721069,-1.490042,-8.555354,-7.835501,1.948612,-5.982848,-3.302450,9.726296,-9.284039,1.761754,4.986901,1.464932,4.773380,2.026472,0.922979,-5.768146,8.935127,-6.109816,-1.880336,9.198912,-2.001226,8.677287,0.811543,2.792350,-2.090847,-8.788030,-2.897106,-5.359941,0.255141,9.883042,3.302962,-9.411884,-8.369877,-1.540129,-9.040786,1.123670,5.826124,8.234279,2.567118,-4.624143,3.981588,1.986915,-5.800316,0.586923,2.688852,-3.811410,9.540568,-2.573325,2.809831,-2.910632,-1.158400,-3.794026,2.113565,-5.507475,6.698648,-2.551622,-1.067708,-4.802019,-9.182287,-9.944434,-8.624276,-3.115639,-7.657365,-9.933356,-9.791835,7.727878,-3.468486,-5.061176,3.076989,-4.878816,-2.527607,3.450888,3.723223,1.680735,-6.125699,7.859337,2.347032,-7.154274,-6.567063,3.577405,3.540911,4.069381,9.430090,5.050664,7.371698,1.949555,6.134309,-8.689226,-9.509030,-4.503219,0.124028,8.458486,6.570466,-2.887281,-8.334774,-4.482035,-2.648862,1.359578,-8.711471,-4.964786,5.630019,0.477861,1.542402,8.696900,3.253902,-2.107659,0.533518,3.070158,4.997327,3.619769,-6.709479,4.531023,7.735143,-6.027678,-1.357235,7.883236,-6.817045,-5.520310,-0.303597,9.221483,9.533301,1.550854,2.723574,8.200872,-1.566858,6.593386,2.852202,-6.425585,4.985915,-3.952740,0.098569,8.653516,-0.424232,3.814943,9.849878,-8.586766,-8.083746,-5.319725,0.834079,-4.914992,-9.303443,-5.526710,4.135030,-2.345331,2.052902,-6.831379,5.923765,-4.271410,5.247019,-9.578056,-9.996536,6.590037,-4.697048,-2.180615,2.128455,-7.162398,-7.626706,0.460817,1.106482,2.584167,-4.814858,5.674289,6.209106,4.522395,-0.422851,-5.335889,0.031408,2.519313,6.590997,7.146413,9.034016,-0.774808,-3.595057,2.699183,8.583695,-6.464414,-0.515824,1.646341,8.996398,-9.576174,3.859365,-4.422674,-6.025443,-5.007898,2.734327,-2.631552,0.823511,8.890826,5.190898,1.491614,6.548486,-9.222317,-6.652032,6.101070,9.910626,5.748721,-0.093433,1.988020,4.764346,-8.256272,2.369052,0.295581,9.526528,-8.684890,5.415210,-4.797674,0.251430,-1.449536,-2.616245,7.110575,5.753011,-9.630809,-6.334710,-0.618563,-2.508317,-5.074897,-9.458329,-7.310727,-2.935583,-2.968416,4.138254,-6.119626,6.076562,-5.878424,2.526467,8.974408,-6.147409,-9.476770,8.704257,-6.152558,-1.729567,5.330184,8.025223,-6.627916,-9.951887,1.069703,3.299521,-7.444680,0.838551,6.839768,-1.559989,4.969700,-3.479218,5.579170,5.854524,2.411209,2.574209,-1.900256,9.080559,-6.683128,3.139565,3.231894,-5.497722,7.296544,-4.492261,-3.695185,-7.993168,5.392917,6.002195,-8.362062,-8.878503,-5.874044,8.609605,-6.385041,-3.215169,-1.623291,1.711450,-4.809885,-7.701803,8.509056,-8.560553,5.242634,0.744049,-8.800317,-9.349328,5.997124,-8.489401,-6.452724,-3.448961,-0.508348,0.492829,-5.655444,-4.700411,-9.085856,8.653066,1.753877,0.259304,-9.694242,0.655687,-1.941802,7.722554,2.346525,9.157850,3.925894,-8.650202,-9.171265,1.580789,-9.250658,-6.701371,-2.938125,-9.318261,2.689696,-9.211124,8.249955,-3.461652,2.421322,7.183172,-8.419935,-8.478469,1.292728,9.519072,9.201984,-4.412655,6.467672,-4.305826,-7.383894,9.307131,9.489304,6.590947,-3.010381,-9.913751,-6.089109,-7.865303,-9.350612,-2.528442,7.873284,-2.824944,-7.775200,1.144316,4.978563,7.051115,-0.227873,9.529599,4.787686,-0.320049,9.945800,3.661474,8.708808,-8.622681,2.238409,7.249626,-9.876527,6.892713,-0.808640,-3.218356,-4.680400,-3.359163,9.892692,-5.782798,-1.942680,-0.519612,0.735242,1.110259,6.551729,9.693996,9.640898,0.934490,-9.165273,-9.247963,3.583258,-5.304214,4.495899,0.234494,-0.548372,7.264383,-8.183134,-8.748126,0.864450,-2.674986,0.354654,1.859666,-9.104809,9.165669,8.144483,-4.835631,-7.955902,1.483914,5.856870,-7.124676,-8.931627,-6.534233,8.890128,0.140685,2.562186,5.776902,8.650456,9.384217,-4.974017,-2.713770,-7.570832,-9.059395,3.726611,-7.834366,-5.415179,-8.616604,-9.367845,-6.911408,-5.474481,0.201492,3.147609,-3.175739,4.870611,3.962623,-8.930014,-2.675523,-0.703349,-2.341832,-5.013050,-5.715819,1.249209,8.421846,0.722759,-5.239321,0.487324,1.099624,-3.939981,0.645197,6.687998,7.251279,-5.039687,4.481265,6.057615,-8.149698,-2.440961,-2.192000,-2.186329,-5.417544,6.650788,6.654578,-1.484432,-7.431844,-9.737533,-0.579519,-3.270500,-6.673839,4.728304,8.742019,7.155461,-7.748901,-4.193537,2.954001,2.083857,-3.039606,-1.753873,8.968247,5.612752,-1.922487,-2.903983,2.548831,-5.264518,6.819669,7.495880,-6.278813,0.614415,5.371648,-9.260961,-1.084593,-5.044764,-8.163177,-6.457723,3.213428,2.189548,8.284907,-7.773653,-5.605231,-1.819782,7.370022,-4.426245,-4.278165,-1.736903,5.298335,2.764201,-9.088878,0.157924,-5.357757,2.097120,5.602437,1.736788,-0.489311,3.598823,8.193076,-3.797131,-0.753116,-4.540404,-0.700843,-2.902477,8.602235,8.964934,1.353646,7.909954,-6.679429,6.381424,4.037614,8.026445,-6.311816,7.927708,-4.006944,-4.868298,-7.708122,-6.676287,-9.787823,8.131874,-2.496816,5.986433,4.237114,6.992733,6.298173,9.841066,-1.605902,-6.946390,6.266832,-0.550183,-5.864404,-5.878334,2.485127,8.960387,0.574361,-8.807164,-9.053235,0.265397,-8.519661,4.829270,1.014028,-6.040978,3.801031,5.159568,-7.870796,4.109144,-3.550110,-5.446312,-0.571779,8.967965,-2.513398,5.430467,-1.457052,-5.439586,7.736347,-4.477818,-9.428891,-4.325709,-7.524398,-1.302040,8.301028,0.151077,-5.256560,-9.021780,2.773978,-8.493163,4.770162,-4.006497,4.457369,-7.857602,3.954875,8.324130,0.979988,8.193775,3.596605,1.027893,2.953165,4.843319,-3.241048,-1.195623,5.524228,1.602597,-5.562765,-1.923820,-7.064557,1.230543,-5.414427,7.498165,-9.226115,4.748231,-7.192219,3.948782,4.865247,1.949368,-6.164243,4.608438,1.125996,-5.204503,9.842359,7.115824,7.052450,9.693996,1.657394,8.325047,4.243634,-7.287701,7.882688,-8.509797,-1.931695,-0.394107,9.339492,-1.253592,-0.886825,5.401801,-9.771855,4.017526,1.474724,9.278389,8.885372,-1.455059,8.807840,8.937168,-2.247810,0.305701,4.781279,3.737006,0.552128,8.936836,-0.969060,6.218187,9.604153,-6.215108,9.485314,-7.280020,3.531692,-9.138447,7.484820,0.521451,6.912230,-8.743696,8.165633,6.645749,7.619676,-8.800827,7.266282,-6.684456,7.545492,0.466498,-9.231096,6.950807,8.656776,-7.537479,5.940657,-2.371821,-0.300125,-7.070604,3.888972,8.259668,-7.287250,-6.074717,3.121858,9.706486,-0.690759,-1.852319,-1.478250,-0.517686,0.006216,-7.775687,-0.729669,3.040143,9.830984,-6.772489,5.535271,6.108762,-2.883304,-5.109409,7.381434,-4.549174,-9.144664,-1.828949,-6.606313,-6.787458,-9.751553,7.385995,-7.773380,8.899879,-1.036636,-6.413764,3.760450,3.286153,0.031242,-4.808611,6.417246,-9.611869,3.520700,-8.877290,5.555885,4.425258,5.539450,8.103724,4.212259,5.989751,-4.026482,4.673774,-5.270942,4.296114,-0.279610,-0.956326,-4.167189,-6.025692,0.922227,-9.222606,1.088770,-4.379221,-1.497797,-8.094070,2.475267,0.127940,2.020529,0.046142,6.407282,-5.873976,-7.336505,-3.140963,5.937185,-1.651411,3.310594,-3.143367,-4.047052,-7.092634,-1.400816,-0.526256,-4.555331,1.479476,1.672100,6.894539,-8.253787,-0.932454,-3.467934,0.038461,1.313588,8.978930,-1.325223,-7.252256,-0.929834,7.823479,3.557164,-1.937269,3.039560,-1.976527,4.748496,-0.487696,8.176705,-6.505270,4.345539,4.744934,-2.573631,1.865373,-4.978055,2.476831,-8.735659,1.006137,3.295804,-4.925232,-7.980204,3.434093,-6.980865,9.238215,-0.118836,-1.159723,2.095537,2.755539,-0.549741,4.926101,-8.682293,6.687736,3.314480,-1.940900,2.388378,-8.305008,5.495187,1.091258,4.118363,1.981451,-3.471508,6.492170,-3.815653,1.938182,1.443598,4.162225,-7.835214,8.780053,-6.761809,-1.309641,-2.350277,9.315218,-6.893140,2.299720,4.056892,5.200096,-1.696123,3.855992,2.449517,2.745697,9.306721,-0.343772,-5.086143,-6.931495,-9.900617,-1.104176,6.814776,-2.081790,-7.798585,7.174211,9.794316,3.981223,7.347443,-8.415424,-3.537652,4.819927,-2.166718,8.584914,9.294233,3.171125,-4.265051,-9.413457,2.636189,8.523763,0.015143,2.744856,2.150788,-7.608070,-1.004382,-6.459024,6.733107,-6.058414,4.942196,-4.155872,5.874971,-4.333934,9.451670,5.965689,-2.088297,-0.287398,1.879277,-7.279375,-4.729466,6.834968,0.380013,1.691752,-1.947784,-3.993818,5.946177,-6.870655,6.771160,-2.499190,-6.823266,6.092566,-0.385692,-3.922921,-4.299609,5.626378,9.337050,2.667192,-6.054480,8.912394,-4.193322,-9.106477,-7.424671,1.705618,-7.552047,-6.397741,5.621300,4.540888,3.395053,-5.013521,-3.209994,0.366328,-8.183667,-2.145903,8.133962,2.767171,0.386899,-2.644661,4.995671,3.353292,5.107756,-6.593000,-2.719218,4.349816,5.077164,9.108135,1.479826,2.277482,3.230514,-8.684559,-4.330595,-5.037904,2.474978,9.065684,-3.666961,-9.704918,6.547216,4.113955,-3.627642,8.897815,-2.622655,9.797656,4.915711,0.850938,-2.801412,-2.807120,-2.791663,1.879834,1.582694,-1.040807,6.858169,2.481729,4.904174,-1.270874,4.730250,1.894701,-8.219685,7.795231,3.078944,-6.528901,-0.485892,-8.821060,-0.359875,6.431695,6.282859,9.277328,-7.974278,3.875985,8.398537,-4.376870,9.973573,-5.926409,-6.263838,-8.859563,0.078454,-5.950960,4.851330,-9.114256,-3.344512,4.075603,8.751258,-2.001117,8.609296,3.892648,-8.148435,-1.065260,0.156669,9.093940,-1.159037,8.104061,6.850022,-1.586738,1.074959,-0.882260,-4.418103,5.427468,-5.342957,5.749480,3.395735,9.694486,-9.757759,9.883766,-4.189239,-9.550450,-1.259003,-4.647576,6.666622,-0.414896,5.578380,-7.350500,-6.200700,3.556797,0.201779,6.334905,6.744138,-0.191072,-8.975574,6.691301,3.014008,9.795077,-7.213644,2.270427,-4.634754,-5.888933,-2.345369,0.369136,-4.503806,9.443944,-0.467400,-3.331870,3.543717,3.726526,-1.200936,6.300775,-2.554105,-7.346684,-1.252751,-6.239516,2.090933,9.901067,6.766237,9.233628,1.289053,-9.406011,6.957515,-4.816230,0.488535,-3.962741,-5.556796,3.970912,-5.857960,4.918844,1.598072,-1.139782,-2.659262,-9.470903,-7.694559,9.787196,0.613372,7.382766,-5.787968,0.110675,-4.860825,-9.511967,7.673817,4.976258,6.436199,4.259781,9.120574,1.351662,5.817801,9.349344,5.616332,3.539556,-2.081894,8.571700,-0.436961,8.022759,-9.214214,-5.724342,4.696963,-8.200047,-3.927504,-3.184000,4.141853,-4.761976,4.049883,-0.953848,-4.638051,0.954665,8.797356,-2.169289,-3.172707,-3.131981,6.412857,-2.106757,-2.985705,9.597800,-0.410917,-2.234036,1.425242,-3.876342,5.190819,-5.558703,0.891877,-1.179077,-6.738018,-2.110999,-0.740749,-2.233179,9.010917,5.862251,2.211919,3.296580,-1.733266,8.354838,-9.719494,-6.492196,-1.150113,0.868013,4.283399,-7.277152,-6.713256,-5.400405,2.396048,-2.579999,1.901119,8.802597,-9.823507,3.685222,-6.741190,6.456808,-7.531844,-7.242615,-7.845860,-1.668063,-6.005390,5.184794,-6.003824,5.892502,-0.090348,-2.129309,0.092731,-9.978463,-0.347441,-7.815665,-2.469004,8.267980,-5.649745,-3.070184,-5.160098,-6.234365,4.440341,8.453099,5.872451,-2.490074,6.923061,7.114207,-1.265347,-1.413054,2.240206,0.265802,-1.917343,7.919267,0.351973,4.968195,-4.207191,-0.645331,-8.843188,6.108482,-1.210336,0.709010,8.121269,3.014998,4.520940,-3.710034,-8.672827,-5.682166,0.232913,7.875001,8.501883,-0.656647,-5.066331,-5.206794,-2.838765,-2.398235,7.476916,-7.059898,2.753284,-8.144912,-9.614858,7.411061,-0.835653,6.012913,9.723433,-9.738551,-4.430364,2.531570,3.420394,8.550542,8.428627,4.141822,3.937932,0.571932,3.561521,3.887166,2.747115,-3.969200,7.783532,6.083151,7.814307,8.902131,-3.128098,-2.052027,-4.105683,8.804093,-7.675057,-2.142041,9.695857,-6.856478,2.955824,-6.732041,-3.185278,7.424540,-8.247820,4.457970,-9.119465,7.019541,4.527301,0.322898,7.477113,5.632408,6.422491,-6.153040,-2.454495,9.236203,-2.115413,-9.004461,-5.490150,-4.456463,-8.250174,-5.245861,5.896808,9.583821,-4.056196,-9.498659,1.354464,5.327364,-9.611906,2.880303,-0.820238,-6.325717,-6.042375,1.765312,-7.220079,-2.397986,4.076664,-6.460715,-8.594080,5.802691,-4.003777,1.354089,-4.358566,-3.625951,-9.173362,9.939173,-8.811121,8.125079,-7.438752,4.330738,2.736530,2.105944,0.235728,4.674903,8.157257,-2.822084,-9.658273,1.466369,-1.697688,0.663726,-0.720511,5.914964,4.035946,6.886076,3.062009,-9.724838,-8.689815,-8.352968,7.317892,-5.308950,-9.387735,-9.203255,-8.688694,3.867145,7.281250,8.069476,8.787242,-8.594824,4.390720,-2.519952,1.920262,5.882211,-3.518486,0.412714,7.496097,-6.159649,-0.100431,1.584527,1.739292,0.064343,6.670053,-2.044200,0.121466,3.049902,-9.509598,1.546079,2.147316,-9.749550,-3.584968,3.611559,4.042388,-8.935938,9.552658,-7.281426,-9.236708,2.738999,-3.295942,5.599676,7.490717,-6.175955,-1.360836,3.655387,9.516184,-6.727376,0.447423,3.926291,6.545403,-3.188552,6.841680,7.425018,-7.719165,-1.759636,-1.843809,-6.730915,-2.619315,-4.697459,-2.340475,-9.042213,9.902018,-1.804355,2.648092,7.768788,2.748035,3.454879,-5.629599,-5.031163,1.075935,1.637611,-6.586784,2.171622,-4.619925,-2.550951,7.255385,-3.919603,4.140783,0.406689,9.714039,9.427624,-7.498457,5.970387,-6.813359,7.548061,-7.695066,7.271633,-8.464077,-8.856136,-9.818068,-4.321635,6.008368,-0.436359,6.106726,0.409672,-5.819181,5.105627,3.739130,6.312209,-9.548339,-2.302001,7.273491,-7.703658,-0.618217,4.016275], dtype = "float64")#candidate|5549|(1664,)|const|float64
call_5548 = relay.TupleGetItem(func_689_call(relay.reshape(const_5549.astype('float64'), [13, 8, 16])), 0)
call_5550 = relay.TupleGetItem(func_691_call(relay.reshape(const_5549.astype('float64'), [13, 8, 16])), 0)
output = relay.Tuple([uop_5532,call_5545,call_5548,const_5549,])
output2 = relay.Tuple([uop_5532,call_5546,call_5550,const_5549,])
func_5551 = relay.Function([var_5526,], output)
mod['func_5551'] = func_5551
mod = relay.transform.InferType()(mod)
mutated_mod['func_5551'] = func_5551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5552 = relay.var("var_5552", dtype = "int32", shape = (3, 10, 12))#candidate|5552|(3, 10, 12)|var|int32
func_5551_call = mutated_mod.get_global_var('func_5551')
call_5553 = func_5551_call(var_5552)
output = call_5553
func_5554 = relay.Function([var_5552], output)
mutated_mod['func_5554'] = func_5554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_5556 = relay.TupleGetItem(func_1229_call(), 0)
call_5557 = relay.TupleGetItem(func_1231_call(), 0)
output = call_5556
output2 = call_5557
func_5561 = relay.Function([], output)
mod['func_5561'] = func_5561
mod = relay.transform.InferType()(mod)
output = func_5561()
func_5562 = relay.Function([], output)
mutated_mod['func_5562'] = func_5562
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5586 = relay.const([[[-9.551774,1.485623,-9.535084,-6.802937,-3.604491,-0.035448,-5.968324,-9.533060,2.791944,-7.149220,1.931880,-8.640732,5.574551,8.559492],[-4.636150,1.509556,-0.371818,-2.425850,1.431565,6.747503,-2.488675,-5.685204,-7.708300,-7.147414,-9.124982,5.978782,0.415058,9.878638],[2.646747,-8.148953,8.921888,-2.282877,-1.594366,-4.526461,6.535819,-0.125714,3.133438,-2.969133,1.273620,3.790520,-1.858421,5.184033],[-0.815478,-4.700110,0.524238,-4.900061,-1.150213,-7.170423,6.793748,-7.619730,3.738586,-3.483645,6.512685,-2.272649,3.103681,7.204712],[-2.184285,1.105822,2.789590,3.120105,-7.563131,5.312523,-8.971929,-0.875320,-3.994337,0.987333,8.779429,-2.513821,-6.805461,7.654445],[-7.375094,1.335282,8.806543,8.272627,-3.873489,1.957457,-2.575592,-8.631948,-6.390053,-7.930037,0.608794,-7.887178,-5.668100,-3.639277],[7.494263,-7.675863,-3.642050,7.967968,3.059960,-8.313815,9.588372,-5.730758,-1.528928,-0.723941,7.574200,5.901815,-1.744723,1.252193],[-2.528889,-5.195885,4.315955,6.712793,-5.974499,7.792315,9.005545,-2.570443,1.379613,4.219599,9.521263,1.383722,-1.395847,1.821394],[-6.850078,1.600307,-1.633111,2.946466,8.189932,2.755031,4.845623,3.378425,-4.646634,6.239981,-5.117315,1.606443,-8.848566,2.258496]],[[7.536499,-8.943612,1.243795,-6.135615,2.030274,-9.133795,-6.980397,-7.955461,-6.166165,6.091996,2.661591,9.954354,6.511634,3.762864],[3.053862,-7.120114,-1.971290,-2.806637,3.373633,0.580100,-6.590911,7.725032,-6.344721,-6.908070,4.098302,4.335789,-0.221278,-6.586495],[-0.115027,-7.002484,-2.363706,-1.127280,2.776938,2.319200,-1.037784,4.265321,-7.686945,8.495500,-4.380816,1.359545,9.891905,3.329866],[7.658232,7.556275,6.177601,7.747648,3.389102,-8.842491,8.679431,8.682989,5.854027,-6.877144,9.494685,-2.467042,-4.248968,1.251563],[-3.380430,7.753882,-5.354643,8.243536,-7.086133,-1.404045,8.801358,-6.088468,-8.080263,-1.383397,-3.991438,6.232231,-4.618912,-9.267906],[5.082486,0.776970,-3.624955,-3.842286,3.208571,-7.630414,-2.623984,5.315066,-7.044056,-8.936912,7.187360,-5.904131,-1.474360,8.392328],[8.233892,2.451876,3.777209,-8.228542,6.892009,1.593269,3.219328,4.718433,-5.237587,2.336592,-6.183732,8.382089,-2.221244,-3.966026],[5.595506,1.639031,1.924411,6.112326,9.530312,-2.590645,-2.211924,-5.614269,2.153429,-5.997659,-6.749808,-7.766621,4.581343,8.706936],[3.836991,-9.214685,6.984877,5.659529,-5.476498,-3.931705,3.708130,0.224338,-2.703605,2.402819,7.461289,2.754191,2.636237,-7.988374]],[[9.057564,-3.062011,3.691653,6.192118,-4.509836,8.162048,9.266399,6.385232,-7.091803,2.277571,-6.100547,3.102209,-5.985861,8.270041],[-4.541869,-8.471871,9.964583,2.156276,-1.994240,-2.030569,0.634739,4.232702,8.950195,1.254273,1.778176,-9.484440,1.277125,7.563030],[-9.835079,7.433727,7.315487,-4.062598,-7.220545,6.914831,-6.946615,-8.279429,-1.660001,-2.259217,-3.462109,8.493107,-2.239856,5.336566],[3.870741,4.786986,3.594354,4.911128,7.887583,-0.257243,6.343420,-6.587640,0.537315,1.724116,-0.086665,3.225568,-2.736128,0.375657],[-0.517412,-9.790117,0.541030,3.925933,5.265277,5.609852,-1.884433,-8.331844,-4.986634,7.824672,2.483761,7.715112,-0.211107,-7.820868],[0.218420,-4.815210,-7.517093,-2.818299,-0.987822,4.270535,-6.426589,-5.467538,-1.831270,-8.439943,4.285864,-5.349372,-3.279773,5.853617],[-7.865021,9.117895,7.998395,0.383025,0.982953,6.494136,0.958349,7.410829,-8.531905,-4.725109,-1.630551,6.040721,-2.369481,7.619357],[4.510602,6.104985,-3.684089,2.527393,-6.749150,-7.951804,-4.620038,-8.135814,-3.384183,2.635765,1.983339,3.879544,-2.220198,-8.124977],[-1.956763,-9.161799,-1.354272,2.719783,-6.391797,-1.758633,7.093307,-9.627112,-4.852982,6.635285,-5.167746,5.393793,-9.580577,-6.723615]],[[0.521150,5.669370,-7.393973,8.778307,5.175686,1.295015,-1.782164,7.605645,-9.430827,3.140188,-8.998625,1.728570,-9.098184,-3.772055],[7.352378,4.008587,1.949326,-2.062425,-6.732129,-4.674794,-2.244302,-3.215662,5.484633,-7.738959,6.428072,8.173770,-7.758937,1.530077],[8.754503,4.711659,-5.773953,-8.105199,5.851768,8.335967,-3.317134,-5.456319,0.643527,0.278118,-7.765386,0.172507,-4.595648,0.102826],[9.430036,7.534893,-9.703435,-0.721849,1.865646,1.074683,8.882002,2.467336,-7.485680,6.708703,-1.329448,0.201789,-1.015498,-8.726062],[9.277599,-5.249296,-4.561516,4.643935,-0.025467,1.606654,-8.725837,0.024231,9.101070,-2.008878,-8.099284,-4.275670,-4.254187,0.318620],[-9.079740,8.092379,9.977694,-7.602842,6.990066,-5.089072,6.917754,-7.436361,-2.549582,-1.395114,-9.356446,-0.201312,-6.004979,2.918409],[-4.144095,6.255875,-4.899351,-4.461595,-7.850845,-7.086744,-6.635261,-6.360934,-9.167439,-1.166766,-8.590387,6.406239,4.557479,7.017297],[-2.802083,-6.656850,3.122465,0.274727,8.216467,3.469907,-6.985304,4.686103,-2.104724,7.332255,-7.329071,-4.587397,-0.159736,8.905069],[4.229531,5.269045,2.000249,-1.849636,2.055104,5.573098,1.599563,8.847012,-1.592959,-7.315719,-5.402917,6.032475,3.817898,6.716492]],[[5.152261,3.473513,0.830956,-2.561392,8.077006,3.501290,-5.322660,8.000092,6.988056,-5.431197,2.882089,-8.311900,-4.230594,5.278271],[5.022758,4.659427,1.546471,5.525300,7.771974,-1.448972,-4.443214,7.667294,-4.149567,-5.452661,6.819664,5.601295,-7.793383,-9.622674],[9.290254,-9.251407,-3.206079,-7.680494,0.335068,-1.888537,7.330133,3.362783,-8.100002,8.215823,8.169819,-4.185450,-0.435025,8.510952],[-9.669442,8.568572,4.938338,-7.324549,6.271114,-1.166105,8.002958,4.077572,7.846986,-7.392737,9.312541,-3.599712,-7.072426,-3.909824],[-0.389884,9.013010,0.648267,-4.318425,-0.996023,9.772906,8.227173,-4.198335,-7.196587,-1.544867,-0.553655,-3.045663,-6.670439,-4.621089],[3.983475,3.266600,6.415830,-5.866086,3.214912,2.429071,-1.125031,0.685857,-6.329460,-9.347628,4.942733,-4.359891,5.406377,6.261983],[9.766604,-4.637644,-7.632965,-4.578822,-9.638679,2.939111,-7.244960,-9.226482,2.115026,-1.985061,0.813640,-1.857911,5.575732,4.513405],[1.449684,-3.113083,-5.689641,-2.666505,-4.257423,-4.601983,4.258423,-2.066169,9.383619,-9.247849,-9.037885,-3.172440,4.910066,-4.058551],[-4.714320,-4.244268,6.158940,-0.460043,2.870333,-7.726327,-3.961373,1.420094,-4.255477,2.411007,-6.746588,-2.436836,-7.320374,-6.468226]],[[-6.113783,4.773930,-5.699456,-4.567414,-8.383693,-3.602715,5.374191,-1.959414,8.859313,-5.180860,7.857194,9.040172,6.236383,5.583199],[3.798572,-9.277259,-1.371345,-2.819363,0.360925,-3.150295,7.625684,1.362895,-8.845947,-7.423946,8.025993,4.219604,-4.332475,-5.025474],[6.661491,-4.360438,-0.620854,-0.476782,-8.289355,4.483426,4.248519,8.382685,-4.838997,-0.855720,-4.226828,6.206850,3.546931,3.207611],[9.011064,2.200967,1.021390,5.810079,-4.452760,-9.603795,-8.036030,-9.382855,-4.097259,2.358831,5.479622,9.759505,-9.657099,0.591859],[2.932038,-5.853657,8.047384,5.204426,6.406597,-9.637532,-1.848115,-4.782725,-2.872937,0.766892,-4.661312,-4.992511,-4.084347,-9.929026],[-6.907934,-3.746596,-5.620111,-5.121664,-1.041761,-1.261597,4.767922,-4.225787,0.336720,-4.430653,9.641290,-0.971980,-6.843092,6.106362],[-1.350061,-5.349563,-4.511946,9.306734,8.572713,-2.982291,9.854736,2.329633,9.332291,9.380335,-2.632291,-1.236103,6.892121,8.244838],[0.559061,-9.298423,-3.614001,-3.730660,9.992012,9.546841,-0.020509,-4.236214,-9.778375,-5.253603,6.485783,4.313378,7.259542,-4.128178],[-8.941227,0.690791,-2.717701,-0.004285,-9.031458,8.754902,-9.265674,-1.228157,-3.508034,-7.985355,-0.039216,-5.587792,-9.985027,2.320162]],[[-3.459561,-7.922895,6.641853,-2.378321,7.224252,1.649641,-2.094886,7.366585,2.214680,5.970681,7.447855,0.100606,-0.586178,9.834377],[6.949980,-9.947208,-3.232193,-6.768618,-8.695700,-3.490279,5.837278,6.626408,-5.297397,-7.911007,-8.171551,-0.573140,-2.099394,0.571883],[5.650221,0.720349,9.461910,-1.484273,2.605924,-7.360890,-9.117822,3.278512,-0.219321,5.625653,-9.648818,-5.862318,9.308199,-9.561936],[-2.269382,-6.242586,-2.167244,-9.289699,3.655163,-6.555427,-1.314037,8.611206,7.159360,-0.808995,4.715719,-3.947425,-8.673675,2.310802],[3.864422,4.810749,0.330812,-0.475658,4.851662,-9.264664,9.369540,7.940319,5.021064,-1.044877,-8.728615,-1.538327,-7.534741,2.885262],[0.562421,-0.175234,-8.795805,8.612399,6.919783,8.324494,-6.823021,-8.139925,-8.485090,3.696902,-9.689924,-0.370503,3.561847,-4.806089],[-1.118088,-8.900285,-1.671692,-7.748930,-1.485126,5.998855,9.335310,-6.548650,-3.764343,-8.319818,6.088681,-2.561570,2.618967,-9.947598],[3.954211,1.637037,-7.028866,1.450889,-2.683333,4.383952,6.768595,9.637721,2.604095,7.740212,-8.698002,7.617421,0.892334,2.759949],[-4.177443,3.387003,-6.664999,8.774852,-8.685718,-6.651400,8.998496,3.300601,-8.358421,2.270317,0.509532,0.742845,-5.220875,2.507883]]], dtype = "float32")#candidate|5586|(7, 9, 14)|const|float32
uop_5587 = relay.sin(const_5586.astype('float32')) # shape=(7, 9, 14)
output = uop_5587
output2 = uop_5587
func_5594 = relay.Function([], output)
mod['func_5594'] = func_5594
mod = relay.transform.InferType()(mod)
output = func_5594()
func_5595 = relay.Function([], output)
mutated_mod['func_5595'] = func_5595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_5602 = func_4535_call()
call_5603 = func_4535_call()
output = call_5602
output2 = call_5603
func_5641 = relay.Function([], output)
mod['func_5641'] = func_5641
mod = relay.transform.InferType()(mod)
output = func_5641()
func_5642 = relay.Function([], output)
mutated_mod['func_5642'] = func_5642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5482_call = mod.get_global_var('func_5482')
func_5484_call = mutated_mod.get_global_var('func_5484')
call_5646 = relay.TupleGetItem(func_5482_call(), 2)
call_5647 = relay.TupleGetItem(func_5484_call(), 2)
var_5656 = relay.var("var_5656", dtype = "float64", shape = (15, 13, 3))#candidate|5656|(15, 13, 3)|var|float64
bop_5657 = relay.left_shift(call_5646.astype('uint32'), relay.reshape(var_5656.astype('uint32'), relay.shape_of(call_5646))) # shape=(15, 13, 3)
bop_5660 = relay.left_shift(call_5647.astype('uint32'), relay.reshape(var_5656.astype('uint32'), relay.shape_of(call_5647))) # shape=(15, 13, 3)
output = bop_5657
output2 = bop_5660
func_5669 = relay.Function([var_5656,], output)
mod['func_5669'] = func_5669
mod = relay.transform.InferType()(mod)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5670 = relay.var("var_5670", dtype = "float64", shape = (15, 13, 3))#candidate|5670|(15, 13, 3)|var|float64
func_5669_call = mutated_mod.get_global_var('func_5669')
call_5671 = func_5669_call(var_5670)
output = call_5671
func_5672 = relay.Function([var_5670], output)
mutated_mod['func_5672'] = func_5672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_5711 = func_2469_call()
call_5712 = func_2469_call()
uop_5713 = relay.rsqrt(call_5711.astype('float32')) # shape=(13, 8, 16)
uop_5715 = relay.rsqrt(call_5712.astype('float32')) # shape=(13, 8, 16)
func_3746_call = mod.get_global_var('func_3746')
func_3749_call = mutated_mod.get_global_var('func_3749')
const_5724 = relay.const([5.487613,1.270253,2.141925,3.689174,9.859679,-0.179709,1.331657,-9.539637,-1.829537,-3.273130,-7.168930,-1.348616,-8.592436,-0.810009,5.051041,-4.643285,-0.019394,8.854388,6.795551,-4.637532,3.970220,7.065185,1.606958,-8.138704,-8.608774,-6.358872,-3.927460,8.967990,9.965684,-1.022658,-0.224058,9.140031,4.915541,-9.205712,-5.564775,1.252671,7.172776,-8.251327,-4.564583,-3.380100,5.459334,2.377457,5.262223,-2.141389,1.744967,-2.470687,-8.013144,-1.800177,-4.492685,-3.995801,-0.270231,-6.315908,-8.413652,-1.924061,5.739612,4.519819,7.245121,-9.651350,4.406656,-2.867788,-8.465216,-0.227291,-9.576111,-9.569954,8.991918,9.956946,-1.541810,6.256445,-0.377196,2.164942,-8.957285,-9.738838,6.617505,9.904355,-9.707680,1.758676,-4.552105,3.887900,8.245069,0.238540,-2.073102,-0.585391,6.247317,6.646599], dtype = "float32")#candidate|5724|(84,)|const|float32
call_5723 = relay.TupleGetItem(func_3746_call(relay.reshape(const_5724.astype('float32'), [12, 7])), 0)
call_5725 = relay.TupleGetItem(func_3749_call(relay.reshape(const_5724.astype('float32'), [12, 7])), 0)
output = relay.Tuple([uop_5713,call_5723,const_5724,])
output2 = relay.Tuple([uop_5715,call_5725,const_5724,])
func_5727 = relay.Function([], output)
mod['func_5727'] = func_5727
mod = relay.transform.InferType()(mod)
mutated_mod['func_5727'] = func_5727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5727_call = mutated_mod.get_global_var('func_5727')
call_5728 = func_5727_call()
output = call_5728
func_5729 = relay.Function([], output)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5804 = relay.var("var_5804", dtype = "uint64", shape = (6, 11, 6))#candidate|5804|(6, 11, 6)|var|uint64
const_5805 = relay.const([[[2,4,6,7,-2,-2],[9,-7,2,-2,-6,2],[1,10,4,6,3,7],[8,5,7,4,3,-4],[5,-1,-5,1,-9,-4],[6,9,1,-9,2,-9],[-1,4,-4,-1,6,-2],[-7,7,-3,6,-2,-9],[3,-2,-3,-3,-3,10],[-5,6,3,2,-10,5],[-9,-3,10,-4,1,7]],[[6,-8,-4,6,-9,9],[-10,-3,10,-6,-3,-10],[2,-3,1,-6,-7,-5],[3,10,-4,8,-2,4],[3,10,10,6,-7,4],[-8,-4,5,7,1,-1],[-6,8,-4,-9,4,-10],[1,-6,-2,6,-1,6],[-2,-1,8,-9,-5,-4],[1,3,-5,2,6,6],[-10,-1,-5,-4,-7,3]],[[9,2,10,2,-1,9],[-7,-2,10,-4,-10,-1],[9,5,10,-3,-9,4],[3,3,2,-8,6,1],[-7,8,9,4,5,-6],[-7,-6,6,-8,-8,2],[4,9,1,-5,5,8],[3,4,1,-2,10,7],[-10,4,-3,-9,8,6],[-6,-8,6,-6,9,-8],[-1,1,2,7,10,-1]],[[-2,3,-6,9,-1,6],[-4,10,-4,6,-1,-9],[4,7,9,-8,-8,-1],[9,8,-9,-9,7,-8],[10,-10,-8,5,5,5],[-10,5,3,2,-5,2],[-7,7,-10,6,-9,-2],[5,9,7,-2,-9,5],[-2,-2,1,1,6,-1],[2,-8,-6,-8,-6,-9],[-2,-2,-7,-3,-7,-5]],[[10,6,3,4,-5,-6],[1,-9,2,-3,-8,-7],[5,-5,-6,1,-8,4],[2,-9,-8,-9,-1,-7],[-8,-9,-7,-3,-8,-5],[3,-2,2,-2,-4,3],[-6,-3,3,-1,-2,7],[-9,-2,-3,5,2,6],[-5,-8,9,-1,6,-3],[-3,7,-5,5,-7,2],[3,-5,-7,8,-1,-1]],[[10,7,-3,2,-3,3],[5,1,-6,-3,4,-3],[1,3,10,4,3,3],[-2,-3,-7,-2,-4,-8],[9,9,-1,2,-6,6],[8,-3,3,-6,4,-7],[-4,3,3,-8,3,4],[10,8,3,-1,5,-10],[1,-3,-5,-5,-1,-9],[-10,-7,-2,8,10,-9],[1,-2,3,7,9,-10]]], dtype = "uint64")#candidate|5805|(6, 11, 6)|const|uint64
bop_5806 = relay.multiply(var_5804.astype('uint64'), relay.reshape(const_5805.astype('uint64'), relay.shape_of(var_5804))) # shape=(6, 11, 6)
func_3380_call = mod.get_global_var('func_3380')
func_3382_call = mutated_mod.get_global_var('func_3382')
call_5815 = relay.TupleGetItem(func_3380_call(), 1)
call_5816 = relay.TupleGetItem(func_3382_call(), 1)
output = relay.Tuple([bop_5806,call_5815,])
output2 = relay.Tuple([bop_5806,call_5816,])
func_5818 = relay.Function([var_5804,], output)
mod['func_5818'] = func_5818
mod = relay.transform.InferType()(mod)
mutated_mod['func_5818'] = func_5818
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5819 = relay.var("var_5819", dtype = "uint64", shape = (6, 11, 6))#candidate|5819|(6, 11, 6)|var|uint64
func_5818_call = mutated_mod.get_global_var('func_5818')
call_5820 = func_5818_call(var_5819)
output = call_5820
func_5821 = relay.Function([var_5819], output)
mutated_mod['func_5821'] = func_5821
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5852 = relay.var("var_5852", dtype = "float32", shape = (16, 1, 2))#candidate|5852|(16, 1, 2)|var|float32
uop_5853 = relay.atanh(var_5852.astype('float32')) # shape=(16, 1, 2)
bop_5855 = relay.greater_equal(uop_5853.astype('bool'), relay.reshape(var_5852.astype('bool'), relay.shape_of(uop_5853))) # shape=(16, 1, 2)
uop_5859 = relay.acosh(bop_5855.astype('float64')) # shape=(16, 1, 2)
func_1078_call = mod.get_global_var('func_1078')
func_1082_call = mutated_mod.get_global_var('func_1082')
var_5864 = relay.var("var_5864", dtype = "int64", shape = (112, 4))#candidate|5864|(112, 4)|var|int64
var_5865 = relay.var("var_5865", dtype = "uint8", shape = (5, 150))#candidate|5865|(5, 150)|var|uint8
call_5863 = relay.TupleGetItem(func_1078_call(relay.reshape(var_5864.astype('int64'), [448,]), relay.reshape(var_5865.astype('uint8'), [1, 750]), ), 3)
call_5866 = relay.TupleGetItem(func_1082_call(relay.reshape(var_5864.astype('int64'), [448,]), relay.reshape(var_5865.astype('uint8'), [1, 750]), ), 3)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_5874 = relay.TupleGetItem(func_804_call(), 0)
call_5875 = relay.TupleGetItem(func_806_call(), 0)
func_313_call = mod.get_global_var('func_313')
func_314_call = mutated_mod.get_global_var('func_314')
call_5879 = relay.TupleGetItem(func_313_call(), 1)
call_5880 = relay.TupleGetItem(func_314_call(), 1)
bop_5884 = relay.greater(uop_5859.astype('bool'), relay.reshape(uop_5853.astype('bool'), relay.shape_of(uop_5859))) # shape=(16, 1, 2)
func_1379_call = mod.get_global_var('func_1379')
func_1383_call = mutated_mod.get_global_var('func_1383')
var_5899 = relay.var("var_5899", dtype = "float64", shape = ())#candidate|5899|()|var|float64
var_5900 = relay.var("var_5900", dtype = "float64", shape = (2184,))#candidate|5900|(2184,)|var|float64
call_5898 = relay.TupleGetItem(func_1379_call(relay.reshape(var_5899.astype('float64'), []), relay.reshape(var_5900.astype('float64'), [12, 13, 14]), ), 3)
call_5901 = relay.TupleGetItem(func_1383_call(relay.reshape(var_5899.astype('float64'), []), relay.reshape(var_5900.astype('float64'), [12, 13, 14]), ), 3)
func_2424_call = mod.get_global_var('func_2424')
func_2427_call = mutated_mod.get_global_var('func_2427')
const_5906 = relay.const([[9],[-5],[-5],[-6],[3],[7],[8],[4],[8],[-10],[-3],[-6],[3],[-7],[-9],[7],[-2],[-6],[1],[3],[4],[9],[-7],[-4],[9],[5],[4],[10],[9],[6],[-2],[-7],[7],[1],[-7],[-2],[-6],[3],[-6],[-10],[2],[-6],[-7],[6],[6],[5],[4],[2],[7],[-1],[-10],[5],[8],[1],[6],[-6],[7],[7],[-10],[1],[6],[4],[7],[-5],[-1],[-9],[1],[-9],[4],[10],[3],[2],[-2],[5],[3],[-10],[3],[-1],[1],[-7],[2],[5],[3],[-2],[-6],[-1],[-2],[1],[2],[-6],[4],[-4],[-9],[1],[10],[-4],[7],[-4],[5],[-9],[10],[-2],[-3],[-4],[8],[1],[-7],[3],[9],[8],[4],[-10],[1],[-3],[-1],[7],[-4],[-4],[9],[1],[-10],[-1],[7],[-3],[-8],[8],[2],[4],[3],[10],[-10],[7],[-6],[-1],[9],[-6],[6],[5],[1],[-2],[10],[-2],[-9],[6],[4],[9],[-4],[9],[5],[9],[-4],[2],[2],[5],[-7],[4],[-8],[-10],[5],[-10],[3],[-4],[-6],[-7],[1],[-7],[-10],[-6],[8],[6],[10],[-3],[-10],[-7],[6],[-3],[-7],[-5],[10],[-5],[9],[7],[-1],[-10],[4],[-4],[-9],[5],[9],[-4],[9],[5],[-6],[8],[2],[6],[-5],[1],[-6],[5],[-10],[-6],[-10],[-8],[-3],[4],[-10],[8],[9],[2],[1],[-3],[1],[-2],[-6],[8],[-8],[2],[-7],[6],[3],[-2],[9],[10],[5],[-9],[10],[-3],[-7],[-7],[-2],[8],[-1],[-9],[-3],[8],[5],[10],[9],[-1],[-2],[3],[2],[2],[-8],[2],[-3],[-9],[1],[5],[-3],[9],[-5],[1],[8],[10],[-2],[-9],[-6],[-6],[9],[-4],[8],[-9],[1],[4],[-8],[-1],[3],[9],[-4],[9],[-2],[2],[1],[-2],[-4],[5],[10],[-3],[-9],[-7],[2],[-2],[-10],[6],[9],[-1],[8],[-1],[-1],[-1],[1],[-9],[9],[4],[-10],[9],[-8],[9],[-1],[3],[-2],[5],[10],[-1],[8],[6],[-6],[-10],[6],[7],[4],[-10],[-6],[-2],[5],[10],[-4],[9],[8],[-2],[2],[6],[2],[6],[-2],[6],[8],[10],[-8],[-10],[-10],[2],[5],[7],[-3],[-2],[9],[-4],[-5],[-1],[-3],[3],[-6],[5],[5],[-6],[-8],[-10],[-2],[-8],[8],[-2],[9],[-1],[8],[1],[10],[3],[7],[9],[5],[-9],[-4],[8],[6],[4],[8],[-4],[-4],[3],[-7],[-5],[10],[-5],[8],[-9],[7],[-8],[6],[8],[-1],[-7],[-8],[8],[-6],[-6],[-7],[1],[9],[-2],[-8],[-9],[-8],[-8],[2],[6],[10],[-4],[4],[2],[3],[4],[1],[7],[9],[-8],[-2],[-4],[6],[5],[-9],[1],[4],[-8],[7],[10],[-2],[-2],[-8],[-2],[10],[-8],[8],[3],[7],[2],[-6],[-5],[-8],[1],[-5],[-9],[-3],[-9],[-10],[2],[2],[4],[-3],[4],[4],[-5],[-8],[-3],[3],[6],[-2],[6],[-6],[8],[5],[-7],[9],[7],[-8],[-1],[-8],[3],[7],[4],[7],[-10],[5],[-6],[-1],[8],[-4],[3],[6],[-7],[-2],[7],[5],[5],[7],[9],[-1],[2],[-5],[8],[3],[-1],[1],[-2],[5],[-3],[8],[-6],[3],[2],[-3],[3],[2],[-4],[6],[-4],[-8],[-5],[9],[9],[-7],[-1],[-6],[7],[-8],[-7],[-9],[-7],[-6],[9],[-2],[10],[-6],[-2],[4],[-10],[-6],[7],[8],[1],[-2],[1],[9],[-4],[8],[6],[4],[4],[2],[-6],[-7],[-1],[-7],[-7],[2],[-3],[6],[-8],[1],[-1],[-3],[2],[4],[-9],[2],[-5],[4],[-6],[-4],[-8],[-8],[-3],[-4],[-1],[-10],[7],[-9],[3],[5],[-2],[-9],[-9],[-2],[-4],[5],[5],[2],[10],[-8],[2],[-3],[-3],[7],[6],[8],[-2],[6],[10],[6],[6],[-3],[-5],[-10],[10],[7],[-8],[-2],[-3],[-9],[-3],[-8],[5],[-6],[-3],[6],[-4],[-2],[-5],[-7],[10],[8],[4],[-1],[9],[5],[-6],[-8],[-8],[6],[7],[-1],[-3],[1],[5],[3],[-1],[5],[9],[10],[5],[-9],[-2],[-2],[3],[10],[-9],[2],[-3],[-10],[-2],[6],[-3],[9],[-7],[9],[6],[-5],[-7],[9],[-4],[-2],[9],[7],[-9],[-10],[9],[4],[-7],[4],[-2],[7],[3],[8],[-6],[9],[-3],[5],[5],[4],[6],[-4],[-10],[-6],[1],[-10],[-3],[5],[-7],[-5],[10],[-5],[7],[7],[-9],[-7],[-6],[3],[-9],[-10],[1],[7],[7],[9],[5],[-8],[-1],[7],[2],[-1],[4],[-9],[9],[6],[-1],[2],[8],[-5],[1],[10],[-1],[8],[9],[2],[-9],[4],[3],[4],[3],[1],[8],[-7],[3],[3],[7],[10],[10],[-10],[5],[-2],[-4],[-8],[10],[-10],[3],[1],[5],[8],[-10],[-3],[-4],[3],[-3],[5],[-4],[2],[5],[-5],[-1],[-10],[-6],[-8],[8],[2],[6],[-5],[10],[-4],[-10],[1],[-6],[-1],[1],[6],[1],[-10],[8],[10],[3],[4],[-7],[10],[6],[10],[-3],[-9],[4],[-1],[-6],[-8],[-4],[5],[-6],[8],[7],[9],[-10],[3],[4],[-1],[6],[7],[-9],[-4],[-5],[1],[-1],[-3],[-1],[6],[-2],[4],[-5],[7],[2],[-8],[7],[-6],[-4],[-1],[-3],[8],[9],[10],[-2],[-10],[3],[-8],[10],[-10],[5],[-1],[-3],[-9],[5],[6],[2],[-1],[7],[3],[-10],[-6],[4],[5],[-1],[-8],[-5],[1],[4],[-5],[-9],[9],[4],[4],[-3],[-1],[-7],[-10],[-10],[9],[-10],[-10],[-6],[2],[-10],[-10],[-5],[4],[-1],[1],[5],[-1],[-8],[5],[3],[-9],[-1],[-7],[9],[-6],[4],[10],[7],[1],[10],[5],[3],[-8],[-4],[8],[7],[2],[6],[2],[9],[-4],[3],[4],[-6],[1],[-6],[-3],[-2],[-1],[4],[-6],[9],[-8],[9],[2],[-7],[1],[-10],[4],[-10],[6],[-1],[7],[10],[10],[9],[6],[7],[-5],[-3],[4],[-3],[1],[-2],[1],[-8],[-9],[6],[2],[4],[-9],[-9],[-1],[8],[-1],[-10],[10],[-2],[9],[4],[5],[7],[-10],[-10],[6],[-4],[4],[-1],[-10],[-8],[-9],[-7],[-4],[-7],[-2],[-2],[-2],[-3],[-9],[-7],[-4],[3],[6],[5],[-2],[-6],[3],[-7],[-4],[-1],[5],[7],[10],[2]], dtype = "int64")#candidate|5906|(960, 1)|const|int64
call_5905 = func_2424_call(relay.reshape(const_5906.astype('int64'), [16, 4, 15]))
call_5907 = func_2424_call(relay.reshape(const_5906.astype('int64'), [16, 4, 15]))
output = relay.Tuple([call_5863,var_5864,var_5865,call_5874,call_5879,bop_5884,call_5898,var_5899,var_5900,call_5905,const_5906,])
output2 = relay.Tuple([call_5866,var_5864,var_5865,call_5875,call_5880,bop_5884,call_5901,var_5899,var_5900,call_5907,const_5906,])
func_5918 = relay.Function([var_5852,var_5864,var_5865,var_5899,var_5900,], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
var_5919 = relay.var("var_5919", dtype = "float32", shape = (16, 1, 2))#candidate|5919|(16, 1, 2)|var|float32
var_5920 = relay.var("var_5920", dtype = "int64", shape = (112, 4))#candidate|5920|(112, 4)|var|int64
var_5921 = relay.var("var_5921", dtype = "uint8", shape = (5, 150))#candidate|5921|(5, 150)|var|uint8
var_5922 = relay.var("var_5922", dtype = "float64", shape = ())#candidate|5922|()|var|float64
var_5923 = relay.var("var_5923", dtype = "float64", shape = (2184,))#candidate|5923|(2184,)|var|float64
output = func_5918(var_5919,var_5920,var_5921,var_5922,var_5923,)
func_5924 = relay.Function([var_5919,var_5920,var_5921,var_5922,var_5923,], output)
mutated_mod['func_5924'] = func_5924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3737_call = mod.get_global_var('func_3737')
func_3738_call = mutated_mod.get_global_var('func_3738')
call_5961 = func_3737_call()
call_5962 = func_3737_call()
output = relay.Tuple([call_5961,])
output2 = relay.Tuple([call_5962,])
func_5978 = relay.Function([], output)
mod['func_5978'] = func_5978
mod = relay.transform.InferType()(mod)
output = func_5978()
func_5979 = relay.Function([], output)
mutated_mod['func_5979'] = func_5979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_940_call = mod.get_global_var('func_940')
func_941_call = mutated_mod.get_global_var('func_941')
call_6022 = relay.TupleGetItem(func_940_call(), 2)
call_6023 = relay.TupleGetItem(func_941_call(), 2)
func_5482_call = mod.get_global_var('func_5482')
func_5484_call = mutated_mod.get_global_var('func_5484')
call_6030 = relay.TupleGetItem(func_5482_call(), 2)
call_6031 = relay.TupleGetItem(func_5484_call(), 2)
var_6035 = relay.var("var_6035", dtype = "float64", shape = (15, 13, 3))#candidate|6035|(15, 13, 3)|var|float64
bop_6036 = relay.power(call_6030.astype('float32'), relay.reshape(var_6035.astype('float32'), relay.shape_of(call_6030))) # shape=(15, 13, 3)
bop_6039 = relay.power(call_6031.astype('float32'), relay.reshape(var_6035.astype('float32'), relay.shape_of(call_6031))) # shape=(15, 13, 3)
var_6058 = relay.var("var_6058", dtype = "float64", shape = (15, 13, 3))#candidate|6058|(15, 13, 3)|var|float64
bop_6059 = relay.subtract(call_6030.astype('uint8'), relay.reshape(var_6058.astype('uint8'), relay.shape_of(call_6030))) # shape=(15, 13, 3)
bop_6062 = relay.subtract(call_6031.astype('uint8'), relay.reshape(var_6058.astype('uint8'), relay.shape_of(call_6031))) # shape=(15, 13, 3)
func_2307_call = mod.get_global_var('func_2307')
func_2309_call = mutated_mod.get_global_var('func_2309')
call_6069 = func_2307_call()
call_6070 = func_2307_call()
output = relay.Tuple([call_6022,bop_6036,bop_6059,call_6069,])
output2 = relay.Tuple([call_6023,bop_6039,bop_6062,call_6070,])
func_6078 = relay.Function([var_6035,var_6058,], output)
mod['func_6078'] = func_6078
mod = relay.transform.InferType()(mod)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6078_call = mutated_mod.get_global_var('func_6078')
var_6080 = relay.var("var_6080", dtype = "float64", shape = (15, 13, 3))#candidate|6080|(15, 13, 3)|var|float64
var_6081 = relay.var("var_6081", dtype = "float64", shape = (15, 13, 3))#candidate|6081|(15, 13, 3)|var|float64
call_6079 = func_6078_call(var_6080,var_6081,)
output = call_6079
func_6082 = relay.Function([var_6080,var_6081,], output)
mutated_mod['func_6082'] = func_6082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_6177 = func_1504_call()
call_6178 = func_1504_call()
func_1447_call = mod.get_global_var('func_1447')
func_1451_call = mutated_mod.get_global_var('func_1451')
const_6183 = relay.const(-9.419683, dtype = "float64")#candidate|6183|()|const|float64
const_6184 = relay.const([-7.341867,-0.968340,-5.320725,-2.088664,-4.384063,-6.159509,7.742455,-6.264384,1.080437,6.759315,-8.428937,7.880811,-8.174697,-3.005023,1.650261,-8.125365,-3.934287,-0.726851,7.639293,4.263312,3.180521,9.722712,-6.023100,1.452740,7.095634,-0.450422,5.726886,9.765815,-0.797743,4.636730,5.763332,5.550787,-6.132521,-7.922139,-3.429167,6.282924,3.925477,-2.301015,-4.920314,5.405907,-5.615662,2.229405,-7.455839,-0.992671,-7.023712,-9.147924,8.395488,-9.335789,0.818161,4.462640,-0.806045,0.325896,7.681705,6.908379,-2.163846,-0.423292,2.695477,-3.498228,-0.611478,-3.839966,-6.855279,5.334187,-2.384321,9.116634,-7.785205,5.065622,5.552920,6.174169,9.678991,-1.615117,4.174036,-1.237941,-5.695778,-4.502249,4.609597,-5.462791,-3.275789,-5.629514,2.975306,-8.030842,-2.556312,-0.249421,5.537617,7.447426,1.745203,-0.014322,-2.871264,9.992021,8.988654,8.369010,-4.072161,-1.421863,7.174555,2.320292,-4.718615,4.976690,6.896165,-9.614643,7.025112,5.422489,9.213804,4.748850,8.017914,-2.381390,6.027580,7.458272,7.258096,-7.391129,-7.761190,6.546062,8.041206,-4.422164,9.664083,1.870458,-5.058332,9.142106,-5.987406,8.892589,7.517464,-9.667888,3.289444,-8.318371,5.583280,-8.244385,-2.142241,-2.230051,-8.180347,-6.489298,9.669796,-7.431832,7.688808,1.132507,-5.520097,3.156913,5.732316,-1.809683,2.017533,0.736695,0.611852,4.954896,-8.796864,-5.169649,-1.426419,-0.358695,-9.616947,4.898819,-0.934088,-6.932367,9.265704,-3.077580,6.684250,5.781064,4.466915,-2.705845,-6.650864,-0.224996,7.517633,6.058939,6.970340,-9.787246,-6.844043,4.599085,-1.594282,-0.151970,8.987219,-4.879900,0.557032,-2.905509,8.011602,-1.594775,-7.201297,-1.099782,3.788965,4.544430,0.181494,-4.540739,7.148655,-0.200779,9.663994,1.252051,8.982319,-7.614457,4.103160,6.157386,2.444300,3.247814,-1.219926,2.534776,1.895004,-8.352738,-4.969327,6.779304,5.213258,-5.730013,-6.240827,0.666114,2.869759,-0.184368,-8.230142,0.579307,2.149325,6.599075,-7.934275,3.563497,2.965666,-4.857194,1.184858,7.322662,9.888076,0.841301,0.308503,2.158735,-4.109345,-0.120519,0.733404,-6.354220,-7.598767,-7.042165,6.835312,-8.361437,-6.422425,-8.127106,-0.822854,-5.422763,4.936941,1.202708,-0.144641,-2.215596,2.300700,-4.775486,-1.271381,9.944959,-4.728111,-0.521369,-0.274307,0.691957,5.032484,-5.210029,6.927063,-3.022953,-3.352811,-6.819802,-0.297563,-0.089870,5.010072,7.399467,4.895057,-2.106391,-6.149596,3.971630,8.437296,8.092833,3.186087,5.609932,-6.171538,4.533897,4.012037,-8.824312,-3.490048,4.507148,9.563996,-8.071085,-7.865306,-5.955279,3.144951,7.754386,-0.014374,2.071923,-8.322853,1.110674,-6.859657,9.142039,-7.364699,-6.209721,-6.307654,-5.699106,-2.869782,0.513629,0.690156,1.364497,1.428454,1.351039,-5.967343,3.665824,6.910650,8.281673,-4.466626,-7.407280,-8.551996,2.093228,-4.645184,-7.959526,-2.897685,5.552636,-2.334209,-2.284090,1.692749,8.327337,7.793119,-3.698320,0.506153,-4.426066,8.693330,-7.534990,0.779000,-9.988397,5.388461,-7.304669,-5.358509,6.836286,3.555844,0.576790,-6.792132,-8.416256,7.796982,-8.343973,-8.209270,-6.633415,7.597352,-7.440741,5.187061,0.566956,2.834267,-1.238840,9.319944,-2.920315,-9.674845,-7.935262,5.036777,-6.085518,0.514061,3.951447,1.952378,8.693346,1.201473,-3.679783,4.226478,6.942766,5.835882,-9.169520,-6.396638,1.124271,-6.360167,7.137381,-5.850069,8.809126,-5.831511,-0.959175,-4.376913,8.261623,7.196498,-1.551598,2.944413,7.435417,-9.495423,4.163977,9.452312,5.392017,-6.341490,2.603807,-1.962279,5.374578,5.631197,-8.071714,1.993044,0.942411,0.334474,5.972632,-2.190175,-9.258270,7.730050,0.110176,-9.129774,-3.659382,0.760457,-3.669958,-6.396705,-7.501033,5.070643,-6.718933,-8.067426,0.337868,5.967667,-8.180596,8.222739,-8.368857,9.516625,0.541200,-5.202176,-8.230149,7.174049,0.930258,-5.419802,-5.615419,5.362921,6.074737,-6.666443,0.172322,4.517342,7.805505,-5.518157,9.256072,3.970745,-1.211302,4.589536,9.874394,3.437464,-7.493278,1.318862,3.664528,5.390874,-6.662094,9.310772,-3.665352,-6.576846,1.775397,4.976301,-4.962912,-2.004503,4.204637,6.222739,-8.756332,0.465824,2.531742,5.843241,0.108396,5.694219,9.923075,-0.933568,2.979277,8.364642,4.961291,-9.526893,-9.186587,-9.609557,-4.435883,-1.358219,-2.176468,0.138782,-2.289927,-1.230308,-7.562564,-2.832843,-4.259788,8.220402,3.704164,0.033176,5.633733,-4.877926,-5.298791,5.987076,-7.029769,8.799887,-6.732731,-2.122708,-8.878384,-8.818565,-0.932696,-4.676802,7.879870,4.589702,-3.583046,-9.280683,-8.622482,6.337274,5.510939,7.832070,6.643185,6.041154,7.628060,-2.904912,-9.937472,-3.144933,8.007900,-4.773218,-3.709421,3.565405,-2.015196,5.664120,-3.376611,5.233903,9.741298,-5.353424,4.646022,-6.650143,5.798228,-2.250239,-3.118814,8.713010,7.010624,-7.034156,6.229355,6.140942,5.155633,-0.796792,7.269418,-7.238249,-6.442545,1.933033,-1.873561,-7.288255,8.936958,2.100224,-0.717076,6.778995,-5.142516,4.025515,-7.577182,1.369847,2.777287,6.778752,7.318534,-2.772923,-7.068661,-9.580039,9.462885,9.389347,3.345311,-2.978267,7.103242,-6.840050,-9.395216,4.359858,-6.815651,-2.597931,-0.845512,-0.103476,0.786400,7.938350,9.425583,-9.543616,-2.874999,9.733441,2.582835,9.048016,5.371170,-8.899178,-6.672332,-8.067124,8.444681,-0.968786,6.250654,4.509227,8.685431,-6.883668,-7.370986,-7.027553,-3.769275,1.333291,8.267257,-7.595560,-7.685772,-2.388145,-2.736376,0.593830,-5.840750,4.215213,-3.423310,-1.806099,7.270966,-5.652660,-8.271353,4.609760,-4.518723,-0.350832,7.353064,2.640342,3.607079,-6.163425,-4.155532,1.677709,-7.528842,-6.865401,-0.163789,-8.231615,-7.051491,5.371341,2.547741,8.589997,5.550615,-1.677487,2.065617,-6.326593,1.129884,-0.070625,-2.051210,-7.384653,9.062974,-1.925368,-4.833290,5.739741,7.340187,1.357705,0.812624,1.565760,-3.149060,-5.219271,7.457306,-0.760480,4.258157,-9.302310,3.481574,-8.448504,-6.821985,-2.086891,-8.028892,8.057136,-8.968152,-1.083245,8.384228,8.522825,6.196982,8.252391,-2.825100,-1.100441,4.070756,-0.613186,9.985201,9.120471,4.254073,-2.838923,9.375481,1.917293,-6.474151,-8.038211,0.472941,7.742137,0.577994,9.493618,6.288562,3.651380,5.502558,3.356157,3.055076,-0.072271,-3.118974,-9.126923,-5.850729,9.428452,8.205095,-2.714951,5.688067,-8.091592,8.934870,8.496479,5.955379,9.313858,-8.604753,5.545834,8.893970,-6.699208,3.311252,5.913488,-2.451367,-9.059118,-7.381978,9.107792,5.228709,-7.741448,0.257021,4.854350,8.300355,9.095322,6.608605,6.389262,-9.329489,-2.747069,-2.528501,6.202810,-5.524147,-4.050139,8.122621,8.761585,1.294710,9.151376,9.230000,3.801402,5.393152,-8.287812,-3.400375,2.214673,8.190548,-9.565717,7.520185,-2.499939,0.432351,5.779104,-1.943453,5.800776,-3.354300,5.500105,2.862220,-6.992971,2.837860,9.709059,-9.636401,5.047522,-0.617912,2.759779,9.196771,-8.023162,7.890353,6.542164,-0.633373,7.931287,6.288248,-8.696439,-7.075352,7.252596,4.713148,1.109200,6.086405,3.724579,-5.659769,-0.803633,-0.109880,-5.323034,-4.705345,-1.845038,9.148290,0.815497,-2.114888,2.116330,1.513985,-2.946954,-5.344323,-6.960340,-5.012146,2.182357,6.093281,1.300831,-4.397836,7.132479,5.666284,6.641063,9.353797,-8.859069,-6.738285,-2.206600,-4.987951,-6.437751,-4.986085,5.806811,-4.907547,7.289234,-6.049155,-7.283805,5.103116,9.464012,3.741740,1.668503,7.743555,-2.288646,4.407845,7.271110,2.965680,-9.120391,2.077777,7.965169,7.119516,0.563289,5.528789,-5.974767,9.631656,8.243939,3.300403,4.654437,-2.946522,-7.765427,7.047635,-5.427717,-2.310762,-9.274778,-8.413116,2.108223,3.442221,4.118030,-7.009247,6.047455,1.271240,-6.996967,0.800564,2.016688,6.821319,7.959578,-8.410006,-2.817475,1.569849,-3.369626,-4.001838,0.327874,-7.374301,-0.853288,-1.137847,-0.577170,-6.028636,-5.266059,-7.593057,-5.421223,-0.132529,-2.854100,2.810207,1.511696,-1.140791,-2.850813,3.005303,-3.911556,-1.758696,2.664515,-3.627735,-2.979934,-4.170012,-0.737331,-3.396784,4.840107,-6.239449,5.270133,-2.767016,-6.375413,-3.591753,1.927029,-7.857889,4.064045,-9.053525,-9.743840,-0.594540,2.558007,0.629763,-7.515456,-9.771698,-7.486595,0.467005,-6.099897,-4.573454,-4.622169,2.537792,6.663293,9.142237,-8.028167,8.534090,-1.113898,6.396429,-4.603507,2.939870,8.022700,-0.796470,7.457089,9.945473,5.594604,-3.061047,1.770476,9.280803,-7.387886,9.021955,-1.689740,4.458220,7.367309,0.216700,6.600454,-7.151560,-0.932417,5.283727,-8.688836,-0.494611,-8.192594,-1.659515,-0.207978,-0.687676,-9.979359,-5.358063,-5.909880,-8.909889,-0.757207,-8.060061,-0.427047,-9.460335,2.664373,-7.983137,6.768532,-9.984333,-7.592093,0.625354,-3.637266,7.755494,4.891321,-0.420065,7.842654,0.195642,-4.949909,2.395706,-1.043890,3.657138,1.468325,-7.081870,-7.981995,8.189273,1.083153,-5.492688,-1.367467,-8.262608,2.763491,-8.615288,7.882480,-1.646793,4.218563,7.406744,-5.607028,3.859205,-2.653563,-9.180189,-3.725706,2.112017,-8.948371,-9.556332,6.977538,-4.521946,6.934743,9.813777,3.801451,-0.250141,-0.010398,-4.320323,-1.787587,-9.555923,1.507735,-3.957378,-3.989467,8.790948,7.711322,-0.991864,3.391748,0.008171,7.509889,6.216974,-7.501799,3.800764,2.413264,7.391025,3.075853,6.444861,-4.272886,7.773572,4.328167,9.470943,-9.793993,-5.028420,7.915172,-8.728159,-1.956231,6.902980,5.594882,4.250735,-4.184957,-9.520484,9.215263,4.325927,0.758244,-5.179627,5.453637,2.324798,8.865955,5.135484,6.290135,1.808895,-0.921176,9.916714,6.479906,-4.660709,1.149853,-9.408688,-5.751719,0.209760,-7.835000,8.272877,9.582325,3.279815,-3.591004,1.572349,-7.277609,0.550334,7.900978,-2.980972,-8.753420,7.702540,3.503238,-2.467705,9.518308,-1.878689,6.549485,9.630580,-3.064904,-4.252678,-2.269317,1.088003,-5.307807,1.977133,0.844893,0.322052,-6.975911,4.636536,-0.233654,-7.616248,1.517731,7.911726,-0.328565,-3.729553,7.226369,3.290452,-3.709467,-2.469168,9.069619,2.619313,0.690349,-3.539037,7.280403,0.822041,7.439165,3.055530,-8.955529,-4.298799,8.540898,-9.399456,5.966134,-8.018135,-2.631958,-1.684841,-8.707116,-4.206692,-9.000453,-9.266745,-9.142734,0.115089,5.829982,6.425745,1.606267,-7.476853,-4.207127,5.216395,-0.983014,7.465978,-5.774423,-8.932119,3.696204,-4.548921,-1.583479,0.880848,4.700680,-1.749550,3.143343,-0.694727,5.218548,-8.690026,7.015041,6.378997,2.760938,-9.663283,2.577953,6.867389,9.231218,-4.098622,-3.901227,6.144261,8.657076,-5.765881,4.942791,6.510248,2.730629,-7.457251,-7.864499,-0.024810,-5.064711,6.416784,2.186570,4.216796,5.190786,-6.611536,6.431216,6.515576,-4.186975,-4.408126,-1.664795,-6.040831,9.643380,9.824830,9.348990,1.700056,-2.905683,8.014984,5.579706,6.813112,-8.951972,-7.390119,2.403632,-9.368206,6.304945,6.704119,6.394162,8.935841,-2.506193,-9.478072,-0.169628,7.225738,-7.413559,4.217909,0.186915,-3.673492,-7.470452,-0.696501,-4.096471,8.886491,0.162044,-4.255120,4.934242,9.441533,-5.684093,2.698338,3.437532,5.678586,2.828557,-9.842380,5.061587,-0.588899,4.965434,7.349199,-4.343381,-1.140420,5.275101,-4.410999,-8.923651,-4.433267,8.336393,-7.387215,5.535834,-5.672310,-4.647826,0.990723,-8.987023,8.726849,-8.339595,2.643660,-9.028855,-4.920074,-4.875333,-6.869656,-7.167439,3.788695,-0.030390,2.237915,-4.214128,-5.676226,-1.589777,-6.836980,5.588383,-4.740553,6.111234,-1.973185,7.705899,6.513209,0.559868,9.086855,8.377238,9.899246,-9.083792,0.617710,1.795620,3.737786,2.878925,-5.520211,8.536031,4.390671,-1.817219,-1.523874,-8.235740,-6.175092,7.325185,-5.395488,-6.559242,-7.226262,-3.151508,1.357651,3.808166,9.016355,4.409246,-9.931611,-0.258409,7.301792,3.189622,5.851208,3.100293,-7.400994,1.571454,9.007011,-3.834974,-3.990008,9.274953,-4.509021,-6.430469,-2.400111,7.450545,-4.705280,-4.412756,6.400829,-8.526985,4.076574,-5.732245,-8.970515,-0.039892,9.297937,-7.800567,1.334444,-4.812360,-5.649313,5.226714,-8.313619,4.867007,5.702290,-1.671100,-2.724956,1.137292,-9.153647,2.843362,6.468254,6.149861,-9.921625,-1.480702,9.097988,-7.410010,6.246963,-5.736841,-4.312813,-4.251137,8.901166,-8.429450,0.934185,-6.281777,9.211160,9.690026,8.134481,-5.076557,-4.388924,-3.272664,1.704233,3.171377,-0.631099,-1.488594,-4.221418,-6.572376,7.859420,1.059580,-1.309906,-7.734923,5.813844,-7.458044,-2.854791,-3.371858,4.835664,9.070171,0.627853,0.818770,-8.474605,0.321180,4.739478,7.216333,-6.430443,7.015212,-5.030190,8.115159,6.095321,-1.055389,-3.608457,-1.614105,9.555189,-8.445614,2.384031,2.122991,4.288195,-3.020449,-9.888597,5.247245,-3.426142,-1.426677,-4.075127,-1.726718,9.165754,-1.305984,5.890440,-0.292435,-0.399271,-2.750479,-1.327952,2.839033,-0.163629,-6.286569,4.717209,2.220147,3.693688,-6.610101,1.574266,8.234293,-8.204274,-6.356744,5.692978,-0.619488,4.554774,0.787294,-3.178923,7.173905,-0.118744,-5.935697,7.845261,1.069155,0.191552,6.635012,-4.488720,9.713329,-3.572152,-3.186942,-4.321012,5.766424,5.694613,-3.648190,5.370234,-0.789388,3.909153,-4.883271,7.276864,1.237006,9.568641,0.104528,-5.634717,-8.465942,9.984366,-6.140070,-2.766568,7.228349,-7.609914,4.228679,-9.168015,4.178884,-7.700682,-3.833887,6.473500,-4.617007,-0.719712,-8.007800,3.418488,5.449068,3.428802,-3.983908,6.769733,-4.927513,5.666850,-6.816912,0.663395,-0.225696,2.105998,1.506838,-7.686524,7.390279,-7.422422,8.038182,8.681736,-3.433082,-0.790356,-2.010206,-3.082090,6.125221,-9.390619,9.449503,0.475842,-9.586129,6.168696,2.764657,1.109170,-2.048513,-7.407511,0.786294,4.077262,9.728517,3.488097,4.621619,-6.184828,4.149977,-2.787727,-9.396202,-4.953546,-0.175937,4.957336,-3.171234,4.930380,-4.879292,-4.237404,6.585227,1.624170,-9.265876,-0.946927,-7.595113,-4.516423,7.286335,0.029329,9.231632,-2.930489,8.444780,2.903969,6.107178,-3.588940,1.614823,3.937250,-4.846849,0.241653,2.642385,8.324654,-1.285621,-6.238755,-1.508090,5.433916,8.418334,-1.929508,7.652713,-2.082586,-8.504153,-9.088359,-4.184875,-1.497106,-3.792996,2.386892,8.927307,-0.935290,-2.333951,5.131105,-9.461152,-9.673761,8.519551,-6.967441,9.647009,0.759320,7.105167,7.236560,6.484858,6.514961,0.160102,-8.147657,7.898632,-0.769074,2.338298,-4.796433,-2.950106,7.917324,3.732298,3.495861,6.536957,-5.981265,-4.334463,-5.705134,6.195174,-2.296043,-0.986296,4.396261,8.470976,1.573978,-1.827117,-2.079550,0.714195,-2.226661,9.383782,4.003292,-4.025559,5.892120,1.864293,-2.965158,8.003490,2.466883,2.882694,2.876881,-4.506417,8.394056,2.893216,3.640534,-6.300322,0.682925,8.187567,-1.756778,6.159331,4.277839,7.512128,1.988005,-5.229922,-0.426113,-0.591802,-3.909428,-4.840098,4.876757,2.759391,-9.234757,-6.948864,4.524276,-3.203894,1.688339,6.565115,-8.007124,-8.534502,-4.304238,-9.506808,3.072374,-8.791165,3.417863,5.359369,-6.397831,-4.932441,-3.288529,9.032294,-1.394165,2.446657,3.403894,-6.186942,4.618740,4.750397,2.679802,-4.361318,-0.912388,-1.417259,-2.847676,-0.013084,-4.758111,6.827815,6.091970,-8.985699,9.471415,5.182549,4.726790,-8.906309,3.359700,-9.854588,-2.793094,8.623955,1.530702,-8.882030,3.237662,7.877628,4.245025,2.841330,8.017960,0.605661,6.877942,3.836343,-4.517174,-9.241388,6.840509,5.962012,5.483832,3.020066,-0.965055,-4.174468,-6.792830,-7.923427,3.981684,9.053567,3.715807,0.434098,2.906345,7.630954,-3.892225,5.436314,-0.290846,7.452381,5.471272,9.629898,9.749964,-7.378158,1.749407,6.587765,-3.695214,6.729017,2.469243,-6.602370,8.584837,3.792339,3.419206,9.724965,1.265190,-9.970263,9.681830,-7.291883,0.220097,5.563961,1.048200,3.468103,1.274620,-4.076858,3.712020,9.564915,-9.457540,2.151663,-2.787287,-7.226432,2.180241,-6.269725,-3.188849,7.804724,5.603377,-3.224743,-0.328210,-1.541200,-9.591977,-0.567861,-4.911098,-8.089387,-9.901908,-1.464329,-1.766728,-3.969225,6.110240,8.725743,-5.331072,-7.464972,9.706249,-2.778841,-0.815801,7.039420,9.558739,5.686605,1.312529,0.099391,9.612474,-9.295869,-1.209273,0.470999,-0.117608,8.854362,-7.518311,-2.223560,-5.571925,3.764619,-8.863159,0.788647,-5.404230,7.455269,-1.818509,-3.034820,-3.310798,7.654311,2.021788,1.804162,8.961600,-5.311199,-3.184558,2.734381,-7.511012,2.663486,8.637516,-0.800567,9.447305,-2.864143,-6.026282,9.106724,0.121713,4.099211,-4.907201,-7.665738,9.356908,2.262938,-7.877918,-6.122825,5.974194,9.295076,-6.543047,-7.549109,9.455040,6.839922,3.434077,-1.044876,-1.356302,-1.601147,-0.972304,-7.439041,0.009998,2.950191,8.774119,-5.066103,-9.741858,5.867359,-7.990702,-1.233250,-3.459521,5.430687,7.854266,2.753113,-4.097152,-4.166453,-4.230495,-3.177051,-6.555922,6.352243,-8.611400,-0.132251,2.258096,8.414991,7.730519,5.699498,-7.032192,-9.415365,3.960020,2.119698,5.391632,-9.011231,-9.836581,3.020329,6.167072,-1.519532,9.350230,-9.121202,6.354537,-9.509815,7.384347,-7.580951,-3.634780,2.394036,-9.185465,5.724539,-5.272478,-1.632989,6.839381,7.968316,-5.880035,-1.322029,-0.147916,9.738253,-5.782174,6.541431,1.307863,5.777651,-9.285320,7.348385,4.293018,-0.409572,8.632550,0.905952,-2.986343,2.390757,-5.918552,-2.303405,-8.595925,-6.152092,6.470984,-2.570102,-1.147429,3.416005,6.907493,7.071025,9.981587,-8.047743,-6.838810,0.516365,0.722745,-2.366301,-0.199444,-0.976040,-0.125628,-7.583736,-9.301114,-5.142881,-6.388026,6.006152,1.944192,7.069786,-8.688116,7.126249,7.711034,-7.999564,4.855689,-6.124120,7.508420,-1.599925,-8.978910,-2.311417,3.501907,5.826272,-1.304471,1.077939,5.789331,-6.763189,1.159939,3.104751,0.334855,6.230162,-5.032079,-0.478729,-1.382636,7.845867,3.968143,-0.102001,-7.160116,9.714473,-5.164122,-8.192242,3.513794,-7.542582,-0.988550,1.190903,4.367296,-5.876448,-8.840347,6.053035,3.691793,9.191567,-4.341246,-2.505312,2.706805,7.660520,-4.114926,-2.280757,3.307244,-4.516694,-2.406356,4.330147,-3.667487,3.411200,-7.788488,-6.787058,3.788803,9.360444,5.881643,-9.193951,8.493925,-4.298404,-8.571641,9.462271,1.884064,2.209397,2.948712,0.129573,6.682522,-3.674248,-8.462953,2.082066,4.739339,4.109187,-3.136046,7.186578,-3.034908,-8.111313,-7.801353,-3.027166,2.540158,1.626594,-3.424124,4.092189,5.191130,0.297135,-7.031114,6.438583,5.509297,-9.024144,7.380156,7.464838,5.672517,-7.554242,9.939113,-6.943398,-2.786240,3.443534,-5.872721,-9.413559,7.272264,1.617442,1.105264,9.030686,-4.899338,-9.088730,8.663212,9.140979,4.511771,9.589478,-2.632369,-2.022993,1.646379,3.045148,-1.836692,-8.625736,4.885448,9.967948,-1.511211,-5.033331,-0.622260,-9.043167,-9.920413,-0.479946,3.326855,1.358128,5.178515,6.975491,6.995562,1.585418,-0.381785,6.592729,4.618137,-2.425413,1.799529,-2.953221,-1.024466,-5.123393,-3.512599,-6.484587,-5.173876,5.673612,0.211165,-2.132195,8.545755,-9.145759,9.863357,-6.186670,-2.903440,2.158069,7.950277,5.872773,-3.020090,-7.409935,9.439507,9.081852,-9.546128,0.513219,6.333753,2.525939,5.342071,-3.458069,9.752577,-7.042594,-7.184940,-2.782450,4.048044,5.206752,4.741935,0.857592,-9.287188,-5.369146,0.972403,5.177823,7.882836,-1.028525,-7.082494,-6.814814,4.713393,-9.412114,-4.491857,3.123531,-8.674333,5.255561,-7.000147,-0.328504,2.189796,-9.494040,6.394301,6.309640,-2.787080,9.039623,4.762457,-0.872015,-3.093206,-9.562589,2.040099,0.312705,-5.056273,3.719700,4.832033,8.574214,-5.965752,3.983364,4.025052,8.389794,-8.369056,5.468658,-1.544368,-9.664973,-7.300457,4.786142,-0.638996,9.241755,4.531786,-1.053552,8.080211,-9.205465,5.308149,0.495990,-5.562907,-4.211409,1.713888,-4.562482,2.700562,1.574870,3.325869,-6.271011,7.590433,-5.680036,-8.373725,7.454442,4.464996,-0.427403,9.699553,5.386104,-7.682093,6.467774,1.669320,2.108616,-6.315905,-4.424861,3.284361,-7.315369,3.800212,4.050914,9.940599,1.265632,-8.474326,5.191075,8.618806,-3.955959,-7.568190,3.895459,2.426456,-9.450595,0.750969,-6.243082,1.858937,3.776937,1.916272,8.801361,2.122991,6.439009,-5.590892,-9.121040,-0.736015,1.012782,-1.921399,-5.913160,8.831095,4.472959,-2.350024,6.779724,-6.575632,-5.951544,4.491018,-6.330351,-8.000614,1.569515,-0.460634,-0.957458,-9.211080,3.839810,-1.568129,-1.843181,0.757367,6.839266,5.255629,0.482887,6.829475,-9.075091,8.663386,-3.870495,-8.568440,-9.544284,8.721775,6.767135,-3.761679,-2.850043,4.401760,-6.940949,-2.106228,-7.817492,-0.675469,-3.274703,5.464013,5.825375,0.465224,-4.191240,9.220590,8.998052,4.538548,-9.179459,4.448030,-8.693750,1.210385,3.985860,-6.424484,-7.656805,-6.940307,0.618949,6.054845,-1.129432,-5.184080,-3.272799,-7.643887,-5.126033,8.833083,8.492300,4.771665,3.333214,8.487683,-1.373182,-4.761520,-4.461139,5.083358,-8.141063,-2.468511,-1.690613,8.927101,-6.136636,-6.072727,2.414613,9.273495,-1.090275,-8.318071,-8.358929,6.926753,-7.901324,8.898670,-4.850513,-1.450569,3.206314,2.916483,4.181350,-1.152370,-1.926602,-9.515975,-6.942561,0.260341,-2.529595,-0.064472,7.452465,5.789462,3.299957,-3.255980,-6.001166,-0.124277,-1.297281,4.180931,-8.111847,3.500506,-8.814205,-6.043943,-0.870731,0.280293,-2.919527,3.611039,9.584900,6.745690,9.888517,-7.361177,-2.319066,9.348369,9.361686,-1.834213,-8.662849,-8.144289,5.757317,-5.458476,-3.469965,-8.133259,0.429525,-4.703206,-9.652270,-7.300577,-2.237684,4.624159,1.704466,3.971281,4.075735,7.677080,0.971214,-8.473371,-2.651018,-0.536408,9.499863,1.587243,-1.024212,0.508227,3.119354,-7.729260,8.094931,-7.674009,-1.647590,6.854572,9.355777,-9.375406,-3.946675,2.703948], dtype = "float64")#candidate|6184|(2184,)|const|float64
call_6182 = relay.TupleGetItem(func_1447_call(relay.reshape(const_6183.astype('float64'), []), relay.reshape(const_6184.astype('float64'), [2184, 1]), ), 5)
call_6185 = relay.TupleGetItem(func_1451_call(relay.reshape(const_6183.astype('float64'), []), relay.reshape(const_6184.astype('float64'), [2184, 1]), ), 5)
output = relay.Tuple([call_6177,call_6182,const_6183,const_6184,])
output2 = relay.Tuple([call_6178,call_6185,const_6183,const_6184,])
func_6187 = relay.Function([], output)
mod['func_6187'] = func_6187
mod = relay.transform.InferType()(mod)
output = func_6187()
func_6188 = relay.Function([], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5284_call = mod.get_global_var('func_5284')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_6235 = func_5284_call()
call_6236 = func_5284_call()
uop_6242 = relay.sinh(call_6235.astype('float64')) # shape=(750,)
uop_6244 = relay.sinh(call_6236.astype('float64')) # shape=(750,)
output = relay.Tuple([uop_6242,])
output2 = relay.Tuple([uop_6244,])
func_6246 = relay.Function([], output)
mod['func_6246'] = func_6246
mod = relay.transform.InferType()(mod)
mutated_mod['func_6246'] = func_6246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6246_call = mutated_mod.get_global_var('func_6246')
call_6247 = func_6246_call()
output = call_6247
func_6248 = relay.Function([], output)
mutated_mod['func_6248'] = func_6248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_215_call = mod.get_global_var('func_215')
func_217_call = mutated_mod.get_global_var('func_217')
call_6256 = func_215_call()
call_6257 = func_215_call()
func_394_call = mod.get_global_var('func_394')
func_395_call = mutated_mod.get_global_var('func_395')
call_6260 = relay.TupleGetItem(func_394_call(), 0)
call_6261 = relay.TupleGetItem(func_395_call(), 0)
output = relay.Tuple([call_6256,call_6260,])
output2 = relay.Tuple([call_6257,call_6261,])
func_6264 = relay.Function([], output)
mod['func_6264'] = func_6264
mod = relay.transform.InferType()(mod)
output = func_6264()
func_6265 = relay.Function([], output)
mutated_mod['func_6265'] = func_6265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2908_call = mod.get_global_var('func_2908')
func_2910_call = mutated_mod.get_global_var('func_2910')
call_6270 = relay.TupleGetItem(func_2908_call(), 0)
call_6271 = relay.TupleGetItem(func_2910_call(), 0)
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_6272 = relay.TupleGetItem(func_2752_call(), 2)
call_6273 = relay.TupleGetItem(func_2753_call(), 2)
output = relay.Tuple([call_6270,call_6272,])
output2 = relay.Tuple([call_6271,call_6273,])
func_6278 = relay.Function([], output)
mod['func_6278'] = func_6278
mod = relay.transform.InferType()(mod)
mutated_mod['func_6278'] = func_6278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6278_call = mutated_mod.get_global_var('func_6278')
call_6279 = func_6278_call()
output = call_6279
func_6280 = relay.Function([], output)
mutated_mod['func_6280'] = func_6280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1149_call = mod.get_global_var('func_1149')
func_1151_call = mutated_mod.get_global_var('func_1151')
call_6283 = relay.TupleGetItem(func_1149_call(), 0)
call_6284 = relay.TupleGetItem(func_1151_call(), 0)
func_4585_call = mod.get_global_var('func_4585')
func_4586_call = mutated_mod.get_global_var('func_4586')
call_6293 = relay.TupleGetItem(func_4585_call(), 3)
call_6294 = relay.TupleGetItem(func_4586_call(), 3)
func_206_call = mod.get_global_var('func_206')
func_207_call = mutated_mod.get_global_var('func_207')
call_6296 = func_206_call()
call_6297 = func_206_call()
func_6246_call = mod.get_global_var('func_6246')
func_6248_call = mutated_mod.get_global_var('func_6248')
call_6306 = relay.TupleGetItem(func_6246_call(), 0)
call_6307 = relay.TupleGetItem(func_6248_call(), 0)
func_5918_call = mod.get_global_var('func_5918')
func_5924_call = mutated_mod.get_global_var('func_5924')
const_6326 = relay.const([-7.275131,-5.749524,-4.774721,9.807267,4.095480,-0.046001,7.862586,-1.544954,5.434191,-9.229292,8.884999,8.125026,-2.261579,2.952522,3.529510,5.553854,-4.951095,6.273215,5.223770,2.014538,0.179552,-3.942279,1.118783,6.617698,-9.911445,1.619332,-7.282313,-9.006610,-7.363992,7.760052,-3.585992,5.958091], dtype = "float32")#candidate|6326|(32,)|const|float32
var_6327 = relay.var("var_6327", dtype = "int64", shape = (448,))#candidate|6327|(448,)|var|int64
const_6328 = relay.const(-9.381549, dtype = "float64")#candidate|6328|()|const|float64
const_6329 = relay.const([[1.645985,-7.487481,3.574219,-3.641027,7.762226,7.282940,-9.711338,-7.189404,4.860473,8.924551,7.769490,-0.177559,-1.049281,6.676952,-2.715055,1.742602,3.034957,-4.375235,3.523359,-5.745697,-4.273169,-9.323204,-9.511215,7.420753,6.889758,5.948468,5.173635,-8.312127,2.851320,2.605785,-2.199038,6.813819,-7.437836,-1.856494,-9.228922,-4.591746,-9.358510,-3.975401,-1.008348,0.969732,-4.696196,-9.708091,-2.411632,5.457165,-5.840916,3.952329,-5.972204,-2.719668,-6.524290,-8.809659,1.608697,2.810609,7.828805,-6.145307,-8.328302,1.215849,-5.377671,-3.902098,3.269984,8.076573,-1.927880,-5.645722,0.806667,-9.505079,3.742169,3.662338,5.435760,-3.771119,-8.565874,-2.099810,-9.718507,1.205678,8.756523,1.986366,2.569975,-2.217937,-2.029726,-2.401479,7.870543,6.812076,1.639958,1.823434,-4.437059,-3.383302,8.582841,6.086197,-1.522796,-4.201080,-7.055907,-2.559949,-0.870938,-0.554910,5.776281,9.821567,2.786927,9.147033,0.770564,6.568545,8.526200,-1.221210,4.799770,-5.175383,-0.167762,7.360755,1.807504,-8.306997,5.231253,-3.682747,-9.403270,3.455744,-6.301609,-3.722114,-4.665043,6.443301,3.650961,-1.033732,7.699943,9.505338,2.056471,7.870741,-5.789537,6.806947,-1.618705,0.452913,6.147569,-7.245988,4.147878,4.100543,-1.070543,9.799784,-3.449249,-7.155211,3.488574,0.382296,3.704622,5.514213,-6.024833,9.387935,-6.571577,4.832744,0.270406,3.478145,7.480583,-4.147650,-9.313309,9.895439,3.661706,-8.913411,8.835114,-8.231622,-2.440872,6.561928,-2.239632,1.223310,0.874072,-7.070135,-5.113554,0.815539,-4.789236,-9.301361,-4.545457,8.117673,5.329483,-8.757040,9.452467,2.727248,-8.338454,-5.476309,5.470997,3.058914,9.443105,-4.993471,1.547051,8.551304,0.140695,-1.921321,9.841698,-5.153043,-5.625023,-4.621003,9.962219,0.304610,-0.651280,-5.908887,-7.205131,-1.167264,3.593715,6.141901,-9.876795,-8.485039,-5.444070,7.444693,-6.509491,0.295427,-1.468744,-6.300631,3.524381,3.739740,3.524561,-9.995732,2.401030,1.922993,1.397914,-7.370498,3.476905,1.244409,5.808031,-8.126567,-3.178947,-3.190495,4.144302,-2.871663,9.191725,-7.135758,7.166976,-7.098051,8.724504,1.149591,-2.877979,-4.531000,-9.429250,-5.490675,7.846757,3.494858,-5.249443,-5.009775,-7.593839,-0.263627,4.231322,4.833913,4.210784,8.994548,2.229094,4.233164,-5.090648,-1.729541,-9.045462,7.735749,6.565262,2.380840,-1.052750,3.892075,1.454435,-0.198718,-9.863461,7.637345,2.440122,-0.270717,-4.385717,8.579516,4.327987,2.688806,-2.955756,5.209811,-1.374174,2.684823,7.806624,6.372267,-9.574692,6.786460,9.896979,3.956820,9.147150,-3.547703,5.912058,8.074566,0.744020,-9.732990,4.816457,6.766133,4.133315,-3.477818,6.297041,7.451020,-8.100608,-9.587420,8.994767,-3.737437,6.884946,-5.901528,-5.842583,8.439894,1.066719,8.779417,-3.141231,-4.532257,6.813281,-9.446783,-6.729349,2.110029,-7.461387,9.992518,7.323339,-8.161006,-1.027747,4.639530,-5.060463,-0.511020,9.666008,-7.297336,-3.795008,8.032767,-8.190366,-2.070591,2.605183,7.934951,4.493965,6.235634,-7.868851,4.376256,8.540731,-7.453743,3.976940,6.729800,-7.230637,-9.326026,-7.123539,4.544502,6.119617,5.669514,6.329519,-1.132809,6.233883,7.929089,-5.292017,-5.723507,0.486294,8.513622,0.407782,6.628152,4.106123,-8.492544,2.406533,-2.842566,8.692068,2.917332,-1.224069,0.728680,-9.215912,2.974803,3.926850,-8.446204,-9.608341,-3.103092,-1.006361,-8.370709,1.792281,0.901240,-9.318439,-7.669136,8.661450,-4.001091,6.286538,-4.115690,-4.997094,-4.336870,7.389753,-6.410036,1.693131,-1.104033,7.260777,4.918981,6.031457,4.674751,-8.700275,-8.763154,-2.170920,0.466313,-5.159494,6.897844,1.118296,1.901987,-6.137690,3.567176,-6.352004,7.013197,-3.956108,-1.670410,0.824735,5.163208,3.121134,1.963443,-4.173079,-8.727736,-0.006731,9.046742,8.723045,0.369737,-7.517413,9.720085,-8.097479,-9.629212,7.109753,-7.040095,3.846856,-7.374576,3.644972,-4.043500,-2.889456,3.749454,-6.730978,3.269981,7.888640,9.609520,1.618107,-6.914356,0.386146,-1.449469,6.930977,2.926265,-8.991307,-4.781653,2.514007,5.706212,5.461579,8.966499,1.737498,3.136256,7.465984,-2.490942,-9.720228,-1.478407,-1.480820,-4.609625,4.253925,-4.341781,-6.083070,-1.127038,7.044647,1.870791,-0.297797,-1.092343,6.180103,-9.331016,-1.492335,0.881180,3.310080,-8.623499,-8.293045,8.392170,-2.160208,3.581766,-4.087237,-8.447856,5.897276,-5.130010,-4.890228,8.975459,0.292332,-8.735141,2.700762,-8.935183,6.450649,-8.161589,7.524981,-9.039363,0.700204,-1.949346,1.454063,3.875072,2.004813,-3.130793,-6.271062,9.144608,7.768689,6.414606,-3.725889,6.253741,-1.924977,8.198821,4.413286,2.337164,-1.564792,1.442821,-8.099314,-0.600802,-0.734565,-3.722943,5.694348,-8.898929,7.320171,8.270029,9.278250,-0.162632,-3.982148,-5.618538,7.806326,-9.469323,2.476557,0.044399,-3.099328,2.264524,-9.187804,0.166289,-3.706992,-8.922804,3.355821,9.452032,-9.714395,-5.665547,5.259303,-1.036290,-6.967638,-2.653717,-5.269254,1.824166,-9.600283,-4.127900,-4.804883,-6.840404,5.360794,9.687730,-3.832529,-9.515028,-2.763219,8.309480,6.132302,-1.086600,-3.761842,7.256728,-6.489716,2.010552,-2.881443,5.807816,7.700413,2.135346,-7.857726,5.279210,7.718791,8.642706,-8.100085,5.297950,-3.269914,8.184084,3.204478,-5.926580,9.159063,-9.749651,2.498204,7.718250,7.337524,7.717192,4.932596,-0.798067,-5.451395,-0.902774,-7.806688,-7.359238,8.771673,9.975986,6.695359,-4.245021,8.993446,-8.544598,-7.872386,5.099326,-5.598466,3.354295,0.295667,-4.300563,3.771269,-1.852233,-5.298914,-6.434991,-6.473530,-8.537236,2.584362,-2.096367,3.403926,0.335827,-1.987802,7.217390,-7.179381,-7.009616,-2.764258,9.463090,5.111156,4.037199,1.473054,0.152480,4.588729,8.001402,-1.811377,8.362125,-5.043149,3.532122,5.546428,7.800042,0.190387,1.022723,-8.707341,0.482347,-5.224808,5.692808,9.897095,4.128015,8.480293,7.045333,6.995134,7.991060,-6.332478,-3.908284,-8.007355,3.982776,-0.712813,2.188817,9.660845,-4.526204,-9.425022,4.771203,2.586664,-5.841033,6.727131,-0.597832,9.676685,-9.436697,3.512881,0.768940,-3.280946,9.980635,-9.361769,3.731039,-6.313466,9.667509,-2.137668,-0.608663,-8.103136,-1.579573,-9.452907,-9.192703,-9.736478,8.787776,1.778625,4.986380,5.346282,-1.148810,-8.284406,-7.039284,-6.642430,1.521597,-2.797885,-8.800711,-8.745347,8.355925,8.544919,-8.043528,-2.224949,9.726614,5.326046,-3.283852,-1.164745,-0.786930,-9.435820,6.027583,-6.823975,6.252604,-7.189824,3.989689,-0.136014,7.932048,-6.321317,-9.266331,-0.727801,8.639861,-7.460498,-6.122603,-4.966986,3.424001,8.840076,1.335227,0.397160,9.192128,-0.566419,4.444150,0.380494,5.530089,-7.896342,-1.502013,3.147756,-6.832768,5.172717,-4.843772,2.348654,2.861044,-3.881164,5.870185,0.713741,4.077090,2.909051,6.234773,-4.001892,1.468976,-2.254376,3.114237,3.553143,5.343923,-8.128155,-8.255498,-8.620106,5.237551,1.352571,-1.839145,6.465654,-6.650226,-6.090244,5.995959,-7.796155,-1.235011,-9.788202,8.923788,7.221007,2.058010,-3.816730,-1.840249,6.349041,-4.927635,-7.211884,6.366117,-7.004379,-3.983220,1.034816,0.232990,-6.101068,-6.370045,2.542176,-2.689098,5.440820,0.787242,-4.788681,-8.994832,1.885279,-6.935575,0.977867,0.689713,3.015146,2.497031,6.206458,4.667095,-9.699466,-1.560377,4.750107,-3.445420,-7.983978,-3.513436,2.456595,-1.511516,8.541258,-9.011441,9.503576,4.736398,-6.592028,3.603042,5.466209,0.544412,4.084762,-4.599652,3.333538,7.977379,-6.968795,-5.730996,-2.966307,-0.579679,4.825367,-0.669795,-7.988791,6.258427,-2.007427,-6.588513,8.677681,7.688619,1.177487,9.600987,9.667123,9.206801,9.619866,7.615418,-0.801510,2.390224,2.188676,-0.578452,9.603644,-4.486785,0.169991,-3.412000,-4.305451,1.520790,0.169613,-9.853914,3.456737,-1.849222,0.438323,-7.095375,6.842970,7.595257,7.473356,-5.233164,-3.125472,4.545516,3.566438,-2.949397,0.234081,9.828869,3.565446,9.884134,7.414451,0.824227,-7.460430,1.533604,7.651278,-4.969730,-5.577733,-2.905696,9.107514,-7.262852,6.606838,-8.176012,-8.755165,4.350435,-2.441202,-2.754628,-4.510770,-3.330076,8.821290,-4.988656,9.299639,-6.130162,5.355221,-6.765418,-8.157317,8.306264,9.835904,-6.494696,8.761212,6.094703,3.853462,-8.387168,9.147837,-0.776271,-9.049254,-7.108119,8.608166,4.922554,0.863078,4.842470,3.267592,2.170964,-8.369334,-8.385861,0.546344,3.624875,-5.691046,-7.013925,8.558729,-5.659787,1.481367,9.691905,4.268729,0.970083,-7.976498,-6.220269,5.867511,-3.980706,-1.457105,8.414422,2.871384,-6.102584,-5.802844,9.517396,3.321105,1.262481,-9.703846,5.081646,-4.085352,-6.278216,3.360348,-1.996696,-6.722383,-6.455935,7.410872,-0.257189,4.190032,-2.587410,6.347476,5.278803,-3.361481,8.183592,5.888293,-8.621283,4.909848,-5.254599,-7.370843,7.911780,0.999327,4.567370,-8.019353,5.000836,-7.893422,5.824970,-8.447234,-7.567374,-9.149268,5.586590,-7.118555,4.773444,1.967633,-7.534468,-2.789212,-2.420791,4.187746,-8.814641,-8.048443,1.704159,-2.863141,-6.302624,1.401771,9.584757,2.970017,4.560905,-6.080516,8.866093,-3.586201,4.582455,-6.784464,8.999000,0.883736,9.922558,8.864401,-0.806888,6.034170,-8.928572,3.850544,-6.384799,4.565183,-1.663348,-5.310992,1.196376,0.473016,4.039438,-4.917846,-7.858775,8.737185,1.519421,-2.879197,-4.507050,8.488153,4.514719,-5.834584,9.481175,4.460235,7.282787,6.292838,1.595321,-4.919680,-0.562628,9.303234,-5.772531,-8.836033,3.834887,-4.932892,0.565949,9.745197,-4.756978,-5.204336,0.192175,-2.109194,-3.544249,3.143402,-8.203381,-8.693211,-3.211640,4.139191,-5.477004,3.188085,1.414270,5.084048,7.736580,5.573271,-4.459168,4.031510,3.862996,9.185653,7.907060,0.728847,-4.687293,7.665422,7.703761,6.290313,-1.418588,-6.206054,-6.991200,-1.213237,-3.670792,-8.504366,-4.888762,-7.313603,5.637687,4.406626,-7.371030,-5.752362,-9.130852,2.993890,8.412977,-0.779883,0.953194,5.354238,-8.971723,6.981674,8.426839,-5.005157,7.127392,3.048418,-8.484409,-2.196464,-2.825684,5.858354,-6.293941,-9.254038,5.683962,1.016909,5.050048,5.013375,9.315144,-6.306637,-8.542194,-2.756057,3.538455,-9.125569,-2.081610,-8.571507,4.988860,8.111033,6.628205,2.427425,-3.822982,4.967145,4.902673,-4.384565,-0.504246,0.132335,2.675710,-4.011503,-5.771802,-1.825612,8.917824,5.032518,-8.652433,-0.467575,-4.628515,-7.396910,0.271439,4.381524,-6.927829,5.755960,-5.174605,6.809548,-4.491331,8.758394,-8.058601,3.434853,-8.576403,7.664322,0.263358,-9.160704,0.125001,0.665814,1.624431,-3.740570,-2.042340,-2.669238,-8.344205,-4.967754,2.883752,4.191644,9.699119,-3.003109,1.583516,-5.148579,6.932714,1.135084,7.191383,6.821839,1.988411,7.807161,6.371359,-2.998711,1.542527,-0.401622,-2.773275,5.680291,-7.781415,-1.956860,8.385829],[7.540248,6.839336,7.106272,7.967266,7.387001,-4.177415,-3.114678,-9.138231,-3.420718,9.170937,6.665258,-0.409268,8.438236,-4.967195,1.569855,-5.189824,-9.431674,5.530204,-2.570040,8.237319,2.752727,-3.370428,5.220343,-7.972354,8.477358,7.441718,-3.085649,4.536392,-8.372782,9.278037,9.045538,-4.313607,5.911762,5.973059,-5.953370,-1.918329,4.031586,9.417571,7.938356,-2.906834,2.577947,1.741015,7.935275,6.046561,-4.026517,6.848879,-1.222182,-2.442801,1.582916,-5.326323,-4.041613,5.531409,5.684800,-8.445158,2.439672,7.902034,-0.893230,-8.320087,2.261843,-8.260678,-1.830782,1.684731,9.737813,-3.072919,-5.276071,3.974809,2.127467,-0.473636,9.830432,-2.478125,1.748588,-7.030140,-8.994460,4.577998,-6.655151,-2.066729,-4.401784,-8.564609,0.156313,-0.391561,2.707909,-3.167815,7.776867,7.102195,4.334809,0.929096,-6.084907,6.859917,-4.847109,-9.090517,-0.803250,8.862537,5.771175,-2.298923,-8.434470,-0.062361,-7.982171,5.490611,3.918014,2.467602,-6.511970,9.267683,-5.041838,6.668891,9.456005,7.932511,-7.299702,-2.497661,-9.666996,-2.629716,-2.167071,-6.847928,3.227751,-3.904341,6.299327,-0.063277,-9.353022,-4.576786,-6.021781,8.882615,4.583210,2.579265,0.674989,9.999222,-5.829444,-1.573341,-7.201768,-2.555574,-8.667675,-1.220828,-4.149779,4.378692,-6.571629,4.225076,-9.344136,7.653024,4.068588,6.759197,-7.841554,3.171488,3.204209,7.820894,-0.282850,1.399826,-9.229751,-7.925639,-8.961004,4.903493,0.034622,1.945068,1.819280,-0.123221,3.651145,3.696405,-6.539135,3.066381,8.889682,-6.918769,-0.703735,-5.756434,4.407176,2.461758,8.079312,9.109203,7.692912,-7.823337,1.881144,7.485021,-2.621992,-3.892260,0.545234,-1.259452,4.357241,7.279317,2.677473,-2.298717,-6.454479,-2.871028,6.541676,4.387180,5.021786,7.682455,-3.641846,0.923311,-2.189305,7.471162,2.668174,-6.526333,-6.426416,-5.468732,3.799950,6.755808,-7.756684,2.334285,2.032495,-3.943770,-3.323347,5.358657,4.038877,-4.679618,-6.669025,9.736135,3.393111,-1.457298,0.984342,7.089002,-0.794278,4.117028,0.480796,-9.363807,8.476783,6.746019,-8.562404,-2.931268,3.752977,4.041150,-7.144521,-6.817089,-3.856618,-4.770805,1.283138,2.677223,-8.861551,1.231141,4.084779,-1.604930,-9.792327,6.762073,-2.278846,-3.092608,-9.771365,0.787331,2.251606,-7.766574,0.532191,7.801425,0.819081,-7.376302,2.983249,2.801097,5.502382,7.578339,8.637090,-6.540407,-6.478602,4.866238,6.069647,-7.895122,-5.968443,-0.563769,3.428394,4.081687,-8.123174,-8.185723,4.280029,6.038352,5.777177,-2.179238,8.864392,-3.760104,-3.497729,-0.029674,-9.451559,-8.670434,3.787897,-8.307311,-1.324035,5.580711,8.167442,3.836410,3.447371,8.383485,4.935350,1.904642,9.143452,5.351895,-2.882418,4.051951,-2.037853,5.874241,-9.780941,-7.785988,0.993744,-5.586774,9.289261,7.780379,-0.123114,0.149389,1.378556,-9.345130,-5.215034,-1.480774,5.585229,3.836110,4.792866,1.380381,9.040489,-0.430345,-0.215738,4.401518,-0.504676,-3.996462,-6.131799,7.436497,4.498931,-0.676889,3.014372,-9.598787,-1.819278,-6.482054,-4.884347,7.269002,8.662242,6.368251,-9.531406,1.497909,3.790322,7.432730,4.176825,7.787871,-4.284483,-5.985716,-4.898095,-5.665106,-4.319498,-6.941456,7.938594,-5.245736,-3.540958,-6.454447,5.996118,9.468231,1.062335,-7.166845,6.842429,6.067029,1.921939,8.643214,-8.744748,-7.822270,-6.593224,-4.921967,-9.654700,-8.362432,-1.645389,-0.467731,-5.552865,-9.524685,-4.646084,-7.712376,7.358542,-8.889423,0.164357,-2.926599,0.870934,5.486693,-5.215499,5.765187,-7.243058,4.807700,-6.857882,-9.421719,7.380656,4.291537,9.664874,-0.947481,1.352306,3.355941,-7.909178,7.374066,-4.126714,-2.133055,-8.968549,-7.200022,8.793438,7.546756,2.924010,9.263185,-7.911404,-0.590825,-4.471944,-2.968705,9.329671,2.217088,-0.749524,-4.965730,4.307638,2.863542,-6.048864,-5.122007,1.001836,-2.683338,-9.630383,6.624290,-5.506290,-0.503233,-8.091958,-0.104642,8.228286,-4.701201,-4.622818,-5.951476,9.639504,5.476769,3.569407,8.784533,6.879308,2.636172,2.843299,6.788439,3.410702,9.680501,-5.294086,5.615647,9.007086,5.219698,-0.220360,6.033658,3.145473,-9.244225,-4.320654,6.792993,5.815437,2.049635,-2.589561,-2.842556,1.085875,3.868141,4.389293,8.114476,-1.261339,2.360986,-0.049508,-1.729676,2.901302,5.338073,6.549896,-3.540936,0.455282,8.924308,-4.299019,8.629547,0.740423,3.530538,-7.080123,6.608353,-3.480022,6.207087,7.755816,-9.732008,-5.866396,4.386132,8.501541,-0.755217,8.781140,-0.334761,2.236293,8.017155,-3.656061,-5.122005,2.514452,-8.849846,-7.474224,9.156476,8.122881,-0.389165,6.186835,0.984615,4.608324,0.112488,-5.129361,-1.933339,-9.236634,-8.869244,1.355480,6.132304,7.247940,-7.937690,1.144723,1.052583,7.653192,2.348791,6.451347,1.646603,-6.370988,-9.827357,-1.344725,2.760727,-3.363333,-8.487614,-5.053351,5.624026,8.107568,5.001826,8.982337,5.480461,-8.749733,7.660501,-9.138500,1.425733,5.085103,7.674226,-9.093890,-3.375235,-2.032292,-2.540043,-9.230348,-5.791692,2.461832,1.494207,0.759379,-2.101647,5.356404,3.602062,-0.098844,-7.726749,-2.627595,-6.735541,-1.042108,-7.019648,7.547035,7.357171,-7.985417,3.874530,5.836993,-5.987245,3.981587,6.272082,-9.134838,-3.657026,9.245673,-6.131225,-9.850647,-6.079433,-2.373815,-1.017636,-1.649930,4.609522,3.805039,-3.851131,7.938478,5.190670,8.157258,1.977707,-6.389330,8.567962,5.975309,0.771172,-7.264075,-5.307204,-0.272256,-1.497136,0.735163,9.264296,-6.867824,1.695956,-6.982672,-0.159774,7.364703,0.826534,-7.470823,2.822541,8.973338,0.687917,0.909895,-0.893543,-1.314501,-3.896121,-7.769046,3.533750,6.566094,8.309108,3.460307,-4.094292,9.530230,-2.980876,-4.959641,5.163749,4.208497,7.547280,3.419641,-9.658720,-8.128863,8.753842,3.815444,3.509557,5.531736,-2.204890,-2.951206,-3.589195,5.968991,2.033784,-6.606965,3.680148,-3.915835,-0.303228,-7.528217,5.421685,0.316840,9.620122,9.451889,-2.091778,6.582320,-3.168669,9.688849,-2.214452,8.090512,-8.286019,-8.757411,7.919800,-5.812519,-2.094313,0.546819,5.365801,-4.303115,5.204341,5.043213,1.161520,-7.351526,-6.026169,-3.995439,-4.001737,7.129065,5.596195,-5.764277,-9.214253,1.525521,5.051164,-5.695845,8.405540,-4.026933,7.559477,-1.488761,-0.643049,-3.878748,-9.098837,8.073441,-6.586087,2.097386,3.468901,9.961505,-9.814282,-5.314177,6.192552,-0.903047,-6.041160,2.490166,-8.349773,-3.709054,-7.254967,-8.992642,6.167975,-6.152362,-2.490067,9.439358,7.660028,9.182555,7.034066,-2.180277,-7.354112,-7.193652,8.994646,-4.020664,1.266857,-6.660523,3.806543,4.740427,3.053888,1.321777,6.913239,1.440549,8.975364,0.079474,-2.370537,8.052419,-4.652533,7.294497,3.948452,-9.147170,-2.075891,-3.450261,0.427298,-9.376558,7.163351,-8.995941,0.232596,-3.234980,-6.576522,5.874275,3.795676,8.660403,-0.012316,5.092454,8.259763,2.393598,-6.792124,7.931163,0.547585,-5.497579,4.779831,1.612232,-6.738340,7.323078,8.413658,-2.455599,1.654838,3.858897,-3.469689,0.477642,-5.869464,-4.326991,9.845202,-1.592764,8.648541,8.337564,6.516118,0.903993,-4.365852,-4.884219,-5.705791,-4.985155,-9.524290,0.501238,-7.288797,-9.644003,2.632048,-0.299299,9.785218,8.533802,6.558808,5.226040,-1.483901,8.862436,-2.624539,-5.678703,-3.237251,-0.193975,-4.064062,3.275208,1.463763,1.432384,-3.179042,5.805401,-3.663726,2.275271,8.686951,-5.373352,0.439845,5.533873,5.252989,-5.749355,-7.919197,2.507565,5.660409,-6.635850,-4.549251,7.099311,8.449269,-3.664008,-4.848252,5.454771,5.650005,9.950376,0.250159,-9.766719,-9.908367,-3.241224,4.113499,-7.373209,3.928546,3.331871,-8.355452,-3.039549,8.022309,-3.340798,-1.966278,-1.228167,4.082127,2.373452,-0.913567,-1.591723,-8.684265,8.670180,-9.380821,-2.517254,-3.797669,7.516153,4.057887,-5.313838,2.537236,-7.041384,6.643808,2.801514,-1.153187,7.504874,-1.193037,3.871459,0.848144,-1.723292,-8.998805,7.855050,8.034456,-7.744072,-3.301835,0.891576,5.471174,-6.836749,-0.216200,9.840312,-9.324283,4.220273,-5.158554,8.288330,-6.934943,6.541272,7.599067,5.696727,-1.842186,1.267933,7.017891,-9.617062,-0.937147,6.601678,-5.240841,7.746649,8.407331,3.851337,0.045823,7.140416,-9.415982,0.723209,1.906817,-2.620560,-5.458182,0.284807,7.835865,-6.156304,-7.910154,-0.882104,-9.651799,3.039125,3.622950,-1.870623,2.026364,-1.264239,-0.481049,8.430652,-2.749992,9.711604,0.148091,-4.442458,-6.197583,-7.870035,-6.143196,7.254187,-0.181748,6.066907,8.293973,5.509928,8.310847,5.554754,0.378266,-5.425547,-4.846024,-8.375054,-6.394074,-6.581367,3.851631,7.628590,-6.151247,-2.355304,5.552892,-5.994729,1.862717,7.125178,0.201616,4.206435,-9.330705,-4.191968,1.476954,-5.414627,-6.662139,7.491178,-4.360727,5.533786,4.484049,1.258800,7.168601,-8.633191,2.278529,-5.739940,-7.296771,0.667545,4.854830,3.422015,-1.596431,-9.830373,9.789184,-2.657326,-5.435732,-1.377709,-5.088630,-3.318278,0.826361,-4.778944,-3.725579,9.057467,-0.749221,3.604411,-8.159725,0.949712,8.526434,2.603434,9.706171,-8.466288,-9.165453,8.749585,-2.499611,-0.593267,-8.371358,4.284036,2.186768,7.395912,7.284981,4.592674,-3.633770,2.355883,-8.187537,-3.746066,-4.935990,6.818863,8.617082,8.838581,-5.614462,2.803715,0.881785,-3.457006,9.036017,-1.096246,-2.483645,-9.266341,-2.597952,-7.853548,2.468355,-0.452565,8.239163,-6.159712,2.873915,4.748963,1.990717,-8.325723,8.279715,-7.124918,1.516164,2.036906,-6.282765,-0.307263,9.247875,-7.197958,2.842905,1.659149,-9.275193,0.080968,5.805340,-0.488101,5.811874,3.959151,6.416448,7.350828,5.498347,-1.151756,-1.643076,-1.327518,-2.595529,-1.907837,-6.417403,-4.536083,9.106621,-7.036693,-3.222850,-2.941703,8.422352,-8.770297,9.040605,1.118870,5.011599,-7.207085,-0.505435,4.180832,7.709135,-6.232714,5.359474,3.132087,-5.054710,-9.941764,-2.963792,-3.660408,-8.956525,-1.674731,-4.490111,-9.747087,8.011731,-8.586559,-4.673399,-2.530800,1.495525,1.266388,-3.053277,-1.271863,-1.440416,5.439962,0.709626,-7.923028,7.254343,4.699627,4.350123,8.462295,-7.298764,-6.375958,5.280842,1.943361,-5.254613,-8.626848,5.576703,8.370656,9.766198,-7.378615,4.461935,-2.877994,8.157456,-5.978571,-3.806231,0.529047,1.654489,3.250775,2.447025,-3.484948,7.020621,-4.015485,2.319000,-9.949228,-3.685977,6.381227,2.651284,-1.373789,9.902770,0.120935,-7.749821,-9.118960,1.182349,1.217095,-2.720082,-8.916513,-2.912773,-0.274758,-8.009721,-7.497564,6.833048,-8.107402,6.286299,9.285422,-4.415657,-2.937104,-0.182689,-3.914658,-2.612312,-1.726052,0.871118,-2.273326,8.315234,6.206964,2.627213,-9.638047,0.377789,-6.500231,-6.902880,4.669218,-7.202569,3.625688,3.623556,-4.868835,7.340913,-1.773056,0.419643,-9.124919,-6.766369,5.971071,7.956833,-0.062119,-6.031735,-2.773351,5.587031]], dtype = "float64")#candidate|6329|(2, 1092)|const|float64
call_6325 = relay.TupleGetItem(func_5918_call(relay.reshape(const_6326.astype('float32'), [16, 1, 2]), relay.reshape(var_6327.astype('int64'), [112, 4]), relay.reshape(call_6306.astype('uint8'), [5, 150]), relay.reshape(const_6328.astype('float64'), []), relay.reshape(const_6329.astype('float64'), [2184,]), ), 3)
call_6330 = relay.TupleGetItem(func_5924_call(relay.reshape(const_6326.astype('float32'), [16, 1, 2]), relay.reshape(var_6327.astype('int64'), [112, 4]), relay.reshape(call_6306.astype('uint8'), [5, 150]), relay.reshape(const_6328.astype('float64'), []), relay.reshape(const_6329.astype('float64'), [2184,]), ), 3)
output = relay.Tuple([call_6283,call_6293,call_6296,call_6306,call_6325,const_6326,var_6327,const_6328,const_6329,])
output2 = relay.Tuple([call_6284,call_6294,call_6297,call_6307,call_6330,const_6326,var_6327,const_6328,const_6329,])
func_6331 = relay.Function([var_6327,], output)
mod['func_6331'] = func_6331
mod = relay.transform.InferType()(mod)
mutated_mod['func_6331'] = func_6331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6332 = relay.var("var_6332", dtype = "int64", shape = (448,))#candidate|6332|(448,)|var|int64
func_6331_call = mutated_mod.get_global_var('func_6331')
call_6333 = func_6331_call(var_6332)
output = call_6333
func_6334 = relay.Function([var_6332], output)
mutated_mod['func_6334'] = func_6334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5381_call = mutated_mod.get_global_var('func_5381')
call_6339 = relay.TupleGetItem(func_5379_call(), 1)
call_6340 = relay.TupleGetItem(func_5381_call(), 1)
func_5918_call = mod.get_global_var('func_5918')
func_5924_call = mutated_mod.get_global_var('func_5924')
var_6352 = relay.var("var_6352", dtype = "float32", shape = (32,))#candidate|6352|(32,)|var|float32
const_6353 = relay.const([5,-5,9,5,-5,-4,-5,-1,-7,7,-7,-1,-6,9,5,2,-10,-5,5,2,7,6,10,-4,-6,-4,8,7,4,-5,-6,9,4,-6,-5,8,-4,-3,2,3,8,3,3,-1,-6,5,1,-9,-7,-3,5,2,4,6,-3,-5,6,-9,8,5,-4,5,2,2,2,2,7,-7,-9,8,-1,5,1,-6,5,2,-10,7,-2,1,-4,-9,7,1,-10,8,-2,-9,-8,-1,-4,4,-9,-6,-10,4,10,-3,3,2,3,-5,6,9,8,-9,-6,-8,2,7,-1,-3,6,7,-2,-3,1,-1,3,-1,3,-5,2,3,7,5,-10,-10,-6,6,-10,-4,-6,-7,8,-9,-9,9,6,-5,-1,3,-1,-8,4,7,-2,2,-8,4,-1,7,7,-9,-10,-8,-5,4,5,-2,-5,-10,2,2,5,5,9,3,-10,1,-1,10,-9,1,-6,3,-4,10,-9,5,10,-9,4,7,6,-3,-6,-2,-7,10,-10,9,-8,-1,1,10,-7,-2,-10,-4,-8,5,10,-8,-4,4,-1,-7,10,-7,-3,-4,-5,3,7,6,-6,7,10,-7,-4,-8,2,4,-3,-2,-8,-1,5,2,3,7,-9,-7,2,5,5,-10,1,6,5,-2,-6,-7,7,5,5,1,-8,7,2,-7,9,3,-1,4,9,-10,1,8,-7,7,-6,-8,-7,-6,10,8,-1,7,-2,-10,9,7,-7,7,9,6,4,-10,10,2,9,9,-10,4,7,2,3,-7,6,4,8,1,-5,-3,-6,5,6,7,-10,10,4,5,-3,10,6,9,4,-8,-2,4,-7,-5,-4,-8,3,4,-2,-5,-3,8,-10,7,-6,3,-5,6,-9,-4,-3,-9,-2,2,-4,-9,-3,-10,4,7,10,6,10,-7,2,1,-4,10,3,-10,-2,-6,5,-7,3,9,-5,-1,8,1,-1,-5,-5,3,-8,7,-1,2,10,7,5,-7,10,5,-5,-7,-3,1,7,7,6,-3,8,-5,9,4,-9,-6,10,-8,-10,-3,-7,-10,-10,-10,-3,-3,2,-1,-1,7,-7,-8,6,4,-1,10,1,2,9,8,-9,-2,1,4,-10,10,5,6,4,-7,7,4,-9,1,-10,-9,2,-2,5,-4,8,-4,-4,2,2,-6,9,9,6,-6,-1,-7,-6,-7,-6,8], dtype = "int64")#candidate|6353|(448,)|const|int64
const_6354 = relay.const([-7,-4,-2,10,-5,5,5,-6,-8,-3,1,6,2,10,-8,-2,9,-3,2,6,2,-3,-5,-7,-5,9,-10,5,1,-2,2,3,1,2,-1,5,2,-8,7,1,8,10,-7,1,-2,-6,-8,8,4,5,2,7,-7,2,-4,8,1,9,-4,-5,-3,1,-9,-3,10,-10,-9,8,-4,2,1,10,-7,-1,1,-5,8,-8,-8,-2,10,-3,-9,-4,9,-2,5,2,1,1,1,8,4,8,6,10,-2,-2,-2,-5,-4,1,9,1,9,3,10,9,7,5,7,-7,8,1,10,3,3,5,-9,3,8,6,-7,-1,-4,6,-2,4,4,4,-9,8,-2,3,9,9,-2,-3,-4,1,-1,-1,2,6,9,10,8,-2,-10,4,-1,-5,10,9,-4,-1,-9,-9,10,-7,-5,8,2,6,7,1,2,10,-6,7,-1,-5,5,-3,1,-3,-4,10,1,10,-5,-5,-9,-1,5,-4,-10,-9,7,7,2,2,9,4,7,9,4,-1,8,-9,3,1,4,-6,2,9,-3,9,-5,3,6,-6,-5,-5,-2,-6,-6,6,-7,-3,6,-2,-4,-1,6,3,-6,-2,7,-4,10,1,4,-9,10,1,-3,6,-6,6,-1,-3,7,7,-1,-4,10,-8,-3,-7,-9,2,3,-9,3,10,4,2,-9,9,2,10,9,8,4,-8,4,-5,5,6,1,3,-1,9,6,9,-1,9,6,-1,-3,-3,8,3,-2,-3,-9,8,-3,-10,-7,6,6,10,-3,2,2,2,-3,-3,-6,-8,3,4,5,7,-1,-3,-10,-10,-4,8,10,-3,-5,-8,3,3,-1,5,1,9,-9,-10,5,-4,2,4,2,-5,-4,-5,8,-6,-6,-7,3,10,8,10,10,2,-6,6,-4,2,-3,-6,8,1,2,-3,-4,6,-5,-7,10,6,4,3,-2,-7,-5,-7,-6,9,6,3,-6,-2,-5,5,8,1,-3,1,1,-2,2,9,10,6,-9,4,7,-8,6,-8,-3,6,3,-3,7,1,7,-7,-8,-2,3,-4,-3,1,-6,-2,7,-6,5,-5,7,2,-5,-10,4,-10,8,-7,6,10,6,2,-10,-6,-8,-9,-6,-8,2,4,9,-2,9,10,9,7,2,1,-8,8,5,-10,8,5,-7,5,4,7,-9,9,4,3,7,-7,8,-10,3,-7,-1,9,3,6,-3,1,7,-2,-9,-7,9,-1,9,4,-3,-1,5,-2,7,-6,-10,-4,8,-10,-1,3,-10,10,6,-1,7,5,3,-10,5,1,-4,2,3,9,8,-5,-6,8,-1,3,1,9,5,-4,-5,6,10,-1,2,6,-2,8,7,2,-5,5,-4,9,4,-10,8,8,5,-10,1,-5,-10,3,-1,7,-3,-9,9,-6,1,3,1,-7,3,3,5,9,3,3,8,-9,2,-7,7,-3,-7,-8,-8,-7,2,4,-2,-3,6,10,-3,4,6,-6,5,1,-6,2,-6,4,1,-5,3,-9,-3,-3,-7,-6,10,-5,-1,-7,-9,-10,10,-3,2,-5,8,-3,2,-1,-5,-1,9,2,-6,7,-1,-10,-1,-3,1,-7,5,-1,-6,-5,9,7,-6,8,-9,-7,1,1,-8,-2,-6,9,-9,-8,3,7,1,-10,5,7,2,-4,1,3,-2,8,6,-9,8,-9,1,4,9,9,1,-8,9,-6,-9,-10,5,-1,5,-3,5,7,7,-8,-7,-2,2,-3,-6,-3,-7,-8,-1,1,-8,3,8,9,-3,-6,5,-1,10,10,-5,10,6,-4,6,-6,-4,8,-1,9,-8,-4,-3,-10,1,8,2,9,8,6,-1,-8,1,6,7,-6,10,-5,-7,5,-4,-5,1,-2,-7,2,-3,2,-8,-8,4,9,-3,5,9,9,3,10,8,-4,2,-3,-8,-9,-3,-3,-10,-9,9,5,5,3,-10,3,-5,-2,-3,-2,-10,-9,-9,-10], dtype = "uint8")#candidate|6354|(750,)|const|uint8
const_6355 = relay.const(-8.995852, dtype = "float64")#candidate|6355|()|const|float64
const_6356 = relay.const([-5.260263,4.318098,7.436985,-0.287827,-1.457112,-6.272014,5.593627,1.639306,3.656455,7.549124,4.732511,1.368844,4.233894,-6.213837,6.263408,9.707690,-7.734932,-3.281052,-1.599808,4.438200,1.369987,9.732002,-9.861404,9.902095,-5.658667,2.179468,-4.719925,-0.750866,-3.323097,-8.059947,-2.168256,8.630511,1.358667,-2.726800,4.199972,-3.382829,7.156334,6.195883,-5.681287,-4.884299,2.439254,-4.307228,-2.144823,8.708863,1.942470,-7.616674,2.507691,-2.013164,4.516469,7.893462,-1.707687,9.554579,1.492907,-9.185949,1.907247,-9.956560,-3.717390,-6.226753,5.365186,-8.460920,-4.663737,-3.173808,-6.866865,-7.829837,3.153087,-7.997598,0.080228,-2.671057,-4.487686,-4.635468,6.522615,7.153919,4.701928,-2.578422,5.094572,9.420243,-4.899599,-3.025305,5.597041,-6.774688,-4.483329,-5.005111,2.835906,-8.524703,8.936248,3.316721,1.352539,5.467722,0.109182,7.100523,-4.622077,-6.751726,-1.685763,3.349988,8.585172,-0.392322,1.417765,2.869464,6.122169,-5.960541,-9.816919,6.287695,-0.485398,-8.340421,8.416654,8.257970,-2.650599,-2.930955,-0.641079,-2.885566,2.222289,5.393159,-2.600780,3.472602,-8.197880,-8.472259,-1.077907,-1.403894,-5.797757,-3.543867,-7.247323,1.337644,7.712740,2.010410,-8.989763,0.499170,-0.427699,-7.017456,5.210963,6.159701,4.103573,-7.772865,6.527626,2.137576,7.997740,8.958509,8.388756,-4.275598,-1.966042,-1.711434,-3.333411,9.055180,-7.046994,6.509749,2.370988,9.439268,-5.021144,-5.370530,-3.789093,-8.808826,4.770554,4.280525,-3.579681,8.746724,5.458794,1.882828,5.038588,-8.450229,-0.215007,5.541956,-0.499416,3.000249,-3.498999,0.453703,6.833971,-0.484913,2.898341,4.542725,-9.368243,5.711630,-7.270568,1.038565,1.111735,4.613996,1.963009,7.126199,3.290013,-5.436780,0.158987,-6.636805,9.599316,6.493669,-6.684762,0.569103,-3.514654,-3.085021,8.161166,-6.257263,9.692858,1.534247,9.987709,9.613492,1.665828,-7.436623,3.938547,2.129392,-1.248601,4.998336,1.679049,6.494311,6.654457,-1.632965,6.224245,1.812823,-3.766104,4.556952,-3.341096,-0.444339,-3.967989,-4.368017,4.970948,3.715971,-2.627713,-6.121515,5.320026,4.395214,3.429524,1.752994,6.515987,9.949729,9.448064,7.343824,8.487504,5.731846,-1.186090,4.871049,3.983718,3.836138,-6.646797,8.743254,0.328449,-6.858609,-3.849165,2.618131,8.057430,4.692075,9.051096,-3.904656,-4.745856,3.780515,1.177388,-8.176004,7.676684,-5.993067,0.587896,2.069636,9.137752,2.107645,8.527120,5.711856,-8.182762,-7.835575,5.076979,-0.942880,-5.457036,-5.497661,3.458232,8.868934,1.758291,-6.959395,3.651499,9.403809,2.544669,6.899699,-5.610616,6.227630,5.640519,-0.714045,-9.104697,0.240301,-1.436856,-0.958582,-5.411047,-6.894716,-5.336803,6.734326,-6.383829,-7.701314,0.645185,6.804886,-0.039563,-8.303639,-3.517112,-2.269759,-6.228431,4.047132,1.132838,-0.249548,8.787359,6.826277,8.412789,-7.636047,-4.594393,4.227870,-7.068809,6.439270,-3.898163,-4.035900,-9.943651,0.759358,-5.600541,-5.674685,0.902025,-5.335124,7.988671,-4.287108,-0.082873,8.135458,5.408831,-5.353012,6.542627,-1.076939,-0.694471,-2.935116,6.252608,9.884582,-6.734338,3.114743,-2.888026,1.087723,-7.249959,-9.601785,-9.337672,9.618699,-1.149001,5.159385,5.657709,8.657971,-0.664001,-2.986146,-8.560792,-5.182522,8.117088,-3.899512,9.011911,-8.144932,5.932250,-3.975507,-7.017032,7.135968,1.463996,-1.278502,-5.722232,-7.960460,1.366420,-7.351543,-2.915536,-3.078126,-0.762078,2.773589,-1.246198,7.231098,-7.189069,0.941188,5.302693,-8.385172,3.870365,2.069194,-5.500032,0.506341,3.013001,0.373615,-6.543950,3.653348,-1.037731,-2.521089,-7.526829,-4.994266,1.385516,9.035779,-4.664354,2.588732,-8.701373,3.448878,7.958709,-7.861150,-5.237279,-9.628480,-4.764333,-8.217500,2.964347,1.491997,-0.867380,-5.116095,-8.169826,6.297314,3.717557,-3.472248,4.978806,0.409788,-9.443310,1.622245,7.290208,7.098361,-0.841343,6.732506,-2.598181,0.725162,-4.796707,-8.537247,-6.413613,-8.621420,6.445932,2.733385,-3.370039,8.172571,8.871368,-7.720375,-7.756008,-0.242924,7.378001,-6.946681,-1.863557,-4.011881,-6.097194,7.014821,-3.273506,-2.358019,0.407472,8.544508,-9.194937,-3.630012,9.536636,8.405666,9.912451,-8.754282,1.848829,-3.764389,2.817501,-6.954115,-4.670319,-4.885080,8.786937,-8.084979,-4.090669,8.516992,-0.665252,-8.272510,-3.244312,9.215240,4.107103,-7.357126,1.796757,6.264181,5.018297,-6.105634,0.103995,5.148711,3.569143,0.979783,2.245617,6.920462,2.691444,5.866258,8.857377,6.960229,8.421175,3.466895,-9.516530,5.016148,-3.968666,4.087050,-0.990981,0.577331,-4.997532,7.399724,3.748099,4.957136,9.899308,-3.072328,-5.127637,8.028328,5.098436,-8.172883,4.230870,9.209588,8.270782,-9.051046,7.550052,5.250088,-9.595380,3.301340,1.051648,-7.220460,-0.449677,0.021409,-3.171335,-8.048193,7.969525,-7.051857,-3.894740,2.925785,-0.291479,9.943674,2.758186,-3.105340,0.643760,4.437953,-1.292988,1.855442,-2.582428,2.381523,-4.108454,-0.182656,-0.663794,-3.303089,-4.525175,-0.640124,9.719212,6.505696,1.523279,2.855273,3.535619,7.035460,-6.506535,-6.621570,-5.009432,-6.072478,7.245579,-9.639090,5.479981,-8.215282,-6.728841,-8.223944,-7.597444,-1.209139,9.225705,5.229511,-9.517400,8.043209,3.155365,5.027143,1.239252,-8.033481,-4.868405,1.111234,-8.097396,-4.180595,-2.820567,-9.980489,-9.680053,-0.802311,-9.831992,-0.539684,6.111234,-5.183591,-6.719140,-4.318242,2.184886,-4.841003,2.800682,7.615547,-5.260763,3.625950,-7.250541,1.211036,-0.721420,9.782033,6.597206,-7.655711,0.836618,-8.882763,-5.647755,5.165031,1.822049,-6.897413,2.540026,-2.389488,4.768270,6.176552,-5.942364,-0.835057,-9.069298,9.521386,1.305794,-7.669887,-2.846081,-3.038140,6.707149,-9.784212,-3.447842,-6.714469,-6.283381,6.127904,-7.568986,-4.826778,8.416149,9.278809,-4.543751,-0.910237,-9.087566,-1.478093,4.736751,-2.168135,-1.730953,0.005382,2.601105,3.200219,8.145750,5.567583,1.801375,-0.205581,-9.641229,-1.417641,-3.137363,-0.973231,-6.090200,-3.431635,-7.119277,-7.474230,1.907096,2.306179,3.373175,6.924166,3.490616,-7.345077,-5.365225,1.711154,5.144710,8.256164,-8.130453,-3.312450,-3.452121,-3.431844,7.464850,5.592722,9.458054,0.108441,8.024835,4.402805,0.899550,6.186839,-5.217347,-3.316255,7.480665,9.621185,-1.757620,-0.409395,-6.652700,6.688937,5.231598,0.084440,4.258454,-1.569390,1.169354,7.364516,5.181266,-1.228313,6.973108,9.565525,-4.373606,1.173958,3.767790,2.743054,-5.392214,6.839759,9.073908,-5.592350,-9.514549,-0.941821,-1.802278,-0.503544,-2.887637,9.227728,-7.222896,-0.953239,-4.406833,3.591988,5.803501,1.619222,3.415215,-0.617230,1.826979,6.651838,8.077824,6.461454,2.596219,1.616409,-3.800418,0.090684,-2.030705,9.086184,0.203418,-4.423378,3.985874,9.892742,-8.735079,-3.229619,-7.387762,7.861747,3.244548,-6.549102,5.936247,-5.934457,-7.371531,-2.314982,-4.652078,8.170981,-3.183425,-1.237623,-0.688985,-1.000794,1.162474,-8.474654,-9.977375,9.537823,9.620521,-9.063506,-4.715380,-1.872592,-1.457975,6.030332,7.706910,0.577691,-8.407716,9.602401,2.733256,2.562263,-3.076308,-8.427070,-7.370596,-7.516824,0.836989,-8.505846,-5.436431,0.671344,2.822043,6.388755,9.005154,-5.048982,-5.063394,-0.483375,8.459150,9.337368,-2.655837,-4.367607,6.402251,-9.412712,4.619912,-9.446549,0.373544,-9.935503,-8.394280,4.856957,-9.128576,9.225701,-8.562245,-4.586397,-7.657565,6.824978,-7.769495,3.214103,6.655472,-5.495789,-5.211529,-3.774331,-0.569994,-8.773849,-9.355521,0.588658,6.113289,9.632386,-0.763999,1.779587,6.281988,0.957803,-3.969022,-1.426475,-2.777663,-6.880619,0.647607,1.427318,5.237989,7.768538,3.452990,5.332764,1.870386,-2.726004,-7.456230,-7.618841,0.440740,3.912447,-2.130624,8.753565,9.282566,4.741535,-4.575999,-3.393491,-1.920690,9.793547,-5.649631,-3.606477,2.518256,-1.895322,-0.185007,-8.742309,-5.195129,8.017221,4.024110,-7.359481,-0.851603,1.191439,-5.929433,1.203855,5.210640,-4.505722,0.026542,-2.997785,-3.641379,-0.997171,1.867584,-2.448843,5.655839,0.930047,-2.184515,2.504661,9.755185,3.699809,-2.194596,2.667773,2.708483,-3.924464,-8.864934,8.465677,5.010105,-0.880942,-9.518863,-4.341280,-6.790917,-2.955111,6.656920,-8.434183,3.594789,-9.586307,-4.475512,2.518213,-5.280340,-2.785515,-9.086536,6.882782,0.114568,0.279267,-2.798949,7.966834,5.091198,6.898645,6.859030,7.776431,0.920496,1.463428,9.156092,0.695844,-2.406329,9.669172,1.165731,-7.014278,-4.526154,1.253911,1.579529,8.220110,-9.429656,-9.874541,-7.698684,-6.306152,4.019597,9.869135,4.912359,-8.203390,-5.181262,-3.592868,-5.259346,2.982714,-9.592170,1.873636,1.038018,-5.568271,7.493479,-0.109132,4.484654,4.172612,-7.668987,3.203840,7.925743,9.141038,9.618022,-8.972308,-7.685672,-7.756610,-8.359826,-1.023846,8.342412,9.451519,4.279605,-4.643115,0.477251,-2.323636,8.978161,4.020870,2.704378,-7.274591,-6.495272,6.454637,-8.766325,-2.663182,2.470257,9.184390,9.775393,-5.160664,-1.508834,5.246565,-9.302010,6.157791,-2.691234,9.157795,2.865235,-5.494781,-9.890718,-8.021832,-2.571865,6.988788,7.432108,-8.747808,3.081367,-0.535820,2.450199,1.308266,2.659927,1.777781,7.360561,3.066283,0.441937,5.512833,7.315648,-6.306495,-3.953081,-7.102849,-7.352594,-4.161529,6.016384,6.483995,2.220158,-1.473094,8.884474,-4.021662,-2.147386,2.590452,7.597185,4.141411,-7.514938,-1.176449,6.873074,9.098578,1.376901,-5.134197,-3.851956,-2.379088,-4.996316,-4.624104,-3.923553,0.526388,-1.112352,-2.176513,2.900564,1.680953,-2.890972,-5.314041,-2.142975,4.914886,8.706627,-6.968936,-4.431297,8.014599,0.872197,-8.608801,-4.661534,7.452283,6.755368,7.431684,0.932334,-2.780707,-2.280601,-6.044258,-7.411590,4.584076,6.679659,3.546157,-4.830166,-3.896349,-2.341551,5.697938,-3.712918,-4.933497,7.381922,-4.662164,-5.793450,-5.959819,5.011245,0.658207,-8.831363,-7.741012,-4.457987,2.655674,-9.020956,-5.285193,4.489159,-8.581241,-4.531910,3.590796,-7.582302,5.504258,-1.324553,6.634551,-9.956685,-5.800046,4.864315,-1.136543,-2.581608,-0.341125,0.260466,-1.684161,1.713583,9.821954,5.520124,8.865507,-4.876453,-5.752517,-1.209966,6.415661,-3.597330,2.767696,-4.539128,1.919230,-9.897793,2.652842,-6.663129,-5.370871,-0.533209,-6.537808,-1.573007,0.590711,-6.144466,9.298687,-2.369344,0.613097,-8.694114,-6.319312,-7.403595,-9.258637,-3.735823,-8.037280,7.818792,-7.987061,-1.947251,6.835140,-8.073331,-6.234465,-4.192800,7.549189,-6.468544,2.031864,6.028478,7.638758,0.489546,-3.209237,8.312685,-2.681376,2.713353,9.108838,1.157812,-2.433516,8.339551,-6.439552,1.535063,-7.447165,-6.609590,-4.721304,-0.065749,3.286662,0.313837,6.618437,0.047280,6.710079,-1.621923,-7.648414,0.445234,1.650353,4.484029,-1.536710,9.270617,-2.031287,-1.223007,6.318844,-3.685312,-9.812644,0.105194,2.306277,-1.701673,9.351196,3.114525,-5.091637,7.512277,0.024906,-1.775309,3.115664,1.613308,6.843418,-5.164368,-9.534077,-9.502356,1.639547,-5.409443,-7.436961,6.913094,5.132877,5.158168,-2.632954,1.396197,-4.148833,6.143316,0.472776,5.470056,2.413517,4.588332,1.167798,-6.201887,6.709921,2.923153,9.936234,-6.934522,7.172454,9.751419,-8.431060,1.603355,-6.718175,-4.783589,0.284507,-7.173006,9.182490,-7.988193,2.263783,6.946636,0.788905,-6.751554,-1.749200,8.710399,8.489871,5.599697,2.096924,-0.176633,6.857975,0.237562,-2.901107,6.576750,-1.355676,-7.139997,3.470585,-9.813645,-4.937883,3.656704,8.759951,-7.726299,6.761069,-3.666974,3.248323,-1.021720,7.730899,8.114053,-2.934936,-0.241708,3.349992,-1.967275,-8.523127,2.085379,-1.991101,6.723124,-9.113239,-1.885344,0.616827,-5.209171,5.778525,-3.670501,1.667039,-4.153001,-5.603913,-9.491877,-4.192498,-8.406472,7.520819,3.685053,5.483611,-4.369673,8.232562,6.051625,2.095067,8.032504,6.231337,-7.662472,7.693232,-1.220785,4.930560,3.799639,5.464131,-0.083652,-6.714333,-7.242241,4.536907,8.480330,4.414304,9.888906,-3.913911,2.643446,-6.107289,-1.063562,7.350983,-6.638834,5.911666,-7.549546,7.011758,-8.373349,-9.276222,4.738504,6.798208,-9.646958,-2.488203,4.946062,-6.911548,-0.863948,-9.097338,5.320492,4.047242,-7.047926,4.514693,0.735550,-6.971164,-5.202796,6.064590,-6.276501,-4.830232,6.729951,-2.491554,-0.352815,-1.756859,-7.366395,5.714763,-8.933060,4.714701,-2.566964,9.785302,9.728297,1.902908,-0.939005,-3.591710,3.183095,-6.537835,9.754467,9.606583,6.565974,-4.642509,4.069364,0.823086,-9.410369,-2.307864,-4.368015,-9.362099,9.994752,5.818553,-1.357772,-5.578285,6.431800,0.126595,-8.886283,-3.899275,-3.595278,6.204096,-3.377689,0.339654,4.108577,7.065409,3.854340,3.500411,5.444327,-3.478576,-8.606470,7.055685,5.355106,-6.163554,-4.431597,-3.631472,6.914167,-6.981928,-1.160156,-7.947783,5.174890,3.649083,-3.462859,-0.369277,-8.763666,7.213268,0.672789,-3.172699,5.815171,-1.999314,2.297759,-0.453673,-9.977908,-0.604067,-0.533344,-8.184811,4.493298,-0.347179,5.836093,0.261219,-8.509369,-0.501427,-7.403417,-7.155608,-5.599936,4.777690,8.615775,-9.840839,-7.743579,6.944629,-1.606432,-1.968403,1.799946,3.120586,1.748312,-7.535059,7.988035,-6.182856,9.573290,-1.876230,1.729119,9.082642,5.648506,6.136584,9.618830,8.382415,-8.332264,6.003337,-4.805039,-6.400458,2.532881,4.893395,-7.162680,-3.033316,1.759856,9.387193,-0.427258,2.587244,-2.475548,8.951416,4.465077,1.510868,6.020005,-5.635910,2.668505,2.732836,4.468039,-8.104841,-8.654736,-6.408476,6.899139,7.866358,-4.311296,7.232577,7.065225,-8.127884,7.927955,-8.247603,-1.947764,9.558948,-6.374793,0.948439,9.488126,5.905283,-9.898776,8.606179,7.550441,-3.865837,-9.963737,-0.693027,-8.748579,-6.307008,3.183567,-5.794885,1.010577,7.139394,7.851581,-1.382346,-8.530845,-2.244861,4.598416,-9.205613,-0.448291,-9.216779,0.898669,-3.746316,-3.642487,0.854272,-8.272289,5.173935,6.095467,0.421485,2.443259,-5.197338,5.987717,9.032859,-1.144145,4.875169,-0.885190,4.587694,-6.097125,8.718026,3.625527,-5.749295,1.318901,3.791709,5.071026,2.916886,-4.747842,-4.717978,-5.114379,-1.813014,-5.423185,-2.656977,-6.670171,-5.568801,0.158171,6.687572,-8.196526,-9.164663,7.631231,6.707419,-8.730492,-8.656986,-6.635402,-6.876729,-6.033870,3.578073,-0.575160,9.068876,-1.528880,-7.198023,0.773951,-2.039113,4.916837,2.728279,-1.996203,9.663334,9.637398,-3.610995,2.798936,1.470089,9.396570,-9.794920,-8.092031,-6.364926,6.769197,-0.217692,-2.644982,-6.850891,-8.270940,0.171307,-1.464585,4.334586,-3.942555,8.672876,5.719260,6.139496,-3.697612,-0.781760,0.730172,2.677428,4.859324,6.479198,-3.192244,-1.194665,-3.203613,7.264224,-2.889884,-7.225421,-3.620467,-6.405874,-3.647129,4.264397,3.144794,6.686771,-4.481231,1.745268,0.853703,-7.510281,7.127047,-1.086843,-2.391560,-6.084451,-7.741816,4.587554,1.143995,-0.944682,2.310730,-8.358046,-2.159985,5.642556,-9.928260,-2.482303,1.360206,5.221627,6.745353,-5.233319,6.762128,2.975510,-8.758866,4.982144,-8.201414,2.758952,2.534716,4.415821,-4.084307,-5.815481,0.039846,-0.679199,7.191962,7.462260,3.732814,-3.050761,3.476583,-2.635856,-4.803237,0.319170,-2.215210,-5.704313,-1.905103,1.930269,-7.471793,4.273556,-7.829640,0.570254,2.059492,5.616825,-7.441024,7.595137,7.957044,0.077903,9.955531,-6.306494,-5.984400,7.613690,-0.908607,1.498847,6.837180,9.783734,-5.323265,9.364427,5.144904,-6.266716,2.846741,2.432518,4.986763,-7.715042,4.837157,-0.561630,-4.143143,-0.165383,-7.802888,5.881922,-4.510723,-7.622953,0.700635,-1.761951,-6.635234,4.044590,2.880425,-9.201897,0.649656,1.654153,2.812991,-8.844662,-2.622566,1.526590,-4.352655,-2.519818,3.408878,5.429733,-2.581272,6.957368,-3.133741,-3.230094,-8.928571,8.283781,-1.091156,-4.831930,-6.415920,1.201250,-6.471228,-0.636662,2.896906,2.415879,8.917147,-1.124323,7.137113,-3.663185,-4.839858,3.214330,0.396177,-7.417029,5.422027,0.372268,-8.399135,-2.728879,6.976295,2.597986,8.662311,5.660969,-3.827328,8.287140,-9.280643,1.234285,-8.881061,7.884058,5.041946,9.682500,-8.494681,4.161904,1.247267,1.925452,-7.133900,-0.545544,-7.278896,-3.955285,3.024858,-0.561844,9.156492,-5.628534,-5.208217,4.745531,3.380102,-2.793163,4.211968,-1.508305,-8.690900,-4.617943,6.906321,-9.425826,-2.891261,-2.684278,-4.090898,5.652060,-7.152517,-3.034198,4.188016,4.410944,-5.332426,9.719648,6.660588,9.534098,0.743562,-0.906111,-9.207264,-2.228674,6.878608,-3.483479,1.932782,6.718364,8.458568,-8.854799,7.603685,4.426273,-8.479273,0.183016,6.543540,4.397019,-3.551589,6.031626,-4.013098,-2.166626,-3.739209,-4.776885,-5.590782,9.598007,0.142986,8.727567,1.458192,-0.644924,9.142793,4.164429,-0.572627,3.226561,-1.604653,5.092143,3.660219,-0.636693,-3.375652,8.263649,-3.018465,-4.368230,5.342184,-3.441288,4.353060,-2.615062,5.702279,7.725393,-5.724452,-9.893508,7.536281,2.290225,2.852145,-7.124554,-3.568833,7.638439,-0.699816,-6.506545,1.730105,8.212102,-8.001766,8.570918,0.174065,0.082663,0.317377,8.644559,-4.626289,5.018497,-4.949474,7.193198,-1.486276,-9.338040,7.255214,-4.736091,1.078578,5.184204,7.565066,8.768892,0.851514,-1.558223,8.110291,4.585457,-2.405614,4.685773,-8.983617,-9.596072,1.395082,8.212924,9.392918,8.892085,1.960853,-9.483382,1.623847,-3.799983,7.980483,-2.497645,-4.913207,-1.101888,-7.946185,4.724341,-0.303701,7.521110,-9.326715,-1.463046,-8.783960,7.014038,-0.702252,-0.762716,3.172462,-0.713299,1.170184,0.216537,-5.515303,9.001455,-9.488430,8.351543,-1.596633,-8.592130,-4.484719,-1.622212,8.226478,-0.645949,-0.740036,9.253832,6.501805,-9.903587,-8.360684,-8.598996,1.036953,-7.540844,1.949050,-9.579711,-8.576122,-4.046725,-2.353420,-4.600568,-3.037593,2.146230,9.915999,7.340563,0.035882,-7.238521,7.383715,-5.218970,-6.703588,-8.873240,9.081004,4.757749,-4.901198,-9.618464,-8.658861,-5.100893,0.144272,0.666102,-2.849150,-7.855740,-0.989008,-1.838947,8.839177,-8.224923,1.156126,1.168962,-1.145638,-5.888992,2.104804,1.840951,3.500968,-3.109379,4.347835,-6.470540,-5.129361,0.790550,2.527973,6.713907,9.092748,-8.287864,-1.523274,1.510995,-0.765162,6.074375,-5.394508,5.034792,-4.647623,-6.050592,-3.488467,-4.569188,8.773496,3.298082,8.247290,-3.655225,2.602323,5.940688,-7.654677,-5.776049,-5.824514,-5.348711,-2.618531,4.620835,-8.698780,-0.395307,-2.627603,4.581043,6.914747,-9.953455,5.877798,2.211883,8.759491,2.469575,4.254125,-4.964830,3.381847,-0.094485,-2.311325,4.305375,6.588253,3.292777,-9.128013,-3.650386,-4.576350,-7.183491,4.700341,-3.783082,-2.535559,-6.295720,8.734859,3.597264,-1.083158,-1.081406,9.055255,5.100561,1.848426,-9.019086,0.918732,0.006004,5.450715,-6.212057,2.682686,4.204817,-7.444161,0.418124,-0.025738,-0.440303,-6.271522,-7.679785,-1.069015,5.479134,-3.767923,4.872433,-2.464848,0.287843,-1.127852,-5.047123,-2.179794,5.318005,3.483335,-1.882714,-3.476398,-3.108342,4.286144,-3.965792,-8.764034,-4.798790,-9.885407,3.857062,-9.265398,-7.298463,-2.190169,1.949903,9.030073,0.429506,7.376139,-3.237132,-1.192027,9.070387,9.979995,-3.570280,1.084737,1.809006,-5.496732,-8.947483,3.233915,-9.651695,8.025227,7.964272,-6.093687,1.078891,-6.619933,3.034242,2.527167,5.959499,5.746796,-8.732107,-5.080389,-2.705863,-4.782260,8.351115,8.619240,3.441696,6.572850,3.079589,4.061468,-1.709542,9.635954,9.864656,-3.364348,8.452291,-9.033845,-3.875815,8.471386,1.644493,6.343988,-1.746178,-3.193657,2.150946,-8.860218,-1.273922,7.152625,1.142586,-8.689135,5.235445,5.132822,-2.649443,2.750754,-9.509526,3.494294,-8.058651,7.016856,-7.320694,7.842895,5.304960,-3.607384,1.641801,-6.783676,-6.755239,9.515610,8.888508,7.572066,-1.312305,-5.913153,0.317857,8.258991,-0.915497,-1.073365,-0.140455,-8.183361,5.779474,9.241318,4.026401,-8.915847,6.152673,2.469192,-1.736547,-9.339832,2.015927,-9.991910,5.558178,0.422951,-0.707326,-3.749319,2.109628,-9.068305,3.805409,9.058607,-4.997232,5.880973,-9.635881,-2.906744,1.793324,2.604940,-6.319022,2.213505,3.272511,5.518815,0.715886,2.116987,9.346313,4.952346,9.330583,9.257566,-0.831502,4.589748,7.221486,-8.883874,7.142131,-2.093866,8.150283,2.813052,-8.533360,-8.347239,-4.399420,-8.234639,0.750160,-1.259532,-6.249798,-0.185651,-8.548526,0.055950,-4.353627,-3.396767,-2.156279,6.198599,4.705109,-8.150061,0.487467,1.136476,-4.671945,7.392021,1.796888,4.207638,5.917733,4.579826,4.133497,-4.013647,-5.529971,2.847553,9.685760,-4.593398,1.622398,-9.461064,8.180545,-0.765628,7.653636,6.108081,-5.753269,-0.983245,5.417651,5.349094,3.807977,-7.809692,4.751710,-0.677152,-4.926916,4.248496,9.202538,-4.424826,0.555788,1.948367,2.927417,6.285119,6.612526,2.858118,1.348156,9.013372,-6.950285,-7.144202,-5.499928,-9.229753,8.499022,-8.285899,8.027995,6.810012,-2.108967,3.770452,-5.080466,7.690394,3.438091,-7.162689,9.414507,7.501602,7.543680,5.874823,-4.771679,-9.360870,2.985837,-7.753232,9.227106,9.823335,-4.744052,7.541880,-4.906616,-0.491841,-0.288644,-9.414384,8.997802,9.919431,-4.934057,-9.614335,3.307352,-1.981157,3.190060,9.096759,6.386326,-8.692497,-3.624535,-0.490130,-9.922254,-9.685557,6.835344,2.158759,-5.444313,8.849647,2.828162,9.953626,-7.673476,-4.499941,-3.823703,-0.574531,-1.229960,-8.875355,3.788159,8.857897,4.530026,-2.617956,0.063896,1.425282,-0.654237,-1.828641,-9.673635,-6.370514,4.385835,6.215169,2.323869,4.804992,-5.512972,-5.004179,-6.307903,-7.555120,1.027961,-7.740127,-7.025069,-6.124581,-5.947360,-1.339651,-9.426541,5.791188,8.781882,8.874335,5.420624,7.175642,-5.302959], dtype = "float64")#candidate|6356|(2184,)|const|float64
call_6351 = relay.TupleGetItem(func_5918_call(relay.reshape(var_6352.astype('float32'), [16, 1, 2]), relay.reshape(const_6353.astype('int64'), [112, 4]), relay.reshape(const_6354.astype('uint8'), [5, 150]), relay.reshape(const_6355.astype('float64'), []), relay.reshape(const_6356.astype('float64'), [2184,]), ), 1)
call_6357 = relay.TupleGetItem(func_5924_call(relay.reshape(var_6352.astype('float32'), [16, 1, 2]), relay.reshape(const_6353.astype('int64'), [112, 4]), relay.reshape(const_6354.astype('uint8'), [5, 150]), relay.reshape(const_6355.astype('float64'), []), relay.reshape(const_6356.astype('float64'), [2184,]), ), 1)
func_5237_call = mod.get_global_var('func_5237')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_6358 = relay.TupleGetItem(func_5237_call(), 0)
call_6359 = relay.TupleGetItem(func_5239_call(), 0)
bop_6372 = relay.bitwise_xor(call_6351.astype('int32'), const_6355.astype('int32')) # shape=(112, 4)
bop_6375 = relay.bitwise_xor(call_6357.astype('int32'), const_6355.astype('int32')) # shape=(112, 4)
output = relay.Tuple([call_6339,var_6352,const_6353,const_6354,const_6356,call_6358,bop_6372,])
output2 = relay.Tuple([call_6340,var_6352,const_6353,const_6354,const_6356,call_6359,bop_6375,])
func_6384 = relay.Function([var_6352,], output)
mod['func_6384'] = func_6384
mod = relay.transform.InferType()(mod)
var_6385 = relay.var("var_6385", dtype = "float32", shape = (32,))#candidate|6385|(32,)|var|float32
output = func_6384(var_6385)
func_6386 = relay.Function([var_6385], output)
mutated_mod['func_6386'] = func_6386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_990_call = mod.get_global_var('func_990')
func_991_call = mutated_mod.get_global_var('func_991')
call_6408 = relay.TupleGetItem(func_990_call(), 0)
call_6409 = relay.TupleGetItem(func_991_call(), 0)
func_772_call = mod.get_global_var('func_772')
func_776_call = mutated_mod.get_global_var('func_776')
const_6435 = relay.const([-10,5,2,-8,-6,2,-10,3,-3,3,9,-1,2,-3,7,-7,9,-5,-6,5,9,-1,-6,2,7,7,5,2,6,-4,7,9,3,-6,8,-5,1,-4,10,-6,-3,-3,-1,-6,10,9,1,-3,2,5,3,9,-6,8,-10,7,7,4,4,-2,-9,-4,-9,-5,10,-4,-2,4,-5,7,9,1,-3,2,4,-4,7,1,6,-10,8,9,5,1,8,-7,2,-2,2,2,2,-9,3,6,8,8,-9,7,10,6,-7,-6,-3,-4,6,3,2,-8,1,-4,9,-4,-9,-2,10,9,-3,6,5,2,-4,9,4,10,-1,-4,-8,-1,-9,6,-3,9,-9,-1,-3,-4,-8,4,2,9,2,-8,-2,-7,-3,4,-7,-3,6,-9,-9,-7,-7,10,8,-3,-5,-9,9,9,9,2,-4,10,-3,10,-3,-10,1,10,-3,8,-5,4,2,-7,-9,-7,-6,-5,-8,-2,4,-1,-3,-4,5,4,-8,-3,-4,-3,1,-7,1,-7,-9,-9,-2,7,3,-4,3,10,8,4,-6,-4,1,6,-5,10,-4,8,1,-3,-9,5,-5,-3,-10,5,-8,-5,-2,8,7,-1,6,9,5,4,-9,5,-5,4,-7,-1,8,1,-8,7,-8,-6,-10,-4,7,8,-6,-9,-3,-4,4,5,-3,1,-9,7,-1,-2,10,-5,-3,-2,-9,-7,5,-3,1,10,8,5,2,-5,-7,-5,4,-3,-4,-5,7,7,5,9,-10,10,-10,7,9,6,-10,2,-10,10,-1,9,7,7,8,8,3,-7,-2,-7,-6,-6,4,2,-2,-10,-9,8,6,10,1,3,-7,-9,5,-10,10,1,4,10,8,-9,-10,7,-4,2,-6,-3,5,3,-9,5,9,-3,-9,-10,-2,8,-10,2,3,-3,-8,1,8,7,7,9,8,-2,7,-8,3,-3,-10,-8,6,1,6,1,-7,5,2,1,-8,-9,-7,1,2,4,8,6,-1,-10,-10,-5,1,3,4,3,9,4,-8,5,-1,-3,-10,3,-5,-10,-7,-4,-7,-4,-10,-2,1,-4,-4,-9,7,4,-1,9,-1,3,-6,-6,3,-3,-7,2,2,8,-7,1,-1,3,1,9,3,-9,8,-1,5,2,8,1,1,7,6,-2,-2,-8,7,4,7,8,-9,6,2,8,-3,-1], dtype = "int64")#candidate|6435|(448,)|const|int64
const_6436 = relay.const([[8,1,7,3,-7,3,-10,-1,9,-5,-5,-2,-3,3,-2],[8,-5,8,-10,-5,7,1,8,-10,-9,-7,-9,-3,1,-8],[8,-3,-6,-6,-1,5,8,9,10,-2,-6,3,9,10,3],[3,3,-6,-6,-7,-3,8,10,9,9,-9,2,2,8,-1],[9,4,-1,-3,3,7,6,-9,-5,6,-2,10,-7,-5,-4],[7,10,5,2,-10,2,2,3,2,-10,3,-3,5,-5,4],[7,-3,3,-8,-10,9,-4,-7,2,4,-10,-5,-9,-5,-1],[4,-2,-4,-6,7,1,-7,-7,-3,-6,3,3,2,-10,-6],[6,8,-8,-3,7,10,6,-4,-4,3,3,7,-6,9,6],[7,-7,1,7,10,4,1,-9,-4,-1,4,-5,-1,-2,4],[-8,-1,6,-2,8,9,4,-5,-7,8,7,4,-5,-10,-7],[-6,-7,-2,10,8,-8,3,8,-6,6,3,-8,-5,1,-1],[-2,-5,-3,-2,3,-5,8,2,4,1,6,3,-8,-8,-4],[7,-5,4,9,2,-7,-10,3,-3,4,6,5,-5,-6,1],[-1,5,-1,5,-5,10,4,-9,6,5,-5,1,10,4,-8],[-5,3,6,-9,4,9,-9,5,-1,1,10,-7,-5,-6,3],[4,-4,10,-3,-10,6,-10,-4,3,6,1,10,-9,-7,6],[9,-1,-8,-3,-1,-9,-4,-10,-4,2,-6,9,3,3,-3],[1,8,2,-3,9,8,9,-7,-10,1,-4,-7,5,1,1],[8,5,-3,3,4,10,-2,-5,7,3,-7,6,-1,3,2],[5,3,-5,-9,-4,2,6,-10,-4,-4,6,-5,-3,-7,8],[10,9,-3,2,5,-6,8,3,-1,-9,-6,-6,9,-7,6],[8,-7,1,-3,4,9,-7,10,-6,-8,7,2,-7,3,-1],[-7,6,8,-6,10,-1,1,-5,9,-3,-8,1,2,-3,1],[-7,-3,-4,10,-1,1,-7,-9,3,-6,3,7,-4,-3,5],[10,-4,-4,-3,-8,5,6,4,-6,1,5,6,1,2,-6],[10,10,-9,10,-1,8,-10,9,8,-2,7,-7,9,10,2],[8,-4,-5,3,6,-6,1,9,-1,-5,-9,2,5,4,3],[-3,-9,1,3,1,-9,6,-4,-10,-3,10,9,-8,5,2],[-7,1,6,-1,-8,-6,7,9,-6,-8,5,-3,-10,-1,-2],[-3,9,-6,-9,-2,7,-6,-2,8,5,9,4,6,-2,8],[-9,-2,8,3,-4,4,5,-10,6,-6,-3,-5,-6,2,-8],[-1,-3,7,-2,-9,-5,10,7,-6,-9,6,-7,9,-1,-3],[-1,-8,-9,8,-5,-10,3,10,-1,3,-9,1,9,1,-3],[9,-9,10,9,-1,-8,5,-2,-3,3,2,4,-8,-5,3],[3,4,8,-2,-4,5,6,5,-7,3,-4,-2,10,3,10],[5,-9,-7,-3,-8,-6,10,3,9,4,9,-7,-6,2,-4],[5,-6,-8,-3,-4,9,2,-1,5,-4,-2,-8,-4,7,4],[-8,3,-5,-7,-2,-9,-2,-10,-7,-2,5,6,4,8,5],[5,2,7,8,8,-6,3,-10,-10,-10,-2,8,-10,7,6],[-9,5,-6,1,-8,-6,-5,-4,-3,-6,7,-10,3,9,-8],[-1,-3,-10,-1,-5,-9,-5,9,1,-4,-5,-2,-7,-4,4],[1,-1,-4,-5,10,-7,-10,-3,-2,1,1,8,-8,8,-1],[-6,-10,9,5,-2,-6,6,-1,-5,5,-8,9,-10,1,10],[2,6,-2,7,-1,-6,8,-10,-5,2,10,-4,8,-7,2],[2,-5,6,-3,7,-2,8,-7,6,5,1,10,2,1,-6],[9,7,-6,1,7,-3,5,6,-2,-3,2,2,-1,-1,-6],[-5,5,-8,8,2,9,2,-9,-5,3,-9,4,-1,6,9],[-7,8,10,-4,-5,-4,2,-8,6,-3,3,-6,-3,-6,-6],[-4,9,8,-6,-8,9,-7,7,1,9,2,7,-3,-4,-3]], dtype = "uint8")#candidate|6436|(50, 15)|const|uint8
call_6434 = relay.TupleGetItem(func_772_call(relay.reshape(const_6435.astype('int64'), [4, 14, 8]), relay.reshape(const_6435.astype('int64'), [4, 14, 8]), relay.reshape(const_6436.astype('uint8'), [1, 750]), ), 3)
call_6437 = relay.TupleGetItem(func_776_call(relay.reshape(const_6435.astype('int64'), [4, 14, 8]), relay.reshape(const_6435.astype('int64'), [4, 14, 8]), relay.reshape(const_6436.astype('uint8'), [1, 750]), ), 3)
uop_6469 = relay.asinh(const_6436.astype('float32')) # shape=(50, 15)
func_2307_call = mod.get_global_var('func_2307')
func_2309_call = mutated_mod.get_global_var('func_2309')
call_6477 = func_2307_call()
call_6478 = func_2307_call()
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_6486 = func_2469_call()
call_6487 = func_2469_call()
output = relay.Tuple([call_6408,call_6434,const_6435,uop_6469,call_6477,call_6486,])
output2 = relay.Tuple([call_6409,call_6437,const_6435,uop_6469,call_6478,call_6487,])
func_6498 = relay.Function([], output)
mod['func_6498'] = func_6498
mod = relay.transform.InferType()(mod)
mutated_mod['func_6498'] = func_6498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6498_call = mutated_mod.get_global_var('func_6498')
call_6499 = func_6498_call()
output = call_6499
func_6500 = relay.Function([], output)
mutated_mod['func_6500'] = func_6500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_6535 = relay.TupleGetItem(func_1197_call(), 1)
call_6536 = relay.TupleGetItem(func_1198_call(), 1)
func_3799_call = mod.get_global_var('func_3799')
func_3801_call = mutated_mod.get_global_var('func_3801')
var_6540 = relay.var("var_6540", dtype = "int8", shape = (546,))#candidate|6540|(546,)|var|int8
call_6539 = relay.TupleGetItem(func_3799_call(relay.reshape(var_6540.astype('int8'), [7, 13, 6])), 0)
call_6541 = relay.TupleGetItem(func_3801_call(relay.reshape(var_6540.astype('int8'), [7, 13, 6])), 0)
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_6543 = relay.TupleGetItem(func_2752_call(), 3)
call_6544 = relay.TupleGetItem(func_2753_call(), 3)
output = relay.Tuple([call_6535,call_6539,var_6540,call_6543,])
output2 = relay.Tuple([call_6536,call_6541,var_6540,call_6544,])
func_6550 = relay.Function([var_6540,], output)
mod['func_6550'] = func_6550
mod = relay.transform.InferType()(mod)
mutated_mod['func_6550'] = func_6550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6551 = relay.var("var_6551", dtype = "int8", shape = (546,))#candidate|6551|(546,)|var|int8
func_6550_call = mutated_mod.get_global_var('func_6550')
call_6552 = func_6550_call(var_6551)
output = call_6552
func_6553 = relay.Function([var_6551], output)
mutated_mod['func_6553'] = func_6553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6641 = relay.var("var_6641", dtype = "float32", shape = (10, 9, 8))#candidate|6641|(10, 9, 8)|var|float32
uop_6642 = relay.exp(var_6641.astype('float32')) # shape=(10, 9, 8)
uop_6646 = relay.log(var_6641.astype('float64')) # shape=(10, 9, 8)
output = relay.Tuple([uop_6642,uop_6646,])
output2 = relay.Tuple([uop_6642,uop_6646,])
func_6655 = relay.Function([var_6641,], output)
mod['func_6655'] = func_6655
mod = relay.transform.InferType()(mod)
var_6656 = relay.var("var_6656", dtype = "float32", shape = (10, 9, 8))#candidate|6656|(10, 9, 8)|var|float32
output = func_6655(var_6656)
func_6657 = relay.Function([var_6656], output)
mutated_mod['func_6657'] = func_6657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2307_call = mod.get_global_var('func_2307')
func_2309_call = mutated_mod.get_global_var('func_2309')
call_6665 = func_2307_call()
call_6666 = func_2307_call()
output = relay.Tuple([call_6665,])
output2 = relay.Tuple([call_6666,])
func_6669 = relay.Function([], output)
mod['func_6669'] = func_6669
mod = relay.transform.InferType()(mod)
output = func_6669()
func_6670 = relay.Function([], output)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_6680 = relay.TupleGetItem(func_2752_call(), 3)
call_6681 = relay.TupleGetItem(func_2753_call(), 3)
func_4457_call = mod.get_global_var('func_4457')
func_4461_call = mutated_mod.get_global_var('func_4461')
const_6701 = relay.const(False, dtype = "bool")#candidate|6701|()|const|bool
var_6702 = relay.var("var_6702", dtype = "bool", shape = (972,))#candidate|6702|(972,)|var|bool
call_6700 = relay.TupleGetItem(func_4457_call(relay.reshape(const_6701.astype('bool'), []), relay.reshape(var_6702.astype('bool'), [12, 9, 9]), ), 0)
call_6703 = relay.TupleGetItem(func_4461_call(relay.reshape(const_6701.astype('bool'), []), relay.reshape(var_6702.astype('bool'), [12, 9, 9]), ), 0)
uop_6704 = relay.acosh(var_6702.astype('float64')) # shape=(972,)
output = relay.Tuple([call_6680,call_6700,const_6701,uop_6704,])
output2 = relay.Tuple([call_6681,call_6703,const_6701,uop_6704,])
func_6710 = relay.Function([var_6702,], output)
mod['func_6710'] = func_6710
mod = relay.transform.InferType()(mod)
var_6711 = relay.var("var_6711", dtype = "bool", shape = (972,))#candidate|6711|(972,)|var|bool
output = func_6710(var_6711)
func_6712 = relay.Function([var_6711], output)
mutated_mod['func_6712'] = func_6712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_960_call = mod.get_global_var('func_960')
func_962_call = mutated_mod.get_global_var('func_962')
call_6732 = relay.TupleGetItem(func_960_call(), 0)
call_6733 = relay.TupleGetItem(func_962_call(), 0)
func_990_call = mod.get_global_var('func_990')
func_991_call = mutated_mod.get_global_var('func_991')
call_6740 = relay.TupleGetItem(func_990_call(), 1)
call_6741 = relay.TupleGetItem(func_991_call(), 1)
func_6246_call = mod.get_global_var('func_6246')
func_6248_call = mutated_mod.get_global_var('func_6248')
call_6743 = relay.TupleGetItem(func_6246_call(), 0)
call_6744 = relay.TupleGetItem(func_6248_call(), 0)
output = relay.Tuple([call_6732,call_6740,call_6743,])
output2 = relay.Tuple([call_6733,call_6741,call_6744,])
func_6754 = relay.Function([], output)
mod['func_6754'] = func_6754
mod = relay.transform.InferType()(mod)
mutated_mod['func_6754'] = func_6754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6754_call = mutated_mod.get_global_var('func_6754')
call_6755 = func_6754_call()
output = call_6755
func_6756 = relay.Function([], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_6779 = relay.TupleGetItem(func_1229_call(), 1)
call_6780 = relay.TupleGetItem(func_1231_call(), 1)
output = call_6779
output2 = call_6780
func_6787 = relay.Function([], output)
mod['func_6787'] = func_6787
mod = relay.transform.InferType()(mod)
output = func_6787()
func_6788 = relay.Function([], output)
mutated_mod['func_6788'] = func_6788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_6832 = func_1504_call()
call_6833 = func_1504_call()
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_6842 = func_2469_call()
call_6843 = func_2469_call()
func_6246_call = mod.get_global_var('func_6246')
func_6248_call = mutated_mod.get_global_var('func_6248')
call_6859 = relay.TupleGetItem(func_6246_call(), 0)
call_6860 = relay.TupleGetItem(func_6248_call(), 0)
output = relay.Tuple([call_6832,call_6842,call_6859,])
output2 = relay.Tuple([call_6833,call_6843,call_6860,])
func_6867 = relay.Function([], output)
mod['func_6867'] = func_6867
mod = relay.transform.InferType()(mod)
output = func_6867()
func_6868 = relay.Function([], output)
mutated_mod['func_6868'] = func_6868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_960_call = mod.get_global_var('func_960')
func_962_call = mutated_mod.get_global_var('func_962')
call_6877 = relay.TupleGetItem(func_960_call(), 0)
call_6878 = relay.TupleGetItem(func_962_call(), 0)
output = relay.Tuple([call_6877,])
output2 = relay.Tuple([call_6878,])
func_6881 = relay.Function([], output)
mod['func_6881'] = func_6881
mod = relay.transform.InferType()(mod)
output = func_6881()
func_6882 = relay.Function([], output)
mutated_mod['func_6882'] = func_6882
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6901 = relay.const([[[8.506369,-3.088522,-5.571881,2.021095,5.791012,-6.064511,6.373783,-1.636434,2.388386,3.996992],[7.758974,-8.386920,-6.340063,3.875391,-0.943444,-3.161525,3.118443,-8.141989,3.706670,2.767908],[-7.402550,-8.504681,3.250632,3.550122,-2.624280,-1.058854,9.558995,6.715711,1.232915,-0.455479],[9.799141,6.587968,1.909187,-9.268222,3.119402,0.147700,1.542137,2.227610,3.199960,8.251054]],[[1.736053,5.655384,-5.130269,-6.289573,-8.974594,1.829874,-1.311570,-6.323108,7.190628,-8.832910],[1.253738,-4.912782,0.778427,0.246160,5.928664,-2.947154,-6.490372,1.166989,-3.833323,-5.065099],[-5.733204,-4.053767,-0.580304,-0.947642,4.942432,-4.062628,-3.804515,7.478087,4.996051,-9.171025],[2.163089,3.057970,6.947067,-7.754028,8.694814,-7.957421,1.911637,-6.163766,8.336709,0.811562]],[[5.890233,4.977307,-2.958166,-8.196795,5.137684,-9.505474,6.728858,-8.729366,-1.393559,1.563890],[9.847841,6.864365,-9.316093,-0.203448,-7.785013,3.778287,-6.655832,-8.825023,0.706853,-6.915182],[1.802267,-9.813751,-5.671414,5.468752,5.511067,-1.247998,-1.567691,0.967717,1.350799,2.258250],[0.069628,-7.126478,2.794760,7.489315,8.140956,-0.199798,-1.358806,4.938419,3.312071,-2.363787]],[[0.206064,-1.961375,-8.391841,5.864858,3.887670,-2.210965,3.027283,-7.529569,4.445310,6.654090],[7.359002,2.420988,-1.810144,4.316991,-9.917507,9.103559,-6.904436,4.734827,5.904469,0.088279],[9.139140,-5.500793,-6.844555,-2.081176,-1.054988,-6.784637,6.350390,8.266669,-1.162908,5.477110],[-9.464284,0.418704,-0.497590,-7.652426,6.238184,8.005826,1.448766,2.895783,-4.856504,9.397437]],[[5.128114,2.925646,3.550127,7.298200,0.232661,-7.196471,4.997110,-9.441888,0.604070,3.717203],[-1.789271,9.463406,-0.276552,6.241564,-8.093339,9.280315,-8.383443,-7.034672,-3.797038,-1.255512],[5.009426,2.176799,-9.299342,-1.442609,-4.130220,-8.726513,-8.528450,-0.460071,-7.524863,-5.658118],[-3.457275,-0.916631,-3.036344,8.139721,-5.402505,-9.323647,-8.269776,-2.416691,3.597144,-2.010159]],[[5.819028,1.743126,7.326509,-4.826475,8.188694,-0.971378,1.075759,3.506611,-9.497016,-8.448652],[-0.971517,-1.645485,-5.108964,3.418750,8.487193,-6.272359,-9.083151,2.590838,1.664903,6.947861],[-8.310175,5.444630,-9.658793,9.035465,7.115838,-5.786526,-1.464207,-8.445197,3.960284,-4.110735],[-7.670644,0.116971,-5.448416,-9.608825,8.506799,1.524361,6.071790,7.358555,1.348112,-5.399381]]], dtype = "float32")#candidate|6901|(6, 4, 10)|const|float32
uop_6902 = relay.tan(const_6901.astype('float32')) # shape=(6, 4, 10)
bop_6905 = relay.right_shift(uop_6902.astype('uint8'), relay.reshape(const_6901.astype('uint8'), relay.shape_of(uop_6902))) # shape=(6, 4, 10)
uop_6929 = relay.erf(uop_6902.astype('float64')) # shape=(6, 4, 10)
func_4021_call = mod.get_global_var('func_4021')
func_4023_call = mutated_mod.get_global_var('func_4023')
var_6940 = relay.var("var_6940", dtype = "float64", shape = ())#candidate|6940|()|var|float64
call_6939 = relay.TupleGetItem(func_4021_call(relay.reshape(var_6940.astype('float64'), [])), 0)
call_6941 = relay.TupleGetItem(func_4023_call(relay.reshape(var_6940.astype('float64'), [])), 0)
const_6947 = relay.const([[[-10,6,8,4,1,-9,5,6,-5,3],[6,9,4,-1,9,-6,4,3,-2,-8],[-9,7,1,1,-6,6,-6,3,-8,-6],[4,8,-6,1,-7,4,-6,-9,-2,4]],[[5,-2,-2,-3,-7,-1,-3,-8,1,-8],[10,4,10,-2,-6,-2,6,-5,7,1],[9,5,-1,2,4,-10,-1,-10,-2,3],[9,-10,-9,3,5,2,-6,-9,-1,8]],[[-10,-10,7,-1,-2,-8,10,-8,-4,-7],[-5,-4,-7,7,-3,-3,-5,3,-5,-10],[9,-2,5,9,10,-10,-6,-5,9,-1],[5,5,-1,2,1,4,10,-8,-5,6]],[[-5,-10,3,6,-5,4,4,-2,6,-10],[-9,-6,2,6,2,-5,-10,-2,10,5],[-6,9,-8,3,-6,2,9,4,5,9],[4,6,8,-9,3,-6,-4,-9,6,6]],[[-4,7,10,5,5,-1,-7,-5,5,5],[-9,-9,6,5,9,-3,-4,8,-6,-7],[6,-10,-7,10,-8,-1,8,1,-7,5],[10,3,-10,5,-4,5,-2,-5,-9,-10]],[[1,-7,1,-2,-4,6,-5,-7,-10,3],[7,-3,4,-8,2,1,9,-10,-5,9],[-9,3,-4,1,3,7,5,-8,6,1],[2,-1,1,1,2,-5,-5,-5,9,2]]], dtype = "uint8")#candidate|6947|(6, 4, 10)|const|uint8
bop_6948 = relay.multiply(bop_6905.astype('int8'), relay.reshape(const_6947.astype('int8'), relay.shape_of(bop_6905))) # shape=(6, 4, 10)
func_5641_call = mod.get_global_var('func_5641')
func_5642_call = mutated_mod.get_global_var('func_5642')
call_6951 = func_5641_call()
call_6952 = func_5641_call()
output = relay.Tuple([uop_6929,call_6939,var_6940,bop_6948,call_6951,])
output2 = relay.Tuple([uop_6929,call_6941,var_6940,bop_6948,call_6952,])
func_6959 = relay.Function([var_6940,], output)
mod['func_6959'] = func_6959
mod = relay.transform.InferType()(mod)
mutated_mod['func_6959'] = func_6959
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6960 = relay.var("var_6960", dtype = "float64", shape = ())#candidate|6960|()|var|float64
func_6959_call = mutated_mod.get_global_var('func_6959')
call_6961 = func_6959_call(var_6960)
output = call_6961
func_6962 = relay.Function([var_6960], output)
mutated_mod['func_6962'] = func_6962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6967 = relay.var("var_6967", dtype = "uint16", shape = (5, 7, 7))#candidate|6967|(5, 7, 7)|var|uint16
var_6968 = relay.var("var_6968", dtype = "uint16", shape = (5, 7, 7))#candidate|6968|(5, 7, 7)|var|uint16
bop_6969 = relay.less(var_6967.astype('bool'), relay.reshape(var_6968.astype('bool'), relay.shape_of(var_6967))) # shape=(5, 7, 7)
func_772_call = mod.get_global_var('func_772')
func_776_call = mutated_mod.get_global_var('func_776')
var_6985 = relay.var("var_6985", dtype = "int64", shape = (448,))#candidate|6985|(448,)|var|int64
const_6986 = relay.const([5,10,-5,-6,8,-8,-9,4,5,-4,-3,1,-8,-8,-2,-8,6,4,-4,-10,2,-7,-7,4,-4,2,7,-3,-4,1,9,-3,-7,6,-7,-2,-4,-10,2,4,-6,-5,2,5,-10,-10,-6,-2,9,-4,4,-5,-7,-9,1,-8,2,8,-1,7,-1,-10,1,-2,2,7,2,-2,9,1,-7,-6,2,10,-1,5,-8,-3,-7,-7,2,2,-8,-4,-8,-8,4,3,-2,-9,3,-6,-7,8,-5,10,1,-1,8,7,-2,4,-8,4,-1,-2,-5,3,-9,-5,-8,-10,-8,-9,6,-6,-10,6,7,-10,1,3,2,9,9,-6,10,7,6,-8,-3,-3,-5,10,9,2,-4,7,5,9,-1,-2,-10,-10,-6,-9,5,1,-10,-3,3,-8,-4,-6,2,-2,10,-3,4,7,2,-10,-9,-6,-4,-2,8,-5,-7,-9,4,-10,-5,7,6,1,1,4,4,2,3,-2,-4,-1,-8,9,-2,-8,-4,10,10,-6,5,-4,-4,-5,-2,5,-6,8,9,-7,8,1,2,-10,3,5,9,-4,-6,7,-8,6,3,9,1,6,-1,3,-8,-6,-10,8,-10,2,5,-6,2,-6,-3,-8,1,6,-10,-5,-2,9,4,3,4,-10,3,-2,7,1,-5,6,2,7,-1,-8,5,-6,9,-3,-5,1,-10,-6,-3,4,-7,-3,2,-8,-4,9,8,-8,-7,9,5,-9,-3,9,3,3,6,6,5,3,2,9,-7,8,-10,-5,7,8,-10,-7,10,10,3,4,-2,7,10,6,5,-1,-1,7,-2,-9,2,5,5,10,3,-7,-2,1,-2,-9,-10,-1,-1,-10,-5,-7,-6,-1,-10,-8,6,10,-10,1,-7,-1,5,10,2,8,3,-4,-10,8,7,-4,1,-10,4,-5,4,-10,9,4,1,7,-7,-3,-8,-8,-8,6,6,-2,-1,-1,-4,3,-10,3,1,7,2,7,-2,-5,-7,10,10,2,-1,-4,2,10,-8,-5,-4,-7,4,-8,-8,7,-5,9,-2,-5,-3,-10,10,-9,3,-7,10,-5,9,3,6,3,10,7,2,-5,-2,-2,-2,-9,6,-4,-10,-3,10,-6,-7,-10,-10,6,-8,9,-3,2,-1,-2,9,-5,5,-7,3,3,-4,-4,-1,-8,-1,-1,-7,2,6,-5,2,-3,8,-3,-7,1,-1,-8,5,-3,5,1,-7,-10,-10,7,4,10,3,-3,2,-2,8,7,-7,10,-4,-6,5,-5,10,9,-3,-6,-2,7,-2,9,10,-1,-6,-1,-3,3,-4,5,10,9,-2,-10,-5,-10,-7,-7,5,-5,1,1,-4,2,-1,-3,-10,6,7,-8,-6,-9,7,9,-6,-3,10,-10,6,-2,8,10,8,-2,6,9,-10,3,6,9,4,-10,-6,9,-2,-1,-6,10,8,1,2,4,-10,-9,-8,-10,-4,7,1,-2,-6,-5,3,-8,-9,-5,-1,-5,5,-1,6,-7,4,-8,1,7,-2,-2,2,-8,-3,4,-3,6,2,-2,1,-9,-5,-7,9,-4,10,8,7,1,-10,-3,3,-10,9,5,3,-2,-1,5,-6,-2,6,-6,-5,-5,5,7,-1,5,3,9,-4,-4,-3,6,9,-6,8,-10,-3,10,-4,6,-6,-3,-10,4,-5,-10,7,-8,4,1,-5,4,5,6,1,-3,10,3,-10,4,5,-4,10,1,5,3,-5,10,1,1,5,-8,-2,6,9,-9,-4,9,4,-5,3,1,-4,-2,-6,-6,7,-7,-6,10,3,-10,-4,-8,-10,-9,10,3,-10,3,-7,8,-5,-2,-10,-6,4,9,-6,6,1,-9,3,8,-8,-9,10,-9,-2,5,3,-4,-7,3,-3,9,2,8,-3,-1,7,-6,-9,3,-5,-5,10,-3,4,2,7,-3,1,-6,-10,-7,-1,4,-9,-1,-5,-3,6,2,4,-9,-7,-9,6,5,6,-2,9,7,5,2,-4,5,-3,-4], dtype = "uint8")#candidate|6986|(750,)|const|uint8
call_6984 = relay.TupleGetItem(func_772_call(relay.reshape(var_6985.astype('int64'), [4, 14, 8]), relay.reshape(var_6985.astype('int64'), [4, 14, 8]), relay.reshape(const_6986.astype('uint8'), [1, 750]), ), 0)
call_6987 = relay.TupleGetItem(func_776_call(relay.reshape(var_6985.astype('int64'), [4, 14, 8]), relay.reshape(var_6985.astype('int64'), [4, 14, 8]), relay.reshape(const_6986.astype('uint8'), [1, 750]), ), 0)
output = relay.Tuple([bop_6969,call_6984,var_6985,const_6986,])
output2 = relay.Tuple([bop_6969,call_6987,var_6985,const_6986,])
func_6988 = relay.Function([var_6967,var_6968,var_6985,], output)
mod['func_6988'] = func_6988
mod = relay.transform.InferType()(mod)
var_6989 = relay.var("var_6989", dtype = "uint16", shape = (5, 7, 7))#candidate|6989|(5, 7, 7)|var|uint16
var_6990 = relay.var("var_6990", dtype = "uint16", shape = (5, 7, 7))#candidate|6990|(5, 7, 7)|var|uint16
var_6991 = relay.var("var_6991", dtype = "int64", shape = (448,))#candidate|6991|(448,)|var|int64
output = func_6988(var_6989,var_6990,var_6991,)
func_6992 = relay.Function([var_6989,var_6990,var_6991,], output)
mutated_mod['func_6992'] = func_6992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_6997 = relay.TupleGetItem(func_2161_call(), 2)
call_6998 = relay.TupleGetItem(func_2162_call(), 2)
output = relay.Tuple([call_6997,])
output2 = relay.Tuple([call_6998,])
func_7040 = relay.Function([], output)
mod['func_7040'] = func_7040
mod = relay.transform.InferType()(mod)
mutated_mod['func_7040'] = func_7040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7040_call = mutated_mod.get_global_var('func_7040')
call_7041 = func_7040_call()
output = call_7041
func_7042 = relay.Function([], output)
mutated_mod['func_7042'] = func_7042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mod.get_global_var('func_3434')
func_3436_call = mutated_mod.get_global_var('func_3436')
call_7043 = func_3434_call()
call_7044 = func_3434_call()
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_7048 = relay.TupleGetItem(func_591_call(), 2)
call_7049 = relay.TupleGetItem(func_593_call(), 2)
func_6988_call = mod.get_global_var('func_6988')
func_6992_call = mutated_mod.get_global_var('func_6992')
const_7053 = relay.const([-3,-3,-10,4,-10,-7,-5,-9,1,-5,-3,7,-8,-10,-5,10,-3,7,-4,5,5,8,-2,-6,-6,-3,-10,6,7,4,6,2,-9,-5,1,-8,3,-8,-4,9,-5,-10,-1,4,2,-2,4,-10,-4,-7,-6,-1,4,5,4,-7,-4,-6,5,7,-10,6,4,8,-10,4,1,-4,-7,-10,-2,-1,-7,-5,7,-8,10,10,9,-1,2,-4,1,5,-6,10,-5,6,6,-2,1,9,-3,7,-6,8,4,-2,-1,-4,3,7,-4,9,4,4,-1,-9,1,-4,-6,6,8,6,4,-8,-5,6,8,9,7,1,4,2,-8,4,-3,-4,8,-10,-10,-1,1,-4,1,5,7,-5,6,10,-8,-7,-5,-9,1,-5,-8,-7,2,-10,-7,2,-10,6,-8,3,-1,4,1,8,5,-4,2,3,-5,8,9,5,-10,-9,-9,2,-1,5,4,-6,9,-3,1,4,9,7,3,-9,-7,9,1,6,-10,5,-4,-4,-1,3,-2,-10,-8,-1,3,6,-10,-5,-8,4,10,3,-2,-7,3,9,-7,-6,-9,8,9,-1,-8,-10,7,-6,5,3,6,4,-1,5,-3,-5,-10,-4,6,5,-4,-10,-1,2,-6,5,8,-3,2,7,1,-10,4], dtype = "uint16")#candidate|7053|(245,)|const|uint16
const_7054 = relay.const([3,6,-3,-1,1,-5,2,-3,-2,-5,8,-2,2,3,1,-9,6,-6,-4,-7,2,1,1,-6,6,-6,5,7,-2,-3,4,9,-7,-8,-1,5,10,7,1,6,5,6,-10,7,3,8,4,-9,2,2,-4,-7,7,6,7,7,-4,2,-8,-9,-1,-10,4,-5,-7,-10,-6,-3,-8,2,3,-9,-4,2,-2,-3,-7,7,2,-6,9,-10,-2,9,-4,-7,-10,-3,-7,-6,-5,3,2,1,-2,-5,-4,9,7,-8,-8,-5,3,-3,-2,-1,-8,9,2,7,7,-8,-4,9,-2,-10,3,-9,5,9,10,4,-2,-1,-3,2,-8,-2,-5,4,7,-10,-3,-7,2,8,5,2,-7,4,1,9,-4,4,10,-9,-3,-7,9,-7,-1,-4,6,-4,1,2,-3,5,-2,9,6,10,8,-8,-5,-1,-9,-3,-3,8,4,-9,-3,-4,-1,8,10,1,-9,-6,-5,1,2,-8,8,10,-8,-8,-3,-7,-3,4,-4,1,5,6,-6,3,-8,4,9,-9,-5,9,7,-2,10,4,-2,-5,-6,-4,-7,-2,-8,-2,-4,-5,8,-7,-9,-7,-7,-2,10,4,8,8,-5,-2,-9,-9,7,-2,-7,2,-7,4,2,3,-3,7,4,-9,-6,-1,5,-5,-3,7,-5,-5,-10,8,-5,3,9,1,5,-4,1,3,-7,-10,7,-10,8,5,-2,-9,6,-7,4,-2,-8,-8,-4,-8,-1,-9,8,9,5,-6,-10,6,-1,-3,-8,1,-1,-4,-10,-4,-1,-9,4,-8,3,6,1,9,2,6,-7,8,6,1,-4,-8,9,7,7,-4,9,4,-1,-3,-5,5,-8,7,4,-1,-4,7,-8,9,-10,-6,3,1,2,-9,3,-10,6,6,-7,2,7,7,4,3,-10,-2,-10,7,7,1,-9,-4,8,8,-6,-9,10,10,-5,-7,-3,-8,-4,-5,10,-4,8,-7,-5,-4,-5,-5,10,-8,-8,9,-6,4,-1,-4,6,-1,5,1,-3,2,-9,-1,-2,-5,6,4,9,5,-7,-1,6,-7,10,-4,2,-10,-4,-9,4,9,-6,-1,8,-6,-4,8,-9,-2,3,-3,-3,-4,-8,5,9,-1,4,-1,-7,-9,-2,-2,2,-1,3,9,-8,4,8,-7,1,1,9,2,-8,8,10,2,-5,6,-8,-5], dtype = "int64")#candidate|7054|(448,)|const|int64
call_7052 = relay.TupleGetItem(func_6988_call(relay.reshape(const_7053.astype('uint16'), [5, 7, 7]), relay.reshape(const_7053.astype('uint16'), [5, 7, 7]), relay.reshape(const_7054.astype('int64'), [448,]), ), 0)
call_7055 = relay.TupleGetItem(func_6992_call(relay.reshape(const_7053.astype('uint16'), [5, 7, 7]), relay.reshape(const_7053.astype('uint16'), [5, 7, 7]), relay.reshape(const_7054.astype('int64'), [448,]), ), 0)
func_1770_call = mod.get_global_var('func_1770')
func_1772_call = mutated_mod.get_global_var('func_1772')
call_7068 = relay.TupleGetItem(func_1770_call(relay.reshape(call_7048.astype('uint8'), [750,])), 1)
call_7069 = relay.TupleGetItem(func_1772_call(relay.reshape(call_7048.astype('uint8'), [750,])), 1)
uop_7083 = relay.acosh(call_7048.astype('float64')) # shape=(15, 5, 10)
uop_7085 = relay.acosh(call_7049.astype('float64')) # shape=(15, 5, 10)
func_3554_call = mod.get_global_var('func_3554')
func_3557_call = mutated_mod.get_global_var('func_3557')
const_7096 = relay.const([5.504927,-8.059382,-8.455324,0.138339,-7.265504,-0.475612,1.847483,3.124772,1.920741,-2.308002,-2.606126,-8.066005,-2.310885,5.679524,-9.919632,-6.519352,-3.940508,-2.107128,-6.238092,-6.894110,-3.516190,9.445181,7.753304,9.171224,3.663614,-0.056895,-2.185406,9.077523,-0.899925,-1.099930,2.202817,-0.295603,-0.718335,-9.555380,-5.426937,9.881254,7.751565,-2.791034,8.594960,9.008330,0.201909,-5.448194,-4.322496,-4.713173,-2.634944,2.931679,-4.430258,-1.790647,5.160090,9.381328,3.262129,-5.309389,3.475034,3.191932,-3.937959,7.526651,-3.377714,-0.511852,0.284523,5.142056,1.455775,3.395712,-5.788422,-3.817292,5.617322,5.332179,-0.539847,9.602537,2.830480,-0.129791,-2.944277,5.049298,7.726293,0.356763,3.172195,8.762902,-2.518099,-1.678887,-4.661552,-9.448513,-1.400971,-9.876563,7.640410,-9.496139,9.909917,0.836272,-1.342430,-4.629223,-2.986195,-6.452949,7.498824,-9.658947,3.602908,-9.512725,-4.029372,3.432681,3.010762,0.243001,0.549197,1.656246,6.682228,-1.677018,5.727476,8.483038,2.650971,9.126761,1.811994,-1.418848,-5.285297,-7.740974,1.803735,6.837651,-6.510296,2.087523,-3.772639,-0.606718,1.976330,9.303239,3.242463,-2.727322,9.075392,7.726026,-9.451819,9.105565,5.955069,0.186177,9.347055,8.623202,5.681177,5.799407,0.491660,6.051619,4.503749,9.650806,-2.166931,6.813270,-5.404992,-4.471386,-8.160134,4.627910,-7.650336,-7.023025,-1.160666,6.786873,-1.658117,8.319477,-1.014842,7.765228,-9.135519,-5.602171,-8.390252,-9.581285,6.303768,8.369539,-7.731964,0.828824,1.378969,-6.782779,5.429725,-1.659864,-7.075326,5.092330,-7.493880,-7.448568,5.032156,2.187490,-7.704477,-9.381821,0.564543,9.865193,7.411143,-7.032610,-1.582978,-8.734071,-6.742253,-4.645939,-5.487441,1.327188,-8.301010,3.396071,-5.833813,6.721757,-8.741422,-6.305477,-6.778011,1.581173,-9.245420,-7.839292,-3.552089,-5.626999,6.915679,-2.849047,-7.331629,5.072766,3.600250,9.688720,7.103855,9.819490,-6.536955,9.810703,0.183839,-4.689540,-4.296350,9.259270,5.651748,3.718257,-7.329804,5.277085,2.981180,9.953748,5.140102,7.352348,2.323869,1.217382,-2.671472,-2.983848,6.728686,-0.201086,-9.345607,0.924305,6.332854,-6.277800,-6.086632,1.159980,-3.576528,-3.257108,4.494142,0.993260,-0.187545,-4.171157,0.767901,7.992570,-6.863435,7.403067,1.290943,-4.206047,2.700242,-5.648698,-7.407339,-3.202433,-6.071558,5.858355,-1.522964,-8.688284,8.418445,2.902951,-0.231424,0.895815,-2.625479,1.429311,6.841578,8.023260,-3.118209,-0.415556,5.645439,-1.239220,-5.137981,7.519690,-7.133385,7.393788,-8.608960,-1.264863,3.963296,3.690576,-8.212664,4.223481,7.228376,1.187969,-8.509502,-0.561291,-6.036948,7.374184,-4.165209,8.692062,5.232090,-9.772916,3.592057,-9.108840,0.565974,4.237964,-6.653183,9.616970,4.596353,9.033261,8.931718,3.818777,-2.465389,-2.188897,4.488910,1.869767,-3.904181,-1.836587,5.411117,8.077856,8.336057,-7.985254,3.156904,6.804601,-0.162185,3.492768,-2.228666,9.646325,8.300722,-6.260014,4.719407,4.708989,1.443137,-4.382321,-4.346539,4.276312,-6.278275,1.246350,-7.303943,-8.477284,-8.393773,-6.343154,-0.551044,3.395493,9.643519,-0.031268,-2.875917,-7.154487,3.475392,-0.072647,-5.273120,7.675846,5.247620,0.580903,4.313232,8.464852,0.044333,3.096210,8.254351,9.504532,-5.876433,-8.809264,-2.991393,-5.048284,0.096698,7.443751,7.688231,-7.619517,-2.884336,-0.851856,7.613858,3.265050,2.567253,-7.829951,3.511395,2.934974,8.299853,-6.346030,-9.368438,0.810660,8.610013,-0.744753,-2.201146,-7.597620,-3.075291,-8.485372,-2.072091,-3.102905,-8.092249,-9.744683,-9.274407,5.889255,3.407685,7.954650,7.560241,0.702766,-0.812566,7.702570,-0.114784,0.660836,-1.768139,-8.696402,3.675152,-6.609283,0.275610,3.437873,-0.740343,7.836232,8.058847,6.193183,-6.073141,2.074932,-5.085090,6.886148,-7.170602,0.828587,-7.419398,7.562920,-4.597916,-1.349709,6.651232,-0.898757,-4.391796,1.652458,-9.640701,-4.075037,-4.827619,1.816686,-5.890812,0.400386,1.860143,3.641907,4.166369,6.502150,-4.659295,5.558297,-5.206714,7.409246,-8.886878,-6.694430,-1.013917,7.614906,-8.460989,4.816831,6.664331,-7.583172,-7.191547,-2.078504,-5.723251,2.718843,1.741913,-7.343560,-6.276944,4.588621,4.533623,-6.634058,-4.891429,-4.715644,-4.880291,-9.382577,-3.738463,8.175543,-5.761113,-1.045238,3.587783,-8.802846,9.418422,-3.731898,-9.181677,-7.872939,6.156017,1.810277,-9.802664,0.495251,-5.463835,-9.204418,-2.252982,1.188281,7.500764,9.206157,7.272815,-3.759206,1.851336,3.375145,-8.901342,6.943601,-6.657522,3.052113,-6.190518,8.494486,-3.590620,6.232768,8.375056,-8.192109,8.261670,-0.444407,5.942445,3.958165,2.741570,-0.424349,-1.012835,-6.797342,8.773937,8.935639,-7.403392,-4.229314,-4.204624,2.600003,-2.490946,-7.325415,9.633883,-0.643716,4.359049,5.746702,-2.553030,-4.797404,6.119403,2.366773,1.375487,-4.126330,-8.185196,-2.563570,2.362829,-4.166426,2.644831,6.451373,0.436036,6.966297,4.898771,-9.646448,2.908199,-2.481373,3.649841,1.028954,-9.898203,-8.195743,-1.309823,8.591112,-9.328669,4.543058,-5.185074,-5.508455,-9.287905,4.634911,8.079579,-6.635240,-3.923636,7.488710,-8.750240,-2.962551,4.883746,2.175657,-0.289272,3.560049,3.816652,-9.113654,5.332276,9.961168,0.838059,8.488697,-5.729734,6.676235,-4.789154,-8.077861,1.615657,5.679464,7.033180,-7.241629,8.125438,-5.512029,-2.324831,-5.140219,-4.994778,5.818845,-7.048289,-8.364573,-6.474438,-3.580083,-9.684816,-7.521262,8.606960,-6.492105,-7.313362,-0.691679,-3.646905,-4.258085,-6.661637,-7.640722,4.523671,-0.886812,-8.980637,-9.731101,-3.849377,9.878461,-2.666804,-1.734632,5.712526,-5.750245,8.115510,2.936487,-2.296525,-4.774714,9.900585,8.587238,-5.273305,-2.082103,-3.832633,-9.698058,6.662114,5.382528,9.831711,-2.568033,0.957500,-3.999293,4.807127,-4.785179,-4.123761,-3.209196,-8.766399,-3.363786,7.546517,7.312369,0.338463,-8.970022,-6.182651,-9.938730,5.950359,-0.112310,-3.577597,6.617834,0.402824,4.012317,-8.689066,9.177702,3.380581,-4.924581,-9.553762,-3.141417,3.995429,7.485117,-6.295948,6.695289,-7.237259,-7.027362,-4.120889,-3.205011,-3.141967,3.350603,-6.789509,4.022422,-1.564965,-8.699796,1.925422,0.673157,-2.611881,-0.056499,-6.588859,-7.577783,-3.159910,8.907533,0.380788,-1.144101,9.120712,-2.679738,-2.758266,3.473657,3.330070,0.490268,-1.077512,2.952985,2.448546,-4.162908,6.020204,-5.314694,4.382606,5.009679,-9.055796,-5.088041,0.994858,3.597323,-9.123511,8.796281,-5.650210,9.818301,6.774882,9.647444,-0.562352,-9.619203,8.466776,1.768384,8.719974,6.043394,-0.649416,6.796528,-7.379757,9.542039,-4.600278,4.142744,-9.642402,5.815499,7.938522,-0.659320,-7.562670,-2.422113,-7.071970,6.539516,-6.109525,1.205319,-6.257165,-7.148682,7.448499,-9.939544,-2.680052,-2.117083,-4.339451,-5.513502,8.357417,9.590711,-5.263890,9.205353,-2.395092,-0.359031,8.992879,8.320625,-8.699751,-2.312698,-4.091691,0.415346,-2.998584,7.804726,-9.041278,3.655487,-4.986222,2.478030,-8.697167,6.377969,4.525481,9.816946,1.301118,2.972812,-5.855552,8.709548,-4.507801,-4.032535,0.017494,9.474413,1.323717,5.920310,2.636696,-6.070986,5.302343,-0.395581,6.061873,0.207240,7.549261,1.029935,-7.735511,-2.665653,9.936629,-1.553369,-4.682181,-4.540456,-6.609646,4.488933,1.908835,4.464331,-5.276141,0.633786,2.126442,-9.118846,4.519082,-2.230394,5.967364,-2.090276,2.585899,5.477663,-4.876507,-9.266773,6.944232,8.477572,6.622883,9.051075,-3.149590,-7.867782,2.136808,-9.815962,-3.258615,-8.643324,3.773560,-6.074360,4.300512,-4.254900,-6.348670,-9.327621,3.035758,-8.609769,-1.969832,-4.011042,-2.058597,-7.330192,4.464531,4.544254,-6.817940,4.568148,-6.151036,-7.143466,6.498371,-9.832212,1.479234,5.476071,-0.379396,-8.755871,7.000490,1.271912,0.952957,1.683353,7.919502,-1.092375,0.219313,5.101987,2.000011,9.577265,1.324296,-8.037756,1.620934,8.546115,3.130729,-7.222831,-1.836050,3.350575,-9.431596,-6.393030,6.677491,7.508160,3.006843,-8.450187,-3.384114,3.095199,9.117518,4.064925,-3.113436,-8.292756,-6.213618,-8.348488,6.249078,-7.447442,8.606937,8.678174,9.195928,3.735837,4.363526,8.110975,5.383522,4.167720,3.367887,6.876335,0.349011,5.619806,6.825034,-8.208025,7.052135,-0.214290,-8.717876,2.562812,-6.215678,-2.982114,3.119762,4.564186,-2.491645,5.099829,0.225105,3.302892,4.921258,-3.270411,0.528127,6.146418,2.225540,1.397846,5.881741,1.010686,6.267650,9.095278,-4.941673,0.599509,-6.488441,-4.469595,-1.349920,-5.748791,-2.111717,-1.208811,-2.620194,6.803981,1.130780,2.679164,5.991955,-8.567102,-2.327488,7.852302,-9.727953,3.553797,-0.002156,5.920765,-9.061284,-3.185457,-5.399171,-5.261211,-6.784941,1.652833,-1.845133,-6.407258,9.854120,-9.049774,-5.376409,-9.817235,-8.150020,6.644447,8.639507,9.595412,9.670383,8.124099,-4.262055,-0.387849,3.090491,-2.914238,-4.988113,0.752553,5.734072,2.420796,-3.904275,5.879368,5.317474,1.900680,3.738014,-7.283893,-6.047164,-1.995581,0.662793,9.027839,-4.661456,-1.398215,-1.741484,4.723493,0.491320,6.250255,-3.541996,9.077564,-6.624971,6.962641,0.645846,-6.695172,1.954652,3.413414,2.789339,6.177802,-9.692830,-3.890952,3.830707,7.611882,-7.205272,-1.473734,4.486263,-1.471239,-0.047537,4.281286,-0.019079,3.618777,-8.191714,-1.561584,0.904138,-1.609876,-6.597618,-9.441431,-3.767814,-9.823854,5.984675,3.721522,-3.803320,-7.858289,4.114494,4.566538,8.013868,7.792239,2.836875,7.074622,8.258714,-6.910458,-5.293869,-3.665404,-8.956973,1.036497,9.906697,-4.260658,-2.675567,0.721460,-8.835253,0.996408,2.517358,-7.668632,6.351504,-7.031714,0.430013,-5.076580,9.750755,-9.943941,3.906344,9.091670,-7.839057,9.626829,-8.908112,9.730199,2.872390,-9.424343,3.666773,3.089744,-1.943826,-1.482833,-2.260162,3.822460,1.182269,-9.374316,8.560988,3.983560,0.961573,5.182320,9.126414,1.187122,7.528063,-4.502402,-4.832917,1.462201,5.182959,-3.083504,-1.158558,2.516382,4.137310,6.474649,-4.401312,-0.661534,4.985155,7.911289,-0.176199,6.329631,8.598938,8.621359,7.567713,-7.887808,-1.444004,-9.858957,2.148975,-9.654935,5.438598,5.761208,-3.955347,-2.294078,7.389992,1.893873,-0.843459,-7.418490,-7.026382,7.985186,-3.192771,-1.521160,-2.031534,-6.172574,-6.439879,-3.096377,-0.819118,2.721979,0.825894,-2.318789,-4.863047,1.395076,-0.692173,-3.377226,4.457535,-8.900702,5.653534,-2.365296,9.785203,2.060243,7.630377,-9.643812,-1.165960,-2.568311,6.428377,-5.926039,-8.681730,-1.888529,4.381467,7.521231,-3.083657,6.642813,-8.134302,3.788373,-7.992588,-9.374413,-4.469597,5.989266,-1.206942,-9.498935,-1.371150,3.730992,-8.746609,5.619108,-4.293462,-3.559011,-2.961055,9.526853,0.652754,-1.070125,3.788413,7.783147,4.298147,-5.060979,7.546377,2.507040,-1.582035,-4.021041,-0.576508,-5.001451,8.557951,4.139433,-4.179322,-8.518981,2.065256,4.540126,6.406349,-5.782646,5.161607,7.773659,-2.133627,-5.321466,5.136995,4.659984,-5.097061,6.362623,0.667415,2.500479,4.595482,5.341034,2.826949,4.285984,-6.633909,3.372295,7.155615,-7.346299,-1.919402,-9.345693,2.315792,6.598827,2.555731,9.920206,-6.742287,3.899163,8.010454,-7.326653,5.198776,5.180763,-3.224265,-9.378527,2.161696,8.567903,2.261095,-9.366177,3.125881,8.068781,-6.454442,9.131023,8.339913,-8.542424,-5.080136,9.728769,-2.395409,8.996335,-4.287246,-8.928827,-7.695132,9.840315,0.919959,-9.261801,6.786637,-0.252207,5.553394,-2.316529,-1.140021,1.239627,-9.030556,-3.865947,6.985197,4.810930,3.859286,-0.742124,5.709598,-4.608649,1.108005,8.179719,-7.642864,-1.033729,-2.873661,-7.217081,1.163351,3.635839,4.235363,-2.825754,1.282281,-1.305693,-6.090395,-5.496042,-3.084261,-2.079844,6.709608,-3.898608,5.759932,1.851232,-8.110622,-3.747379,9.111018,7.230795,-1.283350,-1.079348,7.126395,-0.783027,9.911814,7.664969,8.242775,2.358054,5.736551,-2.476656,-8.679276,-8.995866,-9.577904,-1.796407,-0.281572,-3.732330,0.429722,-3.516302,5.800111,-5.088851,6.788973,-4.172665,-9.996678,-3.474326,8.387107,-8.315168,-3.311163,-0.495761,-4.165664,2.423231,-4.658491,0.993661,-3.575373,-1.255477,-3.614266,-5.822573,-3.072670,9.888345,-2.227136,2.256073,-7.911543,2.345425,-0.263210,4.981616,-7.100352,-5.018968,-3.357369,-0.128876,3.184948,-6.428980,-3.674250,-7.522541,9.571871,0.503764,2.788585,-9.256780,-0.686957,-5.257472,3.003910,5.435867,-1.336843,0.960623,4.083095,1.176786,-8.884111,4.506243,-1.355922,-1.657332,8.629037,8.138535,-3.042120,-0.014608,3.944306,4.217157,5.567440,-5.407445,-9.328324,-3.431429,-6.162261,1.121742,-0.813118,2.515989,-0.191774,-3.128498,5.308920,-3.072828,0.608358,-1.671066,3.448448,-1.956894,9.011162,2.223308,-7.060476,4.730578,4.170172,0.199556,0.344760,6.802451,-9.268746,4.602293,6.907165,0.260328,0.713730,-9.991699,-0.272469,1.959266,8.263787,9.747237,-4.253583,-6.062324,2.917410,9.976357,-8.496424,-0.289736,3.382592,-8.690111,7.518466,3.679845,-9.386040,-5.724411,-3.743078,-5.835766,-1.260921,4.927905,-5.766882,-2.231474,-2.294150,1.760360,-2.711185,4.437156,3.032648,7.473924,-7.395694,1.334453,-0.532153,4.194970,6.617566,-3.181118,6.567169,4.653978,-5.232836,-1.454493,5.493980,8.531340,8.793566,3.970186,8.429719,-0.667398,-7.797382,-9.490481,8.725100,8.627019,8.338037,-0.407486,-4.205686,-5.946142,9.716772,7.560444,-6.222484,6.324008,2.332881,7.078054,0.746140,-4.734425,2.693828,-2.806006,-0.476003,-3.806576,4.522408,9.352425,-4.415071,-0.210255,-4.950083,-6.335116,5.601217,-6.377440,1.557350,0.186203,7.875591,-6.819443,-6.075965,3.950713,-7.868110,-4.583586,-0.335488,0.073810,0.287007,8.804031,4.294059,5.482421,2.378567,-6.752129,2.986993,6.562866,6.384527,1.763196,-9.113086,4.091805,-7.891696,-2.674625,8.672597,7.440893,-0.716723,-7.516484,6.124256,-1.870032,6.515352,8.251419,-1.571385,-1.703678,-5.477499,4.401108,-7.834975,9.399938,-0.393680,-8.456105,-6.612336,-9.894903,-2.015142,-3.480345,-8.462480,-3.970700,2.201524,-8.393401,-7.574859,-2.900027,7.270218,4.932232,-3.080305,-7.895991,-4.335667,-7.832399,7.203597,1.552345,1.944030,1.684121,-9.856196,9.819918,2.479643,8.192953,-3.493748,-9.464775,3.206573,-1.092989,-9.354489,-9.697985,7.924151,4.604133,-3.081627,-4.658150,3.970494,1.252501,7.611101,7.411824,0.437265,-6.494657,-1.583395,2.083424,-6.210235,6.545509,-7.223139,1.916243,-6.378892,-2.825267,-2.220264,-0.859671,-8.713948,4.720490,7.161199,-1.356817,-0.707386,-3.038549,0.024502,-9.721384,2.106777,9.150865,-6.908287,1.263270,7.690431,9.729145,-5.624942,0.071233,1.806902,-8.100151,-2.546411,9.931872,2.338761,1.596764,5.386959,-8.579235,-6.960098,0.626177,9.659486,7.515536,-2.199247,-8.467279,7.532805,-9.598066,-0.742818,7.340211,1.298088,1.727212,-5.935795,-1.144752,5.771064,6.046697,-9.567999,-8.927893,0.335107,-5.324500,-2.302651,4.065513,4.323924,-1.943806,-7.999159,-0.958661,4.427653,6.047133,-5.878367,1.466730,-2.269482,9.645044,7.586810,-5.966839,-2.970440,4.259384,8.138137,-7.081078,-7.268671,6.247293,-9.559697,-3.833973,4.849134,2.511965,2.225558,7.611171,3.116023,-5.725759,-7.008300,-6.764772,-2.459400,9.758122,-5.881477,-9.613365,8.261595,5.111756,0.676472,3.881027,5.155510,-5.703555,8.030944,9.895449,6.683585,-1.420743,-0.727944,-4.253095,-2.277446,0.582377,4.655309,1.674767,4.492225,-6.202978,-4.267750,8.915387,-5.146376,9.954161,-5.515238,3.694390,-0.225404,2.844516,-9.490945,1.107832,-8.947496,1.191538,-9.495388,-5.588679,2.777307,-1.942887,-1.652477,-1.771086,-2.919064,-2.639582,-2.407054,-5.496600,1.231932,2.942709,4.526495,-8.352230,8.770919,1.536567,-3.405220,8.893325,-9.501010,-3.273895,-6.210807,4.722307,-1.669441,0.104678,0.326823,9.016195,8.419517,-8.657057,-1.242194,-9.726264,-5.530128,8.697864,4.839776,0.708390,5.199499,-4.427218,-1.201323,-2.327177,-4.063842,8.025707,3.984710,-1.783417,3.835087,5.568241,-1.825732,-8.134034,8.754114,5.022196,-4.680213,-6.492130,-8.347543,7.245617,-8.092900,8.900665,3.522212,3.325174,-8.423241,-1.843705,-0.432744,2.858897,9.267998,-9.061578,8.565819,-9.341287,-9.395225,4.132897,3.148976,2.174470,-8.232394,-9.164900,4.776684,-3.029370,-1.632704,2.741153,-7.733121,5.283666,-1.223300,-7.421356,6.167193,-4.981398,8.630664,0.618141,-6.064452,5.718920,8.716616,1.169841,8.419160,-8.329870,-1.123084,-4.619458,-0.191230,-8.568231,7.290021,1.629551,6.416886,-7.584852,7.281223,-8.513259], dtype = "float64")#candidate|7096|(1664,)|const|float64
call_7095 = relay.TupleGetItem(func_3554_call(relay.reshape(const_7096.astype('float64'), [13, 8, 16])), 0)
call_7097 = relay.TupleGetItem(func_3557_call(relay.reshape(const_7096.astype('float64'), [13, 8, 16])), 0)
bop_7098 = relay.power(uop_7083.astype('float64'), relay.reshape(call_7048.astype('float64'), relay.shape_of(uop_7083))) # shape=(15, 5, 10)
bop_7101 = relay.power(uop_7085.astype('float64'), relay.reshape(call_7049.astype('float64'), relay.shape_of(uop_7085))) # shape=(15, 5, 10)
var_7108 = relay.var("var_7108", dtype = "float64", shape = (15, 5, 10))#candidate|7108|(15, 5, 10)|var|float64
bop_7109 = relay.greater(uop_7083.astype('bool'), relay.reshape(var_7108.astype('bool'), relay.shape_of(uop_7083))) # shape=(15, 5, 10)
bop_7112 = relay.greater(uop_7085.astype('bool'), relay.reshape(var_7108.astype('bool'), relay.shape_of(uop_7085))) # shape=(15, 5, 10)
func_5517_call = mod.get_global_var('func_5517')
func_5520_call = mutated_mod.get_global_var('func_5520')
var_7114 = relay.var("var_7114", dtype = "uint32", shape = (1274,))#candidate|7114|(1274,)|var|uint32
call_7113 = relay.TupleGetItem(func_5517_call(relay.reshape(var_7114.astype('uint32'), [13, 14, 7])), 0)
call_7115 = relay.TupleGetItem(func_5520_call(relay.reshape(var_7114.astype('uint32'), [13, 14, 7])), 0)
uop_7122 = relay.exp(bop_7098.astype('float32')) # shape=(15, 5, 10)
uop_7124 = relay.exp(bop_7101.astype('float32')) # shape=(15, 5, 10)
output = relay.Tuple([call_7043,call_7052,const_7053,const_7054,call_7068,call_7095,const_7096,bop_7109,call_7113,var_7114,uop_7122,])
output2 = relay.Tuple([call_7044,call_7055,const_7053,const_7054,call_7069,call_7097,const_7096,bop_7112,call_7115,var_7114,uop_7124,])
F = relay.Function([var_7108,var_7114,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7108,var_7114,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

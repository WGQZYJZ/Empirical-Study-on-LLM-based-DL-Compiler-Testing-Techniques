==========mod==========
#[version = "0.0.5"]
def @func_1920() -> (Tensor[(7, 14, 14), float32],) {
  %0 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  (%0,)
}

def @func_14670() -> Tensor[(7, 14, 14), float64] {
  %1 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1.1
}

def @func_13987() -> (Tensor[(7, 14, 14), float32],) {
  %2 = @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %3 = %2.0;
  (%3,)
}

def @func_11205() -> (Tensor[(7, 14, 14), float32],) {
  %4 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %5 = %4.0;
  (%5,)
}

def @func_8074() -> (Tensor[(7, 14, 14), float32],) {
  %6 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %7 = %6.0;
  (%7,)
}

def @func_5953() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %8 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %9 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %10 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %11 = @func_2628() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %12 = %8.0;
  %13 = @func_2515() /* ty=Tensor[(7, 14, 14), float32] */;
  %14 = %9.0;
  %15 = %10.0;
  %16 = %11.2;
  (%12, %13, %14, %15, %16)
}

def @func_14761() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  %17 = @func_7876() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %18 = %17.2;
  %19 = @func_11398() /* ty=Tensor[(7, 14, 14), float32] */;
  (%18, %19)
}

def @func_1756(%var_1731: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
  %20 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %22 = reshape(%21, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %23 = @func_374(%22) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %24 = @func_1537() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %25 = %24.0;
  %26 = cast(%25, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %27 = reshape(%26, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float32] */;
  %28 = @func_996(%27) /* ty=(Tensor[(7, 14, 14), uint64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %29 = cast(%var_1731, dtype="uint16") /* ty=uint16 */;
  %30 = reshape(%29, newshape=[]) /* ty=uint16 */;
  %31 = @func_479(%30) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %32 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %33 = %23.1;
  %34 = %28.4;
  %35 = %31.1;
  %36 = %32.0;
  (%20, %33, %25, %34, %35, %var_1731, %36)
}

def @func_16313() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %37 = @func_7664() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %38 = @func_14670() /* ty=Tensor[(7, 14, 14), float64] */;
  %39 = %37.0;
  (%38, %39)
}

def @func_11537(%var_11492: Tensor[(360), uint32]) -> (Tensor[(7, 14, 14), float64], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], Tensor[(7, 14, 14), float32], Tensor[(5, 10, 14), float32], Tensor[(1, 700), float64]) {
  %40 = @func_10953() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %41 = cast(%var_11492, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %42 = reshape(%41, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
  %43 = @func_1564(%42) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
  %44 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 700), float64] */, dtype="float64") /* ty=Tensor[(1, 700), float64] */;
  %45 = reshape(%44, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
  %46 = @func_10377(%45) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(5, 10, 14), float32]) */;
  %47 = %40.1;
  %48 = %43.0;
  %49 = @func_2090() /* ty=Tensor[(7, 14, 14), float32] */;
  %50 = %46.1;
  (%47, %48, %var_11492, %49, %50, meta[relay.Constant][0] /* ty=Tensor[(1, 700), float64] */)
}

def @func_9856() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  %51 = @func_9453() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %52 = @func_5374() /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), uint32]) */;
  %53 = @func_9139() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %54 = %51.0;
  %55 = %52.1;
  %56 = %53.0;
  (%54, %55, %56)
}

def @func_14406(%var_14362: Tensor[(130, 9), float64], %var_14384: Tensor[(700), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(13, 9, 10), int8], Tensor[(130, 9), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64], Tensor[(130, 9), float64]) {
  %57 = @func_10196() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %58 = cast(meta[relay.Constant][1] /* ty=Tensor[(130, 9), float64] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %59 = reshape(%58, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float64] */;
  %60 = @func_3526(%59) /* ty=(Tensor[(13, 9, 10), int8],) */;
  %61 = cast(%var_14362, dtype="bool") /* ty=Tensor[(130, 9), bool] */;
  %62 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(130, 9), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %63 = cast(meta[relay.Constant][1] /* ty=Tensor[(130, 9), float64] */, dtype="bool") /* ty=Tensor[(130, 9), bool] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %65 = greater_equal(%63, %64) /* ty=Tensor[(130, 9), bool] */;
  %66 = cast(%var_14362, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(2), int32] */;
  %68 = cast(%65, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %70 = cast(%var_14384, dtype="float64") /* ty=Tensor[(700), float64] */;
  %71 = reshape(%70, newshape=[700]) /* ty=Tensor[(700), float64] */;
  %72 = @func_12633(%71) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64]) */;
  %73 = cast(%var_14362, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %74 = sinh(%73) /* ty=Tensor[(130, 9), float64] */;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %76 = log10(%75) /* ty=Tensor[(130, 9), float64] */;
  %77 = cast(%65, dtype="int8") /* ty=Tensor[(130, 9), int8] */;
  %78 = shape_of(%74, dtype="int32") /* ty=Tensor[(2), int32] */;
  %79 = cast(%74, dtype="int8") /* ty=Tensor[(130, 9), int8] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %81 = multiply(%79, %80) /* ty=Tensor[(130, 9), int8] */;
  %82 = cast(%81, dtype="bool") /* ty=Tensor[(130, 9), bool] */;
  %83 = shape_of(%76, dtype="int32") /* ty=Tensor[(2), int32] */;
  %84 = cast(%76, dtype="bool") /* ty=Tensor[(130, 9), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %86 = less(%84, %85) /* ty=Tensor[(130, 9), bool] */;
  %87 = cast(%86, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %88 = %57.0;
  %89 = %60.0;
  %90 = divide(%68, %69) /* ty=Tensor[(130, 9), float64] */;
  %91 = %72.3;
  %92 = acosh(%87) /* ty=Tensor[(130, 9), float64] */;
  (%88, %89, %90, %91, %var_14384, %92)
}

def @func_14485() -> (Tensor[(7, 14, 14), float64],) {
  %93 = @func_3647() /* ty=Tensor[(7, 14, 14), float64] */;
  (%93,)
}

def @func_13715() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
  %94 = @func_5862() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %95 = @func_9702() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %96 = @func_13168() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */;
  %97 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %98 = %94.0;
  %99 = %95.0;
  %100 = %96.1;
  %101 = %97.1;
  (%98, %99, %100, %101)
}

def @func_15051() -> (Tensor[(7, 14, 14), float64],) {
  %102 = @func_1537() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %103 = %102.0;
  (%103,)
}

def @func_374(%var_366: Tensor[(7, 14, 14), float64]) -> (Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) {
  %104 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %105 = cast(%var_366, dtype="int16") /* ty=Tensor[(7, 14, 14), int16] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="int16") /* ty=Tensor[(7, 14, 14), int16] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %109 = cast(%var_366, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %110 = bitwise_and(%107, %108) /* ty=Tensor[(7, 14, 14), int16] */;
  %111 = log2(%109) /* ty=Tensor[(7, 14, 14), float64] */;
  (%110, %111)
}

def @func_1257() -> (Tensor[(7, 14, 14), float64],) {
  %112 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %113 = %112.0;
  %114 = cast(%113, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %115 = asin(%114) /* ty=Tensor[(7, 14, 14), float64] */;
  (%115,)
}

def @func_6664() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %116 = @func_5596() /* ty=Tensor[(7, 14, 14), float32] */;
  %117 = @func_4855() /* ty=Tensor[(7, 14, 14), float64] */;
  (%116, %117)
}

def @func_11611() -> (Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) {
  %118 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %119 = %118.1;
  %120 = @func_7202() /* ty=Tensor[(7, 14, 14), float32] */;
  (%119, %120)
}

def @func_15576(%var_15549: Tensor[(5, 20), uint64], %var_15565: Tensor[(1400), bool]) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(10, 10, 1), bool], uint64, Tensor[(10, 10, 14), int32], Tensor[(1400), bool], Tensor[(5, 20), float64]) {
  %121 = @func_9702() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %122 = cast(meta[relay.Constant][2] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %123 = cast(%var_15549, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %124 = reshape(%122, newshape=[]) /* ty=uint64 */;
  %125 = reshape(%123, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), uint64] */;
  %126 = @func_8720(%124, %125) /* ty=Tensor[(10, 10, 1), bool] */;
  %127 = cast(%126, dtype="uint64") /* ty=Tensor[(10, 10, 1), uint64] */;
  %128 = cast(%var_15565, dtype="bool") /* ty=Tensor[(1400), bool] */;
  %129 = reshape(%127, newshape=[100]) /* ty=Tensor[(100), uint64] */;
  %130 = reshape(%128, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), bool] */;
  %131 = @func_10937(%129, %130) /* ty=(Tensor[(11, 6, 16), float32], Tensor[(7, 14, 14), uint32], Tensor[(1372), float64], uint64, Tensor[(100), uint64], Tensor[(10, 10, 14), int32]) */;
  %132 = cast(%var_15549, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %133 = @func_6373() /* ty=Tensor[(7, 14, 14), float64] */;
  %134 = %121.0;
  %135 = %131.5;
  %136 = rsqrt(%132) /* ty=Tensor[(5, 20), float64] */;
  (%133, %134, %126, meta[relay.Constant][2] /* ty=uint64 */, %135, %var_15565, %136)
}

def @func_16286(%var_16268: Tensor[(22, 3), bool]) -> (Tensor[(7, 14, 14), float64], Tensor[(15, 12, 2), float64], bool, Tensor[(22, 3), bool], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %137 = @func_10039() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %138 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %139 = cast(%var_16268, dtype="bool") /* ty=Tensor[(22, 3), bool] */;
  %140 = cast(%var_16268, dtype="float32") /* ty=Tensor[(22, 3), float32] */;
  %141 = reshape(%138, newshape=[]) /* ty=bool */;
  %142 = reshape(%139, newshape=[1, 6, 11]) /* ty=Tensor[(1, 6, 11), bool] */;
  %143 = reshape(%140, newshape=[1, 6, 11]) /* ty=Tensor[(1, 6, 11), float32] */;
  %144 = @func_11953(%141, %142, %143) /* ty=(Tensor[(?, 6, 11), bool], Tensor[(12, 30), uint32], Tensor[(7, 14, 14), int16], Tensor[(6, 10, 15), float32], Tensor[(15, 12, 2), float64], Tensor[(7, 14, 14), float32]) */;
  %145 = %137.0;
  %146 = %144.4;
  %147 = @func_13399() /* ty=Tensor[(7, 14, 14), float32] */;
  %148 = @func_4855() /* ty=Tensor[(7, 14, 14), float64] */;
  (%145, %146, True /* ty=bool */, %var_16268, %147, %148)
}

def @func_7691() -> Tensor[(7, 14, 14), float32] {
  %149 = @func_5953() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %149.2
}

def @func_8841(%var_8800: Tensor[(4, 10, 5), float32]) -> (Tensor[(4, 10, 5), float32], Tensor[(7, 14, 14), float64], uint16) {
  %150 = cast(%var_8800, dtype="float32") /* ty=Tensor[(4, 10, 5), float32] */;
  %151 = cast(meta[relay.Constant][3] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %152 = reshape(%151, newshape=[]) /* ty=uint16 */;
  %153 = @func_136(%152) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %154 = cosh(%150) /* ty=Tensor[(4, 10, 5), float32] */;
  %155 = %153.0;
  (%154, %155, meta[relay.Constant][3] /* ty=uint16 */)
}

def @func_6912() -> Tensor[(7, 14, 14), float32] {
  @func_2090() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_11791() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %156 = @func_1461() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %157 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %158 = %156.0;
  %159 = %157.0;
  (%158, %159)
}

def @func_13337(%var_13320: Tensor[(15, 6, 4), float64]) -> (Tensor[(7, 14, 14), int16], Tensor[(15, 6, 4), uint32]) {
  %160 = @func_3180() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32]) */;
  %161 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
  %162 = shape_of(%var_13320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_13320, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %165 = floor_mod(%163, %164) /* ty=Tensor[(15, 6, 4), float64] */;
  %166 = cast(%165, dtype="uint32") /* ty=Tensor[(15, 6, 4), uint32] */;
  %167 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(15, 6, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 6, 4), float64] */, dtype="uint32") /* ty=Tensor[(15, 6, 4), uint32] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %170 = %160.1;
  %171 = multiply(%168, %169) /* ty=Tensor[(15, 6, 4), uint32] */;
  (%170, %171)
}

def @func_3526(%var_3503: Tensor[(13, 9, 10), float64]) -> (Tensor[(13, 9, 10), int8],) {
  %172 = cast(%var_3503, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
  %173 = erf(%172) /* ty=Tensor[(13, 9, 10), float64] */;
  %174 = cast(%var_3503, dtype="int8") /* ty=Tensor[(13, 9, 10), int8] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%173, dtype="int8") /* ty=Tensor[(13, 9, 10), int8] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %178 = right_shift(%176, %177) /* ty=Tensor[(13, 9, 10), int8] */;
  (%178,)
}

def @func_9178() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float64]) {
  %179 = @func_8880() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %180 = cast(meta[relay.Constant][5] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %181 = reshape(%180, newshape=[]) /* ty=uint16 */;
  %182 = @func_1039(%181) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %183 = @func_6055() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %184 = %179.0;
  %185 = %182.4;
  %186 = %183.1;
  (%184, %185, meta[relay.Constant][5] /* ty=uint16 */, %186)
}

def @func_3488() -> (Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], uint16, uint16, Tensor[(7, 14, 14), float64]) {
  %187 = @func_2240() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %188 = cast(meta[relay.Constant][6] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %189 = reshape(%188, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
  %190 = @func_1564(%189) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
  %191 = cast(meta[relay.Constant][7] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %192 = reshape(%191, newshape=[]) /* ty=uint16 */;
  %193 = @func_1039(%192) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %194 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %195 = %187.0;
  %196 = %190.0;
  %197 = %193.3;
  %198 = %194.0;
  (%195, %196, meta[relay.Constant][6] /* ty=Tensor[(360), uint32] */, %197, meta[relay.Constant][7] /* ty=uint16 */, %198)
}

def @func_6495(%var_6484: Tensor[(7, 14, 14), float64]) -> (Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), float64]) {
  %199 = @func_6414() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float32]) */;
  %200 = %199.0;
  %201 = cast(%var_6484, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %205 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %206 = logical_or(%203, %204) /* ty=Tensor[(7, 14, 14), bool] */;
  %207 = %205.1;
  (%206, %207)
}

def @func_7949() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %208 = @func_7266() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %209 = @func_5636() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %210 = @func_1095() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %211 = @func_5636() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %212 = %208.2;
  %213 = %209.0;
  %214 = %210.3;
  %215 = %211.0;
  (%212, %213, %214, %215)
}

def @func_12720() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %216 = @func_5808() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %217 = @func_9422() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %218 = %216.1;
  %219 = %217.0;
  (%218, %219)
}

def @func_1885() -> Tensor[(7, 14, 14), float64] {
  %220 = @func_1537() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %220.0
}

def @func_218() -> Tensor[(7, 14, 14), float32] {
  %221 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  erf(%222) /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_293() -> (Tensor[(7, 14, 14), float32],) {
  %223 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  (%223,)
}

def @func_14862() -> (Tensor[(7, 14, 14), float32],) {
  %224 = @func_6055() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %225 = %224.0;
  (%225,)
}

def @func_12564() -> Tensor[(7, 14, 14), float32] {
  @func_10859() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_6817(%var_6801: uint16) -> (Tensor[(7, 14, 14), float32], uint16, uint16, Tensor[(7, 14, 14), float32]) {
  %226 = @func_6083() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %227 = cast(%var_6801, dtype="uint16") /* ty=uint16 */;
  %228 = reshape(%227, newshape=[]) /* ty=uint16 */;
  %229 = @func_479(%228) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %230 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %231 = %226.0;
  %232 = %229.2;
  %233 = %230.0;
  (%231, %232, %var_6801, %233)
}

def @func_13558() -> (Tensor[(7, 14, 14), float32],) {
  %234 = @func_12564() /* ty=Tensor[(7, 14, 14), float32] */;
  (%234,)
}

def @func_3180() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32]) {
  %235 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %236 = @func_2604() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %237 = %235.1;
  %238 = @func_1411() /* ty=Tensor[(7, 14, 14), int16] */;
  %239 = %236.0;
  (%237, %238, %239)
}

def @func_8720(%var_8714: uint64, %var_8715: Tensor[(10, 10, 1), uint64]) -> Tensor[(10, 10, 1), bool] {
  %240 = cast(%var_8714, dtype="bool") /* ty=bool */;
  %241 = cast(%var_8715, dtype="bool") /* ty=Tensor[(10, 10, 1), bool] */;
  greater_equal(%240, %241) /* ty=Tensor[(10, 10, 1), bool] */
}

def @func_8657(%var_8615: Tensor[(11, 7, 9), int32], %var_8616: Tensor[(11, 7, 9), int32], %var_8635: Tensor[(11, 7, 9), int32]) -> (Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), float32], Tensor[(11, 7, 9), bool]) {
  %242 = cast(%var_8616, dtype="int32") /* ty=Tensor[(11, 7, 9), int32] */;
  %243 = shape_of(%var_8615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%var_8615, dtype="int32") /* ty=Tensor[(11, 7, 9), int32] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %246 = bitwise_xor(%244, %245) /* ty=Tensor[(11, 7, 9), int32] */;
  %247 = cast(%246, dtype="float32") /* ty=Tensor[(11, 7, 9), float32] */;
  %248 = cast(%var_8635, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %249 = shape_of(%246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%246, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %252 = @func_4855() /* ty=Tensor[(7, 14, 14), float64] */;
  %253 = sqrt(%247) /* ty=Tensor[(11, 7, 9), float32] */;
  %254 = not_equal(%250, %251) /* ty=Tensor[(11, 7, 9), bool] */;
  (%252, %253, %254)
}

def @func_9338(%var_9334: float64) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], float64, Tensor[(528), float64]) {
  %255 = cast(%var_9334, dtype="float64") /* ty=float64 */;
  %256 = cast(meta[relay.Constant][8] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %257 = reshape(%255, newshape=[]) /* ty=float64 */;
  %258 = reshape(%256, newshape=[8, 11, 6]) /* ty=Tensor[(8, 11, 6), float64] */;
  %259 = @func_4970(%257, %258) /* ty=(Tensor[(8, 11, 6), bool], Tensor[(8, 11, 6), int64], Tensor[(8, 11, 6), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %260 = @func_2090() /* ty=Tensor[(7, 14, 14), float32] */;
  %261 = %259.4;
  (%260, %261, %var_9334, meta[relay.Constant][8] /* ty=Tensor[(528), float64] */)
}

def @func_3596(%var_3551: Tensor[(3, 15, 12), int16]) -> (Tensor[(3, 15, 12), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %262 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 15, 12), int16] */, dtype="int16") /* ty=Tensor[(3, 15, 12), int16] */;
  %263 = shape_of(%var_3551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%var_3551, dtype="int16") /* ty=Tensor[(3, 15, 12), int16] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %266 = @func_1832() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %267 = left_shift(%264, %265) /* ty=Tensor[(3, 15, 12), int16] */;
  %268 = %266.0;
  %269 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
  (%267, %268, %269)
}

def @func_15073() -> Tensor[(7, 14, 14), float64] {
  %270 = @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
  %270.1
}

def @func_9134() -> (Tensor[(7, 14, 14), float32],) {
  %271 = @func_3993() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %272 = %271.1;
  (%272,)
}

def @func_11743() -> (Tensor[(7, 14, 14), float64],) {
  %273 = @func_8372() /* ty=Tensor[(7, 14, 14), float64] */;
  (%273,)
}

def @func_11962(%var_11959: Tensor[(2, 15, 10), float64]) -> (Tensor[(2, 15, 10), float64],) {
  %274 = cast(%var_11959, dtype="float64") /* ty=Tensor[(2, 15, 10), float64] */;
  %275 = log2(%274) /* ty=Tensor[(2, 15, 10), float64] */;
  (%275,)
}

def @func_2988() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %276 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %277 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %278 = %276.0;
  %279 = %277.0;
  (%278, %279)
}

def @func_4565(%var_4551: Tensor[(1170), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), float64], Tensor[(7, 14, 14), float32]) {
  %280 = @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %281 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %282 = cast(%var_4551, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %283 = reshape(%282, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float64] */;
  %284 = @func_3526(%283) /* ty=(Tensor[(13, 9, 10), int8],) */;
  %285 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %286 = %280.0;
  %287 = %281.0;
  %288 = %284.0;
  %289 = %285.1;
  (%286, %287, %288, %var_4551, %289)
}

def @func_418() -> (Tensor[(7, 14, 14), float32],) {
  %290 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  (%290,)
}

def @func_5778() -> (Tensor[(7, 14, 14), float64],) {
  %291 = @func_3889() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) */;
  %292 = %291.0;
  (%292,)
}

def @func_4970(%var_4897: float64, %var_4898: Tensor[(8, 11, 6), float64]) -> (Tensor[(8, 11, 6), bool], Tensor[(8, 11, 6), int64], Tensor[(8, 11, 6), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %293 = cast(%var_4897, dtype="bool") /* ty=bool */;
  %294 = cast(%var_4898, dtype="bool") /* ty=Tensor[(8, 11, 6), bool] */;
  %295 = cast(%var_4897, dtype="int64") /* ty=int64 */;
  %296 = cast(%var_4898, dtype="int64") /* ty=Tensor[(8, 11, 6), int64] */;
  %297 = cast(%var_4898, dtype="float32") /* ty=Tensor[(8, 11, 6), float32] */;
  %298 = @func_1989() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) */;
  %299 = cast(%var_4897, dtype="uint16") /* ty=uint16 */;
  %300 = reshape(%299, newshape=[]) /* ty=uint16 */;
  %301 = @func_479(%300) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %302 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %303 = equal(%293, %294) /* ty=Tensor[(8, 11, 6), bool] */;
  %304 = bitwise_or(%295, %296) /* ty=Tensor[(8, 11, 6), int64] */;
  %305 = rsqrt(%297) /* ty=Tensor[(8, 11, 6), float32] */;
  %306 = %298.0;
  %307 = %301.1;
  %308 = %302.0;
  (%303, %304, %305, %306, %307, %308)
}

def @func_2692() -> (Tensor[(7, 14, 14), float64],) {
  %309 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %310 = %309.0;
  %311 = cast(%310, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %312 = rsqrt(%311) /* ty=Tensor[(7, 14, 14), float64] */;
  (%312,)
}

def @func_8479(%var_8457: Tensor[(216), bool]) -> (Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), uint8], Tensor[(216), bool]) {
  %313 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %314 = cast(%var_8457, dtype="bool") /* ty=Tensor[(216), bool] */;
  %315 = reshape(%314, newshape=[12, 9, 2]) /* ty=Tensor[(12, 9, 2), bool] */;
  %316 = @func_6958(%315) /* ty=(Tensor[(12, 9, 2), uint8], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), int64]) */;
  %317 = %313.1;
  %318 = %316.0;
  (%317, %318, %var_8457)
}

def @func_14323() -> Tensor[(7, 14, 14), float32] {
  %319 = @func_12329() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 132), int16], Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %319.0
}

def @func_5862() -> (Tensor[(7, 14, 14), float32],) {
  %320 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %321 = %320.1;
  (%321,)
}

def @func_10272() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %322 = @func_7227() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %323 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %324 = @func_9755() /* ty=Tensor[(7, 14, 14), float32] */;
  %325 = %322.0;
  %326 = @func_1469() /* ty=Tensor[(7, 14, 14), float32] */;
  %327 = %323.0;
  (%324, %325, %326, %327)
}

def @func_3409() -> (Tensor[(7, 14, 14), float32],) {
  %328 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %329 = %328.0;
  (%329,)
}

def @func_1411() -> Tensor[(7, 14, 14), int16] {
  %330 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %330.1
}

def @func_13356() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %331 = @func_10726() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), bool], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) */;
  %332 = @func_10081() /* ty=Tensor[(7, 14, 14), float32] */;
  %333 = %331.0;
  (%332, %333)
}

def @func_9237() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %334 = @func_9178() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float64]) */;
  %335 = %334.0;
  %336 = @func_7308() /* ty=Tensor[(7, 14, 14), float32] */;
  (%335, %336)
}

def @func_7114(%var_7107: Tensor[(176), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
  %337 = @func_1959() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %338 = cast(meta[relay.Constant][10] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %339 = cast(%var_7107, dtype="uint16") /* ty=Tensor[(176), uint16] */;
  %340 = reshape(%338, newshape=[]) /* ty=uint16 */;
  %341 = reshape(%339, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), uint16] */;
  %342 = @func_1631(%340, %341) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(1, 16, 11), bool]) */;
  %343 = %337.0;
  %344 = %342.2;
  (%343, %344, meta[relay.Constant][10] /* ty=uint16 */, %var_7107)
}

def @func_13399() -> Tensor[(7, 14, 14), float32] {
  %345 = @func_9139() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %345.0
}

def @func_5672() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  %346 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %347 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %348 = %346.1;
  %349 = %347.1;
  (%348, %349)
}

def @func_5808() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %350 = @func_3409() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %351 = %350.0;
  %352 = @func_4160() /* ty=Tensor[(7, 14, 14), float32] */;
  (%351, %352)
}

def @func_11063() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %353 = @func_4416() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
  %354 = @func_10475() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %355 = %353.1;
  %356 = %354.0;
  (%355, %356)
}

def @func_15277() -> (Tensor[(7, 14, 14), float64],) {
  %357 = @func_15051() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %358 = %357.0;
  (%358,)
}

def @func_8949() -> uint16 {
  %359 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
  %359.2
}

def @func_10583() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %360 = @func_5778() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %361 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %362 = @func_10039() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %363 = %360.0;
  %364 = %361.0;
  %365 = %362.0;
  (%363, %364, %365)
}

def @func_10850() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float32]) {
  %366 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %367 = @func_5374() /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), uint32]) */;
  %368 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %369 = @func_5672() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
  %370 = %366.0;
  %371 = %367.0;
  %372 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %373 = @func_1885() /* ty=Tensor[(7, 14, 14), float64] */;
  %374 = %368.4;
  %375 = %369.1;
  (%370, %371, %372, %373, %374, %375)
}

def @func_6055() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %376 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %377 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %378 = %376.1;
  (%377, %378)
}

def @func_755() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %379 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %381 = cast(%379, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %382 = atan(%381) /* ty=Tensor[(7, 14, 14), float32] */;
  %383 = cast(%382, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %384 = sin(%380) /* ty=Tensor[(7, 14, 14), float64] */;
  %385 = exp(%383) /* ty=Tensor[(7, 14, 14), float32] */;
  (%384, %385)
}

def @func_15418() -> Tensor[(7, 14, 14), float32] {
  %386 = @func_2988() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %386.0
}

def @func_9805() -> (Tensor[(7, 14, 14), float64],) {
  %387 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%387,)
}

def @func_12461() -> (Tensor[(7, 14, 14), float64],) {
  %388 = @func_3619() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %389 = %388.0;
  (%389,)
}

def @func_289() -> Tensor[(7, 14, 14), float32] {
  @func_218() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_1812() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %390 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %391 = %390.0;
  %392 = cast(%391, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %393 = reshape(%392, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %394 = @func_374(%393) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %395 = %394.1;
  (%391, %395)
}

def @func_1039(%var_1028: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) {
  %396 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %397 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %398 = %397.0;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %400 = cast(%var_1028, dtype="uint16") /* ty=uint16 */;
  %401 = reshape(%400, newshape=[]) /* ty=uint16 */;
  %402 = @func_136(%401) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %403 = sqrt(%399) /* ty=Tensor[(7, 14, 14), float32] */;
  %404 = cast(%403, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %405 = reshape(%404, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float32] */;
  %406 = @func_996(%405) /* ty=(Tensor[(7, 14, 14), uint64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %407 = %396.0;
  %408 = %402.1;
  %409 = %406.1;
  (%407, %403, %408, %var_1028, %409)
}

def @func_12914() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %410 = @func_5322() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %411 = @func_6214() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %412 = %410.0;
  %413 = %411.0;
  (%412, %413)
}

def @func_5195() -> Tensor[(7, 14, 14), float64] {
  %414 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %414.0
}

def @func_5012(%var_4976: Tensor[(12, 9, 2), bool], %var_4982: Tensor[(12, 9, 2), bool]) -> (Tensor[(7, 14, 14), int16], Tensor[(12, 9, 2), uint32]) {
  %415 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %416 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 9, 2), bool] */, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
  %417 = shape_of(%var_4976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%var_4976, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %420 = logical_and(%418, %419) /* ty=Tensor[(12, 9, 2), bool] */;
  %421 = cast(%var_4982, dtype="uint64") /* ty=Tensor[(12, 9, 2), uint64] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%420, dtype="uint64") /* ty=Tensor[(12, 9, 2), uint64] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %425 = maximum(%423, %424) /* ty=Tensor[(12, 9, 2), uint64] */;
  %426 = cast(%425, dtype="float32") /* ty=Tensor[(12, 9, 2), float32] */;
  %427 = cos(%426) /* ty=Tensor[(12, 9, 2), float32] */;
  %428 = cast(%var_4982, dtype="uint32") /* ty=Tensor[(12, 9, 2), uint32] */;
  %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%427, dtype="uint32") /* ty=Tensor[(12, 9, 2), uint32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %432 = %415.1;
  %433 = add(%430, %431) /* ty=Tensor[(12, 9, 2), uint32] */;
  (%432, %433)
}

def @func_7227() -> (Tensor[(7, 14, 14), float64],) {
  %434 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%434,)
}

def @func_1989() -> (Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) {
  %435 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %436 = cast(meta[relay.Constant][12] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %437 = reshape(%436, newshape=[]) /* ty=uint16 */;
  %438 = @func_136(%437) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %439 = %435.0;
  %440 = %438.1;
  (%439, %440, meta[relay.Constant][12] /* ty=uint16 */)
}

def @func_1832() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %441 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %442 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
  %443 = %441.0;
  (%442, %443)
}

def @func_13603() -> Tensor[(7, 14, 14), float64] {
  %444 = @func_13587() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %444.0
}

def @func_12856() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], uint16) {
  %445 = @func_5636() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %446 = @func_3889() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) */;
  %447 = @func_12380() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */;
  %448 = %445.0;
  %449 = %446.2;
  %450 = %447.2;
  (%448, %449, %450)
}

def @func_15706() -> (Tensor[(7, 14, 14), float32],) {
  %451 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %452 = %451.0;
  (%452,)
}

def @func_16128() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %453 = @func_13356() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %454 = @func_11699() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %455 = @func_5672() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
  %456 = @func_8692() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %457 = %453.0;
  %458 = %454.0;
  %459 = %455.1;
  %460 = %456.1;
  %461 = @func_12988() /* ty=Tensor[(7, 14, 14), float32] */;
  (%457, %458, %459, %460, %461)
}

def @func_14729() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %462 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %463 = @func_13987() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %464 = %462.1;
  %465 = %463.0;
  (%464, %465)
}

def @func_10475() -> (Tensor[(7, 14, 14), float64],) {
  %466 = @func_9422() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %467 = %466.0;
  (%467,)
}

def @func_15666() -> (Tensor[(7, 14, 14), float32],) {
  %468 = @func_10583() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %469 = %468.1;
  (%469,)
}

def @func_2090() -> Tensor[(7, 14, 14), float32] {
  %470 = @func_1095() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %470.1
}

def @func_358() -> (Tensor[(7, 14, 14), float32],) {
  %471 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  (%471,)
}

def @func_9683() -> (Tensor[(7, 14, 14), float32], Tensor[(11, 7, 9), float32], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) {
  %472 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %473 = cast(meta[relay.Constant][13] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %474 = cast(meta[relay.Constant][13] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %475 = cast(meta[relay.Constant][13] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %476 = reshape(%473, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %477 = reshape(%474, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %478 = reshape(%475, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %479 = @func_8657(%476, %477, %478) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), float32], Tensor[(11, 7, 9), bool]) */;
  %480 = @func_6280() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %481 = %472.0;
  %482 = %479.1;
  %483 = %480.1;
  (%481, %482, meta[relay.Constant][13] /* ty=Tensor[(693), int32] */, %483)
}

def @func_4160() -> Tensor[(7, 14, 14), float32] {
  %484 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %484.0
}

def @func_13917(%var_13908: Tensor[(12, 2, 11), uint16], %var_13909: Tensor[(12, 2, 11), uint16]) -> (Tensor[(12, 2, 11), uint16],) {
  %485 = cast(%var_13909, dtype="uint16") /* ty=Tensor[(12, 2, 11), uint16] */;
  %486 = shape_of(%var_13908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%var_13908, dtype="uint16") /* ty=Tensor[(12, 2, 11), uint16] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %489 = bitwise_xor(%487, %488) /* ty=Tensor[(12, 2, 11), uint16] */;
  (%489,)
}

def @func_2128() -> (Tensor[(7, 14, 14), float32],) {
  %490 = @func_2090() /* ty=Tensor[(7, 14, 14), float32] */;
  (%490,)
}

def @func_14951() -> Tensor[(7, 14, 14), float64] {
  %491 = @func_10583() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %491.2
}

def @func_13641(%var_13627: Tensor[(672), int64]) -> (Tensor[(7, 14, 14), float64], Tensor[(14, 6, 8), int64], Tensor[(672), int64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %492 = @func_10953() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %493 = cast(%var_13627, dtype="int64") /* ty=Tensor[(672), int64] */;
  %494 = reshape(%493, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), int64] */;
  %495 = @func_11680(%494) /* ty=(Tensor[(14, 6, 8), int64],) */;
  %496 = @func_11334() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %497 = %492.0;
  %498 = %495.0;
  %499 = @func_9755() /* ty=Tensor[(7, 14, 14), float32] */;
  %500 = %496.0;
  (%497, %498, %var_13627, %499, %500)
}

def @func_1461() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %501 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %502 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  (%501, %502)
}

def @func_8269(%var_8260: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16) {
  %503 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %504 = cast(%var_8260, dtype="uint16") /* ty=uint16 */;
  %505 = reshape(%504, newshape=[]) /* ty=uint16 */;
  %506 = @func_136(%505) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %507 = %503.1;
  %508 = %506.0;
  (%507, %508, %var_8260)
}

def @func_14283() -> (Tensor[(6, 10, 15), bool], Tensor[(7, 14, 14), float32]) {
  %509 = @func_1989() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) */;
  %510 = %509.1;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(6, 10, 15), float64] */;
  %512 = sin(%511) /* ty=Tensor[(6, 10, 15), float64] */;
  %513 = cast(%512, dtype="bool") /* ty=Tensor[(6, 10, 15), bool] */;
  %514 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%510, dtype="bool") /* ty=Tensor[(6, 10, 15), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %517 = not_equal(%515, %516) /* ty=Tensor[(6, 10, 15), bool] */;
  %518 = @func_9652() /* ty=Tensor[(7, 14, 14), float32] */;
  (%517, %518)
}

def @func_996(%var_924: Tensor[(7, 14, 14), float32]) -> (Tensor[(7, 14, 14), uint64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %519 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %520 = %519.0;
  %521 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %522 = %521.1;
  %523 = cast(%522, dtype="uint64") /* ty=Tensor[(7, 14, 14), uint64] */;
  %524 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%520, dtype="uint64") /* ty=Tensor[(7, 14, 14), uint64] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %527 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %528 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %529 = %528.0;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %531 = acosh(%530) /* ty=Tensor[(7, 14, 14), float32] */;
  %532 = cast(%520, dtype="int16") /* ty=Tensor[(7, 14, 14), int16] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%531, dtype="int16") /* ty=Tensor[(7, 14, 14), int16] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %536 = cast(%531, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %537 = atanh(%536) /* ty=Tensor[(7, 14, 14), float32] */;
  %538 = cast(%var_924, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%537, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %542 = power(%540, %541) /* ty=Tensor[(7, 14, 14), float64] */;
  %543 = cast(%542, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %544 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%531, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %547 = cast(%522, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %548 = reshape(%547, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %549 = @func_374(%548) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %550 = cast(%520, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %551 = reshape(%550, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %552 = @func_374(%551) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %553 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %554 = minimum(%525, %526) /* ty=Tensor[(7, 14, 14), uint64] */;
  %555 = %527.0;
  %556 = add(%534, %535) /* ty=Tensor[(7, 14, 14), int16] */;
  %557 = divide(%545, %546) /* ty=Tensor[(7, 14, 14), float64] */;
  %558 = %549.1;
  %559 = %552.0;
  %560 = %553.0;
  %561 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%554, %555, %556, %557, %558, %559, %560, %561)
}

def @func_9422() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %562 = @func_4243() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %563 = @func_7227() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %564 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %565 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %566 = %562.0;
  %567 = %563.0;
  %568 = %564.0;
  %569 = %565.0;
  (%566, %567, %568, %569)
}

def @func_13523() -> Tensor[(7, 14, 14), uint32] {
  %570 = @func_9856() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
  %570.1
}

def @func_7795(%var_7753: Tensor[(5, 6, 5), float64], %var_7754: Tensor[(5, 6, 5), float64], %var_7766: Tensor[(176), uint16]) -> (Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(5, 6, 5), float64]) {
  %571 = cast(%var_7766, dtype="uint16") /* ty=Tensor[(176), uint16] */;
  %572 = reshape(%571, newshape=[176]) /* ty=Tensor[(176), uint16] */;
  %573 = @func_7114(%572) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */;
  %574 = @func_5672() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
  %575 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %576 = cast(%var_7754, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %577 = shape_of(%var_7753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%var_7753, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %580 = floor_divide(%578, %579) /* ty=Tensor[(5, 6, 5), float64] */;
  %581 = cast(%580, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %582 = sin(%581) /* ty=Tensor[(5, 6, 5), float64] */;
  %583 = cast(%582, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %584 = %573.3;
  %585 = %574.0;
  %586 = %575.0;
  %587 = asinh(%583) /* ty=Tensor[(5, 6, 5), float64] */;
  (%584, %var_7766, %585, %586, %587)
}

def @func_9993() -> (Tensor[(7, 14, 14), float32],) {
  %588 = @func_9856() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
  %589 = %588.2;
  (%589,)
}

def @func_5636() -> (Tensor[(7, 14, 14), float32],) {
  %590 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %591 = %590.1;
  (%591,)
}

def @func_10953() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %592 = @func_2692() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %593 = @func_7969() /* ty=Tensor[(7, 14, 14), float64] */;
  %594 = %592.0;
  (%593, %594)
}

def @func_136(%var_110: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) {
  %595 = cast(%var_110, dtype="uint16") /* ty=uint16 */;
  %596 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 10, 15), uint16] */, dtype="uint16") /* ty=Tensor[(6, 10, 15), uint16] */;
  %597 = right_shift(%595, %596) /* ty=Tensor[(6, 10, 15), uint16] */;
  %598 = cast(%var_110, dtype="bool") /* ty=bool */;
  %599 = cast(%597, dtype="bool") /* ty=Tensor[(6, 10, 15), bool] */;
  %600 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %601 = logical_or(%598, %599) /* ty=Tensor[(6, 10, 15), bool] */;
  (%600, %601)
}

def @func_12988() -> Tensor[(7, 14, 14), float32] {
  %602 = @func_9237() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %602.1
}

def @func_664() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) {
  %603 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %604 = reshape(%603, newshape=[]) /* ty=uint16 */;
  %605 = @func_479(%604) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %606 = %605.3;
  %607 = cast(%606, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %608 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint32") /* ty=uint32 */;
  %609 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %610 = reshape(%609, newshape=[]) /* ty=uint16 */;
  %611 = @func_479(%610) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %612 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
  %613 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %614 = cast(%613, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
  %615 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%612, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %618 = not_equal(%616, %617) /* ty=Tensor[(7, 14, 14), bool] */;
  %619 = cast(%618, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
  %620 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %621 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %622 = reshape(%621, newshape=[]) /* ty=uint16 */;
  %623 = @func_479(%622) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %624 = %623.0;
  %625 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %626 = cast(%624, dtype="uint8") /* ty=Tensor[(7, 14, 14), uint8] */;
  %627 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %628 = reshape(%627, newshape=[]) /* ty=uint16 */;
  %629 = @func_136(%628) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %630 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %631 = bitwise_or(%607, %608) /* ty=Tensor[(7, 14, 14), uint32] */;
  %632 = %611.0;
  %633 = less(%619, %620) /* ty=Tensor[(7, 14, 14), bool] */;
  %634 = bitwise_xor(%625, %626) /* ty=Tensor[(7, 14, 14), uint8] */;
  %635 = %629.0;
  (%630, %631, %632, %633, %634, %635)
}

def @func_2240() -> (Tensor[(7, 14, 14), float32],) {
  %636 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %637 = %636.0;
  (%637,)
}

def @func_12380() -> (Tensor[(7, 14, 14), float32], uint16, uint16) {
  %638 = cast(meta[relay.Constant][16] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %639 = reshape(%638, newshape=[]) /* ty=uint16 */;
  %640 = @func_1039(%639) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %641 = @func_7202() /* ty=Tensor[(7, 14, 14), float32] */;
  %642 = %640.3;
  (%641, %642, meta[relay.Constant][16] /* ty=uint16 */)
}

def @func_16040() -> (Tensor[(7, 14, 14), float64],) {
  %643 = @func_13889() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %644 = %643.1;
  (%644,)
}

def @func_7969() -> Tensor[(7, 14, 14), float64] {
  %645 = @func_7876() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %645.4
}

def @func_7876() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %646 = @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
  %647 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %648 = @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
  %649 = @func_6317() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %650 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %651 = %646.1;
  %652 = %647.0;
  %653 = %648.0;
  %654 = %649.0;
  %655 = %650.1;
  (%651, %652, %653, %654, %655)
}

def @func_8210() -> (uint16, Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %656 = @func_3488() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], uint16, uint16, Tensor[(7, 14, 14), float64]) */;
  %657 = @func_7266() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %658 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %659 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %660 = %656.3;
  %661 = %657.2;
  %662 = %658.1;
  %663 = %659.0;
  (%660, %661, %662, %663)
}

def @func_6317() -> (Tensor[(7, 14, 14), float32],) {
  %664 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %665 = %664.0;
  (%665,)
}

def @func_9755() -> Tensor[(7, 14, 14), float32] {
  %666 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %666.0
}

def @func_2775() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %667 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %668 = %667.0;
  %669 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%668, %669)
}

def @func_7366(%var_7344: Tensor[(10, 117), float64], %var_7347: Tensor[(13, 9, 10), int8], %var_7355: Tensor[(528), float64]) -> (Tensor[(7, 14, 14), float64], Tensor[(10, 117), float64], Tensor[(13, 9, 10), float64], Tensor[(8, 11, 6), bool], float64, Tensor[(528), float64], Tensor[(7, 14, 14), float32]) {
  %670 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %671 = cast(%var_7344, dtype="float64") /* ty=Tensor[(10, 117), float64] */;
  %672 = reshape(%671, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %673 = @func_4565(%672) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), float64], Tensor[(7, 14, 14), float32]) */;
  %674 = %673.2;
  %675 = cast(%var_7347, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%674, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %679 = cast(-0.316241f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %680 = cast(%var_7355, dtype="float64") /* ty=Tensor[(528), float64] */;
  %681 = reshape(%679, newshape=[]) /* ty=float64 */;
  %682 = reshape(%680, newshape=[8, 11, 6]) /* ty=Tensor[(8, 11, 6), float64] */;
  %683 = @func_4970(%681, %682) /* ty=(Tensor[(8, 11, 6), bool], Tensor[(8, 11, 6), int64], Tensor[(8, 11, 6), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %684 = @func_6317() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %685 = %670.0;
  %686 = divide(%677, %678) /* ty=Tensor[(13, 9, 10), float64] */;
  %687 = %683.0;
  %688 = %684.0;
  (%685, %var_7344, %686, %687, -0.316241f64 /* ty=float64 */, %var_7355, %688)
}

def @func_7516(%var_7496: Tensor[(10, 4, 7), uint16], %var_7497: Tensor[(10, 4, 7), uint16]) -> (Tensor[(10, 4, 7), uint16], Tensor[(7, 14, 14), float64]) {
  %689 = cast(%var_7497, dtype="uint16") /* ty=Tensor[(10, 4, 7), uint16] */;
  %690 = shape_of(%var_7496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%var_7496, dtype="uint16") /* ty=Tensor[(10, 4, 7), uint16] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %693 = @func_7227() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %694 = multiply(%691, %692) /* ty=Tensor[(10, 4, 7), uint16] */;
  %695 = %693.0;
  (%694, %695)
}

def @func_8692() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %696 = @func_5115() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */;
  %697 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %698 = %696.3;
  %699 = %697.0;
  (%698, %699)
}

def @func_8880() -> (Tensor[(7, 14, 14), float32],) {
  %700 = @func_8692() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %701 = %700.0;
  (%701,)
}

def @func_13975() -> (uint16, Tensor[(15, 12, 2), float64], Tensor[(360), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  %702 = @func_1989() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) */;
  %703 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %704 = reshape(%703, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
  %705 = @func_1564(%704) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
  %706 = @func_7876() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %707 = @func_12720() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %708 = %702.2;
  %709 = %705.1;
  %710 = @func_8372() /* ty=Tensor[(7, 14, 14), float64] */;
  %711 = %706.2;
  %712 = %707.0;
  (%708, %709, meta[relay.Constant][17] /* ty=Tensor[(360), uint32] */, %710, %711, %712)
}

def @func_6530() -> (Tensor[(16, 12, 5), float32], Tensor[(6, 10, 15), bool]) {
  %713 = cast(meta[relay.Constant][18] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %714 = reshape(%713, newshape=[]) /* ty=uint16 */;
  %715 = @func_1039(%714) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %716 = %715.2;
  %717 = cast(%716, dtype="bool") /* ty=Tensor[(6, 10, 15), bool] */;
  %718 = cast(meta[relay.Constant][18] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %719 = @func_6233() /* ty=Tensor[(16, 12, 5), float32] */;
  %720 = less_equal(%717, %718) /* ty=Tensor[(6, 10, 15), bool] */;
  (%719, %720)
}

def @func_11347(%var_11344: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 12), float32],) {
  %721 = cast(%var_11344, dtype="float32") /* ty=Tensor[(4, 9, 12), float32] */;
  %722 = atanh(%721) /* ty=Tensor[(4, 9, 12), float32] */;
  (%722,)
}

def @func_16355() -> Tensor[(7, 14, 14), float64] {
  %723 = @func_11699() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %723.0
}

def @func_7202() -> Tensor[(7, 14, 14), float32] {
  @func_820() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_10377(%var_10366: Tensor[(5, 10, 14), float64]) -> (Tensor[(5, 10, 14), float32], Tensor[(5, 10, 14), float32]) {
  %724 = cast(%var_10366, dtype="float64") /* ty=Tensor[(5, 10, 14), float64] */;
  %725 = acos(%724) /* ty=Tensor[(5, 10, 14), float64] */;
  %726 = cast(%725, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %727 = cast(%var_10366, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %728 = atanh(%726) /* ty=Tensor[(5, 10, 14), float32] */;
  %729 = cos(%727) /* ty=Tensor[(5, 10, 14), float32] */;
  (%728, %729)
}

def @func_11953(%var_11881: bool, %var_11882: Tensor[(1, 6, 11), bool], %var_11914: Tensor[(1, 6, 11), float32]) -> (Tensor[(?, 6, 11), bool], Tensor[(12, 30), uint32], Tensor[(7, 14, 14), int16], Tensor[(6, 10, 15), float32], Tensor[(15, 12, 2), float64], Tensor[(7, 14, 14), float32]) {
  %730 = cast(%var_11881, dtype="bool") /* ty=bool */;
  %731 = cast(%var_11882, dtype="bool") /* ty=Tensor[(1, 6, 11), bool] */;
  %732 = logical_and(%730, %731) /* ty=Tensor[(1, 6, 11), bool] */;
  %733 = cast(%var_11882, dtype="float32") /* ty=Tensor[(1, 6, 11), float32] */;
  %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%732, dtype="float32") /* ty=Tensor[(1, 6, 11), float32] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %737 = divide(%735, %736) /* ty=Tensor[(?, 6, 11), float32] */;
  %738 = cast(%var_11914, dtype="bool") /* ty=Tensor[(1, 6, 11), bool] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="bool") /* ty=Tensor[(?, 6, 11), bool] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %742 = @func_3889() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) */;
  %743 = cast(%var_11881, dtype="uint16") /* ty=uint16 */;
  %744 = reshape(%743, newshape=[]) /* ty=uint16 */;
  %745 = @func_8916(%744) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16) */;
  %746 = %745.1;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(6, 10, 15), float32] */;
  %748 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 30), uint32] */, dtype="uint32") /* ty=Tensor[(12, 30), uint32] */;
  %749 = reshape(%748, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
  %750 = @func_1564(%749) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
  %751 = %750.1;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(15, 12, 2), float64] */;
  %753 = cast(%var_11881, dtype="float64") /* ty=float64 */;
  %754 = @func_11205() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %755 = greater(%740, %741) /* ty=Tensor[(?, 6, 11), bool] */;
  %756 = %742.2;
  %757 = acos(%747) /* ty=Tensor[(6, 10, 15), float32] */;
  %758 = maximum(%752, %753) /* ty=Tensor[(15, 12, 2), float64] */;
  %759 = %754.0;
  (%755, meta[relay.Constant][19] /* ty=Tensor[(12, 30), uint32] */, %756, %757, %758, %759)
}

def @func_12197() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %760 = @func_9295() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %761 = @func_3935() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %762 = %760.0;
  %763 = %761.1;
  (%762, %763)
}

def @func_1183() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %764 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %765 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %766 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %767 = %764.5;
  (%765, %766, %767)
}

def @func_11680(%var_11676: Tensor[(14, 6, 8), int64]) -> (Tensor[(14, 6, 8), int64],) {
  %768 = cast(%var_11676, dtype="int64") /* ty=Tensor[(14, 6, 8), int64] */;
  %769 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(14, 6, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 6, 8), int64] */, dtype="int64") /* ty=Tensor[(14, 6, 8), int64] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %772 = bitwise_xor(%770, %771) /* ty=Tensor[(14, 6, 8), int64] */;
  (%772,)
}

def @func_2405(%var_2377: uint16, %var_2378: Tensor[(176), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
  %773 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %774 = cast(%var_2377, dtype="uint16") /* ty=uint16 */;
  %775 = cast(%var_2378, dtype="uint16") /* ty=Tensor[(176), uint16] */;
  %776 = reshape(%774, newshape=[]) /* ty=uint16 */;
  %777 = reshape(%775, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), uint16] */;
  %778 = @func_1631(%776, %777) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(1, 16, 11), bool]) */;
  %779 = %773.0;
  %780 = %778.1;
  (%779, %780, %var_2377, %var_2378)
}

def @func_11160(%var_11126: Tensor[(4, 1, 4), float32], %var_11142: Tensor[(1372), float64]) -> (Tensor[(4, 1, 4), float32], Tensor[(7, 14, 14), int16], Tensor[(1372), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %781 = cast(%var_11126, dtype="float32") /* ty=Tensor[(4, 1, 4), float32] */;
  %782 = cast(%var_11142, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %783 = reshape(%782, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %784 = @func_374(%783) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %785 = @func_10475() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %786 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %787 = sinh(%781) /* ty=Tensor[(4, 1, 4), float32] */;
  %788 = %784.0;
  %789 = %785.0;
  %790 = %786.0;
  (%787, %788, %var_11142, %789, %790)
}

def @func_2182() -> Tensor[(7, 14, 14), float32] {
  %791 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %791.0
}

def @func_12633(%var_12626: Tensor[(700), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64]) {
  %792 = @func_1095() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %793 = @func_6414() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float32]) */;
  %794 = @func_10583() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %795 = cast(%var_12626, dtype="float64") /* ty=Tensor[(700), float64] */;
  %796 = reshape(%795, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
  %797 = @func_10377(%796) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(5, 10, 14), float32]) */;
  %798 = %792.1;
  %799 = %793.0;
  %800 = %794.2;
  %801 = %797.1;
  (%798, %799, %800, %801, %var_12626)
}

def @func_2834() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %802 = @func_1832() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %803 = %802.0;
  %804 = @func_2182() /* ty=Tensor[(7, 14, 14), float32] */;
  (%803, %804)
}

def @func_6214() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %805 = @func_5778() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %806 = %805.0;
  %807 = @func_1469() /* ty=Tensor[(7, 14, 14), float32] */;
  (%806, %807)
}

def @func_4079() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %808 = @func_2240() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %809 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %810 = %808.0;
  %811 = %809.1;
  (%810, %811)
}

def @func_12032(%var_12019: Tensor[(11, 3, 2), float64]) -> (Tensor[(11, 3, 2), float64],) {
  %812 = cast(%var_12019, dtype="float64") /* ty=Tensor[(11, 3, 2), float64] */;
  %813 = atanh(%812) /* ty=Tensor[(11, 3, 2), float64] */;
  (%813,)
}

def @func_1959() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %814 = @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %815 = %814.0;
  %816 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
  (%815, %816)
}

def @func_12944() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %817 = @func_9993() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %818 = @func_4160() /* ty=Tensor[(7, 14, 14), float32] */;
  %819 = %817.0;
  (%818, %819)
}

def @func_6158() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %820 = @func_2604() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %821 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
  %822 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %823 = %820.1;
  %824 = %821.0;
  %825 = @func_5596() /* ty=Tensor[(7, 14, 14), float32] */;
  %826 = %822.0;
  (%823, %824, %825, %826)
}

def @func_11398() -> Tensor[(7, 14, 14), float32] {
  %827 = @func_6083() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %827.0
}

def @func_15835() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], uint16) {
  %828 = @func_12197() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %829 = @func_11611() /* ty=(Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */;
  %830 = cast(meta[relay.Constant][21] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %831 = reshape(%830, newshape=[]) /* ty=uint16 */;
  %832 = @func_1039(%831) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %833 = %828.1;
  %834 = @func_13523() /* ty=Tensor[(7, 14, 14), uint32] */;
  %835 = %829.0;
  %836 = %832.4;
  (%833, %834, %835, %836, meta[relay.Constant][21] /* ty=uint16 */)
}

def @func_6233() -> Tensor[(16, 12, 5), float32] {
  %837 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 5), float32] */;
  %838 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  divide(%837, %838) /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_16064() -> (uint16, Tensor[(7, 14, 14), float64]) {
  %839 = @func_12380() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */;
  %840 = @func_10475() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %841 = %839.2;
  %842 = %840.0;
  (%841, %842)
}

def @func_9139() -> (Tensor[(7, 14, 14), float32],) {
  %843 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %844 = %843.0;
  (%844,)
}

def @func_1631(%var_1607: uint16, %var_1617: Tensor[(1, 16, 11), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(1, 16, 11), bool]) {
  %845 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %846 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %847 = cast(%var_1607, dtype="uint16") /* ty=uint16 */;
  %848 = reshape(%847, newshape=[]) /* ty=uint16 */;
  %849 = @func_1039(%848) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %850 = cast(%var_1607, dtype="bool") /* ty=bool */;
  %851 = cast(%var_1617, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %852 = %845.1;
  %853 = %846.0;
  %854 = %849.0;
  %855 = less_equal(%850, %851) /* ty=Tensor[(1, 16, 11), bool] */;
  (%852, %853, %854, %855)
}

def @func_2026() -> (Tensor[(7, 14, 14), float64],) {
  %856 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %857 = %856.0;
  (%857,)
}

def @func_9652() -> Tensor[(7, 14, 14), float32] {
  %858 = @func_8880() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %858.0
}

def @func_13789() -> (Tensor[(7, 14, 14), float32], uint16) {
  %859 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %860 = %859.0;
  %861 = @func_8949() /* ty=uint16 */;
  (%860, %861)
}

def @func_14785() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %862 = @func_12675() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %863 = @func_11063() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %864 = %862.0;
  %865 = %863.1;
  (%864, %865)
}

def @func_7158() -> Tensor[(12, 9, 2), bool] {
  %866 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %866.1
}

def @func_3307() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float64]) {
  %867 = @func_1959() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %868 = @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %869 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %870 = reshape(%869, newshape=[]) /* ty=uint16 */;
  %871 = @func_479(%870) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %872 = @func_2692() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %873 = %867.0;
  %874 = %868.1;
  %875 = %871.1;
  %876 = %872.0;
  (%873, %874, %875, meta[relay.Constant][24] /* ty=uint16 */, %876)
}

def @func_4294() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %877 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %878 = @func_3409() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %879 = %877.0;
  %880 = %878.0;
  (%879, %880)
}

def @func_1095() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %881 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %882 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %883 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %884 = %881.1;
  %885 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  %886 = %882.0;
  %887 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %888 = %883.0;
  (%884, %885, %886, %887, %888)
}

def @func_13889() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %889 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %890 = @func_9702() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %891 = %889.0;
  %892 = %890.0;
  (%891, %892)
}

def @func_2604() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %893 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %894 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
  %895 = @func_1885() /* ty=Tensor[(7, 14, 14), float64] */;
  %896 = %893.0;
  (%894, %895, %896)
}

def @func_2934() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %897 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %898 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  %899 = %897.0;
  (%898, %899)
}

def @func_4503() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %900 = @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %901 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %902 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %903 = %900.1;
  %904 = %901.0;
  %905 = %902.0;
  (%903, %904, %905)
}

def @func_6280() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %906 = @func_5808() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %907 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %908 = %906.0;
  (%907, %908)
}

def @func_479(%var_460: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
  %909 = cast(%var_460, dtype="uint16") /* ty=uint16 */;
  %910 = reshape(%909, newshape=[]) /* ty=uint16 */;
  %911 = @func_136(%910) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %912 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %913 = %911.0;
  %914 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
  (%912, %913, %var_460, %914)
}

def @main(%var_16361: Tensor[(6, 6, 10), int16]) -> Tensor[(6, 6, 10), int16] {
  %915 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 6, 10), int16] */, dtype="int16") /* ty=Tensor[(6, 6, 10), int16] */;
  %916 = shape_of(%var_16361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%var_16361, dtype="int16") /* ty=Tensor[(6, 6, 10), int16] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%917, %918) /* ty=Tensor[(6, 6, 10), int16] */
}

def @func_14933() -> Tensor[(7, 14, 14), float32] {
  %919 = @func_10850() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float32]) */;
  %919.5
}

def @func_6373() -> Tensor[(7, 14, 14), float64] {
  %920 = @func_3935() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %920.1
}

def @func_5322() -> (Tensor[(7, 14, 14), float32],) {
  %921 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %922 = %921.0;
  (%922,)
}

def @func_14990() -> (uint16, Tensor[(7, 14, 14), float32]) {
  %923 = @func_12380() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */;
  %924 = %923.1;
  %925 = @func_12988() /* ty=Tensor[(7, 14, 14), float32] */;
  (%924, %925)
}

def @func_13215(%var_13211: Tensor[(1, 16, 5), float64]) -> (Tensor[(1, 16, 5), float64],) {
  %926 = cast(%var_13211, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %927 = atanh(%926) /* ty=Tensor[(1, 16, 5), float64] */;
  (%927,)
}

def @func_13729() -> (Tensor[(7, 14, 14), float32],) {
  %928 = @func_12564() /* ty=Tensor[(7, 14, 14), float32] */;
  (%928,)
}

def @func_8372() -> Tensor[(7, 14, 14), float64] {
  %929 = @func_2604() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %929.1
}

def @func_5481(%var_5412: Tensor[(13, 8, 14), float32], %var_5447: Tensor[(1170), float64]) -> (Tensor[(1170), float64], Tensor[(1170), float64], Tensor[(7, 14, 14), float32], Tensor[(13, 8, 14), int16], Tensor[(13, 8, 14), float64]) {
  %930 = cast(%var_5447, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %931 = reshape(%930, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %932 = @func_4565(%931) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), float64], Tensor[(7, 14, 14), float32]) */;
  %933 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %934 = cast(%var_5412, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %935 = log2(%934) /* ty=Tensor[(13, 8, 14), float32] */;
  %936 = cast(%var_5412, dtype="uint32") /* ty=Tensor[(13, 8, 14), uint32] */;
  %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%935, dtype="uint32") /* ty=Tensor[(13, 8, 14), uint32] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %940 = left_shift(%938, %939) /* ty=Tensor[(13, 8, 14), uint32] */;
  %941 = cast(%940, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %942 = shape_of(%var_5412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%var_5412, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %945 = less_equal(%943, %944) /* ty=Tensor[(13, 8, 14), bool] */;
  %946 = cast(%940, dtype="int16") /* ty=Tensor[(13, 8, 14), int16] */;
  %947 = shape_of(%945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %948 = cast(%945, dtype="int16") /* ty=Tensor[(13, 8, 14), int16] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %950 = cast(%945, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
  %951 = %932.3;
  %952 = %933.1;
  %953 = bitwise_and(%948, %949) /* ty=Tensor[(13, 8, 14), int16] */;
  %954 = sinh(%950) /* ty=Tensor[(13, 8, 14), float64] */;
  (%951, %var_5447, %952, %953, %954)
}

def @func_10039() -> (Tensor[(7, 14, 14), float64],) {
  %955 = @func_3647() /* ty=Tensor[(7, 14, 14), float64] */;
  (%955,)
}

def @func_12675() -> (Tensor[(7, 14, 14), float32],) {
  %956 = @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %957 = %956.0;
  (%957,)
}

def @func_10501() -> Tensor[(7, 14, 14), float32] {
  %958 = @func_6317() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %958.0
}

def @func_3993() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %959 = @func_3307() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float64]) */;
  %960 = @func_3619() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %961 = %959.4;
  %962 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
  %963 = %960.0;
  (%961, %962, %963)
}

def @func_14694() -> (Tensor[(12, 9, 2), bool],) {
  %964 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %965 = %964.1;
  (%965,)
}

def @func_10196() -> (Tensor[(7, 14, 14), float32],) {
  %966 = @func_8074() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %967 = %966.0;
  (%967,)
}

def @func_47() -> Tensor[(7, 14, 14), float64] {
  %968 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  tan(%968) /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_13050() -> (uint16,) {
  %969 = @func_8210() /* ty=(uint16, Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %970 = %969.0;
  (%970,)
}

def @func_8933() -> Tensor[(7, 14, 14), uint32] {
  %971 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %971.1
}

def @func_1469() -> Tensor[(7, 14, 14), float32] {
  %972 = @func_1461() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %972.1
}

def @func_1564(%var_1544: Tensor[(15, 12, 2), uint32]) -> (Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) {
  %973 = cast(%var_1544, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
  %974 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(15, 12, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 12, 2), uint32] */, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %977 = cast(%var_1544, dtype="float64") /* ty=Tensor[(15, 12, 2), float64] */;
  %978 = greater(%975, %976) /* ty=Tensor[(15, 12, 2), bool] */;
  %979 = log2(%977) /* ty=Tensor[(15, 12, 2), float64] */;
  (%978, %979)
}

def @func_3935() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %980 = @func_3409() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %981 = @func_3307() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float64]) */;
  %982 = %980.0;
  %983 = %981.2;
  (%982, %983)
}

def @func_3697() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %984 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %985 = %984.0;
  %986 = @func_3647() /* ty=Tensor[(7, 14, 14), float64] */;
  %987 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%985, %986, %987)
}

def @func_9453() -> (Tensor[(7, 14, 14), float32],) {
  %988 = @func_5862() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %989 = %988.0;
  (%989,)
}

def @func_11240(%var_11221: Tensor[(11, 14, 6), bool], %var_11222: Tensor[(11, 14, 6), bool]) -> (Tensor[(11, 14, 6), bool],) {
  %990 = cast(%var_11222, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
  %991 = shape_of(%var_11221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %992 = cast(%var_11221, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %994 = logical_and(%992, %993) /* ty=Tensor[(11, 14, 6), bool] */;
  (%994,)
}

def @func_7266() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %995 = @func_6664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %996 = @func_6158() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %997 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %998 = @func_6280() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %999 = %995.0;
  %1000 = %996.0;
  %1001 = %997.0;
  %1002 = %998.1;
  (%999, %1000, %1001, %1002)
}

def @func_13285() -> (Tensor[(7, 14, 14), float32],) {
  %1003 = @func_9134() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_3619() -> (Tensor[(7, 14, 14), float64],) {
  %1005 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %1006 = %1005.2;
  (%1006,)
}

def @func_8399() -> Tensor[(7, 14, 14), float64] {
  %1007 = @func_5953() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %1007.3
}

def @func_12158(%var_12151: Tensor[(36, 10), uint32]) -> (Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(36, 10), uint32]) {
  %1008 = @func_5862() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1009 = cast(%var_12151, dtype="uint32") /* ty=Tensor[(36, 10), uint32] */;
  %1010 = reshape(%1009, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
  %1011 = @func_1564(%1010) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
  %1012 = %1008.0;
  %1013 = %1011.0;
  (%1012, %1013, %var_12151)
}

def @func_10081() -> Tensor[(7, 14, 14), float32] {
  %1014 = @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1014.0
}

def @func_1316() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) {
  %1015 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %1016 = cast(meta[relay.Constant][28] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1017 = reshape(%1016, newshape=[]) /* ty=uint16 */;
  %1018 = @func_1039(%1017) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %1019 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %1020 = %1015.0;
  %1021 = %1018.0;
  %1022 = %1019.1;
  (%1020, %1021, meta[relay.Constant][28] /* ty=uint16 */, %1022)
}

def @func_12329() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 132), int16], Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  %1023 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 132), bool] */, dtype="bool") /* ty=Tensor[(7, 132), bool] */;
  %1024 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 132), bool] */, dtype="bool") /* ty=Tensor[(7, 132), bool] */;
  %1025 = reshape(%1023, newshape=[11, 14, 6]) /* ty=Tensor[(11, 14, 6), bool] */;
  %1026 = reshape(%1024, newshape=[11, 14, 6]) /* ty=Tensor[(11, 14, 6), bool] */;
  %1027 = @func_11240(%1025, %1026) /* ty=(Tensor[(11, 14, 6), bool],) */;
  %1028 = %1027.0;
  %1029 = cast(%1028, dtype="int16") /* ty=Tensor[(11, 14, 6), int16] */;
  %1030 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(7, 132), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1031 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 132), bool] */, dtype="int16") /* ty=Tensor[(7, 132), int16] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1033 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %1034 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %1035 = @func_2515() /* ty=Tensor[(7, 14, 14), float32] */;
  %1036 = minimum(%1031, %1032) /* ty=Tensor[(7, 132), int16] */;
  %1037 = %1033.0;
  %1038 = %1034.1;
  (%1035, %1036, %1037, %1038)
}

def @func_10859() -> Tensor[(7, 14, 14), float32] {
  %1039 = @func_6055() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1039.0
}

def @func_10726() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), bool], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) {
  %1040 = @func_3619() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1041 = @func_6664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1042 = cast(meta[relay.Constant][30] /* ty=Tensor[(176), uint16] */, dtype="uint16") /* ty=Tensor[(176), uint16] */;
  %1043 = reshape(%1042, newshape=[176]) /* ty=Tensor[(176), uint16] */;
  %1044 = @func_7114(%1043) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */;
  %1045 = cast(meta[relay.Constant][31] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %1046 = cast(meta[relay.Constant][31] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %1047 = cast(meta[relay.Constant][31] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %1048 = reshape(%1045, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %1049 = reshape(%1046, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %1050 = reshape(%1047, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %1051 = @func_8657(%1048, %1049, %1050) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), float32], Tensor[(11, 7, 9), bool]) */;
  %1052 = @func_10196() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1053 = %1040.0;
  %1054 = %1041.0;
  %1055 = %1044.3;
  %1056 = @func_5195() /* ty=Tensor[(7, 14, 14), float64] */;
  %1057 = %1051.2;
  %1058 = %1052.0;
  (%1053, %1054, %1055, meta[relay.Constant][30] /* ty=Tensor[(176), uint16] */, %1056, %1057, meta[relay.Constant][31] /* ty=Tensor[(693), int32] */, %1058)
}

def @func_13168() -> (Tensor[(7, 14, 14), float32], uint16, uint16) {
  %1059 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1060 = cast(meta[relay.Constant][32] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1061 = reshape(%1060, newshape=[]) /* ty=uint16 */;
  %1062 = @func_6817(%1061) /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16, Tensor[(7, 14, 14), float32]) */;
  %1063 = %1059.1;
  %1064 = %1062.1;
  (%1063, %1064, meta[relay.Constant][32] /* ty=uint16 */)
}

def @func_14617() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %1065 = @func_9295() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1066 = %1065.0;
  %1067 = @func_7202() /* ty=Tensor[(7, 14, 14), float32] */;
  (%1066, %1067)
}

def @func_7017() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) {
  %1068 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %1069 = %1068.0;
  %1070 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 14, 14), float64] */, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %1071 = shape_of(%1069, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1072 = cast(%1069, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1074 = @func_6158() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1075 = left_shift(%1072, %1073) /* ty=Tensor[(7, 14, 14), uint32] */;
  %1076 = %1074.3;
  (%1075, %1076)
}

def @func_6083() -> (Tensor[(7, 14, 14), float32],) {
  %1077 = @func_5596() /* ty=Tensor[(7, 14, 14), float32] */;
  (%1077,)
}

def @func_3889() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) {
  %1078 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1079 = %1078.0;
  %1080 = @func_1885() /* ty=Tensor[(7, 14, 14), float64] */;
  %1081 = @func_1411() /* ty=Tensor[(7, 14, 14), int16] */;
  (%1079, %1080, %1081)
}

def @func_11874(%var_11868: Tensor[(100), uint64]) -> (Tensor[(7, 14, 14), float32], uint64, Tensor[(100), uint64], Tensor[(2, 700), bool]) {
  %1082 = @func_10153() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1083 = cast(%var_11868, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %1084 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 700), bool] */, dtype="bool") /* ty=Tensor[(2, 700), bool] */;
  %1085 = reshape(%1083, newshape=[100]) /* ty=Tensor[(100), uint64] */;
  %1086 = reshape(%1084, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), bool] */;
  %1087 = @func_10937(%1085, %1086) /* ty=(Tensor[(11, 6, 16), float32], Tensor[(7, 14, 14), uint32], Tensor[(1372), float64], uint64, Tensor[(100), uint64], Tensor[(10, 10, 14), int32]) */;
  %1088 = %1082.0;
  %1089 = %1087.3;
  (%1088, %1089, %var_11868, meta[relay.Constant][34] /* ty=Tensor[(2, 700), bool] */)
}

def @func_820() -> Tensor[(7, 14, 14), float32] {
  %1090 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %1091 = cast(%1090, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %1092 = asinh(%1091) /* ty=Tensor[(7, 14, 14), float32] */;
  %1093 = cast(%1092, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  acos(%1093) /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_1200(%var_1192: Tensor[(16, 7, 13), uint16]) -> (Tensor[(16, 7, 13), uint16], Tensor[(7, 14, 14), float32]) {
  %1094 = cast(%var_1192, dtype="uint16") /* ty=Tensor[(16, 7, 13), uint16] */;
  %1095 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(16, 7, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1096 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 7, 13), uint16] */, dtype="uint16") /* ty=Tensor[(16, 7, 13), uint16] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1098 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1099 = add(%1096, %1097) /* ty=Tensor[(16, 7, 13), uint16] */;
  %1100 = %1098.0;
  (%1099, %1100)
}

def @func_2515() -> Tensor[(7, 14, 14), float32] {
  %1101 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %1101.0
}

def @func_14095() -> (uint16,) {
  %1102 = @func_13975() /* ty=(uint16, Tensor[(15, 12, 2), float64], Tensor[(360), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
  %1103 = %1102.0;
  (%1103,)
}

def @func_7814() -> (Tensor[(16, 12, 5), float32],) {
  %1104 = @func_6233() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1104,)
}

def @func_5596() -> Tensor[(7, 14, 14), float32] {
  %1105 = @func_5322() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1105.0
}

def @func_3647() -> Tensor[(7, 14, 14), float64] {
  %1106 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1106.1
}

def @func_5115() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) {
  %1107 = @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1108 = @func_2628() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %1109 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 108), bool] */, dtype="bool") /* ty=Tensor[(2, 108), bool] */;
  %1110 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 108), bool] */, dtype="bool") /* ty=Tensor[(2, 108), bool] */;
  %1111 = reshape(%1109, newshape=[12, 9, 2]) /* ty=Tensor[(12, 9, 2), bool] */;
  %1112 = reshape(%1110, newshape=[12, 9, 2]) /* ty=Tensor[(12, 9, 2), bool] */;
  %1113 = @func_5012(%1111, %1112) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(12, 9, 2), uint32]) */;
  %1114 = %1113.1;
  %1115 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 108), bool] */, dtype="bool") /* ty=Tensor[(2, 108), bool] */;
  %1116 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(%1114, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1119 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1120 = %1107.0;
  %1121 = %1108.2;
  %1122 = logical_or(%1117, %1118) /* ty=Tensor[(12, 9, 2), bool] */;
  %1123 = %1119.0;
  (%1120, %1121, %1122, %1123)
}

def @func_6414() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float32]) {
  %1124 = @func_4243() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1125 = cast(meta[relay.Constant][37] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1126 = reshape(%1125, newshape=[]) /* ty=uint16 */;
  %1127 = @func_1756(%1126) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %1128 = @func_1959() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1129 = %1124.0;
  %1130 = %1127.6;
  %1131 = %1128.1;
  (%1129, %1130, meta[relay.Constant][37] /* ty=uint16 */, %1131)
}

def @func_10410() -> (Tensor[(7, 14, 14), float32],) {
  %1132 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_15194() -> Tensor[(7, 14, 14), float64] {
  %1134 = @func_10953() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %1134.0
}

def @func_9702() -> (Tensor[(7, 14, 14), float64],) {
  %1135 = @func_7664() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %1136 = %1135.0;
  (%1136,)
}

def @func_3359(%var_3344: Tensor[(7, 14, 14), float64]) -> Tensor[(7, 14, 14), uint32] {
  %1137 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %1138 = %1137.0;
  %1139 = cast(%var_3344, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%1138, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%1141, %1142) /* ty=Tensor[(7, 14, 14), uint32] */
}

def @func_14919() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(16, 12, 5), float32]) {
  %1143 = @func_14485() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1144 = @func_9422() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1145 = @func_11044() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(16, 12, 5), float32], Tensor[(7, 14, 14), uint32]) */;
  %1146 = %1143.0;
  %1147 = %1144.3;
  %1148 = %1145.1;
  (%1146, %1147, %1148)
}

def @func_3660() -> Tensor[(7, 14, 14), int16] {
  @func_1411() /* ty=Tensor[(7, 14, 14), int16] */
}

def @func_6958(%var_6927: Tensor[(12, 9, 2), bool]) -> (Tensor[(12, 9, 2), uint8], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), int64]) {
  %1149 = @func_5115() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */;
  %1150 = %1149.2;
  %1151 = cast(%var_6927, dtype="uint8") /* ty=Tensor[(12, 9, 2), uint8] */;
  %1152 = shape_of(%1150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1153 = cast(%1150, dtype="uint8") /* ty=Tensor[(12, 9, 2), uint8] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1155 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %1156 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1157 = cast(%var_6927, dtype="int64") /* ty=Tensor[(12, 9, 2), int64] */;
  %1158 = shape_of(%1150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1159 = cast(%1150, dtype="int64") /* ty=Tensor[(12, 9, 2), int64] */;
  %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1161 = bitwise_xor(%1153, %1154) /* ty=Tensor[(12, 9, 2), uint8] */;
  %1162 = %1155.1;
  %1163 = %1156.1;
  %1164 = bitwise_and(%1159, %1160) /* ty=Tensor[(12, 9, 2), int64] */;
  (%1161, %1162, %1163, %1164)
}

def @func_4367(%var_4333: Tensor[(9, 60), int16]) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(9, 60), float32]) {
  %1165 = @func_3935() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1166 = cast(%var_4333, dtype="int16") /* ty=Tensor[(9, 60), int16] */;
  %1167 = reshape(%1166, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), int16] */;
  %1168 = @func_3596(%1167) /* ty=(Tensor[(3, 15, 12), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1169 = cast(%var_4333, dtype="float32") /* ty=Tensor[(9, 60), float32] */;
  %1170 = log2(%1169) /* ty=Tensor[(9, 60), float32] */;
  %1171 = cast(%var_4333, dtype="float32") /* ty=Tensor[(9, 60), float32] */;
  %1172 = shape_of(%1170, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1173 = cast(%1170, dtype="float32") /* ty=Tensor[(9, 60), float32] */;
  %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1175 = %1165.1;
  %1176 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %1177 = %1168.1;
  %1178 = power(%1173, %1174) /* ty=Tensor[(9, 60), float32] */;
  (%1175, %1176, %1177, %1178)
}

def @func_7664() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %1179 = @func_6055() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1180 = %1179.1;
  %1181 = @func_6912() /* ty=Tensor[(7, 14, 14), float32] */;
  (%1180, %1181)
}

def @func_13587() -> (Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  %1182 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %1183 = %1182.0;
  %1184 = @func_7158() /* ty=Tensor[(12, 9, 2), bool] */;
  (%1183, %1184)
}

def @func_10937(%var_10924: Tensor[(100), uint64], %var_10930: Tensor[(10, 10, 14), bool]) -> (Tensor[(11, 6, 16), float32], Tensor[(7, 14, 14), uint32], Tensor[(1372), float64], uint64, Tensor[(100), uint64], Tensor[(10, 10, 14), int32]) {
  %1185 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 6, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 16), float32] */;
  %1186 = cast(meta[relay.Constant][39] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %1187 = reshape(%1186, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %1188 = cast(meta[relay.Constant][40] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1189 = cast(%var_10924, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %1190 = reshape(%1188, newshape=[]) /* ty=uint64 */;
  %1191 = reshape(%1189, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), uint64] */;
  %1192 = @func_8720(%1190, %1191) /* ty=Tensor[(10, 10, 1), bool] */;
  %1193 = cast(%1192, dtype="int32") /* ty=Tensor[(10, 10, 1), int32] */;
  %1194 = cast(%var_10930, dtype="int32") /* ty=Tensor[(10, 10, 14), int32] */;
  %1195 = sinh(%1185) /* ty=Tensor[(11, 6, 16), float32] */;
  %1196 = @func_3359(%1187) /* ty=Tensor[(7, 14, 14), uint32] */;
  %1197 = add(%1193, %1194) /* ty=Tensor[(10, 10, 14), int32] */;
  (%1195, %1196, meta[relay.Constant][39] /* ty=Tensor[(1372), float64] */, meta[relay.Constant][40] /* ty=uint64 */, %var_10924, %1197)
}

def @func_7308() -> Tensor[(7, 14, 14), float32] {
  %1198 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
  %1198.1
}

def @func_7416(%var_7400: Tensor[(13, 10, 10), uint32], %var_7401: Tensor[(13, 10, 10), uint32]) -> Tensor[(13, 10, 10), uint32] {
  %1199 = cast(%var_7401, dtype="uint32") /* ty=Tensor[(13, 10, 10), uint32] */;
  %1200 = shape_of(%var_7400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1201 = cast(%var_7400, dtype="uint32") /* ty=Tensor[(13, 10, 10), uint32] */;
  %1202 = dyn.reshape(%1199, %1200, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%1201, %1202) /* ty=Tensor[(13, 10, 10), uint32] */
}

def @func_5568() -> (Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  %1203 = @func_5115() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */;
  %1204 = @func_1885() /* ty=Tensor[(7, 14, 14), float64] */;
  %1205 = %1203.2;
  (%1204, %1205)
}

def @func_1125() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) {
  %1206 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %1207 = cast(%1206, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %1208 = reshape(%1207, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %1209 = @func_374(%1208) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %1210 = %1209.0;
  (%1206, %1210)
}

def @func_12403() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %1211 = @func_7664() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %1212 = @func_8074() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1213 = %1211.0;
  %1214 = %1212.0;
  (%1213, %1214)
}

def @func_9565(%var_9550: Tensor[(3, 10, 13), uint16]) -> (Tensor[(7, 14, 14), float64], Tensor[(3, 10, 13), bool]) {
  %1215 = @func_8949() /* ty=uint16 */;
  %1216 = cast(%1215, dtype="bool") /* ty=bool */;
  %1217 = cast(%var_9550, dtype="bool") /* ty=Tensor[(3, 10, 13), bool] */;
  %1218 = @func_5195() /* ty=Tensor[(7, 14, 14), float64] */;
  %1219 = greater_equal(%1216, %1217) /* ty=Tensor[(3, 10, 13), bool] */;
  (%1218, %1219)
}

def @func_5374() -> (Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), uint32]) {
  %1220 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
  %1221 = %1220.3;
  %1222 = cast(%1221, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %1223 = reshape(%1222, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %1224 = @func_3359(%1223) /* ty=Tensor[(7, 14, 14), uint32] */;
  (%1221, %1224)
}

def @func_1537() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %1225 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1226 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1227 = %1225.0;
  %1228 = %1226.0;
  (%1227, %1228)
}

def @func_15159(%var_15145: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
  %1229 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
  %1230 = cast(%var_15145, dtype="uint16") /* ty=uint16 */;
  %1231 = cast(meta[relay.Constant][41] /* ty=Tensor[(176), uint16] */, dtype="uint16") /* ty=Tensor[(176), uint16] */;
  %1232 = reshape(%1230, newshape=[]) /* ty=uint16 */;
  %1233 = reshape(%1231, newshape=[176]) /* ty=Tensor[(176), uint16] */;
  %1234 = @func_2405(%1232, %1233) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */;
  %1235 = %1229.0;
  %1236 = @func_1411() /* ty=Tensor[(7, 14, 14), int16] */;
  %1237 = %1234.1;
  (%1235, %1236, %1237, %var_15145, meta[relay.Constant][41] /* ty=Tensor[(176), uint16] */)
}

def @func_11334() -> (Tensor[(7, 14, 14), float32],) {
  %1238 = @func_10153() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1239 = %1238.0;
  (%1239,)
}

def @func_9057() -> Tensor[(7, 14, 14), float32] {
  %1240 = @func_8210() /* ty=(uint16, Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1240.1
}

def @func_16258() -> (Tensor[(7, 14, 14), float64], uint16, Tensor[(2, 88), uint16], Tensor[(14, 6, 8), int64], Tensor[(672), int64]) {
  %1241 = @func_15277() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1242 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 88), uint16] */, dtype="uint16") /* ty=Tensor[(2, 88), uint16] */;
  %1243 = reshape(%1242, newshape=[176]) /* ty=Tensor[(176), uint16] */;
  %1244 = @func_7114(%1243) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */;
  %1245 = cast(meta[relay.Constant][43] /* ty=Tensor[(672), int64] */, dtype="int64") /* ty=Tensor[(672), int64] */;
  %1246 = reshape(%1245, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), int64] */;
  %1247 = @func_11680(%1246) /* ty=(Tensor[(14, 6, 8), int64],) */;
  %1248 = %1241.0;
  %1249 = %1244.2;
  %1250 = %1247.0;
  (%1248, %1249, meta[relay.Constant][42] /* ty=Tensor[(2, 88), uint16] */, %1250, meta[relay.Constant][43] /* ty=Tensor[(672), int64] */)
}

def @func_11044() -> (Tensor[(7, 14, 14), float32], Tensor[(16, 12, 5), float32], Tensor[(7, 14, 14), uint32]) {
  %1251 = @func_7814() /* ty=(Tensor[(16, 12, 5), float32],) */;
  %1252 = @func_4160() /* ty=Tensor[(7, 14, 14), float32] */;
  %1253 = %1251.0;
  %1254 = @func_8933() /* ty=Tensor[(7, 14, 14), uint32] */;
  (%1252, %1253, %1254)
}

def @func_13081(%var_13068: Tensor[(360), uint32]) -> (Tensor[(6, 10, 15), bool], Tensor[(15, 12, 2), bool], Tensor[(360), uint32]) {
  %1255 = @func_6530() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(6, 10, 15), bool]) */;
  %1256 = cast(%var_13068, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %1257 = reshape(%1256, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
  %1258 = @func_1564(%1257) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
  %1259 = %1255.1;
  %1260 = %1258.0;
  (%1259, %1260, %var_13068)
}

def @func_9295() -> (Tensor[(7, 14, 14), float64],) {
  %1261 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%1261,)
}

def @func_11699() -> (Tensor[(7, 14, 14), float64],) {
  %1262 = @func_8372() /* ty=Tensor[(7, 14, 14), float64] */;
  (%1262,)
}

def @func_4416() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) {
  %1263 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %1264 = %1263.1;
  %1265 = @func_3647() /* ty=Tensor[(7, 14, 14), float64] */;
  (%1264, %1265)
}

def @func_8916(%var_8907: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16) {
  %1266 = @func_6664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1267 = cast(%var_8907, dtype="uint16") /* ty=uint16 */;
  %1268 = reshape(%1267, newshape=[]) /* ty=uint16 */;
  %1269 = @func_1039(%1268) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %1270 = %1266.0;
  %1271 = %1269.2;
  (%1270, %1271, %var_8907)
}

def @func_2628() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %1272 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %1273 = @func_2182() /* ty=Tensor[(7, 14, 14), float32] */;
  %1274 = %1272.5;
  %1275 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  (%1273, %1274, %1275)
}

def @func_10016(%var_10000: Tensor[(8, 8, 4), uint8], %var_10001: Tensor[(8, 8, 4), uint8]) -> (Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float32]) {
  %1276 = cast(%var_10001, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
  %1277 = shape_of(%var_10000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1278 = cast(%var_10000, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
  %1279 = dyn.reshape(%1276, %1277, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1280 = cast(%var_10001, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
  %1281 = bitwise_xor(%1278, %1279) /* ty=Tensor[(8, 8, 4), uint8] */;
  %1282 = cos(%1280) /* ty=Tensor[(8, 8, 4), float32] */;
  (%1281, %1282)
}

def @func_4855() -> Tensor[(7, 14, 14), float64] {
  @func_47() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_4243() -> (Tensor[(7, 14, 14), float64],) {
  %1283 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %1284 = %1283.2;
  (%1284,)
}

def @func_10153() -> (Tensor[(7, 14, 14), float32],) {
  %1285 = @func_9453() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1286 = %1285.0;
  (%1286,)
}

def @func_13493() -> Tensor[(7, 14, 14), float64] {
  %1287 = @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
  %1287.1
}

def @func_9900(%var_9893: Tensor[(3, 10, 10), uint16], %var_9894: Tensor[(3, 10, 10), uint16]) -> (Tensor[(3, 10, 10), uint16],) {
  %1288 = cast(%var_9894, dtype="uint16") /* ty=Tensor[(3, 10, 10), uint16] */;
  %1289 = shape_of(%var_9893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1290 = cast(%var_9893, dtype="uint16") /* ty=Tensor[(3, 10, 10), uint16] */;
  %1291 = dyn.reshape(%1288, %1289, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1292 = subtract(%1290, %1291) /* ty=Tensor[(3, 10, 10), uint16] */;
  (%1292,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2128() -> (Tensor[(7, 14, 14), float32],) {
  %0 = @func_2090() /* ty=Tensor[(7, 14, 14), float32] */;
  (%0,)
}

def @func_5674() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  @func_5672() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */
}

def @func_10081() -> Tensor[(7, 14, 14), float32] {
  %1 = @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1.0
}

def @func_1183() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %2 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %3 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %4 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %5 = %2.5;
  (%3, %4, %5)
}

def @func_10503() -> Tensor[(7, 14, 14), float32] {
  @func_10501() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_4296() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_1096() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %14 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
    %6 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %7 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %8 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %9 = %6.1;
    %10 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
    %11 = %7.0;
    %12 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
    %13 = %8.0;
    (%9, %10, %11, %12, %13)
  };
  %14() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_2028() -> (Tensor[(7, 14, 14), float64],) {
  @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_2515() -> Tensor[(7, 14, 14), float32] {
  %15 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %15.0
}

def @func_9295() -> (Tensor[(7, 14, 14), float64],) {
  %16 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%16,)
}

def @func_11336() -> (Tensor[(7, 14, 14), float32],) {
  @func_11334() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_11877(%var_11875: Tensor[(100), uint64]) -> (Tensor[(7, 14, 14), float32], uint64, Tensor[(100), uint64], Tensor[(2, 700), bool]) {
  @func_11874(%var_11875) /* ty=(Tensor[(7, 14, 14), float32], uint64, Tensor[(100), uint64], Tensor[(2, 700), bool]) */
}

def @func_10197() -> (Tensor[(7, 14, 14), float32],) {
  %19 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %17 = @func_8074() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %18 = %17.0;
    (%18,)
  };
  %19() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_3180() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32]) {
  %20 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %21 = @func_2604() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %22 = %20.1;
  %23 = @func_1411() /* ty=Tensor[(7, 14, 14), int16] */;
  %24 = %21.0;
  (%22, %23, %24)
}

def @func_9136() -> (Tensor[(7, 14, 14), float32],) {
  @func_9134() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_4568(%var_4566: Tensor[(1170), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), float64], Tensor[(7, 14, 14), float32]) {
  @func_4565(%var_4566) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_2775() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %25 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %26 = %25.0;
  %27 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%26, %27)
}

def @func_2936() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_3994() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %33 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %28 = @func_3307() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float64]) */;
    %29 = @func_3619() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %30 = %28.4;
    %31 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
    %32 = %29.0;
    (%30, %31, %32)
  };
  %33() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_7268() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_7266() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_7951() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_7949() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_3489() -> (Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], uint16, uint16, Tensor[(7, 14, 14), float64]) {
  %46 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], uint16, uint16, Tensor[(7, 14, 14), float64]) {
    %34 = @func_2240() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %35 = cast(meta[relay.Constant][0] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
    %36 = reshape(%35, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
    %37 = @func_1564(%36) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
    %38 = cast(meta[relay.Constant][1] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %39 = reshape(%38, newshape=[]) /* ty=uint16 */;
    %40 = @func_1039(%39) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
    %41 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %42 = %34.0;
    %43 = %37.0;
    %44 = %40.3;
    %45 = %41.0;
    (%42, %43, meta[relay.Constant][0] /* ty=Tensor[(360), uint32] */, %44, meta[relay.Constant][1] /* ty=uint16 */, %45)
  };
  %46() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], uint16, uint16, Tensor[(7, 14, 14), float64]) */
}

def @func_13400() -> Tensor[(7, 14, 14), float32] {
  %48 = fn () -> Tensor[(7, 14, 14), float32] {
    %47 = @func_9139() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %47.0
  };
  %48() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_6233() -> Tensor[(16, 12, 5), float32] {
  %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 5), float32] */;
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 5), float32] */;
  divide(%49, %50) /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_7371(%var_7368: Tensor[(10, 117), float64], %var_7369: Tensor[(13, 9, 10), int8], %var_7370: Tensor[(528), float64]) -> (Tensor[(7, 14, 14), float64], Tensor[(10, 117), float64], Tensor[(13, 9, 10), float64], Tensor[(8, 11, 6), bool], float64, Tensor[(528), float64], Tensor[(7, 14, 14), float32]) {
  @func_7366(%var_7368, %var_7369, %var_7370) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(10, 117), float64], Tensor[(13, 9, 10), float64], Tensor[(8, 11, 6), bool], float64, Tensor[(528), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_6416() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float32]) {
  @func_6414() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float32]) */
}

def @func_7816() -> (Tensor[(16, 12, 5), float32],) {
  @func_7814() /* ty=(Tensor[(16, 12, 5), float32],) */
}

def @func_5484(%var_5482: Tensor[(13, 8, 14), float32], %var_5483: Tensor[(1170), float64]) -> (Tensor[(1170), float64], Tensor[(1170), float64], Tensor[(7, 14, 14), float32], Tensor[(13, 8, 14), int16], Tensor[(13, 8, 14), float64]) {
  %76 = fn (%var_5412: Tensor[(13, 8, 14), float32], %var_5447: Tensor[(1170), float64]) -> (Tensor[(1170), float64], Tensor[(1170), float64], Tensor[(7, 14, 14), float32], Tensor[(13, 8, 14), int16], Tensor[(13, 8, 14), float64]) {
    %51 = cast(%var_5447, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %52 = reshape(%51, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %53 = @func_4565(%52) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), float64], Tensor[(7, 14, 14), float32]) */;
    %54 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %55 = cast(%var_5412, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
    %56 = log2(%55) /* ty=Tensor[(13, 8, 14), float32] */;
    %57 = cast(%var_5412, dtype="uint32") /* ty=Tensor[(13, 8, 14), uint32] */;
    %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
    %59 = cast(%56, dtype="uint32") /* ty=Tensor[(13, 8, 14), uint32] */;
    %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %61 = left_shift(%59, %60) /* ty=Tensor[(13, 8, 14), uint32] */;
    %62 = cast(%61, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
    %63 = shape_of(%var_5412, dtype="int32") /* ty=Tensor[(3), int32] */;
    %64 = cast(%var_5412, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
    %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %66 = less_equal(%64, %65) /* ty=Tensor[(13, 8, 14), bool] */;
    %67 = cast(%61, dtype="int16") /* ty=Tensor[(13, 8, 14), int16] */;
    %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
    %69 = cast(%66, dtype="int16") /* ty=Tensor[(13, 8, 14), int16] */;
    %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %71 = cast(%66, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
    %72 = %53.3;
    %73 = %54.1;
    %74 = bitwise_and(%69, %70) /* ty=Tensor[(13, 8, 14), int16] */;
    %75 = sinh(%71) /* ty=Tensor[(13, 8, 14), float64] */;
    (%72, %var_5447, %73, %74, %75)
  };
  %76(%var_5482, %var_5483) /* ty=(Tensor[(1170), float64], Tensor[(1170), float64], Tensor[(7, 14, 14), float32], Tensor[(13, 8, 14), int16], Tensor[(13, 8, 14), float64]) */
}

def @func_12381() -> (Tensor[(7, 14, 14), float32], uint16, uint16) {
  %82 = fn () -> (Tensor[(7, 14, 14), float32], uint16, uint16) {
    %77 = cast(meta[relay.Constant][4] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %78 = reshape(%77, newshape=[]) /* ty=uint16 */;
    %79 = @func_1039(%78) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
    %80 = @func_7202() /* ty=Tensor[(7, 14, 14), float32] */;
    %81 = %79.3;
    (%80, %81, meta[relay.Constant][4] /* ty=uint16 */)
  };
  %82() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */
}

def @func_12677() -> (Tensor[(7, 14, 14), float32],) {
  @func_12675() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_10274() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_10272() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_8844(%var_8842: Tensor[(4, 10, 5), float32]) -> (Tensor[(4, 10, 5), float32], Tensor[(7, 14, 14), float64], uint16) {
  @func_8841(%var_8842) /* ty=(Tensor[(4, 10, 5), float32], Tensor[(7, 14, 14), float64], uint16) */
}

def @func_3598(%var_3597: Tensor[(3, 15, 12), int16]) -> (Tensor[(3, 15, 12), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %91 = fn (%var_3551: Tensor[(3, 15, 12), int16]) -> (Tensor[(3, 15, 12), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
    %83 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 15, 12), int16] */, dtype="int16") /* ty=Tensor[(3, 15, 12), int16] */;
    %84 = shape_of(%var_3551, dtype="int32") /* ty=Tensor[(3), int32] */;
    %85 = cast(%var_3551, dtype="int16") /* ty=Tensor[(3, 15, 12), int16] */;
    %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %87 = @func_1832() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %88 = left_shift(%85, %86) /* ty=Tensor[(3, 15, 12), int16] */;
    %89 = %87.0;
    %90 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
    (%88, %89, %90)
  };
  %91(%var_3597) /* ty=(Tensor[(3, 15, 12), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_7420(%var_7418: Tensor[(13, 10, 10), uint32], %var_7419: Tensor[(13, 10, 10), uint32]) -> Tensor[(13, 10, 10), uint32] {
  @func_7416(%var_7418, %var_7419) /* ty=Tensor[(13, 10, 10), uint32] */
}

def @func_295() -> (Tensor[(7, 14, 14), float32],) {
  @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_999(%var_997: Tensor[(7, 14, 14), float32]) -> (Tensor[(7, 14, 14), uint64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_996(%var_997) /* ty=(Tensor[(7, 14, 14), uint64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_11045() -> (Tensor[(7, 14, 14), float32], Tensor[(16, 12, 5), float32], Tensor[(7, 14, 14), uint32]) {
  %96 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(16, 12, 5), float32], Tensor[(7, 14, 14), uint32]) {
    %92 = @func_7814() /* ty=(Tensor[(16, 12, 5), float32],) */;
    %93 = @func_4160() /* ty=Tensor[(7, 14, 14), float32] */;
    %94 = %92.0;
    %95 = @func_8933() /* ty=Tensor[(7, 14, 14), uint32] */;
    (%93, %94, %95)
  };
  %96() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(16, 12, 5), float32], Tensor[(7, 14, 14), uint32]) */
}

def @func_1537() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %97 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %98 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %99 = %97.0;
  %100 = %98.0;
  (%99, %100)
}

def @func_2517() -> Tensor[(7, 14, 14), float32] {
  @func_2515() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_15418() -> Tensor[(7, 14, 14), float32] {
  %101 = @func_2988() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %101.0
}

def @func_15666() -> (Tensor[(7, 14, 14), float32],) {
  %102 = @func_10583() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %103 = %102.1;
  (%103,)
}

def @func_1886() -> Tensor[(7, 14, 14), float64] {
  %105 = fn () -> Tensor[(7, 14, 14), float64] {
    %104 = @func_1537() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %104.0
  };
  %105() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_3621() -> (Tensor[(7, 14, 14), float64],) {
  @func_3619() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_2630() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_2628() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_8950() -> uint16 {
  %107 = fn () -> uint16 {
    %106 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
    %106.2
  };
  %107() /* ty=uint16 */
}

def @func_14763() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  @func_14761() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */
}

def @func_5954() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %117 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
    %108 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %109 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %110 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %111 = @func_2628() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %112 = %108.0;
    %113 = @func_2515() /* ty=Tensor[(7, 14, 14), float32] */;
    %114 = %109.0;
    %115 = %110.0;
    %116 = %111.2;
    (%112, %113, %114, %115, %116)
  };
  %117() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_9453() -> (Tensor[(7, 14, 14), float32],) {
  %118 = @func_5862() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %119 = %118.0;
  (%119,)
}

def @func_13052() -> (uint16,) {
  @func_13050() /* ty=(uint16,) */
}

def @func_8841(%var_8800: Tensor[(4, 10, 5), float32]) -> (Tensor[(4, 10, 5), float32], Tensor[(7, 14, 14), float64], uint16) {
  %120 = cast(%var_8800, dtype="float32") /* ty=Tensor[(4, 10, 5), float32] */;
  %121 = cast(meta[relay.Constant][6] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %122 = reshape(%121, newshape=[]) /* ty=uint16 */;
  %123 = @func_136(%122) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %124 = cosh(%120) /* ty=Tensor[(4, 10, 5), float32] */;
  %125 = %123.0;
  (%124, %125, meta[relay.Constant][6] /* ty=uint16 */)
}

def @func_16041() -> (Tensor[(7, 14, 14), float64],) {
  %128 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %126 = @func_13889() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %127 = %126.1;
    (%127,)
  };
  %128() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_3409() -> (Tensor[(7, 14, 14), float32],) {
  %129 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %130 = %129.0;
  (%130,)
}

def @func_10954() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %134 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
    %131 = @func_2692() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %132 = @func_7969() /* ty=Tensor[(7, 14, 14), float64] */;
    %133 = %131.0;
    (%132, %133)
  };
  %134() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */
}

def @func_1631(%var_1607: uint16, %var_1617: Tensor[(1, 16, 11), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(1, 16, 11), bool]) {
  %135 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %136 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %137 = cast(%var_1607, dtype="uint16") /* ty=uint16 */;
  %138 = reshape(%137, newshape=[]) /* ty=uint16 */;
  %139 = @func_1039(%138) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %140 = cast(%var_1607, dtype="bool") /* ty=bool */;
  %141 = cast(%var_1617, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %142 = %135.1;
  %143 = %136.0;
  %144 = %139.0;
  %145 = less_equal(%140, %141) /* ty=Tensor[(1, 16, 11), bool] */;
  (%142, %143, %144, %145)
}

def @func_9340(%var_9339: float64) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], float64, Tensor[(528), float64]) {
  %153 = fn (%var_9334: float64) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], float64, Tensor[(528), float64]) {
    %146 = cast(%var_9334, dtype="float64") /* ty=float64 */;
    %147 = cast(meta[relay.Constant][7] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %148 = reshape(%146, newshape=[]) /* ty=float64 */;
    %149 = reshape(%147, newshape=[8, 11, 6]) /* ty=Tensor[(8, 11, 6), float64] */;
    %150 = @func_4970(%148, %149) /* ty=(Tensor[(8, 11, 6), bool], Tensor[(8, 11, 6), int64], Tensor[(8, 11, 6), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %151 = @func_2090() /* ty=Tensor[(7, 14, 14), float32] */;
    %152 = %150.4;
    (%151, %152, %var_9334, meta[relay.Constant][7] /* ty=Tensor[(528), float64] */)
  };
  %153(%var_9339) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], float64, Tensor[(528), float64]) */
}

def @func_290() -> Tensor[(7, 14, 14), float32] {
  %154 = fn () -> Tensor[(7, 14, 14), float32] {
    @func_218() /* ty=Tensor[(7, 14, 14), float32] */
  };
  %154() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_6280() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %155 = @func_5808() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %156 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %157 = %155.0;
  (%156, %157)
}

def @func_3529(%var_3527: Tensor[(13, 9, 10), float64]) -> (Tensor[(13, 9, 10), int8],) {
  @func_3526(%var_3527) /* ty=(Tensor[(13, 9, 10), int8],) */
}

def @func_5116() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) {
  %175 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) {
    %158 = @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %159 = @func_2628() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %160 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 108), bool] */, dtype="bool") /* ty=Tensor[(2, 108), bool] */;
    %161 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 108), bool] */, dtype="bool") /* ty=Tensor[(2, 108), bool] */;
    %162 = reshape(%160, newshape=[12, 9, 2]) /* ty=Tensor[(12, 9, 2), bool] */;
    %163 = reshape(%161, newshape=[12, 9, 2]) /* ty=Tensor[(12, 9, 2), bool] */;
    %164 = @func_5012(%162, %163) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(12, 9, 2), uint32]) */;
    %165 = %164.1;
    %166 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 108), bool] */, dtype="bool") /* ty=Tensor[(2, 108), bool] */;
    %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %168 = cast(%165, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
    %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %170 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %171 = %158.0;
    %172 = %159.2;
    %173 = logical_or(%168, %169) /* ty=Tensor[(12, 9, 2), bool] */;
    %174 = %170.0;
    (%171, %172, %173, %174)
  };
  %175() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */
}

def @func_7266() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %176 = @func_6664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %177 = @func_6158() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %178 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %179 = @func_6280() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %180 = %176.0;
  %181 = %177.0;
  %182 = %178.0;
  %183 = %179.1;
  (%180, %181, %182, %183)
}

def @func_9805() -> (Tensor[(7, 14, 14), float64],) {
  %184 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%184,)
}

def @func_5809() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %188 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
    %185 = @func_3409() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %186 = %185.0;
    %187 = @func_4160() /* ty=Tensor[(7, 14, 14), float32] */;
    (%186, %187)
  };
  %188() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_6531() -> (Tensor[(16, 12, 5), float32], Tensor[(6, 10, 15), bool]) {
  %197 = fn () -> (Tensor[(16, 12, 5), float32], Tensor[(6, 10, 15), bool]) {
    %189 = cast(meta[relay.Constant][9] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %190 = reshape(%189, newshape=[]) /* ty=uint16 */;
    %191 = @func_1039(%190) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
    %192 = %191.2;
    %193 = cast(%192, dtype="bool") /* ty=Tensor[(6, 10, 15), bool] */;
    %194 = cast(meta[relay.Constant][9] /* ty=uint16 */, dtype="bool") /* ty=bool */;
    %195 = @func_6233() /* ty=Tensor[(16, 12, 5), float32] */;
    %196 = less_equal(%193, %194) /* ty=Tensor[(6, 10, 15), bool] */;
    (%195, %196)
  };
  %197() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(6, 10, 15), bool]) */
}

def @func_3182() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32]) {
  @func_3180() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32]) */
}

def @func_11064() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %202 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
    %198 = @func_4416() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
    %199 = @func_10475() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %200 = %198.1;
    %201 = %199.0;
    (%200, %201)
  };
  %202() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */
}

def @func_11400() -> Tensor[(7, 14, 14), float32] {
  @func_11398() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_16130() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_16128() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_2240() -> (Tensor[(7, 14, 14), float32],) {
  %203 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %204 = %203.0;
  (%204,)
}

def @func_6216() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_6214() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_13286() -> (Tensor[(7, 14, 14), float32],) {
  %207 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %205 = @func_9134() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %206 = %205.0;
    (%206,)
  };
  %207() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_2408(%var_2406: uint16, %var_2407: Tensor[(176), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
  %216 = fn (%var_2377: uint16, %var_2378: Tensor[(176), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
    %208 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %209 = cast(%var_2377, dtype="uint16") /* ty=uint16 */;
    %210 = cast(%var_2378, dtype="uint16") /* ty=Tensor[(176), uint16] */;
    %211 = reshape(%209, newshape=[]) /* ty=uint16 */;
    %212 = reshape(%210, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), uint16] */;
    %213 = @func_1631(%211, %212) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(1, 16, 11), bool]) */;
    %214 = %208.0;
    %215 = %213.1;
    (%214, %215, %var_2377, %var_2378)
  };
  %216(%var_2406, %var_2407) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */
}

def @func_5570() -> (Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */
}

def @func_13358() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_13356() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_14731() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_14729() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_14617() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %217 = @func_9295() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %218 = %217.0;
  %219 = @func_7202() /* ty=Tensor[(7, 14, 14), float32] */;
  (%218, %219)
}

def @func_10412() -> (Tensor[(7, 14, 14), float32],) {
  @func_10410() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_9134() -> (Tensor[(7, 14, 14), float32],) {
  %220 = @func_3993() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %221 = %220.1;
  (%221,)
}

def @func_7159() -> Tensor[(12, 9, 2), bool] {
  %223 = fn () -> Tensor[(12, 9, 2), bool] {
    %222 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
    %222.1
  };
  %223() /* ty=Tensor[(12, 9, 2), bool] */
}

def @func_6056() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %227 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %224 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %225 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
    %226 = %224.1;
    (%225, %226)
  };
  %227() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_11792() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %232 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
    %228 = @func_1461() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %229 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %230 = %228.0;
    %231 = %229.0;
    (%230, %231)
  };
  %232() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_7416(%var_7400: Tensor[(13, 10, 10), uint32], %var_7401: Tensor[(13, 10, 10), uint32]) -> Tensor[(13, 10, 10), uint32] {
  %233 = cast(%var_7401, dtype="uint32") /* ty=Tensor[(13, 10, 10), uint32] */;
  %234 = shape_of(%var_7400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_7400, dtype="uint32") /* ty=Tensor[(13, 10, 10), uint32] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%235, %236) /* ty=Tensor[(13, 10, 10), uint32] */
}

def @func_14935() -> Tensor[(7, 14, 14), float32] {
  @func_14933() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_13641(%var_13627: Tensor[(672), int64]) -> (Tensor[(7, 14, 14), float64], Tensor[(14, 6, 8), int64], Tensor[(672), int64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %237 = @func_10953() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %238 = cast(%var_13627, dtype="int64") /* ty=Tensor[(672), int64] */;
  %239 = reshape(%238, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), int64] */;
  %240 = @func_11680(%239) /* ty=(Tensor[(14, 6, 8), int64],) */;
  %241 = @func_11334() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %242 = %237.0;
  %243 = %240.0;
  %244 = @func_9755() /* ty=Tensor[(7, 14, 14), float32] */;
  %245 = %241.0;
  (%242, %243, %var_13627, %244, %245)
}

def @func_14695() -> (Tensor[(12, 9, 2), bool],) {
  %248 = fn () -> (Tensor[(12, 9, 2), bool],) {
    %246 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
    %247 = %246.1;
    (%247,)
  };
  %248() /* ty=(Tensor[(12, 9, 2), bool],) */
}

def @func_15161(%var_15160: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
  %258 = fn (%var_15145: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
    %249 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
    %250 = cast(%var_15145, dtype="uint16") /* ty=uint16 */;
    %251 = cast(meta[relay.Constant][10] /* ty=Tensor[(176), uint16] */, dtype="uint16") /* ty=Tensor[(176), uint16] */;
    %252 = reshape(%250, newshape=[]) /* ty=uint16 */;
    %253 = reshape(%251, newshape=[176]) /* ty=Tensor[(176), uint16] */;
    %254 = @func_2405(%252, %253) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */;
    %255 = %249.0;
    %256 = @func_1411() /* ty=Tensor[(7, 14, 14), int16] */;
    %257 = %254.1;
    (%255, %256, %257, %var_15145, meta[relay.Constant][10] /* ty=Tensor[(176), uint16] */)
  };
  %258(%var_15160) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */
}

def @func_4418() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) {
  @func_4416() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */
}

def @func_358() -> (Tensor[(7, 14, 14), float32],) {
  %259 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  (%259,)
}

def @func_7949() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %260 = @func_7266() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %261 = @func_5636() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %262 = @func_1095() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %263 = @func_5636() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %264 = %260.2;
  %265 = %261.0;
  %266 = %262.3;
  %267 = %263.0;
  (%264, %265, %266, %267)
}

def @func_2628() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %268 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %269 = @func_2182() /* ty=Tensor[(7, 14, 14), float32] */;
  %270 = %268.5;
  %271 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  (%269, %270, %271)
}

def @func_4974(%var_4972: float64, %var_4973: Tensor[(8, 11, 6), float64]) -> (Tensor[(8, 11, 6), bool], Tensor[(8, 11, 6), int64], Tensor[(8, 11, 6), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_4970(%var_4972, %var_4973) /* ty=(Tensor[(8, 11, 6), bool], Tensor[(8, 11, 6), int64], Tensor[(8, 11, 6), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_9567(%var_9566: Tensor[(3, 10, 13), uint16]) -> (Tensor[(7, 14, 14), float64], Tensor[(3, 10, 13), bool]) {
  %277 = fn (%var_9550: Tensor[(3, 10, 13), uint16]) -> (Tensor[(7, 14, 14), float64], Tensor[(3, 10, 13), bool]) {
    %272 = @func_8949() /* ty=uint16 */;
    %273 = cast(%272, dtype="bool") /* ty=bool */;
    %274 = cast(%var_9550, dtype="bool") /* ty=Tensor[(3, 10, 13), bool] */;
    %275 = @func_5195() /* ty=Tensor[(7, 14, 14), float64] */;
    %276 = greater_equal(%273, %274) /* ty=Tensor[(3, 10, 13), bool] */;
    (%275, %276)
  };
  %277(%var_9566) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(3, 10, 13), bool]) */
}

def @func_15052() -> (Tensor[(7, 14, 14), float64],) {
  %280 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %278 = @func_1537() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %279 = %278.0;
    (%279,)
  };
  %280() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_9179() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float64]) {
  %289 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float64]) {
    %281 = @func_8880() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %282 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %283 = reshape(%282, newshape=[]) /* ty=uint16 */;
    %284 = @func_1039(%283) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
    %285 = @func_6055() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %286 = %281.0;
    %287 = %284.4;
    %288 = %285.1;
    (%286, %287, meta[relay.Constant][11] /* ty=uint16 */, %288)
  };
  %289() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float64]) */
}

def @func_14920() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(16, 12, 5), float32]) {
  %296 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(16, 12, 5), float32]) {
    %290 = @func_14485() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %291 = @func_9422() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %292 = @func_11044() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(16, 12, 5), float32], Tensor[(7, 14, 14), uint32]) */;
    %293 = %290.0;
    %294 = %291.3;
    %295 = %292.1;
    (%293, %294, %295)
  };
  %296() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(16, 12, 5), float32]) */
}

def @func_4855() -> Tensor[(7, 14, 14), float64] {
  @func_47() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_6498(%var_6496: Tensor[(7, 14, 14), float64]) -> (Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), float64]) {
  @func_6495(%var_6496) /* ty=(Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), float64]) */
}

def @func_16357() -> Tensor[(7, 14, 14), float64] {
  @func_16355() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_1318() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) {
  @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */
}

def @func_1567(%var_1565: Tensor[(15, 12, 2), uint32]) -> (Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) {
  @func_1564(%var_1565) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */
}

def @func_13717() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
  @func_13715() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */
}

def @func_5375() -> (Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), uint32]) {
  %302 = fn () -> (Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), uint32]) {
    %297 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
    %298 = %297.3;
    %299 = cast(%298, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
    %300 = reshape(%299, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
    %301 = @func_3359(%300) /* ty=Tensor[(7, 14, 14), uint32] */;
    (%298, %301)
  };
  %302() /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), uint32]) */
}

def @func_6665() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %305 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %303 = @func_5596() /* ty=Tensor[(7, 14, 14), float32] */;
    %304 = @func_4855() /* ty=Tensor[(7, 14, 14), float64] */;
    (%303, %304)
  };
  %305() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_6235() -> Tensor[(16, 12, 5), float32] {
  @func_6233() /* ty=Tensor[(16, 12, 5), float32] */
}

def @func_13988() -> (Tensor[(7, 14, 14), float32],) {
  %308 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %306 = @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %307 = %306.0;
    (%307,)
  };
  %308() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_11537(%var_11492: Tensor[(360), uint32]) -> (Tensor[(7, 14, 14), float64], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], Tensor[(7, 14, 14), float32], Tensor[(5, 10, 14), float32], Tensor[(1, 700), float64]) {
  %309 = @func_10953() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %310 = cast(%var_11492, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %311 = reshape(%310, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
  %312 = @func_1564(%311) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
  %313 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 700), float64] */, dtype="float64") /* ty=Tensor[(1, 700), float64] */;
  %314 = reshape(%313, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
  %315 = @func_10377(%314) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(5, 10, 14), float32]) */;
  %316 = %309.1;
  %317 = %312.0;
  %318 = @func_2090() /* ty=Tensor[(7, 14, 14), float32] */;
  %319 = %315.1;
  (%316, %317, %var_11492, %318, %319, meta[relay.Constant][12] /* ty=Tensor[(1, 700), float64] */)
}

def @func_2835() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %323 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
    %320 = @func_1832() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %321 = %320.0;
    %322 = @func_2182() /* ty=Tensor[(7, 14, 14), float32] */;
    (%321, %322)
  };
  %323() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_6495(%var_6484: Tensor[(7, 14, 14), float64]) -> (Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), float64]) {
  %324 = @func_6414() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float32]) */;
  %325 = %324.0;
  %326 = cast(%var_6484, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %330 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %331 = logical_or(%328, %329) /* ty=Tensor[(7, 14, 14), bool] */;
  %332 = %330.1;
  (%331, %332)
}

def @func_14991() -> (uint16, Tensor[(7, 14, 14), float32]) {
  %336 = fn () -> (uint16, Tensor[(7, 14, 14), float32]) {
    %333 = @func_12380() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */;
    %334 = %333.1;
    %335 = @func_12988() /* ty=Tensor[(7, 14, 14), float32] */;
    (%334, %335)
  };
  %336() /* ty=(uint16, Tensor[(7, 14, 14), float32]) */
}

def @func_1758(%var_1757: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
  %354 = fn (%var_1731: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
    %337 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
    %338 = cast(%337, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
    %339 = reshape(%338, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
    %340 = @func_374(%339) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
    %341 = @func_1537() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %342 = %341.0;
    %343 = cast(%342, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
    %344 = reshape(%343, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float32] */;
    %345 = @func_996(%344) /* ty=(Tensor[(7, 14, 14), uint64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %346 = cast(%var_1731, dtype="uint16") /* ty=uint16 */;
    %347 = reshape(%346, newshape=[]) /* ty=uint16 */;
    %348 = @func_479(%347) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
    %349 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %350 = %340.1;
    %351 = %345.4;
    %352 = %348.1;
    %353 = %349.0;
    (%337, %350, %342, %351, %352, %var_1731, %353)
  };
  %354(%var_1757) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */
}

def @func_6960(%var_6959: Tensor[(12, 9, 2), bool]) -> (Tensor[(12, 9, 2), uint8], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), int64]) {
  %371 = fn (%var_6927: Tensor[(12, 9, 2), bool]) -> (Tensor[(12, 9, 2), uint8], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), int64]) {
    %355 = @func_5115() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */;
    %356 = %355.2;
    %357 = cast(%var_6927, dtype="uint8") /* ty=Tensor[(12, 9, 2), uint8] */;
    %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
    %359 = cast(%356, dtype="uint8") /* ty=Tensor[(12, 9, 2), uint8] */;
    %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %361 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
    %362 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %363 = cast(%var_6927, dtype="int64") /* ty=Tensor[(12, 9, 2), int64] */;
    %364 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
    %365 = cast(%356, dtype="int64") /* ty=Tensor[(12, 9, 2), int64] */;
    %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %367 = bitwise_xor(%359, %360) /* ty=Tensor[(12, 9, 2), uint8] */;
    %368 = %361.1;
    %369 = %362.1;
    %370 = bitwise_and(%365, %366) /* ty=Tensor[(12, 9, 2), int64] */;
    (%367, %368, %369, %370)
  };
  %371(%var_6959) /* ty=(Tensor[(12, 9, 2), uint8], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), int64]) */
}

def @func_12675() -> (Tensor[(7, 14, 14), float32],) {
  %372 = @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %373 = %372.0;
  (%373,)
}

def @func_1316() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) {
  %374 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %375 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %376 = reshape(%375, newshape=[]) /* ty=uint16 */;
  %377 = @func_1039(%376) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %378 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %379 = %374.0;
  %380 = %377.0;
  %381 = %378.1;
  (%379, %380, meta[relay.Constant][13] /* ty=uint16 */, %381)
}

def @func_3937() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_3935() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_10851() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float32]) {
  %392 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float32]) {
    %382 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %383 = @func_5374() /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), uint32]) */;
    %384 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
    %385 = @func_5672() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
    %386 = %382.0;
    %387 = %383.0;
    %388 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
    %389 = @func_1885() /* ty=Tensor[(7, 14, 14), float64] */;
    %390 = %384.4;
    %391 = %385.1;
    (%386, %387, %388, %389, %390, %391)
  };
  %392() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float32]) */
}

def @func_15836() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], uint16) {
  %402 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], uint16) {
    %393 = @func_12197() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
    %394 = @func_11611() /* ty=(Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */;
    %395 = cast(meta[relay.Constant][14] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %396 = reshape(%395, newshape=[]) /* ty=uint16 */;
    %397 = @func_1039(%396) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
    %398 = %393.1;
    %399 = @func_13523() /* ty=Tensor[(7, 14, 14), uint32] */;
    %400 = %394.0;
    %401 = %397.4;
    (%398, %399, %400, %401, meta[relay.Constant][14] /* ty=uint16 */)
  };
  %402() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], uint16) */
}

def @func_1469() -> Tensor[(7, 14, 14), float32] {
  %403 = @func_1461() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %403.1
}

def @func_6282() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_6280() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_13790() -> (Tensor[(7, 14, 14), float32], uint16) {
  %407 = fn () -> (Tensor[(7, 14, 14), float32], uint16) {
    %404 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %405 = %404.0;
    %406 = @func_8949() /* ty=uint16 */;
    (%405, %406)
  };
  %407() /* ty=(Tensor[(7, 14, 14), float32], uint16) */
}

def @func_10859() -> Tensor[(7, 14, 14), float32] {
  %408 = @func_6055() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %408.0
}

def @func_13715() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
  %409 = @func_5862() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %410 = @func_9702() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %411 = @func_13168() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */;
  %412 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %413 = %409.0;
  %414 = %410.0;
  %415 = %411.1;
  %416 = %412.1;
  (%413, %414, %415, %416)
}

def @func_15420() -> Tensor[(7, 14, 14), float32] {
  @func_15418() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_12945() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %420 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
    %417 = @func_9993() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %418 = @func_4160() /* ty=Tensor[(7, 14, 14), float32] */;
    %419 = %417.0;
    (%418, %419)
  };
  %420() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_13921(%var_13919: Tensor[(12, 2, 11), uint16], %var_13920: Tensor[(12, 2, 11), uint16]) -> (Tensor[(12, 2, 11), uint16],) {
  @func_13917(%var_13919, %var_13920) /* ty=(Tensor[(12, 2, 11), uint16],) */
}

def @func_9684() -> (Tensor[(7, 14, 14), float32], Tensor[(11, 7, 9), float32], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) {
  %433 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(11, 7, 9), float32], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) {
    %421 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %422 = cast(meta[relay.Constant][15] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
    %423 = cast(meta[relay.Constant][15] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
    %424 = cast(meta[relay.Constant][15] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
    %425 = reshape(%422, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
    %426 = reshape(%423, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
    %427 = reshape(%424, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
    %428 = @func_8657(%425, %426, %427) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), float32], Tensor[(11, 7, 9), bool]) */;
    %429 = @func_6280() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %430 = %421.0;
    %431 = %428.1;
    %432 = %429.1;
    (%430, %431, meta[relay.Constant][15] /* ty=Tensor[(693), int32] */, %432)
  };
  %433() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(11, 7, 9), float32], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) */
}

def @func_9297() -> (Tensor[(7, 14, 14), float64],) {
  @func_9295() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_1833() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %437 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %434 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %435 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
    %436 = %434.0;
    (%435, %436)
  };
  %437() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_1185() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_374(%var_366: Tensor[(7, 14, 14), float64]) -> (Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) {
  %438 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %439 = cast(%var_366, dtype="int16") /* ty=Tensor[(7, 14, 14), int16] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="int16") /* ty=Tensor[(7, 14, 14), int16] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %443 = cast(%var_366, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %444 = bitwise_and(%441, %442) /* ty=Tensor[(7, 14, 14), int16] */;
  %445 = log2(%443) /* ty=Tensor[(7, 14, 14), float64] */;
  (%444, %445)
}

def @func_3309() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float64]) {
  @func_3307() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float64]) */
}

def @func_4565(%var_4551: Tensor[(1170), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), float64], Tensor[(7, 14, 14), float32]) {
  %446 = @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %447 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %448 = cast(%var_4551, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %449 = reshape(%448, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float64] */;
  %450 = @func_3526(%449) /* ty=(Tensor[(13, 9, 10), int8],) */;
  %451 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %452 = %446.0;
  %453 = %447.0;
  %454 = %450.0;
  %455 = %451.1;
  (%452, %453, %454, %var_4551, %455)
}

def @func_11700() -> (Tensor[(7, 14, 14), float64],) {
  %457 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %456 = @func_8372() /* ty=Tensor[(7, 14, 14), float64] */;
    (%456,)
  };
  %457() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_15075() -> Tensor[(7, 14, 14), float64] {
  @func_15073() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_13081(%var_13068: Tensor[(360), uint32]) -> (Tensor[(6, 10, 15), bool], Tensor[(15, 12, 2), bool], Tensor[(360), uint32]) {
  %458 = @func_6530() /* ty=(Tensor[(16, 12, 5), float32], Tensor[(6, 10, 15), bool]) */;
  %459 = cast(%var_13068, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %460 = reshape(%459, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
  %461 = @func_1564(%460) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
  %462 = %458.1;
  %463 = %461.0;
  (%462, %463, %var_13068)
}

def @func_822() -> Tensor[(7, 14, 14), float32] {
  @func_820() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_13339(%var_13338: Tensor[(15, 6, 4), float64]) -> (Tensor[(7, 14, 14), int16], Tensor[(15, 6, 4), uint32]) {
  %476 = fn (%var_13320: Tensor[(15, 6, 4), float64]) -> (Tensor[(7, 14, 14), int16], Tensor[(15, 6, 4), uint32]) {
    %464 = @func_3180() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32]) */;
    %465 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
    %466 = shape_of(%var_13320, dtype="int32") /* ty=Tensor[(3), int32] */;
    %467 = cast(%var_13320, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
    %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %469 = floor_mod(%467, %468) /* ty=Tensor[(15, 6, 4), float64] */;
    %470 = cast(%469, dtype="uint32") /* ty=Tensor[(15, 6, 4), uint32] */;
    %471 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(15, 6, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %472 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 6, 4), float64] */, dtype="uint32") /* ty=Tensor[(15, 6, 4), uint32] */;
    %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %474 = %464.1;
    %475 = multiply(%472, %473) /* ty=Tensor[(15, 6, 4), uint32] */;
    (%474, %475)
  };
  %476(%var_13338) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(15, 6, 4), uint32]) */
}

def @func_9856() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  %477 = @func_9453() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %478 = @func_5374() /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), uint32]) */;
  %479 = @func_9139() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %480 = %477.0;
  %481 = %478.1;
  %482 = %479.0;
  (%480, %481, %482)
}

def @func_2182() -> Tensor[(7, 14, 14), float32] {
  %483 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %483.0
}

def @func_3697() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %484 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %485 = %484.0;
  %486 = @func_3647() /* ty=Tensor[(7, 14, 14), float64] */;
  %487 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%485, %486, %487)
}

def @func_6817(%var_6801: uint16) -> (Tensor[(7, 14, 14), float32], uint16, uint16, Tensor[(7, 14, 14), float32]) {
  %488 = @func_6083() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %489 = cast(%var_6801, dtype="uint16") /* ty=uint16 */;
  %490 = reshape(%489, newshape=[]) /* ty=uint16 */;
  %491 = @func_479(%490) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %492 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %493 = %488.0;
  %494 = %491.2;
  %495 = %492.0;
  (%493, %494, %var_6801, %495)
}

def @func_16128() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %496 = @func_13356() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %497 = @func_11699() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %498 = @func_5672() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
  %499 = @func_8692() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %500 = %496.0;
  %501 = %497.0;
  %502 = %498.1;
  %503 = %499.1;
  %504 = @func_12988() /* ty=Tensor[(7, 14, 14), float32] */;
  (%500, %501, %502, %503, %504)
}

def @func_15580(%var_15578: Tensor[(5, 20), uint64], %var_15579: Tensor[(1400), bool]) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(10, 10, 1), bool], uint64, Tensor[(10, 10, 14), int32], Tensor[(1400), bool], Tensor[(5, 20), float64]) {
  @func_15576(%var_15578, %var_15579) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(10, 10, 1), bool], uint64, Tensor[(10, 10, 14), int32], Tensor[(1400), bool], Tensor[(5, 20), float64]) */
}

def @func_4857() -> Tensor[(7, 14, 14), float64] {
  @func_4855() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_8880() -> (Tensor[(7, 14, 14), float32],) {
  %505 = @func_8692() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %506 = %505.0;
  (%506,)
}

def @func_4505() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_4503() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_12720() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %507 = @func_5808() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %508 = @func_9422() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %509 = %507.1;
  %510 = %508.0;
  (%509, %510)
}

def @func_8271(%var_8270: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16) {
  %517 = fn (%var_8260: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16) {
    %511 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %512 = cast(%var_8260, dtype="uint16") /* ty=uint16 */;
    %513 = reshape(%512, newshape=[]) /* ty=uint16 */;
    %514 = @func_136(%513) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
    %515 = %511.1;
    %516 = %514.0;
    (%515, %516, %var_8260)
  };
  %517(%var_8270) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16) */
}

def @func_2988() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %518 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %519 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %520 = %518.0;
  %521 = %519.0;
  (%520, %521)
}

def @func_1413() -> Tensor[(7, 14, 14), int16] {
  @func_1411() /* ty=Tensor[(7, 14, 14), int16] */
}

def @func_12329() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 132), int16], Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  %522 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 132), bool] */, dtype="bool") /* ty=Tensor[(7, 132), bool] */;
  %523 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 132), bool] */, dtype="bool") /* ty=Tensor[(7, 132), bool] */;
  %524 = reshape(%522, newshape=[11, 14, 6]) /* ty=Tensor[(11, 14, 6), bool] */;
  %525 = reshape(%523, newshape=[11, 14, 6]) /* ty=Tensor[(11, 14, 6), bool] */;
  %526 = @func_11240(%524, %525) /* ty=(Tensor[(11, 14, 6), bool],) */;
  %527 = %526.0;
  %528 = cast(%527, dtype="int16") /* ty=Tensor[(11, 14, 6), int16] */;
  %529 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(7, 132), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %530 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 132), bool] */, dtype="int16") /* ty=Tensor[(7, 132), int16] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %532 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %533 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %534 = @func_2515() /* ty=Tensor[(7, 14, 14), float32] */;
  %535 = minimum(%530, %531) /* ty=Tensor[(7, 132), int16] */;
  %536 = %532.0;
  %537 = %533.1;
  (%534, %535, %536, %537)
}

def @func_14761() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  %538 = @func_7876() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %539 = %538.2;
  %540 = @func_11398() /* ty=Tensor[(7, 14, 14), float32] */;
  (%539, %540)
}

def @func_996(%var_924: Tensor[(7, 14, 14), float32]) -> (Tensor[(7, 14, 14), uint64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %541 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %542 = %541.0;
  %543 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %544 = %543.1;
  %545 = cast(%544, dtype="uint64") /* ty=Tensor[(7, 14, 14), uint64] */;
  %546 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%542, dtype="uint64") /* ty=Tensor[(7, 14, 14), uint64] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %549 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %550 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %551 = %550.0;
  %552 = cast(%551, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %553 = acosh(%552) /* ty=Tensor[(7, 14, 14), float32] */;
  %554 = cast(%542, dtype="int16") /* ty=Tensor[(7, 14, 14), int16] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%553, dtype="int16") /* ty=Tensor[(7, 14, 14), int16] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %558 = cast(%553, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %559 = atanh(%558) /* ty=Tensor[(7, 14, 14), float32] */;
  %560 = cast(%var_924, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%559, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %564 = power(%562, %563) /* ty=Tensor[(7, 14, 14), float64] */;
  %565 = cast(%564, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %566 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%553, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %569 = cast(%544, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %570 = reshape(%569, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %571 = @func_374(%570) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %572 = cast(%542, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %573 = reshape(%572, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %574 = @func_374(%573) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %575 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %576 = minimum(%547, %548) /* ty=Tensor[(7, 14, 14), uint64] */;
  %577 = %549.0;
  %578 = add(%556, %557) /* ty=Tensor[(7, 14, 14), int16] */;
  %579 = divide(%567, %568) /* ty=Tensor[(7, 14, 14), float64] */;
  %580 = %571.1;
  %581 = %574.0;
  %582 = %575.0;
  %583 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  (%576, %577, %578, %579, %580, %581, %582, %583)
}

def @func_3648() -> Tensor[(7, 14, 14), float64] {
  %585 = fn () -> Tensor[(7, 14, 14), float64] {
    %584 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %584.1
  };
  %585() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_10016(%var_10000: Tensor[(8, 8, 4), uint8], %var_10001: Tensor[(8, 8, 4), uint8]) -> (Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float32]) {
  %586 = cast(%var_10001, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
  %587 = shape_of(%var_10000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%var_10000, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %590 = cast(%var_10001, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
  %591 = bitwise_xor(%588, %589) /* ty=Tensor[(8, 8, 4), uint8] */;
  %592 = cos(%590) /* ty=Tensor[(8, 8, 4), float32] */;
  (%591, %592)
}

def @func_5672() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  %593 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %594 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %595 = %593.1;
  %596 = %594.1;
  (%595, %596)
}

def @func_377(%var_375: Tensor[(7, 14, 14), float64]) -> (Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) {
  @func_374(%var_375) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */
}

def @func_12915() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %601 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %597 = @func_5322() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %598 = @func_6214() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %599 = %597.0;
    %600 = %598.0;
    (%599, %600)
  };
  %601() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_4503() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %602 = @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %603 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %604 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %605 = %602.1;
  %606 = %603.0;
  %607 = %604.0;
  (%605, %606, %607)
}

def @func_7204() -> Tensor[(7, 14, 14), float32] {
  @func_7202() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_14486() -> (Tensor[(7, 14, 14), float64],) {
  %609 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %608 = @func_3647() /* ty=Tensor[(7, 14, 14), float64] */;
    (%608,)
  };
  %609() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_2026() -> (Tensor[(7, 14, 14), float64],) {
  %610 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %611 = %610.0;
  (%611,)
}

def @func_11540(%var_11538: Tensor[(360), uint32]) -> (Tensor[(7, 14, 14), float64], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], Tensor[(7, 14, 14), float32], Tensor[(5, 10, 14), float32], Tensor[(1, 700), float64]) {
  @func_11537(%var_11538) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], Tensor[(7, 14, 14), float32], Tensor[(5, 10, 14), float32], Tensor[(1, 700), float64]) */
}

def @func_14096() -> (uint16,) {
  %614 = fn () -> (uint16,) {
    %612 = @func_13975() /* ty=(uint16, Tensor[(15, 12, 2), float64], Tensor[(360), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
    %613 = %612.0;
    (%613,)
  };
  %614() /* ty=(uint16,) */
}

def @func_12160(%var_12159: Tensor[(36, 10), uint32]) -> (Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(36, 10), uint32]) {
  %621 = fn (%var_12151: Tensor[(36, 10), uint32]) -> (Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(36, 10), uint32]) {
    %615 = @func_5862() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %616 = cast(%var_12151, dtype="uint32") /* ty=Tensor[(36, 10), uint32] */;
    %617 = reshape(%616, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
    %618 = @func_1564(%617) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
    %619 = %615.0;
    %620 = %618.0;
    (%619, %620, %var_12151)
  };
  %621(%var_12159) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(36, 10), uint32]) */
}

def @func_14863() -> (Tensor[(7, 14, 14), float32],) {
  %624 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %622 = @func_6055() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %623 = %622.0;
    (%623,)
  };
  %624() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_11680(%var_11676: Tensor[(14, 6, 8), int64]) -> (Tensor[(14, 6, 8), int64],) {
  %625 = cast(%var_11676, dtype="int64") /* ty=Tensor[(14, 6, 8), int64] */;
  %626 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(14, 6, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 6, 8), int64] */, dtype="int64") /* ty=Tensor[(14, 6, 8), int64] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %629 = bitwise_xor(%627, %628) /* ty=Tensor[(14, 6, 8), int64] */;
  (%629,)
}

def @func_5863() -> (Tensor[(7, 14, 14), float32],) {
  %632 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %630 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %631 = %630.1;
    (%631,)
  };
  %632() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_9237() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %633 = @func_9178() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float64]) */;
  %634 = %633.0;
  %635 = @func_7308() /* ty=Tensor[(7, 14, 14), float32] */;
  (%634, %635)
}

def @func_13494() -> Tensor[(7, 14, 14), float64] {
  %637 = fn () -> Tensor[(7, 14, 14), float64] {
    %636 = @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
    %636.1
  };
  %637() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_15194() -> Tensor[(7, 14, 14), float64] {
  %638 = @func_10953() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %638.0
}

def @func_219() -> Tensor[(7, 14, 14), float32] {
  %641 = fn () -> Tensor[(7, 14, 14), float32] {
    %639 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
    %640 = cast(%639, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
    erf(%640) /* ty=Tensor[(7, 14, 14), float32] */
  };
  %641() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_12858() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], uint16) {
  @func_12856() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], uint16) */
}

def @func_11612() -> (Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) {
  %645 = fn () -> (Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) {
    %642 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
    %643 = %642.1;
    %644 = @func_7202() /* ty=Tensor[(7, 14, 14), float32] */;
    (%643, %644)
  };
  %645() /* ty=(Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */
}

def @func_3661() -> Tensor[(7, 14, 14), int16] {
  %646 = fn () -> Tensor[(7, 14, 14), int16] {
    @func_1411() /* ty=Tensor[(7, 14, 14), int16] */
  };
  %646() /* ty=Tensor[(7, 14, 14), int16] */
}

def @func_5322() -> (Tensor[(7, 14, 14), float32],) {
  %647 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %648 = %647.0;
  (%648,)
}

def @func_11160(%var_11126: Tensor[(4, 1, 4), float32], %var_11142: Tensor[(1372), float64]) -> (Tensor[(4, 1, 4), float32], Tensor[(7, 14, 14), int16], Tensor[(1372), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %649 = cast(%var_11126, dtype="float32") /* ty=Tensor[(4, 1, 4), float32] */;
  %650 = cast(%var_11142, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %651 = reshape(%650, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %652 = @func_374(%651) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %653 = @func_10475() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %654 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %655 = sinh(%649) /* ty=Tensor[(4, 1, 4), float32] */;
  %656 = %652.0;
  %657 = %653.0;
  %658 = %654.0;
  (%655, %656, %var_11142, %657, %658)
}

def @func_1921() -> (Tensor[(7, 14, 14), float32],) {
  %660 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %659 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
    (%659,)
  };
  %660() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_3359(%var_3344: Tensor[(7, 14, 14), float64]) -> Tensor[(7, 14, 14), uint32] {
  %661 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %662 = %661.0;
  %663 = cast(%var_3344, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %664 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%662, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%665, %666) /* ty=Tensor[(7, 14, 14), uint32] */
}

def @func_8882() -> (Tensor[(7, 14, 14), float32],) {
  @func_8880() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_12990() -> Tensor[(7, 14, 14), float32] {
  @func_12988() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_756() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %674 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
    %667 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
    %669 = cast(%667, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
    %670 = atan(%669) /* ty=Tensor[(7, 14, 14), float32] */;
    %671 = cast(%670, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
    %672 = sin(%668) /* ty=Tensor[(7, 14, 14), float64] */;
    %673 = exp(%671) /* ty=Tensor[(7, 14, 14), float32] */;
    (%672, %673)
  };
  %674() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_7202() -> Tensor[(7, 14, 14), float32] {
  @func_820() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_9903(%var_9901: Tensor[(3, 10, 10), uint16], %var_9902: Tensor[(3, 10, 10), uint16]) -> (Tensor[(3, 10, 10), uint16],) {
  %680 = fn (%var_9893: Tensor[(3, 10, 10), uint16], %var_9894: Tensor[(3, 10, 10), uint16]) -> (Tensor[(3, 10, 10), uint16],) {
    %675 = cast(%var_9894, dtype="uint16") /* ty=Tensor[(3, 10, 10), uint16] */;
    %676 = shape_of(%var_9893, dtype="int32") /* ty=Tensor[(3), int32] */;
    %677 = cast(%var_9893, dtype="uint16") /* ty=Tensor[(3, 10, 10), uint16] */;
    %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %679 = subtract(%677, %678) /* ty=Tensor[(3, 10, 10), uint16] */;
    (%679,)
  };
  %680(%var_9901, %var_9902) /* ty=(Tensor[(3, 10, 10), uint16],) */
}

def @func_9654() -> Tensor[(7, 14, 14), float32] {
  @func_9652() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_1126() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) {
  %686 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) {
    %681 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
    %682 = cast(%681, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
    %683 = reshape(%682, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
    %684 = @func_374(%683) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
    %685 = %684.0;
    (%681, %685)
  };
  %686() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */
}

def @func_13356() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %687 = @func_10726() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), bool], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) */;
  %688 = @func_10081() /* ty=Tensor[(7, 14, 14), float32] */;
  %689 = %687.0;
  (%688, %689)
}

def @func_9140() -> (Tensor[(7, 14, 14), float32],) {
  %692 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %690 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %691 = %690.0;
    (%691,)
  };
  %692() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_12856() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], uint16) {
  %693 = @func_5636() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %694 = @func_3889() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) */;
  %695 = @func_12380() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */;
  %696 = %693.0;
  %697 = %694.2;
  %698 = %695.2;
  (%696, %697, %698)
}

def @func_5780() -> (Tensor[(7, 14, 14), float64],) {
  @func_5778() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_1463() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_1461() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_9756() -> Tensor[(7, 14, 14), float32] {
  %700 = fn () -> Tensor[(7, 14, 14), float32] {
    %699 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %699.0
  };
  %700() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_10475() -> (Tensor[(7, 14, 14), float64],) {
  %701 = @func_9422() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %702 = %701.0;
  (%702,)
}

def @func_11349(%var_11348: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 12), float32],) {
  %705 = fn (%var_11344: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 12), float32],) {
    %703 = cast(%var_11344, dtype="float32") /* ty=Tensor[(4, 9, 12), float32] */;
    %704 = atanh(%703) /* ty=Tensor[(4, 9, 12), float32] */;
    (%704,)
  };
  %705(%var_11348) /* ty=(Tensor[(4, 9, 12), float32],) */
}

def @func_1814() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_10477() -> (Tensor[(7, 14, 14), float64],) {
  @func_10475() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_6084() -> (Tensor[(7, 14, 14), float32],) {
  %707 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %706 = @func_5596() /* ty=Tensor[(7, 14, 14), float32] */;
    (%706,)
  };
  %707() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_6374() -> Tensor[(7, 14, 14), float64] {
  %709 = fn () -> Tensor[(7, 14, 14), float64] {
    %708 = @func_3935() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %708.1
  };
  %709() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_3526(%var_3503: Tensor[(13, 9, 10), float64]) -> (Tensor[(13, 9, 10), int8],) {
  %710 = cast(%var_3503, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
  %711 = erf(%710) /* ty=Tensor[(13, 9, 10), float64] */;
  %712 = cast(%var_3503, dtype="int8") /* ty=Tensor[(13, 9, 10), int8] */;
  %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %714 = cast(%711, dtype="int8") /* ty=Tensor[(13, 9, 10), int8] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %716 = right_shift(%714, %715) /* ty=Tensor[(13, 9, 10), int8] */;
  (%716,)
}

def @func_10501() -> Tensor[(7, 14, 14), float32] {
  %717 = @func_6317() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %717.0
}

def @func_9423() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %726 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %718 = @func_4243() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %719 = @func_7227() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %720 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %721 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %722 = %718.0;
    %723 = %719.0;
    %724 = %720.0;
    %725 = %721.0;
    (%722, %723, %724, %725)
  };
  %726() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_11957(%var_11954: bool, %var_11955: Tensor[(1, 6, 11), bool], %var_11956: Tensor[(1, 6, 11), float32]) -> (Tensor[(?, 6, 11), bool], Tensor[(12, 30), uint32], Tensor[(7, 14, 14), int16], Tensor[(6, 10, 15), float32], Tensor[(15, 12, 2), float64], Tensor[(7, 14, 14), float32]) {
  %757 = fn (%var_11881: bool, %var_11882: Tensor[(1, 6, 11), bool], %var_11914: Tensor[(1, 6, 11), float32]) -> (Tensor[(?, 6, 11), bool], Tensor[(12, 30), uint32], Tensor[(7, 14, 14), int16], Tensor[(6, 10, 15), float32], Tensor[(15, 12, 2), float64], Tensor[(7, 14, 14), float32]) {
    %727 = cast(%var_11881, dtype="bool") /* ty=bool */;
    %728 = cast(%var_11882, dtype="bool") /* ty=Tensor[(1, 6, 11), bool] */;
    %729 = logical_and(%727, %728) /* ty=Tensor[(1, 6, 11), bool] */;
    %730 = cast(%var_11882, dtype="float32") /* ty=Tensor[(1, 6, 11), float32] */;
    %731 = shape_of(%729, dtype="int32") /* ty=Tensor[(3), int32] */;
    %732 = cast(%729, dtype="float32") /* ty=Tensor[(1, 6, 11), float32] */;
    %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %734 = divide(%732, %733) /* ty=Tensor[(?, 6, 11), float32] */;
    %735 = cast(%var_11914, dtype="bool") /* ty=Tensor[(1, 6, 11), bool] */;
    %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
    %737 = cast(%734, dtype="bool") /* ty=Tensor[(?, 6, 11), bool] */;
    %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %739 = @func_3889() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) */;
    %740 = cast(%var_11881, dtype="uint16") /* ty=uint16 */;
    %741 = reshape(%740, newshape=[]) /* ty=uint16 */;
    %742 = @func_8916(%741) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16) */;
    %743 = %742.1;
    %744 = cast(%743, dtype="float32") /* ty=Tensor[(6, 10, 15), float32] */;
    %745 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 30), uint32] */, dtype="uint32") /* ty=Tensor[(12, 30), uint32] */;
    %746 = reshape(%745, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
    %747 = @func_1564(%746) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
    %748 = %747.1;
    %749 = cast(%748, dtype="float64") /* ty=Tensor[(15, 12, 2), float64] */;
    %750 = cast(%var_11881, dtype="float64") /* ty=float64 */;
    %751 = @func_11205() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %752 = greater(%737, %738) /* ty=Tensor[(?, 6, 11), bool] */;
    %753 = %739.2;
    %754 = acos(%744) /* ty=Tensor[(6, 10, 15), float32] */;
    %755 = maximum(%749, %750) /* ty=Tensor[(15, 12, 2), float64] */;
    %756 = %751.0;
    (%752, meta[relay.Constant][19] /* ty=Tensor[(12, 30), uint32] */, %753, %754, %755, %756)
  };
  %757(%var_11954, %var_11955, %var_11956) /* ty=(Tensor[(?, 6, 11), bool], Tensor[(12, 30), uint32], Tensor[(7, 14, 14), int16], Tensor[(6, 10, 15), float32], Tensor[(15, 12, 2), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_820() -> Tensor[(7, 14, 14), float32] {
  %758 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  %759 = cast(%758, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %760 = asinh(%759) /* ty=Tensor[(7, 14, 14), float32] */;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  acos(%761) /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_1635(%var_1633: uint16, %var_1634: Tensor[(1, 16, 11), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(1, 16, 11), bool]) {
  @func_1631(%var_1633, %var_1634) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(1, 16, 11), bool]) */
}

def @func_5324() -> (Tensor[(7, 14, 14), float32],) {
  @func_5322() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_7366(%var_7344: Tensor[(10, 117), float64], %var_7347: Tensor[(13, 9, 10), int8], %var_7355: Tensor[(528), float64]) -> (Tensor[(7, 14, 14), float64], Tensor[(10, 117), float64], Tensor[(13, 9, 10), float64], Tensor[(8, 11, 6), bool], float64, Tensor[(528), float64], Tensor[(7, 14, 14), float32]) {
  %762 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %763 = cast(%var_7344, dtype="float64") /* ty=Tensor[(10, 117), float64] */;
  %764 = reshape(%763, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %765 = @func_4565(%764) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), float64], Tensor[(7, 14, 14), float32]) */;
  %766 = %765.2;
  %767 = cast(%var_7347, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %771 = cast(-0.316241f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %772 = cast(%var_7355, dtype="float64") /* ty=Tensor[(528), float64] */;
  %773 = reshape(%771, newshape=[]) /* ty=float64 */;
  %774 = reshape(%772, newshape=[8, 11, 6]) /* ty=Tensor[(8, 11, 6), float64] */;
  %775 = @func_4970(%773, %774) /* ty=(Tensor[(8, 11, 6), bool], Tensor[(8, 11, 6), int64], Tensor[(8, 11, 6), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %776 = @func_6317() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %777 = %762.0;
  %778 = divide(%769, %770) /* ty=Tensor[(13, 9, 10), float64] */;
  %779 = %775.0;
  %780 = %776.0;
  (%777, %var_7344, %778, %779, -0.316241f64 /* ty=float64 */, %var_7355, %780)
}

def @func_14284() -> (Tensor[(6, 10, 15), bool], Tensor[(7, 14, 14), float32]) {
  %791 = fn () -> (Tensor[(6, 10, 15), bool], Tensor[(7, 14, 14), float32]) {
    %781 = @func_1989() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) */;
    %782 = %781.1;
    %783 = cast(%782, dtype="float64") /* ty=Tensor[(6, 10, 15), float64] */;
    %784 = sin(%783) /* ty=Tensor[(6, 10, 15), float64] */;
    %785 = cast(%784, dtype="bool") /* ty=Tensor[(6, 10, 15), bool] */;
    %786 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
    %787 = cast(%782, dtype="bool") /* ty=Tensor[(6, 10, 15), bool] */;
    %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %789 = not_equal(%787, %788) /* ty=Tensor[(6, 10, 15), bool] */;
    %790 = @func_9652() /* ty=Tensor[(7, 14, 14), float32] */;
    (%789, %790)
  };
  %791() /* ty=(Tensor[(6, 10, 15), bool], Tensor[(7, 14, 14), float32]) */
}

def @func_10726() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), bool], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) {
  %792 = @func_3619() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %793 = @func_6664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %794 = cast(meta[relay.Constant][20] /* ty=Tensor[(176), uint16] */, dtype="uint16") /* ty=Tensor[(176), uint16] */;
  %795 = reshape(%794, newshape=[176]) /* ty=Tensor[(176), uint16] */;
  %796 = @func_7114(%795) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */;
  %797 = cast(meta[relay.Constant][21] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %798 = cast(meta[relay.Constant][21] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %799 = cast(meta[relay.Constant][21] /* ty=Tensor[(693), int32] */, dtype="int32") /* ty=Tensor[(693), int32] */;
  %800 = reshape(%797, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %801 = reshape(%798, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %802 = reshape(%799, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), int32] */;
  %803 = @func_8657(%800, %801, %802) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), float32], Tensor[(11, 7, 9), bool]) */;
  %804 = @func_10196() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %805 = %792.0;
  %806 = %793.0;
  %807 = %796.3;
  %808 = @func_5195() /* ty=Tensor[(7, 14, 14), float64] */;
  %809 = %803.2;
  %810 = %804.0;
  (%805, %806, %807, meta[relay.Constant][20] /* ty=Tensor[(176), uint16] */, %808, %809, meta[relay.Constant][21] /* ty=Tensor[(693), int32] */, %810)
}

def @func_3891() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) {
  @func_3889() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) */
}

def @func_10083() -> Tensor[(7, 14, 14), float32] {
  @func_10081() /* ty=Tensor[(7, 14, 14), float32] */
}

def @main(%var_16361: Tensor[(6, 6, 10), int16]) -> Tensor[(6, 6, 10), int16] {
  %811 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 6, 10), int16] */, dtype="int16") /* ty=Tensor[(6, 6, 10), int16] */;
  %812 = shape_of(%var_16361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%var_16361, dtype="int16") /* ty=Tensor[(6, 6, 10), int16] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%813, %814) /* ty=Tensor[(6, 6, 10), int16] */
}

def @func_13589() -> (Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  @func_13587() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */
}

def @func_3699() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */
}

def @func_15707() -> (Tensor[(7, 14, 14), float32],) {
  %817 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %815 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %816 = %815.0;
    (%816,)
  };
  %817() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_7877() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %828 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %818 = @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
    %819 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %820 = @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
    %821 = @func_6317() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %822 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %823 = %818.1;
    %824 = %819.0;
    %825 = %820.0;
    %826 = %821.0;
    %827 = %822.1;
    (%823, %824, %825, %826, %827)
  };
  %828() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_7228() -> (Tensor[(7, 14, 14), float64],) {
  %830 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %829 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
    (%829,)
  };
  %830() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_12461() -> (Tensor[(7, 14, 14), float64],) {
  %831 = @func_3619() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %832 = %831.0;
  (%832,)
}

def @func_4079() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %833 = @func_2240() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %834 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %835 = %833.0;
  %836 = %834.1;
  (%835, %836)
}

def @func_4081() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_14729() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %837 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %838 = @func_13987() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %839 = %837.1;
  %840 = %838.0;
  (%839, %840)
}

def @func_12405() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_12403() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_10020(%var_10018: Tensor[(8, 8, 4), uint8], %var_10019: Tensor[(8, 8, 4), uint8]) -> (Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float32]) {
  @func_10016(%var_10018, %var_10019) /* ty=(Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float32]) */
}

def @func_16260() -> (Tensor[(7, 14, 14), float64], uint16, Tensor[(2, 88), uint16], Tensor[(14, 6, 8), int64], Tensor[(672), int64]) {
  @func_16258() /* ty=(Tensor[(7, 14, 14), float64], uint16, Tensor[(2, 88), uint16], Tensor[(14, 6, 8), int64], Tensor[(672), int64]) */
}

def @func_4161() -> Tensor[(7, 14, 14), float32] {
  %842 = fn () -> Tensor[(7, 14, 14), float32] {
    %841 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %841.0
  };
  %842() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_4294() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %843 = @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %844 = @func_3409() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %845 = %843.0;
  %846 = %844.0;
  (%845, %846)
}

def @func_15576(%var_15549: Tensor[(5, 20), uint64], %var_15565: Tensor[(1400), bool]) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(10, 10, 1), bool], uint64, Tensor[(10, 10, 14), int32], Tensor[(1400), bool], Tensor[(5, 20), float64]) {
  %847 = @func_9702() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %848 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %849 = cast(%var_15549, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %850 = reshape(%848, newshape=[]) /* ty=uint64 */;
  %851 = reshape(%849, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), uint64] */;
  %852 = @func_8720(%850, %851) /* ty=Tensor[(10, 10, 1), bool] */;
  %853 = cast(%852, dtype="uint64") /* ty=Tensor[(10, 10, 1), uint64] */;
  %854 = cast(%var_15565, dtype="bool") /* ty=Tensor[(1400), bool] */;
  %855 = reshape(%853, newshape=[100]) /* ty=Tensor[(100), uint64] */;
  %856 = reshape(%854, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), bool] */;
  %857 = @func_10937(%855, %856) /* ty=(Tensor[(11, 6, 16), float32], Tensor[(7, 14, 14), uint32], Tensor[(1372), float64], uint64, Tensor[(100), uint64], Tensor[(10, 10, 14), int32]) */;
  %858 = cast(%var_15549, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %859 = @func_6373() /* ty=Tensor[(7, 14, 14), float64] */;
  %860 = %847.0;
  %861 = %857.5;
  %862 = rsqrt(%858) /* ty=Tensor[(5, 20), float64] */;
  (%859, %860, %852, meta[relay.Constant][23] /* ty=uint64 */, %861, %var_15565, %862)
}

def @func_16064() -> (uint16, Tensor[(7, 14, 14), float64]) {
  %863 = @func_12380() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */;
  %864 = @func_10475() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %865 = %863.2;
  %866 = %864.0;
  (%865, %866)
}

def @func_11964(%var_11963: Tensor[(2, 15, 10), float64]) -> (Tensor[(2, 15, 10), float64],) {
  %869 = fn (%var_11959: Tensor[(2, 15, 10), float64]) -> (Tensor[(2, 15, 10), float64],) {
    %867 = cast(%var_11959, dtype="float64") /* ty=Tensor[(2, 15, 10), float64] */;
    %868 = log2(%867) /* ty=Tensor[(2, 15, 10), float64] */;
    (%868,)
  };
  %869(%var_11963) /* ty=(Tensor[(2, 15, 10), float64],) */
}

def @func_15196() -> Tensor[(7, 14, 14), float64] {
  @func_15194() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_665() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) {
  %903 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) {
    %870 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %871 = reshape(%870, newshape=[]) /* ty=uint16 */;
    %872 = @func_479(%871) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
    %873 = %872.3;
    %874 = cast(%873, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
    %875 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint32") /* ty=uint32 */;
    %876 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %877 = reshape(%876, newshape=[]) /* ty=uint16 */;
    %878 = @func_479(%877) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
    %879 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
    %880 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
    %881 = cast(%880, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
    %882 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(%879, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %885 = not_equal(%883, %884) /* ty=Tensor[(7, 14, 14), bool] */;
    %886 = cast(%885, dtype="bool") /* ty=Tensor[(7, 14, 14), bool] */;
    %887 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="bool") /* ty=bool */;
    %888 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %889 = reshape(%888, newshape=[]) /* ty=uint16 */;
    %890 = @func_479(%889) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
    %891 = %890.0;
    %892 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
    %893 = cast(%891, dtype="uint8") /* ty=Tensor[(7, 14, 14), uint8] */;
    %894 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %895 = reshape(%894, newshape=[]) /* ty=uint16 */;
    %896 = @func_136(%895) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
    %897 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
    %898 = bitwise_or(%874, %875) /* ty=Tensor[(7, 14, 14), uint32] */;
    %899 = %878.0;
    %900 = less(%886, %887) /* ty=Tensor[(7, 14, 14), bool] */;
    %901 = bitwise_xor(%892, %893) /* ty=Tensor[(7, 14, 14), uint8] */;
    %902 = %896.0;
    (%897, %898, %899, %900, %901, %902)
  };
  %903() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */
}

def @func_13523() -> Tensor[(7, 14, 14), uint32] {
  %904 = @func_9856() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
  %904.1
}

def @func_3362(%var_3360: Tensor[(7, 14, 14), float64]) -> Tensor[(7, 14, 14), uint32] {
  @func_3359(%var_3360) /* ty=Tensor[(7, 14, 14), uint32] */
}

def @func_3619() -> (Tensor[(7, 14, 14), float64],) {
  %905 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %906 = %905.2;
  (%906,)
}

def @func_4243() -> (Tensor[(7, 14, 14), float64],) {
  %907 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %908 = %907.2;
  (%908,)
}

def @func_6319() -> (Tensor[(7, 14, 14), float32],) {
  @func_6317() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_8481(%var_8480: Tensor[(216), bool]) -> (Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), uint8], Tensor[(216), bool]) {
  %915 = fn (%var_8457: Tensor[(216), bool]) -> (Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), uint8], Tensor[(216), bool]) {
    %909 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %910 = cast(%var_8457, dtype="bool") /* ty=Tensor[(216), bool] */;
    %911 = reshape(%910, newshape=[12, 9, 2]) /* ty=Tensor[(12, 9, 2), bool] */;
    %912 = @func_6958(%911) /* ty=(Tensor[(12, 9, 2), uint8], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), int64]) */;
    %913 = %909.1;
    %914 = %912.0;
    (%913, %914, %var_8457)
  };
  %915(%var_8480) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), uint8], Tensor[(216), bool]) */
}

def @func_5778() -> (Tensor[(7, 14, 14), float64],) {
  %916 = @func_3889() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) */;
  %917 = %916.0;
  (%917,)
}

def @func_9807() -> (Tensor[(7, 14, 14), float64],) {
  @func_9805() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_7017() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) {
  %918 = @func_3697() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %919 = %918.0;
  %920 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 14, 14), float64] */, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %921 = shape_of(%919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %922 = cast(%919, dtype="uint32") /* ty=Tensor[(7, 14, 14), uint32] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %924 = @func_6158() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %925 = left_shift(%922, %923) /* ty=Tensor[(7, 14, 14), uint32] */;
  %926 = %924.3;
  (%925, %926)
}

def @func_10728() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), bool], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) {
  @func_10726() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), bool], Tensor[(693), int32], Tensor[(7, 14, 14), float32]) */
}

def @func_13976() -> (uint16, Tensor[(15, 12, 2), float64], Tensor[(360), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  %938 = fn () -> (uint16, Tensor[(15, 12, 2), float64], Tensor[(360), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
    %927 = @func_1989() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) */;
    %928 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
    %929 = reshape(%928, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint32] */;
    %930 = @func_1564(%929) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) */;
    %931 = @func_7876() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %932 = @func_12720() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %933 = %927.2;
    %934 = %930.1;
    %935 = @func_8372() /* ty=Tensor[(7, 14, 14), float64] */;
    %936 = %931.2;
    %937 = %932.0;
    (%933, %934, meta[relay.Constant][26] /* ty=Tensor[(360), uint32] */, %935, %936, %937)
  };
  %938() /* ty=(uint16, Tensor[(15, 12, 2), float64], Tensor[(360), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */
}

def @func_5597() -> Tensor[(7, 14, 14), float32] {
  %940 = fn () -> Tensor[(7, 14, 14), float32] {
    %939 = @func_5322() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %939.0
  };
  %940() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_12722() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_12720() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_2605() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %945 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
    %941 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %942 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
    %943 = @func_1885() /* ty=Tensor[(7, 14, 14), float64] */;
    %944 = %941.0;
    (%942, %943, %944)
  };
  %945() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */
}

def @func_3889() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16]) {
  %946 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %947 = %946.0;
  %948 = @func_1885() /* ty=Tensor[(7, 14, 14), float64] */;
  %949 = @func_1411() /* ty=Tensor[(7, 14, 14), int16] */;
  (%947, %948, %949)
}

def @func_11744() -> (Tensor[(7, 14, 14), float64],) {
  %951 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %950 = @func_8372() /* ty=Tensor[(7, 14, 14), float64] */;
    (%950,)
  };
  %951() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_10861() -> Tensor[(7, 14, 14), float32] {
  @func_10859() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_8693() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %956 = fn () -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
    %952 = @func_5115() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */;
    %953 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
    %954 = %952.3;
    %955 = %953.0;
    (%954, %955)
  };
  %956() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_2777() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_2775() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_9059() -> Tensor[(7, 14, 14), float32] {
  @func_9057() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_481(%var_480: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
  %963 = fn (%var_460: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) {
    %957 = cast(%var_460, dtype="uint16") /* ty=uint16 */;
    %958 = reshape(%957, newshape=[]) /* ty=uint16 */;
    %959 = @func_136(%958) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
    %960 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
    %961 = %959.0;
    %962 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
    (%960, %961, %var_460, %962)
  };
  %963(%var_480) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */
}

def @func_13168() -> (Tensor[(7, 14, 14), float32], uint16, uint16) {
  %964 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %965 = cast(meta[relay.Constant][27] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %966 = reshape(%965, newshape=[]) /* ty=uint16 */;
  %967 = @func_6817(%966) /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16, Tensor[(7, 14, 14), float32]) */;
  %968 = %964.1;
  %969 = %967.1;
  (%968, %969, meta[relay.Constant][27] /* ty=uint16 */)
}

def @func_2934() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %970 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %971 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  %972 = %970.0;
  (%971, %972)
}

def @func_1258() -> (Tensor[(7, 14, 14), float64],) {
  %977 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %973 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %974 = %973.0;
    %975 = cast(%974, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
    %976 = asin(%975) /* ty=Tensor[(7, 14, 14), float64] */;
    (%976,)
  };
  %977() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_2242() -> (Tensor[(7, 14, 14), float32],) {
  @func_2240() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_12403() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %978 = @func_7664() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %979 = @func_8074() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %980 = %978.0;
  %981 = %979.0;
  (%980, %981)
}

def @func_13559() -> (Tensor[(7, 14, 14), float32],) {
  %983 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %982 = @func_12564() /* ty=Tensor[(7, 14, 14), float32] */;
    (%982,)
  };
  %983() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_1461() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %984 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
  %985 = @func_820() /* ty=Tensor[(7, 14, 14), float32] */;
  (%984, %985)
}

def @func_9057() -> Tensor[(7, 14, 14), float32] {
  %986 = @func_8210() /* ty=(uint16, Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %986.1
}

def @func_8657(%var_8615: Tensor[(11, 7, 9), int32], %var_8616: Tensor[(11, 7, 9), int32], %var_8635: Tensor[(11, 7, 9), int32]) -> (Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), float32], Tensor[(11, 7, 9), bool]) {
  %987 = cast(%var_8616, dtype="int32") /* ty=Tensor[(11, 7, 9), int32] */;
  %988 = shape_of(%var_8615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%var_8615, dtype="int32") /* ty=Tensor[(11, 7, 9), int32] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %991 = bitwise_xor(%989, %990) /* ty=Tensor[(11, 7, 9), int32] */;
  %992 = cast(%991, dtype="float32") /* ty=Tensor[(11, 7, 9), float32] */;
  %993 = cast(%var_8635, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %994 = shape_of(%991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%991, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %997 = @func_4855() /* ty=Tensor[(7, 14, 14), float64] */;
  %998 = sqrt(%992) /* ty=Tensor[(11, 7, 9), float32] */;
  %999 = not_equal(%995, %996) /* ty=Tensor[(11, 7, 9), bool] */;
  (%997, %998, %999)
}

def @func_12331() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 132), int16], Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  @func_12329() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 132), int16], Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */
}

def @func_13730() -> (Tensor[(7, 14, 14), float32],) {
  %1001 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %1000 = @func_12564() /* ty=Tensor[(7, 14, 14), float32] */;
    (%1000,)
  };
  %1001() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_6160() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_6158() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_14671() -> Tensor[(7, 14, 14), float64] {
  %1003 = fn () -> Tensor[(7, 14, 14), float64] {
    %1002 = @func_4079() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %1002.1
  };
  %1003() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_2990() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_2988() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_3935() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %1004 = @func_3409() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1005 = @func_3307() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float64]) */;
  %1006 = %1004.0;
  %1007 = %1005.2;
  (%1006, %1007)
}

def @func_6317() -> (Tensor[(7, 14, 14), float32],) {
  %1008 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1009 = %1008.0;
  (%1009,)
}

def @func_16288(%var_16287: Tensor[(22, 3), bool]) -> (Tensor[(7, 14, 14), float64], Tensor[(15, 12, 2), float64], bool, Tensor[(22, 3), bool], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %1022 = fn (%var_16268: Tensor[(22, 3), bool]) -> (Tensor[(7, 14, 14), float64], Tensor[(15, 12, 2), float64], bool, Tensor[(22, 3), bool], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %1010 = @func_10039() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %1011 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1012 = cast(%var_16268, dtype="bool") /* ty=Tensor[(22, 3), bool] */;
    %1013 = cast(%var_16268, dtype="float32") /* ty=Tensor[(22, 3), float32] */;
    %1014 = reshape(%1011, newshape=[]) /* ty=bool */;
    %1015 = reshape(%1012, newshape=[1, 6, 11]) /* ty=Tensor[(1, 6, 11), bool] */;
    %1016 = reshape(%1013, newshape=[1, 6, 11]) /* ty=Tensor[(1, 6, 11), float32] */;
    %1017 = @func_11953(%1014, %1015, %1016) /* ty=(Tensor[(?, 6, 11), bool], Tensor[(12, 30), uint32], Tensor[(7, 14, 14), int16], Tensor[(6, 10, 15), float32], Tensor[(15, 12, 2), float64], Tensor[(7, 14, 14), float32]) */;
    %1018 = %1010.0;
    %1019 = %1017.4;
    %1020 = @func_13399() /* ty=Tensor[(7, 14, 14), float32] */;
    %1021 = @func_4855() /* ty=Tensor[(7, 14, 14), float64] */;
    (%1018, %1019, True /* ty=bool */, %var_16268, %1020, %1021)
  };
  %1022(%var_16287) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(15, 12, 2), float64], bool, Tensor[(22, 3), bool], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_13170() -> (Tensor[(7, 14, 14), float32], uint16, uint16) {
  @func_13168() /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16) */
}

def @func_10154() -> (Tensor[(7, 14, 14), float32],) {
  %1025 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %1023 = @func_9453() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %1024 = %1023.0;
    (%1024,)
  };
  %1025() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_12463() -> (Tensor[(7, 14, 14), float64],) {
  @func_12461() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_7520(%var_7518: Tensor[(10, 4, 7), uint16], %var_7519: Tensor[(10, 4, 7), uint16]) -> (Tensor[(10, 4, 7), uint16], Tensor[(7, 14, 14), float64]) {
  @func_7516(%var_7518, %var_7519) /* ty=(Tensor[(10, 4, 7), uint16], Tensor[(7, 14, 14), float64]) */
}

def @func_10379(%var_10378: Tensor[(5, 10, 14), float64]) -> (Tensor[(5, 10, 14), float32], Tensor[(5, 10, 14), float32]) {
  %1032 = fn (%var_10366: Tensor[(5, 10, 14), float64]) -> (Tensor[(5, 10, 14), float32], Tensor[(5, 10, 14), float32]) {
    %1026 = cast(%var_10366, dtype="float64") /* ty=Tensor[(5, 10, 14), float64] */;
    %1027 = acos(%1026) /* ty=Tensor[(5, 10, 14), float64] */;
    %1028 = cast(%1027, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
    %1029 = cast(%var_10366, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
    %1030 = atanh(%1028) /* ty=Tensor[(5, 10, 14), float32] */;
    %1031 = cos(%1029) /* ty=Tensor[(5, 10, 14), float32] */;
    (%1030, %1031)
  };
  %1032(%var_10378) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(5, 10, 14), float32]) */
}

def @func_7309() -> Tensor[(7, 14, 14), float32] {
  %1034 = fn () -> Tensor[(7, 14, 14), float32] {
    %1033 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
    %1033.1
  };
  %1034() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_1471() -> Tensor[(7, 14, 14), float32] {
  @func_1469() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_14325() -> Tensor[(7, 14, 14), float32] {
  @func_14323() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_8373() -> Tensor[(7, 14, 14), float64] {
  %1036 = fn () -> Tensor[(7, 14, 14), float64] {
    %1035 = @func_2604() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
    %1035.1
  };
  %1036() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_1039(%var_1028: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) {
  %1037 = @func_418() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1038 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1039 = %1038.0;
  %1040 = cast(%1039, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %1041 = cast(%var_1028, dtype="uint16") /* ty=uint16 */;
  %1042 = reshape(%1041, newshape=[]) /* ty=uint16 */;
  %1043 = @func_136(%1042) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %1044 = sqrt(%1040) /* ty=Tensor[(7, 14, 14), float32] */;
  %1045 = cast(%1044, dtype="float32") /* ty=Tensor[(7, 14, 14), float32] */;
  %1046 = reshape(%1045, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float32] */;
  %1047 = @func_996(%1046) /* ty=(Tensor[(7, 14, 14), uint64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1048 = %1037.0;
  %1049 = %1043.1;
  %1050 = %1047.1;
  (%1048, %1044, %1049, %var_1028, %1050)
}

def @func_11205() -> (Tensor[(7, 14, 14), float32],) {
  %1051 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1052 = %1051.0;
  (%1052,)
}

def @func_5637() -> (Tensor[(7, 14, 14), float32],) {
  %1055 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %1053 = @func_2834() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %1054 = %1053.1;
    (%1054,)
  };
  %1055() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_419() -> (Tensor[(7, 14, 14), float32],) {
  %1057 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %1056 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
    (%1056,)
  };
  %1057() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_2693() -> (Tensor[(7, 14, 14), float64],) {
  %1062 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %1058 = @func_2026() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %1059 = %1058.0;
    %1060 = cast(%1059, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
    %1061 = rsqrt(%1060) /* ty=Tensor[(7, 14, 14), float64] */;
    (%1061,)
  };
  %1062() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_9239() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_9237() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_6820(%var_6818: uint16) -> (Tensor[(7, 14, 14), float32], uint16, uint16, Tensor[(7, 14, 14), float32]) {
  @func_6817(%var_6818) /* ty=(Tensor[(7, 14, 14), float32], uint16, uint16, Tensor[(7, 14, 14), float32]) */
}

def @func_4970(%var_4897: float64, %var_4898: Tensor[(8, 11, 6), float64]) -> (Tensor[(8, 11, 6), bool], Tensor[(8, 11, 6), int64], Tensor[(8, 11, 6), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %1063 = cast(%var_4897, dtype="bool") /* ty=bool */;
  %1064 = cast(%var_4898, dtype="bool") /* ty=Tensor[(8, 11, 6), bool] */;
  %1065 = cast(%var_4897, dtype="int64") /* ty=int64 */;
  %1066 = cast(%var_4898, dtype="int64") /* ty=Tensor[(8, 11, 6), int64] */;
  %1067 = cast(%var_4898, dtype="float32") /* ty=Tensor[(8, 11, 6), float32] */;
  %1068 = @func_1989() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) */;
  %1069 = cast(%var_4897, dtype="uint16") /* ty=uint16 */;
  %1070 = reshape(%1069, newshape=[]) /* ty=uint16 */;
  %1071 = @func_479(%1070) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %1072 = @func_1920() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1073 = equal(%1063, %1064) /* ty=Tensor[(8, 11, 6), bool] */;
  %1074 = bitwise_or(%1065, %1066) /* ty=Tensor[(8, 11, 6), int64] */;
  %1075 = rsqrt(%1067) /* ty=Tensor[(8, 11, 6), float32] */;
  %1076 = %1068.0;
  %1077 = %1071.1;
  %1078 = %1072.0;
  (%1073, %1074, %1075, %1076, %1077, %1078)
}

def @func_8720(%var_8714: uint64, %var_8715: Tensor[(10, 10, 1), uint64]) -> Tensor[(10, 10, 1), bool] {
  %1079 = cast(%var_8714, dtype="bool") /* ty=bool */;
  %1080 = cast(%var_8715, dtype="bool") /* ty=Tensor[(10, 10, 1), bool] */;
  greater_equal(%1079, %1080) /* ty=Tensor[(10, 10, 1), bool] */
}

def @func_13891() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_13889() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_13050() -> (uint16,) {
  %1081 = @func_8210() /* ty=(uint16, Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_48() -> Tensor[(7, 14, 14), float64] {
  %1084 = fn () -> Tensor[(7, 14, 14), float64] {
    %1083 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
    tan(%1083) /* ty=Tensor[(7, 14, 14), float64] */
  };
  %1084() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_3411() -> (Tensor[(7, 14, 14), float32],) {
  @func_3409() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_138(%var_137: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) {
  %1092 = fn (%var_110: uint16) -> (Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) {
    %1085 = cast(%var_110, dtype="uint16") /* ty=uint16 */;
    %1086 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 10, 15), uint16] */, dtype="uint16") /* ty=Tensor[(6, 10, 15), uint16] */;
    %1087 = right_shift(%1085, %1086) /* ty=Tensor[(6, 10, 15), uint16] */;
    %1088 = cast(%var_110, dtype="bool") /* ty=bool */;
    %1089 = cast(%1087, dtype="bool") /* ty=Tensor[(6, 10, 15), bool] */;
    %1090 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
    %1091 = logical_or(%1088, %1089) /* ty=Tensor[(6, 10, 15), bool] */;
    (%1090, %1091)
  };
  %1092(%var_137) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */
}

def @func_11164(%var_11162: Tensor[(4, 1, 4), float32], %var_11163: Tensor[(1372), float64]) -> (Tensor[(4, 1, 4), float32], Tensor[(7, 14, 14), int16], Tensor[(1372), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_11160(%var_11162, %var_11163) /* ty=(Tensor[(4, 1, 4), float32], Tensor[(7, 14, 14), int16], Tensor[(1372), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_13917(%var_13908: Tensor[(12, 2, 11), uint16], %var_13909: Tensor[(12, 2, 11), uint16]) -> (Tensor[(12, 2, 11), uint16],) {
  %1093 = cast(%var_13909, dtype="uint16") /* ty=Tensor[(12, 2, 11), uint16] */;
  %1094 = shape_of(%var_13908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1095 = cast(%var_13908, dtype="uint16") /* ty=Tensor[(12, 2, 11), uint16] */;
  %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1097 = bitwise_xor(%1095, %1096) /* ty=Tensor[(12, 2, 11), uint16] */;
  (%1097,)
}

def @func_13644(%var_13642: Tensor[(672), int64]) -> (Tensor[(7, 14, 14), float64], Tensor[(14, 6, 8), int64], Tensor[(672), int64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_13641(%var_13642) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(14, 6, 8), int64], Tensor[(672), int64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_9652() -> Tensor[(7, 14, 14), float32] {
  %1098 = @func_8880() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1098.0
}

def @func_10940(%var_10938: Tensor[(100), uint64], %var_10939: Tensor[(10, 10, 14), bool]) -> (Tensor[(11, 6, 16), float32], Tensor[(7, 14, 14), uint32], Tensor[(1372), float64], uint64, Tensor[(100), uint64], Tensor[(10, 10, 14), int32]) {
  %1112 = fn (%var_10924: Tensor[(100), uint64], %var_10930: Tensor[(10, 10, 14), bool]) -> (Tensor[(11, 6, 16), float32], Tensor[(7, 14, 14), uint32], Tensor[(1372), float64], uint64, Tensor[(100), uint64], Tensor[(10, 10, 14), int32]) {
    %1099 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 6, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 16), float32] */;
    %1100 = cast(meta[relay.Constant][31] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
    %1101 = reshape(%1100, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
    %1102 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1103 = cast(%var_10924, dtype="uint64") /* ty=Tensor[(100), uint64] */;
    %1104 = reshape(%1102, newshape=[]) /* ty=uint64 */;
    %1105 = reshape(%1103, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), uint64] */;
    %1106 = @func_8720(%1104, %1105) /* ty=Tensor[(10, 10, 1), bool] */;
    %1107 = cast(%1106, dtype="int32") /* ty=Tensor[(10, 10, 1), int32] */;
    %1108 = cast(%var_10930, dtype="int32") /* ty=Tensor[(10, 10, 14), int32] */;
    %1109 = sinh(%1099) /* ty=Tensor[(11, 6, 16), float32] */;
    %1110 = @func_3359(%1101) /* ty=Tensor[(7, 14, 14), uint32] */;
    %1111 = add(%1107, %1108) /* ty=Tensor[(10, 10, 14), int32] */;
    (%1109, %1110, meta[relay.Constant][31] /* ty=Tensor[(1372), float64] */, meta[relay.Constant][32] /* ty=uint64 */, %var_10924, %1111)
  };
  %1112(%var_10938, %var_10939) /* ty=(Tensor[(11, 6, 16), float32], Tensor[(7, 14, 14), uint32], Tensor[(1372), float64], uint64, Tensor[(100), uint64], Tensor[(10, 10, 14), int32]) */
}

def @func_8211() -> (uint16, Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %1121 = fn () -> (uint16, Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %1113 = @func_3488() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint32], uint16, uint16, Tensor[(7, 14, 14), float64]) */;
    %1114 = @func_7266() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %1115 = @func_755() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %1116 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %1117 = %1113.3;
    %1118 = %1114.2;
    %1119 = %1115.1;
    %1120 = %1116.0;
    (%1117, %1118, %1119, %1120)
  };
  %1121() /* ty=(uint16, Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_16355() -> Tensor[(7, 14, 14), float64] {
  %1122 = @func_11699() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1122.0
}

def @func_8919(%var_8917: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16) {
  @func_8916(%var_8917) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16) */
}

def @func_5012(%var_4976: Tensor[(12, 9, 2), bool], %var_4982: Tensor[(12, 9, 2), bool]) -> (Tensor[(7, 14, 14), int16], Tensor[(12, 9, 2), uint32]) {
  %1123 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %1124 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 9, 2), bool] */, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
  %1125 = shape_of(%var_4976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%var_4976, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1128 = logical_and(%1126, %1127) /* ty=Tensor[(12, 9, 2), bool] */;
  %1129 = cast(%var_4982, dtype="uint64") /* ty=Tensor[(12, 9, 2), uint64] */;
  %1130 = shape_of(%1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%1128, dtype="uint64") /* ty=Tensor[(12, 9, 2), uint64] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1133 = maximum(%1131, %1132) /* ty=Tensor[(12, 9, 2), uint64] */;
  %1134 = cast(%1133, dtype="float32") /* ty=Tensor[(12, 9, 2), float32] */;
  %1135 = cos(%1134) /* ty=Tensor[(12, 9, 2), float32] */;
  %1136 = cast(%var_4982, dtype="uint32") /* ty=Tensor[(12, 9, 2), uint32] */;
  %1137 = shape_of(%1135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(%1135, dtype="uint32") /* ty=Tensor[(12, 9, 2), uint32] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1140 = %1123.1;
  %1141 = add(%1138, %1139) /* ty=Tensor[(12, 9, 2), uint32] */;
  (%1140, %1141)
}

def @func_9858() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) {
  @func_9856() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */
}

def @func_5016(%var_5014: Tensor[(12, 9, 2), bool], %var_5015: Tensor[(12, 9, 2), bool]) -> (Tensor[(7, 14, 14), int16], Tensor[(12, 9, 2), uint32]) {
  @func_5012(%var_5014, %var_5015) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(12, 9, 2), uint32]) */
}

def @func_1042(%var_1040: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) {
  @func_1039(%var_1040) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */
}

def @func_6214() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %1142 = @func_5778() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1143 = %1142.0;
  %1144 = @func_1469() /* ty=Tensor[(7, 14, 14), float32] */;
  (%1143, %1144)
}

def @func_7970() -> Tensor[(7, 14, 14), float64] {
  %1146 = fn () -> Tensor[(7, 14, 14), float64] {
    %1145 = @func_7876() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %1145.4
  };
  %1146() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_12565() -> Tensor[(7, 14, 14), float32] {
  %1147 = fn () -> Tensor[(7, 14, 14), float32] {
    @func_10859() /* ty=Tensor[(7, 14, 14), float32] */
  };
  %1147() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_6158() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %1148 = @func_2604() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %1149 = @func_1316() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), int16]) */;
  %1150 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1151 = %1148.1;
  %1152 = %1149.0;
  %1153 = @func_5596() /* ty=Tensor[(7, 14, 14), float32] */;
  %1154 = %1150.0;
  (%1151, %1152, %1153, %1154)
}

def @func_13525() -> Tensor[(7, 14, 14), uint32] {
  @func_13523() /* ty=Tensor[(7, 14, 14), uint32] */
}

def @func_12635(%var_12634: Tensor[(700), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64]) {
  %1165 = fn (%var_12626: Tensor[(700), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64]) {
    %1155 = @func_1095() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %1156 = @func_6414() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float32]) */;
    %1157 = @func_10583() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %1158 = cast(%var_12626, dtype="float64") /* ty=Tensor[(700), float64] */;
    %1159 = reshape(%1158, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
    %1160 = @func_10377(%1159) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(5, 10, 14), float32]) */;
    %1161 = %1155.1;
    %1162 = %1156.0;
    %1163 = %1157.2;
    %1164 = %1160.1;
    (%1161, %1162, %1163, %1164, %var_12626)
  };
  %1165(%var_12634) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64]) */
}

def @func_1961() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  @func_1959() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */
}

def @func_16066() -> (uint16, Tensor[(7, 14, 14), float64]) {
  @func_16064() /* ty=(uint16, Tensor[(7, 14, 14), float64]) */
}

def @func_1539() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_1537() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_5196() -> Tensor[(7, 14, 14), float64] {
  %1167 = fn () -> Tensor[(7, 14, 14), float64] {
    %1166 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %1166.0
  };
  %1167() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_1564(%var_1544: Tensor[(15, 12, 2), uint32]) -> (Tensor[(15, 12, 2), bool], Tensor[(15, 12, 2), float64]) {
  %1168 = cast(%var_1544, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
  %1169 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(15, 12, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1170 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 12, 2), uint32] */, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
  %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1172 = cast(%var_1544, dtype="float64") /* ty=Tensor[(15, 12, 2), float64] */;
  %1173 = greater(%1170, %1171) /* ty=Tensor[(15, 12, 2), bool] */;
  %1174 = log2(%1172) /* ty=Tensor[(15, 12, 2), float64] */;
  (%1173, %1174)
}

def @func_9702() -> (Tensor[(7, 14, 14), float64],) {
  %1175 = @func_7664() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
  %1176 = %1175.0;
  (%1176,)
}

def @func_8916(%var_8907: uint16) -> (Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16) {
  %1177 = @func_6664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1178 = cast(%var_8907, dtype="uint16") /* ty=uint16 */;
  %1179 = reshape(%1178, newshape=[]) /* ty=uint16 */;
  %1180 = @func_1039(%1179) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(6, 10, 15), bool], uint16, Tensor[(7, 14, 14), float32]) */;
  %1181 = %1177.0;
  %1182 = %1180.2;
  (%1181, %1182, %var_8907)
}

def @func_7516(%var_7496: Tensor[(10, 4, 7), uint16], %var_7497: Tensor[(10, 4, 7), uint16]) -> (Tensor[(10, 4, 7), uint16], Tensor[(7, 14, 14), float64]) {
  %1183 = cast(%var_7497, dtype="uint16") /* ty=Tensor[(10, 4, 7), uint16] */;
  %1184 = shape_of(%var_7496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(%var_7496, dtype="uint16") /* ty=Tensor[(10, 4, 7), uint16] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1187 = @func_7227() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1188 = multiply(%1185, %1186) /* ty=Tensor[(10, 4, 7), uint16] */;
  %1189 = %1187.0;
  (%1188, %1189)
}

def @func_10584() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %1196 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
    %1190 = @func_5778() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %1191 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %1192 = @func_10039() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %1193 = %1190.0;
    %1194 = %1191.0;
    %1195 = %1192.0;
    (%1193, %1194, %1195)
  };
  %1196() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_6913() -> Tensor[(7, 14, 14), float32] {
  %1197 = fn () -> Tensor[(7, 14, 14), float32] {
    @func_2090() /* ty=Tensor[(7, 14, 14), float32] */
  };
  %1197() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_12035(%var_12033: Tensor[(11, 3, 2), float64]) -> (Tensor[(11, 3, 2), float64],) {
  @func_12032(%var_12033) /* ty=(Tensor[(11, 3, 2), float64],) */
}

def @func_7814() -> (Tensor[(16, 12, 5), float32],) {
  %1198 = @func_6233() /* ty=Tensor[(16, 12, 5), float32] */;
  (%1198,)
}

def @func_13889() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %1199 = @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1200 = @func_9702() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1201 = %1199.0;
  %1202 = %1200.0;
  (%1201, %1202)
}

def @func_8075() -> (Tensor[(7, 14, 14), float32],) {
  %1205 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %1203 = @func_1183() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %1204 = %1203.0;
    (%1204,)
  };
  %1205() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_3307() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float64]) {
  %1206 = @func_1959() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1207 = @func_2934() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1208 = cast(meta[relay.Constant][35] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1209 = reshape(%1208, newshape=[]) /* ty=uint16 */;
  %1210 = @func_479(%1209) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %1211 = @func_2692() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1212 = %1206.0;
  %1213 = %1207.1;
  %1214 = %1210.1;
  %1215 = %1211.0;
  (%1212, %1213, %1214, meta[relay.Constant][35] /* ty=uint16 */, %1215)
}

def @func_7019() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) {
  @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */
}

def @func_8400() -> Tensor[(7, 14, 14), float64] {
  %1217 = fn () -> Tensor[(7, 14, 14), float64] {
    %1216 = @func_5953() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %1216.3
  };
  %1217() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_7665() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  %1221 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
    %1218 = @func_6055() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %1219 = %1218.1;
    %1220 = @func_6912() /* ty=Tensor[(7, 14, 14), float32] */;
    (%1219, %1220)
  };
  %1221() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_9455() -> (Tensor[(7, 14, 14), float32],) {
  @func_9453() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_293() -> (Tensor[(7, 14, 14), float32],) {
  %1222 = @func_289() /* ty=Tensor[(7, 14, 14), float32] */;
  (%1222,)
}

def @func_10040() -> (Tensor[(7, 14, 14), float64],) {
  %1224 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %1223 = @func_3647() /* ty=Tensor[(7, 14, 14), float64] */;
    (%1223,)
  };
  %1224() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_8724(%var_8722: uint64, %var_8723: Tensor[(10, 10, 1), uint64]) -> Tensor[(10, 10, 1), bool] {
  @func_8720(%var_8722, %var_8723) /* ty=Tensor[(10, 10, 1), bool] */
}

def @func_12198() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %1229 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
    %1225 = @func_9295() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %1226 = @func_3935() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %1227 = %1225.0;
    %1228 = %1226.1;
    (%1227, %1228)
  };
  %1229() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */
}

def @func_13084(%var_13082: Tensor[(360), uint32]) -> (Tensor[(6, 10, 15), bool], Tensor[(15, 12, 2), bool], Tensor[(360), uint32]) {
  @func_13081(%var_13082) /* ty=(Tensor[(6, 10, 15), bool], Tensor[(15, 12, 2), bool], Tensor[(360), uint32]) */
}

def @func_13604() -> Tensor[(7, 14, 14), float64] {
  %1231 = fn () -> Tensor[(7, 14, 14), float64] {
    %1230 = @func_13587() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
    %1230.0
  };
  %1231() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_12032(%var_12019: Tensor[(11, 3, 2), float64]) -> (Tensor[(11, 3, 2), float64],) {
  %1232 = cast(%var_12019, dtype="float64") /* ty=Tensor[(11, 3, 2), float64] */;
  %1233 = atanh(%1232) /* ty=Tensor[(11, 3, 2), float64] */;
  (%1233,)
}

def @func_7799(%var_7796: Tensor[(5, 6, 5), float64], %var_7797: Tensor[(5, 6, 5), float64], %var_7798: Tensor[(176), uint16]) -> (Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(5, 6, 5), float64]) {
  %1251 = fn (%var_7753: Tensor[(5, 6, 5), float64], %var_7754: Tensor[(5, 6, 5), float64], %var_7766: Tensor[(176), uint16]) -> (Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(5, 6, 5), float64]) {
    %1234 = cast(%var_7766, dtype="uint16") /* ty=Tensor[(176), uint16] */;
    %1235 = reshape(%1234, newshape=[176]) /* ty=Tensor[(176), uint16] */;
    %1236 = @func_7114(%1235) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */;
    %1237 = @func_5672() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
    %1238 = @func_4294() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %1239 = cast(%var_7754, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
    %1240 = shape_of(%var_7753, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1241 = cast(%var_7753, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
    %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1243 = floor_divide(%1241, %1242) /* ty=Tensor[(5, 6, 5), float64] */;
    %1244 = cast(%1243, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
    %1245 = sin(%1244) /* ty=Tensor[(5, 6, 5), float64] */;
    %1246 = cast(%1245, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
    %1247 = %1236.3;
    %1248 = %1237.0;
    %1249 = %1238.0;
    %1250 = asinh(%1246) /* ty=Tensor[(5, 6, 5), float64] */;
    (%1247, %var_7766, %1248, %1249, %1250)
  };
  %1251(%var_7796, %var_7797, %var_7798) /* ty=(Tensor[(176), uint16], Tensor[(176), uint16], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32], Tensor[(5, 6, 5), float64]) */
}

def @func_2184() -> Tensor[(7, 14, 14), float32] {
  @func_2182() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_2091() -> Tensor[(7, 14, 14), float32] {
  %1253 = fn () -> Tensor[(7, 14, 14), float32] {
    %1252 = @func_1095() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %1252.1
  };
  %1253() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_13217(%var_13216: Tensor[(1, 16, 5), float64]) -> (Tensor[(1, 16, 5), float64],) {
  %1256 = fn (%var_13211: Tensor[(1, 16, 5), float64]) -> (Tensor[(1, 16, 5), float64],) {
    %1254 = cast(%var_13211, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
    %1255 = atanh(%1254) /* ty=Tensor[(1, 16, 5), float64] */;
    (%1255,)
  };
  %1256(%var_13216) /* ty=(Tensor[(1, 16, 5), float64],) */
}

def @func_12988() -> Tensor[(7, 14, 14), float32] {
  %1257 = @func_9237() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1257.1
}

def @func_4245() -> (Tensor[(7, 14, 14), float64],) {
  @func_4243() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_8934() -> Tensor[(7, 14, 14), uint32] {
  %1259 = fn () -> Tensor[(7, 14, 14), uint32] {
    %1258 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
    %1258.1
  };
  %1259() /* ty=Tensor[(7, 14, 14), uint32] */
}

def @func_11207() -> (Tensor[(7, 14, 14), float32],) {
  @func_11205() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_9994() -> (Tensor[(7, 14, 14), float32],) {
  %1262 = fn () -> (Tensor[(7, 14, 14), float32],) {
    %1260 = @func_9856() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float32]) */;
    %1261 = %1260.2;
    (%1261,)
  };
  %1262() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_14785() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %1263 = @func_12675() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1264 = @func_11063() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */;
  %1265 = %1263.0;
  %1266 = %1264.1;
  (%1265, %1266)
}

def @func_16314() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
  %1270 = fn () -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) {
    %1267 = @func_7664() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %1268 = @func_14670() /* ty=Tensor[(7, 14, 14), float64] */;
    %1269 = %1267.0;
    (%1268, %1269)
  };
  %1270() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64]) */
}

def @func_10410() -> (Tensor[(7, 14, 14), float32],) {
  %1271 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1272 = %1271.0;
  (%1272,)
}

def @func_360() -> (Tensor[(7, 14, 14), float32],) {
  @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_1959() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %1273 = @func_1812() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
  %1274 = %1273.0;
  %1275 = @func_218() /* ty=Tensor[(7, 14, 14), float32] */;
  (%1274, %1275)
}

def @func_16258() -> (Tensor[(7, 14, 14), float64], uint16, Tensor[(2, 88), uint16], Tensor[(14, 6, 8), int64], Tensor[(672), int64]) {
  %1276 = @func_15277() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1277 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 88), uint16] */, dtype="uint16") /* ty=Tensor[(2, 88), uint16] */;
  %1278 = reshape(%1277, newshape=[176]) /* ty=Tensor[(176), uint16] */;
  %1279 = @func_7114(%1278) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */;
  %1280 = cast(meta[relay.Constant][37] /* ty=Tensor[(672), int64] */, dtype="int64") /* ty=Tensor[(672), int64] */;
  %1281 = reshape(%1280, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), int64] */;
  %1282 = @func_11680(%1281) /* ty=(Tensor[(14, 6, 8), int64],) */;
  %1283 = %1276.0;
  %1284 = %1279.2;
  %1285 = %1282.0;
  (%1283, %1284, meta[relay.Constant][36] /* ty=Tensor[(2, 88), uint16] */, %1285, meta[relay.Constant][37] /* ty=Tensor[(672), int64] */)
}

def @func_6414() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], uint16, Tensor[(7, 14, 14), float32]) {
  %1286 = @func_4243() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1287 = cast(meta[relay.Constant][38] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1288 = reshape(%1287, newshape=[]) /* ty=uint16 */;
  %1289 = @func_1756(%1288) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], uint16, Tensor[(7, 14, 14), float32]) */;
  %1290 = @func_1959() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
  %1291 = %1286.0;
  %1292 = %1289.6;
  %1293 = %1290.1;
  (%1291, %1292, meta[relay.Constant][38] /* ty=uint16 */, %1293)
}

def @func_15073() -> Tensor[(7, 14, 14), float64] {
  %1294 = @func_7017() /* ty=(Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) */;
  %1294.1
}

def @func_13587() -> (Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  %1295 = @func_5568() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %1296 = %1295.0;
  %1297 = @func_7158() /* ty=Tensor[(12, 9, 2), bool] */;
  (%1296, %1297)
}

def @func_14933() -> Tensor[(7, 14, 14), float32] {
  %1298 = @func_10850() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float32]) */;
  %1298.5
}

def @func_1202(%var_1201: Tensor[(16, 7, 13), uint16]) -> (Tensor[(16, 7, 13), uint16], Tensor[(7, 14, 14), float32]) {
  %1306 = fn (%var_1192: Tensor[(16, 7, 13), uint16]) -> (Tensor[(16, 7, 13), uint16], Tensor[(7, 14, 14), float32]) {
    %1299 = cast(%var_1192, dtype="uint16") /* ty=Tensor[(16, 7, 13), uint16] */;
    %1300 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(16, 7, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1301 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 7, 13), uint16] */, dtype="uint16") /* ty=Tensor[(16, 7, 13), uint16] */;
    %1302 = dyn.reshape(%1299, %1300, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1303 = @func_293() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %1304 = add(%1301, %1302) /* ty=Tensor[(16, 7, 13), uint16] */;
    %1305 = %1303.0;
    (%1304, %1305)
  };
  %1306(%var_1201) /* ty=(Tensor[(16, 7, 13), uint16], Tensor[(7, 14, 14), float32]) */
}

def @func_11243(%var_11241: Tensor[(11, 14, 6), bool], %var_11242: Tensor[(11, 14, 6), bool]) -> (Tensor[(11, 14, 6), bool],) {
  %1312 = fn (%var_11221: Tensor[(11, 14, 6), bool], %var_11222: Tensor[(11, 14, 6), bool]) -> (Tensor[(11, 14, 6), bool],) {
    %1307 = cast(%var_11222, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
    %1308 = shape_of(%var_11221, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1309 = cast(%var_11221, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
    %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1311 = logical_and(%1309, %1310) /* ty=Tensor[(11, 14, 6), bool] */;
    (%1311,)
  };
  %1312(%var_11241, %var_11242) /* ty=(Tensor[(11, 14, 6), bool],) */
}

def @func_2130() -> (Tensor[(7, 14, 14), float32],) {
  @func_2128() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_4369(%var_4368: Tensor[(9, 60), int16]) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(9, 60), float32]) {
  %1327 = fn (%var_4333: Tensor[(9, 60), int16]) -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(9, 60), float32]) {
    %1313 = @func_3935() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %1314 = cast(%var_4333, dtype="int16") /* ty=Tensor[(9, 60), int16] */;
    %1315 = reshape(%1314, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), int16] */;
    %1316 = @func_3596(%1315) /* ty=(Tensor[(3, 15, 12), int16], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %1317 = cast(%var_4333, dtype="float32") /* ty=Tensor[(9, 60), float32] */;
    %1318 = log2(%1317) /* ty=Tensor[(9, 60), float32] */;
    %1319 = cast(%var_4333, dtype="float32") /* ty=Tensor[(9, 60), float32] */;
    %1320 = shape_of(%1318, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1321 = cast(%1318, dtype="float32") /* ty=Tensor[(9, 60), float32] */;
    %1322 = dyn.reshape(%1319, %1320, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1323 = %1313.1;
    %1324 = @func_47() /* ty=Tensor[(7, 14, 14), float64] */;
    %1325 = %1316.1;
    %1326 = power(%1321, %1322) /* ty=Tensor[(9, 60), float32] */;
    (%1323, %1324, %1325, %1326)
  };
  %1327(%var_4368) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(9, 60), float32]) */
}

def @func_10272() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) {
  %1328 = @func_7227() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1329 = @func_358() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1330 = @func_9755() /* ty=Tensor[(7, 14, 14), float32] */;
  %1331 = %1328.0;
  %1332 = @func_1469() /* ty=Tensor[(7, 14, 14), float32] */;
  %1333 = %1329.0;
  (%1330, %1331, %1332, %1333)
}

def @func_15278() -> (Tensor[(7, 14, 14), float64],) {
  %1336 = fn () -> (Tensor[(7, 14, 14), float64],) {
    %1334 = @func_15051() /* ty=(Tensor[(7, 14, 14), float64],) */;
    %1335 = %1334.0;
    (%1335,)
  };
  %1336() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_15668() -> (Tensor[(7, 14, 14), float32],) {
  @func_15666() /* ty=(Tensor[(7, 14, 14), float32],) */
}

def @func_9704() -> (Tensor[(7, 14, 14), float64],) {
  @func_9702() /* ty=(Tensor[(7, 14, 14), float64],) */
}

def @func_1989() -> (Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) {
  %1337 = @func_1257() /* ty=(Tensor[(7, 14, 14), float64],) */;
  %1338 = cast(meta[relay.Constant][40] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1339 = reshape(%1338, newshape=[]) /* ty=uint16 */;
  %1340 = @func_136(%1339) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool]) */;
  %1341 = %1337.0;
  %1342 = %1340.1;
  (%1341, %1342, meta[relay.Constant][40] /* ty=uint16 */)
}

def @func_11398() -> Tensor[(7, 14, 14), float32] {
  %1343 = @func_6083() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1343.0
}

def @func_14787() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  @func_14785() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */
}

def @func_7116(%var_7115: Tensor[(176), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
  %1352 = fn (%var_7107: Tensor[(176), uint16]) -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) {
    %1344 = @func_1959() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32]) */;
    %1345 = cast(meta[relay.Constant][41] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1346 = cast(%var_7107, dtype="uint16") /* ty=Tensor[(176), uint16] */;
    %1347 = reshape(%1345, newshape=[]) /* ty=uint16 */;
    %1348 = reshape(%1346, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), uint16] */;
    %1349 = @func_1631(%1347, %1348) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(1, 16, 11), bool]) */;
    %1350 = %1344.0;
    %1351 = %1349.2;
    (%1350, %1351, meta[relay.Constant][41] /* ty=uint16 */, %var_7107)
  };
  %1352(%var_7115) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], uint16, Tensor[(176), uint16]) */
}

def @func_11334() -> (Tensor[(7, 14, 14), float32],) {
  %1353 = @func_10153() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_14323() -> Tensor[(7, 14, 14), float32] {
  %1355 = @func_12329() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 132), int16], Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) */;
  %1355.0
}

def @func_14952() -> Tensor[(7, 14, 14), float64] {
  %1357 = fn () -> Tensor[(7, 14, 14), float64] {
    %1356 = @func_10583() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) */;
    %1356.2
  };
  %1357() /* ty=Tensor[(7, 14, 14), float64] */
}

def @func_7692() -> Tensor[(7, 14, 14), float32] {
  %1359 = fn () -> Tensor[(7, 14, 14), float32] {
    %1358 = @func_5953() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */;
    %1358.2
  };
  %1359() /* ty=Tensor[(7, 14, 14), float32] */
}

def @func_8662(%var_8659: Tensor[(11, 7, 9), int32], %var_8660: Tensor[(11, 7, 9), int32], %var_8661: Tensor[(11, 7, 9), int32]) -> (Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), float32], Tensor[(11, 7, 9), bool]) {
  @func_8657(%var_8659, %var_8660, %var_8661) /* ty=(Tensor[(7, 14, 14), float64], Tensor[(11, 7, 9), float32], Tensor[(11, 7, 9), bool]) */
}

def @func_14619() -> (Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) {
  @func_14617() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float32]) */
}

def @func_4416() -> (Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64]) {
  %1360 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %1361 = %1360.1;
  %1362 = @func_3647() /* ty=Tensor[(7, 14, 14), float64] */;
  (%1361, %1362)
}

def @func_1991() -> (Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) {
  @func_1989() /* ty=(Tensor[(7, 14, 14), float64], Tensor[(6, 10, 15), bool], uint16) */
}

def @func_5568() -> (Tensor[(7, 14, 14), float64], Tensor[(12, 9, 2), bool]) {
  %1363 = @func_5115() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float32], Tensor[(12, 9, 2), bool], Tensor[(7, 14, 14), float32]) */;
  %1364 = @func_1885() /* ty=Tensor[(7, 14, 14), float64] */;
  %1365 = %1363.2;
  (%1364, %1365)
}

def @func_1411() -> Tensor[(7, 14, 14), int16] {
  %1366 = @func_1125() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), int16]) */;
  %1366.1
}

def @func_11874(%var_11868: Tensor[(100), uint64]) -> (Tensor[(7, 14, 14), float32], uint64, Tensor[(100), uint64], Tensor[(2, 700), bool]) {
  %1367 = @func_10153() /* ty=(Tensor[(7, 14, 14), float32],) */;
  %1368 = cast(%var_11868, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %1369 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 700), bool] */, dtype="bool") /* ty=Tensor[(2, 700), bool] */;
  %1370 = reshape(%1368, newshape=[100]) /* ty=Tensor[(100), uint64] */;
  %1371 = reshape(%1369, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), bool] */;
  %1372 = @func_10937(%1370, %1371) /* ty=(Tensor[(11, 6, 16), float32], Tensor[(7, 14, 14), uint32], Tensor[(1372), float64], uint64, Tensor[(100), uint64], Tensor[(10, 10, 14), int32]) */;
  %1373 = %1367.0;
  %1374 = %1372.3;
  (%1373, %1374, %var_11868, meta[relay.Constant][42] /* ty=Tensor[(2, 700), bool] */)
}

def @func_14409(%var_14407: Tensor[(130, 9), float64], %var_14408: Tensor[(700), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(13, 9, 10), int8], Tensor[(130, 9), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64], Tensor[(130, 9), float64]) {
  %1411 = fn (%var_14362: Tensor[(130, 9), float64], %var_14384: Tensor[(700), float64]) -> (Tensor[(7, 14, 14), float32], Tensor[(13, 9, 10), int8], Tensor[(130, 9), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64], Tensor[(130, 9), float64]) {
    %1375 = @func_10196() /* ty=(Tensor[(7, 14, 14), float32],) */;
    %1376 = cast(meta[relay.Constant][43] /* ty=Tensor[(130, 9), float64] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %1377 = reshape(%1376, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float64] */;
    %1378 = @func_3526(%1377) /* ty=(Tensor[(13, 9, 10), int8],) */;
    %1379 = cast(%var_14362, dtype="bool") /* ty=Tensor[(130, 9), bool] */;
    %1380 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(130, 9), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1381 = cast(meta[relay.Constant][43] /* ty=Tensor[(130, 9), float64] */, dtype="bool") /* ty=Tensor[(130, 9), bool] */;
    %1382 = dyn.reshape(%1379, %1380, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1383 = greater_equal(%1381, %1382) /* ty=Tensor[(130, 9), bool] */;
    %1384 = cast(%var_14362, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %1385 = shape_of(%1383, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1386 = cast(%1383, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %1387 = dyn.reshape(%1384, %1385, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1388 = cast(%var_14384, dtype="float64") /* ty=Tensor[(700), float64] */;
    %1389 = reshape(%1388, newshape=[700]) /* ty=Tensor[(700), float64] */;
    %1390 = @func_12633(%1389) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64]) */;
    %1391 = cast(%var_14362, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %1392 = sinh(%1391) /* ty=Tensor[(130, 9), float64] */;
    %1393 = cast(%1392, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %1394 = log10(%1393) /* ty=Tensor[(130, 9), float64] */;
    %1395 = cast(%1383, dtype="int8") /* ty=Tensor[(130, 9), int8] */;
    %1396 = shape_of(%1392, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1397 = cast(%1392, dtype="int8") /* ty=Tensor[(130, 9), int8] */;
    %1398 = dyn.reshape(%1395, %1396, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1399 = multiply(%1397, %1398) /* ty=Tensor[(130, 9), int8] */;
    %1400 = cast(%1399, dtype="bool") /* ty=Tensor[(130, 9), bool] */;
    %1401 = shape_of(%1394, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1402 = cast(%1394, dtype="bool") /* ty=Tensor[(130, 9), bool] */;
    %1403 = dyn.reshape(%1400, %1401, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1404 = less(%1402, %1403) /* ty=Tensor[(130, 9), bool] */;
    %1405 = cast(%1404, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %1406 = %1375.0;
    %1407 = %1378.0;
    %1408 = divide(%1386, %1387) /* ty=Tensor[(130, 9), float64] */;
    %1409 = %1390.3;
    %1410 = acosh(%1405) /* ty=Tensor[(130, 9), float64] */;
    (%1406, %1407, %1408, %1409, %var_14384, %1410)
  };
  %1411(%var_14407, %var_14408) /* ty=(Tensor[(7, 14, 14), float32], Tensor[(13, 9, 10), int8], Tensor[(130, 9), float64], Tensor[(5, 10, 14), float32], Tensor[(700), float64], Tensor[(130, 9), float64]) */
}

def @func_1812() -> (Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), float64]) {
  %1412 = @func_664() /* ty=(Tensor[(7, 14, 14), float32], Tensor[(7, 14, 14), uint32], Tensor[(7, 14, 14), float64], Tensor[(7, 14, 14), bool], Tensor[(7, 14, 14), uint8], Tensor[(7, 14, 14), float64]) */;
  %1413 = %1412.0;
  %1414 = cast(%1413, dtype="float64") /* ty=Tensor[(7, 14, 14), float64] */;
  %1415 = reshape(%1414, newshape=[7, 14, 14]) /* ty=Tensor[(7, 14, 14), float64] */;
  %1416 = @func_374(%1415) /* ty=(Tensor[(7, 14, 14), int16], Tensor[(7, 14, 14), float64]) */;
  %1417 = %1416.1;
  (%1413, %1417)
}

def @func_11683(%var_11681: Tensor[(14, 6, 8), int64]) -> (Tensor[(14, 6, 8), int64],) {
  @func_11680(%var_11681) /* ty=(Tensor[(14, 6, 8), int64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen614/build/output.py:4999: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen614/build/output.py", line 5004, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(360) tvmgen_default_fused_bitwise_xor_kernel0(short* __restrict__ T_bitwise_xor, short* __restrict__ placeholder, short* __restrict__ placeholder1) {
  T_bitwise_xor[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] ^ placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


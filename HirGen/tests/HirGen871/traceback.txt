==========mod==========
#[version = "0.0.5"]
def @func_19635() -> Tensor[(1, 2240), float64] {
  %0 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %1 = %0.2;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(1, 2240), float64] */;
  rsqrt(%2) /* ty=Tensor[(1, 2240), float64] */
}

def @func_12385() -> (Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) {
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 1), float32] */;
  %4 = log(%3) /* ty=Tensor[(6, 16, 1), float32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 16, 1), float32] */, dtype="bool") /* ty=Tensor[(6, 16, 1), bool] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%4, dtype="bool") /* ty=Tensor[(6, 16, 1), bool] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %11 = reshape(%9, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), float32] */;
  %12 = reshape(%10, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %13 = @func_1983(%11, %12) /* ty=(Tensor[(11, 4, 14), float32], Tensor[(6, 10, 11), float64], Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) */;
  %14 = cast(meta[relay.Constant][3] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %15 = reshape(%14, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %16 = @func_12083(%15) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) */;
  %17 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %18 = greater_equal(%7, %8) /* ty=Tensor[(6, 16, ?), bool] */;
  %19 = %13.0;
  %20 = %16.2;
  %21 = %17.0;
  (%18, %19, meta[relay.Constant][1] /* ty=Tensor[(616), float32] */, meta[relay.Constant][2] /* ty=Tensor[(660), float64] */, %20, meta[relay.Constant][3] /* ty=Tensor[(2240), float64] */, %21)
}

def @func_18647(%var_18631: Tensor[(1664), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(616), float32]) {
  %22 = cast(meta[relay.Constant][4] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %23 = cast(%var_18631, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %24 = reshape(%22, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %25 = reshape(%23, newshape=[1664]) /* ty=Tensor[(1664), float32] */;
  %26 = @func_13984(%24, %25) /* ty=(Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(968, 1), uint8], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(1540), uint64], Tensor[(1664), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(10, 12, 1), uint16], uint8) */;
  %27 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  %28 = %26.10;
  %29 = @func_14704() /* ty=Tensor[(616), float32] */;
  (%27, %28, meta[relay.Constant][4] /* ty=Tensor[(130), int16] */, %var_18631, %29)
}

def @func_12939() -> (Tensor[(11, 4, 16), int8],) {
  %30 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  (%30,)
}

def @func_20600() -> (Tensor[(11, 4, 16), int8],) {
  %31 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %32 = %31.0;
  (%32,)
}

def @func_17530() -> Tensor[(1, 2240), float64] {
  %33 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %33.2
}

def @func_21481(%var_21414: Tensor[(450), int16]) -> (Tensor[(16, 10, 14), float64], Tensor[(450), int16], Tensor[(11, 4, 16), int8], Tensor[(15, 2, 15), float64]) {
  %34 = @func_18303() /* ty=(Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8]) */;
  %35 = @func_16064() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %36 = cast(%var_21414, dtype="int16") /* ty=Tensor[(450), int16] */;
  %37 = reshape(%36, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), int16] */;
  %38 = @func_6581(%37) /* ty=(Tensor[(15, 2, 15), int16],) */;
  %39 = %38.0;
  %40 = cast(%39, dtype="float64") /* ty=Tensor[(15, 2, 15), float64] */;
  %41 = %34.0;
  %42 = %35.0;
  %43 = cos(%40) /* ty=Tensor[(15, 2, 15), float64] */;
  (%41, %var_21414, %42, %43)
}

def @func_15198() -> Tensor[(11, 4, 16), int8] {
  %44 = @func_12756() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %44.0
}

def @func_5721(%var_5645: Tensor[(7, 1, 8), float32], %var_5646: Tensor[(7, 2, 8), float32], %var_5671: Tensor[(12), float64], %var_5694: Tensor[(120), uint8], %var_5702: Tensor[(168, 2), float64], %var_5715: Tensor[(130), int16]) -> (Tensor[(7, 2, 8), float32], Tensor[(12), float64], Tensor[(12, 4, 15), float32], Tensor[(720), float32], Tensor[(120), uint8], Tensor[(1, 6, 2), float32], Tensor[(168, 2), float64], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(168, 2), float64]) {
  %45 = cast(%var_5645, dtype="float32") /* ty=Tensor[(7, 1, 8), float32] */;
  %46 = cast(%var_5646, dtype="float32") /* ty=Tensor[(7, 2, 8), float32] */;
  %47 = cast(meta[relay.Constant][5] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %48 = cast(%var_5694, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %49 = reshape(%47, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), float32] */;
  %50 = reshape(%48, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %51 = @func_1489(%49, %50) /* ty=(Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) */;
  %52 = cast(%var_5671, dtype="float64") /* ty=Tensor[(12), float64] */;
  %53 = reshape(%52, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %54 = @func_4842(%53) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %55 = %54.0;
  %56 = cast(%55, dtype="float32") /* ty=Tensor[(1, 6, 2), float32] */;
  %57 = cast(meta[relay.Constant][6] /* ty=Tensor[(168, 2), uint8] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %58 = log2(%57) /* ty=Tensor[(168, 2), float64] */;
  %59 = cast(%var_5702, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(2), int32] */;
  %61 = cast(%58, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %63 = cast(meta[relay.Constant][7] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %64 = reshape(%63, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
  %65 = cast(%var_5715, dtype="int16") /* ty=Tensor[(130), int16] */;
  %66 = reshape(%65, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), int16] */;
  %67 = cast(meta[relay.Constant][6] /* ty=Tensor[(168, 2), uint8] */, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %68 = cast(meta[relay.Constant][6] /* ty=Tensor[(168, 2), uint8] */, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %69 = reshape(%67, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %70 = reshape(%68, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %71 = @func_269(%69, %70) /* ty=Tensor[(14, 4, 6), bool] */;
  %72 = cast(%71, dtype="uint32") /* ty=Tensor[(14, 4, 6), uint32] */;
  %73 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(168, 2), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %74 = cast(meta[relay.Constant][6] /* ty=Tensor[(168, 2), uint8] */, dtype="uint32") /* ty=Tensor[(168, 2), uint32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %76 = left_shift(%74, %75) /* ty=Tensor[(168, 2), uint32] */;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %78 = shape_of(%58, dtype="int32") /* ty=Tensor[(2), int32] */;
  %79 = cast(%58, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %81 = floor_mod(%45, %46) /* ty=Tensor[(7, 2, 8), float32] */;
  %82 = %51.5;
  %83 = log2(%56) /* ty=Tensor[(1, 6, 2), float32] */;
  %84 = mod(%61, %62) /* ty=Tensor[(168, 2), float64] */;
  %85 = @func_4810(%64) /* ty=Tensor[(11, 8, 4), bool] */;
  %86 = @func_5333(%66) /* ty=Tensor[(13, 1, 10), bool] */;
  %87 = divide(%79, %80) /* ty=Tensor[(168, 2), float64] */;
  (%81, %var_5671, %82, meta[relay.Constant][5] /* ty=Tensor[(720), float32] */, %var_5694, %83, %84, %85, meta[relay.Constant][7] /* ty=Tensor[(352), int8] */, %86, %var_5715, %87)
}

def @func_15952(%var_15942: Tensor[(6, 12, 7), int32]) -> (Tensor[(6, 12, 7), int32], Tensor[(6, 12, 7), float32]) {
  %88 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 12, 7), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 7), int32] */;
  %89 = shape_of(%var_15942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%var_15942, dtype="int32") /* ty=Tensor[(6, 12, 7), int32] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %92 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 12, 7), int32] */, dtype="float32") /* ty=Tensor[(6, 12, 7), float32] */;
  %93 = bitwise_xor(%90, %91) /* ty=Tensor[(6, 12, 7), int32] */;
  %94 = cosh(%92) /* ty=Tensor[(6, 12, 7), float32] */;
  (%93, %94)
}

def @func_15917(%var_15906: uint64) -> (Tensor[(1, 13, 1), bool], Tensor[(11, 4, 16), int8]) {
  %95 = cast(%var_15906, dtype="bool") /* ty=bool */;
  %96 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 13, 1), uint64] */, dtype="bool") /* ty=Tensor[(1, 13, 1), bool] */;
  %97 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %98 = less(%95, %96) /* ty=Tensor[(1, 13, 1), bool] */;
  %99 = %97.0;
  (%98, %99)
}

def @func_2291(%var_2276: Tensor[(6, 14, 16), int8], %var_2277: Tensor[(6, 14, 16), int8]) -> Tensor[(6, 14, 16), int8] {
  %100 = cast(%var_2277, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %101 = shape_of(%var_2276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%var_2276, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%102, %103) /* ty=Tensor[(6, 14, 16), int8] */
}

def @func_17724() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(12), float64]) {
  %104 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %105 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %106 = cast(meta[relay.Constant][10] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %107 = reshape(%106, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %108 = @func_17099(%107) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(616), float32], Tensor[(840), float64], Tensor[(12), float64], Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(14), uint8], Tensor[(6, 14, 16), bool], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %109 = %104.0;
  %110 = %105.1;
  %111 = %108.6;
  (%109, %110, %111, meta[relay.Constant][10] /* ty=Tensor[(12), float64] */)
}

def @func_12850() -> (Tensor[(11, 4, 16), int8], Tensor[(6, 2, 7), bool], Tensor[(14), uint8], Tensor[(84), uint8]) {
  %112 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %113 = cast(meta[relay.Constant][11] /* ty=Tensor[(14), uint8] */, dtype="uint8") /* ty=Tensor[(14), uint8] */;
  %114 = cast(meta[relay.Constant][12] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %115 = reshape(%113, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), uint8] */;
  %116 = reshape(%114, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), uint8] */;
  %117 = %112.0;
  %118 = @func_9820(%115, %116) /* ty=Tensor[(6, 2, 7), bool] */;
  (%117, %118, meta[relay.Constant][11] /* ty=Tensor[(14), uint8] */, meta[relay.Constant][12] /* ty=Tensor[(84), uint8] */)
}

def @func_12083(%var_12078: Tensor[(2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) {
  %119 = cast(%var_12078, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %120 = cast(meta[relay.Constant][13] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %121 = cast(meta[relay.Constant][14] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %122 = reshape(%119, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %123 = reshape(%120, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %124 = reshape(%121, newshape=[8, 288]) /* ty=Tensor[(8, 288), float32] */;
  %125 = @func_7456(%122, %123, %124) /* ty=(Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) */;
  %126 = @func_11876() /* ty=Tensor[(11, 4, 16), int8] */;
  %127 = %125.0;
  (%126, %127, %var_12078, meta[relay.Constant][13] /* ty=Tensor[(352), int8] */, meta[relay.Constant][14] /* ty=Tensor[(2304), float32] */)
}

def @func_21116() -> Tensor[(11, 4, 16), int8] {
  %128 = @func_18084() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %128.0
}

def @func_13054(%var_13018: Tensor[(11, 4, 16), int8]) -> (Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), int8]) {
  %129 = @func_12756() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %130 = %129.0;
  %131 = cast(%var_13018, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %135 = cast(%var_13018, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
  %136 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%130, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %139 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %140 = greater(%133, %134) /* ty=Tensor[(11, 4, 16), bool] */;
  %141 = logical_or(%137, %138) /* ty=Tensor[(11, 4, 16), bool] */;
  %142 = %139.0;
  (%140, %141, %142)
}

def @func_13771() -> Tensor[(11, 4, 16), int8] {
  @func_13401() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_9820(%var_9807: Tensor[(1, 2, 7), uint8], %var_9808: Tensor[(6, 2, 7), uint8]) -> Tensor[(6, 2, 7), bool] {
  %143 = cast(%var_9807, dtype="bool") /* ty=Tensor[(1, 2, 7), bool] */;
  %144 = cast(%var_9808, dtype="bool") /* ty=Tensor[(6, 2, 7), bool] */;
  greater_equal(%143, %144) /* ty=Tensor[(6, 2, 7), bool] */
}

def @func_18910() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %145 = @func_15198() /* ty=Tensor[(11, 4, 16), int8] */;
  %146 = @func_14427() /* ty=Tensor[(11, 4, 16), int8] */;
  (%145, %146)
}

def @func_19591(%var_19560: Tensor[(384), float64]) -> (Tensor[(120), uint8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) {
  %147 = @func_19137() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(120), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) */;
  %148 = cast(%var_19560, dtype="float64") /* ty=Tensor[(384), float64] */;
  %149 = cast(meta[relay.Constant][15] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %150 = reshape(%148, newshape=[6, 16, 4]) /* ty=Tensor[(6, 16, 4), float64] */;
  %151 = reshape(%149, newshape=[]) /* ty=uint8 */;
  %152 = @func_11740(%150, %151) /* ty=(Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
  %153 = %147.1;
  %154 = %152.0;
  (%153, %154, %var_19560, meta[relay.Constant][15] /* ty=uint8 */)
}

def @func_19681() -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) {
  %155 = @func_16082() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %156 = @func_19508() /* ty=(Tensor[(8, 11, 11), float64],) */;
  %157 = %155.0;
  %158 = %156.0;
  (%157, %158)
}

def @main(%var_21915: Tensor[(10, 2240), float64]) -> (Tensor[(2, 2240), float64], Tensor[(10, 2240), bool]) {
  %159 = @func_17530() /* ty=Tensor[(1, 2240), float64] */;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(1, 2240), float64] */;
  %161 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 2240), float64] */, dtype="float64") /* ty=Tensor[(2, 2240), float64] */;
  %162 = cast(%159, dtype="uint64") /* ty=Tensor[(1, 2240), uint64] */;
  %163 = cast(%var_21915, dtype="uint64") /* ty=Tensor[(10, 2240), uint64] */;
  %164 = left_shift(%162, %163) /* ty=Tensor[(10, 2240), uint64] */;
  %165 = cast(%164, dtype="bool") /* ty=Tensor[(10, 2240), bool] */;
  %166 = cast(%159, dtype="bool") /* ty=Tensor[(1, 2240), bool] */;
  %167 = floor_mod(%160, %161) /* ty=Tensor[(2, 2240), float64] */;
  %168 = greater_equal(%165, %166) /* ty=Tensor[(10, 2240), bool] */;
  (%167, %168)
}

def @func_20347(%var_20329: Tensor[(2304), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2304), float32], Tensor[(16, 10, 14), float32]) {
  %169 = @func_16859() /* ty=(Tensor[(14), uint8],) */;
  %170 = @func_19869() /* ty=(Tensor[(16, 10, 14), float64],) */;
  %171 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %172 = cast(%var_20329, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %173 = reshape(%172, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %174 = @func_7074(%173) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %175 = @func_16632() /* ty=Tensor[(16, 10, 14), float64] */;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
  %177 = asin(%176) /* ty=Tensor[(16, 10, 14), float32] */;
  %178 = cast(%177, dtype="float64") /* ty=Tensor[(16, 10, 14), float64] */;
  %179 = rsqrt(%178) /* ty=Tensor[(16, 10, 14), float64] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
  %181 = @func_17580() /* ty=Tensor[(11, 4, 16), int8] */;
  %182 = %169.0;
  %183 = %170.0;
  %184 = %171.0;
  %185 = %174.2;
  %186 = log2(%180) /* ty=Tensor[(16, 10, 14), float32] */;
  (%181, %182, %183, %184, %185, %var_20329, %186)
}

def @func_21256(%var_21192: Tensor[(448), float32], %var_21193: Tensor[(1540), uint64], %var_21238: Tensor[(2112), int32]) -> (Tensor[(11, 4, 16), int8], Tensor[(448), float32], Tensor[(1540), uint64], Tensor[(14), uint8], Tensor[(14), uint8], Tensor[(10, 14, 11), int8], Tensor[(120), uint8], Tensor[(2112), int32], Tensor[(720), float32], Tensor[(10, 14, 11), float64]) {
  %187 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %188 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %189 = @func_15331() /* ty=(Tensor[(14), uint8],) */;
  %190 = cast(%var_21192, dtype="float32") /* ty=Tensor[(448), float32] */;
  %191 = cast(%var_21192, dtype="float32") /* ty=Tensor[(448), float32] */;
  %192 = cast(%var_21193, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %193 = cast(%var_21193, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %194 = reshape(%191, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
  %195 = reshape(%192, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %196 = reshape(%193, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %197 = @func_12731(%194, %195, %196) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */;
  %198 = %197.2;
  %199 = cast(%198, dtype="uint64") /* ty=Tensor[(10, 14, 11), uint64] */;
  %200 = cast(%198, dtype="uint64") /* ty=Tensor[(10, 14, 11), uint64] */;
  %201 = reshape(%190, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
  %202 = reshape(%199, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %203 = reshape(%200, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %204 = @func_12731(%201, %202, %203) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */;
  %205 = cast(%var_21238, dtype="int32") /* ty=Tensor[(2112), int32] */;
  %206 = cast(%var_21238, dtype="int32") /* ty=Tensor[(2112), int32] */;
  %207 = cast(meta[relay.Constant][17] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %208 = reshape(%205, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
  %209 = reshape(%206, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
  %210 = reshape(%207, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %211 = @func_4636(%208, %209, %210) /* ty=(Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) */;
  %212 = cast(%198, dtype="float64") /* ty=Tensor[(10, 14, 11), float64] */;
  %213 = %187.0;
  %214 = %188.1;
  %215 = %189.0;
  %216 = %204.2;
  %217 = %211.3;
  %218 = acosh(%212) /* ty=Tensor[(10, 14, 11), float64] */;
  (%213, %var_21192, %var_21193, %214, %215, %216, %217, %var_21238, meta[relay.Constant][17] /* ty=Tensor[(720), float32] */, %218)
}

def @func_5333(%var_5298: Tensor[(13, 1, 10), int16]) -> Tensor[(13, 1, 10), bool] {
  %219 = cast(meta[relay.Constant][18] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %220 = cast(%var_5298, dtype="bool") /* ty=Tensor[(13, 1, 10), bool] */;
  greater(%219, %220) /* ty=Tensor[(13, 1, 10), bool] */
}

def @func_15994() -> Tensor[(14), uint8] {
  %221 = @func_15331() /* ty=(Tensor[(14), uint8],) */;
  %221.0
}

def @func_12465() -> (Tensor[(11, 4, 16), int8],) {
  %222 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %223 = %222.0;
  (%223,)
}

def @func_15154(%var_15139: Tensor[(12), float64], %var_15147: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(1344), int8], Tensor[(1344), int8], Tensor[(11, 4, 16), float32], Tensor[(12), float64], Tensor[(450), int16], uint8, uint8) {
  %224 = @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %225 = cast(meta[relay.Constant][19] /* ty=Tensor[(1344), int8] */, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %226 = reshape(%225, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %227 = @func_5767(%226) /* ty=(Tensor[(11, 6, 5), int32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) */;
  %228 = cast(%var_15139, dtype="float64") /* ty=Tensor[(12), float64] */;
  %229 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %230 = reshape(%228, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %231 = reshape(%229, newshape=[1, 450]) /* ty=Tensor[(1, 450), int16] */;
  %232 = @func_14188(%230, %231) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(15, 2, 15), int16], Tensor[(1, 450), int16]) */;
  %233 = cast(%var_15147, dtype="uint8") /* ty=uint8 */;
  %234 = reshape(%233, newshape=[]) /* ty=uint8 */;
  %235 = @func_14908(%234) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(968), uint8], Tensor[(384), float64], uint8) */;
  %236 = %224.0;
  %237 = %227.2;
  %238 = %232.0;
  %239 = %235.3;
  (%236, %237, meta[relay.Constant][19] /* ty=Tensor[(1344), int8] */, %238, %var_15139, meta[relay.Constant][20] /* ty=Tensor[(450), int16] */, %239, %var_15147)
}

def @func_16754() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(14), uint8]) {
  %240 = @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %241 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %242 = %240.0;
  %243 = %241.1;
  %244 = @func_16650() /* ty=Tensor[(14), uint8] */;
  (%242, %243, %244)
}

def @func_16064() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %245 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %246 = %245.1;
  %247 = @func_13771() /* ty=Tensor[(11, 4, 16), int8] */;
  (%246, %247)
}

def @func_11876() -> Tensor[(11, 4, 16), int8] {
  %248 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %248.0
}

def @func_18990() -> Tensor[(11, 4, 16), int8] {
  @func_12557() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_13432(%var_13425: Tensor[(840), float32], %var_13428: Tensor[(120), uint8], %var_13429: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) {
  %249 = @func_12756() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %250 = cast(%var_13425, dtype="float32") /* ty=Tensor[(840), float32] */;
  %251 = cast(%var_13425, dtype="float32") /* ty=Tensor[(840), float32] */;
  %252 = cast(meta[relay.Constant][21] /* ty=Tensor[(168, 8), int8] */, dtype="int8") /* ty=Tensor[(168, 8), int8] */;
  %253 = cast(meta[relay.Constant][22] /* ty=Tensor[(968, 1), uint8] */, dtype="uint8") /* ty=Tensor[(968, 1), uint8] */;
  %254 = cast(%var_13428, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %255 = cast(%var_13429, dtype="int16") /* ty=Tensor[(130), int16] */;
  %256 = cast(meta[relay.Constant][23] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %257 = reshape(%250, newshape=[10, 14, 6]) /* ty=Tensor[(10, 14, 6), float32] */;
  %258 = reshape(%251, newshape=[10, 14, 6]) /* ty=Tensor[(10, 14, 6), float32] */;
  %259 = reshape(%252, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %260 = reshape(%253, newshape=[968]) /* ty=Tensor[(968), uint8] */;
  %261 = reshape(%254, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %262 = reshape(%255, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %263 = reshape(%256, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %264 = @func_12265(%257, %258, %259, %260, %261, %262, %263) /* ty=(Tensor[(10, 14, 6), float32], Tensor[(1, 6, 2), float64], Tensor[(1344), int8], Tensor[(12), float64], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8], Tensor[(10, 12, 1), uint16], Tensor[(120), uint8], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(120), uint8], Tensor[(216), uint8]) */;
  %265 = %249.0;
  %266 = %264.14;
  (%265, %266, %var_13425, meta[relay.Constant][21] /* ty=Tensor[(168, 8), int8] */, meta[relay.Constant][22] /* ty=Tensor[(968, 1), uint8] */, %var_13428, %var_13429, meta[relay.Constant][23] /* ty=Tensor[(216), uint8] */)
}

def @func_13707(%var_13702: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(13, 1, 10), bool], Tensor[(130), int16]) {
  %267 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %268 = cast(%var_13702, dtype="int16") /* ty=Tensor[(130), int16] */;
  %269 = reshape(%268, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), int16] */;
  %270 = %267.0;
  %271 = @func_5333(%269) /* ty=Tensor[(13, 1, 10), bool] */;
  (%270, %271, %var_13702)
}

def @func_17262() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  %272 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %273 = %272.0;
  %274 = @func_15725() /* ty=Tensor[(14), uint8] */;
  %275 = @func_16233() /* ty=Tensor[(11, 4, 16), int8] */;
  (%273, %274, %275)
}

def @func_129(%var_115: uint8, %var_116: Tensor[(10, 12, 1), uint8]) -> (Tensor[(10, 12, 1), uint16],) {
  %276 = cast(%var_115, dtype="uint8") /* ty=uint8 */;
  %277 = cast(%var_116, dtype="uint8") /* ty=Tensor[(10, 12, 1), uint8] */;
  %278 = bitwise_xor(%276, %277) /* ty=Tensor[(10, 12, 1), uint8] */;
  %279 = cast(%var_115, dtype="uint16") /* ty=uint16 */;
  %280 = cast(%278, dtype="uint16") /* ty=Tensor[(10, 12, 1), uint16] */;
  %281 = bitwise_or(%279, %280) /* ty=Tensor[(10, 12, 1), uint16] */;
  (%281,)
}

def @func_17580() -> Tensor[(11, 4, 16), int8] {
  %282 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %282.0
}

def @func_17793() -> Tensor[(2240), float64] {
  %283 = @func_17129() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(560, 4), float64]) */;
  %283.1
}

def @func_14427() -> Tensor[(11, 4, 16), int8] {
  %284 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %284.0
}

def @func_14492() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  %285 = @func_13269() /* ty=(Tensor[(14), uint8],) */;
  %286 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  %287 = %285.0;
  %288 = @func_13771() /* ty=Tensor[(11, 4, 16), int8] */;
  (%286, %287, %288)
}

def @func_13113(%var_13081: Tensor[(8, 7, 5), int32], %var_13082: Tensor[(8, 7, 5), int32], %var_13098: Tensor[(140, 16), float64], %var_13106: Tensor[(6, 60), float64]) -> (Tensor[(8, 7, 5), float64], Tensor[(2240), uint16], Tensor[(140, 16), float64], Tensor[(12, 5, 6), uint64], Tensor[(6, 60), float64]) {
  %289 = cast(%var_13082, dtype="int32") /* ty=Tensor[(8, 7, 5), int32] */;
  %290 = shape_of(%var_13081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_13081, dtype="int32") /* ty=Tensor[(8, 7, 5), int32] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %293 = right_shift(%291, %292) /* ty=Tensor[(8, 7, 5), int32] */;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(8, 7, 5), float64] */;
  %295 = cast(%var_13098, dtype="float64") /* ty=Tensor[(140, 16), float64] */;
  %296 = reshape(%295, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %297 = cast(%var_13106, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %298 = cast(%var_13106, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %299 = cast(%var_13106, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %300 = reshape(%297, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %301 = reshape(%298, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %302 = reshape(%299, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %303 = cosh(%294) /* ty=Tensor[(8, 7, 5), float64] */;
  %304 = @func_12348(%296) /* ty=Tensor[(2240), uint16] */;
  %305 = @func_8191(%300, %301, %302) /* ty=Tensor[(12, 5, 6), uint64] */;
  (%303, %304, %var_13098, %305, %var_13106)
}

def @func_13729() -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) {
  %306 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 2240), float64] */, dtype="float64") /* ty=Tensor[(1, 2240), float64] */;
  %307 = reshape(%306, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %308 = @func_12083(%307) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) */;
  %309 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  %310 = %308.1;
  (%309, %310, meta[relay.Constant][24] /* ty=Tensor[(1, 2240), float64] */)
}

def @func_13984(%var_13939: Tensor[(130), int16], %var_13949: Tensor[(1664), float32]) -> (Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(968, 1), uint8], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(1540), uint64], Tensor[(1664), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(10, 12, 1), uint16], uint8) {
  %311 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %312 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %313 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %314 = reshape(%312, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %315 = reshape(%313, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %316 = cast(meta[relay.Constant][26] /* ty=Tensor[(60, 14), float32] */, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %317 = cast(meta[relay.Constant][27] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %318 = cast(%var_13939, dtype="int16") /* ty=Tensor[(130), int16] */;
  %319 = reshape(%316, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %320 = reshape(%317, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %321 = reshape(%318, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %322 = @func_13432(%319, %320, %321) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */;
  %323 = cast(%var_13949, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %324 = cast(meta[relay.Constant][28] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %325 = cast(meta[relay.Constant][29] /* ty=Tensor[(1540), uint64] */, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %326 = reshape(%323, newshape=[8, 16, 13]) /* ty=Tensor[(8, 16, 13), float32] */;
  %327 = reshape(%324, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %328 = reshape(%325, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %329 = @func_6293(%326, %327, %328) /* ty=(Tensor[(8, 16, 13), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) */;
  %330 = cast(meta[relay.Constant][30] /* ty=Tensor[(704), int8] */, dtype="int8") /* ty=Tensor[(704), int8] */;
  %331 = reshape(%330, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), int8] */;
  %332 = @func_13054(%331) /* ty=(Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), int8]) */;
  %333 = cast(meta[relay.Constant][31] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %334 = cast(meta[relay.Constant][27] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %335 = reshape(%333, newshape=[]) /* ty=uint8 */;
  %336 = reshape(%334, newshape=[6, 20]) /* ty=Tensor[(6, 20), uint8] */;
  %337 = @func_11679(%335, %336) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) */;
  %338 = %311.3;
  %339 = @func_269(%314, %315) /* ty=Tensor[(14, 4, 6), bool] */;
  %340 = %322.4;
  %341 = %329.4;
  %342 = %332.1;
  %343 = %337.1;
  (%338, %339, meta[relay.Constant][25] /* ty=Tensor[(336), uint8] */, %340, meta[relay.Constant][26] /* ty=Tensor[(60, 14), float32] */, meta[relay.Constant][27] /* ty=Tensor[(120), uint8] */, %var_13939, %341, %var_13949, meta[relay.Constant][28] /* ty=Tensor[(352), int8] */, meta[relay.Constant][29] /* ty=Tensor[(1540), uint64] */, %342, meta[relay.Constant][30] /* ty=Tensor[(704), int8] */, %343, meta[relay.Constant][31] /* ty=uint8 */)
}

def @func_21623(%var_21617: Tensor[(12, 1), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(12, 1), float64], Tensor[(352), int8]) {
  %344 = @func_16472() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %345 = cast(%var_21617, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
  %346 = cast(meta[relay.Constant][32] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %347 = reshape(%345, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %348 = reshape(%346, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %349 = @func_15426(%347, %348) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %350 = %344.0;
  %351 = %349.5;
  (%350, %351, %var_21617, meta[relay.Constant][32] /* ty=Tensor[(352), int8] */)
}

def @func_21691() -> (Tensor[(11, 4, 16), int8],) {
  %352 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %353 = %352.0;
  (%353,)
}

def @func_14776() -> (Tensor[(14), uint8], Tensor[(?, 6, 2), bool]) {
  %354 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %355 = cast(meta[relay.Constant][33] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %356 = reshape(%355, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %357 = @func_4842(%356) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %358 = %357.0;
  %359 = cast(meta[relay.Constant][33] /* ty=Tensor[(12), float64] */, dtype="bool") /* ty=Tensor[(12), bool] */;
  %360 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%358, dtype="bool") /* ty=Tensor[(1, 6, 2), bool] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %363 = equal(%361, %362) /* ty=Tensor[(?, 6, 2), bool] */;
  %364 = cast(%358, dtype="bool") /* ty=Tensor[(1, 6, 2), bool] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="bool") /* ty=Tensor[(?, 6, 2), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = %354.1;
  %369 = greater(%366, %367) /* ty=Tensor[(?, 6, 2), bool] */;
  (%368, %369)
}

def @func_15678() -> Tensor[(11, 4, 16), int8] {
  %370 = @func_15449() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %370.0
}

def @func_4842(%var_4837: Tensor[(1, 6, 2), float64]) -> (Tensor[(1, 6, 2), float64],) {
  %371 = cast(5.96502f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %372 = cast(%var_4837, dtype="float64") /* ty=Tensor[(1, 6, 2), float64] */;
  %373 = floor_divide(%371, %372) /* ty=Tensor[(1, 6, 2), float64] */;
  (%373,)
}

def @func_269(%var_259: Tensor[(14, 4, 6), uint8], %var_260: Tensor[(14, 4, 6), uint8]) -> Tensor[(14, 4, 6), bool] {
  %374 = cast(%var_260, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
  %375 = shape_of(%var_259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%var_259, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%376, %377) /* ty=Tensor[(14, 4, 6), bool] */
}

def @func_11531() -> Tensor[(11, 4, 16), int8] {
  %378 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 4, 16), int8] */, dtype="int8") /* ty=Tensor[(11, 4, 16), int8] */;
  %379 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(11, 4, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 4, 16), int8] */, dtype="int8") /* ty=Tensor[(11, 4, 16), int8] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%380, %381) /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_13284(%var_13278: Tensor[(2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(2240), uint16], Tensor[(2240), float64]) {
  %382 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %383 = cast(%var_13278, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %384 = reshape(%383, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %385 = %382.0;
  %386 = @func_12348(%384) /* ty=Tensor[(2240), uint16] */;
  (%385, %386, %var_13278)
}

def @func_13350(%var_13336: Tensor[(11, 4, 16), int8]) -> (Tensor[(11, 4, 16), uint16],) {
  %387 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %388 = %387.0;
  %389 = cast(%var_13336, dtype="uint16") /* ty=Tensor[(11, 4, 16), uint16] */;
  %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%388, dtype="uint16") /* ty=Tensor[(11, 4, 16), uint16] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %393 = subtract(%391, %392) /* ty=Tensor[(11, 4, 16), uint16] */;
  (%393,)
}

def @func_8191(%var_8176: Tensor[(12, 5, 6), float64], %var_8177: Tensor[(12, 5, 6), float64], %var_8183: Tensor[(12, 5, 6), float64]) -> Tensor[(12, 5, 6), uint64] {
  %394 = cast(%var_8177, dtype="float64") /* ty=Tensor[(12, 5, 6), float64] */;
  %395 = shape_of(%var_8176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%var_8176, dtype="float64") /* ty=Tensor[(12, 5, 6), float64] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %398 = floor_divide(%396, %397) /* ty=Tensor[(12, 5, 6), float64] */;
  %399 = cast(%var_8183, dtype="uint64") /* ty=Tensor[(12, 5, 6), uint64] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="uint64") /* ty=Tensor[(12, 5, 6), uint64] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%401, %402) /* ty=Tensor[(12, 5, 6), uint64] */
}

def @func_2590(%var_2575: uint8, %var_2576: Tensor[(8, 11, 11), uint8]) -> (Tensor[(8, 11, 11), uint8],) {
  %403 = cast(%var_2575, dtype="uint8") /* ty=uint8 */;
  %404 = cast(%var_2576, dtype="uint8") /* ty=Tensor[(8, 11, 11), uint8] */;
  %405 = multiply(%403, %404) /* ty=Tensor[(8, 11, 11), uint8] */;
  (%405,)
}

def @func_13675() -> (Tensor[(11, 4, 16), int8],) {
  %406 = @func_13181() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) */;
  %407 = %406.0;
  (%407,)
}

def @func_18874(%var_18847: Tensor[(8, 15, 1), float64]) -> (Tensor[(8, 15, 1), float64], uint8) {
  %408 = cast(-0.657374f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %409 = cast(%var_18847, dtype="float64") /* ty=Tensor[(8, 15, 1), float64] */;
  %410 = cast(-0.657374f64 /* ty=float64 */, dtype="uint8") /* ty=uint8 */;
  %411 = cast(%var_18847, dtype="uint8") /* ty=Tensor[(8, 15, 1), uint8] */;
  %412 = reshape(%410, newshape=[]) /* ty=uint8 */;
  %413 = reshape(%411, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %414 = @func_17501(%412, %413) /* ty=(Tensor[(14), uint8], uint8, uint8, Tensor[(120), uint8]) */;
  %415 = power(%408, %409) /* ty=Tensor[(8, 15, 1), float64] */;
  %416 = %414.2;
  (%415, %416)
}

def @func_18504(%var_18462: Tensor[(2, 12, 10), int16], %var_18472: Tensor[(616), float32], %var_18484: Tensor[(130), int16], %var_18491: Tensor[(12, 42), int32], %var_18497: uint8) -> (Tensor[(2, 12, 10), int16], Tensor[(2, 12, 10), bool], Tensor[(660), float64], Tensor[(616), float32], Tensor[(660), float64], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(6, 12, 7), float32], Tensor[(12, 42), int32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8]) {
  %417 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 12, 10), int16] */, dtype="int16") /* ty=Tensor[(2, 12, 10), int16] */;
  %418 = shape_of(%var_18462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%var_18462, dtype="int16") /* ty=Tensor[(2, 12, 10), int16] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %421 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 12, 10), int16] */, dtype="bool") /* ty=Tensor[(2, 12, 10), bool] */;
  %422 = shape_of(%var_18462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%var_18462, dtype="bool") /* ty=Tensor[(2, 12, 10), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %425 = cast(%var_18472, dtype="float32") /* ty=Tensor[(616), float32] */;
  %426 = cast(meta[relay.Constant][37] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %427 = reshape(%425, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), float32] */;
  %428 = reshape(%426, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %429 = @func_1983(%427, %428) /* ty=(Tensor[(11, 4, 14), float32], Tensor[(6, 10, 11), float64], Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) */;
  %430 = cast(%var_18484, dtype="int16") /* ty=Tensor[(130), int16] */;
  %431 = cast(meta[relay.Constant][38] /* ty=Tensor[(1664), float32] */, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %432 = reshape(%430, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %433 = reshape(%431, newshape=[1664]) /* ty=Tensor[(1664), float32] */;
  %434 = @func_13984(%432, %433) /* ty=(Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(968, 1), uint8], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(1540), uint64], Tensor[(1664), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(10, 12, 1), uint16], uint8) */;
  %435 = cast(%var_18491, dtype="int32") /* ty=Tensor[(12, 42), int32] */;
  %436 = reshape(%435, newshape=[6, 12, 7]) /* ty=Tensor[(6, 12, 7), int32] */;
  %437 = @func_15952(%436) /* ty=(Tensor[(6, 12, 7), int32], Tensor[(6, 12, 7), float32]) */;
  %438 = cast(%var_18497, dtype="uint8") /* ty=uint8 */;
  %439 = cast(meta[relay.Constant][39] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %440 = reshape(%438, newshape=[]) /* ty=uint8 */;
  %441 = reshape(%439, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
  %442 = @func_129(%440, %441) /* ty=(Tensor[(10, 12, 1), uint16],) */;
  %443 = bitwise_xor(%419, %420) /* ty=Tensor[(2, 12, 10), int16] */;
  %444 = less_equal(%423, %424) /* ty=Tensor[(2, 12, 10), bool] */;
  %445 = %429.2;
  %446 = %434.7;
  %447 = %437.1;
  %448 = %442.0;
  (%443, %444, %445, %var_18472, meta[relay.Constant][37] /* ty=Tensor[(660), float64] */, %446, %var_18484, meta[relay.Constant][38] /* ty=Tensor[(1664), float32] */, %447, %var_18491, %448, %var_18497, meta[relay.Constant][39] /* ty=Tensor[(120), uint8] */)
}

def @func_1938(%var_1922: Tensor[(7, 16, 1), float64], %var_1923: Tensor[(7, 16, 9), float64], %var_1934: Tensor[(120), uint8]) -> (Tensor[(7, 16, 9), float64], Tensor[(6, 3, 12), uint8], Tensor[(720), float32], Tensor[(120), uint8]) {
  %449 = cast(%var_1922, dtype="float64") /* ty=Tensor[(7, 16, 1), float64] */;
  %450 = cast(%var_1923, dtype="float64") /* ty=Tensor[(7, 16, 9), float64] */;
  %451 = cast(meta[relay.Constant][40] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %452 = cast(%var_1934, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %453 = reshape(%451, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), float32] */;
  %454 = reshape(%452, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %455 = @func_1489(%453, %454) /* ty=(Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) */;
  %456 = subtract(%449, %450) /* ty=Tensor[(7, 16, 9), float64] */;
  %457 = %455.6;
  (%456, %457, meta[relay.Constant][40] /* ty=Tensor[(720), float32] */, %var_1934)
}

def @func_17469() -> (Tensor[(11, 4, 16), int8], Tensor[(10, 9, 11), bool], Tensor[(990), float64]) {
  %458 = cast(meta[relay.Constant][41] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %459 = reshape(%458, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), float64] */;
  %460 = @func_14676(%459) /* ty=(Tensor[(10, 9, 11), bool], Tensor[(10, 9, 11), uint64]) */;
  %461 = @func_15678() /* ty=Tensor[(11, 4, 16), int8] */;
  %462 = %460.0;
  (%461, %462, meta[relay.Constant][41] /* ty=Tensor[(990), float64] */)
}

def @func_1866(%var_1863: Tensor[(6, 10, 11), float64]) -> Tensor[(6, 10, 11), float64] {
  %463 = cast(%var_1863, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
  atanh(%463) /* ty=Tensor[(6, 10, 11), float64] */
}

def @func_12659(%var_12651: Tensor[(11, 4, 16), float64]) -> Tensor[(11, 4, 16), int32] {
  %464 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
  %467 = erf(%466) /* ty=Tensor[(11, 4, 16), float64] */;
  %468 = cast(%var_12651, dtype="int32") /* ty=Tensor[(11, 4, 16), int32] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%467, dtype="int32") /* ty=Tensor[(11, 4, 16), int32] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%470, %471) /* ty=Tensor[(11, 4, 16), int32] */
}

def @func_13181() -> (Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) {
  %472 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %473 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %474 = %473.1;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %476 = asinh(%475) /* ty=Tensor[(2240), float64] */;
  %477 = cast(%474, dtype="bool") /* ty=Tensor[(2240), bool] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(1), int32] */;
  %479 = cast(%476, dtype="bool") /* ty=Tensor[(2240), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?), bool] */;
  %481 = %472.0;
  %482 = greater_equal(%479, %480) /* ty=Tensor[(2240), bool] */;
  (%481, %482)
}

def @func_5624(%var_5613: Tensor[(10, 14, 11), uint64]) -> (Tensor[(10, 14, 11), uint64],) {
  %483 = cast(meta[relay.Constant][42] /* ty=Tensor[(10, 14, 11), uint64] */, dtype="uint64") /* ty=Tensor[(10, 14, 11), uint64] */;
  %484 = shape_of(%var_5613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%var_5613, dtype="uint64") /* ty=Tensor[(10, 14, 11), uint64] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %487 = multiply(%485, %486) /* ty=Tensor[(10, 14, 11), uint64] */;
  (%487,)
}

def @func_20529(%var_20489: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(448), float32], Tensor[(1540), uint64]) {
  %488 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %489 = cast(%var_20489, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %490 = reshape(%489, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %491 = @func_15104(%490) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64]) */;
  %492 = %488.1;
  %493 = %491.2;
  (%492, %493, %var_20489)
}

def @func_15426(%var_15396: Tensor[(12), float64], %var_15422: Tensor[(352), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) {
  %494 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %495 = cast(%var_15396, dtype="float64") /* ty=Tensor[(12), float64] */;
  %496 = reshape(%495, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %497 = @func_4842(%496) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %498 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
  %499 = cast(%var_15422, dtype="int8") /* ty=Tensor[(352), int8] */;
  %500 = reshape(%499, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
  %501 = %494.0;
  %502 = %497.0;
  %503 = %498.0;
  %504 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  %505 = @func_4810(%500) /* ty=Tensor[(11, 8, 4), bool] */;
  (%501, %502, %var_15396, %503, %504, %505, %var_15422)
}

def @func_11830() -> (Tensor[(11, 4, 16), int8],) {
  %506 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  (%506,)
}

def @func_16405(%var_16394: Tensor[(8, 44), int8], %var_16395: Tensor[(2304), float32]) -> (Tensor[(14), uint8], Tensor[(360), float64], Tensor[(11, 4, 16), uint16], Tensor[(704), int8], Tensor[(12, 5, 6), float32], Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2240), float64], Tensor[(8, 44), int8], Tensor[(2304), float32]) {
  %507 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
  %508 = cast(meta[relay.Constant][44] /* ty=Tensor[(704), int8] */, dtype="int8") /* ty=Tensor[(704), int8] */;
  %509 = reshape(%508, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), int8] */;
  %510 = @func_13350(%509) /* ty=(Tensor[(11, 4, 16), uint16],) */;
  %511 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %512 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %513 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %514 = reshape(%511, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %515 = reshape(%512, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %516 = reshape(%513, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %517 = @func_8191(%514, %515, %516) /* ty=Tensor[(12, 5, 6), uint64] */;
  %518 = cast(%517, dtype="float32") /* ty=Tensor[(12, 5, 6), float32] */;
  %519 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %520 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %521 = cast(meta[relay.Constant][45] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %522 = cast(%var_16394, dtype="int8") /* ty=Tensor[(8, 44), int8] */;
  %523 = cast(%var_16395, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %524 = reshape(%521, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %525 = reshape(%522, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %526 = reshape(%523, newshape=[8, 288]) /* ty=Tensor[(8, 288), float32] */;
  %527 = @func_7456(%524, %525, %526) /* ty=(Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) */;
  %528 = %507.0;
  %529 = %510.0;
  %530 = sin(%518) /* ty=Tensor[(12, 5, 6), float32] */;
  %531 = %519.0;
  %532 = %520.0;
  %533 = %527.3;
  (%528, meta[relay.Constant][43] /* ty=Tensor[(360), float64] */, %529, meta[relay.Constant][44] /* ty=Tensor[(704), int8] */, %530, %531, %532, %533, meta[relay.Constant][45] /* ty=Tensor[(2240), float64] */, %var_16394, %var_16395)
}

def @func_19137() -> (Tensor[(11, 4, 16), int8], Tensor[(120), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) {
  %534 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %535 = cast(meta[relay.Constant][46] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %536 = cast(meta[relay.Constant][47] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %537 = cast(meta[relay.Constant][48] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %538 = reshape(%535, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
  %539 = reshape(%536, newshape=[]) /* ty=uint8 */;
  %540 = reshape(%537, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %541 = @func_1081(%538, %539, %540) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
  %542 = %534.0;
  %543 = %541.3;
  (%542, %543, meta[relay.Constant][46] /* ty=Tensor[(216), uint8] */, meta[relay.Constant][47] /* ty=uint8 */, meta[relay.Constant][48] /* ty=Tensor[(120), uint8] */)
}

def @func_17613() -> (Tensor[(11, 4, 16), int8],) {
  %544 = @func_15198() /* ty=Tensor[(11, 4, 16), int8] */;
  (%544,)
}

def @func_4636(%var_4623: Tensor[(12, 11, 16), int32], %var_4624: Tensor[(12, 11, 16), int32], %var_4631: Tensor[(4, 180), float32]) -> (Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) {
  %545 = cast(%var_4624, dtype="int32") /* ty=Tensor[(12, 11, 16), int32] */;
  %546 = shape_of(%var_4623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%var_4623, dtype="int32") /* ty=Tensor[(12, 11, 16), int32] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %549 = cast(%var_4631, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %550 = cast(meta[relay.Constant][49] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %551 = reshape(%549, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), float32] */;
  %552 = reshape(%550, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %553 = @func_1489(%551, %552) /* ty=(Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) */;
  %554 = left_shift(%547, %548) /* ty=Tensor[(12, 11, 16), int32] */;
  %555 = %553.3;
  (%554, %555, %var_4631, meta[relay.Constant][49] /* ty=Tensor[(120), uint8] */)
}

def @func_14188(%var_14163: Tensor[(12), float64], %var_14180: Tensor[(1, 450), int16]) -> (Tensor[(11, 4, 16), float32], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(15, 2, 15), int16], Tensor[(1, 450), int16]) {
  %556 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %557 = %556.0;
  %558 = cast(%557, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %559 = cast(%var_14163, dtype="float64") /* ty=Tensor[(12), float64] */;
  %560 = reshape(%559, newshape=[1, 12]) /* ty=Tensor[(1, 12), float64] */;
  %561 = @func_12126(%560) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(1, 12), float64]) */;
  %562 = cast(%var_14180, dtype="int16") /* ty=Tensor[(1, 450), int16] */;
  %563 = reshape(%562, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), int16] */;
  %564 = @func_6581(%563) /* ty=(Tensor[(15, 2, 15), int16],) */;
  %565 = sinh(%558) /* ty=Tensor[(11, 4, 16), float32] */;
  %566 = %561.1;
  %567 = %564.0;
  (%565, %566, %var_14163, %567, %var_14180)
}

def @func_17864(%var_17856: uint64) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], uint64) {
  %568 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %569 = cast(%var_17856, dtype="uint64") /* ty=uint64 */;
  %570 = reshape(%569, newshape=[]) /* ty=uint64 */;
  %571 = @func_15917(%570) /* ty=(Tensor[(1, 13, 1), bool], Tensor[(11, 4, 16), int8]) */;
  %572 = @func_14427() /* ty=Tensor[(11, 4, 16), int8] */;
  %573 = @func_17806() /* ty=Tensor[(11, 4, 16), int8] */;
  %574 = %568.1;
  %575 = %571.1;
  (%572, %573, %574, %575, %var_17856)
}

def @func_18408(%var_18404: Tensor[(225, 14), bool]) -> (Tensor[(14), uint8], Tensor[(15, 15, 14), bool], Tensor[(225, 14), bool]) {
  %576 = @func_14776() /* ty=(Tensor[(14), uint8], Tensor[(?, 6, 2), bool]) */;
  %577 = cast(%var_18404, dtype="bool") /* ty=Tensor[(225, 14), bool] */;
  %578 = cast(%var_18404, dtype="bool") /* ty=Tensor[(225, 14), bool] */;
  %579 = reshape(%577, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %580 = reshape(%578, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %581 = @func_9363(%579, %580) /* ty=(Tensor[(15, 15, 14), bool],) */;
  %582 = %576.0;
  %583 = %581.0;
  (%582, %583, %var_18404)
}

def @func_14908(%var_14903: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(968), uint8], Tensor[(384), float64], uint8) {
  %584 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %585 = cast(meta[relay.Constant][50] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %586 = cast(%var_14903, dtype="uint8") /* ty=uint8 */;
  %587 = reshape(%585, newshape=[6, 16, 4]) /* ty=Tensor[(6, 16, 4), float64] */;
  %588 = reshape(%586, newshape=[]) /* ty=uint8 */;
  %589 = @func_11740(%587, %588) /* ty=(Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
  %590 = %584.0;
  %591 = %589.5;
  (%590, %591, meta[relay.Constant][50] /* ty=Tensor[(384), float64] */, %var_14903)
}

def @func_5977(%var_5955: Tensor[(8, 15, 7), float64], %var_5971: Tensor[(1344), int8], %var_5975: Tensor[(12), float64]) -> (Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) {
  %592 = cast(%var_5955, dtype="float64") /* ty=Tensor[(8, 15, 7), float64] */;
  %593 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(8, 15, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 15, 7), float64] */, dtype="float64") /* ty=Tensor[(8, 15, 7), float64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %596 = floor_divide(%594, %595) /* ty=Tensor[(8, 15, 7), float64] */;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(8, 15, 7), float32] */;
  %598 = cast(%var_5971, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %599 = cast(%var_5971, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %600 = reshape(%598, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %601 = reshape(%599, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %602 = cast(%var_5975, dtype="float64") /* ty=Tensor[(12), float64] */;
  %603 = reshape(%602, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %604 = @func_4842(%603) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %605 = sinh(%597) /* ty=Tensor[(8, 15, 7), float32] */;
  %606 = @func_2291(%600, %601) /* ty=Tensor[(6, 14, 16), int8] */;
  %607 = %604.0;
  (%605, %606, %var_5971, %607, %var_5975)
}

def @func_18176(%var_18172: Tensor[(15, 210), bool]) -> (Tensor[(14), uint8], Tensor[(15, 15, 14), bool], Tensor[(15, 210), float64]) {
  %608 = @func_17262() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %609 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 210), bool] */, dtype="bool") /* ty=Tensor[(15, 210), bool] */;
  %610 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 210), bool] */, dtype="bool") /* ty=Tensor[(15, 210), bool] */;
  %611 = reshape(%609, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %612 = reshape(%610, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %613 = @func_9363(%611, %612) /* ty=(Tensor[(15, 15, 14), bool],) */;
  %614 = cast(%var_18172, dtype="float64") /* ty=Tensor[(15, 210), float64] */;
  %615 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(15, 210), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %616 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 210), bool] */, dtype="float64") /* ty=Tensor[(15, 210), float64] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %618 = %608.1;
  %619 = %613.0;
  %620 = power(%616, %617) /* ty=Tensor[(15, 210), float64] */;
  (%618, %619, %620)
}

def @func_19655() -> (Tensor[(11, 4, 16), int8],) {
  %621 = @func_15449() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %622 = %621.0;
  (%622,)
}

def @func_18084() -> (Tensor[(11, 4, 16), int8],) {
  %623 = @func_16472() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %624 = %623.0;
  (%624,)
}

def @func_12126(%var_12119: Tensor[(1, 12), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(1, 12), float64]) {
  %625 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %626 = cast(%var_12119, dtype="float64") /* ty=Tensor[(1, 12), float64] */;
  %627 = reshape(%626, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %628 = @func_4842(%627) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %629 = %625.0;
  %630 = %628.0;
  (%629, %630, %var_12119)
}

def @func_12612() -> (Tensor[(11, 4, 16), int8],) {
  %631 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %632 = %631.0;
  (%632,)
}

def @func_12265(%var_12189: Tensor[(10, 14, 6), float32], %var_12190: Tensor[(10, 14, 6), float32], %var_12200: Tensor[(1344), int8], %var_12215: Tensor[(968), uint8], %var_12228: Tensor[(120), uint8], %var_12244: Tensor[(130), int16], %var_12252: Tensor[(216), uint8]) -> (Tensor[(10, 14, 6), float32], Tensor[(1, 6, 2), float64], Tensor[(1344), int8], Tensor[(12), float64], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8], Tensor[(10, 12, 1), uint16], Tensor[(120), uint8], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(120), uint8], Tensor[(216), uint8]) {
  %633 = cast(%var_12190, dtype="float32") /* ty=Tensor[(10, 14, 6), float32] */;
  %634 = shape_of(%var_12189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%var_12189, dtype="float32") /* ty=Tensor[(10, 14, 6), float32] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %637 = floor_divide(%635, %636) /* ty=Tensor[(10, 14, 6), float32] */;
  %638 = cast(%637, dtype="float64") /* ty=Tensor[(10, 14, 6), float64] */;
  %639 = cast(%var_12200, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %640 = cast(meta[relay.Constant][53] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %641 = reshape(%638, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float64] */;
  %642 = reshape(%639, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %643 = reshape(%640, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %644 = @func_5977(%641, %642, %643) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */;
  %645 = cast(meta[relay.Constant][54] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %646 = cast(%var_12215, dtype="uint8") /* ty=Tensor[(968), uint8] */;
  %647 = reshape(%645, newshape=[]) /* ty=uint8 */;
  %648 = reshape(%646, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), uint8] */;
  %649 = @func_2590(%647, %648) /* ty=(Tensor[(8, 11, 11), uint8],) */;
  %650 = cast(meta[relay.Constant][54] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %651 = cast(%var_12228, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %652 = reshape(%650, newshape=[]) /* ty=uint8 */;
  %653 = reshape(%651, newshape=[6, 20]) /* ty=Tensor[(6, 20), uint8] */;
  %654 = @func_11679(%652, %653) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) */;
  %655 = cast(meta[relay.Constant][55] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %656 = cast(meta[relay.Constant][55] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %657 = cast(meta[relay.Constant][55] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %658 = reshape(%655, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %659 = reshape(%656, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %660 = reshape(%657, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %661 = cast(%var_12244, dtype="int16") /* ty=Tensor[(130), int16] */;
  %662 = reshape(%661, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), int16] */;
  %663 = cast(%var_12252, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %664 = cast(meta[relay.Constant][54] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %665 = cast(%var_12228, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %666 = reshape(%663, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
  %667 = reshape(%664, newshape=[]) /* ty=uint8 */;
  %668 = reshape(%665, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %669 = @func_1081(%666, %667, %668) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
  %670 = %644.3;
  %671 = %649.0;
  %672 = %654.1;
  %673 = @func_8191(%658, %659, %660) /* ty=Tensor[(12, 5, 6), uint64] */;
  %674 = @func_5333(%662) /* ty=Tensor[(13, 1, 10), bool] */;
  %675 = %669.3;
  (%637, %670, %var_12200, meta[relay.Constant][53] /* ty=Tensor[(12), float64] */, %671, meta[relay.Constant][54] /* ty=uint8 */, %var_12215, %672, %var_12228, %673, meta[relay.Constant][55] /* ty=Tensor[(360), float64] */, %674, %var_12244, %675, %var_12252)
}

def @func_20700() -> (Tensor[(990), float64],) {
  %676 = @func_18049() /* ty=Tensor[(990), float64] */;
  (%676,)
}

def @func_12731(%var_12688: Tensor[(4, 14, 8), float32], %var_12702: Tensor[(1540), uint64], %var_12722: Tensor[(10, 14, 11), uint64]) -> (Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) {
  %677 = cast(%var_12688, dtype="float32") /* ty=Tensor[(4, 14, 8), float32] */;
  %678 = cast(%var_12702, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %679 = reshape(%678, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %680 = @func_5624(%679) /* ty=(Tensor[(10, 14, 11), uint64],) */;
  %681 = %680.0;
  %682 = cast(%var_12722, dtype="int8") /* ty=Tensor[(10, 14, 11), int8] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="int8") /* ty=Tensor[(10, 14, 11), int8] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %686 = acosh(%677) /* ty=Tensor[(4, 14, 8), float32] */;
  %687 = add(%684, %685) /* ty=Tensor[(10, 14, 11), int8] */;
  (%686, %var_12702, %687)
}

def @func_15659(%var_15620: Tensor[(1344), int8], %var_15647: Tensor[(120), uint8]) -> (Tensor[(616), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(1344), int8], Tensor[(840), float32], Tensor[(968), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8], Tensor[(10, 14, 11), uint64], Tensor[(1, 1540), uint64]) {
  %688 = cast(%var_15620, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %689 = cast(%var_15620, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %690 = reshape(%688, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %691 = reshape(%689, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %692 = cast(meta[relay.Constant][56] /* ty=Tensor[(704), int8] */, dtype="int8") /* ty=Tensor[(704), int8] */;
  %693 = reshape(%692, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), int8] */;
  %694 = @func_13054(%693) /* ty=(Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), int8]) */;
  %695 = cast(meta[relay.Constant][57] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %696 = cast(meta[relay.Constant][57] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %697 = @func_2291(%690, %691) /* ty=Tensor[(6, 14, 16), int8] */;
  %698 = cast(%697, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %699 = cast(meta[relay.Constant][58] /* ty=Tensor[(968), uint8] */, dtype="uint8") /* ty=Tensor[(968), uint8] */;
  %700 = cast(%var_15647, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %701 = cast(meta[relay.Constant][59] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %702 = cast(meta[relay.Constant][60] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %703 = reshape(%695, newshape=[10, 14, 6]) /* ty=Tensor[(10, 14, 6), float32] */;
  %704 = reshape(%696, newshape=[10, 14, 6]) /* ty=Tensor[(10, 14, 6), float32] */;
  %705 = reshape(%698, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %706 = reshape(%699, newshape=[968]) /* ty=Tensor[(968), uint8] */;
  %707 = reshape(%700, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %708 = reshape(%701, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %709 = reshape(%702, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %710 = @func_12265(%703, %704, %705, %706, %707, %708, %709) /* ty=(Tensor[(10, 14, 6), float32], Tensor[(1, 6, 2), float64], Tensor[(1344), int8], Tensor[(12), float64], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8], Tensor[(10, 12, 1), uint16], Tensor[(120), uint8], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(120), uint8], Tensor[(216), uint8]) */;
  %711 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 1540), uint64] */, dtype="uint64") /* ty=Tensor[(1, 1540), uint64] */;
  %712 = reshape(%711, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %713 = @func_5624(%712) /* ty=(Tensor[(10, 14, 11), uint64],) */;
  %714 = @func_14704() /* ty=Tensor[(616), float32] */;
  %715 = %694.1;
  %716 = %710.2;
  %717 = %713.0;
  (%714, %697, %var_15620, %715, meta[relay.Constant][56] /* ty=Tensor[(704), int8] */, %716, meta[relay.Constant][57] /* ty=Tensor[(840), float32] */, meta[relay.Constant][58] /* ty=Tensor[(968), uint8] */, %var_15647, meta[relay.Constant][59] /* ty=Tensor[(130), int16] */, meta[relay.Constant][60] /* ty=Tensor[(216), uint8] */, %717, meta[relay.Constant][61] /* ty=Tensor[(1, 1540), uint64] */)
}

def @func_16539() -> (Tensor[(14), uint8], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) {
  %718 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %719 = cast(meta[relay.Constant][62] /* ty=Tensor[(1344), int8] */, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %720 = cast(meta[relay.Constant][62] /* ty=Tensor[(1344), int8] */, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %721 = reshape(%719, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %722 = reshape(%720, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %723 = %718.1;
  %724 = @func_2291(%721, %722) /* ty=Tensor[(6, 14, 16), int8] */;
  (%723, %724, meta[relay.Constant][62] /* ty=Tensor[(1344), int8] */)
}

def @func_20642() -> Tensor[(11, 4, 16), int8] {
  %725 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %725.0
}

def @func_17910(%var_17899: Tensor[(840), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(840), float32], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(13, 10), int16]) {
  %726 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %727 = cast(%var_17899, dtype="float32") /* ty=Tensor[(840), float32] */;
  %728 = cast(meta[relay.Constant][63] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %729 = cast(meta[relay.Constant][64] /* ty=Tensor[(13, 10), int16] */, dtype="int16") /* ty=Tensor[(13, 10), int16] */;
  %730 = reshape(%727, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %731 = reshape(%728, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %732 = reshape(%729, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %733 = @func_13432(%730, %731, %732) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */;
  %734 = %726.0;
  %735 = @func_17285() /* ty=Tensor[(11, 4, 16), int8] */;
  %736 = %733.2;
  (%734, %735, %736, %var_17899, meta[relay.Constant][63] /* ty=Tensor[(120), uint8] */, meta[relay.Constant][64] /* ty=Tensor[(13, 10), int16] */)
}

def @func_16650() -> Tensor[(14), uint8] {
  %737 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %737.1
}

def @func_20389(%var_20383: Tensor[(2, 168), uint8]) -> (Tensor[(11, 4, 16), int8], Tensor[(384), float64], uint8, Tensor[(14, 4, 6), bool], Tensor[(2, 168), uint8]) {
  %738 = @func_16488() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %739 = cast(meta[relay.Constant][65] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %740 = reshape(%739, newshape=[]) /* ty=uint8 */;
  %741 = @func_14908(%740) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(968), uint8], Tensor[(384), float64], uint8) */;
  %742 = cast(%var_20383, dtype="uint8") /* ty=Tensor[(2, 168), uint8] */;
  %743 = cast(%var_20383, dtype="uint8") /* ty=Tensor[(2, 168), uint8] */;
  %744 = reshape(%742, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %745 = reshape(%743, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %746 = %738.0;
  %747 = %741.2;
  %748 = @func_269(%744, %745) /* ty=Tensor[(14, 4, 6), bool] */;
  (%746, %747, meta[relay.Constant][65] /* ty=uint8 */, %748, %var_20383)
}

def @func_17657() -> (Tensor[(14), uint8],) {
  %749 = @func_15994() /* ty=Tensor[(14), uint8] */;
  (%749,)
}

def @func_19840() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %750 = @func_17262() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %751 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %752 = %750.0;
  %753 = %751.6;
  (%752, %753)
}

def @func_19912() -> (Tensor[(11, 4, 16), int8],) {
  %754 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  (%754,)
}

def @func_11740(%var_11715: Tensor[(6, 16, 4), float64], %var_11722: uint8) -> (Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) {
  %755 = cast(%var_11715, dtype="float64") /* ty=Tensor[(6, 16, 4), float64] */;
  %756 = cast(meta[relay.Constant][66] /* ty=Tensor[(3150), bool] */, dtype="bool") /* ty=Tensor[(3150), bool] */;
  %757 = cast(meta[relay.Constant][66] /* ty=Tensor[(3150), bool] */, dtype="bool") /* ty=Tensor[(3150), bool] */;
  %758 = reshape(%756, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %759 = reshape(%757, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %760 = @func_9363(%758, %759) /* ty=(Tensor[(15, 15, 14), bool],) */;
  %761 = cast(%var_11722, dtype="uint8") /* ty=uint8 */;
  %762 = cast(meta[relay.Constant][67] /* ty=Tensor[(968), uint8] */, dtype="uint8") /* ty=Tensor[(968), uint8] */;
  %763 = reshape(%761, newshape=[]) /* ty=uint8 */;
  %764 = reshape(%762, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), uint8] */;
  %765 = @func_2590(%763, %764) /* ty=(Tensor[(8, 11, 11), uint8],) */;
  %766 = log(%755) /* ty=Tensor[(6, 16, 4), float64] */;
  %767 = %760.0;
  %768 = %765.0;
  (%766, %767, meta[relay.Constant][66] /* ty=Tensor[(3150), bool] */, %768, %var_11722, meta[relay.Constant][67] /* ty=Tensor[(968), uint8] */)
}

def @func_6906(%var_6894: Tensor[(15, 13, 1), float64]) -> (Tensor[(15, 13, 1), float64],) {
  %769 = cast(%var_6894, dtype="float64") /* ty=Tensor[(15, 13, 1), float64] */;
  %770 = sqrt(%769) /* ty=Tensor[(15, 13, 1), float64] */;
  (%770,)
}

def @func_8236(%var_8215: Tensor[(12, 9, 6), float64], %var_8219: Tensor[(195), float64], %var_8231: Tensor[(2, 420), float64], %var_8232: Tensor[(1344), int8], %var_8233: Tensor[(12), float64]) -> (Tensor[(12, 9, 6), float64], Tensor[(15, 13, 1), float64], Tensor[(195), float64], Tensor[(12), float64], Tensor[(2, 420), float64], Tensor[(1344), int8], Tensor[(12), float64]) {
  %771 = cast(%var_8215, dtype="float64") /* ty=Tensor[(12, 9, 6), float64] */;
  %772 = cast(%var_8219, dtype="float64") /* ty=Tensor[(195), float64] */;
  %773 = reshape(%772, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float64] */;
  %774 = @func_6906(%773) /* ty=(Tensor[(15, 13, 1), float64],) */;
  %775 = cast(%var_8231, dtype="float64") /* ty=Tensor[(2, 420), float64] */;
  %776 = cast(%var_8232, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %777 = cast(%var_8233, dtype="float64") /* ty=Tensor[(12), float64] */;
  %778 = reshape(%775, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float64] */;
  %779 = reshape(%776, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %780 = reshape(%777, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %781 = @func_5977(%778, %779, %780) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */;
  %782 = acosh(%771) /* ty=Tensor[(12, 9, 6), float64] */;
  %783 = %774.0;
  %784 = %781.4;
  (%782, %783, %var_8219, %784, %var_8231, %var_8232, %var_8233)
}

def @func_12532() -> (Tensor[(11, 4, 16), int8],) {
  %785 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %786 = %785.0;
  (%786,)
}

def @func_19994() -> Tensor[(11, 4, 16), int8] {
  %787 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %787.0
}

def @func_17129() -> (Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(560, 4), float64]) {
  %788 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %789 = cast(meta[relay.Constant][68] /* ty=Tensor[(560, 4), float64] */, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
  %790 = reshape(%789, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %791 = @func_13284(%790) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), uint16], Tensor[(2240), float64]) */;
  %792 = %788.0;
  %793 = %791.2;
  (%792, %793, meta[relay.Constant][68] /* ty=Tensor[(560, 4), float64] */)
}

def @func_14704() -> Tensor[(616), float32] {
  %794 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %794.2
}

def @func_16588() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %795 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %796 = %795.0;
  %797 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  (%796, %797)
}

def @func_16827(%var_16823: Tensor[(280), int32], %var_16825: Tensor[(360), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(12, 5, 6), uint64], Tensor[(280), int32], Tensor[(2240), float64], Tensor[(360), float64]) {
  %798 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %799 = cast(%var_16823, dtype="int32") /* ty=Tensor[(280), int32] */;
  %800 = cast(%var_16823, dtype="int32") /* ty=Tensor[(280), int32] */;
  %801 = cast(meta[relay.Constant][69] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %802 = cast(%var_16825, dtype="float64") /* ty=Tensor[(360), float64] */;
  %803 = reshape(%799, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), int32] */;
  %804 = reshape(%800, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), int32] */;
  %805 = reshape(%801, newshape=[140, 16]) /* ty=Tensor[(140, 16), float64] */;
  %806 = reshape(%802, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
  %807 = @func_13113(%803, %804, %805, %806) /* ty=(Tensor[(8, 7, 5), float64], Tensor[(2240), uint16], Tensor[(140, 16), float64], Tensor[(12, 5, 6), uint64], Tensor[(6, 60), float64]) */;
  %808 = %798.0;
  %809 = %807.3;
  (%808, %809, %var_16823, meta[relay.Constant][69] /* ty=Tensor[(2240), float64] */, %var_16825)
}

def @func_19191() -> (Tensor[(2240), bool],) {
  %810 = @func_13181() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) */;
  %811 = %810.1;
  (%811,)
}

def @func_21805() -> Tensor[(11, 4, 16), int8] {
  @func_16233() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_21406() -> Tensor[(11, 4, 16), int8] {
  @func_17580() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_9944(%var_9896: Tensor[(10, 1, 14), float32], %var_9897: Tensor[(10, 6, 14), float32], %var_9909: Tensor[(1540), uint64], %var_9924: Tensor[(216), uint8], %var_9925: uint8) -> (Tensor[(10, 6, 14), bool], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64], Tensor[(6, 3, 12), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(120), uint8]) {
  %812 = cast(%var_9896, dtype="bool") /* ty=Tensor[(10, 1, 14), bool] */;
  %813 = cast(%var_9897, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %814 = cast(meta[relay.Constant][70] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %815 = cast(meta[relay.Constant][70] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %816 = cast(meta[relay.Constant][70] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %817 = reshape(%814, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %818 = reshape(%815, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %819 = reshape(%816, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %820 = cast(%var_9909, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %821 = reshape(%820, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %822 = @func_5624(%821) /* ty=(Tensor[(10, 14, 11), uint64],) */;
  %823 = cast(%var_9924, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %824 = cast(%var_9925, dtype="uint8") /* ty=uint8 */;
  %825 = cast(meta[relay.Constant][71] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %826 = reshape(%823, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
  %827 = reshape(%824, newshape=[]) /* ty=uint8 */;
  %828 = reshape(%825, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %829 = @func_1081(%826, %827, %828) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
  %830 = cast(%var_9924, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %831 = cast(%var_9925, dtype="uint8") /* ty=uint8 */;
  %832 = cast(meta[relay.Constant][71] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %833 = reshape(%830, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
  %834 = reshape(%831, newshape=[]) /* ty=uint8 */;
  %835 = reshape(%832, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %836 = @func_1081(%833, %834, %835) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
  %837 = greater_equal(%812, %813) /* ty=Tensor[(10, 6, 14), bool] */;
  %838 = @func_8191(%817, %818, %819) /* ty=Tensor[(12, 5, 6), uint64] */;
  %839 = %822.0;
  %840 = %829.0;
  %841 = %836.3;
  (%837, %838, meta[relay.Constant][70] /* ty=Tensor[(360), float64] */, %839, %var_9909, %840, %var_9924, %var_9925, meta[relay.Constant][71] /* ty=Tensor[(120), uint8] */, %841)
}

def @func_9363(%var_9350: Tensor[(15, 15, 14), bool], %var_9351: Tensor[(15, 15, 14), bool]) -> (Tensor[(15, 15, 14), bool],) {
  %842 = cast(%var_9351, dtype="bool") /* ty=Tensor[(15, 15, 14), bool] */;
  %843 = shape_of(%var_9350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%var_9350, dtype="bool") /* ty=Tensor[(15, 15, 14), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %846 = logical_or(%844, %845) /* ty=Tensor[(15, 15, 14), bool] */;
  (%846,)
}

def @func_20781() -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) {
  %847 = @func_16488() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %848 = @func_19681() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) */;
  %849 = %847.0;
  %850 = %848.1;
  (%849, %850)
}

def @func_16472() -> (Tensor[(11, 4, 16), int8],) {
  %851 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %852 = %851.0;
  (%852,)
}

def @func_6581(%var_6575: Tensor[(15, 2, 15), int16]) -> (Tensor[(15, 2, 15), int16],) {
  %853 = cast(meta[relay.Constant][72] /* ty=Tensor[(15, 2, 1), int16] */, dtype="int16") /* ty=Tensor[(15, 2, 1), int16] */;
  %854 = cast(%var_6575, dtype="int16") /* ty=Tensor[(15, 2, 15), int16] */;
  %855 = bitwise_or(%853, %854) /* ty=Tensor[(15, 2, 15), int16] */;
  (%855,)
}

def @func_12557() -> Tensor[(11, 4, 16), int8] {
  %856 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %856.0
}

def @func_21071() -> (Tensor[(11, 4, 16), int8], Tensor[(6, 16, 4), float64], Tensor[(384), float64]) {
  %857 = @func_20626() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %858 = cast(meta[relay.Constant][73] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %859 = reshape(%858, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %860 = @func_19591(%859) /* ty=(Tensor[(120), uint8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) */;
  %861 = %857.0;
  %862 = %860.1;
  (%861, %862, meta[relay.Constant][73] /* ty=Tensor[(384), float64] */)
}

def @func_21675() -> Tensor[(11, 4, 16), int8] {
  %863 = @func_20626() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %863.0
}

def @func_15379(%var_15356: Tensor[(11, 4, 16), int8]) -> (Tensor[(352), int8], Tensor[(16, 144), float32], Tensor[(11, 4, 16), float32]) {
  %864 = cast(meta[relay.Constant][74] /* ty=Tensor[(16, 144), float32] */, dtype="float32") /* ty=Tensor[(16, 144), float32] */;
  %865 = reshape(%864, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %866 = @func_7074(%865) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %867 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %868 = %867.0;
  %869 = cast(%var_15356, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%868, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %873 = %866.2;
  %874 = mod(%871, %872) /* ty=Tensor[(11, 4, 16), float32] */;
  (%873, meta[relay.Constant][74] /* ty=Tensor[(16, 144), float32] */, %874)
}

def @func_19973(%var_19961: Tensor[(280), int32], %var_19963: Tensor[(360), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(140, 16), float64], Tensor[(280), int32], Tensor[(2240, 360), uint32]) {
  %875 = cast(%var_19961, dtype="int32") /* ty=Tensor[(280), int32] */;
  %876 = cast(%var_19961, dtype="int32") /* ty=Tensor[(280), int32] */;
  %877 = cast(meta[relay.Constant][75] /* ty=Tensor[(2240, 1), float64] */, dtype="float64") /* ty=Tensor[(2240, 1), float64] */;
  %878 = cast(%var_19963, dtype="float64") /* ty=Tensor[(360), float64] */;
  %879 = reshape(%875, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), int32] */;
  %880 = reshape(%876, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), int32] */;
  %881 = reshape(%877, newshape=[140, 16]) /* ty=Tensor[(140, 16), float64] */;
  %882 = reshape(%878, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
  %883 = @func_13113(%879, %880, %881, %882) /* ty=(Tensor[(8, 7, 5), float64], Tensor[(2240), uint16], Tensor[(140, 16), float64], Tensor[(12, 5, 6), uint64], Tensor[(6, 60), float64]) */;
  %884 = cast(meta[relay.Constant][75] /* ty=Tensor[(2240, 1), float64] */, dtype="uint32") /* ty=Tensor[(2240, 1), uint32] */;
  %885 = cast(%var_19963, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %886 = @func_17806() /* ty=Tensor[(11, 4, 16), int8] */;
  %887 = %883.2;
  %888 = right_shift(%884, %885) /* ty=Tensor[(2240, 360), uint32] */;
  (%886, %887, %var_19961, %888)
}

def @func_8075(%var_8049: Tensor[(13, 15, 12), float32], %var_8056: Tensor[(130), int16], %var_8062: Tensor[(1540), uint64]) -> (Tensor[(13, 15, 12), float32], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) {
  %889 = cast(%var_8049, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
  %890 = cast(%var_8056, dtype="int16") /* ty=Tensor[(130), int16] */;
  %891 = reshape(%890, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), int16] */;
  %892 = cast(%var_8062, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %893 = reshape(%892, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %894 = @func_5624(%893) /* ty=(Tensor[(10, 14, 11), uint64],) */;
  %895 = rsqrt(%889) /* ty=Tensor[(13, 15, 12), float32] */;
  %896 = @func_5333(%891) /* ty=Tensor[(13, 1, 10), bool] */;
  %897 = %894.0;
  (%895, %896, %var_8056, %897, %var_8062)
}

def @func_13269() -> (Tensor[(14), uint8],) {
  %898 = @func_12850() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(6, 2, 7), bool], Tensor[(14), uint8], Tensor[(84), uint8]) */;
  %899 = %898.2;
  (%899,)
}

def @func_14399() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) {
  %900 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %901 = @func_13269() /* ty=(Tensor[(14), uint8],) */;
  %902 = %900.0;
  %903 = %901.0;
  (%902, %903)
}

def @func_15217() -> (Tensor[(11, 4, 16), int8],) {
  %904 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %905 = %904.0;
  (%905,)
}

def @func_12972(%var_12957: Tensor[(450), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(15, 2, 15), int16], Tensor[(450), int16]) {
  %906 = cast(%var_12957, dtype="int16") /* ty=Tensor[(450), int16] */;
  %907 = reshape(%906, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), int16] */;
  %908 = @func_6581(%907) /* ty=(Tensor[(15, 2, 15), int16],) */;
  %909 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  %910 = %908.0;
  (%909, %910, %var_12957)
}

def @func_19033() -> (Tensor[(14), uint8], Tensor[(10, 9, 11), bool], Tensor[(990), float64], Tensor[(11, 4, 16), int8], Tensor[(616), float32]) {
  %911 = cast(meta[relay.Constant][76] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %912 = reshape(%911, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), float64] */;
  %913 = @func_14676(%912) /* ty=(Tensor[(10, 9, 11), bool], Tensor[(10, 9, 11), uint64]) */;
  %914 = @func_16650() /* ty=Tensor[(14), uint8] */;
  %915 = %913.0;
  %916 = @func_11876() /* ty=Tensor[(11, 4, 16), int8] */;
  %917 = @func_14704() /* ty=Tensor[(616), float32] */;
  (%914, %915, meta[relay.Constant][76] /* ty=Tensor[(990), float64] */, %916, %917)
}

def @func_15530() -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) {
  %918 = cast(meta[relay.Constant][77] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %919 = cast(meta[relay.Constant][78] /* ty=Tensor[(968), uint8] */, dtype="uint8") /* ty=Tensor[(968), uint8] */;
  %920 = reshape(%918, newshape=[]) /* ty=uint8 */;
  %921 = reshape(%919, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), uint8] */;
  %922 = @func_2590(%920, %921) /* ty=(Tensor[(8, 11, 11), uint8],) */;
  %923 = @func_13771() /* ty=Tensor[(11, 4, 16), int8] */;
  %924 = %922.0;
  (%923, %924, meta[relay.Constant][77] /* ty=uint8 */, meta[relay.Constant][78] /* ty=Tensor[(968), uint8] */)
}

def @func_18261(%var_18255: Tensor[(840), float32], %var_18256: Tensor[(120), uint8], %var_18257: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130), int16]) {
  %925 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %926 = cast(%var_18255, dtype="float32") /* ty=Tensor[(840), float32] */;
  %927 = cast(%var_18256, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %928 = cast(%var_18257, dtype="int16") /* ty=Tensor[(130), int16] */;
  %929 = reshape(%926, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %930 = reshape(%927, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %931 = reshape(%928, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %932 = @func_13432(%929, %930, %931) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */;
  %933 = %925.0;
  %934 = %932.7;
  (%933, %934, %var_18255, %var_18256, %var_18257)
}

def @func_18021() -> Tensor[(8, 11, 11), float64] {
  %935 = @func_15530() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
  %936 = %935.1;
  %937 = cast(%936, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
  erf(%937) /* ty=Tensor[(8, 11, 11), float64] */
}

def @func_14076(%var_14055: Tensor[(14, 16, 14), uint16], %var_14056: Tensor[(14, 16, 14), uint16]) -> (Tensor[(14, 16, 14), uint16], Tensor[(11, 4, 16), int8]) {
  %938 = cast(%var_14056, dtype="uint16") /* ty=Tensor[(14, 16, 14), uint16] */;
  %939 = shape_of(%var_14055, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%var_14055, dtype="uint16") /* ty=Tensor[(14, 16, 14), uint16] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %942 = subtract(%940, %941) /* ty=Tensor[(14, 16, 14), uint16] */;
  %943 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  (%942, %943)
}

def @func_19508() -> (Tensor[(8, 11, 11), float64],) {
  %944 = @func_18021() /* ty=Tensor[(8, 11, 11), float64] */;
  (%944,)
}

def @func_20054(%var_20050: uint8) -> (Tensor[(11, 4, 16), int8], uint8, uint8, Tensor[(120), uint8]) {
  %945 = cast(%var_20050, dtype="uint8") /* ty=uint8 */;
  %946 = cast(meta[relay.Constant][79] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %947 = reshape(%945, newshape=[]) /* ty=uint8 */;
  %948 = reshape(%946, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %949 = @func_17501(%947, %948) /* ty=(Tensor[(14), uint8], uint8, uint8, Tensor[(120), uint8]) */;
  %950 = @func_15198() /* ty=Tensor[(11, 4, 16), int8] */;
  %951 = %949.1;
  (%950, %951, %var_20050, meta[relay.Constant][79] /* ty=Tensor[(120), uint8] */)
}

def @func_18813() -> (Tensor[(11, 4, 16), int8],) {
  %952 = @func_18084() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %953 = %952.0;
  (%953,)
}

def @func_21007() -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(616), float32], Tensor[(1664), float32], Tensor[(11, 4, 16), int8]) {
  %954 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %955 = @func_18844() /* ty=(Tensor[(16, 10, 14), float64],) */;
  %956 = cast(meta[relay.Constant][80] /* ty=Tensor[(1664), float32] */, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %957 = reshape(%956, newshape=[1664]) /* ty=Tensor[(1664), float32] */;
  %958 = @func_18647(%957) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(616), float32]) */;
  %959 = @func_20149() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %960 = %954.0;
  %961 = %955.0;
  %962 = %958.4;
  %963 = %959.0;
  (%960, %961, %962, meta[relay.Constant][80] /* ty=Tensor[(1664), float32] */, %963)
}

def @func_15104(%var_15084: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64]) {
  %964 = @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %965 = cast(meta[relay.Constant][81] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %966 = cast(%var_15084, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %967 = cast(%var_15084, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %968 = reshape(%965, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
  %969 = reshape(%966, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %970 = reshape(%967, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %971 = @func_12731(%968, %969, %970) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */;
  %972 = %964.0;
  %973 = %971.1;
  (%972, %973, meta[relay.Constant][81] /* ty=Tensor[(448), float32] */, %var_15084)
}

def @func_20227() -> (Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %974 = @func_14776() /* ty=(Tensor[(14), uint8], Tensor[(?, 6, 2), bool]) */;
  %975 = @func_20130() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %976 = %974.0;
  %977 = @func_16682() /* ty=Tensor[(11, 4, 16), int8] */;
  %978 = %975.0;
  (%976, %977, %978)
}

def @func_13625(%var_13622: Tensor[(2304), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) {
  %979 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %980 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %981 = cast(%var_13622, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %982 = reshape(%981, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %983 = @func_7074(%982) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %984 = %979.0;
  %985 = %980.0;
  %986 = %983.0;
  (%984, %985, %986, %var_13622)
}

def @func_16488() -> (Tensor[(11, 4, 16), int8],) {
  %987 = @func_16233() /* ty=Tensor[(11, 4, 16), int8] */;
  (%987,)
}

def @func_13401() -> Tensor[(11, 4, 16), int8] {
  %988 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %988.0
}

def @func_11679(%var_11670: uint8, %var_11671: Tensor[(6, 20), uint8]) -> (Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) {
  %989 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  %990 = cast(%989, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %991 = cast(%var_11670, dtype="uint8") /* ty=uint8 */;
  %992 = cast(%var_11671, dtype="uint8") /* ty=Tensor[(6, 20), uint8] */;
  %993 = reshape(%991, newshape=[]) /* ty=uint8 */;
  %994 = reshape(%992, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
  %995 = @func_129(%993, %994) /* ty=(Tensor[(10, 12, 1), uint16],) */;
  %996 = acosh(%990) /* ty=Tensor[(11, 4, 16), float32] */;
  %997 = %995.0;
  (%996, %997, %var_11670, %var_11671)
}

def @func_16963() -> Tensor[(11, 4, 16), int8] {
  @func_15678() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_21321(%var_21299: Tensor[(14, 4, 1), float32], %var_21300: Tensor[(14, 4, 4), float32]) -> (Tensor[(14, 4, 4), float32], Tensor[(11, 4, 16), int8], Tensor[(840), float32]) {
  %998 = cast(%var_21299, dtype="float32") /* ty=Tensor[(14, 4, 1), float32] */;
  %999 = cast(%var_21300, dtype="float32") /* ty=Tensor[(14, 4, 4), float32] */;
  %1000 = cast(meta[relay.Constant][82] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1001 = reshape(%1000, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1002 = @func_14357(%1001) /* ty=(Tensor[(1, 2240), float64], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130, 840), float32]) */;
  %1003 = floor_mod(%998, %999) /* ty=Tensor[(14, 4, 4), float32] */;
  %1004 = %1002.1;
  (%1003, %1004, meta[relay.Constant][82] /* ty=Tensor[(840), float32] */)
}

def @func_17285() -> Tensor[(11, 4, 16), int8] {
  @func_16682() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_16600() -> Tensor[(14), uint8] {
  %1005 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
  %1005.0
}

def @func_14250() -> (Tensor[(11, 4, 16), int8],) {
  %1006 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1007 = %1006.0;
  (%1007,)
}

def @func_21163(%var_21140: Tensor[(1344), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(6, 14, 16), int8], Tensor[(840, 1), float64], Tensor[(1344), int8], Tensor[(12), float64]) {
  %1008 = cast(meta[relay.Constant][83] /* ty=Tensor[(840, 1), float64] */, dtype="float64") /* ty=Tensor[(840, 1), float64] */;
  %1009 = cast(%var_21140, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %1010 = cast(meta[relay.Constant][84] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1011 = reshape(%1008, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float64] */;
  %1012 = reshape(%1009, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %1013 = reshape(%1010, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %1014 = @func_5977(%1011, %1012, %1013) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */;
  %1015 = @func_16963() /* ty=Tensor[(11, 4, 16), int8] */;
  %1016 = %1014.1;
  (%1015, %1016, meta[relay.Constant][83] /* ty=Tensor[(840, 1), float64] */, %var_21140, meta[relay.Constant][84] /* ty=Tensor[(12), float64] */)
}

def @func_4810(%var_4773: Tensor[(11, 8, 4), int8]) -> Tensor[(11, 8, 4), bool] {
  %1017 = cast(%var_4773, dtype="bool") /* ty=Tensor[(11, 8, 4), bool] */;
  %1018 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(11, 8, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(meta[relay.Constant][85] /* ty=Tensor[(11, 8, 4), int8] */, dtype="bool") /* ty=Tensor[(11, 8, 4), bool] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1021 = equal(%1019, %1020) /* ty=Tensor[(11, 8, 4), bool] */;
  %1022 = cast(%1021, dtype="bool") /* ty=Tensor[(11, 8, 4), bool] */;
  %1023 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(11, 8, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(meta[relay.Constant][85] /* ty=Tensor[(11, 8, 4), int8] */, dtype="bool") /* ty=Tensor[(11, 8, 4), bool] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1024, %1025) /* ty=Tensor[(11, 8, 4), bool] */
}

def @func_14820(%var_14809: Tensor[(13, 10), int16], %var_14810: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(13, 1, 10), bool], Tensor[(2340), float32], Tensor[(13, 10), int16], Tensor[(1540), uint64]) {
  %1026 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1027 = cast(meta[relay.Constant][86] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1028 = cast(%var_14809, dtype="int16") /* ty=Tensor[(13, 10), int16] */;
  %1029 = cast(%var_14810, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %1030 = reshape(%1027, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %1031 = reshape(%1028, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %1032 = reshape(%1029, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %1033 = @func_8075(%1030, %1031, %1032) /* ty=(Tensor[(13, 15, 12), float32], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) */;
  %1034 = %1026.0;
  %1035 = %1033.1;
  (%1034, %1035, meta[relay.Constant][86] /* ty=Tensor[(2340), float32] */, %var_14809, %var_14810)
}

def @func_15331() -> (Tensor[(14), uint8],) {
  %1036 = @func_15017() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %1037 = %1036.1;
  (%1037,)
}

def @func_20759() -> (Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2304), float32]) {
  %1038 = @func_16082() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1039 = cast(meta[relay.Constant][87] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1040 = reshape(%1039, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %1041 = @func_7074(%1040) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %1042 = %1038.0;
  %1043 = %1041.2;
  (%1042, %1043, meta[relay.Constant][87] /* ty=Tensor[(2304), float32] */)
}

def @func_7456(%var_7426: Tensor[(16, 10, 14), float64], %var_7439: Tensor[(352), int8], %var_7446: Tensor[(8, 288), float32]) -> (Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) {
  %1044 = cast(%var_7426, dtype="float64") /* ty=Tensor[(16, 10, 14), float64] */;
  %1045 = sin(%1044) /* ty=Tensor[(16, 10, 14), float64] */;
  %1046 = cast(%1045, dtype="float64") /* ty=Tensor[(16, 10, 14), float64] */;
  %1047 = cast(meta[relay.Constant][88] /* ty=Tensor[(1664, 1), float32] */, dtype="float32") /* ty=Tensor[(1664, 1), float32] */;
  %1048 = cast(%var_7439, dtype="int8") /* ty=Tensor[(352), int8] */;
  %1049 = cast(meta[relay.Constant][89] /* ty=Tensor[(1540), uint64] */, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %1050 = reshape(%1047, newshape=[8, 16, 13]) /* ty=Tensor[(8, 16, 13), float32] */;
  %1051 = reshape(%1048, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %1052 = reshape(%1049, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %1053 = @func_6293(%1050, %1051, %1052) /* ty=(Tensor[(8, 16, 13), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) */;
  %1054 = cast(%var_7446, dtype="float32") /* ty=Tensor[(8, 288), float32] */;
  %1055 = reshape(%1054, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %1056 = @func_7074(%1055) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %1057 = acosh(%1046) /* ty=Tensor[(16, 10, 14), float64] */;
  %1058 = %1053.3;
  %1059 = %1056.2;
  (%1057, %1058, meta[relay.Constant][88] /* ty=Tensor[(1664, 1), float32] */, %var_7439, meta[relay.Constant][89] /* ty=Tensor[(1540), uint64] */, %1059, %var_7446)
}

def @func_1725(%var_1712: uint16) -> Tensor[(1, 16, 15), uint16] {
  %1060 = cast(%var_1712, dtype="uint16") /* ty=uint16 */;
  %1061 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 16, 15), uint16] */, dtype="uint16") /* ty=Tensor[(1, 16, 15), uint16] */;
  multiply(%1060, %1061) /* ty=Tensor[(1, 16, 15), uint16] */
}

def @func_20130() -> (Tensor[(11, 4, 16), int8],) {
  %1062 = @func_14938() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1063 = %1062.0;
  (%1063,)
}

def @func_12348(%var_12331: Tensor[(2240), float64]) -> Tensor[(2240), uint16] {
  %1064 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %1065 = %1064.2;
  %1066 = cast(%var_12331, dtype="uint16") /* ty=Tensor[(2240), uint16] */;
  %1067 = shape_of(%1065, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1068 = cast(%1065, dtype="uint16") /* ty=Tensor[(2240), uint16] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?), uint16] */;
  right_shift(%1068, %1069) /* ty=Tensor[(2240), uint16] */
}

def @func_17501(%var_17498: uint8, %var_17499: Tensor[(120), uint8]) -> (Tensor[(14), uint8], uint8, uint8, Tensor[(120), uint8]) {
  %1070 = @func_15017() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %1071 = cast(%var_17498, dtype="uint8") /* ty=uint8 */;
  %1072 = cast(%var_17499, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1073 = reshape(%1071, newshape=[]) /* ty=uint8 */;
  %1074 = reshape(%1072, newshape=[6, 20]) /* ty=Tensor[(6, 20), uint8] */;
  %1075 = @func_11679(%1073, %1074) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) */;
  %1076 = %1070.1;
  %1077 = %1075.2;
  (%1076, %1077, %var_17498, %var_17499)
}

def @func_16517() -> (Tensor[(11, 4, 16), int8],) {
  %1078 = @func_12756() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1079 = %1078.0;
  (%1079,)
}

def @func_1489(%var_1409: Tensor[(12, 4, 15), float32], %var_1416: Tensor[(120), uint8]) -> (Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) {
  %1080 = cast(meta[relay.Constant][91] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1081 = cast(meta[relay.Constant][92] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1082 = cast(%var_1416, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1083 = reshape(%1080, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
  %1084 = reshape(%1081, newshape=[]) /* ty=uint8 */;
  %1085 = reshape(%1082, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1086 = @func_1081(%1083, %1084, %1085) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
  %1087 = cast(meta[relay.Constant][92] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1088 = cast(%var_1416, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1089 = reshape(%1087, newshape=[]) /* ty=uint8 */;
  %1090 = reshape(%1088, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
  %1091 = @func_129(%1089, %1090) /* ty=(Tensor[(10, 12, 1), uint16],) */;
  %1092 = cast(%var_1409, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
  %1093 = cast(meta[relay.Constant][91] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1094 = cast(meta[relay.Constant][92] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1095 = cast(%var_1416, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1096 = reshape(%1093, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
  %1097 = reshape(%1094, newshape=[]) /* ty=uint8 */;
  %1098 = reshape(%1095, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1099 = @func_1081(%1096, %1097, %1098) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
  %1100 = %1086.5;
  %1101 = cast(%1100, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1102 = cast(%1100, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1103 = reshape(%1101, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1104 = reshape(%1102, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1105 = cast(%var_1409, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
  %1106 = sqrt(%1105) /* ty=Tensor[(12, 4, 15), float32] */;
  %1107 = cast(%var_1409, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
  %1108 = shape_of(%1106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1109 = cast(%1106, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1111 = cast(%1106, dtype="float64") /* ty=Tensor[(12, 4, 15), float64] */;
  %1112 = cast(meta[relay.Constant][92] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1113 = cast(%var_1416, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1114 = reshape(%1112, newshape=[]) /* ty=uint8 */;
  %1115 = reshape(%1113, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
  %1116 = @func_129(%1114, %1115) /* ty=(Tensor[(10, 12, 1), uint16],) */;
  %1117 = %1091.0;
  %1118 = asinh(%1092) /* ty=Tensor[(12, 4, 15), float32] */;
  %1119 = %1099.0;
  %1120 = @func_269(%1103, %1104) /* ty=Tensor[(14, 4, 6), bool] */;
  %1121 = floor_mod(%1109, %1110) /* ty=Tensor[(12, 4, 15), float32] */;
  %1122 = cos(%1111) /* ty=Tensor[(12, 4, 15), float64] */;
  %1123 = %1116.0;
  (%1100, meta[relay.Constant][91] /* ty=Tensor[(216), uint8] */, meta[relay.Constant][92] /* ty=uint8 */, %var_1416, %1117, %1118, %1119, %1120, %1121, %1122, %1123)
}

def @func_19361() -> (Tensor[(11, 4, 16), int8],) {
  %1124 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_17644(%var_17632: Tensor[(384), float64], %var_17633: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) {
  %1126 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1127 = cast(%var_17632, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1128 = cast(%var_17633, dtype="uint8") /* ty=uint8 */;
  %1129 = reshape(%1127, newshape=[6, 16, 4]) /* ty=Tensor[(6, 16, 4), float64] */;
  %1130 = reshape(%1128, newshape=[]) /* ty=uint8 */;
  %1131 = @func_11740(%1129, %1130) /* ty=(Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
  %1132 = %1126.0;
  %1133 = %1131.0;
  (%1132, %1133, %var_17632, %var_17633)
}

def @func_18563() -> (Tensor[(14), uint8], Tensor[(352), int8], Tensor[(2304), float32]) {
  %1134 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %1135 = cast(meta[relay.Constant][93] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1136 = reshape(%1135, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %1137 = @func_7074(%1136) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %1138 = %1134.1;
  %1139 = %1137.2;
  (%1138, %1139, meta[relay.Constant][93] /* ty=Tensor[(2304), float32] */)
}

def @func_20883(%var_20840: Tensor[(336), uint8]) -> (Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(2304, 1), float32], Tensor[(14, 4, 6), float64]) {
  %1140 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %1141 = cast(meta[relay.Constant][94] /* ty=Tensor[(2304, 1), float32] */, dtype="float32") /* ty=Tensor[(2304, 1), float32] */;
  %1142 = reshape(%1141, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %1143 = @func_13625(%1142) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) */;
  %1144 = cast(%var_20840, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1145 = cast(%var_20840, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1146 = reshape(%1144, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1147 = reshape(%1145, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1148 = @func_269(%1146, %1147) /* ty=Tensor[(14, 4, 6), bool] */;
  %1149 = cast(%var_20840, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1150 = shape_of(%1148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1151 = cast(%1148, dtype="float64") /* ty=Tensor[(14, 4, 6), float64] */;
  %1152 = dyn.reshape(%1149, %1150, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1153 = %1140.0;
  %1154 = %1143.3;
  %1155 = floor_divide(%1151, %1152) /* ty=Tensor[(14, 4, 6), float64] */;
  (%1153, %1154, meta[relay.Constant][94] /* ty=Tensor[(2304, 1), float32] */, %1155)
}

def @func_17099(%var_17000: Tensor[(12), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(616), float32], Tensor[(840), float64], Tensor[(12), float64], Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(14), uint8], Tensor[(6, 14, 16), bool], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  %1156 = @func_16572() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1157 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %1158 = cast(meta[relay.Constant][96] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1159 = reshape(%1158, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %1160 = @func_13625(%1159) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) */;
  %1161 = cast(meta[relay.Constant][95] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %1162 = cast(meta[relay.Constant][97] /* ty=Tensor[(1344), int8] */, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %1163 = cast(%var_17000, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1164 = reshape(%1161, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float64] */;
  %1165 = reshape(%1162, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %1166 = reshape(%1163, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %1167 = @func_5977(%1164, %1165, %1166) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */;
  %1168 = %1167.1;
  %1169 = cast(meta[relay.Constant][97] /* ty=Tensor[(1344), int8] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1171 = cast(%1168, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1173 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
  %1174 = %1156.0;
  %1175 = %1157.2;
  %1176 = %1160.1;
  %1177 = @func_16650() /* ty=Tensor[(14), uint8] */;
  %1178 = logical_or(%1171, %1172) /* ty=Tensor[(6, 14, 16), bool] */;
  %1179 = %1173.0;
  %1180 = @func_13771() /* ty=Tensor[(11, 4, 16), int8] */;
  (%1174, %1175, meta[relay.Constant][95] /* ty=Tensor[(840), float64] */, %var_17000, %1176, meta[relay.Constant][96] /* ty=Tensor[(2304), float32] */, %1177, %1178, %1179, %1180)
}

def @func_20626() -> (Tensor[(11, 4, 16), int8],) {
  %1181 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_16632() -> Tensor[(16, 10, 14), float64] {
  %1183 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %1183.1
}

def @func_15449() -> (Tensor[(11, 4, 16), int8],) {
  %1184 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1185 = %1184.0;
  (%1185,)
}

def @func_11995() -> (Tensor[(11, 4, 16), int8],) {
  %1186 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1187 = %1186.0;
  (%1187,)
}

def @func_21735() -> Tensor[(11, 4, 16), int8] {
  @func_15678() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_18303() -> (Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8]) {
  %1188 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1189 = @func_16632() /* ty=Tensor[(16, 10, 14), float64] */;
  %1190 = %1188.0;
  (%1189, %1190)
}

def @func_15725() -> Tensor[(14), uint8] {
  %1191 = @func_13269() /* ty=(Tensor[(14), uint8],) */;
  %1191.0
}

def @func_15270() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %1192 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1193 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %1194 = %1192.0;
  %1195 = %1193.0;
  (%1194, %1195)
}

def @func_20421() -> Tensor[(2240), bool] {
  %1196 = @func_13181() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) */;
  %1196.1
}

def @func_17781() -> (Tensor[(14), uint8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  %1197 = @func_17657() /* ty=(Tensor[(14), uint8],) */;
  %1198 = @func_16754() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(14), uint8]) */;
  %1199 = %1197.0;
  %1200 = @func_15725() /* ty=Tensor[(14), uint8] */;
  %1201 = %1198.0;
  (%1199, %1200, %1201)
}

def @func_12182() -> (Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) {
  %1202 = cast(meta[relay.Constant][98] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %1203 = reshape(%1202, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %1204 = @func_12083(%1203) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) */;
  %1205 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  %1206 = %1204.2;
  (%1205, %1206, meta[relay.Constant][98] /* ty=Tensor[(2240), float64] */)
}

def @func_18844() -> (Tensor[(16, 10, 14), float64],) {
  %1207 = @func_16632() /* ty=Tensor[(16, 10, 14), float64] */;
  (%1207,)
}

def @func_6293(%var_6282: Tensor[(8, 16, 13), float32], %var_6286: Tensor[(352), int8], %var_6291: Tensor[(1540), uint64]) -> (Tensor[(8, 16, 13), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) {
  %1208 = cast(%var_6282, dtype="float32") /* ty=Tensor[(8, 16, 13), float32] */;
  %1209 = cast(%var_6286, dtype="int8") /* ty=Tensor[(352), int8] */;
  %1210 = reshape(%1209, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
  %1211 = cast(%var_6291, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %1212 = reshape(%1211, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %1213 = @func_5624(%1212) /* ty=(Tensor[(10, 14, 11), uint64],) */;
  %1214 = sinh(%1208) /* ty=Tensor[(8, 16, 13), float32] */;
  %1215 = @func_4810(%1210) /* ty=Tensor[(11, 8, 4), bool] */;
  %1216 = %1213.0;
  (%1214, %1215, %var_6286, %1216, %var_6291)
}

def @func_16859() -> (Tensor[(14), uint8],) {
  %1217 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
  %1218 = %1217.0;
  (%1218,)
}

def @func_18791() -> Tensor[(11, 4, 16), int8] {
  %1219 = @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1219.0
}

def @func_16682() -> Tensor[(11, 4, 16), int8] {
  %1220 = @func_16082() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1220.0
}

def @func_13233() -> (Tensor[(11, 4, 16), int8],) {
  %1221 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1222 = %1221.0;
  (%1222,)
}

def @func_12756() -> (Tensor[(11, 4, 16), int8],) {
  %1223 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1224 = %1223.0;
  (%1224,)
}

def @func_14938() -> (Tensor[(11, 4, 16), int8],) {
  %1225 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1226 = %1225.0;
  (%1226,)
}

def @func_1081(%var_1061: Tensor[(6, 3, 12), uint8], %var_1075: uint8, %var_1076: Tensor[(120), uint8]) -> (Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) {
  %1227 = cast(meta[relay.Constant][99] /* ty=Tensor[(6, 3, 12), uint8] */, dtype="uint8") /* ty=Tensor[(6, 3, 12), uint8] */;
  %1228 = shape_of(%var_1061, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1229 = cast(%var_1061, dtype="uint8") /* ty=Tensor[(6, 3, 12), uint8] */;
  %1230 = dyn.reshape(%1227, %1228, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1231 = cast(%var_1075, dtype="uint8") /* ty=uint8 */;
  %1232 = cast(%var_1076, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1233 = reshape(%1231, newshape=[]) /* ty=uint8 */;
  %1234 = reshape(%1232, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
  %1235 = @func_129(%1233, %1234) /* ty=(Tensor[(10, 12, 1), uint16],) */;
  %1236 = cast(meta[relay.Constant][100] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1237 = cast(meta[relay.Constant][100] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1238 = reshape(%1236, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1239 = reshape(%1237, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1240 = bitwise_xor(%1229, %1230) /* ty=Tensor[(6, 3, 12), uint8] */;
  %1241 = %1235.0;
  %1242 = @func_269(%1238, %1239) /* ty=Tensor[(14, 4, 6), bool] */;
  (%1240, %1241, %var_1075, %var_1076, %1242, meta[relay.Constant][100] /* ty=Tensor[(336), uint8] */)
}

def @func_7074(%var_7063: Tensor[(12, 12, 16), float32]) -> (Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) {
  %1243 = cast(%var_7063, dtype="float32") /* ty=Tensor[(12, 12, 16), float32] */;
  %1244 = cast(meta[relay.Constant][101] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %1245 = reshape(%1244, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
  %1246 = sin(%1243) /* ty=Tensor[(12, 12, 16), float32] */;
  %1247 = @func_4810(%1245) /* ty=Tensor[(11, 8, 4), bool] */;
  (%1246, %1247, meta[relay.Constant][101] /* ty=Tensor[(352), int8] */)
}

def @func_19869() -> (Tensor[(16, 10, 14), float64],) {
  %1248 = @func_16632() /* ty=Tensor[(16, 10, 14), float64] */;
  (%1248,)
}

def @func_15756(%var_15752: Tensor[(2240), float64], %var_15753: Tensor[(352), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) {
  %1249 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1250 = cast(%var_15752, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %1251 = cast(%var_15753, dtype="int8") /* ty=Tensor[(352), int8] */;
  %1252 = cast(meta[relay.Constant][102] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1253 = reshape(%1250, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %1254 = reshape(%1251, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %1255 = reshape(%1252, newshape=[8, 288]) /* ty=Tensor[(8, 288), float32] */;
  %1256 = @func_7456(%1253, %1254, %1255) /* ty=(Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) */;
  %1257 = %1249.0;
  %1258 = %1256.3;
  (%1257, %1258, %var_15752, %var_15753, meta[relay.Constant][102] /* ty=Tensor[(2304), float32] */)
}

def @func_5767(%var_5750: Tensor[(1344), int8]) -> (Tensor[(11, 6, 5), int32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) {
  %1259 = cast(meta[relay.Constant][104] /* ty=Tensor[(11, 6, 5), int32] */, dtype="int32") /* ty=Tensor[(11, 6, 5), int32] */;
  %1260 = shape_of(meta[relay.Constant][103] /* ty=Tensor[(11, 6, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1261 = cast(meta[relay.Constant][103] /* ty=Tensor[(11, 6, 5), int32] */, dtype="int32") /* ty=Tensor[(11, 6, 5), int32] */;
  %1262 = dyn.reshape(%1259, %1260, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1263 = cast(%var_5750, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %1264 = cast(%var_5750, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %1265 = reshape(%1263, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %1266 = reshape(%1264, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %1267 = subtract(%1261, %1262) /* ty=Tensor[(11, 6, 5), int32] */;
  %1268 = @func_2291(%1265, %1266) /* ty=Tensor[(6, 14, 16), int8] */;
  (%1267, %1268, %var_5750)
}

def @func_17806() -> Tensor[(11, 4, 16), int8] {
  %1269 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1269.0
}

def @func_21576(%var_21532: Tensor[(336), uint8], %var_21551: Tensor[(7, 2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(14, 4, 6), float64], Tensor[(336), uint8], Tensor[(7, 2240), bool]) {
  %1270 = @func_19912() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1271 = cast(%var_21532, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1272 = reshape(%1271, newshape=[336]) /* ty=Tensor[(336), uint8] */;
  %1273 = @func_20883(%1272) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(2304, 1), float32], Tensor[(14, 4, 6), float64]) */;
  %1274 = @func_19635() /* ty=Tensor[(1, 2240), float64] */;
  %1275 = cast(%1274, dtype="float64") /* ty=Tensor[(1, 2240), float64] */;
  %1276 = log10(%1275) /* ty=Tensor[(1, 2240), float64] */;
  %1277 = cast(%1276, dtype="bool") /* ty=Tensor[(1, 2240), bool] */;
  %1278 = cast(%var_21551, dtype="bool") /* ty=Tensor[(7, 2240), bool] */;
  %1279 = not_equal(%1277, %1278) /* ty=Tensor[(7, 2240), bool] */;
  %1280 = cast(%1276, dtype="uint16") /* ty=Tensor[(1, 2240), uint16] */;
  %1281 = cast(%var_21551, dtype="uint16") /* ty=Tensor[(7, 2240), uint16] */;
  %1282 = subtract(%1280, %1281) /* ty=Tensor[(7, 2240), uint16] */;
  %1283 = cast(%1282, dtype="bool") /* ty=Tensor[(7, 2240), bool] */;
  %1284 = shape_of(%1279, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1285 = cast(%1279, dtype="bool") /* ty=Tensor[(7, 2240), bool] */;
  %1286 = dyn.reshape(%1283, %1284, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1287 = %1270.0;
  %1288 = %1273.3;
  %1289 = less(%1285, %1286) /* ty=Tensor[(7, 2240), bool] */;
  (%1287, %1288, %var_21532, %1289)
}

def @func_16082() -> (Tensor[(11, 4, 16), int8],) {
  %1290 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1291 = %1290.0;
  (%1291,)
}

def @func_14357(%var_14347: Tensor[(840), float32]) -> (Tensor[(1, 2240), float64], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130, 840), float32]) {
  %1292 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %1293 = cast(meta[relay.Constant][105] /* ty=Tensor[(3136), uint16] */, dtype="uint16") /* ty=Tensor[(3136), uint16] */;
  %1294 = cast(meta[relay.Constant][105] /* ty=Tensor[(3136), uint16] */, dtype="uint16") /* ty=Tensor[(3136), uint16] */;
  %1295 = reshape(%1293, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint16] */;
  %1296 = reshape(%1294, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint16] */;
  %1297 = @func_14076(%1295, %1296) /* ty=(Tensor[(14, 16, 14), uint16], Tensor[(11, 4, 16), int8]) */;
  %1298 = cast(%var_14347, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1299 = cast(meta[relay.Constant][106] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1300 = cast(meta[relay.Constant][107] /* ty=Tensor[(130, 1), int16] */, dtype="int16") /* ty=Tensor[(130, 1), int16] */;
  %1301 = reshape(%1298, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1302 = reshape(%1299, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1303 = reshape(%1300, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %1304 = @func_13432(%1301, %1302, %1303) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */;
  %1305 = %1304.2;
  %1306 = cast(%1305, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1307 = cast(meta[relay.Constant][107] /* ty=Tensor[(130, 1), int16] */, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
  %1308 = %1292.2;
  %1309 = %1297.1;
  %1310 = floor_divide(%1306, %1307) /* ty=Tensor[(130, 840), float32] */;
  (%1308, %1309, meta[relay.Constant][105] /* ty=Tensor[(3136), uint16] */, %var_14347, meta[relay.Constant][106] /* ty=Tensor[(120), uint8] */, %1310)
}

def @func_18049() -> Tensor[(990), float64] {
  %1311 = @func_17469() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(10, 9, 11), bool], Tensor[(990), float64]) */;
  %1311.2
}

def @func_16233() -> Tensor[(11, 4, 16), int8] {
  %1312 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1312.0
}

def @func_20149() -> (Tensor[(11, 4, 16), int8],) {
  %1313 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  (%1313,)
}

def @func_15003() -> (Tensor[(14), uint8],) {
  %1314 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %1315 = %1314.1;
  (%1315,)
}

def @func_16945() -> Tensor[(616), float32] {
  %1316 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %1316.2
}

def @func_21278() -> Tensor[(11, 4, 16), int8] {
  %1317 = @func_19912() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1317.0
}

def @func_1983(%var_1959: Tensor[(11, 4, 14), float32], %var_1965: Tensor[(660), float64]) -> (Tensor[(11, 4, 14), float32], Tensor[(6, 10, 11), float64], Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) {
  %1318 = cast(%var_1959, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
  %1319 = cast(%var_1965, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1320 = reshape(%1319, newshape=[6, 10, 11]) /* ty=Tensor[(6, 10, 11), float64] */;
  %1321 = cast(meta[relay.Constant][108] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1322 = cast(meta[relay.Constant][109] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1323 = cast(meta[relay.Constant][110] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1324 = reshape(%1321, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
  %1325 = reshape(%1322, newshape=[]) /* ty=uint8 */;
  %1326 = reshape(%1323, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1327 = @func_1081(%1324, %1325, %1326) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
  %1328 = exp(%1318) /* ty=Tensor[(11, 4, 14), float32] */;
  %1329 = @func_1866(%1320) /* ty=Tensor[(6, 10, 11), float64] */;
  %1330 = %1327.4;
  (%1328, %1329, %var_1965, %1330, meta[relay.Constant][108] /* ty=Tensor[(216), uint8] */, meta[relay.Constant][109] /* ty=uint8 */, meta[relay.Constant][110] /* ty=Tensor[(120), uint8] */)
}

def @func_21851() -> Tensor[(11, 4, 16), int8] {
  %1331 = @func_15017() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %1331.0
}

def @func_14676(%var_14660: Tensor[(10, 9, 11), float64]) -> (Tensor[(10, 9, 11), bool], Tensor[(10, 9, 11), uint64]) {
  %1332 = cast(meta[relay.Constant][111] /* ty=Tensor[(10, 9, 11), float64] */, dtype="bool") /* ty=Tensor[(10, 9, 11), bool] */;
  %1333 = shape_of(%var_14660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1334 = cast(%var_14660, dtype="bool") /* ty=Tensor[(10, 9, 11), bool] */;
  %1335 = dyn.reshape(%1332, %1333, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1336 = cast(meta[relay.Constant][111] /* ty=Tensor[(10, 9, 11), float64] */, dtype="uint64") /* ty=Tensor[(10, 9, 11), uint64] */;
  %1337 = shape_of(%var_14660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1338 = cast(%var_14660, dtype="uint64") /* ty=Tensor[(10, 9, 11), uint64] */;
  %1339 = dyn.reshape(%1336, %1337, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1340 = greater(%1334, %1335) /* ty=Tensor[(10, 9, 11), bool] */;
  %1341 = logical_xor(%1338, %1339) /* ty=Tensor[(10, 9, 11), uint64] */;
  (%1340, %1341)
}

def @func_16572() -> (Tensor[(11, 4, 16), int8],) {
  %1342 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %1343 = %1342.0;
  (%1343,)
}

def @func_14631(%var_14542: Tensor[(336), uint8], %var_14548: Tensor[(3136), uint16], %var_14587: Tensor[(2112), int32], %var_14588: Tensor[(720), float32], %var_14621: Tensor[(448), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(11, 8, 4), bool], Tensor[(11, 4, 14), bool], Tensor[(720), float32], Tensor[(2112), bool], Tensor[(11, 4, 16), int8], Tensor[(176, 2), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64], Tensor[(660), float64]) {
  %1344 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1345 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1346 = cast(%var_14542, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1347 = cast(%var_14542, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1348 = reshape(%1346, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1349 = reshape(%1347, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1350 = cast(%var_14548, dtype="uint16") /* ty=Tensor[(3136), uint16] */;
  %1351 = cast(%var_14548, dtype="uint16") /* ty=Tensor[(3136), uint16] */;
  %1352 = reshape(%1350, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint16] */;
  %1353 = reshape(%1351, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint16] */;
  %1354 = @func_14076(%1352, %1353) /* ty=(Tensor[(14, 16, 14), uint16], Tensor[(11, 4, 16), int8]) */;
  %1355 = cast(meta[relay.Constant][112] /* ty=Tensor[(176, 2), int8] */, dtype="int8") /* ty=Tensor[(176, 2), int8] */;
  %1356 = reshape(%1355, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
  %1357 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %1358 = %1357.1;
  %1359 = cast(meta[relay.Constant][113] /* ty=Tensor[(11, 4, 14), float32] */, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %1360 = shape_of(%1358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1361 = cast(%1358, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %1362 = dyn.reshape(%1359, %1360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1363 = cast(%var_14587, dtype="int32") /* ty=Tensor[(2112), int32] */;
  %1364 = cast(%var_14587, dtype="int32") /* ty=Tensor[(2112), int32] */;
  %1365 = cast(%var_14588, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1366 = reshape(%1363, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
  %1367 = reshape(%1364, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
  %1368 = reshape(%1365, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %1369 = @func_4636(%1366, %1367, %1368) /* ty=(Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) */;
  %1370 = %1369.0;
  %1371 = cast(%1370, dtype="bool") /* ty=Tensor[(12, 11, 16), bool] */;
  %1372 = shape_of(%var_14587, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1373 = cast(%var_14587, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1374 = dyn.reshape(%1371, %1372, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1375 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1376 = cast(meta[relay.Constant][112] /* ty=Tensor[(176, 2), int8] */, dtype="float32") /* ty=Tensor[(176, 2), float32] */;
  %1377 = sqrt(%1376) /* ty=Tensor[(176, 2), float32] */;
  %1378 = cast(meta[relay.Constant][112] /* ty=Tensor[(176, 2), int8] */, dtype="int8") /* ty=Tensor[(176, 2), int8] */;
  %1379 = shape_of(%1377, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1380 = cast(%1377, dtype="int8") /* ty=Tensor[(176, 2), int8] */;
  %1381 = dyn.reshape(%1378, %1379, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1382 = cast(%var_14621, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1383 = cast(meta[relay.Constant][114] /* ty=Tensor[(1540), uint64] */, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %1384 = cast(meta[relay.Constant][114] /* ty=Tensor[(1540), uint64] */, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %1385 = reshape(%1382, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
  %1386 = reshape(%1383, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %1387 = reshape(%1384, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %1388 = @func_12731(%1385, %1386, %1387) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */;
  %1389 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %1390 = %1344.0;
  %1391 = %1345.0;
  %1392 = @func_269(%1348, %1349) /* ty=Tensor[(14, 4, 6), bool] */;
  %1393 = %1354.1;
  %1394 = @func_4810(%1356) /* ty=Tensor[(11, 8, 4), bool] */;
  %1395 = not_equal(%1361, %1362) /* ty=Tensor[(11, 4, 14), bool] */;
  %1396 = equal(%1373, %1374) /* ty=Tensor[(2112), bool] */;
  %1397 = %1375.0;
  %1398 = multiply(%1380, %1381) /* ty=Tensor[(176, 2), int8] */;
  %1399 = %1388.1;
  %1400 = %1389.3;
  (%1390, %1391, %1392, %var_14542, %1393, %var_14548, %1394, %1395, %var_14588, %1396, %1397, %1398, %1399, %var_14621, meta[relay.Constant][114] /* ty=Tensor[(1540), uint64] */, %1400)
}

def @func_16443(%var_16440: Tensor[(720), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), bool], Tensor[(4, 180), float32], Tensor[(2112), int32], Tensor[(720), float32]) {
  %1401 = @func_15449() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1402 = @func_15530() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
  %1403 = %1402.1;
  %1404 = cast(%1403, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
  %1405 = rsqrt(%1404) /* ty=Tensor[(8, 11, 11), float64] */;
  %1406 = cast(%1403, dtype="bool") /* ty=Tensor[(8, 11, 11), bool] */;
  %1407 = shape_of(%1405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1408 = cast(%1405, dtype="bool") /* ty=Tensor[(8, 11, 11), bool] */;
  %1409 = dyn.reshape(%1406, %1407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1410 = cast(meta[relay.Constant][115] /* ty=Tensor[(2112), int32] */, dtype="int32") /* ty=Tensor[(2112), int32] */;
  %1411 = cast(meta[relay.Constant][115] /* ty=Tensor[(2112), int32] */, dtype="int32") /* ty=Tensor[(2112), int32] */;
  %1412 = cast(%var_16440, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1413 = reshape(%1410, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
  %1414 = reshape(%1411, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
  %1415 = reshape(%1412, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %1416 = @func_4636(%1413, %1414, %1415) /* ty=(Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) */;
  %1417 = %1401.0;
  %1418 = logical_or(%1408, %1409) /* ty=Tensor[(8, 11, 11), bool] */;
  %1419 = %1416.2;
  (%1417, %1418, %1419, meta[relay.Constant][115] /* ty=Tensor[(2112), int32] */, %var_16440)
}

def @func_15017() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) {
  %1420 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1421 = @func_13269() /* ty=(Tensor[(14), uint8],) */;
  %1422 = %1420.0;
  %1423 = %1421.0;
  (%1422, %1423)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_17910(%var_17899: Tensor[(840), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(840), float32], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(13, 10), int16]) {
  %0 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1 = cast(%var_17899, dtype="float32") /* ty=Tensor[(840), float32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 10), int16] */, dtype="int16") /* ty=Tensor[(13, 10), int16] */;
  %4 = reshape(%1, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %5 = reshape(%2, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %6 = reshape(%3, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %7 = @func_13432(%4, %5, %6) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */;
  %8 = %0.0;
  %9 = @func_17285() /* ty=Tensor[(11, 4, 16), int8] */;
  %10 = %7.2;
  (%8, %9, %10, %var_17899, meta[relay.Constant][0] /* ty=Tensor[(120), uint8] */, meta[relay.Constant][1] /* ty=Tensor[(13, 10), int16] */)
}

def @func_19363() -> (Tensor[(11, 4, 16), int8],) {
  @func_19361() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_18304() -> (Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8]) {
  %14 = fn () -> (Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8]) {
    %11 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %12 = @func_16632() /* ty=Tensor[(16, 10, 14), float64] */;
    %13 = %11.0;
    (%12, %13)
  };
  %14() /* ty=(Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8]) */
}

def @func_11743(%var_11741: Tensor[(6, 16, 4), float64], %var_11742: uint8) -> (Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) {
  %29 = fn (%var_11715: Tensor[(6, 16, 4), float64], %var_11722: uint8) -> (Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) {
    %15 = cast(%var_11715, dtype="float64") /* ty=Tensor[(6, 16, 4), float64] */;
    %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(3150), bool] */, dtype="bool") /* ty=Tensor[(3150), bool] */;
    %17 = cast(meta[relay.Constant][2] /* ty=Tensor[(3150), bool] */, dtype="bool") /* ty=Tensor[(3150), bool] */;
    %18 = reshape(%16, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
    %19 = reshape(%17, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
    %20 = @func_9363(%18, %19) /* ty=(Tensor[(15, 15, 14), bool],) */;
    %21 = cast(%var_11722, dtype="uint8") /* ty=uint8 */;
    %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(968), uint8] */, dtype="uint8") /* ty=Tensor[(968), uint8] */;
    %23 = reshape(%21, newshape=[]) /* ty=uint8 */;
    %24 = reshape(%22, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), uint8] */;
    %25 = @func_2590(%23, %24) /* ty=(Tensor[(8, 11, 11), uint8],) */;
    %26 = log(%15) /* ty=Tensor[(6, 16, 4), float64] */;
    %27 = %20.0;
    %28 = %25.0;
    (%26, %27, meta[relay.Constant][2] /* ty=Tensor[(3150), bool] */, %28, %var_11722, meta[relay.Constant][3] /* ty=Tensor[(968), uint8] */)
  };
  %29(%var_11741, %var_11742) /* ty=(Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */
}

def @func_21118() -> Tensor[(11, 4, 16), int8] {
  @func_21116() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20229() -> (Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  @func_20227() /* ty=(Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */
}

def @func_12659(%var_12651: Tensor[(11, 4, 16), float64]) -> Tensor[(11, 4, 16), int32] {
  %30 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %31 = %30.0;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
  %33 = erf(%32) /* ty=Tensor[(11, 4, 16), float64] */;
  %34 = cast(%var_12651, dtype="int32") /* ty=Tensor[(11, 4, 16), int32] */;
  %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%33, dtype="int32") /* ty=Tensor[(11, 4, 16), int32] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%36, %37) /* ty=Tensor[(11, 4, 16), int32] */
}

def @func_17287() -> Tensor[(11, 4, 16), int8] {
  @func_17285() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_14357(%var_14347: Tensor[(840), float32]) -> (Tensor[(1, 2240), float64], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130, 840), float32]) {
  %38 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %39 = cast(meta[relay.Constant][4] /* ty=Tensor[(3136), uint16] */, dtype="uint16") /* ty=Tensor[(3136), uint16] */;
  %40 = cast(meta[relay.Constant][4] /* ty=Tensor[(3136), uint16] */, dtype="uint16") /* ty=Tensor[(3136), uint16] */;
  %41 = reshape(%39, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint16] */;
  %42 = reshape(%40, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint16] */;
  %43 = @func_14076(%41, %42) /* ty=(Tensor[(14, 16, 14), uint16], Tensor[(11, 4, 16), int8]) */;
  %44 = cast(%var_14347, dtype="float32") /* ty=Tensor[(840), float32] */;
  %45 = cast(meta[relay.Constant][5] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %46 = cast(meta[relay.Constant][6] /* ty=Tensor[(130, 1), int16] */, dtype="int16") /* ty=Tensor[(130, 1), int16] */;
  %47 = reshape(%44, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %48 = reshape(%45, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %49 = reshape(%46, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %50 = @func_13432(%47, %48, %49) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */;
  %51 = %50.2;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(840), float32] */;
  %53 = cast(meta[relay.Constant][6] /* ty=Tensor[(130, 1), int16] */, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
  %54 = %38.2;
  %55 = %43.1;
  %56 = floor_divide(%52, %53) /* ty=Tensor[(130, 840), float32] */;
  (%54, %55, meta[relay.Constant][4] /* ty=Tensor[(3136), uint16] */, %var_14347, meta[relay.Constant][5] /* ty=Tensor[(120), uint8] */, %56)
}

def @func_5729(%var_5723: Tensor[(7, 1, 8), float32], %var_5724: Tensor[(7, 2, 8), float32], %var_5725: Tensor[(12), float64], %var_5726: Tensor[(120), uint8], %var_5727: Tensor[(168, 2), float64], %var_5728: Tensor[(130), int16]) -> (Tensor[(7, 2, 8), float32], Tensor[(12), float64], Tensor[(12, 4, 15), float32], Tensor[(720), float32], Tensor[(120), uint8], Tensor[(1, 6, 2), float32], Tensor[(168, 2), float64], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(168, 2), float64]) {
  @func_5721(%var_5723, %var_5724, %var_5725, %var_5726, %var_5727, %var_5728) /* ty=(Tensor[(7, 2, 8), float32], Tensor[(12), float64], Tensor[(12, 4, 15), float32], Tensor[(720), float32], Tensor[(120), uint8], Tensor[(1, 6, 2), float32], Tensor[(168, 2), float64], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(168, 2), float64]) */
}

def @func_1725(%var_1712: uint16) -> Tensor[(1, 16, 15), uint16] {
  %57 = cast(%var_1712, dtype="uint16") /* ty=uint16 */;
  %58 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 16, 15), uint16] */, dtype="uint16") /* ty=Tensor[(1, 16, 15), uint16] */;
  multiply(%57, %58) /* ty=Tensor[(1, 16, 15), uint16] */
}

def @func_12385() -> (Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) {
  %59 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 1), float32] */;
  %60 = log(%59) /* ty=Tensor[(6, 16, 1), float32] */;
  %61 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 16, 1), float32] */, dtype="bool") /* ty=Tensor[(6, 16, 1), bool] */;
  %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%60, dtype="bool") /* ty=Tensor[(6, 16, 1), bool] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %65 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %66 = cast(meta[relay.Constant][10] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %67 = reshape(%65, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), float32] */;
  %68 = reshape(%66, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %69 = @func_1983(%67, %68) /* ty=(Tensor[(11, 4, 14), float32], Tensor[(6, 10, 11), float64], Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) */;
  %70 = cast(meta[relay.Constant][11] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %71 = reshape(%70, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %72 = @func_12083(%71) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) */;
  %73 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %74 = greater_equal(%63, %64) /* ty=Tensor[(6, 16, ?), bool] */;
  %75 = %69.0;
  %76 = %72.2;
  %77 = %73.0;
  (%74, %75, meta[relay.Constant][9] /* ty=Tensor[(616), float32] */, meta[relay.Constant][10] /* ty=Tensor[(660), float64] */, %76, meta[relay.Constant][11] /* ty=Tensor[(2240), float64] */, %77)
}

def @func_14824(%var_14822: Tensor[(13, 10), int16], %var_14823: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(13, 1, 10), bool], Tensor[(2340), float32], Tensor[(13, 10), int16], Tensor[(1540), uint64]) {
  @func_14820(%var_14822, %var_14823) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(13, 1, 10), bool], Tensor[(2340), float32], Tensor[(13, 10), int16], Tensor[(1540), uint64]) */
}

def @func_17806() -> Tensor[(11, 4, 16), int8] {
  %78 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %78.0
}

def @func_12757() -> (Tensor[(11, 4, 16), int8],) {
  %81 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %79 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %80 = %79.0;
    (%80,)
  };
  %81() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_15430(%var_15428: Tensor[(12), float64], %var_15429: Tensor[(352), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) {
  @func_15426(%var_15428, %var_15429) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */
}

def @func_16965() -> Tensor[(11, 4, 16), int8] {
  @func_16963() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_12850() -> (Tensor[(11, 4, 16), int8], Tensor[(6, 2, 7), bool], Tensor[(14), uint8], Tensor[(84), uint8]) {
  %82 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %83 = cast(meta[relay.Constant][12] /* ty=Tensor[(14), uint8] */, dtype="uint8") /* ty=Tensor[(14), uint8] */;
  %84 = cast(meta[relay.Constant][13] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %85 = reshape(%83, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), uint8] */;
  %86 = reshape(%84, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), uint8] */;
  %87 = %82.0;
  %88 = @func_9820(%85, %86) /* ty=Tensor[(6, 2, 7), bool] */;
  (%87, %88, meta[relay.Constant][12] /* ty=Tensor[(14), uint8] */, meta[relay.Constant][13] /* ty=Tensor[(84), uint8] */)
}

def @func_15662(%var_15660: Tensor[(1344), int8], %var_15661: Tensor[(120), uint8]) -> (Tensor[(616), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(1344), int8], Tensor[(840), float32], Tensor[(968), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8], Tensor[(10, 14, 11), uint64], Tensor[(1, 1540), uint64]) {
  %119 = fn (%var_15620: Tensor[(1344), int8], %var_15647: Tensor[(120), uint8]) -> (Tensor[(616), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(1344), int8], Tensor[(840), float32], Tensor[(968), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8], Tensor[(10, 14, 11), uint64], Tensor[(1, 1540), uint64]) {
    %89 = cast(%var_15620, dtype="int8") /* ty=Tensor[(1344), int8] */;
    %90 = cast(%var_15620, dtype="int8") /* ty=Tensor[(1344), int8] */;
    %91 = reshape(%89, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
    %92 = reshape(%90, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
    %93 = cast(meta[relay.Constant][14] /* ty=Tensor[(704), int8] */, dtype="int8") /* ty=Tensor[(704), int8] */;
    %94 = reshape(%93, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), int8] */;
    %95 = @func_13054(%94) /* ty=(Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), int8]) */;
    %96 = cast(meta[relay.Constant][15] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %97 = cast(meta[relay.Constant][15] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %98 = @func_2291(%91, %92) /* ty=Tensor[(6, 14, 16), int8] */;
    %99 = cast(%98, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
    %100 = cast(meta[relay.Constant][16] /* ty=Tensor[(968), uint8] */, dtype="uint8") /* ty=Tensor[(968), uint8] */;
    %101 = cast(%var_15647, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %102 = cast(meta[relay.Constant][17] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
    %103 = cast(meta[relay.Constant][18] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %104 = reshape(%96, newshape=[10, 14, 6]) /* ty=Tensor[(10, 14, 6), float32] */;
    %105 = reshape(%97, newshape=[10, 14, 6]) /* ty=Tensor[(10, 14, 6), float32] */;
    %106 = reshape(%99, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
    %107 = reshape(%100, newshape=[968]) /* ty=Tensor[(968), uint8] */;
    %108 = reshape(%101, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %109 = reshape(%102, newshape=[130]) /* ty=Tensor[(130), int16] */;
    %110 = reshape(%103, newshape=[216]) /* ty=Tensor[(216), uint8] */;
    %111 = @func_12265(%104, %105, %106, %107, %108, %109, %110) /* ty=(Tensor[(10, 14, 6), float32], Tensor[(1, 6, 2), float64], Tensor[(1344), int8], Tensor[(12), float64], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8], Tensor[(10, 12, 1), uint16], Tensor[(120), uint8], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(120), uint8], Tensor[(216), uint8]) */;
    %112 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1540), uint64] */, dtype="uint64") /* ty=Tensor[(1, 1540), uint64] */;
    %113 = reshape(%112, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
    %114 = @func_5624(%113) /* ty=(Tensor[(10, 14, 11), uint64],) */;
    %115 = @func_14704() /* ty=Tensor[(616), float32] */;
    %116 = %95.1;
    %117 = %111.2;
    %118 = %114.0;
    (%115, %98, %var_15620, %116, meta[relay.Constant][14] /* ty=Tensor[(704), int8] */, %117, meta[relay.Constant][15] /* ty=Tensor[(840), float32] */, meta[relay.Constant][16] /* ty=Tensor[(968), uint8] */, %var_15647, meta[relay.Constant][17] /* ty=Tensor[(130), int16] */, meta[relay.Constant][18] /* ty=Tensor[(216), uint8] */, %118, meta[relay.Constant][19] /* ty=Tensor[(1, 1540), uint64] */)
  };
  %119(%var_15660, %var_15661) /* ty=(Tensor[(616), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(1344), int8], Tensor[(840), float32], Tensor[(968), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8], Tensor[(10, 14, 11), uint64], Tensor[(1, 1540), uint64]) */
}

def @func_14938() -> (Tensor[(11, 4, 16), int8],) {
  %120 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %121 = %120.0;
  (%121,)
}

def @func_21806() -> Tensor[(11, 4, 16), int8] {
  %122 = fn () -> Tensor[(11, 4, 16), int8] {
    @func_16233() /* ty=Tensor[(11, 4, 16), int8] */
  };
  %122() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_19593(%var_19592: Tensor[(384), float64]) -> (Tensor[(120), uint8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) {
  %131 = fn (%var_19560: Tensor[(384), float64]) -> (Tensor[(120), uint8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) {
    %123 = @func_19137() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(120), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) */;
    %124 = cast(%var_19560, dtype="float64") /* ty=Tensor[(384), float64] */;
    %125 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %126 = reshape(%124, newshape=[6, 16, 4]) /* ty=Tensor[(6, 16, 4), float64] */;
    %127 = reshape(%125, newshape=[]) /* ty=uint8 */;
    %128 = @func_11740(%126, %127) /* ty=(Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
    %129 = %123.1;
    %130 = %128.0;
    (%129, %130, %var_19560, meta[relay.Constant][20] /* ty=uint8 */)
  };
  %131(%var_19592) /* ty=(Tensor[(120), uint8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) */
}

def @func_21280() -> Tensor[(11, 4, 16), int8] {
  @func_21278() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_15018() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) {
  %136 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) {
    %132 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %133 = @func_13269() /* ty=(Tensor[(14), uint8],) */;
    %134 = %132.0;
    %135 = %133.0;
    (%134, %135)
  };
  %136() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */
}

def @func_1942(%var_1939: Tensor[(7, 16, 1), float64], %var_1940: Tensor[(7, 16, 9), float64], %var_1941: Tensor[(120), uint8]) -> (Tensor[(7, 16, 9), float64], Tensor[(6, 3, 12), uint8], Tensor[(720), float32], Tensor[(120), uint8]) {
  %146 = fn (%var_1922: Tensor[(7, 16, 1), float64], %var_1923: Tensor[(7, 16, 9), float64], %var_1934: Tensor[(120), uint8]) -> (Tensor[(7, 16, 9), float64], Tensor[(6, 3, 12), uint8], Tensor[(720), float32], Tensor[(120), uint8]) {
    %137 = cast(%var_1922, dtype="float64") /* ty=Tensor[(7, 16, 1), float64] */;
    %138 = cast(%var_1923, dtype="float64") /* ty=Tensor[(7, 16, 9), float64] */;
    %139 = cast(meta[relay.Constant][21] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %140 = cast(%var_1934, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %141 = reshape(%139, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), float32] */;
    %142 = reshape(%140, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %143 = @func_1489(%141, %142) /* ty=(Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) */;
    %144 = subtract(%137, %138) /* ty=Tensor[(7, 16, 9), float64] */;
    %145 = %143.6;
    (%144, %145, meta[relay.Constant][21] /* ty=Tensor[(720), float32] */, %var_1934)
  };
  %146(%var_1939, %var_1940, %var_1941) /* ty=(Tensor[(7, 16, 9), float64], Tensor[(6, 3, 12), uint8], Tensor[(720), float32], Tensor[(120), uint8]) */
}

def @func_21278() -> Tensor[(11, 4, 16), int8] {
  %147 = @func_19912() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %147.0
}

def @func_13988(%var_13986: Tensor[(130), int16], %var_13987: Tensor[(1664), float32]) -> (Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(968, 1), uint8], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(1540), uint64], Tensor[(1664), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(10, 12, 1), uint16], uint8) {
  @func_13984(%var_13986, %var_13987) /* ty=(Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(968, 1), uint8], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(1540), uint64], Tensor[(1664), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(10, 12, 1), uint16], uint8) */
}

def @func_16489() -> (Tensor[(11, 4, 16), int8],) {
  %149 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %148 = @func_16233() /* ty=Tensor[(11, 4, 16), int8] */;
    (%148,)
  };
  %149() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_5767(%var_5750: Tensor[(1344), int8]) -> (Tensor[(11, 6, 5), int32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) {
  %150 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 6, 5), int32] */, dtype="int32") /* ty=Tensor[(11, 6, 5), int32] */;
  %151 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(11, 6, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 6, 5), int32] */, dtype="int32") /* ty=Tensor[(11, 6, 5), int32] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %154 = cast(%var_5750, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %155 = cast(%var_5750, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %156 = reshape(%154, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %157 = reshape(%155, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %158 = subtract(%152, %153) /* ty=Tensor[(11, 6, 5), int32] */;
  %159 = @func_2291(%156, %157) /* ty=Tensor[(6, 14, 16), int8] */;
  (%158, %159, %var_5750)
}

def @func_18876(%var_18875: Tensor[(8, 15, 1), float64]) -> (Tensor[(8, 15, 1), float64], uint8) {
  %169 = fn (%var_18847: Tensor[(8, 15, 1), float64]) -> (Tensor[(8, 15, 1), float64], uint8) {
    %160 = cast(-0.657374f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %161 = cast(%var_18847, dtype="float64") /* ty=Tensor[(8, 15, 1), float64] */;
    %162 = cast(-0.657374f64 /* ty=float64 */, dtype="uint8") /* ty=uint8 */;
    %163 = cast(%var_18847, dtype="uint8") /* ty=Tensor[(8, 15, 1), uint8] */;
    %164 = reshape(%162, newshape=[]) /* ty=uint8 */;
    %165 = reshape(%163, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %166 = @func_17501(%164, %165) /* ty=(Tensor[(14), uint8], uint8, uint8, Tensor[(120), uint8]) */;
    %167 = power(%160, %161) /* ty=Tensor[(8, 15, 1), float64] */;
    %168 = %166.2;
    (%167, %168)
  };
  %169(%var_18875) /* ty=(Tensor[(8, 15, 1), float64], uint8) */
}

def @func_16408(%var_16406: Tensor[(8, 44), int8], %var_16407: Tensor[(2304), float32]) -> (Tensor[(14), uint8], Tensor[(360), float64], Tensor[(11, 4, 16), uint16], Tensor[(704), int8], Tensor[(12, 5, 6), float32], Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2240), float64], Tensor[(8, 44), int8], Tensor[(2304), float32]) {
  %197 = fn (%var_16394: Tensor[(8, 44), int8], %var_16395: Tensor[(2304), float32]) -> (Tensor[(14), uint8], Tensor[(360), float64], Tensor[(11, 4, 16), uint16], Tensor[(704), int8], Tensor[(12, 5, 6), float32], Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2240), float64], Tensor[(8, 44), int8], Tensor[(2304), float32]) {
    %170 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
    %171 = cast(meta[relay.Constant][25] /* ty=Tensor[(704), int8] */, dtype="int8") /* ty=Tensor[(704), int8] */;
    %172 = reshape(%171, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), int8] */;
    %173 = @func_13350(%172) /* ty=(Tensor[(11, 4, 16), uint16],) */;
    %174 = cast(meta[relay.Constant][24] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %175 = cast(meta[relay.Constant][24] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %176 = cast(meta[relay.Constant][24] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %177 = reshape(%174, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %178 = reshape(%175, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %179 = reshape(%176, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %180 = @func_8191(%177, %178, %179) /* ty=Tensor[(12, 5, 6), uint64] */;
    %181 = cast(%180, dtype="float32") /* ty=Tensor[(12, 5, 6), float32] */;
    %182 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %183 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %184 = cast(meta[relay.Constant][26] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
    %185 = cast(%var_16394, dtype="int8") /* ty=Tensor[(8, 44), int8] */;
    %186 = cast(%var_16395, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %187 = reshape(%184, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
    %188 = reshape(%185, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %189 = reshape(%186, newshape=[8, 288]) /* ty=Tensor[(8, 288), float32] */;
    %190 = @func_7456(%187, %188, %189) /* ty=(Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) */;
    %191 = %170.0;
    %192 = %173.0;
    %193 = sin(%181) /* ty=Tensor[(12, 5, 6), float32] */;
    %194 = %182.0;
    %195 = %183.0;
    %196 = %190.3;
    (%191, meta[relay.Constant][24] /* ty=Tensor[(360), float64] */, %192, meta[relay.Constant][25] /* ty=Tensor[(704), int8] */, %193, %194, %195, %196, meta[relay.Constant][26] /* ty=Tensor[(2240), float64] */, %var_16394, %var_16395)
  };
  %197(%var_16406, %var_16407) /* ty=(Tensor[(14), uint8], Tensor[(360), float64], Tensor[(11, 4, 16), uint16], Tensor[(704), int8], Tensor[(12, 5, 6), float32], Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2240), float64], Tensor[(8, 44), int8], Tensor[(2304), float32]) */
}

def @func_19361() -> (Tensor[(11, 4, 16), int8],) {
  %198 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %199 = %198.0;
  (%199,)
}

def @func_12613() -> (Tensor[(11, 4, 16), int8],) {
  %202 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %200 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %201 = %200.0;
    (%201,)
  };
  %202() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_16634() -> Tensor[(16, 10, 14), float64] {
  @func_16632() /* ty=Tensor[(16, 10, 14), float64] */
}

def @func_5977(%var_5955: Tensor[(8, 15, 7), float64], %var_5971: Tensor[(1344), int8], %var_5975: Tensor[(12), float64]) -> (Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) {
  %203 = cast(%var_5955, dtype="float64") /* ty=Tensor[(8, 15, 7), float64] */;
  %204 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(8, 15, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 15, 7), float64] */, dtype="float64") /* ty=Tensor[(8, 15, 7), float64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %207 = floor_divide(%205, %206) /* ty=Tensor[(8, 15, 7), float64] */;
  %208 = cast(%207, dtype="float32") /* ty=Tensor[(8, 15, 7), float32] */;
  %209 = cast(%var_5971, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %210 = cast(%var_5971, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %211 = reshape(%209, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %212 = reshape(%210, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %213 = cast(%var_5975, dtype="float64") /* ty=Tensor[(12), float64] */;
  %214 = reshape(%213, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %215 = @func_4842(%214) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %216 = sinh(%208) /* ty=Tensor[(8, 15, 7), float32] */;
  %217 = @func_2291(%211, %212) /* ty=Tensor[(6, 14, 16), int8] */;
  %218 = %215.0;
  (%216, %217, %var_5971, %218, %var_5975)
}

def @func_13432(%var_13425: Tensor[(840), float32], %var_13428: Tensor[(120), uint8], %var_13429: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) {
  %219 = @func_12756() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %220 = cast(%var_13425, dtype="float32") /* ty=Tensor[(840), float32] */;
  %221 = cast(%var_13425, dtype="float32") /* ty=Tensor[(840), float32] */;
  %222 = cast(meta[relay.Constant][28] /* ty=Tensor[(168, 8), int8] */, dtype="int8") /* ty=Tensor[(168, 8), int8] */;
  %223 = cast(meta[relay.Constant][29] /* ty=Tensor[(968, 1), uint8] */, dtype="uint8") /* ty=Tensor[(968, 1), uint8] */;
  %224 = cast(%var_13428, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %225 = cast(%var_13429, dtype="int16") /* ty=Tensor[(130), int16] */;
  %226 = cast(meta[relay.Constant][30] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %227 = reshape(%220, newshape=[10, 14, 6]) /* ty=Tensor[(10, 14, 6), float32] */;
  %228 = reshape(%221, newshape=[10, 14, 6]) /* ty=Tensor[(10, 14, 6), float32] */;
  %229 = reshape(%222, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %230 = reshape(%223, newshape=[968]) /* ty=Tensor[(968), uint8] */;
  %231 = reshape(%224, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %232 = reshape(%225, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %233 = reshape(%226, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %234 = @func_12265(%227, %228, %229, %230, %231, %232, %233) /* ty=(Tensor[(10, 14, 6), float32], Tensor[(1, 6, 2), float64], Tensor[(1344), int8], Tensor[(12), float64], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8], Tensor[(10, 12, 1), uint16], Tensor[(120), uint8], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(120), uint8], Tensor[(216), uint8]) */;
  %235 = %219.0;
  %236 = %234.14;
  (%235, %236, %var_13425, meta[relay.Constant][28] /* ty=Tensor[(168, 8), int8] */, meta[relay.Constant][29] /* ty=Tensor[(968, 1), uint8] */, %var_13428, %var_13429, meta[relay.Constant][30] /* ty=Tensor[(216), uint8] */)
}

def @func_12182() -> (Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) {
  %237 = cast(meta[relay.Constant][31] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %238 = reshape(%237, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %239 = @func_12083(%238) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) */;
  %240 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  %241 = %239.2;
  (%240, %241, meta[relay.Constant][31] /* ty=Tensor[(2240), float64] */)
}

def @func_12184() -> (Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) {
  @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */
}

def @main(%var_21915: Tensor[(10, 2240), float64]) -> (Tensor[(2, 2240), float64], Tensor[(10, 2240), bool]) {
  %242 = @func_17530() /* ty=Tensor[(1, 2240), float64] */;
  %243 = cast(%242, dtype="float64") /* ty=Tensor[(1, 2240), float64] */;
  %244 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 2240), float64] */, dtype="float64") /* ty=Tensor[(2, 2240), float64] */;
  %245 = cast(%242, dtype="uint64") /* ty=Tensor[(1, 2240), uint64] */;
  %246 = cast(%var_21915, dtype="uint64") /* ty=Tensor[(10, 2240), uint64] */;
  %247 = left_shift(%245, %246) /* ty=Tensor[(10, 2240), uint64] */;
  %248 = cast(%247, dtype="bool") /* ty=Tensor[(10, 2240), bool] */;
  %249 = cast(%242, dtype="bool") /* ty=Tensor[(1, 2240), bool] */;
  %250 = floor_mod(%243, %244) /* ty=Tensor[(2, 2240), float64] */;
  %251 = greater_equal(%248, %249) /* ty=Tensor[(10, 2240), bool] */;
  (%250, %251)
}

def @func_12083(%var_12078: Tensor[(2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) {
  %252 = cast(%var_12078, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %253 = cast(meta[relay.Constant][33] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %254 = cast(meta[relay.Constant][34] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %255 = reshape(%252, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %256 = reshape(%253, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %257 = reshape(%254, newshape=[8, 288]) /* ty=Tensor[(8, 288), float32] */;
  %258 = @func_7456(%255, %256, %257) /* ty=(Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) */;
  %259 = @func_11876() /* ty=Tensor[(11, 4, 16), int8] */;
  %260 = %258.0;
  (%259, %260, %var_12078, meta[relay.Constant][33] /* ty=Tensor[(352), int8] */, meta[relay.Constant][34] /* ty=Tensor[(2304), float32] */)
}

def @func_13269() -> (Tensor[(14), uint8],) {
  %261 = @func_12850() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(6, 2, 7), bool], Tensor[(14), uint8], Tensor[(84), uint8]) */;
  %262 = %261.2;
  (%262,)
}

def @func_14427() -> Tensor[(11, 4, 16), int8] {
  %263 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %263.0
}

def @func_11533() -> Tensor[(11, 4, 16), int8] {
  @func_11531() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20627() -> (Tensor[(11, 4, 16), int8],) {
  %266 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %264 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
    %265 = %264.0;
    (%265,)
  };
  %266() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_11832() -> (Tensor[(11, 4, 16), int8],) {
  @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_12350(%var_12349: Tensor[(2240), float64]) -> Tensor[(2240), uint16] {
  %273 = fn (%var_12331: Tensor[(2240), float64]) -> Tensor[(2240), uint16] {
    %267 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
    %268 = %267.2;
    %269 = cast(%var_12331, dtype="uint16") /* ty=Tensor[(2240), uint16] */;
    %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(1), int32] */;
    %271 = cast(%268, dtype="uint16") /* ty=Tensor[(2240), uint16] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?), uint16] */;
    right_shift(%271, %272) /* ty=Tensor[(2240), uint16] */
  };
  %273(%var_12349) /* ty=Tensor[(2240), uint16] */
}

def @func_21321(%var_21299: Tensor[(14, 4, 1), float32], %var_21300: Tensor[(14, 4, 4), float32]) -> (Tensor[(14, 4, 4), float32], Tensor[(11, 4, 16), int8], Tensor[(840), float32]) {
  %274 = cast(%var_21299, dtype="float32") /* ty=Tensor[(14, 4, 1), float32] */;
  %275 = cast(%var_21300, dtype="float32") /* ty=Tensor[(14, 4, 4), float32] */;
  %276 = cast(meta[relay.Constant][35] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %277 = reshape(%276, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %278 = @func_14357(%277) /* ty=(Tensor[(1, 2240), float64], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130, 840), float32]) */;
  %279 = floor_mod(%274, %275) /* ty=Tensor[(14, 4, 4), float32] */;
  %280 = %278.1;
  (%279, %280, meta[relay.Constant][35] /* ty=Tensor[(840), float32] */)
}

def @func_16517() -> (Tensor[(11, 4, 16), int8],) {
  %281 = @func_12756() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %282 = %281.0;
  (%282,)
}

def @func_18085() -> (Tensor[(11, 4, 16), int8],) {
  %285 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %283 = @func_16472() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %284 = %283.0;
    (%284,)
  };
  %285() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_11878() -> Tensor[(11, 4, 16), int8] {
  @func_11876() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20602() -> (Tensor[(11, 4, 16), int8],) {
  @func_20600() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_18178(%var_18177: Tensor[(15, 210), bool]) -> (Tensor[(14), uint8], Tensor[(15, 15, 14), bool], Tensor[(15, 210), float64]) {
  %299 = fn (%var_18172: Tensor[(15, 210), bool]) -> (Tensor[(14), uint8], Tensor[(15, 15, 14), bool], Tensor[(15, 210), float64]) {
    %286 = @func_17262() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
    %287 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 210), bool] */, dtype="bool") /* ty=Tensor[(15, 210), bool] */;
    %288 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 210), bool] */, dtype="bool") /* ty=Tensor[(15, 210), bool] */;
    %289 = reshape(%287, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
    %290 = reshape(%288, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
    %291 = @func_9363(%289, %290) /* ty=(Tensor[(15, 15, 14), bool],) */;
    %292 = cast(%var_18172, dtype="float64") /* ty=Tensor[(15, 210), float64] */;
    %293 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(15, 210), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %294 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 210), bool] */, dtype="float64") /* ty=Tensor[(15, 210), float64] */;
    %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %296 = %286.1;
    %297 = %291.0;
    %298 = power(%294, %295) /* ty=Tensor[(15, 210), float64] */;
    (%296, %297, %298)
  };
  %299(%var_18177) /* ty=(Tensor[(14), uint8], Tensor[(15, 15, 14), bool], Tensor[(15, 210), float64]) */
}

def @func_17501(%var_17498: uint8, %var_17499: Tensor[(120), uint8]) -> (Tensor[(14), uint8], uint8, uint8, Tensor[(120), uint8]) {
  %300 = @func_15017() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %301 = cast(%var_17498, dtype="uint8") /* ty=uint8 */;
  %302 = cast(%var_17499, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %303 = reshape(%301, newshape=[]) /* ty=uint8 */;
  %304 = reshape(%302, newshape=[6, 20]) /* ty=Tensor[(6, 20), uint8] */;
  %305 = @func_11679(%303, %304) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) */;
  %306 = %300.1;
  %307 = %305.2;
  (%306, %307, %var_17498, %var_17499)
}

def @func_15955(%var_15953: Tensor[(6, 12, 7), int32]) -> (Tensor[(6, 12, 7), int32], Tensor[(6, 12, 7), float32]) {
  @func_15952(%var_15953) /* ty=(Tensor[(6, 12, 7), int32], Tensor[(6, 12, 7), float32]) */
}

def @func_18022() -> Tensor[(8, 11, 11), float64] {
  %311 = fn () -> Tensor[(8, 11, 11), float64] {
    %308 = @func_15530() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
    %309 = %308.1;
    %310 = cast(%309, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
    erf(%310) /* ty=Tensor[(8, 11, 11), float64] */
  };
  %311() /* ty=Tensor[(8, 11, 11), float64] */
}

def @func_18791() -> Tensor[(11, 4, 16), int8] {
  %312 = @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %312.0
}

def @func_13113(%var_13081: Tensor[(8, 7, 5), int32], %var_13082: Tensor[(8, 7, 5), int32], %var_13098: Tensor[(140, 16), float64], %var_13106: Tensor[(6, 60), float64]) -> (Tensor[(8, 7, 5), float64], Tensor[(2240), uint16], Tensor[(140, 16), float64], Tensor[(12, 5, 6), uint64], Tensor[(6, 60), float64]) {
  %313 = cast(%var_13082, dtype="int32") /* ty=Tensor[(8, 7, 5), int32] */;
  %314 = shape_of(%var_13081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%var_13081, dtype="int32") /* ty=Tensor[(8, 7, 5), int32] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %317 = right_shift(%315, %316) /* ty=Tensor[(8, 7, 5), int32] */;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(8, 7, 5), float64] */;
  %319 = cast(%var_13098, dtype="float64") /* ty=Tensor[(140, 16), float64] */;
  %320 = reshape(%319, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %321 = cast(%var_13106, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %322 = cast(%var_13106, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %323 = cast(%var_13106, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %324 = reshape(%321, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %325 = reshape(%322, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %326 = reshape(%323, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
  %327 = cosh(%318) /* ty=Tensor[(8, 7, 5), float64] */;
  %328 = @func_12348(%320) /* ty=Tensor[(2240), uint16] */;
  %329 = @func_8191(%324, %325, %326) /* ty=Tensor[(12, 5, 6), uint64] */;
  (%327, %328, %var_13098, %329, %var_13106)
}

def @func_12735(%var_12732: Tensor[(4, 14, 8), float32], %var_12733: Tensor[(1540), uint64], %var_12734: Tensor[(10, 14, 11), uint64]) -> (Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) {
  %341 = fn (%var_12688: Tensor[(4, 14, 8), float32], %var_12702: Tensor[(1540), uint64], %var_12722: Tensor[(10, 14, 11), uint64]) -> (Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) {
    %330 = cast(%var_12688, dtype="float32") /* ty=Tensor[(4, 14, 8), float32] */;
    %331 = cast(%var_12702, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %332 = reshape(%331, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
    %333 = @func_5624(%332) /* ty=(Tensor[(10, 14, 11), uint64],) */;
    %334 = %333.0;
    %335 = cast(%var_12722, dtype="int8") /* ty=Tensor[(10, 14, 11), int8] */;
    %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(%334, dtype="int8") /* ty=Tensor[(10, 14, 11), int8] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %339 = acosh(%330) /* ty=Tensor[(4, 14, 8), float32] */;
    %340 = add(%337, %338) /* ty=Tensor[(10, 14, 11), int8] */;
    (%339, %var_12702, %340)
  };
  %341(%var_12732, %var_12733, %var_12734) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */
}

def @func_14079(%var_14077: Tensor[(14, 16, 14), uint16], %var_14078: Tensor[(14, 16, 14), uint16]) -> (Tensor[(14, 16, 14), uint16], Tensor[(11, 4, 16), int8]) {
  %348 = fn (%var_14055: Tensor[(14, 16, 14), uint16], %var_14056: Tensor[(14, 16, 14), uint16]) -> (Tensor[(14, 16, 14), uint16], Tensor[(11, 4, 16), int8]) {
    %342 = cast(%var_14056, dtype="uint16") /* ty=Tensor[(14, 16, 14), uint16] */;
    %343 = shape_of(%var_14055, dtype="int32") /* ty=Tensor[(3), int32] */;
    %344 = cast(%var_14055, dtype="uint16") /* ty=Tensor[(14, 16, 14), uint16] */;
    %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %346 = subtract(%344, %345) /* ty=Tensor[(14, 16, 14), uint16] */;
    %347 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
    (%346, %347)
  };
  %348(%var_14077, %var_14078) /* ty=(Tensor[(14, 16, 14), uint16], Tensor[(11, 4, 16), int8]) */
}

def @func_14252() -> (Tensor[(11, 4, 16), int8],) {
  @func_14250() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_18565() -> (Tensor[(14), uint8], Tensor[(352), int8], Tensor[(2304), float32]) {
  @func_18563() /* ty=(Tensor[(14), uint8], Tensor[(352), int8], Tensor[(2304), float32]) */
}

def @func_13984(%var_13939: Tensor[(130), int16], %var_13949: Tensor[(1664), float32]) -> (Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(968, 1), uint8], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(1540), uint64], Tensor[(1664), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(10, 12, 1), uint16], uint8) {
  %349 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %350 = cast(meta[relay.Constant][37] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %351 = cast(meta[relay.Constant][37] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %352 = reshape(%350, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %353 = reshape(%351, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %354 = cast(meta[relay.Constant][38] /* ty=Tensor[(60, 14), float32] */, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %355 = cast(meta[relay.Constant][39] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %356 = cast(%var_13939, dtype="int16") /* ty=Tensor[(130), int16] */;
  %357 = reshape(%354, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %358 = reshape(%355, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %359 = reshape(%356, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %360 = @func_13432(%357, %358, %359) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */;
  %361 = cast(%var_13949, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %362 = cast(meta[relay.Constant][40] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %363 = cast(meta[relay.Constant][41] /* ty=Tensor[(1540), uint64] */, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %364 = reshape(%361, newshape=[8, 16, 13]) /* ty=Tensor[(8, 16, 13), float32] */;
  %365 = reshape(%362, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %366 = reshape(%363, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %367 = @func_6293(%364, %365, %366) /* ty=(Tensor[(8, 16, 13), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) */;
  %368 = cast(meta[relay.Constant][42] /* ty=Tensor[(704), int8] */, dtype="int8") /* ty=Tensor[(704), int8] */;
  %369 = reshape(%368, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), int8] */;
  %370 = @func_13054(%369) /* ty=(Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), int8]) */;
  %371 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %372 = cast(meta[relay.Constant][39] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %373 = reshape(%371, newshape=[]) /* ty=uint8 */;
  %374 = reshape(%372, newshape=[6, 20]) /* ty=Tensor[(6, 20), uint8] */;
  %375 = @func_11679(%373, %374) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) */;
  %376 = %349.3;
  %377 = @func_269(%352, %353) /* ty=Tensor[(14, 4, 6), bool] */;
  %378 = %360.4;
  %379 = %367.4;
  %380 = %370.1;
  %381 = %375.1;
  (%376, %377, meta[relay.Constant][37] /* ty=Tensor[(336), uint8] */, %378, meta[relay.Constant][38] /* ty=Tensor[(60, 14), float32] */, meta[relay.Constant][39] /* ty=Tensor[(120), uint8] */, %var_13939, %379, %var_13949, meta[relay.Constant][40] /* ty=Tensor[(352), int8] */, meta[relay.Constant][41] /* ty=Tensor[(1540), uint64] */, %380, meta[relay.Constant][42] /* ty=Tensor[(704), int8] */, %381, meta[relay.Constant][43] /* ty=uint8 */)
}

def @func_16519() -> (Tensor[(11, 4, 16), int8],) {
  @func_16517() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_19655() -> (Tensor[(11, 4, 16), int8],) {
  %382 = @func_15449() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %383 = %382.0;
  (%383,)
}

def @func_17505(%var_17503: uint8, %var_17504: Tensor[(120), uint8]) -> (Tensor[(14), uint8], uint8, uint8, Tensor[(120), uint8]) {
  @func_17501(%var_17503, %var_17504) /* ty=(Tensor[(14), uint8], uint8, uint8, Tensor[(120), uint8]) */
}

def @func_16539() -> (Tensor[(14), uint8], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) {
  %384 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %385 = cast(meta[relay.Constant][44] /* ty=Tensor[(1344), int8] */, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %386 = cast(meta[relay.Constant][44] /* ty=Tensor[(1344), int8] */, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %387 = reshape(%385, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %388 = reshape(%386, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), int8] */;
  %389 = %384.1;
  %390 = @func_2291(%387, %388) /* ty=Tensor[(6, 14, 16), int8] */;
  (%389, %390, meta[relay.Constant][44] /* ty=Tensor[(1344), int8] */)
}

def @func_19657() -> (Tensor[(11, 4, 16), int8],) {
  @func_19655() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_12128(%var_12127: Tensor[(1, 12), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(1, 12), float64]) {
  %397 = fn (%var_12119: Tensor[(1, 12), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(1, 12), float64]) {
    %391 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %392 = cast(%var_12119, dtype="float64") /* ty=Tensor[(1, 12), float64] */;
    %393 = reshape(%392, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
    %394 = @func_4842(%393) /* ty=(Tensor[(1, 6, 2), float64],) */;
    %395 = %391.0;
    %396 = %394.0;
    (%395, %396, %var_12119)
  };
  %397(%var_12127) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(1, 12), float64]) */
}

def @func_12086(%var_12084: Tensor[(2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) {
  @func_12083(%var_12084) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) */
}

def @func_11996() -> (Tensor[(11, 4, 16), int8],) {
  %400 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %398 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %399 = %398.0;
    (%399,)
  };
  %400() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_17102(%var_17100: Tensor[(12), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(616), float32], Tensor[(840), float64], Tensor[(12), float64], Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(14), uint8], Tensor[(6, 14, 16), bool], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  @func_17099(%var_17100) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(616), float32], Tensor[(840), float64], Tensor[(12), float64], Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(14), uint8], Tensor[(6, 14, 16), bool], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */
}

def @func_17130() -> (Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(560, 4), float64]) {
  %407 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(560, 4), float64]) {
    %401 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %402 = cast(meta[relay.Constant][45] /* ty=Tensor[(560, 4), float64] */, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
    %403 = reshape(%402, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
    %404 = @func_13284(%403) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), uint16], Tensor[(2240), float64]) */;
    %405 = %401.0;
    %406 = %404.2;
    (%405, %406, meta[relay.Constant][45] /* ty=Tensor[(560, 4), float64] */)
  };
  %407() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(560, 4), float64]) */
}

def @func_13772() -> Tensor[(11, 4, 16), int8] {
  %408 = fn () -> Tensor[(11, 4, 16), int8] {
    @func_13401() /* ty=Tensor[(11, 4, 16), int8] */
  };
  %408() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20132() -> (Tensor[(11, 4, 16), int8],) {
  @func_20130() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_15952(%var_15942: Tensor[(6, 12, 7), int32]) -> (Tensor[(6, 12, 7), int32], Tensor[(6, 12, 7), float32]) {
  %409 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 12, 7), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 7), int32] */;
  %410 = shape_of(%var_15942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%var_15942, dtype="int32") /* ty=Tensor[(6, 12, 7), int32] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %413 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 12, 7), int32] */, dtype="float32") /* ty=Tensor[(6, 12, 7), float32] */;
  %414 = bitwise_xor(%411, %412) /* ty=Tensor[(6, 12, 7), int32] */;
  %415 = cosh(%413) /* ty=Tensor[(6, 12, 7), float32] */;
  (%414, %415)
}

def @func_17263() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  %420 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
    %416 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %417 = %416.0;
    %418 = @func_15725() /* ty=Tensor[(14), uint8] */;
    %419 = @func_16233() /* ty=Tensor[(11, 4, 16), int8] */;
    (%417, %418, %419)
  };
  %420() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */
}

def @func_6908(%var_6907: Tensor[(15, 13, 1), float64]) -> (Tensor[(15, 13, 1), float64],) {
  %423 = fn (%var_6894: Tensor[(15, 13, 1), float64]) -> (Tensor[(15, 13, 1), float64],) {
    %421 = cast(%var_6894, dtype="float64") /* ty=Tensor[(15, 13, 1), float64] */;
    %422 = sqrt(%421) /* ty=Tensor[(15, 13, 1), float64] */;
    (%422,)
  };
  %423(%var_6907) /* ty=(Tensor[(15, 13, 1), float64],) */
}

def @func_19510() -> (Tensor[(8, 11, 11), float64],) {
  @func_19508() /* ty=(Tensor[(8, 11, 11), float64],) */
}

def @func_4845(%var_4843: Tensor[(1, 6, 2), float64]) -> (Tensor[(1, 6, 2), float64],) {
  @func_4842(%var_4843) /* ty=(Tensor[(1, 6, 2), float64],) */
}

def @func_15760(%var_15758: Tensor[(2240), float64], %var_15759: Tensor[(352), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) {
  @func_15756(%var_15758, %var_15759) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) */
}

def @func_14776() -> (Tensor[(14), uint8], Tensor[(?, 6, 2), bool]) {
  %424 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %425 = cast(meta[relay.Constant][47] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %426 = reshape(%425, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %427 = @func_4842(%426) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %428 = %427.0;
  %429 = cast(meta[relay.Constant][47] /* ty=Tensor[(12), float64] */, dtype="bool") /* ty=Tensor[(12), bool] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="bool") /* ty=Tensor[(1, 6, 2), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %433 = equal(%431, %432) /* ty=Tensor[(?, 6, 2), bool] */;
  %434 = cast(%428, dtype="bool") /* ty=Tensor[(1, 6, 2), bool] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="bool") /* ty=Tensor[(?, 6, 2), bool] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %438 = %424.1;
  %439 = greater(%436, %437) /* ty=Tensor[(?, 6, 2), bool] */;
  (%438, %439)
}

def @func_13056(%var_13055: Tensor[(11, 4, 16), int8]) -> (Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), int8]) {
  %454 = fn (%var_13018: Tensor[(11, 4, 16), int8]) -> (Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), int8]) {
    %440 = @func_12756() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %441 = %440.0;
    %442 = cast(%var_13018, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
    %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
    %444 = cast(%441, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
    %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %446 = cast(%var_13018, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
    %447 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
    %448 = cast(%441, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
    %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %450 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %451 = greater(%444, %445) /* ty=Tensor[(11, 4, 16), bool] */;
    %452 = logical_or(%448, %449) /* ty=Tensor[(11, 4, 16), bool] */;
    %453 = %450.0;
    (%451, %452, %453)
  };
  %454(%var_13055) /* ty=(Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), bool], Tensor[(11, 4, 16), int8]) */
}

def @func_15004() -> (Tensor[(14), uint8],) {
  %457 = fn () -> (Tensor[(14), uint8],) {
    %455 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
    %456 = %455.1;
    (%456,)
  };
  %457() /* ty=(Tensor[(14), uint8],) */
}

def @func_12852() -> (Tensor[(11, 4, 16), int8], Tensor[(6, 2, 7), bool], Tensor[(14), uint8], Tensor[(84), uint8]) {
  @func_12850() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(6, 2, 7), bool], Tensor[(14), uint8], Tensor[(84), uint8]) */
}

def @func_16235() -> Tensor[(11, 4, 16), int8] {
  @func_16233() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_16541() -> (Tensor[(14), uint8], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) {
  @func_16539() /* ty=(Tensor[(14), uint8], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) */
}

def @func_11531() -> Tensor[(11, 4, 16), int8] {
  %458 = cast(meta[relay.Constant][49] /* ty=Tensor[(11, 4, 16), int8] */, dtype="int8") /* ty=Tensor[(11, 4, 16), int8] */;
  %459 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(11, 4, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 4, 16), int8] */, dtype="int8") /* ty=Tensor[(11, 4, 16), int8] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%460, %461) /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20130() -> (Tensor[(11, 4, 16), int8],) {
  %462 = @func_14938() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %463 = %462.0;
  (%463,)
}

def @func_14250() -> (Tensor[(11, 4, 16), int8],) {
  %464 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %465 = %464.0;
  (%465,)
}

def @func_19973(%var_19961: Tensor[(280), int32], %var_19963: Tensor[(360), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(140, 16), float64], Tensor[(280), int32], Tensor[(2240, 360), uint32]) {
  %466 = cast(%var_19961, dtype="int32") /* ty=Tensor[(280), int32] */;
  %467 = cast(%var_19961, dtype="int32") /* ty=Tensor[(280), int32] */;
  %468 = cast(meta[relay.Constant][50] /* ty=Tensor[(2240, 1), float64] */, dtype="float64") /* ty=Tensor[(2240, 1), float64] */;
  %469 = cast(%var_19963, dtype="float64") /* ty=Tensor[(360), float64] */;
  %470 = reshape(%466, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), int32] */;
  %471 = reshape(%467, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), int32] */;
  %472 = reshape(%468, newshape=[140, 16]) /* ty=Tensor[(140, 16), float64] */;
  %473 = reshape(%469, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
  %474 = @func_13113(%470, %471, %472, %473) /* ty=(Tensor[(8, 7, 5), float64], Tensor[(2240), uint16], Tensor[(140, 16), float64], Tensor[(12, 5, 6), uint64], Tensor[(6, 60), float64]) */;
  %475 = cast(meta[relay.Constant][50] /* ty=Tensor[(2240, 1), float64] */, dtype="uint32") /* ty=Tensor[(2240, 1), uint32] */;
  %476 = cast(%var_19963, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %477 = @func_17806() /* ty=Tensor[(11, 4, 16), int8] */;
  %478 = %474.2;
  %479 = right_shift(%475, %476) /* ty=Tensor[(2240, 360), uint32] */;
  (%477, %478, %var_19961, %479)
}

def @func_19841() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %484 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
    %480 = @func_17262() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
    %481 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
    %482 = %480.0;
    %483 = %481.6;
    (%482, %483)
  };
  %484() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */
}

def @func_21009() -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(616), float32], Tensor[(1664), float32], Tensor[(11, 4, 16), int8]) {
  @func_21007() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(616), float32], Tensor[(1664), float32], Tensor[(11, 4, 16), int8]) */
}

def @func_20643() -> Tensor[(11, 4, 16), int8] {
  %486 = fn () -> Tensor[(11, 4, 16), int8] {
    %485 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %485.0
  };
  %486() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_4641(%var_4638: Tensor[(12, 11, 16), int32], %var_4639: Tensor[(12, 11, 16), int32], %var_4640: Tensor[(4, 180), float32]) -> (Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) {
  @func_4636(%var_4638, %var_4639, %var_4640) /* ty=(Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) */
}

def @func_20531(%var_20530: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(448), float32], Tensor[(1540), uint64]) {
  %493 = fn (%var_20489: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(448), float32], Tensor[(1540), uint64]) {
    %487 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
    %488 = cast(%var_20489, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %489 = reshape(%488, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
    %490 = @func_15104(%489) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64]) */;
    %491 = %487.1;
    %492 = %490.2;
    (%491, %492, %var_20489)
  };
  %493(%var_20530) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(448), float32], Tensor[(1540), uint64]) */
}

def @func_8079(%var_8076: Tensor[(13, 15, 12), float32], %var_8077: Tensor[(130), int16], %var_8078: Tensor[(1540), uint64]) -> (Tensor[(13, 15, 12), float32], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) {
  %503 = fn (%var_8049: Tensor[(13, 15, 12), float32], %var_8056: Tensor[(130), int16], %var_8062: Tensor[(1540), uint64]) -> (Tensor[(13, 15, 12), float32], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) {
    %494 = cast(%var_8049, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
    %495 = cast(%var_8056, dtype="int16") /* ty=Tensor[(130), int16] */;
    %496 = reshape(%495, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), int16] */;
    %497 = cast(%var_8062, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %498 = reshape(%497, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
    %499 = @func_5624(%498) /* ty=(Tensor[(10, 14, 11), uint64],) */;
    %500 = rsqrt(%494) /* ty=Tensor[(13, 15, 12), float32] */;
    %501 = @func_5333(%496) /* ty=Tensor[(13, 1, 10), bool] */;
    %502 = %499.0;
    (%500, %501, %var_8056, %502, %var_8062)
  };
  %503(%var_8076, %var_8077, %var_8078) /* ty=(Tensor[(13, 15, 12), float32], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) */
}

def @func_2590(%var_2575: uint8, %var_2576: Tensor[(8, 11, 11), uint8]) -> (Tensor[(8, 11, 11), uint8],) {
  %504 = cast(%var_2575, dtype="uint8") /* ty=uint8 */;
  %505 = cast(%var_2576, dtype="uint8") /* ty=Tensor[(8, 11, 11), uint8] */;
  %506 = multiply(%504, %505) /* ty=Tensor[(8, 11, 11), uint8] */;
  (%506,)
}

def @func_21676() -> Tensor[(11, 4, 16), int8] {
  %508 = fn () -> Tensor[(11, 4, 16), int8] {
    %507 = @func_20626() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %507.0
  };
  %508() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_17532() -> Tensor[(1, 2240), float64] {
  @func_17530() /* ty=Tensor[(1, 2240), float64] */
}

def @func_20347(%var_20329: Tensor[(2304), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2304), float32], Tensor[(16, 10, 14), float32]) {
  %509 = @func_16859() /* ty=(Tensor[(14), uint8],) */;
  %510 = @func_19869() /* ty=(Tensor[(16, 10, 14), float64],) */;
  %511 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %512 = cast(%var_20329, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %513 = reshape(%512, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %514 = @func_7074(%513) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %515 = @func_16632() /* ty=Tensor[(16, 10, 14), float64] */;
  %516 = cast(%515, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
  %517 = asin(%516) /* ty=Tensor[(16, 10, 14), float32] */;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(16, 10, 14), float64] */;
  %519 = rsqrt(%518) /* ty=Tensor[(16, 10, 14), float64] */;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
  %521 = @func_17580() /* ty=Tensor[(11, 4, 16), int8] */;
  %522 = %509.0;
  %523 = %510.0;
  %524 = %511.0;
  %525 = %514.2;
  %526 = log2(%520) /* ty=Tensor[(16, 10, 14), float32] */;
  (%521, %522, %523, %524, %525, %var_20329, %526)
}

def @func_15332() -> (Tensor[(14), uint8],) {
  %529 = fn () -> (Tensor[(14), uint8],) {
    %527 = @func_15017() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
    %528 = %527.1;
    (%528,)
  };
  %529() /* ty=(Tensor[(14), uint8],) */
}

def @func_18845() -> (Tensor[(16, 10, 14), float64],) {
  %531 = fn () -> (Tensor[(16, 10, 14), float64],) {
    %530 = @func_16632() /* ty=Tensor[(16, 10, 14), float64] */;
    (%530,)
  };
  %531() /* ty=(Tensor[(16, 10, 14), float64],) */
}

def @func_16601() -> Tensor[(14), uint8] {
  %533 = fn () -> Tensor[(14), uint8] {
    %532 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
    %532.0
  };
  %533() /* ty=Tensor[(14), uint8] */
}

def @func_13437(%var_13434: Tensor[(840), float32], %var_13435: Tensor[(120), uint8], %var_13436: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) {
  @func_13432(%var_13434, %var_13435, %var_13436) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */
}

def @func_17099(%var_17000: Tensor[(12), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(616), float32], Tensor[(840), float64], Tensor[(12), float64], Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(14), uint8], Tensor[(6, 14, 16), bool], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  %534 = @func_16572() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %535 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %536 = cast(meta[relay.Constant][52] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %537 = reshape(%536, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %538 = @func_13625(%537) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) */;
  %539 = cast(meta[relay.Constant][51] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %540 = cast(meta[relay.Constant][53] /* ty=Tensor[(1344), int8] */, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %541 = cast(%var_17000, dtype="float64") /* ty=Tensor[(12), float64] */;
  %542 = reshape(%539, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float64] */;
  %543 = reshape(%540, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %544 = reshape(%541, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %545 = @func_5977(%542, %543, %544) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */;
  %546 = %545.1;
  %547 = cast(meta[relay.Constant][53] /* ty=Tensor[(1344), int8] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %551 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
  %552 = %534.0;
  %553 = %535.2;
  %554 = %538.1;
  %555 = @func_16650() /* ty=Tensor[(14), uint8] */;
  %556 = logical_or(%549, %550) /* ty=Tensor[(6, 14, 16), bool] */;
  %557 = %551.0;
  %558 = @func_13771() /* ty=Tensor[(11, 4, 16), int8] */;
  (%552, %553, meta[relay.Constant][51] /* ty=Tensor[(840), float64] */, %var_17000, %554, meta[relay.Constant][52] /* ty=Tensor[(2304), float32] */, %555, %556, %557, %558)
}

def @func_19996() -> Tensor[(11, 4, 16), int8] {
  @func_19994() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_15199() -> Tensor[(11, 4, 16), int8] {
  %560 = fn () -> Tensor[(11, 4, 16), int8] {
    %559 = @func_12756() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %559.0
  };
  %560() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_19682() -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) {
  %565 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) {
    %561 = @func_16082() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %562 = @func_19508() /* ty=(Tensor[(8, 11, 11), float64],) */;
    %563 = %561.0;
    %564 = %562.0;
    (%563, %564)
  };
  %565() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) */
}

def @func_19192() -> (Tensor[(2240), bool],) {
  %568 = fn () -> (Tensor[(2240), bool],) {
    %566 = @func_13181() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) */;
    %567 = %566.1;
    (%567,)
  };
  %568() /* ty=(Tensor[(2240), bool],) */
}

def @func_12466() -> (Tensor[(11, 4, 16), int8],) {
  %571 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %569 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %570 = %569.0;
    (%570,)
  };
  %571() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_21481(%var_21414: Tensor[(450), int16]) -> (Tensor[(16, 10, 14), float64], Tensor[(450), int16], Tensor[(11, 4, 16), int8], Tensor[(15, 2, 15), float64]) {
  %572 = @func_18303() /* ty=(Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8]) */;
  %573 = @func_16064() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %574 = cast(%var_21414, dtype="int16") /* ty=Tensor[(450), int16] */;
  %575 = reshape(%574, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), int16] */;
  %576 = @func_6581(%575) /* ty=(Tensor[(15, 2, 15), int16],) */;
  %577 = %576.0;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(15, 2, 15), float64] */;
  %579 = %572.0;
  %580 = %573.0;
  %581 = cos(%578) /* ty=Tensor[(15, 2, 15), float64] */;
  (%579, %var_21414, %580, %581)
}

def @func_15158(%var_15156: Tensor[(12), float64], %var_15157: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(1344), int8], Tensor[(1344), int8], Tensor[(11, 4, 16), float32], Tensor[(12), float64], Tensor[(450), int16], uint8, uint8) {
  @func_15154(%var_15156, %var_15157) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1344), int8], Tensor[(1344), int8], Tensor[(11, 4, 16), float32], Tensor[(12), float64], Tensor[(450), int16], uint8, uint8) */
}

def @func_21325(%var_21323: Tensor[(14, 4, 1), float32], %var_21324: Tensor[(14, 4, 4), float32]) -> (Tensor[(14, 4, 4), float32], Tensor[(11, 4, 16), int8], Tensor[(840), float32]) {
  @func_21321(%var_21323, %var_21324) /* ty=(Tensor[(14, 4, 4), float32], Tensor[(11, 4, 16), int8], Tensor[(840), float32]) */
}

def @func_15426(%var_15396: Tensor[(12), float64], %var_15422: Tensor[(352), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) {
  %582 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %583 = cast(%var_15396, dtype="float64") /* ty=Tensor[(12), float64] */;
  %584 = reshape(%583, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %585 = @func_4842(%584) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %586 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
  %587 = cast(%var_15422, dtype="int8") /* ty=Tensor[(352), int8] */;
  %588 = reshape(%587, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
  %589 = %582.0;
  %590 = %585.0;
  %591 = %586.0;
  %592 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  %593 = @func_4810(%588) /* ty=Tensor[(11, 8, 4), bool] */;
  (%589, %590, %var_15396, %591, %592, %593, %var_15422)
}

def @func_14778() -> (Tensor[(14), uint8], Tensor[(?, 6, 2), bool]) {
  @func_14776() /* ty=(Tensor[(14), uint8], Tensor[(?, 6, 2), bool]) */
}

def @func_7460(%var_7457: Tensor[(16, 10, 14), float64], %var_7458: Tensor[(352), int8], %var_7459: Tensor[(8, 288), float32]) -> (Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) {
  %610 = fn (%var_7426: Tensor[(16, 10, 14), float64], %var_7439: Tensor[(352), int8], %var_7446: Tensor[(8, 288), float32]) -> (Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) {
    %594 = cast(%var_7426, dtype="float64") /* ty=Tensor[(16, 10, 14), float64] */;
    %595 = sin(%594) /* ty=Tensor[(16, 10, 14), float64] */;
    %596 = cast(%595, dtype="float64") /* ty=Tensor[(16, 10, 14), float64] */;
    %597 = cast(meta[relay.Constant][54] /* ty=Tensor[(1664, 1), float32] */, dtype="float32") /* ty=Tensor[(1664, 1), float32] */;
    %598 = cast(%var_7439, dtype="int8") /* ty=Tensor[(352), int8] */;
    %599 = cast(meta[relay.Constant][55] /* ty=Tensor[(1540), uint64] */, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %600 = reshape(%597, newshape=[8, 16, 13]) /* ty=Tensor[(8, 16, 13), float32] */;
    %601 = reshape(%598, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %602 = reshape(%599, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
    %603 = @func_6293(%600, %601, %602) /* ty=(Tensor[(8, 16, 13), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) */;
    %604 = cast(%var_7446, dtype="float32") /* ty=Tensor[(8, 288), float32] */;
    %605 = reshape(%604, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
    %606 = @func_7074(%605) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
    %607 = acosh(%596) /* ty=Tensor[(16, 10, 14), float64] */;
    %608 = %603.3;
    %609 = %606.2;
    (%607, %608, meta[relay.Constant][54] /* ty=Tensor[(1664, 1), float32] */, %var_7439, meta[relay.Constant][55] /* ty=Tensor[(1540), uint64] */, %609, %var_7446)
  };
  %610(%var_7457, %var_7458, %var_7459) /* ty=(Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) */
}

def @func_16573() -> (Tensor[(11, 4, 16), int8],) {
  %613 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %611 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
    %612 = %611.0;
    (%612,)
  };
  %613() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_12940() -> (Tensor[(11, 4, 16), int8],) {
  %615 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %614 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
    (%614,)
  };
  %615() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_21407() -> Tensor[(11, 4, 16), int8] {
  %616 = fn () -> Tensor[(11, 4, 16), int8] {
    @func_17580() /* ty=Tensor[(11, 4, 16), int8] */
  };
  %616() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20886(%var_20884: Tensor[(336), uint8]) -> (Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(2304, 1), float32], Tensor[(14, 4, 6), float64]) {
  @func_20883(%var_20884) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(2304, 1), float32], Tensor[(14, 4, 6), float64]) */
}

def @func_15270() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %617 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %618 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %619 = %617.0;
  %620 = %618.0;
  (%619, %620)
}

def @func_11876() -> Tensor[(11, 4, 16), int8] {
  %621 = @func_11830() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %621.0
}

def @func_16947() -> Tensor[(616), float32] {
  @func_16945() /* ty=Tensor[(616), float32] */
}

def @func_1085(%var_1082: Tensor[(6, 3, 12), uint8], %var_1083: uint8, %var_1084: Tensor[(120), uint8]) -> (Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) {
  %638 = fn (%var_1061: Tensor[(6, 3, 12), uint8], %var_1075: uint8, %var_1076: Tensor[(120), uint8]) -> (Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) {
    %622 = cast(meta[relay.Constant][56] /* ty=Tensor[(6, 3, 12), uint8] */, dtype="uint8") /* ty=Tensor[(6, 3, 12), uint8] */;
    %623 = shape_of(%var_1061, dtype="int32") /* ty=Tensor[(3), int32] */;
    %624 = cast(%var_1061, dtype="uint8") /* ty=Tensor[(6, 3, 12), uint8] */;
    %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %626 = cast(%var_1075, dtype="uint8") /* ty=uint8 */;
    %627 = cast(%var_1076, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %628 = reshape(%626, newshape=[]) /* ty=uint8 */;
    %629 = reshape(%627, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
    %630 = @func_129(%628, %629) /* ty=(Tensor[(10, 12, 1), uint16],) */;
    %631 = cast(meta[relay.Constant][57] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
    %632 = cast(meta[relay.Constant][57] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
    %633 = reshape(%631, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
    %634 = reshape(%632, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
    %635 = bitwise_xor(%624, %625) /* ty=Tensor[(6, 3, 12), uint8] */;
    %636 = %630.0;
    %637 = @func_269(%633, %634) /* ty=Tensor[(14, 4, 6), bool] */;
    (%635, %636, %var_1075, %var_1076, %637, meta[relay.Constant][57] /* ty=Tensor[(336), uint8] */)
  };
  %638(%var_1082, %var_1083, %var_1084) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */
}

def @func_16632() -> Tensor[(16, 10, 14), float64] {
  %639 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %639.1
}

def @func_20391(%var_20390: Tensor[(2, 168), uint8]) -> (Tensor[(11, 4, 16), int8], Tensor[(384), float64], uint8, Tensor[(14, 4, 6), bool], Tensor[(2, 168), uint8]) {
  %651 = fn (%var_20383: Tensor[(2, 168), uint8]) -> (Tensor[(11, 4, 16), int8], Tensor[(384), float64], uint8, Tensor[(14, 4, 6), bool], Tensor[(2, 168), uint8]) {
    %640 = @func_16488() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %641 = cast(meta[relay.Constant][58] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %642 = reshape(%641, newshape=[]) /* ty=uint8 */;
    %643 = @func_14908(%642) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(968), uint8], Tensor[(384), float64], uint8) */;
    %644 = cast(%var_20383, dtype="uint8") /* ty=Tensor[(2, 168), uint8] */;
    %645 = cast(%var_20383, dtype="uint8") /* ty=Tensor[(2, 168), uint8] */;
    %646 = reshape(%644, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
    %647 = reshape(%645, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
    %648 = %640.0;
    %649 = %643.2;
    %650 = @func_269(%646, %647) /* ty=Tensor[(14, 4, 6), bool] */;
    (%648, %649, meta[relay.Constant][58] /* ty=uint8 */, %650, %var_20383)
  };
  %651(%var_20390) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(384), float64], uint8, Tensor[(14, 4, 6), bool], Tensor[(2, 168), uint8]) */
}

def @func_5721(%var_5645: Tensor[(7, 1, 8), float32], %var_5646: Tensor[(7, 2, 8), float32], %var_5671: Tensor[(12), float64], %var_5694: Tensor[(120), uint8], %var_5702: Tensor[(168, 2), float64], %var_5715: Tensor[(130), int16]) -> (Tensor[(7, 2, 8), float32], Tensor[(12), float64], Tensor[(12, 4, 15), float32], Tensor[(720), float32], Tensor[(120), uint8], Tensor[(1, 6, 2), float32], Tensor[(168, 2), float64], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(168, 2), float64]) {
  %652 = cast(%var_5645, dtype="float32") /* ty=Tensor[(7, 1, 8), float32] */;
  %653 = cast(%var_5646, dtype="float32") /* ty=Tensor[(7, 2, 8), float32] */;
  %654 = cast(meta[relay.Constant][59] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %655 = cast(%var_5694, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %656 = reshape(%654, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), float32] */;
  %657 = reshape(%655, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %658 = @func_1489(%656, %657) /* ty=(Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) */;
  %659 = cast(%var_5671, dtype="float64") /* ty=Tensor[(12), float64] */;
  %660 = reshape(%659, newshape=[1, 6, 2]) /* ty=Tensor[(1, 6, 2), float64] */;
  %661 = @func_4842(%660) /* ty=(Tensor[(1, 6, 2), float64],) */;
  %662 = %661.0;
  %663 = cast(%662, dtype="float32") /* ty=Tensor[(1, 6, 2), float32] */;
  %664 = cast(meta[relay.Constant][60] /* ty=Tensor[(168, 2), uint8] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %665 = log2(%664) /* ty=Tensor[(168, 2), float64] */;
  %666 = cast(%var_5702, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(2), int32] */;
  %668 = cast(%665, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %670 = cast(meta[relay.Constant][61] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %671 = reshape(%670, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
  %672 = cast(%var_5715, dtype="int16") /* ty=Tensor[(130), int16] */;
  %673 = reshape(%672, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), int16] */;
  %674 = cast(meta[relay.Constant][60] /* ty=Tensor[(168, 2), uint8] */, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %675 = cast(meta[relay.Constant][60] /* ty=Tensor[(168, 2), uint8] */, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %676 = reshape(%674, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %677 = reshape(%675, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %678 = @func_269(%676, %677) /* ty=Tensor[(14, 4, 6), bool] */;
  %679 = cast(%678, dtype="uint32") /* ty=Tensor[(14, 4, 6), uint32] */;
  %680 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(168, 2), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %681 = cast(meta[relay.Constant][60] /* ty=Tensor[(168, 2), uint8] */, dtype="uint32") /* ty=Tensor[(168, 2), uint32] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %683 = left_shift(%681, %682) /* ty=Tensor[(168, 2), uint32] */;
  %684 = cast(%683, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %685 = shape_of(%665, dtype="int32") /* ty=Tensor[(2), int32] */;
  %686 = cast(%665, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %688 = floor_mod(%652, %653) /* ty=Tensor[(7, 2, 8), float32] */;
  %689 = %658.5;
  %690 = log2(%663) /* ty=Tensor[(1, 6, 2), float32] */;
  %691 = mod(%668, %669) /* ty=Tensor[(168, 2), float64] */;
  %692 = @func_4810(%671) /* ty=Tensor[(11, 8, 4), bool] */;
  %693 = @func_5333(%673) /* ty=Tensor[(13, 1, 10), bool] */;
  %694 = divide(%686, %687) /* ty=Tensor[(168, 2), float64] */;
  (%688, %var_5671, %689, meta[relay.Constant][59] /* ty=Tensor[(720), float32] */, %var_5694, %690, %691, %692, meta[relay.Constant][61] /* ty=Tensor[(352), int8] */, %693, %var_5715, %694)
}

def @func_18991() -> Tensor[(11, 4, 16), int8] {
  %695 = fn () -> Tensor[(11, 4, 16), int8] {
    @func_12557() /* ty=Tensor[(11, 4, 16), int8] */
  };
  %695() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_17725() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(12), float64]) {
  %704 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(12), float64]) {
    %696 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %697 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
    %698 = cast(meta[relay.Constant][62] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %699 = reshape(%698, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %700 = @func_17099(%699) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(616), float32], Tensor[(840), float64], Tensor[(12), float64], Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(14), uint8], Tensor[(6, 14, 16), bool], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
    %701 = %696.0;
    %702 = %697.1;
    %703 = %700.6;
    (%701, %702, %703, meta[relay.Constant][62] /* ty=Tensor[(12), float64] */)
  };
  %704() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(12), float64]) */
}

def @func_6297(%var_6294: Tensor[(8, 16, 13), float32], %var_6295: Tensor[(352), int8], %var_6296: Tensor[(1540), uint64]) -> (Tensor[(8, 16, 13), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) {
  %714 = fn (%var_6282: Tensor[(8, 16, 13), float32], %var_6286: Tensor[(352), int8], %var_6291: Tensor[(1540), uint64]) -> (Tensor[(8, 16, 13), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) {
    %705 = cast(%var_6282, dtype="float32") /* ty=Tensor[(8, 16, 13), float32] */;
    %706 = cast(%var_6286, dtype="int8") /* ty=Tensor[(352), int8] */;
    %707 = reshape(%706, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
    %708 = cast(%var_6291, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %709 = reshape(%708, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
    %710 = @func_5624(%709) /* ty=(Tensor[(10, 14, 11), uint64],) */;
    %711 = sinh(%705) /* ty=Tensor[(8, 16, 13), float32] */;
    %712 = @func_4810(%707) /* ty=Tensor[(11, 8, 4), bool] */;
    %713 = %710.0;
    (%711, %712, %var_6286, %713, %var_6291)
  };
  %714(%var_6294, %var_6295, %var_6296) /* ty=(Tensor[(8, 16, 13), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) */
}

def @func_18049() -> Tensor[(990), float64] {
  %715 = @func_17469() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(10, 9, 11), bool], Tensor[(990), float64]) */;
  %715.2
}

def @func_21007() -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(616), float32], Tensor[(1664), float32], Tensor[(11, 4, 16), int8]) {
  %716 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %717 = @func_18844() /* ty=(Tensor[(16, 10, 14), float64],) */;
  %718 = cast(meta[relay.Constant][63] /* ty=Tensor[(1664), float32] */, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %719 = reshape(%718, newshape=[1664]) /* ty=Tensor[(1664), float32] */;
  %720 = @func_18647(%719) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(616), float32]) */;
  %721 = @func_20149() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %722 = %716.0;
  %723 = %717.0;
  %724 = %720.4;
  %725 = %721.0;
  (%722, %723, %724, meta[relay.Constant][63] /* ty=Tensor[(1664), float32] */, %725)
}

def @func_14704() -> Tensor[(616), float32] {
  %726 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %726.2
}

def @func_16588() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %727 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %728 = %727.0;
  %729 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  (%728, %729)
}

def @func_20227() -> (Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %730 = @func_14776() /* ty=(Tensor[(14), uint8], Tensor[(?, 6, 2), bool]) */;
  %731 = @func_20130() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %732 = %730.0;
  %733 = @func_16682() /* ty=Tensor[(11, 4, 16), int8] */;
  %734 = %731.0;
  (%732, %733, %734)
}

def @func_18650(%var_18648: Tensor[(1664), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(616), float32]) {
  @func_18647(%var_18648) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(616), float32]) */
}

def @func_8242(%var_8237: Tensor[(12, 9, 6), float64], %var_8238: Tensor[(195), float64], %var_8239: Tensor[(2, 420), float64], %var_8240: Tensor[(1344), int8], %var_8241: Tensor[(12), float64]) -> (Tensor[(12, 9, 6), float64], Tensor[(15, 13, 1), float64], Tensor[(195), float64], Tensor[(12), float64], Tensor[(2, 420), float64], Tensor[(1344), int8], Tensor[(12), float64]) {
  %749 = fn (%var_8215: Tensor[(12, 9, 6), float64], %var_8219: Tensor[(195), float64], %var_8231: Tensor[(2, 420), float64], %var_8232: Tensor[(1344), int8], %var_8233: Tensor[(12), float64]) -> (Tensor[(12, 9, 6), float64], Tensor[(15, 13, 1), float64], Tensor[(195), float64], Tensor[(12), float64], Tensor[(2, 420), float64], Tensor[(1344), int8], Tensor[(12), float64]) {
    %735 = cast(%var_8215, dtype="float64") /* ty=Tensor[(12, 9, 6), float64] */;
    %736 = cast(%var_8219, dtype="float64") /* ty=Tensor[(195), float64] */;
    %737 = reshape(%736, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float64] */;
    %738 = @func_6906(%737) /* ty=(Tensor[(15, 13, 1), float64],) */;
    %739 = cast(%var_8231, dtype="float64") /* ty=Tensor[(2, 420), float64] */;
    %740 = cast(%var_8232, dtype="int8") /* ty=Tensor[(1344), int8] */;
    %741 = cast(%var_8233, dtype="float64") /* ty=Tensor[(12), float64] */;
    %742 = reshape(%739, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float64] */;
    %743 = reshape(%740, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
    %744 = reshape(%741, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %745 = @func_5977(%742, %743, %744) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */;
    %746 = acosh(%735) /* ty=Tensor[(12, 9, 6), float64] */;
    %747 = %738.0;
    %748 = %745.4;
    (%746, %747, %var_8219, %748, %var_8231, %var_8232, %var_8233)
  };
  %749(%var_8237, %var_8238, %var_8239, %var_8240, %var_8241) /* ty=(Tensor[(12, 9, 6), float64], Tensor[(15, 13, 1), float64], Tensor[(195), float64], Tensor[(12), float64], Tensor[(2, 420), float64], Tensor[(1344), int8], Tensor[(12), float64]) */
}

def @func_13182() -> (Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) {
  %761 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) {
    %750 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %751 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
    %752 = %751.1;
    %753 = cast(%752, dtype="float64") /* ty=Tensor[(2240), float64] */;
    %754 = asinh(%753) /* ty=Tensor[(2240), float64] */;
    %755 = cast(%752, dtype="bool") /* ty=Tensor[(2240), bool] */;
    %756 = shape_of(%754, dtype="int32") /* ty=Tensor[(1), int32] */;
    %757 = cast(%754, dtype="bool") /* ty=Tensor[(2240), bool] */;
    %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?), bool] */;
    %759 = %750.0;
    %760 = greater_equal(%757, %758) /* ty=Tensor[(2240), bool] */;
    (%759, %760)
  };
  %761() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) */
}

def @func_20149() -> (Tensor[(11, 4, 16), int8],) {
  %762 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  (%762,)
}

def @func_13286(%var_13285: Tensor[(2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(2240), uint16], Tensor[(2240), float64]) {
  %768 = fn (%var_13278: Tensor[(2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(2240), uint16], Tensor[(2240), float64]) {
    %763 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %764 = cast(%var_13278, dtype="float64") /* ty=Tensor[(2240), float64] */;
    %765 = reshape(%764, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
    %766 = %763.0;
    %767 = @func_12348(%765) /* ty=Tensor[(2240), uint16] */;
    (%766, %767, %var_13278)
  };
  %768(%var_13285) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), uint16], Tensor[(2240), float64]) */
}

def @func_16233() -> Tensor[(11, 4, 16), int8] {
  %769 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %769.0
}

def @func_18504(%var_18462: Tensor[(2, 12, 10), int16], %var_18472: Tensor[(616), float32], %var_18484: Tensor[(130), int16], %var_18491: Tensor[(12, 42), int32], %var_18497: uint8) -> (Tensor[(2, 12, 10), int16], Tensor[(2, 12, 10), bool], Tensor[(660), float64], Tensor[(616), float32], Tensor[(660), float64], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(6, 12, 7), float32], Tensor[(12, 42), int32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8]) {
  %770 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 12, 10), int16] */, dtype="int16") /* ty=Tensor[(2, 12, 10), int16] */;
  %771 = shape_of(%var_18462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%var_18462, dtype="int16") /* ty=Tensor[(2, 12, 10), int16] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %774 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 12, 10), int16] */, dtype="bool") /* ty=Tensor[(2, 12, 10), bool] */;
  %775 = shape_of(%var_18462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_18462, dtype="bool") /* ty=Tensor[(2, 12, 10), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %778 = cast(%var_18472, dtype="float32") /* ty=Tensor[(616), float32] */;
  %779 = cast(meta[relay.Constant][65] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %780 = reshape(%778, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), float32] */;
  %781 = reshape(%779, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %782 = @func_1983(%780, %781) /* ty=(Tensor[(11, 4, 14), float32], Tensor[(6, 10, 11), float64], Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) */;
  %783 = cast(%var_18484, dtype="int16") /* ty=Tensor[(130), int16] */;
  %784 = cast(meta[relay.Constant][66] /* ty=Tensor[(1664), float32] */, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %785 = reshape(%783, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %786 = reshape(%784, newshape=[1664]) /* ty=Tensor[(1664), float32] */;
  %787 = @func_13984(%785, %786) /* ty=(Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(968, 1), uint8], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(1540), uint64], Tensor[(1664), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(10, 12, 1), uint16], uint8) */;
  %788 = cast(%var_18491, dtype="int32") /* ty=Tensor[(12, 42), int32] */;
  %789 = reshape(%788, newshape=[6, 12, 7]) /* ty=Tensor[(6, 12, 7), int32] */;
  %790 = @func_15952(%789) /* ty=(Tensor[(6, 12, 7), int32], Tensor[(6, 12, 7), float32]) */;
  %791 = cast(%var_18497, dtype="uint8") /* ty=uint8 */;
  %792 = cast(meta[relay.Constant][67] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %793 = reshape(%791, newshape=[]) /* ty=uint8 */;
  %794 = reshape(%792, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
  %795 = @func_129(%793, %794) /* ty=(Tensor[(10, 12, 1), uint16],) */;
  %796 = bitwise_xor(%772, %773) /* ty=Tensor[(2, 12, 10), int16] */;
  %797 = less_equal(%776, %777) /* ty=Tensor[(2, 12, 10), bool] */;
  %798 = %782.2;
  %799 = %787.7;
  %800 = %790.1;
  %801 = %795.0;
  (%796, %797, %798, %var_18472, meta[relay.Constant][65] /* ty=Tensor[(660), float64] */, %799, %var_18484, meta[relay.Constant][66] /* ty=Tensor[(1664), float32] */, %800, %var_18491, %801, %var_18497, meta[relay.Constant][67] /* ty=Tensor[(120), uint8] */)
}

def @func_18647(%var_18631: Tensor[(1664), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(616), float32]) {
  %802 = cast(meta[relay.Constant][68] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %803 = cast(%var_18631, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %804 = reshape(%802, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %805 = reshape(%803, newshape=[1664]) /* ty=Tensor[(1664), float32] */;
  %806 = @func_13984(%804, %805) /* ty=(Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(968, 1), uint8], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(1540), uint64], Tensor[(1664), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(11, 4, 16), bool], Tensor[(704), int8], Tensor[(10, 12, 1), uint16], uint8) */;
  %807 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  %808 = %806.10;
  %809 = @func_14704() /* ty=Tensor[(616), float32] */;
  (%807, %808, meta[relay.Constant][68] /* ty=Tensor[(130), int16] */, %var_18631, %809)
}

def @func_15917(%var_15906: uint64) -> (Tensor[(1, 13, 1), bool], Tensor[(11, 4, 16), int8]) {
  %810 = cast(%var_15906, dtype="bool") /* ty=bool */;
  %811 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 13, 1), uint64] */, dtype="bool") /* ty=Tensor[(1, 13, 1), bool] */;
  %812 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %813 = less(%810, %811) /* ty=Tensor[(1, 13, 1), bool] */;
  %814 = %812.0;
  (%813, %814)
}

def @func_5333(%var_5298: Tensor[(13, 1, 10), int16]) -> Tensor[(13, 1, 10), bool] {
  %815 = cast(meta[relay.Constant][70] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %816 = cast(%var_5298, dtype="bool") /* ty=Tensor[(13, 1, 10), bool] */;
  greater(%815, %816) /* ty=Tensor[(13, 1, 10), bool] */
}

def @func_19636() -> Tensor[(1, 2240), float64] {
  %820 = fn () -> Tensor[(1, 2240), float64] {
    %817 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
    %818 = %817.2;
    %819 = cast(%818, dtype="float64") /* ty=Tensor[(1, 2240), float64] */;
    rsqrt(%819) /* ty=Tensor[(1, 2240), float64] */
  };
  %820() /* ty=Tensor[(1, 2240), float64] */
}

def @func_20701() -> (Tensor[(990), float64],) {
  %822 = fn () -> (Tensor[(990), float64],) {
    %821 = @func_18049() /* ty=Tensor[(990), float64] */;
    (%821,)
  };
  %822() /* ty=(Tensor[(990), float64],) */
}

def @func_14429() -> Tensor[(11, 4, 16), int8] {
  @func_14427() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20600() -> (Tensor[(11, 4, 16), int8],) {
  %823 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
  %824 = %823.0;
  (%824,)
}

def @func_12972(%var_12957: Tensor[(450), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(15, 2, 15), int16], Tensor[(450), int16]) {
  %825 = cast(%var_12957, dtype="int16") /* ty=Tensor[(450), int16] */;
  %826 = reshape(%825, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), int16] */;
  %827 = @func_6581(%826) /* ty=(Tensor[(15, 2, 15), int16],) */;
  %828 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
  %829 = %827.0;
  (%828, %829, %var_12957)
}

def @func_12975(%var_12973: Tensor[(450), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(15, 2, 15), int16], Tensor[(450), int16]) {
  @func_12972(%var_12973) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(15, 2, 15), int16], Tensor[(450), int16]) */
}

def @func_20350(%var_20348: Tensor[(2304), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2304), float32], Tensor[(16, 10, 14), float32]) {
  @func_20347(%var_20348) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(16, 10, 14), float64], Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2304), float32], Tensor[(16, 10, 14), float32]) */
}

def @func_12273(%var_12266: Tensor[(10, 14, 6), float32], %var_12267: Tensor[(10, 14, 6), float32], %var_12268: Tensor[(1344), int8], %var_12269: Tensor[(968), uint8], %var_12270: Tensor[(120), uint8], %var_12271: Tensor[(130), int16], %var_12272: Tensor[(216), uint8]) -> (Tensor[(10, 14, 6), float32], Tensor[(1, 6, 2), float64], Tensor[(1344), int8], Tensor[(12), float64], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8], Tensor[(10, 12, 1), uint16], Tensor[(120), uint8], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(120), uint8], Tensor[(216), uint8]) {
  %873 = fn (%var_12189: Tensor[(10, 14, 6), float32], %var_12190: Tensor[(10, 14, 6), float32], %var_12200: Tensor[(1344), int8], %var_12215: Tensor[(968), uint8], %var_12228: Tensor[(120), uint8], %var_12244: Tensor[(130), int16], %var_12252: Tensor[(216), uint8]) -> (Tensor[(10, 14, 6), float32], Tensor[(1, 6, 2), float64], Tensor[(1344), int8], Tensor[(12), float64], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8], Tensor[(10, 12, 1), uint16], Tensor[(120), uint8], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(120), uint8], Tensor[(216), uint8]) {
    %830 = cast(%var_12190, dtype="float32") /* ty=Tensor[(10, 14, 6), float32] */;
    %831 = shape_of(%var_12189, dtype="int32") /* ty=Tensor[(3), int32] */;
    %832 = cast(%var_12189, dtype="float32") /* ty=Tensor[(10, 14, 6), float32] */;
    %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %834 = floor_divide(%832, %833) /* ty=Tensor[(10, 14, 6), float32] */;
    %835 = cast(%834, dtype="float64") /* ty=Tensor[(10, 14, 6), float64] */;
    %836 = cast(%var_12200, dtype="int8") /* ty=Tensor[(1344), int8] */;
    %837 = cast(meta[relay.Constant][71] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %838 = reshape(%835, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float64] */;
    %839 = reshape(%836, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
    %840 = reshape(%837, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %841 = @func_5977(%838, %839, %840) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */;
    %842 = cast(meta[relay.Constant][72] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %843 = cast(%var_12215, dtype="uint8") /* ty=Tensor[(968), uint8] */;
    %844 = reshape(%842, newshape=[]) /* ty=uint8 */;
    %845 = reshape(%843, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), uint8] */;
    %846 = @func_2590(%844, %845) /* ty=(Tensor[(8, 11, 11), uint8],) */;
    %847 = cast(meta[relay.Constant][72] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %848 = cast(%var_12228, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %849 = reshape(%847, newshape=[]) /* ty=uint8 */;
    %850 = reshape(%848, newshape=[6, 20]) /* ty=Tensor[(6, 20), uint8] */;
    %851 = @func_11679(%849, %850) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) */;
    %852 = cast(meta[relay.Constant][73] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %853 = cast(meta[relay.Constant][73] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %854 = cast(meta[relay.Constant][73] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %855 = reshape(%852, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %856 = reshape(%853, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %857 = reshape(%854, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %858 = cast(%var_12244, dtype="int16") /* ty=Tensor[(130), int16] */;
    %859 = reshape(%858, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), int16] */;
    %860 = cast(%var_12252, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %861 = cast(meta[relay.Constant][72] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %862 = cast(%var_12228, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %863 = reshape(%860, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
    %864 = reshape(%861, newshape=[]) /* ty=uint8 */;
    %865 = reshape(%862, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %866 = @func_1081(%863, %864, %865) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
    %867 = %841.3;
    %868 = %846.0;
    %869 = %851.1;
    %870 = @func_8191(%855, %856, %857) /* ty=Tensor[(12, 5, 6), uint64] */;
    %871 = @func_5333(%859) /* ty=Tensor[(13, 1, 10), bool] */;
    %872 = %866.3;
    (%834, %867, %var_12200, meta[relay.Constant][71] /* ty=Tensor[(12), float64] */, %868, meta[relay.Constant][72] /* ty=uint8 */, %var_12215, %869, %var_12228, %870, meta[relay.Constant][73] /* ty=Tensor[(360), float64] */, %871, %var_12244, %872, %var_12252)
  };
  %873(%var_12266, %var_12267, %var_12268, %var_12269, %var_12270, %var_12271, %var_12272) /* ty=(Tensor[(10, 14, 6), float32], Tensor[(1, 6, 2), float64], Tensor[(1344), int8], Tensor[(12), float64], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8], Tensor[(10, 12, 1), uint16], Tensor[(120), uint8], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(120), uint8], Tensor[(216), uint8]) */
}

def @func_14676(%var_14660: Tensor[(10, 9, 11), float64]) -> (Tensor[(10, 9, 11), bool], Tensor[(10, 9, 11), uint64]) {
  %874 = cast(meta[relay.Constant][74] /* ty=Tensor[(10, 9, 11), float64] */, dtype="bool") /* ty=Tensor[(10, 9, 11), bool] */;
  %875 = shape_of(%var_14660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%var_14660, dtype="bool") /* ty=Tensor[(10, 9, 11), bool] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %878 = cast(meta[relay.Constant][74] /* ty=Tensor[(10, 9, 11), float64] */, dtype="uint64") /* ty=Tensor[(10, 9, 11), uint64] */;
  %879 = shape_of(%var_14660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%var_14660, dtype="uint64") /* ty=Tensor[(10, 9, 11), uint64] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %882 = greater(%876, %877) /* ty=Tensor[(10, 9, 11), bool] */;
  %883 = logical_xor(%880, %881) /* ty=Tensor[(10, 9, 11), uint64] */;
  (%882, %883)
}

def @func_19871() -> (Tensor[(16, 10, 14), float64],) {
  @func_19869() /* ty=(Tensor[(16, 10, 14), float64],) */
}

def @func_15379(%var_15356: Tensor[(11, 4, 16), int8]) -> (Tensor[(352), int8], Tensor[(16, 144), float32], Tensor[(11, 4, 16), float32]) {
  %884 = cast(meta[relay.Constant][75] /* ty=Tensor[(16, 144), float32] */, dtype="float32") /* ty=Tensor[(16, 144), float32] */;
  %885 = reshape(%884, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %886 = @func_7074(%885) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %887 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %888 = %887.0;
  %889 = cast(%var_15356, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%888, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %893 = %886.2;
  %894 = mod(%891, %892) /* ty=Tensor[(11, 4, 16), float32] */;
  (%893, meta[relay.Constant][75] /* ty=Tensor[(16, 144), float32] */, %894)
}

def @func_17795() -> Tensor[(2240), float64] {
  @func_17793() /* ty=Tensor[(2240), float64] */
}

def @func_2295(%var_2293: Tensor[(6, 14, 16), int8], %var_2294: Tensor[(6, 14, 16), int8]) -> Tensor[(6, 14, 16), int8] {
  @func_2291(%var_2293, %var_2294) /* ty=Tensor[(6, 14, 16), int8] */
}

def @func_13350(%var_13336: Tensor[(11, 4, 16), int8]) -> (Tensor[(11, 4, 16), uint16],) {
  %895 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %896 = %895.0;
  %897 = cast(%var_13336, dtype="uint16") /* ty=Tensor[(11, 4, 16), uint16] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%896, dtype="uint16") /* ty=Tensor[(11, 4, 16), uint16] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %901 = subtract(%899, %900) /* ty=Tensor[(11, 4, 16), uint16] */;
  (%901,)
}

def @func_5770(%var_5768: Tensor[(1344), int8]) -> (Tensor[(11, 6, 5), int32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) {
  @func_5767(%var_5768) /* ty=(Tensor[(11, 6, 5), int32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) */
}

def @func_15382(%var_15380: Tensor[(11, 4, 16), int8]) -> (Tensor[(352), int8], Tensor[(16, 144), float32], Tensor[(11, 4, 16), float32]) {
  @func_15379(%var_15380) /* ty=(Tensor[(352), int8], Tensor[(16, 144), float32], Tensor[(11, 4, 16), float32]) */
}

def @func_12662(%var_12660: Tensor[(11, 4, 16), float64]) -> Tensor[(11, 4, 16), int32] {
  @func_12659(%var_12660) /* ty=Tensor[(11, 4, 16), int32] */
}

def @func_13675() -> (Tensor[(11, 4, 16), int8],) {
  %902 = @func_13181() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) */;
  %903 = %902.0;
  (%903,)
}

def @func_272(%var_270: Tensor[(14, 4, 6), uint8], %var_271: Tensor[(14, 4, 6), uint8]) -> Tensor[(14, 4, 6), bool] {
  %908 = fn (%var_259: Tensor[(14, 4, 6), uint8], %var_260: Tensor[(14, 4, 6), uint8]) -> Tensor[(14, 4, 6), bool] {
    %904 = cast(%var_260, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
    %905 = shape_of(%var_259, dtype="int32") /* ty=Tensor[(3), int32] */;
    %906 = cast(%var_259, dtype="bool") /* ty=Tensor[(14, 4, 6), bool] */;
    %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%906, %907) /* ty=Tensor[(14, 4, 6), bool] */
  };
  %908(%var_270, %var_271) /* ty=Tensor[(14, 4, 6), bool] */
}

def @func_13677() -> (Tensor[(11, 4, 16), int8],) {
  @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_18793() -> Tensor[(11, 4, 16), int8] {
  @func_18791() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_21260(%var_21257: Tensor[(448), float32], %var_21258: Tensor[(1540), uint64], %var_21259: Tensor[(2112), int32]) -> (Tensor[(11, 4, 16), int8], Tensor[(448), float32], Tensor[(1540), uint64], Tensor[(14), uint8], Tensor[(14), uint8], Tensor[(10, 14, 11), int8], Tensor[(120), uint8], Tensor[(2112), int32], Tensor[(720), float32], Tensor[(10, 14, 11), float64]) {
  %941 = fn (%var_21192: Tensor[(448), float32], %var_21193: Tensor[(1540), uint64], %var_21238: Tensor[(2112), int32]) -> (Tensor[(11, 4, 16), int8], Tensor[(448), float32], Tensor[(1540), uint64], Tensor[(14), uint8], Tensor[(14), uint8], Tensor[(10, 14, 11), int8], Tensor[(120), uint8], Tensor[(2112), int32], Tensor[(720), float32], Tensor[(10, 14, 11), float64]) {
    %909 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %910 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
    %911 = @func_15331() /* ty=(Tensor[(14), uint8],) */;
    %912 = cast(%var_21192, dtype="float32") /* ty=Tensor[(448), float32] */;
    %913 = cast(%var_21192, dtype="float32") /* ty=Tensor[(448), float32] */;
    %914 = cast(%var_21193, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %915 = cast(%var_21193, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %916 = reshape(%913, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
    %917 = reshape(%914, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
    %918 = reshape(%915, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
    %919 = @func_12731(%916, %917, %918) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */;
    %920 = %919.2;
    %921 = cast(%920, dtype="uint64") /* ty=Tensor[(10, 14, 11), uint64] */;
    %922 = cast(%920, dtype="uint64") /* ty=Tensor[(10, 14, 11), uint64] */;
    %923 = reshape(%912, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
    %924 = reshape(%921, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
    %925 = reshape(%922, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
    %926 = @func_12731(%923, %924, %925) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */;
    %927 = cast(%var_21238, dtype="int32") /* ty=Tensor[(2112), int32] */;
    %928 = cast(%var_21238, dtype="int32") /* ty=Tensor[(2112), int32] */;
    %929 = cast(meta[relay.Constant][76] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %930 = reshape(%927, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
    %931 = reshape(%928, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
    %932 = reshape(%929, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
    %933 = @func_4636(%930, %931, %932) /* ty=(Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) */;
    %934 = cast(%920, dtype="float64") /* ty=Tensor[(10, 14, 11), float64] */;
    %935 = %909.0;
    %936 = %910.1;
    %937 = %911.0;
    %938 = %926.2;
    %939 = %933.3;
    %940 = acosh(%934) /* ty=Tensor[(10, 14, 11), float64] */;
    (%935, %var_21192, %var_21193, %936, %937, %938, %939, %var_21238, meta[relay.Constant][76] /* ty=Tensor[(720), float32] */, %940)
  };
  %941(%var_21257, %var_21258, %var_21259) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(448), float32], Tensor[(1540), uint64], Tensor[(14), uint8], Tensor[(14), uint8], Tensor[(10, 14, 11), int8], Tensor[(120), uint8], Tensor[(2112), int32], Tensor[(720), float32], Tensor[(10, 14, 11), float64]) */
}

def @func_2594(%var_2592: uint8, %var_2593: Tensor[(8, 11, 11), uint8]) -> (Tensor[(8, 11, 11), uint8],) {
  @func_2590(%var_2592, %var_2593) /* ty=(Tensor[(8, 11, 11), uint8],) */
}

def @func_13234() -> (Tensor[(11, 4, 16), int8],) {
  %944 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %942 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %943 = %942.0;
    (%943,)
  };
  %944() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_20422() -> Tensor[(2240), bool] {
  %946 = fn () -> Tensor[(2240), bool] {
    %945 = @func_13181() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), bool]) */;
    %945.1
  };
  %946() /* ty=Tensor[(2240), bool] */
}

def @func_16473() -> (Tensor[(11, 4, 16), int8],) {
  %949 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %947 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %948 = %947.0;
    (%948,)
  };
  %949() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_17867(%var_17865: uint64) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], uint64) {
  @func_17864(%var_17865) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], uint64) */
}

def @func_18912() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  @func_18910() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */
}

def @func_18051() -> Tensor[(990), float64] {
  @func_18049() /* ty=Tensor[(990), float64] */
}

def @func_2291(%var_2276: Tensor[(6, 14, 16), int8], %var_2277: Tensor[(6, 14, 16), int8]) -> Tensor[(6, 14, 16), int8] {
  %950 = cast(%var_2277, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %951 = shape_of(%var_2276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %952 = cast(%var_2276, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%952, %953) /* ty=Tensor[(6, 14, 16), int8] */
}

def @func_21852() -> Tensor[(11, 4, 16), int8] {
  %955 = fn () -> Tensor[(11, 4, 16), int8] {
    %954 = @func_15017() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
    %954.0
  };
  %955() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_17285() -> Tensor[(11, 4, 16), int8] {
  @func_16682() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20759() -> (Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2304), float32]) {
  %956 = @func_16082() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %957 = cast(meta[relay.Constant][77] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %958 = reshape(%957, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %959 = @func_7074(%958) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %960 = %956.0;
  %961 = %959.2;
  (%960, %961, meta[relay.Constant][77] /* ty=Tensor[(2304), float32] */)
}

def @func_15726() -> Tensor[(14), uint8] {
  %963 = fn () -> Tensor[(14), uint8] {
    %962 = @func_13269() /* ty=(Tensor[(14), uint8],) */;
    %962.0
  };
  %963() /* ty=Tensor[(14), uint8] */
}

def @func_20781() -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) {
  %964 = @func_16488() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %965 = @func_19681() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) */;
  %966 = %964.0;
  %967 = %965.1;
  (%966, %967)
}

def @func_13271() -> (Tensor[(14), uint8],) {
  @func_13269() /* ty=(Tensor[(14), uint8],) */
}

def @func_20761() -> (Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2304), float32]) {
  @func_20759() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2304), float32]) */
}

def @func_13403() -> Tensor[(11, 4, 16), int8] {
  @func_13401() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_17614() -> (Tensor[(11, 4, 16), int8],) {
  %969 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %968 = @func_15198() /* ty=Tensor[(11, 4, 16), int8] */;
    (%968,)
  };
  %969() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_11830() -> (Tensor[(11, 4, 16), int8],) {
  %970 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
  (%970,)
}

def @func_21623(%var_21617: Tensor[(12, 1), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(12, 1), float64], Tensor[(352), int8]) {
  %971 = @func_16472() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %972 = cast(%var_21617, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
  %973 = cast(meta[relay.Constant][78] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %974 = reshape(%972, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %975 = reshape(%973, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %976 = @func_15426(%974, %975) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %977 = %971.0;
  %978 = %976.5;
  (%977, %978, %var_21617, meta[relay.Constant][78] /* ty=Tensor[(352), int8] */)
}

def @func_19977(%var_19975: Tensor[(280), int32], %var_19976: Tensor[(360), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(140, 16), float64], Tensor[(280), int32], Tensor[(2240, 360), uint32]) {
  @func_19973(%var_19975, %var_19976) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(140, 16), float64], Tensor[(280), int32], Tensor[(2240, 360), uint32]) */
}

def @func_21484(%var_21482: Tensor[(450), int16]) -> (Tensor[(16, 10, 14), float64], Tensor[(450), int16], Tensor[(11, 4, 16), int8], Tensor[(15, 2, 15), float64]) {
  @func_21481(%var_21482) /* ty=(Tensor[(16, 10, 14), float64], Tensor[(450), int16], Tensor[(11, 4, 16), int8], Tensor[(15, 2, 15), float64]) */
}

def @func_14911(%var_14909: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(968), uint8], Tensor[(384), float64], uint8) {
  @func_14908(%var_14909) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(968), uint8], Tensor[(384), float64], uint8) */
}

def @func_11682(%var_11680: uint8, %var_11681: Tensor[(6, 20), uint8]) -> (Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) {
  %988 = fn (%var_11670: uint8, %var_11671: Tensor[(6, 20), uint8]) -> (Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) {
    %979 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
    %980 = cast(%979, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
    %981 = cast(%var_11670, dtype="uint8") /* ty=uint8 */;
    %982 = cast(%var_11671, dtype="uint8") /* ty=Tensor[(6, 20), uint8] */;
    %983 = reshape(%981, newshape=[]) /* ty=uint8 */;
    %984 = reshape(%982, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
    %985 = @func_129(%983, %984) /* ty=(Tensor[(10, 12, 1), uint16],) */;
    %986 = acosh(%980) /* ty=Tensor[(11, 4, 16), float32] */;
    %987 = %985.0;
    (%986, %987, %var_11670, %var_11671)
  };
  %988(%var_11680, %var_11681) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(6, 20), uint8]) */
}

def @func_17471() -> (Tensor[(11, 4, 16), int8], Tensor[(10, 9, 11), bool], Tensor[(990), float64]) {
  @func_17469() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(10, 9, 11), bool], Tensor[(990), float64]) */
}

def @func_15994() -> Tensor[(14), uint8] {
  %989 = @func_15331() /* ty=(Tensor[(14), uint8],) */;
  %989.0
}

def @func_13625(%var_13622: Tensor[(2304), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) {
  %990 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %991 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %992 = cast(%var_13622, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %993 = reshape(%992, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %994 = @func_7074(%993) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %995 = %990.0;
  %996 = %991.0;
  %997 = %994.0;
  (%995, %996, %997, %var_13622)
}

def @func_5336(%var_5334: Tensor[(13, 1, 10), int16]) -> Tensor[(13, 1, 10), bool] {
  @func_5333(%var_5334) /* ty=Tensor[(13, 1, 10), bool] */
}

def @func_21693() -> (Tensor[(11, 4, 16), int8],) {
  @func_21691() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_12387() -> (Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) {
  @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */
}

def @func_5626(%var_5625: Tensor[(10, 14, 11), uint64]) -> (Tensor[(10, 14, 11), uint64],) {
  %1003 = fn (%var_5613: Tensor[(10, 14, 11), uint64]) -> (Tensor[(10, 14, 11), uint64],) {
    %998 = cast(meta[relay.Constant][79] /* ty=Tensor[(10, 14, 11), uint64] */, dtype="uint64") /* ty=Tensor[(10, 14, 11), uint64] */;
    %999 = shape_of(%var_5613, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1000 = cast(%var_5613, dtype="uint64") /* ty=Tensor[(10, 14, 11), uint64] */;
    %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1002 = multiply(%1000, %1001) /* ty=Tensor[(10, 14, 11), uint64] */;
    (%1002,)
  };
  %1003(%var_5625) /* ty=(Tensor[(10, 14, 11), uint64],) */
}

def @func_19994() -> Tensor[(11, 4, 16), int8] {
  %1004 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1004.0
}

def @func_17469() -> (Tensor[(11, 4, 16), int8], Tensor[(10, 9, 11), bool], Tensor[(990), float64]) {
  %1005 = cast(meta[relay.Constant][80] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %1006 = reshape(%1005, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), float64] */;
  %1007 = @func_14676(%1006) /* ty=(Tensor[(10, 9, 11), bool], Tensor[(10, 9, 11), uint64]) */;
  %1008 = @func_15678() /* ty=Tensor[(11, 4, 16), int8] */;
  %1009 = %1007.0;
  (%1008, %1009, meta[relay.Constant][80] /* ty=Tensor[(990), float64] */)
}

def @func_18265(%var_18262: Tensor[(840), float32], %var_18263: Tensor[(120), uint8], %var_18264: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130), int16]) {
  %1020 = fn (%var_18255: Tensor[(840), float32], %var_18256: Tensor[(120), uint8], %var_18257: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130), int16]) {
    %1010 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1011 = cast(%var_18255, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1012 = cast(%var_18256, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1013 = cast(%var_18257, dtype="int16") /* ty=Tensor[(130), int16] */;
    %1014 = reshape(%1011, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %1015 = reshape(%1012, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1016 = reshape(%1013, newshape=[130]) /* ty=Tensor[(130), int16] */;
    %1017 = @func_13432(%1014, %1015, %1016) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(168, 8), int8], Tensor[(968, 1), uint8], Tensor[(120), uint8], Tensor[(130), int16], Tensor[(216), uint8]) */;
    %1018 = %1010.0;
    %1019 = %1017.7;
    (%1018, %1019, %var_18255, %var_18256, %var_18257)
  };
  %1020(%var_18262, %var_18263, %var_18264) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(216), uint8], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130), int16]) */
}

def @func_21072() -> (Tensor[(11, 4, 16), int8], Tensor[(6, 16, 4), float64], Tensor[(384), float64]) {
  %1027 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(6, 16, 4), float64], Tensor[(384), float64]) {
    %1021 = @func_20626() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1022 = cast(meta[relay.Constant][81] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %1023 = reshape(%1022, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %1024 = @func_19591(%1023) /* ty=(Tensor[(120), uint8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) */;
    %1025 = %1021.0;
    %1026 = %1024.1;
    (%1025, %1026, meta[relay.Constant][81] /* ty=Tensor[(384), float64] */)
  };
  %1027() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(6, 16, 4), float64], Tensor[(384), float64]) */
}

def @func_14188(%var_14163: Tensor[(12), float64], %var_14180: Tensor[(1, 450), int16]) -> (Tensor[(11, 4, 16), float32], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(15, 2, 15), int16], Tensor[(1, 450), int16]) {
  %1028 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %1029 = %1028.0;
  %1030 = cast(%1029, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %1031 = cast(%var_14163, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1032 = reshape(%1031, newshape=[1, 12]) /* ty=Tensor[(1, 12), float64] */;
  %1033 = @func_12126(%1032) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1, 6, 2), float64], Tensor[(1, 12), float64]) */;
  %1034 = cast(%var_14180, dtype="int16") /* ty=Tensor[(1, 450), int16] */;
  %1035 = reshape(%1034, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), int16] */;
  %1036 = @func_6581(%1035) /* ty=(Tensor[(15, 2, 15), int16],) */;
  %1037 = sinh(%1030) /* ty=Tensor[(11, 4, 16), float32] */;
  %1038 = %1033.1;
  %1039 = %1036.0;
  (%1037, %1038, %var_14163, %1039, %var_14180)
}

def @func_12533() -> (Tensor[(11, 4, 16), int8],) {
  %1042 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %1040 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1041 = %1040.0;
    (%1041,)
  };
  %1042() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_17864(%var_17856: uint64) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8], uint64) {
  %1043 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %1044 = cast(%var_17856, dtype="uint64") /* ty=uint64 */;
  %1045 = reshape(%1044, newshape=[]) /* ty=uint64 */;
  %1046 = @func_15917(%1045) /* ty=(Tensor[(1, 13, 1), bool], Tensor[(11, 4, 16), int8]) */;
  %1047 = @func_14427() /* ty=Tensor[(11, 4, 16), int8] */;
  %1048 = @func_17806() /* ty=Tensor[(11, 4, 16), int8] */;
  %1049 = %1043.1;
  %1050 = %1046.1;
  (%1047, %1048, %1049, %1050, %var_17856)
}

def @func_16590() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  @func_16588() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */
}

def @func_16831(%var_16829: Tensor[(280), int32], %var_16830: Tensor[(360), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(12, 5, 6), uint64], Tensor[(280), int32], Tensor[(2240), float64], Tensor[(360), float64]) {
  @func_16827(%var_16829, %var_16830) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(12, 5, 6), uint64], Tensor[(280), int32], Tensor[(2240), float64], Tensor[(360), float64]) */
}

def @func_14192(%var_14190: Tensor[(12), float64], %var_14191: Tensor[(1, 450), int16]) -> (Tensor[(11, 4, 16), float32], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(15, 2, 15), int16], Tensor[(1, 450), int16]) {
  @func_14188(%var_14190, %var_14191) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(15, 2, 15), int16], Tensor[(1, 450), int16]) */
}

def @func_16860() -> (Tensor[(14), uint8],) {
  %1053 = fn () -> (Tensor[(14), uint8],) {
    %1051 = @func_15003() /* ty=(Tensor[(14), uint8],) */;
    %1052 = %1051.0;
    (%1052,)
  };
  %1053() /* ty=(Tensor[(14), uint8],) */
}

def @func_13709(%var_13708: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(13, 1, 10), bool], Tensor[(130), int16]) {
  %1059 = fn (%var_13702: Tensor[(130), int16]) -> (Tensor[(11, 4, 16), int8], Tensor[(13, 1, 10), bool], Tensor[(130), int16]) {
    %1054 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1055 = cast(%var_13702, dtype="int16") /* ty=Tensor[(130), int16] */;
    %1056 = reshape(%1055, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), int16] */;
    %1057 = %1054.0;
    %1058 = @func_5333(%1056) /* ty=Tensor[(13, 1, 10), bool] */;
    (%1057, %1058, %var_13702)
  };
  %1059(%var_13708) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(13, 1, 10), bool], Tensor[(130), int16]) */
}

def @func_21116() -> Tensor[(11, 4, 16), int8] {
  %1060 = @func_18084() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1060.0
}

def @func_13401() -> Tensor[(11, 4, 16), int8] {
  %1061 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1061.0
}

def @func_17581() -> Tensor[(11, 4, 16), int8] {
  %1063 = fn () -> Tensor[(11, 4, 16), int8] {
    %1062 = @func_12532() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1062.0
  };
  %1063() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_20883(%var_20840: Tensor[(336), uint8]) -> (Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(2304, 1), float32], Tensor[(14, 4, 6), float64]) {
  %1064 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
  %1065 = cast(meta[relay.Constant][82] /* ty=Tensor[(2304, 1), float32] */, dtype="float32") /* ty=Tensor[(2304, 1), float32] */;
  %1066 = reshape(%1065, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %1067 = @func_13625(%1066) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) */;
  %1068 = cast(%var_20840, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1069 = cast(%var_20840, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1070 = reshape(%1068, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1071 = reshape(%1069, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1072 = @func_269(%1070, %1071) /* ty=Tensor[(14, 4, 6), bool] */;
  %1073 = cast(%var_20840, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1074 = shape_of(%1072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%1072, dtype="float64") /* ty=Tensor[(14, 4, 6), float64] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1077 = %1064.0;
  %1078 = %1067.3;
  %1079 = floor_divide(%1075, %1076) /* ty=Tensor[(14, 4, 6), float64] */;
  (%1077, %1078, meta[relay.Constant][82] /* ty=Tensor[(2304, 1), float32] */, %1079)
}

def @func_1986(%var_1984: Tensor[(11, 4, 14), float32], %var_1985: Tensor[(660), float64]) -> (Tensor[(11, 4, 14), float32], Tensor[(6, 10, 11), float64], Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) {
  %1093 = fn (%var_1959: Tensor[(11, 4, 14), float32], %var_1965: Tensor[(660), float64]) -> (Tensor[(11, 4, 14), float32], Tensor[(6, 10, 11), float64], Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) {
    %1080 = cast(%var_1959, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
    %1081 = cast(%var_1965, dtype="float64") /* ty=Tensor[(660), float64] */;
    %1082 = reshape(%1081, newshape=[6, 10, 11]) /* ty=Tensor[(6, 10, 11), float64] */;
    %1083 = cast(meta[relay.Constant][83] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1084 = cast(meta[relay.Constant][84] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1085 = cast(meta[relay.Constant][85] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1086 = reshape(%1083, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
    %1087 = reshape(%1084, newshape=[]) /* ty=uint8 */;
    %1088 = reshape(%1085, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1089 = @func_1081(%1086, %1087, %1088) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
    %1090 = exp(%1080) /* ty=Tensor[(11, 4, 14), float32] */;
    %1091 = @func_1866(%1082) /* ty=Tensor[(6, 10, 11), float64] */;
    %1092 = %1089.4;
    (%1090, %1091, %var_1965, %1092, meta[relay.Constant][83] /* ty=Tensor[(216), uint8] */, meta[relay.Constant][84] /* ty=uint8 */, meta[relay.Constant][85] /* ty=Tensor[(120), uint8] */)
  };
  %1093(%var_1984, %var_1985) /* ty=(Tensor[(11, 4, 14), float32], Tensor[(6, 10, 11), float64], Tensor[(660), float64], Tensor[(14, 4, 6), bool], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) */
}

def @func_14638(%var_14633: Tensor[(336), uint8], %var_14634: Tensor[(3136), uint16], %var_14635: Tensor[(2112), int32], %var_14636: Tensor[(720), float32], %var_14637: Tensor[(448), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(11, 8, 4), bool], Tensor[(11, 4, 14), bool], Tensor[(720), float32], Tensor[(2112), bool], Tensor[(11, 4, 16), int8], Tensor[(176, 2), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64], Tensor[(660), float64]) {
  @func_14631(%var_14633, %var_14634, %var_14635, %var_14636, %var_14637) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(11, 8, 4), bool], Tensor[(11, 4, 14), bool], Tensor[(720), float32], Tensor[(2112), bool], Tensor[(11, 4, 16), int8], Tensor[(176, 2), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64], Tensor[(660), float64]) */
}

def @func_14679(%var_14677: Tensor[(10, 9, 11), float64]) -> (Tensor[(10, 9, 11), bool], Tensor[(10, 9, 11), uint64]) {
  @func_14676(%var_14677) /* ty=(Tensor[(10, 9, 11), bool], Tensor[(10, 9, 11), uint64]) */
}

def @func_14706() -> Tensor[(616), float32] {
  @func_14704() /* ty=Tensor[(616), float32] */
}

def @func_16445(%var_16444: Tensor[(720), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), bool], Tensor[(4, 180), float32], Tensor[(2112), int32], Tensor[(720), float32]) {
  %1113 = fn (%var_16440: Tensor[(720), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), bool], Tensor[(4, 180), float32], Tensor[(2112), int32], Tensor[(720), float32]) {
    %1094 = @func_15449() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1095 = @func_15530() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
    %1096 = %1095.1;
    %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
    %1098 = rsqrt(%1097) /* ty=Tensor[(8, 11, 11), float64] */;
    %1099 = cast(%1096, dtype="bool") /* ty=Tensor[(8, 11, 11), bool] */;
    %1100 = shape_of(%1098, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1101 = cast(%1098, dtype="bool") /* ty=Tensor[(8, 11, 11), bool] */;
    %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1103 = cast(meta[relay.Constant][86] /* ty=Tensor[(2112), int32] */, dtype="int32") /* ty=Tensor[(2112), int32] */;
    %1104 = cast(meta[relay.Constant][86] /* ty=Tensor[(2112), int32] */, dtype="int32") /* ty=Tensor[(2112), int32] */;
    %1105 = cast(%var_16440, dtype="float32") /* ty=Tensor[(720), float32] */;
    %1106 = reshape(%1103, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
    %1107 = reshape(%1104, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
    %1108 = reshape(%1105, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
    %1109 = @func_4636(%1106, %1107, %1108) /* ty=(Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) */;
    %1110 = %1094.0;
    %1111 = logical_or(%1101, %1102) /* ty=Tensor[(8, 11, 11), bool] */;
    %1112 = %1109.2;
    (%1110, %1111, %1112, meta[relay.Constant][86] /* ty=Tensor[(2112), int32] */, %var_16440)
  };
  %1113(%var_16444) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), bool], Tensor[(4, 180), float32], Tensor[(2112), int32], Tensor[(720), float32]) */
}

def @func_15756(%var_15752: Tensor[(2240), float64], %var_15753: Tensor[(352), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(352), int8], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) {
  %1114 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1115 = cast(%var_15752, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %1116 = cast(%var_15753, dtype="int8") /* ty=Tensor[(352), int8] */;
  %1117 = cast(meta[relay.Constant][87] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1118 = reshape(%1115, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %1119 = reshape(%1116, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %1120 = reshape(%1117, newshape=[8, 288]) /* ty=Tensor[(8, 288), float32] */;
  %1121 = @func_7456(%1118, %1119, %1120) /* ty=(Tensor[(16, 10, 14), float64], Tensor[(10, 14, 11), uint64], Tensor[(1664, 1), float32], Tensor[(352), int8], Tensor[(1540), uint64], Tensor[(352), int8], Tensor[(8, 288), float32]) */;
  %1122 = %1114.0;
  %1123 = %1121.3;
  (%1122, %1123, %var_15752, %var_15753, meta[relay.Constant][87] /* ty=Tensor[(2304), float32] */)
}

def @func_21579(%var_21577: Tensor[(336), uint8], %var_21578: Tensor[(7, 2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(14, 4, 6), float64], Tensor[(336), uint8], Tensor[(7, 2240), bool]) {
  %1144 = fn (%var_21532: Tensor[(336), uint8], %var_21551: Tensor[(7, 2240), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(14, 4, 6), float64], Tensor[(336), uint8], Tensor[(7, 2240), bool]) {
    %1124 = @func_19912() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1125 = cast(%var_21532, dtype="uint8") /* ty=Tensor[(336), uint8] */;
    %1126 = reshape(%1125, newshape=[336]) /* ty=Tensor[(336), uint8] */;
    %1127 = @func_20883(%1126) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2304), float32], Tensor[(2304, 1), float32], Tensor[(14, 4, 6), float64]) */;
    %1128 = @func_19635() /* ty=Tensor[(1, 2240), float64] */;
    %1129 = cast(%1128, dtype="float64") /* ty=Tensor[(1, 2240), float64] */;
    %1130 = log10(%1129) /* ty=Tensor[(1, 2240), float64] */;
    %1131 = cast(%1130, dtype="bool") /* ty=Tensor[(1, 2240), bool] */;
    %1132 = cast(%var_21551, dtype="bool") /* ty=Tensor[(7, 2240), bool] */;
    %1133 = not_equal(%1131, %1132) /* ty=Tensor[(7, 2240), bool] */;
    %1134 = cast(%1130, dtype="uint16") /* ty=Tensor[(1, 2240), uint16] */;
    %1135 = cast(%var_21551, dtype="uint16") /* ty=Tensor[(7, 2240), uint16] */;
    %1136 = subtract(%1134, %1135) /* ty=Tensor[(7, 2240), uint16] */;
    %1137 = cast(%1136, dtype="bool") /* ty=Tensor[(7, 2240), bool] */;
    %1138 = shape_of(%1133, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1139 = cast(%1133, dtype="bool") /* ty=Tensor[(7, 2240), bool] */;
    %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1141 = %1124.0;
    %1142 = %1127.3;
    %1143 = less(%1139, %1140) /* ty=Tensor[(7, 2240), bool] */;
    (%1141, %1142, %var_21532, %1143)
  };
  %1144(%var_21577, %var_21578) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14, 4, 6), float64], Tensor[(336), uint8], Tensor[(7, 2240), bool]) */
}

def @func_9820(%var_9807: Tensor[(1, 2, 7), uint8], %var_9808: Tensor[(6, 2, 7), uint8]) -> Tensor[(6, 2, 7), bool] {
  %1145 = cast(%var_9807, dtype="bool") /* ty=Tensor[(1, 2, 7), bool] */;
  %1146 = cast(%var_9808, dtype="bool") /* ty=Tensor[(6, 2, 7), bool] */;
  greater_equal(%1145, %1146) /* ty=Tensor[(6, 2, 7), bool] */
}

def @func_17658() -> (Tensor[(14), uint8],) {
  %1148 = fn () -> (Tensor[(14), uint8],) {
    %1147 = @func_15994() /* ty=Tensor[(14), uint8] */;
    (%1147,)
  };
  %1148() /* ty=(Tensor[(14), uint8],) */
}

def @func_17808() -> Tensor[(11, 4, 16), int8] {
  @func_17806() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_16683() -> Tensor[(11, 4, 16), int8] {
  %1150 = fn () -> Tensor[(11, 4, 16), int8] {
    %1149 = @func_16082() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1149.0
  };
  %1150() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_19869() -> (Tensor[(16, 10, 14), float64],) {
  %1151 = @func_16632() /* ty=Tensor[(16, 10, 14), float64] */;
  (%1151,)
}

def @func_1492(%var_1490: Tensor[(12, 4, 15), float32], %var_1491: Tensor[(120), uint8]) -> (Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) {
  %1196 = fn (%var_1409: Tensor[(12, 4, 15), float32], %var_1416: Tensor[(120), uint8]) -> (Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) {
    %1152 = cast(meta[relay.Constant][88] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1153 = cast(meta[relay.Constant][89] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1154 = cast(%var_1416, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1155 = reshape(%1152, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
    %1156 = reshape(%1153, newshape=[]) /* ty=uint8 */;
    %1157 = reshape(%1154, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1158 = @func_1081(%1155, %1156, %1157) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
    %1159 = cast(meta[relay.Constant][89] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1160 = cast(%var_1416, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1161 = reshape(%1159, newshape=[]) /* ty=uint8 */;
    %1162 = reshape(%1160, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
    %1163 = @func_129(%1161, %1162) /* ty=(Tensor[(10, 12, 1), uint16],) */;
    %1164 = cast(%var_1409, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
    %1165 = cast(meta[relay.Constant][88] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1166 = cast(meta[relay.Constant][89] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1167 = cast(%var_1416, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1168 = reshape(%1165, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
    %1169 = reshape(%1166, newshape=[]) /* ty=uint8 */;
    %1170 = reshape(%1167, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1171 = @func_1081(%1168, %1169, %1170) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
    %1172 = %1158.5;
    %1173 = cast(%1172, dtype="uint8") /* ty=Tensor[(336), uint8] */;
    %1174 = cast(%1172, dtype="uint8") /* ty=Tensor[(336), uint8] */;
    %1175 = reshape(%1173, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
    %1176 = reshape(%1174, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
    %1177 = cast(%var_1409, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
    %1178 = sqrt(%1177) /* ty=Tensor[(12, 4, 15), float32] */;
    %1179 = cast(%var_1409, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
    %1180 = shape_of(%1178, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1181 = cast(%1178, dtype="float32") /* ty=Tensor[(12, 4, 15), float32] */;
    %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1183 = cast(%1178, dtype="float64") /* ty=Tensor[(12, 4, 15), float64] */;
    %1184 = cast(meta[relay.Constant][89] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1185 = cast(%var_1416, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1186 = reshape(%1184, newshape=[]) /* ty=uint8 */;
    %1187 = reshape(%1185, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), uint8] */;
    %1188 = @func_129(%1186, %1187) /* ty=(Tensor[(10, 12, 1), uint16],) */;
    %1189 = %1163.0;
    %1190 = asinh(%1164) /* ty=Tensor[(12, 4, 15), float32] */;
    %1191 = %1171.0;
    %1192 = @func_269(%1175, %1176) /* ty=Tensor[(14, 4, 6), bool] */;
    %1193 = floor_mod(%1181, %1182) /* ty=Tensor[(12, 4, 15), float32] */;
    %1194 = cos(%1183) /* ty=Tensor[(12, 4, 15), float64] */;
    %1195 = %1188.0;
    (%1172, meta[relay.Constant][88] /* ty=Tensor[(216), uint8] */, meta[relay.Constant][89] /* ty=uint8 */, %var_1416, %1189, %1190, %1191, %1192, %1193, %1194, %1195)
  };
  %1196(%var_1490, %var_1491) /* ty=(Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) */
}

def @func_17647(%var_17645: Tensor[(384), float64], %var_17646: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) {
  %1205 = fn (%var_17632: Tensor[(384), float64], %var_17633: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) {
    %1197 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1198 = cast(%var_17632, dtype="float64") /* ty=Tensor[(384), float64] */;
    %1199 = cast(%var_17633, dtype="uint8") /* ty=uint8 */;
    %1200 = reshape(%1198, newshape=[6, 16, 4]) /* ty=Tensor[(6, 16, 4), float64] */;
    %1201 = reshape(%1199, newshape=[]) /* ty=uint8 */;
    %1202 = @func_11740(%1200, %1201) /* ty=(Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
    %1203 = %1197.0;
    %1204 = %1202.0;
    (%1203, %1204, %var_17632, %var_17633)
  };
  %1205(%var_17645, %var_17646) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(6, 16, 4), float64], Tensor[(384), float64], uint8) */
}

def @func_6583(%var_6582: Tensor[(15, 2, 15), int16]) -> (Tensor[(15, 2, 15), int16],) {
  %1209 = fn (%var_6575: Tensor[(15, 2, 15), int16]) -> (Tensor[(15, 2, 15), int16],) {
    %1206 = cast(meta[relay.Constant][90] /* ty=Tensor[(15, 2, 1), int16] */, dtype="int16") /* ty=Tensor[(15, 2, 1), int16] */;
    %1207 = cast(%var_6575, dtype="int16") /* ty=Tensor[(15, 2, 15), int16] */;
    %1208 = bitwise_or(%1206, %1207) /* ty=Tensor[(15, 2, 15), int16] */;
    (%1208,)
  };
  %1209(%var_6582) /* ty=(Tensor[(15, 2, 15), int16],) */
}

def @func_15996() -> Tensor[(14), uint8] {
  @func_15994() /* ty=Tensor[(14), uint8] */
}

def @func_16827(%var_16823: Tensor[(280), int32], %var_16825: Tensor[(360), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(12, 5, 6), uint64], Tensor[(280), int32], Tensor[(2240), float64], Tensor[(360), float64]) {
  %1210 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %1211 = cast(%var_16823, dtype="int32") /* ty=Tensor[(280), int32] */;
  %1212 = cast(%var_16823, dtype="int32") /* ty=Tensor[(280), int32] */;
  %1213 = cast(meta[relay.Constant][91] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %1214 = cast(%var_16825, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1215 = reshape(%1211, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), int32] */;
  %1216 = reshape(%1212, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), int32] */;
  %1217 = reshape(%1213, newshape=[140, 16]) /* ty=Tensor[(140, 16), float64] */;
  %1218 = reshape(%1214, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
  %1219 = @func_13113(%1215, %1216, %1217, %1218) /* ty=(Tensor[(8, 7, 5), float64], Tensor[(2240), uint16], Tensor[(140, 16), float64], Tensor[(12, 5, 6), uint64], Tensor[(6, 60), float64]) */;
  %1220 = %1210.0;
  %1221 = %1219.3;
  (%1220, %1221, %var_16823, meta[relay.Constant][91] /* ty=Tensor[(2240), float64] */, %var_16825)
}

def @func_15450() -> (Tensor[(11, 4, 16), int8],) {
  %1224 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %1222 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1223 = %1222.0;
    (%1223,)
  };
  %1224() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_18910() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %1225 = @func_15198() /* ty=Tensor[(11, 4, 16), int8] */;
  %1226 = @func_14427() /* ty=Tensor[(11, 4, 16), int8] */;
  (%1225, %1226)
}

def @func_1728(%var_1726: uint16) -> Tensor[(1, 16, 15), uint16] {
  @func_1725(%var_1726) /* ty=Tensor[(1, 16, 15), uint16] */
}

def @func_14360(%var_14358: Tensor[(840), float32]) -> (Tensor[(1, 2240), float64], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130, 840), float32]) {
  @func_14357(%var_14358) /* ty=(Tensor[(1, 2240), float64], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(130, 840), float32]) */
}

def @func_8195(%var_8192: Tensor[(12, 5, 6), float64], %var_8193: Tensor[(12, 5, 6), float64], %var_8194: Tensor[(12, 5, 6), float64]) -> Tensor[(12, 5, 6), uint64] {
  %1236 = fn (%var_8176: Tensor[(12, 5, 6), float64], %var_8177: Tensor[(12, 5, 6), float64], %var_8183: Tensor[(12, 5, 6), float64]) -> Tensor[(12, 5, 6), uint64] {
    %1227 = cast(%var_8177, dtype="float64") /* ty=Tensor[(12, 5, 6), float64] */;
    %1228 = shape_of(%var_8176, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1229 = cast(%var_8176, dtype="float64") /* ty=Tensor[(12, 5, 6), float64] */;
    %1230 = dyn.reshape(%1227, %1228, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1231 = floor_divide(%1229, %1230) /* ty=Tensor[(12, 5, 6), float64] */;
    %1232 = cast(%var_8183, dtype="uint64") /* ty=Tensor[(12, 5, 6), uint64] */;
    %1233 = shape_of(%1231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1234 = cast(%1231, dtype="uint64") /* ty=Tensor[(12, 5, 6), uint64] */;
    %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    left_shift(%1234, %1235) /* ty=Tensor[(12, 5, 6), uint64] */
  };
  %1236(%var_8192, %var_8193, %var_8194) /* ty=Tensor[(12, 5, 6), uint64] */
}

def @func_18814() -> (Tensor[(11, 4, 16), int8],) {
  %1239 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %1237 = @func_18084() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1238 = %1237.0;
    (%1238,)
  };
  %1239() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_15679() -> Tensor[(11, 4, 16), int8] {
  %1241 = fn () -> Tensor[(11, 4, 16), int8] {
    %1240 = @func_15449() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1240.0
  };
  %1241() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_4842(%var_4837: Tensor[(1, 6, 2), float64]) -> (Tensor[(1, 6, 2), float64],) {
  %1242 = cast(5.96502f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1243 = cast(%var_4837, dtype="float64") /* ty=Tensor[(1, 6, 2), float64] */;
  %1244 = floor_divide(%1242, %1243) /* ty=Tensor[(1, 6, 2), float64] */;
  (%1244,)
}

def @func_9950(%var_9945: Tensor[(10, 1, 14), float32], %var_9946: Tensor[(10, 6, 14), float32], %var_9947: Tensor[(1540), uint64], %var_9948: Tensor[(216), uint8], %var_9949: uint8) -> (Tensor[(10, 6, 14), bool], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64], Tensor[(6, 3, 12), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(120), uint8]) {
  %1275 = fn (%var_9896: Tensor[(10, 1, 14), float32], %var_9897: Tensor[(10, 6, 14), float32], %var_9909: Tensor[(1540), uint64], %var_9924: Tensor[(216), uint8], %var_9925: uint8) -> (Tensor[(10, 6, 14), bool], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64], Tensor[(6, 3, 12), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(120), uint8]) {
    %1245 = cast(%var_9896, dtype="bool") /* ty=Tensor[(10, 1, 14), bool] */;
    %1246 = cast(%var_9897, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
    %1247 = cast(meta[relay.Constant][92] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1248 = cast(meta[relay.Constant][92] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1249 = cast(meta[relay.Constant][92] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1250 = reshape(%1247, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %1251 = reshape(%1248, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %1252 = reshape(%1249, newshape=[12, 5, 6]) /* ty=Tensor[(12, 5, 6), float64] */;
    %1253 = cast(%var_9909, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %1254 = reshape(%1253, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
    %1255 = @func_5624(%1254) /* ty=(Tensor[(10, 14, 11), uint64],) */;
    %1256 = cast(%var_9924, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1257 = cast(%var_9925, dtype="uint8") /* ty=uint8 */;
    %1258 = cast(meta[relay.Constant][93] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1259 = reshape(%1256, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
    %1260 = reshape(%1257, newshape=[]) /* ty=uint8 */;
    %1261 = reshape(%1258, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1262 = @func_1081(%1259, %1260, %1261) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
    %1263 = cast(%var_9924, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1264 = cast(%var_9925, dtype="uint8") /* ty=uint8 */;
    %1265 = cast(meta[relay.Constant][93] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1266 = reshape(%1263, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
    %1267 = reshape(%1264, newshape=[]) /* ty=uint8 */;
    %1268 = reshape(%1265, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1269 = @func_1081(%1266, %1267, %1268) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
    %1270 = greater_equal(%1245, %1246) /* ty=Tensor[(10, 6, 14), bool] */;
    %1271 = @func_8191(%1250, %1251, %1252) /* ty=Tensor[(12, 5, 6), uint64] */;
    %1272 = %1255.0;
    %1273 = %1262.0;
    %1274 = %1269.3;
    (%1270, %1271, meta[relay.Constant][92] /* ty=Tensor[(360), float64] */, %1272, %var_9909, %1273, %var_9924, %var_9925, meta[relay.Constant][93] /* ty=Tensor[(120), uint8] */, %1274)
  };
  %1275(%var_9945, %var_9946, %var_9947, %var_9948, %var_9949) /* ty=(Tensor[(10, 6, 14), bool], Tensor[(12, 5, 6), uint64], Tensor[(360), float64], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64], Tensor[(6, 3, 12), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(120), uint8]) */
}

def @func_129(%var_115: uint8, %var_116: Tensor[(10, 12, 1), uint8]) -> (Tensor[(10, 12, 1), uint16],) {
  %1276 = cast(%var_115, dtype="uint8") /* ty=uint8 */;
  %1277 = cast(%var_116, dtype="uint8") /* ty=Tensor[(10, 12, 1), uint8] */;
  %1278 = bitwise_xor(%1276, %1277) /* ty=Tensor[(10, 12, 1), uint8] */;
  %1279 = cast(%var_115, dtype="uint16") /* ty=uint16 */;
  %1280 = cast(%1278, dtype="uint16") /* ty=Tensor[(10, 12, 1), uint16] */;
  %1281 = bitwise_or(%1279, %1280) /* ty=Tensor[(10, 12, 1), uint16] */;
  (%1281,)
}

def @func_17793() -> Tensor[(2240), float64] {
  %1282 = @func_17129() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(560, 4), float64]) */;
  %1282.1
}

def @func_12558() -> Tensor[(11, 4, 16), int8] {
  %1284 = fn () -> Tensor[(11, 4, 16), int8] {
    %1283 = @func_12465() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1283.0
  };
  %1284() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_15154(%var_15139: Tensor[(12), float64], %var_15147: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(1344), int8], Tensor[(1344), int8], Tensor[(11, 4, 16), float32], Tensor[(12), float64], Tensor[(450), int16], uint8, uint8) {
  %1285 = @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1286 = cast(meta[relay.Constant][94] /* ty=Tensor[(1344), int8] */, dtype="int8") /* ty=Tensor[(1344), int8] */;
  %1287 = reshape(%1286, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
  %1288 = @func_5767(%1287) /* ty=(Tensor[(11, 6, 5), int32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8]) */;
  %1289 = cast(%var_15139, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1290 = cast(meta[relay.Constant][95] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %1291 = reshape(%1289, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %1292 = reshape(%1290, newshape=[1, 450]) /* ty=Tensor[(1, 450), int16] */;
  %1293 = @func_14188(%1291, %1292) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(1, 6, 2), float64], Tensor[(12), float64], Tensor[(15, 2, 15), int16], Tensor[(1, 450), int16]) */;
  %1294 = cast(%var_15147, dtype="uint8") /* ty=uint8 */;
  %1295 = reshape(%1294, newshape=[]) /* ty=uint8 */;
  %1296 = @func_14908(%1295) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(968), uint8], Tensor[(384), float64], uint8) */;
  %1297 = %1285.0;
  %1298 = %1288.2;
  %1299 = %1293.0;
  %1300 = %1296.3;
  (%1297, %1298, meta[relay.Constant][94] /* ty=Tensor[(1344), int8] */, %1299, %var_15139, meta[relay.Constant][95] /* ty=Tensor[(450), int16] */, %1300, %var_15147)
}

def @func_16945() -> Tensor[(616), float32] {
  %1301 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %1301.2
}

def @func_15217() -> (Tensor[(11, 4, 16), int8],) {
  %1302 = @func_12182() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(2240), float64], Tensor[(2240), float64]) */;
  %1303 = %1302.0;
  (%1303,)
}

def @func_14940() -> (Tensor[(11, 4, 16), int8],) {
  @func_14938() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_13353(%var_13351: Tensor[(11, 4, 16), int8]) -> (Tensor[(11, 4, 16), uint16],) {
  @func_13350(%var_13351) /* ty=(Tensor[(11, 4, 16), uint16],) */
}

def @func_13628(%var_13626: Tensor[(2304), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) {
  @func_13625(%var_13626) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) */
}

def @func_19508() -> (Tensor[(8, 11, 11), float64],) {
  %1304 = @func_18021() /* ty=Tensor[(8, 11, 11), float64] */;
  (%1304,)
}

def @func_17530() -> Tensor[(1, 2240), float64] {
  %1305 = @func_13729() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */;
  %1305.2
}

def @func_16065() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  %1309 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
    %1306 = @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */;
    %1307 = %1306.1;
    %1308 = @func_13771() /* ty=Tensor[(11, 4, 16), int8] */;
    (%1307, %1308)
  };
  %1309() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */
}

def @func_4812(%var_4811: Tensor[(11, 8, 4), int8]) -> Tensor[(11, 8, 4), bool] {
  %1319 = fn (%var_4773: Tensor[(11, 8, 4), int8]) -> Tensor[(11, 8, 4), bool] {
    %1310 = cast(%var_4773, dtype="bool") /* ty=Tensor[(11, 8, 4), bool] */;
    %1311 = shape_of(meta[relay.Constant][96] /* ty=Tensor[(11, 8, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1312 = cast(meta[relay.Constant][96] /* ty=Tensor[(11, 8, 4), int8] */, dtype="bool") /* ty=Tensor[(11, 8, 4), bool] */;
    %1313 = dyn.reshape(%1310, %1311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1314 = equal(%1312, %1313) /* ty=Tensor[(11, 8, 4), bool] */;
    %1315 = cast(%1314, dtype="bool") /* ty=Tensor[(11, 8, 4), bool] */;
    %1316 = shape_of(meta[relay.Constant][96] /* ty=Tensor[(11, 8, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1317 = cast(meta[relay.Constant][96] /* ty=Tensor[(11, 8, 4), int8] */, dtype="bool") /* ty=Tensor[(11, 8, 4), bool] */;
    %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%1317, %1318) /* ty=Tensor[(11, 8, 4), bool] */
  };
  %1319(%var_4811) /* ty=Tensor[(11, 8, 4), bool] */
}

def @func_19913() -> (Tensor[(11, 4, 16), int8],) {
  %1321 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %1320 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
    (%1320,)
  };
  %1321() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_9366(%var_9364: Tensor[(15, 15, 14), bool], %var_9365: Tensor[(15, 15, 14), bool]) -> (Tensor[(15, 15, 14), bool],) {
  %1327 = fn (%var_9350: Tensor[(15, 15, 14), bool], %var_9351: Tensor[(15, 15, 14), bool]) -> (Tensor[(15, 15, 14), bool],) {
    %1322 = cast(%var_9351, dtype="bool") /* ty=Tensor[(15, 15, 14), bool] */;
    %1323 = shape_of(%var_9350, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1324 = cast(%var_9350, dtype="bool") /* ty=Tensor[(15, 15, 14), bool] */;
    %1325 = dyn.reshape(%1322, %1323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1326 = logical_or(%1324, %1325) /* ty=Tensor[(15, 15, 14), bool] */;
    (%1326,)
  };
  %1327(%var_9364, %var_9365) /* ty=(Tensor[(15, 15, 14), bool],) */
}

def @func_18563() -> (Tensor[(14), uint8], Tensor[(352), int8], Tensor[(2304), float32]) {
  %1328 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %1329 = cast(meta[relay.Constant][97] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1330 = reshape(%1329, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %1331 = @func_7074(%1330) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */;
  %1332 = %1328.1;
  %1333 = %1331.2;
  (%1332, %1333, meta[relay.Constant][97] /* ty=Tensor[(2304), float32] */)
}

def @func_13730() -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) {
  %1339 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) {
    %1334 = cast(meta[relay.Constant][98] /* ty=Tensor[(1, 2240), float64] */, dtype="float64") /* ty=Tensor[(1, 2240), float64] */;
    %1335 = reshape(%1334, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
    %1336 = @func_12083(%1335) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(2240), float64], Tensor[(352), int8], Tensor[(2304), float32]) */;
    %1337 = @func_12557() /* ty=Tensor[(11, 4, 16), int8] */;
    %1338 = %1336.1;
    (%1337, %1338, meta[relay.Constant][98] /* ty=Tensor[(1, 2240), float64] */)
  };
  %1339() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(16, 10, 14), float64], Tensor[(1, 2240), float64]) */
}

def @func_20151() -> (Tensor[(11, 4, 16), int8],) {
  @func_20149() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_20056(%var_20055: uint8) -> (Tensor[(11, 4, 16), int8], uint8, uint8, Tensor[(120), uint8]) {
  %1347 = fn (%var_20050: uint8) -> (Tensor[(11, 4, 16), int8], uint8, uint8, Tensor[(120), uint8]) {
    %1340 = cast(%var_20050, dtype="uint8") /* ty=uint8 */;
    %1341 = cast(meta[relay.Constant][99] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1342 = reshape(%1340, newshape=[]) /* ty=uint8 */;
    %1343 = reshape(%1341, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1344 = @func_17501(%1342, %1343) /* ty=(Tensor[(14), uint8], uint8, uint8, Tensor[(120), uint8]) */;
    %1345 = @func_15198() /* ty=Tensor[(11, 4, 16), int8] */;
    %1346 = %1344.1;
    (%1345, %1346, %var_20050, meta[relay.Constant][99] /* ty=Tensor[(120), uint8] */)
  };
  %1347(%var_20055) /* ty=(Tensor[(11, 4, 16), int8], uint8, uint8, Tensor[(120), uint8]) */
}

def @func_15531() -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) {
  %1355 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) {
    %1348 = cast(meta[relay.Constant][100] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1349 = cast(meta[relay.Constant][101] /* ty=Tensor[(968), uint8] */, dtype="uint8") /* ty=Tensor[(968), uint8] */;
    %1350 = reshape(%1348, newshape=[]) /* ty=uint8 */;
    %1351 = reshape(%1349, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), uint8] */;
    %1352 = @func_2590(%1350, %1351) /* ty=(Tensor[(8, 11, 11), uint8],) */;
    %1353 = @func_13771() /* ty=Tensor[(11, 4, 16), int8] */;
    %1354 = %1352.0;
    (%1353, %1354, meta[relay.Constant][100] /* ty=uint8 */, meta[relay.Constant][101] /* ty=Tensor[(968), uint8] */)
  };
  %1355() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */
}

def @func_16755() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(14), uint8]) {
  %1361 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(14), uint8]) {
    %1356 = @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1357 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
    %1358 = %1356.0;
    %1359 = %1357.1;
    %1360 = @func_16650() /* ty=Tensor[(14), uint8] */;
    (%1358, %1359, %1360)
  };
  %1361() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(14), uint8]) */
}

def @func_16083() -> (Tensor[(11, 4, 16), int8],) {
  %1364 = fn () -> (Tensor[(11, 4, 16), int8],) {
    %1362 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1363 = %1362.0;
    (%1363,)
  };
  %1364() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_14631(%var_14542: Tensor[(336), uint8], %var_14548: Tensor[(3136), uint16], %var_14587: Tensor[(2112), int32], %var_14588: Tensor[(720), float32], %var_14621: Tensor[(448), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8], Tensor[(11, 4, 16), int8], Tensor[(3136), uint16], Tensor[(11, 8, 4), bool], Tensor[(11, 4, 14), bool], Tensor[(720), float32], Tensor[(2112), bool], Tensor[(11, 4, 16), int8], Tensor[(176, 2), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64], Tensor[(660), float64]) {
  %1365 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1366 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1367 = cast(%var_14542, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1368 = cast(%var_14542, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1369 = reshape(%1367, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1370 = reshape(%1368, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), uint8] */;
  %1371 = cast(%var_14548, dtype="uint16") /* ty=Tensor[(3136), uint16] */;
  %1372 = cast(%var_14548, dtype="uint16") /* ty=Tensor[(3136), uint16] */;
  %1373 = reshape(%1371, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint16] */;
  %1374 = reshape(%1372, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint16] */;
  %1375 = @func_14076(%1373, %1374) /* ty=(Tensor[(14, 16, 14), uint16], Tensor[(11, 4, 16), int8]) */;
  %1376 = cast(meta[relay.Constant][102] /* ty=Tensor[(176, 2), int8] */, dtype="int8") /* ty=Tensor[(176, 2), int8] */;
  %1377 = reshape(%1376, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
  %1378 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %1379 = %1378.1;
  %1380 = cast(meta[relay.Constant][103] /* ty=Tensor[(11, 4, 14), float32] */, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %1381 = shape_of(%1379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1382 = cast(%1379, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %1383 = dyn.reshape(%1380, %1381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1384 = cast(%var_14587, dtype="int32") /* ty=Tensor[(2112), int32] */;
  %1385 = cast(%var_14587, dtype="int32") /* ty=Tensor[(2112), int32] */;
  %1386 = cast(%var_14588, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1387 = reshape(%1384, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
  %1388 = reshape(%1385, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int32] */;
  %1389 = reshape(%1386, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %1390 = @func_4636(%1387, %1388, %1389) /* ty=(Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) */;
  %1391 = %1390.0;
  %1392 = cast(%1391, dtype="bool") /* ty=Tensor[(12, 11, 16), bool] */;
  %1393 = shape_of(%var_14587, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1394 = cast(%var_14587, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1395 = dyn.reshape(%1392, %1393, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1396 = @func_12612() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1397 = cast(meta[relay.Constant][102] /* ty=Tensor[(176, 2), int8] */, dtype="float32") /* ty=Tensor[(176, 2), float32] */;
  %1398 = sqrt(%1397) /* ty=Tensor[(176, 2), float32] */;
  %1399 = cast(meta[relay.Constant][102] /* ty=Tensor[(176, 2), int8] */, dtype="int8") /* ty=Tensor[(176, 2), int8] */;
  %1400 = shape_of(%1398, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1401 = cast(%1398, dtype="int8") /* ty=Tensor[(176, 2), int8] */;
  %1402 = dyn.reshape(%1399, %1400, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1403 = cast(%var_14621, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1404 = cast(meta[relay.Constant][104] /* ty=Tensor[(1540), uint64] */, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %1405 = cast(meta[relay.Constant][104] /* ty=Tensor[(1540), uint64] */, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %1406 = reshape(%1403, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
  %1407 = reshape(%1404, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %1408 = reshape(%1405, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
  %1409 = @func_12731(%1406, %1407, %1408) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */;
  %1410 = @func_12385() /* ty=(Tensor[(6, 16, ?), bool], Tensor[(11, 4, 14), float32], Tensor[(616), float32], Tensor[(660), float64], Tensor[(2240), float64], Tensor[(2240), float64], Tensor[(11, 4, 16), int8]) */;
  %1411 = %1365.0;
  %1412 = %1366.0;
  %1413 = @func_269(%1369, %1370) /* ty=Tensor[(14, 4, 6), bool] */;
  %1414 = %1375.1;
  %1415 = @func_4810(%1377) /* ty=Tensor[(11, 8, 4), bool] */;
  %1416 = not_equal(%1382, %1383) /* ty=Tensor[(11, 4, 14), bool] */;
  %1417 = equal(%1394, %1395) /* ty=Tensor[(2112), bool] */;
  %1418 = %1396.0;
  %1419 = multiply(%1401, %1402) /* ty=Tensor[(176, 2), int8] */;
  %1420 = %1409.1;
  %1421 = %1410.3;
  (%1411, %1412, %1413, %var_14542, %1414, %var_14548, %1415, %1416, %var_14588, %1417, %1418, %1419, %1420, %var_14621, meta[relay.Constant][104] /* ty=Tensor[(1540), uint64] */, %1421)
}

def @func_133(%var_131: uint8, %var_132: Tensor[(10, 12, 1), uint8]) -> (Tensor[(10, 12, 1), uint16],) {
  @func_129(%var_131, %var_132) /* ty=(Tensor[(10, 12, 1), uint16],) */
}

def @func_16651() -> Tensor[(14), uint8] {
  %1423 = fn () -> Tensor[(14), uint8] {
    %1422 = @func_14399() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */;
    %1422.1
  };
  %1423() /* ty=Tensor[(14), uint8] */
}

def @func_1866(%var_1863: Tensor[(6, 10, 11), float64]) -> Tensor[(6, 10, 11), float64] {
  %1424 = cast(%var_1863, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
  atanh(%1424) /* ty=Tensor[(6, 10, 11), float64] */
}

def @func_20783() -> (Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) {
  @func_20781() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(8, 11, 11), float64]) */
}

def @func_16963() -> Tensor[(11, 4, 16), int8] {
  @func_15678() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_14820(%var_14809: Tensor[(13, 10), int16], %var_14810: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(13, 1, 10), bool], Tensor[(2340), float32], Tensor[(13, 10), int16], Tensor[(1540), uint64]) {
  %1425 = @func_11995() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1426 = cast(meta[relay.Constant][105] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1427 = cast(%var_14809, dtype="int16") /* ty=Tensor[(13, 10), int16] */;
  %1428 = cast(%var_14810, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %1429 = reshape(%1426, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %1430 = reshape(%1427, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %1431 = reshape(%1428, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
  %1432 = @func_8075(%1429, %1430, %1431) /* ty=(Tensor[(13, 15, 12), float32], Tensor[(13, 1, 10), bool], Tensor[(130), int16], Tensor[(10, 14, 11), uint64], Tensor[(1540), uint64]) */;
  %1433 = %1425.0;
  %1434 = %1432.1;
  (%1433, %1434, meta[relay.Constant][105] /* ty=Tensor[(2340), float32] */, %var_14809, %var_14810)
}

def @func_14908(%var_14903: uint8) -> (Tensor[(11, 4, 16), int8], Tensor[(968), uint8], Tensor[(384), float64], uint8) {
  %1435 = @func_14492() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */;
  %1436 = cast(meta[relay.Constant][106] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1437 = cast(%var_14903, dtype="uint8") /* ty=uint8 */;
  %1438 = reshape(%1436, newshape=[6, 16, 4]) /* ty=Tensor[(6, 16, 4), float64] */;
  %1439 = reshape(%1437, newshape=[]) /* ty=uint8 */;
  %1440 = @func_11740(%1438, %1439) /* ty=(Tensor[(6, 16, 4), float64], Tensor[(15, 15, 14), bool], Tensor[(3150), bool], Tensor[(8, 11, 11), uint8], uint8, Tensor[(968), uint8]) */;
  %1441 = %1435.0;
  %1442 = %1440.5;
  (%1441, %1442, meta[relay.Constant][106] /* ty=Tensor[(384), float64] */, %var_14903)
}

def @func_19034() -> (Tensor[(14), uint8], Tensor[(10, 9, 11), bool], Tensor[(990), float64], Tensor[(11, 4, 16), int8], Tensor[(616), float32]) {
  %1450 = fn () -> (Tensor[(14), uint8], Tensor[(10, 9, 11), bool], Tensor[(990), float64], Tensor[(11, 4, 16), int8], Tensor[(616), float32]) {
    %1443 = cast(meta[relay.Constant][107] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %1444 = reshape(%1443, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), float64] */;
    %1445 = @func_14676(%1444) /* ty=(Tensor[(10, 9, 11), bool], Tensor[(10, 9, 11), uint64]) */;
    %1446 = @func_16650() /* ty=Tensor[(14), uint8] */;
    %1447 = %1445.0;
    %1448 = @func_11876() /* ty=Tensor[(11, 4, 16), int8] */;
    %1449 = @func_14704() /* ty=Tensor[(616), float32] */;
    (%1446, %1447, meta[relay.Constant][107] /* ty=Tensor[(990), float64] */, %1448, %1449)
  };
  %1450() /* ty=(Tensor[(14), uint8], Tensor[(10, 9, 11), bool], Tensor[(990), float64], Tensor[(11, 4, 16), int8], Tensor[(616), float32]) */
}

def @func_15219() -> (Tensor[(11, 4, 16), int8],) {
  @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */
}

def @func_21736() -> Tensor[(11, 4, 16), int8] {
  %1451 = fn () -> Tensor[(11, 4, 16), int8] {
    @func_15678() /* ty=Tensor[(11, 4, 16), int8] */
  };
  %1451() /* ty=Tensor[(11, 4, 16), int8] */
}

def @func_18410(%var_18409: Tensor[(225, 14), bool]) -> (Tensor[(14), uint8], Tensor[(15, 15, 14), bool], Tensor[(225, 14), bool]) {
  %1460 = fn (%var_18404: Tensor[(225, 14), bool]) -> (Tensor[(14), uint8], Tensor[(15, 15, 14), bool], Tensor[(225, 14), bool]) {
    %1452 = @func_14776() /* ty=(Tensor[(14), uint8], Tensor[(?, 6, 2), bool]) */;
    %1453 = cast(%var_18404, dtype="bool") /* ty=Tensor[(225, 14), bool] */;
    %1454 = cast(%var_18404, dtype="bool") /* ty=Tensor[(225, 14), bool] */;
    %1455 = reshape(%1453, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
    %1456 = reshape(%1454, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
    %1457 = @func_9363(%1455, %1456) /* ty=(Tensor[(15, 15, 14), bool],) */;
    %1458 = %1452.0;
    %1459 = %1457.0;
    (%1458, %1459, %var_18404)
  };
  %1460(%var_18409) /* ty=(Tensor[(14), uint8], Tensor[(15, 15, 14), bool], Tensor[(225, 14), bool]) */
}

def @func_14400() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) {
  %1465 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) {
    %1461 = @func_13233() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1462 = @func_13269() /* ty=(Tensor[(14), uint8],) */;
    %1463 = %1461.0;
    %1464 = %1462.0;
    (%1463, %1464)
  };
  %1465() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8]) */
}

def @func_17782() -> (Tensor[(14), uint8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  %1471 = fn () -> (Tensor[(14), uint8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
    %1466 = @func_17657() /* ty=(Tensor[(14), uint8],) */;
    %1467 = @func_16754() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(14), uint8]) */;
    %1468 = %1466.0;
    %1469 = @func_15725() /* ty=Tensor[(14), uint8] */;
    %1470 = %1467.0;
    (%1468, %1469, %1470)
  };
  %1471() /* ty=(Tensor[(14), uint8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */
}

def @func_1869(%var_1867: Tensor[(6, 10, 11), float64]) -> Tensor[(6, 10, 11), float64] {
  @func_1866(%var_1867) /* ty=Tensor[(6, 10, 11), float64] */
}

def @func_21691() -> (Tensor[(11, 4, 16), int8],) {
  %1472 = @func_12939() /* ty=(Tensor[(11, 4, 16), int8],) */;
  %1473 = %1472.0;
  (%1473,)
}

def @func_5982(%var_5979: Tensor[(8, 15, 7), float64], %var_5980: Tensor[(1344), int8], %var_5981: Tensor[(12), float64]) -> (Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) {
  @func_5977(%var_5979, %var_5980, %var_5981) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */
}

def @func_21626(%var_21624: Tensor[(12, 1), float64]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(12, 1), float64], Tensor[(352), int8]) {
  @func_21623(%var_21624) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 8, 4), bool], Tensor[(12, 1), float64], Tensor[(352), int8]) */
}

def @func_9824(%var_9822: Tensor[(1, 2, 7), uint8], %var_9823: Tensor[(6, 2, 7), uint8]) -> Tensor[(6, 2, 7), bool] {
  @func_9820(%var_9822, %var_9823) /* ty=Tensor[(6, 2, 7), bool] */
}

def @func_4636(%var_4623: Tensor[(12, 11, 16), int32], %var_4624: Tensor[(12, 11, 16), int32], %var_4631: Tensor[(4, 180), float32]) -> (Tensor[(12, 11, 16), int32], Tensor[(120), uint8], Tensor[(4, 180), float32], Tensor[(120), uint8]) {
  %1474 = cast(%var_4624, dtype="int32") /* ty=Tensor[(12, 11, 16), int32] */;
  %1475 = shape_of(%var_4623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1476 = cast(%var_4623, dtype="int32") /* ty=Tensor[(12, 11, 16), int32] */;
  %1477 = dyn.reshape(%1474, %1475, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1478 = cast(%var_4631, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %1479 = cast(meta[relay.Constant][108] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1480 = reshape(%1478, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), float32] */;
  %1481 = reshape(%1479, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1482 = @func_1489(%1480, %1481) /* ty=(Tensor[(336), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8], Tensor[(10, 12, 1), uint16], Tensor[(12, 4, 15), float32], Tensor[(6, 3, 12), uint8], Tensor[(14, 4, 6), bool], Tensor[(12, 4, 15), float32], Tensor[(12, 4, 15), float64], Tensor[(10, 12, 1), uint16]) */;
  %1483 = left_shift(%1476, %1477) /* ty=Tensor[(12, 11, 16), int32] */;
  %1484 = %1482.3;
  (%1483, %1484, %var_4631, meta[relay.Constant][108] /* ty=Tensor[(120), uint8] */)
}

def @func_18511(%var_18506: Tensor[(2, 12, 10), int16], %var_18507: Tensor[(616), float32], %var_18508: Tensor[(130), int16], %var_18509: Tensor[(12, 42), int32], %var_18510: uint8) -> (Tensor[(2, 12, 10), int16], Tensor[(2, 12, 10), bool], Tensor[(660), float64], Tensor[(616), float32], Tensor[(660), float64], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(6, 12, 7), float32], Tensor[(12, 42), int32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8]) {
  @func_18504(%var_18506, %var_18507, %var_18508, %var_18509, %var_18510) /* ty=(Tensor[(2, 12, 10), int16], Tensor[(2, 12, 10), bool], Tensor[(660), float64], Tensor[(616), float32], Tensor[(660), float64], Tensor[(1540), uint64], Tensor[(130), int16], Tensor[(1664), float32], Tensor[(6, 12, 7), float32], Tensor[(12, 42), int32], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8]) */
}

def @func_7076(%var_7075: Tensor[(12, 12, 16), float32]) -> (Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) {
  %1490 = fn (%var_7063: Tensor[(12, 12, 16), float32]) -> (Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) {
    %1485 = cast(%var_7063, dtype="float32") /* ty=Tensor[(12, 12, 16), float32] */;
    %1486 = cast(meta[relay.Constant][109] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
    %1487 = reshape(%1486, newshape=[11, 8, 4]) /* ty=Tensor[(11, 8, 4), int8] */;
    %1488 = sin(%1485) /* ty=Tensor[(12, 12, 16), float32] */;
    %1489 = @func_4810(%1487) /* ty=Tensor[(11, 8, 4), bool] */;
    (%1488, %1489, meta[relay.Constant][109] /* ty=Tensor[(352), int8] */)
  };
  %1490(%var_7075) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(11, 8, 4), bool], Tensor[(352), int8]) */
}

def @func_14493() -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
  %1495 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) {
    %1491 = @func_13269() /* ty=(Tensor[(14), uint8],) */;
    %1492 = @func_11531() /* ty=Tensor[(11, 4, 16), int8] */;
    %1493 = %1491.0;
    %1494 = @func_13771() /* ty=Tensor[(11, 4, 16), int8] */;
    (%1492, %1493, %1494)
  };
  %1495() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(14), uint8], Tensor[(11, 4, 16), int8]) */
}

def @func_15272() -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) {
  @func_15270() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8]) */
}

def @func_15106(%var_15105: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64]) {
  %1506 = fn (%var_15084: Tensor[(1540), uint64]) -> (Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64]) {
    %1496 = @func_13675() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1497 = cast(meta[relay.Constant][110] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
    %1498 = cast(%var_15084, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %1499 = cast(%var_15084, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
    %1500 = reshape(%1497, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
    %1501 = reshape(%1498, newshape=[1540]) /* ty=Tensor[(1540), uint64] */;
    %1502 = reshape(%1499, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), uint64] */;
    %1503 = @func_12731(%1500, %1501, %1502) /* ty=(Tensor[(4, 14, 8), float32], Tensor[(1540), uint64], Tensor[(10, 14, 11), int8]) */;
    %1504 = %1496.0;
    %1505 = %1503.1;
    (%1504, %1505, meta[relay.Constant][110] /* ty=Tensor[(448), float32] */, %var_15084)
  };
  %1506(%var_15105) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(1540), uint64], Tensor[(448), float32], Tensor[(1540), uint64]) */
}

def @func_21165(%var_21164: Tensor[(1344), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(6, 14, 16), int8], Tensor[(840, 1), float64], Tensor[(1344), int8], Tensor[(12), float64]) {
  %1516 = fn (%var_21140: Tensor[(1344), int8]) -> (Tensor[(11, 4, 16), int8], Tensor[(6, 14, 16), int8], Tensor[(840, 1), float64], Tensor[(1344), int8], Tensor[(12), float64]) {
    %1507 = cast(meta[relay.Constant][111] /* ty=Tensor[(840, 1), float64] */, dtype="float64") /* ty=Tensor[(840, 1), float64] */;
    %1508 = cast(%var_21140, dtype="int8") /* ty=Tensor[(1344), int8] */;
    %1509 = cast(meta[relay.Constant][112] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %1510 = reshape(%1507, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float64] */;
    %1511 = reshape(%1508, newshape=[1344]) /* ty=Tensor[(1344), int8] */;
    %1512 = reshape(%1509, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %1513 = @func_5977(%1510, %1511, %1512) /* ty=(Tensor[(8, 15, 7), float32], Tensor[(6, 14, 16), int8], Tensor[(1344), int8], Tensor[(1, 6, 2), float64], Tensor[(12), float64]) */;
    %1514 = @func_16963() /* ty=Tensor[(11, 4, 16), int8] */;
    %1515 = %1513.1;
    (%1514, %1515, meta[relay.Constant][111] /* ty=Tensor[(840, 1), float64] */, %var_21140, meta[relay.Constant][112] /* ty=Tensor[(12), float64] */)
  };
  %1516(%var_21164) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(6, 14, 16), int8], Tensor[(840, 1), float64], Tensor[(1344), int8], Tensor[(12), float64]) */
}

def @func_15920(%var_15918: uint64) -> (Tensor[(1, 13, 1), bool], Tensor[(11, 4, 16), int8]) {
  @func_15917(%var_15918) /* ty=(Tensor[(1, 13, 1), bool], Tensor[(11, 4, 16), int8]) */
}

def @func_13119(%var_13115: Tensor[(8, 7, 5), int32], %var_13116: Tensor[(8, 7, 5), int32], %var_13117: Tensor[(140, 16), float64], %var_13118: Tensor[(6, 60), float64]) -> (Tensor[(8, 7, 5), float64], Tensor[(2240), uint16], Tensor[(140, 16), float64], Tensor[(12, 5, 6), uint64], Tensor[(6, 60), float64]) {
  @func_13113(%var_13115, %var_13116, %var_13117, %var_13118) /* ty=(Tensor[(8, 7, 5), float64], Tensor[(2240), uint16], Tensor[(140, 16), float64], Tensor[(12, 5, 6), uint64], Tensor[(6, 60), float64]) */
}

def @func_17913(%var_17911: Tensor[(840), float32]) -> (Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(840), float32], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(13, 10), int16]) {
  @func_17910(%var_17911) /* ty=(Tensor[(11, 4, 16), int8], Tensor[(11, 4, 16), int8], Tensor[(840), float32], Tensor[(840), float32], Tensor[(120), uint8], Tensor[(13, 10), int16]) */
}

def @func_19138() -> (Tensor[(11, 4, 16), int8], Tensor[(120), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) {
  %1527 = fn () -> (Tensor[(11, 4, 16), int8], Tensor[(120), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) {
    %1517 = @func_15217() /* ty=(Tensor[(11, 4, 16), int8],) */;
    %1518 = cast(meta[relay.Constant][113] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1519 = cast(meta[relay.Constant][114] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1520 = cast(meta[relay.Constant][115] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1521 = reshape(%1518, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint8] */;
    %1522 = reshape(%1519, newshape=[]) /* ty=uint8 */;
    %1523 = reshape(%1520, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1524 = @func_1081(%1521, %1522, %1523) /* ty=(Tensor[(6, 3, 12), uint8], Tensor[(10, 12, 1), uint16], uint8, Tensor[(120), uint8], Tensor[(14, 4, 6), bool], Tensor[(336), uint8]) */;
    %1525 = %1517.0;
    %1526 = %1524.3;
    (%1525, %1526, meta[relay.Constant][113] /* ty=Tensor[(216), uint8] */, meta[relay.Constant][114] /* ty=uint8 */, meta[relay.Constant][115] /* ty=Tensor[(120), uint8] */)
  };
  %1527() /* ty=(Tensor[(11, 4, 16), int8], Tensor[(120), uint8], Tensor[(216), uint8], uint8, Tensor[(120), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen871/build/output.py", line 4139, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:33:21] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


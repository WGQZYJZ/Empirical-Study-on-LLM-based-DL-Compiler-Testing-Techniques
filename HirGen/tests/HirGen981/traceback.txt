==========mod==========
#[version = "0.0.5"]
def @func_14817() -> Tensor[(7, 2, 5), float32] {
  %0 = @func_12085() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %0.0
}

def @func_17817(%var_17811: Tensor[(560), uint32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(14, 10, 4), uint32], Tensor[(560), uint32]) {
  %1 = @func_11742() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %2 = @func_9573() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %3 = cast(%var_17811, dtype="uint32") /* ty=Tensor[(560), uint32] */;
  %4 = cast(%var_17811, dtype="uint32") /* ty=Tensor[(560), uint32] */;
  %5 = reshape(%3, newshape=[14, 10, 4]) /* ty=Tensor[(14, 10, 4), uint32] */;
  %6 = reshape(%4, newshape=[14, 10, 4]) /* ty=Tensor[(14, 10, 4), uint32] */;
  %7 = %1.3;
  %8 = @func_14817() /* ty=Tensor[(7, 2, 5), float32] */;
  %9 = %2.1;
  %10 = @func_9764(%5, %6) /* ty=Tensor[(14, 10, 4), uint32] */;
  (%7, %8, %9, %10, %var_17811)
}

def @func_2373() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %11 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %12 = @func_1731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %13 = %11.0;
  %14 = %12.1;
  (%13, %14)
}

def @func_6871() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %15 = @func_2221() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %16 = @func_4135() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %17 = %15.0;
  %18 = %16.3;
  (%17, %18)
}

def @func_10000() -> Tensor[(7, 2, 5), float32] {
  %19 = @func_5600() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %19.1
}

def @func_15296() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  %20 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %21 = @func_6480() /* ty=Tensor[(108), float32] */;
  %22 = %20.0;
  (%21, %22)
}

def @func_2310() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %23 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %24 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %25 = %23.0;
  %26 = %24.0;
  (%25, %26)
}

def @func_6660(%var_6559: Tensor[(2, 9, 14), float32]) -> (Tensor[(2, 9, 14), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 4), int8], Tensor[(7, 2, 5), float32]) {
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 9, 14), float32] */, dtype="bool") /* ty=Tensor[(2, 9, 14), bool] */;
  %28 = shape_of(%var_6559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%var_6559, dtype="bool") /* ty=Tensor[(2, 9, 14), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %31 = less(%29, %30) /* ty=Tensor[(2, 9, 14), bool] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(2, 9, 14), float64] */;
  %33 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(2, 9, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 9, 14), float32] */, dtype="float64") /* ty=Tensor[(2, 9, 14), float64] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %36 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %37 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %38 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %39 = %38.0;
  %40 = cast(%39, dtype="int8") /* ty=Tensor[(540, 1), int8] */;
  %41 = cast(meta[relay.Constant][1] /* ty=Tensor[(540, 4), float32] */, dtype="int8") /* ty=Tensor[(540, 4), int8] */;
  %42 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %43 = divide(%34, %35) /* ty=Tensor[(2, 9, 14), float64] */;
  %44 = %36.0;
  %45 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  %46 = %37.0;
  %47 = right_shift(%40, %41) /* ty=Tensor[(540, 4), int8] */;
  %48 = %42.0;
  (%43, %44, %45, %46, %47, %48)
}

def @func_2103() -> (Tensor[(7, 2, 5), float32],) {
  %49 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %50 = %49.0;
  (%50,)
}

def @func_23315() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %51 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %52 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %53 = %51.0;
  %54 = %52.0;
  (%53, %54)
}

def @func_18598() -> (Tensor[(7, 2, 5), float32],) {
  %55 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %56 = %55.0;
  (%56,)
}

def @func_14861() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %57 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %58 = %57.0;
  %59 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  (%58, %59)
}

def @func_4836(%var_4820: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) {
  %60 = @func_4273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %61 = cast(%var_4820, dtype="float32") /* ty=Tensor[(108), float32] */;
  %62 = reshape(%61, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %63 = @func_2031(%62) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %64 = %60.1;
  %65 = %63.0;
  (%64, %65, %var_4820)
}

def @func_1973(%var_1964: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(1, 36), bool], Tensor[(7, 2, 5), float32]) {
  %66 = @func_956() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %67 = cast(%var_1964, dtype="bool") /* ty=bool */;
  %68 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 36), bool] */, dtype="bool") /* ty=Tensor[(1, 36), bool] */;
  %69 = reshape(%67, newshape=[]) /* ty=bool */;
  %70 = reshape(%68, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %71 = @func_1250(%69, %70) /* ty=(Tensor[(2, 9, 2), bool],) */;
  %72 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %73 = %66.1;
  %74 = %71.0;
  %75 = %72.0;
  (%73, %74, %var_1964, meta[relay.Constant][2] /* ty=Tensor[(1, 36), bool] */, %75)
}

def @func_2600(%var_2564: Tensor[(108), float32], %var_2584: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool]) {
  %76 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %77 = cast(%var_2564, dtype="float32") /* ty=Tensor[(108), float32] */;
  %78 = reshape(%77, newshape=[12, 1, 9]) /* ty=Tensor[(12, 1, 9), float32] */;
  %79 = @func_568(%78) /* ty=(Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %80 = @func_887() /* ty=(Tensor[(540), bool],) */;
  %81 = cast(%var_2564, dtype="float32") /* ty=Tensor[(108), float32] */;
  %82 = reshape(%81, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %83 = @func_625(%82) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %84 = cast(%var_2584, dtype="float64") /* ty=Tensor[(154), float64] */;
  %85 = reshape(%84, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %86 = @func_525(%85) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %87 = %86.1;
  %88 = cast(%var_2584, dtype="bool") /* ty=Tensor[(154), bool] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%87, dtype="bool") /* ty=Tensor[(11, 7, 2), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %92 = %76.1;
  %93 = %79.2;
  %94 = %80.0;
  %95 = %83.4;
  %96 = @func_1886() /* ty=Tensor[(7, 2, 5), float32] */;
  %97 = less_equal(%90, %91) /* ty=Tensor[(11, 7, 2), bool] */;
  (%92, %93, %var_2564, %94, %95, %96, %97)
}

def @func_2073() -> (Tensor[(7, 2, 5), float32],) {
  %98 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  (%98,)
}

def @func_13425() -> (Tensor[(4, 3, 4), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %99 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 3, 4), uint64] */, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %100 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(4, 3, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 3, 4), uint64] */, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %103 = @func_1731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %104 = greater(%101, %102) /* ty=Tensor[(4, 3, 4), bool] */;
  %105 = %103.1;
  %106 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %107 = @func_8776() /* ty=Tensor[(7, 2, 5), float32] */;
  (%104, %105, %106, %107)
}

def @main() -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), int32]) {
  %108 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %109 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %110 = %109.0;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(11, 7, 2), float32] */;
  %112 = asin(%111) /* ty=Tensor[(11, 7, 2), float32] */;
  %113 = cast(%110, dtype="int32") /* ty=Tensor[(11, 7, 2), int32] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%112, dtype="int32") /* ty=Tensor[(11, 7, 2), int32] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %117 = %108.1;
  %118 = bitwise_and(%115, %116) /* ty=Tensor[(11, 7, 2), int32] */;
  (%117, %118)
}

def @func_2912() -> (Tensor[(7, 2, 5), float32],) {
  %119 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %120 = %119.2;
  (%120,)
}

def @func_4057() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %121 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %122 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %123 = %121.1;
  %124 = %122.4;
  (%123, %124)
}

def @func_10836() -> Tensor[(7, 2, 5), float32] {
  %125 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %125.0
}

def @func_21009() -> (Tensor[(7, 2, 5), float32],) {
  %126 = @func_13785() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %127 = %126.0;
  (%127,)
}

def @func_20069() -> (Tensor[(7, 2, 5), float32],) {
  %128 = @func_11823() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %129 = %128.0;
  (%129,)
}

def @func_708() -> Tensor[(7, 2, 5), float32] {
  %130 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %131 = cast(%130, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  tan(%131) /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_6699() -> (Tensor[(7, 2, 5), float32],) {
  %132 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %133 = %132.0;
  (%133,)
}

def @func_12505() -> (Tensor[(7, 2, 5), float32],) {
  %134 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %135 = %134.1;
  (%135,)
}

def @func_9764(%var_9750: Tensor[(14, 10, 4), uint32], %var_9751: Tensor[(14, 10, 4), uint32]) -> Tensor[(14, 10, 4), uint32] {
  %136 = cast(%var_9751, dtype="uint32") /* ty=Tensor[(14, 10, 4), uint32] */;
  %137 = shape_of(%var_9750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_9750, dtype="uint32") /* ty=Tensor[(14, 10, 4), uint32] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%138, %139) /* ty=Tensor[(14, 10, 4), uint32] */
}

def @func_22657() -> (Tensor[(7, 2, 5), float32],) {
  %140 = @func_9573() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %141 = %140.0;
  (%141,)
}

def @func_6373() -> Tensor[(7, 2, 5), float32] {
  %142 = @func_3964() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %142.1
}

def @func_16911(%var_16905: Tensor[(12, 15, 3), float64]) -> (Tensor[(12, 15, 3), uint32],) {
  %143 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %144 = %143.1;
  %145 = cast(%var_16905, dtype="uint32") /* ty=Tensor[(12, 15, 3), uint32] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%144, dtype="uint32") /* ty=Tensor[(12, 15, 3), uint32] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %149 = bitwise_and(%147, %148) /* ty=Tensor[(12, 15, 3), uint32] */;
  (%149,)
}

def @func_18753() -> Tensor[(7, 2, 5), float32] {
  %150 = @func_3172() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %150.0
}

def @func_20493(%var_20486: Tensor[(9, 12, 1), float64], %var_20487: Tensor[(9, 12, 10), float64]) -> Tensor[(9, 12, 10), float64] {
  %151 = cast(%var_20486, dtype="float64") /* ty=Tensor[(9, 12, 1), float64] */;
  %152 = cast(%var_20487, dtype="float64") /* ty=Tensor[(9, 12, 10), float64] */;
  divide(%151, %152) /* ty=Tensor[(9, 12, 10), float64] */
}

def @func_4184() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %153 = @func_4135() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %154 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %155 = %153.3;
  %156 = %154.0;
  (%155, %156)
}

def @func_10643() -> Tensor[(7, 2, 5), float32] {
  %157 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %157.0
}

def @func_3492() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %158 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %159 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %160 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %161 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %162 = %158.0;
  %163 = %159.0;
  %164 = %160.0;
  %165 = %161.0;
  (%162, %163, %164, %165)
}

def @func_6914() -> (Tensor[(11, 7, 2), float64],) {
  %166 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %167 = %166.1;
  (%167,)
}

def @func_19504(%var_19499: Tensor[(2, 14, 6), int8]) -> (Tensor[(2, 14, 6), bool],) {
  %168 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 14, 6), int8] */, dtype="bool") /* ty=Tensor[(2, 14, 6), bool] */;
  %169 = shape_of(%var_19499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_19499, dtype="bool") /* ty=Tensor[(2, 14, 6), bool] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %172 = greater_equal(%170, %171) /* ty=Tensor[(2, 14, 6), bool] */;
  (%172,)
}

def @func_17511() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(108), float32]) {
  %173 = @func_12668() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %174 = cast(meta[relay.Constant][6] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %175 = reshape(%174, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %176 = @func_17350(%175) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) */;
  %177 = @func_12271() /* ty=Tensor[(7, 2, 5), float32] */;
  %178 = %173.4;
  %179 = %176.2;
  (%177, %178, %179, meta[relay.Constant][6] /* ty=Tensor[(108), float32] */)
}

def @func_22273(%var_22256: Tensor[(168), int8]) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 14, 6), bool], Tensor[(168), int8]) {
  %180 = cast(%var_22256, dtype="int8") /* ty=Tensor[(168), int8] */;
  %181 = reshape(%180, newshape=[2, 14, 6]) /* ty=Tensor[(2, 14, 6), int8] */;
  %182 = @func_19504(%181) /* ty=(Tensor[(2, 14, 6), bool],) */;
  %183 = @func_8776() /* ty=Tensor[(7, 2, 5), float32] */;
  %184 = %182.0;
  (%183, %184, %var_22256)
}

def @func_11417() -> (Tensor[(7, 2, 5), float32],) {
  %185 = @func_5996() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %186 = %185.0;
  (%186,)
}

def @func_22897() -> (Tensor[(7, 2, 5), float32],) {
  %187 = @func_7632() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %188 = %187.1;
  (%188,)
}

def @func_20534(%var_20521: Tensor[(14, 13, 12), uint8]) -> (Tensor[(14, 13, 12), bool], Tensor[(7, 2, 5), float32]) {
  %189 = cast(meta[relay.Constant][7] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %190 = cast(%var_20521, dtype="bool") /* ty=Tensor[(14, 13, 12), bool] */;
  %191 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %192 = less(%189, %190) /* ty=Tensor[(14, 13, 12), bool] */;
  %193 = %191.1;
  (%192, %193)
}

def @func_4490() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) {
  %194 = @func_3492() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %195 = @func_887() /* ty=(Tensor[(540), bool],) */;
  %196 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %197 = %194.0;
  %198 = %195.0;
  %199 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
  (%196, %197, %198, %199)
}

def @func_9298(%var_9293: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(6, 18), float32], Tensor[(12, 15, 3), float32]) {
  %200 = cast(%var_9293, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %201 = reshape(%200, newshape=[12, 1, 9]) /* ty=Tensor[(12, 1, 9), float32] */;
  %202 = @func_568(%201) /* ty=(Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %203 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %204 = %203.1;
  %205 = cast(%204, dtype="float32") /* ty=Tensor[(12, 15, 3), float32] */;
  %206 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
  %207 = %202.0;
  %208 = sigmoid(%205) /* ty=Tensor[(12, 15, 3), float32] */;
  (%206, %207, %var_9293, %208)
}

def @func_10386() -> Tensor[(7, 2, 5), float32] {
  %209 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %209.0
}

def @func_15983() -> Tensor[(7, 2, 5), float32] {
  %210 = @func_11562() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32], Tensor[(540, 1), float32]) */;
  %210.1
}

def @func_21071() -> (Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32]) {
  %211 = @func_4273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %212 = @func_13320() /* ty=Tensor[(540, 1), float32] */;
  %213 = %211.1;
  (%212, %213)
}

def @func_21542(%var_21532: Tensor[(1080), float32]) -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 2), uint16], Tensor[(1080), float32]) {
  %214 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %215 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %216 = cast(%var_21532, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %217 = cast(%var_21532, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %218 = reshape(%216, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %219 = reshape(%217, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %220 = @func_13832(%218, %219) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) */;
  %221 = %214.0;
  %222 = %215.1;
  %223 = %220.1;
  (%221, %222, %223, %var_21532)
}

def @func_6932() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %224 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %225 = %224.0;
  %226 = @func_2449() /* ty=Tensor[(7, 2, 5), float32] */;
  (%225, %226)
}

def @func_3980() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %227 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %228 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %229 = %227.0;
  %230 = %228.0;
  (%229, %230)
}

def @func_7867() -> (Tensor[(7, 2, 5), float32],) {
  %231 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  (%231,)
}

def @func_21506(%var_21416: Tensor[(540, 2), uint16]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(90, 12), float32], Tensor[(540, 2), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 2), float64], Tensor[(540, 2), float64]) {
  %232 = @func_11742() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %233 = @func_3964() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %234 = @func_13031() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) */;
  %235 = cast(meta[relay.Constant][8] /* ty=Tensor[(90, 12), float32] */, dtype="float32") /* ty=Tensor[(90, 12), float32] */;
  %236 = cast(meta[relay.Constant][8] /* ty=Tensor[(90, 12), float32] */, dtype="float32") /* ty=Tensor[(90, 12), float32] */;
  %237 = reshape(%235, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %238 = reshape(%236, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %239 = @func_13832(%237, %238) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) */;
  %240 = %239.1;
  %241 = cast(%var_21416, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(2), int32] */;
  %243 = cast(%240, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %245 = @func_19018() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %246 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %247 = cast(%var_21416, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
  %248 = cos(%247) /* ty=Tensor[(540, 2), float32] */;
  %249 = cast(%240, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(2), int32] */;
  %251 = cast(%248, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %253 = floor_mod(%251, %252) /* ty=Tensor[(540, 2), float32] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(540, 2), float64] */;
  %255 = cast(%248, dtype="float64") /* ty=Tensor[(540, 2), float64] */;
  %256 = %232.1;
  %257 = %233.0;
  %258 = %234.0;
  %259 = equal(%243, %244) /* ty=Tensor[(540, 2), bool] */;
  %260 = %245.1;
  %261 = @func_12271() /* ty=Tensor[(7, 2, 5), float32] */;
  %262 = %246.2;
  %263 = acosh(%254) /* ty=Tensor[(540, 2), float64] */;
  %264 = sigmoid(%255) /* ty=Tensor[(540, 2), float64] */;
  (%256, %257, %258, meta[relay.Constant][8] /* ty=Tensor[(90, 12), float32] */, %259, %260, %261, %262, %263, %264)
}

def @func_5284() -> (Tensor[(7, 2, 5), float32],) {
  %265 = @func_5096() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %266 = %265.1;
  (%266,)
}

def @func_7226() -> Tensor[(7, 2, 5), float32] {
  %267 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %267.0
}

def @func_8926(%var_8845: Tensor[(15, 1, 11), float32], %var_8846: Tensor[(15, 4, 11), float32]) -> (Tensor[(15, 4, 11), float32], Tensor[(8, 1, 15), bool], uint8, Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %268 = cast(%var_8845, dtype="float32") /* ty=Tensor[(15, 1, 11), float32] */;
  %269 = cast(%var_8846, dtype="float32") /* ty=Tensor[(15, 4, 11), float32] */;
  %270 = cast(meta[relay.Constant][9] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %271 = reshape(%270, newshape=[]) /* ty=uint8 */;
  %272 = @func_8707(%271) /* ty=(Tensor[(8, 1, 15), bool],) */;
  %273 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %274 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %275 = subtract(%268, %269) /* ty=Tensor[(15, 4, 11), float32] */;
  %276 = %272.0;
  %277 = %273.0;
  %278 = @func_2962() /* ty=Tensor[(7, 2, 5), float32] */;
  %279 = %274.0;
  (%275, %276, meta[relay.Constant][9] /* ty=uint8 */, %277, %278, %279)
}

def @func_7591() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) {
  %280 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %281 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %282 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %283 = %280.1;
  %284 = %281.0;
  %285 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
  %286 = %282.0;
  (%283, %284, %285, %286)
}

def @func_2474() -> (Tensor[(7, 2, 5), float32],) {
  %287 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %288 = %287.1;
  (%288,)
}

def @func_21251() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64], Tensor[(48), bool]) {
  %289 = @func_7028() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %290 = cast(meta[relay.Constant][10] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %291 = reshape(%290, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), bool] */;
  %292 = @func_18008(%291) /* ty=(Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) */;
  %293 = %289.1;
  %294 = %292.0;
  (%293, %294, meta[relay.Constant][10] /* ty=Tensor[(48), bool] */)
}

def @func_5569() -> (Tensor[(7, 2, 5), float32],) {
  %295 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
  (%295,)
}

def @func_8313() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(108), float32], Tensor[(12, 15, 3), float64]) {
  %296 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %297 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %298 = cast(meta[relay.Constant][11] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %299 = reshape(%298, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %300 = @func_625(%299) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %301 = @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */;
  %302 = %296.1;
  %303 = %297.0;
  %304 = %300.3;
  %305 = %301.1;
  (%302, %303, %304, meta[relay.Constant][11] /* ty=Tensor[(108), float32] */, %305)
}

def @func_3089(%var_3059: Tensor[(3, 2, 4), float32], %var_3079: Tensor[(154), float64]) -> (Tensor[(3, 2, 4), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) {
  %306 = cast(%var_3059, dtype="float32") /* ty=Tensor[(3, 2, 4), float32] */;
  %307 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %308 = cast(%var_3079, dtype="float64") /* ty=Tensor[(154), float64] */;
  %309 = reshape(%308, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %310 = @func_525(%309) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %311 = cos(%306) /* ty=Tensor[(3, 2, 4), float32] */;
  %312 = %307.0;
  %313 = %310.2;
  (%311, %312, %313, %var_3079)
}

def @func_2148() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %314 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %315 = @func_2066() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %316 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %317 = %314.0;
  %318 = %315.0;
  %319 = %316.0;
  (%317, %318, %319)
}

def @func_1114() -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %320 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %321 = cast(meta[relay.Constant][12] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %322 = reshape(%321, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %323 = %320.0;
  %324 = @func_476(%322) /* ty=Tensor[(11, 7, 2), float64] */;
  (%323, %324, meta[relay.Constant][12] /* ty=Tensor[(154), float64] */)
}

def @func_14301(%var_14288: Tensor[(6, 11, 13), float64]) -> (Tensor[(6, 11, 13), float64], Tensor[(7, 2, 5), float32]) {
  %325 = cast(%var_14288, dtype="float64") /* ty=Tensor[(6, 11, 13), float64] */;
  %326 = @func_11742() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %327 = tan(%325) /* ty=Tensor[(6, 11, 13), float64] */;
  %328 = %326.1;
  (%327, %328)
}

def @func_2962() -> Tensor[(7, 2, 5), float32] {
  @func_974() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_12404() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
  %329 = @func_2066() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %330 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %331 = %329.0;
  %332 = %330.1;
  (%331, %332)
}

def @func_16479() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %333 = @func_8483() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %334 = %333.1;
  %335 = @func_14284() /* ty=Tensor[(7, 2, 5), float32] */;
  (%334, %335)
}

def @func_17618() -> Tensor[(7, 2, 5), float32] {
  %336 = @func_13307() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
  %336.1
}

def @func_6163() -> (Tensor[(7, 2, 5), float32],) {
  %337 = @func_5548() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %338 = %337.1;
  (%338,)
}

def @func_3040() -> Tensor[(7, 2, 5), float32] {
  @func_2449() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_1273() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %339 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %340 = @func_1166() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %341 = %339.1;
  %342 = %340.0;
  (%341, %342)
}

def @func_9573() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %343 = @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %344 = @func_7674() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %345 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %346 = %343.3;
  %347 = %344.1;
  %348 = %345.0;
  (%346, %347, %348)
}

def @func_6440(%var_6421: Tensor[(11, 6, 13), uint32], %var_6427: Tensor[(11, 6, 13), uint32]) -> (Tensor[(11, 6, 13), int8], Tensor[(7, 2, 5), float32]) {
  %349 = cast(%var_6421, dtype="uint32") /* ty=Tensor[(11, 6, 13), uint32] */;
  %350 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(11, 6, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 6, 13), uint32] */, dtype="uint32") /* ty=Tensor[(11, 6, 13), uint32] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %353 = bitwise_and(%351, %352) /* ty=Tensor[(11, 6, 13), uint32] */;
  %354 = cast(%var_6427, dtype="int8") /* ty=Tensor[(11, 6, 13), int8] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%353, dtype="int8") /* ty=Tensor[(11, 6, 13), int8] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %358 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %359 = bitwise_or(%356, %357) /* ty=Tensor[(11, 6, 13), int8] */;
  %360 = %358.0;
  (%359, %360)
}

def @func_20409(%var_20399: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool, Tensor[(36), bool], Tensor[(7, 2, 5), float32]) {
  %361 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %362 = cast(%var_20399, dtype="bool") /* ty=bool */;
  %363 = cast(meta[relay.Constant][14] /* ty=Tensor[(36), bool] */, dtype="bool") /* ty=Tensor[(36), bool] */;
  %364 = reshape(%362, newshape=[]) /* ty=bool */;
  %365 = reshape(%363, newshape=[36]) /* ty=Tensor[(36), bool] */;
  %366 = @func_3876(%364, %365) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) */;
  %367 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %368 = %361.0;
  %369 = %366.0;
  %370 = %367.0;
  (%368, %369, %var_20399, meta[relay.Constant][14] /* ty=Tensor[(36), bool] */, %370)
}

def @func_10752() -> (Tensor[(7, 2, 5), float32],) {
  %371 = @func_8483() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %372 = %371.1;
  (%372,)
}

def @func_19729() -> Tensor[(7, 2, 5), float32] {
  %373 = @func_13031() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) */;
  %373.0
}

def @func_22311() -> (Tensor[(7, 2, 5), float32],) {
  %374 = @func_16229() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %375 = %374.0;
  (%375,)
}

def @func_19796(%var_19773: Tensor[(540, 1), bool]) -> (Tensor[(540, ?), uint64], Tensor[(286), float64], Tensor[(540, 108), bool]) {
  %376 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
  %377 = %376.0;
  %378 = cast(%var_19773, dtype="uint64") /* ty=Tensor[(540, 1), uint64] */;
  %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(2), int32] */;
  %380 = cast(%377, dtype="uint64") /* ty=Tensor[(540, 1), uint64] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %382 = cast(meta[relay.Constant][15] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %383 = reshape(%382, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %384 = @func_16167(%383) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(286), float64], Tensor[(440), int32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %385 = cast(meta[relay.Constant][15] /* ty=Tensor[(108), float32] */, dtype="bool") /* ty=Tensor[(108), bool] */;
  %386 = cast(%377, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
  %387 = maximum(%380, %381) /* ty=Tensor[(540, ?), uint64] */;
  %388 = %384.2;
  %389 = greater(%385, %386) /* ty=Tensor[(540, 108), bool] */;
  (%387, %388, %389)
}

def @func_4361() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %390 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %391 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %392 = %390.0;
  %393 = %391.0;
  (%392, %393)
}

def @func_16396() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(24), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %394 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %395 = @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %396 = %394.1;
  %397 = cast(%396, dtype="float64") /* ty=Tensor[(11, 7, 2), float64] */;
  %398 = cast(meta[relay.Constant][16] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %399 = reshape(%397, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %400 = reshape(%398, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %401 = @func_4868(%399, %400) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(24), float32]) */;
  %402 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %403 = %395.0;
  %404 = %401.3;
  %405 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  %406 = %402.0;
  (%396, %403, %404, meta[relay.Constant][16] /* ty=Tensor[(24), float32] */, %405, %406)
}

def @func_7290(%var_7275: Tensor[(540, 3), bool]) -> (Tensor[(540, 3), bool], Tensor[(540, 3), uint64]) {
  %407 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
  %408 = %407.0;
  %409 = cast(%408, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
  %410 = cast(%var_7275, dtype="bool") /* ty=Tensor[(540, 3), bool] */;
  %411 = cast(%var_7275, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %412 = tan(%411) /* ty=Tensor[(540, 3), float64] */;
  %413 = cast(%var_7275, dtype="uint64") /* ty=Tensor[(540, 3), uint64] */;
  %414 = shape_of(%412, dtype="int32") /* ty=Tensor[(2), int32] */;
  %415 = cast(%412, dtype="uint64") /* ty=Tensor[(540, 3), uint64] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %417 = less_equal(%409, %410) /* ty=Tensor[(540, 3), bool] */;
  %418 = logical_xor(%415, %416) /* ty=Tensor[(540, 3), uint64] */;
  (%417, %418)
}

def @func_12085() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %419 = @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %420 = @func_6353() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %421 = %419.1;
  %422 = %420.1;
  (%421, %422)
}

def @func_5996() -> (Tensor[(7, 2, 5), float32],) {
  %423 = @func_2644() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) */;
  %424 = %423.0;
  (%424,)
}

def @func_5454() -> (Tensor[(7, 2, 5), float32],) {
  %425 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %426 = %425.0;
  (%426,)
}

def @func_17518() -> (Tensor[(7, 2, 5), float32],) {
  %427 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %428 = %427.0;
  (%428,)
}

def @func_15868(%var_15834: Tensor[(6, 13, 8), float64], %var_15839: Tensor[(154), float64]) -> (Tensor[(6, 13, 8), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32]) {
  %429 = cast(%var_15834, dtype="float64") /* ty=Tensor[(6, 13, 8), float64] */;
  %430 = cast(%var_15839, dtype="float64") /* ty=Tensor[(154), float64] */;
  %431 = reshape(%430, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %432 = asinh(%429) /* ty=Tensor[(6, 13, 8), float64] */;
  %433 = @func_476(%431) /* ty=Tensor[(11, 7, 2), float64] */;
  %434 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  (%432, %433, %var_15839, %434)
}

def @func_14263() -> (Tensor[(7, 2, 5), float32],) {
  %435 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %436 = %435.0;
  (%436,)
}

def @func_3564(%var_3551: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) {
  %437 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %438 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %439 = cast(%var_3551, dtype="bool") /* ty=Tensor[(36), bool] */;
  %440 = reshape(%438, newshape=[]) /* ty=bool */;
  %441 = reshape(%439, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %442 = @func_1250(%440, %441) /* ty=(Tensor[(2, 9, 2), bool],) */;
  %443 = %437.0;
  %444 = %442.0;
  (%443, %444, True /* ty=bool */, %var_3551)
}

def @func_9805() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float64]) {
  %445 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %446 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
  %447 = %446.0;
  %448 = cast(%447, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %449 = cos(%448) /* ty=Tensor[(540, 1), float32] */;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
  %451 = %445.0;
  %452 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %453 = sqrt(%450) /* ty=Tensor[(540, 1), float64] */;
  (%451, %452, %453)
}

def @func_5719() -> (Tensor[(7, 2, 5), float32],) {
  %454 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%454,)
}

def @func_23110(%var_23061: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool, Tensor[(36), bool], Tensor[(6, 13, 8), float64], Tensor[(8, 78), float64], Tensor[(154), float64]) {
  %455 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %456 = cast(%var_23061, dtype="bool") /* ty=Tensor[(36), bool] */;
  %457 = cast(%var_23061, dtype="bool") /* ty=Tensor[(36), bool] */;
  %458 = reshape(%455, newshape=[]) /* ty=bool */;
  %459 = reshape(%456, newshape=[9, 4]) /* ty=Tensor[(9, 4), bool] */;
  %460 = reshape(%457, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %461 = @func_22020(%458, %459, %460) /* ty=(Tensor[(7, 2, 5), float32], bool, Tensor[(9, 4), bool], Tensor[(2, 9, 2), float64]) */;
  %462 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 78), float64] */, dtype="float64") /* ty=Tensor[(8, 78), float64] */;
  %463 = cast(meta[relay.Constant][18] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %464 = reshape(%462, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), float64] */;
  %465 = reshape(%463, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %466 = @func_15868(%464, %465) /* ty=(Tensor[(6, 13, 8), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */;
  %467 = @func_5387() /* ty=Tensor[(7, 2, 5), float32] */;
  %468 = %461.0;
  %469 = %466.0;
  (%467, %468, True /* ty=bool */, %var_23061, %469, meta[relay.Constant][17] /* ty=Tensor[(8, 78), float64] */, meta[relay.Constant][18] /* ty=Tensor[(154), float64] */)
}

def @func_10261() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %470 = @func_7632() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %471 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %472 = %470.1;
  %473 = %471.0;
  (%472, %473)
}

def @func_476(%var_471: Tensor[(11, 7, 2), float64]) -> Tensor[(11, 7, 2), float64] {
  %474 = cast(%var_471, dtype="float64") /* ty=Tensor[(11, 7, 2), float64] */;
  atan(%474) /* ty=Tensor[(11, 7, 2), float64] */
}

def @func_2221() -> (Tensor[(7, 2, 5), float32],) {
  %475 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %476 = %475.0;
  (%476,)
}

def @func_4672() -> (Tensor[(108), float32], Tensor[(12, 15, 3), float64]) {
  %477 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %478 = %477.0;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(12, 15, 3), float64] */;
  %480 = @func_2227() /* ty=Tensor[(108), float32] */;
  %481 = log(%479) /* ty=Tensor[(12, 15, 3), float64] */;
  (%480, %481)
}

def @func_13353() -> Tensor[(540, 1), bool] {
  %482 = @func_7591() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */;
  %482.2
}

def @func_13320() -> Tensor[(540, 1), float32] {
  %483 = @func_7591() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */;
  %484 = %483.2;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  acos(%485) /* ty=Tensor[(540, 1), float32] */
}

def @func_11084(%var_11074: Tensor[(588), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(588), bool]) {
  %486 = @func_5996() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %487 = cast(%var_11074, dtype="bool") /* ty=Tensor[(588), bool] */;
  %488 = reshape(%487, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), bool] */;
  %489 = @func_2777(%488) /* ty=(Tensor[(7, 6, 14), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %490 = %486.0;
  %491 = %489.4;
  (%490, %491, %var_11074)
}

def @func_15154() -> Tensor[(7, 2, 5), float32] {
  %492 = @func_14761() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %492.0
}

def @func_13832(%var_13803: Tensor[(540, 2), float32], %var_13821: Tensor[(540, 2), float32]) -> (Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) {
  %493 = @func_11562() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32], Tensor[(540, 1), float32]) */;
  %494 = %493.3;
  %495 = cast(%494, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
  %496 = cast(%var_13803, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
  %497 = cast(%var_13821, dtype="uint16") /* ty=Tensor[(540, 2), uint16] */;
  %498 = shape_of(%var_13803, dtype="int32") /* ty=Tensor[(2), int32] */;
  %499 = cast(%var_13803, dtype="uint16") /* ty=Tensor[(540, 2), uint16] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %501 = logical_and(%495, %496) /* ty=Tensor[(540, 2), bool] */;
  %502 = subtract(%499, %500) /* ty=Tensor[(540, 2), uint16] */;
  (%501, %502)
}

def @func_18543(%var_18531: Tensor[(540, 3), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, 3), float64]) {
  %503 = @func_9967() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %504 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
  %507 = cast(%var_18531, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %508 = %503.0;
  %509 = floor_divide(%506, %507) /* ty=Tensor[(540, 3), float64] */;
  (%508, %509)
}

def @func_6786() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %510 = @func_6015() /* ty=Tensor[(7, 2, 5), float32] */;
  %511 = @func_2227() /* ty=Tensor[(108), float32] */;
  (%510, %511)
}

def @func_14199() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %512 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %513 = @func_13307() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
  %514 = @func_10684() /* ty=Tensor[(7, 2, 5), float32] */;
  %515 = %512.0;
  %516 = %513.0;
  (%514, %515, %516)
}

def @func_20352() -> (Tensor[(7, 2, 5), float32],) {
  %517 = @func_9159() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %518 = %517.1;
  (%518,)
}

def @func_20505() -> (Tensor[(7, 2, 5), float32],) {
  %519 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %520 = %519.0;
  (%520,)
}

def @func_23354() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32]) {
  %521 = @func_9159() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %522 = @func_22113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %523 = %521.1;
  %524 = %522.0;
  %525 = @func_13320() /* ty=Tensor[(540, 1), float32] */;
  (%523, %524, %525)
}

def @func_805() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  %526 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %527 = %526.2;
  %528 = cast(%527, dtype="float32") /* ty=Tensor[(108), float32] */;
  %529 = reshape(%528, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %530 = @func_625(%529) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %531 = %530.0;
  (%527, %531)
}

def @func_887() -> (Tensor[(540), bool],) {
  %532 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %533 = %532.2;
  (%533,)
}

def @func_11267() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(44), int32], Tensor[(440), int32]) {
  %534 = @func_7591() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */;
  %535 = @func_4766() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %536 = cast(meta[relay.Constant][19] /* ty=Tensor[(44), int32] */, dtype="int32") /* ty=Tensor[(44), int32] */;
  %537 = cast(meta[relay.Constant][20] /* ty=Tensor[(440), int32] */, dtype="int32") /* ty=Tensor[(440), int32] */;
  %538 = reshape(%536, newshape=[11, 1, 4]) /* ty=Tensor[(11, 1, 4), int32] */;
  %539 = reshape(%537, newshape=[11, 10, 4]) /* ty=Tensor[(11, 10, 4), int32] */;
  %540 = @func_2332(%538, %539) /* ty=(Tensor[(11, 10, 4), int32], Tensor[(7, 2, 5), float32]) */;
  %541 = %534.3;
  %542 = %535.1;
  %543 = %540.1;
  (%541, %542, %543, meta[relay.Constant][19] /* ty=Tensor[(44), int32] */, meta[relay.Constant][20] /* ty=Tensor[(440), int32] */)
}

def @func_1952() -> Tensor[(540, 1), bool] {
  %544 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
  %544.0
}

def @func_6031() -> (Tensor[(540, 1), bool],) {
  %545 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
  %546 = %545.0;
  (%546,)
}

def @func_7125() -> Tensor[(7, 2, 5), float32] {
  %547 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %547.0
}

def @func_13505() -> (Tensor[(7, 2, 5), float32],) {
  %548 = @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %549 = %548.0;
  (%549,)
}

def @func_19418(%var_19300: Tensor[(16, 11, 8), float32], %var_19328: Tensor[(154), float64]) -> (Tensor[(16, 11, 8), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %550 = cast(%var_19300, dtype="float32") /* ty=Tensor[(16, 11, 8), float32] */;
  %551 = @func_9805() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float64]) */;
  %552 = cast(%var_19328, dtype="float64") /* ty=Tensor[(154), float64] */;
  %553 = reshape(%552, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %554 = @func_17157() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) */;
  %555 = @func_4336() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %556 = @func_5016() /* ty=(Tensor[(108), float32],) */;
  %557 = @func_9139() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %558 = %556.0;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(108), float32] */;
  %560 = reshape(%559, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %561 = @func_16167(%560) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(286), float64], Tensor[(440), int32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %562 = cast(%558, dtype="float32") /* ty=Tensor[(108), float32] */;
  %563 = reshape(%562, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %564 = @func_2031(%563) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %565 = log10(%550) /* ty=Tensor[(16, 11, 8), float32] */;
  %566 = %551.1;
  %567 = @func_476(%553) /* ty=Tensor[(11, 7, 2), float64] */;
  %568 = %554.1;
  %569 = %555.1;
  %570 = %557.1;
  %571 = @func_17356() /* ty=Tensor[(7, 2, 5), float32] */;
  %572 = %561.4;
  %573 = %564.1;
  (%565, %566, %567, %var_19328, %568, %569, %558, %570, %571, %572, %573)
}

def @func_11231() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) {
  %574 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %575 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %576 = %574.0;
  %577 = %575.0;
  (%576, %577)
}

def @func_1605() -> (Tensor[(7, 2, 5), float32],) {
  %578 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %579 = %578.0;
  (%579,)
}

def @func_13785() -> (Tensor[(7, 2, 5), float32],) {
  %580 = @func_974() /* ty=Tensor[(7, 2, 5), float32] */;
  (%580,)
}

def @func_3786(%var_3778: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) {
  %581 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %582 = @func_3681() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %583 = cast(%var_3778, dtype="bool") /* ty=Tensor[(36), bool] */;
  %584 = reshape(%583, newshape=[36]) /* ty=Tensor[(36), bool] */;
  %585 = @func_3564(%584) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) */;
  %586 = %581.0;
  %587 = %582.0;
  %588 = %585.3;
  (%586, %587, %588, %var_3778)
}

def @func_4897() -> Tensor[(7, 2, 5), float32] {
  @func_1485() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_22737() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(65, 6), bool]) {
  %589 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %590 = @func_9038() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %591 = @func_18731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) */;
  %592 = @func_15154() /* ty=Tensor[(7, 2, 5), float32] */;
  %593 = %589.0;
  %594 = %590.1;
  %595 = @func_7211() /* ty=Tensor[(7, 2, 5), float32] */;
  %596 = %591.2;
  (%592, %593, %594, %595, %596)
}

def @func_4940() -> Tensor[(7, 2, 5), float32] {
  %597 = @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %597.0
}

def @func_4536() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %598 = @func_3681() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %599 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %600 = %598.0;
  %601 = %599.0;
  %602 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  (%600, %601, %602)
}

def @func_12830() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool]) {
  %603 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %604 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %605 = %604.1;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(12, 15, 3), float64] */;
  %607 = @func_11886() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %608 = @func_6031() /* ty=(Tensor[(540, 1), bool],) */;
  %609 = %603.0;
  %610 = exp(%606) /* ty=Tensor[(12, 15, 3), float64] */;
  %611 = %607.0;
  %612 = %608.0;
  (%609, %610, %611, %612)
}

def @func_5600() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %613 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %614 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %615 = %613.0;
  %616 = %614.1;
  (%615, %616)
}

def @func_13161(%var_13117: Tensor[(1080), int32], %var_13155: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(15, 9, 8), float64], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool) {
  %617 = cast(%var_13117, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %618 = cast(%var_13117, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %619 = reshape(%617, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), int32] */;
  %620 = reshape(%618, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), int32] */;
  %621 = @func_11678(%619, %620) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(15, 9, 8), float64]) */;
  %622 = @func_9967() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %623 = cast(%var_13155, dtype="bool") /* ty=bool */;
  %624 = reshape(%623, newshape=[]) /* ty=bool */;
  %625 = @func_1973(%624) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(1, 36), bool], Tensor[(7, 2, 5), float32]) */;
  %626 = @func_7211() /* ty=Tensor[(7, 2, 5), float32] */;
  %627 = %621.3;
  %628 = %622.2;
  %629 = %625.4;
  (%626, %627, %var_13117, %628, %629, %var_13155)
}

def @func_2227() -> Tensor[(108), float32] {
  %630 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %630.2
}

def @func_16498() -> Tensor[(7, 2, 5), float32] {
  %631 = @func_15653() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %631.0
}

def @func_13095(%var_13041: Tensor[(36), bool]) -> (Tensor[(12, 15, 3), float64], Tensor[(36), bool], Tensor[(36), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %632 = @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */;
  %633 = cast(%var_13041, dtype="bool") /* ty=Tensor[(36), bool] */;
  %634 = reshape(%633, newshape=[36]) /* ty=Tensor[(36), bool] */;
  %635 = @func_3786(%634) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) */;
  %636 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %637 = %632.1;
  %638 = %635.3;
  %639 = @func_3040() /* ty=Tensor[(7, 2, 5), float32] */;
  %640 = %636.0;
  (%637, %638, %var_13041, %639, %640)
}

def @func_739() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
  %641 = cast(meta[relay.Constant][21] /* ty=Tensor[(540), bool] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %642 = reshape(%641, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), bool] */;
  %643 = @func_32(%642) /* ty=(Tensor[(12, 15, 3), bool],) */;
  %644 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
  %645 = %643.0;
  (%644, %645, meta[relay.Constant][21] /* ty=Tensor[(540), bool] */)
}

def @func_16011() -> (Tensor[(7, 2, 5), float32],) {
  %646 = @func_5996() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %647 = %646.0;
  (%647,)
}

def @func_5659() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %648 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %649 = %648.0;
  %650 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %651 = %650.0;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %653 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%649, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %656 = multiply(%654, %655) /* ty=Tensor[(7, 2, 5), float32] */;
  %657 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  (%656, %657)
}

def @func_18450() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %658 = @func_14263() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %659 = @func_13520() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %660 = %658.0;
  %661 = @func_10299() /* ty=Tensor[(7, 2, 5), float32] */;
  %662 = %659.1;
  (%660, %661, %662)
}

def @func_19137() -> (Tensor[(7, 2, 5), float32],) {
  %663 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %664 = %663.0;
  (%664,)
}

def @func_9910() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %665 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %666 = %665.0;
  %667 = @func_7125() /* ty=Tensor[(7, 2, 5), float32] */;
  (%666, %667)
}

def @func_20173() -> (Tensor[(7, 2, 5), float32], Tensor[(540, 108), float32]) {
  %668 = @func_17398() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %669 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %670 = %669.3;
  %671 = @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %672 = %671.0;
  %673 = cast(%670, dtype="uint32") /* ty=Tensor[(540, 1), uint32] */;
  %674 = cast(%672, dtype="uint32") /* ty=Tensor[(108), uint32] */;
  %675 = bitwise_xor(%673, %674) /* ty=Tensor[(540, 108), uint32] */;
  %676 = cast(%670, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %677 = cast(%675, dtype="float32") /* ty=Tensor[(540, 108), float32] */;
  %678 = %668.0;
  %679 = power(%676, %677) /* ty=Tensor[(540, 108), float32] */;
  (%678, %679)
}

def @func_1079() -> Tensor[(7, 2, 5), float32] {
  %680 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %680.4
}

def @func_2031(%var_2006: Tensor[(108), float32]) -> (Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %681 = @func_887() /* ty=(Tensor[(540), bool],) */;
  %682 = cast(%var_2006, dtype="float32") /* ty=Tensor[(108), float32] */;
  %683 = reshape(%682, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %684 = @func_625(%683) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %685 = %681.0;
  %686 = %684.4;
  (%685, %686, %var_2006)
}

def @func_22874() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %687 = @func_13776() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %688 = %687.0;
  %689 = @func_2962() /* ty=Tensor[(7, 2, 5), float32] */;
  (%688, %689)
}

def @func_10299() -> Tensor[(7, 2, 5), float32] {
  %690 = @func_4440() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %690.0
}

def @func_6746() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %691 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %692 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %693 = %691.0;
  %694 = %692.0;
  (%693, %694)
}

def @func_1660() -> (Tensor[(7, 2, 5), float32],) {
  %695 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %696 = %695.0;
  (%696,)
}

def @func_3964() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %697 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %698 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %699 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  %700 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  %701 = %697.0;
  %702 = %698.0;
  (%699, %700, %701, %702)
}

def @func_9967() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %703 = @func_6396() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %704 = @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %705 = %703.0;
  %706 = %704.2;
  %707 = @func_2962() /* ty=Tensor[(7, 2, 5), float32] */;
  (%705, %706, %707)
}

def @func_3818() -> (Tensor[(7, 2, 5), float32],) {
  %708 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %709 = %708.0;
  (%709,)
}

def @func_16106() -> Tensor[(7, 2, 5), float32] {
  @func_708() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_17012(%var_16998: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(6, 18), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %710 = @func_3172() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %711 = cast(%var_16998, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %712 = reshape(%711, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %713 = @func_4836(%712) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) */;
  %714 = %710.1;
  %715 = %713.1;
  %716 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
  %717 = @func_6373() /* ty=Tensor[(7, 2, 5), float32] */;
  (%714, %715, %var_16998, %716, %717)
}

def @func_5096() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %718 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %719 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %720 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %721 = %718.0;
  %722 = %719.0;
  %723 = %720.0;
  (%721, %722, %723)
}

def @func_5548() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %724 = @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %725 = @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %726 = %724.1;
  %727 = %725.0;
  (%726, %727)
}

def @func_4135() -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %728 = @func_3152() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %729 = @func_1861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) */;
  %730 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %731 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %732 = %728.0;
  %733 = %729.2;
  %734 = %730.0;
  %735 = %731.0;
  (%732, %733, %734, %735)
}

def @func_7069() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
  %736 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %737 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %738 = %736.0;
  %739 = %737.1;
  (%738, %739)
}

def @func_23277() -> (Tensor[(7, 2, 5), float32],) {
  %740 = @func_13785() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %741 = %740.0;
  (%741,)
}

def @func_6015() -> Tensor[(7, 2, 5), float32] {
  @func_1485() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_17441() -> (Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %742 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %743 = @func_15535() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %744 = %742.0;
  %745 = %743.0;
  %746 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  (%744, %745, %746)
}

def @func_455() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %747 = cast(meta[relay.Constant][22] /* ty=Tensor[(540, 1), bool] */, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
  %748 = reshape(%747, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), bool] */;
  %749 = @func_32(%748) /* ty=(Tensor[(12, 15, 3), bool],) */;
  %750 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %751 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %752 = %749.0;
  %753 = %750.0;
  %754 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  (%751, %752, meta[relay.Constant][22] /* ty=Tensor[(540, 1), bool] */, %753, %754)
}

def @func_18475() -> (Tensor[(7, 2, 5), float32],) {
  %755 = @func_9967() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %756 = %755.1;
  (%756,)
}

def @func_19018() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %757 = @func_10637() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %758 = @func_18057() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %759 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %760 = @func_6786() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %761 = %757.0;
  %762 = %758.0;
  %763 = %759.0;
  %764 = %760.0;
  (%761, %762, %763, %764)
}

def @func_14761() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %765 = @func_6015() /* ty=Tensor[(7, 2, 5), float32] */;
  %766 = @func_7144() /* ty=Tensor[(7, 2, 5), float32] */;
  (%765, %766)
}

def @func_423() -> Tensor[(7, 2, 5), float32] {
  @func_207() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_2449() -> Tensor[(7, 2, 5), float32] {
  %767 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %767.0
}

def @func_2644() -> (Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) {
  %768 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %769 = reshape(%768, newshape=[]) /* ty=bool */;
  %770 = @func_1973(%769) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(1, 36), bool], Tensor[(7, 2, 5), float32]) */;
  %771 = %770.3;
  %772 = cast(%771, dtype="bool") /* ty=Tensor[(1, 36), bool] */;
  %773 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %774 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  %775 = less_equal(%772, %773) /* ty=Tensor[(1, 36), bool] */;
  (%774, %775)
}

def @func_21682() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %776 = @func_14904() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */;
  %777 = @func_7674() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %778 = %776.1;
  %779 = %777.1;
  (%778, %779)
}

def @func_625(%var_607: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  %780 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %781 = cast(%var_607, dtype="float32") /* ty=Tensor[(108), float32] */;
  %782 = reshape(%781, newshape=[12, 1, 9]) /* ty=Tensor[(12, 1, 9), float32] */;
  %783 = @func_568(%782) /* ty=(Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %784 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %785 = %780.0;
  %786 = %783.0;
  %787 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  (%784, %785, %786, %var_607, %787)
}

def @func_5905() -> (Tensor[(7, 2, 5), float32],) {
  %788 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
  (%788,)
}

def @func_8358() -> Tensor[(7, 2, 5), float32] {
  %789 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %789.0
}

def @func_18057() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %790 = @func_1731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %791 = @func_14149() /* ty=(Tensor[(540, ?), uint64], Tensor[(7, 2, 5), float32]) */;
  %792 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %793 = %790.1;
  %794 = %791.1;
  %795 = %792.0;
  (%793, %794, %795)
}

def @func_1387() -> (Tensor[(7, 2, 5), float32],) {
  %796 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %797 = %796.0;
  (%797,)
}

def @func_10684() -> Tensor[(7, 2, 5), float32] {
  %798 = @func_9451() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %798.0
}

def @func_14904() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) {
  %799 = @func_11035() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %800 = @func_10829() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %801 = %799.0;
  %802 = %800.0;
  (%801, %802)
}

def @func_1886() -> Tensor[(7, 2, 5), float32] {
  @func_423() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_12102() -> (Tensor[(8, 9, 12), float32],) {
  %803 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 9, 12), float32] */;
  %804 = atan(%803) /* ty=Tensor[(8, 9, 12), float32] */;
  (%804,)
}

def @func_19178(%var_19173: Tensor[(1, 14, 16), bool]) -> (Tensor[(16, 14, 16), bool],) {
  %805 = cast(%var_19173, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
  %806 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 14, 16), bool] */, dtype="bool") /* ty=Tensor[(16, 14, 16), bool] */;
  %807 = logical_or(%805, %806) /* ty=Tensor[(16, 14, 16), bool] */;
  (%807,)
}

def @func_15953() -> (Tensor[(7, 2, 5), float32],) {
  %808 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %809 = %808.0;
  (%809,)
}

def @func_3681() -> (Tensor[(7, 2, 5), float32],) {
  %810 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %811 = %810.0;
  (%811,)
}

def @func_4273() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %812 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %813 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %814 = %812.0;
  %815 = %813.0;
  (%814, %815)
}

def @func_16626() -> (Tensor[(4, 3, 4), bool],) {
  %816 = @func_14797() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) */;
  %817 = %816.2;
  (%817,)
}

def @func_9854() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %818 = @func_7591() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */;
  %819 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %820 = %818.3;
  %821 = %819.0;
  (%820, %821)
}

def @func_4766() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %822 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %823 = %822.0;
  %824 = @func_2962() /* ty=Tensor[(7, 2, 5), float32] */;
  (%823, %824)
}

def @func_2332(%var_2313: Tensor[(11, 1, 4), int32], %var_2314: Tensor[(11, 10, 4), int32]) -> (Tensor[(11, 10, 4), int32], Tensor[(7, 2, 5), float32]) {
  %825 = cast(%var_2313, dtype="int32") /* ty=Tensor[(11, 1, 4), int32] */;
  %826 = cast(%var_2314, dtype="int32") /* ty=Tensor[(11, 10, 4), int32] */;
  %827 = @func_2066() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %828 = subtract(%825, %826) /* ty=Tensor[(11, 10, 4), int32] */;
  %829 = %827.0;
  (%828, %829)
}

def @func_18780() -> Tensor[(7, 2, 5), float32] {
  @func_7144() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_21088(%var_21084: Tensor[(154), float64]) -> (Tensor[(1, 3, 10), float32], Tensor[(154), float64], Tensor[(154), float64]) {
  %830 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 3, 10), float32] */;
  %831 = cast(%var_21084, dtype="float64") /* ty=Tensor[(154), float64] */;
  %832 = reshape(%831, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %833 = @func_525(%832) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %834 = rsqrt(%830) /* ty=Tensor[(1, 3, 10), float32] */;
  %835 = %833.2;
  (%834, %835, %var_21084)
}

def @func_19911() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %836 = @func_14097() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %837 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %838 = @func_18780() /* ty=Tensor[(7, 2, 5), float32] */;
  %839 = %836.0;
  %840 = %837.0;
  %841 = @func_16705() /* ty=Tensor[(7, 2, 5), float32] */;
  (%838, %839, %840, %841)
}

def @func_21969() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %842 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %843 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %844 = %842.2;
  %845 = %843.0;
  (%844, %845)
}

def @func_5016() -> (Tensor[(108), float32],) {
  %846 = @func_2227() /* ty=Tensor[(108), float32] */;
  (%846,)
}

def @func_8707(%var_8678: uint8) -> (Tensor[(8, 1, 15), bool],) {
  %847 = cast(%var_8678, dtype="bool") /* ty=bool */;
  %848 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 1, 15), uint8] */, dtype="bool") /* ty=Tensor[(8, 1, 15), bool] */;
  %849 = greater_equal(%847, %848) /* ty=Tensor[(8, 1, 15), bool] */;
  (%849,)
}

def @func_15010() -> (Tensor[(7, 2, 5), float32],) {
  %850 = @func_974() /* ty=Tensor[(7, 2, 5), float32] */;
  (%850,)
}

def @func_17356() -> Tensor[(7, 2, 5), float32] {
  %851 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %851.0
}

def @func_21582() -> (Tensor[(7, 2, 5), float32],) {
  %852 = @func_14779() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %853 = %852.0;
  (%853,)
}

def @func_11678(%var_11617: Tensor[(15, 9, 8), int32], %var_11618: Tensor[(15, 9, 8), int32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(15, 9, 8), float64]) {
  %854 = @func_10449() /* ty=(Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */;
  %855 = cast(meta[relay.Constant][27] /* ty=Tensor[(36), bool] */, dtype="bool") /* ty=Tensor[(36), bool] */;
  %856 = reshape(%855, newshape=[36]) /* ty=Tensor[(36), bool] */;
  %857 = @func_3786(%856) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) */;
  %858 = cast(%var_11618, dtype="bool") /* ty=Tensor[(15, 9, 8), bool] */;
  %859 = shape_of(%var_11617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%var_11617, dtype="bool") /* ty=Tensor[(15, 9, 8), bool] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %862 = not_equal(%860, %861) /* ty=Tensor[(15, 9, 8), bool] */;
  %863 = cast(%862, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
  %864 = sqrt(%863) /* ty=Tensor[(15, 9, 8), float32] */;
  %865 = cast(%864, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %866 = %854.1;
  %867 = %857.1;
  %868 = rsqrt(%865) /* ty=Tensor[(15, 9, 8), float64] */;
  (%866, %867, meta[relay.Constant][27] /* ty=Tensor[(36), bool] */, %868)
}

def @func_19037() -> Tensor[(7, 2, 5), float32] {
  %869 = @func_16479() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %869.1
}

def @func_22521(%var_22478: Tensor[(540), bool], %var_22508: Tensor[(286), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(286), float32]) {
  %870 = @func_9038() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %871 = @func_12505() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %872 = @func_10982() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %873 = cast(%var_22478, dtype="bool") /* ty=Tensor[(540), bool] */;
  %874 = reshape(%873, newshape=[540, 1]) /* ty=Tensor[(540, 1), bool] */;
  %875 = @func_19796(%874) /* ty=(Tensor[(540, ?), uint64], Tensor[(286), float64], Tensor[(540, 108), bool]) */;
  %876 = %875.1;
  %877 = cast(%var_22508, dtype="float32") /* ty=Tensor[(286), float32] */;
  %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(1), int32] */;
  %879 = cast(%876, dtype="float32") /* ty=Tensor[(286), float32] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?), float32] */;
  %881 = %870.1;
  %882 = %871.0;
  %883 = %872.0;
  %884 = floor_mod(%879, %880) /* ty=Tensor[(286), float32] */;
  (%881, %882, %var_22478, %883, %884)
}

def @func_7144() -> Tensor[(7, 2, 5), float32] {
  %885 = @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %885.1
}

def @func_7211() -> Tensor[(7, 2, 5), float32] {
  %886 = @func_6163() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %886.0
}

def @func_3152() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %887 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %888 = %887.0;
  %889 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%888, %889)
}

def @func_18211(%var_18188: Tensor[(108), float32], %var_18191: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(1, 154), float64], Tensor[(108), int32], Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32]) {
  %890 = @func_17518() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %891 = @func_3964() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %892 = cast(%var_18188, dtype="float32") /* ty=Tensor[(108), float32] */;
  %893 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 154), float64] */, dtype="float64") /* ty=Tensor[(1, 154), float64] */;
  %894 = reshape(%892, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %895 = reshape(%893, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %896 = @func_2600(%894, %895) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool]) */;
  %897 = cast(%var_18191, dtype="int32") /* ty=Tensor[(108), int32] */;
  %898 = shape_of(%var_18188, dtype="int32") /* ty=Tensor[(1), int32] */;
  %899 = cast(%var_18188, dtype="int32") /* ty=Tensor[(108), int32] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?), int32] */;
  %901 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %902 = %890.0;
  %903 = %891.2;
  %904 = %896.3;
  %905 = bitwise_and(%899, %900) /* ty=Tensor[(108), int32] */;
  %906 = @func_13320() /* ty=Tensor[(540, 1), float32] */;
  %907 = %901.0;
  (%902, %903, %904, meta[relay.Constant][28] /* ty=Tensor[(1, 154), float64] */, %905, %906, %907)
}

def @func_13776() -> (Tensor[(7, 2, 5), float32],) {
  %908 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %909 = %908.1;
  (%909,)
}

def @func_11562() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32], Tensor[(540, 1), float32]) {
  %910 = @func_10752() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %911 = @func_9649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %912 = @func_6932() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %913 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %914 = %913.0;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %916 = acosh(%915) /* ty=Tensor[(540, 1), float32] */;
  %917 = cast(%916, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %918 = cast(%916, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %919 = %910.0;
  %920 = %911.2;
  %921 = %912.0;
  %922 = asin(%917) /* ty=Tensor[(540, 1), float32] */;
  %923 = rsqrt(%918) /* ty=Tensor[(540, 1), float32] */;
  (%919, %920, %921, %922, %923)
}

def @func_14797() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) {
  %924 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %925 = @func_13425() /* ty=(Tensor[(4, 3, 4), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %926 = %924.0;
  %927 = @func_3040() /* ty=Tensor[(7, 2, 5), float32] */;
  %928 = %925.0;
  (%926, %927, %928)
}

def @func_15252(%var_15245: Tensor[(540, 16), bool]) -> (Tensor[(540, 16), bool],) {
  %929 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %930 = %929.3;
  %931 = cast(%930, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
  %932 = cast(%var_15245, dtype="bool") /* ty=Tensor[(540, 16), bool] */;
  %933 = equal(%931, %932) /* ty=Tensor[(540, 16), bool] */;
  (%933,)
}

def @func_10637() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %934 = @func_10036() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %935 = @func_7211() /* ty=Tensor[(7, 2, 5), float32] */;
  %936 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  %937 = %934.0;
  (%935, %936, %937)
}

def @func_11475(%var_11464: Tensor[(6, 10, 14), float64]) -> (Tensor[(6, 10, 14), float64], Tensor[(12, 15, 3), bool]) {
  %938 = cast(%var_11464, dtype="float64") /* ty=Tensor[(6, 10, 14), float64] */;
  %939 = @func_4222() /* ty=(Tensor[(12, 15, 3), bool], Tensor[(7, 2, 5), float32]) */;
  %940 = tan(%938) /* ty=Tensor[(6, 10, 14), float64] */;
  %941 = %939.0;
  (%940, %941)
}

def @func_18822() -> Tensor[(7, 2, 5), float32] {
  %942 = @func_11742() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %942.4
}

def @func_7798() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 7, 13), uint32], Tensor[(1, 1001), float32]) {
  %943 = @func_3492() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %944 = @func_5016() /* ty=(Tensor[(108), float32],) */;
  %945 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 1001), float32] */, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
  %946 = reshape(%945, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
  %947 = %943.2;
  %948 = %944.0;
  %949 = @func_7046(%946) /* ty=Tensor[(11, 7, 13), uint32] */;
  (%947, %948, %949, meta[relay.Constant][29] /* ty=Tensor[(1, 1001), float32] */)
}

def @func_20646() -> (Tensor[(7, 2, 5), float32],) {
  %950 = @func_19037() /* ty=Tensor[(7, 2, 5), float32] */;
  (%950,)
}

def @func_1326() -> (Tensor[(540, 1), bool],) {
  %951 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %952 = %951.2;
  (%952,)
}

def @func_5740() -> (Tensor[(540, 1), float32],) {
  %953 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
  %954 = cast(%953, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %955 = sin(%954) /* ty=Tensor[(540, 1), float32] */;
  (%955,)
}

def @func_14650() -> Tensor[(7, 2, 5), float32] {
  %956 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %956.0
}

def @func_14284() -> Tensor[(7, 2, 5), float32] {
  %957 = @func_4273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %957.1
}

def @func_19065() -> (Tensor[(7, 2, 5), float32],) {
  %958 = @func_17267() /* ty=Tensor[(7, 2, 5), float32] */;
  (%958,)
}

def @func_16787(%var_16738: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %959 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %960 = @func_14904() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */;
  %961 = cast(%var_16738, dtype="float64") /* ty=Tensor[(154), float64] */;
  %962 = reshape(%961, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %963 = @func_476(%962) /* ty=Tensor[(11, 7, 2), float64] */;
  %964 = cast(%var_16738, dtype="bool") /* ty=Tensor[(154), bool] */;
  %965 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%963, dtype="bool") /* ty=Tensor[(11, 7, 2), bool] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %968 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %969 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %970 = %959.0;
  %971 = %960.1;
  %972 = not_equal(%966, %967) /* ty=Tensor[(11, 7, 2), bool] */;
  %973 = %968.0;
  %974 = %969.0;
  (%970, %971, %972, %973, %974)
}

def @func_1731() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %975 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %976 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %977 = %975.0;
  %978 = %976.0;
  (%977, %978)
}

def @func_3662() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %979 = @func_1166() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %980 = %979.0;
  %981 = @func_3040() /* ty=Tensor[(7, 2, 5), float32] */;
  (%980, %981)
}

def @func_7506() -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64]) {
  %982 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %983 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %984 = %982.0;
  %985 = %983.0;
  (%984, %985)
}

def @func_15469() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %986 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %987 = @func_9451() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %988 = %986.0;
  %989 = %987.1;
  (%988, %989)
}

def @func_8627(%var_8620: Tensor[(540, 1), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, ?), float64]) {
  %990 = @func_5719() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %991 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %992 = %991.0;
  %993 = cast(%var_8620, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
  %994 = shape_of(%992, dtype="int32") /* ty=Tensor[(2), int32] */;
  %995 = cast(%992, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %997 = %990.0;
  %998 = floor_mod(%995, %996) /* ty=Tensor[(540, ?), float64] */;
  (%997, %998)
}

def @func_22366() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %999 = @func_9910() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1000 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1001 = %999.1;
  %1002 = %1000.0;
  (%1001, %1002)
}

def @func_11588() -> Tensor[(7, 2, 5), float32] {
  @func_2449() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_11812() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1003 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1004 = @func_10299() /* ty=Tensor[(7, 2, 5), float32] */;
  %1005 = %1003.0;
  (%1004, %1005)
}

def @func_12935() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1006 = @func_6396() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1007 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1008 = %1006.0;
  %1009 = %1007.0;
  (%1008, %1009)
}

def @func_5387() -> Tensor[(7, 2, 5), float32] {
  @func_2449() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_6226() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1010 = @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1011 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1012 = %1010.0;
  %1013 = %1011.2;
  (%1012, %1013)
}

def @func_8534() -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), uint32], Tensor[(1001, 1), float32]) {
  %1014 = @func_3152() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1015 = cast(meta[relay.Constant][30] /* ty=Tensor[(1001, 1), float32] */, dtype="float32") /* ty=Tensor[(1001, 1), float32] */;
  %1016 = reshape(%1015, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
  %1017 = %1014.1;
  %1018 = @func_7046(%1016) /* ty=Tensor[(11, 7, 13), uint32] */;
  (%1017, %1018, meta[relay.Constant][30] /* ty=Tensor[(1001, 1), float32] */)
}

def @func_14207() -> Tensor[(11, 7, 13), uint32] {
  %1019 = @func_7798() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 7, 13), uint32], Tensor[(1, 1001), float32]) */;
  %1019.2
}

def @func_2837(%var_2828: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %1020 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1021 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1022 = cast(%var_2828, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1023 = reshape(%1022, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %1024 = @func_525(%1023) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %1025 = %1020.1;
  %1026 = %1021.0;
  %1027 = %1024.1;
  (%1025, %1026, %1027, %var_2828)
}

def @func_11823() -> (Tensor[(7, 2, 5), float32],) {
  %1028 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1029 = %1028.1;
  (%1029,)
}

def @func_10982() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1030 = @func_9910() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1031 = @func_5569() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1032 = @func_6746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1033 = %1030.1;
  %1034 = %1031.0;
  %1035 = %1032.0;
  (%1033, %1034, %1035)
}

def @func_23250() -> (Tensor[(7, 2, 5), float32],) {
  %1036 = @func_16212() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1036,)
}

def @func_21885() -> (Tensor[(108), float32],) {
  %1037 = @func_8021() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1038 = %1037.1;
  (%1038,)
}

def @func_16607() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
  %1039 = @func_15420() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1040 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %1041 = %1039.0;
  %1042 = %1040.1;
  (%1041, %1042)
}

def @func_18008(%var_18003: Tensor[(4, 3, 4), bool]) -> (Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) {
  %1043 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %1044 = @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1045 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1046 = @func_14797() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) */;
  %1047 = %1046.2;
  %1048 = cast(%var_18003, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %1049 = shape_of(%1047, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1050 = cast(%1047, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1052 = %1043.1;
  %1053 = %1044.1;
  %1054 = %1045.0;
  %1055 = greater_equal(%1050, %1051) /* ty=Tensor[(4, 3, 4), bool] */;
  (%1052, %1053, %1054, %1055)
}

def @func_1507() -> (Tensor[(7, 2, 5), float32],) {
  %1056 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1056,)
}

def @func_2990() -> (Tensor[(7, 2, 5), float32],) {
  %1057 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1058 = %1057.0;
  (%1058,)
}

def @func_6353() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1059 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1060 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1061 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1062 = @func_5548() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1063 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  %1064 = %1059.0;
  %1065 = %1060.1;
  %1066 = %1061.1;
  %1067 = %1062.1;
  (%1063, %1064, %1065, %1066, %1067)
}

def @func_833(%var_826: Tensor[(12, 15, 3), bool]) -> (Tensor[(12, 15, 3), float32],) {
  %1068 = @func_739() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1069 = %1068.1;
  %1070 = cast(%var_826, dtype="float32") /* ty=Tensor[(12, 15, 3), float32] */;
  %1071 = shape_of(%1069, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1072 = cast(%1069, dtype="float32") /* ty=Tensor[(12, 15, 3), float32] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1074 = add(%1072, %1073) /* ty=Tensor[(12, 15, 3), float32] */;
  (%1074,)
}

def @func_568(%var_549: Tensor[(12, 1, 9), float32]) -> (Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1075 = cast(%var_549, dtype="float32") /* ty=Tensor[(12, 1, 9), float32] */;
  %1076 = erf(%1075) /* ty=Tensor[(12, 1, 9), float32] */;
  %1077 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %1078 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1076, %1077, %1078)
}

def @func_7112() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %1079 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1080 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1081 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1082 = %1079.0;
  %1083 = %1080.0;
  %1084 = %1081.0;
  (%1082, %1083, %1084)
}

def @func_7028() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1085 = @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1086 = @func_6746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1087 = %1085.0;
  %1088 = %1086.0;
  (%1087, %1088)
}

def @func_13520() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1089 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1090 = @func_5659() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1091 = @func_9159() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1092 = @func_10000() /* ty=Tensor[(7, 2, 5), float32] */;
  %1093 = %1089.0;
  %1094 = %1090.0;
  %1095 = %1091.1;
  (%1092, %1093, %1094, %1095)
}

def @func_20103() -> (Tensor[(108), float32], Tensor[(3, 3, 13), float64], Tensor[(117), float64]) {
  %1096 = cast(meta[relay.Constant][31] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %1097 = reshape(%1096, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), float64] */;
  %1098 = @func_15090() /* ty=Tensor[(108), float32] */;
  %1099 = @func_13933(%1097) /* ty=Tensor[(3, 3, 13), float64] */;
  (%1098, %1099, meta[relay.Constant][31] /* ty=Tensor[(117), float64] */)
}

def @func_764() -> (Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %1100 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1101 = %1100.1;
  %1102 = cast(%1101, dtype="float32") /* ty=Tensor[(12, 15, 3), float32] */;
  %1103 = cast(meta[relay.Constant][32] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1104 = reshape(%1103, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1105 = @func_625(%1104) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1106 = tan(%1102) /* ty=Tensor[(12, 15, 3), float32] */;
  %1107 = %1105.1;
  (%1106, %1107, meta[relay.Constant][32] /* ty=Tensor[(108), float32] */)
}

def @func_1485() -> Tensor[(7, 2, 5), float32] {
  @func_1079() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_2066() -> (Tensor[(7, 2, 5), float32],) {
  %1108 = @func_1886() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1108,)
}

def @func_5522(%var_5514: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) {
  %1109 = @func_1861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) */;
  %1110 = cast(%var_5514, dtype="bool") /* ty=Tensor[(36), bool] */;
  %1111 = reshape(%1110, newshape=[36]) /* ty=Tensor[(36), bool] */;
  %1112 = @func_3786(%1111) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) */;
  %1113 = %1109.1;
  %1114 = %1112.1;
  (%1113, %1114, %var_5514)
}

def @func_14984() -> (Tensor[(7, 2, 5), float32],) {
  %1115 = @func_4766() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1116 = %1115.1;
  (%1116,)
}

def @func_10113() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1117 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1118 = @func_5719() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1119 = %1117.0;
  %1120 = %1118.0;
  (%1119, %1120)
}

def @func_19984(%var_19979: Tensor[(588), bool]) -> (Tensor[(540, 1), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(588), bool]) {
  %1121 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %1122 = @func_11231() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */;
  %1123 = cast(%var_19979, dtype="bool") /* ty=Tensor[(588), bool] */;
  %1124 = reshape(%1123, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %1125 = @func_11084(%1124) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(588), bool]) */;
  %1126 = %1121.0;
  %1127 = %1122.0;
  %1128 = %1125.0;
  (%1126, %1127, %1128, %var_19979)
}

def @func_12909(%var_12896: Tensor[(1620), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 3), bool], Tensor[(1620), bool], Tensor[(7, 2, 5), float32]) {
  %1129 = @func_9038() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1130 = @func_11886() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1131 = cast(%var_12896, dtype="bool") /* ty=Tensor[(1620), bool] */;
  %1132 = reshape(%1131, newshape=[540, 3]) /* ty=Tensor[(540, 3), bool] */;
  %1133 = @func_7290(%1132) /* ty=(Tensor[(540, 3), bool], Tensor[(540, 3), uint64]) */;
  %1134 = @func_8483() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1135 = %1129.0;
  %1136 = %1130.0;
  %1137 = %1133.0;
  %1138 = %1134.1;
  (%1135, %1136, %1137, %var_12896, %1138)
}

def @func_8021() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %1139 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1140 = %1139.0;
  %1141 = @func_6480() /* ty=Tensor[(108), float32] */;
  (%1140, %1141)
}

def @func_8949() -> Tensor[(7, 2, 5), float32] {
  %1142 = @func_6396() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1142.0
}

def @func_12668() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1143 = cast(meta[relay.Constant][33] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %1144 = cast(meta[relay.Constant][33] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %1145 = reshape(%1143, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), int32] */;
  %1146 = reshape(%1144, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), int32] */;
  %1147 = @func_11678(%1145, %1146) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(15, 9, 8), float64]) */;
  %1148 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1149 = @func_10836() /* ty=Tensor[(7, 2, 5), float32] */;
  %1150 = %1147.1;
  %1151 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
  %1152 = %1148.1;
  (%1149, %1150, meta[relay.Constant][33] /* ty=Tensor[(1080), int32] */, %1151, %1152)
}

def @func_11035() -> (Tensor[(11, 7, 2), float64],) {
  %1153 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %1154 = %1153.0;
  (%1154,)
}

def @func_20625() -> (Tensor[(7, 2, 5), float32],) {
  %1155 = @func_13505() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1156 = %1155.0;
  (%1156,)
}

def @func_10788() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1157 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1158 = @func_4336() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1159 = %1157.1;
  %1160 = %1158.0;
  (%1159, %1160)
}

def @func_12493() -> Tensor[(154), float64] {
  %1161 = @func_10449() /* ty=(Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */;
  %1161.0
}

def @func_12718() -> Tensor[(7, 2, 5), float32] {
  @func_7226() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_13031() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) {
  %1162 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1163 = @func_7226() /* ty=Tensor[(7, 2, 5), float32] */;
  %1164 = @func_6174() /* ty=Tensor[(108), float32] */;
  %1165 = %1162.1;
  (%1163, %1164, %1165)
}

def @func_16212() -> Tensor[(7, 2, 5), float32] {
  %1166 = @func_11231() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */;
  %1166.1
}

def @func_15420() -> (Tensor[(7, 2, 5), float32],) {
  %1167 = @func_6932() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1168 = %1167.0;
  (%1168,)
}

def @func_22689() -> Tensor[(7, 2, 5), float32] {
  %1169 = @func_18475() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1169.0
}

def @func_23017() -> (Tensor[(108), float32],) {
  %1170 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1171 = %1170.0;
  (%1171,)
}

def @func_10217(%var_10144: Tensor[(16, 3, 2), uint64], %var_10145: Tensor[(16, 3, 2), uint64]) -> (Tensor[(16, 3, 2), uint64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1172 = cast(%var_10145, dtype="uint64") /* ty=Tensor[(16, 3, 2), uint64] */;
  %1173 = shape_of(%var_10144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1174 = cast(%var_10144, dtype="uint64") /* ty=Tensor[(16, 3, 2), uint64] */;
  %1175 = dyn.reshape(%1172, %1173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1176 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1177 = @func_2728() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1178 = @func_7867() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1179 = logical_xor(%1174, %1175) /* ty=Tensor[(16, 3, 2), uint64] */;
  %1180 = %1176.0;
  %1181 = %1177.0;
  %1182 = %1178.0;
  (%1179, %1180, %1181, %1182)
}

def @func_11742() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1183 = @func_4766() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1184 = @func_9649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1185 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1186 = @func_10788() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1187 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1188 = %1183.0;
  %1189 = %1184.0;
  %1190 = %1185.1;
  %1191 = %1186.0;
  %1192 = %1187.1;
  (%1188, %1189, %1190, %1191, %1192)
}

def @func_1343() -> Tensor[(7, 2, 5), float32] {
  %1193 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1193.0
}

def @func_17350(%var_17342: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) {
  %1194 = cast(%var_17342, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1195 = reshape(%1194, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1196 = @func_2031(%1195) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1197 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  %1198 = %1196.0;
  (%1197, %1198, %var_17342)
}

def @func_10048() -> (Tensor[(108), float32],) {
  %1199 = @func_2227() /* ty=Tensor[(108), float32] */;
  (%1199,)
}

def @func_1250(%var_1238: bool, %var_1239: Tensor[(2, 9, 2), bool]) -> (Tensor[(2, 9, 2), bool],) {
  %1200 = cast(%var_1238, dtype="bool") /* ty=bool */;
  %1201 = cast(%var_1239, dtype="bool") /* ty=Tensor[(2, 9, 2), bool] */;
  %1202 = logical_and(%1200, %1201) /* ty=Tensor[(2, 9, 2), bool] */;
  (%1202,)
}

def @func_19707() -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1203 = @func_14984() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1204 = @func_887() /* ty=(Tensor[(540), bool],) */;
  %1205 = @func_15653() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1206 = @func_6699() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1207 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1208 = %1203.0;
  %1209 = %1204.0;
  %1210 = @func_17356() /* ty=Tensor[(7, 2, 5), float32] */;
  %1211 = %1205.0;
  %1212 = %1206.0;
  %1213 = %1207.0;
  (%1208, %1209, %1210, %1211, %1212, %1213)
}

def @func_956() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1214 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
  %1215 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1214, %1215)
}

def @func_22241(%var_22211: Tensor[(1080), float32], %var_22232: Tensor[(540, 2), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, 2), uint8], Tensor[(540, 2), bool]) {
  %1216 = @func_16866() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1217 = cast(%var_22211, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %1218 = cast(%var_22211, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %1219 = reshape(%1217, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %1220 = reshape(%1218, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
  %1221 = @func_13832(%1219, %1220) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) */;
  %1222 = %1221.0;
  %1223 = cast(%var_22211, dtype="uint8") /* ty=Tensor[(1080), uint8] */;
  %1224 = shape_of(%1222, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1225 = cast(%1222, dtype="uint8") /* ty=Tensor[(540, 2), uint8] */;
  %1226 = dyn.reshape(%1223, %1224, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1227 = cast(%var_22232, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
  %1228 = shape_of(%1222, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1229 = cast(%1222, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
  %1230 = dyn.reshape(%1227, %1228, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1231 = %1216.1;
  %1232 = bitwise_xor(%1225, %1226) /* ty=Tensor[(540, 2), uint8] */;
  %1233 = not_equal(%1229, %1230) /* ty=Tensor[(540, 2), bool] */;
  (%1231, %1232, %1233)
}

def @func_13933(%var_13917: Tensor[(3, 3, 13), float64]) -> Tensor[(3, 3, 13), float64] {
  %1234 = cast(%var_13917, dtype="float64") /* ty=Tensor[(3, 3, 13), float64] */;
  asin(%1234) /* ty=Tensor[(3, 3, 13), float64] */
}

def @func_19597() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540, 1), float32], Tensor[(108), float32]) {
  %1235 = @func_12385() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1236 = @func_10048() /* ty=(Tensor[(108), float32],) */;
  %1237 = @func_17441() /* ty=(Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1238 = %1235.1;
  %1239 = %1236.0;
  %1240 = %1237.0;
  %1241 = @func_6174() /* ty=Tensor[(108), float32] */;
  (%1238, %1239, %1240, %1241)
}

def @func_11886() -> (Tensor[(7, 2, 5), float32],) {
  %1242 = @func_6226() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1243 = %1242.0;
  (%1243,)
}

def @func_8483() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1244 = @func_5905() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1245 = @func_6015() /* ty=Tensor[(7, 2, 5), float32] */;
  %1246 = %1244.0;
  (%1245, %1246)
}

def @func_4222() -> (Tensor[(12, 15, 3), bool], Tensor[(7, 2, 5), float32]) {
  %1247 = @func_739() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1248 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1249 = %1247.1;
  %1250 = %1248.0;
  (%1249, %1250)
}

def @func_6480() -> Tensor[(108), float32] {
  %1251 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1251.0
}

def @func_1982() -> (Tensor[(7, 2, 5), float32],) {
  %1252 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1253 = %1252.1;
  (%1253,)
}

def @func_8592() -> Tensor[(7, 2, 5), float32] {
  %1254 = @func_4273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1254.1
}

def @func_153() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
  %1255 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %1256 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(7, 2, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1257 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1259 = cast(meta[relay.Constant][36] /* ty=Tensor[(540), bool] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %1260 = reshape(%1259, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), bool] */;
  %1261 = @func_32(%1260) /* ty=(Tensor[(12, 15, 3), bool],) */;
  %1262 = divide(%1257, %1258) /* ty=Tensor[(7, 2, 5), float32] */;
  %1263 = %1261.0;
  (%1262, %1263, meta[relay.Constant][36] /* ty=Tensor[(540), bool] */)
}

def @func_10449() -> (Tensor[(154), float64], Tensor[(7, 2, 5), float32]) {
  %1264 = @func_1775() /* ty=(Tensor[(540), bool], Tensor[(154), float64]) */;
  %1265 = @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1266 = %1264.1;
  %1267 = %1265.0;
  (%1266, %1267)
}

def @func_13307() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) {
  %1268 = cast(meta[relay.Constant][37] /* ty=Tensor[(36), bool] */, dtype="bool") /* ty=Tensor[(36), bool] */;
  %1269 = reshape(%1268, newshape=[36]) /* ty=Tensor[(36), bool] */;
  %1270 = @func_5522(%1269) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
  %1271 = @func_6480() /* ty=Tensor[(108), float32] */;
  %1272 = %1270.1;
  (%1271, %1272, meta[relay.Constant][37] /* ty=Tensor[(36), bool] */)
}

def @func_22619(%var_22579: Tensor[(7, 14, 6), int16]) -> (Tensor[(7, 14, 6), int16], Tensor[(7, 2, 5), float32]) {
  %1273 = cast(%var_22579, dtype="int16") /* ty=Tensor[(7, 14, 6), int16] */;
  %1274 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(7, 14, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1275 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 14, 6), int16] */, dtype="int16") /* ty=Tensor[(7, 14, 6), int16] */;
  %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1277 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1278 = right_shift(%1275, %1276) /* ty=Tensor[(7, 14, 6), int16] */;
  %1279 = %1277.1;
  (%1278, %1279)
}

def @func_22420() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1280 = @func_18475() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1281 = %1280.0;
  %1282 = @func_18753() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1281, %1282)
}

def @func_9649() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1283 = @func_4135() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1284 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %1285 = %1283.3;
  %1286 = @func_7226() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1284, %1285, %1286)
}

def @func_13206() -> (Tensor[(7, 2, 5), float32],) {
  %1287 = @func_2644() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) */;
  %1288 = %1287.0;
  (%1288,)
}

def @func_19659() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1289 = @func_5548() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1290 = %1289.0;
  %1291 = @func_974() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1290, %1291)
}

def @func_2123() -> (Tensor[(7, 2, 5), float32],) {
  %1292 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1293 = %1292.1;
  (%1293,)
}

def @func_17157() -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) {
  %1294 = cast(meta[relay.Constant][39] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1295 = reshape(%1294, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %1296 = @func_525(%1295) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %1297 = @func_3040() /* ty=Tensor[(7, 2, 5), float32] */;
  %1298 = %1296.2;
  (%1297, %1298, meta[relay.Constant][39] /* ty=Tensor[(154), float64] */)
}

def @func_23047() -> Tensor[(7, 2, 5), float32] {
  %1299 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1299.0
}

def @func_13997(%var_13972: Tensor[(5, 6, 13), bool], %var_13973: Tensor[(5, 6, 13), bool]) -> (Tensor[(5, 6, 13), bool], Tensor[(5, 6, 13), uint8]) {
  %1300 = cast(%var_13973, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
  %1301 = shape_of(%var_13972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1302 = cast(%var_13972, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
  %1303 = dyn.reshape(%1300, %1301, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1304 = cast(%var_13973, dtype="uint8") /* ty=Tensor[(5, 6, 13), uint8] */;
  %1305 = shape_of(%var_13972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1306 = cast(%var_13972, dtype="uint8") /* ty=Tensor[(5, 6, 13), uint8] */;
  %1307 = dyn.reshape(%1304, %1305, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1308 = logical_or(%1302, %1303) /* ty=Tensor[(5, 6, 13), bool] */;
  %1309 = maximum(%1306, %1307) /* ty=Tensor[(5, 6, 13), uint8] */;
  (%1308, %1309)
}

def @func_15653() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1310 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1311 = @func_1886() /* ty=Tensor[(7, 2, 5), float32] */;
  %1312 = %1310.0;
  %1313 = @func_14650() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1311, %1312, %1313)
}

def @func_5946() -> (Tensor[(7, 2, 5), float32],) {
  %1314 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1315 = %1314.0;
  (%1315,)
}

def @func_17733() -> Tensor[(7, 2, 5), float32] {
  %1316 = @func_9910() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1316.0
}

def @func_9038() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1317 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1318 = @func_5548() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1319 = %1317.0;
  %1320 = %1318.1;
  (%1319, %1320)
}

def @func_18256() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(1080), int32], Tensor[(7, 2, 5), float32]) {
  %1321 = @func_14861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1322 = @func_17157() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) */;
  %1323 = @func_12668() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1324 = @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1325 = @func_17618() /* ty=Tensor[(7, 2, 5), float32] */;
  %1326 = %1321.0;
  %1327 = @func_16498() /* ty=Tensor[(7, 2, 5), float32] */;
  %1328 = %1322.2;
  %1329 = %1323.2;
  %1330 = %1324.1;
  (%1325, %1326, %1327, %1328, %1329, %1330)
}

def @func_6396() -> (Tensor[(7, 2, 5), float32],) {
  %1331 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1331,)
}

def @func_15745() -> (Tensor[(7, 2, 5), float32],) {
  %1332 = @func_9649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1333 = %1332.2;
  (%1333,)
}

def @func_5250() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1334 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1335 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1336 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1337 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1338 = %1334.2;
  %1339 = %1335.0;
  %1340 = %1336.0;
  %1341 = %1337.0;
  (%1338, %1339, %1340, %1341)
}

def @func_14442() -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1342 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1343 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %1344 = @func_13546() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1345 = %1342.0;
  %1346 = %1343.2;
  %1347 = @func_4897() /* ty=Tensor[(7, 2, 5), float32] */;
  %1348 = %1344.0;
  %1349 = @func_12271() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1345, %1346, %1347, %1348, %1349)
}

def @func_18807() -> (Tensor[(7, 2, 5), float32],) {
  %1350 = @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1351 = %1350.0;
  (%1351,)
}

def @func_15090() -> Tensor[(108), float32] {
  %1352 = @func_5016() /* ty=(Tensor[(108), float32],) */;
  %1352.0
}

def @func_1303() -> (Tensor[(7, 2, 5), float32],) {
  %1353 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_4868(%var_4857: Tensor[(154), float64], %var_4865: Tensor[(24), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(24), float32]) {
  %1355 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1356 = cast(%var_4857, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1357 = reshape(%1356, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %1358 = cast(%var_4865, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1359 = cast(%var_4857, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1360 = reshape(%1358, newshape=[3, 2, 4]) /* ty=Tensor[(3, 2, 4), float32] */;
  %1361 = reshape(%1359, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %1362 = @func_3089(%1360, %1361) /* ty=(Tensor[(3, 2, 4), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) */;
  %1363 = %1355.2;
  %1364 = @func_476(%1357) /* ty=Tensor[(11, 7, 2), float64] */;
  %1365 = %1362.3;
  (%1363, %1364, %var_4857, %1365, %var_4865)
}

def @func_10829() -> (Tensor[(7, 2, 5), float32],) {
  %1366 = @func_4440() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1367 = %1366.0;
  (%1367,)
}

def @func_14149() -> (Tensor[(540, ?), uint64], Tensor[(7, 2, 5), float32]) {
  %1368 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
  %1369 = cast(%1368, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %1370 = asinh(%1369) /* ty=Tensor[(540, 1), float32] */;
  %1371 = cast(%1370, dtype="uint64") /* ty=Tensor[(540, 1), uint64] */;
  %1372 = shape_of(%1368, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1373 = cast(%1368, dtype="uint64") /* ty=Tensor[(540, 1), uint64] */;
  %1374 = dyn.reshape(%1371, %1372, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1375 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1376 = bitwise_or(%1373, %1374) /* ty=Tensor[(540, ?), uint64] */;
  %1377 = %1375.1;
  (%1376, %1377)
}

def @func_23423() -> Tensor[(7, 2, 5), float32] {
  @func_7226() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_18389() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), int32], Tensor[(540), bool]) {
  %1378 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1379 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %1380 = @func_4057() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1381 = @func_11267() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(44), int32], Tensor[(440), int32]) */;
  %1382 = @func_15090() /* ty=Tensor[(108), float32] */;
  %1383 = cast(%1382, dtype="float64") /* ty=Tensor[(108), float64] */;
  %1384 = asin(%1383) /* ty=Tensor[(108), float64] */;
  %1385 = @func_8021() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1386 = %1385.1;
  %1387 = cast(%1386, dtype="int32") /* ty=Tensor[(108), int32] */;
  %1388 = shape_of(%1384, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1389 = cast(%1384, dtype="int32") /* ty=Tensor[(108), int32] */;
  %1390 = dyn.reshape(%1387, %1388, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1391 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %1392 = %1378.0;
  %1393 = %1379.1;
  %1394 = %1380.1;
  %1395 = %1381.2;
  %1396 = subtract(%1389, %1390) /* ty=Tensor[(108), int32] */;
  %1397 = %1391.2;
  (%1392, %1393, %1394, %1395, %1396, %1397)
}

def @func_22063() -> (Tensor[(7, 2, 5), float32],) {
  %1398 = @func_18847() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1398,)
}

def @func_19479() -> (Tensor[(7, 2, 5), float32],) {
  %1399 = @func_12505() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1400 = %1399.0;
  (%1400,)
}

def @func_6174() -> Tensor[(108), float32] {
  %1401 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %1401.0
}

def @func_10036() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1402 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1403 = @func_1166() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1404 = @func_2728() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1405 = %1402.0;
  %1406 = %1403.1;
  %1407 = %1404.0;
  (%1405, %1406, %1407)
}

def @func_23170() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1408 = @func_4440() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1409 = %1408.0;
  %1410 = @func_19729() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1409, %1410)
}

def @func_9499() -> (Tensor[(7, 2, 5), float32],) {
  %1411 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1412 = %1411.0;
  (%1412,)
}

def @func_21796() -> (Tensor[(5, 6, 13), bool], Tensor[(7, 2, 5), float32]) {
  %1413 = @func_18731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) */;
  %1414 = %1413.1;
  %1415 = @func_15983() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1414, %1415)
}

def @func_17693() -> (Tensor[(7, 2, 5), float32],) {
  %1416 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1416,)
}

def @func_21931() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1417 = @func_20173() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540, 108), float32]) */;
  %1418 = @func_16866() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1419 = %1417.0;
  %1420 = %1418.1;
  (%1419, %1420)
}

def @func_974() -> Tensor[(7, 2, 5), float32] {
  %1421 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1421.0
}

def @func_4997() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1422 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  %1423 = @func_4897() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1422, %1423)
}

def @func_1933() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1424 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1425 = %1424.3;
  %1426 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1425, %1426)
}

def @func_17076() -> Tensor[(7, 2, 5), float32] {
  %1427 = @func_15953() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1427.0
}

def @func_1166() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1428 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1429 = %1428.1;
  %1430 = @func_974() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1429, %1430)
}

def @func_15535() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1431 = @func_7867() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1432 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1433 = %1431.0;
  %1434 = %1432.0;
  (%1433, %1434)
}

def @func_23373() -> Tensor[(7, 2, 5), float32] {
  @func_207() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_9204() -> Tensor[(7, 2, 5), float32] {
  %1435 = @func_7798() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 7, 13), uint32], Tensor[(1, 1001), float32]) */;
  %1435.0
}

def @func_23241() -> (Tensor[(65, 6), bool], Tensor[(108), float32], Tensor[(108), float32]) {
  %1436 = @func_18731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) */;
  %1437 = @func_13307() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
  %1438 = %1436.2;
  %1439 = %1437.0;
  %1440 = @func_15090() /* ty=Tensor[(108), float32] */;
  (%1438, %1439, %1440)
}

def @func_20872() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64]) {
  %1441 = @func_14097() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1442 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1443 = %1441.0;
  %1444 = %1442.1;
  %1445 = @func_12493() /* ty=Tensor[(154), float64] */;
  (%1443, %1444, %1445)
}

def @func_16318(%var_16313: Tensor[(11, 7, 13), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), bool]) {
  %1446 = @func_14861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1447 = @func_7506() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64]) */;
  %1448 = @func_4597() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1449 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1450 = @func_14207() /* ty=Tensor[(11, 7, 13), uint32] */;
  %1451 = cast(%1450, dtype="float32") /* ty=Tensor[(11, 7, 13), float32] */;
  %1452 = log2(%1451) /* ty=Tensor[(11, 7, 13), float32] */;
  %1453 = cast(%var_16313, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
  %1454 = shape_of(%1452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1455 = cast(%1452, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
  %1456 = dyn.reshape(%1453, %1454, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1457 = %1446.1;
  %1458 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  %1459 = %1447.1;
  %1460 = %1448.0;
  %1461 = %1449.0;
  %1462 = logical_or(%1455, %1456) /* ty=Tensor[(11, 7, 13), bool] */;
  (%1457, %1458, %1459, %1460, %1461, %1462)
}

def @func_19766() -> Tensor[(7, 2, 5), float32] {
  %1463 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1463.0
}

def @func_7046(%var_7036: Tensor[(11, 7, 13), float32]) -> Tensor[(11, 7, 13), uint32] {
  %1464 = cast(%var_7036, dtype="float32") /* ty=Tensor[(11, 7, 13), float32] */;
  %1465 = acos(%1464) /* ty=Tensor[(11, 7, 13), float32] */;
  %1466 = cast(%var_7036, dtype="uint32") /* ty=Tensor[(11, 7, 13), uint32] */;
  %1467 = shape_of(%1465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1468 = cast(%1465, dtype="uint32") /* ty=Tensor[(11, 7, 13), uint32] */;
  %1469 = dyn.reshape(%1466, %1467, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%1468, %1469) /* ty=Tensor[(11, 7, 13), uint32] */
}

def @func_18910() -> (Tensor[(108), float32],) {
  %1470 = @func_6480() /* ty=Tensor[(108), float32] */;
  (%1470,)
}

def @func_18731() -> (Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) {
  %1471 = @func_9573() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1472 = cast(meta[relay.Constant][40] /* ty=Tensor[(65, 6), bool] */, dtype="bool") /* ty=Tensor[(65, 6), bool] */;
  %1473 = cast(meta[relay.Constant][40] /* ty=Tensor[(65, 6), bool] */, dtype="bool") /* ty=Tensor[(65, 6), bool] */;
  %1474 = reshape(%1472, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %1475 = reshape(%1473, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %1476 = @func_13997(%1474, %1475) /* ty=(Tensor[(5, 6, 13), bool], Tensor[(5, 6, 13), uint8]) */;
  %1477 = %1471.0;
  %1478 = %1476.0;
  (%1477, %1478, meta[relay.Constant][40] /* ty=Tensor[(65, 6), bool] */)
}

def @func_19112() -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64]) {
  %1479 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1480 = @func_10449() /* ty=(Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */;
  %1481 = %1479.0;
  %1482 = %1480.0;
  (%1481, %1482)
}

def @func_20031() -> (Tensor[(108), float32],) {
  %1483 = @func_13307() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
  %1484 = %1483.0;
  (%1484,)
}

def @func_22020(%var_21998: bool, %var_21999: Tensor[(9, 4), bool], %var_22004: Tensor[(2, 9, 2), bool]) -> (Tensor[(7, 2, 5), float32], bool, Tensor[(9, 4), bool], Tensor[(2, 9, 2), float64]) {
  %1485 = @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1486 = cast(%var_21998, dtype="bool") /* ty=bool */;
  %1487 = cast(%var_21999, dtype="bool") /* ty=Tensor[(9, 4), bool] */;
  %1488 = reshape(%1486, newshape=[]) /* ty=bool */;
  %1489 = reshape(%1487, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %1490 = @func_1250(%1488, %1489) /* ty=(Tensor[(2, 9, 2), bool],) */;
  %1491 = %1490.0;
  %1492 = cast(%var_22004, dtype="float64") /* ty=Tensor[(2, 9, 2), float64] */;
  %1493 = shape_of(%1491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1494 = cast(%1491, dtype="float64") /* ty=Tensor[(2, 9, 2), float64] */;
  %1495 = dyn.reshape(%1492, %1493, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1496 = %1485.1;
  %1497 = multiply(%1494, %1495) /* ty=Tensor[(2, 9, 2), float64] */;
  (%1496, %var_21998, %var_21999, %1497)
}

def @func_15600() -> (Tensor[(7, 2, 5), float32],) {
  %1498 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1499 = %1498.0;
  (%1499,)
}

def @func_14038(%var_14008: Tensor[(13, 2, 11), float64]) -> (Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1500 = cast(%var_14008, dtype="float64") /* ty=Tensor[(13, 2, 11), float64] */;
  %1501 = cast(%var_14008, dtype="float32") /* ty=Tensor[(13, 2, 11), float32] */;
  %1502 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1503 = sqrt(%1500) /* ty=Tensor[(13, 2, 11), float64] */;
  %1504 = asin(%1501) /* ty=Tensor[(13, 2, 11), float32] */;
  %1505 = %1502.0;
  %1506 = @func_8592() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1503, %1504, %1505, %1506)
}

def @func_12271() -> Tensor[(7, 2, 5), float32] {
  %1507 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1507.0
}

def @func_4597() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1508 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1509 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  %1510 = %1508.0;
  (%1509, %1510)
}

def @func_21301() -> (Tensor[(11, 7, 2), float64],) {
  %1511 = @func_11035() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %1512 = %1511.0;
  (%1512,)
}

def @func_32(%var_25: Tensor[(12, 15, 3), bool]) -> (Tensor[(12, 15, 3), bool],) {
  %1513 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 15, 1), bool] */, dtype="bool") /* ty=Tensor[(12, 15, 1), bool] */;
  %1514 = cast(%var_25, dtype="bool") /* ty=Tensor[(12, 15, 3), bool] */;
  %1515 = logical_or(%1513, %1514) /* ty=Tensor[(12, 15, 3), bool] */;
  (%1515,)
}

def @func_20934() -> (Tensor[(7, 2, 5), float32],) {
  %1516 = @func_14263() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1517 = %1516.0;
  (%1517,)
}

def @func_3205(%var_3174: Tensor[(3, 3, 11), float64]) -> (Tensor[(3, 3, 11), float64], Tensor[(7, 2, 5), float32]) {
  %1518 = cast(%var_3174, dtype="float64") /* ty=Tensor[(3, 3, 11), float64] */;
  %1519 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1520 = acosh(%1518) /* ty=Tensor[(3, 3, 11), float64] */;
  %1521 = %1519.1;
  (%1520, %1521)
}

def @func_12385() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1522 = @func_6163() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1523 = @func_12085() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1524 = %1522.0;
  %1525 = %1523.0;
  (%1524, %1525)
}

def @func_19530() -> Tensor[(7, 2, 5), float32] {
  %1526 = @func_9499() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1526.0
}

def @func_9012() -> Tensor[(11, 7, 2), float64] {
  %1527 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %1527.0
}

def @func_14612(%var_14591: Tensor[(540, 1), int64]) -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154, 1), float64], Tensor[(1, 24), float32], Tensor[(540, ?), int64], Tensor[(7, 2, 5), float32]) {
  %1528 = @func_10637() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1529 = cast(meta[relay.Constant][42] /* ty=Tensor[(154, 1), float64] */, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %1530 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 24), float32] */, dtype="float32") /* ty=Tensor[(1, 24), float32] */;
  %1531 = reshape(%1529, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %1532 = reshape(%1530, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %1533 = @func_4868(%1531, %1532) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(24), float32]) */;
  %1534 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
  %1535 = cast(meta[relay.Constant][44] /* ty=Tensor[(540, 1), bool] */, dtype="int64") /* ty=Tensor[(540, 1), int64] */;
  %1536 = shape_of(%1534, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1537 = cast(%1534, dtype="int64") /* ty=Tensor[(540, 1), int64] */;
  %1538 = dyn.reshape(%1535, %1536, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1539 = subtract(%1537, %1538) /* ty=Tensor[(540, ?), int64] */;
  %1540 = cast(%var_14591, dtype="int64") /* ty=Tensor[(540, 1), int64] */;
  %1541 = shape_of(%1539, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1542 = cast(%1539, dtype="int64") /* ty=Tensor[(540, ?), int64] */;
  %1543 = dyn.reshape(%1540, %1541, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1544 = %1528.1;
  %1545 = %1533.3;
  %1546 = bitwise_xor(%1542, %1543) /* ty=Tensor[(540, ?), int64] */;
  %1547 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1544, %1545, meta[relay.Constant][42] /* ty=Tensor[(154, 1), float64] */, meta[relay.Constant][43] /* ty=Tensor[(1, 24), float32] */, %1546, %1547)
}

def @func_17267() -> Tensor[(7, 2, 5), float32] {
  %1548 = @func_6746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1548.0
}

def @func_20584() -> Tensor[(7, 2, 5), float32] {
  %1549 = @func_13031() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) */;
  %1549.0
}

def @func_16705() -> Tensor[(7, 2, 5), float32] {
  %1550 = @func_9649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1550.1
}

def @func_17398() -> (Tensor[(7, 2, 5), float32],) {
  %1551 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1551,)
}

def @func_13760() -> (Tensor[(7, 2, 5), float32],) {
  %1552 = @func_12124() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1553 = %1552.0;
  (%1553,)
}

def @func_15379(%var_15367: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(6, 18), float32]) {
  %1554 = @func_5905() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1555 = cast(%var_15367, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %1556 = reshape(%1555, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1557 = @func_2031(%1556) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1558 = %1554.0;
  %1559 = %1557.2;
  (%1558, %1559, %var_15367)
}

def @func_20208(%var_20202: Tensor[(6, 4, 7), float32]) -> (Tensor[(6, 4, 7), float32], Tensor[(154), float64]) {
  %1560 = cast(%var_20202, dtype="float32") /* ty=Tensor[(6, 4, 7), float32] */;
  %1561 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %1562 = rsqrt(%1560) /* ty=Tensor[(6, 4, 7), float32] */;
  %1563 = %1561.2;
  (%1562, %1563)
}

def @func_1775() -> (Tensor[(540), bool], Tensor[(154), float64]) {
  %1564 = @func_887() /* ty=(Tensor[(540), bool],) */;
  %1565 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %1566 = %1564.0;
  %1567 = %1565.2;
  (%1566, %1567)
}

def @func_21656() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1568 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1569 = @func_2912() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1570 = %1568.0;
  %1571 = %1569.0;
  (%1570, %1571)
}

def @func_19262(%var_19206: Tensor[(540, 10), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 10), uint32], Tensor[(108), float32], Tensor[(108), float32], Tensor[(540, 1), bool]) {
  %1572 = @func_2221() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1573 = @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */;
  %1574 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
  %1575 = cast(%1574, dtype="uint16") /* ty=Tensor[(540, 1), uint16] */;
  %1576 = cast(%var_19206, dtype="uint16") /* ty=Tensor[(540, 10), uint16] */;
  %1577 = left_shift(%1575, %1576) /* ty=Tensor[(540, 10), uint16] */;
  %1578 = cast(%1577, dtype="float64") /* ty=Tensor[(540, 10), float64] */;
  %1579 = asin(%1578) /* ty=Tensor[(540, 10), float64] */;
  %1580 = cast(meta[relay.Constant][45] /* ty=Tensor[(540, 10), float64] */, dtype="uint32") /* ty=Tensor[(540, 10), uint32] */;
  %1581 = shape_of(%1579, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1582 = cast(%1579, dtype="uint32") /* ty=Tensor[(540, 10), uint32] */;
  %1583 = dyn.reshape(%1580, %1581, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1584 = cast(meta[relay.Constant][46] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1585 = reshape(%1584, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1586 = @func_17350(%1585) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) */;
  %1587 = %1572.0;
  %1588 = %1573.0;
  %1589 = bitwise_or(%1582, %1583) /* ty=Tensor[(540, 10), uint32] */;
  %1590 = %1586.2;
  %1591 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
  (%1587, %1588, %1589, %1590, meta[relay.Constant][46] /* ty=Tensor[(108), float32] */, %1591)
}

def @func_22959(%var_22943: Tensor[(4, 12, 16), float32]) -> (Tensor[(4, 12, 16), float32], Tensor[(7, 2, 5), float32]) {
  %1592 = cast(%var_22943, dtype="float32") /* ty=Tensor[(4, 12, 16), float32] */;
  %1593 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1594 = log2(%1592) /* ty=Tensor[(4, 12, 16), float32] */;
  %1595 = %1593.1;
  (%1594, %1595)
}

def @func_21629(%var_21610: Tensor[(1001, 15), float32]) -> (Tensor[(1001, 15), uint32], Tensor[(1001, 15), bool], Tensor[(1001, 15), uint64]) {
  %1596 = @func_8534() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), uint32], Tensor[(1001, 1), float32]) */;
  %1597 = %1596.2;
  %1598 = cast(%1597, dtype="uint32") /* ty=Tensor[(1001, 1), uint32] */;
  %1599 = cast(%var_21610, dtype="uint32") /* ty=Tensor[(1001, 15), uint32] */;
  %1600 = cast(%1597, dtype="bool") /* ty=Tensor[(1001, 1), bool] */;
  %1601 = cast(%var_21610, dtype="bool") /* ty=Tensor[(1001, 15), bool] */;
  %1602 = cast(%1597, dtype="uint64") /* ty=Tensor[(1001, 1), uint64] */;
  %1603 = cast(%var_21610, dtype="uint64") /* ty=Tensor[(1001, 15), uint64] */;
  %1604 = minimum(%1598, %1599) /* ty=Tensor[(1001, 15), uint32] */;
  %1605 = logical_or(%1600, %1601) /* ty=Tensor[(1001, 15), bool] */;
  %1606 = logical_xor(%1602, %1603) /* ty=Tensor[(1001, 15), uint64] */;
  (%1604, %1605, %1606)
}

def @func_14097() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1607 = @func_6746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1608 = @func_12271() /* ty=Tensor[(7, 2, 5), float32] */;
  %1609 = %1607.1;
  (%1608, %1609)
}

def @func_2728() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1610 = @func_2644() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) */;
  %1611 = @func_1861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) */;
  %1612 = %1610.0;
  %1613 = %1611.1;
  (%1612, %1613)
}

def @func_17603() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1614 = @func_11035() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %1615 = @func_17518() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1616 = @func_14199() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1617 = %1614.0;
  %1618 = %1615.0;
  %1619 = %1616.1;
  (%1617, %1618, %1619)
}

def @func_4336() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1620 = @func_956() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1621 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1622 = %1620.1;
  %1623 = %1621.4;
  (%1622, %1623)
}

def @func_13546() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1624 = @func_9159() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1625 = %1624.0;
  %1626 = @func_10643() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1625, %1626)
}

def @func_3876(%var_3857: bool, %var_3858: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) {
  %1627 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1628 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1629 = cast(%var_3857, dtype="bool") /* ty=bool */;
  %1630 = cast(%var_3858, dtype="bool") /* ty=Tensor[(36), bool] */;
  %1631 = reshape(%1629, newshape=[]) /* ty=bool */;
  %1632 = reshape(%1630, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %1633 = @func_1250(%1631, %1632) /* ty=(Tensor[(2, 9, 2), bool],) */;
  %1634 = %1627.1;
  %1635 = %1628.0;
  %1636 = %1633.0;
  (%1634, %1635, %1636, %var_3857, %var_3858)
}

def @func_9159() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1637 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1638 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1639 = %1637.0;
  %1640 = %1638.0;
  (%1639, %1640)
}

def @func_22169() -> (Tensor[(7, 2, 5), float32],) {
  %1641 = @func_2728() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1642 = %1641.0;
  (%1642,)
}

def @func_7632() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1643 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1644 = @func_6353() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1645 = %1643.0;
  %1646 = %1644.0;
  (%1645, %1646)
}

def @func_22113() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1647 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1648 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1649 = %1647.0;
  %1650 = %1648.1;
  (%1649, %1650)
}

def @func_8212() -> (Tensor[(7, 2, 5), float32],) {
  %1651 = @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1652 = %1651.1;
  (%1652,)
}

def @func_2777(%var_2732: Tensor[(7, 6, 14), bool]) -> (Tensor[(7, 6, 14), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
  %1653 = cast(%var_2732, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %1654 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(7, 6, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1655 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 6, 14), bool] */, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %1656 = dyn.reshape(%1653, %1654, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1657 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1658 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1659 = cast(meta[relay.Constant][48] /* ty=Tensor[(540), bool] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %1660 = reshape(%1659, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), bool] */;
  %1661 = @func_32(%1660) /* ty=(Tensor[(12, 15, 3), bool],) */;
  %1662 = logical_and(%1655, %1656) /* ty=Tensor[(7, 6, 14), bool] */;
  %1663 = %1657.4;
  %1664 = %1658.0;
  %1665 = %1661.0;
  (%1662, %1663, %1664, %1665, meta[relay.Constant][48] /* ty=Tensor[(540), bool] */)
}

def @func_9451() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1666 = @func_7674() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1667 = @func_6353() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1668 = %1666.0;
  %1669 = %1667.4;
  (%1668, %1669)
}

def @func_11974() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1670 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1671 = @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1672 = %1670.0;
  %1673 = %1671.0;
  (%1672, %1673)
}

def @func_531() -> (Tensor[(7, 2, 5), float32],) {
  %1674 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1674,)
}

def @func_4440() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1675 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1676 = @func_1166() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1677 = %1675.0;
  %1678 = %1676.0;
  (%1677, %1678)
}

def @func_16229() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1679 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1680 = @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1681 = %1679.0;
  %1682 = %1680.1;
  (%1681, %1682)
}

def @func_861() -> (Tensor[(7, 2, 5), float32],) {
  %1683 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1684 = %1683.1;
  (%1684,)
}

def @func_1861() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) {
  %1685 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1686 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1687 = @func_739() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1688 = %1685.0;
  %1689 = %1686.0;
  %1690 = %1687.2;
  (%1688, %1689, %1690)
}

def @func_12124() -> (Tensor[(7, 2, 5), float32],) {
  %1691 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1692 = %1691.0;
  (%1692,)
}

def @func_12042() -> (Tensor[(7, 2, 5), float32],) {
  %1693 = @func_9805() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float64]) */;
  %1694 = %1693.0;
  (%1694,)
}

def @func_207() -> Tensor[(7, 2, 5), float32] {
  %1695 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1695.0
}

def @func_18847() -> Tensor[(7, 2, 5), float32] {
  %1696 = @func_6699() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1696.0
}

def @func_14779() -> (Tensor[(7, 2, 5), float32],) {
  %1697 = @func_10684() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1697,)
}

def @func_7674() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1698 = @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */;
  %1699 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1700 = %1698.0;
  %1701 = %1699.0;
  %1702 = @func_7226() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1700, %1701, %1702)
}

def @func_525(%var_512: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %1703 = cast(%var_512, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1704 = reshape(%1703, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %1705 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %1706 = @func_476(%1704) /* ty=Tensor[(11, 7, 2), float64] */;
  (%1705, %1706, %var_512)
}

def @func_9139() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1707 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1708 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1709 = @func_2912() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1710 = @func_3172() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1711 = @func_956() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1712 = @func_8592() /* ty=Tensor[(7, 2, 5), float32] */;
  %1713 = %1707.0;
  %1714 = %1708.0;
  %1715 = %1709.0;
  %1716 = %1710.0;
  %1717 = %1711.0;
  (%1712, %1713, %1714, %1715, %1716, %1717)
}

def @func_2187() -> (Tensor[(7, 2, 5), float32],) {
  %1718 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1719 = %1718.0;
  (%1719,)
}

def @func_6820(%var_6807: Tensor[(108), float32]) -> (Tensor[(108), int64],) {
  %1720 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1721 = %1720.0;
  %1722 = cast(%var_6807, dtype="int64") /* ty=Tensor[(108), int64] */;
  %1723 = shape_of(%1721, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1724 = cast(%1721, dtype="int64") /* ty=Tensor[(108), int64] */;
  %1725 = dyn.reshape(%1722, %1723, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1726 = minimum(%1724, %1725) /* ty=Tensor[(108), int64] */;
  (%1726,)
}

def @func_18127(%var_18122: Tensor[(11, 14), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 14), float64]) {
  %1727 = cast(meta[relay.Constant][49] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1728 = cast(%var_18122, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %1729 = reshape(%1727, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1730 = reshape(%1728, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %1731 = @func_2600(%1729, %1730) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool]) */;
  %1732 = @func_14284() /* ty=Tensor[(7, 2, 5), float32] */;
  %1733 = %1731.5;
  (%1732, %1733, meta[relay.Constant][49] /* ty=Tensor[(108), float32] */, %var_18122)
}

def @func_17043(%var_17041: Tensor[(1001), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1001), float32]) {
  %1734 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1735 = cast(%var_17041, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %1736 = reshape(%1735, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
  %1737 = @func_16318(%1736) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), bool]) */;
  %1738 = %1734.0;
  %1739 = %1737.1;
  (%1738, %1739, %var_17041)
}

def @func_10565() -> Tensor[(7, 2, 5), float32] {
  %1740 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1740.1
}

def @func_8776() -> Tensor[(7, 2, 5), float32] {
  @func_4897() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_3172() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1741 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1742 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1743 = %1741.0;
  %1744 = %1742.0;
  (%1743, %1744)
}

def @func_18572() -> (Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool]) {
  %1745 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
  %1746 = @func_1886() /* ty=Tensor[(7, 2, 5), float32] */;
  %1747 = %1745.0;
  (%1746, %1747)
}

def @func_16167(%var_16119: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(286), float64], Tensor[(440), int32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  %1748 = cast(meta[relay.Constant][50] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %1749 = reshape(%1748, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), float64] */;
  %1750 = @func_14038(%1749) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1751 = @func_11267() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(44), int32], Tensor[(440), int32]) */;
  %1752 = cast(%var_16119, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1753 = reshape(%1752, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1754 = @func_625(%1753) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1755 = @func_9204() /* ty=Tensor[(7, 2, 5), float32] */;
  %1756 = %1750.2;
  %1757 = %1751.4;
  %1758 = %1754.4;
  %1759 = @func_8592() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1755, %1756, meta[relay.Constant][50] /* ty=Tensor[(286), float64] */, %1757, %1758, %var_16119, %1759)
}

def @func_16866() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1760 = @func_7506() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64]) */;
  %1761 = @func_4766() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1762 = %1760.0;
  %1763 = %1761.0;
  (%1762, %1763)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_22691() -> Tensor[(7, 2, 5), float32] {
  @func_22689() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_22065() -> (Tensor[(7, 2, 5), float32],) {
  @func_22063() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_1115() -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %5 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
    %0 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
    %2 = reshape(%1, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
    %3 = %0.0;
    %4 = @func_476(%2) /* ty=Tensor[(11, 7, 2), float64] */;
    (%3, %4, meta[relay.Constant][0] /* ty=Tensor[(154), float64] */)
  };
  %5() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */
}

def @func_10567() -> Tensor[(7, 2, 5), float32] {
  @func_10565() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_9452() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %10 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %6 = @func_7674() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %7 = @func_6353() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %8 = %6.0;
    %9 = %7.4;
    (%8, %9)
  };
  %10() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_11682(%var_11680: Tensor[(15, 9, 8), int32], %var_11681: Tensor[(15, 9, 8), int32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(15, 9, 8), float64]) {
  @func_11678(%var_11680, %var_11681) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(15, 9, 8), float64]) */
}

def @func_2779(%var_2778: Tensor[(7, 6, 14), bool]) -> (Tensor[(7, 6, 14), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
  %24 = fn (%var_2732: Tensor[(7, 6, 14), bool]) -> (Tensor[(7, 6, 14), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
    %11 = cast(%var_2732, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
    %12 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(7, 6, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 6, 14), bool] */, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
    %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %15 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %16 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %17 = cast(meta[relay.Constant][2] /* ty=Tensor[(540), bool] */, dtype="bool") /* ty=Tensor[(540), bool] */;
    %18 = reshape(%17, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), bool] */;
    %19 = @func_32(%18) /* ty=(Tensor[(12, 15, 3), bool],) */;
    %20 = logical_and(%13, %14) /* ty=Tensor[(7, 6, 14), bool] */;
    %21 = %15.4;
    %22 = %16.0;
    %23 = %19.0;
    (%20, %21, %22, %23, meta[relay.Constant][2] /* ty=Tensor[(540), bool] */)
  };
  %24(%var_2778) /* ty=(Tensor[(7, 6, 14), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */
}

def @func_11233() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) {
  @func_11231() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */
}

def @func_3965() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %31 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %25 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %26 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %27 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
    %28 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
    %29 = %25.0;
    %30 = %26.0;
    (%27, %28, %29, %30)
  };
  %31() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_20873() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64]) {
  %37 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64]) {
    %32 = @func_14097() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %33 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %34 = %32.0;
    %35 = %33.1;
    %36 = @func_12493() /* ty=Tensor[(154), float64] */;
    (%34, %35, %36)
  };
  %37() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64]) */
}

def @func_4897() -> Tensor[(7, 2, 5), float32] {
  @func_1485() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_6786() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %38 = @func_6015() /* ty=Tensor[(7, 2, 5), float32] */;
  %39 = @func_2227() /* ty=Tensor[(108), float32] */;
  (%38, %39)
}

def @func_476(%var_471: Tensor[(11, 7, 2), float64]) -> Tensor[(11, 7, 2), float64] {
  %40 = cast(%var_471, dtype="float64") /* ty=Tensor[(11, 7, 2), float64] */;
  atan(%40) /* ty=Tensor[(11, 7, 2), float64] */
}

def @func_2335(%var_2333: Tensor[(11, 1, 4), int32], %var_2334: Tensor[(11, 10, 4), int32]) -> (Tensor[(11, 10, 4), int32], Tensor[(7, 2, 5), float32]) {
  %46 = fn (%var_2313: Tensor[(11, 1, 4), int32], %var_2314: Tensor[(11, 10, 4), int32]) -> (Tensor[(11, 10, 4), int32], Tensor[(7, 2, 5), float32]) {
    %41 = cast(%var_2313, dtype="int32") /* ty=Tensor[(11, 1, 4), int32] */;
    %42 = cast(%var_2314, dtype="int32") /* ty=Tensor[(11, 10, 4), int32] */;
    %43 = @func_2066() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %44 = subtract(%41, %42) /* ty=Tensor[(11, 10, 4), int32] */;
    %45 = %43.0;
    (%44, %45)
  };
  %46(%var_2333, %var_2334) /* ty=(Tensor[(11, 10, 4), int32], Tensor[(7, 2, 5), float32]) */
}

def @func_6747() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %51 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %47 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %48 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %49 = %47.0;
    %50 = %48.0;
    (%49, %50)
  };
  %51() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_23241() -> (Tensor[(65, 6), bool], Tensor[(108), float32], Tensor[(108), float32]) {
  %52 = @func_18731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) */;
  %53 = @func_13307() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
  %54 = %52.2;
  %55 = %53.0;
  %56 = @func_15090() /* ty=Tensor[(108), float32] */;
  (%54, %55, %56)
}

def @func_13935(%var_13934: Tensor[(3, 3, 13), float64]) -> Tensor[(3, 3, 13), float64] {
  %58 = fn (%var_13917: Tensor[(3, 3, 13), float64]) -> Tensor[(3, 3, 13), float64] {
    %57 = cast(%var_13917, dtype="float64") /* ty=Tensor[(3, 3, 13), float64] */;
    asin(%57) /* ty=Tensor[(3, 3, 13), float64] */
  };
  %58(%var_13934) /* ty=Tensor[(3, 3, 13), float64] */
}

def @func_9912() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_9910() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_17012(%var_16998: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(6, 18), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %59 = @func_3172() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %60 = cast(%var_16998, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %61 = reshape(%60, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %62 = @func_4836(%61) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) */;
  %63 = %59.1;
  %64 = %62.1;
  %65 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
  %66 = @func_6373() /* ty=Tensor[(7, 2, 5), float32] */;
  (%63, %64, %var_16998, %65, %66)
}

def @func_6788() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  @func_6786() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */
}

def @func_4674() -> (Tensor[(108), float32], Tensor[(12, 15, 3), float64]) {
  @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */
}

def @func_1886() -> Tensor[(7, 2, 5), float32] {
  @func_423() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_10001() -> Tensor[(7, 2, 5), float32] {
  %68 = fn () -> Tensor[(7, 2, 5), float32] {
    %67 = @func_5600() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %67.1
  };
  %68() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_15602() -> (Tensor[(7, 2, 5), float32],) {
  @func_15600() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_1081() -> Tensor[(7, 2, 5), float32] {
  @func_1079() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_9014() -> Tensor[(11, 7, 2), float64] {
  @func_9012() /* ty=Tensor[(11, 7, 2), float64] */
}

def @func_14781() -> (Tensor[(7, 2, 5), float32],) {
  @func_14779() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_1328() -> (Tensor[(540, 1), bool],) {
  @func_1326() /* ty=(Tensor[(540, 1), bool],) */
}

def @func_3786(%var_3778: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) {
  %69 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %70 = @func_3681() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %71 = cast(%var_3778, dtype="bool") /* ty=Tensor[(36), bool] */;
  %72 = reshape(%71, newshape=[36]) /* ty=Tensor[(36), bool] */;
  %73 = @func_3564(%72) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) */;
  %74 = %69.0;
  %75 = %70.0;
  %76 = %73.3;
  (%74, %75, %76, %var_3778)
}

def @func_4997() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %77 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  %78 = @func_4897() /* ty=Tensor[(7, 2, 5), float32] */;
  (%77, %78)
}

def @func_4942() -> Tensor[(7, 2, 5), float32] {
  @func_4940() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_3789(%var_3787: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) {
  @func_3786(%var_3787) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) */
}

def @func_22737() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(65, 6), bool]) {
  %79 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %80 = @func_9038() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %81 = @func_18731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) */;
  %82 = @func_15154() /* ty=Tensor[(7, 2, 5), float32] */;
  %83 = %79.0;
  %84 = %80.1;
  %85 = @func_7211() /* ty=Tensor[(7, 2, 5), float32] */;
  %86 = %81.2;
  (%82, %83, %84, %85, %86)
}

def @func_5905() -> (Tensor[(7, 2, 5), float32],) {
  %87 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
  (%87,)
}

def @func_9805() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float64]) {
  %88 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %89 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
  %90 = %89.0;
  %91 = cast(%90, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %92 = cos(%91) /* ty=Tensor[(540, 1), float32] */;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
  %94 = %88.0;
  %95 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %96 = sqrt(%93) /* ty=Tensor[(540, 1), float64] */;
  (%94, %95, %96)
}

def @func_2600(%var_2564: Tensor[(108), float32], %var_2584: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool]) {
  %97 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %98 = cast(%var_2564, dtype="float32") /* ty=Tensor[(108), float32] */;
  %99 = reshape(%98, newshape=[12, 1, 9]) /* ty=Tensor[(12, 1, 9), float32] */;
  %100 = @func_568(%99) /* ty=(Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %101 = @func_887() /* ty=(Tensor[(540), bool],) */;
  %102 = cast(%var_2564, dtype="float32") /* ty=Tensor[(108), float32] */;
  %103 = reshape(%102, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %104 = @func_625(%103) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %105 = cast(%var_2584, dtype="float64") /* ty=Tensor[(154), float64] */;
  %106 = reshape(%105, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %107 = @func_525(%106) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %108 = %107.1;
  %109 = cast(%var_2584, dtype="bool") /* ty=Tensor[(154), bool] */;
  %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%108, dtype="bool") /* ty=Tensor[(11, 7, 2), bool] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %113 = %97.1;
  %114 = %100.2;
  %115 = %101.0;
  %116 = %104.4;
  %117 = @func_1886() /* ty=Tensor[(7, 2, 5), float32] */;
  %118 = less_equal(%111, %112) /* ty=Tensor[(11, 7, 2), bool] */;
  (%113, %114, %var_2564, %115, %116, %117, %118)
}

def @func_8709(%var_8708: uint8) -> (Tensor[(8, 1, 15), bool],) {
  %122 = fn (%var_8678: uint8) -> (Tensor[(8, 1, 15), bool],) {
    %119 = cast(%var_8678, dtype="bool") /* ty=bool */;
    %120 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 1, 15), uint8] */, dtype="bool") /* ty=Tensor[(8, 1, 15), bool] */;
    %121 = greater_equal(%119, %120) /* ty=Tensor[(8, 1, 15), bool] */;
    (%121,)
  };
  %122(%var_8708) /* ty=(Tensor[(8, 1, 15), bool],) */
}

def @func_8212() -> (Tensor[(7, 2, 5), float32],) {
  %123 = @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %124 = %123.1;
  (%124,)
}

def @func_21796() -> (Tensor[(5, 6, 13), bool], Tensor[(7, 2, 5), float32]) {
  %125 = @func_18731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) */;
  %126 = %125.1;
  %127 = @func_15983() /* ty=Tensor[(7, 2, 5), float32] */;
  (%126, %127)
}

def @func_21544(%var_21543: Tensor[(1080), float32]) -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 2), uint16], Tensor[(1080), float32]) {
  %138 = fn (%var_21532: Tensor[(1080), float32]) -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 2), uint16], Tensor[(1080), float32]) {
    %128 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
    %129 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %130 = cast(%var_21532, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %131 = cast(%var_21532, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %132 = reshape(%130, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
    %133 = reshape(%131, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
    %134 = @func_13832(%132, %133) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) */;
    %135 = %128.0;
    %136 = %129.1;
    %137 = %134.1;
    (%135, %136, %137, %var_21532)
  };
  %138(%var_21543) /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 2), uint16], Tensor[(1080), float32]) */
}

def @func_15871(%var_15869: Tensor[(6, 13, 8), float64], %var_15870: Tensor[(154), float64]) -> (Tensor[(6, 13, 8), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32]) {
  %145 = fn (%var_15834: Tensor[(6, 13, 8), float64], %var_15839: Tensor[(154), float64]) -> (Tensor[(6, 13, 8), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32]) {
    %139 = cast(%var_15834, dtype="float64") /* ty=Tensor[(6, 13, 8), float64] */;
    %140 = cast(%var_15839, dtype="float64") /* ty=Tensor[(154), float64] */;
    %141 = reshape(%140, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
    %142 = asinh(%139) /* ty=Tensor[(6, 13, 8), float64] */;
    %143 = @func_476(%141) /* ty=Tensor[(11, 7, 2), float64] */;
    %144 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
    (%142, %143, %var_15839, %144)
  };
  %145(%var_15869, %var_15870) /* ty=(Tensor[(6, 13, 8), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */
}

def @func_2124() -> (Tensor[(7, 2, 5), float32],) {
  %148 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %146 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %147 = %146.1;
    (%147,)
  };
  %148() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_533() -> (Tensor[(7, 2, 5), float32],) {
  @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_13785() -> (Tensor[(7, 2, 5), float32],) {
  %149 = @func_974() /* ty=Tensor[(7, 2, 5), float32] */;
  (%149,)
}

def @func_4363() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_14779() -> (Tensor[(7, 2, 5), float32],) {
  %150 = @func_10684() /* ty=Tensor[(7, 2, 5), float32] */;
  (%150,)
}

def @func_2728() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %151 = @func_2644() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) */;
  %152 = @func_1861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) */;
  %153 = %151.0;
  %154 = %152.1;
  (%153, %154)
}

def @func_18543(%var_18531: Tensor[(540, 3), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, 3), float64]) {
  %155 = @func_9967() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %156 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %157 = %156.0;
  %158 = cast(%157, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
  %159 = cast(%var_18531, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %160 = %155.0;
  %161 = floor_divide(%158, %159) /* ty=Tensor[(540, 3), float64] */;
  (%160, %161)
}

def @func_21508(%var_21507: Tensor[(540, 2), uint16]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(90, 12), float32], Tensor[(540, 2), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 2), float64], Tensor[(540, 2), float64]) {
  %195 = fn (%var_21416: Tensor[(540, 2), uint16]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(90, 12), float32], Tensor[(540, 2), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 2), float64], Tensor[(540, 2), float64]) {
    %162 = @func_11742() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %163 = @func_3964() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %164 = @func_13031() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) */;
    %165 = cast(meta[relay.Constant][4] /* ty=Tensor[(90, 12), float32] */, dtype="float32") /* ty=Tensor[(90, 12), float32] */;
    %166 = cast(meta[relay.Constant][4] /* ty=Tensor[(90, 12), float32] */, dtype="float32") /* ty=Tensor[(90, 12), float32] */;
    %167 = reshape(%165, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
    %168 = reshape(%166, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
    %169 = @func_13832(%167, %168) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) */;
    %170 = %169.1;
    %171 = cast(%var_21416, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
    %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(2), int32] */;
    %173 = cast(%170, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
    %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %175 = @func_19018() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %176 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %177 = cast(%var_21416, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
    %178 = cos(%177) /* ty=Tensor[(540, 2), float32] */;
    %179 = cast(%170, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
    %180 = shape_of(%178, dtype="int32") /* ty=Tensor[(2), int32] */;
    %181 = cast(%178, dtype="float32") /* ty=Tensor[(540, 2), float32] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %183 = floor_mod(%181, %182) /* ty=Tensor[(540, 2), float32] */;
    %184 = cast(%183, dtype="float64") /* ty=Tensor[(540, 2), float64] */;
    %185 = cast(%178, dtype="float64") /* ty=Tensor[(540, 2), float64] */;
    %186 = %162.1;
    %187 = %163.0;
    %188 = %164.0;
    %189 = equal(%173, %174) /* ty=Tensor[(540, 2), bool] */;
    %190 = %175.1;
    %191 = @func_12271() /* ty=Tensor[(7, 2, 5), float32] */;
    %192 = %176.2;
    %193 = acosh(%184) /* ty=Tensor[(540, 2), float64] */;
    %194 = sigmoid(%185) /* ty=Tensor[(540, 2), float64] */;
    (%186, %187, %188, meta[relay.Constant][4] /* ty=Tensor[(90, 12), float32] */, %189, %190, %191, %192, %193, %194)
  };
  %195(%var_21507) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(90, 12), float32], Tensor[(540, 2), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 2), float64], Tensor[(540, 2), float64]) */
}

def @func_15010() -> (Tensor[(7, 2, 5), float32],) {
  %196 = @func_974() /* ty=Tensor[(7, 2, 5), float32] */;
  (%196,)
}

def @func_19912() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %203 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %197 = @func_14097() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %198 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %199 = @func_18780() /* ty=Tensor[(7, 2, 5), float32] */;
    %200 = %197.0;
    %201 = %198.0;
    %202 = @func_16705() /* ty=Tensor[(7, 2, 5), float32] */;
    (%199, %200, %201, %202)
  };
  %203() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_13762() -> (Tensor[(7, 2, 5), float32],) {
  @func_13760() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_4274() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %208 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %204 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %205 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %206 = %204.0;
    %207 = %205.0;
    (%206, %207)
  };
  %208() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_17512() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(108), float32]) {
  %216 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(108), float32]) {
    %209 = @func_12668() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %210 = cast(meta[relay.Constant][5] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %211 = reshape(%210, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %212 = @func_17350(%211) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) */;
    %213 = @func_12271() /* ty=Tensor[(7, 2, 5), float32] */;
    %214 = %209.4;
    %215 = %212.2;
    (%213, %214, %215, meta[relay.Constant][5] /* ty=Tensor[(108), float32] */)
  };
  %216() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(108), float32]) */
}

def @func_7592() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) {
  %224 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) {
    %217 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %218 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %219 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %220 = %217.1;
    %221 = %218.0;
    %222 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
    %223 = %219.0;
    (%220, %221, %222, %223)
  };
  %224() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */
}

def @func_16107() -> Tensor[(7, 2, 5), float32] {
  %225 = fn () -> Tensor[(7, 2, 5), float32] {
    @func_708() /* ty=Tensor[(7, 2, 5), float32] */
  };
  %225() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_18011(%var_18009: Tensor[(4, 3, 4), bool]) -> (Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) {
  @func_18008(%var_18009) /* ty=(Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) */
}

def @func_8315() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(108), float32], Tensor[(12, 15, 3), float64]) {
  @func_8313() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */
}

def @func_13521() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %233 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %226 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %227 = @func_5659() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %228 = @func_9159() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %229 = @func_10000() /* ty=Tensor[(7, 2, 5), float32] */;
    %230 = %226.0;
    %231 = %227.0;
    %232 = %228.1;
    (%229, %230, %231, %232)
  };
  %233() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_16170(%var_16168: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(286), float64], Tensor[(440), int32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  @func_16167(%var_16168) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(286), float64], Tensor[(440), int32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_12830() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool]) {
  %234 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %235 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %236 = %235.1;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(12, 15, 3), float64] */;
  %238 = @func_11886() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %239 = @func_6031() /* ty=(Tensor[(540, 1), bool],) */;
  %240 = %234.0;
  %241 = exp(%237) /* ty=Tensor[(12, 15, 3), float64] */;
  %242 = %238.0;
  %243 = %239.0;
  (%240, %241, %242, %243)
}

def @func_11743() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %254 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %244 = @func_4766() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %245 = @func_9649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %246 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %247 = @func_10788() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %248 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %249 = %244.0;
    %250 = %245.0;
    %251 = %246.1;
    %252 = %247.0;
    %253 = %248.1;
    (%249, %250, %251, %252, %253)
  };
  %254() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_8926(%var_8845: Tensor[(15, 1, 11), float32], %var_8846: Tensor[(15, 4, 11), float32]) -> (Tensor[(15, 4, 11), float32], Tensor[(8, 1, 15), bool], uint8, Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %255 = cast(%var_8845, dtype="float32") /* ty=Tensor[(15, 1, 11), float32] */;
  %256 = cast(%var_8846, dtype="float32") /* ty=Tensor[(15, 4, 11), float32] */;
  %257 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %258 = reshape(%257, newshape=[]) /* ty=uint8 */;
  %259 = @func_8707(%258) /* ty=(Tensor[(8, 1, 15), bool],) */;
  %260 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %261 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %262 = subtract(%255, %256) /* ty=Tensor[(15, 4, 11), float32] */;
  %263 = %259.0;
  %264 = %260.0;
  %265 = @func_2962() /* ty=Tensor[(7, 2, 5), float32] */;
  %266 = %261.0;
  (%262, %263, meta[relay.Constant][6] /* ty=uint8 */, %264, %265, %266)
}

def @func_23017() -> (Tensor[(108), float32],) {
  %267 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %268 = %267.0;
  (%268,)
}

def @func_22313() -> (Tensor[(7, 2, 5), float32],) {
  @func_22311() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_22739() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(65, 6), bool]) {
  @func_22737() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(65, 6), bool]) */
}

def @func_12909(%var_12896: Tensor[(1620), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 3), bool], Tensor[(1620), bool], Tensor[(7, 2, 5), float32]) {
  %269 = @func_9038() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %270 = @func_11886() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %271 = cast(%var_12896, dtype="bool") /* ty=Tensor[(1620), bool] */;
  %272 = reshape(%271, newshape=[540, 3]) /* ty=Tensor[(540, 3), bool] */;
  %273 = @func_7290(%272) /* ty=(Tensor[(540, 3), bool], Tensor[(540, 3), uint64]) */;
  %274 = @func_8483() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %275 = %269.0;
  %276 = %270.0;
  %277 = %273.0;
  %278 = %274.1;
  (%275, %276, %277, %var_12896, %278)
}

def @func_5719() -> (Tensor[(7, 2, 5), float32],) {
  %279 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%279,)
}

def @func_20648() -> (Tensor[(7, 2, 5), float32],) {
  @func_20646() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_22113() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %280 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %281 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %282 = %280.0;
  %283 = %281.1;
  (%282, %283)
}

def @func_1662() -> (Tensor[(7, 2, 5), float32],) {
  @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_5741() -> (Tensor[(540, 1), float32],) {
  %287 = fn () -> (Tensor[(540, 1), float32],) {
    %284 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
    %285 = cast(%284, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
    %286 = sin(%285) /* ty=Tensor[(540, 1), float32] */;
    (%286,)
  };
  %287() /* ty=(Tensor[(540, 1), float32],) */
}

def @func_17693() -> (Tensor[(7, 2, 5), float32],) {
  %288 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
  (%288,)
}

def @func_16229() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %289 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %290 = @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %291 = %289.0;
  %292 = %290.1;
  (%291, %292)
}

def @func_15985() -> Tensor[(7, 2, 5), float32] {
  @func_15983() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_7867() -> (Tensor[(7, 2, 5), float32],) {
  %293 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  (%293,)
}

def @func_18782() -> Tensor[(7, 2, 5), float32] {
  @func_18780() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_16627() -> (Tensor[(4, 3, 4), bool],) {
  %296 = fn () -> (Tensor[(4, 3, 4), bool],) {
    %294 = @func_14797() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) */;
    %295 = %294.2;
    (%295,)
  };
  %296() /* ty=(Tensor[(4, 3, 4), bool],) */
}

def @func_12044() -> (Tensor[(7, 2, 5), float32],) {
  @func_12042() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_17356() -> Tensor[(7, 2, 5), float32] {
  %297 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %297.0
}

def @func_18214(%var_18212: Tensor[(108), float32], %var_18213: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(1, 154), float64], Tensor[(108), int32], Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32]) {
  %316 = fn (%var_18188: Tensor[(108), float32], %var_18191: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(1, 154), float64], Tensor[(108), int32], Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32]) {
    %298 = @func_17518() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %299 = @func_3964() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %300 = cast(%var_18188, dtype="float32") /* ty=Tensor[(108), float32] */;
    %301 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 154), float64] */, dtype="float64") /* ty=Tensor[(1, 154), float64] */;
    %302 = reshape(%300, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %303 = reshape(%301, newshape=[154]) /* ty=Tensor[(154), float64] */;
    %304 = @func_2600(%302, %303) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool]) */;
    %305 = cast(%var_18191, dtype="int32") /* ty=Tensor[(108), int32] */;
    %306 = shape_of(%var_18188, dtype="int32") /* ty=Tensor[(1), int32] */;
    %307 = cast(%var_18188, dtype="int32") /* ty=Tensor[(108), int32] */;
    %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?), int32] */;
    %309 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %310 = %298.0;
    %311 = %299.2;
    %312 = %304.3;
    %313 = bitwise_and(%307, %308) /* ty=Tensor[(108), int32] */;
    %314 = @func_13320() /* ty=Tensor[(540, 1), float32] */;
    %315 = %309.0;
    (%310, %311, %312, meta[relay.Constant][7] /* ty=Tensor[(1, 154), float64] */, %313, %314, %315)
  };
  %316(%var_18212, %var_18213) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(1, 154), float64], Tensor[(108), int32], Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_739() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
  %317 = cast(meta[relay.Constant][8] /* ty=Tensor[(540), bool] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %318 = reshape(%317, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), bool] */;
  %319 = @func_32(%318) /* ty=(Tensor[(12, 15, 3), bool],) */;
  %320 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
  %321 = %319.0;
  (%320, %321, meta[relay.Constant][8] /* ty=Tensor[(540), bool] */)
}

def @func_6354() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %331 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %322 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %323 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %324 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %325 = @func_5548() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %326 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
    %327 = %322.0;
    %328 = %323.1;
    %329 = %324.1;
    %330 = %325.1;
    (%326, %327, %328, %329, %330)
  };
  %331() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_12385() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %332 = @func_6163() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %333 = @func_12085() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %334 = %332.0;
  %335 = %333.0;
  (%334, %335)
}

def @func_806() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  %342 = fn () -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
    %336 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %337 = %336.2;
    %338 = cast(%337, dtype="float32") /* ty=Tensor[(108), float32] */;
    %339 = reshape(%338, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %340 = @func_625(%339) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
    %341 = %340.0;
    (%337, %341)
  };
  %342() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_10037() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %349 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %343 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %344 = @func_1166() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %345 = @func_2728() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %346 = %343.0;
    %347 = %344.1;
    %348 = %345.0;
    (%346, %347, %348)
  };
  %349() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_1275() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_20536(%var_20535: Tensor[(14, 13, 12), uint8]) -> (Tensor[(14, 13, 12), bool], Tensor[(7, 2, 5), float32]) {
  %355 = fn (%var_20521: Tensor[(14, 13, 12), uint8]) -> (Tensor[(14, 13, 12), bool], Tensor[(7, 2, 5), float32]) {
    %350 = cast(meta[relay.Constant][9] /* ty=uint8 */, dtype="bool") /* ty=bool */;
    %351 = cast(%var_20521, dtype="bool") /* ty=Tensor[(14, 13, 12), bool] */;
    %352 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %353 = less(%350, %351) /* ty=Tensor[(14, 13, 12), bool] */;
    %354 = %352.1;
    (%353, %354)
  };
  %355(%var_20535) /* ty=(Tensor[(14, 13, 12), bool], Tensor[(7, 2, 5), float32]) */
}

def @func_11417() -> (Tensor[(7, 2, 5), float32],) {
  %356 = @func_5996() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %357 = %356.0;
  (%357,)
}

def @func_18258() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(1080), int32], Tensor[(7, 2, 5), float32]) {
  @func_18256() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(1080), int32], Tensor[(7, 2, 5), float32]) */
}

def @func_23425() -> Tensor[(7, 2, 5), float32] {
  @func_23423() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_17443() -> (Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_17441() /* ty=(Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_20208(%var_20202: Tensor[(6, 4, 7), float32]) -> (Tensor[(6, 4, 7), float32], Tensor[(154), float64]) {
  %358 = cast(%var_20202, dtype="float32") /* ty=Tensor[(6, 4, 7), float32] */;
  %359 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %360 = rsqrt(%358) /* ty=Tensor[(6, 4, 7), float32] */;
  %361 = %359.2;
  (%360, %361)
}

def @func_13425() -> (Tensor[(4, 3, 4), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %362 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 3, 4), uint64] */, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %363 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(4, 3, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 3, 4), uint64] */, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %366 = @func_1731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %367 = greater(%364, %365) /* ty=Tensor[(4, 3, 4), bool] */;
  %368 = %366.1;
  %369 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %370 = @func_8776() /* ty=Tensor[(7, 2, 5), float32] */;
  (%367, %368, %369, %370)
}

def @func_2645() -> (Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) {
  %379 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) {
    %371 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %372 = reshape(%371, newshape=[]) /* ty=bool */;
    %373 = @func_1973(%372) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(1, 36), bool], Tensor[(7, 2, 5), float32]) */;
    %374 = %373.3;
    %375 = cast(%374, dtype="bool") /* ty=Tensor[(1, 36), bool] */;
    %376 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %377 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
    %378 = less_equal(%375, %376) /* ty=Tensor[(1, 36), bool] */;
    (%377, %378)
  };
  %379() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) */
}

def @func_1344() -> Tensor[(7, 2, 5), float32] {
  %381 = fn () -> Tensor[(7, 2, 5), float32] {
    %380 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %380.0
  };
  %381() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_1326() -> (Tensor[(540, 1), bool],) {
  %382 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %383 = %382.2;
  (%383,)
}

def @func_2189() -> (Tensor[(7, 2, 5), float32],) {
  @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_2963() -> Tensor[(7, 2, 5), float32] {
  %384 = fn () -> Tensor[(7, 2, 5), float32] {
    @func_974() /* ty=Tensor[(7, 2, 5), float32] */
  };
  %384() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_22961(%var_22960: Tensor[(4, 12, 16), float32]) -> (Tensor[(4, 12, 16), float32], Tensor[(7, 2, 5), float32]) {
  %389 = fn (%var_22943: Tensor[(4, 12, 16), float32]) -> (Tensor[(4, 12, 16), float32], Tensor[(7, 2, 5), float32]) {
    %385 = cast(%var_22943, dtype="float32") /* ty=Tensor[(4, 12, 16), float32] */;
    %386 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %387 = log2(%385) /* ty=Tensor[(4, 12, 16), float32] */;
    %388 = %386.1;
    (%387, %388)
  };
  %389(%var_22960) /* ty=(Tensor[(4, 12, 16), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_5387() -> Tensor[(7, 2, 5), float32] {
  @func_2449() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_8535() -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), uint32], Tensor[(1001, 1), float32]) {
  %395 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), uint32], Tensor[(1001, 1), float32]) {
    %390 = @func_3152() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %391 = cast(meta[relay.Constant][12] /* ty=Tensor[(1001, 1), float32] */, dtype="float32") /* ty=Tensor[(1001, 1), float32] */;
    %392 = reshape(%391, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
    %393 = %390.1;
    %394 = @func_7046(%392) /* ty=Tensor[(11, 7, 13), uint32] */;
    (%393, %394, meta[relay.Constant][12] /* ty=Tensor[(1001, 1), float32] */)
  };
  %395() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), uint32], Tensor[(1001, 1), float32]) */
}

def @func_8022() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %399 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
    %396 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %397 = %396.0;
    %398 = @func_6480() /* ty=Tensor[(108), float32] */;
    (%397, %398)
  };
  %399() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */
}

def @func_3980() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %400 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %401 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %402 = %400.0;
  %403 = %401.0;
  (%402, %403)
}

def @func_11035() -> (Tensor[(11, 7, 2), float64],) {
  %404 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %405 = %404.0;
  (%405,)
}

def @func_7071() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
  @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */
}

def @func_3092(%var_3090: Tensor[(3, 2, 4), float32], %var_3091: Tensor[(154), float64]) -> (Tensor[(3, 2, 4), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) {
  %414 = fn (%var_3059: Tensor[(3, 2, 4), float32], %var_3079: Tensor[(154), float64]) -> (Tensor[(3, 2, 4), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) {
    %406 = cast(%var_3059, dtype="float32") /* ty=Tensor[(3, 2, 4), float32] */;
    %407 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %408 = cast(%var_3079, dtype="float64") /* ty=Tensor[(154), float64] */;
    %409 = reshape(%408, newshape=[154]) /* ty=Tensor[(154), float64] */;
    %410 = @func_525(%409) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
    %411 = cos(%406) /* ty=Tensor[(3, 2, 4), float32] */;
    %412 = %407.0;
    %413 = %410.2;
    (%411, %412, %413, %var_3079)
  };
  %414(%var_3090, %var_3091) /* ty=(Tensor[(3, 2, 4), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) */
}

def @func_8358() -> Tensor[(7, 2, 5), float32] {
  %415 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %415.0
}

def @func_14861() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %416 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %417 = %416.0;
  %418 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  (%417, %418)
}

def @func_22689() -> Tensor[(7, 2, 5), float32] {
  %419 = @func_18475() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %419.0
}

def @func_9141() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_9139() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_5907() -> (Tensor[(7, 2, 5), float32],) {
  @func_5905() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_5602() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_5600() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_15298() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  @func_15296() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_16397() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(24), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %433 = fn () -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(24), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %420 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
    %421 = @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %422 = %420.1;
    %423 = cast(%422, dtype="float64") /* ty=Tensor[(11, 7, 2), float64] */;
    %424 = cast(meta[relay.Constant][13] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %425 = reshape(%423, newshape=[154]) /* ty=Tensor[(154), float64] */;
    %426 = reshape(%424, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %427 = @func_4868(%425, %426) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(24), float32]) */;
    %428 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %429 = %421.0;
    %430 = %427.3;
    %431 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
    %432 = %428.0;
    (%422, %429, %430, meta[relay.Constant][13] /* ty=Tensor[(24), float32] */, %431, %432)
  };
  %433() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(24), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_18391() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), int32], Tensor[(540), bool]) {
  @func_18389() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), int32], Tensor[(540), bool]) */
}

def @func_12387() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_12385() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_2310() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %434 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %435 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %436 = %434.0;
  %437 = %435.0;
  (%436, %437)
}

def @func_10752() -> (Tensor[(7, 2, 5), float32],) {
  %438 = @func_8483() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %439 = %438.1;
  (%439,)
}

def @func_19730() -> Tensor[(7, 2, 5), float32] {
  %441 = fn () -> Tensor[(7, 2, 5), float32] {
    %440 = @func_13031() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) */;
    %440.0
  };
  %441() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_23019() -> (Tensor[(108), float32],) {
  @func_23017() /* ty=(Tensor[(108), float32],) */
}

def @func_19987(%var_19985: Tensor[(588), bool]) -> (Tensor[(540, 1), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(588), bool]) {
  @func_19984(%var_19985) /* ty=(Tensor[(540, 1), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(588), bool]) */
}

def @func_1485() -> Tensor[(7, 2, 5), float32] {
  @func_1079() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_18824() -> Tensor[(7, 2, 5), float32] {
  @func_18822() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_14863() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_14861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_17352(%var_17351: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) {
  %447 = fn (%var_17342: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) {
    %442 = cast(%var_17342, dtype="float32") /* ty=Tensor[(108), float32] */;
    %443 = reshape(%442, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %444 = @func_2031(%443) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %445 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
    %446 = %444.0;
    (%445, %446, %var_17342)
  };
  %447(%var_17351) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) */
}

def @func_10790() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_10788() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_16212() -> Tensor[(7, 2, 5), float32] {
  %448 = @func_11231() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */;
  %448.1
}

def @func_18600() -> (Tensor[(7, 2, 5), float32],) {
  @func_18598() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_20352() -> (Tensor[(7, 2, 5), float32],) {
  %449 = @func_9159() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %450 = %449.1;
  (%450,)
}

def @func_11419() -> (Tensor[(7, 2, 5), float32],) {
  @func_11417() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_15953() -> (Tensor[(7, 2, 5), float32],) {
  %451 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %452 = %451.0;
  (%452,)
}

def @func_14200() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %458 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
    %453 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %454 = @func_13307() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
    %455 = @func_10684() /* ty=Tensor[(7, 2, 5), float32] */;
    %456 = %453.0;
    %457 = %454.0;
    (%455, %456, %457)
  };
  %458() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */
}

def @func_15156() -> Tensor[(7, 2, 5), float32] {
  @func_15154() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_7049(%var_7047: Tensor[(11, 7, 13), float32]) -> Tensor[(11, 7, 13), uint32] {
  @func_7046(%var_7047) /* ty=Tensor[(11, 7, 13), uint32] */
}

def @func_6227() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %463 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %459 = @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %460 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %461 = %459.0;
    %462 = %460.2;
    (%461, %462)
  };
  %463() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_23170() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %464 = @func_4440() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %465 = %464.0;
  %466 = @func_19729() /* ty=Tensor[(7, 2, 5), float32] */;
  (%465, %466)
}

def @func_8629(%var_8628: Tensor[(540, 1), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, ?), float64]) {
  %476 = fn (%var_8620: Tensor[(540, 1), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, ?), float64]) {
    %467 = @func_5719() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %468 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
    %469 = %468.0;
    %470 = cast(%var_8620, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
    %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(2), int32] */;
    %472 = cast(%469, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
    %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %474 = %467.0;
    %475 = floor_mod(%472, %473) /* ty=Tensor[(540, ?), float64] */;
    (%474, %475)
  };
  %476(%var_8628) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540, ?), float64]) */
}

def @func_6699() -> (Tensor[(7, 2, 5), float32],) {
  %477 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %478 = %477.0;
  (%478,)
}

def @func_22311() -> (Tensor[(7, 2, 5), float32],) {
  %479 = @func_16229() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %480 = %479.0;
  (%480,)
}

def @func_1167() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %484 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %481 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
    %482 = %481.1;
    %483 = @func_974() /* ty=Tensor[(7, 2, 5), float32] */;
    (%482, %483)
  };
  %484() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_4337() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %489 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %485 = @func_956() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %486 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %487 = %485.1;
    %488 = %486.4;
    (%487, %488)
  };
  %489() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_14904() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) {
  %490 = @func_11035() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %491 = @func_10829() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %492 = %490.0;
  %493 = %491.0;
  (%492, %493)
}

def @func_1731() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %494 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %495 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %496 = %494.0;
  %497 = %495.0;
  (%496, %497)
}

def @func_21584() -> (Tensor[(7, 2, 5), float32],) {
  @func_21582() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_5721() -> (Tensor[(7, 2, 5), float32],) {
  @func_5719() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_21683() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %502 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %498 = @func_14904() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */;
    %499 = @func_7674() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %500 = %498.1;
    %501 = %499.1;
    (%500, %501)
  };
  %502() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_8776() -> Tensor[(7, 2, 5), float32] {
  @func_4897() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_15470() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %507 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %503 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %504 = @func_9451() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %505 = %503.0;
    %506 = %504.1;
    (%505, %506)
  };
  %507() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_7125() -> Tensor[(7, 2, 5), float32] {
  %508 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %508.0
}

def @func_6873() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_6375() -> Tensor[(7, 2, 5), float32] {
  @func_6373() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_4836(%var_4820: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) {
  %509 = @func_4273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %510 = cast(%var_4820, dtype="float32") /* ty=Tensor[(108), float32] */;
  %511 = reshape(%510, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %512 = @func_2031(%511) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %513 = %509.1;
  %514 = %512.0;
  (%513, %514, %var_4820)
}

def @func_9039() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %519 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %515 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %516 = @func_5548() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %517 = %515.0;
    %518 = %516.1;
    (%517, %518)
  };
  %519() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_9856() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_9854() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_1660() -> (Tensor[(7, 2, 5), float32],) {
  %520 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %521 = %520.0;
  (%521,)
}

def @func_21970() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %526 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %522 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %523 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %524 = %522.2;
    %525 = %523.0;
    (%524, %525)
  };
  %526() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_4491() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) {
  %533 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) {
    %527 = @func_3492() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %528 = @func_887() /* ty=(Tensor[(540), bool],) */;
    %529 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
    %530 = %527.0;
    %531 = %528.0;
    %532 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
    (%529, %530, %531, %532)
  };
  %533() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */
}

def @func_14651() -> Tensor[(7, 2, 5), float32] {
  %535 = fn () -> Tensor[(7, 2, 5), float32] {
    %534 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %534.0
  };
  %535() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_11477(%var_11476: Tensor[(6, 10, 14), float64]) -> (Tensor[(6, 10, 14), float64], Tensor[(12, 15, 3), bool]) {
  %540 = fn (%var_11464: Tensor[(6, 10, 14), float64]) -> (Tensor[(6, 10, 14), float64], Tensor[(12, 15, 3), bool]) {
    %536 = cast(%var_11464, dtype="float64") /* ty=Tensor[(6, 10, 14), float64] */;
    %537 = @func_4222() /* ty=(Tensor[(12, 15, 3), bool], Tensor[(7, 2, 5), float32]) */;
    %538 = tan(%536) /* ty=Tensor[(6, 10, 14), float64] */;
    %539 = %537.0;
    (%538, %539)
  };
  %540(%var_11476) /* ty=(Tensor[(6, 10, 14), float64], Tensor[(12, 15, 3), bool]) */
}

def @func_14818() -> Tensor[(7, 2, 5), float32] {
  %542 = fn () -> Tensor[(7, 2, 5), float32] {
    %541 = @func_12085() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %541.0
  };
  %542() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_23374() -> Tensor[(7, 2, 5), float32] {
  %543 = fn () -> Tensor[(7, 2, 5), float32] {
    @func_207() /* ty=Tensor[(7, 2, 5), float32] */
  };
  %543() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_3493() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %552 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %544 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %545 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %546 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %547 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %548 = %544.0;
    %549 = %545.0;
    %550 = %546.0;
    %551 = %547.0;
    (%548, %549, %550, %551)
  };
  %552() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_35(%var_33: Tensor[(12, 15, 3), bool]) -> (Tensor[(12, 15, 3), bool],) {
  @func_32(%var_33) /* ty=(Tensor[(12, 15, 3), bool],) */
}

def @func_3820() -> (Tensor[(7, 2, 5), float32],) {
  @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_10685() -> Tensor[(7, 2, 5), float32] {
  %554 = fn () -> Tensor[(7, 2, 5), float32] {
    %553 = @func_9451() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %553.0
  };
  %554() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_12271() -> Tensor[(7, 2, 5), float32] {
  %555 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %555.0
}

def @func_22875() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %559 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %556 = @func_13776() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %557 = %556.0;
    %558 = @func_2962() /* ty=Tensor[(7, 2, 5), float32] */;
    (%557, %558)
  };
  %559() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_13506() -> (Tensor[(7, 2, 5), float32],) {
  %562 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %560 = @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %561 = %560.0;
    (%561,)
  };
  %562() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_11886() -> (Tensor[(7, 2, 5), float32],) {
  %563 = @func_6226() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %564 = %563.0;
  (%564,)
}

def @func_2374() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %569 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %565 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %566 = @func_1731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %567 = %565.0;
    %568 = %566.1;
    (%567, %568)
  };
  %569() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_570(%var_569: Tensor[(12, 1, 9), float32]) -> (Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %574 = fn (%var_549: Tensor[(12, 1, 9), float32]) -> (Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %570 = cast(%var_549, dtype="float32") /* ty=Tensor[(12, 1, 9), float32] */;
    %571 = erf(%570) /* ty=Tensor[(12, 1, 9), float32] */;
    %572 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
    %573 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
    (%571, %572, %573)
  };
  %574(%var_569) /* ty=(Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_23252() -> (Tensor[(7, 2, 5), float32],) {
  @func_23250() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_14985() -> (Tensor[(7, 2, 5), float32],) {
  %577 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %575 = @func_4766() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %576 = %575.1;
    (%576,)
  };
  %577() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_32(%var_25: Tensor[(12, 15, 3), bool]) -> (Tensor[(12, 15, 3), bool],) {
  %578 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 15, 1), bool] */, dtype="bool") /* ty=Tensor[(12, 15, 1), bool] */;
  %579 = cast(%var_25, dtype="bool") /* ty=Tensor[(12, 15, 3), bool] */;
  %580 = logical_or(%578, %579) /* ty=Tensor[(12, 15, 3), bool] */;
  (%580,)
}

def @func_18059() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_18057() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_17695() -> (Tensor[(7, 2, 5), float32],) {
  @func_17693() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_18389() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), int32], Tensor[(540), bool]) {
  %581 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %582 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %583 = @func_4057() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %584 = @func_11267() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(44), int32], Tensor[(440), int32]) */;
  %585 = @func_15090() /* ty=Tensor[(108), float32] */;
  %586 = cast(%585, dtype="float64") /* ty=Tensor[(108), float64] */;
  %587 = asin(%586) /* ty=Tensor[(108), float64] */;
  %588 = @func_8021() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %589 = %588.1;
  %590 = cast(%589, dtype="int32") /* ty=Tensor[(108), int32] */;
  %591 = shape_of(%587, dtype="int32") /* ty=Tensor[(1), int32] */;
  %592 = cast(%587, dtype="int32") /* ty=Tensor[(108), int32] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?), int32] */;
  %594 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %595 = %581.0;
  %596 = %582.1;
  %597 = %583.1;
  %598 = %584.2;
  %599 = subtract(%592, %593) /* ty=Tensor[(108), int32] */;
  %600 = %594.2;
  (%595, %596, %597, %598, %599, %600)
}

def @func_21301() -> (Tensor[(11, 7, 2), float64],) {
  %601 = @func_11035() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %602 = %601.0;
  (%602,)
}

def @func_23049() -> Tensor[(7, 2, 5), float32] {
  @func_23047() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_208() -> Tensor[(7, 2, 5), float32] {
  %604 = fn () -> Tensor[(7, 2, 5), float32] {
    %603 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
    %603.0
  };
  %604() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_11563() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32], Tensor[(540, 1), float32]) {
  %619 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32], Tensor[(540, 1), float32]) {
    %605 = @func_10752() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %606 = @func_9649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %607 = @func_6932() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %608 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
    %609 = %608.0;
    %610 = cast(%609, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
    %611 = acosh(%610) /* ty=Tensor[(540, 1), float32] */;
    %612 = cast(%611, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
    %613 = cast(%611, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
    %614 = %605.0;
    %615 = %606.2;
    %616 = %607.0;
    %617 = asin(%612) /* ty=Tensor[(540, 1), float32] */;
    %618 = rsqrt(%613) /* ty=Tensor[(540, 1), float32] */;
    (%614, %615, %616, %617, %618)
  };
  %619() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32], Tensor[(540, 1), float32]) */
}

def @func_15090() -> Tensor[(108), float32] {
  %620 = @func_5016() /* ty=(Tensor[(108), float32],) */;
  %620.0
}

def @func_21088(%var_21084: Tensor[(154), float64]) -> (Tensor[(1, 3, 10), float32], Tensor[(154), float64], Tensor[(154), float64]) {
  %621 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 3, 10), float32] */;
  %622 = cast(%var_21084, dtype="float64") /* ty=Tensor[(154), float64] */;
  %623 = reshape(%622, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %624 = @func_525(%623) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %625 = rsqrt(%621) /* ty=Tensor[(1, 3, 10), float32] */;
  %626 = %624.2;
  (%625, %626, %var_21084)
}

def @func_2312() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_9854() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %627 = @func_7591() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */;
  %628 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %629 = %627.3;
  %630 = %628.0;
  (%629, %630)
}

def @func_4767() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %634 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %631 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %632 = %631.0;
    %633 = @func_2962() /* ty=Tensor[(7, 2, 5), float32] */;
    (%632, %633)
  };
  %634() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_1487() -> Tensor[(7, 2, 5), float32] {
  @func_1485() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_1983() -> (Tensor[(7, 2, 5), float32],) {
  %637 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %635 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %636 = %635.1;
    (%636,)
  };
  %637() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_3682() -> (Tensor[(7, 2, 5), float32],) {
  %640 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %638 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %639 = %638.0;
    (%639,)
  };
  %640() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_20935() -> (Tensor[(7, 2, 5), float32],) {
  %643 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %641 = @func_14263() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %642 = %641.0;
    (%642,)
  };
  %643() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_9968() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %649 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %644 = @func_6396() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %645 = @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %646 = %644.0;
    %647 = %645.2;
    %648 = @func_2962() /* ty=Tensor[(7, 2, 5), float32] */;
    (%646, %647, %648)
  };
  %649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_13546() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %650 = @func_9159() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %651 = %650.0;
  %652 = @func_10643() /* ty=Tensor[(7, 2, 5), float32] */;
  (%651, %652)
}

def @func_22063() -> (Tensor[(7, 2, 5), float32],) {
  %653 = @func_18847() /* ty=Tensor[(7, 2, 5), float32] */;
  (%653,)
}

def @func_12719() -> Tensor[(7, 2, 5), float32] {
  %654 = fn () -> Tensor[(7, 2, 5), float32] {
    @func_7226() /* ty=Tensor[(7, 2, 5), float32] */
  };
  %654() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_23047() -> Tensor[(7, 2, 5), float32] {
  %655 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %655.0
}

def @func_15382(%var_15380: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(6, 18), float32]) {
  @func_15379(%var_15380) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(6, 18), float32]) */
}

def @func_10565() -> Tensor[(7, 2, 5), float32] {
  %656 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %656.1
}

def @func_17733() -> Tensor[(7, 2, 5), float32] {
  %657 = @func_9910() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %657.0
}

def @func_7293(%var_7291: Tensor[(540, 3), bool]) -> (Tensor[(540, 3), bool], Tensor[(540, 3), uint64]) {
  @func_7290(%var_7291) /* ty=(Tensor[(540, 3), bool], Tensor[(540, 3), uint64]) */
}

def @func_18807() -> (Tensor[(7, 2, 5), float32],) {
  %658 = @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %659 = %658.0;
  (%659,)
}

def @func_3982() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_4871(%var_4869: Tensor[(154), float64], %var_4870: Tensor[(24), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(24), float32]) {
  %671 = fn (%var_4857: Tensor[(154), float64], %var_4865: Tensor[(24), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(24), float32]) {
    %660 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %661 = cast(%var_4857, dtype="float64") /* ty=Tensor[(154), float64] */;
    %662 = reshape(%661, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
    %663 = cast(%var_4865, dtype="float32") /* ty=Tensor[(24), float32] */;
    %664 = cast(%var_4857, dtype="float64") /* ty=Tensor[(154), float64] */;
    %665 = reshape(%663, newshape=[3, 2, 4]) /* ty=Tensor[(3, 2, 4), float32] */;
    %666 = reshape(%664, newshape=[154]) /* ty=Tensor[(154), float64] */;
    %667 = @func_3089(%665, %666) /* ty=(Tensor[(3, 2, 4), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) */;
    %668 = %660.2;
    %669 = @func_476(%662) /* ty=Tensor[(11, 7, 2), float64] */;
    %670 = %667.3;
    (%668, %669, %var_4857, %670, %var_4865)
  };
  %671(%var_4869, %var_4870) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(24), float32]) */
}

def @func_16321(%var_16319: Tensor[(11, 7, 13), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), bool]) {
  @func_16318(%var_16319) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), bool]) */
}

def @func_10220(%var_10218: Tensor[(16, 3, 2), uint64], %var_10219: Tensor[(16, 3, 2), uint64]) -> (Tensor[(16, 3, 2), uint64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %683 = fn (%var_10144: Tensor[(16, 3, 2), uint64], %var_10145: Tensor[(16, 3, 2), uint64]) -> (Tensor[(16, 3, 2), uint64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %672 = cast(%var_10145, dtype="uint64") /* ty=Tensor[(16, 3, 2), uint64] */;
    %673 = shape_of(%var_10144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %674 = cast(%var_10144, dtype="uint64") /* ty=Tensor[(16, 3, 2), uint64] */;
    %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %676 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %677 = @func_2728() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %678 = @func_7867() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %679 = logical_xor(%674, %675) /* ty=Tensor[(16, 3, 2), uint64] */;
    %680 = %676.0;
    %681 = %677.0;
    %682 = %678.0;
    (%679, %680, %681, %682)
  };
  %683(%var_10218, %var_10219) /* ty=(Tensor[(16, 3, 2), uint64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_836(%var_834: Tensor[(12, 15, 3), bool]) -> (Tensor[(12, 15, 3), float32],) {
  @func_833(%var_834) /* ty=(Tensor[(12, 15, 3), float32],) */
}

def @func_4057() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %684 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %685 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %686 = %684.1;
  %687 = %685.4;
  (%686, %687)
}

def @func_9910() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %688 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %689 = %688.0;
  %690 = @func_7125() /* ty=Tensor[(7, 2, 5), float32] */;
  (%689, %690)
}

def @func_1975(%var_1974: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(1, 36), bool], Tensor[(7, 2, 5), float32]) {
  %701 = fn (%var_1964: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(1, 36), bool], Tensor[(7, 2, 5), float32]) {
    %691 = @func_956() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %692 = cast(%var_1964, dtype="bool") /* ty=bool */;
    %693 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 36), bool] */, dtype="bool") /* ty=Tensor[(1, 36), bool] */;
    %694 = reshape(%692, newshape=[]) /* ty=bool */;
    %695 = reshape(%693, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
    %696 = @func_1250(%694, %695) /* ty=(Tensor[(2, 9, 2), bool],) */;
    %697 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %698 = %691.1;
    %699 = %696.0;
    %700 = %697.0;
    (%698, %699, %var_1964, meta[relay.Constant][16] /* ty=Tensor[(1, 36), bool] */, %700)
  };
  %701(%var_1974) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(1, 36), bool], Tensor[(7, 2, 5), float32]) */
}

def @func_1079() -> Tensor[(7, 2, 5), float32] {
  %702 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %702.4
}

def @func_17015(%var_17013: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(6, 18), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_17012(%var_17013) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(6, 18), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_9650() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %707 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %703 = @func_4135() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %704 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
    %705 = %703.3;
    %706 = @func_7226() /* ty=Tensor[(7, 2, 5), float32] */;
    (%704, %705, %706)
  };
  %707() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_15379(%var_15367: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(6, 18), float32]) {
  %708 = @func_5905() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %709 = cast(%var_15367, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %710 = reshape(%709, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %711 = @func_2031(%710) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %712 = %708.0;
  %713 = %711.2;
  (%712, %713, %var_15367)
}

def @func_5661() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_5659() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_18546(%var_18544: Tensor[(540, 3), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, 3), float64]) {
  @func_18543(%var_18544) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540, 3), float64]) */
}

def @func_5017() -> (Tensor[(108), float32],) {
  %715 = fn () -> (Tensor[(108), float32],) {
    %714 = @func_2227() /* ty=Tensor[(108), float32] */;
    (%714,)
  };
  %715() /* ty=(Tensor[(108), float32],) */
}

def @func_7211() -> Tensor[(7, 2, 5), float32] {
  %716 = @func_6163() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %716.0
}

def @func_7028() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %717 = @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %718 = @func_6746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %719 = %717.0;
  %720 = %718.0;
  (%719, %720)
}

def @func_17735() -> Tensor[(7, 2, 5), float32] {
  @func_17733() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_17620() -> Tensor[(7, 2, 5), float32] {
  @func_17618() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_1273() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %721 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %722 = @func_1166() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %723 = %721.1;
  %724 = %722.0;
  (%723, %724)
}

def @func_6032() -> (Tensor[(540, 1), bool],) {
  %727 = fn () -> (Tensor[(540, 1), bool],) {
    %725 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
    %726 = %725.0;
    (%726,)
  };
  %727() /* ty=(Tensor[(540, 1), bool],) */
}

def @func_7030() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_7028() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_3173() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %732 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %728 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %729 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %730 = %728.0;
    %731 = %729.0;
    (%730, %731)
  };
  %732() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_12912(%var_12910: Tensor[(1620), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 3), bool], Tensor[(1620), bool], Tensor[(7, 2, 5), float32]) {
  @func_12909(%var_12910) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 3), bool], Tensor[(1620), bool], Tensor[(7, 2, 5), float32]) */
}

def @func_23317() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_23315() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_20506() -> (Tensor[(7, 2, 5), float32],) {
  %735 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %733 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %734 = %733.0;
    (%734,)
  };
  %735() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_9573() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %736 = @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %737 = @func_7674() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %738 = @func_1605() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %739 = %736.3;
  %740 = %737.1;
  %741 = %738.0;
  (%739, %740, %741)
}

def @func_5549() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %746 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %742 = @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %743 = @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %744 = %742.1;
    %745 = %743.0;
    (%744, %745)
  };
  %746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_20646() -> (Tensor[(7, 2, 5), float32],) {
  %747 = @func_19037() /* ty=Tensor[(7, 2, 5), float32] */;
  (%747,)
}

def @func_23356() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32]) {
  @func_23354() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32]) */
}

def @func_4184() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %748 = @func_4135() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %749 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %750 = %748.3;
  %751 = %749.0;
  (%750, %751)
}

def @func_5285() -> (Tensor[(7, 2, 5), float32],) {
  %754 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %752 = @func_5096() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %753 = %752.1;
    (%753,)
  };
  %754() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_14799() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) {
  @func_14797() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) */
}

def @func_2149() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %761 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %755 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %756 = @func_2066() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %757 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %758 = %755.0;
    %759 = %756.0;
    %760 = %757.0;
    (%758, %759, %760)
  };
  %761() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_19481() -> (Tensor[(7, 2, 5), float32],) {
  @func_19479() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_2068() -> (Tensor[(7, 2, 5), float32],) {
  @func_2066() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_2074() -> (Tensor[(7, 2, 5), float32],) {
  %763 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %762 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
    (%762,)
  };
  %763() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_10114() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %768 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %764 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %765 = @func_5719() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %766 = %764.0;
    %767 = %765.0;
    (%766, %767)
  };
  %768() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_7226() -> Tensor[(7, 2, 5), float32] {
  %769 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %769.0
}

def @func_16167(%var_16119: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(286), float64], Tensor[(440), int32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  %770 = cast(meta[relay.Constant][17] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %771 = reshape(%770, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), float64] */;
  %772 = @func_14038(%771) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %773 = @func_11267() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(44), int32], Tensor[(440), int32]) */;
  %774 = cast(%var_16119, dtype="float32") /* ty=Tensor[(108), float32] */;
  %775 = reshape(%774, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %776 = @func_625(%775) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %777 = @func_9204() /* ty=Tensor[(7, 2, 5), float32] */;
  %778 = %772.2;
  %779 = %773.4;
  %780 = %776.4;
  %781 = @func_8592() /* ty=Tensor[(7, 2, 5), float32] */;
  (%777, %778, meta[relay.Constant][17] /* ty=Tensor[(286), float64] */, %779, %780, %var_16119, %781)
}

def @func_1606() -> (Tensor[(7, 2, 5), float32],) {
  %784 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %782 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %783 = %782.0;
    (%783,)
  };
  %784() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_7507() -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64]) {
  %789 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64]) {
    %785 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %786 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
    %787 = %785.0;
    %788 = %786.0;
    (%787, %788)
  };
  %789() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64]) */
}

def @func_22422() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_22420() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_14906() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) {
  @func_14904() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */
}

def @func_14099() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_14097() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_20625() -> (Tensor[(7, 2, 5), float32],) {
  %790 = @func_13505() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %791 = %790.0;
  (%791,)
}

def @func_4223() -> (Tensor[(12, 15, 3), bool], Tensor[(7, 2, 5), float32]) {
  %796 = fn () -> (Tensor[(12, 15, 3), bool], Tensor[(7, 2, 5), float32]) {
    %792 = @func_739() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
    %793 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %794 = %792.1;
    %795 = %793.0;
    (%794, %795)
  };
  %796() /* ty=(Tensor[(12, 15, 3), bool], Tensor[(7, 2, 5), float32]) */
}

def @func_12506() -> (Tensor[(7, 2, 5), float32],) {
  %799 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %797 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %798 = %797.1;
    (%798,)
  };
  %799() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_4598() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %803 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %800 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %801 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
    %802 = %800.0;
    (%801, %802)
  };
  %803() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_22025(%var_22022: bool, %var_22023: Tensor[(9, 4), bool], %var_22024: Tensor[(2, 9, 2), bool]) -> (Tensor[(7, 2, 5), float32], bool, Tensor[(9, 4), bool], Tensor[(2, 9, 2), float64]) {
  @func_22020(%var_22022, %var_22023, %var_22024) /* ty=(Tensor[(7, 2, 5), float32], bool, Tensor[(9, 4), bool], Tensor[(2, 9, 2), float64]) */
}

def @func_21009() -> (Tensor[(7, 2, 5), float32],) {
  %804 = @func_13785() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %805 = %804.0;
  (%805,)
}

def @func_21798() -> (Tensor[(5, 6, 13), bool], Tensor[(7, 2, 5), float32]) {
  @func_21796() /* ty=(Tensor[(5, 6, 13), bool], Tensor[(7, 2, 5), float32]) */
}

def @func_13208() -> (Tensor[(7, 2, 5), float32],) {
  @func_13206() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_17618() -> Tensor[(7, 2, 5), float32] {
  %806 = @func_13307() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
  %806.1
}

def @func_21072() -> (Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32]) {
  %810 = fn () -> (Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32]) {
    %807 = @func_4273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %808 = @func_13320() /* ty=Tensor[(540, 1), float32] */;
    %809 = %807.1;
    (%808, %809)
  };
  %810() /* ty=(Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_23354() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32]) {
  %811 = @func_9159() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %812 = @func_22113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %813 = %811.1;
  %814 = %812.0;
  %815 = @func_13320() /* ty=Tensor[(540, 1), float32] */;
  (%813, %814, %815)
}

def @func_22420() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %816 = @func_18475() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %817 = %816.0;
  %818 = @func_18753() /* ty=Tensor[(7, 2, 5), float32] */;
  (%817, %818)
}

def @func_23278() -> (Tensor[(7, 2, 5), float32],) {
  %821 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %819 = @func_13785() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %820 = %819.0;
    (%820,)
  };
  %821() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_17604() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %828 = fn () -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %822 = @func_11035() /* ty=(Tensor[(11, 7, 2), float64],) */;
    %823 = @func_17518() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %824 = @func_14199() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %825 = %822.0;
    %826 = %823.0;
    %827 = %824.1;
    (%825, %826, %827)
  };
  %828() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_8484() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %832 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %829 = @func_5905() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %830 = @func_6015() /* ty=Tensor[(7, 2, 5), float32] */;
    %831 = %829.0;
    (%830, %831)
  };
  %832() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_13427() -> (Tensor[(4, 3, 4), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_13425() /* ty=(Tensor[(4, 3, 4), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_4537() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %838 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %833 = @func_3681() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %834 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %835 = %833.0;
    %836 = %834.0;
    %837 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
    (%835, %836, %837)
  };
  %838() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_957() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %841 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %839 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
    %840 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
    (%839, %840)
  };
  %841() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_16214() -> Tensor[(7, 2, 5), float32] {
  @func_16212() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_12493() -> Tensor[(154), float64] {
  %842 = @func_10449() /* ty=(Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */;
  %842.0
}

def @func_20627() -> (Tensor[(7, 2, 5), float32],) {
  @func_20625() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_14263() -> (Tensor[(7, 2, 5), float32],) {
  %843 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %844 = %843.0;
  (%844,)
}

def @func_16706() -> Tensor[(7, 2, 5), float32] {
  %846 = fn () -> Tensor[(7, 2, 5), float32] {
    %845 = @func_9649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %845.1
  };
  %846() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_2031(%var_2006: Tensor[(108), float32]) -> (Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %847 = @func_887() /* ty=(Tensor[(540), bool],) */;
  %848 = cast(%var_2006, dtype="float32") /* ty=Tensor[(108), float32] */;
  %849 = reshape(%848, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %850 = @func_625(%849) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %851 = %847.0;
  %852 = %850.4;
  (%851, %852, %var_2006)
}

def @func_8313() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(108), float32], Tensor[(12, 15, 3), float64]) {
  %853 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
  %854 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %855 = cast(meta[relay.Constant][18] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %856 = reshape(%855, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %857 = @func_625(%856) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %858 = @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */;
  %859 = %853.1;
  %860 = %854.0;
  %861 = %857.3;
  %862 = %858.1;
  (%859, %860, %861, meta[relay.Constant][18] /* ty=Tensor[(108), float32] */, %862)
}

def @func_6934() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_6932() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_15983() -> Tensor[(7, 2, 5), float32] {
  %863 = @func_11562() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32], Tensor[(540, 1), float32]) */;
  %863.1
}

def @func_17045(%var_17044: Tensor[(1001), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1001), float32]) {
  %870 = fn (%var_17041: Tensor[(1001), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1001), float32]) {
    %864 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %865 = cast(%var_17041, dtype="float32") /* ty=Tensor[(1001), float32] */;
    %866 = reshape(%865, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
    %867 = @func_16318(%866) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), bool]) */;
    %868 = %864.0;
    %869 = %867.1;
    (%868, %869, %var_17041)
  };
  %870(%var_17044) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1001), float32]) */
}

def @func_3564(%var_3551: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) {
  %871 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %872 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %873 = cast(%var_3551, dtype="bool") /* ty=Tensor[(36), bool] */;
  %874 = reshape(%872, newshape=[]) /* ty=bool */;
  %875 = reshape(%873, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %876 = @func_1250(%874, %875) /* ty=(Tensor[(2, 9, 2), bool],) */;
  %877 = %871.0;
  %878 = %876.0;
  (%877, %878, True /* ty=bool */, %var_3551)
}

def @func_22621(%var_22620: Tensor[(7, 14, 6), int16]) -> (Tensor[(7, 14, 6), int16], Tensor[(7, 2, 5), float32]) {
  %886 = fn (%var_22579: Tensor[(7, 14, 6), int16]) -> (Tensor[(7, 14, 6), int16], Tensor[(7, 2, 5), float32]) {
    %879 = cast(%var_22579, dtype="int16") /* ty=Tensor[(7, 14, 6), int16] */;
    %880 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(7, 14, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %881 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 14, 6), int16] */, dtype="int16") /* ty=Tensor[(7, 14, 6), int16] */;
    %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %883 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %884 = right_shift(%881, %882) /* ty=Tensor[(7, 14, 6), int16] */;
    %885 = %883.1;
    (%884, %885)
  };
  %886(%var_22620) /* ty=(Tensor[(7, 14, 6), int16], Tensor[(7, 2, 5), float32]) */
}

def @func_6440(%var_6421: Tensor[(11, 6, 13), uint32], %var_6427: Tensor[(11, 6, 13), uint32]) -> (Tensor[(11, 6, 13), int8], Tensor[(7, 2, 5), float32]) {
  %887 = cast(%var_6421, dtype="uint32") /* ty=Tensor[(11, 6, 13), uint32] */;
  %888 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(11, 6, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 6, 13), uint32] */, dtype="uint32") /* ty=Tensor[(11, 6, 13), uint32] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %891 = bitwise_and(%889, %890) /* ty=Tensor[(11, 6, 13), uint32] */;
  %892 = cast(%var_6427, dtype="int8") /* ty=Tensor[(11, 6, 13), int8] */;
  %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %894 = cast(%891, dtype="int8") /* ty=Tensor[(11, 6, 13), int8] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %896 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %897 = bitwise_or(%894, %895) /* ty=Tensor[(11, 6, 13), int8] */;
  %898 = %896.0;
  (%897, %898)
}

def @func_7113() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %905 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
    %899 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %900 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %901 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
    %902 = %899.0;
    %903 = %900.0;
    %904 = %901.0;
    (%902, %903, %904)
  };
  %905() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */
}

def @func_20585() -> Tensor[(7, 2, 5), float32] {
  %907 = fn () -> Tensor[(7, 2, 5), float32] {
    %906 = @func_13031() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) */;
    %906.0
  };
  %907() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_7213() -> Tensor[(7, 2, 5), float32] {
  @func_7211() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_23243() -> (Tensor[(65, 6), bool], Tensor[(108), float32], Tensor[(108), float32]) {
  @func_23241() /* ty=(Tensor[(65, 6), bool], Tensor[(108), float32], Tensor[(108), float32]) */
}

def @func_21932() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %912 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %908 = @func_20173() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540, 108), float32]) */;
    %909 = @func_16866() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %910 = %908.0;
    %911 = %909.1;
    (%910, %911)
  };
  %912() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_13320() -> Tensor[(540, 1), float32] {
  %913 = @func_7591() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */;
  %914 = %913.2;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  acos(%915) /* ty=Tensor[(540, 1), float32] */
}

def @func_18912() -> (Tensor[(108), float32],) {
  @func_18910() /* ty=(Tensor[(108), float32],) */
}

def @func_13322() -> Tensor[(540, 1), float32] {
  @func_13320() /* ty=Tensor[(540, 1), float32] */
}

def @func_2450() -> Tensor[(7, 2, 5), float32] {
  %917 = fn () -> Tensor[(7, 2, 5), float32] {
    %916 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %916.0
  };
  %917() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_4441() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %922 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %918 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %919 = @func_1166() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %920 = %918.0;
    %921 = %919.0;
    (%920, %921)
  };
  %922() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @main() -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), int32]) {
  %923 = @func_1934() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %924 = @func_6915() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %925 = %924.0;
  %926 = cast(%925, dtype="float32") /* ty=Tensor[(11, 7, 2), float32] */;
  %927 = asin(%926) /* ty=Tensor[(11, 7, 2), float32] */;
  %928 = cast(%925, dtype="int32") /* ty=Tensor[(11, 7, 2), int32] */;
  %929 = shape_of(%927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%927, dtype="int32") /* ty=Tensor[(11, 7, 2), int32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %932 = %923.1;
  %933 = bitwise_and(%930, %931) /* ty=Tensor[(11, 7, 2), int32] */;
  (%932, %933)
}

def @func_3818() -> (Tensor[(7, 2, 5), float32],) {
  %934 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %935 = %934.0;
  (%935,)
}

def @func_15955() -> (Tensor[(7, 2, 5), float32],) {
  @func_15953() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_11589() -> Tensor[(7, 2, 5), float32] {
  %936 = fn () -> Tensor[(7, 2, 5), float32] {
    @func_2449() /* ty=Tensor[(7, 2, 5), float32] */
  };
  %936() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_16789(%var_16788: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %953 = fn (%var_16738: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %937 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %938 = @func_14904() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */;
    %939 = cast(%var_16738, dtype="float64") /* ty=Tensor[(154), float64] */;
    %940 = reshape(%939, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
    %941 = @func_476(%940) /* ty=Tensor[(11, 7, 2), float64] */;
    %942 = cast(%var_16738, dtype="bool") /* ty=Tensor[(154), bool] */;
    %943 = shape_of(%941, dtype="int32") /* ty=Tensor[(3), int32] */;
    %944 = cast(%941, dtype="bool") /* ty=Tensor[(11, 7, 2), bool] */;
    %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %946 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %947 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %948 = %937.0;
    %949 = %938.1;
    %950 = not_equal(%944, %945) /* ty=Tensor[(11, 7, 2), bool] */;
    %951 = %946.0;
    %952 = %947.0;
    (%948, %949, %950, %951, %952)
  };
  %953(%var_16788) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_20174() -> (Tensor[(7, 2, 5), float32], Tensor[(540, 108), float32]) {
  %966 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(540, 108), float32]) {
    %954 = @func_17398() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %955 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
    %956 = %955.3;
    %957 = @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %958 = %957.0;
    %959 = cast(%956, dtype="uint32") /* ty=Tensor[(540, 1), uint32] */;
    %960 = cast(%958, dtype="uint32") /* ty=Tensor[(108), uint32] */;
    %961 = bitwise_xor(%959, %960) /* ty=Tensor[(540, 108), uint32] */;
    %962 = cast(%956, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
    %963 = cast(%961, dtype="float32") /* ty=Tensor[(540, 108), float32] */;
    %964 = %954.0;
    %965 = power(%962, %963) /* ty=Tensor[(540, 108), float32] */;
    (%964, %965)
  };
  %966() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540, 108), float32]) */
}

def @func_5946() -> (Tensor[(7, 2, 5), float32],) {
  %967 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %968 = %967.0;
  (%968,)
}

def @func_6932() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %969 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %970 = %969.0;
  %971 = @func_2449() /* ty=Tensor[(7, 2, 5), float32] */;
  (%970, %971)
}

def @func_15655() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_15653() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_9298(%var_9293: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(6, 18), float32], Tensor[(12, 15, 3), float32]) {
  %972 = cast(%var_9293, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %973 = reshape(%972, newshape=[12, 1, 9]) /* ty=Tensor[(12, 1, 9), float32] */;
  %974 = @func_568(%973) /* ty=(Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %975 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %976 = %975.1;
  %977 = cast(%976, dtype="float32") /* ty=Tensor[(12, 15, 3), float32] */;
  %978 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
  %979 = %974.0;
  %980 = sigmoid(%977) /* ty=Tensor[(12, 15, 3), float32] */;
  (%978, %979, %var_9293, %980)
}

def @func_12103() -> (Tensor[(8, 9, 12), float32],) {
  %983 = fn () -> (Tensor[(8, 9, 12), float32],) {
    %981 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 9, 12), float32] */;
    %982 = atan(%981) /* ty=Tensor[(8, 9, 12), float32] */;
    (%982,)
  };
  %983() /* ty=(Tensor[(8, 9, 12), float32],) */
}

def @func_13354() -> Tensor[(540, 1), bool] {
  %985 = fn () -> Tensor[(540, 1), bool] {
    %984 = @func_7591() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */;
    %984.2
  };
  %985() /* ty=Tensor[(540, 1), bool] */
}

def @func_13832(%var_13803: Tensor[(540, 2), float32], %var_13821: Tensor[(540, 2), float32]) -> (Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) {
  %986 = @func_11562() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float32], Tensor[(540, 1), float32]) */;
  %987 = %986.3;
  %988 = cast(%987, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
  %989 = cast(%var_13803, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
  %990 = cast(%var_13821, dtype="uint16") /* ty=Tensor[(540, 2), uint16] */;
  %991 = shape_of(%var_13803, dtype="int32") /* ty=Tensor[(2), int32] */;
  %992 = cast(%var_13803, dtype="uint16") /* ty=Tensor[(540, 2), uint16] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %994 = logical_and(%988, %989) /* ty=Tensor[(540, 2), bool] */;
  %995 = subtract(%992, %993) /* ty=Tensor[(540, 2), uint16] */;
  (%994, %995)
}

def @func_14443() -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1004 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %996 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %997 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
    %998 = @func_13546() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %999 = %996.0;
    %1000 = %997.2;
    %1001 = @func_4897() /* ty=Tensor[(7, 2, 5), float32] */;
    %1002 = %998.0;
    %1003 = @func_12271() /* ty=Tensor[(7, 2, 5), float32] */;
    (%999, %1000, %1001, %1002, %1003)
  };
  %1004() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_833(%var_826: Tensor[(12, 15, 3), bool]) -> (Tensor[(12, 15, 3), float32],) {
  %1005 = @func_739() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1006 = %1005.1;
  %1007 = cast(%var_826, dtype="float32") /* ty=Tensor[(12, 15, 3), float32] */;
  %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%1006, dtype="float32") /* ty=Tensor[(12, 15, 3), float32] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1011 = add(%1009, %1010) /* ty=Tensor[(12, 15, 3), float32] */;
  (%1011,)
}

def @func_23423() -> Tensor[(7, 2, 5), float32] {
  @func_7226() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_16013() -> (Tensor[(7, 2, 5), float32],) {
  @func_16011() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_14762() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1014 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1012 = @func_6015() /* ty=Tensor[(7, 2, 5), float32] */;
    %1013 = @func_7144() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1012, %1013)
  };
  %1014() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_11086(%var_11085: Tensor[(588), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(588), bool]) {
  %1021 = fn (%var_11074: Tensor[(588), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(588), bool]) {
    %1015 = @func_5996() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1016 = cast(%var_11074, dtype="bool") /* ty=Tensor[(588), bool] */;
    %1017 = reshape(%1016, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), bool] */;
    %1018 = @func_2777(%1017) /* ty=(Tensor[(7, 6, 14), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
    %1019 = %1015.0;
    %1020 = %1018.4;
    (%1019, %1020, %var_11074)
  };
  %1021(%var_11085) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(588), bool]) */
}

def @func_7632() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1022 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1023 = @func_6353() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1024 = %1022.0;
  %1025 = %1023.0;
  (%1024, %1025)
}

def @func_19531() -> Tensor[(7, 2, 5), float32] {
  %1027 = fn () -> Tensor[(7, 2, 5), float32] {
    %1026 = @func_9499() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1026.0
  };
  %1027() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_15421() -> (Tensor[(7, 2, 5), float32],) {
  %1030 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1028 = @func_6932() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1029 = %1028.0;
    (%1029,)
  };
  %1030() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_7046(%var_7036: Tensor[(11, 7, 13), float32]) -> Tensor[(11, 7, 13), uint32] {
  %1031 = cast(%var_7036, dtype="float32") /* ty=Tensor[(11, 7, 13), float32] */;
  %1032 = acos(%1031) /* ty=Tensor[(11, 7, 13), float32] */;
  %1033 = cast(%var_7036, dtype="uint32") /* ty=Tensor[(11, 7, 13), uint32] */;
  %1034 = shape_of(%1032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%1032, dtype="uint32") /* ty=Tensor[(11, 7, 13), uint32] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%1035, %1036) /* ty=Tensor[(11, 7, 13), uint32] */
}

def @func_16498() -> Tensor[(7, 2, 5), float32] {
  %1037 = @func_15653() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1037.0
}

def @func_2840(%var_2838: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  @func_2837(%var_2838) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */
}

def @func_21631(%var_21630: Tensor[(1001, 15), float32]) -> (Tensor[(1001, 15), uint32], Tensor[(1001, 15), bool], Tensor[(1001, 15), uint64]) {
  %1049 = fn (%var_21610: Tensor[(1001, 15), float32]) -> (Tensor[(1001, 15), uint32], Tensor[(1001, 15), bool], Tensor[(1001, 15), uint64]) {
    %1038 = @func_8534() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), uint32], Tensor[(1001, 1), float32]) */;
    %1039 = %1038.2;
    %1040 = cast(%1039, dtype="uint32") /* ty=Tensor[(1001, 1), uint32] */;
    %1041 = cast(%var_21610, dtype="uint32") /* ty=Tensor[(1001, 15), uint32] */;
    %1042 = cast(%1039, dtype="bool") /* ty=Tensor[(1001, 1), bool] */;
    %1043 = cast(%var_21610, dtype="bool") /* ty=Tensor[(1001, 15), bool] */;
    %1044 = cast(%1039, dtype="uint64") /* ty=Tensor[(1001, 1), uint64] */;
    %1045 = cast(%var_21610, dtype="uint64") /* ty=Tensor[(1001, 15), uint64] */;
    %1046 = minimum(%1040, %1041) /* ty=Tensor[(1001, 15), uint32] */;
    %1047 = logical_or(%1042, %1043) /* ty=Tensor[(1001, 15), bool] */;
    %1048 = logical_xor(%1044, %1045) /* ty=Tensor[(1001, 15), uint64] */;
    (%1046, %1047, %1048)
  };
  %1049(%var_21630) /* ty=(Tensor[(1001, 15), uint32], Tensor[(1001, 15), bool], Tensor[(1001, 15), uint64]) */
}

def @func_3153() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1053 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1050 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1051 = %1050.0;
    %1052 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1051, %1052)
  };
  %1053() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_6660(%var_6559: Tensor[(2, 9, 14), float32]) -> (Tensor[(2, 9, 14), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 4), int8], Tensor[(7, 2, 5), float32]) {
  %1054 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 9, 14), float32] */, dtype="bool") /* ty=Tensor[(2, 9, 14), bool] */;
  %1055 = shape_of(%var_6559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(%var_6559, dtype="bool") /* ty=Tensor[(2, 9, 14), bool] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1058 = less(%1056, %1057) /* ty=Tensor[(2, 9, 14), bool] */;
  %1059 = cast(%1058, dtype="float64") /* ty=Tensor[(2, 9, 14), float64] */;
  %1060 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2, 9, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1061 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 9, 14), float32] */, dtype="float64") /* ty=Tensor[(2, 9, 14), float64] */;
  %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1063 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1064 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1065 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %1066 = %1065.0;
  %1067 = cast(%1066, dtype="int8") /* ty=Tensor[(540, 1), int8] */;
  %1068 = cast(meta[relay.Constant][23] /* ty=Tensor[(540, 4), float32] */, dtype="int8") /* ty=Tensor[(540, 4), int8] */;
  %1069 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1070 = divide(%1061, %1062) /* ty=Tensor[(2, 9, 14), float64] */;
  %1071 = %1063.0;
  %1072 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  %1073 = %1064.0;
  %1074 = right_shift(%1067, %1068) /* ty=Tensor[(540, 4), int8] */;
  %1075 = %1069.0;
  (%1070, %1071, %1072, %1073, %1074, %1075)
}

def @func_18057() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1076 = @func_1731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1077 = @func_14149() /* ty=(Tensor[(540, ?), uint64], Tensor[(7, 2, 5), float32]) */;
  %1078 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1079 = %1076.1;
  %1080 = %1077.1;
  %1081 = %1078.0;
  (%1079, %1080, %1081)
}

def @func_11269() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(44), int32], Tensor[(440), int32]) {
  @func_11267() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(44), int32], Tensor[(440), int32]) */
}

def @func_22169() -> (Tensor[(7, 2, 5), float32],) {
  %1082 = @func_2728() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1083 = %1082.0;
  (%1083,)
}

def @func_13033() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) {
  @func_13031() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) */
}

def @func_5250() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1084 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1085 = @func_2187() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1086 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1087 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1088 = %1084.2;
  %1089 = %1085.0;
  %1090 = %1086.0;
  %1091 = %1087.0;
  (%1088, %1089, %1090, %1091)
}

def @func_14040(%var_14039: Tensor[(13, 2, 11), float64]) -> (Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1099 = fn (%var_14008: Tensor[(13, 2, 11), float64]) -> (Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1092 = cast(%var_14008, dtype="float64") /* ty=Tensor[(13, 2, 11), float64] */;
    %1093 = cast(%var_14008, dtype="float32") /* ty=Tensor[(13, 2, 11), float32] */;
    %1094 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1095 = sqrt(%1092) /* ty=Tensor[(13, 2, 11), float64] */;
    %1096 = asin(%1093) /* ty=Tensor[(13, 2, 11), float32] */;
    %1097 = %1094.0;
    %1098 = @func_8592() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1095, %1096, %1097, %1098)
  };
  %1099(%var_14039) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_10983() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1106 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1100 = @func_9910() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1101 = @func_5569() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1102 = @func_6746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1103 = %1100.1;
    %1104 = %1101.0;
    %1105 = %1102.0;
    (%1103, %1104, %1105)
  };
  %1106() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_4186() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_6016() -> Tensor[(7, 2, 5), float32] {
  %1107 = fn () -> Tensor[(7, 2, 5), float32] {
    @func_1485() /* ty=Tensor[(7, 2, 5), float32] */
  };
  %1107() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_479(%var_477: Tensor[(11, 7, 2), float64]) -> Tensor[(11, 7, 2), float64] {
  @func_476(%var_477) /* ty=Tensor[(11, 7, 2), float64] */
}

def @func_2104() -> (Tensor[(7, 2, 5), float32],) {
  %1110 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1108 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1109 = %1108.0;
    (%1109,)
  };
  %1110() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_15012() -> (Tensor[(7, 2, 5), float32],) {
  @func_15010() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_13548() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_13546() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_3041() -> Tensor[(7, 2, 5), float32] {
  %1111 = fn () -> Tensor[(7, 2, 5), float32] {
    @func_2449() /* ty=Tensor[(7, 2, 5), float32] */
  };
  %1111() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_13836(%var_13834: Tensor[(540, 2), float32], %var_13835: Tensor[(540, 2), float32]) -> (Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) {
  @func_13832(%var_13834, %var_13835) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) */
}

def @func_15746() -> (Tensor[(7, 2, 5), float32],) {
  %1114 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1112 = @func_9649() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1113 = %1112.2;
    (%1113,)
  };
  %1114() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_765() -> (Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  %1123 = fn () -> (Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
    %1115 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
    %1116 = %1115.1;
    %1117 = cast(%1116, dtype="float32") /* ty=Tensor[(12, 15, 3), float32] */;
    %1118 = cast(meta[relay.Constant][24] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1119 = reshape(%1118, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %1120 = @func_625(%1119) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
    %1121 = tan(%1117) /* ty=Tensor[(12, 15, 3), float32] */;
    %1122 = %1120.1;
    (%1121, %1122, meta[relay.Constant][24] /* ty=Tensor[(108), float32] */)
  };
  %1123() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */
}

def @func_11037() -> (Tensor[(11, 7, 2), float64],) {
  @func_11035() /* ty=(Tensor[(11, 7, 2), float64],) */
}

def @func_17268() -> Tensor[(7, 2, 5), float32] {
  %1125 = fn () -> Tensor[(7, 2, 5), float32] {
    %1124 = @func_6746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1124.0
  };
  %1125() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_10644() -> Tensor[(7, 2, 5), float32] {
  %1127 = fn () -> Tensor[(7, 2, 5), float32] {
    %1126 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1126.0
  };
  %1127() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_5600() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1128 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1129 = @func_3980() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1130 = %1128.0;
  %1131 = %1129.1;
  (%1130, %1131)
}

def @func_13760() -> (Tensor[(7, 2, 5), float32],) {
  %1132 = @func_12124() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_9501() -> (Tensor[(7, 2, 5), float32],) {
  @func_9499() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_22659() -> (Tensor[(7, 2, 5), float32],) {
  @func_22657() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_9012() -> Tensor[(11, 7, 2), float64] {
  %1134 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %1134.0
}

def @func_9767(%var_9765: Tensor[(14, 10, 4), uint32], %var_9766: Tensor[(14, 10, 4), uint32]) -> Tensor[(14, 10, 4), uint32] {
  %1139 = fn (%var_9750: Tensor[(14, 10, 4), uint32], %var_9751: Tensor[(14, 10, 4), uint32]) -> Tensor[(14, 10, 4), uint32] {
    %1135 = cast(%var_9751, dtype="uint32") /* ty=Tensor[(14, 10, 4), uint32] */;
    %1136 = shape_of(%var_9750, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1137 = cast(%var_9750, dtype="uint32") /* ty=Tensor[(14, 10, 4), uint32] */;
    %1138 = dyn.reshape(%1135, %1136, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_xor(%1137, %1138) /* ty=Tensor[(14, 10, 4), uint32] */
  };
  %1139(%var_9765, %var_9766) /* ty=Tensor[(14, 10, 4), uint32] */
}

def @func_19708() -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1151 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1140 = @func_14984() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1141 = @func_887() /* ty=(Tensor[(540), bool],) */;
    %1142 = @func_15653() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1143 = @func_6699() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1144 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1145 = %1140.0;
    %1146 = %1141.0;
    %1147 = @func_17356() /* ty=Tensor[(7, 2, 5), float32] */;
    %1148 = %1142.0;
    %1149 = %1143.0;
    %1150 = %1144.0;
    (%1145, %1146, %1147, %1148, %1149, %1150)
  };
  %1151() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_887() -> (Tensor[(540), bool],) {
  %1152 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1153 = %1152.2;
  (%1153,)
}

def @func_1388() -> (Tensor[(7, 2, 5), float32],) {
  %1156 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1154 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1155 = %1154.0;
    (%1155,)
  };
  %1156() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_13206() -> (Tensor[(7, 2, 5), float32],) {
  %1157 = @func_2644() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_16011() -> (Tensor[(7, 2, 5), float32],) {
  %1159 = @func_5996() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1160 = %1159.0;
  (%1160,)
}

def @func_19418(%var_19300: Tensor[(16, 11, 8), float32], %var_19328: Tensor[(154), float64]) -> (Tensor[(16, 11, 8), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1161 = cast(%var_19300, dtype="float32") /* ty=Tensor[(16, 11, 8), float32] */;
  %1162 = @func_9805() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float64]) */;
  %1163 = cast(%var_19328, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1164 = reshape(%1163, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %1165 = @func_17157() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) */;
  %1166 = @func_4336() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1167 = @func_5016() /* ty=(Tensor[(108), float32],) */;
  %1168 = @func_9139() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1169 = %1167.0;
  %1170 = cast(%1169, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1171 = reshape(%1170, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1172 = @func_16167(%1171) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(286), float64], Tensor[(440), int32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1173 = cast(%1169, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1174 = reshape(%1173, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1175 = @func_2031(%1174) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1176 = log10(%1161) /* ty=Tensor[(16, 11, 8), float32] */;
  %1177 = %1162.1;
  %1178 = @func_476(%1164) /* ty=Tensor[(11, 7, 2), float64] */;
  %1179 = %1165.1;
  %1180 = %1166.1;
  %1181 = %1168.1;
  %1182 = @func_17356() /* ty=Tensor[(7, 2, 5), float32] */;
  %1183 = %1172.4;
  %1184 = %1175.1;
  (%1176, %1177, %1178, %var_19328, %1179, %1180, %1169, %1181, %1182, %1183, %1184)
}

def @func_15154() -> Tensor[(7, 2, 5), float32] {
  %1185 = @func_14761() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1185.0
}

def @func_3567(%var_3565: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) {
  @func_3564(%var_3565) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) */
}

def @func_20411(%var_20410: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool, Tensor[(36), bool], Tensor[(7, 2, 5), float32]) {
  %1196 = fn (%var_20399: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool, Tensor[(36), bool], Tensor[(7, 2, 5), float32]) {
    %1186 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1187 = cast(%var_20399, dtype="bool") /* ty=bool */;
    %1188 = cast(meta[relay.Constant][25] /* ty=Tensor[(36), bool] */, dtype="bool") /* ty=Tensor[(36), bool] */;
    %1189 = reshape(%1187, newshape=[]) /* ty=bool */;
    %1190 = reshape(%1188, newshape=[36]) /* ty=Tensor[(36), bool] */;
    %1191 = @func_3876(%1189, %1190) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) */;
    %1192 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1193 = %1186.0;
    %1194 = %1191.0;
    %1195 = %1192.0;
    (%1193, %1194, %var_20399, meta[relay.Constant][25] /* ty=Tensor[(36), bool] */, %1195)
  };
  %1196(%var_20410) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool, Tensor[(36), bool], Tensor[(7, 2, 5), float32]) */
}

def @func_155() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
  @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */
}

def @func_12495() -> Tensor[(154), float64] {
  @func_12493() /* ty=Tensor[(154), float64] */
}

def @func_23113(%var_23111: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool, Tensor[(36), bool], Tensor[(6, 13, 8), float64], Tensor[(8, 78), float64], Tensor[(154), float64]) {
  @func_23110(%var_23111) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool, Tensor[(36), bool], Tensor[(6, 13, 8), float64], Tensor[(8, 78), float64], Tensor[(154), float64]) */
}

def @func_4135() -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1197 = @func_3152() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1198 = @func_1861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) */;
  %1199 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1200 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1201 = %1197.0;
  %1202 = %1198.2;
  %1203 = %1199.0;
  %1204 = %1200.0;
  (%1201, %1202, %1203, %1204)
}

def @func_153() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
  %1205 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %1206 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(7, 2, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1207 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1209 = cast(meta[relay.Constant][28] /* ty=Tensor[(540), bool] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %1210 = reshape(%1209, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), bool] */;
  %1211 = @func_32(%1210) /* ty=(Tensor[(12, 15, 3), bool],) */;
  %1212 = divide(%1207, %1208) /* ty=Tensor[(7, 2, 5), float32] */;
  %1213 = %1211.0;
  (%1212, %1213, meta[relay.Constant][28] /* ty=Tensor[(540), bool] */)
}

def @func_2228() -> Tensor[(108), float32] {
  %1215 = fn () -> Tensor[(108), float32] {
    %1214 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %1214.2
  };
  %1215() /* ty=Tensor[(108), float32] */
}

def @func_10754() -> (Tensor[(7, 2, 5), float32],) {
  @func_10752() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_20071() -> (Tensor[(7, 2, 5), float32],) {
  @func_20069() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_5997() -> (Tensor[(7, 2, 5), float32],) {
  %1218 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1216 = @func_2644() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(1, 36), bool]) */;
    %1217 = %1216.0;
    (%1217,)
  };
  %1218() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_2837(%var_2828: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %1219 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1220 = @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1221 = cast(%var_2828, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1222 = reshape(%1221, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %1223 = @func_525(%1222) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %1224 = %1219.1;
  %1225 = %1220.0;
  %1226 = %1223.1;
  (%1224, %1225, %1226, %var_2828)
}

def @func_20497(%var_20495: Tensor[(9, 12, 1), float64], %var_20496: Tensor[(9, 12, 10), float64]) -> Tensor[(9, 12, 10), float64] {
  @func_20493(%var_20495, %var_20496) /* ty=Tensor[(9, 12, 10), float64] */
}

def @func_10830() -> (Tensor[(7, 2, 5), float32],) {
  %1229 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1227 = @func_4440() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1228 = %1227.0;
    (%1228,)
  };
  %1229() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_10049() -> (Tensor[(108), float32],) {
  %1231 = fn () -> (Tensor[(108), float32],) {
    %1230 = @func_2227() /* ty=Tensor[(108), float32] */;
    (%1230,)
  };
  %1231() /* ty=(Tensor[(108), float32],) */
}

def @func_18849() -> Tensor[(7, 2, 5), float32] {
  @func_18847() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_22020(%var_21998: bool, %var_21999: Tensor[(9, 4), bool], %var_22004: Tensor[(2, 9, 2), bool]) -> (Tensor[(7, 2, 5), float32], bool, Tensor[(9, 4), bool], Tensor[(2, 9, 2), float64]) {
  %1232 = @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1233 = cast(%var_21998, dtype="bool") /* ty=bool */;
  %1234 = cast(%var_21999, dtype="bool") /* ty=Tensor[(9, 4), bool] */;
  %1235 = reshape(%1233, newshape=[]) /* ty=bool */;
  %1236 = reshape(%1234, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %1237 = @func_1250(%1235, %1236) /* ty=(Tensor[(2, 9, 2), bool],) */;
  %1238 = %1237.0;
  %1239 = cast(%var_22004, dtype="float64") /* ty=Tensor[(2, 9, 2), float64] */;
  %1240 = shape_of(%1238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1241 = cast(%1238, dtype="float64") /* ty=Tensor[(2, 9, 2), float64] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1243 = %1232.1;
  %1244 = multiply(%1241, %1242) /* ty=Tensor[(2, 9, 2), float64] */;
  (%1243, %var_21998, %var_21999, %1244)
}

def @func_6822(%var_6821: Tensor[(108), float32]) -> (Tensor[(108), int64],) {
  %1252 = fn (%var_6807: Tensor[(108), float32]) -> (Tensor[(108), int64],) {
    %1245 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
    %1246 = %1245.0;
    %1247 = cast(%var_6807, dtype="int64") /* ty=Tensor[(108), int64] */;
    %1248 = shape_of(%1246, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1249 = cast(%1246, dtype="int64") /* ty=Tensor[(108), int64] */;
    %1250 = dyn.reshape(%1247, %1248, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1251 = minimum(%1249, %1250) /* ty=Tensor[(108), int64] */;
    (%1251,)
  };
  %1252(%var_6821) /* ty=(Tensor[(108), int64],) */
}

def @func_6165() -> (Tensor[(7, 2, 5), float32],) {
  @func_6163() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_14150() -> (Tensor[(540, ?), uint64], Tensor[(7, 2, 5), float32]) {
  %1263 = fn () -> (Tensor[(540, ?), uint64], Tensor[(7, 2, 5), float32]) {
    %1253 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
    %1254 = cast(%1253, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
    %1255 = asinh(%1254) /* ty=Tensor[(540, 1), float32] */;
    %1256 = cast(%1255, dtype="uint64") /* ty=Tensor[(540, 1), uint64] */;
    %1257 = shape_of(%1253, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1258 = cast(%1253, dtype="uint64") /* ty=Tensor[(540, 1), uint64] */;
    %1259 = dyn.reshape(%1256, %1257, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1260 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %1261 = bitwise_or(%1258, %1259) /* ty=Tensor[(540, ?), uint64] */;
    %1262 = %1260.1;
    (%1261, %1262)
  };
  %1263() /* ty=(Tensor[(540, ?), uint64], Tensor[(7, 2, 5), float32]) */
}

def @func_424() -> Tensor[(7, 2, 5), float32] {
  %1264 = fn () -> Tensor[(7, 2, 5), float32] {
    @func_207() /* ty=Tensor[(7, 2, 5), float32] */
  };
  %1264() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_14285() -> Tensor[(7, 2, 5), float32] {
  %1266 = fn () -> Tensor[(7, 2, 5), float32] {
    %1265 = @func_4273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1265.1
  };
  %1266() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_7869() -> (Tensor[(7, 2, 5), float32],) {
  @func_7867() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_15296() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  %1267 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1268 = @func_6480() /* ty=Tensor[(108), float32] */;
  %1269 = %1267.0;
  (%1268, %1269)
}

def @func_9575() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_9573() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_8360() -> Tensor[(7, 2, 5), float32] {
  @func_8358() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_19598() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540, 1), float32], Tensor[(108), float32]) {
  %1277 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540, 1), float32], Tensor[(108), float32]) {
    %1270 = @func_12385() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1271 = @func_10048() /* ty=(Tensor[(108), float32],) */;
    %1272 = @func_17441() /* ty=(Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1273 = %1270.1;
    %1274 = %1271.0;
    %1275 = %1272.0;
    %1276 = @func_6174() /* ty=Tensor[(108), float32] */;
    (%1273, %1274, %1275, %1276)
  };
  %1277() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540, 1), float32], Tensor[(108), float32]) */
}

def @func_7634() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_7632() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_21658() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_21656() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_6373() -> Tensor[(7, 2, 5), float32] {
  %1278 = @func_3964() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1278.1
}

def @func_19767() -> Tensor[(7, 2, 5), float32] {
  %1280 = fn () -> Tensor[(7, 2, 5), float32] {
    %1279 = @func_10261() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1279.0
  };
  %1280() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_13776() -> (Tensor[(7, 2, 5), float32],) {
  %1281 = @func_2373() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1282 = %1281.1;
  (%1282,)
}

def @func_1776() -> (Tensor[(540), bool], Tensor[(154), float64]) {
  %1287 = fn () -> (Tensor[(540), bool], Tensor[(154), float64]) {
    %1283 = @func_887() /* ty=(Tensor[(540), bool],) */;
    %1284 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
    %1285 = %1283.0;
    %1286 = %1284.2;
    (%1285, %1286)
  };
  %1287() /* ty=(Tensor[(540), bool], Tensor[(154), float64]) */
}

def @func_15254(%var_15253: Tensor[(540, 16), bool]) -> (Tensor[(540, 16), bool],) {
  %1293 = fn (%var_15245: Tensor[(540, 16), bool]) -> (Tensor[(540, 16), bool],) {
    %1288 = @func_4490() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(540, 1), bool]) */;
    %1289 = %1288.3;
    %1290 = cast(%1289, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
    %1291 = cast(%var_15245, dtype="bool") /* ty=Tensor[(540, 16), bool] */;
    %1292 = equal(%1290, %1291) /* ty=Tensor[(540, 16), bool] */;
    (%1292,)
  };
  %1293(%var_15253) /* ty=(Tensor[(540, 16), bool],) */
}

def @func_17518() -> (Tensor[(7, 2, 5), float32],) {
  %1294 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1295 = %1294.0;
  (%1295,)
}

def @func_14097() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1296 = @func_6746() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1297 = @func_12271() /* ty=Tensor[(7, 2, 5), float32] */;
  %1298 = %1296.1;
  (%1297, %1298)
}

def @func_6481() -> Tensor[(108), float32] {
  %1300 = fn () -> Tensor[(108), float32] {
    %1299 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
    %1299.0
  };
  %1300() /* ty=Tensor[(108), float32] */
}

def @func_14209() -> Tensor[(11, 7, 13), uint32] {
  @func_14207() /* ty=Tensor[(11, 7, 13), uint32] */
}

def @func_531() -> (Tensor[(7, 2, 5), float32],) {
  %1301 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1301,)
}

def @func_9160() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1306 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1302 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1303 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1304 = %1302.0;
    %1305 = %1303.0;
    (%1304, %1305)
  };
  %1306() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_7127() -> Tensor[(7, 2, 5), float32] {
  @func_7125() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_18754() -> Tensor[(7, 2, 5), float32] {
  %1308 = fn () -> Tensor[(7, 2, 5), float32] {
    %1307 = @func_3172() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1307.0
  };
  %1308() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_7144() -> Tensor[(7, 2, 5), float32] {
  %1309 = @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1309.1
}

def @func_17159() -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) {
  @func_17157() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) */
}

def @func_889() -> (Tensor[(540), bool],) {
  @func_887() /* ty=(Tensor[(540), bool],) */
}

def @func_10449() -> (Tensor[(154), float64], Tensor[(7, 2, 5), float32]) {
  %1310 = @func_1775() /* ty=(Tensor[(540), bool], Tensor[(154), float64]) */;
  %1311 = @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1312 = %1310.1;
  %1313 = %1311.0;
  (%1312, %1313)
}

def @func_19039() -> Tensor[(7, 2, 5), float32] {
  @func_19037() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_456() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1322 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1314 = cast(meta[relay.Constant][29] /* ty=Tensor[(540, 1), bool] */, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
    %1315 = reshape(%1314, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), bool] */;
    %1316 = @func_32(%1315) /* ty=(Tensor[(12, 15, 3), bool],) */;
    %1317 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
    %1318 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
    %1319 = %1316.0;
    %1320 = %1317.0;
    %1321 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1318, %1319, meta[relay.Constant][29] /* ty=Tensor[(540, 1), bool] */, %1320, %1321)
  };
  %1322() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_7798() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 7, 13), uint32], Tensor[(1, 1001), float32]) {
  %1323 = @func_3492() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1324 = @func_5016() /* ty=(Tensor[(108), float32],) */;
  %1325 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 1001), float32] */, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
  %1326 = reshape(%1325, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
  %1327 = %1323.2;
  %1328 = %1324.0;
  %1329 = @func_7046(%1326) /* ty=Tensor[(11, 7, 13), uint32] */;
  (%1327, %1328, %1329, meta[relay.Constant][30] /* ty=Tensor[(1, 1001), float32] */)
}

def @func_20104() -> (Tensor[(108), float32], Tensor[(3, 3, 13), float64], Tensor[(117), float64]) {
  %1334 = fn () -> (Tensor[(108), float32], Tensor[(3, 3, 13), float64], Tensor[(117), float64]) {
    %1330 = cast(meta[relay.Constant][31] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
    %1331 = reshape(%1330, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), float64] */;
    %1332 = @func_15090() /* ty=Tensor[(108), float32] */;
    %1333 = @func_13933(%1331) /* ty=Tensor[(3, 3, 13), float64] */;
    (%1332, %1333, meta[relay.Constant][31] /* ty=Tensor[(117), float64] */)
  };
  %1334() /* ty=(Tensor[(108), float32], Tensor[(3, 3, 13), float64], Tensor[(117), float64]) */
}

def @func_19479() -> (Tensor[(7, 2, 5), float32],) {
  %1335 = @func_12505() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1336 = %1335.0;
  (%1336,)
}

def @func_863() -> (Tensor[(7, 2, 5), float32],) {
  @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_15536() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1341 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1337 = @func_7867() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1338 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1339 = %1337.0;
    %1340 = %1338.0;
    (%1339, %1340)
  };
  %1341() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_21091(%var_21089: Tensor[(154), float64]) -> (Tensor[(1, 3, 10), float32], Tensor[(154), float64], Tensor[(154), float64]) {
  @func_21088(%var_21089) /* ty=(Tensor[(1, 3, 10), float32], Tensor[(154), float64], Tensor[(154), float64]) */
}

def @func_5659() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1342 = @func_4536() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1343 = %1342.0;
  %1344 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1345 = %1344.0;
  %1346 = cast(%1345, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %1347 = shape_of(%1343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(%1343, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1350 = multiply(%1348, %1349) /* ty=Tensor[(7, 2, 5), float32] */;
  %1351 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1350, %1351)
}

def @func_12405() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
  %1356 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
    %1352 = @func_2066() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1353 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
    %1354 = %1352.0;
    %1355 = %1353.1;
    (%1354, %1355)
  };
  %1356() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */
}

def @func_18598() -> (Tensor[(7, 2, 5), float32],) {
  %1357 = @func_1387() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1358 = %1357.0;
  (%1358,)
}

def @func_18809() -> (Tensor[(7, 2, 5), float32],) {
  @func_18807() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_10451() -> (Tensor[(154), float64], Tensor[(7, 2, 5), float32]) {
  @func_10449() /* ty=(Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */
}

def @func_9205() -> Tensor[(7, 2, 5), float32] {
  %1360 = fn () -> Tensor[(7, 2, 5), float32] {
    %1359 = @func_7798() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 7, 13), uint32], Tensor[(1, 1001), float32]) */;
    %1359.0
  };
  %1360() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_6398() -> (Tensor[(7, 2, 5), float32],) {
  @func_6396() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_21886() -> (Tensor[(108), float32],) {
  %1363 = fn () -> (Tensor[(108), float32],) {
    %1361 = @func_8021() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %1362 = %1361.1;
    (%1362,)
  };
  %1363() /* ty=(Tensor[(108), float32],) */
}

def @func_20069() -> (Tensor[(7, 2, 5), float32],) {
  %1364 = @func_11823() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1365 = %1364.0;
  (%1365,)
}

def @func_5570() -> (Tensor[(7, 2, 5), float32],) {
  %1367 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1366 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1366,)
  };
  %1367() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_11823() -> (Tensor[(7, 2, 5), float32],) {
  %1368 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1369 = %1368.1;
  (%1369,)
}

def @func_1253(%var_1251: bool, %var_1252: Tensor[(2, 9, 2), bool]) -> (Tensor[(2, 9, 2), bool],) {
  %1373 = fn (%var_1238: bool, %var_1239: Tensor[(2, 9, 2), bool]) -> (Tensor[(2, 9, 2), bool],) {
    %1370 = cast(%var_1238, dtype="bool") /* ty=bool */;
    %1371 = cast(%var_1239, dtype="bool") /* ty=Tensor[(2, 9, 2), bool] */;
    %1372 = logical_and(%1370, %1371) /* ty=Tensor[(2, 9, 2), bool] */;
    (%1372,)
  };
  %1373(%var_1251, %var_1252) /* ty=(Tensor[(2, 9, 2), bool],) */
}

def @func_7675() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1379 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1374 = @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */;
    %1375 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1376 = %1374.0;
    %1377 = %1375.0;
    %1378 = @func_7226() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1376, %1377, %1378)
  };
  %1379() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_11678(%var_11617: Tensor[(15, 9, 8), int32], %var_11618: Tensor[(15, 9, 8), int32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(15, 9, 8), float64]) {
  %1380 = @func_10449() /* ty=(Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */;
  %1381 = cast(meta[relay.Constant][32] /* ty=Tensor[(36), bool] */, dtype="bool") /* ty=Tensor[(36), bool] */;
  %1382 = reshape(%1381, newshape=[36]) /* ty=Tensor[(36), bool] */;
  %1383 = @func_3786(%1382) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) */;
  %1384 = cast(%var_11618, dtype="bool") /* ty=Tensor[(15, 9, 8), bool] */;
  %1385 = shape_of(%var_11617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1386 = cast(%var_11617, dtype="bool") /* ty=Tensor[(15, 9, 8), bool] */;
  %1387 = dyn.reshape(%1384, %1385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1388 = not_equal(%1386, %1387) /* ty=Tensor[(15, 9, 8), bool] */;
  %1389 = cast(%1388, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
  %1390 = sqrt(%1389) /* ty=Tensor[(15, 9, 8), float32] */;
  %1391 = cast(%1390, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %1392 = %1380.1;
  %1393 = %1383.1;
  %1394 = rsqrt(%1391) /* ty=Tensor[(15, 9, 8), float64] */;
  (%1392, %1393, meta[relay.Constant][32] /* ty=Tensor[(36), bool] */, %1394)
}

def @func_5524(%var_5523: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) {
  %1401 = fn (%var_5514: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) {
    %1395 = @func_1861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) */;
    %1396 = cast(%var_5514, dtype="bool") /* ty=Tensor[(36), bool] */;
    %1397 = reshape(%1396, newshape=[36]) /* ty=Tensor[(36), bool] */;
    %1398 = @func_3786(%1397) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) */;
    %1399 = %1395.1;
    %1400 = %1398.1;
    (%1399, %1400, %var_5514)
  };
  %1401(%var_5523) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */
}

def @func_10387() -> Tensor[(7, 2, 5), float32] {
  %1403 = fn () -> Tensor[(7, 2, 5), float32] {
    %1402 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
    %1402.0
  };
  %1403() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_18477() -> (Tensor[(7, 2, 5), float32],) {
  @func_18475() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_975() -> Tensor[(7, 2, 5), float32] {
  %1405 = fn () -> Tensor[(7, 2, 5), float32] {
    %1404 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1404.0
  };
  %1405() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_19422(%var_19420: Tensor[(16, 11, 8), float32], %var_19421: Tensor[(154), float64]) -> (Tensor[(16, 11, 8), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_19418(%var_19420, %var_19421) /* ty=(Tensor[(16, 11, 8), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_6871() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1406 = @func_2221() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1407 = @func_4135() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1408 = %1406.0;
  %1409 = %1407.3;
  (%1408, %1409)
}

def @func_5252() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_5250() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_2475() -> (Tensor[(7, 2, 5), float32],) {
  %1412 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1410 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1411 = %1410.1;
    (%1411,)
  };
  %1412() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_16500() -> Tensor[(7, 2, 5), float32] {
  @func_16498() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_11825() -> (Tensor[(7, 2, 5), float32],) {
  @func_11823() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_1888() -> Tensor[(7, 2, 5), float32] {
  @func_1886() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_5455() -> (Tensor[(7, 2, 5), float32],) {
  %1415 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1413 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1414 = %1413.0;
    (%1414,)
  };
  %1415() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_14207() -> Tensor[(11, 7, 13), uint32] {
  %1416 = @func_7798() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 7, 13), uint32], Tensor[(1, 1001), float32]) */;
  %1416.2
}

def @func_13778() -> (Tensor[(7, 2, 5), float32],) {
  @func_13776() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_9139() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1417 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1418 = @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1419 = @func_2912() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1420 = @func_3172() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1421 = @func_956() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1422 = @func_8592() /* ty=Tensor[(7, 2, 5), float32] */;
  %1423 = %1417.0;
  %1424 = %1418.0;
  %1425 = %1419.0;
  %1426 = %1420.0;
  %1427 = %1421.0;
  (%1422, %1423, %1424, %1425, %1426, %1427)
}

def @func_9301(%var_9299: Tensor[(6, 18), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(6, 18), float32], Tensor[(12, 15, 3), float32]) {
  @func_9298(%var_9299) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(6, 18), float32], Tensor[(12, 15, 3), float32]) */
}

def @func_6176() -> Tensor[(108), float32] {
  @func_6174() /* ty=Tensor[(108), float32] */
}

def @func_6915() -> (Tensor[(11, 7, 2), float64],) {
  %1430 = fn () -> (Tensor[(11, 7, 2), float64],) {
    %1428 = @func_1114() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
    %1429 = %1428.1;
    (%1429,)
  };
  %1430() /* ty=(Tensor[(11, 7, 2), float64],) */
}

def @func_22525(%var_22523: Tensor[(540), bool], %var_22524: Tensor[(286), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(286), float32]) {
  @func_22521(%var_22523, %var_22524) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(286), float32]) */
}

def @func_18731() -> (Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) {
  %1431 = @func_9573() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1432 = cast(meta[relay.Constant][33] /* ty=Tensor[(65, 6), bool] */, dtype="bool") /* ty=Tensor[(65, 6), bool] */;
  %1433 = cast(meta[relay.Constant][33] /* ty=Tensor[(65, 6), bool] */, dtype="bool") /* ty=Tensor[(65, 6), bool] */;
  %1434 = reshape(%1432, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %1435 = reshape(%1433, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %1436 = @func_13997(%1434, %1435) /* ty=(Tensor[(5, 6, 13), bool], Tensor[(5, 6, 13), uint8]) */;
  %1437 = %1431.0;
  %1438 = %1436.0;
  (%1437, %1438, meta[relay.Constant][33] /* ty=Tensor[(65, 6), bool] */)
}

def @func_2730() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_2728() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_8214() -> (Tensor[(7, 2, 5), float32],) {
  @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_13308() -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) {
  %1444 = fn () -> (Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) {
    %1439 = cast(meta[relay.Constant][34] /* ty=Tensor[(36), bool] */, dtype="bool") /* ty=Tensor[(36), bool] */;
    %1440 = reshape(%1439, newshape=[36]) /* ty=Tensor[(36), bool] */;
    %1441 = @func_5522(%1440) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
    %1442 = @func_6480() /* ty=Tensor[(108), float32] */;
    %1443 = %1441.1;
    (%1442, %1443, meta[relay.Constant][34] /* ty=Tensor[(36), bool] */)
  };
  %1444() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */
}

def @func_4839(%var_4837: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) {
  @func_4836(%var_4837) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) */
}

def @func_4999() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_4672() -> (Tensor[(108), float32], Tensor[(12, 15, 3), float64]) {
  %1445 = @func_764() /* ty=(Tensor[(12, 15, 3), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1446 = %1445.0;
  %1447 = cast(%1446, dtype="float64") /* ty=Tensor[(12, 15, 3), float64] */;
  %1448 = @func_2227() /* ty=Tensor[(108), float32] */;
  %1449 = log(%1447) /* ty=Tensor[(12, 15, 3), float64] */;
  (%1448, %1449)
}

def @func_17358() -> Tensor[(7, 2, 5), float32] {
  @func_17356() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_5948() -> (Tensor[(7, 2, 5), float32],) {
  @func_5946() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_23315() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1450 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
  %1451 = @func_1982() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1452 = %1450.0;
  %1453 = %1451.0;
  (%1452, %1453)
}

def @func_19112() -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64]) {
  %1454 = @func_2123() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1455 = @func_10449() /* ty=(Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */;
  %1456 = %1454.0;
  %1457 = %1455.0;
  (%1456, %1457)
}

def @func_18475() -> (Tensor[(7, 2, 5), float32],) {
  %1458 = @func_9967() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1459 = %1458.1;
  (%1459,)
}

def @func_1953() -> Tensor[(540, 1), bool] {
  %1461 = fn () -> Tensor[(540, 1), bool] {
    %1460 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
    %1460.0
  };
  %1461() /* ty=Tensor[(540, 1), bool] */
}

def @func_19037() -> Tensor[(7, 2, 5), float32] {
  %1462 = @func_16479() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1462.1
}

def @func_16913(%var_16912: Tensor[(12, 15, 3), float64]) -> (Tensor[(12, 15, 3), uint32],) {
  %1470 = fn (%var_16905: Tensor[(12, 15, 3), float64]) -> (Tensor[(12, 15, 3), uint32],) {
    %1463 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
    %1464 = %1463.1;
    %1465 = cast(%var_16905, dtype="uint32") /* ty=Tensor[(12, 15, 3), uint32] */;
    %1466 = shape_of(%1464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1467 = cast(%1464, dtype="uint32") /* ty=Tensor[(12, 15, 3), uint32] */;
    %1468 = dyn.reshape(%1465, %1466, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1469 = bitwise_and(%1467, %1468) /* ty=Tensor[(12, 15, 3), uint32] */;
    (%1469,)
  };
  %1470(%var_16912) /* ty=(Tensor[(12, 15, 3), uint32],) */
}

def @func_7228() -> Tensor[(7, 2, 5), float32] {
  @func_7226() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_14797() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) {
  %1471 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %1472 = @func_13425() /* ty=(Tensor[(4, 3, 4), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1473 = %1471.0;
  %1474 = @func_3040() /* ty=Tensor[(7, 2, 5), float32] */;
  %1475 = %1472.0;
  (%1473, %1474, %1475)
}

def @func_8592() -> Tensor[(7, 2, 5), float32] {
  %1476 = @func_4273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1476.1
}

def @func_861() -> (Tensor[(7, 2, 5), float32],) {
  %1477 = @func_805() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
  %1478 = %1477.1;
  (%1478,)
}

def @func_7290(%var_7275: Tensor[(540, 3), bool]) -> (Tensor[(540, 3), bool], Tensor[(540, 3), uint64]) {
  %1479 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
  %1480 = %1479.0;
  %1481 = cast(%1480, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
  %1482 = cast(%var_7275, dtype="bool") /* ty=Tensor[(540, 3), bool] */;
  %1483 = cast(%var_7275, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %1484 = tan(%1483) /* ty=Tensor[(540, 3), float64] */;
  %1485 = cast(%var_7275, dtype="uint64") /* ty=Tensor[(540, 3), uint64] */;
  %1486 = shape_of(%1484, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1487 = cast(%1484, dtype="uint64") /* ty=Tensor[(540, 3), uint64] */;
  %1488 = dyn.reshape(%1485, %1486, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1489 = less_equal(%1481, %1482) /* ty=Tensor[(540, 3), bool] */;
  %1490 = logical_xor(%1487, %1488) /* ty=Tensor[(540, 3), uint64] */;
  (%1489, %1490)
}

def @func_15653() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1491 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1492 = @func_1886() /* ty=Tensor[(7, 2, 5), float32] */;
  %1493 = %1491.0;
  %1494 = @func_14650() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1492, %1493, %1494)
}

def @func_11976() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_11974() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_17819(%var_17818: Tensor[(560), uint32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(14, 10, 4), uint32], Tensor[(560), uint32]) {
  %1505 = fn (%var_17811: Tensor[(560), uint32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(14, 10, 4), uint32], Tensor[(560), uint32]) {
    %1495 = @func_11742() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1496 = @func_9573() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1497 = cast(%var_17811, dtype="uint32") /* ty=Tensor[(560), uint32] */;
    %1498 = cast(%var_17811, dtype="uint32") /* ty=Tensor[(560), uint32] */;
    %1499 = reshape(%1497, newshape=[14, 10, 4]) /* ty=Tensor[(14, 10, 4), uint32] */;
    %1500 = reshape(%1498, newshape=[14, 10, 4]) /* ty=Tensor[(14, 10, 4), uint32] */;
    %1501 = %1495.3;
    %1502 = @func_14817() /* ty=Tensor[(7, 2, 5), float32] */;
    %1503 = %1496.1;
    %1504 = @func_9764(%1499, %1500) /* ty=Tensor[(14, 10, 4), uint32] */;
    (%1501, %1502, %1503, %1504, %var_17811)
  };
  %1505(%var_17818) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(14, 10, 4), uint32], Tensor[(560), uint32]) */
}

def @func_1733() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_1731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_4899() -> Tensor[(7, 2, 5), float32] {
  @func_4897() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_20493(%var_20486: Tensor[(9, 12, 1), float64], %var_20487: Tensor[(9, 12, 10), float64]) -> Tensor[(9, 12, 10), float64] {
  %1506 = cast(%var_20486, dtype="float64") /* ty=Tensor[(9, 12, 1), float64] */;
  %1507 = cast(%var_20487, dtype="float64") /* ty=Tensor[(9, 12, 10), float64] */;
  divide(%1506, %1507) /* ty=Tensor[(9, 12, 10), float64] */
}

def @func_17400() -> (Tensor[(7, 2, 5), float32],) {
  @func_17398() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_10301() -> Tensor[(7, 2, 5), float32] {
  @func_10299() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_21011() -> (Tensor[(7, 2, 5), float32],) {
  @func_21009() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_22171() -> (Tensor[(7, 2, 5), float32],) {
  @func_22169() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_19114() -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64]) {
  @func_19112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(154), float64]) */
}

def @func_14614(%var_14613: Tensor[(540, 1), int64]) -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154, 1), float64], Tensor[(1, 24), float32], Tensor[(540, ?), int64], Tensor[(7, 2, 5), float32]) {
  %1528 = fn (%var_14591: Tensor[(540, 1), int64]) -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154, 1), float64], Tensor[(1, 24), float32], Tensor[(540, ?), int64], Tensor[(7, 2, 5), float32]) {
    %1508 = @func_10637() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1509 = cast(meta[relay.Constant][35] /* ty=Tensor[(154, 1), float64] */, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
    %1510 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 24), float32] */, dtype="float32") /* ty=Tensor[(1, 24), float32] */;
    %1511 = reshape(%1509, newshape=[154]) /* ty=Tensor[(154), float64] */;
    %1512 = reshape(%1510, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %1513 = @func_4868(%1511, %1512) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(154), float64], Tensor[(24), float32]) */;
    %1514 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
    %1515 = cast(meta[relay.Constant][37] /* ty=Tensor[(540, 1), bool] */, dtype="int64") /* ty=Tensor[(540, 1), int64] */;
    %1516 = shape_of(%1514, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1517 = cast(%1514, dtype="int64") /* ty=Tensor[(540, 1), int64] */;
    %1518 = dyn.reshape(%1515, %1516, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %1519 = subtract(%1517, %1518) /* ty=Tensor[(540, ?), int64] */;
    %1520 = cast(%var_14591, dtype="int64") /* ty=Tensor[(540, 1), int64] */;
    %1521 = shape_of(%1519, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1522 = cast(%1519, dtype="int64") /* ty=Tensor[(540, ?), int64] */;
    %1523 = dyn.reshape(%1520, %1521, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %1524 = %1508.1;
    %1525 = %1513.3;
    %1526 = bitwise_xor(%1522, %1523) /* ty=Tensor[(540, ?), int64] */;
    %1527 = @func_708() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1524, %1525, meta[relay.Constant][35] /* ty=Tensor[(154, 1), float64] */, meta[relay.Constant][36] /* ty=Tensor[(1, 24), float32] */, %1526, %1527)
  };
  %1528(%var_14613) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154, 1), float64], Tensor[(1, 24), float32], Tensor[(540, ?), int64], Tensor[(7, 2, 5), float32]) */
}

def @func_22276(%var_22274: Tensor[(168), int8]) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 14, 6), bool], Tensor[(168), int8]) {
  @func_22273(%var_22274) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 14, 6), bool], Tensor[(168), int8]) */
}

def @func_2066() -> (Tensor[(7, 2, 5), float32],) {
  %1529 = @func_1886() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1529,)
}

def @func_17077() -> Tensor[(7, 2, 5), float32] {
  %1531 = fn () -> Tensor[(7, 2, 5), float32] {
    %1530 = @func_15953() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1530.0
  };
  %1531() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_18780() -> Tensor[(7, 2, 5), float32] {
  @func_7144() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_12125() -> (Tensor[(7, 2, 5), float32],) {
  %1534 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1532 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1533 = %1532.0;
    (%1533,)
  };
  %1534() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_6701() -> (Tensor[(7, 2, 5), float32],) {
  @func_6699() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_19798(%var_19797: Tensor[(540, 1), bool]) -> (Tensor[(540, ?), uint64], Tensor[(286), float64], Tensor[(540, 108), bool]) {
  %1549 = fn (%var_19773: Tensor[(540, 1), bool]) -> (Tensor[(540, ?), uint64], Tensor[(286), float64], Tensor[(540, 108), bool]) {
    %1535 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
    %1536 = %1535.0;
    %1537 = cast(%var_19773, dtype="uint64") /* ty=Tensor[(540, 1), uint64] */;
    %1538 = shape_of(%1536, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1539 = cast(%1536, dtype="uint64") /* ty=Tensor[(540, 1), uint64] */;
    %1540 = dyn.reshape(%1537, %1538, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1541 = cast(meta[relay.Constant][38] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1542 = reshape(%1541, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %1543 = @func_16167(%1542) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(286), float64], Tensor[(440), int32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */;
    %1544 = cast(meta[relay.Constant][38] /* ty=Tensor[(108), float32] */, dtype="bool") /* ty=Tensor[(108), bool] */;
    %1545 = cast(%1536, dtype="bool") /* ty=Tensor[(540, 1), bool] */;
    %1546 = maximum(%1539, %1540) /* ty=Tensor[(540, ?), uint64] */;
    %1547 = %1543.2;
    %1548 = greater(%1544, %1545) /* ty=Tensor[(540, 108), bool] */;
    (%1546, %1547, %1548)
  };
  %1549(%var_19797) /* ty=(Tensor[(540, ?), uint64], Tensor[(286), float64], Tensor[(540, 108), bool]) */
}

def @func_4361() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1550 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1551 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1552 = %1550.0;
  %1553 = %1551.0;
  (%1552, %1553)
}

def @func_708() -> Tensor[(7, 2, 5), float32] {
  %1554 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
  %1555 = cast(%1554, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  tan(%1555) /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_7146() -> Tensor[(7, 2, 5), float32] {
  @func_7144() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_22115() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_22113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_4940() -> Tensor[(7, 2, 5), float32] {
  %1556 = @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1556.0
}

def @func_2222() -> (Tensor[(7, 2, 5), float32],) {
  %1559 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1557 = @func_2103() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1558 = %1557.0;
    (%1558,)
  };
  %1559() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_8594() -> Tensor[(7, 2, 5), float32] {
  @func_8592() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_11267() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(44), int32], Tensor[(440), int32]) {
  %1560 = @func_7591() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32]) */;
  %1561 = @func_4766() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1562 = cast(meta[relay.Constant][39] /* ty=Tensor[(44), int32] */, dtype="int32") /* ty=Tensor[(44), int32] */;
  %1563 = cast(meta[relay.Constant][40] /* ty=Tensor[(440), int32] */, dtype="int32") /* ty=Tensor[(440), int32] */;
  %1564 = reshape(%1562, newshape=[11, 1, 4]) /* ty=Tensor[(11, 1, 4), int32] */;
  %1565 = reshape(%1563, newshape=[11, 10, 4]) /* ty=Tensor[(11, 10, 4), int32] */;
  %1566 = @func_2332(%1564, %1565) /* ty=(Tensor[(11, 10, 4), int32], Tensor[(7, 2, 5), float32]) */;
  %1567 = %1560.3;
  %1568 = %1561.1;
  %1569 = %1566.1;
  (%1567, %1568, %1569, meta[relay.Constant][39] /* ty=Tensor[(44), int32] */, meta[relay.Constant][40] /* ty=Tensor[(440), int32] */)
}

def @func_12669() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1580 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1570 = cast(meta[relay.Constant][41] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %1571 = cast(meta[relay.Constant][41] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %1572 = reshape(%1570, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), int32] */;
    %1573 = reshape(%1571, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), int32] */;
    %1574 = @func_11678(%1572, %1573) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(15, 9, 8), float64]) */;
    %1575 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1576 = @func_10836() /* ty=Tensor[(7, 2, 5), float32] */;
    %1577 = %1574.1;
    %1578 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
    %1579 = %1575.1;
    (%1576, %1577, meta[relay.Constant][41] /* ty=Tensor[(1080), int32] */, %1578, %1579)
  };
  %1580() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_12935() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1581 = @func_6396() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1582 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1583 = %1581.0;
  %1584 = %1582.0;
  (%1583, %1584)
}

def @func_19138() -> (Tensor[(7, 2, 5), float32],) {
  %1587 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1585 = @func_7112() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %1586 = %1585.0;
    (%1586,)
  };
  %1587() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_7069() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
  %1588 = @func_4184() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1589 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %1590 = %1588.0;
  %1591 = %1589.1;
  (%1590, %1591)
}

def @func_7800() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 7, 13), uint32], Tensor[(1, 1001), float32]) {
  @func_7798() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 7, 13), uint32], Tensor[(1, 1001), float32]) */
}

def @func_23250() -> (Tensor[(7, 2, 5), float32],) {
  %1592 = @func_16212() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1592,)
}

def @func_14265() -> (Tensor[(7, 2, 5), float32],) {
  @func_14263() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_6663(%var_6661: Tensor[(2, 9, 14), float32]) -> (Tensor[(2, 9, 14), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 4), int8], Tensor[(7, 2, 5), float32]) {
  @func_6660(%var_6661) /* ty=(Tensor[(2, 9, 14), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 4), int8], Tensor[(7, 2, 5), float32]) */
}

def @func_22898() -> (Tensor[(7, 2, 5), float32],) {
  %1595 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1593 = @func_7632() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1594 = %1593.1;
    (%1594,)
  };
  %1595() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_16608() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
  %1600 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) {
    %1596 = @func_15420() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1597 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
    %1598 = %1596.0;
    %1599 = %1597.1;
    (%1598, %1599)
  };
  %1600() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */
}

def @func_16318(%var_16313: Tensor[(11, 7, 13), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 13), bool]) {
  %1601 = @func_14861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1602 = @func_7506() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64]) */;
  %1603 = @func_4597() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1604 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1605 = @func_14207() /* ty=Tensor[(11, 7, 13), uint32] */;
  %1606 = cast(%1605, dtype="float32") /* ty=Tensor[(11, 7, 13), float32] */;
  %1607 = log2(%1606) /* ty=Tensor[(11, 7, 13), float32] */;
  %1608 = cast(%var_16313, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
  %1609 = shape_of(%1607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1610 = cast(%1607, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
  %1611 = dyn.reshape(%1608, %1609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1612 = %1601.1;
  %1613 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  %1614 = %1602.1;
  %1615 = %1603.0;
  %1616 = %1604.0;
  %1617 = logical_or(%1610, %1611) /* ty=Tensor[(11, 7, 13), bool] */;
  (%1612, %1613, %1614, %1615, %1616, %1617)
}

def @func_22273(%var_22256: Tensor[(168), int8]) -> (Tensor[(7, 2, 5), float32], Tensor[(2, 14, 6), bool], Tensor[(168), int8]) {
  %1618 = cast(%var_22256, dtype="int8") /* ty=Tensor[(168), int8] */;
  %1619 = reshape(%1618, newshape=[2, 14, 6]) /* ty=Tensor[(2, 14, 6), int8] */;
  %1620 = @func_19504(%1619) /* ty=(Tensor[(2, 14, 6), bool],) */;
  %1621 = @func_8776() /* ty=Tensor[(7, 2, 5), float32] */;
  %1622 = %1620.0;
  (%1621, %1622, %var_22256)
}

def @func_19506(%var_19505: Tensor[(2, 14, 6), int8]) -> (Tensor[(2, 14, 6), bool],) {
  %1628 = fn (%var_19499: Tensor[(2, 14, 6), int8]) -> (Tensor[(2, 14, 6), bool],) {
    %1623 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 14, 6), int8] */, dtype="bool") /* ty=Tensor[(2, 14, 6), bool] */;
    %1624 = shape_of(%var_19499, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1625 = cast(%var_19499, dtype="bool") /* ty=Tensor[(2, 14, 6), bool] */;
    %1626 = dyn.reshape(%1623, %1624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1627 = greater_equal(%1625, %1626) /* ty=Tensor[(2, 14, 6), bool] */;
    (%1627,)
  };
  %1628(%var_19505) /* ty=(Tensor[(2, 14, 6), bool],) */
}

def @func_9807() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float64]) {
  @func_9805() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float64]) */
}

def @func_8950() -> Tensor[(7, 2, 5), float32] {
  %1630 = fn () -> Tensor[(7, 2, 5), float32] {
    %1629 = @func_6396() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1629.0
  };
  %1630() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_20032() -> (Tensor[(108), float32],) {
  %1633 = fn () -> (Tensor[(108), float32],) {
    %1631 = @func_13307() /* ty=(Tensor[(108), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool]) */;
    %1632 = %1631.0;
    (%1632,)
  };
  %1633() /* ty=(Tensor[(108), float32],) */
}

def @func_19660() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1637 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1634 = @func_5548() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1635 = %1634.0;
    %1636 = @func_974() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1635, %1636)
  };
  %1637() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_19180(%var_19179: Tensor[(1, 14, 16), bool]) -> (Tensor[(16, 14, 16), bool],) {
  %1641 = fn (%var_19173: Tensor[(1, 14, 16), bool]) -> (Tensor[(16, 14, 16), bool],) {
    %1638 = cast(%var_19173, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
    %1639 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 14, 16), bool] */, dtype="bool") /* ty=Tensor[(16, 14, 16), bool] */;
    %1640 = logical_or(%1638, %1639) /* ty=Tensor[(16, 14, 16), bool] */;
    (%1640,)
  };
  %1641(%var_19179) /* ty=(Tensor[(16, 14, 16), bool],) */
}

def @func_5096() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1642 = @func_4997() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1643 = @func_3818() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1644 = @func_2310() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1645 = %1642.0;
  %1646 = %1643.0;
  %1647 = %1644.0;
  (%1645, %1646, %1647)
}

def @func_16231() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_16229() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_2990() -> (Tensor[(7, 2, 5), float32],) {
  %1648 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1649 = %1648.0;
  (%1649,)
}

def @func_13031() -> (Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(12, 15, 3), bool]) {
  %1650 = @func_153() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
  %1651 = @func_7226() /* ty=Tensor[(7, 2, 5), float32] */;
  %1652 = @func_6174() /* ty=Tensor[(108), float32] */;
  %1653 = %1650.1;
  (%1651, %1652, %1653)
}

def @func_10638() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1658 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1654 = @func_10036() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1655 = @func_7211() /* ty=Tensor[(7, 2, 5), float32] */;
    %1656 = @func_1343() /* ty=Tensor[(7, 2, 5), float32] */;
    %1657 = %1654.0;
    (%1655, %1656, %1657)
  };
  %1658() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_10837() -> Tensor[(7, 2, 5), float32] {
  %1660 = fn () -> Tensor[(7, 2, 5), float32] {
    %1659 = @func_2073() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1659.0
  };
  %1660() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_18733() -> (Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) {
  @func_18731() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(5, 6, 13), bool], Tensor[(65, 6), bool]) */
}

def @func_15092() -> Tensor[(108), float32] {
  @func_15090() /* ty=Tensor[(108), float32] */
}

def @func_18129(%var_18128: Tensor[(11, 14), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 14), float64]) {
  %1668 = fn (%var_18122: Tensor[(11, 14), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 14), float64]) {
    %1661 = cast(meta[relay.Constant][44] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1662 = cast(%var_18122, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
    %1663 = reshape(%1661, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %1664 = reshape(%1662, newshape=[154]) /* ty=Tensor[(154), float64] */;
    %1665 = @func_2600(%1663, %1664) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool]) */;
    %1666 = @func_14284() /* ty=Tensor[(7, 2, 5), float32] */;
    %1667 = %1665.5;
    (%1666, %1667, meta[relay.Constant][44] /* ty=Tensor[(108), float32] */, %var_18122)
  };
  %1668(%var_18128) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(11, 14), float64]) */
}

def @func_4137() -> (Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_4135() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_11974() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1669 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1670 = @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1671 = %1669.0;
  %1672 = %1670.0;
  (%1671, %1672)
}

def @func_2992() -> (Tensor[(7, 2, 5), float32],) {
  @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_12832() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool]) {
  @func_12830() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool]) */
}

def @func_22367() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1677 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1673 = @func_9910() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1674 = @func_2474() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1675 = %1673.1;
    %1676 = %1674.0;
    (%1675, %1676)
  };
  %1677() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_19066() -> (Tensor[(7, 2, 5), float32],) {
  %1679 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1678 = @func_17267() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1678,)
  };
  %1679() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_10788() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1680 = @func_10113() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1681 = @func_4336() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1682 = %1680.1;
  %1683 = %1681.0;
  (%1682, %1683)
}

def @func_3664() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_3662() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_2604(%var_2602: Tensor[(108), float32], %var_2603: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool]) {
  @func_2600(%var_2602, %var_2603) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(108), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), bool]) */
}

def @func_1509() -> (Tensor[(7, 2, 5), float32],) {
  @func_1507() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_22244(%var_22242: Tensor[(1080), float32], %var_22243: Tensor[(540, 2), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, 2), uint8], Tensor[(540, 2), bool]) {
  %1702 = fn (%var_22211: Tensor[(1080), float32], %var_22232: Tensor[(540, 2), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(540, 2), uint8], Tensor[(540, 2), bool]) {
    %1684 = @func_16866() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1685 = cast(%var_22211, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %1686 = cast(%var_22211, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %1687 = reshape(%1685, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
    %1688 = reshape(%1686, newshape=[540, 2]) /* ty=Tensor[(540, 2), float32] */;
    %1689 = @func_13832(%1687, %1688) /* ty=(Tensor[(540, 2), bool], Tensor[(540, 2), uint16]) */;
    %1690 = %1689.0;
    %1691 = cast(%var_22211, dtype="uint8") /* ty=Tensor[(1080), uint8] */;
    %1692 = shape_of(%1690, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1693 = cast(%1690, dtype="uint8") /* ty=Tensor[(540, 2), uint8] */;
    %1694 = dyn.reshape(%1691, %1692, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1695 = cast(%var_22232, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
    %1696 = shape_of(%1690, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1697 = cast(%1690, dtype="bool") /* ty=Tensor[(540, 2), bool] */;
    %1698 = dyn.reshape(%1695, %1696, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1699 = %1684.1;
    %1700 = bitwise_xor(%1693, %1694) /* ty=Tensor[(540, 2), uint8] */;
    %1701 = not_equal(%1697, %1698) /* ty=Tensor[(540, 2), bool] */;
    (%1699, %1700, %1701)
  };
  %1702(%var_22242, %var_22243) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540, 2), uint8], Tensor[(540, 2), bool]) */
}

def @func_12086() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1707 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1703 = @func_6871() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1704 = @func_6353() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1705 = %1703.1;
    %1706 = %1704.1;
    (%1705, %1706)
  };
  %1707() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_19264(%var_19263: Tensor[(540, 10), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 10), uint32], Tensor[(108), float32], Tensor[(108), float32], Tensor[(540, 1), bool]) {
  %1728 = fn (%var_19206: Tensor[(540, 10), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 10), uint32], Tensor[(108), float32], Tensor[(108), float32], Tensor[(540, 1), bool]) {
    %1708 = @func_2221() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1709 = @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */;
    %1710 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
    %1711 = cast(%1710, dtype="uint16") /* ty=Tensor[(540, 1), uint16] */;
    %1712 = cast(%var_19206, dtype="uint16") /* ty=Tensor[(540, 10), uint16] */;
    %1713 = left_shift(%1711, %1712) /* ty=Tensor[(540, 10), uint16] */;
    %1714 = cast(%1713, dtype="float64") /* ty=Tensor[(540, 10), float64] */;
    %1715 = asin(%1714) /* ty=Tensor[(540, 10), float64] */;
    %1716 = cast(meta[relay.Constant][45] /* ty=Tensor[(540, 10), float64] */, dtype="uint32") /* ty=Tensor[(540, 10), uint32] */;
    %1717 = shape_of(%1715, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1718 = cast(%1715, dtype="uint32") /* ty=Tensor[(540, 10), uint32] */;
    %1719 = dyn.reshape(%1716, %1717, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %1720 = cast(meta[relay.Constant][46] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1721 = reshape(%1720, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %1722 = @func_17350(%1721) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(108), float32]) */;
    %1723 = %1708.0;
    %1724 = %1709.0;
    %1725 = bitwise_or(%1718, %1719) /* ty=Tensor[(540, 10), uint32] */;
    %1726 = %1722.2;
    %1727 = @func_1952() /* ty=Tensor[(540, 1), bool] */;
    (%1723, %1724, %1725, %1726, meta[relay.Constant][46] /* ty=Tensor[(108), float32] */, %1727)
  };
  %1728(%var_19263) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 10), uint32], Tensor[(108), float32], Tensor[(108), float32], Tensor[(540, 1), bool]) */
}

def @func_6163() -> (Tensor[(7, 2, 5), float32],) {
  %1729 = @func_5548() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1730 = %1729.1;
  (%1730,)
}

def @func_18256() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(1080), int32], Tensor[(7, 2, 5), float32]) {
  %1731 = @func_14861() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1732 = @func_17157() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) */;
  %1733 = @func_12668() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1734 = @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1735 = @func_17618() /* ty=Tensor[(7, 2, 5), float32] */;
  %1736 = %1731.0;
  %1737 = @func_16498() /* ty=Tensor[(7, 2, 5), float32] */;
  %1738 = %1732.2;
  %1739 = %1733.2;
  %1740 = %1734.1;
  (%1735, %1736, %1737, %1738, %1739, %1740)
}

def @func_13097(%var_13096: Tensor[(36), bool]) -> (Tensor[(12, 15, 3), float64], Tensor[(36), bool], Tensor[(36), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1750 = fn (%var_13041: Tensor[(36), bool]) -> (Tensor[(12, 15, 3), float64], Tensor[(36), bool], Tensor[(36), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1741 = @func_7069() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64]) */;
    %1742 = cast(%var_13041, dtype="bool") /* ty=Tensor[(36), bool] */;
    %1743 = reshape(%1742, newshape=[36]) /* ty=Tensor[(36), bool] */;
    %1744 = @func_3786(%1743) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(36), bool]) */;
    %1745 = @func_1273() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1746 = %1741.1;
    %1747 = %1744.3;
    %1748 = @func_3040() /* ty=Tensor[(7, 2, 5), float32] */;
    %1749 = %1745.0;
    (%1746, %1747, %var_13041, %1748, %1749)
  };
  %1750(%var_13096) /* ty=(Tensor[(12, 15, 3), float64], Tensor[(36), bool], Tensor[(36), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_2034(%var_2032: Tensor[(108), float32]) -> (Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) {
  @func_2031(%var_2032) /* ty=(Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */
}

def @func_10299() -> Tensor[(7, 2, 5), float32] {
  %1751 = @func_4440() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1751.0
}

def @func_21582() -> (Tensor[(7, 2, 5), float32],) {
  %1752 = @func_14779() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1753 = %1752.0;
  (%1753,)
}

def @func_17398() -> (Tensor[(7, 2, 5), float32],) {
  %1754 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1754,)
}

def @func_4059() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_4057() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_20354() -> (Tensor[(7, 2, 5), float32],) {
  @func_20352() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_23172() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_23170() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_19019() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1763 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1755 = @func_10637() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1756 = @func_18057() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1757 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1758 = @func_6786() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(108), float32]) */;
    %1759 = %1755.0;
    %1760 = %1756.0;
    %1761 = %1757.0;
    %1762 = %1758.0;
    (%1759, %1760, %1761, %1762)
  };
  %1763() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_16481() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_16479() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_12937() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_12935() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_18910() -> (Tensor[(108), float32],) {
  %1764 = @func_6480() /* ty=Tensor[(108), float32] */;
  (%1764,)
}

def @func_8930(%var_8928: Tensor[(15, 1, 11), float32], %var_8929: Tensor[(15, 4, 11), float32]) -> (Tensor[(15, 4, 11), float32], Tensor[(8, 1, 15), bool], uint8, Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_8926(%var_8928, %var_8929) /* ty=(Tensor[(15, 4, 11), float32], Tensor[(8, 1, 15), bool], uint8, Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_6396() -> (Tensor[(7, 2, 5), float32],) {
  %1765 = @func_207() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1765,)
}

def @func_16479() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1766 = @func_8483() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1767 = %1766.1;
  %1768 = @func_14284() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1767, %1768)
}

def @func_19984(%var_19979: Tensor[(588), bool]) -> (Tensor[(540, 1), float32], Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(588), bool]) {
  %1769 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %1770 = @func_11231() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) */;
  %1771 = cast(%var_19979, dtype="bool") /* ty=Tensor[(588), bool] */;
  %1772 = reshape(%1771, newshape=[588]) /* ty=Tensor[(588), bool] */;
  %1773 = @func_11084(%1772) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(588), bool]) */;
  %1774 = %1769.0;
  %1775 = %1770.0;
  %1776 = %1773.0;
  (%1774, %1775, %1776, %var_19979)
}

def @func_11231() -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32]) {
  %1777 = @func_6914() /* ty=(Tensor[(11, 7, 2), float64],) */;
  %1778 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1779 = %1777.0;
  %1780 = %1778.0;
  (%1779, %1780)
}

def @func_1304() -> (Tensor[(7, 2, 5), float32],) {
  %1783 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1781 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1782 = %1781.0;
    (%1782,)
  };
  %1783() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_12273() -> Tensor[(7, 2, 5), float32] {
  @func_12271() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_18451() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1789 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1784 = @func_14263() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1785 = @func_13520() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1786 = %1784.0;
    %1787 = @func_10299() /* ty=Tensor[(7, 2, 5), float32] */;
    %1788 = %1785.1;
    (%1786, %1787, %1788)
  };
  %1789() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_5098() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  @func_5096() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_23110(%var_23061: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool, Tensor[(36), bool], Tensor[(6, 13, 8), float64], Tensor[(8, 78), float64], Tensor[(154), float64]) {
  %1790 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1791 = cast(%var_23061, dtype="bool") /* ty=Tensor[(36), bool] */;
  %1792 = cast(%var_23061, dtype="bool") /* ty=Tensor[(36), bool] */;
  %1793 = reshape(%1790, newshape=[]) /* ty=bool */;
  %1794 = reshape(%1791, newshape=[9, 4]) /* ty=Tensor[(9, 4), bool] */;
  %1795 = reshape(%1792, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %1796 = @func_22020(%1793, %1794, %1795) /* ty=(Tensor[(7, 2, 5), float32], bool, Tensor[(9, 4), bool], Tensor[(2, 9, 2), float64]) */;
  %1797 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 78), float64] */, dtype="float64") /* ty=Tensor[(8, 78), float64] */;
  %1798 = cast(meta[relay.Constant][48] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1799 = reshape(%1797, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), float64] */;
  %1800 = reshape(%1798, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %1801 = @func_15868(%1799, %1800) /* ty=(Tensor[(6, 13, 8), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64], Tensor[(7, 2, 5), float32]) */;
  %1802 = @func_5387() /* ty=Tensor[(7, 2, 5), float32] */;
  %1803 = %1796.0;
  %1804 = %1801.0;
  (%1802, %1803, True /* ty=bool */, %var_23061, %1804, meta[relay.Constant][47] /* ty=Tensor[(8, 78), float64] */, meta[relay.Constant][48] /* ty=Tensor[(154), float64] */)
}

def @func_627(%var_626: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
  %1813 = fn (%var_607: Tensor[(108), float32]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) {
    %1805 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1806 = cast(%var_607, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1807 = reshape(%1806, newshape=[12, 1, 9]) /* ty=Tensor[(12, 1, 9), float32] */;
    %1808 = @func_568(%1807) /* ty=(Tensor[(12, 1, 9), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1809 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
    %1810 = %1805.0;
    %1811 = %1808.0;
    %1812 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1809, %1810, %1811, %var_607, %1812)
  };
  %1813(%var_626) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(12, 1, 9), float32], Tensor[(108), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_11813() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1817 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1814 = @func_5454() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1815 = @func_10299() /* ty=Tensor[(7, 2, 5), float32] */;
    %1816 = %1814.0;
    (%1815, %1816)
  };
  %1817() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_14303(%var_14302: Tensor[(6, 11, 13), float64]) -> (Tensor[(6, 11, 13), float64], Tensor[(7, 2, 5), float32]) {
  %1822 = fn (%var_14288: Tensor[(6, 11, 13), float64]) -> (Tensor[(6, 11, 13), float64], Tensor[(7, 2, 5), float32]) {
    %1818 = cast(%var_14288, dtype="float64") /* ty=Tensor[(6, 11, 13), float64] */;
    %1819 = @func_11742() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1820 = tan(%1818) /* ty=Tensor[(6, 11, 13), float64] */;
    %1821 = %1819.1;
    (%1820, %1821)
  };
  %1822(%var_14302) /* ty=(Tensor[(6, 11, 13), float64], Tensor[(7, 2, 5), float32]) */
}

def @func_13164(%var_13162: Tensor[(1080), int32], %var_13163: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(15, 9, 8), float64], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool) {
  %1836 = fn (%var_13117: Tensor[(1080), int32], %var_13155: bool) -> (Tensor[(7, 2, 5), float32], Tensor[(15, 9, 8), float64], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool) {
    %1823 = cast(%var_13117, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %1824 = cast(%var_13117, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %1825 = reshape(%1823, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), int32] */;
    %1826 = reshape(%1824, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), int32] */;
    %1827 = @func_11678(%1825, %1826) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(36), bool], Tensor[(15, 9, 8), float64]) */;
    %1828 = @func_9967() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1829 = cast(%var_13155, dtype="bool") /* ty=bool */;
    %1830 = reshape(%1829, newshape=[]) /* ty=bool */;
    %1831 = @func_1973(%1830) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(1, 36), bool], Tensor[(7, 2, 5), float32]) */;
    %1832 = @func_7211() /* ty=Tensor[(7, 2, 5), float32] */;
    %1833 = %1827.3;
    %1834 = %1828.2;
    %1835 = %1831.4;
    (%1832, %1833, %var_13117, %1834, %1835, %var_13155)
  };
  %1836(%var_13162, %var_13163) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(15, 9, 8), float64], Tensor[(1080), int32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], bool) */
}

def @func_710() -> Tensor[(7, 2, 5), float32] {
  @func_708() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_741() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) {
  @func_739() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */
}

def @func_14000(%var_13998: Tensor[(5, 6, 13), bool], %var_13999: Tensor[(5, 6, 13), bool]) -> (Tensor[(5, 6, 13), bool], Tensor[(5, 6, 13), uint8]) {
  %1847 = fn (%var_13972: Tensor[(5, 6, 13), bool], %var_13973: Tensor[(5, 6, 13), bool]) -> (Tensor[(5, 6, 13), bool], Tensor[(5, 6, 13), uint8]) {
    %1837 = cast(%var_13973, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
    %1838 = shape_of(%var_13972, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1839 = cast(%var_13972, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
    %1840 = dyn.reshape(%1837, %1838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1841 = cast(%var_13973, dtype="uint8") /* ty=Tensor[(5, 6, 13), uint8] */;
    %1842 = shape_of(%var_13972, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1843 = cast(%var_13972, dtype="uint8") /* ty=Tensor[(5, 6, 13), uint8] */;
    %1844 = dyn.reshape(%1841, %1842, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1845 = logical_or(%1839, %1840) /* ty=Tensor[(5, 6, 13), bool] */;
    %1846 = maximum(%1843, %1844) /* ty=Tensor[(5, 6, 13), uint8] */;
    (%1845, %1846)
  };
  %1847(%var_13998, %var_13999) /* ty=(Tensor[(5, 6, 13), bool], Tensor[(5, 6, 13), uint8]) */
}

def @func_2913() -> (Tensor[(7, 2, 5), float32],) {
  %1850 = fn () -> (Tensor[(7, 2, 5), float32],) {
    %1848 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1849 = %1848.2;
    (%1849,)
  };
  %1850() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_20211(%var_20209: Tensor[(6, 4, 7), float32]) -> (Tensor[(6, 4, 7), float32], Tensor[(154), float64]) {
  @func_20208(%var_20209) /* ty=(Tensor[(6, 4, 7), float32], Tensor[(154), float64]) */
}

def @func_1862() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) {
  %1857 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) {
    %1851 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1852 = @func_1303() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1853 = @func_739() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540), bool]) */;
    %1854 = %1851.0;
    %1855 = %1852.0;
    %1856 = %1853.2;
    (%1854, %1855, %1856)
  };
  %1857() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool]) */
}

def @func_6174() -> Tensor[(108), float32] {
  %1858 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %1858.0
}

def @func_18008(%var_18003: Tensor[(4, 3, 4), bool]) -> (Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) {
  %1859 = @func_4672() /* ty=(Tensor[(108), float32], Tensor[(12, 15, 3), float64]) */;
  %1860 = @func_4361() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1861 = @func_2990() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1862 = @func_14797() /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) */;
  %1863 = %1862.2;
  %1864 = cast(%var_18003, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %1865 = shape_of(%1863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1866 = cast(%1863, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %1867 = dyn.reshape(%1864, %1865, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1868 = %1859.1;
  %1869 = %1860.1;
  %1870 = %1861.0;
  %1871 = greater_equal(%1866, %1867) /* ty=Tensor[(4, 3, 4), bool] */;
  (%1868, %1869, %1870, %1871)
}

def @func_22657() -> (Tensor[(7, 2, 5), float32],) {
  %1872 = @func_9573() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1873 = %1872.0;
  (%1873,)
}

def @func_17441() -> (Tensor[(540, 1), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1874 = @func_5740() /* ty=(Tensor[(540, 1), float32],) */;
  %1875 = @func_15535() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1876 = %1874.0;
  %1877 = %1875.0;
  %1878 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1876, %1877, %1878)
}

def @func_3879(%var_3877: bool, %var_3878: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) {
  %1889 = fn (%var_3857: bool, %var_3858: Tensor[(36), bool]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) {
    %1879 = @func_1933() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1880 = @func_861() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1881 = cast(%var_3857, dtype="bool") /* ty=bool */;
    %1882 = cast(%var_3858, dtype="bool") /* ty=Tensor[(36), bool] */;
    %1883 = reshape(%1881, newshape=[]) /* ty=bool */;
    %1884 = reshape(%1882, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
    %1885 = @func_1250(%1883, %1884) /* ty=(Tensor[(2, 9, 2), bool],) */;
    %1886 = %1879.1;
    %1887 = %1880.0;
    %1888 = %1885.0;
    (%1886, %1887, %1888, %var_3857, %var_3858)
  };
  %1889(%var_3877, %var_3878) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(2, 9, 2), bool], bool, Tensor[(36), bool]) */
}

def @func_10262() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1894 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1890 = @func_7632() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1891 = @func_8212() /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1892 = %1890.1;
    %1893 = %1891.0;
    (%1892, %1893)
  };
  %1894() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_17157() -> (Tensor[(7, 2, 5), float32], Tensor[(154), float64], Tensor[(154), float64]) {
  %1895 = cast(meta[relay.Constant][49] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1896 = reshape(%1895, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %1897 = @func_525(%1896) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %1898 = @func_3040() /* ty=Tensor[(7, 2, 5), float32] */;
  %1899 = %1897.2;
  (%1898, %1899, meta[relay.Constant][49] /* ty=Tensor[(154), float64] */)
}

def @func_12042() -> (Tensor[(7, 2, 5), float32],) {
  %1900 = @func_9805() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540, 1), float64]) */;
  %1901 = %1900.0;
  (%1901,)
}

def @func_15600() -> (Tensor[(7, 2, 5), float32],) {
  %1902 = @func_531() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1903 = %1902.0;
  (%1903,)
}

def @func_3207(%var_3206: Tensor[(3, 3, 11), float64]) -> (Tensor[(3, 3, 11), float64], Tensor[(7, 2, 5), float32]) {
  %1908 = fn (%var_3174: Tensor[(3, 3, 11), float64]) -> (Tensor[(3, 3, 11), float64], Tensor[(7, 2, 5), float32]) {
    %1904 = cast(%var_3174, dtype="float64") /* ty=Tensor[(3, 3, 11), float64] */;
    %1905 = @func_2148() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1906 = acosh(%1904) /* ty=Tensor[(3, 3, 11), float64] */;
    %1907 = %1905.1;
    (%1906, %1907)
  };
  %1908(%var_3206) /* ty=(Tensor[(3, 3, 11), float64], Tensor[(7, 2, 5), float32]) */
}

def @func_527(%var_526: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %1913 = fn (%var_512: Tensor[(154), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
    %1909 = cast(%var_512, dtype="float64") /* ty=Tensor[(154), float64] */;
    %1910 = reshape(%1909, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
    %1911 = @func_423() /* ty=Tensor[(7, 2, 5), float32] */;
    %1912 = @func_476(%1910) /* ty=Tensor[(11, 7, 2), float64] */;
    (%1911, %1912, %var_512)
  };
  %1913(%var_526) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */
}

def @func_18847() -> Tensor[(7, 2, 5), float32] {
  %1914 = @func_6699() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1914.0
}

def @func_1934() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1918 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1915 = @func_455() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), bool], Tensor[(540, 1), bool], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1916 = %1915.3;
    %1917 = @func_1485() /* ty=Tensor[(7, 2, 5), float32] */;
    (%1916, %1917)
  };
  %1918() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

def @func_1507() -> (Tensor[(7, 2, 5), float32],) {
  %1919 = @func_1079() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1919,)
}

def @func_18822() -> Tensor[(7, 2, 5), float32] {
  %1920 = @func_11742() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1920.4
}

def @func_9499() -> (Tensor[(7, 2, 5), float32],) {
  %1921 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1922 = %1921.0;
  (%1922,)
}

def @func_6444(%var_6442: Tensor[(11, 6, 13), uint32], %var_6443: Tensor[(11, 6, 13), uint32]) -> (Tensor[(11, 6, 13), int8], Tensor[(7, 2, 5), float32]) {
  @func_6440(%var_6442, %var_6443) /* ty=(Tensor[(11, 6, 13), int8], Tensor[(7, 2, 5), float32]) */
}

def @func_2187() -> (Tensor[(7, 2, 5), float32],) {
  %1923 = @func_1660() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1924 = %1923.0;
  (%1924,)
}

def @func_8778() -> Tensor[(7, 2, 5), float32] {
  @func_8776() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_17520() -> (Tensor[(7, 2, 5), float32],) {
  @func_17518() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_3662() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1925 = @func_1166() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1926 = %1925.0;
  %1927 = @func_3040() /* ty=Tensor[(7, 2, 5), float32] */;
  (%1926, %1927)
}

def @func_21656() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1928 = @func_5284() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1929 = @func_2912() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1930 = %1928.0;
  %1931 = %1929.0;
  (%1930, %1931)
}

def @func_22521(%var_22478: Tensor[(540), bool], %var_22508: Tensor[(286), float64]) -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(540), bool], Tensor[(7, 2, 5), float32], Tensor[(286), float32]) {
  %1932 = @func_9038() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1933 = @func_12505() /* ty=(Tensor[(7, 2, 5), float32],) */;
  %1934 = @func_10982() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
  %1935 = cast(%var_22478, dtype="bool") /* ty=Tensor[(540), bool] */;
  %1936 = reshape(%1935, newshape=[540, 1]) /* ty=Tensor[(540, 1), bool] */;
  %1937 = @func_19796(%1936) /* ty=(Tensor[(540, ?), uint64], Tensor[(286), float64], Tensor[(540, 108), bool]) */;
  %1938 = %1937.1;
  %1939 = cast(%var_22508, dtype="float32") /* ty=Tensor[(286), float32] */;
  %1940 = shape_of(%1938, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1941 = cast(%1938, dtype="float32") /* ty=Tensor[(286), float32] */;
  %1942 = dyn.reshape(%1939, %1940, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1943 = %1932.1;
  %1944 = %1933.0;
  %1945 = %1934.0;
  %1946 = floor_mod(%1941, %1942) /* ty=Tensor[(286), float32] */;
  (%1943, %1944, %var_22478, %1945, %1946)
}

def @func_18573() -> (Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool]) {
  %1950 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool]) {
    %1947 = @func_1326() /* ty=(Tensor[(540, 1), bool],) */;
    %1948 = @func_1886() /* ty=Tensor[(7, 2, 5), float32] */;
    %1949 = %1947.0;
    (%1948, %1949)
  };
  %1950() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(540, 1), bool]) */
}

def @func_11888() -> (Tensor[(7, 2, 5), float32],) {
  @func_11886() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_5389() -> Tensor[(7, 2, 5), float32] {
  @func_5387() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_21303() -> (Tensor[(11, 7, 2), float64],) {
  @func_21301() /* ty=(Tensor[(11, 7, 2), float64],) */
}

def @func_21252() -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64], Tensor[(48), bool]) {
  %1957 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64], Tensor[(48), bool]) {
    %1951 = @func_7028() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1952 = cast(meta[relay.Constant][50] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %1953 = reshape(%1952, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), bool] */;
    %1954 = @func_18008(%1953) /* ty=(Tensor[(12, 15, 3), float64], Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32], Tensor[(4, 3, 4), bool]) */;
    %1955 = %1951.1;
    %1956 = %1954.0;
    (%1955, %1956, meta[relay.Constant][50] /* ty=Tensor[(48), bool] */)
  };
  %1957() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(12, 15, 3), float64], Tensor[(48), bool]) */
}

def @func_13787() -> (Tensor[(7, 2, 5), float32],) {
  @func_13785() /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_16867() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
  %1962 = fn () -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) {
    %1958 = @func_7506() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(11, 7, 2), float64]) */;
    %1959 = @func_4766() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */;
    %1960 = %1958.0;
    %1961 = %1959.0;
    (%1960, %1961)
  };
  %1962() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen981/build/output.py", line 7689, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [15:13:46] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


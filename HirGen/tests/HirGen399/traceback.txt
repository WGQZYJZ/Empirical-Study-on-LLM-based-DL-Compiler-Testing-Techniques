==========mod==========
#[version = "0.0.5"]
def @func_4056() -> (Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) {
  %0 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
  %1 = cast(%0, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %2 = asinh(%1) /* ty=Tensor[(7, 15, ?), float64] */;
  %3 = cast(%0, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%2, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %8 = reshape(%7, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %9 = @func_3829(%8) /* ty=(Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), bool]) */;
  %10 = equal(%5, %6) /* ty=Tensor[(7, 15, ?), bool] */;
  %11 = %9.1;
  %12 = @func_3958() /* ty=Tensor[(7, 15, ?), float32] */;
  (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(630), float32] */, %12)
}

def @func_1842() -> (Tensor[(7, 15, ?), float32],) {
  %13 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %14 = %13.0;
  (%14,)
}

def @func_5251() -> (Tensor[(504), float64],) {
  %15 = @func_4351() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(286), uint16], Tensor[(504), float64]) */;
  %16 = %15.2;
  (%16,)
}

def @func_5507() -> (Tensor[(7, 15, ?), float32],) {
  %17 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
  (%17,)
}

def @func_3376() -> (Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) {
  %18 = @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */;
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %20 = reshape(%19, newshape=[6, 84]) /* ty=Tensor[(6, 84), float64] */;
  %21 = @func_2436(%20) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(4, 9, 14), float64], Tensor[(6, 84), float64], Tensor[(7, 15, ?), float32]) */;
  %22 = %18.3;
  %23 = %21.2;
  (%22, %23, meta[relay.Constant][1] /* ty=Tensor[(504), float64] */)
}

def @func_6418(%var_6411: Tensor[(900), int8]) -> (Tensor[(6, 12, 11), float64], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(900), int8]) {
  %24 = @func_5470() /* ty=(Tensor[(6, 12, 11), float64], Tensor[(7, 15, 792), bool], Tensor[(792), float32]) */;
  %25 = cast(%var_6411, dtype="int8") /* ty=Tensor[(900), int8] */;
  %26 = reshape(%25, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %27 = @func_2700(%26) /* ty=(Tensor[(900), float32], Tensor[(7, 15, 5), float64], Tensor[(6, 6, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) */;
  %28 = %24.0;
  %29 = @func_6027() /* ty=Tensor[(7, 15, ?), float32] */;
  %30 = %27.2;
  (%28, %29, %30, %var_6411)
}

def @main(%var_7197: Tensor[(7, 15, 9), float64]) -> (Tensor[(7, 15, 9), float64],) {
  %31 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %33 = cast(%var_7197, dtype="float64") /* ty=Tensor[(7, 15, 9), float64] */;
  %34 = floor_mod(%32, %33) /* ty=Tensor[(7, 15, 9), float64] */;
  (%34,)
}

def @func_2700(%var_2640: Tensor[(900), int8]) -> (Tensor[(900), float32], Tensor[(7, 15, 5), float64], Tensor[(6, 6, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) {
  %35 = cast(%var_2640, dtype="int8") /* ty=Tensor[(900), int8] */;
  %36 = reshape(%35, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %37 = @func_2406(%36) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
  %38 = %37.0;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  %40 = shape_of(%var_2640, dtype="int32") /* ty=Tensor[(1), int32] */;
  %41 = cast(%var_2640, dtype="float32") /* ty=Tensor[(900), float32] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?), float32] */;
  %43 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %44 = %43.1;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 5), float32] */;
  %47 = power(%45, %46) /* ty=Tensor[(7, 15, 5), float32] */;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %49 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %50 = %49.1;
  %51 = cast(%50, dtype="float32") /* ty=Tensor[(6, 6, 2), float32] */;
  %52 = reshape(%51, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %53 = @func_399(%52) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %56 = reshape(%54, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %57 = reshape(%55, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %58 = @func_1527(%56, %57) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) */;
  %59 = floor_mod(%41, %42) /* ty=Tensor[(900), float32] */;
  %60 = atanh(%48) /* ty=Tensor[(7, 15, 5), float64] */;
  %61 = %53.0;
  %62 = @func_2548() /* ty=Tensor[(7, 15, ?), float32] */;
  %63 = %58.1;
  (%59, %60, %50, %61, %62, %63, meta[relay.Constant][3] /* ty=Tensor[(286), uint16] */)
}

def @func_580() -> Tensor[(7, 15, ?), float32] {
  %64 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 1), float32] */;
  %65 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(7, 15, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 1), float32] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%66, %67) /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_2045() -> (Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) {
  %68 = cast(meta[relay.Constant][6] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %69 = reshape(%68, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %70 = @func_399(%69) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %71 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %72 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %73 = %70.0;
  %74 = %71.1;
  (%72, %73, meta[relay.Constant][6] /* ty=Tensor[(72), float32] */, %74)
}

def @func_4655() -> Tensor[(7, 15, ?), float32] {
  %75 = @func_4056() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */;
  %75.3
}

def @func_6154(%var_6145: Tensor[(560), uint32]) -> (Tensor[(3150), int8], Tensor[(7, 15, 3150), int32], Tensor[(560), uint32], Tensor[(7, 15, ?), float32]) {
  %76 = @func_4506() /* ty=(Tensor[(3150), int8],) */;
  %77 = cast(%var_6145, dtype="uint32") /* ty=Tensor[(560), uint32] */;
  %78 = reshape(%77, newshape=[14, 5, 8]) /* ty=Tensor[(14, 5, 8), uint32] */;
  %79 = @func_5767(%78) /* ty=(Tensor[(14, 5, 8), uint32], Tensor[(7, 15, 3150), int32]) */;
  %80 = %76.0;
  %81 = %79.1;
  %82 = @func_1830() /* ty=Tensor[(7, 15, ?), float32] */;
  (%80, %81, %var_6145, %82)
}

def @func_748(%var_740: Tensor[(4, 9, 14), float64], %var_741: Tensor[(4, 9, 14), float64]) -> (Tensor[(4, 9, 14), float64],) {
  %83 = cast(%var_741, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %84 = shape_of(%var_740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%var_740, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %87 = power(%85, %86) /* ty=Tensor[(4, 9, 14), float64] */;
  (%87,)
}

def @func_1863() -> (Tensor[(7, 15, ?), float32],) {
  %88 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %89 = cast(%88, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %90 = log10(%89) /* ty=Tensor[(7, 15, ?), float32] */;
  (%90,)
}

def @func_668(%var_655: Tensor[(7, 15, 6), float32]) -> (Tensor[(7, 15, 6), int32],) {
  %91 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
  %92 = cast(%91, dtype="int32") /* ty=Tensor[(7, 15, ?), int32] */;
  %93 = cast(%var_655, dtype="int32") /* ty=Tensor[(7, 15, 6), int32] */;
  %94 = right_shift(%92, %93) /* ty=Tensor[(7, 15, 6), int32] */;
  (%94,)
}

def @func_1409() -> Tensor[(7, 15, ?), float32] {
  %95 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %95.0
}

def @func_6027() -> Tensor[(7, 15, ?), float32] {
  %96 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %96.0
}

def @func_5602(%var_5600: Tensor[(55, 7), bool]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(55, 7), bool]) {
  %97 = @func_3905() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %98 = cast(%var_5600, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %99 = cast(%var_5600, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %100 = reshape(%98, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
  %101 = reshape(%99, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
  %102 = @func_1890(%100, %101) /* ty=(Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) */;
  %103 = %97.0;
  %104 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  %105 = %102.1;
  (%103, %104, %105, %var_5600)
}

def @func_5319(%var_5307: Tensor[(6, 12, 11), float64]) -> Tensor[(6, 12, 11), float64] {
  %106 = cast(%var_5307, dtype="float64") /* ty=Tensor[(6, 12, 11), float64] */;
  log2(%106) /* ty=Tensor[(6, 12, 11), float64] */
}

def @func_6697(%var_6682: Tensor[(7, 15, 13), float32]) -> Tensor[(7, 15, 13), bool] {
  %107 = @func_5507() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %108 = %107.0;
  %109 = cast(%108, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %110 = cast(%var_6682, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  greater_equal(%109, %110) /* ty=Tensor[(7, 15, 13), bool] */
}

def @func_6532() -> (Tensor[(3150), int8],) {
  %111 = @func_5679() /* ty=(Tensor[(3150), int8],) */;
  %112 = %111.0;
  (%112,)
}

def @func_6445() -> (Tensor[(7, 15, ?), float64],) {
  %113 = @func_1781() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %114 = %113.0;
  (%114,)
}

def @func_2068() -> (Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
  %115 = @func_1863() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %116 = %115.0;
  %117 = cast(%116, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %118 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 15, 16), float32] */, dtype="bool") /* ty=Tensor[(7, 15, 16), bool] */;
  %119 = cast(meta[relay.Constant][8] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %120 = reshape(%119, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %121 = @func_1068(%120) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %122 = less_equal(%117, %118) /* ty=Tensor[(7, 15, 16), bool] */;
  %123 = %121.2;
  (%122, %123, meta[relay.Constant][8] /* ty=Tensor[(72), float32] */)
}

def @func_4506() -> (Tensor[(3150), int8],) {
  %124 = @func_3586() /* ty=Tensor[(3150), int8] */;
  (%124,)
}

def @func_2916(%var_2868: Tensor[(7, 15, 9), float32]) -> (Tensor[(7, 15, 9), int8], Tensor[(7, 15, 9), uint16], Tensor[(7, 15, 9), bool], Tensor[(7, 15, ?), float32]) {
  %125 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %126 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
  %127 = cast(%126, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %128 = cast(%var_2868, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
  %129 = less(%127, %128) /* ty=Tensor[(7, 15, 9), bool] */;
  %130 = cast(%125, dtype="int8") /* ty=Tensor[(7, 15, ?), int8] */;
  %131 = cast(%129, dtype="int8") /* ty=Tensor[(7, 15, 9), int8] */;
  %132 = cast(%129, dtype="uint16") /* ty=Tensor[(7, 15, 9), uint16] */;
  %133 = cast(%125, dtype="uint16") /* ty=Tensor[(7, 15, ?), uint16] */;
  %134 = cast(%var_2868, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
  %135 = cast(%125, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %136 = multiply(%130, %131) /* ty=Tensor[(7, 15, 9), int8] */;
  %137 = minimum(%132, %133) /* ty=Tensor[(7, 15, 9), uint16] */;
  %138 = equal(%134, %135) /* ty=Tensor[(7, 15, 9), bool] */;
  %139 = @func_1830() /* ty=Tensor[(7, 15, ?), float32] */;
  (%136, %137, %138, %139)
}

def @func_4067() -> Tensor[(7, 15, ?), float32] {
  %140 = @func_4056() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */;
  %140.3
}

def @func_7106(%var_6938: Tensor[(7, 15, 3150), float64], %var_6950: Tensor[(72), float32], %var_6955: Tensor[(756), uint32], %var_6974: Tensor[(560), uint32], %var_7013: Tensor[(900), int8], %var_7034: Tensor[(14, 6, 9), bool], %var_7068: Tensor[(3150), int8]) -> (Tensor[(7, 15, 3150), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(756), uint32], Tensor[(7, 15, ?), float32], Tensor[(14, 5, 8), uint32], Tensor[(560), uint32], Tensor[(14, 6, 9), float64], Tensor[(13, 15, 3), uint16], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(72), float32], Tensor[(14, 6, 9), float64], Tensor[(14, 6, 9), float32], Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8], Tensor[(7, 15, ?), float32], Tensor[(7, 15, 3150), float64]) {
  %141 = @func_6737() /* ty=Tensor[(7, 15, 3150), float64] */;
  %142 = cast(%var_6938, dtype="bool") /* ty=Tensor[(7, 15, 3150), bool] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="bool") /* ty=Tensor[(7, 15, 3150), bool] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %146 = cast(%var_6950, dtype="float32") /* ty=Tensor[(72), float32] */;
  %147 = reshape(%146, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %148 = @func_399(%147) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %149 = cast(%var_6974, dtype="uint32") /* ty=Tensor[(560), uint32] */;
  %150 = reshape(%149, newshape=[14, 5, 8]) /* ty=Tensor[(14, 5, 8), uint32] */;
  %151 = @func_5767(%150) /* ty=(Tensor[(14, 5, 8), uint32], Tensor[(7, 15, 3150), int32]) */;
  %152 = cast(%var_6955, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %153 = reshape(%152, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), uint32] */;
  %154 = @func_2582(%153) /* ty=Tensor[(14, 6, 9), uint32] */;
  %155 = cast(%154, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
  %156 = acosh(%155) /* ty=Tensor[(14, 6, 9), float64] */;
  %157 = cast(%156, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
  %158 = @func_4944() /* ty=(Tensor[(13, 15, 3), uint16], Tensor[(7, 15, 13), uint8], Tensor[(13, 15, 3), float64]) */;
  %159 = cast(%var_7013, dtype="int8") /* ty=Tensor[(900), int8] */;
  %160 = reshape(%159, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %161 = @func_2406(%160) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
  %162 = @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */;
  %163 = cast(%156, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  %164 = exp(%163) /* ty=Tensor[(14, 6, 9), float32] */;
  %165 = cast(%156, dtype="bool") /* ty=Tensor[(14, 6, 9), bool] */;
  %166 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%164, dtype="bool") /* ty=Tensor[(14, 6, 9), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = logical_or(%167, %168) /* ty=Tensor[(14, 6, 9), bool] */;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
  %171 = cast(%var_7034, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  %172 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%169, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %175 = cast(%var_7068, dtype="int8") /* ty=Tensor[(3150), int8] */;
  %176 = cast(%var_7068, dtype="int8") /* ty=Tensor[(3150), int8] */;
  %177 = reshape(%175, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
  %178 = reshape(%176, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
  %179 = @func_2836(%177, %178) /* ty=(Tensor[(15, 15, 14), bool],) */;
  %180 = @func_6359() /* ty=(Tensor[(504), float64], Tensor[(7, 15, 3150), float64]) */;
  %181 = not_equal(%144, %145) /* ty=Tensor[(7, 15, 3150), bool] */;
  %182 = %148.0;
  %183 = @func_6027() /* ty=Tensor[(7, 15, ?), float32] */;
  %184 = %151.0;
  %185 = atan(%157) /* ty=Tensor[(14, 6, 9), float64] */;
  %186 = %158.0;
  %187 = %161.2;
  %188 = %162.2;
  %189 = atanh(%170) /* ty=Tensor[(14, 6, 9), float64] */;
  %190 = mod(%173, %174) /* ty=Tensor[(14, 6, 9), float32] */;
  %191 = @func_6844() /* ty=Tensor[(7, 15, ?), float32] */;
  %192 = %179.0;
  %193 = @func_4655() /* ty=Tensor[(7, 15, ?), float32] */;
  %194 = %180.1;
  (%181, %182, %var_6950, %var_6955, %183, %184, %var_6974, %185, %186, %187, %var_7013, %188, %189, %190, %191, %192, %var_7068, %193, %194)
}

def @func_4530() -> Tensor[(7, 15, ?), float32] {
  %195 = @func_1590() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %195.1
}

def @func_815() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
  %196 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
  %197 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  (%196, %197)
}

def @func_1248(%var_1198: Tensor[(7, 15, 11), float64], %var_1218: Tensor[(7, 15, 11), uint32]) -> (Tensor[(7, 15, 6), int32], Tensor[(630), float32], Tensor[(7, 15, 11), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
  %198 = cast(meta[relay.Constant][9] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %199 = reshape(%198, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %200 = @func_668(%199) /* ty=(Tensor[(7, 15, 6), int32],) */;
  %201 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %202 = cast(%201, dtype="uint32") /* ty=Tensor[(7, 15, ?), uint32] */;
  %203 = cast(%var_1198, dtype="uint32") /* ty=Tensor[(7, 15, 11), uint32] */;
  %204 = add(%202, %203) /* ty=Tensor[(7, 15, 11), uint32] */;
  %205 = cast(%var_1218, dtype="float64") /* ty=Tensor[(7, 15, 11), float64] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%204, dtype="float64") /* ty=Tensor[(7, 15, 11), float64] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %209 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %210 = %200.0;
  %211 = minimum(%207, %208) /* ty=Tensor[(7, 15, 11), float64] */;
  %212 = %209.2;
  %213 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
  (%210, meta[relay.Constant][9] /* ty=Tensor[(630), float32] */, %211, %212, %213)
}

def @func_5924(%var_5888: Tensor[(70, 9), float32], %var_5914: Tensor[(72), float32], %var_5919: Tensor[(900), int8]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, 630), bool], Tensor[(70, 9), float32], Tensor[(3150), int8], Tensor[(7, 15, 14), bool], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(15, 5, 12), int32], Tensor[(900), int8]) {
  %214 = @func_3905() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %215 = cast(%var_5888, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %216 = reshape(%215, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %217 = @func_3829(%216) /* ty=(Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), bool]) */;
  %218 = cast(meta[relay.Constant][10] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %219 = cast(%var_5914, dtype="float32") /* ty=Tensor[(72), float32] */;
  %220 = reshape(%218, newshape=[7, 15, 14]) /* ty=Tensor[(7, 15, 14), float32] */;
  %221 = reshape(%219, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %222 = @func_4858(%220, %221) /* ty=(Tensor[(7, 15, 14), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %223 = cast(%var_5919, dtype="int8") /* ty=Tensor[(900), int8] */;
  %224 = reshape(%223, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %225 = @func_2406(%224) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
  %226 = %214.0;
  %227 = %217.1;
  %228 = @func_5139() /* ty=Tensor[(3150), int8] */;
  %229 = %222.0;
  %230 = %225.0;
  (%226, %227, %var_5888, %228, %229, meta[relay.Constant][10] /* ty=Tensor[(1470), float32] */, %var_5914, %230, %var_5919)
}

def @func_1590() -> (Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) {
  %231 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %232 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %233 = %232.0;
  %234 = cast(%233, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %235 = %231.1;
  %236 = log(%234) /* ty=Tensor[(7, 15, ?), float32] */;
  (%235, %236)
}

def @func_1781() -> (Tensor[(7, 15, ?), float64],) {
  %237 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %238 = %237.1;
  %239 = cast(%238, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %240 = erf(%239) /* ty=Tensor[(7, 15, ?), float64] */;
  (%240,)
}

def @func_3018() -> Tensor[(7, 15, ?), float32] {
  %241 = @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %241.0
}

def @func_5414() -> Tensor[(7, 1, 6), float64] {
  %242 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 1, 6), float64] */, dtype="float64") /* ty=Tensor[(7, 1, 6), float64] */;
  sin(%242) /* ty=Tensor[(7, 1, 6), float64] */
}

def @func_3958() -> Tensor[(7, 15, ?), float32] {
  %243 = @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */;
  %243.0
}

def @func_3190(%var_3174: Tensor[(15, 15, 14), bool]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(15, 15, 14), float64]) {
  %244 = cast(meta[relay.Constant][12] /* ty=Tensor[(3150), int8] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
  %245 = cast(meta[relay.Constant][12] /* ty=Tensor[(3150), int8] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
  %246 = reshape(%244, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
  %247 = reshape(%245, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
  %248 = @func_2836(%246, %247) /* ty=(Tensor[(15, 15, 14), bool],) */;
  %249 = %248.0;
  %250 = cast(%var_3174, dtype="float64") /* ty=Tensor[(15, 15, 14), float64] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="float64") /* ty=Tensor[(15, 15, 14), float64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %254 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %255 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %256 = divide(%252, %253) /* ty=Tensor[(15, 15, 14), float64] */;
  (%254, %255, meta[relay.Constant][12] /* ty=Tensor[(3150), int8] */, %256)
}

def @func_4258() -> Tensor[(3150), int8] {
  @func_3586() /* ty=Tensor[(3150), int8] */
}

def @func_2436(%var_2430: Tensor[(6, 84), float64]) -> (Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(4, 9, 14), float64], Tensor[(6, 84), float64], Tensor[(7, 15, ?), float32]) {
  %257 = @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */;
  %258 = cast(%var_2430, dtype="float64") /* ty=Tensor[(6, 84), float64] */;
  %259 = cast(%var_2430, dtype="float64") /* ty=Tensor[(6, 84), float64] */;
  %260 = reshape(%258, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float64] */;
  %261 = reshape(%259, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float64] */;
  %262 = @func_748(%260, %261) /* ty=(Tensor[(4, 9, 14), float64],) */;
  %263 = @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %264 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
  %265 = %257.1;
  %266 = %262.0;
  %267 = %263.0;
  (%264, %265, %266, %var_2430, %267)
}

def @func_6782() -> Tensor[(7, 15, ?), float32] {
  %268 = @func_1863() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %268.0
}

def @func_2406(%var_2377: Tensor[(900), int8]) -> (Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) {
  %269 = cast(%var_2377, dtype="int8") /* ty=Tensor[(900), int8] */;
  %270 = reshape(%269, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), int8] */;
  %271 = @func_2146(%270) /* ty=Tensor[(15, 5, 12), float64] */;
  %272 = cast(%var_2377, dtype="int32") /* ty=Tensor[(900), int32] */;
  %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%271, dtype="int32") /* ty=Tensor[(15, 5, 12), int32] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %276 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %277 = %276.2;
  %278 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
  %279 = cast(%277, dtype="uint8") /* ty=Tensor[(72), uint8] */;
  %280 = cast(%278, dtype="uint8") /* ty=Tensor[(7, 15, ?), uint8] */;
  %281 = @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %282 = logical_xor(%274, %275) /* ty=Tensor[(15, 5, 12), int32] */;
  %283 = multiply(%279, %280) /* ty=Tensor[(7, 15, 72), uint8] */;
  %284 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %285 = %281.0;
  (%282, %283, %284, %285)
}

def @func_5579() -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, 3150), float64]) {
  %286 = @func_3905() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %287 = @func_4993() /* ty=(Tensor[(7, 15, 3150), float64], Tensor[(7, 15, ?), float64]) */;
  %288 = %286.0;
  %289 = %287.0;
  (%288, %289)
}

def @func_4944() -> (Tensor[(13, 15, 3), uint16], Tensor[(7, 15, 13), uint8], Tensor[(13, 15, 3), float64]) {
  %290 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 15, 1), uint16] */, dtype="uint16") /* ty=Tensor[(13, 15, 1), uint16] */;
  %291 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 15, 3), uint16] */, dtype="uint16") /* ty=Tensor[(13, 15, 3), uint16] */;
  %292 = @func_2548() /* ty=Tensor[(7, 15, ?), float32] */;
  %293 = cast(%292, dtype="uint8") /* ty=Tensor[(7, 15, ?), uint8] */;
  %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 15, 13), float32] */, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %295 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 15, 3), uint16] */, dtype="float64") /* ty=Tensor[(13, 15, 3), float64] */;
  %296 = minimum(%290, %291) /* ty=Tensor[(13, 15, 3), uint16] */;
  %297 = bitwise_xor(%293, %294) /* ty=Tensor[(7, 15, 13), uint8] */;
  %298 = exp(%295) /* ty=Tensor[(13, 15, 3), float64] */;
  (%296, %297, %298)
}

def @func_3137(%var_3096: Tensor[(1, 900), int8]) -> (Tensor[(15, 5, 12), int32], Tensor[(7, 15, ?), uint32], Tensor[(7, 15, 900), int32], Tensor[(7, 15, 900), int16], Tensor[(7, 15, ?), float32]) {
  %299 = cast(%var_3096, dtype="int8") /* ty=Tensor[(1, 900), int8] */;
  %300 = reshape(%299, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %301 = @func_2406(%300) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
  %302 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %303 = %302.1;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %305 = acos(%304) /* ty=Tensor[(7, 15, ?), float32] */;
  %306 = cast(%303, dtype="uint32") /* ty=Tensor[(7, 15, ?), uint32] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="uint32") /* ty=Tensor[(7, 15, ?), uint32] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %310 = cast(%var_3096, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
  %311 = cast(%303, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %312 = power(%310, %311) /* ty=Tensor[(7, 15, 900), float32] */;
  %313 = cast(%312, dtype="int32") /* ty=Tensor[(7, 15, 900), int32] */;
  %314 = cast(%303, dtype="int32") /* ty=Tensor[(7, 15, ?), int32] */;
  %315 = cast(%305, dtype="int16") /* ty=Tensor[(7, 15, ?), int16] */;
  %316 = cast(%312, dtype="int16") /* ty=Tensor[(7, 15, 900), int16] */;
  %317 = %301.0;
  %318 = multiply(%308, %309) /* ty=Tensor[(7, 15, ?), uint32] */;
  %319 = bitwise_and(%313, %314) /* ty=Tensor[(7, 15, 900), int32] */;
  %320 = logical_xor(%315, %316) /* ty=Tensor[(7, 15, 900), int16] */;
  %321 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  (%317, %318, %319, %320, %321)
}

def @func_5234(%var_5218: Tensor[(4, 9, 14), float64]) -> Tensor[(4, 9, 14), float64] {
  %322 = @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */;
  %323 = %322.1;
  %324 = cast(%var_5218, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%326, %327) /* ty=Tensor[(4, 9, 14), float64] */
}

def @func_5070(%var_5026: Tensor[(7, 15, 2), float64], %var_5044: Tensor[(7, 15, 2), float64]) -> (Tensor[(7, 15, 2), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, 2), float64], Tensor[(13, 15, 3), uint16]) {
  %328 = @func_2175() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %329 = %328.0;
  %330 = cast(%329, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %331 = cast(%var_5026, dtype="float64") /* ty=Tensor[(7, 15, 2), float64] */;
  %332 = cast(%var_5044, dtype="float64") /* ty=Tensor[(7, 15, 2), float64] */;
  %333 = shape_of(%var_5026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_5026, dtype="float64") /* ty=Tensor[(7, 15, 2), float64] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %336 = @func_4944() /* ty=(Tensor[(13, 15, 3), uint16], Tensor[(7, 15, 13), uint8], Tensor[(13, 15, 3), float64]) */;
  %337 = power(%330, %331) /* ty=Tensor[(7, 15, 2), float64] */;
  %338 = @func_4067() /* ty=Tensor[(7, 15, ?), float32] */;
  %339 = floor_mod(%334, %335) /* ty=Tensor[(7, 15, 2), float64] */;
  %340 = %336.0;
  (%337, %338, %339, %340)
}

def @func_1313(%var_1273: Tensor[(630), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), int16], Tensor[(72), float32], Tensor[(7, 15, 630), float64], Tensor[(6, 6, 2), bool], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) {
  %341 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %342 = cast(%var_1273, dtype="float32") /* ty=Tensor[(630), float32] */;
  %343 = reshape(%342, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %344 = @func_668(%343) /* ty=(Tensor[(7, 15, 6), int32],) */;
  %345 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %346 = %345.0;
  %347 = cast(%var_1273, dtype="int16") /* ty=Tensor[(630), int16] */;
  %348 = cast(%346, dtype="int16") /* ty=Tensor[(7, 15, ?), int16] */;
  %349 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %350 = %349.0;
  %351 = cast(%var_1273, dtype="float64") /* ty=Tensor[(630), float64] */;
  %352 = cast(%350, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %353 = cast(meta[relay.Constant][16] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %354 = reshape(%353, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %355 = @func_399(%354) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %356 = %355.0;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(6, 6, 2), float32] */;
  %358 = rsqrt(%357) /* ty=Tensor[(6, 6, 2), float32] */;
  %359 = cast(%356, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
  %360 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%358, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %363 = cast(meta[relay.Constant][17] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %364 = cast(meta[relay.Constant][17] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %365 = reshape(%363, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float64] */;
  %366 = reshape(%364, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float64] */;
  %367 = @func_748(%365, %366) /* ty=(Tensor[(4, 9, 14), float64],) */;
  %368 = %341.2;
  %369 = %344.0;
  %370 = bitwise_and(%347, %348) /* ty=Tensor[(7, 15, 630), int16] */;
  %371 = floor_divide(%351, %352) /* ty=Tensor[(7, 15, 630), float64] */;
  %372 = equal(%361, %362) /* ty=Tensor[(6, 6, 2), bool] */;
  %373 = %367.0;
  (%368, %369, %370, meta[relay.Constant][16] /* ty=Tensor[(72), float32] */, %371, %372, %373, meta[relay.Constant][17] /* ty=Tensor[(504), float64] */)
}

def @func_1068(%var_1063: Tensor[(72), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
  %374 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %375 = cast(%var_1063, dtype="float32") /* ty=Tensor[(72), float32] */;
  %376 = reshape(%375, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %377 = @func_399(%376) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %378 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %379 = %374.0;
  %380 = %377.0;
  (%378, %379, %380, %var_1063)
}

def @func_2811(%var_2753: Tensor[(7, 15, 2), float32], %var_2802: Tensor[(900), int8], %var_2807: Tensor[(286), uint16]) -> (Tensor[(7, 15, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(55, 7), bool], Tensor[(7, 15, 1680), float32], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) {
  %381 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %382 = %381.0;
  %383 = cast(%382, dtype="uint64") /* ty=Tensor[(7, 15, ?), uint64] */;
  %384 = cast(%var_2753, dtype="uint64") /* ty=Tensor[(7, 15, 2), uint64] */;
  %385 = logical_xor(%383, %384) /* ty=Tensor[(7, 15, 2), uint64] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(7, 15, 2), float32] */;
  %387 = cast(meta[relay.Constant][18] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %388 = cast(meta[relay.Constant][19] /* ty=Tensor[(55, 7), bool] */, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %389 = reshape(%387, newshape=[7, 15, 16]) /* ty=Tensor[(7, 15, 16), float64] */;
  %390 = reshape(%388, newshape=[55, 7]) /* ty=Tensor[(55, 7), bool] */;
  %391 = @func_2338(%389, %390) /* ty=(Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), bool], Tensor[(7, 15, ?), float64], Tensor[(6, 6, 2), float32]) */;
  %392 = cast(%382, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %393 = cast(meta[relay.Constant][18] /* ty=Tensor[(1680), float64] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %394 = cast(%var_2802, dtype="int8") /* ty=Tensor[(900), int8] */;
  %395 = reshape(%394, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %396 = @func_2406(%395) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
  %397 = cast(%var_2807, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %398 = cast(%var_2807, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %399 = reshape(%397, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %400 = reshape(%398, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %401 = @func_1527(%399, %400) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) */;
  %402 = atan(%386) /* ty=Tensor[(7, 15, 2), float32] */;
  %403 = %391.5;
  %404 = floor_divide(%392, %393) /* ty=Tensor[(7, 15, 1680), float32] */;
  %405 = %396.2;
  %406 = %401.1;
  (%402, %403, meta[relay.Constant][19] /* ty=Tensor[(55, 7), bool] */, %404, %405, %var_2802, %406, %var_2807)
}

def @func_1944(%var_1930: Tensor[(10, 8, 1), float64]) -> (Tensor[(10, 8, 1), float64],) {
  %407 = cast(%var_1930, dtype="float64") /* ty=Tensor[(10, 8, 1), float64] */;
  %408 = asin(%407) /* ty=Tensor[(10, 8, 1), float64] */;
  (%408,)
}

def @func_5096(%var_5084: Tensor[(15, 6, 9), uint64]) -> (Tensor[(15, 6, 9), uint64],) {
  %409 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 6, 9), uint64] */, dtype="uint64") /* ty=Tensor[(15, 6, 9), uint64] */;
  %410 = shape_of(%var_5084, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%var_5084, dtype="uint64") /* ty=Tensor[(15, 6, 9), uint64] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %413 = left_shift(%411, %412) /* ty=Tensor[(15, 6, 9), uint64] */;
  (%413,)
}

def @func_1015() -> Tensor[(7, 15, ?), float64] {
  %414 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %415 = cast(%414, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %416 = exp(%415) /* ty=Tensor[(7, 15, ?), float32] */;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  rsqrt(%417) /* ty=Tensor[(7, 15, ?), float64] */
}

def @func_1110() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) {
  %418 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %419 = %418.1;
  %420 = cast(%419, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %421 = log2(%420) /* ty=Tensor[(7, 15, ?), float64] */;
  %422 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %423 = %422.0;
  %424 = cast(%423, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %425 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%421, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %428 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %429 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %430 = logical_and(%426, %427) /* ty=Tensor[(7, 15, ?), bool] */;
  %431 = %428.0;
  (%429, %430, %431)
}

def @func_962() -> (Tensor[(7, 15, ?), float32],) {
  %432 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %433 = cast(%432, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %434 = sigmoid(%433) /* ty=Tensor[(7, 15, ?), float32] */;
  (%434,)
}

def @func_3963() -> (Tensor[(7, 15, ?), float32],) {
  %435 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  (%435,)
}

def @func_6359() -> (Tensor[(504), float64], Tensor[(7, 15, 3150), float64]) {
  %436 = @func_5251() /* ty=(Tensor[(504), float64],) */;
  %437 = @func_3693() /* ty=(Tensor[(7, 15, 3150), float64],) */;
  %438 = %436.0;
  %439 = %437.0;
  (%438, %439)
}

def @func_2629() -> (Tensor[(7, 15, ?), bool], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float32]) {
  %440 = @func_1590() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %441 = cast(meta[relay.Constant][21] /* ty=Tensor[(55, 7), bool] */, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %442 = cast(meta[relay.Constant][21] /* ty=Tensor[(55, 7), bool] */, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %443 = reshape(%441, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
  %444 = reshape(%442, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
  %445 = @func_1890(%443, %444) /* ty=(Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) */;
  %446 = cast(meta[relay.Constant][21] /* ty=Tensor[(55, 7), bool] */, dtype="float32") /* ty=Tensor[(55, 7), float32] */;
  %447 = %440.0;
  %448 = %445.0;
  %449 = log10(%446) /* ty=Tensor[(55, 7), float32] */;
  (%447, %448, %449)
}

def @func_2987() -> Tensor[(2, 9, 3), float64] {
  %450 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 3), float64] */;
  %451 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2, 9, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 3), float64] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%452, %453) /* ty=Tensor[(2, 9, 3), float64] */
}

def @func_3325(%var_3320: Tensor[(36, 14), float64]) -> (Tensor[(7, 15, ?), float32], Tensor[(2, 13, 11), uint16], Tensor[(286), uint16], Tensor[(6, 6, 2), float32], Tensor[(36, 14), float64]) {
  %454 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %455 = cast(meta[relay.Constant][24] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %456 = cast(meta[relay.Constant][24] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %457 = reshape(%455, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %458 = reshape(%456, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %459 = @func_1527(%457, %458) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) */;
  %460 = cast(%var_3320, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %461 = reshape(%460, newshape=[6, 84]) /* ty=Tensor[(6, 84), float64] */;
  %462 = @func_2436(%461) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(4, 9, 14), float64], Tensor[(6, 84), float64], Tensor[(7, 15, ?), float32]) */;
  %463 = cast(%var_3320, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %464 = %454.0;
  %465 = %459.0;
  %466 = %462.1;
  %467 = cosh(%463) /* ty=Tensor[(36, 14), float64] */;
  (%464, %465, meta[relay.Constant][24] /* ty=Tensor[(286), uint16] */, %466, %467)
}

def @func_3457() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) {
  %468 = cast(meta[relay.Constant][25] /* ty=Tensor[(3150), bool] */, dtype="bool") /* ty=Tensor[(3150), bool] */;
  %469 = reshape(%468, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %470 = @func_3190(%469) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(15, 15, 14), float64]) */;
  %471 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  %472 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  %473 = %470.2;
  (%471, %472, %473, meta[relay.Constant][25] /* ty=Tensor[(3150), bool] */)
}

def @func_399(%var_388: Tensor[(6, 6, 2), float32]) -> (Tensor[(6, 6, 2), float32],) {
  %474 = cast(%var_388, dtype="float32") /* ty=Tensor[(6, 6, 2), float32] */;
  %475 = cosh(%474) /* ty=Tensor[(6, 6, 2), float32] */;
  (%475,)
}

def @func_2548() -> Tensor[(7, 15, ?), float32] {
  @func_2242() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_3693() -> (Tensor[(7, 15, 3150), float64],) {
  %476 = @func_3586() /* ty=Tensor[(3150), int8] */;
  %477 = @func_2119() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %478 = %477.0;
  %479 = cast(%476, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %480 = cast(%478, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %481 = power(%479, %480) /* ty=Tensor[(7, 15, 3150), float64] */;
  (%481,)
}

def @func_4640(%var_4560: Tensor[(210), float32], %var_4562: Tensor[(286), uint16]) -> (Tensor[(7, 15, 1680), float32], Tensor[(210), float32], Tensor[(900), int8], Tensor[(286), uint16], Tensor[(6, 5, 2), float32], Tensor[(3150), int8], Tensor[(225, 14), bool], Tensor[(10, 8, 1), float64], Tensor[(2, 40), float64], Tensor[(3150), int8], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float64]) {
  %482 = cast(%var_4560, dtype="float32") /* ty=Tensor[(210), float32] */;
  %483 = cast(meta[relay.Constant][26] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %484 = cast(%var_4562, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %485 = reshape(%482, newshape=[7, 15, 2]) /* ty=Tensor[(7, 15, 2), float32] */;
  %486 = reshape(%483, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %487 = reshape(%484, newshape=[286]) /* ty=Tensor[(286), uint16] */;
  %488 = @func_2811(%485, %486, %487) /* ty=(Tensor[(7, 15, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(55, 7), bool], Tensor[(7, 15, 1680), float32], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) */;
  %489 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 5, 2), float32] */;
  %490 = rsqrt(%489) /* ty=Tensor[(6, 5, 2), float32] */;
  %491 = cast(%490, dtype="float32") /* ty=Tensor[(6, 5, 2), float32] */;
  %492 = cast(meta[relay.Constant][28] /* ty=Tensor[(225, 14), bool] */, dtype="bool") /* ty=Tensor[(225, 14), bool] */;
  %493 = reshape(%492, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %494 = @func_3190(%493) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(15, 15, 14), float64]) */;
  %495 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 40), float64] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %496 = reshape(%495, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float64] */;
  %497 = @func_1944(%496) /* ty=(Tensor[(10, 8, 1), float64],) */;
  %498 = @func_4506() /* ty=(Tensor[(3150), int8],) */;
  %499 = @func_3340() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %500 = %488.3;
  %501 = asin(%491) /* ty=Tensor[(6, 5, 2), float32] */;
  %502 = %494.2;
  %503 = %497.0;
  %504 = %498.0;
  %505 = @func_3958() /* ty=Tensor[(7, 15, ?), float32] */;
  %506 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  %507 = %499.0;
  (%500, %var_4560, meta[relay.Constant][26] /* ty=Tensor[(900), int8] */, %var_4562, %501, %502, meta[relay.Constant][28] /* ty=Tensor[(225, 14), bool] */, %503, meta[relay.Constant][29] /* ty=Tensor[(2, 40), float64] */, %504, %505, %506, %507)
}

def @func_5564() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
  %508 = @func_3944() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32]) */;
  %509 = @func_2119() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %510 = %508.1;
  %511 = %509.0;
  (%510, %511)
}

def @func_2582(%var_2571: Tensor[(14, 6, 9), uint32]) -> Tensor[(14, 6, 9), uint32] {
  %512 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 6, 9), uint32] */, dtype="uint32") /* ty=Tensor[(14, 6, 9), uint32] */;
  %513 = shape_of(%var_2571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(%var_2571, dtype="uint32") /* ty=Tensor[(14, 6, 9), uint32] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%514, %515) /* ty=Tensor[(14, 6, 9), uint32] */
}

def @func_6064() -> (Tensor[(7, 15, ?), float64], Tensor[(504), float64]) {
  %516 = @func_1830() /* ty=Tensor[(7, 15, ?), float32] */;
  %517 = cast(%516, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %518 = @func_5251() /* ty=(Tensor[(504), float64],) */;
  %519 = acosh(%517) /* ty=Tensor[(7, 15, ?), float64] */;
  %520 = %518.0;
  (%519, %520)
}

def @func_6126() -> Tensor[(6, 12, 11), float64] {
  %521 = @func_5470() /* ty=(Tensor[(6, 12, 11), float64], Tensor[(7, 15, 792), bool], Tensor[(792), float32]) */;
  %521.0
}

def @func_1527(%var_1496: Tensor[(2, 13, 11), uint16], %var_1497: Tensor[(2, 13, 11), uint16]) -> (Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) {
  %522 = cast(%var_1497, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
  %523 = shape_of(%var_1496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%var_1496, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %526 = right_shift(%524, %525) /* ty=Tensor[(2, 13, 11), uint16] */;
  %527 = @func_1389() /* ty=Tensor[(7, 15, ?), float32] */;
  (%526, %527)
}

def @func_6737() -> Tensor[(7, 15, 3150), float64] {
  %528 = @func_3693() /* ty=(Tensor[(7, 15, 3150), float64],) */;
  %528.0
}

def @func_4993() -> (Tensor[(7, 15, 3150), float64], Tensor[(7, 15, ?), float64]) {
  %529 = @func_3693() /* ty=(Tensor[(7, 15, 3150), float64],) */;
  %530 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
  %531 = %530.1;
  %532 = cast(%531, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %533 = %529.0;
  %534 = tan(%532) /* ty=Tensor[(7, 15, ?), float64] */;
  (%533, %534)
}

def @func_1389() -> Tensor[(7, 15, ?), float32] {
  @func_580() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_6811(%var_6806: Tensor[(2, 10, 12), uint32], %var_6807: Tensor[(2, 10, 12), uint32]) -> (Tensor[(2, 10, 12), uint32],) {
  %535 = cast(%var_6807, dtype="uint32") /* ty=Tensor[(2, 10, 12), uint32] */;
  %536 = shape_of(%var_6806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%var_6806, dtype="uint32") /* ty=Tensor[(2, 10, 12), uint32] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %539 = bitwise_xor(%537, %538) /* ty=Tensor[(2, 10, 12), uint32] */;
  (%539,)
}

def @func_5679() -> (Tensor[(3150), int8],) {
  %540 = @func_3586() /* ty=Tensor[(3150), int8] */;
  (%540,)
}

def @func_7134() -> Tensor[(7, 15, ?), float32] {
  %541 = @func_5118() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8]) */;
  %541.0
}

def @func_4320() -> (Tensor[(7, 15, 16), int64],) {
  %542 = @func_3944() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32]) */;
  %543 = %542.0;
  %544 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 15, 16), bool] */, dtype="int64") /* ty=Tensor[(7, 15, 16), int64] */;
  %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%543, dtype="int64") /* ty=Tensor[(7, 15, 16), int64] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %548 = left_shift(%546, %547) /* ty=Tensor[(7, 15, 16), int64] */;
  (%548,)
}

def @func_1890(%var_1874: Tensor[(7, 5, 11), bool], %var_1875: Tensor[(7, 5, 11), bool]) -> (Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) {
  %549 = cast(%var_1875, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %550 = shape_of(%var_1874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%var_1874, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %554 = logical_or(%551, %552) /* ty=Tensor[(7, 5, 11), bool] */;
  %555 = %553.1;
  (%554, %555)
}

def @func_4805(%var_4785: Tensor[(7, 5, 11), bool]) -> (Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(7, 5, 11), bool]) {
  %556 = @func_2629() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float32]) */;
  %557 = %556.1;
  %558 = cast(%var_4785, dtype="int16") /* ty=Tensor[(7, 5, 11), int16] */;
  %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%557, dtype="int16") /* ty=Tensor[(7, 5, 11), int16] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %562 = bitwise_or(%560, %561) /* ty=Tensor[(7, 5, 11), int16] */;
  %563 = cast(%var_4785, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%562, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %567 = @func_1409() /* ty=Tensor[(7, 15, ?), float32] */;
  %568 = @func_4411() /* ty=Tensor[(3150), int8] */;
  %569 = less(%565, %566) /* ty=Tensor[(7, 5, 11), bool] */;
  (%567, %568, %569)
}

def @func_6638() -> (Tensor[(7, 15, ?), float32],) {
  %570 = @func_5624() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %571 = %570.0;
  (%571,)
}

def @func_5470() -> (Tensor[(6, 12, 11), float64], Tensor[(7, 15, 792), bool], Tensor[(792), float32]) {
  %572 = cast(meta[relay.Constant][32] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %573 = reshape(%572, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), float64] */;
  %574 = @func_4655() /* ty=Tensor[(7, 15, ?), float32] */;
  %575 = cast(%574, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %576 = cosh(%575) /* ty=Tensor[(7, 15, ?), float32] */;
  %577 = cast(%576, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %578 = cast(meta[relay.Constant][32] /* ty=Tensor[(792), float64] */, dtype="bool") /* ty=Tensor[(792), bool] */;
  %579 = cast(meta[relay.Constant][32] /* ty=Tensor[(792), float64] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %580 = @func_5319(%573) /* ty=Tensor[(6, 12, 11), float64] */;
  %581 = not_equal(%577, %578) /* ty=Tensor[(7, 15, 792), bool] */;
  %582 = tan(%579) /* ty=Tensor[(792), float32] */;
  (%580, %581, %582)
}

def @func_5657(%var_5626: Tensor[(1, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(7, 15, ?), float32]) {
  %583 = cast(%var_5626, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %584 = @func_5507() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %585 = log2(%583) /* ty=Tensor[(1, 10, 10), float32] */;
  %586 = %584.0;
  (%585, %586)
}

def @func_7167() -> (Tensor[(72), float32],) {
  %587 = @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */;
  %588 = %587.2;
  (%588,)
}

def @func_5139() -> Tensor[(3150), int8] {
  %589 = @func_4506() /* ty=(Tensor[(3150), int8],) */;
  %589.0
}

def @func_3628() -> Tensor[(7, 15, ?), float32] {
  %590 = @func_1863() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %590.0
}

def @func_678() -> Tensor[(7, 15, ?), float32] {
  @func_580() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_4351() -> (Tensor[(7, 15, ?), bool], Tensor[(286), uint16], Tensor[(504), float64]) {
  %591 = @func_1590() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %592 = cast(meta[relay.Constant][33] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %593 = reshape(%592, newshape=[36, 14]) /* ty=Tensor[(36, 14), float64] */;
  %594 = @func_3325(%593) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(2, 13, 11), uint16], Tensor[(286), uint16], Tensor[(6, 6, 2), float32], Tensor[(36, 14), float64]) */;
  %595 = %591.0;
  %596 = %594.2;
  (%595, %596, meta[relay.Constant][33] /* ty=Tensor[(504), float64] */)
}

def @func_2146(%var_2134: Tensor[(15, 5, 12), int8]) -> Tensor[(15, 5, 12), float64] {
  %597 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 5, 12), int8] */, dtype="int8") /* ty=Tensor[(15, 5, 12), int8] */;
  %598 = shape_of(%var_2134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_2134, dtype="int8") /* ty=Tensor[(15, 5, 12), int8] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %601 = add(%599, %600) /* ty=Tensor[(15, 5, 12), int8] */;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  log2(%602) /* ty=Tensor[(15, 5, 12), float64] */
}

def @func_2175() -> (Tensor[(7, 15, ?), float64],) {
  %603 = @func_1781() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %604 = %603.0;
  (%604,)
}

def @func_3340() -> (Tensor[(7, 15, ?), float64],) {
  %605 = @func_2175() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %606 = %605.0;
  (%606,)
}

def @func_5976(%var_5957: Tensor[(200), float32]) -> (Tensor[(7, 15, 630), int32], Tensor[(10, 2, 10), float32], Tensor[(200), float32], Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(15, 210), int8]) {
  %607 = @func_4056() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */;
  %608 = %607.1;
  %609 = cast(%608, dtype="float32") /* ty=Tensor[(7, 15, 630), float32] */;
  %610 = asinh(%609) /* ty=Tensor[(7, 15, 630), float32] */;
  %611 = cast(%608, dtype="int32") /* ty=Tensor[(7, 15, 630), int32] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%610, dtype="int32") /* ty=Tensor[(7, 15, 630), int32] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %615 = cast(%var_5957, dtype="float32") /* ty=Tensor[(200), float32] */;
  %616 = cast(%var_5957, dtype="float32") /* ty=Tensor[(200), float32] */;
  %617 = reshape(%615, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), float32] */;
  %618 = reshape(%616, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), float32] */;
  %619 = @func_5866(%617, %618) /* ty=(Tensor[(10, 2, 10), float32],) */;
  %620 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
  %621 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 210), int8] */, dtype="int8") /* ty=Tensor[(15, 210), int8] */;
  %622 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 210), int8] */, dtype="int8") /* ty=Tensor[(15, 210), int8] */;
  %623 = reshape(%621, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
  %624 = reshape(%622, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
  %625 = @func_2836(%623, %624) /* ty=(Tensor[(15, 15, 14), bool],) */;
  %626 = left_shift(%613, %614) /* ty=Tensor[(7, 15, 630), int32] */;
  %627 = %619.0;
  %628 = %620.0;
  %629 = %625.0;
  (%626, %627, %var_5957, %628, %629, meta[relay.Constant][35] /* ty=Tensor[(15, 210), int8] */)
}

def @func_2338(%var_2311: Tensor[(7, 15, 16), float64], %var_2322: Tensor[(55, 7), bool]) -> (Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), bool], Tensor[(7, 15, ?), float64], Tensor[(6, 6, 2), float32]) {
  %630 = @func_1781() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %633 = cast(%var_2311, dtype="bool") /* ty=Tensor[(7, 15, 16), bool] */;
  %634 = cast(%var_2322, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %635 = cast(%var_2322, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %636 = reshape(%634, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
  %637 = reshape(%635, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
  %638 = @func_1890(%636, %637) /* ty=(Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) */;
  %639 = @func_1409() /* ty=Tensor[(7, 15, ?), float32] */;
  %640 = cast(%639, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %641 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %642 = less(%632, %633) /* ty=Tensor[(7, 15, 16), bool] */;
  %643 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
  %644 = %638.0;
  %645 = asin(%640) /* ty=Tensor[(7, 15, ?), float64] */;
  %646 = %641.1;
  (%642, %643, %644, %var_2322, %645, %646)
}

def @func_2242() -> Tensor[(7, 15, ?), float32] {
  %647 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %647.0
}

def @func_4237() -> Tensor[(2, 9, 3), float64] {
  @func_2987() /* ty=Tensor[(2, 9, 3), float64] */
}

def @func_6474() -> Tensor[(7, 15, ?), float32] {
  @func_3958() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_6321() -> Tensor[(7, 15, ?), float32] {
  @func_6027() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_5118() -> (Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8]) {
  %648 = cast(meta[relay.Constant][36] /* ty=Tensor[(3150), int8] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
  %649 = cast(meta[relay.Constant][36] /* ty=Tensor[(3150), int8] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
  %650 = reshape(%648, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
  %651 = reshape(%649, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
  %652 = @func_2836(%650, %651) /* ty=(Tensor[(15, 15, 14), bool],) */;
  %653 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
  %654 = %652.0;
  (%653, %654, meta[relay.Constant][36] /* ty=Tensor[(3150), int8] */)
}

def @func_6506(%var_6496: Tensor[(630), float32], %var_6497: Tensor[(72, 1), float32]) -> (Tensor[(3150), int8], Tensor[(900), int8], Tensor[(900), int8], Tensor[(72, 630), uint64]) {
  %655 = cast(%var_6496, dtype="float32") /* ty=Tensor[(630), float32] */;
  %656 = cast(%var_6497, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %657 = cast(meta[relay.Constant][37] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %658 = reshape(%655, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %659 = reshape(%656, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %660 = reshape(%657, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %661 = @func_5924(%658, %659, %660) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, 630), bool], Tensor[(70, 9), float32], Tensor[(3150), int8], Tensor[(7, 15, 14), bool], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(15, 5, 12), int32], Tensor[(900), int8]) */;
  %662 = cast(%var_6496, dtype="uint64") /* ty=Tensor[(630), uint64] */;
  %663 = cast(%var_6497, dtype="uint64") /* ty=Tensor[(72, 1), uint64] */;
  %664 = @func_5139() /* ty=Tensor[(3150), int8] */;
  %665 = %661.8;
  %666 = right_shift(%662, %663) /* ty=Tensor[(72, 630), uint64] */;
  (%664, %665, meta[relay.Constant][37] /* ty=Tensor[(900), int8] */, %666)
}

def @func_5829(%var_5813: Tensor[(6, 2, 5), float64]) -> (Tensor[(6, 2, 5), float64], Tensor[(3150), bool]) {
  %667 = cast(%var_5813, dtype="float64") /* ty=Tensor[(6, 2, 5), float64] */;
  %668 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
  %669 = atan(%667) /* ty=Tensor[(6, 2, 5), float64] */;
  %670 = %668.3;
  (%669, %670)
}

def @func_6761() -> Tensor[(7, 15, ?), float32] {
  @func_1830() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_2119() -> (Tensor[(7, 15, ?), float32],) {
  %671 = @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %672 = %671.0;
  (%672,)
}

def @func_3944() -> (Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32]) {
  %673 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %674 = %673.0;
  %675 = @func_2548() /* ty=Tensor[(7, 15, ?), float32] */;
  (%674, %675)
}

def @func_6916() -> Tensor[(7, 15, ?), float64] {
  %676 = @func_3340() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %676.0
}

def @func_4129(%var_4113: Tensor[(20, 4), float64], %var_4120: Tensor[(756), uint32]) -> (Tensor[(7, 15, ?), bool], Tensor[(10, 8, 1), float64], Tensor[(20, 4), float64], Tensor[(7, 15, ?), int8], Tensor[(14, 6, 9), uint32], Tensor[(756), uint32], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) {
  %677 = @func_4056() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */;
  %678 = cast(%var_4113, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %679 = reshape(%678, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float64] */;
  %680 = @func_1944(%679) /* ty=(Tensor[(10, 8, 1), float64],) */;
  %681 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %682 = %681.0;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %684 = cos(%683) /* ty=Tensor[(7, 15, ?), float64] */;
  %685 = @func_4067() /* ty=Tensor[(7, 15, ?), float32] */;
  %686 = cast(%685, dtype="int8") /* ty=Tensor[(7, 15, ?), int8] */;
  %687 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%684, dtype="int8") /* ty=Tensor[(7, 15, ?), int8] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %690 = cast(%var_4120, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %691 = reshape(%690, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), uint32] */;
  %692 = @func_2175() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %693 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %694 = %677.0;
  %695 = %680.0;
  %696 = add(%688, %689) /* ty=Tensor[(7, 15, ?), int8] */;
  %697 = @func_2582(%691) /* ty=Tensor[(14, 6, 9), uint32] */;
  %698 = %692.0;
  %699 = %693.1;
  (%694, %695, %var_4113, %696, %697, %var_4120, %698, %699)
}

def @func_1146(%var_1140: Tensor[(70, 9), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, 6), int32], Tensor[(70, 9), float32]) {
  %700 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %701 = cast(%var_1140, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %702 = reshape(%701, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %703 = @func_668(%702) /* ty=(Tensor[(7, 15, 6), int32],) */;
  %704 = %700.0;
  %705 = %703.0;
  (%704, %705, %var_1140)
}

def @func_2836(%var_2828: Tensor[(15, 15, 14), int8], %var_2829: Tensor[(15, 15, 14), int8]) -> (Tensor[(15, 15, 14), bool],) {
  %706 = cast(%var_2829, dtype="bool") /* ty=Tensor[(15, 15, 14), bool] */;
  %707 = shape_of(%var_2828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%var_2828, dtype="bool") /* ty=Tensor[(15, 15, 14), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %710 = greater(%708, %709) /* ty=Tensor[(15, 15, 14), bool] */;
  (%710,)
}

def @func_3829(%var_3808: Tensor[(630), float32]) -> (Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), bool]) {
  %711 = cast(%var_3808, dtype="float32") /* ty=Tensor[(630), float32] */;
  %712 = reshape(%711, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %713 = @func_668(%712) /* ty=(Tensor[(7, 15, 6), int32],) */;
  %714 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %715 = %714.1;
  %716 = cast(%var_3808, dtype="bool") /* ty=Tensor[(630), bool] */;
  %717 = cast(%715, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %718 = %713.0;
  %719 = less_equal(%716, %717) /* ty=Tensor[(7, 15, 630), bool] */;
  (%718, %719)
}

def @func_4858(%var_4841: Tensor[(7, 15, 14), float32], %var_4855: Tensor[(72), float32]) -> (Tensor[(7, 15, 14), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
  %720 = @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */;
  %721 = %720.0;
  %722 = cast(%721, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %723 = cast(%var_4841, dtype="bool") /* ty=Tensor[(7, 15, 14), bool] */;
  %724 = cast(%var_4855, dtype="float32") /* ty=Tensor[(72), float32] */;
  %725 = reshape(%724, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %726 = @func_399(%725) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %727 = less_equal(%722, %723) /* ty=Tensor[(7, 15, 14), bool] */;
  %728 = %726.0;
  (%727, %728, %var_4855)
}

def @func_4904(%var_4896: Tensor[(13, 15, 7), float64]) -> (Tensor[(13, 15, 7), float64],) {
  %729 = cast(%var_4896, dtype="float64") /* ty=Tensor[(13, 15, 7), float64] */;
  %730 = asin(%729) /* ty=Tensor[(13, 15, 7), float64] */;
  (%730,)
}

def @func_5403(%var_5355: Tensor[(210), float32], %var_5356: Tensor[(900), int8], %var_5357: Tensor[(26, 11), uint16]) -> (Tensor[(286), uint16], Tensor[(210), float32], Tensor[(900), int8], Tensor[(26, 11), uint16], Tensor[(504), float64], Tensor[(3150), int8], Tensor[(6, 6, 2), float32], Tensor[(7, 15, 3150), uint32], Tensor[(7, 15, ?), float64]) {
  %731 = cast(%var_5355, dtype="float32") /* ty=Tensor[(210), float32] */;
  %732 = cast(%var_5356, dtype="int8") /* ty=Tensor[(900), int8] */;
  %733 = cast(%var_5357, dtype="uint16") /* ty=Tensor[(26, 11), uint16] */;
  %734 = reshape(%731, newshape=[7, 15, 2]) /* ty=Tensor[(7, 15, 2), float32] */;
  %735 = reshape(%732, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %736 = reshape(%733, newshape=[286]) /* ty=Tensor[(286), uint16] */;
  %737 = @func_2811(%734, %735, %736) /* ty=(Tensor[(7, 15, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(55, 7), bool], Tensor[(7, 15, 1680), float32], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) */;
  %738 = @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */;
  %739 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %740 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
  %741 = %740.3;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %743 = log10(%742) /* ty=Tensor[(3150), float64] */;
  %744 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %745 = cast(%743, dtype="bool") /* ty=Tensor[(3150), bool] */;
  %746 = cast(%744, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %747 = greater_equal(%745, %746) /* ty=Tensor[(7, 15, 3150), bool] */;
  %748 = cast(%747, dtype="uint32") /* ty=Tensor[(7, 15, 3150), uint32] */;
  %749 = cast(%743, dtype="uint32") /* ty=Tensor[(3150), uint32] */;
  %750 = @func_3340() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %751 = %737.7;
  %752 = %738.2;
  %753 = @func_4258() /* ty=Tensor[(3150), int8] */;
  %754 = %739.1;
  %755 = bitwise_and(%748, %749) /* ty=Tensor[(7, 15, 3150), uint32] */;
  %756 = %750.0;
  (%751, %var_5355, %var_5356, %var_5357, %752, %753, %754, %755, %756)
}

def @func_6236() -> (Tensor[(7, 15, ?), float64],) {
  %757 = @func_6064() /* ty=(Tensor[(7, 15, ?), float64], Tensor[(504), float64]) */;
  %758 = %757.0;
  (%758,)
}

def @func_1830() -> Tensor[(7, 15, ?), float32] {
  @func_1409() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_3586() -> Tensor[(3150), int8] {
  %759 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
  %760 = %759.3;
  %761 = cast(meta[relay.Constant][38] /* ty=Tensor[(3150), bool] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(1), int32] */;
  %763 = cast(%760, dtype="int8") /* ty=Tensor[(3150), int8] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?), int8] */;
  left_shift(%763, %764) /* ty=Tensor[(3150), int8] */
}

def @func_3905() -> (Tensor[(7, 15, ?), float64],) {
  %765 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
  %766 = cast(%765, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %767 = sinh(%766) /* ty=Tensor[(7, 15, ?), float64] */;
  (%767,)
}

def @func_5624() -> (Tensor[(7, 15, ?), float32],) {
  %768 = @func_1389() /* ty=Tensor[(7, 15, ?), float32] */;
  (%768,)
}

def @func_6375() -> Tensor[(7, 15, ?), float32] {
  @func_4530() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_5806() -> Tensor[(3150), uint8] {
  %769 = @func_4411() /* ty=Tensor[(3150), int8] */;
  %770 = cast(meta[relay.Constant][39] /* ty=Tensor[(3150), int8] */, dtype="uint8") /* ty=Tensor[(3150), uint8] */;
  %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(1), int32] */;
  %772 = cast(%769, dtype="uint8") /* ty=Tensor[(3150), uint8] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?), uint8] */;
  bitwise_or(%772, %773) /* ty=Tensor[(3150), uint8] */
}

def @func_5866(%var_5846: Tensor[(10, 2, 10), float32], %var_5847: Tensor[(10, 2, 10), float32]) -> (Tensor[(10, 2, 10), float32],) {
  %774 = cast(%var_5847, dtype="float32") /* ty=Tensor[(10, 2, 10), float32] */;
  %775 = shape_of(%var_5846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_5846, dtype="float32") /* ty=Tensor[(10, 2, 10), float32] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %778 = power(%776, %777) /* ty=Tensor[(10, 2, 10), float32] */;
  (%778,)
}

def @func_6844() -> Tensor[(7, 15, ?), float32] {
  %779 = @func_5564() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %779.1
}

def @func_5767(%var_5715: Tensor[(14, 5, 8), uint32]) -> (Tensor[(14, 5, 8), uint32], Tensor[(7, 15, 3150), int32]) {
  %780 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 5, 8), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5, 8), uint32] */;
  %781 = shape_of(%var_5715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%var_5715, dtype="uint32") /* ty=Tensor[(14, 5, 8), uint32] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %784 = @func_3958() /* ty=Tensor[(7, 15, ?), float32] */;
  %785 = @func_3693() /* ty=(Tensor[(7, 15, 3150), float64],) */;
  %786 = %785.0;
  %787 = cast(%784, dtype="int32") /* ty=Tensor[(7, 15, ?), int32] */;
  %788 = cast(%786, dtype="int32") /* ty=Tensor[(7, 15, 3150), int32] */;
  %789 = add(%782, %783) /* ty=Tensor[(14, 5, 8), uint32] */;
  %790 = bitwise_xor(%787, %788) /* ty=Tensor[(7, 15, 3150), int32] */;
  (%789, %790)
}

def @func_4411() -> Tensor[(3150), int8] {
  @func_3586() /* ty=Tensor[(3150), int8] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1252(%var_1250: Tensor[(7, 15, 11), float64], %var_1251: Tensor[(7, 15, 11), uint32]) -> (Tensor[(7, 15, 6), int32], Tensor[(630), float32], Tensor[(7, 15, 11), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
  @func_1248(%var_1250, %var_1251) /* ty=(Tensor[(7, 15, 6), int32], Tensor[(630), float32], Tensor[(7, 15, 11), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */
}

def @func_5581() -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, 3150), float64]) {
  @func_5579() /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, 3150), float64]) */
}

def @func_2988() -> Tensor[(2, 9, 3), float64] {
  %4 = fn () -> Tensor[(2, 9, 3), float64] {
    %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 3), float64] */;
    %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(2, 9, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 3), float64] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%2, %3) /* ty=Tensor[(2, 9, 3), float64] */
  };
  %4() /* ty=Tensor[(2, 9, 3), float64] */
}

def @func_6375() -> Tensor[(7, 15, ?), float32] {
  @func_4530() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_5099(%var_5097: Tensor[(15, 6, 9), uint64]) -> (Tensor[(15, 6, 9), uint64],) {
  @func_5096(%var_5097) /* ty=(Tensor[(15, 6, 9), uint64],) */
}

def @func_6532() -> (Tensor[(3150), int8],) {
  %5 = @func_5679() /* ty=(Tensor[(3150), int8],) */;
  %6 = %5.0;
  (%6,)
}

def @func_1071(%var_1069: Tensor[(72), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
  @func_1068(%var_1069) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */
}

def @func_6510(%var_6508: Tensor[(630), float32], %var_6509: Tensor[(72, 1), float32]) -> (Tensor[(3150), int8], Tensor[(900), int8], Tensor[(900), int8], Tensor[(72, 630), uint64]) {
  @func_6506(%var_6508, %var_6509) /* ty=(Tensor[(3150), int8], Tensor[(900), int8], Tensor[(900), int8], Tensor[(72, 630), uint64]) */
}

def @func_1831() -> Tensor[(7, 15, ?), float32] {
  %7 = fn () -> Tensor[(7, 15, ?), float32] {
    @func_1409() /* ty=Tensor[(7, 15, ?), float32] */
  };
  %7() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_3963() -> (Tensor[(7, 15, ?), float32],) {
  %8 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  (%8,)
}

def @func_6065() -> (Tensor[(7, 15, ?), float64], Tensor[(504), float64]) {
  %14 = fn () -> (Tensor[(7, 15, ?), float64], Tensor[(504), float64]) {
    %9 = @func_1830() /* ty=Tensor[(7, 15, ?), float32] */;
    %10 = cast(%9, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
    %11 = @func_5251() /* ty=(Tensor[(504), float64],) */;
    %12 = acosh(%10) /* ty=Tensor[(7, 15, ?), float64] */;
    %13 = %11.0;
    (%12, %13)
  };
  %14() /* ty=(Tensor[(7, 15, ?), float64], Tensor[(504), float64]) */
}

def @func_4531() -> Tensor[(7, 15, ?), float32] {
  %16 = fn () -> Tensor[(7, 15, ?), float32] {
    %15 = @func_1590() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
    %15.1
  };
  %16() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_6156(%var_6155: Tensor[(560), uint32]) -> (Tensor[(3150), int8], Tensor[(7, 15, 3150), int32], Tensor[(560), uint32], Tensor[(7, 15, ?), float32]) {
  %24 = fn (%var_6145: Tensor[(560), uint32]) -> (Tensor[(3150), int8], Tensor[(7, 15, 3150), int32], Tensor[(560), uint32], Tensor[(7, 15, ?), float32]) {
    %17 = @func_4506() /* ty=(Tensor[(3150), int8],) */;
    %18 = cast(%var_6145, dtype="uint32") /* ty=Tensor[(560), uint32] */;
    %19 = reshape(%18, newshape=[14, 5, 8]) /* ty=Tensor[(14, 5, 8), uint32] */;
    %20 = @func_5767(%19) /* ty=(Tensor[(14, 5, 8), uint32], Tensor[(7, 15, 3150), int32]) */;
    %21 = %17.0;
    %22 = %20.1;
    %23 = @func_1830() /* ty=Tensor[(7, 15, ?), float32] */;
    (%21, %22, %var_6145, %23)
  };
  %24(%var_6155) /* ty=(Tensor[(3150), int8], Tensor[(7, 15, 3150), int32], Tensor[(560), uint32], Tensor[(7, 15, ?), float32]) */
}

def @func_6699(%var_6698: Tensor[(7, 15, 13), float32]) -> Tensor[(7, 15, 13), bool] {
  %29 = fn (%var_6682: Tensor[(7, 15, 13), float32]) -> Tensor[(7, 15, 13), bool] {
    %25 = @func_5507() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %26 = %25.0;
    %27 = cast(%26, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
    %28 = cast(%var_6682, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
    greater_equal(%27, %28) /* ty=Tensor[(7, 15, 13), bool] */
  };
  %29(%var_6698) /* ty=Tensor[(7, 15, 13), bool] */
}

def @func_5929(%var_5926: Tensor[(70, 9), float32], %var_5927: Tensor[(72), float32], %var_5928: Tensor[(900), int8]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, 630), bool], Tensor[(70, 9), float32], Tensor[(3150), int8], Tensor[(7, 15, 14), bool], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(15, 5, 12), int32], Tensor[(900), int8]) {
  @func_5924(%var_5926, %var_5927, %var_5928) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, 630), bool], Tensor[(70, 9), float32], Tensor[(3150), int8], Tensor[(7, 15, 14), bool], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(15, 5, 12), int32], Tensor[(900), int8]) */
}

def @func_1316(%var_1314: Tensor[(630), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), int16], Tensor[(72), float32], Tensor[(7, 15, 630), float64], Tensor[(6, 6, 2), bool], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) {
  @func_1313(%var_1314) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), int16], Tensor[(72), float32], Tensor[(7, 15, 630), float64], Tensor[(6, 6, 2), bool], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */
}

def @func_5869(%var_5867: Tensor[(10, 2, 10), float32], %var_5868: Tensor[(10, 2, 10), float32]) -> (Tensor[(10, 2, 10), float32],) {
  %35 = fn (%var_5846: Tensor[(10, 2, 10), float32], %var_5847: Tensor[(10, 2, 10), float32]) -> (Tensor[(10, 2, 10), float32],) {
    %30 = cast(%var_5847, dtype="float32") /* ty=Tensor[(10, 2, 10), float32] */;
    %31 = shape_of(%var_5846, dtype="int32") /* ty=Tensor[(3), int32] */;
    %32 = cast(%var_5846, dtype="float32") /* ty=Tensor[(10, 2, 10), float32] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %34 = power(%32, %33) /* ty=Tensor[(10, 2, 10), float32] */;
    (%34,)
  };
  %35(%var_5867, %var_5868) /* ty=(Tensor[(10, 2, 10), float32],) */
}

def @func_2811(%var_2753: Tensor[(7, 15, 2), float32], %var_2802: Tensor[(900), int8], %var_2807: Tensor[(286), uint16]) -> (Tensor[(7, 15, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(55, 7), bool], Tensor[(7, 15, 1680), float32], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) {
  %36 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %37 = %36.0;
  %38 = cast(%37, dtype="uint64") /* ty=Tensor[(7, 15, ?), uint64] */;
  %39 = cast(%var_2753, dtype="uint64") /* ty=Tensor[(7, 15, 2), uint64] */;
  %40 = logical_xor(%38, %39) /* ty=Tensor[(7, 15, 2), uint64] */;
  %41 = cast(%40, dtype="float32") /* ty=Tensor[(7, 15, 2), float32] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(55, 7), bool] */, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %44 = reshape(%42, newshape=[7, 15, 16]) /* ty=Tensor[(7, 15, 16), float64] */;
  %45 = reshape(%43, newshape=[55, 7]) /* ty=Tensor[(55, 7), bool] */;
  %46 = @func_2338(%44, %45) /* ty=(Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), bool], Tensor[(7, 15, ?), float64], Tensor[(6, 6, 2), float32]) */;
  %47 = cast(%37, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %48 = cast(meta[relay.Constant][2] /* ty=Tensor[(1680), float64] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %49 = cast(%var_2802, dtype="int8") /* ty=Tensor[(900), int8] */;
  %50 = reshape(%49, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %51 = @func_2406(%50) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
  %52 = cast(%var_2807, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %53 = cast(%var_2807, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %54 = reshape(%52, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %55 = reshape(%53, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %56 = @func_1527(%54, %55) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) */;
  %57 = atan(%41) /* ty=Tensor[(7, 15, 2), float32] */;
  %58 = %46.5;
  %59 = floor_divide(%47, %48) /* ty=Tensor[(7, 15, 1680), float32] */;
  %60 = %51.2;
  %61 = %56.1;
  (%57, %58, meta[relay.Constant][3] /* ty=Tensor[(55, 7), bool] */, %59, %60, %var_2802, %61, %var_2807)
}

def @func_4239() -> Tensor[(2, 9, 3), float64] {
  @func_4237() /* ty=Tensor[(2, 9, 3), float64] */
}

def @func_3325(%var_3320: Tensor[(36, 14), float64]) -> (Tensor[(7, 15, ?), float32], Tensor[(2, 13, 11), uint16], Tensor[(286), uint16], Tensor[(6, 6, 2), float32], Tensor[(36, 14), float64]) {
  %62 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %65 = reshape(%63, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %66 = reshape(%64, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %67 = @func_1527(%65, %66) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) */;
  %68 = cast(%var_3320, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %69 = reshape(%68, newshape=[6, 84]) /* ty=Tensor[(6, 84), float64] */;
  %70 = @func_2436(%69) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(4, 9, 14), float64], Tensor[(6, 84), float64], Tensor[(7, 15, ?), float32]) */;
  %71 = cast(%var_3320, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %72 = %62.0;
  %73 = %67.0;
  %74 = %70.1;
  %75 = cosh(%71) /* ty=Tensor[(36, 14), float64] */;
  (%72, %73, meta[relay.Constant][4] /* ty=Tensor[(286), uint16] */, %74, %75)
}

def @func_964() -> (Tensor[(7, 15, ?), float32],) {
  @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */
}

def @func_5403(%var_5355: Tensor[(210), float32], %var_5356: Tensor[(900), int8], %var_5357: Tensor[(26, 11), uint16]) -> (Tensor[(286), uint16], Tensor[(210), float32], Tensor[(900), int8], Tensor[(26, 11), uint16], Tensor[(504), float64], Tensor[(3150), int8], Tensor[(6, 6, 2), float32], Tensor[(7, 15, 3150), uint32], Tensor[(7, 15, ?), float64]) {
  %76 = cast(%var_5355, dtype="float32") /* ty=Tensor[(210), float32] */;
  %77 = cast(%var_5356, dtype="int8") /* ty=Tensor[(900), int8] */;
  %78 = cast(%var_5357, dtype="uint16") /* ty=Tensor[(26, 11), uint16] */;
  %79 = reshape(%76, newshape=[7, 15, 2]) /* ty=Tensor[(7, 15, 2), float32] */;
  %80 = reshape(%77, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %81 = reshape(%78, newshape=[286]) /* ty=Tensor[(286), uint16] */;
  %82 = @func_2811(%79, %80, %81) /* ty=(Tensor[(7, 15, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(55, 7), bool], Tensor[(7, 15, 1680), float32], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) */;
  %83 = @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */;
  %84 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %85 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
  %86 = %85.3;
  %87 = cast(%86, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %88 = log10(%87) /* ty=Tensor[(3150), float64] */;
  %89 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %90 = cast(%88, dtype="bool") /* ty=Tensor[(3150), bool] */;
  %91 = cast(%89, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %92 = greater_equal(%90, %91) /* ty=Tensor[(7, 15, 3150), bool] */;
  %93 = cast(%92, dtype="uint32") /* ty=Tensor[(7, 15, 3150), uint32] */;
  %94 = cast(%88, dtype="uint32") /* ty=Tensor[(3150), uint32] */;
  %95 = @func_3340() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %96 = %82.7;
  %97 = %83.2;
  %98 = @func_4258() /* ty=Tensor[(3150), int8] */;
  %99 = %84.1;
  %100 = bitwise_and(%93, %94) /* ty=Tensor[(7, 15, 3150), uint32] */;
  %101 = %95.0;
  (%96, %var_5355, %var_5356, %var_5357, %97, %98, %99, %100, %101)
}

def @func_5119() -> (Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8]) {
  %109 = fn () -> (Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8]) {
    %102 = cast(meta[relay.Constant][5] /* ty=Tensor[(3150), int8] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
    %103 = cast(meta[relay.Constant][5] /* ty=Tensor[(3150), int8] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
    %104 = reshape(%102, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
    %105 = reshape(%103, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
    %106 = @func_2836(%104, %105) /* ty=(Tensor[(15, 15, 14), bool],) */;
    %107 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
    %108 = %106.0;
    (%107, %108, meta[relay.Constant][5] /* ty=Tensor[(3150), int8] */)
  };
  %109() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8]) */
}

def @func_962() -> (Tensor[(7, 15, ?), float32],) {
  %110 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %112 = sigmoid(%111) /* ty=Tensor[(7, 15, ?), float32] */;
  (%112,)
}

def @func_5832(%var_5830: Tensor[(6, 2, 5), float64]) -> (Tensor[(6, 2, 5), float64], Tensor[(3150), bool]) {
  @func_5829(%var_5830) /* ty=(Tensor[(6, 2, 5), float64], Tensor[(3150), bool]) */
}

def @func_5978(%var_5977: Tensor[(200), float32]) -> (Tensor[(7, 15, 630), int32], Tensor[(10, 2, 10), float32], Tensor[(200), float32], Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(15, 210), int8]) {
  %136 = fn (%var_5957: Tensor[(200), float32]) -> (Tensor[(7, 15, 630), int32], Tensor[(10, 2, 10), float32], Tensor[(200), float32], Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(15, 210), int8]) {
    %113 = @func_4056() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */;
    %114 = %113.1;
    %115 = cast(%114, dtype="float32") /* ty=Tensor[(7, 15, 630), float32] */;
    %116 = asinh(%115) /* ty=Tensor[(7, 15, 630), float32] */;
    %117 = cast(%114, dtype="int32") /* ty=Tensor[(7, 15, 630), int32] */;
    %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
    %119 = cast(%116, dtype="int32") /* ty=Tensor[(7, 15, 630), int32] */;
    %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %121 = cast(%var_5957, dtype="float32") /* ty=Tensor[(200), float32] */;
    %122 = cast(%var_5957, dtype="float32") /* ty=Tensor[(200), float32] */;
    %123 = reshape(%121, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), float32] */;
    %124 = reshape(%122, newshape=[10, 2, 10]) /* ty=Tensor[(10, 2, 10), float32] */;
    %125 = @func_5866(%123, %124) /* ty=(Tensor[(10, 2, 10), float32],) */;
    %126 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
    %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 210), int8] */, dtype="int8") /* ty=Tensor[(15, 210), int8] */;
    %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 210), int8] */, dtype="int8") /* ty=Tensor[(15, 210), int8] */;
    %129 = reshape(%127, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
    %130 = reshape(%128, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
    %131 = @func_2836(%129, %130) /* ty=(Tensor[(15, 15, 14), bool],) */;
    %132 = left_shift(%119, %120) /* ty=Tensor[(7, 15, 630), int32] */;
    %133 = %125.0;
    %134 = %126.0;
    %135 = %131.0;
    (%132, %133, %var_5957, %134, %135, meta[relay.Constant][6] /* ty=Tensor[(15, 210), int8] */)
  };
  %136(%var_5977) /* ty=(Tensor[(7, 15, 630), int32], Tensor[(10, 2, 10), float32], Tensor[(200), float32], Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(15, 210), int8]) */
}

def @func_4656() -> Tensor[(7, 15, ?), float32] {
  %138 = fn () -> Tensor[(7, 15, ?), float32] {
    %137 = @func_4056() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */;
    %137.3
  };
  %138() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_6784() -> Tensor[(7, 15, ?), float32] {
  @func_6782() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_1016() -> Tensor[(7, 15, ?), float64] {
  %143 = fn () -> Tensor[(7, 15, ?), float64] {
    %139 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
    %140 = cast(%139, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
    %141 = exp(%140) /* ty=Tensor[(7, 15, ?), float32] */;
    %142 = cast(%141, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
    rsqrt(%142) /* ty=Tensor[(7, 15, ?), float64] */
  };
  %143() /* ty=Tensor[(7, 15, ?), float64] */
}

def @func_6917() -> Tensor[(7, 15, ?), float64] {
  %145 = fn () -> Tensor[(7, 15, ?), float64] {
    %144 = @func_3340() /* ty=(Tensor[(7, 15, ?), float64],) */;
    %144.0
  };
  %145() /* ty=Tensor[(7, 15, ?), float64] */
}

def @func_4858(%var_4841: Tensor[(7, 15, 14), float32], %var_4855: Tensor[(72), float32]) -> (Tensor[(7, 15, 14), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
  %146 = @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */;
  %147 = %146.0;
  %148 = cast(%147, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %149 = cast(%var_4841, dtype="bool") /* ty=Tensor[(7, 15, 14), bool] */;
  %150 = cast(%var_4855, dtype="float32") /* ty=Tensor[(72), float32] */;
  %151 = reshape(%150, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %152 = @func_399(%151) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %153 = less_equal(%148, %149) /* ty=Tensor[(7, 15, 14), bool] */;
  %154 = %152.0;
  (%153, %154, %var_4855)
}

def @func_5829(%var_5813: Tensor[(6, 2, 5), float64]) -> (Tensor[(6, 2, 5), float64], Tensor[(3150), bool]) {
  %155 = cast(%var_5813, dtype="float64") /* ty=Tensor[(6, 2, 5), float64] */;
  %156 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
  %157 = atan(%155) /* ty=Tensor[(6, 2, 5), float64] */;
  %158 = %156.3;
  (%157, %158)
}

def @func_748(%var_740: Tensor[(4, 9, 14), float64], %var_741: Tensor[(4, 9, 14), float64]) -> (Tensor[(4, 9, 14), float64],) {
  %159 = cast(%var_741, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %160 = shape_of(%var_740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%var_740, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %163 = power(%161, %162) /* ty=Tensor[(4, 9, 14), float64] */;
  (%163,)
}

def @func_4067() -> Tensor[(7, 15, ?), float32] {
  %164 = @func_4056() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */;
  %164.3
}

def @func_1592() -> (Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) {
  @func_1590() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */
}

def @func_2836(%var_2828: Tensor[(15, 15, 14), int8], %var_2829: Tensor[(15, 15, 14), int8]) -> (Tensor[(15, 15, 14), bool],) {
  %165 = cast(%var_2829, dtype="bool") /* ty=Tensor[(15, 15, 14), bool] */;
  %166 = shape_of(%var_2828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%var_2828, dtype="bool") /* ty=Tensor[(15, 15, 14), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = greater(%167, %168) /* ty=Tensor[(15, 15, 14), bool] */;
  (%169,)
}

def @func_6814(%var_6812: Tensor[(2, 10, 12), uint32], %var_6813: Tensor[(2, 10, 12), uint32]) -> (Tensor[(2, 10, 12), uint32],) {
  %175 = fn (%var_6806: Tensor[(2, 10, 12), uint32], %var_6807: Tensor[(2, 10, 12), uint32]) -> (Tensor[(2, 10, 12), uint32],) {
    %170 = cast(%var_6807, dtype="uint32") /* ty=Tensor[(2, 10, 12), uint32] */;
    %171 = shape_of(%var_6806, dtype="int32") /* ty=Tensor[(3), int32] */;
    %172 = cast(%var_6806, dtype="uint32") /* ty=Tensor[(2, 10, 12), uint32] */;
    %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %174 = bitwise_xor(%172, %173) /* ty=Tensor[(2, 10, 12), uint32] */;
    (%174,)
  };
  %175(%var_6812, %var_6813) /* ty=(Tensor[(2, 10, 12), uint32],) */
}

def @func_6027() -> Tensor[(7, 15, ?), float32] {
  %176 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %176.0
}

def @func_7135() -> Tensor[(7, 15, ?), float32] {
  %178 = fn () -> Tensor[(7, 15, ?), float32] {
    %177 = @func_5118() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8]) */;
    %177.0
  };
  %178() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_2840(%var_2838: Tensor[(15, 15, 14), int8], %var_2839: Tensor[(15, 15, 14), int8]) -> (Tensor[(15, 15, 14), bool],) {
  @func_2836(%var_2838, %var_2839) /* ty=(Tensor[(15, 15, 14), bool],) */
}

def @func_5657(%var_5626: Tensor[(1, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(7, 15, ?), float32]) {
  %179 = cast(%var_5626, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %180 = @func_5507() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %181 = log2(%179) /* ty=Tensor[(1, 10, 10), float32] */;
  %182 = %180.0;
  (%181, %182)
}

def @func_3459() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) {
  @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */
}

def @func_2341(%var_2339: Tensor[(7, 15, 16), float64], %var_2340: Tensor[(55, 7), bool]) -> (Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), bool], Tensor[(7, 15, ?), float64], Tensor[(6, 6, 2), float32]) {
  %200 = fn (%var_2311: Tensor[(7, 15, 16), float64], %var_2322: Tensor[(55, 7), bool]) -> (Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), bool], Tensor[(7, 15, ?), float64], Tensor[(6, 6, 2), float32]) {
    %183 = @func_1781() /* ty=(Tensor[(7, 15, ?), float64],) */;
    %184 = %183.0;
    %185 = cast(%184, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
    %186 = cast(%var_2311, dtype="bool") /* ty=Tensor[(7, 15, 16), bool] */;
    %187 = cast(%var_2322, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
    %188 = cast(%var_2322, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
    %189 = reshape(%187, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
    %190 = reshape(%188, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
    %191 = @func_1890(%189, %190) /* ty=(Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) */;
    %192 = @func_1409() /* ty=Tensor[(7, 15, ?), float32] */;
    %193 = cast(%192, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
    %194 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
    %195 = less(%185, %186) /* ty=Tensor[(7, 15, 16), bool] */;
    %196 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
    %197 = %191.0;
    %198 = asin(%193) /* ty=Tensor[(7, 15, ?), float64] */;
    %199 = %194.1;
    (%195, %196, %197, %var_2322, %198, %199)
  };
  %200(%var_2339, %var_2340) /* ty=(Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32], Tensor[(7, 5, 11), bool], Tensor[(55, 7), bool], Tensor[(7, 15, ?), float64], Tensor[(6, 6, 2), float32]) */
}

def @func_752(%var_750: Tensor[(4, 9, 14), float64], %var_751: Tensor[(4, 9, 14), float64]) -> (Tensor[(4, 9, 14), float64],) {
  @func_748(%var_750, %var_751) /* ty=(Tensor[(4, 9, 14), float64],) */
}

def @func_3958() -> Tensor[(7, 15, ?), float32] {
  %201 = @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */;
  %201.0
}

def @func_4644(%var_4642: Tensor[(210), float32], %var_4643: Tensor[(286), uint16]) -> (Tensor[(7, 15, 1680), float32], Tensor[(210), float32], Tensor[(900), int8], Tensor[(286), uint16], Tensor[(6, 5, 2), float32], Tensor[(3150), int8], Tensor[(225, 14), bool], Tensor[(10, 8, 1), float64], Tensor[(2, 40), float64], Tensor[(3150), int8], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float64]) {
  @func_4640(%var_4642, %var_4643) /* ty=(Tensor[(7, 15, 1680), float32], Tensor[(210), float32], Tensor[(900), int8], Tensor[(286), uint16], Tensor[(6, 5, 2), float32], Tensor[(3150), int8], Tensor[(225, 14), bool], Tensor[(10, 8, 1), float64], Tensor[(2, 40), float64], Tensor[(3150), int8], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float64]) */
}

def @func_5681() -> (Tensor[(3150), int8],) {
  @func_5679() /* ty=(Tensor[(3150), int8],) */
}

def @func_4352() -> (Tensor[(7, 15, ?), bool], Tensor[(286), uint16], Tensor[(504), float64]) {
  %208 = fn () -> (Tensor[(7, 15, ?), bool], Tensor[(286), uint16], Tensor[(504), float64]) {
    %202 = @func_1590() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
    %203 = cast(meta[relay.Constant][7] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
    %204 = reshape(%203, newshape=[36, 14]) /* ty=Tensor[(36, 14), float64] */;
    %205 = @func_3325(%204) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(2, 13, 11), uint16], Tensor[(286), uint16], Tensor[(6, 6, 2), float32], Tensor[(36, 14), float64]) */;
    %206 = %202.0;
    %207 = %205.2;
    (%206, %207, meta[relay.Constant][7] /* ty=Tensor[(504), float64] */)
  };
  %208() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(286), uint16], Tensor[(504), float64]) */
}

def @func_5924(%var_5888: Tensor[(70, 9), float32], %var_5914: Tensor[(72), float32], %var_5919: Tensor[(900), int8]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, 630), bool], Tensor[(70, 9), float32], Tensor[(3150), int8], Tensor[(7, 15, 14), bool], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(15, 5, 12), int32], Tensor[(900), int8]) {
  %209 = @func_3905() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %210 = cast(%var_5888, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %211 = reshape(%210, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %212 = @func_3829(%211) /* ty=(Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), bool]) */;
  %213 = cast(meta[relay.Constant][8] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %214 = cast(%var_5914, dtype="float32") /* ty=Tensor[(72), float32] */;
  %215 = reshape(%213, newshape=[7, 15, 14]) /* ty=Tensor[(7, 15, 14), float32] */;
  %216 = reshape(%214, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %217 = @func_4858(%215, %216) /* ty=(Tensor[(7, 15, 14), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %218 = cast(%var_5919, dtype="int8") /* ty=Tensor[(900), int8] */;
  %219 = reshape(%218, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %220 = @func_2406(%219) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
  %221 = %209.0;
  %222 = %212.1;
  %223 = @func_5139() /* ty=Tensor[(3150), int8] */;
  %224 = %217.0;
  %225 = %220.0;
  (%221, %222, %var_5888, %223, %224, meta[relay.Constant][8] /* ty=Tensor[(1470), float32] */, %var_5914, %225, %var_5919)
}

def @func_2069() -> (Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
  %235 = fn () -> (Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
    %226 = @func_1863() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %227 = %226.0;
    %228 = cast(%227, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
    %229 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 15, 16), float32] */, dtype="bool") /* ty=Tensor[(7, 15, 16), bool] */;
    %230 = cast(meta[relay.Constant][10] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %231 = reshape(%230, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %232 = @func_1068(%231) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
    %233 = less_equal(%228, %229) /* ty=Tensor[(7, 15, 16), bool] */;
    %234 = %232.2;
    (%233, %234, meta[relay.Constant][10] /* ty=Tensor[(72), float32] */)
  };
  %235() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */
}

def @func_1112() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) {
  @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */
}

def @func_4808(%var_4806: Tensor[(7, 5, 11), bool]) -> (Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(7, 5, 11), bool]) {
  @func_4805(%var_4806) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(7, 5, 11), bool]) */
}

def @func_1313(%var_1273: Tensor[(630), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), int16], Tensor[(72), float32], Tensor[(7, 15, 630), float64], Tensor[(6, 6, 2), bool], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) {
  %236 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %237 = cast(%var_1273, dtype="float32") /* ty=Tensor[(630), float32] */;
  %238 = reshape(%237, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %239 = @func_668(%238) /* ty=(Tensor[(7, 15, 6), int32],) */;
  %240 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %241 = %240.0;
  %242 = cast(%var_1273, dtype="int16") /* ty=Tensor[(630), int16] */;
  %243 = cast(%241, dtype="int16") /* ty=Tensor[(7, 15, ?), int16] */;
  %244 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %245 = %244.0;
  %246 = cast(%var_1273, dtype="float64") /* ty=Tensor[(630), float64] */;
  %247 = cast(%245, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %248 = cast(meta[relay.Constant][11] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %249 = reshape(%248, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %250 = @func_399(%249) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %251 = %250.0;
  %252 = cast(%251, dtype="float32") /* ty=Tensor[(6, 6, 2), float32] */;
  %253 = rsqrt(%252) /* ty=Tensor[(6, 6, 2), float32] */;
  %254 = cast(%251, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
  %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%253, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %258 = cast(meta[relay.Constant][12] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %259 = cast(meta[relay.Constant][12] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %260 = reshape(%258, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float64] */;
  %261 = reshape(%259, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float64] */;
  %262 = @func_748(%260, %261) /* ty=(Tensor[(4, 9, 14), float64],) */;
  %263 = %236.2;
  %264 = %239.0;
  %265 = bitwise_and(%242, %243) /* ty=Tensor[(7, 15, 630), int16] */;
  %266 = floor_divide(%246, %247) /* ty=Tensor[(7, 15, 630), float64] */;
  %267 = equal(%256, %257) /* ty=Tensor[(6, 6, 2), bool] */;
  %268 = %262.0;
  (%263, %264, %265, meta[relay.Constant][11] /* ty=Tensor[(72), float32] */, %266, %267, %268, meta[relay.Constant][12] /* ty=Tensor[(504), float64] */)
}

def @func_3629() -> Tensor[(7, 15, ?), float32] {
  %270 = fn () -> Tensor[(7, 15, ?), float32] {
    %269 = @func_1863() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %269.0
  };
  %270() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_5579() -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, 3150), float64]) {
  %271 = @func_3905() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %272 = @func_4993() /* ty=(Tensor[(7, 15, 3150), float64], Tensor[(7, 15, ?), float64]) */;
  %273 = %271.0;
  %274 = %272.0;
  (%273, %274)
}

def @func_7167() -> (Tensor[(72), float32],) {
  %275 = @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */;
  %276 = %275.2;
  (%276,)
}

def @func_3960() -> Tensor[(7, 15, ?), float32] {
  @func_3958() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_2242() -> Tensor[(7, 15, ?), float32] {
  %277 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %277.0
}

def @func_1844() -> (Tensor[(7, 15, ?), float32],) {
  @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */
}

def @func_5237(%var_5235: Tensor[(4, 9, 14), float64]) -> Tensor[(4, 9, 14), float64] {
  @func_5234(%var_5235) /* ty=Tensor[(4, 9, 14), float64] */
}

def @func_4906(%var_4905: Tensor[(13, 15, 7), float64]) -> (Tensor[(13, 15, 7), float64],) {
  %280 = fn (%var_4896: Tensor[(13, 15, 7), float64]) -> (Tensor[(13, 15, 7), float64],) {
    %278 = cast(%var_4896, dtype="float64") /* ty=Tensor[(13, 15, 7), float64] */;
    %279 = asin(%278) /* ty=Tensor[(13, 15, 7), float64] */;
    (%279,)
  };
  %280(%var_4905) /* ty=(Tensor[(13, 15, 7), float64],) */
}

def @func_6446() -> (Tensor[(7, 15, ?), float64],) {
  %283 = fn () -> (Tensor[(7, 15, ?), float64],) {
    %281 = @func_1781() /* ty=(Tensor[(7, 15, ?), float64],) */;
    %282 = %281.0;
    (%282,)
  };
  %283() /* ty=(Tensor[(7, 15, ?), float64],) */
}

def @func_3832(%var_3830: Tensor[(630), float32]) -> (Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), bool]) {
  @func_3829(%var_3830) /* ty=(Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), bool]) */
}

def @func_2438(%var_2437: Tensor[(6, 84), float64]) -> (Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(4, 9, 14), float64], Tensor[(6, 84), float64], Tensor[(7, 15, ?), float32]) {
  %295 = fn (%var_2430: Tensor[(6, 84), float64]) -> (Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(4, 9, 14), float64], Tensor[(6, 84), float64], Tensor[(7, 15, ?), float32]) {
    %284 = @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */;
    %285 = cast(%var_2430, dtype="float64") /* ty=Tensor[(6, 84), float64] */;
    %286 = cast(%var_2430, dtype="float64") /* ty=Tensor[(6, 84), float64] */;
    %287 = reshape(%285, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float64] */;
    %288 = reshape(%286, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float64] */;
    %289 = @func_748(%287, %288) /* ty=(Tensor[(4, 9, 14), float64],) */;
    %290 = @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %291 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
    %292 = %284.1;
    %293 = %289.0;
    %294 = %290.0;
    (%291, %292, %293, %var_2430, %294)
  };
  %295(%var_2437) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(4, 9, 14), float64], Tensor[(6, 84), float64], Tensor[(7, 15, ?), float32]) */
}

def @func_3907() -> (Tensor[(7, 15, ?), float64],) {
  @func_3905() /* ty=(Tensor[(7, 15, ?), float64],) */
}

def @func_1148(%var_1147: Tensor[(70, 9), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, 6), int32], Tensor[(70, 9), float32]) {
  %302 = fn (%var_1140: Tensor[(70, 9), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, 6), int32], Tensor[(70, 9), float32]) {
    %296 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %297 = cast(%var_1140, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
    %298 = reshape(%297, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
    %299 = @func_668(%298) /* ty=(Tensor[(7, 15, 6), int32],) */;
    %300 = %296.0;
    %301 = %299.0;
    (%300, %301, %var_1140)
  };
  %302(%var_1147) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, 6), int32], Tensor[(70, 9), float32]) */
}

def @func_5319(%var_5307: Tensor[(6, 12, 11), float64]) -> Tensor[(6, 12, 11), float64] {
  %303 = cast(%var_5307, dtype="float64") /* ty=Tensor[(6, 12, 11), float64] */;
  log2(%303) /* ty=Tensor[(6, 12, 11), float64] */
}

def @func_4862(%var_4860: Tensor[(7, 15, 14), float32], %var_4861: Tensor[(72), float32]) -> (Tensor[(7, 15, 14), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
  @func_4858(%var_4860, %var_4861) /* ty=(Tensor[(7, 15, 14), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */
}

def @func_1068(%var_1063: Tensor[(72), float32]) -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) {
  %304 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %305 = cast(%var_1063, dtype="float32") /* ty=Tensor[(72), float32] */;
  %306 = reshape(%305, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %307 = @func_399(%306) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %308 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %309 = %304.0;
  %310 = %307.0;
  (%308, %309, %310, %var_1063)
}

def @func_2244() -> Tensor[(7, 15, ?), float32] {
  @func_2242() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_2408(%var_2407: Tensor[(900), int8]) -> (Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) {
  %328 = fn (%var_2377: Tensor[(900), int8]) -> (Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) {
    %311 = cast(%var_2377, dtype="int8") /* ty=Tensor[(900), int8] */;
    %312 = reshape(%311, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), int8] */;
    %313 = @func_2146(%312) /* ty=Tensor[(15, 5, 12), float64] */;
    %314 = cast(%var_2377, dtype="int32") /* ty=Tensor[(900), int32] */;
    %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%313, dtype="int32") /* ty=Tensor[(15, 5, 12), int32] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %318 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
    %319 = %318.2;
    %320 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
    %321 = cast(%319, dtype="uint8") /* ty=Tensor[(72), uint8] */;
    %322 = cast(%320, dtype="uint8") /* ty=Tensor[(7, 15, ?), uint8] */;
    %323 = @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %324 = logical_xor(%316, %317) /* ty=Tensor[(15, 5, 12), int32] */;
    %325 = multiply(%321, %322) /* ty=Tensor[(7, 15, 72), uint8] */;
    %326 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
    %327 = %323.0;
    (%324, %325, %326, %327)
  };
  %328(%var_2407) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */
}

def @func_6323() -> Tensor[(7, 15, ?), float32] {
  @func_6321() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_3378() -> (Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) {
  @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */
}

def @func_6237() -> (Tensor[(7, 15, ?), float64],) {
  %331 = fn () -> (Tensor[(7, 15, ?), float64],) {
    %329 = @func_6064() /* ty=(Tensor[(7, 15, ?), float64], Tensor[(504), float64]) */;
    %330 = %329.0;
    (%330,)
  };
  %331() /* ty=(Tensor[(7, 15, ?), float64],) */
}

def @func_2146(%var_2134: Tensor[(15, 5, 12), int8]) -> Tensor[(15, 5, 12), float64] {
  %332 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 5, 12), int8] */, dtype="int8") /* ty=Tensor[(15, 5, 12), int8] */;
  %333 = shape_of(%var_2134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_2134, dtype="int8") /* ty=Tensor[(15, 5, 12), int8] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %336 = add(%334, %335) /* ty=Tensor[(15, 5, 12), int8] */;
  %337 = cast(%336, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  log2(%337) /* ty=Tensor[(15, 5, 12), float64] */
}

def @main(%var_7197: Tensor[(7, 15, 9), float64]) -> (Tensor[(7, 15, 9), float64],) {
  %338 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %339 = cast(%338, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %340 = cast(%var_7197, dtype="float64") /* ty=Tensor[(7, 15, 9), float64] */;
  %341 = floor_mod(%339, %340) /* ty=Tensor[(7, 15, 9), float64] */;
  (%341,)
}

def @func_7114(%var_7107: Tensor[(7, 15, 3150), float64], %var_7108: Tensor[(72), float32], %var_7109: Tensor[(756), uint32], %var_7110: Tensor[(560), uint32], %var_7111: Tensor[(900), int8], %var_7112: Tensor[(14, 6, 9), bool], %var_7113: Tensor[(3150), int8]) -> (Tensor[(7, 15, 3150), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(756), uint32], Tensor[(7, 15, ?), float32], Tensor[(14, 5, 8), uint32], Tensor[(560), uint32], Tensor[(14, 6, 9), float64], Tensor[(13, 15, 3), uint16], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(72), float32], Tensor[(14, 6, 9), float64], Tensor[(14, 6, 9), float32], Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8], Tensor[(7, 15, ?), float32], Tensor[(7, 15, 3150), float64]) {
  %396 = fn (%var_6938: Tensor[(7, 15, 3150), float64], %var_6950: Tensor[(72), float32], %var_6955: Tensor[(756), uint32], %var_6974: Tensor[(560), uint32], %var_7013: Tensor[(900), int8], %var_7034: Tensor[(14, 6, 9), bool], %var_7068: Tensor[(3150), int8]) -> (Tensor[(7, 15, 3150), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(756), uint32], Tensor[(7, 15, ?), float32], Tensor[(14, 5, 8), uint32], Tensor[(560), uint32], Tensor[(14, 6, 9), float64], Tensor[(13, 15, 3), uint16], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(72), float32], Tensor[(14, 6, 9), float64], Tensor[(14, 6, 9), float32], Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8], Tensor[(7, 15, ?), float32], Tensor[(7, 15, 3150), float64]) {
    %342 = @func_6737() /* ty=Tensor[(7, 15, 3150), float64] */;
    %343 = cast(%var_6938, dtype="bool") /* ty=Tensor[(7, 15, 3150), bool] */;
    %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(3), int32] */;
    %345 = cast(%342, dtype="bool") /* ty=Tensor[(7, 15, 3150), bool] */;
    %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %347 = cast(%var_6950, dtype="float32") /* ty=Tensor[(72), float32] */;
    %348 = reshape(%347, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
    %349 = @func_399(%348) /* ty=(Tensor[(6, 6, 2), float32],) */;
    %350 = cast(%var_6974, dtype="uint32") /* ty=Tensor[(560), uint32] */;
    %351 = reshape(%350, newshape=[14, 5, 8]) /* ty=Tensor[(14, 5, 8), uint32] */;
    %352 = @func_5767(%351) /* ty=(Tensor[(14, 5, 8), uint32], Tensor[(7, 15, 3150), int32]) */;
    %353 = cast(%var_6955, dtype="uint32") /* ty=Tensor[(756), uint32] */;
    %354 = reshape(%353, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), uint32] */;
    %355 = @func_2582(%354) /* ty=Tensor[(14, 6, 9), uint32] */;
    %356 = cast(%355, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
    %357 = acosh(%356) /* ty=Tensor[(14, 6, 9), float64] */;
    %358 = cast(%357, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
    %359 = @func_4944() /* ty=(Tensor[(13, 15, 3), uint16], Tensor[(7, 15, 13), uint8], Tensor[(13, 15, 3), float64]) */;
    %360 = cast(%var_7013, dtype="int8") /* ty=Tensor[(900), int8] */;
    %361 = reshape(%360, newshape=[900]) /* ty=Tensor[(900), int8] */;
    %362 = @func_2406(%361) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
    %363 = @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */;
    %364 = cast(%357, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
    %365 = exp(%364) /* ty=Tensor[(14, 6, 9), float32] */;
    %366 = cast(%357, dtype="bool") /* ty=Tensor[(14, 6, 9), bool] */;
    %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
    %368 = cast(%365, dtype="bool") /* ty=Tensor[(14, 6, 9), bool] */;
    %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %370 = logical_or(%368, %369) /* ty=Tensor[(14, 6, 9), bool] */;
    %371 = cast(%370, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
    %372 = cast(%var_7034, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
    %373 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
    %374 = cast(%370, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
    %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %376 = cast(%var_7068, dtype="int8") /* ty=Tensor[(3150), int8] */;
    %377 = cast(%var_7068, dtype="int8") /* ty=Tensor[(3150), int8] */;
    %378 = reshape(%376, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
    %379 = reshape(%377, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
    %380 = @func_2836(%378, %379) /* ty=(Tensor[(15, 15, 14), bool],) */;
    %381 = @func_6359() /* ty=(Tensor[(504), float64], Tensor[(7, 15, 3150), float64]) */;
    %382 = not_equal(%345, %346) /* ty=Tensor[(7, 15, 3150), bool] */;
    %383 = %349.0;
    %384 = @func_6027() /* ty=Tensor[(7, 15, ?), float32] */;
    %385 = %352.0;
    %386 = atan(%358) /* ty=Tensor[(14, 6, 9), float64] */;
    %387 = %359.0;
    %388 = %362.2;
    %389 = %363.2;
    %390 = atanh(%371) /* ty=Tensor[(14, 6, 9), float64] */;
    %391 = mod(%374, %375) /* ty=Tensor[(14, 6, 9), float32] */;
    %392 = @func_6844() /* ty=Tensor[(7, 15, ?), float32] */;
    %393 = %380.0;
    %394 = @func_4655() /* ty=Tensor[(7, 15, ?), float32] */;
    %395 = %381.1;
    (%382, %383, %var_6950, %var_6955, %384, %385, %var_6974, %386, %387, %388, %var_7013, %389, %390, %391, %392, %393, %var_7068, %394, %395)
  };
  %396(%var_7107, %var_7108, %var_7109, %var_7110, %var_7111, %var_7112, %var_7113) /* ty=(Tensor[(7, 15, 3150), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(756), uint32], Tensor[(7, 15, ?), float32], Tensor[(14, 5, 8), uint32], Tensor[(560), uint32], Tensor[(14, 6, 9), float64], Tensor[(13, 15, 3), uint16], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(72), float32], Tensor[(14, 6, 9), float64], Tensor[(14, 6, 9), float32], Tensor[(7, 15, ?), float32], Tensor[(15, 15, 14), bool], Tensor[(3150), int8], Tensor[(7, 15, ?), float32], Tensor[(7, 15, 3150), float64]) */
}

def @func_5472() -> (Tensor[(6, 12, 11), float64], Tensor[(7, 15, 792), bool], Tensor[(792), float32]) {
  @func_5470() /* ty=(Tensor[(6, 12, 11), float64], Tensor[(7, 15, 792), bool], Tensor[(792), float32]) */
}

def @func_3342() -> (Tensor[(7, 15, ?), float64],) {
  @func_3340() /* ty=(Tensor[(7, 15, ?), float64],) */
}

def @func_2584(%var_2583: Tensor[(14, 6, 9), uint32]) -> Tensor[(14, 6, 9), uint32] {
  %401 = fn (%var_2571: Tensor[(14, 6, 9), uint32]) -> Tensor[(14, 6, 9), uint32] {
    %397 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 6, 9), uint32] */, dtype="uint32") /* ty=Tensor[(14, 6, 9), uint32] */;
    %398 = shape_of(%var_2571, dtype="int32") /* ty=Tensor[(3), int32] */;
    %399 = cast(%var_2571, dtype="uint32") /* ty=Tensor[(14, 6, 9), uint32] */;
    %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_or(%399, %400) /* ty=Tensor[(14, 6, 9), uint32] */
  };
  %401(%var_2583) /* ty=Tensor[(14, 6, 9), uint32] */
}

def @func_1782() -> (Tensor[(7, 15, ?), float64],) {
  %406 = fn () -> (Tensor[(7, 15, ?), float64],) {
    %402 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
    %403 = %402.1;
    %404 = cast(%403, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
    %405 = erf(%404) /* ty=Tensor[(7, 15, ?), float64] */;
    (%405,)
  };
  %406() /* ty=(Tensor[(7, 15, ?), float64],) */
}

def @func_4411() -> Tensor[(3150), int8] {
  @func_3586() /* ty=Tensor[(3150), int8] */
}

def @func_1110() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) {
  %407 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %408 = %407.1;
  %409 = cast(%408, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %410 = log2(%409) /* ty=Tensor[(7, 15, ?), float64] */;
  %411 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %412 = %411.0;
  %413 = cast(%412, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %414 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%410, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %417 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %418 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %419 = logical_and(%415, %416) /* ty=Tensor[(7, 15, ?), bool] */;
  %420 = %417.0;
  (%418, %419, %420)
}

def @func_1530(%var_1528: Tensor[(2, 13, 11), uint16], %var_1529: Tensor[(2, 13, 11), uint16]) -> (Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) {
  %427 = fn (%var_1496: Tensor[(2, 13, 11), uint16], %var_1497: Tensor[(2, 13, 11), uint16]) -> (Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) {
    %421 = cast(%var_1497, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
    %422 = shape_of(%var_1496, dtype="int32") /* ty=Tensor[(3), int32] */;
    %423 = cast(%var_1496, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
    %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %425 = right_shift(%423, %424) /* ty=Tensor[(2, 13, 11), uint16] */;
    %426 = @func_1389() /* ty=Tensor[(7, 15, ?), float32] */;
    (%425, %426)
  };
  %427(%var_1528, %var_1529) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) */
}

def @func_3376() -> (Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) {
  %428 = @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */;
  %429 = cast(meta[relay.Constant][15] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %430 = reshape(%429, newshape=[6, 84]) /* ty=Tensor[(6, 84), float64] */;
  %431 = @func_2436(%430) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(4, 9, 14), float64], Tensor[(6, 84), float64], Tensor[(7, 15, ?), float32]) */;
  %432 = %428.3;
  %433 = %431.2;
  (%432, %433, meta[relay.Constant][15] /* ty=Tensor[(504), float64] */)
}

def @func_4640(%var_4560: Tensor[(210), float32], %var_4562: Tensor[(286), uint16]) -> (Tensor[(7, 15, 1680), float32], Tensor[(210), float32], Tensor[(900), int8], Tensor[(286), uint16], Tensor[(6, 5, 2), float32], Tensor[(3150), int8], Tensor[(225, 14), bool], Tensor[(10, 8, 1), float64], Tensor[(2, 40), float64], Tensor[(3150), int8], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float64]) {
  %434 = cast(%var_4560, dtype="float32") /* ty=Tensor[(210), float32] */;
  %435 = cast(meta[relay.Constant][16] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %436 = cast(%var_4562, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %437 = reshape(%434, newshape=[7, 15, 2]) /* ty=Tensor[(7, 15, 2), float32] */;
  %438 = reshape(%435, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %439 = reshape(%436, newshape=[286]) /* ty=Tensor[(286), uint16] */;
  %440 = @func_2811(%437, %438, %439) /* ty=(Tensor[(7, 15, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(55, 7), bool], Tensor[(7, 15, 1680), float32], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) */;
  %441 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 5, 2), float32] */;
  %442 = rsqrt(%441) /* ty=Tensor[(6, 5, 2), float32] */;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(6, 5, 2), float32] */;
  %444 = cast(meta[relay.Constant][18] /* ty=Tensor[(225, 14), bool] */, dtype="bool") /* ty=Tensor[(225, 14), bool] */;
  %445 = reshape(%444, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %446 = @func_3190(%445) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(15, 15, 14), float64]) */;
  %447 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 40), float64] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %448 = reshape(%447, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float64] */;
  %449 = @func_1944(%448) /* ty=(Tensor[(10, 8, 1), float64],) */;
  %450 = @func_4506() /* ty=(Tensor[(3150), int8],) */;
  %451 = @func_3340() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %452 = %440.3;
  %453 = asin(%443) /* ty=Tensor[(6, 5, 2), float32] */;
  %454 = %446.2;
  %455 = %449.0;
  %456 = %450.0;
  %457 = @func_3958() /* ty=Tensor[(7, 15, ?), float32] */;
  %458 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  %459 = %451.0;
  (%452, %var_4560, meta[relay.Constant][16] /* ty=Tensor[(900), int8] */, %var_4562, %453, %454, meta[relay.Constant][18] /* ty=Tensor[(225, 14), bool] */, %455, meta[relay.Constant][19] /* ty=Tensor[(2, 40), float64] */, %456, %457, %458, %459)
}

def @func_6321() -> Tensor[(7, 15, ?), float32] {
  @func_6027() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_4069() -> Tensor[(7, 15, ?), float32] {
  @func_4067() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_1894(%var_1892: Tensor[(7, 5, 11), bool], %var_1893: Tensor[(7, 5, 11), bool]) -> (Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) {
  @func_1890(%var_1892, %var_1893) /* ty=(Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) */
}

def @func_6639() -> (Tensor[(7, 15, ?), float32],) {
  %462 = fn () -> (Tensor[(7, 15, ?), float32],) {
    %460 = @func_5624() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %461 = %460.0;
    (%461,)
  };
  %462() /* ty=(Tensor[(7, 15, ?), float32],) */
}

def @func_5565() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
  %467 = fn () -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
    %463 = @func_3944() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32]) */;
    %464 = @func_2119() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %465 = %463.1;
    %466 = %464.0;
    (%465, %466)
  };
  %467() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */
}

def @func_6782() -> Tensor[(7, 15, ?), float32] {
  %468 = @func_1863() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %468.0
}

def @func_2176() -> (Tensor[(7, 15, ?), float64],) {
  %471 = fn () -> (Tensor[(7, 15, ?), float64],) {
    %469 = @func_1781() /* ty=(Tensor[(7, 15, ?), float64],) */;
    %470 = %469.0;
    (%470,)
  };
  %471() /* ty=(Tensor[(7, 15, ?), float64],) */
}

def @func_6418(%var_6411: Tensor[(900), int8]) -> (Tensor[(6, 12, 11), float64], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(900), int8]) {
  %472 = @func_5470() /* ty=(Tensor[(6, 12, 11), float64], Tensor[(7, 15, 792), bool], Tensor[(792), float32]) */;
  %473 = cast(%var_6411, dtype="int8") /* ty=Tensor[(900), int8] */;
  %474 = reshape(%473, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %475 = @func_2700(%474) /* ty=(Tensor[(900), float32], Tensor[(7, 15, 5), float64], Tensor[(6, 6, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) */;
  %476 = %472.0;
  %477 = @func_6027() /* ty=Tensor[(7, 15, ?), float32] */;
  %478 = %475.2;
  (%476, %477, %478, %var_6411)
}

def @func_7169() -> (Tensor[(72), float32],) {
  @func_7167() /* ty=(Tensor[(72), float32],) */
}

def @func_3019() -> Tensor[(7, 15, ?), float32] {
  %480 = fn () -> Tensor[(7, 15, ?), float32] {
    %479 = @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %479.0
  };
  %480() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_4413() -> Tensor[(3150), int8] {
  @func_4411() /* ty=Tensor[(3150), int8] */
}

def @func_5234(%var_5218: Tensor[(4, 9, 14), float64]) -> Tensor[(4, 9, 14), float64] {
  %481 = @func_3376() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(4, 9, 14), float64], Tensor[(504), float64]) */;
  %482 = %481.1;
  %483 = cast(%var_5218, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%482, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%485, %486) /* ty=Tensor[(4, 9, 14), float64] */
}

def @func_6845() -> Tensor[(7, 15, ?), float32] {
  %488 = fn () -> Tensor[(7, 15, ?), float32] {
    %487 = @func_5564() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
    %487.1
  };
  %488() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_5807() -> Tensor[(3150), uint8] {
  %494 = fn () -> Tensor[(3150), uint8] {
    %489 = @func_4411() /* ty=Tensor[(3150), int8] */;
    %490 = cast(meta[relay.Constant][20] /* ty=Tensor[(3150), int8] */, dtype="uint8") /* ty=Tensor[(3150), uint8] */;
    %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(1), int32] */;
    %492 = cast(%489, dtype="uint8") /* ty=Tensor[(3150), uint8] */;
    %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?), uint8] */;
    bitwise_or(%492, %493) /* ty=Tensor[(3150), uint8] */
  };
  %494() /* ty=Tensor[(3150), uint8] */
}

def @func_5322(%var_5320: Tensor[(6, 12, 11), float64]) -> Tensor[(6, 12, 11), float64] {
  @func_5319(%var_5320) /* ty=Tensor[(6, 12, 11), float64] */
}

def @func_6506(%var_6496: Tensor[(630), float32], %var_6497: Tensor[(72, 1), float32]) -> (Tensor[(3150), int8], Tensor[(900), int8], Tensor[(900), int8], Tensor[(72, 630), uint64]) {
  %495 = cast(%var_6496, dtype="float32") /* ty=Tensor[(630), float32] */;
  %496 = cast(%var_6497, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %497 = cast(meta[relay.Constant][21] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %498 = reshape(%495, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %499 = reshape(%496, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %500 = reshape(%497, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %501 = @func_5924(%498, %499, %500) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, 630), bool], Tensor[(70, 9), float32], Tensor[(3150), int8], Tensor[(7, 15, 14), bool], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(15, 5, 12), int32], Tensor[(900), int8]) */;
  %502 = cast(%var_6496, dtype="uint64") /* ty=Tensor[(630), uint64] */;
  %503 = cast(%var_6497, dtype="uint64") /* ty=Tensor[(72, 1), uint64] */;
  %504 = @func_5139() /* ty=Tensor[(3150), int8] */;
  %505 = %501.8;
  %506 = right_shift(%502, %503) /* ty=Tensor[(72, 630), uint64] */;
  (%504, %505, meta[relay.Constant][21] /* ty=Tensor[(900), int8] */, %506)
}

def @func_2119() -> (Tensor[(7, 15, ?), float32],) {
  %507 = @func_1842() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %508 = %507.0;
  (%508,)
}

def @func_2919(%var_2917: Tensor[(7, 15, 9), float32]) -> (Tensor[(7, 15, 9), int8], Tensor[(7, 15, 9), uint16], Tensor[(7, 15, 9), bool], Tensor[(7, 15, ?), float32]) {
  @func_2916(%var_2917) /* ty=(Tensor[(7, 15, 9), int8], Tensor[(7, 15, 9), uint16], Tensor[(7, 15, 9), bool], Tensor[(7, 15, ?), float32]) */
}

def @func_4805(%var_4785: Tensor[(7, 5, 11), bool]) -> (Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(7, 5, 11), bool]) {
  %509 = @func_2629() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float32]) */;
  %510 = %509.1;
  %511 = cast(%var_4785, dtype="int16") /* ty=Tensor[(7, 5, 11), int16] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="int16") /* ty=Tensor[(7, 5, 11), int16] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %515 = bitwise_or(%513, %514) /* ty=Tensor[(7, 5, 11), int16] */;
  %516 = cast(%var_4785, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%515, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %520 = @func_1409() /* ty=Tensor[(7, 15, ?), float32] */;
  %521 = @func_4411() /* ty=Tensor[(3150), int8] */;
  %522 = less(%518, %519) /* ty=Tensor[(7, 5, 11), bool] */;
  (%520, %521, %522)
}

def @func_6474() -> Tensor[(7, 15, ?), float32] {
  @func_3958() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_5074(%var_5072: Tensor[(7, 15, 2), float64], %var_5073: Tensor[(7, 15, 2), float64]) -> (Tensor[(7, 15, 2), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, 2), float64], Tensor[(13, 15, 3), uint16]) {
  @func_5070(%var_5072, %var_5073) /* ty=(Tensor[(7, 15, 2), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, 2), float64], Tensor[(13, 15, 3), uint16]) */
}

def @func_2630() -> (Tensor[(7, 15, ?), bool], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float32]) {
  %533 = fn () -> (Tensor[(7, 15, ?), bool], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float32]) {
    %523 = @func_1590() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
    %524 = cast(meta[relay.Constant][22] /* ty=Tensor[(55, 7), bool] */, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
    %525 = cast(meta[relay.Constant][22] /* ty=Tensor[(55, 7), bool] */, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
    %526 = reshape(%524, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
    %527 = reshape(%525, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
    %528 = @func_1890(%526, %527) /* ty=(Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) */;
    %529 = cast(meta[relay.Constant][22] /* ty=Tensor[(55, 7), bool] */, dtype="float32") /* ty=Tensor[(55, 7), float32] */;
    %530 = %523.0;
    %531 = %528.0;
    %532 = log10(%529) /* ty=Tensor[(55, 7), float32] */;
    (%530, %531, %532)
  };
  %533() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 5, 11), bool], Tensor[(55, 7), float32]) */
}

def @func_5070(%var_5026: Tensor[(7, 15, 2), float64], %var_5044: Tensor[(7, 15, 2), float64]) -> (Tensor[(7, 15, 2), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, 2), float64], Tensor[(13, 15, 3), uint16]) {
  %534 = @func_2175() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %535 = %534.0;
  %536 = cast(%535, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %537 = cast(%var_5026, dtype="float64") /* ty=Tensor[(7, 15, 2), float64] */;
  %538 = cast(%var_5044, dtype="float64") /* ty=Tensor[(7, 15, 2), float64] */;
  %539 = shape_of(%var_5026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%var_5026, dtype="float64") /* ty=Tensor[(7, 15, 2), float64] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %542 = @func_4944() /* ty=(Tensor[(13, 15, 3), uint16], Tensor[(7, 15, 13), uint8], Tensor[(13, 15, 3), float64]) */;
  %543 = power(%536, %537) /* ty=Tensor[(7, 15, 2), float64] */;
  %544 = @func_4067() /* ty=Tensor[(7, 15, ?), float32] */;
  %545 = floor_mod(%540, %541) /* ty=Tensor[(7, 15, 2), float64] */;
  %546 = %542.0;
  (%543, %544, %545, %546)
}

def @func_1391() -> Tensor[(7, 15, ?), float32] {
  @func_1389() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_816() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
  %549 = fn () -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
    %547 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
    %548 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
    (%547, %548)
  };
  %549() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */
}

def @func_3829(%var_3808: Tensor[(630), float32]) -> (Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), bool]) {
  %550 = cast(%var_3808, dtype="float32") /* ty=Tensor[(630), float32] */;
  %551 = reshape(%550, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %552 = @func_668(%551) /* ty=(Tensor[(7, 15, 6), int32],) */;
  %553 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %554 = %553.1;
  %555 = cast(%var_3808, dtype="bool") /* ty=Tensor[(630), bool] */;
  %556 = cast(%554, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %557 = %552.0;
  %558 = less_equal(%555, %556) /* ty=Tensor[(7, 15, 630), bool] */;
  (%557, %558)
}

def @func_4994() -> (Tensor[(7, 15, 3150), float64], Tensor[(7, 15, ?), float64]) {
  %565 = fn () -> (Tensor[(7, 15, 3150), float64], Tensor[(7, 15, ?), float64]) {
    %559 = @func_3693() /* ty=(Tensor[(7, 15, 3150), float64],) */;
    %560 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
    %561 = %560.1;
    %562 = cast(%561, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
    %563 = %559.0;
    %564 = tan(%562) /* ty=Tensor[(7, 15, ?), float64] */;
    (%563, %564)
  };
  %565() /* ty=(Tensor[(7, 15, 3150), float64], Tensor[(7, 15, ?), float64]) */
}

def @func_2047() -> (Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) {
  @func_2045() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) */
}

def @func_3965() -> (Tensor[(7, 15, ?), float32],) {
  @func_3963() /* ty=(Tensor[(7, 15, ?), float32],) */
}

def @func_6126() -> Tensor[(6, 12, 11), float64] {
  %566 = @func_5470() /* ty=(Tensor[(6, 12, 11), float64], Tensor[(7, 15, 792), bool], Tensor[(792), float32]) */;
  %566.0
}

def @func_6534() -> (Tensor[(3150), int8],) {
  @func_6532() /* ty=(Tensor[(3150), int8],) */
}

def @func_1590() -> (Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) {
  %567 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %568 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %569 = %568.0;
  %570 = cast(%569, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %571 = %567.1;
  %572 = log(%570) /* ty=Tensor[(7, 15, ?), float32] */;
  (%571, %572)
}

def @func_1863() -> (Tensor[(7, 15, ?), float32],) {
  %573 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %575 = log10(%574) /* ty=Tensor[(7, 15, ?), float32] */;
  (%575,)
}

def @func_5251() -> (Tensor[(504), float64],) {
  %576 = @func_4351() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(286), uint16], Tensor[(504), float64]) */;
  %577 = %576.2;
  (%577,)
}

def @func_5408(%var_5405: Tensor[(210), float32], %var_5406: Tensor[(900), int8], %var_5407: Tensor[(26, 11), uint16]) -> (Tensor[(286), uint16], Tensor[(210), float32], Tensor[(900), int8], Tensor[(26, 11), uint16], Tensor[(504), float64], Tensor[(3150), int8], Tensor[(6, 6, 2), float32], Tensor[(7, 15, 3150), uint32], Tensor[(7, 15, ?), float64]) {
  @func_5403(%var_5405, %var_5406, %var_5407) /* ty=(Tensor[(286), uint16], Tensor[(210), float32], Tensor[(900), int8], Tensor[(26, 11), uint16], Tensor[(504), float64], Tensor[(3150), int8], Tensor[(6, 6, 2), float32], Tensor[(7, 15, 3150), uint32], Tensor[(7, 15, ?), float64]) */
}

def @func_1947(%var_1945: Tensor[(10, 8, 1), float64]) -> (Tensor[(10, 8, 1), float64],) {
  @func_1944(%var_1945) /* ty=(Tensor[(10, 8, 1), float64],) */
}

def @func_1410() -> Tensor[(7, 15, ?), float32] {
  %579 = fn () -> Tensor[(7, 15, ?), float32] {
    %578 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
    %578.0
  };
  %579() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_3139(%var_3138: Tensor[(1, 900), int8]) -> (Tensor[(15, 5, 12), int32], Tensor[(7, 15, ?), uint32], Tensor[(7, 15, 900), int32], Tensor[(7, 15, 900), int16], Tensor[(7, 15, ?), float32]) {
  %603 = fn (%var_3096: Tensor[(1, 900), int8]) -> (Tensor[(15, 5, 12), int32], Tensor[(7, 15, ?), uint32], Tensor[(7, 15, 900), int32], Tensor[(7, 15, 900), int16], Tensor[(7, 15, ?), float32]) {
    %580 = cast(%var_3096, dtype="int8") /* ty=Tensor[(1, 900), int8] */;
    %581 = reshape(%580, newshape=[900]) /* ty=Tensor[(900), int8] */;
    %582 = @func_2406(%581) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
    %583 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
    %584 = %583.1;
    %585 = cast(%584, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
    %586 = acos(%585) /* ty=Tensor[(7, 15, ?), float32] */;
    %587 = cast(%584, dtype="uint32") /* ty=Tensor[(7, 15, ?), uint32] */;
    %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %589 = cast(%586, dtype="uint32") /* ty=Tensor[(7, 15, ?), uint32] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %591 = cast(%var_3096, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
    %592 = cast(%584, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
    %593 = power(%591, %592) /* ty=Tensor[(7, 15, 900), float32] */;
    %594 = cast(%593, dtype="int32") /* ty=Tensor[(7, 15, 900), int32] */;
    %595 = cast(%584, dtype="int32") /* ty=Tensor[(7, 15, ?), int32] */;
    %596 = cast(%586, dtype="int16") /* ty=Tensor[(7, 15, ?), int16] */;
    %597 = cast(%593, dtype="int16") /* ty=Tensor[(7, 15, 900), int16] */;
    %598 = %582.0;
    %599 = multiply(%589, %590) /* ty=Tensor[(7, 15, ?), uint32] */;
    %600 = bitwise_and(%594, %595) /* ty=Tensor[(7, 15, 900), int32] */;
    %601 = logical_xor(%596, %597) /* ty=Tensor[(7, 15, 900), int16] */;
    %602 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
    (%598, %599, %600, %601, %602)
  };
  %603(%var_3138) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, ?), uint32], Tensor[(7, 15, 900), int32], Tensor[(7, 15, 900), int16], Tensor[(7, 15, ?), float32]) */
}

def @func_5470() -> (Tensor[(6, 12, 11), float64], Tensor[(7, 15, 792), bool], Tensor[(792), float32]) {
  %604 = cast(meta[relay.Constant][23] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %605 = reshape(%604, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), float64] */;
  %606 = @func_4655() /* ty=Tensor[(7, 15, ?), float32] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %608 = cosh(%607) /* ty=Tensor[(7, 15, ?), float32] */;
  %609 = cast(%608, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %610 = cast(meta[relay.Constant][23] /* ty=Tensor[(792), float64] */, dtype="bool") /* ty=Tensor[(792), bool] */;
  %611 = cast(meta[relay.Constant][23] /* ty=Tensor[(792), float64] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %612 = @func_5319(%605) /* ty=Tensor[(6, 12, 11), float64] */;
  %613 = not_equal(%609, %610) /* ty=Tensor[(7, 15, 792), bool] */;
  %614 = tan(%611) /* ty=Tensor[(792), float32] */;
  (%612, %613, %614)
}

def @func_3457() -> (Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) {
  %615 = cast(meta[relay.Constant][24] /* ty=Tensor[(3150), bool] */, dtype="bool") /* ty=Tensor[(3150), bool] */;
  %616 = reshape(%615, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), bool] */;
  %617 = @func_3190(%616) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(15, 15, 14), float64]) */;
  %618 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  %619 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  %620 = %617.2;
  (%618, %619, %620, meta[relay.Constant][24] /* ty=Tensor[(3150), bool] */)
}

def @func_3328(%var_3326: Tensor[(36, 14), float64]) -> (Tensor[(7, 15, ?), float32], Tensor[(2, 13, 11), uint16], Tensor[(286), uint16], Tensor[(6, 6, 2), float32], Tensor[(36, 14), float64]) {
  @func_3325(%var_3326) /* ty=(Tensor[(7, 15, ?), float32], Tensor[(2, 13, 11), uint16], Tensor[(286), uint16], Tensor[(6, 6, 2), float32], Tensor[(36, 14), float64]) */
}

def @func_4057() -> (Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) {
  %634 = fn () -> (Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) {
    %621 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
    %622 = cast(%621, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
    %623 = asinh(%622) /* ty=Tensor[(7, 15, ?), float64] */;
    %624 = cast(%621, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
    %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %626 = cast(%623, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %628 = cast(meta[relay.Constant][25] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %629 = reshape(%628, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %630 = @func_3829(%629) /* ty=(Tensor[(7, 15, 6), int32], Tensor[(7, 15, 630), bool]) */;
    %631 = equal(%626, %627) /* ty=Tensor[(7, 15, ?), bool] */;
    %632 = %630.1;
    %633 = @func_3958() /* ty=Tensor[(7, 15, ?), float32] */;
    (%631, %632, meta[relay.Constant][25] /* ty=Tensor[(630), float32] */, %633)
  };
  %634() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */
}

def @func_2549() -> Tensor[(7, 15, ?), float32] {
  %635 = fn () -> Tensor[(7, 15, ?), float32] {
    @func_2242() /* ty=Tensor[(7, 15, ?), float32] */
  };
  %635() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_5660(%var_5658: Tensor[(1, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(7, 15, ?), float32]) {
  @func_5657(%var_5658) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(7, 15, ?), float32]) */
}

def @func_2121() -> (Tensor[(7, 15, ?), float32],) {
  @func_2119() /* ty=(Tensor[(7, 15, ?), float32],) */
}

def @func_3587() -> Tensor[(3150), int8] {
  %642 = fn () -> Tensor[(3150), int8] {
    %636 = @func_3457() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(3150), bool]) */;
    %637 = %636.3;
    %638 = cast(meta[relay.Constant][26] /* ty=Tensor[(3150), bool] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
    %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(1), int32] */;
    %640 = cast(%637, dtype="int8") /* ty=Tensor[(3150), int8] */;
    %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?), int8] */;
    left_shift(%640, %641) /* ty=Tensor[(3150), int8] */
  };
  %642() /* ty=Tensor[(3150), int8] */
}

def @func_4237() -> Tensor[(2, 9, 3), float64] {
  @func_2987() /* ty=Tensor[(2, 9, 3), float64] */
}

def @func_4260() -> Tensor[(3150), int8] {
  @func_4258() /* ty=Tensor[(3150), int8] */
}

def @func_6029() -> Tensor[(7, 15, ?), float32] {
  @func_6027() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_5769(%var_5768: Tensor[(14, 5, 8), uint32]) -> (Tensor[(14, 5, 8), uint32], Tensor[(7, 15, 3150), int32]) {
  %654 = fn (%var_5715: Tensor[(14, 5, 8), uint32]) -> (Tensor[(14, 5, 8), uint32], Tensor[(7, 15, 3150), int32]) {
    %643 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 5, 8), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5, 8), uint32] */;
    %644 = shape_of(%var_5715, dtype="int32") /* ty=Tensor[(3), int32] */;
    %645 = cast(%var_5715, dtype="uint32") /* ty=Tensor[(14, 5, 8), uint32] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %647 = @func_3958() /* ty=Tensor[(7, 15, ?), float32] */;
    %648 = @func_3693() /* ty=(Tensor[(7, 15, 3150), float64],) */;
    %649 = %648.0;
    %650 = cast(%647, dtype="int32") /* ty=Tensor[(7, 15, ?), int32] */;
    %651 = cast(%649, dtype="int32") /* ty=Tensor[(7, 15, 3150), int32] */;
    %652 = add(%645, %646) /* ty=Tensor[(14, 5, 8), uint32] */;
    %653 = bitwise_xor(%650, %651) /* ty=Tensor[(7, 15, 3150), int32] */;
    (%652, %653)
  };
  %654(%var_5768) /* ty=(Tensor[(14, 5, 8), uint32], Tensor[(7, 15, 3150), int32]) */
}

def @func_679() -> Tensor[(7, 15, ?), float32] {
  %655 = fn () -> Tensor[(7, 15, ?), float32] {
    @func_580() /* ty=Tensor[(7, 15, ?), float32] */
  };
  %655() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_6738() -> Tensor[(7, 15, 3150), float64] {
  %657 = fn () -> Tensor[(7, 15, 3150), float64] {
    %656 = @func_3693() /* ty=(Tensor[(7, 15, 3150), float64],) */;
    %656.0
  };
  %657() /* ty=Tensor[(7, 15, 3150), float64] */
}

def @func_4321() -> (Tensor[(7, 15, 16), int64],) {
  %665 = fn () -> (Tensor[(7, 15, 16), int64],) {
    %658 = @func_3944() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32]) */;
    %659 = %658.0;
    %660 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 15, 16), bool] */, dtype="int64") /* ty=Tensor[(7, 15, 16), int64] */;
    %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
    %662 = cast(%659, dtype="int64") /* ty=Tensor[(7, 15, 16), int64] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %664 = left_shift(%662, %663) /* ty=Tensor[(7, 15, 16), int64] */;
    (%664,)
  };
  %665() /* ty=(Tensor[(7, 15, 16), int64],) */
}

def @func_401(%var_400: Tensor[(6, 6, 2), float32]) -> (Tensor[(6, 6, 2), float32],) {
  %668 = fn (%var_388: Tensor[(6, 6, 2), float32]) -> (Tensor[(6, 6, 2), float32],) {
    %666 = cast(%var_388, dtype="float32") /* ty=Tensor[(6, 6, 2), float32] */;
    %667 = cosh(%666) /* ty=Tensor[(6, 6, 2), float32] */;
    (%667,)
  };
  %668(%var_400) /* ty=(Tensor[(6, 6, 2), float32],) */
}

def @func_580() -> Tensor[(7, 15, ?), float32] {
  %669 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 1), float32] */;
  %670 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(7, 15, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 1), float32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%671, %672) /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_3945() -> (Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32]) {
  %676 = fn () -> (Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32]) {
    %673 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
    %674 = %673.0;
    %675 = @func_2548() /* ty=Tensor[(7, 15, ?), float32] */;
    (%674, %675)
  };
  %676() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(7, 15, ?), float32]) */
}

def @func_3340() -> (Tensor[(7, 15, ?), float64],) {
  %677 = @func_2175() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %678 = %677.0;
  (%678,)
}

def @func_4945() -> (Tensor[(13, 15, 3), uint16], Tensor[(7, 15, 13), uint8], Tensor[(13, 15, 3), float64]) {
  %688 = fn () -> (Tensor[(13, 15, 3), uint16], Tensor[(7, 15, 13), uint8], Tensor[(13, 15, 3), float64]) {
    %679 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 15, 1), uint16] */, dtype="uint16") /* ty=Tensor[(13, 15, 1), uint16] */;
    %680 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 15, 3), uint16] */, dtype="uint16") /* ty=Tensor[(13, 15, 3), uint16] */;
    %681 = @func_2548() /* ty=Tensor[(7, 15, ?), float32] */;
    %682 = cast(%681, dtype="uint8") /* ty=Tensor[(7, 15, ?), uint8] */;
    %683 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 15, 13), float32] */, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
    %684 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 15, 3), uint16] */, dtype="float64") /* ty=Tensor[(13, 15, 3), float64] */;
    %685 = minimum(%679, %680) /* ty=Tensor[(13, 15, 3), uint16] */;
    %686 = bitwise_xor(%682, %683) /* ty=Tensor[(7, 15, 13), uint8] */;
    %687 = exp(%684) /* ty=Tensor[(13, 15, 3), float64] */;
    (%685, %686, %687)
  };
  %688() /* ty=(Tensor[(13, 15, 3), uint16], Tensor[(7, 15, 13), uint8], Tensor[(13, 15, 3), float64]) */
}

def @func_4132(%var_4130: Tensor[(20, 4), float64], %var_4131: Tensor[(756), uint32]) -> (Tensor[(7, 15, ?), bool], Tensor[(10, 8, 1), float64], Tensor[(20, 4), float64], Tensor[(7, 15, ?), int8], Tensor[(14, 6, 9), uint32], Tensor[(756), uint32], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) {
  %712 = fn (%var_4113: Tensor[(20, 4), float64], %var_4120: Tensor[(756), uint32]) -> (Tensor[(7, 15, ?), bool], Tensor[(10, 8, 1), float64], Tensor[(20, 4), float64], Tensor[(7, 15, ?), int8], Tensor[(14, 6, 9), uint32], Tensor[(756), uint32], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) {
    %689 = @func_4056() /* ty=(Tensor[(7, 15, ?), bool], Tensor[(7, 15, 630), bool], Tensor[(630), float32], Tensor[(7, 15, ?), float32]) */;
    %690 = cast(%var_4113, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
    %691 = reshape(%690, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float64] */;
    %692 = @func_1944(%691) /* ty=(Tensor[(10, 8, 1), float64],) */;
    %693 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %694 = %693.0;
    %695 = cast(%694, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
    %696 = cos(%695) /* ty=Tensor[(7, 15, ?), float64] */;
    %697 = @func_4067() /* ty=Tensor[(7, 15, ?), float32] */;
    %698 = cast(%697, dtype="int8") /* ty=Tensor[(7, 15, ?), int8] */;
    %699 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(%696, dtype="int8") /* ty=Tensor[(7, 15, ?), int8] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %702 = cast(%var_4120, dtype="uint32") /* ty=Tensor[(756), uint32] */;
    %703 = reshape(%702, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), uint32] */;
    %704 = @func_2175() /* ty=(Tensor[(7, 15, ?), float64],) */;
    %705 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
    %706 = %689.0;
    %707 = %692.0;
    %708 = add(%700, %701) /* ty=Tensor[(7, 15, ?), int8] */;
    %709 = @func_2582(%703) /* ty=Tensor[(14, 6, 9), uint32] */;
    %710 = %704.0;
    %711 = %705.1;
    (%706, %707, %var_4113, %708, %709, %var_4120, %710, %711)
  };
  %712(%var_4130, %var_4131) /* ty=(Tensor[(7, 15, ?), bool], Tensor[(10, 8, 1), float64], Tensor[(20, 4), float64], Tensor[(7, 15, ?), int8], Tensor[(14, 6, 9), uint32], Tensor[(756), uint32], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */
}

def @func_4258() -> Tensor[(3150), int8] {
  @func_3586() /* ty=Tensor[(3150), int8] */
}

def @func_5602(%var_5600: Tensor[(55, 7), bool]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(55, 7), bool]) {
  %713 = @func_3905() /* ty=(Tensor[(7, 15, ?), float64],) */;
  %714 = cast(%var_5600, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %715 = cast(%var_5600, dtype="bool") /* ty=Tensor[(55, 7), bool] */;
  %716 = reshape(%714, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
  %717 = reshape(%715, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), bool] */;
  %718 = @func_1890(%716, %717) /* ty=(Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) */;
  %719 = %713.0;
  %720 = @func_3018() /* ty=Tensor[(7, 15, ?), float32] */;
  %721 = %718.1;
  (%719, %720, %721, %var_5600)
}

def @func_6128() -> Tensor[(6, 12, 11), float64] {
  @func_6126() /* ty=Tensor[(6, 12, 11), float64] */
}

def @func_4506() -> (Tensor[(3150), int8],) {
  %722 = @func_3586() /* ty=Tensor[(3150), int8] */;
  (%722,)
}

def @func_1389() -> Tensor[(7, 15, ?), float32] {
  @func_580() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_3694() -> (Tensor[(7, 15, 3150), float64],) {
  %729 = fn () -> (Tensor[(7, 15, 3150), float64],) {
    %723 = @func_3586() /* ty=Tensor[(3150), int8] */;
    %724 = @func_2119() /* ty=(Tensor[(7, 15, ?), float32],) */;
    %725 = %724.0;
    %726 = cast(%723, dtype="float64") /* ty=Tensor[(3150), float64] */;
    %727 = cast(%725, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
    %728 = power(%726, %727) /* ty=Tensor[(7, 15, 3150), float64] */;
    (%728,)
  };
  %729() /* ty=(Tensor[(7, 15, 3150), float64],) */
}

def @func_5679() -> (Tensor[(3150), int8],) {
  %730 = @func_3586() /* ty=Tensor[(3150), int8] */;
  (%730,)
}

def @func_5139() -> Tensor[(3150), int8] {
  %731 = @func_4506() /* ty=(Tensor[(3150), int8],) */;
  %731.0
}

def @func_1890(%var_1874: Tensor[(7, 5, 11), bool], %var_1875: Tensor[(7, 5, 11), bool]) -> (Tensor[(7, 5, 11), bool], Tensor[(7, 15, ?), bool]) {
  %732 = cast(%var_1875, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %733 = shape_of(%var_1874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_1874, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %736 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %737 = logical_or(%734, %735) /* ty=Tensor[(7, 5, 11), bool] */;
  %738 = %736.1;
  (%737, %738)
}

def @func_6762() -> Tensor[(7, 15, ?), float32] {
  %739 = fn () -> Tensor[(7, 15, ?), float32] {
    @func_1830() /* ty=Tensor[(7, 15, ?), float32] */
  };
  %739() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_2045() -> (Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(72), float32], Tensor[(7, 15, ?), float32]) {
  %740 = cast(meta[relay.Constant][34] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %741 = reshape(%740, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %742 = @func_399(%741) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %743 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %744 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %745 = %742.0;
  %746 = %743.1;
  (%744, %745, meta[relay.Constant][34] /* ty=Tensor[(72), float32] */, %746)
}

def @func_2700(%var_2640: Tensor[(900), int8]) -> (Tensor[(900), float32], Tensor[(7, 15, 5), float64], Tensor[(6, 6, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) {
  %747 = cast(%var_2640, dtype="int8") /* ty=Tensor[(900), int8] */;
  %748 = reshape(%747, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %749 = @func_2406(%748) /* ty=(Tensor[(15, 5, 12), int32], Tensor[(7, 15, 72), uint8], Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32]) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  %752 = shape_of(%var_2640, dtype="int32") /* ty=Tensor[(1), int32] */;
  %753 = cast(%var_2640, dtype="float32") /* ty=Tensor[(900), float32] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?), float32] */;
  %755 = @func_815() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) */;
  %756 = %755.1;
  %757 = cast(%756, dtype="float32") /* ty=Tensor[(7, 15, ?), float32] */;
  %758 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 5), float32] */;
  %759 = power(%757, %758) /* ty=Tensor[(7, 15, 5), float32] */;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(7, 15, 5), float64] */;
  %761 = @func_2068() /* ty=(Tensor[(7, 15, 16), bool], Tensor[(6, 6, 2), float32], Tensor[(72), float32]) */;
  %762 = %761.1;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(6, 6, 2), float32] */;
  %764 = reshape(%763, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), float32] */;
  %765 = @func_399(%764) /* ty=(Tensor[(6, 6, 2), float32],) */;
  %766 = cast(meta[relay.Constant][36] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %767 = cast(meta[relay.Constant][36] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %768 = reshape(%766, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %769 = reshape(%767, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %770 = @func_1527(%768, %769) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(7, 15, ?), float32]) */;
  %771 = floor_mod(%753, %754) /* ty=Tensor[(900), float32] */;
  %772 = atanh(%760) /* ty=Tensor[(7, 15, 5), float64] */;
  %773 = %765.0;
  %774 = @func_2548() /* ty=Tensor[(7, 15, ?), float32] */;
  %775 = %770.1;
  (%771, %772, %762, %773, %774, %775, meta[relay.Constant][36] /* ty=Tensor[(286), uint16] */)
}

def @func_5096(%var_5084: Tensor[(15, 6, 9), uint64]) -> (Tensor[(15, 6, 9), uint64],) {
  %776 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 6, 9), uint64] */, dtype="uint64") /* ty=Tensor[(15, 6, 9), uint64] */;
  %777 = shape_of(%var_5084, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%var_5084, dtype="uint64") /* ty=Tensor[(15, 6, 9), uint64] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %780 = left_shift(%778, %779) /* ty=Tensor[(15, 6, 9), uint64] */;
  (%780,)
}

def @func_670(%var_669: Tensor[(7, 15, 6), float32]) -> (Tensor[(7, 15, 6), int32],) {
  %785 = fn (%var_655: Tensor[(7, 15, 6), float32]) -> (Tensor[(7, 15, 6), int32],) {
    %781 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
    %782 = cast(%781, dtype="int32") /* ty=Tensor[(7, 15, ?), int32] */;
    %783 = cast(%var_655, dtype="int32") /* ty=Tensor[(7, 15, 6), int32] */;
    %784 = right_shift(%782, %783) /* ty=Tensor[(7, 15, 6), int32] */;
    (%784,)
  };
  %785(%var_669) /* ty=(Tensor[(7, 15, 6), int32],) */
}

def @func_1842() -> (Tensor[(7, 15, ?), float32],) {
  %786 = @func_962() /* ty=(Tensor[(7, 15, ?), float32],) */;
  %787 = %786.0;
  (%787,)
}

def @func_6360() -> (Tensor[(504), float64], Tensor[(7, 15, 3150), float64]) {
  %792 = fn () -> (Tensor[(504), float64], Tensor[(7, 15, 3150), float64]) {
    %788 = @func_5251() /* ty=(Tensor[(504), float64],) */;
    %789 = @func_3693() /* ty=(Tensor[(7, 15, 3150), float64],) */;
    %790 = %788.0;
    %791 = %789.0;
    (%790, %791)
  };
  %792() /* ty=(Tensor[(504), float64], Tensor[(7, 15, 3150), float64]) */
}

def @func_1865() -> (Tensor[(7, 15, ?), float32],) {
  @func_1863() /* ty=(Tensor[(7, 15, ?), float32],) */
}

def @func_2149(%var_2147: Tensor[(15, 5, 12), int8]) -> Tensor[(15, 5, 12), float64] {
  @func_2146(%var_2147) /* ty=Tensor[(15, 5, 12), float64] */
}

def @func_2916(%var_2868: Tensor[(7, 15, 9), float32]) -> (Tensor[(7, 15, 9), int8], Tensor[(7, 15, 9), uint16], Tensor[(7, 15, 9), bool], Tensor[(7, 15, ?), float32]) {
  %793 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
  %794 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
  %795 = cast(%794, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %796 = cast(%var_2868, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
  %797 = less(%795, %796) /* ty=Tensor[(7, 15, 9), bool] */;
  %798 = cast(%793, dtype="int8") /* ty=Tensor[(7, 15, ?), int8] */;
  %799 = cast(%797, dtype="int8") /* ty=Tensor[(7, 15, 9), int8] */;
  %800 = cast(%797, dtype="uint16") /* ty=Tensor[(7, 15, 9), uint16] */;
  %801 = cast(%793, dtype="uint16") /* ty=Tensor[(7, 15, ?), uint16] */;
  %802 = cast(%var_2868, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
  %803 = cast(%793, dtype="bool") /* ty=Tensor[(7, 15, ?), bool] */;
  %804 = multiply(%798, %799) /* ty=Tensor[(7, 15, 9), int8] */;
  %805 = minimum(%800, %801) /* ty=Tensor[(7, 15, 9), uint16] */;
  %806 = equal(%802, %803) /* ty=Tensor[(7, 15, 9), bool] */;
  %807 = @func_1830() /* ty=Tensor[(7, 15, ?), float32] */;
  (%804, %805, %806, %807)
}

def @func_1248(%var_1198: Tensor[(7, 15, 11), float64], %var_1218: Tensor[(7, 15, 11), uint32]) -> (Tensor[(7, 15, 6), int32], Tensor[(630), float32], Tensor[(7, 15, 11), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32]) {
  %808 = cast(meta[relay.Constant][38] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %809 = reshape(%808, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %810 = @func_668(%809) /* ty=(Tensor[(7, 15, 6), int32],) */;
  %811 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
  %812 = cast(%811, dtype="uint32") /* ty=Tensor[(7, 15, ?), uint32] */;
  %813 = cast(%var_1198, dtype="uint32") /* ty=Tensor[(7, 15, 11), uint32] */;
  %814 = add(%812, %813) /* ty=Tensor[(7, 15, 11), uint32] */;
  %815 = cast(%var_1218, dtype="float64") /* ty=Tensor[(7, 15, 11), float64] */;
  %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%814, dtype="float64") /* ty=Tensor[(7, 15, 11), float64] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %819 = @func_1110() /* ty=(Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(7, 15, ?), float32]) */;
  %820 = %810.0;
  %821 = minimum(%817, %818) /* ty=Tensor[(7, 15, 11), float64] */;
  %822 = %819.2;
  %823 = @func_580() /* ty=Tensor[(7, 15, ?), float32] */;
  (%820, meta[relay.Constant][38] /* ty=Tensor[(630), float32] */, %821, %822, %823)
}

def @func_4508() -> (Tensor[(3150), int8],) {
  @func_4506() /* ty=(Tensor[(3150), int8],) */
}

def @func_5508() -> (Tensor[(7, 15, ?), float32],) {
  %825 = fn () -> (Tensor[(7, 15, ?), float32],) {
    %824 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
    (%824,)
  };
  %825() /* ty=(Tensor[(7, 15, ?), float32],) */
}

def @func_2703(%var_2701: Tensor[(900), int8]) -> (Tensor[(900), float32], Tensor[(7, 15, 5), float64], Tensor[(6, 6, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) {
  @func_2700(%var_2701) /* ty=(Tensor[(900), float32], Tensor[(7, 15, 5), float64], Tensor[(6, 6, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) */
}

def @func_5605(%var_5603: Tensor[(55, 7), bool]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(55, 7), bool]) {
  @func_5602(%var_5603) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(7, 15, ?), bool], Tensor[(55, 7), bool]) */
}

def @func_5625() -> (Tensor[(7, 15, ?), float32],) {
  %827 = fn () -> (Tensor[(7, 15, ?), float32],) {
    %826 = @func_1389() /* ty=Tensor[(7, 15, ?), float32] */;
    (%826,)
  };
  %827() /* ty=(Tensor[(7, 15, ?), float32],) */
}

def @func_5141() -> Tensor[(3150), int8] {
  @func_5139() /* ty=Tensor[(3150), int8] */
}

def @func_5415() -> Tensor[(7, 1, 6), float64] {
  %829 = fn () -> Tensor[(7, 1, 6), float64] {
    %828 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 1, 6), float64] */, dtype="float64") /* ty=Tensor[(7, 1, 6), float64] */;
    sin(%828) /* ty=Tensor[(7, 1, 6), float64] */
  };
  %829() /* ty=Tensor[(7, 1, 6), float64] */
}

def @func_6421(%var_6419: Tensor[(900), int8]) -> (Tensor[(6, 12, 11), float64], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(900), int8]) {
  @func_6418(%var_6419) /* ty=(Tensor[(6, 12, 11), float64], Tensor[(7, 15, ?), float32], Tensor[(6, 6, 2), float32], Tensor[(900), int8]) */
}

def @func_5253() -> (Tensor[(504), float64],) {
  @func_5251() /* ty=(Tensor[(504), float64],) */
}

def @func_3905() -> (Tensor[(7, 15, ?), float64],) {
  %830 = @func_2242() /* ty=Tensor[(7, 15, ?), float32] */;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(7, 15, ?), float64] */;
  %832 = sinh(%831) /* ty=Tensor[(7, 15, ?), float64] */;
  (%832,)
}

def @func_3192(%var_3191: Tensor[(15, 15, 14), bool]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(15, 15, 14), float64]) {
  %846 = fn (%var_3174: Tensor[(15, 15, 14), bool]) -> (Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(15, 15, 14), float64]) {
    %833 = cast(meta[relay.Constant][40] /* ty=Tensor[(3150), int8] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
    %834 = cast(meta[relay.Constant][40] /* ty=Tensor[(3150), int8] */, dtype="int8") /* ty=Tensor[(3150), int8] */;
    %835 = reshape(%833, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
    %836 = reshape(%834, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), int8] */;
    %837 = @func_2836(%835, %836) /* ty=(Tensor[(15, 15, 14), bool],) */;
    %838 = %837.0;
    %839 = cast(%var_3174, dtype="float64") /* ty=Tensor[(15, 15, 14), float64] */;
    %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
    %841 = cast(%838, dtype="float64") /* ty=Tensor[(15, 15, 14), float64] */;
    %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %843 = @func_1015() /* ty=Tensor[(7, 15, ?), float64] */;
    %844 = @func_678() /* ty=Tensor[(7, 15, ?), float32] */;
    %845 = divide(%841, %842) /* ty=Tensor[(15, 15, 14), float64] */;
    (%843, %844, meta[relay.Constant][40] /* ty=Tensor[(3150), int8] */, %845)
  };
  %846(%var_3191) /* ty=(Tensor[(7, 15, ?), float64], Tensor[(7, 15, ?), float32], Tensor[(3150), int8], Tensor[(15, 15, 14), float64]) */
}

def @func_2816(%var_2813: Tensor[(7, 15, 2), float32], %var_2814: Tensor[(900), int8], %var_2815: Tensor[(286), uint16]) -> (Tensor[(7, 15, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(55, 7), bool], Tensor[(7, 15, 1680), float32], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) {
  @func_2811(%var_2813, %var_2814, %var_2815) /* ty=(Tensor[(7, 15, 2), float32], Tensor[(6, 6, 2), float32], Tensor[(55, 7), bool], Tensor[(7, 15, 1680), float32], Tensor[(7, 15, ?), float64], Tensor[(900), int8], Tensor[(7, 15, ?), float32], Tensor[(286), uint16]) */
}

def @func_6377() -> Tensor[(7, 15, ?), float32] {
  @func_6375() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_1944(%var_1930: Tensor[(10, 8, 1), float64]) -> (Tensor[(10, 8, 1), float64],) {
  %847 = cast(%var_1930, dtype="float64") /* ty=Tensor[(10, 8, 1), float64] */;
  %848 = asin(%847) /* ty=Tensor[(10, 8, 1), float64] */;
  (%848,)
}

def @func_582() -> Tensor[(7, 15, ?), float32] {
  @func_580() /* ty=Tensor[(7, 15, ?), float32] */
}

def @func_6476() -> Tensor[(7, 15, ?), float32] {
  @func_6474() /* ty=Tensor[(7, 15, ?), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The Relay type checker is unable to show the following types match.
In particular `Tensor[(7, 15, ?), float32]` does not match `Tensor[(3), int32]`

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

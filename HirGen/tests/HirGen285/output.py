import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_11 = relay.var("var_11", dtype = "int32", shape = (11, 7, 2))#candidate|11|(11, 7, 2)|var|int32
const_12 = relay.const([[[10,-6],[9,9],[-6,-1],[-6,-1],[6,1],[6,6],[-10,-1]],[[3,-6],[6,-7],[1,8],[-3,-4],[-3,-4],[-6,6],[10,1]],[[4,6],[-4,10],[4,8],[5,5],[-4,-7],[-4,7],[-5,-2]],[[-6,-6],[7,-8],[4,-2],[7,-4],[-5,-2],[-7,-9],[9,3]],[[-10,10],[7,6],[10,8],[4,-2],[1,7],[4,6],[-6,2]],[[-10,1],[9,-4],[7,-4],[-6,1],[-2,4],[9,-1],[9,-4]],[[-2,-2],[3,-10],[5,1],[-8,1],[7,5],[-4,-5],[10,-8]],[[3,8],[2,8],[3,8],[-4,4],[-3,-7],[8,2],[-2,-7]],[[-2,3],[-8,-1],[-1,6],[6,6],[4,-3],[6,7],[-1,5]],[[7,8],[-8,-7],[4,-9],[-8,10],[8,6],[-7,-8],[9,4]],[[6,5],[-3,5],[6,10],[-1,-4],[3,-4],[2,-4],[1,10]]], dtype = "int32")#candidate|12|(11, 7, 2)|const|int32
bop_13 = relay.greater_equal(var_11.astype('bool'), relay.reshape(const_12.astype('bool'), relay.shape_of(var_11))) # shape=(11, 7, 2)
uop_20 = relay.sigmoid(bop_13.astype('float64')) # shape=(11, 7, 2)
uop_25 = relay.erf(uop_20.astype('float64')) # shape=(11, 7, 2)
output = relay.Tuple([uop_25,])
output2 = relay.Tuple([uop_25,])
func_27 = relay.Function([var_11,], output)
mod['func_27'] = func_27
mod = relay.transform.InferType()(mod)
var_28 = relay.var("var_28", dtype = "int32", shape = (11, 7, 2))#candidate|28|(11, 7, 2)|var|int32
output = func_27(var_28)
func_29 = relay.Function([var_28], output)
mutated_mod['func_29'] = func_29
mutated_mod = relay.transform.InferType()(mutated_mod)
var_160 = relay.var("var_160", dtype = "bool", shape = (7, 14, 13))#candidate|160|(7, 14, 13)|var|bool
var_161 = relay.var("var_161", dtype = "bool", shape = (7, 14, 13))#candidate|161|(7, 14, 13)|var|bool
bop_162 = relay.logical_and(var_160.astype('bool'), relay.reshape(var_161.astype('bool'), relay.shape_of(var_160))) # shape=(7, 14, 13)
output = bop_162
output2 = bop_162
func_169 = relay.Function([var_160,var_161,], output)
mod['func_169'] = func_169
mod = relay.transform.InferType()(mod)
mutated_mod['func_169'] = func_169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_169_call = mutated_mod.get_global_var('func_169')
var_171 = relay.var("var_171", dtype = "bool", shape = (7, 14, 13))#candidate|171|(7, 14, 13)|var|bool
var_172 = relay.var("var_172", dtype = "bool", shape = (7, 14, 13))#candidate|172|(7, 14, 13)|var|bool
call_170 = func_169_call(var_171,var_172,)
output = call_170
func_173 = relay.Function([var_171,var_172,], output)
mutated_mod['func_173'] = func_173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_251 = relay.var("var_251", dtype = "float32", shape = (3, 4, 11))#candidate|251|(3, 4, 11)|var|float32
uop_252 = relay.tan(var_251.astype('float32')) # shape=(3, 4, 11)
uop_271 = relay.erf(uop_252.astype('float64')) # shape=(3, 4, 11)
uop_282 = relay.asinh(var_251.astype('float64')) # shape=(3, 4, 11)
func_169_call = mod.get_global_var('func_169')
func_173_call = mutated_mod.get_global_var('func_173')
var_289 = relay.var("var_289", dtype = "bool", shape = (1274,))#candidate|289|(1274,)|var|bool
call_288 = func_169_call(relay.reshape(var_289.astype('bool'), [7, 14, 13]), relay.reshape(var_289.astype('bool'), [7, 14, 13]), )
call_290 = func_169_call(relay.reshape(var_289.astype('bool'), [7, 14, 13]), relay.reshape(var_289.astype('bool'), [7, 14, 13]), )
output = relay.Tuple([uop_271,uop_282,call_288,var_289,])
output2 = relay.Tuple([uop_271,uop_282,call_290,var_289,])
func_292 = relay.Function([var_251,var_289,], output)
mod['func_292'] = func_292
mod = relay.transform.InferType()(mod)
mutated_mod['func_292'] = func_292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_292_call = mutated_mod.get_global_var('func_292')
var_294 = relay.var("var_294", dtype = "float32", shape = (3, 4, 11))#candidate|294|(3, 4, 11)|var|float32
var_295 = relay.var("var_295", dtype = "bool", shape = (1274,))#candidate|295|(1274,)|var|bool
call_293 = func_292_call(var_294,var_295,)
output = call_293
func_296 = relay.Function([var_294,var_295,], output)
mutated_mod['func_296'] = func_296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_717 = relay.var("var_717", dtype = "float32", shape = (4, 6, 3))#candidate|717|(4, 6, 3)|var|float32
uop_718 = relay.sinh(var_717.astype('float32')) # shape=(4, 6, 3)
bop_723 = relay.bitwise_xor(var_717.astype('int8'), relay.reshape(uop_718.astype('int8'), relay.shape_of(var_717))) # shape=(4, 6, 3)
uop_730 = relay.acos(uop_718.astype('float32')) # shape=(4, 6, 3)
output = relay.Tuple([bop_723,uop_730,])
output2 = relay.Tuple([bop_723,uop_730,])
func_735 = relay.Function([var_717,], output)
mod['func_735'] = func_735
mod = relay.transform.InferType()(mod)
mutated_mod['func_735'] = func_735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_736 = relay.var("var_736", dtype = "float32", shape = (4, 6, 3))#candidate|736|(4, 6, 3)|var|float32
func_735_call = mutated_mod.get_global_var('func_735')
call_737 = func_735_call(var_736)
output = call_737
func_738 = relay.Function([var_736], output)
mutated_mod['func_738'] = func_738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_765 = relay.var("var_765", dtype = "float64", shape = (16, 9, 1))#candidate|765|(16, 9, 1)|var|float64
var_766 = relay.var("var_766", dtype = "float64", shape = (16, 9, 15))#candidate|766|(16, 9, 15)|var|float64
bop_767 = relay.power(var_765.astype('float64'), var_766.astype('float64')) # shape=(16, 9, 15)
func_27_call = mod.get_global_var('func_27')
func_29_call = mutated_mod.get_global_var('func_29')
const_787 = relay.const([-6,9,5,9,-2,-9,9,-4,-9,4,10,-4,6,-1,-8,2,3,-6,-9,-4,-9,9,5,4,-4,-8,10,3,1,-4,6,6,7,8,4,-10,5,3,-3,-5,-7,-3,4,-2,10,5,2,-5,-3,7,-7,4,-4,-3,4,-8,-1,-8,9,-10,-6,6,8,6,-6,-3,-8,4,-2,1,-5,8,1,2,6,10,-9,-9,-10,10,-8,9,-10,7,10,-9,-8,4,5,-3,10,-4,-10,7,9,-5,2,2,7,-3,1,3,-3,1,2,2,7,-2,10,-8,1,-8,9,5,3,-2,-2,-4,-1,4,8,7,1,-4,-1,1,-6,-4,-1,1,-9,-8,10,-5,-6,-6,4,-4,5,7,10,9,-9,3,4,-3,8,3,3,1,-8,8,2,-6], dtype = "int32")#candidate|787|(154,)|const|int32
call_786 = relay.TupleGetItem(func_27_call(relay.reshape(const_787.astype('int32'), [11, 7, 2])), 0)
call_788 = relay.TupleGetItem(func_29_call(relay.reshape(const_787.astype('int32'), [11, 7, 2])), 0)
output = relay.Tuple([bop_767,call_786,const_787,])
output2 = relay.Tuple([bop_767,call_788,const_787,])
func_789 = relay.Function([var_765,var_766,], output)
mod['func_789'] = func_789
mod = relay.transform.InferType()(mod)
var_790 = relay.var("var_790", dtype = "float64", shape = (16, 9, 1))#candidate|790|(16, 9, 1)|var|float64
var_791 = relay.var("var_791", dtype = "float64", shape = (16, 9, 15))#candidate|791|(16, 9, 15)|var|float64
output = func_789(var_790,var_791,)
func_792 = relay.Function([var_790,var_791,], output)
mutated_mod['func_792'] = func_792
mutated_mod = relay.transform.InferType()(mutated_mod)
const_818 = relay.const([[[3.462542,4.337054,-4.907022,-8.056421,-1.530283]],[[-5.566716,4.217177,0.645164,1.227279,-9.190356]]], dtype = "float64")#candidate|818|(2, 1, 5)|const|float64
uop_819 = relay.asin(const_818.astype('float64')) # shape=(2, 1, 5)
uop_821 = relay.sinh(const_818.astype('float64')) # shape=(2, 1, 5)
func_169_call = mod.get_global_var('func_169')
func_173_call = mutated_mod.get_global_var('func_173')
var_827 = relay.var("var_827", dtype = "bool", shape = (1274,))#candidate|827|(1274,)|var|bool
call_826 = func_169_call(relay.reshape(var_827.astype('bool'), [7, 14, 13]), relay.reshape(var_827.astype('bool'), [7, 14, 13]), )
call_828 = func_169_call(relay.reshape(var_827.astype('bool'), [7, 14, 13]), relay.reshape(var_827.astype('bool'), [7, 14, 13]), )
uop_831 = relay.atan(uop_819.astype('float64')) # shape=(2, 1, 5)
func_789_call = mod.get_global_var('func_789')
func_792_call = mutated_mod.get_global_var('func_792')
var_837 = relay.var("var_837", dtype = "float64", shape = (144,))#candidate|837|(144,)|var|float64
const_838 = relay.const([[0.979618,4.214528,-3.858510,-2.958341,2.031735,2.071606,-9.671779,1.569938,-3.818387,-7.319671,-9.476373,2.324641,-4.932656,-4.006839,-6.776372,9.474075,-5.000472,-9.369863,6.090888,4.814281,-6.234746,7.572549,-7.913177,2.434802,-2.360875,9.683717,-0.142798,-8.125988,0.290611,3.205428,5.631080,0.283915,7.475517,8.437128,-8.722305,7.096034],[2.061778,-5.381258,6.489503,7.531878,7.231776,-1.913484,2.636851,0.795174,-5.509178,2.946581,3.698485,4.930113,-0.067009,8.833117,9.049084,2.154942,2.053840,-9.340564,2.225865,4.439614,-4.193416,-5.812199,-4.538652,-3.684609,-3.917234,0.413548,2.307154,8.416604,7.943672,-2.625087,0.116850,6.861945,7.781235,-5.188401,4.186390,-8.793943],[3.313281,-2.858533,-3.224104,-9.643125,-9.184996,-7.390924,-7.564803,3.762257,2.975481,-0.733177,-3.119305,5.311710,-8.381993,-1.046855,1.902127,3.958440,-7.046666,3.815246,2.887074,7.475794,0.706038,8.460775,3.405726,2.286106,-8.917049,-4.209158,7.349016,5.042907,7.881285,-5.963336,-7.257196,3.232541,8.778742,7.131808,2.125381,-8.150199],[-9.077917,-8.302724,-1.429314,-0.080308,-0.781665,7.652855,3.505992,5.088948,2.490668,7.251344,9.342989,-0.432778,3.219504,1.903313,-1.126499,6.927936,8.686205,6.304442,0.093334,5.140756,-5.800740,-9.627249,7.176690,-5.553261,2.320938,-4.816949,-3.058142,8.831756,-0.296281,-1.110199,-6.757499,2.203057,-8.527595,2.920661,7.077161,1.401773],[-3.280844,7.145106,2.076287,-1.680619,7.507989,8.810291,6.448541,-8.522143,-6.717558,-3.518423,-8.998282,-5.619607,-6.477093,5.331632,-7.640818,7.459863,-2.025764,-8.932765,-9.273795,-0.060294,7.792846,-6.062145,-4.453639,-5.388747,4.720429,3.979151,0.091553,-7.596730,3.885756,6.447816,-3.877869,-8.754641,2.509062,-2.619198,1.675725,0.370366],[7.195489,7.787762,-7.865386,-6.096674,0.627398,-0.876290,6.833332,-0.494329,-0.356237,7.697664,8.226830,4.194771,-8.265421,-6.206664,-4.643379,4.910598,6.261867,1.382700,-6.984108,-3.618156,8.355290,-9.876215,8.105616,0.071126,-6.317411,7.462635,1.503941,-1.081938,-5.350194,1.632757,3.270840,-1.907711,-1.659568,-8.816433,1.248275,-8.369486],[7.019972,-8.422778,1.094789,-5.404139,-2.306462,6.830873,-4.029766,7.386869,1.358806,7.803632,1.831686,1.847545,6.483388,6.116668,-8.016687,4.424420,-0.412560,3.342476,-7.136745,-7.754196,9.212686,-7.330683,3.949070,-4.377679,-0.162156,0.783297,-7.781026,4.799412,9.758693,-5.411432,-7.982530,8.444232,9.939647,9.010733,9.170714,-3.053343],[2.481555,-6.152395,1.291122,2.885241,6.748553,2.474619,-9.996040,9.754692,5.163474,4.099750,-3.793013,3.354562,9.853432,1.517135,-7.821303,6.113070,-2.361559,-1.565077,9.452214,7.989281,0.587061,-1.015801,-2.169453,4.860748,4.267191,5.595545,1.579537,-1.442273,9.176654,2.727814,7.309921,-0.861754,7.809894,6.943066,-5.994389,5.777157],[-1.934383,3.110037,7.222980,-0.244597,-7.975551,-4.058641,-7.778251,-9.291350,-2.533037,9.741290,6.195789,8.079282,2.822195,1.342244,-2.164724,4.098220,-3.004046,8.630119,4.669241,-3.724919,1.961352,2.947560,8.043849,-6.835007,-7.251880,-5.901265,9.112482,-3.113929,-8.485116,-9.623352,-1.776446,6.426722,6.093871,-0.991447,3.405701,-5.217613],[-2.588544,-2.642661,7.166143,3.463936,7.039716,2.393485,-0.821240,5.357806,1.712300,6.230062,9.334526,-5.750028,5.767454,4.977759,-9.100000,3.716277,0.112943,-6.049334,-3.390976,-1.595115,3.499163,-9.944734,5.011449,4.041642,-1.422366,-5.498674,8.288107,-6.691234,-2.468850,5.592966,1.565083,7.946018,9.935348,9.824467,9.574573,2.385136],[-5.717067,-3.866606,6.137217,-2.740526,-4.314356,7.595311,-1.528038,-4.316833,6.053691,7.655500,0.105844,9.251071,-1.279453,-6.096069,0.984766,6.821785,-4.234082,3.000716,0.787133,1.576834,2.463748,5.453941,-2.152057,-5.695625,-8.699617,-6.103346,-4.661870,-8.015456,-9.211123,-1.094106,-9.927538,7.182026,-6.287482,-0.860370,5.009665,0.266562],[-3.281418,-2.679909,6.405065,-0.158334,-7.937458,9.145120,-7.850874,9.516334,-4.522529,-8.190533,5.606494,0.795953,0.561827,1.796103,9.307680,5.997881,-7.574503,-4.261350,-1.932601,0.376472,0.672415,2.607929,-3.762155,8.565426,-5.700324,6.471285,4.850421,4.464130,-3.568559,3.451952,-4.097368,3.828030,-6.430708,-1.844338,-2.837673,1.449787],[-7.482407,6.323725,-4.201203,4.157982,0.373894,-2.807478,-6.853033,6.716897,4.287669,-7.054609,2.858921,-4.673275,-1.432134,-4.852835,-6.654651,-8.283303,-3.824229,3.545500,-3.948397,9.883060,9.924005,5.031086,-0.763682,-2.757546,1.827628,6.726695,-3.788925,1.192675,-5.472345,6.349360,2.676864,8.984508,3.159714,-4.472279,5.336200,9.821865],[-6.740280,-7.077743,5.887860,-5.269365,-3.547120,0.295549,4.630644,0.569902,-1.741658,-5.188302,-1.872122,1.935844,-9.221706,-4.979509,-2.061941,-0.721082,-1.692083,8.729109,4.438304,-7.520808,6.381801,-8.951405,-1.469186,-7.548369,-1.726019,3.986055,-1.946527,-8.929255,-9.717178,-8.145462,1.268736,5.296076,-6.839178,1.105898,-1.514767,6.327820],[-2.268532,-2.231253,5.444947,6.583400,7.598127,-4.870629,-4.220146,-5.215534,7.695562,3.834718,4.172030,-8.029385,2.581971,1.599852,-3.829399,2.725904,-1.151682,2.802453,-8.363789,3.149199,2.163439,3.902314,5.374000,3.167770,-9.564738,5.827673,3.677440,1.303823,6.445326,5.518220,0.175869,-0.897275,-0.237506,2.449268,3.722126,5.019705],[2.914880,-9.591477,-5.606565,3.129668,-3.465616,0.868625,9.289510,-7.792876,7.096259,-3.428818,-7.033702,2.977769,-4.598318,0.274978,0.633472,3.824835,9.184678,8.306784,7.805947,-9.807751,4.326260,2.462624,1.702458,-5.353948,8.208069,7.515056,0.671550,4.615154,-9.179845,8.603348,9.154569,-8.202609,-8.868726,-9.560347,-0.977926,3.421133],[-6.427911,-5.058085,-0.870621,4.404030,0.171673,9.167953,2.560731,6.641858,5.584435,7.011968,2.119305,8.123991,-0.912640,4.854464,8.507710,-1.695637,1.960817,6.730721,2.214716,-0.630082,8.390774,-9.968487,-3.189942,-4.541547,-6.205499,-3.225225,7.420318,-3.105457,9.947696,9.228801,-4.759988,5.790716,-6.261087,-5.276286,0.318416,5.897257],[-4.192195,3.554115,9.229203,1.646681,7.401623,8.397495,0.649186,-1.053256,3.247845,7.194785,-1.888608,0.138900,7.837526,-9.303737,-3.849887,-3.593033,2.652284,5.318938,7.900817,4.276617,-4.190310,-2.057184,-0.462621,5.073615,-5.961525,6.993223,6.628275,9.293186,-3.232401,5.321163,6.934356,-9.550752,2.620854,0.400376,-4.357448,9.748379],[9.853483,-5.065885,3.449284,5.405905,7.184207,-9.890626,-2.798670,5.999349,5.770774,9.558056,-2.508800,-5.777649,-5.676498,1.470111,-6.943184,3.863412,-1.761067,1.431608,6.443753,7.451636,3.853537,1.294558,0.255624,5.283596,0.928637,-3.440184,-3.584445,7.940568,-9.020853,2.594393,-9.167619,0.802009,-1.613344,-4.537166,4.772026,-1.265473],[6.156512,-3.958766,8.394842,1.941287,8.761994,-7.436019,-3.204014,-3.237756,-0.209415,6.078017,-5.459043,0.305442,1.680029,0.039790,1.935625,-0.756737,4.485629,-1.669389,-6.163834,-9.439346,7.738579,7.998268,-5.795473,-8.295823,7.414718,8.005670,-9.358553,-1.460370,-8.178073,9.638768,-5.227066,-8.613396,-3.542103,-0.586601,6.283285,-9.904538],[2.944483,-8.948990,9.661229,5.359140,2.515052,8.404485,6.743688,8.758642,2.349030,-3.717776,-7.795836,7.536854,2.656925,0.991810,-1.969453,0.853235,4.880855,-2.857853,-7.780113,6.475904,-9.831510,-4.475972,0.961208,-4.099471,-0.566522,-2.462905,3.294271,9.271218,3.650646,1.687028,4.383702,7.328811,9.546807,9.986763,0.756257,4.931836],[5.520912,-8.115973,9.935008,1.073584,4.868335,5.061298,-9.431327,2.827486,1.717153,1.781489,7.778183,-3.476121,-3.802192,-2.914859,-3.846147,-5.280482,7.204345,-2.224239,6.429817,-5.543013,1.733763,9.350727,7.031943,7.756437,-9.058614,5.884158,-0.254219,-9.781479,7.844680,-8.362367,-9.194461,-4.606844,4.189964,-3.588265,-8.995538,6.671639],[-4.429498,5.566857,4.474511,8.951575,-1.052694,0.662429,-4.893584,6.885919,7.679017,3.997588,-2.418950,8.470071,6.747008,-0.437834,4.803894,7.948747,6.470291,4.831872,-9.648472,-6.701042,9.182654,6.691751,8.299566,0.656977,-2.448736,-6.861115,-1.157399,1.234680,9.632391,-6.161891,3.841351,4.552949,-9.541271,-6.824184,1.859488,0.788212],[-3.880481,-3.524113,-0.699809,-0.290518,-2.878091,7.817194,3.047967,-5.812212,0.393490,2.607745,2.513199,6.702540,3.125097,-0.927361,-8.058618,3.928634,-0.693602,-4.224874,9.927677,6.642070,0.776071,2.198613,5.794102,9.530694,-5.163357,-9.681834,1.169632,3.373713,9.314344,6.225594,-4.487267,-1.100821,-5.736456,6.428266,-9.685913,-2.007963],[3.177770,-2.604715,1.115493,8.043589,-2.766797,6.529626,5.634040,-0.663861,-6.535181,-1.220277,-2.383676,7.548244,5.057906,-7.175970,-2.827526,0.559160,-2.483625,-4.418529,-9.862858,4.440932,7.342787,-6.780654,-0.195490,1.499669,4.839096,7.143893,7.465666,-9.361363,9.815467,-8.370606,8.676263,5.788588,2.495657,-2.467770,-5.084989,-8.680295],[-5.585068,-9.505239,4.558897,-2.963683,-2.889675,-5.163526,-1.268433,-2.891752,4.046429,8.230248,0.477512,1.562565,5.416102,-9.006520,3.132162,7.757372,7.811505,-6.807285,-4.719427,4.093129,-8.322006,-9.415597,8.411035,-1.167303,8.808070,1.339763,4.002678,7.807734,-1.362328,-6.373980,-0.239513,-5.492089,6.725639,-9.138970,6.554695,-7.150993],[3.594355,-5.391342,-6.693311,8.250863,6.281970,-1.466813,2.453986,7.600658,7.658266,-7.674965,3.831082,9.196699,6.321465,-5.858145,-0.846172,1.023171,9.138563,-3.353774,-1.652484,8.201250,-3.832705,-6.515111,1.571516,-9.091804,0.674127,-5.180135,4.253061,-7.813915,0.366957,5.228238,4.751488,0.811433,-0.063918,-8.424276,-0.848183,-2.403008],[6.192281,-8.086155,-9.714355,2.658143,1.115211,1.019208,-1.054864,-4.868634,-5.943403,6.527234,-9.956715,4.382974,-9.194866,5.066286,4.288587,7.254856,9.434888,-8.481162,-7.148406,5.619518,4.999996,-9.193641,-7.457926,-0.492184,-8.605152,8.445216,-9.962678,-7.211201,-2.260661,1.339791,9.248490,8.363726,9.428276,5.016566,9.665527,0.337774],[8.811043,-9.771871,-7.198934,-8.818550,-2.919687,9.790140,-4.565420,6.330860,-1.541849,7.653927,-0.200759,-1.728248,-3.348863,5.994426,-7.292229,-1.277311,5.038736,-9.898553,8.297790,-9.309807,-6.661436,8.361840,5.907877,9.628423,8.708339,-7.780767,2.190655,7.760626,-1.111106,-1.668717,-9.340998,-9.260581,2.080541,7.527977,9.899183,2.229869],[-2.307018,2.594926,1.181608,2.157367,5.365938,-5.759912,-0.038290,-6.689267,3.551746,7.564224,2.595550,9.642629,-7.679439,-4.047031,-8.601226,3.975109,-3.507038,4.178772,-6.462628,-1.507442,-7.864034,-9.376015,0.772145,4.244116,1.881610,-0.278238,-9.624340,-9.133357,-2.050185,-1.200118,-7.485643,0.629519,-8.487406,-9.911211,1.744022,-4.479304],[-0.889193,-6.458085,6.610821,-4.156681,5.353867,-4.474145,-0.744380,-6.222351,2.010409,1.402985,8.015431,-2.948081,7.603044,-2.396801,4.114625,-2.904156,7.995510,9.673616,-1.944828,-5.340459,-0.042704,6.584265,2.950062,-5.215946,3.626168,-9.855664,-4.410156,-8.031013,7.814127,3.389705,-0.153390,-9.170532,-4.162859,-1.769924,1.857323,-9.748109],[0.666229,-5.212546,-0.818399,1.490230,1.146806,-1.524679,-6.264017,6.855446,9.026722,6.070766,6.827311,5.413204,4.251949,-7.012395,-6.445545,9.568526,3.026687,-0.692475,-8.739542,7.953669,7.997270,1.081169,-1.888855,-4.204186,0.031050,0.583440,1.389548,2.502630,1.821549,-1.562797,-7.962661,3.319297,5.083546,2.722601,-4.548918,8.810625],[-2.185336,8.187938,-2.957890,-2.556507,1.020697,-0.582667,6.857669,-5.669680,3.324252,-6.687831,-5.809622,7.419525,-4.038258,0.132552,0.814387,-1.053436,0.240418,3.191000,7.323588,-0.342326,8.342075,-6.916209,-0.721890,1.850277,8.129292,4.894921,-0.997722,6.939432,-1.214344,3.850013,-9.384911,3.881442,0.975640,3.301980,6.388974,-0.890976],[-7.055947,3.404746,7.468403,-2.572691,-0.552882,-5.067891,1.120067,8.048282,-3.337310,1.529646,0.186626,-1.298765,5.763126,5.234081,9.105121,-1.947556,-5.233963,-9.618673,-6.087354,-4.355889,8.327357,6.016196,3.885839,-9.470452,5.790541,-5.052672,-0.469854,-2.617537,-1.547442,-6.546228,2.097065,6.790820,-7.700420,3.144174,-3.436303,-7.241757],[-3.668493,-3.952957,-0.333110,9.558140,3.365021,-3.674595,-3.035704,6.864325,0.531514,3.717767,-6.658544,-4.755927,-0.242189,-7.533562,-0.656749,-5.737680,-4.831740,-6.360737,8.721857,4.480032,8.361302,8.798341,-0.643277,-1.202954,-2.047014,-3.885923,-1.134324,-8.450498,-5.275325,7.988804,5.749833,3.626201,7.929844,-5.953167,4.742403,8.432934],[-6.021422,-4.177992,6.283946,-3.274102,-2.110729,4.151977,1.883608,-2.015633,-2.756940,-0.672268,3.796397,5.480663,7.765360,-6.972035,0.537166,6.730980,-9.984056,-8.930368,-3.793266,1.916810,6.240591,1.264640,-1.248971,-1.960161,-4.555484,-8.306353,-0.352794,-3.572500,-3.365804,-1.048698,-6.324394,3.230380,-2.804338,-1.931589,-8.855801,6.175245],[-8.298784,-7.093224,-9.965677,8.974567,-9.152907,6.466184,-7.230915,-2.345807,-1.523702,-4.015778,9.614724,4.622777,-9.004378,-6.987043,2.534551,-3.977772,4.914488,8.988585,-8.417310,-8.961777,-2.027714,0.966193,4.981043,1.026707,0.470729,-3.912228,3.975922,-0.591558,8.706825,-2.552189,-9.523158,5.792351,-3.679358,-2.876140,6.216437,2.733700],[-2.053700,-1.047249,-4.400619,8.485145,-1.436914,-9.909126,9.173708,8.665286,-4.658734,9.184016,-4.324264,-9.637529,7.579726,3.400475,6.136831,4.860291,-2.496187,3.851122,9.904749,-1.630885,-4.471831,-3.398772,7.174891,-6.478141,3.813421,-1.459486,-2.100498,-8.865472,7.257871,4.797003,-3.398164,-4.711932,-7.922254,-4.368243,-8.379016,4.504372],[5.755398,-6.527481,6.228380,-4.990579,1.716382,0.768506,8.033423,9.605904,7.528912,6.689325,3.200625,-9.603319,1.012368,-4.975458,2.347261,-0.452331,5.112025,7.423842,-3.619719,7.981850,8.731322,9.071779,6.251660,4.290714,3.420308,-5.145041,3.363779,8.192247,8.143984,-4.151468,1.795573,-1.470156,-1.099879,-3.984852,0.389063,-5.307390],[-7.511577,-0.041244,-9.931182,-3.103352,-9.442261,3.518488,-0.828866,6.838419,-6.405516,-0.736613,-1.617869,-9.769724,6.648271,1.790862,-1.996888,1.280862,-4.210500,-4.236184,7.381820,-3.685375,-4.767110,8.092044,-3.587388,-4.603871,0.450705,9.433125,1.746509,-0.847364,-3.754634,-0.464539,6.527621,9.935314,8.673531,-8.361864,-2.915111,-9.689176],[-3.097103,1.992859,-7.842023,5.687621,3.011492,-3.560922,-6.275740,9.517273,-7.273537,-9.584537,8.078344,1.960683,0.335444,6.188812,7.689181,-0.322899,-9.502988,-8.049443,-2.634285,-3.901322,-4.480493,-8.395396,3.595272,1.002474,1.802084,9.513484,9.017063,4.592382,-6.184304,8.774917,7.038691,-8.386839,9.342214,-0.518568,-8.725856,9.071298],[3.176212,-5.223439,6.736944,6.585496,9.724669,1.434083,6.365236,9.408252,-4.901168,6.985966,2.077036,0.870610,2.860063,-5.885381,-1.790916,-9.738337,7.742660,-3.889899,7.035692,-1.020592,-0.483525,1.966288,-3.464267,7.044729,6.953269,-2.701969,-1.570530,-0.833360,-4.122715,-3.802794,-6.227501,-2.070463,3.111072,5.845570,-0.228645,8.204008],[1.701779,2.945010,2.696897,-9.840122,8.768100,5.855405,-0.424476,6.694813,-3.623981,2.827670,9.542091,4.946893,-2.076254,9.389475,-9.031461,0.661695,5.427820,3.233046,-6.800620,-4.258857,1.863772,4.324277,9.846579,-2.622176,-7.444063,-5.730229,3.479159,-3.301384,-9.654760,1.660072,-8.728210,2.947410,1.205299,1.480722,-8.523840,7.811857],[9.376177,-8.653304,-5.270300,7.580066,-0.448929,-2.273115,0.923250,-0.585044,-8.986175,-5.770900,-9.504396,-2.113695,-3.801717,3.819960,1.332688,-2.176907,-4.663017,2.354682,4.100465,3.825961,6.346472,-3.598028,5.178893,-2.753736,-2.559671,-4.429918,-4.447199,-7.973163,-6.352573,-5.885469,-0.794588,6.487876,5.419417,6.097902,4.478051,-6.530905],[-8.951650,0.405796,6.074198,1.183390,-1.405019,1.981877,1.603596,0.571647,4.772949,2.776562,3.808713,-8.992889,-1.212752,3.626676,5.397854,-7.536602,-2.078283,4.994330,0.880247,8.372974,-3.376492,6.988552,-7.346201,-9.977066,-6.929410,-7.590471,-1.609683,-4.095921,-3.708915,-7.505291,7.572257,-6.674299,-3.821122,-2.731622,-6.313876,5.817861],[-3.875988,-2.631624,5.051277,-6.482253,3.164030,5.745370,-1.546557,-2.877097,-7.397159,-5.602589,5.847372,4.790555,-3.549901,2.943502,-9.640169,1.594054,2.184655,2.429891,-3.357543,-4.650424,-9.090629,6.432891,9.825324,-9.760095,-4.180380,-0.505911,3.555254,3.530067,0.986159,-1.356439,2.123869,-2.449331,-9.025233,-8.770765,4.569735,-5.285765],[-1.834576,-5.485070,1.321316,5.772686,2.693434,3.090427,-0.931082,-2.442987,4.352607,4.710172,5.608539,-3.864362,3.393815,-8.560548,9.786936,9.759331,9.932977,-0.474364,-4.427591,-2.859519,1.670375,-1.219903,8.951765,0.916265,2.879746,5.393269,-7.186585,-0.882488,-8.282081,-8.866489,1.937873,-6.095501,-7.953131,1.260514,-1.677234,-5.497109],[3.942627,1.923227,-6.300373,-7.027488,1.207269,-7.925567,9.145614,-1.125371,6.501474,4.576475,-7.283093,8.698679,-7.462655,3.276773,3.351212,-1.215234,-5.529688,6.700950,-7.214479,-2.086540,4.855246,3.546599,-6.276800,3.648974,7.781981,-8.075244,-2.875947,-6.811184,9.322145,4.823072,0.909445,1.209359,-7.536159,-5.884315,-2.250404,-0.089685],[6.687258,-1.832126,7.377062,-0.879427,6.108260,-1.205404,-3.924216,-8.878938,-1.823335,-9.328933,-2.663605,7.596677,-8.621178,1.383453,5.898313,4.306425,-3.754227,-2.200082,1.013584,-2.982408,9.760576,-3.655523,8.401261,5.715992,-7.049254,3.515323,-2.736820,7.218455,6.867350,6.038372,8.940121,4.635021,0.292664,7.485332,-2.867733,6.495146],[1.760558,-0.690228,-7.983135,-5.505308,3.401176,5.363155,0.688426,8.441215,-6.043678,1.673737,2.466783,5.621544,-7.165617,2.652935,-2.635564,-3.840097,-8.202433,-0.596406,2.259153,7.575640,-1.100103,-7.644901,-1.949416,-5.348143,-9.718941,-0.069567,1.084269,-6.727665,-7.543766,-6.385757,-1.926390,-5.916621,9.676531,-2.945109,-2.092233,-9.739684],[-7.850255,-1.913301,-7.915633,0.684051,-3.801035,-3.147922,9.798061,9.668308,-7.159776,-4.880322,-4.402740,6.477046,6.221550,-3.748061,9.448346,2.866698,6.050436,-6.615427,-8.775303,0.163650,8.404305,-4.057464,-8.817702,9.964136,-7.556328,-7.987292,-0.614694,-2.861334,1.304312,0.416629,7.333268,-4.341540,-6.813156,-1.331819,1.700905,0.696986],[9.824375,1.649688,8.115664,-5.731721,0.900642,0.140103,-8.598905,0.446250,-0.492066,2.744163,5.605116,9.240802,-1.710985,3.612730,4.464961,4.551211,-8.252009,-3.471455,8.326081,1.549335,2.549347,-1.860326,9.272987,1.705145,8.450902,5.608892,7.972450,-3.097590,3.578685,7.042191,2.367581,5.664601,5.717870,8.876893,1.146697,3.496134],[5.969819,-5.630377,-5.427706,1.149181,-5.404293,-0.369277,0.776763,-3.859576,-9.980601,0.358755,-9.110684,-9.935327,-0.472609,-7.189270,-7.425682,3.489210,5.796850,-6.296731,3.800550,3.299369,7.420738,4.271880,3.764515,5.276637,2.151389,6.044904,3.115460,-3.486699,8.089689,3.879559,-7.256499,-3.919639,1.271450,1.380748,-9.181220,-3.608816],[4.334488,-9.803380,5.172694,-3.337364,-3.633901,-9.724727,3.404458,6.930278,1.642116,5.683155,9.414681,-3.944148,-5.045029,-7.303672,-6.452483,-2.515341,-2.631015,-9.401734,-4.177739,8.606505,-5.477542,4.942270,-5.701071,0.792878,8.351906,1.161335,-7.638700,9.293807,-7.394181,9.879575,4.529540,-2.425955,-0.748886,9.356166,1.204318,1.667172],[7.614734,-0.193488,1.118318,5.175510,-8.184279,-5.271844,-5.351508,3.988300,8.831126,-4.199568,1.086573,-1.028241,3.551700,-7.249090,-4.883068,1.337094,-5.656778,4.307978,0.704587,3.514562,-9.083148,-3.756166,7.959306,6.650314,-1.775517,7.243709,-3.194145,2.169492,-7.458963,-4.024812,7.839400,-3.947327,1.720603,3.515615,-5.019781,-5.514571],[-9.204543,-3.288422,0.657723,-0.973242,7.012545,4.448092,-2.434407,0.864929,-4.579739,0.400669,4.773235,-9.511779,-7.062855,0.228358,-4.824298,9.340155,-0.871173,-0.565383,3.933787,5.125008,0.446660,-6.498973,4.188661,-6.270865,6.023129,2.811583,8.893588,-9.711858,-7.072607,-6.861894,4.779322,4.142998,0.348933,1.433330,7.392426,2.199842],[2.064239,-4.978663,-9.959879,9.870346,-6.576059,-8.439593,-7.808530,6.661432,2.253641,5.144151,6.924102,-7.340655,-6.858775,8.872887,2.753663,-5.147879,-5.922231,7.778548,5.835872,4.709856,-2.294407,6.605444,-4.293703,5.029003,2.345808,-0.834753,3.293205,4.533041,2.018172,3.806821,-6.950344,9.387522,-5.933418,4.128326,2.366142,-4.697683],[-6.926986,-5.181704,-6.327972,-4.928300,-3.965567,8.337181,-7.142773,-2.842285,3.349717,-8.934026,3.732011,4.283206,-5.493956,-5.007655,3.703682,1.975989,-0.152005,-7.702149,4.433218,-1.270091,6.128424,-2.887219,8.411135,6.755279,-0.934308,-2.289622,-9.088355,-0.417153,-0.552075,-7.016418,6.854201,3.646040,-7.788064,-7.520177,5.654710,6.211868],[-1.920993,-6.004979,-7.413240,6.899825,4.633809,1.487012,7.812489,-7.176282,-9.378459,2.745635,6.863141,9.850626,-2.146021,7.745296,9.079137,-7.405724,-4.673442,2.313953,0.259801,-4.886005,-6.083089,-5.561435,8.539562,3.054132,5.433901,4.351999,7.334517,-0.390920,-6.941486,1.025849,7.203118,-7.238757,-6.257390,-5.373533,-5.251510,-5.735867],[-8.461632,-4.061987,-2.693416,6.036227,-9.864543,-7.798393,-3.122238,8.011876,-0.994762,-0.849304,-2.213679,-1.275192,-4.010370,-6.855347,7.285159,9.275197,5.810186,2.891798,1.083617,-8.213591,2.424326,7.313274,9.921160,-0.465187,-6.094129,4.103315,3.891302,5.594702,0.965227,-3.666231,1.103903,-5.552159,1.870659,-1.488800,3.705525,-5.620674]], dtype = "float64")#candidate|838|(60, 36)|const|float64
call_836 = relay.TupleGetItem(func_789_call(relay.reshape(var_837.astype('float64'), [16, 9, 1]), relay.reshape(const_838.astype('float64'), [16, 9, 15]), ), 1)
call_839 = relay.TupleGetItem(func_792_call(relay.reshape(var_837.astype('float64'), [16, 9, 1]), relay.reshape(const_838.astype('float64'), [16, 9, 15]), ), 1)
func_27_call = mod.get_global_var('func_27')
func_29_call = mutated_mod.get_global_var('func_29')
call_848 = relay.TupleGetItem(func_27_call(relay.reshape(call_836.astype('int32'), [11, 7, 2])), 0)
call_849 = relay.TupleGetItem(func_29_call(relay.reshape(call_836.astype('int32'), [11, 7, 2])), 0)
output = relay.Tuple([uop_821,call_826,var_827,uop_831,call_836,var_837,const_838,call_848,])
output2 = relay.Tuple([uop_821,call_828,var_827,uop_831,call_839,var_837,const_838,call_849,])
func_852 = relay.Function([var_827,var_837,], output)
mod['func_852'] = func_852
mod = relay.transform.InferType()(mod)
mutated_mod['func_852'] = func_852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_852_call = mutated_mod.get_global_var('func_852')
var_854 = relay.var("var_854", dtype = "bool", shape = (1274,))#candidate|854|(1274,)|var|bool
var_855 = relay.var("var_855", dtype = "float64", shape = (144,))#candidate|855|(144,)|var|float64
call_853 = func_852_call(var_854,var_855,)
output = call_853
func_856 = relay.Function([var_854,var_855,], output)
mutated_mod['func_856'] = func_856
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1147 = relay.const([[[-3.126672,9.666963,5.011878,3.352356,-4.651556,-2.639855,0.103902,-8.606687,6.089565,3.829485,0.414197],[-8.410369,-6.101434,8.263560,3.253915,-5.915684,-8.366270,0.357290,7.798035,-2.083170,-8.111275,4.372804],[-5.229521,5.151665,-4.896561,7.575520,-6.572711,5.271682,2.128818,4.816364,6.020114,-2.264599,3.562005],[0.016341,9.156049,-5.887179,-9.307718,1.598968,9.149568,-7.861217,6.245552,0.849636,5.436934,9.439805],[0.949306,0.084389,-0.573228,5.067285,8.721892,5.930620,-9.866802,1.977860,0.966839,3.618744,3.438375],[7.124877,7.750406,5.549967,3.274524,-3.591278,3.763857,0.647072,4.096474,7.596645,5.129505,1.229364],[-7.871448,-2.081205,0.842172,-9.316046,-2.543742,-0.835926,-2.034142,-5.968105,-5.398495,-0.143833,8.896411],[2.068355,-7.392045,4.406888,1.778503,8.622640,1.086525,-2.621700,2.032339,-7.558398,-6.558049,-9.426565],[-2.644431,-8.081137,2.743657,-5.126255,-3.787607,8.173028,-9.557896,-3.100540,-0.521820,1.547985,6.774636]],[[-2.355601,-1.564317,-4.448024,1.365570,3.602752,-3.643563,-9.828529,-6.708647,-4.643239,8.862589,-6.310112],[-7.126102,8.639969,-5.601734,4.734994,-2.832234,6.656353,-0.639989,9.339938,-8.215902,4.845511,-8.768210],[-4.073301,-7.339767,3.751164,-1.151039,9.870069,-5.568052,7.212349,2.961810,6.364617,5.688693,-0.059954],[-9.632977,7.192622,-0.017724,8.708795,3.874956,5.825082,-0.452379,0.419547,-0.045238,-2.529299,9.083324],[-8.170096,-5.249406,3.200741,-4.723110,0.299782,7.055843,9.147929,8.990074,1.193085,-5.078934,-5.968840],[1.194937,1.089549,-0.825066,1.061782,-6.481074,-1.247134,7.821129,-7.818039,8.356043,-8.925596,-3.695038],[-7.479799,3.149896,-7.574951,-9.723142,-7.045617,-2.963938,-1.764823,6.881230,9.020012,7.519908,-9.611625],[4.602323,-7.187481,-7.279695,1.922252,-9.483076,-4.029668,3.508835,1.891592,1.417305,-0.254460,5.736779],[-8.569695,-3.506357,-3.880478,9.847427,-3.933143,6.024588,1.829538,1.123782,1.813355,-6.403228,7.317682]],[[-2.211360,-9.622163,1.563909,-5.267738,5.505505,2.672018,-5.586242,3.968614,0.278194,-3.293765,-8.143630],[-9.517478,-5.676358,4.319091,-1.508928,7.763195,0.984554,-2.639390,-0.851888,9.795095,-5.017726,3.372924],[4.097479,-8.109238,-9.258723,6.476192,9.193130,-8.125600,3.398553,-0.628987,6.658744,5.708491,1.411486],[5.915686,-7.807821,6.233665,5.364700,8.776652,5.330640,2.394707,-7.110956,-0.785352,7.397451,1.202222],[-2.405141,-8.471995,9.519062,-1.415418,6.966490,-2.817058,6.518602,-5.634128,-0.960220,9.053687,-4.914365],[5.532629,6.895467,-9.051783,4.991956,-2.350739,4.984425,9.081885,-6.545473,-2.120665,4.972858,1.853154],[-8.219936,5.557309,3.534949,3.712925,-5.421634,-6.931413,-2.773713,-2.672728,-5.880642,-8.715915,7.555725],[9.770624,0.515530,8.883229,-1.180713,3.333281,8.277745,-4.219848,0.299387,-0.624890,-4.098230,-6.919281],[5.311149,-6.252674,5.447112,0.022025,-1.668165,-4.764940,-0.640070,-2.489712,-3.948494,-4.794409,8.990746]],[[-4.494034,-3.473928,-3.307682,3.391295,2.798038,2.891614,-2.155305,-9.585884,5.379323,-8.606711,9.856998],[0.171887,-8.163735,9.024758,4.538684,6.869510,-9.232947,-5.447388,-2.943089,4.086808,-9.106089,-9.974772],[2.681582,7.783411,8.454930,-5.911423,-8.824467,1.027284,3.032617,9.363045,3.911587,-3.662197,-0.417395],[-0.325669,-2.274187,7.364836,-9.479821,8.671721,-3.610879,-1.349372,8.444554,-7.227136,-4.937426,-0.652603],[4.928645,4.242164,-7.345847,-9.950344,-1.407285,6.983403,-1.594445,-9.674915,-7.640578,-2.864638,-5.308376],[3.932742,4.466399,7.116659,4.280694,8.191057,-1.017030,6.331996,-2.944993,1.780407,-1.680652,6.984802],[4.703226,7.192953,0.666450,4.006923,-3.488843,9.509972,-0.589198,1.602377,-0.702044,-6.158425,5.298843],[1.837278,5.364007,5.274829,-7.549087,-9.247566,-0.351592,3.941947,8.908816,5.698149,4.293682,1.393856],[0.857348,5.774053,4.900410,-5.697723,6.926239,-4.694089,7.197987,-2.258728,-1.103358,6.554517,-6.665305]],[[9.753281,4.030072,3.493437,3.490574,5.398557,-2.738474,2.863916,-7.198604,-5.835330,6.904728,1.680185],[-7.829995,-2.410321,-3.266091,6.036167,9.882974,7.926151,9.282818,3.180985,7.478017,-2.942254,-7.471539],[-5.101865,1.831496,-7.924640,0.221000,6.230887,-3.819503,0.436679,-8.873947,1.594252,9.508650,-2.312836],[-5.742009,0.034976,-8.846756,6.239183,1.596297,-8.891688,-5.779703,-0.831831,-7.782351,-1.004928,2.960977],[5.216685,-7.110860,1.663580,1.036663,6.822777,-0.887448,-3.965068,-8.270660,2.681504,1.958467,-9.607805],[-6.411288,3.159195,7.500442,6.945664,2.976568,-7.837897,-3.437796,5.643613,2.079307,7.746304,-6.379228],[9.383211,5.694379,-5.017434,-4.058033,-9.092912,5.157435,8.748387,9.869086,-2.366295,9.800371,4.791327],[-1.900996,-8.147528,7.047182,7.056748,6.376967,-7.327317,0.613793,1.748088,1.302978,4.774128,6.185060],[7.330999,5.824775,-8.259285,-2.123708,-8.291002,-9.430437,8.614854,-5.621076,1.391470,5.656077,-5.615291]],[[0.986693,-2.837253,-1.047293,9.378561,-6.160156,-8.090664,-8.324617,-2.403982,-9.321428,-2.450196,2.329977],[-9.984928,-3.183904,5.100506,3.192866,1.762073,7.686970,-2.509172,9.736338,-3.732168,-7.966714,2.553517],[2.039461,-9.696863,9.756524,-1.832404,-4.515849,-7.987027,7.126257,-5.694700,-0.549270,6.556274,1.998707],[1.958110,3.988629,-1.373923,-4.201537,5.360076,9.352104,-9.395251,-5.130046,-0.132658,0.497252,6.489124],[-6.475288,-4.673385,6.056008,5.093195,5.996736,0.924713,-4.086862,-0.835045,-6.103303,-3.574197,2.951010],[-6.655111,4.753827,-2.130636,9.546085,2.077994,8.984425,-4.324647,2.628660,6.549315,-1.809706,-2.892668],[-7.210901,-2.538608,-2.227840,9.185533,9.408502,2.345794,-1.551622,8.768598,9.421711,0.059504,-2.815092],[-7.109411,7.392547,-1.788947,-4.311274,-9.971214,-4.358930,6.329800,0.601701,-1.863744,-0.065552,-9.580105],[-2.469318,3.046338,-1.631166,-6.589015,-1.182043,1.820256,2.610461,-9.056221,-3.870706,-6.262907,1.490993]],[[1.185415,-4.806980,5.436950,2.007889,6.214950,8.644798,0.067696,-5.613079,7.002742,-1.005314,-9.753582],[-7.091465,-3.931961,-6.014085,5.043001,-9.342184,-9.073462,6.630866,-8.658249,9.925631,-0.238884,-7.959722],[5.825889,9.684010,6.246544,0.196005,4.837665,-0.337391,-9.995057,0.457988,-2.007477,-9.730111,-1.072889],[-9.896723,-4.860703,1.347706,0.840044,-6.228417,-5.906507,3.437516,-6.845975,2.373598,-2.623468,1.423074],[-1.506326,1.027718,-6.900638,-0.684305,8.595832,0.575696,-0.307238,-4.394374,-8.317626,-5.247676,-2.960129],[6.860828,-1.133626,6.634354,-4.396477,5.995087,3.469362,-1.204228,-9.253452,-5.204516,0.375360,7.652907],[-0.998281,0.486299,2.103048,9.971393,5.283674,-6.808528,-3.910892,6.368667,-1.638996,3.417130,2.165796],[1.497727,-4.207138,8.061061,-7.123560,-3.276325,-3.170415,9.165929,0.779877,5.546889,5.690077,0.182068],[5.337206,3.590428,4.038894,2.691719,-7.431114,4.730121,5.969149,-8.814170,3.306303,-5.513604,9.501762]],[[8.002842,3.302642,4.231684,-7.618224,-0.768002,1.659028,1.465378,-4.290610,5.740103,-0.147814,-9.526911],[9.206809,7.332611,9.733136,-7.564077,0.019507,3.440404,5.259784,-3.549519,3.214332,8.571453,-1.902444],[-1.507799,-7.907991,6.896341,-9.461114,-7.403712,-0.974691,-1.266841,7.068677,-1.861753,6.926244,5.841872],[8.270146,-9.479903,-8.620526,1.004278,9.745418,-4.952925,-0.559999,-3.585805,3.335521,-6.735507,-1.836906],[3.426082,-0.651814,-8.396632,7.877020,-9.976567,8.074862,-4.076723,-6.009268,-4.674689,9.309040,7.235676],[-9.708355,-8.210220,-5.087224,-8.912245,4.387132,2.502290,0.715197,1.303093,7.985948,4.790180,6.966895],[8.276644,-7.824894,3.794666,-5.155852,4.181356,-7.282902,-8.212185,-8.590311,8.273181,-3.728163,5.535444],[-5.634327,-1.913726,-2.148149,1.728989,6.459532,-5.643329,-2.412078,3.382734,-0.712789,-7.668924,-3.225015],[-2.867003,9.179595,7.662498,-1.538068,3.104034,3.471976,-5.121050,-5.951655,7.158000,-6.268409,0.859382]],[[8.109180,9.250062,1.920368,-7.653804,-6.003347,-9.871523,-7.466227,2.117909,6.439479,-0.895525,1.895613],[-8.790510,-9.380112,5.148886,6.695062,4.104285,-2.081234,7.145438,-1.769017,3.487637,-3.581275,-3.826994],[8.326171,1.193992,9.633004,-0.900271,-6.401835,-3.603252,-2.159341,-0.506725,-7.930616,3.059434,-9.707990],[-2.828697,-7.919842,-2.077483,6.111571,-0.407947,-2.562608,2.367205,8.218704,-2.333776,4.622954,-8.664553],[3.663981,7.868003,-8.287879,-7.301724,9.514524,-8.525910,-5.213353,-5.960790,1.349570,7.443251,-3.352908],[6.960514,-0.109846,-4.356074,-4.039405,2.625926,1.002709,4.338063,3.736423,-7.955277,-0.359584,0.225473],[5.997952,9.652836,-5.784837,6.723068,4.553010,-2.948439,-5.306387,9.049699,9.274327,-9.232536,-0.084151],[-8.260882,9.892489,-4.627590,0.139396,7.472660,-3.456833,-2.504056,1.625597,3.169320,-1.212498,-8.927860],[-1.164187,-0.730475,-8.086291,-3.522585,-4.971717,6.619074,-1.244264,-2.870518,3.902639,-6.579382,-8.398320]],[[-2.702615,-9.662135,-7.049644,5.344663,-5.001739,3.810933,6.728578,6.024251,-0.465922,-7.307557,-8.745581],[1.516107,1.173800,-0.211851,-0.621747,-5.696026,-5.629891,5.377993,1.406017,5.657281,-1.440776,-7.046973],[-1.220257,-6.016423,-9.530685,-9.362867,8.684397,4.116222,-0.665794,-2.515136,-7.426251,4.011750,-2.940169],[3.138753,0.056982,3.051647,5.015090,1.852583,9.660217,-6.203999,6.852477,-0.049392,4.287670,4.355648],[7.211124,-6.616859,-7.166709,-0.366580,-7.351647,-8.885834,-3.657637,-7.061004,-7.404356,-2.454042,6.350864],[7.722617,0.046011,5.201366,4.181911,8.359724,-0.688168,-4.484554,7.833242,8.521764,-1.926429,-9.532964],[1.279271,0.875091,-9.497353,-0.934911,-8.795345,-7.007692,2.546875,-5.326602,-8.332943,-6.147339,-7.523449],[8.090686,4.485555,0.024600,4.627441,8.847217,-4.690104,-4.233317,-7.137180,-2.339314,-2.253031,-9.693974],[-6.264218,-4.626566,-7.874904,-7.250900,4.329007,1.230706,-9.218852,-0.502168,-3.077948,7.276837,-6.689749]],[[1.418096,-3.211675,-3.638608,7.832160,-2.221813,3.824789,-2.811228,6.571261,-8.275165,4.075520,-8.160759],[9.034457,9.106121,-1.175501,-0.206875,-1.352030,6.646328,-7.694518,9.696634,-4.190486,3.209751,-0.092072],[-5.175442,-5.840819,-0.097228,-1.841698,-3.907672,6.494987,1.335855,-9.296069,9.965388,4.225836,5.491214],[-0.152830,0.685657,-4.649903,-9.135251,1.236132,5.153610,-0.011735,8.606535,-5.425484,-7.194926,3.955599],[8.204117,1.004417,-9.394173,4.296391,-1.333074,-2.014774,-6.820367,7.616674,0.767694,3.633446,-5.205806],[-1.103984,-7.523050,4.475476,-0.081729,-6.890146,-2.749831,-5.371802,7.409617,-9.926981,3.847334,0.289959],[-3.920216,7.572974,9.277479,-7.326808,-0.378811,9.502445,9.587546,5.834695,8.867811,3.461092,9.941414],[-3.882745,6.798618,6.363430,9.748445,-4.057493,1.745944,4.356353,6.906791,-2.118594,-8.995443,-0.620590],[8.466379,-9.331813,-9.482591,-6.876211,7.751912,-9.061560,-2.278903,-5.930647,-4.830728,9.790325,-1.441963]],[[6.689815,-1.611605,9.141574,3.587213,-5.172389,2.505125,-3.336182,-7.043548,1.016718,1.298583,-9.156488],[8.216893,-0.713384,3.648230,5.340625,-0.782255,7.228223,6.545377,-1.344239,7.355886,0.306700,8.703313],[-7.618711,-2.772923,4.512104,9.972878,0.880733,-2.368499,-3.933354,8.486633,5.698720,-6.574981,-7.340948],[7.366499,2.111457,0.088086,7.000903,-5.610782,-9.811928,-2.026592,-7.473822,4.870264,-2.236254,8.141122],[-0.395322,7.953298,8.529322,-6.077666,1.310000,-7.513222,-1.565481,9.379183,-4.312197,7.488532,-0.597535],[-0.764619,8.906143,5.773662,-2.917066,9.020231,7.964464,-3.622409,-5.433865,5.004945,3.636085,-3.459334],[5.650018,6.834385,1.082238,3.210273,-4.528909,2.839310,2.815786,-4.564595,2.460500,-2.630266,-4.184033],[9.745014,-9.937014,-3.050525,-8.652009,2.582427,-6.685898,3.051735,-7.785960,0.390854,1.574178,-4.541972],[3.492446,-9.314192,-0.589500,-1.112813,7.211574,-6.482627,-5.594056,6.885525,2.977582,-2.166288,-5.777064]],[[-1.866634,-3.075019,6.567347,-2.453454,9.585562,-8.691623,-1.368307,-7.280695,4.212617,5.369475,7.046126],[-4.327286,-4.625043,-8.260133,1.204281,1.268677,7.890141,-4.457090,7.483462,-9.212759,-3.522574,-4.535520],[-6.371185,8.679181,-4.926788,5.560891,-5.038950,3.358040,4.812106,-3.183462,-8.915051,-3.122571,6.429032],[-4.980389,9.432996,5.581243,-8.462486,4.603828,9.258241,-1.107502,0.302312,1.269850,-0.996270,-9.671111],[-0.487366,-2.676416,-9.013785,-9.032911,6.621402,-5.704099,-8.994849,4.926707,4.942151,4.888199,7.611542],[1.832048,3.566786,7.514642,6.574716,4.785992,-6.003157,-3.765683,8.869457,-1.203633,9.450778,9.589014],[1.303600,-7.228902,2.429905,9.931360,-3.032586,7.241323,1.136530,1.649414,1.415965,5.142722,-5.688540],[-4.431465,-3.533571,7.245326,-9.319834,0.343803,2.175665,-7.474079,4.640952,0.206556,-2.445406,9.761222],[3.211900,-5.199549,-6.947751,-4.434086,5.237330,-1.006242,-3.571267,-7.426992,-7.236269,-3.932712,7.294531]]], dtype = "float32")#candidate|1147|(13, 9, 11)|const|float32
uop_1148 = relay.atan(const_1147.astype('float32')) # shape=(13, 9, 11)
func_852_call = mod.get_global_var('func_852')
func_856_call = mutated_mod.get_global_var('func_856')
var_1165 = relay.var("var_1165", dtype = "bool", shape = (1274,))#candidate|1165|(1274,)|var|bool
const_1166 = relay.const([5.018186,-3.552011,-4.690276,1.139028,3.066474,-2.244433,5.515805,5.160544,4.489814,-4.318558,6.153341,7.906210,-5.494058,-4.013976,-9.728342,-9.832298,6.804273,0.729109,0.010066,-4.060551,9.159924,-2.634820,1.038924,-2.053088,2.558270,-4.450865,1.222296,-1.134195,-2.867965,7.115869,-9.285672,-4.807986,-2.832883,7.326158,2.980451,1.333751,-9.911347,2.152200,9.384824,-5.331356,-8.580011,-7.439039,6.906651,8.836561,2.916758,-5.905874,-3.229596,4.159040,-4.308683,7.740248,-5.240152,-3.786422,-9.010038,-0.678161,6.394386,-6.911222,5.496343,0.784881,-2.686699,-4.860034,2.099638,9.240134,-7.541768,8.931151,5.935873,-3.739793,6.440180,8.217772,-3.352558,6.204467,-4.861888,-2.098989,-5.746336,-9.536226,-3.824296,-7.937976,6.050144,-3.646479,-6.202916,5.417195,-1.945804,-2.170904,-5.671596,0.169452,8.038448,7.947757,-9.454148,-7.359348,2.947782,9.279783,3.179160,-5.494107,0.943070,-1.670832,-5.131106,-3.911820,9.042823,-4.523427,-0.545050,9.775695,-5.487744,6.182857,-7.960106,-5.372607,6.741390,6.225026,0.997901,8.567405,-5.377020,2.933921,7.848984,1.493812,-1.283435,6.300536,7.632335,-6.325827,7.713678,4.044441,2.248920,9.893561,1.336881,-3.501847,-6.504167,-2.322412,1.690102,2.907243,3.172392,-4.331619,-7.522003,-9.719867,-3.095148,-8.673484,-4.299588,4.082887,4.932146,-9.586694,3.762170,6.376628,8.562426,6.957802,9.900898,3.668039,7.929185,-3.372901], dtype = "float64")#candidate|1166|(144,)|const|float64
call_1164 = relay.TupleGetItem(func_852_call(relay.reshape(var_1165.astype('bool'), [1274,]), relay.reshape(const_1166.astype('float64'), [144,]), ), 7)
call_1167 = relay.TupleGetItem(func_856_call(relay.reshape(var_1165.astype('bool'), [1274,]), relay.reshape(const_1166.astype('float64'), [144,]), ), 7)
func_735_call = mod.get_global_var('func_735')
func_738_call = mutated_mod.get_global_var('func_738')
var_1174 = relay.var("var_1174", dtype = "float32", shape = (72,))#candidate|1174|(72,)|var|float32
call_1173 = relay.TupleGetItem(func_735_call(relay.reshape(var_1174.astype('float32'), [4, 6, 3])), 0)
call_1175 = relay.TupleGetItem(func_738_call(relay.reshape(var_1174.astype('float32'), [4, 6, 3])), 0)
func_735_call = mod.get_global_var('func_735')
func_738_call = mutated_mod.get_global_var('func_738')
call_1178 = relay.TupleGetItem(func_735_call(relay.reshape(call_1173.astype('float32'), [4, 6, 3])), 1)
call_1179 = relay.TupleGetItem(func_738_call(relay.reshape(call_1173.astype('float32'), [4, 6, 3])), 1)
func_789_call = mod.get_global_var('func_789')
func_792_call = mutated_mod.get_global_var('func_792')
const_1186 = relay.const([-6.561056,6.709530,-3.771319,-0.630152,6.123144,2.759864,2.600094,-8.541330,1.800257,7.978912,9.022042,-9.262626,-1.223737,-6.326623,-8.750699,-1.393989,-5.662964,-6.952729,5.622640,-1.847891,5.930402,5.616405,7.998601,-8.075429,-9.150878,3.224428,-8.100391,0.379491,-9.406726,-0.584012,9.157791,8.708096,-4.166716,-0.485467,-6.662901,6.913600,7.243039,-9.692303,-8.268461,3.035837,-8.385764,-7.340709,9.822513,-0.851272,6.400768,-9.657860,8.240386,-5.495992,7.928009,6.405466,5.703130,-4.745554,5.459581,7.930667,3.213736,-7.058555,3.050413,-5.870963,1.713327,4.464686,8.995185,6.659498,2.617055,-0.022822,1.156358,8.697738,-6.493449,7.241593,-9.705358,-8.415926,8.255375,-6.280455,6.883641,7.080286,7.039106,-2.105927,-0.909000,9.733266,7.831472,7.151730,-9.879463,-6.583880,-8.512904,-6.134811,-9.620599,-2.067688,-8.322868,0.605410,2.294195,-2.060245,7.975759,7.138525,-5.192300,3.780488,-0.370331,-7.972926,7.116647,-1.055425,-2.992565,4.181070,1.258610,8.856315,-1.084595,2.125783,1.542893,-4.186999,-7.782134,5.101077,-9.670537,6.566523,9.726348,5.474080,-0.090591,-2.400186,6.296111,0.255096,1.475234,-7.177215,0.459062,8.873788,6.141634,1.250449,7.018042,-9.567434,-9.288164,-7.167372,-9.747243,-5.174692,6.307534,3.310898,-5.583883,8.629383,9.447084,2.850885,-8.041745,-0.943190,-7.296359,6.716745,-4.471806,-9.449368,0.738919,-2.282142,-4.631904,-5.689683,0.556924,-7.503212,3.131761,7.879186,4.283344,0.884187,2.886876,8.408012,-2.596253,8.748171,5.525100,0.929631,-9.003699,-9.671048,-4.209765,8.185067,-7.813480,-9.866556,9.875576,0.884432,-4.531998,-1.775199,-7.669895,-4.516112,1.476327,0.562421,0.368847,4.395553,-9.998333,-0.338186,7.642513,-2.202132,-4.790288,7.563883,-0.480177,-1.416820,1.130843,-0.549214,2.227694,-9.987570,-8.420512,9.051005,-4.564840,0.347973,-8.912155,-4.684391,2.814496,2.570694,0.171214,-8.001676,1.908849,-7.683054,3.843468,-3.610514,9.383085,5.706023,-5.294497,2.370599,-2.079704,4.943940,3.897161,-3.849162,-8.247987,-3.899292,-7.923980,3.091732,6.506600,-0.343216,-3.708341,1.153031,-9.442724,5.459619,2.964050,8.950172,-9.633199,-3.000589,-6.178043,-2.512768,1.753864,-5.186336,3.053414,4.347418,-9.150509,-4.842262,8.076607,-0.624777,-3.165586,-2.811241,4.853533,4.085247,2.211799,6.774167,-8.402504,-2.706221,-8.248661,2.532289,4.199096,-5.998819,2.855286,-6.691657,9.492213,-3.476724,6.634017,5.913208,-7.052443,-5.997841,5.702851,-5.318530,1.669131,9.041873,8.081104,-8.520914,4.586577,-7.681088,2.619892,5.183477,-3.158541,-2.202675,1.158226,-8.703854,5.733216,9.489451,-0.892826,-4.422782,-9.525467,3.223661,4.987511,-4.489921,-6.468009,7.262676,-3.625551,-6.927352,-8.724599,-3.969613,5.554788,1.705615,5.391189,7.272644,-2.641928,8.914227,5.062233,8.518834,-7.110641,8.524521,-6.782869,-6.531672,-0.828191,1.496217,-2.298204,-3.271105,-6.636905,-5.861804,-7.381340,8.078265,2.873640,4.918112,8.963141,1.188628,0.107365,6.487554,2.410810,-4.917877,-4.028298,-2.349447,2.183998,-9.851931,8.386249,2.132157,-9.344914,-9.045970,7.800273,-0.201080,-2.193883,3.692542,1.033412,-8.583032,-9.902035,-5.814011,-1.874074,0.778318,6.126029,-1.079806,-9.569519,-0.293591,-6.581380,8.145466,-3.559163,8.287408,6.625221,-0.830776,4.645033,-7.995523,7.121366,-4.606370,4.962030,2.883610,-7.338079,2.090820,1.896867,8.744426,8.171978,-2.772538,6.997283,-3.100373,-2.763831,8.698232,1.498006,2.955481,-7.550175,2.588301,-6.159785,-4.123060,-7.990668,1.746208,9.324522,5.989857,4.270915,-2.060119,4.738640,-0.847266,-6.680119,7.015117,6.021894,-5.592556,1.996905,4.434102,6.596491,-8.144345,-6.245626,2.509761,-2.504444,-9.786097,-9.450162,-9.869728,2.315385,9.197830,-6.452270,-3.898482,-9.664714,5.210422,-7.883143,0.175266,-4.562855,5.992784,6.459574,-5.827658,0.825630,-1.275474,-1.089341,-5.987610,9.102217,8.921017,-8.521113,6.925381,-2.577436,-8.110439,4.378269,-4.671784,9.258506,-6.584598,0.226755,5.555030,7.819161,-6.863085,-9.801099,-9.234801,3.036638,-5.118637,6.261251,-8.755612,-8.845038,-2.631514,-8.302782,-3.052676,-4.398533,-4.297155,4.807800,-0.287725,4.395694,-3.275018,2.435145,9.766459,-1.262855,4.958347,6.417292,-2.673946,-6.643956,-7.893420,6.343107,3.377193,9.573953,5.525065,3.781481,-6.206131,2.042259,-9.821156,5.086830,2.950515,3.039514,8.521699,-2.471085,5.468010,-6.562557,0.982505,-7.585801,8.279782,-8.943539,-9.419249,-1.511839,9.968440,-5.862963,0.026573,2.125404,3.159409,2.020075,-5.144602,-3.783864,-1.617297,5.489033,6.130993,-7.277657,0.177895,1.940883,-0.785040,-6.584483,9.438751,-7.885522,-2.692306,6.323829,-5.765332,-1.485539,-0.652594,-3.882171,4.869082,-6.905099,4.484538,0.004042,-5.308213,9.507593,6.847177,-5.012244,-5.341847,9.067906,-9.204520,-5.302046,4.063863,8.971351,-7.307501,-8.539725,8.335507,-9.805279,-1.081160,-6.212608,-8.876691,3.985825,5.964491,9.767851,-1.325614,7.594724,2.409951,-6.154014,-3.944119,8.185750,8.581183,0.998780,-8.141848,-6.689413,2.005658,2.066640,-9.964236,7.206612,-7.954653,8.739574,6.011548,-6.661560,-0.888364,8.641792,-7.330778,9.888657,3.614285,6.390324,-2.476142,-5.136505,-9.380923,-4.533609,-4.047451,-7.156144,-4.696346,-7.743087,-9.034990,-0.573303,8.453642,-6.789314,-0.510506,8.147791,-0.941184,-3.741873,-2.546494,-4.473633,-4.521979,4.622224,3.220141,-1.486165,8.023965,4.824019,3.341752,6.002627,-3.773800,-1.656213,1.822306,-6.722039,-6.986844,4.139106,7.545855,7.794286,-3.638895,-7.849962,2.877677,6.194296,1.574712,-4.095268,-9.832185,0.219665,0.026607,-5.124839,-9.794431,-1.323313,9.274870,9.172118,-8.729119,-7.620729,-4.718084,-7.116297,0.157529,-4.121965,-4.802703,1.036054,-8.991540,7.061759,8.867111,5.843355,-4.619576,-4.520189,6.992317,-9.690910,3.906468,-5.558599,-5.022048,8.101189,-2.906072,-7.657070,-5.906448,6.177670,3.391375,5.875804,-1.954899,-0.578620,-5.757864,-4.986174,-0.150309,7.244712,-8.426240,7.081745,-2.997759,-2.042911,5.296189,-3.125972,1.172237,-6.055021,-9.841858,2.448173,-8.563978,-1.080141,-5.167173,-5.032862,5.577937,-5.520874,4.459986,-1.987598,-9.218526,-8.802140,-1.375720,-0.993193,5.567245,-2.504530,-8.636108,-5.731633,8.396105,3.178739,-7.284639,-7.363184,-3.325479,7.207145,8.953098,3.662743,-7.347660,4.649452,-2.502940,-3.205454,-8.189193,-9.197357,-5.650046,-9.929961,5.354650,-4.720857,7.047356,3.176691,0.222802,-1.744146,8.722358,5.859331,2.329271,-3.801097,-1.655748,0.452772,9.739501,9.378764,9.144262,7.793826,6.554293,-2.917625,-8.218968,-4.610270,-6.322575,-9.346857,8.970681,1.862980,-6.560899,-1.961873,6.705221,-9.450689,8.195031,-5.378056,9.149393,7.807520,1.199875,7.814542,-4.905696,-0.005224,-5.924883,-8.826553,-8.260276,0.453911,1.369292,0.060613,5.875818,3.548423,8.695067,8.334344,7.130960,5.147325,-6.571736,-3.711725,8.988726,2.967600,-0.568617,1.575871,-1.896627,7.871278,-8.728359,-0.357056,-0.239546,7.935529,0.720448,-7.992055,8.382014,-6.722325,7.868829,-5.016767,1.709165,-5.244378,7.758080,-4.960626,-5.299482,2.979391,-6.692821,8.038225,7.337702,-8.857025,9.942235,4.222470,-0.560510,7.885065,4.536050,-8.749189,8.567664,-4.020794,-9.642850,-1.687177,-8.159605,-9.670986,4.470131,-5.881326,-4.389893,-3.117660,0.588045,-0.706552,2.940450,8.299292,-5.061214,3.367611,9.047280,-4.451708,-3.754692,-9.373184,1.196576,8.261652,-0.232599,5.170290,-9.440511,1.364369,-9.075252,1.502706,4.664790,-6.964015,4.717206,6.324851,2.549514,-2.539446,9.970878,-6.682479,6.345871,8.431219,9.003393,-2.794109,-7.497340,-4.018184,-1.543889,-0.136435,-9.355703,1.943919,-9.429049,-8.600003,-8.576779,0.315930,-1.949496,-2.657913,9.481224,2.000117,7.693773,-8.788142,4.805927,-7.858439,3.416532,0.913687,8.852936,3.661049,-1.677823,0.116915,-5.277321,-7.119315,-6.489119,7.993015,-3.005136,2.594096,-0.740593,-6.886544,-5.000553,8.036764,7.645485,0.032272,3.142945,4.815908,7.580787,5.644861,2.937982,-9.549190,-5.153156,-1.660468,-7.561936,-5.607066,8.948154,2.079891,0.041404,4.070026,8.406492,0.762825,7.426581,-5.175440,9.073527,8.228362,1.221629,4.019316,0.846776,3.924814,2.049454,-6.384875,-4.786796,-2.848219,2.371997,-3.002414,-6.003410,8.042669,-5.591713,-9.494368,6.010590,5.401424,2.129802,2.684159,-7.644157,3.139552,-3.458156,-3.230713,8.751509,1.105589,0.698927,5.945710,7.005000,6.049920,9.081018,-2.976482,3.786075,5.614537,-0.266385,3.288570,9.763595,-3.066272,2.886600,-6.087060,1.120100,6.963663,-7.325277,-8.040266,4.913333,0.805292,-8.433870,-5.292928,0.257673,-3.175767,-9.643571,-2.814138,-0.344747,0.399260,-3.732382,-0.304731,5.753682,-0.350739,9.259462,-0.832883,-5.557173,8.548835,4.822125,8.053307,9.699877,-7.498117,0.806934,-0.013961,3.837627,9.900511,1.255660,6.547467,4.402685,-5.689682,-7.933922,-7.258462,2.395960,6.091056,3.412975,5.791954,2.330334,-2.821890,3.410145,-1.261842,-1.062839,-4.760309,-9.706123,0.985000,8.205817,-8.490061,-8.207358,-0.645459,-1.769267,-6.173416,-5.017687,-3.547246,2.403445,2.356055,7.291312,8.586920,3.333653,-1.711254,1.790447,-4.540032,6.397425,-7.163194,6.322124,3.727893,7.541596,3.478747,-8.997748,9.632406,-8.021166,-9.280530,-6.350157,6.952259,1.590354,7.784097,5.619547,2.257830,-5.416003,-8.695552,-2.878494,2.106946,3.875322,-2.323095,8.311684,2.261714,-0.609471,8.324483,5.669041,-9.656103,-5.610230,7.375438,5.919634,8.826777,7.483554,7.325066,0.574905,8.598489,4.919092,-2.046554,1.798149,-9.066784,1.628778,-7.309043,3.063231,2.210457,9.471171,6.364798,5.051682,-5.888623,1.580570,8.114350,9.506228,7.683919,-5.838007,1.046269,-1.744559,9.706587,7.968219,-9.902443,-4.842712,4.653169,0.835533,5.139697,5.631777,1.639086,5.865966,1.117875,2.733529,-4.420224,1.102726,9.228904,1.742427,1.407616,-5.157893,0.593109,-1.655048,-3.935768,-9.729557,-2.479854,-9.704673,-2.174676,-3.755937,-9.317932,-6.560226,4.827888,-3.203269,5.276721,4.456376,-9.585266,1.858890,5.790664,-9.261965,4.837647,4.054564,-6.405112,1.045999,0.043301,6.029841,5.462387,-8.579534,0.434744,7.973721,8.406804,3.268408,-6.987823,6.186238,-4.786882,-8.607807,-6.414534,-6.939269,0.785632,3.478681,1.018098,-5.466664,5.911976,-0.301098,7.071529,4.629323,-8.599919,-2.803432,4.443550,-8.237081,-6.199722,1.353765,-8.872690,5.977590,2.496538,1.980337,1.372591,9.229461,-4.436424,6.373615,7.123464,-4.474466,-4.279602,6.151909,8.850477,0.271932,-4.781016,-3.411389,-3.997272,-4.954314,6.228014,8.189930,8.976681,2.087633,-2.729502,4.915383,5.903220,5.127356,-0.483269,-5.469399,7.898091,3.622514,-4.693260,-4.257761,-3.120992,0.997436,-5.329918,-8.497054,9.831862,-4.124043,2.531352,-8.322226,2.610266,-9.942483,-5.074378,9.005360,-8.109330,0.251494,0.019166,-3.611015,-2.634143,3.345877,-4.913849,-2.343726,3.840645,2.640746,-4.266744,7.227891,4.616733,3.743663,-4.932152,3.651395,-6.158306,-8.709648,7.154160,9.904649,-0.991546,-2.753196,-4.275731,-5.172649,8.806637,-3.330368,4.096774,-7.138147,3.731178,-9.000163,-4.937952,5.746407,-2.253636,-7.106100,-0.664736,9.489763,-8.017766,7.696099,-5.483488,-6.184920,8.451997,3.978419,2.353208,2.797122,-5.395845,-2.300946,-0.626624,2.118326,0.604227,-4.665001,8.456062,-4.874894,1.170109,-5.391825,-2.615313,-3.779875,-3.676322,-7.475965,6.987599,-8.683100,-4.721494,-7.111240,-3.700562,5.273413,-5.463106,6.338058,-9.329837,9.154588,6.362124,7.482897,9.283945,7.519422,-6.529426,8.660567,-6.485653,7.527010,-8.129500,7.261225,1.606953,6.631640,-1.546544,0.407149,-7.541508,-2.785397,-9.042409,1.791225,4.232992,6.022563,4.139963,4.257633,3.131672,-7.447874,2.762036,-3.959325,-8.820624,-2.970530,9.239012,1.248824,-3.685366,8.269704,-9.002324,-9.598791,-1.368267,6.150892,-7.978822,3.913428,3.061979,-7.256800,7.318619,2.911344,-0.438053,-2.048463,7.271071,3.148939,7.572936,-1.410529,-7.416034,-2.911728,7.231842,-4.699202,-3.553197,5.551917,7.196415,-2.151994,-8.563730,-8.063120,7.781541,-5.841262,6.342823,6.694817,3.271143,-3.854631,-3.603336,-5.401206,-2.835748,-0.035730,-4.841848,-1.038507,9.944941,-7.675855,-3.738631,-8.436909,8.387397,-0.818662,-5.606245,3.376731,6.705708,7.406532,-2.497070,4.075904,-5.076607,-6.349921,6.109734,-6.199626,6.355060,4.065652,-4.270803,-6.275078,-9.799953,-5.284173,-6.260577,-3.329771,1.018657,3.138220,5.808127,-9.856507,-2.629059,-8.285698,4.589536,-5.952904,5.490390,-9.501815,1.863715,5.920445,9.724642,6.071544,-0.762789,8.803775,3.924118,4.262811,-0.838204,0.068504,-1.224393,-7.135530,-3.302173,7.163746,-9.012278,8.780895,-2.013415,-6.498803,-8.208644,7.858722,0.264243,-0.911888,6.922165,-9.829545,6.577452,1.362110,1.846947,9.227451,-2.893114,-0.689386,-6.777369,1.701597,-3.627962,-0.682610,0.871059,4.518148,0.356590,5.190780,-2.411769,-7.369860,7.947742,2.650740,7.963446,6.300193,2.860622,5.849688,8.831397,-4.671190,-2.718441,9.353732,-5.769038,-9.320904,-9.372511,5.505047,5.367341,8.514351,4.370463,-6.492232,4.524556,-5.086904,7.432350,7.648796,-8.357435,-5.066074,-9.873921,-6.636490,5.175152,-3.716846,2.182251,-0.674897,2.885108,8.904068,-8.108096,-8.388896,0.577984,8.764440,-6.597099,-3.979698,-4.070900,9.115543,-7.380831,-2.743278,-9.810651,8.032615,-9.761094,0.190403,6.891088,-6.556064,-2.733198,-1.270802,8.929820,-1.633695,-2.204562,3.491499,9.162184,9.655612,-0.669719,6.723466,8.937524,-6.874540,-4.250312,5.633412,1.466500,-1.238010,-3.653431,3.382664,-0.129967,3.048886,-9.126849,8.070923,6.667340,7.302439,-4.555349,6.159252,-9.578221,0.033194,8.885757,-1.958770,-8.263703,-9.742903,5.833146,8.154778,4.331268,-3.449917,1.409830,5.583289,0.773438,-1.499013,-3.937016,7.315571,-4.952911,4.751413,9.093335,-8.124365,-1.298239,9.849671,-3.493373,5.194233,6.041211,-9.681753,-9.041716,-2.452292,-6.718684,9.596928,-4.827313,2.769821,-4.883713,-7.745516,6.337634,0.888068,0.634680,5.022319,2.398981,5.322149,4.531492,2.485730,1.502959,6.778120,9.192722,-9.453617,9.791326,-9.810475,2.547000,3.908205,1.835007,-5.777960,0.341373,-4.769115,5.727715,-7.931424,6.346534,-8.044524,6.766872,8.997838,-3.693573,-8.448690,2.469892,3.150871,6.518472,9.022701,-6.926148,6.152259,-6.760962,-0.025996,2.015797,-8.205863,9.365031,1.937585,-2.749435,3.482899,4.915772,-4.255535,-8.353783,8.280609,-2.897687,-2.949243,-7.821737,6.292143,4.884159,-4.219263,-5.825809,-8.691202,9.546065,-8.685650,-5.520235,5.242598,7.463714,-6.747621,3.855451,7.100749,9.990843,-7.484020,0.496082,-9.872127,-0.071445,7.066035,1.933267,-8.524645,0.981123,-9.533115,-0.897394,7.665140,6.368822,8.221900,6.846035,-9.290087,-8.615775,7.204075,-7.651706,-8.495447,-0.813621,6.400552,9.271235,9.828987,-1.790148,-8.701145,2.773309,-3.001998,-5.972460,6.569364,-1.046540,-8.622181,7.199031,-4.924878,8.322604,-1.059956,-0.005528,4.713775,8.122696,7.920180,-2.536466,-2.291232,5.851437,-2.141112,-0.062806,-2.244764,9.644474,8.674852,-5.874238,6.795960,-8.515871,7.681076,1.195094,3.787616,1.040433,7.601781,-9.827779,3.830152,-2.308944,1.354610,-5.186020,-5.664152,-6.100448,-3.385709,6.599503,-9.117912,0.235171,6.865335,-5.857574,8.492019,4.405370,6.742371,-1.732175,9.208693,-9.277798,2.659353,-5.085317,5.248420,4.191093,4.226335,1.231432,-5.165774,-6.653236,9.718680,-2.276031,-0.446374,9.355818,-0.556970,4.179206,0.290978,-2.228885,-8.324244,-4.660629,-9.002454,6.862850,-8.295435,9.312755,9.148664,-6.096473,2.026877,7.060634,-4.543919,1.584520,-6.406809,5.753441,7.788905,-8.812512,-2.160354,3.910508,-6.710203,0.664215,9.184386,2.770315,-2.370446,2.850969,5.380257,3.727532,-0.894173,-7.899467,7.205875,-0.352331,7.499137,-6.052977,9.426749,-8.515971,-5.617686,-8.024435,6.995898,-4.173429,-0.728319,5.112936,-1.623431,5.256108,3.310721,8.951417,2.419454,7.570297,-5.930173,9.616245,0.810195,4.543699,5.151921,9.464540,-7.471650,-6.371985,-8.520081,-5.537377,-0.445497,6.787003,4.623395,6.790336,-7.166346,3.760238,-9.140107,-9.487189,1.470332,-6.042854,9.930033,2.708657,4.158307,-4.671551,0.609099,3.553868,7.029463,7.404091,6.704315,3.894652,-6.361729,9.255536,3.939251,-7.432207,6.695776,2.395929,1.209687,-8.373624,-6.253840,-8.389929,8.630413,-7.547618,-7.104147,7.587568,-7.325074,3.253045,-0.466008,0.068419,-8.350815,-8.681291,-4.916032,-5.047777,-3.418434,7.013817,-9.966311,-4.750011,3.559418,-0.391224,-7.471630,5.819787,-9.082113,1.499290,5.536505,1.844922,6.756252,-3.502332,8.219528,6.144081,8.961612,2.294507,-6.254240,-4.694281,-5.669200,8.225790,-8.011197,9.762028,9.032007,6.830565,4.545122,-2.222319,-0.734525,1.734808,6.864358,1.733220,4.659938,-5.255917,-9.289817,6.076129,1.065151,-6.734734,6.019406,9.234920,-6.321546,-4.978221,4.695559,-5.600705,5.316096,2.392744,-4.486048,8.223999,9.935151,7.364434,-5.945029,-1.476249,9.279865,-9.854521,-2.150685,8.985636,-4.480856,0.821371,-9.963030,-3.821350,7.065618,4.407013,-8.760583,8.466753,-8.649630,-6.918378,4.591326,2.693235,6.217533,1.782816,0.482231,-5.682831,-0.193617,2.724320,-7.847954,-9.486741,9.450648,9.118046,5.293460,-7.193632,-4.569619,-9.345335,7.832317,-3.463910,2.107478,2.296635,8.815104,6.678720,1.563788,-1.341685,-2.787597,3.292742,-6.923261,4.957117,3.380802,-1.850675,-5.189921,9.900221,-8.452369,-6.572052,3.205684,-5.551101,-3.783703,8.067669,-3.305171,3.298710,-1.127482,-6.837309,7.920617,-7.948708,6.912996,-1.184934,-6.130288,-6.300702,-0.797121,-6.131220,-1.524011,-2.568751,-5.912960,-1.040055,3.031751,1.090628,-0.500653,1.123635,-3.442551,-1.959449,-3.070528,6.781096,-9.148722,1.103875,7.628663,-3.477426,-8.776541,-7.664234,-1.046117,1.020407,-6.577380,-6.264607,-9.400189,-8.353120,1.354216,4.080281,-0.552109,-7.179225,-5.225052,7.992498,-9.196627,1.340335,-8.463445,8.813916,-2.209498,-8.700248,-7.231319,4.524719,-1.198872,8.351042,-1.238958,8.727751,3.129056,2.197847,2.832202,7.999418,-1.600918,-5.560578,-6.131007,-9.161447,-3.693336,9.126928,0.367151,-0.861290,7.471990,6.401704,-6.592436,-7.304956,8.188088,5.970157,-9.578775,-5.023461,4.279131,1.081138,-5.242677,-5.220739,-8.332736,5.350732,-3.643911,-5.499256,8.497287,1.413599,-5.268944,-7.709103,7.161444,1.500317,-7.098446,-5.764638,-2.641448,-2.472013,4.315566,-7.733593,-3.223701,8.656347,0.808743,-8.449981,-7.671858,-2.102907,9.706300,-2.461732,-9.706661,-7.374548,2.871569,-0.023601,-3.764592,-3.352645,2.173560,-1.241457,7.569419,-1.139264,0.959839,0.874264,-0.665319,-0.539312,-3.182374,-0.697038,-0.401574,-7.376912,2.895746,-9.174062,2.105635,-5.719591,2.298449,-6.412247,-4.609202,8.864817,-2.963615,7.159928,-2.480542,-8.240233,-6.534266,1.009826,-6.813454,-0.592094,-0.057966,0.396364,-4.000416,-8.062322,-5.765142,-0.966960,9.678923,-7.970646,-5.293003,-9.529297,-6.701998,-7.799981,3.482245,1.162994,6.470818,8.343520,-3.787043,1.352110,-1.737926,-0.122231,-7.604040,-4.480081,-1.916456,1.245182,-3.817019,6.971230,6.763293,-1.653530,8.530692,-5.674483,2.878411,-2.974555,-6.366257,-6.526126,2.730155,-7.654109,2.531816,8.350187,7.281409,7.571719,-1.871751,-4.711075,-8.313247,-5.260525,2.443105,-0.820590,0.215909,-5.719238,-1.176648,-8.655314,-7.253020,3.968150,8.615377,7.589160,-7.250845,6.304157,-6.949863,-2.138039,-1.803045,-9.182726,6.397887,-5.972056,-1.528295,-8.310658,-7.322793,-3.872253,3.604588,-6.653810,9.625075,-8.198411,-4.261963,-7.082231,5.850268,4.148798,-0.990648,1.073553,-1.841960,-1.971424,6.039388,6.842458,9.056901,-6.589835,-6.449116,-1.241353,-2.998668,2.340482,-8.343428,1.616116,-9.465518,4.961073,0.758263,-2.663222,-3.852576,-9.678802,7.390090,5.531819,0.096749,-4.392431,9.455809,6.323014,2.274505,-9.051048,8.610678,1.669796,3.273394,-6.841499,-0.608899,-3.376752,7.195191,-2.049498,1.099921,1.839829,8.942595,-6.062282,-8.981943,-2.564082,-4.423117,6.480263,0.537091,8.291165,5.225745,8.788912,-1.233424,6.472776,-7.653185,-7.817116,0.109415,-9.233512,6.488882,5.244792,1.265374,3.563356,4.175291,7.459309,-1.787759,4.461577,-5.991631,5.741205,-4.254795,-1.323650,-1.463853,-4.726446,-5.598132,-0.202496,5.943739,-3.928735,7.038000,-5.746797,-7.964495,8.348262,-5.086812,9.362362,7.297737,2.011788,1.381064,-7.775126,8.585904,1.517678,-6.810214,0.736091,-4.848347,-4.885089,-0.868705,-0.785941,-9.738680,8.832491,-5.918714,4.729689,2.207440,1.000320,-0.352423,-0.390774,3.390001,9.381120,2.162299,2.031856,-5.083723,3.767844,0.821677,-0.218799,-9.834099,-9.212234,-3.030449,-1.282758,6.523697,-1.869373,-7.798217,5.122886,-1.592611,9.580525,4.297075,8.687174,-8.551772,-1.881402,-1.643765,2.217291,-2.699522,2.518290,8.288271,-9.971799,-1.956526,-8.072312,2.853902,-3.274232,-8.367664,4.593908,-6.676669,-9.285469,-1.980330,-9.635423,0.763916,1.951543,-9.202260,-9.145808,-2.472998,-5.825459,4.726822,2.195773,-0.015633,-0.698132,2.413526,-5.698375,6.864939,-5.881937,-8.991541,-7.088924,-7.621351,3.744777,8.589980,-6.469610,9.595603,-5.168397,7.591362,0.477899,0.469848,7.598425,-4.020128,-6.723030,-8.767684,1.380426,-4.182762,-7.639462,7.873291,8.765039,7.086056,-4.900508,-2.030029,7.324335,1.861125,2.624654,-1.089614,5.690487,-9.533842,-3.169458,1.368571], dtype = "float64")#candidate|1186|(2160,)|const|float64
call_1185 = relay.TupleGetItem(func_789_call(relay.reshape(const_1166.astype('float64'), [16, 9, 1]), relay.reshape(const_1186.astype('float64'), [16, 9, 15]), ), 1)
call_1187 = relay.TupleGetItem(func_792_call(relay.reshape(const_1166.astype('float64'), [16, 9, 1]), relay.reshape(const_1186.astype('float64'), [16, 9, 15]), ), 1)
output = relay.Tuple([uop_1148,call_1164,var_1165,const_1166,call_1173,var_1174,call_1178,call_1185,const_1186,])
output2 = relay.Tuple([uop_1148,call_1167,var_1165,const_1166,call_1175,var_1174,call_1179,call_1187,const_1186,])
func_1194 = relay.Function([var_1165,var_1174,], output)
mod['func_1194'] = func_1194
mod = relay.transform.InferType()(mod)
mutated_mod['func_1194'] = func_1194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mutated_mod.get_global_var('func_1194')
var_1196 = relay.var("var_1196", dtype = "bool", shape = (1274,))#candidate|1196|(1274,)|var|bool
var_1197 = relay.var("var_1197", dtype = "float32", shape = (72,))#candidate|1197|(72,)|var|float32
call_1195 = func_1194_call(var_1196,var_1197,)
output = call_1195
func_1198 = relay.Function([var_1196,var_1197,], output)
mutated_mod['func_1198'] = func_1198
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1225 = relay.var("var_1225", dtype = "float32", shape = (4, 1, 3))#candidate|1225|(4, 1, 3)|var|float32
uop_1226 = relay.asinh(var_1225.astype('float32')) # shape=(4, 1, 3)
uop_1229 = relay.sqrt(uop_1226.astype('float64')) # shape=(4, 1, 3)
output = relay.Tuple([uop_1229,])
output2 = relay.Tuple([uop_1229,])
func_1232 = relay.Function([var_1225,], output)
mod['func_1232'] = func_1232
mod = relay.transform.InferType()(mod)
mutated_mod['func_1232'] = func_1232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1233 = relay.var("var_1233", dtype = "float32", shape = (4, 1, 3))#candidate|1233|(4, 1, 3)|var|float32
func_1232_call = mutated_mod.get_global_var('func_1232')
call_1234 = func_1232_call(var_1233)
output = call_1234
func_1235 = relay.Function([var_1233], output)
mutated_mod['func_1235'] = func_1235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1311 = relay.var("var_1311", dtype = "uint32", shape = (16, 15, 6))#candidate|1311|(16, 15, 6)|var|uint32
var_1312 = relay.var("var_1312", dtype = "uint32", shape = (16, 15, 6))#candidate|1312|(16, 15, 6)|var|uint32
bop_1313 = relay.not_equal(var_1311.astype('bool'), relay.reshape(var_1312.astype('bool'), relay.shape_of(var_1311))) # shape=(16, 15, 6)
output = relay.Tuple([bop_1313,])
output2 = relay.Tuple([bop_1313,])
func_1341 = relay.Function([var_1311,var_1312,], output)
mod['func_1341'] = func_1341
mod = relay.transform.InferType()(mod)
var_1342 = relay.var("var_1342", dtype = "uint32", shape = (16, 15, 6))#candidate|1342|(16, 15, 6)|var|uint32
var_1343 = relay.var("var_1343", dtype = "uint32", shape = (16, 15, 6))#candidate|1343|(16, 15, 6)|var|uint32
output = func_1341(var_1342,var_1343,)
func_1344 = relay.Function([var_1342,var_1343,], output)
mutated_mod['func_1344'] = func_1344
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1446 = relay.const([[[4,-5,-8,-6,-10,-8],[9,3,-7,-10,-9,8],[3,10,-9,-1,2,-3],[-3,-5,-8,-1,6,2],[2,10,4,7,2,-5],[8,4,-3,10,-8,10],[8,4,7,9,7,1]],[[7,-9,7,-10,1,5],[-2,2,2,7,-5,-5],[-8,2,-6,-9,4,2],[1,8,-7,-5,-10,1],[1,1,1,-6,2,8],[-4,-3,-4,-2,8,-8],[3,-5,2,-2,-4,-7]],[[-10,-7,5,-2,-10,-7],[-9,-1,1,3,-5,-6],[4,8,-2,6,9,4],[-9,-3,1,-7,-3,9],[-8,-7,-3,-9,-10,9],[-3,-1,10,-8,-2,-2],[-5,5,-7,-9,9,9]],[[-8,2,-5,-7,8,3],[-7,-9,-2,-4,-9,-4],[-3,3,-8,5,9,3],[10,4,-1,-4,-6,7],[-3,6,10,-8,2,5],[4,-7,9,6,-3,5],[-7,-2,3,2,10,10]],[[7,-3,1,-10,-9,-9],[8,-8,-6,-3,-4,-8],[6,-7,-8,-6,-6,4],[6,6,1,-4,9,-8],[-2,1,-7,7,9,-10],[10,1,-7,-7,1,8],[7,10,1,4,-10,3]],[[2,-3,-1,-7,2,-9],[5,2,7,5,-2,-9],[-5,-10,8,4,-3,-10],[-3,7,4,-2,10,-4],[-6,1,6,-2,-5,-7],[8,-2,10,5,-6,7],[-6,3,-3,-5,8,6]],[[9,6,-2,6,4,-1],[7,-6,-8,-7,1,2],[-6,4,6,9,-10,9],[8,4,-1,-6,10,-3],[4,3,-9,3,6,1],[-9,-5,-5,-3,-8,-5],[-1,-9,-3,-9,6,4]],[[9,-3,5,6,2,5],[6,10,-6,-4,6,-7],[-10,3,8,-1,5,3],[6,3,1,-7,5,-2],[2,7,-1,-4,9,-9],[7,6,-4,1,8,-9],[-4,-5,-4,10,-5,4]],[[1,9,7,9,-7,-5],[5,10,4,4,6,6],[8,-7,-3,1,9,6],[-7,10,-1,5,-5,-9],[4,4,5,-1,-6,-6],[-9,4,6,-6,4,-6],[-4,-1,6,5,-5,2]],[[-9,-1,-1,-5,-3,-10],[9,-1,-3,10,-8,4],[4,1,-8,-7,6,-9],[8,-9,5,9,5,-8],[9,-6,2,-8,-9,4],[-4,2,3,-8,7,2],[-5,5,3,10,5,8]],[[6,-4,6,2,-10,-1],[10,-6,5,9,2,-9],[1,-8,5,-4,1,6],[5,-7,-2,2,6,-9],[5,-10,-5,-4,10,3],[-6,-6,4,-4,10,7],[-2,4,-4,-10,2,-8]],[[10,-5,1,-8,4,6],[6,8,3,-7,-4,-2],[5,-9,-1,6,-10,4],[9,-10,7,-3,-6,-10],[8,-4,2,1,8,-6],[1,-10,5,2,-9,-8],[-10,1,6,7,-3,-8]],[[-6,4,-1,3,-4,-2],[-9,4,-9,-6,7,-7],[3,1,-4,10,-8,-6],[-5,-2,1,2,10,-2],[10,8,-7,4,-10,5],[2,7,-2,-2,1,-7],[-7,6,7,-6,4,-6]],[[-10,1,3,-7,-3,-6],[7,-3,-1,-3,-1,6],[5,-5,-8,1,1,-2],[-10,-3,3,-10,-7,-9],[5,-9,-8,-4,-8,3],[-2,-4,8,9,-4,3],[-2,-6,-5,-9,6,9]],[[-4,-7,2,8,6,-6],[9,2,-8,9,-9,-10],[1,-7,9,10,-8,6],[9,-3,8,-9,5,-8],[-8,2,5,4,-3,-2],[-6,8,1,4,-9,-3],[6,-4,3,5,-1,1]],[[-1,2,5,-8,8,6],[9,-9,1,-5,-4,-10],[-3,2,-4,-1,-7,8],[-1,-6,-2,8,4,-2],[-9,-2,8,-2,8,4],[-7,6,-2,-8,3,-9],[6,-6,5,5,-5,-7]]], dtype = "int32")#candidate|1446|(16, 7, 6)|const|int32
var_1447 = relay.var("var_1447", dtype = "int32", shape = (16, 7, 6))#candidate|1447|(16, 7, 6)|var|int32
bop_1448 = relay.minimum(const_1446.astype('int32'), relay.reshape(var_1447.astype('int32'), relay.shape_of(const_1446))) # shape=(16, 7, 6)
bop_1460 = relay.right_shift(bop_1448.astype('int16'), relay.reshape(const_1446.astype('int16'), relay.shape_of(bop_1448))) # shape=(16, 7, 6)
func_735_call = mod.get_global_var('func_735')
func_738_call = mutated_mod.get_global_var('func_738')
var_1465 = relay.var("var_1465", dtype = "float32", shape = (1, 72))#candidate|1465|(1, 72)|var|float32
call_1464 = relay.TupleGetItem(func_735_call(relay.reshape(var_1465.astype('float32'), [4, 6, 3])), 0)
call_1466 = relay.TupleGetItem(func_738_call(relay.reshape(var_1465.astype('float32'), [4, 6, 3])), 0)
bop_1469 = relay.logical_and(var_1465.astype('bool'), relay.reshape(call_1464.astype('bool'), relay.shape_of(var_1465))) # shape=(1, 72)
bop_1472 = relay.logical_and(var_1465.astype('bool'), relay.reshape(call_1466.astype('bool'), relay.shape_of(var_1465))) # shape=(1, 72)
output = relay.Tuple([bop_1460,bop_1469,])
output2 = relay.Tuple([bop_1460,bop_1472,])
func_1473 = relay.Function([var_1447,var_1465,], output)
mod['func_1473'] = func_1473
mod = relay.transform.InferType()(mod)
var_1474 = relay.var("var_1474", dtype = "int32", shape = (16, 7, 6))#candidate|1474|(16, 7, 6)|var|int32
var_1475 = relay.var("var_1475", dtype = "float32", shape = (1, 72))#candidate|1475|(1, 72)|var|float32
output = func_1473(var_1474,var_1475,)
func_1476 = relay.Function([var_1474,var_1475,], output)
mutated_mod['func_1476'] = func_1476
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1491 = relay.var("var_1491", dtype = "float32", shape = (1, 15, 14))#candidate|1491|(1, 15, 14)|var|float32
uop_1492 = relay.sigmoid(var_1491.astype('float32')) # shape=(1, 15, 14)
output = uop_1492
output2 = uop_1492
func_1501 = relay.Function([var_1491,], output)
mod['func_1501'] = func_1501
mod = relay.transform.InferType()(mod)
mutated_mod['func_1501'] = func_1501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1502 = relay.var("var_1502", dtype = "float32", shape = (1, 15, 14))#candidate|1502|(1, 15, 14)|var|float32
func_1501_call = mutated_mod.get_global_var('func_1501')
call_1503 = func_1501_call(var_1502)
output = call_1503
func_1504 = relay.Function([var_1502], output)
mutated_mod['func_1504'] = func_1504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1757 = relay.var("var_1757", dtype = "int64", shape = (11, 9, 9))#candidate|1757|(11, 9, 9)|var|int64
var_1758 = relay.var("var_1758", dtype = "int64", shape = (11, 9, 9))#candidate|1758|(11, 9, 9)|var|int64
bop_1759 = relay.bitwise_xor(var_1757.astype('int64'), relay.reshape(var_1758.astype('int64'), relay.shape_of(var_1757))) # shape=(11, 9, 9)
output = relay.Tuple([bop_1759,])
output2 = relay.Tuple([bop_1759,])
func_1769 = relay.Function([var_1757,var_1758,], output)
mod['func_1769'] = func_1769
mod = relay.transform.InferType()(mod)
mutated_mod['func_1769'] = func_1769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1769_call = mutated_mod.get_global_var('func_1769')
var_1771 = relay.var("var_1771", dtype = "int64", shape = (11, 9, 9))#candidate|1771|(11, 9, 9)|var|int64
var_1772 = relay.var("var_1772", dtype = "int64", shape = (11, 9, 9))#candidate|1772|(11, 9, 9)|var|int64
call_1770 = func_1769_call(var_1771,var_1772,)
output = call_1770
func_1773 = relay.Function([var_1771,var_1772,], output)
mutated_mod['func_1773'] = func_1773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2110 = relay.var("var_2110", dtype = "float32", shape = (9, 11, 16))#candidate|2110|(9, 11, 16)|var|float32
var_2111 = relay.var("var_2111", dtype = "float32", shape = (9, 11, 16))#candidate|2111|(9, 11, 16)|var|float32
bop_2112 = relay.minimum(var_2110.astype('float32'), relay.reshape(var_2111.astype('float32'), relay.shape_of(var_2110))) # shape=(9, 11, 16)
uop_2121 = relay.asinh(bop_2112.astype('float64')) # shape=(9, 11, 16)
func_1232_call = mod.get_global_var('func_1232')
func_1235_call = mutated_mod.get_global_var('func_1235')
var_2139 = relay.var("var_2139", dtype = "float32", shape = (12,))#candidate|2139|(12,)|var|float32
call_2138 = relay.TupleGetItem(func_1232_call(relay.reshape(var_2139.astype('float32'), [4, 1, 3])), 0)
call_2140 = relay.TupleGetItem(func_1235_call(relay.reshape(var_2139.astype('float32'), [4, 1, 3])), 0)
output = relay.Tuple([uop_2121,call_2138,var_2139,])
output2 = relay.Tuple([uop_2121,call_2140,var_2139,])
func_2148 = relay.Function([var_2110,var_2111,var_2139,], output)
mod['func_2148'] = func_2148
mod = relay.transform.InferType()(mod)
var_2149 = relay.var("var_2149", dtype = "float32", shape = (9, 11, 16))#candidate|2149|(9, 11, 16)|var|float32
var_2150 = relay.var("var_2150", dtype = "float32", shape = (9, 11, 16))#candidate|2150|(9, 11, 16)|var|float32
var_2151 = relay.var("var_2151", dtype = "float32", shape = (12,))#candidate|2151|(12,)|var|float32
output = func_2148(var_2149,var_2150,var_2151,)
func_2152 = relay.Function([var_2149,var_2150,var_2151,], output)
mutated_mod['func_2152'] = func_2152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2267 = relay.var("var_2267", dtype = "uint16", shape = ())#candidate|2267|()|var|uint16
var_2268 = relay.var("var_2268", dtype = "uint16", shape = (13, 4, 1))#candidate|2268|(13, 4, 1)|var|uint16
bop_2269 = relay.maximum(var_2267.astype('uint16'), var_2268.astype('uint16')) # shape=(13, 4, 1)
func_292_call = mod.get_global_var('func_292')
func_296_call = mutated_mod.get_global_var('func_296')
var_2280 = relay.var("var_2280", dtype = "float32", shape = (132,))#candidate|2280|(132,)|var|float32
const_2281 = relay.const([False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,False,False], dtype = "bool")#candidate|2281|(1274,)|const|bool
call_2279 = relay.TupleGetItem(func_292_call(relay.reshape(var_2280.astype('float32'), [3, 4, 11]), relay.reshape(const_2281.astype('bool'), [1274,]), ), 1)
call_2282 = relay.TupleGetItem(func_296_call(relay.reshape(var_2280.astype('float32'), [3, 4, 11]), relay.reshape(const_2281.astype('bool'), [1274,]), ), 1)
output = relay.Tuple([bop_2269,call_2279,var_2280,const_2281,])
output2 = relay.Tuple([bop_2269,call_2282,var_2280,const_2281,])
func_2285 = relay.Function([var_2267,var_2268,var_2280,], output)
mod['func_2285'] = func_2285
mod = relay.transform.InferType()(mod)
var_2286 = relay.var("var_2286", dtype = "uint16", shape = ())#candidate|2286|()|var|uint16
var_2287 = relay.var("var_2287", dtype = "uint16", shape = (13, 4, 1))#candidate|2287|(13, 4, 1)|var|uint16
var_2288 = relay.var("var_2288", dtype = "float32", shape = (132,))#candidate|2288|(132,)|var|float32
output = func_2285(var_2286,var_2287,var_2288,)
func_2289 = relay.Function([var_2286,var_2287,var_2288,], output)
mutated_mod['func_2289'] = func_2289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2531 = relay.var("var_2531", dtype = "float32", shape = (8, 9, 11))#candidate|2531|(8, 9, 11)|var|float32
uop_2532 = relay.cos(var_2531.astype('float32')) # shape=(8, 9, 11)
func_789_call = mod.get_global_var('func_789')
func_792_call = mutated_mod.get_global_var('func_792')
const_2535 = relay.const([[8.753002,5.463384,-6.899846,-0.354412,1.927295,5.690646,1.802476,-1.869402,4.942849,-5.297774,4.173103,-1.902800,1.382897,5.708379,-8.392043,9.741499,8.766355,6.642040,-6.889089,7.257150,-0.919859,-6.362907,2.322744,-3.847070,5.402812,-1.763909,-0.689313,8.987709,2.903358,3.790305,4.689041,7.044831,-5.742476,-3.915333,-1.340827,-5.642023,7.244814,-5.103314,0.486033,8.690087,9.844570,2.057791,-5.295068,3.119286,5.215042,0.047386,1.846321,2.868005,0.700002,7.514996,1.491505,-4.321636,-2.193722,-5.805075,-3.182885,4.242795,6.651827,0.329264,1.630486,2.136568,-4.223675,-2.771353,6.798241,8.102503,9.981996,3.299073,-2.978922,4.195676,-3.078996,-0.906939,-5.476642,7.583418,-0.551351,5.928871,8.900685,-9.958774,-1.844453,-1.355950,-2.628629,-9.125560,-7.517600,8.028861,-9.059279,7.905611,-3.223222,8.976582,9.322044,-9.644993,7.006784,-3.972209,7.517533,-4.959824,3.043463,9.701509,-7.436691,4.199807,2.772837,0.941052,-9.177343,9.800794,-8.950801,7.332318,9.856768,4.953771,5.413181,5.068316,-7.639148,-6.287073,-7.865157,-6.817303,-6.138823,6.222068,-1.762203,1.983045,-5.144197,5.633206,1.233272,-4.359466,-2.253927,1.055342,1.145921,-7.031321,8.167375,2.211201,7.578278,-4.627389,-0.221483,2.592064,6.640332,7.193306,1.710800,-8.521321,0.763094,8.990762,1.325595,5.325600,-5.462607,-1.959250,5.845230,2.694852,6.194246,-0.061116,-2.438840,-2.267533]], dtype = "float64")#candidate|2535|(1, 144)|const|float64
var_2536 = relay.var("var_2536", dtype = "float64", shape = (2160,))#candidate|2536|(2160,)|var|float64
call_2534 = relay.TupleGetItem(func_789_call(relay.reshape(const_2535.astype('float64'), [16, 9, 1]), relay.reshape(var_2536.astype('float64'), [16, 9, 15]), ), 0)
call_2537 = relay.TupleGetItem(func_792_call(relay.reshape(const_2535.astype('float64'), [16, 9, 1]), relay.reshape(var_2536.astype('float64'), [16, 9, 15]), ), 0)
bop_2543 = relay.left_shift(uop_2532.astype('uint32'), relay.reshape(var_2531.astype('uint32'), relay.shape_of(uop_2532))) # shape=(8, 9, 11)
uop_2578 = relay.log(var_2531.astype('float64')) # shape=(8, 9, 11)
func_2148_call = mod.get_global_var('func_2148')
func_2152_call = mutated_mod.get_global_var('func_2152')
const_2598 = relay.const([-8.347493,2.111958,-3.234136,2.547647,-0.199837,-9.618459,3.361850,-0.624103,6.330444,-0.422959,-4.178787,8.074798,-4.319712,-1.151755,3.642931,-8.121597,-4.549547,-6.777049,3.441907,4.453803,4.236516,-9.998152,-9.624052,-7.261818,-8.057271,-8.262915,5.781622,5.323643,8.029039,9.262140,2.416508,0.225186,9.464023,-2.643675,1.562961,0.539946,6.520715,-7.050093,-9.706520,-6.574656,8.626289,-6.161907,-1.575896,-0.375471,2.785256,-9.991959,-4.067314,-7.563468,6.255900,-5.103399,-4.008076,0.163066,8.172383,3.664974,7.986563,-1.209666,9.588479,0.934850,-4.908628,2.563240,1.839687,-8.590590,7.021589,3.069306,-8.739226,-1.577129,2.742849,-6.987979,6.911935,4.949421,3.720329,1.060963,-8.134515,-2.235209,5.159650,-7.258740,6.376942,-9.066065,9.586221,7.210142,3.605200,0.527388,-0.359337,0.517181,1.774398,-0.278228,-9.396520,2.707692,-3.948754,-7.461209,-3.053983,-0.007274,3.609088,-5.261946,-1.833059,-9.051152,2.930644,7.895695,-9.911465,7.125283,0.884064,-8.651105,-8.615295,-3.579518,-9.960513,-3.313912,6.669378,-4.972842,4.151195,0.840670,8.709674,1.209253,0.826065,-1.169970,7.323063,-6.395547,3.801769,-1.779963,-1.918606,-3.056653,1.286570,2.719709,3.026965,-5.030986,9.715025,-8.243639,8.796778,9.930744,-8.241357,-8.991792,-6.364675,-7.504371,-5.520496,5.932988,0.862104,7.641721,-0.393498,7.571322,-8.609416,-9.091369,-6.985098,-2.779756,-9.680434,-2.136899,4.034544,-1.555656,5.968867,7.316064,0.866519,1.041868,-9.429659,-2.097998,4.145699,-3.525701,0.548060,6.975139,-7.629546,1.854260,-0.099137,3.076039,3.369333,5.543871,8.073808,-3.829746,8.946155,8.251301,-2.369675,-1.464785,-0.519534,0.021555,5.960389,1.831584,7.391276,-4.327586,-5.502169,9.518926,6.379868,5.992569,-0.901540,3.913309,4.974127,5.376213,-5.468434,1.662374,8.379187,-3.819216,-6.969405,-8.266005,1.104434,5.590243,-6.841620,8.538311,9.703221,-0.965166,-8.259208,8.175133,2.271975,8.224305,-1.339690,-8.531295,9.638625,-7.489890,-0.162832,7.927328,5.570301,3.625278,-8.737264,7.301978,0.273164,7.197128,6.552601,3.420303,6.793362,3.928070,-7.540327,0.702790,-3.905896,1.926355,-6.234595,-9.590360,1.977379,-3.458387,-8.570379,5.658784,0.894460,5.982643,8.883837,3.252012,5.127340,-5.983635,-3.079697,-8.082793,3.991827,1.994300,-5.103099,9.901524,-2.040935,0.895897,1.422623,-0.841591,9.623558,2.655595,2.838418,-5.706542,0.124507,-6.609520,-5.987338,0.905213,-9.256373,-5.499303,-5.325650,-2.862737,2.564687,-2.411573,-3.418518,8.474374,-4.852845,-3.468912,-1.102558,4.057241,1.895552,7.058913,-0.966452,9.204047,-7.949958,1.874711,6.678747,0.018725,-2.206099,4.809419,-3.845606,-8.202021,2.106059,-1.819810,6.075602,-0.376539,3.929958,8.124216,-4.872877,-2.518307,-9.103271,2.693112,1.532327,-8.935015,-2.298546,-8.042387,-3.302768,-9.521840,9.449467,6.796794,-9.971425,8.959764,-4.481356,9.227293,6.380356,8.293194,7.094498,9.436389,7.255689,-9.989692,1.842258,-9.464523,-0.052884,-0.782791,-5.788214,-1.938877,3.699791,-7.613457,-2.733948,-3.991313,-0.605391,8.561713,-2.411349,-4.822741,-1.851038,-6.147996,-2.769692,-8.619107,8.589314,-3.190919,-8.976895,-8.817663,4.667499,9.591934,-0.283893,3.513247,8.895931,-5.263959,-6.041790,2.258096,-3.030285,-5.772321,8.174023,3.819585,1.307257,-6.310459,-8.692504,3.442284,1.420853,-3.663967,-1.480617,-2.696067,-6.319476,-8.767548,-7.932680,-5.819146,0.697583,4.215418,5.190671,8.825236,-1.782472,-4.264086,-0.417575,-0.484184,5.412850,4.094715,4.844625,3.946940,-8.978532,-8.786758,-6.553494,3.336018,0.309786,-6.395111,1.631485,-2.793549,3.313123,5.767561,-5.353388,7.208432,-1.193304,-9.804737,5.209295,5.891982,0.734071,-2.503167,-4.264343,8.588966,-2.503790,-2.199288,6.427191,4.481354,-3.550670,-9.246630,3.051076,-4.712981,-4.509620,3.320043,-3.203735,6.680641,-9.892137,3.613943,-2.691904,-9.604853,-1.291034,-2.481891,9.316008,-0.900468,-3.786229,0.633658,0.559657,7.745263,-1.302216,3.690728,-4.446737,-7.717184,-7.035501,7.345758,-0.719087,0.782869,3.514611,-1.154607,1.783577,-8.408098,0.286680,8.586507,9.806487,-9.112363,2.894529,-3.565387,-6.642703,-4.970019,8.179497,3.081631,-4.228191,-9.292057,3.766721,-6.603840,-3.009962,-4.936417,-1.946068,-4.187258,6.858617,3.189534,-3.945979,-2.882606,-3.305076,4.489023,-3.925803,9.124133,6.846001,-5.266956,-6.707889,3.382855,8.315138,-3.584692,-5.183962,1.031521,1.730997,-8.089853,7.436367,5.066260,-9.197117,5.024535,5.653845,2.064209,-9.693497,7.613960,-0.939965,0.408268,2.851244,-2.786788,-2.466388,9.016745,-3.352595,1.413630,-4.372572,-2.178526,7.037133,1.369460,-5.815680,9.021091,7.903361,-6.077885,-0.554586,8.549509,6.778502,5.467657,-8.363587,-4.482398,-8.355755,-6.167989,-7.342542,6.253072,-2.544183,-5.778008,8.934339,3.498965,2.969028,4.051857,-7.090944,0.447960,-5.674179,8.771334,4.507919,8.245531,-9.790991,-6.592160,-1.156185,-3.467195,-4.212947,-0.952157,6.366891,-1.292685,6.304980,-5.244317,4.358226,9.389227,-4.094929,-9.487042,-1.159347,5.319165,1.985676,5.133590,-3.666874,-3.798514,5.909217,-0.845955,-6.797935,8.420639,-5.775829,6.420490,9.613776,1.407354,-9.922436,5.127101,-3.669673,7.504553,-3.972983,0.384958,-6.735310,5.044360,-5.816989,-4.272029,2.671480,-4.690950,0.862631,2.208878,8.025708,-3.735341,-6.250538,-4.471252,5.546232,-0.690187,8.409600,-4.725362,7.385266,4.058464,5.305297,-4.126146,9.393512,9.765599,9.442216,6.324803,0.538291,-3.765921,3.638554,-5.907441,-2.564903,-0.245509,4.423731,1.992983,-9.689012,-0.028218,7.026641,-2.090052,-0.038204,7.547060,-9.085209,-7.467634,0.068751,2.850661,2.569391,0.558902,-4.459526,3.240056,-5.701020,-5.009976,7.923308,-9.462860,-8.879771,5.390056,-2.253279,-8.284574,6.581707,5.250256,1.590352,5.558157,-9.908667,-4.626053,-6.701567,-1.293674,-5.965215,-5.943346,-0.264279,-0.843883,0.381408,9.549301,5.951171,8.381291,-8.227696,2.498800,9.138803,-0.939155,0.565574,0.253831,6.040469,-2.179119,-3.720763,4.367212,4.572593,6.018397,-4.194062,3.764981,-0.913769,-7.816534,5.652296,-9.943079,8.594218,-1.628655,3.716515,-2.987901,-9.192091,9.425255,5.354869,3.766647,-3.277239,-7.209153,5.762122,-3.634931,-6.327968,-9.020028,-5.741746,-2.716166,8.022111,-7.551357,-3.097027,9.242832,3.063728,-4.006017,-1.118579,-5.478389,-5.756816,0.289764,-5.825347,-1.509293,-5.551321,-0.410196,6.415933,-4.859226,0.464368,-1.440646,-5.967764,-7.007752,-3.739297,-0.548562,-7.424204,0.672345,2.608625,-3.657489,8.017922,-4.805131,1.421098,-0.345175,-6.162057,-8.739022,-7.406364,6.609945,-7.353280,-4.209298,-2.891595,6.831883,9.486087,-2.820593,3.149515,-9.325572,4.508184,0.114649,1.369554,5.641584,-2.242941,-2.227951,-0.141759,8.872324,0.355424,6.303340,2.994353,1.806127,-2.920487,5.717933,-4.040055,-7.030123,3.034513,8.596322,8.791471,-3.996905,-4.547703,-1.042232,-5.080314,2.283805,-1.675715,-6.485177,-0.058862,-4.455784,5.804360,-3.540649,-9.592940,1.532533,-1.194903,-0.042809,0.268013,-6.874629,9.267695,5.234352,-4.821436,-1.563267,1.563198,-3.291051,-7.835498,-1.467076,7.004140,8.252007,6.571574,2.064679,5.455703,-4.725061,-6.678200,-2.317652,2.612706,2.209255,6.263587,-6.942146,-1.974101,-9.425014,-0.674021,-0.651844,7.292653,1.562804,-7.652309,9.410910,-9.025127,8.944831,-9.947757,4.235173,0.827217,9.739572,-3.963429,5.053285,5.042751,7.069894,4.821071,7.116873,1.519814,1.766123,6.637830,-7.295186,-7.891847,-2.873253,9.815359,9.564873,-9.150563,9.926041,-2.781419,-1.732663,-8.470027,6.979452,5.774919,1.882121,5.559194,3.950588,6.151784,2.314085,7.226493,-1.321125,0.387452,6.956411,-9.205924,-4.211456,0.770593,-6.689204,-5.529061,1.381935,-3.715913,-2.018136,-0.797341,-3.466976,8.839555,3.649419,3.734315,-7.748121,5.322510,4.535908,-4.979379,0.560816,-5.661300,-4.643123,4.287704,-9.233420,-5.686134,-2.957511,-7.136565,-1.098175,-7.926845,-0.711672,6.783035,-8.751179,-4.995144,-2.153696,2.734621,8.910528,-7.319871,-5.334071,7.120357,9.056476,2.700861,-7.798022,8.530789,-2.579093,1.578885,7.070187,5.494979,7.352883,1.928740,-3.943986,7.333294,-4.828911,3.806453,-7.439960,-5.436761,-9.096931,8.799099,0.525443,8.608498,-2.313796,8.357894,2.531562,0.491316,-6.304147,7.967872,3.487096,-4.064824,-9.224009,-8.142654,5.054702,-2.768313,-6.522911,-5.355795,-1.251882,4.654647,-6.513721,3.063744,7.679640,0.141465,0.696047,5.808560,5.563603,5.818496,8.783676,-9.466307,-1.268075,8.881249,-1.300880,-6.177718,4.840504,9.651716,-1.775009,-9.948092,1.168602,-2.234742,-1.844479,2.585863,3.882140,1.586467,-5.503016,4.201783,-2.783361,-7.843882,8.859338,-4.243123,-9.323281,-2.722995,-7.987977,5.211610,-3.960538,-1.061481,9.990506,5.837019,-8.264642,1.319484,-3.309835,0.338257,3.812398,-4.558222,9.294353,-5.026638,-5.812150,-1.448545,9.105611,9.373456,8.900200,-9.899583,5.963148,-0.223353,-6.419624,0.818699,-2.203246,5.922767,-7.776101,-8.594249,-9.727707,9.201964,-4.513130,0.579618,7.712599,8.955367,4.715755,2.516852,6.420301,-2.456125,-4.084141,0.859868,2.685811,-9.447461,-6.150697,9.948483,1.122416,6.191115,-0.525549,5.142463,0.274826,5.214950,-5.232965,-1.283056,-8.682446,9.755509,-6.362917,7.675792,-7.896104,4.621128,7.230930,3.602042,5.303086,-3.592376,-5.410138,-7.207965,-3.903295,-3.243756,-5.881898,6.507702,5.032830,1.082919,3.768308,5.719606,7.151012,-7.859220,6.338073,0.159832,-3.640067,8.793156,-4.415278,4.510774,4.129802,0.638705,-9.744677,-3.906263,-2.995386,3.471668,-0.659018,9.573831,4.105394,-0.114163,8.156320,7.295114,5.401725,-7.576756,-4.911116,5.905243,1.703801,-8.219799,2.752224,-9.713833,-4.820842,2.522435,-7.699472,-9.001946,-4.538743,5.793473,2.185938,5.292652,3.496685,-8.540787,2.214984,0.606956,-8.449615,-7.164047,-8.122017,0.474502,-7.626495,8.932374,1.993218,-0.021090,8.027715,-0.575877,7.997557,1.058469,6.968622,-3.954196,1.501322,-2.202083,1.172632,9.953837,3.373049,9.280605,5.202718,-8.986527,-6.999166,-8.813039,-3.426282,-8.125706,1.287446,-3.860215,4.370103,5.646416,-9.080721,5.721211,9.666821,2.152908,7.046980,-5.815175,-6.196582,-4.356282,-6.610550,-1.948401,6.274528,-8.051673,-0.620605,4.656325,8.739756,6.202458,-4.940747,-1.222184,2.767691,-4.593802,-7.439682,-0.032036,-1.922098,8.506554,7.381400,1.684709,9.869010,9.462846,2.405605,5.607001,-9.556520,-8.447201,2.295425,-5.179161,0.987538,-4.096371,0.234363,-0.432900,7.978109,-7.263376,0.394455,5.415789,2.823927,-0.830850,3.563817,-0.854848,-5.734592,9.955496,9.012844,5.020679,-0.931691,-5.623806,-7.278281,1.099573,-5.244191,-1.603865,-3.542107,-0.503365,7.704809,-0.823295,8.734506,-0.507182,3.997529,8.171478,7.248507,9.543144,-8.233616,7.912538,-6.806564,-0.086213,2.580746,-3.874438,-5.436788,4.110037,-2.940261,5.404925,-9.979331,3.865127,9.538647,-2.956164,8.471623,-9.154716,8.619657,-7.832178,0.038580,4.115651,-4.271364,-5.560047,-5.947055,-4.432183,9.308093,-3.185618,0.539474,6.608222,8.714936,3.888313,-6.542673,-9.958806,3.491203,8.880273,-9.445239,2.263133,0.974117,6.286848,-3.775151,-4.076477,9.224759,1.390121,-7.766234,4.037265,5.972223,9.511270,9.310840,5.441091,-9.090245,1.817690,5.180126,4.882302,-2.697969,5.581535,-8.263287,-0.579519,-1.452508,-9.443973,-6.618886,-2.162104,-3.687467,3.813558,-1.049264,2.568025,-8.408892,5.096526,5.287330,-7.928773,3.959200,-3.753805,6.308204,-5.535471,8.851814,-3.290365,-8.642327,9.726190,-2.684426,-4.534344,3.557854,-3.558095,-9.452690,-9.929273,-8.836256,5.806827,-3.352315,-1.525982,-0.536825,9.245508,6.381177,-6.434497,7.311487,2.430853,-4.416679,-6.054336,4.264863,6.581785,-1.121657,2.277542,-9.891340,-9.280158,5.808875,-9.886343,7.364968,4.343122,-9.065002,4.166912,2.490935,2.171915,-1.861636,1.634451,-2.587484,-8.798954,-7.810937,-6.747997,-5.588217,8.497355,1.313775,-1.484653,-5.268277,1.405584,9.628699,-2.027873,7.465033,-9.442045,8.375448,8.715314,6.427550,-9.829404,-9.482493,-4.617126,9.026044,-8.877672,-8.872959,-0.534168,-8.286731,1.317105,-0.287094,-9.354203,2.525962,1.846061,-6.376778,9.915797,-7.163212,-6.718366,-1.633779,-7.700877,-5.862870,-3.907510,1.694423,2.814388,-9.989426,1.231570,-7.079456,5.353309,-8.638073,-3.018244,7.232791,-1.308881,0.293223,-6.175581,-5.190490,-9.766251,9.852305,1.783650,2.329762,-9.663419,5.878413,-3.031988,6.160881,9.227246,-8.175206,6.029814,8.588170,-7.817577,-9.615258,-6.642775,8.964856,5.478739,9.040268,6.273540,-0.471338,8.206242,2.754884,4.621802,1.411738,-9.390485,0.247613,1.473796,-7.181505,3.737460,0.755393,4.017868,-4.615301,3.010721,9.711414,-7.272574,7.182902,6.141462,8.536693,1.875822,7.870209,6.131373,4.011721,-5.899269,-7.987262,-3.807966,5.191193,-1.905322,4.217508,-6.138846,-3.354382,-0.743876,-1.590510,-7.073507,-7.651449,-5.054966,1.422575,-1.362728,-9.727948,-4.183447,8.420497,-7.119824,-6.183169,-8.501574,0.453475,-3.641670,-6.263603,4.035287,-9.411491,-3.281860,5.410241,1.245644,-7.739114,-1.398105,-0.385471,2.886141,1.328389,-2.377868,-3.474804,0.281340,5.202570,6.376606,-8.458024,-8.650944,-1.914101,-3.906340,5.055387,2.083773,9.130885,9.117239,-5.073540,1.616560,-4.734743,-2.016638,5.681309,-6.404314,3.942925,-4.050585,-3.271263,9.796872,6.931109,0.374664,3.530615,4.332873,-1.885277,-0.446425,2.524376,-2.617088,4.579516,8.766310,2.642755,-9.110313,2.775799,-4.931436,9.802607,5.620622,2.948361,-2.264467,2.712243,-1.720945,-5.310340,-7.792124,-9.822519,3.772784,8.432032,-0.095600,3.378391,-6.352003,7.746841,-7.247731,-4.112513,-7.480846,-3.726291,-5.790130,-5.855522,6.889688,4.714758,-7.998079,6.224997,7.790274,-0.526390,3.396024,-5.177140,2.988201,-0.609673,3.197942,1.433617,5.512906,-5.698259,4.904631,-3.722159,2.253841,-2.322725,3.626676,3.406962,7.908112,8.310396,9.060337,-7.399260,6.209721,5.344123,0.913207,-1.282793,-7.476817,-2.390764,8.391340,0.672135,-3.939069,3.795163,9.791857,-0.815850,-0.690311,5.879643,-1.245622,-3.238372,-0.513034,-1.287388,-6.397529,-2.054950,8.779402,-8.484168,1.925838,9.803992,-0.611163,-7.761033,3.585370,-0.102172,-4.540528,-0.123452,1.594821,-0.922421,-4.502035,3.226390,-7.476054,4.962274,-6.339686,-0.360251,3.732518,3.584056,-5.353264,3.498248,-8.676427,-0.327694,4.197628,1.550050,1.516050,4.375883,-1.887705,9.381990,-1.633380,-3.289514,-7.846020,5.334995,-5.903205,4.532119,-2.854545,1.005551,-7.742172,9.661213,-7.645737,-4.637602,-2.301162,0.514572,-5.467212,1.643053,6.889105,7.753827,4.716988,-2.219055,3.073556,-3.127988,-1.188396,4.511251,2.893694,4.886194,1.275963,-8.541684,7.634182,4.994331,-2.081236,-5.267447,-8.100963,0.504712,-4.619891,-5.167495,-7.361335,5.715408,-7.247724,4.186375,2.297482,9.649746,3.500726,9.377060,3.020080,-8.765903,6.993837,4.118449,7.210674,9.300715,-3.923801,2.956530,8.849585,-7.584580,3.603022,7.521743,-6.297617,-9.979914,-4.523957,-8.314723,-1.385023,7.296667,4.055544,0.311117,-6.899190,7.158300,-6.269761,7.311650,1.362514,0.191993,7.697562,-6.017100,5.218930,3.233977,-8.216231,9.792037,8.620469,-5.098062,-8.314616,2.736431,1.733237,2.459742,6.986224,6.973418,-0.096593,-3.529290,2.164768,9.458443,1.023285,1.308322,-3.515312,-0.146675,3.777039,8.333724,-7.120180,-0.303202,7.947290,-4.646926,-1.570009,9.426447,-9.616832,3.918169,-5.854552,7.196212,8.858514,6.846700,5.362848,2.866294,4.796818,-3.788139,7.108036,5.530981,9.323969,-2.201446,4.949388,-4.184139,9.032146,2.949978,1.179130,3.854829,0.314755,-7.670927,-6.812251,-3.824091,-0.106928,9.858154], dtype = "float32")#candidate|2598|(1584,)|const|float32
var_2599 = relay.var("var_2599", dtype = "float32", shape = (1, 12))#candidate|2599|(1, 12)|var|float32
call_2597 = relay.TupleGetItem(func_2148_call(relay.reshape(const_2598.astype('float32'), [9, 11, 16]), relay.reshape(const_2598.astype('float32'), [9, 11, 16]), relay.reshape(var_2599.astype('float32'), [12,]), ), 2)
call_2600 = relay.TupleGetItem(func_2152_call(relay.reshape(const_2598.astype('float32'), [9, 11, 16]), relay.reshape(const_2598.astype('float32'), [9, 11, 16]), relay.reshape(var_2599.astype('float32'), [12,]), ), 2)
func_852_call = mod.get_global_var('func_852')
func_856_call = mutated_mod.get_global_var('func_856')
var_2606 = relay.var("var_2606", dtype = "bool", shape = (1274,))#candidate|2606|(1274,)|var|bool
call_2605 = relay.TupleGetItem(func_852_call(relay.reshape(var_2606.astype('bool'), [1274,]), relay.reshape(const_2535.astype('float64'), [144,]), ), 4)
call_2607 = relay.TupleGetItem(func_856_call(relay.reshape(var_2606.astype('bool'), [1274,]), relay.reshape(const_2535.astype('float64'), [144,]), ), 4)
func_852_call = mod.get_global_var('func_852')
func_856_call = mutated_mod.get_global_var('func_856')
call_2634 = relay.TupleGetItem(func_852_call(relay.reshape(var_2606.astype('bool'), [1274,]), relay.reshape(const_2535.astype('float64'), [144,]), ), 7)
call_2635 = relay.TupleGetItem(func_856_call(relay.reshape(var_2606.astype('bool'), [1274,]), relay.reshape(const_2535.astype('float64'), [144,]), ), 7)
output = relay.Tuple([call_2534,const_2535,var_2536,bop_2543,uop_2578,call_2597,const_2598,var_2599,call_2605,var_2606,call_2634,])
output2 = relay.Tuple([call_2537,const_2535,var_2536,bop_2543,uop_2578,call_2600,const_2598,var_2599,call_2607,var_2606,call_2635,])
func_2637 = relay.Function([var_2531,var_2536,var_2599,var_2606,], output)
mod['func_2637'] = func_2637
mod = relay.transform.InferType()(mod)
mutated_mod['func_2637'] = func_2637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2637_call = mutated_mod.get_global_var('func_2637')
var_2639 = relay.var("var_2639", dtype = "float32", shape = (8, 9, 11))#candidate|2639|(8, 9, 11)|var|float32
var_2640 = relay.var("var_2640", dtype = "float64", shape = (2160,))#candidate|2640|(2160,)|var|float64
var_2641 = relay.var("var_2641", dtype = "float32", shape = (1, 12))#candidate|2641|(1, 12)|var|float32
var_2642 = relay.var("var_2642", dtype = "bool", shape = (1274,))#candidate|2642|(1274,)|var|bool
call_2638 = func_2637_call(var_2639,var_2640,var_2641,var_2642,)
output = call_2638
func_2643 = relay.Function([var_2639,var_2640,var_2641,var_2642,], output)
mutated_mod['func_2643'] = func_2643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2747 = relay.var("var_2747", dtype = "int16", shape = (3, 13, 12))#candidate|2747|(3, 13, 12)|var|int16
var_2748 = relay.var("var_2748", dtype = "int16", shape = (3, 13, 12))#candidate|2748|(3, 13, 12)|var|int16
bop_2749 = relay.add(var_2747.astype('int16'), relay.reshape(var_2748.astype('int16'), relay.shape_of(var_2747))) # shape=(3, 13, 12)
output = bop_2749
output2 = bop_2749
func_2754 = relay.Function([var_2747,var_2748,], output)
mod['func_2754'] = func_2754
mod = relay.transform.InferType()(mod)
var_2755 = relay.var("var_2755", dtype = "int16", shape = (3, 13, 12))#candidate|2755|(3, 13, 12)|var|int16
var_2756 = relay.var("var_2756", dtype = "int16", shape = (3, 13, 12))#candidate|2756|(3, 13, 12)|var|int16
output = func_2754(var_2755,var_2756,)
func_2757 = relay.Function([var_2755,var_2756,], output)
mutated_mod['func_2757'] = func_2757
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2832 = relay.const([[[-5.483585,-3.350282,6.963340,-6.051473,3.473018,1.767098,-7.141471,-8.360252,-6.046644],[2.588870,-6.942465,-2.374358,0.946349,8.026765,-3.266546,-4.994907,5.722016,3.520474],[5.405331,-1.850734,-2.400383,8.780192,-8.373133,-0.088774,-5.192206,8.610635,-5.581493],[-3.900862,-6.608480,-8.549184,-5.835563,7.607313,-2.075846,-9.678837,-7.327583,-4.226894]],[[7.204915,-2.004469,8.288342,-1.391236,-0.789192,3.517326,6.875996,9.400968,3.727758],[-1.947961,-7.849586,8.417782,8.717020,7.308381,-6.021254,-6.021115,6.564688,-8.261198],[9.380439,-9.474561,-5.543161,-1.132835,-7.716394,2.486795,-0.898737,2.805024,3.917365],[8.700073,0.974916,-5.078717,-4.330849,4.304608,3.167717,-5.462243,-5.161523,0.978343]],[[-7.509733,-3.933948,3.959918,-7.386629,-9.668971,-4.463930,3.107591,-2.717008,-4.452962],[-5.301573,7.346682,-7.577420,6.957364,0.034801,-7.731876,-3.391519,7.033550,1.727369],[-7.464032,-1.714705,5.963443,-5.034260,-9.600362,1.937978,-7.923957,5.926531,5.483110],[-2.896463,-4.550311,-6.204251,-7.933272,-4.051015,-7.829503,-4.599073,6.495165,4.179403]],[[-9.674681,2.121188,-1.608271,0.211194,8.885567,-5.514147,8.971135,0.354087,-5.366962],[-6.637570,7.107821,-9.083278,-6.522309,-2.491694,9.591474,-2.304043,-0.715669,-9.154429],[4.120151,2.255010,-5.694163,0.755314,-8.761715,-8.967901,1.880403,-8.403787,3.231184],[-3.536766,6.716705,9.486016,-3.946520,-9.569610,-0.522706,8.886876,2.689629,-2.370497]],[[-3.737825,1.744954,-2.669664,1.572758,-4.289648,-2.812807,5.104455,3.672508,-6.218966],[4.920854,-4.851486,9.921997,9.634615,-7.609952,2.019482,-4.933649,1.813103,-5.052605],[5.473163,2.795989,6.034601,6.615010,-7.983291,-1.434880,-0.987716,6.404177,2.639531],[0.106167,6.778575,0.691562,-3.493677,-7.262268,2.309345,7.002054,-8.875541,-0.273345]],[[1.367475,-3.210128,-5.527548,-8.099910,5.671484,-7.988751,-0.064143,7.408320,4.004994],[-8.525055,-8.655624,9.530131,6.890568,0.318588,5.443657,-0.290307,0.703799,-5.027001],[6.294685,-0.193322,-7.692323,0.217250,-2.875575,-8.786529,-3.085666,8.665750,0.778444],[-7.325787,-1.487996,9.312560,-8.683891,-3.449815,-6.549407,3.406780,5.839298,-2.974945]],[[-0.587294,-2.365859,-3.175573,0.222677,6.605990,-3.566818,3.663288,5.290057,-9.945533],[-1.263705,-3.125519,-0.090707,3.548385,-2.804103,-2.386441,7.640092,0.125805,7.267471],[-7.426534,-4.565859,-8.442112,0.455391,6.815315,1.394067,8.317327,-7.183006,-9.301460],[-6.781242,9.252585,-8.857340,-9.466993,-5.296914,1.747795,9.328206,-8.005788,7.614236]],[[-7.454094,0.458518,4.615526,4.780708,-8.107483,6.183199,2.517885,-6.645929,-4.746897],[-3.456786,-8.014761,-7.322564,-7.821510,-8.724346,5.411421,7.088476,-4.626064,-0.727837],[4.161671,-8.647767,5.642655,-7.033628,2.439776,9.066927,3.379312,-0.955410,5.669004],[7.394133,6.893988,-6.930434,5.331501,-0.602311,-3.401144,-5.204219,8.038970,6.637866]],[[-0.180580,4.866864,2.619205,5.198477,-5.286920,-6.879369,3.850981,6.425586,6.139552],[1.965825,-0.646928,-3.553304,-5.835110,-2.921558,0.955662,3.755828,-8.821005,-2.711459],[7.864601,-9.792916,6.436576,9.860773,4.683784,8.717117,3.175972,3.008827,8.221924],[-3.549320,-4.289665,9.874657,9.774406,4.454559,2.362747,8.088556,-7.007596,-4.412484]]], dtype = "float64")#candidate|2832|(9, 4, 9)|const|float64
uop_2833 = relay.atanh(const_2832.astype('float64')) # shape=(9, 4, 9)
func_1769_call = mod.get_global_var('func_1769')
func_1773_call = mutated_mod.get_global_var('func_1773')
const_2842 = relay.const([-5,-9,6,9,4,-3,-5,2,-9,6,-2,-8,-9,-7,7,-7,-2,1,-6,-1,-10,-7,-3,2,3,-1,8,1,4,10,7,4,-4,7,-5,-10,-5,1,-5,9,3,-4,-9,8,-4,5,-8,1,7,-3,6,-9,-8,10,-5,1,9,1,-2,-1,9,-8,-8,10,4,-6,-7,-5,5,-8,4,-8,-9,-1,10,-7,-10,8,1,1,-1,8,-4,-5,-8,-1,4,-5,8,4,-10,9,-4,-7,-4,2,9,-5,5,-4,-5,-5,-4,-4,6,2,-8,7,-7,9,-5,1,3,7,-8,-10,5,1,-4,2,10,-10,-5,2,-1,7,2,-10,-6,4,9,4,-7,-5,-10,5,-3,10,-9,-1,-1,-6,6,9,-2,-3,-7,7,4,5,9,3,4,-1,4,-3,10,-10,-5,8,4,-10,-10,4,-1,7,-10,3,4,7,3,4,7,-2,7,-2,3,3,-1,9,-10,1,9,-4,-7,2,10,5,-4,-2,7,3,7,3,-6,9,1,6,5,2,2,2,-1,-3,-4,-5,10,10,5,5,-8,-7,-6,8,6,3,-3,2,-4,9,2,10,2,-9,-5,-10,1,-1,-2,-10,8,-6,2,3,5,-5,-5,-10,7,8,6,-5,7,7,7,-8,3,-6,-4,-3,10,-7,-5,4,6,3,9,-10,8,-6,5,1,-7,-4,-7,-1,7,4,3,-3,1,1,-6,6,8,-8,-7,-2,-6,-7,-3,10,6,-1,3,8,-10,3,1,9,-1,-2,-5,-3,1,6,8,-4,-1,3,-9,-5,1,-4,-7,-2,9,9,8,-9,-3,5,-2,-6,-5,4,-2,-4,8,5,-2,-6,-1,-9,6,-10,-2,10,3,4,7,-2,10,3,-6,5,-5,9,5,-5,-5,-10,9,10,6,-9,-3,-5,9,-4,6,2,-10,5,10,-6,4,-1,-6,4,6,-6,-6,-3,8,-9,7,-6,-2,-4,-3,-7,-6,2,9,5,-9,6,3,10,7,8,9,-2,-8,-3,-7,-10,1,7,5,-7,3,2,3,1,-1,5,-4,-3,3,5,-8,-3,4,9,1,6,9,2,-9,-1,2,10,-3,10,9,-6,-8,-6,-10,-4,10,7,-9,1,-3,-8,-8,-3,-1,9,-8,-9,-7,-3,-9,-9,8,-10,8,4,-4,6,-1,5,4,4,-2,-10,-7,7,1,-8,-4,5,10,3,2,-5,8,6,5,-6,4,-5,1,10,-10,1,5,-7,-7,-8,-10,5,5,2,3,7,5,10,-6,8,-9,9,8,10,6,6,10,-6,3,3,5,5,3,-8,8,-2,-8,2,7,-1,7,-9,-9,2,-2,-9,-6,-8,4,8,1,-10,3,5,3,4,-3,8,7,-5,-4,5,3,-9,-9,-10,6,-9,3,2,-10,-7,-7,-7,3,-3,-6,-7,4,-7,-10,5,-8,-9,-10,6,-5,-3,8,-9,1,5,2,8,7,-1,2,-7,10,-1,6,8,-2,6,-4,8,10,-5,-7,-10,-10,-1,5,-3,3,3,5,1,-6,-5,3,-6,-1,7,3,2,6,-8,-3,-6,-6,6,-2,-7,5,9,-9,10,5,8,5,-3,-7,-2,1,9,-8,-9,3,1,9,-5,-4,-8,2,-8,10,-8,10,7,9,-9,2,-7,5,10,-7,-4,-10,9,10,9,-9,-7,6,-2,-10,1,-10,-7,-6,1,-4,4,9,5,3,9,2,2,-2,2,7,5,2,4,-9,-3,10,-8,-3,8,9,-9,-5,-9,-5,-8,4,2,5,6,-1,-8,8,-9,9,8,-7,8,-8,-9,-6,7,-2,6,5,1,10,-8,-5,9,4,-3,6,3,6,7,10,-2,3,10,-1,-5,-2,1,-7,5,-10,4,-8,10,-8,-6,2,-3,-9,4,-3,10,9,-7,2,2,8,9,-3,-2,5,1,7,2,-4,5,-5,-7,6,5,-5,3,-2,-3,-1,-6,-2,-6,1,-6,-4,4,-6,6,-6,4,-7,-7,9,-4,3,-7,-6,-6,10,-4,5,-6,1,-4,4,-8,-5,1,-5,2,-4,-4,1,9,-4,-6,1,9,-5,-8,-1,1,3,9,9,-3,10,7,-7,-3,-9,9,10,-3,3,5,10,-1,9,9,1,3,1,-5,6,1,-6,5,-10,-2,-2,8,-4,-4,-9,3,5,5,5,4,7,-7,8,10,2,3,-8,5,10,-5,2,-10,5,5,-7,-3,6,9,4,4,-1,2,-7,-3,8,-7,7,1,7,2,-7,-10,7,-9,-9,10,1,1,-1,-7,2,3,-5,1,-10,-6,10,-2,-5,9,-5,8,-1,5,5,2,10,-9,10,7,-5,-1,-8], dtype = "int64")#candidate|2842|(891,)|const|int64
call_2841 = relay.TupleGetItem(func_1769_call(relay.reshape(const_2842.astype('int64'), [11, 9, 9]), relay.reshape(const_2842.astype('int64'), [11, 9, 9]), ), 0)
call_2843 = relay.TupleGetItem(func_1773_call(relay.reshape(const_2842.astype('int64'), [11, 9, 9]), relay.reshape(const_2842.astype('int64'), [11, 9, 9]), ), 0)
output = relay.Tuple([uop_2833,call_2841,const_2842,])
output2 = relay.Tuple([uop_2833,call_2843,const_2842,])
func_2844 = relay.Function([], output)
mod['func_2844'] = func_2844
mod = relay.transform.InferType()(mod)
mutated_mod['func_2844'] = func_2844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2844_call = mutated_mod.get_global_var('func_2844')
call_2845 = func_2844_call()
output = call_2845
func_2846 = relay.Function([], output)
mutated_mod['func_2846'] = func_2846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2852 = relay.var("var_2852", dtype = "uint64", shape = ())#candidate|2852|()|var|uint64
var_2853 = relay.var("var_2853", dtype = "uint64", shape = (6, 13, 7))#candidate|2853|(6, 13, 7)|var|uint64
bop_2854 = relay.bitwise_and(var_2852.astype('uint64'), var_2853.astype('uint64')) # shape=(6, 13, 7)
output = bop_2854
output2 = bop_2854
func_2857 = relay.Function([var_2852,var_2853,], output)
mod['func_2857'] = func_2857
mod = relay.transform.InferType()(mod)
mutated_mod['func_2857'] = func_2857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2857_call = mutated_mod.get_global_var('func_2857')
var_2859 = relay.var("var_2859", dtype = "uint64", shape = ())#candidate|2859|()|var|uint64
var_2860 = relay.var("var_2860", dtype = "uint64", shape = (6, 13, 7))#candidate|2860|(6, 13, 7)|var|uint64
call_2858 = func_2857_call(var_2859,var_2860,)
output = call_2858
func_2861 = relay.Function([var_2859,var_2860,], output)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2844_call = mod.get_global_var('func_2844')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_2881 = relay.TupleGetItem(func_2844_call(), 1)
call_2882 = relay.TupleGetItem(func_2846_call(), 1)
const_2884 = relay.const([[[-1,-10,-6,-1,6,2,4,-8,-1],[-1,7,6,7,5,7,9,-10,-8],[8,9,-5,-1,5,5,10,-10,3],[9,3,6,-2,8,6,10,5,7],[10,-10,9,-1,-9,-6,-9,4,8],[10,7,-2,3,-8,-3,6,-4,8],[-2,-2,2,-5,4,-10,9,2,9],[-2,8,-9,-4,-2,-3,-2,9,-6],[-6,1,10,2,-3,-9,10,5,9]],[[7,-2,4,9,-2,1,-1,-1,-9],[-6,-2,5,3,3,3,5,7,-1],[5,-6,2,7,6,-6,10,-6,-2],[6,-8,5,-10,3,8,-8,-8,1],[4,3,-7,5,-10,-4,5,8,-8],[9,3,-7,8,5,-2,5,-6,5],[7,5,-2,10,6,3,10,3,-3],[-8,8,8,2,3,2,-3,10,4],[6,1,1,7,-5,-9,-1,-1,10]],[[8,-3,-2,-10,1,5,-2,-1,-3],[9,6,-10,-4,1,1,-5,5,-9],[2,-4,-1,-8,9,8,-2,4,10],[-2,-7,8,-6,5,2,10,5,-6],[-4,1,-4,7,-3,5,-5,6,1],[9,10,1,-10,-5,-5,-5,-5,-2],[3,-6,-10,-2,9,-8,3,-10,-1],[-4,-1,10,-9,-5,-9,-5,8,-1],[-2,5,10,-2,3,7,-10,-9,-1]],[[9,3,-4,2,-7,1,-1,2,4],[3,8,-7,-10,-7,10,-7,7,4],[4,-3,8,-2,8,-7,7,-10,6],[1,8,4,-5,-8,2,-6,-8,9],[6,7,7,-8,-5,-1,-10,6,10],[6,4,-8,6,5,6,3,5,-5],[5,-7,6,9,10,-3,-7,6,3],[-8,-9,-6,-6,6,-1,6,-6,4],[2,-7,-1,3,-7,9,-4,-2,9]],[[9,-9,9,-7,5,7,-5,-3,1],[1,1,-4,2,9,-2,-4,-6,-5],[-4,-1,6,-10,-6,3,8,3,2],[10,-7,9,-9,-8,7,-1,8,4],[9,4,7,-5,9,-4,5,-6,5],[2,10,9,5,-2,2,-4,-10,-6],[-4,-1,9,8,9,8,1,6,-10],[-1,-4,8,9,-7,-10,3,4,-9],[-9,-10,-2,2,8,5,4,-5,-8]],[[-6,-4,-5,6,8,-4,-4,5,1],[2,-3,3,10,-5,-6,7,2,-5],[-6,5,-2,3,9,-1,7,6,-6],[7,4,3,7,-2,-1,-3,9,-1],[6,6,-3,-8,10,10,10,-4,-9],[6,8,4,6,-8,-5,3,-4,7],[-6,8,8,4,5,-4,-8,2,-8],[-7,4,-1,-6,-10,-5,-6,5,-9],[-1,-3,-4,1,-7,7,-9,-4,-10]],[[2,9,-4,1,7,5,-9,10,1],[10,5,-6,5,-7,-10,1,-2,-4],[-5,10,2,-8,10,-4,-4,-4,10],[-3,7,3,8,-9,-6,-9,-1,3],[-4,6,-10,6,3,-7,2,-1,2],[8,9,10,-2,6,-10,7,-1,10],[3,7,6,10,-4,8,-4,5,4],[9,-8,1,6,-4,1,10,9,-10],[3,-6,-9,-4,3,-6,-7,-4,10]],[[3,-3,4,-2,-6,4,-8,5,4],[8,-7,-7,7,10,9,7,7,-8],[4,5,-10,5,6,2,4,-9,-3],[7,-10,-3,6,-10,2,4,-7,5],[8,7,-1,-3,1,7,-8,-3,-1],[7,8,10,7,-5,5,-4,-3,-8],[-10,-9,-4,-6,-1,3,7,9,9],[-5,-7,1,-4,6,5,-10,-6,-9],[-7,5,4,-2,-9,-4,2,7,4]],[[3,2,-3,-5,6,-4,-4,-8,9],[-6,-2,-1,5,8,5,7,-7,-9],[-10,5,-8,10,10,-8,1,9,8],[10,5,5,-9,10,-3,-8,5,-8],[-4,4,8,2,-7,3,-1,1,8],[-6,8,4,-4,6,-10,4,-5,-8],[2,10,-3,7,5,-9,-5,1,8],[-7,-10,6,9,3,-10,-7,-3,4],[-2,-9,10,-10,-1,-10,-8,5,-4]],[[-7,-3,-7,1,7,-2,1,3,-9],[-8,-2,3,9,-1,-1,-7,7,9],[5,7,6,-5,1,7,-3,-2,3],[6,-7,8,1,-6,-7,10,7,-6],[-7,1,8,-2,10,-7,9,7,-2],[6,10,10,1,1,-9,2,-7,8],[9,-10,3,-4,-3,-10,5,8,2],[-5,8,-10,5,5,-2,-1,2,-2],[1,7,6,-2,-5,-6,-6,9,-1]],[[3,8,-9,-10,3,-4,-6,2,2],[3,1,-2,-7,10,-4,-3,-6,-6],[5,-7,-9,5,5,-1,7,9,-3],[7,-1,6,-7,-4,-1,-9,-8,5],[7,-7,9,-9,3,6,-9,8,9],[7,10,-10,4,7,8,-1,2,-7],[-5,9,6,-6,6,7,5,-3,5],[-7,-5,-1,6,7,-2,-1,3,-5],[-7,6,-4,-1,6,5,5,10,-8]]], dtype = "int64")#candidate|2884|(11, 9, 9)|const|int64
bop_2885 = relay.multiply(call_2881.astype('float64'), relay.reshape(const_2884.astype('float64'), relay.shape_of(call_2881))) # shape=(11, 9, 9)
bop_2888 = relay.multiply(call_2882.astype('float64'), relay.reshape(const_2884.astype('float64'), relay.shape_of(call_2882))) # shape=(11, 9, 9)
output = relay.Tuple([bop_2885,])
output2 = relay.Tuple([bop_2888,])
func_2906 = relay.Function([], output)
mod['func_2906'] = func_2906
mod = relay.transform.InferType()(mod)
output = func_2906()
func_2907 = relay.Function([], output)
mutated_mod['func_2907'] = func_2907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2906_call = mod.get_global_var('func_2906')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_2916 = relay.TupleGetItem(func_2906_call(), 0)
call_2917 = relay.TupleGetItem(func_2907_call(), 0)
uop_2925 = relay.log10(call_2916.astype('float64')) # shape=(11, 9, 9)
uop_2927 = relay.log10(call_2917.astype('float64')) # shape=(11, 9, 9)
output = relay.Tuple([uop_2925,])
output2 = relay.Tuple([uop_2927,])
func_2942 = relay.Function([], output)
mod['func_2942'] = func_2942
mod = relay.transform.InferType()(mod)
output = func_2942()
func_2943 = relay.Function([], output)
mutated_mod['func_2943'] = func_2943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mod.get_global_var('func_2942')
func_2943_call = mutated_mod.get_global_var('func_2943')
call_2944 = relay.TupleGetItem(func_2942_call(), 0)
call_2945 = relay.TupleGetItem(func_2943_call(), 0)
func_1341_call = mod.get_global_var('func_1341')
func_1344_call = mutated_mod.get_global_var('func_1344')
const_2953 = relay.const([[5,-1,9,-5,3,-6,9,-7,-4,4,-10,6,6,4,2,-5,1,-10,-9,7,3,10,5,-8],[-8,-6,-1,4,4,9,8,-3,-1,1,-7,3,4,-3,1,-7,6,-9,6,6,3,-8,-1,-2],[-5,6,1,-4,-3,1,-10,2,2,5,-5,7,-8,1,-7,6,5,-4,1,1,-6,-7,1,-4],[-3,10,-2,7,2,-1,-2,1,-1,6,-4,8,-9,6,-6,-2,9,-6,9,-3,5,1,3,7],[-6,7,-7,-10,2,6,-8,9,-10,-10,-10,3,-9,3,8,-7,2,-6,1,-5,4,2,-2,9],[6,5,2,-3,2,-2,-5,-7,-5,6,-9,-10,4,4,3,-10,-5,-8,2,-10,5,-7,3,9],[-8,-3,-8,9,4,-10,9,9,6,2,7,4,-4,-4,6,-4,-8,1,-9,-8,6,-2,-9,-10],[6,-4,-2,5,-9,4,2,-2,-6,-6,5,-9,-3,7,-2,8,-7,-1,1,6,6,-9,-9,-1],[-4,-1,3,10,-1,-10,4,-10,-2,-9,-10,-5,6,-7,5,-9,4,-7,-9,5,-4,2,-6,-8],[-7,3,3,-4,-4,-3,8,7,3,1,3,-2,2,6,8,6,2,-3,-7,-3,9,-9,9,10],[-2,-5,-10,1,-3,-10,10,8,-7,-6,-9,7,-6,-4,-6,10,-7,2,-4,-9,-1,-9,9,4],[2,2,10,9,10,2,10,-2,7,-6,9,7,8,-5,-7,5,-9,-1,10,5,-5,-4,9,4],[1,4,-7,2,-8,4,-5,5,8,5,7,-6,8,-9,-5,2,3,8,8,-7,6,-4,-10,7],[4,-6,1,-3,-1,8,5,3,-10,10,-10,6,8,-9,6,8,7,1,5,8,8,3,-8,1],[-7,5,10,5,9,8,-9,7,2,3,6,5,-9,-7,-7,2,3,-1,-9,3,-2,5,-9,7],[-4,9,4,-4,-6,-8,3,-7,7,9,6,-6,-3,10,-5,1,7,-9,-6,2,6,-5,1,-5],[-1,6,6,-6,1,9,10,5,-2,8,9,-9,3,-8,-5,-5,-9,4,1,2,-5,-9,-1,-4],[-3,10,-6,1,-5,4,-1,-6,9,4,9,3,-9,9,-9,2,7,3,2,-3,-2,7,-5,2],[5,4,-3,8,-1,1,-1,-1,-6,-2,-10,-7,1,6,1,1,-5,9,-4,-10,-5,-5,6,7],[-2,-4,5,5,-7,5,10,-3,-3,-2,1,-9,5,-7,10,6,-4,-4,-2,-6,-1,-9,8,-5],[6,7,-3,8,-2,10,-8,4,7,-2,9,9,10,1,2,9,5,-7,-4,-6,-9,-8,5,8],[2,-10,-9,-2,-7,-7,1,8,3,6,-2,4,1,10,-4,7,-10,8,5,8,-5,2,-4,5],[10,5,-6,-5,10,4,-4,1,-7,3,1,6,8,-1,2,10,-7,-4,-3,-9,-4,7,3,2],[-9,2,4,-5,7,5,-3,-9,-9,3,-4,2,-7,-6,1,10,10,-9,1,-9,1,6,-10,-4],[2,8,10,-3,-3,7,6,-3,9,-5,7,7,-9,-1,1,-5,-1,-8,4,-9,-10,-8,-2,-5],[2,-1,3,6,4,10,-1,8,-9,-4,-8,8,9,-6,-7,-4,-10,-10,5,-6,5,4,-2,-9],[-1,-4,8,-8,-7,8,5,7,-4,-2,-4,10,6,-7,-8,-1,-1,-7,6,4,10,-9,1,-2],[-4,-8,3,-10,-1,9,-3,-10,3,3,-3,-3,10,-9,10,8,6,-4,3,9,-1,5,7,8],[1,1,10,-8,-8,1,-8,3,4,-2,1,3,10,-6,1,8,5,7,-5,-4,-2,4,6,4],[7,9,9,-10,9,-5,7,-2,5,8,6,5,-8,10,8,-6,-1,-3,-8,-7,-6,-7,8,-5],[-1,-4,-6,-7,-10,10,10,-3,2,9,-8,7,3,-6,3,5,-6,-3,10,9,-8,9,7,-8],[9,-1,8,-8,-1,-1,8,10,-4,8,-6,5,-8,-1,10,7,1,-6,-5,-9,1,-3,-3,-4],[-10,3,9,-10,-6,-3,-2,-6,6,1,8,-10,-7,9,9,-1,4,-5,-3,10,-5,6,1,10],[5,3,-9,-2,7,10,-3,-5,4,9,-4,-7,-2,-4,-6,-2,-6,-4,-7,3,8,-2,-4,-7],[6,6,-5,-6,-7,-9,7,-3,4,7,-4,5,-6,2,-3,-8,4,-10,-8,-5,-9,5,-4,8],[-6,9,-9,-1,-3,-5,-1,-5,9,-4,-2,-10,-3,-8,5,-7,4,2,-2,6,-5,2,-6,-1],[-4,3,-3,-8,10,-5,5,10,10,1,-5,9,-10,8,-8,4,-3,8,10,6,4,-6,5,-6],[-8,-9,6,4,7,-3,-10,-6,1,-3,-2,10,-10,4,-2,2,-9,-4,-9,10,-10,-2,9,-7],[4,3,7,-3,-2,4,-1,-6,7,5,8,-3,-10,1,5,-2,-8,-6,-8,3,7,-6,4,-9],[1,7,3,10,-5,5,-10,10,1,2,4,-1,-1,-1,8,5,6,-1,-2,-4,-1,-6,5,-7],[-1,-8,-4,-7,-4,9,-8,3,8,5,-2,-6,10,-6,-5,1,-1,2,8,2,10,5,-8,4],[-10,-6,9,-9,-2,-4,-7,-5,-6,4,8,5,7,-6,8,-1,-2,-5,8,2,7,9,4,2],[2,-5,4,-8,2,8,-7,-10,-7,-2,9,5,1,-1,7,-7,3,-9,4,10,3,-7,8,-9],[-4,-1,4,-10,9,2,-7,5,10,7,-3,-9,-4,9,4,8,-1,-1,-7,2,4,-2,-10,3],[2,4,-8,4,-1,-7,-10,-5,5,8,8,-8,3,-7,6,4,1,-5,-1,4,-1,7,7,-4],[7,-4,1,9,-1,-6,-6,7,8,-10,-1,3,5,-3,3,5,-7,-6,3,2,-4,1,9,-9],[9,8,-6,-2,-2,-3,2,4,9,10,7,-5,10,-3,3,-8,3,-2,8,10,-9,-2,3,10],[9,-5,10,9,6,-1,-4,-1,6,4,7,1,-6,-5,-2,-2,-5,-7,-7,-8,-8,1,-7,-7],[-6,-6,-6,9,1,-1,-10,-4,-2,-3,7,1,10,7,4,10,-8,5,3,-6,-1,-7,-9,-8],[-2,-9,2,-6,2,2,1,10,-10,1,-10,-8,-3,-1,-8,5,-2,10,-6,8,4,-6,2,2],[2,5,-10,2,-10,8,-4,7,-7,1,7,-1,-1,-4,4,5,9,7,-5,-3,-4,2,-3,-7],[9,-6,-9,-5,-6,3,5,6,-8,-5,4,7,-10,7,1,6,1,-6,8,1,2,-6,2,3],[6,4,-6,9,3,1,-9,-3,8,-3,3,-4,9,-6,-1,2,6,7,-8,-2,-2,4,8,6],[-9,6,-4,-10,8,6,4,-7,8,6,8,-9,-1,-6,2,-6,-10,4,-3,-8,2,-2,-4,1],[-1,-9,5,3,-9,-6,8,4,6,-1,4,-2,3,-3,3,8,10,-6,5,2,8,-7,-10,4],[8,-5,-5,9,2,-5,-7,-10,-2,4,6,3,4,10,-8,-1,2,-1,4,-6,-3,1,8,6],[8,9,-8,7,10,-7,4,7,6,4,7,6,3,-9,-1,-2,5,-10,-2,6,-4,2,-2,5],[-8,-8,3,4,-3,6,8,-2,7,-7,-9,-3,-5,-1,6,5,-9,7,-6,5,-4,5,10,6],[-9,8,-3,1,8,6,-9,5,1,7,5,-1,6,-4,3,-6,10,-8,-7,-2,10,6,-9,7],[-5,9,10,-2,8,-5,-3,-1,2,-7,-10,-3,-8,-2,-2,-7,7,8,8,6,-7,6,9,-4]], dtype = "uint32")#candidate|2953|(60, 24)|const|uint32
call_2952 = relay.TupleGetItem(func_1341_call(relay.reshape(const_2953.astype('uint32'), [16, 15, 6]), relay.reshape(const_2953.astype('uint32'), [16, 15, 6]), ), 0)
call_2954 = relay.TupleGetItem(func_1344_call(relay.reshape(const_2953.astype('uint32'), [16, 15, 6]), relay.reshape(const_2953.astype('uint32'), [16, 15, 6]), ), 0)
var_2963 = relay.var("var_2963", dtype = "float64", shape = (11, 9, 9))#candidate|2963|(11, 9, 9)|var|float64
bop_2964 = relay.add(call_2944.astype('int64'), relay.reshape(var_2963.astype('int64'), relay.shape_of(call_2944))) # shape=(11, 9, 9)
bop_2967 = relay.add(call_2945.astype('int64'), relay.reshape(var_2963.astype('int64'), relay.shape_of(call_2945))) # shape=(11, 9, 9)
var_2974 = relay.var("var_2974", dtype = "uint32", shape = (60, 24))#candidate|2974|(60, 24)|var|uint32
bop_2975 = relay.add(const_2953.astype('uint32'), relay.reshape(var_2974.astype('uint32'), relay.shape_of(const_2953))) # shape=(60, 24)
func_2285_call = mod.get_global_var('func_2285')
func_2289_call = mutated_mod.get_global_var('func_2289')
const_2980 = relay.const(6, dtype = "uint16")#candidate|2980|()|const|uint16
var_2981 = relay.var("var_2981", dtype = "uint16", shape = (52,))#candidate|2981|(52,)|var|uint16
var_2982 = relay.var("var_2982", dtype = "float32", shape = (132,))#candidate|2982|(132,)|var|float32
call_2979 = relay.TupleGetItem(func_2285_call(relay.reshape(const_2980.astype('uint16'), []), relay.reshape(var_2981.astype('uint16'), [13, 4, 1]), relay.reshape(var_2982.astype('float32'), [132,]), ), 1)
call_2983 = relay.TupleGetItem(func_2289_call(relay.reshape(const_2980.astype('uint16'), []), relay.reshape(var_2981.astype('uint16'), [13, 4, 1]), relay.reshape(var_2982.astype('float32'), [132,]), ), 1)
uop_2984 = relay.exp(call_2979.astype('float32')) # shape=(3, 4, 11)
uop_2986 = relay.exp(call_2983.astype('float32')) # shape=(3, 4, 11)
uop_2990 = relay.sinh(uop_2984.astype('float32')) # shape=(3, 4, 11)
uop_2992 = relay.sinh(uop_2986.astype('float32')) # shape=(3, 4, 11)
bop_3000 = relay.equal(uop_2984.astype('bool'), relay.reshape(call_2979.astype('bool'), relay.shape_of(uop_2984))) # shape=(3, 4, 11)
bop_3003 = relay.equal(uop_2986.astype('bool'), relay.reshape(call_2983.astype('bool'), relay.shape_of(uop_2986))) # shape=(3, 4, 11)
bop_3014 = relay.logical_and(uop_2990.astype('bool'), relay.reshape(var_2982.astype('bool'), relay.shape_of(uop_2990))) # shape=(3, 4, 11)
bop_3017 = relay.logical_and(uop_2992.astype('bool'), relay.reshape(var_2982.astype('bool'), relay.shape_of(uop_2992))) # shape=(3, 4, 11)
func_789_call = mod.get_global_var('func_789')
func_792_call = mutated_mod.get_global_var('func_792')
const_3025 = relay.const([[8.677741,-8.386773,-0.449640,-5.817998,8.691715,8.467935],[-9.176958,-2.382788,-6.070810,-2.821374,-0.101548,-9.002274],[7.537112,-8.126778,-0.041371,-6.568020,8.403666,9.187687],[-6.943675,-0.598025,-1.673005,8.976138,2.181893,-9.903838],[-8.524585,0.365517,-4.484370,6.484227,3.556181,4.791420],[0.729242,-0.175538,-6.812209,-0.195326,9.905133,-6.537759],[4.767704,-9.458655,8.977446,-7.375419,-4.215560,3.316125],[-9.719744,-9.919289,-1.796159,5.958312,4.512626,-4.117015],[3.190061,-1.461099,2.467272,-6.156689,-9.850915,8.661836],[0.133772,9.633610,4.883582,-1.501742,-9.806728,-2.967808],[8.291481,-7.552669,8.267834,-8.333447,-0.431304,0.991897],[-5.842388,-0.002321,-0.661713,-1.844644,3.049981,7.118820],[-6.500967,-6.043101,-2.839036,9.072005,-5.959578,-5.331750],[-2.951057,8.832072,-5.633626,8.652166,-7.150968,0.058579],[9.093725,3.236423,-1.103861,-3.316373,-4.929058,9.667134],[9.532371,-4.416566,-1.343173,2.346454,-6.610996,4.811290],[0.007479,6.112366,-3.546123,-9.405669,-4.639295,0.681430],[8.751576,-8.247965,-1.367657,-6.826857,-2.086518,-2.113636],[-7.893607,-4.697179,-5.761495,5.620678,-8.809984,5.550780],[8.823384,-7.919152,8.531539,-8.933593,6.875709,1.495807],[-6.428745,5.327248,-8.517941,-3.279554,6.824819,0.974828],[-3.081758,8.265464,4.868493,-7.549539,0.704824,9.283999],[-7.044037,0.195479,-1.917919,1.677991,-5.900645,2.793750],[-4.007196,4.666920,-1.846570,1.487973,3.982169,8.223962]], dtype = "float64")#candidate|3025|(24, 6)|const|float64
var_3026 = relay.var("var_3026", dtype = "float64", shape = (2160,))#candidate|3026|(2160,)|var|float64
call_3024 = relay.TupleGetItem(func_789_call(relay.reshape(const_3025.astype('float64'), [16, 9, 1]), relay.reshape(var_3026.astype('float64'), [16, 9, 15]), ), 0)
call_3027 = relay.TupleGetItem(func_792_call(relay.reshape(const_3025.astype('float64'), [16, 9, 1]), relay.reshape(var_3026.astype('float64'), [16, 9, 15]), ), 0)
output = relay.Tuple([call_2952,bop_2964,bop_2975,const_2980,var_2981,bop_3000,bop_3014,call_3024,const_3025,var_3026,])
output2 = relay.Tuple([call_2954,bop_2967,bop_2975,const_2980,var_2981,bop_3003,bop_3017,call_3027,const_3025,var_3026,])
func_3031 = relay.Function([var_2963,var_2974,var_2981,var_2982,var_3026,], output)
mod['func_3031'] = func_3031
mod = relay.transform.InferType()(mod)
mutated_mod['func_3031'] = func_3031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3031_call = mutated_mod.get_global_var('func_3031')
var_3033 = relay.var("var_3033", dtype = "float64", shape = (11, 9, 9))#candidate|3033|(11, 9, 9)|var|float64
var_3034 = relay.var("var_3034", dtype = "uint32", shape = (60, 24))#candidate|3034|(60, 24)|var|uint32
var_3035 = relay.var("var_3035", dtype = "uint16", shape = (52,))#candidate|3035|(52,)|var|uint16
var_3036 = relay.var("var_3036", dtype = "float32", shape = (132,))#candidate|3036|(132,)|var|float32
var_3037 = relay.var("var_3037", dtype = "float64", shape = (2160,))#candidate|3037|(2160,)|var|float64
call_3032 = func_3031_call(var_3033,var_3034,var_3035,var_3036,var_3037,)
output = call_3032
func_3038 = relay.Function([var_3033,var_3034,var_3035,var_3036,var_3037,], output)
mutated_mod['func_3038'] = func_3038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2906_call = mod.get_global_var('func_2906')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_3045 = relay.TupleGetItem(func_2906_call(), 0)
call_3046 = relay.TupleGetItem(func_2907_call(), 0)
uop_3073 = relay.acos(call_3045.astype('float64')) # shape=(11, 9, 9)
uop_3075 = relay.acos(call_3046.astype('float64')) # shape=(11, 9, 9)
output = relay.Tuple([uop_3073,])
output2 = relay.Tuple([uop_3075,])
func_3079 = relay.Function([], output)
mod['func_3079'] = func_3079
mod = relay.transform.InferType()(mod)
mutated_mod['func_3079'] = func_3079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mutated_mod.get_global_var('func_3079')
call_3080 = func_3079_call()
output = call_3080
func_3081 = relay.Function([], output)
mutated_mod['func_3081'] = func_3081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3087 = relay.var("var_3087", dtype = "int16", shape = (11, 14, 9))#candidate|3087|(11, 14, 9)|var|int16
const_3088 = relay.const([[[-1,3,-1,-8,2,-10,3,7,-6],[-4,-1,-6,10,-5,9,8,8,-4],[6,-10,4,-9,-10,10,-9,2,5],[-7,3,-9,7,-2,1,-3,-10,5],[-5,-2,-1,10,-7,9,2,4,9],[8,3,8,6,10,6,-9,-10,-5],[3,10,-2,9,5,9,-1,8,5],[-7,-9,6,-4,8,5,-6,1,-8],[7,6,5,3,-2,-7,9,7,-4],[-5,9,-4,-7,5,-8,-2,2,-4],[5,10,-2,-4,2,-1,6,7,-1],[2,-1,7,-9,4,-9,6,-10,1],[5,3,1,-6,-3,-4,3,-2,10],[6,10,-1,-10,5,3,-10,-5,10]],[[10,-3,-8,-7,3,-7,-3,-2,-1],[-4,-10,-1,-6,5,-7,-5,8,9],[-5,9,10,-10,-9,5,-7,-10,-7],[2,-3,3,10,4,8,-8,-4,2],[2,-8,-8,10,-2,-2,3,-2,-1],[-4,-7,-10,6,9,-4,-5,-6,-9],[3,-10,2,-6,6,-1,3,9,-4],[6,-9,-9,7,-3,-4,-9,-2,6],[1,-8,7,7,5,-1,-6,-10,-1],[2,-2,3,5,-4,1,2,-1,-10],[-10,-2,2,5,-2,5,-3,-3,9],[-10,10,-3,6,-4,8,5,10,4],[-3,-9,3,8,2,10,9,-10,-3],[-9,-10,6,-6,5,-10,-7,-7,6]],[[2,-7,-5,-8,4,3,-10,-8,5],[6,7,-7,-2,10,1,-1,-1,-9],[-3,1,4,-9,-8,5,-1,7,6],[-4,8,-6,-9,-6,-5,-7,4,10],[-3,4,-3,5,4,3,5,6,1],[-6,1,3,7,-6,9,10,-2,5],[5,-3,-1,-9,-2,-4,7,5,10],[-5,7,9,-7,10,-5,-9,5,1],[6,4,5,3,8,1,6,-6,-7],[-1,-5,-6,-5,1,6,-8,10,-2],[-2,8,-5,-7,-4,5,7,8,8],[2,-10,5,-3,-10,-7,-9,-9,8],[-5,-6,9,2,9,9,7,-3,4],[-3,-1,3,5,-8,10,-2,-2,-6]],[[2,-8,-2,-10,-8,-4,-9,9,-1],[-9,-4,-3,-2,9,-3,-4,7,-8],[8,-5,-9,9,9,-9,10,-7,4],[1,6,9,-7,4,6,2,-10,-10],[-8,-6,-7,-7,4,1,5,5,2],[-1,-8,4,9,-7,2,5,-4,-9],[7,-8,-2,-10,-1,-8,-8,3,-6],[-1,2,3,5,6,-2,-2,2,9],[-9,3,-3,-4,-2,8,-5,-2,-6],[2,4,3,-4,-4,-3,2,-5,3],[-6,8,7,3,-6,10,1,-5,10],[2,1,10,-2,-7,5,-4,8,-8],[-9,-6,9,8,7,-6,9,1,-7],[-5,3,-5,-1,-1,2,-3,-2,9]],[[6,1,1,10,-9,-2,-2,-5,-9],[5,-1,9,8,8,1,-1,-3,10],[-2,-3,-3,-7,-2,-2,-5,10,-3],[-1,1,1,5,10,-6,3,3,9],[3,-3,-8,-5,-1,-9,4,-7,9],[8,2,3,10,-8,-2,-1,4,-9],[8,-5,8,5,-6,-6,2,9,4],[6,8,9,2,6,-5,-10,8,3],[-1,-8,3,-2,-8,1,-2,7,2],[1,-7,1,1,-8,9,5,-2,-7],[-6,9,1,-7,-8,5,2,3,-3],[5,6,-5,5,-4,-4,9,1,4],[-2,5,7,2,-7,9,9,-6,-7],[9,2,6,-4,5,-7,-9,2,-10]],[[5,-6,-9,2,1,3,10,8,5],[9,-1,7,3,-6,10,-2,10,-7],[7,6,-9,5,-1,3,-9,7,7],[7,-8,5,-2,4,6,-8,-5,10],[3,5,-10,-2,-3,8,-1,-1,1],[8,4,-5,7,5,10,-6,-1,-7],[-3,10,7,7,-7,8,6,-1,-2],[-3,10,1,-1,2,-9,-3,-9,-10],[2,-4,-8,7,10,6,-4,1,5],[3,8,-10,-4,1,7,-10,1,-8],[-10,-4,-4,-4,-7,2,6,8,9],[-3,10,-8,5,7,-4,4,-1,6],[-9,4,5,10,9,5,5,-3,-2],[-3,9,-5,-7,6,-9,3,-3,6]],[[1,9,-3,10,-2,6,-1,5,10],[-2,-8,5,3,7,-5,3,-8,-9],[-7,-2,9,-7,6,-10,-9,-3,1],[6,6,-1,6,-10,-4,-7,8,-2],[-9,9,8,-2,-2,-5,5,-8,-3],[-3,-10,-5,-3,-7,-4,-10,-5,-8],[8,1,-7,2,8,-2,-8,-1,-1],[7,9,-7,-3,3,7,3,3,5],[10,3,-9,10,1,10,-6,-8,-8],[-5,3,1,3,-5,-7,8,10,-7],[8,8,9,-3,-2,-9,7,3,5],[-10,-7,-5,-9,-6,-4,-8,2,-2],[-6,7,6,-10,9,-3,-9,-3,1],[-3,-10,-9,-3,7,-5,-6,5,-10]],[[-9,-6,-6,-5,3,3,5,-6,6],[7,2,-5,-2,9,4,10,2,4],[-4,-4,6,-3,-5,3,-4,-1,6],[-5,-6,-8,6,4,2,5,-6,5],[6,2,-8,-5,7,1,1,-2,2],[7,-7,-3,8,7,5,-7,-1,-4],[-4,-1,4,-4,8,2,-7,-6,-10],[5,7,4,-5,4,-10,5,9,6],[-10,8,10,7,-1,-4,-4,-2,5],[4,9,-6,-10,4,10,3,-4,-9],[-3,2,3,-6,8,-9,-6,-1,-5],[-3,-1,-2,-10,-1,8,-7,-8,6],[8,8,1,-7,2,-1,6,-2,2],[-5,1,-5,8,9,-4,7,6,-5]],[[5,-4,-9,-6,9,-1,-1,1,4],[8,-9,-8,-1,-2,2,-4,9,-4],[2,-5,-7,10,-5,-2,7,3,-9],[9,-7,7,-10,6,10,10,-3,3],[-3,10,5,1,3,10,-6,-10,-1],[4,-9,-1,-4,10,-7,-7,-5,-2],[-10,6,4,5,-4,5,-3,7,9],[10,-8,-1,1,-7,5,-9,-10,-10],[1,-6,-10,2,-10,-5,8,2,-4],[-3,1,3,1,4,-9,8,8,8],[-7,-1,-1,5,4,5,2,-4,10],[-10,-1,2,7,-3,6,-4,4,-9],[4,6,3,5,-9,-8,-8,10,5],[1,-2,8,6,10,-9,-6,-2,10]],[[-4,-1,-6,4,9,3,-5,-7,-1],[-8,9,8,8,-1,-4,6,-8,3],[-7,-7,-2,-4,7,6,6,-6,4],[3,7,2,4,1,6,3,-10,4],[3,9,-9,9,-10,2,-8,-4,6],[-6,6,10,9,7,-8,-3,9,2],[-10,-5,5,-4,10,-5,8,7,-9],[5,-4,9,-5,2,6,-2,-4,-9],[-4,-3,-5,-1,2,-4,-6,-8,3],[-2,-2,2,8,-8,-3,-3,-10,-1],[5,-7,-1,7,-1,-8,4,1,-6],[-6,9,9,1,-8,8,-7,3,-1],[4,-2,3,-7,1,3,-3,2,-4],[-3,-4,-5,2,7,-5,-10,6,-4]],[[-3,6,-1,3,-9,-7,7,8,-2],[-4,-5,10,9,1,-3,4,5,1],[-8,-1,1,-10,9,10,2,-8,4],[9,9,1,-2,-7,5,-5,10,4],[6,-10,3,-8,3,-2,-5,2,-10],[5,8,-2,-10,9,-5,-1,-6,-7],[2,-4,1,-4,8,10,9,-3,-9],[-9,4,-9,9,-1,3,-6,5,-10],[7,-3,-9,6,-10,2,-3,-8,-1],[5,9,6,6,-6,1,7,1,-4],[3,-10,-8,4,-5,8,9,7,1],[-9,5,-8,-5,-8,-5,1,-2,-4],[-3,-2,1,4,5,-8,-5,3,-6],[10,-8,-10,-1,-4,9,-3,-4,-1]]], dtype = "int16")#candidate|3088|(11, 14, 9)|const|int16
bop_3089 = relay.logical_xor(var_3087.astype('int16'), relay.reshape(const_3088.astype('int16'), relay.shape_of(var_3087))) # shape=(11, 14, 9)
bop_3097 = relay.mod(const_3088.astype('float64'), relay.reshape(bop_3089.astype('float64'), relay.shape_of(const_3088))) # shape=(11, 14, 9)
uop_3110 = relay.atanh(bop_3089.astype('float32')) # shape=(11, 14, 9)
bop_3117 = relay.not_equal(uop_3110.astype('bool'), relay.reshape(bop_3097.astype('bool'), relay.shape_of(uop_3110))) # shape=(11, 14, 9)
bop_3137 = relay.multiply(uop_3110.astype('uint64'), relay.reshape(bop_3089.astype('uint64'), relay.shape_of(uop_3110))) # shape=(11, 14, 9)
uop_3147 = relay.asinh(bop_3137.astype('float32')) # shape=(11, 14, 9)
func_1473_call = mod.get_global_var('func_1473')
func_1476_call = mutated_mod.get_global_var('func_1476')
var_3150 = relay.var("var_3150", dtype = "int32", shape = (672,))#candidate|3150|(672,)|var|int32
const_3151 = relay.const([-4.890158,5.651168,5.381274,-2.444808,-6.387175,-8.479875,5.373845,-2.221474,0.921191,2.553755,-7.808730,9.753451,-1.586707,0.350646,-9.430372,-1.691481,-7.636935,0.052159,-6.199312,2.358205,-3.784619,3.386642,-1.259886,6.275362,-3.944818,7.627144,8.938155,0.790340,3.293468,8.352264,-3.544380,-2.627336,3.604941,-1.758032,6.389213,-0.527262,0.477711,-3.519541,1.916736,1.456082,-2.804136,-9.404698,-1.184437,-2.882657,3.282133,0.353706,5.856189,-3.223777,5.079265,-9.806705,-4.201469,-1.789505,-2.494763,2.348874,-5.764006,-3.154424,-8.317527,-7.782014,-3.664463,-0.991763,-3.040634,1.697665,-5.646127,-6.710607,3.075020,-9.913450,4.619595,7.932756,0.482922,5.666112,-6.154207,8.718960], dtype = "float32")#candidate|3151|(72,)|const|float32
call_3149 = relay.TupleGetItem(func_1473_call(relay.reshape(var_3150.astype('int32'), [16, 7, 6]), relay.reshape(const_3151.astype('float32'), [1, 72]), ), 0)
call_3152 = relay.TupleGetItem(func_1476_call(relay.reshape(var_3150.astype('int32'), [16, 7, 6]), relay.reshape(const_3151.astype('float32'), [1, 72]), ), 0)
output = relay.Tuple([bop_3117,uop_3147,call_3149,var_3150,const_3151,])
output2 = relay.Tuple([bop_3117,uop_3147,call_3152,var_3150,const_3151,])
func_3156 = relay.Function([var_3087,var_3150,], output)
mod['func_3156'] = func_3156
mod = relay.transform.InferType()(mod)
mutated_mod['func_3156'] = func_3156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3156_call = mutated_mod.get_global_var('func_3156')
var_3158 = relay.var("var_3158", dtype = "int16", shape = (11, 14, 9))#candidate|3158|(11, 14, 9)|var|int16
var_3159 = relay.var("var_3159", dtype = "int32", shape = (672,))#candidate|3159|(672,)|var|int32
call_3157 = func_3156_call(var_3158,var_3159,)
output = call_3157
func_3160 = relay.Function([var_3158,var_3159,], output)
mutated_mod['func_3160'] = func_3160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mod.get_global_var('func_2942')
func_2943_call = mutated_mod.get_global_var('func_2943')
call_3173 = relay.TupleGetItem(func_2942_call(), 0)
call_3174 = relay.TupleGetItem(func_2943_call(), 0)
output = relay.Tuple([call_3173,])
output2 = relay.Tuple([call_3174,])
func_3195 = relay.Function([], output)
mod['func_3195'] = func_3195
mod = relay.transform.InferType()(mod)
mutated_mod['func_3195'] = func_3195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3195_call = mutated_mod.get_global_var('func_3195')
call_3196 = func_3195_call()
output = call_3196
func_3197 = relay.Function([], output)
mutated_mod['func_3197'] = func_3197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2844_call = mod.get_global_var('func_2844')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_3198 = relay.TupleGetItem(func_2844_call(), 0)
call_3199 = relay.TupleGetItem(func_2846_call(), 0)
output = relay.Tuple([call_3198,])
output2 = relay.Tuple([call_3199,])
func_3206 = relay.Function([], output)
mod['func_3206'] = func_3206
mod = relay.transform.InferType()(mod)
output = func_3206()
func_3207 = relay.Function([], output)
mutated_mod['func_3207'] = func_3207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2906_call = mod.get_global_var('func_2906')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_3350 = relay.TupleGetItem(func_2906_call(), 0)
call_3351 = relay.TupleGetItem(func_2907_call(), 0)
func_169_call = mod.get_global_var('func_169')
func_173_call = mutated_mod.get_global_var('func_173')
var_3355 = relay.var("var_3355", dtype = "bool", shape = (1274,))#candidate|3355|(1274,)|var|bool
call_3354 = func_169_call(relay.reshape(var_3355.astype('bool'), [7, 14, 13]), relay.reshape(var_3355.astype('bool'), [7, 14, 13]), )
call_3356 = func_169_call(relay.reshape(var_3355.astype('bool'), [7, 14, 13]), relay.reshape(var_3355.astype('bool'), [7, 14, 13]), )
func_3156_call = mod.get_global_var('func_3156')
func_3160_call = mutated_mod.get_global_var('func_3160')
var_3360 = relay.var("var_3360", dtype = "int16", shape = (1386,))#candidate|3360|(1386,)|var|int16
var_3361 = relay.var("var_3361", dtype = "int32", shape = (672,))#candidate|3361|(672,)|var|int32
call_3359 = relay.TupleGetItem(func_3156_call(relay.reshape(var_3360.astype('int16'), [11, 14, 9]), relay.reshape(var_3361.astype('int32'), [672,]), ), 4)
call_3362 = relay.TupleGetItem(func_3160_call(relay.reshape(var_3360.astype('int16'), [11, 14, 9]), relay.reshape(var_3361.astype('int32'), [672,]), ), 4)
func_1232_call = mod.get_global_var('func_1232')
func_1235_call = mutated_mod.get_global_var('func_1235')
const_3371 = relay.const([7.228300,0.011865,-9.298998,0.338721,-9.495767,0.621010,-9.792373,3.758745,4.214176,0.942389,-1.682328,-3.580194], dtype = "float32")#candidate|3371|(12,)|const|float32
call_3370 = relay.TupleGetItem(func_1232_call(relay.reshape(const_3371.astype('float32'), [4, 1, 3])), 0)
call_3372 = relay.TupleGetItem(func_1235_call(relay.reshape(const_3371.astype('float32'), [4, 1, 3])), 0)
output = relay.Tuple([call_3350,call_3354,var_3355,call_3359,var_3360,var_3361,call_3370,const_3371,])
output2 = relay.Tuple([call_3351,call_3356,var_3355,call_3362,var_3360,var_3361,call_3372,const_3371,])
func_3385 = relay.Function([var_3355,var_3360,var_3361,], output)
mod['func_3385'] = func_3385
mod = relay.transform.InferType()(mod)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3385_call = mutated_mod.get_global_var('func_3385')
var_3387 = relay.var("var_3387", dtype = "bool", shape = (1274,))#candidate|3387|(1274,)|var|bool
var_3388 = relay.var("var_3388", dtype = "int16", shape = (1386,))#candidate|3388|(1386,)|var|int16
var_3389 = relay.var("var_3389", dtype = "int32", shape = (672,))#candidate|3389|(672,)|var|int32
call_3386 = func_3385_call(var_3387,var_3388,var_3389,)
output = call_3386
func_3390 = relay.Function([var_3387,var_3388,var_3389,], output)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_3403 = relay.TupleGetItem(func_3079_call(), 0)
call_3404 = relay.TupleGetItem(func_3081_call(), 0)
func_789_call = mod.get_global_var('func_789')
func_792_call = mutated_mod.get_global_var('func_792')
const_3416 = relay.const([-5.575773,-2.712156,0.352236,-4.705048,1.063609,6.504653,-4.868416,8.175892,-5.184406,9.100109,-2.368993,-0.206736,-4.068231,-0.356049,4.963630,-6.221901,6.280418,-1.203640,-3.867025,-9.837949,2.186335,9.579546,-6.392078,6.796217,7.653135,7.450633,-6.925960,-0.071443,9.423665,-1.530625,0.497363,4.969135,2.881054,5.831273,-5.248030,4.488975,7.921459,3.259887,-8.710635,1.967477,7.385174,5.303670,-5.080715,-7.671992,-1.292363,-1.398590,-2.761874,-3.117317,0.428707,6.229428,2.305617,-5.761920,5.935272,-7.061394,-1.652998,9.174363,-2.856557,0.604716,-9.411542,-8.363736,-0.864584,1.244171,-4.726155,-7.461264,3.305270,4.120033,9.181371,-5.833829,2.526055,-6.017550,-8.235868,1.906300,-8.583482,2.346972,0.047093,5.012295,1.050340,-4.589844,-9.970834,4.947867,-7.209622,-8.907605,-0.242227,-0.204920,9.100188,-6.144416,-3.312215,-4.214329,-2.774827,-0.230318,3.734592,-4.309593,-5.615239,5.665190,6.496957,-7.610830,5.093464,1.288009,7.987860,-2.705233,-4.121471,-9.539905,-7.447618,6.355007,8.084731,-3.069997,6.798188,0.336842,6.923296,-3.791785,4.269397,-5.149999,5.892684,4.728545,8.943697,6.609840,-5.550264,4.273715,-1.047062,6.479845,-8.417746,1.867291,-2.265416,8.841599,7.041886,6.123452,-0.030400,2.627413,6.546407,4.414288,-8.962615,0.225455,-3.688336,-1.784428,5.370607,-6.910600,5.740894,-9.546083,-1.324949,-5.210895,0.903058,3.093007,5.591819,-6.531021], dtype = "float64")#candidate|3416|(144,)|const|float64
const_3417 = relay.const([-6.099595,-3.548377,-3.457239,-9.856847,-1.574491,0.320896,-5.146282,-3.931809,9.400058,-3.040828,-7.541879,-1.459637,-7.052758,-7.886972,-9.730523,-3.898071,-4.142371,-5.078187,9.012309,3.351610,8.864718,0.607203,-1.928782,7.500711,-6.019064,-7.362870,8.934901,3.429657,2.877659,7.121307,-1.261331,4.682169,-0.542895,4.227586,-7.334311,8.148314,7.333282,6.534209,-9.285325,6.040175,-9.728728,7.399414,-0.992811,4.170599,2.412166,-0.021108,-1.115171,-6.277458,5.056969,-4.149934,-0.812621,0.364548,0.512753,8.100242,9.323437,-4.524251,6.078789,7.655642,-3.572995,4.396427,8.703748,0.700635,3.011009,-1.489853,4.049142,-9.752975,4.480337,3.435966,-3.044344,-3.745567,9.997831,8.430109,8.869071,5.455032,-7.402321,1.174665,-9.309372,0.284628,-9.784129,-6.978659,7.762928,-3.726228,-9.815292,0.898489,-7.396986,3.829423,-0.760438,-6.127804,0.930754,-5.352939,0.692560,-9.286103,-2.953095,9.831295,0.738006,2.576287,9.526229,4.842100,4.707786,-0.901248,7.921651,-0.972706,9.702970,2.211191,-1.089530,-1.684626,8.415852,1.416311,-5.076951,-2.555885,-2.927946,-8.367369,9.334314,0.566777,-8.489567,3.694166,4.454386,-7.200663,-2.055515,-2.721942,3.550438,-1.514009,6.477393,-0.807148,3.289440,8.364061,-2.684855,6.998550,-5.659369,7.112444,-2.773983,-8.865476,-2.311811,-0.978387,-8.443076,6.957062,9.997363,-4.868032,3.954383,6.107642,3.716978,-1.280563,-0.121014,-7.397641,-4.477580,-3.549859,-4.276037,4.638172,1.339132,7.472618,-2.965380,9.185363,6.391321,-2.610841,-3.665117,6.099613,-4.154672,-2.736783,9.112816,5.607787,-6.100069,-8.570570,-5.177686,8.454158,-6.387834,7.161642,5.789265,-8.312482,-6.523925,8.470740,-6.346409,7.883472,-7.281017,-2.458271,-7.455989,6.264051,5.906608,9.906516,3.288042,9.989755,5.871702,-8.397044,4.179772,1.885693,1.989616,-0.545778,5.013877,9.293843,1.921814,4.646329,9.380696,-3.745548,7.893445,0.970481,-0.148009,-2.207492,7.093717,-1.767229,2.589534,8.507753,-9.507480,6.206655,7.778731,9.306654,-3.720116,-2.259276,-0.319691,-8.006355,-8.953173,-4.035700,-2.989992,-2.509073,-6.311906,-0.772682,0.250812,-8.295746,6.008805,5.918554,-2.354888,-9.881585,-0.926568,3.977857,0.388042,-9.629860,9.017854,6.487653,4.546855,4.461967,-5.936916,6.928625,7.303303,-1.107032,4.784632,6.582990,-8.605189,-1.651627,-3.878400,8.964644,9.943189,3.706119,8.281458,-7.066793,2.906841,-2.898309,9.159505,0.846052,6.840381,-8.074107,7.505985,5.893627,2.429492,-9.244566,7.907918,8.468722,3.554319,9.131475,4.417132,2.718147,4.097112,8.531094,-1.212883,-5.329362,-1.835009,-2.502328,-4.790211,5.253168,-4.067318,-2.232120,-3.945140,-7.567438,-7.088818,-3.203311,-4.981232,-3.728397,5.976593,-3.925440,-8.925581,5.916895,2.121222,8.308407,7.259241,5.492097,-1.414599,6.368230,-2.853475,8.888527,4.267667,-8.818350,2.831252,-6.266977,-6.108430,-0.926442,9.485320,9.550866,-8.209276,-1.776335,-4.892836,3.084860,5.028142,0.917844,-2.715855,0.263302,-7.601937,5.535384,-6.557513,-7.874824,7.386778,-8.977437,-9.349102,2.503923,-3.502005,6.197885,-8.457533,1.129314,4.315064,1.401825,3.872631,-4.999471,-1.118580,-9.028403,3.536915,-1.053869,1.433125,7.130189,-2.127940,-5.910532,-4.390119,6.628537,-3.793700,0.730734,3.213552,-4.450514,3.194973,-8.243809,-3.873050,-9.775193,3.816292,-8.936726,5.873562,0.388890,9.609497,-6.340468,2.265275,-3.568108,4.837854,1.579517,-6.741868,6.382081,-9.447124,2.938846,-4.550306,-1.239849,-1.608355,3.222248,-8.728552,-8.596095,-5.567166,-5.859697,-7.184359,-7.071491,-8.610921,2.314252,1.820341,-3.087245,-3.056503,-8.187867,3.148220,9.427047,-6.307574,-9.008733,0.908384,-0.973880,4.061156,0.937726,6.452133,3.176182,9.736279,-0.693136,-3.464881,7.069093,-1.645552,3.312347,-7.210423,-1.884517,6.237432,-0.375072,8.519733,9.422702,7.487265,-5.778367,-7.458849,-4.866097,-6.514671,-7.128998,0.476058,-1.524673,6.653906,8.214309,-7.225767,-4.985850,-3.668836,-1.956332,6.344909,5.374069,-3.251705,2.307112,2.999602,-6.835374,-1.561862,-2.965595,-1.120553,-8.193961,9.315644,-2.929474,3.705598,0.737165,8.844726,4.704459,2.113558,7.102763,-2.213844,-4.014752,-0.043864,-9.962927,2.451426,-7.831004,0.870619,-9.202120,-0.125145,-3.179557,1.895203,-3.350732,7.745609,-6.675865,-8.397701,-0.558592,-6.484255,-6.852942,5.838219,-2.962912,-0.803500,6.832219,8.120418,-0.935522,-7.955276,9.344287,-4.801051,-0.898357,8.164793,6.805990,-2.513859,-5.162953,-0.965226,1.820551,3.704363,7.070213,-9.799630,5.279991,-8.485303,6.185388,-7.541198,-1.879099,-2.358023,-5.283389,7.814135,6.425150,0.522249,6.285835,6.798768,-1.341881,-3.667021,-0.387847,-4.644170,-0.682133,0.165135,7.052992,-8.014184,-9.678087,-5.002159,-8.825821,-6.280875,4.118000,7.993252,-7.455641,3.317204,-6.189938,-1.782107,-3.229046,-5.241518,2.470878,-5.159052,-2.802828,-7.515666,-0.252289,3.928008,2.806678,-1.361195,-2.717241,6.123754,-9.105628,6.142884,-6.513610,7.828346,-7.658149,7.131669,9.719572,-5.607290,-5.797006,2.815064,9.021028,1.340007,-4.656694,9.692977,5.884789,6.376558,3.468337,-5.758383,-6.877553,-5.048411,-9.245249,-9.901952,8.140607,7.113144,-2.310809,-4.328669,9.412288,-2.111262,-7.670748,-0.961207,-9.022187,4.022674,-2.747044,0.630755,-8.824092,8.440104,5.135361,-8.760448,-6.643680,-1.548763,-1.960044,-1.851759,-2.264165,-4.975616,-3.517814,-3.228283,-9.472346,-3.240971,-3.415435,-4.288267,8.995479,1.982584,5.754974,-8.088332,4.013367,-9.973759,6.280080,2.727109,6.946914,-0.103477,9.705775,-1.295052,9.450432,-6.001208,-1.655261,-3.770393,9.538910,-5.957537,3.636458,-5.212478,6.531463,8.944072,-0.893446,-4.991319,-1.179294,0.623437,-7.519082,0.195600,8.996932,4.284780,-6.953381,0.840916,6.779830,0.408265,-2.548932,7.638963,-0.367055,1.655007,4.877721,8.391258,-5.478944,6.264112,-7.901651,-5.263572,9.859430,-2.632838,5.716299,5.341276,9.347790,-5.720442,-1.034775,-6.508862,-9.865050,5.345344,0.097687,5.775650,-7.651879,-1.758482,4.155063,-5.977344,-9.365256,5.789683,-2.689937,-2.404945,8.220917,-6.531266,-7.896371,-1.931078,-6.489086,9.550505,-8.607595,4.209116,3.423947,-8.986850,9.230472,0.222071,9.805489,2.504988,7.950912,2.682748,-9.327581,5.070284,-1.955404,9.219385,2.735794,2.533849,6.763013,-6.836904,-0.609901,-6.732228,9.060981,-7.749771,-7.703928,5.543532,5.239448,-7.293775,-0.164306,6.020133,9.930177,6.593193,7.373137,6.903320,8.289098,3.133332,-8.334043,9.162302,-2.306764,-6.261549,-8.224358,-1.064420,-6.052307,1.287841,-3.638233,-8.119735,-5.419341,8.414897,-8.518443,-9.251374,-4.507197,1.702866,9.749126,7.817718,-9.477385,-4.269073,0.032355,7.464479,6.133280,-6.527699,7.741661,-6.342400,-6.208632,0.609152,-4.349904,-5.549571,1.628650,1.451331,5.442412,-0.426856,-2.458203,-2.847261,-6.201472,5.558084,-8.105347,7.370734,-9.251289,7.897511,2.235873,4.294281,6.616926,6.039804,-1.051091,6.346703,1.752365,7.405746,2.548648,1.259406,6.559825,3.226369,-0.152649,3.952718,-0.420094,0.292784,1.812598,8.440997,-1.804381,-8.831961,9.585889,-4.070786,9.829831,-7.942084,4.954557,-4.549920,9.699108,3.114498,7.710436,-7.321945,7.118328,9.288189,0.152457,9.340659,0.942924,-8.291872,-3.929139,2.290961,-9.365599,-3.455030,1.061534,4.988225,-7.774761,-5.712338,0.954046,-9.040311,-1.472568,-6.047540,-5.213733,-9.758313,6.073480,0.071228,7.349231,6.883099,-8.910632,-4.449210,8.652081,-4.580783,-1.318283,7.503131,-2.133501,-9.754990,1.158574,-5.845009,4.025585,-6.984240,9.482184,-1.135669,-7.689087,-5.617035,0.063104,7.983089,-7.608967,-4.404255,-7.810996,6.992932,7.669890,-0.789634,-2.961791,2.763057,6.486202,-1.853216,5.008553,0.897572,-6.947176,-6.099630,-0.058826,-8.635062,-2.839677,4.624787,-7.007643,6.543539,8.250021,3.489083,-1.714675,8.495612,-6.404643,-3.293709,-1.186792,6.903522,6.025257,-0.529983,7.856023,8.396021,7.058227,9.984592,1.588888,-0.757323,-4.176215,-3.301470,-4.229276,-7.180607,9.176881,-8.812863,-1.981087,-2.738105,7.929631,-0.889525,-4.375765,-6.423888,-1.854570,2.788341,-1.142739,-8.807447,5.992504,7.287655,-9.841207,-7.693731,-1.441893,7.267356,9.798745,8.381088,-6.635677,9.405664,8.040923,4.372319,6.187505,6.512960,-5.279807,-1.110301,-7.019424,5.401823,2.741465,-9.158274,-8.847505,5.169413,2.901649,-1.307823,-0.224302,-5.969280,-2.798780,9.861496,9.993452,8.656180,8.668980,5.485041,-0.137136,-9.440038,3.138074,1.326379,1.324332,2.367900,3.486170,-1.232306,7.009383,9.884211,-0.098008,-5.749996,2.057068,8.104020,0.725088,-6.161938,3.959844,-3.533855,3.370895,-5.919129,-2.853410,-2.938966,-6.648419,5.167347,1.782870,7.695454,1.755374,2.553346,0.578535,9.700891,-7.380935,-0.797122,6.845582,-5.150940,1.418431,4.658187,-6.409748,7.360161,-6.610330,-3.015149,-6.927120,-7.985120,3.466347,-1.092601,-0.156761,-3.113078,-4.847111,2.981784,8.886373,-3.955848,-5.067153,-8.229060,6.365911,3.255499,-6.822464,-1.772536,8.650650,-0.873090,-3.530507,-9.295473,5.176575,5.253476,1.987251,4.981623,-3.017887,9.265673,9.539984,1.534771,-9.272902,-2.546458,4.085150,7.667746,4.203628,9.991357,-8.007609,8.801117,-9.721556,9.558716,0.559617,-3.893210,5.610264,-7.324048,7.237283,9.567898,2.277657,-4.874807,-7.474593,2.837508,-3.891664,-2.690702,-7.341903,-5.577927,-2.958232,0.080855,-9.899096,-2.144414,2.169191,-7.816933,-0.460068,-4.132657,7.059006,-0.334942,-8.560206,-2.955809,2.252312,-1.664416,-0.540391,-9.388690,-0.631466,-0.280377,-0.224793,-0.249769,8.779264,-2.838945,4.388154,8.779311,-3.569006,-7.196900,-4.848846,4.497204,3.845770,1.357288,-2.124862,6.665468,0.752331,5.264522,-6.147951,-4.969181,-8.304253,4.278661,2.185916,-3.106765,3.262746,1.930688,0.092701,3.648854,-7.546376,-4.536658,-9.099447,4.760134,2.992979,3.169252,5.994563,-0.563494,0.199136,0.802000,-7.709889,-6.222059,-0.595689,2.173495,-1.986012,5.050921,-8.416837,9.288167,2.961202,-8.741321,7.867638,-9.837773,6.447833,-5.356927,-5.743479,-7.690003,2.501873,-7.062685,-9.508535,-4.798084,-0.585555,8.844500,9.120772,-1.595703,4.994831,-2.547808,-4.503178,2.544765,8.646488,-2.590608,8.679229,-1.149142,1.190910,0.567423,9.162397,-5.307690,5.581013,-1.118027,-1.488510,9.638302,9.904111,-7.679202,-2.418565,-2.829235,5.123601,0.863639,1.886092,-6.838062,4.153431,-0.673838,0.728796,-5.704665,-5.084359,0.906447,4.858131,-7.127146,-2.996300,1.573673,2.760230,-5.999082,-1.678314,3.097975,-8.385713,8.148741,4.390432,-0.159355,-3.208518,4.712820,6.457384,-1.119942,2.154826,9.257881,7.632455,-8.389510,-1.826162,-9.313895,4.499173,-1.650046,4.500054,8.270078,6.166832,6.694811,-9.621727,-7.475182,9.855578,4.917031,-7.888138,6.083006,0.649052,-3.869848,-2.085625,-1.974892,-3.218330,0.292815,-5.173227,4.151629,-9.381490,-5.518597,8.788367,-7.609336,0.970692,-3.019869,0.373779,8.015121,3.182169,-6.471841,-4.335184,5.288745,-1.566366,-6.692166,4.462799,-9.919698,-7.591634,0.408029,-2.524161,4.263946,3.535838,3.856220,1.653639,1.838423,-5.510245,-4.110866,-7.957202,9.695423,8.708232,-1.529776,4.839128,-6.251285,3.615844,-3.051487,-0.598912,7.244334,8.514760,-2.411877,1.133869,5.191656,2.878328,1.909407,-6.071442,-1.189278,-7.390382,-0.826527,-0.303241,-0.679437,-5.479363,9.732724,-0.971350,-8.372697,2.270049,-0.516304,-3.184282,-0.858970,5.041354,-2.463400,-3.750668,1.352758,6.920261,2.223150,3.178324,3.941186,-5.875470,-2.763075,0.650720,-8.072512,0.642416,1.064167,-4.131903,8.198471,5.495015,9.175136,5.063535,9.462003,1.679049,-0.405154,-8.631626,-0.429047,-5.344532,2.915007,-2.722222,-6.807134,-9.450618,0.551272,9.559957,-1.264365,-6.801326,-5.771969,3.288385,-7.360712,-5.252874,1.499163,-8.125416,5.746011,-9.298327,-4.340936,-3.345821,-8.750090,6.305736,-0.931734,-2.029964,1.100447,-3.284641,-3.556900,9.665848,-6.289833,4.809667,-1.875430,-8.827424,-7.382737,-1.385361,6.298963,7.824242,5.911198,2.693875,1.992194,8.094155,5.671771,1.964723,1.069789,-0.706083,-5.303827,5.236102,-0.350137,5.953347,-6.531552,4.695508,-7.155637,0.443665,7.315746,3.170014,-7.477503,-2.992399,2.980995,-8.335396,-9.345387,-2.859575,-6.128061,-0.706178,3.009022,-5.036315,6.051434,1.557527,-2.441473,-3.983529,-9.852641,0.256069,-4.940948,-8.517591,4.115045,-7.559380,5.960380,-6.160561,-5.382115,-1.089872,-0.037084,9.440601,4.665032,-8.255401,2.651962,7.418162,-8.434401,-9.901428,-1.045342,-1.212760,1.187063,-4.473213,-6.878580,4.338896,9.073029,-9.437205,-9.704549,8.584923,8.345445,5.501237,-2.286339,-1.445515,0.293307,5.458096,0.689239,9.048908,-9.522896,0.803652,8.616839,1.318148,4.995083,-0.656516,3.179369,9.374858,6.443505,4.941873,6.780840,5.993299,0.160054,3.228874,-8.191917,5.568726,-6.745169,0.697525,2.672800,-6.277591,9.967551,-4.402469,-1.471037,0.714791,5.499727,-0.701709,-9.307577,1.518826,-8.116188,-9.174007,-2.722956,-1.646555,-0.442760,-1.465581,-8.515636,-2.391176,4.259838,8.304680,-2.309742,-3.297808,9.382084,2.008327,-5.932759,6.059165,8.588878,7.781322,-4.605088,-3.061112,-1.747330,-5.892402,6.361475,-6.080080,-1.740987,-7.204780,-5.409054,-4.441302,9.287352,6.936723,-3.333675,1.740368,-0.520758,0.694803,-0.962078,5.722819,-5.249401,8.284417,0.369326,9.669823,0.794955,-4.579669,-8.104250,-6.213880,-9.568889,5.775522,-8.448750,-1.778240,0.396062,0.194593,9.331896,-3.590669,8.740353,6.984918,4.513648,-2.903042,0.817352,-2.679051,1.628091,4.548709,-6.127608,-2.805892,6.288316,0.337036,0.490346,-5.583966,-0.069162,-2.036714,1.071305,-7.228698,-6.098661,5.824086,6.820797,1.564051,-8.048569,0.797872,6.232633,-0.873470,-7.992084,-6.222393,-3.882680,3.633210,9.203205,-6.298926,6.655835,-7.353951,1.095982,9.399871,1.616393,3.598635,-5.738435,3.706808,6.213739,-0.398738,3.624671,8.378659,-2.916726,-7.229199,-0.745815,-9.469154,9.393794,-3.482931,-4.195927,-6.418966,-7.559777,-9.334710,-4.287033,2.045450,5.242444,0.521189,-0.899156,-3.476563,3.037026,-7.804351,-1.675053,-5.587627,8.931081,-7.451790,-3.413058,-7.957177,5.166956,7.731136,-9.777691,0.649620,2.834062,-8.756240,6.283324,-4.344457,-9.252658,-7.483186,3.377102,-3.596747,8.410304,-3.792376,2.973532,4.546665,2.990682,-4.313940,2.617235,3.519838,4.444567,-4.052647,9.795702,1.512214,1.989141,-2.883376,-6.478977,-6.408136,1.795312,-5.104578,9.477355,8.283500,-5.879459,-7.996559,5.532063,-7.382495,2.773596,7.258734,3.972567,-8.675279,9.444374,0.118012,-6.701563,1.435493,5.756762,-3.989437,5.405514,0.976778,-6.126593,1.664878,-1.269702,-4.716578,-9.396977,-8.059202,-8.118764,6.755468,1.308280,-3.154946,-0.997746,7.045689,4.002253,-4.769240,-5.003579,-9.344268,2.892407,-8.346490,-5.106316,7.212422,0.354097,-3.857933,1.363751,8.571053,5.228984,-7.401529,9.316771,4.323833,1.283440,-4.584098,2.199664,-4.367644,-9.909868,-5.029370,4.013282,-3.348007,7.567459,2.533457,-6.618178,6.388026,-0.964478,0.108459,-1.035043,-3.410041,-4.030631,5.731034,4.207074,-5.868816,-6.203716,-4.054379,-5.532487,-2.972417,-9.829069,-2.982540,-7.756506,-5.666069,6.825850,0.408647,-6.059837,-4.557783,-9.511306,-0.172674,8.104272,7.446704,-8.253233,-6.848569,-6.281670,-3.130179,-8.656452,9.137815,1.204733,1.715841,9.599527,-9.193943,-3.390174,-2.127380,-3.367653,-1.658162,5.283997,9.568399,-9.288852,4.876402,7.517559,2.463795,-8.004896,-2.657822,-0.443344,5.317865,-1.554676,1.880232,-5.475373,6.250793,-6.879627,-6.504173,-1.009730,9.502717,6.932911,5.810397,6.033507,-7.144317,-2.877650,1.550609,-2.418823,-4.988390,-6.073994,7.141520,-9.007495,0.406019,2.410350,-4.074155,5.405649,-3.725189,-0.963741,2.363767,-1.908583,-7.459468,7.627158,1.045592,-5.256344,-4.110134,6.676958,2.413795,5.560644,-9.841669,-2.735929,-7.281027,8.582269,2.021239,-6.077559,5.183921,-1.418517,7.816422,1.971943,-5.978026,6.224793,-5.135974,-2.327513,-2.472597,-4.558826,-4.181161,7.165426,-5.632769,5.929130,5.661870,8.205772,-0.071879,-8.167918,4.686589,-8.986041,7.403079,-3.245446,-2.037885,8.571574,-8.742245,-8.012185,-4.049135,8.072201,-4.501102,-2.235487,9.311575,-5.756717,-3.498427,7.648422,-1.546389,1.085143,6.664270,6.596963,-9.456298,-7.865209,-6.535304,-8.492353,1.271933,4.611137,-5.968260,1.111142,1.000657,-8.068735,-0.806341,6.501026,5.624048,-7.179669,5.887556,5.406078,-2.648591,-9.325910,-1.174018,3.995846,8.274625,2.669754,3.347751,2.547709,-4.214397,-0.111273,8.769956,8.032552,-7.143216,-3.276326,3.287619,3.142686,1.283063,-6.809711,-8.162178,9.093157,-2.169974,-7.544413,9.835066,6.554861,7.352724,-7.466754,7.018468,4.516027,3.154775,4.320248,9.673531,-8.050108,1.623128,-1.428577,6.893919,7.544730,-5.894798,1.904690,4.776729,5.761859,-7.554719,6.631244,5.120343,8.436484,-5.192069,4.166200,8.937790,4.248498,-8.023108,2.070246,8.021957,-0.763669,-1.822032,-5.275133,-8.251339,-2.508021,4.865000,-2.658143,-3.189762,-2.608626,0.539571,0.168960,5.736483,9.892247,-5.092273,7.038562,9.068781,-6.187357,5.921385,9.569627,-9.772234,-7.890377,3.137472,9.805392,-9.601503,0.490939,6.683777,0.216352,8.196029,9.091605,7.477718,3.261611,-6.401399,-5.471167,-5.232290,2.877997,1.356107,8.038869,-0.900478,-5.450260,-6.592018,-4.030152,-1.016860,-5.045223,-7.922499,-4.622825,1.312684,-7.901266,8.162290,2.928840,-4.025514,-4.671248,3.407804,5.666466,-9.682871,-0.961115,6.633337,9.826126,-5.062629,3.568155,9.230850,-9.056483,2.283112,-3.620399,6.964768,1.131316,-4.616447,9.860290,6.243365,4.807226,7.923400,-5.102149,3.200611,-3.879731,9.671236,-0.672016,6.074844,3.377371,-9.876980,3.357614,-4.558211,0.108968,8.819269,-4.148545,9.478740,-9.213192,1.606668,4.916299,-0.428795,3.822889,9.799760,-9.016735,-7.958160,-4.349302,4.751035,2.082635,-9.279695,-7.721887,4.968043,-4.266725,7.526636,9.950289,0.053411,0.633625,2.665896,9.105242,-1.368885,5.539575,-2.526880,0.729212,-5.224661,7.570053,-0.348242,-9.078012,-7.703772,-6.244865,1.508685,-0.567678,4.922183,1.687230,-3.631964,1.084662,-4.868430,-6.654783,-3.801122,6.360811,-1.174793,8.949398,-3.876871,-5.895231,-3.258945,-5.518790,7.025181,-9.495080,-4.316080,1.030957,0.148263,-7.626321,8.846275,-8.575418,-3.143964,-5.960990,-8.593667,9.211339,8.523477,7.205354,1.681213,-5.017678,-6.355206,2.004165,-4.722224,-0.139889,6.417226,4.676810,6.762254,2.788463,5.929059,-5.132027,4.415616,8.608599,1.083263,7.864122,-7.751156,8.366867,-0.262990,-7.246059,2.748935,-0.564126,1.862737,-7.945346,4.231500,-0.467400,3.998238,-9.075766,9.111363,-6.786367,-7.578219,7.890011,7.851073,-6.475723,4.942157,-8.634800,1.922237,0.431605,-0.163781,6.331866,7.411528,9.814270,-7.388836,-3.520115,4.297088,-3.276363,-2.654520,-9.069159,1.962872,9.883599,6.868997,9.448854,7.651706,1.458643,-8.126827,3.483706,2.329679,7.058088,4.475265,7.781913,-2.964832,-3.630521,9.780410,-9.742885,4.983296,0.574669,7.356710,2.889225,3.235341,-9.066238,8.946206,-0.729179,-0.193101,-0.792693,9.425268,-5.697270,-0.835496,-5.217957,-7.414057,-9.110126,-6.635074,-6.296288,-4.130703,-2.707609,7.756380,-8.060094,2.906182,7.220221,-3.338850,9.888258,4.456806,0.306322,-3.161106,3.209664,-4.133483,6.151506,3.788818,-4.293366,0.099407,6.844811,3.789671,-3.611711,-4.667802,9.256062,6.157325,-5.873102,-1.225534,-5.784956,9.863528,6.506895,7.741956,4.511408,3.337058,8.857799,-8.930776,5.624947,-2.611465,-8.622823,9.099856,5.081702,-1.481444,8.257798,9.136095,-2.526039,8.219061,-0.427515,-9.910396,4.127003,3.795911,-0.871339,4.497580,1.511613,8.482858,5.974826,9.075327,-0.050777,-6.966840,3.416205,1.912983,3.616561,0.679375,-7.907117,8.712080,0.104200,-8.550467,-2.953839,1.121249,4.048679,-5.559058,2.069813,2.164940,4.636098,7.568957,1.640765,-8.347730,3.922462,-8.455110,4.213735,5.233412,-9.458544,0.397978,-0.722339,-8.444076,5.404876,-4.574030,8.057975,-2.082062,1.946040,1.306942,6.860049,4.793675,3.393058,-2.489804,3.834501,-6.759870,5.646512,2.997530,-0.545656,8.839347,-9.411131,2.291063,7.219251,-7.101912,9.282708,7.704877,-2.776053,-6.915470,-9.259304,-7.819278,-3.959885,4.484648,-2.132910,4.863939,-8.577439,6.982983,-3.628878,-0.168404,-3.558620,4.179453,-2.693604,-1.598267,0.350673,0.033117,9.632504,-7.517571,-0.584218,2.777580,-7.015526,3.262623,6.209739,7.025390,1.783620,8.176081,-3.218465,-1.022329,2.941748,2.405367,9.568832,-7.561525,1.776791,-8.182676,-1.369202,-8.589912,2.331407,-4.293063,-8.281948,-4.114565,5.724550,-0.706087,-8.763683,0.491024,4.528550,2.898448,9.818751,-0.111655,-6.718248,-4.805711,-4.400090,0.027548,-2.505001,1.584189,0.406467,5.866494,5.985060,-4.431178,-3.269895,-8.841618,4.752231,-3.308585,2.442417,6.374256,1.449396,0.444624,-6.646401,2.680485,-4.535979,-6.031225,4.551820,-9.951242,0.433547,-2.083485,-6.787041,3.488374,-7.553900,-1.897802,-4.695505,8.208849,0.604564,-0.423873,7.501495,0.344508,-4.999420,0.844935,6.066665,-8.183306,0.039012,-0.055702,4.520242,7.420419,8.794441,-6.728351,8.105167,2.566203,-2.851384,-1.305263,-9.794732,3.289403,8.496077,-5.329091,-5.083674,2.357342,1.550622,-6.270655,-6.762813,1.317460,5.641903,8.065303,6.946483,-6.117399,-2.600236,-2.552185,-1.507954,5.307186,-8.576037,-1.869965,6.774267,-4.193126,5.466728,6.020561], dtype = "float64")#candidate|3417|(2160,)|const|float64
call_3415 = relay.TupleGetItem(func_789_call(relay.reshape(const_3416.astype('float64'), [16, 9, 1]), relay.reshape(const_3417.astype('float64'), [16, 9, 15]), ), 1)
call_3418 = relay.TupleGetItem(func_792_call(relay.reshape(const_3416.astype('float64'), [16, 9, 1]), relay.reshape(const_3417.astype('float64'), [16, 9, 15]), ), 1)
func_2637_call = mod.get_global_var('func_2637')
func_2643_call = mutated_mod.get_global_var('func_2643')
var_3420 = relay.var("var_3420", dtype = "float32", shape = (792,))#candidate|3420|(792,)|var|float32
var_3421 = relay.var("var_3421", dtype = "float32", shape = (6, 2))#candidate|3421|(6, 2)|var|float32
var_3422 = relay.var("var_3422", dtype = "bool", shape = (1274,))#candidate|3422|(1274,)|var|bool
call_3419 = relay.TupleGetItem(func_2637_call(relay.reshape(var_3420.astype('float32'), [8, 9, 11]), relay.reshape(const_3417.astype('float64'), [2160,]), relay.reshape(var_3421.astype('float32'), [1, 12]), relay.reshape(var_3422.astype('bool'), [1274,]), ), 7)
call_3423 = relay.TupleGetItem(func_2643_call(relay.reshape(var_3420.astype('float32'), [8, 9, 11]), relay.reshape(const_3417.astype('float64'), [2160,]), relay.reshape(var_3421.astype('float32'), [1, 12]), relay.reshape(var_3422.astype('bool'), [1274,]), ), 7)
output = relay.Tuple([call_3403,call_3415,const_3416,const_3417,call_3419,var_3420,var_3421,var_3422,])
output2 = relay.Tuple([call_3404,call_3418,const_3416,const_3417,call_3423,var_3420,var_3421,var_3422,])
func_3434 = relay.Function([var_3420,var_3421,var_3422,], output)
mod['func_3434'] = func_3434
mod = relay.transform.InferType()(mod)
mutated_mod['func_3434'] = func_3434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mutated_mod.get_global_var('func_3434')
var_3436 = relay.var("var_3436", dtype = "float32", shape = (792,))#candidate|3436|(792,)|var|float32
var_3437 = relay.var("var_3437", dtype = "float32", shape = (6, 2))#candidate|3437|(6, 2)|var|float32
var_3438 = relay.var("var_3438", dtype = "bool", shape = (1274,))#candidate|3438|(1274,)|var|bool
call_3435 = func_3434_call(var_3436,var_3437,var_3438,)
output = call_3435
func_3439 = relay.Function([var_3436,var_3437,var_3438,], output)
mutated_mod['func_3439'] = func_3439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3195_call = mod.get_global_var('func_3195')
func_3197_call = mutated_mod.get_global_var('func_3197')
call_3453 = relay.TupleGetItem(func_3195_call(), 0)
call_3454 = relay.TupleGetItem(func_3197_call(), 0)
func_292_call = mod.get_global_var('func_292')
func_296_call = mutated_mod.get_global_var('func_296')
const_3463 = relay.const([-5.140426,4.047063,8.928557,4.292424,4.368410,-0.603255,0.083013,-6.185064,-5.845617,-0.011496,-0.858465,2.830588,9.870949,1.146616,7.113671,-4.600446,4.354563,1.220860,6.422467,-9.830852,6.200752,-8.274822,5.693906,-8.963511,-5.751791,2.577439,-4.920686,-5.982792,-9.029054,-0.148397,-3.845728,-4.132578,-4.761577,-3.840960,-4.938661,2.851780,-8.634120,-0.977935,-2.427751,8.690869,-8.754333,4.930390,-1.505797,-8.858212,-4.520599,-2.956958,7.561627,-2.135715,-4.173326,3.639873,-9.544887,8.292065,4.975896,-9.053136,-4.170328,-0.045497,7.308853,5.398685,9.103832,-3.438306,0.214797,-6.760307,7.635077,-5.753846,-3.713547,-3.733202,-7.331628,9.050174,-8.664374,-9.436491,4.950469,7.759131,-8.408833,-9.144845,-0.472063,4.477991,5.709980,9.593783,9.909927,7.512596,5.056716,-8.218718,2.235074,9.563389,6.181994,-3.128724,-8.613512,5.495671,5.292917,-7.067109,1.098503,9.796372,-9.657635,0.864106,-7.865190,6.206423,2.599244,-9.925869,2.282186,-1.882020,4.556361,3.374840,-2.298185,-1.024331,2.542174,2.184364,8.478242,8.772434,3.100035,7.190886,3.251539,-3.870053,-6.588143,0.834396,-5.339860,-6.018729,6.614136,-8.724742,0.084288,3.275251,6.021681,2.080759,3.982086,-5.756327,1.931105,-3.277817,-3.114050,5.866561,3.320474,-1.655486,-5.208659,2.500053], dtype = "float32")#candidate|3463|(132,)|const|float32
const_3464 = relay.const([False,False,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False], dtype = "bool")#candidate|3464|(1274,)|const|bool
call_3462 = relay.TupleGetItem(func_292_call(relay.reshape(const_3463.astype('float32'), [3, 4, 11]), relay.reshape(const_3464.astype('bool'), [1274,]), ), 1)
call_3465 = relay.TupleGetItem(func_296_call(relay.reshape(const_3463.astype('float32'), [3, 4, 11]), relay.reshape(const_3464.astype('bool'), [1274,]), ), 1)
uop_3466 = relay.atanh(call_3462.astype('float64')) # shape=(3, 4, 11)
uop_3468 = relay.atanh(call_3465.astype('float64')) # shape=(3, 4, 11)
var_3480 = relay.var("var_3480", dtype = "bool", shape = (1274,))#candidate|3480|(1274,)|var|bool
bop_3481 = relay.greater_equal(const_3464.astype('bool'), relay.reshape(var_3480.astype('bool'), relay.shape_of(const_3464))) # shape=(1274,)
func_2844_call = mod.get_global_var('func_2844')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_3488 = relay.TupleGetItem(func_2844_call(), 0)
call_3489 = relay.TupleGetItem(func_2846_call(), 0)
func_169_call = mod.get_global_var('func_169')
func_173_call = mutated_mod.get_global_var('func_173')
call_3500 = func_169_call(relay.reshape(const_3464.astype('bool'), [7, 14, 13]), relay.reshape(const_3464.astype('bool'), [7, 14, 13]), )
call_3501 = func_169_call(relay.reshape(const_3464.astype('bool'), [7, 14, 13]), relay.reshape(const_3464.astype('bool'), [7, 14, 13]), )
output = relay.Tuple([call_3453,const_3463,uop_3466,bop_3481,call_3488,call_3500,])
output2 = relay.Tuple([call_3454,const_3463,uop_3468,bop_3481,call_3489,call_3501,])
func_3512 = relay.Function([var_3480,], output)
mod['func_3512'] = func_3512
mod = relay.transform.InferType()(mod)
mutated_mod['func_3512'] = func_3512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3513 = relay.var("var_3513", dtype = "bool", shape = (1274,))#candidate|3513|(1274,)|var|bool
func_3512_call = mutated_mod.get_global_var('func_3512')
call_3514 = func_3512_call(var_3513)
output = call_3514
func_3515 = relay.Function([var_3513], output)
mutated_mod['func_3515'] = func_3515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3195_call = mod.get_global_var('func_3195')
func_3197_call = mutated_mod.get_global_var('func_3197')
call_3534 = relay.TupleGetItem(func_3195_call(), 0)
call_3535 = relay.TupleGetItem(func_3197_call(), 0)
output = call_3534
output2 = call_3535
func_3548 = relay.Function([], output)
mod['func_3548'] = func_3548
mod = relay.transform.InferType()(mod)
mutated_mod['func_3548'] = func_3548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mutated_mod.get_global_var('func_3548')
call_3549 = func_3548_call()
output = call_3549
func_3550 = relay.Function([], output)
mutated_mod['func_3550'] = func_3550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mod.get_global_var('func_2942')
func_2943_call = mutated_mod.get_global_var('func_2943')
call_3581 = relay.TupleGetItem(func_2942_call(), 0)
call_3582 = relay.TupleGetItem(func_2943_call(), 0)
output = relay.Tuple([call_3581,])
output2 = relay.Tuple([call_3582,])
func_3583 = relay.Function([], output)
mod['func_3583'] = func_3583
mod = relay.transform.InferType()(mod)
output = func_3583()
func_3584 = relay.Function([], output)
mutated_mod['func_3584'] = func_3584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_3597 = func_3548_call()
call_3598 = func_3548_call()
output = call_3597
output2 = call_3598
func_3611 = relay.Function([], output)
mod['func_3611'] = func_3611
mod = relay.transform.InferType()(mod)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mutated_mod.get_global_var('func_3611')
call_3612 = func_3611_call()
output = call_3612
func_3613 = relay.Function([], output)
mutated_mod['func_3613'] = func_3613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_3704 = relay.TupleGetItem(func_3583_call(), 0)
call_3705 = relay.TupleGetItem(func_3584_call(), 0)
func_1501_call = mod.get_global_var('func_1501')
func_1504_call = mutated_mod.get_global_var('func_1504')
const_3708 = relay.const([[-8.456469],[1.655189],[6.830555],[-3.538056],[0.135297],[5.865883],[-7.185373],[-1.654784],[-8.908738],[-6.243443],[5.566383],[4.912546],[4.269960],[3.652028],[-1.530584],[-7.110167],[8.160660],[-7.256153],[6.762202],[-8.214456],[1.925904],[-8.213837],[-6.994999],[-6.542880],[4.451837],[6.599632],[-8.657958],[0.040746],[8.982202],[-8.529360],[-7.947308],[-1.711877],[-4.258333],[-7.843180],[5.666398],[-4.463513],[-3.085918],[-8.428273],[7.491473],[-9.974476],[9.165076],[-4.443314],[-4.168440],[0.233622],[-7.872198],[1.607785],[-4.514505],[-0.066266],[3.364055],[-8.808613],[5.130630],[2.507703],[4.786670],[-0.024940],[2.905366],[4.449845],[-8.951883],[-8.596594],[0.209017],[-7.263304],[7.802314],[-2.126927],[9.427638],[4.249311],[-1.544501],[1.301156],[-2.874008],[5.051979],[-8.996416],[2.416298],[-9.520214],[-4.345018],[-3.833474],[-9.965295],[-1.798590],[2.097248],[-6.069913],[0.576614],[-7.829094],[-0.993692],[1.812984],[8.250969],[2.894290],[8.619283],[-8.431049],[6.437620],[-2.699449],[-1.706532],[-6.508791],[-5.334813],[0.863491],[6.054627],[-2.462926],[-0.182408],[0.338773],[9.380557],[-5.870099],[-8.481991],[8.999139],[-1.180901],[-7.922120],[6.285047],[8.391954],[0.228532],[-1.989653],[8.059124],[7.822415],[6.776924],[6.024870],[7.029815],[2.942408],[4.281373],[1.087609],[1.383326],[-6.670793],[-2.142411],[3.404719],[2.517223],[7.792474],[-7.642476],[-4.561105],[-0.047228],[-8.878579],[9.908892],[2.824480],[-8.424392],[3.679167],[-6.756546],[-2.707704],[-2.400553],[6.734509],[1.478716],[-0.620088],[-0.064359],[-0.226273],[8.404808],[-6.528037],[-1.240823],[8.451884],[-2.582172],[-6.888868],[4.948174],[9.747686],[-3.106816],[9.707881],[-0.462034],[-8.126215],[3.097811],[-4.570871],[-4.633658],[6.132970],[0.971632],[5.256822],[-2.704607],[-0.414882],[6.886040],[-9.501859],[-6.861114],[1.117382],[4.113521],[8.454398],[2.181572],[8.757815],[-7.587754],[-8.523239],[-1.526777],[-7.354587],[3.751952],[-3.928208],[1.814350],[1.774685],[1.159264],[9.340497],[9.729696],[8.394923],[-9.134099],[-5.851402],[-8.668865],[-0.473687],[7.900855],[0.877476],[-7.679730],[0.001552],[-5.189007],[-1.264816],[-3.120736],[-3.889524],[7.991102],[-9.366993],[-3.774470],[9.467992],[-9.670811],[3.390397],[8.889391],[-8.609447],[-4.676985],[4.385239],[2.438628],[8.957846],[-3.082773],[0.139518],[5.939423],[-4.772855],[-6.280495],[2.899505],[-7.545711],[6.417003],[-5.021428],[6.614232],[-3.265082]], dtype = "float32")#candidate|3708|(210, 1)|const|float32
call_3707 = func_1501_call(relay.reshape(const_3708.astype('float32'), [1, 15, 14]))
call_3709 = func_1501_call(relay.reshape(const_3708.astype('float32'), [1, 15, 14]))
output = relay.Tuple([call_3704,call_3707,const_3708,])
output2 = relay.Tuple([call_3705,call_3709,const_3708,])
func_3711 = relay.Function([], output)
mod['func_3711'] = func_3711
mod = relay.transform.InferType()(mod)
output = func_3711()
func_3712 = relay.Function([], output)
mutated_mod['func_3712'] = func_3712
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3728 = relay.const([[[-4.358779,5.310861],[-0.839856,-4.797900],[8.207163,4.504776],[-7.806185,-9.997466],[8.323321,7.779280],[8.473117,6.210313],[-3.488596,8.721118],[-3.044979,3.753466],[6.497204,-7.083705],[1.838487,-5.632680],[8.765459,-0.215844],[2.156664,-4.641585],[-9.487696,8.842773],[-0.411185,-4.713254]],[[-1.233926,6.022453],[-5.234143,9.740738],[1.595247,5.674370],[-6.195718,-6.561978],[-7.185260,3.665497],[5.257521,-7.391352],[-6.685166,6.755396],[-1.508842,1.025534],[5.610808,6.679104],[5.174490,-7.475455],[8.369899,0.058498],[5.688490,3.793457],[6.098303,6.325753],[9.688450,-6.526151]],[[7.130520,-0.745624],[9.357349,-8.922007],[-0.482534,0.951323],[-9.456926,-4.039239],[0.955442,-2.432437],[4.585060,-0.522685],[-9.195629,-9.427292],[-8.486619,2.311931],[-4.171704,9.785699],[0.781535,1.247505],[-7.713007,-7.619858],[-7.218675,-6.555561],[-7.409686,-7.517950],[-4.656912,-1.551734]],[[-2.292198,-3.199273],[1.723530,0.363041],[4.204671,-8.928779],[-2.368566,-3.370987],[-5.539139,-3.168044],[-0.853049,-6.341347],[9.907637,-2.196269],[-7.486859,-7.878659],[1.742874,5.923101],[7.772738,7.558699],[8.901298,6.695431],[6.224718,-2.713485],[-8.789698,-2.541007],[9.808240,-7.126623]],[[5.151225,7.992819],[6.938188,-1.836334],[-9.428897,-1.580526],[-8.917888,6.897956],[3.917969,-7.375732],[-2.518907,-2.822896],[4.458350,6.410555],[2.695777,2.306858],[1.853142,-2.429376],[-8.115679,1.963699],[-6.919851,-5.421929],[8.467107,0.675097],[1.799895,3.113700],[-3.458459,-2.120596]],[[-4.540883,9.817620],[5.047488,-9.692018],[3.541639,-2.479244],[-9.620403,-8.897240],[5.404069,7.282829],[-1.642782,7.691867],[-7.053765,-1.476673],[-7.416001,-5.977931],[-7.244965,-9.028008],[-7.358347,-6.277483],[-4.647978,-6.150012],[1.174817,4.134250],[9.573413,0.770715],[0.743749,0.749665]],[[-6.950194,8.087901],[3.663484,2.254399],[2.074870,6.879924],[5.659999,3.408385],[-9.471232,-8.148009],[-5.004202,-4.293201],[-1.498448,-1.473394],[-4.667363,-3.168589],[5.380862,9.354916],[3.274368,-0.480939],[0.021556,6.595885],[-6.223206,-7.063880],[-0.884602,-5.800351],[-8.252649,-1.565576]],[[-5.385392,3.486366],[5.334560,7.449950],[8.887205,0.741549],[-0.146925,3.320305],[8.222413,-3.725575],[6.218279,3.014302],[1.451311,-3.245420],[-4.927615,-2.383532],[2.291129,-8.656149],[0.152847,1.363629],[-5.159027,-9.751195],[4.588454,-4.052624],[-7.911901,-8.197024],[5.795124,5.259478]],[[3.690307,9.096491],[-2.688394,-9.852841],[7.599071,-4.959204],[4.590953,8.582277],[-7.581168,-4.071520],[7.108879,0.942848],[0.424100,9.110203],[9.468858,2.892279],[-1.872566,-3.699749],[-0.185581,0.640059],[5.284394,6.418066],[1.782676,1.575669],[-5.241863,8.619588],[-6.816923,0.948749]],[[-0.224720,4.996825],[1.524568,-1.465898],[0.357821,-5.710971],[-5.888211,8.529397],[-7.451107,-8.842117],[2.944644,6.497832],[3.185336,6.993808],[3.843047,0.371645],[5.849647,7.339217],[7.945907,-3.527147],[8.640887,-3.468866],[-2.408283,2.718029],[-7.408239,7.317150],[5.277923,5.973138]],[[1.954211,6.757532],[9.308458,3.383840],[5.867999,5.159052],[-4.923172,8.786305],[4.514908,7.550186],[4.882547,-0.953281],[-3.436135,3.074685],[-4.794195,-4.463989],[7.705140,6.968237],[-9.618459,9.483920],[6.729793,-2.460340],[-2.287260,0.043388],[-1.498462,-7.977094],[-9.517565,2.016034]],[[-7.497359,-8.473538],[-1.261831,-7.981599],[-4.342713,-4.928551],[-4.700097,-6.546528],[3.186110,-9.111337],[-2.290120,3.250318],[-4.632451,-3.451717],[-6.195808,-1.561019],[-2.300148,3.840767],[3.109496,-8.224818],[8.448969,1.935635],[-8.813580,-3.404467],[-0.305900,-3.791808],[-2.909735,8.378350]],[[4.984572,3.292629],[-6.534817,-5.743459],[0.177089,3.526246],[7.782538,-9.690290],[-1.815967,7.875864],[-5.275790,-6.636085],[-8.490086,3.863012],[-3.419351,9.805809],[1.123551,2.546593],[-5.448044,-0.269455],[-1.544569,0.394027],[-9.050757,-2.399185],[7.341170,0.635811],[7.746323,-7.101827]],[[-7.292564,6.432275],[0.442131,-9.007278],[9.130469,-7.821996],[0.498691,3.694634],[-4.478612,-4.888396],[0.559258,0.948267],[-4.861590,-6.150350],[5.672979,8.092191],[-2.053190,-2.412805],[6.037064,-7.270869],[2.147930,2.441437],[-8.682240,-9.032361],[2.452648,9.558131],[7.845196,8.717452]],[[4.807615,-8.186034],[-3.298733,9.835618],[-5.201736,-2.186985],[-9.417702,-9.937658],[8.000676,9.755636],[1.064586,-6.959324],[-7.918075,4.320295],[5.149402,1.355710],[-1.654859,1.401677],[6.248680,1.935543],[-5.954849,2.767062],[3.365771,-8.270828],[4.941814,-7.186733],[9.885300,5.752195]]], dtype = "float32")#candidate|3728|(15, 14, 2)|const|float32
uop_3729 = relay.asinh(const_3728.astype('float32')) # shape=(15, 14, 2)
bop_3739 = relay.add(uop_3729.astype('float32'), relay.reshape(const_3728.astype('float32'), relay.shape_of(uop_3729))) # shape=(15, 14, 2)
var_3742 = relay.var("var_3742", dtype = "float32", shape = (15, 14, 2))#candidate|3742|(15, 14, 2)|var|float32
bop_3743 = relay.power(const_3728.astype('float32'), relay.reshape(var_3742.astype('float32'), relay.shape_of(const_3728))) # shape=(15, 14, 2)
output = relay.Tuple([bop_3739,bop_3743,])
output2 = relay.Tuple([bop_3739,bop_3743,])
func_3750 = relay.Function([var_3742,], output)
mod['func_3750'] = func_3750
mod = relay.transform.InferType()(mod)
var_3751 = relay.var("var_3751", dtype = "float32", shape = (15, 14, 2))#candidate|3751|(15, 14, 2)|var|float32
output = func_3750(var_3751)
func_3752 = relay.Function([var_3751], output)
mutated_mod['func_3752'] = func_3752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_3781 = relay.TupleGetItem(func_3079_call(), 0)
call_3782 = relay.TupleGetItem(func_3081_call(), 0)
output = relay.Tuple([call_3781,])
output2 = relay.Tuple([call_3782,])
func_3790 = relay.Function([], output)
mod['func_3790'] = func_3790
mod = relay.transform.InferType()(mod)
output = func_3790()
func_3791 = relay.Function([], output)
mutated_mod['func_3791'] = func_3791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mod.get_global_var('func_3711')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_3830 = relay.TupleGetItem(func_3711_call(), 2)
call_3831 = relay.TupleGetItem(func_3712_call(), 2)
func_1341_call = mod.get_global_var('func_1341')
func_1344_call = mutated_mod.get_global_var('func_1344')
var_3846 = relay.var("var_3846", dtype = "uint32", shape = (1440,))#candidate|3846|(1440,)|var|uint32
call_3845 = relay.TupleGetItem(func_1341_call(relay.reshape(var_3846.astype('uint32'), [16, 15, 6]), relay.reshape(var_3846.astype('uint32'), [16, 15, 6]), ), 0)
call_3847 = relay.TupleGetItem(func_1344_call(relay.reshape(var_3846.astype('uint32'), [16, 15, 6]), relay.reshape(var_3846.astype('uint32'), [16, 15, 6]), ), 0)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_3853 = func_3548_call()
call_3854 = func_3548_call()
output = relay.Tuple([call_3830,call_3845,var_3846,call_3853,])
output2 = relay.Tuple([call_3831,call_3847,var_3846,call_3854,])
func_3855 = relay.Function([var_3846,], output)
mod['func_3855'] = func_3855
mod = relay.transform.InferType()(mod)
var_3856 = relay.var("var_3856", dtype = "uint32", shape = (1440,))#candidate|3856|(1440,)|var|uint32
output = func_3855(var_3856)
func_3857 = relay.Function([var_3856], output)
mutated_mod['func_3857'] = func_3857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_3862 = func_3611_call()
call_3863 = func_3611_call()
func_27_call = mod.get_global_var('func_27')
func_29_call = mutated_mod.get_global_var('func_29')
const_3873 = relay.const([5,5,-10,7,3,2,-6,4,-3,-6,4,-2,1,-10,6,1,9,-9,2,-6,2,7,-4,-2,4,2,3,-4,3,1,9,3,9,-7,-7,-8,-3,-7,-7,-6,6,-8,1,-3,-6,-6,-8,5,10,-10,6,-8,-2,8,1,-10,-1,5,-10,6,3,-3,2,10,-9,-1,-8,-6,1,2,7,8,-10,-9,1,8,-9,7,-6,-5,7,4,4,-8,3,6,3,9,9,6,5,-2,-3,-6,-5,-8,7,-2,1,6,1,5,8,-7,-1,-6,5,1,-8,10,9,8,9,7,-9,3,6,3,-3,-2,-3,3,6,-7,2,-10,5,-9,7,4,10,7,7,-2,10,7,10,-1,-3,-3,-8,-7,2,-9,5,-6,-3,3,-2,-2,-6,-6,-8,-5], dtype = "int32")#candidate|3873|(154,)|const|int32
call_3872 = relay.TupleGetItem(func_27_call(relay.reshape(const_3873.astype('int32'), [11, 7, 2])), 0)
call_3874 = relay.TupleGetItem(func_29_call(relay.reshape(const_3873.astype('int32'), [11, 7, 2])), 0)
func_3790_call = mod.get_global_var('func_3790')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_3877 = relay.TupleGetItem(func_3790_call(), 0)
call_3878 = relay.TupleGetItem(func_3791_call(), 0)
func_2148_call = mod.get_global_var('func_2148')
func_2152_call = mutated_mod.get_global_var('func_2152')
const_3883 = relay.const([-4.277684,0.233245,3.421934,5.340468,-5.030168,-1.378021,1.516727,-1.602873,2.555395,-4.662619,-2.400686,2.353756,-1.172038,8.949402,-5.288778,7.992733,0.011451,-3.790061,0.085996,0.068273,-9.948959,0.117681,2.832587,8.439944,0.863307,-2.830960,1.095972,7.118088,5.910449,5.163661,-2.341207,-1.243505,-4.851473,-1.880076,-5.776686,8.928419,3.092629,-0.043691,-1.986402,2.321462,6.230124,4.730525,1.489364,-6.818280,-0.817315,2.098158,-1.513543,-2.047299,-9.270485,3.956813,-3.900521,1.874428,2.541045,4.677040,3.569667,0.908794,-3.569936,-8.952645,-7.628145,5.484575,-4.465770,1.187495,-9.102116,7.113626,-6.328475,-5.696171,-8.498388,-7.807604,4.041715,3.508076,-1.824973,-3.547745,-5.577784,6.275970,2.928789,9.103001,2.429742,4.828978,-6.946389,-7.577931,8.344762,0.442982,9.909690,4.285077,4.497008,4.270017,2.345309,5.723055,-1.147880,-7.811860,5.228458,-4.006772,-3.181667,-8.725235,-5.534797,9.165706,0.787168,3.493268,-1.780073,-4.218046,-4.379451,-8.379918,6.652137,6.684330,-2.671631,8.779070,5.115828,-2.705446,2.534714,-3.306193,6.988342,7.842119,-6.446732,4.031506,2.374773,1.174560,-8.538780,-7.238866,0.346459,5.549333,2.341511,7.619288,-8.524463,5.919582,-0.656841,-5.437701,9.800772,5.462535,-1.582563,3.343455,-0.210532,5.324238,-2.770429,-4.048272,4.214719,3.965536,-1.073060,9.489970,-9.152826,5.731999,-1.319278,-9.724672,6.390578,-3.873040,8.518429,-9.548528,-2.401739,-0.763865,0.959544,-7.988465,-0.058248,2.550910,-0.605396,-3.735809,0.407689,6.570099,0.213621,-0.977677,8.000098,-9.118197,-7.813548,-2.787567,1.716201,7.750240,2.863007,3.491278,0.900958,8.056017,-1.473353,-5.872618,3.744987,7.897676,5.902152,5.801598,-2.377886,9.691795,-8.686864,6.042590,-3.026527,-5.915068,-1.474893,-2.778055,8.952964,4.430773,5.432005,4.551330,-4.902190,0.606193,-7.043077,-3.677431,-7.624135,0.540210,-3.491620,-1.022497,1.963625,-3.519761,6.779122,1.318980,-8.955360,-3.573273,-2.746096,-2.344658,-0.208899,5.488810,8.017474,-3.932110,1.211086,-4.840736,-8.129046,0.782338,-6.104918,-9.432097,-2.460166,-0.951023,-3.767432,-3.579600,-3.421823,2.334097,-6.635522,-4.600830,6.478220,3.849432,-4.592454,-3.209054,8.392827,1.465138,0.322263,4.224133,6.718027,4.848083,-1.664333,2.169480,-0.065195,6.062269,9.505691,-0.188389,-4.856485,0.311020,-5.714239,-0.270546,0.676767,4.724172,5.015835,-4.439717,-6.030510,-3.098605,4.190929,3.981061,9.459750,-8.897279,-8.633244,2.206009,5.244531,-8.621783,-9.112357,3.878907,-2.959276,-7.015942,7.237023,-0.642560,-5.924310,-4.019563,-6.268579,-5.558795,-4.225953,-3.845774,6.763580,-4.081072,8.062176,-3.153531,4.837590,2.609920,-4.857658,4.725597,4.054291,9.822049,-1.407868,0.636685,-2.584063,-0.520567,2.686494,3.868028,-7.969030,7.544807,-9.788925,7.079102,6.331047,9.940427,8.005571,8.922157,6.551539,-6.061581,-9.259659,-3.669412,5.193865,6.743484,-8.055456,-9.295256,-0.394492,-2.481289,2.444734,-1.174519,-5.934125,0.873565,-5.118169,-3.591478,7.318899,-2.264544,1.628315,-7.425004,8.953987,6.287426,4.520896,2.524490,0.170028,-4.310398,4.997135,8.457335,1.443953,3.179087,3.731816,1.949332,9.687253,-3.046542,-3.012225,1.553538,-8.800360,8.170738,-6.125954,-1.323576,-9.691085,6.908887,5.814290,-3.390866,1.640246,7.152846,0.122642,4.465164,-2.002506,8.546324,0.102712,-7.523679,4.055613,0.556265,-0.688027,4.553354,-5.271715,7.781233,9.524813,-0.292904,9.895995,6.665220,-8.773820,3.463152,-8.809845,-1.265843,-1.542632,-7.682534,-1.099680,6.668738,2.231985,-9.523811,7.492561,4.360976,1.729315,0.988078,8.712817,7.817715,-6.291734,-8.692050,-8.792425,-5.593350,-4.949414,-6.965036,-4.763820,2.292669,8.381343,2.966164,2.824375,7.727293,4.920271,-2.441708,-0.939800,-8.428159,-8.428880,2.124163,9.522648,3.873871,-3.007658,8.435731,-5.657870,-1.299554,-3.187763,-9.657682,7.293815,-0.224327,7.359613,6.312092,-4.772403,-7.568251,0.549605,0.722345,6.394792,-6.575800,4.837444,-8.523683,-5.475621,1.553497,-1.987642,6.555361,5.776718,-6.306019,-9.007416,-4.678182,-0.823835,8.481535,7.249281,-2.535667,-0.611519,-3.988787,-6.854024,7.349291,-2.265438,5.575497,-0.152729,-4.685311,-9.636901,-0.542890,-1.589424,-1.480029,5.508285,-2.617836,-5.441967,4.301382,0.373625,-3.936076,-7.811043,5.127471,-7.796618,-6.782932,9.813238,1.938892,4.508276,-5.769587,-2.245094,-9.148761,-8.179508,-7.717917,-8.028061,7.807583,-9.608611,7.687982,8.541213,3.866803,-0.155792,1.170389,-4.050879,5.026375,-3.425596,8.171430,-2.734715,1.242676,1.961019,-5.070353,4.751530,4.128721,2.377088,1.624127,2.018677,7.142300,-1.101217,1.164787,6.071577,-0.312384,-9.007737,-3.502886,-2.430052,-2.515863,-1.680897,1.139429,-4.078862,1.751598,7.728498,1.542838,7.516841,-2.300016,1.864716,-7.943940,5.133159,-1.844478,-6.427167,-9.933575,-0.924400,-1.981889,3.049045,8.327165,2.377895,-2.369926,8.502589,3.326751,-2.364635,-2.094410,-3.726786,-5.617167,1.190048,6.804419,7.992972,-4.211017,-2.440138,-9.492969,-1.252987,-5.831153,-7.201761,3.369045,-1.903760,-9.715683,-7.964097,-4.199591,5.143767,-7.504216,6.302215,5.743515,-6.080030,8.942033,-2.874505,-1.030319,8.395737,-3.410191,9.872994,6.600483,4.676479,-4.238342,-9.261281,-0.408288,9.368406,-1.111745,-2.325608,-8.137893,-4.614213,-2.237767,0.809084,2.916535,9.032581,0.721546,9.692710,-8.107630,-6.970338,1.444896,0.948590,1.665562,-6.609975,5.346648,4.052934,2.966881,0.596532,-0.001728,0.536374,3.904464,-2.699221,9.460554,4.919064,-8.209506,3.859921,-4.951048,4.444217,4.916575,-4.267722,-4.203429,-6.386110,9.837463,6.999526,1.475627,3.561705,7.383421,1.446621,-6.921079,-8.518553,-7.250173,-1.700829,-5.526589,-6.120215,5.644080,8.678769,-1.289278,-2.300378,9.854586,-7.925601,-7.306867,-0.176428,5.348677,-7.441967,-0.480373,-1.864736,-6.996897,-9.101216,-5.489991,6.792198,2.460852,7.729882,-2.324144,6.555699,-3.117018,-9.861759,0.672839,-0.466977,-3.518961,-0.797099,-2.631924,-9.195951,2.527330,1.309749,1.283159,-5.605638,1.207455,9.646514,5.787137,-8.459076,-2.759078,-9.391275,7.173057,-1.447366,3.929448,-0.672026,0.983629,5.578475,5.819597,-5.384653,9.799295,5.420884,-3.161386,-3.043894,4.688740,5.959907,-2.264973,-2.830521,6.940131,3.275798,3.526414,-7.748819,-3.638322,-7.400658,-1.784520,2.146155,5.870897,3.648532,3.807210,8.757167,-5.042148,-2.924139,-9.001790,-1.216360,5.384326,-5.741920,6.303833,9.983878,-4.029284,-2.506071,-8.944984,-9.766794,-4.004768,5.328504,-0.574623,7.946928,-7.240803,2.769763,-1.868886,-3.362779,4.789113,-5.083572,3.419141,9.945084,2.022440,-8.464483,4.333960,2.330760,-3.002446,5.675502,1.789298,1.434036,-3.463239,-0.906342,-3.105323,-9.820148,-9.829086,1.633373,-8.105689,6.673920,-0.118924,6.321064,3.882223,9.792984,9.787006,-3.603205,4.775062,-3.732436,-3.461876,-5.247530,7.026408,-8.423956,-8.826462,0.938554,-4.200763,-0.568974,5.029821,-0.097141,3.648733,-1.724680,-2.857323,3.545200,7.152295,8.774402,4.154127,-2.595118,-4.422785,-2.709210,-3.839603,3.947021,-7.494277,6.052965,4.027301,-7.276213,-6.923229,-9.138691,8.727159,-2.116172,0.262688,-7.786243,-7.116910,-2.030650,-2.159955,3.267453,-6.526943,6.486939,-7.040354,-8.564303,5.245830,-9.687085,-1.106269,-7.675160,8.634188,-2.887065,5.484653,2.771219,6.092294,-3.083919,-4.101504,4.814399,8.776789,4.061291,4.558678,5.144097,1.330927,-8.633047,-6.363276,8.464127,-8.255885,1.527555,1.970804,9.747476,-6.198657,-1.853714,9.605772,2.784069,-8.570820,-9.088126,8.470357,-0.603074,-7.440984,-2.676964,-7.144473,-5.800946,7.006015,-2.027800,-3.225036,2.044441,6.714011,1.080199,1.574191,7.365223,2.718931,-4.864750,-9.757748,0.871322,1.459769,7.604620,-4.084796,-0.143030,7.334698,-7.672398,-6.308500,-4.691308,8.504463,-9.267412,2.395837,-1.395913,-9.778972,9.320435,-7.026786,5.192506,-3.895764,5.676362,-2.370339,-4.714716,-3.750670,6.850706,-6.598218,-9.953227,7.468622,5.614878,3.705997,0.046934,-7.958428,-5.801917,-0.586735,-8.234994,-3.731454,7.605274,-7.026875,1.836125,-3.759223,1.204502,-1.601898,-8.708162,6.613243,-3.240151,9.711401,-0.886798,-8.601382,-3.383730,-5.345634,8.099062,-7.452773,5.317059,-8.089254,3.595309,0.221602,-0.551474,1.136447,7.193150,-3.425845,3.096861,5.897720,9.528424,-9.309962,-9.578653,-3.657354,0.456892,-0.133697,5.055278,9.027159,7.483833,-4.053587,2.763561,-8.050011,-5.990604,-1.909567,9.788382,8.584172,-8.456470,-6.818059,-9.880000,-6.192199,-3.302797,-9.846748,-1.012977,-9.613394,-3.191001,5.533429,-5.086006,-3.837601,-0.452204,-8.317029,-5.628978,-2.460801,9.255039,-3.647779,2.998848,-7.850804,1.232371,-9.816760,-8.086900,-8.531977,2.128768,-6.524705,2.905726,-9.815329,-9.802024,1.884310,-1.791722,2.095836,7.464571,6.030606,-3.714694,-1.009857,-4.178328,5.860369,1.188218,7.563161,7.171554,9.407567,-1.337519,-2.052310,-0.477529,6.890793,6.381348,6.983933,-9.882295,-8.632368,-1.930141,3.150107,8.333458,4.557662,-9.528162,6.571311,1.732053,-1.633214,-1.206243,-6.488708,7.874593,8.176794,-6.662693,2.110078,7.618785,7.620024,-2.476762,-1.592380,-2.235450,-4.650545,-0.581780,-9.671503,-1.417648,9.143520,-3.611412,-4.968119,7.679034,-2.436166,-4.346649,7.916605,2.360106,4.178833,9.622439,9.275807,9.973055,-9.205663,9.967859,9.446580,8.313908,-9.634717,-1.558664,3.995147,-6.361809,3.252479,0.908969,-2.000986,-1.722803,-5.212330,1.639949,1.094199,-8.359752,-6.344984,-5.243189,1.326129,-0.430913,1.237933,-3.257788,1.673680,1.227059,2.865517,4.549955,1.501980,8.239258,9.521611,-0.014737,-0.661094,-9.874192,-4.323629,-5.650496,-1.343143,-4.419655,-5.277850,0.784541,9.633805,-0.266110,4.159419,3.611225,7.402638,6.927758,0.224654,3.582612,-6.713855,1.491907,6.710735,-6.064611,-5.785242,7.392588,-8.167495,-1.095015,7.488014,-4.720016,-0.129984,-2.629757,5.775615,-0.979492,3.521808,-8.907208,2.077690,-5.959652,2.276168,1.815022,6.662804,-0.273907,0.355564,-2.487568,-2.126476,2.656576,-9.149023,-0.853130,9.902347,-8.789653,5.447666,-4.902187,-7.120778,4.918658,-4.657868,-5.402796,6.699651,2.772454,7.501195,-1.913071,-1.171642,4.269538,4.866491,-4.578661,-2.259546,4.652553,8.282073,1.117482,-5.969141,-2.270427,1.443568,5.214012,6.898297,8.305429,-3.072977,-3.008499,5.792888,4.680016,-9.779201,-4.336740,-7.836667,-3.977286,8.175007,-5.218190,-2.804125,-1.794361,4.087376,-4.758367,-1.351469,9.642511,3.382776,-7.255652,9.324472,7.923517,7.637331,0.587078,0.115688,-1.677014,0.259851,5.226451,6.211805,9.477669,6.538899,1.400562,2.345183,-8.634312,8.064697,9.479675,-4.190507,-8.912466,-5.726223,4.675927,7.441057,1.775867,-2.846563,-5.110663,-6.010292,-9.183457,6.555619,-2.465773,1.646437,-6.475944,2.258757,4.495953,-9.339963,3.242425,8.784901,1.586475,-8.017082,6.410299,3.911977,-5.372789,7.743936,3.398338,1.188780,4.873463,-7.661351,1.516339,-2.751922,2.382421,-4.238000,2.643240,2.686711,-0.545386,1.022899,4.217702,6.942798,1.029058,-0.374520,4.138504,-0.284190,-0.625923,-5.567259,-9.991275,0.049259,-0.910850,-7.336507,0.376193,-4.757597,-3.246595,-6.778871,-3.363297,2.350045,-9.159809,-8.821387,7.114835,1.948249,5.129445,4.168856,-9.593341,2.063997,-4.424495,-7.487150,7.792847,6.303923,2.717554,3.094915,3.563337,7.806509,0.982874,-3.160291,-8.499264,-7.762002,8.020425,3.988619,-2.112766,-2.357007,-1.532221,7.318851,2.715811,1.348334,-0.774946,-7.799898,-0.545383,3.720103,8.997733,-1.690017,1.817239,1.190558,2.672653,-3.816433,8.955025,-7.691437,-8.623366,-9.473023,8.163630,-0.188205,-5.390280,4.192963,-7.465226,-8.296012,-3.825689,9.993918,-2.367706,6.889756,4.985737,1.174256,-8.212390,-1.613152,2.015384,5.049661,3.213728,-7.225994,-1.932017,-2.110416,7.501286,9.087581,6.540704,3.105074,2.138528,1.119713,9.706386,-8.786773,9.492779,-0.741941,3.975528,1.868567,4.310909,-9.918830,1.006442,-9.489370,-7.625282,9.594789,-7.647848,4.860717,9.324637,-3.644462,9.688446,-9.448190,9.701228,-0.752849,-5.089197,1.233056,8.093362,-7.259338,-1.507092,4.481662,-6.068934,1.947619,-7.868963,-5.433228,6.442575,-4.485579,1.378850,4.430341,0.429891,6.192494,2.651303,7.501068,3.005534,-5.523825,-9.003950,-1.927159,-8.841839,7.390595,-6.109953,-1.699961,-2.766723,-0.965868,7.086006,-6.604961,2.878015,8.849935,6.114006,-0.813076,-0.913637,-8.769322,-7.381569,9.318921,-4.619625,6.471622,-1.348787,3.215041,-3.202561,5.954575,3.661170,-1.608273,3.081122,-7.325894,-1.849493,4.823686,8.971292,2.591654,-8.652770,-1.556815,3.856731,0.781422,1.372014,-0.333974,3.718583,6.441742,-4.763608,1.689587,2.369938,-6.142185,-9.345576,-9.199236,2.440220,-9.574769,-0.410315,9.496927,-2.202624,-0.784305,5.399181,-4.910714,-2.505395,2.582007,6.534139,-8.710401,-5.170242,3.211934,0.109334,-8.234722,7.099987,-2.162293,9.946613,-8.985340,5.395333,1.068403,1.415763,6.365415,-7.164787,-9.791166,2.498154,-7.770671,5.152088,1.202868,-8.651882,-7.791797,-3.933451,2.954761,-5.395805,3.377530,-8.620657,-1.915662,-4.302746,5.434923,-0.181993,0.148587,1.607535,-6.676759,1.833055,0.481626,0.948945,7.154698,-8.252250,-1.205177,-1.029218,-9.931324,-5.405804,8.195983,-8.783057,6.025789,-5.455002,9.906892,3.637677,9.793040,7.244195,-7.099961,-7.433712,-6.930584,-3.828549,6.728586,-9.395802,-3.327374,-4.180438,-2.378827,-8.321531,4.937036,-3.644242,-9.592274,-4.194068,-4.449925,-4.353122,8.026985,-6.620698,-5.494358,-8.030898,-4.641954,0.502505,1.073263,-2.263187,6.748215,-3.765254,3.824222,8.522454,-3.836228,6.358385,7.844461,7.262807,-3.485086,-7.423906,-1.502813,-1.568602,4.486488,2.081491,0.781734,-3.211811,9.442733,-6.746586,6.340351,-8.044987,8.198641,-3.408715,-4.817807,6.327649,-3.817274,6.695901,-9.440877,6.221554,2.769801,6.813484,-5.070232,1.872554,-7.398058,-9.124016,6.690275,6.643279,1.220484,8.323280,0.776457,-2.608190,-8.427621,-1.282189,-7.620547,7.578994,8.027318,-4.984161,-9.100343,3.071573,9.631096,8.211050,-9.593771,-3.896878,-0.222254,8.146538,-8.344485,9.961760,4.512529,-5.113232,1.784064,-5.112625,-7.318149,-8.090663,-1.851487,5.175486,-6.269826,1.464982,7.755670,-4.664348,9.617750,7.618603,5.521334,8.923058,-2.759548,-7.593984,2.201565,-8.221974,-0.869867,-1.803693,-3.354681,-8.515109,-6.311587,-1.282142,6.326194,-6.757222,-0.703538,8.676750,-2.214045,3.363058,-2.427681,1.403480,-7.122142,8.912091,-5.627150,7.285722,4.745167,7.127248,3.853513,5.758648,-8.628547,-3.172840,6.922159,0.653670,-8.486687,-8.084917,-3.859394,-4.069778,-0.990868,9.474630,1.526072,7.980919,3.990597,7.087175,-8.466335,0.191450,-4.278998,-6.554773,1.660409,1.145248,-7.406200,-6.292907,7.787009,3.243411,-3.695562,3.116339,0.128533,-9.109902,4.824707,-1.632171,-3.336554,0.883950,8.030106,-4.745203,1.667288,-8.169849,-3.714173,-9.508668,1.180224,4.252252,2.359745,4.376350,6.446267,5.768093,3.378498,4.717868,1.469688,-1.721059,-1.507329,-5.940506,8.100212,6.433380,2.421910,5.387322,7.072208,3.615056,4.050758,2.279034,-2.642800,-8.247942,-7.618203,-3.634550,-4.337066,-5.901855,8.452942,-4.463907,1.160082,-6.177839,3.720948,3.033179,-3.872779,7.482757,-9.458655,8.939533,3.702954,-0.389501,1.314465,-1.489987,-1.862695,-4.682975,6.168010,-9.182748,-0.661135,0.358648,-3.782045,-1.344403,9.301645,7.359793,-8.267980,0.779208,-7.195851,-0.555676,-1.388571,6.888953,8.766965,-8.206998,-1.719358,-6.560144,-2.714784,-3.097297,-6.685665,0.469267,3.245831,2.389227,4.979486,7.370413,4.949933,0.092607,-4.990956,-5.021958,-6.365146,-4.529884,1.243503,0.761791,6.933544], dtype = "float32")#candidate|3883|(1584,)|const|float32
var_3884 = relay.var("var_3884", dtype = "float32", shape = (12,))#candidate|3884|(12,)|var|float32
call_3882 = relay.TupleGetItem(func_2148_call(relay.reshape(const_3883.astype('float32'), [9, 11, 16]), relay.reshape(const_3883.astype('float32'), [9, 11, 16]), relay.reshape(var_3884.astype('float32'), [12,]), ), 2)
call_3885 = relay.TupleGetItem(func_2152_call(relay.reshape(const_3883.astype('float32'), [9, 11, 16]), relay.reshape(const_3883.astype('float32'), [9, 11, 16]), relay.reshape(var_3884.astype('float32'), [12,]), ), 2)
bop_3890 = relay.power(call_3872.astype('float32'), relay.reshape(const_3873.astype('float32'), relay.shape_of(call_3872))) # shape=(11, 7, 2)
bop_3893 = relay.power(call_3874.astype('float32'), relay.reshape(const_3873.astype('float32'), relay.shape_of(call_3874))) # shape=(11, 7, 2)
func_2285_call = mod.get_global_var('func_2285')
func_2289_call = mutated_mod.get_global_var('func_2289')
const_3900 = relay.const(3, dtype = "uint16")#candidate|3900|()|const|uint16
var_3901 = relay.var("var_3901", dtype = "uint16", shape = (52, 1))#candidate|3901|(52, 1)|var|uint16
var_3902 = relay.var("var_3902", dtype = "float32", shape = (132,))#candidate|3902|(132,)|var|float32
call_3899 = relay.TupleGetItem(func_2285_call(relay.reshape(const_3900.astype('uint16'), []), relay.reshape(var_3901.astype('uint16'), [13, 4, 1]), relay.reshape(var_3902.astype('float32'), [132,]), ), 3)
call_3903 = relay.TupleGetItem(func_2289_call(relay.reshape(const_3900.astype('uint16'), []), relay.reshape(var_3901.astype('uint16'), [13, 4, 1]), relay.reshape(var_3902.astype('float32'), [132,]), ), 3)
output = relay.Tuple([call_3862,call_3877,call_3882,const_3883,var_3884,bop_3890,call_3899,const_3900,var_3901,var_3902,])
output2 = relay.Tuple([call_3863,call_3878,call_3885,const_3883,var_3884,bop_3893,call_3903,const_3900,var_3901,var_3902,])
func_3904 = relay.Function([var_3884,var_3901,var_3902,], output)
mod['func_3904'] = func_3904
mod = relay.transform.InferType()(mod)
mutated_mod['func_3904'] = func_3904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3904_call = mutated_mod.get_global_var('func_3904')
var_3906 = relay.var("var_3906", dtype = "float32", shape = (12,))#candidate|3906|(12,)|var|float32
var_3907 = relay.var("var_3907", dtype = "uint16", shape = (52, 1))#candidate|3907|(52, 1)|var|uint16
var_3908 = relay.var("var_3908", dtype = "float32", shape = (132,))#candidate|3908|(132,)|var|float32
call_3905 = func_3904_call(var_3906,var_3907,var_3908,)
output = call_3905
func_3909 = relay.Function([var_3906,var_3907,var_3908,], output)
mutated_mod['func_3909'] = func_3909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_3976 = func_3548_call()
call_3977 = func_3548_call()
func_3156_call = mod.get_global_var('func_3156')
func_3160_call = mutated_mod.get_global_var('func_3160')
const_3986 = relay.const([9,7,8,-7,-6,-9,7,4,5,-3,-9,8,-7,-9,-9,2,-10,-8,-2,-3,-7,-1,-4,8,-10,-4,1,6,8,-10,-10,4,1,10,7,4,-8,8,1,1,-8,-10,-10,9,-4,2,-3,-5,10,-10,1,-3,-8,-8,9,-10,-6,-6,-9,-2,-5,-6,-5,-3,-6,-4,-6,3,7,2,-1,-3,-5,3,5,8,2,-8,-4,-3,-3,-7,-3,-2,-2,-8,-9,1,-1,9,-2,8,10,2,-7,4,2,-7,-10,9,3,8,-10,7,3,-9,-4,10,3,8,9,-7,1,-7,-5,6,4,2,-3,5,-7,-3,-3,3,-7,5,-2,6,-8,-8,-7,-1,-8,-5,1,9,8,9,6,-7,-4,8,5,-1,7,6,-6,7,1,7,3,10,-9,-3,2,10,10,-1,-2,-10,4,2,-4,-5,10,8,7,5,8,3,-7,3,-8,2,7,-8,-7,-2,-7,7,7,1,3,2,-5,1,-7,-9,9,5,-3,-8,3,-3,-6,-10,-4,-9,-8,-10,7,4,6,-6,-5,2,8,-10,1,-3,-4,2,-5,-6,-3,7,8,1,-7,8,10,1,1,10,7,-8,6,8,10,-6,2,10,-7,1,-10,5,10,-9,-9,2,-10,-6,10,-2,10,3,3,2,-6,5,4,5,8,-5,-1,-5,-7,1,-5,-10,-3,6,8,-8,-1,-10,5,-8,-9,3,10,-5,7,6,1,8,1,-9,-4,-3,2,-1,-1,1,4,4,-2,-10,-4,-10,2,-8,3,-2,-6,1,2,-6,-3,-5,-1,-10,7,-1,-6,-6,10,-3,-3,10,-4,7,5,9,10,-4,10,-3,3,7,-6,2,-9,3,-2,1,-5,3,10,9,-5,-1,6,3,-10,1,-5,6,-7,-8,-3,6,7,-10,-1,-9,4,3,-5,-9,7,3,-2,10,9,10,-8,9,-6,-4,-10,3,-2,3,-3,2,-2,-3,-5,4,10,-5,-10,6,3,-5,1,-4,6,-10,-10,8,7,-8,4,-6,6,3,-4,-4,-8,-2,6,-4,3,-1,4,7,-1,-4,7,-9,9,-10,2,-4,2,-1,-1,-1,9,-7,1,6,9,7,10,-10,2,6,6,6,5,6,-4,-8,9,10,3,4,-6,9,-10,6,1,-8,1,2,-3,10,5,4,7,-8,10,2,4,3,-10,-6,3,7,7,-10,10,-2,1,-1,-10,9,-10,7,2,-7,-10,-5,-6,7,-2,8,6,-8,-5,-5,9,-6,-7,-2,4,-5,-2,-7,3,-4,10,8,1,5,5,1,-6,-3,-2,3,-6,-10,9,7,-3,8,4,-3,1,10,-10,2,-8,10,-1,5,1,6,-7,1,-5,-5,-2,3,-8,1,-4,3,-9,-3,6,-8,5,7,8,-2,-5,-1,7,2,6,3,-10,3,1,-10,6,-6,-1,-3,-8,-1,5,-2,7,-10,-9,5,3,-9,-6,1,-6,-2,-9,5,1,-2,9,1,-10,-10,-5,-10,-5,-3,7,-2,1,1,9,9,3,8,-5,-9,9,-4,4,-3,1,1,-9,3,9,2,-2,-9,10,9,6,10,7,2,-8,-4,10,-8,-8,-9,-7,-4,1,3,3,-9,-10,-6,3,-10,-2,1,-10,1,2,-7,-10,-7,6,-2,-4,8,10,-4,-2,5,9,-8,-6,8,-6,6,-8,6,-7,-5,-1,-8,8,7,6,-6,9,5,10,5,8,3,-6,-2,-1,-5,-9,-7,-3,-9,-6,4,-10,3,2,-7,1,8,2,2,6,-6,-10,-2,-7,4,7,-1,6,-6,-3,-1,-4,4,1,-9,-3,10,10,-6,4,-2,-7,7,-8,6,-7,-8,7,8,7,-3,-4,4,8,3,-10,-4,-8,4,5,1,-8,2,10,3,9,6,10,1,9,-1,-9,-10,5,4,6,9,-4,-9,-5,2,10,-1,-7,10,6,-9,-6,1,6,9,-3,-6,-3,1,-1,4,-10,-4,5,5,7,6,6,7,5,4,6,2,6,9,-6,-1,-8,-3,10,6,-3,-3,10,-9,-5,2,2,3,9,7,7,-2,-4,-7,3,4,-4,3,6,-10,6,4,-9,-7,-3,4,4,-2,-8,-3,-10,7,5,-9,-5,-3,2,8,-6,-10,1,6,9,-4,-5,-10,-5,9,10,-10,-9,-3,-10,-2,3,-5,7,10,9,3,-2,-9,1,-6,7,5,8,-9,-6,-5,5,5,-9,-8,-10,2,-5,10,10,6,-3,5,8,10,-7,6,2,5,-8,-2,3,2,-5,-3,-2,4,1,-9,-5,4,-3,-7,-2,8,5,-8,-4,-6,7,-5,2,4,-3,4,-9,4,-9,-9,-3,-10,-7,-7,-1,1,4,-4,-9,2,1,-10,4,-2,-4,1,10,-6,-2,-9,7,10,7,-10,4,6,7,6,1,2,1,-5,-7,-9,5,1,-7,5,-6,-8,-6,6,2,3,-1,1,10,-4,-10,-5,10,-8,8,-9,-8,-5,-3,10,-4,-1,9,9,-1,-8,6,5,-1,3,6,-2,-10,3,-9,-1,5,7,5,3,9,-4,-5,10,-1,3,-6,-6,-1,2,-1,2,4,-7,-3,2,10,-6,-6,-8,1,8,6,4,2,-9,8,6,1,10,4,10,1,-8,4,7,7,3,-1,5,4,6,-7,5,-10,6,10,-7,-1,7,10,1,9,-5,4,6,5,-1,6,2,4,9,3,-2,-10,-10,-4,8,-8,6,2,-9,3,1,7,-7,-3,-2,2,-3,-6,3,-5,-5,-5,-4,-2,5,-2,-9,2,-1,-4,-1,10,1,6,-3,-6,-5,-1,7,1,-1,10,3,7,7,8,8,-2,3,-2,1,7,8,-5,1,10,-1,3,-2,-2,2,7,-8,-10,6,-9,1,-3,4,-5,-7,9,5,4,4,4,-5,-7,-9,6,-10,-2,-1,-9,6,9,9,9,-2,1,8,4,-6,8,8,1,-9,9,8,2,-4,-7,-1,-6,1,10,3,-5,-3,-8,-7,8,-2,5,-5,-5,-9,1,-9,2,-4,-1,6,-10,9,9,7,-1,4,-8,-4,-7,5,3,-7,-4,-9,10,1,6,7,5,5,-2,3,-10,-3,9,7,2,7,6,4,-3,7,-4,-5,10,-6,-10,2,-5,-9,5,-6,-3,-6,1,5,3,-3,6,-8,1,9,-5,3,8,-6,-1,1,-5,1,4,-2,-9,8,7,4,-1,9,-5,-8,4,5,4,9,2,-7,-7,-5,-6,-2,8,10,10,-5,-2,6,-5,-1,-9,-10,10,7,-10,4,3,8,-3,-1,8,7,-9,5,-6,-6,-7,-5,-6,6,5,2,9,9,10,6,6,-9,-6,10,3,8,4,8,-6,-6,6,8,9,7,7,-9,-7,-1,-3,9,-9,-7,-10,3,-1,6,-8,-3,10,-6,5,4,-6,-9,8,-6,-4,-7,9,-10,-8,8,-9,-3,-4,9,-6,3,8,2,9,10,-2,8,9,-2,4,-3,2,5,-6,-5,-7,-6,-2,10,8,-5,-1,2,2,-6,-5,-3,-6,-4,3,7,-10,7,-3,5,1,2,4,-1,-1,5,8,4,6,-6,-9,-1,6,-5,8,-10,10,10,-7,10,-8,3,-3,-9,7,8,-6,9,8,1,-1,-5,-3,5,-8,8,-10,-1,2,-1], dtype = "int16")#candidate|3986|(1386,)|const|int16
const_3987 = relay.const([6,-7,-5,6,3,9,10,-4,3,-2,7,4,4,-8,-4,4,-6,5,-8,-7,10,-8,9,-7,-4,-3,-10,1,-4,9,-1,8,-5,-9,3,3,-4,-6,-5,-5,-4,1,7,10,-10,9,-3,1,1,-1,7,-10,9,6,-2,4,-9,-10,7,-10,-10,-10,-8,-2,-10,3,-1,8,2,-3,-3,10,3,10,1,-9,-1,-5,8,7,-2,-5,5,10,-5,2,1,-2,6,-4,-4,-10,-10,3,4,-7,-2,7,6,-5,-2,1,-10,6,6,3,-3,-8,-9,2,-1,-8,-3,-10,-4,-10,-3,10,5,-1,7,3,-8,2,2,-9,-7,7,3,9,-4,6,1,3,3,6,-10,10,2,5,8,-8,-2,6,-4,-5,-7,6,-8,-5,2,10,2,2,-4,7,-1,-8,10,10,-1,2,7,-6,-6,-3,4,-2,5,-10,1,2,2,8,-6,-8,5,-6,8,5,-3,-4,-4,-3,2,-10,3,-8,-6,9,-5,10,6,2,8,-8,6,7,-10,-2,6,-7,6,5,10,-3,-2,-6,-6,4,4,4,6,3,-6,8,7,-10,-9,-4,-9,-5,-9,-9,9,-9,-7,-4,-6,7,-10,-3,-10,-1,-8,-9,1,7,-7,4,-2,-1,-8,2,-2,8,-5,10,-6,6,5,2,-3,3,-9,-6,-2,2,1,-7,-4,-6,8,6,-6,-9,-10,-6,-3,-3,-8,7,-7,1,2,1,-5,-5,-5,-8,-5,-2,9,10,-7,-8,3,6,-2,-9,6,-2,-9,3,-10,-4,7,2,4,-10,4,-5,-1,10,-9,-2,9,6,-1,-1,-8,-5,-1,-1,-8,5,10,10,2,-7,-9,5,-2,-5,8,3,-10,-8,-5,5,1,5,9,-3,5,9,-10,1,3,-5,3,6,-4,4,7,-1,7,-10,-1,-7,-4,10,1,5,7,-7,-6,4,9,-1,7,-5,-10,-3,7,-7,6,-6,-1,3,1,-8,2,10,2,-10,-5,-5,9,6,-8,10,2,-1,6,-1,-3,-7,5,-10,9,7,-2,-7,-2,8,5,6,-3,10,-2,-8,4,-1,3,7,1,3,6,-6,-2,10,4,7,-2,9,-10,6,2,-2,-1,6,2,-7,9,9,-10,1,3,-1,4,7,-7,-9,-4,-4,1,7,9,-4,-7,-4,-9,1,4,7,4,-4,-8,-1,-6,-7,7,2,8,-8,6,2,-8,9,6,2,1,2,10,2,-8,-7,-3,-1,-5,-7,-1,-8,3,1,-5,-9,8,4,5,-6,-4,-8,-1,1,-7,7,-7,-7,4,10,-10,4,10,-5,-3,-8,5,-8,-6,-2,-5,-1,6,3,-5,-7,-1,2,-8,-8,10,-2,3,-1,8,2,-4,6,-2,-8,-1,3,-6,1,1,-7,-5,-8,-8,7,-6,-9,-1,-8,3,9,3,-6,-6,4,-6,2,9,-2,-3,-1,8,-7,5,2,-5,4,5,-8,-6,-2,-3,-8,6,-7,10,6,-8,-9,-10,2,5,3,5,3,-2,-6,9,5,-5,-2,2,5,1,-6,-6,-6,6,9,1,-5,-6,7,-4,-1,-9,-3,3,3,-1,-4,-7,6,-2,-5,8,3,10,3,4,-4,-9,4,-5,7,-5,-3,-3,-6,-5,-5,2,10,2,7,-9,9,-7,1,1,10,-9,10,1,9,8,10,4,3,5,-1,10,4,4,-1,-3,3,-3,6,-1,-9,-10,1,3,9,-6,4,-2,-5,-2,-5,7,-9,-3,4,1,-4,-4,-5,1,-7,-6,-2,7,-7], dtype = "int32")#candidate|3987|(672,)|const|int32
call_3985 = relay.TupleGetItem(func_3156_call(relay.reshape(const_3986.astype('int16'), [11, 14, 9]), relay.reshape(const_3987.astype('int32'), [672,]), ), 0)
call_3988 = relay.TupleGetItem(func_3160_call(relay.reshape(const_3986.astype('int16'), [11, 14, 9]), relay.reshape(const_3987.astype('int32'), [672,]), ), 0)
func_3079_call = mod.get_global_var('func_3079')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_4015 = relay.TupleGetItem(func_3079_call(), 0)
call_4016 = relay.TupleGetItem(func_3081_call(), 0)
output = relay.Tuple([call_3976,call_3985,const_3986,const_3987,call_4015,])
output2 = relay.Tuple([call_3977,call_3988,const_3986,const_3987,call_4016,])
func_4018 = relay.Function([], output)
mod['func_4018'] = func_4018
mod = relay.transform.InferType()(mod)
output = func_4018()
func_4019 = relay.Function([], output)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3195_call = mod.get_global_var('func_3195')
func_3197_call = mutated_mod.get_global_var('func_3197')
call_4020 = relay.TupleGetItem(func_3195_call(), 0)
call_4021 = relay.TupleGetItem(func_3197_call(), 0)
output = relay.Tuple([call_4020,])
output2 = relay.Tuple([call_4021,])
func_4027 = relay.Function([], output)
mod['func_4027'] = func_4027
mod = relay.transform.InferType()(mod)
output = func_4027()
func_4028 = relay.Function([], output)
mutated_mod['func_4028'] = func_4028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4110 = relay.var("var_4110", dtype = "int32", shape = (3, 8, 3))#candidate|4110|(3, 8, 3)|var|int32
const_4111 = relay.const([[[-6,5,-1],[-8,-1,-8],[-10,7,-7],[1,5,6],[4,1,-6],[10,-1,-5],[-9,9,-6],[3,1,7]],[[4,-5,7],[8,-7,-7],[-8,-6,-4],[-3,-4,3],[7,-7,7],[6,4,-8],[-7,2,7],[-9,-8,4]],[[-6,5,7],[-9,3,5],[-1,-1,6],[-6,8,-9],[7,8,4],[7,8,9],[1,4,-5],[-6,-9,1]]], dtype = "int32")#candidate|4111|(3, 8, 3)|const|int32
bop_4112 = relay.less(var_4110.astype('bool'), relay.reshape(const_4111.astype('bool'), relay.shape_of(var_4110))) # shape=(3, 8, 3)
output = bop_4112
output2 = bop_4112
func_4123 = relay.Function([var_4110,], output)
mod['func_4123'] = func_4123
mod = relay.transform.InferType()(mod)
var_4124 = relay.var("var_4124", dtype = "int32", shape = (3, 8, 3))#candidate|4124|(3, 8, 3)|var|int32
output = func_4123(var_4124)
func_4125 = relay.Function([var_4124], output)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2906_call = mod.get_global_var('func_2906')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_4130 = relay.TupleGetItem(func_2906_call(), 0)
call_4131 = relay.TupleGetItem(func_2907_call(), 0)
func_3790_call = mod.get_global_var('func_3790')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_4140 = relay.TupleGetItem(func_3790_call(), 0)
call_4141 = relay.TupleGetItem(func_3791_call(), 0)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_4142 = func_3611_call()
call_4143 = func_3611_call()
bop_4145 = relay.logical_or(call_4140.astype('bool'), relay.reshape(call_4130.astype('bool'), relay.shape_of(call_4140))) # shape=(11, 9, 9)
bop_4148 = relay.logical_or(call_4141.astype('bool'), relay.reshape(call_4131.astype('bool'), relay.shape_of(call_4141))) # shape=(11, 9, 9)
output = relay.Tuple([call_4142,bop_4145,])
output2 = relay.Tuple([call_4143,bop_4148,])
func_4155 = relay.Function([], output)
mod['func_4155'] = func_4155
mod = relay.transform.InferType()(mod)
output = func_4155()
func_4156 = relay.Function([], output)
mutated_mod['func_4156'] = func_4156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_4161 = relay.TupleGetItem(func_3583_call(), 0)
call_4162 = relay.TupleGetItem(func_3584_call(), 0)
output = call_4161
output2 = call_4162
func_4175 = relay.Function([], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
output = func_4175()
func_4176 = relay.Function([], output)
mutated_mod['func_4176'] = func_4176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_4189 = relay.TupleGetItem(func_3079_call(), 0)
call_4190 = relay.TupleGetItem(func_3081_call(), 0)
func_3711_call = mod.get_global_var('func_3711')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_4205 = relay.TupleGetItem(func_3711_call(), 2)
call_4206 = relay.TupleGetItem(func_3712_call(), 2)
func_2754_call = mod.get_global_var('func_2754')
func_2757_call = mutated_mod.get_global_var('func_2757')
var_4212 = relay.var("var_4212", dtype = "int16", shape = (468,))#candidate|4212|(468,)|var|int16
call_4211 = func_2754_call(relay.reshape(var_4212.astype('int16'), [3, 13, 12]), relay.reshape(var_4212.astype('int16'), [3, 13, 12]), )
call_4213 = func_2754_call(relay.reshape(var_4212.astype('int16'), [3, 13, 12]), relay.reshape(var_4212.astype('int16'), [3, 13, 12]), )
var_4216 = relay.var("var_4216", dtype = "float64", shape = (11, 9, 9))#candidate|4216|(11, 9, 9)|var|float64
bop_4217 = relay.bitwise_or(call_4189.astype('int16'), relay.reshape(var_4216.astype('int16'), relay.shape_of(call_4189))) # shape=(11, 9, 9)
bop_4220 = relay.bitwise_or(call_4190.astype('int16'), relay.reshape(var_4216.astype('int16'), relay.shape_of(call_4190))) # shape=(11, 9, 9)
func_3031_call = mod.get_global_var('func_3031')
func_3038_call = mutated_mod.get_global_var('func_3038')
var_4236 = relay.var("var_4236", dtype = "uint32", shape = (1440,))#candidate|4236|(1440,)|var|uint32
const_4237 = relay.const([4,-1,3,7,7,10,7,-6,-9,-10,9,9,6,6,-3,10,-7,8,9,3,7,9,3,9,-6,10,-5,-7,-7,4,4,-9,8,-4,-1,2,8,-2,-9,-4,9,8,5,2,2,1,-3,8,6,-8,-9,-6], dtype = "uint16")#candidate|4237|(52,)|const|uint16
var_4238 = relay.var("var_4238", dtype = "float32", shape = (132,))#candidate|4238|(132,)|var|float32
var_4239 = relay.var("var_4239", dtype = "float64", shape = (60, 36))#candidate|4239|(60, 36)|var|float64
call_4235 = relay.TupleGetItem(func_3031_call(relay.reshape(bop_4217.astype('float64'), [11, 9, 9]), relay.reshape(var_4236.astype('uint32'), [60, 24]), relay.reshape(const_4237.astype('uint16'), [52,]), relay.reshape(var_4238.astype('float32'), [132,]), relay.reshape(var_4239.astype('float64'), [2160,]), ), 6)
call_4240 = relay.TupleGetItem(func_3038_call(relay.reshape(bop_4217.astype('float64'), [11, 9, 9]), relay.reshape(var_4236.astype('uint32'), [60, 24]), relay.reshape(const_4237.astype('uint16'), [52,]), relay.reshape(var_4238.astype('float32'), [132,]), relay.reshape(var_4239.astype('float64'), [2160,]), ), 6)
bop_4246 = relay.bitwise_and(var_4238.astype('int64'), call_4205.astype('int64')) # shape=(210, 132)
bop_4249 = relay.bitwise_and(var_4238.astype('int64'), call_4206.astype('int64')) # shape=(210, 132)
func_292_call = mod.get_global_var('func_292')
func_296_call = mutated_mod.get_global_var('func_296')
const_4256 = relay.const([[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True]], dtype = "bool")#candidate|4256|(1274, 1)|const|bool
call_4255 = relay.TupleGetItem(func_292_call(relay.reshape(var_4238.astype('float32'), [3, 4, 11]), relay.reshape(const_4256.astype('bool'), [1274,]), ), 1)
call_4257 = relay.TupleGetItem(func_296_call(relay.reshape(var_4238.astype('float32'), [3, 4, 11]), relay.reshape(const_4256.astype('bool'), [1274,]), ), 1)
bop_4268 = relay.left_shift(var_4212.astype('int64'), relay.reshape(call_4211.astype('int64'), relay.shape_of(var_4212))) # shape=(468,)
bop_4271 = relay.left_shift(var_4212.astype('int64'), relay.reshape(call_4213.astype('int64'), relay.shape_of(var_4212))) # shape=(468,)
output = relay.Tuple([bop_4217,call_4235,var_4236,const_4237,var_4239,bop_4246,call_4255,const_4256,bop_4268,])
output2 = relay.Tuple([bop_4220,call_4240,var_4236,const_4237,var_4239,bop_4249,call_4257,const_4256,bop_4271,])
func_4277 = relay.Function([var_4212,var_4216,var_4236,var_4238,var_4239,], output)
mod['func_4277'] = func_4277
mod = relay.transform.InferType()(mod)
var_4278 = relay.var("var_4278", dtype = "int16", shape = (468,))#candidate|4278|(468,)|var|int16
var_4279 = relay.var("var_4279", dtype = "float64", shape = (11, 9, 9))#candidate|4279|(11, 9, 9)|var|float64
var_4280 = relay.var("var_4280", dtype = "uint32", shape = (1440,))#candidate|4280|(1440,)|var|uint32
var_4281 = relay.var("var_4281", dtype = "float32", shape = (132,))#candidate|4281|(132,)|var|float32
var_4282 = relay.var("var_4282", dtype = "float64", shape = (60, 36))#candidate|4282|(60, 36)|var|float64
output = func_4277(var_4278,var_4279,var_4280,var_4281,var_4282,)
func_4283 = relay.Function([var_4278,var_4279,var_4280,var_4281,var_4282,], output)
mutated_mod['func_4283'] = func_4283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4155_call = mod.get_global_var('func_4155')
func_4156_call = mutated_mod.get_global_var('func_4156')
call_4307 = relay.TupleGetItem(func_4155_call(), 0)
call_4308 = relay.TupleGetItem(func_4156_call(), 0)
output = relay.Tuple([call_4307,])
output2 = relay.Tuple([call_4308,])
func_4333 = relay.Function([], output)
mod['func_4333'] = func_4333
mod = relay.transform.InferType()(mod)
mutated_mod['func_4333'] = func_4333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4333_call = mutated_mod.get_global_var('func_4333')
call_4334 = func_4333_call()
output = call_4334
func_4335 = relay.Function([], output)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mod.get_global_var('func_2942')
func_2943_call = mutated_mod.get_global_var('func_2943')
call_4347 = relay.TupleGetItem(func_2942_call(), 0)
call_4348 = relay.TupleGetItem(func_2943_call(), 0)
func_3156_call = mod.get_global_var('func_3156')
func_3160_call = mutated_mod.get_global_var('func_3160')
var_4350 = relay.var("var_4350", dtype = "int16", shape = (1386,))#candidate|4350|(1386,)|var|int16
var_4351 = relay.var("var_4351", dtype = "int32", shape = (672,))#candidate|4351|(672,)|var|int32
call_4349 = relay.TupleGetItem(func_3156_call(relay.reshape(var_4350.astype('int16'), [11, 14, 9]), relay.reshape(var_4351.astype('int32'), [672,]), ), 0)
call_4352 = relay.TupleGetItem(func_3160_call(relay.reshape(var_4350.astype('int16'), [11, 14, 9]), relay.reshape(var_4351.astype('int32'), [672,]), ), 0)
func_3079_call = mod.get_global_var('func_3079')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_4372 = relay.TupleGetItem(func_3079_call(), 0)
call_4373 = relay.TupleGetItem(func_3081_call(), 0)
func_2857_call = mod.get_global_var('func_2857')
func_2861_call = mutated_mod.get_global_var('func_2861')
var_4376 = relay.var("var_4376", dtype = "uint64", shape = ())#candidate|4376|()|var|uint64
var_4377 = relay.var("var_4377", dtype = "uint64", shape = (7, 78))#candidate|4377|(7, 78)|var|uint64
call_4375 = func_2857_call(relay.reshape(var_4376.astype('uint64'), []), relay.reshape(var_4377.astype('uint64'), [6, 13, 7]), )
call_4378 = func_2857_call(relay.reshape(var_4376.astype('uint64'), []), relay.reshape(var_4377.astype('uint64'), [6, 13, 7]), )
output = relay.Tuple([call_4347,call_4349,var_4350,var_4351,call_4372,call_4375,var_4376,var_4377,])
output2 = relay.Tuple([call_4348,call_4352,var_4350,var_4351,call_4373,call_4378,var_4376,var_4377,])
func_4397 = relay.Function([var_4350,var_4351,var_4376,var_4377,], output)
mod['func_4397'] = func_4397
mod = relay.transform.InferType()(mod)
mutated_mod['func_4397'] = func_4397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4397_call = mutated_mod.get_global_var('func_4397')
var_4399 = relay.var("var_4399", dtype = "int16", shape = (1386,))#candidate|4399|(1386,)|var|int16
var_4400 = relay.var("var_4400", dtype = "int32", shape = (672,))#candidate|4400|(672,)|var|int32
var_4401 = relay.var("var_4401", dtype = "uint64", shape = ())#candidate|4401|()|var|uint64
var_4402 = relay.var("var_4402", dtype = "uint64", shape = (7, 78))#candidate|4402|(7, 78)|var|uint64
call_4398 = func_4397_call(var_4399,var_4400,var_4401,var_4402,)
output = call_4398
func_4403 = relay.Function([var_4399,var_4400,var_4401,var_4402,], output)
mutated_mod['func_4403'] = func_4403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4027_call = mod.get_global_var('func_4027')
func_4028_call = mutated_mod.get_global_var('func_4028')
call_4469 = relay.TupleGetItem(func_4027_call(), 0)
call_4470 = relay.TupleGetItem(func_4028_call(), 0)
output = relay.Tuple([call_4469,])
output2 = relay.Tuple([call_4470,])
func_4473 = relay.Function([], output)
mod['func_4473'] = func_4473
mod = relay.transform.InferType()(mod)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mutated_mod.get_global_var('func_4473')
call_4474 = func_4473_call()
output = call_4474
func_4475 = relay.Function([], output)
mutated_mod['func_4475'] = func_4475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2906_call = mod.get_global_var('func_2906')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_4516 = relay.TupleGetItem(func_2906_call(), 0)
call_4517 = relay.TupleGetItem(func_2907_call(), 0)
output = relay.Tuple([call_4516,])
output2 = relay.Tuple([call_4517,])
func_4534 = relay.Function([], output)
mod['func_4534'] = func_4534
mod = relay.transform.InferType()(mod)
mutated_mod['func_4534'] = func_4534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4534_call = mutated_mod.get_global_var('func_4534')
call_4535 = func_4534_call()
output = call_4535
func_4536 = relay.Function([], output)
mutated_mod['func_4536'] = func_4536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4620 = relay.var("var_4620", dtype = "int32", shape = (8, 8, 1))#candidate|4620|(8, 8, 1)|var|int32
const_4621 = relay.const([[[-3,10,-9,10,-4],[-3,-8,-8,1,-9],[-1,-4,3,5,-9],[9,7,9,6,3],[6,-8,-5,1,-4],[6,-5,-2,6,-2],[6,-9,3,-10,-9],[8,-9,10,-7,-9]],[[-1,-8,-7,7,-8],[10,-10,-8,9,1],[2,-1,-8,-4,-10],[-5,8,-9,4,10],[-7,-7,-9,10,-4],[6,-2,7,-8,4],[4,10,5,-8,-7],[10,-1,1,-3,-10]],[[3,4,-2,7,4],[9,3,1,-3,8],[1,4,-6,-2,5],[5,-7,-3,-2,1],[4,-7,1,6,8],[4,1,-1,-2,-3],[4,-4,10,10,-10],[9,2,10,3,7]],[[-9,3,8,4,-9],[-6,-8,4,10,10],[-4,5,-7,9,-10],[-5,9,8,4,-9],[2,5,-8,7,-10],[1,8,-2,-10,6],[9,-10,9,-8,-9],[-5,-2,10,-7,1]],[[4,5,-7,-6,10],[-8,3,-9,-5,7],[-4,6,3,10,-5],[-1,-3,2,7,-9],[-1,-8,-5,9,6],[6,8,-7,-8,-5],[8,-1,-6,2,-2],[-10,8,-7,7,-2]],[[2,4,-8,5,10],[10,-7,10,5,-7],[-3,-9,-7,1,-4],[8,9,-8,-4,4],[2,-1,-4,-4,-1],[5,10,-4,-2,-8],[7,2,7,-2,10],[3,9,-3,-5,3]],[[8,1,-6,4,7],[4,-7,10,4,-4],[-10,-8,-1,4,-8],[3,9,-5,-8,-10],[-10,-8,1,-10,2],[9,3,2,8,1],[5,5,9,-8,8],[1,-4,-6,9,-10]],[[-2,-4,8,-8,-2],[-4,4,-10,1,9],[5,9,8,-2,1],[-1,-1,-7,-1,-5],[5,-7,-1,3,2],[-1,-1,6,-4,-10],[10,-10,-6,-10,-4],[-7,6,-2,-2,9]]], dtype = "int32")#candidate|4621|(8, 8, 5)|const|int32
bop_4622 = relay.equal(var_4620.astype('bool'), const_4621.astype('bool')) # shape=(8, 8, 5)
uop_4625 = relay.log(const_4621.astype('float64')) # shape=(8, 8, 5)
var_4633 = relay.var("var_4633", dtype = "float64", shape = (8, 8, 5))#candidate|4633|(8, 8, 5)|var|float64
bop_4634 = relay.logical_and(uop_4625.astype('bool'), relay.reshape(var_4633.astype('bool'), relay.shape_of(uop_4625))) # shape=(8, 8, 5)
output = relay.Tuple([bop_4622,bop_4634,])
output2 = relay.Tuple([bop_4622,bop_4634,])
func_4637 = relay.Function([var_4620,var_4633,], output)
mod['func_4637'] = func_4637
mod = relay.transform.InferType()(mod)
var_4638 = relay.var("var_4638", dtype = "int32", shape = (8, 8, 1))#candidate|4638|(8, 8, 1)|var|int32
var_4639 = relay.var("var_4639", dtype = "float64", shape = (8, 8, 5))#candidate|4639|(8, 8, 5)|var|float64
output = func_4637(var_4638,var_4639,)
func_4640 = relay.Function([var_4638,var_4639,], output)
mutated_mod['func_4640'] = func_4640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_4647 = relay.TupleGetItem(func_3079_call(), 0)
call_4648 = relay.TupleGetItem(func_3081_call(), 0)
func_789_call = mod.get_global_var('func_789')
func_792_call = mutated_mod.get_global_var('func_792')
var_4653 = relay.var("var_4653", dtype = "float64", shape = (144, 1))#candidate|4653|(144, 1)|var|float64
const_4654 = relay.const([2.863810,-7.185816,6.572746,0.561140,8.271478,9.224427,-6.201782,-0.407848,2.123011,-2.398936,5.393190,9.603514,1.001963,9.374424,-4.081302,6.179028,2.107455,8.673717,0.777970,-9.482372,0.365709,5.336649,-1.491477,-2.414217,3.878878,-6.382856,9.922214,-8.912178,3.172475,-5.059306,8.914494,0.755513,3.402431,-4.542320,-3.087416,-6.784427,-6.132267,3.472516,8.306150,-6.317179,-3.642670,2.938939,-4.810184,0.771141,2.877494,-4.103155,6.910436,-7.928868,-9.665529,6.583550,5.106632,9.826131,3.042309,-0.462304,-9.534745,-4.745401,1.546643,-1.248384,0.150493,-6.977597,0.397697,-4.016386,-0.616958,-3.433604,6.263005,7.948584,1.294823,-6.069196,-6.404990,5.187409,-8.597072,0.284513,8.491296,9.795409,1.946321,9.324743,-4.273317,-8.233501,-2.755563,-2.028923,-5.797545,-9.258651,-0.981812,2.129958,6.537342,9.821211,-8.870766,-1.563797,-0.112800,-5.260630,1.323210,4.778067,3.630529,-3.112319,-5.201412,6.778638,1.725318,-4.624392,2.082630,-9.430176,-3.225267,-3.361032,-1.726948,-9.795078,-6.396073,1.325418,-3.703587,-1.547313,-7.106733,-2.663022,0.025253,6.248892,1.002005,-7.445895,3.345835,-8.317221,-2.188019,-4.845924,7.563333,1.403533,-5.257896,1.466313,7.428921,-4.048929,-0.664455,-4.235060,6.185846,-1.436793,2.604636,9.070631,8.051945,-3.745682,-8.662079,0.734857,7.210961,1.813603,4.422155,0.354737,-3.997065,-8.082485,-8.252232,-8.454084,-7.957474,-7.824253,5.679689,3.976828,4.225072,-9.414265,-5.414520,2.915871,2.508977,4.812265,6.530275,0.003230,1.848112,4.940987,0.925555,7.417697,-0.272314,9.994390,4.259232,4.852441,1.170760,-2.701072,9.322416,4.170475,-0.409131,1.756816,0.073366,-4.582260,-5.330809,-8.491738,9.092865,8.766879,-6.026779,-8.016576,3.946635,-0.826727,9.819636,5.012069,2.488371,2.664899,2.090846,6.532461,-4.213062,7.666475,5.966301,-6.565417,6.103348,1.752320,-2.901241,5.640766,0.173083,-6.229359,-5.139231,8.135720,7.199417,-1.247619,9.378774,4.782182,5.269542,-7.596405,8.357828,4.621685,-4.945798,-0.057086,-4.037001,3.435015,5.514044,2.703817,6.179649,5.111676,3.722499,6.224259,-4.695378,-9.429549,-7.249934,-0.173726,5.869202,-1.955742,-7.505963,8.610916,0.592842,-9.884955,-1.197644,-6.008423,-3.048411,-7.429204,1.949417,-7.318323,1.602676,6.280467,9.381700,3.996279,-7.673388,5.351734,-8.550595,4.441457,2.390347,-8.831734,9.174999,5.811536,8.324808,-4.745177,3.279249,-0.315059,7.708697,-0.956880,8.124600,-7.696374,-7.747832,4.760606,-2.826025,-5.914972,-4.372792,6.962932,7.997078,-9.896418,2.733656,-5.785878,0.382613,3.114637,-6.084506,-3.149724,0.885693,6.450949,-6.798953,-9.340028,-4.284946,-9.943735,2.390438,-8.459437,-5.534226,1.531031,6.597072,-6.403625,-6.259996,-4.765554,-6.879779,0.861818,1.282262,2.813482,7.148828,-4.373686,-2.047404,-9.090307,-4.077175,-3.482317,0.461823,-1.377265,6.849162,-3.438741,-9.736780,9.121584,5.538944,-0.841992,9.231026,-7.580973,4.655527,-5.871619,1.939749,-4.482941,-2.969646,-0.687509,-2.521515,-5.335774,2.638164,-2.248570,8.999079,-0.327864,-6.630993,7.407918,-9.860835,-5.673049,-7.080733,4.799903,3.845707,-1.457743,8.963222,-3.153831,5.142056,3.329637,4.172437,8.585354,3.244800,8.797472,-6.329293,-8.396404,-7.113057,3.380114,6.567203,-6.519812,-1.825077,-6.975156,0.130364,2.801264,-8.001151,9.153220,-1.769962,-1.182001,4.257692,9.020411,8.395166,-6.360892,-0.315183,-7.058443,2.782864,8.044444,4.050069,6.755892,-5.845169,-0.031824,3.303976,-7.561880,-5.717501,-4.742187,-7.307238,9.663929,3.165929,1.265644,8.917589,9.084085,-9.838631,-2.997098,7.062191,-1.885612,4.890702,-2.179706,-4.658730,-0.720479,0.897408,-0.277652,0.867375,0.337538,-5.781680,-0.684456,7.223469,-5.471724,-3.468816,8.924751,-5.460959,2.596140,-3.242250,-2.637120,-6.594929,5.818759,1.300237,6.970039,-9.382303,7.255153,1.209850,-1.175641,-6.579444,-5.186563,-7.755306,-6.448425,8.591873,-5.793719,6.832327,5.265705,6.062468,4.472488,-2.148890,0.700201,-7.026510,4.505435,5.561936,-1.359545,-2.040502,-6.432728,-8.297915,5.681758,1.793767,-2.325123,9.566436,-3.772463,-9.363372,7.186358,4.124565,6.934133,-4.163895,9.656930,7.479404,5.428831,5.857744,-4.346533,-3.278872,4.254687,2.139451,-8.426066,5.715686,0.200597,-6.546362,3.706487,-8.629260,2.223944,8.226891,-9.886624,-1.072397,9.329201,7.511116,-3.128157,4.924028,2.007183,3.894453,0.693830,4.617960,-4.986792,-3.607464,0.347180,6.307338,1.821122,9.125747,1.884488,8.263318,5.345366,-9.681343,-1.487937,-1.435698,-8.991354,7.768757,-6.331467,-8.894631,-8.578910,-4.950891,2.969372,8.049347,0.301580,-3.563982,-8.384849,3.132169,6.951115,8.193747,3.902336,9.414513,0.035720,-0.772829,7.246807,1.008084,2.879396,9.766588,9.127208,5.013622,-7.910251,1.177205,6.209937,-5.571537,-8.658655,-0.807771,9.710633,7.665855,-6.767812,6.507320,-7.152309,0.230846,-3.574019,1.831287,6.388457,-6.178682,-9.169526,1.263768,-4.982325,-9.340356,7.661288,1.843129,0.264697,-9.322559,-7.922652,4.260875,-6.149559,-0.261400,-7.921778,-8.508441,-3.917342,2.988953,-2.939743,-3.579385,-5.968879,8.355895,0.316733,7.722073,8.253421,-6.151338,1.772908,-9.968458,-1.568219,-9.871701,-7.264317,4.423822,-3.301326,-2.213527,1.178082,1.363085,0.285018,0.187074,9.598557,1.966898,-5.410885,-1.656712,-9.248475,5.642750,0.883867,9.363596,-3.104776,-6.753522,5.282169,1.083183,9.355178,-0.825667,0.889875,5.025105,-6.342666,3.710528,-0.978528,-2.060719,5.417387,-1.962435,-4.359746,-5.539717,-0.938450,5.883249,2.727723,-8.560598,7.452406,-4.630605,-1.052417,-9.415951,-9.333610,-2.846719,2.466866,8.291797,-5.732812,-6.895700,0.815781,-0.349614,0.456449,2.538798,-4.857024,-2.417904,1.620478,0.552644,-1.610511,-6.477511,2.739675,-0.448452,-0.691840,8.156823,8.267276,2.127157,1.665485,-8.498751,9.262852,2.740148,8.597372,0.547669,-3.576321,-5.121595,-6.408089,-6.059397,1.042478,1.840711,-6.995274,4.264871,-2.868809,3.151675,-2.664105,-3.702239,8.588329,5.502121,8.764805,9.341578,4.239128,5.588767,9.370496,-0.109352,-5.092824,-4.043967,-9.378848,-0.304897,-7.692181,-4.001371,0.778206,-2.897651,3.248332,3.478404,-8.348454,-8.726837,-4.220395,-0.651667,3.241391,8.103691,-0.434136,8.094201,1.205223,0.185042,8.658426,-3.275661,-8.155097,4.780744,-6.050031,2.441438,-3.898622,1.170650,8.248912,-8.499500,-1.507626,-2.885331,6.933544,8.949976,6.297279,-4.460243,1.292974,8.044987,4.729955,7.353870,2.137986,-9.970734,-2.170310,-6.180405,7.929459,5.371267,-8.462322,-7.467602,2.512243,-0.761928,-3.004130,6.313261,0.463283,-6.688666,6.181035,4.519543,-2.141097,-3.716162,7.162982,-9.589323,1.206042,-7.242661,0.039652,9.339271,-6.506122,0.444947,-3.041807,-8.949184,8.652479,-5.832853,-8.247203,5.583120,-1.803705,-6.461547,-5.156969,-6.987668,-2.251099,-7.519095,-2.717173,-5.927814,1.614656,7.182169,-3.315067,-2.936480,-3.252798,-2.465429,-0.420574,2.884184,-6.985020,-5.258036,-7.888095,-3.272757,9.118723,-9.031798,4.484396,-4.207293,-8.847232,-6.856977,-4.150604,-5.879593,-4.617742,3.333537,-6.020479,5.301966,-8.488052,-8.341997,-8.678437,7.021872,6.302187,8.605569,-2.887364,2.831292,-1.901461,0.655891,-0.387033,7.933054,2.398118,1.931440,-6.691863,-7.462604,-6.908963,6.694658,7.849706,-7.258939,8.210425,3.225550,-1.219619,-1.338789,9.696574,1.334469,-6.236314,-4.541185,3.662831,1.989141,-1.754262,7.665731,-1.603366,5.767558,2.464843,-1.172548,-3.744087,0.528494,0.050380,1.749749,3.594641,-1.470877,5.154248,6.707052,0.260521,-9.818229,-7.814500,-7.622402,4.561127,5.027620,-0.513760,1.742165,4.896286,3.091350,-4.247499,0.625745,8.452239,1.563469,-2.763335,1.334112,-1.859572,7.619496,9.275821,6.510615,-5.878018,-6.270245,4.510155,2.541477,-2.960388,8.579977,9.925267,-9.720832,-2.548786,9.618237,5.875065,-1.752727,5.457532,-4.080473,-5.028698,6.776012,-3.453367,3.918106,1.627337,9.774790,7.700214,-3.197234,6.867773,8.328974,8.820604,4.270424,6.121437,-6.851550,2.956728,-5.803808,-0.023680,-0.433452,4.966108,-8.733525,-7.247505,-5.821254,-1.852576,-7.683705,7.134340,-5.988062,6.805777,2.219395,2.584809,1.494245,4.495283,-0.515854,6.378341,-4.850483,-9.005277,4.998156,-7.796020,-6.372422,-8.752591,7.272995,-0.168414,-9.165887,7.930883,5.648882,6.328481,0.470286,-9.612660,0.402384,3.534874,-4.207390,-6.358217,-6.525850,5.554423,-9.195447,-4.510094,2.966139,7.294984,-4.882913,-4.504577,4.574403,-0.259204,-7.451504,4.919575,-3.284907,1.261440,-0.307566,-8.628279,2.084179,-7.313665,8.980715,5.444977,9.550663,2.803453,4.768061,5.945539,9.639813,8.303026,-8.785925,7.648512,5.796420,0.023551,8.652850,0.477818,6.837227,-9.383849,-3.658613,-1.961674,-9.697301,8.974721,5.029900,-0.370889,-7.689792,-0.151942,-2.091264,3.048546,-0.117027,-6.625785,-7.153730,-1.782409,4.877136,-3.407015,-4.968110,9.023533,-9.315322,-8.113167,-5.541562,2.026878,7.407915,1.853630,7.865132,5.714240,-3.681663,4.729623,6.410090,-5.112025,-0.403214,-2.305799,8.132279,3.118255,-9.749903,2.183032,7.104913,1.704542,-0.924474,-9.117968,1.749598,-0.229464,8.220401,-4.181968,7.080472,2.818497,-9.829428,2.366461,-1.567348,9.046818,-7.970742,7.266248,4.424987,-5.670294,8.837078,-1.387311,4.476205,-0.538810,-2.494991,5.722989,-5.767665,-6.086065,5.227027,-4.072602,-2.178267,-4.385553,8.951425,-4.341566,8.180474,-1.348770,-2.767604,0.535870,6.852364,-8.832908,0.440614,-5.465931,1.276722,-8.725923,-1.328940,-2.405459,-1.375705,1.897497,-9.426370,6.737315,2.863345,-2.834744,-4.632346,3.604419,-5.788721,5.080363,8.273237,6.117662,-9.248096,9.788145,-9.896584,-1.473513,2.073113,-6.485777,3.453601,7.738249,-1.473173,-2.490026,4.446824,-3.674430,-1.744045,4.903101,4.174642,-7.793786,-9.097810,-1.329215,2.619754,-0.832662,3.120266,-5.582347,-1.491757,3.454402,9.488841,8.589819,8.833999,-0.944705,6.046088,4.697192,-5.275561,0.990407,-9.668587,-2.443875,-7.655088,-6.497223,7.727065,-1.202225,-4.077083,-3.495418,-3.678197,-6.045950,-7.401638,7.163633,3.132470,-7.441483,-7.577509,-0.990031,-6.355913,-3.879453,6.798289,-8.280748,1.494187,-9.032098,-7.302042,3.330142,-7.974889,-6.493167,0.897304,4.503740,-8.679776,-4.374927,1.099887,3.924663,9.887533,-4.811321,-9.175259,-3.824012,4.304027,0.507696,5.416424,-5.012987,2.173578,-7.160164,-1.630977,8.929617,-5.785646,0.857751,-5.626812,1.497143,-7.897558,0.871652,-6.117745,-4.570840,-1.516012,0.164044,2.726688,-7.167621,-1.136978,4.097343,-1.178272,0.369223,-6.821515,-1.680063,-6.516903,1.734910,7.068590,1.984066,-9.011052,4.261586,-0.596396,-3.055274,3.616798,-0.784355,-6.967715,-4.611925,-5.748789,0.338853,3.789069,5.352960,0.085047,-2.369602,3.571050,-2.719806,-7.011160,1.871726,-1.874445,-2.096056,-6.864815,6.119135,-5.325605,8.714179,8.261286,4.418690,-8.107995,-5.055582,5.628004,-9.359178,6.603460,-7.482053,-7.882035,-7.117817,-8.587451,-7.959397,7.035535,8.288870,-9.072413,-0.257243,8.344796,-3.904417,-3.268578,5.863540,7.275264,0.013559,-8.520182,-9.183431,5.959952,0.554345,0.613358,-5.437614,5.277205,-0.077089,-6.356090,5.586525,3.035017,7.251148,5.078268,7.862324,-0.143383,9.804253,9.820311,9.869330,-0.184785,-4.426076,7.275725,-3.984337,-3.302959,-4.489882,3.669555,-5.167408,2.496991,-4.263935,-2.949522,5.513356,-7.163191,9.888206,6.318480,-0.869337,5.869167,9.876669,9.530048,8.524928,0.278470,-7.493055,1.957634,4.177697,-8.273513,5.017098,8.559991,6.410934,4.139512,0.035672,-2.540744,-6.152838,-1.611226,-4.990060,5.164466,9.052711,7.891728,0.183266,-4.062910,2.069103,1.190621,3.717808,3.332425,-7.635020,3.364333,4.965413,-7.619400,0.628261,-4.873298,-2.168306,7.265058,-6.301810,-8.979115,-2.895962,-9.976675,9.125604,-9.234795,-6.351730,-7.765272,4.327676,8.713154,2.439587,-6.392507,-1.658056,-5.474032,5.690328,5.563593,-4.448190,3.998227,-1.131155,-1.331235,1.168864,6.905616,-7.169769,7.385513,2.255129,0.200301,-0.162544,-6.177410,-9.832213,9.878749,-5.717707,4.418983,-6.298078,6.634364,-5.828238,5.023777,3.982642,1.764214,-9.359523,8.961976,9.560325,-4.435772,-4.026769,2.918104,1.478391,-6.474899,3.317066,-4.013647,3.925305,-7.137598,7.145350,0.444400,-9.515034,-1.616609,4.028181,4.630078,-5.445907,-9.849987,-7.712501,6.578045,3.846061,4.602325,1.173913,-3.206065,-8.570458,-4.294074,-6.536371,-3.261279,2.733319,4.506765,-4.718178,3.203314,-4.789792,1.999212,9.663631,-4.690794,8.227987,7.248676,2.615568,9.369697,6.113512,7.378951,6.554996,-3.640185,8.231568,-7.583523,-6.316025,-6.084294,3.205587,4.055598,0.930776,0.942623,-0.673472,7.780022,8.830062,0.157573,6.653800,-7.943731,-6.554589,7.713964,1.687076,5.915075,1.334921,-6.420084,2.001753,-0.853884,-5.121400,5.824751,-0.070998,-9.467512,2.150582,-6.747177,6.771483,-1.875145,-0.495588,2.553915,2.429720,8.541253,-3.917301,4.769720,-9.091059,-5.385293,-8.175152,8.883417,0.516730,-7.054619,4.403754,1.254966,6.304269,-2.182652,4.759759,4.601297,-0.603264,5.520563,8.740221,-7.495668,-3.687500,-8.746757,8.319814,-9.061914,4.708302,0.374128,1.757512,9.239839,-0.349340,-9.363623,3.941365,-4.032456,0.472613,1.548637,6.509710,-8.595287,-6.551239,-0.148461,-6.492943,-6.192197,6.720351,-0.239776,-4.246435,6.117082,1.635331,-7.510066,-8.777033,-0.594844,7.678619,-6.036877,4.923850,-6.891262,9.327366,8.099880,8.876019,1.626237,-4.240386,-1.965237,-3.806988,3.101325,7.110501,-0.043633,7.557405,2.640170,-0.843707,3.305746,-1.794415,-1.320288,-9.846130,4.154647,6.089749,-5.631363,-6.134909,4.666904,-9.032627,-5.139783,-1.317501,6.431092,8.366217,-2.646519,-4.355361,-2.541107,-3.774605,-7.964152,-0.497198,-7.088804,4.991095,4.186736,5.286506,-7.883075,-4.193761,-5.255858,8.611134,-9.912698,-6.394971,9.405682,-3.636891,-1.573030,-6.585867,5.444624,-3.539660,-6.018172,-5.811282,-9.638262,-2.873234,8.055206,4.669850,-9.676986,-3.480256,-3.806618,3.826273,1.575909,8.840619,-3.256073,0.663815,-8.856493,-7.305338,5.377826,5.665177,-3.530552,-5.035095,-2.935859,0.183290,-7.191144,9.370890,5.220869,-0.950265,-7.317006,-1.847333,6.577854,-5.371993,9.676730,6.738223,7.355548,-5.901066,-7.160807,8.557293,9.876254,3.902185,-5.375342,-5.150641,-7.598929,1.102026,-2.157261,9.915974,4.505924,5.263317,-1.690382,7.507958,9.696323,-1.789622,-9.761640,-9.501838,-9.015937,7.512451,-3.907926,-6.224678,8.062371,1.376728,2.142367,7.799039,-8.143075,-1.081526,0.479381,-5.680862,9.827859,1.981901,7.828301,9.686342,8.670315,-6.475017,-0.495189,-7.887572,-2.103100,2.984289,8.281883,-9.485347,-6.635890,-8.925747,-8.933073,-2.956806,8.291426,6.170762,-5.687291,1.781622,-6.296959,3.440668,-0.878804,-1.007106,-2.778217,7.540803,-3.834751,5.473651,-8.294962,1.317837,9.054729,-7.516652,8.034346,2.420270,9.416358,4.652724,-9.149364,-4.320780,2.544054,-4.597006,3.448914,7.040846,2.949600,-7.987308,-4.848092,3.893198,2.045244,3.598896,0.526984,-5.066604,3.530104,-8.073809,7.876556,-7.780914,2.776517,-0.244109,-7.109203,3.585293,-7.370187,3.909181,0.388413,-9.358226,3.307035,0.653952,-6.311611,0.873303,8.502974,-1.039690,-1.150476,8.839554,7.064196,-1.874121,0.412033,9.941871,3.515835,2.066054,9.575963,-9.236197,0.279390,-5.882432,8.119900,1.132818,3.606703,8.625056,-0.661037,-7.009207,-9.311591,-7.385175,-5.677547,-0.081235,-4.549959,-0.327969,2.002403,-9.250312,-9.834472,2.263722,-3.685941,-2.003041,-6.786387,-9.696977,6.884750,-0.121645,2.477392,2.213235,-0.586673,-4.580752,5.318797,6.765962,2.270524,5.322324,-0.453167,4.363136,6.305469,-0.678728,-8.898821,4.619539,6.493460,2.504004,-0.359992,-7.234836,-6.204128,3.526210,8.246602,1.448762,4.690904,-2.518872,3.715816,-7.637140,-6.680175,-5.326040,8.560590,-6.884025,5.462937,-7.105930,-8.238571,-6.296674,5.985618,4.651982,-8.031798,5.966603,2.342259,3.879575,4.893005,-3.024787,8.337480,-8.786124,-0.564973,3.010896,5.627399,9.944059,0.459452,-6.291108,9.619379,1.434565,-2.147391,7.049749,0.125205,-9.841743,5.339867,-9.103681,8.567280,1.477550,6.964311,8.840027,-7.265822,-1.405493,8.820323,-6.736475,-5.174150,-8.358212,-7.246420,0.291462,1.216315,4.978747,-3.793541,6.238333,-7.575329,2.754907,7.628240,-4.079889,1.738574,4.017849,-4.132630,7.903307,-2.955964,4.749568,-3.199009,-0.847145,2.320382,-6.744334,7.657282,8.148363,-6.273210,3.806116,-6.345268,-8.562716,-0.747760,-4.967578,5.317862,-0.403979,3.838508,1.345124,-1.799285,5.169503,9.573933,7.142131,1.116100,-7.777162,6.650674,-3.519877,-4.564766,5.913673,-3.928876,7.122725,6.841264,4.134603,3.064177,-3.007829,-1.827116,5.059116,8.829303,-6.080333,-6.234100,9.004982,-3.857856,8.388541,-2.938099,-4.821702,-4.583475,-0.757220,9.828669,-9.679679,-6.822705,-0.553987,8.886939,-7.249919,-3.656758,9.499230,-1.666178,-8.048759,-0.112459,9.060070,-4.248878,-4.112432,3.580125,-9.340992,-5.421364,5.969514,-6.970042,-0.827574,-4.726699,-5.243593,5.984435,4.247895,-4.855463,8.004633,6.585931,8.013703,-2.750923,-7.048187,7.796083,-3.139998,7.963334,-2.668535,8.909740,2.364403,-9.335821,-8.180069,-7.155650,0.025827,2.634622,0.183682,1.391468,-8.558366,-5.371175,1.712437,3.342070,-9.151160,6.772259,-1.068259,0.460910,-9.125422,-9.871494,5.227539,-7.229839,6.278379,0.356386,-8.057891,-2.182175,-9.131605,8.529136,-2.705118,7.852686,-2.551823,9.609712,1.531842,-7.379748,-9.381836,-9.704151,4.747490,-0.029935,-6.544956,-3.603197,-4.557773,6.251126,3.317321,-6.912501,-1.380839,-2.455390,6.289715,6.673472,-8.497251,-1.850922,-2.802020,6.760153,-5.965123,0.522348,6.765715,7.674588,-1.488213,4.929096,-1.232709,9.642670,4.698068,8.430309,2.429780,-3.967961,-9.991467,9.769931,6.944156,0.847163,-3.901582,1.668396,-8.656414,-8.551520,4.538524,-4.956781,0.854381,-8.225834,-5.366918,4.115539,6.078757,3.595540,7.072135,-9.646069,4.151401,-2.068197,-8.253417,-0.172108,-8.842338,2.848973,-6.728737,5.752154,0.435789,-3.786760,4.032524,-7.272643,0.984049,9.507879,-6.052388,-0.150687,7.365105,6.128188,-6.399408,-9.916222,-1.472393,-7.254717,2.190559,3.766993,-2.586287,-9.160480,1.345907,-8.802494,8.594556,5.181556,7.640021,3.881775,-0.800327,3.610479,-8.981197,-4.939540,5.782686,1.856932,-2.601521,-9.765802,9.924562,0.084845,1.453893,8.807657,0.130001,-2.075925,-9.776173,3.104704,-0.840743,8.531632,-0.319106,-7.602974,3.905383,-9.486150,-3.450936,-6.199667,-5.779152,-3.967101,1.119053,-8.559578,8.138383,4.054428,-7.649443,-1.104526,7.521043,-5.689360,8.555515,-8.280466,-9.699949,3.789874,1.195620,-2.486242,4.177241,7.089253,9.273159,5.898326,-4.951397,-7.003919,3.678925,3.054489,1.884843,-9.086051,-6.515239,9.684959,3.752673,2.653552,-6.541404,-9.181096,8.255630,-1.922219,3.331683,9.527362,-5.234687,5.714304,-1.183255,2.154437,-8.670734,8.168346,-0.139321,2.438440,7.932148,-8.174072,4.828104,9.131355,-6.555301,0.590080,2.369494,3.006182,-0.089634,4.062059,2.582146,-0.051984,-3.192545,4.724636,-2.079066,-8.935406,7.416022,0.519810,-4.993996,9.529050,-5.964659,-3.788210,9.461412,-9.579751,-1.818688,2.787518,-6.114267,5.625771,2.118998,7.956350,-5.968100,0.962751,-2.737656,-5.295947,0.277862,0.982635,-6.330908,4.324211,8.272855,7.561888,6.631229,3.419882,7.444725,-5.010880,6.723825,-4.323328,6.840511,-0.588496,9.791904,-1.116621,-5.080537,-2.856782,-9.246028,7.157138,3.864119,7.475087,2.932683,-3.862748,-5.930446,6.865920,-4.497093,5.210614,2.653055,7.875921,-1.882005,5.631836,9.040189,4.394665,4.859813,5.908482,0.132438,4.183311,-7.368906,5.008113,-6.111933,-5.172615,9.101667,-5.334302,2.628660,2.881652,-2.714772,5.392655,-6.942244,7.549134,1.133734,4.282640,2.153556,5.752359,-7.766198,-5.392962,1.766339,-8.634794,-0.101402,4.541357,-3.419255,0.459470,4.937555,9.825620,6.713630,6.443249,8.579774,-7.959740,8.695729,-0.208035,-5.700533,-0.861768,-6.941812,-4.696333,0.560336,-2.134982,-7.856821,-8.917183,-8.165731,-7.539149,-5.244522,-3.267258,-1.134385,6.529433,-4.951703,7.176786,-3.662171,-5.264091,-0.763199,-4.486783,-6.843126,-9.193661,-8.251422,-0.016975,-9.757397,8.213552,-1.125872,-2.895381,-6.329623,-0.691295,-3.560192,6.597629,0.073002,3.311792,2.128939,-4.198236,-5.822412,-9.650120,7.830233,-1.783036,2.580310,6.531627,0.980729,-8.250112,9.541833,2.289385,2.183025,-8.057221,-9.229535,-5.487647,8.252001,-0.794723,1.255085,3.353773,5.720078,-7.244257,9.353194,5.884968,-6.393300,-0.429537,-3.228775,4.108444,-6.912386,8.318423,4.755485,-1.228725,-0.833808,-6.343930,-7.270538,-3.336418,8.825295,-0.352574,-3.428665,-7.141753,-9.923479,-3.539138,-1.821287,-8.476420,-9.456549,1.765962,8.612922,-7.392015,-5.278364,-0.431835,-0.045946,5.211492,3.321410,-3.234853,1.703238,-8.771139,1.652581,-1.849689,-9.158292,6.911150,-2.901715,-3.366664,-2.087969,0.998145,-7.852755,3.772363,6.668344,-7.945274,5.610146,-3.612309,0.657090,-7.557624,-2.341243,-4.909478,9.007796,2.920638,0.838290,8.862319,-1.803502,-7.981058,-1.054562,-1.036413,-0.821847,9.743596,8.250839,-4.616105,-9.677701,-8.524145,-6.097888,-2.104054,-5.102131,1.648711,4.738278,6.028739,-3.275020,-6.150194,-1.730467,-5.476737,-4.147288,-1.779416,1.085065,-8.741486,7.410152,-8.854600,-6.312615,9.564832,-3.297567,-1.308198,9.466618], dtype = "float64")#candidate|4654|(2160,)|const|float64
call_4652 = relay.TupleGetItem(func_789_call(relay.reshape(var_4653.astype('float64'), [16, 9, 1]), relay.reshape(const_4654.astype('float64'), [16, 9, 15]), ), 1)
call_4655 = relay.TupleGetItem(func_792_call(relay.reshape(var_4653.astype('float64'), [16, 9, 1]), relay.reshape(const_4654.astype('float64'), [16, 9, 15]), ), 1)
func_3031_call = mod.get_global_var('func_3031')
func_3038_call = mutated_mod.get_global_var('func_3038')
const_4665 = relay.const([-9,-7,-10,7,-10,4,2,1,6,-9,-2,-3,-1,10,-6,-1,-9,-9,-3,-10,1,8,1,-7,1,-1,-7,8,9,-7,-2,-10,-7,9,-5,-5,-4,-10,-2,-9,-5,4,7,9,-1,-1,-7,3,9,-5,2,3,-3,-8,-9,6,7,5,-5,10,-3,10,-3,5,6,8,-10,-1,-1,-7,-3,-4,4,-6,6,-4,8,-10,-6,3,-4,7,2,-6,6,3,6,-4,9,-1,8,3,-1,7,5,-9,-2,3,-6,-7,2,-6,9,3,9,-10,-1,-3,3,10,-3,-7,9,1,8,-10,7,-1,5,4,-5,-9,7,-9,-3,10,-9,-2,-6,-4,10,7,1,4,9,7,4,2,-9,4,1,-9,1,-7,-4,-3,6,-2,7,2,-5,2,5,1,-7,8,-6,-8,-8,-6,-9,-7,-1,3,-4,-6,2,-8,-5,2,3,2,7,-10,7,1,7,1,6,9,-7,-1,-4,7,-10,-1,-1,6,-3,4,2,-5,3,8,8,-1,2,-5,5,-8,-2,-9,2,-10,-10,6,-10,-1,-7,-4,8,-1,9,9,-9,-8,5,-4,3,-3,-10,6,-10,-5,-10,1,4,10,-9,7,5,-10,5,9,-8,4,3,-10,-9,-1,3,6,-5,3,5,-1,9,3,5,-3,-6,3,-9,4,7,8,7,-9,10,6,6,-6,-9,9,10,-9,1,8,6,-9,-7,-4,10,-9,-7,-6,2,-6,-10,7,10,-6,1,-2,-6,-9,-9,9,6,10,3,-6,9,-10,-8,-8,-4,-9,8,1,4,9,2,-3,-6,-4,2,-5,-2,7,-3,-8,1,1,1,-5,1,8,-2,4,7,-8,-7,-7,10,-9,-1,10,-6,-1,-3,2,10,9,-3,9,-2,7,10,8,-10,-2,4,2,3,9,-2,1,-10,-4,-7,3,10,9,-5,-1,-4,5,5,1,3,-5,8,-6,10,3,5,-7,7,-8,-2,7,-3,7,-10,-7,6,-7,-2,5,7,9,8,-8,1,9,-6,-3,-9,-7,7,-1,8,9,4,-1,-4,4,6,8,9,-3,2,-2,-6,-9,6,8,-9,-5,-1,-6,5,-8,2,-8,-1,-6,9,-3,8,10,3,8,-4,-7,-9,9,-2,7,-1,5,-8,-7,8,3,-4,-9,-2,-1,2,-1,-10,7,7,6,-8,2,-9,-4,10,2,-2,-3,2,1,1,-6,-2,2,4,-7,-6,-8,-9,3,-10,5,8,8,-9,5,-1,-10,-4,2,10,-10,-10,3,-1,-1,3,-4,-2,-2,-3,3,-10,7,-7,1,8,-4,-8,-10,-5,-1,-6,1,9,-1,2,6,-10,5,-10,5,-6,8,9,-6,-8,-5,3,-2,-1,5,-10,-7,-2,8,-9,-1,5,2,5,10,-4,-8,9,9,5,-3,-7,-5,-3,2,-9,8,2,8,5,-3,-1,5,-10,-1,-2,-8,-7,7,-6,-1,-4,9,-6,-5,6,-1,8,-8,2,-3,-6,-1,-6,2,-1,-8,-1,-3,5,9,8,10,-5,6,10,2,-4,6,3,-1,10,-1,8,9,4,7,-9,9,5,-3,-9,-10,10,-3,5,-9,-5,7,4,9,5,1,-10,2,-10,-2,-2,1,8,4,8,-10,2,6,-3,-6,-8,-6,9,-8,3,-7,-10,-6,10,4,3,-1,-1,-3,-2,5,-5,-2,1,5,-8,10,1,-8,5,-1,6,-3,8,1,4,2,1,6,-4,5,-5,1,10,-9,1,-3,-3,-4,-2,-3,-5,6,10,5,4,7,-4,7,6,-6,7,6,6,3,6,-4,4,6,-5,10,-10,1,3,-5,4,-8,3,-3,3,-8,-3,-10,6,10,7,-1,5,1,9,-7,-1,6,-8,-4,-2,-9,-9,-1,-7,6,-9,10,-10,1,9,4,4,4,6,2,2,-2,-2,-6,2,-4,-1,-6,-7,10,-7,-8,2,-5,-1,8,-10,-6,3,-3,4,-9,-2,-5,4,-7,-2,3,10,-4,-3,-6,-3,5,-6,3,6,6,7,-8,-9,-1,3,-4,-2,-4,1,7,-4,-1,3,-10,-8,-8,8,-7,5,7,-3,-9,-1,9,-2,-7,-1,7,-6,6,5,-10,-1,1,6,2,-1,4,3,-8,-10,-3,5,6,9,5,5,9,4,-2,8,-8,6,-4,5,-7,-7,5,-10,-5,-2,-3,8,3,-1,-2,10,1,4,-8,-7,4,-3,8,-2,2,-7,-1,8,7,-10,8,1,-9,-5,3,-9,-6,6,8,8,1,7,-10,-5,-4,-8,-6,-4,-3,9,-8,3,-3,-9,6,-10,-3,-7,4,4,7,-10,10,-8,-2,-8,-7,4,9,-10,-3,10,-7,-10,10,-9,-5,-2,5,-9,6,7,10,5,7,4,4,-5,-2,-2,-7,1,-1,9,10,-3,9,2,-1,9,-2,7,9,-7,-5,5,-3,5,7,10,-6,-8,2,2,-8,-1,-6,-4,-10,-7,-3,8,9,10,1,-7,-4,10,6,-1,-5,-3,-3,-5,2,-8,4,-1,-1,-1,2,9,-5,-3,-3,3,7,8,-5,-10,4,-3,6,-3,8,1,-4,-5,-9,7,-3,9,-8,-7,-1,1,-9,-4,-10,-1,-1,-8,3,1,4,-4,-10,-6,-4,-1,-1,10,9,-4,9,9,10,-4,-3,-4,6,-5,-5,-5,5,3,8,-6,5,10,-9,-5,-8,-9,7,9,3,8,-6,-6,8,-7,-3,7,-4,4,-6,2,10,-5,7,8,10,10,10,-5,7,9,4,8,1,-3,2,10,-7,9,-1,-3,-7,-8,-1,7,6,8,2,-10,-9,-1,-8,-3,8,-8,10,-3,-4,-4,-6,3,-7,-2,6,-1,6,-5,4,9,9,2,-9,-4,6,10,-1,3,-1,-8,-8,-1,2,1,6,-8,9,4,-5,-3,-8,-2,-3,8,2,2,-6,6,-2,6,1,1,-3,10,-5,10,5,2,-9,-5,-8,-10,-1,-4,7,1,3,-10,6,6,-2,-5,-10,-6,-7,7,7,10,6,-2,-4,-1,-4,-3,10,2,-6,10,3,-5,6,-8,9,-2,3,-10,-7,-2,-1,-1,-4,2,1,-6,-7,-9,-2,7,-4,-8,2,-4,8,-10,-10,-9,-6,-4,10,-3,2,-9,8,8,4,-1,-4,7,-10,1,10,4,-9,-6,10,-8,-1,7,-3,-3,10,3,-8,6,-9,-8,6,-8,-8,-8,4,-1,2,-4,2,2,-1,6,7,-7,-10,7,5,-3,-8,3,8,6,-1,-5,-8,-5,-1,-2,4,3,4,-9,5,-6,-4,6,-3,2,-3,-9,1,3,4,10,-5,-1,5,2,4,5,-6,-2,5,5,10,-2,7,-4,-1,8,-9,8,10,4,-5,4,3,-10,-9,-6,-8,-1,-6,-7,-1,-4,5,4,2,-9,-10,8,-8,-10,5,5,6,10,3,10,4,4,-6,5,8,-4,-5,-10,3,10,-9,3,5,9,5,-3,3,-8,-8,8,-7,2,7,6,3,-9,-3,8,-10,-7,6,3,1,-8,-6,-5,-1,4,-1,9,8,-6,2,10,-3,-8,9,8,-5,-9,5,4,10,-3,10,-7,-1,9,9,7,8,-10,-9,7,5,4,9,-7,6,2,-3,2,1,9,-3,-3,4,-8,-2,-4,2,-8,-4,1,-6,-5,1,-2,1,4,8,4,1,-4,8,9,-5,-10,3,-2,4,7,-5,8,2,9,-7,1,-5,-10,-4,5,-7,10,-6,-8,-10,-4,6,10,-3,-8,-1,10,-6,1,1,-9,10,-8,-2,7,-1,-6,4,-3,-4,-9,1,-1,2,-5,7], dtype = "uint32")#candidate|4665|(1440,)|const|uint32
const_4666 = relay.const([3,-5,4,-10,6,2,-1,-9,7,10,-9,-5,4,-4,-5,-9,-10,7,10,-9,-3,-8,-7,9,-9,3,1,-1,-9,-7,-7,5,5,-3,9,-1,4,-7,8,-4,9,5,5,-7,8,-1,2,-4,9,-2,-1,3], dtype = "uint16")#candidate|4666|(52,)|const|uint16
var_4667 = relay.var("var_4667", dtype = "float32", shape = (132,))#candidate|4667|(132,)|var|float32
call_4664 = relay.TupleGetItem(func_3031_call(relay.reshape(call_4647.astype('float64'), [11, 9, 9]), relay.reshape(const_4665.astype('uint32'), [60, 24]), relay.reshape(const_4666.astype('uint16'), [52,]), relay.reshape(var_4667.astype('float32'), [132,]), relay.reshape(const_4654.astype('float64'), [2160,]), ), 7)
call_4668 = relay.TupleGetItem(func_3038_call(relay.reshape(call_4647.astype('float64'), [11, 9, 9]), relay.reshape(const_4665.astype('uint32'), [60, 24]), relay.reshape(const_4666.astype('uint16'), [52,]), relay.reshape(var_4667.astype('float32'), [132,]), relay.reshape(const_4654.astype('float64'), [2160,]), ), 7)
output = relay.Tuple([call_4647,call_4652,var_4653,const_4654,call_4664,const_4665,const_4666,var_4667,])
output2 = relay.Tuple([call_4648,call_4655,var_4653,const_4654,call_4668,const_4665,const_4666,var_4667,])
func_4672 = relay.Function([var_4653,var_4667,], output)
mod['func_4672'] = func_4672
mod = relay.transform.InferType()(mod)
var_4673 = relay.var("var_4673", dtype = "float64", shape = (144, 1))#candidate|4673|(144, 1)|var|float64
var_4674 = relay.var("var_4674", dtype = "float32", shape = (132,))#candidate|4674|(132,)|var|float32
output = func_4672(var_4673,var_4674,)
func_4675 = relay.Function([var_4673,var_4674,], output)
mutated_mod['func_4675'] = func_4675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_4759 = func_3611_call()
call_4760 = func_3611_call()
output = relay.Tuple([call_4759,])
output2 = relay.Tuple([call_4760,])
func_4786 = relay.Function([], output)
mod['func_4786'] = func_4786
mod = relay.transform.InferType()(mod)
output = func_4786()
func_4787 = relay.Function([], output)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4882 = relay.var("var_4882", dtype = "float64", shape = (11, 3, 3))#candidate|4882|(11, 3, 3)|var|float64
const_4883 = relay.const([[[1.847312,-9.927400,-9.040292],[8.741647,9.997939,8.858745],[1.797236,2.371878,-6.161730]],[[-8.145469,8.132931,-1.037062],[7.508046,7.206610,5.587015],[-6.906011,-5.465971,-4.237805]],[[-1.153654,1.993185,3.952083],[9.485570,9.369188,-2.441045],[5.448704,-5.138654,-6.813763]],[[-8.977619,8.403327,6.910321],[-8.900279,3.515190,9.174108],[0.563268,5.336704,9.906012]],[[-1.504621,9.013512,-7.554004],[4.774875,2.285113,-2.885991],[4.834946,2.764675,-2.621048]],[[3.377745,-2.825957,-8.913101],[-2.921434,-2.853303,-5.427342],[-6.136079,-3.341537,-1.544068]],[[9.333549,-2.588838,3.679413],[9.215974,3.487243,0.698352],[0.960975,-6.323074,9.127256]],[[6.594780,6.899714,1.256164],[-1.663877,-2.727338,-1.339392],[1.572212,-0.421224,-9.471078]],[[-8.047631,-5.150762,-3.653258],[5.470486,-9.914689,7.821839],[-1.290060,0.796982,-0.442444]],[[5.999410,2.022308,3.805328],[-2.320758,0.230999,7.282207],[8.876703,6.072510,6.767372]],[[8.031981,-0.875797,8.336788],[-0.206100,-1.105483,0.018826],[-9.160765,6.695313,-6.396215]]], dtype = "float64")#candidate|4883|(11, 3, 3)|const|float64
bop_4884 = relay.less(var_4882.astype('bool'), relay.reshape(const_4883.astype('bool'), relay.shape_of(var_4882))) # shape=(11, 3, 3)
output = relay.Tuple([bop_4884,])
output2 = relay.Tuple([bop_4884,])
func_4902 = relay.Function([var_4882,], output)
mod['func_4902'] = func_4902
mod = relay.transform.InferType()(mod)
var_4903 = relay.var("var_4903", dtype = "float64", shape = (11, 3, 3))#candidate|4903|(11, 3, 3)|var|float64
output = func_4902(var_4903)
func_4904 = relay.Function([var_4903], output)
mutated_mod['func_4904'] = func_4904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3206_call = mod.get_global_var('func_3206')
func_3207_call = mutated_mod.get_global_var('func_3207')
call_4918 = relay.TupleGetItem(func_3206_call(), 0)
call_4919 = relay.TupleGetItem(func_3207_call(), 0)
output = relay.Tuple([call_4918,])
output2 = relay.Tuple([call_4919,])
func_4932 = relay.Function([], output)
mod['func_4932'] = func_4932
mod = relay.transform.InferType()(mod)
output = func_4932()
func_4933 = relay.Function([], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3206_call = mod.get_global_var('func_3206')
func_3207_call = mutated_mod.get_global_var('func_3207')
call_4946 = relay.TupleGetItem(func_3206_call(), 0)
call_4947 = relay.TupleGetItem(func_3207_call(), 0)
output = call_4946
output2 = call_4947
func_4960 = relay.Function([], output)
mod['func_4960'] = func_4960
mod = relay.transform.InferType()(mod)
mutated_mod['func_4960'] = func_4960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4960_call = mutated_mod.get_global_var('func_4960')
call_4961 = func_4960_call()
output = call_4961
func_4962 = relay.Function([], output)
mutated_mod['func_4962'] = func_4962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_4987 = func_4175_call()
call_4988 = func_4175_call()
output = relay.Tuple([call_4987,])
output2 = relay.Tuple([call_4988,])
func_4989 = relay.Function([], output)
mod['func_4989'] = func_4989
mod = relay.transform.InferType()(mod)
mutated_mod['func_4989'] = func_4989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4989_call = mutated_mod.get_global_var('func_4989')
call_4990 = func_4989_call()
output = call_4990
func_4991 = relay.Function([], output)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_5011 = func_3548_call()
call_5012 = func_3548_call()
uop_5014 = relay.asin(call_5011.astype('float64')) # shape=(11, 9, 9)
uop_5016 = relay.asin(call_5012.astype('float64')) # shape=(11, 9, 9)
func_1232_call = mod.get_global_var('func_1232')
func_1235_call = mutated_mod.get_global_var('func_1235')
var_5032 = relay.var("var_5032", dtype = "float32", shape = (12,))#candidate|5032|(12,)|var|float32
call_5031 = relay.TupleGetItem(func_1232_call(relay.reshape(var_5032.astype('float32'), [4, 1, 3])), 0)
call_5033 = relay.TupleGetItem(func_1235_call(relay.reshape(var_5032.astype('float32'), [4, 1, 3])), 0)
output = relay.Tuple([uop_5014,call_5031,var_5032,])
output2 = relay.Tuple([uop_5016,call_5033,var_5032,])
func_5038 = relay.Function([var_5032,], output)
mod['func_5038'] = func_5038
mod = relay.transform.InferType()(mod)
mutated_mod['func_5038'] = func_5038
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5039 = relay.var("var_5039", dtype = "float32", shape = (12,))#candidate|5039|(12,)|var|float32
func_5038_call = mutated_mod.get_global_var('func_5038')
call_5040 = func_5038_call(var_5039)
output = call_5040
func_5041 = relay.Function([var_5039], output)
mutated_mod['func_5041'] = func_5041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5092 = relay.var("var_5092", dtype = "int32", shape = ())#candidate|5092|()|var|int32
var_5093 = relay.var("var_5093", dtype = "int32", shape = (4, 14, 8))#candidate|5093|(4, 14, 8)|var|int32
bop_5094 = relay.bitwise_or(var_5092.astype('int32'), var_5093.astype('int32')) # shape=(4, 14, 8)
bop_5113 = relay.divide(var_5092.astype('float32'), var_5093.astype('float32')) # shape=(4, 14, 8)
func_4960_call = mod.get_global_var('func_4960')
func_4962_call = mutated_mod.get_global_var('func_4962')
call_5116 = func_4960_call()
call_5117 = func_4960_call()
bop_5126 = relay.bitwise_xor(bop_5094.astype('uint16'), relay.reshape(var_5093.astype('uint16'), relay.shape_of(bop_5094))) # shape=(4, 14, 8)
output = relay.Tuple([bop_5113,call_5116,bop_5126,])
output2 = relay.Tuple([bop_5113,call_5117,bop_5126,])
func_5129 = relay.Function([var_5092,var_5093,], output)
mod['func_5129'] = func_5129
mod = relay.transform.InferType()(mod)
var_5130 = relay.var("var_5130", dtype = "int32", shape = ())#candidate|5130|()|var|int32
var_5131 = relay.var("var_5131", dtype = "int32", shape = (4, 14, 8))#candidate|5131|(4, 14, 8)|var|int32
output = func_5129(var_5130,var_5131,)
func_5132 = relay.Function([var_5130,var_5131,], output)
mutated_mod['func_5132'] = func_5132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_5170 = func_3611_call()
call_5171 = func_3611_call()
func_1232_call = mod.get_global_var('func_1232')
func_1235_call = mutated_mod.get_global_var('func_1235')
const_5184 = relay.const([[1.365488,5.296089],[1.950290,9.977003],[1.261475,1.160107],[-1.239658,2.410866],[-7.886856,7.754497],[5.997689,-6.483243]], dtype = "float32")#candidate|5184|(6, 2)|const|float32
call_5183 = relay.TupleGetItem(func_1232_call(relay.reshape(const_5184.astype('float32'), [4, 1, 3])), 0)
call_5185 = relay.TupleGetItem(func_1235_call(relay.reshape(const_5184.astype('float32'), [4, 1, 3])), 0)
output = relay.Tuple([call_5170,call_5183,const_5184,])
output2 = relay.Tuple([call_5171,call_5185,const_5184,])
func_5186 = relay.Function([], output)
mod['func_5186'] = func_5186
mod = relay.transform.InferType()(mod)
output = func_5186()
func_5187 = relay.Function([], output)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_5201 = relay.TupleGetItem(func_3583_call(), 0)
call_5202 = relay.TupleGetItem(func_3584_call(), 0)
output = relay.Tuple([call_5201,])
output2 = relay.Tuple([call_5202,])
func_5208 = relay.Function([], output)
mod['func_5208'] = func_5208
mod = relay.transform.InferType()(mod)
output = func_5208()
func_5209 = relay.Function([], output)
mutated_mod['func_5209'] = func_5209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_5218 = relay.TupleGetItem(func_3790_call(), 0)
call_5219 = relay.TupleGetItem(func_3791_call(), 0)
output = call_5218
output2 = call_5219
func_5225 = relay.Function([], output)
mod['func_5225'] = func_5225
mod = relay.transform.InferType()(mod)
mutated_mod['func_5225'] = func_5225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mutated_mod.get_global_var('func_5225')
call_5226 = func_5225_call()
output = call_5226
func_5227 = relay.Function([], output)
mutated_mod['func_5227'] = func_5227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_5295 = relay.TupleGetItem(func_3790_call(), 0)
call_5296 = relay.TupleGetItem(func_3791_call(), 0)
func_3750_call = mod.get_global_var('func_3750')
func_3752_call = mutated_mod.get_global_var('func_3752')
const_5300 = relay.const([1.816073,-1.200897,3.454663,7.255621,-0.097789,-1.190978,-2.798372,1.523044,-8.188651,-6.973374,3.079981,-9.278703,1.654147,1.106541,-0.943693,0.619929,6.986741,3.284572,-1.572952,-7.601952,-9.017482,5.283767,0.076513,2.798099,-9.042962,-8.579607,-2.879743,-9.361011,-4.749398,1.776322,9.898761,-0.216648,-7.477593,8.510751,-9.863565,7.830600,-6.221812,8.058339,1.315943,3.834433,-8.097590,-6.055575,5.377983,-6.422037,-8.436260,-5.794427,-7.768895,-5.896533,-2.768027,9.355730,4.736821,9.334578,1.870853,7.361123,1.353847,-7.039902,0.937314,7.556823,-7.765739,-0.345434,2.117076,-8.340180,2.619241,-5.080010,-6.502398,-4.369963,4.947043,2.062938,6.940969,4.960220,0.022637,-1.051974,-1.050515,6.290713,-9.301058,2.855601,4.738914,9.971607,8.555208,-2.756881,-3.993646,5.393873,3.265070,-9.590330,-2.594325,0.051639,-3.427544,-2.494749,3.481558,1.474766,0.780961,1.187289,-6.334411,7.173147,6.706621,8.802540,-8.722846,7.584464,0.592535,-1.795848,6.307754,1.191969,-1.613380,4.927741,-4.763290,4.265821,6.180737,-2.902918,3.058578,0.244195,4.426835,-7.717290,-0.055761,3.174468,-2.112348,1.649175,-4.541366,4.306797,-4.985575,-6.861003,9.742842,-6.381045,1.225643,-2.675468,-4.184843,4.776369,-7.658596,6.283957,7.221264,-9.643359,8.953778,4.381803,-1.259883,-6.964158,5.349883,1.773525,-5.701803,-2.563522,-7.714211,-1.323917,-8.053350,7.043591,-2.177450,7.979628,9.089106,7.722057,0.034185,-9.807320,1.460770,-2.956733,-3.015459,9.058918,4.454726,-4.099651,-7.004873,-5.277866,-7.030446,1.951371,4.599120,-2.101065,-7.028972,8.101673,-4.899036,5.656460,-7.405721,7.008058,-5.039425,5.911942,-2.600593,3.826921,-9.242186,6.386991,1.492639,5.443588,-2.586393,-8.135081,9.065585,-4.542528,3.061964,1.601531,-2.455058,-2.870067,5.355207,-0.336211,4.347932,-2.244394,-9.281471,-4.083613,-2.010465,-0.877048,8.305383,8.918926,-7.893768,0.773070,-0.788556,7.040631,8.179994,4.322915,2.136841,-5.532522,2.024103,-2.931836,-3.671025,-0.641100,3.373010,8.425019,8.806167,1.071489,5.300222,4.305070,-0.542874,-0.867957,8.965699,-3.877460,0.901697,9.250963,-9.540062,-8.067510,5.280542,7.422158,2.545167,6.062935,-0.962273,-1.805459,1.016645,8.682168,-7.409817,7.291717,5.086965,-8.564743,-7.037390,9.961718,-6.448970,-1.766842,-1.189057,-9.472994,-6.351604,-5.713041,-9.918213,-4.770231,2.477054,2.266765,5.683776,5.162651,5.301839,-3.112407,5.435444,-6.734004,0.417582,5.299116,-9.792044,-9.689596,-8.197048,7.830252,2.457776,-9.923174,8.451603,9.433779,7.314947,7.982404,-1.429226,-5.792001,-6.033275,5.310105,4.244893,2.500650,-6.810966,3.689627,1.384112,-7.878544,-4.529803,4.198871,-7.083238,4.421373,0.041774,-0.568744,-2.823688,1.142515,3.000784,-5.818417,-0.699335,6.942572,6.383531,1.728054,4.200169,-7.812802,-9.956439,-0.196633,-9.943228,-0.999699,-7.024416,3.460967,-8.322984,4.959415,-5.485335,-2.589731,-7.868949,6.220324,-1.787919,-4.879615,-9.453126,-6.681161,-8.061505,-2.990245,-0.516227,-5.816747,7.591874,1.011923,-4.869524,-5.734483,-6.515300,1.261595,-2.206939,3.868268,1.900517,-4.638441,-4.755749,7.943779,7.606764,4.552554,-5.393592,4.563400,6.090743,3.823882,8.341163,-1.483042,0.086057,-0.333942,7.160044,-1.684326,8.951059,-2.268505,7.442121,-2.148412,9.363041,-9.242032,2.877864,-5.099686,-9.023182,6.551638,1.237643,-5.821661,5.517609,-2.197243,-7.739213,-2.858542,2.535339,8.727506,-4.924258,-5.423422,6.045658,1.240948,-1.939165,1.157807,-5.022545,-8.647178,5.560530,-0.790703,-5.212399,8.280743,9.588628,-3.305437,-8.292853,-0.025342,-8.653928,7.349912,4.169622,-2.664956,-5.218862,3.597869,-0.197761,-0.365602,-1.732696,8.655759,4.574724,9.009336,-7.050495,4.585737,2.510781,2.103653,-0.257502,5.095243,5.549762,7.779165,6.623715,-6.431840,8.622036,5.938982,0.741042,-4.460858,3.636905,-0.769524,1.064408,7.196717,0.305117,-0.646544,6.344499,0.410211,-9.960374,-1.770633,4.869266,4.176157,7.725813,-9.720320,4.292850,1.876531,-8.735750,-5.965695,5.154158,-2.260208,-4.857592,4.833757,-4.791957,3.793103,5.233633,3.803769,-8.512504,6.185441,7.111416,3.663189], dtype = "float32")#candidate|5300|(420,)|const|float32
call_5299 = relay.TupleGetItem(func_3750_call(relay.reshape(const_5300.astype('float32'), [15, 14, 2])), 1)
call_5301 = relay.TupleGetItem(func_3752_call(relay.reshape(const_5300.astype('float32'), [15, 14, 2])), 1)
output = relay.Tuple([call_5295,call_5299,const_5300,])
output2 = relay.Tuple([call_5296,call_5301,const_5300,])
func_5312 = relay.Function([], output)
mod['func_5312'] = func_5312
mod = relay.transform.InferType()(mod)
output = func_5312()
func_5313 = relay.Function([], output)
mutated_mod['func_5313'] = func_5313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_5350 = func_3548_call()
call_5351 = func_3548_call()
func_3206_call = mod.get_global_var('func_3206')
func_3207_call = mutated_mod.get_global_var('func_3207')
call_5355 = relay.TupleGetItem(func_3206_call(), 0)
call_5356 = relay.TupleGetItem(func_3207_call(), 0)
output = relay.Tuple([call_5350,call_5355,])
output2 = relay.Tuple([call_5351,call_5356,])
func_5358 = relay.Function([], output)
mod['func_5358'] = func_5358
mod = relay.transform.InferType()(mod)
mutated_mod['func_5358'] = func_5358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5358_call = mutated_mod.get_global_var('func_5358')
call_5359 = func_5358_call()
output = call_5359
func_5360 = relay.Function([], output)
mutated_mod['func_5360'] = func_5360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3206_call = mod.get_global_var('func_3206')
func_3207_call = mutated_mod.get_global_var('func_3207')
call_5375 = relay.TupleGetItem(func_3206_call(), 0)
call_5376 = relay.TupleGetItem(func_3207_call(), 0)
func_2148_call = mod.get_global_var('func_2148')
func_2152_call = mutated_mod.get_global_var('func_2152')
const_5379 = relay.const([-4.924010,-5.798748,7.098063,-3.696643,8.571877,4.222829,9.605510,1.440754,-1.193554,-1.882857,-7.768622,1.044216,-2.836645,6.686204,-3.246712,-4.319316,6.987644,-5.787408,-3.240470,0.962315,-2.441282,-6.857477,2.204827,9.404637,-7.061339,-8.108556,-7.177557,8.694164,-7.262441,-8.486498,5.480318,0.080365,-2.183037,2.189795,-2.622362,-2.273286,8.334109,-4.474389,6.844392,3.822147,0.099614,-2.719601,5.419821,4.077716,-6.111225,-1.899451,-1.924912,8.886323,2.868224,9.353302,3.697409,-8.445946,-7.939357,8.465617,9.103859,-1.734329,-5.791871,-4.069772,-1.569399,1.048919,0.335325,-3.328007,8.856581,-9.441509,8.506864,-1.059601,-2.731536,0.748860,-3.060480,-9.511251,9.850993,-1.052292,0.154072,-2.280576,-3.459587,-9.251746,6.504348,-6.956831,-7.658313,-4.965951,-2.045096,-9.882646,0.241853,-8.958914,-0.775863,2.031191,8.359994,6.715775,-5.738053,-5.826777,9.665562,6.734828,0.503159,6.938490,-0.849474,0.957235,6.392603,1.755562,-2.710174,-9.061723,-7.991519,-2.370252,2.193698,-8.287285,7.500815,6.992824,-8.101309,-4.002715,-1.308590,2.865964,3.550792,5.462884,5.096301,0.137388,-2.890501,-6.630655,-3.536021,-5.101275,5.583277,1.844221,5.923888,9.313577,1.727193,-1.964714,-4.452174,1.778399,-9.989745,-7.045612,1.992664,4.680652,2.433678,9.946954,2.072672,0.744826,-6.716472,2.253634,7.501068,3.136918,-6.371297,-3.042480,-3.394301,-9.764789,9.224197,-3.353879,4.098813,-8.855665,7.500071,-2.334077,-6.652233,3.682856,-2.700947,-4.132516,-4.510839,1.312081,2.279555,1.314658,2.252322,2.008311,-2.913391,0.628870,7.596711,-0.323941,9.283586,5.159985,-7.754747,2.425741,-5.530132,8.153130,5.420961,4.570030,-8.065785,-6.873329,2.703373,-6.345005,3.873840,3.564737,-6.156926,-2.496309,-3.747780,3.811629,-2.543553,3.581377,-4.688014,5.337950,1.568704,0.316983,0.330980,8.730465,7.001857,-1.626232,-8.133470,7.645071,6.117080,-8.931469,-4.641727,2.496252,-3.237588,7.631750,5.217797,0.563891,5.943434,-6.004436,-9.706666,3.885150,-2.397332,7.485135,4.975418,5.408379,-4.535597,-5.771379,0.042442,3.502737,8.865974,-5.849236,-7.348921,3.043169,-2.971188,-4.420541,-9.676506,-7.190317,-1.742924,6.045373,3.028287,-6.993946,-2.758053,-4.573602,-6.871128,-7.275889,-4.593425,-3.850420,-9.695121,-0.064738,-0.314148,2.980581,9.746743,9.595163,3.526009,4.860718,8.960257,-6.027377,8.484232,2.966105,5.871921,5.562198,-6.707012,-2.260810,0.833674,-7.987106,5.127443,-4.679950,6.591073,-0.417940,-7.003935,1.613767,-8.333088,-4.860452,-8.512491,8.205516,8.378072,8.583861,7.302809,-3.386224,1.940806,-2.697855,-1.912401,2.126220,-7.160155,6.643850,2.283977,-1.575682,-9.770131,1.226600,-0.192630,-8.358872,8.838037,1.670365,8.943915,-8.915171,-6.402238,-7.082557,0.042244,8.929244,3.585149,8.266615,2.792662,-6.886691,-9.898127,6.995089,8.435655,-5.354082,8.346253,1.868005,2.878648,8.175590,-2.062021,-7.750331,2.227516,5.441869,-7.093546,-7.957469,-0.710255,-4.016965,-8.936099,7.437633,0.813675,0.262717,1.704342,-4.970244,-7.687109,2.969430,6.486800,-0.702180,5.729134,0.929690,-8.247531,8.522569,2.759713,6.102161,9.475964,0.899409,-5.104045,-3.558362,0.034688,-0.024896,-5.531840,-2.834824,-7.265335,6.005041,-9.865094,3.829896,-6.625798,0.229620,-3.024125,0.650706,8.301059,7.644545,5.408727,0.035337,-3.418920,-9.011951,2.222579,-0.678549,-4.169978,9.131126,-1.436874,2.502223,-1.197321,-4.569778,-4.035957,-7.735822,-2.231164,3.548410,1.148184,-7.979425,2.405770,9.981824,2.826660,-5.111402,2.907297,-6.560601,-3.284130,-3.755497,-7.236978,-3.631178,-8.969188,-1.771322,-5.205266,1.956333,2.602308,8.107301,-3.166476,2.541299,-0.541737,9.448602,-7.229296,2.565750,-4.240701,8.891904,3.946937,6.163873,-4.299675,-1.779062,2.572943,9.198212,-8.607910,6.573735,2.016794,-3.248982,-3.134735,5.457822,-6.393224,-7.481513,-8.647984,9.881840,7.068576,3.639962,8.813689,-2.330523,1.843942,4.906477,-2.172269,3.118402,0.402753,6.644810,1.811949,-3.160004,6.615722,-1.564268,-0.941431,4.176508,-2.142992,-0.287020,1.665189,0.010096,-5.199741,-7.698042,3.968254,-9.101538,1.392143,7.361707,-2.198348,-4.164066,-2.915114,5.206520,8.539202,-8.453890,6.093039,2.521163,5.985761,-9.630314,6.449389,-7.362635,-8.516930,8.357024,-5.465709,-1.132820,1.101015,-6.103509,-1.264315,-2.433119,4.804630,9.822165,6.736181,3.711532,8.885620,-1.046194,-0.446566,-0.092766,7.063743,-9.062119,-2.704743,-2.180006,-5.668115,9.578597,-0.234501,-2.244901,-8.146581,9.804460,-8.669682,-1.996907,-0.281354,-8.806958,6.663072,5.641131,-8.933015,-4.100855,-9.602634,-0.252729,8.814423,4.995579,-5.116889,5.831946,-8.594347,-4.293931,9.809883,-6.363978,-4.705365,-9.357410,4.647686,-4.072768,-9.188300,-8.664657,-5.009614,4.703821,-8.180382,3.230060,-5.621930,7.484526,2.257038,3.569314,-9.284029,-4.960318,-6.162571,-8.058207,-0.540550,8.065836,8.796771,-9.368184,7.265283,-5.440114,-1.444426,-7.625638,-3.134651,3.370980,6.420463,5.985197,4.652395,-2.265238,-4.886014,4.760890,-5.047434,3.576850,4.158796,7.610740,6.191773,-7.089228,4.869963,-4.836721,7.992703,-5.772416,-6.689190,-4.527890,1.509952,5.839685,-7.751277,1.664065,-3.557118,-4.829961,-3.705820,-9.293976,0.625009,5.714466,1.719306,6.026116,-5.472473,6.864878,4.531295,-4.660281,0.050669,-3.276771,-1.582091,-1.697350,9.554614,-1.274289,-6.666371,4.089923,-2.832406,-1.235833,8.928565,-2.619154,9.227713,-9.631891,7.767991,-0.857616,4.584935,-2.758692,-3.565541,-9.494004,-7.814695,3.383891,4.481489,-2.116496,3.744986,4.827856,-9.635818,-0.587812,8.195845,-8.377036,3.080656,9.179980,-5.213643,5.071284,-3.345818,-8.014752,-9.789727,2.160841,-7.952885,8.228940,6.144018,-2.132045,-2.464313,0.208841,-9.194410,8.239898,-3.239030,-9.452320,-5.545362,3.705232,8.429001,6.148835,1.215781,1.677664,9.979447,-2.027863,0.016459,-9.480293,1.530706,3.742182,-0.003104,-4.930168,-0.445575,0.584745,-8.074673,0.760975,-8.599784,7.843546,-6.926249,7.402762,-5.603655,-7.163419,1.206654,6.894229,-5.770882,-7.157652,2.595622,-7.799120,0.248746,5.487613,-1.119541,6.822158,5.965907,2.414754,7.169402,7.786284,-7.606019,1.203876,9.135151,-8.993240,1.082841,-3.022690,9.762098,-2.636218,-1.313185,-8.801394,8.818370,9.717350,6.066306,-1.604092,1.478903,-1.372922,4.412438,5.670665,-8.917071,-3.434495,-7.227550,4.327167,4.664414,-5.028580,5.123506,2.016123,-9.918237,8.840892,2.153348,-9.005196,-7.515706,-1.478134,-2.596685,-8.038037,1.910474,0.389560,2.821410,-3.800973,-7.826683,-1.864926,0.177475,-2.053618,-0.343710,2.302163,2.605336,-7.276060,-5.741610,8.118222,9.314023,-3.105578,2.108784,-0.261173,-4.936159,4.988934,-7.616066,-5.994022,1.124720,9.687340,-3.188689,1.443343,9.568790,1.973699,-3.490327,-4.220901,-0.359633,8.162435,-2.674145,-1.300329,-8.746475,-1.677940,2.039000,-7.080390,8.934932,-1.732106,4.911291,-5.687139,-9.242875,-9.742629,-7.628188,-4.661561,8.131122,-2.264958,9.844939,-5.604178,5.248469,-8.172681,3.038113,3.341260,1.434986,9.247897,-3.412322,2.603306,4.958406,7.455208,-1.367712,6.371918,7.207889,-6.462294,-1.775575,-8.556345,5.923069,7.929350,-6.250935,2.448545,-7.288611,-5.068852,-1.888412,6.123364,3.369957,-5.872651,-6.750527,-7.656610,5.156736,8.128693,7.355768,4.479465,-3.019142,-9.152556,-6.019465,-8.548428,-9.741618,2.328435,-7.457635,-3.562783,3.980519,-7.815072,-0.236329,-8.396530,0.821702,-4.587251,6.130260,4.298775,-0.822420,-4.310783,7.676693,3.164495,5.068252,6.773618,-2.350672,-3.059214,-0.051493,7.216120,9.831494,-5.741433,7.678833,6.679116,3.974381,8.953433,-4.165938,-9.827660,-5.375969,3.467073,-2.452268,-8.011264,9.424607,-8.040929,5.984287,-6.708889,8.412822,4.475404,4.963290,-6.342969,0.628402,-7.958630,7.403428,4.947766,0.343120,-9.614735,2.841599,-2.167058,1.585989,-3.441012,-5.572601,1.619469,-7.478023,0.065570,4.180343,-3.954364,0.613619,4.553152,4.167717,-2.884095,2.482435,-6.398587,4.419587,3.190066,5.018813,6.931123,0.484595,-7.132389,7.465285,0.049442,8.037546,3.425607,2.907088,0.060047,-9.594942,5.843919,-2.344546,-7.036572,-3.692470,-0.335842,-7.793819,4.947428,-1.570457,1.094604,5.605203,8.582182,-3.877539,1.930636,3.905260,-2.160980,8.810688,6.701836,8.558277,2.724505,-0.806442,3.958583,-7.659775,-5.635852,-0.549155,-8.439056,-0.305621,-1.727692,2.630021,-5.176199,7.976948,-0.742035,-3.567589,-3.840805,2.040670,8.777679,-6.986787,-3.699699,-5.905348,4.611865,-0.854383,-5.093337,5.237501,8.742302,3.941419,7.966679,-8.352209,8.239624,-3.329092,-2.809180,4.895747,2.539257,4.607794,-6.200864,-8.886578,-3.635789,-8.718452,7.408175,-6.268023,-3.860396,1.539225,-8.944446,0.961664,-6.909717,3.540221,8.176920,9.090561,-4.721219,7.411586,-9.396844,3.534550,-1.745908,7.590931,0.950494,0.305141,4.380379,-3.756061,-2.447123,4.201991,1.851587,-8.697570,-4.887288,3.110124,-6.369043,2.507067,-4.047041,4.069882,-3.374867,-6.470013,-3.199410,1.898426,-3.605467,3.339908,2.747767,-8.763412,-6.144872,-9.421541,-1.868647,5.646983,-9.185337,2.429030,4.142112,3.913407,1.831480,-7.629860,0.536944,-8.771492,8.477064,1.602584,-3.545901,9.550090,-9.470674,3.196983,0.446877,7.058937,-8.827448,-2.080486,3.706172,5.223192,9.632084,8.465220,-1.358291,3.366708,4.794364,-0.502777,-4.831513,-0.911634,3.238742,2.906381,2.249532,-9.255666,9.673266,7.812484,4.681380,1.600039,-9.262398,2.179139,-3.739191,-3.932042,5.125120,-0.039445,-9.406935,-5.410306,-1.185463,-5.577560,-1.345787,4.392069,5.204682,8.129460,-8.520478,-9.281696,2.303180,6.161084,-5.572917,5.413150,-8.878379,1.023747,4.850912,7.205298,8.699881,4.132576,-5.015274,6.654742,4.961321,-7.319306,9.063896,5.047971,8.116235,3.348448,-1.060409,5.053785,-2.300120,-1.797767,8.540240,3.755527,2.488011,-4.484156,-5.109835,-3.030770,-6.912610,9.291989,3.801508,-4.332157,6.894173,-6.675550,2.014680,-4.522208,-9.336224,3.336238,-3.132332,-8.352686,1.636674,-0.166173,-4.244536,5.382464,3.340060,-9.588419,3.355993,3.429359,-0.907534,6.300253,-3.253325,7.695691,-0.046560,-0.662461,-0.040330,-7.618944,2.253424,1.364343,2.896825,2.089864,8.152913,2.737583,-8.963843,5.846001,-2.818034,-8.237831,-6.839964,6.253120,-8.877205,-6.179032,-7.855416,-8.852543,4.644217,0.304587,1.921329,6.662253,6.836657,0.773284,-6.318070,-9.962325,5.247664,1.860294,0.583546,-7.457225,-8.820156,-5.728789,-1.149832,-3.812913,-6.518355,-3.114132,-1.788690,-7.302603,4.206585,-0.155126,-4.502208,-1.737242,3.130021,7.680650,6.805040,9.075674,-3.134484,-3.760111,-4.157816,-0.698746,1.194754,-7.547059,6.931897,7.236500,8.873296,-4.553433,-0.218441,5.723517,-9.979859,-1.445262,0.173285,8.902635,1.761958,-1.054719,-4.300205,-5.854247,3.191323,-6.336854,4.422399,8.710086,1.336626,-5.950133,8.619895,7.654049,0.964123,7.042528,9.013039,-2.261791,-2.018947,8.640562,-8.245120,-3.328736,-6.320776,-2.101432,-7.309682,-1.814468,5.117441,-9.075412,8.643464,-7.395352,8.003524,2.547450,-3.088768,-2.695678,-3.738743,4.039569,6.693359,-6.826003,-0.310954,-6.074343,3.625768,-0.668845,5.253427,1.980465,6.235206,2.126681,6.775464,6.259122,7.362998,-2.676550,5.591988,-0.078510,-4.879592,6.034095,6.506404,2.402668,-4.164028,2.420229,-2.606955,-4.904347,-5.311941,4.508315,-7.728054,0.119166,-8.722975,2.897098,4.639391,-6.553216,5.492065,9.378577,6.739728,9.131760,-8.982334,-2.441652,5.112712,-1.455813,-4.363086,8.158590,6.470910,-3.695120,-7.687296,7.776183,0.048012,5.628376,1.004692,2.427222,-6.164939,2.668027,7.401675,3.867180,-5.693856,-6.534947,3.201873,-6.970296,-4.733304,-8.989698,-8.857341,9.117884,-0.773942,-5.956948,4.265660,-1.521828,-4.530216,-6.462349,0.725153,-7.818544,-6.132777,1.914906,-6.947080,-2.247092,-6.268203,-4.143462,-6.809984,9.750735,-4.237731,4.964598,9.597074,1.823528,3.988390,-6.046162,-9.908541,-7.303912,0.510764,-5.157509,5.382400,2.433931,-3.009323,8.769618,9.505539,3.672602,-4.428012,8.548358,-6.251528,-7.893501,-6.319012,9.169057,1.876459,8.517944,7.528590,5.325104,-9.021852,-2.339193,-2.015053,-6.656043,-4.040686,6.896610,-4.062630,3.947817,-8.913677,-8.014443,-0.771018,5.528202,3.868531,-7.707543,-4.311034,-0.552081,-8.525809,1.605611,-9.704995,-0.195753,8.381087,0.887658,-0.018088,3.269693,-3.239922,-1.339769,8.456945,4.043444,-8.118865,2.317860,0.499332,-7.514942,-1.106556,-8.657014,0.160666,-1.613188,-8.594821,-4.302333,-3.802919,3.879267,1.760006,1.636129,5.709050,9.610388,-3.443970,8.114404,-9.052549,-9.170058,4.488698,7.866989,4.972040,-7.602063,-5.335323,5.976801,-4.431987,2.897496,-7.173719,-3.545613,3.195492,2.314856,-5.711407,2.883671,-1.486596,8.176180,-0.509368,-8.136510,-4.654224,-4.045463,9.147668,0.037063,-5.362915,9.803620,0.826659,5.431868,-2.689173,0.526028,2.758065,7.085486,-3.197650,2.483756,-8.863083,-3.523772,-2.624206,4.919386,-4.155277,1.864822,9.869145,4.636651,-2.310772,-1.562503,-9.691793,1.795007,-7.390426,1.310626,-5.364508,-9.540993,8.614224,7.393269,6.567765,8.763169,-1.632334,-9.339625,-4.040462,-1.911482,-3.668343,0.894148,-6.847676,-4.838691,6.503806,4.690413,0.120025,-5.017553,1.731563,-4.169619,-7.377867,-2.123892,8.061263,6.824196,9.234738,-9.687043,-8.158079,-8.384143,6.853197,1.051129,-0.039288,-6.755811,-1.373029,-1.323099,-6.974471,-5.270097,3.525568,3.485191,-6.895837,-0.162177,8.937081,5.332057,-2.687599,-0.307496,9.092201,-3.371395,1.346099,1.655909,-4.850870,3.129949,-9.146924,7.462653,-2.403624,-7.738996,7.597478,-9.801866,-7.941771,-9.161689,9.007123,-9.707519,3.675810,1.939153,3.171957,-6.223558,-9.739073,-9.210687,-7.477170,-9.563454,1.224288,2.465660,9.970461,5.087458,9.221936,-9.559322,-8.866441,0.185847,-5.485118,-1.463815,0.033443,9.938062,-9.398042,0.817035,8.573779,-4.922893,-4.584982,-3.041441,6.498667,5.125605,1.664312,-5.355708,-3.218575,5.006062,-5.764965,-4.539872,1.608920,8.817977,-3.919379,-3.471102,9.962654,-2.721955,-6.854524,3.300318,-5.622113,-4.405725,7.530035,0.516398,9.570867,-8.073159,2.400855,8.861534,-5.284950,-2.713953,9.998522,-7.149092,7.002454,9.804554,9.776573,-5.678561,8.577506,-2.725325,1.157121,3.440193,-6.744771,-1.115873,-7.653205,-5.596508,-7.543121,0.044394,2.324378,-0.392911,-7.504616,-4.094206,6.025100,8.286050,-2.679717,3.208836,-9.922568,-0.365410,-4.432546,-8.162881,-4.362536,0.457586,8.737192,9.322796,-1.596081,-3.778096,7.772039,5.934280,4.463487,0.843545,-5.543994,0.717046,8.042370,4.399941,-1.492484,5.105869,4.387752,7.487879,2.886046,8.024009,4.194564,8.865460,6.875105,3.001408,7.678208,-2.546017,6.858294,-5.199566,0.496252,-2.076845,7.613273,-6.226752,-5.430432,-1.648664,-5.504883,7.565156,3.689332,-9.577020,7.326229,1.990760,5.249021,-9.829233,8.524910,3.625100,0.089373,-0.984835,8.596202,0.350119,-5.478247,-9.458883,2.097604,-8.096660,-1.037622,2.523550,-4.834898,-5.827974,-4.441934,-9.643276,-3.491111,-7.792209,0.910168,-9.236092,-8.623764,-9.013170,1.321470,7.744080,3.578373,2.481293,0.418877,0.546759,3.427464,8.814495,2.610440,5.926309,4.918006,8.094333,-1.522873,-4.983920,4.176902,-6.012865,1.210275,4.104008,8.737026,-8.579408,-6.980367,3.191102,5.464928,3.953466,-5.721457,-7.113417,2.608072,9.097212,-8.184500,-2.121706,-1.762555,-2.465298,-9.631042,-7.420334,0.158874,-5.719992,8.018613,8.461366,-0.773559,4.306560,-1.159811,8.221577,6.301426,7.389827,-4.134415,6.960116,-9.401514,-3.141699,4.675757,7.529205,3.890064,-4.916653,7.935876,5.719383,9.853749,-6.799872,5.363338,5.197984,-4.007275,-9.260307,-2.483610], dtype = "float32")#candidate|5379|(1584,)|const|float32
const_5380 = relay.const([7.853188,6.576199,8.526016,4.953401,-8.956475,-9.398257,7.733842,5.585281,-9.048225,7.050607,8.876287,8.040823], dtype = "float32")#candidate|5380|(12,)|const|float32
call_5378 = relay.TupleGetItem(func_2148_call(relay.reshape(const_5379.astype('float32'), [9, 11, 16]), relay.reshape(const_5379.astype('float32'), [9, 11, 16]), relay.reshape(const_5380.astype('float32'), [12,]), ), 0)
call_5381 = relay.TupleGetItem(func_2152_call(relay.reshape(const_5379.astype('float32'), [9, 11, 16]), relay.reshape(const_5379.astype('float32'), [9, 11, 16]), relay.reshape(const_5380.astype('float32'), [12,]), ), 0)
uop_5382 = relay.acos(call_5378.astype('float64')) # shape=(9, 11, 16)
uop_5384 = relay.acos(call_5381.astype('float64')) # shape=(9, 11, 16)
func_3790_call = mod.get_global_var('func_3790')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_5398 = relay.TupleGetItem(func_3790_call(), 0)
call_5399 = relay.TupleGetItem(func_3791_call(), 0)
bop_5408 = relay.not_equal(uop_5382.astype('bool'), relay.reshape(call_5378.astype('bool'), relay.shape_of(uop_5382))) # shape=(9, 11, 16)
bop_5411 = relay.not_equal(uop_5384.astype('bool'), relay.reshape(call_5381.astype('bool'), relay.shape_of(uop_5384))) # shape=(9, 11, 16)
output = relay.Tuple([call_5375,const_5379,const_5380,call_5398,bop_5408,])
output2 = relay.Tuple([call_5376,const_5379,const_5380,call_5399,bop_5411,])
func_5417 = relay.Function([], output)
mod['func_5417'] = func_5417
mod = relay.transform.InferType()(mod)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5417_call = mutated_mod.get_global_var('func_5417')
call_5418 = func_5417_call()
output = call_5418
func_5419 = relay.Function([], output)
mutated_mod['func_5419'] = func_5419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4786_call = mod.get_global_var('func_4786')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_5420 = relay.TupleGetItem(func_4786_call(), 0)
call_5421 = relay.TupleGetItem(func_4787_call(), 0)
func_4333_call = mod.get_global_var('func_4333')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_5426 = relay.TupleGetItem(func_4333_call(), 0)
call_5427 = relay.TupleGetItem(func_4335_call(), 0)
func_3904_call = mod.get_global_var('func_3904')
func_3909_call = mutated_mod.get_global_var('func_3909')
const_5431 = relay.const([[1.164280,9.496377,0.422706,7.319289],[-1.962636,1.951908,9.312472,7.290929],[0.076359,8.433927,3.367921,1.738136]], dtype = "float32")#candidate|5431|(3, 4)|const|float32
const_5432 = relay.const([[1],[7],[4],[5],[10],[-5],[4],[-1],[-6],[-4],[-3],[2],[-5],[8],[2],[-3],[10],[10],[-7],[-4],[-8],[-1],[-6],[7],[-3],[10],[5],[2],[10],[8],[-9],[-6],[10],[-1],[-3],[-3],[5],[-3],[8],[-7],[-2],[1],[-9],[-1],[-2],[-1],[-9],[-10],[-5],[5],[7],[10]], dtype = "uint16")#candidate|5432|(52, 1)|const|uint16
var_5433 = relay.var("var_5433", dtype = "float32", shape = (132,))#candidate|5433|(132,)|var|float32
call_5430 = relay.TupleGetItem(func_3904_call(relay.reshape(const_5431.astype('float32'), [12,]), relay.reshape(const_5432.astype('uint16'), [52, 1]), relay.reshape(var_5433.astype('float32'), [132,]), ), 1)
call_5434 = relay.TupleGetItem(func_3909_call(relay.reshape(const_5431.astype('float32'), [12,]), relay.reshape(const_5432.astype('uint16'), [52, 1]), relay.reshape(var_5433.astype('float32'), [132,]), ), 1)
output = relay.Tuple([call_5420,call_5426,call_5430,const_5431,const_5432,var_5433,])
output2 = relay.Tuple([call_5421,call_5427,call_5434,const_5431,const_5432,var_5433,])
func_5439 = relay.Function([var_5433,], output)
mod['func_5439'] = func_5439
mod = relay.transform.InferType()(mod)
mutated_mod['func_5439'] = func_5439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5440 = relay.var("var_5440", dtype = "float32", shape = (132,))#candidate|5440|(132,)|var|float32
func_5439_call = mutated_mod.get_global_var('func_5439')
call_5441 = func_5439_call(var_5440)
output = call_5441
func_5442 = relay.Function([var_5440], output)
mutated_mod['func_5442'] = func_5442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mod.get_global_var('func_3711')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_5447 = relay.TupleGetItem(func_3711_call(), 2)
call_5448 = relay.TupleGetItem(func_3712_call(), 2)
func_292_call = mod.get_global_var('func_292')
func_296_call = mutated_mod.get_global_var('func_296')
var_5451 = relay.var("var_5451", dtype = "float32", shape = (132,))#candidate|5451|(132,)|var|float32
var_5452 = relay.var("var_5452", dtype = "bool", shape = (1274,))#candidate|5452|(1274,)|var|bool
call_5450 = relay.TupleGetItem(func_292_call(relay.reshape(var_5451.astype('float32'), [3, 4, 11]), relay.reshape(var_5452.astype('bool'), [1274,]), ), 3)
call_5453 = relay.TupleGetItem(func_296_call(relay.reshape(var_5451.astype('float32'), [3, 4, 11]), relay.reshape(var_5452.astype('bool'), [1274,]), ), 3)
output = relay.Tuple([call_5447,call_5450,var_5451,var_5452,])
output2 = relay.Tuple([call_5448,call_5453,var_5451,var_5452,])
func_5456 = relay.Function([var_5451,var_5452,], output)
mod['func_5456'] = func_5456
mod = relay.transform.InferType()(mod)
var_5457 = relay.var("var_5457", dtype = "float32", shape = (132,))#candidate|5457|(132,)|var|float32
var_5458 = relay.var("var_5458", dtype = "bool", shape = (1274,))#candidate|5458|(1274,)|var|bool
output = func_5456(var_5457,var_5458,)
func_5459 = relay.Function([var_5457,var_5458,], output)
mutated_mod['func_5459'] = func_5459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4786_call = mod.get_global_var('func_4786')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_5481 = relay.TupleGetItem(func_4786_call(), 0)
call_5482 = relay.TupleGetItem(func_4787_call(), 0)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_5495 = relay.TupleGetItem(func_3583_call(), 0)
call_5496 = relay.TupleGetItem(func_3584_call(), 0)
func_2906_call = mod.get_global_var('func_2906')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_5499 = relay.TupleGetItem(func_2906_call(), 0)
call_5500 = relay.TupleGetItem(func_2907_call(), 0)
func_3385_call = mod.get_global_var('func_3385')
func_3390_call = mutated_mod.get_global_var('func_3390')
var_5506 = relay.var("var_5506", dtype = "bool", shape = (1274,))#candidate|5506|(1274,)|var|bool
var_5507 = relay.var("var_5507", dtype = "int16", shape = (1, 1386))#candidate|5507|(1, 1386)|var|int16
var_5508 = relay.var("var_5508", dtype = "int32", shape = (672,))#candidate|5508|(672,)|var|int32
call_5505 = relay.TupleGetItem(func_3385_call(relay.reshape(var_5506.astype('bool'), [1274,]), relay.reshape(var_5507.astype('int16'), [1386,]), relay.reshape(var_5508.astype('int32'), [672,]), ), 6)
call_5509 = relay.TupleGetItem(func_3390_call(relay.reshape(var_5506.astype('bool'), [1274,]), relay.reshape(var_5507.astype('int16'), [1386,]), relay.reshape(var_5508.astype('int32'), [672,]), ), 6)
output = relay.Tuple([call_5481,call_5495,call_5499,call_5505,var_5506,var_5507,var_5508,])
output2 = relay.Tuple([call_5482,call_5496,call_5500,call_5509,var_5506,var_5507,var_5508,])
func_5521 = relay.Function([var_5506,var_5507,var_5508,], output)
mod['func_5521'] = func_5521
mod = relay.transform.InferType()(mod)
var_5522 = relay.var("var_5522", dtype = "bool", shape = (1274,))#candidate|5522|(1274,)|var|bool
var_5523 = relay.var("var_5523", dtype = "int16", shape = (1, 1386))#candidate|5523|(1, 1386)|var|int16
var_5524 = relay.var("var_5524", dtype = "int32", shape = (672,))#candidate|5524|(672,)|var|int32
output = func_5521(var_5522,var_5523,var_5524,)
func_5525 = relay.Function([var_5522,var_5523,var_5524,], output)
mutated_mod['func_5525'] = func_5525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4786_call = mod.get_global_var('func_4786')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_5543 = relay.TupleGetItem(func_4786_call(), 0)
call_5544 = relay.TupleGetItem(func_4787_call(), 0)
func_3711_call = mod.get_global_var('func_3711')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_5548 = relay.TupleGetItem(func_3711_call(), 2)
call_5549 = relay.TupleGetItem(func_3712_call(), 2)
func_4277_call = mod.get_global_var('func_4277')
func_4283_call = mutated_mod.get_global_var('func_4283')
const_5551 = relay.const([7,9,2,7,-6,-7,-1,3,-8,-3,-8,-1,9,-6,-6,-3,-10,-6,6,10,4,-2,-6,9,7,2,-6,-4,6,8,-7,-6,-3,-1,6,2,-9,-8,-9,-8,10,2,2,-1,-8,-2,-1,-3,-1,-3,6,-10,2,-1,-5,-7,-10,1,7,-2,-2,-9,3,5,-8,4,8,2,-9,10,3,-9,8,-5,-3,-9,1,5,-2,1,-3,-8,6,10,3,9,9,7,9,2,10,6,9,-7,-4,-5,-3,7,-2,-5,8,1,4,-3,-1,-5,-6,2,10,8,-10,-2,-7,2,-9,4,-1,-3,2,-7,10,-6,1,-2,9,-9,-5,2,4,-9,1,8,-8,-8,-8,-5,-9,5,-1,4,-6,-1,-4,1,6,-10,-5,10,9,6,-5,6,-4,-3,-7,-4,-10,4,-7,3,-8,10,-9,-7,-8,-6,5,-4,-2,-3,6,1,-2,1,3,3,-4,5,1,2,6,-2,-1,-2,-5,-9,4,-8,-7,6,-10,-1,1,-8,7,-4,9,8,2,2,-6,-2,-2,-9,-7,1,5,2,8,-8,9,2,8,9,-1,-9,1,-9,2,-2,-4,-6,6,5,-7,1,-5,-5,2,-4,4,-9,-7,-10,6,-7,6,9,1,-6,-7,4,9,-8,5,5,7,6,2,-4,7,-1,7,3,-4,-6,-5,4,10,-6,-3,-6,-4,-6,-6,7,4,-6,-9,-8,-9,5,-5,-9,-2,1,7,8,10,8,-6,9,4,-10,-6,6,-3,1,-2,6,-9,-9,-4,6,1,-10,-10,7,-6,-8,5,10,-5,-7,-3,-10,10,7,-4,-10,8,10,-10,-5,-3,-1,-7,8,1,-10,8,7,7,6,8,6,7,-5,4,5,2,-8,6,10,1,4,-10,-1,-4,10,-2,-9,4,-6,-5,-6,7,-6,9,-2,6,2,-6,2,-8,5,9,-9,-9,1,-3,9,-2,5,-10,2,5,-1,6,5,8,-6,-2,-9,-9,5,9,4,-10,3,-7,8,-2,5,4,4,7,-10,6,-2,-2,-8,10,2,-2,1,-3,-3,8,1,-7,-6,6,5,-5,-8,5,-8,10,6,7,3,-4,3,8,6,2,2,-7,-1,-6,-1,-4,6,1,6,-9,7,9,7,-5,-3,-4,4,-3,-6,-5,2,10,-3,-9,-10,-2,-4,-9,8,-2,1,-7,-7,-2,-1,-4,6,10,4,10,10,10,-3,-2,3,2,-10,-2,1,-10,1], dtype = "int16")#candidate|5551|(468,)|const|int16
var_5552 = relay.var("var_5552", dtype = "uint32", shape = (1440,))#candidate|5552|(1440,)|var|uint32
const_5553 = relay.const([-7.387309,3.639833,-5.468625,-7.475436,-6.959169,-3.450187,4.044382,-7.980515,-3.393587,8.343804,6.202470,-1.755940,9.701769,-4.735433,1.608440,3.186676,9.655496,-6.032730,-3.621686,-6.243656,6.562400,6.328908,5.924356,-7.973202,9.209746,2.243062,-3.146043,-2.748624,7.511201,-7.893135,-2.299129,-0.008068,-3.435054,7.630927,9.754153,7.564946,-2.173557,-2.852191,-8.620534,-2.879806,-9.521926,7.158134,1.633761,-8.705525,-7.601510,4.285115,-5.604431,-1.272186,-1.406874,3.167709,7.050680,-7.642570,0.570695,-3.464086,7.826209,9.341729,-5.716764,2.607461,5.900570,9.314700,-6.954433,-2.369665,-5.551694,-3.610367,-2.728622,8.767309,-1.807956,2.440923,-2.214832,-4.867261,-4.467774,0.551233,-9.750613,-9.530450,-4.848190,6.189191,-5.472326,8.142729,-8.833965,-4.614890,0.436813,-2.035987,8.211343,-7.921201,8.446771,-9.825128,-7.392159,8.929950,-6.737919,-7.061453,3.869068,9.095565,5.151206,-8.865876,-1.407463,-7.050642,-9.966123,-1.227837,2.416847,6.481896,1.868666,-6.046276,3.790492,-8.565564,-0.265231,-0.846104,-3.448597,8.629590,-6.350310,3.440742,-3.467171,0.633457,-4.471972,9.481100,-7.097177,5.252665,-5.685809,2.021621,8.951321,9.475962,5.216455,5.376534,7.834579,7.545830,-0.167595,2.035997,3.324612,-2.265121,-9.620565,7.502937,-4.720703,-5.035710], dtype = "float32")#candidate|5553|(132,)|const|float32
var_5554 = relay.var("var_5554", dtype = "float64", shape = (2160,))#candidate|5554|(2160,)|var|float64
call_5550 = relay.TupleGetItem(func_4277_call(relay.reshape(const_5551.astype('int16'), [468,]), relay.reshape(call_5543.astype('float64'), [11, 9, 9]), relay.reshape(var_5552.astype('uint32'), [1440,]), relay.reshape(const_5553.astype('float32'), [132,]), relay.reshape(var_5554.astype('float64'), [60, 36]), ), 0)
call_5555 = relay.TupleGetItem(func_4283_call(relay.reshape(const_5551.astype('int16'), [468,]), relay.reshape(call_5543.astype('float64'), [11, 9, 9]), relay.reshape(var_5552.astype('uint32'), [1440,]), relay.reshape(const_5553.astype('float32'), [132,]), relay.reshape(var_5554.astype('float64'), [60, 36]), ), 0)
func_3156_call = mod.get_global_var('func_3156')
func_3160_call = mutated_mod.get_global_var('func_3160')
const_5560 = relay.const([4,1,4,-1,-10,10,7,7,4,6,6,3,-7,-9,7,6,6,1,9,-4,10,-2,5,-4,9,-6,5,6,-2,-6,-6,8,-10,-5,-2,7,-2,8,8,-6,-1,3,-2,6,3,2,-6,5,-1,4,-9,5,10,1,-3,-7,7,-10,9,2,-2,3,-5,4,9,1,-3,-1,8,-2,-7,7,9,3,-7,-9,-9,7,-3,2,-10,-1,-9,-5,4,-10,-6,-5,8,10,4,4,-4,-9,-1,10,-6,-6,5,2,1,-10,-10,-2,6,-4,3,-6,-7,3,-10,1,8,-10,1,2,-5,6,9,6,10,-8,7,10,-2,4,-10,7,4,-10,-1,-4,-5,4,10,3,-9,5,-6,-10,9,-10,2,-6,-5,1,9,4,10,9,-5,2,-5,10,1,10,5,-9,-7,3,-1,10,2,3,-10,-3,-7,1,-9,1,-10,-2,-1,3,-7,-10,1,-8,3,-6,-6,-8,-4,-4,9,-5,-8,-7,1,7,-4,-8,-6,-1,-10,2,8,8,10,-4,-7,9,9,4,-3,6,7,-6,10,2,4,5,-3,-1,5,1,8,9,7,5,-6,9,7,-4,3,-9,9,9,7,4,-7,7,-6,-3,4,3,1,1,7,6,-3,-7,9,6,-7,-1,5,2,-8,4,-2,-2,-1,2,-10,10,-3,10,4,-1,4,7,-2,5,-1,10,8,-8,-4,-6,7,10,6,4,-5,1,5,-1,7,6,4,3,7,10,-10,-8,4,-6,9,10,-5,3,1,8,1,5,-10,-9,8,10,8,4,7,4,-2,-10,-7,6,9,5,-7,-7,-1,-4,8,6,2,-7,1,-5,-6,-7,-7,1,8,8,-10,-2,5,-7,-2,6,4,4,-5,-6,1,-3,8,-6,4,4,1,3,6,7,-7,-3,-6,-4,-4,-1,-6,3,10,2,3,8,-4,10,-2,-7,1,10,6,10,6,5,6,8,7,-10,8,6,8,1,4,9,-7,-7,-2,-3,8,2,5,-2,10,5,-9,-9,9,-8,-7,10,-7,4,-4,10,4,8,10,4,-1,9,1,10,7,3,-7,7,-10,3,-10,5,-5,-3,-10,-6,-9,-4,2,-10,-2,-4,-6,2,1,-9,10,-5,7,-9,-7,2,9,-6,-8,1,-7,-10,5,-10,-7,7,5,2,10,-10,4,2,-6,6,5,5,-2,7,-4,4,-8,-1,-3,-4,2,-9,-4,2,1,3,5,10,-2,7,-5,-9,3,3,-3,-8,-9,-3,-8,-2,-3,5,-4,7,3,3,-4,1,4,-3,1,6,-8,6,6,-7,4,6,8,-7,7,8,-4,-1,5,9,-7,9,-4,3,2,8,3,-5,9,-3,1,10,-2,-6,-6,2,-8,9,3,-1,-4,-2,-6,10,-10,2,4,-7,-2,3,7,-1,6,6,-4,6,-7,6,7,9,-9,-7,4,9,-8,-3,-8,10,4,5,5,7,2,-7,1,4,-8,3,6,7,-6,1,-5,-2,-6,-9,10,3,1,-9,-6,2,-6,6,-9,-8,-5,3,-9,-1,3,4,-5,-5,6,7,-7,-8,6,-6,10,1,4,-5,10,8,5,-7,10,7,8,-10,4,9,-5,-4,1,-8,3,8,1,-9,9,-9,9,-6,9,-1,7,1,-5,5,-2,2,10,9,5,10,-5,4,-4,-1,8,5,4,-5,3,-6,5,-10,-6,-6,8,-7,-4,7,1,10,9,-5,3,1,-10,-3,-3,-7,4,3,1,5,3,5,9,3,3,1,8,4,-9,4,-1,-4,-6,9,7,5,5,3,-5,3,8,6,8,-5,-8,-10,10,8,-10,-3,2,-8,8,-2,-2,3,-9,-6,-10,3,-8,10,8,3,-4,9,-6,4,10,9,3,10,2,8,-6,3,-5,-3,-1,-2,-7,-3,-8,7,5,10,1,-9,-7,-6,-9,1,1,8,2,-7,3,-10,-8,-10,6,-10,-1,9,-7,5,5,1,-9,10,-1,8,8,6,8,1,-6,-10,-2,-9,7,5,7,10,7,7,8,3,-5,1,4,7,3,-9,8,3,1,9,-8,-5,-10,2,-8,-5,-1,-4,10,-7,1,-7,-3,6,2,5,6,-2,10,6,8,-1,-8,6,-8,-1,8,-10,2,-8,-1,4,-10,-4,2,-10,-1,-1,-8,7,9,-7,-5,9,-2,2,7,1,-2,-10,6,7,1,-8,-5,6,-2,3,9,7,-9,5,4,-7,-2,1,7,7,5,6,10,-8,-5,2,-2,-5,7,-1,5,-7,5,7,5,-9,-1,4,8,-6,10,-7,6,-7,2,-1,-8,-4,-6,4,-6,6,7,-7,-10,8,-10,6,6,8,-3,-5,-7,3,-1,-7,-9,2,-2,3,-3,-2,5,-10,3,-1,7,7,-8,-9,1,-7,10,-8,-10,4,1,8,-6,-1,6,-3,-9,-9,5,5,8,6,-1,2,-7,-7,-4,6,-5,7,10,-6,-4,-5,5,-7,-4,-4,-9,-8,-3,-5,-4,-7,2,2,-5,1,5,10,-8,4,-10,-6,-5,5,1,-4,-5,-6,4,8,-6,9,-5,-1,6,6,6,-6,8,8,5,6,5,-8,-10,10,-5,7,-8,4,6,1,-4,2,2,3,1,7,3,-7,-2,-9,6,9,-4,9,5,-3,-10,-10,4,10,-5,3,2,1,7,-3,5,6,-4,-1,-6,9,9,8,5,9,7,-9,2,-5,9,-9,-9,-6,-1,-4,-3,-4,-2,-6,-2,-6,8,8,-5,-8,-10,-1,-3,1,-7,-2,-6,5,-1,-5,-7,-2,10,5,-2,2,-10,-10,-1,9,-6,10,-7,1,5,3,-1,-7,4,6,4,9,-2,-9,9,-3,-6,8,6,-3,5,5,10,7,-3,-1,1,-3,8,8,-7,-4,-1,-8,2,-10,-9,5,6,-7,-4,-7,10,-10,1,8,6,-3,-4,8,6,3,4,7,9,-10,-4,-10,9,3,-5,-10,-4,-9,-5,4,-4,9,6,-9,-1,10,8,-10,-7,8,5,-2,-2,7,8,1,2,-2,-7,5,-10,3,-6,-6,7,4,4,1,9,-3,1,2,5,2,-5,-10,-4,4,10,-3,-3,-9,7,3,7,-4,2,-2,10,-9,-2,9,-5,-8,-2,-2,-9,4,-2,-1,-4,9,-1,-3,4,-3,10,-4,4,10,2,2,4,7,-4,-6,1,4,-6,-2,-6,9,-8,5,-7,-9,8,10,1,7,-4,-4,8,-1,-5,-7,10,1,10,-2,-10,6,4,9,3,-3,-10,-4,-6,-5,7,-4,-9,-5,-2,8,7,1,9,-9,7,-9,-8,7,9,-7,-5,5,7,-5,-8,10,-6,-9,10,-7,-9,-7,-3,-2,-8,3,1,9,10,8,6,3,8,9,9,8,4,6,-2,2,-9,-5,-2,10,-10,-8,-6,-10,-5,6,-5,-4,10,6,10,3,-2,-2,5,-4,8,-3,7,1,-4,-5,-1,-10,1,-4,6,10,10,-2,-4,1,-2,-8,-10,8,6,-5,-4,-10,2,4,3,-6,8,9,-4,-3,7,-5,8,2,-7,-1,-3,6,6,1,-5,-4,5,-2,4,-7,-7,-9,-4,-1,10,-3,-2,6,8,9,6,-6,-7,-2,-4,-3,9,-5,4,7,-9,-7,-9,1,4,-1], dtype = "int16")#candidate|5560|(1386,)|const|int16
const_5561 = relay.const([1,-5,-4,-10,-1,-10,-4,-4,10,-1,-4,-2,10,-5,6,9,-10,8,5,-1,-7,-3,-5,1,-10,-4,3,-7,4,5,2,5,8,5,3,10,-9,10,1,1,6,-4,-3,-3,5,-5,1,6,-5,-5,-9,8,-9,3,-2,9,-10,-8,-6,-8,-8,-5,-6,10,-5,10,9,1,-10,8,-9,-1,-2,1,-7,-8,-3,6,7,1,-1,8,-10,-10,3,2,8,10,2,9,-10,6,3,1,6,-4,4,8,10,6,-7,5,4,7,-9,-5,5,-2,-3,-10,6,9,3,6,5,-7,10,10,-1,10,-3,-1,-8,9,-8,4,1,6,9,9,3,8,10,-7,-3,3,2,6,-4,3,4,-8,9,10,7,3,7,-3,-9,8,-7,-10,4,9,3,-2,9,1,-7,7,-10,1,-2,-4,5,5,-4,1,2,-8,1,-9,1,8,1,-1,6,10,-6,-8,-8,-5,5,2,5,2,9,6,-1,7,10,3,-10,3,-7,1,2,-8,1,6,-8,-1,10,-9,4,1,6,1,6,5,2,9,-3,3,-6,7,-7,-5,6,6,-1,-5,10,4,7,-1,7,-5,6,-4,6,8,-10,8,6,7,10,6,-7,8,-2,-4,-9,-1,6,-9,7,-4,2,-6,-8,8,6,-8,4,6,6,-9,9,-4,-5,7,-4,-2,5,-5,-8,10,6,-6,5,8,-4,-10,7,7,-7,-6,9,7,4,6,-6,-8,6,5,-8,5,-8,-4,-9,8,7,-8,4,10,-9,3,-5,-10,-7,-4,-7,-6,6,-9,10,10,3,-6,3,-4,6,-10,8,-4,4,-9,-9,-6,-4,-7,-4,4,6,4,-7,2,6,4,9,-9,8,-3,-3,-1,4,1,-6,5,6,9,-8,7,-2,-7,1,-5,-6,-3,7,-5,-1,-1,1,8,7,-1,10,-8,10,-3,-3,-7,9,7,-3,9,7,10,-9,-7,8,9,9,10,3,10,4,-5,7,-8,-2,-6,-10,1,7,-4,-8,-4,-2,-6,-10,3,6,-6,7,5,3,-10,-10,-2,9,-3,-3,-5,3,-2,-10,8,10,-8,8,-8,-5,-5,9,3,7,4,6,3,-3,-4,-9,-8,6,7,9,8,2,-10,-3,9,-10,-8,-4,-6,7,1,-2,-4,-7,2,-6,2,4,-1,7,-8,4,-5,-8,-7,-3,-10,9,3,5,-4,8,9,1,10,9,-7,4,1,-5,7,-1,2,1,8,1,-6,-9,2,4,-8,-9,-6,-8,-5,7,10,-8,-8,8,-4,-7,9,-5,5,-2,-2,7,6,-5,10,-2,2,3,-1,-5,1,3,-9,10,8,5,4,8,-1,8,8,2,-4,-9,7,7,-7,7,-1,-10,-10,10,8,4,2,-1,-4,10,1,2,-5,-5,1,8,10,4,-2,-3,-2,-2,-9,-7,-9,2,6,5,2,4,3,-9,10,4,-8,4,4,-8,-2,-9,-10,10,-4,7,-6,-3,-3,-3,-8,6,-4,9,8,-4,-2,3,3,-10,-10,-6,8,-7,-4,5,-5,-1,3,8,7,4,-2,-1,-10,-5,8,7,3,-8,-4,10,-3,-8,-2,10,6,-9,2,-7,-1,-5,4,-4,5,3,-4,-9,-5,-5,-5,6,-10,-4,-7,7,3,-6,3,3,3,-9,10,-5,-7,4,5,5,-5,10,-10,-9,-6,-10,-8,-8,1,-7,7,8,2,8,-1,5,-4,9,1,-6,6,7,-1,2,-2,2,1,-3,-1,-2,-6,10,1], dtype = "int32")#candidate|5561|(672,)|const|int32
call_5559 = relay.TupleGetItem(func_3156_call(relay.reshape(const_5560.astype('int16'), [11, 14, 9]), relay.reshape(const_5561.astype('int32'), [672,]), ), 3)
call_5562 = relay.TupleGetItem(func_3160_call(relay.reshape(const_5560.astype('int16'), [11, 14, 9]), relay.reshape(const_5561.astype('int32'), [672,]), ), 3)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_5566 = func_3611_call()
call_5567 = func_3611_call()
output = relay.Tuple([call_5543,call_5548,call_5550,const_5551,var_5552,const_5553,var_5554,call_5559,const_5560,const_5561,call_5566,])
output2 = relay.Tuple([call_5544,call_5549,call_5555,const_5551,var_5552,const_5553,var_5554,call_5562,const_5560,const_5561,call_5567,])
func_5573 = relay.Function([var_5552,var_5554,], output)
mod['func_5573'] = func_5573
mod = relay.transform.InferType()(mod)
var_5574 = relay.var("var_5574", dtype = "uint32", shape = (1440,))#candidate|5574|(1440,)|var|uint32
var_5575 = relay.var("var_5575", dtype = "float64", shape = (2160,))#candidate|5575|(2160,)|var|float64
output = func_5573(var_5574,var_5575,)
func_5576 = relay.Function([var_5574,var_5575,], output)
mutated_mod['func_5576'] = func_5576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_5588 = func_4175_call()
call_5589 = func_4175_call()
func_5038_call = mod.get_global_var('func_5038')
func_5041_call = mutated_mod.get_global_var('func_5041')
var_5613 = relay.var("var_5613", dtype = "float32", shape = (1, 12))#candidate|5613|(1, 12)|var|float32
call_5612 = relay.TupleGetItem(func_5038_call(relay.reshape(var_5613.astype('float32'), [12,])), 0)
call_5614 = relay.TupleGetItem(func_5041_call(relay.reshape(var_5613.astype('float32'), [12,])), 0)
func_4397_call = mod.get_global_var('func_4397')
func_4403_call = mutated_mod.get_global_var('func_4403')
const_5616 = relay.const([-8,-9,-10,-5,7,-5,9,-4,1,6,-7,3,9,7,9,1,-10,2,9,10,-9,9,-4,-2,3,6,2,-5,-1,-9,8,-8,2,-8,-7,9,5,3,-4,-2,-2,7,10,-7,2,-1,-7,1,-9,10,-9,-2,-10,-2,10,9,4,8,-8,5,2,-4,-7,8,-4,-3,-9,9,-2,4,-7,-3,-1,-5,7,-2,-9,8,9,-3,-6,10,-3,-7,-2,-6,3,1,2,4,-7,-10,3,2,6,7,-4,-9,7,-4,6,7,-3,7,4,7,-8,-10,7,-2,-9,-4,7,-2,1,3,-7,-1,1,-8,-9,-8,1,9,2,-8,-2,4,10,-6,-5,10,-1,4,7,9,-4,3,7,-1,3,9,-6,7,-2,-6,-1,-9,-7,4,-3,-8,-10,-2,4,5,7,-3,9,-10,2,-6,-2,5,7,3,-2,7,-3,10,-6,-5,1,5,-9,-8,1,-5,-10,4,2,5,8,8,3,-1,5,2,-3,3,-4,-2,-9,-9,9,-4,1,-7,-5,2,-4,-9,-8,-2,-7,-4,10,-5,-5,7,10,-5,5,9,6,8,-6,-7,-7,7,6,5,9,6,-6,8,-4,-4,4,9,-9,-7,3,1,-5,-3,2,-8,10,9,-6,-10,9,-9,1,2,-6,-5,5,10,6,10,1,-3,1,-7,-8,-7,-4,1,-6,-5,1,3,8,5,-7,6,-2,-1,10,10,-6,6,-3,5,-9,4,-10,8,-8,-6,6,5,10,3,-5,-7,-9,-10,9,4,4,9,-4,-6,8,9,1,-3,1,2,-8,6,-1,2,10,9,3,-9,-3,-9,-6,-6,-4,9,-7,-1,9,4,6,1,3,1,8,-3,5,-1,-10,-10,-5,10,-10,-9,-10,1,9,1,2,8,-2,-10,-10,-9,-7,7,-8,6,-9,6,-7,7,-9,-10,2,4,6,2,4,-10,-2,4,3,-7,4,4,-2,-9,-1,5,-4,9,2,10,7,-8,-7,9,4,-4,3,2,-1,8,10,7,-2,-6,2,-2,-5,5,5,-2,4,-1,-4,-2,-6,8,4,9,-4,10,-10,2,-3,7,-5,-8,5,-5,4,3,-10,3,-6,1,7,5,-4,-5,8,-6,1,1,5,4,-7,-9,-7,10,7,5,-5,-3,9,-9,-10,-9,10,6,8,-7,6,-2,10,-6,5,1,2,-10,-2,6,-3,2,5,-1,5,-7,-5,3,1,2,-9,-6,9,-1,-5,2,2,-1,9,1,1,-6,-7,4,8,-3,-1,9,-7,2,9,-7,-7,9,10,1,-6,-10,7,10,-1,2,4,-3,-4,-2,-8,-4,-7,10,-1,-1,-9,-9,-4,-2,1,-9,7,-5,-7,-2,6,-10,8,-2,-3,5,3,-8,2,4,-6,-10,6,-4,4,10,3,-5,-9,8,-2,-4,7,-4,4,4,-2,2,10,3,-1,4,-4,-5,-7,-7,-9,6,4,5,-9,-7,3,-2,-5,-5,-7,-4,-7,6,-3,-3,-3,-8,-10,-7,4,-1,-5,-8,-8,-1,-1,8,4,-1,4,-9,4,5,4,2,-8,-5,-6,3,7,10,7,-7,1,-7,-4,5,-8,2,2,10,-7,-1,9,10,10,-3,10,-7,7,-8,-2,1,-3,2,6,-3,6,-9,-10,8,-9,-6,-2,-9,-8,-2,-10,-2,5,-6,5,-6,-7,-5,-4,-8,5,-1,8,-8,7,-1,-2,-9,9,9,-7,7,10,1,-7,4,-5,-9,-4,-1,8,7,-7,8,-4,-1,2,4,-2,-5,-6,-8,-5,-3,-7,-10,-8,-4,5,-2,9,-1,3,-2,-2,1,7,10,10,10,10,10,-1,5,-6,-7,10,5,-3,8,5,5,1,-1,9,-8,-3,10,-3,-2,-10,6,-6,3,8,-5,1,5,3,2,-9,-4,-1,8,9,-4,8,-9,1,-4,-5,3,6,7,6,-5,2,-9,4,-6,7,2,-10,-10,6,9,2,7,-2,9,-6,2,4,10,9,10,7,-3,-6,-7,6,4,-2,6,-7,-9,-7,-2,2,-10,-1,-9,4,-7,-5,-3,-2,9,-9,-7,9,-1,9,-9,9,-4,-10,9,6,-4,-2,-2,-5,-10,7,1,3,2,7,-3,-1,-9,1,-4,-5,8,7,-2,4,-7,9,-6,-1,-4,-2,-7,7,5,-5,5,-9,-7,-4,9,1,8,3,2,-4,4,-5,-10,-6,-10,-4,-1,9,-9,7,2,3,9,4,10,8,-8,5,-7,3,-4,-4,9,-2,-8,-4,8,10,3,-9,-6,9,3,-9,6,10,8,6,-9,6,9,8,7,-7,4,3,4,-3,5,9,-6,3,3,3,-8,-7,-9,4,-5,-6,6,8,-1,-9,2,10,-7,2,-2,9,-4,-7,-5,8,-4,8,4,-2,-6,-3,-10,-8,8,6,7,-2,-4,-3,-1,-9,-3,-7,-5,-4,-9,-1,10,6,1,9,-7,-10,-1,-2,-4,-9,9,6,4,-5,6,4,7,-5,-1,-10,-9,-1,-1,-5,3,-2,10,6,-7,-9,-7,1,2,-6,-2,1,-7,2,-5,-5,-10,1,-6,-6,-8,-7,7,-2,-2,3,-5,5,-7,1,5,2,-2,7,-2,10,9,4,3,-6,4,-3,4,-2,7,6,-1,7,-1,-1,9,-2,1,4,-2,1,2,7,-3,10,6,10,-2,9,3,-8,-3,1,-6,8,-9,-4,-4,-6,3,7,-2,5,5,-9,5,-3,8,10,10,2,10,10,-8,-1,4,10,-6,-10,-8,1,8,2,9,2,2,9,-9,-6,-7,9,6,7,-4,-4,10,6,9,-6,9,-8,-9,3,-7,-8,-7,-6,-6,-4,2,3,-3,-9,-6,-1,-2,-8,-7,2,9,8,5,-8,7,-3,9,-10,-6,5,6,9,-6,-1,-7,8,-1,1,-10,-10,10,-5,-9,1,6,9,3,-9,4,-3,3,6,-6,3,-7,-3,6,6,-5,-3,3,10,-10,5,1,5,-7,-9,2,-9,2,-6,1,4,-10,-6,8,1,7,2,-5,-1,9,-7,1,-10,1,-3,-1,-8,-3,8,-10,-1,-6,-4,-9,-7,-4,-1,-2,8,-10,-6,8,-2,6,-6,10,3,8,8,2,-10,-10,9,-4,7,-10,5,-5,-2,-6,9,-4,1,-8,1,-6,6,4,10,-4,1,8,-3,10,7,-2,3,7,-7,-7,-6,-1,-9,-10,2,5,-10,-7,9,-8,7,-1,5,-6,-4,3,4,-2,9,-3,8,2,3,10,-9,8,-6,6,-8,6,-3,-2,4,-1,8,4,4,-3,-7,2,-9,4,1,9,-2,1,-7,-4,1,-4,3,-4,-5,-7,9,-10,10,-6,-6,10,1,5,6,-8,9,5,-1,-9,7,-1,-3,-5,-7,-4,5,10,7,5,-7,10,5,5,8,2,-2,-2,-6,-10,5,3,-9,-7,10,-10,4,-2,7,7,-3,-1,-4,10,9,10,-3,5,9,6,5,-8,-6,-10,-8,-10,-7,-6,3,8,7,5,4,1,3,3,-5,-7,-9,-6,5,2,5,3,-5,10,-3,-1,5,8,-1,-6,-2,-7,-1,2,9,9,1,3,-5,9,6,-4,-3,-10,5,-3,8,-10,5,8,5,7,9,3,1,-3,3,1,-10,-10,-7,-4,3,6,7,1,1,-9,7,4], dtype = "int16")#candidate|5616|(1386,)|const|int16
const_5617 = relay.const([8,-5,-3,10,-1,-6,-1,-10,-10,-3,10,-10,2,-2,-7,6,-6,6,7,3,-4,5,-2,4,-2,1,-9,-1,-8,1,-10,5,-1,5,9,-8,-9,-8,-5,-10,-1,9,4,3,2,9,3,10,-5,2,3,6,-2,-10,9,6,-3,-2,-4,8,10,-8,1,9,-10,-1,2,4,4,-2,8,-4,2,7,-10,-2,2,5,5,-3,-4,2,4,9,2,2,9,10,-4,9,-1,4,10,-1,3,4,8,3,-1,-9,-6,-4,9,-8,2,8,-10,-9,4,-7,-1,4,6,1,-4,10,-3,4,-10,-6,-2,6,-7,-2,2,-7,10,-2,1,-4,4,-4,10,-9,-10,3,-9,4,3,-6,5,7,7,10,5,-2,9,5,3,2,-9,7,-3,6,7,2,-7,5,-10,-1,-10,1,-10,1,-10,-9,7,9,-7,7,-8,5,-7,1,-7,10,5,9,10,9,10,-9,3,6,-4,5,-3,9,-1,7,1,9,1,-3,9,-10,-9,-5,-10,4,7,6,-8,-8,-3,10,4,-4,-9,-7,9,7,-10,-2,-7,-2,4,2,3,4,7,-2,5,-6,-4,-3,2,-3,-4,3,-1,-4,5,10,8,-5,-10,-3,-4,-9,6,1,4,2,-1,9,-10,-9,-1,-4,-5,-1,8,9,-7,-10,4,10,-7,8,-7,-10,-2,-1,-9,1,4,8,7,5,10,4,-9,2,7,4,6,1,6,-2,-9,-1,-2,4,-10,3,4,-2,4,-1,-3,-6,-10,9,-1,2,-4,2,4,5,-6,-4,6,5,9,10,2,4,-3,9,6,3,-6,5,-2,6,1,-10,5,8,3,9,-5,7,-8,3,10,3,10,8,2,-10,3,1,-7,-5,8,4,-8,3,-9,-9,10,-7,-4,2,8,-9,4,-2,-1,-1,-2,2,10,-6,-10,10,-9,-2,-1,-8,-8,1,-7,5,9,-6,-3,-2,4,3,-5,5,9,8,2,10,-1,4,-5,7,-6,-6,-1,-3,-6,-10,9,-4,3,-10,-6,-6,3,-8,-10,-4,-5,-7,-9,-3,7,4,9,6,-10,8,1,4,6,4,-6,-2,9,9,-2,-2,6,-8,-6,8,5,1,-9,-9,8,1,-4,-2,4,2,4,8,-2,4,3,3,7,3,8,1,7,-9,-6,-3,-2,8,-9,-7,-5,8,-2,-7,2,5,1,-7,9,-7,-6,-5,5,8,2,-6,4,-8,-2,7,2,-7,9,1,-1,3,1,10,3,-2,3,3,-2,6,-3,-2,-7,10,-7,4,-9,7,-4,6,7,4,7,-9,-8,5,-10,-8,5,2,9,10,-4,-10,8,-8,5,4,9,1,8,9,-2,-4,-5,1,-2,-5,-1,-7,-2,-1,6,1,9,-1,9,-7,-8,-9,7,10,2,10,-10,-2,1,-3,9,4,-9,6,-6,-10,6,-7,1,4,3,-9,-10,-7,-2,-10,6,2,-1,-3,3,-1,-5,2,6,-9,2,1,-7,-3,-3,-4,8,-6,4,6,-5,6,5,-5,-8,9,-2,-9,3,2,6,-6,-1,3,-2,-3,-8,-8,-1,-4,-7,6,-5,2,9,-5,9,-9,-4,6,-5,-4,9,4,4,8,2,3,-1,9,-7,4,6,6,8,-7,-10,6,4,1,9,-9,5,10,5,5,4,9,3,-1,7,3,-10,1,10,-1,-3,-2,2,-4,3,-2,9,8,-9,10,-8,5,4,3,-10,-1,-7,-1,4,10,5,6,-3,3,-5,10,-7,-3], dtype = "int32")#candidate|5617|(672,)|const|int32
const_5618 = relay.const(8, dtype = "uint64")#candidate|5618|()|const|uint64
var_5619 = relay.var("var_5619", dtype = "uint64", shape = (546,))#candidate|5619|(546,)|var|uint64
call_5615 = relay.TupleGetItem(func_4397_call(relay.reshape(const_5616.astype('int16'), [1386,]), relay.reshape(const_5617.astype('int32'), [672,]), relay.reshape(const_5618.astype('uint64'), []), relay.reshape(var_5619.astype('uint64'), [7, 78]), ), 0)
call_5620 = relay.TupleGetItem(func_4403_call(relay.reshape(const_5616.astype('int16'), [1386,]), relay.reshape(const_5617.astype('int32'), [672,]), relay.reshape(const_5618.astype('uint64'), []), relay.reshape(var_5619.astype('uint64'), [7, 78]), ), 0)
func_169_call = mod.get_global_var('func_169')
func_173_call = mutated_mod.get_global_var('func_173')
var_5624 = relay.var("var_5624", dtype = "bool", shape = (7, 182))#candidate|5624|(7, 182)|var|bool
call_5623 = func_169_call(relay.reshape(var_5624.astype('bool'), [7, 14, 13]), relay.reshape(var_5624.astype('bool'), [7, 14, 13]), )
call_5625 = func_169_call(relay.reshape(var_5624.astype('bool'), [7, 14, 13]), relay.reshape(var_5624.astype('bool'), [7, 14, 13]), )
output = relay.Tuple([call_5588,call_5612,var_5613,call_5615,const_5616,const_5617,const_5618,var_5619,call_5623,var_5624,])
output2 = relay.Tuple([call_5589,call_5614,var_5613,call_5620,const_5616,const_5617,const_5618,var_5619,call_5625,var_5624,])
func_5630 = relay.Function([var_5613,var_5619,var_5624,], output)
mod['func_5630'] = func_5630
mod = relay.transform.InferType()(mod)
mutated_mod['func_5630'] = func_5630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5630_call = mutated_mod.get_global_var('func_5630')
var_5632 = relay.var("var_5632", dtype = "float32", shape = (1, 12))#candidate|5632|(1, 12)|var|float32
var_5633 = relay.var("var_5633", dtype = "uint64", shape = (546,))#candidate|5633|(546,)|var|uint64
var_5634 = relay.var("var_5634", dtype = "bool", shape = (7, 182))#candidate|5634|(7, 182)|var|bool
call_5631 = func_5630_call(var_5632,var_5633,var_5634,)
output = call_5631
func_5635 = relay.Function([var_5632,var_5633,var_5634,], output)
mutated_mod['func_5635'] = func_5635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5686 = relay.var("var_5686", dtype = "float32", shape = (16, 12, 10))#candidate|5686|(16, 12, 10)|var|float32
uop_5687 = relay.acos(var_5686.astype('float32')) # shape=(16, 12, 10)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_5694 = func_3548_call()
call_5695 = func_3548_call()
output = relay.Tuple([uop_5687,call_5694,])
output2 = relay.Tuple([uop_5687,call_5695,])
func_5703 = relay.Function([var_5686,], output)
mod['func_5703'] = func_5703
mod = relay.transform.InferType()(mod)
mutated_mod['func_5703'] = func_5703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5704 = relay.var("var_5704", dtype = "float32", shape = (16, 12, 10))#candidate|5704|(16, 12, 10)|var|float32
func_5703_call = mutated_mod.get_global_var('func_5703')
call_5705 = func_5703_call(var_5704)
output = call_5705
func_5706 = relay.Function([var_5704], output)
mutated_mod['func_5706'] = func_5706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mod.get_global_var('func_3711')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_5731 = relay.TupleGetItem(func_3711_call(), 2)
call_5732 = relay.TupleGetItem(func_3712_call(), 2)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_5739 = func_3611_call()
call_5740 = func_3611_call()
output = relay.Tuple([call_5731,call_5739,])
output2 = relay.Tuple([call_5732,call_5740,])
func_5746 = relay.Function([], output)
mod['func_5746'] = func_5746
mod = relay.transform.InferType()(mod)
mutated_mod['func_5746'] = func_5746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5746_call = mutated_mod.get_global_var('func_5746')
call_5747 = func_5746_call()
output = call_5747
func_5748 = relay.Function([], output)
mutated_mod['func_5748'] = func_5748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4786_call = mod.get_global_var('func_4786')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_5783 = relay.TupleGetItem(func_4786_call(), 0)
call_5784 = relay.TupleGetItem(func_4787_call(), 0)
func_3195_call = mod.get_global_var('func_3195')
func_3197_call = mutated_mod.get_global_var('func_3197')
call_5804 = relay.TupleGetItem(func_3195_call(), 0)
call_5805 = relay.TupleGetItem(func_3197_call(), 0)
output = relay.Tuple([call_5783,call_5804,])
output2 = relay.Tuple([call_5784,call_5805,])
func_5806 = relay.Function([], output)
mod['func_5806'] = func_5806
mod = relay.transform.InferType()(mod)
output = func_5806()
func_5807 = relay.Function([], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_5829 = relay.TupleGetItem(func_4018_call(), 1)
call_5830 = relay.TupleGetItem(func_4019_call(), 1)
const_5842 = relay.const([[[False,True,False,True,True,True,True,False,False],[False,True,True,True,False,False,False,False,True],[False,True,False,True,True,True,False,False,True],[False,True,False,False,False,True,False,True,False],[False,False,False,False,False,True,True,False,True],[False,False,False,True,False,True,True,True,False],[True,False,False,False,False,False,False,True,False],[False,True,True,False,True,False,True,False,False],[False,True,False,False,True,False,False,True,True],[True,False,False,True,True,False,True,True,True],[True,False,False,True,False,True,True,False,True],[True,True,True,True,False,False,False,False,False],[False,False,True,True,True,True,False,False,True],[False,True,False,True,True,False,True,False,False]],[[True,True,True,False,False,False,True,False,False],[True,False,False,True,False,False,False,False,True],[False,False,True,True,False,True,True,False,False],[False,True,False,False,False,False,True,False,False],[False,True,False,False,True,False,True,False,True],[True,True,True,True,True,True,False,False,True],[True,True,True,True,True,True,False,False,True],[False,True,False,False,True,True,True,False,False],[True,True,True,False,False,False,True,True,True],[False,False,True,False,True,False,True,True,False],[False,True,False,False,True,True,False,True,True],[True,False,True,False,False,False,True,False,False],[True,False,False,False,False,False,True,False,True],[True,False,False,True,False,True,True,False,False]],[[True,False,False,False,False,False,True,False,False],[True,True,True,True,False,True,True,False,True],[True,True,False,True,False,False,True,False,False],[True,True,True,True,False,True,True,False,True],[False,True,True,False,False,False,True,False,False],[False,True,False,False,True,True,False,False,False],[False,True,False,False,False,True,True,False,False],[True,True,False,False,True,False,False,False,False],[False,True,False,True,False,False,True,False,True],[True,False,True,True,False,False,True,False,True],[False,False,True,False,True,False,True,True,False],[True,True,False,True,False,True,False,True,True],[False,False,True,True,True,True,False,False,True],[False,True,False,True,False,False,False,False,True]],[[True,True,False,True,False,False,True,False,False],[False,False,True,False,False,True,True,True,True],[True,True,True,False,True,True,False,True,True],[False,True,True,True,False,True,False,True,True],[False,False,True,False,True,True,True,True,True],[False,False,False,True,True,True,True,False,True],[False,False,False,True,True,True,False,False,False],[True,False,True,True,False,False,False,False,True],[False,True,False,True,False,False,False,True,False],[True,False,False,False,False,False,False,True,True],[False,False,False,False,True,False,True,False,True],[True,True,True,False,True,True,False,False,True],[True,False,False,True,False,True,True,False,True],[True,True,True,True,True,True,True,True,False]],[[True,False,True,False,False,False,False,False,True],[True,True,True,False,False,False,False,True,False],[True,False,False,True,True,True,False,False,False],[True,True,True,True,True,False,False,True,False],[False,True,False,True,False,True,True,False,True],[True,True,False,True,False,False,True,True,False],[True,True,False,True,False,False,True,False,True],[True,False,False,True,True,False,True,False,False],[True,True,True,False,False,False,True,True,False],[True,True,False,True,False,True,False,True,False],[False,False,False,True,True,False,True,False,True],[True,False,False,False,True,True,True,True,False],[True,False,True,True,False,False,True,True,False],[True,True,False,True,True,False,True,False,False]],[[True,False,False,True,True,False,True,True,True],[False,False,True,False,True,True,False,True,True],[False,False,True,True,True,False,True,False,False],[True,True,False,True,True,False,False,False,False],[False,True,True,False,True,False,True,False,True],[False,False,False,False,False,True,True,True,False],[True,False,True,True,False,False,False,True,True],[False,True,True,False,False,False,False,False,False],[False,True,False,True,True,False,False,True,False],[True,False,False,True,False,False,False,True,False],[True,True,False,False,False,True,False,False,True],[False,False,True,False,False,False,False,False,False],[False,False,True,True,True,False,True,False,False],[True,True,True,False,False,True,False,False,True]],[[True,False,True,True,True,False,False,True,False],[True,False,False,True,False,False,False,True,True],[False,False,False,False,False,True,False,False,True],[True,False,True,False,True,False,True,False,True],[True,True,False,False,False,False,False,True,True],[True,True,False,False,False,True,False,False,True],[True,False,True,False,True,True,False,True,False],[False,True,True,True,False,False,True,False,False],[False,True,True,True,False,False,True,False,False],[False,True,True,True,False,True,False,True,True],[True,True,False,False,True,True,True,False,False],[True,True,False,True,True,True,False,False,True],[False,False,False,True,False,True,False,False,True],[True,False,False,False,False,True,True,False,False]],[[False,True,False,False,False,False,True,True,True],[False,True,False,False,True,False,False,False,False],[True,False,False,False,False,True,True,False,True],[False,True,True,True,False,False,True,False,False],[True,True,True,True,False,False,True,False,True],[True,False,False,True,True,False,False,True,False],[True,False,True,False,True,False,True,False,False],[True,True,True,True,True,False,False,False,False],[False,True,False,True,False,False,True,True,True],[False,True,True,False,False,True,True,False,False],[False,True,False,False,False,False,True,True,True],[False,True,True,False,True,False,True,True,False],[True,False,True,True,False,True,False,True,True],[True,False,False,False,False,True,False,True,False]],[[False,False,True,True,False,True,False,True,False],[False,False,True,False,True,False,False,False,False],[True,False,True,False,False,False,False,False,False],[False,False,True,False,True,False,True,False,False],[False,True,True,True,True,True,False,False,True],[False,False,True,True,True,False,False,True,False],[False,False,False,True,False,False,False,False,True],[False,True,False,True,False,True,False,True,False],[False,True,False,True,False,False,False,True,True],[False,True,True,False,False,True,False,True,True],[True,True,True,False,False,False,False,True,False],[True,True,True,False,True,True,False,False,True],[True,True,False,False,True,True,True,False,True],[False,False,False,True,True,False,False,False,False]],[[True,False,True,True,False,False,True,False,False],[False,False,False,True,True,True,True,False,True],[False,True,True,False,False,True,False,True,True],[False,False,True,False,True,True,True,False,True],[False,True,True,False,True,False,False,False,True],[False,True,True,True,False,True,False,False,True],[True,False,False,False,True,False,True,True,True],[True,True,False,False,True,True,False,True,True],[False,True,True,True,True,True,True,False,True],[False,False,True,True,False,True,True,False,False],[False,False,False,True,True,True,True,True,False],[True,True,True,False,True,False,True,True,False],[False,False,False,True,False,True,False,True,True],[False,False,True,False,False,True,False,False,False]],[[True,True,False,True,False,True,False,False,True],[True,False,False,True,False,False,True,False,False],[False,False,True,True,False,True,True,True,False],[False,True,False,True,True,True,True,False,False],[False,True,False,True,False,False,True,True,True],[True,False,True,True,True,True,False,False,False],[False,True,True,False,False,False,False,True,True],[True,False,False,True,False,True,False,False,True],[False,True,False,True,True,False,False,False,True],[False,True,False,False,True,True,True,True,True],[True,True,False,True,False,False,True,False,True],[False,False,True,True,False,False,True,False,True],[True,False,False,True,False,True,True,False,False],[False,True,True,False,True,False,False,False,False]]], dtype = "bool")#candidate|5842|(11, 14, 9)|const|bool
bop_5843 = relay.less(call_5829.astype('bool'), relay.reshape(const_5842.astype('bool'), relay.shape_of(call_5829))) # shape=(11, 14, 9)
bop_5846 = relay.less(call_5830.astype('bool'), relay.reshape(const_5842.astype('bool'), relay.shape_of(call_5830))) # shape=(11, 14, 9)
output = bop_5843
output2 = bop_5846
func_5851 = relay.Function([], output)
mod['func_5851'] = func_5851
mod = relay.transform.InferType()(mod)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5851_call = mutated_mod.get_global_var('func_5851')
call_5852 = func_5851_call()
output = call_5852
func_5853 = relay.Function([], output)
mutated_mod['func_5853'] = func_5853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5806_call = mod.get_global_var('func_5806')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_5854 = relay.TupleGetItem(func_5806_call(), 0)
call_5855 = relay.TupleGetItem(func_5807_call(), 0)
func_1769_call = mod.get_global_var('func_1769')
func_1773_call = mutated_mod.get_global_var('func_1773')
call_5865 = relay.TupleGetItem(func_1769_call(relay.reshape(call_5854.astype('int64'), [11, 9, 9]), relay.reshape(call_5854.astype('int64'), [11, 9, 9]), ), 0)
call_5866 = relay.TupleGetItem(func_1773_call(relay.reshape(call_5854.astype('int64'), [11, 9, 9]), relay.reshape(call_5854.astype('int64'), [11, 9, 9]), ), 0)
output = relay.Tuple([call_5854,call_5865,])
output2 = relay.Tuple([call_5855,call_5866,])
func_5882 = relay.Function([], output)
mod['func_5882'] = func_5882
mod = relay.transform.InferType()(mod)
mutated_mod['func_5882'] = func_5882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5882_call = mutated_mod.get_global_var('func_5882')
call_5883 = func_5882_call()
output = call_5883
func_5884 = relay.Function([], output)
mutated_mod['func_5884'] = func_5884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mod.get_global_var('func_4473')
func_4475_call = mutated_mod.get_global_var('func_4475')
call_5922 = relay.TupleGetItem(func_4473_call(), 0)
call_5923 = relay.TupleGetItem(func_4475_call(), 0)
func_1194_call = mod.get_global_var('func_1194')
func_1198_call = mutated_mod.get_global_var('func_1198')
var_5927 = relay.var("var_5927", dtype = "bool", shape = (1, 1274))#candidate|5927|(1, 1274)|var|bool
const_5928 = relay.const([[2.527818,-3.556692,-0.245096,5.838962],[8.252539,-7.844474,-7.575302,4.073532],[-8.496256,-6.622473,1.933923,3.843605],[2.581465,8.159128,-7.281216,-0.567608],[-3.938631,0.957335,4.290100,2.550125],[3.950703,6.286542,2.087297,9.934815],[-4.205084,-5.320251,-5.786737,-0.560358],[-6.453265,-8.411511,7.122173,-9.151501],[8.848049,-9.454487,-7.458390,8.360914],[6.408123,-3.744729,-9.413827,2.062449],[8.330128,-0.015638,5.478202,1.701514],[-6.227154,-5.861502,0.340504,4.120939],[4.233093,5.770301,-0.447549,8.059578],[5.448427,-4.884282,1.480383,2.850263],[1.914505,-4.685535,-2.465102,-9.717684],[8.294242,-6.506530,0.136925,-1.147463],[1.888148,-0.608470,-2.564115,-9.792057],[9.683370,1.229895,-5.397933,-9.859258]], dtype = "float32")#candidate|5928|(18, 4)|const|float32
call_5926 = relay.TupleGetItem(func_1194_call(relay.reshape(var_5927.astype('bool'), [1274,]), relay.reshape(const_5928.astype('float32'), [72,]), ), 3)
call_5929 = relay.TupleGetItem(func_1198_call(relay.reshape(var_5927.astype('bool'), [1274,]), relay.reshape(const_5928.astype('float32'), [72,]), ), 3)
output = relay.Tuple([call_5922,call_5926,var_5927,const_5928,])
output2 = relay.Tuple([call_5923,call_5929,var_5927,const_5928,])
func_5937 = relay.Function([var_5927,], output)
mod['func_5937'] = func_5937
mod = relay.transform.InferType()(mod)
var_5938 = relay.var("var_5938", dtype = "bool", shape = (1, 1274))#candidate|5938|(1, 1274)|var|bool
output = func_5937(var_5938)
func_5939 = relay.Function([var_5938], output)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5882_call = mod.get_global_var('func_5882')
func_5884_call = mutated_mod.get_global_var('func_5884')
call_5990 = relay.TupleGetItem(func_5882_call(), 0)
call_5991 = relay.TupleGetItem(func_5884_call(), 0)
uop_6002 = relay.sqrt(call_5990.astype('float64')) # shape=(11, 9, 9)
uop_6004 = relay.sqrt(call_5991.astype('float64')) # shape=(11, 9, 9)
func_3790_call = mod.get_global_var('func_3790')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_6011 = relay.TupleGetItem(func_3790_call(), 0)
call_6012 = relay.TupleGetItem(func_3791_call(), 0)
uop_6022 = relay.cosh(call_5990.astype('float64')) # shape=(11, 9, 9)
uop_6024 = relay.cosh(call_5991.astype('float64')) # shape=(11, 9, 9)
output = relay.Tuple([uop_6002,call_6011,uop_6022,])
output2 = relay.Tuple([uop_6004,call_6012,uop_6024,])
func_6030 = relay.Function([], output)
mod['func_6030'] = func_6030
mod = relay.transform.InferType()(mod)
output = func_6030()
func_6031 = relay.Function([], output)
mutated_mod['func_6031'] = func_6031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5417_call = mod.get_global_var('func_5417')
func_5419_call = mutated_mod.get_global_var('func_5419')
call_6045 = relay.TupleGetItem(func_5417_call(), 0)
call_6046 = relay.TupleGetItem(func_5419_call(), 0)
func_3711_call = mod.get_global_var('func_3711')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_6057 = relay.TupleGetItem(func_3711_call(), 2)
call_6058 = relay.TupleGetItem(func_3712_call(), 2)
output = relay.Tuple([call_6045,call_6057,])
output2 = relay.Tuple([call_6046,call_6058,])
func_6086 = relay.Function([], output)
mod['func_6086'] = func_6086
mod = relay.transform.InferType()(mod)
mutated_mod['func_6086'] = func_6086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6086_call = mutated_mod.get_global_var('func_6086')
call_6087 = func_6086_call()
output = call_6087
func_6088 = relay.Function([], output)
mutated_mod['func_6088'] = func_6088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5312_call = mod.get_global_var('func_5312')
func_5313_call = mutated_mod.get_global_var('func_5313')
call_6152 = relay.TupleGetItem(func_5312_call(), 0)
call_6153 = relay.TupleGetItem(func_5313_call(), 0)
func_4534_call = mod.get_global_var('func_4534')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_6181 = relay.TupleGetItem(func_4534_call(), 0)
call_6182 = relay.TupleGetItem(func_4536_call(), 0)
output = relay.Tuple([call_6152,call_6181,])
output2 = relay.Tuple([call_6153,call_6182,])
func_6187 = relay.Function([], output)
mod['func_6187'] = func_6187
mod = relay.transform.InferType()(mod)
output = func_6187()
func_6188 = relay.Function([], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6030_call = mod.get_global_var('func_6030')
func_6031_call = mutated_mod.get_global_var('func_6031')
call_6221 = relay.TupleGetItem(func_6030_call(), 2)
call_6222 = relay.TupleGetItem(func_6031_call(), 2)
output = call_6221
output2 = call_6222
func_6243 = relay.Function([], output)
mod['func_6243'] = func_6243
mod = relay.transform.InferType()(mod)
output = func_6243()
func_6244 = relay.Function([], output)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mod.get_global_var('func_4473')
func_4475_call = mutated_mod.get_global_var('func_4475')
call_6262 = relay.TupleGetItem(func_4473_call(), 0)
call_6263 = relay.TupleGetItem(func_4475_call(), 0)
output = call_6262
output2 = call_6263
func_6270 = relay.Function([], output)
mod['func_6270'] = func_6270
mod = relay.transform.InferType()(mod)
mutated_mod['func_6270'] = func_6270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6270_call = mutated_mod.get_global_var('func_6270')
call_6271 = func_6270_call()
output = call_6271
func_6272 = relay.Function([], output)
mutated_mod['func_6272'] = func_6272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_6326 = relay.TupleGetItem(func_4018_call(), 4)
call_6327 = relay.TupleGetItem(func_4019_call(), 4)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_6343 = func_3548_call()
call_6344 = func_3548_call()
output = relay.Tuple([call_6326,call_6343,])
output2 = relay.Tuple([call_6327,call_6344,])
func_6346 = relay.Function([], output)
mod['func_6346'] = func_6346
mod = relay.transform.InferType()(mod)
mutated_mod['func_6346'] = func_6346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6346_call = mutated_mod.get_global_var('func_6346')
call_6347 = func_6346_call()
output = call_6347
func_6348 = relay.Function([], output)
mutated_mod['func_6348'] = func_6348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mod.get_global_var('func_5225')
func_5227_call = mutated_mod.get_global_var('func_5227')
call_6351 = func_5225_call()
call_6352 = func_5225_call()
output = relay.Tuple([call_6351,])
output2 = relay.Tuple([call_6352,])
func_6353 = relay.Function([], output)
mod['func_6353'] = func_6353
mod = relay.transform.InferType()(mod)
mutated_mod['func_6353'] = func_6353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6353_call = mutated_mod.get_global_var('func_6353')
call_6354 = func_6353_call()
output = call_6354
func_6355 = relay.Function([], output)
mutated_mod['func_6355'] = func_6355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mod.get_global_var('func_5225')
func_5227_call = mutated_mod.get_global_var('func_5227')
call_6426 = func_5225_call()
call_6427 = func_5225_call()
func_5456_call = mod.get_global_var('func_5456')
func_5459_call = mutated_mod.get_global_var('func_5459')
const_6486 = relay.const([-4.563797,9.771474,1.349160,-2.449435,-4.874229,7.471667,-3.789093,-2.381501,8.274267,7.790033,-1.211741,-4.660428,-3.293985,8.444588,0.203305,-5.666458,1.851317,-1.684567,-2.454721,4.045930,4.360533,-4.304223,8.408642,-2.076711,5.119989,7.611793,1.351401,-3.587544,3.310903,7.229341,7.607236,8.579524,-4.236092,-3.189460,-4.031795,1.022256,-5.846554,1.975020,-9.856109,-9.851709,-3.137252,2.668986,5.516954,7.545416,1.941055,6.398185,1.749661,-8.577101,-2.151222,-2.709561,-8.851215,-3.426542,-8.071149,-6.647526,-9.763569,-1.679811,-0.631712,-8.165160,-7.607908,9.781275,-2.031140,-1.564758,1.590319,7.232897,1.255504,-3.843446,7.549454,-1.615896,-5.677473,-8.343669,8.438722,5.331385,-8.409220,9.171504,-1.929101,3.070942,2.037148,-0.639005,-1.353936,-6.630489,9.045105,8.717938,-2.186619,-4.248399,-7.982824,8.329041,-7.373636,2.108439,-9.828577,0.169252,9.248296,1.705812,-2.269595,8.941019,-9.964711,0.181352,-4.796812,-5.984117,-1.544989,-6.190958,-2.742302,1.200269,-8.385865,5.431196,1.332534,8.706368,5.196896,-7.606600,-6.203206,-5.619809,3.887493,5.178855,-9.544763,-4.351001,-9.775527,1.342145,-3.951553,2.944855,-8.494351,6.105761,2.864267,-2.346753,-9.838042,5.405223,4.804877,8.327974,8.242482,-7.164885,-6.487498,-3.444429,8.986094,8.498330], dtype = "float32")#candidate|6486|(132,)|const|float32
var_6487 = relay.var("var_6487", dtype = "bool", shape = (1274,))#candidate|6487|(1274,)|var|bool
call_6485 = relay.TupleGetItem(func_5456_call(relay.reshape(const_6486.astype('float32'), [132,]), relay.reshape(var_6487.astype('bool'), [1274,]), ), 2)
call_6488 = relay.TupleGetItem(func_5459_call(relay.reshape(const_6486.astype('float32'), [132,]), relay.reshape(var_6487.astype('bool'), [1274,]), ), 2)
output = relay.Tuple([call_6426,call_6485,const_6486,var_6487,])
output2 = relay.Tuple([call_6427,call_6488,const_6486,var_6487,])
func_6513 = relay.Function([var_6487,], output)
mod['func_6513'] = func_6513
mod = relay.transform.InferType()(mod)
var_6514 = relay.var("var_6514", dtype = "bool", shape = (1274,))#candidate|6514|(1274,)|var|bool
output = func_6513(var_6514)
func_6515 = relay.Function([var_6514], output)
mutated_mod['func_6515'] = func_6515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mod.get_global_var('func_3711')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_6517 = relay.TupleGetItem(func_3711_call(), 2)
call_6518 = relay.TupleGetItem(func_3712_call(), 2)
func_5630_call = mod.get_global_var('func_5630')
func_5635_call = mutated_mod.get_global_var('func_5635')
var_6532 = relay.var("var_6532", dtype = "float32", shape = (12, 1))#candidate|6532|(12, 1)|var|float32
var_6533 = relay.var("var_6533", dtype = "uint64", shape = (546,))#candidate|6533|(546,)|var|uint64
var_6534 = relay.var("var_6534", dtype = "bool", shape = (1274,))#candidate|6534|(1274,)|var|bool
call_6531 = relay.TupleGetItem(func_5630_call(relay.reshape(var_6532.astype('float32'), [1, 12]), relay.reshape(var_6533.astype('uint64'), [546,]), relay.reshape(var_6534.astype('bool'), [7, 182]), ), 1)
call_6535 = relay.TupleGetItem(func_5635_call(relay.reshape(var_6532.astype('float32'), [1, 12]), relay.reshape(var_6533.astype('uint64'), [546,]), relay.reshape(var_6534.astype('bool'), [7, 182]), ), 1)
uop_6547 = relay.exp(call_6517.astype('float64')) # shape=(210, 1)
uop_6549 = relay.exp(call_6518.astype('float64')) # shape=(210, 1)
bop_6550 = relay.minimum(uop_6547.astype('uint8'), relay.reshape(call_6517.astype('uint8'), relay.shape_of(uop_6547))) # shape=(210, 1)
bop_6553 = relay.minimum(uop_6549.astype('uint8'), relay.reshape(call_6518.astype('uint8'), relay.shape_of(uop_6549))) # shape=(210, 1)
uop_6556 = relay.log(call_6531.astype('float64')) # shape=(11, 9, 9)
uop_6558 = relay.log(call_6535.astype('float64')) # shape=(11, 9, 9)
var_6575 = relay.var("var_6575", dtype = "uint8", shape = (210, 7))#candidate|6575|(210, 7)|var|uint8
bop_6576 = relay.floor_divide(bop_6550.astype('float32'), var_6575.astype('float32')) # shape=(210, 7)
bop_6579 = relay.floor_divide(bop_6553.astype('float32'), var_6575.astype('float32')) # shape=(210, 7)
uop_6581 = relay.sqrt(var_6575.astype('float64')) # shape=(210, 7)
uop_6594 = relay.log2(uop_6547.astype('float32')) # shape=(210, 1)
uop_6596 = relay.log2(uop_6549.astype('float32')) # shape=(210, 1)
uop_6609 = relay.asinh(uop_6594.astype('float64')) # shape=(210, 1)
uop_6611 = relay.asinh(uop_6596.astype('float64')) # shape=(210, 1)
func_3904_call = mod.get_global_var('func_3904')
func_3909_call = mutated_mod.get_global_var('func_3909')
const_6613 = relay.const([-3,4,-4,5,8,8,4,-4,8,-7,7,-4,9,-5,1,3,-7,-7,9,8,-2,1,-10,8,-3,8,-4,-10,-2,-6,-8,-6,4,-7,7,-2,-2,5,-8,-9,8,2,2,7,-6,6,1,-1,7,-2,3,-3], dtype = "uint16")#candidate|6613|(52,)|const|uint16
const_6614 = relay.const([-4.152448,-7.364852,2.103421,5.116107,0.473667,-8.196262,1.829982,-7.450749,-0.780593,-9.195406,-8.097773,-0.016594,-7.107575,3.041614,5.139479,5.075666,1.962549,-1.903613,0.222057,3.012760,4.132365,-7.066659,-4.093737,-8.219538,0.034030,-3.492072,4.997316,6.031657,-4.036281,8.380626,-0.909838,4.084826,-8.463769,-7.329010,2.458857,-9.020809,9.594541,1.144351,8.656378,-3.599616,-3.307889,-0.457952,-9.597886,7.506136,-2.520024,-9.792561,9.116186,-2.835667,8.570480,-8.318522,2.102784,-5.807005,4.930530,-7.179851,2.431059,1.457822,0.420800,8.985427,9.205354,-3.454468,4.957016,-6.075706,4.836668,-1.030156,8.712712,1.631722,9.940033,5.583343,-8.246218,3.496152,9.761537,3.696095,-8.827146,-0.708472,-5.094244,1.341222,1.178920,-3.664371,2.527375,-8.654701,1.584778,5.429288,1.932341,5.542819,-3.837956,7.456108,4.671721,-5.014638,-0.873124,-0.209936,-8.451221,-8.030985,2.108958,-5.492607,-5.319972,-9.833930,-5.112574,-7.976207,-6.223393,4.743419,9.905769,-5.625680,-9.624392,-5.916357,4.296838,5.269274,1.522371,-9.081738,-1.908654,0.981131,9.628724,1.682812,5.100903,2.983973,7.342250,-5.761076,7.578380,-2.403200,6.004220,-3.070845,8.672500,-0.653957,-6.141611,8.793129,9.336438,6.345268,-4.590601,5.234700,-5.794591,-3.969634,7.473456,-2.807236], dtype = "float32")#candidate|6614|(132,)|const|float32
call_6612 = relay.TupleGetItem(func_3904_call(relay.reshape(var_6532.astype('float32'), [12,]), relay.reshape(const_6613.astype('uint16'), [52, 1]), relay.reshape(const_6614.astype('float32'), [132,]), ), 1)
call_6615 = relay.TupleGetItem(func_3909_call(relay.reshape(var_6532.astype('float32'), [12,]), relay.reshape(const_6613.astype('uint16'), [52, 1]), relay.reshape(const_6614.astype('float32'), [132,]), ), 1)
output = relay.Tuple([var_6532,var_6533,var_6534,uop_6556,bop_6576,uop_6581,uop_6609,call_6612,const_6613,const_6614,])
output2 = relay.Tuple([var_6532,var_6533,var_6534,uop_6558,bop_6579,uop_6581,uop_6611,call_6615,const_6613,const_6614,])
func_6624 = relay.Function([var_6532,var_6533,var_6534,var_6575,], output)
mod['func_6624'] = func_6624
mod = relay.transform.InferType()(mod)
mutated_mod['func_6624'] = func_6624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6624_call = mutated_mod.get_global_var('func_6624')
var_6626 = relay.var("var_6626", dtype = "float32", shape = (12, 1))#candidate|6626|(12, 1)|var|float32
var_6627 = relay.var("var_6627", dtype = "uint64", shape = (546,))#candidate|6627|(546,)|var|uint64
var_6628 = relay.var("var_6628", dtype = "bool", shape = (1274,))#candidate|6628|(1274,)|var|bool
var_6629 = relay.var("var_6629", dtype = "uint8", shape = (210, 7))#candidate|6629|(210, 7)|var|uint8
call_6625 = func_6624_call(var_6626,var_6627,var_6628,var_6629,)
output = call_6625
func_6630 = relay.Function([var_6626,var_6627,var_6628,var_6629,], output)
mutated_mod['func_6630'] = func_6630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4932_call = mod.get_global_var('func_4932')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_6639 = relay.TupleGetItem(func_4932_call(), 0)
call_6640 = relay.TupleGetItem(func_4933_call(), 0)
output = relay.Tuple([call_6639,])
output2 = relay.Tuple([call_6640,])
func_6648 = relay.Function([], output)
mod['func_6648'] = func_6648
mod = relay.transform.InferType()(mod)
mutated_mod['func_6648'] = func_6648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6648_call = mutated_mod.get_global_var('func_6648')
call_6649 = func_6648_call()
output = call_6649
func_6650 = relay.Function([], output)
mutated_mod['func_6650'] = func_6650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6680 = relay.var("var_6680", dtype = "float64", shape = (4, 12, 1))#candidate|6680|(4, 12, 1)|var|float64
uop_6681 = relay.sqrt(var_6680.astype('float64')) # shape=(4, 12, 1)
uop_6683 = relay.tan(var_6680.astype('float32')) # shape=(4, 12, 1)
uop_6687 = relay.log(uop_6683.astype('float32')) # shape=(4, 12, 1)
bop_6695 = relay.equal(uop_6683.astype('bool'), relay.reshape(uop_6687.astype('bool'), relay.shape_of(uop_6683))) # shape=(4, 12, 1)
bop_6700 = relay.power(uop_6681.astype('float64'), relay.reshape(uop_6683.astype('float64'), relay.shape_of(uop_6681))) # shape=(4, 12, 1)
func_1473_call = mod.get_global_var('func_1473')
func_1476_call = mutated_mod.get_global_var('func_1476')
var_6705 = relay.var("var_6705", dtype = "int32", shape = (672,))#candidate|6705|(672,)|var|int32
const_6706 = relay.const([4.186117,-2.802805,-5.922852,3.727871,4.916847,7.640978,-7.716481,-0.308893,5.565234,-2.415454,-8.805759,-2.715229,9.139176,-3.093919,0.759882,-0.824857,-7.787263,2.725971,8.410780,-4.348561,9.070435,9.062187,8.861361,-3.300372,7.541953,8.223617,-5.699448,-5.789382,9.868703,-4.670924,-1.370258,0.386168,7.272373,1.925390,-6.295585,3.338348,8.796280,6.054288,-1.181311,-8.201476,4.404003,4.606205,7.929823,8.176485,-4.243358,0.912329,-2.616546,1.913672,9.016352,1.729863,-1.398362,-0.047095,2.146690,9.071810,5.642972,8.709281,7.593160,-3.438318,-8.555369,8.404994,9.355652,-8.403840,-2.355145,6.406904,-6.013102,1.455051,0.318373,4.449775,7.603088,-5.198244,-9.899589,7.006144], dtype = "float32")#candidate|6706|(72,)|const|float32
call_6704 = relay.TupleGetItem(func_1473_call(relay.reshape(var_6705.astype('int32'), [16, 7, 6]), relay.reshape(const_6706.astype('float32'), [1, 72]), ), 0)
call_6707 = relay.TupleGetItem(func_1476_call(relay.reshape(var_6705.astype('int32'), [16, 7, 6]), relay.reshape(const_6706.astype('float32'), [1, 72]), ), 0)
func_2906_call = mod.get_global_var('func_2906')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_6709 = relay.TupleGetItem(func_2906_call(), 0)
call_6710 = relay.TupleGetItem(func_2907_call(), 0)
func_6030_call = mod.get_global_var('func_6030')
func_6031_call = mutated_mod.get_global_var('func_6031')
call_6711 = relay.TupleGetItem(func_6030_call(), 1)
call_6712 = relay.TupleGetItem(func_6031_call(), 1)
func_6353_call = mod.get_global_var('func_6353')
func_6355_call = mutated_mod.get_global_var('func_6355')
call_6714 = relay.TupleGetItem(func_6353_call(), 0)
call_6715 = relay.TupleGetItem(func_6355_call(), 0)
output = relay.Tuple([bop_6695,bop_6700,call_6704,var_6705,const_6706,call_6709,call_6711,call_6714,])
output2 = relay.Tuple([bop_6695,bop_6700,call_6707,var_6705,const_6706,call_6710,call_6712,call_6715,])
func_6718 = relay.Function([var_6680,var_6705,], output)
mod['func_6718'] = func_6718
mod = relay.transform.InferType()(mod)
var_6719 = relay.var("var_6719", dtype = "float64", shape = (4, 12, 1))#candidate|6719|(4, 12, 1)|var|float64
var_6720 = relay.var("var_6720", dtype = "int32", shape = (672,))#candidate|6720|(672,)|var|int32
output = func_6718(var_6719,var_6720,)
func_6721 = relay.Function([var_6719,var_6720,], output)
mutated_mod['func_6721'] = func_6721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6751 = relay.var("var_6751", dtype = "float32", shape = (3, 10, 14))#candidate|6751|(3, 10, 14)|var|float32
uop_6752 = relay.acos(var_6751.astype('float32')) # shape=(3, 10, 14)
output = relay.Tuple([uop_6752,])
output2 = relay.Tuple([uop_6752,])
func_6760 = relay.Function([var_6751,], output)
mod['func_6760'] = func_6760
mod = relay.transform.InferType()(mod)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6761 = relay.var("var_6761", dtype = "float32", shape = (3, 10, 14))#candidate|6761|(3, 10, 14)|var|float32
func_6760_call = mutated_mod.get_global_var('func_6760')
call_6762 = func_6760_call(var_6761)
output = call_6762
func_6763 = relay.Function([var_6761], output)
mutated_mod['func_6763'] = func_6763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6773 = relay.var("var_6773", dtype = "float64", shape = (8, 1, 10))#candidate|6773|(8, 1, 10)|var|float64
uop_6774 = relay.cos(var_6773.astype('float64')) # shape=(8, 1, 10)
uop_6777 = relay.rsqrt(var_6773.astype('float32')) # shape=(8, 1, 10)
bop_6790 = relay.divide(var_6773.astype('float32'), relay.reshape(uop_6774.astype('float32'), relay.shape_of(var_6773))) # shape=(8, 1, 10)
bop_6798 = relay.greater(uop_6774.astype('bool'), relay.reshape(uop_6777.astype('bool'), relay.shape_of(uop_6774))) # shape=(8, 1, 10)
func_4027_call = mod.get_global_var('func_4027')
func_4028_call = mutated_mod.get_global_var('func_4028')
call_6804 = relay.TupleGetItem(func_4027_call(), 0)
call_6805 = relay.TupleGetItem(func_4028_call(), 0)
output = relay.Tuple([bop_6790,bop_6798,call_6804,])
output2 = relay.Tuple([bop_6790,bop_6798,call_6805,])
func_6821 = relay.Function([var_6773,], output)
mod['func_6821'] = func_6821
mod = relay.transform.InferType()(mod)
var_6822 = relay.var("var_6822", dtype = "float64", shape = (8, 1, 10))#candidate|6822|(8, 1, 10)|var|float64
output = func_6821(var_6822)
func_6823 = relay.Function([var_6822], output)
mutated_mod['func_6823'] = func_6823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2844_call = mod.get_global_var('func_2844')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_6832 = relay.TupleGetItem(func_2844_call(), 2)
call_6833 = relay.TupleGetItem(func_2846_call(), 2)
func_6513_call = mod.get_global_var('func_6513')
func_6515_call = mutated_mod.get_global_var('func_6515')
var_6837 = relay.var("var_6837", dtype = "bool", shape = (1274,))#candidate|6837|(1274,)|var|bool
call_6836 = relay.TupleGetItem(func_6513_call(relay.reshape(var_6837.astype('bool'), [1274,])), 2)
call_6838 = relay.TupleGetItem(func_6515_call(relay.reshape(var_6837.astype('bool'), [1274,])), 2)
output = relay.Tuple([call_6832,call_6836,var_6837,])
output2 = relay.Tuple([call_6833,call_6838,var_6837,])
func_6875 = relay.Function([var_6837,], output)
mod['func_6875'] = func_6875
mod = relay.transform.InferType()(mod)
mutated_mod['func_6875'] = func_6875
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6876 = relay.var("var_6876", dtype = "bool", shape = (1274,))#candidate|6876|(1274,)|var|bool
func_6875_call = mutated_mod.get_global_var('func_6875')
call_6877 = func_6875_call(var_6876)
output = call_6877
func_6878 = relay.Function([var_6876], output)
mutated_mod['func_6878'] = func_6878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6880 = relay.var("var_6880", dtype = "float64", shape = (6, 2, 13))#candidate|6880|(6, 2, 13)|var|float64
uop_6881 = relay.sinh(var_6880.astype('float64')) # shape=(6, 2, 13)
output = relay.Tuple([uop_6881,])
output2 = relay.Tuple([uop_6881,])
func_6913 = relay.Function([var_6880,], output)
mod['func_6913'] = func_6913
mod = relay.transform.InferType()(mod)
mutated_mod['func_6913'] = func_6913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6914 = relay.var("var_6914", dtype = "float64", shape = (6, 2, 13))#candidate|6914|(6, 2, 13)|var|float64
func_6913_call = mutated_mod.get_global_var('func_6913')
call_6915 = func_6913_call(var_6914)
output = call_6915
func_6916 = relay.Function([var_6914], output)
mutated_mod['func_6916'] = func_6916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_6921 = relay.TupleGetItem(func_3583_call(), 0)
call_6922 = relay.TupleGetItem(func_3584_call(), 0)
output = relay.Tuple([call_6921,])
output2 = relay.Tuple([call_6922,])
func_6929 = relay.Function([], output)
mod['func_6929'] = func_6929
mod = relay.transform.InferType()(mod)
output = func_6929()
func_6930 = relay.Function([], output)
mutated_mod['func_6930'] = func_6930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5312_call = mod.get_global_var('func_5312')
func_5313_call = mutated_mod.get_global_var('func_5313')
call_6958 = relay.TupleGetItem(func_5312_call(), 2)
call_6959 = relay.TupleGetItem(func_5313_call(), 2)
func_6270_call = mod.get_global_var('func_6270')
func_6272_call = mutated_mod.get_global_var('func_6272')
call_6966 = func_6270_call()
call_6967 = func_6270_call()
func_27_call = mod.get_global_var('func_27')
func_29_call = mutated_mod.get_global_var('func_29')
const_6976 = relay.const([8,-7,5,-3,-5,-8,-10,10,5,-5,-8,-8,6,-8,-7,-10,-7,2,-2,-10,3,-5,4,-6,-5,-8,4,5,10,-9,-6,-2,6,2,10,-5,2,7,5,7,-4,5,10,10,-5,7,-7,-4,-4,1,10,8,-5,-10,-8,-4,-1,-2,9,1,10,5,6,10,-8,5,-8,2,5,8,8,-10,9,9,6,1,-5,-5,8,2,-10,-5,-7,-4,8,8,1,4,1,-7,-1,-5,7,-9,9,2,-6,8,6,8,3,2,5,6,-9,-5,1,9,3,-4,1,2,5,-3,-3,8,6,-1,-6,-8,-10,-7,2,1,-6,-8,3,4,-9,10,7,-7,8,3,3,-10,4,-5,3,-2,3,6,9,3,-7,9,2,7,3,7,3,10,5,6], dtype = "int32")#candidate|6976|(154,)|const|int32
call_6975 = relay.TupleGetItem(func_27_call(relay.reshape(const_6976.astype('int32'), [11, 7, 2])), 0)
call_6977 = relay.TupleGetItem(func_29_call(relay.reshape(const_6976.astype('int32'), [11, 7, 2])), 0)
output = relay.Tuple([call_6958,call_6966,call_6975,const_6976,])
output2 = relay.Tuple([call_6959,call_6967,call_6977,const_6976,])
func_7003 = relay.Function([], output)
mod['func_7003'] = func_7003
mod = relay.transform.InferType()(mod)
mutated_mod['func_7003'] = func_7003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7003_call = mutated_mod.get_global_var('func_7003')
call_7004 = func_7003_call()
output = call_7004
func_7005 = relay.Function([], output)
mutated_mod['func_7005'] = func_7005
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7053 = relay.const(1.567484, dtype = "float32")#candidate|7053|()|const|float32
const_7054 = relay.const([[[3.465019],[8.651105],[-2.416814],[2.398965],[-3.647565],[9.931471],[7.995206],[7.775220],[9.243092]],[[-5.246432],[9.700758],[-6.794718],[0.379426],[9.572755],[3.969317],[0.334492],[-7.254099],[-2.769588]]], dtype = "float32")#candidate|7054|(2, 9, 1)|const|float32
bop_7055 = relay.greater_equal(const_7053.astype('bool'), const_7054.astype('bool')) # shape=(2, 9, 1)
func_5358_call = mod.get_global_var('func_5358')
func_5360_call = mutated_mod.get_global_var('func_5360')
call_7067 = relay.TupleGetItem(func_5358_call(), 1)
call_7068 = relay.TupleGetItem(func_5360_call(), 1)
const_7099 = relay.const([[[3.768096,4.388688,7.890647,5.758381,6.113390,-6.287915,-0.412382,9.882770,-6.910324],[-4.107329,-2.797069,1.803006,-6.789705,-0.066796,9.122483,6.708543,-6.456598,-2.761561],[6.712087,-1.498650,2.185547,-5.641725,-3.116628,-7.557936,-7.590504,-9.927806,8.934403],[0.273167,-4.742279,-7.858374,4.300833,-1.126150,-3.914862,1.510860,7.796934,1.144919]],[[0.418698,-8.680393,9.088266,-2.182974,-8.590776,2.225009,-5.019533,0.380120,-7.378528],[1.778032,-5.785207,4.927364,-4.139006,-8.645599,-7.692026,-7.800312,-6.814703,2.109820],[7.591734,9.215387,8.950299,4.379560,8.705117,-3.936742,0.614535,-1.417502,1.768484],[-2.933966,-3.042885,7.068218,-7.457152,-8.045677,4.107745,5.657575,-9.123565,-6.568404]],[[7.283885,7.516690,-3.157178,-7.703786,6.955320,7.136272,-3.244323,-1.408275,7.746655],[2.560516,9.143683,-1.374443,-4.944473,9.322814,-3.941804,-7.554955,-3.716420,3.870462],[3.730490,-1.928048,-0.612535,6.279619,5.385042,5.941676,-2.858391,0.157245,2.202683],[-5.303586,5.560163,-2.203023,1.416174,7.124638,-6.555544,-3.270790,-1.496099,0.764459]],[[7.457212,4.268049,-1.385177,2.351696,6.509025,7.627492,-8.942357,-1.178758,1.531389],[8.022103,7.547934,-2.322270,1.117834,5.620417,9.511648,-9.980721,-6.215237,-4.788260],[4.164186,8.568572,-1.378715,7.885053,-0.919064,-0.974315,-1.126910,-6.351463,-5.374028],[8.019724,6.067788,4.042131,2.575404,3.972102,1.971975,6.472984,6.379122,0.294285]],[[2.539589,-8.979012,6.858234,9.658164,8.109873,1.320071,9.982674,6.763240,-5.529379],[1.368514,6.421249,4.366789,-2.125774,3.169378,8.024499,9.505086,2.292993,-8.090213],[-4.823454,-6.469730,9.173167,8.073106,-6.281391,3.975620,7.029224,0.473591,-3.231993],[7.626360,8.075072,-2.751818,-1.665730,4.223139,-0.013589,-3.399974,8.885883,-8.324479]],[[-7.184319,3.105262,-2.711737,6.307557,-9.999375,-7.234823,0.416286,1.524991,-8.838750],[4.748205,-2.612598,-8.812782,-5.897507,4.680485,3.866659,-0.012990,-2.246895,9.900055],[4.022313,-2.404691,4.665052,-4.308250,9.647067,8.982423,2.505028,-7.900187,6.182050],[-9.335206,0.046543,8.467266,5.511979,-2.676464,-9.332540,9.181915,3.794616,6.872715]],[[-8.368295,9.419295,0.060142,-0.542779,-9.289033,-9.033200,8.101564,2.514147,2.739787],[-3.746625,0.120757,-9.568777,-4.260628,7.233539,6.409561,-1.545969,-1.159815,7.696488],[-4.146095,-8.136348,-2.500167,-4.116610,-4.356192,-2.870214,-6.481081,-0.001835,-8.523899],[2.250424,-5.336354,-1.796193,1.477276,-0.929803,-7.770448,-5.289208,9.192071,9.433014]],[[0.408306,9.966382,-6.902476,7.170602,-8.021388,-4.589001,-0.580495,9.065759,-1.457315],[5.838299,-1.043655,5.853313,9.396902,8.745487,-9.308167,8.338662,-8.188610,8.284216],[-0.176992,-3.074822,1.429412,9.134308,-2.598215,-8.734678,-3.229968,5.334751,2.212886],[-4.333494,-9.858961,9.479882,-0.458445,-3.484529,-8.267174,1.767636,6.933593,5.721771]],[[-7.105385,-1.601727,-3.820238,6.066114,-1.033221,5.655596,9.128295,2.961104,-8.529985],[0.361098,6.725989,7.715704,6.750725,-7.374269,-6.123271,3.329504,0.704177,-4.317997],[3.858769,-0.883760,-3.375174,1.213292,1.904452,8.465155,-4.676680,1.792070,-4.837711],[1.147862,9.548806,-9.789355,2.294840,0.273751,-7.037799,-7.876422,4.885193,4.436386]]], dtype = "float64")#candidate|7099|(9, 4, 9)|const|float64
bop_7100 = relay.logical_and(call_7067.astype('bool'), relay.reshape(const_7099.astype('bool'), relay.shape_of(call_7067))) # shape=(9, 4, 9)
bop_7103 = relay.logical_and(call_7068.astype('bool'), relay.reshape(const_7099.astype('bool'), relay.shape_of(call_7068))) # shape=(9, 4, 9)
func_4637_call = mod.get_global_var('func_4637')
func_4640_call = mutated_mod.get_global_var('func_4640')
const_7107 = relay.const([-6,5,2,9,-1,-4,-2,9,-7,7,3,6,-7,5,-5,-3,7,6,-7,-9,-9,1,8,-1,2,-4,4,-1,4,-8,-4,9,8,3,2,6,-6,5,6,1,-5,-4,-7,-4,3,-2,-3,-10,-10,-6,4,-6,-8,6,-6,-3,6,-4,6,-7,-1,6,2,3], dtype = "int32")#candidate|7107|(64,)|const|int32
const_7108 = relay.const([[-0.682640,1.578326,1.203139,1.352561,-0.630432,-0.351042,7.308474,6.573680,0.156183,-6.993285,4.145399,0.838137,8.905792,0.708821,-7.468836,-3.934004,3.730277,-1.739434,2.093413,-5.778042,-5.409131,-8.759543,4.092095,3.027941,1.781059,-9.812616,3.675787,-4.861482,-5.540757,-7.276719,7.326534,3.235298,-0.652734,-2.203045,-4.985927,-2.627457,7.217721,-4.996655,-7.151509,-9.018128],[5.651855,-8.751714,-8.699906,-5.727647,3.680578,4.620671,5.431892,0.682471,-2.942774,2.952433,-2.117615,5.558527,0.893265,9.113554,3.231009,7.328590,-7.064211,6.669870,-0.331792,4.297199,4.788455,7.729677,7.545212,-1.848599,-4.104070,-7.902716,8.308084,-9.873313,3.109014,-9.954415,8.384538,-5.755732,-8.584380,-6.709551,2.709541,-4.510544,-5.185696,5.160455,-1.179738,4.469041],[-1.626101,9.310257,-9.851417,-9.509018,6.309437,-7.874696,-4.944109,-8.052692,4.395057,-4.770481,-2.195391,7.964297,-4.438878,2.508798,-7.255039,5.043551,-1.796586,8.609131,-4.717681,1.642534,-8.787965,3.918014,-7.465676,5.366033,-7.067606,-5.413523,-9.922996,-6.814106,-6.697727,4.880171,-2.897638,2.477889,-7.698306,9.171917,-0.260248,-1.581987,4.884579,-3.470013,-6.020993,1.932625],[5.237317,2.274400,0.997044,-9.544921,4.402692,-5.747971,-6.839213,5.555812,-6.125019,5.760248,4.297159,-9.253852,7.598298,-7.776483,-6.760688,9.056845,6.298778,-3.335630,-2.045001,-6.306735,-4.560361,0.911610,2.440279,6.785388,-0.844880,-6.874811,1.007898,-2.497503,7.782510,-5.612466,-2.905369,3.565053,-5.420972,-1.299441,-8.801499,9.211665,0.425921,4.616793,7.293848,6.458608],[-6.544016,6.118576,-1.750046,-0.783591,-1.673596,2.237949,-9.951613,-3.772937,-8.782613,1.526883,0.692614,-8.937930,-8.593102,3.010744,-0.364014,9.189893,9.228062,-5.742300,-5.328303,8.935183,9.195009,0.241345,-9.086074,2.775271,-9.389405,0.991979,0.300285,-2.182555,-1.654599,4.124022,-4.627706,8.921062,5.336459,0.318021,-9.933994,-7.025501,-4.035625,-1.334446,5.632932,1.227289],[-6.730515,3.006485,-9.063087,4.201503,-6.279243,-6.730645,4.448491,-0.056158,6.239494,-7.251377,-0.367958,-7.998751,-7.843673,6.907387,-5.267512,2.303045,-2.676438,-2.168695,6.063146,4.465446,-7.635306,-1.881031,2.782749,-6.197362,0.052744,-3.377157,8.836492,-4.752820,5.955374,5.465503,-1.627509,6.234632,8.450705,-8.327520,9.810639,-6.733569,8.137896,-1.559214,0.033119,4.778553],[3.618261,1.378296,-2.048445,7.117788,9.724247,3.005049,8.390615,-2.076399,-9.509959,3.734854,-5.198935,7.949750,6.612001,-7.760578,-0.759832,1.139626,-2.484127,-6.574497,-6.814399,-8.938030,-0.264183,2.880436,-7.658219,2.748094,-2.992237,0.689578,-8.143440,-3.946533,-7.664447,3.684226,6.728945,-3.681520,9.211713,-5.815950,-4.115498,0.196593,1.649449,7.569885,0.282294,-3.022272],[6.940923,-1.121823,5.995046,2.307986,-8.592509,-1.453053,6.216682,5.106074,-7.254910,-6.544657,-0.796859,5.981180,5.991084,-3.715061,5.851563,-7.876665,-3.695076,3.807893,-8.888822,0.180071,9.102317,-2.592087,-4.750193,5.102423,1.797265,-3.392530,3.771765,2.167681,-2.001220,5.743143,3.118035,-3.865449,3.236960,7.948049,6.554638,-9.922066,-3.314328,1.673445,-6.302296,4.229618]], dtype = "float64")#candidate|7108|(8, 40)|const|float64
call_7106 = relay.TupleGetItem(func_4637_call(relay.reshape(const_7107.astype('int32'), [8, 8, 1]), relay.reshape(const_7108.astype('float64'), [8, 8, 5]), ), 1)
call_7109 = relay.TupleGetItem(func_4640_call(relay.reshape(const_7107.astype('int32'), [8, 8, 1]), relay.reshape(const_7108.astype('float64'), [8, 8, 5]), ), 1)
output = relay.Tuple([bop_7055,bop_7100,call_7106,const_7107,const_7108,])
output2 = relay.Tuple([bop_7055,bop_7103,call_7109,const_7107,const_7108,])
func_7110 = relay.Function([], output)
mod['func_7110'] = func_7110
mod = relay.transform.InferType()(mod)
mutated_mod['func_7110'] = func_7110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7110_call = mutated_mod.get_global_var('func_7110')
call_7111 = func_7110_call()
output = call_7111
func_7112 = relay.Function([], output)
mutated_mod['func_7112'] = func_7112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6648_call = mod.get_global_var('func_6648')
func_6650_call = mutated_mod.get_global_var('func_6650')
call_7113 = relay.TupleGetItem(func_6648_call(), 0)
call_7114 = relay.TupleGetItem(func_6650_call(), 0)
func_4932_call = mod.get_global_var('func_4932')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_7120 = relay.TupleGetItem(func_4932_call(), 0)
call_7121 = relay.TupleGetItem(func_4933_call(), 0)
uop_7124 = relay.rsqrt(call_7120.astype('float32')) # shape=(9, 4, 9)
uop_7126 = relay.rsqrt(call_7121.astype('float32')) # shape=(9, 4, 9)
func_5703_call = mod.get_global_var('func_5703')
func_5706_call = mutated_mod.get_global_var('func_5706')
var_7129 = relay.var("var_7129", dtype = "float32", shape = (1920,))#candidate|7129|(1920,)|var|float32
call_7128 = relay.TupleGetItem(func_5703_call(relay.reshape(var_7129.astype('float32'), [16, 12, 10])), 1)
call_7130 = relay.TupleGetItem(func_5706_call(relay.reshape(var_7129.astype('float32'), [16, 12, 10])), 1)
uop_7135 = relay.erf(uop_7124.astype('float64')) # shape=(9, 4, 9)
uop_7137 = relay.erf(uop_7126.astype('float64')) # shape=(9, 4, 9)
output = relay.Tuple([call_7113,call_7128,var_7129,uop_7135,])
output2 = relay.Tuple([call_7114,call_7130,var_7129,uop_7137,])
func_7140 = relay.Function([var_7129,], output)
mod['func_7140'] = func_7140
mod = relay.transform.InferType()(mod)
var_7141 = relay.var("var_7141", dtype = "float32", shape = (1920,))#candidate|7141|(1920,)|var|float32
output = func_7140(var_7141)
func_7142 = relay.Function([var_7141], output)
mutated_mod['func_7142'] = func_7142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_7213 = func_3611_call()
call_7214 = func_3611_call()
output = call_7213
output2 = call_7214
func_7219 = relay.Function([], output)
mod['func_7219'] = func_7219
mod = relay.transform.InferType()(mod)
mutated_mod['func_7219'] = func_7219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7219_call = mutated_mod.get_global_var('func_7219')
call_7220 = func_7219_call()
output = call_7220
func_7221 = relay.Function([], output)
mutated_mod['func_7221'] = func_7221
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7234 = relay.const([[[-6,-4,-8,-9,2,7,-10],[3,3,-10,-10,-8,2,1],[7,5,-5,-10,-1,-8,-3]],[[-2,3,4,-9,-2,-5,3],[-10,1,6,-3,-6,-8,9],[9,-10,-7,-8,10,-7,-8]],[[5,-2,-8,6,-10,5,-1],[-2,-8,4,-3,10,4,-9],[-2,-5,-10,6,9,-2,-1]],[[4,1,-2,-8,6,7,-5],[5,4,-2,-6,8,-2,4],[-8,2,-4,-8,9,-3,1]],[[10,5,-1,7,-9,-8,7],[-4,4,3,-3,-9,5,9],[5,-2,-4,-4,-5,10,4]],[[-9,-8,9,4,-9,2,8],[-8,-7,-4,7,3,5,-10],[10,-3,-4,-3,-4,-6,-1]],[[-1,-8,-3,1,4,-9,1],[5,-9,7,7,2,4,-4],[-10,-9,-2,-9,1,-4,8]],[[-2,-7,10,5,7,-9,-9],[-8,-3,7,-9,-8,6,8],[4,5,-7,-4,-10,6,-8]],[[-10,-8,-9,-5,3,-5,-2],[-10,-5,8,-2,-4,-2,5],[2,3,-2,8,-9,10,-7]],[[-3,-8,-9,9,2,-10,8],[-1,-10,-10,-6,-3,6,9],[4,-10,5,9,-2,-3,2]],[[3,7,-4,-8,1,7,-6],[8,6,1,8,-6,4,-7],[-2,-10,8,-8,6,9,8]]], dtype = "uint8")#candidate|7234|(11, 3, 7)|const|uint8
var_7235 = relay.var("var_7235", dtype = "uint8", shape = (11, 3, 7))#candidate|7235|(11, 3, 7)|var|uint8
bop_7236 = relay.greater(const_7234.astype('bool'), relay.reshape(var_7235.astype('bool'), relay.shape_of(const_7234))) # shape=(11, 3, 7)
const_7247 = relay.const([[[-8,-3,-2,-3,4,2,8],[-2,7,5,-6,8,-8,10],[6,3,2,-10,-9,-3,-3]],[[-2,2,10,-3,7,-1,-3],[-8,10,6,7,7,4,-2],[-10,2,6,5,-5,4,-6]],[[-7,-1,-1,-8,-4,6,-2],[-9,9,-9,-9,-5,4,3],[-2,-2,-9,5,-6,8,7]],[[1,-4,4,-2,-4,-2,5],[1,-4,8,-3,1,-6,10],[-6,8,6,10,7,5,-2]],[[2,-2,7,7,4,-4,-7],[-1,-4,6,4,4,-4,-7],[2,-7,-9,7,-7,-3,4]],[[7,8,10,6,-4,8,8],[10,-2,-3,9,9,9,-8],[-8,-10,4,6,-9,-10,5]],[[-4,-3,-6,-9,5,2,1],[2,4,4,7,-1,3,-5],[5,-2,-3,-3,9,10,7]],[[-10,3,-2,1,2,-5,1],[3,9,-8,-6,6,-1,-1],[-1,-3,1,-10,-7,-8,-1]],[[10,-10,-9,-4,2,7,-9],[-4,-9,1,5,-10,-6,8],[-5,-6,2,-1,-7,-8,-3]],[[6,1,-4,-5,4,8,5],[-2,7,-1,-2,1,3,-6],[-6,6,-5,-1,9,6,6]],[[-9,10,-3,7,-2,-8,-4],[-2,2,1,1,6,5,-10],[9,8,6,-7,5,-4,5]]], dtype = "uint8")#candidate|7247|(11, 3, 7)|const|uint8
bop_7248 = relay.divide(const_7234.astype('float32'), relay.reshape(const_7247.astype('float32'), relay.shape_of(const_7234))) # shape=(11, 3, 7)
uop_7252 = relay.erf(const_7234.astype('float32')) # shape=(11, 3, 7)
func_5129_call = mod.get_global_var('func_5129')
func_5132_call = mutated_mod.get_global_var('func_5132')
const_7256 = relay.const(3, dtype = "int32")#candidate|7256|()|const|int32
var_7257 = relay.var("var_7257", dtype = "int32", shape = (448,))#candidate|7257|(448,)|var|int32
call_7255 = relay.TupleGetItem(func_5129_call(relay.reshape(const_7256.astype('int32'), []), relay.reshape(var_7257.astype('int32'), [4, 14, 8]), ), 2)
call_7258 = relay.TupleGetItem(func_5132_call(relay.reshape(const_7256.astype('int32'), []), relay.reshape(var_7257.astype('int32'), [4, 14, 8]), ), 2)
output = relay.Tuple([bop_7236,bop_7248,uop_7252,call_7255,const_7256,var_7257,])
output2 = relay.Tuple([bop_7236,bop_7248,uop_7252,call_7258,const_7256,var_7257,])
func_7266 = relay.Function([var_7235,var_7257,], output)
mod['func_7266'] = func_7266
mod = relay.transform.InferType()(mod)
mutated_mod['func_7266'] = func_7266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7266_call = mutated_mod.get_global_var('func_7266')
var_7268 = relay.var("var_7268", dtype = "uint8", shape = (11, 3, 7))#candidate|7268|(11, 3, 7)|var|uint8
var_7269 = relay.var("var_7269", dtype = "int32", shape = (448,))#candidate|7269|(448,)|var|int32
call_7267 = func_7266_call(var_7268,var_7269,)
output = call_7267
func_7270 = relay.Function([var_7268,var_7269,], output)
mutated_mod['func_7270'] = func_7270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mod.get_global_var('func_4018')
func_4019_call = mutated_mod.get_global_var('func_4019')
call_7305 = relay.TupleGetItem(func_4018_call(), 2)
call_7306 = relay.TupleGetItem(func_4019_call(), 2)
func_4397_call = mod.get_global_var('func_4397')
func_4403_call = mutated_mod.get_global_var('func_4403')
var_7309 = relay.var("var_7309", dtype = "int32", shape = (2, 336))#candidate|7309|(2, 336)|var|int32
var_7310 = relay.var("var_7310", dtype = "uint64", shape = ())#candidate|7310|()|var|uint64
var_7311 = relay.var("var_7311", dtype = "uint64", shape = (1, 546))#candidate|7311|(1, 546)|var|uint64
call_7308 = relay.TupleGetItem(func_4397_call(relay.reshape(call_7305.astype('int16'), [1386,]), relay.reshape(var_7309.astype('int32'), [672,]), relay.reshape(var_7310.astype('uint64'), []), relay.reshape(var_7311.astype('uint64'), [7, 78]), ), 4)
call_7312 = relay.TupleGetItem(func_4403_call(relay.reshape(call_7305.astype('int16'), [1386,]), relay.reshape(var_7309.astype('int32'), [672,]), relay.reshape(var_7310.astype('uint64'), []), relay.reshape(var_7311.astype('uint64'), [7, 78]), ), 4)
output = relay.Tuple([call_7305,call_7308,var_7309,var_7310,var_7311,])
output2 = relay.Tuple([call_7306,call_7312,var_7309,var_7310,var_7311,])
func_7332 = relay.Function([var_7309,var_7310,var_7311,], output)
mod['func_7332'] = func_7332
mod = relay.transform.InferType()(mod)
var_7333 = relay.var("var_7333", dtype = "int32", shape = (2, 336))#candidate|7333|(2, 336)|var|int32
var_7334 = relay.var("var_7334", dtype = "uint64", shape = ())#candidate|7334|()|var|uint64
var_7335 = relay.var("var_7335", dtype = "uint64", shape = (1, 546))#candidate|7335|(1, 546)|var|uint64
output = func_7332(var_7333,var_7334,var_7335,)
func_7336 = relay.Function([var_7333,var_7334,var_7335,], output)
mutated_mod['func_7336'] = func_7336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4534_call = mod.get_global_var('func_4534')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_7347 = relay.TupleGetItem(func_4534_call(), 0)
call_7348 = relay.TupleGetItem(func_4536_call(), 0)
output = relay.Tuple([call_7347,])
output2 = relay.Tuple([call_7348,])
func_7358 = relay.Function([], output)
mod['func_7358'] = func_7358
mod = relay.transform.InferType()(mod)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mutated_mod.get_global_var('func_7358')
call_7359 = func_7358_call()
output = call_7359
func_7360 = relay.Function([], output)
mutated_mod['func_7360'] = func_7360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4534_call = mod.get_global_var('func_4534')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_7363 = relay.TupleGetItem(func_4534_call(), 0)
call_7364 = relay.TupleGetItem(func_4536_call(), 0)
output = relay.Tuple([call_7363,])
output2 = relay.Tuple([call_7364,])
func_7380 = relay.Function([], output)
mod['func_7380'] = func_7380
mod = relay.transform.InferType()(mod)
output = func_7380()
func_7381 = relay.Function([], output)
mutated_mod['func_7381'] = func_7381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6929_call = mod.get_global_var('func_6929')
func_6930_call = mutated_mod.get_global_var('func_6930')
call_7413 = relay.TupleGetItem(func_6929_call(), 0)
call_7414 = relay.TupleGetItem(func_6930_call(), 0)
func_5573_call = mod.get_global_var('func_5573')
func_5576_call = mutated_mod.get_global_var('func_5576')
var_7425 = relay.var("var_7425", dtype = "uint32", shape = (1440,))#candidate|7425|(1440,)|var|uint32
var_7426 = relay.var("var_7426", dtype = "float64", shape = (2160,))#candidate|7426|(2160,)|var|float64
call_7424 = relay.TupleGetItem(func_5573_call(relay.reshape(var_7425.astype('uint32'), [1440,]), relay.reshape(var_7426.astype('float64'), [2160,]), ), 7)
call_7427 = relay.TupleGetItem(func_5576_call(relay.reshape(var_7425.astype('uint32'), [1440,]), relay.reshape(var_7426.astype('float64'), [2160,]), ), 7)
func_2148_call = mod.get_global_var('func_2148')
func_2152_call = mutated_mod.get_global_var('func_2152')
var_7439 = relay.var("var_7439", dtype = "float32", shape = (1584,))#candidate|7439|(1584,)|var|float32
var_7440 = relay.var("var_7440", dtype = "float32", shape = (6, 2))#candidate|7440|(6, 2)|var|float32
call_7438 = relay.TupleGetItem(func_2148_call(relay.reshape(var_7439.astype('float32'), [9, 11, 16]), relay.reshape(var_7439.astype('float32'), [9, 11, 16]), relay.reshape(var_7440.astype('float32'), [12,]), ), 2)
call_7441 = relay.TupleGetItem(func_2152_call(relay.reshape(var_7439.astype('float32'), [9, 11, 16]), relay.reshape(var_7439.astype('float32'), [9, 11, 16]), relay.reshape(var_7440.astype('float32'), [12,]), ), 2)
output = relay.Tuple([call_7413,call_7424,var_7425,var_7426,call_7438,var_7439,var_7440,])
output2 = relay.Tuple([call_7414,call_7427,var_7425,var_7426,call_7441,var_7439,var_7440,])
func_7457 = relay.Function([var_7425,var_7426,var_7439,var_7440,], output)
mod['func_7457'] = func_7457
mod = relay.transform.InferType()(mod)
var_7458 = relay.var("var_7458", dtype = "uint32", shape = (1440,))#candidate|7458|(1440,)|var|uint32
var_7459 = relay.var("var_7459", dtype = "float64", shape = (2160,))#candidate|7459|(2160,)|var|float64
var_7460 = relay.var("var_7460", dtype = "float32", shape = (1584,))#candidate|7460|(1584,)|var|float32
var_7461 = relay.var("var_7461", dtype = "float32", shape = (6, 2))#candidate|7461|(6, 2)|var|float32
output = func_7457(var_7458,var_7459,var_7460,var_7461,)
func_7462 = relay.Function([var_7458,var_7459,var_7460,var_7461,], output)
mutated_mod['func_7462'] = func_7462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_7487 = relay.TupleGetItem(func_7358_call(), 0)
call_7488 = relay.TupleGetItem(func_7360_call(), 0)
output = relay.Tuple([call_7487,])
output2 = relay.Tuple([call_7488,])
func_7494 = relay.Function([], output)
mod['func_7494'] = func_7494
mod = relay.transform.InferType()(mod)
mutated_mod['func_7494'] = func_7494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7494_call = mutated_mod.get_global_var('func_7494')
call_7495 = func_7494_call()
output = call_7495
func_7496 = relay.Function([], output)
mutated_mod['func_7496'] = func_7496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5312_call = mod.get_global_var('func_5312')
func_5313_call = mutated_mod.get_global_var('func_5313')
call_7516 = relay.TupleGetItem(func_5312_call(), 2)
call_7517 = relay.TupleGetItem(func_5313_call(), 2)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_7530 = func_3548_call()
call_7531 = func_3548_call()
func_3904_call = mod.get_global_var('func_3904')
func_3909_call = mutated_mod.get_global_var('func_3909')
const_7534 = relay.const([-8.881356,-9.937050,5.388476,-3.997810,3.040456,-9.505925,8.653878,-4.357296,-3.104958,-2.888802,0.934825,-7.285372], dtype = "float32")#candidate|7534|(12,)|const|float32
const_7535 = relay.const([-10,7,-5,8,-5,-10,10,-7,-1,-3,3,3,-4,-5,4,5,8,7,-5,9,8,4,-1,-2,-5,-7,8,10,-1,-6,-8,-10,-5,8,-3,-1,-6,10,6,-2,-8,9,10,-9,6,-5,-8,-1,-5,-2,-7,9], dtype = "uint16")#candidate|7535|(52,)|const|uint16
var_7536 = relay.var("var_7536", dtype = "float32", shape = (132,))#candidate|7536|(132,)|var|float32
call_7533 = relay.TupleGetItem(func_3904_call(relay.reshape(const_7534.astype('float32'), [12,]), relay.reshape(const_7535.astype('uint16'), [52, 1]), relay.reshape(var_7536.astype('float32'), [132,]), ), 0)
call_7537 = relay.TupleGetItem(func_3909_call(relay.reshape(const_7534.astype('float32'), [12,]), relay.reshape(const_7535.astype('uint16'), [52, 1]), relay.reshape(var_7536.astype('float32'), [132,]), ), 0)
func_6913_call = mod.get_global_var('func_6913')
func_6916_call = mutated_mod.get_global_var('func_6916')
var_7544 = relay.var("var_7544", dtype = "float64", shape = (1, 156))#candidate|7544|(1, 156)|var|float64
call_7543 = relay.TupleGetItem(func_6913_call(relay.reshape(var_7544.astype('float64'), [6, 2, 13])), 0)
call_7545 = relay.TupleGetItem(func_6916_call(relay.reshape(var_7544.astype('float64'), [6, 2, 13])), 0)
output = relay.Tuple([call_7516,call_7530,call_7533,const_7534,const_7535,var_7536,call_7543,var_7544,])
output2 = relay.Tuple([call_7517,call_7531,call_7537,const_7534,const_7535,var_7536,call_7545,var_7544,])
func_7557 = relay.Function([var_7536,var_7544,], output)
mod['func_7557'] = func_7557
mod = relay.transform.InferType()(mod)
var_7558 = relay.var("var_7558", dtype = "float32", shape = (132,))#candidate|7558|(132,)|var|float32
var_7559 = relay.var("var_7559", dtype = "float64", shape = (1, 156))#candidate|7559|(1, 156)|var|float64
output = func_7557(var_7558,var_7559,)
func_7560 = relay.Function([var_7558,var_7559,], output)
mutated_mod['func_7560'] = func_7560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7380_call = mod.get_global_var('func_7380')
func_7381_call = mutated_mod.get_global_var('func_7381')
call_7567 = relay.TupleGetItem(func_7380_call(), 0)
call_7568 = relay.TupleGetItem(func_7381_call(), 0)
output = call_7567
output2 = call_7568
func_7583 = relay.Function([], output)
mod['func_7583'] = func_7583
mod = relay.transform.InferType()(mod)
mutated_mod['func_7583'] = func_7583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7583_call = mutated_mod.get_global_var('func_7583')
call_7584 = func_7583_call()
output = call_7584
func_7585 = relay.Function([], output)
mutated_mod['func_7585'] = func_7585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6187_call = mod.get_global_var('func_6187')
func_6188_call = mutated_mod.get_global_var('func_6188')
call_7698 = relay.TupleGetItem(func_6187_call(), 1)
call_7699 = relay.TupleGetItem(func_6188_call(), 1)
output = relay.Tuple([call_7698,])
output2 = relay.Tuple([call_7699,])
func_7700 = relay.Function([], output)
mod['func_7700'] = func_7700
mod = relay.transform.InferType()(mod)
output = func_7700()
func_7701 = relay.Function([], output)
mutated_mod['func_7701'] = func_7701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7219_call = mod.get_global_var('func_7219')
func_7221_call = mutated_mod.get_global_var('func_7221')
call_7702 = func_7219_call()
call_7703 = func_7219_call()
output = relay.Tuple([call_7702,])
output2 = relay.Tuple([call_7703,])
func_7725 = relay.Function([], output)
mod['func_7725'] = func_7725
mod = relay.transform.InferType()(mod)
output = func_7725()
func_7726 = relay.Function([], output)
mutated_mod['func_7726'] = func_7726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7745 = relay.var("var_7745", dtype = "uint16", shape = (1, 10, 11))#candidate|7745|(1, 10, 11)|var|uint16
var_7746 = relay.var("var_7746", dtype = "uint16", shape = (8, 10, 11))#candidate|7746|(8, 10, 11)|var|uint16
bop_7747 = relay.add(var_7745.astype('uint16'), var_7746.astype('uint16')) # shape=(8, 10, 11)
const_7756 = relay.const([[[-10,-3,-7,-3,-4,-4,5,3,9,-5,3],[-4,-4,8,4,7,7,6,-4,10,1,1],[9,-1,-9,5,-10,10,3,-1,10,-8,1],[-8,4,-2,-1,2,8,10,-2,9,3,-9],[7,-3,1,3,-7,6,8,-10,-3,-3,-6],[10,8,-3,1,9,-1,5,6,-3,-9,-6],[-8,-8,-9,-6,3,-6,-7,4,-8,-6,-7],[-2,-10,-6,3,-6,10,-4,8,-3,-7,-4],[7,-2,2,5,-10,-2,9,9,-2,5,-2],[9,10,-1,-3,1,4,7,3,5,9,6]],[[-5,-2,-10,9,7,-2,-3,3,-7,-8,-10],[-6,6,-10,9,7,-9,-3,7,2,1,10],[-6,-10,5,-3,2,10,1,5,6,-5,2],[-5,-9,4,1,-4,4,2,-1,-6,4,-2],[-8,4,10,8,-7,-2,9,8,7,1,-5],[1,-7,8,-5,-4,-7,6,8,-1,6,-3],[9,-9,3,-8,-2,-4,-7,10,-3,4,3],[-7,-5,-9,-2,-8,-6,-7,-8,9,5,-10],[-8,-4,-5,10,10,2,-6,6,3,-8,4],[8,-10,3,2,8,4,-10,-4,-10,10,10]],[[2,5,-4,4,10,-10,-1,-8,8,3,-9],[2,3,-8,5,10,-5,-1,-10,9,-9,10],[1,2,-5,-1,8,-8,7,-4,5,10,-1],[-1,5,8,-8,-3,8,8,8,8,5,7],[-3,6,6,-7,6,7,7,-7,-6,4,6],[7,-3,2,-2,-4,1,-2,4,6,-7,-3],[-10,1,-1,-10,-9,2,6,4,2,-3,-7],[-2,2,3,10,-8,-6,-6,6,-5,7,-8],[1,8,-9,-8,6,9,9,1,-8,10,8],[5,4,-6,9,-1,-8,-6,4,3,-6,-7]],[[-6,4,7,-10,-2,6,6,6,-8,6,9],[-2,7,-2,10,8,8,-10,8,8,6,7],[-8,7,-3,1,-4,7,-10,4,8,8,6],[1,-1,-5,6,10,8,-9,8,-4,-5,-4],[2,7,-10,6,-2,-9,9,-9,-9,-9,6],[-9,-10,-7,-6,9,6,7,-10,1,3,6],[-5,7,6,10,-3,-6,-2,7,-3,5,4],[-5,-5,8,-6,10,-3,-5,4,-1,-4,2],[-10,-3,5,4,2,-6,6,4,10,5,-2],[4,-4,5,-2,4,-5,-6,-9,-2,2,7]]], dtype = "uint16")#candidate|7756|(4, 10, 11)|const|uint16
bop_7757 = relay.not_equal(var_7745.astype('bool'), const_7756.astype('bool')) # shape=(4, 10, 11)
output = relay.Tuple([bop_7747,bop_7757,])
output2 = relay.Tuple([bop_7747,bop_7757,])
func_7762 = relay.Function([var_7745,var_7746,], output)
mod['func_7762'] = func_7762
mod = relay.transform.InferType()(mod)
mutated_mod['func_7762'] = func_7762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7762_call = mutated_mod.get_global_var('func_7762')
var_7764 = relay.var("var_7764", dtype = "uint16", shape = (1, 10, 11))#candidate|7764|(1, 10, 11)|var|uint16
var_7765 = relay.var("var_7765", dtype = "uint16", shape = (8, 10, 11))#candidate|7765|(8, 10, 11)|var|uint16
call_7763 = func_7762_call(var_7764,var_7765,)
output = call_7763
func_7766 = relay.Function([var_7764,var_7765,], output)
mutated_mod['func_7766'] = func_7766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7787 = relay.var("var_7787", dtype = "float64", shape = (15, 16, 7))#candidate|7787|(15, 16, 7)|var|float64
uop_7788 = relay.asin(var_7787.astype('float64')) # shape=(15, 16, 7)
output = relay.Tuple([uop_7788,])
output2 = relay.Tuple([uop_7788,])
F = relay.Function([var_7787,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7787,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

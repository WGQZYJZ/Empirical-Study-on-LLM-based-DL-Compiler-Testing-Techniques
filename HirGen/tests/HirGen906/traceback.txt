==========mod==========
#[version = "0.0.5"]
def @func_2170(%var_2138: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) {
  %0 = cast(%var_2138, dtype="float32") /* ty=float32 */;
  %1 = reshape(%0, newshape=[]) /* ty=float32 */;
  %2 = @func_1046(%1) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %3 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %4 = cast(%var_2138, dtype="float32") /* ty=float32 */;
  %5 = reshape(%4, newshape=[]) /* ty=float32 */;
  %6 = @func_325(%5) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %7 = %3.1;
  %8 = cast(%7, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %10 = reshape(%8, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %11 = reshape(%9, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %12 = @func_1935(%10, %11) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %13 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %14 = %2.1;
  %15 = %6.0;
  %16 = %12.1;
  %17 = @func_1907() /* ty=float32 */;
  (%13, %14, %var_2138, %7, %15, %16, meta[relay.Constant][0] /* ty=Tensor[(154), float32] */, %17)
}

def @func_13783() -> (float32,) {
  %18 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
  %19 = %18.2;
  (%19,)
}

def @func_17652(%var_17642: Tensor[(12, 13, 8), float32]) -> Tensor[(12, 13, 8), bool] {
  %20 = @func_17151() /* ty=(float32, float32) */;
  %21 = %20.0;
  %22 = cast(%21, dtype="bool") /* ty=bool */;
  %23 = cast(%var_17642, dtype="bool") /* ty=Tensor[(12, 13, 8), bool] */;
  greater_equal(%22, %23) /* ty=Tensor[(12, 13, 8), bool] */
}

def @func_7421() -> (Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) {
  %24 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %26 = reshape(%25, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %27 = @func_2043(%26) /* ty=(float32, Tensor[(154), float64], Tensor[(154), float32], Tensor[(5, 7, 14), int32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %28 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %29 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
  %30 = %24.2;
  %31 = %27.0;
  %32 = %28.0;
  %33 = %29.3;
  (%30, %31, meta[relay.Constant][1] /* ty=Tensor[(154), float32] */, %32, %33)
}

def @func_9200() -> float32 {
  %34 = @func_9055() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %34.0
}

def @func_11831() -> float32 {
  %35 = @func_7574() /* ty=(float32,) */;
  %35.0
}

def @func_7188() -> (Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), float64]) {
  %36 = @func_6617() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %37 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
  %38 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %39 = %36.0;
  %40 = %37.3;
  %41 = %38.1;
  (%39, %40, %41)
}

def @func_8220() -> (Tensor[(5, 7, 14), bool],) {
  %42 = @func_6097() /* ty=Tensor[(5, 7, 14), bool] */;
  (%42,)
}

def @func_12883(%var_12870: Tensor[(792), float64]) -> (float32, Tensor[(8, 11, 9), float64], Tensor[(792), float64], Tensor[(14, 3, 7), float64]) {
  %43 = @func_3487() /* ty=(float32,) */;
  %44 = cast(%var_12870, dtype="float64") /* ty=Tensor[(792), float64] */;
  %45 = reshape(%44, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %46 = @func_11552() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %47 = %43.0;
  %48 = @func_11253(%45) /* ty=Tensor[(8, 11, 9), float64] */;
  %49 = %46.0;
  (%47, %48, %var_12870, %49)
}

def @func_7631() -> (Tensor[(5, 7, 14), bool],) {
  %50 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %51 = %50.0;
  (%51,)
}

def @func_14712(%var_14709: Tensor[(12, 5, 14), float32]) -> Tensor[(12, 5, 14), float32] {
  %52 = cast(%var_14709, dtype="float32") /* ty=Tensor[(12, 5, 14), float32] */;
  tan(%52) /* ty=Tensor[(12, 5, 14), float32] */
}

def @func_9973() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], float32, float32, float32, Tensor[(5, 7, 14), float64]) {
  %53 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %54 = @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
  %55 = %53.0;
  %56 = cast(%55, dtype="float32") /* ty=float32 */;
  %57 = reshape(%56, newshape=[]) /* ty=float32 */;
  %58 = @func_2170(%57) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) */;
  %59 = @func_4421() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %60 = @func_4210() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */;
  %61 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %62 = %54.0;
  %63 = %58.5;
  %64 = @func_1610() /* ty=float32 */;
  %65 = %59.1;
  %66 = %60.3;
  %67 = %61.1;
  (%55, %62, %63, %64, %65, %66, %67)
}

def @func_15857() -> float32 {
  %68 = @func_14108() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) */;
  %68.3
}

def @func_16447() -> (Tensor[(5, 7, 14), bool],) {
  %69 = @func_16262() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %70 = %69.0;
  (%70,)
}

def @func_3959() -> (Tensor[(490), float32],) {
  %71 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %72 = %71.0;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(490), float32] */;
  %74 = atanh(%73) /* ty=Tensor[(490), float32] */;
  (%74,)
}

def @func_8381() -> (Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %75 = @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
  %76 = %75.1;
  %77 = @func_6370() /* ty=Tensor[(5, 7, 14), bool] */;
  %78 = @func_6097() /* ty=Tensor[(5, 7, 14), bool] */;
  (%76, %77, %78)
}

def @func_11358() -> float32 {
  %79 = @func_4877() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) */;
  %79.0
}

def @func_1521() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) {
  %80 = cast(7.90951f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %81 = reshape(%80, newshape=[]) /* ty=float32 */;
  %82 = @func_1046(%81) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %83 = cast(7.90951f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %84 = reshape(%83, newshape=[]) /* ty=float32 */;
  %85 = @func_325(%84) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %86 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %87 = %82.0;
  %88 = %85.0;
  (%86, %87, 7.90951f /* ty=float32 */, %88)
}

def @func_15237() -> (Tensor[(14, 3, 7), bool],) {
  %89 = @func_7817() /* ty=(float32, float32) */;
  %90 = %89.1;
  %91 = @func_4510() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %92 = %91.0;
  %93 = cast(%90, dtype="bool") /* ty=bool */;
  %94 = cast(%92, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %95 = less_equal(%93, %94) /* ty=Tensor[(14, 3, 7), bool] */;
  (%95,)
}

def @func_11398(%var_11385: Tensor[(154), float32]) -> (float32, Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  %96 = @func_7764() /* ty=(float32,) */;
  %97 = cast(%var_11385, dtype="float32") /* ty=Tensor[(154), float32] */;
  %98 = reshape(%97, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %99 = @func_4003(%98) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) */;
  %100 = %96.0;
  %101 = %99.1;
  (%100, %101, %var_11385)
}

def @func_18442() -> Tensor[(5, 7, 14), bool] {
  %102 = @func_16447() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %102.0
}

def @func_15500() -> (float32, float32) {
  %103 = @func_11887() /* ty=(float32,) */;
  %104 = %103.0;
  %105 = @func_14375() /* ty=float32 */;
  (%104, %105)
}

def @func_12952() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %106 = @func_6617() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %107 = @func_4372() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %108 = %106.1;
  %109 = %107.0;
  (%108, %109)
}

def @func_12711() -> (Tensor[(168), float32], Tensor[(14, 3, 7), float64]) {
  %110 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
  %111 = %110.0;
  %112 = @func_7477() /* ty=Tensor[(14, 3, 7), float64] */;
  (%111, %112)
}

def @func_16347(%var_16295: Tensor[(14, 1, 6), float32], %var_16329: Tensor[(14, 16, 6), float32]) -> (float32, Tensor[(14, 16, 6), int8], Tensor[(14, ?, 6), int64]) {
  %113 = @func_15114() /* ty=(float32,) */;
  %114 = cast(%var_16295, dtype="int8") /* ty=Tensor[(14, 1, 6), int8] */;
  %115 = cast(%var_16329, dtype="int8") /* ty=Tensor[(14, 16, 6), int8] */;
  %116 = cast(%var_16295, dtype="float32") /* ty=Tensor[(14, 1, 6), float32] */;
  %117 = rsqrt(%116) /* ty=Tensor[(14, 1, 6), float32] */;
  %118 = cast(%var_16295, dtype="int32") /* ty=Tensor[(14, 1, 6), int32] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="int32") /* ty=Tensor[(14, 1, 6), int32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %122 = bitwise_and(%120, %121) /* ty=Tensor[(14, ?, 6), int32] */;
  %123 = cast(%117, dtype="int64") /* ty=Tensor[(14, 1, 6), int64] */;
  %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%122, dtype="int64") /* ty=Tensor[(14, ?, 6), int64] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %127 = %113.0;
  %128 = add(%114, %115) /* ty=Tensor[(14, 16, 6), int8] */;
  %129 = minimum(%125, %126) /* ty=Tensor[(14, ?, 6), int64] */;
  (%127, %128, %129)
}

def @func_13419() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %130 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %131 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %132 = @func_12340() /* ty=(float32, Tensor[(5, 7, 14), bool], float32) */;
  %133 = %130.0;
  %134 = %131.0;
  %135 = %132.1;
  (%133, %134, %135)
}

def @func_5812() -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) {
  %136 = @func_5015() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %137 = %136.0;
  %138 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %139 = %138.2;
  %140 = cast(%139, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %141 = shape_of(%137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%137, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %144 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %145 = power(%142, %143) /* ty=Tensor[(5, 7, 14), float32] */;
  %146 = %144.0;
  (%145, %146)
}

def @func_14578() -> (float32, Tensor[(5, 7, 14), float32], Tensor[(9, 6, 13), bool], Tensor[(702), int32]) {
  %147 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %148 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
  %149 = %147.0;
  %150 = cast(%149, dtype="int32") /* ty=int32 */;
  %151 = cast(meta[relay.Constant][2] /* ty=Tensor[(702), int32] */, dtype="int32") /* ty=Tensor[(702), int32] */;
  %152 = reshape(%150, newshape=[]) /* ty=int32 */;
  %153 = reshape(%151, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), int32] */;
  %154 = %148.1;
  %155 = @func_12395(%152, %153) /* ty=Tensor[(9, 6, 13), bool] */;
  (%149, %154, %155, meta[relay.Constant][2] /* ty=Tensor[(702), int32] */)
}

def @func_13541(%var_13525: Tensor[(13, 6, 11), float32]) -> (Tensor[(13, 6, 11), float32], Tensor[(490), float32]) {
  %156 = cast(%var_13525, dtype="float32") /* ty=Tensor[(13, 6, 11), float32] */;
  %157 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %158 = sigmoid(%156) /* ty=Tensor[(13, 6, 11), float32] */;
  %159 = %157.0;
  (%158, %159)
}

def @func_7564() -> (float32,) {
  %160 = @func_3305() /* ty=float32 */;
  (%160,)
}

def @func_7020() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(490), float32]) {
  %161 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %162 = @func_4242() /* ty=float32 */;
  %163 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %164 = @func_4323() /* ty=Tensor[(5, 7, 14), bool] */;
  %165 = %161.0;
  (%162, %163, %164, %165)
}

def @func_1525() -> Tensor[(5, 7, 14), bool] {
  @func_1000() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_9143() -> float32 {
  %166 = @func_7897() /* ty=(float32,) */;
  %166.0
}

def @func_17379() -> (Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool]) {
  %167 = @func_8165() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64]) */;
  %168 = %167.4;
  %169 = @func_15083() /* ty=float32 */;
  %170 = @func_6390() /* ty=Tensor[(5, 7, 14), bool] */;
  (%168, %169, %170)
}

def @func_4545() -> (Tensor[(5, 7, 14), bool], float32) {
  %171 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %172 = %171.1;
  %173 = @func_3855() /* ty=float32 */;
  (%172, %173)
}

def @func_6097() -> Tensor[(5, 7, 14), bool] {
  @func_4990() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_16894() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], float32, float32) {
  %174 = @func_10692() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %175 = @func_13517() /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float64], float32) */;
  %176 = %174.2;
  %177 = @func_5648() /* ty=Tensor[(5, 7, 14), float64] */;
  %178 = @func_11831() /* ty=float32 */;
  %179 = %175.0;
  (%176, %177, %178, %179)
}

def @func_13609() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(9, 6, 13), bool], Tensor[(702), int32]) {
  %180 = @func_11676() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(168), float32]) */;
  %181 = @func_1907() /* ty=float32 */;
  %182 = cast(%181, dtype="int32") /* ty=int32 */;
  %183 = cast(meta[relay.Constant][3] /* ty=Tensor[(702), int32] */, dtype="int32") /* ty=Tensor[(702), int32] */;
  %184 = reshape(%182, newshape=[]) /* ty=int32 */;
  %185 = reshape(%183, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), int32] */;
  %186 = %180.0;
  %187 = @func_1686() /* ty=Tensor[(5, 7, 14), bool] */;
  %188 = @func_12395(%184, %185) /* ty=Tensor[(9, 6, 13), bool] */;
  (%186, %187, %181, %188, meta[relay.Constant][3] /* ty=Tensor[(702), int32] */)
}

def @func_2903() -> (Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) {
  %189 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %190 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %191 = %189.1;
  %192 = @func_1907() /* ty=float32 */;
  %193 = @func_1610() /* ty=float32 */;
  %194 = @func_1610() /* ty=float32 */;
  %195 = %190.2;
  (%191, %192, %193, %194, %195)
}

def @func_10144() -> (Tensor[(14, 3, 7), float64],) {
  %196 = @func_7477() /* ty=Tensor[(14, 3, 7), float64] */;
  %197 = cast(%196, dtype="float64") /* ty=Tensor[(14, 3, 7), float64] */;
  %198 = atanh(%197) /* ty=Tensor[(14, 3, 7), float64] */;
  (%198,)
}

def @func_1907() -> float32 {
  @func_1610() /* ty=float32 */
}

def @func_4323() -> Tensor[(5, 7, 14), bool] {
  %199 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %199.0
}

def @func_16734() -> (float32,) {
  %200 = @func_10388() /* ty=(float32,) */;
  %201 = %200.0;
  (%201,)
}

def @func_2663() -> (float32,) {
  %202 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %203 = %202.0;
  (%203,)
}

def @func_1000() -> Tensor[(5, 7, 14), bool] {
  %204 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 7, 14), uint16] */, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %205 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(5, 7, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 7, 14), uint16] */, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%206, %207) /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_325(%var_311: float32) -> (Tensor[(8, 15, 1), float32],) {
  %208 = cast(%var_311, dtype="float32") /* ty=float32 */;
  %209 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 1), float32] */;
  %210 = mod(%208, %209) /* ty=Tensor[(8, 15, 1), float32] */;
  (%210,)
}

def @func_8502() -> Tensor[(154), float32] {
  %211 = @func_4210() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */;
  %211.2
}

def @func_5425(%var_5417: Tensor[(5, 7, 14), bool]) -> Tensor[(5, 7, 14), float32] {
  %212 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %213 = cast(%var_5417, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%212, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%215, %216) /* ty=Tensor[(5, 7, 14), float32] */
}

def @func_9055() -> (float32, Tensor[(5, 7, 14), bool]) {
  %217 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
  %218 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %219 = %217.1;
  %220 = %218.0;
  (%219, %220)
}

def @func_11253(%var_11250: Tensor[(8, 11, 9), float64]) -> Tensor[(8, 11, 9), float64] {
  %221 = cast(%var_11250, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  cos(%221) /* ty=Tensor[(8, 11, 9), float64] */
}

def @func_15083() -> float32 {
  %222 = @func_4877() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) */;
  %222.3
}

def @func_18549() -> (float32, Tensor[(5, 7, 14), bool]) {
  %223 = @func_7564() /* ty=(float32,) */;
  %224 = @func_6243() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */;
  %225 = %223.0;
  %226 = %224.0;
  (%225, %226)
}

def @func_11329(%var_11310: Tensor[(6, 8, 9), float64]) -> Tensor[(6, 8, 9), float64] {
  %227 = cast(%var_11310, dtype="float64") /* ty=Tensor[(6, 8, 9), float64] */;
  atanh(%227) /* ty=Tensor[(6, 8, 9), float64] */
}

def @func_4663() -> float32 {
  %228 = @func_2663() /* ty=(float32,) */;
  %228.0
}

def @func_2288(%var_2213: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(8, 15, 1), float32], Tensor[(480, 6), float64], float32, Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], float32) {
  %229 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %230 = cast(%229, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %231 = cast(%var_2213, dtype="float32") /* ty=Tensor[(154), float32] */;
  %232 = reshape(%230, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %233 = reshape(%231, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %234 = @func_1935(%232, %233) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %235 = cast(meta[relay.Constant][7] /* ty=Tensor[(480, 6), float64] */, dtype="float64") /* ty=Tensor[(480, 6), float64] */;
  %236 = cast(-8.4363f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %237 = reshape(%235, newshape=[16, 12, 15]) /* ty=Tensor[(16, 12, 15), float64] */;
  %238 = reshape(%236, newshape=[]) /* ty=float32 */;
  %239 = @func_635(%237, %238) /* ty=(Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) */;
  %240 = cast(%229, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %241 = sqrt(%240) /* ty=Tensor[(5, 7, 14), float32] */;
  %242 = cast(%241, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %243 = cast(-8.4363f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %244 = reshape(%243, newshape=[]) /* ty=float32 */;
  %245 = @func_325(%244) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %246 = %245.0;
  %247 = cast(%var_2213, dtype="uint8") /* ty=Tensor[(154), uint8] */;
  %248 = cast(%246, dtype="uint8") /* ty=Tensor[(8, 15, 1), uint8] */;
  %249 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %250 = %234.1;
  %251 = %239.1;
  %252 = tan(%242) /* ty=Tensor[(5, 7, 14), float64] */;
  %253 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %254 = bitwise_xor(%247, %248) /* ty=Tensor[(8, 15, 154), uint8] */;
  %255 = @func_1907() /* ty=float32 */;
  (%249, %250, %251, meta[relay.Constant][7] /* ty=Tensor[(480, 6), float64] */, -8.4363f /* ty=float32 */, %252, %253, %254, %255)
}

def @func_5910() -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(154), float32], float32, Tensor[(154, 1), float32]) {
  %256 = @func_3870() /* ty=(float32,) */;
  %257 = @func_3487() /* ty=(float32,) */;
  %258 = cast(meta[relay.Constant][8] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %259 = reshape(%258, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %260 = @func_1779(%259) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %261 = @func_4743() /* ty=(float32, float32) */;
  %262 = @func_4139() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], Tensor[(154, 1), float32], float32, Tensor[(154, 1), float64]) */;
  %263 = %256.0;
  %264 = %257.0;
  %265 = %260.1;
  %266 = %261.0;
  %267 = %262.3;
  (%263, %264, %265, meta[relay.Constant][8] /* ty=Tensor[(154), float32] */, %266, %267)
}

def @func_3065() -> (Tensor[(5, 7, 14), bool],) {
  %268 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%268,)
}

def @func_4877() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) {
  %269 = @func_3870() /* ty=(float32,) */;
  %270 = @func_3686() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %271 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 672), int64] */, dtype="int64") /* ty=Tensor[(1, 672), int64] */;
  %272 = reshape(%271, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), int64] */;
  %273 = @func_3149(%272) /* ty=(Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) */;
  %274 = %269.0;
  %275 = %270.1;
  %276 = @func_1686() /* ty=Tensor[(5, 7, 14), bool] */;
  %277 = %273.1;
  (%274, %275, %276, %277, meta[relay.Constant][9] /* ty=Tensor[(1, 672), int64] */)
}

def @func_8200(%var_8189: Tensor[(154, 2), float32]) -> (Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154, 1), float32], Tensor[(154, 2), float32], Tensor[(5, 7, 14), bool]) {
  %278 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %279 = cast(%var_8189, dtype="float32") /* ty=Tensor[(154, 2), float32] */;
  %280 = reshape(%279, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %281 = @func_6759(%280) /* ty=(Tensor[(154, 2), bool], float32, Tensor[(154, 1), float32]) */;
  %282 = %278.0;
  %283 = @func_2930() /* ty=Tensor[(5, 7, 14), bool] */;
  %284 = %281.2;
  %285 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  (%282, %283, %284, %var_8189, %285)
}

def @func_11516(%var_11429: Tensor[(5, 7, 14), bool], %var_11447: float64) -> (Tensor[(5, 7, 14), uint32], Tensor[(14, 10, 9), float64], float64, Tensor[(1260, 1), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %286 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %287 = %286.0;
  %288 = cast(%var_11429, dtype="uint32") /* ty=Tensor[(5, 7, 14), uint32] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%287, dtype="uint32") /* ty=Tensor[(5, 7, 14), uint32] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %292 = cast(%var_11447, dtype="float64") /* ty=float64 */;
  %293 = cast(meta[relay.Constant][10] /* ty=Tensor[(1260, 1), float64] */, dtype="float64") /* ty=Tensor[(1260, 1), float64] */;
  %294 = reshape(%292, newshape=[]) /* ty=float64 */;
  %295 = reshape(%293, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), float64] */;
  %296 = @func_8054(%294, %295) /* ty=(Tensor[(14, 10, 9), float64],) */;
  %297 = @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
  %298 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %299 = left_shift(%290, %291) /* ty=Tensor[(5, 7, 14), uint32] */;
  %300 = %296.0;
  %301 = %297.0;
  %302 = %298.0;
  (%299, %300, %var_11447, meta[relay.Constant][10] /* ty=Tensor[(1260, 1), float64] */, %301, %302)
}

def @func_17049() -> Tensor[(5, 7, 14), bool] {
  %303 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %303.0
}

def @func_8782() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(168), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %304 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %305 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
  %306 = @func_8541() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %307 = @func_7020() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(490), float32]) */;
  %308 = %304.0;
  %309 = @func_4323() /* ty=Tensor[(5, 7, 14), bool] */;
  %310 = %305.0;
  %311 = %306.0;
  %312 = %307.1;
  (%308, %309, %310, %311, %312)
}

def @func_2335(%var_2325: Tensor[(490), bool]) -> (float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) {
  %313 = cast(%var_2325, dtype="bool") /* ty=Tensor[(490), bool] */;
  %314 = reshape(%313, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %315 = @func_1386(%314) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32]) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %318 = @func_1907() /* ty=float32 */;
  %319 = exp(%317) /* ty=Tensor[(5, 7, 14), float32] */;
  (%318, %var_2325, %319)
}

def @func_3110() -> (Tensor[(8, 15, 1), float32],) {
  %320 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %321 = %320.3;
  (%321,)
}

def @func_4706() -> (Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) {
  %322 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %323 = @func_3748() /* ty=Tensor[(8, 15, 1), uint16] */;
  %324 = %322.0;
  (%323, %324)
}

def @func_3633(%var_3551: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], float32, Tensor[(?, 11, 14), int64], Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), float64]) {
  %325 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %326 = %325.1;
  %327 = cast(%326, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %328 = cast(meta[relay.Constant][11] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %329 = reshape(%327, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %330 = reshape(%328, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %331 = @func_1935(%329, %330) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %332 = cast(%var_3551, dtype="float32") /* ty=float32 */;
  %333 = reshape(%332, newshape=[]) /* ty=float32 */;
  %334 = @func_325(%333) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %335 = cast(%326, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %336 = cast(meta[relay.Constant][11] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %337 = reshape(%335, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %338 = reshape(%336, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %339 = @func_1935(%337, %338) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %340 = %339.1;
  %341 = cast(meta[relay.Constant][11] /* ty=Tensor[(154), float32] */, dtype="int64") /* ty=Tensor[(154), int64] */;
  %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%340, dtype="int64") /* ty=Tensor[(1, 11, 14), int64] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %345 = multiply(%343, %344) /* ty=Tensor[(?, 11, 14), int64] */;
  %346 = cast(%345, dtype="float32") /* ty=Tensor[(?, 11, 14), float32] */;
  %347 = reshape(%346, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %348 = @func_1779(%347) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %349 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %350 = %331.0;
  %351 = %334.0;
  %352 = %348.0;
  %353 = %349.0;
  (%326, %350, %351, %var_3551, %345, %352, %353)
}

def @func_4743() -> (float32, float32) {
  %354 = @func_4210() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */;
  %355 = @func_4242() /* ty=float32 */;
  %356 = %354.3;
  (%355, %356)
}

def @func_10454() -> (float32,) {
  %357 = @func_3870() /* ty=(float32,) */;
  %358 = %357.0;
  (%358,)
}

def @func_5438() -> (Tensor[(5, 7, 14), bool],) {
  %359 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  (%359,)
}

def @func_18939() -> (Tensor[(5, 7, 14), float64],) {
  %360 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %361 = %360.0;
  (%361,)
}

def @func_11599(%var_11585: int64, %var_11586: Tensor[(4, 5, 2), int64]) -> (Tensor[(4, 5, 2), int64],) {
  %362 = cast(%var_11585, dtype="int64") /* ty=int64 */;
  %363 = cast(%var_11586, dtype="int64") /* ty=Tensor[(4, 5, 2), int64] */;
  %364 = left_shift(%362, %363) /* ty=Tensor[(4, 5, 2), int64] */;
  (%364,)
}

def @func_8586(%var_8565: Tensor[(3, 12, 1), int64], %var_8566: Tensor[(3, 12, 1), int64]) -> (Tensor[(3, 12, ?), int64], float32) {
  %365 = cast(%var_8566, dtype="int64") /* ty=Tensor[(3, 12, 1), int64] */;
  %366 = shape_of(%var_8565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_8565, dtype="int64") /* ty=Tensor[(3, 12, 1), int64] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %369 = left_shift(%367, %368) /* ty=Tensor[(3, 12, ?), int64] */;
  %370 = @func_3855() /* ty=float32 */;
  (%369, %370)
}

def @func_13269() -> (float32, float32) {
  %371 = @func_7564() /* ty=(float32,) */;
  %372 = @func_13055() /* ty=(float32, float32) */;
  %373 = %371.0;
  %374 = %372.1;
  (%373, %374)
}

def @func_13517() -> (float32, Tensor[(490), bool], Tensor[(5, 7, 14), float64], float32) {
  %375 = @func_5395() /* ty=(float32, Tensor[(8, 15, 1), uint16]) */;
  %376 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %377 = @func_4421() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %378 = %375.0;
  %379 = %376.0;
  %380 = @func_5648() /* ty=Tensor[(5, 7, 14), float64] */;
  %381 = %377.1;
  (%378, %379, %380, %381)
}

def @func_11951() -> Tensor[(5, 7, 14), bool] {
  %382 = @func_6313() /* ty=(Tensor[(14, 3, 5), float32], Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64]) */;
  %382.1
}

def @func_10756() -> float32 {
  %383 = @func_4743() /* ty=(float32, float32) */;
  %383.1
}

def @func_2043(%var_2015: Tensor[(154), float32]) -> (float32, Tensor[(154), float64], Tensor[(154), float32], Tensor[(5, 7, 14), int32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %384 = @func_1907() /* ty=float32 */;
  %385 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %386 = cast(%384, dtype="bool") /* ty=bool */;
  %387 = cast(%385, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %388 = greater(%386, %387) /* ty=Tensor[(5, 7, 14), bool] */;
  %389 = cast(%388, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %390 = cast(%var_2015, dtype="float32") /* ty=Tensor[(154), float32] */;
  %391 = reshape(%389, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %392 = reshape(%390, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %393 = @func_1935(%391, %392) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %394 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %395 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 7, 14), bool] */, dtype="int32") /* ty=Tensor[(5, 7, 14), int32] */;
  %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%394, dtype="int32") /* ty=Tensor[(5, 7, 14), int32] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %399 = cast(%394, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %400 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%388, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %403 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %404 = @func_1907() /* ty=float32 */;
  %405 = %393.2;
  %406 = bitwise_or(%397, %398) /* ty=Tensor[(5, 7, 14), int32] */;
  %407 = less(%401, %402) /* ty=Tensor[(5, 7, 14), bool] */;
  %408 = %403.0;
  (%404, %405, %var_2015, %406, %407, %408)
}

def @func_6390() -> Tensor[(5, 7, 14), bool] {
  %409 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %409.3
}

def @func_15451() -> (float32, Tensor[(5, 7, 14), bool]) {
  %410 = @func_13469() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %411 = @func_8220() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %412 = %410.0;
  %413 = %411.0;
  (%412, %413)
}

def @func_13055() -> (float32, float32) {
  %414 = @func_8962() /* ty=(float32, float32) */;
  %415 = %414.1;
  %416 = cast(%415, dtype="float32") /* ty=float32 */;
  %417 = reshape(%416, newshape=[]) /* ty=float32 */;
  %418 = @func_1151(%417) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */;
  %419 = %418.3;
  (%415, %419)
}

def @func_7477() -> Tensor[(14, 3, 7), float64] {
  %420 = @func_4510() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %420.0
}

def @func_16489(%var_16473: int8) -> (Tensor[(4, 10, 11), int8], Tensor[(168), float32]) {
  %421 = cast(%var_16473, dtype="int8") /* ty=int8 */;
  %422 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 10, 11), int8] */, dtype="int8") /* ty=Tensor[(4, 10, 11), int8] */;
  %423 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
  %424 = subtract(%421, %422) /* ty=Tensor[(4, 10, 11), int8] */;
  %425 = %423.0;
  (%424, %425)
}

def @func_7806() -> (Tensor[(5, 7, 14), bool],) {
  %426 = @func_6390() /* ty=Tensor[(5, 7, 14), bool] */;
  (%426,)
}

def @func_6636() -> (Tensor[(5, 7, 14), bool],) {
  %427 = @func_6370() /* ty=Tensor[(5, 7, 14), bool] */;
  (%427,)
}

def @func_14011() -> (Tensor[(11, 2, 13), float64],) {
  %428 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 2, 13), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  %429 = cosh(%428) /* ty=Tensor[(11, 2, 13), float64] */;
  (%429,)
}

def @func_8002() -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %430 = @func_6617() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %431 = %430.0;
  %432 = cast(%431, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %433 = reshape(%432, newshape=[490]) /* ty=Tensor[(490), bool] */;
  %434 = @func_2335(%433) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */;
  %435 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %436 = @func_3855() /* ty=float32 */;
  %437 = cast(%431, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %438 = cast(%436, dtype="bool") /* ty=bool */;
  %439 = %434.2;
  %440 = %435.0;
  %441 = equal(%437, %438) /* ty=Tensor[(5, 7, 14), bool] */;
  (%439, %440, %441)
}

def @func_18272() -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], float32) {
  %442 = @func_8002() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %443 = %442.0;
  %444 = cast(%443, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %445 = reshape(%444, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %446 = @func_5298(%445) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %447 = @func_11661() /* ty=Tensor[(5, 7, 14), bool] */;
  %448 = %446.1;
  (%443, %447, %448)
}

def @func_10088(%var_10081: Tensor[(308), float32]) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(308), float32]) {
  %449 = @func_4210() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */;
  %450 = cast(%var_10081, dtype="float32") /* ty=Tensor[(308), float32] */;
  %451 = reshape(%450, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %452 = @func_6759(%451) /* ty=(Tensor[(154, 2), bool], float32, Tensor[(154, 1), float32]) */;
  %453 = %449.0;
  %454 = %452.1;
  (%453, %454, %var_10081)
}

def @func_10321(%var_10312: Tensor[(1, 6, 16), uint64]) -> Tensor[(1, 6, 16), uint64] {
  %455 = cast(meta[relay.Constant][15] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %456 = cast(%var_10312, dtype="uint64") /* ty=Tensor[(1, 6, 16), uint64] */;
  multiply(%455, %456) /* ty=Tensor[(1, 6, 16), uint64] */
}

def @func_12692(%var_12656: float64) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float64, Tensor[(14, 10, 9), float64], Tensor[(1260), float64], Tensor[(5, 7, 14), bool]) {
  %457 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %458 = %457.3;
  %459 = cast(%458, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %460 = cast(%var_12656, dtype="float64") /* ty=float64 */;
  %461 = reshape(%459, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %462 = reshape(%460, newshape=[]) /* ty=float64 */;
  %463 = @func_11516(%461, %462) /* ty=(Tensor[(5, 7, 14), uint32], Tensor[(14, 10, 9), float64], float64, Tensor[(1260, 1), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %464 = cast(%var_12656, dtype="float64") /* ty=float64 */;
  %465 = cast(meta[relay.Constant][16] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %466 = reshape(%464, newshape=[]) /* ty=float64 */;
  %467 = reshape(%465, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), float64] */;
  %468 = @func_8054(%466, %467) /* ty=(Tensor[(14, 10, 9), float64],) */;
  %469 = %463.4;
  %470 = %468.0;
  %471 = @func_4990() /* ty=Tensor[(5, 7, 14), bool] */;
  (%458, %469, %var_12656, %470, meta[relay.Constant][16] /* ty=Tensor[(1260), float64] */, %471)
}

def @func_15362() -> (Tensor[(168), float32], Tensor[(308), float32]) {
  %472 = @func_12711() /* ty=(Tensor[(168), float32], Tensor[(14, 3, 7), float64]) */;
  %473 = @func_9613() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(308), float32]) */;
  %474 = %472.0;
  %475 = %473.3;
  (%474, %475)
}

def @func_3333(%var_3318: Tensor[(2, 12, 7), float32]) -> (Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) {
  %476 = cast(-3.5293f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %477 = cast(%var_3318, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %478 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %479 = cast(%478, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %480 = divide(%476, %477) /* ty=Tensor[(2, 12, 7), float32] */;
  %481 = sinh(%479) /* ty=Tensor[(5, 7, 14), float32] */;
  (%480, %481)
}

def @func_8843() -> Tensor[(490), bool] {
  %482 = @func_6243() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */;
  %482.1
}

def @func_4990() -> Tensor[(5, 7, 14), bool] {
  %483 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %483.0
}

def @func_15864() -> (Tensor[(5, 7, 14), bool],) {
  %484 = @func_6097() /* ty=Tensor[(5, 7, 14), bool] */;
  (%484,)
}

def @func_11996() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) {
  %485 = @func_7631() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %486 = @func_10266() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %487 = %485.0;
  %488 = %486.0;
  (%487, %488)
}

def @func_15298() -> float32 {
  %489 = @func_3487() /* ty=(float32,) */;
  %489.0
}

def @func_1779(%var_1749: Tensor[(1, 11, 14), float32]) -> (Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) {
  %490 = cast(%var_1749, dtype="float32") /* ty=Tensor[(1, 11, 14), float32] */;
  %491 = log2(%490) /* ty=Tensor[(1, 11, 14), float32] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(1, 11, 14), float64] */;
  %493 = sin(%492) /* ty=Tensor[(1, 11, 14), float64] */;
  %494 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%493, %494)
}

def @func_5015() -> (Tensor[(5, 7, 14), bool],) {
  %495 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %496 = %495.0;
  (%496,)
}

def @func_3686() -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) {
  %497 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %498 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %499 = %497.0;
  %500 = %498.4;
  (%499, %500)
}

def @func_9312() -> (float32,) {
  %501 = @func_4454() /* ty=float32 */;
  (%501,)
}

def @func_13204() -> (Tensor[(154), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %502 = @func_11676() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(168), float32]) */;
  %503 = @func_10692() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %504 = @func_6950() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
  %505 = %502.1;
  %506 = %503.2;
  %507 = %504.3;
  (%505, %506, %507)
}

def @func_1610() -> float32 {
  %508 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %508.2
}

def @func_17104(%var_17093: Tensor[(6, 2, 15), float32]) -> Tensor[(6, 2, 15), int8] {
  %509 = cast(%var_17093, dtype="float32") /* ty=Tensor[(6, 2, 15), float32] */;
  %510 = log(%509) /* ty=Tensor[(6, 2, 15), float32] */;
  %511 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 2, 15), float32] */, dtype="int8") /* ty=Tensor[(6, 2, 15), int8] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="int8") /* ty=Tensor[(6, 2, 15), int8] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%513, %514) /* ty=Tensor[(6, 2, 15), int8] */
}

def @func_15814() -> (float32, Tensor[(8, 15, 1), float32]) {
  %515 = @func_7574() /* ty=(float32,) */;
  %516 = @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
  %517 = %515.0;
  %518 = %516.1;
  (%517, %518)
}

def @func_4003(%var_4001: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  %519 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %520 = %519.1;
  %521 = cast(%520, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %522 = cast(%var_4001, dtype="float32") /* ty=Tensor[(154), float32] */;
  %523 = reshape(%522, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %524 = @func_2288(%523) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(8, 15, 1), float32], Tensor[(480, 6), float64], float32, Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], float32) */;
  %525 = asin(%521) /* ty=Tensor[(5, 7, 14), float32] */;
  %526 = %524.5;
  (%525, %526, %var_4001)
}

def @func_6759(%var_6743: Tensor[(154, 2), float32]) -> (Tensor[(154, 2), bool], float32, Tensor[(154, 1), float32]) {
  %527 = @func_4139() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], Tensor[(154, 1), float32], float32, Tensor[(154, 1), float64]) */;
  %528 = %527.3;
  %529 = cast(%528, dtype="bool") /* ty=Tensor[(154, 1), bool] */;
  %530 = cast(%var_6743, dtype="bool") /* ty=Tensor[(154, 2), bool] */;
  %531 = cast(%528, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %532 = less(%529, %530) /* ty=Tensor[(154, 2), bool] */;
  %533 = @func_4663() /* ty=float32 */;
  %534 = acosh(%531) /* ty=Tensor[(154, 1), float32] */;
  (%532, %533, %534)
}

def @func_12036() -> (Tensor[(5, 7, 14), bool],) {
  %535 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%535,)
}

def @func_3748() -> Tensor[(8, 15, 1), uint16] {
  %536 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
  %537 = %536.2;
  %538 = @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %539 = %538.0;
  %540 = cast(%537, dtype="uint16") /* ty=uint16 */;
  %541 = cast(%539, dtype="uint16") /* ty=Tensor[(8, 15, 1), uint16] */;
  minimum(%540, %541) /* ty=Tensor[(8, 15, 1), uint16] */
}

def @func_1046(%var_1024: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %542 = cast(meta[relay.Constant][18] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %543 = cast(%var_1024, dtype="float32") /* ty=float32 */;
  %544 = reshape(%542, newshape=[16, 12, 15]) /* ty=Tensor[(16, 12, 15), float64] */;
  %545 = reshape(%543, newshape=[]) /* ty=float32 */;
  %546 = @func_635(%544, %545) /* ty=(Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) */;
  %547 = cast(%var_1024, dtype="float32") /* ty=float32 */;
  %548 = reshape(%547, newshape=[]) /* ty=float32 */;
  %549 = @func_325(%548) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %550 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %551 = %546.0;
  %552 = %549.0;
  %553 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %554 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%550, %551, meta[relay.Constant][18] /* ty=Tensor[(2880), float64] */, %var_1024, %552, %553, %554)
}

def @func_2126() -> (float32, Tensor[(5, 7, 14), float64]) {
  %555 = @func_1907() /* ty=float32 */;
  %556 = cast(%555, dtype="float32") /* ty=float32 */;
  %557 = reshape(%556, newshape=[]) /* ty=float32 */;
  %558 = @func_1151(%557) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */;
  %559 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %561 = cast(%555, dtype="float64") /* ty=float64 */;
  %562 = %558.1;
  %563 = mod(%560, %561) /* ty=Tensor[(5, 7, 14), float64] */;
  (%562, %563)
}

def @func_8471() -> (Tensor[(5, 7, 14), bool], float32) {
  %564 = @func_6049() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) */;
  %565 = @func_4990() /* ty=Tensor[(5, 7, 14), bool] */;
  %566 = %564.2;
  (%565, %566)
}

def @func_9686() -> float32 {
  %567 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %567.0
}

def @func_14424() -> Tensor[(154, 1), float64] {
  %568 = @func_5910() /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(154), float32], float32, Tensor[(154, 1), float32]) */;
  %569 = %568.5;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  atanh(%570) /* ty=Tensor[(154, 1), float64] */
}

def @func_6243() -> (Tensor[(5, 7, 14), bool], Tensor[(490), bool]) {
  %571 = @func_5812() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
  %572 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %573 = %571.1;
  %574 = %572.2;
  (%573, %574)
}

def @func_17589(%var_17542: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float32], Tensor[(5, 7, 14), float64]) {
  %575 = cast(%var_17542, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %576 = sinh(%575) /* ty=Tensor[(8, 6, 6), float32] */;
  %577 = cast(%var_17542, dtype="uint32") /* ty=Tensor[(8, 6, 6), uint32] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%576, dtype="uint32") /* ty=Tensor[(8, 6, 6), uint32] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %581 = minimum(%579, %580) /* ty=Tensor[(8, 6, 6), uint32] */;
  %582 = cast(%576, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = not_equal(%584, %585) /* ty=Tensor[(8, 6, 6), bool] */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %588 = rsqrt(%587) /* ty=Tensor[(8, 6, 6), float32] */;
  %589 = cast(%588, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %590 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %591 = exp(%589) /* ty=Tensor[(8, 6, 6), float32] */;
  %592 = %590.0;
  (%591, %592)
}

def @func_4931() -> (Tensor[(5, 7, 14), bool], float32) {
  %593 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %594 = %593.1;
  %595 = @func_4663() /* ty=float32 */;
  (%594, %595)
}

def @func_11199(%var_11182: Tensor[(4, 3, 9), float32]) -> (Tensor[(4, 3, 9), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  %596 = cast(%var_11182, dtype="float32") /* ty=Tensor[(4, 3, 9), float32] */;
  %597 = cast(meta[relay.Constant][19] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %598 = reshape(%597, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %599 = @func_9776(%598) /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(?, 11, 14), int32], Tensor[(14, 3, 7), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) */;
  %600 = asin(%596) /* ty=Tensor[(4, 3, 9), float32] */;
  %601 = %599.0;
  (%600, %601, meta[relay.Constant][19] /* ty=Tensor[(154), float32] */)
}

def @func_12205() -> (Tensor[(5, 7, 14), bool],) {
  %602 = @func_6354() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) */;
  %603 = %602.0;
  (%603,)
}

def @func_12066() -> float32 {
  @func_11358() /* ty=float32 */
}

def @func_4454() -> float32 {
  @func_1907() /* ty=float32 */
}

def @func_16262() -> (Tensor[(5, 7, 14), bool],) {
  %604 = @func_5015() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %605 = %604.0;
  (%605,)
}

def @func_635(%var_585: Tensor[(16, 12, 15), float64], %var_603: float32) -> (Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) {
  %606 = cast(%var_585, dtype="float64") /* ty=Tensor[(16, 12, 15), float64] */;
  %607 = cast(%var_603, dtype="float32") /* ty=float32 */;
  %608 = reshape(%607, newshape=[]) /* ty=float32 */;
  %609 = @func_325(%608) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %610 = cast(%var_603, dtype="float32") /* ty=float32 */;
  %611 = reshape(%610, newshape=[]) /* ty=float32 */;
  %612 = @func_325(%611) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %613 = cast(%var_603, dtype="float32") /* ty=float32 */;
  %614 = reshape(%613, newshape=[]) /* ty=float32 */;
  %615 = @func_325(%614) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %616 = %615.0;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(8, 15, 1), float32] */;
  %618 = log2(%606) /* ty=Tensor[(16, 12, 15), float64] */;
  %619 = %609.0;
  %620 = %612.0;
  %621 = cos(%617) /* ty=Tensor[(8, 15, 1), float32] */;
  (%618, %619, %var_603, %620, %621)
}

def @func_3305() -> float32 {
  %622 = @func_2663() /* ty=(float32,) */;
  %622.0
}

def @func_7260() -> (float32, float32, Tensor[(5, 7, 14), bool]) {
  %623 = @func_6274() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %624 = %623.0;
  %625 = cast(%624, dtype="float32") /* ty=float32 */;
  %626 = reshape(%625, newshape=[]) /* ty=float32 */;
  %627 = @func_1151(%626) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */;
  %628 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %629 = %627.3;
  %630 = %628.0;
  (%624, %629, %630)
}

def @func_11887() -> (float32,) {
  %631 = @func_3487() /* ty=(float32,) */;
  %632 = %631.0;
  (%632,)
}

def @func_6274() -> (float32, Tensor[(5, 7, 14), bool]) {
  %633 = @func_4454() /* ty=float32 */;
  %634 = @func_1686() /* ty=Tensor[(5, 7, 14), bool] */;
  (%633, %634)
}

def @func_8165() -> (Tensor[(5, 7, 14), bool], float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64]) {
  %635 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %636 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %637 = %635.1;
  %638 = @func_4663() /* ty=float32 */;
  %639 = @func_4454() /* ty=float32 */;
  %640 = %636.2;
  %641 = @func_5648() /* ty=Tensor[(5, 7, 14), float64] */;
  (%637, %638, %639, %640, %641)
}

def @func_7380() -> float32 {
  %642 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %642.0
}

def @func_17177() -> (float32,) {
  %643 = @func_9312() /* ty=(float32,) */;
  %644 = %643.0;
  (%644,)
}

def @func_17203() -> (Tensor[(8, 15, 1), float32], float32) {
  %645 = @func_14823() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool]) */;
  %646 = @func_8675() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) */;
  %647 = %645.0;
  %648 = %646.0;
  (%647, %648)
}

def @func_16913() -> (float32,) {
  %649 = @func_14677() /* ty=float32 */;
  (%649,)
}

def @func_14480(%var_14465: float64, %var_14466: Tensor[(14, 15, 8), float64]) -> (Tensor[(14, 15, 8), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %650 = cast(%var_14465, dtype="float64") /* ty=float64 */;
  %651 = cast(%var_14466, dtype="float64") /* ty=Tensor[(14, 15, 8), float64] */;
  %652 = cast(%var_14465, dtype="float32") /* ty=float32 */;
  %653 = reshape(%652, newshape=[]) /* ty=float32 */;
  %654 = @func_2170(%653) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) */;
  %655 = @func_8381() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %656 = floor_mod(%650, %651) /* ty=Tensor[(14, 15, 8), float64] */;
  %657 = %654.0;
  %658 = %655.2;
  (%656, %657, %658)
}

def @func_14535() -> (Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64], Tensor[(8, 15, 1), float32]) {
  %659 = @func_7447() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %660 = @func_10656() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) */;
  %661 = @func_13726() /* ty=(float32, Tensor[(8, 15, 1), float32]) */;
  %662 = %659.0;
  %663 = %660.0;
  %664 = %661.1;
  (%662, %663, %664)
}

def @func_2645(%var_2641: Tensor[(8, 10, 6), float64]) -> (Tensor[(8, 10, 6), float64],) {
  %665 = cast(%var_2641, dtype="float64") /* ty=Tensor[(8, 10, 6), float64] */;
  %666 = atan(%665) /* ty=Tensor[(8, 10, 6), float64] */;
  (%666,)
}

def @func_7348(%var_7307: Tensor[(168), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(5, 7, 14), bool]) {
  %667 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %668 = cast(%var_7307, dtype="float32") /* ty=Tensor[(168), float32] */;
  %669 = reshape(%668, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float32] */;
  %670 = @func_3333(%669) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) */;
  %671 = %667.3;
  %672 = cast(%671, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %673 = reshape(%672, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %674 = @func_5083(%673) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), int16], Tensor[(5, 7, 14), bool]) */;
  %675 = %670.1;
  %676 = %674.2;
  (%671, %675, %var_7307, %676)
}

def @func_13046() -> (Tensor[(8, 15, 5), float64], Tensor[(8, 15, 1), float32], float32) {
  %677 = @func_10471() /* ty=(Tensor[(8, 15, 5), float64],) */;
  %678 = @func_10266() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %679 = @func_9055() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %680 = %677.0;
  %681 = %678.0;
  %682 = %679.0;
  (%680, %681, %682)
}

def @func_1151(%var_1139: float32) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) {
  %683 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %684 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %685 = cast(%684, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %686 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%683, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %689 = cast(meta[relay.Constant][20] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %690 = cast(%var_1139, dtype="float32") /* ty=float32 */;
  %691 = reshape(%689, newshape=[16, 12, 15]) /* ty=Tensor[(16, 12, 15), float64] */;
  %692 = reshape(%690, newshape=[]) /* ty=float32 */;
  %693 = @func_635(%691, %692) /* ty=(Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) */;
  %694 = less_equal(%687, %688) /* ty=Tensor[(5, 7, 14), bool] */;
  %695 = %693.2;
  %696 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%694, %695, meta[relay.Constant][20] /* ty=Tensor[(2880), float64] */, %var_1139, %696)
}

def @func_10692() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) {
  %697 = @func_8381() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %698 = @func_9973() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], float32, float32, float32, Tensor[(5, 7, 14), float64]) */;
  %699 = @func_5812() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
  %700 = %697.2;
  %701 = %698.6;
  %702 = %699.1;
  (%700, %701, %702)
}

def @func_1686() -> Tensor[(5, 7, 14), bool] {
  @func_1525() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_4360() -> Tensor[(5, 7, 14), bool] {
  %703 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
  %703.0
}

def @func_11552() -> (Tensor[(14, 3, 7), float64],) {
  %704 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %705 = %704.0;
  (%705,)
}

def @func_3933(%var_3910: Tensor[(168), float32]) -> (Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) {
  %706 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %707 = %706.1;
  %708 = cast(%707, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %709 = cast(%var_3910, dtype="float32") /* ty=Tensor[(168), float32] */;
  %710 = reshape(%709, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float32] */;
  %711 = @func_3333(%710) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) */;
  %712 = cast(meta[relay.Constant][21] /* ty=Tensor[(22, 7), float32] */, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %713 = reshape(%712, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %714 = @func_2043(%713) /* ty=(float32, Tensor[(154), float64], Tensor[(154), float32], Tensor[(5, 7, 14), int32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %715 = cosh(%708) /* ty=Tensor[(5, 7, 14), float32] */;
  %716 = %711.0;
  %717 = %714.2;
  (%715, %716, %var_3910, %717, meta[relay.Constant][21] /* ty=Tensor[(22, 7), float32] */)
}

def @func_13099() -> Tensor[(490), bool] {
  %718 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %718.0
}

def @func_16662() -> (Tensor[(5, 7, 14), bool], float64, float32, Tensor[(14, 10, 9), int64], float32) {
  %719 = @func_4372() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %720 = @func_7541() /* ty=(float32, float32) */;
  %721 = cast(9.12315f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %722 = cast(meta[relay.Constant][22] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %723 = reshape(%721, newshape=[]) /* ty=float64 */;
  %724 = reshape(%722, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), float64] */;
  %725 = @func_8054(%723, %724) /* ty=(Tensor[(14, 10, 9), float64],) */;
  %726 = %725.0;
  %727 = cast(%726, dtype="float32") /* ty=Tensor[(14, 10, 9), float32] */;
  %728 = log2(%727) /* ty=Tensor[(14, 10, 9), float32] */;
  %729 = cast(meta[relay.Constant][22] /* ty=Tensor[(1260), float64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%728, dtype="int64") /* ty=Tensor[(14, 10, 9), int64] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %733 = %719.0;
  %734 = %720.0;
  %735 = maximum(%731, %732) /* ty=Tensor[(14, 10, 9), int64] */;
  %736 = @func_1610() /* ty=float32 */;
  (%733, 9.12315f64 /* ty=float64 */, %734, %735, %736)
}

def @func_18457() -> Tensor[(5, 7, 14), bool] {
  @func_16777() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_9776(%var_9716: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), float64], float32, Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(?, 11, 14), int32], Tensor[(14, 3, 7), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
  %737 = @func_3686() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %738 = @func_7541() /* ty=(float32, float32) */;
  %739 = @func_7039() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %740 = @func_6546() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %741 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %742 = cast(%var_9716, dtype="float32") /* ty=Tensor[(154), float32] */;
  %743 = reshape(%742, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %744 = @func_1779(%743) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %745 = %744.0;
  %746 = cast(%var_9716, dtype="int32") /* ty=Tensor[(154), int32] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="int32") /* ty=Tensor[(1, 11, 14), int32] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %750 = @func_6274() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %751 = @func_5015() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %752 = %740.0;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %754 = reshape(%753, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %755 = %737.0;
  %756 = %738.1;
  %757 = %739.0;
  %758 = %741.0;
  %759 = bitwise_and(%748, %749) /* ty=Tensor[(?, 11, 14), int32] */;
  %760 = @func_7477() /* ty=Tensor[(14, 3, 7), float64] */;
  %761 = @func_7380() /* ty=float32 */;
  %762 = %750.1;
  %763 = %751.0;
  %764 = @func_5425(%754) /* ty=Tensor[(5, 7, 14), float32] */;
  (%755, %756, %757, %752, %758, %759, %760, %761, %762, %763, %764)
}

def @func_8962() -> (float32, float32) {
  %765 = @func_4877() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) */;
  %766 = @func_3487() /* ty=(float32,) */;
  %767 = %765.0;
  %768 = %766.0;
  (%767, %768)
}

def @func_4210() -> (Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) {
  %769 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %770 = %769.0;
  %771 = cast(%770, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %772 = cast(meta[relay.Constant][23] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %773 = reshape(%771, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %774 = reshape(%772, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %775 = @func_1935(%773, %774) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %776 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %777 = %775.2;
  %778 = %776.0;
  (%770, %777, meta[relay.Constant][23] /* ty=Tensor[(154), float32] */, %778)
}

def @func_16019() -> (float32, float32) {
  %779 = @func_13055() /* ty=(float32, float32) */;
  %780 = @func_12825() /* ty=float32 */;
  %781 = %779.0;
  (%780, %781)
}

def @func_10471() -> (Tensor[(8, 15, 5), float64],) {
  %782 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 15, 5), float64] */, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %783 = tan(%782) /* ty=Tensor[(8, 15, 5), float64] */;
  (%783,)
}

def @func_8054(%var_8041: float64, %var_8042: Tensor[(14, 10, 9), float64]) -> (Tensor[(14, 10, 9), float64],) {
  %784 = cast(%var_8041, dtype="float64") /* ty=float64 */;
  %785 = cast(%var_8042, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  %786 = divide(%784, %785) /* ty=Tensor[(14, 10, 9), float64] */;
  (%786,)
}

def @func_16698() -> (Tensor[(5, 7, 14), bool], float32) {
  %787 = @func_8220() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %788 = %787.0;
  %789 = @func_9200() /* ty=float32 */;
  (%788, %789)
}

def @func_3855() -> float32 {
  @func_1610() /* ty=float32 */
}

def @func_13469() -> (float32, Tensor[(5, 7, 14), bool]) {
  %790 = @func_7260() /* ty=(float32, float32, Tensor[(5, 7, 14), bool]) */;
  %791 = @func_4242() /* ty=float32 */;
  %792 = %790.2;
  (%791, %792)
}

def @func_5211() -> (Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %793 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %794 = @func_4421() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %795 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %796 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %797 = %793.0;
  %798 = %794.1;
  %799 = %795.0;
  %800 = %796.1;
  (%797, %798, %799, %800)
}

def @func_10980() -> float32 {
  %801 = @func_10454() /* ty=(float32,) */;
  %801.0
}

def @func_6049() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) {
  %802 = @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %803 = @func_3487() /* ty=(float32,) */;
  %804 = @func_4323() /* ty=Tensor[(5, 7, 14), bool] */;
  %805 = %802.0;
  %806 = %803.0;
  (%804, %805, %806)
}

def @func_5298(%var_5290: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) {
  %807 = @func_5015() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %808 = @func_2930() /* ty=Tensor[(5, 7, 14), bool] */;
  %809 = cast(%var_5290, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(%808, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %813 = %807.0;
  %814 = @func_3305() /* ty=float32 */;
  %815 = logical_or(%811, %812) /* ty=Tensor[(5, 7, 14), bool] */;
  (%813, %814, %815)
}

def @func_7039() -> (Tensor[(14, 3, 7), float64],) {
  %816 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %817 = %816.0;
  (%817,)
}

def @func_14375() -> float32 {
  @func_1907() /* ty=float32 */
}

def @func_4139() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], Tensor[(154, 1), float32], float32, Tensor[(154, 1), float64]) {
  %818 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %819 = cast(meta[relay.Constant][25] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %820 = reshape(%819, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %821 = @func_2288(%820) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(8, 15, 1), float32], Tensor[(480, 6), float64], float32, Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], float32) */;
  %822 = cast(meta[relay.Constant][25] /* ty=Tensor[(154, 1), float32] */, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %823 = cosh(%822) /* ty=Tensor[(154, 1), float64] */;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %825 = cast(%823, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %826 = asin(%825) /* ty=Tensor[(154, 1), float64] */;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %828 = %818.1;
  %829 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %830 = %821.7;
  %831 = erf(%824) /* ty=Tensor[(154, 1), float32] */;
  %832 = @func_3305() /* ty=float32 */;
  %833 = acos(%827) /* ty=Tensor[(154, 1), float64] */;
  (%828, %829, %830, %831, %832, %833)
}

def @func_7447() -> (Tensor[(5, 7, 14), bool],) {
  %834 = @func_6354() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) */;
  %835 = %834.0;
  (%835,)
}

def @func_19030(%var_18998: Tensor[(12, 8, 4), uint64]) -> (Tensor[(12, 8, 4), bool], Tensor[(5, 7, 14), bool]) {
  %836 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 8, 4), uint64] */, dtype="uint64") /* ty=Tensor[(12, 8, 4), uint64] */;
  %837 = shape_of(%var_18998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%var_18998, dtype="uint64") /* ty=Tensor[(12, 8, 4), uint64] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %840 = bitwise_and(%838, %839) /* ty=Tensor[(12, 8, 4), uint64] */;
  %841 = cast(%var_18998, dtype="bool") /* ty=Tensor[(12, 8, 4), bool] */;
  %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%840, dtype="bool") /* ty=Tensor[(12, 8, 4), bool] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %845 = @func_16262() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %846 = greater(%843, %844) /* ty=Tensor[(12, 8, 4), bool] */;
  %847 = %845.0;
  (%846, %847)
}

def @func_18901() -> (Tensor[(5, 7, 14), float32], Tensor[(11, 9, 12), float32], Tensor[(1188), float32]) {
  %848 = @func_5577() /* ty=(Tensor[(5, 7, 14), float32],) */;
  %849 = cast(meta[relay.Constant][27] /* ty=Tensor[(1188), float32] */, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %850 = reshape(%849, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), float32] */;
  %851 = @func_4066(%850) /* ty=(float32, Tensor[(490), float32], Tensor[(22, 7), float32], Tensor[(168), float32], Tensor[(11, 9, 12), float32], float32) */;
  %852 = %848.0;
  %853 = %851.4;
  (%852, %853, meta[relay.Constant][27] /* ty=Tensor[(1188), float32] */)
}

def @func_18079() -> (Tensor[(1, 14, 10), float32], Tensor[(490), bool]) {
  %854 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 10), float32] */;
  %855 = @func_6243() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */;
  %856 = cos(%854) /* ty=Tensor[(1, 14, 10), float32] */;
  %857 = %855.1;
  (%856, %857)
}

def @func_2702() -> (Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) {
  %858 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %859 = %858.1;
  %860 = cast(%859, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %861 = reshape(%860, newshape=[490]) /* ty=Tensor[(490), bool] */;
  %862 = @func_2335(%861) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */;
  %863 = cast(meta[relay.Constant][29] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %864 = reshape(%863, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %865 = @func_1779(%864) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %866 = cast(-5.7182f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %867 = reshape(%866, newshape=[]) /* ty=float32 */;
  %868 = @func_1046(%867) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %869 = %862.1;
  %870 = %865.1;
  %871 = %868.0;
  (%859, %869, %870, meta[relay.Constant][29] /* ty=Tensor[(154), float32] */, %871, -5.7182f /* ty=float32 */)
}

def @func_6617() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %872 = @func_6313() /* ty=(Tensor[(14, 3, 5), float32], Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64]) */;
  %873 = @func_4372() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %874 = %872.1;
  %875 = %873.0;
  (%874, %875)
}

def @func_11676() -> (Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(168), float32]) {
  %876 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %877 = cast(meta[relay.Constant][30] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %878 = reshape(%877, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %879 = @func_3933(%878) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) */;
  %880 = %876.2;
  %881 = %879.3;
  (%880, %881, meta[relay.Constant][30] /* ty=Tensor[(168), float32] */)
}

def @func_8407(%var_8391: Tensor[(9, 8, 14), uint32]) -> Tensor[(9, 8, 14), bool] {
  %882 = cast(%var_8391, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
  %883 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(9, 8, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 8, 14), uint32] */, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%884, %885) /* ty=Tensor[(9, 8, 14), bool] */
}

def @func_6313() -> (Tensor[(14, 3, 5), float32], Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64]) {
  %886 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 5), float32] */;
  %887 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(14, 3, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 5), float32] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %890 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %891 = @func_4510() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %892 = divide(%888, %889) /* ty=Tensor[(14, 3, 5), float32] */;
  %893 = %890.0;
  %894 = %891.0;
  (%892, %893, %894)
}

def @func_13086() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %895 = @func_8541() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %896 = @func_8782() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(168), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %897 = %895.0;
  %898 = %896.0;
  (%897, %898)
}

def @func_18376() -> (Tensor[(5, 7, 14), bool], float32) {
  %899 = @func_18272() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], float32) */;
  %900 = %899.1;
  %901 = @func_1610() /* ty=float32 */;
  (%900, %901)
}

def @func_9577() -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float64]) {
  %902 = @func_7447() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %903 = @func_2663() /* ty=(float32,) */;
  %904 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %905 = %902.0;
  %906 = %903.0;
  %907 = %904.1;
  (%905, %906, %907)
}

def @func_12445() -> (Tensor[(5, 7, 14), bool],) {
  %908 = @func_8220() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %909 = %908.0;
  (%909,)
}

def @func_17696() -> Tensor[(5, 7, 14), bool] {
  %910 = @func_13337() /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(5, 7, 14), float32]) */;
  %910.2
}

def @func_5395() -> (float32, Tensor[(8, 15, 1), uint16]) {
  %911 = @func_4663() /* ty=float32 */;
  %912 = @func_3748() /* ty=Tensor[(8, 15, 1), uint16] */;
  (%911, %912)
}

def @func_11661() -> Tensor[(5, 7, 14), bool] {
  %913 = @func_10297() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %913.1
}

def @func_12095() -> (float32,) {
  %914 = @func_7260() /* ty=(float32, float32, Tensor[(5, 7, 14), bool]) */;
  %915 = %914.1;
  (%915,)
}

def @func_14633() -> (Tensor[(490), bool], Tensor[(8, 15, 1), float32]) {
  %916 = @func_6243() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */;
  %917 = @func_13726() /* ty=(float32, Tensor[(8, 15, 1), float32]) */;
  %918 = %916.1;
  %919 = %917.1;
  (%918, %919)
}

def @func_12642(%var_12607: Tensor[(14, 9, 11), float64]) -> (Tensor[(8, 15, 5), float64], Tensor[(14, 9, 11), float32]) {
  %920 = @func_10471() /* ty=(Tensor[(8, 15, 5), float64],) */;
  %921 = cast(%var_12607, dtype="float64") /* ty=Tensor[(14, 9, 11), float64] */;
  %922 = asinh(%921) /* ty=Tensor[(14, 9, 11), float64] */;
  %923 = cast(%var_12607, dtype="float32") /* ty=Tensor[(14, 9, 11), float32] */;
  %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%922, dtype="float32") /* ty=Tensor[(14, 9, 11), float32] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %927 = %920.0;
  %928 = divide(%925, %926) /* ty=Tensor[(14, 9, 11), float32] */;
  (%927, %928)
}

def @func_3472() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %929 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %930 = @func_2930() /* ty=Tensor[(5, 7, 14), bool] */;
  (%929, %930)
}

def @func_17907() -> (Tensor[(5, 7, 14), float64], float32) {
  %931 = @func_9577() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float64]) */;
  %932 = %931.2;
  %933 = @func_10756() /* ty=float32 */;
  (%932, %933)
}

def @func_3819() -> (Tensor[(5, 7, 14), bool],) {
  %934 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %935 = %934.0;
  (%935,)
}

def @func_5352() -> (float32, Tensor[(5, 7, 14), float64]) {
  %936 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %937 = %936.0;
  %938 = cast(%937, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %939 = reshape(%938, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %940 = @func_1386(%939) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32]) */;
  %941 = cast(%937, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %942 = %940.2;
  %943 = atanh(%941) /* ty=Tensor[(5, 7, 14), float64] */;
  (%942, %943)
}

def @func_3870() -> (float32,) {
  %944 = @func_2663() /* ty=(float32,) */;
  %945 = %944.0;
  (%945,)
}

def @func_10350() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %946 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %947 = @func_6546() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %948 = %946.0;
  %949 = %947.0;
  (%948, %949)
}

def @func_4372() -> (Tensor[(5, 7, 14), bool],) {
  %950 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %951 = %950.0;
  (%951,)
}

def @func_13726() -> (float32, Tensor[(8, 15, 1), float32]) {
  %952 = @func_8023() /* ty=(float32,) */;
  %953 = @func_10266() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %954 = %952.0;
  %955 = %953.0;
  (%954, %955)
}

def @func_13702() -> (float32, Tensor[(5, 7, 14), float32]) {
  %956 = @func_10656() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) */;
  %957 = @func_4454() /* ty=float32 */;
  %958 = %956.2;
  (%957, %958)
}

def @func_16777() -> Tensor[(5, 7, 14), bool] {
  %959 = @func_7447() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %959.0
}

def @func_13660() -> (Tensor[(490), bool],) {
  %960 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %961 = %960.0;
  (%961,)
}

def @func_8675() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) {
  %962 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %963 = cast(meta[relay.Constant][34] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %964 = reshape(%963, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %965 = @func_7348(%964) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(5, 7, 14), bool]) */;
  %966 = %962.0;
  %967 = cast(%966, dtype="float32") /* ty=float32 */;
  %968 = reshape(%967, newshape=[]) /* ty=float32 */;
  %969 = @func_1046(%968) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %970 = %965.3;
  %971 = cast(%970, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %972 = reshape(%971, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %973 = @func_5298(%972) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %974 = @func_8381() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %975 = cast(%966, dtype="float32") /* ty=float32 */;
  %976 = reshape(%975, newshape=[]) /* ty=float32 */;
  %977 = @func_2170(%976) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) */;
  %978 = cast(meta[relay.Constant][34] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %979 = acosh(%978) /* ty=Tensor[(42, 4), float32] */;
  %980 = cast(meta[relay.Constant][35] /* ty=Tensor[(42, 4), float32] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(2), int32] */;
  %982 = cast(%979, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %984 = %969.6;
  %985 = %973.0;
  %986 = %974.1;
  %987 = %977.3;
  %988 = equal(%982, %983) /* ty=Tensor[(42, 4), bool] */;
  (%966, %970, %984, %985, %986, %987, %988)
}

def @func_17805() -> (Tensor[(5, 7, 14), bool], float32) {
  %989 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %990 = @func_12095() /* ty=(float32,) */;
  %991 = %989.0;
  %992 = %990.0;
  (%991, %992)
}

def @func_14677() -> float32 {
  @func_3305() /* ty=float32 */
}

def @func_4510() -> (Tensor[(14, 3, 7), float64],) {
  %993 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %994 = %993.0;
  (%994,)
}

def @func_10206(%var_10174: Tensor[(13, 4, 4), uint8], %var_10175: Tensor[(13, 4, 4), uint8], %var_10182: Tensor[(490), bool]) -> (Tensor[(490), bool], Tensor[(490), bool], Tensor[(13, 4, 4), bool], float32, Tensor[(8, 15, 1), uint16]) {
  %995 = cast(%var_10182, dtype="bool") /* ty=Tensor[(490), bool] */;
  %996 = reshape(%995, newshape=[490]) /* ty=Tensor[(490), bool] */;
  %997 = @func_2335(%996) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */;
  %998 = cast(%var_10175, dtype="uint8") /* ty=Tensor[(13, 4, 4), uint8] */;
  %999 = shape_of(%var_10174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1000 = cast(%var_10174, dtype="uint8") /* ty=Tensor[(13, 4, 4), uint8] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1002 = bitwise_xor(%1000, %1001) /* ty=Tensor[(13, 4, 4), uint8] */;
  %1003 = cast(%1002, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
  %1004 = shape_of(%var_10174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%var_10174, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1007 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %1008 = @func_4706() /* ty=(Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) */;
  %1009 = %997.1;
  %1010 = greater_equal(%1005, %1006) /* ty=Tensor[(13, 4, 4), bool] */;
  %1011 = %1007.1;
  %1012 = %1008.0;
  (%1009, %var_10182, %1010, %1011, %1012)
}

def @func_3704() -> (Tensor[(5, 7, 14), bool],) {
  %1013 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1014 = %1013.0;
  (%1014,)
}

def @func_16162() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
  %1015 = @func_12952() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1016 = %1015.1;
  %1017 = cast(%1016, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1018 = reshape(%1017, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %1019 = @func_5425(%1018) /* ty=Tensor[(5, 7, 14), float32] */;
  (%1016, %1019)
}

def @func_12794() -> (Tensor[(14, 3, 7), float64], Tensor[(8, 15, 15), float64], Tensor[(490), float32]) {
  %1020 = @func_7039() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %1021 = @func_11996() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
  %1022 = %1021.1;
  %1023 = cast(%1022, dtype="float64") /* ty=Tensor[(8, 15, 1), float64] */;
  %1024 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 15, 15), float32] */, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
  %1025 = @func_6683() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(490), float32]) */;
  %1026 = %1020.0;
  %1027 = divide(%1023, %1024) /* ty=Tensor[(8, 15, 15), float64] */;
  %1028 = %1025.2;
  (%1026, %1027, %1028)
}

def @func_9613() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(308), float32]) {
  %1029 = @func_7260() /* ty=(float32, float32, Tensor[(5, 7, 14), bool]) */;
  %1030 = @func_4931() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %1031 = cast(meta[relay.Constant][37] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1032 = reshape(%1031, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %1033 = @func_9425(%1032) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(308), float32]) */;
  %1034 = %1029.0;
  %1035 = %1030.0;
  %1036 = %1033.0;
  (%1034, %1035, %1036, meta[relay.Constant][37] /* ty=Tensor[(308), float32] */)
}

def @func_17625() -> (Tensor[(154, 1), float64],) {
  %1037 = @func_14424() /* ty=Tensor[(154, 1), float64] */;
  (%1037,)
}

def @func_6546() -> (Tensor[(5, 7, 14), bool],) {
  %1038 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1039 = %1038.0;
  (%1039,)
}

def @func_3792() -> (Tensor[(490), bool],) {
  %1040 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %1041 = %1040.1;
  (%1041,)
}

def @func_14823() -> (Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool]) {
  %1042 = @func_13726() /* ty=(float32, Tensor[(8, 15, 1), float32]) */;
  %1043 = %1042.1;
  %1044 = @func_1686() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1043, %1044)
}

def @func_4066(%var_4020: Tensor[(11, 9, 12), float32]) -> (float32, Tensor[(490), float32], Tensor[(22, 7), float32], Tensor[(168), float32], Tensor[(11, 9, 12), float32], float32) {
  %1045 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %1046 = cast(meta[relay.Constant][38] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1047 = reshape(%1046, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1048 = @func_3933(%1047) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) */;
  %1049 = cast(%var_4020, dtype="float32") /* ty=Tensor[(11, 9, 12), float32] */;
  %1050 = erf(%1049) /* ty=Tensor[(11, 9, 12), float32] */;
  %1051 = cast(%1050, dtype="float32") /* ty=Tensor[(11, 9, 12), float32] */;
  %1052 = @func_1907() /* ty=float32 */;
  %1053 = %1045.0;
  %1054 = %1048.4;
  %1055 = sin(%1051) /* ty=Tensor[(11, 9, 12), float32] */;
  %1056 = @func_3305() /* ty=float32 */;
  (%1052, %1053, %1054, meta[relay.Constant][38] /* ty=Tensor[(168), float32] */, %1055, %1056)
}

def @func_17006() -> (Tensor[(5, 7, 14), bool],) {
  %1057 = @func_9973() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], float32, float32, float32, Tensor[(5, 7, 14), float64]) */;
  %1058 = %1057.1;
  (%1058,)
}

def @func_6007(%var_5969: Tensor[(16, 2, 4), float32]) -> Tensor[(16, 2, 4), float32] {
  %1059 = cast(%var_5969, dtype="float32") /* ty=Tensor[(16, 2, 4), float32] */;
  cosh(%1059) /* ty=Tensor[(16, 2, 4), float32] */
}

def @func_14108() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) {
  %1060 = @func_8002() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1061 = @func_6683() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(490), float32]) */;
  %1062 = @func_9312() /* ty=(float32,) */;
  %1063 = %1060.2;
  %1064 = @func_6097() /* ty=Tensor[(5, 7, 14), bool] */;
  %1065 = %1061.0;
  %1066 = %1062.0;
  (%1063, %1064, %1065, %1066)
}

def @func_13925(%var_13894: Tensor[(792), float64]) -> (Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(50), int64], Tensor[(8, 11, 9), float64], Tensor[(792), float64], float32, Tensor[(490), float32]) {
  %1067 = @func_10656() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) */;
  %1068 = cast(meta[relay.Constant][39] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %1069 = reshape(%1068, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), int64] */;
  %1070 = @func_8122(%1069) /* ty=(Tensor[(?, 10, 5), int64], Tensor[(5, 7, 14), float32], Tensor[(168), float32]) */;
  %1071 = cast(%var_13894, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1072 = reshape(%1071, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %1073 = @func_12340() /* ty=(float32, Tensor[(5, 7, 14), bool], float32) */;
  %1074 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %1075 = %1067.2;
  %1076 = %1070.2;
  %1077 = @func_11253(%1072) /* ty=Tensor[(8, 11, 9), float64] */;
  %1078 = %1073.0;
  %1079 = %1074.0;
  (%1075, %1076, meta[relay.Constant][39] /* ty=Tensor[(50), int64] */, %1077, %var_13894, %1078, %1079)
}

def @func_18723() -> (float32, Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) {
  %1080 = @func_8381() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1081 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
  %1082 = @func_12445() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1083 = @func_14633() /* ty=(Tensor[(490), bool], Tensor[(8, 15, 1), float32]) */;
  %1084 = @func_12066() /* ty=float32 */;
  %1085 = %1080.1;
  %1086 = %1081.3;
  %1087 = %1082.0;
  %1088 = %1083.0;
  %1089 = @func_17049() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1084, %1085, %1086, %1087, %1088, %1089)
}

def @func_15757() -> (Tensor[(8, 15, 1), uint16], float32, Tensor[(5, 7, 14), bool]) {
  %1090 = @func_6354() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) */;
  %1091 = @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1092 = %1090.1;
  %1093 = @func_15298() /* ty=float32 */;
  %1094 = %1091.0;
  (%1092, %1093, %1094)
}

def @func_5648() -> Tensor[(5, 7, 14), float64] {
  %1095 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %1096 = %1095.1;
  %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  erf(%1097) /* ty=Tensor[(5, 7, 14), float64] */
}

def @func_13147() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) {
  %1098 = @func_8675() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) */;
  %1099 = cast(meta[relay.Constant][40] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1100 = reshape(%1099, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %1101 = @func_11867(%1100) /* ty=(float32, float32, Tensor[(308), float32], Tensor[(5, 7, 14), bool]) */;
  %1102 = @func_12711() /* ty=(Tensor[(168), float32], Tensor[(14, 3, 7), float64]) */;
  %1103 = %1102.1;
  %1104 = cast(%1103, dtype="float64") /* ty=Tensor[(14, 3, 7), float64] */;
  %1105 = %1098.2;
  %1106 = %1101.3;
  %1107 = rsqrt(%1104) /* ty=Tensor[(14, 3, 7), float64] */;
  (%1105, %1106, meta[relay.Constant][40] /* ty=Tensor[(308), float32] */, %1107)
}

def @func_5536() -> (float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) {
  %1108 = @func_3870() /* ty=(float32,) */;
  %1109 = cast(meta[relay.Constant][41] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1110 = reshape(%1109, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1111 = @func_3933(%1110) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) */;
  %1112 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %1113 = %1108.0;
  %1114 = %1111.0;
  %1115 = %1112.3;
  (%1113, %1114, meta[relay.Constant][41] /* ty=Tensor[(168), float32] */, %1115)
}

def @func_5083(%var_5074: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), int16], Tensor[(5, 7, 14), bool]) {
  %1116 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %1117 = cast(%var_5074, dtype="int16") /* ty=Tensor[(5, 7, 14), int16] */;
  %1118 = shape_of(%1116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1119 = cast(%1116, dtype="int16") /* ty=Tensor[(5, 7, 14), int16] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1121 = @func_3686() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %1122 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %1123 = add(%1119, %1120) /* ty=Tensor[(5, 7, 14), int16] */;
  %1124 = %1121.1;
  (%1122, %1123, %1124)
}

def @func_13337() -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(5, 7, 14), float32]) {
  %1125 = @func_9613() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(308), float32]) */;
  %1126 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %1127 = cast(%1126, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1128 = reshape(%1127, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %1129 = @func_12825() /* ty=float32 */;
  %1130 = @func_4454() /* ty=float32 */;
  %1131 = %1125.3;
  %1132 = @func_5425(%1128) /* ty=Tensor[(5, 7, 14), float32] */;
  (%1129, %1130, %1126, %1131, %1132)
}

def @func_12395(%var_12389: int32, %var_12390: Tensor[(9, 6, 13), int32]) -> Tensor[(9, 6, 13), bool] {
  %1133 = cast(%var_12389, dtype="bool") /* ty=bool */;
  %1134 = cast(%var_12390, dtype="bool") /* ty=Tensor[(9, 6, 13), bool] */;
  not_equal(%1133, %1134) /* ty=Tensor[(9, 6, 13), bool] */
}

def @main(%var_19071: Tensor[(14, 16, 4), float32]) -> Tensor[(14, 16, 4), int16] {
  %1135 = @func_12066() /* ty=float32 */;
  %1136 = cast(%1135, dtype="int16") /* ty=int16 */;
  %1137 = cast(%var_19071, dtype="int16") /* ty=Tensor[(14, 16, 4), int16] */;
  maximum(%1136, %1137) /* ty=Tensor[(14, 16, 4), int16] */
}

def @func_16796() -> Tensor[(5, 7, 14), bool] {
  %1138 = @func_12445() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1138.0
}

def @func_2930() -> Tensor[(5, 7, 14), bool] {
  @func_1525() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_16470() -> (Tensor[(5, 7, 14), bool],) {
  %1139 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1139,)
}

def @func_10266() -> (Tensor[(8, 15, 1), float32],) {
  %1140 = @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1141 = %1140.0;
  %1142 = cast(%1141, dtype="float32") /* ty=Tensor[(8, 15, 1), float32] */;
  %1143 = sin(%1142) /* ty=Tensor[(8, 15, 1), float32] */;
  (%1143,)
}

def @func_10656() -> (Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) {
  %1144 = @func_4510() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %1145 = @func_5812() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
  %1146 = cast(meta[relay.Constant][42] /* ty=Tensor[(50, 1), int64] */, dtype="int64") /* ty=Tensor[(50, 1), int64] */;
  %1147 = reshape(%1146, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), int64] */;
  %1148 = @func_8122(%1147) /* ty=(Tensor[(?, 10, 5), int64], Tensor[(5, 7, 14), float32], Tensor[(168), float32]) */;
  %1149 = %1144.0;
  %1150 = %1145.1;
  %1151 = %1148.1;
  (%1149, %1150, %1151, meta[relay.Constant][42] /* ty=Tensor[(50, 1), int64] */)
}

def @func_8023() -> (float32,) {
  %1152 = @func_1907() /* ty=float32 */;
  (%1152,)
}

def @func_11152() -> float32 {
  %1153 = @func_8962() /* ty=(float32, float32) */;
  %1153.0
}

def @func_17151() -> (float32, float32) {
  %1154 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %1155 = %1154.1;
  %1156 = @func_15894() /* ty=float32 */;
  (%1155, %1156)
}

def @func_14093() -> (Tensor[(8, 15, 5), float64],) {
  %1157 = @func_10471() /* ty=(Tensor[(8, 15, 5), float64],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_3487() -> (float32,) {
  %1159 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %1160 = %1159.0;
  (%1160,)
}

def @func_10955(%var_10922: Tensor[(308), float32]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) {
  %1161 = @func_2663() /* ty=(float32,) */;
  %1162 = cast(%var_10922, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1163 = reshape(%1162, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %1164 = @func_10088(%1163) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(308), float32]) */;
  %1165 = @func_10144() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %1166 = %1161.0;
  %1167 = %1164.0;
  %1168 = %1165.0;
  (%1166, %1167, %var_10922, %1168)
}

def @func_6683() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(490), float32]) {
  %1169 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %1170 = @func_4360() /* ty=Tensor[(5, 7, 14), bool] */;
  %1171 = @func_5648() /* ty=Tensor[(5, 7, 14), float64] */;
  %1172 = %1169.0;
  (%1170, %1171, %1172)
}

def @func_10785() -> (float32,) {
  %1173 = @func_3855() /* ty=float32 */;
  (%1173,)
}

def @func_16223() -> Tensor[(5, 7, 14), bool] {
  %1174 = @func_8002() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1174.2
}

def @func_13937() -> (Tensor[(5, 7, 14), bool],) {
  %1175 = @func_8002() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1176 = %1175.1;
  (%1176,)
}

def @func_15709(%var_15700: Tensor[(308, 1), float32]) -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(308, 1), float32]) {
  %1177 = @func_13055() /* ty=(float32, float32) */;
  %1178 = @func_7935() /* ty=(float32,) */;
  %1179 = @func_6274() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %1180 = cast(%var_15700, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %1181 = reshape(%1180, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %1182 = @func_8200(%1181) /* ty=(Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154, 1), float32], Tensor[(154, 2), float32], Tensor[(5, 7, 14), bool]) */;
  %1183 = %1177.0;
  %1184 = %1178.0;
  %1185 = %1179.1;
  %1186 = %1182.1;
  (%1183, %1184, %1185, %1186, %var_15700)
}

def @func_4421() -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) {
  %1187 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %1188 = @func_3305() /* ty=float32 */;
  %1189 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1187, %1188, %1189)
}

def @func_1386(%var_1365: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32]) {
  %1190 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %1191 = cast(%var_1365, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %1192 = shape_of(%1190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1193 = cast(%1190, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %1194 = dyn.reshape(%1191, %1192, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1195 = cast(-8.8434f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1196 = reshape(%1195, newshape=[]) /* ty=float32 */;
  %1197 = @func_325(%1196) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1198 = cast(-8.8434f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1199 = reshape(%1198, newshape=[]) /* ty=float32 */;
  %1200 = @func_325(%1199) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1201 = floor_divide(%1193, %1194) /* ty=Tensor[(5, 7, 14), float64] */;
  %1202 = %1197.0;
  %1203 = %1200.0;
  (%1201, %1202, -8.8434f /* ty=float32 */, %1203)
}

def @func_6950() -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) {
  %1204 = @func_6636() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1205 = %1204.0;
  %1206 = cast(%1205, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1207 = reshape(%1206, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %1208 = @func_1610() /* ty=float32 */;
  %1209 = @func_5425(%1207) /* ty=Tensor[(5, 7, 14), float32] */;
  %1210 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1205, %1208, %1209, %1210)
}

def @func_7817() -> (float32, float32) {
  %1211 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
  %1212 = @func_4454() /* ty=float32 */;
  %1213 = %1211.3;
  (%1212, %1213)
}

def @func_17428() -> (float32,) {
  %1214 = @func_7574() /* ty=(float32,) */;
  %1215 = %1214.0;
  (%1215,)
}

def @func_6370() -> Tensor[(5, 7, 14), bool] {
  %1216 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1216.0
}

def @func_17436() -> Tensor[(14, 3, 7), float64] {
  %1217 = @func_11552() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %1217.0
}

def @func_1838() -> Tensor[(5, 7, 14), bool] {
  @func_1686() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_1935(%var_1921: Tensor[(5, 7, 14), bool], %var_1928: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) {
  %1218 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %1219 = %1218.0;
  %1220 = cast(%var_1921, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1221 = shape_of(%1219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1222 = cast(%1219, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1224 = cast(%var_1928, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1225 = reshape(%1224, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %1226 = @func_1779(%1225) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %1227 = cast(%var_1928, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1228 = logical_and(%1222, %1223) /* ty=Tensor[(5, 7, 14), bool] */;
  %1229 = %1226.0;
  %1230 = asinh(%1227) /* ty=Tensor[(154), float64] */;
  (%1228, %1229, %1230)
}

def @func_14447() -> (float32,) {
  %1231 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
  %1232 = %1231.0;
  (%1232,)
}

def @func_10388() -> (float32,) {
  %1233 = @func_7541() /* ty=(float32, float32) */;
  %1234 = %1233.1;
  (%1234,)
}

def @func_14856(%var_14840: Tensor[(2, 15, 1), float32]) -> (Tensor[(2, 15, 1), bool], Tensor[(2, 15, 1), int8]) {
  %1235 = @func_2663() /* ty=(float32,) */;
  %1236 = %1235.0;
  %1237 = @func_12095() /* ty=(float32,) */;
  %1238 = %1237.0;
  %1239 = cast(%1238, dtype="float32") /* ty=float32 */;
  %1240 = cast(%var_14840, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
  %1241 = divide(%1239, %1240) /* ty=Tensor[(2, 15, 1), float32] */;
  %1242 = cast(%1236, dtype="bool") /* ty=bool */;
  %1243 = cast(%1241, dtype="bool") /* ty=Tensor[(2, 15, 1), bool] */;
  %1244 = cast(%1236, dtype="int8") /* ty=int8 */;
  %1245 = cast(%1241, dtype="int8") /* ty=Tensor[(2, 15, 1), int8] */;
  %1246 = less_equal(%1242, %1243) /* ty=Tensor[(2, 15, 1), bool] */;
  %1247 = bitwise_or(%1244, %1245) /* ty=Tensor[(2, 15, 1), int8] */;
  (%1246, %1247)
}

def @func_12825() -> float32 {
  %1248 = @func_4743() /* ty=(float32, float32) */;
  %1248.0
}

def @func_15970() -> (float32, Tensor[(490), bool]) {
  %1249 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %1250 = @func_15083() /* ty=float32 */;
  %1251 = %1249.2;
  (%1250, %1251)
}

def @func_16962() -> (Tensor[(5, 7, 14), bool], Tensor[(168), float32]) {
  %1252 = @func_14535() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64], Tensor[(8, 15, 1), float32]) */;
  %1253 = @func_12711() /* ty=(Tensor[(168), float32], Tensor[(14, 3, 7), float64]) */;
  %1254 = %1252.0;
  %1255 = %1253.0;
  (%1254, %1255)
}

def @func_17719() -> Tensor[(5, 7, 14), bool] {
  %1256 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1256.0
}

def @func_16514() -> (float32, Tensor[(42, 4), bool]) {
  %1257 = @func_8675() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) */;
  %1258 = @func_14375() /* ty=float32 */;
  %1259 = %1257.6;
  (%1258, %1259)
}

def @func_8294() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) {
  %1260 = @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1261 = @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1262 = %1260.0;
  %1263 = %1261.0;
  (%1262, %1263)
}

def @func_6869() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
  %1264 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1265 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %1266 = %1264.0;
  %1267 = %1265.1;
  (%1266, %1267)
}

def @func_16049(%var_16047: Tensor[(1188), float32]) -> (float32, Tensor[(11, 9, 12), float32], Tensor[(1188), float32]) {
  %1268 = @func_9312() /* ty=(float32,) */;
  %1269 = cast(%var_16047, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1270 = reshape(%1269, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), float32] */;
  %1271 = @func_4066(%1270) /* ty=(float32, Tensor[(490), float32], Tensor[(22, 7), float32], Tensor[(168), float32], Tensor[(11, 9, 12), float32], float32) */;
  %1272 = %1268.0;
  %1273 = %1271.4;
  (%1272, %1273, %var_16047)
}

def @func_18127() -> float32 {
  %1274 = @func_15757() /* ty=(Tensor[(8, 15, 1), uint16], float32, Tensor[(5, 7, 14), bool]) */;
  %1274.1
}

def @func_14045(%var_14037: Tensor[(308), float32]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(8, 15, 1), float32]) {
  %1275 = @func_3870() /* ty=(float32,) */;
  %1276 = cast(%var_14037, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1277 = reshape(%1276, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %1278 = @func_9425(%1277) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(308), float32]) */;
  %1279 = @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1280 = %1275.0;
  %1281 = %1278.1;
  %1282 = %1279.0;
  (%1280, %1281, %var_14037, %1282)
}

def @func_2483() -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %1283 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %1284 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %1285 = %1283.1;
  %1286 = %1284.1;
  %1287 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1285, %1286, %1287)
}

def @func_11583() -> Tensor[(5, 7, 14), bool] {
  @func_6390() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_7574() -> (float32,) {
  %1288 = @func_3855() /* ty=float32 */;
  (%1288,)
}

def @func_11127() -> Tensor[(490), float32] {
  %1289 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %1289.0
}

def @func_11029(%var_10997: Tensor[(6, 13, 5), float64]) -> (Tensor[(154), float32], Tensor[(6, 13, 5), int16]) {
  %1290 = cast(%var_10997, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
  %1291 = tan(%1290) /* ty=Tensor[(6, 13, 5), float64] */;
  %1292 = cast(%var_10997, dtype="int16") /* ty=Tensor[(6, 13, 5), int16] */;
  %1293 = shape_of(%1291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1294 = cast(%1291, dtype="int16") /* ty=Tensor[(6, 13, 5), int16] */;
  %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1296 = @func_8502() /* ty=Tensor[(154), float32] */;
  %1297 = bitwise_or(%1294, %1295) /* ty=Tensor[(6, 13, 5), int16] */;
  (%1296, %1297)
}

def @func_5577() -> (Tensor[(5, 7, 14), float32],) {
  %1298 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1299 = %1298.0;
  %1300 = cast(%1299, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %1301 = atan(%1300) /* ty=Tensor[(5, 7, 14), float32] */;
  (%1301,)
}

def @func_7935() -> (float32,) {
  %1302 = @func_6950() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
  %1303 = %1302.1;
  (%1303,)
}

def @func_15894() -> float32 {
  %1304 = @func_11750() /* ty=(float32,) */;
  %1304.0
}

def @func_4242() -> float32 {
  @func_3855() /* ty=float32 */
}

def @func_10297() -> (float32, Tensor[(5, 7, 14), bool]) {
  %1305 = @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1306 = @func_3855() /* ty=float32 */;
  %1307 = %1305.0;
  (%1306, %1307)
}

def @func_6187(%var_6183: Tensor[(672), int64]) -> (float32, Tensor[(14, 3, 16), bool], Tensor[(672), int64]) {
  %1308 = cast(%var_6183, dtype="int64") /* ty=Tensor[(672), int64] */;
  %1309 = reshape(%1308, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), int64] */;
  %1310 = @func_3149(%1309) /* ty=(Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) */;
  %1311 = @func_4454() /* ty=float32 */;
  %1312 = %1310.0;
  (%1311, %1312, %var_6183)
}

def @func_18098(%var_18088: Tensor[(672), int64]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(672), int64]) {
  %1313 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %1314 = cast(%var_18088, dtype="int64") /* ty=Tensor[(672), int64] */;
  %1315 = reshape(%1314, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), int64] */;
  %1316 = @func_3149(%1315) /* ty=(Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) */;
  %1317 = @func_11152() /* ty=float32 */;
  %1318 = %1313.0;
  %1319 = %1316.3;
  (%1317, %1318, %1319, %var_18088)
}

def @func_15549() -> (Tensor[(5, 7, 14), bool],) {
  %1320 = @func_10692() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %1321 = %1320.2;
  (%1321,)
}

def @func_18842(%var_18827: Tensor[(22, 7), float32]) -> (Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(154), float32], Tensor[(22, 7), float32]) {
  %1322 = @func_10297() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %1323 = @func_7541() /* ty=(float32, float32) */;
  %1324 = @func_12095() /* ty=(float32,) */;
  %1325 = @func_12095() /* ty=(float32,) */;
  %1326 = cast(%var_18827, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %1327 = reshape(%1326, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1328 = @func_11398(%1327) /* ty=(float32, Tensor[(5, 7, 14), float64], Tensor[(154), float32]) */;
  %1329 = %1322.1;
  %1330 = %1323.1;
  %1331 = %1324.0;
  %1332 = %1325.0;
  %1333 = %1328.2;
  (%1329, %1330, %1331, %1332, %1333, %var_18827)
}

def @func_6354() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) {
  %1334 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %1335 = @func_3748() /* ty=Tensor[(8, 15, 1), uint16] */;
  (%1334, %1335)
}

def @func_11750() -> (float32,) {
  %1336 = @func_9200() /* ty=float32 */;
  (%1336,)
}

def @func_15114() -> (float32,) {
  %1337 = @func_4663() /* ty=float32 */;
  (%1337,)
}

def @func_11867(%var_11851: Tensor[(308), float32]) -> (float32, float32, Tensor[(308), float32], Tensor[(5, 7, 14), bool]) {
  %1338 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %1339 = cast(%var_11851, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1340 = reshape(%1339, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %1341 = @func_10955(%1340) /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) */;
  %1342 = @func_8782() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(168), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1343 = %1338.0;
  %1344 = %1341.0;
  %1345 = %1342.4;
  (%1343, %1344, %var_11851, %1345)
}

def @func_3149(%var_3129: Tensor[(14, 3, 16), int64]) -> (Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) {
  %1346 = cast(%var_3129, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
  %1347 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(14, 3, 16), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 3, 16), int64] */, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1350 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %1351 = less(%1348, %1349) /* ty=Tensor[(14, 3, 16), bool] */;
  %1352 = %1350.5;
  %1353 = @func_1907() /* ty=float32 */;
  %1354 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1351, %1352, %1353, %1354)
}

def @func_17848() -> (Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) {
  %1355 = @func_4706() /* ty=(Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) */;
  %1356 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %1357 = %1355.0;
  %1358 = %1356.0;
  (%1357, %1358)
}

def @func_3379() -> (Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) {
  %1359 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 3, 7), float64] */;
  %1360 = asinh(%1359) /* ty=Tensor[(14, 3, 7), float64] */;
  %1361 = @func_2930() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1360, %1361)
}

def @func_7764() -> (float32,) {
  %1362 = @func_3870() /* ty=(float32,) */;
  %1363 = %1362.0;
  (%1363,)
}

def @func_14363() -> (float32,) {
  %1364 = @func_11152() /* ty=float32 */;
  (%1364,)
}

def @func_12250() -> (Tensor[(154), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %1365 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
  %1366 = @func_7631() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1367 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
  %1368 = %1365.4;
  %1369 = %1366.0;
  %1370 = %1367.4;
  (%1368, %1369, %1370)
}

def @func_7541() -> (float32, float32) {
  %1371 = @func_5910() /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(154), float32], float32, Tensor[(154, 1), float32]) */;
  %1372 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %1373 = %1371.4;
  %1374 = %1372.5;
  (%1373, %1374)
}

def @func_10433(%var_10390: Tensor[(1, 12, 16), float64]) -> (Tensor[(1, 12, 16), float64], Tensor[(490), bool]) {
  %1375 = cast(%var_10390, dtype="float64") /* ty=Tensor[(1, 12, 16), float64] */;
  %1376 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %1377 = cos(%1375) /* ty=Tensor[(1, 12, 16), float64] */;
  %1378 = %1376.0;
  (%1377, %1378)
}

def @func_12375() -> (float32, Tensor[(5, 7, 14), bool]) {
  %1379 = @func_6950() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
  %1380 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %1381 = %1379.1;
  %1382 = %1380.2;
  (%1381, %1382)
}

def @func_8122(%var_8088: Tensor[(1, 10, 5), int64]) -> (Tensor[(?, 10, 5), int64], Tensor[(5, 7, 14), float32], Tensor[(168), float32]) {
  %1383 = cast(%var_8088, dtype="int64") /* ty=Tensor[(1, 10, 5), int64] */;
  %1384 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(1, 10, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1385 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 10, 5), int64] */, dtype="int64") /* ty=Tensor[(1, 10, 5), int64] */;
  %1386 = dyn.reshape(%1383, %1384, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1387 = cast(meta[relay.Constant][46] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1388 = reshape(%1387, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float32] */;
  %1389 = @func_3333(%1388) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) */;
  %1390 = add(%1385, %1386) /* ty=Tensor[(?, 10, 5), int64] */;
  %1391 = %1389.1;
  (%1390, %1391, meta[relay.Constant][46] /* ty=Tensor[(168), float32] */)
}

def @func_3251() -> (float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) {
  %1392 = cast(meta[relay.Constant][47] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %1393 = reshape(%1392, newshape=[490]) /* ty=Tensor[(490), bool] */;
  %1394 = @func_2335(%1393) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */;
  %1395 = @func_1610() /* ty=float32 */;
  %1396 = cast(%1395, dtype="float32") /* ty=float32 */;
  %1397 = reshape(%1396, newshape=[]) /* ty=float32 */;
  %1398 = @func_1151(%1397) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */;
  %1399 = %1394.2;
  %1400 = %1398.4;
  (%1395, %1399, meta[relay.Constant][47] /* ty=Tensor[(490), bool] */, %1400)
}

def @func_8541() -> (Tensor[(5, 7, 14), bool],) {
  %1401 = @func_7806() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1402 = %1401.0;
  (%1402,)
}

def @func_7897() -> (float32,) {
  %1403 = @func_7541() /* ty=(float32, float32) */;
  %1404 = %1403.1;
  (%1404,)
}

def @func_9425(%var_9417: Tensor[(308), float32]) -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(308), float32]) {
  %1405 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %1406 = @func_4421() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %1407 = cast(%var_9417, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1408 = reshape(%1407, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %1409 = @func_8200(%1408) /* ty=(Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154, 1), float32], Tensor[(154, 2), float32], Tensor[(5, 7, 14), bool]) */;
  %1410 = %1405.1;
  %1411 = %1406.2;
  %1412 = %1409.0;
  (%1410, %1411, %1412, %var_9417)
}

def @func_12340() -> (float32, Tensor[(5, 7, 14), bool], float32) {
  %1413 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1414 = @func_7380() /* ty=float32 */;
  %1415 = %1413.2;
  %1416 = @func_12066() /* ty=float32 */;
  (%1414, %1415, %1416)
}

def @func_18624() -> (float32, float32) {
  %1417 = @func_13517() /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float64], float32) */;
  %1418 = @func_18127() /* ty=float32 */;
  %1419 = %1417.3;
  (%1418, %1419)
}

def @func_17950() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %1420 = @func_5395() /* ty=(float32, Tensor[(8, 15, 1), uint16]) */;
  %1421 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1422 = %1420.0;
  %1423 = %1421.0;
  %1424 = @func_11583() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1422, %1423, %1424)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_15866() -> (Tensor[(5, 7, 14), bool],) {
  @func_15864() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_13544(%var_13542: Tensor[(13, 6, 11), float32]) -> (Tensor[(13, 6, 11), float32], Tensor[(490), float32]) {
  @func_13541(%var_13542) /* ty=(Tensor[(13, 6, 11), float32], Tensor[(490), float32]) */
}

def @func_17428() -> (float32,) {
  %0 = @func_7574() /* ty=(float32,) */;
  %1 = %0.0;
  (%1,)
}

def @func_11750() -> (float32,) {
  %2 = @func_9200() /* ty=float32 */;
  (%2,)
}

def @func_11662() -> Tensor[(5, 7, 14), bool] {
  %4 = fn () -> Tensor[(5, 7, 14), bool] {
    %3 = @func_10297() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
    %3.1
  };
  %4() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_10957(%var_10956: Tensor[(308), float32]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) {
  %13 = fn (%var_10922: Tensor[(308), float32]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) {
    %5 = @func_2663() /* ty=(float32,) */;
    %6 = cast(%var_10922, dtype="float32") /* ty=Tensor[(308), float32] */;
    %7 = reshape(%6, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %8 = @func_10088(%7) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(308), float32]) */;
    %9 = @func_10144() /* ty=(Tensor[(14, 3, 7), float64],) */;
    %10 = %5.0;
    %11 = %8.0;
    %12 = %9.0;
    (%10, %11, %var_10922, %12)
  };
  %13(%var_10956) /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) */
}

def @func_11332(%var_11330: Tensor[(6, 8, 9), float64]) -> Tensor[(6, 8, 9), float64] {
  @func_11329(%var_11330) /* ty=Tensor[(6, 8, 9), float64] */
}

def @func_12341() -> (float32, Tensor[(5, 7, 14), bool], float32) {
  %18 = fn () -> (float32, Tensor[(5, 7, 14), bool], float32) {
    %14 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %15 = @func_7380() /* ty=float32 */;
    %16 = %14.2;
    %17 = @func_12066() /* ty=float32 */;
    (%15, %16, %17)
  };
  %18() /* ty=(float32, Tensor[(5, 7, 14), bool], float32) */
}

def @func_16164() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
  @func_16162() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) */
}

def @func_10299() -> (float32, Tensor[(5, 7, 14), bool]) {
  @func_10297() /* ty=(float32, Tensor[(5, 7, 14), bool]) */
}

def @func_2046(%var_2044: Tensor[(154), float32]) -> (float32, Tensor[(154), float64], Tensor[(154), float32], Tensor[(5, 7, 14), int32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_2043(%var_2044) /* ty=(float32, Tensor[(154), float64], Tensor[(154), float32], Tensor[(5, 7, 14), int32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_2905() -> (Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) {
  @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */
}

def @func_10146() -> (Tensor[(14, 3, 7), float64],) {
  @func_10144() /* ty=(Tensor[(14, 3, 7), float64],) */
}

def @func_2288(%var_2213: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(8, 15, 1), float32], Tensor[(480, 6), float64], float32, Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], float32) {
  %19 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %20 = cast(%19, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %21 = cast(%var_2213, dtype="float32") /* ty=Tensor[(154), float32] */;
  %22 = reshape(%20, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %23 = reshape(%21, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %24 = @func_1935(%22, %23) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(480, 6), float64] */, dtype="float64") /* ty=Tensor[(480, 6), float64] */;
  %26 = cast(-8.4363f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %27 = reshape(%25, newshape=[16, 12, 15]) /* ty=Tensor[(16, 12, 15), float64] */;
  %28 = reshape(%26, newshape=[]) /* ty=float32 */;
  %29 = @func_635(%27, %28) /* ty=(Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) */;
  %30 = cast(%19, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %31 = sqrt(%30) /* ty=Tensor[(5, 7, 14), float32] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %33 = cast(-8.4363f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %34 = reshape(%33, newshape=[]) /* ty=float32 */;
  %35 = @func_325(%34) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %36 = %35.0;
  %37 = cast(%var_2213, dtype="uint8") /* ty=Tensor[(154), uint8] */;
  %38 = cast(%36, dtype="uint8") /* ty=Tensor[(8, 15, 1), uint8] */;
  %39 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %40 = %24.1;
  %41 = %29.1;
  %42 = tan(%32) /* ty=Tensor[(5, 7, 14), float64] */;
  %43 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %44 = bitwise_xor(%37, %38) /* ty=Tensor[(8, 15, 154), uint8] */;
  %45 = @func_1907() /* ty=float32 */;
  (%39, %40, %41, meta[relay.Constant][0] /* ty=Tensor[(480, 6), float64] */, -8.4363f /* ty=float32 */, %42, %43, %44, %45)
}

def @func_6761(%var_6760: Tensor[(154, 2), float32]) -> (Tensor[(154, 2), bool], float32, Tensor[(154, 1), float32]) {
  %54 = fn (%var_6743: Tensor[(154, 2), float32]) -> (Tensor[(154, 2), bool], float32, Tensor[(154, 1), float32]) {
    %46 = @func_4139() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], Tensor[(154, 1), float32], float32, Tensor[(154, 1), float64]) */;
    %47 = %46.3;
    %48 = cast(%47, dtype="bool") /* ty=Tensor[(154, 1), bool] */;
    %49 = cast(%var_6743, dtype="bool") /* ty=Tensor[(154, 2), bool] */;
    %50 = cast(%47, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
    %51 = less(%48, %49) /* ty=Tensor[(154, 2), bool] */;
    %52 = @func_4663() /* ty=float32 */;
    %53 = acosh(%50) /* ty=Tensor[(154, 1), float32] */;
    (%51, %52, %53)
  };
  %54(%var_6760) /* ty=(Tensor[(154, 2), bool], float32, Tensor[(154, 1), float32]) */
}

def @func_16700() -> (Tensor[(5, 7, 14), bool], float32) {
  @func_16698() /* ty=(Tensor[(5, 7, 14), bool], float32) */
}

def @func_9686() -> float32 {
  %55 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %55.0
}

def @func_17107(%var_17105: Tensor[(6, 2, 15), float32]) -> Tensor[(6, 2, 15), int8] {
  @func_17104(%var_17105) /* ty=Tensor[(6, 2, 15), int8] */
}

def @func_9615() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(308), float32]) {
  @func_9613() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(308), float32]) */
}

def @func_6049() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) {
  %56 = @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %57 = @func_3487() /* ty=(float32,) */;
  %58 = @func_4323() /* ty=Tensor[(5, 7, 14), bool] */;
  %59 = %56.0;
  %60 = %57.0;
  (%58, %59, %60)
}

def @func_11401(%var_11399: Tensor[(154), float32]) -> (float32, Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  @func_11398(%var_11399) /* ty=(float32, Tensor[(5, 7, 14), float64], Tensor[(154), float32]) */
}

def @func_1386(%var_1365: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32]) {
  %61 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %62 = cast(%var_1365, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%61, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %66 = cast(-8.8434f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %67 = reshape(%66, newshape=[]) /* ty=float32 */;
  %68 = @func_325(%67) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %69 = cast(-8.8434f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %70 = reshape(%69, newshape=[]) /* ty=float32 */;
  %71 = @func_325(%70) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %72 = floor_divide(%64, %65) /* ty=Tensor[(5, 7, 14), float64] */;
  %73 = %68.0;
  %74 = %71.0;
  (%72, %73, -8.8434f /* ty=float32 */, %74)
}

def @func_7632() -> (Tensor[(5, 7, 14), bool],) {
  %77 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %75 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %76 = %75.0;
    (%76,)
  };
  %77() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_8962() -> (float32, float32) {
  %78 = @func_4877() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) */;
  %79 = @func_3487() /* ty=(float32,) */;
  %80 = %78.0;
  %81 = %79.0;
  (%80, %81)
}

def @func_17436() -> Tensor[(14, 3, 7), float64] {
  %82 = @func_11552() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %82.0
}

def @func_14679() -> float32 {
  @func_14677() /* ty=float32 */
}

def @func_11256(%var_11254: Tensor[(8, 11, 9), float64]) -> Tensor[(8, 11, 9), float64] {
  @func_11253(%var_11254) /* ty=Tensor[(8, 11, 9), float64] */
}

def @func_17430() -> (float32,) {
  @func_17428() /* ty=(float32,) */
}

def @func_10268() -> (Tensor[(8, 15, 1), float32],) {
  @func_10266() /* ty=(Tensor[(8, 15, 1), float32],) */
}

def @func_1046(%var_1024: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %83 = cast(meta[relay.Constant][1] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %84 = cast(%var_1024, dtype="float32") /* ty=float32 */;
  %85 = reshape(%83, newshape=[16, 12, 15]) /* ty=Tensor[(16, 12, 15), float64] */;
  %86 = reshape(%84, newshape=[]) /* ty=float32 */;
  %87 = @func_635(%85, %86) /* ty=(Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) */;
  %88 = cast(%var_1024, dtype="float32") /* ty=float32 */;
  %89 = reshape(%88, newshape=[]) /* ty=float32 */;
  %90 = @func_325(%89) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %91 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %92 = %87.0;
  %93 = %90.0;
  %94 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %95 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%91, %92, meta[relay.Constant][1] /* ty=Tensor[(2880), float64] */, %var_1024, %93, %94, %95)
}

def @func_4360() -> Tensor[(5, 7, 14), bool] {
  %96 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
  %96.0
}

def @func_6683() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(490), float32]) {
  %97 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %98 = @func_4360() /* ty=Tensor[(5, 7, 14), bool] */;
  %99 = @func_5648() /* ty=Tensor[(5, 7, 14), float64] */;
  %100 = %97.0;
  (%98, %99, %100)
}

def @func_12036() -> (Tensor[(5, 7, 14), bool],) {
  %101 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%101,)
}

def @func_11202(%var_11200: Tensor[(4, 3, 9), float32]) -> (Tensor[(4, 3, 9), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  @func_11199(%var_11200) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) */
}

def @func_5440() -> (Tensor[(5, 7, 14), bool],) {
  @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_14109() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) {
  %109 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) {
    %102 = @func_8002() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %103 = @func_6683() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(490), float32]) */;
    %104 = @func_9312() /* ty=(float32,) */;
    %105 = %102.2;
    %106 = @func_6097() /* ty=Tensor[(5, 7, 14), bool] */;
    %107 = %103.0;
    %108 = %104.0;
    (%105, %106, %107, %108)
  };
  %109() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) */
}

def @func_1686() -> Tensor[(5, 7, 14), bool] {
  @func_1525() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_5016() -> (Tensor[(5, 7, 14), bool],) {
  %112 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %110 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %111 = %110.0;
    (%111,)
  };
  %112() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_9428(%var_9426: Tensor[(308), float32]) -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(308), float32]) {
  @func_9425(%var_9426) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(308), float32]) */
}

def @func_17849() -> (Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) {
  %117 = fn () -> (Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) {
    %113 = @func_4706() /* ty=(Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) */;
    %114 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
    %115 = %113.0;
    %116 = %114.0;
    (%115, %116)
  };
  %117() /* ty=(Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) */
}

def @func_14364() -> (float32,) {
  %119 = fn () -> (float32,) {
    %118 = @func_11152() /* ty=float32 */;
    (%118,)
  };
  %119() /* ty=(float32,) */
}

def @func_13055() -> (float32, float32) {
  %120 = @func_8962() /* ty=(float32, float32) */;
  %121 = %120.1;
  %122 = cast(%121, dtype="float32") /* ty=float32 */;
  %123 = reshape(%122, newshape=[]) /* ty=float32 */;
  %124 = @func_1151(%123) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */;
  %125 = %124.3;
  (%121, %125)
}

def @func_13611() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(9, 6, 13), bool], Tensor[(702), int32]) {
  @func_13609() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(9, 6, 13), bool], Tensor[(702), int32]) */
}

def @func_15115() -> (float32,) {
  %127 = fn () -> (float32,) {
    %126 = @func_4663() /* ty=float32 */;
    (%126,)
  };
  %127() /* ty=(float32,) */
}

def @func_16225() -> Tensor[(5, 7, 14), bool] {
  @func_16223() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_9577() -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float64]) {
  %128 = @func_7447() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %129 = @func_2663() /* ty=(float32,) */;
  %130 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %131 = %128.0;
  %132 = %129.0;
  %133 = %130.1;
  (%131, %132, %133)
}

def @func_3307() -> float32 {
  @func_3305() /* ty=float32 */
}

def @func_7897() -> (float32,) {
  %134 = @func_7541() /* ty=(float32, float32) */;
  %135 = %134.1;
  (%135,)
}

def @func_14375() -> float32 {
  @func_1907() /* ty=float32 */
}

def @func_1389(%var_1387: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32]) {
  @func_1386(%var_1387) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32]) */
}

def @func_1688() -> Tensor[(5, 7, 14), bool] {
  @func_1686() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_8471() -> (Tensor[(5, 7, 14), bool], float32) {
  %136 = @func_6049() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) */;
  %137 = @func_4990() /* ty=Tensor[(5, 7, 14), bool] */;
  %138 = %136.2;
  (%137, %138)
}

def @func_15501() -> (float32, float32) {
  %142 = fn () -> (float32, float32) {
    %139 = @func_11887() /* ty=(float32,) */;
    %140 = %139.0;
    %141 = @func_14375() /* ty=float32 */;
    (%140, %141)
  };
  %142() /* ty=(float32, float32) */
}

def @func_16449() -> (Tensor[(5, 7, 14), bool],) {
  @func_16447() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_2172(%var_2171: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) {
  %161 = fn (%var_2138: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) {
    %143 = cast(%var_2138, dtype="float32") /* ty=float32 */;
    %144 = reshape(%143, newshape=[]) /* ty=float32 */;
    %145 = @func_1046(%144) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %146 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
    %147 = cast(%var_2138, dtype="float32") /* ty=float32 */;
    %148 = reshape(%147, newshape=[]) /* ty=float32 */;
    %149 = @func_325(%148) /* ty=(Tensor[(8, 15, 1), float32],) */;
    %150 = %146.1;
    %151 = cast(%150, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %152 = cast(meta[relay.Constant][2] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %153 = reshape(%151, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
    %154 = reshape(%152, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %155 = @func_1935(%153, %154) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
    %156 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
    %157 = %145.1;
    %158 = %149.0;
    %159 = %155.1;
    %160 = @func_1907() /* ty=float32 */;
    (%156, %157, %var_2138, %150, %158, %159, meta[relay.Constant][2] /* ty=Tensor[(154), float32] */, %160)
  };
  %161(%var_2171) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) */
}

def @func_11519(%var_11517: Tensor[(5, 7, 14), bool], %var_11518: float64) -> (Tensor[(5, 7, 14), uint32], Tensor[(14, 10, 9), float64], float64, Tensor[(1260, 1), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %179 = fn (%var_11429: Tensor[(5, 7, 14), bool], %var_11447: float64) -> (Tensor[(5, 7, 14), uint32], Tensor[(14, 10, 9), float64], float64, Tensor[(1260, 1), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
    %162 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %163 = %162.0;
    %164 = cast(%var_11429, dtype="uint32") /* ty=Tensor[(5, 7, 14), uint32] */;
    %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(3), int32] */;
    %166 = cast(%163, dtype="uint32") /* ty=Tensor[(5, 7, 14), uint32] */;
    %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %168 = cast(%var_11447, dtype="float64") /* ty=float64 */;
    %169 = cast(meta[relay.Constant][3] /* ty=Tensor[(1260, 1), float64] */, dtype="float64") /* ty=Tensor[(1260, 1), float64] */;
    %170 = reshape(%168, newshape=[]) /* ty=float64 */;
    %171 = reshape(%169, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), float64] */;
    %172 = @func_8054(%170, %171) /* ty=(Tensor[(14, 10, 9), float64],) */;
    %173 = @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
    %174 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %175 = left_shift(%166, %167) /* ty=Tensor[(5, 7, 14), uint32] */;
    %176 = %172.0;
    %177 = %173.0;
    %178 = %174.0;
    (%175, %176, %var_11447, meta[relay.Constant][3] /* ty=Tensor[(1260, 1), float64] */, %177, %178)
  };
  %179(%var_11517, %var_11518) /* ty=(Tensor[(5, 7, 14), uint32], Tensor[(14, 10, 9), float64], float64, Tensor[(1260, 1), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_14677() -> float32 {
  @func_3305() /* ty=float32 */
}

def @func_15299() -> float32 {
  %181 = fn () -> float32 {
    %180 = @func_3487() /* ty=(float32,) */;
    %180.0
  };
  %181() /* ty=float32 */
}

def @func_16162() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
  %182 = @func_12952() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %183 = %182.1;
  %184 = cast(%183, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %185 = reshape(%184, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %186 = @func_5425(%185) /* ty=Tensor[(5, 7, 14), float32] */;
  (%183, %186)
}

def @func_17051() -> Tensor[(5, 7, 14), bool] {
  @func_17049() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_10980() -> float32 {
  %187 = @func_10454() /* ty=(float32,) */;
  %187.0
}

def @func_15452() -> (float32, Tensor[(5, 7, 14), bool]) {
  %192 = fn () -> (float32, Tensor[(5, 7, 14), bool]) {
    %188 = @func_13469() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
    %189 = @func_8220() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %190 = %188.0;
    %191 = %189.0;
    (%190, %191)
  };
  %192() /* ty=(float32, Tensor[(5, 7, 14), bool]) */
}

def @func_13925(%var_13894: Tensor[(792), float64]) -> (Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(50), int64], Tensor[(8, 11, 9), float64], Tensor[(792), float64], float32, Tensor[(490), float32]) {
  %193 = @func_10656() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) */;
  %194 = cast(meta[relay.Constant][4] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %195 = reshape(%194, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), int64] */;
  %196 = @func_8122(%195) /* ty=(Tensor[(?, 10, 5), int64], Tensor[(5, 7, 14), float32], Tensor[(168), float32]) */;
  %197 = cast(%var_13894, dtype="float64") /* ty=Tensor[(792), float64] */;
  %198 = reshape(%197, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %199 = @func_12340() /* ty=(float32, Tensor[(5, 7, 14), bool], float32) */;
  %200 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %201 = %193.2;
  %202 = %196.2;
  %203 = @func_11253(%198) /* ty=Tensor[(8, 11, 9), float64] */;
  %204 = %199.0;
  %205 = %200.0;
  (%201, %202, meta[relay.Constant][4] /* ty=Tensor[(50), int64] */, %203, %var_13894, %204, %205)
}

def @func_17379() -> (Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool]) {
  %206 = @func_8165() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64]) */;
  %207 = %206.4;
  %208 = @func_15083() /* ty=float32 */;
  %209 = @func_6390() /* ty=Tensor[(5, 7, 14), bool] */;
  (%207, %208, %209)
}

def @func_7422() -> (Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) {
  %220 = fn () -> (Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) {
    %210 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
    %211 = cast(meta[relay.Constant][5] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %212 = reshape(%211, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %213 = @func_2043(%212) /* ty=(float32, Tensor[(154), float64], Tensor[(154), float32], Tensor[(5, 7, 14), int32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %214 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
    %215 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
    %216 = %210.2;
    %217 = %213.0;
    %218 = %214.0;
    %219 = %215.3;
    (%216, %217, meta[relay.Constant][5] /* ty=Tensor[(154), float32] */, %218, %219)
  };
  %220() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */
}

def @func_11329(%var_11310: Tensor[(6, 8, 9), float64]) -> Tensor[(6, 8, 9), float64] {
  %221 = cast(%var_11310, dtype="float64") /* ty=Tensor[(6, 8, 9), float64] */;
  atanh(%221) /* ty=Tensor[(6, 8, 9), float64] */
}

def @func_8409(%var_8408: Tensor[(9, 8, 14), uint32]) -> Tensor[(9, 8, 14), bool] {
  %226 = fn (%var_8391: Tensor[(9, 8, 14), uint32]) -> Tensor[(9, 8, 14), bool] {
    %222 = cast(%var_8391, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
    %223 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(9, 8, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %224 = cast(meta[relay.Constant][6] /* ty=Tensor[(9, 8, 14), uint32] */, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
    %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%224, %225) /* ty=Tensor[(9, 8, 14), bool] */
  };
  %226(%var_8408) /* ty=Tensor[(9, 8, 14), bool] */
}

def @func_1000() -> Tensor[(5, 7, 14), bool] {
  %227 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 7, 14), uint16] */, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %228 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(5, 7, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 7, 14), uint16] */, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%229, %230) /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_8221() -> (Tensor[(5, 7, 14), bool],) {
  %232 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %231 = @func_6097() /* ty=Tensor[(5, 7, 14), bool] */;
    (%231,)
  };
  %232() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_8784() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(168), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_8782() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(168), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_11029(%var_10997: Tensor[(6, 13, 5), float64]) -> (Tensor[(154), float32], Tensor[(6, 13, 5), int16]) {
  %233 = cast(%var_10997, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
  %234 = tan(%233) /* ty=Tensor[(6, 13, 5), float64] */;
  %235 = cast(%var_10997, dtype="int16") /* ty=Tensor[(6, 13, 5), int16] */;
  %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%234, dtype="int16") /* ty=Tensor[(6, 13, 5), int16] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %239 = @func_8502() /* ty=Tensor[(154), float32] */;
  %240 = bitwise_or(%237, %238) /* ty=Tensor[(6, 13, 5), int16] */;
  (%239, %240)
}

def @func_16798() -> Tensor[(5, 7, 14), bool] {
  @func_16796() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_14824() -> (Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool]) {
  %244 = fn () -> (Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool]) {
    %241 = @func_13726() /* ty=(float32, Tensor[(8, 15, 1), float32]) */;
    %242 = %241.1;
    %243 = @func_1686() /* ty=Tensor[(5, 7, 14), bool] */;
    (%242, %243)
  };
  %244() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool]) */
}

def @func_1782(%var_1780: Tensor[(1, 11, 14), float32]) -> (Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) {
  @func_1779(%var_1780) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */
}

def @func_13419() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %245 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %246 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %247 = @func_12340() /* ty=(float32, Tensor[(5, 7, 14), bool], float32) */;
  %248 = %245.0;
  %249 = %246.0;
  %250 = %247.1;
  (%248, %249, %250)
}

def @func_3821() -> (Tensor[(5, 7, 14), bool],) {
  @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_4664() -> float32 {
  %252 = fn () -> float32 {
    %251 = @func_2663() /* ty=(float32,) */;
    %251.0
  };
  %252() /* ty=float32 */
}

def @func_4454() -> float32 {
  @func_1907() /* ty=float32 */
}

def @func_5578() -> (Tensor[(5, 7, 14), float32],) {
  %257 = fn () -> (Tensor[(5, 7, 14), float32],) {
    %253 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %254 = %253.0;
    %255 = cast(%254, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
    %256 = atan(%255) /* ty=Tensor[(5, 7, 14), float32] */;
    (%256,)
  };
  %257() /* ty=(Tensor[(5, 7, 14), float32],) */
}

def @func_8844() -> Tensor[(490), bool] {
  %259 = fn () -> Tensor[(490), bool] {
    %258 = @func_6243() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */;
    %258.1
  };
  %259() /* ty=Tensor[(490), bool] */
}

def @func_10297() -> (float32, Tensor[(5, 7, 14), bool]) {
  %260 = @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %261 = @func_3855() /* ty=float32 */;
  %262 = %260.0;
  (%261, %262)
}

def @func_13421() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_13419() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_10350() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %263 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %264 = @func_6546() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %265 = %263.0;
  %266 = %264.0;
  (%265, %266)
}

def @func_3870() -> (float32,) {
  %267 = @func_2663() /* ty=(float32,) */;
  %268 = %267.0;
  (%268,)
}

def @func_8024() -> (float32,) {
  %270 = fn () -> (float32,) {
    %269 = @func_1907() /* ty=float32 */;
    (%269,)
  };
  %270() /* ty=(float32,) */
}

def @func_3380() -> (Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) {
  %274 = fn () -> (Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) {
    %271 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 3, 7), float64] */;
    %272 = asinh(%271) /* ty=Tensor[(14, 3, 7), float64] */;
    %273 = @func_2930() /* ty=Tensor[(5, 7, 14), bool] */;
    (%272, %273)
  };
  %274() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */
}

def @func_13928(%var_13926: Tensor[(792), float64]) -> (Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(50), int64], Tensor[(8, 11, 9), float64], Tensor[(792), float64], float32, Tensor[(490), float32]) {
  @func_13925(%var_13926) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(50), int64], Tensor[(8, 11, 9), float64], Tensor[(792), float64], float32, Tensor[(490), float32]) */
}

def @func_3960() -> (Tensor[(490), float32],) {
  %279 = fn () -> (Tensor[(490), float32],) {
    %275 = @func_3792() /* ty=(Tensor[(490), bool],) */;
    %276 = %275.0;
    %277 = cast(%276, dtype="float32") /* ty=Tensor[(490), float32] */;
    %278 = atanh(%277) /* ty=Tensor[(490), float32] */;
    (%278,)
  };
  %279() /* ty=(Tensor[(490), float32],) */
}

def @func_3688() -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) {
  @func_3686() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */
}

def @func_1002() -> Tensor[(5, 7, 14), bool] {
  @func_1000() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_4066(%var_4020: Tensor[(11, 9, 12), float32]) -> (float32, Tensor[(490), float32], Tensor[(22, 7), float32], Tensor[(168), float32], Tensor[(11, 9, 12), float32], float32) {
  %280 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %281 = cast(meta[relay.Constant][10] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %282 = reshape(%281, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %283 = @func_3933(%282) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) */;
  %284 = cast(%var_4020, dtype="float32") /* ty=Tensor[(11, 9, 12), float32] */;
  %285 = erf(%284) /* ty=Tensor[(11, 9, 12), float32] */;
  %286 = cast(%285, dtype="float32") /* ty=Tensor[(11, 9, 12), float32] */;
  %287 = @func_1907() /* ty=float32 */;
  %288 = %280.0;
  %289 = %283.4;
  %290 = sin(%286) /* ty=Tensor[(11, 9, 12), float32] */;
  %291 = @func_3305() /* ty=float32 */;
  (%287, %288, %289, meta[relay.Constant][10] /* ty=Tensor[(168), float32] */, %290, %291)
}

def @func_325(%var_311: float32) -> (Tensor[(8, 15, 1), float32],) {
  %292 = cast(%var_311, dtype="float32") /* ty=float32 */;
  %293 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 1), float32] */;
  %294 = mod(%292, %293) /* ty=Tensor[(8, 15, 1), float32] */;
  (%294,)
}

def @func_2932() -> Tensor[(5, 7, 14), bool] {
  @func_2930() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_5438() -> (Tensor[(5, 7, 14), bool],) {
  %295 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  (%295,)
}

def @func_10787() -> (float32,) {
  @func_10785() /* ty=(float32,) */
}

def @func_13338() -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(5, 7, 14), float32]) {
  %304 = fn () -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(5, 7, 14), float32]) {
    %296 = @func_9613() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(308), float32]) */;
    %297 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
    %298 = cast(%297, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %299 = reshape(%298, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
    %300 = @func_12825() /* ty=float32 */;
    %301 = @func_4454() /* ty=float32 */;
    %302 = %296.3;
    %303 = @func_5425(%299) /* ty=Tensor[(5, 7, 14), float32] */;
    (%300, %301, %297, %302, %303)
  };
  %304() /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(5, 7, 14), float32]) */
}

def @func_4323() -> Tensor[(5, 7, 14), bool] {
  %305 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %305.0
}

def @func_11752() -> (float32,) {
  @func_11750() /* ty=(float32,) */
}

def @func_18274() -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], float32) {
  @func_18272() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], float32) */
}

def @func_17049() -> Tensor[(5, 7, 14), bool] {
  %306 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %306.0
}

def @func_17950() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %307 = @func_5395() /* ty=(float32, Tensor[(8, 15, 1), uint16]) */;
  %308 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %309 = %307.0;
  %310 = %308.0;
  %311 = @func_11583() /* ty=Tensor[(5, 7, 14), bool] */;
  (%309, %310, %311)
}

def @func_8165() -> (Tensor[(5, 7, 14), bool], float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64]) {
  %312 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %313 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %314 = %312.1;
  %315 = @func_4663() /* ty=float32 */;
  %316 = @func_4454() /* ty=float32 */;
  %317 = %313.2;
  %318 = @func_5648() /* ty=Tensor[(5, 7, 14), float64] */;
  (%314, %315, %316, %317, %318)
}

def @func_12795() -> (Tensor[(14, 3, 7), float64], Tensor[(8, 15, 15), float64], Tensor[(490), float32]) {
  %328 = fn () -> (Tensor[(14, 3, 7), float64], Tensor[(8, 15, 15), float64], Tensor[(490), float32]) {
    %319 = @func_7039() /* ty=(Tensor[(14, 3, 7), float64],) */;
    %320 = @func_11996() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
    %321 = %320.1;
    %322 = cast(%321, dtype="float64") /* ty=Tensor[(8, 15, 1), float64] */;
    %323 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 15, 15), float32] */, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
    %324 = @func_6683() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(490), float32]) */;
    %325 = %319.0;
    %326 = divide(%322, %323) /* ty=Tensor[(8, 15, 15), float64] */;
    %327 = %324.2;
    (%325, %326, %327)
  };
  %328() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(8, 15, 15), float64], Tensor[(490), float32]) */
}

def @func_18377() -> (Tensor[(5, 7, 14), bool], float32) {
  %332 = fn () -> (Tensor[(5, 7, 14), bool], float32) {
    %329 = @func_18272() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], float32) */;
    %330 = %329.1;
    %331 = @func_1610() /* ty=float32 */;
    (%330, %331)
  };
  %332() /* ty=(Tensor[(5, 7, 14), bool], float32) */
}

def @func_1907() -> float32 {
  @func_1610() /* ty=float32 */
}

def @func_11253(%var_11250: Tensor[(8, 11, 9), float64]) -> Tensor[(8, 11, 9), float64] {
  %333 = cast(%var_11250, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  cos(%333) /* ty=Tensor[(8, 11, 9), float64] */
}

def @func_18550() -> (float32, Tensor[(5, 7, 14), bool]) {
  %338 = fn () -> (float32, Tensor[(5, 7, 14), bool]) {
    %334 = @func_7564() /* ty=(float32,) */;
    %335 = @func_6243() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */;
    %336 = %334.0;
    %337 = %335.0;
    (%336, %337)
  };
  %338() /* ty=(float32, Tensor[(5, 7, 14), bool]) */
}

def @func_13271() -> (float32, float32) {
  @func_13269() /* ty=(float32, float32) */
}

def @func_5354() -> (float32, Tensor[(5, 7, 14), float64]) {
  @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */
}

def @func_3792() -> (Tensor[(490), bool],) {
  %339 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %340 = %339.1;
  (%340,)
}

def @func_3110() -> (Tensor[(8, 15, 1), float32],) {
  %341 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %342 = %341.3;
  (%342,)
}

def @func_7021() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(490), float32]) {
  %348 = fn () -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(490), float32]) {
    %343 = @func_3959() /* ty=(Tensor[(490), float32],) */;
    %344 = @func_4242() /* ty=float32 */;
    %345 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
    %346 = @func_4323() /* ty=Tensor[(5, 7, 14), bool] */;
    %347 = %343.0;
    (%344, %345, %346, %347)
  };
  %348() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(490), float32]) */
}

def @func_6274() -> (float32, Tensor[(5, 7, 14), bool]) {
  %349 = @func_4454() /* ty=float32 */;
  %350 = @func_1686() /* ty=Tensor[(5, 7, 14), bool] */;
  (%349, %350)
}

def @func_3487() -> (float32,) {
  %351 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %352 = %351.0;
  (%352,)
}

def @func_6392() -> Tensor[(5, 7, 14), bool] {
  @func_6390() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_12695(%var_12693: float64) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float64, Tensor[(14, 10, 9), float64], Tensor[(1260), float64], Tensor[(5, 7, 14), bool]) {
  @func_12692(%var_12693) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float64, Tensor[(14, 10, 9), float64], Tensor[(1260), float64], Tensor[(5, 7, 14), bool]) */
}

def @func_5396() -> (float32, Tensor[(8, 15, 1), uint16]) {
  %355 = fn () -> (float32, Tensor[(8, 15, 1), uint16]) {
    %353 = @func_4663() /* ty=float32 */;
    %354 = @func_3748() /* ty=Tensor[(8, 15, 1), uint16] */;
    (%353, %354)
  };
  %355() /* ty=(float32, Tensor[(8, 15, 1), uint16]) */
}

def @func_10756() -> float32 {
  %356 = @func_4743() /* ty=(float32, float32) */;
  %356.1
}

def @func_4707() -> (Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) {
  %360 = fn () -> (Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) {
    %357 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
    %358 = @func_3748() /* ty=Tensor[(8, 15, 1), uint16] */;
    %359 = %357.0;
    (%358, %359)
  };
  %360() /* ty=(Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) */
}

def @func_16052(%var_16050: Tensor[(1188), float32]) -> (float32, Tensor[(11, 9, 12), float32], Tensor[(1188), float32]) {
  @func_16049(%var_16050) /* ty=(float32, Tensor[(11, 9, 12), float32], Tensor[(1188), float32]) */
}

def @func_2128() -> (float32, Tensor[(5, 7, 14), float64]) {
  @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */
}

def @func_16223() -> Tensor[(5, 7, 14), bool] {
  %361 = @func_8002() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %361.2
}

def @func_19033(%var_19031: Tensor[(12, 8, 4), uint64]) -> (Tensor[(12, 8, 4), bool], Tensor[(5, 7, 14), bool]) {
  @func_19030(%var_19031) /* ty=(Tensor[(12, 8, 4), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_13470() -> (float32, Tensor[(5, 7, 14), bool]) {
  %365 = fn () -> (float32, Tensor[(5, 7, 14), bool]) {
    %362 = @func_7260() /* ty=(float32, float32, Tensor[(5, 7, 14), bool]) */;
    %363 = @func_4242() /* ty=float32 */;
    %364 = %362.2;
    (%363, %364)
  };
  %365() /* ty=(float32, Tensor[(5, 7, 14), bool]) */
}

def @func_16796() -> Tensor[(5, 7, 14), bool] {
  %366 = @func_12445() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %366.0
}

def @func_2704() -> (Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) {
  @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */
}

def @func_11833() -> float32 {
  @func_11831() /* ty=float32 */
}

def @func_6547() -> (Tensor[(5, 7, 14), bool],) {
  %369 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %367 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %368 = %367.0;
    (%368,)
  };
  %369() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_16736() -> (float32,) {
  @func_16734() /* ty=(float32,) */
}

def @func_18458() -> Tensor[(5, 7, 14), bool] {
  %370 = fn () -> Tensor[(5, 7, 14), bool] {
    @func_16777() /* ty=Tensor[(5, 7, 14), bool] */
  };
  %370() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_11887() -> (float32,) {
  %371 = @func_3487() /* ty=(float32,) */;
  %372 = %371.0;
  (%372,)
}

def @func_6869() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
  %373 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %374 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %375 = %373.0;
  %376 = %374.1;
  (%375, %376)
}

def @func_6187(%var_6183: Tensor[(672), int64]) -> (float32, Tensor[(14, 3, 16), bool], Tensor[(672), int64]) {
  %377 = cast(%var_6183, dtype="int64") /* ty=Tensor[(672), int64] */;
  %378 = reshape(%377, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), int64] */;
  %379 = @func_3149(%378) /* ty=(Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) */;
  %380 = @func_4454() /* ty=float32 */;
  %381 = %379.0;
  (%380, %381, %var_6183)
}

def @func_16698() -> (Tensor[(5, 7, 14), bool], float32) {
  %382 = @func_8220() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %383 = %382.0;
  %384 = @func_9200() /* ty=float32 */;
  (%383, %384)
}

def @func_14578() -> (float32, Tensor[(5, 7, 14), float32], Tensor[(9, 6, 13), bool], Tensor[(702), int32]) {
  %385 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %386 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
  %387 = %385.0;
  %388 = cast(%387, dtype="int32") /* ty=int32 */;
  %389 = cast(meta[relay.Constant][13] /* ty=Tensor[(702), int32] */, dtype="int32") /* ty=Tensor[(702), int32] */;
  %390 = reshape(%388, newshape=[]) /* ty=int32 */;
  %391 = reshape(%389, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), int32] */;
  %392 = %386.1;
  %393 = @func_12395(%390, %391) /* ty=Tensor[(9, 6, 13), bool] */;
  (%387, %392, %393, meta[relay.Constant][13] /* ty=Tensor[(702), int32] */)
}

def @func_17151() -> (float32, float32) {
  %394 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %395 = %394.1;
  %396 = @func_15894() /* ty=float32 */;
  (%395, %396)
}

def @func_2664() -> (float32,) {
  %399 = fn () -> (float32,) {
    %397 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
    %398 = %397.0;
    (%398,)
  };
  %399() /* ty=(float32,) */
}

def @func_16913() -> (float32,) {
  %400 = @func_14677() /* ty=float32 */;
  (%400,)
}

def @func_1938(%var_1936: Tensor[(5, 7, 14), bool], %var_1937: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) {
  %414 = fn (%var_1921: Tensor[(5, 7, 14), bool], %var_1928: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) {
    %401 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
    %402 = %401.0;
    %403 = cast(%var_1921, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
    %405 = cast(%402, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %407 = cast(%var_1928, dtype="float32") /* ty=Tensor[(154), float32] */;
    %408 = reshape(%407, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
    %409 = @func_1779(%408) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
    %410 = cast(%var_1928, dtype="float64") /* ty=Tensor[(154), float64] */;
    %411 = logical_and(%405, %406) /* ty=Tensor[(5, 7, 14), bool] */;
    %412 = %409.0;
    %413 = asinh(%410) /* ty=Tensor[(154), float64] */;
    (%411, %412, %413)
  };
  %414(%var_1936, %var_1937) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */
}

def @func_15894() -> float32 {
  %415 = @func_11750() /* ty=(float32,) */;
  %415.0
}

def @func_1840() -> Tensor[(5, 7, 14), bool] {
  @func_1838() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_4932() -> (Tensor[(5, 7, 14), bool], float32) {
  %419 = fn () -> (Tensor[(5, 7, 14), bool], float32) {
    %416 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
    %417 = %416.1;
    %418 = @func_4663() /* ty=float32 */;
    (%417, %418)
  };
  %419() /* ty=(Tensor[(5, 7, 14), bool], float32) */
}

def @func_16347(%var_16295: Tensor[(14, 1, 6), float32], %var_16329: Tensor[(14, 16, 6), float32]) -> (float32, Tensor[(14, 16, 6), int8], Tensor[(14, ?, 6), int64]) {
  %420 = @func_15114() /* ty=(float32,) */;
  %421 = cast(%var_16295, dtype="int8") /* ty=Tensor[(14, 1, 6), int8] */;
  %422 = cast(%var_16329, dtype="int8") /* ty=Tensor[(14, 16, 6), int8] */;
  %423 = cast(%var_16295, dtype="float32") /* ty=Tensor[(14, 1, 6), float32] */;
  %424 = rsqrt(%423) /* ty=Tensor[(14, 1, 6), float32] */;
  %425 = cast(%var_16295, dtype="int32") /* ty=Tensor[(14, 1, 6), int32] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%424, dtype="int32") /* ty=Tensor[(14, 1, 6), int32] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %429 = bitwise_and(%427, %428) /* ty=Tensor[(14, ?, 6), int32] */;
  %430 = cast(%424, dtype="int64") /* ty=Tensor[(14, 1, 6), int64] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="int64") /* ty=Tensor[(14, ?, 6), int64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %434 = %420.0;
  %435 = add(%421, %422) /* ty=Tensor[(14, 16, 6), int8] */;
  %436 = minimum(%432, %433) /* ty=Tensor[(14, ?, 6), int64] */;
  (%434, %435, %436)
}

def @func_1522() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) {
  %446 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) {
    %437 = cast(7.90951f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %438 = reshape(%437, newshape=[]) /* ty=float32 */;
    %439 = @func_1046(%438) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %440 = cast(7.90951f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %441 = reshape(%440, newshape=[]) /* ty=float32 */;
    %442 = @func_325(%441) /* ty=(Tensor[(8, 15, 1), float32],) */;
    %443 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
    %444 = %439.0;
    %445 = %442.0;
    (%443, %444, 7.90951f /* ty=float32 */, %445)
  };
  %446() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */
}

def @func_7449() -> (Tensor[(5, 7, 14), bool],) {
  @func_7447() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_1838() -> Tensor[(5, 7, 14), bool] {
  @func_1686() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_2043(%var_2015: Tensor[(154), float32]) -> (float32, Tensor[(154), float64], Tensor[(154), float32], Tensor[(5, 7, 14), int32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %447 = @func_1907() /* ty=float32 */;
  %448 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %449 = cast(%447, dtype="bool") /* ty=bool */;
  %450 = cast(%448, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %451 = greater(%449, %450) /* ty=Tensor[(5, 7, 14), bool] */;
  %452 = cast(%451, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %453 = cast(%var_2015, dtype="float32") /* ty=Tensor[(154), float32] */;
  %454 = reshape(%452, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %455 = reshape(%453, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %456 = @func_1935(%454, %455) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %457 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %458 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 7, 14), bool] */, dtype="int32") /* ty=Tensor[(5, 7, 14), int32] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="int32") /* ty=Tensor[(5, 7, 14), int32] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %462 = cast(%457, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %463 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%451, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %467 = @func_1907() /* ty=float32 */;
  %468 = %456.2;
  %469 = bitwise_or(%460, %461) /* ty=Tensor[(5, 7, 14), int32] */;
  %470 = less(%464, %465) /* ty=Tensor[(5, 7, 14), bool] */;
  %471 = %466.0;
  (%467, %468, %var_2015, %469, %470, %471)
}

def @func_3489() -> (float32,) {
  @func_3487() /* ty=(float32,) */
}

def @func_11553() -> (Tensor[(14, 3, 7), float64],) {
  %474 = fn () -> (Tensor[(14, 3, 7), float64],) {
    %472 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
    %473 = %472.0;
    (%473,)
  };
  %474() /* ty=(Tensor[(14, 3, 7), float64],) */
}

def @func_3935(%var_3934: Tensor[(168), float32]) -> (Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) {
  %487 = fn (%var_3910: Tensor[(168), float32]) -> (Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) {
    %475 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
    %476 = %475.1;
    %477 = cast(%476, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
    %478 = cast(%var_3910, dtype="float32") /* ty=Tensor[(168), float32] */;
    %479 = reshape(%478, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float32] */;
    %480 = @func_3333(%479) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) */;
    %481 = cast(meta[relay.Constant][15] /* ty=Tensor[(22, 7), float32] */, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
    %482 = reshape(%481, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %483 = @func_2043(%482) /* ty=(float32, Tensor[(154), float64], Tensor[(154), float32], Tensor[(5, 7, 14), int32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %484 = cosh(%477) /* ty=Tensor[(5, 7, 14), float32] */;
    %485 = %480.0;
    %486 = %483.2;
    (%484, %485, %var_3910, %486, meta[relay.Constant][15] /* ty=Tensor[(22, 7), float32] */)
  };
  %487(%var_3934) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) */
}

def @func_6276() -> (float32, Tensor[(5, 7, 14), bool]) {
  @func_6274() /* ty=(float32, Tensor[(5, 7, 14), bool]) */
}

def @func_15971() -> (float32, Tensor[(490), bool]) {
  %491 = fn () -> (float32, Tensor[(490), bool]) {
    %488 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
    %489 = @func_15083() /* ty=float32 */;
    %490 = %488.2;
    (%489, %490)
  };
  %491() /* ty=(float32, Tensor[(490), bool]) */
}

def @func_3305() -> float32 {
  %492 = @func_2663() /* ty=(float32,) */;
  %492.0
}

def @func_3794() -> (Tensor[(490), bool],) {
  @func_3792() /* ty=(Tensor[(490), bool],) */
}

def @func_8676() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) {
  %520 = fn () -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) {
    %493 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
    %494 = cast(meta[relay.Constant][16] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %495 = reshape(%494, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %496 = @func_7348(%495) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(5, 7, 14), bool]) */;
    %497 = %493.0;
    %498 = cast(%497, dtype="float32") /* ty=float32 */;
    %499 = reshape(%498, newshape=[]) /* ty=float32 */;
    %500 = @func_1046(%499) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %501 = %496.3;
    %502 = cast(%501, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %503 = reshape(%502, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
    %504 = @func_5298(%503) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
    %505 = @func_8381() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %506 = cast(%497, dtype="float32") /* ty=float32 */;
    %507 = reshape(%506, newshape=[]) /* ty=float32 */;
    %508 = @func_2170(%507) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) */;
    %509 = cast(meta[relay.Constant][16] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %510 = acosh(%509) /* ty=Tensor[(42, 4), float32] */;
    %511 = cast(meta[relay.Constant][17] /* ty=Tensor[(42, 4), float32] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
    %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(2), int32] */;
    %513 = cast(%510, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
    %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %515 = %500.6;
    %516 = %504.0;
    %517 = %505.1;
    %518 = %508.3;
    %519 = equal(%513, %514) /* ty=Tensor[(42, 4), bool] */;
    (%497, %501, %515, %516, %517, %518, %519)
  };
  %520() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) */
}

def @func_3855() -> float32 {
  @func_1610() /* ty=float32 */
}

def @func_11127() -> Tensor[(490), float32] {
  %521 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %521.0
}

def @func_12952() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %522 = @func_6617() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %523 = @func_4372() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %524 = %522.1;
  %525 = %523.0;
  (%524, %525)
}

def @func_3067() -> (Tensor[(5, 7, 14), bool],) {
  @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_14425() -> Tensor[(154, 1), float64] {
  %529 = fn () -> Tensor[(154, 1), float64] {
    %526 = @func_5910() /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(154), float32], float32, Tensor[(154, 1), float32]) */;
    %527 = %526.5;
    %528 = cast(%527, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
    atanh(%528) /* ty=Tensor[(154, 1), float64] */
  };
  %529() /* ty=Tensor[(154, 1), float64] */
}

def @func_6356() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) {
  @func_6354() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) */
}

def @func_14535() -> (Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64], Tensor[(8, 15, 1), float32]) {
  %530 = @func_7447() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %531 = @func_10656() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) */;
  %532 = @func_13726() /* ty=(float32, Tensor[(8, 15, 1), float32]) */;
  %533 = %530.0;
  %534 = %531.0;
  %535 = %532.1;
  (%533, %534, %535)
}

def @func_16049(%var_16047: Tensor[(1188), float32]) -> (float32, Tensor[(11, 9, 12), float32], Tensor[(1188), float32]) {
  %536 = @func_9312() /* ty=(float32,) */;
  %537 = cast(%var_16047, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %538 = reshape(%537, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), float32] */;
  %539 = @func_4066(%538) /* ty=(float32, Tensor[(490), float32], Tensor[(22, 7), float32], Tensor[(168), float32], Tensor[(11, 9, 12), float32], float32) */;
  %540 = %536.0;
  %541 = %539.4;
  (%540, %541, %var_16047)
}

def @func_10982() -> float32 {
  @func_10980() /* ty=float32 */
}

def @func_4372() -> (Tensor[(5, 7, 14), bool],) {
  %542 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %543 = %542.0;
  (%543,)
}

def @func_17178() -> (float32,) {
  %546 = fn () -> (float32,) {
    %544 = @func_9312() /* ty=(float32,) */;
    %545 = %544.0;
    (%545,)
  };
  %546() /* ty=(float32,) */
}

def @func_7261() -> (float32, float32, Tensor[(5, 7, 14), bool]) {
  %555 = fn () -> (float32, float32, Tensor[(5, 7, 14), bool]) {
    %547 = @func_6274() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
    %548 = %547.0;
    %549 = cast(%548, dtype="float32") /* ty=float32 */;
    %550 = reshape(%549, newshape=[]) /* ty=float32 */;
    %551 = @func_1151(%550) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */;
    %552 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %553 = %551.3;
    %554 = %552.0;
    (%548, %553, %554)
  };
  %555() /* ty=(float32, float32, Tensor[(5, 7, 14), bool]) */
}

def @func_12826() -> float32 {
  %557 = fn () -> float32 {
    %556 = @func_4743() /* ty=(float32, float32) */;
    %556.0
  };
  %557() /* ty=float32 */
}

def @func_18901() -> (Tensor[(5, 7, 14), float32], Tensor[(11, 9, 12), float32], Tensor[(1188), float32]) {
  %558 = @func_5577() /* ty=(Tensor[(5, 7, 14), float32],) */;
  %559 = cast(meta[relay.Constant][18] /* ty=Tensor[(1188), float32] */, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %560 = reshape(%559, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), float32] */;
  %561 = @func_4066(%560) /* ty=(float32, Tensor[(490), float32], Tensor[(22, 7), float32], Tensor[(168), float32], Tensor[(11, 9, 12), float32], float32) */;
  %562 = %558.0;
  %563 = %561.4;
  (%562, %563, meta[relay.Constant][18] /* ty=Tensor[(1188), float32] */)
}

def @func_6190(%var_6188: Tensor[(672), int64]) -> (float32, Tensor[(14, 3, 16), bool], Tensor[(672), int64]) {
  @func_6187(%var_6188) /* ty=(float32, Tensor[(14, 3, 16), bool], Tensor[(672), int64]) */
}

def @func_10435(%var_10434: Tensor[(1, 12, 16), float64]) -> (Tensor[(1, 12, 16), float64], Tensor[(490), bool]) {
  %568 = fn (%var_10390: Tensor[(1, 12, 16), float64]) -> (Tensor[(1, 12, 16), float64], Tensor[(490), bool]) {
    %564 = cast(%var_10390, dtype="float64") /* ty=Tensor[(1, 12, 16), float64] */;
    %565 = @func_3792() /* ty=(Tensor[(490), bool],) */;
    %566 = cos(%564) /* ty=Tensor[(1, 12, 16), float64] */;
    %567 = %565.0;
    (%566, %567)
  };
  %568(%var_10434) /* ty=(Tensor[(1, 12, 16), float64], Tensor[(490), bool]) */
}

def @func_12067() -> float32 {
  %569 = fn () -> float32 {
    @func_11358() /* ty=float32 */
  };
  %569() /* ty=float32 */
}

def @func_12207() -> (Tensor[(5, 7, 14), bool],) {
  @func_12205() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_18101(%var_18099: Tensor[(672), int64]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(672), int64]) {
  @func_18098(%var_18099) /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(672), int64]) */
}

def @func_6637() -> (Tensor[(5, 7, 14), bool],) {
  %571 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %570 = @func_6370() /* ty=Tensor[(5, 7, 14), bool] */;
    (%570,)
  };
  %571() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_9778(%var_9777: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), float64], float32, Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(?, 11, 14), int32], Tensor[(14, 3, 7), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
  %600 = fn (%var_9716: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), float64], float32, Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(?, 11, 14), int32], Tensor[(14, 3, 7), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
    %572 = @func_3686() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
    %573 = @func_7541() /* ty=(float32, float32) */;
    %574 = @func_7039() /* ty=(Tensor[(14, 3, 7), float64],) */;
    %575 = @func_6546() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %576 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
    %577 = cast(%var_9716, dtype="float32") /* ty=Tensor[(154), float32] */;
    %578 = reshape(%577, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
    %579 = @func_1779(%578) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
    %580 = %579.0;
    %581 = cast(%var_9716, dtype="int32") /* ty=Tensor[(154), int32] */;
    %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
    %583 = cast(%580, dtype="int32") /* ty=Tensor[(1, 11, 14), int32] */;
    %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %585 = @func_6274() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
    %586 = @func_5015() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %587 = %575.0;
    %588 = cast(%587, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %589 = reshape(%588, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
    %590 = %572.0;
    %591 = %573.1;
    %592 = %574.0;
    %593 = %576.0;
    %594 = bitwise_and(%583, %584) /* ty=Tensor[(?, 11, 14), int32] */;
    %595 = @func_7477() /* ty=Tensor[(14, 3, 7), float64] */;
    %596 = @func_7380() /* ty=float32 */;
    %597 = %585.1;
    %598 = %586.0;
    %599 = @func_5425(%589) /* ty=Tensor[(5, 7, 14), float32] */;
    (%590, %591, %592, %587, %593, %594, %595, %596, %597, %598, %599)
  };
  %600(%var_9777) /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(?, 11, 14), int32], Tensor[(14, 3, 7), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) */
}

def @func_11870(%var_11868: Tensor[(308), float32]) -> (float32, float32, Tensor[(308), float32], Tensor[(5, 7, 14), bool]) {
  @func_11867(%var_11868) /* ty=(float32, float32, Tensor[(308), float32], Tensor[(5, 7, 14), bool]) */
}

def @func_17719() -> Tensor[(5, 7, 14), bool] {
  %601 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %601.0
}

def @func_12250() -> (Tensor[(154), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %602 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
  %603 = @func_7631() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %604 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
  %605 = %602.4;
  %606 = %603.0;
  %607 = %604.4;
  (%605, %606, %607)
}

def @func_15815() -> (float32, Tensor[(8, 15, 1), float32]) {
  %612 = fn () -> (float32, Tensor[(8, 15, 1), float32]) {
    %608 = @func_7574() /* ty=(float32,) */;
    %609 = @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
    %610 = %608.0;
    %611 = %609.1;
    (%610, %611)
  };
  %612() /* ty=(float32, Tensor[(8, 15, 1), float32]) */
}

def @func_7040() -> (Tensor[(14, 3, 7), float64],) {
  %615 = fn () -> (Tensor[(14, 3, 7), float64],) {
    %613 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
    %614 = %613.0;
    (%614,)
  };
  %615() /* ty=(Tensor[(14, 3, 7), float64],) */
}

def @func_17626() -> (Tensor[(154, 1), float64],) {
  %617 = fn () -> (Tensor[(154, 1), float64],) {
    %616 = @func_14424() /* ty=Tensor[(154, 1), float64] */;
    (%616,)
  };
  %617() /* ty=(Tensor[(154, 1), float64],) */
}

def @func_18626() -> (float32, float32) {
  @func_18624() /* ty=(float32, float32) */
}

def @func_11998() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) {
  @func_11996() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */
}

def @func_13047() -> (Tensor[(8, 15, 5), float64], Tensor[(8, 15, 1), float32], float32) {
  %624 = fn () -> (Tensor[(8, 15, 5), float64], Tensor[(8, 15, 1), float32], float32) {
    %618 = @func_10471() /* ty=(Tensor[(8, 15, 5), float64],) */;
    %619 = @func_10266() /* ty=(Tensor[(8, 15, 1), float32],) */;
    %620 = @func_9055() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
    %621 = %618.0;
    %622 = %619.0;
    %623 = %620.0;
    (%621, %622, %623)
  };
  %624() /* ty=(Tensor[(8, 15, 5), float64], Tensor[(8, 15, 1), float32], float32) */
}

def @func_11584() -> Tensor[(5, 7, 14), bool] {
  %625 = fn () -> Tensor[(5, 7, 14), bool] {
    @func_6390() /* ty=Tensor[(5, 7, 14), bool] */
  };
  %625() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_10144() -> (Tensor[(14, 3, 7), float64],) {
  %626 = @func_7477() /* ty=Tensor[(14, 3, 7), float64] */;
  %627 = cast(%626, dtype="float64") /* ty=Tensor[(14, 3, 7), float64] */;
  %628 = atanh(%627) /* ty=Tensor[(14, 3, 7), float64] */;
  (%628,)
}

def @func_13087() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %633 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
    %629 = @func_8541() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %630 = @func_8782() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(168), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %631 = %629.0;
    %632 = %630.0;
    (%631, %632)
  };
  %633() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_11952() -> Tensor[(5, 7, 14), bool] {
  %635 = fn () -> Tensor[(5, 7, 14), bool] {
    %634 = @func_6313() /* ty=(Tensor[(14, 3, 5), float32], Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64]) */;
    %634.1
  };
  %635() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_17438() -> Tensor[(14, 3, 7), float64] {
  @func_17436() /* ty=Tensor[(14, 3, 7), float64] */
}

def @func_3819() -> (Tensor[(5, 7, 14), bool],) {
  %636 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %637 = %636.0;
  (%637,)
}

def @func_17721() -> Tensor[(5, 7, 14), bool] {
  @func_17719() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_11199(%var_11182: Tensor[(4, 3, 9), float32]) -> (Tensor[(4, 3, 9), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  %638 = cast(%var_11182, dtype="float32") /* ty=Tensor[(4, 3, 9), float32] */;
  %639 = cast(meta[relay.Constant][19] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %640 = reshape(%639, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %641 = @func_9776(%640) /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(?, 11, 14), int32], Tensor[(14, 3, 7), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) */;
  %642 = asin(%638) /* ty=Tensor[(4, 3, 9), float32] */;
  %643 = %641.0;
  (%642, %643, meta[relay.Constant][19] /* ty=Tensor[(154), float32] */)
}

def @func_2903() -> (Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) {
  %644 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
  %645 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %646 = %644.1;
  %647 = @func_1907() /* ty=float32 */;
  %648 = @func_1610() /* ty=float32 */;
  %649 = @func_1610() /* ty=float32 */;
  %650 = %645.2;
  (%646, %647, %648, %649, %650)
}

def @func_14480(%var_14465: float64, %var_14466: Tensor[(14, 15, 8), float64]) -> (Tensor[(14, 15, 8), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %651 = cast(%var_14465, dtype="float64") /* ty=float64 */;
  %652 = cast(%var_14466, dtype="float64") /* ty=Tensor[(14, 15, 8), float64] */;
  %653 = cast(%var_14465, dtype="float32") /* ty=float32 */;
  %654 = reshape(%653, newshape=[]) /* ty=float32 */;
  %655 = @func_2170(%654) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) */;
  %656 = @func_8381() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %657 = floor_mod(%651, %652) /* ty=Tensor[(14, 15, 8), float64] */;
  %658 = %655.0;
  %659 = %656.2;
  (%657, %658, %659)
}

def @func_4141() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], Tensor[(154, 1), float32], float32, Tensor[(154, 1), float64]) {
  @func_4139() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], Tensor[(154, 1), float32], float32, Tensor[(154, 1), float64]) */
}

def @func_14633() -> (Tensor[(490), bool], Tensor[(8, 15, 1), float32]) {
  %660 = @func_6243() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */;
  %661 = @func_13726() /* ty=(float32, Tensor[(8, 15, 1), float32]) */;
  %662 = %660.1;
  %663 = %661.1;
  (%662, %663)
}

def @func_6618() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %668 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
    %664 = @func_6313() /* ty=(Tensor[(14, 3, 5), float32], Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64]) */;
    %665 = @func_4372() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %666 = %664.1;
    %667 = %665.0;
    (%666, %667)
  };
  %668() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_10389() -> (float32,) {
  %671 = fn () -> (float32,) {
    %669 = @func_7541() /* ty=(float32, float32) */;
    %670 = %669.1;
    (%670,)
  };
  %671() /* ty=(float32,) */
}

def @func_2648(%var_2646: Tensor[(8, 10, 6), float64]) -> (Tensor[(8, 10, 6), float64],) {
  @func_2645(%var_2646) /* ty=(Tensor[(8, 10, 6), float64],) */
}

def @func_4877() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) {
  %672 = @func_3870() /* ty=(float32,) */;
  %673 = @func_3686() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %674 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 672), int64] */, dtype="int64") /* ty=Tensor[(1, 672), int64] */;
  %675 = reshape(%674, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), int64] */;
  %676 = @func_3149(%675) /* ty=(Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) */;
  %677 = %672.0;
  %678 = %673.1;
  %679 = @func_1686() /* ty=Tensor[(5, 7, 14), bool] */;
  %680 = %676.1;
  (%677, %678, %679, %680, meta[relay.Constant][20] /* ty=Tensor[(1, 672), int64] */)
}

def @func_12097() -> (float32,) {
  @func_12095() /* ty=(float32,) */
}

def @func_14580() -> (float32, Tensor[(5, 7, 14), float32], Tensor[(9, 6, 13), bool], Tensor[(702), int32]) {
  @func_14578() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(9, 6, 13), bool], Tensor[(702), int32]) */
}

def @func_16778() -> Tensor[(5, 7, 14), bool] {
  %682 = fn () -> Tensor[(5, 7, 14), bool] {
    %681 = @func_7447() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %681.0
  };
  %682() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_4242() -> float32 {
  @func_3855() /* ty=float32 */
}

def @func_3857() -> float32 {
  @func_3855() /* ty=float32 */
}

def @func_8964() -> (float32, float32) {
  @func_8962() /* ty=(float32, float32) */
}

def @func_1779(%var_1749: Tensor[(1, 11, 14), float32]) -> (Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) {
  %683 = cast(%var_1749, dtype="float32") /* ty=Tensor[(1, 11, 14), float32] */;
  %684 = log2(%683) /* ty=Tensor[(1, 11, 14), float32] */;
  %685 = cast(%684, dtype="float64") /* ty=Tensor[(1, 11, 14), float64] */;
  %686 = sin(%685) /* ty=Tensor[(1, 11, 14), float64] */;
  %687 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%686, %687)
}

def @func_14094() -> (Tensor[(8, 15, 5), float64],) {
  %690 = fn () -> (Tensor[(8, 15, 5), float64],) {
    %688 = @func_10471() /* ty=(Tensor[(8, 15, 5), float64],) */;
    %689 = %688.0;
    (%689,)
  };
  %690() /* ty=(Tensor[(8, 15, 5), float64],) */
}

def @func_3686() -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) {
  %691 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %692 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %693 = %691.0;
  %694 = %692.4;
  (%693, %694)
}

def @func_5813() -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) {
  %706 = fn () -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) {
    %695 = @func_5015() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %696 = %695.0;
    %697 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %698 = %697.2;
    %699 = cast(%698, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
    %700 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
    %701 = cast(%696, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
    %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %703 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %704 = power(%701, %702) /* ty=Tensor[(5, 7, 14), float32] */;
    %705 = %703.0;
    (%704, %705)
  };
  %706() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */
}

def @func_1611() -> float32 {
  %708 = fn () -> float32 {
    %707 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
    %707.2
  };
  %708() /* ty=float32 */
}

def @func_9143() -> float32 {
  %709 = @func_7897() /* ty=(float32,) */;
  %709.0
}

def @func_12398(%var_12396: int32, %var_12397: Tensor[(9, 6, 13), int32]) -> Tensor[(9, 6, 13), bool] {
  %712 = fn (%var_12389: int32, %var_12390: Tensor[(9, 6, 13), int32]) -> Tensor[(9, 6, 13), bool] {
    %710 = cast(%var_12389, dtype="bool") /* ty=bool */;
    %711 = cast(%var_12390, dtype="bool") /* ty=Tensor[(9, 6, 13), bool] */;
    not_equal(%710, %711) /* ty=Tensor[(9, 6, 13), bool] */
  };
  %712(%var_12396, %var_12397) /* ty=Tensor[(9, 6, 13), bool] */
}

def @func_15857() -> float32 {
  %713 = @func_14108() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) */;
  %713.3
}

def @func_9975() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], float32, float32, float32, Tensor[(5, 7, 14), float64]) {
  @func_9973() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], float32, float32, float32, Tensor[(5, 7, 14), float64]) */
}

def @func_3704() -> (Tensor[(5, 7, 14), bool],) {
  %714 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %715 = %714.0;
  (%715,)
}

def @func_10088(%var_10081: Tensor[(308), float32]) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(308), float32]) {
  %716 = @func_4210() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */;
  %717 = cast(%var_10081, dtype="float32") /* ty=Tensor[(308), float32] */;
  %718 = reshape(%717, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %719 = @func_6759(%718) /* ty=(Tensor[(154, 2), bool], float32, Tensor[(154, 1), float32]) */;
  %720 = %716.0;
  %721 = %719.1;
  (%720, %721, %var_10081)
}

def @func_13661() -> (Tensor[(490), bool],) {
  %724 = fn () -> (Tensor[(490), bool],) {
    %722 = @func_3792() /* ty=(Tensor[(490), bool],) */;
    %723 = %722.0;
    (%723,)
  };
  %724() /* ty=(Tensor[(490), bool],) */
}

def @func_11676() -> (Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(168), float32]) {
  %725 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %726 = cast(meta[relay.Constant][21] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %727 = reshape(%726, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %728 = @func_3933(%727) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) */;
  %729 = %725.2;
  %730 = %728.3;
  (%729, %730, meta[relay.Constant][21] /* ty=Tensor[(168), float32] */)
}

def @func_8782() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(168), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %731 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %732 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
  %733 = @func_8541() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %734 = @func_7020() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(490), float32]) */;
  %735 = %731.0;
  %736 = @func_4323() /* ty=Tensor[(5, 7, 14), bool] */;
  %737 = %732.0;
  %738 = %733.0;
  %739 = %734.1;
  (%735, %736, %737, %738, %739)
}

def @func_15712(%var_15710: Tensor[(308, 1), float32]) -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(308, 1), float32]) {
  @func_15709(%var_15710) /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(308, 1), float32]) */
}

def @func_9145() -> float32 {
  @func_9143() /* ty=float32 */
}

def @func_4546() -> (Tensor[(5, 7, 14), bool], float32) {
  %743 = fn () -> (Tensor[(5, 7, 14), bool], float32) {
    %740 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %741 = %740.1;
    %742 = @func_3855() /* ty=float32 */;
    (%741, %742)
  };
  %743() /* ty=(Tensor[(5, 7, 14), bool], float32) */
}

def @func_16472() -> (Tensor[(5, 7, 14), bool],) {
  @func_16470() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_7478() -> Tensor[(14, 3, 7), float64] {
  %745 = fn () -> Tensor[(14, 3, 7), float64] {
    %744 = @func_4510() /* ty=(Tensor[(14, 3, 7), float64],) */;
    %744.0
  };
  %745() /* ty=Tensor[(14, 3, 7), float64] */
}

def @func_13101() -> Tensor[(490), bool] {
  @func_13099() /* ty=Tensor[(490), bool] */
}

def @func_10693() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) {
  %752 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) {
    %746 = @func_8381() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %747 = @func_9973() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], float32, float32, float32, Tensor[(5, 7, 14), float64]) */;
    %748 = @func_5812() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
    %749 = %746.2;
    %750 = %747.6;
    %751 = %748.1;
    (%749, %750, %751)
  };
  %752() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */
}

def @func_11867(%var_11851: Tensor[(308), float32]) -> (float32, float32, Tensor[(308), float32], Tensor[(5, 7, 14), bool]) {
  %753 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %754 = cast(%var_11851, dtype="float32") /* ty=Tensor[(308), float32] */;
  %755 = reshape(%754, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %756 = @func_10955(%755) /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) */;
  %757 = @func_8782() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(168), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %758 = %753.0;
  %759 = %756.0;
  %760 = %757.4;
  (%758, %759, %var_11851, %760)
}

def @func_17952() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_17950() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_2484() -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %766 = fn () -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
    %761 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
    %762 = @func_1521() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(8, 15, 1), float32]) */;
    %763 = %761.1;
    %764 = %762.1;
    %765 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
    (%763, %764, %765)
  };
  %766() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_16734() -> (float32,) {
  %767 = @func_10388() /* ty=(float32,) */;
  %768 = %767.0;
  (%768,)
}

def @func_18098(%var_18088: Tensor[(672), int64]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(672), int64]) {
  %769 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %770 = cast(%var_18088, dtype="int64") /* ty=Tensor[(672), int64] */;
  %771 = reshape(%770, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), int64] */;
  %772 = @func_3149(%771) /* ty=(Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) */;
  %773 = @func_11152() /* ty=float32 */;
  %774 = %769.0;
  %775 = %772.3;
  (%773, %774, %775, %var_18088)
}

def @func_5425(%var_5417: Tensor[(5, 7, 14), bool]) -> Tensor[(5, 7, 14), float32] {
  %776 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %777 = cast(%var_5417, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%776, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%779, %780) /* ty=Tensor[(5, 7, 14), float32] */
}

def @func_8054(%var_8041: float64, %var_8042: Tensor[(14, 10, 9), float64]) -> (Tensor[(14, 10, 9), float64],) {
  %781 = cast(%var_8041, dtype="float64") /* ty=float64 */;
  %782 = cast(%var_8042, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  %783 = divide(%781, %782) /* ty=Tensor[(14, 10, 9), float64] */;
  (%783,)
}

def @func_13939() -> (Tensor[(5, 7, 14), bool],) {
  @func_13937() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_11032(%var_11030: Tensor[(6, 13, 5), float64]) -> (Tensor[(154), float32], Tensor[(6, 13, 5), int16]) {
  @func_11029(%var_11030) /* ty=(Tensor[(154), float32], Tensor[(6, 13, 5), int16]) */
}

def @func_8473() -> (Tensor[(5, 7, 14), bool], float32) {
  @func_8471() /* ty=(Tensor[(5, 7, 14), bool], float32) */
}

def @func_6685() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(490), float32]) {
  @func_6683() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(490), float32]) */
}

def @func_3872() -> (float32,) {
  @func_3870() /* ty=(float32,) */
}

def @func_8124(%var_8123: Tensor[(1, 10, 5), int64]) -> (Tensor[(?, 10, 5), int64], Tensor[(5, 7, 14), float32], Tensor[(168), float32]) {
  %793 = fn (%var_8088: Tensor[(1, 10, 5), int64]) -> (Tensor[(?, 10, 5), int64], Tensor[(5, 7, 14), float32], Tensor[(168), float32]) {
    %784 = cast(%var_8088, dtype="int64") /* ty=Tensor[(1, 10, 5), int64] */;
    %785 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(1, 10, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %786 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 10, 5), int64] */, dtype="int64") /* ty=Tensor[(1, 10, 5), int64] */;
    %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %788 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %789 = reshape(%788, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float32] */;
    %790 = @func_3333(%789) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) */;
    %791 = add(%786, %787) /* ty=Tensor[(?, 10, 5), int64] */;
    %792 = %790.1;
    (%791, %792, meta[relay.Constant][23] /* ty=Tensor[(168), float32] */)
  };
  %793(%var_8123) /* ty=(Tensor[(?, 10, 5), int64], Tensor[(5, 7, 14), float32], Tensor[(168), float32]) */
}

def @func_16351(%var_16349: Tensor[(14, 1, 6), float32], %var_16350: Tensor[(14, 16, 6), float32]) -> (float32, Tensor[(14, 16, 6), int8], Tensor[(14, ?, 6), int64]) {
  @func_16347(%var_16349, %var_16350) /* ty=(float32, Tensor[(14, 16, 6), int8], Tensor[(14, ?, 6), int64]) */
}

def @func_12644(%var_12643: Tensor[(14, 9, 11), float64]) -> (Tensor[(8, 15, 5), float64], Tensor[(14, 9, 11), float32]) {
  %803 = fn (%var_12607: Tensor[(14, 9, 11), float64]) -> (Tensor[(8, 15, 5), float64], Tensor[(14, 9, 11), float32]) {
    %794 = @func_10471() /* ty=(Tensor[(8, 15, 5), float64],) */;
    %795 = cast(%var_12607, dtype="float64") /* ty=Tensor[(14, 9, 11), float64] */;
    %796 = asinh(%795) /* ty=Tensor[(14, 9, 11), float64] */;
    %797 = cast(%var_12607, dtype="float32") /* ty=Tensor[(14, 9, 11), float32] */;
    %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
    %799 = cast(%796, dtype="float32") /* ty=Tensor[(14, 9, 11), float32] */;
    %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %801 = %794.0;
    %802 = divide(%799, %800) /* ty=Tensor[(14, 9, 11), float32] */;
    (%801, %802)
  };
  %803(%var_12643) /* ty=(Tensor[(8, 15, 5), float64], Tensor[(14, 9, 11), float32]) */
}

def @func_4511() -> (Tensor[(14, 3, 7), float64],) {
  %806 = fn () -> (Tensor[(14, 3, 7), float64],) {
    %804 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
    %805 = %804.0;
    (%805,)
  };
  %806() /* ty=(Tensor[(14, 3, 7), float64],) */
}

def @func_7447() -> (Tensor[(5, 7, 14), bool],) {
  %807 = @func_6354() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) */;
  %808 = %807.0;
  (%808,)
}

def @func_12252() -> (Tensor[(154), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_12250() /* ty=(Tensor[(154), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_9973() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], float32, float32, float32, Tensor[(5, 7, 14), float64]) {
  %809 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %810 = @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
  %811 = %809.0;
  %812 = cast(%811, dtype="float32") /* ty=float32 */;
  %813 = reshape(%812, newshape=[]) /* ty=float32 */;
  %814 = @func_2170(%813) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], Tensor[(1, 11, 14), float64], Tensor[(154), float32], float32) */;
  %815 = @func_4421() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %816 = @func_4210() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */;
  %817 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %818 = %810.0;
  %819 = %814.5;
  %820 = @func_1610() /* ty=float32 */;
  %821 = %815.1;
  %822 = %816.3;
  %823 = %817.1;
  (%811, %818, %819, %820, %821, %822, %823)
}

def @func_6244() -> (Tensor[(5, 7, 14), bool], Tensor[(490), bool]) {
  %828 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(490), bool]) {
    %824 = @func_5812() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
    %825 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
    %826 = %824.1;
    %827 = %825.2;
    (%826, %827)
  };
  %828() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */
}

def @func_14858(%var_14857: Tensor[(2, 15, 1), float32]) -> (Tensor[(2, 15, 1), bool], Tensor[(2, 15, 1), int8]) {
  %842 = fn (%var_14840: Tensor[(2, 15, 1), float32]) -> (Tensor[(2, 15, 1), bool], Tensor[(2, 15, 1), int8]) {
    %829 = @func_2663() /* ty=(float32,) */;
    %830 = %829.0;
    %831 = @func_12095() /* ty=(float32,) */;
    %832 = %831.0;
    %833 = cast(%832, dtype="float32") /* ty=float32 */;
    %834 = cast(%var_14840, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
    %835 = divide(%833, %834) /* ty=Tensor[(2, 15, 1), float32] */;
    %836 = cast(%830, dtype="bool") /* ty=bool */;
    %837 = cast(%835, dtype="bool") /* ty=Tensor[(2, 15, 1), bool] */;
    %838 = cast(%830, dtype="int8") /* ty=int8 */;
    %839 = cast(%835, dtype="int8") /* ty=Tensor[(2, 15, 1), int8] */;
    %840 = less_equal(%836, %837) /* ty=Tensor[(2, 15, 1), bool] */;
    %841 = bitwise_or(%838, %839) /* ty=Tensor[(2, 15, 1), int8] */;
    (%840, %841)
  };
  %842(%var_14857) /* ty=(Tensor[(2, 15, 1), bool], Tensor[(2, 15, 1), int8]) */
}

def @func_15550() -> (Tensor[(5, 7, 14), bool],) {
  %845 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %843 = @func_10692() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
    %844 = %843.2;
    (%844,)
  };
  %845() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_4744() -> (float32, float32) {
  %849 = fn () -> (float32, float32) {
    %846 = @func_4210() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */;
    %847 = @func_4242() /* ty=float32 */;
    %848 = %846.3;
    (%847, %848)
  };
  %849() /* ty=(float32, float32) */
}

def @func_4422() -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) {
  %853 = fn () -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) {
    %850 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
    %851 = @func_3305() /* ty=float32 */;
    %852 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
    (%850, %851, %852)
  };
  %853() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */
}

def @func_12095() -> (float32,) {
  %854 = @func_7260() /* ty=(float32, float32, Tensor[(5, 7, 14), bool]) */;
  %855 = %854.1;
  (%855,)
}

def @func_7350(%var_7349: Tensor[(168), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(5, 7, 14), bool]) {
  %866 = fn (%var_7307: Tensor[(168), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(5, 7, 14), bool]) {
    %856 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %857 = cast(%var_7307, dtype="float32") /* ty=Tensor[(168), float32] */;
    %858 = reshape(%857, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float32] */;
    %859 = @func_3333(%858) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) */;
    %860 = %856.3;
    %861 = cast(%860, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %862 = reshape(%861, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
    %863 = @func_5083(%862) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), int16], Tensor[(5, 7, 14), bool]) */;
    %864 = %859.1;
    %865 = %863.2;
    (%860, %864, %var_7307, %865)
  };
  %866(%var_7349) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(5, 7, 14), bool]) */
}

def @func_6051() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) {
  @func_6049() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32) */
}

def @func_11398(%var_11385: Tensor[(154), float32]) -> (float32, Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  %867 = @func_7764() /* ty=(float32,) */;
  %868 = cast(%var_11385, dtype="float32") /* ty=Tensor[(154), float32] */;
  %869 = reshape(%868, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %870 = @func_4003(%869) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) */;
  %871 = %867.0;
  %872 = %870.1;
  (%871, %872, %var_11385)
}

def @func_13149() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) {
  @func_13147() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) */
}

def @func_10210(%var_10207: Tensor[(13, 4, 4), uint8], %var_10208: Tensor[(13, 4, 4), uint8], %var_10209: Tensor[(490), bool]) -> (Tensor[(490), bool], Tensor[(490), bool], Tensor[(13, 4, 4), bool], float32, Tensor[(8, 15, 1), uint16]) {
  %891 = fn (%var_10174: Tensor[(13, 4, 4), uint8], %var_10175: Tensor[(13, 4, 4), uint8], %var_10182: Tensor[(490), bool]) -> (Tensor[(490), bool], Tensor[(490), bool], Tensor[(13, 4, 4), bool], float32, Tensor[(8, 15, 1), uint16]) {
    %873 = cast(%var_10182, dtype="bool") /* ty=Tensor[(490), bool] */;
    %874 = reshape(%873, newshape=[490]) /* ty=Tensor[(490), bool] */;
    %875 = @func_2335(%874) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */;
    %876 = cast(%var_10175, dtype="uint8") /* ty=Tensor[(13, 4, 4), uint8] */;
    %877 = shape_of(%var_10174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %878 = cast(%var_10174, dtype="uint8") /* ty=Tensor[(13, 4, 4), uint8] */;
    %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %880 = bitwise_xor(%878, %879) /* ty=Tensor[(13, 4, 4), uint8] */;
    %881 = cast(%880, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
    %882 = shape_of(%var_10174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(%var_10174, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %885 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
    %886 = @func_4706() /* ty=(Tensor[(8, 15, 1), uint16], Tensor[(14, 3, 7), float64]) */;
    %887 = %875.1;
    %888 = greater_equal(%883, %884) /* ty=Tensor[(13, 4, 4), bool] */;
    %889 = %885.1;
    %890 = %886.0;
    (%887, %var_10182, %888, %889, %890)
  };
  %891(%var_10207, %var_10208, %var_10209) /* ty=(Tensor[(490), bool], Tensor[(490), bool], Tensor[(13, 4, 4), bool], float32, Tensor[(8, 15, 1), uint16]) */
}

def @func_6315() -> (Tensor[(14, 3, 5), float32], Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64]) {
  @func_6313() /* ty=(Tensor[(14, 3, 5), float32], Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64]) */
}

def @func_13147() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(14, 3, 7), float64]) {
  %892 = @func_8675() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) */;
  %893 = cast(meta[relay.Constant][24] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %894 = reshape(%893, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %895 = @func_11867(%894) /* ty=(float32, float32, Tensor[(308), float32], Tensor[(5, 7, 14), bool]) */;
  %896 = @func_12711() /* ty=(Tensor[(168), float32], Tensor[(14, 3, 7), float64]) */;
  %897 = %896.1;
  %898 = cast(%897, dtype="float64") /* ty=Tensor[(14, 3, 7), float64] */;
  %899 = %892.2;
  %900 = %895.3;
  %901 = rsqrt(%898) /* ty=Tensor[(14, 3, 7), float64] */;
  (%899, %900, meta[relay.Constant][24] /* ty=Tensor[(308), float32] */, %901)
}

def @func_3065() -> (Tensor[(5, 7, 14), bool],) {
  %902 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  (%902,)
}

def @func_5352() -> (float32, Tensor[(5, 7, 14), float64]) {
  %903 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %904 = %903.0;
  %905 = cast(%904, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %906 = reshape(%905, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %907 = @func_1386(%906) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32]) */;
  %908 = cast(%904, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %909 = %907.2;
  %910 = atanh(%908) /* ty=Tensor[(5, 7, 14), float64] */;
  (%909, %910)
}

def @func_4211() -> (Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) {
  %921 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) {
    %911 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %912 = %911.0;
    %913 = cast(%912, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %914 = cast(meta[relay.Constant][25] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %915 = reshape(%913, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
    %916 = reshape(%914, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %917 = @func_1935(%915, %916) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
    %918 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
    %919 = %917.2;
    %920 = %918.0;
    (%912, %919, meta[relay.Constant][25] /* ty=Tensor[(154), float32] */, %920)
  };
  %921() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */
}

def @func_4456() -> float32 {
  @func_4454() /* ty=float32 */
}

def @func_4006(%var_4004: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  @func_4003(%var_4004) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) */
}

def @func_4879() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) {
  @func_4877() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) */
}

def @func_8296() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) {
  @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */
}

def @func_12712() -> (Tensor[(168), float32], Tensor[(14, 3, 7), float64]) {
  %925 = fn () -> (Tensor[(168), float32], Tensor[(14, 3, 7), float64]) {
    %922 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
    %923 = %922.0;
    %924 = @func_7477() /* ty=Tensor[(14, 3, 7), float64] */;
    (%923, %924)
  };
  %925() /* ty=(Tensor[(168), float32], Tensor[(14, 3, 7), float64]) */
}

def @func_9056() -> (float32, Tensor[(5, 7, 14), bool]) {
  %930 = fn () -> (float32, Tensor[(5, 7, 14), bool]) {
    %926 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
    %927 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %928 = %926.1;
    %929 = %927.0;
    (%928, %929)
  };
  %930() /* ty=(float32, Tensor[(5, 7, 14), bool]) */
}

def @func_3472() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %931 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %932 = @func_2930() /* ty=Tensor[(5, 7, 14), bool] */;
  (%931, %932)
}

def @func_6372() -> Tensor[(5, 7, 14), bool] {
  @func_6370() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_10321(%var_10312: Tensor[(1, 6, 16), uint64]) -> Tensor[(1, 6, 16), uint64] {
  %933 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %934 = cast(%var_10312, dtype="uint64") /* ty=Tensor[(1, 6, 16), uint64] */;
  multiply(%933, %934) /* ty=Tensor[(1, 6, 16), uint64] */
}

def @func_3252() -> (float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) {
  %944 = fn () -> (float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) {
    %935 = cast(meta[relay.Constant][27] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
    %936 = reshape(%935, newshape=[490]) /* ty=Tensor[(490), bool] */;
    %937 = @func_2335(%936) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */;
    %938 = @func_1610() /* ty=float32 */;
    %939 = cast(%938, dtype="float32") /* ty=float32 */;
    %940 = reshape(%939, newshape=[]) /* ty=float32 */;
    %941 = @func_1151(%940) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */;
    %942 = %937.2;
    %943 = %941.4;
    (%938, %942, meta[relay.Constant][27] /* ty=Tensor[(490), bool] */, %943)
  };
  %944() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_6009(%var_6008: Tensor[(16, 2, 4), float32]) -> Tensor[(16, 2, 4), float32] {
  %946 = fn (%var_5969: Tensor[(16, 2, 4), float32]) -> Tensor[(16, 2, 4), float32] {
    %945 = cast(%var_5969, dtype="float32") /* ty=Tensor[(16, 2, 4), float32] */;
    cosh(%945) /* ty=Tensor[(16, 2, 4), float32] */
  };
  %946(%var_6008) /* ty=Tensor[(16, 2, 4), float32] */
}

def @func_6313() -> (Tensor[(14, 3, 5), float32], Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64]) {
  %947 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 5), float32] */;
  %948 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(14, 3, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 5), float32] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %951 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %952 = @func_4510() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %953 = divide(%949, %950) /* ty=Tensor[(14, 3, 5), float32] */;
  %954 = %951.0;
  %955 = %952.0;
  (%953, %954, %955)
}

def @func_16264() -> (Tensor[(5, 7, 14), bool],) {
  @func_16262() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_7936() -> (float32,) {
  %958 = fn () -> (float32,) {
    %956 = @func_6950() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
    %957 = %956.1;
    (%957,)
  };
  %958() /* ty=(float32,) */
}

def @func_9579() -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float64]) {
  @func_9577() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float64]) */
}

def @func_17806() -> (Tensor[(5, 7, 14), bool], float32) {
  %963 = fn () -> (Tensor[(5, 7, 14), bool], float32) {
    %959 = @func_3819() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %960 = @func_12095() /* ty=(float32,) */;
    %961 = %959.0;
    %962 = %960.0;
    (%961, %962)
  };
  %963() /* ty=(Tensor[(5, 7, 14), bool], float32) */
}

def @func_17908() -> (Tensor[(5, 7, 14), float64], float32) {
  %967 = fn () -> (Tensor[(5, 7, 14), float64], float32) {
    %964 = @func_9577() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float64]) */;
    %965 = %964.2;
    %966 = @func_10756() /* ty=float32 */;
    (%965, %966)
  };
  %967() /* ty=(Tensor[(5, 7, 14), float64], float32) */
}

def @func_12205() -> (Tensor[(5, 7, 14), bool],) {
  %968 = @func_6354() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) */;
  %969 = %968.0;
  (%969,)
}

def @func_18940() -> (Tensor[(5, 7, 14), float64],) {
  %972 = fn () -> (Tensor[(5, 7, 14), float64],) {
    %970 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
    %971 = %970.0;
    (%971,)
  };
  %972() /* ty=(Tensor[(5, 7, 14), float64],) */
}

def @func_4992() -> Tensor[(5, 7, 14), bool] {
  @func_4990() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_7818() -> (float32, float32) {
  %976 = fn () -> (float32, float32) {
    %973 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
    %974 = @func_4454() /* ty=float32 */;
    %975 = %973.3;
    (%974, %975)
  };
  %976() /* ty=(float32, float32) */
}

def @func_16895() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], float32, float32) {
  %983 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], float32, float32) {
    %977 = @func_10692() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
    %978 = @func_13517() /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float64], float32) */;
    %979 = %977.2;
    %980 = @func_5648() /* ty=Tensor[(5, 7, 14), float64] */;
    %981 = @func_11831() /* ty=float32 */;
    %982 = %978.0;
    (%979, %980, %981, %982)
  };
  %983() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], float32, float32) */
}

def @func_8382() -> (Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %988 = fn () -> (Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
    %984 = @func_8294() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) */;
    %985 = %984.1;
    %986 = @func_6370() /* ty=Tensor[(5, 7, 14), bool] */;
    %987 = @func_6097() /* ty=Tensor[(5, 7, 14), bool] */;
    (%985, %986, %987)
  };
  %988() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_7381() -> float32 {
  %990 = fn () -> float32 {
    %989 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
    %989.0
  };
  %990() /* ty=float32 */
}

def @func_12692(%var_12656: float64) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float64, Tensor[(14, 10, 9), float64], Tensor[(1260), float64], Tensor[(5, 7, 14), bool]) {
  %991 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %992 = %991.3;
  %993 = cast(%992, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %994 = cast(%var_12656, dtype="float64") /* ty=float64 */;
  %995 = reshape(%993, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %996 = reshape(%994, newshape=[]) /* ty=float64 */;
  %997 = @func_11516(%995, %996) /* ty=(Tensor[(5, 7, 14), uint32], Tensor[(14, 10, 9), float64], float64, Tensor[(1260, 1), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %998 = cast(%var_12656, dtype="float64") /* ty=float64 */;
  %999 = cast(meta[relay.Constant][30] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1000 = reshape(%998, newshape=[]) /* ty=float64 */;
  %1001 = reshape(%999, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), float64] */;
  %1002 = @func_8054(%1000, %1001) /* ty=(Tensor[(14, 10, 9), float64],) */;
  %1003 = %997.4;
  %1004 = %1002.0;
  %1005 = @func_4990() /* ty=Tensor[(5, 7, 14), bool] */;
  (%992, %1003, %var_12656, %1004, meta[relay.Constant][30] /* ty=Tensor[(1260), float64] */, %1005)
}

def @func_3335(%var_3334: Tensor[(2, 12, 7), float32]) -> (Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) {
  %1012 = fn (%var_3318: Tensor[(2, 12, 7), float32]) -> (Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) {
    %1006 = cast(-3.5293f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1007 = cast(%var_3318, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
    %1008 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
    %1009 = cast(%1008, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
    %1010 = divide(%1006, %1007) /* ty=Tensor[(2, 12, 7), float32] */;
    %1011 = sinh(%1009) /* ty=Tensor[(5, 7, 14), float32] */;
    (%1010, %1011)
  };
  %1012(%var_3334) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(5, 7, 14), float32]) */
}

def @func_14448() -> (float32,) {
  %1015 = fn () -> (float32,) {
    %1013 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
    %1014 = %1013.0;
    (%1014,)
  };
  %1015() /* ty=(float32,) */
}

def @func_17153() -> (float32, float32) {
  @func_17151() /* ty=(float32, float32) */
}

def @func_13784() -> (float32,) {
  %1018 = fn () -> (float32,) {
    %1016 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
    %1017 = %1016.2;
    (%1017,)
  };
  %1018() /* ty=(float32,) */
}

def @func_11603(%var_11601: int64, %var_11602: Tensor[(4, 5, 2), int64]) -> (Tensor[(4, 5, 2), int64],) {
  @func_11599(%var_11601, %var_11602) /* ty=(Tensor[(4, 5, 2), int64],) */
}

def @func_5298(%var_5290: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) {
  %1019 = @func_5015() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1020 = @func_2930() /* ty=Tensor[(5, 7, 14), bool] */;
  %1021 = cast(%var_5290, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1022 = shape_of(%1020, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1023 = cast(%1020, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1025 = %1019.0;
  %1026 = @func_3305() /* ty=float32 */;
  %1027 = logical_or(%1023, %1024) /* ty=Tensor[(5, 7, 14), bool] */;
  (%1025, %1026, %1027)
}

def @func_7575() -> (float32,) {
  %1029 = fn () -> (float32,) {
    %1028 = @func_3855() /* ty=float32 */;
    (%1028,)
  };
  %1029() /* ty=(float32,) */
}

def @func_1909() -> float32 {
  @func_1907() /* ty=float32 */
}

def @func_8542() -> (Tensor[(5, 7, 14), bool],) {
  %1032 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %1030 = @func_7806() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %1031 = %1030.0;
    (%1031,)
  };
  %1032() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_7542() -> (float32, float32) {
  %1037 = fn () -> (float32, float32) {
    %1033 = @func_5910() /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(154), float32], float32, Tensor[(154, 1), float32]) */;
    %1034 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
    %1035 = %1033.4;
    %1036 = %1034.5;
    (%1035, %1036)
  };
  %1037() /* ty=(float32, float32) */
}

def @func_11360() -> float32 {
  @func_11358() /* ty=float32 */
}

def @func_3151(%var_3150: Tensor[(14, 3, 16), int64]) -> (Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) {
  %1047 = fn (%var_3129: Tensor[(14, 3, 16), int64]) -> (Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) {
    %1038 = cast(%var_3129, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
    %1039 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(14, 3, 16), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1040 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 3, 16), int64] */, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
    %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1042 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
    %1043 = less(%1040, %1041) /* ty=Tensor[(14, 3, 16), bool] */;
    %1044 = %1042.5;
    %1045 = @func_1907() /* ty=float32 */;
    %1046 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
    (%1043, %1044, %1045, %1046)
  };
  %1047(%var_3150) /* ty=(Tensor[(14, 3, 16), bool], float32, float32, Tensor[(5, 7, 14), bool]) */
}

def @func_18272() -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], float32) {
  %1048 = @func_8002() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1049 = %1048.0;
  %1050 = cast(%1049, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1051 = reshape(%1050, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %1052 = @func_5298(%1051) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %1053 = @func_11661() /* ty=Tensor[(5, 7, 14), bool] */;
  %1054 = %1052.1;
  (%1049, %1053, %1054)
}

def @func_9201() -> float32 {
  %1056 = fn () -> float32 {
    %1055 = @func_9055() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
    %1055.0
  };
  %1056() /* ty=float32 */
}

def @func_5301(%var_5299: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) {
  @func_5298(%var_5299) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */
}

def @func_4069(%var_4067: Tensor[(11, 9, 12), float32]) -> (float32, Tensor[(490), float32], Tensor[(22, 7), float32], Tensor[(168), float32], Tensor[(11, 9, 12), float32], float32) {
  @func_4066(%var_4067) /* ty=(float32, Tensor[(490), float32], Tensor[(22, 7), float32], Tensor[(168), float32], Tensor[(11, 9, 12), float32], float32) */
}

def @func_10758() -> float32 {
  @func_10756() /* ty=float32 */
}

def @func_15758() -> (Tensor[(8, 15, 1), uint16], float32, Tensor[(5, 7, 14), bool]) {
  %1062 = fn () -> (Tensor[(8, 15, 1), uint16], float32, Tensor[(5, 7, 14), bool]) {
    %1057 = @func_6354() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) */;
    %1058 = @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %1059 = %1057.1;
    %1060 = @func_15298() /* ty=float32 */;
    %1061 = %1058.0;
    (%1059, %1060, %1061)
  };
  %1062() /* ty=(Tensor[(8, 15, 1), uint16], float32, Tensor[(5, 7, 14), bool]) */
}

def @func_12885(%var_12884: Tensor[(792), float64]) -> (float32, Tensor[(8, 11, 9), float64], Tensor[(792), float64], Tensor[(14, 3, 7), float64]) {
  %1070 = fn (%var_12870: Tensor[(792), float64]) -> (float32, Tensor[(8, 11, 9), float64], Tensor[(792), float64], Tensor[(14, 3, 7), float64]) {
    %1063 = @func_3487() /* ty=(float32,) */;
    %1064 = cast(%var_12870, dtype="float64") /* ty=Tensor[(792), float64] */;
    %1065 = reshape(%1064, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
    %1066 = @func_11552() /* ty=(Tensor[(14, 3, 7), float64],) */;
    %1067 = %1063.0;
    %1068 = @func_11253(%1065) /* ty=Tensor[(8, 11, 9), float64] */;
    %1069 = %1066.0;
    (%1067, %1068, %var_12870, %1069)
  };
  %1070(%var_12884) /* ty=(float32, Tensor[(8, 11, 9), float64], Tensor[(792), float64], Tensor[(14, 3, 7), float64]) */
}

def @func_7899() -> (float32,) {
  @func_7897() /* ty=(float32,) */
}

def @func_17204() -> (Tensor[(8, 15, 1), float32], float32) {
  %1075 = fn () -> (Tensor[(8, 15, 1), float32], float32) {
    %1071 = @func_14823() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool]) */;
    %1072 = @func_8675() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) */;
    %1073 = %1071.0;
    %1074 = %1072.0;
    (%1073, %1074)
  };
  %1075() /* ty=(Tensor[(8, 15, 1), float32], float32) */
}

def @func_18443() -> Tensor[(5, 7, 14), bool] {
  %1077 = fn () -> Tensor[(5, 7, 14), bool] {
    %1076 = @func_16447() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %1076.0
  };
  %1077() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_16447() -> (Tensor[(5, 7, 14), bool],) {
  %1078 = @func_16262() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1079 = %1078.0;
  (%1079,)
}

def @func_6951() -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) {
  %1087 = fn () -> (Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) {
    %1080 = @func_6636() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %1081 = %1080.0;
    %1082 = cast(%1081, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %1083 = reshape(%1082, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
    %1084 = @func_1610() /* ty=float32 */;
    %1085 = @func_5425(%1083) /* ty=Tensor[(5, 7, 14), float32] */;
    %1086 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
    (%1081, %1084, %1085, %1086)
  };
  %1087() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */
}

def @func_15859() -> float32 {
  @func_15857() /* ty=float32 */
}

def @func_2291(%var_2289: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(8, 15, 1), float32], Tensor[(480, 6), float64], float32, Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], float32) {
  @func_2288(%var_2289) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(8, 15, 1), float32], Tensor[(480, 6), float64], float32, Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], float32) */
}

def @func_12376() -> (float32, Tensor[(5, 7, 14), bool]) {
  %1092 = fn () -> (float32, Tensor[(5, 7, 14), bool]) {
    %1088 = @func_6950() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
    %1089 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
    %1090 = %1088.1;
    %1091 = %1089.2;
    (%1090, %1091)
  };
  %1092() /* ty=(float32, Tensor[(5, 7, 14), bool]) */
}

def @func_14011() -> (Tensor[(11, 2, 13), float64],) {
  %1093 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 2, 13), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  %1094 = cosh(%1093) /* ty=Tensor[(11, 2, 13), float64] */;
  (%1094,)
}

def @func_17697() -> Tensor[(5, 7, 14), bool] {
  %1096 = fn () -> Tensor[(5, 7, 14), bool] {
    %1095 = @func_13337() /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(5, 7, 14), float32]) */;
    %1095.2
  };
  %1096() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_4374() -> (Tensor[(5, 7, 14), bool],) {
  @func_4372() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_13703() -> (float32, Tensor[(5, 7, 14), float32]) {
  %1100 = fn () -> (float32, Tensor[(5, 7, 14), float32]) {
    %1097 = @func_10656() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) */;
    %1098 = @func_4454() /* ty=float32 */;
    %1099 = %1097.2;
    (%1098, %1099)
  };
  %1100() /* ty=(float32, Tensor[(5, 7, 14), float32]) */
}

def @func_6390() -> Tensor[(5, 7, 14), bool] {
  %1101 = @func_3251() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */;
  %1101.3
}

def @func_14635() -> (Tensor[(490), bool], Tensor[(8, 15, 1), float32]) {
  @func_14633() /* ty=(Tensor[(490), bool], Tensor[(8, 15, 1), float32]) */
}

def @func_639(%var_637: Tensor[(16, 12, 15), float64], %var_638: float32) -> (Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) {
  @func_635(%var_637, %var_638) /* ty=(Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) */
}

def @func_10454() -> (float32,) {
  %1102 = @func_3870() /* ty=(float32,) */;
  %1103 = %1102.0;
  (%1103,)
}

def @func_15896() -> float32 {
  @func_15894() /* ty=float32 */
}

def @func_15864() -> (Tensor[(5, 7, 14), bool],) {
  %1104 = @func_6097() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1104,)
}

def @func_7565() -> (float32,) {
  %1106 = fn () -> (float32,) {
    %1105 = @func_3305() /* ty=float32 */;
    (%1105,)
  };
  %1106() /* ty=(float32,) */
}

def @func_14377() -> float32 {
  @func_14375() /* ty=float32 */
}

def @func_17589(%var_17542: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float32], Tensor[(5, 7, 14), float64]) {
  %1107 = cast(%var_17542, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %1108 = sinh(%1107) /* ty=Tensor[(8, 6, 6), float32] */;
  %1109 = cast(%var_17542, dtype="uint32") /* ty=Tensor[(8, 6, 6), uint32] */;
  %1110 = shape_of(%1108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1111 = cast(%1108, dtype="uint32") /* ty=Tensor[(8, 6, 6), uint32] */;
  %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1113 = minimum(%1111, %1112) /* ty=Tensor[(8, 6, 6), uint32] */;
  %1114 = cast(%1108, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %1115 = shape_of(%1113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1116 = cast(%1113, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %1117 = dyn.reshape(%1114, %1115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1118 = not_equal(%1116, %1117) /* ty=Tensor[(8, 6, 6), bool] */;
  %1119 = cast(%1118, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %1120 = rsqrt(%1119) /* ty=Tensor[(8, 6, 6), float32] */;
  %1121 = cast(%1120, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %1122 = @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1123 = exp(%1121) /* ty=Tensor[(8, 6, 6), float32] */;
  %1124 = %1122.0;
  (%1123, %1124)
}

def @func_328(%var_326: float32) -> (Tensor[(8, 15, 1), float32],) {
  @func_325(%var_326) /* ty=(Tensor[(8, 15, 1), float32],) */
}

def @func_16021() -> (float32, float32) {
  @func_16019() /* ty=(float32, float32) */
}

def @func_15238() -> (Tensor[(14, 3, 7), bool],) {
  %1132 = fn () -> (Tensor[(14, 3, 7), bool],) {
    %1125 = @func_7817() /* ty=(float32, float32) */;
    %1126 = %1125.1;
    %1127 = @func_4510() /* ty=(Tensor[(14, 3, 7), float64],) */;
    %1128 = %1127.0;
    %1129 = cast(%1126, dtype="bool") /* ty=bool */;
    %1130 = cast(%1128, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
    %1131 = less_equal(%1129, %1130) /* ty=Tensor[(14, 3, 7), bool] */;
    (%1131,)
  };
  %1132() /* ty=(Tensor[(14, 3, 7), bool],) */
}

def @func_11996() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) {
  %1133 = @func_7631() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1134 = @func_10266() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1135 = %1133.0;
  %1136 = %1134.0;
  (%1135, %1136)
}

def @func_11129() -> Tensor[(490), float32] {
  @func_11127() /* ty=Tensor[(490), float32] */
}

def @func_16262() -> (Tensor[(5, 7, 14), bool],) {
  %1137 = @func_5015() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1138 = %1137.0;
  (%1138,)
}

def @func_3633(%var_3551: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], float32, Tensor[(?, 11, 14), int64], Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), float64]) {
  %1139 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1140 = %1139.1;
  %1141 = cast(%1140, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1142 = cast(meta[relay.Constant][33] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1143 = reshape(%1141, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %1144 = reshape(%1142, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1145 = @func_1935(%1143, %1144) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %1146 = cast(%var_3551, dtype="float32") /* ty=float32 */;
  %1147 = reshape(%1146, newshape=[]) /* ty=float32 */;
  %1148 = @func_325(%1147) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1149 = cast(%1140, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1150 = cast(meta[relay.Constant][33] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1151 = reshape(%1149, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
  %1152 = reshape(%1150, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1153 = @func_1935(%1151, %1152) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(154), float64]) */;
  %1154 = %1153.1;
  %1155 = cast(meta[relay.Constant][33] /* ty=Tensor[(154), float32] */, dtype="int64") /* ty=Tensor[(154), int64] */;
  %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1157 = cast(%1154, dtype="int64") /* ty=Tensor[(1, 11, 14), int64] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1159 = multiply(%1157, %1158) /* ty=Tensor[(?, 11, 14), int64] */;
  %1160 = cast(%1159, dtype="float32") /* ty=Tensor[(?, 11, 14), float32] */;
  %1161 = reshape(%1160, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %1162 = @func_1779(%1161) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %1163 = @func_2483() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1164 = %1145.0;
  %1165 = %1148.0;
  %1166 = %1162.0;
  %1167 = %1163.0;
  (%1140, %1164, %1165, %var_3551, %1159, %1166, %1167)
}

def @func_16470() -> (Tensor[(5, 7, 14), bool],) {
  %1168 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1168,)
}

def @func_4325() -> Tensor[(5, 7, 14), bool] {
  @func_4323() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_11153() -> float32 {
  %1170 = fn () -> float32 {
    %1169 = @func_8962() /* ty=(float32, float32) */;
    %1169.0
  };
  %1170() /* ty=float32 */
}

def @func_16019() -> (float32, float32) {
  %1171 = @func_13055() /* ty=(float32, float32) */;
  %1172 = @func_12825() /* ty=float32 */;
  %1173 = %1171.0;
  (%1172, %1173)
}

def @func_17654(%var_17653: Tensor[(12, 13, 8), float32]) -> Tensor[(12, 13, 8), bool] {
  %1178 = fn (%var_17642: Tensor[(12, 13, 8), float32]) -> Tensor[(12, 13, 8), bool] {
    %1174 = @func_17151() /* ty=(float32, float32) */;
    %1175 = %1174.0;
    %1176 = cast(%1175, dtype="bool") /* ty=bool */;
    %1177 = cast(%var_17642, dtype="bool") /* ty=Tensor[(12, 13, 8), bool] */;
    greater_equal(%1176, %1177) /* ty=Tensor[(12, 13, 8), bool] */
  };
  %1178(%var_17653) /* ty=Tensor[(12, 13, 8), bool] */
}

def @func_10656() -> (Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) {
  %1179 = @func_4510() /* ty=(Tensor[(14, 3, 7), float64],) */;
  %1180 = @func_5812() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
  %1181 = cast(meta[relay.Constant][34] /* ty=Tensor[(50, 1), int64] */, dtype="int64") /* ty=Tensor[(50, 1), int64] */;
  %1182 = reshape(%1181, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), int64] */;
  %1183 = @func_8122(%1182) /* ty=(Tensor[(?, 10, 5), int64], Tensor[(5, 7, 14), float32], Tensor[(168), float32]) */;
  %1184 = %1179.0;
  %1185 = %1180.1;
  %1186 = %1183.1;
  (%1184, %1185, %1186, meta[relay.Constant][34] /* ty=Tensor[(50, 1), int64] */)
}

def @func_17104(%var_17093: Tensor[(6, 2, 15), float32]) -> Tensor[(6, 2, 15), int8] {
  %1187 = cast(%var_17093, dtype="float32") /* ty=Tensor[(6, 2, 15), float32] */;
  %1188 = log(%1187) /* ty=Tensor[(6, 2, 15), float32] */;
  %1189 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 2, 15), float32] */, dtype="int8") /* ty=Tensor[(6, 2, 15), int8] */;
  %1190 = shape_of(%1188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%1188, dtype="int8") /* ty=Tensor[(6, 2, 15), int8] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%1191, %1192) /* ty=Tensor[(6, 2, 15), int8] */
}

def @func_17008() -> (Tensor[(5, 7, 14), bool],) {
  @func_17006() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_3749() -> Tensor[(8, 15, 1), uint16] {
  %1199 = fn () -> Tensor[(8, 15, 1), uint16] {
    %1193 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
    %1194 = %1193.2;
    %1195 = @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */;
    %1196 = %1195.0;
    %1197 = cast(%1194, dtype="uint16") /* ty=uint16 */;
    %1198 = cast(%1196, dtype="uint16") /* ty=Tensor[(8, 15, 1), uint16] */;
    minimum(%1197, %1198) /* ty=Tensor[(8, 15, 1), uint16] */
  };
  %1199() /* ty=Tensor[(8, 15, 1), uint16] */
}

def @func_9688() -> float32 {
  @func_9686() /* ty=float32 */
}

def @func_10785() -> (float32,) {
  %1200 = @func_3855() /* ty=float32 */;
  (%1200,)
}

def @func_4362() -> Tensor[(5, 7, 14), bool] {
  @func_4360() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_635(%var_585: Tensor[(16, 12, 15), float64], %var_603: float32) -> (Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) {
  %1201 = cast(%var_585, dtype="float64") /* ty=Tensor[(16, 12, 15), float64] */;
  %1202 = cast(%var_603, dtype="float32") /* ty=float32 */;
  %1203 = reshape(%1202, newshape=[]) /* ty=float32 */;
  %1204 = @func_325(%1203) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1205 = cast(%var_603, dtype="float32") /* ty=float32 */;
  %1206 = reshape(%1205, newshape=[]) /* ty=float32 */;
  %1207 = @func_325(%1206) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1208 = cast(%var_603, dtype="float32") /* ty=float32 */;
  %1209 = reshape(%1208, newshape=[]) /* ty=float32 */;
  %1210 = @func_325(%1209) /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1211 = %1210.0;
  %1212 = cast(%1211, dtype="float32") /* ty=Tensor[(8, 15, 1), float32] */;
  %1213 = log2(%1201) /* ty=Tensor[(16, 12, 15), float64] */;
  %1214 = %1204.0;
  %1215 = %1207.0;
  %1216 = cos(%1212) /* ty=Tensor[(8, 15, 1), float32] */;
  (%1213, %1214, %var_603, %1215, %1216)
}

def @func_10324(%var_10322: Tensor[(1, 6, 16), uint64]) -> Tensor[(1, 6, 16), uint64] {
  @func_10321(%var_10322) /* ty=Tensor[(1, 6, 16), uint64] */
}

def @func_9613() -> (float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(308), float32]) {
  %1217 = @func_7260() /* ty=(float32, float32, Tensor[(5, 7, 14), bool]) */;
  %1218 = @func_4931() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
  %1219 = cast(meta[relay.Constant][36] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1220 = reshape(%1219, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %1221 = @func_9425(%1220) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(308), float32]) */;
  %1222 = %1217.0;
  %1223 = %1218.0;
  %1224 = %1221.0;
  (%1222, %1223, %1224, meta[relay.Constant][36] /* ty=Tensor[(308), float32] */)
}

def @func_18624() -> (float32, float32) {
  %1225 = @func_13517() /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float64], float32) */;
  %1226 = @func_18127() /* ty=float32 */;
  %1227 = %1225.3;
  (%1226, %1227)
}

def @func_8058(%var_8056: float64, %var_8057: Tensor[(14, 10, 9), float64]) -> (Tensor[(14, 10, 9), float64],) {
  @func_8054(%var_8056, %var_8057) /* ty=(Tensor[(14, 10, 9), float64],) */
}

def @func_18724() -> (float32, Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) {
  %1238 = fn () -> (float32, Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) {
    %1228 = @func_8381() /* ty=(Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %1229 = @func_2903() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(5, 7, 14), bool]) */;
    %1230 = @func_12445() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %1231 = @func_14633() /* ty=(Tensor[(490), bool], Tensor[(8, 15, 1), float32]) */;
    %1232 = @func_12066() /* ty=float32 */;
    %1233 = %1228.1;
    %1234 = %1229.3;
    %1235 = %1230.0;
    %1236 = %1231.0;
    %1237 = @func_17049() /* ty=Tensor[(5, 7, 14), bool] */;
    (%1232, %1233, %1234, %1235, %1236, %1237)
  };
  %1238() /* ty=(float32, Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_8589(%var_8587: Tensor[(3, 12, 1), int64], %var_8588: Tensor[(3, 12, 1), int64]) -> (Tensor[(3, 12, ?), int64], float32) {
  %1245 = fn (%var_8565: Tensor[(3, 12, 1), int64], %var_8566: Tensor[(3, 12, 1), int64]) -> (Tensor[(3, 12, ?), int64], float32) {
    %1239 = cast(%var_8566, dtype="int64") /* ty=Tensor[(3, 12, 1), int64] */;
    %1240 = shape_of(%var_8565, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1241 = cast(%var_8565, dtype="int64") /* ty=Tensor[(3, 12, 1), int64] */;
    %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1243 = left_shift(%1241, %1242) /* ty=Tensor[(3, 12, ?), int64] */;
    %1244 = @func_3855() /* ty=float32 */;
    (%1243, %1244)
  };
  %1245(%var_8587, %var_8588) /* ty=(Tensor[(3, 12, ?), int64], float32) */
}

def @func_16915() -> (float32,) {
  @func_16913() /* ty=(float32,) */
}

def @func_16962() -> (Tensor[(5, 7, 14), bool], Tensor[(168), float32]) {
  %1246 = @func_14535() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64], Tensor[(8, 15, 1), float32]) */;
  %1247 = @func_12711() /* ty=(Tensor[(168), float32], Tensor[(14, 3, 7), float64]) */;
  %1248 = %1246.0;
  %1249 = %1247.0;
  (%1248, %1249)
}

def @func_5649() -> Tensor[(5, 7, 14), float64] {
  %1253 = fn () -> Tensor[(5, 7, 14), float64] {
    %1250 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
    %1251 = %1250.1;
    %1252 = cast(%1251, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
    erf(%1252) /* ty=Tensor[(5, 7, 14), float64] */
  };
  %1253() /* ty=Tensor[(5, 7, 14), float64] */
}

def @func_12446() -> (Tensor[(5, 7, 14), bool],) {
  %1256 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %1254 = @func_8220() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %1255 = %1254.0;
    (%1255,)
  };
  %1256() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_14013() -> (Tensor[(11, 2, 13), float64],) {
  @func_14011() /* ty=(Tensor[(11, 2, 13), float64],) */
}

def @func_13519() -> (float32, Tensor[(490), bool], Tensor[(5, 7, 14), float64], float32) {
  @func_13517() /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float64], float32) */
}

def @func_9314() -> (float32,) {
  @func_9312() /* ty=(float32,) */
}

def @func_1049(%var_1047: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_1046(%var_1047) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_5428(%var_5426: Tensor[(5, 7, 14), bool]) -> Tensor[(5, 7, 14), float32] {
  @func_5425(%var_5426) /* ty=Tensor[(5, 7, 14), float32] */
}

def @func_10473() -> (Tensor[(8, 15, 5), float64],) {
  @func_10471() /* ty=(Tensor[(8, 15, 5), float64],) */
}

def @func_6871() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) {
  @func_6869() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32]) */
}

def @func_18844(%var_18843: Tensor[(22, 7), float32]) -> (Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(154), float32], Tensor[(22, 7), float32]) {
  %1269 = fn (%var_18827: Tensor[(22, 7), float32]) -> (Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(154), float32], Tensor[(22, 7), float32]) {
    %1257 = @func_10297() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
    %1258 = @func_7541() /* ty=(float32, float32) */;
    %1259 = @func_12095() /* ty=(float32,) */;
    %1260 = @func_12095() /* ty=(float32,) */;
    %1261 = cast(%var_18827, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
    %1262 = reshape(%1261, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %1263 = @func_11398(%1262) /* ty=(float32, Tensor[(5, 7, 14), float64], Tensor[(154), float32]) */;
    %1264 = %1257.1;
    %1265 = %1258.1;
    %1266 = %1259.0;
    %1267 = %1260.0;
    %1268 = %1263.2;
    (%1264, %1265, %1266, %1267, %1268, %var_18827)
  };
  %1269(%var_18843) /* ty=(Tensor[(5, 7, 14), bool], float32, float32, float32, Tensor[(154), float32], Tensor[(22, 7), float32]) */
}

def @func_14047(%var_14046: Tensor[(308), float32]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(8, 15, 1), float32]) {
  %1278 = fn (%var_14037: Tensor[(308), float32]) -> (float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(8, 15, 1), float32]) {
    %1270 = @func_3870() /* ty=(float32,) */;
    %1271 = cast(%var_14037, dtype="float32") /* ty=Tensor[(308), float32] */;
    %1272 = reshape(%1271, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %1273 = @func_9425(%1272) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(308), float32]) */;
    %1274 = @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */;
    %1275 = %1270.0;
    %1276 = %1273.1;
    %1277 = %1274.0;
    (%1275, %1276, %var_14037, %1277)
  };
  %1278(%var_14046) /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(308), float32], Tensor[(8, 15, 1), float32]) */
}

def @func_14484(%var_14482: float64, %var_14483: Tensor[(14, 15, 8), float64]) -> (Tensor[(14, 15, 8), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_14480(%var_14482, %var_14483) /* ty=(Tensor[(14, 15, 8), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_16491(%var_16490: int8) -> (Tensor[(4, 10, 11), int8], Tensor[(168), float32]) {
  %1284 = fn (%var_16473: int8) -> (Tensor[(4, 10, 11), int8], Tensor[(168), float32]) {
    %1279 = cast(%var_16473, dtype="int8") /* ty=int8 */;
    %1280 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 10, 11), int8] */, dtype="int8") /* ty=Tensor[(4, 10, 11), int8] */;
    %1281 = @func_7421() /* ty=(Tensor[(168), float32], float32, Tensor[(154), float32], float32, Tensor[(154), float32]) */;
    %1282 = subtract(%1279, %1280) /* ty=Tensor[(4, 10, 11), int8] */;
    %1283 = %1281.0;
    (%1282, %1283)
  };
  %1284(%var_16490) /* ty=(Tensor[(4, 10, 11), int8], Tensor[(168), float32]) */
}

def @func_6370() -> Tensor[(5, 7, 14), bool] {
  %1285 = @func_3065() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1285.0
}

def @func_5211() -> (Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %1286 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
  %1287 = @func_4421() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %1288 = @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1289 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1290 = %1286.0;
  %1291 = %1287.1;
  %1292 = %1288.0;
  %1293 = %1289.1;
  (%1290, %1291, %1292, %1293)
}

def @func_11358() -> float32 {
  %1294 = @func_4877() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) */;
  %1294.0
}

def @func_3706() -> (Tensor[(5, 7, 14), bool],) {
  @func_3704() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_10091(%var_10089: Tensor[(308), float32]) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(308), float32]) {
  @func_10088(%var_10089) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(308), float32]) */
}

def @func_8200(%var_8189: Tensor[(154, 2), float32]) -> (Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154, 1), float32], Tensor[(154, 2), float32], Tensor[(5, 7, 14), bool]) {
  %1295 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %1296 = cast(%var_8189, dtype="float32") /* ty=Tensor[(154, 2), float32] */;
  %1297 = reshape(%1296, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %1298 = @func_6759(%1297) /* ty=(Tensor[(154, 2), bool], float32, Tensor[(154, 1), float32]) */;
  %1299 = %1295.0;
  %1300 = @func_2930() /* ty=Tensor[(5, 7, 14), bool] */;
  %1301 = %1298.2;
  %1302 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  (%1299, %1300, %1301, %var_8189, %1302)
}

def @func_1527() -> Tensor[(5, 7, 14), bool] {
  @func_1525() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_9425(%var_9417: Tensor[(308), float32]) -> (Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(490), bool], Tensor[(308), float32]) {
  %1303 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %1304 = @func_4421() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %1305 = cast(%var_9417, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1306 = reshape(%1305, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %1307 = @func_8200(%1306) /* ty=(Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154, 1), float32], Tensor[(154, 2), float32], Tensor[(5, 7, 14), bool]) */;
  %1308 = %1303.1;
  %1309 = %1304.2;
  %1310 = %1307.0;
  (%1308, %1309, %1310, %var_9417)
}

def @func_11678() -> (Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(168), float32]) {
  @func_11676() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(168), float32]) */
}

def @func_13609() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(9, 6, 13), bool], Tensor[(702), int32]) {
  %1311 = @func_11676() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(168), float32]) */;
  %1312 = @func_1907() /* ty=float32 */;
  %1313 = cast(%1312, dtype="int32") /* ty=int32 */;
  %1314 = cast(meta[relay.Constant][38] /* ty=Tensor[(702), int32] */, dtype="int32") /* ty=Tensor[(702), int32] */;
  %1315 = reshape(%1313, newshape=[]) /* ty=int32 */;
  %1316 = reshape(%1314, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), int32] */;
  %1317 = %1311.0;
  %1318 = @func_1686() /* ty=Tensor[(5, 7, 14), bool] */;
  %1319 = @func_12395(%1315, %1316) /* ty=Tensor[(9, 6, 13), bool] */;
  (%1317, %1318, %1312, %1319, meta[relay.Constant][38] /* ty=Tensor[(702), int32] */)
}

def @func_2645(%var_2641: Tensor[(8, 10, 6), float64]) -> (Tensor[(8, 10, 6), float64],) {
  %1320 = cast(%var_2641, dtype="float64") /* ty=Tensor[(8, 10, 6), float64] */;
  %1321 = atan(%1320) /* ty=Tensor[(8, 10, 6), float64] */;
  (%1321,)
}

def @func_17006() -> (Tensor[(5, 7, 14), bool],) {
  %1322 = @func_9973() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], float32, float32, float32, Tensor[(5, 7, 14), float64]) */;
  %1323 = %1322.1;
  (%1323,)
}

def @func_16964() -> (Tensor[(5, 7, 14), bool], Tensor[(168), float32]) {
  @func_16962() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(168), float32]) */
}

def @func_5537() -> (float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) {
  %1332 = fn () -> (float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) {
    %1324 = @func_3870() /* ty=(float32,) */;
    %1325 = cast(meta[relay.Constant][39] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1326 = reshape(%1325, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1327 = @func_3933(%1326) /* ty=(Tensor[(5, 7, 14), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32], Tensor[(154), float32], Tensor[(22, 7), float32]) */;
    %1328 = @func_2702() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) */;
    %1329 = %1324.0;
    %1330 = %1327.0;
    %1331 = %1328.3;
    (%1329, %1330, meta[relay.Constant][39] /* ty=Tensor[(168), float32] */, %1331)
  };
  %1332() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */
}

def @func_17381() -> (Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool]) {
  @func_17379() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool]) */
}

def @func_12954() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_12952() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_7807() -> (Tensor[(5, 7, 14), bool],) {
  %1334 = fn () -> (Tensor[(5, 7, 14), bool],) {
    %1333 = @func_6390() /* ty=Tensor[(5, 7, 14), bool] */;
    (%1333,)
  };
  %1334() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_8294() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32]) {
  %1335 = @func_5438() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1336 = @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1337 = %1335.0;
  %1338 = %1336.0;
  (%1337, %1338)
}

def @func_8203(%var_8201: Tensor[(154, 2), float32]) -> (Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154, 1), float32], Tensor[(154, 2), float32], Tensor[(5, 7, 14), bool]) {
  @func_8200(%var_8201) /* ty=(Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154, 1), float32], Tensor[(154, 2), float32], Tensor[(5, 7, 14), bool]) */
}

def @func_1525() -> Tensor[(5, 7, 14), bool] {
  @func_1000() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_4244() -> float32 {
  @func_4242() /* ty=float32 */
}

def @func_11889() -> (float32,) {
  @func_11887() /* ty=(float32,) */
}

def @func_9312() -> (float32,) {
  %1339 = @func_4454() /* ty=float32 */;
  (%1339,)
}

def @func_2702() -> (Tensor[(5, 7, 14), float64], Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), bool], float32) {
  %1340 = @func_2126() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
  %1341 = %1340.1;
  %1342 = cast(%1341, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
  %1343 = reshape(%1342, newshape=[490]) /* ty=Tensor[(490), bool] */;
  %1344 = @func_2335(%1343) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */;
  %1345 = cast(meta[relay.Constant][40] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1346 = reshape(%1345, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %1347 = @func_1779(%1346) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
  %1348 = cast(-5.7182f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1349 = reshape(%1348, newshape=[]) /* ty=float32 */;
  %1350 = @func_1046(%1349) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(16, 12, 15), float64], Tensor[(2880), float64], float32, Tensor[(8, 15, 1), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1351 = %1344.1;
  %1352 = %1347.1;
  %1353 = %1350.0;
  (%1341, %1351, %1352, meta[relay.Constant][40] /* ty=Tensor[(154), float32] */, %1353, -5.7182f /* ty=float32 */)
}

def @func_15363() -> (Tensor[(168), float32], Tensor[(308), float32]) {
  %1358 = fn () -> (Tensor[(168), float32], Tensor[(308), float32]) {
    %1354 = @func_12711() /* ty=(Tensor[(168), float32], Tensor[(14, 3, 7), float64]) */;
    %1355 = @func_9613() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(308), float32]) */;
    %1356 = %1354.0;
    %1357 = %1355.3;
    (%1356, %1357)
  };
  %1358() /* ty=(Tensor[(168), float32], Tensor[(308), float32]) */
}

def @func_11599(%var_11585: int64, %var_11586: Tensor[(4, 5, 2), int64]) -> (Tensor[(4, 5, 2), int64],) {
  %1359 = cast(%var_11585, dtype="int64") /* ty=int64 */;
  %1360 = cast(%var_11586, dtype="int64") /* ty=Tensor[(4, 5, 2), int64] */;
  %1361 = left_shift(%1359, %1360) /* ty=Tensor[(4, 5, 2), int64] */;
  (%1361,)
}

def @func_3636(%var_3634: float32) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], float32, Tensor[(?, 11, 14), int64], Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), float64]) {
  @func_3633(%var_3634) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), float32], float32, Tensor[(?, 11, 14), int64], Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), float64]) */
}

def @func_5213() -> (Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_5211() /* ty=(Tensor[(5, 7, 14), float64], float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_11831() -> float32 {
  %1362 = @func_7574() /* ty=(float32,) */;
  %1362.0
}

def @func_12038() -> (Tensor[(5, 7, 14), bool],) {
  @func_12036() /* ty=(Tensor[(5, 7, 14), bool],) */
}

def @func_13057() -> (float32, float32) {
  @func_13055() /* ty=(float32, float32) */
}

def @func_13727() -> (float32, Tensor[(8, 15, 1), float32]) {
  %1367 = fn () -> (float32, Tensor[(8, 15, 1), float32]) {
    %1363 = @func_8023() /* ty=(float32,) */;
    %1364 = @func_10266() /* ty=(Tensor[(8, 15, 1), float32],) */;
    %1365 = %1363.0;
    %1366 = %1364.0;
    (%1365, %1366)
  };
  %1367() /* ty=(float32, Tensor[(8, 15, 1), float32]) */
}

def @func_10658() -> (Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) {
  @func_10656() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float32], Tensor[(50, 1), int64]) */
}

def @func_3474() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_2126() -> (float32, Tensor[(5, 7, 14), float64]) {
  %1368 = @func_1907() /* ty=float32 */;
  %1369 = cast(%1368, dtype="float32") /* ty=float32 */;
  %1370 = reshape(%1369, newshape=[]) /* ty=float32 */;
  %1371 = @func_1151(%1370) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */;
  %1372 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
  %1373 = cast(%1372, dtype="float64") /* ty=Tensor[(5, 7, 14), float64] */;
  %1374 = cast(%1368, dtype="float64") /* ty=float64 */;
  %1375 = %1371.1;
  %1376 = mod(%1373, %1374) /* ty=Tensor[(5, 7, 14), float64] */;
  (%1375, %1376)
}

def @func_13517() -> (float32, Tensor[(490), bool], Tensor[(5, 7, 14), float64], float32) {
  %1377 = @func_5395() /* ty=(float32, Tensor[(8, 15, 1), uint16]) */;
  %1378 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %1379 = @func_4421() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), bool]) */;
  %1380 = %1377.0;
  %1381 = %1378.0;
  %1382 = @func_5648() /* ty=Tensor[(5, 7, 14), float64] */;
  %1383 = %1379.1;
  (%1380, %1381, %1382, %1383)
}

def @func_1153(%var_1152: float32) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) {
  %1398 = fn (%var_1139: float32) -> (Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) {
    %1384 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
    %1385 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
    %1386 = cast(%1385, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %1387 = shape_of(%1384, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1388 = cast(%1384, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %1389 = dyn.reshape(%1386, %1387, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1390 = cast(meta[relay.Constant][41] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %1391 = cast(%var_1139, dtype="float32") /* ty=float32 */;
    %1392 = reshape(%1390, newshape=[16, 12, 15]) /* ty=Tensor[(16, 12, 15), float64] */;
    %1393 = reshape(%1391, newshape=[]) /* ty=float32 */;
    %1394 = @func_635(%1392, %1393) /* ty=(Tensor[(16, 12, 15), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32], Tensor[(8, 15, 1), float32]) */;
    %1395 = less_equal(%1388, %1389) /* ty=Tensor[(5, 7, 14), bool] */;
    %1396 = %1394.2;
    %1397 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
    (%1395, %1396, meta[relay.Constant][41] /* ty=Tensor[(2880), float64] */, %var_1139, %1397)
  };
  %1398(%var_1152) /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(2880), float64], float32, Tensor[(5, 7, 14), bool]) */
}

def @func_6098() -> Tensor[(5, 7, 14), bool] {
  %1399 = fn () -> Tensor[(5, 7, 14), bool] {
    @func_4990() /* ty=Tensor[(5, 7, 14), bool] */
  };
  %1399() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_7765() -> (float32,) {
  %1402 = fn () -> (float32,) {
    %1400 = @func_3870() /* ty=(float32,) */;
    %1401 = %1400.0;
    (%1401,)
  };
  %1402() /* ty=(float32,) */
}

def @func_4139() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], Tensor[(154, 1), float32], float32, Tensor[(154, 1), float64]) {
  %1403 = @func_3379() /* ty=(Tensor[(14, 3, 7), float64], Tensor[(5, 7, 14), bool]) */;
  %1404 = cast(meta[relay.Constant][42] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %1405 = reshape(%1404, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1406 = @func_2288(%1405) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(8, 15, 1), float32], Tensor[(480, 6), float64], float32, Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], float32) */;
  %1407 = cast(meta[relay.Constant][42] /* ty=Tensor[(154, 1), float32] */, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %1408 = cosh(%1407) /* ty=Tensor[(154, 1), float64] */;
  %1409 = cast(%1408, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %1410 = cast(%1408, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %1411 = asin(%1410) /* ty=Tensor[(154, 1), float64] */;
  %1412 = cast(%1411, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %1413 = %1403.1;
  %1414 = @func_1000() /* ty=Tensor[(5, 7, 14), bool] */;
  %1415 = %1406.7;
  %1416 = erf(%1409) /* ty=Tensor[(154, 1), float32] */;
  %1417 = @func_3305() /* ty=float32 */;
  %1418 = acos(%1412) /* ty=Tensor[(154, 1), float64] */;
  (%1413, %1414, %1415, %1416, %1417, %1418)
}

def @func_7189() -> (Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), float64]) {
  %1425 = fn () -> (Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), float64]) {
    %1419 = @func_6617() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %1420 = @func_5536() /* ty=(float32, Tensor[(5, 7, 14), float32], Tensor[(168), float32], Tensor[(154), float32]) */;
    %1421 = @func_5352() /* ty=(float32, Tensor[(5, 7, 14), float64]) */;
    %1422 = %1419.0;
    %1423 = %1420.3;
    %1424 = %1421.1;
    (%1422, %1423, %1424)
  };
  %1425() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(5, 7, 14), float64]) */
}

def @func_10471() -> (Tensor[(8, 15, 5), float64],) {
  %1426 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 15, 5), float64] */, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %1427 = tan(%1426) /* ty=Tensor[(8, 15, 5), float64] */;
  (%1427,)
}

def @func_15084() -> float32 {
  %1429 = fn () -> float32 {
    %1428 = @func_4877() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], float32, Tensor[(1, 672), int64]) */;
    %1428.3
  };
  %1429() /* ty=float32 */
}

def @func_8167() -> (Tensor[(5, 7, 14), bool], float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64]) {
  @func_8165() /* ty=(Tensor[(5, 7, 14), bool], float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64]) */
}

def @func_2337(%var_2336: Tensor[(490), bool]) -> (float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) {
  %1437 = fn (%var_2325: Tensor[(490), bool]) -> (float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) {
    %1430 = cast(%var_2325, dtype="bool") /* ty=Tensor[(490), bool] */;
    %1431 = reshape(%1430, newshape=[5, 7, 14]) /* ty=Tensor[(5, 7, 14), bool] */;
    %1432 = @func_1386(%1431) /* ty=(Tensor[(5, 7, 14), float64], Tensor[(8, 15, 1), float32], float32, Tensor[(8, 15, 1), float32]) */;
    %1433 = %1432.0;
    %1434 = cast(%1433, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
    %1435 = @func_1907() /* ty=float32 */;
    %1436 = exp(%1434) /* ty=Tensor[(5, 7, 14), float32] */;
    (%1435, %var_2325, %1436)
  };
  %1437(%var_2336) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */
}

def @func_13937() -> (Tensor[(5, 7, 14), bool],) {
  %1438 = @func_8002() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1439 = %1438.1;
  (%1439,)
}

def @func_19030(%var_18998: Tensor[(12, 8, 4), uint64]) -> (Tensor[(12, 8, 4), bool], Tensor[(5, 7, 14), bool]) {
  %1440 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 8, 4), uint64] */, dtype="uint64") /* ty=Tensor[(12, 8, 4), uint64] */;
  %1441 = shape_of(%var_18998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1442 = cast(%var_18998, dtype="uint64") /* ty=Tensor[(12, 8, 4), uint64] */;
  %1443 = dyn.reshape(%1440, %1441, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1444 = bitwise_and(%1442, %1443) /* ty=Tensor[(12, 8, 4), uint64] */;
  %1445 = cast(%var_18998, dtype="bool") /* ty=Tensor[(12, 8, 4), bool] */;
  %1446 = shape_of(%1444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1447 = cast(%1444, dtype="bool") /* ty=Tensor[(12, 8, 4), bool] */;
  %1448 = dyn.reshape(%1445, %1446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1449 = @func_16262() /* ty=(Tensor[(5, 7, 14), bool],) */;
  %1450 = greater(%1447, %1448) /* ty=Tensor[(12, 8, 4), bool] */;
  %1451 = %1449.0;
  (%1450, %1451)
}

def @func_14537() -> (Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64], Tensor[(8, 15, 1), float32]) {
  @func_14535() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(14, 3, 7), float64], Tensor[(8, 15, 1), float32]) */
}

def @func_16663() -> (Tensor[(5, 7, 14), bool], float64, float32, Tensor[(14, 10, 9), int64], float32) {
  %1470 = fn () -> (Tensor[(5, 7, 14), bool], float64, float32, Tensor[(14, 10, 9), int64], float32) {
    %1452 = @func_4372() /* ty=(Tensor[(5, 7, 14), bool],) */;
    %1453 = @func_7541() /* ty=(float32, float32) */;
    %1454 = cast(9.12315f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1455 = cast(meta[relay.Constant][45] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %1456 = reshape(%1454, newshape=[]) /* ty=float64 */;
    %1457 = reshape(%1455, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), float64] */;
    %1458 = @func_8054(%1456, %1457) /* ty=(Tensor[(14, 10, 9), float64],) */;
    %1459 = %1458.0;
    %1460 = cast(%1459, dtype="float32") /* ty=Tensor[(14, 10, 9), float32] */;
    %1461 = log2(%1460) /* ty=Tensor[(14, 10, 9), float32] */;
    %1462 = cast(meta[relay.Constant][45] /* ty=Tensor[(1260), float64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
    %1463 = shape_of(%1461, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1464 = cast(%1461, dtype="int64") /* ty=Tensor[(14, 10, 9), int64] */;
    %1465 = dyn.reshape(%1462, %1463, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1466 = %1452.0;
    %1467 = %1453.0;
    %1468 = maximum(%1464, %1465) /* ty=Tensor[(14, 10, 9), int64] */;
    %1469 = @func_1610() /* ty=float32 */;
    (%1466, 9.12315f64 /* ty=float64 */, %1467, %1468, %1469)
  };
  %1470() /* ty=(Tensor[(5, 7, 14), bool], float64, float32, Tensor[(14, 10, 9), int64], float32) */
}

def @func_10456() -> (float32,) {
  @func_10454() /* ty=(float32,) */
}

def @func_10352() -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  @func_10350() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_8503() -> Tensor[(154), float32] {
  %1472 = fn () -> Tensor[(154), float32] {
    %1471 = @func_4210() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float64], Tensor[(154), float32], float32) */;
    %1471.2
  };
  %1472() /* ty=Tensor[(154), float32] */
}

def @func_16515() -> (float32, Tensor[(42, 4), bool]) {
  %1476 = fn () -> (float32, Tensor[(42, 4), bool]) {
    %1473 = @func_8675() /* ty=(float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(42, 4), bool]) */;
    %1474 = @func_14375() /* ty=float32 */;
    %1475 = %1473.6;
    (%1474, %1475)
  };
  %1476() /* ty=(float32, Tensor[(42, 4), bool]) */
}

def @func_18128() -> float32 {
  %1478 = fn () -> float32 {
    %1477 = @func_15757() /* ty=(Tensor[(8, 15, 1), uint16], float32, Tensor[(5, 7, 14), bool]) */;
    %1477.1
  };
  %1478() /* ty=float32 */
}

def @func_13541(%var_13525: Tensor[(13, 6, 11), float32]) -> (Tensor[(13, 6, 11), float32], Tensor[(490), float32]) {
  %1479 = cast(%var_13525, dtype="float32") /* ty=Tensor[(13, 6, 11), float32] */;
  %1480 = @func_3959() /* ty=(Tensor[(490), float32],) */;
  %1481 = sigmoid(%1479) /* ty=Tensor[(13, 6, 11), float32] */;
  %1482 = %1480.0;
  (%1481, %1482)
}

def @main(%var_19071: Tensor[(14, 16, 4), float32]) -> Tensor[(14, 16, 4), int16] {
  %1483 = @func_12066() /* ty=float32 */;
  %1484 = cast(%1483, dtype="int16") /* ty=int16 */;
  %1485 = cast(%var_19071, dtype="int16") /* ty=Tensor[(14, 16, 4), int16] */;
  maximum(%1484, %1485) /* ty=Tensor[(14, 16, 4), int16] */
}

def @func_18903() -> (Tensor[(5, 7, 14), float32], Tensor[(11, 9, 12), float32], Tensor[(1188), float32]) {
  @func_18901() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(11, 9, 12), float32], Tensor[(1188), float32]) */
}

def @func_17592(%var_17590: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float32], Tensor[(5, 7, 14), float64]) {
  @func_17589(%var_17590) /* ty=(Tensor[(8, 6, 6), float32], Tensor[(5, 7, 14), float64]) */
}

def @func_4003(%var_4001: Tensor[(154), float32]) -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), float64], Tensor[(154), float32]) {
  %1486 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1487 = %1486.1;
  %1488 = cast(%1487, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %1489 = cast(%var_4001, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1490 = reshape(%1489, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1491 = @func_2288(%1490) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(1, 11, 14), float64], Tensor[(8, 15, 1), float32], Tensor[(480, 6), float64], float32, Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], float32) */;
  %1492 = asin(%1488) /* ty=Tensor[(5, 7, 14), float32] */;
  %1493 = %1491.5;
  (%1492, %1493, %var_4001)
}

def @func_5911() -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(154), float32], float32, Tensor[(154, 1), float32]) {
  %1506 = fn () -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(154), float32], float32, Tensor[(154, 1), float32]) {
    %1494 = @func_3870() /* ty=(float32,) */;
    %1495 = @func_3487() /* ty=(float32,) */;
    %1496 = cast(meta[relay.Constant][46] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %1497 = reshape(%1496, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
    %1498 = @func_1779(%1497) /* ty=(Tensor[(1, 11, 14), float64], Tensor[(5, 7, 14), bool]) */;
    %1499 = @func_4743() /* ty=(float32, float32) */;
    %1500 = @func_4139() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(8, 15, 154), uint8], Tensor[(154, 1), float32], float32, Tensor[(154, 1), float64]) */;
    %1501 = %1494.0;
    %1502 = %1495.0;
    %1503 = %1498.1;
    %1504 = %1499.0;
    %1505 = %1500.3;
    (%1501, %1502, %1503, meta[relay.Constant][46] /* ty=Tensor[(154), float32] */, %1504, %1505)
  };
  %1506() /* ty=(float32, float32, Tensor[(5, 7, 14), bool], Tensor[(154), float32], float32, Tensor[(154, 1), float32]) */
}

def @func_13099() -> Tensor[(490), bool] {
  %1507 = @func_3792() /* ty=(Tensor[(490), bool],) */;
  %1507.0
}

def @func_13205() -> (Tensor[(154), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %1514 = fn () -> (Tensor[(154), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
    %1508 = @func_11676() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(154), float32], Tensor[(168), float32]) */;
    %1509 = @func_10692() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
    %1510 = @func_6950() /* ty=(Tensor[(5, 7, 14), bool], float32, Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool]) */;
    %1511 = %1508.1;
    %1512 = %1509.2;
    %1513 = %1510.3;
    (%1511, %1512, %1513)
  };
  %1514() /* ty=(Tensor[(154), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_15709(%var_15700: Tensor[(308, 1), float32]) -> (float32, float32, Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool], Tensor[(308, 1), float32]) {
  %1515 = @func_13055() /* ty=(float32, float32) */;
  %1516 = @func_7935() /* ty=(float32,) */;
  %1517 = @func_6274() /* ty=(float32, Tensor[(5, 7, 14), bool]) */;
  %1518 = cast(%var_15700, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %1519 = reshape(%1518, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %1520 = @func_8200(%1519) /* ty=(Tensor[(490), bool], Tensor[(5, 7, 14), bool], Tensor[(154, 1), float32], Tensor[(154, 2), float32], Tensor[(5, 7, 14), bool]) */;
  %1521 = %1515.0;
  %1522 = %1516.0;
  %1523 = %1517.1;
  %1524 = %1520.1;
  (%1521, %1522, %1523, %1524, %var_15700)
}

def @func_14714(%var_14713: Tensor[(12, 5, 14), float32]) -> Tensor[(12, 5, 14), float32] {
  %1526 = fn (%var_14709: Tensor[(12, 5, 14), float32]) -> Tensor[(12, 5, 14), float32] {
    %1525 = cast(%var_14709, dtype="float32") /* ty=Tensor[(12, 5, 14), float32] */;
    tan(%1525) /* ty=Tensor[(12, 5, 14), float32] */
  };
  %1526(%var_14713) /* ty=Tensor[(12, 5, 14), float32] */
}

def @func_6354() -> (Tensor[(5, 7, 14), bool], Tensor[(8, 15, 1), uint16]) {
  %1527 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
  %1528 = @func_3748() /* ty=Tensor[(8, 15, 1), uint16] */;
  (%1527, %1528)
}

def @func_4990() -> Tensor[(5, 7, 14), bool] {
  %1529 = @func_3472() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
  %1529.0
}

def @func_3112() -> (Tensor[(8, 15, 1), float32],) {
  @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */
}

def @func_2930() -> Tensor[(5, 7, 14), bool] {
  @func_1525() /* ty=Tensor[(5, 7, 14), bool] */
}

def @func_8003() -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
  %1542 = fn () -> (Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) {
    %1530 = @func_6617() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */;
    %1531 = %1530.0;
    %1532 = cast(%1531, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %1533 = reshape(%1532, newshape=[490]) /* ty=Tensor[(490), bool] */;
    %1534 = @func_2335(%1533) /* ty=(float32, Tensor[(490), bool], Tensor[(5, 7, 14), float32]) */;
    %1535 = @func_4545() /* ty=(Tensor[(5, 7, 14), bool], float32) */;
    %1536 = @func_3855() /* ty=float32 */;
    %1537 = cast(%1531, dtype="bool") /* ty=Tensor[(5, 7, 14), bool] */;
    %1538 = cast(%1536, dtype="bool") /* ty=bool */;
    %1539 = %1534.2;
    %1540 = %1535.0;
    %1541 = equal(%1537, %1538) /* ty=Tensor[(5, 7, 14), bool] */;
    (%1539, %1540, %1541)
  };
  %1542() /* ty=(Tensor[(5, 7, 14), float32], Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), bool]) */
}

def @func_13269() -> (float32, float32) {
  %1543 = @func_7564() /* ty=(float32,) */;
  %1544 = @func_13055() /* ty=(float32, float32) */;
  %1545 = %1543.0;
  %1546 = %1544.1;
  (%1545, %1546)
}

def @func_18080() -> (Tensor[(1, 14, 10), float32], Tensor[(490), bool]) {
  %1551 = fn () -> (Tensor[(1, 14, 10), float32], Tensor[(490), bool]) {
    %1547 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 10), float32] */;
    %1548 = @func_6243() /* ty=(Tensor[(5, 7, 14), bool], Tensor[(490), bool]) */;
    %1549 = cos(%1547) /* ty=Tensor[(1, 14, 10), float32] */;
    %1550 = %1548.1;
    (%1549, %1550)
  };
  %1551() /* ty=(Tensor[(1, 14, 10), float32], Tensor[(490), bool]) */
}

def @func_5085(%var_5084: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), int16], Tensor[(5, 7, 14), bool]) {
  %1561 = fn (%var_5074: Tensor[(5, 7, 14), bool]) -> (Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), int16], Tensor[(5, 7, 14), bool]) {
    %1552 = @func_1838() /* ty=Tensor[(5, 7, 14), bool] */;
    %1553 = cast(%var_5074, dtype="int16") /* ty=Tensor[(5, 7, 14), int16] */;
    %1554 = shape_of(%1552, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1555 = cast(%1552, dtype="int16") /* ty=Tensor[(5, 7, 14), int16] */;
    %1556 = dyn.reshape(%1553, %1554, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1557 = @func_3686() /* ty=(Tensor[(5, 7, 14), float64], Tensor[(5, 7, 14), bool]) */;
    %1558 = @func_1525() /* ty=Tensor[(5, 7, 14), bool] */;
    %1559 = add(%1555, %1556) /* ty=Tensor[(5, 7, 14), int16] */;
    %1560 = %1557.1;
    (%1558, %1559, %1560)
  };
  %1561(%var_5084) /* ty=(Tensor[(5, 7, 14), bool], Tensor[(5, 7, 14), int16], Tensor[(5, 7, 14), bool]) */
}

def @func_10266() -> (Tensor[(8, 15, 1), float32],) {
  %1562 = @func_3110() /* ty=(Tensor[(8, 15, 1), float32],) */;
  %1563 = %1562.0;
  %1564 = cast(%1563, dtype="float32") /* ty=Tensor[(8, 15, 1), float32] */;
  %1565 = sin(%1564) /* ty=Tensor[(8, 15, 1), float32] */;
  (%1565,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen906/build/output.py", line 5859, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:42:57] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int

